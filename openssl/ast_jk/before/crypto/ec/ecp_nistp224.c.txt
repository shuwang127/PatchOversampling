TranslationUnitDecl 0x1653980e0c8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1653980e960 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1653980e660 '__int128'
|-TypedefDecl 0x1653980e9d0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1653980e680 'unsigned __int128'
|-TypedefDecl 0x1653980ed08 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1653980eac0 'struct __NSConstantString_tag'
|   `-Record 0x1653980ea28 '__NSConstantString_tag'
|-TypedefDecl 0x1653980ed78 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x1653980e2a0 'unsigned long long'
|-TypedefDecl 0x1653980ee10 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1653980edd0 'char *'
|   `-BuiltinType 0x1653980e160 'char'
|-TypedefDecl 0x1653980ee80 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1653980edd0 'char *'
|   `-BuiltinType 0x1653980e160 'char'
|-TypedefDecl 0x1653980ef40 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x1653980e2a0 'unsigned long long'
|-TypedefDecl 0x1653980efb0 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x1653980edd0 'char *'
|   `-BuiltinType 0x1653980e160 'char'
|-FunctionDecl 0x1653b27d420 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1653b27d4c0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x1653b27d530 <col:21> Implicit
|-FunctionDecl 0x1653b27d588 prev 0x1653b27d420 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1653b27d2b0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x1653b27d678 <col:21> Inherited Implicit
|-TypedefDecl 0x1653b27d6b8 prev 0x1653980ed78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x1653980e2a0 'unsigned long long'
|-TypedefDecl 0x1653b27d760 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x1653b27d730 'size_t' sugar
|   |-Typedef 0x1653b27d6b8 'size_t'
|   `-BuiltinType 0x1653980e2a0 'unsigned long long'
|-TypedefDecl 0x1653b27d7d0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x1653980e200 'long long'
|-TypedefDecl 0x1653b27d840 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x1653980e200 'long long'
|-TypedefDecl 0x1653b27d8b0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x1653980e240 'unsigned short'
|-TypedefDecl 0x1653b27d920 <line:541:1, col:24> col:24 wint_t 'unsigned short'
| `-BuiltinType 0x1653980e240 'unsigned short'
|-TypedefDecl 0x1653b27d990 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x1653980e240 'unsigned short'
|-TypedefDecl 0x1653b27da00 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x1653980e1c0 'int'
|-TypedefDecl 0x1653b27da70 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x1653980e1e0 'long'
|-TypedefDecl 0x1653b27dae0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x1653980e200 'long long'
|-TypedefDecl 0x1653b27db70 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x1653b27db40 '__time64_t' sugar
|   |-Typedef 0x1653b27dae0 '__time64_t'
|   `-BuiltinType 0x1653980e200 'long long'
|-FunctionDecl 0x1653b27dce8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x1653b27df08 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x1653b2a92c0 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x1653b27e048 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x1653b27e0c0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x1653b27e138 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x1653b27e1b8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x1653b2a9060 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x1653b2a93a0 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x1653b2a9460 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x1653b2a95d0 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x1653b2a9580 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x1653b2a9520 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x1653b2a9440 'struct threadlocaleinfostruct'
|       `-Record 0x1653b2ae0b0 'threadlocaleinfostruct'
|-TypedefDecl 0x1653b2a96e0 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x1653b2a9690 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x1653b2a9630 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x1653b2a9500 'struct threadmbcinfostruct'
|       `-Record 0x1653b2a9460 'threadmbcinfostruct'
|-RecordDecl 0x1653b2a9738 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x1653b2a97f0 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x1653b2a98b0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1653b2a9940 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x1653b2a99d0 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x1653b2a9a88 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x1653b2a9a30 'struct localeinfo_struct' sugar
|   `-RecordType 0x1653b2a9890 'struct localeinfo_struct'
|     `-Record 0x1653b2a97f0 'localeinfo_struct'
|-TypedefDecl 0x1653b2a9b60 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x1653b2a9b10 'struct localeinfo_struct *'
|   `-ElaboratedType 0x1653b2a9a30 'struct localeinfo_struct' sugar
|     `-RecordType 0x1653b2a9890 'struct localeinfo_struct'
|       `-Record 0x1653b2a97f0 'localeinfo_struct'
|-RecordDecl 0x1653b2a9bd8 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x1653b2a9c90 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1653b2a9d08 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x1653b2a9dc8 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x1653b2a9e60 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x1653b2a9ed0 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x1653b2a9f88 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x1653b2a9f30 'struct localerefcount' sugar
|   `-RecordType 0x1653b2a9c70 'struct localerefcount'
|     `-Record 0x1653b2a9bd8 'localerefcount'
|-RecordDecl 0x1653b2ae0b0 prev 0x1653b2a93a0 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x1653b2ae130 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1653b2ae1a8 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x1653b2ae218 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x1653b2ae288 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x1653b2ae2f8 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x1653b2ae4b8 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x1653b2ae528 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x1653b2ae598 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x1653b2ae608 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x1653b2ae678 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x1653b2ae6e8 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x1653b2ae740 parent 0x1653980e0c8 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x1653b2ae8d0 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x1653b2ae940 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x1653b2ae9b0 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x1653b2aea20 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x1653b2aeac0 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x1653b2aeb30 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x1653b2aec40 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x1653b2aed78 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x1653b2aee28 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x1653b2aedd0 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x1653b2a9440 'struct threadlocaleinfostruct'
|     `-Record 0x1653b2ae0b0 'threadlocaleinfostruct'
|-TypedefDecl 0x1653b2aeeb0 <D:\Microsoft Visual Studio 12.0\VC\include\stdint.h:8:1, col:28> col:28 int8_t 'signed char'
| `-BuiltinType 0x1653980e180 'signed char'
|-TypedefDecl 0x1653b2aef20 <line:9:1, col:28> col:28 int16_t 'short'
| `-BuiltinType 0x1653980e1a0 'short'
|-TypedefDecl 0x1653b2aef90 <line:10:1, col:28> col:28 referenced int32_t 'int'
| `-BuiltinType 0x1653980e1c0 'int'
|-TypedefDecl 0x1653b2af000 <line:11:1, col:28> col:28 referenced int64_t 'long long'
| `-BuiltinType 0x1653980e200 'long long'
|-TypedefDecl 0x1653b2af0c0 <line:12:1, col:28> col:28 referenced uint8_t 'unsigned char'
| `-BuiltinType 0x1653980e220 'unsigned char'
|-TypedefDecl 0x1653b2af130 <line:13:1, col:28> col:28 uint16_t 'unsigned short'
| `-BuiltinType 0x1653980e240 'unsigned short'
|-TypedefDecl 0x1653b2af1a0 <line:14:1, col:28> col:28 uint32_t 'unsigned int'
| `-BuiltinType 0x1653980e260 'unsigned int'
|-TypedefDecl 0x1653b2af210 <line:15:1, col:28> col:28 referenced uint64_t 'unsigned long long'
| `-BuiltinType 0x1653980e2a0 'unsigned long long'
|-TypedefDecl 0x1653b2af280 <line:17:1, col:28> col:28 int_least8_t 'signed char'
| `-BuiltinType 0x1653980e180 'signed char'
|-TypedefDecl 0x1653b2af2f0 <line:18:1, col:28> col:28 int_least16_t 'short'
| `-BuiltinType 0x1653980e1a0 'short'
|-TypedefDecl 0x1653b2af360 <line:19:1, col:28> col:28 int_least32_t 'int'
| `-BuiltinType 0x1653980e1c0 'int'
|-TypedefDecl 0x1653b2af3d0 <line:20:1, col:28> col:28 int_least64_t 'long long'
| `-BuiltinType 0x1653980e200 'long long'
|-TypedefDecl 0x1653b2af440 <line:21:1, col:28> col:28 uint_least8_t 'unsigned char'
| `-BuiltinType 0x1653980e220 'unsigned char'
|-TypedefDecl 0x1653b2af4b0 <line:22:1, col:28> col:28 uint_least16_t 'unsigned short'
| `-BuiltinType 0x1653980e240 'unsigned short'
|-TypedefDecl 0x1653b2af520 <line:23:1, col:28> col:28 uint_least32_t 'unsigned int'
| `-BuiltinType 0x1653980e260 'unsigned int'
|-TypedefDecl 0x1653b2af590 <line:24:1, col:28> col:28 uint_least64_t 'unsigned long long'
| `-BuiltinType 0x1653980e2a0 'unsigned long long'
|-TypedefDecl 0x1653b2af600 <line:26:1, col:28> col:28 int_fast8_t 'signed char'
| `-BuiltinType 0x1653980e180 'signed char'
|-TypedefDecl 0x1653b2af670 <line:27:1, col:28> col:28 int_fast16_t 'int'
| `-BuiltinType 0x1653980e1c0 'int'
|-TypedefDecl 0x1653b2af6e0 <line:28:1, col:28> col:28 int_fast32_t 'int'
| `-BuiltinType 0x1653980e1c0 'int'
|-TypedefDecl 0x1653b2af750 <line:29:1, col:28> col:28 int_fast64_t 'long long'
| `-BuiltinType 0x1653980e200 'long long'
|-TypedefDecl 0x1653b2af7c0 <line:30:1, col:28> col:28 uint_fast8_t 'unsigned char'
| `-BuiltinType 0x1653980e220 'unsigned char'
|-TypedefDecl 0x1653b2af830 <line:31:1, col:28> col:28 uint_fast16_t 'unsigned int'
| `-BuiltinType 0x1653980e260 'unsigned int'
|-TypedefDecl 0x1653b2af8a0 <line:32:1, col:28> col:28 uint_fast32_t 'unsigned int'
| `-BuiltinType 0x1653980e260 'unsigned int'
|-TypedefDecl 0x1653b2af910 <line:33:1, col:28> col:28 uint_fast64_t 'unsigned long long'
| `-BuiltinType 0x1653980e2a0 'unsigned long long'
|-TypedefDecl 0x1653b2af980 <line:53:1, col:28> col:28 intmax_t 'long long'
| `-BuiltinType 0x1653980e200 'long long'
|-TypedefDecl 0x1653b2af9f0 <line:54:1, col:28> col:28 uintmax_t 'unsigned long long'
| `-BuiltinType 0x1653980e2a0 'unsigned long long'
|-FunctionDecl 0x1653b2afe10 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:47:9, col:142> col:25 _memccpy 'void *(void *, const void *, int, size_t) __attribute__((cdecl))':'void *(void *, const void *, int, size_t)'
| |-ParmVarDecl 0x1653b2afa60 <col:69, col:76> col:76 _Dst 'void *'
| |-ParmVarDecl 0x1653b2afb10 <col:87, col:100> col:100 _Src 'const void *'
| |-ParmVarDecl 0x1653b2afb90 <col:111, col:115> col:115 _Val 'int'
| `-ParmVarDecl 0x1653b2afc08 <col:126, col:133> col:133 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1653b2b5248 <line:48:54> col:54 implicit memchr 'void *(const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1653b2b52e8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1653b2b5350 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1653b2b53b8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1653b2b5438 prev 0x1653b2b5248 <col:38, col:150> col:54 memchr 'void *(const void *, int, unsigned long long)'
| |-ParmVarDecl 0x1653b2aff00 <col:94, col:107> col:107 _Buf 'const void *'
| |-ParmVarDecl 0x1653b2aff80 <col:119, col:123> col:123 _Val 'int'
| `-ParmVarDecl 0x1653b2afff8 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1653b2b57f8 <line:49:24, col:162> col:40 _memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x1653b2b5520 <col:77, col:90> col:90 _Buf1 'const void *'
| |-ParmVarDecl 0x1653b2b55a0 <col:125, col:138> col:138 _Buf2 'const void *'
| `-ParmVarDecl 0x1653b2b5618 <col:150, col:157> col:157 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1653b2b5c80 <line:50:24, col:192> col:40 _memicmp_l 'int (const void *, const void *, size_t, _locale_t) __attribute__((cdecl))':'int (const void *, const void *, size_t, _locale_t)'
| |-ParmVarDecl 0x1653b2b58e0 <col:79, col:92> col:92 _Buf1 'const void *'
| |-ParmVarDecl 0x1653b2b5960 <col:127, col:140> col:140 _Buf2 'const void *'
| |-ParmVarDecl 0x1653b2b59d8 <col:152, col:159> col:159 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1653b2b5a70 <col:175, col:185> col:185 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1653b2b5f88 <line:51:32> col:32 implicit memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1653b2b6028 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1653b2b6090 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1653b2b7140 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1653b2b71c0 prev 0x1653b2b5f88 <col:16, col:144> col:32 memcmp 'int (const void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x1653b2b5d70 <col:63, col:76> col:76 _Buf1 'const void *'
| |-ParmVarDecl 0x1653b2b5df0 <col:107, col:120> col:120 _Buf2 'const void *'
| `-ParmVarDecl 0x1653b2b5e68 <col:132, col:139> col:139 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1653b2b7578 <line:55:17> col:17 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1653b2b7618 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1653b2b7680 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1653b2b76e8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1653b2b7768 prev 0x1653b2b7578 <col:1, col:127> col:17 used memcpy 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x1653b2b72a8 <col:54, col:61> col:61 _Dst 'void *'
| |-ParmVarDecl 0x1653b2b7328 <col:91, col:104> col:104 _Src 'const void *'
| `-ParmVarDecl 0x1653b2b73a0 <col:115, col:122> col:122 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1653b2b7c08 <line:57:9, col:191> col:26 memcpy_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x1653b2b7878 <col:82, col:89> col:89 _Dst 'void *'
| |-ParmVarDecl 0x1653b2b7910 <col:100, col:108> col:108 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1653b2b7990 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x1653b2b7a08 <col:174, col:182> col:182 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1653b2b7fc8 <line:94:25> col:25 implicit used memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1653b2b8068 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1653b2b80d0 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1653b2ba170 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1653b2ba1f0 prev 0x1653b2b7fc8 <col:9, col:107> col:25 used memset 'void *(void *, int, unsigned long long)'
| |-ParmVarDecl 0x1653b2b7cf8 <col:62, col:69> col:69 _Dst 'void *'
| |-ParmVarDecl 0x1653b2b7d78 <col:80, col:84> col:84 _Val 'int'
| `-ParmVarDecl 0x1653b2b7df0 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1653b2ba668 <line:98:57> col:57 implicit memccpy 'void *(void *, const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1653b2ba708 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1653b2ba770 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1653b2ba7d8 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1653b2ba840 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1653b2ba8c8 prev 0x1653b2ba668 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:98:187> col:57 memccpy 'void *(void *, const void *, int, unsigned long long)'
| |-ParmVarDecl 0x1653b2ba3b0 <col:95, col:102> col:102 _Dst 'void *'
| |-ParmVarDecl 0x1653b2ba430 <col:136, col:149> col:149 _Src 'const void *'
| |-ParmVarDecl 0x1653b2ba4b0 <col:160, col:164> col:164 _Val 'int'
| |-ParmVarDecl 0x1653b2ba528 <col:175, col:182> col:182 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1653b2ba988 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memccpy. See online help for details." ""
|-FunctionDecl 0x1653b2bad68 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:99:190> col:69 memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x1653b2bab50 <col:105, col:118> col:118 _Buf1 'const void *'
| |-ParmVarDecl 0x1653b2babd0 <col:153, col:166> col:166 _Buf2 'const void *'
| |-ParmVarDecl 0x1653b2bac48 <col:178, col:185> col:185 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1653b2bae20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memicmp. See online help for details." ""
|-FunctionDecl 0x1653b2b41b0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:105:40, col:144> col:56 _strset_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x1653b2baf48 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x1653b2bafc0 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1653b2bb040 <col:134, col:138> col:138 _Value 'int'
|-FunctionDecl 0x1653b2b4580 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:107:88 _strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x1653b2b4390 <col:108, col:114> col:114 _Dest 'char *'
| |-ParmVarDecl 0x1653b2b4410 <col:126, col:131> col:131 _Value 'int'
| `-DeprecatedAttr 0x1653b2b4630 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1653b2b4a40 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:109:40, col:158> col:56 strcpy_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x1653b2b4778 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x1653b2b47f0 <col:112, col:120> col:120 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1653b2b4870 <col:141, col:154> col:154 _Src 'const char *'
|-FunctionDecl 0x1653b2b4e10 <line:112:88> col:88 implicit strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1653b2b4eb0 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x1653b2b4f18 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1653b2b4f90 prev 0x1653b2b4e10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:112:88 strcpy 'char *(char *, const char *)'
| |-ParmVarDecl 0x1653b2b4c20 <col:142, col:148> col:148 _Dest 'char *'
| |-ParmVarDecl 0x1653b2b4ca0 <col:162, col:176> col:176 _Source 'const char *'
| `-DeprecatedAttr 0x1653b2b5040 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1653b2bd4b0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:114:40, col:161> col:56 strcat_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x1653b2bd2a0 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x1653b2bd318 <col:115, col:123> col:123 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1653b2bd398 <col:144, col:157> col:157 _Src 'const char *'
|-FunctionDecl 0x1653b2bd7d8 <line:118:88> col:88 implicit strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1653b2bd878 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x1653b2bd8e0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1653b2bd958 prev 0x1653b2bd7d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:118:88 strcat 'char *(char *, const char *)'
| |-ParmVarDecl 0x1653b2bd658 <col:170, col:176> col:176 _Dest 'char *'
| |-ParmVarDecl 0x1653b2bd6d8 <col:190, col:204> col:204 _Source 'const char *'
| `-DeprecatedAttr 0x1653b2bda08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1653b2bdd40 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:120:32> col:32 implicit strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x1653b2bdde0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1653b2bde48 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1653b2bdec0 prev 0x1653b2bdd40 <col:16, col:91> col:32 strcmp 'int (const char *, const char *)'
| |-ParmVarDecl 0x1653b2bdb50 <col:46, col:59> col:59 _Str1 'const char *'
| `-ParmVarDecl 0x1653b2bdbd0 <col:73, col:86> col:86 _Str2 'const char *'
|-FunctionDecl 0x1653b2be1b0 <line:121:32> col:32 implicit strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x1653b2be250 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1653b2be2c0 prev 0x1653b2be1b0 <col:16, col:63> col:32 strlen 'unsigned long long (const char *)'
| `-ParmVarDecl 0x1653b2bdfa0 <col:46, col:59> col:59 _Str 'const char *'
|-FunctionDecl 0x1653b2be5b8 <line:125:1, col:92> col:17 used strnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x1653b2be398 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x1653b2be410 <col:76, col:83> col:83 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1653b2be808 <line:127:16, line:133:1> line:130:19 strnlen_s 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' static inline
| |-ParmVarDecl 0x1653b2be698 <col:56, col:69> col:69 used _Str 'const char *'
| |-ParmVarDecl 0x1653b2be710 <col:80, col:87> col:87 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x1653b2beb38 <line:131:1, line:133:1>
|   `-ReturnStmt 0x1653b2beb28 <line:132:5, col:51>
|     `-ConditionalOperator 0x1653b2beaf8 <col:12, col:51> 'unsigned long long'
|       |-ParenExpr 0x1653b2be968 <col:12, col:20> 'int'
|       | `-BinaryOperator 0x1653b2be948 <col:13, col:19> 'int' '=='
|       |   |-ImplicitCastExpr 0x1653b2be918 <col:13> 'const char *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x1653b2be8d0 <col:13> 'const char *' lvalue ParmVar 0x1653b2be698 '_Str' 'const char *'
|       |   `-ImplicitCastExpr 0x1653b2be930 <col:19> 'const char *' <NullToPointer>
|       |     `-IntegerLiteral 0x1653b2be8f0 <col:19> 'int' 0
|       |-ImplicitCastExpr 0x1653b2beae0 <col:24> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x1653b2be988 <col:24> 'int' 0
|       `-CallExpr 0x1653b2bea80 <col:28, col:51> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x1653b2bea68 <col:28> 'size_t (*)(const char *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x1653b2be9b0 <col:28> 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' Function 0x1653b2be5b8 'strnlen' 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
|         |-ImplicitCastExpr 0x1653b2beab0 <col:36> 'const char *' <LValueToRValue>
|         | `-DeclRefExpr 0x1653b2be9d0 <col:36> 'const char *' lvalue ParmVar 0x1653b2be698 '_Str' 'const char *'
|         `-ImplicitCastExpr 0x1653b2beac8 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x1653b2be9f0 <col:42> 'size_t':'unsigned long long' lvalue ParmVar 0x1653b2be710 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x1653b2bee10 <line:136:28, col:209> col:44 memmove_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x1653b2beb68 <col:100, col:107> col:107 _Dst 'void *'
| |-ParmVarDecl 0x1653b2bebe0 <col:118, col:126> col:126 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1653b2bec60 <col:168, col:181> col:181 _Src 'const void *'
| `-ParmVarDecl 0x1653b2becd8 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1653b2bc190 <line:139:67> col:67 implicit memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1653b2bc230 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1653b2bc298 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1653b2bc300 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1653b2bc380 prev 0x1653b2bc190 <col:51, col:186> col:67 memmove 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x1653b2bef00 <col:109, col:116> col:116 _Dst 'void *'
| |-ParmVarDecl 0x1653b2bef80 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x1653b2beff8 <col:174, col:181> col:181 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1653b2bc5b8 <line:146:24, col:76> col:40 _strdup 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| `-ParmVarDecl 0x1653b2bc468 <col:59, col:72> col:72 _Src 'const char *'
|-FunctionDecl 0x1653b2bc880 <line:152:54> col:54 implicit strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x1653b2bc920 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1653b2bc988 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1653b2bca00 prev 0x1653b2bc880 <col:38, col:100> col:54 strchr 'char *(const char *, int)'
| |-ParmVarDecl 0x1653b2bc690 <col:68, col:81> col:81 _Str 'const char *'
| `-ParmVarDecl 0x1653b2bc710 <col:92, col:96> col:96 _Val 'int'
|-FunctionDecl 0x1653b2bcc60 <line:153:24, col:103> col:40 _stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1653b2bcae0 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x1653b2bcb60 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x1653b2bcec0 <line:154:24, col:103> col:40 _strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1653b2bcd40 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x1653b2bcdc0 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x1653b2bf2a8 <line:155:24, col:133> col:40 _stricmp_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x1653b2bcfa0 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x1653b2bd020 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x1653b2bd098 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1653b2bf510 <line:156:24, col:103> col:40 strcoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1653b2bf390 <col:56, col:69> col:69 _Str1 'const char *'
| `-ParmVarDecl 0x1653b2bf410 <col:84, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x1653b2bf808 <line:157:24, col:133> col:40 _strcoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x1653b2bf5f0 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x1653b2bf670 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x1653b2bf6e8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1653b2bfa70 <line:158:24, col:104> col:40 _stricoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1653b2bf8f0 <col:58, col:71> col:71 _Str1 'const char *'
| `-ParmVarDecl 0x1653b2bf970 <col:86, col:99> col:99 _Str2 'const char *'
|-FunctionDecl 0x1653b2bfd68 <line:159:24, col:134> col:40 _stricoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x1653b2bfb50 <col:60, col:73> col:73 _Str1 'const char *'
| |-ParmVarDecl 0x1653b2bfbd0 <col:88, col:101> col:101 _Str2 'const char *'
| `-ParmVarDecl 0x1653b2bfc48 <col:117, col:127> col:127 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1653b30af60 <line:160:24, col:167> col:40 _strncoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1653b2bfe50 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1653b2bfed0 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x1653b2bff48 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1653b30b3c0 <line:161:24, col:195> col:40 _strncoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1653b30b048 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1653b30b0c8 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x1653b30b140 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1653b30b1b8 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1653b30b6c8 <line:162:24, col:167> col:40 _strnicoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1653b30b4b0 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1653b30b530 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x1653b30b5a8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1653b30ba60 <line:163:24, col:196> col:40 _strnicoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1653b30b7b0 <col:80, col:93> col:93 _Str1 'const char *'
| |-ParmVarDecl 0x1653b30b830 <col:127, col:140> col:140 _Str2 'const char *'
| |-ParmVarDecl 0x1653b30b8a8 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1653b30b920 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1653b30bd78 <line:164:40> col:40 implicit strcspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x1653b30be18 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1653b30be80 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1653b308f40 prev 0x1653b30bd78 <col:24, col:104> col:40 strcspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x1653b30bb50 <col:56, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x1653b30bbd0 <col:83, col:96> col:96 _Control 'const char *'
|-FunctionDecl 0x1653b309200 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:165:118> col:77 _strerror 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x1653b309120 <col:98, col:111> col:111 _ErrMsg 'const char *'
| `-DeprecatedAttr 0x1653b3092a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1653b309680 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:166:28, col:155> col:44 _strerror_s 'errno_t (char *, size_t, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *)'
| |-ParmVarDecl 0x1653b3093f0 <col:85, col:92> col:92 _Buf 'char *'
| |-ParmVarDecl 0x1653b309468 <col:103, col:110> col:110 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1653b3094e8 <col:135, col:148> col:148 _ErrMsg 'const char *'
|-FunctionDecl 0x1653b309998 <line:168:76> col:76 implicit strerror 'char *(int)' extern
| `-ParmVarDecl 0x1653b309a38 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1653b309aa8 prev 0x1653b309998 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:168:93> col:76 strerror 'char *(int)'
| |-ParmVarDecl 0x1653b309860 <col:90> col:93 'int'
| `-DeprecatedAttr 0x1653b309b50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1653b30bf70 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:170:28, col:139> col:44 strerror_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x1653b309c98 <col:84, col:91> col:91 _Buf 'char *'
| |-ParmVarDecl 0x1653b309d10 <col:102, col:109> col:109 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1653b309d90 <col:128, col:132> col:132 _ErrNum 'int'
|-FunctionDecl 0x1653b30c278 <line:173:28, col:109> col:44 _strlwr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x1653b30c058 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x1653b30c0d0 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1653b30c568 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:175:79 _strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1653b30c418 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x1653b30c610 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1653b30ca20 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:176:28, col:139> col:44 _strlwr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1653b30c758 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x1653b30c7d0 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1653b30c848 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1653b30cdf0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:178:82 _strlwr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x1653b30cbc8 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x1653b30cc40 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1653b30cea0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1653b30d3f8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:180:40, col:206> col:56 strncat_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x1653b30d080 <col:98, col:105> col:105 _Dst 'char *'
| |-ParmVarDecl 0x1653b30d0f8 <col:116, col:124> col:124 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1653b30d178 <col:165, col:178> col:178 _Src 'const char *'
| `-ParmVarDecl 0x1653b30d1f0 <col:189, col:197> col:197 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1653b30d878 <line:186:83> col:83 implicit strncat 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1653b30d918 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1653b30d980 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1653b30d9e8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1653b30da68 prev 0x1653b30d878 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:186:83 strncat 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1653b30d5a8 <col:161, col:167> col:167 _Dest 'char *'
| |-ParmVarDecl 0x1653b30d628 <col:198, col:212> col:212 _Source 'const char *'
| |-ParmVarDecl 0x1653b30d6a0 <col:226, col:234> col:234 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1653b30db20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1653b30de80 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:188:40> col:40 implicit strncmp 'int (const char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1653b30df90 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1653b30dff8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1653b30e060 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1653b30e0e0 prev 0x1653b30de80 <col:24, col:163> col:40 strncmp 'int (const char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1653b30dc68 <col:75, col:88> col:88 _Str1 'const char *'
| |-ParmVarDecl 0x1653b30dce8 <col:122, col:135> col:135 _Str2 'const char *'
| `-ParmVarDecl 0x1653b30dd60 <col:147, col:154> col:154 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1653b30e3e0 <line:189:24, col:165> col:40 _strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1653b30e1c8 <col:77, col:90> col:90 _Str1 'const char *'
| |-ParmVarDecl 0x1653b30e248 <col:124, col:137> col:137 _Str2 'const char *'
| `-ParmVarDecl 0x1653b30e2c0 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1653b30e778 <line:190:24, col:195> col:40 _strnicmp_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1653b30e4c8 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1653b30e548 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x1653b30e5c0 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1653b30e638 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1653b30eb10 <line:192:40, col:203> col:56 strncpy_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x1653b30e868 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x1653b30e8e0 <col:113, col:121> col:121 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1653b30e960 <col:162, col:175> col:175 _Src 'const char *'
| `-ParmVarDecl 0x1653b30e9d8 <col:186, col:194> col:194 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1653b30eed8 <line:195:83> col:83 implicit strncpy 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1653b30efa0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1653b30f008 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1653b30f070 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1653b30f0f0 prev 0x1653b30eed8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:195:83 strncpy 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1653b30ecc0 <col:167, col:173> col:173 _Dest 'char *'
| |-ParmVarDecl 0x1653b30ed40 <col:204, col:218> col:218 _Source 'const char *'
| |-ParmVarDecl 0x1653b30edb8 <col:232, col:240> col:240 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1653b30f1a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1653b30f668 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:196:40, col:174> col:56 _strnset_s 'errno_t (char *, size_t, int, size_t) __attribute__((cdecl))':'errno_t (char *, size_t, int, size_t)'
| |-ParmVarDecl 0x1653b30f2f0 <col:99, col:106> col:106 _Str 'char *'
| |-ParmVarDecl 0x1653b30f368 <col:117, col:124> col:124 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1653b30f3e8 <col:143, col:147> col:147 _Val 'int'
| `-ParmVarDecl 0x1653b30f460 <col:158, col:165> col:165 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1653b30fae8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:198:83 _strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x1653b30f818 <col:163, col:169> col:169 _Dest 'char *'
| |-ParmVarDecl 0x1653b30f898 <col:181, col:186> col:186 _Val 'int'
| |-ParmVarDecl 0x1653b30f910 <col:197, col:205> col:205 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1653b30fba0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1653b30fed0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:199:54> col:54 implicit strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x1653b30ffb0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1653b310018 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1653b310090 prev 0x1653b30fed0 <col:38, col:116> col:54 strpbrk 'char *(const char *, const char *)'
| |-ParmVarDecl 0x1653b30fce8 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x1653b30fd68 <col:95, col:108> col:108 _Control 'const char *'
|-FunctionDecl 0x1653b3102f0 <line:200:54> col:54 implicit strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x1653b310390 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1653b3103f8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1653b310470 prev 0x1653b3102f0 <col:38, col:100> col:54 strrchr 'char *(const char *, int)'
| |-ParmVarDecl 0x1653b310170 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x1653b3101f0 <col:93, col:97> col:97 _Ch 'int'
|-FunctionDecl 0x1653b310630 <line:201:9, col:54> col:25 _strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| `-ParmVarDecl 0x1653b310550 <col:43, col:50> col:50 _Str 'char *'
|-FunctionDecl 0x1653b310880 <line:202:40> col:40 implicit strspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x1653b310920 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1653b310988 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1653b310a00 prev 0x1653b310880 <col:24, col:101> col:40 strspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x1653b310708 <col:54, col:67> col:67 _Str 'const char *'
| `-ParmVarDecl 0x1653b310788 <col:80, col:93> col:93 _Control 'const char *'
|-FunctionDecl 0x1653b310c60 <line:203:70> col:70 implicit strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x1653b310d00 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1653b310d68 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1653b310de0 prev 0x1653b310c60 <col:54, col:130> col:70 strstr 'char *(const char *, const char *)'
| |-ParmVarDecl 0x1653b310ae0 <col:84, col:97> col:97 _Str 'const char *'
| `-ParmVarDecl 0x1653b310b60 <col:110, col:123> col:123 _SubStr 'const char *'
|-FunctionDecl 0x1653b30a0d0 <line:204:74> col:74 implicit strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1653b30a170 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x1653b30a1d8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1653b30a250 prev 0x1653b30a0d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:204:134> col:74 strtok 'char *(char *, const char *)'
| |-ParmVarDecl 0x1653b309f50 <col:95, col:102> col:102 _Str 'char *'
| |-ParmVarDecl 0x1653b309fd0 <col:115, col:128> col:128 _Delim 'const char *'
| `-DeprecatedAttr 0x1653b30a300 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1653b30a6e8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:206:36, col:162> col:52 strtok_s 'char *(char *, const char *, char **) __attribute__((cdecl))':'char *(char *, const char *, char **)'
| |-ParmVarDecl 0x1653b30a448 <col:75, col:82> col:82 _Str 'char *'
| |-ParmVarDecl 0x1653b30a4c8 <col:95, col:108> col:108 _Delim 'const char *'
| `-ParmVarDecl 0x1653b30a548 <col:146, col:154> col:154 _Context 'char **'
|-FunctionDecl 0x1653b30a940 <line:208:28, col:109> col:44 _strupr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x1653b30a7d0 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x1653b30a848 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1653b30abc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:210:79 _strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1653b30aae0 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x1653b30ac68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1653b315068 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:211:28, col:130> col:44 _strupr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1653b30adb0 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x1653b30ae28 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1653b30aea0 <col:113, col:123> col:123 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1653b315388 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:213:82 _strupr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x1653b315210 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x1653b315288 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1653b315438 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1653b315850 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:214:44> col:44 implicit strxfrm 'unsigned long long (char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1653b3158f0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1653b315958 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1653b3159c0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1653b315a40 prev 0x1653b315850 <col:28, col:155> col:44 strxfrm 'unsigned long long (char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1653b315580 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x1653b315600 <col:115, col:128> col:128 _Src 'const char *'
| `-ParmVarDecl 0x1653b315678 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1653b315e98 <line:215:28, col:185> col:44 _strxfrm_l 'size_t (char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1653b315b28 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x1653b315ba8 <col:117, col:130> col:130 _Src 'const char *'
| |-ParmVarDecl 0x1653b315c20 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1653b315c98 <col:168, col:178> col:178 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1653b312168 <line:245:71> col:71 implicit strdup 'char *(const char *)' extern
| `-ParmVarDecl 0x1653b312208 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1653b312278 prev 0x1653b312168 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:245:106> col:71 strdup 'char *(const char *)'
| |-ParmVarDecl 0x1653b312088 <col:89, col:102> col:102 _Src 'const char *'
| `-DeprecatedAttr 0x1653b312320 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strdup. See online help for details." ""
|-FunctionDecl 0x1653b312668 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:252:129> col:69 strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1653b3124e8 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x1653b312568 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x1653b312718 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strcmpi. See online help for details." ""
|-FunctionDecl 0x1653b312a60 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:253:129> col:69 stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1653b3128e0 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x1653b312960 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x1653b312b10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details." ""
|-FunctionDecl 0x1653b312db8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:254:84> col:56 strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1653b312cd8 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x1653b312e60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strlwr. See online help for details." ""
|-FunctionDecl 0x1653b3162e0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:255:193> col:70 strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1653b3160c8 <col:106, col:119> col:119 _Str1 'const char *'
| |-ParmVarDecl 0x1653b316148 <col:153, col:166> col:166 _Str 'const char *'
| |-ParmVarDecl 0x1653b3161c0 <col:177, col:184> col:184 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1653b316398 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnicmp. See online help for details." ""
|-FunctionDecl 0x1653b316778 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:256:143> col:57 strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x1653b316560 <col:94, col:101> col:101 _Str 'char *'
| |-ParmVarDecl 0x1653b3165e0 <col:112, col:116> col:116 _Val 'int'
| |-ParmVarDecl 0x1653b316658 <col:127, col:134> col:134 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1653b316830 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnset. See online help for details." ""
|-FunctionDecl 0x1653b316ad8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:257:84> col:56 strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1653b3169f8 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x1653b316b80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strrev. See online help for details." ""
|-FunctionDecl 0x1653b316ec8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:258:99> col:56 strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x1653b316d48 <col:73, col:80> col:80 _Str 'char *'
| |-ParmVarDecl 0x1653b316dc8 <col:91, col:95> col:95 _Val 'int'
| `-DeprecatedAttr 0x1653b316f78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strset. See online help for details." ""
|-FunctionDecl 0x1653b314250 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:259:84> col:56 strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1653b314170 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x1653b3142f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strupr. See online help for details." ""
|-FunctionDecl 0x1653b314590 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:273:24, col:77> col:42 _wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| `-ParmVarDecl 0x1653b314418 <col:57, col:73> col:73 _Str 'const wchar_t *'
|-FunctionDecl 0x1653b314920 <line:280:40, col:167> col:56 wcscat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x1653b314660 <col:97, col:107> col:107 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1653b3146d8 <col:118, col:126> col:126 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1653b314750 <col:147, col:163> col:163 _Src 'const wchar_t *'
|-FunctionDecl 0x1653b314cd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:284:82 wcscat 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1653b314ac0 <col:164, col:173> col:173 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1653b314b38 <col:187, col:204> col:204 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x1653b314d88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1653b318138 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:288:41> col:41 implicit wcschr 'unsigned short *(const unsigned short *, unsigned short)' extern
| |-ParmVarDecl 0x1653b3181d8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x1653b318240 <<invalid sloc>> <invalid sloc> 'unsigned short'
|-FunctionDecl 0x1653b3182b8 prev 0x1653b318138 <col:23, col:88> col:41 wcschr 'unsigned short *(const unsigned short *, unsigned short)'
| |-ParmVarDecl 0x1653b314ec8 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1653b314f40 <col:77, col:85> col:85 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1653b3185b0 <line:289:36> col:36 implicit wcscmp 'int (const unsigned short *, const unsigned short *)' extern
| |-ParmVarDecl 0x1653b318650 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x1653b3186b8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x1653b318730 prev 0x1653b3185b0 <col:24, col:101> col:36 wcscmp 'int (const unsigned short *, const unsigned short *)'
| |-ParmVarDecl 0x1653b318390 <col:50, col:66> col:66 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1653b318408 <col:80, col:96> col:96 _Str2 'const wchar_t *'
|-FunctionDecl 0x1653b318a10 <line:291:40, col:164> col:56 wcscpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x1653b318808 <col:94, col:104> col:104 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1653b318880 <col:115, col:123> col:123 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1653b3188f8 <col:144, col:160> col:160 _Src 'const wchar_t *'
|-FunctionDecl 0x1653b318d20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:294:82 wcscpy 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1653b318bb0 <col:136, col:145> col:145 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1653b318c28 <col:159, col:176> col:176 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x1653b318dd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1653b3130e8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:295:24, col:107> col:39 wcscspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1653b318f10 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1653b318f88 <col:83, col:99> col:99 _Control 'const wchar_t *'
|-FunctionDecl 0x1653b313330 <line:296:39> col:39 implicit wcslen 'unsigned long long (const unsigned short *)' extern
| `-ParmVarDecl 0x1653b3133d0 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x1653b313440 prev 0x1653b313330 <col:24, col:73> col:39 wcslen 'unsigned long long (const unsigned short *)'
| `-ParmVarDecl 0x1653b3131c0 <col:53, col:69> col:69 _Str 'const wchar_t *'
|-FunctionDecl 0x1653b313728 <line:300:1, col:94> col:16 used wcsnlen 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
| |-ParmVarDecl 0x1653b313510 <col:51, col:67> col:67 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1653b313588 <col:78, col:85> col:85 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1653b313970 <line:302:16, line:308:1> line:305:18 wcsnlen_s 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' static inline
| |-ParmVarDecl 0x1653b313800 <col:55, col:71> col:71 used _Src 'const wchar_t *'
| |-ParmVarDecl 0x1653b313878 <col:82, col:89> col:89 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x1653b313d08 <line:306:1, line:308:1>
|   `-ReturnStmt 0x1653b313cf8 <line:307:5, col:56>
|     `-ConditionalOperator 0x1653b313cc8 <col:12, col:56> 'unsigned long long'
|       |-ParenExpr 0x1653b313b30 <col:12, col:25> 'int'
|       | `-BinaryOperator 0x1653b313b10 <col:13, line:36:27> 'int' '=='
|       |   |-ImplicitCastExpr 0x1653b313ae0 <line:307:13> 'const wchar_t *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x1653b313a38 <col:13> 'const wchar_t *' lvalue ParmVar 0x1653b313800 '_Src' 'const wchar_t *'
|       |   `-ImplicitCastExpr 0x1653b313af8 <line:36:17, col:27> 'const wchar_t *' <BitCast>
|       |     `-ParenExpr 0x1653b313ac0 <col:17, col:27> 'void *'
|       |       `-CStyleCastExpr 0x1653b313a98 <col:18, col:26> 'void *' <NullToPointer>
|       |         `-IntegerLiteral 0x1653b313a58 <col:26> 'int' 0
|       |-ImplicitCastExpr 0x1653b313cb0 <line:307:29> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x1653b313b50 <col:29> 'int' 0
|       `-CallExpr 0x1653b313c50 <col:33, col:56> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x1653b313c38 <col:33> 'size_t (*)(const wchar_t *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x1653b313b78 <col:33> 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' Function 0x1653b313728 'wcsnlen' 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
|         |-ImplicitCastExpr 0x1653b313c80 <col:41> 'const wchar_t *' <LValueToRValue>
|         | `-DeclRefExpr 0x1653b313b98 <col:41> 'const wchar_t *' lvalue ParmVar 0x1653b313800 '_Src' 'const wchar_t *'
|         `-ImplicitCastExpr 0x1653b313c98 <col:47> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x1653b313bb8 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x1653b313878 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x1653b31f188 <line:311:40, col:212> col:56 wcsncat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x1653b313d30 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1653b313da8 <col:119, col:127> col:127 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1653b313e20 <col:168, col:184> col:184 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1653b313e98 <col:195, col:203> col:203 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1653b31f5f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:316:86 wcsncat 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1653b31f330 <col:167, col:176> col:176 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1653b31f3a8 <col:207, col:224> col:224 _Source 'const wchar_t *'
| |-ParmVarDecl 0x1653b31f420 <col:238, col:246> col:246 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1653b31f6a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1653b31fab8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:318:36> col:36 implicit wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)' extern
| |-ParmVarDecl 0x1653b31fb58 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| |-ParmVarDecl 0x1653b31fbc0 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x1653b31fc28 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1653b31fca8 prev 0x1653b31fab8 <col:24, col:165> col:36 wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)'
| |-ParmVarDecl 0x1653b31f7e8 <col:71, col:87> col:87 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1653b31f860 <col:121, col:137> col:137 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1653b31f8d8 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1653b3200b0 <line:320:40, col:209> col:56 wcsncpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x1653b31fd88 <col:95, col:105> col:105 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1653b31fe00 <col:116, col:124> col:124 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1653b31fe78 <col:165, col:181> col:181 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1653b31fef0 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1653b320460 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:323:86 wcsncpy 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1653b320258 <col:179, col:188> col:188 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1653b3202d0 <col:219, col:236> col:236 _Source 'const wchar_t *'
| |-ParmVarDecl 0x1653b320348 <col:250, col:258> col:258 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1653b320518 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1653b320878 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:324:38, col:124> col:56 wcspbrk 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1653b320658 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1653b3206d0 <col:100, col:116> col:116 _Control 'const wchar_t *'
|-FunctionDecl 0x1653b320ac0 <line:325:38, col:109> col:56 wcsrchr 'wchar_t *(const wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(const wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1653b320950 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1653b3209c8 <col:98, col:106> col:106 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1653b320d08 <line:326:24, col:106> col:39 wcsspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1653b320b98 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1653b320c10 <col:82, col:98> col:98 _Control 'const wchar_t *'
|-FunctionDecl 0x1653b320f50 <line:329:23, col:107> col:41 wcsstr 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1653b320de0 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1653b320e58 <col:84, col:100> col:100 _SubStr 'const wchar_t *'
|-FunctionDecl 0x1653b319280 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:330:142> col:76 wcstok 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1653b319110 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x1653b319188 <col:120, col:136> col:136 _Delim 'const wchar_t *'
| `-DeprecatedAttr 0x1653b319330 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1653b319790 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:332:36, col:173> col:54 wcstok_s 'wchar_t *(wchar_t *, const wchar_t *, wchar_t **) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x1653b319470 <col:77, col:87> col:87 _Str 'wchar_t *'
| |-ParmVarDecl 0x1653b3194e8 <col:100, col:116> col:116 _Delim 'const wchar_t *'
| `-ParmVarDecl 0x1653b3195c0 <col:154, col:165> col:165 _Context 'wchar_t **'
|-FunctionDecl 0x1653b319ab0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:334:105> col:79 _wcserror 'wchar_t *(int) __attribute__((cdecl))':'wchar_t *(int)'
| |-ParmVarDecl 0x1653b319938 <col:94, col:98> col:98 _ErrNum 'int'
| `-DeprecatedAttr 0x1653b319b58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1653b319f60 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:335:28, col:147> col:44 _wcserror_s 'errno_t (wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, int)'
| |-ParmVarDecl 0x1653b319c98 <col:89, col:99> col:99 _Buf 'wchar_t *'
| |-ParmVarDecl 0x1653b319d10 <col:110, col:117> col:117 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1653b319d90 <col:136, col:140> col:140 _ErrNum 'int'
|-FunctionDecl 0x1653b3212a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:337:122> col:80 __wcserror 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x1653b3211c8 <col:102, col:118> col:118 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x1653b321348 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1653b321710 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:338:28, col:165> col:44 __wcserror_s 'errno_t (wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x1653b321488 <col:90, col:100> col:100 _Buffer 'wchar_t *'
| |-ParmVarDecl 0x1653b321500 <col:114, col:121> col:121 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1653b321578 <col:142, col:158> col:158 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x1653b321968 <line:341:24, col:103> col:36 _wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1653b3217f0 <col:52, col:68> col:68 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1653b321868 <col:82, col:98> col:98 _Str2 'const wchar_t *'
|-FunctionDecl 0x1653b321d08 <line:342:24, col:133> col:36 _wcsicmp_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1653b321a40 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1653b321ab8 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1653b321b30 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1653b321ff8 <line:343:24, col:167> col:36 _wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1653b321de8 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1653b321e60 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1653b321ed8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1653b31a3f0 <line:344:24, col:197> col:36 _wcsnicmp_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1653b31a078 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1653b31a0f0 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1653b31a168 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1653b31a1e0 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1653b31a848 <line:345:40, col:181> col:56 _wcsnset_s 'errno_t (wchar_t *, size_t, wchar_t, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t, size_t)'
| |-ParmVarDecl 0x1653b31a4d8 <col:99, col:109> col:109 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1653b31a550 <col:120, col:127> col:127 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1653b31a5c8 <col:146, col:154> col:154 _Val 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1653b31a640 <col:165, col:172> col:172 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1653b31acb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:347:86 _wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x1653b31a9f0 <col:172, col:181> col:181 _Str 'wchar_t *'
| |-ParmVarDecl 0x1653b31aa68 <col:187, col:196> col:196 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x1653b31aae0 <col:207, col:215> col:215 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1653b31ad68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1653b31b060 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:348:9, col:59> col:27 _wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| `-ParmVarDecl 0x1653b31aea8 <col:45, col:55> col:55 _Str 'wchar_t *'
|-FunctionDecl 0x1653b31b3f0 <line:349:40, col:159> col:56 _wcsset_s 'errno_t (wchar_t *, size_t, wchar_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t)'
| |-ParmVarDecl 0x1653b31b130 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1653b31b1a8 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1653b31b220 <col:145, col:153> col:153 _Value 'wchar_t':'unsigned short'
|-FunctionDecl 0x1653b31b7a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:351:85 _wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1653b31b590 <col:150, col:159> col:159 _Str 'wchar_t *'
| |-ParmVarDecl 0x1653b31b608 <col:165, col:174> col:174 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x1653b31b858 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1653b31bbb8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:353:28, col:126> col:44 _wcslwr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1653b31b998 <col:86, col:96> col:96 _Str 'wchar_t *'
| `-ParmVarDecl 0x1653b31ba10 <col:107, col:114> col:114 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1653b31be28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:355:82 _wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1653b31bd50 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x1653b31bed0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1653b322390 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:356:28, col:156> col:44 _wcslwr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1653b3220d0 <col:88, col:98> col:98 _Str 'wchar_t *'
| |-ParmVarDecl 0x1653b322148 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1653b3221c0 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1653b322748 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:358:85 _wcslwr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1653b322530 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x1653b3225a8 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1653b3227f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1653b322aa8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:359:28, col:112> col:44 _wcsupr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1653b322938 <col:79, col:89> col:89 _Str 'wchar_t *'
| `-ParmVarDecl 0x1653b3229b0 <col:100, col:107> col:107 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1653b322d18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:361:82 _wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1653b322c40 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x1653b322dc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1653b323120 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:362:28, col:142> col:44 _wcsupr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1653b322f00 <col:81, col:91> col:91 _Str 'wchar_t *'
| |-ParmVarDecl 0x1653b322f78 <col:102, col:109> col:109 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1653b322ff0 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1653b323430 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:364:85 _wcsupr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1653b3232c0 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x1653b323338 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1653b3234e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1653b3238e0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:365:28, col:159> col:43 wcsxfrm 'size_t (wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1653b323620 <col:93, col:103> col:103 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1653b323698 <col:116, col:132> col:132 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1653b323710 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1653b323d28 <line:366:28, col:189> col:43 _wcsxfrm_l 'size_t (wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1653b3239c0 <col:96, col:106> col:106 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1653b323a38 <col:119, col:134> col:134 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1653b323ab0 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1653b323b28 <col:172, col:182> col:182 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1653b323f88 <line:367:24, col:102> col:36 wcscoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1653b323e10 <col:51, col:67> col:67 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1653b323e88 <col:81, col:97> col:97 _Str2 'const wchar_t *'
|-FunctionDecl 0x1653b31d218 <line:368:24, col:133> col:36 _wcscoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1653b324060 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1653b31d080 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1653b31d0f8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1653b31d470 <line:369:24, col:104> col:36 _wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1653b31d2f8 <col:53, col:69> col:69 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1653b31d370 <col:83, col:99> col:99 _Str2 'const wchar_t *'
|-FunctionDecl 0x1653b31d758 <line:370:24, col:133> col:36 _wcsicoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1653b31d548 <col:55, col:71> col:71 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1653b31d5c0 <col:85, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1653b31d638 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1653b31da48 <line:371:24, col:167> col:36 _wcsncoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1653b31d838 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1653b31d8b0 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1653b31d928 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1653b31ddd0 <line:372:24, col:197> col:36 _wcsncoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1653b31db28 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1653b31dba0 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1653b31dc18 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1653b31dc90 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1653b31e0d8 <line:373:24, col:168> col:36 _wcsnicoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1653b31deb8 <col:74, col:90> col:90 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1653b31df30 <col:124, col:140> col:140 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1653b31dfa8 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1653b31e460 <line:374:24, col:198> col:36 _wcsnicoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1653b31e1b8 <col:76, col:92> col:92 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1653b31e230 <col:126, col:142> col:142 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1653b31e2a8 <col:154, col:161> col:161 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1653b31e320 <col:181, col:191> col:191 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1653b31e6c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:403:108> col:74 wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x1653b31e5e8 <col:88, col:104> col:104 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x1653b31e768 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsdup. See online help for details." ""
|-FunctionDecl 0x1653b31eaa0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:413:135> col:69 wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1653b31e928 <col:84, col:100> col:100 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1653b31e9a0 <col:114, col:130> col:130 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x1653b31eb50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicmp. See online help for details." ""
|-FunctionDecl 0x1653b31ef20 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:414:200> col:70 wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1653b31ed10 <col:106, col:122> col:122 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1653b31ed88 <col:156, col:172> col:172 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1653b31ee00 <col:184, col:191> col:191 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1653b31efd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnicmp. See online help for details." ""
|-FunctionDecl 0x1653b31c3f0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:415:153> col:60 wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x1653b31c1e8 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x1653b31c260 <col:118, col:126> col:126 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x1653b31c2d8 <col:137, col:144> col:144 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1653b31c4a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnset. See online help for details." ""
|-FunctionDecl 0x1653b31c740 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:416:90> col:59 wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1653b31c668 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1653b31c7e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsrev. See online help for details." ""
|-FunctionDecl 0x1653b31cb18 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:417:104> col:59 wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1653b31c9a8 <col:76, col:86> col:86 _Str 'wchar_t *'
| |-ParmVarDecl 0x1653b31ca20 <col:92, col:100> col:100 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x1653b31cbc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsset. See online help for details." ""
|-FunctionDecl 0x1653b31ce60 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:418:90> col:59 wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1653b31cd88 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1653b31cf08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcslwr. See online help for details." ""
|-FunctionDecl 0x1653b324278 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:419:90> col:59 wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1653b3241a0 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1653b324320 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsupr. See online help for details." ""
|-FunctionDecl 0x1653b324658 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:420:137> col:70 wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1653b3244e0 <col:86, col:102> col:102 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1653b324558 <col:116, col:132> col:132 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x1653b324708 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicoll. See online help for details." ""
|-TypedefDecl 0x1653b324a08 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:52:1, col:24> col:24 referenced _onexit_t 'int (*)(void) __attribute__((cdecl))'
| `-PointerType 0x1653b3249a0 'int (*)(void) __attribute__((cdecl))'
|   `-AttributedType 0x1653b324940 'int (void) __attribute__((cdecl))' sugar
|     |-ParenType 0x1653b3248f0 'int (void)' sugar
|     | `-FunctionProtoType 0x1653b3248c0 'int (void)' cdecl
|     |   `-BuiltinType 0x1653980e1c0 'int'
|     `-ParenType 0x1653b3248f0 'int (void)' sugar
|       `-FunctionProtoType 0x1653b3248c0 'int (void)' cdecl
|         `-BuiltinType 0x1653980e1c0 'int'
|-RecordDecl 0x1653b324a60 <line:75:9, line:78:1> line:75:16 struct _div_t definition
| |-MaxFieldAlignmentAttr 0x1653b324b20 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1653b324b98 <line:76:9, col:13> col:13 quot 'int'
| `-FieldDecl 0x1653b324c08 <line:77:9, col:13> col:13 rem 'int'
|-TypedefDecl 0x1653b324cb8 <line:75:1, line:78:3> col:3 referenced div_t 'struct _div_t':'struct _div_t'
| `-ElaboratedType 0x1653b324c60 'struct _div_t' sugar
|   `-RecordType 0x1653b324b00 'struct _div_t'
|     `-Record 0x1653b324a60 '_div_t'
|-RecordDecl 0x1653b324d28 <line:80:9, line:83:1> line:80:16 struct _ldiv_t definition
| |-MaxFieldAlignmentAttr 0x1653b324de0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1653b324e58 <line:81:9, col:14> col:14 quot 'long'
| `-FieldDecl 0x1653b324ec8 <line:82:9, col:14> col:14 rem 'long'
|-TypedefDecl 0x1653b324f78 <line:80:1, line:83:3> col:3 referenced ldiv_t 'struct _ldiv_t':'struct _ldiv_t'
| `-ElaboratedType 0x1653b324f20 'struct _ldiv_t' sugar
|   `-RecordType 0x1653b324dc0 'struct _ldiv_t'
|     `-Record 0x1653b324d28 '_ldiv_t'
|-RecordDecl 0x1653b324fe8 <line:85:9, line:88:1> line:85:16 struct _lldiv_t definition
| |-MaxFieldAlignmentAttr 0x1653b3250a0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1653b331028 <line:86:9, col:19> col:19 quot 'long long'
| `-FieldDecl 0x1653b331098 <line:87:9, col:19> col:19 rem 'long long'
|-TypedefDecl 0x1653b331148 <line:85:1, line:88:3> col:3 referenced lldiv_t 'struct _lldiv_t':'struct _lldiv_t'
| `-ElaboratedType 0x1653b3310f0 'struct _lldiv_t' sugar
|   `-RecordType 0x1653b325080 'struct _lldiv_t'
|     `-Record 0x1653b324fe8 '_lldiv_t'
|-RecordDecl 0x1653b3311e0 <line:103:9, line:105:1> line:103:9 struct definition
| |-MaxFieldAlignmentAttr 0x1653b3312a0 <<invalid sloc>> Implicit 32
| `-FieldDecl 0x1653b3313a0 <line:104:5, col:24> col:19 ld 'unsigned char [10]'
|-TypedefDecl 0x1653b331458 <line:103:1, line:105:3> col:3 referenced _LDOUBLE 'struct _LDOUBLE':'_LDOUBLE'
| `-ElaboratedType 0x1653b331400 'struct _LDOUBLE' sugar
|   `-RecordType 0x1653b331280 '_LDOUBLE'
|     `-Record 0x1653b3311e0 ''
|-RecordDecl 0x1653b3314c8 <line:122:9, line:124:1> line:122:9 struct definition
| `-FieldDecl 0x1653b331598 <line:123:9, col:16> col:16 x 'double'
|-TypedefDecl 0x1653b331648 <line:122:1, line:124:3> col:3 referenced _CRT_DOUBLE 'struct _CRT_DOUBLE':'_CRT_DOUBLE'
| `-ElaboratedType 0x1653b3315f0 'struct _CRT_DOUBLE' sugar
|   `-RecordType 0x1653b331560 '_CRT_DOUBLE'
|     `-Record 0x1653b3314c8 ''
|-RecordDecl 0x1653b3316b8 <line:126:9, line:128:1> line:126:9 struct definition
| `-FieldDecl 0x1653b331788 <line:127:5, col:11> col:11 f 'float'
|-TypedefDecl 0x1653b331838 <line:126:1, line:128:3> col:3 referenced _CRT_FLOAT 'struct _CRT_FLOAT':'_CRT_FLOAT'
| `-ElaboratedType 0x1653b3317e0 'struct _CRT_FLOAT' sugar
|   `-RecordType 0x1653b331750 '_CRT_FLOAT'
|     `-Record 0x1653b3316b8 ''
|-RecordDecl 0x1653b3318a8 <line:134:9, line:139:1> line:134:9 struct definition
| `-FieldDecl 0x1653b331978 <line:138:9, col:21> col:21 x 'long double'
|-TypedefDecl 0x1653b331a28 <line:134:1, line:139:3> col:3 _LONGDOUBLE 'struct _LONGDOUBLE':'_LONGDOUBLE'
| `-ElaboratedType 0x1653b3319d0 'struct _LONGDOUBLE' sugar
|   `-RecordType 0x1653b331940 '_LONGDOUBLE'
|     `-Record 0x1653b3318a8 ''
|-RecordDecl 0x1653b331ac0 <line:144:9, line:146:1> line:144:9 struct definition
| |-MaxFieldAlignmentAttr 0x1653b331b80 <<invalid sloc>> Implicit 32
| `-FieldDecl 0x1653b331c80 <line:145:5, col:26> col:19 ld12 'unsigned char [12]'
|-TypedefDecl 0x1653b331d38 <line:144:1, line:146:3> col:3 _LDBL12 'struct _LDBL12':'_LDBL12'
| `-ElaboratedType 0x1653b331ce0 'struct _LDBL12' sugar
|   `-RecordType 0x1653b331b60 '_LDBL12'
|     `-Record 0x1653b331ac0 ''
|-VarDecl 0x1653b331dc0 <line:170:9, col:20> col:20 __mb_cur_max 'int' extern
|-FunctionDecl 0x1653b331f40 <line:175:9, col:44> col:21 ___mb_cur_max_func 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1653b333188 <line:176:9, col:51> col:21 ___mb_cur_max_l_func 'int (_locale_t) __attribute__((cdecl))':'int (_locale_t)'
| `-ParmVarDecl 0x1653b333028 <col:42> col:51 '_locale_t':'struct localeinfo_struct *'
|-TypedefDecl 0x1653b3333d0 <line:215:1, col:24> col:24 referenced _purecall_handler 'void (*)(void) __attribute__((cdecl))'
| `-PointerType 0x1653b333370 'void (*)(void) __attribute__((cdecl))'
|   `-AttributedType 0x1653b333310 'void (void) __attribute__((cdecl))' sugar
|     |-ParenType 0x1653b3332c0 'void (void)' sugar
|     | `-FunctionProtoType 0x1653b27dc40 'void (void)' cdecl
|     |   `-BuiltinType 0x1653980e120 'void'
|     `-ParenType 0x1653b3332c0 'void (void)' sugar
|       `-FunctionProtoType 0x1653b27dc40 'void (void)' cdecl
|         `-BuiltinType 0x1653980e120 'void'
|-FunctionDecl 0x1653b3335d0 <line:218:9, col:92> col:35 _set_purecall_handler '_purecall_handler (_purecall_handler) __attribute__((cdecl))':'_purecall_handler (_purecall_handler)'
| `-ParmVarDecl 0x1653b333460 <col:66, col:84> col:84 _Handler '_purecall_handler':'void (*)(void) __attribute__((cdecl))'
|-FunctionDecl 0x1653b3337e8 <line:219:9, col:61> col:35 _get_purecall_handler '_purecall_handler (void) __attribute__((cdecl))':'_purecall_handler (void)'
|-TypedefDecl 0x1653b333c38 <line:235:1, col:24> col:24 referenced _invalid_parameter_handler 'void (*)(const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((cdecl))'
| `-PointerType 0x1653b333bb0 'void (*)(const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((cdecl))'
|   `-AttributedType 0x1653b333b50 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((cdecl))' sugar
|     |-ParenType 0x1653b333b00 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t)' sugar
|     | `-FunctionProtoType 0x1653b2a9120 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t)' cdecl
|     |   |-BuiltinType 0x1653980e120 'void'
|     |   |-PointerType 0x1653b27e010 'const wchar_t *'
|     |   | `-QualType 0x1653b27dfc1 'const wchar_t' const
|     |   |   `-TypedefType 0x1653b27dfc0 'wchar_t' sugar
|     |   |     |-Typedef 0x1653b27d8b0 'wchar_t'
|     |   |     `-BuiltinType 0x1653980e240 'unsigned short'
|     |   |-PointerType 0x1653b27e010 'const wchar_t *'
|     |   | `-QualType 0x1653b27dfc1 'const wchar_t' const
|     |   |   `-TypedefType 0x1653b27dfc0 'wchar_t' sugar
|     |   |     |-Typedef 0x1653b27d8b0 'wchar_t'
|     |   |     `-BuiltinType 0x1653980e240 'unsigned short'
|     |   |-PointerType 0x1653b27e010 'const wchar_t *'
|     |   | `-QualType 0x1653b27dfc1 'const wchar_t' const
|     |   |   `-TypedefType 0x1653b27dfc0 'wchar_t' sugar
|     |   |     |-Typedef 0x1653b27d8b0 'wchar_t'
|     |   |     `-BuiltinType 0x1653980e240 'unsigned short'
|     |   |-BuiltinType 0x1653980e260 'unsigned int'
|     |   `-TypedefType 0x1653b27e220 'uintptr_t' sugar
|     |     |-Typedef 0x1653980ef40 'uintptr_t'
|     |     `-BuiltinType 0x1653980e2a0 'unsigned long long'
|     `-ParenType 0x1653b333b00 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t)' sugar
|       `-FunctionProtoType 0x1653b2a9120 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t)' cdecl
|         |-BuiltinType 0x1653980e120 'void'
|         |-PointerType 0x1653b27e010 'const wchar_t *'
|         | `-QualType 0x1653b27dfc1 'const wchar_t' const
|         |   `-TypedefType 0x1653b27dfc0 'wchar_t' sugar
|         |     |-Typedef 0x1653b27d8b0 'wchar_t'
|         |     `-BuiltinType 0x1653980e240 'unsigned short'
|         |-PointerType 0x1653b27e010 'const wchar_t *'
|         | `-QualType 0x1653b27dfc1 'const wchar_t' const
|         |   `-TypedefType 0x1653b27dfc0 'wchar_t' sugar
|         |     |-Typedef 0x1653b27d8b0 'wchar_t'
|         |     `-BuiltinType 0x1653980e240 'unsigned short'
|         |-PointerType 0x1653b27e010 'const wchar_t *'
|         | `-QualType 0x1653b27dfc1 'const wchar_t' const
|         |   `-TypedefType 0x1653b27dfc0 'wchar_t' sugar
|         |     |-Typedef 0x1653b27d8b0 'wchar_t'
|         |     `-BuiltinType 0x1653980e240 'unsigned short'
|         |-BuiltinType 0x1653980e260 'unsigned int'
|         `-TypedefType 0x1653b27e220 'uintptr_t' sugar
|           |-Typedef 0x1653980ef40 'uintptr_t'
|           `-BuiltinType 0x1653980e2a0 'unsigned long long'
|-FunctionDecl 0x1653b333e30 <line:238:9, col:119> col:44 _set_invalid_parameter_handler '_invalid_parameter_handler (_invalid_parameter_handler) __attribute__((cdecl))':'_invalid_parameter_handler (_invalid_parameter_handler)'
| `-ParmVarDecl 0x1653b333cc0 <col:84, col:111> col:111 _Handler '_invalid_parameter_handler':'void (*)(const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((cdecl))'
|-FunctionDecl 0x1653b334068 <line:239:9, col:79> col:44 _get_invalid_parameter_handler '_invalid_parameter_handler (void) __attribute__((cdecl))':'_invalid_parameter_handler (void)'
|-FunctionDecl 0x1653b334250 <line:245:9, col:41> col:30 _errno 'int *(void) __attribute__((cdecl))':'int *(void)' extern
|-FunctionDecl 0x1653b334490 <line:248:1, col:43> col:17 _set_errno 'errno_t (int) __attribute__((cdecl))':'errno_t (int)'
| `-ParmVarDecl 0x1653b334320 <col:33, col:37> col:37 _Value 'int'
|-FunctionDecl 0x1653b3346e0 <line:249:1, col:46> col:17 _get_errno 'errno_t (int *) __attribute__((cdecl))':'errno_t (int *)'
| `-ParmVarDecl 0x1653b334568 <col:34, col:40> col:40 _Value 'int *'
|-FunctionDecl 0x1653b334900 <line:252:9, col:48> col:33 __doserrno 'unsigned long *(void) __attribute__((cdecl))':'unsigned long *(void)'
|-FunctionDecl 0x1653b334b40 <line:255:1, col:56> col:17 _set_doserrno 'errno_t (unsigned long) __attribute__((cdecl))':'errno_t (unsigned long)'
| `-ParmVarDecl 0x1653b3349d0 <col:36, col:50> col:50 _Value 'unsigned long'
|-FunctionDecl 0x1653b334d90 <line:256:1, col:59> col:17 _get_doserrno 'errno_t (unsigned long *) __attribute__((cdecl))':'errno_t (unsigned long *)'
| `-ParmVarDecl 0x1653b334c18 <col:37, col:53> col:53 _Value 'unsigned long *'
|-FunctionDecl 0x1653b32cfd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:259:77> col:59 __sys_errlist 'char **(void) __attribute__((cdecl))':'char **(void)'
| `-DeprecatedAttr 0x1653b32d070 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1653b32d330 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:262:72> col:57 __sys_nerr 'int *(void) __attribute__((cdecl))':'int *(void)'
| `-DeprecatedAttr 0x1653b32d3d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-VarDecl 0x1653b32d518 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:288:9, col:20> col:20 __argc 'int' extern
|-VarDecl 0x1653b32d5b0 <line:289:9, col:24> col:24 __argv 'char **' extern
|-VarDecl 0x1653b32d648 <line:290:9, col:27> col:27 __wargv 'wchar_t **' extern
|-VarDecl 0x1653b32d6e0 <line:306:9, col:24> col:24 _environ 'char **' extern
|-VarDecl 0x1653b32d778 <line:307:9, col:27> col:27 _wenviron 'wchar_t **' extern
|-VarDecl 0x1653b32d8d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:311:68> col:68 _pgmptr 'char *' extern
| `-DeprecatedAttr 0x1653b32d938 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_pgmptr instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-VarDecl 0x1653b32db38 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:312:72> col:72 _wpgmptr 'wchar_t *' extern
| `-DeprecatedAttr 0x1653b32dba0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_wpgmptr instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1653b32de60 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:339:1, col:61> col:17 _get_pgmptr 'errno_t (char **) __attribute__((cdecl))':'errno_t (char **)'
| `-ParmVarDecl 0x1653b32dce8 <col:47, col:55> col:55 _Value 'char **'
|-FunctionDecl 0x1653b335130 <line:340:1, col:65> col:17 _get_wpgmptr 'errno_t (wchar_t **) __attribute__((cdecl))':'errno_t (wchar_t **)'
| `-ParmVarDecl 0x1653b32df38 <col:48, col:59> col:59 _Value 'wchar_t **'
|-VarDecl 0x1653b3352c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:346:64> col:64 _fmode 'int' extern
| `-DeprecatedAttr 0x1653b335330 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_fmode instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1653b335550 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:353:9, col:50> col:25 _set_fmode 'errno_t (int) __attribute__((cdecl))':'errno_t (int)'
| `-ParmVarDecl 0x1653b335478 <col:41, col:45> col:45 _Mode 'int'
|-FunctionDecl 0x1653b335700 <line:354:9, col:54> col:25 _get_fmode 'errno_t (int *) __attribute__((cdecl))':'errno_t (int *)'
| `-ParmVarDecl 0x1653b335628 <col:42, col:48> col:48 _PMode 'int *'
|-FunctionDecl 0x1653b335950 <line:376:43> col:43 implicit exit 'void (int) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x1653b3359f0 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1653b335a60 prev 0x1653b335950 <col:9, col:62> col:43 exit 'void (int) __attribute__((noreturn))'
| `-ParmVarDecl 0x1653b3357d8 <col:53, col:57> col:57 _Code 'int'
|-FunctionDecl 0x1653b335c10 <line:378:43> col:43 implicit _exit 'void (int) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x1653b335cb0 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1653b335d20 prev 0x1653b335c10 <col:9, col:63> col:43 _exit 'void (int) __attribute__((noreturn))'
| `-ParmVarDecl 0x1653b335b38 <col:54, col:58> col:58 _Code 'int'
|-FunctionDecl 0x1653b335ea8 <line:379:43> col:43 implicit abort 'void (void) __attribute__((noreturn))' extern
|-FunctionDecl 0x1653b335f48 prev 0x1653b335ea8 <col:9, col:53> col:43 abort 'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x1653b336220 <line:382:9, col:99> col:30 _set_abort_behavior 'unsigned int (unsigned int, unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int, unsigned int)'
| |-ParmVarDecl 0x1653b336030 <col:55, col:68> col:68 _Flags 'unsigned int'
| `-ParmVarDecl 0x1653b3360b0 <col:81, col:94> col:94 _Mask 'unsigned int'
|-FunctionDecl 0x1653b336418 <line:384:19> col:19 implicit abs 'int (int)' extern
| |-ParmVarDecl 0x1653b3364b8 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1653b336528 <col:19> Implicit
| `-ConstAttr 0x1653b336580 <col:19> Implicit
|-FunctionDecl 0x1653b3365a8 prev 0x1653b336418 <col:1, col:34> col:19 abs 'int (int)'
| |-ParmVarDecl 0x1653b336300 <col:28, col:32> col:32 _X 'int'
| |-NoThrowAttr 0x1653b336698 <col:19> Inherited Implicit
| `-ConstAttr 0x1653b3366c0 <col:19> Inherited Implicit
|-FunctionDecl 0x1653b336848 <line:385:19> col:19 implicit labs 'long (long)' extern
| |-ParmVarDecl 0x1653b3368e8 <<invalid sloc>> <invalid sloc> 'long'
| |-NoThrowAttr 0x1653b336958 <col:19> Implicit
| `-ConstAttr 0x1653b3369b0 <col:19> Implicit
|-FunctionDecl 0x1653b3369d8 prev 0x1653b336848 <col:1, col:36> col:19 labs 'long (long)'
| |-ParmVarDecl 0x1653b336700 <col:29, col:34> col:34 _X 'long'
| |-NoThrowAttr 0x1653b336ac8 <col:19> Inherited Implicit
| `-ConstAttr 0x1653b336af0 <col:19> Inherited Implicit
|-FunctionDecl 0x1653b336c78 <line:386:19> col:19 implicit llabs 'long long (long long)' extern
| |-ParmVarDecl 0x1653b336d18 <<invalid sloc>> <invalid sloc> 'long long'
| |-NoThrowAttr 0x1653b336d88 <col:19> Implicit
| `-ConstAttr 0x1653b336de0 <col:19> Implicit
|-FunctionDecl 0x1653b336e08 prev 0x1653b336c78 <col:1, col:42> col:19 llabs 'long long (long long)'
| |-ParmVarDecl 0x1653b336b30 <col:30, col:40> col:40 _X 'long long'
| |-NoThrowAttr 0x1653b336ef8 <col:19> Inherited Implicit
| `-ConstAttr 0x1653b336f20 <col:19> Inherited Implicit
|-FunctionDecl 0x1653b33d0a0 <line:388:9, col:42> col:28 _abs64 'long long (long long) __attribute__((cdecl))':'long long (long long)'
| `-ParmVarDecl 0x1653b336f60 <col:35> col:42 'long long'
|-FunctionDecl 0x1653b33d398 <line:426:9, col:53> col:24 atexit 'int (void (*)(void) __attribute__((cdecl))) __attribute__((cdecl))':'int (void (*)(void) __attribute__((cdecl)))'
| `-ParmVarDecl 0x1653b33d238 <col:31, col:45> col:46 'void (*)(void) __attribute__((cdecl))'
|-FunctionDecl 0x1653b33d5b8 <line:428:24, col:71> col:40 atof 'double (const char *) __attribute__((cdecl))':'double (const char *)'
| `-ParmVarDecl 0x1653b33d470 <col:52, col:64> col:64 _String 'const char *'
|-FunctionDecl 0x1653b33d8b0 <line:429:24, col:102> col:40 _atof_l 'double (const char *, _locale_t) __attribute__((cdecl))':'double (const char *, _locale_t)'
| |-ParmVarDecl 0x1653b33d690 <col:55, col:67> col:67 _String 'const char *'
| `-ParmVarDecl 0x1653b33d708 <col:85, col:95> col:95 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1653b33dad8 <line:430:43, col:86> col:58 atoi 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1653b33d990 <col:70, col:82> col:82 _Str 'const char *'
|-FunctionDecl 0x1653b33ddd0 <line:431:24, col:98> col:39 _atoi_l 'int (const char *, _locale_t) __attribute__((cdecl))':'int (const char *, _locale_t)'
| |-ParmVarDecl 0x1653b33dbb0 <col:54, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x1653b33dc28 <col:81, col:91> col:91 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1653b33dff8 <line:432:24, col:67> col:39 atol 'long (const char *) __attribute__((cdecl))':'long (const char *)'
| `-ParmVarDecl 0x1653b33deb0 <col:51, col:63> col:63 _Str 'const char *'
|-FunctionDecl 0x1653b3392b0 <line:433:24, col:98> col:39 _atol_l 'long (const char *, _locale_t) __attribute__((cdecl))':'long (const char *, _locale_t)'
| |-ParmVarDecl 0x1653b339090 <col:54, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x1653b339108 <col:81, col:91> col:91 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1653b3394d8 <line:434:24, col:71> col:42 atoll 'long long (const char *) __attribute__((cdecl))':'long long (const char *)'
| `-ParmVarDecl 0x1653b339390 <col:55, col:67> col:67 _Str 'const char *'
|-FunctionDecl 0x1653b3397d0 <line:435:24, col:102> col:42 _atoll_l 'long long (const char *, _locale_t) __attribute__((cdecl))':'long long (const char *, _locale_t)'
| |-ParmVarDecl 0x1653b3395b0 <col:58, col:70> col:70 _Str 'const char *'
| `-ParmVarDecl 0x1653b339628 <col:85, col:95> col:95 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1653b33b0e0 <line:439:24, line:441:97> line:439:39 bsearch_s 'void *(const void *, const void *, rsize_t, rsize_t, int (*)(void *, const void *, const void *) __attribute__((cdecl)), void *) __attribute__((cdecl))':'void *(const void *, const void *, rsize_t, rsize_t, int (*)(void *, const void *, const void *) __attribute__((cdecl)), void *)'
| |-ParmVarDecl 0x1653b3398b0 <col:54, col:67> col:67 _Key 'const void *'
| |-ParmVarDecl 0x1653b339930 <col:124, col:137> col:137 _Base 'const void *'
| |-ParmVarDecl 0x1653b3399a8 <line:440:14, col:22> col:22 _NumOfElements 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1653b339a20 <col:43, col:51> col:51 _SizeOfElements 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1653b339d80 <line:441:14, col:29> col:29 _PtFuncCompare 'int (*)(void *, const void *, const void *) __attribute__((cdecl))'
| `-ParmVarDecl 0x1653b339e00 <col:82, col:89> col:89 _Context 'void *'
|-FunctionDecl 0x1653b33b868 <line:443:24, line:445:72> line:443:39 bsearch 'void *(const void *, const void *, size_t, size_t, int (*)(const void *, const void *) __attribute__((cdecl))) __attribute__((cdecl))':'void *(const void *, const void *, size_t, size_t, int (*)(const void *, const void *) __attribute__((cdecl)))'
| |-ParmVarDecl 0x1653b33b1e0 <col:52, col:65> col:65 _Key 'const void *'
| |-ParmVarDecl 0x1653b33b260 <col:122, col:135> col:135 _Base 'const void *'
| |-ParmVarDecl 0x1653b33b2d8 <line:444:14, col:21> col:21 _NumOfElements 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1653b33b350 <col:42, col:49> col:49 _SizeOfElements 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1653b33b628 <line:445:14, col:29> col:29 _PtFuncCompare 'int (*)(const void *, const void *) __attribute__((cdecl))'
|-FunctionDecl 0x1653b33bf70 <line:448:9, line:450:96> line:448:22 qsort_s 'void (void *, rsize_t, rsize_t, int (*)(void *, const void *, const void *) __attribute__((cdecl)), void *) __attribute__((cdecl))':'void (void *, rsize_t, rsize_t, int (*)(void *, const void *, const void *) __attribute__((cdecl)), void *)'
| |-ParmVarDecl 0x1653b33b960 <col:85, col:92> col:92 _Base 'void *'
| |-ParmVarDecl 0x1653b33b9d8 <line:449:14, col:22> col:22 _NumOfElements 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1653b33ba50 <col:43, col:51> col:51 _SizeOfElements 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1653b33bcb8 <line:450:14, col:29> col:29 _PtFuncCompare 'int (*)(void *, const void *, const void *) __attribute__((cdecl))'
| `-ParmVarDecl 0x1653b33bd38 <col:82, col:88> col:88 _Context 'void *'
|-FunctionDecl 0x1653b33c568 <line:452:9, line:454:72> line:452:22 qsort 'void (void *, size_t, size_t, int (*)(const void *, const void *) __attribute__((cdecl))) __attribute__((cdecl))':'void (void *, size_t, size_t, int (*)(const void *, const void *) __attribute__((cdecl)))'
| |-ParmVarDecl 0x1653b33c090 <col:84, col:91> col:91 _Base 'void *'
| |-ParmVarDecl 0x1653b33c108 <line:453:14, col:21> col:21 _NumOfElements 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1653b33c180 <col:42, col:49> col:49 _SizeOfElements 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1653b33c360 <line:454:14, col:29> col:29 _PtFuncCompare 'int (*)(const void *, const void *) __attribute__((cdecl))'
|-FunctionDecl 0x1653b33c7a8 <line:456:47> col:47 implicit _byteswap_ushort 'unsigned short (unsigned short)' extern
| |-ParmVarDecl 0x1653b33c848 <<invalid sloc>> <invalid sloc> 'unsigned short'
| |-NoThrowAttr 0x1653b33c8b8 <col:47> Implicit
| `-ConstAttr 0x1653b33c910 <col:47> Implicit
|-FunctionDecl 0x1653b33c938 prev 0x1653b33c7a8 <col:24, col:90> col:47 _byteswap_ushort 'unsigned short (unsigned short)'
| |-ParmVarDecl 0x1653b33c658 <col:69, col:84> col:84 _Short 'unsigned short'
| |-NoThrowAttr 0x1653b33ca28 <col:47> Inherited Implicit
| `-ConstAttr 0x1653b33ca50 <col:47> Inherited Implicit
|-FunctionDecl 0x1653b33cbd8 <line:457:47> col:47 implicit _byteswap_ulong 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x1653b33cc78 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x1653b33cce8 <col:47> Implicit
| `-ConstAttr 0x1653b33cd40 <col:47> Implicit
|-FunctionDecl 0x1653b33cd68 prev 0x1653b33cbd8 <col:24, col:88> col:47 _byteswap_ulong 'unsigned long (unsigned long)'
| |-ParmVarDecl 0x1653b33ca90 <col:69, col:83> col:83 _Long 'unsigned long'
| |-NoThrowAttr 0x1653b33ce58 <col:47> Inherited Implicit
| `-ConstAttr 0x1653b33ce80 <col:47> Inherited Implicit
|-FunctionDecl 0x1653b338050 <line:458:49> col:49 implicit _byteswap_uint64 'unsigned long long (unsigned long long)' extern
| |-ParmVarDecl 0x1653b3380f0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-NoThrowAttr 0x1653b338160 <col:49> Implicit
| `-ConstAttr 0x1653b3381b8 <col:49> Implicit
|-FunctionDecl 0x1653b3381e0 prev 0x1653b338050 <col:24, col:94> col:49 _byteswap_uint64 'unsigned long long (unsigned long long)'
| |-ParmVarDecl 0x1653b33cec0 <col:71, col:88> col:88 _Int64 'unsigned long long'
| |-NoThrowAttr 0x1653b3382d0 <col:49> Inherited Implicit
| `-ConstAttr 0x1653b3382f8 <col:49> Inherited Implicit
|-FunctionDecl 0x1653b338578 <line:459:24, col:85> col:39 div 'div_t (int, int) __attribute__((cdecl))':'div_t (int, int)'
| |-ParmVarDecl 0x1653b338358 <col:48, col:52> col:52 _Numerator 'int'
| `-ParmVarDecl 0x1653b3383d8 <col:69, col:73> col:73 _Denominator 'int'
|-FunctionDecl 0x1653b3387f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:462:109> col:74 getenv 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x1653b338718 <col:88, col:101> col:101 _VarName 'const char *'
| `-DeprecatedAttr 0x1653b3388a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _dupenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1653b338db8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:464:28, col:177> col:44 getenv_s 'errno_t (size_t *, char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (size_t *, char *, rsize_t, const char *)'
| |-ParmVarDecl 0x1653b338a38 <col:59, col:68> col:68 _ReturnSize 'size_t *'
| |-ParmVarDecl 0x1653b338ab8 <col:110, col:117> col:117 _DstBuf 'char *'
| |-ParmVarDecl 0x1653b338b30 <col:131, col:139> col:139 _DstSize 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1653b338bb0 <col:156, col:169> col:169 _VarName 'const char *'
|-FunctionDecl 0x1653b33e1d0 <line:472:28, col:212> col:44 _dupenv_s 'errno_t (char **, size_t *, const char *) __attribute__((cdecl))':'errno_t (char **, size_t *, const char *)'
| |-ParmVarDecl 0x1653b338ea8 <col:127, col:134> col:134 _PBuffer 'char **'
| |-ParmVarDecl 0x1653b338f20 <col:154, col:163> col:163 _PBufferSizeInBytes 'size_t *'
| `-ParmVarDecl 0x1653b338fa0 <col:191, col:204> col:204 _VarName 'const char *'
|-FunctionDecl 0x1653b33e638 <line:479:28, col:141> col:44 _itoa_s 'errno_t (int, char *, size_t, int) __attribute__((cdecl))':'errno_t (int, char *, size_t, int)'
| |-ParmVarDecl 0x1653b33e2b8 <col:57, col:61> col:61 _Value 'int'
| |-ParmVarDecl 0x1653b33e338 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1653b33e3b0 <col:112, col:119> col:119 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1653b33e430 <col:131, col:135> col:135 _Radix 'int'
|-FunctionDecl 0x1653b33eab8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:481:79 _itoa 'char *(int, char *, int) __attribute__((cdecl))':'char *(int, char *, int)'
| |-ParmVarDecl 0x1653b33e820 <col:91, col:96> col:96 _Value 'int'
| |-ParmVarDecl 0x1653b33e8a0 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x1653b33e920 <col:146, col:151> col:151 _Radix 'int'
| `-DeprecatedAttr 0x1653b33eb70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _itoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1653b337040 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:482:28, col:145> col:44 _i64toa_s 'errno_t (long long, char *, size_t, int) __attribute__((cdecl))':'errno_t (long long, char *, size_t, int)'
| |-ParmVarDecl 0x1653b33ecb8 <col:59, col:67> col:67 _Val 'long long'
| |-ParmVarDecl 0x1653b33ed38 <col:95, col:102> col:102 _DstBuf 'char *'
| |-ParmVarDecl 0x1653b33edb0 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1653b33ee30 <col:135, col:139> col:139 _Radix 'int'
|-FunctionDecl 0x1653b337488 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:483:140> col:59 _i64toa 'char *(long long, char *, int) __attribute__((cdecl))':'char *(long long, char *, int)'
| |-ParmVarDecl 0x1653b3371f0 <col:72, col:80> col:80 _Val 'long long'
| |-ParmVarDecl 0x1653b337270 <col:109, col:116> col:116 _DstBuf 'char *'
| |-ParmVarDecl 0x1653b3372f0 <col:130, col:134> col:134 _Radix 'int'
| `-DeprecatedAttr 0x1653b337540 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _i64toa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1653b337a08 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:484:28, col:155> col:44 _ui64toa_s 'errno_t (unsigned long long, char *, size_t, int) __attribute__((cdecl))':'errno_t (unsigned long long, char *, size_t, int)'
| |-ParmVarDecl 0x1653b337688 <col:60, col:77> col:77 _Val 'unsigned long long'
| |-ParmVarDecl 0x1653b337708 <col:105, col:112> col:112 _DstBuf 'char *'
| |-ParmVarDecl 0x1653b337780 <col:126, col:133> col:133 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1653b337800 <col:145, col:149> col:149 _Radix 'int'
|-FunctionDecl 0x1653b337e58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:485:151> col:60 _ui64toa 'char *(unsigned long long, char *, int) __attribute__((cdecl))':'char *(unsigned long long, char *, int)'
| |-ParmVarDecl 0x1653b337bb8 <col:74, col:91> col:91 _Val 'unsigned long long'
| |-ParmVarDecl 0x1653b337c38 <col:120, col:127> col:127 _DstBuf 'char *'
| |-ParmVarDecl 0x1653b337cb8 <col:141, col:145> col:145 _Radix 'int'
| `-DeprecatedAttr 0x1653b337f10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ui64toa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1653b344208 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:486:24, col:75> col:40 _atoi64 'long long (const char *) __attribute__((cdecl))':'long long (const char *)'
| `-ParmVarDecl 0x1653b344128 <col:55, col:68> col:68 _String 'const char *'
|-FunctionDecl 0x1653b344458 <line:487:24, col:105> col:40 _atoi64_l 'long long (const char *, _locale_t) __attribute__((cdecl))':'long long (const char *, _locale_t)'
| |-ParmVarDecl 0x1653b3442e0 <col:57, col:70> col:70 _String 'const char *'
| `-ParmVarDecl 0x1653b344358 <col:88, col:98> col:98 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1653b3447d8 <line:488:24, col:136> col:40 _strtoi64 'long long (const char *, char **, int) __attribute__((cdecl))':'long long (const char *, char **, int)'
| |-ParmVarDecl 0x1653b344538 <col:57, col:70> col:70 _String 'const char *'
| |-ParmVarDecl 0x1653b3445b8 <col:104, col:112> col:112 _EndPtr 'char **'
| `-ParmVarDecl 0x1653b344638 <col:126, col:130> col:130 _Radix 'int'
|-FunctionDecl 0x1653b344c40 <line:489:24, col:166> col:40 _strtoi64_l 'long long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'long long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x1653b3448c0 <col:59, col:72> col:72 _String 'const char *'
| |-ParmVarDecl 0x1653b344940 <col:106, col:114> col:114 _EndPtr 'char **'
| |-ParmVarDecl 0x1653b3449c0 <col:128, col:132> col:132 _Radix 'int'
| `-ParmVarDecl 0x1653b344a38 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1653b344fc8 <line:490:24, col:146> col:49 _strtoui64 'unsigned long long (const char *, char **, int) __attribute__((cdecl))':'unsigned long long (const char *, char **, int)'
| |-ParmVarDecl 0x1653b344d30 <col:67, col:80> col:80 _String 'const char *'
| |-ParmVarDecl 0x1653b344db0 <col:114, col:122> col:122 _EndPtr 'char **'
| `-ParmVarDecl 0x1653b344e30 <col:136, col:140> col:140 _Radix 'int'
|-FunctionDecl 0x1653b343480 <line:491:24, col:177> col:49 _strtoui64_l 'unsigned long long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'unsigned long long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x1653b343100 <col:69, col:82> col:82 _String 'const char *'
| |-ParmVarDecl 0x1653b343180 <col:116, col:124> col:124 _EndPtr 'char **'
| |-ParmVarDecl 0x1653b343200 <col:138, col:143> col:143 _Radix 'int'
| `-ParmVarDecl 0x1653b343278 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1653b3437b8 <line:492:24, col:88> col:39 ldiv 'ldiv_t (long, long) __attribute__((cdecl))':'ldiv_t (long, long)'
| |-ParmVarDecl 0x1653b343598 <col:49, col:54> col:54 _Numerator 'long'
| `-ParmVarDecl 0x1653b343618 <col:71, col:76> col:76 _Denominator 'long'
|-FunctionDecl 0x1653b343ad8 <line:493:24, col:100> col:40 lldiv 'lldiv_t (long long, long long) __attribute__((cdecl))':'lldiv_t (long long, long long)'
| |-ParmVarDecl 0x1653b3438b8 <col:51, col:61> col:61 _Numerator 'long long'
| `-ParmVarDecl 0x1653b343938 <col:78, col:88> col:88 _Denominator 'long long'
|-FunctionDecl 0x1653b343f38 <line:515:28, col:140> col:44 _ltoa_s 'errno_t (long, char *, size_t, int) __attribute__((cdecl))':'errno_t (long, char *, size_t, int)'
| |-ParmVarDecl 0x1653b343bb8 <col:57, col:62> col:62 _Val 'long'
| |-ParmVarDecl 0x1653b343c38 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x1653b343cb0 <col:111, col:118> col:118 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1653b343d30 <col:130, col:134> col:134 _Radix 'int'
|-FunctionDecl 0x1653b3453b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:517:79 _ltoa 'char *(long, char *, int) __attribute__((cdecl))':'char *(long, char *, int)'
| |-ParmVarDecl 0x1653b345120 <col:91, col:97> col:97 _Value 'long'
| |-ParmVarDecl 0x1653b3451a0 <col:129, col:135> col:135 _Dest 'char *'
| |-ParmVarDecl 0x1653b345220 <col:147, col:152> col:152 _Radix 'int'
| `-DeprecatedAttr 0x1653b345470 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ltoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1653b3457e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:518:24, col:128> col:39 mblen 'int (const char *, size_t) __attribute__((cdecl))':'int (const char *, size_t)'
| |-ParmVarDecl 0x1653b3455b8 <col:89, col:102> col:102 _Ch 'const char *'
| `-ParmVarDecl 0x1653b345630 <col:112, col:119> col:119 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1653b345b88 <line:519:24, col:159> col:39 _mblen_l 'int (const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1653b3458c0 <col:92, col:105> col:105 _Ch 'const char *'
| |-ParmVarDecl 0x1653b345938 <col:115, col:122> col:122 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1653b3459b0 <col:142, col:152> col:152 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1653b345d48 <line:520:24, col:73> col:39 _mbstrlen 'size_t (const char *) __attribute__((cdecl))':'size_t (const char *)'
| `-ParmVarDecl 0x1653b345c70 <col:56, col:69> col:69 _Str 'const char *'
|-FunctionDecl 0x1653b346038 <line:521:24, col:102> col:39 _mbstrlen_l 'size_t (const char *, _locale_t) __attribute__((cdecl))':'size_t (const char *, _locale_t)'
| |-ParmVarDecl 0x1653b345e20 <col:58, col:70> col:70 _Str 'const char *'
| `-ParmVarDecl 0x1653b345e98 <col:85, col:95> col:95 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1653b3462a0 <line:522:24, col:96> col:39 _mbstrnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x1653b346130 <col:57, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x1653b3461a8 <col:80, col:87> col:87 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1653b346640 <line:523:24, col:126> col:39 _mbstrnlen_l 'size_t (const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1653b346380 <col:59, col:71> col:71 _Str 'const char *'
| |-ParmVarDecl 0x1653b3463f8 <col:82, col:89> col:89 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1653b346470 <col:109, col:119> col:119 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1653b3469f8 <line:524:9, col:170> col:24 mbtowc 'int (wchar_t *, const char *, size_t) __attribute__((cdecl))':'int (wchar_t *, const char *, size_t)'
| |-ParmVarDecl 0x1653b346720 <col:54, col:64> col:64 _DstCh 'wchar_t *'
| |-ParmVarDecl 0x1653b3467a0 <col:122, col:135> col:135 _SrcCh 'const char *'
| `-ParmVarDecl 0x1653b346818 <col:148, col:155> col:155 _SrcSizeInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x1653b346e50 <line:525:9, col:201> col:24 _mbtowc_l 'int (wchar_t *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (wchar_t *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1653b346ad8 <col:57, col:67> col:67 _DstCh 'wchar_t *'
| |-ParmVarDecl 0x1653b346b58 <col:125, col:138> col:138 _SrcCh 'const char *'
| |-ParmVarDecl 0x1653b346bd0 <col:151, col:158> col:158 _SrcSizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1653b346c48 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1653b33f2f0 <line:526:28, col:271> col:44 mbstowcs_s 'errno_t (size_t *, wchar_t *, size_t, const char *, size_t) __attribute__((cdecl))':'errno_t (size_t *, wchar_t *, size_t, const char *, size_t)'
| |-ParmVarDecl 0x1653b346f38 <col:65, col:74> col:74 _PtNumOfCharConverted 'size_t *'
| |-ParmVarDecl 0x1653b346fb0 <col:155, col:165> col:165 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1653b347028 <col:179, col:186> col:186 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1653b3470a8 <col:227, col:240> col:240 _SrcBuf 'const char *'
| `-ParmVarDecl 0x1653b33f0c0 <col:254, col:261> col:261 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1653b33f770 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2007:144> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:528:56 mbstowcs 'size_t (wchar_t *, const char *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const char *, size_t)'
| |-ParmVarDecl 0x1653b33f4a0 <col:97, col:106> col:106 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1653b33f520 <col:120, col:134> col:134 _Source 'const char *'
| |-ParmVarDecl 0x1653b33f598 <col:148, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1653b33f828 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using mbstowcs_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1653b33fe28 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:530:28, col:301> col:44 _mbstowcs_s_l 'errno_t (size_t *, wchar_t *, size_t, const char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (size_t *, wchar_t *, size_t, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1653b33f968 <col:68, col:77> col:77 _PtNumOfCharConverted 'size_t *'
| |-ParmVarDecl 0x1653b33f9e0 <col:158, col:168> col:168 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1653b33fa58 <col:182, col:189> col:189 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1653b33fad8 <col:230, col:243> col:243 _SrcBuf 'const char *'
| |-ParmVarDecl 0x1653b33fb50 <col:257, col:264> col:264 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1653b33fbc8 <col:284, col:294> col:294 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1653b347438 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2010:160> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:532:59 _mbstowcs_l 'size_t (wchar_t *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1653b340018 <col:149, col:158> col:158 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1653b347140 <col:172, col:186> col:186 _Source 'const char *'
| |-ParmVarDecl 0x1653b3471b8 <col:200, col:208> col:208 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1653b347230 <col:228, col:239> col:239 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1653b3474f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _mbstowcs_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1653b3476f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:534:24, col:48> col:39 rand 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1653b3478a8 <line:539:28, col:73> col:43 _set_error_mode 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1653b3477c8 <col:64, col:68> col:68 _Mode 'int'
|-FunctionDecl 0x1653b347ac0 <line:541:9, col:53> col:24 srand 'void (unsigned int) __attribute__((cdecl))':'void (unsigned int)'
| `-ParmVarDecl 0x1653b347980 <col:35, col:48> col:48 _Seed 'unsigned int'
|-FunctionDecl 0x1653b347d80 <line:542:39> col:39 implicit strtod 'double (const char *, char **)' extern
| |-ParmVarDecl 0x1653b347e20 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1653b347e88 <<invalid sloc>> <invalid sloc> 'char **'
|-FunctionDecl 0x1653b347f00 prev 0x1653b347d80 <col:24, col:112> col:39 strtod 'double (const char *, char **)'
| |-ParmVarDecl 0x1653b347b98 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x1653b347c18 <col:97, col:105> col:105 _EndPtr 'char **'
|-FunctionDecl 0x1653b340248 <line:543:24, col:143> col:39 _strtod_l 'double (const char *, char **, _locale_t) __attribute__((cdecl))':'double (const char *, char **, _locale_t)'
| |-ParmVarDecl 0x1653b347fe0 <col:56, col:69> col:69 _Str 'const char *'
| |-ParmVarDecl 0x1653b348060 <col:100, col:108> col:108 _EndPtr 'char **'
| `-ParmVarDecl 0x1653b3480d8 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1653b3405c8 <line:544:39> col:39 implicit strtol 'long (const char *, char **, int)' extern
| |-ParmVarDecl 0x1653b340668 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1653b3406d0 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x1653b340738 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1653b3407b8 prev 0x1653b3405c8 <col:24, col:130> col:39 strtol 'long (const char *, char **, int)'
| |-ParmVarDecl 0x1653b340330 <col:53, col:66> col:66 _Str 'const char *'
| |-ParmVarDecl 0x1653b3403b0 <col:97, col:105> col:105 _EndPtr 'char **'
| `-ParmVarDecl 0x1653b340430 <col:119, col:123> col:123 _Radix 'int'
|-FunctionDecl 0x1653b340c20 <line:545:24, col:158> col:39 _strtol_l 'long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x1653b3408a0 <col:56, col:68> col:68 _Str 'const char *'
| |-ParmVarDecl 0x1653b340920 <col:99, col:106> col:106 _EndPtr 'char **'
| |-ParmVarDecl 0x1653b3409a0 <col:120, col:124> col:124 _Radix 'int'
| `-ParmVarDecl 0x1653b340a18 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1653b340f30 <line:546:43> col:43 implicit strtoll 'long long (const char *, char **, int)' extern
| |-ParmVarDecl 0x1653b340fd0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1653b341038 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x1653b348150 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1653b3481d0 prev 0x1653b340f30 <col:24, col:135> col:43 strtoll 'long long (const char *, char **, int)'
| |-ParmVarDecl 0x1653b340d10 <col:58, col:71> col:71 _Str 'const char *'
| |-ParmVarDecl 0x1653b340d90 <col:102, col:110> col:110 _EndPtr 'char **'
| `-ParmVarDecl 0x1653b340e10 <col:124, col:128> col:128 _Radix 'int'
|-FunctionDecl 0x1653b348570 <line:547:24, col:166> col:43 _strtoll_l 'long long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'long long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x1653b3482b8 <col:61, col:74> col:74 _Str 'const char *'
| |-ParmVarDecl 0x1653b348338 <col:105, col:113> col:113 _EndPtr 'char **'
| |-ParmVarDecl 0x1653b3483b8 <col:127, col:131> col:131 _Radix 'int'
| `-ParmVarDecl 0x1653b348430 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1653b3488f8 <line:548:46> col:46 implicit strtoul 'unsigned long (const char *, char **, int)' extern
| |-ParmVarDecl 0x1653b348998 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1653b348a00 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x1653b348a68 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1653b348ae8 prev 0x1653b3488f8 <col:24, col:137> col:46 strtoul 'unsigned long (const char *, char **, int)'
| |-ParmVarDecl 0x1653b348660 <col:61, col:74> col:74 _Str 'const char *'
| |-ParmVarDecl 0x1653b3486e0 <col:105, col:113> col:113 _EndPtr 'char **'
| `-ParmVarDecl 0x1653b348760 <col:127, col:131> col:131 _Radix 'int'
|-FunctionDecl 0x1653b348f50 <line:549:24, col:160> col:46 _strtoul_l 'unsigned long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'unsigned long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x1653b348bd0 <col:57, col:70> col:70 _Str 'const char *'
| |-ParmVarDecl 0x1653b348c50 <col:101, col:108> col:108 _EndPtr 'char **'
| |-ParmVarDecl 0x1653b348cd0 <col:122, col:126> col:126 _Radix 'int'
| `-ParmVarDecl 0x1653b348d48 <col:143, col:153> col:153 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1653b342210 <line:550:51> col:51 implicit strtoull 'unsigned long long (const char *, char **, int)' extern
| |-ParmVarDecl 0x1653b3422b0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1653b342318 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x1653b342380 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1653b342400 prev 0x1653b342210 <col:24, col:143> col:51 strtoull 'unsigned long long (const char *, char **, int)'
| |-ParmVarDecl 0x1653b349040 <col:67, col:80> col:80 _Str 'const char *'
| |-ParmVarDecl 0x1653b3490c0 <col:111, col:119> col:119 _EndPtr 'char **'
| `-ParmVarDecl 0x1653b3420f0 <col:133, col:137> col:137 _Radix 'int'
|-FunctionDecl 0x1653b3427a0 <line:551:24, col:174> col:51 _strtoull_l 'unsigned long long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'unsigned long long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x1653b3424e8 <col:70, col:83> col:83 _Str 'const char *'
| |-ParmVarDecl 0x1653b342568 <col:114, col:122> col:122 _EndPtr 'char **'
| |-ParmVarDecl 0x1653b3425e8 <col:136, col:140> col:140 _Radix 'int'
| `-ParmVarDecl 0x1653b342660 <col:157, col:167> col:167 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1653b342a80 <line:552:44> col:44 implicit strtold 'long double (const char *, char **)' extern
| |-ParmVarDecl 0x1653b342b20 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1653b342b88 <<invalid sloc>> <invalid sloc> 'char **'
|-FunctionDecl 0x1653b342c00 prev 0x1653b342a80 <col:24, col:118> col:44 strtold 'long double (const char *, char **)'
| |-ParmVarDecl 0x1653b342890 <col:59, col:72> col:72 _Str 'const char *'
| `-ParmVarDecl 0x1653b342910 <col:103, col:111> col:111 _EndPtr 'char **'
|-FunctionDecl 0x1653b342fb8 <line:553:24, col:149> col:44 _strtold_l 'long double (const char *, char **, _locale_t) __attribute__((cdecl))':'long double (const char *, char **, _locale_t)'
| |-ParmVarDecl 0x1653b342ce0 <col:62, col:75> col:75 _Str 'const char *'
| |-ParmVarDecl 0x1653b342d60 <col:106, col:114> col:114 _EndPtr 'char **'
| `-ParmVarDecl 0x1653b342dd8 <col:132, col:142> col:142 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1653b3412d0 <line:554:38> col:38 implicit strtof 'float (const char *, char **)' extern
| |-ParmVarDecl 0x1653b341370 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1653b3413d8 <<invalid sloc>> <invalid sloc> 'char **'
|-FunctionDecl 0x1653b341450 prev 0x1653b3412d0 <col:24, col:111> col:38 strtof 'float (const char *, char **)'
| |-ParmVarDecl 0x1653b3410e0 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x1653b341160 <col:96, col:104> col:104 _EndPtr 'char **'
|-FunctionDecl 0x1653b341808 <line:555:24, col:142> col:38 _strtof_l 'float (const char *, char **, _locale_t) __attribute__((cdecl))':'float (const char *, char **, _locale_t)'
| |-ParmVarDecl 0x1653b341530 <col:55, col:68> col:68 _Str 'const char *'
| |-ParmVarDecl 0x1653b3415b0 <col:99, col:107> col:107 _EndPtr 'char **'
| `-ParmVarDecl 0x1653b341628 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1653b3419d0 <line:560:9, col:60> col:21 system 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1653b3418f0 <col:39, col:52> col:52 _Command 'const char *'
|-FunctionDecl 0x1653b341e28 <line:564:28, col:150> col:44 _ultoa_s 'errno_t (unsigned long, char *, size_t, int) __attribute__((cdecl))':'errno_t (unsigned long, char *, size_t, int)'
| |-ParmVarDecl 0x1653b341aa8 <col:58, col:72> col:72 _Val 'unsigned long'
| |-ParmVarDecl 0x1653b341b28 <col:100, col:107> col:107 _DstBuf 'char *'
| |-ParmVarDecl 0x1653b341ba0 <col:121, col:128> col:128 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1653b341c20 <col:140, col:144> col:144 _Radix 'int'
|-FunctionDecl 0x1653b353c08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:566:79 _ultoa 'char *(unsigned long, char *, int) __attribute__((cdecl))':'char *(unsigned long, char *, int)'
| |-ParmVarDecl 0x1653b341fd8 <col:92, col:107> col:107 _Value 'unsigned long'
| |-ParmVarDecl 0x1653b342058 <col:139, col:145> col:145 _Dest 'char *'
| |-ParmVarDecl 0x1653b353a70 <col:157, col:162> col:162 _Radix 'int'
| `-DeprecatedAttr 0x1653b353cc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ultoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1653b3540f0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:567:127> col:58 wctomb 'int (char *, wchar_t) __attribute__((cdecl))':'int (char *, wchar_t)'
| |-ParmVarDecl 0x1653b353ec8 <col:96, col:103> col:103 _MbCh 'char *'
| |-ParmVarDecl 0x1653b353f40 <col:115, col:123> col:123 _WCh 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x1653b3541a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wctomb_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1653b354678 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:568:155> col:61 _wctomb_l 'int (char *, wchar_t, _locale_t) __attribute__((cdecl))':'int (char *, wchar_t, _locale_t)'
| |-ParmVarDecl 0x1653b3543a8 <col:96, col:103> col:103 _MbCh 'char *'
| |-ParmVarDecl 0x1653b354420 <col:115, col:123> col:123 _WCh 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x1653b354498 <col:138, col:148> col:148 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1653b354730 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wctomb_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1653b350bc8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:570:28, col:200> col:44 wctomb_s 'errno_t (int *, char *, rsize_t, wchar_t) __attribute__((cdecl))':'errno_t (int *, char *, rsize_t, wchar_t)'
| |-ParmVarDecl 0x1653b354878 <col:63, col:69> col:69 _SizeConverted 'int *'
| |-ParmVarDecl 0x1653b3548f8 <col:142, col:149> col:149 _MbCh 'char *'
| |-ParmVarDecl 0x1653b354970 <col:161, col:169> col:169 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1653b3549e8 <col:188, col:196> col:196 _WCh 'wchar_t':'unsigned short'
|-FunctionDecl 0x1653b3510d0 <line:572:28, col:206> col:44 _wctomb_s_l 'errno_t (int *, char *, size_t, wchar_t, _locale_t) __attribute__((cdecl))':'errno_t (int *, char *, size_t, wchar_t, _locale_t)'
| |-ParmVarDecl 0x1653b350cb8 <col:66, col:72> col:72 _SizeConverted 'int *'
| |-ParmVarDecl 0x1653b350d38 <col:121, col:128> col:128 _MbCh 'char *'
| |-ParmVarDecl 0x1653b350db0 <col:140, col:147> col:147 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1653b350e28 <col:166, col:174> col:174 _WCh 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1653b350ea0 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1653b3515e0 <line:573:28, col:263> col:44 wcstombs_s 'errno_t (size_t *, char *, size_t, const wchar_t *, size_t) __attribute__((cdecl))':'errno_t (size_t *, char *, size_t, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1653b3511c0 <col:65, col:74> col:74 _PtNumOfCharConverted 'size_t *'
| |-ParmVarDecl 0x1653b351240 <col:164, col:171> col:171 _Dst 'char *'
| |-ParmVarDecl 0x1653b3512b8 <col:182, col:189> col:189 _DstSizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1653b351330 <col:213, col:229> col:229 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1653b3513a8 <col:240, col:247> col:247 _MaxCountInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x1653b351a90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2007:144> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:575:56 wcstombs 'size_t (char *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (char *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1653b351798 <col:97, col:103> col:103 _Dest 'char *'
| |-ParmVarDecl 0x1653b351810 <col:117, col:134> col:134 _Source 'const wchar_t *'
| |-ParmVarDecl 0x1653b351888 <col:148, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1653b351b48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstombs_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1653b352148 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:576:28, col:294> col:44 _wcstombs_s_l 'errno_t (size_t *, char *, size_t, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (size_t *, char *, size_t, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1653b351c88 <col:68, col:77> col:77 _PtNumOfCharConverted 'size_t *'
| |-ParmVarDecl 0x1653b351d08 <col:167, col:174> col:174 _Dst 'char *'
| |-ParmVarDecl 0x1653b351d80 <col:185, col:192> col:192 _DstSizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1653b351df8 <col:216, col:232> col:232 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1653b351e70 <col:243, col:250> col:250 _MaxCountInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1653b351ee8 <col:277, col:287> col:287 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1653b352678 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2010:160> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:578:59 _wcstombs_l 'size_t (char *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1653b352308 <col:146, col:152> col:152 _Dest 'char *'
| |-ParmVarDecl 0x1653b352380 <col:166, col:183> col:183 _Source 'const wchar_t *'
| |-ParmVarDecl 0x1653b3523f8 <col:197, col:205> col:205 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1653b352470 <col:225, col:236> col:236 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1653b352738 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcstombs_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1653b352ad0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:640:142> col:142 implicit calloc 'void *(unsigned long long, unsigned long long)' extern
| |-ParmVarDecl 0x1653b352b70 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x1653b352bd8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1653b352c50 prev 0x1653b352ad0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:640:224> col:142 calloc 'void *(unsigned long long, unsigned long long)'
| |-ParmVarDecl 0x1653b352878 <col:173, col:180> col:180 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1653b3528f0 <col:212, col:219> col:219 _Size 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1653b352d00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1653b352d58 <line:615:33> restrict
|-FunctionDecl 0x1653b352ef0 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:641:182> col:132 free 'void (void *) __attribute__((cdecl))':'void (void *)'
| |-ParmVarDecl 0x1653b352db0 <col:168, col:175> col:175 _Memory 'void *'
| `-NoAliasAttr 0x1653b352f98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
|-FunctionDecl 0x1653b353198 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:642:161> col:161 implicit malloc 'void *(unsigned long long)' extern
| `-ParmVarDecl 0x1653b353238 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1653b3532a8 prev 0x1653b353198 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:642:204> col:161 malloc 'void *(unsigned long long)'
| |-ParmVarDecl 0x1653b353018 <col:192, col:199> col:199 _Size 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1653b353350 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1653b3533a8 <line:615:33> restrict
|-FunctionDecl 0x1653b353620 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:644:142> col:142 implicit realloc 'void *(void *, unsigned long long)' extern
| |-ParmVarDecl 0x1653b3536c0 <<invalid sloc>> <invalid sloc> 'void *'
| `-ParmVarDecl 0x1653b353728 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1653b3537a0 prev 0x1653b353620 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:644:236> col:142 realloc 'void *(void *, unsigned long long)'
| |-ParmVarDecl 0x1653b353400 <col:181, col:188> col:188 _Memory 'void *'
| |-ParmVarDecl 0x1653b353478 <col:221, col:228> col:228 _NewSize 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1653b353850 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1653b3538a8 <line:615:33> restrict
|-FunctionDecl 0x1653b34db88 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:646:274> col:142 _recalloc 'void *(void *, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t)'
| |-ParmVarDecl 0x1653b353900 <col:183, col:190> col:190 _Memory 'void *'
| |-ParmVarDecl 0x1653b353978 <col:223, col:230> col:230 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1653b3539f0 <col:262, col:269> col:269 _Size 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1653b34dc40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1653b34dc98 <line:615:33> restrict
|-FunctionDecl 0x1653b34ddc8 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:647:191> col:132 _aligned_free 'void (void *) __attribute__((cdecl))':'void (void *)'
| |-ParmVarDecl 0x1653b34dcf0 <col:177, col:184> col:184 _Memory 'void *'
| `-NoAliasAttr 0x1653b34de70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
|-FunctionDecl 0x1653b34e068 <col:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:648:218> col:142 _aligned_malloc 'void *(size_t, size_t) __attribute__((cdecl))':'void *(size_t, size_t)'
| |-ParmVarDecl 0x1653b34def0 <col:182, col:189> col:189 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1653b34df68 <col:201, col:208> col:208 _Alignment 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1653b34e118 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1653b34e170 <line:615:33> restrict
|-FunctionDecl 0x1653b34e488 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:649:246> col:142 _aligned_offset_malloc 'void *(size_t, size_t, size_t) __attribute__((cdecl))':'void *(size_t, size_t, size_t)'
| |-ParmVarDecl 0x1653b34e1c0 <col:189, col:196> col:196 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1653b34e238 <col:208, col:215> col:215 _Alignment 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1653b34e2b0 <col:232, col:239> col:239 _Offset 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1653b34e540 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1653b34e598 <line:615:33> restrict
|-FunctionDecl 0x1653b34e800 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:651:272> col:145 _aligned_realloc 'void *(void *, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t)'
| |-ParmVarDecl 0x1653b34e5f0 <col:193, col:200> col:200 _Memory 'void *'
| |-ParmVarDecl 0x1653b34e668 <col:233, col:240> col:240 _NewSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1653b34e6e0 <col:255, col:262> col:262 _Alignment 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1653b34e8b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1653b34e910 <line:615:33> restrict
|-FunctionDecl 0x1653b355d90 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:653:306> col:142 _aligned_recalloc 'void *(void *, size_t, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t, size_t)'
| |-ParmVarDecl 0x1653b34e968 <col:191, col:198> col:198 _Memory 'void *'
| |-ParmVarDecl 0x1653b355a90 <col:231, col:238> col:238 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1653b355b08 <col:270, col:277> col:277 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1653b355b80 <col:289, col:296> col:296 _Alignment 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1653b355e50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1653b355ea8 <line:615:33> restrict
|-FunctionDecl 0x1653b3561a8 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:655:300> col:145 _aligned_offset_realloc 'void *(void *, size_t, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t, size_t)'
| |-ParmVarDecl 0x1653b355f00 <col:200, col:207> col:207 _Memory 'void *'
| |-ParmVarDecl 0x1653b355f78 <col:240, col:247> col:247 _NewSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1653b355ff0 <col:262, col:269> col:269 _Alignment 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1653b356068 <col:286, col:293> col:293 _Offset 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1653b356268 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1653b3562c0 <line:615:33> restrict
|-FunctionDecl 0x1653b356738 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:657:334> col:142 _aligned_offset_recalloc 'void *(void *, size_t, size_t, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t, size_t, size_t)'
| |-ParmVarDecl 0x1653b356318 <col:198, col:205> col:205 _Memory 'void *'
| |-ParmVarDecl 0x1653b356390 <col:238, col:245> col:245 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1653b356408 <col:277, col:284> col:284 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1653b356480 <col:296, col:303> col:303 _Alignment 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1653b3564f8 <col:320, col:327> col:327 _Offset 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1653b356800 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1653b356858 <line:615:33> restrict
|-FunctionDecl 0x1653b356b80 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:658:73, col:176> col:88 _aligned_msize 'size_t (void *, size_t, size_t) __attribute__((cdecl))':'size_t (void *, size_t, size_t)'
| |-ParmVarDecl 0x1653b3568b0 <col:117, col:124> col:124 _Memory 'void *'
| |-ParmVarDecl 0x1653b356928 <col:138, col:145> col:145 _Alignment 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1653b3569a0 <col:162, col:169> col:169 _Offset 'size_t':'unsigned long long'
|-FunctionDecl 0x1653b356fd8 <line:685:28, col:157> col:44 _itow_s 'errno_t (int, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (int, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x1653b356c68 <col:58, col:62> col:62 _Val 'int'
| |-ParmVarDecl 0x1653b356ce0 <col:97, col:107> col:107 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1653b356d58 <col:121, col:128> col:128 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1653b356dd8 <col:147, col:151> col:151 _Radix 'int'
|-FunctionDecl 0x1653b357450 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:687:82 _itow 'wchar_t *(int, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(int, wchar_t *, int)'
| |-ParmVarDecl 0x1653b357188 <col:94, col:99> col:99 _Value 'int'
| |-ParmVarDecl 0x1653b357200 <col:131, col:140> col:140 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1653b357280 <col:152, col:157> col:157 _Radix 'int'
| `-DeprecatedAttr 0x1653b357508 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _itow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1653b3579c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:688:28, col:158> col:44 _ltow_s 'errno_t (long, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (long, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x1653b357650 <col:58, col:63> col:63 _Val 'long'
| |-ParmVarDecl 0x1653b3576c8 <col:98, col:108> col:108 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1653b357740 <col:122, col:129> col:129 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1653b3577c0 <col:148, col:152> col:152 _Radix 'int'
|-FunctionDecl 0x1653b34fdd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:690:82 _ltow 'wchar_t *(long, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(long, wchar_t *, int)'
| |-ParmVarDecl 0x1653b34fb08 <col:94, col:100> col:100 _Value 'long'
| |-ParmVarDecl 0x1653b34fb80 <col:132, col:141> col:141 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1653b34fc00 <col:153, col:158> col:158 _Radix 'int'
| `-DeprecatedAttr 0x1653b34fe88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ltow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1653b350348 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:691:28, col:168> col:44 _ultow_s 'errno_t (unsigned long, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (unsigned long, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x1653b34ffd0 <col:59, col:73> col:73 _Val 'unsigned long'
| |-ParmVarDecl 0x1653b350048 <col:108, col:118> col:118 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1653b3500c0 <col:132, col:139> col:139 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1653b350140 <col:158, col:162> col:162 _Radix 'int'
|-FunctionDecl 0x1653b3507c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:693:82 _ultow 'wchar_t *(unsigned long, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(unsigned long, wchar_t *, int)'
| |-ParmVarDecl 0x1653b3504f8 <col:95, col:110> col:110 _Value 'unsigned long'
| |-ParmVarDecl 0x1653b350570 <col:142, col:151> col:151 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1653b3505f0 <col:163, col:168> col:168 _Radix 'int'
| `-DeprecatedAttr 0x1653b350878 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ultow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1653b35ccc0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:694:24, col:118> col:39 wcstod 'double (const wchar_t *, wchar_t **) __attribute__((cdecl))':'double (const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x1653b3509b8 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1653b35cb18 <col:100, col:111> col:111 _EndPtr 'wchar_t **'
|-FunctionDecl 0x1653b35d068 <line:695:24, col:148> col:39 _wcstod_l 'double (const wchar_t *, wchar_t **, _locale_t) __attribute__((cdecl))':'double (const wchar_t *, wchar_t **, _locale_t)'
| |-ParmVarDecl 0x1653b35cd98 <col:56, col:71> col:71 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1653b35ce18 <col:102, col:113> col:113 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x1653b35ce90 <col:131, col:141> col:141 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1653b35d428 <line:696:24, col:129> col:39 wcstol 'long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x1653b35d148 <col:53, col:68> col:68 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1653b35d1c8 <col:99, col:110> col:110 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x1653b35d248 <col:119, col:123> col:123 _Radix 'int'
|-FunctionDecl 0x1653b35d890 <line:697:24, col:159> col:39 _wcstol_l 'long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x1653b35d508 <col:56, col:71> col:71 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1653b35d588 <col:102, col:112> col:112 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x1653b35d608 <col:121, col:125> col:125 _Radix 'int'
| `-ParmVarDecl 0x1653b35d680 <col:142, col:152> col:152 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1653b35bc48 <line:698:24, col:133> col:43 wcstoll 'long long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'long long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x1653b35d978 <col:58, col:73> col:73 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1653b35d9f8 <col:104, col:114> col:114 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x1653b35da78 <col:123, col:127> col:127 _Radix 'int'
|-FunctionDecl 0x1653b35c0b0 <line:699:24, col:164> col:43 _wcstoll_l 'long long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'long long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x1653b35bd28 <col:61, col:76> col:76 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1653b35bda8 <col:107, col:117> col:117 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x1653b35be28 <col:126, col:130> col:130 _Radix 'int'
| `-ParmVarDecl 0x1653b35bea0 <col:147, col:157> col:157 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1653b35c478 <line:700:24, col:137> col:46 wcstoul 'unsigned long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'unsigned long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x1653b35c198 <col:61, col:76> col:76 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1653b35c218 <col:107, col:118> col:118 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x1653b35c298 <col:127, col:131> col:131 _Radix 'int'
|-FunctionDecl 0x1653b35c8e0 <line:701:24, col:167> col:46 _wcstoul_l 'unsigned long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'unsigned long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x1653b35c558 <col:64, col:79> col:79 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1653b35c5d8 <col:110, col:120> col:120 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x1653b35c658 <col:129, col:133> col:133 _Radix 'int'
| `-ParmVarDecl 0x1653b35c6d0 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1653b35ecf8 <line:702:24, col:143> col:51 wcstoull 'unsigned long long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'unsigned long long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x1653b35c9c8 <col:67, col:82> col:82 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1653b35ca48 <col:113, col:124> col:124 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x1653b35eb20 <col:133, col:137> col:137 _Radix 'int'
|-FunctionDecl 0x1653b35f160 <line:703:24, col:174> col:51 _wcstoull_l 'unsigned long long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'unsigned long long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x1653b35edd8 <col:70, col:85> col:85 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1653b35ee58 <col:116, col:127> col:127 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x1653b35eed8 <col:136, col:140> col:140 _Radix 'int'
| `-ParmVarDecl 0x1653b35ef50 <col:157, col:167> col:167 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1653b35f470 <line:704:24, col:124> col:44 wcstold 'long double (const wchar_t *, wchar_t **) __attribute__((cdecl))':'long double (const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x1653b35f248 <col:59, col:75> col:75 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1653b35f2c8 <col:106, col:117> col:117 _EndPtr 'wchar_t **'
|-FunctionDecl 0x1653b35f818 <line:705:24, col:155> col:44 _wcstold_l 'long double (const wchar_t *, wchar_t **, _locale_t) __attribute__((cdecl))':'long double (const wchar_t *, wchar_t **, _locale_t)'
| |-ParmVarDecl 0x1653b35f548 <col:62, col:78> col:78 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1653b35f5c8 <col:109, col:120> col:120 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x1653b35f640 <col:138, col:148> col:148 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1653b359ad0 <line:706:24, col:117> col:38 wcstof 'float (const wchar_t *, wchar_t **) __attribute__((cdecl))':'float (const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x1653b35f8f8 <col:52, col:68> col:68 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1653b35f978 <col:99, col:110> col:110 _EndPtr 'wchar_t **'
|-FunctionDecl 0x1653b359e78 <line:707:24, col:148> col:38 _wcstof_l 'float (const wchar_t *, wchar_t **, _locale_t) __attribute__((cdecl))':'float (const wchar_t *, wchar_t **, _locale_t)'
| |-ParmVarDecl 0x1653b359ba8 <col:55, col:71> col:71 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1653b359c28 <col:102, col:113> col:113 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x1653b359ca0 <col:131, col:141> col:141 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1653b35a0f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:711:118> col:78 _wgetenv 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x1653b35a018 <col:94, col:110> col:110 _VarName 'const wchar_t *'
| `-DeprecatedAttr 0x1653b35a198 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wdupenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1653b35a648 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:712:28, col:198> col:44 _wgetenv_s 'errno_t (size_t *, wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (size_t *, wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x1653b35a2d8 <col:61, col:70> col:70 _ReturnSize 'size_t *'
| |-ParmVarDecl 0x1653b35a350 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1653b35a3c8 <col:143, col:150> col:150 _DstSizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1653b35a440 <col:174, col:190> col:190 _VarName 'const wchar_t *'
|-FunctionDecl 0x1653b35aa00 <line:720:28, col:214> col:44 _wdupenv_s 'errno_t (wchar_t **, size_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t **, size_t *, const wchar_t *)'
| |-ParmVarDecl 0x1653b35a738 <col:127, col:137> col:137 _Buffer 'wchar_t **'
| |-ParmVarDecl 0x1653b35a7b0 <col:156, col:164> col:164 _BufferSizeInWords 'size_t *'
| `-ParmVarDecl 0x1653b35a828 <col:191, col:206> col:206 _VarName 'const wchar_t *'
|-FunctionDecl 0x1653b357c38 <line:728:9, col:65> col:21 _wsystem 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1653b357ac0 <col:41, col:57> col:57 _Command 'const wchar_t *'
|-FunctionDecl 0x1653b357e88 <line:733:24, col:71> col:39 _wtof 'double (const wchar_t *) __attribute__((cdecl))':'double (const wchar_t *)'
| `-ParmVarDecl 0x1653b357d08 <col:52, col:67> col:67 _Str 'const wchar_t *'
|-FunctionDecl 0x1653b358180 <line:734:24, col:101> col:39 _wtof_l 'double (const wchar_t *, _locale_t) __attribute__((cdecl))':'double (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1653b357f58 <col:54, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1653b357fd0 <col:84, col:94> col:94 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1653b358338 <line:735:24, col:68> col:36 _wtoi 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1653b358258 <col:49, col:64> col:64 _Str 'const wchar_t *'
|-FunctionDecl 0x1653b358630 <line:736:24, col:98> col:36 _wtoi_l 'int (const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1653b358408 <col:51, col:66> col:66 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1653b358480 <col:81, col:91> col:91 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1653b358888 <line:737:24, col:69> col:37 _wtol 'long (const wchar_t *) __attribute__((cdecl))':'long (const wchar_t *)'
| `-ParmVarDecl 0x1653b358708 <col:50, col:65> col:65 _Str 'const wchar_t *'
|-FunctionDecl 0x1653b358b90 <line:738:24, col:99> col:37 _wtol_l 'long (const wchar_t *, _locale_t) __attribute__((cdecl))':'long (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1653b358958 <col:52, col:67> col:67 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1653b3589d0 <col:82, col:92> col:92 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1653b358de8 <line:739:24, col:75> col:42 _wtoll 'long long (const wchar_t *) __attribute__((cdecl))':'long long (const wchar_t *)'
| `-ParmVarDecl 0x1653b358c68 <col:56, col:71> col:71 _Str 'const wchar_t *'
|-FunctionDecl 0x1653b3590e0 <line:740:24, col:105> col:42 _wtoll_l 'long long (const wchar_t *, _locale_t) __attribute__((cdecl))':'long long (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1653b358eb8 <col:58, col:73> col:73 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1653b358f30 <col:88, col:98> col:98 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1653b359538 <line:742:28, col:162> col:44 _i64tow_s 'errno_t (long long, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (long long, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x1653b3591c0 <col:59, col:67> col:67 _Val 'long long'
| |-ParmVarDecl 0x1653b359238 <col:102, col:112> col:112 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1653b3592b0 <col:126, col:133> col:133 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1653b359330 <col:152, col:156> col:156 _Radix 'int'
|-FunctionDecl 0x1653b3599b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:743:146> col:62 _i64tow 'wchar_t *(long long, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(long long, wchar_t *, int)'
| |-ParmVarDecl 0x1653b3596e8 <col:75, col:83> col:83 _Val 'long long'
| |-ParmVarDecl 0x1653b359760 <col:112, col:122> col:122 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1653b3597e0 <col:136, col:140> col:140 _Radix 'int'
| `-DeprecatedAttr 0x1653b359a68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _i64tow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1653b35ffa8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:744:28, col:172> col:44 _ui64tow_s 'errno_t (unsigned long long, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (unsigned long long, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x1653b35fc30 <col:60, col:77> col:77 _Val 'unsigned long long'
| |-ParmVarDecl 0x1653b35fca8 <col:112, col:122> col:122 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1653b35fd20 <col:136, col:143> col:143 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1653b35fda0 <col:162, col:166> col:166 _Radix 'int'
|-FunctionDecl 0x1653b360420 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:745:157> col:63 _ui64tow 'wchar_t *(unsigned long long, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(unsigned long long, wchar_t *, int)'
| |-ParmVarDecl 0x1653b360158 <col:77, col:94> col:94 _Val 'unsigned long long'
| |-ParmVarDecl 0x1653b3601d0 <col:123, col:133> col:133 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1653b360250 <col:147, col:151> col:151 _Radix 'int'
| `-DeprecatedAttr 0x1653b3604d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ui64tow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1653b3606f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:746:24, col:76> col:42 _wtoi64 'long long (const wchar_t *) __attribute__((cdecl))':'long long (const wchar_t *)'
| `-ParmVarDecl 0x1653b360618 <col:57, col:72> col:72 _Str 'const wchar_t *'
|-FunctionDecl 0x1653b360940 <line:747:24, col:106> col:42 _wtoi64_l 'long long (const wchar_t *, _locale_t) __attribute__((cdecl))':'long long (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1653b3607c8 <col:59, col:74> col:74 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1653b360840 <col:89, col:99> col:99 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1653b360c60 <line:748:24, col:141> col:42 _wcstoi64 'long long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'long long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x1653b360a18 <col:59, col:75> col:75 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1653b360a98 <col:106, col:117> col:117 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x1653b360b40 <col:131, col:135> col:135 _Radix 'int'
|-FunctionDecl 0x1653b360ff8 <line:749:24, col:171> col:42 _wcstoi64_l 'long long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'long long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x1653b360d40 <col:61, col:77> col:77 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1653b360dc0 <col:108, col:119> col:119 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x1653b360e40 <col:133, col:137> col:137 _Radix 'int'
| `-ParmVarDecl 0x1653b360eb8 <col:154, col:164> col:164 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1653b361300 <line:750:24, col:150> col:50 _wcstoui64 'unsigned long long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'unsigned long long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x1653b3610e0 <col:68, col:84> col:84 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1653b361160 <col:115, col:126> col:126 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x1653b3611e0 <col:140, col:144> col:144 _Radix 'int'
|-FunctionDecl 0x1653b361698 <line:751:24, col:180> col:50 _wcstoui64_l 'unsigned long long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'unsigned long long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x1653b3613e0 <col:70, col:85> col:85 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1653b361460 <col:117, col:128> col:128 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x1653b3614e0 <col:142, col:146> col:146 _Radix 'int'
| `-ParmVarDecl 0x1653b361558 <col:163, col:173> col:173 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1653b3619a0 <line:770:24, col:151> col:39 _fullpath 'char *(char *, const char *, size_t) __attribute__((cdecl))':'char *(char *, const char *, size_t)'
| |-ParmVarDecl 0x1653b361788 <col:82, col:89> col:89 _FullPath 'char *'
| |-ParmVarDecl 0x1653b361808 <col:107, col:120> col:120 _Path 'const char *'
| `-ParmVarDecl 0x1653b361880 <col:132, col:139> col:139 _SizeInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x1653b361fb8 <line:778:28, col:189> col:44 _ecvt_s 'errno_t (char *, size_t, double, int, int *, int *) __attribute__((cdecl))':'errno_t (char *, size_t, double, int, int *, int *)'
| |-ParmVarDecl 0x1653b361a88 <col:74, col:81> col:81 _DstBuf 'char *'
| |-ParmVarDecl 0x1653b361b50 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1653b361bd0 <col:114, col:121> col:121 _Val 'double'
| |-ParmVarDecl 0x1653b361c50 <col:132, col:136> col:136 _NumOfDights 'int'
| |-ParmVarDecl 0x1653b361cd0 <col:156, col:162> col:162 _PtDec 'int *'
| `-ParmVarDecl 0x1653b361d50 <col:176, col:182> col:182 _PtSign 'int *'
|-FunctionDecl 0x1653b3624b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:780:158> col:72 _ecvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x1653b362178 <col:83, col:90> col:90 _Val 'double'
| |-ParmVarDecl 0x1653b3621f8 <col:101, col:105> col:105 _NumOfDigits 'int'
| |-ParmVarDecl 0x1653b362278 <col:125, col:131> col:131 _PtDec 'int *'
| |-ParmVarDecl 0x1653b3622f8 <col:145, col:151> col:151 _PtSign 'int *'
| `-DeprecatedAttr 0x1653b362570 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ecvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1653b362aa8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:781:28, col:186> col:44 _fcvt_s 'errno_t (char *, size_t, double, int, int *, int *) __attribute__((cdecl))':'errno_t (char *, size_t, double, int, int *, int *)'
| |-ParmVarDecl 0x1653b3626b8 <col:74, col:81> col:81 _DstBuf 'char *'
| |-ParmVarDecl 0x1653b362730 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1653b3627b0 <col:114, col:121> col:121 _Val 'double'
| |-ParmVarDecl 0x1653b362830 <col:132, col:136> col:136 _NumOfDec 'int'
| |-ParmVarDecl 0x1653b3628b0 <col:153, col:159> col:159 _PtDec 'int *'
| `-ParmVarDecl 0x1653b362930 <col:173, col:179> col:179 _PtSign 'int *'
|-FunctionDecl 0x1653b35aec0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:783:155> col:72 _fcvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x1653b35ac00 <col:83, col:90> col:90 _Val 'double'
| |-ParmVarDecl 0x1653b35ac80 <col:101, col:105> col:105 _NumOfDec 'int'
| |-ParmVarDecl 0x1653b35ad00 <col:122, col:128> col:128 _PtDec 'int *'
| |-ParmVarDecl 0x1653b35ad80 <col:142, col:148> col:148 _PtSign 'int *'
| `-DeprecatedAttr 0x1653b35af80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fcvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1653b35b448 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:784:9, col:129> col:25 _gcvt_s 'errno_t (char *, size_t, double, int) __attribute__((cdecl))':'errno_t (char *, size_t, double, int)'
| |-ParmVarDecl 0x1653b35b0c8 <col:55, col:62> col:62 _DstBuf 'char *'
| |-ParmVarDecl 0x1653b35b140 <col:76, col:83> col:83 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1653b35b1c0 <col:95, col:102> col:102 _Val 'double'
| `-ParmVarDecl 0x1653b35b240 <col:113, col:117> col:117 _NumOfDigits 'int'
|-FunctionDecl 0x1653b35b898 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:786:141> col:57 _gcvt 'char *(double, int, char *) __attribute__((cdecl))':'char *(double, int, char *)'
| |-ParmVarDecl 0x1653b35b5f8 <col:68, col:75> col:75 _Val 'double'
| |-ParmVarDecl 0x1653b35b678 <col:86, col:90> col:90 _NumOfDigits 'int'
| |-ParmVarDecl 0x1653b35b6f8 <col:127, col:134> col:134 _DstBuf 'char *'
| `-DeprecatedAttr 0x1653b35b950 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _gcvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1653b364de0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:788:24, col:91> col:36 _atodbl 'int (_CRT_DOUBLE *, char *) __attribute__((cdecl))':'int (_CRT_DOUBLE *, char *)'
| |-ParmVarDecl 0x1653b364bb8 <col:50, col:64> col:64 _Result '_CRT_DOUBLE *'
| `-ParmVarDecl 0x1653b364c38 <col:80, col:87> col:87 _Str 'char *'
|-FunctionDecl 0x1653b365160 <line:789:24, col:89> col:36 _atoldbl 'int (_LDOUBLE *, char *) __attribute__((cdecl))':'int (_LDOUBLE *, char *)'
| |-ParmVarDecl 0x1653b364f38 <col:51, col:62> col:62 _Result '_LDOUBLE *'
| `-ParmVarDecl 0x1653b364fb8 <col:78, col:85> col:85 _Str 'char *'
|-FunctionDecl 0x1653b3654e0 <line:790:24, col:96> col:36 _atoflt 'int (_CRT_FLOAT *, const char *) __attribute__((cdecl))':'int (_CRT_FLOAT *, const char *)'
| |-ParmVarDecl 0x1653b3652b8 <col:50, col:63> col:63 _Result '_CRT_FLOAT *'
| `-ParmVarDecl 0x1653b365338 <col:79, col:92> col:92 _Str 'const char *'
|-FunctionDecl 0x1653b365888 <line:791:24, col:121> col:36 _atodbl_l 'int (_CRT_DOUBLE *, char *, _locale_t) __attribute__((cdecl))':'int (_CRT_DOUBLE *, char *, _locale_t)'
| |-ParmVarDecl 0x1653b3655b8 <col:52, col:66> col:66 _Result '_CRT_DOUBLE *'
| |-ParmVarDecl 0x1653b365638 <col:82, col:89> col:89 _Str 'char *'
| `-ParmVarDecl 0x1653b3656b0 <col:104, col:114> col:114 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1653b35dbf8 <line:792:24, col:119> col:36 _atoldbl_l 'int (_LDOUBLE *, char *, _locale_t) __attribute__((cdecl))':'int (_LDOUBLE *, char *, _locale_t)'
| |-ParmVarDecl 0x1653b365968 <col:53, col:64> col:64 _Result '_LDOUBLE *'
| |-ParmVarDecl 0x1653b3659e8 <col:80, col:87> col:87 _Str 'char *'
| `-ParmVarDecl 0x1653b365a60 <col:102, col:112> col:112 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1653b35dfa8 <line:793:24, col:126> col:36 _atoflt_l 'int (_CRT_FLOAT *, const char *, _locale_t) __attribute__((cdecl))':'int (_CRT_FLOAT *, const char *, _locale_t)'
| |-ParmVarDecl 0x1653b35dcd8 <col:52, col:65> col:65 _Result '_CRT_FLOAT *'
| |-ParmVarDecl 0x1653b35dd58 <col:81, col:94> col:94 _Str 'const char *'
| `-ParmVarDecl 0x1653b35ddd0 <col:109, col:119> col:119 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1653b35e280 <line:794:46> col:46 implicit _lrotl 'unsigned long (unsigned long, int)' extern
| |-ParmVarDecl 0x1653b35e320 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0x1653b35e388 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x1653b35e400 <col:46> Implicit
|-FunctionDecl 0x1653b35e458 prev 0x1653b35e280 <col:24, col:93> col:46 _lrotl 'unsigned long (unsigned long, int)'
| |-ParmVarDecl 0x1653b35e090 <col:58, col:72> col:72 _Val 'unsigned long'
| |-ParmVarDecl 0x1653b35e110 <col:83, col:87> col:87 _Shift 'int'
| `-NoThrowAttr 0x1653b35e550 <col:46> Inherited Implicit
|-FunctionDecl 0x1653b35e710 <line:795:46> col:46 implicit _lrotr 'unsigned long (unsigned long, int)' extern
| |-ParmVarDecl 0x1653b35e7b0 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0x1653b35e818 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x1653b35e890 <col:46> Implicit
|-FunctionDecl 0x1653b35e8e8 prev 0x1653b35e710 <col:24, col:93> col:46 _lrotr 'unsigned long (unsigned long, int)'
| |-ParmVarDecl 0x1653b35e590 <col:58, col:72> col:72 _Val 'unsigned long'
| |-ParmVarDecl 0x1653b35e610 <col:83, col:87> col:87 _Shift 'int'
| `-NoThrowAttr 0x1653b35e9e0 <col:46> Inherited Implicit
|-FunctionDecl 0x1653b362f58 <line:796:40, line:797:37> line:796:58 _makepath_s 'errno_t (char *, size_t, const char *, const char *, const char *, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *, const char *, const char *, const char *)'
| |-ParmVarDecl 0x1653b35ea20 <col:99, col:106> col:106 _PathResult 'char *'
| |-ParmVarDecl 0x1653b35ea98 <col:124, col:131> col:131 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1653b362b78 <col:156, col:169> col:169 _Drive 'const char *'
| |-ParmVarDecl 0x1653b362bf8 <col:188, col:201> col:201 _Dir 'const char *'
| |-ParmVarDecl 0x1653b362c78 <col:218, col:231> col:231 _Filename 'const char *'
| `-ParmVarDecl 0x1653b362cf8 <line:797:20, col:33> col:33 _Ext 'const char *'
|-FunctionDecl 0x1653b363500 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1948:181> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:799:78 _makepath 'void (char *, const char *, const char *, const char *, const char *) __attribute__((cdecl))':'void (char *, const char *, const char *, const char *, const char *)'
| |-ParmVarDecl 0x1653b363118 <col:113, col:119> col:119 _Path 'char *'
| |-ParmVarDecl 0x1653b363198 <col:137, col:151> col:151 _Drive 'const char *'
| |-ParmVarDecl 0x1653b363218 <col:170, col:184> col:184 _Dir 'const char *'
| |-ParmVarDecl 0x1653b363298 <col:201, col:215> col:215 _Filename 'const char *'
| |-ParmVarDecl 0x1653b363318 <col:237, col:251> col:251 _Ext 'const char *'
| `-DeprecatedAttr 0x1653b3635c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _makepath_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1653b3638a0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:826:9, col:59> col:27 _onexit '_onexit_t (_onexit_t) __attribute__((cdecl))':'_onexit_t (_onexit_t)'
| `-ParmVarDecl 0x1653b363730 <col:44, col:54> col:54 _Func '_onexit_t':'int (*)(void) __attribute__((cdecl))'
|-FunctionDecl 0x1653b363ac0 <line:831:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x1653b363978 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x1653b36acf8 <line:838:24, col:77> col:39 _putenv 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1653b36ac18 <col:54, col:67> col:67 _EnvString 'const char *'
|-FunctionDecl 0x1653b36afb8 <line:839:28, col:107> col:44 _putenv_s 'errno_t (const char *, const char *) __attribute__((cdecl))':'errno_t (const char *, const char *)'
| |-ParmVarDecl 0x1653b36add0 <col:61, col:74> col:74 _Name 'const char *'
| `-ParmVarDecl 0x1653b36ae50 <col:88, col:101> col:101 _Value 'const char *'
|-FunctionDecl 0x1653b36b280 <line:842:30> col:30 implicit _rotl 'unsigned int (unsigned int, int)' extern
| |-ParmVarDecl 0x1653b36b320 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-ParmVarDecl 0x1653b36b388 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x1653b36b400 <col:30> Implicit
|-FunctionDecl 0x1653b36b458 prev 0x1653b36b280 <col:9, col:75> col:30 _rotl 'unsigned int (unsigned int, int)'
| |-ParmVarDecl 0x1653b36b098 <col:41, col:54> col:54 _Val 'unsigned int'
| |-ParmVarDecl 0x1653b36b118 <col:65, col:69> col:69 _Shift 'int'
| `-NoThrowAttr 0x1653b36b550 <col:30> Inherited Implicit
|-FunctionDecl 0x1653b36b780 <line:843:34> col:34 implicit _rotl64 'unsigned long long (unsigned long long, int)' extern
| |-ParmVarDecl 0x1653b36b820 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1653b36b888 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x1653b36b900 <col:34> Implicit
|-FunctionDecl 0x1653b36b958 prev 0x1653b36b780 <col:9, col:85> col:34 _rotl64 'unsigned long long (unsigned long long, int)'
| |-ParmVarDecl 0x1653b36b590 <col:47, col:64> col:64 _Val 'unsigned long long'
| |-ParmVarDecl 0x1653b36b610 <col:75, col:79> col:79 _Shift 'int'
| `-NoThrowAttr 0x1653b36ba50 <col:34> Inherited Implicit
|-FunctionDecl 0x1653b365bd0 <line:844:30> col:30 implicit _rotr 'unsigned int (unsigned int, int)' extern
| |-ParmVarDecl 0x1653b365c70 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-ParmVarDecl 0x1653b365cd8 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x1653b365d50 <col:30> Implicit
|-FunctionDecl 0x1653b365da8 prev 0x1653b365bd0 <col:9, col:75> col:30 _rotr 'unsigned int (unsigned int, int)'
| |-ParmVarDecl 0x1653b36ba90 <col:41, col:54> col:54 _Val 'unsigned int'
| |-ParmVarDecl 0x1653b36bb10 <col:65, col:69> col:69 _Shift 'int'
| `-NoThrowAttr 0x1653b365ea0 <col:30> Inherited Implicit
|-FunctionDecl 0x1653b366060 <line:845:34> col:34 implicit _rotr64 'unsigned long long (unsigned long long, int)' extern
| |-ParmVarDecl 0x1653b366100 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1653b366168 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x1653b3661e0 <col:34> Implicit
|-FunctionDecl 0x1653b366238 prev 0x1653b366060 <col:9, col:85> col:34 _rotr64 'unsigned long long (unsigned long long, int)'
| |-ParmVarDecl 0x1653b365ee0 <col:47, col:64> col:64 _Val 'unsigned long long'
| |-ParmVarDecl 0x1653b365f60 <col:75, col:79> col:79 _Shift 'int'
| `-NoThrowAttr 0x1653b366330 <col:34> Inherited Implicit
|-FunctionDecl 0x1653b3666e8 <line:849:9, col:171> col:25 _searchenv_s 'errno_t (const char *, const char *, char *, size_t) __attribute__((cdecl))':'errno_t (const char *, const char *, char *, size_t)'
| |-ParmVarDecl 0x1653b366370 <col:45, col:58> col:58 _Filename 'const char *'
| |-ParmVarDecl 0x1653b3663f0 <col:76, col:89> col:89 _EnvVar 'const char *'
| |-ParmVarDecl 0x1653b366470 <col:127, col:134> col:134 _ResultPath 'char *'
| `-ParmVarDecl 0x1653b3664e8 <col:152, col:159> col:159 _SizeInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x1653b363b70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1954:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:851:78 _searchenv 'void (const char *, const char *, char *) __attribute__((cdecl))':'void (const char *, const char *, char *)'
| |-ParmVarDecl 0x1653b366898 <col:97, col:111> col:111 _Filename 'const char *'
| |-ParmVarDecl 0x1653b366918 <col:129, col:143> col:143 _EnvVar 'const char *'
| |-ParmVarDecl 0x1653b366998 <col:176, col:182> col:182 _ResultPath 'char *'
| `-DeprecatedAttr 0x1653b363c28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _searchenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1653b364210 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:854:261> col:62 _splitpath 'void (const char *, char *, char *, char *, char *) __attribute__((cdecl))':'void (const char *, char *, char *, char *, char *)'
| |-ParmVarDecl 0x1653b363e30 <col:80, col:93> col:93 _FullPath 'const char *'
| |-ParmVarDecl 0x1653b363eb0 <col:129, col:136> col:136 _Drive 'char *'
| |-ParmVarDecl 0x1653b363f30 <col:169, col:176> col:176 _Dir 'char *'
| |-ParmVarDecl 0x1653b363fb0 <col:207, col:214> col:214 _Filename 'char *'
| |-ParmVarDecl 0x1653b364030 <col:250, col:257> col:257 _Ext 'char *'
| `-DeprecatedAttr 0x1653b3642d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _splitpath_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1653b36bbf0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:855:40, line:859:79> line:855:57 _splitpath_s 'errno_t (const char *, char *, size_t, char *, size_t, char *, size_t, char *, size_t) __attribute__((cdecl))':'errno_t (const char *, char *, size_t, char *, size_t, char *, size_t, char *, size_t)'
| |-ParmVarDecl 0x1653b364420 <col:77, col:90> col:90 _FullPath 'const char *'
| |-ParmVarDecl 0x1653b3644a0 <line:856:48, col:55> col:55 _Drive 'char *'
| |-ParmVarDecl 0x1653b364518 <col:68, col:75> col:75 _DriveSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1653b364598 <line:857:46, col:53> col:53 _Dir 'char *'
| |-ParmVarDecl 0x1653b364610 <col:64, col:71> col:71 _DirSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1653b364690 <line:858:51, col:58> col:58 _Filename 'char *'
| |-ParmVarDecl 0x1653b364708 <col:74, col:81> col:81 _FilenameSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1653b364788 <line:859:46, col:53> col:53 _Ext 'char *'
| `-ParmVarDecl 0x1653b364800 <col:64, col:71> col:71 _ExtSize 'size_t':'unsigned long long'
|-FunctionDecl 0x1653b36bfa0 <line:862:9, col:204> col:24 _swab 'void (char *, char *, int) __attribute__((cdecl))':'void (char *, char *, int)'
| |-ParmVarDecl 0x1653b36bd08 <col:95, col:102> col:102 _Buf1 'char *'
| |-ParmVarDecl 0x1653b36bd88 <col:174, col:181> col:181 _Buf2 'char *'
| `-ParmVarDecl 0x1653b36be08 <col:188, col:192> col:192 _SizeInBytes 'int'
|-FunctionDecl 0x1653b36c288 <line:873:24, col:161> col:42 _wfullpath 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1653b36c080 <col:86, col:96> col:96 _FullPath 'wchar_t *'
| |-ParmVarDecl 0x1653b36c0f8 <col:114, col:130> col:130 _Path 'const wchar_t *'
| `-ParmVarDecl 0x1653b36c170 <col:142, col:149> col:149 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1653b36c828 <line:879:40, line:880:40> line:879:56 _wmakepath_s 'errno_t (wchar_t *, size_t, const wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1653b36c368 <col:91, col:101> col:101 _PathResult 'wchar_t *'
| |-ParmVarDecl 0x1653b36c3e0 <col:119, col:126> col:126 _SIZE 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1653b36c458 <col:144, col:160> col:160 _Drive 'const wchar_t *'
| |-ParmVarDecl 0x1653b36c4d0 <col:179, col:195> col:195 _Dir 'const wchar_t *'
| |-ParmVarDecl 0x1653b36c548 <col:212, col:228> col:228 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x1653b36c5c0 <line:880:20, col:36> col:36 _Ext 'const wchar_t *'
|-FunctionDecl 0x1653b36ce30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1948:181> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:882:78 _wmakepath 'void (wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'void (wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1653b36c9e0 <col:114, col:123> col:123 _ResultPath 'wchar_t *'
| |-ParmVarDecl 0x1653b36ca58 <col:147, col:164> col:164 _Drive 'const wchar_t *'
| |-ParmVarDecl 0x1653b36cad0 <col:183, col:200> col:200 _Dir 'const wchar_t *'
| |-ParmVarDecl 0x1653b36cb48 <col:217, col:234> col:234 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1653b36cc00 <col:256, col:273> col:273 _Ext 'const wchar_t *'
| `-DeprecatedAttr 0x1653b36cef8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wmakepath_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1653b36d1b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:885:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x1653b36d038 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x1653b36d360 <line:889:24, col:81> col:39 _wputenv 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1653b36d280 <col:55, col:71> col:71 _EnvString 'const wchar_t *'
|-FunctionDecl 0x1653b36d608 <line:890:28, col:114> col:44 _wputenv_s 'errno_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1653b36d430 <col:62, col:78> col:78 _Name 'const wchar_t *'
| `-ParmVarDecl 0x1653b36d4a8 <col:92, col:108> col:108 _Value 'const wchar_t *'
|-FunctionDecl 0x1653b36da48 <line:891:9, col:181> col:25 _wsearchenv_s 'errno_t (const wchar_t *, const wchar_t *, wchar_t *, size_t) __attribute__((cdecl))':'errno_t (const wchar_t *, const wchar_t *, wchar_t *, size_t)'
| |-ParmVarDecl 0x1653b36d6e0 <col:46, col:62> col:62 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1653b36d758 <col:80, col:96> col:96 _EnvVar 'const wchar_t *'
| |-ParmVarDecl 0x1653b36d7d0 <col:134, col:144> col:144 _ResultPath 'wchar_t *'
| `-ParmVarDecl 0x1653b36d848 <col:162, col:169> col:169 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1653b368e80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1954:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:893:78 _wsearchenv 'void (const wchar_t *, const wchar_t *, wchar_t *) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, wchar_t *)'
| |-ParmVarDecl 0x1653b368bc0 <col:98, col:115> col:115 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1653b368c38 <col:133, col:150> col:150 _EnvVar 'const wchar_t *'
| |-ParmVarDecl 0x1653b368cb0 <col:183, col:192> col:192 _ResultPath 'wchar_t *'
| `-DeprecatedAttr 0x1653b368f38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wsearchenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1653b369550 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:896:278> col:63 _wsplitpath 'void (const wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *) __attribute__((cdecl))':'void (const wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *)'
| |-ParmVarDecl 0x1653b369138 <col:82, col:98> col:98 _FullPath 'const wchar_t *'
| |-ParmVarDecl 0x1653b3691b0 <col:134, col:144> col:144 _Drive 'wchar_t *'
| |-ParmVarDecl 0x1653b369228 <col:177, col:187> col:187 _Dir 'wchar_t *'
| |-ParmVarDecl 0x1653b3692a0 <col:218, col:228> col:228 _Filename 'wchar_t *'
| |-ParmVarDecl 0x1653b369318 <col:264, col:274> col:274 _Ext 'wchar_t *'
| `-DeprecatedAttr 0x1653b369618 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wsplitpath_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1653b369e30 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:897:21, line:901:82> line:897:37 _wsplitpath_s 'errno_t (const wchar_t *, wchar_t *, size_t, wchar_t *, size_t, wchar_t *, size_t, wchar_t *, size_t) __attribute__((cdecl))':'errno_t (const wchar_t *, wchar_t *, size_t, wchar_t *, size_t, wchar_t *, size_t, wchar_t *, size_t)'
| |-ParmVarDecl 0x1653b369758 <col:58, col:74> col:74 _FullPath 'const wchar_t *'
| |-ParmVarDecl 0x1653b3697d0 <line:898:48, col:58> col:58 _Drive 'wchar_t *'
| |-ParmVarDecl 0x1653b369848 <col:71, col:78> col:78 _DriveSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1653b3698c0 <line:899:46, col:56> col:56 _Dir 'wchar_t *'
| |-ParmVarDecl 0x1653b369938 <col:67, col:74> col:74 _DirSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1653b3699b0 <line:900:51, col:61> col:61 _Filename 'wchar_t *'
| |-ParmVarDecl 0x1653b369a28 <col:77, col:84> col:84 _FilenameSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1653b369aa0 <line:901:46, col:56> col:56 _Ext 'wchar_t *'
| `-ParmVarDecl 0x1653b369b18 <col:67, col:74> col:74 _ExtSize 'size_t':'unsigned long long'
|-FunctionDecl 0x1653b36a150 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:909:78> col:50 _seterrormode 'void (int) __attribute__((cdecl))':'void (int)'
| |-ParmVarDecl 0x1653b36a048 <col:69, col:73> col:73 _Mode 'int'
| `-DeprecatedAttr 0x1653b36a1f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using SetErrorMode instead. See online help for details." ""
|-FunctionDecl 0x1653b36a5e8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:910:97> col:42 _beep 'void (unsigned int, unsigned int) __attribute__((cdecl))':'void (unsigned int, unsigned int)'
| |-ParmVarDecl 0x1653b36a408 <col:53, col:62> col:62 _Frequency 'unsigned int'
| |-ParmVarDecl 0x1653b36a488 <col:79, col:88> col:88 _Duration 'unsigned int'
| `-DeprecatedAttr 0x1653b36a698 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using Beep instead. See online help for details." ""
|-FunctionDecl 0x1653b36a9e0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:911:78> col:43 _sleep 'void (unsigned long) __attribute__((cdecl))':'void (unsigned long)'
| |-ParmVarDecl 0x1653b36a8a0 <col:55, col:69> col:69 _Duration 'unsigned long'
| `-DeprecatedAttr 0x1653b36aa88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using Sleep instead. See online help for details." ""
|-FunctionDecl 0x1653b3700a0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:934:187> col:102 ecvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x1653b36fde0 <col:112, col:119> col:119 _Val 'double'
| |-ParmVarDecl 0x1653b36fe60 <col:130, col:134> col:134 _NumOfDigits 'int'
| |-ParmVarDecl 0x1653b36fee0 <col:154, col:160> col:160 _PtDec 'int *'
| |-ParmVarDecl 0x1653b36ff60 <col:174, col:180> col:180 _PtSign 'int *'
| |-DeprecatedAttr 0x1653b370160 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _ecvt. See online help for details." ""
| `-DeprecatedAttr 0x1653b370258 <col:47, col:63> "This function or variable may be unsafe. Consider using _ecvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1653b370790 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:935:184> col:102 fcvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x1653b3704d0 <col:112, col:119> col:119 _Val 'double'
| |-ParmVarDecl 0x1653b370550 <col:130, col:134> col:134 _NumOfDec 'int'
| |-ParmVarDecl 0x1653b3705d0 <col:151, col:157> col:157 _PtDec 'int *'
| |-ParmVarDecl 0x1653b370650 <col:171, col:177> col:177 _PtSign 'int *'
| |-DeprecatedAttr 0x1653b370850 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcvt. See online help for details." ""
| `-DeprecatedAttr 0x1653b370948 <col:47, col:63> "This function or variable may be unsafe. Consider using _fcvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1653b373e28 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:936:179> col:96 gcvt 'char *(double, int, char *) __attribute__((cdecl))':'char *(double, int, char *)'
| |-ParmVarDecl 0x1653b370bc0 <col:106, col:113> col:113 _Val 'double'
| |-ParmVarDecl 0x1653b373c88 <col:124, col:128> col:128 _NumOfDigits 'int'
| |-ParmVarDecl 0x1653b373d08 <col:165, col:172> col:172 _DstBuf 'char *'
| |-DeprecatedAttr 0x1653b373ee0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _gcvt. See online help for details." ""
| `-DeprecatedAttr 0x1653b373fd8 <col:47, col:63> "This function or variable may be unsafe. Consider using _fcvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1653b374470 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:937:170> col:96 itoa 'char *(int, char *, int) __attribute__((cdecl))':'char *(int, char *, int)'
| |-ParmVarDecl 0x1653b374250 <col:106, col:110> col:110 _Val 'int'
| |-ParmVarDecl 0x1653b3742d0 <col:139, col:146> col:146 _DstBuf 'char *'
| |-ParmVarDecl 0x1653b374350 <col:160, col:164> col:164 _Radix 'int'
| |-DeprecatedAttr 0x1653b374528 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _itoa. See online help for details." ""
| `-DeprecatedAttr 0x1653b374620 <col:47, col:63> "This function or variable may be unsafe. Consider using _itoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1653b374ab8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:938:171> col:96 ltoa 'char *(long, char *, int) __attribute__((cdecl))':'char *(long, char *, int)'
| |-ParmVarDecl 0x1653b374898 <col:106, col:111> col:111 _Val 'long'
| |-ParmVarDecl 0x1653b374918 <col:140, col:147> col:147 _DstBuf 'char *'
| |-ParmVarDecl 0x1653b374998 <col:161, col:165> col:165 _Radix 'int'
| |-DeprecatedAttr 0x1653b374b70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _ltoa. See online help for details." ""
| `-DeprecatedAttr 0x1653b371c50 <col:47, col:63> "This function or variable may be unsafe. Consider using _ltoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1653b371ee8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:941:108> col:71 putenv 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x1653b371e08 <col:85, col:98> col:98 _EnvString 'const char *'
| `-DeprecatedAttr 0x1653b371f90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putenv. See online help for details." ""
|-FunctionDecl 0x1653b372370 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:944:245> col:128 swab 'void (char *, char *, int) __attribute__((cdecl))':'void (char *, char *, int)'
| |-ParmVarDecl 0x1653b372158 <col:165, col:172> col:172 _Buf1 'char *'
| |-ParmVarDecl 0x1653b3721d8 <col:210, col:217> col:217 _Buf2 'char *'
| |-ParmVarDecl 0x1653b372258 <col:229, col:233> col:233 _SizeInBytes 'int'
| `-DeprecatedAttr 0x1653b372428 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _swab. See online help for details." ""
|-FunctionDecl 0x1653b372910 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:945:181> col:96 ultoa 'char *(unsigned long, char *, int) __attribute__((cdecl))':'char *(unsigned long, char *, int)'
| |-ParmVarDecl 0x1653b3726f0 <col:107, col:121> col:121 _Val 'unsigned long'
| |-ParmVarDecl 0x1653b372770 <col:150, col:157> col:157 _Dstbuf 'char *'
| |-ParmVarDecl 0x1653b3727f0 <col:171, col:175> col:175 _Radix 'int'
| |-DeprecatedAttr 0x1653b3729c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _ultoa. See online help for details." ""
| `-DeprecatedAttr 0x1653b372ac0 <col:47, col:63> "This function or variable may be unsafe. Consider using _ultoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1653b372cb8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:64:18, line:947:48> col:18 onexit '_onexit_t (_onexit_t) __attribute__((cdecl))':'_onexit_t (_onexit_t)'
| `-ParmVarDecl 0x1653b372bd0 <line:64:18, line:947:43> col:43 _Func '_onexit_t':'int (*)(void) __attribute__((cdecl))'
|-RecordDecl 0x1653b372d78 <.//openssl//file_jk/before\crypto\ec/ec_lcl.h:52:1, line:173:1> line:52:8 struct ec_method_st definition
| |-FieldDecl 0x1653b372e48 <line:54:5, col:9> col:9 flags 'int'
| |-FieldDecl 0x1653b372eb8 <line:56:5, col:9> col:9 field_type 'int'
| |-FieldDecl 0x1653b373058 <line:61:5, col:34> col:11 group_init 'int (*)(int *)'
| |-FieldDecl 0x1653b373220 <line:62:5, col:37> col:12 group_finish 'void (*)(int *)'
| |-FieldDecl 0x1653b373330 <line:63:5, col:43> col:12 group_clear_finish 'void (*)(int *)'
| |-FieldDecl 0x1653b3735a0 <line:64:5, col:52> col:11 group_copy 'int (*)(int *, const int *)'
| |-FieldDecl 0x1653b3739b8 <line:67:5, line:68:54> line:67:11 group_set_curve 'int (*)(int *, const int *, const int *, const int *, int *)'
| |-FieldDecl 0x1653b374e28 <line:69:5, line:70:37> line:69:11 group_get_curve 'int (*)(const int *, int *, int *, int *, int *)'
| |-FieldDecl 0x1653b374ff8 <line:72:5, col:46> col:11 group_get_degree 'int (*)(const int *)'
| |-FieldDecl 0x1653b375110 <line:73:5, col:46> col:11 group_order_bits 'int (*)(const int *)'
| |-FieldDecl 0x1653b375380 <line:75:5, col:64> col:11 group_check_discriminant 'int (*)(const int *, int *)'
| |-FieldDecl 0x1653b375498 <line:80:5, col:34> col:11 point_init 'int (*)(int *)'
| |-FieldDecl 0x1653b3755a8 <line:81:5, col:37> col:12 point_finish 'void (*)(int *)'
| |-FieldDecl 0x1653b3756b8 <line:82:5, col:43> col:12 point_clear_finish 'void (*)(int *)'
| |-FieldDecl 0x1653b375858 <line:83:5, col:52> col:11 point_copy 'int (*)(int *, const int *)'
| |-FieldDecl 0x1653b3759f8 <line:92:5, col:63> col:11 point_set_to_infinity 'int (*)(const int *, int *)'
| |-FieldDecl 0x1653b370e80 <line:93:5, line:96:76> line:93:11 point_set_Jprojective_coordinates_GFp 'int (*)(const int *, int *, const int *, const int *, const int *, int *)'
| |-FieldDecl 0x1653b371330 <line:97:5, line:100:59> line:97:11 point_get_Jprojective_coordinates_GFp 'int (*)(const int *, const int *, int *, int *, int *, int *)'
| |-FieldDecl 0x1653b371748 <line:101:5, line:103:50> line:101:11 point_set_affine_coordinates 'int (*)(const int *, int *, const int *, const int *, int *)'
| |-FieldDecl 0x1653b371b58 <line:104:5, line:105:72> line:104:11 point_get_affine_coordinates 'int (*)(const int *, const int *, int *, int *, int *)'
| |-FieldDecl 0x1653b36df48 <line:106:5, line:108:54> line:106:11 point_set_compressed_coordinates 'int (*)(const int *, int *, const int *, int, int *)'
| |-FieldDecl 0x1653b36e468 <line:110:5, line:112:46> line:110:14 point2oct 'size_t (*)(const int *, const int *, int, unsigned char *, size_t, int *)'
| |-FieldDecl 0x1653b36e8c8 <line:113:5, line:114:43> line:113:11 oct2point 'int (*)(const int *, int *, const unsigned char *, size_t, int *)'
| |-FieldDecl 0x1653b37bcf0 <line:116:5, line:117:44> line:116:11 add 'int (*)(const int *, int *, const int *, const int *, int *)'
| |-FieldDecl 0x1653b37c080 <line:118:5, col:75> col:11 dbl 'int (*)(const int *, int *, const int *, int *)'
| |-FieldDecl 0x1653b37c378 <line:119:5, col:58> col:11 invert 'int (*)(const int *, int *, int *)'
| |-FieldDecl 0x1653b37c5e0 <line:123:5, col:62> col:11 is_at_infinity 'int (*)(const int *, const int *)'
| |-FieldDecl 0x1653b37c8d8 <line:124:5, col:69> col:11 is_on_curve 'int (*)(const int *, const int *, int *)'
| |-FieldDecl 0x1653b37cc60 <line:125:5, line:126:31> line:125:11 point_cmp 'int (*)(const int *, const int *, const int *, int *)'
| |-FieldDecl 0x1653b377e68 <line:128:5, col:63> col:11 make_affine 'int (*)(const int *, int *, int *)'
| |-FieldDecl 0x1653b3782e0 <line:129:5, line:130:40> line:129:11 points_make_affine 'int (*)(const int *, size_t, int **, int *)'
| |-FieldDecl 0x1653b378918 <line:136:5, line:138:25> line:136:11 mul 'int (*)(const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-FieldDecl 0x1653b378b80 <line:139:5, col:54> col:11 precompute_mult 'int (*)(int *, int *)'
| |-FieldDecl 0x1653b379cd0 <line:140:5, col:55> col:11 have_precompute_mult 'int (*)(const int *)'
| |-FieldDecl 0x1653b37a008 <line:148:5, line:149:48> line:148:11 field_mul 'int (*)(const int *, int *, const int *, const int *, int *)'
| |-FieldDecl 0x1653b37a2b8 <line:150:5, col:77> col:11 field_sqr 'int (*)(const int *, int *, const int *, int *)'
| |-FieldDecl 0x1653b37a5f0 <line:151:5, line:152:48> line:151:11 field_div 'int (*)(const int *, int *, const int *, const int *, int *)'
| |-FieldDecl 0x1653b37a8a0 <line:154:5, line:155:34> line:154:11 field_encode 'int (*)(const int *, int *, const int *, int *)'
| |-FieldDecl 0x1653b37ab50 <line:157:5, line:158:34> line:157:11 field_decode 'int (*)(const int *, int *, const int *, int *)'
| |-FieldDecl 0x1653b376d58 <line:159:5, col:67> col:11 field_set_to_one 'int (*)(const int *, int *, int *)'
| |-FieldDecl 0x1653b377080 <line:161:5, col:75> col:14 priv2oct 'size_t (*)(const int *, unsigned char *, size_t)'
| |-FieldDecl 0x1653b3773a8 <line:162:5, col:72> col:11 oct2priv 'int (*)(int *, const unsigned char *, size_t)'
| |-FieldDecl 0x1653b377548 <line:163:5, col:61> col:11 set_private 'int (*)(int *, const int *)'
| |-FieldDecl 0x1653b377660 <line:164:5, col:32> col:11 keygen 'int (*)(int *)'
| |-FieldDecl 0x1653b377778 <line:165:5, col:40> col:11 keycheck 'int (*)(const int *)'
| |-FieldDecl 0x1653b377890 <line:166:5, col:35> col:11 keygenpub 'int (*)(int *)'
| |-FieldDecl 0x1653b377a30 <line:167:5, col:50> col:11 keycopy 'int (*)(int *, const int *)'
| |-FieldDecl 0x1653b377b40 <line:168:5, col:36> col:12 keyfinish 'void (*)(int *)'
| |-FieldDecl 0x1653b378fb0 <line:170:5, line:171:72> line:170:11 ecdh_compute_key 'int (*)(unsigned char **, size_t *, const int *, const int *)'
| `-FieldDecl 0x1653b3791d8 <line:172:5, col:77> col:11 blind_coordinates 'int (*)(const int *, int *, int *)'
|-RecordDecl 0x1653b379230 <line:178:9, col:16> col:16 struct nistp224_pre_comp_st
|-TypedefDecl 0x1653b379348 <col:1, col:37> col:37 referenced NISTP224_PRE_COMP 'struct nistp224_pre_comp_st':'struct nistp224_pre_comp_st'
| `-ElaboratedType 0x1653b3792f0 'struct nistp224_pre_comp_st' sugar
|   `-RecordType 0x1653b3792d0 'struct nistp224_pre_comp_st'
|     `-Record 0x1653b2f7c20 'nistp224_pre_comp_st'
|-RecordDecl 0x1653b3793b8 <line:179:9, col:16> col:16 struct nistp256_pre_comp_st
|-TypedefDecl 0x1653b3794c8 <col:1, col:37> col:37 referenced NISTP256_PRE_COMP 'struct nistp256_pre_comp_st':'struct nistp256_pre_comp_st'
| `-ElaboratedType 0x1653b379470 'struct nistp256_pre_comp_st' sugar
|   `-RecordType 0x1653b379450 'struct nistp256_pre_comp_st'
|     `-Record 0x1653b3793b8 'nistp256_pre_comp_st'
|-RecordDecl 0x1653b379538 <line:180:9, col:16> col:16 struct nistp521_pre_comp_st
|-TypedefDecl 0x1653b379648 <col:1, col:37> col:37 referenced NISTP521_PRE_COMP 'struct nistp521_pre_comp_st':'struct nistp521_pre_comp_st'
| `-ElaboratedType 0x1653b3795f0 'struct nistp521_pre_comp_st' sugar
|   `-RecordType 0x1653b3795d0 'struct nistp521_pre_comp_st'
|     `-Record 0x1653b379538 'nistp521_pre_comp_st'
|-RecordDecl 0x1653b3796b8 <line:181:9, col:16> col:16 struct nistz256_pre_comp_st
|-TypedefDecl 0x1653b3797c8 <col:1, col:37> col:37 referenced NISTZ256_PRE_COMP 'struct nistz256_pre_comp_st':'struct nistz256_pre_comp_st'
| `-ElaboratedType 0x1653b379770 'struct nistz256_pre_comp_st' sugar
|   `-RecordType 0x1653b379750 'struct nistz256_pre_comp_st'
|     `-Record 0x1653b3796b8 'nistz256_pre_comp_st'
|-RecordDecl 0x1653b379838 <line:182:9, col:16> col:16 struct ec_pre_comp_st
|-TypedefDecl 0x1653b379948 <col:1, col:31> col:31 referenced EC_PRE_COMP 'struct ec_pre_comp_st':'struct ec_pre_comp_st'
| `-ElaboratedType 0x1653b3798f0 'struct ec_pre_comp_st' sugar
|   `-RecordType 0x1653b3798d0 'struct ec_pre_comp_st'
|     `-Record 0x1653b379838 'ec_pre_comp_st'
|-RecordDecl 0x1653b3799b8 <line:184:1, line:249:1> line:184:8 invalid struct ec_group_st definition
| |-FieldDecl 0x1653b379a88 <line:185:5, col:22> col:22 invalid meth 'const int *'
| |-FieldDecl 0x1653b379af8 <line:186:5, col:15> col:15 invalid generator 'int *'
| |-FieldDecl 0x1653b379b68 <line:187:5, col:13> col:13 invalid order 'int *'
| |-FieldDecl 0x1653b379bd8 <col:5, col:21> col:21 invalid cofactor 'int *'
| |-FieldDecl 0x1653b379c48 <line:188:5, col:9> col:9 curve_name 'int'
| |-FieldDecl 0x1653b37cd00 <line:189:5, col:9> col:9 asn1_flag 'int'
| |-FieldDecl 0x1653b37cd70 <line:190:5, col:29> col:29 invalid asn1_form 'int'
| |-FieldDecl 0x1653b37cde0 <line:191:5, col:20> col:20 seed 'unsigned char *'
| |-FieldDecl 0x1653b37ce48 <line:193:5, col:12> col:12 seed_len 'size_t':'unsigned long long'
| |-FieldDecl 0x1653b37ceb8 <line:203:5, col:13> col:13 invalid field 'int *'
| |-FieldDecl 0x1653b37cfb0 <line:211:5, col:15> col:9 poly 'int [6]'
| |-FieldDecl 0x1653b37d020 <line:219:5, col:13> col:13 invalid a 'int *'
| |-FieldDecl 0x1653b37d090 <col:5, col:17> col:17 invalid b 'int *'
| |-FieldDecl 0x1653b37d100 <line:221:5, col:9> col:9 a_is_minus3 'int'
| |-FieldDecl 0x1653b37d170 <line:223:5, col:11> col:11 field_data1 'void *'
| |-FieldDecl 0x1653b37d1e0 <line:225:5, col:11> col:11 field_data2 'void *'
| |-FieldDecl 0x1653b37d570 <line:227:5, line:228:36> line:227:11 field_mod_func 'int (*)(int *, const int *, const int *, int *)'
| |-FieldDecl 0x1653b37d5e0 <line:230:5, col:18> col:18 invalid mont_data 'int *'
| |-EnumDecl 0x1653b37d638 <line:237:5, line:241:5> line:237:5
| | |-EnumConstantDecl 0x1653b37d710 <line:238:9> col:9 PCT_none 'int'
| | |-EnumConstantDecl 0x1653b37d768 <line:239:9> col:9 referenced PCT_nistp224 'int'
| | |-EnumConstantDecl 0x1653b37d7c0 <col:23> col:23 PCT_nistp256 'int'
| | |-EnumConstantDecl 0x1653b37d818 <col:37> col:37 PCT_nistp521 'int'
| | |-EnumConstantDecl 0x1653b37d870 <col:51> col:51 PCT_nistz256 'int'
| | `-EnumConstantDecl 0x1653b37d8c8 <line:240:9> col:9 PCT_ec 'int'
| |-FieldDecl 0x1653b37d978 <line:237:5, line:241:7> col:7 pre_comp_type 'enum (anonymous enum at .//openssl//file_jk/before\crypto\ec/ec_lcl.h:237:5)':'enum ec_group_st::(anonymous at .//openssl//file_jk/before\crypto\ec/ec_lcl.h:237:5)'
| |-RecordDecl 0x1653b37d9d0 <line:242:5, line:248:5> line:242:5 union definition
| | |-FieldDecl 0x1653b37db18 <line:243:9, col:28> col:28 nistp224 'NISTP224_PRE_COMP *'
| | |-FieldDecl 0x1653b37dbf8 <line:244:9, col:28> col:28 nistp256 'NISTP256_PRE_COMP *'
| | |-FieldDecl 0x1653b375c90 <line:245:9, col:28> col:28 nistp521 'NISTP521_PRE_COMP *'
| | |-FieldDecl 0x1653b375d78 <line:246:9, col:28> col:28 nistz256 'NISTZ256_PRE_COMP *'
| | `-FieldDecl 0x1653b375e58 <line:247:9, col:22> col:22 ec 'EC_PRE_COMP *'
| `-FieldDecl 0x1653b375f08 <line:242:5, line:248:7> col:7 pre_comp 'union (anonymous union at .//openssl//file_jk/before\crypto\ec/ec_lcl.h:242:5)':'union ec_group_st::(anonymous at .//openssl//file_jk/before\crypto\ec/ec_lcl.h:242:5)'
|-RecordDecl 0x1653b375f60 <line:256:1, line:269:1> line:256:8 invalid struct ec_key_st definition
| |-FieldDecl 0x1653b376038 <line:257:5, col:26> col:26 invalid meth 'const int *'
| |-FieldDecl 0x1653b3760a8 <line:258:5, col:13> col:13 invalid engine 'int *'
| |-FieldDecl 0x1653b376118 <line:259:5, col:9> col:9 version 'int'
| |-FieldDecl 0x1653b376188 <line:260:5, col:15> col:15 invalid group 'int *'
| |-FieldDecl 0x1653b3761f8 <line:261:5, col:15> col:15 invalid pub_key 'int *'
| |-FieldDecl 0x1653b376268 <line:262:5, col:13> col:13 invalid priv_key 'int *'
| |-FieldDecl 0x1653b3762d8 <line:263:5, col:18> col:18 enc_flag 'unsigned int'
| |-FieldDecl 0x1653b376348 <line:264:5, col:29> col:29 invalid conv_form 'int'
| |-FieldDecl 0x1653b3763b8 <line:265:5, col:9> col:9 references 'int'
| |-FieldDecl 0x1653b376428 <line:266:5, col:9> col:9 flags 'int'
| |-FieldDecl 0x1653b376498 <line:267:5, col:20> col:20 invalid ex_data 'int'
| `-FieldDecl 0x1653b376508 <line:268:5, col:20> col:20 invalid lock 'int *'
|-RecordDecl 0x1653b376560 <line:271:1, line:285:1> line:271:8 invalid struct ec_point_st definition
| |-FieldDecl 0x1653b376638 <line:272:5, col:22> col:22 invalid meth 'const int *'
| |-FieldDecl 0x1653b3766a8 <line:274:5, col:9> col:9 curve_name 'int'
| |-FieldDecl 0x1653b376718 <line:279:5, col:13> col:13 invalid X 'int *'
| |-FieldDecl 0x1653b376788 <line:280:5, col:13> col:13 invalid Y 'int *'
| |-FieldDecl 0x1653b3767f8 <line:281:5, col:13> col:13 invalid Z 'int *'
| `-FieldDecl 0x1653b376868 <line:283:5, col:9> col:9 Z_is_one 'int'
|-FunctionDecl 0x1653b3769f8 <line:288:1, line:298:1> line:288:24 invalid ec_point_is_compat 'int (const int *, const int *)' static
| |-ParmVarDecl 0x1653b3768d8 <col:43, col:59> col:59 invalid point 'const int *'
| |-ParmVarDecl 0x1653b376958 <line:289:43, col:59> col:59 invalid group 'const int *'
| `-CompoundStmt 0x1653b376bb0 <line:290:1, line:298:1>
|   |-IfStmt 0x1653b376b60 <line:291:5, line:295:16>
|   | |-OpaqueValueExpr 0x1653b376b48 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1653b376b38 <col:9, col:16>
|   |   `-IntegerLiteral 0x1653b376b10 <col:16> 'int' 0
|   `-ReturnStmt 0x1653b376ba0 <line:297:5, col:12>
|     `-IntegerLiteral 0x1653b376b78 <col:12> 'int' 1
|-FunctionDecl 0x1653b382db8 <line:301:1, col:64> col:20 EC_nistp224_pre_comp_dup 'NISTP224_PRE_COMP *(NISTP224_PRE_COMP *)'
| `-ParmVarDecl 0x1653b376be0 <col:45, col:63> col:64 'NISTP224_PRE_COMP *'
|-FunctionDecl 0x1653b382f78 <line:302:1, col:64> col:20 EC_nistp256_pre_comp_dup 'NISTP256_PRE_COMP *(NISTP256_PRE_COMP *)'
| `-ParmVarDecl 0x1653b382e88 <col:45, col:63> col:64 'NISTP256_PRE_COMP *'
|-FunctionDecl 0x1653b383138 <line:303:1, col:64> col:20 EC_nistp521_pre_comp_dup 'NISTP521_PRE_COMP *(NISTP521_PRE_COMP *)'
| `-ParmVarDecl 0x1653b383048 <col:45, col:63> col:64 'NISTP521_PRE_COMP *'
|-FunctionDecl 0x1653b3832f8 <line:304:1, col:64> col:20 EC_nistz256_pre_comp_dup 'NISTZ256_PRE_COMP *(NISTZ256_PRE_COMP *)'
| `-ParmVarDecl 0x1653b383208 <col:45, col:63> col:64 'NISTZ256_PRE_COMP *'
|-FunctionDecl 0x1653b383458 prev 0x1653b382f78 <line:305:1, col:64> col:20 EC_nistp256_pre_comp_dup 'NISTP256_PRE_COMP *(NISTP256_PRE_COMP *)'
| `-ParmVarDecl 0x1653b3833c8 <col:45, col:63> col:64 'NISTP256_PRE_COMP *'
|-FunctionDecl 0x1653b383608 <line:306:1, col:46> col:14 EC_ec_pre_comp_dup 'EC_PRE_COMP *(EC_PRE_COMP *)'
| `-ParmVarDecl 0x1653b383510 <col:33, col:45> col:46 'EC_PRE_COMP *'
|-FunctionDecl 0x1653b383770 <line:308:1, col:38> col:6 invalid EC_pre_comp_free 'void (int *)'
| `-ParmVarDecl 0x1653b3836e0 <col:23, col:33> col:33 invalid group 'int *'
|-FunctionDecl 0x1653b383918 <line:309:1, col:51> col:6 used EC_nistp224_pre_comp_free 'void (NISTP224_PRE_COMP *)'
| `-ParmVarDecl 0x1653b383828 <col:32, col:50> col:51 'NISTP224_PRE_COMP *'
|-FunctionDecl 0x1653b383ad8 <line:310:1, col:51> col:6 EC_nistp256_pre_comp_free 'void (NISTP256_PRE_COMP *)'
| `-ParmVarDecl 0x1653b3839e8 <col:32, col:50> col:51 'NISTP256_PRE_COMP *'
|-FunctionDecl 0x1653b383c98 <line:311:1, col:51> col:6 EC_nistp521_pre_comp_free 'void (NISTP521_PRE_COMP *)'
| `-ParmVarDecl 0x1653b383ba8 <col:32, col:50> col:51 'NISTP521_PRE_COMP *'
|-FunctionDecl 0x1653b381e58 <line:312:1, col:51> col:6 EC_nistz256_pre_comp_free 'void (NISTZ256_PRE_COMP *)'
| `-ParmVarDecl 0x1653b381d60 <col:32, col:50> col:51 'NISTZ256_PRE_COMP *'
|-FunctionDecl 0x1653b382018 <line:313:1, col:39> col:6 EC_ec_pre_comp_free 'void (EC_PRE_COMP *)'
| `-ParmVarDecl 0x1653b381f28 <col:26, col:38> col:39 'EC_PRE_COMP *'
|-FunctionDecl 0x1653b3824d0 <line:319:1, line:321:25> line:319:5 invalid ec_wNAF_mul 'int (const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-ParmVarDecl 0x1653b3820f0 <col:17, col:33> col:33 invalid group 'const int *'
| |-ParmVarDecl 0x1653b382170 <col:40, col:50> col:50 invalid r 'int *'
| |-ParmVarDecl 0x1653b3821f0 <col:53, col:67> col:67 invalid scalar 'const int *'
| |-ParmVarDecl 0x1653b382268 <line:320:17, col:24> col:24 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1653b3822f8 <col:29, <invalid sloc>> col:45 invalid points 'const int **':'const int **'
| |-ParmVarDecl 0x1653b382388 <col:55, <invalid sloc>> col:69 invalid scalars 'const int **':'const int **'
| `-ParmVarDecl 0x1653b382408 <line:321:17, <invalid sloc>> col:25 invalid 'int *'
|-FunctionDecl 0x1653b3826e0 <line:322:1, col:54> col:5 invalid ec_wNAF_precompute_mult 'int (int *, int *)'
| |-ParmVarDecl 0x1653b3825c0 <col:29, col:39> col:39 invalid group 'int *'
| `-ParmVarDecl 0x1653b382640 <col:46, <invalid sloc>> col:54 invalid 'int *'
|-FunctionDecl 0x1653b382840 <line:323:1, col:55> col:5 invalid ec_wNAF_have_precompute_mult 'int (const int *)'
| `-ParmVarDecl 0x1653b3827a8 <col:34, col:50> col:50 invalid group 'const int *'
|-FunctionDecl 0x1653b382998 <line:326:1, col:40> col:5 invalid ec_GFp_simple_group_init 'int (int *)'
| `-ParmVarDecl 0x1653b382900 <col:30, <invalid sloc>> col:40 invalid 'int *'
|-FunctionDecl 0x1653b382ae8 <line:327:1, col:43> col:6 invalid ec_GFp_simple_group_finish 'void (int *)'
| `-ParmVarDecl 0x1653b382a58 <col:33, <invalid sloc>> col:43 invalid 'int *'
|-FunctionDecl 0x1653b382c38 <line:328:1, col:49> col:6 invalid ec_GFp_simple_group_clear_finish 'void (int *)'
| `-ParmVarDecl 0x1653b382ba8 <col:39, <invalid sloc>> col:49 invalid 'int *'
|-FunctionDecl 0x1653b383e90 <line:329:1, col:58> col:5 invalid ec_GFp_simple_group_copy 'int (int *, const int *)'
| |-ParmVarDecl 0x1653b383d70 <col:30, <invalid sloc>> col:40 invalid 'int *'
| `-ParmVarDecl 0x1653b383df0 <col:42, <invalid sloc>> col:58 invalid 'const int *'
|-FunctionDecl 0x1653b384210 <line:330:1, line:331:77> line:330:5 invalid ec_GFp_simple_group_set_curve 'int (int *, const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1653b383f58 <col:35, <invalid sloc>> col:45 invalid 'int *'
| |-ParmVarDecl 0x1653b383fd8 <col:47, col:61> col:61 invalid p 'const int *'
| |-ParmVarDecl 0x1653b384058 <line:331:35, col:49> col:49 invalid a 'const int *'
| |-ParmVarDecl 0x1653b3840d8 <col:52, col:66> col:66 invalid b 'const int *'
| `-ParmVarDecl 0x1653b384158 <col:69, <invalid sloc>> col:77 invalid 'int *'
|-FunctionDecl 0x1653b3845a8 <line:332:1, line:333:54> line:332:5 invalid ec_GFp_simple_group_get_curve 'int (const int *, int *, int *, int *, int *)'
| |-ParmVarDecl 0x1653b3842f0 <col:35, <invalid sloc>> col:51 invalid 'const int *'
| |-ParmVarDecl 0x1653b384370 <col:53, col:61> col:61 invalid p 'int *'
| |-ParmVarDecl 0x1653b3843f0 <col:64, col:72> col:72 invalid a 'int *'
| |-ParmVarDecl 0x1653b384470 <line:333:35, col:43> col:43 invalid b 'int *'
| `-ParmVarDecl 0x1653b3844f0 <col:46, <invalid sloc>> col:54 invalid 'int *'
|-FunctionDecl 0x1653b384720 <line:334:1, col:52> col:5 invalid ec_GFp_simple_group_get_degree 'int (const int *)'
| `-ParmVarDecl 0x1653b384688 <col:36, <invalid sloc>> col:52 invalid 'const int *'
|-FunctionDecl 0x1653b384900 <line:335:1, col:70> col:5 invalid ec_GFp_simple_group_check_discriminant 'int (const int *, int *)'
| |-ParmVarDecl 0x1653b3847e0 <col:44, <invalid sloc>> col:60 invalid 'const int *'
| `-ParmVarDecl 0x1653b384860 <col:62, <invalid sloc>> col:70 invalid 'int *'
|-FunctionDecl 0x1653b384a60 <line:336:1, col:40> col:5 invalid ec_GFp_simple_point_init 'int (int *)'
| `-ParmVarDecl 0x1653b3849c8 <col:30, <invalid sloc>> col:40 invalid 'int *'
|-FunctionDecl 0x1653b384bb0 <line:337:1, col:43> col:6 invalid ec_GFp_simple_point_finish 'void (int *)'
| `-ParmVarDecl 0x1653b384b20 <col:33, <invalid sloc>> col:43 invalid 'int *'
|-FunctionDecl 0x1653b37fd30 <line:338:1, col:49> col:6 invalid ec_GFp_simple_point_clear_finish 'void (int *)'
| `-ParmVarDecl 0x1653b384c70 <col:39, <invalid sloc>> col:49 invalid 'int *'
|-FunctionDecl 0x1653b37ff10 <line:339:1, col:58> col:5 invalid ec_GFp_simple_point_copy 'int (int *, const int *)'
| |-ParmVarDecl 0x1653b37fdf0 <col:30, <invalid sloc>> col:40 invalid 'int *'
| `-ParmVarDecl 0x1653b37fe70 <col:42, <invalid sloc>> col:58 invalid 'const int *'
|-FunctionDecl 0x1653b3800f8 <line:340:1, col:69> col:5 invalid ec_GFp_simple_point_set_to_infinity 'int (const int *, int *)'
| |-ParmVarDecl 0x1653b37ffd8 <col:41, <invalid sloc>> col:57 invalid 'const int *'
| `-ParmVarDecl 0x1653b380058 <col:59, <invalid sloc>> col:69 invalid 'int *'
|-FunctionDecl 0x1653b380500 <line:341:1, line:344:76> line:341:5 invalid ec_GFp_simple_set_Jprojective_coordinates_GFp 'int (const int *, int *, const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1653b3801c0 <col:51, <invalid sloc>> col:67 invalid 'const int *'
| |-ParmVarDecl 0x1653b380240 <line:342:51, <invalid sloc>> col:61 invalid 'int *'
| |-ParmVarDecl 0x1653b3802c0 <col:63, col:77> col:77 invalid x 'const int *'
| |-ParmVarDecl 0x1653b380340 <line:343:51, col:65> col:65 invalid y 'const int *'
| |-ParmVarDecl 0x1653b3803c0 <line:344:51, col:65> col:65 invalid z 'const int *'
| `-ParmVarDecl 0x1653b380440 <col:68, <invalid sloc>> col:76 invalid 'int *'
|-FunctionDecl 0x1653b380928 <line:345:1, line:348:59> line:345:5 invalid ec_GFp_simple_get_Jprojective_coordinates_GFp 'int (const int *, const int *, int *, int *, int *, int *)'
| |-ParmVarDecl 0x1653b3805e8 <col:51, <invalid sloc>> col:67 invalid 'const int *'
| |-ParmVarDecl 0x1653b380668 <line:346:51, <invalid sloc>> col:67 invalid 'const int *'
| |-ParmVarDecl 0x1653b3806e8 <col:69, col:77> col:77 invalid x 'int *'
| |-ParmVarDecl 0x1653b380768 <line:347:51, col:59> col:59 invalid y 'int *'
| |-ParmVarDecl 0x1653b3807e8 <col:62, col:70> col:70 invalid z 'int *'
| `-ParmVarDecl 0x1653b380868 <line:348:51, <invalid sloc>> col:59 invalid 'int *'
|-FunctionDecl 0x1653b384d80 <line:349:1, line:351:73> line:349:5 invalid ec_GFp_simple_point_set_affine_coordinates 'int (const int *, int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1653b380a10 <col:48, <invalid sloc>> col:64 invalid 'const int *'
| |-ParmVarDecl 0x1653b380a90 <col:66, <invalid sloc>> col:76 invalid 'int *'
| |-ParmVarDecl 0x1653b380b10 <line:350:48, col:62> col:62 invalid x 'const int *'
| |-ParmVarDecl 0x1653b380b90 <line:351:48, col:62> col:62 invalid y 'const int *'
| `-ParmVarDecl 0x1653b380c10 <col:65, <invalid sloc>> col:73 invalid 'int *'
|-FunctionDecl 0x1653b385118 <line:352:1, line:354:67> line:352:5 invalid ec_GFp_simple_point_get_affine_coordinates 'int (const int *, const int *, int *, int *, int *)'
| |-ParmVarDecl 0x1653b384e60 <col:48, <invalid sloc>> col:64 invalid 'const int *'
| |-ParmVarDecl 0x1653b384ee0 <line:353:48, <invalid sloc>> col:64 invalid 'const int *'
| |-ParmVarDecl 0x1653b384f60 <col:66, col:74> col:74 invalid x 'int *'
| |-ParmVarDecl 0x1653b384fe0 <line:354:48, col:56> col:56 invalid y 'int *'
| `-ParmVarDecl 0x1653b385060 <col:59, <invalid sloc>> col:67 invalid 'int *'
|-FunctionDecl 0x1653b3854b0 <line:355:1, line:357:54> line:355:5 invalid ec_GFp_simple_set_compressed_coordinates 'int (const int *, int *, const int *, int, int *)'
| |-ParmVarDecl 0x1653b3851f8 <col:46, <invalid sloc>> col:62 invalid 'const int *'
| |-ParmVarDecl 0x1653b385278 <col:64, <invalid sloc>> col:74 invalid 'int *'
| |-ParmVarDecl 0x1653b3852f8 <line:356:46, col:60> col:60 invalid x 'const int *'
| |-ParmVarDecl 0x1653b385378 <col:63, col:67> col:67 y_bit 'int'
| `-ParmVarDecl 0x1653b3853f8 <line:357:46, <invalid sloc>> col:54 invalid 'int *'
|-FunctionDecl 0x1653b3858c0 <line:358:1, line:360:72> line:358:8 invalid ec_GFp_simple_point2oct 'size_t (const int *, const int *, int, unsigned char *, size_t, int *)'
| |-ParmVarDecl 0x1653b385590 <col:32, <invalid sloc>> col:48 invalid 'const int *'
| |-ParmVarDecl 0x1653b385610 <col:50, <invalid sloc>> col:66 invalid 'const int *'
| |-ParmVarDecl 0x1653b385690 <line:359:32, col:56> col:56 invalid form 'int'
| |-ParmVarDecl 0x1653b385710 <line:360:32, col:47> col:47 buf 'unsigned char *'
| |-ParmVarDecl 0x1653b385788 <col:52, col:59> col:59 len 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1653b385808 <col:64, <invalid sloc>> col:72 invalid 'int *'
|-FunctionDecl 0x1653b385c58 <line:361:1, line:362:75> line:361:5 invalid ec_GFp_simple_oct2point 'int (const int *, int *, const unsigned char *, size_t, int *)'
| |-ParmVarDecl 0x1653b3859a8 <col:29, <invalid sloc>> col:45 invalid 'const int *'
| |-ParmVarDecl 0x1653b385a28 <col:47, <invalid sloc>> col:57 invalid 'int *'
| |-ParmVarDecl 0x1653b385aa8 <line:362:29, col:50> col:50 buf 'const unsigned char *'
| |-ParmVarDecl 0x1653b385b20 <col:55, col:62> col:62 len 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1653b385ba0 <col:67, <invalid sloc>> col:75 invalid 'int *'
|-FunctionDecl 0x1653b37dfc8 <line:363:1, line:364:50> line:363:5 invalid ec_GFp_simple_add 'int (const int *, int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1653b37dd10 <col:23, <invalid sloc>> col:39 invalid 'const int *'
| |-ParmVarDecl 0x1653b37dd90 <col:41, col:51> col:51 invalid r 'int *'
| |-ParmVarDecl 0x1653b37de10 <col:54, col:70> col:70 invalid a 'const int *'
| |-ParmVarDecl 0x1653b37de90 <line:364:23, col:39> col:39 invalid b 'const int *'
| `-ParmVarDecl 0x1653b37df10 <col:42, <invalid sloc>> col:50 invalid 'int *'
|-FunctionDecl 0x1653b37e2d8 <line:365:1, line:366:31> line:365:5 invalid ec_GFp_simple_dbl 'int (const int *, int *, const int *, int *)'
| |-ParmVarDecl 0x1653b37e0a8 <col:23, <invalid sloc>> col:39 invalid 'const int *'
| |-ParmVarDecl 0x1653b37e128 <col:41, col:51> col:51 invalid r 'int *'
| |-ParmVarDecl 0x1653b37e1a8 <col:54, col:70> col:70 invalid a 'const int *'
| `-ParmVarDecl 0x1653b37e228 <line:366:23, <invalid sloc>> col:31 invalid 'int *'
|-FunctionDecl 0x1653b37e558 <line:367:1, col:64> col:5 invalid ec_GFp_simple_invert 'int (const int *, int *, int *)'
| |-ParmVarDecl 0x1653b37e3b0 <col:26, <invalid sloc>> col:42 invalid 'const int *'
| |-ParmVarDecl 0x1653b37e430 <col:44, <invalid sloc>> col:54 invalid 'int *'
| `-ParmVarDecl 0x1653b37e4b0 <col:56, <invalid sloc>> col:64 invalid 'int *'
|-FunctionDecl 0x1653b37e748 <line:368:1, col:68> col:5 invalid ec_GFp_simple_is_at_infinity 'int (const int *, const int *)'
| |-ParmVarDecl 0x1653b37e628 <col:34, <invalid sloc>> col:50 invalid 'const int *'
| `-ParmVarDecl 0x1653b37e6a8 <col:52, <invalid sloc>> col:68 invalid 'const int *'
|-FunctionDecl 0x1653b37e9b8 <line:369:1, col:75> col:5 invalid ec_GFp_simple_is_on_curve 'int (const int *, const int *, int *)'
| |-ParmVarDecl 0x1653b37e810 <col:31, <invalid sloc>> col:47 invalid 'const int *'
| |-ParmVarDecl 0x1653b37e890 <col:49, <invalid sloc>> col:65 invalid 'const int *'
| `-ParmVarDecl 0x1653b37e910 <col:67, <invalid sloc>> col:75 invalid 'int *'
|-FunctionDecl 0x1653b385d90 <line:370:1, line:371:31> line:370:5 invalid ec_GFp_simple_cmp 'int (const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1653b37ea88 <col:23, <invalid sloc>> col:39 invalid 'const int *'
| |-ParmVarDecl 0x1653b37eb08 <col:41, col:57> col:57 invalid a 'const int *'
| |-ParmVarDecl 0x1653b37eb88 <col:60, col:76> col:76 invalid b 'const int *'
| `-ParmVarDecl 0x1653b37ec08 <line:371:23, <invalid sloc>> col:31 invalid 'int *'
|-FunctionDecl 0x1653b386010 <line:372:1, col:69> col:5 invalid ec_GFp_simple_make_affine 'int (const int *, int *, int *)'
| |-ParmVarDecl 0x1653b385e68 <col:31, <invalid sloc>> col:47 invalid 'const int *'
| |-ParmVarDecl 0x1653b385ee8 <col:49, <invalid sloc>> col:59 invalid 'int *'
| `-ParmVarDecl 0x1653b385f68 <col:61, <invalid sloc>> col:69 invalid 'int *'
|-FunctionDecl 0x1653b386318 <line:373:1, line:374:60> line:373:5 invalid ec_GFp_simple_points_make_affine 'int (const int *, size_t, int **, int *)'
| |-ParmVarDecl 0x1653b3860e0 <col:38, <invalid sloc>> col:54 invalid 'const int *'
| |-ParmVarDecl 0x1653b386158 <col:56, col:63> col:63 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1653b3861e8 <line:374:38, <invalid sloc>> col:48 invalid 'int **':'int **'
| `-ParmVarDecl 0x1653b386268 <col:52, <invalid sloc>> col:60 invalid 'int *'
|-FunctionDecl 0x1653b3866a8 <line:375:1, line:376:54> line:375:5 invalid ec_GFp_simple_field_mul 'int (const int *, int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1653b3863f0 <col:29, <invalid sloc>> col:45 invalid 'const int *'
| |-ParmVarDecl 0x1653b386470 <col:47, col:55> col:55 invalid r 'int *'
| |-ParmVarDecl 0x1653b3864f0 <col:58, col:72> col:72 invalid a 'const int *'
| |-ParmVarDecl 0x1653b386570 <line:376:29, col:43> col:43 invalid b 'const int *'
| `-ParmVarDecl 0x1653b3865f0 <col:46, <invalid sloc>> col:54 invalid 'int *'
|-FunctionDecl 0x1653b3869b8 <line:377:1, line:378:37> line:377:5 invalid ec_GFp_simple_field_sqr 'int (const int *, int *, const int *, int *)'
| |-ParmVarDecl 0x1653b386788 <col:29, <invalid sloc>> col:45 invalid 'const int *'
| |-ParmVarDecl 0x1653b386808 <col:47, col:55> col:55 invalid r 'int *'
| |-ParmVarDecl 0x1653b386888 <col:58, col:72> col:72 invalid a 'const int *'
| `-ParmVarDecl 0x1653b386908 <line:378:29, <invalid sloc>> col:37 invalid 'int *'
|-FunctionDecl 0x1653b386c38 <line:379:1, line:380:48> line:379:5 invalid ec_GFp_simple_blind_coordinates 'int (const int *, int *, int *)'
| |-ParmVarDecl 0x1653b386a90 <col:37, col:53> col:53 invalid group 'const int *'
| |-ParmVarDecl 0x1653b386b10 <col:60, col:70> col:70 invalid p 'int *'
| `-ParmVarDecl 0x1653b386b90 <line:380:37, col:45> col:45 invalid ctx 'int *'
|-FunctionDecl 0x1653b386dd0 <line:383:1, col:38> col:5 invalid ec_GFp_mont_group_init 'int (int *)'
| `-ParmVarDecl 0x1653b386d08 <col:28, <invalid sloc>> col:38 invalid 'int *'
|-FunctionDecl 0x1653b387148 <line:384:1, line:385:58> line:384:5 invalid ec_GFp_mont_group_set_curve 'int (int *, const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1653b386e90 <col:33, <invalid sloc>> col:43 invalid 'int *'
| |-ParmVarDecl 0x1653b386f10 <col:45, col:59> col:59 invalid p 'const int *'
| |-ParmVarDecl 0x1653b386f90 <col:62, col:76> col:76 invalid a 'const int *'
| |-ParmVarDecl 0x1653b387010 <line:385:33, col:47> col:47 invalid b 'const int *'
| `-ParmVarDecl 0x1653b387090 <col:50, <invalid sloc>> col:58 invalid 'int *'
|-FunctionDecl 0x1653b3872b8 <line:386:1, col:41> col:6 invalid ec_GFp_mont_group_finish 'void (int *)'
| `-ParmVarDecl 0x1653b387228 <col:31, <invalid sloc>> col:41 invalid 'int *'
|-FunctionDecl 0x1653b387408 <line:387:1, col:47> col:6 invalid ec_GFp_mont_group_clear_finish 'void (int *)'
| `-ParmVarDecl 0x1653b387378 <col:37, <invalid sloc>> col:47 invalid 'int *'
|-FunctionDecl 0x1653b3875e8 <line:388:1, col:56> col:5 invalid ec_GFp_mont_group_copy 'int (int *, const int *)'
| |-ParmVarDecl 0x1653b3874c8 <col:28, <invalid sloc>> col:38 invalid 'int *'
| `-ParmVarDecl 0x1653b387548 <col:40, <invalid sloc>> col:56 invalid 'const int *'
|-FunctionDecl 0x1653b387968 <line:389:1, line:390:52> line:389:5 invalid ec_GFp_mont_field_mul 'int (const int *, int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1653b3876b0 <col:27, <invalid sloc>> col:43 invalid 'const int *'
| |-ParmVarDecl 0x1653b387730 <col:45, col:53> col:53 invalid r 'int *'
| |-ParmVarDecl 0x1653b3877b0 <col:56, col:70> col:70 invalid a 'const int *'
| |-ParmVarDecl 0x1653b387830 <line:390:27, col:41> col:41 invalid b 'const int *'
| `-ParmVarDecl 0x1653b3878b0 <col:44, <invalid sloc>> col:52 invalid 'int *'
|-FunctionDecl 0x1653b387c78 <line:391:1, line:392:35> line:391:5 invalid ec_GFp_mont_field_sqr 'int (const int *, int *, const int *, int *)'
| |-ParmVarDecl 0x1653b387a48 <col:27, <invalid sloc>> col:43 invalid 'const int *'
| |-ParmVarDecl 0x1653b387ac8 <col:45, col:53> col:53 invalid r 'int *'
| |-ParmVarDecl 0x1653b387b48 <col:56, col:70> col:70 invalid a 'const int *'
| `-ParmVarDecl 0x1653b387bc8 <line:392:27, <invalid sloc>> col:35 invalid 'int *'
|-FunctionDecl 0x1653b387fe0 <line:393:1, line:394:38> line:393:5 invalid ec_GFp_mont_field_encode 'int (const int *, int *, const int *, int *)'
| |-ParmVarDecl 0x1653b387db0 <col:30, <invalid sloc>> col:46 invalid 'const int *'
| |-ParmVarDecl 0x1653b387e30 <col:48, col:56> col:56 invalid r 'int *'
| |-ParmVarDecl 0x1653b387eb0 <col:59, col:73> col:73 invalid a 'const int *'
| `-ParmVarDecl 0x1653b387f30 <line:394:30, <invalid sloc>> col:38 invalid 'int *'
|-FunctionDecl 0x1653b3882e8 <line:395:1, line:396:38> line:395:5 invalid ec_GFp_mont_field_decode 'int (const int *, int *, const int *, int *)'
| |-ParmVarDecl 0x1653b3880b8 <col:30, <invalid sloc>> col:46 invalid 'const int *'
| |-ParmVarDecl 0x1653b388138 <col:48, col:56> col:56 invalid r 'int *'
| |-ParmVarDecl 0x1653b3881b8 <col:59, col:73> col:73 invalid a 'const int *'
| `-ParmVarDecl 0x1653b388238 <line:396:30, <invalid sloc>> col:38 invalid 'int *'
|-FunctionDecl 0x1653b388568 <line:397:1, col:71> col:5 invalid ec_GFp_mont_field_set_to_one 'int (const int *, int *, int *)'
| |-ParmVarDecl 0x1653b3883c0 <col:34, <invalid sloc>> col:50 invalid 'const int *'
| |-ParmVarDecl 0x1653b388440 <col:52, col:60> col:60 invalid r 'int *'
| `-ParmVarDecl 0x1653b3884c0 <col:63, <invalid sloc>> col:71 invalid 'int *'
|-FunctionDecl 0x1653b388758 <line:400:1, col:63> col:5 invalid ec_GFp_nist_group_copy 'int (int *, const int *)'
| |-ParmVarDecl 0x1653b388638 <col:28, col:38> col:38 invalid dest 'int *'
| `-ParmVarDecl 0x1653b3886b8 <col:44, col:60> col:60 invalid src 'const int *'
|-FunctionDecl 0x1653b388ad8 <line:401:1, line:402:58> line:401:5 invalid ec_GFp_nist_group_set_curve 'int (int *, const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1653b388820 <col:33, <invalid sloc>> col:43 invalid 'int *'
| |-ParmVarDecl 0x1653b3888a0 <col:45, col:59> col:59 invalid p 'const int *'
| |-ParmVarDecl 0x1653b388920 <col:62, col:76> col:76 invalid a 'const int *'
| |-ParmVarDecl 0x1653b3889a0 <line:402:33, col:47> col:47 invalid b 'const int *'
| `-ParmVarDecl 0x1653b388a20 <col:50, <invalid sloc>> col:58 invalid 'int *'
|-FunctionDecl 0x1653b380e10 <line:403:1, line:404:52> line:403:5 invalid ec_GFp_nist_field_mul 'int (const int *, int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1653b388bb8 <col:27, <invalid sloc>> col:43 invalid 'const int *'
| |-ParmVarDecl 0x1653b388c38 <col:45, col:53> col:53 invalid r 'int *'
| |-ParmVarDecl 0x1653b388cb8 <col:56, col:70> col:70 invalid a 'const int *'
| |-ParmVarDecl 0x1653b388d38 <line:404:27, col:41> col:41 invalid b 'const int *'
| `-ParmVarDecl 0x1653b380d58 <col:44, <invalid sloc>> col:52 invalid 'int *'
|-FunctionDecl 0x1653b381120 <line:405:1, line:406:35> line:405:5 invalid ec_GFp_nist_field_sqr 'int (const int *, int *, const int *, int *)'
| |-ParmVarDecl 0x1653b380ef0 <col:27, <invalid sloc>> col:43 invalid 'const int *'
| |-ParmVarDecl 0x1653b380f70 <col:45, col:53> col:53 invalid r 'int *'
| |-ParmVarDecl 0x1653b380ff0 <col:56, col:70> col:70 invalid a 'const int *'
| `-ParmVarDecl 0x1653b381070 <line:406:27, <invalid sloc>> col:35 invalid 'int *'
|-FunctionDecl 0x1653b381290 <line:409:1, col:41> col:5 invalid ec_GF2m_simple_group_init 'int (int *)'
| `-ParmVarDecl 0x1653b3811f8 <col:31, <invalid sloc>> col:41 invalid 'int *'
|-FunctionDecl 0x1653b3813e0 <line:410:1, col:44> col:6 invalid ec_GF2m_simple_group_finish 'void (int *)'
| `-ParmVarDecl 0x1653b381350 <col:34, <invalid sloc>> col:44 invalid 'int *'
|-FunctionDecl 0x1653b381530 <line:411:1, col:50> col:6 invalid ec_GF2m_simple_group_clear_finish 'void (int *)'
| `-ParmVarDecl 0x1653b3814a0 <col:40, <invalid sloc>> col:50 invalid 'int *'
|-FunctionDecl 0x1653b381710 <line:412:1, col:59> col:5 invalid ec_GF2m_simple_group_copy 'int (int *, const int *)'
| |-ParmVarDecl 0x1653b3815f0 <col:31, <invalid sloc>> col:41 invalid 'int *'
| `-ParmVarDecl 0x1653b381670 <col:43, <invalid sloc>> col:59 invalid 'const int *'
|-FunctionDecl 0x1653b381a90 <line:413:1, line:415:44> line:413:5 invalid ec_GF2m_simple_group_set_curve 'int (int *, const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1653b3817d8 <col:36, <invalid sloc>> col:46 invalid 'int *'
| |-ParmVarDecl 0x1653b381858 <col:48, col:62> col:62 invalid p 'const int *'
| |-ParmVarDecl 0x1653b3818d8 <line:414:36, col:50> col:50 invalid a 'const int *'
| |-ParmVarDecl 0x1653b381958 <col:53, col:67> col:67 invalid b 'const int *'
| `-ParmVarDecl 0x1653b3819d8 <line:415:36, <invalid sloc>> col:44 invalid 'int *'
|-FunctionDecl 0x1653b388ef8 <line:416:1, line:417:55> line:416:5 invalid ec_GF2m_simple_group_get_curve 'int (const int *, int *, int *, int *, int *)'
| |-ParmVarDecl 0x1653b381b70 <col:36, <invalid sloc>> col:52 invalid 'const int *'
| |-ParmVarDecl 0x1653b381bf0 <col:54, col:62> col:62 invalid p 'int *'
| |-ParmVarDecl 0x1653b381c70 <col:65, col:73> col:73 invalid a 'int *'
| |-ParmVarDecl 0x1653b388dc0 <line:417:36, col:44> col:44 invalid b 'int *'
| `-ParmVarDecl 0x1653b388e40 <col:47, <invalid sloc>> col:55 invalid 'int *'
|-FunctionDecl 0x1653b389070 <line:418:1, col:53> col:5 invalid ec_GF2m_simple_group_get_degree 'int (const int *)'
| `-ParmVarDecl 0x1653b388fd8 <col:37, <invalid sloc>> col:53 invalid 'const int *'
|-FunctionDecl 0x1653b389250 <line:419:1, col:71> col:5 invalid ec_GF2m_simple_group_check_discriminant 'int (const int *, int *)'
| |-ParmVarDecl 0x1653b389130 <col:45, <invalid sloc>> col:61 invalid 'const int *'
| `-ParmVarDecl 0x1653b3891b0 <col:63, <invalid sloc>> col:71 invalid 'int *'
|-FunctionDecl 0x1653b3893b0 <line:420:1, col:41> col:5 invalid ec_GF2m_simple_point_init 'int (int *)'
| `-ParmVarDecl 0x1653b389318 <col:31, <invalid sloc>> col:41 invalid 'int *'
|-FunctionDecl 0x1653b389500 <line:421:1, col:44> col:6 invalid ec_GF2m_simple_point_finish 'void (int *)'
| `-ParmVarDecl 0x1653b389470 <col:34, <invalid sloc>> col:44 invalid 'int *'
|-FunctionDecl 0x1653b389650 <line:422:1, col:50> col:6 invalid ec_GF2m_simple_point_clear_finish 'void (int *)'
| `-ParmVarDecl 0x1653b3895c0 <col:40, <invalid sloc>> col:50 invalid 'int *'
|-FunctionDecl 0x1653b389830 <line:423:1, col:59> col:5 invalid ec_GF2m_simple_point_copy 'int (int *, const int *)'
| |-ParmVarDecl 0x1653b389710 <col:31, <invalid sloc>> col:41 invalid 'int *'
| `-ParmVarDecl 0x1653b389790 <col:43, <invalid sloc>> col:59 invalid 'const int *'
|-FunctionDecl 0x1653b389a18 <line:424:1, col:70> col:5 invalid ec_GF2m_simple_point_set_to_infinity 'int (const int *, int *)'
| |-ParmVarDecl 0x1653b3898f8 <col:42, <invalid sloc>> col:58 invalid 'const int *'
| `-ParmVarDecl 0x1653b389978 <col:60, <invalid sloc>> col:70 invalid 'int *'
|-FunctionDecl 0x1653b389dd0 <line:425:1, line:427:74> line:425:5 invalid ec_GF2m_simple_point_set_affine_coordinates 'int (const int *, int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1653b389ae0 <col:49, <invalid sloc>> col:65 invalid 'const int *'
| |-ParmVarDecl 0x1653b389b60 <col:67, <invalid sloc>> col:77 invalid 'int *'
| |-ParmVarDecl 0x1653b389be0 <line:426:49, col:63> col:63 invalid x 'const int *'
| |-ParmVarDecl 0x1653b389c60 <line:427:49, col:63> col:63 invalid y 'const int *'
| `-ParmVarDecl 0x1653b389ce0 <col:66, <invalid sloc>> col:74 invalid 'int *'
|-FunctionDecl 0x1653b38a168 <line:428:1, line:430:68> line:428:5 invalid ec_GF2m_simple_point_get_affine_coordinates 'int (const int *, const int *, int *, int *, int *)'
| |-ParmVarDecl 0x1653b389eb0 <col:49, <invalid sloc>> col:65 invalid 'const int *'
| |-ParmVarDecl 0x1653b389f30 <line:429:49, <invalid sloc>> col:65 invalid 'const int *'
| |-ParmVarDecl 0x1653b389fb0 <col:67, col:75> col:75 invalid x 'int *'
| |-ParmVarDecl 0x1653b38a030 <line:430:49, col:57> col:57 invalid y 'int *'
| `-ParmVarDecl 0x1653b38a0b0 <col:60, <invalid sloc>> col:68 invalid 'int *'
|-FunctionDecl 0x1653b38a500 <line:431:1, line:433:55> line:431:5 invalid ec_GF2m_simple_set_compressed_coordinates 'int (const int *, int *, const int *, int, int *)'
| |-ParmVarDecl 0x1653b38a248 <col:47, <invalid sloc>> col:63 invalid 'const int *'
| |-ParmVarDecl 0x1653b38a2c8 <col:65, <invalid sloc>> col:75 invalid 'int *'
| |-ParmVarDecl 0x1653b38a348 <line:432:47, col:61> col:61 invalid x 'const int *'
| |-ParmVarDecl 0x1653b38a3c8 <col:64, col:68> col:68 y_bit 'int'
| `-ParmVarDecl 0x1653b38a448 <line:433:47, <invalid sloc>> col:55 invalid 'int *'
|-FunctionDecl 0x1653b38a910 <line:434:1, line:436:73> line:434:8 invalid ec_GF2m_simple_point2oct 'size_t (const int *, const int *, int, unsigned char *, size_t, int *)'
| |-ParmVarDecl 0x1653b38a5e0 <col:33, <invalid sloc>> col:49 invalid 'const int *'
| |-ParmVarDecl 0x1653b38a660 <col:51, <invalid sloc>> col:67 invalid 'const int *'
| |-ParmVarDecl 0x1653b38a6e0 <line:435:33, col:57> col:57 invalid form 'int'
| |-ParmVarDecl 0x1653b38a760 <line:436:33, col:48> col:48 buf 'unsigned char *'
| |-ParmVarDecl 0x1653b38a7d8 <col:53, col:60> col:60 len 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1653b38a858 <col:65, <invalid sloc>> col:73 invalid 'int *'
|-FunctionDecl 0x1653b38aca8 <line:437:1, line:438:76> line:437:5 invalid ec_GF2m_simple_oct2point 'int (const int *, int *, const unsigned char *, size_t, int *)'
| |-ParmVarDecl 0x1653b38a9f8 <col:30, <invalid sloc>> col:46 invalid 'const int *'
| |-ParmVarDecl 0x1653b38aa78 <col:48, <invalid sloc>> col:58 invalid 'int *'
| |-ParmVarDecl 0x1653b38aaf8 <line:438:30, col:51> col:51 buf 'const unsigned char *'
| |-ParmVarDecl 0x1653b38ab70 <col:56, col:63> col:63 len 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1653b38abf0 <col:68, <invalid sloc>> col:76 invalid 'int *'
|-FunctionDecl 0x1653b38b098 <line:439:1, line:440:51> line:439:5 invalid ec_GF2m_simple_add 'int (const int *, int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1653b38ade0 <col:24, <invalid sloc>> col:40 invalid 'const int *'
| |-ParmVarDecl 0x1653b38ae60 <col:42, col:52> col:52 invalid r 'int *'
| |-ParmVarDecl 0x1653b38aee0 <col:55, col:71> col:71 invalid a 'const int *'
| |-ParmVarDecl 0x1653b38af60 <line:440:24, col:40> col:40 invalid b 'const int *'
| `-ParmVarDecl 0x1653b38afe0 <col:43, <invalid sloc>> col:51 invalid 'int *'
|-FunctionDecl 0x1653b38b3a8 <line:441:1, line:442:32> line:441:5 invalid ec_GF2m_simple_dbl 'int (const int *, int *, const int *, int *)'
| |-ParmVarDecl 0x1653b38b178 <col:24, <invalid sloc>> col:40 invalid 'const int *'
| |-ParmVarDecl 0x1653b38b1f8 <col:42, col:52> col:52 invalid r 'int *'
| |-ParmVarDecl 0x1653b38b278 <col:55, col:71> col:71 invalid a 'const int *'
| `-ParmVarDecl 0x1653b38b2f8 <line:442:24, <invalid sloc>> col:32 invalid 'int *'
|-FunctionDecl 0x1653b38b628 <line:443:1, col:65> col:5 invalid ec_GF2m_simple_invert 'int (const int *, int *, int *)'
| |-ParmVarDecl 0x1653b38b480 <col:27, <invalid sloc>> col:43 invalid 'const int *'
| |-ParmVarDecl 0x1653b38b500 <col:45, <invalid sloc>> col:55 invalid 'int *'
| `-ParmVarDecl 0x1653b38b580 <col:57, <invalid sloc>> col:65 invalid 'int *'
|-FunctionDecl 0x1653b38b818 <line:444:1, col:69> col:5 invalid ec_GF2m_simple_is_at_infinity 'int (const int *, const int *)'
| |-ParmVarDecl 0x1653b38b6f8 <col:35, <invalid sloc>> col:51 invalid 'const int *'
| `-ParmVarDecl 0x1653b38b778 <col:53, <invalid sloc>> col:69 invalid 'const int *'
|-FunctionDecl 0x1653b38ba88 <line:445:1, col:76> col:5 invalid ec_GF2m_simple_is_on_curve 'int (const int *, const int *, int *)'
| |-ParmVarDecl 0x1653b38b8e0 <col:32, <invalid sloc>> col:48 invalid 'const int *'
| |-ParmVarDecl 0x1653b38b960 <col:50, <invalid sloc>> col:66 invalid 'const int *'
| `-ParmVarDecl 0x1653b38b9e0 <col:68, <invalid sloc>> col:76 invalid 'int *'
|-FunctionDecl 0x1653b38bdf0 <line:446:1, line:447:32> line:446:5 invalid ec_GF2m_simple_cmp 'int (const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1653b38bb58 <col:24, <invalid sloc>> col:40 invalid 'const int *'
| |-ParmVarDecl 0x1653b38bbd8 <col:42, col:58> col:58 invalid a 'const int *'
| |-ParmVarDecl 0x1653b38bc58 <col:61, col:77> col:77 invalid b 'const int *'
| `-ParmVarDecl 0x1653b38bcd8 <line:447:24, <invalid sloc>> col:32 invalid 'int *'
|-FunctionDecl 0x1653b38c070 <line:448:1, col:70> col:5 invalid ec_GF2m_simple_make_affine 'int (const int *, int *, int *)'
| |-ParmVarDecl 0x1653b38bec8 <col:32, <invalid sloc>> col:48 invalid 'const int *'
| |-ParmVarDecl 0x1653b38bf48 <col:50, <invalid sloc>> col:60 invalid 'int *'
| `-ParmVarDecl 0x1653b38bfc8 <col:62, <invalid sloc>> col:70 invalid 'int *'
|-FunctionDecl 0x1653b38c378 <line:449:1, line:450:61> line:449:5 invalid ec_GF2m_simple_points_make_affine 'int (const int *, size_t, int **, int *)'
| |-ParmVarDecl 0x1653b38c140 <col:39, <invalid sloc>> col:55 invalid 'const int *'
| |-ParmVarDecl 0x1653b38c1b8 <col:57, col:64> col:64 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1653b38c248 <line:450:39, <invalid sloc>> col:49 invalid 'int **':'int **'
| `-ParmVarDecl 0x1653b38c2c8 <col:53, <invalid sloc>> col:61 invalid 'int *'
|-FunctionDecl 0x1653b38c708 <line:451:1, line:452:55> line:451:5 invalid ec_GF2m_simple_field_mul 'int (const int *, int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1653b38c450 <col:30, <invalid sloc>> col:46 invalid 'const int *'
| |-ParmVarDecl 0x1653b38c4d0 <col:48, col:56> col:56 invalid r 'int *'
| |-ParmVarDecl 0x1653b38c550 <col:59, col:73> col:73 invalid a 'const int *'
| |-ParmVarDecl 0x1653b38c5d0 <line:452:30, col:44> col:44 invalid b 'const int *'
| `-ParmVarDecl 0x1653b38c650 <col:47, <invalid sloc>> col:55 invalid 'int *'
|-FunctionDecl 0x1653b38ca18 <line:453:1, line:454:38> line:453:5 invalid ec_GF2m_simple_field_sqr 'int (const int *, int *, const int *, int *)'
| |-ParmVarDecl 0x1653b38c7e8 <col:30, <invalid sloc>> col:46 invalid 'const int *'
| |-ParmVarDecl 0x1653b38c868 <col:48, col:56> col:56 invalid r 'int *'
| |-ParmVarDecl 0x1653b38c8e8 <col:59, col:73> col:73 invalid a 'const int *'
| `-ParmVarDecl 0x1653b38c968 <line:454:30, <invalid sloc>> col:38 invalid 'int *'
|-FunctionDecl 0x1653b327120 <line:455:1, line:456:55> line:455:5 invalid ec_GF2m_simple_field_div 'int (const int *, int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1653b38caf0 <col:30, <invalid sloc>> col:46 invalid 'const int *'
| |-ParmVarDecl 0x1653b38cb70 <col:48, col:56> col:56 invalid r 'int *'
| |-ParmVarDecl 0x1653b38cbf0 <col:59, col:73> col:73 invalid a 'const int *'
| |-ParmVarDecl 0x1653b38cc70 <line:456:30, col:44> col:44 invalid b 'const int *'
| `-ParmVarDecl 0x1653b38ccf0 <col:47, <invalid sloc>> col:55 invalid 'int *'
|-FunctionDecl 0x1653b3275e0 <line:459:1, line:462:32> line:459:5 invalid ec_GF2m_simple_mul 'int (const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-ParmVarDecl 0x1653b327200 <col:24, col:40> col:40 invalid group 'const int *'
| |-ParmVarDecl 0x1653b327280 <col:47, col:57> col:57 invalid r 'int *'
| |-ParmVarDecl 0x1653b327300 <line:460:24, col:38> col:38 invalid scalar 'const int *'
| |-ParmVarDecl 0x1653b327378 <col:46, col:53> col:53 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1653b327408 <line:461:24, <invalid sloc>> col:40 invalid points 'const int **':'const int **'
| |-ParmVarDecl 0x1653b327498 <col:50, <invalid sloc>> col:64 invalid scalars 'const int **':'const int **'
| `-ParmVarDecl 0x1653b327518 <line:462:24, <invalid sloc>> col:32 invalid 'int *'
|-FunctionDecl 0x1653b3277f0 <line:463:1, col:57> col:5 invalid ec_GF2m_precompute_mult 'int (int *, int *)'
| |-ParmVarDecl 0x1653b3276d0 <col:29, col:39> col:39 invalid group 'int *'
| `-ParmVarDecl 0x1653b327750 <col:46, col:54> col:54 invalid ctx 'int *'
|-FunctionDecl 0x1653b327950 <line:464:1, col:55> col:5 invalid ec_GF2m_have_precompute_mult 'int (const int *)'
| `-ParmVarDecl 0x1653b3278b8 <col:34, col:50> col:50 invalid group 'const int *'
|-FunctionDecl 0x1653b327aa8 <line:468:1, col:47> col:5 invalid ec_GFp_nistp224_group_init 'int (int *)'
| `-ParmVarDecl 0x1653b327a10 <col:32, col:42> col:42 invalid group 'int *'
|-FunctionDecl 0x1653b327e20 <line:469:1, line:471:45> line:469:5 invalid ec_GFp_nistp224_group_set_curve 'int (int *, const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1653b327b68 <col:37, col:47> col:47 invalid group 'int *'
| |-ParmVarDecl 0x1653b327be8 <col:54, col:68> col:68 invalid p 'const int *'
| |-ParmVarDecl 0x1653b327c68 <line:470:37, col:51> col:51 invalid a 'const int *'
| |-ParmVarDecl 0x1653b327ce8 <col:54, col:68> col:68 invalid n 'const int *'
| `-ParmVarDecl 0x1653b327d68 <line:471:37, <invalid sloc>> col:45 invalid 'int *'
|-FunctionDecl 0x1653b399198 <line:472:1, line:475:61> line:472:5 invalid ec_GFp_nistp224_point_get_affine_coordinates 'int (const int *, const int *, int *, int *, int *)'
| |-ParmVarDecl 0x1653b327f00 <col:50, col:66> col:66 invalid group 'const int *'
| |-ParmVarDecl 0x1653b327f80 <line:473:50, col:66> col:66 invalid point 'const int *'
| |-ParmVarDecl 0x1653b328000 <line:474:50, col:58> col:58 invalid x 'int *'
| |-ParmVarDecl 0x1653b328080 <col:61, col:69> col:69 invalid y 'int *'
| `-ParmVarDecl 0x1653b3990e0 <line:475:50, col:58> col:58 invalid ctx 'int *'
|-FunctionDecl 0x1653b399658 <line:476:1, line:479:33> line:476:5 invalid ec_GFp_nistp224_mul 'int (const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-ParmVarDecl 0x1653b399278 <col:25, col:41> col:41 invalid group 'const int *'
| |-ParmVarDecl 0x1653b3992f8 <col:48, col:58> col:58 invalid r 'int *'
| |-ParmVarDecl 0x1653b399378 <line:477:25, col:39> col:39 invalid scalar 'const int *'
| |-ParmVarDecl 0x1653b3993f0 <col:47, col:54> col:54 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1653b399480 <line:478:25, <invalid sloc>> col:41 invalid points 'const int **':'const int **'
| |-ParmVarDecl 0x1653b399510 <col:51, <invalid sloc>> col:65 invalid scalars 'const int **':'const int **'
| `-ParmVarDecl 0x1653b399590 <line:479:25, <invalid sloc>> col:33 invalid 'int *'
|-FunctionDecl 0x1653b399b28 <line:480:1, line:483:68> line:480:5 invalid ec_GFp_nistp224_points_mul 'int (const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-ParmVarDecl 0x1653b399748 <col:32, col:48> col:48 invalid group 'const int *'
| |-ParmVarDecl 0x1653b3997c8 <col:55, col:65> col:65 invalid r 'int *'
| |-ParmVarDecl 0x1653b399848 <line:481:32, col:46> col:46 invalid scalar 'const int *'
| |-ParmVarDecl 0x1653b3998c0 <col:54, col:61> col:61 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1653b399950 <line:482:32, <invalid sloc>> col:48 invalid points 'const int **':'const int **'
| |-ParmVarDecl 0x1653b3999e0 <line:483:32, <invalid sloc>> col:46 invalid scalars 'const int **':'const int **'
| `-ParmVarDecl 0x1653b399a60 <col:57, col:65> col:65 invalid ctx 'int *'
|-FunctionDecl 0x1653b399d38 <line:484:1, col:65> col:5 invalid ec_GFp_nistp224_precompute_mult 'int (int *, int *)'
| |-ParmVarDecl 0x1653b399c18 <col:37, col:47> col:47 invalid group 'int *'
| `-ParmVarDecl 0x1653b399c98 <col:54, col:62> col:62 invalid ctx 'int *'
|-FunctionDecl 0x1653b399e98 <line:485:1, col:63> col:5 invalid ec_GFp_nistp224_have_precompute_mult 'int (const int *)'
| `-ParmVarDecl 0x1653b399e00 <col:42, col:58> col:58 invalid group 'const int *'
|-FunctionDecl 0x1653b399ff0 <line:488:1, col:47> col:5 invalid ec_GFp_nistp256_group_init 'int (int *)'
| `-ParmVarDecl 0x1653b399f58 <col:32, col:42> col:42 invalid group 'int *'
|-FunctionDecl 0x1653b39a3a8 <line:489:1, line:491:45> line:489:5 invalid ec_GFp_nistp256_group_set_curve 'int (int *, const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1653b39a0f0 <col:37, col:47> col:47 invalid group 'int *'
| |-ParmVarDecl 0x1653b39a170 <col:54, col:68> col:68 invalid p 'const int *'
| |-ParmVarDecl 0x1653b39a1f0 <line:490:37, col:51> col:51 invalid a 'const int *'
| |-ParmVarDecl 0x1653b39a270 <col:54, col:68> col:68 invalid n 'const int *'
| `-ParmVarDecl 0x1653b39a2f0 <line:491:37, <invalid sloc>> col:45 invalid 'int *'
|-FunctionDecl 0x1653b39a740 <line:492:1, line:495:61> line:492:5 invalid ec_GFp_nistp256_point_get_affine_coordinates 'int (const int *, const int *, int *, int *, int *)'
| |-ParmVarDecl 0x1653b39a488 <col:50, col:66> col:66 invalid group 'const int *'
| |-ParmVarDecl 0x1653b39a508 <line:493:50, col:66> col:66 invalid point 'const int *'
| |-ParmVarDecl 0x1653b39a588 <line:494:50, col:58> col:58 invalid x 'int *'
| |-ParmVarDecl 0x1653b39a608 <col:61, col:69> col:69 invalid y 'int *'
| `-ParmVarDecl 0x1653b39a688 <line:495:50, col:58> col:58 invalid ctx 'int *'
|-FunctionDecl 0x1653b39ac00 <line:496:1, line:499:33> line:496:5 invalid ec_GFp_nistp256_mul 'int (const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-ParmVarDecl 0x1653b39a820 <col:25, col:41> col:41 invalid group 'const int *'
| |-ParmVarDecl 0x1653b39a8a0 <col:48, col:58> col:58 invalid r 'int *'
| |-ParmVarDecl 0x1653b39a920 <line:497:25, col:39> col:39 invalid scalar 'const int *'
| |-ParmVarDecl 0x1653b39a998 <col:47, col:54> col:54 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1653b39aa28 <line:498:25, <invalid sloc>> col:41 invalid points 'const int **':'const int **'
| |-ParmVarDecl 0x1653b39aab8 <col:51, <invalid sloc>> col:65 invalid scalars 'const int **':'const int **'
| `-ParmVarDecl 0x1653b39ab38 <line:499:25, <invalid sloc>> col:33 invalid 'int *'
|-FunctionDecl 0x1653b3980d0 <line:500:1, line:503:68> line:500:5 invalid ec_GFp_nistp256_points_mul 'int (const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-ParmVarDecl 0x1653b39acf0 <col:32, col:48> col:48 invalid group 'const int *'
| |-ParmVarDecl 0x1653b39ad70 <col:55, col:65> col:65 invalid r 'int *'
| |-ParmVarDecl 0x1653b39adf0 <line:501:32, col:46> col:46 invalid scalar 'const int *'
| |-ParmVarDecl 0x1653b39ae68 <col:54, col:61> col:61 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1653b39aef8 <line:502:32, <invalid sloc>> col:48 invalid points 'const int **':'const int **'
| |-ParmVarDecl 0x1653b39af88 <line:503:32, <invalid sloc>> col:46 invalid scalars 'const int **':'const int **'
| `-ParmVarDecl 0x1653b39b008 <col:57, col:65> col:65 invalid ctx 'int *'
|-FunctionDecl 0x1653b3982e0 <line:504:1, col:65> col:5 invalid ec_GFp_nistp256_precompute_mult 'int (int *, int *)'
| |-ParmVarDecl 0x1653b3981c0 <col:37, col:47> col:47 invalid group 'int *'
| `-ParmVarDecl 0x1653b398240 <col:54, col:62> col:62 invalid ctx 'int *'
|-FunctionDecl 0x1653b398440 <line:505:1, col:63> col:5 invalid ec_GFp_nistp256_have_precompute_mult 'int (const int *)'
| `-ParmVarDecl 0x1653b3983a8 <col:42, col:58> col:58 invalid group 'const int *'
|-FunctionDecl 0x1653b398598 <line:508:1, col:47> col:5 invalid ec_GFp_nistp521_group_init 'int (int *)'
| `-ParmVarDecl 0x1653b398500 <col:32, col:42> col:42 invalid group 'int *'
|-FunctionDecl 0x1653b398910 <line:509:1, line:511:45> line:509:5 invalid ec_GFp_nistp521_group_set_curve 'int (int *, const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1653b398658 <col:37, col:47> col:47 invalid group 'int *'
| |-ParmVarDecl 0x1653b3986d8 <col:54, col:68> col:68 invalid p 'const int *'
| |-ParmVarDecl 0x1653b398758 <line:510:37, col:51> col:51 invalid a 'const int *'
| |-ParmVarDecl 0x1653b3987d8 <col:54, col:68> col:68 invalid n 'const int *'
| `-ParmVarDecl 0x1653b398858 <line:511:37, <invalid sloc>> col:45 invalid 'int *'
|-FunctionDecl 0x1653b398ca8 <line:512:1, line:515:61> line:512:5 invalid ec_GFp_nistp521_point_get_affine_coordinates 'int (const int *, const int *, int *, int *, int *)'
| |-ParmVarDecl 0x1653b3989f0 <col:50, col:66> col:66 invalid group 'const int *'
| |-ParmVarDecl 0x1653b398a70 <line:513:50, col:66> col:66 invalid point 'const int *'
| |-ParmVarDecl 0x1653b398af0 <line:514:50, col:58> col:58 invalid x 'int *'
| |-ParmVarDecl 0x1653b398b70 <col:61, col:69> col:69 invalid y 'int *'
| `-ParmVarDecl 0x1653b398bf0 <line:515:50, col:58> col:58 invalid ctx 'int *'
|-FunctionDecl 0x1653b39b1c8 <line:516:1, line:519:33> line:516:5 invalid ec_GFp_nistp521_mul 'int (const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-ParmVarDecl 0x1653b398d88 <col:25, col:41> col:41 invalid group 'const int *'
| |-ParmVarDecl 0x1653b398e08 <col:48, col:58> col:58 invalid r 'int *'
| |-ParmVarDecl 0x1653b398e88 <line:517:25, col:39> col:39 invalid scalar 'const int *'
| |-ParmVarDecl 0x1653b398f00 <col:47, col:54> col:54 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1653b398f90 <line:518:25, <invalid sloc>> col:41 invalid points 'const int **':'const int **'
| |-ParmVarDecl 0x1653b399020 <col:51, <invalid sloc>> col:65 invalid scalars 'const int **':'const int **'
| `-ParmVarDecl 0x1653b39b100 <line:519:25, <invalid sloc>> col:33 invalid 'int *'
|-FunctionDecl 0x1653b39b698 <line:520:1, line:523:68> line:520:5 invalid ec_GFp_nistp521_points_mul 'int (const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-ParmVarDecl 0x1653b39b2b8 <col:32, col:48> col:48 invalid group 'const int *'
| |-ParmVarDecl 0x1653b39b338 <col:55, col:65> col:65 invalid r 'int *'
| |-ParmVarDecl 0x1653b39b3b8 <line:521:32, col:46> col:46 invalid scalar 'const int *'
| |-ParmVarDecl 0x1653b39b430 <col:54, col:61> col:61 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1653b39b4c0 <line:522:32, <invalid sloc>> col:48 invalid points 'const int **':'const int **'
| |-ParmVarDecl 0x1653b39b550 <line:523:32, <invalid sloc>> col:46 invalid scalars 'const int **':'const int **'
| `-ParmVarDecl 0x1653b39b5d0 <col:57, col:65> col:65 invalid ctx 'int *'
|-FunctionDecl 0x1653b39b8a8 <line:524:1, col:65> col:5 invalid ec_GFp_nistp521_precompute_mult 'int (int *, int *)'
| |-ParmVarDecl 0x1653b39b788 <col:37, col:47> col:47 invalid group 'int *'
| `-ParmVarDecl 0x1653b39b808 <col:54, col:62> col:62 invalid ctx 'int *'
|-FunctionDecl 0x1653b39ba08 <line:525:1, col:63> col:5 invalid ec_GFp_nistp521_have_precompute_mult 'int (const int *)'
| `-ParmVarDecl 0x1653b39b970 <col:42, col:58> col:58 invalid group 'const int *'
|-FunctionDecl 0x1653b39ce68 <line:528:1, line:552:75> line:528:6 used ec_GFp_nistp_points_make_affine_internal 'void (size_t, void *, size_t, void *, void (*)(void *), int (*)(const void *), void (*)(void *, const void *), void (*)(void *, const void *), void (*)(void *, const void *, const void *), void (*)(void *, const void *), void (*)(void *, const void *))'
| |-ParmVarDecl 0x1653b39bac0 <col:47, col:54> col:54 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1653b39bb40 <col:59, col:65> col:65 point_array 'void *'
| |-ParmVarDecl 0x1653b39bbb8 <line:529:47, col:54> col:54 felem_size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1653b39bc38 <line:530:47, col:53> col:53 tmp_felems 'void *'
| |-ParmVarDecl 0x1653b39be00 <line:531:47, col:75> col:54 felem_one 'void (*)(void *)'
| |-ParmVarDecl 0x1653b39bff8 <line:532:47, line:533:72> line:532:53 felem_is_zero 'int (*)(const void *)'
| |-ParmVarDecl 0x1653b39c2b8 <line:534:47, line:536:72> line:534:54 felem_assign 'void (*)(void *, const void *)'
| |-ParmVarDecl 0x1653b39c490 <line:537:47, line:539:72> line:537:54 felem_square 'void (*)(void *, const void *)'
| |-ParmVarDecl 0x1653b39c7d0 <line:540:47, line:544:70> line:540:54 felem_mul 'void (*)(void *, const void *, const void *)'
| |-ParmVarDecl 0x1653b39c9a8 <line:545:47, line:547:69> line:545:54 felem_inv 'void (*)(void *, const void *)'
| `-ParmVarDecl 0x1653b39cb80 <line:548:47, line:552:74> line:548:54 felem_contract 'void (*)(void *, const void *)'
|-FunctionDecl 0x1653b39d1c8 <line:553:1, line:554:76> line:553:6 used ec_GFp_nistp_recode_scalar_bits 'void (unsigned char *, unsigned char *, unsigned char)'
| |-ParmVarDecl 0x1653b39cf90 <col:38, col:53> col:53 sign 'unsigned char *'
| |-ParmVarDecl 0x1653b39d010 <line:554:38, col:53> col:53 digit 'unsigned char *'
| `-ParmVarDecl 0x1653b39d090 <col:60, col:74> col:74 in 'unsigned char'
|-FunctionDecl 0x1653b39d348 <line:556:1, col:39> col:5 invalid ec_precompute_mont_data 'int (int *)'
| `-ParmVarDecl 0x1653b39d2b0 <col:29, <invalid sloc>> col:39 invalid 'int *'
|-FunctionDecl 0x1653b39d4a0 <line:557:1, col:53> col:5 invalid ec_group_simple_order_bits 'int (const int *)'
| `-ParmVarDecl 0x1653b39d408 <col:32, col:48> col:48 invalid group 'const int *'
|-FunctionDecl 0x1653b39d6f8 <line:567:1, line:568:61> line:567:8 invalid ec_key_simple_priv2oct 'size_t (const int *, unsigned char *, size_t)'
| |-ParmVarDecl 0x1653b39d560 <col:31, col:45> col:45 invalid eckey 'const int *'
| |-ParmVarDecl 0x1653b39d5e0 <line:568:31, col:46> col:46 buf 'unsigned char *'
| `-ParmVarDecl 0x1653b39d658 <col:51, col:58> col:58 len 'size_t':'unsigned long long'
|-FunctionDecl 0x1653b39d968 <line:569:1, col:79> col:5 invalid ec_key_simple_oct2priv 'int (int *, const unsigned char *, size_t)'
| |-ParmVarDecl 0x1653b39d7c8 <col:28, col:36> col:36 invalid eckey 'int *'
| |-ParmVarDecl 0x1653b39d848 <col:43, col:64> col:64 buf 'const unsigned char *'
| `-ParmVarDecl 0x1653b39d8c0 <col:69, col:76> col:76 len 'size_t':'unsigned long long'
|-FunctionDecl 0x1653b39dad0 <line:570:1, col:45> col:5 invalid ec_key_simple_generate_key 'int (int *)'
| `-ParmVarDecl 0x1653b39da38 <col:32, col:40> col:40 invalid eckey 'int *'
|-FunctionDecl 0x1653b39dc28 <line:571:1, col:52> col:5 invalid ec_key_simple_generate_public_key 'int (int *)'
| `-ParmVarDecl 0x1653b39db90 <col:39, col:47> col:47 invalid eckey 'int *'
|-FunctionDecl 0x1653b39dd80 <line:572:1, col:48> col:5 invalid ec_key_simple_check_key 'int (const int *)'
| `-ParmVarDecl 0x1653b39dce8 <col:29, col:43> col:43 invalid eckey 'const int *'
|-RecordDecl 0x1653b39de28 <line:576:1, line:601:1> line:576:8 invalid struct ec_key_method_st definition
| |-FieldDecl 0x1653b39def8 <line:577:5, col:17> col:17 name 'const char *'
| |-FieldDecl 0x1653b39df80 <line:578:5, col:13> col:13 flags 'int32_t':'int'
| |-FieldDecl 0x1653b39e098 <line:579:5, col:28> col:11 init 'int (*)(int *)'
| |-FieldDecl 0x1653b39e1d0 <line:580:5, col:31> col:12 finish 'void (*)(int *)'
| |-FieldDecl 0x1653b39e370 <line:581:5, col:48> col:11 copy 'int (*)(int *, const int *)'
| |-FieldDecl 0x1653b39e510 <line:582:5, col:54> col:11 set_group 'int (*)(int *, const int *)'
| |-FieldDecl 0x1653b39e6b0 <line:583:5, col:59> col:11 set_private 'int (*)(int *, const int *)'
| |-FieldDecl 0x1653b39e850 <line:584:5, col:59> col:11 set_public 'int (*)(int *, const int *)'
| |-FieldDecl 0x1653b39e968 <line:585:5, col:30> col:11 keygen 'int (*)(int *)'
| |-FieldDecl 0x1653b39ec18 <line:586:5, line:587:67> line:586:11 compute_key 'int (*)(unsigned char **, size_t *, const int *, const int *)'
| |-FieldDecl 0x1653b3971c0 <line:588:5, line:590:47> line:588:11 sign 'int (*)(int, const unsigned char *, int, unsigned char *, unsigned int *, const int *, const int *, int *)'
| |-FieldDecl 0x1653b397560 <line:591:5, line:592:34> line:591:11 sign_setup 'int (*)(int *, int *, int **, int **)'
| |-FieldDecl 0x1653b397978 <line:593:5, <invalid sloc>> col:18 invalid sign_sig 'int *(*)(const unsigned char *, int, const int *, const int *, int *)'
| |-FieldDecl 0x1653b397e20 <line:597:5, line:598:74> line:597:11 verify 'int (*)(int, const unsigned char *, int, const unsigned char *, int, int *)'
| `-FieldDecl 0x1653b3a1290 <line:599:5, line:600:58> line:599:11 verify_sig 'int (*)(const unsigned char *, int, const int *, int *)'
|-FunctionDecl 0x1653b3a1398 <line:605:1, col:34> col:5 invalid ossl_ec_key_gen 'int (int *)'
| `-ParmVarDecl 0x1653b3a1300 <col:21, col:29> col:29 invalid eckey 'int *'
|-FunctionDecl 0x1653b3a1688 <line:606:1, line:607:70> line:606:5 invalid ossl_ecdh_compute_key 'int (unsigned char **, size_t *, const int *, const int *)'
| |-ParmVarDecl 0x1653b3a1460 <col:27, col:43> col:43 pout 'unsigned char **'
| |-ParmVarDecl 0x1653b3a14d8 <col:49, col:57> col:57 poutlen 'size_t *'
| |-ParmVarDecl 0x1653b3a1558 <line:607:27, col:43> col:43 invalid pub_key 'const int *'
| `-ParmVarDecl 0x1653b3a15d8 <col:52, col:66> col:66 invalid ecdh 'const int *'
|-FunctionDecl 0x1653b3a1990 <line:608:1, line:609:72> line:608:5 invalid ecdh_simple_compute_key 'int (unsigned char **, size_t *, const int *, const int *)'
| |-ParmVarDecl 0x1653b3a1768 <col:29, col:45> col:45 pout 'unsigned char **'
| |-ParmVarDecl 0x1653b3a17e0 <col:51, col:59> col:59 poutlen 'size_t *'
| |-ParmVarDecl 0x1653b3a1860 <line:609:29, col:45> col:45 invalid pub_key 'const int *'
| `-ParmVarDecl 0x1653b3a18e0 <col:54, col:68> col:68 invalid ecdh 'const int *'
|-RecordDecl 0x1653b3a1a50 <line:611:1, line:614:1> line:611:8 invalid struct ECDSA_SIG_st definition
| |-FieldDecl 0x1653b3a1b28 <line:612:5, col:13> col:13 invalid r 'int *'
| `-FieldDecl 0x1653b3a1b98 <line:613:5, col:13> col:13 invalid s 'int *'
|-FunctionDecl 0x1653b3a1e48 <line:616:1, line:617:38> line:616:5 invalid ossl_ecdsa_sign_setup 'int (int *, int *, int **, int **)'
| |-ParmVarDecl 0x1653b3a1c08 <col:27, col:35> col:35 invalid eckey 'int *'
| |-ParmVarDecl 0x1653b3a1c88 <col:42, col:50> col:50 invalid ctx_in 'int *'
| |-ParmVarDecl 0x1653b3a1d10 <col:58, col:67> col:67 invalid kinvp 'int **'
| `-ParmVarDecl 0x1653b3a1d98 <line:617:27, col:36> col:36 invalid rp 'int **'
|-FunctionDecl 0x1653b3dc670 <line:618:1, line:620:71> line:618:5 invalid ossl_ecdsa_sign 'int (int, const unsigned char *, int, unsigned char *, unsigned int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1653b3a1f20 <col:21, col:25> col:25 type 'int'
| |-ParmVarDecl 0x1653b3a1fa0 <col:31, col:52> col:52 dgst 'const unsigned char *'
| |-ParmVarDecl 0x1653b3a2020 <col:58, col:62> col:62 dlen 'int'
| |-ParmVarDecl 0x1653b3a20a0 <line:619:21, col:36> col:36 sig 'unsigned char *'
| |-ParmVarDecl 0x1653b3dc420 <col:41, col:55> col:55 siglen 'unsigned int *'
| |-ParmVarDecl 0x1653b3dc4a0 <line:620:21, col:35> col:35 invalid kinv 'const int *'
| |-ParmVarDecl 0x1653b3dc520 <col:41, col:55> col:55 invalid r 'const int *'
| `-ParmVarDecl 0x1653b3dc5a0 <col:58, col:66> col:66 invalid eckey 'int *'
|-FunctionDecl 0x1653b3dca20 <line:621:1, line:623:45> line:621:12 invalid ossl_ecdsa_sign_sig 'int *(const unsigned char *, int, const int *, const int *, int *)'
| |-ParmVarDecl 0x1653b3dc768 <col:32, col:53> col:53 dgst 'const unsigned char *'
| |-ParmVarDecl 0x1653b3dc7e8 <col:59, col:63> col:63 dgst_len 'int'
| |-ParmVarDecl 0x1653b3dc868 <line:622:32, col:46> col:46 invalid in_kinv 'const int *'
| |-ParmVarDecl 0x1653b3dc8e8 <col:55, col:69> col:69 invalid in_r 'const int *'
| `-ParmVarDecl 0x1653b3dc968 <line:623:32, col:40> col:40 invalid eckey 'int *'
|-FunctionDecl 0x1653b3dce40 <line:624:1, line:625:78> line:624:5 invalid ossl_ecdsa_verify 'int (int, const unsigned char *, int, const unsigned char *, int, int *)'
| |-ParmVarDecl 0x1653b3dcb00 <col:23, col:27> col:27 type 'int'
| |-ParmVarDecl 0x1653b3dcb80 <col:33, col:54> col:54 dgst 'const unsigned char *'
| |-ParmVarDecl 0x1653b3dcc00 <col:60, col:64> col:64 dgst_len 'int'
| |-ParmVarDecl 0x1653b3dcc80 <line:625:23, col:44> col:44 sigbuf 'const unsigned char *'
| |-ParmVarDecl 0x1653b3dcd00 <col:52, col:56> col:56 sig_len 'int'
| `-ParmVarDecl 0x1653b3dcd80 <col:65, col:73> col:73 invalid eckey 'int *'
|-FunctionDecl 0x1653b3dd158 <line:626:1, line:627:62> line:626:5 invalid ossl_ecdsa_verify_sig 'int (const unsigned char *, int, const int *, int *)'
| |-ParmVarDecl 0x1653b3dcf28 <col:27, col:48> col:48 dgst 'const unsigned char *'
| |-ParmVarDecl 0x1653b3dcfa8 <col:54, col:58> col:58 dgst_len 'int'
| |-ParmVarDecl 0x1653b3dd028 <line:627:27, col:44> col:44 invalid sig 'const int *'
| `-ParmVarDecl 0x1653b3dd0a8 <col:49, col:57> col:57 invalid eckey 'int *'
|-FunctionDecl 0x1653b3dd730 <line:629:1, line:630:47> line:629:5 X25519 'int (uint8_t *, const uint8_t *, const uint8_t *)'
| |-ParmVarDecl 0x1653b3dd380 <col:12, col:37> col:20 out_shared_key 'uint8_t *':'uint8_t *'
| |-ParmVarDecl 0x1653b3dd4f0 <col:40, col:68> col:54 private_key 'const uint8_t *':'const uint8_t *'
| `-ParmVarDecl 0x1653b3dd5b8 <line:630:12, col:46> col:26 peer_public_value 'const uint8_t *':'const uint8_t *'
|-FunctionDecl 0x1653b3dda68 <line:631:1, line:632:62> line:631:6 X25519_public_from_private 'void (uint8_t *, const uint8_t *)'
| |-ParmVarDecl 0x1653b3dd860 <col:33, col:60> col:41 out_public_value 'uint8_t *':'uint8_t *'
| `-ParmVarDecl 0x1653b3dd928 <line:632:33, col:61> col:47 private_key 'const uint8_t *':'const uint8_t *'
|-FunctionDecl 0x1653b3ddcf0 <line:634:1, col:79> col:5 invalid ec_point_blind_coordinates 'int (const int *, int *, int *)'
| |-ParmVarDecl 0x1653b3ddb48 <col:32, col:48> col:48 invalid group 'const int *'
| |-ParmVarDecl 0x1653b3ddbc8 <col:55, col:65> col:65 invalid p 'int *'
| `-ParmVarDecl 0x1653b3ddc48 <col:68, col:76> col:76 invalid ctx 'int *'
|-TypedefDecl 0x1653b3dddb8 <.//openssl//file_jk/before\crypto\ec\ecp_nistp224.c:51:1, col:17> col:17 referenced u8 'uint8_t':'unsigned char'
| `-TypedefType 0x1653b3dd220 'uint8_t' sugar
|   |-Typedef 0x1653b2af0c0 'uint8_t'
|   `-BuiltinType 0x1653980e220 'unsigned char'
|-TypedefDecl 0x1653b3dde40 <line:52:1, col:18> col:18 referenced u64 'uint64_t':'unsigned long long'
| `-TypedefType 0x1653b3dde10 'uint64_t' sugar
|   |-Typedef 0x1653b2af210 'uint64_t'
|   `-BuiltinType 0x1653980e2a0 'unsigned long long'
|-TypedefDecl 0x1653b3dded8 <line:74:1, col:18> col:18 referenced limb 'uint64_t':'unsigned long long'
| `-TypedefType 0x1653b3dde10 'uint64_t' sugar
|   |-Typedef 0x1653b2af210 'uint64_t'
|   `-BuiltinType 0x1653980e2a0 'unsigned long long'
|-TypedefDecl 0x1653b3ddf48 <line:75:1, col:19> col:19 referenced invalid widelimb 'int'
| `-BuiltinType 0x1653980e1c0 'int'
|-TypedefDecl 0x1653b3de098 <line:77:1, col:21> col:14 referenced felem 'limb [4]'
| `-ConstantArrayType 0x1653b3de040 'limb [4]' 4 
|   `-TypedefType 0x1653b3ddfa0 'limb' sugar
|     |-Typedef 0x1653b3dded8 'limb'
|     `-TypedefType 0x1653b3dde10 'uint64_t' sugar
|       |-Typedef 0x1653b2af210 'uint64_t'
|       `-BuiltinType 0x1653980e2a0 'unsigned long long'
|-TypedefDecl 0x1653b3de1e8 <line:78:1, col:29> col:18 referenced widefelem 'widelimb [7]'
| `-ConstantArrayType 0x1653b3de190 'widelimb [7]' 7 
|   `-TypedefType 0x1653b3de0f0 'widelimb' sugar
|     |-Typedef 0x1653b3ddf48 'widelimb'
|     `-BuiltinType 0x1653980e1c0 'int'
|-TypedefDecl 0x1653b3de338 <line:85:1, col:30> col:12 referenced felem_bytearray 'u8 [28]'
| `-ConstantArrayType 0x1653b3de2e0 'u8 [28]' 28 
|   `-TypedefType 0x1653b3de240 'u8' sugar
|     |-Typedef 0x1653b3dddb8 'u8'
|     `-TypedefType 0x1653b3dd220 'uint8_t' sugar
|       |-Typedef 0x1653b2af0c0 'uint8_t'
|       `-BuiltinType 0x1653980e220 'unsigned char'
|-VarDecl 0x1653b3de4c8 <line:87:1, line:103:1> line:87:30 used nistp224_curve_params 'const felem_bytearray [5]' static cinit
| `-InitListExpr 0x1653b3e01b8 <col:57, line:103:1> 'const felem_bytearray [5]'
|   |-InitListExpr 0x1653b3e0230 <line:88:5, line:90:52> 'const felem_bytearray':'u8 const[28]'
|   | |-ImplicitCastExpr 0x1653b3e0350 <line:88:6> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3de530 <col:6> 'int' 255
|   | |-ImplicitCastExpr 0x1653b3e0368 <col:12> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3de558 <col:12> 'int' 255
|   | |-ImplicitCastExpr 0x1653b3e0380 <col:18> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3de580 <col:18> 'int' 255
|   | |-ImplicitCastExpr 0x1653b3e0398 <col:24> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3de5a8 <col:24> 'int' 255
|   | |-ImplicitCastExpr 0x1653b3e03b0 <col:30> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3de5d0 <col:30> 'int' 255
|   | |-ImplicitCastExpr 0x1653b3e03c8 <col:36> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3de5f8 <col:36> 'int' 255
|   | |-ImplicitCastExpr 0x1653b3e03e0 <col:42> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3de620 <col:42> 'int' 255
|   | |-ImplicitCastExpr 0x1653b3e03f8 <col:48> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3de648 <col:48> 'int' 255
|   | |-ImplicitCastExpr 0x1653b3e0410 <col:54> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3de670 <col:54> 'int' 255
|   | |-ImplicitCastExpr 0x1653b3e0440 <col:60> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3de698 <col:60> 'int' 255
|   | |-ImplicitCastExpr 0x1653b3e0458 <line:89:6> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3de6c0 <col:6> 'int' 255
|   | |-ImplicitCastExpr 0x1653b3e0470 <col:12> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3de6e8 <col:12> 'int' 255
|   | |-ImplicitCastExpr 0x1653b3e0488 <col:18> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3de710 <col:18> 'int' 255
|   | |-ImplicitCastExpr 0x1653b3e04a0 <col:24> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3de738 <col:24> 'int' 255
|   | |-ImplicitCastExpr 0x1653b3e04b8 <col:30> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3de760 <col:30> 'int' 255
|   | |-ImplicitCastExpr 0x1653b3e04d0 <col:36> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3de788 <col:36> 'int' 255
|   | |-ImplicitCastExpr 0x1653b3e04e8 <col:42> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3de7b0 <col:42> 'int' 0
|   | |-ImplicitCastExpr 0x1653b3e0500 <col:48> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3de7d8 <col:48> 'int' 0
|   | |-ImplicitCastExpr 0x1653b3e0518 <col:54> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3de800 <col:54> 'int' 0
|   | |-ImplicitCastExpr 0x1653b3e0530 <col:60> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3de828 <col:60> 'int' 0
|   | |-ImplicitCastExpr 0x1653b3e0548 <line:90:6> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3de850 <col:6> 'int' 0
|   | |-ImplicitCastExpr 0x1653b3e0560 <col:12> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3de878 <col:12> 'int' 0
|   | |-ImplicitCastExpr 0x1653b3e0578 <col:18> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3de8a0 <col:18> 'int' 0
|   | |-ImplicitCastExpr 0x1653b3e0590 <col:24> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3de8c8 <col:24> 'int' 0
|   | |-ImplicitCastExpr 0x1653b3e05a8 <col:30> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3de8f0 <col:30> 'int' 0
|   | |-ImplicitCastExpr 0x1653b3e05c0 <col:36> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3de918 <col:36> 'int' 0
|   | |-ImplicitCastExpr 0x1653b3e05d8 <col:42> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3de940 <col:42> 'int' 0
|   | `-ImplicitCastExpr 0x1653b3e05f0 <col:48> 'u8':'unsigned char' <IntegralCast>
|   |   `-IntegerLiteral 0x1653b3de968 <col:48> 'int' 1
|   |-InitListExpr 0x1653b3e0618 <line:91:5, line:93:52> 'const felem_bytearray':'u8 const[28]'
|   | |-ImplicitCastExpr 0x1653b3e0738 <line:91:6> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3deab0 <col:6> 'int' 255
|   | |-ImplicitCastExpr 0x1653b3e0750 <col:12> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3dead8 <col:12> 'int' 255
|   | |-ImplicitCastExpr 0x1653b3e0768 <col:18> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3deb00 <col:18> 'int' 255
|   | |-ImplicitCastExpr 0x1653b3e0780 <col:24> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3deb28 <col:24> 'int' 255
|   | |-ImplicitCastExpr 0x1653b3e0798 <col:30> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3deb50 <col:30> 'int' 255
|   | |-ImplicitCastExpr 0x1653b3e07b0 <col:36> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3deb78 <col:36> 'int' 255
|   | |-ImplicitCastExpr 0x1653b3e07c8 <col:42> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3deba0 <col:42> 'int' 255
|   | |-ImplicitCastExpr 0x1653b3e07e0 <col:48> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3debc8 <col:48> 'int' 255
|   | |-ImplicitCastExpr 0x1653b3e07f8 <col:54> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3debf0 <col:54> 'int' 255
|   | |-ImplicitCastExpr 0x1653b3e0810 <col:60> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3dec18 <col:60> 'int' 255
|   | |-ImplicitCastExpr 0x1653b3e0828 <line:92:6> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3dec40 <col:6> 'int' 255
|   | |-ImplicitCastExpr 0x1653b3e0840 <col:12> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3dec68 <col:12> 'int' 255
|   | |-ImplicitCastExpr 0x1653b3e0858 <col:18> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3dec90 <col:18> 'int' 255
|   | |-ImplicitCastExpr 0x1653b3e0870 <col:24> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3decb8 <col:24> 'int' 255
|   | |-ImplicitCastExpr 0x1653b3e0888 <col:30> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3dece0 <col:30> 'int' 255
|   | |-ImplicitCastExpr 0x1653b3e08a0 <col:36> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3ded08 <col:36> 'int' 254
|   | |-ImplicitCastExpr 0x1653b3e08b8 <col:42> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3ded30 <col:42> 'int' 255
|   | |-ImplicitCastExpr 0x1653b3e08d0 <col:48> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3ded58 <col:48> 'int' 255
|   | |-ImplicitCastExpr 0x1653b3e08e8 <col:54> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3ded80 <col:54> 'int' 255
|   | |-ImplicitCastExpr 0x1653b3e0900 <col:60> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3deda8 <col:60> 'int' 255
|   | |-ImplicitCastExpr 0x1653b3e0918 <line:93:6> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3dedd0 <col:6> 'int' 255
|   | |-ImplicitCastExpr 0x1653b3e0930 <col:12> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3dedf8 <col:12> 'int' 255
|   | |-ImplicitCastExpr 0x1653b3e0948 <col:18> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3dee20 <col:18> 'int' 255
|   | |-ImplicitCastExpr 0x1653b3e0960 <col:24> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3dee48 <col:24> 'int' 255
|   | |-ImplicitCastExpr 0x1653b3e0978 <col:30> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3dee70 <col:30> 'int' 255
|   | |-ImplicitCastExpr 0x1653b3e0990 <col:36> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3dee98 <col:36> 'int' 255
|   | |-ImplicitCastExpr 0x1653b3e09a8 <col:42> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3deec0 <col:42> 'int' 255
|   | `-ImplicitCastExpr 0x1653b3e09c0 <col:48> 'u8':'unsigned char' <IntegralCast>
|   |   `-IntegerLiteral 0x1653b3deee8 <col:48> 'int' 254
|   |-InitListExpr 0x1653b3e09e8 <line:94:5, line:96:52> 'const felem_bytearray':'u8 const[28]'
|   | |-ImplicitCastExpr 0x1653b3e0b08 <line:94:6> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3df030 <col:6> 'int' 180
|   | |-ImplicitCastExpr 0x1653b3e0b20 <col:12> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3df058 <col:12> 'int' 5
|   | |-ImplicitCastExpr 0x1653b3e0b38 <col:18> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3df080 <col:18> 'int' 10
|   | |-ImplicitCastExpr 0x1653b3e0b50 <col:24> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3df0a8 <col:24> 'int' 133
|   | |-ImplicitCastExpr 0x1653b3e0b68 <col:30> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3df0d0 <col:30> 'int' 12
|   | |-ImplicitCastExpr 0x1653b3e0b80 <col:36> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3df0f8 <col:36> 'int' 4
|   | |-ImplicitCastExpr 0x1653b3e0b98 <col:42> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3df120 <col:42> 'int' 179
|   | |-ImplicitCastExpr 0x1653b3e0bb0 <col:48> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3df148 <col:48> 'int' 171
|   | |-ImplicitCastExpr 0x1653b3e0bc8 <col:54> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3df170 <col:54> 'int' 245
|   | |-ImplicitCastExpr 0x1653b3e0be0 <col:60> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3df198 <col:60> 'int' 65
|   | |-ImplicitCastExpr 0x1653b3e0bf8 <line:95:6> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3df1c0 <col:6> 'int' 50
|   | |-ImplicitCastExpr 0x1653b3e0c10 <col:12> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3df1e8 <col:12> 'int' 86
|   | |-ImplicitCastExpr 0x1653b3e0c28 <col:18> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3df210 <col:18> 'int' 80
|   | |-ImplicitCastExpr 0x1653b3e0c40 <col:24> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3df238 <col:24> 'int' 68
|   | |-ImplicitCastExpr 0x1653b3e0c58 <col:30> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3df260 <col:30> 'int' 176
|   | |-ImplicitCastExpr 0x1653b3e0c70 <col:36> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3df288 <col:36> 'int' 183
|   | |-ImplicitCastExpr 0x1653b3e0c88 <col:42> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3df2b0 <col:42> 'int' 215
|   | |-ImplicitCastExpr 0x1653b3e0ca0 <col:48> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3df2d8 <col:48> 'int' 191
|   | |-ImplicitCastExpr 0x1653b3e0cb8 <col:54> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3df300 <col:54> 'int' 216
|   | |-ImplicitCastExpr 0x1653b3e0cd0 <col:60> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3df328 <col:60> 'int' 186
|   | |-ImplicitCastExpr 0x1653b3e0ce8 <line:96:6> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3df350 <col:6> 'int' 39
|   | |-ImplicitCastExpr 0x1653b3e0d00 <col:12> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3df378 <col:12> 'int' 11
|   | |-ImplicitCastExpr 0x1653b3e0d18 <col:18> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3df3a0 <col:18> 'int' 57
|   | |-ImplicitCastExpr 0x1653b3e0d30 <col:24> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3df3c8 <col:24> 'int' 67
|   | |-ImplicitCastExpr 0x1653b3e0d48 <col:30> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3df3f0 <col:30> 'int' 35
|   | |-ImplicitCastExpr 0x1653b3e0d60 <col:36> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3df418 <col:36> 'int' 85
|   | |-ImplicitCastExpr 0x1653b3e0d78 <col:42> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3df440 <col:42> 'int' 255
|   | `-ImplicitCastExpr 0x1653b3e0d90 <col:48> 'u8':'unsigned char' <IntegralCast>
|   |   `-IntegerLiteral 0x1653b3df468 <col:48> 'int' 180
|   |-InitListExpr 0x1653b3e0db8 <line:97:5, line:99:52> 'const felem_bytearray':'u8 const[28]'
|   | |-ImplicitCastExpr 0x1653b3e0ed8 <line:97:6> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3df5b0 <col:6> 'int' 183
|   | |-ImplicitCastExpr 0x1653b3e0ef0 <col:12> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3df5d8 <col:12> 'int' 14
|   | |-ImplicitCastExpr 0x1653b3e0f08 <col:18> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3df600 <col:18> 'int' 12
|   | |-ImplicitCastExpr 0x1653b3e0f20 <col:24> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3df628 <col:24> 'int' 189
|   | |-ImplicitCastExpr 0x1653b3e0f38 <col:30> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3df650 <col:30> 'int' 107
|   | |-ImplicitCastExpr 0x1653b3e0f50 <col:36> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3df678 <col:36> 'int' 180
|   | |-ImplicitCastExpr 0x1653b3e0f68 <col:42> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3df6a0 <col:42> 'int' 191
|   | |-ImplicitCastExpr 0x1653b3e0f80 <col:48> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3df6c8 <col:48> 'int' 127
|   | |-ImplicitCastExpr 0x1653b3e0f98 <col:54> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3df6f0 <col:54> 'int' 50
|   | |-ImplicitCastExpr 0x1653b3e0fb0 <col:60> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3df718 <col:60> 'int' 19
|   | |-ImplicitCastExpr 0x1653b3e0fc8 <line:98:6> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3df740 <col:6> 'int' 144
|   | |-ImplicitCastExpr 0x1653b3e0fe0 <col:12> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3df768 <col:12> 'int' 185
|   | |-ImplicitCastExpr 0x1653b3e0ff8 <col:18> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3df790 <col:18> 'int' 74
|   | |-ImplicitCastExpr 0x1653b3e1010 <col:24> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3df7b8 <col:24> 'int' 3
|   | |-ImplicitCastExpr 0x1653b3e1028 <col:30> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3df7e0 <col:30> 'int' 193
|   | |-ImplicitCastExpr 0x1653b3e1040 <col:36> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3df808 <col:36> 'int' 211
|   | |-ImplicitCastExpr 0x1653b3e1058 <col:42> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3df830 <col:42> 'int' 86
|   | |-ImplicitCastExpr 0x1653b3e1070 <col:48> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3df858 <col:48> 'int' 194
|   | |-ImplicitCastExpr 0x1653b3e1088 <col:54> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3df880 <col:54> 'int' 17
|   | |-ImplicitCastExpr 0x1653b3e10a0 <col:60> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3df8a8 <col:60> 'int' 34
|   | |-ImplicitCastExpr 0x1653b3e10b8 <line:99:6> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3df8d0 <col:6> 'int' 52
|   | |-ImplicitCastExpr 0x1653b3e10d0 <col:12> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3df8f8 <col:12> 'int' 50
|   | |-ImplicitCastExpr 0x1653b3e10e8 <col:18> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3df920 <col:18> 'int' 128
|   | |-ImplicitCastExpr 0x1653b3e1100 <col:24> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3df948 <col:24> 'int' 214
|   | |-ImplicitCastExpr 0x1653b3e1118 <col:30> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3df970 <col:30> 'int' 17
|   | |-ImplicitCastExpr 0x1653b3e1130 <col:36> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3df998 <col:36> 'int' 92
|   | |-ImplicitCastExpr 0x1653b3e1148 <col:42> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b3df9c0 <col:42> 'int' 29
|   | `-ImplicitCastExpr 0x1653b3e1160 <col:48> 'u8':'unsigned char' <IntegralCast>
|   |   `-IntegerLiteral 0x1653b3df9e8 <col:48> 'int' 33
|   `-InitListExpr 0x1653b3e1188 <line:100:5, line:102:52> 'const felem_bytearray':'u8 const[28]'
|     |-ImplicitCastExpr 0x1653b3e12a8 <line:100:6> 'u8':'unsigned char' <IntegralCast>
|     | `-IntegerLiteral 0x1653b3dfb30 <col:6> 'int' 189
|     |-ImplicitCastExpr 0x1653b3e12c0 <col:12> 'u8':'unsigned char' <IntegralCast>
|     | `-IntegerLiteral 0x1653b3dfb58 <col:12> 'int' 55
|     |-ImplicitCastExpr 0x1653b3e12d8 <col:18> 'u8':'unsigned char' <IntegralCast>
|     | `-IntegerLiteral 0x1653b3dfb80 <col:18> 'int' 99
|     |-ImplicitCastExpr 0x1653b3e12f0 <col:24> 'u8':'unsigned char' <IntegralCast>
|     | `-IntegerLiteral 0x1653b3dfba8 <col:24> 'int' 136
|     |-ImplicitCastExpr 0x1653b3e1308 <col:30> 'u8':'unsigned char' <IntegralCast>
|     | `-IntegerLiteral 0x1653b3dfbd0 <col:30> 'int' 181
|     |-ImplicitCastExpr 0x1653b3e1320 <col:36> 'u8':'unsigned char' <IntegralCast>
|     | `-IntegerLiteral 0x1653b3dfbf8 <col:36> 'int' 247
|     |-ImplicitCastExpr 0x1653b3e1338 <col:42> 'u8':'unsigned char' <IntegralCast>
|     | `-IntegerLiteral 0x1653b3dfc20 <col:42> 'int' 35
|     |-ImplicitCastExpr 0x1653b3e1350 <col:48> 'u8':'unsigned char' <IntegralCast>
|     | `-IntegerLiteral 0x1653b3dfc48 <col:48> 'int' 251
|     |-ImplicitCastExpr 0x1653b3e1368 <col:54> 'u8':'unsigned char' <IntegralCast>
|     | `-IntegerLiteral 0x1653b3dfc70 <col:54> 'int' 76
|     |-ImplicitCastExpr 0x1653b3e1380 <col:60> 'u8':'unsigned char' <IntegralCast>
|     | `-IntegerLiteral 0x1653b3dfc98 <col:60> 'int' 34
|     |-ImplicitCastExpr 0x1653b3e1398 <line:101:6> 'u8':'unsigned char' <IntegralCast>
|     | `-IntegerLiteral 0x1653b3dfcc0 <col:6> 'int' 223
|     |-ImplicitCastExpr 0x1653b3e13b0 <col:12> 'u8':'unsigned char' <IntegralCast>
|     | `-IntegerLiteral 0x1653b3dfce8 <col:12> 'int' 230
|     |-ImplicitCastExpr 0x1653b3e13c8 <col:18> 'u8':'unsigned char' <IntegralCast>
|     | `-IntegerLiteral 0x1653b3dfd10 <col:18> 'int' 205
|     |-ImplicitCastExpr 0x1653b3e13e0 <col:24> 'u8':'unsigned char' <IntegralCast>
|     | `-IntegerLiteral 0x1653b3dfd38 <col:24> 'int' 67
|     |-ImplicitCastExpr 0x1653b3e13f8 <col:30> 'u8':'unsigned char' <IntegralCast>
|     | `-IntegerLiteral 0x1653b3dfd60 <col:30> 'int' 117
|     |-ImplicitCastExpr 0x1653b3e1410 <col:36> 'u8':'unsigned char' <IntegralCast>
|     | `-IntegerLiteral 0x1653b3dfd88 <col:36> 'int' 160
|     |-ImplicitCastExpr 0x1653b3e1428 <col:42> 'u8':'unsigned char' <IntegralCast>
|     | `-IntegerLiteral 0x1653b3dfdb0 <col:42> 'int' 90
|     |-ImplicitCastExpr 0x1653b3e1440 <col:48> 'u8':'unsigned char' <IntegralCast>
|     | `-IntegerLiteral 0x1653b3dfdd8 <col:48> 'int' 7
|     |-ImplicitCastExpr 0x1653b3e1458 <col:54> 'u8':'unsigned char' <IntegralCast>
|     | `-IntegerLiteral 0x1653b3dfe00 <col:54> 'int' 71
|     |-ImplicitCastExpr 0x1653b3e1470 <col:60> 'u8':'unsigned char' <IntegralCast>
|     | `-IntegerLiteral 0x1653b3dfe28 <col:60> 'int' 100
|     |-ImplicitCastExpr 0x1653b3e1488 <line:102:6> 'u8':'unsigned char' <IntegralCast>
|     | `-IntegerLiteral 0x1653b3dfe50 <col:6> 'int' 68
|     |-ImplicitCastExpr 0x1653b3e14a0 <col:12> 'u8':'unsigned char' <IntegralCast>
|     | `-IntegerLiteral 0x1653b3dfe78 <col:12> 'int' 213
|     |-ImplicitCastExpr 0x1653b3e14b8 <col:18> 'u8':'unsigned char' <IntegralCast>
|     | `-IntegerLiteral 0x1653b3dfea0 <col:18> 'int' 129
|     |-ImplicitCastExpr 0x1653b3e14d0 <col:24> 'u8':'unsigned char' <IntegralCast>
|     | `-IntegerLiteral 0x1653b3dfec8 <col:24> 'int' 153
|     |-ImplicitCastExpr 0x1653b3e14e8 <col:30> 'u8':'unsigned char' <IntegralCast>
|     | `-IntegerLiteral 0x1653b3dfef0 <col:30> 'int' 133
|     |-ImplicitCastExpr 0x1653b3e1500 <col:36> 'u8':'unsigned char' <IntegralCast>
|     | `-IntegerLiteral 0x1653b3dff18 <col:36> 'int' 0
|     |-ImplicitCastExpr 0x1653b3e1518 <col:42> 'u8':'unsigned char' <IntegralCast>
|     | `-IntegerLiteral 0x1653b3dff40 <col:42> 'int' 126
|     `-ImplicitCastExpr 0x1653b3e1530 <col:48> 'u8':'unsigned char' <IntegralCast>
|       `-IntegerLiteral 0x1653b3dff68 <col:48> 'int' 52
|-VarDecl 0x1653b3e17d8 <line:136:1, line:233:1> line:136:20 used gmul 'const felem [2][16][3]' static cinit
| `-InitListExpr 0x1653b2f1518 <col:37, line:233:1> 'const felem [2][16][3]'
|   |-InitListExpr 0x1653b2f1868 <line:137:1, line:184:16> 'const felem [16][3]'
|   | |-InitListExpr 0x1653b2f1958 <line:137:2, line:139:15> 'const felem [3]'
|   | | |-InitListExpr 0x1653b2f19c0 <line:137:3, col:14> 'const felem':'limb const[4]'
|   | | | |-ImplicitCastExpr 0x1653b2f1a20 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e1840 <col:4> 'int' 0
|   | | | |-ImplicitCastExpr 0x1653b2f1a38 <col:7> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e1868 <col:7> 'int' 0
|   | | | |-ImplicitCastExpr 0x1653b2f1a50 <col:10> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e1890 <col:10> 'int' 0
|   | | | `-ImplicitCastExpr 0x1653b2f1a68 <col:13> 'limb':'unsigned long long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x1653b3e18b8 <col:13> 'int' 0
|   | | |-InitListExpr 0x1653b2f1a90 <line:138:3, col:14> 'const felem':'limb const[4]'
|   | | | |-ImplicitCastExpr 0x1653b2f1af0 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e1940 <col:4> 'int' 0
|   | | | |-ImplicitCastExpr 0x1653b2f1b08 <col:7> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e1968 <col:7> 'int' 0
|   | | | |-ImplicitCastExpr 0x1653b2f1b20 <col:10> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e1990 <col:10> 'int' 0
|   | | | `-ImplicitCastExpr 0x1653b2f1b38 <col:13> 'limb':'unsigned long long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x1653b3e19b8 <col:13> 'int' 0
|   | | `-InitListExpr 0x1653b2f1b60 <line:139:3, col:14> 'const felem':'limb const[4]'
|   | |   |-ImplicitCastExpr 0x1653b2f1bc0 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x1653b3e1a40 <col:4> 'int' 0
|   | |   |-ImplicitCastExpr 0x1653b2f1bd8 <col:7> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x1653b3e1a68 <col:7> 'int' 0
|   | |   |-ImplicitCastExpr 0x1653b2f1bf0 <col:10> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x1653b3e1a90 <col:10> 'int' 0
|   | |   `-ImplicitCastExpr 0x1653b2f1c08 <col:13> 'limb':'unsigned long long' <IntegralCast>
|   | |     `-IntegerLiteral 0x1653b3e1ab8 <col:13> 'int' 0
|   | |-InitListExpr 0x1653b2f1c50 <line:140:2, line:142:15> 'const felem [3]'
|   | | |-InitListExpr 0x1653b2f1cb8 <line:140:3, col:74> 'const felem':'limb const[4]'
|   | | | |-ImplicitCastExpr 0x1653b2f1d18 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e1b98 <col:4> 'long long' 14215405738138913
|   | | | |-ImplicitCastExpr 0x1653b2f1d30 <col:22> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e1bc0 <col:22> 'long long' 54557040081707572
|   | | | |-ImplicitCastExpr 0x1653b2f1d48 <col:40> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e1be8 <col:40> 'long long' 35802381656082947
|   | | | `-ImplicitCastExpr 0x1653b2f1d60 <col:58> 'limb':'unsigned long long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x1653b3e1c10 <col:58> 'long long' 51525368618398911
|   | | |-InitListExpr 0x1653b2f1d88 <line:141:3, col:74> 'const felem':'limb const[4]'
|   | | | |-ImplicitCastExpr 0x1653b2f1de8 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e1c98 <col:4> 'long long' 60096666400751156
|   | | | |-ImplicitCastExpr 0x1653b2f1e00 <col:22> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e1cc0 <col:22> 'long long' 33108880804766788
|   | | | |-ImplicitCastExpr 0x1653b2f1e18 <col:40> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e1ce8 <col:40> 'long long' 70733931823418691
|   | | | `-ImplicitCastExpr 0x1653b2f1e30 <col:58> 'limb':'unsigned long long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x1653b3e1d10 <col:58> 'long long' 53259671233230627
|   | | `-InitListExpr 0x1653b2f1e58 <line:142:3, col:14> 'const felem':'limb const[4]'
|   | |   |-ImplicitCastExpr 0x1653b2f1eb8 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x1653b3e1d98 <col:4> 'int' 1
|   | |   |-ImplicitCastExpr 0x1653b2f1ed0 <col:7> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x1653b3e1dc0 <col:7> 'int' 0
|   | |   |-ImplicitCastExpr 0x1653b2f1ee8 <col:10> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x1653b3e1de8 <col:10> 'int' 0
|   | |   `-ImplicitCastExpr 0x1653b2f1f00 <col:13> 'limb':'unsigned long long' <IntegralCast>
|   | |     `-IntegerLiteral 0x1653b3e1e10 <col:13> 'int' 0
|   | |-InitListExpr 0x1653b2f1f48 <line:143:2, line:145:15> 'const felem [3]'
|   | | |-InitListExpr 0x1653b2f1fb0 <line:143:3, col:74> 'const felem':'limb const[4]'
|   | | | |-ImplicitCastExpr 0x1653b2f2010 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e1ef0 <col:4> 'long long' 71378600081669097
|   | | | |-ImplicitCastExpr 0x1653b2f2028 <col:22> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e1f18 <col:22> 'long long' 53101353446198878
|   | | | |-ImplicitCastExpr 0x1653b2f2040 <col:40> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e1f40 <col:40> 'long long' 9643677127944771
|   | | | `-ImplicitCastExpr 0x1653b2f2058 <col:58> 'limb':'unsigned long long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x1653b3e1f68 <col:58> 'long long' 8806794754890693
|   | | |-InitListExpr 0x1653b2f2080 <line:144:3, col:74> 'const felem':'limb const[4]'
|   | | | |-ImplicitCastExpr 0x1653b2f20e0 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e1ff0 <col:4> 'long long' 11787557387672643
|   | | | |-ImplicitCastExpr 0x1653b2f20f8 <col:22> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e2018 <col:22> 'long long' 66683595736409698
|   | | | |-ImplicitCastExpr 0x1653b2f2110 <col:40> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e2040 <col:40> 'long long' 62071344511258832
|   | | | `-ImplicitCastExpr 0x1653b2f2128 <col:58> 'limb':'unsigned long long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x1653b3e2068 <col:58> 'long long' 42804938177827617
|   | | `-InitListExpr 0x1653b2f2150 <line:145:3, col:14> 'const felem':'limb const[4]'
|   | |   |-ImplicitCastExpr 0x1653b2f21b0 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x1653b3e20f0 <col:4> 'int' 1
|   | |   |-ImplicitCastExpr 0x1653b2f21c8 <col:7> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x1653b3e2118 <col:7> 'int' 0
|   | |   |-ImplicitCastExpr 0x1653b2f21e0 <col:10> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x1653b3e2140 <col:10> 'int' 0
|   | |   `-ImplicitCastExpr 0x1653b2f21f8 <col:13> 'limb':'unsigned long long' <IntegralCast>
|   | |     `-IntegerLiteral 0x1653b3e2168 <col:13> 'int' 0
|   | |-InitListExpr 0x1653b2f2240 <line:146:2, line:148:15> 'const felem [3]'
|   | | |-InitListExpr 0x1653b2f22a8 <line:146:3, col:74> 'const felem':'limb const[4]'
|   | | | |-ImplicitCastExpr 0x1653b2f2308 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e2248 <col:4> 'long long' 30749386935733944
|   | | | |-ImplicitCastExpr 0x1653b2f2320 <col:22> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e2270 <col:22> 'long long' 24100114246361841
|   | | | |-ImplicitCastExpr 0x1653b2f2338 <col:40> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e2298 <col:40> 'long long' 6449338927450687
|   | | | `-ImplicitCastExpr 0x1653b2f2350 <col:58> 'limb':'unsigned long long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x1653b3e22c0 <col:58> 'long long' 67233816825210696
|   | | |-InitListExpr 0x1653b2f2378 <line:147:3, col:74> 'const felem':'limb const[4]'
|   | | | |-ImplicitCastExpr 0x1653b2f23d8 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e2348 <col:4> 'long long' 68010914192828013
|   | | | |-ImplicitCastExpr 0x1653b2f23f0 <col:22> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e2370 <col:22> 'long long' 48399079136688607
|   | | | |-ImplicitCastExpr 0x1653b2f2408 <col:40> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e2398 <col:40> 'long long' 13854281485496300
|   | | | `-ImplicitCastExpr 0x1653b2f2420 <col:58> 'limb':'unsigned long long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x1653b3e23c0 <col:58> 'long long' 26093033259862551
|   | | `-InitListExpr 0x1653b2f2448 <line:148:3, col:14> 'const felem':'limb const[4]'
|   | |   |-ImplicitCastExpr 0x1653b2f24a8 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x1653b3e2470 <col:4> 'int' 1
|   | |   |-ImplicitCastExpr 0x1653b2f24c0 <col:7> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x1653b3e2498 <col:7> 'int' 0
|   | |   |-ImplicitCastExpr 0x1653b2f24d8 <col:10> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x1653b3e24c0 <col:10> 'int' 0
|   | |   `-ImplicitCastExpr 0x1653b2f24f0 <col:13> 'limb':'unsigned long long' <IntegralCast>
|   | |     `-IntegerLiteral 0x1653b3e24e8 <col:13> 'int' 0
|   | |-InitListExpr 0x1653b2f2538 <line:149:2, line:151:15> 'const felem [3]'
|   | | |-InitListExpr 0x1653b2f25a0 <line:149:3, col:74> 'const felem':'limb const[4]'
|   | | | |-ImplicitCastExpr 0x1653b2f2600 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e25c8 <col:4> 'long long' 1760964184319715
|   | | | |-ImplicitCastExpr 0x1653b2f2618 <col:22> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e25f0 <col:22> 'long long' 41090027584401568
|   | | | |-ImplicitCastExpr 0x1653b2f2630 <col:40> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e2618 <col:40> 'long long' 67532174447950347
|   | | | `-ImplicitCastExpr 0x1653b2f2648 <col:58> 'limb':'unsigned long long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x1653b3e2640 <col:58> 'long long' 1294857651850942
|   | | |-InitListExpr 0x1653b2f2670 <line:150:3, col:74> 'const felem':'limb const[4]'
|   | | | |-ImplicitCastExpr 0x1653b2f26d0 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e26c8 <col:4> 'long long' 32950441342316381
|   | | | |-ImplicitCastExpr 0x1653b2f26e8 <col:22> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e26f0 <col:22> 'long long' 37393468670956624
|   | | | |-ImplicitCastExpr 0x1653b2f2700 <col:40> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e2718 <col:40> 'long long' 36547193909475078
|   | | | `-ImplicitCastExpr 0x1653b2f2718 <col:58> 'limb':'unsigned long long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x1653b3e2740 <col:58> 'long long' 29580121932532827
|   | | `-InitListExpr 0x1653b2f2740 <line:151:3, col:14> 'const felem':'limb const[4]'
|   | |   |-ImplicitCastExpr 0x1653b2f27a0 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x1653b3e27c8 <col:4> 'int' 1
|   | |   |-ImplicitCastExpr 0x1653b2f27b8 <col:7> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x1653b3e27f0 <col:7> 'int' 0
|   | |   |-ImplicitCastExpr 0x1653b2f27d0 <col:10> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x1653b3e2818 <col:10> 'int' 0
|   | |   `-ImplicitCastExpr 0x1653b2f27e8 <col:13> 'limb':'unsigned long long' <IntegralCast>
|   | |     `-IntegerLiteral 0x1653b3e2840 <col:13> 'int' 0
|   | |-InitListExpr 0x1653b2f2830 <line:152:2, line:154:15> 'const felem [3]'
|   | | |-InitListExpr 0x1653b2f2898 <line:152:3, col:74> 'const felem':'limb const[4]'
|   | | | |-ImplicitCastExpr 0x1653b2f28f8 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e2920 <col:4> 'long long' 66029711509099974
|   | | | |-ImplicitCastExpr 0x1653b2f2910 <col:22> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e2948 <col:22> 'long long' 2357355352064724
|   | | | |-ImplicitCastExpr 0x1653b2f2928 <col:40> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e2970 <col:40> 'long long' 62261198381500593
|   | | | `-ImplicitCastExpr 0x1653b2f2940 <col:58> 'limb':'unsigned long long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x1653b3e2998 <col:58> 'long long' 41424473139086755
|   | | |-InitListExpr 0x1653b2f2968 <line:153:3, col:74> 'const felem':'limb const[4]'
|   | | | |-ImplicitCastExpr 0x1653b2f29c8 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e2a20 <col:4> 'long long' 44747090636954559
|   | | | |-ImplicitCastExpr 0x1653b2f29e0 <col:22> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e2a48 <col:22> 'long long' 18408407550890224
|   | | | |-ImplicitCastExpr 0x1653b2f29f8 <col:40> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e2a70 <col:40> 'long long' 71473164347156647
|   | | | `-ImplicitCastExpr 0x1653b2f2a10 <col:58> 'limb':'unsigned long long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x1653b3e2a98 <col:58> 'long long' 23149671595181610
|   | | `-InitListExpr 0x1653b2f2a38 <line:154:3, col:14> 'const felem':'limb const[4]'
|   | |   |-ImplicitCastExpr 0x1653b2f2a98 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x1653b3e2b20 <col:4> 'int' 1
|   | |   |-ImplicitCastExpr 0x1653b2f2ab0 <col:7> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x1653b3e2b48 <col:7> 'int' 0
|   | |   |-ImplicitCastExpr 0x1653b2f2ac8 <col:10> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x1653b3e2b70 <col:10> 'int' 0
|   | |   `-ImplicitCastExpr 0x1653b2f2ae0 <col:13> 'limb':'unsigned long long' <IntegralCast>
|   | |     `-IntegerLiteral 0x1653b3e2b98 <col:13> 'int' 0
|   | |-InitListExpr 0x1653b2f2b28 <line:155:2, line:157:15> 'const felem [3]'
|   | | |-InitListExpr 0x1653b2f2b90 <line:155:3, col:74> 'const felem':'limb const[4]'
|   | | | |-ImplicitCastExpr 0x1653b2f2bf0 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e2c78 <col:4> 'long long' 36644373851745395
|   | | | |-ImplicitCastExpr 0x1653b2f2c08 <col:22> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e2ca0 <col:22> 'long long' 45067346634300687
|   | | | |-ImplicitCastExpr 0x1653b2f2c20 <col:40> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e2cc8 <col:40> 'long long' 15269155078675364
|   | | | `-ImplicitCastExpr 0x1653b2f2c38 <col:58> 'limb':'unsigned long long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x1653b3e2cf0 <col:58> 'long long' 55047824290902620
|   | | |-InitListExpr 0x1653b2f2c60 <line:156:3, col:74> 'const felem':'limb const[4]'
|   | | | |-ImplicitCastExpr 0x1653b2f2cc0 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e2d78 <col:4> 'long long' 52870985989664036
|   | | | |-ImplicitCastExpr 0x1653b2f2cd8 <col:22> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e2da0 <col:22> 'long long' 62482831525149420
|   | | | |-ImplicitCastExpr 0x1653b2f2cf0 <col:40> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e2dc8 <col:40> 'long long' 55050187086899839
|   | | | `-ImplicitCastExpr 0x1653b2f2d08 <col:58> 'limb':'unsigned long long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x1653b3e2df0 <col:58> 'long long' 8720744547476036
|   | | `-InitListExpr 0x1653b2f2d30 <line:157:3, col:14> 'const felem':'limb const[4]'
|   | |   |-ImplicitCastExpr 0x1653b2f2d90 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x1653b3e2e78 <col:4> 'int' 1
|   | |   |-ImplicitCastExpr 0x1653b2f2dc0 <col:7> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x1653b3e2ea0 <col:7> 'int' 0
|   | |   |-ImplicitCastExpr 0x1653b2f2dd8 <col:10> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x1653b3e2ec8 <col:10> 'int' 0
|   | |   `-ImplicitCastExpr 0x1653b2f2df0 <col:13> 'limb':'unsigned long long' <IntegralCast>
|   | |     `-IntegerLiteral 0x1653b3e2ef0 <col:13> 'int' 0
|   | |-InitListExpr 0x1653b2f2e38 <line:158:2, line:160:15> 'const felem [3]'
|   | | |-InitListExpr 0x1653b2f2ea0 <line:158:3, col:74> 'const felem':'limb const[4]'
|   | | | |-ImplicitCastExpr 0x1653b2f2f00 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e2fd0 <col:4> 'long long' 21566442933681569
|   | | | |-ImplicitCastExpr 0x1653b2f2f18 <col:22> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e2ff8 <col:22> 'long long' 58858973370079675
|   | | | |-ImplicitCastExpr 0x1653b2f2f30 <col:40> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e3020 <col:40> 'long long' 71931372512054140
|   | | | `-ImplicitCastExpr 0x1653b2f2f48 <col:58> 'limb':'unsigned long long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x1653b3e3048 <col:58> 'long long' 10714412583876681
|   | | |-InitListExpr 0x1653b2f2f70 <line:159:3, col:74> 'const felem':'limb const[4]'
|   | | | |-ImplicitCastExpr 0x1653b2f2fd0 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e30d0 <col:4> 'long long' 19370324697435552
|   | | | |-ImplicitCastExpr 0x1653b2f2fe8 <col:22> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e30f8 <col:22> 'long long' 57908507923887355
|   | | | |-ImplicitCastExpr 0x1653b2f3000 <col:40> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e3120 <col:40> 'long long' 42340026435320969
|   | | | `-ImplicitCastExpr 0x1653b2f3018 <col:58> 'limb':'unsigned long long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x1653b3e3148 <col:58> 'long long' 71608876929167634
|   | | `-InitListExpr 0x1653b2f3040 <line:160:3, col:14> 'const felem':'limb const[4]'
|   | |   |-ImplicitCastExpr 0x1653b2f30a0 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x1653b3e31d0 <col:4> 'int' 1
|   | |   |-ImplicitCastExpr 0x1653b2f30b8 <col:7> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x1653b3e31f8 <col:7> 'int' 0
|   | |   |-ImplicitCastExpr 0x1653b2f30d0 <col:10> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x1653b3e3220 <col:10> 'int' 0
|   | |   `-ImplicitCastExpr 0x1653b2f30e8 <col:13> 'limb':'unsigned long long' <IntegralCast>
|   | |     `-IntegerLiteral 0x1653b3e3248 <col:13> 'int' 0
|   | |-InitListExpr 0x1653b2f3130 <line:161:2, line:163:15> 'const felem [3]'
|   | | |-InitListExpr 0x1653b2f3198 <line:161:3, col:74> 'const felem':'limb const[4]'
|   | | | |-ImplicitCastExpr 0x1653b2f31f8 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e3328 <col:4> 'long long' 63768024459850029
|   | | | |-ImplicitCastExpr 0x1653b2f3210 <col:22> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e3350 <col:22> 'long long' 56043627304934510
|   | | | |-ImplicitCastExpr 0x1653b2f3228 <col:40> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e3378 <col:40> 'long long' 34260102009486412
|   | | | `-ImplicitCastExpr 0x1653b2f3240 <col:58> 'limb':'unsigned long long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x1653b3e33a0 <col:58> 'long long' 1626393528605511
|   | | |-InitListExpr 0x1653b2f3268 <line:162:3, col:74> 'const felem':'limb const[4]'
|   | | | |-ImplicitCastExpr 0x1653b2f32c8 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e3428 <col:4> 'long long' 44894586669579834
|   | | | |-ImplicitCastExpr 0x1653b2f32e0 <col:22> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e3450 <col:22> 'long long' 6862401668738010
|   | | | |-ImplicitCastExpr 0x1653b2f32f8 <col:40> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e3478 <col:40> 'long long' 28182317526089046
|   | | | `-ImplicitCastExpr 0x1653b2f3310 <col:58> 'limb':'unsigned long long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x1653b3e34a0 <col:58> 'long long' 32234762541237140
|   | | `-InitListExpr 0x1653b2f3338 <line:163:3, col:14> 'const felem':'limb const[4]'
|   | |   |-ImplicitCastExpr 0x1653b2f3398 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x1653b3e3528 <col:4> 'int' 1
|   | |   |-ImplicitCastExpr 0x1653b2f33b0 <col:7> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x1653b3e3550 <col:7> 'int' 0
|   | |   |-ImplicitCastExpr 0x1653b2f33c8 <col:10> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x1653b3e3578 <col:10> 'int' 0
|   | |   `-ImplicitCastExpr 0x1653b2f33e0 <col:13> 'limb':'unsigned long long' <IntegralCast>
|   | |     `-IntegerLiteral 0x1653b3e35a0 <col:13> 'int' 0
|   | |-InitListExpr 0x1653b2f3428 <line:164:2, line:166:15> 'const felem [3]'
|   | | |-InitListExpr 0x1653b2f3490 <line:164:3, col:74> 'const felem':'limb const[4]'
|   | | | |-ImplicitCastExpr 0x1653b2f34f0 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e3680 <col:4> 'long long' 1241452496952329
|   | | | |-ImplicitCastExpr 0x1653b2f3508 <col:22> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e36a8 <col:22> 'long long' 32837518891159477
|   | | | |-ImplicitCastExpr 0x1653b2f3520 <col:40> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e36d0 <col:40> 'long long' 51964745771230176
|   | | | `-ImplicitCastExpr 0x1653b2f3538 <col:58> 'limb':'unsigned long long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x1653b3e36f8 <col:58> 'long long' 18517456905243677
|   | | |-InitListExpr 0x1653b2f3560 <line:165:3, col:74> 'const felem':'limb const[4]'
|   | | | |-ImplicitCastExpr 0x1653b2f35c0 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e3780 <col:4> 'long long' 64715081076890241
|   | | | |-ImplicitCastExpr 0x1653b2f35d8 <col:22> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e37a8 <col:22> 'long long' 17397160098818133
|   | | | |-ImplicitCastExpr 0x1653b2f35f0 <col:40> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e37d0 <col:40> 'long long' 8160769644386790
|   | | | `-ImplicitCastExpr 0x1653b2f3608 <col:58> 'limb':'unsigned long long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x1653b3e37f8 <col:58> 'long long' 4044017734465703
|   | | `-InitListExpr 0x1653b2f3630 <line:166:3, col:14> 'const felem':'limb const[4]'
|   | |   |-ImplicitCastExpr 0x1653b2f3690 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x1653b3e3880 <col:4> 'int' 1
|   | |   |-ImplicitCastExpr 0x1653b2f36a8 <col:7> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x1653b3e38a8 <col:7> 'int' 0
|   | |   |-ImplicitCastExpr 0x1653b2f36c0 <col:10> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x1653b3e38d0 <col:10> 'int' 0
|   | |   `-ImplicitCastExpr 0x1653b2f36d8 <col:13> 'limb':'unsigned long long' <IntegralCast>
|   | |     `-IntegerLiteral 0x1653b3e38f8 <col:13> 'int' 0
|   | |-InitListExpr 0x1653b2f3720 <line:167:2, line:169:15> 'const felem [3]'
|   | | |-InitListExpr 0x1653b2f3788 <line:167:3, col:74> 'const felem':'limb const[4]'
|   | | | |-ImplicitCastExpr 0x1653b2f37e8 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e39d8 <col:4> 'long long' 61557443266865279
|   | | | |-ImplicitCastExpr 0x1653b2f3800 <col:22> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e3a00 <col:22> 'long long' 19193158631805686
|   | | | |-ImplicitCastExpr 0x1653b2f3818 <col:40> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e3a28 <col:40> 'long long' 63114965174238904
|   | | | `-ImplicitCastExpr 0x1653b2f3830 <col:58> 'limb':'unsigned long long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x1653b3e3a50 <col:58> 'long long' 57153014074658596
|   | | |-InitListExpr 0x1653b2f3858 <line:168:3, col:74> 'const felem':'limb const[4]'
|   | | | |-ImplicitCastExpr 0x1653b2f38b8 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e3ad8 <col:4> 'long long' 33295952022928805
|   | | | |-ImplicitCastExpr 0x1653b2f38d0 <col:22> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e3b00 <col:22> 'long long' 6856166956736580
|   | | | |-ImplicitCastExpr 0x1653b2f38e8 <col:40> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e3b28 <col:40> 'long long' 41238105016811088
|   | | | `-ImplicitCastExpr 0x1653b2f3900 <col:58> 'limb':'unsigned long long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x1653b3e3b50 <col:58> 'long long' 55172608173881473
|   | | `-InitListExpr 0x1653b2f3928 <line:169:3, col:14> 'const felem':'limb const[4]'
|   | |   |-ImplicitCastExpr 0x1653b2f3988 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x1653b3e3bd8 <col:4> 'int' 1
|   | |   |-ImplicitCastExpr 0x1653b2f39a0 <col:7> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x1653b3e3c00 <col:7> 'int' 0
|   | |   |-ImplicitCastExpr 0x1653b2f39b8 <col:10> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x1653b3e3c28 <col:10> 'int' 0
|   | |   `-ImplicitCastExpr 0x1653b2f39d0 <col:13> 'limb':'unsigned long long' <IntegralCast>
|   | |     `-IntegerLiteral 0x1653b3e3c50 <col:13> 'int' 0
|   | |-InitListExpr 0x1653b2f3a18 <line:170:2, line:172:15> 'const felem [3]'
|   | | |-InitListExpr 0x1653b2f3a80 <line:170:3, col:74> 'const felem':'limb const[4]'
|   | | | |-ImplicitCastExpr 0x1653b2f3ae0 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e3d30 <col:4> 'long long' 51955431143051104
|   | | | |-ImplicitCastExpr 0x1653b2f3af8 <col:22> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e3d58 <col:22> 'long long' 48951545393908131
|   | | | |-ImplicitCastExpr 0x1653b2f3b10 <col:40> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e3d80 <col:40> 'long long' 7332110390559962
|   | | | `-ImplicitCastExpr 0x1653b2f3b28 <col:58> 'limb':'unsigned long long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x1653b3e3da8 <col:58> 'long long' 6585796058786180
|   | | |-InitListExpr 0x1653b2f3b50 <line:171:3, col:74> 'const felem':'limb const[4]'
|   | | | |-ImplicitCastExpr 0x1653b2f3bb0 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e3e30 <col:4> 'long long' 33542384203444382
|   | | | |-ImplicitCastExpr 0x1653b2f3bc8 <col:22> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e3e58 <col:22> 'long long' 10058797968965999
|   | | | |-ImplicitCastExpr 0x1653b2f3be0 <col:40> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e3e80 <col:40> 'long long' 21426027006873135
|   | | | `-ImplicitCastExpr 0x1653b2f3bf8 <col:58> 'limb':'unsigned long long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x1653b3e3ea8 <col:58> 'long long' 63791559461639017
|   | | `-InitListExpr 0x1653b2f3c20 <line:172:3, col:14> 'const felem':'limb const[4]'
|   | |   |-ImplicitCastExpr 0x1653b2f3c80 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x1653b3e3f30 <col:4> 'int' 1
|   | |   |-ImplicitCastExpr 0x1653b2f3c98 <col:7> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x1653b3e3f58 <col:7> 'int' 0
|   | |   |-ImplicitCastExpr 0x1653b2f3cb0 <col:10> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x1653b3e3f80 <col:10> 'int' 0
|   | |   `-ImplicitCastExpr 0x1653b2f3cc8 <col:13> 'limb':'unsigned long long' <IntegralCast>
|   | |     `-IntegerLiteral 0x1653b3e3fa8 <col:13> 'int' 0
|   | |-InitListExpr 0x1653b2f3d10 <line:173:2, line:175:15> 'const felem [3]'
|   | | |-InitListExpr 0x1653b2f3d78 <line:173:3, col:74> 'const felem':'limb const[4]'
|   | | | |-ImplicitCastExpr 0x1653b2f3dd8 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e4088 <col:4> 'long long' 24521654599544755
|   | | | |-ImplicitCastExpr 0x1653b2f3df0 <col:22> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e40b0 <col:22> 'long long' 48950835715048786
|   | | | |-ImplicitCastExpr 0x1653b2f3e08 <col:40> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e40d8 <col:40> 'long long' 56486885804635390
|   | | | `-ImplicitCastExpr 0x1653b2f3e20 <col:58> 'limb':'unsigned long long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x1653b3e4100 <col:58> 'long long' 30538161968627171
|   | | |-InitListExpr 0x1653b2f3e48 <line:174:3, col:74> 'const felem':'limb const[4]'
|   | | | |-ImplicitCastExpr 0x1653b2f3ea8 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e4188 <col:4> 'long long' 71951289672484434
|   | | | |-ImplicitCastExpr 0x1653b2f3ec0 <col:22> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e41b0 <col:22> 'long long' 50802807143032121
|   | | | |-ImplicitCastExpr 0x1653b2f3ed8 <col:40> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e41d8 <col:40> 'long long' 45762139208909556
|   | | | `-ImplicitCastExpr 0x1653b2f3ef0 <col:58> 'limb':'unsigned long long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x1653b3e4200 <col:58> 'long long' 11379042128140896
|   | | `-InitListExpr 0x1653b2f3f18 <line:175:3, col:14> 'const felem':'limb const[4]'
|   | |   |-ImplicitCastExpr 0x1653b2f3f78 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x1653b3e4288 <col:4> 'int' 1
|   | |   |-ImplicitCastExpr 0x1653b2f3f90 <col:7> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x1653b3e42b0 <col:7> 'int' 0
|   | |   |-ImplicitCastExpr 0x1653b2f3fa8 <col:10> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x1653b3e42d8 <col:10> 'int' 0
|   | |   `-ImplicitCastExpr 0x1653b2f3fc0 <col:13> 'limb':'unsigned long long' <IntegralCast>
|   | |     `-IntegerLiteral 0x1653b3e4300 <col:13> 'int' 0
|   | |-InitListExpr 0x1653b2f4008 <line:176:2, line:178:15> 'const felem [3]'
|   | | |-InitListExpr 0x1653b2f4070 <line:176:3, col:74> 'const felem':'limb const[4]'
|   | | | |-ImplicitCastExpr 0x1653b2f40d0 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e43e0 <col:4> 'long long' 18220922147849391
|   | | | |-ImplicitCastExpr 0x1653b2f40e8 <col:22> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b3e4408 <col:22> 'long long' 2697206093288044
|   | | | |-ImplicitCastExpr 0x1653b2f4100 <col:40> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b2ecd90 <col:40> 'long long' 53180879631546064
|   | | | `-ImplicitCastExpr 0x1653b2f4118 <col:58> 'limb':'unsigned long long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x1653b2ecdb8 <col:58> 'long long' 9383343528083543
|   | | |-InitListExpr 0x1653b2f4140 <line:177:3, col:74> 'const felem':'limb const[4]'
|   | | | |-ImplicitCastExpr 0x1653b2f41a0 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b2ece40 <col:4> 'long long' 39346355303216222
|   | | | |-ImplicitCastExpr 0x1653b2f41b8 <col:22> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b2ece68 <col:22> 'long long' 67866619231686511
|   | | | |-ImplicitCastExpr 0x1653b2f41d0 <col:40> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b2ece90 <col:40> 'long long' 37772318539245749
|   | | | `-ImplicitCastExpr 0x1653b2f41e8 <col:58> 'limb':'unsigned long long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x1653b2eceb8 <col:58> 'long long' 65271359694450105
|   | | `-InitListExpr 0x1653b2f4210 <line:178:3, col:14> 'const felem':'limb const[4]'
|   | |   |-ImplicitCastExpr 0x1653b2f4270 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x1653b2ecf40 <col:4> 'int' 1
|   | |   |-ImplicitCastExpr 0x1653b2f4288 <col:7> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x1653b2ecf68 <col:7> 'int' 0
|   | |   |-ImplicitCastExpr 0x1653b2f42a0 <col:10> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x1653b2ecf90 <col:10> 'int' 0
|   | |   `-ImplicitCastExpr 0x1653b2f42b8 <col:13> 'limb':'unsigned long long' <IntegralCast>
|   | |     `-IntegerLiteral 0x1653b2ecfb8 <col:13> 'int' 0
|   | |-InitListExpr 0x1653b2f4300 <line:179:2, line:181:15> 'const felem [3]'
|   | | |-InitListExpr 0x1653b2f4368 <line:179:3, col:74> 'const felem':'limb const[4]'
|   | | | |-ImplicitCastExpr 0x1653b2f43c8 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b2ed098 <col:4> 'long long' 49944528290716795
|   | | | |-ImplicitCastExpr 0x1653b2f43e0 <col:22> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b2ed0c0 <col:22> 'long long' 48476314201006552
|   | | | |-ImplicitCastExpr 0x1653b2f43f8 <col:40> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b2ed0e8 <col:40> 'long long' 7926935861973702
|   | | | `-ImplicitCastExpr 0x1653b2f4410 <col:58> 'limb':'unsigned long long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x1653b2ed110 <col:58> 'long long' 56315968460949481
|   | | |-InitListExpr 0x1653b2f4438 <line:180:3, col:74> 'const felem':'limb const[4]'
|   | | | |-ImplicitCastExpr 0x1653b2f4498 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b2ed198 <col:4> 'long long' 11418713148600607
|   | | | |-ImplicitCastExpr 0x1653b2f44b0 <col:22> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b2ed1c0 <col:22> 'long long' 2383810739544042
|   | | | |-ImplicitCastExpr 0x1653b2f44c8 <col:40> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1653b2ed1e8 <col:40> 'long long' 69034399404693108
|   | | | `-ImplicitCastExpr 0x1653b2f44e0 <col:58> 'limb':'unsigned long long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x1653b2ed210 <col:58> 'long long' 8489243135795900
|   | | `-InitListExpr 0x1653b2f4508 <line:181:3, col:14> 'const felem':'limb const[4]'
|   | |   |-ImplicitCastExpr 0x1653b2f4568 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x1653b2ed298 <col:4> 'int' 1
|   | |   |-ImplicitCastExpr 0x1653b2f4580 <col:7> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x1653b2ed2c0 <col:7> 'int' 0
|   | |   |-ImplicitCastExpr 0x1653b2f4598 <col:10> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x1653b2ed2e8 <col:10> 'int' 0
|   | |   `-ImplicitCastExpr 0x1653b2f45b0 <col:13> 'limb':'unsigned long long' <IntegralCast>
|   | |     `-IntegerLiteral 0x1653b2ed310 <col:13> 'int' 0
|   | `-InitListExpr 0x1653b2f45f8 <line:182:2, line:184:15> 'const felem [3]'
|   |   |-InitListExpr 0x1653b2f4660 <line:182:3, col:74> 'const felem':'limb const[4]'
|   |   | |-ImplicitCastExpr 0x1653b2f46c0 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   |   | | `-IntegerLiteral 0x1653b2ed3f0 <col:4> 'long long' 44809056590259435
|   |   | |-ImplicitCastExpr 0x1653b2f46d8 <col:22> 'limb':'unsigned long long' <IntegralCast>
|   |   | | `-IntegerLiteral 0x1653b2ed418 <col:22> 'long long' 1914876046564940
|   |   | |-ImplicitCastExpr 0x1653b2f46f0 <col:40> 'limb':'unsigned long long' <IntegralCast>
|   |   | | `-IntegerLiteral 0x1653b2ed440 <col:40> 'long long' 71801422434380147
|   |   | `-ImplicitCastExpr 0x1653b2f4708 <col:58> 'limb':'unsigned long long' <IntegralCast>
|   |   |   `-IntegerLiteral 0x1653b2ed468 <col:58> 'long long' 68027829451324504
|   |   |-InitListExpr 0x1653b2f4730 <line:183:3, col:74> 'const felem':'limb const[4]'
|   |   | |-ImplicitCastExpr 0x1653b2f4790 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   |   | | `-IntegerLiteral 0x1653b2ed4f0 <col:4> 'long long' 62240249598010623
|   |   | |-ImplicitCastExpr 0x1653b2f47a8 <col:22> 'limb':'unsigned long long' <IntegralCast>
|   |   | | `-IntegerLiteral 0x1653b2ed518 <col:22> 'long long' 62677691397309147
|   |   | |-ImplicitCastExpr 0x1653b2f47c0 <col:40> 'limb':'unsigned long long' <IntegralCast>
|   |   | | `-IntegerLiteral 0x1653b2ed540 <col:40> 'long long' 32834184294422163
|   |   | `-ImplicitCastExpr 0x1653b2f47d8 <col:58> 'limb':'unsigned long long' <IntegralCast>
|   |   |   `-IntegerLiteral 0x1653b2ed568 <col:58> 'long long' 67174968371586392
|   |   `-InitListExpr 0x1653b2f4800 <line:184:3, col:14> 'const felem':'limb const[4]'
|   |     |-ImplicitCastExpr 0x1653b2f4860 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   |     | `-IntegerLiteral 0x1653b2ed5f0 <col:4> 'int' 1
|   |     |-ImplicitCastExpr 0x1653b2f4878 <col:7> 'limb':'unsigned long long' <IntegralCast>
|   |     | `-IntegerLiteral 0x1653b2ed618 <col:7> 'int' 0
|   |     |-ImplicitCastExpr 0x1653b2f4890 <col:10> 'limb':'unsigned long long' <IntegralCast>
|   |     | `-IntegerLiteral 0x1653b2ed640 <col:10> 'int' 0
|   |     `-ImplicitCastExpr 0x1653b2f48a8 <col:13> 'limb':'unsigned long long' <IntegralCast>
|   |       `-IntegerLiteral 0x1653b2ed668 <col:13> 'int' 0
|   `-InitListExpr 0x1653b2f4bc0 <line:185:1, line:232:16> 'const felem [16][3]'
|     |-InitListExpr 0x1653b2f4cb0 <line:185:2, line:187:15> 'const felem [3]'
|     | |-InitListExpr 0x1653b2f4d18 <line:185:3, col:14> 'const felem':'limb const[4]'
|     | | |-ImplicitCastExpr 0x1653b2f4d78 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2ed808 <col:4> 'int' 0
|     | | |-ImplicitCastExpr 0x1653b2f4d90 <col:7> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2ed830 <col:7> 'int' 0
|     | | |-ImplicitCastExpr 0x1653b2f4da8 <col:10> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2ed858 <col:10> 'int' 0
|     | | `-ImplicitCastExpr 0x1653b2f4dd0 <col:13> 'limb':'unsigned long long' <IntegralCast>
|     | |   `-IntegerLiteral 0x1653b2ed880 <col:13> 'int' 0
|     | |-InitListExpr 0x1653b2f4df8 <line:186:3, col:14> 'const felem':'limb const[4]'
|     | | |-ImplicitCastExpr 0x1653b2f4e58 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2ed908 <col:4> 'int' 0
|     | | |-ImplicitCastExpr 0x1653b2f4e70 <col:7> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2ed930 <col:7> 'int' 0
|     | | |-ImplicitCastExpr 0x1653b2f4e88 <col:10> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2ed958 <col:10> 'int' 0
|     | | `-ImplicitCastExpr 0x1653b2f4ea0 <col:13> 'limb':'unsigned long long' <IntegralCast>
|     | |   `-IntegerLiteral 0x1653b2ed980 <col:13> 'int' 0
|     | `-InitListExpr 0x1653b2f4ec8 <line:187:3, col:14> 'const felem':'limb const[4]'
|     |   |-ImplicitCastExpr 0x1653b2f4f28 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x1653b2eda08 <col:4> 'int' 0
|     |   |-ImplicitCastExpr 0x1653b2f4f40 <col:7> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x1653b2eda30 <col:7> 'int' 0
|     |   |-ImplicitCastExpr 0x1653b2f4f58 <col:10> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x1653b2eda58 <col:10> 'int' 0
|     |   `-ImplicitCastExpr 0x1653b2f4f70 <col:13> 'limb':'unsigned long long' <IntegralCast>
|     |     `-IntegerLiteral 0x1653b2eda80 <col:13> 'int' 0
|     |-InitListExpr 0x1653b2f4fb8 <line:188:2, line:190:15> 'const felem [3]'
|     | |-InitListExpr 0x1653b2f5020 <line:188:3, col:74> 'const felem':'limb const[4]'
|     | | |-ImplicitCastExpr 0x1653b2f5080 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2edb60 <col:4> 'long long' 42332462233023828
|     | | |-ImplicitCastExpr 0x1653b2f5098 <col:22> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2edb88 <col:22> 'long long' 42243062983880493
|     | | |-ImplicitCastExpr 0x1653b2f50b0 <col:40> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2edbb0 <col:40> 'long long' 58027427525010455
|     | | `-ImplicitCastExpr 0x1653b2f50c8 <col:58> 'limb':'unsigned long long' <IntegralCast>
|     | |   `-IntegerLiteral 0x1653b2edbd8 <col:58> 'long long' 59490963410320433
|     | |-InitListExpr 0x1653b2f50f0 <line:189:3, col:74> 'const felem':'limb const[4]'
|     | | |-ImplicitCastExpr 0x1653b2f5150 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2edc60 <col:4> 'long long' 37661422047375710
|     | | |-ImplicitCastExpr 0x1653b2f5168 <col:22> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2edc88 <col:22> 'long long' 9350132935584427
|     | | |-ImplicitCastExpr 0x1653b2f5180 <col:40> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2edcb0 <col:40> 'long long' 45389832818299846
|     | | `-ImplicitCastExpr 0x1653b2f5198 <col:58> 'limb':'unsigned long long' <IntegralCast>
|     | |   `-IntegerLiteral 0x1653b2edcd8 <col:58> 'long long' 15017233711959853
|     | `-InitListExpr 0x1653b2f51c0 <line:190:3, col:14> 'const felem':'limb const[4]'
|     |   |-ImplicitCastExpr 0x1653b2f5220 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x1653b2edd60 <col:4> 'int' 1
|     |   |-ImplicitCastExpr 0x1653b2f5238 <col:7> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x1653b2edd88 <col:7> 'int' 0
|     |   |-ImplicitCastExpr 0x1653b2f5250 <col:10> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x1653b2eddb0 <col:10> 'int' 0
|     |   `-ImplicitCastExpr 0x1653b2f5268 <col:13> 'limb':'unsigned long long' <IntegralCast>
|     |     `-IntegerLiteral 0x1653b2eddd8 <col:13> 'int' 0
|     |-InitListExpr 0x1653b2f52b0 <line:191:2, line:193:15> 'const felem [3]'
|     | |-InitListExpr 0x1653b2f5318 <line:191:3, col:74> 'const felem':'limb const[4]'
|     | | |-ImplicitCastExpr 0x1653b2f5378 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2edeb8 <col:4> 'long long' 7398951664410213
|     | | |-ImplicitCastExpr 0x1653b2f5390 <col:22> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2edee0 <col:22> 'long long' 60475672073594172
|     | | |-ImplicitCastExpr 0x1653b2f53a8 <col:40> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2edf08 <col:40> 'long long' 65189123520720006
|     | | `-ImplicitCastExpr 0x1653b2f53c0 <col:58> 'limb':'unsigned long long' <IntegralCast>
|     | |   `-IntegerLiteral 0x1653b2edf30 <col:58> 'long long' 28643743500374243
|     | |-InitListExpr 0x1653b2f53e8 <line:192:3, col:74> 'const felem':'limb const[4]'
|     | | |-ImplicitCastExpr 0x1653b2f5448 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2edfb8 <col:4> 'long long' 70475444581864262
|     | | |-ImplicitCastExpr 0x1653b2f5460 <col:22> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2edfe0 <col:22> 'long long' 68053533660433071
|     | | |-ImplicitCastExpr 0x1653b2f5478 <col:40> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2ee008 <col:40> 'long long' 55479242755132331
|     | | `-ImplicitCastExpr 0x1653b2f5490 <col:58> 'limb':'unsigned long long' <IntegralCast>
|     | |   `-IntegerLiteral 0x1653b2ee030 <col:58> 'long long' 731566529102474
|     | `-InitListExpr 0x1653b2f54b8 <line:193:3, col:14> 'const felem':'limb const[4]'
|     |   |-ImplicitCastExpr 0x1653b2f5518 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x1653b2ee0b8 <col:4> 'int' 1
|     |   |-ImplicitCastExpr 0x1653b2f5530 <col:7> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x1653b2ee0e0 <col:7> 'int' 0
|     |   |-ImplicitCastExpr 0x1653b2f5548 <col:10> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x1653b2ee108 <col:10> 'int' 0
|     |   `-ImplicitCastExpr 0x1653b2f5560 <col:13> 'limb':'unsigned long long' <IntegralCast>
|     |     `-IntegerLiteral 0x1653b2ee130 <col:13> 'int' 0
|     |-InitListExpr 0x1653b2f55a8 <line:194:2, line:196:15> 'const felem [3]'
|     | |-InitListExpr 0x1653b2f5610 <line:194:3, col:74> 'const felem':'limb const[4]'
|     | | |-ImplicitCastExpr 0x1653b2f5670 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2ee210 <col:4> 'long long' 33904912311162351
|     | | |-ImplicitCastExpr 0x1653b2f5688 <col:22> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2ee238 <col:22> 'long long' 37915670572403972
|     | | |-ImplicitCastExpr 0x1653b2f56a0 <col:40> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2ee260 <col:40> 'long long' 61931713228770714
|     | | `-ImplicitCastExpr 0x1653b2f56b8 <col:58> 'limb':'unsigned long long' <IntegralCast>
|     | |   `-IntegerLiteral 0x1653b2ee288 <col:58> 'long long' 59556603249994803
|     | |-InitListExpr 0x1653b2f56e0 <line:195:3, col:74> 'const felem':'limb const[4]'
|     | | |-ImplicitCastExpr 0x1653b2f5740 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2ee310 <col:4> 'long long' 12229322042053423
|     | | |-ImplicitCastExpr 0x1653b2f5758 <col:22> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2ee338 <col:22> 'long long' 53667417733410291
|     | | |-ImplicitCastExpr 0x1653b2f5770 <col:40> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2ee360 <col:40> 'long long' 62062863872954880
|     | | `-ImplicitCastExpr 0x1653b2f5788 <col:58> 'limb':'unsigned long long' <IntegralCast>
|     | |   `-IntegerLiteral 0x1653b2ee388 <col:58> 'long long' 59213258449723648
|     | `-InitListExpr 0x1653b2f57b0 <line:196:3, col:14> 'const felem':'limb const[4]'
|     |   |-ImplicitCastExpr 0x1653b2f5810 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x1653b2ee410 <col:4> 'int' 1
|     |   |-ImplicitCastExpr 0x1653b2f5828 <col:7> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x1653b2ee438 <col:7> 'int' 0
|     |   |-ImplicitCastExpr 0x1653b2f5840 <col:10> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x1653b2ee460 <col:10> 'int' 0
|     |   `-ImplicitCastExpr 0x1653b2f5858 <col:13> 'limb':'unsigned long long' <IntegralCast>
|     |     `-IntegerLiteral 0x1653b2ee488 <col:13> 'int' 0
|     |-InitListExpr 0x1653b2f58a0 <line:197:2, line:199:15> 'const felem [3]'
|     | |-InitListExpr 0x1653b2f5908 <line:197:3, col:74> 'const felem':'limb const[4]'
|     | | |-ImplicitCastExpr 0x1653b2f5968 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2ee568 <col:4> 'long long' 41174889044835069
|     | | |-ImplicitCastExpr 0x1653b2f5980 <col:22> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2ee590 <col:22> 'long long' 48461860850250128
|     | | |-ImplicitCastExpr 0x1653b2f5998 <col:40> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2ee5b8 <col:40> 'long long' 40209832863945724
|     | | `-ImplicitCastExpr 0x1653b2f59b0 <col:58> 'limb':'unsigned long long' <IntegralCast>
|     | |   `-IntegerLiteral 0x1653b2ee5e0 <col:58> 'long long' 36688508243763925
|     | |-InitListExpr 0x1653b2f59d8 <line:198:3, col:74> 'const felem':'limb const[4]'
|     | | |-ImplicitCastExpr 0x1653b2f5a38 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2ee668 <col:4> 'long long' 39821100915975713
|     | | |-ImplicitCastExpr 0x1653b2f5a50 <col:22> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2ee690 <col:22> 'long long' 10027667342093709
|     | | |-ImplicitCastExpr 0x1653b2f5a68 <col:40> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2ee6b8 <col:40> 'long long' 49411097451828917
|     | | `-ImplicitCastExpr 0x1653b2f5a80 <col:58> 'limb':'unsigned long long' <IntegralCast>
|     | |   `-IntegerLiteral 0x1653b2ee6e0 <col:58> 'long long' 61039442818226922
|     | `-InitListExpr 0x1653b2f5aa8 <line:199:3, col:14> 'const felem':'limb const[4]'
|     |   |-ImplicitCastExpr 0x1653b2f5b08 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x1653b2ee768 <col:4> 'int' 1
|     |   |-ImplicitCastExpr 0x1653b2f5b20 <col:7> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x1653b2ee790 <col:7> 'int' 0
|     |   |-ImplicitCastExpr 0x1653b2f5b38 <col:10> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x1653b2ee7b8 <col:10> 'int' 0
|     |   `-ImplicitCastExpr 0x1653b2f5b50 <col:13> 'limb':'unsigned long long' <IntegralCast>
|     |     `-IntegerLiteral 0x1653b2ee7e0 <col:13> 'int' 0
|     |-InitListExpr 0x1653b2f5b98 <line:200:2, line:202:15> 'const felem [3]'
|     | |-InitListExpr 0x1653b2f5c00 <line:200:3, col:74> 'const felem':'limb const[4]'
|     | | |-ImplicitCastExpr 0x1653b2f5c60 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2ee8c0 <col:4> 'long long' 33400705216086256
|     | | |-ImplicitCastExpr 0x1653b2f5c78 <col:22> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2ee8e8 <col:22> 'long long' 65773690130261649
|     | | |-ImplicitCastExpr 0x1653b2f5c90 <col:40> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2ee910 <col:40> 'long long' 29591350155084583
|     | | `-ImplicitCastExpr 0x1653b2f5ca8 <col:58> 'limb':'unsigned long long' <IntegralCast>
|     | |   `-IntegerLiteral 0x1653b2ee938 <col:58> 'long long' 27904408962553022
|     | |-InitListExpr 0x1653b2f5cd0 <line:201:3, col:74> 'const felem':'limb const[4]'
|     | | |-ImplicitCastExpr 0x1653b2f5d30 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2ee9c0 <col:4> 'long long' 19878918007644842
|     | | |-ImplicitCastExpr 0x1653b2f5d48 <col:22> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2ee9e8 <col:22> 'long long' 39760458290838277
|     | | |-ImplicitCastExpr 0x1653b2f5d60 <col:40> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2eea10 <col:40> 'long long' 8882603977681800
|     | | `-ImplicitCastExpr 0x1653b2f5d78 <col:58> 'limb':'unsigned long long' <IntegralCast>
|     | |   `-IntegerLiteral 0x1653b2eea38 <col:58> 'long long' 64454190132739665
|     | `-InitListExpr 0x1653b2f5da0 <line:202:3, col:14> 'const felem':'limb const[4]'
|     |   |-ImplicitCastExpr 0x1653b2f5e00 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x1653b2eeac0 <col:4> 'int' 1
|     |   |-ImplicitCastExpr 0x1653b2f5e18 <col:7> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x1653b2eeae8 <col:7> 'int' 0
|     |   |-ImplicitCastExpr 0x1653b2f5e30 <col:10> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x1653b2eeb10 <col:10> 'int' 0
|     |   `-ImplicitCastExpr 0x1653b2f5e48 <col:13> 'limb':'unsigned long long' <IntegralCast>
|     |     `-IntegerLiteral 0x1653b2eeb38 <col:13> 'int' 0
|     |-InitListExpr 0x1653b2f5e90 <line:203:2, line:205:15> 'const felem [3]'
|     | |-InitListExpr 0x1653b2f5ef8 <line:203:3, col:74> 'const felem':'limb const[4]'
|     | | |-ImplicitCastExpr 0x1653b2f5f58 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2eec18 <col:4> 'long long' 36697159835102230
|     | | |-ImplicitCastExpr 0x1653b2f5f70 <col:22> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2eec40 <col:22> 'long long' 575617900413498
|     | | |-ImplicitCastExpr 0x1653b2f5f88 <col:40> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2eec68 <col:40> 'long long' 29339469010895205
|     | | `-ImplicitCastExpr 0x1653b2f5fa0 <col:58> 'limb':'unsigned long long' <IntegralCast>
|     | |   `-IntegerLiteral 0x1653b2eec90 <col:58> 'long long' 5910771084751601
|     | |-InitListExpr 0x1653b2f5fc8 <line:204:3, col:74> 'const felem':'limb const[4]'
|     | | |-ImplicitCastExpr 0x1653b2f6028 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2eed18 <col:4> 'long long' 14138852356790521
|     | | |-ImplicitCastExpr 0x1653b2f6040 <col:22> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2eed40 <col:22> 'long long' 20623455015356372
|     | | |-ImplicitCastExpr 0x1653b2f6058 <col:40> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2eed68 <col:40> 'long long' 54424934377855695
|     | | `-ImplicitCastExpr 0x1653b2f6070 <col:58> 'limb':'unsigned long long' <IntegralCast>
|     | |   `-IntegerLiteral 0x1653b2eeda0 <col:58> 'long long' 3323637626710203
|     | `-InitListExpr 0x1653b2f6098 <line:205:3, col:14> 'const felem':'limb const[4]'
|     |   |-ImplicitCastExpr 0x1653b2f60f8 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x1653b2eee28 <col:4> 'int' 1
|     |   |-ImplicitCastExpr 0x1653b2f6110 <col:7> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x1653b2eee50 <col:7> 'int' 0
|     |   |-ImplicitCastExpr 0x1653b2f6128 <col:10> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x1653b2eee78 <col:10> 'int' 0
|     |   `-ImplicitCastExpr 0x1653b2f6140 <col:13> 'limb':'unsigned long long' <IntegralCast>
|     |     `-IntegerLiteral 0x1653b2eeea0 <col:13> 'int' 0
|     |-InitListExpr 0x1653b2f6188 <line:206:2, line:208:15> 'const felem [3]'
|     | |-InitListExpr 0x1653b2f61f0 <line:206:3, col:74> 'const felem':'limb const[4]'
|     | | |-ImplicitCastExpr 0x1653b2f6250 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2eef80 <col:4> 'long long' 41284609216738756
|     | | |-ImplicitCastExpr 0x1653b2f6268 <col:22> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2eefa8 <col:22> 'long long' 23348383899184552
|     | | |-ImplicitCastExpr 0x1653b2f6280 <col:40> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2eefd0 <col:40> 'long long' 57208799144709267
|     | | `-ImplicitCastExpr 0x1653b2f6298 <col:58> 'limb':'unsigned long long' <IntegralCast>
|     | |   `-IntegerLiteral 0x1653b2eeff8 <col:58> 'long long' 18021335613985331
|     | |-InitListExpr 0x1653b2f62c0 <line:207:3, col:74> 'const felem':'limb const[4]'
|     | | |-ImplicitCastExpr 0x1653b2f6320 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2ef080 <col:4> 'long long' 71519866587154834
|     | | |-ImplicitCastExpr 0x1653b2f6338 <col:22> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2ef0a8 <col:22> 'long long' 331650310714647
|     | | |-ImplicitCastExpr 0x1653b2f6350 <col:40> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2ef0d0 <col:40> 'long long' 7414810685154214
|     | | `-ImplicitCastExpr 0x1653b2f6368 <col:58> 'limb':'unsigned long long' <IntegralCast>
|     | |   `-IntegerLiteral 0x1653b2ef0f8 <col:58> 'long long' 1962338185252335
|     | `-InitListExpr 0x1653b2f6390 <line:208:3, col:14> 'const felem':'limb const[4]'
|     |   |-ImplicitCastExpr 0x1653b2f63f0 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x1653b2ef180 <col:4> 'int' 1
|     |   |-ImplicitCastExpr 0x1653b2f6408 <col:7> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x1653b2ef1a8 <col:7> 'int' 0
|     |   |-ImplicitCastExpr 0x1653b2f6420 <col:10> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x1653b2ef1d0 <col:10> 'int' 0
|     |   `-ImplicitCastExpr 0x1653b2f6438 <col:13> 'limb':'unsigned long long' <IntegralCast>
|     |     `-IntegerLiteral 0x1653b2ef1f8 <col:13> 'int' 0
|     |-InitListExpr 0x1653b2f6480 <line:209:2, line:211:15> 'const felem [3]'
|     | |-InitListExpr 0x1653b2f64e8 <line:209:3, col:74> 'const felem':'limb const[4]'
|     | | |-ImplicitCastExpr 0x1653b2f6548 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2ef2d8 <col:4> 'long long' 20952864667040953
|     | | |-ImplicitCastExpr 0x1653b2f6560 <col:22> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2ef300 <col:22> 'long long' 53105343129885304
|     | | |-ImplicitCastExpr 0x1653b2f6578 <col:40> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2ef328 <col:40> 'long long' 17663783448724262
|     | | `-ImplicitCastExpr 0x1653b2f6590 <col:58> 'limb':'unsigned long long' <IntegralCast>
|     | |   `-IntegerLiteral 0x1653b2ef350 <col:58> 'long long' 61941988514011822
|     | |-InitListExpr 0x1653b2f65b8 <line:210:3, col:74> 'const felem':'limb const[4]'
|     | | |-ImplicitCastExpr 0x1653b2f6618 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2ef3d8 <col:4> 'long long' 58374853219681168
|     | | |-ImplicitCastExpr 0x1653b2f6630 <col:22> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2ef400 <col:22> 'long long' 25954017644378996
|     | | |-ImplicitCastExpr 0x1653b2f6648 <col:40> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2ef428 <col:40> 'long long' 43623027367233463
|     | | `-ImplicitCastExpr 0x1653b2f6660 <col:58> 'limb':'unsigned long long' <IntegralCast>
|     | |   `-IntegerLiteral 0x1653b2ef450 <col:58> 'long long' 42061554624494661
|     | `-InitListExpr 0x1653b2f6688 <line:211:3, col:14> 'const felem':'limb const[4]'
|     |   |-ImplicitCastExpr 0x1653b2f66e8 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x1653b2ef4d8 <col:4> 'int' 1
|     |   |-ImplicitCastExpr 0x1653b2f6700 <col:7> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x1653b2ef500 <col:7> 'int' 0
|     |   |-ImplicitCastExpr 0x1653b2f6718 <col:10> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x1653b2ef528 <col:10> 'int' 0
|     |   `-ImplicitCastExpr 0x1653b2f6730 <col:13> 'limb':'unsigned long long' <IntegralCast>
|     |     `-IntegerLiteral 0x1653b2ef550 <col:13> 'int' 0
|     |-InitListExpr 0x1653b2f6778 <line:212:2, line:214:15> 'const felem [3]'
|     | |-InitListExpr 0x1653b2f67e0 <line:212:3, col:74> 'const felem':'limb const[4]'
|     | | |-ImplicitCastExpr 0x1653b2f6840 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2ef630 <col:4> 'long long' 18866340853038698
|     | | |-ImplicitCastExpr 0x1653b2f6858 <col:22> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2ef658 <col:22> 'long long' 41174294738871394
|     | | |-ImplicitCastExpr 0x1653b2f6870 <col:40> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2ef680 <col:40> 'long long' 69059630486859566
|     | | `-ImplicitCastExpr 0x1653b2f6888 <col:58> 'limb':'unsigned long long' <IntegralCast>
|     | |   `-IntegerLiteral 0x1653b2ef6a8 <col:58> 'long long' 53229817573778734
|     | |-InitListExpr 0x1653b2f68b0 <line:213:3, col:74> 'const felem':'limb const[4]'
|     | | |-ImplicitCastExpr 0x1653b2f6910 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2ef730 <col:4> 'long long' 1229341092743632
|     | | |-ImplicitCastExpr 0x1653b2f6928 <col:22> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2ef758 <col:22> 'long long' 11808623625303923
|     | | |-ImplicitCastExpr 0x1653b2f6940 <col:40> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2ef780 <col:40> 'long long' 32750466386186109
|     | | `-ImplicitCastExpr 0x1653b2f6958 <col:58> 'limb':'unsigned long long' <IntegralCast>
|     | |   `-IntegerLiteral 0x1653b2ef7a8 <col:58> 'long long' 7063500670951355
|     | `-InitListExpr 0x1653b2f6980 <line:214:3, col:14> 'const felem':'limb const[4]'
|     |   |-ImplicitCastExpr 0x1653b2f69e0 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x1653b2ef830 <col:4> 'int' 1
|     |   |-ImplicitCastExpr 0x1653b2f69f8 <col:7> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x1653b2ef858 <col:7> 'int' 0
|     |   |-ImplicitCastExpr 0x1653b2f6a10 <col:10> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x1653b2ef880 <col:10> 'int' 0
|     |   `-ImplicitCastExpr 0x1653b2f6a28 <col:13> 'limb':'unsigned long long' <IntegralCast>
|     |     `-IntegerLiteral 0x1653b2ef8a8 <col:13> 'int' 0
|     |-InitListExpr 0x1653b2f6a70 <line:215:2, line:217:15> 'const felem [3]'
|     | |-InitListExpr 0x1653b2f6ad8 <line:215:3, col:74> 'const felem':'limb const[4]'
|     | | |-ImplicitCastExpr 0x1653b2f6b38 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2ef988 <col:4> 'long long' 25736141242682233
|     | | |-ImplicitCastExpr 0x1653b2f6b50 <col:22> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2ef9b0 <col:22> 'long long' 20639221590945830
|     | | |-ImplicitCastExpr 0x1653b2f6b68 <col:40> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2ef9d8 <col:40> 'long long' 63648179904700148
|     | | `-ImplicitCastExpr 0x1653b2f6b80 <col:58> 'limb':'unsigned long long' <IntegralCast>
|     | |   `-IntegerLiteral 0x1653b2efa00 <col:58> 'long long' 55382561624164830
|     | |-InitListExpr 0x1653b2f6ba8 <line:216:3, col:74> 'const felem':'limb const[4]'
|     | | |-ImplicitCastExpr 0x1653b2f6c08 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2efa88 <col:4> 'long long' 13648133609350424
|     | | |-ImplicitCastExpr 0x1653b2f6c20 <col:22> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2efab0 <col:22> 'long long' 13987049300520376
|     | | |-ImplicitCastExpr 0x1653b2f6c38 <col:40> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2efad8 <col:40> 'long long' 20241014388399759
|     | | `-ImplicitCastExpr 0x1653b2f6c50 <col:58> 'limb':'unsigned long long' <IntegralCast>
|     | |   `-IntegerLiteral 0x1653b2efb00 <col:58> 'long long' 56125148414327283
|     | `-InitListExpr 0x1653b2f6c78 <line:217:3, col:14> 'const felem':'limb const[4]'
|     |   |-ImplicitCastExpr 0x1653b2f6cd8 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x1653b2efb88 <col:4> 'int' 1
|     |   |-ImplicitCastExpr 0x1653b2f6cf0 <col:7> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x1653b2efbb0 <col:7> 'int' 0
|     |   |-ImplicitCastExpr 0x1653b2f6d08 <col:10> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x1653b2efbd8 <col:10> 'int' 0
|     |   `-ImplicitCastExpr 0x1653b2f6d20 <col:13> 'limb':'unsigned long long' <IntegralCast>
|     |     `-IntegerLiteral 0x1653b2efc00 <col:13> 'int' 0
|     |-InitListExpr 0x1653b2f6d68 <line:218:2, line:220:15> 'const felem [3]'
|     | |-InitListExpr 0x1653b2f6de0 <line:218:3, col:74> 'const felem':'limb const[4]'
|     | | |-ImplicitCastExpr 0x1653b2f6e40 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2efce0 <col:4> 'long long' 16887184962971910
|     | | |-ImplicitCastExpr 0x1653b2f6e58 <col:22> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2efd08 <col:22> 'long long' 20148389049946259
|     | | |-ImplicitCastExpr 0x1653b2f6e70 <col:40> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2efd30 <col:40> 'long long' 62590757308324646
|     | | `-ImplicitCastExpr 0x1653b2f6e88 <col:58> 'limb':'unsigned long long' <IntegralCast>
|     | |   `-IntegerLiteral 0x1653b2efd58 <col:58> 'long long' 11679895284435717
|     | |-InitListExpr 0x1653b2f6eb0 <line:219:3, col:74> 'const felem':'limb const[4]'
|     | | |-ImplicitCastExpr 0x1653b2f6f10 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2efde0 <col:4> 'long long' 31555794398004138
|     | | |-ImplicitCastExpr 0x1653b2f6f28 <col:22> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2efe08 <col:22> 'long long' 31652418437296597
|     | | |-ImplicitCastExpr 0x1653b2f6f40 <col:40> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2efe30 <col:40> 'long long' 5565067883491094
|     | | `-ImplicitCastExpr 0x1653b2f6f58 <col:58> 'limb':'unsigned long long' <IntegralCast>
|     | |   `-IntegerLiteral 0x1653b2efe58 <col:58> 'long long' 42948060693069400
|     | `-InitListExpr 0x1653b2f6f80 <line:220:3, col:14> 'const felem':'limb const[4]'
|     |   |-ImplicitCastExpr 0x1653b2f6fe0 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x1653b2efee0 <col:4> 'int' 1
|     |   |-ImplicitCastExpr 0x1653b2f6ff8 <col:7> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x1653b2eff08 <col:7> 'int' 0
|     |   |-ImplicitCastExpr 0x1653b2f7010 <col:10> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x1653b2eff30 <col:10> 'int' 0
|     |   `-ImplicitCastExpr 0x1653b2f7028 <col:13> 'limb':'unsigned long long' <IntegralCast>
|     |     `-IntegerLiteral 0x1653b2eff58 <col:13> 'int' 0
|     |-InitListExpr 0x1653b2f7070 <line:221:2, line:223:15> 'const felem [3]'
|     | |-InitListExpr 0x1653b2f70d8 <line:221:3, col:74> 'const felem':'limb const[4]'
|     | | |-ImplicitCastExpr 0x1653b2f7138 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2f0038 <col:4> 'long long' 4484933557700496
|     | | |-ImplicitCastExpr 0x1653b2f7150 <col:22> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2f0060 <col:22> 'long long' 12797448631115054
|     | | |-ImplicitCastExpr 0x1653b2f7168 <col:40> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2f0088 <col:40> 'long long' 41696350946270356
|     | | `-ImplicitCastExpr 0x1653b2f7180 <col:58> 'limb':'unsigned long long' <IntegralCast>
|     | |   `-IntegerLiteral 0x1653b2f00b0 <col:58> 'long long' 52844113124987323
|     | |-InitListExpr 0x1653b2f71a8 <line:222:3, col:74> 'const felem':'limb const[4]'
|     | | |-ImplicitCastExpr 0x1653b2f7208 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2f0138 <col:4> 'long long' 50320894428189032
|     | | |-ImplicitCastExpr 0x1653b2f7220 <col:22> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2f0160 <col:22> 'long long' 4608360979303795
|     | | |-ImplicitCastExpr 0x1653b2f7238 <col:40> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2f0188 <col:40> 'long long' 45000129293402240
|     | | `-ImplicitCastExpr 0x1653b2f7250 <col:58> 'limb':'unsigned long long' <IntegralCast>
|     | |   `-IntegerLiteral 0x1653b2f01b0 <col:58> 'long long' 34760599269173168
|     | `-InitListExpr 0x1653b2f7278 <line:223:3, col:14> 'const felem':'limb const[4]'
|     |   |-ImplicitCastExpr 0x1653b2f72d8 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x1653b2f0238 <col:4> 'int' 1
|     |   |-ImplicitCastExpr 0x1653b2f72f0 <col:7> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x1653b2f0260 <col:7> 'int' 0
|     |   |-ImplicitCastExpr 0x1653b2f7308 <col:10> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x1653b2f0288 <col:10> 'int' 0
|     |   `-ImplicitCastExpr 0x1653b2f7320 <col:13> 'limb':'unsigned long long' <IntegralCast>
|     |     `-IntegerLiteral 0x1653b2f02b0 <col:13> 'int' 0
|     |-InitListExpr 0x1653b2f7368 <line:224:2, line:226:15> 'const felem [3]'
|     | |-InitListExpr 0x1653b2f73d0 <line:224:3, col:74> 'const felem':'limb const[4]'
|     | | |-ImplicitCastExpr 0x1653b2f7430 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2f0390 <col:4> 'long long' 48724297006178995
|     | | |-ImplicitCastExpr 0x1653b2f7448 <col:22> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2f03b8 <col:22> 'long long' 67574095596594845
|     | | |-ImplicitCastExpr 0x1653b2f7460 <col:40> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2f03e0 <col:40> 'long long' 30183651778200389
|     | | `-ImplicitCastExpr 0x1653b2f7478 <col:58> 'limb':'unsigned long long' <IntegralCast>
|     | |   `-IntegerLiteral 0x1653b2f0408 <col:58> 'long long' 18251160955299033
|     | |-InitListExpr 0x1653b2f74a0 <line:225:3, col:74> 'const felem':'limb const[4]'
|     | | |-ImplicitCastExpr 0x1653b2f7500 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2f0490 <col:4> 'long long' 38854541824519485
|     | | |-ImplicitCastExpr 0x1653b2f7518 <col:22> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2f04b8 <col:22> 'long long' 43405894546881848
|     | | |-ImplicitCastExpr 0x1653b2f7530 <col:40> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2f04e0 <col:40> 'long long' 25178753450613532
|     | | `-ImplicitCastExpr 0x1653b2f7548 <col:58> 'limb':'unsigned long long' <IntegralCast>
|     | |   `-IntegerLiteral 0x1653b2f0508 <col:58> 'long long' 62159745794163690
|     | `-InitListExpr 0x1653b2f7570 <line:226:3, col:14> 'const felem':'limb const[4]'
|     |   |-ImplicitCastExpr 0x1653b2f75d0 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x1653b2f0590 <col:4> 'int' 1
|     |   |-ImplicitCastExpr 0x1653b2f75e8 <col:7> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x1653b2f05b8 <col:7> 'int' 0
|     |   |-ImplicitCastExpr 0x1653b2f7600 <col:10> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x1653b2f05e0 <col:10> 'int' 0
|     |   `-ImplicitCastExpr 0x1653b2f7618 <col:13> 'limb':'unsigned long long' <IntegralCast>
|     |     `-IntegerLiteral 0x1653b2f0608 <col:13> 'int' 0
|     |-InitListExpr 0x1653b2f7660 <line:227:2, line:229:15> 'const felem [3]'
|     | |-InitListExpr 0x1653b2f76c8 <line:227:3, col:74> 'const felem':'limb const[4]'
|     | | |-ImplicitCastExpr 0x1653b2f7728 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2f06e8 <col:4> 'long long' 48681561500723115
|     | | |-ImplicitCastExpr 0x1653b2f7740 <col:22> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2f0710 <col:22> 'long long' 21533324478502711
|     | | |-ImplicitCastExpr 0x1653b2f7758 <col:40> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2f0738 <col:40> 'long long' 55818039270904196
|     | | `-ImplicitCastExpr 0x1653b2f7770 <col:58> 'limb':'unsigned long long' <IntegralCast>
|     | |   `-IntegerLiteral 0x1653b2f0760 <col:58> 'long long' 3040451452578746
|     | |-InitListExpr 0x1653b2f7798 <line:228:3, col:74> 'const felem':'limb const[4]'
|     | | |-ImplicitCastExpr 0x1653b2f77f8 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2f07e8 <col:4> 'long long' 30400509585702766
|     | | |-ImplicitCastExpr 0x1653b2f7810 <col:22> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2f0810 <col:22> 'long long' 71720626911765290
|     | | |-ImplicitCastExpr 0x1653b2f7828 <col:40> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x1653b2f0838 <col:40> 'long long' 7308408247352024
|     | | `-ImplicitCastExpr 0x1653b2f7840 <col:58> 'limb':'unsigned long long' <IntegralCast>
|     | |   `-IntegerLiteral 0x1653b2f0860 <col:58> 'long long' 1419608241050629
|     | `-InitListExpr 0x1653b2f7868 <line:229:3, col:14> 'const felem':'limb const[4]'
|     |   |-ImplicitCastExpr 0x1653b2f78c8 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x1653b2f08e8 <col:4> 'int' 1
|     |   |-ImplicitCastExpr 0x1653b2f78e0 <col:7> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x1653b2f0910 <col:7> 'int' 0
|     |   |-ImplicitCastExpr 0x1653b2f78f8 <col:10> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x1653b2f0938 <col:10> 'int' 0
|     |   `-ImplicitCastExpr 0x1653b2f7910 <col:13> 'limb':'unsigned long long' <IntegralCast>
|     |     `-IntegerLiteral 0x1653b2f0960 <col:13> 'int' 0
|     `-InitListExpr 0x1653b2f7958 <line:230:2, line:232:15> 'const felem [3]'
|       |-InitListExpr 0x1653b2f79c0 <line:230:3, col:74> 'const felem':'limb const[4]'
|       | |-ImplicitCastExpr 0x1653b2f7a20 <col:4> 'limb':'unsigned long long' <IntegralCast>
|       | | `-IntegerLiteral 0x1653b2f0a40 <col:4> 'long long' 66796554085571222
|       | |-ImplicitCastExpr 0x1653b2f7a38 <col:22> 'limb':'unsigned long long' <IntegralCast>
|       | | `-IntegerLiteral 0x1653b2f0a68 <col:22> 'long long' 26158445393921034
|       | |-ImplicitCastExpr 0x1653b2f7a50 <col:40> 'limb':'unsigned long long' <IntegralCast>
|       | | `-IntegerLiteral 0x1653b2f0a90 <col:40> 'long long' 33651971713134491
|       | `-ImplicitCastExpr 0x1653b2f7a68 <col:58> 'limb':'unsigned long long' <IntegralCast>
|       |   `-IntegerLiteral 0x1653b2f0ab8 <col:58> 'long long' 32657111288886622
|       |-InitListExpr 0x1653b2f7a90 <line:231:3, col:74> 'const felem':'limb const[4]'
|       | |-ImplicitCastExpr 0x1653b2f7af0 <col:4> 'limb':'unsigned long long' <IntegralCast>
|       | | `-IntegerLiteral 0x1653b2f0b40 <col:4> 'long long' 14152348376426694
|       | |-ImplicitCastExpr 0x1653b2f7b08 <col:22> 'limb':'unsigned long long' <IntegralCast>
|       | | `-IntegerLiteral 0x1653b2f0b68 <col:22> 'long long' 50782694041125259
|       | |-ImplicitCastExpr 0x1653b2f7b20 <col:40> 'limb':'unsigned long long' <IntegralCast>
|       | | `-IntegerLiteral 0x1653b2f0b90 <col:40> 'long long' 40839628717987281
|       | `-ImplicitCastExpr 0x1653b2f7b38 <col:58> 'limb':'unsigned long long' <IntegralCast>
|       |   `-IntegerLiteral 0x1653b2f0bb8 <col:58> 'long long' 17443819558305038
|       `-InitListExpr 0x1653b2f7b60 <line:232:3, col:14> 'const felem':'limb const[4]'
|         |-ImplicitCastExpr 0x1653b2f7bc0 <col:4> 'limb':'unsigned long long' <IntegralCast>
|         | `-IntegerLiteral 0x1653b2f0c40 <col:4> 'int' 1
|         |-ImplicitCastExpr 0x1653b2f7bd8 <col:7> 'limb':'unsigned long long' <IntegralCast>
|         | `-IntegerLiteral 0x1653b2f0c68 <col:7> 'int' 0
|         |-ImplicitCastExpr 0x1653b2f7bf0 <col:10> 'limb':'unsigned long long' <IntegralCast>
|         | `-IntegerLiteral 0x1653b2f0c90 <col:10> 'int' 0
|         `-ImplicitCastExpr 0x1653b2f7c08 <col:13> 'limb':'unsigned long long' <IntegralCast>
|           `-IntegerLiteral 0x1653b2f0cb8 <col:13> 'int' 0
|-RecordDecl 0x1653b2f7c20 prev 0x1653b379230 <line:236:1, line:240:1> line:236:8 invalid struct nistp224_pre_comp_st definition
| |-FieldDecl 0x1653b2f7e48 <line:237:5, col:30> col:11 referenced g_pre_comp 'felem [2][16][3]'
| |-FieldDecl 0x1653b2f7eb8 <line:238:5, col:9> col:9 referenced references 'int'
| `-FieldDecl 0x1653b2f7f28 <line:239:5, col:20> col:20 invalid lock 'int *'
|-FunctionDecl 0x1653b2f8050 <line:242:1, line:298:1> line:242:18 invalid EC_GFp_nistp224_method 'const int *(void)'
| `-CompoundStmt 0x1653b2f8380 <line:243:1, line:298:1>
|   `-DeclStmt 0x1653b2f8368 <line:244:5, line:295:6>
|     `-VarDecl 0x1653b2f8120 <line:244:5, col:28> col:28 invalid ret 'const int' static
|-FunctionDecl 0x1653b2f8688 <line:303:1, line:309:1> line:303:13 used bin28_to_felem 'void (limb *, const u8 *)' static
| |-ParmVarDecl 0x1653b2f8410 <col:28, col:34> col:34 used out 'limb *':'limb *'
| |-ParmVarDecl 0x1653b2f8540 <col:39, col:53> col:48 used in 'const u8 *':'const u8 *'
| `-CompoundStmt 0x1653b2f90d8 <line:304:1, line:309:1>
|   |-BinaryOperator 0x1653b2f8988 <line:305:5, col:42> 'limb':'unsigned long long' '='
|   | |-ArraySubscriptExpr 0x1653b2f87b0 <col:5, col:10> 'limb':'unsigned long long' lvalue
|   | | |-ImplicitCastExpr 0x1653b2f8798 <col:5> 'limb *':'limb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b2f8750 <col:5> 'limb *':'limb *' lvalue ParmVar 0x1653b2f8410 'out' 'limb *':'limb *'
|   | | `-IntegerLiteral 0x1653b2f8770 <col:9> 'int' 0
|   | `-BinaryOperator 0x1653b2f8968 <col:14, col:42> 'unsigned long long' '&'
|   |   |-ImplicitCastExpr 0x1653b2f8938 <col:14, col:38> 'uint64_t':'unsigned long long' <LValueToRValue>
|   |   | `-UnaryOperator 0x1653b2f88f8 <col:14, col:38> 'const uint64_t':'const unsigned long long' lvalue prefix '*' cannot overflow
|   |   |   `-ParenExpr 0x1653b2f88d8 <col:15, col:38> 'const uint64_t *'
|   |   |     `-CStyleCastExpr 0x1653b2f88b0 <col:16, col:37> 'const uint64_t *' <BitCast>
|   |   |       `-ImplicitCastExpr 0x1653b2f8898 <col:34, col:37> 'const u8 *':'const u8 *' <LValueToRValue> part_of_explicit_cast
|   |   |         `-ParenExpr 0x1653b2f8878 <col:34, col:37> 'const u8 *':'const u8 *' lvalue
|   |   |           `-DeclRefExpr 0x1653b2f87d0 <col:35> 'const u8 *':'const u8 *' lvalue ParmVar 0x1653b2f8540 'in' 'const u8 *':'const u8 *'
|   |   `-ImplicitCastExpr 0x1653b2f8950 <col:42> 'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x1653b2f8910 <col:42> 'long long' 72057594037927935
|   |-BinaryOperator 0x1653b2f8bf0 <line:306:5, col:48> 'limb':'unsigned long long' '='
|   | |-ArraySubscriptExpr 0x1653b2f8a08 <col:5, col:10> 'limb':'unsigned long long' lvalue
|   | | |-ImplicitCastExpr 0x1653b2f89f0 <col:5> 'limb *':'limb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b2f89a8 <col:5> 'limb *':'limb *' lvalue ParmVar 0x1653b2f8410 'out' 'limb *':'limb *'
|   | | `-IntegerLiteral 0x1653b2f89c8 <col:9> 'int' 1
|   | `-BinaryOperator 0x1653b2f8bd0 <col:14, col:48> 'unsigned long long' '&'
|   |   |-ImplicitCastExpr 0x1653b2f8ba0 <col:14, col:44> 'uint64_t':'unsigned long long' <LValueToRValue>
|   |   | `-ParenExpr 0x1653b2f8b58 <col:14, col:44> 'const uint64_t':'const unsigned long long' lvalue
|   |   |   `-UnaryOperator 0x1653b2f8b40 <col:15, col:43> 'const uint64_t':'const unsigned long long' lvalue prefix '*' cannot overflow
|   |   |     `-ParenExpr 0x1653b2f8b20 <col:16, col:43> 'const uint64_t *'
|   |   |       `-CStyleCastExpr 0x1653b2f8af8 <col:17, col:42> 'const uint64_t *' <BitCast>
|   |   |         `-ParenExpr 0x1653b2f8ad8 <col:35, col:42> 'const u8 *':'const u8 *'
|   |   |           `-BinaryOperator 0x1653b2f8a88 <col:36, col:41> 'const u8 *':'const u8 *' '+'
|   |   |             |-ImplicitCastExpr 0x1653b2f8a70 <col:36> 'const u8 *':'const u8 *' <LValueToRValue>
|   |   |             | `-DeclRefExpr 0x1653b2f8a28 <col:36> 'const u8 *':'const u8 *' lvalue ParmVar 0x1653b2f8540 'in' 'const u8 *':'const u8 *'
|   |   |             `-IntegerLiteral 0x1653b2f8a48 <col:41> 'int' 7
|   |   `-ImplicitCastExpr 0x1653b2f8bb8 <col:48> 'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x1653b2f8b78 <col:48> 'long long' 72057594037927935
|   |-BinaryOperator 0x1653b2f8e68 <line:307:5, col:49> 'limb':'unsigned long long' '='
|   | |-ArraySubscriptExpr 0x1653b2f8c70 <col:5, col:10> 'limb':'unsigned long long' lvalue
|   | | |-ImplicitCastExpr 0x1653b2f8c58 <col:5> 'limb *':'limb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b2f8c10 <col:5> 'limb *':'limb *' lvalue ParmVar 0x1653b2f8410 'out' 'limb *':'limb *'
|   | | `-IntegerLiteral 0x1653b2f8c30 <col:9> 'int' 2
|   | `-BinaryOperator 0x1653b2f8e48 <col:14, col:49> 'unsigned long long' '&'
|   |   |-ImplicitCastExpr 0x1653b2f8e18 <col:14, col:45> 'uint64_t':'unsigned long long' <LValueToRValue>
|   |   | `-ParenExpr 0x1653b2f8dc0 <col:14, col:45> 'const uint64_t':'const unsigned long long' lvalue
|   |   |   `-UnaryOperator 0x1653b2f8da8 <col:15, col:44> 'const uint64_t':'const unsigned long long' lvalue prefix '*' cannot overflow
|   |   |     `-ParenExpr 0x1653b2f8d88 <col:16, col:44> 'const uint64_t *'
|   |   |       `-CStyleCastExpr 0x1653b2f8d60 <col:17, col:43> 'const uint64_t *' <BitCast>
|   |   |         `-ParenExpr 0x1653b2f8d40 <col:35, col:43> 'const u8 *':'const u8 *'
|   |   |           `-BinaryOperator 0x1653b2f8cf0 <col:36, col:41> 'const u8 *':'const u8 *' '+'
|   |   |             |-ImplicitCastExpr 0x1653b2f8cd8 <col:36> 'const u8 *':'const u8 *' <LValueToRValue>
|   |   |             | `-DeclRefExpr 0x1653b2f8c90 <col:36> 'const u8 *':'const u8 *' lvalue ParmVar 0x1653b2f8540 'in' 'const u8 *':'const u8 *'
|   |   |             `-IntegerLiteral 0x1653b2f8cb0 <col:41> 'int' 14
|   |   `-ImplicitCastExpr 0x1653b2f8e30 <col:49> 'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x1653b2f8df0 <col:49> 'long long' 72057594037927935
|   `-BinaryOperator 0x1653b2f90b8 <line:308:5, col:48> 'limb':'unsigned long long' '='
|     |-ArraySubscriptExpr 0x1653b2f8ee8 <col:5, col:10> 'limb':'unsigned long long' lvalue
|     | |-ImplicitCastExpr 0x1653b2f8ed0 <col:5> 'limb *':'limb *' <LValueToRValue>
|     | | `-DeclRefExpr 0x1653b2f8e88 <col:5> 'limb *':'limb *' lvalue ParmVar 0x1653b2f8410 'out' 'limb *':'limb *'
|     | `-IntegerLiteral 0x1653b2f8ea8 <col:9> 'int' 3
|     `-BinaryOperator 0x1653b2f9098 <col:14, col:48> 'uint64_t':'unsigned long long' '>>'
|       |-ImplicitCastExpr 0x1653b2f9080 <col:14, col:43> 'uint64_t':'unsigned long long' <LValueToRValue>
|       | `-ParenExpr 0x1653b2f9038 <col:14, col:43> 'const uint64_t':'const unsigned long long' lvalue
|       |   `-UnaryOperator 0x1653b2f9020 <col:15, col:42> 'const uint64_t':'const unsigned long long' lvalue prefix '*' cannot overflow
|       |     `-ParenExpr 0x1653b2f9000 <col:16, col:42> 'const uint64_t *'
|       |       `-CStyleCastExpr 0x1653b2f8fd8 <col:17, col:41> 'const uint64_t *' <BitCast>
|       |         `-ParenExpr 0x1653b2f8fb8 <col:35, col:41> 'const u8 *':'const u8 *'
|       |           `-BinaryOperator 0x1653b2f8f68 <col:36, col:39> 'const u8 *':'const u8 *' '+'
|       |             |-ImplicitCastExpr 0x1653b2f8f50 <col:36> 'const u8 *':'const u8 *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x1653b2f8f08 <col:36> 'const u8 *':'const u8 *' lvalue ParmVar 0x1653b2f8540 'in' 'const u8 *':'const u8 *'
|       |             `-IntegerLiteral 0x1653b2f8f28 <col:39> 'int' 20
|       `-IntegerLiteral 0x1653b2f9058 <col:48> 'int' 8
|-FunctionDecl 0x1653b2f93f8 <line:311:1, line:320:1> line:311:13 used felem_to_bin28 'void (u8 *, const limb *)' static
| |-ParmVarDecl 0x1653b2f91d0 <col:28, col:37> col:31 used out 'u8 *':'u8 *'
| |-ParmVarDecl 0x1653b2f92b0 <col:40, col:52> col:52 used in 'const limb *':'const limb *'
| `-CompoundStmt 0x1653b2fa128 <line:312:1, line:320:1>
|   |-DeclStmt 0x1653b2f9540 <line:313:5, col:15>
|   | `-VarDecl 0x1653b2f94d8 <col:5, col:14> col:14 used i 'unsigned int'
|   `-ForStmt 0x1653b2fa0f0 <line:314:5, line:319:5>
|     |-BinaryOperator 0x1653b2f95d0 <line:314:10, col:14> 'unsigned int' '='
|     | |-DeclRefExpr 0x1653b2f9558 <col:10> 'unsigned int' lvalue Var 0x1653b2f94d8 'i' 'unsigned int'
|     | `-ImplicitCastExpr 0x1653b2f95b8 <col:14> 'unsigned int' <IntegralCast>
|     |   `-IntegerLiteral 0x1653b2f9590 <col:14> 'int' 0
|     |-<<<NULL>>>
|     |-BinaryOperator 0x1653b2f9668 <col:17, col:21> 'int' '<'
|     | |-ImplicitCastExpr 0x1653b2f9638 <col:17> 'unsigned int' <LValueToRValue>
|     | | `-DeclRefExpr 0x1653b2f95f0 <col:17> 'unsigned int' lvalue Var 0x1653b2f94d8 'i' 'unsigned int'
|     | `-ImplicitCastExpr 0x1653b2f9650 <col:21> 'unsigned int' <IntegralCast>
|     |   `-IntegerLiteral 0x1653b2f9610 <col:21> 'int' 7
|     |-UnaryOperator 0x1653b2f96a8 <col:24, col:26> 'unsigned int' prefix '++'
|     | `-DeclRefExpr 0x1653b2f9688 <col:26> 'unsigned int' lvalue Var 0x1653b2f94d8 'i' 'unsigned int'
|     `-CompoundStmt 0x1653b2fa0c0 <col:29, line:319:5>
|       |-BinaryOperator 0x1653b2f98d8 <line:315:9, col:33> 'u8':'unsigned char' '='
|       | |-ArraySubscriptExpr 0x1653b2f9730 <col:9, col:14> 'u8':'unsigned char' lvalue
|       | | |-ImplicitCastExpr 0x1653b2f9700 <col:9> 'u8 *':'u8 *' <LValueToRValue>
|       | | | `-DeclRefExpr 0x1653b2f96c0 <col:9> 'u8 *':'u8 *' lvalue ParmVar 0x1653b2f91d0 'out' 'u8 *':'u8 *'
|       | | `-ImplicitCastExpr 0x1653b2f9718 <col:13> 'unsigned int' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1653b2f96e0 <col:13> 'unsigned int' lvalue Var 0x1653b2f94d8 'i' 'unsigned int'
|       | `-ImplicitCastExpr 0x1653b2f98c0 <col:18, col:33> 'u8':'unsigned char' <IntegralCast>
|       |   `-BinaryOperator 0x1653b2f98a0 <col:18, col:33> 'limb':'unsigned long long' '>>'
|       |     |-ImplicitCastExpr 0x1653b2f9888 <col:18, col:22> 'limb':'unsigned long long' <LValueToRValue>
|       |     | `-ArraySubscriptExpr 0x1653b2f97b0 <col:18, col:22> 'const limb':'const unsigned long long' lvalue
|       |     |   |-ImplicitCastExpr 0x1653b2f9798 <col:18> 'const limb *':'const limb *' <LValueToRValue>
|       |     |   | `-DeclRefExpr 0x1653b2f9750 <col:18> 'const limb *':'const limb *' lvalue ParmVar 0x1653b2f92b0 'in' 'const limb *':'const limb *'
|       |     |   `-IntegerLiteral 0x1653b2f9770 <col:21> 'int' 0
|       |     `-ParenExpr 0x1653b2f9868 <col:27, col:33> 'unsigned int'
|       |       `-BinaryOperator 0x1653b2f9848 <col:28, col:32> 'unsigned int' '*'
|       |         |-ImplicitCastExpr 0x1653b2f9830 <col:28> 'unsigned int' <IntegralCast>
|       |         | `-IntegerLiteral 0x1653b2f97d0 <col:28> 'int' 8
|       |         `-ImplicitCastExpr 0x1653b2f9818 <col:32> 'unsigned int' <LValueToRValue>
|       |           `-DeclRefExpr 0x1653b2f97f8 <col:32> 'unsigned int' lvalue Var 0x1653b2f94d8 'i' 'unsigned int'
|       |-BinaryOperator 0x1653b2f9b70 <line:316:9, col:37> 'u8':'unsigned char' '='
|       | |-ArraySubscriptExpr 0x1653b2f99c8 <col:9, col:18> 'u8':'unsigned char' lvalue
|       | | |-ImplicitCastExpr 0x1653b2f99b0 <col:9> 'u8 *':'u8 *' <LValueToRValue>
|       | | | `-DeclRefExpr 0x1653b2f98f8 <col:9> 'u8 *':'u8 *' lvalue ParmVar 0x1653b2f91d0 'out' 'u8 *':'u8 *'
|       | | `-BinaryOperator 0x1653b2f9990 <col:13, col:17> 'unsigned int' '+'
|       | |   |-ImplicitCastExpr 0x1653b2f9960 <col:13> 'unsigned int' <LValueToRValue>
|       | |   | `-DeclRefExpr 0x1653b2f9918 <col:13> 'unsigned int' lvalue Var 0x1653b2f94d8 'i' 'unsigned int'
|       | |   `-ImplicitCastExpr 0x1653b2f9978 <col:17> 'unsigned int' <IntegralCast>
|       | |     `-IntegerLiteral 0x1653b2f9938 <col:17> 'int' 7
|       | `-ImplicitCastExpr 0x1653b2f9b58 <col:22, col:37> 'u8':'unsigned char' <IntegralCast>
|       |   `-BinaryOperator 0x1653b2f9b38 <col:22, col:37> 'limb':'unsigned long long' '>>'
|       |     |-ImplicitCastExpr 0x1653b2f9b20 <col:22, col:26> 'limb':'unsigned long long' <LValueToRValue>
|       |     | `-ArraySubscriptExpr 0x1653b2f9a48 <col:22, col:26> 'const limb':'const unsigned long long' lvalue
|       |     |   |-ImplicitCastExpr 0x1653b2f9a30 <col:22> 'const limb *':'const limb *' <LValueToRValue>
|       |     |   | `-DeclRefExpr 0x1653b2f99e8 <col:22> 'const limb *':'const limb *' lvalue ParmVar 0x1653b2f92b0 'in' 'const limb *':'const limb *'
|       |     |   `-IntegerLiteral 0x1653b2f9a08 <col:25> 'int' 1
|       |     `-ParenExpr 0x1653b2f9b00 <col:31, col:37> 'unsigned int'
|       |       `-BinaryOperator 0x1653b2f9ae0 <col:32, col:36> 'unsigned int' '*'
|       |         |-ImplicitCastExpr 0x1653b2f9ac8 <col:32> 'unsigned int' <IntegralCast>
|       |         | `-IntegerLiteral 0x1653b2f9a68 <col:32> 'int' 8
|       |         `-ImplicitCastExpr 0x1653b2f9ab0 <col:36> 'unsigned int' <LValueToRValue>
|       |           `-DeclRefExpr 0x1653b2f9a90 <col:36> 'unsigned int' lvalue Var 0x1653b2f94d8 'i' 'unsigned int'
|       |-BinaryOperator 0x1653b2f9e08 <line:317:9, col:38> 'u8':'unsigned char' '='
|       | |-ArraySubscriptExpr 0x1653b2f9c60 <col:9, col:19> 'u8':'unsigned char' lvalue
|       | | |-ImplicitCastExpr 0x1653b2f9c48 <col:9> 'u8 *':'u8 *' <LValueToRValue>
|       | | | `-DeclRefExpr 0x1653b2f9b90 <col:9> 'u8 *':'u8 *' lvalue ParmVar 0x1653b2f91d0 'out' 'u8 *':'u8 *'
|       | | `-BinaryOperator 0x1653b2f9c28 <col:13, col:17> 'unsigned int' '+'
|       | |   |-ImplicitCastExpr 0x1653b2f9bf8 <col:13> 'unsigned int' <LValueToRValue>
|       | |   | `-DeclRefExpr 0x1653b2f9bb0 <col:13> 'unsigned int' lvalue Var 0x1653b2f94d8 'i' 'unsigned int'
|       | |   `-ImplicitCastExpr 0x1653b2f9c10 <col:17> 'unsigned int' <IntegralCast>
|       | |     `-IntegerLiteral 0x1653b2f9bd0 <col:17> 'int' 14
|       | `-ImplicitCastExpr 0x1653b2f9df0 <col:23, col:38> 'u8':'unsigned char' <IntegralCast>
|       |   `-BinaryOperator 0x1653b2f9dd0 <col:23, col:38> 'limb':'unsigned long long' '>>'
|       |     |-ImplicitCastExpr 0x1653b2f9db8 <col:23, col:27> 'limb':'unsigned long long' <LValueToRValue>
|       |     | `-ArraySubscriptExpr 0x1653b2f9ce0 <col:23, col:27> 'const limb':'const unsigned long long' lvalue
|       |     |   |-ImplicitCastExpr 0x1653b2f9cc8 <col:23> 'const limb *':'const limb *' <LValueToRValue>
|       |     |   | `-DeclRefExpr 0x1653b2f9c80 <col:23> 'const limb *':'const limb *' lvalue ParmVar 0x1653b2f92b0 'in' 'const limb *':'const limb *'
|       |     |   `-IntegerLiteral 0x1653b2f9ca0 <col:26> 'int' 2
|       |     `-ParenExpr 0x1653b2f9d98 <col:32, col:38> 'unsigned int'
|       |       `-BinaryOperator 0x1653b2f9d78 <col:33, col:37> 'unsigned int' '*'
|       |         |-ImplicitCastExpr 0x1653b2f9d60 <col:33> 'unsigned int' <IntegralCast>
|       |         | `-IntegerLiteral 0x1653b2f9d00 <col:33> 'int' 8
|       |         `-ImplicitCastExpr 0x1653b2f9d48 <col:37> 'unsigned int' <LValueToRValue>
|       |           `-DeclRefExpr 0x1653b2f9d28 <col:37> 'unsigned int' lvalue Var 0x1653b2f94d8 'i' 'unsigned int'
|       `-BinaryOperator 0x1653b2fa0a0 <line:318:9, col:38> 'u8':'unsigned char' '='
|         |-ArraySubscriptExpr 0x1653b2f9ef8 <col:9, col:19> 'u8':'unsigned char' lvalue
|         | |-ImplicitCastExpr 0x1653b2f9ee0 <col:9> 'u8 *':'u8 *' <LValueToRValue>
|         | | `-DeclRefExpr 0x1653b2f9e28 <col:9> 'u8 *':'u8 *' lvalue ParmVar 0x1653b2f91d0 'out' 'u8 *':'u8 *'
|         | `-BinaryOperator 0x1653b2f9ec0 <col:13, col:17> 'unsigned int' '+'
|         |   |-ImplicitCastExpr 0x1653b2f9e90 <col:13> 'unsigned int' <LValueToRValue>
|         |   | `-DeclRefExpr 0x1653b2f9e48 <col:13> 'unsigned int' lvalue Var 0x1653b2f94d8 'i' 'unsigned int'
|         |   `-ImplicitCastExpr 0x1653b2f9ea8 <col:17> 'unsigned int' <IntegralCast>
|         |     `-IntegerLiteral 0x1653b2f9e68 <col:17> 'int' 21
|         `-ImplicitCastExpr 0x1653b2fa088 <col:23, col:38> 'u8':'unsigned char' <IntegralCast>
|           `-BinaryOperator 0x1653b2fa068 <col:23, col:38> 'limb':'unsigned long long' '>>'
|             |-ImplicitCastExpr 0x1653b2fa050 <col:23, col:27> 'limb':'unsigned long long' <LValueToRValue>
|             | `-ArraySubscriptExpr 0x1653b2f9f78 <col:23, col:27> 'const limb':'const unsigned long long' lvalue
|             |   |-ImplicitCastExpr 0x1653b2f9f60 <col:23> 'const limb *':'const limb *' <LValueToRValue>
|             |   | `-DeclRefExpr 0x1653b2f9f18 <col:23> 'const limb *':'const limb *' lvalue ParmVar 0x1653b2f92b0 'in' 'const limb *':'const limb *'
|             |   `-IntegerLiteral 0x1653b2f9f38 <col:26> 'int' 3
|             `-ParenExpr 0x1653b2fa030 <col:32, col:38> 'unsigned int'
|               `-BinaryOperator 0x1653b2fa010 <col:33, col:37> 'unsigned int' '*'
|                 |-ImplicitCastExpr 0x1653b2f9ff8 <col:33> 'unsigned int' <IntegralCast>
|                 | `-IntegerLiteral 0x1653b2f9f98 <col:33> 'int' 8
|                 `-ImplicitCastExpr 0x1653b2f9fe0 <col:37> 'unsigned int' <LValueToRValue>
|                   `-DeclRefExpr 0x1653b2f9fc0 <col:37> 'unsigned int' lvalue Var 0x1653b2f94d8 'i' 'unsigned int'
|-FunctionDecl 0x1653b2fa3b8 <line:323:1, line:328:1> line:323:13 used flip_endian 'void (u8 *, const u8 *, unsigned int)' static
| |-ParmVarDecl 0x1653b2fa158 <col:25, col:29> col:29 used out 'u8 *'
| |-ParmVarDecl 0x1653b2fa1d0 <col:34, col:44> col:44 used in 'const u8 *'
| |-ParmVarDecl 0x1653b2fa250 <col:48, col:57> col:57 used len 'unsigned int'
| `-CompoundStmt 0x1653b2fa8c8 <line:324:1, line:328:1>
|   |-DeclStmt 0x1653b2fa508 <line:325:5, col:15>
|   | `-VarDecl 0x1653b2fa4a0 <col:5, col:14> col:14 used i 'unsigned int'
|   `-ForStmt 0x1653b2fa890 <line:326:5, line:327:32>
|     |-BinaryOperator 0x1653b2fa598 <line:326:10, col:14> 'unsigned int' '='
|     | |-DeclRefExpr 0x1653b2fa520 <col:10> 'unsigned int' lvalue Var 0x1653b2fa4a0 'i' 'unsigned int'
|     | `-ImplicitCastExpr 0x1653b2fa580 <col:14> 'unsigned int' <IntegralCast>
|     |   `-IntegerLiteral 0x1653b2fa558 <col:14> 'int' 0
|     |-<<<NULL>>>
|     |-BinaryOperator 0x1653b2fa628 <col:17, col:21> 'int' '<'
|     | |-ImplicitCastExpr 0x1653b2fa5f8 <col:17> 'unsigned int' <LValueToRValue>
|     | | `-DeclRefExpr 0x1653b2fa5b8 <col:17> 'unsigned int' lvalue Var 0x1653b2fa4a0 'i' 'unsigned int'
|     | `-ImplicitCastExpr 0x1653b2fa610 <col:21> 'unsigned int' <LValueToRValue>
|     |   `-DeclRefExpr 0x1653b2fa5d8 <col:21> 'unsigned int' lvalue ParmVar 0x1653b2fa250 'len' 'unsigned int'
|     |-UnaryOperator 0x1653b2fa668 <col:26, col:28> 'unsigned int' prefix '++'
|     | `-DeclRefExpr 0x1653b2fa648 <col:28> 'unsigned int' lvalue Var 0x1653b2fa4a0 'i' 'unsigned int'
|     `-BinaryOperator 0x1653b2fa870 <line:327:9, col:32> 'u8':'unsigned char' '='
|       |-ArraySubscriptExpr 0x1653b2fa6f0 <col:9, col:14> 'u8':'unsigned char' lvalue
|       | |-ImplicitCastExpr 0x1653b2fa6c0 <col:9> 'u8 *' <LValueToRValue>
|       | | `-DeclRefExpr 0x1653b2fa680 <col:9> 'u8 *' lvalue ParmVar 0x1653b2fa158 'out' 'u8 *'
|       | `-ImplicitCastExpr 0x1653b2fa6d8 <col:13> 'unsigned int' <LValueToRValue>
|       |   `-DeclRefExpr 0x1653b2fa6a0 <col:13> 'unsigned int' lvalue Var 0x1653b2fa4a0 'i' 'unsigned int'
|       `-ImplicitCastExpr 0x1653b2fa858 <col:18, col:32> 'u8':'unsigned char' <LValueToRValue>
|         `-ArraySubscriptExpr 0x1653b2fa838 <col:18, col:32> 'const u8':'const unsigned char' lvalue
|           |-ImplicitCastExpr 0x1653b2fa820 <col:18> 'const u8 *' <LValueToRValue>
|           | `-DeclRefExpr 0x1653b2fa710 <col:18> 'const u8 *' lvalue ParmVar 0x1653b2fa1d0 'in' 'const u8 *'
|           `-BinaryOperator 0x1653b2fa800 <col:21, col:31> 'unsigned int' '-'
|             |-BinaryOperator 0x1653b2fa7a8 <col:21, col:27> 'unsigned int' '-'
|             | |-ImplicitCastExpr 0x1653b2fa778 <col:21> 'unsigned int' <LValueToRValue>
|             | | `-DeclRefExpr 0x1653b2fa730 <col:21> 'unsigned int' lvalue ParmVar 0x1653b2fa250 'len' 'unsigned int'
|             | `-ImplicitCastExpr 0x1653b2fa790 <col:27> 'unsigned int' <IntegralCast>
|             |   `-IntegerLiteral 0x1653b2fa750 <col:27> 'int' 1
|             `-ImplicitCastExpr 0x1653b2fa7e8 <col:31> 'unsigned int' <LValueToRValue>
|               `-DeclRefExpr 0x1653b2fa7c8 <col:31> 'unsigned int' lvalue Var 0x1653b2fa4a0 'i' 'unsigned int'
|-FunctionDecl 0x1653b2faa90 <line:331:1, line:352:1> line:331:12 invalid BN_to_felem 'int (limb *, const int *)' static
| |-ParmVarDecl 0x1653b2fa8f8 <col:24, col:30> col:30 used out 'limb *':'limb *'
| |-ParmVarDecl 0x1653b2fa978 <col:35, col:49> col:49 invalid bn 'const int *'
| `-CompoundStmt 0x1653b2fb8c0 <line:332:1, line:352:1>
|   |-DeclStmt 0x1653b2fabd0 <line:333:5, col:25>
|   | `-VarDecl 0x1653b2fab68 <col:5, col:21> col:21 used b_in 'felem_bytearray':'u8 [28]'
|   |-DeclStmt 0x1653b2fac60 <line:334:5, col:26>
|   | `-VarDecl 0x1653b2fabf8 <col:5, col:21> col:21 used b_out 'felem_bytearray':'u8 [28]'
|   |-DeclStmt 0x1653b2facf8 <line:335:5, col:23>
|   | `-VarDecl 0x1653b2fac90 <col:5, col:14> col:14 used num_bytes 'unsigned int'
|   |-CallExpr 0x1653b2fae60 <line:338:5, col:35> 'void *'
|   | |-ImplicitCastExpr 0x1653b2fae48 <col:5> 'void *(*)(void *, int, unsigned long long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b2fad10 <col:5> 'void *(void *, int, unsigned long long)' Function 0x1653b2ba1f0 'memset' 'void *(void *, int, unsigned long long)'
|   | |-ImplicitCastExpr 0x1653b2faeb0 <col:12> 'void *' <BitCast>
|   | | `-ImplicitCastExpr 0x1653b2fae98 <col:12> 'u8 *' <ArrayToPointerDecay>
|   | |   `-DeclRefExpr 0x1653b2fad30 <col:12> 'felem_bytearray':'u8 [28]' lvalue Var 0x1653b2fabf8 'b_out' 'felem_bytearray':'u8 [28]'
|   | |-IntegerLiteral 0x1653b2fad68 <col:19> 'int' 0
|   | `-UnaryExprOrTypeTraitExpr 0x1653b2fadd0 <col:22, col:34> 'unsigned long long' sizeof
|   |   `-ParenExpr 0x1653b2fadb0 <col:28, col:34> 'felem_bytearray':'u8 [28]' lvalue
|   |     `-DeclRefExpr 0x1653b2fad90 <col:29> 'felem_bytearray':'u8 [28]' lvalue Var 0x1653b2fabf8 'b_out' 'felem_bytearray':'u8 [28]' non_odr_use_unevaluated
|   |-IfStmt 0x1653b2fb268 <line:340:5, line:343:5>
|   | |-BinaryOperator 0x1653b2fb0e8 <line:340:9, col:33> 'int' '>'
|   | | |-ImplicitCastExpr 0x1653b2fb0d0 <col:9> 'unsigned long long' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x1653b2fb0b8 <col:9> 'unsigned int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1653b2fb038 <col:9> 'unsigned int' lvalue Var 0x1653b2fac90 'num_bytes' 'unsigned int'
|   | | `-UnaryExprOrTypeTraitExpr 0x1653b2fb098 <col:21, col:33> 'unsigned long long' sizeof
|   | |   `-ParenExpr 0x1653b2fb078 <col:27, col:33> 'felem_bytearray':'u8 [28]' lvalue
|   | |     `-DeclRefExpr 0x1653b2fb058 <col:28> 'felem_bytearray':'u8 [28]' lvalue Var 0x1653b2fabf8 'b_out' 'felem_bytearray':'u8 [28]' non_odr_use_unevaluated
|   | `-CompoundStmt 0x1653b2fb250 <col:36, line:343:5>
|   |   `-ReturnStmt 0x1653b2fb240 <line:342:9, col:16>
|   |     `-IntegerLiteral 0x1653b2fb218 <col:16> 'int' 0
|   |-IfStmt 0x1653b2fb418 <line:344:5, line:347:5>
|   | |-OpaqueValueExpr 0x1653b2fb400 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1653b2fb3e8 <line:344:29, line:347:5>
|   |   `-ReturnStmt 0x1653b2fb3d8 <line:346:9, col:16>
|   |     `-IntegerLiteral 0x1653b2fb3b0 <col:16> 'int' 0
|   |-CallExpr 0x1653b2fb690 <line:349:5, col:39> 'void'
|   | |-ImplicitCastExpr 0x1653b2fb678 <col:5> 'void (*)(u8 *, const u8 *, unsigned int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b2fb598 <col:5> 'void (u8 *, const u8 *, unsigned int)' Function 0x1653b2fa3b8 'flip_endian' 'void (u8 *, const u8 *, unsigned int)'
|   | |-ImplicitCastExpr 0x1653b2fb6c8 <col:17> 'u8 *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b2fb5b8 <col:17> 'felem_bytearray':'u8 [28]' lvalue Var 0x1653b2fabf8 'b_out' 'felem_bytearray':'u8 [28]'
|   | |-ImplicitCastExpr 0x1653b2fb6f8 <col:24> 'const u8 *' <NoOp>
|   | | `-ImplicitCastExpr 0x1653b2fb6e0 <col:24> 'u8 *' <ArrayToPointerDecay>
|   | |   `-DeclRefExpr 0x1653b2fb5d8 <col:24> 'felem_bytearray':'u8 [28]' lvalue Var 0x1653b2fab68 'b_in' 'felem_bytearray':'u8 [28]'
|   | `-ImplicitCastExpr 0x1653b2fb710 <col:30> 'unsigned int' <LValueToRValue>
|   |   `-DeclRefExpr 0x1653b2fb5f8 <col:30> 'unsigned int' lvalue Var 0x1653b2fac90 'num_bytes' 'unsigned int'
|   |-CallExpr 0x1653b2fb810 <line:350:5, col:30> 'void'
|   | |-ImplicitCastExpr 0x1653b2fb7f8 <col:5> 'void (*)(limb *, const u8 *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b2fb728 <col:5> 'void (limb *, const u8 *)' Function 0x1653b2f8688 'bin28_to_felem' 'void (limb *, const u8 *)'
|   | |-ImplicitCastExpr 0x1653b2fb840 <col:20> 'limb *':'limb *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1653b2fb748 <col:20> 'limb *':'limb *' lvalue ParmVar 0x1653b2fa8f8 'out' 'limb *':'limb *'
|   | `-ImplicitCastExpr 0x1653b2fb870 <col:25> 'const u8 *':'const u8 *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b2fb858 <col:25> 'u8 *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b2fb780 <col:25> 'felem_bytearray':'u8 [28]' lvalue Var 0x1653b2fabf8 'b_out' 'felem_bytearray':'u8 [28]'
|   `-ReturnStmt 0x1653b2fb8b0 <line:351:5, col:12>
|     `-IntegerLiteral 0x1653b2fb888 <col:12> 'int' 1
|-FunctionDecl 0x1653b2fbac0 <line:355:1, line:361:1> line:355:16 invalid felem_to_BN 'int *(int *, const limb *)' static
| |-ParmVarDecl 0x1653b2fb930 <col:28, col:36> col:36 invalid out 'int *'
| |-ParmVarDecl 0x1653b2fb9a8 <col:41, col:53> col:53 used in 'const limb *':'const limb *'
| `-CompoundStmt 0x1653b2fc158 <line:356:1, line:361:1>
|   |-DeclStmt 0x1653b2fbc90 <line:357:5, col:32>
|   | |-VarDecl 0x1653b2fbb98 <col:5, col:21> col:21 used b_in 'felem_bytearray':'u8 [28]'
|   | `-VarDecl 0x1653b2fbc10 <col:5, col:27> col:27 used b_out 'felem_bytearray':'u8 [28]'
|   |-CallExpr 0x1653b2fbdb0 <line:358:5, col:28> 'void'
|   | |-ImplicitCastExpr 0x1653b2fbd98 <col:5> 'void (*)(u8 *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b2fbca8 <col:5> 'void (u8 *, const limb *)' Function 0x1653b2f93f8 'felem_to_bin28' 'void (u8 *, const limb *)'
|   | |-ImplicitCastExpr 0x1653b2fbde0 <col:20> 'u8 *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b2fbcc8 <col:20> 'felem_bytearray':'u8 [28]' lvalue Var 0x1653b2fbb98 'b_in' 'felem_bytearray':'u8 [28]'
|   | `-ImplicitCastExpr 0x1653b2fbdf8 <col:26> 'const limb *':'const limb *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1653b2fbd00 <col:26> 'const limb *':'const limb *' lvalue ParmVar 0x1653b2fb9a8 'in' 'const limb *':'const limb *'
|   `-CallExpr 0x1653b2fbf00 <line:359:5, col:43> 'void'
|     |-ImplicitCastExpr 0x1653b2fbee8 <col:5> 'void (*)(u8 *, const u8 *, unsigned int)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x1653b2fbe10 <col:5> 'void (u8 *, const u8 *, unsigned int)' Function 0x1653b2fa3b8 'flip_endian' 'void (u8 *, const u8 *, unsigned int)'
|     |-ImplicitCastExpr 0x1653b2fbf38 <col:17> 'u8 *' <ArrayToPointerDecay>
|     | `-DeclRefExpr 0x1653b2fbe30 <col:17> 'felem_bytearray':'u8 [28]' lvalue Var 0x1653b2fbc10 'b_out' 'felem_bytearray':'u8 [28]'
|     |-ImplicitCastExpr 0x1653b2fbf68 <col:24> 'const u8 *' <NoOp>
|     | `-ImplicitCastExpr 0x1653b2fbf50 <col:24> 'u8 *' <ArrayToPointerDecay>
|     |   `-DeclRefExpr 0x1653b2fbe68 <col:24> 'felem_bytearray':'u8 [28]' lvalue Var 0x1653b2fbb98 'b_in' 'felem_bytearray':'u8 [28]'
|     `-ImplicitCastExpr 0x1653b2fbf80 <col:30, col:42> 'unsigned int' <IntegralCast>
|       `-UnaryExprOrTypeTraitExpr 0x1653b2fbec8 <col:30, col:42> 'unsigned long long' sizeof
|         `-ParenExpr 0x1653b2fbea8 <col:36, col:42> 'felem_bytearray':'u8 [28]' lvalue
|           `-DeclRefExpr 0x1653b2fbe88 <col:37> 'felem_bytearray':'u8 [28]' lvalue Var 0x1653b2fbc10 'b_out' 'felem_bytearray':'u8 [28]' non_odr_use_unevaluated
|-FunctionDecl 0x1653b2fc298 <line:374:1, line:380:1> line:374:13 used felem_one 'void (limb *)' static
| |-ParmVarDecl 0x1653b2fc190 <col:23, col:29> col:29 used out 'limb *':'limb *'
| |-CompoundStmt 0x1653b2fc6d8 <line:375:1, line:380:1>
| | |-BinaryOperator 0x1653b2fc418 <line:376:5, col:14> 'limb':'unsigned long long' '='
| | | |-ArraySubscriptExpr 0x1653b2fc3b8 <col:5, col:10> 'limb':'unsigned long long' lvalue
| | | | |-ImplicitCastExpr 0x1653b2fc3a0 <col:5> 'limb *':'limb *' <LValueToRValue>
| | | | | `-DeclRefExpr 0x1653b2fc358 <col:5> 'limb *':'limb *' lvalue ParmVar 0x1653b2fc190 'out' 'limb *':'limb *'
| | | | `-IntegerLiteral 0x1653b2fc378 <col:9> 'int' 0
| | | `-ImplicitCastExpr 0x1653b2fc400 <col:14> 'limb':'unsigned long long' <IntegralCast>
| | |   `-IntegerLiteral 0x1653b2fc3d8 <col:14> 'int' 1
| | |-BinaryOperator 0x1653b2fc4f8 <line:377:5, col:14> 'limb':'unsigned long long' '='
| | | |-ArraySubscriptExpr 0x1653b2fc498 <col:5, col:10> 'limb':'unsigned long long' lvalue
| | | | |-ImplicitCastExpr 0x1653b2fc480 <col:5> 'limb *':'limb *' <LValueToRValue>
| | | | | `-DeclRefExpr 0x1653b2fc438 <col:5> 'limb *':'limb *' lvalue ParmVar 0x1653b2fc190 'out' 'limb *':'limb *'
| | | | `-IntegerLiteral 0x1653b2fc458 <col:9> 'int' 1
| | | `-ImplicitCastExpr 0x1653b2fc4e0 <col:14> 'limb':'unsigned long long' <IntegralCast>
| | |   `-IntegerLiteral 0x1653b2fc4b8 <col:14> 'int' 0
| | |-BinaryOperator 0x1653b2fc5d8 <line:378:5, col:14> 'limb':'unsigned long long' '='
| | | |-ArraySubscriptExpr 0x1653b2fc578 <col:5, col:10> 'limb':'unsigned long long' lvalue
| | | | |-ImplicitCastExpr 0x1653b2fc560 <col:5> 'limb *':'limb *' <LValueToRValue>
| | | | | `-DeclRefExpr 0x1653b2fc518 <col:5> 'limb *':'limb *' lvalue ParmVar 0x1653b2fc190 'out' 'limb *':'limb *'
| | | | `-IntegerLiteral 0x1653b2fc538 <col:9> 'int' 2
| | | `-ImplicitCastExpr 0x1653b2fc5c0 <col:14> 'limb':'unsigned long long' <IntegralCast>
| | |   `-IntegerLiteral 0x1653b2fc598 <col:14> 'int' 0
| | `-BinaryOperator 0x1653b2fc6b8 <line:379:5, col:14> 'limb':'unsigned long long' '='
| |   |-ArraySubscriptExpr 0x1653b2fc658 <col:5, col:10> 'limb':'unsigned long long' lvalue
| |   | |-ImplicitCastExpr 0x1653b2fc640 <col:5> 'limb *':'limb *' <LValueToRValue>
| |   | | `-DeclRefExpr 0x1653b2fc5f8 <col:5> 'limb *':'limb *' lvalue ParmVar 0x1653b2fc190 'out' 'limb *':'limb *'
| |   | `-IntegerLiteral 0x1653b2fc618 <col:9> 'int' 3
| |   `-ImplicitCastExpr 0x1653b2fc6a0 <col:14> 'limb':'unsigned long long' <IntegralCast>
| |     `-IntegerLiteral 0x1653b2fc678 <col:14> 'int' 0
| `-FullComment 0x1653b52a930 <line:363:4, col:78>
|   `-ParagraphComment 0x1653b52a908 <col:4, col:78>
|     `-TextComment 0x1653b52a8e0 <col:4, col:78> Text="***************************************************************************"
|-FunctionDecl 0x1653b2fc8d8 <line:382:1, line:388:1> line:382:13 used felem_assign 'void (limb *, const limb *)' static
| |-ParmVarDecl 0x1653b2fc718 <col:26, col:32> col:32 used out 'limb *':'limb *'
| |-ParmVarDecl 0x1653b2fc790 <col:37, col:49> col:49 used in 'const limb *':'const limb *'
| `-CompoundStmt 0x1653b2fcea8 <line:383:1, line:388:1>
|   |-BinaryOperator 0x1653b2fcab8 <line:384:5, col:18> 'limb':'unsigned long long' '='
|   | |-ArraySubscriptExpr 0x1653b2fca00 <col:5, col:10> 'limb':'unsigned long long' lvalue
|   | | |-ImplicitCastExpr 0x1653b2fc9e8 <col:5> 'limb *':'limb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b2fc9a0 <col:5> 'limb *':'limb *' lvalue ParmVar 0x1653b2fc718 'out' 'limb *':'limb *'
|   | | `-IntegerLiteral 0x1653b2fc9c0 <col:9> 'int' 0
|   | `-ImplicitCastExpr 0x1653b2fcaa0 <col:14, col:18> 'limb':'unsigned long long' <LValueToRValue>
|   |   `-ArraySubscriptExpr 0x1653b2fca80 <col:14, col:18> 'const limb':'const unsigned long long' lvalue
|   |     |-ImplicitCastExpr 0x1653b2fca68 <col:14> 'const limb *':'const limb *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1653b2fca20 <col:14> 'const limb *':'const limb *' lvalue ParmVar 0x1653b2fc790 'in' 'const limb *':'const limb *'
|   |     `-IntegerLiteral 0x1653b2fca40 <col:17> 'int' 0
|   |-BinaryOperator 0x1653b2fcbf0 <line:385:5, col:18> 'limb':'unsigned long long' '='
|   | |-ArraySubscriptExpr 0x1653b2fcb38 <col:5, col:10> 'limb':'unsigned long long' lvalue
|   | | |-ImplicitCastExpr 0x1653b2fcb20 <col:5> 'limb *':'limb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b2fcad8 <col:5> 'limb *':'limb *' lvalue ParmVar 0x1653b2fc718 'out' 'limb *':'limb *'
|   | | `-IntegerLiteral 0x1653b2fcaf8 <col:9> 'int' 1
|   | `-ImplicitCastExpr 0x1653b2fcbd8 <col:14, col:18> 'limb':'unsigned long long' <LValueToRValue>
|   |   `-ArraySubscriptExpr 0x1653b2fcbb8 <col:14, col:18> 'const limb':'const unsigned long long' lvalue
|   |     |-ImplicitCastExpr 0x1653b2fcba0 <col:14> 'const limb *':'const limb *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1653b2fcb58 <col:14> 'const limb *':'const limb *' lvalue ParmVar 0x1653b2fc790 'in' 'const limb *':'const limb *'
|   |     `-IntegerLiteral 0x1653b2fcb78 <col:17> 'int' 1
|   |-BinaryOperator 0x1653b2fcd28 <line:386:5, col:18> 'limb':'unsigned long long' '='
|   | |-ArraySubscriptExpr 0x1653b2fcc70 <col:5, col:10> 'limb':'unsigned long long' lvalue
|   | | |-ImplicitCastExpr 0x1653b2fcc58 <col:5> 'limb *':'limb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b2fcc10 <col:5> 'limb *':'limb *' lvalue ParmVar 0x1653b2fc718 'out' 'limb *':'limb *'
|   | | `-IntegerLiteral 0x1653b2fcc30 <col:9> 'int' 2
|   | `-ImplicitCastExpr 0x1653b2fcd10 <col:14, col:18> 'limb':'unsigned long long' <LValueToRValue>
|   |   `-ArraySubscriptExpr 0x1653b2fccf0 <col:14, col:18> 'const limb':'const unsigned long long' lvalue
|   |     |-ImplicitCastExpr 0x1653b2fccd8 <col:14> 'const limb *':'const limb *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1653b2fcc90 <col:14> 'const limb *':'const limb *' lvalue ParmVar 0x1653b2fc790 'in' 'const limb *':'const limb *'
|   |     `-IntegerLiteral 0x1653b2fccb0 <col:17> 'int' 2
|   `-BinaryOperator 0x1653b2fce88 <line:387:5, col:18> 'limb':'unsigned long long' '='
|     |-ArraySubscriptExpr 0x1653b2fcda8 <col:5, col:10> 'limb':'unsigned long long' lvalue
|     | |-ImplicitCastExpr 0x1653b2fcd90 <col:5> 'limb *':'limb *' <LValueToRValue>
|     | | `-DeclRefExpr 0x1653b2fcd48 <col:5> 'limb *':'limb *' lvalue ParmVar 0x1653b2fc718 'out' 'limb *':'limb *'
|     | `-IntegerLiteral 0x1653b2fcd68 <col:9> 'int' 3
|     `-ImplicitCastExpr 0x1653b2fce70 <col:14, col:18> 'limb':'unsigned long long' <LValueToRValue>
|       `-ArraySubscriptExpr 0x1653b2fce50 <col:14, col:18> 'const limb':'const unsigned long long' lvalue
|         |-ImplicitCastExpr 0x1653b2fce38 <col:14> 'const limb *':'const limb *' <LValueToRValue>
|         | `-DeclRefExpr 0x1653b2fcdc8 <col:14> 'const limb *':'const limb *' lvalue ParmVar 0x1653b2fc790 'in' 'const limb *':'const limb *'
|         `-IntegerLiteral 0x1653b2fce10 <col:17> 'int' 3
|-FunctionDecl 0x1653b2fd028 <line:391:1, line:397:1> line:391:13 used felem_sum 'void (limb *, const limb *)' static
| |-ParmVarDecl 0x1653b2fcee8 <col:23, col:29> col:29 used out 'limb *':'limb *'
| |-ParmVarDecl 0x1653b2fcf60 <col:34, col:46> col:46 used in 'const limb *':'const limb *'
| `-CompoundStmt 0x1653b2fd610 <line:392:1, line:397:1>
|   |-CompoundAssignOperator 0x1653b2fd208 <line:393:5, col:19> 'limb':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |-ArraySubscriptExpr 0x1653b2fd150 <col:5, col:10> 'limb':'unsigned long long' lvalue
|   | | |-ImplicitCastExpr 0x1653b2fd138 <col:5> 'limb *':'limb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b2fd0f0 <col:5> 'limb *':'limb *' lvalue ParmVar 0x1653b2fcee8 'out' 'limb *':'limb *'
|   | | `-IntegerLiteral 0x1653b2fd110 <col:9> 'int' 0
|   | `-ImplicitCastExpr 0x1653b2fd1f0 <col:15, col:19> 'limb':'unsigned long long' <LValueToRValue>
|   |   `-ArraySubscriptExpr 0x1653b2fd1d0 <col:15, col:19> 'const limb':'const unsigned long long' lvalue
|   |     |-ImplicitCastExpr 0x1653b2fd1b8 <col:15> 'const limb *':'const limb *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1653b2fd170 <col:15> 'const limb *':'const limb *' lvalue ParmVar 0x1653b2fcf60 'in' 'const limb *':'const limb *'
|   |     `-IntegerLiteral 0x1653b2fd190 <col:18> 'int' 0
|   |-CompoundAssignOperator 0x1653b2fd350 <line:394:5, col:19> 'limb':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |-ArraySubscriptExpr 0x1653b2fd298 <col:5, col:10> 'limb':'unsigned long long' lvalue
|   | | |-ImplicitCastExpr 0x1653b2fd280 <col:5> 'limb *':'limb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b2fd238 <col:5> 'limb *':'limb *' lvalue ParmVar 0x1653b2fcee8 'out' 'limb *':'limb *'
|   | | `-IntegerLiteral 0x1653b2fd258 <col:9> 'int' 1
|   | `-ImplicitCastExpr 0x1653b2fd338 <col:15, col:19> 'limb':'unsigned long long' <LValueToRValue>
|   |   `-ArraySubscriptExpr 0x1653b2fd318 <col:15, col:19> 'const limb':'const unsigned long long' lvalue
|   |     |-ImplicitCastExpr 0x1653b2fd300 <col:15> 'const limb *':'const limb *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1653b2fd2b8 <col:15> 'const limb *':'const limb *' lvalue ParmVar 0x1653b2fcf60 'in' 'const limb *':'const limb *'
|   |     `-IntegerLiteral 0x1653b2fd2d8 <col:18> 'int' 1
|   |-CompoundAssignOperator 0x1653b2fd498 <line:395:5, col:19> 'limb':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |-ArraySubscriptExpr 0x1653b2fd3e0 <col:5, col:10> 'limb':'unsigned long long' lvalue
|   | | |-ImplicitCastExpr 0x1653b2fd3c8 <col:5> 'limb *':'limb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b2fd380 <col:5> 'limb *':'limb *' lvalue ParmVar 0x1653b2fcee8 'out' 'limb *':'limb *'
|   | | `-IntegerLiteral 0x1653b2fd3a0 <col:9> 'int' 2
|   | `-ImplicitCastExpr 0x1653b2fd480 <col:15, col:19> 'limb':'unsigned long long' <LValueToRValue>
|   |   `-ArraySubscriptExpr 0x1653b2fd460 <col:15, col:19> 'const limb':'const unsigned long long' lvalue
|   |     |-ImplicitCastExpr 0x1653b2fd448 <col:15> 'const limb *':'const limb *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1653b2fd400 <col:15> 'const limb *':'const limb *' lvalue ParmVar 0x1653b2fcf60 'in' 'const limb *':'const limb *'
|   |     `-IntegerLiteral 0x1653b2fd420 <col:18> 'int' 2
|   `-CompoundAssignOperator 0x1653b2fd5e0 <line:396:5, col:19> 'limb':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|     |-ArraySubscriptExpr 0x1653b2fd528 <col:5, col:10> 'limb':'unsigned long long' lvalue
|     | |-ImplicitCastExpr 0x1653b2fd510 <col:5> 'limb *':'limb *' <LValueToRValue>
|     | | `-DeclRefExpr 0x1653b2fd4c8 <col:5> 'limb *':'limb *' lvalue ParmVar 0x1653b2fcee8 'out' 'limb *':'limb *'
|     | `-IntegerLiteral 0x1653b2fd4e8 <col:9> 'int' 3
|     `-ImplicitCastExpr 0x1653b2fd5c8 <col:15, col:19> 'limb':'unsigned long long' <LValueToRValue>
|       `-ArraySubscriptExpr 0x1653b2fd5a8 <col:15, col:19> 'const limb':'const unsigned long long' lvalue
|         |-ImplicitCastExpr 0x1653b2fd590 <col:15> 'const limb *':'const limb *' <LValueToRValue>
|         | `-DeclRefExpr 0x1653b2fd548 <col:15> 'const limb *':'const limb *' lvalue ParmVar 0x1653b2fcf60 'in' 'const limb *':'const limb *'
|         `-IntegerLiteral 0x1653b2fd568 <col:18> 'int' 3
|-FunctionDecl 0x1653b2fd790 <line:401:1, line:413:1> line:401:13 used felem_neg 'void (limb *, const limb *)' static
| |-ParmVarDecl 0x1653b2fd650 <col:23, col:29> col:29 used out 'limb *':'limb *'
| |-ParmVarDecl 0x1653b2fd6c8 <col:34, col:46> col:46 used in 'const limb *':'const limb *'
| `-CompoundStmt 0x1653b2fe840 <line:402:1, line:413:1>
|   |-DeclStmt 0x1653b2fdac0 <line:403:5, col:71>
|   | `-VarDecl 0x1653b2fd868 <col:5, col:70> col:23 used two58p2 'const limb':'const unsigned long long' static cinit
|   |   `-BinaryOperator 0x1653b2fdaa0 <col:33, col:70> 'unsigned long long' '+'
|   |     |-ParenExpr 0x1653b2fd998 <col:33, col:50> 'limb':'unsigned long long'
|   |     | `-BinaryOperator 0x1653b2fd978 <col:34, col:48> 'limb':'unsigned long long' '<<'
|   |     |   |-ParenExpr 0x1653b2fd930 <col:34, col:43> 'limb':'unsigned long long'
|   |     |   | `-CStyleCastExpr 0x1653b2fd908 <col:35, col:42> 'limb':'unsigned long long' <IntegralCast>
|   |     |   |   `-IntegerLiteral 0x1653b2fd8d0 <col:42> 'int' 1
|   |     |   `-IntegerLiteral 0x1653b2fd950 <col:48> 'int' 58
|   |     `-ParenExpr 0x1653b2fda80 <col:54, col:70> 'limb':'unsigned long long'
|   |       `-BinaryOperator 0x1653b2fda60 <col:55, col:69> 'limb':'unsigned long long' '<<'
|   |         |-ParenExpr 0x1653b2fda18 <col:55, col:64> 'limb':'unsigned long long'
|   |         | `-CStyleCastExpr 0x1653b2fd9f0 <col:56, col:63> 'limb':'unsigned long long' <IntegralCast>
|   |         |   `-IntegerLiteral 0x1653b2fd9b8 <col:63> 'int' 1
|   |         `-IntegerLiteral 0x1653b2fda38 <col:69> 'int' 2
|   |-DeclStmt 0x1653b2fdd40 <line:404:5, col:71>
|   | `-VarDecl 0x1653b2fdae8 <col:5, col:70> col:23 used two58m2 'const limb':'const unsigned long long' static cinit
|   |   `-BinaryOperator 0x1653b2fdd20 <col:33, col:70> 'unsigned long long' '-'
|   |     |-ParenExpr 0x1653b2fdc18 <col:33, col:50> 'limb':'unsigned long long'
|   |     | `-BinaryOperator 0x1653b2fdbf8 <col:34, col:48> 'limb':'unsigned long long' '<<'
|   |     |   |-ParenExpr 0x1653b2fdbb0 <col:34, col:43> 'limb':'unsigned long long'
|   |     |   | `-CStyleCastExpr 0x1653b2fdb88 <col:35, col:42> 'limb':'unsigned long long' <IntegralCast>
|   |     |   |   `-IntegerLiteral 0x1653b2fdb50 <col:42> 'int' 1
|   |     |   `-IntegerLiteral 0x1653b2fdbd0 <col:48> 'int' 58
|   |     `-ParenExpr 0x1653b2fdd00 <col:54, col:70> 'limb':'unsigned long long'
|   |       `-BinaryOperator 0x1653b2fdce0 <col:55, col:69> 'limb':'unsigned long long' '<<'
|   |         |-ParenExpr 0x1653b2fdc98 <col:55, col:64> 'limb':'unsigned long long'
|   |         | `-CStyleCastExpr 0x1653b2fdc70 <col:56, col:63> 'limb':'unsigned long long' <IntegralCast>
|   |         |   `-IntegerLiteral 0x1653b2fdc38 <col:63> 'int' 1
|   |         `-IntegerLiteral 0x1653b2fdcb8 <col:69> 'int' 2
|   |-DeclStmt 0x1653b2fe0c8 <line:405:5, line:406:47>
|   | `-VarDecl 0x1653b2fdd68 <line:405:5, line:406:46> line:405:23 used two58m42m2 'const limb':'const unsigned long long' static cinit
|   |   `-BinaryOperator 0x1653b2fe0a8 <col:36, line:406:46> 'unsigned long long' '-'
|   |     |-BinaryOperator 0x1653b2fdfa0 <line:405:36, line:406:26> 'unsigned long long' '-'
|   |     | |-ParenExpr 0x1653b2fde98 <line:405:36, col:53> 'limb':'unsigned long long'
|   |     | | `-BinaryOperator 0x1653b2fde78 <col:37, col:51> 'limb':'unsigned long long' '<<'
|   |     | |   |-ParenExpr 0x1653b2fde30 <col:37, col:46> 'limb':'unsigned long long'
|   |     | |   | `-CStyleCastExpr 0x1653b2fde08 <col:38, col:45> 'limb':'unsigned long long' <IntegralCast>
|   |     | |   |   `-IntegerLiteral 0x1653b2fddd0 <col:45> 'int' 1
|   |     | |   `-IntegerLiteral 0x1653b2fde50 <col:51> 'int' 58
|   |     | `-ParenExpr 0x1653b2fdf80 <line:406:9, col:26> 'limb':'unsigned long long'
|   |     |   `-BinaryOperator 0x1653b2fdf60 <col:10, col:24> 'limb':'unsigned long long' '<<'
|   |     |     |-ParenExpr 0x1653b2fdf18 <col:10, col:19> 'limb':'unsigned long long'
|   |     |     | `-CStyleCastExpr 0x1653b2fdef0 <col:11, col:18> 'limb':'unsigned long long' <IntegralCast>
|   |     |     |   `-IntegerLiteral 0x1653b2fdeb8 <col:18> 'int' 1
|   |     |     `-IntegerLiteral 0x1653b2fdf38 <col:24> 'int' 42
|   |     `-ParenExpr 0x1653b2fe088 <col:30, col:46> 'limb':'unsigned long long'
|   |       `-BinaryOperator 0x1653b2fe068 <col:31, col:45> 'limb':'unsigned long long' '<<'
|   |         |-ParenExpr 0x1653b2fe020 <col:31, col:40> 'limb':'unsigned long long'
|   |         | `-CStyleCastExpr 0x1653b2fdff8 <col:32, col:39> 'limb':'unsigned long long' <IntegralCast>
|   |         |   `-IntegerLiteral 0x1653b2fdfc0 <col:39> 'int' 1
|   |         `-IntegerLiteral 0x1653b2fe040 <col:45> 'int' 2
|   |-BinaryOperator 0x1653b2fe268 <line:409:5, col:28> 'limb':'unsigned long long' '='
|   | |-ArraySubscriptExpr 0x1653b2fe140 <col:5, col:10> 'limb':'unsigned long long' lvalue
|   | | |-ImplicitCastExpr 0x1653b2fe128 <col:5> 'limb *':'limb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b2fe0e0 <col:5> 'limb *':'limb *' lvalue ParmVar 0x1653b2fd650 'out' 'limb *':'limb *'
|   | | `-IntegerLiteral 0x1653b2fe100 <col:9> 'int' 0
|   | `-BinaryOperator 0x1653b2fe248 <col:14, col:28> 'unsigned long long' '-'
|   |   |-ImplicitCastExpr 0x1653b2fe218 <col:14> 'limb':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1653b2fe160 <col:14> 'const limb':'const unsigned long long' lvalue Var 0x1653b2fd868 'two58p2' 'const limb':'const unsigned long long'
|   |   `-ImplicitCastExpr 0x1653b2fe230 <col:24, col:28> 'limb':'unsigned long long' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x1653b2fe1f8 <col:24, col:28> 'const limb':'const unsigned long long' lvalue
|   |       |-ImplicitCastExpr 0x1653b2fe1e0 <col:24> 'const limb *':'const limb *' <LValueToRValue>
|   |       | `-DeclRefExpr 0x1653b2fe198 <col:24> 'const limb *':'const limb *' lvalue ParmVar 0x1653b2fd6c8 'in' 'const limb *':'const limb *'
|   |       `-IntegerLiteral 0x1653b2fe1b8 <col:27> 'int' 0
|   |-BinaryOperator 0x1653b2fe458 <line:410:5, col:31> 'limb':'unsigned long long' '='
|   | |-ArraySubscriptExpr 0x1653b2fe330 <col:5, col:10> 'limb':'unsigned long long' lvalue
|   | | |-ImplicitCastExpr 0x1653b2fe318 <col:5> 'limb *':'limb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b2fe2d0 <col:5> 'limb *':'limb *' lvalue ParmVar 0x1653b2fd650 'out' 'limb *':'limb *'
|   | | `-IntegerLiteral 0x1653b2fe2f0 <col:9> 'int' 1
|   | `-BinaryOperator 0x1653b2fe438 <col:14, col:31> 'unsigned long long' '-'
|   |   |-ImplicitCastExpr 0x1653b2fe408 <col:14> 'limb':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1653b2fe350 <col:14> 'const limb':'const unsigned long long' lvalue Var 0x1653b2fdd68 'two58m42m2' 'const limb':'const unsigned long long'
|   |   `-ImplicitCastExpr 0x1653b2fe420 <col:27, col:31> 'limb':'unsigned long long' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x1653b2fe3e8 <col:27, col:31> 'const limb':'const unsigned long long' lvalue
|   |       |-ImplicitCastExpr 0x1653b2fe3d0 <col:27> 'const limb *':'const limb *' <LValueToRValue>
|   |       | `-DeclRefExpr 0x1653b2fe388 <col:27> 'const limb *':'const limb *' lvalue ParmVar 0x1653b2fd6c8 'in' 'const limb *':'const limb *'
|   |       `-IntegerLiteral 0x1653b2fe3a8 <col:30> 'int' 1
|   |-BinaryOperator 0x1653b2fe648 <line:411:5, col:28> 'limb':'unsigned long long' '='
|   | |-ArraySubscriptExpr 0x1653b2fe520 <col:5, col:10> 'limb':'unsigned long long' lvalue
|   | | |-ImplicitCastExpr 0x1653b2fe508 <col:5> 'limb *':'limb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b2fe4c0 <col:5> 'limb *':'limb *' lvalue ParmVar 0x1653b2fd650 'out' 'limb *':'limb *'
|   | | `-IntegerLiteral 0x1653b2fe4e0 <col:9> 'int' 2
|   | `-BinaryOperator 0x1653b2fe628 <col:14, col:28> 'unsigned long long' '-'
|   |   |-ImplicitCastExpr 0x1653b2fe5f8 <col:14> 'limb':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1653b2fe540 <col:14> 'const limb':'const unsigned long long' lvalue Var 0x1653b2fdae8 'two58m2' 'const limb':'const unsigned long long'
|   |   `-ImplicitCastExpr 0x1653b2fe610 <col:24, col:28> 'limb':'unsigned long long' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x1653b2fe5d8 <col:24, col:28> 'const limb':'const unsigned long long' lvalue
|   |       |-ImplicitCastExpr 0x1653b2fe5c0 <col:24> 'const limb *':'const limb *' <LValueToRValue>
|   |       | `-DeclRefExpr 0x1653b2fe578 <col:24> 'const limb *':'const limb *' lvalue ParmVar 0x1653b2fd6c8 'in' 'const limb *':'const limb *'
|   |       `-IntegerLiteral 0x1653b2fe598 <col:27> 'int' 2
|   `-BinaryOperator 0x1653b2fe820 <line:412:5, col:28> 'limb':'unsigned long long' '='
|     |-ArraySubscriptExpr 0x1653b2fe710 <col:5, col:10> 'limb':'unsigned long long' lvalue
|     | |-ImplicitCastExpr 0x1653b2fe6f8 <col:5> 'limb *':'limb *' <LValueToRValue>
|     | | `-DeclRefExpr 0x1653b2fe6b0 <col:5> 'limb *':'limb *' lvalue ParmVar 0x1653b2fd650 'out' 'limb *':'limb *'
|     | `-IntegerLiteral 0x1653b2fe6d0 <col:9> 'int' 3
|     `-BinaryOperator 0x1653b2fe800 <col:14, col:28> 'unsigned long long' '-'
|       |-ImplicitCastExpr 0x1653b2fe7d0 <col:14> 'limb':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x1653b2fe730 <col:14> 'const limb':'const unsigned long long' lvalue Var 0x1653b2fdae8 'two58m2' 'const limb':'const unsigned long long'
|       `-ImplicitCastExpr 0x1653b2fe7e8 <col:24, col:28> 'limb':'unsigned long long' <LValueToRValue>
|         `-ArraySubscriptExpr 0x1653b2fe7b0 <col:24, col:28> 'const limb':'const unsigned long long' lvalue
|           |-ImplicitCastExpr 0x1653b2fe798 <col:24> 'const limb *':'const limb *' <LValueToRValue>
|           | `-DeclRefExpr 0x1653b2fe750 <col:24> 'const limb *':'const limb *' lvalue ParmVar 0x1653b2fd6c8 'in' 'const limb *':'const limb *'
|           `-IntegerLiteral 0x1653b2fe770 <col:27> 'int' 3
|-FunctionDecl 0x1653b2fe9d8 <line:417:1, line:434:1> line:417:13 used felem_diff 'void (limb *, const limb *)' static
| |-ParmVarDecl 0x1653b2fe898 <col:24, col:30> col:30 used out 'limb *':'limb *'
| |-ParmVarDecl 0x1653b2fe910 <col:35, col:47> col:47 used in 'const limb *':'const limb *'
| `-CompoundStmt 0x1653b2ffd30 <line:418:1, line:434:1>
|   |-DeclStmt 0x1653b2fed08 <line:419:5, col:71>
|   | `-VarDecl 0x1653b2feab0 <col:5, col:70> col:23 used two58p2 'const limb':'const unsigned long long' static cinit
|   |   `-BinaryOperator 0x1653b2fece8 <col:33, col:70> 'unsigned long long' '+'
|   |     |-ParenExpr 0x1653b2febe0 <col:33, col:50> 'limb':'unsigned long long'
|   |     | `-BinaryOperator 0x1653b2febc0 <col:34, col:48> 'limb':'unsigned long long' '<<'
|   |     |   |-ParenExpr 0x1653b2feb78 <col:34, col:43> 'limb':'unsigned long long'
|   |     |   | `-CStyleCastExpr 0x1653b2feb50 <col:35, col:42> 'limb':'unsigned long long' <IntegralCast>
|   |     |   |   `-IntegerLiteral 0x1653b2feb18 <col:42> 'int' 1
|   |     |   `-IntegerLiteral 0x1653b2feb98 <col:48> 'int' 58
|   |     `-ParenExpr 0x1653b2fecc8 <col:54, col:70> 'limb':'unsigned long long'
|   |       `-BinaryOperator 0x1653b2feca8 <col:55, col:69> 'limb':'unsigned long long' '<<'
|   |         |-ParenExpr 0x1653b2fec60 <col:55, col:64> 'limb':'unsigned long long'
|   |         | `-CStyleCastExpr 0x1653b2fec38 <col:56, col:63> 'limb':'unsigned long long' <IntegralCast>
|   |         |   `-IntegerLiteral 0x1653b2fec00 <col:63> 'int' 1
|   |         `-IntegerLiteral 0x1653b2fec80 <col:69> 'int' 2
|   |-DeclStmt 0x1653b2fefb0 <line:420:5, col:71>
|   | `-VarDecl 0x1653b2fed30 <col:5, col:70> col:23 used two58m2 'const limb':'const unsigned long long' static cinit
|   |   `-BinaryOperator 0x1653b2fef90 <col:33, col:70> 'unsigned long long' '-'
|   |     |-ParenExpr 0x1653b2fee88 <col:33, col:50> 'limb':'unsigned long long'
|   |     | `-BinaryOperator 0x1653b2fee68 <col:34, col:48> 'limb':'unsigned long long' '<<'
|   |     |   |-ParenExpr 0x1653b2fee20 <col:34, col:43> 'limb':'unsigned long long'
|   |     |   | `-CStyleCastExpr 0x1653b2fedd0 <col:35, col:42> 'limb':'unsigned long long' <IntegralCast>
|   |     |   |   `-IntegerLiteral 0x1653b2fed98 <col:42> 'int' 1
|   |     |   `-IntegerLiteral 0x1653b2fee40 <col:48> 'int' 58
|   |     `-ParenExpr 0x1653b2fef70 <col:54, col:70> 'limb':'unsigned long long'
|   |       `-BinaryOperator 0x1653b2fef50 <col:55, col:69> 'limb':'unsigned long long' '<<'
|   |         |-ParenExpr 0x1653b2fef08 <col:55, col:64> 'limb':'unsigned long long'
|   |         | `-CStyleCastExpr 0x1653b2feee0 <col:56, col:63> 'limb':'unsigned long long' <IntegralCast>
|   |         |   `-IntegerLiteral 0x1653b2feea8 <col:63> 'int' 1
|   |         `-IntegerLiteral 0x1653b2fef28 <col:69> 'int' 2
|   |-DeclStmt 0x1653b2ff338 <line:421:5, line:422:47>
|   | `-VarDecl 0x1653b2fefd8 <line:421:5, line:422:46> line:421:23 used two58m42m2 'const limb':'const unsigned long long' static cinit
|   |   `-BinaryOperator 0x1653b2ff318 <col:36, line:422:46> 'unsigned long long' '-'
|   |     |-BinaryOperator 0x1653b2ff210 <line:421:36, line:422:26> 'unsigned long long' '-'
|   |     | |-ParenExpr 0x1653b2ff108 <line:421:36, col:53> 'limb':'unsigned long long'
|   |     | | `-BinaryOperator 0x1653b2ff0e8 <col:37, col:51> 'limb':'unsigned long long' '<<'
|   |     | |   |-ParenExpr 0x1653b2ff0a0 <col:37, col:46> 'limb':'unsigned long long'
|   |     | |   | `-CStyleCastExpr 0x1653b2ff078 <col:38, col:45> 'limb':'unsigned long long' <IntegralCast>
|   |     | |   |   `-IntegerLiteral 0x1653b2ff040 <col:45> 'int' 1
|   |     | |   `-IntegerLiteral 0x1653b2ff0c0 <col:51> 'int' 58
|   |     | `-ParenExpr 0x1653b2ff1f0 <line:422:9, col:26> 'limb':'unsigned long long'
|   |     |   `-BinaryOperator 0x1653b2ff1d0 <col:10, col:24> 'limb':'unsigned long long' '<<'
|   |     |     |-ParenExpr 0x1653b2ff188 <col:10, col:19> 'limb':'unsigned long long'
|   |     |     | `-CStyleCastExpr 0x1653b2ff160 <col:11, col:18> 'limb':'unsigned long long' <IntegralCast>
|   |     |     |   `-IntegerLiteral 0x1653b2ff128 <col:18> 'int' 1
|   |     |     `-IntegerLiteral 0x1653b2ff1a8 <col:24> 'int' 42
|   |     `-ParenExpr 0x1653b2ff2f8 <col:30, col:46> 'limb':'unsigned long long'
|   |       `-BinaryOperator 0x1653b2ff2d8 <col:31, col:45> 'limb':'unsigned long long' '<<'
|   |         |-ParenExpr 0x1653b2ff290 <col:31, col:40> 'limb':'unsigned long long'
|   |         | `-CStyleCastExpr 0x1653b2ff268 <col:32, col:39> 'limb':'unsigned long long' <IntegralCast>
|   |         |   `-IntegerLiteral 0x1653b2ff230 <col:39> 'int' 1
|   |         `-IntegerLiteral 0x1653b2ff2b0 <col:45> 'int' 2
|   |-CompoundAssignOperator 0x1653b2ff420 <line:425:5, col:15> 'limb':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |-ArraySubscriptExpr 0x1653b2ff3b0 <col:5, col:10> 'limb':'unsigned long long' lvalue
|   | | |-ImplicitCastExpr 0x1653b2ff398 <col:5> 'limb *':'limb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b2ff350 <col:5> 'limb *':'limb *' lvalue ParmVar 0x1653b2fe898 'out' 'limb *':'limb *'
|   | | `-IntegerLiteral 0x1653b2ff370 <col:9> 'int' 0
|   | `-ImplicitCastExpr 0x1653b2ff408 <col:15> 'limb':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0x1653b2ff3d0 <col:15> 'const limb':'const unsigned long long' lvalue Var 0x1653b2feab0 'two58p2' 'const limb':'const unsigned long long'
|   |-CompoundAssignOperator 0x1653b2ff568 <line:426:5, col:15> 'limb':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |-ArraySubscriptExpr 0x1653b2ff4f8 <col:5, col:10> 'limb':'unsigned long long' lvalue
|   | | |-ImplicitCastExpr 0x1653b2ff4e0 <col:5> 'limb *':'limb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b2ff498 <col:5> 'limb *':'limb *' lvalue ParmVar 0x1653b2fe898 'out' 'limb *':'limb *'
|   | | `-IntegerLiteral 0x1653b2ff4b8 <col:9> 'int' 1
|   | `-ImplicitCastExpr 0x1653b2ff550 <col:15> 'limb':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0x1653b2ff518 <col:15> 'const limb':'const unsigned long long' lvalue Var 0x1653b2fefd8 'two58m42m2' 'const limb':'const unsigned long long'
|   |-CompoundAssignOperator 0x1653b2ff6b0 <line:427:5, col:15> 'limb':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |-ArraySubscriptExpr 0x1653b2ff640 <col:5, col:10> 'limb':'unsigned long long' lvalue
|   | | |-ImplicitCastExpr 0x1653b2ff628 <col:5> 'limb *':'limb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b2ff5e0 <col:5> 'limb *':'limb *' lvalue ParmVar 0x1653b2fe898 'out' 'limb *':'limb *'
|   | | `-IntegerLiteral 0x1653b2ff600 <col:9> 'int' 2
|   | `-ImplicitCastExpr 0x1653b2ff698 <col:15> 'limb':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0x1653b2ff660 <col:15> 'const limb':'const unsigned long long' lvalue Var 0x1653b2fed30 'two58m2' 'const limb':'const unsigned long long'
|   |-CompoundAssignOperator 0x1653b2ff7e0 <line:428:5, col:15> 'limb':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |-ArraySubscriptExpr 0x1653b2ff788 <col:5, col:10> 'limb':'unsigned long long' lvalue
|   | | |-ImplicitCastExpr 0x1653b2ff770 <col:5> 'limb *':'limb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b2ff728 <col:5> 'limb *':'limb *' lvalue ParmVar 0x1653b2fe898 'out' 'limb *':'limb *'
|   | | `-IntegerLiteral 0x1653b2ff748 <col:9> 'int' 3
|   | `-ImplicitCastExpr 0x1653b2ff7c8 <col:15> 'limb':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0x1653b2ff7a8 <col:15> 'const limb':'const unsigned long long' lvalue Var 0x1653b2fed30 'two58m2' 'const limb':'const unsigned long long'
|   |-CompoundAssignOperator 0x1653b2ff928 <line:430:5, col:19> 'limb':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |-ArraySubscriptExpr 0x1653b2ff870 <col:5, col:10> 'limb':'unsigned long long' lvalue
|   | | |-ImplicitCastExpr 0x1653b2ff858 <col:5> 'limb *':'limb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b2ff810 <col:5> 'limb *':'limb *' lvalue ParmVar 0x1653b2fe898 'out' 'limb *':'limb *'
|   | | `-IntegerLiteral 0x1653b2ff830 <col:9> 'int' 0
|   | `-ImplicitCastExpr 0x1653b2ff910 <col:15, col:19> 'limb':'unsigned long long' <LValueToRValue>
|   |   `-ArraySubscriptExpr 0x1653b2ff8f0 <col:15, col:19> 'const limb':'const unsigned long long' lvalue
|   |     |-ImplicitCastExpr 0x1653b2ff8d8 <col:15> 'const limb *':'const limb *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1653b2ff890 <col:15> 'const limb *':'const limb *' lvalue ParmVar 0x1653b2fe910 'in' 'const limb *':'const limb *'
|   |     `-IntegerLiteral 0x1653b2ff8b0 <col:18> 'int' 0
|   |-CompoundAssignOperator 0x1653b2ffa70 <line:431:5, col:19> 'limb':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |-ArraySubscriptExpr 0x1653b2ff9b8 <col:5, col:10> 'limb':'unsigned long long' lvalue
|   | | |-ImplicitCastExpr 0x1653b2ff9a0 <col:5> 'limb *':'limb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b2ff958 <col:5> 'limb *':'limb *' lvalue ParmVar 0x1653b2fe898 'out' 'limb *':'limb *'
|   | | `-IntegerLiteral 0x1653b2ff978 <col:9> 'int' 1
|   | `-ImplicitCastExpr 0x1653b2ffa58 <col:15, col:19> 'limb':'unsigned long long' <LValueToRValue>
|   |   `-ArraySubscriptExpr 0x1653b2ffa38 <col:15, col:19> 'const limb':'const unsigned long long' lvalue
|   |     |-ImplicitCastExpr 0x1653b2ffa20 <col:15> 'const limb *':'const limb *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1653b2ff9d8 <col:15> 'const limb *':'const limb *' lvalue ParmVar 0x1653b2fe910 'in' 'const limb *':'const limb *'
|   |     `-IntegerLiteral 0x1653b2ff9f8 <col:18> 'int' 1
|   |-CompoundAssignOperator 0x1653b2ffbb8 <line:432:5, col:19> 'limb':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |-ArraySubscriptExpr 0x1653b2ffb00 <col:5, col:10> 'limb':'unsigned long long' lvalue
|   | | |-ImplicitCastExpr 0x1653b2ffae8 <col:5> 'limb *':'limb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b2ffaa0 <col:5> 'limb *':'limb *' lvalue ParmVar 0x1653b2fe898 'out' 'limb *':'limb *'
|   | | `-IntegerLiteral 0x1653b2ffac0 <col:9> 'int' 2
|   | `-ImplicitCastExpr 0x1653b2ffba0 <col:15, col:19> 'limb':'unsigned long long' <LValueToRValue>
|   |   `-ArraySubscriptExpr 0x1653b2ffb80 <col:15, col:19> 'const limb':'const unsigned long long' lvalue
|   |     |-ImplicitCastExpr 0x1653b2ffb68 <col:15> 'const limb *':'const limb *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1653b2ffb20 <col:15> 'const limb *':'const limb *' lvalue ParmVar 0x1653b2fe910 'in' 'const limb *':'const limb *'
|   |     `-IntegerLiteral 0x1653b2ffb40 <col:18> 'int' 2
|   `-CompoundAssignOperator 0x1653b2ffd00 <line:433:5, col:19> 'limb':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|     |-ArraySubscriptExpr 0x1653b2ffc48 <col:5, col:10> 'limb':'unsigned long long' lvalue
|     | |-ImplicitCastExpr 0x1653b2ffc30 <col:5> 'limb *':'limb *' <LValueToRValue>
|     | | `-DeclRefExpr 0x1653b2ffbe8 <col:5> 'limb *':'limb *' lvalue ParmVar 0x1653b2fe898 'out' 'limb *':'limb *'
|     | `-IntegerLiteral 0x1653b2ffc08 <col:9> 'int' 3
|     `-ImplicitCastExpr 0x1653b2ffce8 <col:15, col:19> 'limb':'unsigned long long' <LValueToRValue>
|       `-ArraySubscriptExpr 0x1653b2ffcc8 <col:15, col:19> 'const limb':'const unsigned long long' lvalue
|         |-ImplicitCastExpr 0x1653b2ffcb0 <col:15> 'const limb *':'const limb *' <LValueToRValue>
|         | `-DeclRefExpr 0x1653b2ffc68 <col:15> 'const limb *':'const limb *' lvalue ParmVar 0x1653b2fe910 'in' 'const limb *':'const limb *'
|         `-IntegerLiteral 0x1653b2ffc88 <col:18> 'int' 3
|-FunctionDecl 0x1653b300098 <line:438:1, line:462:1> line:438:13 used widefelem_diff 'void (widelimb *, const widelimb *)' static
| |-ParmVarDecl 0x1653b2ffe30 <col:28, col:38> col:38 used out 'widelimb *':'widelimb *'
| |-ParmVarDecl 0x1653b2fff50 <col:43, col:59> col:59 used in 'const widelimb *':'const widelimb *'
| `-CompoundStmt 0x1653b301940 <line:439:1, line:462:1>
|   |-DeclStmt 0x1653b3002a0 <line:440:5, col:57>
|   | `-VarDecl 0x1653b300170 <col:5, col:54> col:27 used two120 'const widelimb':'const int' static cinit
|   |   `-BinaryOperator 0x1653b300280 <col:36, col:54> 'widelimb':'int' '<<'
|   |     |-ParenExpr 0x1653b300238 <col:36, col:49> 'widelimb':'int'
|   |     | `-CStyleCastExpr 0x1653b300210 <col:37, col:48> 'widelimb':'int' <NoOp>
|   |     |   `-IntegerLiteral 0x1653b3001d8 <col:48> 'int' 1
|   |     `-IntegerLiteral 0x1653b300258 <col:54> 'int' 120
|   |-DeclStmt 0x1653b300520 <line:441:5, line:442:31>
|   | `-VarDecl 0x1653b3002c8 <line:441:5, line:442:30> line:441:27 used two120m64 'const widelimb':'const int' static cinit
|   |   `-BinaryOperator 0x1653b300500 <col:39, line:442:30> 'int' '-'
|   |     |-ParenExpr 0x1653b3003f8 <line:441:39, col:61> 'widelimb':'int'
|   |     | `-BinaryOperator 0x1653b3003d8 <col:40, col:58> 'widelimb':'int' '<<'
|   |     |   |-ParenExpr 0x1653b300390 <col:40, col:53> 'widelimb':'int'
|   |     |   | `-CStyleCastExpr 0x1653b300368 <col:41, col:52> 'widelimb':'int' <NoOp>
|   |     |   |   `-IntegerLiteral 0x1653b300330 <col:52> 'int' 1
|   |     |   `-IntegerLiteral 0x1653b3003b0 <col:58> 'int' 120
|   |     `-ParenExpr 0x1653b3004e0 <line:442:9, col:30> 'widelimb':'int'
|   |       `-BinaryOperator 0x1653b3004c0 <col:10, col:28> 'widelimb':'int' '<<'
|   |         |-ParenExpr 0x1653b300478 <col:10, col:23> 'widelimb':'int'
|   |         | `-CStyleCastExpr 0x1653b300450 <col:11, col:22> 'widelimb':'int' <NoOp>
|   |         |   `-IntegerLiteral 0x1653b300418 <col:22> 'int' 1
|   |         `-IntegerLiteral 0x1653b300498 <col:28> 'int' 64
|   |-DeclStmt 0x1653b3008a8 <line:443:5, line:444:57>
|   | `-VarDecl 0x1653b300548 <line:443:5, line:444:56> line:443:27 used two120m104m64 'const widelimb':'const int' static cinit
|   |   `-BinaryOperator 0x1653b300888 <col:43, line:444:56> 'int' '-'
|   |     |-BinaryOperator 0x1653b300780 <line:443:43, line:444:31> 'int' '-'
|   |     | |-ParenExpr 0x1653b300678 <line:443:43, col:65> 'widelimb':'int'
|   |     | | `-BinaryOperator 0x1653b300658 <col:44, col:62> 'widelimb':'int' '<<'
|   |     | |   |-ParenExpr 0x1653b300610 <col:44, col:57> 'widelimb':'int'
|   |     | |   | `-CStyleCastExpr 0x1653b3005e8 <col:45, col:56> 'widelimb':'int' <NoOp>
|   |     | |   |   `-IntegerLiteral 0x1653b3005b0 <col:56> 'int' 1
|   |     | |   `-IntegerLiteral 0x1653b300630 <col:62> 'int' 120
|   |     | `-ParenExpr 0x1653b300760 <line:444:9, col:31> 'widelimb':'int'
|   |     |   `-BinaryOperator 0x1653b300740 <col:10, col:28> 'widelimb':'int' '<<'
|   |     |     |-ParenExpr 0x1653b3006f8 <col:10, col:23> 'widelimb':'int'
|   |     |     | `-CStyleCastExpr 0x1653b3006d0 <col:11, col:22> 'widelimb':'int' <NoOp>
|   |     |     |   `-IntegerLiteral 0x1653b300698 <col:22> 'int' 1
|   |     |     `-IntegerLiteral 0x1653b300718 <col:28> 'int' 104
|   |     `-ParenExpr 0x1653b300868 <col:35, col:56> 'widelimb':'int'
|   |       `-BinaryOperator 0x1653b300848 <col:36, col:54> 'widelimb':'int' '<<'
|   |         |-ParenExpr 0x1653b300800 <col:36, col:49> 'widelimb':'int'
|   |         | `-CStyleCastExpr 0x1653b3007d8 <col:37, col:48> 'widelimb':'int' <NoOp>
|   |         |   `-IntegerLiteral 0x1653b3007a0 <col:48> 'int' 1
|   |         `-IntegerLiteral 0x1653b300820 <col:54> 'int' 64
|   |-CompoundAssignOperator 0x1653b300990 <line:447:5, col:15> 'widelimb':'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x1653b300920 <col:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x1653b300908 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b3008c0 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x1653b2ffe30 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x1653b3008e0 <col:9> 'int' 0
|   | `-ImplicitCastExpr 0x1653b300978 <col:15> 'widelimb':'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x1653b300940 <col:15> 'const widelimb':'const int' lvalue Var 0x1653b300170 'two120' 'const widelimb':'const int'
|   |-CompoundAssignOperator 0x1653b300ad8 <line:448:5, col:15> 'widelimb':'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x1653b300a68 <col:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x1653b300a50 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b300a08 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x1653b2ffe30 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x1653b300a28 <col:9> 'int' 1
|   | `-ImplicitCastExpr 0x1653b300ac0 <col:15> 'widelimb':'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x1653b300a88 <col:15> 'const widelimb':'const int' lvalue Var 0x1653b3002c8 'two120m64' 'const widelimb':'const int'
|   |-CompoundAssignOperator 0x1653b300c08 <line:449:5, col:15> 'widelimb':'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x1653b300bb0 <col:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x1653b300b98 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b300b50 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x1653b2ffe30 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x1653b300b70 <col:9> 'int' 2
|   | `-ImplicitCastExpr 0x1653b300bf0 <col:15> 'widelimb':'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x1653b300bd0 <col:15> 'const widelimb':'const int' lvalue Var 0x1653b3002c8 'two120m64' 'const widelimb':'const int'
|   |-CompoundAssignOperator 0x1653b300cf0 <line:450:5, col:15> 'widelimb':'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x1653b300c98 <col:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x1653b300c80 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b300c38 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x1653b2ffe30 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x1653b300c58 <col:9> 'int' 3
|   | `-ImplicitCastExpr 0x1653b300cd8 <col:15> 'widelimb':'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x1653b300cb8 <col:15> 'const widelimb':'const int' lvalue Var 0x1653b300170 'two120' 'const widelimb':'const int'
|   |-CompoundAssignOperator 0x1653b300df0 <line:451:5, col:15> 'widelimb':'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x1653b300d80 <col:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x1653b300d68 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b300d20 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x1653b2ffe30 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x1653b300d40 <col:9> 'int' 4
|   | `-ImplicitCastExpr 0x1653b300dd8 <col:15> 'widelimb':'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x1653b300da0 <col:15> 'const widelimb':'const int' lvalue Var 0x1653b300548 'two120m104m64' 'const widelimb':'const int'
|   |-CompoundAssignOperator 0x1653b300f30 <line:452:5, col:15> 'widelimb':'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x1653b300ed8 <col:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x1653b300ec0 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b300e78 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x1653b2ffe30 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x1653b300e98 <col:9> 'int' 5
|   | `-ImplicitCastExpr 0x1653b300f18 <col:15> 'widelimb':'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x1653b300ef8 <col:15> 'const widelimb':'const int' lvalue Var 0x1653b3002c8 'two120m64' 'const widelimb':'const int'
|   |-CompoundAssignOperator 0x1653b301018 <line:453:5, col:15> 'widelimb':'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x1653b300fc0 <col:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x1653b300fa8 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b300f60 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x1653b2ffe30 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x1653b300f80 <col:9> 'int' 6
|   | `-ImplicitCastExpr 0x1653b301000 <col:15> 'widelimb':'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x1653b300fe0 <col:15> 'const widelimb':'const int' lvalue Var 0x1653b3002c8 'two120m64' 'const widelimb':'const int'
|   |-CompoundAssignOperator 0x1653b301160 <line:455:5, col:19> 'widelimb':'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x1653b3010a8 <col:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x1653b301090 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b301048 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x1653b2ffe30 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x1653b301068 <col:9> 'int' 0
|   | `-ImplicitCastExpr 0x1653b301148 <col:15, col:19> 'widelimb':'int' <LValueToRValue>
|   |   `-ArraySubscriptExpr 0x1653b301128 <col:15, col:19> 'const widelimb':'const int' lvalue
|   |     |-ImplicitCastExpr 0x1653b301110 <col:15> 'const widelimb *':'const widelimb *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1653b3010c8 <col:15> 'const widelimb *':'const widelimb *' lvalue ParmVar 0x1653b2fff50 'in' 'const widelimb *':'const widelimb *'
|   |     `-IntegerLiteral 0x1653b3010e8 <col:18> 'int' 0
|   |-CompoundAssignOperator 0x1653b3012a8 <line:456:5, col:19> 'widelimb':'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x1653b3011f0 <col:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x1653b3011d8 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b301190 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x1653b2ffe30 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x1653b3011b0 <col:9> 'int' 1
|   | `-ImplicitCastExpr 0x1653b301290 <col:15, col:19> 'widelimb':'int' <LValueToRValue>
|   |   `-ArraySubscriptExpr 0x1653b301270 <col:15, col:19> 'const widelimb':'const int' lvalue
|   |     |-ImplicitCastExpr 0x1653b301258 <col:15> 'const widelimb *':'const widelimb *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1653b301210 <col:15> 'const widelimb *':'const widelimb *' lvalue ParmVar 0x1653b2fff50 'in' 'const widelimb *':'const widelimb *'
|   |     `-IntegerLiteral 0x1653b301230 <col:18> 'int' 1
|   |-CompoundAssignOperator 0x1653b3013f0 <line:457:5, col:19> 'widelimb':'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x1653b301338 <col:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x1653b301320 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b3012d8 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x1653b2ffe30 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x1653b3012f8 <col:9> 'int' 2
|   | `-ImplicitCastExpr 0x1653b3013d8 <col:15, col:19> 'widelimb':'int' <LValueToRValue>
|   |   `-ArraySubscriptExpr 0x1653b3013b8 <col:15, col:19> 'const widelimb':'const int' lvalue
|   |     |-ImplicitCastExpr 0x1653b3013a0 <col:15> 'const widelimb *':'const widelimb *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1653b301358 <col:15> 'const widelimb *':'const widelimb *' lvalue ParmVar 0x1653b2fff50 'in' 'const widelimb *':'const widelimb *'
|   |     `-IntegerLiteral 0x1653b301378 <col:18> 'int' 2
|   |-CompoundAssignOperator 0x1653b301538 <line:458:5, col:19> 'widelimb':'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x1653b301480 <col:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x1653b301468 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b301420 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x1653b2ffe30 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x1653b301440 <col:9> 'int' 3
|   | `-ImplicitCastExpr 0x1653b301520 <col:15, col:19> 'widelimb':'int' <LValueToRValue>
|   |   `-ArraySubscriptExpr 0x1653b301500 <col:15, col:19> 'const widelimb':'const int' lvalue
|   |     |-ImplicitCastExpr 0x1653b3014e8 <col:15> 'const widelimb *':'const widelimb *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1653b3014a0 <col:15> 'const widelimb *':'const widelimb *' lvalue ParmVar 0x1653b2fff50 'in' 'const widelimb *':'const widelimb *'
|   |     `-IntegerLiteral 0x1653b3014c0 <col:18> 'int' 3
|   |-CompoundAssignOperator 0x1653b301680 <line:459:5, col:19> 'widelimb':'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x1653b3015c8 <col:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x1653b3015b0 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b301568 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x1653b2ffe30 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x1653b301588 <col:9> 'int' 4
|   | `-ImplicitCastExpr 0x1653b301668 <col:15, col:19> 'widelimb':'int' <LValueToRValue>
|   |   `-ArraySubscriptExpr 0x1653b301648 <col:15, col:19> 'const widelimb':'const int' lvalue
|   |     |-ImplicitCastExpr 0x1653b301630 <col:15> 'const widelimb *':'const widelimb *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1653b3015e8 <col:15> 'const widelimb *':'const widelimb *' lvalue ParmVar 0x1653b2fff50 'in' 'const widelimb *':'const widelimb *'
|   |     `-IntegerLiteral 0x1653b301608 <col:18> 'int' 4
|   |-CompoundAssignOperator 0x1653b3017c8 <line:460:5, col:19> 'widelimb':'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x1653b301710 <col:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x1653b3016f8 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b3016b0 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x1653b2ffe30 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x1653b3016d0 <col:9> 'int' 5
|   | `-ImplicitCastExpr 0x1653b3017b0 <col:15, col:19> 'widelimb':'int' <LValueToRValue>
|   |   `-ArraySubscriptExpr 0x1653b301790 <col:15, col:19> 'const widelimb':'const int' lvalue
|   |     |-ImplicitCastExpr 0x1653b301778 <col:15> 'const widelimb *':'const widelimb *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1653b301730 <col:15> 'const widelimb *':'const widelimb *' lvalue ParmVar 0x1653b2fff50 'in' 'const widelimb *':'const widelimb *'
|   |     `-IntegerLiteral 0x1653b301750 <col:18> 'int' 5
|   `-CompoundAssignOperator 0x1653b301910 <line:461:5, col:19> 'widelimb':'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|     |-ArraySubscriptExpr 0x1653b301858 <col:5, col:10> 'widelimb':'int' lvalue
|     | |-ImplicitCastExpr 0x1653b301840 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|     | | `-DeclRefExpr 0x1653b3017f8 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x1653b2ffe30 'out' 'widelimb *':'widelimb *'
|     | `-IntegerLiteral 0x1653b301818 <col:9> 'int' 6
|     `-ImplicitCastExpr 0x1653b3018f8 <col:15, col:19> 'widelimb':'int' <LValueToRValue>
|       `-ArraySubscriptExpr 0x1653b3018d8 <col:15, col:19> 'const widelimb':'const int' lvalue
|         |-ImplicitCastExpr 0x1653b3018c0 <col:15> 'const widelimb *':'const widelimb *' <LValueToRValue>
|         | `-DeclRefExpr 0x1653b301878 <col:15> 'const widelimb *':'const widelimb *' lvalue ParmVar 0x1653b2fff50 'in' 'const widelimb *':'const widelimb *'
|         `-IntegerLiteral 0x1653b301898 <col:18> 'int' 6
|-FunctionDecl 0x1653b301ba8 <line:466:1, line:485:1> line:466:13 used felem_diff_128_64 'void (widelimb *, const limb *)' static
| |-ParmVarDecl 0x1653b3019e8 <col:31, col:41> col:41 used out 'widelimb *':'widelimb *'
| |-ParmVarDecl 0x1653b301a60 <col:46, col:58> col:58 used in 'const limb *':'const limb *'
| `-CompoundStmt 0x1653b302ee8 <line:467:1, line:485:1>
|   |-DeclStmt 0x1653b301ed8 <line:468:5, line:469:30>
|   | `-VarDecl 0x1653b301c80 <line:468:5, line:469:29> line:468:27 used two64p8 'const widelimb':'const int' static cinit
|   |   `-BinaryOperator 0x1653b301eb8 <col:37, line:469:29> 'int' '+'
|   |     |-ParenExpr 0x1653b301db0 <line:468:37, col:58> 'widelimb':'int'
|   |     | `-BinaryOperator 0x1653b301d90 <col:38, col:56> 'widelimb':'int' '<<'
|   |     |   |-ParenExpr 0x1653b301d48 <col:38, col:51> 'widelimb':'int'
|   |     |   | `-CStyleCastExpr 0x1653b301d20 <col:39, col:50> 'widelimb':'int' <NoOp>
|   |     |   |   `-IntegerLiteral 0x1653b301ce8 <col:50> 'int' 1
|   |     |   `-IntegerLiteral 0x1653b301d68 <col:56> 'int' 64
|   |     `-ParenExpr 0x1653b301e98 <line:469:9, col:29> 'widelimb':'int'
|   |       `-BinaryOperator 0x1653b301e78 <col:10, col:28> 'widelimb':'int' '<<'
|   |         |-ParenExpr 0x1653b301e30 <col:10, col:23> 'widelimb':'int'
|   |         | `-CStyleCastExpr 0x1653b301e08 <col:11, col:22> 'widelimb':'int' <NoOp>
|   |         |   `-IntegerLiteral 0x1653b301dd0 <col:22> 'int' 1
|   |         `-IntegerLiteral 0x1653b301e50 <col:28> 'int' 8
|   |-DeclStmt 0x1653b302158 <line:470:5, line:471:30>
|   | `-VarDecl 0x1653b301f00 <line:470:5, line:471:29> line:470:27 used two64m8 'const widelimb':'const int' static cinit
|   |   `-BinaryOperator 0x1653b302138 <col:37, line:471:29> 'int' '-'
|   |     |-ParenExpr 0x1653b302030 <line:470:37, col:58> 'widelimb':'int'
|   |     | `-BinaryOperator 0x1653b302010 <col:38, col:56> 'widelimb':'int' '<<'
|   |     |   |-ParenExpr 0x1653b301fc8 <col:38, col:51> 'widelimb':'int'
|   |     |   | `-CStyleCastExpr 0x1653b301fa0 <col:39, col:50> 'widelimb':'int' <NoOp>
|   |     |   |   `-IntegerLiteral 0x1653b301f68 <col:50> 'int' 1
|   |     |   `-IntegerLiteral 0x1653b301fe8 <col:56> 'int' 64
|   |     `-ParenExpr 0x1653b302118 <line:471:9, col:29> 'widelimb':'int'
|   |       `-BinaryOperator 0x1653b3020f8 <col:10, col:28> 'widelimb':'int' '<<'
|   |         |-ParenExpr 0x1653b3020b0 <col:10, col:23> 'widelimb':'int'
|   |         | `-CStyleCastExpr 0x1653b302088 <col:11, col:22> 'widelimb':'int' <NoOp>
|   |         |   `-IntegerLiteral 0x1653b302050 <col:22> 'int' 1
|   |         `-IntegerLiteral 0x1653b3020d0 <col:28> 'int' 8
|   |-DeclStmt 0x1653b3024e0 <line:472:5, line:473:55>
|   | `-VarDecl 0x1653b302180 <line:472:5, line:473:54> line:472:27 used two64m48m8 'const widelimb':'const int' static cinit
|   |   `-BinaryOperator 0x1653b3024c0 <col:40, line:473:54> 'int' '-'
|   |     |-BinaryOperator 0x1653b3023b8 <line:472:40, line:473:30> 'int' '-'
|   |     | |-ParenExpr 0x1653b3022b0 <line:472:40, col:61> 'widelimb':'int'
|   |     | | `-BinaryOperator 0x1653b302290 <col:41, col:59> 'widelimb':'int' '<<'
|   |     | |   |-ParenExpr 0x1653b302248 <col:41, col:54> 'widelimb':'int'
|   |     | |   | `-CStyleCastExpr 0x1653b302220 <col:42, col:53> 'widelimb':'int' <NoOp>
|   |     | |   |   `-IntegerLiteral 0x1653b3021e8 <col:53> 'int' 1
|   |     | |   `-IntegerLiteral 0x1653b302268 <col:59> 'int' 64
|   |     | `-ParenExpr 0x1653b302398 <line:473:9, col:30> 'widelimb':'int'
|   |     |   `-BinaryOperator 0x1653b302378 <col:10, col:28> 'widelimb':'int' '<<'
|   |     |     |-ParenExpr 0x1653b302330 <col:10, col:23> 'widelimb':'int'
|   |     |     | `-CStyleCastExpr 0x1653b302308 <col:11, col:22> 'widelimb':'int' <NoOp>
|   |     |     |   `-IntegerLiteral 0x1653b3022d0 <col:22> 'int' 1
|   |     |     `-IntegerLiteral 0x1653b302350 <col:28> 'int' 48
|   |     `-ParenExpr 0x1653b3024a0 <col:34, col:54> 'widelimb':'int'
|   |       `-BinaryOperator 0x1653b302480 <col:35, col:53> 'widelimb':'int' '<<'
|   |         |-ParenExpr 0x1653b302438 <col:35, col:48> 'widelimb':'int'
|   |         | `-CStyleCastExpr 0x1653b302410 <col:36, col:47> 'widelimb':'int' <NoOp>
|   |         |   `-IntegerLiteral 0x1653b3023d8 <col:47> 'int' 1
|   |         `-IntegerLiteral 0x1653b302458 <col:53> 'int' 8
|   |-CompoundAssignOperator 0x1653b3025c8 <line:476:5, col:15> 'widelimb':'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x1653b302558 <col:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x1653b302540 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b3024f8 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x1653b3019e8 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x1653b302518 <col:9> 'int' 0
|   | `-ImplicitCastExpr 0x1653b3025b0 <col:15> 'widelimb':'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x1653b302578 <col:15> 'const widelimb':'const int' lvalue Var 0x1653b301c80 'two64p8' 'const widelimb':'const int'
|   |-CompoundAssignOperator 0x1653b302710 <line:477:5, col:15> 'widelimb':'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x1653b3026a0 <col:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x1653b302688 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b302640 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x1653b3019e8 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x1653b302660 <col:9> 'int' 1
|   | `-ImplicitCastExpr 0x1653b3026f8 <col:15> 'widelimb':'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x1653b3026c0 <col:15> 'const widelimb':'const int' lvalue Var 0x1653b302180 'two64m48m8' 'const widelimb':'const int'
|   |-CompoundAssignOperator 0x1653b302858 <line:478:5, col:15> 'widelimb':'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x1653b3027e8 <col:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x1653b3027d0 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b302788 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x1653b3019e8 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x1653b3027a8 <col:9> 'int' 2
|   | `-ImplicitCastExpr 0x1653b302840 <col:15> 'widelimb':'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x1653b302808 <col:15> 'const widelimb':'const int' lvalue Var 0x1653b301f00 'two64m8' 'const widelimb':'const int'
|   |-CompoundAssignOperator 0x1653b302988 <line:479:5, col:15> 'widelimb':'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x1653b302930 <col:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x1653b302918 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b3028d0 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x1653b3019e8 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x1653b3028f0 <col:9> 'int' 3
|   | `-ImplicitCastExpr 0x1653b302970 <col:15> 'widelimb':'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x1653b302950 <col:15> 'const widelimb':'const int' lvalue Var 0x1653b301f00 'two64m8' 'const widelimb':'const int'
|   |-CompoundAssignOperator 0x1653b302ad0 <line:481:5, col:19> 'widelimb':'int' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |-ArraySubscriptExpr 0x1653b302a18 <col:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x1653b302a00 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b3029b8 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x1653b3019e8 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x1653b3029d8 <col:9> 'int' 0
|   | `-ImplicitCastExpr 0x1653b302ab8 <col:15, col:19> 'limb':'unsigned long long' <LValueToRValue>
|   |   `-ArraySubscriptExpr 0x1653b302a98 <col:15, col:19> 'const limb':'const unsigned long long' lvalue
|   |     |-ImplicitCastExpr 0x1653b302a80 <col:15> 'const limb *':'const limb *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1653b302a38 <col:15> 'const limb *':'const limb *' lvalue ParmVar 0x1653b301a60 'in' 'const limb *':'const limb *'
|   |     `-IntegerLiteral 0x1653b302a58 <col:18> 'int' 0
|   |-CompoundAssignOperator 0x1653b302c18 <line:482:5, col:19> 'widelimb':'int' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |-ArraySubscriptExpr 0x1653b302b60 <col:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x1653b302b48 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b302b00 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x1653b3019e8 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x1653b302b20 <col:9> 'int' 1
|   | `-ImplicitCastExpr 0x1653b302c00 <col:15, col:19> 'limb':'unsigned long long' <LValueToRValue>
|   |   `-ArraySubscriptExpr 0x1653b302be0 <col:15, col:19> 'const limb':'const unsigned long long' lvalue
|   |     |-ImplicitCastExpr 0x1653b302bc8 <col:15> 'const limb *':'const limb *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1653b302b80 <col:15> 'const limb *':'const limb *' lvalue ParmVar 0x1653b301a60 'in' 'const limb *':'const limb *'
|   |     `-IntegerLiteral 0x1653b302ba0 <col:18> 'int' 1
|   |-CompoundAssignOperator 0x1653b302d60 <line:483:5, col:19> 'widelimb':'int' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |-ArraySubscriptExpr 0x1653b302ca8 <col:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x1653b302c90 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b302c48 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x1653b3019e8 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x1653b302c68 <col:9> 'int' 2
|   | `-ImplicitCastExpr 0x1653b302d48 <col:15, col:19> 'limb':'unsigned long long' <LValueToRValue>
|   |   `-ArraySubscriptExpr 0x1653b302d28 <col:15, col:19> 'const limb':'const unsigned long long' lvalue
|   |     |-ImplicitCastExpr 0x1653b302d10 <col:15> 'const limb *':'const limb *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1653b302cc8 <col:15> 'const limb *':'const limb *' lvalue ParmVar 0x1653b301a60 'in' 'const limb *':'const limb *'
|   |     `-IntegerLiteral 0x1653b302ce8 <col:18> 'int' 2
|   `-CompoundAssignOperator 0x1653b302eb8 <line:484:5, col:19> 'widelimb':'int' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|     |-ArraySubscriptExpr 0x1653b302df0 <col:5, col:10> 'widelimb':'int' lvalue
|     | |-ImplicitCastExpr 0x1653b302dd8 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|     | | `-DeclRefExpr 0x1653b302d90 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x1653b3019e8 'out' 'widelimb *':'widelimb *'
|     | `-IntegerLiteral 0x1653b302db0 <col:9> 'int' 3
|     `-ImplicitCastExpr 0x1653b302ea0 <col:15, col:19> 'limb':'unsigned long long' <LValueToRValue>
|       `-ArraySubscriptExpr 0x1653b302e80 <col:15, col:19> 'const limb':'const unsigned long long' lvalue
|         |-ImplicitCastExpr 0x1653b302e68 <col:15> 'const limb *':'const limb *' <LValueToRValue>
|         | `-DeclRefExpr 0x1653b302e10 <col:15> 'const limb *':'const limb *' lvalue ParmVar 0x1653b301a60 'in' 'const limb *':'const limb *'
|         `-IntegerLiteral 0x1653b302e40 <col:18> 'int' 3
|-FunctionDecl 0x1653b303118 <line:491:1, line:497:1> line:491:13 used felem_scalar 'void (limb *, const limb)' static
| |-ParmVarDecl 0x1653b302f60 <col:26, col:32> col:32 used out 'limb *':'limb *'
| |-ParmVarDecl 0x1653b302fd8 <col:37, col:48> col:48 used scalar 'const limb':'const unsigned long long'
| `-CompoundStmt 0x1653b303580 <line:492:1, line:497:1>
|   |-CompoundAssignOperator 0x1653b303298 <line:493:5, col:15> 'limb':'unsigned long long' '*=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |-ArraySubscriptExpr 0x1653b303240 <col:5, col:10> 'limb':'unsigned long long' lvalue
|   | | |-ImplicitCastExpr 0x1653b303228 <col:5> 'limb *':'limb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b3031e0 <col:5> 'limb *':'limb *' lvalue ParmVar 0x1653b302f60 'out' 'limb *':'limb *'
|   | | `-IntegerLiteral 0x1653b303200 <col:9> 'int' 0
|   | `-ImplicitCastExpr 0x1653b303280 <col:15> 'limb':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0x1653b303260 <col:15> 'const limb':'const unsigned long long' lvalue ParmVar 0x1653b302fd8 'scalar' 'const limb':'const unsigned long long'
|   |-CompoundAssignOperator 0x1653b303380 <line:494:5, col:15> 'limb':'unsigned long long' '*=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |-ArraySubscriptExpr 0x1653b303328 <col:5, col:10> 'limb':'unsigned long long' lvalue
|   | | |-ImplicitCastExpr 0x1653b303310 <col:5> 'limb *':'limb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b3032c8 <col:5> 'limb *':'limb *' lvalue ParmVar 0x1653b302f60 'out' 'limb *':'limb *'
|   | | `-IntegerLiteral 0x1653b3032e8 <col:9> 'int' 1
|   | `-ImplicitCastExpr 0x1653b303368 <col:15> 'limb':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0x1653b303348 <col:15> 'const limb':'const unsigned long long' lvalue ParmVar 0x1653b302fd8 'scalar' 'const limb':'const unsigned long long'
|   |-CompoundAssignOperator 0x1653b303468 <line:495:5, col:15> 'limb':'unsigned long long' '*=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |-ArraySubscriptExpr 0x1653b303410 <col:5, col:10> 'limb':'unsigned long long' lvalue
|   | | |-ImplicitCastExpr 0x1653b3033f8 <col:5> 'limb *':'limb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b3033b0 <col:5> 'limb *':'limb *' lvalue ParmVar 0x1653b302f60 'out' 'limb *':'limb *'
|   | | `-IntegerLiteral 0x1653b3033d0 <col:9> 'int' 2
|   | `-ImplicitCastExpr 0x1653b303450 <col:15> 'limb':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0x1653b303430 <col:15> 'const limb':'const unsigned long long' lvalue ParmVar 0x1653b302fd8 'scalar' 'const limb':'const unsigned long long'
|   `-CompoundAssignOperator 0x1653b303550 <line:496:5, col:15> 'limb':'unsigned long long' '*=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|     |-ArraySubscriptExpr 0x1653b3034f8 <col:5, col:10> 'limb':'unsigned long long' lvalue
|     | |-ImplicitCastExpr 0x1653b3034e0 <col:5> 'limb *':'limb *' <LValueToRValue>
|     | | `-DeclRefExpr 0x1653b303498 <col:5> 'limb *':'limb *' lvalue ParmVar 0x1653b302f60 'out' 'limb *':'limb *'
|     | `-IntegerLiteral 0x1653b3034b8 <col:9> 'int' 3
|     `-ImplicitCastExpr 0x1653b303538 <col:15> 'limb':'unsigned long long' <LValueToRValue>
|       `-DeclRefExpr 0x1653b303518 <col:15> 'const limb':'const unsigned long long' lvalue ParmVar 0x1653b302fd8 'scalar' 'const limb':'const unsigned long long'
|-FunctionDecl 0x1653b303778 <line:503:1, line:512:1> line:503:13 used widefelem_scalar 'void (widelimb *, const widelimb)' static
| |-ParmVarDecl 0x1653b3035c0 <col:30, col:40> col:40 used out 'widelimb *':'widelimb *'
| |-ParmVarDecl 0x1653b303638 <col:45, col:60> col:60 used scalar 'const widelimb':'const int'
| `-CompoundStmt 0x1653b303e98 <line:504:1, line:512:1>
|   |-CompoundAssignOperator 0x1653b3038f8 <line:505:5, col:15> 'widelimb':'int' '*=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x1653b3038a0 <col:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x1653b303888 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b303840 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x1653b3035c0 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x1653b303860 <col:9> 'int' 0
|   | `-ImplicitCastExpr 0x1653b3038e0 <col:15> 'widelimb':'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x1653b3038c0 <col:15> 'const widelimb':'const int' lvalue ParmVar 0x1653b303638 'scalar' 'const widelimb':'const int'
|   |-CompoundAssignOperator 0x1653b3039e0 <line:506:5, col:15> 'widelimb':'int' '*=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x1653b303988 <col:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x1653b303970 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b303928 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x1653b3035c0 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x1653b303948 <col:9> 'int' 1
|   | `-ImplicitCastExpr 0x1653b3039c8 <col:15> 'widelimb':'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x1653b3039a8 <col:15> 'const widelimb':'const int' lvalue ParmVar 0x1653b303638 'scalar' 'const widelimb':'const int'
|   |-CompoundAssignOperator 0x1653b303ac8 <line:507:5, col:15> 'widelimb':'int' '*=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x1653b303a70 <col:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x1653b303a58 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b303a10 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x1653b3035c0 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x1653b303a30 <col:9> 'int' 2
|   | `-ImplicitCastExpr 0x1653b303ab0 <col:15> 'widelimb':'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x1653b303a90 <col:15> 'const widelimb':'const int' lvalue ParmVar 0x1653b303638 'scalar' 'const widelimb':'const int'
|   |-CompoundAssignOperator 0x1653b303bb0 <line:508:5, col:15> 'widelimb':'int' '*=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x1653b303b58 <col:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x1653b303b40 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b303af8 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x1653b3035c0 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x1653b303b18 <col:9> 'int' 3
|   | `-ImplicitCastExpr 0x1653b303b98 <col:15> 'widelimb':'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x1653b303b78 <col:15> 'const widelimb':'const int' lvalue ParmVar 0x1653b303638 'scalar' 'const widelimb':'const int'
|   |-CompoundAssignOperator 0x1653b303c98 <line:509:5, col:15> 'widelimb':'int' '*=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x1653b303c40 <col:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x1653b303c28 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b303be0 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x1653b3035c0 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x1653b303c00 <col:9> 'int' 4
|   | `-ImplicitCastExpr 0x1653b303c80 <col:15> 'widelimb':'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x1653b303c60 <col:15> 'const widelimb':'const int' lvalue ParmVar 0x1653b303638 'scalar' 'const widelimb':'const int'
|   |-CompoundAssignOperator 0x1653b303d80 <line:510:5, col:15> 'widelimb':'int' '*=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x1653b303d28 <col:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x1653b303d10 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b303cc8 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x1653b3035c0 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x1653b303ce8 <col:9> 'int' 5
|   | `-ImplicitCastExpr 0x1653b303d68 <col:15> 'widelimb':'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x1653b303d48 <col:15> 'const widelimb':'const int' lvalue ParmVar 0x1653b303638 'scalar' 'const widelimb':'const int'
|   `-CompoundAssignOperator 0x1653b303e68 <line:511:5, col:15> 'widelimb':'int' '*=' ComputeLHSTy='int' ComputeResultTy='int'
|     |-ArraySubscriptExpr 0x1653b303e10 <col:5, col:10> 'widelimb':'int' lvalue
|     | |-ImplicitCastExpr 0x1653b303df8 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|     | | `-DeclRefExpr 0x1653b303db0 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x1653b3035c0 'out' 'widelimb *':'widelimb *'
|     | `-IntegerLiteral 0x1653b303dd0 <col:9> 'int' 6
|     `-ImplicitCastExpr 0x1653b303e50 <col:15> 'widelimb':'int' <LValueToRValue>
|       `-DeclRefExpr 0x1653b303e30 <col:15> 'const widelimb':'const int' lvalue ParmVar 0x1653b303638 'scalar' 'const widelimb':'const int'
|-FunctionDecl 0x1653b304030 <line:515:1, line:528:1> line:515:13 used felem_square 'void (widelimb *, const limb *)' static
| |-ParmVarDecl 0x1653b303ef0 <col:26, col:36> col:36 used out 'widelimb *':'widelimb *'
| |-ParmVarDecl 0x1653b303f68 <col:41, col:53> col:53 used in 'const limb *':'const limb *'
| `-CompoundStmt 0x1653b3e51b0 <line:516:1, line:528:1>
|   |-DeclStmt 0x1653b304280 <line:517:5, col:26>
|   | |-VarDecl 0x1653b304108 <col:5, col:10> col:10 used tmp0 'limb':'unsigned long long'
|   | |-VarDecl 0x1653b304180 <col:5, col:16> col:16 used tmp1 'limb':'unsigned long long'
|   | `-VarDecl 0x1653b3041f8 <col:5, col:22> col:22 used tmp2 'limb':'unsigned long long'
|   |-BinaryOperator 0x1653b3043c8 <line:518:5, col:20> 'limb':'unsigned long long' '='
|   | |-DeclRefExpr 0x1653b304298 <col:5> 'limb':'unsigned long long' lvalue Var 0x1653b304108 'tmp0' 'limb':'unsigned long long'
|   | `-BinaryOperator 0x1653b3043a8 <col:12, col:20> 'unsigned long long' '*'
|   |   |-ImplicitCastExpr 0x1653b304390 <col:12> 'unsigned long long' <IntegralCast>
|   |   | `-IntegerLiteral 0x1653b3042d0 <col:12> 'int' 2
|   |   `-ImplicitCastExpr 0x1653b304378 <col:16, col:20> 'limb':'unsigned long long' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x1653b304358 <col:16, col:20> 'const limb':'const unsigned long long' lvalue
|   |       |-ImplicitCastExpr 0x1653b304340 <col:16> 'const limb *':'const limb *' <LValueToRValue>
|   |       | `-DeclRefExpr 0x1653b3042f8 <col:16> 'const limb *':'const limb *' lvalue ParmVar 0x1653b303f68 'in' 'const limb *':'const limb *'
|   |       `-IntegerLiteral 0x1653b304318 <col:19> 'int' 0
|   |-BinaryOperator 0x1653b304518 <line:519:5, col:20> 'limb':'unsigned long long' '='
|   | |-DeclRefExpr 0x1653b3043e8 <col:5> 'limb':'unsigned long long' lvalue Var 0x1653b304180 'tmp1' 'limb':'unsigned long long'
|   | `-BinaryOperator 0x1653b3044f8 <col:12, col:20> 'unsigned long long' '*'
|   |   |-ImplicitCastExpr 0x1653b3044e0 <col:12> 'unsigned long long' <IntegralCast>
|   |   | `-IntegerLiteral 0x1653b304420 <col:12> 'int' 2
|   |   `-ImplicitCastExpr 0x1653b3044c8 <col:16, col:20> 'limb':'unsigned long long' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x1653b3044a8 <col:16, col:20> 'const limb':'const unsigned long long' lvalue
|   |       |-ImplicitCastExpr 0x1653b304490 <col:16> 'const limb *':'const limb *' <LValueToRValue>
|   |       | `-DeclRefExpr 0x1653b304448 <col:16> 'const limb *':'const limb *' lvalue ParmVar 0x1653b303f68 'in' 'const limb *':'const limb *'
|   |       `-IntegerLiteral 0x1653b304468 <col:19> 'int' 1
|   |-BinaryOperator 0x1653b304668 <line:520:5, col:20> 'limb':'unsigned long long' '='
|   | |-DeclRefExpr 0x1653b304538 <col:5> 'limb':'unsigned long long' lvalue Var 0x1653b3041f8 'tmp2' 'limb':'unsigned long long'
|   | `-BinaryOperator 0x1653b304648 <col:12, col:20> 'unsigned long long' '*'
|   |   |-ImplicitCastExpr 0x1653b304630 <col:12> 'unsigned long long' <IntegralCast>
|   |   | `-IntegerLiteral 0x1653b304570 <col:12> 'int' 2
|   |   `-ImplicitCastExpr 0x1653b304618 <col:16, col:20> 'limb':'unsigned long long' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x1653b3045f8 <col:16, col:20> 'const limb':'const unsigned long long' lvalue
|   |       |-ImplicitCastExpr 0x1653b3045e0 <col:16> 'const limb *':'const limb *' <LValueToRValue>
|   |       | `-DeclRefExpr 0x1653b304598 <col:16> 'const limb *':'const limb *' lvalue ParmVar 0x1653b303f68 'in' 'const limb *':'const limb *'
|   |       `-IntegerLiteral 0x1653b3045b8 <col:19> 'int' 2
|   |-BinaryOperator 0x1653b3048e0 <line:521:5, col:39> 'widelimb':'int' '='
|   | |-ArraySubscriptExpr 0x1653b3046e8 <col:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x1653b3046d0 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b304688 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x1653b303ef0 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x1653b3046a8 <col:9> 'int' 0
|   | `-ImplicitCastExpr 0x1653b3048c8 <col:14, col:39> 'widelimb':'int' <IntegralCast>
|   |   `-BinaryOperator 0x1653b3048a8 <col:14, col:39> 'unsigned long long' '*'
|   |     |-ImplicitCastExpr 0x1653b304890 <col:14, col:31> 'unsigned long long' <IntegralCast>
|   |     | `-ParenExpr 0x1653b3047d8 <col:14, col:31> 'widelimb':'int'
|   |     |   `-CStyleCastExpr 0x1653b3047b0 <col:15, col:30> 'widelimb':'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x1653b304798 <col:26, col:30> 'limb':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   |     |       `-ArraySubscriptExpr 0x1653b304768 <col:26, col:30> 'const limb':'const unsigned long long' lvalue
|   |     |         |-ImplicitCastExpr 0x1653b304750 <col:26> 'const limb *':'const limb *' <LValueToRValue>
|   |     |         | `-DeclRefExpr 0x1653b304708 <col:26> 'const limb *':'const limb *' lvalue ParmVar 0x1653b303f68 'in' 'const limb *':'const limb *'
|   |     |         `-IntegerLiteral 0x1653b304728 <col:29> 'int' 0
|   |     `-ImplicitCastExpr 0x1653b304878 <col:35, col:39> 'limb':'unsigned long long' <LValueToRValue>
|   |       `-ArraySubscriptExpr 0x1653b304858 <col:35, col:39> 'const limb':'const unsigned long long' lvalue
|   |         |-ImplicitCastExpr 0x1653b304840 <col:35> 'const limb *':'const limb *' <LValueToRValue>
|   |         | `-DeclRefExpr 0x1653b3047f8 <col:35> 'const limb *':'const limb *' lvalue ParmVar 0x1653b303f68 'in' 'const limb *':'const limb *'
|   |         `-IntegerLiteral 0x1653b304818 <col:38> 'int' 0
|   |-BinaryOperator 0x1653b304af8 <line:522:5, col:35> 'widelimb':'int' '='
|   | |-ArraySubscriptExpr 0x1653b304960 <col:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x1653b304948 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b304900 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x1653b303ef0 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x1653b304920 <col:9> 'int' 1
|   | `-ImplicitCastExpr 0x1653b304ae0 <col:14, col:35> 'widelimb':'int' <IntegralCast>
|   |   `-BinaryOperator 0x1653b304ac0 <col:14, col:35> 'unsigned long long' '*'
|   |     |-ImplicitCastExpr 0x1653b304aa8 <col:14, col:31> 'unsigned long long' <IntegralCast>
|   |     | `-ParenExpr 0x1653b304a50 <col:14, col:31> 'widelimb':'int'
|   |     |   `-CStyleCastExpr 0x1653b304a28 <col:15, col:30> 'widelimb':'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x1653b304a10 <col:26, col:30> 'limb':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   |     |       `-ArraySubscriptExpr 0x1653b3049e0 <col:26, col:30> 'const limb':'const unsigned long long' lvalue
|   |     |         |-ImplicitCastExpr 0x1653b3049c8 <col:26> 'const limb *':'const limb *' <LValueToRValue>
|   |     |         | `-DeclRefExpr 0x1653b304980 <col:26> 'const limb *':'const limb *' lvalue ParmVar 0x1653b303f68 'in' 'const limb *':'const limb *'
|   |     |         `-IntegerLiteral 0x1653b3049a0 <col:29> 'int' 0
|   |     `-ImplicitCastExpr 0x1653b304a90 <col:35> 'limb':'unsigned long long' <LValueToRValue>
|   |       `-DeclRefExpr 0x1653b304a70 <col:35> 'limb':'unsigned long long' lvalue Var 0x1653b304180 'tmp1' 'limb':'unsigned long long'
|   |-BinaryOperator 0x1653b3e4570 <line:523:5, col:67> 'widelimb':'int' '='
|   | |-ArraySubscriptExpr 0x1653b304b78 <col:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x1653b304b60 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b304b18 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x1653b303ef0 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x1653b304b38 <col:9> 'int' 2
|   | `-ImplicitCastExpr 0x1653b3e4558 <col:14, col:67> 'widelimb':'int' <IntegralCast>
|   |   `-BinaryOperator 0x1653b3e4538 <col:14, col:67> 'unsigned long long' '+'
|   |     |-BinaryOperator 0x1653b304cd8 <col:14, col:35> 'unsigned long long' '*'
|   |     | |-ImplicitCastExpr 0x1653b304cc0 <col:14, col:31> 'unsigned long long' <IntegralCast>
|   |     | | `-ParenExpr 0x1653b304c68 <col:14, col:31> 'widelimb':'int'
|   |     | |   `-CStyleCastExpr 0x1653b304c40 <col:15, col:30> 'widelimb':'int' <IntegralCast>
|   |     | |     `-ImplicitCastExpr 0x1653b304c28 <col:26, col:30> 'limb':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   |     | |       `-ArraySubscriptExpr 0x1653b304bf8 <col:26, col:30> 'const limb':'const unsigned long long' lvalue
|   |     | |         |-ImplicitCastExpr 0x1653b304be0 <col:26> 'const limb *':'const limb *' <LValueToRValue>
|   |     | |         | `-DeclRefExpr 0x1653b304b98 <col:26> 'const limb *':'const limb *' lvalue ParmVar 0x1653b303f68 'in' 'const limb *':'const limb *'
|   |     | |         `-IntegerLiteral 0x1653b304bb8 <col:29> 'int' 0
|   |     | `-ImplicitCastExpr 0x1653b304ca8 <col:35> 'limb':'unsigned long long' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x1653b304c88 <col:35> 'limb':'unsigned long long' lvalue Var 0x1653b3041f8 'tmp2' 'limb':'unsigned long long'
|   |     `-BinaryOperator 0x1653b3e4518 <col:42, col:67> 'unsigned long long' '*'
|   |       |-ImplicitCastExpr 0x1653b3e4500 <col:42, col:59> 'unsigned long long' <IntegralCast>
|   |       | `-ParenExpr 0x1653b304dc8 <col:42, col:59> 'widelimb':'int'
|   |       |   `-CStyleCastExpr 0x1653b304da0 <col:43, col:58> 'widelimb':'int' <IntegralCast>
|   |       |     `-ImplicitCastExpr 0x1653b304d88 <col:54, col:58> 'limb':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   |       |       `-ArraySubscriptExpr 0x1653b304d58 <col:54, col:58> 'const limb':'const unsigned long long' lvalue
|   |       |         |-ImplicitCastExpr 0x1653b304d40 <col:54> 'const limb *':'const limb *' <LValueToRValue>
|   |       |         | `-DeclRefExpr 0x1653b304cf8 <col:54> 'const limb *':'const limb *' lvalue ParmVar 0x1653b303f68 'in' 'const limb *':'const limb *'
|   |       |         `-IntegerLiteral 0x1653b304d18 <col:57> 'int' 1
|   |       `-ImplicitCastExpr 0x1653b3e44e8 <col:63, col:67> 'limb':'unsigned long long' <LValueToRValue>
|   |         `-ArraySubscriptExpr 0x1653b3e44c8 <col:63, col:67> 'const limb':'const unsigned long long' lvalue
|   |           |-ImplicitCastExpr 0x1653b3e44b0 <col:63> 'const limb *':'const limb *' <LValueToRValue>
|   |           | `-DeclRefExpr 0x1653b304de8 <col:63> 'const limb *':'const limb *' lvalue ParmVar 0x1653b303f68 'in' 'const limb *':'const limb *'
|   |           `-IntegerLiteral 0x1653b304e08 <col:66> 'int' 1
|   |-BinaryOperator 0x1653b3e4908 <line:524:5, col:63> 'widelimb':'int' '='
|   | |-ArraySubscriptExpr 0x1653b3e45f0 <col:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x1653b3e45d8 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b3e4590 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x1653b303ef0 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x1653b3e45b0 <col:9> 'int' 3
|   | `-ImplicitCastExpr 0x1653b3e48f0 <col:14, col:63> 'widelimb':'int' <IntegralCast>
|   |   `-BinaryOperator 0x1653b3e48d0 <col:14, col:63> 'unsigned long long' '+'
|   |     |-BinaryOperator 0x1653b3e4750 <col:14, col:35> 'unsigned long long' '*'
|   |     | |-ImplicitCastExpr 0x1653b3e4738 <col:14, col:31> 'unsigned long long' <IntegralCast>
|   |     | | `-ParenExpr 0x1653b3e46e0 <col:14, col:31> 'widelimb':'int'
|   |     | |   `-CStyleCastExpr 0x1653b3e46b8 <col:15, col:30> 'widelimb':'int' <IntegralCast>
|   |     | |     `-ImplicitCastExpr 0x1653b3e46a0 <col:26, col:30> 'limb':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   |     | |       `-ArraySubscriptExpr 0x1653b3e4670 <col:26, col:30> 'const limb':'const unsigned long long' lvalue
|   |     | |         |-ImplicitCastExpr 0x1653b3e4658 <col:26> 'const limb *':'const limb *' <LValueToRValue>
|   |     | |         | `-DeclRefExpr 0x1653b3e4610 <col:26> 'const limb *':'const limb *' lvalue ParmVar 0x1653b303f68 'in' 'const limb *':'const limb *'
|   |     | |         `-IntegerLiteral 0x1653b3e4630 <col:29> 'int' 3
|   |     | `-ImplicitCastExpr 0x1653b3e4720 <col:35> 'limb':'unsigned long long' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x1653b3e4700 <col:35> 'limb':'unsigned long long' lvalue Var 0x1653b304108 'tmp0' 'limb':'unsigned long long'
|   |     `-BinaryOperator 0x1653b3e48b0 <col:42, col:63> 'unsigned long long' '*'
|   |       |-ImplicitCastExpr 0x1653b3e4898 <col:42, col:59> 'unsigned long long' <IntegralCast>
|   |       | `-ParenExpr 0x1653b3e4840 <col:42, col:59> 'widelimb':'int'
|   |       |   `-CStyleCastExpr 0x1653b3e4818 <col:43, col:58> 'widelimb':'int' <IntegralCast>
|   |       |     `-ImplicitCastExpr 0x1653b3e4800 <col:54, col:58> 'limb':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   |       |       `-ArraySubscriptExpr 0x1653b3e47d0 <col:54, col:58> 'const limb':'const unsigned long long' lvalue
|   |       |         |-ImplicitCastExpr 0x1653b3e47b8 <col:54> 'const limb *':'const limb *' <LValueToRValue>
|   |       |         | `-DeclRefExpr 0x1653b3e4770 <col:54> 'const limb *':'const limb *' lvalue ParmVar 0x1653b303f68 'in' 'const limb *':'const limb *'
|   |       |         `-IntegerLiteral 0x1653b3e4790 <col:57> 'int' 1
|   |       `-ImplicitCastExpr 0x1653b3e4880 <col:63> 'limb':'unsigned long long' <LValueToRValue>
|   |         `-DeclRefExpr 0x1653b3e4860 <col:63> 'limb':'unsigned long long' lvalue Var 0x1653b3041f8 'tmp2' 'limb':'unsigned long long'
|   |-BinaryOperator 0x1653b3e4d00 <line:525:5, col:67> 'widelimb':'int' '='
|   | |-ArraySubscriptExpr 0x1653b3e4988 <col:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x1653b3e4970 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b3e4928 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x1653b303ef0 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x1653b3e4948 <col:9> 'int' 4
|   | `-ImplicitCastExpr 0x1653b3e4ce8 <col:14, col:67> 'widelimb':'int' <IntegralCast>
|   |   `-BinaryOperator 0x1653b3e4cc8 <col:14, col:67> 'unsigned long long' '+'
|   |     |-BinaryOperator 0x1653b3e4ae8 <col:14, col:35> 'unsigned long long' '*'
|   |     | |-ImplicitCastExpr 0x1653b3e4ad0 <col:14, col:31> 'unsigned long long' <IntegralCast>
|   |     | | `-ParenExpr 0x1653b3e4a78 <col:14, col:31> 'widelimb':'int'
|   |     | |   `-CStyleCastExpr 0x1653b3e4a50 <col:15, col:30> 'widelimb':'int' <IntegralCast>
|   |     | |     `-ImplicitCastExpr 0x1653b3e4a38 <col:26, col:30> 'limb':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   |     | |       `-ArraySubscriptExpr 0x1653b3e4a08 <col:26, col:30> 'const limb':'const unsigned long long' lvalue
|   |     | |         |-ImplicitCastExpr 0x1653b3e49f0 <col:26> 'const limb *':'const limb *' <LValueToRValue>
|   |     | |         | `-DeclRefExpr 0x1653b3e49a8 <col:26> 'const limb *':'const limb *' lvalue ParmVar 0x1653b303f68 'in' 'const limb *':'const limb *'
|   |     | |         `-IntegerLiteral 0x1653b3e49c8 <col:29> 'int' 3
|   |     | `-ImplicitCastExpr 0x1653b3e4ab8 <col:35> 'limb':'unsigned long long' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x1653b3e4a98 <col:35> 'limb':'unsigned long long' lvalue Var 0x1653b304180 'tmp1' 'limb':'unsigned long long'
|   |     `-BinaryOperator 0x1653b3e4ca8 <col:42, col:67> 'unsigned long long' '*'
|   |       |-ImplicitCastExpr 0x1653b3e4c90 <col:42, col:59> 'unsigned long long' <IntegralCast>
|   |       | `-ParenExpr 0x1653b3e4bd8 <col:42, col:59> 'widelimb':'int'
|   |       |   `-CStyleCastExpr 0x1653b3e4bb0 <col:43, col:58> 'widelimb':'int' <IntegralCast>
|   |       |     `-ImplicitCastExpr 0x1653b3e4b98 <col:54, col:58> 'limb':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   |       |       `-ArraySubscriptExpr 0x1653b3e4b68 <col:54, col:58> 'const limb':'const unsigned long long' lvalue
|   |       |         |-ImplicitCastExpr 0x1653b3e4b50 <col:54> 'const limb *':'const limb *' <LValueToRValue>
|   |       |         | `-DeclRefExpr 0x1653b3e4b08 <col:54> 'const limb *':'const limb *' lvalue ParmVar 0x1653b303f68 'in' 'const limb *':'const limb *'
|   |       |         `-IntegerLiteral 0x1653b3e4b28 <col:57> 'int' 2
|   |       `-ImplicitCastExpr 0x1653b3e4c78 <col:63, col:67> 'limb':'unsigned long long' <LValueToRValue>
|   |         `-ArraySubscriptExpr 0x1653b3e4c58 <col:63, col:67> 'const limb':'const unsigned long long' lvalue
|   |           |-ImplicitCastExpr 0x1653b3e4c40 <col:63> 'const limb *':'const limb *' <LValueToRValue>
|   |           | `-DeclRefExpr 0x1653b3e4bf8 <col:63> 'const limb *':'const limb *' lvalue ParmVar 0x1653b303f68 'in' 'const limb *':'const limb *'
|   |           `-IntegerLiteral 0x1653b3e4c18 <col:66> 'int' 2
|   |-BinaryOperator 0x1653b3e4f18 <line:526:5, col:35> 'widelimb':'int' '='
|   | |-ArraySubscriptExpr 0x1653b3e4d80 <col:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x1653b3e4d68 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b3e4d20 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x1653b303ef0 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x1653b3e4d40 <col:9> 'int' 5
|   | `-ImplicitCastExpr 0x1653b3e4f00 <col:14, col:35> 'widelimb':'int' <IntegralCast>
|   |   `-BinaryOperator 0x1653b3e4ee0 <col:14, col:35> 'unsigned long long' '*'
|   |     |-ImplicitCastExpr 0x1653b3e4ec8 <col:14, col:31> 'unsigned long long' <IntegralCast>
|   |     | `-ParenExpr 0x1653b3e4e70 <col:14, col:31> 'widelimb':'int'
|   |     |   `-CStyleCastExpr 0x1653b3e4e48 <col:15, col:30> 'widelimb':'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x1653b3e4e30 <col:26, col:30> 'limb':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   |     |       `-ArraySubscriptExpr 0x1653b3e4e00 <col:26, col:30> 'const limb':'const unsigned long long' lvalue
|   |     |         |-ImplicitCastExpr 0x1653b3e4de8 <col:26> 'const limb *':'const limb *' <LValueToRValue>
|   |     |         | `-DeclRefExpr 0x1653b3e4da0 <col:26> 'const limb *':'const limb *' lvalue ParmVar 0x1653b303f68 'in' 'const limb *':'const limb *'
|   |     |         `-IntegerLiteral 0x1653b3e4dc0 <col:29> 'int' 3
|   |     `-ImplicitCastExpr 0x1653b3e4eb0 <col:35> 'limb':'unsigned long long' <LValueToRValue>
|   |       `-DeclRefExpr 0x1653b3e4e90 <col:35> 'limb':'unsigned long long' lvalue Var 0x1653b3041f8 'tmp2' 'limb':'unsigned long long'
|   `-BinaryOperator 0x1653b3e5190 <line:527:5, col:39> 'widelimb':'int' '='
|     |-ArraySubscriptExpr 0x1653b3e4f98 <col:5, col:10> 'widelimb':'int' lvalue
|     | |-ImplicitCastExpr 0x1653b3e4f80 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|     | | `-DeclRefExpr 0x1653b3e4f38 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x1653b303ef0 'out' 'widelimb *':'widelimb *'
|     | `-IntegerLiteral 0x1653b3e4f58 <col:9> 'int' 6
|     `-ImplicitCastExpr 0x1653b3e5178 <col:14, col:39> 'widelimb':'int' <IntegralCast>
|       `-BinaryOperator 0x1653b3e5158 <col:14, col:39> 'unsigned long long' '*'
|         |-ImplicitCastExpr 0x1653b3e5140 <col:14, col:31> 'unsigned long long' <IntegralCast>
|         | `-ParenExpr 0x1653b3e5088 <col:14, col:31> 'widelimb':'int'
|         |   `-CStyleCastExpr 0x1653b3e5060 <col:15, col:30> 'widelimb':'int' <IntegralCast>
|         |     `-ImplicitCastExpr 0x1653b3e5048 <col:26, col:30> 'limb':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|         |       `-ArraySubscriptExpr 0x1653b3e5018 <col:26, col:30> 'const limb':'const unsigned long long' lvalue
|         |         |-ImplicitCastExpr 0x1653b3e5000 <col:26> 'const limb *':'const limb *' <LValueToRValue>
|         |         | `-DeclRefExpr 0x1653b3e4fb8 <col:26> 'const limb *':'const limb *' lvalue ParmVar 0x1653b303f68 'in' 'const limb *':'const limb *'
|         |         `-IntegerLiteral 0x1653b3e4fd8 <col:29> 'int' 3
|         `-ImplicitCastExpr 0x1653b3e5128 <col:35, col:39> 'limb':'unsigned long long' <LValueToRValue>
|           `-ArraySubscriptExpr 0x1653b3e5108 <col:35, col:39> 'const limb':'const unsigned long long' lvalue
|             |-ImplicitCastExpr 0x1653b3e50f0 <col:35> 'const limb *':'const limb *' <LValueToRValue>
|             | `-DeclRefExpr 0x1653b3e50a8 <col:35> 'const limb *':'const limb *' lvalue ParmVar 0x1653b303f68 'in' 'const limb *':'const limb *'
|             `-IntegerLiteral 0x1653b3e50c8 <col:38> 'int' 3
|-FunctionDecl 0x1653b3e5488 <line:531:1, line:543:1> line:531:13 used felem_mul 'void (widelimb *, const limb *, const limb *)' static
| |-ParmVarDecl 0x1653b3e5228 <col:23, col:33> col:33 used out 'widelimb *':'widelimb *'
| |-ParmVarDecl 0x1653b3e52a0 <col:38, col:50> col:50 used in1 'const limb *':'const limb *'
| |-ParmVarDecl 0x1653b3e5318 <col:55, col:67> col:67 used in2 'const limb *':'const limb *'
| `-CompoundStmt 0x1653b3f5810 <line:532:1, line:543:1>
|   |-BinaryOperator 0x1653b3e57b0 <line:533:5, col:41> 'widelimb':'int' '='
|   | |-ArraySubscriptExpr 0x1653b3e55b8 <col:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x1653b3e55a0 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b3e5558 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x1653b3e5228 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x1653b3e5578 <col:9> 'int' 0
|   | `-ImplicitCastExpr 0x1653b3e5798 <col:14, col:41> 'widelimb':'int' <IntegralCast>
|   |   `-BinaryOperator 0x1653b3e5778 <col:14, col:41> 'unsigned long long' '*'
|   |     |-ImplicitCastExpr 0x1653b3e5760 <col:14, col:32> 'unsigned long long' <IntegralCast>
|   |     | `-ParenExpr 0x1653b3e56a8 <col:14, col:32> 'widelimb':'int'
|   |     |   `-CStyleCastExpr 0x1653b3e5680 <col:15, col:31> 'widelimb':'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x1653b3e5668 <col:26, col:31> 'limb':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   |     |       `-ArraySubscriptExpr 0x1653b3e5638 <col:26, col:31> 'const limb':'const unsigned long long' lvalue
|   |     |         |-ImplicitCastExpr 0x1653b3e5620 <col:26> 'const limb *':'const limb *' <LValueToRValue>
|   |     |         | `-DeclRefExpr 0x1653b3e55d8 <col:26> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3e52a0 'in1' 'const limb *':'const limb *'
|   |     |         `-IntegerLiteral 0x1653b3e55f8 <col:30> 'int' 0
|   |     `-ImplicitCastExpr 0x1653b3e5748 <col:36, col:41> 'limb':'unsigned long long' <LValueToRValue>
|   |       `-ArraySubscriptExpr 0x1653b3e5728 <col:36, col:41> 'const limb':'const unsigned long long' lvalue
|   |         |-ImplicitCastExpr 0x1653b3e5710 <col:36> 'const limb *':'const limb *' <LValueToRValue>
|   |         | `-DeclRefExpr 0x1653b3e56c8 <col:36> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3e5318 'in2' 'const limb *':'const limb *'
|   |         `-IntegerLiteral 0x1653b3e56e8 <col:40> 'int' 0
|   |-BinaryOperator 0x1653b3e5c08 <line:534:5, col:72> 'widelimb':'int' '='
|   | |-ArraySubscriptExpr 0x1653b3e5830 <col:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x1653b3e5818 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b3e57d0 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x1653b3e5228 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x1653b3e57f0 <col:9> 'int' 1
|   | `-ImplicitCastExpr 0x1653b3e5bf0 <col:14, col:72> 'widelimb':'int' <IntegralCast>
|   |   `-BinaryOperator 0x1653b3e5bd0 <col:14, col:72> 'unsigned long long' '+'
|   |     |-BinaryOperator 0x1653b3e59f0 <col:14, col:41> 'unsigned long long' '*'
|   |     | |-ImplicitCastExpr 0x1653b3e59d8 <col:14, col:32> 'unsigned long long' <IntegralCast>
|   |     | | `-ParenExpr 0x1653b3e5920 <col:14, col:32> 'widelimb':'int'
|   |     | |   `-CStyleCastExpr 0x1653b3e58f8 <col:15, col:31> 'widelimb':'int' <IntegralCast>
|   |     | |     `-ImplicitCastExpr 0x1653b3e58e0 <col:26, col:31> 'limb':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   |     | |       `-ArraySubscriptExpr 0x1653b3e58b0 <col:26, col:31> 'const limb':'const unsigned long long' lvalue
|   |     | |         |-ImplicitCastExpr 0x1653b3e5898 <col:26> 'const limb *':'const limb *' <LValueToRValue>
|   |     | |         | `-DeclRefExpr 0x1653b3e5850 <col:26> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3e52a0 'in1' 'const limb *':'const limb *'
|   |     | |         `-IntegerLiteral 0x1653b3e5870 <col:30> 'int' 0
|   |     | `-ImplicitCastExpr 0x1653b3e59c0 <col:36, col:41> 'limb':'unsigned long long' <LValueToRValue>
|   |     |   `-ArraySubscriptExpr 0x1653b3e59a0 <col:36, col:41> 'const limb':'const unsigned long long' lvalue
|   |     |     |-ImplicitCastExpr 0x1653b3e5988 <col:36> 'const limb *':'const limb *' <LValueToRValue>
|   |     |     | `-DeclRefExpr 0x1653b3e5940 <col:36> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3e5318 'in2' 'const limb *':'const limb *'
|   |     |     `-IntegerLiteral 0x1653b3e5960 <col:40> 'int' 1
|   |     `-BinaryOperator 0x1653b3e5bb0 <col:45, col:72> 'unsigned long long' '*'
|   |       |-ImplicitCastExpr 0x1653b3e5b98 <col:45, col:63> 'unsigned long long' <IntegralCast>
|   |       | `-ParenExpr 0x1653b3e5ae0 <col:45, col:63> 'widelimb':'int'
|   |       |   `-CStyleCastExpr 0x1653b3e5ab8 <col:46, col:62> 'widelimb':'int' <IntegralCast>
|   |       |     `-ImplicitCastExpr 0x1653b3e5aa0 <col:57, col:62> 'limb':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   |       |       `-ArraySubscriptExpr 0x1653b3e5a70 <col:57, col:62> 'const limb':'const unsigned long long' lvalue
|   |       |         |-ImplicitCastExpr 0x1653b3e5a58 <col:57> 'const limb *':'const limb *' <LValueToRValue>
|   |       |         | `-DeclRefExpr 0x1653b3e5a10 <col:57> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3e52a0 'in1' 'const limb *':'const limb *'
|   |       |         `-IntegerLiteral 0x1653b3e5a30 <col:61> 'int' 1
|   |       `-ImplicitCastExpr 0x1653b3e5b80 <col:67, col:72> 'limb':'unsigned long long' <LValueToRValue>
|   |         `-ArraySubscriptExpr 0x1653b3e5b60 <col:67, col:72> 'const limb':'const unsigned long long' lvalue
|   |           |-ImplicitCastExpr 0x1653b3e5b48 <col:67> 'const limb *':'const limb *' <LValueToRValue>
|   |           | `-DeclRefExpr 0x1653b3e5b00 <col:67> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3e5318 'in2' 'const limb *':'const limb *'
|   |           `-IntegerLiteral 0x1653b3e5b20 <col:71> 'int' 0
|   |-BinaryOperator 0x1653b3e6240 <line:535:5, line:536:41> 'widelimb':'int' '='
|   | |-ArraySubscriptExpr 0x1653b3e5c88 <line:535:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x1653b3e5c70 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b3e5c28 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x1653b3e5228 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x1653b3e5c48 <col:9> 'int' 2
|   | `-ImplicitCastExpr 0x1653b3e6228 <col:14, line:536:41> 'widelimb':'int' <IntegralCast>
|   |   `-BinaryOperator 0x1653b3e6208 <line:535:14, line:536:41> 'unsigned long long' '+'
|   |     |-BinaryOperator 0x1653b3e6028 <line:535:14, col:72> 'unsigned long long' '+'
|   |     | |-BinaryOperator 0x1653b3e5e48 <col:14, col:41> 'unsigned long long' '*'
|   |     | | |-ImplicitCastExpr 0x1653b3e5e30 <col:14, col:32> 'unsigned long long' <IntegralCast>
|   |     | | | `-ParenExpr 0x1653b3e5d78 <col:14, col:32> 'widelimb':'int'
|   |     | | |   `-CStyleCastExpr 0x1653b3e5d50 <col:15, col:31> 'widelimb':'int' <IntegralCast>
|   |     | | |     `-ImplicitCastExpr 0x1653b3e5d38 <col:26, col:31> 'limb':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   |     | | |       `-ArraySubscriptExpr 0x1653b3e5d08 <col:26, col:31> 'const limb':'const unsigned long long' lvalue
|   |     | | |         |-ImplicitCastExpr 0x1653b3e5cf0 <col:26> 'const limb *':'const limb *' <LValueToRValue>
|   |     | | |         | `-DeclRefExpr 0x1653b3e5ca8 <col:26> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3e52a0 'in1' 'const limb *':'const limb *'
|   |     | | |         `-IntegerLiteral 0x1653b3e5cc8 <col:30> 'int' 0
|   |     | | `-ImplicitCastExpr 0x1653b3e5e18 <col:36, col:41> 'limb':'unsigned long long' <LValueToRValue>
|   |     | |   `-ArraySubscriptExpr 0x1653b3e5df8 <col:36, col:41> 'const limb':'const unsigned long long' lvalue
|   |     | |     |-ImplicitCastExpr 0x1653b3e5de0 <col:36> 'const limb *':'const limb *' <LValueToRValue>
|   |     | |     | `-DeclRefExpr 0x1653b3e5d98 <col:36> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3e5318 'in2' 'const limb *':'const limb *'
|   |     | |     `-IntegerLiteral 0x1653b3e5db8 <col:40> 'int' 2
|   |     | `-BinaryOperator 0x1653b3e6008 <col:45, col:72> 'unsigned long long' '*'
|   |     |   |-ImplicitCastExpr 0x1653b3e5ff0 <col:45, col:63> 'unsigned long long' <IntegralCast>
|   |     |   | `-ParenExpr 0x1653b3e5f38 <col:45, col:63> 'widelimb':'int'
|   |     |   |   `-CStyleCastExpr 0x1653b3e5f10 <col:46, col:62> 'widelimb':'int' <IntegralCast>
|   |     |   |     `-ImplicitCastExpr 0x1653b3e5ef8 <col:57, col:62> 'limb':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   |     |   |       `-ArraySubscriptExpr 0x1653b3e5ec8 <col:57, col:62> 'const limb':'const unsigned long long' lvalue
|   |     |   |         |-ImplicitCastExpr 0x1653b3e5eb0 <col:57> 'const limb *':'const limb *' <LValueToRValue>
|   |     |   |         | `-DeclRefExpr 0x1653b3e5e68 <col:57> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3e52a0 'in1' 'const limb *':'const limb *'
|   |     |   |         `-IntegerLiteral 0x1653b3e5e88 <col:61> 'int' 1
|   |     |   `-ImplicitCastExpr 0x1653b3e5fd8 <col:67, col:72> 'limb':'unsigned long long' <LValueToRValue>
|   |     |     `-ArraySubscriptExpr 0x1653b3e5fb8 <col:67, col:72> 'const limb':'const unsigned long long' lvalue
|   |     |       |-ImplicitCastExpr 0x1653b3e5fa0 <col:67> 'const limb *':'const limb *' <LValueToRValue>
|   |     |       | `-DeclRefExpr 0x1653b3e5f58 <col:67> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3e5318 'in2' 'const limb *':'const limb *'
|   |     |       `-IntegerLiteral 0x1653b3e5f78 <col:71> 'int' 1
|   |     `-BinaryOperator 0x1653b3e61e8 <line:536:14, col:41> 'unsigned long long' '*'
|   |       |-ImplicitCastExpr 0x1653b3e61d0 <col:14, col:32> 'unsigned long long' <IntegralCast>
|   |       | `-ParenExpr 0x1653b3e6118 <col:14, col:32> 'widelimb':'int'
|   |       |   `-CStyleCastExpr 0x1653b3e60f0 <col:15, col:31> 'widelimb':'int' <IntegralCast>
|   |       |     `-ImplicitCastExpr 0x1653b3e60d8 <col:26, col:31> 'limb':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   |       |       `-ArraySubscriptExpr 0x1653b3e60a8 <col:26, col:31> 'const limb':'const unsigned long long' lvalue
|   |       |         |-ImplicitCastExpr 0x1653b3e6090 <col:26> 'const limb *':'const limb *' <LValueToRValue>
|   |       |         | `-DeclRefExpr 0x1653b3e6048 <col:26> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3e52a0 'in1' 'const limb *':'const limb *'
|   |       |         `-IntegerLiteral 0x1653b3e6068 <col:30> 'int' 2
|   |       `-ImplicitCastExpr 0x1653b3e61b8 <col:36, col:41> 'limb':'unsigned long long' <LValueToRValue>
|   |         `-ArraySubscriptExpr 0x1653b3e6198 <col:36, col:41> 'const limb':'const unsigned long long' lvalue
|   |           |-ImplicitCastExpr 0x1653b3e6180 <col:36> 'const limb *':'const limb *' <LValueToRValue>
|   |           | `-DeclRefExpr 0x1653b3e6138 <col:36> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3e5318 'in2' 'const limb *':'const limb *'
|   |           `-IntegerLiteral 0x1653b3e6158 <col:40> 'int' 0
|   |-BinaryOperator 0x1653b3f4ae8 <line:537:5, line:538:72> 'widelimb':'int' '='
|   | |-ArraySubscriptExpr 0x1653b3e62c0 <line:537:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x1653b3e62a8 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b3e6260 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x1653b3e5228 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x1653b3e6280 <col:9> 'int' 3
|   | `-ImplicitCastExpr 0x1653b3f4ad0 <col:14, line:538:72> 'widelimb':'int' <IntegralCast>
|   |   `-BinaryOperator 0x1653b3f4ab0 <line:537:14, line:538:72> 'unsigned long long' '+'
|   |     |-BinaryOperator 0x1653b3f48d0 <line:537:14, line:538:41> 'unsigned long long' '+'
|   |     | |-BinaryOperator 0x1653b3f46f0 <line:537:14, col:72> 'unsigned long long' '+'
|   |     | | |-BinaryOperator 0x1653b3e6480 <col:14, col:41> 'unsigned long long' '*'
|   |     | | | |-ImplicitCastExpr 0x1653b3e6468 <col:14, col:32> 'unsigned long long' <IntegralCast>
|   |     | | | | `-ParenExpr 0x1653b3e63b0 <col:14, col:32> 'widelimb':'int'
|   |     | | | |   `-CStyleCastExpr 0x1653b3e6388 <col:15, col:31> 'widelimb':'int' <IntegralCast>
|   |     | | | |     `-ImplicitCastExpr 0x1653b3e6370 <col:26, col:31> 'limb':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   |     | | | |       `-ArraySubscriptExpr 0x1653b3e6340 <col:26, col:31> 'const limb':'const unsigned long long' lvalue
|   |     | | | |         |-ImplicitCastExpr 0x1653b3e6328 <col:26> 'const limb *':'const limb *' <LValueToRValue>
|   |     | | | |         | `-DeclRefExpr 0x1653b3e62e0 <col:26> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3e52a0 'in1' 'const limb *':'const limb *'
|   |     | | | |         `-IntegerLiteral 0x1653b3e6300 <col:30> 'int' 0
|   |     | | | `-ImplicitCastExpr 0x1653b3e6450 <col:36, col:41> 'limb':'unsigned long long' <LValueToRValue>
|   |     | | |   `-ArraySubscriptExpr 0x1653b3e6430 <col:36, col:41> 'const limb':'const unsigned long long' lvalue
|   |     | | |     |-ImplicitCastExpr 0x1653b3e6418 <col:36> 'const limb *':'const limb *' <LValueToRValue>
|   |     | | |     | `-DeclRefExpr 0x1653b3e63d0 <col:36> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3e5318 'in2' 'const limb *':'const limb *'
|   |     | | |     `-IntegerLiteral 0x1653b3e63f0 <col:40> 'int' 3
|   |     | | `-BinaryOperator 0x1653b3f46d0 <col:45, col:72> 'unsigned long long' '*'
|   |     | |   |-ImplicitCastExpr 0x1653b3f46b8 <col:45, col:63> 'unsigned long long' <IntegralCast>
|   |     | |   | `-ParenExpr 0x1653b3f4600 <col:45, col:63> 'widelimb':'int'
|   |     | |   |   `-CStyleCastExpr 0x1653b3f45d8 <col:46, col:62> 'widelimb':'int' <IntegralCast>
|   |     | |   |     `-ImplicitCastExpr 0x1653b3f45c0 <col:57, col:62> 'limb':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   |     | |   |       `-ArraySubscriptExpr 0x1653b3f4590 <col:57, col:62> 'const limb':'const unsigned long long' lvalue
|   |     | |   |         |-ImplicitCastExpr 0x1653b3f4578 <col:57> 'const limb *':'const limb *' <LValueToRValue>
|   |     | |   |         | `-DeclRefExpr 0x1653b3f4530 <col:57> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3e52a0 'in1' 'const limb *':'const limb *'
|   |     | |   |         `-IntegerLiteral 0x1653b3f4550 <col:61> 'int' 1
|   |     | |   `-ImplicitCastExpr 0x1653b3f46a0 <col:67, col:72> 'limb':'unsigned long long' <LValueToRValue>
|   |     | |     `-ArraySubscriptExpr 0x1653b3f4680 <col:67, col:72> 'const limb':'const unsigned long long' lvalue
|   |     | |       |-ImplicitCastExpr 0x1653b3f4668 <col:67> 'const limb *':'const limb *' <LValueToRValue>
|   |     | |       | `-DeclRefExpr 0x1653b3f4620 <col:67> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3e5318 'in2' 'const limb *':'const limb *'
|   |     | |       `-IntegerLiteral 0x1653b3f4640 <col:71> 'int' 2
|   |     | `-BinaryOperator 0x1653b3f48b0 <line:538:14, col:41> 'unsigned long long' '*'
|   |     |   |-ImplicitCastExpr 0x1653b3f4898 <col:14, col:32> 'unsigned long long' <IntegralCast>
|   |     |   | `-ParenExpr 0x1653b3f47e0 <col:14, col:32> 'widelimb':'int'
|   |     |   |   `-CStyleCastExpr 0x1653b3f47b8 <col:15, col:31> 'widelimb':'int' <IntegralCast>
|   |     |   |     `-ImplicitCastExpr 0x1653b3f47a0 <col:26, col:31> 'limb':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   |     |   |       `-ArraySubscriptExpr 0x1653b3f4770 <col:26, col:31> 'const limb':'const unsigned long long' lvalue
|   |     |   |         |-ImplicitCastExpr 0x1653b3f4758 <col:26> 'const limb *':'const limb *' <LValueToRValue>
|   |     |   |         | `-DeclRefExpr 0x1653b3f4710 <col:26> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3e52a0 'in1' 'const limb *':'const limb *'
|   |     |   |         `-IntegerLiteral 0x1653b3f4730 <col:30> 'int' 2
|   |     |   `-ImplicitCastExpr 0x1653b3f4880 <col:36, col:41> 'limb':'unsigned long long' <LValueToRValue>
|   |     |     `-ArraySubscriptExpr 0x1653b3f4860 <col:36, col:41> 'const limb':'const unsigned long long' lvalue
|   |     |       |-ImplicitCastExpr 0x1653b3f4848 <col:36> 'const limb *':'const limb *' <LValueToRValue>
|   |     |       | `-DeclRefExpr 0x1653b3f4800 <col:36> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3e5318 'in2' 'const limb *':'const limb *'
|   |     |       `-IntegerLiteral 0x1653b3f4820 <col:40> 'int' 1
|   |     `-BinaryOperator 0x1653b3f4a90 <col:45, col:72> 'unsigned long long' '*'
|   |       |-ImplicitCastExpr 0x1653b3f4a78 <col:45, col:63> 'unsigned long long' <IntegralCast>
|   |       | `-ParenExpr 0x1653b3f49c0 <col:45, col:63> 'widelimb':'int'
|   |       |   `-CStyleCastExpr 0x1653b3f4998 <col:46, col:62> 'widelimb':'int' <IntegralCast>
|   |       |     `-ImplicitCastExpr 0x1653b3f4980 <col:57, col:62> 'limb':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   |       |       `-ArraySubscriptExpr 0x1653b3f4950 <col:57, col:62> 'const limb':'const unsigned long long' lvalue
|   |       |         |-ImplicitCastExpr 0x1653b3f4938 <col:57> 'const limb *':'const limb *' <LValueToRValue>
|   |       |         | `-DeclRefExpr 0x1653b3f48f0 <col:57> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3e52a0 'in1' 'const limb *':'const limb *'
|   |       |         `-IntegerLiteral 0x1653b3f4910 <col:61> 'int' 3
|   |       `-ImplicitCastExpr 0x1653b3f4a60 <col:67, col:72> 'limb':'unsigned long long' <LValueToRValue>
|   |         `-ArraySubscriptExpr 0x1653b3f4a40 <col:67, col:72> 'const limb':'const unsigned long long' lvalue
|   |           |-ImplicitCastExpr 0x1653b3f4a28 <col:67> 'const limb *':'const limb *' <LValueToRValue>
|   |           | `-DeclRefExpr 0x1653b3f49e0 <col:67> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3e5318 'in2' 'const limb *':'const limb *'
|   |           `-IntegerLiteral 0x1653b3f4a00 <col:71> 'int' 0
|   |-BinaryOperator 0x1653b3f5120 <line:539:5, line:540:41> 'widelimb':'int' '='
|   | |-ArraySubscriptExpr 0x1653b3f4b68 <line:539:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x1653b3f4b50 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b3f4b08 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x1653b3e5228 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x1653b3f4b28 <col:9> 'int' 4
|   | `-ImplicitCastExpr 0x1653b3f5108 <col:14, line:540:41> 'widelimb':'int' <IntegralCast>
|   |   `-BinaryOperator 0x1653b3f50e8 <line:539:14, line:540:41> 'unsigned long long' '+'
|   |     |-BinaryOperator 0x1653b3f4f08 <line:539:14, col:72> 'unsigned long long' '+'
|   |     | |-BinaryOperator 0x1653b3f4d28 <col:14, col:41> 'unsigned long long' '*'
|   |     | | |-ImplicitCastExpr 0x1653b3f4d10 <col:14, col:32> 'unsigned long long' <IntegralCast>
|   |     | | | `-ParenExpr 0x1653b3f4c58 <col:14, col:32> 'widelimb':'int'
|   |     | | |   `-CStyleCastExpr 0x1653b3f4c30 <col:15, col:31> 'widelimb':'int' <IntegralCast>
|   |     | | |     `-ImplicitCastExpr 0x1653b3f4c18 <col:26, col:31> 'limb':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   |     | | |       `-ArraySubscriptExpr 0x1653b3f4be8 <col:26, col:31> 'const limb':'const unsigned long long' lvalue
|   |     | | |         |-ImplicitCastExpr 0x1653b3f4bd0 <col:26> 'const limb *':'const limb *' <LValueToRValue>
|   |     | | |         | `-DeclRefExpr 0x1653b3f4b88 <col:26> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3e52a0 'in1' 'const limb *':'const limb *'
|   |     | | |         `-IntegerLiteral 0x1653b3f4ba8 <col:30> 'int' 1
|   |     | | `-ImplicitCastExpr 0x1653b3f4cf8 <col:36, col:41> 'limb':'unsigned long long' <LValueToRValue>
|   |     | |   `-ArraySubscriptExpr 0x1653b3f4cd8 <col:36, col:41> 'const limb':'const unsigned long long' lvalue
|   |     | |     |-ImplicitCastExpr 0x1653b3f4cc0 <col:36> 'const limb *':'const limb *' <LValueToRValue>
|   |     | |     | `-DeclRefExpr 0x1653b3f4c78 <col:36> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3e5318 'in2' 'const limb *':'const limb *'
|   |     | |     `-IntegerLiteral 0x1653b3f4c98 <col:40> 'int' 3
|   |     | `-BinaryOperator 0x1653b3f4ee8 <col:45, col:72> 'unsigned long long' '*'
|   |     |   |-ImplicitCastExpr 0x1653b3f4ed0 <col:45, col:63> 'unsigned long long' <IntegralCast>
|   |     |   | `-ParenExpr 0x1653b3f4e18 <col:45, col:63> 'widelimb':'int'
|   |     |   |   `-CStyleCastExpr 0x1653b3f4df0 <col:46, col:62> 'widelimb':'int' <IntegralCast>
|   |     |   |     `-ImplicitCastExpr 0x1653b3f4dd8 <col:57, col:62> 'limb':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   |     |   |       `-ArraySubscriptExpr 0x1653b3f4da8 <col:57, col:62> 'const limb':'const unsigned long long' lvalue
|   |     |   |         |-ImplicitCastExpr 0x1653b3f4d90 <col:57> 'const limb *':'const limb *' <LValueToRValue>
|   |     |   |         | `-DeclRefExpr 0x1653b3f4d48 <col:57> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3e52a0 'in1' 'const limb *':'const limb *'
|   |     |   |         `-IntegerLiteral 0x1653b3f4d68 <col:61> 'int' 2
|   |     |   `-ImplicitCastExpr 0x1653b3f4eb8 <col:67, col:72> 'limb':'unsigned long long' <LValueToRValue>
|   |     |     `-ArraySubscriptExpr 0x1653b3f4e98 <col:67, col:72> 'const limb':'const unsigned long long' lvalue
|   |     |       |-ImplicitCastExpr 0x1653b3f4e80 <col:67> 'const limb *':'const limb *' <LValueToRValue>
|   |     |       | `-DeclRefExpr 0x1653b3f4e38 <col:67> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3e5318 'in2' 'const limb *':'const limb *'
|   |     |       `-IntegerLiteral 0x1653b3f4e58 <col:71> 'int' 2
|   |     `-BinaryOperator 0x1653b3f50c8 <line:540:14, col:41> 'unsigned long long' '*'
|   |       |-ImplicitCastExpr 0x1653b3f50b0 <col:14, col:32> 'unsigned long long' <IntegralCast>
|   |       | `-ParenExpr 0x1653b3f4ff8 <col:14, col:32> 'widelimb':'int'
|   |       |   `-CStyleCastExpr 0x1653b3f4fd0 <col:15, col:31> 'widelimb':'int' <IntegralCast>
|   |       |     `-ImplicitCastExpr 0x1653b3f4fb8 <col:26, col:31> 'limb':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   |       |       `-ArraySubscriptExpr 0x1653b3f4f88 <col:26, col:31> 'const limb':'const unsigned long long' lvalue
|   |       |         |-ImplicitCastExpr 0x1653b3f4f70 <col:26> 'const limb *':'const limb *' <LValueToRValue>
|   |       |         | `-DeclRefExpr 0x1653b3f4f28 <col:26> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3e52a0 'in1' 'const limb *':'const limb *'
|   |       |         `-IntegerLiteral 0x1653b3f4f48 <col:30> 'int' 3
|   |       `-ImplicitCastExpr 0x1653b3f5098 <col:36, col:41> 'limb':'unsigned long long' <LValueToRValue>
|   |         `-ArraySubscriptExpr 0x1653b3f5078 <col:36, col:41> 'const limb':'const unsigned long long' lvalue
|   |           |-ImplicitCastExpr 0x1653b3f5060 <col:36> 'const limb *':'const limb *' <LValueToRValue>
|   |           | `-DeclRefExpr 0x1653b3f5018 <col:36> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3e5318 'in2' 'const limb *':'const limb *'
|   |           `-IntegerLiteral 0x1653b3f5038 <col:40> 'int' 1
|   |-BinaryOperator 0x1653b3f5578 <line:541:5, col:72> 'widelimb':'int' '='
|   | |-ArraySubscriptExpr 0x1653b3f51a0 <col:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x1653b3f5188 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b3f5140 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x1653b3e5228 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x1653b3f5160 <col:9> 'int' 5
|   | `-ImplicitCastExpr 0x1653b3f5560 <col:14, col:72> 'widelimb':'int' <IntegralCast>
|   |   `-BinaryOperator 0x1653b3f5540 <col:14, col:72> 'unsigned long long' '+'
|   |     |-BinaryOperator 0x1653b3f5360 <col:14, col:41> 'unsigned long long' '*'
|   |     | |-ImplicitCastExpr 0x1653b3f5348 <col:14, col:32> 'unsigned long long' <IntegralCast>
|   |     | | `-ParenExpr 0x1653b3f5290 <col:14, col:32> 'widelimb':'int'
|   |     | |   `-CStyleCastExpr 0x1653b3f5268 <col:15, col:31> 'widelimb':'int' <IntegralCast>
|   |     | |     `-ImplicitCastExpr 0x1653b3f5250 <col:26, col:31> 'limb':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   |     | |       `-ArraySubscriptExpr 0x1653b3f5220 <col:26, col:31> 'const limb':'const unsigned long long' lvalue
|   |     | |         |-ImplicitCastExpr 0x1653b3f5208 <col:26> 'const limb *':'const limb *' <LValueToRValue>
|   |     | |         | `-DeclRefExpr 0x1653b3f51c0 <col:26> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3e52a0 'in1' 'const limb *':'const limb *'
|   |     | |         `-IntegerLiteral 0x1653b3f51e0 <col:30> 'int' 2
|   |     | `-ImplicitCastExpr 0x1653b3f5330 <col:36, col:41> 'limb':'unsigned long long' <LValueToRValue>
|   |     |   `-ArraySubscriptExpr 0x1653b3f5310 <col:36, col:41> 'const limb':'const unsigned long long' lvalue
|   |     |     |-ImplicitCastExpr 0x1653b3f52f8 <col:36> 'const limb *':'const limb *' <LValueToRValue>
|   |     |     | `-DeclRefExpr 0x1653b3f52b0 <col:36> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3e5318 'in2' 'const limb *':'const limb *'
|   |     |     `-IntegerLiteral 0x1653b3f52d0 <col:40> 'int' 3
|   |     `-BinaryOperator 0x1653b3f5520 <col:45, col:72> 'unsigned long long' '*'
|   |       |-ImplicitCastExpr 0x1653b3f5508 <col:45, col:63> 'unsigned long long' <IntegralCast>
|   |       | `-ParenExpr 0x1653b3f5450 <col:45, col:63> 'widelimb':'int'
|   |       |   `-CStyleCastExpr 0x1653b3f5428 <col:46, col:62> 'widelimb':'int' <IntegralCast>
|   |       |     `-ImplicitCastExpr 0x1653b3f5410 <col:57, col:62> 'limb':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   |       |       `-ArraySubscriptExpr 0x1653b3f53e0 <col:57, col:62> 'const limb':'const unsigned long long' lvalue
|   |       |         |-ImplicitCastExpr 0x1653b3f53c8 <col:57> 'const limb *':'const limb *' <LValueToRValue>
|   |       |         | `-DeclRefExpr 0x1653b3f5380 <col:57> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3e52a0 'in1' 'const limb *':'const limb *'
|   |       |         `-IntegerLiteral 0x1653b3f53a0 <col:61> 'int' 3
|   |       `-ImplicitCastExpr 0x1653b3f54f0 <col:67, col:72> 'limb':'unsigned long long' <LValueToRValue>
|   |         `-ArraySubscriptExpr 0x1653b3f54d0 <col:67, col:72> 'const limb':'const unsigned long long' lvalue
|   |           |-ImplicitCastExpr 0x1653b3f54b8 <col:67> 'const limb *':'const limb *' <LValueToRValue>
|   |           | `-DeclRefExpr 0x1653b3f5470 <col:67> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3e5318 'in2' 'const limb *':'const limb *'
|   |           `-IntegerLiteral 0x1653b3f5490 <col:71> 'int' 2
|   `-BinaryOperator 0x1653b3f57f0 <line:542:5, col:41> 'widelimb':'int' '='
|     |-ArraySubscriptExpr 0x1653b3f55f8 <col:5, col:10> 'widelimb':'int' lvalue
|     | |-ImplicitCastExpr 0x1653b3f55e0 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|     | | `-DeclRefExpr 0x1653b3f5598 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x1653b3e5228 'out' 'widelimb *':'widelimb *'
|     | `-IntegerLiteral 0x1653b3f55b8 <col:9> 'int' 6
|     `-ImplicitCastExpr 0x1653b3f57d8 <col:14, col:41> 'widelimb':'int' <IntegralCast>
|       `-BinaryOperator 0x1653b3f57b8 <col:14, col:41> 'unsigned long long' '*'
|         |-ImplicitCastExpr 0x1653b3f57a0 <col:14, col:32> 'unsigned long long' <IntegralCast>
|         | `-ParenExpr 0x1653b3f56e8 <col:14, col:32> 'widelimb':'int'
|         |   `-CStyleCastExpr 0x1653b3f56c0 <col:15, col:31> 'widelimb':'int' <IntegralCast>
|         |     `-ImplicitCastExpr 0x1653b3f56a8 <col:26, col:31> 'limb':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|         |       `-ArraySubscriptExpr 0x1653b3f5678 <col:26, col:31> 'const limb':'const unsigned long long' lvalue
|         |         |-ImplicitCastExpr 0x1653b3f5660 <col:26> 'const limb *':'const limb *' <LValueToRValue>
|         |         | `-DeclRefExpr 0x1653b3f5618 <col:26> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3e52a0 'in1' 'const limb *':'const limb *'
|         |         `-IntegerLiteral 0x1653b3f5638 <col:30> 'int' 3
|         `-ImplicitCastExpr 0x1653b3f5788 <col:36, col:41> 'limb':'unsigned long long' <LValueToRValue>
|           `-ArraySubscriptExpr 0x1653b3f5768 <col:36, col:41> 'const limb':'const unsigned long long' lvalue
|             |-ImplicitCastExpr 0x1653b3f5750 <col:36> 'const limb *':'const limb *' <LValueToRValue>
|             | `-DeclRefExpr 0x1653b3f5708 <col:36> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3e5318 'in2' 'const limb *':'const limb *'
|             `-IntegerLiteral 0x1653b3f5728 <col:40> 'int' 3
|-FunctionDecl 0x1653b3f5a28 <line:549:1, line:611:1> line:549:13 used felem_reduce 'void (limb *, const widelimb *)' static
| |-ParmVarDecl 0x1653b3f5868 <col:26, col:32> col:32 used out 'limb *':'limb *'
| |-ParmVarDecl 0x1653b3f58e0 <col:37, col:53> col:53 used in 'const widelimb *':'const widelimb *'
| `-CompoundStmt 0x1653b3e9010 <line:550:1, line:611:1>
|   |-DeclStmt 0x1653b3f5d58 <line:551:5, line:552:31>
|   | `-VarDecl 0x1653b3f5b00 <line:551:5, line:552:30> line:551:27 used two127p15 'const widelimb':'const int' static cinit
|   |   `-BinaryOperator 0x1653b3f5d38 <col:39, line:552:30> 'int' '+'
|   |     |-ParenExpr 0x1653b3f5c30 <line:551:39, col:61> 'widelimb':'int'
|   |     | `-BinaryOperator 0x1653b3f5c10 <col:40, col:58> 'widelimb':'int' '<<'
|   |     |   |-ParenExpr 0x1653b3f5bc8 <col:40, col:53> 'widelimb':'int'
|   |     |   | `-CStyleCastExpr 0x1653b3f5ba0 <col:41, col:52> 'widelimb':'int' <NoOp>
|   |     |   |   `-IntegerLiteral 0x1653b3f5b68 <col:52> 'int' 1
|   |     |   `-IntegerLiteral 0x1653b3f5be8 <col:58> 'int' 127
|   |     `-ParenExpr 0x1653b3f5d18 <line:552:9, col:30> 'widelimb':'int'
|   |       `-BinaryOperator 0x1653b3f5cf8 <col:10, col:28> 'widelimb':'int' '<<'
|   |         |-ParenExpr 0x1653b3f5cb0 <col:10, col:23> 'widelimb':'int'
|   |         | `-CStyleCastExpr 0x1653b3f5c88 <col:11, col:22> 'widelimb':'int' <NoOp>
|   |         |   `-IntegerLiteral 0x1653b3f5c50 <col:22> 'int' 1
|   |         `-IntegerLiteral 0x1653b3f5cd0 <col:28> 'int' 15
|   |-DeclStmt 0x1653b3f5fd8 <line:553:5, line:554:31>
|   | `-VarDecl 0x1653b3f5d80 <line:553:5, line:554:30> line:553:27 used two127m71 'const widelimb':'const int' static cinit
|   |   `-BinaryOperator 0x1653b3f5fb8 <col:39, line:554:30> 'int' '-'
|   |     |-ParenExpr 0x1653b3f5eb0 <line:553:39, col:61> 'widelimb':'int'
|   |     | `-BinaryOperator 0x1653b3f5e90 <col:40, col:58> 'widelimb':'int' '<<'
|   |     |   |-ParenExpr 0x1653b3f5e48 <col:40, col:53> 'widelimb':'int'
|   |     |   | `-CStyleCastExpr 0x1653b3f5e20 <col:41, col:52> 'widelimb':'int' <NoOp>
|   |     |   |   `-IntegerLiteral 0x1653b3f5de8 <col:52> 'int' 1
|   |     |   `-IntegerLiteral 0x1653b3f5e68 <col:58> 'int' 127
|   |     `-ParenExpr 0x1653b3f5f98 <line:554:9, col:30> 'widelimb':'int'
|   |       `-BinaryOperator 0x1653b3f5f78 <col:10, col:28> 'widelimb':'int' '<<'
|   |         |-ParenExpr 0x1653b3f5f30 <col:10, col:23> 'widelimb':'int'
|   |         | `-CStyleCastExpr 0x1653b3f5f08 <col:11, col:22> 'widelimb':'int' <NoOp>
|   |         |   `-IntegerLiteral 0x1653b3f5ed0 <col:22> 'int' 1
|   |         `-IntegerLiteral 0x1653b3f5f50 <col:28> 'int' 71
|   |-DeclStmt 0x1653b3f6360 <line:555:5, line:556:56>
|   | `-VarDecl 0x1653b3f6000 <line:555:5, line:556:55> line:555:27 used two127m71m55 'const widelimb':'const int' static cinit
|   |   `-BinaryOperator 0x1653b3f6340 <col:42, line:556:55> 'int' '-'
|   |     |-BinaryOperator 0x1653b3f6238 <line:555:42, line:556:30> 'int' '-'
|   |     | |-ParenExpr 0x1653b3f6130 <line:555:42, col:64> 'widelimb':'int'
|   |     | | `-BinaryOperator 0x1653b3f6110 <col:43, col:61> 'widelimb':'int' '<<'
|   |     | |   |-ParenExpr 0x1653b3f60c8 <col:43, col:56> 'widelimb':'int'
|   |     | |   | `-CStyleCastExpr 0x1653b3f60a0 <col:44, col:55> 'widelimb':'int' <NoOp>
|   |     | |   |   `-IntegerLiteral 0x1653b3f6068 <col:55> 'int' 1
|   |     | |   `-IntegerLiteral 0x1653b3f60e8 <col:61> 'int' 127
|   |     | `-ParenExpr 0x1653b3f6218 <line:556:9, col:30> 'widelimb':'int'
|   |     |   `-BinaryOperator 0x1653b3f61f8 <col:10, col:28> 'widelimb':'int' '<<'
|   |     |     |-ParenExpr 0x1653b3f61b0 <col:10, col:23> 'widelimb':'int'
|   |     |     | `-CStyleCastExpr 0x1653b3f6188 <col:11, col:22> 'widelimb':'int' <NoOp>
|   |     |     |   `-IntegerLiteral 0x1653b3f6150 <col:22> 'int' 1
|   |     |     `-IntegerLiteral 0x1653b3f61d0 <col:28> 'int' 71
|   |     `-ParenExpr 0x1653b3f6320 <col:34, col:55> 'widelimb':'int'
|   |       `-BinaryOperator 0x1653b3f6300 <col:35, col:53> 'widelimb':'int' '<<'
|   |         |-ParenExpr 0x1653b3f62b8 <col:35, col:48> 'widelimb':'int'
|   |         | `-CStyleCastExpr 0x1653b3f6290 <col:36, col:47> 'widelimb':'int' <NoOp>
|   |         |   `-IntegerLiteral 0x1653b3f6258 <col:47> 'int' 1
|   |         `-IntegerLiteral 0x1653b3f62d8 <col:53> 'int' 55
|   |-DeclStmt 0x1653b3f64c0 <line:557:5, col:23>
|   | `-VarDecl 0x1653b3f6458 <col:5, col:22> col:14 used output 'widelimb [5]'
|   |-BinaryOperator 0x1653b3e6628 <line:560:5, col:25> 'widelimb':'int' '='
|   | |-ArraySubscriptExpr 0x1653b3e6500 <col:5, col:13> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x1653b3e64e8 <col:5> 'widelimb *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x1653b3f64d8 <col:5> 'widelimb [5]' lvalue Var 0x1653b3f6458 'output' 'widelimb [5]'
|   | | `-IntegerLiteral 0x1653b3e64c0 <col:12> 'int' 0
|   | `-BinaryOperator 0x1653b3e6608 <col:17, col:25> 'int' '+'
|   |   |-ImplicitCastExpr 0x1653b3e65d8 <col:17, col:21> 'widelimb':'int' <LValueToRValue>
|   |   | `-ArraySubscriptExpr 0x1653b3e6580 <col:17, col:21> 'const widelimb':'const int' lvalue
|   |   |   |-ImplicitCastExpr 0x1653b3e6568 <col:17> 'const widelimb *':'const widelimb *' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x1653b3e6520 <col:17> 'const widelimb *':'const widelimb *' lvalue ParmVar 0x1653b3f58e0 'in' 'const widelimb *':'const widelimb *'
|   |   |   `-IntegerLiteral 0x1653b3e6540 <col:20> 'int' 0
|   |   `-ImplicitCastExpr 0x1653b3e65f0 <col:25> 'widelimb':'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x1653b3e65a0 <col:25> 'const widelimb':'const int' lvalue Var 0x1653b3f5b00 'two127p15' 'const widelimb':'const int'
|   |-BinaryOperator 0x1653b3e6818 <line:561:5, col:25> 'widelimb':'int' '='
|   | |-ArraySubscriptExpr 0x1653b3e66f0 <col:5, col:13> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x1653b3e66d8 <col:5> 'widelimb *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x1653b3e6690 <col:5> 'widelimb [5]' lvalue Var 0x1653b3f6458 'output' 'widelimb [5]'
|   | | `-IntegerLiteral 0x1653b3e66b0 <col:12> 'int' 1
|   | `-BinaryOperator 0x1653b3e67f8 <col:17, col:25> 'int' '+'
|   |   |-ImplicitCastExpr 0x1653b3e67c8 <col:17, col:21> 'widelimb':'int' <LValueToRValue>
|   |   | `-ArraySubscriptExpr 0x1653b3e6770 <col:17, col:21> 'const widelimb':'const int' lvalue
|   |   |   |-ImplicitCastExpr 0x1653b3e6758 <col:17> 'const widelimb *':'const widelimb *' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x1653b3e6710 <col:17> 'const widelimb *':'const widelimb *' lvalue ParmVar 0x1653b3f58e0 'in' 'const widelimb *':'const widelimb *'
|   |   |   `-IntegerLiteral 0x1653b3e6730 <col:20> 'int' 1
|   |   `-ImplicitCastExpr 0x1653b3e67e0 <col:25> 'widelimb':'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x1653b3e6790 <col:25> 'const widelimb':'const int' lvalue Var 0x1653b3f6000 'two127m71m55' 'const widelimb':'const int'
|   |-BinaryOperator 0x1653b3e6a08 <line:562:5, col:25> 'widelimb':'int' '='
|   | |-ArraySubscriptExpr 0x1653b3e68e0 <col:5, col:13> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x1653b3e68c8 <col:5> 'widelimb *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x1653b3e6880 <col:5> 'widelimb [5]' lvalue Var 0x1653b3f6458 'output' 'widelimb [5]'
|   | | `-IntegerLiteral 0x1653b3e68a0 <col:12> 'int' 2
|   | `-BinaryOperator 0x1653b3e69e8 <col:17, col:25> 'int' '+'
|   |   |-ImplicitCastExpr 0x1653b3e69b8 <col:17, col:21> 'widelimb':'int' <LValueToRValue>
|   |   | `-ArraySubscriptExpr 0x1653b3e6960 <col:17, col:21> 'const widelimb':'const int' lvalue
|   |   |   |-ImplicitCastExpr 0x1653b3e6948 <col:17> 'const widelimb *':'const widelimb *' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x1653b3e6900 <col:17> 'const widelimb *':'const widelimb *' lvalue ParmVar 0x1653b3f58e0 'in' 'const widelimb *':'const widelimb *'
|   |   |   `-IntegerLiteral 0x1653b3e6920 <col:20> 'int' 2
|   |   `-ImplicitCastExpr 0x1653b3e69d0 <col:25> 'widelimb':'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x1653b3e6980 <col:25> 'const widelimb':'const int' lvalue Var 0x1653b3f5d80 'two127m71' 'const widelimb':'const int'
|   |-BinaryOperator 0x1653b3e6b88 <line:563:5, col:21> 'widelimb':'int' '='
|   | |-ArraySubscriptExpr 0x1653b3e6ad0 <col:5, col:13> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x1653b3e6ab8 <col:5> 'widelimb *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x1653b3e6a70 <col:5> 'widelimb [5]' lvalue Var 0x1653b3f6458 'output' 'widelimb [5]'
|   | | `-IntegerLiteral 0x1653b3e6a90 <col:12> 'int' 3
|   | `-ImplicitCastExpr 0x1653b3e6b70 <col:17, col:21> 'widelimb':'int' <LValueToRValue>
|   |   `-ArraySubscriptExpr 0x1653b3e6b50 <col:17, col:21> 'const widelimb':'const int' lvalue
|   |     |-ImplicitCastExpr 0x1653b3e6b38 <col:17> 'const widelimb *':'const widelimb *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1653b3e6af0 <col:17> 'const widelimb *':'const widelimb *' lvalue ParmVar 0x1653b3f58e0 'in' 'const widelimb *':'const widelimb *'
|   |     `-IntegerLiteral 0x1653b3e6b10 <col:20> 'int' 3
|   |-BinaryOperator 0x1653b3e6cc0 <line:564:5, col:21> 'widelimb':'int' '='
|   | |-ArraySubscriptExpr 0x1653b3e6c08 <col:5, col:13> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x1653b3e6bf0 <col:5> 'widelimb *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x1653b3e6ba8 <col:5> 'widelimb [5]' lvalue Var 0x1653b3f6458 'output' 'widelimb [5]'
|   | | `-IntegerLiteral 0x1653b3e6bc8 <col:12> 'int' 4
|   | `-ImplicitCastExpr 0x1653b3e6ca8 <col:17, col:21> 'widelimb':'int' <LValueToRValue>
|   |   `-ArraySubscriptExpr 0x1653b3e6c88 <col:17, col:21> 'const widelimb':'const int' lvalue
|   |     |-ImplicitCastExpr 0x1653b3e6c70 <col:17> 'const widelimb *':'const widelimb *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1653b3e6c28 <col:17> 'const widelimb *':'const widelimb *' lvalue ParmVar 0x1653b3f58e0 'in' 'const widelimb *':'const widelimb *'
|   |     `-IntegerLiteral 0x1653b3e6c48 <col:20> 'int' 4
|   |-CompoundAssignOperator 0x1653b3e6e40 <line:567:5, col:27> 'widelimb':'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x1653b3e6d40 <col:5, col:13> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x1653b3e6d28 <col:5> 'widelimb *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x1653b3e6ce0 <col:5> 'widelimb [5]' lvalue Var 0x1653b3f6458 'output' 'widelimb [5]'
|   | | `-IntegerLiteral 0x1653b3e6d00 <col:12> 'int' 4
|   | `-BinaryOperator 0x1653b3e6e20 <col:18, col:27> 'widelimb':'int' '>>'
|   |   |-ImplicitCastExpr 0x1653b3e6e08 <col:18, col:22> 'widelimb':'int' <LValueToRValue>
|   |   | `-ArraySubscriptExpr 0x1653b3e6dc0 <col:18, col:22> 'const widelimb':'const int' lvalue
|   |   |   |-ImplicitCastExpr 0x1653b3e6da8 <col:18> 'const widelimb *':'const widelimb *' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x1653b3e6d60 <col:18> 'const widelimb *':'const widelimb *' lvalue ParmVar 0x1653b3f58e0 'in' 'const widelimb *':'const widelimb *'
|   |   |   `-IntegerLiteral 0x1653b3e6d80 <col:21> 'int' 6
|   |   `-IntegerLiteral 0x1653b3e6de0 <col:27> 'int' 16
|   |-CompoundAssignOperator 0x1653b3e7038 <line:568:5, col:38> 'widelimb':'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x1653b3e6ed0 <col:5, col:13> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x1653b3e6eb8 <col:5> 'widelimb *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x1653b3e6e70 <col:5> 'widelimb [5]' lvalue Var 0x1653b3f6458 'output' 'widelimb [5]'
|   | | `-IntegerLiteral 0x1653b3e6e90 <col:12> 'int' 3
|   | `-BinaryOperator 0x1653b3e7018 <col:18, col:38> 'int' '<<'
|   |   |-ParenExpr 0x1653b3e6fd0 <col:18, col:33> 'int'
|   |   | `-BinaryOperator 0x1653b3e6fb0 <col:19, col:27> 'int' '&'
|   |   |   |-ImplicitCastExpr 0x1653b3e6f98 <col:19, col:23> 'widelimb':'int' <LValueToRValue>
|   |   |   | `-ArraySubscriptExpr 0x1653b3e6f50 <col:19, col:23> 'const widelimb':'const int' lvalue
|   |   |   |   |-ImplicitCastExpr 0x1653b3e6f38 <col:19> 'const widelimb *':'const widelimb *' <LValueToRValue>
|   |   |   |   | `-DeclRefExpr 0x1653b3e6ef0 <col:19> 'const widelimb *':'const widelimb *' lvalue ParmVar 0x1653b3f58e0 'in' 'const widelimb *':'const widelimb *'
|   |   |   |   `-IntegerLiteral 0x1653b3e6f10 <col:22> 'int' 6
|   |   |   `-IntegerLiteral 0x1653b3e6f70 <col:27> 'int' 65535
|   |   `-IntegerLiteral 0x1653b3e6ff0 <col:38> 'int' 40
|   |-CompoundAssignOperator 0x1653b3e7180 <line:569:5, col:22> 'widelimb':'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x1653b3e70c8 <col:5, col:13> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x1653b3e70b0 <col:5> 'widelimb *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x1653b3e7068 <col:5> 'widelimb [5]' lvalue Var 0x1653b3f6458 'output' 'widelimb [5]'
|   | | `-IntegerLiteral 0x1653b3e7088 <col:12> 'int' 2
|   | `-ImplicitCastExpr 0x1653b3e7168 <col:18, col:22> 'widelimb':'int' <LValueToRValue>
|   |   `-ArraySubscriptExpr 0x1653b3e7148 <col:18, col:22> 'const widelimb':'const int' lvalue
|   |     |-ImplicitCastExpr 0x1653b3e7130 <col:18> 'const widelimb *':'const widelimb *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1653b3e70e8 <col:18> 'const widelimb *':'const widelimb *' lvalue ParmVar 0x1653b3f58e0 'in' 'const widelimb *':'const widelimb *'
|   |     `-IntegerLiteral 0x1653b3e7108 <col:21> 'int' 6
|   |-CompoundAssignOperator 0x1653b3e7310 <line:571:5, col:27> 'widelimb':'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x1653b3e7210 <col:5, col:13> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x1653b3e71f8 <col:5> 'widelimb *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x1653b3e71b0 <col:5> 'widelimb [5]' lvalue Var 0x1653b3f6458 'output' 'widelimb [5]'
|   | | `-IntegerLiteral 0x1653b3e71d0 <col:12> 'int' 3
|   | `-BinaryOperator 0x1653b3e72f0 <col:18, col:27> 'widelimb':'int' '>>'
|   |   |-ImplicitCastExpr 0x1653b3e72d8 <col:18, col:22> 'widelimb':'int' <LValueToRValue>
|   |   | `-ArraySubscriptExpr 0x1653b3e7290 <col:18, col:22> 'const widelimb':'const int' lvalue
|   |   |   |-ImplicitCastExpr 0x1653b3e7278 <col:18> 'const widelimb *':'const widelimb *' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x1653b3e7230 <col:18> 'const widelimb *':'const widelimb *' lvalue ParmVar 0x1653b3f58e0 'in' 'const widelimb *':'const widelimb *'
|   |   |   `-IntegerLiteral 0x1653b3e7250 <col:21> 'int' 5
|   |   `-IntegerLiteral 0x1653b3e72b0 <col:27> 'int' 16
|   |-CompoundAssignOperator 0x1653b3e7508 <line:572:5, col:38> 'widelimb':'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x1653b3e73a0 <col:5, col:13> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x1653b3e7388 <col:5> 'widelimb *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x1653b3e7340 <col:5> 'widelimb [5]' lvalue Var 0x1653b3f6458 'output' 'widelimb [5]'
|   | | `-IntegerLiteral 0x1653b3e7360 <col:12> 'int' 2
|   | `-BinaryOperator 0x1653b3e74e8 <col:18, col:38> 'int' '<<'
|   |   |-ParenExpr 0x1653b3e74a0 <col:18, col:33> 'int'
|   |   | `-BinaryOperator 0x1653b3e7480 <col:19, col:27> 'int' '&'
|   |   |   |-ImplicitCastExpr 0x1653b3e7468 <col:19, col:23> 'widelimb':'int' <LValueToRValue>
|   |   |   | `-ArraySubscriptExpr 0x1653b3e7420 <col:19, col:23> 'const widelimb':'const int' lvalue
|   |   |   |   |-ImplicitCastExpr 0x1653b3e7408 <col:19> 'const widelimb *':'const widelimb *' <LValueToRValue>
|   |   |   |   | `-DeclRefExpr 0x1653b3e73c0 <col:19> 'const widelimb *':'const widelimb *' lvalue ParmVar 0x1653b3f58e0 'in' 'const widelimb *':'const widelimb *'
|   |   |   |   `-IntegerLiteral 0x1653b3e73e0 <col:22> 'int' 5
|   |   |   `-IntegerLiteral 0x1653b3e7440 <col:27> 'int' 65535
|   |   `-IntegerLiteral 0x1653b3e74c0 <col:38> 'int' 40
|   |-CompoundAssignOperator 0x1653b3e7650 <line:573:5, col:22> 'widelimb':'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x1653b3e7598 <col:5, col:13> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x1653b3e7580 <col:5> 'widelimb *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x1653b3e7538 <col:5> 'widelimb [5]' lvalue Var 0x1653b3f6458 'output' 'widelimb [5]'
|   | | `-IntegerLiteral 0x1653b3e7558 <col:12> 'int' 1
|   | `-ImplicitCastExpr 0x1653b3e7638 <col:18, col:22> 'widelimb':'int' <LValueToRValue>
|   |   `-ArraySubscriptExpr 0x1653b3e7618 <col:18, col:22> 'const widelimb':'const int' lvalue
|   |     |-ImplicitCastExpr 0x1653b3e7600 <col:18> 'const widelimb *':'const widelimb *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1653b3e75b8 <col:18> 'const widelimb *':'const widelimb *' lvalue ParmVar 0x1653b3f58e0 'in' 'const widelimb *':'const widelimb *'
|   |     `-IntegerLiteral 0x1653b3e75d8 <col:21> 'int' 5
|   |-CompoundAssignOperator 0x1653b3e77e0 <line:575:5, col:31> 'widelimb':'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x1653b3e76e0 <col:5, col:13> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x1653b3e76c8 <col:5> 'widelimb *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x1653b3e7680 <col:5> 'widelimb [5]' lvalue Var 0x1653b3f6458 'output' 'widelimb [5]'
|   | | `-IntegerLiteral 0x1653b3e76a0 <col:12> 'int' 2
|   | `-BinaryOperator 0x1653b3e77c0 <col:18, col:31> 'widelimb':'int' '>>'
|   |   |-ImplicitCastExpr 0x1653b3e77a8 <col:18, col:26> 'widelimb':'int' <LValueToRValue>
|   |   | `-ArraySubscriptExpr 0x1653b3e7760 <col:18, col:26> 'widelimb':'int' lvalue
|   |   |   |-ImplicitCastExpr 0x1653b3e7748 <col:18> 'widelimb *' <ArrayToPointerDecay>
|   |   |   | `-DeclRefExpr 0x1653b3e7700 <col:18> 'widelimb [5]' lvalue Var 0x1653b3f6458 'output' 'widelimb [5]'
|   |   |   `-IntegerLiteral 0x1653b3e7720 <col:25> 'int' 4
|   |   `-IntegerLiteral 0x1653b3e7780 <col:31> 'int' 16
|   |-CompoundAssignOperator 0x1653b3e79d8 <line:576:5, col:42> 'widelimb':'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x1653b3e7870 <col:5, col:13> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x1653b3e7858 <col:5> 'widelimb *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x1653b3e7810 <col:5> 'widelimb [5]' lvalue Var 0x1653b3f6458 'output' 'widelimb [5]'
|   | | `-IntegerLiteral 0x1653b3e7830 <col:12> 'int' 1
|   | `-BinaryOperator 0x1653b3e79b8 <col:18, col:42> 'int' '<<'
|   |   |-ParenExpr 0x1653b3e7970 <col:18, col:37> 'int'
|   |   | `-BinaryOperator 0x1653b3e7950 <col:19, col:31> 'int' '&'
|   |   |   |-ImplicitCastExpr 0x1653b3e7938 <col:19, col:27> 'widelimb':'int' <LValueToRValue>
|   |   |   | `-ArraySubscriptExpr 0x1653b3e78f0 <col:19, col:27> 'widelimb':'int' lvalue
|   |   |   |   |-ImplicitCastExpr 0x1653b3e78d8 <col:19> 'widelimb *' <ArrayToPointerDecay>
|   |   |   |   | `-DeclRefExpr 0x1653b3e7890 <col:19> 'widelimb [5]' lvalue Var 0x1653b3f6458 'output' 'widelimb [5]'
|   |   |   |   `-IntegerLiteral 0x1653b3e78b0 <col:26> 'int' 4
|   |   |   `-IntegerLiteral 0x1653b3e7910 <col:31> 'int' 65535
|   |   `-IntegerLiteral 0x1653b3e7990 <col:42> 'int' 40
|   |-CompoundAssignOperator 0x1653b3e7b20 <line:577:5, col:26> 'widelimb':'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x1653b3e7a68 <col:5, col:13> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x1653b3e7a50 <col:5> 'widelimb *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x1653b3e7a08 <col:5> 'widelimb [5]' lvalue Var 0x1653b3f6458 'output' 'widelimb [5]'
|   | | `-IntegerLiteral 0x1653b3e7a28 <col:12> 'int' 0
|   | `-ImplicitCastExpr 0x1653b3e7b08 <col:18, col:26> 'widelimb':'int' <LValueToRValue>
|   |   `-ArraySubscriptExpr 0x1653b3e7ae8 <col:18, col:26> 'widelimb':'int' lvalue
|   |     |-ImplicitCastExpr 0x1653b3e7ad0 <col:18> 'widelimb *' <ArrayToPointerDecay>
|   |     | `-DeclRefExpr 0x1653b3e7a88 <col:18> 'widelimb [5]' lvalue Var 0x1653b3f6458 'output' 'widelimb [5]'
|   |     `-IntegerLiteral 0x1653b3e7aa8 <col:25> 'int' 4
|   |-CompoundAssignOperator 0x1653b3e7cb0 <line:580:5, col:31> 'widelimb':'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x1653b3e7bb0 <col:5, col:13> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x1653b3e7b98 <col:5> 'widelimb *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x1653b3e7b50 <col:5> 'widelimb [5]' lvalue Var 0x1653b3f6458 'output' 'widelimb [5]'
|   | | `-IntegerLiteral 0x1653b3e7b70 <col:12> 'int' 3
|   | `-BinaryOperator 0x1653b3e7c90 <col:18, col:31> 'widelimb':'int' '>>'
|   |   |-ImplicitCastExpr 0x1653b3e7c78 <col:18, col:26> 'widelimb':'int' <LValueToRValue>
|   |   | `-ArraySubscriptExpr 0x1653b3e7c30 <col:18, col:26> 'widelimb':'int' lvalue
|   |   |   |-ImplicitCastExpr 0x1653b3e7c18 <col:18> 'widelimb *' <ArrayToPointerDecay>
|   |   |   | `-DeclRefExpr 0x1653b3e7bd0 <col:18> 'widelimb [5]' lvalue Var 0x1653b3f6458 'output' 'widelimb [5]'
|   |   |   `-IntegerLiteral 0x1653b3e7bf0 <col:25> 'int' 2
|   |   `-IntegerLiteral 0x1653b3e7c50 <col:31> 'int' 56
|   |-CompoundAssignOperator 0x1653b3e7d88 <line:581:5, col:18> 'widelimb':'int' '&=' ComputeLHSTy='long long' ComputeResultTy='long long'
|   | |-ArraySubscriptExpr 0x1653b3e7d40 <col:5, col:13> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x1653b3e7d28 <col:5> 'widelimb *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x1653b3e7ce0 <col:5> 'widelimb [5]' lvalue Var 0x1653b3f6458 'output' 'widelimb [5]'
|   | | `-IntegerLiteral 0x1653b3e7d00 <col:12> 'int' 2
|   | `-IntegerLiteral 0x1653b3e7d60 <col:18> 'long long' 72057594037927935
|   |-BinaryOperator 0x1653b3e7f18 <line:583:5, col:30> 'widelimb':'int' '='
|   | |-ArraySubscriptExpr 0x1653b3e7e18 <col:5, col:13> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x1653b3e7e00 <col:5> 'widelimb *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x1653b3e7db8 <col:5> 'widelimb [5]' lvalue Var 0x1653b3f6458 'output' 'widelimb [5]'
|   | | `-IntegerLiteral 0x1653b3e7dd8 <col:12> 'int' 4
|   | `-BinaryOperator 0x1653b3e7ef8 <col:17, col:30> 'widelimb':'int' '>>'
|   |   |-ImplicitCastExpr 0x1653b3e7ee0 <col:17, col:25> 'widelimb':'int' <LValueToRValue>
|   |   | `-ArraySubscriptExpr 0x1653b3e7e98 <col:17, col:25> 'widelimb':'int' lvalue
|   |   |   |-ImplicitCastExpr 0x1653b3e7e80 <col:17> 'widelimb *' <ArrayToPointerDecay>
|   |   |   | `-DeclRefExpr 0x1653b3e7e38 <col:17> 'widelimb [5]' lvalue Var 0x1653b3f6458 'output' 'widelimb [5]'
|   |   |   `-IntegerLiteral 0x1653b3e7e58 <col:24> 'int' 3
|   |   `-IntegerLiteral 0x1653b3e7eb8 <col:30> 'int' 56
|   |-CompoundAssignOperator 0x1653b3e7fe0 <line:584:5, col:18> 'widelimb':'int' '&=' ComputeLHSTy='long long' ComputeResultTy='long long'
|   | |-ArraySubscriptExpr 0x1653b3e7f98 <col:5, col:13> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x1653b3e7f80 <col:5> 'widelimb *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x1653b3e7f38 <col:5> 'widelimb [5]' lvalue Var 0x1653b3f6458 'output' 'widelimb [5]'
|   | | `-IntegerLiteral 0x1653b3e7f58 <col:12> 'int' 3
|   | `-IntegerLiteral 0x1653b3e7fb8 <col:18> 'long long' 72057594037927935
|   |-CompoundAssignOperator 0x1653b3e8170 <line:589:5, col:31> 'widelimb':'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x1653b3e8070 <col:5, col:13> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x1653b3e8058 <col:5> 'widelimb *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x1653b3e8010 <col:5> 'widelimb [5]' lvalue Var 0x1653b3f6458 'output' 'widelimb [5]'
|   | | `-IntegerLiteral 0x1653b3e8030 <col:12> 'int' 2
|   | `-BinaryOperator 0x1653b3e8150 <col:18, col:31> 'widelimb':'int' '>>'
|   |   |-ImplicitCastExpr 0x1653b3e8138 <col:18, col:26> 'widelimb':'int' <LValueToRValue>
|   |   | `-ArraySubscriptExpr 0x1653b3e80f0 <col:18, col:26> 'widelimb':'int' lvalue
|   |   |   |-ImplicitCastExpr 0x1653b3e80d8 <col:18> 'widelimb *' <ArrayToPointerDecay>
|   |   |   | `-DeclRefExpr 0x1653b3e8090 <col:18> 'widelimb [5]' lvalue Var 0x1653b3f6458 'output' 'widelimb [5]'
|   |   |   `-IntegerLiteral 0x1653b3e80b0 <col:25> 'int' 4
|   |   `-IntegerLiteral 0x1653b3e8110 <col:31> 'int' 16
|   |-CompoundAssignOperator 0x1653b3e8368 <line:591:5, col:42> 'widelimb':'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x1653b3e8200 <col:5, col:13> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x1653b3e81e8 <col:5> 'widelimb *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x1653b3e81a0 <col:5> 'widelimb [5]' lvalue Var 0x1653b3f6458 'output' 'widelimb [5]'
|   | | `-IntegerLiteral 0x1653b3e81c0 <col:12> 'int' 1
|   | `-BinaryOperator 0x1653b3e8348 <col:18, col:42> 'int' '<<'
|   |   |-ParenExpr 0x1653b3e8300 <col:18, col:37> 'int'
|   |   | `-BinaryOperator 0x1653b3e82e0 <col:19, col:31> 'int' '&'
|   |   |   |-ImplicitCastExpr 0x1653b3e82c8 <col:19, col:27> 'widelimb':'int' <LValueToRValue>
|   |   |   | `-ArraySubscriptExpr 0x1653b3e8280 <col:19, col:27> 'widelimb':'int' lvalue
|   |   |   |   |-ImplicitCastExpr 0x1653b3e8268 <col:19> 'widelimb *' <ArrayToPointerDecay>
|   |   |   |   | `-DeclRefExpr 0x1653b3e8220 <col:19> 'widelimb [5]' lvalue Var 0x1653b3f6458 'output' 'widelimb [5]'
|   |   |   |   `-IntegerLiteral 0x1653b3e8240 <col:26> 'int' 4
|   |   |   `-IntegerLiteral 0x1653b3e82a0 <col:31> 'int' 65535
|   |   `-IntegerLiteral 0x1653b3e8320 <col:42> 'int' 40
|   |-CompoundAssignOperator 0x1653b3e84d0 <line:592:5, col:26> 'widelimb':'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x1653b3e83f8 <col:5, col:13> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x1653b3e83e0 <col:5> 'widelimb *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x1653b3e8398 <col:5> 'widelimb [5]' lvalue Var 0x1653b3f6458 'output' 'widelimb [5]'
|   | | `-IntegerLiteral 0x1653b3e83b8 <col:12> 'int' 0
|   | `-ImplicitCastExpr 0x1653b3e8498 <col:18, col:26> 'widelimb':'int' <LValueToRValue>
|   |   `-ArraySubscriptExpr 0x1653b3e8478 <col:18, col:26> 'widelimb':'int' lvalue
|   |     |-ImplicitCastExpr 0x1653b3e8460 <col:18> 'widelimb *' <ArrayToPointerDecay>
|   |     | `-DeclRefExpr 0x1653b3e8418 <col:18> 'widelimb [5]' lvalue Var 0x1653b3f6458 'output' 'widelimb [5]'
|   |     `-IntegerLiteral 0x1653b3e8438 <col:25> 'int' 4
|   |-CompoundAssignOperator 0x1653b3e8660 <line:595:5, col:31> 'widelimb':'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x1653b3e8560 <col:5, col:13> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x1653b3e8548 <col:5> 'widelimb *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x1653b3e8500 <col:5> 'widelimb [5]' lvalue Var 0x1653b3f6458 'output' 'widelimb [5]'
|   | | `-IntegerLiteral 0x1653b3e8520 <col:12> 'int' 1
|   | `-BinaryOperator 0x1653b3e8640 <col:18, col:31> 'widelimb':'int' '>>'
|   |   |-ImplicitCastExpr 0x1653b3e8628 <col:18, col:26> 'widelimb':'int' <LValueToRValue>
|   |   | `-ArraySubscriptExpr 0x1653b3e85e0 <col:18, col:26> 'widelimb':'int' lvalue
|   |   |   |-ImplicitCastExpr 0x1653b3e85c8 <col:18> 'widelimb *' <ArrayToPointerDecay>
|   |   |   | `-DeclRefExpr 0x1653b3e8580 <col:18> 'widelimb [5]' lvalue Var 0x1653b3f6458 'output' 'widelimb [5]'
|   |   |   `-IntegerLiteral 0x1653b3e85a0 <col:25> 'int' 0
|   |   `-IntegerLiteral 0x1653b3e8600 <col:31> 'int' 56
|   |-BinaryOperator 0x1653b3e8820 <line:596:5, col:26> 'limb':'unsigned long long' '='
|   | |-ArraySubscriptExpr 0x1653b3e86f0 <col:5, col:10> 'limb':'unsigned long long' lvalue
|   | | |-ImplicitCastExpr 0x1653b3e86d8 <col:5> 'limb *':'limb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b3e8690 <col:5> 'limb *':'limb *' lvalue ParmVar 0x1653b3f5868 'out' 'limb *':'limb *'
|   | | `-IntegerLiteral 0x1653b3e86b0 <col:9> 'int' 0
|   | `-ImplicitCastExpr 0x1653b3e8808 <col:14, col:26> 'limb':'unsigned long long' <IntegralCast>
|   |   `-BinaryOperator 0x1653b3e87e8 <col:14, col:26> 'long long' '&'
|   |     |-ImplicitCastExpr 0x1653b3e87d0 <col:14, col:22> 'long long' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x1653b3e87b8 <col:14, col:22> 'widelimb':'int' <LValueToRValue>
|   |     |   `-ArraySubscriptExpr 0x1653b3e8770 <col:14, col:22> 'widelimb':'int' lvalue
|   |     |     |-ImplicitCastExpr 0x1653b3e8758 <col:14> 'widelimb *' <ArrayToPointerDecay>
|   |     |     | `-DeclRefExpr 0x1653b3e8710 <col:14> 'widelimb [5]' lvalue Var 0x1653b3f6458 'output' 'widelimb [5]'
|   |     |     `-IntegerLiteral 0x1653b3e8730 <col:21> 'int' 0
|   |     `-IntegerLiteral 0x1653b3e8790 <col:26> 'long long' 72057594037927935
|   |-CompoundAssignOperator 0x1653b3e89a0 <line:598:5, col:31> 'widelimb':'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x1653b3e88a0 <col:5, col:13> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x1653b3e8888 <col:5> 'widelimb *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x1653b3e8840 <col:5> 'widelimb [5]' lvalue Var 0x1653b3f6458 'output' 'widelimb [5]'
|   | | `-IntegerLiteral 0x1653b3e8860 <col:12> 'int' 2
|   | `-BinaryOperator 0x1653b3e8980 <col:18, col:31> 'widelimb':'int' '>>'
|   |   |-ImplicitCastExpr 0x1653b3e8968 <col:18, col:26> 'widelimb':'int' <LValueToRValue>
|   |   | `-ArraySubscriptExpr 0x1653b3e8920 <col:18, col:26> 'widelimb':'int' lvalue
|   |   |   |-ImplicitCastExpr 0x1653b3e8908 <col:18> 'widelimb *' <ArrayToPointerDecay>
|   |   |   | `-DeclRefExpr 0x1653b3e88c0 <col:18> 'widelimb [5]' lvalue Var 0x1653b3f6458 'output' 'widelimb [5]'
|   |   |   `-IntegerLiteral 0x1653b3e88e0 <col:25> 'int' 1
|   |   `-IntegerLiteral 0x1653b3e8940 <col:31> 'int' 56
|   |-BinaryOperator 0x1653b3e8b60 <line:600:5, col:26> 'limb':'unsigned long long' '='
|   | |-ArraySubscriptExpr 0x1653b3e8a30 <col:5, col:10> 'limb':'unsigned long long' lvalue
|   | | |-ImplicitCastExpr 0x1653b3e8a18 <col:5> 'limb *':'limb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b3e89d0 <col:5> 'limb *':'limb *' lvalue ParmVar 0x1653b3f5868 'out' 'limb *':'limb *'
|   | | `-IntegerLiteral 0x1653b3e89f0 <col:9> 'int' 1
|   | `-ImplicitCastExpr 0x1653b3e8b48 <col:14, col:26> 'limb':'unsigned long long' <IntegralCast>
|   |   `-BinaryOperator 0x1653b3e8b28 <col:14, col:26> 'long long' '&'
|   |     |-ImplicitCastExpr 0x1653b3e8b10 <col:14, col:22> 'long long' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x1653b3e8af8 <col:14, col:22> 'widelimb':'int' <LValueToRValue>
|   |     |   `-ArraySubscriptExpr 0x1653b3e8ab0 <col:14, col:22> 'widelimb':'int' lvalue
|   |     |     |-ImplicitCastExpr 0x1653b3e8a98 <col:14> 'widelimb *' <ArrayToPointerDecay>
|   |     |     | `-DeclRefExpr 0x1653b3e8a50 <col:14> 'widelimb [5]' lvalue Var 0x1653b3f6458 'output' 'widelimb [5]'
|   |     |     `-IntegerLiteral 0x1653b3e8a70 <col:21> 'int' 1
|   |     `-IntegerLiteral 0x1653b3e8ad0 <col:26> 'long long' 72057594037927935
|   |-CompoundAssignOperator 0x1653b3e8ce0 <line:601:5, col:31> 'widelimb':'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x1653b3e8be0 <col:5, col:13> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x1653b3e8bc8 <col:5> 'widelimb *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x1653b3e8b80 <col:5> 'widelimb [5]' lvalue Var 0x1653b3f6458 'output' 'widelimb [5]'
|   | | `-IntegerLiteral 0x1653b3e8ba0 <col:12> 'int' 3
|   | `-BinaryOperator 0x1653b3e8cc0 <col:18, col:31> 'widelimb':'int' '>>'
|   |   |-ImplicitCastExpr 0x1653b3e8ca8 <col:18, col:26> 'widelimb':'int' <LValueToRValue>
|   |   | `-ArraySubscriptExpr 0x1653b3e8c60 <col:18, col:26> 'widelimb':'int' lvalue
|   |   |   |-ImplicitCastExpr 0x1653b3e8c48 <col:18> 'widelimb *' <ArrayToPointerDecay>
|   |   |   | `-DeclRefExpr 0x1653b3e8c00 <col:18> 'widelimb [5]' lvalue Var 0x1653b3f6458 'output' 'widelimb [5]'
|   |   |   `-IntegerLiteral 0x1653b3e8c20 <col:25> 'int' 2
|   |   `-IntegerLiteral 0x1653b3e8c80 <col:31> 'int' 56
|   |-BinaryOperator 0x1653b3e8ea0 <line:603:5, col:26> 'limb':'unsigned long long' '='
|   | |-ArraySubscriptExpr 0x1653b3e8d70 <col:5, col:10> 'limb':'unsigned long long' lvalue
|   | | |-ImplicitCastExpr 0x1653b3e8d58 <col:5> 'limb *':'limb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b3e8d10 <col:5> 'limb *':'limb *' lvalue ParmVar 0x1653b3f5868 'out' 'limb *':'limb *'
|   | | `-IntegerLiteral 0x1653b3e8d30 <col:9> 'int' 2
|   | `-ImplicitCastExpr 0x1653b3e8e88 <col:14, col:26> 'limb':'unsigned long long' <IntegralCast>
|   |   `-BinaryOperator 0x1653b3e8e68 <col:14, col:26> 'long long' '&'
|   |     |-ImplicitCastExpr 0x1653b3e8e50 <col:14, col:22> 'long long' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x1653b3e8e38 <col:14, col:22> 'widelimb':'int' <LValueToRValue>
|   |     |   `-ArraySubscriptExpr 0x1653b3e8df0 <col:14, col:22> 'widelimb':'int' lvalue
|   |     |     |-ImplicitCastExpr 0x1653b3e8dd8 <col:14> 'widelimb *' <ArrayToPointerDecay>
|   |     |     | `-DeclRefExpr 0x1653b3e8d90 <col:14> 'widelimb [5]' lvalue Var 0x1653b3f6458 'output' 'widelimb [5]'
|   |     |     `-IntegerLiteral 0x1653b3e8db0 <col:21> 'int' 2
|   |     `-IntegerLiteral 0x1653b3e8e10 <col:26> 'long long' 72057594037927935
|   `-BinaryOperator 0x1653b3e8ff0 <line:610:5, col:22> 'limb':'unsigned long long' '='
|     |-ArraySubscriptExpr 0x1653b3e8f20 <col:5, col:10> 'limb':'unsigned long long' lvalue
|     | |-ImplicitCastExpr 0x1653b3e8f08 <col:5> 'limb *':'limb *' <LValueToRValue>
|     | | `-DeclRefExpr 0x1653b3e8ec0 <col:5> 'limb *':'limb *' lvalue ParmVar 0x1653b3f5868 'out' 'limb *':'limb *'
|     | `-IntegerLiteral 0x1653b3e8ee0 <col:9> 'int' 3
|     `-ImplicitCastExpr 0x1653b3e8fd8 <col:14, col:22> 'limb':'unsigned long long' <IntegralCast>
|       `-ImplicitCastExpr 0x1653b3e8fc0 <col:14, col:22> 'widelimb':'int' <LValueToRValue>
|         `-ArraySubscriptExpr 0x1653b3e8fa0 <col:14, col:22> 'widelimb':'int' lvalue
|           |-ImplicitCastExpr 0x1653b3e8f88 <col:14> 'widelimb *' <ArrayToPointerDecay>
|           | `-DeclRefExpr 0x1653b3e8f40 <col:14> 'widelimb [5]' lvalue Var 0x1653b3f6458 'output' 'widelimb [5]'
|           `-IntegerLiteral 0x1653b3e8f60 <col:21> 'int' 3
|-FunctionDecl 0x1653b3e9270 <line:613:1, line:618:1> line:613:13 used felem_square_reduce 'void (limb *, const limb *)' static
| |-ParmVarDecl 0x1653b3e9130 <col:33, col:39> col:39 used out 'limb *':'limb *'
| |-ParmVarDecl 0x1653b3e91a8 <col:44, col:56> col:56 used in 'const limb *':'const limb *'
| `-CompoundStmt 0x1653b3e9658 <line:614:1, line:618:1>
|   |-DeclStmt 0x1653b3e93b0 <line:615:5, col:18>
|   | `-VarDecl 0x1653b3e9348 <col:5, col:15> col:15 used tmp 'widefelem':'widelimb [7]'
|   |-CallExpr 0x1653b3e94b0 <line:616:5, col:25> 'void'
|   | |-ImplicitCastExpr 0x1653b3e9498 <col:5> 'void (*)(widelimb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3e93c8 <col:5> 'void (widelimb *, const limb *)' Function 0x1653b304030 'felem_square' 'void (widelimb *, const limb *)'
|   | |-ImplicitCastExpr 0x1653b3e94e0 <col:18> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3e93e8 <col:18> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3e9348 'tmp' 'widefelem':'widelimb [7]'
|   | `-ImplicitCastExpr 0x1653b3e94f8 <col:23> 'const limb *':'const limb *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1653b3e9420 <col:23> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3e91a8 'in' 'const limb *':'const limb *'
|   `-CallExpr 0x1653b3e95e0 <line:617:5, col:26> 'void'
|     |-ImplicitCastExpr 0x1653b3e95c8 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x1653b3e9510 <col:5> 'void (limb *, const widelimb *)' Function 0x1653b3f5a28 'felem_reduce' 'void (limb *, const widelimb *)'
|     |-ImplicitCastExpr 0x1653b3e9610 <col:18> 'limb *':'limb *' <LValueToRValue>
|     | `-DeclRefExpr 0x1653b3e9530 <col:18> 'limb *':'limb *' lvalue ParmVar 0x1653b3e9130 'out' 'limb *':'limb *'
|     `-ImplicitCastExpr 0x1653b3e9640 <col:23> 'const widelimb *':'const widelimb *' <NoOp>
|       `-ImplicitCastExpr 0x1653b3e9628 <col:23> 'widelimb *' <ArrayToPointerDecay>
|         `-DeclRefExpr 0x1653b3e9550 <col:23> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3e9348 'tmp' 'widefelem':'widelimb [7]'
|-FunctionDecl 0x1653b3e98e8 <line:620:1, line:625:1> line:620:13 used felem_mul_reduce 'void (limb *, const limb *, const limb *)' static
| |-ParmVarDecl 0x1653b3e9690 <col:30, col:36> col:36 used out 'limb *':'limb *'
| |-ParmVarDecl 0x1653b3e9708 <col:41, col:53> col:53 used in1 'const limb *':'const limb *'
| |-ParmVarDecl 0x1653b3e9780 <col:58, col:70> col:70 used in2 'const limb *':'const limb *'
| `-CompoundStmt 0x1653b3e9cc0 <line:621:1, line:625:1>
|   |-DeclStmt 0x1653b3e9a30 <line:622:5, col:18>
|   | `-VarDecl 0x1653b3e99c8 <col:5, col:15> col:15 used tmp 'widefelem':'widelimb [7]'
|   |-CallExpr 0x1653b3e9b50 <line:623:5, col:28> 'void'
|   | |-ImplicitCastExpr 0x1653b3e9b38 <col:5> 'void (*)(widelimb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3e9a48 <col:5> 'void (widelimb *, const limb *, const limb *)' Function 0x1653b3e5488 'felem_mul' 'void (widelimb *, const limb *, const limb *)'
|   | |-ImplicitCastExpr 0x1653b3e9b88 <col:15> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3e9a68 <col:15> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3e99c8 'tmp' 'widefelem':'widelimb [7]'
|   | |-ImplicitCastExpr 0x1653b3e9ba0 <col:20> 'const limb *':'const limb *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1653b3e9aa0 <col:20> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3e9708 'in1' 'const limb *':'const limb *'
|   | `-ImplicitCastExpr 0x1653b3e9bb8 <col:25> 'const limb *':'const limb *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1653b3e9ac0 <col:25> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3e9780 'in2' 'const limb *':'const limb *'
|   `-CallExpr 0x1653b3e9c48 <line:624:5, col:26> 'void'
|     |-ImplicitCastExpr 0x1653b3e9c30 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x1653b3e9bd0 <col:5> 'void (limb *, const widelimb *)' Function 0x1653b3f5a28 'felem_reduce' 'void (limb *, const widelimb *)'
|     |-ImplicitCastExpr 0x1653b3e9c78 <col:18> 'limb *':'limb *' <LValueToRValue>
|     | `-DeclRefExpr 0x1653b3e9bf0 <col:18> 'limb *':'limb *' lvalue ParmVar 0x1653b3e9690 'out' 'limb *':'limb *'
|     `-ImplicitCastExpr 0x1653b3e9ca8 <col:23> 'const widelimb *':'const widelimb *' <NoOp>
|       `-ImplicitCastExpr 0x1653b3e9c90 <col:23> 'widelimb *' <ArrayToPointerDecay>
|         `-DeclRefExpr 0x1653b3e9c10 <col:23> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3e99c8 'tmp' 'widefelem':'widelimb [7]'
|-FunctionDecl 0x1653b3e9e38 <line:631:1, line:681:1> line:631:13 used felem_contract 'void (limb *, const limb *)' static
| |-ParmVarDecl 0x1653b3e9cf8 <col:28, col:34> col:34 used out 'limb *':'limb *'
| |-ParmVarDecl 0x1653b3e9d70 <col:39, col:51> col:51 used in 'const limb *':'const limb *'
| `-CompoundStmt 0x1653b3f8978 <line:632:1, line:681:1>
|   |-DeclStmt 0x1653b3ea078 <line:633:5, col:50>
|   | `-VarDecl 0x1653b3e9f30 <col:5, col:48> col:26 used two56 'const int64_t':'const long long' static cinit
|   |   `-ImplicitCastExpr 0x1653b3ea060 <col:34, col:48> 'int64_t':'long long' <IntegralCast>
|   |     `-BinaryOperator 0x1653b3ea040 <col:34, col:48> 'limb':'unsigned long long' '<<'
|   |       |-ParenExpr 0x1653b3e9ff8 <col:34, col:43> 'limb':'unsigned long long'
|   |       | `-CStyleCastExpr 0x1653b3e9fd0 <col:35, col:42> 'limb':'unsigned long long' <IntegralCast>
|   |       |   `-IntegerLiteral 0x1653b3e9f98 <col:42> 'int' 1
|   |       `-IntegerLiteral 0x1653b3ea018 <col:48> 'int' 56
|   |-DeclStmt 0x1653b3ea260 <line:636:5, col:22>
|   | |-VarDecl 0x1653b3ea168 <col:5, col:18> col:13 used tmp 'int64_t [4]'
|   | `-VarDecl 0x1653b3ea1e0 <col:5, col:21> col:21 used a 'int64_t':'long long'
|   |-BinaryOperator 0x1653b3ea420 <line:637:5, col:18> 'int64_t':'long long' '='
|   | |-ArraySubscriptExpr 0x1653b3ea350 <col:5, col:10> 'int64_t':'long long' lvalue
|   | | |-ImplicitCastExpr 0x1653b3ea338 <col:5> 'int64_t *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x1653b3ea278 <col:5> 'int64_t [4]' lvalue Var 0x1653b3ea168 'tmp' 'int64_t [4]'
|   | | `-IntegerLiteral 0x1653b3ea2b0 <col:9> 'int' 0
|   | `-ImplicitCastExpr 0x1653b3ea408 <col:14, col:18> 'int64_t':'long long' <IntegralCast>
|   |   `-ImplicitCastExpr 0x1653b3ea3f0 <col:14, col:18> 'limb':'unsigned long long' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x1653b3ea3d0 <col:14, col:18> 'const limb':'const unsigned long long' lvalue
|   |       |-ImplicitCastExpr 0x1653b3ea3b8 <col:14> 'const limb *':'const limb *' <LValueToRValue>
|   |       | `-DeclRefExpr 0x1653b3ea370 <col:14> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3e9d70 'in' 'const limb *':'const limb *'
|   |       `-IntegerLiteral 0x1653b3ea390 <col:17> 'int' 0
|   |-BinaryOperator 0x1653b3ee5b0 <line:638:5, col:18> 'int64_t':'long long' '='
|   | |-ArraySubscriptExpr 0x1653b3ea4a0 <col:5, col:10> 'int64_t':'long long' lvalue
|   | | |-ImplicitCastExpr 0x1653b3ea488 <col:5> 'int64_t *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x1653b3ea440 <col:5> 'int64_t [4]' lvalue Var 0x1653b3ea168 'tmp' 'int64_t [4]'
|   | | `-IntegerLiteral 0x1653b3ea460 <col:9> 'int' 1
|   | `-ImplicitCastExpr 0x1653b3ee598 <col:14, col:18> 'int64_t':'long long' <IntegralCast>
|   |   `-ImplicitCastExpr 0x1653b3ee580 <col:14, col:18> 'limb':'unsigned long long' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x1653b3ee560 <col:14, col:18> 'const limb':'const unsigned long long' lvalue
|   |       |-ImplicitCastExpr 0x1653b3ee548 <col:14> 'const limb *':'const limb *' <LValueToRValue>
|   |       | `-DeclRefExpr 0x1653b3ee500 <col:14> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3e9d70 'in' 'const limb *':'const limb *'
|   |       `-IntegerLiteral 0x1653b3ee520 <col:17> 'int' 1
|   |-BinaryOperator 0x1653b3ee700 <line:639:5, col:18> 'int64_t':'long long' '='
|   | |-ArraySubscriptExpr 0x1653b3ee630 <col:5, col:10> 'int64_t':'long long' lvalue
|   | | |-ImplicitCastExpr 0x1653b3ee618 <col:5> 'int64_t *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x1653b3ee5d0 <col:5> 'int64_t [4]' lvalue Var 0x1653b3ea168 'tmp' 'int64_t [4]'
|   | | `-IntegerLiteral 0x1653b3ee5f0 <col:9> 'int' 2
|   | `-ImplicitCastExpr 0x1653b3ee6e8 <col:14, col:18> 'int64_t':'long long' <IntegralCast>
|   |   `-ImplicitCastExpr 0x1653b3ee6d0 <col:14, col:18> 'limb':'unsigned long long' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x1653b3ee6b0 <col:14, col:18> 'const limb':'const unsigned long long' lvalue
|   |       |-ImplicitCastExpr 0x1653b3ee698 <col:14> 'const limb *':'const limb *' <LValueToRValue>
|   |       | `-DeclRefExpr 0x1653b3ee650 <col:14> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3e9d70 'in' 'const limb *':'const limb *'
|   |       `-IntegerLiteral 0x1653b3ee670 <col:17> 'int' 2
|   |-BinaryOperator 0x1653b3ee850 <line:640:5, col:18> 'int64_t':'long long' '='
|   | |-ArraySubscriptExpr 0x1653b3ee780 <col:5, col:10> 'int64_t':'long long' lvalue
|   | | |-ImplicitCastExpr 0x1653b3ee768 <col:5> 'int64_t *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x1653b3ee720 <col:5> 'int64_t [4]' lvalue Var 0x1653b3ea168 'tmp' 'int64_t [4]'
|   | | `-IntegerLiteral 0x1653b3ee740 <col:9> 'int' 3
|   | `-ImplicitCastExpr 0x1653b3ee838 <col:14, col:18> 'int64_t':'long long' <IntegralCast>
|   |   `-ImplicitCastExpr 0x1653b3ee820 <col:14, col:18> 'limb':'unsigned long long' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x1653b3ee800 <col:14, col:18> 'const limb':'const unsigned long long' lvalue
|   |       |-ImplicitCastExpr 0x1653b3ee7e8 <col:14> 'const limb *':'const limb *' <LValueToRValue>
|   |       | `-DeclRefExpr 0x1653b3ee7a0 <col:14> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3e9d70 'in' 'const limb *':'const limb *'
|   |       `-IntegerLiteral 0x1653b3ee7c0 <col:17> 'int' 3
|   |-BinaryOperator 0x1653b3ee9c0 <line:642:5, col:21> 'int64_t':'long long' '='
|   | |-DeclRefExpr 0x1653b3ee870 <col:5> 'int64_t':'long long' lvalue Var 0x1653b3ea1e0 'a' 'int64_t':'long long'
|   | `-ImplicitCastExpr 0x1653b3ee9a8 <col:9, col:21> 'int64_t':'long long' <IntegralCast>
|   |   `-ParenExpr 0x1653b3ee988 <col:9, col:21> 'limb':'unsigned long long'
|   |     `-BinaryOperator 0x1653b3ee968 <col:10, col:19> 'limb':'unsigned long long' '>>'
|   |       |-ImplicitCastExpr 0x1653b3ee950 <col:10, col:14> 'limb':'unsigned long long' <LValueToRValue>
|   |       | `-ArraySubscriptExpr 0x1653b3ee908 <col:10, col:14> 'const limb':'const unsigned long long' lvalue
|   |       |   |-ImplicitCastExpr 0x1653b3ee8f0 <col:10> 'const limb *':'const limb *' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x1653b3ee8a8 <col:10> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3e9d70 'in' 'const limb *':'const limb *'
|   |       |   `-IntegerLiteral 0x1653b3ee8c8 <col:13> 'int' 3
|   |       `-IntegerLiteral 0x1653b3ee928 <col:19> 'int' 56
|   |-CompoundAssignOperator 0x1653b3eea98 <line:643:5, col:15> 'int64_t':'long long' '-=' ComputeLHSTy='long long' ComputeResultTy='long long'
|   | |-ArraySubscriptExpr 0x1653b3eea40 <col:5, col:10> 'int64_t':'long long' lvalue
|   | | |-ImplicitCastExpr 0x1653b3eea28 <col:5> 'int64_t *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x1653b3ee9e0 <col:5> 'int64_t [4]' lvalue Var 0x1653b3ea168 'tmp' 'int64_t [4]'
|   | | `-IntegerLiteral 0x1653b3eea00 <col:9> 'int' 0
|   | `-ImplicitCastExpr 0x1653b3eea80 <col:15> 'int64_t':'long long' <LValueToRValue>
|   |   `-DeclRefExpr 0x1653b3eea60 <col:15> 'int64_t':'long long' lvalue Var 0x1653b3ea1e0 'a' 'int64_t':'long long'
|   |-CompoundAssignOperator 0x1653b3eebc8 <line:644:5, col:20> 'int64_t':'long long' '+=' ComputeLHSTy='long long' ComputeResultTy='long long'
|   | |-ArraySubscriptExpr 0x1653b3eeb28 <col:5, col:10> 'int64_t':'long long' lvalue
|   | | |-ImplicitCastExpr 0x1653b3eeb10 <col:5> 'int64_t *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x1653b3eeac8 <col:5> 'int64_t [4]' lvalue Var 0x1653b3ea168 'tmp' 'int64_t [4]'
|   | | `-IntegerLiteral 0x1653b3eeae8 <col:9> 'int' 1
|   | `-BinaryOperator 0x1653b3eeba8 <col:15, col:20> 'int64_t':'long long' '<<'
|   |   |-ImplicitCastExpr 0x1653b3eeb90 <col:15> 'int64_t':'long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1653b3eeb48 <col:15> 'int64_t':'long long' lvalue Var 0x1653b3ea1e0 'a' 'int64_t':'long long'
|   |   `-IntegerLiteral 0x1653b3eeb68 <col:20> 'int' 40
|   |-CompoundAssignOperator 0x1653b3eeca0 <line:645:5, col:15> 'int64_t':'long long' '&=' ComputeLHSTy='long long' ComputeResultTy='long long'
|   | |-ArraySubscriptExpr 0x1653b3eec58 <col:5, col:10> 'int64_t':'long long' lvalue
|   | | |-ImplicitCastExpr 0x1653b3eec40 <col:5> 'int64_t *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x1653b3eebf8 <col:5> 'int64_t [4]' lvalue Var 0x1653b3ea168 'tmp' 'int64_t [4]'
|   | | `-IntegerLiteral 0x1653b3eec18 <col:9> 'int' 3
|   | `-IntegerLiteral 0x1653b3eec78 <col:15> 'long long' 72057594037927935
|   |-BinaryOperator 0x1653b3ef398 <line:650:5, line:651:70> 'int64_t':'long long' '='
|   | |-DeclRefExpr 0x1653b3eecd0 <line:650:5> 'int64_t':'long long' lvalue Var 0x1653b3ea1e0 'a' 'int64_t':'long long'
|   | `-ImplicitCastExpr 0x1653b3ef380 <col:9, line:651:70> 'int64_t':'long long' <IntegralCast>
|   |   `-BinaryOperator 0x1653b3ef360 <line:650:9, line:651:70> 'unsigned long long' '|'
|   |     |-ParenExpr 0x1653b3eeff8 <line:650:9, col:60> 'unsigned long long'
|   |     | `-BinaryOperator 0x1653b3eefd8 <col:10, col:59> 'unsigned long long' '+'
|   |     |   |-ParenExpr 0x1653b3eef78 <col:10, col:55> 'unsigned long long'
|   |     |   | `-BinaryOperator 0x1653b3eef58 <col:11, col:54> 'unsigned long long' '&'
|   |     |   |   |-BinaryOperator 0x1653b3eee20 <col:11, col:23> 'unsigned long long' '&'
|   |     |   |   | |-ImplicitCastExpr 0x1653b3eedf0 <col:11, col:15> 'limb':'unsigned long long' <LValueToRValue>
|   |     |   |   | | `-ArraySubscriptExpr 0x1653b3eed50 <col:11, col:15> 'const limb':'const unsigned long long' lvalue
|   |     |   |   | |   |-ImplicitCastExpr 0x1653b3eed38 <col:11> 'const limb *':'const limb *' <LValueToRValue>
|   |     |   |   | |   | `-DeclRefExpr 0x1653b3eecf0 <col:11> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3e9d70 'in' 'const limb *':'const limb *'
|   |     |   |   | |   `-IntegerLiteral 0x1653b3eed10 <col:14> 'int' 3
|   |     |   |   | `-ImplicitCastExpr 0x1653b3eee08 <col:19, col:23> 'limb':'unsigned long long' <LValueToRValue>
|   |     |   |   |   `-ArraySubscriptExpr 0x1653b3eedd0 <col:19, col:23> 'const limb':'const unsigned long long' lvalue
|   |     |   |   |     |-ImplicitCastExpr 0x1653b3eedb8 <col:19> 'const limb *':'const limb *' <LValueToRValue>
|   |     |   |   |     | `-DeclRefExpr 0x1653b3eed70 <col:19> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3e9d70 'in' 'const limb *':'const limb *'
|   |     |   |   |     `-IntegerLiteral 0x1653b3eed90 <col:22> 'int' 2
|   |     |   |   `-ParenExpr 0x1653b3eef38 <col:27, col:54> 'unsigned long long'
|   |     |   |     `-BinaryOperator 0x1653b3eef18 <col:28, col:36> 'unsigned long long' '|'
|   |     |   |       |-ImplicitCastExpr 0x1653b3eeee8 <col:28, col:32> 'limb':'unsigned long long' <LValueToRValue>
|   |     |   |       | `-ArraySubscriptExpr 0x1653b3eeea0 <col:28, col:32> 'const limb':'const unsigned long long' lvalue
|   |     |   |       |   |-ImplicitCastExpr 0x1653b3eee88 <col:28> 'const limb *':'const limb *' <LValueToRValue>
|   |     |   |       |   | `-DeclRefExpr 0x1653b3eee40 <col:28> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3e9d70 'in' 'const limb *':'const limb *'
|   |     |   |       |   `-IntegerLiteral 0x1653b3eee60 <col:31> 'int' 1
|   |     |   |       `-ImplicitCastExpr 0x1653b3eef00 <col:36> 'unsigned long long' <IntegralCast>
|   |     |   |         `-IntegerLiteral 0x1653b3eeec0 <col:36> 'long long' 1099511627775
|   |     |   `-ImplicitCastExpr 0x1653b3eefc0 <col:59> 'unsigned long long' <IntegralCast>
|   |     |     `-IntegerLiteral 0x1653b3eef98 <col:59> 'int' 1
|   |     `-ImplicitCastExpr 0x1653b3ef348 <line:651:9, col:70> 'unsigned long long' <IntegralCast>
|   |       `-ParenExpr 0x1653b3ef328 <col:9, col:70> 'long long'
|   |         `-BinaryOperator 0x1653b3ef308 <col:10, col:68> 'long long' '>>'
|   |           |-ParenExpr 0x1653b3ef2c0 <col:10, col:63> 'long long'
|   |           | `-BinaryOperator 0x1653b3ef2a0 <col:11, col:62> 'long long' '-'
|   |           |   |-CStyleCastExpr 0x1653b3ef238 <col:11, col:58> 'int64_t':'long long' <IntegralCast>
|   |           |   | `-ParenExpr 0x1653b3ef218 <col:21, col:58> 'unsigned long long'
|   |           |   |   `-BinaryOperator 0x1653b3ef1c8 <col:22, col:57> 'unsigned long long' '+'
|   |           |   |     |-ImplicitCastExpr 0x1653b3ef1b0 <col:22, col:26> 'limb':'unsigned long long' <LValueToRValue>
|   |           |   |     | `-ArraySubscriptExpr 0x1653b3ef078 <col:22, col:26> 'const limb':'const unsigned long long' lvalue
|   |           |   |     |   |-ImplicitCastExpr 0x1653b3ef060 <col:22> 'const limb *':'const limb *' <LValueToRValue>
|   |           |   |     |   | `-DeclRefExpr 0x1653b3ef018 <col:22> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3e9d70 'in' 'const limb *':'const limb *'
|   |           |   |     |   `-IntegerLiteral 0x1653b3ef038 <col:25> 'int' 0
|   |           |   |     `-ParenExpr 0x1653b3ef190 <col:30, col:57> 'unsigned long long'
|   |           |   |       `-BinaryOperator 0x1653b3ef170 <col:31, col:39> 'unsigned long long' '&'
|   |           |   |         |-ImplicitCastExpr 0x1653b3ef140 <col:31, col:35> 'limb':'unsigned long long' <LValueToRValue>
|   |           |   |         | `-ArraySubscriptExpr 0x1653b3ef0f8 <col:31, col:35> 'const limb':'const unsigned long long' lvalue
|   |           |   |         |   |-ImplicitCastExpr 0x1653b3ef0e0 <col:31> 'const limb *':'const limb *' <LValueToRValue>
|   |           |   |         |   | `-DeclRefExpr 0x1653b3ef098 <col:31> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3e9d70 'in' 'const limb *':'const limb *'
|   |           |   |         |   `-IntegerLiteral 0x1653b3ef0b8 <col:34> 'int' 1
|   |           |   |         `-ImplicitCastExpr 0x1653b3ef158 <col:39> 'unsigned long long' <IntegralCast>
|   |           |   |           `-IntegerLiteral 0x1653b3ef118 <col:39> 'long long' 1099511627775
|   |           |   `-ImplicitCastExpr 0x1653b3ef288 <col:62> 'long long' <IntegralCast>
|   |           |     `-IntegerLiteral 0x1653b3ef260 <col:62> 'int' 1
|   |           `-IntegerLiteral 0x1653b3ef2e0 <col:68> 'int' 63
|   |-CompoundAssignOperator 0x1653b3ef400 <line:652:5, col:10> 'int64_t':'long long' '&=' ComputeLHSTy='long long' ComputeResultTy='long long'
|   | |-DeclRefExpr 0x1653b3ef3b8 <col:5> 'int64_t':'long long' lvalue Var 0x1653b3ea1e0 'a' 'int64_t':'long long'
|   | `-IntegerLiteral 0x1653b3ef3d8 <col:10> 'long long' 72057594037927935
|   |-BinaryOperator 0x1653b3ef550 <line:654:5, col:20> 'int64_t':'long long' '='
|   | |-DeclRefExpr 0x1653b3ef430 <col:5> 'int64_t':'long long' lvalue Var 0x1653b3ea1e0 'a' 'int64_t':'long long'
|   | `-BinaryOperator 0x1653b3ef530 <col:9, col:20> 'long long' '>>'
|   |   |-ParenExpr 0x1653b3ef4e8 <col:9, col:15> 'long long'
|   |   | `-BinaryOperator 0x1653b3ef4c8 <col:10, col:14> 'long long' '-'
|   |   |   |-ImplicitCastExpr 0x1653b3ef498 <col:10> 'int64_t':'long long' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x1653b3ef450 <col:10> 'int64_t':'long long' lvalue Var 0x1653b3ea1e0 'a' 'int64_t':'long long'
|   |   |   `-ImplicitCastExpr 0x1653b3ef4b0 <col:14> 'long long' <IntegralCast>
|   |   |     `-IntegerLiteral 0x1653b3ef470 <col:14> 'int' 1
|   |   `-IntegerLiteral 0x1653b3ef508 <col:20> 'int' 63
|   |-CompoundAssignOperator 0x1653b3ef688 <line:656:5, col:19> 'int64_t':'long long' '&=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |-ArraySubscriptExpr 0x1653b3ef5d0 <col:5, col:10> 'int64_t':'long long' lvalue
|   | | |-ImplicitCastExpr 0x1653b3ef5b8 <col:5> 'int64_t *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x1653b3ef570 <col:5> 'int64_t [4]' lvalue Var 0x1653b3ea168 'tmp' 'int64_t [4]'
|   | | `-IntegerLiteral 0x1653b3ef590 <col:9> 'int' 3
|   | `-BinaryOperator 0x1653b3ef668 <col:15, col:19> 'unsigned long long' '^'
|   |   |-ImplicitCastExpr 0x1653b3ef650 <col:15> 'unsigned long long' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x1653b3ef638 <col:15> 'int64_t':'long long' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1653b3ef5f0 <col:15> 'int64_t':'long long' lvalue Var 0x1653b3ea1e0 'a' 'int64_t':'long long'
|   |   `-IntegerLiteral 0x1653b3ef610 <col:19> 'unsigned long long' 18446744073709551615
|   |-CompoundAssignOperator 0x1653b3ef7d0 <line:657:5, col:19> 'int64_t':'long long' '&=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |-ArraySubscriptExpr 0x1653b3ef718 <col:5, col:10> 'int64_t':'long long' lvalue
|   | | |-ImplicitCastExpr 0x1653b3ef700 <col:5> 'int64_t *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x1653b3ef6b8 <col:5> 'int64_t [4]' lvalue Var 0x1653b3ea168 'tmp' 'int64_t [4]'
|   | | `-IntegerLiteral 0x1653b3ef6d8 <col:9> 'int' 2
|   | `-BinaryOperator 0x1653b3ef7b0 <col:15, col:19> 'unsigned long long' '^'
|   |   |-ImplicitCastExpr 0x1653b3ef798 <col:15> 'unsigned long long' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x1653b3ef780 <col:15> 'int64_t':'long long' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1653b3ef738 <col:15> 'int64_t':'long long' lvalue Var 0x1653b3ea1e0 'a' 'int64_t':'long long'
|   |   `-IntegerLiteral 0x1653b3ef758 <col:19> 'unsigned long long' 18446744073709551615
|   |-CompoundAssignOperator 0x1653b3ef998 <line:658:5, col:42> 'int64_t':'long long' '&=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |-ArraySubscriptExpr 0x1653b3ef860 <col:5, col:10> 'int64_t':'long long' lvalue
|   | | |-ImplicitCastExpr 0x1653b3ef848 <col:5> 'int64_t *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x1653b3ef800 <col:5> 'int64_t [4]' lvalue Var 0x1653b3ea168 'tmp' 'int64_t [4]'
|   | | `-IntegerLiteral 0x1653b3ef820 <col:9> 'int' 1
|   | `-BinaryOperator 0x1653b3ef978 <col:15, col:42> 'unsigned long long' '|'
|   |   |-ParenExpr 0x1653b3ef918 <col:15, col:38> 'unsigned long long'
|   |   | `-BinaryOperator 0x1653b3ef8f8 <col:16, col:20> 'unsigned long long' '^'
|   |   |   |-ImplicitCastExpr 0x1653b3ef8e0 <col:16> 'unsigned long long' <IntegralCast>
|   |   |   | `-ImplicitCastExpr 0x1653b3ef8c8 <col:16> 'int64_t':'long long' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x1653b3ef880 <col:16> 'int64_t':'long long' lvalue Var 0x1653b3ea1e0 'a' 'int64_t':'long long'
|   |   |   `-IntegerLiteral 0x1653b3ef8a0 <col:20> 'unsigned long long' 18446744073709551615
|   |   `-ImplicitCastExpr 0x1653b3ef960 <col:42> 'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x1653b3ef938 <col:42> 'long long' 1099511627775
|   |-CompoundAssignOperator 0x1653b3efae0 <line:659:5, col:19> 'int64_t':'long long' '-=' ComputeLHSTy='long long' ComputeResultTy='long long'
|   | |-ArraySubscriptExpr 0x1653b3efa28 <col:5, col:10> 'int64_t':'long long' lvalue
|   | | |-ImplicitCastExpr 0x1653b3efa10 <col:5> 'int64_t *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x1653b3ef9c8 <col:5> 'int64_t [4]' lvalue Var 0x1653b3ea168 'tmp' 'int64_t [4]'
|   | | `-IntegerLiteral 0x1653b3ef9e8 <col:9> 'int' 0
|   | `-BinaryOperator 0x1653b3efac0 <col:15, col:19> 'long long' '&'
|   |   |-ImplicitCastExpr 0x1653b3efaa8 <col:15> 'long long' <IntegralCast>
|   |   | `-IntegerLiteral 0x1653b3efa48 <col:15> 'int' 1
|   |   `-ImplicitCastExpr 0x1653b3efa90 <col:19> 'int64_t':'long long' <LValueToRValue>
|   |     `-DeclRefExpr 0x1653b3efa70 <col:19> 'int64_t':'long long' lvalue Var 0x1653b3ea1e0 'a' 'int64_t':'long long'
|   |-BinaryOperator 0x1653b3efc10 <line:665:5, col:19> 'int64_t':'long long' '='
|   | |-DeclRefExpr 0x1653b3efb10 <col:5> 'int64_t':'long long' lvalue Var 0x1653b3ea1e0 'a' 'int64_t':'long long'
|   | `-BinaryOperator 0x1653b3efbf0 <col:9, col:19> 'int64_t':'long long' '>>'
|   |   |-ImplicitCastExpr 0x1653b3efbd8 <col:9, col:14> 'int64_t':'long long' <LValueToRValue>
|   |   | `-ArraySubscriptExpr 0x1653b3efb90 <col:9, col:14> 'int64_t':'long long' lvalue
|   |   |   |-ImplicitCastExpr 0x1653b3efb78 <col:9> 'int64_t *' <ArrayToPointerDecay>
|   |   |   | `-DeclRefExpr 0x1653b3efb30 <col:9> 'int64_t [4]' lvalue Var 0x1653b3ea168 'tmp' 'int64_t [4]'
|   |   |   `-IntegerLiteral 0x1653b3efb50 <col:13> 'int' 0
|   |   `-IntegerLiteral 0x1653b3efbb0 <col:19> 'int' 63
|   |-CompoundAssignOperator 0x1653b3efd58 <line:666:5, col:23> 'int64_t':'long long' '+=' ComputeLHSTy='long long' ComputeResultTy='long long'
|   | |-ArraySubscriptExpr 0x1653b3efc90 <col:5, col:10> 'int64_t':'long long' lvalue
|   | | |-ImplicitCastExpr 0x1653b3efc78 <col:5> 'int64_t *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x1653b3efc30 <col:5> 'int64_t [4]' lvalue Var 0x1653b3ea168 'tmp' 'int64_t [4]'
|   | | `-IntegerLiteral 0x1653b3efc50 <col:9> 'int' 0
|   | `-BinaryOperator 0x1653b3efd38 <col:15, col:23> 'long long' '&'
|   |   |-ImplicitCastExpr 0x1653b3efd08 <col:15> 'int64_t':'long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1653b3efcb0 <col:15> 'const int64_t':'const long long' lvalue Var 0x1653b3e9f30 'two56' 'const int64_t':'const long long'
|   |   `-ImplicitCastExpr 0x1653b3efd20 <col:23> 'int64_t':'long long' <LValueToRValue>
|   |     `-DeclRefExpr 0x1653b3efce8 <col:23> 'int64_t':'long long' lvalue Var 0x1653b3ea1e0 'a' 'int64_t':'long long'
|   |-CompoundAssignOperator 0x1653b3efee8 <line:667:5, col:19> 'int64_t':'long long' '-=' ComputeLHSTy='long long' ComputeResultTy='long long'
|   | |-ArraySubscriptExpr 0x1653b3efe30 <col:5, col:10> 'int64_t':'long long' lvalue
|   | | |-ImplicitCastExpr 0x1653b3efe18 <col:5> 'int64_t *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x1653b3efdd0 <col:5> 'int64_t [4]' lvalue Var 0x1653b3ea168 'tmp' 'int64_t [4]'
|   | | `-IntegerLiteral 0x1653b3efdf0 <col:9> 'int' 1
|   | `-BinaryOperator 0x1653b3efec8 <col:15, col:19> 'long long' '&'
|   |   |-ImplicitCastExpr 0x1653b3efeb0 <col:15> 'long long' <IntegralCast>
|   |   | `-IntegerLiteral 0x1653b3efe50 <col:15> 'int' 1
|   |   `-ImplicitCastExpr 0x1653b3efe98 <col:19> 'int64_t':'long long' <LValueToRValue>
|   |     `-DeclRefExpr 0x1653b3efe78 <col:19> 'int64_t':'long long' lvalue Var 0x1653b3ea1e0 'a' 'int64_t':'long long'
|   |-CompoundAssignOperator 0x1653b3f0078 <line:670:5, col:25> 'int64_t':'long long' '+=' ComputeLHSTy='long long' ComputeResultTy='long long'
|   | |-ArraySubscriptExpr 0x1653b3eff78 <col:5, col:10> 'int64_t':'long long' lvalue
|   | | |-ImplicitCastExpr 0x1653b3eff60 <col:5> 'int64_t *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x1653b3eff18 <col:5> 'int64_t [4]' lvalue Var 0x1653b3ea168 'tmp' 'int64_t [4]'
|   | | `-IntegerLiteral 0x1653b3eff38 <col:9> 'int' 2
|   | `-BinaryOperator 0x1653b3f0058 <col:15, col:25> 'int64_t':'long long' '>>'
|   |   |-ImplicitCastExpr 0x1653b3f0040 <col:15, col:20> 'int64_t':'long long' <LValueToRValue>
|   |   | `-ArraySubscriptExpr 0x1653b3efff8 <col:15, col:20> 'int64_t':'long long' lvalue
|   |   |   |-ImplicitCastExpr 0x1653b3effe0 <col:15> 'int64_t *' <ArrayToPointerDecay>
|   |   |   | `-DeclRefExpr 0x1653b3eff98 <col:15> 'int64_t [4]' lvalue Var 0x1653b3ea168 'tmp' 'int64_t [4]'
|   |   |   `-IntegerLiteral 0x1653b3effb8 <col:19> 'int' 1
|   |   `-IntegerLiteral 0x1653b3f0018 <col:25> 'int' 56
|   |-CompoundAssignOperator 0x1653b3f0150 <line:671:5, col:15> 'int64_t':'long long' '&=' ComputeLHSTy='long long' ComputeResultTy='long long'
|   | |-ArraySubscriptExpr 0x1653b3f0108 <col:5, col:10> 'int64_t':'long long' lvalue
|   | | |-ImplicitCastExpr 0x1653b3f00f0 <col:5> 'int64_t *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x1653b3f00a8 <col:5> 'int64_t [4]' lvalue Var 0x1653b3ea168 'tmp' 'int64_t [4]'
|   | | `-IntegerLiteral 0x1653b3f00c8 <col:9> 'int' 1
|   | `-IntegerLiteral 0x1653b3f0128 <col:15> 'long long' 72057594037927935
|   |-CompoundAssignOperator 0x1653b3f02e0 <line:673:5, col:25> 'int64_t':'long long' '+=' ComputeLHSTy='long long' ComputeResultTy='long long'
|   | |-ArraySubscriptExpr 0x1653b3f01e0 <col:5, col:10> 'int64_t':'long long' lvalue
|   | | |-ImplicitCastExpr 0x1653b3f01c8 <col:5> 'int64_t *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x1653b3f0180 <col:5> 'int64_t [4]' lvalue Var 0x1653b3ea168 'tmp' 'int64_t [4]'
|   | | `-IntegerLiteral 0x1653b3f01a0 <col:9> 'int' 3
|   | `-BinaryOperator 0x1653b3f02c0 <col:15, col:25> 'int64_t':'long long' '>>'
|   |   |-ImplicitCastExpr 0x1653b3f02a8 <col:15, col:20> 'int64_t':'long long' <LValueToRValue>
|   |   | `-ArraySubscriptExpr 0x1653b3f0260 <col:15, col:20> 'int64_t':'long long' lvalue
|   |   |   |-ImplicitCastExpr 0x1653b3f0248 <col:15> 'int64_t *' <ArrayToPointerDecay>
|   |   |   | `-DeclRefExpr 0x1653b3f0200 <col:15> 'int64_t [4]' lvalue Var 0x1653b3ea168 'tmp' 'int64_t [4]'
|   |   |   `-IntegerLiteral 0x1653b3f0220 <col:19> 'int' 2
|   |   `-IntegerLiteral 0x1653b3f0280 <col:25> 'int' 56
|   |-CompoundAssignOperator 0x1653b3f03b8 <line:674:5, col:15> 'int64_t':'long long' '&=' ComputeLHSTy='long long' ComputeResultTy='long long'
|   | |-ArraySubscriptExpr 0x1653b3f0370 <col:5, col:10> 'int64_t':'long long' lvalue
|   | | |-ImplicitCastExpr 0x1653b3f0358 <col:5> 'int64_t *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x1653b3f0310 <col:5> 'int64_t [4]' lvalue Var 0x1653b3ea168 'tmp' 'int64_t [4]'
|   | | `-IntegerLiteral 0x1653b3f0330 <col:9> 'int' 2
|   | `-IntegerLiteral 0x1653b3f0390 <col:15> 'long long' 72057594037927935
|   |-BinaryOperator 0x1653b3f8568 <line:677:5, col:19> 'limb':'unsigned long long' '='
|   | |-ArraySubscriptExpr 0x1653b3f0448 <col:5, col:10> 'limb':'unsigned long long' lvalue
|   | | |-ImplicitCastExpr 0x1653b3f0430 <col:5> 'limb *':'limb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b3f03e8 <col:5> 'limb *':'limb *' lvalue ParmVar 0x1653b3e9cf8 'out' 'limb *':'limb *'
|   | | `-IntegerLiteral 0x1653b3f0408 <col:9> 'int' 0
|   | `-ImplicitCastExpr 0x1653b3f8550 <col:14, col:19> 'limb':'unsigned long long' <IntegralCast>
|   |   `-ImplicitCastExpr 0x1653b3f04e8 <col:14, col:19> 'int64_t':'long long' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x1653b3f04c8 <col:14, col:19> 'int64_t':'long long' lvalue
|   |       |-ImplicitCastExpr 0x1653b3f04b0 <col:14> 'int64_t *' <ArrayToPointerDecay>
|   |       | `-DeclRefExpr 0x1653b3f0468 <col:14> 'int64_t [4]' lvalue Var 0x1653b3ea168 'tmp' 'int64_t [4]'
|   |       `-IntegerLiteral 0x1653b3f0488 <col:18> 'int' 0
|   |-BinaryOperator 0x1653b3f86b8 <line:678:5, col:19> 'limb':'unsigned long long' '='
|   | |-ArraySubscriptExpr 0x1653b3f85e8 <col:5, col:10> 'limb':'unsigned long long' lvalue
|   | | |-ImplicitCastExpr 0x1653b3f85d0 <col:5> 'limb *':'limb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b3f8588 <col:5> 'limb *':'limb *' lvalue ParmVar 0x1653b3e9cf8 'out' 'limb *':'limb *'
|   | | `-IntegerLiteral 0x1653b3f85a8 <col:9> 'int' 1
|   | `-ImplicitCastExpr 0x1653b3f86a0 <col:14, col:19> 'limb':'unsigned long long' <IntegralCast>
|   |   `-ImplicitCastExpr 0x1653b3f8688 <col:14, col:19> 'int64_t':'long long' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x1653b3f8668 <col:14, col:19> 'int64_t':'long long' lvalue
|   |       |-ImplicitCastExpr 0x1653b3f8650 <col:14> 'int64_t *' <ArrayToPointerDecay>
|   |       | `-DeclRefExpr 0x1653b3f8608 <col:14> 'int64_t [4]' lvalue Var 0x1653b3ea168 'tmp' 'int64_t [4]'
|   |       `-IntegerLiteral 0x1653b3f8628 <col:18> 'int' 1
|   |-BinaryOperator 0x1653b3f8808 <line:679:5, col:19> 'limb':'unsigned long long' '='
|   | |-ArraySubscriptExpr 0x1653b3f8738 <col:5, col:10> 'limb':'unsigned long long' lvalue
|   | | |-ImplicitCastExpr 0x1653b3f8720 <col:5> 'limb *':'limb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b3f86d8 <col:5> 'limb *':'limb *' lvalue ParmVar 0x1653b3e9cf8 'out' 'limb *':'limb *'
|   | | `-IntegerLiteral 0x1653b3f86f8 <col:9> 'int' 2
|   | `-ImplicitCastExpr 0x1653b3f87f0 <col:14, col:19> 'limb':'unsigned long long' <IntegralCast>
|   |   `-ImplicitCastExpr 0x1653b3f87d8 <col:14, col:19> 'int64_t':'long long' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x1653b3f87b8 <col:14, col:19> 'int64_t':'long long' lvalue
|   |       |-ImplicitCastExpr 0x1653b3f87a0 <col:14> 'int64_t *' <ArrayToPointerDecay>
|   |       | `-DeclRefExpr 0x1653b3f8758 <col:14> 'int64_t [4]' lvalue Var 0x1653b3ea168 'tmp' 'int64_t [4]'
|   |       `-IntegerLiteral 0x1653b3f8778 <col:18> 'int' 2
|   `-BinaryOperator 0x1653b3f8958 <line:680:5, col:19> 'limb':'unsigned long long' '='
|     |-ArraySubscriptExpr 0x1653b3f8888 <col:5, col:10> 'limb':'unsigned long long' lvalue
|     | |-ImplicitCastExpr 0x1653b3f8870 <col:5> 'limb *':'limb *' <LValueToRValue>
|     | | `-DeclRefExpr 0x1653b3f8828 <col:5> 'limb *':'limb *' lvalue ParmVar 0x1653b3e9cf8 'out' 'limb *':'limb *'
|     | `-IntegerLiteral 0x1653b3f8848 <col:9> 'int' 3
|     `-ImplicitCastExpr 0x1653b3f8940 <col:14, col:19> 'limb':'unsigned long long' <IntegralCast>
|       `-ImplicitCastExpr 0x1653b3f8928 <col:14, col:19> 'int64_t':'long long' <LValueToRValue>
|         `-ArraySubscriptExpr 0x1653b3f8908 <col:14, col:19> 'int64_t':'long long' lvalue
|           |-ImplicitCastExpr 0x1653b3f88f0 <col:14> 'int64_t *' <ArrayToPointerDecay>
|           | `-DeclRefExpr 0x1653b3f88a8 <col:14> 'int64_t [4]' lvalue Var 0x1653b3ea168 'tmp' 'int64_t [4]'
|           `-IntegerLiteral 0x1653b3f88c8 <col:18> 'int' 3
|-FunctionDecl 0x1653b3f8b88 <line:688:1, line:701:1> line:688:13 used felem_is_zero 'limb (const limb *)' static
| |-ParmVarDecl 0x1653b3f8a78 <col:27, col:39> col:39 used in 'const limb *':'const limb *'
| `-CompoundStmt 0x1653b3fa338 <line:689:1, line:701:1>
|   |-DeclStmt 0x1653b3f8dd0 <line:690:5, col:40>
|   | |-VarDecl 0x1653b3f8c58 <col:5, col:10> col:10 used zero 'limb':'unsigned long long'
|   | |-VarDecl 0x1653b3f8cd0 <col:5, col:16> col:16 used two224m96p1 'limb':'unsigned long long'
|   | `-VarDecl 0x1653b3f8d48 <col:5, col:29> col:29 used two225m97p2 'limb':'unsigned long long'
|   |-BinaryOperator 0x1653b3f90e0 <line:692:5, col:40> 'limb':'unsigned long long' '='
|   | |-DeclRefExpr 0x1653b3f8de8 <col:5> 'limb':'unsigned long long' lvalue Var 0x1653b3f8c58 'zero' 'limb':'unsigned long long'
|   | `-BinaryOperator 0x1653b3f90c0 <col:12, col:40> 'unsigned long long' '|'
|   |   |-BinaryOperator 0x1653b3f9008 <col:12, col:32> 'unsigned long long' '|'
|   |   | |-BinaryOperator 0x1653b3f8f50 <col:12, col:24> 'unsigned long long' '|'
|   |   | | |-ImplicitCastExpr 0x1653b3f8f20 <col:12, col:16> 'limb':'unsigned long long' <LValueToRValue>
|   |   | | | `-ArraySubscriptExpr 0x1653b3f8e80 <col:12, col:16> 'const limb':'const unsigned long long' lvalue
|   |   | | |   |-ImplicitCastExpr 0x1653b3f8e68 <col:12> 'const limb *':'const limb *' <LValueToRValue>
|   |   | | |   | `-DeclRefExpr 0x1653b3f8e20 <col:12> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3f8a78 'in' 'const limb *':'const limb *'
|   |   | | |   `-IntegerLiteral 0x1653b3f8e40 <col:15> 'int' 0
|   |   | | `-ImplicitCastExpr 0x1653b3f8f38 <col:20, col:24> 'limb':'unsigned long long' <LValueToRValue>
|   |   | |   `-ArraySubscriptExpr 0x1653b3f8f00 <col:20, col:24> 'const limb':'const unsigned long long' lvalue
|   |   | |     |-ImplicitCastExpr 0x1653b3f8ee8 <col:20> 'const limb *':'const limb *' <LValueToRValue>
|   |   | |     | `-DeclRefExpr 0x1653b3f8ea0 <col:20> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3f8a78 'in' 'const limb *':'const limb *'
|   |   | |     `-IntegerLiteral 0x1653b3f8ec0 <col:23> 'int' 1
|   |   | `-ImplicitCastExpr 0x1653b3f8ff0 <col:28, col:32> 'limb':'unsigned long long' <LValueToRValue>
|   |   |   `-ArraySubscriptExpr 0x1653b3f8fd0 <col:28, col:32> 'const limb':'const unsigned long long' lvalue
|   |   |     |-ImplicitCastExpr 0x1653b3f8fb8 <col:28> 'const limb *':'const limb *' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x1653b3f8f70 <col:28> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3f8a78 'in' 'const limb *':'const limb *'
|   |   |     `-IntegerLiteral 0x1653b3f8f90 <col:31> 'int' 2
|   |   `-ImplicitCastExpr 0x1653b3f90a8 <col:36, col:40> 'limb':'unsigned long long' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x1653b3f9088 <col:36, col:40> 'const limb':'const unsigned long long' lvalue
|   |       |-ImplicitCastExpr 0x1653b3f9070 <col:36> 'const limb *':'const limb *' <LValueToRValue>
|   |       | `-DeclRefExpr 0x1653b3f9028 <col:36> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3f8a78 'in' 'const limb *':'const limb *'
|   |       `-IntegerLiteral 0x1653b3f9048 <col:39> 'int' 3
|   |-BinaryOperator 0x1653b3f9330 <line:693:5, col:45> 'limb':'unsigned long long' '='
|   | |-DeclRefExpr 0x1653b3f9100 <col:5> 'limb':'unsigned long long' lvalue Var 0x1653b3f8c58 'zero' 'limb':'unsigned long long'
|   | `-ImplicitCastExpr 0x1653b3f9318 <col:12, col:45> 'limb':'unsigned long long' <IntegralCast>
|   |   `-BinaryOperator 0x1653b3f92f8 <col:12, col:45> 'long long' '&'
|   |     |-ParenExpr 0x1653b3f9298 <col:12, col:41> 'long long'
|   |     | `-BinaryOperator 0x1653b3f9278 <col:13, col:39> 'long long' '>>'
|   |     |   |-ParenExpr 0x1653b3f9230 <col:13, col:34> 'long long'
|   |     |   | `-BinaryOperator 0x1653b3f9210 <col:14, col:33> 'long long' '-'
|   |     |   |   |-CStyleCastExpr 0x1653b3f91a8 <col:14, col:29> 'int64_t':'long long' <IntegralCast>
|   |     |   |   | `-ImplicitCastExpr 0x1653b3f9190 <col:24, col:29> 'limb':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   |     |   |   |   `-ParenExpr 0x1653b3f9170 <col:24, col:29> 'limb':'unsigned long long' lvalue
|   |     |   |   |     `-DeclRefExpr 0x1653b3f9120 <col:25> 'limb':'unsigned long long' lvalue Var 0x1653b3f8c58 'zero' 'limb':'unsigned long long'
|   |     |   |   `-ImplicitCastExpr 0x1653b3f91f8 <col:33> 'long long' <IntegralCast>
|   |     |   |     `-IntegerLiteral 0x1653b3f91d0 <col:33> 'int' 1
|   |     |   `-IntegerLiteral 0x1653b3f9250 <col:39> 'int' 63
|   |     `-ImplicitCastExpr 0x1653b3f92e0 <col:45> 'long long' <IntegralCast>
|   |       `-IntegerLiteral 0x1653b3f92b8 <col:45> 'int' 1
|   |-BinaryOperator 0x1653b3f9848 <line:694:5, line:695:69> 'limb':'unsigned long long' '='
|   | |-DeclRefExpr 0x1653b3f9350 <line:694:5> 'limb':'unsigned long long' lvalue Var 0x1653b3f8cd0 'two224m96p1' 'limb':'unsigned long long'
|   | `-BinaryOperator 0x1653b3f9828 <col:19, line:695:69> 'unsigned long long' '|'
|   |   |-BinaryOperator 0x1653b3f96f0 <line:694:19, line:695:38> 'unsigned long long' '|'
|   |   | |-BinaryOperator 0x1653b3f95b8 <line:694:19, col:60> 'unsigned long long' '|'
|   |   | | |-ParenExpr 0x1653b3f9480 <col:19, col:29> 'unsigned long long'
|   |   | | | `-BinaryOperator 0x1653b3f9460 <col:20, col:28> 'unsigned long long' '^'
|   |   | | |   |-ImplicitCastExpr 0x1653b3f9430 <col:20, col:24> 'limb':'unsigned long long' <LValueToRValue>
|   |   | | |   | `-ArraySubscriptExpr 0x1653b3f93e8 <col:20, col:24> 'const limb':'const unsigned long long' lvalue
|   |   | | |   |   |-ImplicitCastExpr 0x1653b3f93d0 <col:20> 'const limb *':'const limb *' <LValueToRValue>
|   |   | | |   |   | `-DeclRefExpr 0x1653b3f9388 <col:20> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3f8a78 'in' 'const limb *':'const limb *'
|   |   | | |   |   `-IntegerLiteral 0x1653b3f93a8 <col:23> 'int' 0
|   |   | | |   `-ImplicitCastExpr 0x1653b3f9448 <col:28> 'unsigned long long' <IntegralCast>
|   |   | | |     `-IntegerLiteral 0x1653b3f9408 <col:28> 'int' 1
|   |   | | `-ParenExpr 0x1653b3f9598 <col:33, col:60> 'unsigned long long'
|   |   | |   `-BinaryOperator 0x1653b3f9578 <col:34, col:42> 'unsigned long long' '^'
|   |   | |     |-ImplicitCastExpr 0x1653b3f9548 <col:34, col:38> 'limb':'unsigned long long' <LValueToRValue>
|   |   | |     | `-ArraySubscriptExpr 0x1653b3f9500 <col:34, col:38> 'const limb':'const unsigned long long' lvalue
|   |   | |     |   |-ImplicitCastExpr 0x1653b3f94e8 <col:34> 'const limb *':'const limb *' <LValueToRValue>
|   |   | |     |   | `-DeclRefExpr 0x1653b3f94a0 <col:34> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3f8a78 'in' 'const limb *':'const limb *'
|   |   | |     |   `-IntegerLiteral 0x1653b3f94c0 <col:37> 'int' 1
|   |   | |     `-ImplicitCastExpr 0x1653b3f9560 <col:42> 'unsigned long long' <IntegralCast>
|   |   | |       `-IntegerLiteral 0x1653b3f9520 <col:42> 'long long' 72056494526300160
|   |   | `-ParenExpr 0x1653b3f96d0 <line:695:11, col:38> 'unsigned long long'
|   |   |   `-BinaryOperator 0x1653b3f96b0 <col:12, col:20> 'unsigned long long' '^'
|   |   |     |-ImplicitCastExpr 0x1653b3f9680 <col:12, col:16> 'limb':'unsigned long long' <LValueToRValue>
|   |   |     | `-ArraySubscriptExpr 0x1653b3f9638 <col:12, col:16> 'const limb':'const unsigned long long' lvalue
|   |   |     |   |-ImplicitCastExpr 0x1653b3f9620 <col:12> 'const limb *':'const limb *' <LValueToRValue>
|   |   |     |   | `-DeclRefExpr 0x1653b3f95d8 <col:12> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3f8a78 'in' 'const limb *':'const limb *'
|   |   |     |   `-IntegerLiteral 0x1653b3f95f8 <col:15> 'int' 2
|   |   |     `-ImplicitCastExpr 0x1653b3f9698 <col:20> 'unsigned long long' <IntegralCast>
|   |   |       `-IntegerLiteral 0x1653b3f9658 <col:20> 'long long' 72057594037927935
|   |   `-ParenExpr 0x1653b3f9808 <col:42, col:69> 'unsigned long long'
|   |     `-BinaryOperator 0x1653b3f97e8 <col:43, col:51> 'unsigned long long' '^'
|   |       |-ImplicitCastExpr 0x1653b3f97b8 <col:43, col:47> 'limb':'unsigned long long' <LValueToRValue>
|   |       | `-ArraySubscriptExpr 0x1653b3f9770 <col:43, col:47> 'const limb':'const unsigned long long' lvalue
|   |       |   |-ImplicitCastExpr 0x1653b3f9758 <col:43> 'const limb *':'const limb *' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x1653b3f9710 <col:43> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3f8a78 'in' 'const limb *':'const limb *'
|   |       |   `-IntegerLiteral 0x1653b3f9730 <col:46> 'int' 3
|   |       `-ImplicitCastExpr 0x1653b3f97d0 <col:51> 'unsigned long long' <IntegralCast>
|   |         `-IntegerLiteral 0x1653b3f9790 <col:51> 'long long' 72057594037927935
|   |-BinaryOperator 0x1653b3f9a98 <line:696:5, col:59> 'limb':'unsigned long long' '='
|   | |-DeclRefExpr 0x1653b3f9868 <col:5> 'limb':'unsigned long long' lvalue Var 0x1653b3f8cd0 'two224m96p1' 'limb':'unsigned long long'
|   | `-ImplicitCastExpr 0x1653b3f9a80 <col:19, col:59> 'limb':'unsigned long long' <IntegralCast>
|   |   `-BinaryOperator 0x1653b3f9a60 <col:19, col:59> 'long long' '&'
|   |     |-ParenExpr 0x1653b3f9a00 <col:19, col:55> 'long long'
|   |     | `-BinaryOperator 0x1653b3f99e0 <col:20, col:53> 'long long' '>>'
|   |     |   |-ParenExpr 0x1653b3f9998 <col:20, col:48> 'long long'
|   |     |   | `-BinaryOperator 0x1653b3f9978 <col:21, col:47> 'long long' '-'
|   |     |   |   |-CStyleCastExpr 0x1653b3f9910 <col:21, col:43> 'int64_t':'long long' <IntegralCast>
|   |     |   |   | `-ImplicitCastExpr 0x1653b3f98f8 <col:31, col:43> 'limb':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   |     |   |   |   `-ParenExpr 0x1653b3f98d8 <col:31, col:43> 'limb':'unsigned long long' lvalue
|   |     |   |   |     `-DeclRefExpr 0x1653b3f9888 <col:32> 'limb':'unsigned long long' lvalue Var 0x1653b3f8cd0 'two224m96p1' 'limb':'unsigned long long'
|   |     |   |   `-ImplicitCastExpr 0x1653b3f9960 <col:47> 'long long' <IntegralCast>
|   |     |   |     `-IntegerLiteral 0x1653b3f9938 <col:47> 'int' 1
|   |     |   `-IntegerLiteral 0x1653b3f99b8 <col:53> 'int' 63
|   |     `-ImplicitCastExpr 0x1653b3f9a48 <col:59> 'long long' <IntegralCast>
|   |       `-IntegerLiteral 0x1653b3f9a20 <col:59> 'int' 1
|   |-BinaryOperator 0x1653b3f9fb0 <line:697:5, line:698:69> 'limb':'unsigned long long' '='
|   | |-DeclRefExpr 0x1653b3f9ab8 <line:697:5> 'limb':'unsigned long long' lvalue Var 0x1653b3f8d48 'two225m97p2' 'limb':'unsigned long long'
|   | `-BinaryOperator 0x1653b3f9f90 <col:19, line:698:69> 'unsigned long long' '|'
|   |   |-BinaryOperator 0x1653b3f9e58 <line:697:19, line:698:38> 'unsigned long long' '|'
|   |   | |-BinaryOperator 0x1653b3f9d20 <line:697:19, col:60> 'unsigned long long' '|'
|   |   | | |-ParenExpr 0x1653b3f9be8 <col:19, col:29> 'unsigned long long'
|   |   | | | `-BinaryOperator 0x1653b3f9bc8 <col:20, col:28> 'unsigned long long' '^'
|   |   | | |   |-ImplicitCastExpr 0x1653b3f9b98 <col:20, col:24> 'limb':'unsigned long long' <LValueToRValue>
|   |   | | |   | `-ArraySubscriptExpr 0x1653b3f9b50 <col:20, col:24> 'const limb':'const unsigned long long' lvalue
|   |   | | |   |   |-ImplicitCastExpr 0x1653b3f9b38 <col:20> 'const limb *':'const limb *' <LValueToRValue>
|   |   | | |   |   | `-DeclRefExpr 0x1653b3f9af0 <col:20> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3f8a78 'in' 'const limb *':'const limb *'
|   |   | | |   |   `-IntegerLiteral 0x1653b3f9b10 <col:23> 'int' 0
|   |   | | |   `-ImplicitCastExpr 0x1653b3f9bb0 <col:28> 'unsigned long long' <IntegralCast>
|   |   | | |     `-IntegerLiteral 0x1653b3f9b70 <col:28> 'int' 2
|   |   | | `-ParenExpr 0x1653b3f9d00 <col:33, col:60> 'unsigned long long'
|   |   | |   `-BinaryOperator 0x1653b3f9ce0 <col:34, col:42> 'unsigned long long' '^'
|   |   | |     |-ImplicitCastExpr 0x1653b3f9cb0 <col:34, col:38> 'limb':'unsigned long long' <LValueToRValue>
|   |   | |     | `-ArraySubscriptExpr 0x1653b3f9c68 <col:34, col:38> 'const limb':'const unsigned long long' lvalue
|   |   | |     |   |-ImplicitCastExpr 0x1653b3f9c50 <col:34> 'const limb *':'const limb *' <LValueToRValue>
|   |   | |     |   | `-DeclRefExpr 0x1653b3f9c08 <col:34> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3f8a78 'in' 'const limb *':'const limb *'
|   |   | |     |   `-IntegerLiteral 0x1653b3f9c28 <col:37> 'int' 1
|   |   | |     `-ImplicitCastExpr 0x1653b3f9cc8 <col:42> 'unsigned long long' <IntegralCast>
|   |   | |       `-IntegerLiteral 0x1653b3f9c88 <col:42> 'long long' 72055395014672384
|   |   | `-ParenExpr 0x1653b3f9e38 <line:698:11, col:38> 'unsigned long long'
|   |   |   `-BinaryOperator 0x1653b3f9e18 <col:12, col:20> 'unsigned long long' '^'
|   |   |     |-ImplicitCastExpr 0x1653b3f9de8 <col:12, col:16> 'limb':'unsigned long long' <LValueToRValue>
|   |   |     | `-ArraySubscriptExpr 0x1653b3f9da0 <col:12, col:16> 'const limb':'const unsigned long long' lvalue
|   |   |     |   |-ImplicitCastExpr 0x1653b3f9d88 <col:12> 'const limb *':'const limb *' <LValueToRValue>
|   |   |     |   | `-DeclRefExpr 0x1653b3f9d40 <col:12> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3f8a78 'in' 'const limb *':'const limb *'
|   |   |     |   `-IntegerLiteral 0x1653b3f9d60 <col:15> 'int' 2
|   |   |     `-ImplicitCastExpr 0x1653b3f9e00 <col:20> 'unsigned long long' <IntegralCast>
|   |   |       `-IntegerLiteral 0x1653b3f9dc0 <col:20> 'long long' 72057594037927935
|   |   `-ParenExpr 0x1653b3f9f70 <col:42, col:69> 'unsigned long long'
|   |     `-BinaryOperator 0x1653b3f9f50 <col:43, col:51> 'unsigned long long' '^'
|   |       |-ImplicitCastExpr 0x1653b3f9f20 <col:43, col:47> 'limb':'unsigned long long' <LValueToRValue>
|   |       | `-ArraySubscriptExpr 0x1653b3f9ed8 <col:43, col:47> 'const limb':'const unsigned long long' lvalue
|   |       |   |-ImplicitCastExpr 0x1653b3f9ec0 <col:43> 'const limb *':'const limb *' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x1653b3f9e78 <col:43> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3f8a78 'in' 'const limb *':'const limb *'
|   |       |   `-IntegerLiteral 0x1653b3f9e98 <col:46> 'int' 3
|   |       `-ImplicitCastExpr 0x1653b3f9f38 <col:51> 'unsigned long long' <IntegralCast>
|   |         `-IntegerLiteral 0x1653b3f9ef8 <col:51> 'long long' 144115188075855871
|   |-BinaryOperator 0x1653b3fa200 <line:699:5, col:59> 'limb':'unsigned long long' '='
|   | |-DeclRefExpr 0x1653b3f9fd0 <col:5> 'limb':'unsigned long long' lvalue Var 0x1653b3f8d48 'two225m97p2' 'limb':'unsigned long long'
|   | `-ImplicitCastExpr 0x1653b3fa1e8 <col:19, col:59> 'limb':'unsigned long long' <IntegralCast>
|   |   `-BinaryOperator 0x1653b3fa1c8 <col:19, col:59> 'long long' '&'
|   |     |-ParenExpr 0x1653b3fa168 <col:19, col:55> 'long long'
|   |     | `-BinaryOperator 0x1653b3fa148 <col:20, col:53> 'long long' '>>'
|   |     |   |-ParenExpr 0x1653b3fa100 <col:20, col:48> 'long long'
|   |     |   | `-BinaryOperator 0x1653b3fa0e0 <col:21, col:47> 'long long' '-'
|   |     |   |   |-CStyleCastExpr 0x1653b3fa078 <col:21, col:43> 'int64_t':'long long' <IntegralCast>
|   |     |   |   | `-ImplicitCastExpr 0x1653b3fa060 <col:31, col:43> 'limb':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   |     |   |   |   `-ParenExpr 0x1653b3fa040 <col:31, col:43> 'limb':'unsigned long long' lvalue
|   |     |   |   |     `-DeclRefExpr 0x1653b3f9ff0 <col:32> 'limb':'unsigned long long' lvalue Var 0x1653b3f8d48 'two225m97p2' 'limb':'unsigned long long'
|   |     |   |   `-ImplicitCastExpr 0x1653b3fa0c8 <col:47> 'long long' <IntegralCast>
|   |     |   |     `-IntegerLiteral 0x1653b3fa0a0 <col:47> 'int' 1
|   |     |   `-IntegerLiteral 0x1653b3fa120 <col:53> 'int' 63
|   |     `-ImplicitCastExpr 0x1653b3fa1b0 <col:59> 'long long' <IntegralCast>
|   |       `-IntegerLiteral 0x1653b3fa188 <col:59> 'int' 1
|   `-ReturnStmt 0x1653b3fa328 <line:700:5, col:45>
|     `-ParenExpr 0x1653b3fa308 <col:12, col:45> 'unsigned long long'
|       `-BinaryOperator 0x1653b3fa2e8 <col:13, col:34> 'unsigned long long' '|'
|         |-BinaryOperator 0x1653b3fa290 <col:13, col:20> 'unsigned long long' '|'
|         | |-ImplicitCastExpr 0x1653b3fa260 <col:13> 'limb':'unsigned long long' <LValueToRValue>
|         | | `-DeclRefExpr 0x1653b3fa220 <col:13> 'limb':'unsigned long long' lvalue Var 0x1653b3f8c58 'zero' 'limb':'unsigned long long'
|         | `-ImplicitCastExpr 0x1653b3fa278 <col:20> 'limb':'unsigned long long' <LValueToRValue>
|         |   `-DeclRefExpr 0x1653b3fa240 <col:20> 'limb':'unsigned long long' lvalue Var 0x1653b3f8cd0 'two224m96p1' 'limb':'unsigned long long'
|         `-ImplicitCastExpr 0x1653b3fa2d0 <col:34> 'limb':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x1653b3fa2b0 <col:34> 'limb':'unsigned long long' lvalue Var 0x1653b3f8d48 'two225m97p2' 'limb':'unsigned long long'
|-FunctionDecl 0x1653b3fa450 <line:703:1, line:706:1> line:703:12 used felem_is_zero_int 'int (const void *)' static
| |-ParmVarDecl 0x1653b3fa3a0 <col:30, col:42> col:42 used in 'const void *'
| `-CompoundStmt 0x1653b3ea6d8 <line:704:1, line:706:1>
|   `-ReturnStmt 0x1653b3ea6c8 <line:705:5, col:48>
|     `-CStyleCastExpr 0x1653b3ea6a0 <col:12, col:48> 'int' <IntegralCast>
|       `-ParenExpr 0x1653b3ea680 <col:17, col:48> 'unsigned long long'
|         `-BinaryOperator 0x1653b3ea628 <col:18, col:47> 'unsigned long long' '&'
|           |-CallExpr 0x1653b3ea550 <col:18, col:34> 'limb':'unsigned long long'
|           | |-ImplicitCastExpr 0x1653b3ea538 <col:18> 'limb (*)(const limb *)' <FunctionToPointerDecay>
|           | | `-DeclRefExpr 0x1653b3fa510 <col:18> 'limb (const limb *)' Function 0x1653b3f8b88 'felem_is_zero' 'limb (const limb *)'
|           | `-ImplicitCastExpr 0x1653b3ea590 <col:32> 'const limb *':'const limb *' <BitCast>
|           |   `-ImplicitCastExpr 0x1653b3ea578 <col:32> 'const void *' <LValueToRValue>
|           |     `-DeclRefExpr 0x1653b3fa530 <col:32> 'const void *' lvalue ParmVar 0x1653b3fa3a0 'in' 'const void *'
|           `-ParenExpr 0x1653b3ea608 <col:38, col:47> 'limb':'unsigned long long'
|             `-CStyleCastExpr 0x1653b3ea5e0 <col:39, col:46> 'limb':'unsigned long long' <IntegralCast>
|               `-IntegerLiteral 0x1653b3ea5a8 <col:46> 'int' 1
|-FunctionDecl 0x1653b3ea840 <line:710:1, line:788:1> line:710:13 used felem_inv 'void (limb *, const limb *)' static
| |-ParmVarDecl 0x1653b3ea700 <col:23, col:29> col:29 used out 'limb *':'limb *'
| |-ParmVarDecl 0x1653b3ea778 <col:34, col:46> col:46 used in 'const limb *':'const limb *'
| `-CompoundStmt 0x1653b3f3290 <line:711:1, line:788:1>
|   |-DeclStmt 0x1653b3eab10 <line:712:5, col:36>
|   | |-VarDecl 0x1653b3ea918 <col:5, col:11> col:11 used ftmp 'felem':'limb [4]'
|   | |-VarDecl 0x1653b3ea990 <col:5, col:17> col:17 used ftmp2 'felem':'limb [4]'
|   | |-VarDecl 0x1653b3eaa08 <col:5, col:24> col:24 used ftmp3 'felem':'limb [4]'
|   | `-VarDecl 0x1653b3eaa80 <col:5, col:31> col:31 used ftmp4 'felem':'limb [4]'
|   |-DeclStmt 0x1653b3eaba0 <line:713:5, col:18>
|   | `-VarDecl 0x1653b3eab38 <col:5, col:15> col:15 used tmp 'widefelem':'widelimb [7]'
|   |-DeclStmt 0x1653b3eac38 <line:714:5, col:15>
|   | `-VarDecl 0x1653b3eabd0 <col:5, col:14> col:14 used i 'unsigned int'
|   |-CallExpr 0x1653b3eace0 <line:716:5, col:25> 'void'
|   | |-ImplicitCastExpr 0x1653b3eacc8 <col:5> 'void (*)(widelimb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3eac50 <col:5> 'void (widelimb *, const limb *)' Function 0x1653b304030 'felem_square' 'void (widelimb *, const limb *)'
|   | |-ImplicitCastExpr 0x1653b3ead10 <col:18> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3eac70 <col:18> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3eab38 'tmp' 'widefelem':'widelimb [7]'
|   | `-ImplicitCastExpr 0x1653b3ead28 <col:23> 'const limb *':'const limb *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1653b3eaca8 <col:23> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3ea778 'in' 'const limb *':'const limb *'
|   |-CallExpr 0x1653b3eadd0 <line:717:5, col:27> 'void'
|   | |-ImplicitCastExpr 0x1653b3eadb8 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3ead40 <col:5> 'void (limb *, const widelimb *)' Function 0x1653b3f5a28 'felem_reduce' 'void (limb *, const widelimb *)'
|   | |-ImplicitCastExpr 0x1653b3eae00 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3ead60 <col:18> 'felem':'limb [4]' lvalue Var 0x1653b3ea918 'ftmp' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x1653b3eae30 <col:24> 'const widelimb *':'const widelimb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b3eae18 <col:24> 'widelimb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b3ead98 <col:24> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3eab38 'tmp' 'widefelem':'widelimb [7]'
|   |-CallExpr 0x1653b3eaee0 <line:718:5, col:28> 'void'
|   | |-ImplicitCastExpr 0x1653b3eaec8 <col:5> 'void (*)(widelimb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3eae48 <col:5> 'void (widelimb *, const limb *, const limb *)' Function 0x1653b3e5488 'felem_mul' 'void (widelimb *, const limb *, const limb *)'
|   | |-ImplicitCastExpr 0x1653b3eaf18 <col:15> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3eae68 <col:15> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3eab38 'tmp' 'widefelem':'widelimb [7]'
|   | |-ImplicitCastExpr 0x1653b3eaf30 <col:20> 'const limb *':'const limb *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1653b3eae88 <col:20> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3ea778 'in' 'const limb *':'const limb *'
|   | `-ImplicitCastExpr 0x1653b3eaf60 <col:24> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b3eaf48 <col:24> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b3eaea8 <col:24> 'felem':'limb [4]' lvalue Var 0x1653b3ea918 'ftmp' 'felem':'limb [4]'
|   |-CallExpr 0x1653b3eaff0 <line:719:5, col:27> 'void'
|   | |-ImplicitCastExpr 0x1653b3eafd8 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3eaf78 <col:5> 'void (limb *, const widelimb *)' Function 0x1653b3f5a28 'felem_reduce' 'void (limb *, const widelimb *)'
|   | |-ImplicitCastExpr 0x1653b3eb020 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3eaf98 <col:18> 'felem':'limb [4]' lvalue Var 0x1653b3ea918 'ftmp' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x1653b3eb050 <col:24> 'const widelimb *':'const widelimb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b3eb038 <col:24> 'widelimb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b3eafb8 <col:24> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3eab38 'tmp' 'widefelem':'widelimb [7]'
|   |-CallExpr 0x1653b3eb0e0 <line:720:5, col:27> 'void'
|   | |-ImplicitCastExpr 0x1653b3eb0c8 <col:5> 'void (*)(widelimb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3eb068 <col:5> 'void (widelimb *, const limb *)' Function 0x1653b304030 'felem_square' 'void (widelimb *, const limb *)'
|   | |-ImplicitCastExpr 0x1653b3eb110 <col:18> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3eb088 <col:18> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3eab38 'tmp' 'widefelem':'widelimb [7]'
|   | `-ImplicitCastExpr 0x1653b3eb140 <col:23> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b3eb128 <col:23> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b3eb0a8 <col:23> 'felem':'limb [4]' lvalue Var 0x1653b3ea918 'ftmp' 'felem':'limb [4]'
|   |-CallExpr 0x1653b3eb1d0 <line:721:5, col:27> 'void'
|   | |-ImplicitCastExpr 0x1653b3eb1b8 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3eb158 <col:5> 'void (limb *, const widelimb *)' Function 0x1653b3f5a28 'felem_reduce' 'void (limb *, const widelimb *)'
|   | |-ImplicitCastExpr 0x1653b3eb200 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3eb178 <col:18> 'felem':'limb [4]' lvalue Var 0x1653b3ea918 'ftmp' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x1653b3eb230 <col:24> 'const widelimb *':'const widelimb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b3eb218 <col:24> 'widelimb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b3eb198 <col:24> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3eab38 'tmp' 'widefelem':'widelimb [7]'
|   |-CallExpr 0x1653b3eb2e0 <line:722:5, col:28> 'void'
|   | |-ImplicitCastExpr 0x1653b3eb2c8 <col:5> 'void (*)(widelimb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3eb248 <col:5> 'void (widelimb *, const limb *, const limb *)' Function 0x1653b3e5488 'felem_mul' 'void (widelimb *, const limb *, const limb *)'
|   | |-ImplicitCastExpr 0x1653b3eb318 <col:15> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3eb268 <col:15> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3eab38 'tmp' 'widefelem':'widelimb [7]'
|   | |-ImplicitCastExpr 0x1653b3eb330 <col:20> 'const limb *':'const limb *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1653b3eb288 <col:20> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3ea778 'in' 'const limb *':'const limb *'
|   | `-ImplicitCastExpr 0x1653b3eb360 <col:24> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b3eb348 <col:24> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b3eb2a8 <col:24> 'felem':'limb [4]' lvalue Var 0x1653b3ea918 'ftmp' 'felem':'limb [4]'
|   |-CallExpr 0x1653b3eb3f0 <line:723:5, col:27> 'void'
|   | |-ImplicitCastExpr 0x1653b3eb3d8 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3eb378 <col:5> 'void (limb *, const widelimb *)' Function 0x1653b3f5a28 'felem_reduce' 'void (limb *, const widelimb *)'
|   | |-ImplicitCastExpr 0x1653b3eb420 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3eb398 <col:18> 'felem':'limb [4]' lvalue Var 0x1653b3ea918 'ftmp' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x1653b3eb450 <col:24> 'const widelimb *':'const widelimb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b3eb438 <col:24> 'widelimb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b3eb3b8 <col:24> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3eab38 'tmp' 'widefelem':'widelimb [7]'
|   |-CallExpr 0x1653b3eb4e0 <line:724:5, col:27> 'void'
|   | |-ImplicitCastExpr 0x1653b3eb4c8 <col:5> 'void (*)(widelimb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3eb468 <col:5> 'void (widelimb *, const limb *)' Function 0x1653b304030 'felem_square' 'void (widelimb *, const limb *)'
|   | |-ImplicitCastExpr 0x1653b3eb510 <col:18> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3eb488 <col:18> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3eab38 'tmp' 'widefelem':'widelimb [7]'
|   | `-ImplicitCastExpr 0x1653b3eb540 <col:23> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b3eb528 <col:23> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b3eb4a8 <col:23> 'felem':'limb [4]' lvalue Var 0x1653b3ea918 'ftmp' 'felem':'limb [4]'
|   |-CallExpr 0x1653b3eb5e8 <line:725:5, col:28> 'void'
|   | |-ImplicitCastExpr 0x1653b3eb5d0 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3eb558 <col:5> 'void (limb *, const widelimb *)' Function 0x1653b3f5a28 'felem_reduce' 'void (limb *, const widelimb *)'
|   | |-ImplicitCastExpr 0x1653b3eb618 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3eb578 <col:18> 'felem':'limb [4]' lvalue Var 0x1653b3ea990 'ftmp2' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x1653b3eb648 <col:25> 'const widelimb *':'const widelimb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b3eb630 <col:25> 'widelimb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b3eb5b0 <col:25> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3eab38 'tmp' 'widefelem':'widelimb [7]'
|   |-CallExpr 0x1653b3eb6d8 <line:726:5, col:28> 'void'
|   | |-ImplicitCastExpr 0x1653b3eb6c0 <col:5> 'void (*)(widelimb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3eb660 <col:5> 'void (widelimb *, const limb *)' Function 0x1653b304030 'felem_square' 'void (widelimb *, const limb *)'
|   | |-ImplicitCastExpr 0x1653b3eb708 <col:18> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3eb680 <col:18> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3eab38 'tmp' 'widefelem':'widelimb [7]'
|   | `-ImplicitCastExpr 0x1653b3eb738 <col:23> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b3eb720 <col:23> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b3eb6a0 <col:23> 'felem':'limb [4]' lvalue Var 0x1653b3ea990 'ftmp2' 'felem':'limb [4]'
|   |-CallExpr 0x1653b3eb7c8 <line:727:5, col:28> 'void'
|   | |-ImplicitCastExpr 0x1653b3eb7b0 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3eb750 <col:5> 'void (limb *, const widelimb *)' Function 0x1653b3f5a28 'felem_reduce' 'void (limb *, const widelimb *)'
|   | |-ImplicitCastExpr 0x1653b3eb7f8 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3eb770 <col:18> 'felem':'limb [4]' lvalue Var 0x1653b3ea990 'ftmp2' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x1653b3eb828 <col:25> 'const widelimb *':'const widelimb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b3eb810 <col:25> 'widelimb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b3eb790 <col:25> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3eab38 'tmp' 'widefelem':'widelimb [7]'
|   |-CallExpr 0x1653b3eb8b8 <line:728:5, col:28> 'void'
|   | |-ImplicitCastExpr 0x1653b3eb8a0 <col:5> 'void (*)(widelimb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3eb840 <col:5> 'void (widelimb *, const limb *)' Function 0x1653b304030 'felem_square' 'void (widelimb *, const limb *)'
|   | |-ImplicitCastExpr 0x1653b3eb8e8 <col:18> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3eb860 <col:18> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3eab38 'tmp' 'widefelem':'widelimb [7]'
|   | `-ImplicitCastExpr 0x1653b3eb918 <col:23> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b3eb900 <col:23> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b3eb880 <col:23> 'felem':'limb [4]' lvalue Var 0x1653b3ea990 'ftmp2' 'felem':'limb [4]'
|   |-CallExpr 0x1653b3eb9a8 <line:729:5, col:28> 'void'
|   | |-ImplicitCastExpr 0x1653b3eb990 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3eb930 <col:5> 'void (limb *, const widelimb *)' Function 0x1653b3f5a28 'felem_reduce' 'void (limb *, const widelimb *)'
|   | |-ImplicitCastExpr 0x1653b3eb9d8 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3eb950 <col:18> 'felem':'limb [4]' lvalue Var 0x1653b3ea990 'ftmp2' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x1653b3eba08 <col:25> 'const widelimb *':'const widelimb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b3eb9f0 <col:25> 'widelimb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b3eb970 <col:25> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3eab38 'tmp' 'widefelem':'widelimb [7]'
|   |-CallExpr 0x1653b3ebab8 <line:730:5, col:31> 'void'
|   | |-ImplicitCastExpr 0x1653b3ebaa0 <col:5> 'void (*)(widelimb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3eba20 <col:5> 'void (widelimb *, const limb *, const limb *)' Function 0x1653b3e5488 'felem_mul' 'void (widelimb *, const limb *, const limb *)'
|   | |-ImplicitCastExpr 0x1653b3ebaf0 <col:15> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3eba40 <col:15> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3eab38 'tmp' 'widefelem':'widelimb [7]'
|   | |-ImplicitCastExpr 0x1653b3ebb20 <col:20> 'const limb *':'const limb *' <NoOp>
|   | | `-ImplicitCastExpr 0x1653b3ebb08 <col:20> 'limb *' <ArrayToPointerDecay>
|   | |   `-DeclRefExpr 0x1653b3eba60 <col:20> 'felem':'limb [4]' lvalue Var 0x1653b3ea990 'ftmp2' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x1653b3ebb50 <col:27> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b3ebb38 <col:27> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b3eba80 <col:27> 'felem':'limb [4]' lvalue Var 0x1653b3ea918 'ftmp' 'felem':'limb [4]'
|   |-CallExpr 0x1653b3ebbe0 <line:731:5, col:27> 'void'
|   | |-ImplicitCastExpr 0x1653b3ebbc8 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3ebb68 <col:5> 'void (limb *, const widelimb *)' Function 0x1653b3f5a28 'felem_reduce' 'void (limb *, const widelimb *)'
|   | |-ImplicitCastExpr 0x1653b3ebc10 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3ebb88 <col:18> 'felem':'limb [4]' lvalue Var 0x1653b3ea918 'ftmp' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x1653b3ebc40 <col:24> 'const widelimb *':'const widelimb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b3ebc28 <col:24> 'widelimb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b3ebba8 <col:24> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3eab38 'tmp' 'widefelem':'widelimb [7]'
|   |-CallExpr 0x1653b3ebcd0 <line:732:5, col:27> 'void'
|   | |-ImplicitCastExpr 0x1653b3ebcb8 <col:5> 'void (*)(widelimb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3ebc58 <col:5> 'void (widelimb *, const limb *)' Function 0x1653b304030 'felem_square' 'void (widelimb *, const limb *)'
|   | |-ImplicitCastExpr 0x1653b3ebd00 <col:18> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3ebc78 <col:18> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3eab38 'tmp' 'widefelem':'widelimb [7]'
|   | `-ImplicitCastExpr 0x1653b3ebd30 <col:23> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b3ebd18 <col:23> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b3ebc98 <col:23> 'felem':'limb [4]' lvalue Var 0x1653b3ea918 'ftmp' 'felem':'limb [4]'
|   |-CallExpr 0x1653b3ebdc0 <line:733:5, col:28> 'void'
|   | |-ImplicitCastExpr 0x1653b3ebda8 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3ebd48 <col:5> 'void (limb *, const widelimb *)' Function 0x1653b3f5a28 'felem_reduce' 'void (limb *, const widelimb *)'
|   | |-ImplicitCastExpr 0x1653b3ebdf0 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3ebd68 <col:18> 'felem':'limb [4]' lvalue Var 0x1653b3ea990 'ftmp2' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x1653b3ebe20 <col:25> 'const widelimb *':'const widelimb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b3ebe08 <col:25> 'widelimb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b3ebd88 <col:25> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3eab38 'tmp' 'widefelem':'widelimb [7]'
|   |-ForStmt 0x1653b3ec1a0 <line:734:5, line:737:5>
|   | |-BinaryOperator 0x1653b3ebeb0 <line:734:10, col:14> 'unsigned int' '='
|   | | |-DeclRefExpr 0x1653b3ebe38 <col:10> 'unsigned int' lvalue Var 0x1653b3eabd0 'i' 'unsigned int'
|   | | `-ImplicitCastExpr 0x1653b3ebe98 <col:14> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x1653b3ebe70 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1653b3ebf48 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x1653b3ebf18 <col:17> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b3ebed0 <col:17> 'unsigned int' lvalue Var 0x1653b3eabd0 'i' 'unsigned int'
|   | | `-ImplicitCastExpr 0x1653b3ebf30 <col:21> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x1653b3ebef0 <col:21> 'int' 5
|   | |-UnaryOperator 0x1653b3ebf88 <col:24, col:26> 'unsigned int' prefix '++'
|   | | `-DeclRefExpr 0x1653b3ebf68 <col:26> 'unsigned int' lvalue Var 0x1653b3eabd0 'i' 'unsigned int'
|   | `-CompoundStmt 0x1653b3ec180 <col:29, line:737:5>
|   |   |-CallExpr 0x1653b3ec018 <line:735:9, col:32> 'void'
|   |   | |-ImplicitCastExpr 0x1653b3ec000 <col:9> 'void (*)(widelimb *, const limb *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1653b3ebfa0 <col:9> 'void (widelimb *, const limb *)' Function 0x1653b304030 'felem_square' 'void (widelimb *, const limb *)'
|   |   | |-ImplicitCastExpr 0x1653b3ec048 <col:22> 'widelimb *' <ArrayToPointerDecay>
|   |   | | `-DeclRefExpr 0x1653b3ebfc0 <col:22> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3eab38 'tmp' 'widefelem':'widelimb [7]'
|   |   | `-ImplicitCastExpr 0x1653b3ec078 <col:27> 'const limb *':'const limb *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x1653b3ec060 <col:27> 'limb *' <ArrayToPointerDecay>
|   |   |     `-DeclRefExpr 0x1653b3ebfe0 <col:27> 'felem':'limb [4]' lvalue Var 0x1653b3ea990 'ftmp2' 'felem':'limb [4]'
|   |   `-CallExpr 0x1653b3ec108 <line:736:9, col:32> 'void'
|   |     |-ImplicitCastExpr 0x1653b3ec0f0 <col:9> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1653b3ec090 <col:9> 'void (limb *, const widelimb *)' Function 0x1653b3f5a28 'felem_reduce' 'void (limb *, const widelimb *)'
|   |     |-ImplicitCastExpr 0x1653b3ec138 <col:22> 'limb *' <ArrayToPointerDecay>
|   |     | `-DeclRefExpr 0x1653b3ec0b0 <col:22> 'felem':'limb [4]' lvalue Var 0x1653b3ea990 'ftmp2' 'felem':'limb [4]'
|   |     `-ImplicitCastExpr 0x1653b3ec168 <col:29> 'const widelimb *':'const widelimb *' <NoOp>
|   |       `-ImplicitCastExpr 0x1653b3ec150 <col:29> 'widelimb *' <ArrayToPointerDecay>
|   |         `-DeclRefExpr 0x1653b3ec0d0 <col:29> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3eab38 'tmp' 'widefelem':'widelimb [7]'
|   |-CallExpr 0x1653b3ec270 <line:738:5, col:31> 'void'
|   | |-ImplicitCastExpr 0x1653b3ec258 <col:5> 'void (*)(widelimb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3ec1d8 <col:5> 'void (widelimb *, const limb *, const limb *)' Function 0x1653b3e5488 'felem_mul' 'void (widelimb *, const limb *, const limb *)'
|   | |-ImplicitCastExpr 0x1653b3ec2a8 <col:15> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3ec1f8 <col:15> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3eab38 'tmp' 'widefelem':'widelimb [7]'
|   | |-ImplicitCastExpr 0x1653b3ec2d8 <col:20> 'const limb *':'const limb *' <NoOp>
|   | | `-ImplicitCastExpr 0x1653b3ec2c0 <col:20> 'limb *' <ArrayToPointerDecay>
|   | |   `-DeclRefExpr 0x1653b3ec218 <col:20> 'felem':'limb [4]' lvalue Var 0x1653b3ea990 'ftmp2' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x1653b3ec308 <col:27> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b3ec2f0 <col:27> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b3ec238 <col:27> 'felem':'limb [4]' lvalue Var 0x1653b3ea918 'ftmp' 'felem':'limb [4]'
|   |-CallExpr 0x1653b3ec398 <line:739:5, col:28> 'void'
|   | |-ImplicitCastExpr 0x1653b3ec380 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3ec320 <col:5> 'void (limb *, const widelimb *)' Function 0x1653b3f5a28 'felem_reduce' 'void (limb *, const widelimb *)'
|   | |-ImplicitCastExpr 0x1653b3ec3c8 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3ec340 <col:18> 'felem':'limb [4]' lvalue Var 0x1653b3ea990 'ftmp2' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x1653b3ec3f8 <col:25> 'const widelimb *':'const widelimb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b3ec3e0 <col:25> 'widelimb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b3ec360 <col:25> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3eab38 'tmp' 'widefelem':'widelimb [7]'
|   |-CallExpr 0x1653b3ec488 <line:740:5, col:28> 'void'
|   | |-ImplicitCastExpr 0x1653b3ec470 <col:5> 'void (*)(widelimb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3ec410 <col:5> 'void (widelimb *, const limb *)' Function 0x1653b304030 'felem_square' 'void (widelimb *, const limb *)'
|   | |-ImplicitCastExpr 0x1653b3ec4b8 <col:18> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3ec430 <col:18> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3eab38 'tmp' 'widefelem':'widelimb [7]'
|   | `-ImplicitCastExpr 0x1653b3f0528 <col:23> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b3f0510 <col:23> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b3ec450 <col:23> 'felem':'limb [4]' lvalue Var 0x1653b3ea990 'ftmp2' 'felem':'limb [4]'
|   |-CallExpr 0x1653b3f05d0 <line:741:5, col:28> 'void'
|   | |-ImplicitCastExpr 0x1653b3f05b8 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3f0540 <col:5> 'void (limb *, const widelimb *)' Function 0x1653b3f5a28 'felem_reduce' 'void (limb *, const widelimb *)'
|   | |-ImplicitCastExpr 0x1653b3f0600 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3f0560 <col:18> 'felem':'limb [4]' lvalue Var 0x1653b3eaa08 'ftmp3' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x1653b3f0630 <col:25> 'const widelimb *':'const widelimb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b3f0618 <col:25> 'widelimb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b3f0598 <col:25> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3eab38 'tmp' 'widefelem':'widelimb [7]'
|   |-ForStmt 0x1653b3f0998 <line:742:5, line:745:5>
|   | |-BinaryOperator 0x1653b3f06a8 <line:742:10, col:14> 'unsigned int' '='
|   | | |-DeclRefExpr 0x1653b3f0648 <col:10> 'unsigned int' lvalue Var 0x1653b3eabd0 'i' 'unsigned int'
|   | | `-ImplicitCastExpr 0x1653b3f0690 <col:14> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x1653b3f0668 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1653b3f0740 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x1653b3f0710 <col:17> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b3f06c8 <col:17> 'unsigned int' lvalue Var 0x1653b3eabd0 'i' 'unsigned int'
|   | | `-ImplicitCastExpr 0x1653b3f0728 <col:21> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x1653b3f06e8 <col:21> 'int' 11
|   | |-UnaryOperator 0x1653b3f0780 <col:25, col:27> 'unsigned int' prefix '++'
|   | | `-DeclRefExpr 0x1653b3f0760 <col:27> 'unsigned int' lvalue Var 0x1653b3eabd0 'i' 'unsigned int'
|   | `-CompoundStmt 0x1653b3f0978 <col:30, line:745:5>
|   |   |-CallExpr 0x1653b3f0810 <line:743:9, col:32> 'void'
|   |   | |-ImplicitCastExpr 0x1653b3f07f8 <col:9> 'void (*)(widelimb *, const limb *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1653b3f0798 <col:9> 'void (widelimb *, const limb *)' Function 0x1653b304030 'felem_square' 'void (widelimb *, const limb *)'
|   |   | |-ImplicitCastExpr 0x1653b3f0840 <col:22> 'widelimb *' <ArrayToPointerDecay>
|   |   | | `-DeclRefExpr 0x1653b3f07b8 <col:22> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3eab38 'tmp' 'widefelem':'widelimb [7]'
|   |   | `-ImplicitCastExpr 0x1653b3f0870 <col:27> 'const limb *':'const limb *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x1653b3f0858 <col:27> 'limb *' <ArrayToPointerDecay>
|   |   |     `-DeclRefExpr 0x1653b3f07d8 <col:27> 'felem':'limb [4]' lvalue Var 0x1653b3eaa08 'ftmp3' 'felem':'limb [4]'
|   |   `-CallExpr 0x1653b3f0900 <line:744:9, col:32> 'void'
|   |     |-ImplicitCastExpr 0x1653b3f08e8 <col:9> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1653b3f0888 <col:9> 'void (limb *, const widelimb *)' Function 0x1653b3f5a28 'felem_reduce' 'void (limb *, const widelimb *)'
|   |     |-ImplicitCastExpr 0x1653b3f0930 <col:22> 'limb *' <ArrayToPointerDecay>
|   |     | `-DeclRefExpr 0x1653b3f08a8 <col:22> 'felem':'limb [4]' lvalue Var 0x1653b3eaa08 'ftmp3' 'felem':'limb [4]'
|   |     `-ImplicitCastExpr 0x1653b3f0960 <col:29> 'const widelimb *':'const widelimb *' <NoOp>
|   |       `-ImplicitCastExpr 0x1653b3f0948 <col:29> 'widelimb *' <ArrayToPointerDecay>
|   |         `-DeclRefExpr 0x1653b3f08c8 <col:29> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3eab38 'tmp' 'widefelem':'widelimb [7]'
|   |-CallExpr 0x1653b3f0a68 <line:746:5, col:32> 'void'
|   | |-ImplicitCastExpr 0x1653b3f0a50 <col:5> 'void (*)(widelimb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3f09d0 <col:5> 'void (widelimb *, const limb *, const limb *)' Function 0x1653b3e5488 'felem_mul' 'void (widelimb *, const limb *, const limb *)'
|   | |-ImplicitCastExpr 0x1653b3f0aa0 <col:15> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3f09f0 <col:15> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3eab38 'tmp' 'widefelem':'widelimb [7]'
|   | |-ImplicitCastExpr 0x1653b3f0ad0 <col:20> 'const limb *':'const limb *' <NoOp>
|   | | `-ImplicitCastExpr 0x1653b3f0ab8 <col:20> 'limb *' <ArrayToPointerDecay>
|   | |   `-DeclRefExpr 0x1653b3f0a10 <col:20> 'felem':'limb [4]' lvalue Var 0x1653b3eaa08 'ftmp3' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x1653b3f0b00 <col:27> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b3f0ae8 <col:27> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b3f0a30 <col:27> 'felem':'limb [4]' lvalue Var 0x1653b3ea990 'ftmp2' 'felem':'limb [4]'
|   |-CallExpr 0x1653b3f0b90 <line:747:5, col:28> 'void'
|   | |-ImplicitCastExpr 0x1653b3f0b78 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3f0b18 <col:5> 'void (limb *, const widelimb *)' Function 0x1653b3f5a28 'felem_reduce' 'void (limb *, const widelimb *)'
|   | |-ImplicitCastExpr 0x1653b3f0bc0 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3f0b38 <col:18> 'felem':'limb [4]' lvalue Var 0x1653b3ea990 'ftmp2' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x1653b3f0bf0 <col:25> 'const widelimb *':'const widelimb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b3f0bd8 <col:25> 'widelimb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b3f0b58 <col:25> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3eab38 'tmp' 'widefelem':'widelimb [7]'
|   |-CallExpr 0x1653b3f0c80 <line:748:5, col:28> 'void'
|   | |-ImplicitCastExpr 0x1653b3f0c68 <col:5> 'void (*)(widelimb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3f0c08 <col:5> 'void (widelimb *, const limb *)' Function 0x1653b304030 'felem_square' 'void (widelimb *, const limb *)'
|   | |-ImplicitCastExpr 0x1653b3f0cb0 <col:18> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3f0c28 <col:18> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3eab38 'tmp' 'widefelem':'widelimb [7]'
|   | `-ImplicitCastExpr 0x1653b3f0ce0 <col:23> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b3f0cc8 <col:23> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b3f0c48 <col:23> 'felem':'limb [4]' lvalue Var 0x1653b3ea990 'ftmp2' 'felem':'limb [4]'
|   |-CallExpr 0x1653b3f0d70 <line:749:5, col:28> 'void'
|   | |-ImplicitCastExpr 0x1653b3f0d58 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3f0cf8 <col:5> 'void (limb *, const widelimb *)' Function 0x1653b3f5a28 'felem_reduce' 'void (limb *, const widelimb *)'
|   | |-ImplicitCastExpr 0x1653b3f0da0 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3f0d18 <col:18> 'felem':'limb [4]' lvalue Var 0x1653b3eaa08 'ftmp3' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x1653b3f0dd0 <col:25> 'const widelimb *':'const widelimb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b3f0db8 <col:25> 'widelimb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b3f0d38 <col:25> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3eab38 'tmp' 'widefelem':'widelimb [7]'
|   |-ForStmt 0x1653b3f1138 <line:750:5, line:753:5>
|   | |-BinaryOperator 0x1653b3f0e48 <line:750:10, col:14> 'unsigned int' '='
|   | | |-DeclRefExpr 0x1653b3f0de8 <col:10> 'unsigned int' lvalue Var 0x1653b3eabd0 'i' 'unsigned int'
|   | | `-ImplicitCastExpr 0x1653b3f0e30 <col:14> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x1653b3f0e08 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1653b3f0ee0 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x1653b3f0eb0 <col:17> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b3f0e68 <col:17> 'unsigned int' lvalue Var 0x1653b3eabd0 'i' 'unsigned int'
|   | | `-ImplicitCastExpr 0x1653b3f0ec8 <col:21> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x1653b3f0e88 <col:21> 'int' 23
|   | |-UnaryOperator 0x1653b3f0f20 <col:25, col:27> 'unsigned int' prefix '++'
|   | | `-DeclRefExpr 0x1653b3f0f00 <col:27> 'unsigned int' lvalue Var 0x1653b3eabd0 'i' 'unsigned int'
|   | `-CompoundStmt 0x1653b3f1118 <col:30, line:753:5>
|   |   |-CallExpr 0x1653b3f0fb0 <line:751:9, col:32> 'void'
|   |   | |-ImplicitCastExpr 0x1653b3f0f98 <col:9> 'void (*)(widelimb *, const limb *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1653b3f0f38 <col:9> 'void (widelimb *, const limb *)' Function 0x1653b304030 'felem_square' 'void (widelimb *, const limb *)'
|   |   | |-ImplicitCastExpr 0x1653b3f0fe0 <col:22> 'widelimb *' <ArrayToPointerDecay>
|   |   | | `-DeclRefExpr 0x1653b3f0f58 <col:22> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3eab38 'tmp' 'widefelem':'widelimb [7]'
|   |   | `-ImplicitCastExpr 0x1653b3f1010 <col:27> 'const limb *':'const limb *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x1653b3f0ff8 <col:27> 'limb *' <ArrayToPointerDecay>
|   |   |     `-DeclRefExpr 0x1653b3f0f78 <col:27> 'felem':'limb [4]' lvalue Var 0x1653b3eaa08 'ftmp3' 'felem':'limb [4]'
|   |   `-CallExpr 0x1653b3f10a0 <line:752:9, col:32> 'void'
|   |     |-ImplicitCastExpr 0x1653b3f1088 <col:9> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1653b3f1028 <col:9> 'void (limb *, const widelimb *)' Function 0x1653b3f5a28 'felem_reduce' 'void (limb *, const widelimb *)'
|   |     |-ImplicitCastExpr 0x1653b3f10d0 <col:22> 'limb *' <ArrayToPointerDecay>
|   |     | `-DeclRefExpr 0x1653b3f1048 <col:22> 'felem':'limb [4]' lvalue Var 0x1653b3eaa08 'ftmp3' 'felem':'limb [4]'
|   |     `-ImplicitCastExpr 0x1653b3f1100 <col:29> 'const widelimb *':'const widelimb *' <NoOp>
|   |       `-ImplicitCastExpr 0x1653b3f10e8 <col:29> 'widelimb *' <ArrayToPointerDecay>
|   |         `-DeclRefExpr 0x1653b3f1068 <col:29> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3eab38 'tmp' 'widefelem':'widelimb [7]'
|   |-CallExpr 0x1653b3f1208 <line:754:5, col:32> 'void'
|   | |-ImplicitCastExpr 0x1653b3f11f0 <col:5> 'void (*)(widelimb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3f1170 <col:5> 'void (widelimb *, const limb *, const limb *)' Function 0x1653b3e5488 'felem_mul' 'void (widelimb *, const limb *, const limb *)'
|   | |-ImplicitCastExpr 0x1653b3f1240 <col:15> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3f1190 <col:15> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3eab38 'tmp' 'widefelem':'widelimb [7]'
|   | |-ImplicitCastExpr 0x1653b3f1270 <col:20> 'const limb *':'const limb *' <NoOp>
|   | | `-ImplicitCastExpr 0x1653b3f1258 <col:20> 'limb *' <ArrayToPointerDecay>
|   | |   `-DeclRefExpr 0x1653b3f11b0 <col:20> 'felem':'limb [4]' lvalue Var 0x1653b3eaa08 'ftmp3' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x1653b3f12a0 <col:27> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b3f1288 <col:27> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b3f11d0 <col:27> 'felem':'limb [4]' lvalue Var 0x1653b3ea990 'ftmp2' 'felem':'limb [4]'
|   |-CallExpr 0x1653b3f1330 <line:755:5, col:28> 'void'
|   | |-ImplicitCastExpr 0x1653b3f1318 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3f12b8 <col:5> 'void (limb *, const widelimb *)' Function 0x1653b3f5a28 'felem_reduce' 'void (limb *, const widelimb *)'
|   | |-ImplicitCastExpr 0x1653b3f1360 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3f12d8 <col:18> 'felem':'limb [4]' lvalue Var 0x1653b3eaa08 'ftmp3' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x1653b3f1390 <col:25> 'const widelimb *':'const widelimb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b3f1378 <col:25> 'widelimb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b3f12f8 <col:25> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3eab38 'tmp' 'widefelem':'widelimb [7]'
|   |-CallExpr 0x1653b3f1420 <line:756:5, col:28> 'void'
|   | |-ImplicitCastExpr 0x1653b3f1408 <col:5> 'void (*)(widelimb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3f13a8 <col:5> 'void (widelimb *, const limb *)' Function 0x1653b304030 'felem_square' 'void (widelimb *, const limb *)'
|   | |-ImplicitCastExpr 0x1653b3f1450 <col:18> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3f13c8 <col:18> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3eab38 'tmp' 'widefelem':'widelimb [7]'
|   | `-ImplicitCastExpr 0x1653b3f1480 <col:23> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b3f1468 <col:23> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b3f13e8 <col:23> 'felem':'limb [4]' lvalue Var 0x1653b3eaa08 'ftmp3' 'felem':'limb [4]'
|   |-CallExpr 0x1653b3f1528 <line:757:5, col:28> 'void'
|   | |-ImplicitCastExpr 0x1653b3f1510 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3f1498 <col:5> 'void (limb *, const widelimb *)' Function 0x1653b3f5a28 'felem_reduce' 'void (limb *, const widelimb *)'
|   | |-ImplicitCastExpr 0x1653b3f1558 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3f14b8 <col:18> 'felem':'limb [4]' lvalue Var 0x1653b3eaa80 'ftmp4' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x1653b3f1588 <col:25> 'const widelimb *':'const widelimb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b3f1570 <col:25> 'widelimb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b3f14f0 <col:25> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3eab38 'tmp' 'widefelem':'widelimb [7]'
|   |-ForStmt 0x1653b3f18f0 <line:758:5, line:761:5>
|   | |-BinaryOperator 0x1653b3f1600 <line:758:10, col:14> 'unsigned int' '='
|   | | |-DeclRefExpr 0x1653b3f15a0 <col:10> 'unsigned int' lvalue Var 0x1653b3eabd0 'i' 'unsigned int'
|   | | `-ImplicitCastExpr 0x1653b3f15e8 <col:14> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x1653b3f15c0 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1653b3f1698 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x1653b3f1668 <col:17> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b3f1620 <col:17> 'unsigned int' lvalue Var 0x1653b3eabd0 'i' 'unsigned int'
|   | | `-ImplicitCastExpr 0x1653b3f1680 <col:21> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x1653b3f1640 <col:21> 'int' 47
|   | |-UnaryOperator 0x1653b3f16d8 <col:25, col:27> 'unsigned int' prefix '++'
|   | | `-DeclRefExpr 0x1653b3f16b8 <col:27> 'unsigned int' lvalue Var 0x1653b3eabd0 'i' 'unsigned int'
|   | `-CompoundStmt 0x1653b3f18d0 <col:30, line:761:5>
|   |   |-CallExpr 0x1653b3f1768 <line:759:9, col:32> 'void'
|   |   | |-ImplicitCastExpr 0x1653b3f1750 <col:9> 'void (*)(widelimb *, const limb *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1653b3f16f0 <col:9> 'void (widelimb *, const limb *)' Function 0x1653b304030 'felem_square' 'void (widelimb *, const limb *)'
|   |   | |-ImplicitCastExpr 0x1653b3f1798 <col:22> 'widelimb *' <ArrayToPointerDecay>
|   |   | | `-DeclRefExpr 0x1653b3f1710 <col:22> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3eab38 'tmp' 'widefelem':'widelimb [7]'
|   |   | `-ImplicitCastExpr 0x1653b3f17c8 <col:27> 'const limb *':'const limb *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x1653b3f17b0 <col:27> 'limb *' <ArrayToPointerDecay>
|   |   |     `-DeclRefExpr 0x1653b3f1730 <col:27> 'felem':'limb [4]' lvalue Var 0x1653b3eaa80 'ftmp4' 'felem':'limb [4]'
|   |   `-CallExpr 0x1653b3f1858 <line:760:9, col:32> 'void'
|   |     |-ImplicitCastExpr 0x1653b3f1840 <col:9> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1653b3f17e0 <col:9> 'void (limb *, const widelimb *)' Function 0x1653b3f5a28 'felem_reduce' 'void (limb *, const widelimb *)'
|   |     |-ImplicitCastExpr 0x1653b3f1888 <col:22> 'limb *' <ArrayToPointerDecay>
|   |     | `-DeclRefExpr 0x1653b3f1800 <col:22> 'felem':'limb [4]' lvalue Var 0x1653b3eaa80 'ftmp4' 'felem':'limb [4]'
|   |     `-ImplicitCastExpr 0x1653b3f18b8 <col:29> 'const widelimb *':'const widelimb *' <NoOp>
|   |       `-ImplicitCastExpr 0x1653b3f18a0 <col:29> 'widelimb *' <ArrayToPointerDecay>
|   |         `-DeclRefExpr 0x1653b3f1820 <col:29> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3eab38 'tmp' 'widefelem':'widelimb [7]'
|   |-CallExpr 0x1653b3f19c0 <line:762:5, col:32> 'void'
|   | |-ImplicitCastExpr 0x1653b3f19a8 <col:5> 'void (*)(widelimb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3f1928 <col:5> 'void (widelimb *, const limb *, const limb *)' Function 0x1653b3e5488 'felem_mul' 'void (widelimb *, const limb *, const limb *)'
|   | |-ImplicitCastExpr 0x1653b3f19f8 <col:15> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3f1948 <col:15> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3eab38 'tmp' 'widefelem':'widelimb [7]'
|   | |-ImplicitCastExpr 0x1653b3f1a28 <col:20> 'const limb *':'const limb *' <NoOp>
|   | | `-ImplicitCastExpr 0x1653b3f1a10 <col:20> 'limb *' <ArrayToPointerDecay>
|   | |   `-DeclRefExpr 0x1653b3f1968 <col:20> 'felem':'limb [4]' lvalue Var 0x1653b3eaa08 'ftmp3' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x1653b3f1a58 <col:27> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b3f1a40 <col:27> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b3f1988 <col:27> 'felem':'limb [4]' lvalue Var 0x1653b3eaa80 'ftmp4' 'felem':'limb [4]'
|   |-CallExpr 0x1653b3f1ae8 <line:763:5, col:28> 'void'
|   | |-ImplicitCastExpr 0x1653b3f1ad0 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3f1a70 <col:5> 'void (limb *, const widelimb *)' Function 0x1653b3f5a28 'felem_reduce' 'void (limb *, const widelimb *)'
|   | |-ImplicitCastExpr 0x1653b3f1b18 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3f1a90 <col:18> 'felem':'limb [4]' lvalue Var 0x1653b3eaa08 'ftmp3' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x1653b3f1b48 <col:25> 'const widelimb *':'const widelimb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b3f1b30 <col:25> 'widelimb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b3f1ab0 <col:25> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3eab38 'tmp' 'widefelem':'widelimb [7]'
|   |-CallExpr 0x1653b3f1bd8 <line:764:5, col:28> 'void'
|   | |-ImplicitCastExpr 0x1653b3f1bc0 <col:5> 'void (*)(widelimb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3f1b60 <col:5> 'void (widelimb *, const limb *)' Function 0x1653b304030 'felem_square' 'void (widelimb *, const limb *)'
|   | |-ImplicitCastExpr 0x1653b3f1c08 <col:18> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3f1b80 <col:18> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3eab38 'tmp' 'widefelem':'widelimb [7]'
|   | `-ImplicitCastExpr 0x1653b3f1c38 <col:23> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b3f1c20 <col:23> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b3f1ba0 <col:23> 'felem':'limb [4]' lvalue Var 0x1653b3eaa08 'ftmp3' 'felem':'limb [4]'
|   |-CallExpr 0x1653b3f1cc8 <line:765:5, col:28> 'void'
|   | |-ImplicitCastExpr 0x1653b3f1cb0 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3f1c50 <col:5> 'void (limb *, const widelimb *)' Function 0x1653b3f5a28 'felem_reduce' 'void (limb *, const widelimb *)'
|   | |-ImplicitCastExpr 0x1653b3f1cf8 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3f1c70 <col:18> 'felem':'limb [4]' lvalue Var 0x1653b3eaa80 'ftmp4' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x1653b3f1d28 <col:25> 'const widelimb *':'const widelimb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b3f1d10 <col:25> 'widelimb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b3f1c90 <col:25> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3eab38 'tmp' 'widefelem':'widelimb [7]'
|   |-ForStmt 0x1653b3f2090 <line:766:5, line:769:5>
|   | |-BinaryOperator 0x1653b3f1da0 <line:766:10, col:14> 'unsigned int' '='
|   | | |-DeclRefExpr 0x1653b3f1d40 <col:10> 'unsigned int' lvalue Var 0x1653b3eabd0 'i' 'unsigned int'
|   | | `-ImplicitCastExpr 0x1653b3f1d88 <col:14> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x1653b3f1d60 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1653b3f1e38 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x1653b3f1e08 <col:17> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b3f1dc0 <col:17> 'unsigned int' lvalue Var 0x1653b3eabd0 'i' 'unsigned int'
|   | | `-ImplicitCastExpr 0x1653b3f1e20 <col:21> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x1653b3f1de0 <col:21> 'int' 23
|   | |-UnaryOperator 0x1653b3f1e78 <col:25, col:27> 'unsigned int' prefix '++'
|   | | `-DeclRefExpr 0x1653b3f1e58 <col:27> 'unsigned int' lvalue Var 0x1653b3eabd0 'i' 'unsigned int'
|   | `-CompoundStmt 0x1653b3f2070 <col:30, line:769:5>
|   |   |-CallExpr 0x1653b3f1f08 <line:767:9, col:32> 'void'
|   |   | |-ImplicitCastExpr 0x1653b3f1ef0 <col:9> 'void (*)(widelimb *, const limb *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1653b3f1e90 <col:9> 'void (widelimb *, const limb *)' Function 0x1653b304030 'felem_square' 'void (widelimb *, const limb *)'
|   |   | |-ImplicitCastExpr 0x1653b3f1f38 <col:22> 'widelimb *' <ArrayToPointerDecay>
|   |   | | `-DeclRefExpr 0x1653b3f1eb0 <col:22> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3eab38 'tmp' 'widefelem':'widelimb [7]'
|   |   | `-ImplicitCastExpr 0x1653b3f1f68 <col:27> 'const limb *':'const limb *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x1653b3f1f50 <col:27> 'limb *' <ArrayToPointerDecay>
|   |   |     `-DeclRefExpr 0x1653b3f1ed0 <col:27> 'felem':'limb [4]' lvalue Var 0x1653b3eaa80 'ftmp4' 'felem':'limb [4]'
|   |   `-CallExpr 0x1653b3f1ff8 <line:768:9, col:32> 'void'
|   |     |-ImplicitCastExpr 0x1653b3f1fe0 <col:9> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1653b3f1f80 <col:9> 'void (limb *, const widelimb *)' Function 0x1653b3f5a28 'felem_reduce' 'void (limb *, const widelimb *)'
|   |     |-ImplicitCastExpr 0x1653b3f2028 <col:22> 'limb *' <ArrayToPointerDecay>
|   |     | `-DeclRefExpr 0x1653b3f1fa0 <col:22> 'felem':'limb [4]' lvalue Var 0x1653b3eaa80 'ftmp4' 'felem':'limb [4]'
|   |     `-ImplicitCastExpr 0x1653b3f2058 <col:29> 'const widelimb *':'const widelimb *' <NoOp>
|   |       `-ImplicitCastExpr 0x1653b3f2040 <col:29> 'widelimb *' <ArrayToPointerDecay>
|   |         `-DeclRefExpr 0x1653b3f1fc0 <col:29> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3eab38 'tmp' 'widefelem':'widelimb [7]'
|   |-CallExpr 0x1653b3f2160 <line:770:5, col:32> 'void'
|   | |-ImplicitCastExpr 0x1653b3f2148 <col:5> 'void (*)(widelimb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3f20c8 <col:5> 'void (widelimb *, const limb *, const limb *)' Function 0x1653b3e5488 'felem_mul' 'void (widelimb *, const limb *, const limb *)'
|   | |-ImplicitCastExpr 0x1653b3f2198 <col:15> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3f20e8 <col:15> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3eab38 'tmp' 'widefelem':'widelimb [7]'
|   | |-ImplicitCastExpr 0x1653b3f21c8 <col:20> 'const limb *':'const limb *' <NoOp>
|   | | `-ImplicitCastExpr 0x1653b3f21b0 <col:20> 'limb *' <ArrayToPointerDecay>
|   | |   `-DeclRefExpr 0x1653b3f2108 <col:20> 'felem':'limb [4]' lvalue Var 0x1653b3ea990 'ftmp2' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x1653b3f21f8 <col:27> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b3f21e0 <col:27> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b3f2128 <col:27> 'felem':'limb [4]' lvalue Var 0x1653b3eaa80 'ftmp4' 'felem':'limb [4]'
|   |-CallExpr 0x1653b3f2288 <line:771:5, col:28> 'void'
|   | |-ImplicitCastExpr 0x1653b3f2270 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3f2210 <col:5> 'void (limb *, const widelimb *)' Function 0x1653b3f5a28 'felem_reduce' 'void (limb *, const widelimb *)'
|   | |-ImplicitCastExpr 0x1653b3f22b8 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3f2230 <col:18> 'felem':'limb [4]' lvalue Var 0x1653b3ea990 'ftmp2' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x1653b3f22e8 <col:25> 'const widelimb *':'const widelimb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b3f22d0 <col:25> 'widelimb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b3f2250 <col:25> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3eab38 'tmp' 'widefelem':'widelimb [7]'
|   |-ForStmt 0x1653b3f2660 <line:772:5, line:775:5>
|   | |-BinaryOperator 0x1653b3f2360 <line:772:10, col:14> 'unsigned int' '='
|   | | |-DeclRefExpr 0x1653b3f2300 <col:10> 'unsigned int' lvalue Var 0x1653b3eabd0 'i' 'unsigned int'
|   | | `-ImplicitCastExpr 0x1653b3f2348 <col:14> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x1653b3f2320 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1653b3f23f8 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x1653b3f23c8 <col:17> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b3f2380 <col:17> 'unsigned int' lvalue Var 0x1653b3eabd0 'i' 'unsigned int'
|   | | `-ImplicitCastExpr 0x1653b3f23e0 <col:21> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x1653b3f23a0 <col:21> 'int' 6
|   | |-UnaryOperator 0x1653b3f2438 <col:24, col:26> 'unsigned int' prefix '++'
|   | | `-DeclRefExpr 0x1653b3f2418 <col:26> 'unsigned int' lvalue Var 0x1653b3eabd0 'i' 'unsigned int'
|   | `-CompoundStmt 0x1653b3f2640 <col:29, line:775:5>
|   |   |-CallExpr 0x1653b3f24c8 <line:773:9, col:32> 'void'
|   |   | |-ImplicitCastExpr 0x1653b3f24b0 <col:9> 'void (*)(widelimb *, const limb *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1653b3f2450 <col:9> 'void (widelimb *, const limb *)' Function 0x1653b304030 'felem_square' 'void (widelimb *, const limb *)'
|   |   | |-ImplicitCastExpr 0x1653b3f24f8 <col:22> 'widelimb *' <ArrayToPointerDecay>
|   |   | | `-DeclRefExpr 0x1653b3f2470 <col:22> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3eab38 'tmp' 'widefelem':'widelimb [7]'
|   |   | `-ImplicitCastExpr 0x1653b3f2538 <col:27> 'const limb *':'const limb *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x1653b3f2520 <col:27> 'limb *' <ArrayToPointerDecay>
|   |   |     `-DeclRefExpr 0x1653b3f2490 <col:27> 'felem':'limb [4]' lvalue Var 0x1653b3ea990 'ftmp2' 'felem':'limb [4]'
|   |   `-CallExpr 0x1653b3f25c8 <line:774:9, col:32> 'void'
|   |     |-ImplicitCastExpr 0x1653b3f25b0 <col:9> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1653b3f2550 <col:9> 'void (limb *, const widelimb *)' Function 0x1653b3f5a28 'felem_reduce' 'void (limb *, const widelimb *)'
|   |     |-ImplicitCastExpr 0x1653b3f25f8 <col:22> 'limb *' <ArrayToPointerDecay>
|   |     | `-DeclRefExpr 0x1653b3f2570 <col:22> 'felem':'limb [4]' lvalue Var 0x1653b3ea990 'ftmp2' 'felem':'limb [4]'
|   |     `-ImplicitCastExpr 0x1653b3f2628 <col:29> 'const widelimb *':'const widelimb *' <NoOp>
|   |       `-ImplicitCastExpr 0x1653b3f2610 <col:29> 'widelimb *' <ArrayToPointerDecay>
|   |         `-DeclRefExpr 0x1653b3f2590 <col:29> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3eab38 'tmp' 'widefelem':'widelimb [7]'
|   |-CallExpr 0x1653b3f2730 <line:776:5, col:31> 'void'
|   | |-ImplicitCastExpr 0x1653b3f2718 <col:5> 'void (*)(widelimb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3f2698 <col:5> 'void (widelimb *, const limb *, const limb *)' Function 0x1653b3e5488 'felem_mul' 'void (widelimb *, const limb *, const limb *)'
|   | |-ImplicitCastExpr 0x1653b3f2768 <col:15> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3f26b8 <col:15> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3eab38 'tmp' 'widefelem':'widelimb [7]'
|   | |-ImplicitCastExpr 0x1653b3f2798 <col:20> 'const limb *':'const limb *' <NoOp>
|   | | `-ImplicitCastExpr 0x1653b3f2780 <col:20> 'limb *' <ArrayToPointerDecay>
|   | |   `-DeclRefExpr 0x1653b3f26d8 <col:20> 'felem':'limb [4]' lvalue Var 0x1653b3ea990 'ftmp2' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x1653b3f27c8 <col:27> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b3f27b0 <col:27> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b3f26f8 <col:27> 'felem':'limb [4]' lvalue Var 0x1653b3ea918 'ftmp' 'felem':'limb [4]'
|   |-CallExpr 0x1653b3f2858 <line:777:5, col:27> 'void'
|   | |-ImplicitCastExpr 0x1653b3f2840 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3f27e0 <col:5> 'void (limb *, const widelimb *)' Function 0x1653b3f5a28 'felem_reduce' 'void (limb *, const widelimb *)'
|   | |-ImplicitCastExpr 0x1653b3f2888 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3f2800 <col:18> 'felem':'limb [4]' lvalue Var 0x1653b3ea918 'ftmp' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x1653b3f28b8 <col:24> 'const widelimb *':'const widelimb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b3f28a0 <col:24> 'widelimb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b3f2820 <col:24> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3eab38 'tmp' 'widefelem':'widelimb [7]'
|   |-CallExpr 0x1653b3f2948 <line:778:5, col:27> 'void'
|   | |-ImplicitCastExpr 0x1653b3f2930 <col:5> 'void (*)(widelimb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3f28d0 <col:5> 'void (widelimb *, const limb *)' Function 0x1653b304030 'felem_square' 'void (widelimb *, const limb *)'
|   | |-ImplicitCastExpr 0x1653b3f2978 <col:18> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3f28f0 <col:18> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3eab38 'tmp' 'widefelem':'widelimb [7]'
|   | `-ImplicitCastExpr 0x1653b3f29a8 <col:23> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b3f2990 <col:23> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b3f2910 <col:23> 'felem':'limb [4]' lvalue Var 0x1653b3ea918 'ftmp' 'felem':'limb [4]'
|   |-CallExpr 0x1653b3f2a38 <line:779:5, col:27> 'void'
|   | |-ImplicitCastExpr 0x1653b3f2a20 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3f29c0 <col:5> 'void (limb *, const widelimb *)' Function 0x1653b3f5a28 'felem_reduce' 'void (limb *, const widelimb *)'
|   | |-ImplicitCastExpr 0x1653b3f2a68 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3f29e0 <col:18> 'felem':'limb [4]' lvalue Var 0x1653b3ea918 'ftmp' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x1653b3f2a98 <col:24> 'const widelimb *':'const widelimb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b3f2a80 <col:24> 'widelimb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b3f2a00 <col:24> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3eab38 'tmp' 'widefelem':'widelimb [7]'
|   |-CallExpr 0x1653b3f2b48 <line:780:5, col:28> 'void'
|   | |-ImplicitCastExpr 0x1653b3f2b30 <col:5> 'void (*)(widelimb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3f2ab0 <col:5> 'void (widelimb *, const limb *, const limb *)' Function 0x1653b3e5488 'felem_mul' 'void (widelimb *, const limb *, const limb *)'
|   | |-ImplicitCastExpr 0x1653b3f2b80 <col:15> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3f2ad0 <col:15> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3eab38 'tmp' 'widefelem':'widelimb [7]'
|   | |-ImplicitCastExpr 0x1653b3f2bb0 <col:20> 'const limb *':'const limb *' <NoOp>
|   | | `-ImplicitCastExpr 0x1653b3f2b98 <col:20> 'limb *' <ArrayToPointerDecay>
|   | |   `-DeclRefExpr 0x1653b3f2af0 <col:20> 'felem':'limb [4]' lvalue Var 0x1653b3ea918 'ftmp' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x1653b3f2bc8 <col:26> 'const limb *':'const limb *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1653b3f2b10 <col:26> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3ea778 'in' 'const limb *':'const limb *'
|   |-CallExpr 0x1653b3f2c58 <line:781:5, col:27> 'void'
|   | |-ImplicitCastExpr 0x1653b3f2c40 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3f2be0 <col:5> 'void (limb *, const widelimb *)' Function 0x1653b3f5a28 'felem_reduce' 'void (limb *, const widelimb *)'
|   | |-ImplicitCastExpr 0x1653b3f2c88 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3f2c00 <col:18> 'felem':'limb [4]' lvalue Var 0x1653b3ea918 'ftmp' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x1653b3f2cb8 <col:24> 'const widelimb *':'const widelimb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b3f2ca0 <col:24> 'widelimb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b3f2c20 <col:24> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3eab38 'tmp' 'widefelem':'widelimb [7]'
|   |-ForStmt 0x1653b3f3020 <line:782:5, line:785:5>
|   | |-BinaryOperator 0x1653b3f2d30 <line:782:10, col:14> 'unsigned int' '='
|   | | |-DeclRefExpr 0x1653b3f2cd0 <col:10> 'unsigned int' lvalue Var 0x1653b3eabd0 'i' 'unsigned int'
|   | | `-ImplicitCastExpr 0x1653b3f2d18 <col:14> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x1653b3f2cf0 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1653b3f2dc8 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x1653b3f2d98 <col:17> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b3f2d50 <col:17> 'unsigned int' lvalue Var 0x1653b3eabd0 'i' 'unsigned int'
|   | | `-ImplicitCastExpr 0x1653b3f2db0 <col:21> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x1653b3f2d70 <col:21> 'int' 97
|   | |-UnaryOperator 0x1653b3f2e08 <col:25, col:27> 'unsigned int' prefix '++'
|   | | `-DeclRefExpr 0x1653b3f2de8 <col:27> 'unsigned int' lvalue Var 0x1653b3eabd0 'i' 'unsigned int'
|   | `-CompoundStmt 0x1653b3f3000 <col:30, line:785:5>
|   |   |-CallExpr 0x1653b3f2e98 <line:783:9, col:31> 'void'
|   |   | |-ImplicitCastExpr 0x1653b3f2e80 <col:9> 'void (*)(widelimb *, const limb *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1653b3f2e20 <col:9> 'void (widelimb *, const limb *)' Function 0x1653b304030 'felem_square' 'void (widelimb *, const limb *)'
|   |   | |-ImplicitCastExpr 0x1653b3f2ec8 <col:22> 'widelimb *' <ArrayToPointerDecay>
|   |   | | `-DeclRefExpr 0x1653b3f2e40 <col:22> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3eab38 'tmp' 'widefelem':'widelimb [7]'
|   |   | `-ImplicitCastExpr 0x1653b3f2ef8 <col:27> 'const limb *':'const limb *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x1653b3f2ee0 <col:27> 'limb *' <ArrayToPointerDecay>
|   |   |     `-DeclRefExpr 0x1653b3f2e60 <col:27> 'felem':'limb [4]' lvalue Var 0x1653b3ea918 'ftmp' 'felem':'limb [4]'
|   |   `-CallExpr 0x1653b3f2f88 <line:784:9, col:31> 'void'
|   |     |-ImplicitCastExpr 0x1653b3f2f70 <col:9> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1653b3f2f10 <col:9> 'void (limb *, const widelimb *)' Function 0x1653b3f5a28 'felem_reduce' 'void (limb *, const widelimb *)'
|   |     |-ImplicitCastExpr 0x1653b3f2fb8 <col:22> 'limb *' <ArrayToPointerDecay>
|   |     | `-DeclRefExpr 0x1653b3f2f30 <col:22> 'felem':'limb [4]' lvalue Var 0x1653b3ea918 'ftmp' 'felem':'limb [4]'
|   |     `-ImplicitCastExpr 0x1653b3f2fe8 <col:28> 'const widelimb *':'const widelimb *' <NoOp>
|   |       `-ImplicitCastExpr 0x1653b3f2fd0 <col:28> 'widelimb *' <ArrayToPointerDecay>
|   |         `-DeclRefExpr 0x1653b3f2f50 <col:28> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3eab38 'tmp' 'widefelem':'widelimb [7]'
|   |-CallExpr 0x1653b3f30f0 <line:786:5, col:31> 'void'
|   | |-ImplicitCastExpr 0x1653b3f30d8 <col:5> 'void (*)(widelimb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3f3058 <col:5> 'void (widelimb *, const limb *, const limb *)' Function 0x1653b3e5488 'felem_mul' 'void (widelimb *, const limb *, const limb *)'
|   | |-ImplicitCastExpr 0x1653b3f3128 <col:15> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3f3078 <col:15> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3eab38 'tmp' 'widefelem':'widelimb [7]'
|   | |-ImplicitCastExpr 0x1653b3f3158 <col:20> 'const limb *':'const limb *' <NoOp>
|   | | `-ImplicitCastExpr 0x1653b3f3140 <col:20> 'limb *' <ArrayToPointerDecay>
|   | |   `-DeclRefExpr 0x1653b3f3098 <col:20> 'felem':'limb [4]' lvalue Var 0x1653b3ea918 'ftmp' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x1653b3f3188 <col:26> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b3f3170 <col:26> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b3f30b8 <col:26> 'felem':'limb [4]' lvalue Var 0x1653b3eaa08 'ftmp3' 'felem':'limb [4]'
|   `-CallExpr 0x1653b3f3218 <line:787:5, col:26> 'void'
|     |-ImplicitCastExpr 0x1653b3f3200 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x1653b3f31a0 <col:5> 'void (limb *, const widelimb *)' Function 0x1653b3f5a28 'felem_reduce' 'void (limb *, const widelimb *)'
|     |-ImplicitCastExpr 0x1653b3f3248 <col:18> 'limb *':'limb *' <LValueToRValue>
|     | `-DeclRefExpr 0x1653b3f31c0 <col:18> 'limb *':'limb *' lvalue ParmVar 0x1653b3ea700 'out' 'limb *':'limb *'
|     `-ImplicitCastExpr 0x1653b3f3278 <col:23> 'const widelimb *':'const widelimb *' <NoOp>
|       `-ImplicitCastExpr 0x1653b3f3260 <col:23> 'widelimb *' <ArrayToPointerDecay>
|         `-DeclRefExpr 0x1653b3f31e0 <col:23> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3eab38 'tmp' 'widefelem':'widelimb [7]'
|-FunctionDecl 0x1653b3f36b8 <line:794:1, line:805:1> line:794:13 used copy_conditional 'void (limb *, const limb *, limb)' static
| |-ParmVarDecl 0x1653b3f3460 <col:30, col:36> col:36 used out 'limb *':'limb *'
| |-ParmVarDecl 0x1653b3f34d8 <col:41, col:53> col:53 used in 'const limb *':'const limb *'
| |-ParmVarDecl 0x1653b3f3550 <col:57, col:62> col:62 used icopy 'limb':'unsigned long long'
| `-CompoundStmt 0x1653b3f3f20 <line:795:1, line:805:1>
|   |-DeclStmt 0x1653b3f3808 <line:796:5, col:15>
|   | `-VarDecl 0x1653b3f37a0 <col:5, col:14> col:14 used i 'unsigned int'
|   |-DeclStmt 0x1653b3f38e8 <line:800:5, col:29>
|   | `-VarDecl 0x1653b3f3830 <col:5, col:24> col:16 used copy 'const limb':'const unsigned long long' cinit
|   |   `-UnaryOperator 0x1653b3f38d0 <col:23, col:24> 'limb':'unsigned long long' prefix '-'
|   |     `-ImplicitCastExpr 0x1653b3f38b8 <col:24> 'limb':'unsigned long long' <LValueToRValue>
|   |       `-DeclRefExpr 0x1653b3f3898 <col:24> 'limb':'unsigned long long' lvalue ParmVar 0x1653b3f3550 'icopy' 'limb':'unsigned long long'
|   `-ForStmt 0x1653b3f3eb8 <line:801:5, line:804:5>
|     |-BinaryOperator 0x1653b3f3978 <line:801:10, col:14> 'unsigned int' '='
|     | |-DeclRefExpr 0x1653b3f3900 <col:10> 'unsigned int' lvalue Var 0x1653b3f37a0 'i' 'unsigned int'
|     | `-ImplicitCastExpr 0x1653b3f3960 <col:14> 'unsigned int' <IntegralCast>
|     |   `-IntegerLiteral 0x1653b3f3938 <col:14> 'int' 0
|     |-<<<NULL>>>
|     |-BinaryOperator 0x1653b3f3a10 <col:17, col:21> 'int' '<'
|     | |-ImplicitCastExpr 0x1653b3f39e0 <col:17> 'unsigned int' <LValueToRValue>
|     | | `-DeclRefExpr 0x1653b3f3998 <col:17> 'unsigned int' lvalue Var 0x1653b3f37a0 'i' 'unsigned int'
|     | `-ImplicitCastExpr 0x1653b3f39f8 <col:21> 'unsigned int' <IntegralCast>
|     |   `-IntegerLiteral 0x1653b3f39b8 <col:21> 'int' 4
|     |-UnaryOperator 0x1653b3f3a50 <col:24, col:26> 'unsigned int' prefix '++'
|     | `-DeclRefExpr 0x1653b3f3a30 <col:26> 'unsigned int' lvalue Var 0x1653b3f37a0 'i' 'unsigned int'
|     `-CompoundStmt 0x1653b3f3e98 <col:29, line:804:5>
|       |-DeclStmt 0x1653b3f3d28 <line:802:9, col:49>
|       | `-VarDecl 0x1653b3f3a78 <col:9, col:48> col:20 used tmp 'const limb':'const unsigned long long' cinit
|       |   `-BinaryOperator 0x1653b3f3cc0 <col:26, col:48> 'unsigned long long' '&'
|       |     |-ImplicitCastExpr 0x1653b3f3ca8 <col:26> 'limb':'unsigned long long' <LValueToRValue>
|       |     | `-DeclRefExpr 0x1653b3f3ae0 <col:26> 'const limb':'const unsigned long long' lvalue Var 0x1653b3f3830 'copy' 'const limb':'const unsigned long long'
|       |     `-ParenExpr 0x1653b3f3c88 <col:33, col:48> 'unsigned long long'
|       |       `-BinaryOperator 0x1653b3f3c68 <col:34, col:47> 'unsigned long long' '^'
|       |         |-ImplicitCastExpr 0x1653b3f3c38 <col:34, col:38> 'limb':'unsigned long long' <LValueToRValue>
|       |         | `-ArraySubscriptExpr 0x1653b3f3b88 <col:34, col:38> 'const limb':'const unsigned long long' lvalue
|       |         |   |-ImplicitCastExpr 0x1653b3f3b58 <col:34> 'const limb *':'const limb *' <LValueToRValue>
|       |         |   | `-DeclRefExpr 0x1653b3f3b18 <col:34> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3f34d8 'in' 'const limb *':'const limb *'
|       |         |   `-ImplicitCastExpr 0x1653b3f3b70 <col:37> 'unsigned int' <LValueToRValue>
|       |         |     `-DeclRefExpr 0x1653b3f3b38 <col:37> 'unsigned int' lvalue Var 0x1653b3f37a0 'i' 'unsigned int'
|       |         `-ImplicitCastExpr 0x1653b3f3c50 <col:42, col:47> 'limb':'unsigned long long' <LValueToRValue>
|       |           `-ArraySubscriptExpr 0x1653b3f3c18 <col:42, col:47> 'limb':'unsigned long long' lvalue
|       |             |-ImplicitCastExpr 0x1653b3f3be8 <col:42> 'limb *':'limb *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x1653b3f3ba8 <col:42> 'limb *':'limb *' lvalue ParmVar 0x1653b3f3460 'out' 'limb *':'limb *'
|       |             `-ImplicitCastExpr 0x1653b3f3c00 <col:46> 'unsigned int' <LValueToRValue>
|       |               `-DeclRefExpr 0x1653b3f3bc8 <col:46> 'unsigned int' lvalue Var 0x1653b3f37a0 'i' 'unsigned int'
|       `-CompoundAssignOperator 0x1653b3f3e20 <line:803:9, col:19> 'limb':'unsigned long long' '^=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|         |-ArraySubscriptExpr 0x1653b3f3db0 <col:9, col:14> 'limb':'unsigned long long' lvalue
|         | |-ImplicitCastExpr 0x1653b3f3d80 <col:9> 'limb *':'limb *' <LValueToRValue>
|         | | `-DeclRefExpr 0x1653b3f3d40 <col:9> 'limb *':'limb *' lvalue ParmVar 0x1653b3f3460 'out' 'limb *':'limb *'
|         | `-ImplicitCastExpr 0x1653b3f3d98 <col:13> 'unsigned int' <LValueToRValue>
|         |   `-DeclRefExpr 0x1653b3f3d60 <col:13> 'unsigned int' lvalue Var 0x1653b3f37a0 'i' 'unsigned int'
|         `-ImplicitCastExpr 0x1653b3f3e08 <col:19> 'limb':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x1653b3f3dd0 <col:19> 'const limb':'const unsigned long long' lvalue Var 0x1653b3f3a78 'tmp' 'const limb':'const unsigned long long'
|-FunctionDecl 0x1653b3f43b8 <line:826:1, line:895:1> line:827:1 used point_double 'void (limb *, limb *, limb *, const limb *, const limb *, const limb *)' static
| |-ParmVarDecl 0x1653b3f3f58 <col:14, col:20> col:20 used x_out 'limb *':'limb *'
| |-ParmVarDecl 0x1653b3f3fd0 <col:27, col:33> col:33 used y_out 'limb *':'limb *'
| |-ParmVarDecl 0x1653b3f4048 <col:40, col:46> col:46 used z_out 'limb *':'limb *'
| |-ParmVarDecl 0x1653b3f40c0 <line:828:14, col:26> col:26 used x_in 'const limb *':'const limb *'
| |-ParmVarDecl 0x1653b3f4138 <col:32, col:44> col:44 used y_in 'const limb *':'const limb *'
| |-ParmVarDecl 0x1653b3f41b0 <col:50, col:62> col:62 used z_in 'const limb *':'const limb *'
| |-CompoundStmt 0x1653b3fa888 <line:829:1, line:895:1>
| | |-DeclStmt 0x1653b3f65d0 <line:830:5, col:24>
| | | |-VarDecl 0x1653b3f44b0 <col:5, col:15> col:15 used tmp 'widefelem':'widelimb [7]'
| | | `-VarDecl 0x1653b3f6550 <col:5, col:20> col:20 used tmp2 'widefelem':'widelimb [7]'
| | |-DeclStmt 0x1653b3f68f0 <line:831:5, col:49>
| | | |-VarDecl 0x1653b3f65f8 <col:5, col:11> col:11 used delta 'felem':'limb [4]'
| | | |-VarDecl 0x1653b3f6670 <col:5, col:18> col:18 used gamma 'felem':'limb [4]'
| | | |-VarDecl 0x1653b3f66e8 <col:5, col:25> col:25 used beta 'felem':'limb [4]'
| | | |-VarDecl 0x1653b3f6760 <col:5, col:31> col:31 used alpha 'felem':'limb [4]'
| | | |-VarDecl 0x1653b3f67d8 <col:5, col:38> col:38 used ftmp 'felem':'limb [4]'
| | | `-VarDecl 0x1653b3f6850 <col:5, col:44> col:44 used ftmp2 'felem':'limb [4]'
| | |-CallExpr 0x1653b3f69f0 <line:833:5, col:28> 'void'
| | | |-ImplicitCastExpr 0x1653b3f69d8 <col:5> 'void (*)(limb *, const limb *)' <FunctionToPointerDecay>
| | | | `-DeclRefExpr 0x1653b3f6908 <col:5> 'void (limb *, const limb *)' Function 0x1653b2fc8d8 'felem_assign' 'void (limb *, const limb *)'
| | | |-ImplicitCastExpr 0x1653b3f6a20 <col:18> 'limb *' <ArrayToPointerDecay>
| | | | `-DeclRefExpr 0x1653b3f6928 <col:18> 'felem':'limb [4]' lvalue Var 0x1653b3f67d8 'ftmp' 'felem':'limb [4]'
| | | `-ImplicitCastExpr 0x1653b3f6a38 <col:24> 'const limb *':'const limb *' <LValueToRValue>
| | |   `-DeclRefExpr 0x1653b3f6960 <col:24> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3f40c0 'x_in' 'const limb *':'const limb *'
| | |-CallExpr 0x1653b3f6ae0 <line:834:5, col:29> 'void'
| | | |-ImplicitCastExpr 0x1653b3f6ac8 <col:5> 'void (*)(limb *, const limb *)' <FunctionToPointerDecay>
| | | | `-DeclRefExpr 0x1653b3f6a50 <col:5> 'void (limb *, const limb *)' Function 0x1653b2fc8d8 'felem_assign' 'void (limb *, const limb *)'
| | | |-ImplicitCastExpr 0x1653b3f6b10 <col:18> 'limb *' <ArrayToPointerDecay>
| | | | `-DeclRefExpr 0x1653b3f6a70 <col:18> 'felem':'limb [4]' lvalue Var 0x1653b3f6850 'ftmp2' 'felem':'limb [4]'
| | | `-ImplicitCastExpr 0x1653b3f6b28 <col:25> 'const limb *':'const limb *' <LValueToRValue>
| | |   `-DeclRefExpr 0x1653b3f6aa8 <col:25> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3f40c0 'x_in' 'const limb *':'const limb *'
| | |-CallExpr 0x1653b3f6bd0 <line:837:5, col:27> 'void'
| | | |-ImplicitCastExpr 0x1653b3f6bb8 <col:5> 'void (*)(widelimb *, const limb *)' <FunctionToPointerDecay>
| | | | `-DeclRefExpr 0x1653b3f6b40 <col:5> 'void (widelimb *, const limb *)' Function 0x1653b304030 'felem_square' 'void (widelimb *, const limb *)'
| | | |-ImplicitCastExpr 0x1653b3f6c00 <col:18> 'widelimb *' <ArrayToPointerDecay>
| | | | `-DeclRefExpr 0x1653b3f6b60 <col:18> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3f44b0 'tmp' 'widefelem':'widelimb [7]'
| | | `-ImplicitCastExpr 0x1653b3f6c18 <col:23> 'const limb *':'const limb *' <LValueToRValue>
| | |   `-DeclRefExpr 0x1653b3f6b98 <col:23> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3f41b0 'z_in' 'const limb *':'const limb *'
| | |-CallExpr 0x1653b3f6cc0 <line:838:5, col:28> 'void'
| | | |-ImplicitCastExpr 0x1653b3f6ca8 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
| | | | `-DeclRefExpr 0x1653b3f6c30 <col:5> 'void (limb *, const widelimb *)' Function 0x1653b3f5a28 'felem_reduce' 'void (limb *, const widelimb *)'
| | | |-ImplicitCastExpr 0x1653b3f6cf0 <col:18> 'limb *' <ArrayToPointerDecay>
| | | | `-DeclRefExpr 0x1653b3f6c50 <col:18> 'felem':'limb [4]' lvalue Var 0x1653b3f65f8 'delta' 'felem':'limb [4]'
| | | `-ImplicitCastExpr 0x1653b3f6d20 <col:25> 'const widelimb *':'const widelimb *' <NoOp>
| | |   `-ImplicitCastExpr 0x1653b3f6d08 <col:25> 'widelimb *' <ArrayToPointerDecay>
| | |     `-DeclRefExpr 0x1653b3f6c88 <col:25> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3f44b0 'tmp' 'widefelem':'widelimb [7]'
| | |-CallExpr 0x1653b3f6db0 <line:841:5, col:27> 'void'
| | | |-ImplicitCastExpr 0x1653b3f6d98 <col:5> 'void (*)(widelimb *, const limb *)' <FunctionToPointerDecay>
| | | | `-DeclRefExpr 0x1653b3f6d38 <col:5> 'void (widelimb *, const limb *)' Function 0x1653b304030 'felem_square' 'void (widelimb *, const limb *)'
| | | |-ImplicitCastExpr 0x1653b3f6de0 <col:18> 'widelimb *' <ArrayToPointerDecay>
| | | | `-DeclRefExpr 0x1653b3f6d58 <col:18> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3f44b0 'tmp' 'widefelem':'widelimb [7]'
| | | `-ImplicitCastExpr 0x1653b3f6df8 <col:23> 'const limb *':'const limb *' <LValueToRValue>
| | |   `-DeclRefExpr 0x1653b3f6d78 <col:23> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3f4138 'y_in' 'const limb *':'const limb *'
| | |-CallExpr 0x1653b3f6ea0 <line:842:5, col:28> 'void'
| | | |-ImplicitCastExpr 0x1653b3f6e88 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
| | | | `-DeclRefExpr 0x1653b3f6e10 <col:5> 'void (limb *, const widelimb *)' Function 0x1653b3f5a28 'felem_reduce' 'void (limb *, const widelimb *)'
| | | |-ImplicitCastExpr 0x1653b3f6ed0 <col:18> 'limb *' <ArrayToPointerDecay>
| | | | `-DeclRefExpr 0x1653b3f6e30 <col:18> 'felem':'limb [4]' lvalue Var 0x1653b3f6670 'gamma' 'felem':'limb [4]'
| | | `-ImplicitCastExpr 0x1653b3f6f00 <col:25> 'const widelimb *':'const widelimb *' <NoOp>
| | |   `-ImplicitCastExpr 0x1653b3f6ee8 <col:25> 'widelimb *' <ArrayToPointerDecay>
| | |     `-DeclRefExpr 0x1653b3f6e68 <col:25> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3f44b0 'tmp' 'widefelem':'widelimb [7]'
| | |-CallExpr 0x1653b3f6fb0 <line:845:5, col:31> 'void'
| | | |-ImplicitCastExpr 0x1653b3f6f98 <col:5> 'void (*)(widelimb *, const limb *, const limb *)' <FunctionToPointerDecay>
| | | | `-DeclRefExpr 0x1653b3f6f18 <col:5> 'void (widelimb *, const limb *, const limb *)' Function 0x1653b3e5488 'felem_mul' 'void (widelimb *, const limb *, const limb *)'
| | | |-ImplicitCastExpr 0x1653b3f6fe8 <col:15> 'widelimb *' <ArrayToPointerDecay>
| | | | `-DeclRefExpr 0x1653b3f6f38 <col:15> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3f44b0 'tmp' 'widefelem':'widelimb [7]'
| | | |-ImplicitCastExpr 0x1653b3f7000 <col:20> 'const limb *':'const limb *' <LValueToRValue>
| | | | `-DeclRefExpr 0x1653b3f6f58 <col:20> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3f40c0 'x_in' 'const limb *':'const limb *'
| | | `-ImplicitCastExpr 0x1653b3f7030 <col:26> 'const limb *':'const limb *' <NoOp>
| | |   `-ImplicitCastExpr 0x1653b3f7018 <col:26> 'limb *' <ArrayToPointerDecay>
| | |     `-DeclRefExpr 0x1653b3f6f78 <col:26> 'felem':'limb [4]' lvalue Var 0x1653b3f6670 'gamma' 'felem':'limb [4]'
| | |-CallExpr 0x1653b3f70d8 <line:846:5, col:27> 'void'
| | | |-ImplicitCastExpr 0x1653b3f70c0 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
| | | | `-DeclRefExpr 0x1653b3f7048 <col:5> 'void (limb *, const widelimb *)' Function 0x1653b3f5a28 'felem_reduce' 'void (limb *, const widelimb *)'
| | | |-ImplicitCastExpr 0x1653b3f7108 <col:18> 'limb *' <ArrayToPointerDecay>
| | | | `-DeclRefExpr 0x1653b3f7068 <col:18> 'felem':'limb [4]' lvalue Var 0x1653b3f66e8 'beta' 'felem':'limb [4]'
| | | `-ImplicitCastExpr 0x1653b3f7138 <col:24> 'const widelimb *':'const widelimb *' <NoOp>
| | |   `-ImplicitCastExpr 0x1653b3f7120 <col:24> 'widelimb *' <ArrayToPointerDecay>
| | |     `-DeclRefExpr 0x1653b3f70a0 <col:24> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3f44b0 'tmp' 'widefelem':'widelimb [7]'
| | |-CallExpr 0x1653b3f71c8 <line:849:5, col:27> 'void'
| | | |-ImplicitCastExpr 0x1653b3f71b0 <col:5> 'void (*)(limb *, const limb *)' <FunctionToPointerDecay>
| | | | `-DeclRefExpr 0x1653b3f7150 <col:5> 'void (limb *, const limb *)' Function 0x1653b2fe9d8 'felem_diff' 'void (limb *, const limb *)'
| | | |-ImplicitCastExpr 0x1653b3f71f8 <col:16> 'limb *' <ArrayToPointerDecay>
| | | | `-DeclRefExpr 0x1653b3f7170 <col:16> 'felem':'limb [4]' lvalue Var 0x1653b3f67d8 'ftmp' 'felem':'limb [4]'
| | | `-ImplicitCastExpr 0x1653b3f7228 <col:22> 'const limb *':'const limb *' <NoOp>
| | |   `-ImplicitCastExpr 0x1653b3f7210 <col:22> 'limb *' <ArrayToPointerDecay>
| | |     `-DeclRefExpr 0x1653b3f7190 <col:22> 'felem':'limb [4]' lvalue Var 0x1653b3f65f8 'delta' 'felem':'limb [4]'
| | |-CallExpr 0x1653b3f72b8 <line:851:5, col:27> 'void'
| | | |-ImplicitCastExpr 0x1653b3f72a0 <col:5> 'void (*)(limb *, const limb *)' <FunctionToPointerDecay>
| | | | `-DeclRefExpr 0x1653b3f7240 <col:5> 'void (limb *, const limb *)' Function 0x1653b2fd028 'felem_sum' 'void (limb *, const limb *)'
| | | |-ImplicitCastExpr 0x1653b3f72e8 <col:15> 'limb *' <ArrayToPointerDecay>
| | | | `-DeclRefExpr 0x1653b3f7260 <col:15> 'felem':'limb [4]' lvalue Var 0x1653b3f6850 'ftmp2' 'felem':'limb [4]'
| | | `-ImplicitCastExpr 0x1653b3f7318 <col:22> 'const limb *':'const limb *' <NoOp>
| | |   `-ImplicitCastExpr 0x1653b3f7300 <col:22> 'limb *' <ArrayToPointerDecay>
| | |     `-DeclRefExpr 0x1653b3f7280 <col:22> 'felem':'limb [4]' lvalue Var 0x1653b3f65f8 'delta' 'felem':'limb [4]'
| | |-CallExpr 0x1653b3f7410 <line:853:5, col:26> 'void'
| | | |-ImplicitCastExpr 0x1653b3f73f8 <col:5> 'void (*)(limb *, const limb)' <FunctionToPointerDecay>
| | | | `-DeclRefExpr 0x1653b3f7330 <col:5> 'void (limb *, const limb)' Function 0x1653b303118 'felem_scalar' 'void (limb *, const limb)'
| | | |-ImplicitCastExpr 0x1653b3f7440 <col:18> 'limb *' <ArrayToPointerDecay>
| | | | `-DeclRefExpr 0x1653b3f7350 <col:18> 'felem':'limb [4]' lvalue Var 0x1653b3f6850 'ftmp2' 'felem':'limb [4]'
| | | `-ImplicitCastExpr 0x1653b3f7458 <col:25> 'limb':'unsigned long long' <IntegralCast>
| | |   `-IntegerLiteral 0x1653b3f7370 <col:25> 'int' 3
| | |-CallExpr 0x1653b3f7508 <line:855:5, col:31> 'void'
| | | |-ImplicitCastExpr 0x1653b3f74f0 <col:5> 'void (*)(widelimb *, const limb *, const limb *)' <FunctionToPointerDecay>
| | | | `-DeclRefExpr 0x1653b3f7470 <col:5> 'void (widelimb *, const limb *, const limb *)' Function 0x1653b3e5488 'felem_mul' 'void (widelimb *, const limb *, const limb *)'
| | | |-ImplicitCastExpr 0x1653b3f7540 <col:15> 'widelimb *' <ArrayToPointerDecay>
| | | | `-DeclRefExpr 0x1653b3f7490 <col:15> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3f44b0 'tmp' 'widefelem':'widelimb [7]'
| | | |-ImplicitCastExpr 0x1653b3f7570 <col:20> 'const limb *':'const limb *' <NoOp>
| | | | `-ImplicitCastExpr 0x1653b3f7558 <col:20> 'limb *' <ArrayToPointerDecay>
| | | |   `-DeclRefExpr 0x1653b3f74b0 <col:20> 'felem':'limb [4]' lvalue Var 0x1653b3f67d8 'ftmp' 'felem':'limb [4]'
| | | `-ImplicitCastExpr 0x1653b3f75a0 <col:26> 'const limb *':'const limb *' <NoOp>
| | |   `-ImplicitCastExpr 0x1653b3f7588 <col:26> 'limb *' <ArrayToPointerDecay>
| | |     `-DeclRefExpr 0x1653b3f74d0 <col:26> 'felem':'limb [4]' lvalue Var 0x1653b3f6850 'ftmp2' 'felem':'limb [4]'
| | |-CallExpr 0x1653b3f7648 <line:857:5, col:28> 'void'
| | | |-ImplicitCastExpr 0x1653b3f7630 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
| | | | `-DeclRefExpr 0x1653b3f75b8 <col:5> 'void (limb *, const widelimb *)' Function 0x1653b3f5a28 'felem_reduce' 'void (limb *, const widelimb *)'
| | | |-ImplicitCastExpr 0x1653b3f7678 <col:18> 'limb *' <ArrayToPointerDecay>
| | | | `-DeclRefExpr 0x1653b3f75d8 <col:18> 'felem':'limb [4]' lvalue Var 0x1653b3f6760 'alpha' 'felem':'limb [4]'
| | | `-ImplicitCastExpr 0x1653b3f76a8 <col:25> 'const widelimb *':'const widelimb *' <NoOp>
| | |   `-ImplicitCastExpr 0x1653b3f7690 <col:25> 'widelimb *' <ArrayToPointerDecay>
| | |     `-DeclRefExpr 0x1653b3f7610 <col:25> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3f44b0 'tmp' 'widefelem':'widelimb [7]'
| | |-CallExpr 0x1653b3f7738 <line:860:5, col:28> 'void'
| | | |-ImplicitCastExpr 0x1653b3f7720 <col:5> 'void (*)(widelimb *, const limb *)' <FunctionToPointerDecay>
| | | | `-DeclRefExpr 0x1653b3f76c0 <col:5> 'void (widelimb *, const limb *)' Function 0x1653b304030 'felem_square' 'void (widelimb *, const limb *)'
| | | |-ImplicitCastExpr 0x1653b3f7768 <col:18> 'widelimb *' <ArrayToPointerDecay>
| | | | `-DeclRefExpr 0x1653b3f76e0 <col:18> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3f44b0 'tmp' 'widefelem':'widelimb [7]'
| | | `-ImplicitCastExpr 0x1653b3f7798 <col:23> 'const limb *':'const limb *' <NoOp>
| | |   `-ImplicitCastExpr 0x1653b3f7780 <col:23> 'limb *' <ArrayToPointerDecay>
| | |     `-DeclRefExpr 0x1653b3f7700 <col:23> 'felem':'limb [4]' lvalue Var 0x1653b3f6760 'alpha' 'felem':'limb [4]'
| | |-CallExpr 0x1653b3f7828 <line:862:5, col:28> 'void'
| | | |-ImplicitCastExpr 0x1653b3f7810 <col:5> 'void (*)(limb *, const limb *)' <FunctionToPointerDecay>
| | | | `-DeclRefExpr 0x1653b3f77b0 <col:5> 'void (limb *, const limb *)' Function 0x1653b2fc8d8 'felem_assign' 'void (limb *, const limb *)'
| | | |-ImplicitCastExpr 0x1653b3f7858 <col:18> 'limb *' <ArrayToPointerDecay>
| | | | `-DeclRefExpr 0x1653b3f77d0 <col:18> 'felem':'limb [4]' lvalue Var 0x1653b3f67d8 'ftmp' 'felem':'limb [4]'
| | | `-ImplicitCastExpr 0x1653b3f7888 <col:24> 'const limb *':'const limb *' <NoOp>
| | |   `-ImplicitCastExpr 0x1653b3f7870 <col:24> 'limb *' <ArrayToPointerDecay>
| | |     `-DeclRefExpr 0x1653b3f77f0 <col:24> 'felem':'limb [4]' lvalue Var 0x1653b3f66e8 'beta' 'felem':'limb [4]'
| | |-CallExpr 0x1653b3f7920 <line:863:5, col:25> 'void'
| | | |-ImplicitCastExpr 0x1653b3f7908 <col:5> 'void (*)(limb *, const limb)' <FunctionToPointerDecay>
| | | | `-DeclRefExpr 0x1653b3f78a0 <col:5> 'void (limb *, const limb)' Function 0x1653b303118 'felem_scalar' 'void (limb *, const limb)'
| | | |-ImplicitCastExpr 0x1653b3f7950 <col:18> 'limb *' <ArrayToPointerDecay>
| | | | `-DeclRefExpr 0x1653b3f78c0 <col:18> 'felem':'limb [4]' lvalue Var 0x1653b3f67d8 'ftmp' 'felem':'limb [4]'
| | | `-ImplicitCastExpr 0x1653b3f7968 <col:24> 'limb':'unsigned long long' <IntegralCast>
| | |   `-IntegerLiteral 0x1653b3f78e0 <col:24> 'int' 8
| | |-CallExpr 0x1653b3f79f8 <line:865:5, col:32> 'void'
| | | |-ImplicitCastExpr 0x1653b3f79e0 <col:5> 'void (*)(widelimb *, const limb *)' <FunctionToPointerDecay>
| | | | `-DeclRefExpr 0x1653b3f7980 <col:5> 'void (widelimb *, const limb *)' Function 0x1653b301ba8 'felem_diff_128_64' 'void (widelimb *, const limb *)'
| | | |-ImplicitCastExpr 0x1653b3f7a28 <col:23> 'widelimb *' <ArrayToPointerDecay>
| | | | `-DeclRefExpr 0x1653b3f79a0 <col:23> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3f44b0 'tmp' 'widefelem':'widelimb [7]'
| | | `-ImplicitCastExpr 0x1653b3f7a58 <col:28> 'const limb *':'const limb *' <NoOp>
| | |   `-ImplicitCastExpr 0x1653b3f7a40 <col:28> 'limb *' <ArrayToPointerDecay>
| | |     `-DeclRefExpr 0x1653b3f79c0 <col:28> 'felem':'limb [4]' lvalue Var 0x1653b3f67d8 'ftmp' 'felem':'limb [4]'
| | |-CallExpr 0x1653b3f7ae8 <line:867:5, col:28> 'void'
| | | |-ImplicitCastExpr 0x1653b3f7ad0 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
| | | | `-DeclRefExpr 0x1653b3f7a70 <col:5> 'void (limb *, const widelimb *)' Function 0x1653b3f5a28 'felem_reduce' 'void (limb *, const widelimb *)'
| | | |-ImplicitCastExpr 0x1653b3f7b18 <col:18> 'limb *':'limb *' <LValueToRValue>
| | | | `-DeclRefExpr 0x1653b3f7a90 <col:18> 'limb *':'limb *' lvalue ParmVar 0x1653b3f3f58 'x_out' 'limb *':'limb *'
| | | `-ImplicitCastExpr 0x1653b3f7b48 <col:25> 'const widelimb *':'const widelimb *' <NoOp>
| | |   `-ImplicitCastExpr 0x1653b3f7b30 <col:25> 'widelimb *' <ArrayToPointerDecay>
| | |     `-DeclRefExpr 0x1653b3f7ab0 <col:25> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3f44b0 'tmp' 'widefelem':'widelimb [7]'
| | |-CallExpr 0x1653b3f7bd8 <line:870:5, col:27> 'void'
| | | |-ImplicitCastExpr 0x1653b3f7bc0 <col:5> 'void (*)(limb *, const limb *)' <FunctionToPointerDecay>
| | | | `-DeclRefExpr 0x1653b3f7b60 <col:5> 'void (limb *, const limb *)' Function 0x1653b2fd028 'felem_sum' 'void (limb *, const limb *)'
| | | |-ImplicitCastExpr 0x1653b3f7c08 <col:15> 'limb *' <ArrayToPointerDecay>
| | | | `-DeclRefExpr 0x1653b3f7b80 <col:15> 'felem':'limb [4]' lvalue Var 0x1653b3f65f8 'delta' 'felem':'limb [4]'
| | | `-ImplicitCastExpr 0x1653b3f7c38 <col:22> 'const limb *':'const limb *' <NoOp>
| | |   `-ImplicitCastExpr 0x1653b3f7c20 <col:22> 'limb *' <ArrayToPointerDecay>
| | |     `-DeclRefExpr 0x1653b3f7ba0 <col:22> 'felem':'limb [4]' lvalue Var 0x1653b3f6670 'gamma' 'felem':'limb [4]'
| | |-CallExpr 0x1653b3f7cc8 <line:872:5, col:28> 'void'
| | | |-ImplicitCastExpr 0x1653b3f7cb0 <col:5> 'void (*)(limb *, const limb *)' <FunctionToPointerDecay>
| | | | `-DeclRefExpr 0x1653b3f7c50 <col:5> 'void (limb *, const limb *)' Function 0x1653b2fc8d8 'felem_assign' 'void (limb *, const limb *)'
| | | |-ImplicitCastExpr 0x1653b3f7cf8 <col:18> 'limb *' <ArrayToPointerDecay>
| | | | `-DeclRefExpr 0x1653b3f7c70 <col:18> 'felem':'limb [4]' lvalue Var 0x1653b3f67d8 'ftmp' 'felem':'limb [4]'
| | | `-ImplicitCastExpr 0x1653b3f7d10 <col:24> 'const limb *':'const limb *' <LValueToRValue>
| | |   `-DeclRefExpr 0x1653b3f7c90 <col:24> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3f4138 'y_in' 'const limb *':'const limb *'
| | |-CallExpr 0x1653b3f7da0 <line:873:5, col:25> 'void'
| | | |-ImplicitCastExpr 0x1653b3f7d88 <col:5> 'void (*)(limb *, const limb *)' <FunctionToPointerDecay>
| | | | `-DeclRefExpr 0x1653b3f7d28 <col:5> 'void (limb *, const limb *)' Function 0x1653b2fd028 'felem_sum' 'void (limb *, const limb *)'
| | | |-ImplicitCastExpr 0x1653b3f7dd0 <col:15> 'limb *' <ArrayToPointerDecay>
| | | | `-DeclRefExpr 0x1653b3f7d48 <col:15> 'felem':'limb [4]' lvalue Var 0x1653b3f67d8 'ftmp' 'felem':'limb [4]'
| | | `-ImplicitCastExpr 0x1653b3f7de8 <col:21> 'const limb *':'const limb *' <LValueToRValue>
| | |   `-DeclRefExpr 0x1653b3f7d68 <col:21> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3f41b0 'z_in' 'const limb *':'const limb *'
| | |-CallExpr 0x1653b3f7e78 <line:875:5, col:27> 'void'
| | | |-ImplicitCastExpr 0x1653b3f7e60 <col:5> 'void (*)(widelimb *, const limb *)' <FunctionToPointerDecay>
| | | | `-DeclRefExpr 0x1653b3f7e00 <col:5> 'void (widelimb *, const limb *)' Function 0x1653b304030 'felem_square' 'void (widelimb *, const limb *)'
| | | |-ImplicitCastExpr 0x1653b3f7ea8 <col:18> 'widelimb *' <ArrayToPointerDecay>
| | | | `-DeclRefExpr 0x1653b3f7e20 <col:18> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3f44b0 'tmp' 'widefelem':'widelimb [7]'
| | | `-ImplicitCastExpr 0x1653b3f7ed8 <col:23> 'const limb *':'const limb *' <NoOp>
| | |   `-ImplicitCastExpr 0x1653b3f7ec0 <col:23> 'limb *' <ArrayToPointerDecay>
| | |     `-DeclRefExpr 0x1653b3f7e40 <col:23> 'felem':'limb [4]' lvalue Var 0x1653b3f67d8 'ftmp' 'felem':'limb [4]'
| | |-CallExpr 0x1653b3f7f68 <line:877:5, col:33> 'void'
| | | |-ImplicitCastExpr 0x1653b3f7f50 <col:5> 'void (*)(widelimb *, const limb *)' <FunctionToPointerDecay>
| | | | `-DeclRefExpr 0x1653b3f7ef0 <col:5> 'void (widelimb *, const limb *)' Function 0x1653b301ba8 'felem_diff_128_64' 'void (widelimb *, const limb *)'
| | | |-ImplicitCastExpr 0x1653b3f7f98 <col:23> 'widelimb *' <ArrayToPointerDecay>
| | | | `-DeclRefExpr 0x1653b3f7f10 <col:23> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3f44b0 'tmp' 'widefelem':'widelimb [7]'
| | | `-ImplicitCastExpr 0x1653b3f7fc8 <col:28> 'const limb *':'const limb *' <NoOp>
| | |   `-ImplicitCastExpr 0x1653b3f7fb0 <col:28> 'limb *' <ArrayToPointerDecay>
| | |     `-DeclRefExpr 0x1653b3f7f30 <col:28> 'felem':'limb [4]' lvalue Var 0x1653b3f65f8 'delta' 'felem':'limb [4]'
| | |-CallExpr 0x1653b3f8058 <line:879:5, col:28> 'void'
| | | |-ImplicitCastExpr 0x1653b3f8040 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
| | | | `-DeclRefExpr 0x1653b3f7fe0 <col:5> 'void (limb *, const widelimb *)' Function 0x1653b3f5a28 'felem_reduce' 'void (limb *, const widelimb *)'
| | | |-ImplicitCastExpr 0x1653b3f8088 <col:18> 'limb *':'limb *' <LValueToRValue>
| | | | `-DeclRefExpr 0x1653b3f8000 <col:18> 'limb *':'limb *' lvalue ParmVar 0x1653b3f4048 'z_out' 'limb *':'limb *'
| | | `-ImplicitCastExpr 0x1653b3f80b8 <col:25> 'const widelimb *':'const widelimb *' <NoOp>
| | |   `-ImplicitCastExpr 0x1653b3f80a0 <col:25> 'widelimb *' <ArrayToPointerDecay>
| | |     `-DeclRefExpr 0x1653b3f8020 <col:25> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3f44b0 'tmp' 'widefelem':'widelimb [7]'
| | |-CallExpr 0x1653b3f8150 <line:882:5, col:25> 'void'
| | | |-ImplicitCastExpr 0x1653b3f8138 <col:5> 'void (*)(limb *, const limb)' <FunctionToPointerDecay>
| | | | `-DeclRefExpr 0x1653b3f80d0 <col:5> 'void (limb *, const limb)' Function 0x1653b303118 'felem_scalar' 'void (limb *, const limb)'
| | | |-ImplicitCastExpr 0x1653b3f8180 <col:18> 'limb *' <ArrayToPointerDecay>
| | | | `-DeclRefExpr 0x1653b3f80f0 <col:18> 'felem':'limb [4]' lvalue Var 0x1653b3f66e8 'beta' 'felem':'limb [4]'
| | | `-ImplicitCastExpr 0x1653b3f8198 <col:24> 'limb':'unsigned long long' <IntegralCast>
| | |   `-IntegerLiteral 0x1653b3f8110 <col:24> 'int' 4
| | |-CallExpr 0x1653b3f8228 <line:884:5, col:27> 'void'
| | | |-ImplicitCastExpr 0x1653b3f8210 <col:5> 'void (*)(limb *, const limb *)' <FunctionToPointerDecay>
| | | | `-DeclRefExpr 0x1653b3f81b0 <col:5> 'void (limb *, const limb *)' Function 0x1653b2fe9d8 'felem_diff' 'void (limb *, const limb *)'
| | | |-ImplicitCastExpr 0x1653b3f8258 <col:16> 'limb *' <ArrayToPointerDecay>
| | | | `-DeclRefExpr 0x1653b3f81d0 <col:16> 'felem':'limb [4]' lvalue Var 0x1653b3f66e8 'beta' 'felem':'limb [4]'
| | | `-ImplicitCastExpr 0x1653b3f8288 <col:22> 'const limb *':'const limb *' <NoOp>
| | |   `-ImplicitCastExpr 0x1653b3f8270 <col:22> 'limb *':'limb *' <LValueToRValue>
| | |     `-DeclRefExpr 0x1653b3f81f0 <col:22> 'limb *':'limb *' lvalue ParmVar 0x1653b3f3f58 'x_out' 'limb *':'limb *'
| | |-CallExpr 0x1653b3f8338 <line:886:5, col:31> 'void'
| | | |-ImplicitCastExpr 0x1653b3f8320 <col:5> 'void (*)(widelimb *, const limb *, const limb *)' <FunctionToPointerDecay>
| | | | `-DeclRefExpr 0x1653b3f82a0 <col:5> 'void (widelimb *, const limb *, const limb *)' Function 0x1653b3e5488 'felem_mul' 'void (widelimb *, const limb *, const limb *)'
| | | |-ImplicitCastExpr 0x1653b3f8370 <col:15> 'widelimb *' <ArrayToPointerDecay>
| | | | `-DeclRefExpr 0x1653b3f82c0 <col:15> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3f44b0 'tmp' 'widefelem':'widelimb [7]'
| | | |-ImplicitCastExpr 0x1653b3f83a0 <col:20> 'const limb *':'const limb *' <NoOp>
| | | | `-ImplicitCastExpr 0x1653b3f8388 <col:20> 'limb *' <ArrayToPointerDecay>
| | | |   `-DeclRefExpr 0x1653b3f82e0 <col:20> 'felem':'limb [4]' lvalue Var 0x1653b3f6760 'alpha' 'felem':'limb [4]'
| | | `-ImplicitCastExpr 0x1653b3f83d0 <col:27> 'const limb *':'const limb *' <NoOp>
| | |   `-ImplicitCastExpr 0x1653b3f83b8 <col:27> 'limb *' <ArrayToPointerDecay>
| | |     `-DeclRefExpr 0x1653b3f8300 <col:27> 'felem':'limb [4]' lvalue Var 0x1653b3f66e8 'beta' 'felem':'limb [4]'
| | |-CallExpr 0x1653b3f8478 <line:888:5, col:29> 'void'
| | | |-ImplicitCastExpr 0x1653b3f8460 <col:5> 'void (*)(widelimb *, const limb *)' <FunctionToPointerDecay>
| | | | `-DeclRefExpr 0x1653b3f83e8 <col:5> 'void (widelimb *, const limb *)' Function 0x1653b304030 'felem_square' 'void (widelimb *, const limb *)'
| | | |-ImplicitCastExpr 0x1653b3f84a8 <col:18> 'widelimb *' <ArrayToPointerDecay>
| | | | `-DeclRefExpr 0x1653b3f8408 <col:18> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3f6550 'tmp2' 'widefelem':'widelimb [7]'
| | | `-ImplicitCastExpr 0x1653b3f84d8 <col:24> 'const limb *':'const limb *' <NoOp>
| | |   `-ImplicitCastExpr 0x1653b3f84c0 <col:24> 'limb *' <ArrayToPointerDecay>
| | |     `-DeclRefExpr 0x1653b3f8440 <col:24> 'felem':'limb [4]' lvalue Var 0x1653b3f6670 'gamma' 'felem':'limb [4]'
| | |-CallExpr 0x1653b3fa600 <line:890:5, col:29> 'void'
| | | |-ImplicitCastExpr 0x1653b3fa5e8 <col:5> 'void (*)(widelimb *, const widelimb)' <FunctionToPointerDecay>
| | | | `-DeclRefExpr 0x1653b3f84f0 <col:5> 'void (widelimb *, const widelimb)' Function 0x1653b303778 'widefelem_scalar' 'void (widelimb *, const widelimb)'
| | | |-ImplicitCastExpr 0x1653b3fa630 <col:22> 'widelimb *' <ArrayToPointerDecay>
| | | | `-DeclRefExpr 0x1653b3f8510 <col:22> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3f6550 'tmp2' 'widefelem':'widelimb [7]'
| | | `-IntegerLiteral 0x1653b3fa560 <col:28> 'int' 8
| | |-CallExpr 0x1653b3fa720 <line:892:5, col:29> 'void'
| | | |-ImplicitCastExpr 0x1653b3fa708 <col:5> 'void (*)(widelimb *, const widelimb *)' <FunctionToPointerDecay>
| | | | `-DeclRefExpr 0x1653b3fa648 <col:5> 'void (widelimb *, const widelimb *)' Function 0x1653b300098 'widefelem_diff' 'void (widelimb *, const widelimb *)'
| | | |-ImplicitCastExpr 0x1653b3fa750 <col:20> 'widelimb *' <ArrayToPointerDecay>
| | | | `-DeclRefExpr 0x1653b3fa668 <col:20> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3f44b0 'tmp' 'widefelem':'widelimb [7]'
| | | `-ImplicitCastExpr 0x1653b3fa780 <col:25> 'const widelimb *':'const widelimb *' <NoOp>
| | |   `-ImplicitCastExpr 0x1653b3fa768 <col:25> 'widelimb *' <ArrayToPointerDecay>
| | |     `-DeclRefExpr 0x1653b3fa688 <col:25> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3f6550 'tmp2' 'widefelem':'widelimb [7]'
| | `-CallExpr 0x1653b3fa810 <line:894:5, col:28> 'void'
| |   |-ImplicitCastExpr 0x1653b3fa7f8 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
| |   | `-DeclRefExpr 0x1653b3fa798 <col:5> 'void (limb *, const widelimb *)' Function 0x1653b3f5a28 'felem_reduce' 'void (limb *, const widelimb *)'
| |   |-ImplicitCastExpr 0x1653b3fa840 <col:18> 'limb *':'limb *' <LValueToRValue>
| |   | `-DeclRefExpr 0x1653b3fa7b8 <col:18> 'limb *':'limb *' lvalue ParmVar 0x1653b3f3fd0 'y_out' 'limb *':'limb *'
| |   `-ImplicitCastExpr 0x1653b3fa870 <col:25> 'const widelimb *':'const widelimb *' <NoOp>
| |     `-ImplicitCastExpr 0x1653b3fa858 <col:25> 'widelimb *' <ArrayToPointerDecay>
| |       `-DeclRefExpr 0x1653b3fa7d8 <col:25> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3f44b0 'tmp' 'widefelem':'widelimb [7]'
| `-FullComment 0x1653b52a9e0 <line:807:4, col:78>
|   `-ParagraphComment 0x1653b52a9b8 <col:4, col:78>
|     `-TextComment 0x1653b52a990 <col:4, col:78> Text="***************************************************************************"
|-FunctionDecl 0x1653b3fb0b8 <line:915:1, line:1078:1> line:915:13 used point_add 'void (limb *, limb *, limb *, const limb *, const limb *, const limb *, const int, const limb *, const limb *, const limb *)' static
| |-ParmVarDecl 0x1653b3fa9b0 <col:23, col:29> col:29 used x3 'limb *':'limb *'
| |-ParmVarDecl 0x1653b3faa28 <col:33, col:39> col:39 used y3 'limb *':'limb *'
| |-ParmVarDecl 0x1653b3faaa0 <col:43, col:49> col:49 used z3 'limb *':'limb *'
| |-ParmVarDecl 0x1653b3fab18 <line:916:23, col:35> col:35 used x1 'const limb *':'const limb *'
| |-ParmVarDecl 0x1653b3fab90 <col:39, col:51> col:51 used y1 'const limb *':'const limb *'
| |-ParmVarDecl 0x1653b3fac08 <col:55, col:67> col:67 used z1 'const limb *':'const limb *'
| |-ParmVarDecl 0x1653b3fac88 <line:917:23, col:33> col:33 used mixed 'const int'
| |-ParmVarDecl 0x1653b3fad00 <col:40, col:52> col:52 used x2 'const limb *':'const limb *'
| |-ParmVarDecl 0x1653b3fad78 <col:56, col:68> col:68 used y2 'const limb *':'const limb *'
| |-ParmVarDecl 0x1653b3fadf0 <line:918:23, col:35> col:35 used z2 'const limb *':'const limb *'
| `-CompoundStmt 0x1653b3fd888 <line:919:1, line:1078:1>
|   |-DeclStmt 0x1653b3fb5c8 <line:920:5, col:64>
|   | |-VarDecl 0x1653b3fb1d0 <col:5, col:11> col:11 used ftmp 'felem':'limb [4]'
|   | |-VarDecl 0x1653b3fb248 <col:5, col:17> col:17 used ftmp2 'felem':'limb [4]'
|   | |-VarDecl 0x1653b3fb2c0 <col:5, col:24> col:24 used ftmp3 'felem':'limb [4]'
|   | |-VarDecl 0x1653b3fb338 <col:5, col:31> col:31 used ftmp4 'felem':'limb [4]'
|   | |-VarDecl 0x1653b3fb3b0 <col:5, col:38> col:38 used ftmp5 'felem':'limb [4]'
|   | |-VarDecl 0x1653b3fb428 <col:5, col:45> col:45 used x_out 'felem':'limb [4]'
|   | |-VarDecl 0x1653b3fb4a0 <col:5, col:52> col:52 used y_out 'felem':'limb [4]'
|   | `-VarDecl 0x1653b3fb518 <col:5, col:59> col:59 used z_out 'felem':'limb [4]'
|   |-DeclStmt 0x1653b3fb6e8 <line:921:5, col:24>
|   | |-VarDecl 0x1653b3fb5f0 <col:5, col:15> col:15 used tmp 'widefelem':'widelimb [7]'
|   | `-VarDecl 0x1653b3fb668 <col:5, col:20> col:20 used tmp2 'widefelem':'widelimb [7]'
|   |-DeclStmt 0x1653b3fb908 <line:922:5, col:50>
|   | |-VarDecl 0x1653b3fb710 <col:5, col:10> col:10 used z1_is_zero 'limb':'unsigned long long'
|   | |-VarDecl 0x1653b3fb788 <col:5, col:22> col:22 used z2_is_zero 'limb':'unsigned long long'
|   | |-VarDecl 0x1653b3fb800 <col:5, col:34> col:34 used x_equal 'limb':'unsigned long long'
|   | `-VarDecl 0x1653b3fb878 <col:5, col:43> col:43 used y_equal 'limb':'unsigned long long'
|   |-IfStmt 0x1653b3fc418 <line:924:5, line:950:5> has_else
|   | |-UnaryOperator 0x1653b3fb958 <line:924:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x1653b3fb940 <col:10> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1653b3fb920 <col:10> 'const int' lvalue ParmVar 0x1653b3fac88 'mixed' 'const int'
|   | |-CompoundStmt 0x1653b3fc1f8 <col:17, line:940:5>
|   | | |-CallExpr 0x1653b3fba00 <line:926:9, col:29> 'void'
|   | | | |-ImplicitCastExpr 0x1653b3fb9e8 <col:9> 'void (*)(widelimb *, const limb *)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x1653b3fb970 <col:9> 'void (widelimb *, const limb *)' Function 0x1653b304030 'felem_square' 'void (widelimb *, const limb *)'
|   | | | |-ImplicitCastExpr 0x1653b3fba30 <col:22> 'widelimb *' <ArrayToPointerDecay>
|   | | | | `-DeclRefExpr 0x1653b3fb990 <col:22> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3fb5f0 'tmp' 'widefelem':'widelimb [7]'
|   | | | `-ImplicitCastExpr 0x1653b3fba48 <col:27> 'const limb *':'const limb *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1653b3fb9c8 <col:27> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3fadf0 'z2' 'const limb *':'const limb *'
|   | | |-CallExpr 0x1653b3fbaf0 <line:927:9, col:32> 'void'
|   | | | |-ImplicitCastExpr 0x1653b3fbad8 <col:9> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x1653b3fba60 <col:9> 'void (limb *, const widelimb *)' Function 0x1653b3f5a28 'felem_reduce' 'void (limb *, const widelimb *)'
|   | | | |-ImplicitCastExpr 0x1653b3fbb20 <col:22> 'limb *' <ArrayToPointerDecay>
|   | | | | `-DeclRefExpr 0x1653b3fba80 <col:22> 'felem':'limb [4]' lvalue Var 0x1653b3fb248 'ftmp2' 'felem':'limb [4]'
|   | | | `-ImplicitCastExpr 0x1653b3fbb50 <col:29> 'const widelimb *':'const widelimb *' <NoOp>
|   | | |   `-ImplicitCastExpr 0x1653b3fbb38 <col:29> 'widelimb *' <ArrayToPointerDecay>
|   | | |     `-DeclRefExpr 0x1653b3fbab8 <col:29> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3fb5f0 'tmp' 'widefelem':'widelimb [7]'
|   | | |-CallExpr 0x1653b3fbc00 <line:930:9, col:33> 'void'
|   | | | |-ImplicitCastExpr 0x1653b3fbbe8 <col:9> 'void (*)(widelimb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x1653b3fbb68 <col:9> 'void (widelimb *, const limb *, const limb *)' Function 0x1653b3e5488 'felem_mul' 'void (widelimb *, const limb *, const limb *)'
|   | | | |-ImplicitCastExpr 0x1653b3fbc38 <col:19> 'widelimb *' <ArrayToPointerDecay>
|   | | | | `-DeclRefExpr 0x1653b3fbb88 <col:19> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3fb5f0 'tmp' 'widefelem':'widelimb [7]'
|   | | | |-ImplicitCastExpr 0x1653b3fbc68 <col:24> 'const limb *':'const limb *' <NoOp>
|   | | | | `-ImplicitCastExpr 0x1653b3fbc50 <col:24> 'limb *' <ArrayToPointerDecay>
|   | | | |   `-DeclRefExpr 0x1653b3fbba8 <col:24> 'felem':'limb [4]' lvalue Var 0x1653b3fb248 'ftmp2' 'felem':'limb [4]'
|   | | | `-ImplicitCastExpr 0x1653b3fbc80 <col:31> 'const limb *':'const limb *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1653b3fbbc8 <col:31> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3fadf0 'z2' 'const limb *':'const limb *'
|   | | |-CallExpr 0x1653b3fbd28 <line:931:9, col:32> 'void'
|   | | | |-ImplicitCastExpr 0x1653b3fbd10 <col:9> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x1653b3fbc98 <col:9> 'void (limb *, const widelimb *)' Function 0x1653b3f5a28 'felem_reduce' 'void (limb *, const widelimb *)'
|   | | | |-ImplicitCastExpr 0x1653b3fbd58 <col:22> 'limb *' <ArrayToPointerDecay>
|   | | | | `-DeclRefExpr 0x1653b3fbcb8 <col:22> 'felem':'limb [4]' lvalue Var 0x1653b3fb338 'ftmp4' 'felem':'limb [4]'
|   | | | `-ImplicitCastExpr 0x1653b3fbd88 <col:29> 'const widelimb *':'const widelimb *' <NoOp>
|   | | |   `-ImplicitCastExpr 0x1653b3fbd70 <col:29> 'widelimb *' <ArrayToPointerDecay>
|   | | |     `-DeclRefExpr 0x1653b3fbcf0 <col:29> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3fb5f0 'tmp' 'widefelem':'widelimb [7]'
|   | | |-CallExpr 0x1653b3fbe50 <line:934:9, col:34> 'void'
|   | | | |-ImplicitCastExpr 0x1653b3fbe38 <col:9> 'void (*)(widelimb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x1653b3fbda0 <col:9> 'void (widelimb *, const limb *, const limb *)' Function 0x1653b3e5488 'felem_mul' 'void (widelimb *, const limb *, const limb *)'
|   | | | |-ImplicitCastExpr 0x1653b3fbe88 <col:19> 'widelimb *' <ArrayToPointerDecay>
|   | | | | `-DeclRefExpr 0x1653b3fbdc0 <col:19> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3fb668 'tmp2' 'widefelem':'widelimb [7]'
|   | | | |-ImplicitCastExpr 0x1653b3fbeb8 <col:25> 'const limb *':'const limb *' <NoOp>
|   | | | | `-ImplicitCastExpr 0x1653b3fbea0 <col:25> 'limb *' <ArrayToPointerDecay>
|   | | | |   `-DeclRefExpr 0x1653b3fbdf8 <col:25> 'felem':'limb [4]' lvalue Var 0x1653b3fb338 'ftmp4' 'felem':'limb [4]'
|   | | | `-ImplicitCastExpr 0x1653b3fbed0 <col:32> 'const limb *':'const limb *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1653b3fbe18 <col:32> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3fab90 'y1' 'const limb *':'const limb *'
|   | | |-CallExpr 0x1653b3fbf60 <line:935:9, col:33> 'void'
|   | | | |-ImplicitCastExpr 0x1653b3fbf48 <col:9> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x1653b3fbee8 <col:9> 'void (limb *, const widelimb *)' Function 0x1653b3f5a28 'felem_reduce' 'void (limb *, const widelimb *)'
|   | | | |-ImplicitCastExpr 0x1653b3fbf90 <col:22> 'limb *' <ArrayToPointerDecay>
|   | | | | `-DeclRefExpr 0x1653b3fbf08 <col:22> 'felem':'limb [4]' lvalue Var 0x1653b3fb338 'ftmp4' 'felem':'limb [4]'
|   | | | `-ImplicitCastExpr 0x1653b3fbfc0 <col:29> 'const widelimb *':'const widelimb *' <NoOp>
|   | | |   `-ImplicitCastExpr 0x1653b3fbfa8 <col:29> 'widelimb *' <ArrayToPointerDecay>
|   | | |     `-DeclRefExpr 0x1653b3fbf28 <col:29> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3fb668 'tmp2' 'widefelem':'widelimb [7]'
|   | | |-CallExpr 0x1653b3fc070 <line:938:9, col:34> 'void'
|   | | | |-ImplicitCastExpr 0x1653b3fc058 <col:9> 'void (*)(widelimb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x1653b3fbfd8 <col:9> 'void (widelimb *, const limb *, const limb *)' Function 0x1653b3e5488 'felem_mul' 'void (widelimb *, const limb *, const limb *)'
|   | | | |-ImplicitCastExpr 0x1653b3fc0a8 <col:19> 'widelimb *' <ArrayToPointerDecay>
|   | | | | `-DeclRefExpr 0x1653b3fbff8 <col:19> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3fb668 'tmp2' 'widefelem':'widelimb [7]'
|   | | | |-ImplicitCastExpr 0x1653b3fc0d8 <col:25> 'const limb *':'const limb *' <NoOp>
|   | | | | `-ImplicitCastExpr 0x1653b3fc0c0 <col:25> 'limb *' <ArrayToPointerDecay>
|   | | | |   `-DeclRefExpr 0x1653b3fc018 <col:25> 'felem':'limb [4]' lvalue Var 0x1653b3fb248 'ftmp2' 'felem':'limb [4]'
|   | | | `-ImplicitCastExpr 0x1653b3fc0f0 <col:32> 'const limb *':'const limb *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1653b3fc038 <col:32> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3fab18 'x1' 'const limb *':'const limb *'
|   | | `-CallExpr 0x1653b3fc180 <line:939:9, col:33> 'void'
|   | |   |-ImplicitCastExpr 0x1653b3fc168 <col:9> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x1653b3fc108 <col:9> 'void (limb *, const widelimb *)' Function 0x1653b3f5a28 'felem_reduce' 'void (limb *, const widelimb *)'
|   | |   |-ImplicitCastExpr 0x1653b3fc1b0 <col:22> 'limb *' <ArrayToPointerDecay>
|   | |   | `-DeclRefExpr 0x1653b3fc128 <col:22> 'felem':'limb [4]' lvalue Var 0x1653b3fb248 'ftmp2' 'felem':'limb [4]'
|   | |   `-ImplicitCastExpr 0x1653b3fc1e0 <col:29> 'const widelimb *':'const widelimb *' <NoOp>
|   | |     `-ImplicitCastExpr 0x1653b3fc1c8 <col:29> 'widelimb *' <ArrayToPointerDecay>
|   | |       `-DeclRefExpr 0x1653b3fc148 <col:29> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3fb668 'tmp2' 'widefelem':'widelimb [7]'
|   | `-CompoundStmt 0x1653b3fc3f8 <line:940:12, line:950:5>
|   |   |-CallExpr 0x1653b3fc2c0 <line:946:9, col:31> 'void'
|   |   | |-ImplicitCastExpr 0x1653b3fc2a8 <col:9> 'void (*)(limb *, const limb *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1653b3fc248 <col:9> 'void (limb *, const limb *)' Function 0x1653b2fc8d8 'felem_assign' 'void (limb *, const limb *)'
|   |   | |-ImplicitCastExpr 0x1653b3fc2f0 <col:22> 'limb *' <ArrayToPointerDecay>
|   |   | | `-DeclRefExpr 0x1653b3fc268 <col:22> 'felem':'limb [4]' lvalue Var 0x1653b3fb338 'ftmp4' 'felem':'limb [4]'
|   |   | `-ImplicitCastExpr 0x1653b3fc308 <col:29> 'const limb *':'const limb *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1653b3fc288 <col:29> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3fab90 'y1' 'const limb *':'const limb *'
|   |   `-CallExpr 0x1653b3fc398 <line:949:9, col:31> 'void'
|   |     |-ImplicitCastExpr 0x1653b3fc380 <col:9> 'void (*)(limb *, const limb *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1653b3fc320 <col:9> 'void (limb *, const limb *)' Function 0x1653b2fc8d8 'felem_assign' 'void (limb *, const limb *)'
|   |     |-ImplicitCastExpr 0x1653b3fc3c8 <col:22> 'limb *' <ArrayToPointerDecay>
|   |     | `-DeclRefExpr 0x1653b3fc340 <col:22> 'felem':'limb [4]' lvalue Var 0x1653b3fb248 'ftmp2' 'felem':'limb [4]'
|   |     `-ImplicitCastExpr 0x1653b3fc3e0 <col:29> 'const limb *':'const limb *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1653b3fc360 <col:29> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3fab18 'x1' 'const limb *':'const limb *'
|   |-CallExpr 0x1653b3fc4b8 <line:953:5, col:25> 'void'
|   | |-ImplicitCastExpr 0x1653b3fc4a0 <col:5> 'void (*)(widelimb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3fc440 <col:5> 'void (widelimb *, const limb *)' Function 0x1653b304030 'felem_square' 'void (widelimb *, const limb *)'
|   | |-ImplicitCastExpr 0x1653b3fc4e8 <col:18> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3fc460 <col:18> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3fb5f0 'tmp' 'widefelem':'widelimb [7]'
|   | `-ImplicitCastExpr 0x1653b3fc500 <col:23> 'const limb *':'const limb *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1653b3fc480 <col:23> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3fac08 'z1' 'const limb *':'const limb *'
|   |-CallExpr 0x1653b3ec540 <line:954:5, col:27> 'void'
|   | |-ImplicitCastExpr 0x1653b3ec528 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3fc518 <col:5> 'void (limb *, const widelimb *)' Function 0x1653b3f5a28 'felem_reduce' 'void (limb *, const widelimb *)'
|   | |-ImplicitCastExpr 0x1653b3ec570 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3fc538 <col:18> 'felem':'limb [4]' lvalue Var 0x1653b3fb1d0 'ftmp' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x1653b3ec5a0 <col:24> 'const widelimb *':'const widelimb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b3ec588 <col:24> 'widelimb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b3ec508 <col:24> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3fb5f0 'tmp' 'widefelem':'widelimb [7]'
|   |-CallExpr 0x1653b3ec650 <line:957:5, col:28> 'void'
|   | |-ImplicitCastExpr 0x1653b3ec638 <col:5> 'void (*)(widelimb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3ec5b8 <col:5> 'void (widelimb *, const limb *, const limb *)' Function 0x1653b3e5488 'felem_mul' 'void (widelimb *, const limb *, const limb *)'
|   | |-ImplicitCastExpr 0x1653b3ec688 <col:15> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3ec5d8 <col:15> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3fb5f0 'tmp' 'widefelem':'widelimb [7]'
|   | |-ImplicitCastExpr 0x1653b3ec6b8 <col:20> 'const limb *':'const limb *' <NoOp>
|   | | `-ImplicitCastExpr 0x1653b3ec6a0 <col:20> 'limb *' <ArrayToPointerDecay>
|   | |   `-DeclRefExpr 0x1653b3ec5f8 <col:20> 'felem':'limb [4]' lvalue Var 0x1653b3fb1d0 'ftmp' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x1653b3ec6d0 <col:26> 'const limb *':'const limb *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1653b3ec618 <col:26> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3fac08 'z1' 'const limb *':'const limb *'
|   |-CallExpr 0x1653b3ec778 <line:958:5, col:28> 'void'
|   | |-ImplicitCastExpr 0x1653b3ec760 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3ec6e8 <col:5> 'void (limb *, const widelimb *)' Function 0x1653b3f5a28 'felem_reduce' 'void (limb *, const widelimb *)'
|   | |-ImplicitCastExpr 0x1653b3ec7a8 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3ec708 <col:18> 'felem':'limb [4]' lvalue Var 0x1653b3fb2c0 'ftmp3' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x1653b3ec7d8 <col:25> 'const widelimb *':'const widelimb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b3ec7c0 <col:25> 'widelimb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b3ec740 <col:25> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3fb5f0 'tmp' 'widefelem':'widelimb [7]'
|   |-CallExpr 0x1653b3ec888 <line:961:5, col:29> 'void'
|   | |-ImplicitCastExpr 0x1653b3ec870 <col:5> 'void (*)(widelimb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3ec7f0 <col:5> 'void (widelimb *, const limb *, const limb *)' Function 0x1653b3e5488 'felem_mul' 'void (widelimb *, const limb *, const limb *)'
|   | |-ImplicitCastExpr 0x1653b3ec8c0 <col:15> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3ec810 <col:15> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3fb5f0 'tmp' 'widefelem':'widelimb [7]'
|   | |-ImplicitCastExpr 0x1653b3ec8f0 <col:20> 'const limb *':'const limb *' <NoOp>
|   | | `-ImplicitCastExpr 0x1653b3ec8d8 <col:20> 'limb *' <ArrayToPointerDecay>
|   | |   `-DeclRefExpr 0x1653b3ec830 <col:20> 'felem':'limb [4]' lvalue Var 0x1653b3fb2c0 'ftmp3' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x1653b3ec908 <col:27> 'const limb *':'const limb *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1653b3ec850 <col:27> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3fad78 'y2' 'const limb *':'const limb *'
|   |-CallExpr 0x1653b3ec998 <line:965:5, col:33> 'void'
|   | |-ImplicitCastExpr 0x1653b3ec980 <col:5> 'void (*)(widelimb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3ec920 <col:5> 'void (widelimb *, const limb *)' Function 0x1653b301ba8 'felem_diff_128_64' 'void (widelimb *, const limb *)'
|   | |-ImplicitCastExpr 0x1653b3ec9c8 <col:23> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3ec940 <col:23> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3fb5f0 'tmp' 'widefelem':'widelimb [7]'
|   | `-ImplicitCastExpr 0x1653b3ec9f8 <col:28> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b3ec9e0 <col:28> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b3ec960 <col:28> 'felem':'limb [4]' lvalue Var 0x1653b3fb338 'ftmp4' 'felem':'limb [4]'
|   |-CallExpr 0x1653b3eca88 <line:967:5, col:28> 'void'
|   | |-ImplicitCastExpr 0x1653b3eca70 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3eca10 <col:5> 'void (limb *, const widelimb *)' Function 0x1653b3f5a28 'felem_reduce' 'void (limb *, const widelimb *)'
|   | |-ImplicitCastExpr 0x1653b3ecab8 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3eca30 <col:18> 'felem':'limb [4]' lvalue Var 0x1653b3fb2c0 'ftmp3' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x1653b3ecae8 <col:25> 'const widelimb *':'const widelimb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b3ecad0 <col:25> 'widelimb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b3eca50 <col:25> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3fb5f0 'tmp' 'widefelem':'widelimb [7]'
|   |-CallExpr 0x1653b3ecb98 <line:970:5, col:28> 'void'
|   | |-ImplicitCastExpr 0x1653b3ecb80 <col:5> 'void (*)(widelimb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3ecb00 <col:5> 'void (widelimb *, const limb *, const limb *)' Function 0x1653b3e5488 'felem_mul' 'void (widelimb *, const limb *, const limb *)'
|   | |-ImplicitCastExpr 0x1653b3ecbd0 <col:15> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3ecb20 <col:15> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3fb5f0 'tmp' 'widefelem':'widelimb [7]'
|   | |-ImplicitCastExpr 0x1653b3ecc00 <col:20> 'const limb *':'const limb *' <NoOp>
|   | | `-ImplicitCastExpr 0x1653b3ecbe8 <col:20> 'limb *' <ArrayToPointerDecay>
|   | |   `-DeclRefExpr 0x1653b3ecb40 <col:20> 'felem':'limb [4]' lvalue Var 0x1653b3fb1d0 'ftmp' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x1653b3ecc18 <col:26> 'const limb *':'const limb *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1653b3ecb60 <col:26> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3fad00 'x2' 'const limb *':'const limb *'
|   |-CallExpr 0x1653b3ecca8 <line:974:5, col:33> 'void'
|   | |-ImplicitCastExpr 0x1653b3ecc90 <col:5> 'void (*)(widelimb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3ecc30 <col:5> 'void (widelimb *, const limb *)' Function 0x1653b301ba8 'felem_diff_128_64' 'void (widelimb *, const limb *)'
|   | |-ImplicitCastExpr 0x1653b3eccd8 <col:23> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3ecc50 <col:23> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3fb5f0 'tmp' 'widefelem':'widelimb [7]'
|   | `-ImplicitCastExpr 0x1653b3ecd08 <col:28> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b3eccf0 <col:28> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b3ecc70 <col:28> 'felem':'limb [4]' lvalue Var 0x1653b3fb248 'ftmp2' 'felem':'limb [4]'
|   |-CallExpr 0x1653b3ecd98 <line:976:5, col:27> 'void'
|   | |-ImplicitCastExpr 0x1653b3ecd80 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3ecd20 <col:5> 'void (limb *, const widelimb *)' Function 0x1653b3f5a28 'felem_reduce' 'void (limb *, const widelimb *)'
|   | |-ImplicitCastExpr 0x1653b3ecdc8 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3ecd40 <col:18> 'felem':'limb [4]' lvalue Var 0x1653b3fb1d0 'ftmp' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x1653b3ecdf8 <col:24> 'const widelimb *':'const widelimb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b3ecde0 <col:24> 'widelimb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b3ecd60 <col:24> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3fb5f0 'tmp' 'widefelem':'widelimb [7]'
|   |-BinaryOperator 0x1653b3ecef8 <line:982:5, col:33> 'limb':'unsigned long long' '='
|   | |-DeclRefExpr 0x1653b3ece10 <col:5> 'limb':'unsigned long long' lvalue Var 0x1653b3fb800 'x_equal' 'limb':'unsigned long long'
|   | `-CallExpr 0x1653b3ecea0 <col:15, col:33> 'limb':'unsigned long long'
|   |   |-ImplicitCastExpr 0x1653b3ece88 <col:15> 'limb (*)(const limb *)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1653b3ece48 <col:15> 'limb (const limb *)' Function 0x1653b3f8b88 'felem_is_zero' 'limb (const limb *)'
|   |   `-ImplicitCastExpr 0x1653b3ecee0 <col:29> 'const limb *':'const limb *' <NoOp>
|   |     `-ImplicitCastExpr 0x1653b3ecec8 <col:29> 'limb *' <ArrayToPointerDecay>
|   |       `-DeclRefExpr 0x1653b3ece68 <col:29> 'felem':'limb [4]' lvalue Var 0x1653b3fb1d0 'ftmp' 'felem':'limb [4]'
|   |-BinaryOperator 0x1653b3ed000 <line:983:5, col:34> 'limb':'unsigned long long' '='
|   | |-DeclRefExpr 0x1653b3ecf18 <col:5> 'limb':'unsigned long long' lvalue Var 0x1653b3fb878 'y_equal' 'limb':'unsigned long long'
|   | `-CallExpr 0x1653b3ecfa8 <col:15, col:34> 'limb':'unsigned long long'
|   |   |-ImplicitCastExpr 0x1653b3ecf90 <col:15> 'limb (*)(const limb *)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1653b3ecf50 <col:15> 'limb (const limb *)' Function 0x1653b3f8b88 'felem_is_zero' 'limb (const limb *)'
|   |   `-ImplicitCastExpr 0x1653b3ecfe8 <col:29> 'const limb *':'const limb *' <NoOp>
|   |     `-ImplicitCastExpr 0x1653b3ecfd0 <col:29> 'limb *' <ArrayToPointerDecay>
|   |       `-DeclRefExpr 0x1653b3ecf70 <col:29> 'felem':'limb [4]' lvalue Var 0x1653b3fb2c0 'ftmp3' 'felem':'limb [4]'
|   |-BinaryOperator 0x1653b3ed0f0 <line:984:5, col:34> 'limb':'unsigned long long' '='
|   | |-DeclRefExpr 0x1653b3ed020 <col:5> 'limb':'unsigned long long' lvalue Var 0x1653b3fb710 'z1_is_zero' 'limb':'unsigned long long'
|   | `-CallExpr 0x1653b3ed0b0 <col:18, col:34> 'limb':'unsigned long long'
|   |   |-ImplicitCastExpr 0x1653b3ed098 <col:18> 'limb (*)(const limb *)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1653b3ed058 <col:18> 'limb (const limb *)' Function 0x1653b3f8b88 'felem_is_zero' 'limb (const limb *)'
|   |   `-ImplicitCastExpr 0x1653b3ed0d8 <col:32> 'const limb *':'const limb *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1653b3ed078 <col:32> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3fac08 'z1' 'const limb *':'const limb *'
|   |-BinaryOperator 0x1653b3ed1e0 <line:985:5, col:34> 'limb':'unsigned long long' '='
|   | |-DeclRefExpr 0x1653b3ed110 <col:5> 'limb':'unsigned long long' lvalue Var 0x1653b3fb788 'z2_is_zero' 'limb':'unsigned long long'
|   | `-CallExpr 0x1653b3ed1a0 <col:18, col:34> 'limb':'unsigned long long'
|   |   |-ImplicitCastExpr 0x1653b3ed188 <col:18> 'limb (*)(const limb *)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1653b3ed148 <col:18> 'limb (const limb *)' Function 0x1653b3f8b88 'felem_is_zero' 'limb (const limb *)'
|   |   `-ImplicitCastExpr 0x1653b3ed1c8 <col:32> 'const limb *':'const limb *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1653b3ed168 <col:32> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3fadf0 'z2' 'const limb *':'const limb *'
|   |-IfStmt 0x1653b3ed5d0 <line:987:5, line:990:5>
|   | |-BinaryOperator 0x1653b3ed350 <line:987:9, col:47> 'int' '&&'
|   | | |-BinaryOperator 0x1653b3ed2e0 <col:9, col:32> 'int' '&&'
|   | | | |-BinaryOperator 0x1653b3ed270 <col:9, col:20> 'int' '&&'
|   | | | | |-ImplicitCastExpr 0x1653b3ed240 <col:9> 'limb':'unsigned long long' <LValueToRValue>
|   | | | | | `-DeclRefExpr 0x1653b3ed200 <col:9> 'limb':'unsigned long long' lvalue Var 0x1653b3fb800 'x_equal' 'limb':'unsigned long long'
|   | | | | `-ImplicitCastExpr 0x1653b3ed258 <col:20> 'limb':'unsigned long long' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x1653b3ed220 <col:20> 'limb':'unsigned long long' lvalue Var 0x1653b3fb878 'y_equal' 'limb':'unsigned long long'
|   | | | `-UnaryOperator 0x1653b3ed2c8 <col:31, col:32> 'int' prefix '!' cannot overflow
|   | | |   `-ImplicitCastExpr 0x1653b3ed2b0 <col:32> 'limb':'unsigned long long' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x1653b3ed290 <col:32> 'limb':'unsigned long long' lvalue Var 0x1653b3fb710 'z1_is_zero' 'limb':'unsigned long long'
|   | | `-UnaryOperator 0x1653b3ed338 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | |   `-ImplicitCastExpr 0x1653b3ed320 <col:47> 'limb':'unsigned long long' <LValueToRValue>
|   | |     `-DeclRefExpr 0x1653b3ed300 <col:47> 'limb':'unsigned long long' lvalue Var 0x1653b3fb788 'z2_is_zero' 'limb':'unsigned long long'
|   | `-CompoundStmt 0x1653b3ed5b0 <col:59, line:990:5>
|   |   |-CallExpr 0x1653b3ed4c0 <line:988:9, col:44> 'void'
|   |   | |-ImplicitCastExpr 0x1653b3ed4a8 <col:9> 'void (*)(limb *, limb *, limb *, const limb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1653b3ed370 <col:9> 'void (limb *, limb *, limb *, const limb *, const limb *, const limb *)' Function 0x1653b3f43b8 'point_double' 'void (limb *, limb *, limb *, const limb *, const limb *, const limb *)'
|   |   | |-ImplicitCastExpr 0x1653b3ed510 <col:22> 'limb *':'limb *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1653b3ed390 <col:22> 'limb *':'limb *' lvalue ParmVar 0x1653b3fa9b0 'x3' 'limb *':'limb *'
|   |   | |-ImplicitCastExpr 0x1653b3ed528 <col:26> 'limb *':'limb *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1653b3ed3b0 <col:26> 'limb *':'limb *' lvalue ParmVar 0x1653b3faa28 'y3' 'limb *':'limb *'
|   |   | |-ImplicitCastExpr 0x1653b3ed540 <col:30> 'limb *':'limb *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1653b3ed3d0 <col:30> 'limb *':'limb *' lvalue ParmVar 0x1653b3faaa0 'z3' 'limb *':'limb *'
|   |   | |-ImplicitCastExpr 0x1653b3ed558 <col:34> 'const limb *':'const limb *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1653b3ed3f0 <col:34> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3fab18 'x1' 'const limb *':'const limb *'
|   |   | |-ImplicitCastExpr 0x1653b3ed570 <col:38> 'const limb *':'const limb *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1653b3ed410 <col:38> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3fab90 'y1' 'const limb *':'const limb *'
|   |   | `-ImplicitCastExpr 0x1653b3ed588 <col:42> 'const limb *':'const limb *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1653b3ed430 <col:42> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3fac08 'z1' 'const limb *':'const limb *'
|   |   `-ReturnStmt 0x1653b3ed5a0 <line:989:9>
|   |-IfStmt 0x1653b3ed968 <line:993:5, line:999:5> has_else
|   | |-UnaryOperator 0x1653b3ed620 <line:993:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x1653b3ed608 <col:10> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1653b3ed5e8 <col:10> 'const int' lvalue ParmVar 0x1653b3fac88 'mixed' 'const int'
|   | |-CompoundStmt 0x1653b3ed858 <col:17, line:996:5>
|   | | |-CallExpr 0x1653b3ed6d0 <line:994:9, col:30> 'void'
|   | | | |-ImplicitCastExpr 0x1653b3ed6b8 <col:9> 'void (*)(widelimb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x1653b3ed638 <col:9> 'void (widelimb *, const limb *, const limb *)' Function 0x1653b3e5488 'felem_mul' 'void (widelimb *, const limb *, const limb *)'
|   | | | |-ImplicitCastExpr 0x1653b3ed708 <col:19> 'widelimb *' <ArrayToPointerDecay>
|   | | | | `-DeclRefExpr 0x1653b3ed658 <col:19> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3fb5f0 'tmp' 'widefelem':'widelimb [7]'
|   | | | |-ImplicitCastExpr 0x1653b3ed720 <col:24> 'const limb *':'const limb *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1653b3ed678 <col:24> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3fac08 'z1' 'const limb *':'const limb *'
|   | | | `-ImplicitCastExpr 0x1653b3ed738 <col:28> 'const limb *':'const limb *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1653b3ed698 <col:28> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3fadf0 'z2' 'const limb *':'const limb *'
|   | | `-CallExpr 0x1653b3ed7e0 <line:995:9, col:32> 'void'
|   | |   |-ImplicitCastExpr 0x1653b3ed7c8 <col:9> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x1653b3ed750 <col:9> 'void (limb *, const widelimb *)' Function 0x1653b3f5a28 'felem_reduce' 'void (limb *, const widelimb *)'
|   | |   |-ImplicitCastExpr 0x1653b3ed810 <col:22> 'limb *' <ArrayToPointerDecay>
|   | |   | `-DeclRefExpr 0x1653b3ed770 <col:22> 'felem':'limb [4]' lvalue Var 0x1653b3fb3b0 'ftmp5' 'felem':'limb [4]'
|   | |   `-ImplicitCastExpr 0x1653b3ed840 <col:29> 'const widelimb *':'const widelimb *' <NoOp>
|   | |     `-ImplicitCastExpr 0x1653b3ed828 <col:29> 'widelimb *' <ArrayToPointerDecay>
|   | |       `-DeclRefExpr 0x1653b3ed7a8 <col:29> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3fb5f0 'tmp' 'widefelem':'widelimb [7]'
|   | `-CompoundStmt 0x1653b3ed950 <line:996:12, line:999:5>
|   |   `-CallExpr 0x1653b3ed8f0 <line:998:9, col:31> 'void'
|   |     |-ImplicitCastExpr 0x1653b3ed8d8 <col:9> 'void (*)(limb *, const limb *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1653b3ed878 <col:9> 'void (limb *, const limb *)' Function 0x1653b2fc8d8 'felem_assign' 'void (limb *, const limb *)'
|   |     |-ImplicitCastExpr 0x1653b3ed920 <col:22> 'limb *' <ArrayToPointerDecay>
|   |     | `-DeclRefExpr 0x1653b3ed898 <col:22> 'felem':'limb [4]' lvalue Var 0x1653b3fb3b0 'ftmp5' 'felem':'limb [4]'
|   |     `-ImplicitCastExpr 0x1653b3ed938 <col:29> 'const limb *':'const limb *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1653b3ed8b8 <col:29> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3fac08 'z1' 'const limb *':'const limb *'
|   |-CallExpr 0x1653b3eda28 <line:1002:5, col:31> 'void'
|   | |-ImplicitCastExpr 0x1653b3eda10 <col:5> 'void (*)(widelimb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3ed990 <col:5> 'void (widelimb *, const limb *, const limb *)' Function 0x1653b3e5488 'felem_mul' 'void (widelimb *, const limb *, const limb *)'
|   | |-ImplicitCastExpr 0x1653b3eda60 <col:15> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3ed9b0 <col:15> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3fb5f0 'tmp' 'widefelem':'widelimb [7]'
|   | |-ImplicitCastExpr 0x1653b3eda90 <col:20> 'const limb *':'const limb *' <NoOp>
|   | | `-ImplicitCastExpr 0x1653b3eda78 <col:20> 'limb *' <ArrayToPointerDecay>
|   | |   `-DeclRefExpr 0x1653b3ed9d0 <col:20> 'felem':'limb [4]' lvalue Var 0x1653b3fb1d0 'ftmp' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x1653b3edac0 <col:26> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b3edaa8 <col:26> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b3ed9f0 <col:26> 'felem':'limb [4]' lvalue Var 0x1653b3fb3b0 'ftmp5' 'felem':'limb [4]'
|   |-CallExpr 0x1653b3edb68 <line:1003:5, col:28> 'void'
|   | |-ImplicitCastExpr 0x1653b3edb50 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3edad8 <col:5> 'void (limb *, const widelimb *)' Function 0x1653b3f5a28 'felem_reduce' 'void (limb *, const widelimb *)'
|   | |-ImplicitCastExpr 0x1653b3edb98 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3edaf8 <col:18> 'felem':'limb [4]' lvalue Var 0x1653b3fb518 'z_out' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x1653b3edbc8 <col:25> 'const widelimb *':'const widelimb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b3edbb0 <col:25> 'widelimb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b3edb30 <col:25> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3fb5f0 'tmp' 'widefelem':'widelimb [7]'
|   |-CallExpr 0x1653b3edc58 <line:1006:5, col:29> 'void'
|   | |-ImplicitCastExpr 0x1653b3edc40 <col:5> 'void (*)(limb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3edbe0 <col:5> 'void (limb *, const limb *)' Function 0x1653b2fc8d8 'felem_assign' 'void (limb *, const limb *)'
|   | |-ImplicitCastExpr 0x1653b3edc88 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3edc00 <col:18> 'felem':'limb [4]' lvalue Var 0x1653b3fb3b0 'ftmp5' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x1653b3edcb8 <col:25> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b3edca0 <col:25> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b3edc20 <col:25> 'felem':'limb [4]' lvalue Var 0x1653b3fb1d0 'ftmp' 'felem':'limb [4]'
|   |-CallExpr 0x1653b3edd48 <line:1007:5, col:27> 'void'
|   | |-ImplicitCastExpr 0x1653b3edd30 <col:5> 'void (*)(widelimb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3edcd0 <col:5> 'void (widelimb *, const limb *)' Function 0x1653b304030 'felem_square' 'void (widelimb *, const limb *)'
|   | |-ImplicitCastExpr 0x1653b3edd78 <col:18> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3edcf0 <col:18> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3fb5f0 'tmp' 'widefelem':'widelimb [7]'
|   | `-ImplicitCastExpr 0x1653b3edda8 <col:23> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b3edd90 <col:23> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b3edd10 <col:23> 'felem':'limb [4]' lvalue Var 0x1653b3fb1d0 'ftmp' 'felem':'limb [4]'
|   |-CallExpr 0x1653b3ede38 <line:1008:5, col:27> 'void'
|   | |-ImplicitCastExpr 0x1653b3ede20 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3eddc0 <col:5> 'void (limb *, const widelimb *)' Function 0x1653b3f5a28 'felem_reduce' 'void (limb *, const widelimb *)'
|   | |-ImplicitCastExpr 0x1653b3ede68 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3edde0 <col:18> 'felem':'limb [4]' lvalue Var 0x1653b3fb1d0 'ftmp' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x1653b3ede98 <col:24> 'const widelimb *':'const widelimb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b3ede80 <col:24> 'widelimb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b3ede00 <col:24> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3fb5f0 'tmp' 'widefelem':'widelimb [7]'
|   |-CallExpr 0x1653b3edf48 <line:1011:5, col:31> 'void'
|   | |-ImplicitCastExpr 0x1653b3edf30 <col:5> 'void (*)(widelimb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3edeb0 <col:5> 'void (widelimb *, const limb *, const limb *)' Function 0x1653b3e5488 'felem_mul' 'void (widelimb *, const limb *, const limb *)'
|   | |-ImplicitCastExpr 0x1653b3edf80 <col:15> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3eded0 <col:15> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3fb5f0 'tmp' 'widefelem':'widelimb [7]'
|   | |-ImplicitCastExpr 0x1653b3edfb0 <col:20> 'const limb *':'const limb *' <NoOp>
|   | | `-ImplicitCastExpr 0x1653b3edf98 <col:20> 'limb *' <ArrayToPointerDecay>
|   | |   `-DeclRefExpr 0x1653b3edef0 <col:20> 'felem':'limb [4]' lvalue Var 0x1653b3fb1d0 'ftmp' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x1653b3edfe0 <col:26> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b3edfc8 <col:26> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b3edf10 <col:26> 'felem':'limb [4]' lvalue Var 0x1653b3fb3b0 'ftmp5' 'felem':'limb [4]'
|   |-CallExpr 0x1653b3ee070 <line:1012:5, col:28> 'void'
|   | |-ImplicitCastExpr 0x1653b3ee058 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3edff8 <col:5> 'void (limb *, const widelimb *)' Function 0x1653b3f5a28 'felem_reduce' 'void (limb *, const widelimb *)'
|   | |-ImplicitCastExpr 0x1653b3ee0a0 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3ee018 <col:18> 'felem':'limb [4]' lvalue Var 0x1653b3fb3b0 'ftmp5' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x1653b3ee0d0 <col:25> 'const widelimb *':'const widelimb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b3ee0b8 <col:25> 'widelimb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b3ee038 <col:25> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3fb5f0 'tmp' 'widefelem':'widelimb [7]'
|   |-CallExpr 0x1653b3ee180 <line:1015:5, col:31> 'void'
|   | |-ImplicitCastExpr 0x1653b3ee168 <col:5> 'void (*)(widelimb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3ee0e8 <col:5> 'void (widelimb *, const limb *, const limb *)' Function 0x1653b3e5488 'felem_mul' 'void (widelimb *, const limb *, const limb *)'
|   | |-ImplicitCastExpr 0x1653b3ee1b8 <col:15> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3ee108 <col:15> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3fb5f0 'tmp' 'widefelem':'widelimb [7]'
|   | |-ImplicitCastExpr 0x1653b3ee1e8 <col:20> 'const limb *':'const limb *' <NoOp>
|   | | `-ImplicitCastExpr 0x1653b3ee1d0 <col:20> 'limb *' <ArrayToPointerDecay>
|   | |   `-DeclRefExpr 0x1653b3ee128 <col:20> 'felem':'limb [4]' lvalue Var 0x1653b3fb248 'ftmp2' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x1653b3ee218 <col:27> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b3ee200 <col:27> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b3ee148 <col:27> 'felem':'limb [4]' lvalue Var 0x1653b3fb1d0 'ftmp' 'felem':'limb [4]'
|   |-CallExpr 0x1653b3ee2a8 <line:1016:5, col:28> 'void'
|   | |-ImplicitCastExpr 0x1653b3ee290 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3ee230 <col:5> 'void (limb *, const widelimb *)' Function 0x1653b3f5a28 'felem_reduce' 'void (limb *, const widelimb *)'
|   | |-ImplicitCastExpr 0x1653b3ee2d8 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3ee250 <col:18> 'felem':'limb [4]' lvalue Var 0x1653b3fb248 'ftmp2' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x1653b3ee308 <col:25> 'const widelimb *':'const widelimb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b3ee2f0 <col:25> 'widelimb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b3ee270 <col:25> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3fb5f0 'tmp' 'widefelem':'widelimb [7]'
|   |-CallExpr 0x1653b3ee3b8 <line:1019:5, col:32> 'void'
|   | |-ImplicitCastExpr 0x1653b3ee3a0 <col:5> 'void (*)(widelimb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3ee320 <col:5> 'void (widelimb *, const limb *, const limb *)' Function 0x1653b3e5488 'felem_mul' 'void (widelimb *, const limb *, const limb *)'
|   | |-ImplicitCastExpr 0x1653b3ee3f0 <col:15> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3ee340 <col:15> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3fb5f0 'tmp' 'widefelem':'widelimb [7]'
|   | |-ImplicitCastExpr 0x1653b3ee420 <col:20> 'const limb *':'const limb *' <NoOp>
|   | | `-ImplicitCastExpr 0x1653b3ee408 <col:20> 'limb *' <ArrayToPointerDecay>
|   | |   `-DeclRefExpr 0x1653b3ee360 <col:20> 'felem':'limb [4]' lvalue Var 0x1653b3fb338 'ftmp4' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x1653b3ee450 <col:27> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b3ee438 <col:27> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b3ee380 <col:27> 'felem':'limb [4]' lvalue Var 0x1653b3fb3b0 'ftmp5' 'felem':'limb [4]'
|   |-CallExpr 0x1653b3fc570 <line:1023:5, col:29> 'void'
|   | |-ImplicitCastExpr 0x1653b3ee4c8 <col:5> 'void (*)(widelimb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3ee468 <col:5> 'void (widelimb *, const limb *)' Function 0x1653b304030 'felem_square' 'void (widelimb *, const limb *)'
|   | |-ImplicitCastExpr 0x1653b3fc5a0 <col:18> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3ee488 <col:18> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3fb668 'tmp2' 'widefelem':'widelimb [7]'
|   | `-ImplicitCastExpr 0x1653b3fc5d0 <col:24> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b3fc5b8 <col:24> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b3ee4a8 <col:24> 'felem':'limb [4]' lvalue Var 0x1653b3fb2c0 'ftmp3' 'felem':'limb [4]'
|   |-CallExpr 0x1653b3fc660 <line:1027:5, col:34> 'void'
|   | |-ImplicitCastExpr 0x1653b3fc648 <col:5> 'void (*)(widelimb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3fc5e8 <col:5> 'void (widelimb *, const limb *)' Function 0x1653b301ba8 'felem_diff_128_64' 'void (widelimb *, const limb *)'
|   | |-ImplicitCastExpr 0x1653b3fc690 <col:23> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3fc608 <col:23> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3fb668 'tmp2' 'widefelem':'widelimb [7]'
|   | `-ImplicitCastExpr 0x1653b3fc6c0 <col:29> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b3fc6a8 <col:29> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b3fc628 <col:29> 'felem':'limb [4]' lvalue Var 0x1653b3fb3b0 'ftmp5' 'felem':'limb [4]'
|   |-CallExpr 0x1653b3fc750 <line:1031:5, col:30> 'void'
|   | |-ImplicitCastExpr 0x1653b3fc738 <col:5> 'void (*)(limb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3fc6d8 <col:5> 'void (limb *, const limb *)' Function 0x1653b2fc8d8 'felem_assign' 'void (limb *, const limb *)'
|   | |-ImplicitCastExpr 0x1653b3fc780 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3fc6f8 <col:18> 'felem':'limb [4]' lvalue Var 0x1653b3fb3b0 'ftmp5' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x1653b3fc7b0 <col:25> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b3fc798 <col:25> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b3fc718 <col:25> 'felem':'limb [4]' lvalue Var 0x1653b3fb248 'ftmp2' 'felem':'limb [4]'
|   |-CallExpr 0x1653b3fc848 <line:1032:5, col:26> 'void'
|   | |-ImplicitCastExpr 0x1653b3fc830 <col:5> 'void (*)(limb *, const limb)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3fc7c8 <col:5> 'void (limb *, const limb)' Function 0x1653b303118 'felem_scalar' 'void (limb *, const limb)'
|   | |-ImplicitCastExpr 0x1653b3fc878 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3fc7e8 <col:18> 'felem':'limb [4]' lvalue Var 0x1653b3fb3b0 'ftmp5' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x1653b3fc890 <col:25> 'limb':'unsigned long long' <IntegralCast>
|   |   `-IntegerLiteral 0x1653b3fc808 <col:25> 'int' 2
|   |-CallExpr 0x1653b3fc920 <line:1039:5, col:34> 'void'
|   | |-ImplicitCastExpr 0x1653b3fc908 <col:5> 'void (*)(widelimb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3fc8a8 <col:5> 'void (widelimb *, const limb *)' Function 0x1653b301ba8 'felem_diff_128_64' 'void (widelimb *, const limb *)'
|   | |-ImplicitCastExpr 0x1653b3fc950 <col:23> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3fc8c8 <col:23> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3fb668 'tmp2' 'widefelem':'widelimb [7]'
|   | `-ImplicitCastExpr 0x1653b3fc980 <col:29> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b3fc968 <col:29> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b3fc8e8 <col:29> 'felem':'limb [4]' lvalue Var 0x1653b3fb3b0 'ftmp5' 'felem':'limb [4]'
|   |-CallExpr 0x1653b3fca28 <line:1041:5, col:29> 'void'
|   | |-ImplicitCastExpr 0x1653b3fca10 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3fc998 <col:5> 'void (limb *, const widelimb *)' Function 0x1653b3f5a28 'felem_reduce' 'void (limb *, const widelimb *)'
|   | |-ImplicitCastExpr 0x1653b3fca58 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3fc9b8 <col:18> 'felem':'limb [4]' lvalue Var 0x1653b3fb428 'x_out' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x1653b3fca88 <col:25> 'const widelimb *':'const widelimb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b3fca70 <col:25> 'widelimb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b3fc9f0 <col:25> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3fb668 'tmp2' 'widefelem':'widelimb [7]'
|   |-CallExpr 0x1653b3fcb18 <line:1044:5, col:28> 'void'
|   | |-ImplicitCastExpr 0x1653b3fcb00 <col:5> 'void (*)(limb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3fcaa0 <col:5> 'void (limb *, const limb *)' Function 0x1653b2fe9d8 'felem_diff' 'void (limb *, const limb *)'
|   | |-ImplicitCastExpr 0x1653b3fcb48 <col:16> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3fcac0 <col:16> 'felem':'limb [4]' lvalue Var 0x1653b3fb248 'ftmp2' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x1653b3fcb78 <col:23> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b3fcb60 <col:23> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b3fcae0 <col:23> 'felem':'limb [4]' lvalue Var 0x1653b3fb428 'x_out' 'felem':'limb [4]'
|   |-CallExpr 0x1653b3fcc28 <line:1050:5, col:33> 'void'
|   | |-ImplicitCastExpr 0x1653b3fcc10 <col:5> 'void (*)(widelimb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3fcb90 <col:5> 'void (widelimb *, const limb *, const limb *)' Function 0x1653b3e5488 'felem_mul' 'void (widelimb *, const limb *, const limb *)'
|   | |-ImplicitCastExpr 0x1653b3fcc60 <col:15> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3fcbb0 <col:15> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3fb668 'tmp2' 'widefelem':'widelimb [7]'
|   | |-ImplicitCastExpr 0x1653b3fcc90 <col:21> 'const limb *':'const limb *' <NoOp>
|   | | `-ImplicitCastExpr 0x1653b3fcc78 <col:21> 'limb *' <ArrayToPointerDecay>
|   | |   `-DeclRefExpr 0x1653b3fcbd0 <col:21> 'felem':'limb [4]' lvalue Var 0x1653b3fb2c0 'ftmp3' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x1653b3fccc0 <col:28> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b3fcca8 <col:28> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b3fcbf0 <col:28> 'felem':'limb [4]' lvalue Var 0x1653b3fb248 'ftmp2' 'felem':'limb [4]'
|   |-CallExpr 0x1653b3fcd50 <line:1057:5, col:29> 'void'
|   | |-ImplicitCastExpr 0x1653b3fcd38 <col:5> 'void (*)(widelimb *, const widelimb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3fccd8 <col:5> 'void (widelimb *, const widelimb *)' Function 0x1653b300098 'widefelem_diff' 'void (widelimb *, const widelimb *)'
|   | |-ImplicitCastExpr 0x1653b3fcd80 <col:20> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3fccf8 <col:20> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3fb668 'tmp2' 'widefelem':'widelimb [7]'
|   | `-ImplicitCastExpr 0x1653b3fcdb0 <col:26> 'const widelimb *':'const widelimb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b3fcd98 <col:26> 'widelimb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b3fcd18 <col:26> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3fb5f0 'tmp' 'widefelem':'widelimb [7]'
|   |-CallExpr 0x1653b3fce58 <line:1059:5, col:29> 'void'
|   | |-ImplicitCastExpr 0x1653b3fce40 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3fcdc8 <col:5> 'void (limb *, const widelimb *)' Function 0x1653b3f5a28 'felem_reduce' 'void (limb *, const widelimb *)'
|   | |-ImplicitCastExpr 0x1653b3fce88 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3fcde8 <col:18> 'felem':'limb [4]' lvalue Var 0x1653b3fb4a0 'y_out' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x1653b3fceb8 <col:25> 'const widelimb *':'const widelimb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b3fcea0 <col:25> 'widelimb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b3fce20 <col:25> 'widefelem':'widelimb [7]' lvalue Var 0x1653b3fb668 'tmp2' 'widefelem':'widelimb [7]'
|   |-CallExpr 0x1653b3fcfc0 <line:1069:5, col:43> 'void'
|   | |-ImplicitCastExpr 0x1653b3fcfa8 <col:5> 'void (*)(limb *, const limb *, limb)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3fced0 <col:5> 'void (limb *, const limb *, limb)' Function 0x1653b3f36b8 'copy_conditional' 'void (limb *, const limb *, limb)'
|   | |-ImplicitCastExpr 0x1653b3fcff8 <col:22> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3fcef0 <col:22> 'felem':'limb [4]' lvalue Var 0x1653b3fb428 'x_out' 'felem':'limb [4]'
|   | |-ImplicitCastExpr 0x1653b3fd010 <col:29> 'const limb *':'const limb *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1653b3fcf10 <col:29> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3fad00 'x2' 'const limb *':'const limb *'
|   | `-ImplicitCastExpr 0x1653b3fd028 <col:33> 'limb':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0x1653b3fcf30 <col:33> 'limb':'unsigned long long' lvalue Var 0x1653b3fb710 'z1_is_zero' 'limb':'unsigned long long'
|   |-CallExpr 0x1653b3fd0d8 <line:1070:5, col:43> 'void'
|   | |-ImplicitCastExpr 0x1653b3fd0c0 <col:5> 'void (*)(limb *, const limb *, limb)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3fd040 <col:5> 'void (limb *, const limb *, limb)' Function 0x1653b3f36b8 'copy_conditional' 'void (limb *, const limb *, limb)'
|   | |-ImplicitCastExpr 0x1653b3fd110 <col:22> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3fd060 <col:22> 'felem':'limb [4]' lvalue Var 0x1653b3fb428 'x_out' 'felem':'limb [4]'
|   | |-ImplicitCastExpr 0x1653b3fd128 <col:29> 'const limb *':'const limb *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1653b3fd080 <col:29> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3fab18 'x1' 'const limb *':'const limb *'
|   | `-ImplicitCastExpr 0x1653b3fd140 <col:33> 'limb':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0x1653b3fd0a0 <col:33> 'limb':'unsigned long long' lvalue Var 0x1653b3fb788 'z2_is_zero' 'limb':'unsigned long long'
|   |-CallExpr 0x1653b3fd1f0 <line:1071:5, col:43> 'void'
|   | |-ImplicitCastExpr 0x1653b3fd1d8 <col:5> 'void (*)(limb *, const limb *, limb)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3fd158 <col:5> 'void (limb *, const limb *, limb)' Function 0x1653b3f36b8 'copy_conditional' 'void (limb *, const limb *, limb)'
|   | |-ImplicitCastExpr 0x1653b3fd228 <col:22> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3fd178 <col:22> 'felem':'limb [4]' lvalue Var 0x1653b3fb4a0 'y_out' 'felem':'limb [4]'
|   | |-ImplicitCastExpr 0x1653b3fd240 <col:29> 'const limb *':'const limb *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1653b3fd198 <col:29> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3fad78 'y2' 'const limb *':'const limb *'
|   | `-ImplicitCastExpr 0x1653b3fd258 <col:33> 'limb':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0x1653b3fd1b8 <col:33> 'limb':'unsigned long long' lvalue Var 0x1653b3fb710 'z1_is_zero' 'limb':'unsigned long long'
|   |-CallExpr 0x1653b3fd308 <line:1072:5, col:43> 'void'
|   | |-ImplicitCastExpr 0x1653b3fd2f0 <col:5> 'void (*)(limb *, const limb *, limb)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3fd270 <col:5> 'void (limb *, const limb *, limb)' Function 0x1653b3f36b8 'copy_conditional' 'void (limb *, const limb *, limb)'
|   | |-ImplicitCastExpr 0x1653b3fd340 <col:22> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3fd290 <col:22> 'felem':'limb [4]' lvalue Var 0x1653b3fb4a0 'y_out' 'felem':'limb [4]'
|   | |-ImplicitCastExpr 0x1653b3fd358 <col:29> 'const limb *':'const limb *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1653b3fd2b0 <col:29> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3fab90 'y1' 'const limb *':'const limb *'
|   | `-ImplicitCastExpr 0x1653b3fd370 <col:33> 'limb':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0x1653b3fd2d0 <col:33> 'limb':'unsigned long long' lvalue Var 0x1653b3fb788 'z2_is_zero' 'limb':'unsigned long long'
|   |-CallExpr 0x1653b3fd420 <line:1073:5, col:43> 'void'
|   | |-ImplicitCastExpr 0x1653b3fd408 <col:5> 'void (*)(limb *, const limb *, limb)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3fd388 <col:5> 'void (limb *, const limb *, limb)' Function 0x1653b3f36b8 'copy_conditional' 'void (limb *, const limb *, limb)'
|   | |-ImplicitCastExpr 0x1653b3fd458 <col:22> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3fd3a8 <col:22> 'felem':'limb [4]' lvalue Var 0x1653b3fb518 'z_out' 'felem':'limb [4]'
|   | |-ImplicitCastExpr 0x1653b3fd470 <col:29> 'const limb *':'const limb *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1653b3fd3c8 <col:29> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3fadf0 'z2' 'const limb *':'const limb *'
|   | `-ImplicitCastExpr 0x1653b3fd488 <col:33> 'limb':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0x1653b3fd3e8 <col:33> 'limb':'unsigned long long' lvalue Var 0x1653b3fb710 'z1_is_zero' 'limb':'unsigned long long'
|   |-CallExpr 0x1653b3fd538 <line:1074:5, col:43> 'void'
|   | |-ImplicitCastExpr 0x1653b3fd520 <col:5> 'void (*)(limb *, const limb *, limb)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3fd4a0 <col:5> 'void (limb *, const limb *, limb)' Function 0x1653b3f36b8 'copy_conditional' 'void (limb *, const limb *, limb)'
|   | |-ImplicitCastExpr 0x1653b3fd570 <col:22> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3fd4c0 <col:22> 'felem':'limb [4]' lvalue Var 0x1653b3fb518 'z_out' 'felem':'limb [4]'
|   | |-ImplicitCastExpr 0x1653b3fd588 <col:29> 'const limb *':'const limb *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1653b3fd4e0 <col:29> 'const limb *':'const limb *' lvalue ParmVar 0x1653b3fac08 'z1' 'const limb *':'const limb *'
|   | `-ImplicitCastExpr 0x1653b3fd5a0 <col:33> 'limb':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0x1653b3fd500 <col:33> 'limb':'unsigned long long' lvalue Var 0x1653b3fb788 'z2_is_zero' 'limb':'unsigned long long'
|   |-CallExpr 0x1653b3fd630 <line:1075:5, col:27> 'void'
|   | |-ImplicitCastExpr 0x1653b3fd618 <col:5> 'void (*)(limb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3fd5b8 <col:5> 'void (limb *, const limb *)' Function 0x1653b2fc8d8 'felem_assign' 'void (limb *, const limb *)'
|   | |-ImplicitCastExpr 0x1653b3fd660 <col:18> 'limb *':'limb *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1653b3fd5d8 <col:18> 'limb *':'limb *' lvalue ParmVar 0x1653b3fa9b0 'x3' 'limb *':'limb *'
|   | `-ImplicitCastExpr 0x1653b3fd690 <col:22> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b3fd678 <col:22> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b3fd5f8 <col:22> 'felem':'limb [4]' lvalue Var 0x1653b3fb428 'x_out' 'felem':'limb [4]'
|   |-CallExpr 0x1653b3fd720 <line:1076:5, col:27> 'void'
|   | |-ImplicitCastExpr 0x1653b3fd708 <col:5> 'void (*)(limb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3fd6a8 <col:5> 'void (limb *, const limb *)' Function 0x1653b2fc8d8 'felem_assign' 'void (limb *, const limb *)'
|   | |-ImplicitCastExpr 0x1653b3fd750 <col:18> 'limb *':'limb *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1653b3fd6c8 <col:18> 'limb *':'limb *' lvalue ParmVar 0x1653b3faa28 'y3' 'limb *':'limb *'
|   | `-ImplicitCastExpr 0x1653b3fd780 <col:22> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b3fd768 <col:22> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b3fd6e8 <col:22> 'felem':'limb [4]' lvalue Var 0x1653b3fb4a0 'y_out' 'felem':'limb [4]'
|   `-CallExpr 0x1653b3fd810 <line:1077:5, col:27> 'void'
|     |-ImplicitCastExpr 0x1653b3fd7f8 <col:5> 'void (*)(limb *, const limb *)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x1653b3fd798 <col:5> 'void (limb *, const limb *)' Function 0x1653b2fc8d8 'felem_assign' 'void (limb *, const limb *)'
|     |-ImplicitCastExpr 0x1653b3fd840 <col:18> 'limb *':'limb *' <LValueToRValue>
|     | `-DeclRefExpr 0x1653b3fd7b8 <col:18> 'limb *':'limb *' lvalue ParmVar 0x1653b3faaa0 'z3' 'limb *':'limb *'
|     `-ImplicitCastExpr 0x1653b3fd870 <col:22> 'const limb *':'const limb *' <NoOp>
|       `-ImplicitCastExpr 0x1653b3fd858 <col:22> 'limb *' <ArrayToPointerDecay>
|         `-DeclRefExpr 0x1653b3fd7d8 <col:22> 'felem':'limb [4]' lvalue Var 0x1653b3fb518 'z_out' 'felem':'limb [4]'
|-FunctionDecl 0x1653b3fdfa8 <line:1085:1, line:1103:1> line:1085:13 used select_point 'void (const u64, unsigned int, const felem (*)[3], felem *)' static
| |-ParmVarDecl 0x1653b3fda50 <col:26, col:36> col:36 used idx 'const u64':'const unsigned long long'
| |-ParmVarDecl 0x1653b3fdad0 <col:41, col:54> col:54 used size 'unsigned int'
| |-ParmVarDecl 0x1653b3fdca0 <line:1086:26, col:50> col:38 used pre_comp 'const felem (*)[3]':'const felem (*)[3]'
| |-ParmVarDecl 0x1653b3fde00 <col:53, col:64> col:59 used out 'felem *':'felem *'
| `-CompoundStmt 0x1653b3ff1e8 <line:1087:1, line:1103:1>
|   |-DeclStmt 0x1653b3fe198 <line:1088:5, col:18>
|   | |-VarDecl 0x1653b3fe098 <col:5, col:14> col:14 used i 'unsigned int'
|   | `-VarDecl 0x1653b3fe118 <col:5, col:17> col:17 used j 'unsigned int'
|   |-DeclStmt 0x1653b3fe320 <line:1089:5, col:32>
|   | `-VarDecl 0x1653b3fe1c0 <col:5, col:31> col:11 used outlimbs 'limb *' cinit
|   |   `-UnaryOperator 0x1653b3fe308 <col:22, col:31> 'limb *' prefix '&' cannot overflow
|   |     `-ArraySubscriptExpr 0x1653b3fe2e8 <col:23, col:31> 'limb':'unsigned long long' lvalue
|   |       |-ImplicitCastExpr 0x1653b3fe2d0 <col:23, col:28> 'limb *' <ArrayToPointerDecay>
|   |       | `-ArraySubscriptExpr 0x1653b3fe288 <col:23, col:28> 'felem':'limb [4]' lvalue
|   |       |   |-ImplicitCastExpr 0x1653b3fe270 <col:23> 'felem *':'felem *' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x1653b3fe228 <col:23> 'felem *':'felem *' lvalue ParmVar 0x1653b3fde00 'out' 'felem *':'felem *'
|   |       |   `-IntegerLiteral 0x1653b3fe248 <col:27> 'int' 0
|   |       `-IntegerLiteral 0x1653b3fe2a8 <col:30> 'int' 0
|   |-CallExpr 0x1653b3fe4c0 <line:1091:5, col:36> 'void *'
|   | |-ImplicitCastExpr 0x1653b3fe4a8 <col:5> 'void *(*)(void *, int, unsigned long long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b3fe338 <col:5> 'void *(void *, int, unsigned long long)' Function 0x1653b2ba1f0 'memset' 'void *(void *, int, unsigned long long)'
|   | |-ImplicitCastExpr 0x1653b3fe510 <col:12> 'void *' <BitCast>
|   | | `-ImplicitCastExpr 0x1653b3fe4f8 <col:12> 'felem *':'felem *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1653b3fe358 <col:12> 'felem *':'felem *' lvalue ParmVar 0x1653b3fde00 'out' 'felem *':'felem *'
|   | |-IntegerLiteral 0x1653b3fe378 <col:17> 'int' 0
|   | `-BinaryOperator 0x1653b3fe470 <col:20, col:35> 'unsigned long long' '*'
|   |   |-UnaryExprOrTypeTraitExpr 0x1653b3fe410 <col:20, col:31> 'unsigned long long' sizeof
|   |   | `-ParenExpr 0x1653b3fe3f0 <col:26, col:31> 'felem':'limb [4]' lvalue
|   |   |   `-UnaryOperator 0x1653b3fe3d8 <col:27, col:28> 'felem':'limb [4]' lvalue prefix '*' cannot overflow
|   |   |     `-ImplicitCastExpr 0x1653b3fe3c0 <col:28> 'felem *':'felem *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x1653b3fe3a0 <col:28> 'felem *':'felem *' lvalue ParmVar 0x1653b3fde00 'out' 'felem *':'felem *' non_odr_use_unevaluated
|   |   `-ImplicitCastExpr 0x1653b3fe458 <col:35> 'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x1653b3fe430 <col:35> 'int' 3
|   `-ForStmt 0x1653b3ff1b0 <line:1092:5, line:1102:5>
|     |-BinaryOperator 0x1653b3fe5c0 <line:1092:10, col:14> 'unsigned int' '='
|     | |-DeclRefExpr 0x1653b3fe528 <col:10> 'unsigned int' lvalue Var 0x1653b3fe098 'i' 'unsigned int'
|     | `-ImplicitCastExpr 0x1653b3fe5a8 <col:14> 'unsigned int' <IntegralCast>
|     |   `-IntegerLiteral 0x1653b3fe580 <col:14> 'int' 0
|     |-<<<NULL>>>
|     |-BinaryOperator 0x1653b3fe650 <col:17, col:21> 'int' '<'
|     | |-ImplicitCastExpr 0x1653b3fe620 <col:17> 'unsigned int' <LValueToRValue>
|     | | `-DeclRefExpr 0x1653b3fe5e0 <col:17> 'unsigned int' lvalue Var 0x1653b3fe098 'i' 'unsigned int'
|     | `-ImplicitCastExpr 0x1653b3fe638 <col:21> 'unsigned int' <LValueToRValue>
|     |   `-DeclRefExpr 0x1653b3fe600 <col:21> 'unsigned int' lvalue ParmVar 0x1653b3fdad0 'size' 'unsigned int'
|     |-UnaryOperator 0x1653b3fe690 <col:27, col:28> 'unsigned int' postfix '++'
|     | `-DeclRefExpr 0x1653b3fe670 <col:27> 'unsigned int' lvalue Var 0x1653b3fe098 'i' 'unsigned int'
|     `-CompoundStmt 0x1653b3ff160 <col:32, line:1102:5>
|       |-DeclStmt 0x1653b3fe8e8 <line:1093:9, col:49>
|       | `-VarDecl 0x1653b3fe6b8 <col:9, col:48> col:21 used inlimbs 'const limb *' cinit
|       |   `-UnaryOperator 0x1653b3fe8d0 <col:31, col:48> 'const limb *' prefix '&' cannot overflow
|       |     `-ArraySubscriptExpr 0x1653b3fe8b0 <col:32, col:48> 'const limb':'const unsigned long long' lvalue
|       |       |-ImplicitCastExpr 0x1653b3fe898 <col:32, col:45> 'const limb *' <ArrayToPointerDecay>
|       |       | `-ArraySubscriptExpr 0x1653b3fe850 <col:32, col:45> 'const felem':'limb const[4]' lvalue
|       |       |   |-ImplicitCastExpr 0x1653b3fe838 <col:32, col:42> 'const felem *' <ArrayToPointerDecay>
|       |       |   | `-ArraySubscriptExpr 0x1653b3fe790 <col:32, col:42> 'const felem [3]' lvalue
|       |       |   |   |-ImplicitCastExpr 0x1653b3fe760 <col:32> 'const felem (*)[3]':'const felem (*)[3]' <LValueToRValue>
|       |       |   |   | `-DeclRefExpr 0x1653b3fe720 <col:32> 'const felem (*)[3]':'const felem (*)[3]' lvalue ParmVar 0x1653b3fdca0 'pre_comp' 'const felem (*)[3]':'const felem (*)[3]'
|       |       |   |   `-ImplicitCastExpr 0x1653b3fe778 <col:41> 'unsigned int' <LValueToRValue>
|       |       |   |     `-DeclRefExpr 0x1653b3fe740 <col:41> 'unsigned int' lvalue Var 0x1653b3fe098 'i' 'unsigned int'
|       |       |   `-IntegerLiteral 0x1653b3fe7b0 <col:44> 'int' 0
|       |       `-IntegerLiteral 0x1653b3fe870 <col:47> 'int' 0
|       |-DeclStmt 0x1653b3fea20 <line:1094:9, col:27>
|       | `-VarDecl 0x1653b3fe910 <col:9, col:24> col:13 used mask 'u64':'unsigned long long' cinit
|       |   `-BinaryOperator 0x1653b3fea00 <col:20, col:24> 'unsigned long long' '^'
|       |     |-ImplicitCastExpr 0x1653b3fe9e8 <col:20> 'unsigned long long' <IntegralCast>
|       |     | `-ImplicitCastExpr 0x1653b3fe9b8 <col:20> 'unsigned int' <LValueToRValue>
|       |     |   `-DeclRefExpr 0x1653b3fe978 <col:20> 'unsigned int' lvalue Var 0x1653b3fe098 'i' 'unsigned int'
|       |     `-ImplicitCastExpr 0x1653b3fe9d0 <col:24> 'u64':'unsigned long long' <LValueToRValue>
|       |       `-DeclRefExpr 0x1653b3fe998 <col:24> 'const u64':'const unsigned long long' lvalue ParmVar 0x1653b3fda50 'idx' 'const u64':'const unsigned long long'
|       |-CompoundAssignOperator 0x1653b3feaf0 <line:1095:9, col:25> 'u64':'unsigned long long' '|=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|       | |-DeclRefExpr 0x1653b3fea38 <col:9> 'u64':'unsigned long long' lvalue Var 0x1653b3fe910 'mask' 'u64':'unsigned long long'
|       | `-BinaryOperator 0x1653b3fead0 <col:17, col:25> 'u64':'unsigned long long' '>>'
|       |   |-ImplicitCastExpr 0x1653b3feab8 <col:17> 'u64':'unsigned long long' <LValueToRValue>
|       |   | `-DeclRefExpr 0x1653b3fea70 <col:17> 'u64':'unsigned long long' lvalue Var 0x1653b3fe910 'mask' 'u64':'unsigned long long'
|       |   `-IntegerLiteral 0x1653b3fea90 <col:25> 'int' 4
|       |-CompoundAssignOperator 0x1653b3febc0 <line:1096:9, col:25> 'u64':'unsigned long long' '|=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|       | |-DeclRefExpr 0x1653b3feb20 <col:9> 'u64':'unsigned long long' lvalue Var 0x1653b3fe910 'mask' 'u64':'unsigned long long'
|       | `-BinaryOperator 0x1653b3feba0 <col:17, col:25> 'u64':'unsigned long long' '>>'
|       |   |-ImplicitCastExpr 0x1653b3feb88 <col:17> 'u64':'unsigned long long' <LValueToRValue>
|       |   | `-DeclRefExpr 0x1653b3feb40 <col:17> 'u64':'unsigned long long' lvalue Var 0x1653b3fe910 'mask' 'u64':'unsigned long long'
|       |   `-IntegerLiteral 0x1653b3feb60 <col:25> 'int' 2
|       |-CompoundAssignOperator 0x1653b3fec90 <line:1097:9, col:25> 'u64':'unsigned long long' '|=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|       | |-DeclRefExpr 0x1653b3febf0 <col:9> 'u64':'unsigned long long' lvalue Var 0x1653b3fe910 'mask' 'u64':'unsigned long long'
|       | `-BinaryOperator 0x1653b3fec70 <col:17, col:25> 'u64':'unsigned long long' '>>'
|       |   |-ImplicitCastExpr 0x1653b3fec58 <col:17> 'u64':'unsigned long long' <LValueToRValue>
|       |   | `-DeclRefExpr 0x1653b3fec10 <col:17> 'u64':'unsigned long long' lvalue Var 0x1653b3fe910 'mask' 'u64':'unsigned long long'
|       |   `-IntegerLiteral 0x1653b3fec30 <col:25> 'int' 1
|       |-CompoundAssignOperator 0x1653b3fed20 <line:1098:9, col:17> 'u64':'unsigned long long' '&=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|       | |-DeclRefExpr 0x1653b3fecc0 <col:9> 'u64':'unsigned long long' lvalue Var 0x1653b3fe910 'mask' 'u64':'unsigned long long'
|       | `-ImplicitCastExpr 0x1653b3fed08 <col:17> 'unsigned long long' <IntegralCast>
|       |   `-IntegerLiteral 0x1653b3fece0 <col:17> 'int' 1
|       |-UnaryOperator 0x1653b3fed70 <line:1099:9, col:13> 'u64':'unsigned long long' postfix '--'
|       | `-DeclRefExpr 0x1653b3fed50 <col:9> 'u64':'unsigned long long' lvalue Var 0x1653b3fe910 'mask' 'u64':'unsigned long long'
|       `-ForStmt 0x1653b3ff128 <line:1100:9, line:1101:41>
|         |-BinaryOperator 0x1653b3fee00 <line:1100:14, col:18> 'unsigned int' '='
|         | |-DeclRefExpr 0x1653b3fed88 <col:14> 'unsigned int' lvalue Var 0x1653b3fe118 'j' 'unsigned int'
|         | `-ImplicitCastExpr 0x1653b3fede8 <col:18> 'unsigned int' <IntegralCast>
|         |   `-IntegerLiteral 0x1653b3fedc0 <col:18> 'int' 0
|         |-<<<NULL>>>
|         |-BinaryOperator 0x1653b3feee0 <col:21, col:29> 'int' '<'
|         | |-ImplicitCastExpr 0x1653b3feeb0 <col:21> 'unsigned int' <LValueToRValue>
|         | | `-DeclRefExpr 0x1653b3fee20 <col:21> 'unsigned int' lvalue Var 0x1653b3fe118 'j' 'unsigned int'
|         | `-ImplicitCastExpr 0x1653b3feec8 <col:25, col:29> 'unsigned int' <IntegralCast>
|         |   `-BinaryOperator 0x1653b3fee90 <col:25, col:29> 'int' '*'
|         |     |-IntegerLiteral 0x1653b3fee40 <col:25> 'int' 4
|         |     `-IntegerLiteral 0x1653b3fee68 <col:29> 'int' 3
|         |-UnaryOperator 0x1653b3fef20 <col:32, col:33> 'unsigned int' postfix '++'
|         | `-DeclRefExpr 0x1653b3fef00 <col:32> 'unsigned int' lvalue Var 0x1653b3fe118 'j' 'unsigned int'
|         `-CompoundAssignOperator 0x1653b3ff0f8 <line:1101:13, col:41> 'limb':'unsigned long long' '|=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|           |-ArraySubscriptExpr 0x1653b3fefc0 <col:13, col:23> 'limb':'unsigned long long' lvalue
|           | |-ImplicitCastExpr 0x1653b3fef90 <col:13> 'limb *' <LValueToRValue>
|           | | `-DeclRefExpr 0x1653b3fef38 <col:13> 'limb *' lvalue Var 0x1653b3fe1c0 'outlimbs' 'limb *'
|           | `-ImplicitCastExpr 0x1653b3fefa8 <col:22> 'unsigned int' <LValueToRValue>
|           |   `-DeclRefExpr 0x1653b3fef70 <col:22> 'unsigned int' lvalue Var 0x1653b3fe118 'j' 'unsigned int'
|           `-BinaryOperator 0x1653b3ff0d8 <col:28, col:41> 'unsigned long long' '&'
|             |-ImplicitCastExpr 0x1653b3ff0a8 <col:28, col:37> 'limb':'unsigned long long' <LValueToRValue>
|             | `-ArraySubscriptExpr 0x1653b3ff068 <col:28, col:37> 'const limb':'const unsigned long long' lvalue
|             |   |-ImplicitCastExpr 0x1653b3ff038 <col:28> 'const limb *' <LValueToRValue>
|             |   | `-DeclRefExpr 0x1653b3fefe0 <col:28> 'const limb *' lvalue Var 0x1653b3fe6b8 'inlimbs' 'const limb *'
|             |   `-ImplicitCastExpr 0x1653b3ff050 <col:36> 'unsigned int' <LValueToRValue>
|             |     `-DeclRefExpr 0x1653b3ff018 <col:36> 'unsigned int' lvalue Var 0x1653b3fe118 'j' 'unsigned int'
|             `-ImplicitCastExpr 0x1653b3ff0c0 <col:41> 'u64':'unsigned long long' <LValueToRValue>
|               `-DeclRefExpr 0x1653b3ff088 <col:41> 'u64':'unsigned long long' lvalue Var 0x1653b3fe910 'mask' 'u64':'unsigned long long'
|-FunctionDecl 0x1653b3ff428 <line:1106:1, line:1111:1> line:1106:13 used get_bit 'char (const u8 *, unsigned int)' static
| |-ParmVarDecl 0x1653b3ff260 <col:21, col:43> col:43 used in 'const u8 *':'const u8 *'
| |-ParmVarDecl 0x1653b3ff2e0 <col:47, col:56> col:56 used i 'unsigned int'
| `-CompoundStmt 0x1653b3ff860 <line:1107:1, line:1111:1>
|   |-IfStmt 0x1653b3ff5d8 <line:1108:5, line:1109:16>
|   | |-BinaryOperator 0x1653b3ff568 <line:1108:9, col:14> 'int' '>='
|   | | |-ImplicitCastExpr 0x1653b3ff538 <col:9> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b3ff4f0 <col:9> 'unsigned int' lvalue ParmVar 0x1653b3ff2e0 'i' 'unsigned int'
|   | | `-ImplicitCastExpr 0x1653b3ff550 <col:14> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x1653b3ff510 <col:14> 'int' 224
|   | `-ReturnStmt 0x1653b3ff5c8 <line:1109:9, col:16>
|   |   `-ImplicitCastExpr 0x1653b3ff5b0 <col:16> 'char' <IntegralCast>
|   |     `-IntegerLiteral 0x1653b3ff588 <col:16> 'int' 0
|   `-ReturnStmt 0x1653b3ff850 <line:1110:5, col:38>
|     `-ImplicitCastExpr 0x1653b3ff838 <col:12, col:38> 'char' <IntegralCast>
|       `-BinaryOperator 0x1653b3ff818 <col:12, col:38> 'int' '&'
|         |-ParenExpr 0x1653b3ff7d0 <col:12, col:34> 'int'
|         | `-BinaryOperator 0x1653b3ff7b0 <col:13, col:33> 'int' '>>'
|         |   |-ImplicitCastExpr 0x1653b3ff798 <col:13, col:22> 'int' <IntegralCast>
|         |   | `-ImplicitCastExpr 0x1653b3ff780 <col:13, col:22> 'u8':'unsigned char' <LValueToRValue>
|         |   |   `-ArraySubscriptExpr 0x1653b3ff6a8 <col:13, col:22> 'const u8':'const unsigned char' lvalue
|         |   |     |-ImplicitCastExpr 0x1653b3ff690 <col:13> 'const u8 *':'const u8 *' <LValueToRValue>
|         |   |     | `-DeclRefExpr 0x1653b3ff5f0 <col:13> 'const u8 *':'const u8 *' lvalue ParmVar 0x1653b3ff260 'in' 'const u8 *':'const u8 *'
|         |   |     `-BinaryOperator 0x1653b3ff670 <col:16, col:21> 'unsigned int' '>>'
|         |   |       |-ImplicitCastExpr 0x1653b3ff658 <col:16> 'unsigned int' <LValueToRValue>
|         |   |       | `-DeclRefExpr 0x1653b3ff610 <col:16> 'unsigned int' lvalue ParmVar 0x1653b3ff2e0 'i' 'unsigned int'
|         |   |       `-IntegerLiteral 0x1653b3ff630 <col:21> 'int' 3
|         |   `-ParenExpr 0x1653b3ff760 <col:27, col:33> 'unsigned int'
|         |     `-BinaryOperator 0x1653b3ff740 <col:28, col:32> 'unsigned int' '&'
|         |       |-ImplicitCastExpr 0x1653b3ff710 <col:28> 'unsigned int' <LValueToRValue>
|         |       | `-DeclRefExpr 0x1653b3ff6c8 <col:28> 'unsigned int' lvalue ParmVar 0x1653b3ff2e0 'i' 'unsigned int'
|         |       `-ImplicitCastExpr 0x1653b3ff728 <col:32> 'unsigned int' <IntegralCast>
|         |         `-IntegerLiteral 0x1653b3ff6e8 <col:32> 'int' 7
|         `-IntegerLiteral 0x1653b3ff7f0 <col:38> 'int' 1
|-FunctionDecl 0x1653b400398 <line:1120:1, line:1211:1> line:1120:13 used batch_mul 'void (limb *, limb *, limb *, const felem_bytearray *, const unsigned int, const u8 *, const int, const felem (*)[17][3], const felem (*)[16][3])' static
| |-ParmVarDecl 0x1653b3ff890 <col:23, col:29> col:29 used x_out 'limb *':'limb *'
| |-ParmVarDecl 0x1653b3ff908 <col:36, col:42> col:42 used y_out 'limb *':'limb *'
| |-ParmVarDecl 0x1653b3ff980 <col:49, col:55> col:55 used z_out 'limb *':'limb *'
| |-ParmVarDecl 0x1653b3ffb00 <line:1121:23, col:53> col:45 used scalars 'const felem_bytearray *':'const felem_bytearray *'
| |-ParmVarDecl 0x1653b3ffb80 <line:1122:23, col:38> col:38 used num_points 'const unsigned int'
| |-ParmVarDecl 0x1653b3ffbf8 <col:50, col:60> col:60 used g_scalar 'const u8 *'
| |-ParmVarDecl 0x1653b3ffc78 <line:1123:23, col:33> col:33 used mixed 'const int'
| |-ParmVarDecl 0x1653b3fff10 <col:40, col:68> col:52 used pre_comp 'const felem (*)[17][3]':'const felem (*)[17][3]'
| |-ParmVarDecl 0x1653b400110 <line:1124:23, col:54> col:35 used g_pre_comp 'const felem (*)[16][3]':'const felem (*)[16][3]'
| `-CompoundStmt 0x1653b512b48 <line:1125:1, line:1211:1>
|   |-DeclStmt 0x1653b400610 <line:1126:5, col:16>
|   | |-VarDecl 0x1653b4004b0 <col:5, col:9> col:9 used i 'int'
|   | `-VarDecl 0x1653b400590 <col:5, col:12> col:12 used skip 'int'
|   |-DeclStmt 0x1653b4006a8 <line:1127:5, col:17>
|   | `-VarDecl 0x1653b400640 <col:5, col:14> col:14 used num 'unsigned int'
|   |-DeclStmt 0x1653b400870 <line:1128:5, col:42>
|   | `-VarDecl 0x1653b4006d8 <col:5, col:41> col:14 used gen_mul 'unsigned int' cinit
|   |   `-ImplicitCastExpr 0x1653b400858 <col:24, col:41> 'unsigned int' <IntegralCast>
|   |     `-ParenExpr 0x1653b400838 <col:24, col:41> 'int'
|   |       `-BinaryOperator 0x1653b400818 <col:25, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   |         |-ImplicitCastExpr 0x1653b4007e8 <.//openssl//file_jk/before\crypto\ec\ecp_nistp224.c:1128:25> 'const u8 *' <LValueToRValue>
|   |         | `-DeclRefExpr 0x1653b400740 <col:25> 'const u8 *' lvalue ParmVar 0x1653b3ffbf8 'g_scalar' 'const u8 *'
|   |         `-ImplicitCastExpr 0x1653b400800 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const u8 *' <BitCast>
|   |           `-ParenExpr 0x1653b4007c8 <col:17, col:27> 'void *'
|   |             `-CStyleCastExpr 0x1653b4007a0 <col:18, col:26> 'void *' <NullToPointer>
|   |               `-IntegerLiteral 0x1653b400760 <col:26> 'int' 0
|   |-DeclStmt 0x1653b400aa8 <.//openssl//file_jk/before\crypto\ec\ecp_nistp224.c:1129:5, col:24>
|   | |-VarDecl 0x1653b4008e8 <col:5, col:15> col:11 used nq 'felem [3]'
|   | `-VarDecl 0x1653b400a28 <col:5, col:23> col:18 used tmp 'felem [4]'
|   |-DeclStmt 0x1653b400b38 <line:1130:5, col:13>
|   | `-VarDecl 0x1653b400ad0 <col:5, col:9> col:9 used bits 'u64':'unsigned long long'
|   |-DeclStmt 0x1653b400c58 <line:1131:5, col:19>
|   | |-VarDecl 0x1653b400b60 <col:5, col:8> col:8 used sign 'u8':'unsigned char'
|   | `-VarDecl 0x1653b400bd8 <col:5, col:14> col:14 used digit 'u8':'unsigned char'
|   |-CallExpr 0x1653b400d80 <line:1134:5, col:29> 'void *'
|   | |-ImplicitCastExpr 0x1653b400d68 <col:5> 'void *(*)(void *, int, unsigned long long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b400c70 <col:5> 'void *(void *, int, unsigned long long)' Function 0x1653b2ba1f0 'memset' 'void *(void *, int, unsigned long long)'
|   | |-ImplicitCastExpr 0x1653b400dd0 <col:12> 'void *' <BitCast>
|   | | `-ImplicitCastExpr 0x1653b400db8 <col:12> 'felem *' <ArrayToPointerDecay>
|   | |   `-DeclRefExpr 0x1653b400c90 <col:12> 'felem [3]' lvalue Var 0x1653b4008e8 'nq' 'felem [3]'
|   | |-IntegerLiteral 0x1653b400cc8 <col:16> 'int' 0
|   | `-UnaryExprOrTypeTraitExpr 0x1653b400d30 <col:19, col:28> 'unsigned long long' sizeof
|   |   `-ParenExpr 0x1653b400d10 <col:25, col:28> 'felem [3]' lvalue
|   |     `-DeclRefExpr 0x1653b400cf0 <col:26> 'felem [3]' lvalue Var 0x1653b4008e8 'nq' 'felem [3]' non_odr_use_unevaluated
|   |-BinaryOperator 0x1653b400e48 <line:1141:5, col:12> 'int' '='
|   | |-DeclRefExpr 0x1653b400de8 <col:5> 'int' lvalue Var 0x1653b400590 'skip' 'int'
|   | `-IntegerLiteral 0x1653b400e20 <col:12> 'int' 1
|   |-ForStmt 0x1653b5126f0 <line:1143:5, line:1207:5>
|   | |-BinaryOperator 0x1653b400f78 <line:1143:10, col:36> 'int' '='
|   | | |-DeclRefExpr 0x1653b400e68 <col:10> 'int' lvalue Var 0x1653b4004b0 'i' 'int'
|   | | `-ParenExpr 0x1653b400f58 <col:14, col:36> 'int'
|   | |   `-ConditionalOperator 0x1653b400f28 <col:15, col:34> 'int'
|   | |     |-ImplicitCastExpr 0x1653b400f10 <col:15> 'unsigned int' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x1653b400ea0 <col:15> 'const unsigned int' lvalue ParmVar 0x1653b3ffb80 'num_points' 'const unsigned int'
|   | |     |-IntegerLiteral 0x1653b400ec0 <col:28> 'int' 220
|   | |     `-IntegerLiteral 0x1653b400ee8 <col:34> 'int' 27
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1653b400ff8 <col:39, col:44> 'int' '>='
|   | | |-ImplicitCastExpr 0x1653b400fe0 <col:39> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b400f98 <col:39> 'int' lvalue Var 0x1653b4004b0 'i' 'int'
|   | | `-IntegerLiteral 0x1653b400fb8 <col:44> 'int' 0
|   | |-UnaryOperator 0x1653b401038 <col:47, col:49> 'int' prefix '--'
|   | | `-DeclRefExpr 0x1653b401018 <col:49> 'int' lvalue Var 0x1653b4004b0 'i' 'int'
|   | `-CompoundStmt 0x1653b5126c8 <col:52, line:1207:5>
|   |   |-IfStmt 0x1653b401500 <line:1145:9, line:1146:66>
|   |   | |-UnaryOperator 0x1653b401088 <line:1145:13, col:14> 'int' prefix '!' cannot overflow
|   |   | | `-ImplicitCastExpr 0x1653b401070 <col:14> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1653b401050 <col:14> 'int' lvalue Var 0x1653b400590 'skip' 'int'
|   |   | `-CallExpr 0x1653b4013d8 <line:1146:13, col:66> 'void'
|   |   |   |-ImplicitCastExpr 0x1653b4013c0 <col:13> 'void (*)(limb *, limb *, limb *, const limb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x1653b4010a0 <col:13> 'void (limb *, limb *, limb *, const limb *, const limb *, const limb *)' Function 0x1653b3f43b8 'point_double' 'void (limb *, limb *, limb *, const limb *, const limb *, const limb *)'
|   |   |   |-ImplicitCastExpr 0x1653b401428 <col:26, col:30> 'limb *' <ArrayToPointerDecay>
|   |   |   | `-ArraySubscriptExpr 0x1653b401120 <col:26, col:30> 'felem':'limb [4]' lvalue
|   |   |   |   |-ImplicitCastExpr 0x1653b401108 <col:26> 'felem *' <ArrayToPointerDecay>
|   |   |   |   | `-DeclRefExpr 0x1653b4010c0 <col:26> 'felem [3]' lvalue Var 0x1653b4008e8 'nq' 'felem [3]'
|   |   |   |   `-IntegerLiteral 0x1653b4010e0 <col:29> 'int' 0
|   |   |   |-ImplicitCastExpr 0x1653b401440 <col:33, col:37> 'limb *' <ArrayToPointerDecay>
|   |   |   | `-ArraySubscriptExpr 0x1653b4011a0 <col:33, col:37> 'felem':'limb [4]' lvalue
|   |   |   |   |-ImplicitCastExpr 0x1653b401188 <col:33> 'felem *' <ArrayToPointerDecay>
|   |   |   |   | `-DeclRefExpr 0x1653b401140 <col:33> 'felem [3]' lvalue Var 0x1653b4008e8 'nq' 'felem [3]'
|   |   |   |   `-IntegerLiteral 0x1653b401160 <col:36> 'int' 1
|   |   |   |-ImplicitCastExpr 0x1653b401458 <col:40, col:44> 'limb *' <ArrayToPointerDecay>
|   |   |   | `-ArraySubscriptExpr 0x1653b401220 <col:40, col:44> 'felem':'limb [4]' lvalue
|   |   |   |   |-ImplicitCastExpr 0x1653b401208 <col:40> 'felem *' <ArrayToPointerDecay>
|   |   |   |   | `-DeclRefExpr 0x1653b4011c0 <col:40> 'felem [3]' lvalue Var 0x1653b4008e8 'nq' 'felem [3]'
|   |   |   |   `-IntegerLiteral 0x1653b4011e0 <col:43> 'int' 2
|   |   |   |-ImplicitCastExpr 0x1653b401488 <col:47, col:51> 'const limb *':'const limb *' <NoOp>
|   |   |   | `-ImplicitCastExpr 0x1653b401470 <col:47, col:51> 'limb *' <ArrayToPointerDecay>
|   |   |   |   `-ArraySubscriptExpr 0x1653b4012a0 <col:47, col:51> 'felem':'limb [4]' lvalue
|   |   |   |     |-ImplicitCastExpr 0x1653b401288 <col:47> 'felem *' <ArrayToPointerDecay>
|   |   |   |     | `-DeclRefExpr 0x1653b401240 <col:47> 'felem [3]' lvalue Var 0x1653b4008e8 'nq' 'felem [3]'
|   |   |   |     `-IntegerLiteral 0x1653b401260 <col:50> 'int' 0
|   |   |   |-ImplicitCastExpr 0x1653b4014b8 <col:54, col:58> 'const limb *':'const limb *' <NoOp>
|   |   |   | `-ImplicitCastExpr 0x1653b4014a0 <col:54, col:58> 'limb *' <ArrayToPointerDecay>
|   |   |   |   `-ArraySubscriptExpr 0x1653b401320 <col:54, col:58> 'felem':'limb [4]' lvalue
|   |   |   |     |-ImplicitCastExpr 0x1653b401308 <col:54> 'felem *' <ArrayToPointerDecay>
|   |   |   |     | `-DeclRefExpr 0x1653b4012c0 <col:54> 'felem [3]' lvalue Var 0x1653b4008e8 'nq' 'felem [3]'
|   |   |   |     `-IntegerLiteral 0x1653b4012e0 <col:57> 'int' 1
|   |   |   `-ImplicitCastExpr 0x1653b4014e8 <col:61, col:65> 'const limb *':'const limb *' <NoOp>
|   |   |     `-ImplicitCastExpr 0x1653b4014d0 <col:61, col:65> 'limb *' <ArrayToPointerDecay>
|   |   |       `-ArraySubscriptExpr 0x1653b4013a0 <col:61, col:65> 'felem':'limb [4]' lvalue
|   |   |         |-ImplicitCastExpr 0x1653b401388 <col:61> 'felem *' <ArrayToPointerDecay>
|   |   |         | `-DeclRefExpr 0x1653b401340 <col:61> 'felem [3]' lvalue Var 0x1653b4008e8 'nq' 'felem [3]'
|   |   |         `-IntegerLiteral 0x1653b401360 <col:64> 'int' 2
|   |   |-IfStmt 0x1653b5204e8 <line:1149:9, line:1177:9>
|   |   | |-BinaryOperator 0x1653b401608 <line:1149:13, col:32> 'int' '&&'
|   |   | | |-ImplicitCastExpr 0x1653b4015f0 <col:13> 'unsigned int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1653b401518 <col:13> 'unsigned int' lvalue Var 0x1653b4006d8 'gen_mul' 'unsigned int'
|   |   | | `-ParenExpr 0x1653b4015d0 <col:24, col:32> 'int'
|   |   | |   `-BinaryOperator 0x1653b4015b0 <col:25, col:30> 'int' '<='
|   |   | |     |-ImplicitCastExpr 0x1653b401598 <col:25> 'int' <LValueToRValue>
|   |   | |     | `-DeclRefExpr 0x1653b401550 <col:25> 'int' lvalue Var 0x1653b4004b0 'i' 'int'
|   |   | |     `-IntegerLiteral 0x1653b401570 <col:30> 'int' 27
|   |   | `-CompoundStmt 0x1653b520478 <col:35, line:1177:9>
|   |   |   |-BinaryOperator 0x1653b401868 <line:1151:13, col:50> 'u64':'unsigned long long' '='
|   |   |   | |-DeclRefExpr 0x1653b401628 <col:13> 'u64':'unsigned long long' lvalue Var 0x1653b400ad0 'bits' 'u64':'unsigned long long'
|   |   |   | `-ImplicitCastExpr 0x1653b401850 <col:20, col:50> 'u64':'unsigned long long' <IntegralCast>
|   |   |   |   `-BinaryOperator 0x1653b401830 <col:20, col:50> 'int' '<<'
|   |   |   |     |-ImplicitCastExpr 0x1653b401818 <col:20, col:45> 'int' <IntegralCast>
|   |   |   |     | `-CallExpr 0x1653b401790 <col:20, col:45> 'char'
|   |   |   |     |   |-ImplicitCastExpr 0x1653b401778 <col:20> 'char (*)(const u8 *, unsigned int)' <FunctionToPointerDecay>
|   |   |   |     |   | `-DeclRefExpr 0x1653b401660 <col:20> 'char (const u8 *, unsigned int)' Function 0x1653b3ff428 'get_bit' 'char (const u8 *, unsigned int)'
|   |   |   |     |   |-ImplicitCastExpr 0x1653b4017c0 <col:28> 'const u8 *' <LValueToRValue>
|   |   |   |     |   | `-DeclRefExpr 0x1653b401680 <col:28> 'const u8 *' lvalue ParmVar 0x1653b3ffbf8 'g_scalar' 'const u8 *'
|   |   |   |     |   `-ImplicitCastExpr 0x1653b4017d8 <col:38, col:42> 'unsigned int' <IntegralCast>
|   |   |   |     |     `-BinaryOperator 0x1653b401700 <col:38, col:42> 'int' '+'
|   |   |   |     |       |-ImplicitCastExpr 0x1653b4016e8 <col:38> 'int' <LValueToRValue>
|   |   |   |     |       | `-DeclRefExpr 0x1653b4016a0 <col:38> 'int' lvalue Var 0x1653b4004b0 'i' 'int'
|   |   |   |     |       `-IntegerLiteral 0x1653b4016c0 <col:42> 'int' 196
|   |   |   |     `-IntegerLiteral 0x1653b4017f0 <col:50> 'int' 3
|   |   |   |-CompoundAssignOperator 0x1653b401a58 <line:1152:13, col:51> 'u64':'unsigned long long' '|=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |   |   | |-DeclRefExpr 0x1653b401888 <col:13> 'u64':'unsigned long long' lvalue Var 0x1653b400ad0 'bits' 'u64':'unsigned long long'
|   |   |   | `-ImplicitCastExpr 0x1653b401a40 <col:21, col:51> 'unsigned long long' <IntegralCast>
|   |   |   |   `-BinaryOperator 0x1653b401a20 <col:21, col:51> 'int' '<<'
|   |   |   |     |-ImplicitCastExpr 0x1653b401a08 <col:21, col:46> 'int' <IntegralCast>
|   |   |   |     | `-CallExpr 0x1653b401980 <col:21, col:46> 'char'
|   |   |   |     |   |-ImplicitCastExpr 0x1653b401968 <col:21> 'char (*)(const u8 *, unsigned int)' <FunctionToPointerDecay>
|   |   |   |     |   | `-DeclRefExpr 0x1653b4018a8 <col:21> 'char (const u8 *, unsigned int)' Function 0x1653b3ff428 'get_bit' 'char (const u8 *, unsigned int)'
|   |   |   |     |   |-ImplicitCastExpr 0x1653b4019b0 <col:29> 'const u8 *' <LValueToRValue>
|   |   |   |     |   | `-DeclRefExpr 0x1653b4018c8 <col:29> 'const u8 *' lvalue ParmVar 0x1653b3ffbf8 'g_scalar' 'const u8 *'
|   |   |   |     |   `-ImplicitCastExpr 0x1653b4019c8 <col:39, col:43> 'unsigned int' <IntegralCast>
|   |   |   |     |     `-BinaryOperator 0x1653b401948 <col:39, col:43> 'int' '+'
|   |   |   |     |       |-ImplicitCastExpr 0x1653b401930 <col:39> 'int' <LValueToRValue>
|   |   |   |     |       | `-DeclRefExpr 0x1653b4018e8 <col:39> 'int' lvalue Var 0x1653b4004b0 'i' 'int'
|   |   |   |     |       `-IntegerLiteral 0x1653b401908 <col:43> 'int' 140
|   |   |   |     `-IntegerLiteral 0x1653b4019e0 <col:51> 'int' 2
|   |   |   |-CompoundAssignOperator 0x1653b401c58 <line:1153:13, col:50> 'u64':'unsigned long long' '|=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |   |   | |-DeclRefExpr 0x1653b401a88 <col:13> 'u64':'unsigned long long' lvalue Var 0x1653b400ad0 'bits' 'u64':'unsigned long long'
|   |   |   | `-ImplicitCastExpr 0x1653b401c40 <col:21, col:50> 'unsigned long long' <IntegralCast>
|   |   |   |   `-BinaryOperator 0x1653b401c20 <col:21, col:50> 'int' '<<'
|   |   |   |     |-ImplicitCastExpr 0x1653b401c08 <col:21, col:45> 'int' <IntegralCast>
|   |   |   |     | `-CallExpr 0x1653b401b80 <col:21, col:45> 'char'
|   |   |   |     |   |-ImplicitCastExpr 0x1653b401b68 <col:21> 'char (*)(const u8 *, unsigned int)' <FunctionToPointerDecay>
|   |   |   |     |   | `-DeclRefExpr 0x1653b401aa8 <col:21> 'char (const u8 *, unsigned int)' Function 0x1653b3ff428 'get_bit' 'char (const u8 *, unsigned int)'
|   |   |   |     |   |-ImplicitCastExpr 0x1653b401bb0 <col:29> 'const u8 *' <LValueToRValue>
|   |   |   |     |   | `-DeclRefExpr 0x1653b401ac8 <col:29> 'const u8 *' lvalue ParmVar 0x1653b3ffbf8 'g_scalar' 'const u8 *'
|   |   |   |     |   `-ImplicitCastExpr 0x1653b401bc8 <col:39, col:43> 'unsigned int' <IntegralCast>
|   |   |   |     |     `-BinaryOperator 0x1653b401b48 <col:39, col:43> 'int' '+'
|   |   |   |     |       |-ImplicitCastExpr 0x1653b401b30 <col:39> 'int' <LValueToRValue>
|   |   |   |     |       | `-DeclRefExpr 0x1653b401ae8 <col:39> 'int' lvalue Var 0x1653b4004b0 'i' 'int'
|   |   |   |     |       `-IntegerLiteral 0x1653b401b08 <col:43> 'int' 84
|   |   |   |     `-IntegerLiteral 0x1653b401be0 <col:50> 'int' 1
|   |   |   |-CompoundAssignOperator 0x1653b401df8 <line:1154:13, col:45> 'u64':'unsigned long long' '|=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |   |   | |-DeclRefExpr 0x1653b401c88 <col:13> 'u64':'unsigned long long' lvalue Var 0x1653b400ad0 'bits' 'u64':'unsigned long long'
|   |   |   | `-ImplicitCastExpr 0x1653b401de0 <col:21, col:45> 'unsigned long long' <IntegralCast>
|   |   |   |   `-CallExpr 0x1653b401d80 <col:21, col:45> 'char'
|   |   |   |     |-ImplicitCastExpr 0x1653b401d68 <col:21> 'char (*)(const u8 *, unsigned int)' <FunctionToPointerDecay>
|   |   |   |     | `-DeclRefExpr 0x1653b401ca8 <col:21> 'char (const u8 *, unsigned int)' Function 0x1653b3ff428 'get_bit' 'char (const u8 *, unsigned int)'
|   |   |   |     |-ImplicitCastExpr 0x1653b401db0 <col:29> 'const u8 *' <LValueToRValue>
|   |   |   |     | `-DeclRefExpr 0x1653b401cc8 <col:29> 'const u8 *' lvalue ParmVar 0x1653b3ffbf8 'g_scalar' 'const u8 *'
|   |   |   |     `-ImplicitCastExpr 0x1653b401dc8 <col:39, col:43> 'unsigned int' <IntegralCast>
|   |   |   |       `-BinaryOperator 0x1653b401d48 <col:39, col:43> 'int' '+'
|   |   |   |         |-ImplicitCastExpr 0x1653b401d30 <col:39> 'int' <LValueToRValue>
|   |   |   |         | `-DeclRefExpr 0x1653b401ce8 <col:39> 'int' lvalue Var 0x1653b4004b0 'i' 'int'
|   |   |   |         `-IntegerLiteral 0x1653b401d08 <col:43> 'int' 28
|   |   |   |-CallExpr 0x1653b401fc0 <line:1156:13, col:54> 'void'
|   |   |   | |-ImplicitCastExpr 0x1653b401fa8 <col:13> 'void (*)(const u64, unsigned int, const felem (*)[3], felem *)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x1653b401e28 <col:13> 'void (const u64, unsigned int, const felem (*)[3], felem *)' Function 0x1653b3fdfa8 'select_point' 'void (const u64, unsigned int, const felem (*)[3], felem *)'
|   |   |   | |-ImplicitCastExpr 0x1653b402000 <col:26> 'u64':'unsigned long long' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x1653b401e48 <col:26> 'u64':'unsigned long long' lvalue Var 0x1653b400ad0 'bits' 'u64':'unsigned long long'
|   |   |   | |-ImplicitCastExpr 0x1653b402018 <col:32> 'unsigned int' <IntegralCast>
|   |   |   | | `-IntegerLiteral 0x1653b401e68 <col:32> 'int' 16
|   |   |   | |-ImplicitCastExpr 0x1653b402030 <col:36, col:48> 'const felem (*)[3]' <ArrayToPointerDecay>
|   |   |   | | `-ArraySubscriptExpr 0x1653b401ef0 <col:36, col:48> 'const felem [16][3]' lvalue
|   |   |   | |   |-ImplicitCastExpr 0x1653b401ed8 <col:36> 'const felem (*)[16][3]':'const felem (*)[16][3]' <LValueToRValue>
|   |   |   | |   | `-DeclRefExpr 0x1653b401e90 <col:36> 'const felem (*)[16][3]':'const felem (*)[16][3]' lvalue ParmVar 0x1653b400110 'g_pre_comp' 'const felem (*)[16][3]':'const felem (*)[16][3]'
|   |   |   | |   `-IntegerLiteral 0x1653b401eb0 <col:47> 'int' 1
|   |   |   | `-ImplicitCastExpr 0x1653b402048 <col:51> 'felem *' <ArrayToPointerDecay>
|   |   |   |   `-DeclRefExpr 0x1653b401f10 <col:51> 'felem [4]' lvalue Var 0x1653b400a28 'tmp' 'felem [4]'
|   |   |   |-IfStmt 0x1653b51f490 <line:1158:13, line:1165:13> has_else
|   |   |   | |-UnaryOperator 0x1653b402098 <line:1158:17, col:18> 'int' prefix '!' cannot overflow
|   |   |   | | `-ImplicitCastExpr 0x1653b402080 <col:18> 'int' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x1653b402060 <col:18> 'int' lvalue Var 0x1653b400590 'skip' 'int'
|   |   |   | |-CompoundStmt 0x1653b51f1f8 <col:24, line:1162:13>
|   |   |   | | `-CallExpr 0x1653b51f020 <line:1160:17, line:1161:73> 'void'
|   |   |   | |   |-ImplicitCastExpr 0x1653b51f008 <line:1160:17> 'void (*)(limb *, limb *, limb *, const limb *, const limb *, const limb *, const int, const limb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   |   |   | |   | `-DeclRefExpr 0x1653b4020b0 <col:17> 'void (limb *, limb *, limb *, const limb *, const limb *, const limb *, const int, const limb *, const limb *, const limb *)' Function 0x1653b3fb0b8 'point_add' 'void (limb *, limb *, limb *, const limb *, const limb *, const limb *, const int, const limb *, const limb *, const limb *)'
|   |   |   | |   |-ImplicitCastExpr 0x1653b51f090 <col:27, col:31> 'limb *' <ArrayToPointerDecay>
|   |   |   | |   | `-ArraySubscriptExpr 0x1653b402130 <col:27, col:31> 'felem':'limb [4]' lvalue
|   |   |   | |   |   |-ImplicitCastExpr 0x1653b402118 <col:27> 'felem *' <ArrayToPointerDecay>
|   |   |   | |   |   | `-DeclRefExpr 0x1653b4020d0 <col:27> 'felem [3]' lvalue Var 0x1653b4008e8 'nq' 'felem [3]'
|   |   |   | |   |   `-IntegerLiteral 0x1653b4020f0 <col:30> 'int' 0
|   |   |   | |   |-ImplicitCastExpr 0x1653b51f0a8 <col:34, col:38> 'limb *' <ArrayToPointerDecay>
|   |   |   | |   | `-ArraySubscriptExpr 0x1653b4021b0 <col:34, col:38> 'felem':'limb [4]' lvalue
|   |   |   | |   |   |-ImplicitCastExpr 0x1653b402198 <col:34> 'felem *' <ArrayToPointerDecay>
|   |   |   | |   |   | `-DeclRefExpr 0x1653b402150 <col:34> 'felem [3]' lvalue Var 0x1653b4008e8 'nq' 'felem [3]'
|   |   |   | |   |   `-IntegerLiteral 0x1653b402170 <col:37> 'int' 1
|   |   |   | |   |-ImplicitCastExpr 0x1653b51f0c0 <col:41, col:45> 'limb *' <ArrayToPointerDecay>
|   |   |   | |   | `-ArraySubscriptExpr 0x1653b402230 <col:41, col:45> 'felem':'limb [4]' lvalue
|   |   |   | |   |   |-ImplicitCastExpr 0x1653b402218 <col:41> 'felem *' <ArrayToPointerDecay>
|   |   |   | |   |   | `-DeclRefExpr 0x1653b4021d0 <col:41> 'felem [3]' lvalue Var 0x1653b4008e8 'nq' 'felem [3]'
|   |   |   | |   |   `-IntegerLiteral 0x1653b4021f0 <col:44> 'int' 2
|   |   |   | |   |-ImplicitCastExpr 0x1653b51f0f0 <line:1161:27, col:31> 'const limb *':'const limb *' <NoOp>
|   |   |   | |   | `-ImplicitCastExpr 0x1653b51f0d8 <col:27, col:31> 'limb *' <ArrayToPointerDecay>
|   |   |   | |   |   `-ArraySubscriptExpr 0x1653b4022b0 <col:27, col:31> 'felem':'limb [4]' lvalue
|   |   |   | |   |     |-ImplicitCastExpr 0x1653b402298 <col:27> 'felem *' <ArrayToPointerDecay>
|   |   |   | |   |     | `-DeclRefExpr 0x1653b402250 <col:27> 'felem [3]' lvalue Var 0x1653b4008e8 'nq' 'felem [3]'
|   |   |   | |   |     `-IntegerLiteral 0x1653b402270 <col:30> 'int' 0
|   |   |   | |   |-ImplicitCastExpr 0x1653b51f120 <col:34, col:38> 'const limb *':'const limb *' <NoOp>
|   |   |   | |   | `-ImplicitCastExpr 0x1653b51f108 <col:34, col:38> 'limb *' <ArrayToPointerDecay>
|   |   |   | |   |   `-ArraySubscriptExpr 0x1653b402330 <col:34, col:38> 'felem':'limb [4]' lvalue
|   |   |   | |   |     |-ImplicitCastExpr 0x1653b402318 <col:34> 'felem *' <ArrayToPointerDecay>
|   |   |   | |   |     | `-DeclRefExpr 0x1653b4022d0 <col:34> 'felem [3]' lvalue Var 0x1653b4008e8 'nq' 'felem [3]'
|   |   |   | |   |     `-IntegerLiteral 0x1653b4022f0 <col:37> 'int' 1
|   |   |   | |   |-ImplicitCastExpr 0x1653b51f150 <col:41, col:45> 'const limb *':'const limb *' <NoOp>
|   |   |   | |   | `-ImplicitCastExpr 0x1653b51f138 <col:41, col:45> 'limb *' <ArrayToPointerDecay>
|   |   |   | |   |   `-ArraySubscriptExpr 0x1653b4023b0 <col:41, col:45> 'felem':'limb [4]' lvalue
|   |   |   | |   |     |-ImplicitCastExpr 0x1653b402398 <col:41> 'felem *' <ArrayToPointerDecay>
|   |   |   | |   |     | `-DeclRefExpr 0x1653b402350 <col:41> 'felem [3]' lvalue Var 0x1653b4008e8 'nq' 'felem [3]'
|   |   |   | |   |     `-IntegerLiteral 0x1653b402370 <col:44> 'int' 2
|   |   |   | |   |-IntegerLiteral 0x1653b4023d0 <col:48> 'int' 1
|   |   |   | |   |-ImplicitCastExpr 0x1653b51f180 <col:51, col:56> 'const limb *':'const limb *' <NoOp>
|   |   |   | |   | `-ImplicitCastExpr 0x1653b51f168 <col:51, col:56> 'limb *' <ArrayToPointerDecay>
|   |   |   | |   |   `-ArraySubscriptExpr 0x1653b402458 <col:51, col:56> 'felem':'limb [4]' lvalue
|   |   |   | |   |     |-ImplicitCastExpr 0x1653b402440 <col:51> 'felem *' <ArrayToPointerDecay>
|   |   |   | |   |     | `-DeclRefExpr 0x1653b4023f8 <col:51> 'felem [4]' lvalue Var 0x1653b400a28 'tmp' 'felem [4]'
|   |   |   | |   |     `-IntegerLiteral 0x1653b402418 <col:55> 'int' 0
|   |   |   | |   |-ImplicitCastExpr 0x1653b51f1b0 <col:59, col:64> 'const limb *':'const limb *' <NoOp>
|   |   |   | |   | `-ImplicitCastExpr 0x1653b51f198 <col:59, col:64> 'limb *' <ArrayToPointerDecay>
|   |   |   | |   |   `-ArraySubscriptExpr 0x1653b4024d8 <col:59, col:64> 'felem':'limb [4]' lvalue
|   |   |   | |   |     |-ImplicitCastExpr 0x1653b4024c0 <col:59> 'felem *' <ArrayToPointerDecay>
|   |   |   | |   |     | `-DeclRefExpr 0x1653b402478 <col:59> 'felem [4]' lvalue Var 0x1653b400a28 'tmp' 'felem [4]'
|   |   |   | |   |     `-IntegerLiteral 0x1653b402498 <col:63> 'int' 1
|   |   |   | |   `-ImplicitCastExpr 0x1653b51f1e0 <col:67, col:72> 'const limb *':'const limb *' <NoOp>
|   |   |   | |     `-ImplicitCastExpr 0x1653b51f1c8 <col:67, col:72> 'limb *' <ArrayToPointerDecay>
|   |   |   | |       `-ArraySubscriptExpr 0x1653b402558 <col:67, col:72> 'felem':'limb [4]' lvalue
|   |   |   | |         |-ImplicitCastExpr 0x1653b402540 <col:67> 'felem *' <ArrayToPointerDecay>
|   |   |   | |         | `-DeclRefExpr 0x1653b4024f8 <col:67> 'felem [4]' lvalue Var 0x1653b400a28 'tmp' 'felem [4]'
|   |   |   | |         `-IntegerLiteral 0x1653b402518 <col:71> 'int' 2
|   |   |   | `-CompoundStmt 0x1653b51f470 <line:1162:20, line:1165:13>
|   |   |   |   |-CallExpr 0x1653b51f370 <line:1163:17, col:50> 'void *'
|   |   |   |   | |-ImplicitCastExpr 0x1653b51f358 <col:17> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   |   |   |   | | `-DeclRefExpr 0x1653b51f210 <col:17> 'void *(void *, const void *, unsigned long long)' Function 0x1653b2b7768 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   |   |   |   | |-ImplicitCastExpr 0x1653b51f3c0 <col:24> 'void *' <BitCast>
|   |   |   |   | | `-ImplicitCastExpr 0x1653b51f3a8 <col:24> 'felem *' <ArrayToPointerDecay>
|   |   |   |   | |   `-DeclRefExpr 0x1653b51f230 <col:24> 'felem [3]' lvalue Var 0x1653b4008e8 'nq' 'felem [3]'
|   |   |   |   | |-ImplicitCastExpr 0x1653b51f3f0 <col:28> 'const void *' <BitCast>
|   |   |   |   | | `-ImplicitCastExpr 0x1653b51f3d8 <col:28> 'felem *' <ArrayToPointerDecay>
|   |   |   |   | |   `-DeclRefExpr 0x1653b51f250 <col:28> 'felem [4]' lvalue Var 0x1653b400a28 'tmp' 'felem [4]'
|   |   |   |   | `-BinaryOperator 0x1653b51f2e0 <col:33, col:49> 'unsigned long long' '*'
|   |   |   |   |   |-ImplicitCastExpr 0x1653b51f2c8 <col:33> 'unsigned long long' <IntegralCast>
|   |   |   |   |   | `-IntegerLiteral 0x1653b51f270 <col:33> 'int' 3
|   |   |   |   |   `-UnaryExprOrTypeTraitExpr 0x1653b51f2a8 <col:37, col:49> 'unsigned long long' sizeof 'felem':'limb [4]'
|   |   |   |   `-BinaryOperator 0x1653b51f450 <line:1164:17, col:24> 'int' '='
|   |   |   |     |-DeclRefExpr 0x1653b51f408 <col:17> 'int' lvalue Var 0x1653b400590 'skip' 'int'
|   |   |   |     `-IntegerLiteral 0x1653b51f428 <col:24> 'int' 0
|   |   |   |-BinaryOperator 0x1653b51f688 <line:1168:13, col:50> 'u64':'unsigned long long' '='
|   |   |   | |-DeclRefExpr 0x1653b51f4b8 <col:13> 'u64':'unsigned long long' lvalue Var 0x1653b400ad0 'bits' 'u64':'unsigned long long'
|   |   |   | `-ImplicitCastExpr 0x1653b51f670 <col:20, col:50> 'u64':'unsigned long long' <IntegralCast>
|   |   |   |   `-BinaryOperator 0x1653b51f650 <col:20, col:50> 'int' '<<'
|   |   |   |     |-ImplicitCastExpr 0x1653b51f638 <col:20, col:45> 'int' <IntegralCast>
|   |   |   |     | `-CallExpr 0x1653b51f5b0 <col:20, col:45> 'char'
|   |   |   |     |   |-ImplicitCastExpr 0x1653b51f598 <col:20> 'char (*)(const u8 *, unsigned int)' <FunctionToPointerDecay>
|   |   |   |     |   | `-DeclRefExpr 0x1653b51f4d8 <col:20> 'char (const u8 *, unsigned int)' Function 0x1653b3ff428 'get_bit' 'char (const u8 *, unsigned int)'
|   |   |   |     |   |-ImplicitCastExpr 0x1653b51f5e0 <col:28> 'const u8 *' <LValueToRValue>
|   |   |   |     |   | `-DeclRefExpr 0x1653b51f4f8 <col:28> 'const u8 *' lvalue ParmVar 0x1653b3ffbf8 'g_scalar' 'const u8 *'
|   |   |   |     |   `-ImplicitCastExpr 0x1653b51f5f8 <col:38, col:42> 'unsigned int' <IntegralCast>
|   |   |   |     |     `-BinaryOperator 0x1653b51f578 <col:38, col:42> 'int' '+'
|   |   |   |     |       |-ImplicitCastExpr 0x1653b51f560 <col:38> 'int' <LValueToRValue>
|   |   |   |     |       | `-DeclRefExpr 0x1653b51f518 <col:38> 'int' lvalue Var 0x1653b4004b0 'i' 'int'
|   |   |   |     |       `-IntegerLiteral 0x1653b51f538 <col:42> 'int' 168
|   |   |   |     `-IntegerLiteral 0x1653b51f610 <col:50> 'int' 3
|   |   |   |-CompoundAssignOperator 0x1653b51f878 <line:1169:13, col:51> 'u64':'unsigned long long' '|=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |   |   | |-DeclRefExpr 0x1653b51f6a8 <col:13> 'u64':'unsigned long long' lvalue Var 0x1653b400ad0 'bits' 'u64':'unsigned long long'
|   |   |   | `-ImplicitCastExpr 0x1653b51f860 <col:21, col:51> 'unsigned long long' <IntegralCast>
|   |   |   |   `-BinaryOperator 0x1653b51f840 <col:21, col:51> 'int' '<<'
|   |   |   |     |-ImplicitCastExpr 0x1653b51f828 <col:21, col:46> 'int' <IntegralCast>
|   |   |   |     | `-CallExpr 0x1653b51f7a0 <col:21, col:46> 'char'
|   |   |   |     |   |-ImplicitCastExpr 0x1653b51f788 <col:21> 'char (*)(const u8 *, unsigned int)' <FunctionToPointerDecay>
|   |   |   |     |   | `-DeclRefExpr 0x1653b51f6c8 <col:21> 'char (const u8 *, unsigned int)' Function 0x1653b3ff428 'get_bit' 'char (const u8 *, unsigned int)'
|   |   |   |     |   |-ImplicitCastExpr 0x1653b51f7d0 <col:29> 'const u8 *' <LValueToRValue>
|   |   |   |     |   | `-DeclRefExpr 0x1653b51f6e8 <col:29> 'const u8 *' lvalue ParmVar 0x1653b3ffbf8 'g_scalar' 'const u8 *'
|   |   |   |     |   `-ImplicitCastExpr 0x1653b51f7e8 <col:39, col:43> 'unsigned int' <IntegralCast>
|   |   |   |     |     `-BinaryOperator 0x1653b51f768 <col:39, col:43> 'int' '+'
|   |   |   |     |       |-ImplicitCastExpr 0x1653b51f750 <col:39> 'int' <LValueToRValue>
|   |   |   |     |       | `-DeclRefExpr 0x1653b51f708 <col:39> 'int' lvalue Var 0x1653b4004b0 'i' 'int'
|   |   |   |     |       `-IntegerLiteral 0x1653b51f728 <col:43> 'int' 112
|   |   |   |     `-IntegerLiteral 0x1653b51f800 <col:51> 'int' 2
|   |   |   |-CompoundAssignOperator 0x1653b51fa78 <line:1170:13, col:50> 'u64':'unsigned long long' '|=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |   |   | |-DeclRefExpr 0x1653b51f8a8 <col:13> 'u64':'unsigned long long' lvalue Var 0x1653b400ad0 'bits' 'u64':'unsigned long long'
|   |   |   | `-ImplicitCastExpr 0x1653b51fa60 <col:21, col:50> 'unsigned long long' <IntegralCast>
|   |   |   |   `-BinaryOperator 0x1653b51fa40 <col:21, col:50> 'int' '<<'
|   |   |   |     |-ImplicitCastExpr 0x1653b51fa28 <col:21, col:45> 'int' <IntegralCast>
|   |   |   |     | `-CallExpr 0x1653b51f9a0 <col:21, col:45> 'char'
|   |   |   |     |   |-ImplicitCastExpr 0x1653b51f988 <col:21> 'char (*)(const u8 *, unsigned int)' <FunctionToPointerDecay>
|   |   |   |     |   | `-DeclRefExpr 0x1653b51f8c8 <col:21> 'char (const u8 *, unsigned int)' Function 0x1653b3ff428 'get_bit' 'char (const u8 *, unsigned int)'
|   |   |   |     |   |-ImplicitCastExpr 0x1653b51f9d0 <col:29> 'const u8 *' <LValueToRValue>
|   |   |   |     |   | `-DeclRefExpr 0x1653b51f8e8 <col:29> 'const u8 *' lvalue ParmVar 0x1653b3ffbf8 'g_scalar' 'const u8 *'
|   |   |   |     |   `-ImplicitCastExpr 0x1653b51f9e8 <col:39, col:43> 'unsigned int' <IntegralCast>
|   |   |   |     |     `-BinaryOperator 0x1653b51f968 <col:39, col:43> 'int' '+'
|   |   |   |     |       |-ImplicitCastExpr 0x1653b51f950 <col:39> 'int' <LValueToRValue>
|   |   |   |     |       | `-DeclRefExpr 0x1653b51f908 <col:39> 'int' lvalue Var 0x1653b4004b0 'i' 'int'
|   |   |   |     |       `-IntegerLiteral 0x1653b51f928 <col:43> 'int' 56
|   |   |   |     `-IntegerLiteral 0x1653b51fa00 <col:50> 'int' 1
|   |   |   |-CompoundAssignOperator 0x1653b51fbd0 <line:1171:13, col:40> 'u64':'unsigned long long' '|=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |   |   | |-DeclRefExpr 0x1653b51faa8 <col:13> 'u64':'unsigned long long' lvalue Var 0x1653b400ad0 'bits' 'u64':'unsigned long long'
|   |   |   | `-ImplicitCastExpr 0x1653b51fbb8 <col:21, col:40> 'unsigned long long' <IntegralCast>
|   |   |   |   `-CallExpr 0x1653b51fb40 <col:21, col:40> 'char'
|   |   |   |     |-ImplicitCastExpr 0x1653b51fb28 <col:21> 'char (*)(const u8 *, unsigned int)' <FunctionToPointerDecay>
|   |   |   |     | `-DeclRefExpr 0x1653b51fac8 <col:21> 'char (const u8 *, unsigned int)' Function 0x1653b3ff428 'get_bit' 'char (const u8 *, unsigned int)'
|   |   |   |     |-ImplicitCastExpr 0x1653b51fb70 <col:29> 'const u8 *' <LValueToRValue>
|   |   |   |     | `-DeclRefExpr 0x1653b51fae8 <col:29> 'const u8 *' lvalue ParmVar 0x1653b3ffbf8 'g_scalar' 'const u8 *'
|   |   |   |     `-ImplicitCastExpr 0x1653b51fba0 <col:39> 'unsigned int' <IntegralCast>
|   |   |   |       `-ImplicitCastExpr 0x1653b51fb88 <col:39> 'int' <LValueToRValue>
|   |   |   |         `-DeclRefExpr 0x1653b51fb08 <col:39> 'int' lvalue Var 0x1653b4004b0 'i' 'int'
|   |   |   |-CallExpr 0x1653b51fd20 <line:1173:13, col:54> 'void'
|   |   |   | |-ImplicitCastExpr 0x1653b51fd08 <col:13> 'void (*)(const u64, unsigned int, const felem (*)[3], felem *)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x1653b51fc00 <col:13> 'void (const u64, unsigned int, const felem (*)[3], felem *)' Function 0x1653b3fdfa8 'select_point' 'void (const u64, unsigned int, const felem (*)[3], felem *)'
|   |   |   | |-ImplicitCastExpr 0x1653b51fd60 <col:26> 'u64':'unsigned long long' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x1653b51fc20 <col:26> 'u64':'unsigned long long' lvalue Var 0x1653b400ad0 'bits' 'u64':'unsigned long long'
|   |   |   | |-ImplicitCastExpr 0x1653b51fd78 <col:32> 'unsigned int' <IntegralCast>
|   |   |   | | `-IntegerLiteral 0x1653b51fc40 <col:32> 'int' 16
|   |   |   | |-ImplicitCastExpr 0x1653b51fd90 <col:36, col:48> 'const felem (*)[3]' <ArrayToPointerDecay>
|   |   |   | | `-ArraySubscriptExpr 0x1653b51fcc8 <col:36, col:48> 'const felem [16][3]' lvalue
|   |   |   | |   |-ImplicitCastExpr 0x1653b51fcb0 <col:36> 'const felem (*)[16][3]':'const felem (*)[16][3]' <LValueToRValue>
|   |   |   | |   | `-DeclRefExpr 0x1653b51fc68 <col:36> 'const felem (*)[16][3]':'const felem (*)[16][3]' lvalue ParmVar 0x1653b400110 'g_pre_comp' 'const felem (*)[16][3]':'const felem (*)[16][3]'
|   |   |   | |   `-IntegerLiteral 0x1653b51fc88 <col:47> 'int' 0
|   |   |   | `-ImplicitCastExpr 0x1653b51fda8 <col:51> 'felem *' <ArrayToPointerDecay>
|   |   |   |   `-DeclRefExpr 0x1653b51fce8 <col:51> 'felem [4]' lvalue Var 0x1653b400a28 'tmp' 'felem [4]'
|   |   |   `-CallExpr 0x1653b5202a0 <line:1174:13, line:1176:61> 'void'
|   |   |     |-ImplicitCastExpr 0x1653b520288 <line:1174:13> 'void (*)(limb *, limb *, limb *, const limb *, const limb *, const limb *, const int, const limb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x1653b51fdc0 <col:13> 'void (limb *, limb *, limb *, const limb *, const limb *, const limb *, const int, const limb *, const limb *, const limb *)' Function 0x1653b3fb0b8 'point_add' 'void (limb *, limb *, limb *, const limb *, const limb *, const limb *, const int, const limb *, const limb *, const limb *)'
|   |   |     |-ImplicitCastExpr 0x1653b520310 <col:23, col:27> 'limb *' <ArrayToPointerDecay>
|   |   |     | `-ArraySubscriptExpr 0x1653b51fe40 <col:23, col:27> 'felem':'limb [4]' lvalue
|   |   |     |   |-ImplicitCastExpr 0x1653b51fe28 <col:23> 'felem *' <ArrayToPointerDecay>
|   |   |     |   | `-DeclRefExpr 0x1653b51fde0 <col:23> 'felem [3]' lvalue Var 0x1653b4008e8 'nq' 'felem [3]'
|   |   |     |   `-IntegerLiteral 0x1653b51fe00 <col:26> 'int' 0
|   |   |     |-ImplicitCastExpr 0x1653b520328 <col:30, col:34> 'limb *' <ArrayToPointerDecay>
|   |   |     | `-ArraySubscriptExpr 0x1653b51fec0 <col:30, col:34> 'felem':'limb [4]' lvalue
|   |   |     |   |-ImplicitCastExpr 0x1653b51fea8 <col:30> 'felem *' <ArrayToPointerDecay>
|   |   |     |   | `-DeclRefExpr 0x1653b51fe60 <col:30> 'felem [3]' lvalue Var 0x1653b4008e8 'nq' 'felem [3]'
|   |   |     |   `-IntegerLiteral 0x1653b51fe80 <col:33> 'int' 1
|   |   |     |-ImplicitCastExpr 0x1653b520340 <col:37, col:41> 'limb *' <ArrayToPointerDecay>
|   |   |     | `-ArraySubscriptExpr 0x1653b51ff40 <col:37, col:41> 'felem':'limb [4]' lvalue
|   |   |     |   |-ImplicitCastExpr 0x1653b51ff28 <col:37> 'felem *' <ArrayToPointerDecay>
|   |   |     |   | `-DeclRefExpr 0x1653b51fee0 <col:37> 'felem [3]' lvalue Var 0x1653b4008e8 'nq' 'felem [3]'
|   |   |     |   `-IntegerLiteral 0x1653b51ff00 <col:40> 'int' 2
|   |   |     |-ImplicitCastExpr 0x1653b520370 <line:1175:23, col:27> 'const limb *':'const limb *' <NoOp>
|   |   |     | `-ImplicitCastExpr 0x1653b520358 <col:23, col:27> 'limb *' <ArrayToPointerDecay>
|   |   |     |   `-ArraySubscriptExpr 0x1653b51ffc0 <col:23, col:27> 'felem':'limb [4]' lvalue
|   |   |     |     |-ImplicitCastExpr 0x1653b51ffa8 <col:23> 'felem *' <ArrayToPointerDecay>
|   |   |     |     | `-DeclRefExpr 0x1653b51ff60 <col:23> 'felem [3]' lvalue Var 0x1653b4008e8 'nq' 'felem [3]'
|   |   |     |     `-IntegerLiteral 0x1653b51ff80 <col:26> 'int' 0
|   |   |     |-ImplicitCastExpr 0x1653b5203a0 <col:30, col:34> 'const limb *':'const limb *' <NoOp>
|   |   |     | `-ImplicitCastExpr 0x1653b520388 <col:30, col:34> 'limb *' <ArrayToPointerDecay>
|   |   |     |   `-ArraySubscriptExpr 0x1653b520040 <col:30, col:34> 'felem':'limb [4]' lvalue
|   |   |     |     |-ImplicitCastExpr 0x1653b520028 <col:30> 'felem *' <ArrayToPointerDecay>
|   |   |     |     | `-DeclRefExpr 0x1653b51ffe0 <col:30> 'felem [3]' lvalue Var 0x1653b4008e8 'nq' 'felem [3]'
|   |   |     |     `-IntegerLiteral 0x1653b520000 <col:33> 'int' 1
|   |   |     |-ImplicitCastExpr 0x1653b5203d0 <col:37, col:41> 'const limb *':'const limb *' <NoOp>
|   |   |     | `-ImplicitCastExpr 0x1653b5203b8 <col:37, col:41> 'limb *' <ArrayToPointerDecay>
|   |   |     |   `-ArraySubscriptExpr 0x1653b5200c0 <col:37, col:41> 'felem':'limb [4]' lvalue
|   |   |     |     |-ImplicitCastExpr 0x1653b5200a8 <col:37> 'felem *' <ArrayToPointerDecay>
|   |   |     |     | `-DeclRefExpr 0x1653b520060 <col:37> 'felem [3]' lvalue Var 0x1653b4008e8 'nq' 'felem [3]'
|   |   |     |     `-IntegerLiteral 0x1653b520080 <col:40> 'int' 2
|   |   |     |-IntegerLiteral 0x1653b5200e0 <line:1176:23> 'int' 1
|   |   |     |-ImplicitCastExpr 0x1653b520400 <col:39, col:44> 'const limb *':'const limb *' <NoOp>
|   |   |     | `-ImplicitCastExpr 0x1653b5203e8 <col:39, col:44> 'limb *' <ArrayToPointerDecay>
|   |   |     |   `-ArraySubscriptExpr 0x1653b520168 <col:39, col:44> 'felem':'limb [4]' lvalue
|   |   |     |     |-ImplicitCastExpr 0x1653b520150 <col:39> 'felem *' <ArrayToPointerDecay>
|   |   |     |     | `-DeclRefExpr 0x1653b520108 <col:39> 'felem [4]' lvalue Var 0x1653b400a28 'tmp' 'felem [4]'
|   |   |     |     `-IntegerLiteral 0x1653b520128 <col:43> 'int' 0
|   |   |     |-ImplicitCastExpr 0x1653b520430 <col:47, col:52> 'const limb *':'const limb *' <NoOp>
|   |   |     | `-ImplicitCastExpr 0x1653b520418 <col:47, col:52> 'limb *' <ArrayToPointerDecay>
|   |   |     |   `-ArraySubscriptExpr 0x1653b5201e8 <col:47, col:52> 'felem':'limb [4]' lvalue
|   |   |     |     |-ImplicitCastExpr 0x1653b5201d0 <col:47> 'felem *' <ArrayToPointerDecay>
|   |   |     |     | `-DeclRefExpr 0x1653b520188 <col:47> 'felem [4]' lvalue Var 0x1653b400a28 'tmp' 'felem [4]'
|   |   |     |     `-IntegerLiteral 0x1653b5201a8 <col:51> 'int' 1
|   |   |     `-ImplicitCastExpr 0x1653b520460 <col:55, col:60> 'const limb *':'const limb *' <NoOp>
|   |   |       `-ImplicitCastExpr 0x1653b520448 <col:55, col:60> 'limb *' <ArrayToPointerDecay>
|   |   |         `-ArraySubscriptExpr 0x1653b520268 <col:55, col:60> 'felem':'limb [4]' lvalue
|   |   |           |-ImplicitCastExpr 0x1653b520250 <col:55> 'felem *' <ArrayToPointerDecay>
|   |   |           | `-DeclRefExpr 0x1653b520208 <col:55> 'felem [4]' lvalue Var 0x1653b400a28 'tmp' 'felem [4]'
|   |   |           `-IntegerLiteral 0x1653b520228 <col:59> 'int' 2
|   |   `-IfStmt 0x1653b5126b0 <line:1180:9, line:1206:9>
|   |     |-BinaryOperator 0x1653b520620 <line:1180:13, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x1653b520608 <col:13> 'unsigned int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1653b520500 <col:13> 'const unsigned int' lvalue ParmVar 0x1653b3ffb80 'num_points' 'const unsigned int'
|   |     | `-ParenExpr 0x1653b5205e8 <col:27, col:38> 'int'
|   |     |   `-BinaryOperator 0x1653b5205c8 <col:28, col:37> 'int' '=='
|   |     |     |-BinaryOperator 0x1653b520580 <col:28, col:32> 'int' '%'
|   |     |     | |-ImplicitCastExpr 0x1653b520568 <col:28> 'int' <LValueToRValue>
|   |     |     | | `-DeclRefExpr 0x1653b520520 <col:28> 'int' lvalue Var 0x1653b4004b0 'i' 'int'
|   |     |     | `-IntegerLiteral 0x1653b520540 <col:32> 'int' 5
|   |     |     `-IntegerLiteral 0x1653b5205a0 <col:37> 'int' 0
|   |     `-CompoundStmt 0x1653b512698 <col:41, line:1206:9>
|   |       `-ForStmt 0x1653b512660 <line:1182:13, line:1205:13>
|   |         |-BinaryOperator 0x1653b5206b8 <line:1182:18, col:24> 'unsigned int' '='
|   |         | |-DeclRefExpr 0x1653b520640 <col:18> 'unsigned int' lvalue Var 0x1653b400640 'num' 'unsigned int'
|   |         | `-ImplicitCastExpr 0x1653b5206a0 <col:24> 'unsigned int' <IntegralCast>
|   |         |   `-IntegerLiteral 0x1653b520678 <col:24> 'int' 0
|   |         |-<<<NULL>>>
|   |         |-BinaryOperator 0x1653b520748 <col:27, col:33> 'int' '<'
|   |         | |-ImplicitCastExpr 0x1653b520718 <col:27> 'unsigned int' <LValueToRValue>
|   |         | | `-DeclRefExpr 0x1653b5206d8 <col:27> 'unsigned int' lvalue Var 0x1653b400640 'num' 'unsigned int'
|   |         | `-ImplicitCastExpr 0x1653b520730 <col:33> 'unsigned int' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x1653b5206f8 <col:33> 'const unsigned int' lvalue ParmVar 0x1653b3ffb80 'num_points' 'const unsigned int'
|   |         |-UnaryOperator 0x1653b520788 <col:45, col:47> 'unsigned int' prefix '++'
|   |         | `-DeclRefExpr 0x1653b520768 <col:47> 'unsigned int' lvalue Var 0x1653b400640 'num' 'unsigned int'
|   |         `-CompoundStmt 0x1653b5125f8 <col:52, line:1205:13>
|   |           |-BinaryOperator 0x1653b5209e0 <line:1183:17, col:56> 'u64':'unsigned long long' '='
|   |           | |-DeclRefExpr 0x1653b5207a0 <col:17> 'u64':'unsigned long long' lvalue Var 0x1653b400ad0 'bits' 'u64':'unsigned long long'
|   |           | `-ImplicitCastExpr 0x1653b5209c8 <col:24, col:56> 'u64':'unsigned long long' <IntegralCast>
|   |           |   `-BinaryOperator 0x1653b5209a8 <col:24, col:56> 'int' '<<'
|   |           |     |-ImplicitCastExpr 0x1653b520990 <col:24, col:51> 'int' <IntegralCast>
|   |           |     | `-CallExpr 0x1653b520908 <col:24, col:51> 'char'
|   |           |     |   |-ImplicitCastExpr 0x1653b5208f0 <col:24> 'char (*)(const u8 *, unsigned int)' <FunctionToPointerDecay>
|   |           |     |   | `-DeclRefExpr 0x1653b5207c0 <col:24> 'char (const u8 *, unsigned int)' Function 0x1653b3ff428 'get_bit' 'char (const u8 *, unsigned int)'
|   |           |     |   |-ImplicitCastExpr 0x1653b520938 <col:32, col:43> 'const u8 *' <ArrayToPointerDecay>
|   |           |     |   | `-ArraySubscriptExpr 0x1653b520850 <col:32, col:43> 'const felem_bytearray':'u8 const[28]' lvalue
|   |           |     |   |   |-ImplicitCastExpr 0x1653b520820 <col:32> 'const felem_bytearray *':'const felem_bytearray *' <LValueToRValue>
|   |           |     |   |   | `-DeclRefExpr 0x1653b5207e0 <col:32> 'const felem_bytearray *':'const felem_bytearray *' lvalue ParmVar 0x1653b3ffb00 'scalars' 'const felem_bytearray *':'const felem_bytearray *'
|   |           |     |   |   `-ImplicitCastExpr 0x1653b520838 <col:40> 'unsigned int' <LValueToRValue>
|   |           |     |   |     `-DeclRefExpr 0x1653b520800 <col:40> 'unsigned int' lvalue Var 0x1653b400640 'num' 'unsigned int'
|   |           |     |   `-ImplicitCastExpr 0x1653b520950 <col:46, col:50> 'unsigned int' <IntegralCast>
|   |           |     |     `-BinaryOperator 0x1653b5208d0 <col:46, col:50> 'int' '+'
|   |           |     |       |-ImplicitCastExpr 0x1653b5208b8 <col:46> 'int' <LValueToRValue>
|   |           |     |       | `-DeclRefExpr 0x1653b520870 <col:46> 'int' lvalue Var 0x1653b4004b0 'i' 'int'
|   |           |     |       `-IntegerLiteral 0x1653b520890 <col:50> 'int' 4
|   |           |     `-IntegerLiteral 0x1653b520968 <col:56> 'int' 5
|   |           |-CompoundAssignOperator 0x1653b520c40 <line:1184:17, col:57> 'u64':'unsigned long long' '|=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |           | |-DeclRefExpr 0x1653b520a00 <col:17> 'u64':'unsigned long long' lvalue Var 0x1653b400ad0 'bits' 'u64':'unsigned long long'
|   |           | `-ImplicitCastExpr 0x1653b520c28 <col:25, col:57> 'unsigned long long' <IntegralCast>
|   |           |   `-BinaryOperator 0x1653b520c08 <col:25, col:57> 'int' '<<'
|   |           |     |-ImplicitCastExpr 0x1653b520bf0 <col:25, col:52> 'int' <IntegralCast>
|   |           |     | `-CallExpr 0x1653b520b68 <col:25, col:52> 'char'
|   |           |     |   |-ImplicitCastExpr 0x1653b520b50 <col:25> 'char (*)(const u8 *, unsigned int)' <FunctionToPointerDecay>
|   |           |     |   | `-DeclRefExpr 0x1653b520a20 <col:25> 'char (const u8 *, unsigned int)' Function 0x1653b3ff428 'get_bit' 'char (const u8 *, unsigned int)'
|   |           |     |   |-ImplicitCastExpr 0x1653b520b98 <col:33, col:44> 'const u8 *' <ArrayToPointerDecay>
|   |           |     |   | `-ArraySubscriptExpr 0x1653b520ab0 <col:33, col:44> 'const felem_bytearray':'u8 const[28]' lvalue
|   |           |     |   |   |-ImplicitCastExpr 0x1653b520a80 <col:33> 'const felem_bytearray *':'const felem_bytearray *' <LValueToRValue>
|   |           |     |   |   | `-DeclRefExpr 0x1653b520a40 <col:33> 'const felem_bytearray *':'const felem_bytearray *' lvalue ParmVar 0x1653b3ffb00 'scalars' 'const felem_bytearray *':'const felem_bytearray *'
|   |           |     |   |   `-ImplicitCastExpr 0x1653b520a98 <col:41> 'unsigned int' <LValueToRValue>
|   |           |     |   |     `-DeclRefExpr 0x1653b520a60 <col:41> 'unsigned int' lvalue Var 0x1653b400640 'num' 'unsigned int'
|   |           |     |   `-ImplicitCastExpr 0x1653b520bb0 <col:47, col:51> 'unsigned int' <IntegralCast>
|   |           |     |     `-BinaryOperator 0x1653b520b30 <col:47, col:51> 'int' '+'
|   |           |     |       |-ImplicitCastExpr 0x1653b520b18 <col:47> 'int' <LValueToRValue>
|   |           |     |       | `-DeclRefExpr 0x1653b520ad0 <col:47> 'int' lvalue Var 0x1653b4004b0 'i' 'int'
|   |           |     |       `-IntegerLiteral 0x1653b520af0 <col:51> 'int' 3
|   |           |     `-IntegerLiteral 0x1653b520bc8 <col:57> 'int' 4
|   |           |-CompoundAssignOperator 0x1653b520eb0 <line:1185:17, col:57> 'u64':'unsigned long long' '|=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |           | |-DeclRefExpr 0x1653b520c70 <col:17> 'u64':'unsigned long long' lvalue Var 0x1653b400ad0 'bits' 'u64':'unsigned long long'
|   |           | `-ImplicitCastExpr 0x1653b520e98 <col:25, col:57> 'unsigned long long' <IntegralCast>
|   |           |   `-BinaryOperator 0x1653b520e78 <col:25, col:57> 'int' '<<'
|   |           |     |-ImplicitCastExpr 0x1653b520e60 <col:25, col:52> 'int' <IntegralCast>
|   |           |     | `-CallExpr 0x1653b520dd8 <col:25, col:52> 'char'
|   |           |     |   |-ImplicitCastExpr 0x1653b520dc0 <col:25> 'char (*)(const u8 *, unsigned int)' <FunctionToPointerDecay>
|   |           |     |   | `-DeclRefExpr 0x1653b520c90 <col:25> 'char (const u8 *, unsigned int)' Function 0x1653b3ff428 'get_bit' 'char (const u8 *, unsigned int)'
|   |           |     |   |-ImplicitCastExpr 0x1653b520e08 <col:33, col:44> 'const u8 *' <ArrayToPointerDecay>
|   |           |     |   | `-ArraySubscriptExpr 0x1653b520d20 <col:33, col:44> 'const felem_bytearray':'u8 const[28]' lvalue
|   |           |     |   |   |-ImplicitCastExpr 0x1653b520cf0 <col:33> 'const felem_bytearray *':'const felem_bytearray *' <LValueToRValue>
|   |           |     |   |   | `-DeclRefExpr 0x1653b520cb0 <col:33> 'const felem_bytearray *':'const felem_bytearray *' lvalue ParmVar 0x1653b3ffb00 'scalars' 'const felem_bytearray *':'const felem_bytearray *'
|   |           |     |   |   `-ImplicitCastExpr 0x1653b520d08 <col:41> 'unsigned int' <LValueToRValue>
|   |           |     |   |     `-DeclRefExpr 0x1653b520cd0 <col:41> 'unsigned int' lvalue Var 0x1653b400640 'num' 'unsigned int'
|   |           |     |   `-ImplicitCastExpr 0x1653b520e20 <col:47, col:51> 'unsigned int' <IntegralCast>
|   |           |     |     `-BinaryOperator 0x1653b520da0 <col:47, col:51> 'int' '+'
|   |           |     |       |-ImplicitCastExpr 0x1653b520d88 <col:47> 'int' <LValueToRValue>
|   |           |     |       | `-DeclRefExpr 0x1653b520d40 <col:47> 'int' lvalue Var 0x1653b4004b0 'i' 'int'
|   |           |     |       `-IntegerLiteral 0x1653b520d60 <col:51> 'int' 2
|   |           |     `-IntegerLiteral 0x1653b520e38 <col:57> 'int' 3
|   |           |-CompoundAssignOperator 0x1653b5110b0 <line:1186:17, col:57> 'u64':'unsigned long long' '|=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |           | |-DeclRefExpr 0x1653b520ee0 <col:17> 'u64':'unsigned long long' lvalue Var 0x1653b400ad0 'bits' 'u64':'unsigned long long'
|   |           | `-ImplicitCastExpr 0x1653b511098 <col:25, col:57> 'unsigned long long' <IntegralCast>
|   |           |   `-BinaryOperator 0x1653b511078 <col:25, col:57> 'int' '<<'
|   |           |     |-ImplicitCastExpr 0x1653b511060 <col:25, col:52> 'int' <IntegralCast>
|   |           |     | `-CallExpr 0x1653b510fd8 <col:25, col:52> 'char'
|   |           |     |   |-ImplicitCastExpr 0x1653b510fc0 <col:25> 'char (*)(const u8 *, unsigned int)' <FunctionToPointerDecay>
|   |           |     |   | `-DeclRefExpr 0x1653b520f00 <col:25> 'char (const u8 *, unsigned int)' Function 0x1653b3ff428 'get_bit' 'char (const u8 *, unsigned int)'
|   |           |     |   |-ImplicitCastExpr 0x1653b511008 <col:33, col:44> 'const u8 *' <ArrayToPointerDecay>
|   |           |     |   | `-ArraySubscriptExpr 0x1653b520f90 <col:33, col:44> 'const felem_bytearray':'u8 const[28]' lvalue
|   |           |     |   |   |-ImplicitCastExpr 0x1653b520f60 <col:33> 'const felem_bytearray *':'const felem_bytearray *' <LValueToRValue>
|   |           |     |   |   | `-DeclRefExpr 0x1653b520f20 <col:33> 'const felem_bytearray *':'const felem_bytearray *' lvalue ParmVar 0x1653b3ffb00 'scalars' 'const felem_bytearray *':'const felem_bytearray *'
|   |           |     |   |   `-ImplicitCastExpr 0x1653b520f78 <col:41> 'unsigned int' <LValueToRValue>
|   |           |     |   |     `-DeclRefExpr 0x1653b520f40 <col:41> 'unsigned int' lvalue Var 0x1653b400640 'num' 'unsigned int'
|   |           |     |   `-ImplicitCastExpr 0x1653b511020 <col:47, col:51> 'unsigned int' <IntegralCast>
|   |           |     |     `-BinaryOperator 0x1653b510fa0 <col:47, col:51> 'int' '+'
|   |           |     |       |-ImplicitCastExpr 0x1653b510f88 <col:47> 'int' <LValueToRValue>
|   |           |     |       | `-DeclRefExpr 0x1653b510f40 <col:47> 'int' lvalue Var 0x1653b4004b0 'i' 'int'
|   |           |     |       `-IntegerLiteral 0x1653b510f60 <col:51> 'int' 1
|   |           |     `-IntegerLiteral 0x1653b511038 <col:57> 'int' 2
|   |           |-CompoundAssignOperator 0x1653b5112d8 <line:1187:17, col:53> 'u64':'unsigned long long' '|=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |           | |-DeclRefExpr 0x1653b5110e0 <col:17> 'u64':'unsigned long long' lvalue Var 0x1653b400ad0 'bits' 'u64':'unsigned long long'
|   |           | `-ImplicitCastExpr 0x1653b5112c0 <col:25, col:53> 'unsigned long long' <IntegralCast>
|   |           |   `-BinaryOperator 0x1653b5112a0 <col:25, col:53> 'int' '<<'
|   |           |     |-ImplicitCastExpr 0x1653b511288 <col:25, col:48> 'int' <IntegralCast>
|   |           |     | `-CallExpr 0x1653b5111e8 <col:25, col:48> 'char'
|   |           |     |   |-ImplicitCastExpr 0x1653b5111d0 <col:25> 'char (*)(const u8 *, unsigned int)' <FunctionToPointerDecay>
|   |           |     |   | `-DeclRefExpr 0x1653b511100 <col:25> 'char (const u8 *, unsigned int)' Function 0x1653b3ff428 'get_bit' 'char (const u8 *, unsigned int)'
|   |           |     |   |-ImplicitCastExpr 0x1653b511218 <col:33, col:44> 'const u8 *' <ArrayToPointerDecay>
|   |           |     |   | `-ArraySubscriptExpr 0x1653b511190 <col:33, col:44> 'const felem_bytearray':'u8 const[28]' lvalue
|   |           |     |   |   |-ImplicitCastExpr 0x1653b511160 <col:33> 'const felem_bytearray *':'const felem_bytearray *' <LValueToRValue>
|   |           |     |   |   | `-DeclRefExpr 0x1653b511120 <col:33> 'const felem_bytearray *':'const felem_bytearray *' lvalue ParmVar 0x1653b3ffb00 'scalars' 'const felem_bytearray *':'const felem_bytearray *'
|   |           |     |   |   `-ImplicitCastExpr 0x1653b511178 <col:41> 'unsigned int' <LValueToRValue>
|   |           |     |   |     `-DeclRefExpr 0x1653b511140 <col:41> 'unsigned int' lvalue Var 0x1653b400640 'num' 'unsigned int'
|   |           |     |   `-ImplicitCastExpr 0x1653b511248 <col:47> 'unsigned int' <IntegralCast>
|   |           |     |     `-ImplicitCastExpr 0x1653b511230 <col:47> 'int' <LValueToRValue>
|   |           |     |       `-DeclRefExpr 0x1653b5111b0 <col:47> 'int' lvalue Var 0x1653b4004b0 'i' 'int'
|   |           |     `-IntegerLiteral 0x1653b511260 <col:53> 'int' 1
|   |           |-CompoundAssignOperator 0x1653b5114e8 <line:1188:17, col:52> 'u64':'unsigned long long' '|=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |           | |-DeclRefExpr 0x1653b511308 <col:17> 'u64':'unsigned long long' lvalue Var 0x1653b400ad0 'bits' 'u64':'unsigned long long'
|   |           | `-ImplicitCastExpr 0x1653b5114d0 <col:25, col:52> 'unsigned long long' <IntegralCast>
|   |           |   `-CallExpr 0x1653b511470 <col:25, col:52> 'char'
|   |           |     |-ImplicitCastExpr 0x1653b511458 <col:25> 'char (*)(const u8 *, unsigned int)' <FunctionToPointerDecay>
|   |           |     | `-DeclRefExpr 0x1653b511328 <col:25> 'char (const u8 *, unsigned int)' Function 0x1653b3ff428 'get_bit' 'char (const u8 *, unsigned int)'
|   |           |     |-ImplicitCastExpr 0x1653b5114a0 <col:33, col:44> 'const u8 *' <ArrayToPointerDecay>
|   |           |     | `-ArraySubscriptExpr 0x1653b5113b8 <col:33, col:44> 'const felem_bytearray':'u8 const[28]' lvalue
|   |           |     |   |-ImplicitCastExpr 0x1653b511388 <col:33> 'const felem_bytearray *':'const felem_bytearray *' <LValueToRValue>
|   |           |     |   | `-DeclRefExpr 0x1653b511348 <col:33> 'const felem_bytearray *':'const felem_bytearray *' lvalue ParmVar 0x1653b3ffb00 'scalars' 'const felem_bytearray *':'const felem_bytearray *'
|   |           |     |   `-ImplicitCastExpr 0x1653b5113a0 <col:41> 'unsigned int' <LValueToRValue>
|   |           |     |     `-DeclRefExpr 0x1653b511368 <col:41> 'unsigned int' lvalue Var 0x1653b400640 'num' 'unsigned int'
|   |           |     `-ImplicitCastExpr 0x1653b5114b8 <col:47, col:51> 'unsigned int' <IntegralCast>
|   |           |       `-BinaryOperator 0x1653b511438 <col:47, col:51> 'int' '-'
|   |           |         |-ImplicitCastExpr 0x1653b511420 <col:47> 'int' <LValueToRValue>
|   |           |         | `-DeclRefExpr 0x1653b5113d8 <col:47> 'int' lvalue Var 0x1653b4004b0 'i' 'int'
|   |           |         `-IntegerLiteral 0x1653b5113f8 <col:51> 'int' 1
|   |           |-CallExpr 0x1653b511640 <line:1189:17, col:68> 'void'
|   |           | |-ImplicitCastExpr 0x1653b511628 <col:17> 'void (*)(unsigned char *, unsigned char *, unsigned char)' <FunctionToPointerDecay>
|   |           | | `-DeclRefExpr 0x1653b511518 <col:17> 'void (unsigned char *, unsigned char *, unsigned char)' Function 0x1653b39d1c8 'ec_GFp_nistp_recode_scalar_bits' 'void (unsigned char *, unsigned char *, unsigned char)'
|   |           | |-UnaryOperator 0x1653b511570 <col:49, col:50> 'u8 *' prefix '&' cannot overflow
|   |           | | `-DeclRefExpr 0x1653b511538 <col:50> 'u8':'unsigned char' lvalue Var 0x1653b400b60 'sign' 'u8':'unsigned char'
|   |           | |-UnaryOperator 0x1653b5115c0 <col:56, col:57> 'u8 *' prefix '&' cannot overflow
|   |           | | `-DeclRefExpr 0x1653b511588 <col:57> 'u8':'unsigned char' lvalue Var 0x1653b400bd8 'digit' 'u8':'unsigned char'
|   |           | `-ImplicitCastExpr 0x1653b511690 <col:64> 'unsigned char' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x1653b511678 <col:64> 'u64':'unsigned long long' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x1653b5115d8 <col:64> 'u64':'unsigned long long' lvalue Var 0x1653b400ad0 'bits' 'u64':'unsigned long long'
|   |           |-CallExpr 0x1653b5117d8 <line:1192:17, col:59> 'void'
|   |           | |-ImplicitCastExpr 0x1653b5117c0 <col:17> 'void (*)(const u64, unsigned int, const felem (*)[3], felem *)' <FunctionToPointerDecay>
|   |           | | `-DeclRefExpr 0x1653b5116a8 <col:17> 'void (const u64, unsigned int, const felem (*)[3], felem *)' Function 0x1653b3fdfa8 'select_point' 'void (const u64, unsigned int, const felem (*)[3], felem *)'
|   |           | |-ImplicitCastExpr 0x1653b511830 <col:30> 'u64':'unsigned long long' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x1653b511818 <col:30> 'u8':'unsigned char' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x1653b5116c8 <col:30> 'u8':'unsigned char' lvalue Var 0x1653b400bd8 'digit' 'u8':'unsigned char'
|   |           | |-ImplicitCastExpr 0x1653b511848 <col:37> 'unsigned int' <IntegralCast>
|   |           | | `-IntegerLiteral 0x1653b5116e8 <col:37> 'int' 17
|   |           | |-ImplicitCastExpr 0x1653b511860 <col:41, col:53> 'const felem (*)[3]' <ArrayToPointerDecay>
|   |           | | `-ArraySubscriptExpr 0x1653b511780 <col:41, col:53> 'const felem [17][3]' lvalue
|   |           | |   |-ImplicitCastExpr 0x1653b511750 <col:41> 'const felem (*)[17][3]':'const felem (*)[17][3]' <LValueToRValue>
|   |           | |   | `-DeclRefExpr 0x1653b511710 <col:41> 'const felem (*)[17][3]':'const felem (*)[17][3]' lvalue ParmVar 0x1653b3fff10 'pre_comp' 'const felem (*)[17][3]':'const felem (*)[17][3]'
|   |           | |   `-ImplicitCastExpr 0x1653b511768 <col:50> 'unsigned int' <LValueToRValue>
|   |           | |     `-DeclRefExpr 0x1653b511730 <col:50> 'unsigned int' lvalue Var 0x1653b400640 'num' 'unsigned int'
|   |           | `-ImplicitCastExpr 0x1653b511878 <col:56> 'felem *' <ArrayToPointerDecay>
|   |           |   `-DeclRefExpr 0x1653b5117a0 <col:56> 'felem [4]' lvalue Var 0x1653b400a28 'tmp' 'felem [4]'
|   |           |-CallExpr 0x1653b5119c8 <line:1193:17, col:41> 'void'
|   |           | |-ImplicitCastExpr 0x1653b5119b0 <col:17> 'void (*)(limb *, const limb *)' <FunctionToPointerDecay>
|   |           | | `-DeclRefExpr 0x1653b511890 <col:17> 'void (limb *, const limb *)' Function 0x1653b2fd790 'felem_neg' 'void (limb *, const limb *)'
|   |           | |-ImplicitCastExpr 0x1653b5119f8 <col:27, col:32> 'limb *' <ArrayToPointerDecay>
|   |           | | `-ArraySubscriptExpr 0x1653b511910 <col:27, col:32> 'felem':'limb [4]' lvalue
|   |           | |   |-ImplicitCastExpr 0x1653b5118f8 <col:27> 'felem *' <ArrayToPointerDecay>
|   |           | |   | `-DeclRefExpr 0x1653b5118b0 <col:27> 'felem [4]' lvalue Var 0x1653b400a28 'tmp' 'felem [4]'
|   |           | |   `-IntegerLiteral 0x1653b5118d0 <col:31> 'int' 3
|   |           | `-ImplicitCastExpr 0x1653b511a28 <col:35, col:40> 'const limb *':'const limb *' <NoOp>
|   |           |   `-ImplicitCastExpr 0x1653b511a10 <col:35, col:40> 'limb *' <ArrayToPointerDecay>
|   |           |     `-ArraySubscriptExpr 0x1653b511990 <col:35, col:40> 'felem':'limb [4]' lvalue
|   |           |       |-ImplicitCastExpr 0x1653b511978 <col:35> 'felem *' <ArrayToPointerDecay>
|   |           |       | `-DeclRefExpr 0x1653b511930 <col:35> 'felem [4]' lvalue Var 0x1653b400a28 'tmp' 'felem [4]'
|   |           |       `-IntegerLiteral 0x1653b511950 <col:39> 'int' 1
|   |           |-CallExpr 0x1653b511b98 <line:1195:17, col:54> 'void'
|   |           | |-ImplicitCastExpr 0x1653b511b80 <col:17> 'void (*)(limb *, const limb *, limb)' <FunctionToPointerDecay>
|   |           | | `-DeclRefExpr 0x1653b511a40 <col:17> 'void (limb *, const limb *, limb)' Function 0x1653b3f36b8 'copy_conditional' 'void (limb *, const limb *, limb)'
|   |           | |-ImplicitCastExpr 0x1653b511bd0 <col:34, col:39> 'limb *' <ArrayToPointerDecay>
|   |           | | `-ArraySubscriptExpr 0x1653b511ac0 <col:34, col:39> 'felem':'limb [4]' lvalue
|   |           | |   |-ImplicitCastExpr 0x1653b511aa8 <col:34> 'felem *' <ArrayToPointerDecay>
|   |           | |   | `-DeclRefExpr 0x1653b511a60 <col:34> 'felem [4]' lvalue Var 0x1653b400a28 'tmp' 'felem [4]'
|   |           | |   `-IntegerLiteral 0x1653b511a80 <col:38> 'int' 1
|   |           | |-ImplicitCastExpr 0x1653b511c00 <col:42, col:47> 'const limb *':'const limb *' <NoOp>
|   |           | | `-ImplicitCastExpr 0x1653b511be8 <col:42, col:47> 'limb *' <ArrayToPointerDecay>
|   |           | |   `-ArraySubscriptExpr 0x1653b511b40 <col:42, col:47> 'felem':'limb [4]' lvalue
|   |           | |     |-ImplicitCastExpr 0x1653b511b28 <col:42> 'felem *' <ArrayToPointerDecay>
|   |           | |     | `-DeclRefExpr 0x1653b511ae0 <col:42> 'felem [4]' lvalue Var 0x1653b400a28 'tmp' 'felem [4]'
|   |           | |     `-IntegerLiteral 0x1653b511b00 <col:46> 'int' 3
|   |           | `-ImplicitCastExpr 0x1653b511c30 <col:50> 'limb':'unsigned long long' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x1653b511c18 <col:50> 'u8':'unsigned char' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x1653b511b60 <col:50> 'u8':'unsigned char' lvalue Var 0x1653b400b60 'sign' 'u8':'unsigned char'
|   |           `-IfStmt 0x1653b5125d0 <line:1197:17, line:1204:17> has_else
|   |             |-UnaryOperator 0x1653b511c80 <line:1197:21, col:22> 'int' prefix '!' cannot overflow
|   |             | `-ImplicitCastExpr 0x1653b511c68 <col:22> 'int' <LValueToRValue>
|   |             |   `-DeclRefExpr 0x1653b511c48 <col:22> 'int' lvalue Var 0x1653b400590 'skip' 'int'
|   |             |-CompoundStmt 0x1653b512360 <col:28, line:1201:17>
|   |             | `-CallExpr 0x1653b512170 <line:1198:21, line:1200:60> 'void'
|   |             |   |-ImplicitCastExpr 0x1653b512158 <line:1198:21> 'void (*)(limb *, limb *, limb *, const limb *, const limb *, const limb *, const int, const limb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   |             |   | `-DeclRefExpr 0x1653b511c98 <col:21> 'void (limb *, limb *, limb *, const limb *, const limb *, const limb *, const int, const limb *, const limb *, const limb *)' Function 0x1653b3fb0b8 'point_add' 'void (limb *, limb *, limb *, const limb *, const limb *, const limb *, const int, const limb *, const limb *, const limb *)'
|   |             |   |-ImplicitCastExpr 0x1653b5121e0 <col:31, col:35> 'limb *' <ArrayToPointerDecay>
|   |             |   | `-ArraySubscriptExpr 0x1653b511d18 <col:31, col:35> 'felem':'limb [4]' lvalue
|   |             |   |   |-ImplicitCastExpr 0x1653b511d00 <col:31> 'felem *' <ArrayToPointerDecay>
|   |             |   |   | `-DeclRefExpr 0x1653b511cb8 <col:31> 'felem [3]' lvalue Var 0x1653b4008e8 'nq' 'felem [3]'
|   |             |   |   `-IntegerLiteral 0x1653b511cd8 <col:34> 'int' 0
|   |             |   |-ImplicitCastExpr 0x1653b5121f8 <col:38, col:42> 'limb *' <ArrayToPointerDecay>
|   |             |   | `-ArraySubscriptExpr 0x1653b511d98 <col:38, col:42> 'felem':'limb [4]' lvalue
|   |             |   |   |-ImplicitCastExpr 0x1653b511d80 <col:38> 'felem *' <ArrayToPointerDecay>
|   |             |   |   | `-DeclRefExpr 0x1653b511d38 <col:38> 'felem [3]' lvalue Var 0x1653b4008e8 'nq' 'felem [3]'
|   |             |   |   `-IntegerLiteral 0x1653b511d58 <col:41> 'int' 1
|   |             |   |-ImplicitCastExpr 0x1653b512210 <col:45, col:49> 'limb *' <ArrayToPointerDecay>
|   |             |   | `-ArraySubscriptExpr 0x1653b511e18 <col:45, col:49> 'felem':'limb [4]' lvalue
|   |             |   |   |-ImplicitCastExpr 0x1653b511e00 <col:45> 'felem *' <ArrayToPointerDecay>
|   |             |   |   | `-DeclRefExpr 0x1653b511db8 <col:45> 'felem [3]' lvalue Var 0x1653b4008e8 'nq' 'felem [3]'
|   |             |   |   `-IntegerLiteral 0x1653b511dd8 <col:48> 'int' 2
|   |             |   |-ImplicitCastExpr 0x1653b512240 <line:1199:31, col:35> 'const limb *':'const limb *' <NoOp>
|   |             |   | `-ImplicitCastExpr 0x1653b512228 <col:31, col:35> 'limb *' <ArrayToPointerDecay>
|   |             |   |   `-ArraySubscriptExpr 0x1653b511e98 <col:31, col:35> 'felem':'limb [4]' lvalue
|   |             |   |     |-ImplicitCastExpr 0x1653b511e80 <col:31> 'felem *' <ArrayToPointerDecay>
|   |             |   |     | `-DeclRefExpr 0x1653b511e38 <col:31> 'felem [3]' lvalue Var 0x1653b4008e8 'nq' 'felem [3]'
|   |             |   |     `-IntegerLiteral 0x1653b511e58 <col:34> 'int' 0
|   |             |   |-ImplicitCastExpr 0x1653b512270 <col:38, col:42> 'const limb *':'const limb *' <NoOp>
|   |             |   | `-ImplicitCastExpr 0x1653b512258 <col:38, col:42> 'limb *' <ArrayToPointerDecay>
|   |             |   |   `-ArraySubscriptExpr 0x1653b511f18 <col:38, col:42> 'felem':'limb [4]' lvalue
|   |             |   |     |-ImplicitCastExpr 0x1653b511f00 <col:38> 'felem *' <ArrayToPointerDecay>
|   |             |   |     | `-DeclRefExpr 0x1653b511eb8 <col:38> 'felem [3]' lvalue Var 0x1653b4008e8 'nq' 'felem [3]'
|   |             |   |     `-IntegerLiteral 0x1653b511ed8 <col:41> 'int' 1
|   |             |   |-ImplicitCastExpr 0x1653b5122a0 <col:45, col:49> 'const limb *':'const limb *' <NoOp>
|   |             |   | `-ImplicitCastExpr 0x1653b512288 <col:45, col:49> 'limb *' <ArrayToPointerDecay>
|   |             |   |   `-ArraySubscriptExpr 0x1653b511f98 <col:45, col:49> 'felem':'limb [4]' lvalue
|   |             |   |     |-ImplicitCastExpr 0x1653b511f80 <col:45> 'felem *' <ArrayToPointerDecay>
|   |             |   |     | `-DeclRefExpr 0x1653b511f38 <col:45> 'felem [3]' lvalue Var 0x1653b4008e8 'nq' 'felem [3]'
|   |             |   |     `-IntegerLiteral 0x1653b511f58 <col:48> 'int' 2
|   |             |   |-ImplicitCastExpr 0x1653b5122b8 <line:1200:31> 'int' <LValueToRValue>
|   |             |   | `-DeclRefExpr 0x1653b511fb8 <col:31> 'const int' lvalue ParmVar 0x1653b3ffc78 'mixed' 'const int'
|   |             |   |-ImplicitCastExpr 0x1653b5122e8 <col:38, col:43> 'const limb *':'const limb *' <NoOp>
|   |             |   | `-ImplicitCastExpr 0x1653b5122d0 <col:38, col:43> 'limb *' <ArrayToPointerDecay>
|   |             |   |   `-ArraySubscriptExpr 0x1653b512038 <col:38, col:43> 'felem':'limb [4]' lvalue
|   |             |   |     |-ImplicitCastExpr 0x1653b512020 <col:38> 'felem *' <ArrayToPointerDecay>
|   |             |   |     | `-DeclRefExpr 0x1653b511fd8 <col:38> 'felem [4]' lvalue Var 0x1653b400a28 'tmp' 'felem [4]'
|   |             |   |     `-IntegerLiteral 0x1653b511ff8 <col:42> 'int' 0
|   |             |   |-ImplicitCastExpr 0x1653b512318 <col:46, col:51> 'const limb *':'const limb *' <NoOp>
|   |             |   | `-ImplicitCastExpr 0x1653b512300 <col:46, col:51> 'limb *' <ArrayToPointerDecay>
|   |             |   |   `-ArraySubscriptExpr 0x1653b5120b8 <col:46, col:51> 'felem':'limb [4]' lvalue
|   |             |   |     |-ImplicitCastExpr 0x1653b5120a0 <col:46> 'felem *' <ArrayToPointerDecay>
|   |             |   |     | `-DeclRefExpr 0x1653b512058 <col:46> 'felem [4]' lvalue Var 0x1653b400a28 'tmp' 'felem [4]'
|   |             |   |     `-IntegerLiteral 0x1653b512078 <col:50> 'int' 1
|   |             |   `-ImplicitCastExpr 0x1653b512348 <col:54, col:59> 'const limb *':'const limb *' <NoOp>
|   |             |     `-ImplicitCastExpr 0x1653b512330 <col:54, col:59> 'limb *' <ArrayToPointerDecay>
|   |             |       `-ArraySubscriptExpr 0x1653b512138 <col:54, col:59> 'felem':'limb [4]' lvalue
|   |             |         |-ImplicitCastExpr 0x1653b512120 <col:54> 'felem *' <ArrayToPointerDecay>
|   |             |         | `-DeclRefExpr 0x1653b5120d8 <col:54> 'felem [4]' lvalue Var 0x1653b400a28 'tmp' 'felem [4]'
|   |             |         `-IntegerLiteral 0x1653b5120f8 <col:58> 'int' 2
|   |             `-CompoundStmt 0x1653b5125b0 <line:1201:24, line:1204:17>
|   |               |-CallExpr 0x1653b5124b0 <line:1202:21, col:54> 'void *'
|   |               | |-ImplicitCastExpr 0x1653b512498 <col:21> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   |               | | `-DeclRefExpr 0x1653b512378 <col:21> 'void *(void *, const void *, unsigned long long)' Function 0x1653b2b7768 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   |               | |-ImplicitCastExpr 0x1653b512500 <col:28> 'void *' <BitCast>
|   |               | | `-ImplicitCastExpr 0x1653b5124e8 <col:28> 'felem *' <ArrayToPointerDecay>
|   |               | |   `-DeclRefExpr 0x1653b512398 <col:28> 'felem [3]' lvalue Var 0x1653b4008e8 'nq' 'felem [3]'
|   |               | |-ImplicitCastExpr 0x1653b512530 <col:32> 'const void *' <BitCast>
|   |               | | `-ImplicitCastExpr 0x1653b512518 <col:32> 'felem *' <ArrayToPointerDecay>
|   |               | |   `-DeclRefExpr 0x1653b5123b8 <col:32> 'felem [4]' lvalue Var 0x1653b400a28 'tmp' 'felem [4]'
|   |               | `-BinaryOperator 0x1653b512448 <col:37, col:53> 'unsigned long long' '*'
|   |               |   |-ImplicitCastExpr 0x1653b512430 <col:37> 'unsigned long long' <IntegralCast>
|   |               |   | `-IntegerLiteral 0x1653b5123d8 <col:37> 'int' 3
|   |               |   `-UnaryExprOrTypeTraitExpr 0x1653b512410 <col:41, col:53> 'unsigned long long' sizeof 'felem':'limb [4]'
|   |               `-BinaryOperator 0x1653b512590 <line:1203:21, col:28> 'int' '='
|   |                 |-DeclRefExpr 0x1653b512548 <col:21> 'int' lvalue Var 0x1653b400590 'skip' 'int'
|   |                 `-IntegerLiteral 0x1653b512568 <col:28> 'int' 0
|   |-CallExpr 0x1653b512800 <line:1208:5, col:30> 'void'
|   | |-ImplicitCastExpr 0x1653b5127e8 <col:5> 'void (*)(limb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b512728 <col:5> 'void (limb *, const limb *)' Function 0x1653b2fc8d8 'felem_assign' 'void (limb *, const limb *)'
|   | |-ImplicitCastExpr 0x1653b512830 <col:18> 'limb *':'limb *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1653b512748 <col:18> 'limb *':'limb *' lvalue ParmVar 0x1653b3ff890 'x_out' 'limb *':'limb *'
|   | `-ImplicitCastExpr 0x1653b512860 <col:25, col:29> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b512848 <col:25, col:29> 'limb *' <ArrayToPointerDecay>
|   |     `-ArraySubscriptExpr 0x1653b5127c8 <col:25, col:29> 'felem':'limb [4]' lvalue
|   |       |-ImplicitCastExpr 0x1653b5127b0 <col:25> 'felem *' <ArrayToPointerDecay>
|   |       | `-DeclRefExpr 0x1653b512768 <col:25> 'felem [3]' lvalue Var 0x1653b4008e8 'nq' 'felem [3]'
|   |       `-IntegerLiteral 0x1653b512788 <col:28> 'int' 0
|   |-CallExpr 0x1653b512950 <line:1209:5, col:30> 'void'
|   | |-ImplicitCastExpr 0x1653b512938 <col:5> 'void (*)(limb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b512878 <col:5> 'void (limb *, const limb *)' Function 0x1653b2fc8d8 'felem_assign' 'void (limb *, const limb *)'
|   | |-ImplicitCastExpr 0x1653b512980 <col:18> 'limb *':'limb *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1653b512898 <col:18> 'limb *':'limb *' lvalue ParmVar 0x1653b3ff908 'y_out' 'limb *':'limb *'
|   | `-ImplicitCastExpr 0x1653b5129b0 <col:25, col:29> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b512998 <col:25, col:29> 'limb *' <ArrayToPointerDecay>
|   |     `-ArraySubscriptExpr 0x1653b512918 <col:25, col:29> 'felem':'limb [4]' lvalue
|   |       |-ImplicitCastExpr 0x1653b512900 <col:25> 'felem *' <ArrayToPointerDecay>
|   |       | `-DeclRefExpr 0x1653b5128b8 <col:25> 'felem [3]' lvalue Var 0x1653b4008e8 'nq' 'felem [3]'
|   |       `-IntegerLiteral 0x1653b5128d8 <col:28> 'int' 1
|   `-CallExpr 0x1653b512aa0 <line:1210:5, col:30> 'void'
|     |-ImplicitCastExpr 0x1653b512a88 <col:5> 'void (*)(limb *, const limb *)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x1653b5129c8 <col:5> 'void (limb *, const limb *)' Function 0x1653b2fc8d8 'felem_assign' 'void (limb *, const limb *)'
|     |-ImplicitCastExpr 0x1653b512ad0 <col:18> 'limb *':'limb *' <LValueToRValue>
|     | `-DeclRefExpr 0x1653b5129e8 <col:18> 'limb *':'limb *' lvalue ParmVar 0x1653b3ff980 'z_out' 'limb *':'limb *'
|     `-ImplicitCastExpr 0x1653b512b00 <col:25, col:29> 'const limb *':'const limb *' <NoOp>
|       `-ImplicitCastExpr 0x1653b512ae8 <col:25, col:29> 'limb *' <ArrayToPointerDecay>
|         `-ArraySubscriptExpr 0x1653b512a68 <col:25, col:29> 'felem':'limb [4]' lvalue
|           |-ImplicitCastExpr 0x1653b512a50 <col:25> 'felem *' <ArrayToPointerDecay>
|           | `-DeclRefExpr 0x1653b512a08 <col:25> 'felem [3]' lvalue Var 0x1653b4008e8 'nq' 'felem [3]'
|           `-IntegerLiteral 0x1653b512a28 <col:28> 'int' 2
|-FunctionDecl 0x1653b512c38 <line:1218:1, line:1236:1> line:1218:27 used nistp224_pre_comp_new 'NISTP224_PRE_COMP *()' static
| |-CompoundStmt 0x1653b51b6e0 <line:1219:1, line:1236:1>
| | |-DeclStmt 0x1653b51afe8 <line:1220:5, col:58>
| | | `-VarDecl 0x1653b512d00 <col:5, col:57> col:24 used ret 'NISTP224_PRE_COMP *' cinit
| | |   `-ImplicitCastExpr 0x1653b51afd0 <col:30, col:57> 'NISTP224_PRE_COMP *' <IntegralToPointer>
| | |     `-CallExpr 0x1653b51afa8 <col:30, col:57> 'int'
| | |       |-ImplicitCastExpr 0x1653b51af90 <col:30> 'int (*)()' <FunctionToPointerDecay>
| | |       | `-DeclRefExpr 0x1653b512e58 <col:30> 'int ()' Function 0x1653b512d90 'OPENSSL_zalloc' 'int ()'
| | |       `-UnaryExprOrTypeTraitExpr 0x1653b512ee8 <col:45, col:56> 'unsigned long long' sizeof
| | |         `-ParenExpr 0x1653b512ec8 <col:51, col:56> 'NISTP224_PRE_COMP':'struct nistp224_pre_comp_st' lvalue
| | |           `-UnaryOperator 0x1653b512eb0 <col:52, col:53> 'NISTP224_PRE_COMP':'struct nistp224_pre_comp_st' lvalue prefix '*' cannot overflow
| | |             `-ImplicitCastExpr 0x1653b512e98 <col:53> 'NISTP224_PRE_COMP *' <LValueToRValue>
| | |               `-DeclRefExpr 0x1653b512e78 <col:53> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b512d00 'ret' 'NISTP224_PRE_COMP *' non_odr_use_unevaluated
| | |-IfStmt 0x1653b51b0e8 <line:1222:5, line:1225:5>
| | | |-UnaryOperator 0x1653b51b050 <line:1222:9, col:10> 'int' prefix '!' cannot overflow
| | | | `-ImplicitCastExpr 0x1653b51b038 <col:10> 'NISTP224_PRE_COMP *' <LValueToRValue>
| | | |   `-DeclRefExpr 0x1653b51b000 <col:10> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b512d00 'ret' 'NISTP224_PRE_COMP *'
| | | `-CompoundStmt 0x1653b51b0d0 <col:15, line:1225:5>
| | |   `-ReturnStmt 0x1653b51b0c0 <line:1224:9, col:16>
| | |     `-ImplicitCastExpr 0x1653b51b0a8 <col:16> 'NISTP224_PRE_COMP *' <LValueToRValue>
| | |       `-DeclRefExpr 0x1653b51b088 <col:16> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b512d00 'ret' 'NISTP224_PRE_COMP *'
| | |-BinaryOperator 0x1653b51b190 <line:1227:5, col:23> 'int' '='
| | | |-MemberExpr 0x1653b51b138 <col:5, col:10> 'int' lvalue ->references 0x1653b2f7eb8
| | | | `-ImplicitCastExpr 0x1653b51b120 <col:5> 'NISTP224_PRE_COMP *' <LValueToRValue>
| | | |   `-DeclRefExpr 0x1653b51b100 <col:5> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b512d00 'ret' 'NISTP224_PRE_COMP *'
| | | `-IntegerLiteral 0x1653b51b168 <col:23> 'int' 1
| | |-IfStmt 0x1653b51b680 <line:1230:5, line:1234:5>
| | | |-OpaqueValueExpr 0x1653b51b668 <<invalid sloc>> '_Bool'
| | | `-CompoundStmt 0x1653b51b648 <line:1230:28, line:1234:5>
| | |   |-CallExpr 0x1653b51b558 <line:1232:9, col:25> 'int'
| | |   | |-ImplicitCastExpr 0x1653b51b540 <col:9> 'int (*)()' <FunctionToPointerDecay>
| | |   | | `-DeclRefExpr 0x1653b51b500 <col:9> 'int ()' Function 0x1653b51b438 'OPENSSL_free' 'int ()'
| | |   | `-ImplicitCastExpr 0x1653b51b580 <col:22> 'NISTP224_PRE_COMP *' <LValueToRValue>
| | |   |   `-DeclRefExpr 0x1653b51b520 <col:22> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b512d00 'ret' 'NISTP224_PRE_COMP *'
| | |   `-ReturnStmt 0x1653b51b638 <line:1233:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
| | |     `-ImplicitCastExpr 0x1653b51b620 <col:17, col:27> 'NISTP224_PRE_COMP *' <NullToPointer>
| | |       `-ParenExpr 0x1653b51b600 <col:17, col:27> 'void *'
| | |         `-CStyleCastExpr 0x1653b51b5d8 <col:18, col:26> 'void *' <NullToPointer>
| | |           `-IntegerLiteral 0x1653b51b598 <col:26> 'int' 0
| | `-ReturnStmt 0x1653b51b6d0 <.//openssl//file_jk/before\crypto\ec\ecp_nistp224.c:1235:5, col:12>
| |   `-ImplicitCastExpr 0x1653b51b6b8 <col:12> 'NISTP224_PRE_COMP *' <LValueToRValue>
| |     `-DeclRefExpr 0x1653b51b698 <col:12> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b512d00 'ret' 'NISTP224_PRE_COMP *'
| `-FullComment 0x1653b52aa90 <line:1213:4, col:78>
|   `-ParagraphComment 0x1653b52aa68 <col:4, col:78>
|     `-TextComment 0x1653b52aa40 <col:4, col:78> Text="***************************************************************************"
|-FunctionDecl 0x1653b51b7d0 prev 0x1653b382db8 <line:1238:1, line:1244:1> line:1238:20 EC_nistp224_pre_comp_dup 'NISTP224_PRE_COMP *(NISTP224_PRE_COMP *)'
| |-ParmVarDecl 0x1653b51b728 <col:45, col:64> col:64 used p 'NISTP224_PRE_COMP *'
| `-CompoundStmt 0x1653b51bc90 <line:1239:1, line:1244:1>
|   |-DeclStmt 0x1653b51b8f8 <line:1240:5, col:10>
|   | `-VarDecl 0x1653b51b890 <col:5, col:9> col:9 used i 'int'
|   `-ReturnStmt 0x1653b51bc80 <line:1243:5, col:12>
|     `-ImplicitCastExpr 0x1653b51bc68 <col:12> 'NISTP224_PRE_COMP *' <LValueToRValue>
|       `-DeclRefExpr 0x1653b51bc48 <col:12> 'NISTP224_PRE_COMP *' lvalue ParmVar 0x1653b51b728 'p' 'NISTP224_PRE_COMP *'
|-FunctionDecl 0x1653b51bd68 prev 0x1653b383918 <line:1246:1, line:1261:1> line:1246:6 used EC_nistp224_pre_comp_free 'void (NISTP224_PRE_COMP *)'
| |-ParmVarDecl 0x1653b51bcc0 <col:32, col:51> col:51 used p 'NISTP224_PRE_COMP *'
| `-CompoundStmt 0x1653b51c728 <line:1247:1, line:1261:1>
|   |-DeclStmt 0x1653b51be90 <line:1248:5, col:10>
|   | `-VarDecl 0x1653b51be28 <col:5, col:9> col:9 used i 'int'
|   |-IfStmt 0x1653b51bfb0 <line:1250:5, line:1251:9>
|   | |-BinaryOperator 0x1653b51bf80 <line:1250:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x1653b51bf50 <.//openssl//file_jk/before\crypto\ec\ecp_nistp224.c:1250:9> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b51bea8 <col:9> 'NISTP224_PRE_COMP *' lvalue ParmVar 0x1653b51bcc0 'p' 'NISTP224_PRE_COMP *'
|   | | `-ImplicitCastExpr 0x1653b51bf68 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'NISTP224_PRE_COMP *' <BitCast>
|   | |   `-ParenExpr 0x1653b51bf30 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1653b51bf08 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1653b51bec8 <col:26> 'int' 0
|   | `-ReturnStmt 0x1653b51bfa0 <.//openssl//file_jk/before\crypto\ec\ecp_nistp224.c:1251:9>
|   |-IfStmt 0x1653b51c330 <line:1255:5, line:1256:9>
|   | |-BinaryOperator 0x1653b51c300 <line:1255:9, col:13> 'int' '>'
|   | | |-ImplicitCastExpr 0x1653b51c2e8 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b51c2a0 <col:9> 'int' lvalue Var 0x1653b51be28 'i' 'int'
|   | | `-IntegerLiteral 0x1653b51c2c0 <col:13> 'int' 0
|   | `-ReturnStmt 0x1653b51c320 <line:1256:9>
|   |-CallExpr 0x1653b51c4f0 <line:1257:5, col:26> 'int'
|   | |-ImplicitCastExpr 0x1653b51c4d8 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b51c438 <col:5> 'int ()' Function 0x1653b51c370 'REF_ASSERT_ISNT' 'int ()'
|   | `-BinaryOperator 0x1653b51c4b8 <col:21, col:25> 'int' '<'
|   |   |-ImplicitCastExpr 0x1653b51c4a0 <col:21> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1653b51c458 <col:21> 'int' lvalue Var 0x1653b51be28 'i' 'int'
|   |   `-IntegerLiteral 0x1653b51c478 <col:25> 'int' 0
|   `-CallExpr 0x1653b51c6b8 <line:1260:5, col:19> 'int'
|     |-ImplicitCastExpr 0x1653b51c6a0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x1653b51c660 <col:5> 'int ()' Function 0x1653b51b438 'OPENSSL_free' 'int ()'
|     `-ImplicitCastExpr 0x1653b51c6e0 <col:18> 'NISTP224_PRE_COMP *' <LValueToRValue>
|       `-DeclRefExpr 0x1653b51c680 <col:18> 'NISTP224_PRE_COMP *' lvalue ParmVar 0x1653b51bcc0 'p' 'NISTP224_PRE_COMP *'
|-FunctionDecl 0x1653b51c810 <line:1268:1, line:1274:1> line:1268:5 invalid ec_GFp_nistp224_group_init 'int (int *)'
| |-ParmVarDecl 0x1653b51c778 <col:32, col:42> col:42 invalid group 'int *'
| |-CompoundStmt 0x1653b51ca10 <line:1269:1, line:1274:1>
| | |-DeclStmt 0x1653b51c950 <line:1270:5, col:12>
| | | `-VarDecl 0x1653b51c8e8 <col:5, col:9> col:9 used ret 'int'
| | `-ReturnStmt 0x1653b51ca00 <line:1273:5, col:12>
| |   `-ImplicitCastExpr 0x1653b51c9e8 <col:12> 'int' <LValueToRValue>
| |     `-DeclRefExpr 0x1653b51c9c8 <col:12> 'int' lvalue Var 0x1653b51c8e8 'ret' 'int'
| `-FullComment 0x1653b52ab58 <line:1263:4, col:78>
|   `-ParagraphComment 0x1653b52ab30 <col:4, col:78>
|     `-TextComment 0x1653b52ab08 <col:4, col:78> Text="***************************************************************************"
|-FunctionDecl 0x1653b51cd00 <line:1276:1, line:1306:1> line:1276:5 invalid ec_GFp_nistp224_group_set_curve 'int (int *, const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1653b51ca48 <col:37, col:47> col:47 invalid group 'int *'
| |-ParmVarDecl 0x1653b51cac8 <col:54, col:68> col:68 invalid p 'const int *'
| |-ParmVarDecl 0x1653b51cb48 <line:1277:37, col:51> col:51 invalid a 'const int *'
| |-ParmVarDecl 0x1653b51cbc8 <col:54, col:68> col:68 invalid b 'const int *'
| |-ParmVarDecl 0x1653b51cc48 <line:1278:37, col:45> col:45 invalid ctx 'int *'
| `-CompoundStmt 0x1653b521dd8 <line:1279:1, line:1306:1>
|   |-DeclStmt 0x1653b51ce88 <line:1280:5, col:16>
|   | `-VarDecl 0x1653b51cdf8 <col:5, col:15> col:9 used ret 'int' cinit
|   |   `-IntegerLiteral 0x1653b51ce60 <col:15> 'int' 0
|   |-IfStmt 0x1653b521230 <line:1284:5, line:1286:20>
|   | |-OpaqueValueExpr 0x1653b521218 <<invalid sloc>> '_Bool'
|   | `-IfStmt 0x1653b521200 <line:1285:9, line:1286:20>
|   |   |-OpaqueValueExpr 0x1653b5211e8 <<invalid sloc>> '_Bool'
|   |   `-ReturnStmt 0x1653b5211d8 <col:13, col:20>
|   |     `-IntegerLiteral 0x1653b5211b0 <col:20> 'int' 0
|   |-IfStmt 0x1653b5216c0 <line:1288:5, line:1291:14>
|   | |-OpaqueValueExpr 0x1653b5216a8 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1653b521690 <col:9, col:14> 'err' 0x1653b521640
|   |-IfStmt 0x1653b521b00 <line:1295:5, line:1299:5>
|   | |-OpaqueValueExpr 0x1653b521ae8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1653b521ad0 <line:1295:79, line:1299:5>
|   |   `-GotoStmt 0x1653b521ab8 <line:1298:9, col:14> 'err' 0x1653b521640
|   |-LabelStmt 0x1653b521c68 <line:1302:2, col:5> 'err'
|   | `-NullStmt 0x1653b521c60 <col:5>
|   `-ReturnStmt 0x1653b521dc8 <line:1305:5, col:12>
|     `-ImplicitCastExpr 0x1653b521db0 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1653b521d90 <col:12> 'int' lvalue Var 0x1653b51cdf8 'ret' 'int'
|-FunctionDecl 0x1653b5220e8 <line:1312:1, line:1354:1> line:1312:5 invalid ec_GFp_nistp224_point_get_affine_coordinates 'int (const int *, const int *, int *, int *, int *)'
| |-ParmVarDecl 0x1653b521e30 <col:50, col:66> col:66 invalid group 'const int *'
| |-ParmVarDecl 0x1653b521eb0 <line:1313:50, col:66> col:66 invalid point 'const int *'
| |-ParmVarDecl 0x1653b521f30 <line:1314:50, col:58> col:58 invalid x 'int *'
| |-ParmVarDecl 0x1653b521fb0 <col:61, col:69> col:69 invalid y 'int *'
| |-ParmVarDecl 0x1653b522030 <line:1315:50, col:58> col:58 invalid ctx 'int *'
| `-CompoundStmt 0x1653b51d728 <line:1316:1, line:1354:1>
|   |-DeclStmt 0x1653b5224d0 <line:1317:5, col:43>
|   | |-VarDecl 0x1653b5221d8 <col:5, col:11> col:11 used z1 'felem':'limb [4]'
|   | |-VarDecl 0x1653b522250 <col:5, col:15> col:15 used z2 'felem':'limb [4]'
|   | |-VarDecl 0x1653b5222c8 <col:5, col:19> col:19 used x_in 'felem':'limb [4]'
|   | |-VarDecl 0x1653b522340 <col:5, col:25> col:25 used y_in 'felem':'limb [4]'
|   | |-VarDecl 0x1653b5223b8 <col:5, col:31> col:31 used x_out 'felem':'limb [4]'
|   | `-VarDecl 0x1653b522430 <col:5, col:38> col:38 used y_out 'felem':'limb [4]'
|   |-DeclStmt 0x1653b522560 <line:1318:5, col:18>
|   | `-VarDecl 0x1653b5224f8 <col:5, col:15> col:15 used tmp 'widefelem':'widelimb [7]'
|   |-IfStmt 0x1653b522710 <line:1320:5, line:1324:5>
|   | |-OpaqueValueExpr 0x1653b5226f8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1653b5226e0 <line:1320:48, line:1324:5>
|   |   `-ReturnStmt 0x1653b5226d0 <line:1323:9, col:16>
|   |     `-IntegerLiteral 0x1653b5226a8 <col:16> 'int' 0
|   |-IfStmt 0x1653b522820 <line:1325:5, line:1327:16>
|   | |-OpaqueValueExpr 0x1653b522808 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1653b5227f8 <col:9, col:16>
|   |   `-IntegerLiteral 0x1653b5227d0 <col:16> 'int' 0
|   |-CallExpr 0x1653b5228c8 <line:1328:5, col:21> 'void'
|   | |-ImplicitCastExpr 0x1653b5228b0 <col:5> 'void (*)(limb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b522838 <col:5> 'void (limb *, const limb *)' Function 0x1653b3ea840 'felem_inv' 'void (limb *, const limb *)'
|   | |-ImplicitCastExpr 0x1653b5228f8 <col:15> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b522858 <col:15> 'felem':'limb [4]' lvalue Var 0x1653b522250 'z2' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x1653b522928 <col:19> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b522910 <col:19> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b522890 <col:19> 'felem':'limb [4]' lvalue Var 0x1653b5221d8 'z1' 'felem':'limb [4]'
|   |-CallExpr 0x1653b5229d0 <line:1329:5, col:25> 'void'
|   | |-ImplicitCastExpr 0x1653b5229b8 <col:5> 'void (*)(widelimb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b522940 <col:5> 'void (widelimb *, const limb *)' Function 0x1653b304030 'felem_square' 'void (widelimb *, const limb *)'
|   | |-ImplicitCastExpr 0x1653b522a00 <col:18> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b522960 <col:18> 'widefelem':'widelimb [7]' lvalue Var 0x1653b5224f8 'tmp' 'widefelem':'widelimb [7]'
|   | `-ImplicitCastExpr 0x1653b522a30 <col:23> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b522a18 <col:23> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b522998 <col:23> 'felem':'limb [4]' lvalue Var 0x1653b522250 'z2' 'felem':'limb [4]'
|   |-CallExpr 0x1653b522ac0 <line:1330:5, col:25> 'void'
|   | |-ImplicitCastExpr 0x1653b522aa8 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b522a48 <col:5> 'void (limb *, const widelimb *)' Function 0x1653b3f5a28 'felem_reduce' 'void (limb *, const widelimb *)'
|   | |-ImplicitCastExpr 0x1653b522af0 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b522a68 <col:18> 'felem':'limb [4]' lvalue Var 0x1653b5221d8 'z1' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x1653b522b20 <col:22> 'const widelimb *':'const widelimb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b522b08 <col:22> 'widelimb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b522a88 <col:22> 'widefelem':'widelimb [7]' lvalue Var 0x1653b5224f8 'tmp' 'widefelem':'widelimb [7]'
|   |-CallExpr 0x1653b522bd0 <line:1331:5, col:28> 'void'
|   | |-ImplicitCastExpr 0x1653b522bb8 <col:5> 'void (*)(widelimb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b522b38 <col:5> 'void (widelimb *, const limb *, const limb *)' Function 0x1653b3e5488 'felem_mul' 'void (widelimb *, const limb *, const limb *)'
|   | |-ImplicitCastExpr 0x1653b522c08 <col:15> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b522b58 <col:15> 'widefelem':'widelimb [7]' lvalue Var 0x1653b5224f8 'tmp' 'widefelem':'widelimb [7]'
|   | |-ImplicitCastExpr 0x1653b522c38 <col:20> 'const limb *':'const limb *' <NoOp>
|   | | `-ImplicitCastExpr 0x1653b522c20 <col:20> 'limb *' <ArrayToPointerDecay>
|   | |   `-DeclRefExpr 0x1653b522b78 <col:20> 'felem':'limb [4]' lvalue Var 0x1653b5222c8 'x_in' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x1653b522c68 <col:26> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b522c50 <col:26> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b522b98 <col:26> 'felem':'limb [4]' lvalue Var 0x1653b5221d8 'z1' 'felem':'limb [4]'
|   |-CallExpr 0x1653b522cf8 <line:1332:5, col:27> 'void'
|   | |-ImplicitCastExpr 0x1653b522ce0 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b522c80 <col:5> 'void (limb *, const widelimb *)' Function 0x1653b3f5a28 'felem_reduce' 'void (limb *, const widelimb *)'
|   | |-ImplicitCastExpr 0x1653b522d28 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b522ca0 <col:18> 'felem':'limb [4]' lvalue Var 0x1653b5222c8 'x_in' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x1653b522d58 <col:24> 'const widelimb *':'const widelimb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b522d40 <col:24> 'widelimb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b522cc0 <col:24> 'widefelem':'widelimb [7]' lvalue Var 0x1653b5224f8 'tmp' 'widefelem':'widelimb [7]'
|   |-CallExpr 0x1653b522e00 <line:1333:5, col:31> 'void'
|   | |-ImplicitCastExpr 0x1653b522de8 <col:5> 'void (*)(limb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b522d70 <col:5> 'void (limb *, const limb *)' Function 0x1653b3e9e38 'felem_contract' 'void (limb *, const limb *)'
|   | |-ImplicitCastExpr 0x1653b522e30 <col:20> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b522d90 <col:20> 'felem':'limb [4]' lvalue Var 0x1653b5223b8 'x_out' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x1653b522e60 <col:27> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b522e48 <col:27> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b522dc8 <col:27> 'felem':'limb [4]' lvalue Var 0x1653b5222c8 'x_in' 'felem':'limb [4]'
|   |-IfStmt 0x1653b51cfd0 <line:1334:5, line:1340:5>
|   | |-OpaqueValueExpr 0x1653b51cfb8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1653b51cfa0 <line:1334:20, line:1340:5>
|   |   `-IfStmt 0x1653b522fa8 <line:1335:9, line:1339:9>
|   |     |-OpaqueValueExpr 0x1653b522f90 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x1653b522f78 <line:1335:37, line:1339:9>
|   |       `-ReturnStmt 0x1653b522f68 <line:1338:13, col:20>
|   |         `-IntegerLiteral 0x1653b522f40 <col:20> 'int' 0
|   |-CallExpr 0x1653b51d080 <line:1341:5, col:26> 'void'
|   | |-ImplicitCastExpr 0x1653b51d068 <col:5> 'void (*)(widelimb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b51cfe8 <col:5> 'void (widelimb *, const limb *, const limb *)' Function 0x1653b3e5488 'felem_mul' 'void (widelimb *, const limb *, const limb *)'
|   | |-ImplicitCastExpr 0x1653b51d0b8 <col:15> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b51d008 <col:15> 'widefelem':'widelimb [7]' lvalue Var 0x1653b5224f8 'tmp' 'widefelem':'widelimb [7]'
|   | |-ImplicitCastExpr 0x1653b51d0e8 <col:20> 'const limb *':'const limb *' <NoOp>
|   | | `-ImplicitCastExpr 0x1653b51d0d0 <col:20> 'limb *' <ArrayToPointerDecay>
|   | |   `-DeclRefExpr 0x1653b51d028 <col:20> 'felem':'limb [4]' lvalue Var 0x1653b5221d8 'z1' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x1653b51d118 <col:24> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b51d100 <col:24> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b51d048 <col:24> 'felem':'limb [4]' lvalue Var 0x1653b522250 'z2' 'felem':'limb [4]'
|   |-CallExpr 0x1653b51d1a8 <line:1342:5, col:25> 'void'
|   | |-ImplicitCastExpr 0x1653b51d190 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b51d130 <col:5> 'void (limb *, const widelimb *)' Function 0x1653b3f5a28 'felem_reduce' 'void (limb *, const widelimb *)'
|   | |-ImplicitCastExpr 0x1653b51d1d8 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b51d150 <col:18> 'felem':'limb [4]' lvalue Var 0x1653b5221d8 'z1' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x1653b51d208 <col:22> 'const widelimb *':'const widelimb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b51d1f0 <col:22> 'widelimb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b51d170 <col:22> 'widefelem':'widelimb [7]' lvalue Var 0x1653b5224f8 'tmp' 'widefelem':'widelimb [7]'
|   |-CallExpr 0x1653b51d2b8 <line:1343:5, col:28> 'void'
|   | |-ImplicitCastExpr 0x1653b51d2a0 <col:5> 'void (*)(widelimb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b51d220 <col:5> 'void (widelimb *, const limb *, const limb *)' Function 0x1653b3e5488 'felem_mul' 'void (widelimb *, const limb *, const limb *)'
|   | |-ImplicitCastExpr 0x1653b51d2f0 <col:15> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b51d240 <col:15> 'widefelem':'widelimb [7]' lvalue Var 0x1653b5224f8 'tmp' 'widefelem':'widelimb [7]'
|   | |-ImplicitCastExpr 0x1653b51d320 <col:20> 'const limb *':'const limb *' <NoOp>
|   | | `-ImplicitCastExpr 0x1653b51d308 <col:20> 'limb *' <ArrayToPointerDecay>
|   | |   `-DeclRefExpr 0x1653b51d260 <col:20> 'felem':'limb [4]' lvalue Var 0x1653b522340 'y_in' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x1653b51d350 <col:26> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b51d338 <col:26> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b51d280 <col:26> 'felem':'limb [4]' lvalue Var 0x1653b5221d8 'z1' 'felem':'limb [4]'
|   |-CallExpr 0x1653b51d3e0 <line:1344:5, col:27> 'void'
|   | |-ImplicitCastExpr 0x1653b51d3c8 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b51d368 <col:5> 'void (limb *, const widelimb *)' Function 0x1653b3f5a28 'felem_reduce' 'void (limb *, const widelimb *)'
|   | |-ImplicitCastExpr 0x1653b51d410 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b51d388 <col:18> 'felem':'limb [4]' lvalue Var 0x1653b522340 'y_in' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x1653b51d440 <col:24> 'const widelimb *':'const widelimb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b51d428 <col:24> 'widelimb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b51d3a8 <col:24> 'widefelem':'widelimb [7]' lvalue Var 0x1653b5224f8 'tmp' 'widefelem':'widelimb [7]'
|   |-CallExpr 0x1653b51d4e8 <line:1345:5, col:31> 'void'
|   | |-ImplicitCastExpr 0x1653b51d4d0 <col:5> 'void (*)(limb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b51d458 <col:5> 'void (limb *, const limb *)' Function 0x1653b3e9e38 'felem_contract' 'void (limb *, const limb *)'
|   | |-ImplicitCastExpr 0x1653b51d518 <col:20> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b51d478 <col:20> 'felem':'limb [4]' lvalue Var 0x1653b522430 'y_out' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x1653b51d548 <col:27> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b51d530 <col:27> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b51d4b0 <col:27> 'felem':'limb [4]' lvalue Var 0x1653b522340 'y_in' 'felem':'limb [4]'
|   |-IfStmt 0x1653b51d6d8 <line:1346:5, line:1352:5>
|   | |-OpaqueValueExpr 0x1653b51d6c0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1653b51d6a8 <line:1346:20, line:1352:5>
|   |   `-IfStmt 0x1653b51d690 <line:1347:9, line:1351:9>
|   |     |-OpaqueValueExpr 0x1653b51d678 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x1653b51d660 <line:1347:37, line:1351:9>
|   |       `-ReturnStmt 0x1653b51d650 <line:1350:13, col:20>
|   |         `-IntegerLiteral 0x1653b51d628 <col:20> 'int' 0
|   `-ReturnStmt 0x1653b51d718 <line:1353:5, col:12>
|     `-IntegerLiteral 0x1653b51d6f0 <col:12> 'int' 1
|-FunctionDecl 0x1653b51dbf8 <line:1356:1, line:1383:1> line:1356:13 used make_points_affine 'void (size_t, felem (*)[3], felem *)' static
| |-ParmVarDecl 0x1653b51d7d8 <col:32, col:39> col:39 used num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1653b51d970 <col:44, col:71> col:50 used points 'felem (*)[3]':'felem (*)[3]'
| |-ParmVarDecl 0x1653b51da90 <line:1357:32, col:62> col:38 used tmp_felems 'felem *':'felem *'
| `-CompoundStmt 0x1653b51e988 <line:1358:1, line:1383:1>
|   `-CallExpr 0x1653b51e880 <line:1363:5, line:1382:60> 'void'
|     |-ImplicitCastExpr 0x1653b51e868 <line:1363:5> 'void (*)(size_t, void *, size_t, void *, void (*)(void *), int (*)(const void *), void (*)(void *, const void *), void (*)(void *, const void *), void (*)(void *, const void *, const void *), void (*)(void *, const void *), void (*)(void *, const void *))' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x1653b51dcc8 <col:5> 'void (size_t, void *, size_t, void *, void (*)(void *), int (*)(const void *), void (*)(void *, const void *), void (*)(void *, const void *), void (*)(void *, const void *, const void *), void (*)(void *, const void *), void (*)(void *, const void *))' Function 0x1653b39ce68 'ec_GFp_nistp_points_make_affine_internal' 'void (size_t, void *, size_t, void *, void (*)(void *), int (*)(const void *), void (*)(void *, const void *), void (*)(void *, const void *), void (*)(void *, const void *, const void *), void (*)(void *, const void *), void (*)(void *, const void *))'
|     |-ImplicitCastExpr 0x1653b51e8f8 <col:46> 'size_t':'unsigned long long' <LValueToRValue>
|     | `-DeclRefExpr 0x1653b51dce8 <col:46> 'size_t':'unsigned long long' lvalue ParmVar 0x1653b51d7d8 'num' 'size_t':'unsigned long long'
|     |-ImplicitCastExpr 0x1653b51e928 <line:1364:46> 'void *' <BitCast>
|     | `-ImplicitCastExpr 0x1653b51e910 <col:46> 'felem (*)[3]':'felem (*)[3]' <LValueToRValue>
|     |   `-DeclRefExpr 0x1653b51dd08 <col:46> 'felem (*)[3]':'felem (*)[3]' lvalue ParmVar 0x1653b51d970 'points' 'felem (*)[3]':'felem (*)[3]'
|     |-UnaryExprOrTypeTraitExpr 0x1653b51dd38 <line:1365:46, col:58> 'unsigned long long' sizeof 'felem':'limb [4]'
|     |-ImplicitCastExpr 0x1653b51e958 <line:1366:46> 'void *' <BitCast>
|     | `-ImplicitCastExpr 0x1653b51e940 <col:46> 'felem *':'felem *' <LValueToRValue>
|     |   `-DeclRefExpr 0x1653b51dd58 <col:46> 'felem *':'felem *' lvalue ParmVar 0x1653b51da90 'tmp_felems' 'felem *':'felem *'
|     |-CStyleCastExpr 0x1653b51dec0 <line:1367:46, col:64> 'void (*)(void *)' <BitCast>
|     | `-ImplicitCastExpr 0x1653b51dea8 <col:64> 'void (*)(limb *)' <FunctionToPointerDecay> part_of_explicit_cast
|     |   `-DeclRefExpr 0x1653b51ddf8 <col:64> 'void (limb *)' Function 0x1653b2fc298 'felem_one' 'void (limb *)'
|     |-ImplicitCastExpr 0x1653b51e970 <line:1368:46> 'int (*)(const void *)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x1653b51dee8 <col:46> 'int (const void *)' Function 0x1653b3fa450 'felem_is_zero_int' 'int (const void *)'
|     |-CStyleCastExpr 0x1653b51e080 <line:1369:46, line:1370:46> 'void (*)(void *, const void *)' <BitCast>
|     | `-ImplicitCastExpr 0x1653b51e068 <col:46> 'void (*)(limb *, const limb *)' <FunctionToPointerDecay> part_of_explicit_cast
|     |   `-DeclRefExpr 0x1653b51e008 <col:46> 'void (limb *, const limb *)' Function 0x1653b2fc8d8 'felem_assign' 'void (limb *, const limb *)'
|     |-CStyleCastExpr 0x1653b51e220 <line:1371:46, line:1372:46> 'void (*)(void *, const void *)' <BitCast>
|     | `-ImplicitCastExpr 0x1653b51e208 <col:46> 'void (*)(limb *, const limb *)' <FunctionToPointerDecay> part_of_explicit_cast
|     |   `-DeclRefExpr 0x1653b51e1a8 <col:46> 'void (limb *, const limb *)' Function 0x1653b3e9270 'felem_square_reduce' 'void (limb *, const limb *)'
|     |-CStyleCastExpr 0x1653b51e4a0 <col:67, line:1378:46> 'void (*)(void *, const void *, const void *)' <BitCast>
|     | `-ImplicitCastExpr 0x1653b51e488 <col:46> 'void (*)(limb *, const limb *, const limb *)' <FunctionToPointerDecay> part_of_explicit_cast
|     |   `-DeclRefExpr 0x1653b51e3c8 <col:46> 'void (limb *, const limb *, const limb *)' Function 0x1653b3e98e8 'felem_mul_reduce' 'void (limb *, const limb *, const limb *)'
|     |-CStyleCastExpr 0x1653b51e640 <line:1379:46, line:1380:46> 'void (*)(void *, const void *)' <BitCast>
|     | `-ImplicitCastExpr 0x1653b51e628 <col:46> 'void (*)(limb *, const limb *)' <FunctionToPointerDecay> part_of_explicit_cast
|     |   `-DeclRefExpr 0x1653b51e5c8 <col:46> 'void (limb *, const limb *)' Function 0x1653b3ea840 'felem_inv' 'void (limb *, const limb *)'
|     `-CStyleCastExpr 0x1653b51e7e0 <line:1381:46, line:1382:46> 'void (*)(void *, const void *)' <BitCast>
|       `-ImplicitCastExpr 0x1653b51e7c8 <col:46> 'void (*)(limb *, const limb *)' <FunctionToPointerDecay> part_of_explicit_cast
|         `-DeclRefExpr 0x1653b51e768 <col:46> 'void (limb *, const limb *)' Function 0x1653b3e9e38 'felem_contract' 'void (limb *, const limb *)'
|-FunctionDecl 0x1653b51ed98 <line:1389:1, line:1584:1> line:1389:5 invalid ec_GFp_nistp224_points_mul 'int (const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-ParmVarDecl 0x1653b51e9b8 <col:32, col:48> col:48 invalid group 'const int *'
| |-ParmVarDecl 0x1653b51ea38 <col:55, col:65> col:65 invalid r 'int *'
| |-ParmVarDecl 0x1653b51eab8 <line:1390:32, col:46> col:46 invalid scalar 'const int *'
| |-ParmVarDecl 0x1653b51eb30 <col:54, col:61> col:61 used num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1653b51ebc0 <line:1391:32, <invalid sloc>> col:48 invalid points 'const int **':'const int **'
| |-ParmVarDecl 0x1653b51ec50 <line:1392:32, <invalid sloc>> col:46 invalid scalars 'const int **':'const int **'
| |-ParmVarDecl 0x1653b51ecd0 <col:57, col:65> col:65 invalid ctx 'int *'
| `-CompoundStmt 0x1653b525068 <line:1393:1, line:1584:1>
|   |-DeclStmt 0x1653b51ef30 <line:1394:5, col:16>
|   | `-VarDecl 0x1653b51eea0 <col:5, col:15> col:9 used ret 'int' cinit
|   |   `-IntegerLiteral 0x1653b51ef08 <col:15> 'int' 0
|   |-DeclStmt 0x1653b512fb8 <line:1395:5, col:10>
|   | `-VarDecl 0x1653b512f50 <col:5, col:9> col:9 used j 'int'
|   |-DeclStmt 0x1653b513050 <line:1396:5, col:15>
|   | `-VarDecl 0x1653b512fe8 <col:5, col:14> col:14 used i 'unsigned int'
|   |-DeclStmt 0x1653b513110 <line:1397:5, col:18>
|   | `-VarDecl 0x1653b513080 <col:5, col:17> col:9 used mixed 'int' cinit
|   |   `-IntegerLiteral 0x1653b5130e8 <col:17> 'int' 0
|   |-DeclStmt 0x1653b513228 <line:1400:5, col:29>
|   | `-VarDecl 0x1653b5131c0 <col:5, col:21> col:21 used g_secret 'felem_bytearray':'u8 [28]'
|   |-DeclStmt 0x1653b5133b0 <line:1401:5, col:36>
|   | `-VarDecl 0x1653b5132a8 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/before\crypto\ec\ecp_nistp224.c:1401:22 used secrets 'felem_bytearray *' cinit
|   |   `-ImplicitCastExpr 0x1653b513398 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'felem_bytearray *' <NullToPointer>
|   |     `-ParenExpr 0x1653b513378 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1653b513350 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1653b513310 <col:26> 'int' 0
|   |-DeclStmt 0x1653b513660 <.//openssl//file_jk/before\crypto\ec\ecp_nistp224.c:1402:5, col:36>
|   | `-VarDecl 0x1653b513558 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/before\crypto\ec\ecp_nistp224.c:1402:13 used pre_comp 'felem (*)[17][3]' cinit
|   |   `-ImplicitCastExpr 0x1653b513648 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'felem (*)[17][3]' <NullToPointer>
|   |     `-ParenExpr 0x1653b513628 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1653b513600 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1653b5135c0 <col:26> 'int' 0
|   |-DeclStmt 0x1653b513790 <.//openssl//file_jk/before\crypto\ec\ecp_nistp224.c:1403:5, col:29>
|   | `-VarDecl 0x1653b513688 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/before\crypto\ec\ecp_nistp224.c:1403:12 used tmp_felems 'felem *' cinit
|   |   `-ImplicitCastExpr 0x1653b513778 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'felem *' <NullToPointer>
|   |     `-ParenExpr 0x1653b513758 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1653b513730 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1653b5136f0 <col:26> 'int' 0
|   |-DeclStmt 0x1653b513820 <.//openssl//file_jk/before\crypto\ec\ecp_nistp224.c:1404:5, col:24>
|   | `-VarDecl 0x1653b5137b8 <col:5, col:21> col:21 used tmp 'felem_bytearray':'u8 [28]'
|   |-DeclStmt 0x1653b5138b8 <line:1405:5, col:23>
|   | `-VarDecl 0x1653b513850 <col:5, col:14> col:14 used num_bytes 'unsigned int'
|   |-DeclStmt 0x1653b513978 <line:1406:5, col:26>
|   | `-VarDecl 0x1653b5138e8 <col:5, col:25> col:9 used have_pre_comp 'int' cinit
|   |   `-IntegerLiteral 0x1653b513950 <col:25> 'int' 0
|   |-DeclStmt 0x1653b513a58 <line:1407:5, col:28>
|   | `-VarDecl 0x1653b5139a0 <col:5, col:25> col:12 used num_points 'size_t':'unsigned long long' cinit
|   |   `-ImplicitCastExpr 0x1653b513a40 <col:25> 'size_t':'unsigned long long' <LValueToRValue>
|   |     `-DeclRefExpr 0x1653b513a08 <col:25> 'size_t':'unsigned long long' lvalue ParmVar 0x1653b51eb30 'num' 'size_t':'unsigned long long'
|   |-DeclStmt 0x1653b513d78 <line:1408:5, col:48>
|   | |-VarDecl 0x1653b513a80 <col:5, col:11> col:11 used x_in 'felem':'limb [4]'
|   | |-VarDecl 0x1653b513af8 <col:5, col:17> col:17 used y_in 'felem':'limb [4]'
|   | |-VarDecl 0x1653b513b70 <col:5, col:23> col:23 used z_in 'felem':'limb [4]'
|   | |-VarDecl 0x1653b513be8 <col:5, col:29> col:29 used x_out 'felem':'limb [4]'
|   | |-VarDecl 0x1653b513c60 <col:5, col:36> col:36 used y_out 'felem':'limb [4]'
|   | `-VarDecl 0x1653b513cd8 <col:5, col:43> col:43 used z_out 'felem':'limb [4]'
|   |-DeclStmt 0x1653b513ea8 <line:1409:5, col:34>
|   | `-VarDecl 0x1653b513da0 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/before\crypto\ec\ecp_nistp224.c:1409:24 used pre 'NISTP224_PRE_COMP *' cinit
|   |   `-ImplicitCastExpr 0x1653b513e90 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'NISTP224_PRE_COMP *' <NullToPointer>
|   |     `-ParenExpr 0x1653b513e70 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1653b513e48 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1653b513e08 <col:26> 'int' 0
|   |-DeclStmt 0x1653b5140e0 <.//openssl//file_jk/before\crypto\ec\ecp_nistp224.c:1410:5, col:43>
|   | `-VarDecl 0x1653b513fd8 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/before\crypto\ec\ecp_nistp224.c:1410:18 used g_pre_comp 'const felem (*)[16][3]' cinit
|   |   `-ImplicitCastExpr 0x1653b5140c8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const felem (*)[16][3]' <NullToPointer>
|   |     `-ParenExpr 0x1653b5140a8 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1653b514080 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1653b514040 <col:26> 'int' 0
|   |-DeclStmt 0x1653b514288 <.//openssl//file_jk/before\crypto\ec\ecp_nistp224.c:1412:5, col:29>
|   | `-VarDecl 0x1653b514198 <col:5, col:21> col:21 invalid p 'const int *'
|   |-DeclStmt 0x1653b5143a8 <line:1413:5, col:34>
|   | `-VarDecl 0x1653b5142b8 <col:5, col:19> col:19 invalid p_scalar 'const int *'
|   |-IfStmt 0x1653b5145a8 <line:1415:5, line:1417:20>
|   | |-OpaqueValueExpr 0x1653b514590 <<invalid sloc>> '_Bool'
|   | `-IfStmt 0x1653b514578 <line:1416:9, line:1417:20>
|   |   |-OpaqueValueExpr 0x1653b514560 <<invalid sloc>> '_Bool'
|   |   `-ReturnStmt 0x1653b514550 <col:13, col:20>
|   |     `-IntegerLiteral 0x1653b514528 <col:20> 'int' 0
|   |-IfStmt 0x1653b514900 <line:1419:5, line:1423:14>
|   | |-OpaqueValueExpr 0x1653b5148e8 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1653b5148d0 <col:9, col:14> 'err' 0x1653b514880
|   |-IfStmt 0x1653b5198e0 <line:1425:5, line:1456:5>
|   | |-OpaqueValueExpr 0x1653b5198c8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1653b519890 <line:1425:25, line:1456:5>
|   |   |-IfStmt 0x1653b514db8 <line:1427:9, line:1432:33> has_else
|   |   | |-ImplicitCastExpr 0x1653b5149f8 <line:1427:13> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1653b5149d8 <col:13> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b513da0 'pre' 'NISTP224_PRE_COMP *'
|   |   | |-BinaryOperator 0x1653b514cc0 <line:1429:13, col:54> 'const felem (*)[16][3]' '='
|   |   | | |-DeclRefExpr 0x1653b514a10 <col:13> 'const felem (*)[16][3]' lvalue Var 0x1653b513fd8 'g_pre_comp' 'const felem (*)[16][3]'
|   |   | | `-CStyleCastExpr 0x1653b514c98 <col:26, col:54> 'const felem (*)[16][3]' <NoOp>
|   |   | |   `-ImplicitCastExpr 0x1653b514bc8 <col:49, col:54> 'felem (*)[16][3]' <ArrayToPointerDecay> part_of_explicit_cast
|   |   | |     `-MemberExpr 0x1653b514ad0 <col:49, col:54> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48
|   |   | |       `-ImplicitCastExpr 0x1653b514ab8 <col:49> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |         `-DeclRefExpr 0x1653b514a98 <col:49> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b513da0 'pre' 'NISTP224_PRE_COMP *'
|   |   | `-BinaryOperator 0x1653b514d98 <line:1432:13, col:33> 'const felem (*)[16][3]' '='
|   |   |   |-DeclRefExpr 0x1653b514ce0 <col:13> 'const felem (*)[16][3]' lvalue Var 0x1653b513fd8 'g_pre_comp' 'const felem (*)[16][3]'
|   |   |   `-UnaryOperator 0x1653b514d80 <col:26, col:33> 'const felem (*)[16][3]' prefix '&' cannot overflow
|   |   |     `-ArraySubscriptExpr 0x1653b514d60 <col:27, col:33> 'const felem [16][3]' lvalue
|   |   |       |-ImplicitCastExpr 0x1653b514d48 <col:27> 'const felem (*)[16][3]' <ArrayToPointerDecay>
|   |   |       | `-DeclRefExpr 0x1653b514d00 <col:27> 'const felem [2][16][3]' lvalue Var 0x1653b3e17d8 'gmul' 'const felem [2][16][3]'
|   |   |       `-IntegerLiteral 0x1653b514d20 <col:32> 'int' 0
|   |   |-IfStmt 0x1653b518ff8 <line:1434:9, line:1435:18>
|   |   | |-OpaqueValueExpr 0x1653b518fe0 <<invalid sloc>> '_Bool'
|   |   | `-GotoStmt 0x1653b518fc8 <col:13, col:18> 'err' 0x1653b514880
|   |   |-IfStmt 0x1653b519438 <line:1437:9, line:1442:9>
|   |   | |-OpaqueValueExpr 0x1653b519420 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x1653b519408 <line:1439:51, line:1442:9>
|   |   |   `-GotoStmt 0x1653b5193f0 <line:1441:13, col:18> 'err' 0x1653b514880
|   |   |-IfStmt 0x1653b519590 <line:1443:9, line:1446:18>
|   |   | |-OpaqueValueExpr 0x1653b519578 <<invalid sloc>> '_Bool'
|   |   | `-GotoStmt 0x1653b519560 <col:13, col:18> 'err' 0x1653b514880
|   |   `-IfStmt 0x1653b519868 <line:1447:9, line:1455:39> has_else
|   |     |-OpaqueValueExpr 0x1653b519850 <<invalid sloc>> '_Bool'
|   |     |-BinaryOperator 0x1653b519740 <line:1449:13, col:29> 'int' '='
|   |     | |-DeclRefExpr 0x1653b5196e0 <col:13> 'int' lvalue Var 0x1653b5138e8 'have_pre_comp' 'int'
|   |     | `-IntegerLiteral 0x1653b519718 <col:29> 'int' 1
|   |     `-BinaryOperator 0x1653b519830 <line:1455:13, col:39> 'size_t':'unsigned long long' '='
|   |       |-DeclRefExpr 0x1653b519760 <col:13> 'size_t':'unsigned long long' lvalue Var 0x1653b5139a0 'num_points' 'size_t':'unsigned long long'
|   |       `-BinaryOperator 0x1653b519810 <col:26, col:39> 'unsigned long long' '+'
|   |         |-ImplicitCastExpr 0x1653b5197e0 <col:26> 'size_t':'unsigned long long' <LValueToRValue>
|   |         | `-DeclRefExpr 0x1653b519798 <col:26> 'size_t':'unsigned long long' lvalue Var 0x1653b5139a0 'num_points' 'size_t':'unsigned long long'
|   |         `-ImplicitCastExpr 0x1653b5197f8 <col:39> 'unsigned long long' <IntegralCast>
|   |           `-IntegerLiteral 0x1653b5197b8 <col:39> 'int' 1
|   |-IfStmt 0x1653b5157c8 <line:1458:5, line:1536:5>
|   | |-BinaryOperator 0x1653b519970 <line:1458:9, col:22> 'int' '>'
|   | | |-ImplicitCastExpr 0x1653b519940 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b5198f8 <col:9> 'size_t':'unsigned long long' lvalue Var 0x1653b5139a0 'num_points' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x1653b519958 <col:22> 'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x1653b519918 <col:22> 'int' 0
|   | `-CompoundStmt 0x1653b515780 <col:25, line:1536:5>
|   |   |-IfStmt 0x1653b519ac0 <line:1459:9, line:1465:9>
|   |   | |-BinaryOperator 0x1653b519a08 <line:1459:13, col:27> 'int' '>='
|   |   | | |-ImplicitCastExpr 0x1653b5199d8 <col:13> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1653b519990 <col:13> 'size_t':'unsigned long long' lvalue Var 0x1653b5139a0 'num_points' 'size_t':'unsigned long long'
|   |   | | `-ImplicitCastExpr 0x1653b5199f0 <col:27> 'unsigned long long' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x1653b5199b0 <col:27> 'int' 3
|   |   | `-CompoundStmt 0x1653b519aa8 <col:30, line:1465:9>
|   |   |   `-BinaryOperator 0x1653b519a88 <line:1464:13, col:21> 'int' '='
|   |   |     |-DeclRefExpr 0x1653b519a28 <col:13> 'int' lvalue Var 0x1653b513080 'mixed' 'int'
|   |   |     `-IntegerLiteral 0x1653b519a60 <col:21> 'int' 1
|   |   |-BinaryOperator 0x1653b519c70 <line:1466:9, col:63> 'felem_bytearray *' '='
|   |   | |-DeclRefExpr 0x1653b519ad8 <col:9> 'felem_bytearray *' lvalue Var 0x1653b5132a8 'secrets' 'felem_bytearray *'
|   |   | `-ImplicitCastExpr 0x1653b519c58 <col:19, col:63> 'felem_bytearray *' <IntegralToPointer>
|   |   |   `-CallExpr 0x1653b519c30 <col:19, col:63> 'int'
|   |   |     |-ImplicitCastExpr 0x1653b519c18 <col:19> 'int (*)()' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x1653b519b10 <col:19> 'int ()' Function 0x1653b512d90 'OPENSSL_zalloc' 'int ()'
|   |   |     `-BinaryOperator 0x1653b519bf8 <col:34, col:53> 'unsigned long long' '*'
|   |   |       |-UnaryExprOrTypeTraitExpr 0x1653b519ba0 <col:34, col:49> 'unsigned long long' sizeof
|   |   |       | `-ParenExpr 0x1653b519b80 <col:40, col:49> 'felem_bytearray':'u8 [28]' lvalue
|   |   |       |   `-UnaryOperator 0x1653b519b68 <col:41, col:42> 'felem_bytearray':'u8 [28]' lvalue prefix '*' cannot overflow
|   |   |       |     `-ImplicitCastExpr 0x1653b519b50 <col:42> 'felem_bytearray *' <LValueToRValue>
|   |   |       |       `-DeclRefExpr 0x1653b519b30 <col:42> 'felem_bytearray *' lvalue Var 0x1653b5132a8 'secrets' 'felem_bytearray *' non_odr_use_unevaluated
|   |   |       `-ImplicitCastExpr 0x1653b519be0 <col:53> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x1653b519bc0 <col:53> 'size_t':'unsigned long long' lvalue Var 0x1653b5139a0 'num_points' 'size_t':'unsigned long long'
|   |   |-BinaryOperator 0x1653b519e28 <line:1467:9, col:65> 'felem (*)[17][3]' '='
|   |   | |-DeclRefExpr 0x1653b519c90 <col:9> 'felem (*)[17][3]' lvalue Var 0x1653b513558 'pre_comp' 'felem (*)[17][3]'
|   |   | `-ImplicitCastExpr 0x1653b519e10 <col:20, col:65> 'felem (*)[17][3]' <IntegralToPointer>
|   |   |   `-CallExpr 0x1653b519de8 <col:20, col:65> 'int'
|   |   |     |-ImplicitCastExpr 0x1653b519dd0 <col:20> 'int (*)()' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x1653b519cc8 <col:20> 'int ()' Function 0x1653b512d90 'OPENSSL_zalloc' 'int ()'
|   |   |     `-BinaryOperator 0x1653b519db0 <col:35, col:55> 'unsigned long long' '*'
|   |   |       |-UnaryExprOrTypeTraitExpr 0x1653b519d58 <col:35, col:51> 'unsigned long long' sizeof
|   |   |       | `-ParenExpr 0x1653b519d38 <col:41, col:51> 'felem [17][3]':'felem [17][3]' lvalue
|   |   |       |   `-UnaryOperator 0x1653b519d20 <col:42, col:43> 'felem [17][3]':'felem [17][3]' lvalue prefix '*' cannot overflow
|   |   |       |     `-ImplicitCastExpr 0x1653b519d08 <col:43> 'felem (*)[17][3]' <LValueToRValue>
|   |   |       |       `-DeclRefExpr 0x1653b519ce8 <col:43> 'felem (*)[17][3]' lvalue Var 0x1653b513558 'pre_comp' 'felem (*)[17][3]' non_odr_use_unevaluated
|   |   |       `-ImplicitCastExpr 0x1653b519d98 <col:55> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x1653b519d78 <col:55> 'size_t':'unsigned long long' lvalue Var 0x1653b5139a0 'num_points' 'size_t':'unsigned long long'
|   |   |-IfStmt 0x1653b51a1a8 <line:1468:9, line:1470:69>
|   |   | |-ImplicitCastExpr 0x1653b519e68 <line:1468:13> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1653b519e48 <col:13> 'int' lvalue Var 0x1653b513080 'mixed' 'int'
|   |   | `-BinaryOperator 0x1653b51a188 <line:1469:13, line:1470:69> 'felem *' '='
|   |   |   |-DeclRefExpr 0x1653b519e80 <line:1469:13> 'felem *' lvalue Var 0x1653b513688 'tmp_felems' 'felem *'
|   |   |   `-ImplicitCastExpr 0x1653b51a170 <line:1470:17, col:69> 'felem *' <IntegralToPointer>
|   |   |     `-CallExpr 0x1653b51a148 <col:17, col:69> 'int'
|   |   |       |-ImplicitCastExpr 0x1653b51a130 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |   |       | `-DeclRefExpr 0x1653b519fa8 <col:17> 'int ()' Function 0x1653b519ee0 'OPENSSL_malloc' 'int ()'
|   |   |       `-BinaryOperator 0x1653b51a110 <col:32, col:68> 'unsigned long long' '*'
|   |   |         |-UnaryExprOrTypeTraitExpr 0x1653b519fd8 <col:32, col:44> 'unsigned long long' sizeof 'felem':'limb [4]'
|   |   |         `-ParenExpr 0x1653b51a0f0 <col:48, col:68> 'unsigned long long'
|   |   |           `-BinaryOperator 0x1653b51a0d0 <col:49, col:67> 'unsigned long long' '+'
|   |   |             |-BinaryOperator 0x1653b51a070 <col:49, col:62> 'unsigned long long' '*'
|   |   |             | |-ImplicitCastExpr 0x1653b51a040 <col:49> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |             | | `-DeclRefExpr 0x1653b519ff8 <col:49> 'size_t':'unsigned long long' lvalue Var 0x1653b5139a0 'num_points' 'size_t':'unsigned long long'
|   |   |             | `-ImplicitCastExpr 0x1653b51a058 <col:62> 'unsigned long long' <IntegralCast>
|   |   |             |   `-IntegerLiteral 0x1653b51a018 <col:62> 'int' 17
|   |   |             `-ImplicitCastExpr 0x1653b51a0b8 <col:67> 'unsigned long long' <IntegralCast>
|   |   |               `-IntegerLiteral 0x1653b51a090 <col:67> 'int' 1
|   |   |-IfStmt 0x1653b51a610 <line:1471:9, line:1475:9>
|   |   | |-BinaryOperator 0x1653b51a5a0 <line:1471:13, line:1472:46> 'int' '||'
|   |   | | |-BinaryOperator 0x1653b51a3f0 <line:1471:13, col:51> 'int' '||'
|   |   | | | |-ParenExpr 0x1653b51a2b8 <col:13, col:29> 'int'
|   |   | | | | `-BinaryOperator 0x1653b51a298 <col:14, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   |   | | | |   |-ImplicitCastExpr 0x1653b51a268 <.//openssl//file_jk/before\crypto\ec\ecp_nistp224.c:1471:14> 'felem_bytearray *' <LValueToRValue>
|   |   | | | |   | `-DeclRefExpr 0x1653b51a1c0 <col:14> 'felem_bytearray *' lvalue Var 0x1653b5132a8 'secrets' 'felem_bytearray *'
|   |   | | | |   `-ImplicitCastExpr 0x1653b51a280 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'felem_bytearray *' <BitCast>
|   |   | | | |     `-ParenExpr 0x1653b51a248 <col:17, col:27> 'void *'
|   |   | | | |       `-CStyleCastExpr 0x1653b51a220 <col:18, col:26> 'void *' <NullToPointer>
|   |   | | | |         `-IntegerLiteral 0x1653b51a1e0 <col:26> 'int' 0
|   |   | | | `-ParenExpr 0x1653b51a3d0 <.//openssl//file_jk/before\crypto\ec\ecp_nistp224.c:1471:34, col:51> 'int'
|   |   | | |   `-BinaryOperator 0x1653b51a3b0 <col:35, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   |   | | |     |-ImplicitCastExpr 0x1653b51a380 <.//openssl//file_jk/before\crypto\ec\ecp_nistp224.c:1471:35> 'felem (*)[17][3]' <LValueToRValue>
|   |   | | |     | `-DeclRefExpr 0x1653b51a2d8 <col:35> 'felem (*)[17][3]' lvalue Var 0x1653b513558 'pre_comp' 'felem (*)[17][3]'
|   |   | | |     `-ImplicitCastExpr 0x1653b51a398 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'felem (*)[17][3]' <BitCast>
|   |   | | |       `-ParenExpr 0x1653b51a360 <col:17, col:27> 'void *'
|   |   | | |         `-CStyleCastExpr 0x1653b51a338 <col:18, col:26> 'void *' <NullToPointer>
|   |   | | |           `-IntegerLiteral 0x1653b51a2f8 <col:26> 'int' 0
|   |   | | `-ParenExpr 0x1653b51a580 <.//openssl//file_jk/before\crypto\ec\ecp_nistp224.c:1472:16, col:46> 'int'
|   |   | |   `-BinaryOperator 0x1653b51a560 <col:17, col:45> 'int' '&&'
|   |   | |     |-ImplicitCastExpr 0x1653b51a548 <col:17> 'int' <LValueToRValue>
|   |   | |     | `-DeclRefExpr 0x1653b51a410 <col:17> 'int' lvalue Var 0x1653b513080 'mixed' 'int'
|   |   | |     `-ParenExpr 0x1653b51a528 <col:26, col:45> 'int'
|   |   | |       `-BinaryOperator 0x1653b51a508 <col:27, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   |   | |         |-ImplicitCastExpr 0x1653b51a4d8 <.//openssl//file_jk/before\crypto\ec\ecp_nistp224.c:1472:27> 'felem *' <LValueToRValue>
|   |   | |         | `-DeclRefExpr 0x1653b51a430 <col:27> 'felem *' lvalue Var 0x1653b513688 'tmp_felems' 'felem *'
|   |   | |         `-ImplicitCastExpr 0x1653b51a4f0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'felem *' <BitCast>
|   |   | |           `-ParenExpr 0x1653b51a4b8 <col:17, col:27> 'void *'
|   |   | |             `-CStyleCastExpr 0x1653b51a490 <col:18, col:26> 'void *' <NullToPointer>
|   |   | |               `-IntegerLiteral 0x1653b51a450 <col:26> 'int' 0
|   |   | `-CompoundStmt 0x1653b51a5f8 <.//openssl//file_jk/before\crypto\ec\ecp_nistp224.c:1472:49, line:1475:9>
|   |   |   `-GotoStmt 0x1653b51a5e0 <line:1474:13, col:18> 'err' 0x1653b514880
|   |   |-ForStmt 0x1653b5154c0 <line:1481:9, line:1533:9>
|   |   | |-BinaryOperator 0x1653b51a6a0 <line:1481:14, col:18> 'unsigned int' '='
|   |   | | |-DeclRefExpr 0x1653b51a628 <col:14> 'unsigned int' lvalue Var 0x1653b512fe8 'i' 'unsigned int'
|   |   | | `-ImplicitCastExpr 0x1653b51a688 <col:18> 'unsigned int' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x1653b51a660 <col:18> 'int' 0
|   |   | |-<<<NULL>>>
|   |   | |-BinaryOperator 0x1653b51a748 <col:21, col:25> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x1653b51a730 <col:21> 'unsigned long long' <IntegralCast>
|   |   | | | `-ImplicitCastExpr 0x1653b51a700 <col:21> 'unsigned int' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x1653b51a6c0 <col:21> 'unsigned int' lvalue Var 0x1653b512fe8 'i' 'unsigned int'
|   |   | | `-ImplicitCastExpr 0x1653b51a718 <col:25> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1653b51a6e0 <col:25> 'size_t':'unsigned long long' lvalue Var 0x1653b5139a0 'num_points' 'size_t':'unsigned long long'
|   |   | |-UnaryOperator 0x1653b51a788 <col:37, col:39> 'unsigned int' prefix '++'
|   |   | | `-DeclRefExpr 0x1653b51a768 <col:39> 'unsigned int' lvalue Var 0x1653b512fe8 'i' 'unsigned int'
|   |   | `-CompoundStmt 0x1653b5154a0 <col:42, line:1533:9>
|   |   |   |-IfStmt 0x1653b51a9b8 <line:1482:13, line:1492:13> has_else
|   |   |   | |-BinaryOperator 0x1653b51a828 <line:1482:17, col:22> 'int' '=='
|   |   |   | | |-ImplicitCastExpr 0x1653b51a810 <col:17> 'unsigned long long' <IntegralCast>
|   |   |   | | | `-ImplicitCastExpr 0x1653b51a7e0 <col:17> 'unsigned int' <LValueToRValue>
|   |   |   | | |   `-DeclRefExpr 0x1653b51a7a0 <col:17> 'unsigned int' lvalue Var 0x1653b512fe8 'i' 'unsigned int'
|   |   |   | | `-ImplicitCastExpr 0x1653b51a7f8 <col:22> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x1653b51a7c0 <col:22> 'size_t':'unsigned long long' lvalue ParmVar 0x1653b51eb30 'num' 'size_t':'unsigned long long'
|   |   |   | |-CompoundStmt 0x1653b51a958 <line:1484:13, line:1487:13>
|   |   |   | `-CompoundStmt 0x1653b51a9a8 <line:1489:13, line:1492:13>
|   |   |   `-IfStmt 0x1653b515488 <line:1493:13, line:1532:13>
|   |   |     |-OpaqueValueExpr 0x1653b515470 <<invalid sloc>> '_Bool'
|   |   |     `-CompoundStmt 0x1653b515428 <line:1493:52, line:1532:13>
|   |   |       |-IfStmt 0x1653b51af00 <line:1495:17, line:1507:21> has_else
|   |   |       | |-OpaqueValueExpr 0x1653b51aee8 <<invalid sloc>> '_Bool'
|   |   |       | |-CompoundStmt 0x1653b51ae68 <line:1496:52, line:1506:17>
|   |   |       | | `-IfStmt 0x1653b51adc0 <line:1501:21, line:1504:21>
|   |   |       | |   |-OpaqueValueExpr 0x1653b51ada8 <<invalid sloc>> '_Bool'
|   |   |       | |   `-CompoundStmt 0x1653b51ad90 <line:1501:77, line:1504:21>
|   |   |       | |     `-GotoStmt 0x1653b51ad78 <line:1503:25, col:30> 'err' 0x1653b514880
|   |   |       | `-NullStmt 0x1653b51aee0 <line:1507:21>
|   |   |       |-CallExpr 0x1653b523098 <line:1508:17, col:55> 'void'
|   |   |       | |-ImplicitCastExpr 0x1653b523080 <col:17> 'void (*)(u8 *, const u8 *, unsigned int)' <FunctionToPointerDecay>
|   |   |       | | `-DeclRefExpr 0x1653b51af28 <col:17> 'void (u8 *, const u8 *, unsigned int)' Function 0x1653b2fa3b8 'flip_endian' 'void (u8 *, const u8 *, unsigned int)'
|   |   |       | |-ImplicitCastExpr 0x1653b5230d0 <col:29, col:38> 'u8 *' <ArrayToPointerDecay>
|   |   |       | | `-ArraySubscriptExpr 0x1653b523020 <col:29, col:38> 'felem_bytearray':'u8 [28]' lvalue
|   |   |       | |   |-ImplicitCastExpr 0x1653b522ff0 <col:29> 'felem_bytearray *' <LValueToRValue>
|   |   |       | |   | `-DeclRefExpr 0x1653b51af48 <col:29> 'felem_bytearray *' lvalue Var 0x1653b5132a8 'secrets' 'felem_bytearray *'
|   |   |       | |   `-ImplicitCastExpr 0x1653b523008 <col:37> 'unsigned int' <LValueToRValue>
|   |   |       | |     `-DeclRefExpr 0x1653b522fd0 <col:37> 'unsigned int' lvalue Var 0x1653b512fe8 'i' 'unsigned int'
|   |   |       | |-ImplicitCastExpr 0x1653b523100 <col:41> 'const u8 *' <NoOp>
|   |   |       | | `-ImplicitCastExpr 0x1653b5230e8 <col:41> 'u8 *' <ArrayToPointerDecay>
|   |   |       | |   `-DeclRefExpr 0x1653b523040 <col:41> 'felem_bytearray':'u8 [28]' lvalue Var 0x1653b5137b8 'tmp' 'felem_bytearray':'u8 [28]'
|   |   |       | `-ImplicitCastExpr 0x1653b523118 <col:46> 'unsigned int' <LValueToRValue>
|   |   |       |   `-DeclRefExpr 0x1653b523060 <col:46> 'unsigned int' lvalue Var 0x1653b513850 'num_bytes' 'unsigned int'
|   |   |       |-IfStmt 0x1653b523208 <line:1510:17, line:1513:26>
|   |   |       | |-OpaqueValueExpr 0x1653b5231f0 <<invalid sloc>> '_Bool'
|   |   |       | `-GotoStmt 0x1653b5231d8 <col:21, col:26> 'err' 0x1653b514880
|   |   |       |-CallExpr 0x1653b5233c8 <line:1514:17, col:54> 'void'
|   |   |       | |-ImplicitCastExpr 0x1653b5233b0 <col:17> 'void (*)(limb *, const limb *)' <FunctionToPointerDecay>
|   |   |       | | `-DeclRefExpr 0x1653b523220 <col:17> 'void (limb *, const limb *)' Function 0x1653b2fc8d8 'felem_assign' 'void (limb *, const limb *)'
|   |   |       | |-ImplicitCastExpr 0x1653b5233f8 <col:30, col:46> 'limb *' <ArrayToPointerDecay>
|   |   |       | | `-ArraySubscriptExpr 0x1653b523370 <col:30, col:46> 'felem':'limb [4]' lvalue
|   |   |       | |   |-ImplicitCastExpr 0x1653b523358 <col:30, col:43> 'felem *' <ArrayToPointerDecay>
|   |   |       | |   | `-ArraySubscriptExpr 0x1653b523310 <col:30, col:43> 'felem [3]' lvalue
|   |   |       | |   |   |-ImplicitCastExpr 0x1653b5232f8 <col:30, col:40> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   |       | |   |   | `-ArraySubscriptExpr 0x1653b5232b0 <col:30, col:40> 'felem [17][3]':'felem [17][3]' lvalue
|   |   |       | |   |   |   |-ImplicitCastExpr 0x1653b523280 <col:30> 'felem (*)[17][3]' <LValueToRValue>
|   |   |       | |   |   |   | `-DeclRefExpr 0x1653b523240 <col:30> 'felem (*)[17][3]' lvalue Var 0x1653b513558 'pre_comp' 'felem (*)[17][3]'
|   |   |       | |   |   |   `-ImplicitCastExpr 0x1653b523298 <col:39> 'unsigned int' <LValueToRValue>
|   |   |       | |   |   |     `-DeclRefExpr 0x1653b523260 <col:39> 'unsigned int' lvalue Var 0x1653b512fe8 'i' 'unsigned int'
|   |   |       | |   |   `-IntegerLiteral 0x1653b5232d0 <col:42> 'int' 1
|   |   |       | |   `-IntegerLiteral 0x1653b523330 <col:45> 'int' 0
|   |   |       | `-ImplicitCastExpr 0x1653b523428 <col:49> 'const limb *':'const limb *' <NoOp>
|   |   |       |   `-ImplicitCastExpr 0x1653b523410 <col:49> 'limb *' <ArrayToPointerDecay>
|   |   |       |     `-DeclRefExpr 0x1653b523390 <col:49> 'felem':'limb [4]' lvalue Var 0x1653b513be8 'x_out' 'felem':'limb [4]'
|   |   |       |-CallExpr 0x1653b5235e8 <line:1515:17, col:54> 'void'
|   |   |       | |-ImplicitCastExpr 0x1653b5235d0 <col:17> 'void (*)(limb *, const limb *)' <FunctionToPointerDecay>
|   |   |       | | `-DeclRefExpr 0x1653b523440 <col:17> 'void (limb *, const limb *)' Function 0x1653b2fc8d8 'felem_assign' 'void (limb *, const limb *)'
|   |   |       | |-ImplicitCastExpr 0x1653b523618 <col:30, col:46> 'limb *' <ArrayToPointerDecay>
|   |   |       | | `-ArraySubscriptExpr 0x1653b523590 <col:30, col:46> 'felem':'limb [4]' lvalue
|   |   |       | |   |-ImplicitCastExpr 0x1653b523578 <col:30, col:43> 'felem *' <ArrayToPointerDecay>
|   |   |       | |   | `-ArraySubscriptExpr 0x1653b523530 <col:30, col:43> 'felem [3]' lvalue
|   |   |       | |   |   |-ImplicitCastExpr 0x1653b523518 <col:30, col:40> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   |       | |   |   | `-ArraySubscriptExpr 0x1653b5234d0 <col:30, col:40> 'felem [17][3]':'felem [17][3]' lvalue
|   |   |       | |   |   |   |-ImplicitCastExpr 0x1653b5234a0 <col:30> 'felem (*)[17][3]' <LValueToRValue>
|   |   |       | |   |   |   | `-DeclRefExpr 0x1653b523460 <col:30> 'felem (*)[17][3]' lvalue Var 0x1653b513558 'pre_comp' 'felem (*)[17][3]'
|   |   |       | |   |   |   `-ImplicitCastExpr 0x1653b5234b8 <col:39> 'unsigned int' <LValueToRValue>
|   |   |       | |   |   |     `-DeclRefExpr 0x1653b523480 <col:39> 'unsigned int' lvalue Var 0x1653b512fe8 'i' 'unsigned int'
|   |   |       | |   |   `-IntegerLiteral 0x1653b5234f0 <col:42> 'int' 1
|   |   |       | |   `-IntegerLiteral 0x1653b523550 <col:45> 'int' 1
|   |   |       | `-ImplicitCastExpr 0x1653b523648 <col:49> 'const limb *':'const limb *' <NoOp>
|   |   |       |   `-ImplicitCastExpr 0x1653b523630 <col:49> 'limb *' <ArrayToPointerDecay>
|   |   |       |     `-DeclRefExpr 0x1653b5235b0 <col:49> 'felem':'limb [4]' lvalue Var 0x1653b513c60 'y_out' 'felem':'limb [4]'
|   |   |       |-CallExpr 0x1653b523808 <line:1516:17, col:54> 'void'
|   |   |       | |-ImplicitCastExpr 0x1653b5237f0 <col:17> 'void (*)(limb *, const limb *)' <FunctionToPointerDecay>
|   |   |       | | `-DeclRefExpr 0x1653b523660 <col:17> 'void (limb *, const limb *)' Function 0x1653b2fc8d8 'felem_assign' 'void (limb *, const limb *)'
|   |   |       | |-ImplicitCastExpr 0x1653b523838 <col:30, col:46> 'limb *' <ArrayToPointerDecay>
|   |   |       | | `-ArraySubscriptExpr 0x1653b5237b0 <col:30, col:46> 'felem':'limb [4]' lvalue
|   |   |       | |   |-ImplicitCastExpr 0x1653b523798 <col:30, col:43> 'felem *' <ArrayToPointerDecay>
|   |   |       | |   | `-ArraySubscriptExpr 0x1653b523750 <col:30, col:43> 'felem [3]' lvalue
|   |   |       | |   |   |-ImplicitCastExpr 0x1653b523738 <col:30, col:40> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   |       | |   |   | `-ArraySubscriptExpr 0x1653b5236f0 <col:30, col:40> 'felem [17][3]':'felem [17][3]' lvalue
|   |   |       | |   |   |   |-ImplicitCastExpr 0x1653b5236c0 <col:30> 'felem (*)[17][3]' <LValueToRValue>
|   |   |       | |   |   |   | `-DeclRefExpr 0x1653b523680 <col:30> 'felem (*)[17][3]' lvalue Var 0x1653b513558 'pre_comp' 'felem (*)[17][3]'
|   |   |       | |   |   |   `-ImplicitCastExpr 0x1653b5236d8 <col:39> 'unsigned int' <LValueToRValue>
|   |   |       | |   |   |     `-DeclRefExpr 0x1653b5236a0 <col:39> 'unsigned int' lvalue Var 0x1653b512fe8 'i' 'unsigned int'
|   |   |       | |   |   `-IntegerLiteral 0x1653b523710 <col:42> 'int' 1
|   |   |       | |   `-IntegerLiteral 0x1653b523770 <col:45> 'int' 2
|   |   |       | `-ImplicitCastExpr 0x1653b523868 <col:49> 'const limb *':'const limb *' <NoOp>
|   |   |       |   `-ImplicitCastExpr 0x1653b523850 <col:49> 'limb *' <ArrayToPointerDecay>
|   |   |       |     `-DeclRefExpr 0x1653b5237d0 <col:49> 'felem':'limb [4]' lvalue Var 0x1653b513cd8 'z_out' 'felem':'limb [4]'
|   |   |       `-ForStmt 0x1653b5153f0 <line:1517:17, line:1531:17>
|   |   |         |-BinaryOperator 0x1653b5238e0 <line:1517:22, col:26> 'int' '='
|   |   |         | |-DeclRefExpr 0x1653b523880 <col:22> 'int' lvalue Var 0x1653b512f50 'j' 'int'
|   |   |         | `-IntegerLiteral 0x1653b5238b8 <col:26> 'int' 2
|   |   |         |-<<<NULL>>>
|   |   |         |-BinaryOperator 0x1653b523960 <col:29, col:34> 'int' '<='
|   |   |         | |-ImplicitCastExpr 0x1653b523948 <col:29> 'int' <LValueToRValue>
|   |   |         | | `-DeclRefExpr 0x1653b523900 <col:29> 'int' lvalue Var 0x1653b512f50 'j' 'int'
|   |   |         | `-IntegerLiteral 0x1653b523920 <col:34> 'int' 16
|   |   |         |-UnaryOperator 0x1653b5239a0 <col:38, col:40> 'int' prefix '++'
|   |   |         | `-DeclRefExpr 0x1653b523980 <col:40> 'int' lvalue Var 0x1653b512f50 'j' 'int'
|   |   |         `-CompoundStmt 0x1653b5153d8 <col:43, line:1531:17>
|   |   |           `-IfStmt 0x1653b5153b0 <line:1518:21, line:1530:21> has_else
|   |   |             |-BinaryOperator 0x1653b523a18 <line:1518:25, col:29> 'int' '&'
|   |   |             | |-ImplicitCastExpr 0x1653b523a00 <col:25> 'int' <LValueToRValue>
|   |   |             | | `-DeclRefExpr 0x1653b5239b8 <col:25> 'int' lvalue Var 0x1653b512f50 'j' 'int'
|   |   |             | `-IntegerLiteral 0x1653b5239d8 <col:29> 'int' 1
|   |   |             |-CompoundStmt 0x1653b524978 <col:32, line:1525:21>
|   |   |             | `-CallExpr 0x1653b5247a0 <line:1519:25, line:1524:56> 'void'
|   |   |             |   |-ImplicitCastExpr 0x1653b524788 <line:1519:25> 'void (*)(limb *, limb *, limb *, const limb *, const limb *, const limb *, const int, const limb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   |   |             |   | `-DeclRefExpr 0x1653b523a38 <col:25> 'void (limb *, limb *, limb *, const limb *, const limb *, const limb *, const int, const limb *, const limb *, const limb *)' Function 0x1653b3fb0b8 'point_add' 'void (limb *, limb *, limb *, const limb *, const limb *, const limb *, const int, const limb *, const limb *, const limb *)'
|   |   |             |   |-ImplicitCastExpr 0x1653b524810 <col:35, col:51> 'limb *' <ArrayToPointerDecay>
|   |   |             |   | `-ArraySubscriptExpr 0x1653b523b98 <col:35, col:51> 'felem':'limb [4]' lvalue
|   |   |             |   |   |-ImplicitCastExpr 0x1653b523b80 <col:35, col:48> 'felem *' <ArrayToPointerDecay>
|   |   |             |   |   | `-ArraySubscriptExpr 0x1653b523b38 <col:35, col:48> 'felem [3]' lvalue
|   |   |             |   |   |   |-ImplicitCastExpr 0x1653b523b08 <col:35, col:45> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   |             |   |   |   | `-ArraySubscriptExpr 0x1653b523ac8 <col:35, col:45> 'felem [17][3]':'felem [17][3]' lvalue
|   |   |             |   |   |   |   |-ImplicitCastExpr 0x1653b523a98 <col:35> 'felem (*)[17][3]' <LValueToRValue>
|   |   |             |   |   |   |   | `-DeclRefExpr 0x1653b523a58 <col:35> 'felem (*)[17][3]' lvalue Var 0x1653b513558 'pre_comp' 'felem (*)[17][3]'
|   |   |             |   |   |   |   `-ImplicitCastExpr 0x1653b523ab0 <col:44> 'unsigned int' <LValueToRValue>
|   |   |             |   |   |   |     `-DeclRefExpr 0x1653b523a78 <col:44> 'unsigned int' lvalue Var 0x1653b512fe8 'i' 'unsigned int'
|   |   |             |   |   |   `-ImplicitCastExpr 0x1653b523b20 <col:47> 'int' <LValueToRValue>
|   |   |             |   |   |     `-DeclRefExpr 0x1653b523ae8 <col:47> 'int' lvalue Var 0x1653b512f50 'j' 'int'
|   |   |             |   |   `-IntegerLiteral 0x1653b523b58 <col:50> 'int' 0
|   |   |             |   |-ImplicitCastExpr 0x1653b524828 <col:54, col:70> 'limb *' <ArrayToPointerDecay>
|   |   |             |   | `-ArraySubscriptExpr 0x1653b523cf8 <col:54, col:70> 'felem':'limb [4]' lvalue
|   |   |             |   |   |-ImplicitCastExpr 0x1653b523ce0 <col:54, col:67> 'felem *' <ArrayToPointerDecay>
|   |   |             |   |   | `-ArraySubscriptExpr 0x1653b523c98 <col:54, col:67> 'felem [3]' lvalue
|   |   |             |   |   |   |-ImplicitCastExpr 0x1653b523c68 <col:54, col:64> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   |             |   |   |   | `-ArraySubscriptExpr 0x1653b523c28 <col:54, col:64> 'felem [17][3]':'felem [17][3]' lvalue
|   |   |             |   |   |   |   |-ImplicitCastExpr 0x1653b523bf8 <col:54> 'felem (*)[17][3]' <LValueToRValue>
|   |   |             |   |   |   |   | `-DeclRefExpr 0x1653b523bb8 <col:54> 'felem (*)[17][3]' lvalue Var 0x1653b513558 'pre_comp' 'felem (*)[17][3]'
|   |   |             |   |   |   |   `-ImplicitCastExpr 0x1653b523c10 <col:63> 'unsigned int' <LValueToRValue>
|   |   |             |   |   |   |     `-DeclRefExpr 0x1653b523bd8 <col:63> 'unsigned int' lvalue Var 0x1653b512fe8 'i' 'unsigned int'
|   |   |             |   |   |   `-ImplicitCastExpr 0x1653b523c80 <col:66> 'int' <LValueToRValue>
|   |   |             |   |   |     `-DeclRefExpr 0x1653b523c48 <col:66> 'int' lvalue Var 0x1653b512f50 'j' 'int'
|   |   |             |   |   `-IntegerLiteral 0x1653b523cb8 <col:69> 'int' 1
|   |   |             |   |-ImplicitCastExpr 0x1653b524840 <line:1520:35, col:51> 'limb *' <ArrayToPointerDecay>
|   |   |             |   | `-ArraySubscriptExpr 0x1653b523e58 <col:35, col:51> 'felem':'limb [4]' lvalue
|   |   |             |   |   |-ImplicitCastExpr 0x1653b523e40 <col:35, col:48> 'felem *' <ArrayToPointerDecay>
|   |   |             |   |   | `-ArraySubscriptExpr 0x1653b523df8 <col:35, col:48> 'felem [3]' lvalue
|   |   |             |   |   |   |-ImplicitCastExpr 0x1653b523dc8 <col:35, col:45> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   |             |   |   |   | `-ArraySubscriptExpr 0x1653b523d88 <col:35, col:45> 'felem [17][3]':'felem [17][3]' lvalue
|   |   |             |   |   |   |   |-ImplicitCastExpr 0x1653b523d58 <col:35> 'felem (*)[17][3]' <LValueToRValue>
|   |   |             |   |   |   |   | `-DeclRefExpr 0x1653b523d18 <col:35> 'felem (*)[17][3]' lvalue Var 0x1653b513558 'pre_comp' 'felem (*)[17][3]'
|   |   |             |   |   |   |   `-ImplicitCastExpr 0x1653b523d70 <col:44> 'unsigned int' <LValueToRValue>
|   |   |             |   |   |   |     `-DeclRefExpr 0x1653b523d38 <col:44> 'unsigned int' lvalue Var 0x1653b512fe8 'i' 'unsigned int'
|   |   |             |   |   |   `-ImplicitCastExpr 0x1653b523de0 <col:47> 'int' <LValueToRValue>
|   |   |             |   |   |     `-DeclRefExpr 0x1653b523da8 <col:47> 'int' lvalue Var 0x1653b512f50 'j' 'int'
|   |   |             |   |   `-IntegerLiteral 0x1653b523e18 <col:50> 'int' 2
|   |   |             |   |-ImplicitCastExpr 0x1653b524870 <col:54, col:70> 'const limb *':'const limb *' <NoOp>
|   |   |             |   | `-ImplicitCastExpr 0x1653b524858 <col:54, col:70> 'limb *' <ArrayToPointerDecay>
|   |   |             |   |   `-ArraySubscriptExpr 0x1653b523fa8 <col:54, col:70> 'felem':'limb [4]' lvalue
|   |   |             |   |     |-ImplicitCastExpr 0x1653b523f90 <col:54, col:67> 'felem *' <ArrayToPointerDecay>
|   |   |             |   |     | `-ArraySubscriptExpr 0x1653b523f48 <col:54, col:67> 'felem [3]' lvalue
|   |   |             |   |     |   |-ImplicitCastExpr 0x1653b523f30 <col:54, col:64> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   |             |   |     |   | `-ArraySubscriptExpr 0x1653b523ee8 <col:54, col:64> 'felem [17][3]':'felem [17][3]' lvalue
|   |   |             |   |     |   |   |-ImplicitCastExpr 0x1653b523eb8 <col:54> 'felem (*)[17][3]' <LValueToRValue>
|   |   |             |   |     |   |   | `-DeclRefExpr 0x1653b523e78 <col:54> 'felem (*)[17][3]' lvalue Var 0x1653b513558 'pre_comp' 'felem (*)[17][3]'
|   |   |             |   |     |   |   `-ImplicitCastExpr 0x1653b523ed0 <col:63> 'unsigned int' <LValueToRValue>
|   |   |             |   |     |   |     `-DeclRefExpr 0x1653b523e98 <col:63> 'unsigned int' lvalue Var 0x1653b512fe8 'i' 'unsigned int'
|   |   |             |   |     |   `-IntegerLiteral 0x1653b523f08 <col:66> 'int' 1
|   |   |             |   |     `-IntegerLiteral 0x1653b523f68 <col:69> 'int' 0
|   |   |             |   |-ImplicitCastExpr 0x1653b5248a0 <line:1521:35, col:51> 'const limb *':'const limb *' <NoOp>
|   |   |             |   | `-ImplicitCastExpr 0x1653b524888 <col:35, col:51> 'limb *' <ArrayToPointerDecay>
|   |   |             |   |   `-ArraySubscriptExpr 0x1653b5240f8 <col:35, col:51> 'felem':'limb [4]' lvalue
|   |   |             |   |     |-ImplicitCastExpr 0x1653b5240e0 <col:35, col:48> 'felem *' <ArrayToPointerDecay>
|   |   |             |   |     | `-ArraySubscriptExpr 0x1653b524098 <col:35, col:48> 'felem [3]' lvalue
|   |   |             |   |     |   |-ImplicitCastExpr 0x1653b524080 <col:35, col:45> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   |             |   |     |   | `-ArraySubscriptExpr 0x1653b524038 <col:35, col:45> 'felem [17][3]':'felem [17][3]' lvalue
|   |   |             |   |     |   |   |-ImplicitCastExpr 0x1653b524008 <col:35> 'felem (*)[17][3]' <LValueToRValue>
|   |   |             |   |     |   |   | `-DeclRefExpr 0x1653b523fc8 <col:35> 'felem (*)[17][3]' lvalue Var 0x1653b513558 'pre_comp' 'felem (*)[17][3]'
|   |   |             |   |     |   |   `-ImplicitCastExpr 0x1653b524020 <col:44> 'unsigned int' <LValueToRValue>
|   |   |             |   |     |   |     `-DeclRefExpr 0x1653b523fe8 <col:44> 'unsigned int' lvalue Var 0x1653b512fe8 'i' 'unsigned int'
|   |   |             |   |     |   `-IntegerLiteral 0x1653b524058 <col:47> 'int' 1
|   |   |             |   |     `-IntegerLiteral 0x1653b5240b8 <col:50> 'int' 1
|   |   |             |   |-ImplicitCastExpr 0x1653b5248d0 <col:54, col:70> 'const limb *':'const limb *' <NoOp>
|   |   |             |   | `-ImplicitCastExpr 0x1653b5248b8 <col:54, col:70> 'limb *' <ArrayToPointerDecay>
|   |   |             |   |   `-ArraySubscriptExpr 0x1653b524248 <col:54, col:70> 'felem':'limb [4]' lvalue
|   |   |             |   |     |-ImplicitCastExpr 0x1653b524230 <col:54, col:67> 'felem *' <ArrayToPointerDecay>
|   |   |             |   |     | `-ArraySubscriptExpr 0x1653b5241e8 <col:54, col:67> 'felem [3]' lvalue
|   |   |             |   |     |   |-ImplicitCastExpr 0x1653b5241d0 <col:54, col:64> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   |             |   |     |   | `-ArraySubscriptExpr 0x1653b524188 <col:54, col:64> 'felem [17][3]':'felem [17][3]' lvalue
|   |   |             |   |     |   |   |-ImplicitCastExpr 0x1653b524158 <col:54> 'felem (*)[17][3]' <LValueToRValue>
|   |   |             |   |     |   |   | `-DeclRefExpr 0x1653b524118 <col:54> 'felem (*)[17][3]' lvalue Var 0x1653b513558 'pre_comp' 'felem (*)[17][3]'
|   |   |             |   |     |   |   `-ImplicitCastExpr 0x1653b524170 <col:63> 'unsigned int' <LValueToRValue>
|   |   |             |   |     |   |     `-DeclRefExpr 0x1653b524138 <col:63> 'unsigned int' lvalue Var 0x1653b512fe8 'i' 'unsigned int'
|   |   |             |   |     |   `-IntegerLiteral 0x1653b5241a8 <col:66> 'int' 1
|   |   |             |   |     `-IntegerLiteral 0x1653b524208 <col:69> 'int' 2
|   |   |             |   |-IntegerLiteral 0x1653b524268 <col:73> 'int' 0
|   |   |             |   |-ImplicitCastExpr 0x1653b524900 <line:1522:35, col:55> 'const limb *':'const limb *' <NoOp>
|   |   |             |   | `-ImplicitCastExpr 0x1653b5248e8 <col:35, col:55> 'limb *' <ArrayToPointerDecay>
|   |   |             |   |   `-ArraySubscriptExpr 0x1653b524418 <col:35, col:55> 'felem':'limb [4]' lvalue
|   |   |             |   |     |-ImplicitCastExpr 0x1653b524400 <col:35, col:52> 'felem *' <ArrayToPointerDecay>
|   |   |             |   |     | `-ArraySubscriptExpr 0x1653b5243b8 <col:35, col:52> 'felem [3]' lvalue
|   |   |             |   |     |   |-ImplicitCastExpr 0x1653b5243a0 <col:35, col:45> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   |             |   |     |   | `-ArraySubscriptExpr 0x1653b524300 <col:35, col:45> 'felem [17][3]':'felem [17][3]' lvalue
|   |   |             |   |     |   |   |-ImplicitCastExpr 0x1653b5242d0 <col:35> 'felem (*)[17][3]' <LValueToRValue>
|   |   |             |   |     |   |   | `-DeclRefExpr 0x1653b524290 <col:35> 'felem (*)[17][3]' lvalue Var 0x1653b513558 'pre_comp' 'felem (*)[17][3]'
|   |   |             |   |     |   |   `-ImplicitCastExpr 0x1653b5242e8 <col:44> 'unsigned int' <LValueToRValue>
|   |   |             |   |     |   |     `-DeclRefExpr 0x1653b5242b0 <col:44> 'unsigned int' lvalue Var 0x1653b512fe8 'i' 'unsigned int'
|   |   |             |   |     |   `-BinaryOperator 0x1653b524380 <col:47, col:51> 'int' '-'
|   |   |             |   |     |     |-ImplicitCastExpr 0x1653b524368 <col:47> 'int' <LValueToRValue>
|   |   |             |   |     |     | `-DeclRefExpr 0x1653b524320 <col:47> 'int' lvalue Var 0x1653b512f50 'j' 'int'
|   |   |             |   |     |     `-IntegerLiteral 0x1653b524340 <col:51> 'int' 1
|   |   |             |   |     `-IntegerLiteral 0x1653b5243d8 <col:54> 'int' 0
|   |   |             |   |-ImplicitCastExpr 0x1653b524930 <line:1523:35, col:55> 'const limb *':'const limb *' <NoOp>
|   |   |             |   | `-ImplicitCastExpr 0x1653b524918 <col:35, col:55> 'limb *' <ArrayToPointerDecay>
|   |   |             |   |   `-ArraySubscriptExpr 0x1653b5245c0 <col:35, col:55> 'felem':'limb [4]' lvalue
|   |   |             |   |     |-ImplicitCastExpr 0x1653b5245a8 <col:35, col:52> 'felem *' <ArrayToPointerDecay>
|   |   |             |   |     | `-ArraySubscriptExpr 0x1653b524560 <col:35, col:52> 'felem [3]' lvalue
|   |   |             |   |     |   |-ImplicitCastExpr 0x1653b524548 <col:35, col:45> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   |             |   |     |   | `-ArraySubscriptExpr 0x1653b5244a8 <col:35, col:45> 'felem [17][3]':'felem [17][3]' lvalue
|   |   |             |   |     |   |   |-ImplicitCastExpr 0x1653b524478 <col:35> 'felem (*)[17][3]' <LValueToRValue>
|   |   |             |   |     |   |   | `-DeclRefExpr 0x1653b524438 <col:35> 'felem (*)[17][3]' lvalue Var 0x1653b513558 'pre_comp' 'felem (*)[17][3]'
|   |   |             |   |     |   |   `-ImplicitCastExpr 0x1653b524490 <col:44> 'unsigned int' <LValueToRValue>
|   |   |             |   |     |   |     `-DeclRefExpr 0x1653b524458 <col:44> 'unsigned int' lvalue Var 0x1653b512fe8 'i' 'unsigned int'
|   |   |             |   |     |   `-BinaryOperator 0x1653b524528 <col:47, col:51> 'int' '-'
|   |   |             |   |     |     |-ImplicitCastExpr 0x1653b524510 <col:47> 'int' <LValueToRValue>
|   |   |             |   |     |     | `-DeclRefExpr 0x1653b5244c8 <col:47> 'int' lvalue Var 0x1653b512f50 'j' 'int'
|   |   |             |   |     |     `-IntegerLiteral 0x1653b5244e8 <col:51> 'int' 1
|   |   |             |   |     `-IntegerLiteral 0x1653b524580 <col:54> 'int' 1
|   |   |             |   `-ImplicitCastExpr 0x1653b524960 <line:1524:35, col:55> 'const limb *':'const limb *' <NoOp>
|   |   |             |     `-ImplicitCastExpr 0x1653b524948 <col:35, col:55> 'limb *' <ArrayToPointerDecay>
|   |   |             |       `-ArraySubscriptExpr 0x1653b524768 <col:35, col:55> 'felem':'limb [4]' lvalue
|   |   |             |         |-ImplicitCastExpr 0x1653b524750 <col:35, col:52> 'felem *' <ArrayToPointerDecay>
|   |   |             |         | `-ArraySubscriptExpr 0x1653b524708 <col:35, col:52> 'felem [3]' lvalue
|   |   |             |         |   |-ImplicitCastExpr 0x1653b5246f0 <col:35, col:45> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   |             |         |   | `-ArraySubscriptExpr 0x1653b524650 <col:35, col:45> 'felem [17][3]':'felem [17][3]' lvalue
|   |   |             |         |   |   |-ImplicitCastExpr 0x1653b524620 <col:35> 'felem (*)[17][3]' <LValueToRValue>
|   |   |             |         |   |   | `-DeclRefExpr 0x1653b5245e0 <col:35> 'felem (*)[17][3]' lvalue Var 0x1653b513558 'pre_comp' 'felem (*)[17][3]'
|   |   |             |         |   |   `-ImplicitCastExpr 0x1653b524638 <col:44> 'unsigned int' <LValueToRValue>
|   |   |             |         |   |     `-DeclRefExpr 0x1653b524600 <col:44> 'unsigned int' lvalue Var 0x1653b512fe8 'i' 'unsigned int'
|   |   |             |         |   `-BinaryOperator 0x1653b5246d0 <col:47, col:51> 'int' '-'
|   |   |             |         |     |-ImplicitCastExpr 0x1653b5246b8 <col:47> 'int' <LValueToRValue>
|   |   |             |         |     | `-DeclRefExpr 0x1653b524670 <col:47> 'int' lvalue Var 0x1653b512f50 'j' 'int'
|   |   |             |         |     `-IntegerLiteral 0x1653b524690 <col:51> 'int' 1
|   |   |             |         `-IntegerLiteral 0x1653b524728 <col:54> 'int' 2
|   |   |             `-CompoundStmt 0x1653b515398 <line:1525:28, line:1530:21>
|   |   |               `-CallExpr 0x1653b515270 <line:1526:25, line:1529:59> 'void'
|   |   |                 |-ImplicitCastExpr 0x1653b515258 <line:1526:25> 'void (*)(limb *, limb *, limb *, const limb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   |   |                 | `-DeclRefExpr 0x1653b524990 <col:25> 'void (limb *, limb *, limb *, const limb *, const limb *, const limb *)' Function 0x1653b3f43b8 'point_double' 'void (limb *, limb *, limb *, const limb *, const limb *, const limb *)'
|   |   |                 |-ImplicitCastExpr 0x1653b5152c0 <col:38, col:54> 'limb *' <ArrayToPointerDecay>
|   |   |                 | `-ArraySubscriptExpr 0x1653b524af0 <col:38, col:54> 'felem':'limb [4]' lvalue
|   |   |                 |   |-ImplicitCastExpr 0x1653b524ad8 <col:38, col:51> 'felem *' <ArrayToPointerDecay>
|   |   |                 |   | `-ArraySubscriptExpr 0x1653b524a90 <col:38, col:51> 'felem [3]' lvalue
|   |   |                 |   |   |-ImplicitCastExpr 0x1653b524a60 <col:38, col:48> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   |                 |   |   | `-ArraySubscriptExpr 0x1653b524a20 <col:38, col:48> 'felem [17][3]':'felem [17][3]' lvalue
|   |   |                 |   |   |   |-ImplicitCastExpr 0x1653b5249f0 <col:38> 'felem (*)[17][3]' <LValueToRValue>
|   |   |                 |   |   |   | `-DeclRefExpr 0x1653b5249b0 <col:38> 'felem (*)[17][3]' lvalue Var 0x1653b513558 'pre_comp' 'felem (*)[17][3]'
|   |   |                 |   |   |   `-ImplicitCastExpr 0x1653b524a08 <col:47> 'unsigned int' <LValueToRValue>
|   |   |                 |   |   |     `-DeclRefExpr 0x1653b5249d0 <col:47> 'unsigned int' lvalue Var 0x1653b512fe8 'i' 'unsigned int'
|   |   |                 |   |   `-ImplicitCastExpr 0x1653b524a78 <col:50> 'int' <LValueToRValue>
|   |   |                 |   |     `-DeclRefExpr 0x1653b524a40 <col:50> 'int' lvalue Var 0x1653b512f50 'j' 'int'
|   |   |                 |   `-IntegerLiteral 0x1653b524ab0 <col:53> 'int' 0
|   |   |                 |-ImplicitCastExpr 0x1653b5152d8 <col:57, col:73> 'limb *' <ArrayToPointerDecay>
|   |   |                 | `-ArraySubscriptExpr 0x1653b524c50 <col:57, col:73> 'felem':'limb [4]' lvalue
|   |   |                 |   |-ImplicitCastExpr 0x1653b524c38 <col:57, col:70> 'felem *' <ArrayToPointerDecay>
|   |   |                 |   | `-ArraySubscriptExpr 0x1653b524bf0 <col:57, col:70> 'felem [3]' lvalue
|   |   |                 |   |   |-ImplicitCastExpr 0x1653b524bc0 <col:57, col:67> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   |                 |   |   | `-ArraySubscriptExpr 0x1653b524b80 <col:57, col:67> 'felem [17][3]':'felem [17][3]' lvalue
|   |   |                 |   |   |   |-ImplicitCastExpr 0x1653b524b50 <col:57> 'felem (*)[17][3]' <LValueToRValue>
|   |   |                 |   |   |   | `-DeclRefExpr 0x1653b524b10 <col:57> 'felem (*)[17][3]' lvalue Var 0x1653b513558 'pre_comp' 'felem (*)[17][3]'
|   |   |                 |   |   |   `-ImplicitCastExpr 0x1653b524b68 <col:66> 'unsigned int' <LValueToRValue>
|   |   |                 |   |   |     `-DeclRefExpr 0x1653b524b30 <col:66> 'unsigned int' lvalue Var 0x1653b512fe8 'i' 'unsigned int'
|   |   |                 |   |   `-ImplicitCastExpr 0x1653b524bd8 <col:69> 'int' <LValueToRValue>
|   |   |                 |   |     `-DeclRefExpr 0x1653b524ba0 <col:69> 'int' lvalue Var 0x1653b512f50 'j' 'int'
|   |   |                 |   `-IntegerLiteral 0x1653b524c10 <col:72> 'int' 1
|   |   |                 |-ImplicitCastExpr 0x1653b5152f0 <line:1527:38, col:54> 'limb *' <ArrayToPointerDecay>
|   |   |                 | `-ArraySubscriptExpr 0x1653b524db0 <col:38, col:54> 'felem':'limb [4]' lvalue
|   |   |                 |   |-ImplicitCastExpr 0x1653b524d98 <col:38, col:51> 'felem *' <ArrayToPointerDecay>
|   |   |                 |   | `-ArraySubscriptExpr 0x1653b524d50 <col:38, col:51> 'felem [3]' lvalue
|   |   |                 |   |   |-ImplicitCastExpr 0x1653b524d20 <col:38, col:48> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   |                 |   |   | `-ArraySubscriptExpr 0x1653b524ce0 <col:38, col:48> 'felem [17][3]':'felem [17][3]' lvalue
|   |   |                 |   |   |   |-ImplicitCastExpr 0x1653b524cb0 <col:38> 'felem (*)[17][3]' <LValueToRValue>
|   |   |                 |   |   |   | `-DeclRefExpr 0x1653b524c70 <col:38> 'felem (*)[17][3]' lvalue Var 0x1653b513558 'pre_comp' 'felem (*)[17][3]'
|   |   |                 |   |   |   `-ImplicitCastExpr 0x1653b524cc8 <col:47> 'unsigned int' <LValueToRValue>
|   |   |                 |   |   |     `-DeclRefExpr 0x1653b524c90 <col:47> 'unsigned int' lvalue Var 0x1653b512fe8 'i' 'unsigned int'
|   |   |                 |   |   `-ImplicitCastExpr 0x1653b524d38 <col:50> 'int' <LValueToRValue>
|   |   |                 |   |     `-DeclRefExpr 0x1653b524d00 <col:50> 'int' lvalue Var 0x1653b512f50 'j' 'int'
|   |   |                 |   `-IntegerLiteral 0x1653b524d70 <col:53> 'int' 2
|   |   |                 |-ImplicitCastExpr 0x1653b515320 <col:57, col:77> 'const limb *':'const limb *' <NoOp>
|   |   |                 | `-ImplicitCastExpr 0x1653b515308 <col:57, col:77> 'limb *' <ArrayToPointerDecay>
|   |   |                 |   `-ArraySubscriptExpr 0x1653b524f58 <col:57, col:77> 'felem':'limb [4]' lvalue
|   |   |                 |     |-ImplicitCastExpr 0x1653b524f40 <col:57, col:74> 'felem *' <ArrayToPointerDecay>
|   |   |                 |     | `-ArraySubscriptExpr 0x1653b524ef8 <col:57, col:74> 'felem [3]' lvalue
|   |   |                 |     |   |-ImplicitCastExpr 0x1653b524ee0 <col:57, col:67> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   |                 |     |   | `-ArraySubscriptExpr 0x1653b524e40 <col:57, col:67> 'felem [17][3]':'felem [17][3]' lvalue
|   |   |                 |     |   |   |-ImplicitCastExpr 0x1653b524e10 <col:57> 'felem (*)[17][3]' <LValueToRValue>
|   |   |                 |     |   |   | `-DeclRefExpr 0x1653b524dd0 <col:57> 'felem (*)[17][3]' lvalue Var 0x1653b513558 'pre_comp' 'felem (*)[17][3]'
|   |   |                 |     |   |   `-ImplicitCastExpr 0x1653b524e28 <col:66> 'unsigned int' <LValueToRValue>
|   |   |                 |     |   |     `-DeclRefExpr 0x1653b524df0 <col:66> 'unsigned int' lvalue Var 0x1653b512fe8 'i' 'unsigned int'
|   |   |                 |     |   `-BinaryOperator 0x1653b524ec0 <col:69, col:73> 'int' '/'
|   |   |                 |     |     |-ImplicitCastExpr 0x1653b524ea8 <col:69> 'int' <LValueToRValue>
|   |   |                 |     |     | `-DeclRefExpr 0x1653b524e60 <col:69> 'int' lvalue Var 0x1653b512f50 'j' 'int'
|   |   |                 |     |     `-IntegerLiteral 0x1653b524e80 <col:73> 'int' 2
|   |   |                 |     `-IntegerLiteral 0x1653b524f18 <col:76> 'int' 0
|   |   |                 |-ImplicitCastExpr 0x1653b515350 <line:1528:38, col:58> 'const limb *':'const limb *' <NoOp>
|   |   |                 | `-ImplicitCastExpr 0x1653b515338 <col:38, col:58> 'limb *' <ArrayToPointerDecay>
|   |   |                 |   `-ArraySubscriptExpr 0x1653b515090 <col:38, col:58> 'felem':'limb [4]' lvalue
|   |   |                 |     |-ImplicitCastExpr 0x1653b515078 <col:38, col:55> 'felem *' <ArrayToPointerDecay>
|   |   |                 |     | `-ArraySubscriptExpr 0x1653b515030 <col:38, col:55> 'felem [3]' lvalue
|   |   |                 |     |   |-ImplicitCastExpr 0x1653b515018 <col:38, col:48> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   |                 |     |   | `-ArraySubscriptExpr 0x1653b514f78 <col:38, col:48> 'felem [17][3]':'felem [17][3]' lvalue
|   |   |                 |     |   |   |-ImplicitCastExpr 0x1653b524fb8 <col:38> 'felem (*)[17][3]' <LValueToRValue>
|   |   |                 |     |   |   | `-DeclRefExpr 0x1653b524f78 <col:38> 'felem (*)[17][3]' lvalue Var 0x1653b513558 'pre_comp' 'felem (*)[17][3]'
|   |   |                 |     |   |   `-ImplicitCastExpr 0x1653b514f60 <col:47> 'unsigned int' <LValueToRValue>
|   |   |                 |     |   |     `-DeclRefExpr 0x1653b524f98 <col:47> 'unsigned int' lvalue Var 0x1653b512fe8 'i' 'unsigned int'
|   |   |                 |     |   `-BinaryOperator 0x1653b514ff8 <col:50, col:54> 'int' '/'
|   |   |                 |     |     |-ImplicitCastExpr 0x1653b514fe0 <col:50> 'int' <LValueToRValue>
|   |   |                 |     |     | `-DeclRefExpr 0x1653b514f98 <col:50> 'int' lvalue Var 0x1653b512f50 'j' 'int'
|   |   |                 |     |     `-IntegerLiteral 0x1653b514fb8 <col:54> 'int' 2
|   |   |                 |     `-IntegerLiteral 0x1653b515050 <col:57> 'int' 1
|   |   |                 `-ImplicitCastExpr 0x1653b515380 <line:1529:38, col:58> 'const limb *':'const limb *' <NoOp>
|   |   |                   `-ImplicitCastExpr 0x1653b515368 <col:38, col:58> 'limb *' <ArrayToPointerDecay>
|   |   |                     `-ArraySubscriptExpr 0x1653b515238 <col:38, col:58> 'felem':'limb [4]' lvalue
|   |   |                       |-ImplicitCastExpr 0x1653b515220 <col:38, col:55> 'felem *' <ArrayToPointerDecay>
|   |   |                       | `-ArraySubscriptExpr 0x1653b5151d8 <col:38, col:55> 'felem [3]' lvalue
|   |   |                       |   |-ImplicitCastExpr 0x1653b5151c0 <col:38, col:48> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   |                       |   | `-ArraySubscriptExpr 0x1653b515120 <col:38, col:48> 'felem [17][3]':'felem [17][3]' lvalue
|   |   |                       |   |   |-ImplicitCastExpr 0x1653b5150f0 <col:38> 'felem (*)[17][3]' <LValueToRValue>
|   |   |                       |   |   | `-DeclRefExpr 0x1653b5150b0 <col:38> 'felem (*)[17][3]' lvalue Var 0x1653b513558 'pre_comp' 'felem (*)[17][3]'
|   |   |                       |   |   `-ImplicitCastExpr 0x1653b515108 <col:47> 'unsigned int' <LValueToRValue>
|   |   |                       |   |     `-DeclRefExpr 0x1653b5150d0 <col:47> 'unsigned int' lvalue Var 0x1653b512fe8 'i' 'unsigned int'
|   |   |                       |   `-BinaryOperator 0x1653b5151a0 <col:50, col:54> 'int' '/'
|   |   |                       |     |-ImplicitCastExpr 0x1653b515188 <col:50> 'int' <LValueToRValue>
|   |   |                       |     | `-DeclRefExpr 0x1653b515140 <col:50> 'int' lvalue Var 0x1653b512f50 'j' 'int'
|   |   |                       |     `-IntegerLiteral 0x1653b515160 <col:54> 'int' 2
|   |   |                       `-IntegerLiteral 0x1653b5151f8 <col:57> 'int' 2
|   |   `-IfStmt 0x1653b515768 <line:1534:9, line:1535:72>
|   |     |-ImplicitCastExpr 0x1653b515518 <line:1534:13> 'int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1653b5154f8 <col:13> 'int' lvalue Var 0x1653b513080 'mixed' 'int'
|   |     `-CallExpr 0x1653b515700 <line:1535:13, col:72> 'void'
|   |       |-ImplicitCastExpr 0x1653b5156e8 <col:13> 'void (*)(size_t, felem (*)[3], felem *)' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x1653b515530 <col:13> 'void (size_t, felem (*)[3], felem *)' Function 0x1653b51dbf8 'make_points_affine' 'void (size_t, felem (*)[3], felem *)'
|   |       |-BinaryOperator 0x1653b5155c8 <col:32, col:45> 'unsigned long long' '*'
|   |       | |-ImplicitCastExpr 0x1653b515598 <col:32> 'size_t':'unsigned long long' <LValueToRValue>
|   |       | | `-DeclRefExpr 0x1653b515550 <col:32> 'size_t':'unsigned long long' lvalue Var 0x1653b5139a0 'num_points' 'size_t':'unsigned long long'
|   |       | `-ImplicitCastExpr 0x1653b5155b0 <col:45> 'unsigned long long' <IntegralCast>
|   |       |   `-IntegerLiteral 0x1653b515570 <col:45> 'int' 17
|   |       |-ImplicitCastExpr 0x1653b515738 <col:49, col:59> 'felem (*)[3]' <ArrayToPointerDecay>
|   |       | `-ArraySubscriptExpr 0x1653b515648 <col:49, col:59> 'felem [17][3]':'felem [17][3]' lvalue
|   |       |   |-ImplicitCastExpr 0x1653b515630 <col:49> 'felem (*)[17][3]' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x1653b5155e8 <col:49> 'felem (*)[17][3]' lvalue Var 0x1653b513558 'pre_comp' 'felem (*)[17][3]'
|   |       |   `-IntegerLiteral 0x1653b515608 <col:58> 'int' 0
|   |       `-ImplicitCastExpr 0x1653b515750 <col:62> 'felem *' <LValueToRValue>
|   |         `-DeclRefExpr 0x1653b515668 <col:62> 'felem *' lvalue Var 0x1653b513688 'tmp_felems' 'felem *'
|   |-IfStmt 0x1653b5167e0 <line:1539:5, line:1564:69> has_else
|   | |-OpaqueValueExpr 0x1653b5167c8 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x1653b5162f0 <line:1539:46, line:1560:5>
|   | | |-CallExpr 0x1653b5159b8 <line:1540:9, col:45> 'void *'
|   | | | |-ImplicitCastExpr 0x1653b5159a0 <col:9> 'void *(*)(void *, int, unsigned long long)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x1653b5158a8 <col:9> 'void *(void *, int, unsigned long long)' Function 0x1653b2ba1f0 'memset' 'void *(void *, int, unsigned long long)'
|   | | | |-ImplicitCastExpr 0x1653b515a08 <col:16> 'void *' <BitCast>
|   | | | | `-ImplicitCastExpr 0x1653b5159f0 <col:16> 'u8 *' <ArrayToPointerDecay>
|   | | | |   `-DeclRefExpr 0x1653b5158c8 <col:16> 'felem_bytearray':'u8 [28]' lvalue Var 0x1653b5131c0 'g_secret' 'felem_bytearray':'u8 [28]'
|   | | | |-IntegerLiteral 0x1653b515900 <col:26> 'int' 0
|   | | | `-UnaryExprOrTypeTraitExpr 0x1653b515968 <col:29, col:44> 'unsigned long long' sizeof
|   | | |   `-ParenExpr 0x1653b515948 <col:35, col:44> 'felem_bytearray':'u8 [28]' lvalue
|   | | |     `-DeclRefExpr 0x1653b515928 <col:36> 'felem_bytearray':'u8 [28]' lvalue Var 0x1653b5131c0 'g_secret' 'felem_bytearray':'u8 [28]' non_odr_use_unevaluated
|   | | |-IfStmt 0x1653b515c20 <line:1542:9, line:1553:13> has_else
|   | | | |-OpaqueValueExpr 0x1653b515c08 <<invalid sloc>> '_Bool'
|   | | | |-CompoundStmt 0x1653b515b88 <line:1542:70, line:1552:9>
|   | | | | `-IfStmt 0x1653b515b10 <line:1547:13, line:1550:13>
|   | | | |   |-OpaqueValueExpr 0x1653b515af8 <<invalid sloc>> '_Bool'
|   | | | |   `-CompoundStmt 0x1653b515ae0 <line:1547:67, line:1550:13>
|   | | | |     `-GotoStmt 0x1653b515ac8 <line:1549:17, col:22> 'err' 0x1653b514880
|   | | | `-NullStmt 0x1653b515c00 <line:1553:13>
|   | | |-CallExpr 0x1653b515ce0 <line:1554:9, col:45> 'void'
|   | | | |-ImplicitCastExpr 0x1653b515cc8 <col:9> 'void (*)(u8 *, const u8 *, unsigned int)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x1653b515c48 <col:9> 'void (u8 *, const u8 *, unsigned int)' Function 0x1653b2fa3b8 'flip_endian' 'void (u8 *, const u8 *, unsigned int)'
|   | | | |-ImplicitCastExpr 0x1653b515d18 <col:21> 'u8 *' <ArrayToPointerDecay>
|   | | | | `-DeclRefExpr 0x1653b515c68 <col:21> 'felem_bytearray':'u8 [28]' lvalue Var 0x1653b5131c0 'g_secret' 'felem_bytearray':'u8 [28]'
|   | | | |-ImplicitCastExpr 0x1653b515d48 <col:31> 'const u8 *' <NoOp>
|   | | | | `-ImplicitCastExpr 0x1653b515d30 <col:31> 'u8 *' <ArrayToPointerDecay>
|   | | | |   `-DeclRefExpr 0x1653b515c88 <col:31> 'felem_bytearray':'u8 [28]' lvalue Var 0x1653b5137b8 'tmp' 'felem_bytearray':'u8 [28]'
|   | | | `-ImplicitCastExpr 0x1653b515d60 <col:36> 'unsigned int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1653b515ca8 <col:36> 'unsigned int' lvalue Var 0x1653b513850 'num_bytes' 'unsigned int'
|   | | `-CallExpr 0x1653b5161b0 <line:1556:9, line:1559:69> 'void'
|   | |   |-ImplicitCastExpr 0x1653b516198 <line:1556:9> 'void (*)(limb *, limb *, limb *, const felem_bytearray *, const unsigned int, const u8 *, const int, const felem (*)[17][3], const felem (*)[16][3])' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x1653b515d78 <col:9> 'void (limb *, limb *, limb *, const felem_bytearray *, const unsigned int, const u8 *, const int, const felem (*)[17][3], const felem (*)[16][3])' Function 0x1653b400398 'batch_mul' 'void (limb *, limb *, limb *, const felem_bytearray *, const unsigned int, const u8 *, const int, const felem (*)[17][3], const felem (*)[16][3])'
|   | |   |-ImplicitCastExpr 0x1653b516218 <col:19> 'limb *' <ArrayToPointerDecay>
|   | |   | `-DeclRefExpr 0x1653b515d98 <col:19> 'felem':'limb [4]' lvalue Var 0x1653b513be8 'x_out' 'felem':'limb [4]'
|   | |   |-ImplicitCastExpr 0x1653b516230 <col:26> 'limb *' <ArrayToPointerDecay>
|   | |   | `-DeclRefExpr 0x1653b515db8 <col:26> 'felem':'limb [4]' lvalue Var 0x1653b513c60 'y_out' 'felem':'limb [4]'
|   | |   |-ImplicitCastExpr 0x1653b516248 <col:33> 'limb *' <ArrayToPointerDecay>
|   | |   | `-DeclRefExpr 0x1653b515dd8 <col:33> 'felem':'limb [4]' lvalue Var 0x1653b513cd8 'z_out' 'felem':'limb [4]'
|   | |   |-CStyleCastExpr 0x1653b515ee8 <line:1557:19, col:45> 'const felem_bytearray (*)' <NoOp>
|   | |   | `-ImplicitCastExpr 0x1653b515e90 <col:45> 'felem_bytearray *' <LValueToRValue> part_of_explicit_cast
|   | |   |   `-DeclRefExpr 0x1653b515df8 <col:45> 'felem_bytearray *' lvalue Var 0x1653b5132a8 'secrets' 'felem_bytearray *'
|   | |   |-ImplicitCastExpr 0x1653b516278 <col:54> 'unsigned int' <IntegralCast>
|   | |   | `-ImplicitCastExpr 0x1653b516260 <col:54> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x1653b515f10 <col:54> 'size_t':'unsigned long long' lvalue Var 0x1653b5139a0 'num_points' 'size_t':'unsigned long long'
|   | |   |-ImplicitCastExpr 0x1653b5162a8 <line:1558:19> 'const u8 *' <NoOp>
|   | |   | `-ImplicitCastExpr 0x1653b516290 <col:19> 'u8 *' <ArrayToPointerDecay>
|   | |   |   `-DeclRefExpr 0x1653b515f30 <col:19> 'felem_bytearray':'u8 [28]' lvalue Var 0x1653b5131c0 'g_secret' 'felem_bytearray':'u8 [28]'
|   | |   |-ImplicitCastExpr 0x1653b5162c0 <line:1559:19> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x1653b515f50 <col:19> 'int' lvalue Var 0x1653b513080 'mixed' 'int'
|   | |   |-CStyleCastExpr 0x1653b5160f8 <col:26, col:49> 'const felem (*)[17][3]' <NoOp>
|   | |   | `-ImplicitCastExpr 0x1653b5160a8 <col:49> 'felem (*)[17][3]' <LValueToRValue> part_of_explicit_cast
|   | |   |   `-DeclRefExpr 0x1653b515fc0 <col:49> 'felem (*)[17][3]' lvalue Var 0x1653b513558 'pre_comp' 'felem (*)[17][3]'
|   | |   `-ImplicitCastExpr 0x1653b5162d8 <col:59> 'const felem (*)[16][3]' <LValueToRValue>
|   | |     `-DeclRefExpr 0x1653b516120 <col:59> 'const felem (*)[16][3]' lvalue Var 0x1653b513fd8 'g_pre_comp' 'const felem (*)[16][3]'
|   | `-CallExpr 0x1653b5166a0 <line:1562:9, line:1564:69> 'void'
|   |   |-ImplicitCastExpr 0x1653b516688 <line:1562:9> 'void (*)(limb *, limb *, limb *, const felem_bytearray *, const unsigned int, const u8 *, const int, const felem (*)[17][3], const felem (*)[16][3])' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1653b516320 <col:9> 'void (limb *, limb *, limb *, const felem_bytearray *, const unsigned int, const u8 *, const int, const felem (*)[17][3], const felem (*)[16][3])' Function 0x1653b400398 'batch_mul' 'void (limb *, limb *, limb *, const felem_bytearray *, const unsigned int, const u8 *, const int, const felem (*)[17][3], const felem (*)[16][3])'
|   |   |-ImplicitCastExpr 0x1653b516708 <col:19> 'limb *' <ArrayToPointerDecay>
|   |   | `-DeclRefExpr 0x1653b516340 <col:19> 'felem':'limb [4]' lvalue Var 0x1653b513be8 'x_out' 'felem':'limb [4]'
|   |   |-ImplicitCastExpr 0x1653b516720 <col:26> 'limb *' <ArrayToPointerDecay>
|   |   | `-DeclRefExpr 0x1653b516360 <col:26> 'felem':'limb [4]' lvalue Var 0x1653b513c60 'y_out' 'felem':'limb [4]'
|   |   |-ImplicitCastExpr 0x1653b516738 <col:33> 'limb *' <ArrayToPointerDecay>
|   |   | `-DeclRefExpr 0x1653b516380 <col:33> 'felem':'limb [4]' lvalue Var 0x1653b513cd8 'z_out' 'felem':'limb [4]'
|   |   |-CStyleCastExpr 0x1653b5163f0 <line:1563:19, col:45> 'const felem_bytearray (*)' <NoOp>
|   |   | `-ImplicitCastExpr 0x1653b5163d8 <col:45> 'felem_bytearray *' <LValueToRValue> part_of_explicit_cast
|   |   |   `-DeclRefExpr 0x1653b5163a0 <col:45> 'felem_bytearray *' lvalue Var 0x1653b5132a8 'secrets' 'felem_bytearray *'
|   |   |-ImplicitCastExpr 0x1653b516768 <col:54> 'unsigned int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x1653b516750 <col:54> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1653b516418 <col:54> 'size_t':'unsigned long long' lvalue Var 0x1653b5139a0 'num_points' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x1653b516780 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const u8 *' <NullToPointer>
|   |   | `-ParenExpr 0x1653b5164a0 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x1653b516478 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x1653b516438 <col:26> 'int' 0
|   |   |-ImplicitCastExpr 0x1653b516798 <.//openssl//file_jk/before\crypto\ec\ecp_nistp224.c:1564:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1653b5164c0 <col:25> 'int' lvalue Var 0x1653b513080 'mixed' 'int'
|   |   |-CStyleCastExpr 0x1653b5165d8 <col:32, col:55> 'const felem (*)[17][3]' <NoOp>
|   |   | `-ImplicitCastExpr 0x1653b5165c0 <col:55> 'felem (*)[17][3]' <LValueToRValue> part_of_explicit_cast
|   |   |   `-DeclRefExpr 0x1653b516530 <col:55> 'felem (*)[17][3]' lvalue Var 0x1653b513558 'pre_comp' 'felem (*)[17][3]'
|   |   `-ImplicitCastExpr 0x1653b5167b0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const felem (*)[16][3]':'const felem (*)[16][3]' <NullToPointer>
|   |     `-ParenExpr 0x1653b516668 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1653b516640 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1653b516600 <col:26> 'int' 0
|   |-CallExpr 0x1653b516898 <.//openssl//file_jk/before\crypto\ec\ecp_nistp224.c:1566:5, col:31> 'void'
|   | |-ImplicitCastExpr 0x1653b516880 <col:5> 'void (*)(limb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b516808 <col:5> 'void (limb *, const limb *)' Function 0x1653b3e9e38 'felem_contract' 'void (limb *, const limb *)'
|   | |-ImplicitCastExpr 0x1653b5168c8 <col:20> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b516828 <col:20> 'felem':'limb [4]' lvalue Var 0x1653b513a80 'x_in' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x1653b5168f8 <col:26> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b5168e0 <col:26> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b516860 <col:26> 'felem':'limb [4]' lvalue Var 0x1653b513be8 'x_out' 'felem':'limb [4]'
|   |-CallExpr 0x1653b5169a0 <line:1567:5, col:31> 'void'
|   | |-ImplicitCastExpr 0x1653b516988 <col:5> 'void (*)(limb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b516910 <col:5> 'void (limb *, const limb *)' Function 0x1653b3e9e38 'felem_contract' 'void (limb *, const limb *)'
|   | |-ImplicitCastExpr 0x1653b5169d0 <col:20> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b516930 <col:20> 'felem':'limb [4]' lvalue Var 0x1653b513af8 'y_in' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x1653b516a00 <col:26> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b5169e8 <col:26> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b516968 <col:26> 'felem':'limb [4]' lvalue Var 0x1653b513c60 'y_out' 'felem':'limb [4]'
|   |-CallExpr 0x1653b516aa8 <line:1568:5, col:31> 'void'
|   | |-ImplicitCastExpr 0x1653b516a90 <col:5> 'void (*)(limb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b516a18 <col:5> 'void (limb *, const limb *)' Function 0x1653b3e9e38 'felem_contract' 'void (limb *, const limb *)'
|   | |-ImplicitCastExpr 0x1653b516ad8 <col:20> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1653b516a38 <col:20> 'felem':'limb [4]' lvalue Var 0x1653b513b70 'z_in' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x1653b516b08 <col:26> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x1653b516af0 <col:26> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1653b516a70 <col:26> 'felem':'limb [4]' lvalue Var 0x1653b513cd8 'z_out' 'felem':'limb [4]'
|   |-IfStmt 0x1653b516be8 <line:1569:5, line:1573:5>
|   | |-OpaqueValueExpr 0x1653b516bd0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1653b516bb8 <line:1570:34, line:1573:5>
|   |   `-GotoStmt 0x1653b516ba0 <line:1572:9, col:14> 'err' 0x1653b514880
|   |-LabelStmt 0x1653b516c80 <line:1576:2, col:5> 'err'
|   | `-NullStmt 0x1653b516c78 <col:5>
|   |-CallExpr 0x1653b516e20 <line:1580:5, col:25> 'int'
|   | |-ImplicitCastExpr 0x1653b516e08 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b516dc8 <col:5> 'int ()' Function 0x1653b51b438 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x1653b516e48 <col:18> 'felem_bytearray *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1653b516de8 <col:18> 'felem_bytearray *' lvalue Var 0x1653b5132a8 'secrets' 'felem_bytearray *'
|   |-CallExpr 0x1653b516eb8 <line:1581:5, col:26> 'int'
|   | |-ImplicitCastExpr 0x1653b516ea0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b516e60 <col:5> 'int ()' Function 0x1653b51b438 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x1653b516ee0 <col:18> 'felem (*)[17][3]' <LValueToRValue>
|   |   `-DeclRefExpr 0x1653b516e80 <col:18> 'felem (*)[17][3]' lvalue Var 0x1653b513558 'pre_comp' 'felem (*)[17][3]'
|   |-CallExpr 0x1653b524fe0 <line:1582:5, col:28> 'int'
|   | |-ImplicitCastExpr 0x1653b516f38 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b516ef8 <col:5> 'int ()' Function 0x1653b51b438 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x1653b525008 <col:18> 'felem *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1653b516f18 <col:18> 'felem *' lvalue Var 0x1653b513688 'tmp_felems' 'felem *'
|   `-ReturnStmt 0x1653b525058 <line:1583:5, col:12>
|     `-ImplicitCastExpr 0x1653b525040 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1653b525020 <col:12> 'int' lvalue Var 0x1653b51eea0 'ret' 'int'
|-FunctionDecl 0x1653b5252a8 <line:1586:1, line:1709:1> line:1586:5 invalid ec_GFp_nistp224_precompute_mult 'int (int *, int *)'
| |-ParmVarDecl 0x1653b525188 <col:37, col:47> col:47 invalid group 'int *'
| |-ParmVarDecl 0x1653b525208 <col:54, col:62> col:62 invalid ctx 'int *'
| `-CompoundStmt 0x1653b5382c8 <line:1587:1, line:1709:1>
|   |-DeclStmt 0x1653b525418 <line:1588:5, col:16>
|   | `-VarDecl 0x1653b525388 <col:5, col:15> col:9 used ret 'int' cinit
|   |   `-IntegerLiteral 0x1653b5253f0 <col:15> 'int' 0
|   |-DeclStmt 0x1653b525548 <line:1589:5, col:34>
|   | `-VarDecl 0x1653b525440 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/before\crypto\ec\ecp_nistp224.c:1589:24 used pre 'NISTP224_PRE_COMP *' cinit
|   |   `-ImplicitCastExpr 0x1653b525530 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'NISTP224_PRE_COMP *' <NullToPointer>
|   |     `-ParenExpr 0x1653b525510 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1653b5254e8 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1653b5254a8 <col:26> 'int' 0
|   |-DeclStmt 0x1653b525678 <.//openssl//file_jk/before\crypto\ec\ecp_nistp224.c:1590:5, col:13>
|   | |-VarDecl 0x1653b525578 <col:5, col:9> col:9 used i 'int'
|   | `-VarDecl 0x1653b5255f8 <col:5, col:12> col:12 used j 'int'
|   |-DeclStmt 0x1653b5258e0 <line:1594:5, col:25>
|   | `-VarDecl 0x1653b525878 <col:5, col:24> col:11 used tmp_felems 'felem [32]'
|   |-IfStmt 0x1653b525ae0 <line:1598:5, line:1600:20>
|   | |-OpaqueValueExpr 0x1653b525ac8 <<invalid sloc>> '_Bool'
|   | `-IfStmt 0x1653b525ab0 <line:1599:9, line:1600:20>
|   |   |-OpaqueValueExpr 0x1653b525a98 <<invalid sloc>> '_Bool'
|   |   `-ReturnStmt 0x1653b525a88 <col:13, col:20>
|   |     `-IntegerLiteral 0x1653b525a60 <col:20> 'int' 0
|   |-IfStmt 0x1653b525ce8 <line:1602:5, line:1603:14>
|   | |-OpaqueValueExpr 0x1653b525cd0 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1653b525cb8 <col:9, col:14> 'err' 0x1653b525c68
|   |-IfStmt 0x1653b525db8 <line:1605:5, line:1606:14>
|   | |-OpaqueValueExpr 0x1653b525da0 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1653b525d88 <col:9, col:14> 'err' 0x1653b525c68
|   |-IfStmt 0x1653b525ea8 <line:1608:5, line:1609:14>
|   | |-OpaqueValueExpr 0x1653b525e90 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1653b525e78 <col:9, col:14> 'err' 0x1653b525c68
|   |-IfStmt 0x1653b5261a0 <line:1612:5, line:1613:14>
|   | |-OpaqueValueExpr 0x1653b526188 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1653b526170 <col:9, col:14> 'err' 0x1653b525c68
|   |-IfStmt 0x1653b5263b8 <line:1614:5, line:1615:14>
|   | |-BinaryOperator 0x1653b526380 <line:1614:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | |-ParenExpr 0x1653b5262c0 <.//openssl//file_jk/before\crypto\ec\ecp_nistp224.c:1614:9, col:39> 'NISTP224_PRE_COMP *'
|   | | | `-BinaryOperator 0x1653b5262a0 <col:10, col:38> 'NISTP224_PRE_COMP *' '='
|   | | |   |-DeclRefExpr 0x1653b5261b8 <col:10> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   | | |   `-CallExpr 0x1653b526280 <col:16, col:38> 'NISTP224_PRE_COMP *'
|   | | |     `-ImplicitCastExpr 0x1653b526268 <col:16> 'NISTP224_PRE_COMP *(*)()' <FunctionToPointerDecay>
|   | | |       `-DeclRefExpr 0x1653b5261f0 <col:16> 'NISTP224_PRE_COMP *()' Function 0x1653b512c38 'nistp224_pre_comp_new' 'NISTP224_PRE_COMP *()'
|   | | `-ImplicitCastExpr 0x1653b526368 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'NISTP224_PRE_COMP *' <BitCast>
|   | |   `-ParenExpr 0x1653b526348 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1653b526320 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1653b5262e0 <col:26> 'int' 0
|   | `-GotoStmt 0x1653b5263a0 <.//openssl//file_jk/before\crypto\ec\ecp_nistp224.c:1615:9, col:14> 'err' 0x1653b525c68
|   |-IfStmt 0x1653b5266e8 <line:1619:5, line:1622:5>
|   | |-OpaqueValueExpr 0x1653b5266d0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1653b5266b0 <line:1619:69, line:1622:5>
|   |   |-CallExpr 0x1653b5265b0 <line:1620:9, col:62> 'void *'
|   |   | |-ImplicitCastExpr 0x1653b526598 <col:9> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1653b526418 <col:9> 'void *(void *, const void *, unsigned long long)' Function 0x1653b2b7768 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   |   | |-ImplicitCastExpr 0x1653b526600 <col:16, col:21> 'void *' <BitCast>
|   |   | | `-ImplicitCastExpr 0x1653b5265e8 <col:16, col:21> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |   `-MemberExpr 0x1653b526470 <col:16, col:21> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48
|   |   | |     `-ImplicitCastExpr 0x1653b526458 <col:16> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x1653b526438 <col:16> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   |   | |-ImplicitCastExpr 0x1653b526630 <col:33> 'const void *' <BitCast>
|   |   | | `-ImplicitCastExpr 0x1653b526618 <col:33> 'const felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |   `-DeclRefExpr 0x1653b5264a0 <col:33> 'const felem [2][16][3]' lvalue Var 0x1653b3e17d8 'gmul' 'const felem [2][16][3]'
|   |   | `-UnaryExprOrTypeTraitExpr 0x1653b526548 <col:39, col:61> 'unsigned long long' sizeof
|   |   |   `-ParenExpr 0x1653b526528 <col:45, col:61> 'felem [2][16][3]' lvalue
|   |   |     `-MemberExpr 0x1653b5264f8 <col:46, col:51> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48 non_odr_use_unevaluated
|   |   |       `-ImplicitCastExpr 0x1653b5264e0 <col:46> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x1653b5264c0 <col:46> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *' non_odr_use_unevaluated
|   |   `-GotoStmt 0x1653b526698 <line:1621:9, col:14> 'done' 0x1653b526648
|   |-IfStmt 0x1653b526bc8 <line:1623:5, line:1626:14>
|   | |-OpaqueValueExpr 0x1653b526bb0 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1653b526b98 <col:9, col:14> 'err' 0x1653b525c68
|   |-ForStmt 0x1653b532000 <line:1631:5, line:1654:5>
|   | |-BinaryOperator 0x1653b526c40 <line:1631:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x1653b526be0 <col:10> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   | | `-IntegerLiteral 0x1653b526c18 <col:14> 'int' 1
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1653b526cc0 <col:17, col:22> 'int' '<='
|   | | |-ImplicitCastExpr 0x1653b526ca8 <col:17> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b526c60 <col:17> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   | | `-IntegerLiteral 0x1653b526c80 <col:22> 'int' 8
|   | |-CompoundAssignOperator 0x1653b526d40 <col:25, col:31> 'int' '<<=' ComputeLHSTy='int' ComputeResultTy='int'
|   | | |-DeclRefExpr 0x1653b526ce0 <col:25> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   | | `-IntegerLiteral 0x1653b526d00 <col:31> 'int' 1
|   | `-CompoundStmt 0x1653b531fc8 <col:34, line:1654:5>
|   |   |-CallExpr 0x1653b5176d8 <line:1632:9, line:1634:72> 'void'
|   |   | |-ImplicitCastExpr 0x1653b5176c0 <line:1632:9> 'void (*)(limb *, limb *, limb *, const limb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1653b526d70 <col:9> 'void (limb *, limb *, limb *, const limb *, const limb *, const limb *)' Function 0x1653b3f43b8 'point_double' 'void (limb *, limb *, limb *, const limb *, const limb *, const limb *)'
|   |   | |-ImplicitCastExpr 0x1653b517728 <col:22, col:45> 'limb *' <ArrayToPointerDecay>
|   |   | | `-ArraySubscriptExpr 0x1653b526f08 <col:22, col:45> 'felem':'limb [4]' lvalue
|   |   | |   |-ImplicitCastExpr 0x1653b526ef0 <col:22, col:42> 'felem *' <ArrayToPointerDecay>
|   |   | |   | `-ArraySubscriptExpr 0x1653b526ea8 <col:22, col:42> 'felem [3]' lvalue
|   |   | |   |   |-ImplicitCastExpr 0x1653b526e78 <col:22, col:39> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |   |   | `-ArraySubscriptExpr 0x1653b526e38 <col:22, col:39> 'felem [16][3]' lvalue
|   |   | |   |   |   |-ImplicitCastExpr 0x1653b526e20 <col:22, col:27> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |   |   |   | `-MemberExpr 0x1653b526dc8 <col:22, col:27> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48
|   |   | |   |   |   |   `-ImplicitCastExpr 0x1653b526db0 <col:22> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |   |   |   |     `-DeclRefExpr 0x1653b526d90 <col:22> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   |   | |   |   |   `-IntegerLiteral 0x1653b526df8 <col:38> 'int' 1
|   |   | |   |   `-ImplicitCastExpr 0x1653b526e90 <col:41> 'int' <LValueToRValue>
|   |   | |   |     `-DeclRefExpr 0x1653b526e58 <col:41> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   |   | |   `-IntegerLiteral 0x1653b526ec8 <col:44> 'int' 0
|   |   | |-ImplicitCastExpr 0x1653b517740 <col:48, col:71> 'limb *' <ArrayToPointerDecay>
|   |   | | `-ArraySubscriptExpr 0x1653b517040 <col:48, col:71> 'felem':'limb [4]' lvalue
|   |   | |   |-ImplicitCastExpr 0x1653b517028 <col:48, col:68> 'felem *' <ArrayToPointerDecay>
|   |   | |   | `-ArraySubscriptExpr 0x1653b516fe0 <col:48, col:68> 'felem [3]' lvalue
|   |   | |   |   |-ImplicitCastExpr 0x1653b516fb0 <col:48, col:65> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |   |   | `-ArraySubscriptExpr 0x1653b516f70 <col:48, col:65> 'felem [16][3]' lvalue
|   |   | |   |   |   |-ImplicitCastExpr 0x1653b526fb8 <col:48, col:53> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |   |   |   | `-MemberExpr 0x1653b526f60 <col:48, col:53> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48
|   |   | |   |   |   |   `-ImplicitCastExpr 0x1653b526f48 <col:48> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |   |   |   |     `-DeclRefExpr 0x1653b526f28 <col:48> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   |   | |   |   |   `-IntegerLiteral 0x1653b526f90 <col:64> 'int' 1
|   |   | |   |   `-ImplicitCastExpr 0x1653b516fc8 <col:67> 'int' <LValueToRValue>
|   |   | |   |     `-DeclRefExpr 0x1653b516f90 <col:67> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   |   | |   `-IntegerLiteral 0x1653b517000 <col:70> 'int' 1
|   |   | |-ImplicitCastExpr 0x1653b517758 <line:1633:22, col:45> 'limb *' <ArrayToPointerDecay>
|   |   | | `-ArraySubscriptExpr 0x1653b5171d8 <col:22, col:45> 'felem':'limb [4]' lvalue
|   |   | |   |-ImplicitCastExpr 0x1653b5171c0 <col:22, col:42> 'felem *' <ArrayToPointerDecay>
|   |   | |   | `-ArraySubscriptExpr 0x1653b517178 <col:22, col:42> 'felem [3]' lvalue
|   |   | |   |   |-ImplicitCastExpr 0x1653b517148 <col:22, col:39> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |   |   | `-ArraySubscriptExpr 0x1653b517108 <col:22, col:39> 'felem [16][3]' lvalue
|   |   | |   |   |   |-ImplicitCastExpr 0x1653b5170f0 <col:22, col:27> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |   |   |   | `-MemberExpr 0x1653b517098 <col:22, col:27> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48
|   |   | |   |   |   |   `-ImplicitCastExpr 0x1653b517080 <col:22> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |   |   |   |     `-DeclRefExpr 0x1653b517060 <col:22> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   |   | |   |   |   `-IntegerLiteral 0x1653b5170c8 <col:38> 'int' 1
|   |   | |   |   `-ImplicitCastExpr 0x1653b517160 <col:41> 'int' <LValueToRValue>
|   |   | |   |     `-DeclRefExpr 0x1653b517128 <col:41> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   |   | |   `-IntegerLiteral 0x1653b517198 <col:44> 'int' 2
|   |   | |-ImplicitCastExpr 0x1653b517788 <col:48, col:71> 'const limb *':'const limb *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x1653b517770 <col:48, col:71> 'limb *' <ArrayToPointerDecay>
|   |   | |   `-ArraySubscriptExpr 0x1653b517370 <col:48, col:71> 'felem':'limb [4]' lvalue
|   |   | |     |-ImplicitCastExpr 0x1653b517358 <col:48, col:68> 'felem *' <ArrayToPointerDecay>
|   |   | |     | `-ArraySubscriptExpr 0x1653b517310 <col:48, col:68> 'felem [3]' lvalue
|   |   | |     |   |-ImplicitCastExpr 0x1653b5172e0 <col:48, col:65> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |     |   | `-ArraySubscriptExpr 0x1653b5172a0 <col:48, col:65> 'felem [16][3]' lvalue
|   |   | |     |   |   |-ImplicitCastExpr 0x1653b517288 <col:48, col:53> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |     |   |   | `-MemberExpr 0x1653b517230 <col:48, col:53> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48
|   |   | |     |   |   |   `-ImplicitCastExpr 0x1653b517218 <col:48> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |     |   |   |     `-DeclRefExpr 0x1653b5171f8 <col:48> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   |   | |     |   |   `-IntegerLiteral 0x1653b517260 <col:64> 'int' 0
|   |   | |     |   `-ImplicitCastExpr 0x1653b5172f8 <col:67> 'int' <LValueToRValue>
|   |   | |     |     `-DeclRefExpr 0x1653b5172c0 <col:67> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   |   | |     `-IntegerLiteral 0x1653b517330 <col:70> 'int' 0
|   |   | |-ImplicitCastExpr 0x1653b5177b8 <line:1634:22, col:45> 'const limb *':'const limb *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x1653b5177a0 <col:22, col:45> 'limb *' <ArrayToPointerDecay>
|   |   | |   `-ArraySubscriptExpr 0x1653b517508 <col:22, col:45> 'felem':'limb [4]' lvalue
|   |   | |     |-ImplicitCastExpr 0x1653b5174f0 <col:22, col:42> 'felem *' <ArrayToPointerDecay>
|   |   | |     | `-ArraySubscriptExpr 0x1653b5174a8 <col:22, col:42> 'felem [3]' lvalue
|   |   | |     |   |-ImplicitCastExpr 0x1653b517478 <col:22, col:39> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |     |   | `-ArraySubscriptExpr 0x1653b517438 <col:22, col:39> 'felem [16][3]' lvalue
|   |   | |     |   |   |-ImplicitCastExpr 0x1653b517420 <col:22, col:27> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |     |   |   | `-MemberExpr 0x1653b5173c8 <col:22, col:27> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48
|   |   | |     |   |   |   `-ImplicitCastExpr 0x1653b5173b0 <col:22> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |     |   |   |     `-DeclRefExpr 0x1653b517390 <col:22> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   |   | |     |   |   `-IntegerLiteral 0x1653b5173f8 <col:38> 'int' 0
|   |   | |     |   `-ImplicitCastExpr 0x1653b517490 <col:41> 'int' <LValueToRValue>
|   |   | |     |     `-DeclRefExpr 0x1653b517458 <col:41> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   |   | |     `-IntegerLiteral 0x1653b5174c8 <col:44> 'int' 1
|   |   | `-ImplicitCastExpr 0x1653b5177e8 <col:48, col:71> 'const limb *':'const limb *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x1653b5177d0 <col:48, col:71> 'limb *' <ArrayToPointerDecay>
|   |   |     `-ArraySubscriptExpr 0x1653b5176a0 <col:48, col:71> 'felem':'limb [4]' lvalue
|   |   |       |-ImplicitCastExpr 0x1653b517688 <col:48, col:68> 'felem *' <ArrayToPointerDecay>
|   |   |       | `-ArraySubscriptExpr 0x1653b517640 <col:48, col:68> 'felem [3]' lvalue
|   |   |       |   |-ImplicitCastExpr 0x1653b517610 <col:48, col:65> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   |       |   | `-ArraySubscriptExpr 0x1653b5175d0 <col:48, col:65> 'felem [16][3]' lvalue
|   |   |       |   |   |-ImplicitCastExpr 0x1653b5175b8 <col:48, col:53> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   |       |   |   | `-MemberExpr 0x1653b517560 <col:48, col:53> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48
|   |   |       |   |   |   `-ImplicitCastExpr 0x1653b517548 <col:48> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   |       |   |   |     `-DeclRefExpr 0x1653b517528 <col:48> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   |   |       |   |   `-IntegerLiteral 0x1653b517590 <col:64> 'int' 0
|   |   |       |   `-ImplicitCastExpr 0x1653b517628 <col:67> 'int' <LValueToRValue>
|   |   |       |     `-DeclRefExpr 0x1653b5175f0 <col:67> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   |   |       `-IntegerLiteral 0x1653b517660 <col:70> 'int' 2
|   |   |-ForStmt 0x1653b518440 <line:1635:9, line:1639:9>
|   |   | |-BinaryOperator 0x1653b517860 <line:1635:14, col:18> 'int' '='
|   |   | | |-DeclRefExpr 0x1653b517800 <col:14> 'int' lvalue Var 0x1653b5255f8 'j' 'int'
|   |   | | `-IntegerLiteral 0x1653b517838 <col:18> 'int' 0
|   |   | |-<<<NULL>>>
|   |   | |-BinaryOperator 0x1653b5178e0 <col:21, col:25> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x1653b5178c8 <col:21> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1653b517880 <col:21> 'int' lvalue Var 0x1653b5255f8 'j' 'int'
|   |   | | `-IntegerLiteral 0x1653b5178a0 <col:25> 'int' 27
|   |   | |-UnaryOperator 0x1653b517920 <col:29, col:31> 'int' prefix '++'
|   |   | | `-DeclRefExpr 0x1653b517900 <col:31> 'int' lvalue Var 0x1653b5255f8 'j' 'int'
|   |   | `-CompoundStmt 0x1653b518428 <col:34, line:1639:9>
|   |   |   `-CallExpr 0x1653b518300 <line:1636:13, line:1638:76> 'void'
|   |   |     |-ImplicitCastExpr 0x1653b5182e8 <line:1636:13> 'void (*)(limb *, limb *, limb *, const limb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x1653b517938 <col:13> 'void (limb *, limb *, limb *, const limb *, const limb *, const limb *)' Function 0x1653b3f43b8 'point_double' 'void (limb *, limb *, limb *, const limb *, const limb *, const limb *)'
|   |   |     |-ImplicitCastExpr 0x1653b518350 <col:26, col:49> 'limb *' <ArrayToPointerDecay>
|   |   |     | `-ArraySubscriptExpr 0x1653b517ad0 <col:26, col:49> 'felem':'limb [4]' lvalue
|   |   |     |   |-ImplicitCastExpr 0x1653b517ab8 <col:26, col:46> 'felem *' <ArrayToPointerDecay>
|   |   |     |   | `-ArraySubscriptExpr 0x1653b517a70 <col:26, col:46> 'felem [3]' lvalue
|   |   |     |   |   |-ImplicitCastExpr 0x1653b517a40 <col:26, col:43> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   |     |   |   | `-ArraySubscriptExpr 0x1653b517a00 <col:26, col:43> 'felem [16][3]' lvalue
|   |   |     |   |   |   |-ImplicitCastExpr 0x1653b5179e8 <col:26, col:31> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   |     |   |   |   | `-MemberExpr 0x1653b517990 <col:26, col:31> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48
|   |   |     |   |   |   |   `-ImplicitCastExpr 0x1653b517978 <col:26> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   |     |   |   |   |     `-DeclRefExpr 0x1653b517958 <col:26> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   |   |     |   |   |   `-IntegerLiteral 0x1653b5179c0 <col:42> 'int' 1
|   |   |     |   |   `-ImplicitCastExpr 0x1653b517a58 <col:45> 'int' <LValueToRValue>
|   |   |     |   |     `-DeclRefExpr 0x1653b517a20 <col:45> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   |   |     |   `-IntegerLiteral 0x1653b517a90 <col:48> 'int' 0
|   |   |     |-ImplicitCastExpr 0x1653b518368 <col:52, col:75> 'limb *' <ArrayToPointerDecay>
|   |   |     | `-ArraySubscriptExpr 0x1653b517c68 <col:52, col:75> 'felem':'limb [4]' lvalue
|   |   |     |   |-ImplicitCastExpr 0x1653b517c50 <col:52, col:72> 'felem *' <ArrayToPointerDecay>
|   |   |     |   | `-ArraySubscriptExpr 0x1653b517c08 <col:52, col:72> 'felem [3]' lvalue
|   |   |     |   |   |-ImplicitCastExpr 0x1653b517bd8 <col:52, col:69> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   |     |   |   | `-ArraySubscriptExpr 0x1653b517b98 <col:52, col:69> 'felem [16][3]' lvalue
|   |   |     |   |   |   |-ImplicitCastExpr 0x1653b517b80 <col:52, col:57> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   |     |   |   |   | `-MemberExpr 0x1653b517b28 <col:52, col:57> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48
|   |   |     |   |   |   |   `-ImplicitCastExpr 0x1653b517b10 <col:52> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   |     |   |   |   |     `-DeclRefExpr 0x1653b517af0 <col:52> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   |   |     |   |   |   `-IntegerLiteral 0x1653b517b58 <col:68> 'int' 1
|   |   |     |   |   `-ImplicitCastExpr 0x1653b517bf0 <col:71> 'int' <LValueToRValue>
|   |   |     |   |     `-DeclRefExpr 0x1653b517bb8 <col:71> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   |   |     |   `-IntegerLiteral 0x1653b517c28 <col:74> 'int' 1
|   |   |     |-ImplicitCastExpr 0x1653b518380 <line:1637:26, col:49> 'limb *' <ArrayToPointerDecay>
|   |   |     | `-ArraySubscriptExpr 0x1653b517e00 <col:26, col:49> 'felem':'limb [4]' lvalue
|   |   |     |   |-ImplicitCastExpr 0x1653b517de8 <col:26, col:46> 'felem *' <ArrayToPointerDecay>
|   |   |     |   | `-ArraySubscriptExpr 0x1653b517da0 <col:26, col:46> 'felem [3]' lvalue
|   |   |     |   |   |-ImplicitCastExpr 0x1653b517d70 <col:26, col:43> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   |     |   |   | `-ArraySubscriptExpr 0x1653b517d30 <col:26, col:43> 'felem [16][3]' lvalue
|   |   |     |   |   |   |-ImplicitCastExpr 0x1653b517d18 <col:26, col:31> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   |     |   |   |   | `-MemberExpr 0x1653b517cc0 <col:26, col:31> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48
|   |   |     |   |   |   |   `-ImplicitCastExpr 0x1653b517ca8 <col:26> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   |     |   |   |   |     `-DeclRefExpr 0x1653b517c88 <col:26> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   |   |     |   |   |   `-IntegerLiteral 0x1653b517cf0 <col:42> 'int' 1
|   |   |     |   |   `-ImplicitCastExpr 0x1653b517d88 <col:45> 'int' <LValueToRValue>
|   |   |     |   |     `-DeclRefExpr 0x1653b517d50 <col:45> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   |   |     |   `-IntegerLiteral 0x1653b517dc0 <col:48> 'int' 2
|   |   |     |-ImplicitCastExpr 0x1653b5183b0 <col:52, col:75> 'const limb *':'const limb *' <NoOp>
|   |   |     | `-ImplicitCastExpr 0x1653b518398 <col:52, col:75> 'limb *' <ArrayToPointerDecay>
|   |   |     |   `-ArraySubscriptExpr 0x1653b517f98 <col:52, col:75> 'felem':'limb [4]' lvalue
|   |   |     |     |-ImplicitCastExpr 0x1653b517f80 <col:52, col:72> 'felem *' <ArrayToPointerDecay>
|   |   |     |     | `-ArraySubscriptExpr 0x1653b517f38 <col:52, col:72> 'felem [3]' lvalue
|   |   |     |     |   |-ImplicitCastExpr 0x1653b517f08 <col:52, col:69> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   |     |     |   | `-ArraySubscriptExpr 0x1653b517ec8 <col:52, col:69> 'felem [16][3]' lvalue
|   |   |     |     |   |   |-ImplicitCastExpr 0x1653b517eb0 <col:52, col:57> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   |     |     |   |   | `-MemberExpr 0x1653b517e58 <col:52, col:57> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48
|   |   |     |     |   |   |   `-ImplicitCastExpr 0x1653b517e40 <col:52> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   |     |     |   |   |     `-DeclRefExpr 0x1653b517e20 <col:52> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   |   |     |     |   |   `-IntegerLiteral 0x1653b517e88 <col:68> 'int' 1
|   |   |     |     |   `-ImplicitCastExpr 0x1653b517f20 <col:71> 'int' <LValueToRValue>
|   |   |     |     |     `-DeclRefExpr 0x1653b517ee8 <col:71> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   |   |     |     `-IntegerLiteral 0x1653b517f58 <col:74> 'int' 0
|   |   |     |-ImplicitCastExpr 0x1653b5183e0 <line:1638:26, col:49> 'const limb *':'const limb *' <NoOp>
|   |   |     | `-ImplicitCastExpr 0x1653b5183c8 <col:26, col:49> 'limb *' <ArrayToPointerDecay>
|   |   |     |   `-ArraySubscriptExpr 0x1653b518130 <col:26, col:49> 'felem':'limb [4]' lvalue
|   |   |     |     |-ImplicitCastExpr 0x1653b518118 <col:26, col:46> 'felem *' <ArrayToPointerDecay>
|   |   |     |     | `-ArraySubscriptExpr 0x1653b5180d0 <col:26, col:46> 'felem [3]' lvalue
|   |   |     |     |   |-ImplicitCastExpr 0x1653b5180a0 <col:26, col:43> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   |     |     |   | `-ArraySubscriptExpr 0x1653b518060 <col:26, col:43> 'felem [16][3]' lvalue
|   |   |     |     |   |   |-ImplicitCastExpr 0x1653b518048 <col:26, col:31> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   |     |     |   |   | `-MemberExpr 0x1653b517ff0 <col:26, col:31> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48
|   |   |     |     |   |   |   `-ImplicitCastExpr 0x1653b517fd8 <col:26> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   |     |     |   |   |     `-DeclRefExpr 0x1653b517fb8 <col:26> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   |   |     |     |   |   `-IntegerLiteral 0x1653b518020 <col:42> 'int' 1
|   |   |     |     |   `-ImplicitCastExpr 0x1653b5180b8 <col:45> 'int' <LValueToRValue>
|   |   |     |     |     `-DeclRefExpr 0x1653b518080 <col:45> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   |   |     |     `-IntegerLiteral 0x1653b5180f0 <col:48> 'int' 1
|   |   |     `-ImplicitCastExpr 0x1653b518410 <col:52, col:75> 'const limb *':'const limb *' <NoOp>
|   |   |       `-ImplicitCastExpr 0x1653b5183f8 <col:52, col:75> 'limb *' <ArrayToPointerDecay>
|   |   |         `-ArraySubscriptExpr 0x1653b5182c8 <col:52, col:75> 'felem':'limb [4]' lvalue
|   |   |           |-ImplicitCastExpr 0x1653b5182b0 <col:52, col:72> 'felem *' <ArrayToPointerDecay>
|   |   |           | `-ArraySubscriptExpr 0x1653b518268 <col:52, col:72> 'felem [3]' lvalue
|   |   |           |   |-ImplicitCastExpr 0x1653b518238 <col:52, col:69> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   |           |   | `-ArraySubscriptExpr 0x1653b5181f8 <col:52, col:69> 'felem [16][3]' lvalue
|   |   |           |   |   |-ImplicitCastExpr 0x1653b5181e0 <col:52, col:57> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   |           |   |   | `-MemberExpr 0x1653b518188 <col:52, col:57> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48
|   |   |           |   |   |   `-ImplicitCastExpr 0x1653b518170 <col:52> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   |           |   |   |     `-DeclRefExpr 0x1653b518150 <col:52> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   |   |           |   |   `-IntegerLiteral 0x1653b5181b8 <col:68> 'int' 1
|   |   |           |   `-ImplicitCastExpr 0x1653b518250 <col:71> 'int' <LValueToRValue>
|   |   |           |     `-DeclRefExpr 0x1653b518218 <col:71> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   |   |           `-IntegerLiteral 0x1653b518288 <col:74> 'int' 2
|   |   |-IfStmt 0x1653b518500 <line:1640:9, line:1641:13>
|   |   | |-BinaryOperator 0x1653b5184d8 <line:1640:13, col:18> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x1653b5184c0 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1653b518478 <col:13> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   |   | | `-IntegerLiteral 0x1653b518498 <col:18> 'int' 8
|   |   | `-BreakStmt 0x1653b5184f8 <line:1641:13>
|   |   |-CallExpr 0x1653b531090 <line:1642:9, line:1645:72> 'void'
|   |   | |-ImplicitCastExpr 0x1653b531078 <line:1642:9> 'void (*)(limb *, limb *, limb *, const limb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1653b518518 <col:9> 'void (limb *, limb *, limb *, const limb *, const limb *, const limb *)' Function 0x1653b3f43b8 'point_double' 'void (limb *, limb *, limb *, const limb *, const limb *, const limb *)'
|   |   | |-ImplicitCastExpr 0x1653b5310e0 <col:22, col:49> 'limb *' <ArrayToPointerDecay>
|   |   | | `-ArraySubscriptExpr 0x1653b5186f8 <col:22, col:49> 'felem':'limb [4]' lvalue
|   |   | |   |-ImplicitCastExpr 0x1653b5186e0 <col:22, col:46> 'felem *' <ArrayToPointerDecay>
|   |   | |   | `-ArraySubscriptExpr 0x1653b518698 <col:22, col:46> 'felem [3]' lvalue
|   |   | |   |   |-ImplicitCastExpr 0x1653b518680 <col:22, col:39> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |   |   | `-ArraySubscriptExpr 0x1653b5185e0 <col:22, col:39> 'felem [16][3]' lvalue
|   |   | |   |   |   |-ImplicitCastExpr 0x1653b5185c8 <col:22, col:27> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |   |   |   | `-MemberExpr 0x1653b518570 <col:22, col:27> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48
|   |   | |   |   |   |   `-ImplicitCastExpr 0x1653b518558 <col:22> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |   |   |   |     `-DeclRefExpr 0x1653b518538 <col:22> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   |   | |   |   |   `-IntegerLiteral 0x1653b5185a0 <col:38> 'int' 0
|   |   | |   |   `-BinaryOperator 0x1653b518660 <col:41, col:45> 'int' '*'
|   |   | |   |     |-IntegerLiteral 0x1653b518600 <col:41> 'int' 2
|   |   | |   |     `-ImplicitCastExpr 0x1653b518648 <col:45> 'int' <LValueToRValue>
|   |   | |   |       `-DeclRefExpr 0x1653b518628 <col:45> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   |   | |   `-IntegerLiteral 0x1653b5186b8 <col:48> 'int' 0
|   |   | |-ImplicitCastExpr 0x1653b5310f8 <line:1643:22, col:49> 'limb *' <ArrayToPointerDecay>
|   |   | | `-ArraySubscriptExpr 0x1653b5188d8 <col:22, col:49> 'felem':'limb [4]' lvalue
|   |   | |   |-ImplicitCastExpr 0x1653b5188c0 <col:22, col:46> 'felem *' <ArrayToPointerDecay>
|   |   | |   | `-ArraySubscriptExpr 0x1653b518878 <col:22, col:46> 'felem [3]' lvalue
|   |   | |   |   |-ImplicitCastExpr 0x1653b518860 <col:22, col:39> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |   |   | `-ArraySubscriptExpr 0x1653b5187c0 <col:22, col:39> 'felem [16][3]' lvalue
|   |   | |   |   |   |-ImplicitCastExpr 0x1653b5187a8 <col:22, col:27> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |   |   |   | `-MemberExpr 0x1653b518750 <col:22, col:27> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48
|   |   | |   |   |   |   `-ImplicitCastExpr 0x1653b518738 <col:22> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |   |   |   |     `-DeclRefExpr 0x1653b518718 <col:22> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   |   | |   |   |   `-IntegerLiteral 0x1653b518780 <col:38> 'int' 0
|   |   | |   |   `-BinaryOperator 0x1653b518840 <col:41, col:45> 'int' '*'
|   |   | |   |     |-IntegerLiteral 0x1653b5187e0 <col:41> 'int' 2
|   |   | |   |     `-ImplicitCastExpr 0x1653b518828 <col:45> 'int' <LValueToRValue>
|   |   | |   |       `-DeclRefExpr 0x1653b518808 <col:45> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   |   | |   `-IntegerLiteral 0x1653b518898 <col:48> 'int' 1
|   |   | |-ImplicitCastExpr 0x1653b531110 <line:1644:22, col:49> 'limb *' <ArrayToPointerDecay>
|   |   | | `-ArraySubscriptExpr 0x1653b518ab8 <col:22, col:49> 'felem':'limb [4]' lvalue
|   |   | |   |-ImplicitCastExpr 0x1653b518aa0 <col:22, col:46> 'felem *' <ArrayToPointerDecay>
|   |   | |   | `-ArraySubscriptExpr 0x1653b518a58 <col:22, col:46> 'felem [3]' lvalue
|   |   | |   |   |-ImplicitCastExpr 0x1653b518a40 <col:22, col:39> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |   |   | `-ArraySubscriptExpr 0x1653b5189a0 <col:22, col:39> 'felem [16][3]' lvalue
|   |   | |   |   |   |-ImplicitCastExpr 0x1653b518988 <col:22, col:27> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |   |   |   | `-MemberExpr 0x1653b518930 <col:22, col:27> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48
|   |   | |   |   |   |   `-ImplicitCastExpr 0x1653b518918 <col:22> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |   |   |   |     `-DeclRefExpr 0x1653b5188f8 <col:22> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   |   | |   |   |   `-IntegerLiteral 0x1653b518960 <col:38> 'int' 0
|   |   | |   |   `-BinaryOperator 0x1653b518a20 <col:41, col:45> 'int' '*'
|   |   | |   |     |-IntegerLiteral 0x1653b5189c0 <col:41> 'int' 2
|   |   | |   |     `-ImplicitCastExpr 0x1653b518a08 <col:45> 'int' <LValueToRValue>
|   |   | |   |       `-DeclRefExpr 0x1653b5189e8 <col:45> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   |   | |   `-IntegerLiteral 0x1653b518a78 <col:48> 'int' 2
|   |   | |-ImplicitCastExpr 0x1653b531140 <col:52, col:75> 'const limb *':'const limb *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x1653b531128 <col:52, col:75> 'limb *' <ArrayToPointerDecay>
|   |   | |   `-ArraySubscriptExpr 0x1653b518c50 <col:52, col:75> 'felem':'limb [4]' lvalue
|   |   | |     |-ImplicitCastExpr 0x1653b518c38 <col:52, col:72> 'felem *' <ArrayToPointerDecay>
|   |   | |     | `-ArraySubscriptExpr 0x1653b518bf0 <col:52, col:72> 'felem [3]' lvalue
|   |   | |     |   |-ImplicitCastExpr 0x1653b518bc0 <col:52, col:69> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |     |   | `-ArraySubscriptExpr 0x1653b518b80 <col:52, col:69> 'felem [16][3]' lvalue
|   |   | |     |   |   |-ImplicitCastExpr 0x1653b518b68 <col:52, col:57> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |     |   |   | `-MemberExpr 0x1653b518b10 <col:52, col:57> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48
|   |   | |     |   |   |   `-ImplicitCastExpr 0x1653b518af8 <col:52> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |     |   |   |     `-DeclRefExpr 0x1653b518ad8 <col:52> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   |   | |     |   |   `-IntegerLiteral 0x1653b518b40 <col:68> 'int' 1
|   |   | |     |   `-ImplicitCastExpr 0x1653b518bd8 <col:71> 'int' <LValueToRValue>
|   |   | |     |     `-DeclRefExpr 0x1653b518ba0 <col:71> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   |   | |     `-IntegerLiteral 0x1653b518c10 <col:74> 'int' 0
|   |   | |-ImplicitCastExpr 0x1653b531170 <line:1645:22, col:45> 'const limb *':'const limb *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x1653b531158 <col:22, col:45> 'limb *' <ArrayToPointerDecay>
|   |   | |   `-ArraySubscriptExpr 0x1653b518de8 <col:22, col:45> 'felem':'limb [4]' lvalue
|   |   | |     |-ImplicitCastExpr 0x1653b518dd0 <col:22, col:42> 'felem *' <ArrayToPointerDecay>
|   |   | |     | `-ArraySubscriptExpr 0x1653b518d88 <col:22, col:42> 'felem [3]' lvalue
|   |   | |     |   |-ImplicitCastExpr 0x1653b518d58 <col:22, col:39> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |     |   | `-ArraySubscriptExpr 0x1653b518d18 <col:22, col:39> 'felem [16][3]' lvalue
|   |   | |     |   |   |-ImplicitCastExpr 0x1653b518d00 <col:22, col:27> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |     |   |   | `-MemberExpr 0x1653b518ca8 <col:22, col:27> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48
|   |   | |     |   |   |   `-ImplicitCastExpr 0x1653b518c90 <col:22> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |     |   |   |     `-DeclRefExpr 0x1653b518c70 <col:22> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   |   | |     |   |   `-IntegerLiteral 0x1653b518cd8 <col:38> 'int' 1
|   |   | |     |   `-ImplicitCastExpr 0x1653b518d70 <col:41> 'int' <LValueToRValue>
|   |   | |     |     `-DeclRefExpr 0x1653b518d38 <col:41> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   |   | |     `-IntegerLiteral 0x1653b518da8 <col:44> 'int' 1
|   |   | `-ImplicitCastExpr 0x1653b5311a0 <col:48, col:71> 'const limb *':'const limb *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x1653b531188 <col:48, col:71> 'limb *' <ArrayToPointerDecay>
|   |   |     `-ArraySubscriptExpr 0x1653b531058 <col:48, col:71> 'felem':'limb [4]' lvalue
|   |   |       |-ImplicitCastExpr 0x1653b531040 <col:48, col:68> 'felem *' <ArrayToPointerDecay>
|   |   |       | `-ArraySubscriptExpr 0x1653b518f20 <col:48, col:68> 'felem [3]' lvalue
|   |   |       |   |-ImplicitCastExpr 0x1653b518ef0 <col:48, col:65> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   |       |   | `-ArraySubscriptExpr 0x1653b518eb0 <col:48, col:65> 'felem [16][3]' lvalue
|   |   |       |   |   |-ImplicitCastExpr 0x1653b518e98 <col:48, col:53> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   |       |   |   | `-MemberExpr 0x1653b518e40 <col:48, col:53> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48
|   |   |       |   |   |   `-ImplicitCastExpr 0x1653b518e28 <col:48> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   |       |   |   |     `-DeclRefExpr 0x1653b518e08 <col:48> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   |   |       |   |   `-IntegerLiteral 0x1653b518e70 <col:64> 'int' 1
|   |   |       |   `-ImplicitCastExpr 0x1653b518f08 <col:67> 'int' <LValueToRValue>
|   |   |       |     `-DeclRefExpr 0x1653b518ed0 <col:67> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   |   |       `-IntegerLiteral 0x1653b518f40 <col:70> 'int' 2
|   |   `-ForStmt 0x1653b531f90 <line:1646:9, line:1653:9>
|   |     |-BinaryOperator 0x1653b531200 <line:1646:14, col:18> 'int' '='
|   |     | |-DeclRefExpr 0x1653b5311b8 <col:14> 'int' lvalue Var 0x1653b5255f8 'j' 'int'
|   |     | `-IntegerLiteral 0x1653b5311d8 <col:18> 'int' 0
|   |     |-<<<NULL>>>
|   |     |-BinaryOperator 0x1653b531280 <col:21, col:25> 'int' '<'
|   |     | |-ImplicitCastExpr 0x1653b531268 <col:21> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1653b531220 <col:21> 'int' lvalue Var 0x1653b5255f8 'j' 'int'
|   |     | `-IntegerLiteral 0x1653b531240 <col:25> 'int' 27
|   |     |-UnaryOperator 0x1653b5312c0 <col:29, col:31> 'int' prefix '++'
|   |     | `-DeclRefExpr 0x1653b5312a0 <col:31> 'int' lvalue Var 0x1653b5255f8 'j' 'int'
|   |     `-CompoundStmt 0x1653b531f78 <col:34, line:1653:9>
|   |       `-CallExpr 0x1653b531e50 <line:1647:13, line:1652:54> 'void'
|   |         |-ImplicitCastExpr 0x1653b531e38 <line:1647:13> 'void (*)(limb *, limb *, limb *, const limb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   |         | `-DeclRefExpr 0x1653b5312d8 <col:13> 'void (limb *, limb *, limb *, const limb *, const limb *, const limb *)' Function 0x1653b3f43b8 'point_double' 'void (limb *, limb *, limb *, const limb *, const limb *, const limb *)'
|   |         |-ImplicitCastExpr 0x1653b531ea0 <col:26, col:53> 'limb *' <ArrayToPointerDecay>
|   |         | `-ArraySubscriptExpr 0x1653b5314b8 <col:26, col:53> 'felem':'limb [4]' lvalue
|   |         |   |-ImplicitCastExpr 0x1653b5314a0 <col:26, col:50> 'felem *' <ArrayToPointerDecay>
|   |         |   | `-ArraySubscriptExpr 0x1653b531458 <col:26, col:50> 'felem [3]' lvalue
|   |         |   |   |-ImplicitCastExpr 0x1653b531440 <col:26, col:43> 'felem (*)[3]' <ArrayToPointerDecay>
|   |         |   |   | `-ArraySubscriptExpr 0x1653b5313a0 <col:26, col:43> 'felem [16][3]' lvalue
|   |         |   |   |   |-ImplicitCastExpr 0x1653b531388 <col:26, col:31> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |         |   |   |   | `-MemberExpr 0x1653b531330 <col:26, col:31> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48
|   |         |   |   |   |   `-ImplicitCastExpr 0x1653b531318 <col:26> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |         |   |   |   |     `-DeclRefExpr 0x1653b5312f8 <col:26> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   |         |   |   |   `-IntegerLiteral 0x1653b531360 <col:42> 'int' 0
|   |         |   |   `-BinaryOperator 0x1653b531420 <col:45, col:49> 'int' '*'
|   |         |   |     |-IntegerLiteral 0x1653b5313c0 <col:45> 'int' 2
|   |         |   |     `-ImplicitCastExpr 0x1653b531408 <col:49> 'int' <LValueToRValue>
|   |         |   |       `-DeclRefExpr 0x1653b5313e8 <col:49> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   |         |   `-IntegerLiteral 0x1653b531478 <col:52> 'int' 0
|   |         |-ImplicitCastExpr 0x1653b531eb8 <line:1648:26, col:53> 'limb *' <ArrayToPointerDecay>
|   |         | `-ArraySubscriptExpr 0x1653b531698 <col:26, col:53> 'felem':'limb [4]' lvalue
|   |         |   |-ImplicitCastExpr 0x1653b531680 <col:26, col:50> 'felem *' <ArrayToPointerDecay>
|   |         |   | `-ArraySubscriptExpr 0x1653b531638 <col:26, col:50> 'felem [3]' lvalue
|   |         |   |   |-ImplicitCastExpr 0x1653b531620 <col:26, col:43> 'felem (*)[3]' <ArrayToPointerDecay>
|   |         |   |   | `-ArraySubscriptExpr 0x1653b531580 <col:26, col:43> 'felem [16][3]' lvalue
|   |         |   |   |   |-ImplicitCastExpr 0x1653b531568 <col:26, col:31> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |         |   |   |   | `-MemberExpr 0x1653b531510 <col:26, col:31> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48
|   |         |   |   |   |   `-ImplicitCastExpr 0x1653b5314f8 <col:26> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |         |   |   |   |     `-DeclRefExpr 0x1653b5314d8 <col:26> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   |         |   |   |   `-IntegerLiteral 0x1653b531540 <col:42> 'int' 0
|   |         |   |   `-BinaryOperator 0x1653b531600 <col:45, col:49> 'int' '*'
|   |         |   |     |-IntegerLiteral 0x1653b5315a0 <col:45> 'int' 2
|   |         |   |     `-ImplicitCastExpr 0x1653b5315e8 <col:49> 'int' <LValueToRValue>
|   |         |   |       `-DeclRefExpr 0x1653b5315c8 <col:49> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   |         |   `-IntegerLiteral 0x1653b531658 <col:52> 'int' 1
|   |         |-ImplicitCastExpr 0x1653b531ed0 <line:1649:26, col:53> 'limb *' <ArrayToPointerDecay>
|   |         | `-ArraySubscriptExpr 0x1653b531878 <col:26, col:53> 'felem':'limb [4]' lvalue
|   |         |   |-ImplicitCastExpr 0x1653b531860 <col:26, col:50> 'felem *' <ArrayToPointerDecay>
|   |         |   | `-ArraySubscriptExpr 0x1653b531818 <col:26, col:50> 'felem [3]' lvalue
|   |         |   |   |-ImplicitCastExpr 0x1653b531800 <col:26, col:43> 'felem (*)[3]' <ArrayToPointerDecay>
|   |         |   |   | `-ArraySubscriptExpr 0x1653b531760 <col:26, col:43> 'felem [16][3]' lvalue
|   |         |   |   |   |-ImplicitCastExpr 0x1653b531748 <col:26, col:31> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |         |   |   |   | `-MemberExpr 0x1653b5316f0 <col:26, col:31> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48
|   |         |   |   |   |   `-ImplicitCastExpr 0x1653b5316d8 <col:26> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |         |   |   |   |     `-DeclRefExpr 0x1653b5316b8 <col:26> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   |         |   |   |   `-IntegerLiteral 0x1653b531720 <col:42> 'int' 0
|   |         |   |   `-BinaryOperator 0x1653b5317e0 <col:45, col:49> 'int' '*'
|   |         |   |     |-IntegerLiteral 0x1653b531780 <col:45> 'int' 2
|   |         |   |     `-ImplicitCastExpr 0x1653b5317c8 <col:49> 'int' <LValueToRValue>
|   |         |   |       `-DeclRefExpr 0x1653b5317a8 <col:49> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   |         |   `-IntegerLiteral 0x1653b531838 <col:52> 'int' 2
|   |         |-ImplicitCastExpr 0x1653b531f00 <line:1650:26, col:53> 'const limb *':'const limb *' <NoOp>
|   |         | `-ImplicitCastExpr 0x1653b531ee8 <col:26, col:53> 'limb *' <ArrayToPointerDecay>
|   |         |   `-ArraySubscriptExpr 0x1653b531a58 <col:26, col:53> 'felem':'limb [4]' lvalue
|   |         |     |-ImplicitCastExpr 0x1653b531a40 <col:26, col:50> 'felem *' <ArrayToPointerDecay>
|   |         |     | `-ArraySubscriptExpr 0x1653b5319f8 <col:26, col:50> 'felem [3]' lvalue
|   |         |     |   |-ImplicitCastExpr 0x1653b5319e0 <col:26, col:43> 'felem (*)[3]' <ArrayToPointerDecay>
|   |         |     |   | `-ArraySubscriptExpr 0x1653b531940 <col:26, col:43> 'felem [16][3]' lvalue
|   |         |     |   |   |-ImplicitCastExpr 0x1653b531928 <col:26, col:31> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |         |     |   |   | `-MemberExpr 0x1653b5318d0 <col:26, col:31> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48
|   |         |     |   |   |   `-ImplicitCastExpr 0x1653b5318b8 <col:26> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |         |     |   |   |     `-DeclRefExpr 0x1653b531898 <col:26> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   |         |     |   |   `-IntegerLiteral 0x1653b531900 <col:42> 'int' 0
|   |         |     |   `-BinaryOperator 0x1653b5319c0 <col:45, col:49> 'int' '*'
|   |         |     |     |-IntegerLiteral 0x1653b531960 <col:45> 'int' 2
|   |         |     |     `-ImplicitCastExpr 0x1653b5319a8 <col:49> 'int' <LValueToRValue>
|   |         |     |       `-DeclRefExpr 0x1653b531988 <col:49> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   |         |     `-IntegerLiteral 0x1653b531a18 <col:52> 'int' 0
|   |         |-ImplicitCastExpr 0x1653b531f30 <line:1651:26, col:53> 'const limb *':'const limb *' <NoOp>
|   |         | `-ImplicitCastExpr 0x1653b531f18 <col:26, col:53> 'limb *' <ArrayToPointerDecay>
|   |         |   `-ArraySubscriptExpr 0x1653b531c38 <col:26, col:53> 'felem':'limb [4]' lvalue
|   |         |     |-ImplicitCastExpr 0x1653b531c20 <col:26, col:50> 'felem *' <ArrayToPointerDecay>
|   |         |     | `-ArraySubscriptExpr 0x1653b531bd8 <col:26, col:50> 'felem [3]' lvalue
|   |         |     |   |-ImplicitCastExpr 0x1653b531bc0 <col:26, col:43> 'felem (*)[3]' <ArrayToPointerDecay>
|   |         |     |   | `-ArraySubscriptExpr 0x1653b531b20 <col:26, col:43> 'felem [16][3]' lvalue
|   |         |     |   |   |-ImplicitCastExpr 0x1653b531b08 <col:26, col:31> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |         |     |   |   | `-MemberExpr 0x1653b531ab0 <col:26, col:31> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48
|   |         |     |   |   |   `-ImplicitCastExpr 0x1653b531a98 <col:26> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |         |     |   |   |     `-DeclRefExpr 0x1653b531a78 <col:26> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   |         |     |   |   `-IntegerLiteral 0x1653b531ae0 <col:42> 'int' 0
|   |         |     |   `-BinaryOperator 0x1653b531ba0 <col:45, col:49> 'int' '*'
|   |         |     |     |-IntegerLiteral 0x1653b531b40 <col:45> 'int' 2
|   |         |     |     `-ImplicitCastExpr 0x1653b531b88 <col:49> 'int' <LValueToRValue>
|   |         |     |       `-DeclRefExpr 0x1653b531b68 <col:49> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   |         |     `-IntegerLiteral 0x1653b531bf8 <col:52> 'int' 1
|   |         `-ImplicitCastExpr 0x1653b531f60 <line:1652:26, col:53> 'const limb *':'const limb *' <NoOp>
|   |           `-ImplicitCastExpr 0x1653b531f48 <col:26, col:53> 'limb *' <ArrayToPointerDecay>
|   |             `-ArraySubscriptExpr 0x1653b531e18 <col:26, col:53> 'felem':'limb [4]' lvalue
|   |               |-ImplicitCastExpr 0x1653b531e00 <col:26, col:50> 'felem *' <ArrayToPointerDecay>
|   |               | `-ArraySubscriptExpr 0x1653b531db8 <col:26, col:50> 'felem [3]' lvalue
|   |               |   |-ImplicitCastExpr 0x1653b531da0 <col:26, col:43> 'felem (*)[3]' <ArrayToPointerDecay>
|   |               |   | `-ArraySubscriptExpr 0x1653b531d00 <col:26, col:43> 'felem [16][3]' lvalue
|   |               |   |   |-ImplicitCastExpr 0x1653b531ce8 <col:26, col:31> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |               |   |   | `-MemberExpr 0x1653b531c90 <col:26, col:31> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48
|   |               |   |   |   `-ImplicitCastExpr 0x1653b531c78 <col:26> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |               |   |   |     `-DeclRefExpr 0x1653b531c58 <col:26> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   |               |   |   `-IntegerLiteral 0x1653b531cc0 <col:42> 'int' 0
|   |               |   `-BinaryOperator 0x1653b531d80 <col:45, col:49> 'int' '*'
|   |               |     |-IntegerLiteral 0x1653b531d20 <col:45> 'int' 2
|   |               |     `-ImplicitCastExpr 0x1653b531d68 <col:49> 'int' <LValueToRValue>
|   |               |       `-DeclRefExpr 0x1653b531d48 <col:49> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   |               `-IntegerLiteral 0x1653b531dd8 <col:52> 'int' 2
|   |-ForStmt 0x1653b537cb0 <line:1655:5, line:1696:5>
|   | |-BinaryOperator 0x1653b532080 <line:1655:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x1653b532038 <col:10> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   | | `-IntegerLiteral 0x1653b532058 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1653b532100 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x1653b5320e8 <col:17> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1653b5320a0 <col:17> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   | | `-IntegerLiteral 0x1653b5320c0 <col:21> 'int' 2
|   | |-UnaryOperator 0x1653b532140 <col:24, col:25> 'int' postfix '++'
|   | | `-DeclRefExpr 0x1653b532120 <col:24> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   | `-CompoundStmt 0x1653b537c70 <col:29, line:1696:5>
|   |   |-CallExpr 0x1653b532480 <line:1657:9, col:71> 'void *'
|   |   | |-ImplicitCastExpr 0x1653b532468 <col:9> 'void *(*)(void *, int, unsigned long long)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1653b532158 <col:9> 'void *(void *, int, unsigned long long)' Function 0x1653b2ba1f0 'memset' 'void *(void *, int, unsigned long long)'
|   |   | |-ImplicitCastExpr 0x1653b5324d0 <col:16, col:36> 'void *' <BitCast>
|   |   | | `-ImplicitCastExpr 0x1653b5324b8 <col:16, col:36> 'felem *' <ArrayToPointerDecay>
|   |   | |   `-ArraySubscriptExpr 0x1653b532290 <col:16, col:36> 'felem [3]' lvalue
|   |   | |     |-ImplicitCastExpr 0x1653b532278 <col:16, col:33> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |     | `-ArraySubscriptExpr 0x1653b532230 <col:16, col:33> 'felem [16][3]' lvalue
|   |   | |     |   |-ImplicitCastExpr 0x1653b532200 <col:16, col:21> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |     |   | `-MemberExpr 0x1653b5321b0 <col:16, col:21> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48
|   |   | |     |   |   `-ImplicitCastExpr 0x1653b532198 <col:16> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |     |   |     `-DeclRefExpr 0x1653b532178 <col:16> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   |   | |     |   `-ImplicitCastExpr 0x1653b532218 <col:32> 'int' <LValueToRValue>
|   |   | |     |     `-DeclRefExpr 0x1653b5321e0 <col:32> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   |   | |     `-IntegerLiteral 0x1653b532250 <col:35> 'int' 0
|   |   | |-IntegerLiteral 0x1653b5322b0 <col:39> 'int' 0
|   |   | `-UnaryExprOrTypeTraitExpr 0x1653b532430 <col:42, col:70> 'unsigned long long' sizeof
|   |   |   `-ParenExpr 0x1653b532410 <col:48, col:70> 'felem [3]' lvalue
|   |   |     `-ArraySubscriptExpr 0x1653b5323f0 <col:49, col:69> 'felem [3]' lvalue
|   |   |       |-ImplicitCastExpr 0x1653b5323d8 <col:49, col:66> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   |       | `-ArraySubscriptExpr 0x1653b532390 <col:49, col:66> 'felem [16][3]' lvalue
|   |   |       |   |-ImplicitCastExpr 0x1653b532360 <col:49, col:54> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   |       |   | `-MemberExpr 0x1653b532310 <col:49, col:54> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48 non_odr_use_unevaluated
|   |   |       |   |   `-ImplicitCastExpr 0x1653b5322f8 <col:49> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   |       |   |     `-DeclRefExpr 0x1653b5322d8 <col:49> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *' non_odr_use_unevaluated
|   |   |       |   `-ImplicitCastExpr 0x1653b532378 <col:65> 'int' <LValueToRValue>
|   |   |       |     `-DeclRefExpr 0x1653b532340 <col:65> 'int' lvalue Var 0x1653b525578 'i' 'int' non_odr_use_unevaluated
|   |   |       `-IntegerLiteral 0x1653b5323b0 <col:68> 'int' 0
|   |   |-CallExpr 0x1653b527358 <line:1660:9, line:1664:43> 'void'
|   |   | |-ImplicitCastExpr 0x1653b527340 <line:1660:9> 'void (*)(limb *, limb *, limb *, const limb *, const limb *, const limb *, const int, const limb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1653b5324e8 <col:9> 'void (limb *, limb *, limb *, const limb *, const limb *, const limb *, const int, const limb *, const limb *, const limb *)' Function 0x1653b3fb0b8 'point_add' 'void (limb *, limb *, limb *, const limb *, const limb *, const limb *, const int, const limb *, const limb *, const limb *)'
|   |   | |-ImplicitCastExpr 0x1653b5273c8 <col:19, col:42> 'limb *' <ArrayToPointerDecay>
|   |   | | `-ArraySubscriptExpr 0x1653b532680 <col:19, col:42> 'felem':'limb [4]' lvalue
|   |   | |   |-ImplicitCastExpr 0x1653b532668 <col:19, col:39> 'felem *' <ArrayToPointerDecay>
|   |   | |   | `-ArraySubscriptExpr 0x1653b532620 <col:19, col:39> 'felem [3]' lvalue
|   |   | |   |   |-ImplicitCastExpr 0x1653b532608 <col:19, col:36> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |   |   | `-ArraySubscriptExpr 0x1653b5325c0 <col:19, col:36> 'felem [16][3]' lvalue
|   |   | |   |   |   |-ImplicitCastExpr 0x1653b532590 <col:19, col:24> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |   |   |   | `-MemberExpr 0x1653b532540 <col:19, col:24> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48
|   |   | |   |   |   |   `-ImplicitCastExpr 0x1653b532528 <col:19> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |   |   |   |     `-DeclRefExpr 0x1653b532508 <col:19> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   |   | |   |   |   `-ImplicitCastExpr 0x1653b5325a8 <col:35> 'int' <LValueToRValue>
|   |   | |   |   |     `-DeclRefExpr 0x1653b532570 <col:35> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   |   | |   |   `-IntegerLiteral 0x1653b5325e0 <col:38> 'int' 6
|   |   | |   `-IntegerLiteral 0x1653b532640 <col:41> 'int' 0
|   |   | |-ImplicitCastExpr 0x1653b5273e0 <col:45, col:68> 'limb *' <ArrayToPointerDecay>
|   |   | | `-ArraySubscriptExpr 0x1653b532818 <col:45, col:68> 'felem':'limb [4]' lvalue
|   |   | |   |-ImplicitCastExpr 0x1653b532800 <col:45, col:65> 'felem *' <ArrayToPointerDecay>
|   |   | |   | `-ArraySubscriptExpr 0x1653b5327b8 <col:45, col:65> 'felem [3]' lvalue
|   |   | |   |   |-ImplicitCastExpr 0x1653b5327a0 <col:45, col:62> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |   |   | `-ArraySubscriptExpr 0x1653b532758 <col:45, col:62> 'felem [16][3]' lvalue
|   |   | |   |   |   |-ImplicitCastExpr 0x1653b532728 <col:45, col:50> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |   |   |   | `-MemberExpr 0x1653b5326d8 <col:45, col:50> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48
|   |   | |   |   |   |   `-ImplicitCastExpr 0x1653b5326c0 <col:45> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |   |   |   |     `-DeclRefExpr 0x1653b5326a0 <col:45> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   |   | |   |   |   `-ImplicitCastExpr 0x1653b532740 <col:61> 'int' <LValueToRValue>
|   |   | |   |   |     `-DeclRefExpr 0x1653b532708 <col:61> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   |   | |   |   `-IntegerLiteral 0x1653b532778 <col:64> 'int' 6
|   |   | |   `-IntegerLiteral 0x1653b5327d8 <col:67> 'int' 1
|   |   | |-ImplicitCastExpr 0x1653b5273f8 <line:1661:19, col:42> 'limb *' <ArrayToPointerDecay>
|   |   | | `-ArraySubscriptExpr 0x1653b5329b0 <col:19, col:42> 'felem':'limb [4]' lvalue
|   |   | |   |-ImplicitCastExpr 0x1653b532998 <col:19, col:39> 'felem *' <ArrayToPointerDecay>
|   |   | |   | `-ArraySubscriptExpr 0x1653b532950 <col:19, col:39> 'felem [3]' lvalue
|   |   | |   |   |-ImplicitCastExpr 0x1653b532938 <col:19, col:36> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |   |   | `-ArraySubscriptExpr 0x1653b5328f0 <col:19, col:36> 'felem [16][3]' lvalue
|   |   | |   |   |   |-ImplicitCastExpr 0x1653b5328c0 <col:19, col:24> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |   |   |   | `-MemberExpr 0x1653b532870 <col:19, col:24> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48
|   |   | |   |   |   |   `-ImplicitCastExpr 0x1653b532858 <col:19> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |   |   |   |     `-DeclRefExpr 0x1653b532838 <col:19> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   |   | |   |   |   `-ImplicitCastExpr 0x1653b5328d8 <col:35> 'int' <LValueToRValue>
|   |   | |   |   |     `-DeclRefExpr 0x1653b5328a0 <col:35> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   |   | |   |   `-IntegerLiteral 0x1653b532910 <col:38> 'int' 6
|   |   | |   `-IntegerLiteral 0x1653b532970 <col:41> 'int' 2
|   |   | |-ImplicitCastExpr 0x1653b527428 <col:45, col:68> 'const limb *':'const limb *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x1653b527410 <col:45, col:68> 'limb *' <ArrayToPointerDecay>
|   |   | |   `-ArraySubscriptExpr 0x1653b532b48 <col:45, col:68> 'felem':'limb [4]' lvalue
|   |   | |     |-ImplicitCastExpr 0x1653b532b30 <col:45, col:65> 'felem *' <ArrayToPointerDecay>
|   |   | |     | `-ArraySubscriptExpr 0x1653b532ae8 <col:45, col:65> 'felem [3]' lvalue
|   |   | |     |   |-ImplicitCastExpr 0x1653b532ad0 <col:45, col:62> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |     |   | `-ArraySubscriptExpr 0x1653b532a88 <col:45, col:62> 'felem [16][3]' lvalue
|   |   | |     |   |   |-ImplicitCastExpr 0x1653b532a58 <col:45, col:50> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |     |   |   | `-MemberExpr 0x1653b532a08 <col:45, col:50> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48
|   |   | |     |   |   |   `-ImplicitCastExpr 0x1653b5329f0 <col:45> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |     |   |   |     `-DeclRefExpr 0x1653b5329d0 <col:45> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   |   | |     |   |   `-ImplicitCastExpr 0x1653b532a70 <col:61> 'int' <LValueToRValue>
|   |   | |     |   |     `-DeclRefExpr 0x1653b532a38 <col:61> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   |   | |     |   `-IntegerLiteral 0x1653b532aa8 <col:64> 'int' 4
|   |   | |     `-IntegerLiteral 0x1653b532b08 <col:67> 'int' 0
|   |   | |-ImplicitCastExpr 0x1653b527458 <line:1662:19, col:42> 'const limb *':'const limb *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x1653b527440 <col:19, col:42> 'limb *' <ArrayToPointerDecay>
|   |   | |   `-ArraySubscriptExpr 0x1653b532ce0 <col:19, col:42> 'felem':'limb [4]' lvalue
|   |   | |     |-ImplicitCastExpr 0x1653b532cc8 <col:19, col:39> 'felem *' <ArrayToPointerDecay>
|   |   | |     | `-ArraySubscriptExpr 0x1653b532c80 <col:19, col:39> 'felem [3]' lvalue
|   |   | |     |   |-ImplicitCastExpr 0x1653b532c68 <col:19, col:36> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |     |   | `-ArraySubscriptExpr 0x1653b532c20 <col:19, col:36> 'felem [16][3]' lvalue
|   |   | |     |   |   |-ImplicitCastExpr 0x1653b532bf0 <col:19, col:24> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |     |   |   | `-MemberExpr 0x1653b532ba0 <col:19, col:24> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48
|   |   | |     |   |   |   `-ImplicitCastExpr 0x1653b532b88 <col:19> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |     |   |   |     `-DeclRefExpr 0x1653b532b68 <col:19> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   |   | |     |   |   `-ImplicitCastExpr 0x1653b532c08 <col:35> 'int' <LValueToRValue>
|   |   | |     |   |     `-DeclRefExpr 0x1653b532bd0 <col:35> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   |   | |     |   `-IntegerLiteral 0x1653b532c40 <col:38> 'int' 4
|   |   | |     `-IntegerLiteral 0x1653b532ca0 <col:41> 'int' 1
|   |   | |-ImplicitCastExpr 0x1653b527488 <col:45, col:68> 'const limb *':'const limb *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x1653b527470 <col:45, col:68> 'limb *' <ArrayToPointerDecay>
|   |   | |   `-ArraySubscriptExpr 0x1653b532e78 <col:45, col:68> 'felem':'limb [4]' lvalue
|   |   | |     |-ImplicitCastExpr 0x1653b532e60 <col:45, col:65> 'felem *' <ArrayToPointerDecay>
|   |   | |     | `-ArraySubscriptExpr 0x1653b532e18 <col:45, col:65> 'felem [3]' lvalue
|   |   | |     |   |-ImplicitCastExpr 0x1653b532e00 <col:45, col:62> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |     |   | `-ArraySubscriptExpr 0x1653b532db8 <col:45, col:62> 'felem [16][3]' lvalue
|   |   | |     |   |   |-ImplicitCastExpr 0x1653b532d88 <col:45, col:50> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |     |   |   | `-MemberExpr 0x1653b532d38 <col:45, col:50> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48
|   |   | |     |   |   |   `-ImplicitCastExpr 0x1653b532d20 <col:45> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |     |   |   |     `-DeclRefExpr 0x1653b532d00 <col:45> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   |   | |     |   |   `-ImplicitCastExpr 0x1653b532da0 <col:61> 'int' <LValueToRValue>
|   |   | |     |   |     `-DeclRefExpr 0x1653b532d68 <col:61> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   |   | |     |   `-IntegerLiteral 0x1653b532dd8 <col:64> 'int' 4
|   |   | |     `-IntegerLiteral 0x1653b532e38 <col:67> 'int' 2
|   |   | |-IntegerLiteral 0x1653b532e98 <line:1663:19> 'int' 0
|   |   | |-ImplicitCastExpr 0x1653b5274b8 <col:22, col:45> 'const limb *':'const limb *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x1653b5274a0 <col:22, col:45> 'limb *' <ArrayToPointerDecay>
|   |   | |   `-ArraySubscriptExpr 0x1653b526ff0 <col:22, col:45> 'felem':'limb [4]' lvalue
|   |   | |     |-ImplicitCastExpr 0x1653b533020 <col:22, col:42> 'felem *' <ArrayToPointerDecay>
|   |   | |     | `-ArraySubscriptExpr 0x1653b532fd8 <col:22, col:42> 'felem [3]' lvalue
|   |   | |     |   |-ImplicitCastExpr 0x1653b532fc0 <col:22, col:39> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |     |   | `-ArraySubscriptExpr 0x1653b532f78 <col:22, col:39> 'felem [16][3]' lvalue
|   |   | |     |   |   |-ImplicitCastExpr 0x1653b532f48 <col:22, col:27> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |     |   |   | `-MemberExpr 0x1653b532ef8 <col:22, col:27> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48
|   |   | |     |   |   |   `-ImplicitCastExpr 0x1653b532ee0 <col:22> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |     |   |   |     `-DeclRefExpr 0x1653b532ec0 <col:22> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   |   | |     |   |   `-ImplicitCastExpr 0x1653b532f60 <col:38> 'int' <LValueToRValue>
|   |   | |     |   |     `-DeclRefExpr 0x1653b532f28 <col:38> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   |   | |     |   `-IntegerLiteral 0x1653b532f98 <col:41> 'int' 2
|   |   | |     `-IntegerLiteral 0x1653b532ff8 <col:44> 'int' 0
|   |   | |-ImplicitCastExpr 0x1653b5274e8 <col:48, col:71> 'const limb *':'const limb *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x1653b5274d0 <col:48, col:71> 'limb *' <ArrayToPointerDecay>
|   |   | |   `-ArraySubscriptExpr 0x1653b527188 <col:48, col:71> 'felem':'limb [4]' lvalue
|   |   | |     |-ImplicitCastExpr 0x1653b527170 <col:48, col:68> 'felem *' <ArrayToPointerDecay>
|   |   | |     | `-ArraySubscriptExpr 0x1653b527128 <col:48, col:68> 'felem [3]' lvalue
|   |   | |     |   |-ImplicitCastExpr 0x1653b527110 <col:48, col:65> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |     |   | `-ArraySubscriptExpr 0x1653b5270c8 <col:48, col:65> 'felem [16][3]' lvalue
|   |   | |     |   |   |-ImplicitCastExpr 0x1653b527098 <col:48, col:53> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |     |   |   | `-MemberExpr 0x1653b527048 <col:48, col:53> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48
|   |   | |     |   |   |   `-ImplicitCastExpr 0x1653b527030 <col:48> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |     |   |   |     `-DeclRefExpr 0x1653b527010 <col:48> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   |   | |     |   |   `-ImplicitCastExpr 0x1653b5270b0 <col:64> 'int' <LValueToRValue>
|   |   | |     |   |     `-DeclRefExpr 0x1653b527078 <col:64> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   |   | |     |   `-IntegerLiteral 0x1653b5270e8 <col:67> 'int' 2
|   |   | |     `-IntegerLiteral 0x1653b527148 <col:70> 'int' 1
|   |   | `-ImplicitCastExpr 0x1653b527518 <line:1664:19, col:42> 'const limb *':'const limb *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x1653b527500 <col:19, col:42> 'limb *' <ArrayToPointerDecay>
|   |   |     `-ArraySubscriptExpr 0x1653b527320 <col:19, col:42> 'felem':'limb [4]' lvalue
|   |   |       |-ImplicitCastExpr 0x1653b527308 <col:19, col:39> 'felem *' <ArrayToPointerDecay>
|   |   |       | `-ArraySubscriptExpr 0x1653b5272c0 <col:19, col:39> 'felem [3]' lvalue
|   |   |       |   |-ImplicitCastExpr 0x1653b5272a8 <col:19, col:36> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   |       |   | `-ArraySubscriptExpr 0x1653b527260 <col:19, col:36> 'felem [16][3]' lvalue
|   |   |       |   |   |-ImplicitCastExpr 0x1653b527230 <col:19, col:24> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   |       |   |   | `-MemberExpr 0x1653b5271e0 <col:19, col:24> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48
|   |   |       |   |   |   `-ImplicitCastExpr 0x1653b5271c8 <col:19> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   |       |   |   |     `-DeclRefExpr 0x1653b5271a8 <col:19> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   |   |       |   |   `-ImplicitCastExpr 0x1653b527248 <col:35> 'int' <LValueToRValue>
|   |   |       |   |     `-DeclRefExpr 0x1653b527210 <col:35> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   |   |       |   `-IntegerLiteral 0x1653b527280 <col:38> 'int' 2
|   |   |       `-IntegerLiteral 0x1653b5272e0 <col:41> 'int' 2
|   |   |-CallExpr 0x1653b5283e8 <line:1666:9, line:1670:43> 'void'
|   |   | |-ImplicitCastExpr 0x1653b5283d0 <line:1666:9> 'void (*)(limb *, limb *, limb *, const limb *, const limb *, const limb *, const int, const limb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1653b527530 <col:9> 'void (limb *, limb *, limb *, const limb *, const limb *, const limb *, const int, const limb *, const limb *, const limb *)' Function 0x1653b3fb0b8 'point_add' 'void (limb *, limb *, limb *, const limb *, const limb *, const limb *, const int, const limb *, const limb *, const limb *)'
|   |   | |-ImplicitCastExpr 0x1653b528458 <col:19, col:43> 'limb *' <ArrayToPointerDecay>
|   |   | | `-ArraySubscriptExpr 0x1653b5276c8 <col:19, col:43> 'felem':'limb [4]' lvalue
|   |   | |   |-ImplicitCastExpr 0x1653b5276b0 <col:19, col:40> 'felem *' <ArrayToPointerDecay>
|   |   | |   | `-ArraySubscriptExpr 0x1653b527668 <col:19, col:40> 'felem [3]' lvalue
|   |   | |   |   |-ImplicitCastExpr 0x1653b527650 <col:19, col:36> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |   |   | `-ArraySubscriptExpr 0x1653b527608 <col:19, col:36> 'felem [16][3]' lvalue
|   |   | |   |   |   |-ImplicitCastExpr 0x1653b5275d8 <col:19, col:24> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |   |   |   | `-MemberExpr 0x1653b527588 <col:19, col:24> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48
|   |   | |   |   |   |   `-ImplicitCastExpr 0x1653b527570 <col:19> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |   |   |   |     `-DeclRefExpr 0x1653b527550 <col:19> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   |   | |   |   |   `-ImplicitCastExpr 0x1653b5275f0 <col:35> 'int' <LValueToRValue>
|   |   | |   |   |     `-DeclRefExpr 0x1653b5275b8 <col:35> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   |   | |   |   `-IntegerLiteral 0x1653b527628 <col:38> 'int' 10
|   |   | |   `-IntegerLiteral 0x1653b527688 <col:42> 'int' 0
|   |   | |-ImplicitCastExpr 0x1653b528470 <col:46, col:70> 'limb *' <ArrayToPointerDecay>
|   |   | | `-ArraySubscriptExpr 0x1653b527860 <col:46, col:70> 'felem':'limb [4]' lvalue
|   |   | |   |-ImplicitCastExpr 0x1653b527848 <col:46, col:67> 'felem *' <ArrayToPointerDecay>
|   |   | |   | `-ArraySubscriptExpr 0x1653b527800 <col:46, col:67> 'felem [3]' lvalue
|   |   | |   |   |-ImplicitCastExpr 0x1653b5277e8 <col:46, col:63> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |   |   | `-ArraySubscriptExpr 0x1653b5277a0 <col:46, col:63> 'felem [16][3]' lvalue
|   |   | |   |   |   |-ImplicitCastExpr 0x1653b527770 <col:46, col:51> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |   |   |   | `-MemberExpr 0x1653b527720 <col:46, col:51> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48
|   |   | |   |   |   |   `-ImplicitCastExpr 0x1653b527708 <col:46> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |   |   |   |     `-DeclRefExpr 0x1653b5276e8 <col:46> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   |   | |   |   |   `-ImplicitCastExpr 0x1653b527788 <col:62> 'int' <LValueToRValue>
|   |   | |   |   |     `-DeclRefExpr 0x1653b527750 <col:62> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   |   | |   |   `-IntegerLiteral 0x1653b5277c0 <col:65> 'int' 10
|   |   | |   `-IntegerLiteral 0x1653b527820 <col:69> 'int' 1
|   |   | |-ImplicitCastExpr 0x1653b528488 <line:1667:19, col:43> 'limb *' <ArrayToPointerDecay>
|   |   | | `-ArraySubscriptExpr 0x1653b5279f8 <col:19, col:43> 'felem':'limb [4]' lvalue
|   |   | |   |-ImplicitCastExpr 0x1653b5279e0 <col:19, col:40> 'felem *' <ArrayToPointerDecay>
|   |   | |   | `-ArraySubscriptExpr 0x1653b527998 <col:19, col:40> 'felem [3]' lvalue
|   |   | |   |   |-ImplicitCastExpr 0x1653b527980 <col:19, col:36> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |   |   | `-ArraySubscriptExpr 0x1653b527938 <col:19, col:36> 'felem [16][3]' lvalue
|   |   | |   |   |   |-ImplicitCastExpr 0x1653b527908 <col:19, col:24> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |   |   |   | `-MemberExpr 0x1653b5278b8 <col:19, col:24> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48
|   |   | |   |   |   |   `-ImplicitCastExpr 0x1653b5278a0 <col:19> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |   |   |   |     `-DeclRefExpr 0x1653b527880 <col:19> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   |   | |   |   |   `-ImplicitCastExpr 0x1653b527920 <col:35> 'int' <LValueToRValue>
|   |   | |   |   |     `-DeclRefExpr 0x1653b5278e8 <col:35> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   |   | |   |   `-IntegerLiteral 0x1653b527958 <col:38> 'int' 10
|   |   | |   `-IntegerLiteral 0x1653b5279b8 <col:42> 'int' 2
|   |   | |-ImplicitCastExpr 0x1653b5284b8 <col:46, col:69> 'const limb *':'const limb *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x1653b5284a0 <col:46, col:69> 'limb *' <ArrayToPointerDecay>
|   |   | |   `-ArraySubscriptExpr 0x1653b527b90 <col:46, col:69> 'felem':'limb [4]' lvalue
|   |   | |     |-ImplicitCastExpr 0x1653b527b78 <col:46, col:66> 'felem *' <ArrayToPointerDecay>
|   |   | |     | `-ArraySubscriptExpr 0x1653b527b30 <col:46, col:66> 'felem [3]' lvalue
|   |   | |     |   |-ImplicitCastExpr 0x1653b527b18 <col:46, col:63> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |     |   | `-ArraySubscriptExpr 0x1653b527ad0 <col:46, col:63> 'felem [16][3]' lvalue
|   |   | |     |   |   |-ImplicitCastExpr 0x1653b527aa0 <col:46, col:51> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |     |   |   | `-MemberExpr 0x1653b527a50 <col:46, col:51> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48
|   |   | |     |   |   |   `-ImplicitCastExpr 0x1653b527a38 <col:46> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |     |   |   |     `-DeclRefExpr 0x1653b527a18 <col:46> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   |   | |     |   |   `-ImplicitCastExpr 0x1653b527ab8 <col:62> 'int' <LValueToRValue>
|   |   | |     |   |     `-DeclRefExpr 0x1653b527a80 <col:62> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   |   | |     |   `-IntegerLiteral 0x1653b527af0 <col:65> 'int' 8
|   |   | |     `-IntegerLiteral 0x1653b527b50 <col:68> 'int' 0
|   |   | |-ImplicitCastExpr 0x1653b5284e8 <line:1668:19, col:42> 'const limb *':'const limb *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x1653b5284d0 <col:19, col:42> 'limb *' <ArrayToPointerDecay>
|   |   | |   `-ArraySubscriptExpr 0x1653b527d28 <col:19, col:42> 'felem':'limb [4]' lvalue
|   |   | |     |-ImplicitCastExpr 0x1653b527d10 <col:19, col:39> 'felem *' <ArrayToPointerDecay>
|   |   | |     | `-ArraySubscriptExpr 0x1653b527cc8 <col:19, col:39> 'felem [3]' lvalue
|   |   | |     |   |-ImplicitCastExpr 0x1653b527cb0 <col:19, col:36> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |     |   | `-ArraySubscriptExpr 0x1653b527c68 <col:19, col:36> 'felem [16][3]' lvalue
|   |   | |     |   |   |-ImplicitCastExpr 0x1653b527c38 <col:19, col:24> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |     |   |   | `-MemberExpr 0x1653b527be8 <col:19, col:24> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48
|   |   | |     |   |   |   `-ImplicitCastExpr 0x1653b527bd0 <col:19> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |     |   |   |     `-DeclRefExpr 0x1653b527bb0 <col:19> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   |   | |     |   |   `-ImplicitCastExpr 0x1653b527c50 <col:35> 'int' <LValueToRValue>
|   |   | |     |   |     `-DeclRefExpr 0x1653b527c18 <col:35> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   |   | |     |   `-IntegerLiteral 0x1653b527c88 <col:38> 'int' 8
|   |   | |     `-IntegerLiteral 0x1653b527ce8 <col:41> 'int' 1
|   |   | |-ImplicitCastExpr 0x1653b528518 <col:45, col:68> 'const limb *':'const limb *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x1653b528500 <col:45, col:68> 'limb *' <ArrayToPointerDecay>
|   |   | |   `-ArraySubscriptExpr 0x1653b527ec0 <col:45, col:68> 'felem':'limb [4]' lvalue
|   |   | |     |-ImplicitCastExpr 0x1653b527ea8 <col:45, col:65> 'felem *' <ArrayToPointerDecay>
|   |   | |     | `-ArraySubscriptExpr 0x1653b527e60 <col:45, col:65> 'felem [3]' lvalue
|   |   | |     |   |-ImplicitCastExpr 0x1653b527e48 <col:45, col:62> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |     |   | `-ArraySubscriptExpr 0x1653b527e00 <col:45, col:62> 'felem [16][3]' lvalue
|   |   | |     |   |   |-ImplicitCastExpr 0x1653b527dd0 <col:45, col:50> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |     |   |   | `-MemberExpr 0x1653b527d80 <col:45, col:50> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48
|   |   | |     |   |   |   `-ImplicitCastExpr 0x1653b527d68 <col:45> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |     |   |   |     `-DeclRefExpr 0x1653b527d48 <col:45> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   |   | |     |   |   `-ImplicitCastExpr 0x1653b527de8 <col:61> 'int' <LValueToRValue>
|   |   | |     |   |     `-DeclRefExpr 0x1653b527db0 <col:61> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   |   | |     |   `-IntegerLiteral 0x1653b527e20 <col:64> 'int' 8
|   |   | |     `-IntegerLiteral 0x1653b527e80 <col:67> 'int' 2
|   |   | |-IntegerLiteral 0x1653b527ee0 <line:1669:19> 'int' 0
|   |   | |-ImplicitCastExpr 0x1653b528548 <col:22, col:45> 'const limb *':'const limb *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x1653b528530 <col:22, col:45> 'limb *' <ArrayToPointerDecay>
|   |   | |   `-ArraySubscriptExpr 0x1653b528080 <col:22, col:45> 'felem':'limb [4]' lvalue
|   |   | |     |-ImplicitCastExpr 0x1653b528068 <col:22, col:42> 'felem *' <ArrayToPointerDecay>
|   |   | |     | `-ArraySubscriptExpr 0x1653b528020 <col:22, col:42> 'felem [3]' lvalue
|   |   | |     |   |-ImplicitCastExpr 0x1653b528008 <col:22, col:39> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |     |   | `-ArraySubscriptExpr 0x1653b527fc0 <col:22, col:39> 'felem [16][3]' lvalue
|   |   | |     |   |   |-ImplicitCastExpr 0x1653b527f90 <col:22, col:27> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |     |   |   | `-MemberExpr 0x1653b527f40 <col:22, col:27> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48
|   |   | |     |   |   |   `-ImplicitCastExpr 0x1653b527f28 <col:22> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |     |   |   |     `-DeclRefExpr 0x1653b527f08 <col:22> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   |   | |     |   |   `-ImplicitCastExpr 0x1653b527fa8 <col:38> 'int' <LValueToRValue>
|   |   | |     |   |     `-DeclRefExpr 0x1653b527f70 <col:38> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   |   | |     |   `-IntegerLiteral 0x1653b527fe0 <col:41> 'int' 2
|   |   | |     `-IntegerLiteral 0x1653b528040 <col:44> 'int' 0
|   |   | |-ImplicitCastExpr 0x1653b528578 <col:48, col:71> 'const limb *':'const limb *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x1653b528560 <col:48, col:71> 'limb *' <ArrayToPointerDecay>
|   |   | |   `-ArraySubscriptExpr 0x1653b528218 <col:48, col:71> 'felem':'limb [4]' lvalue
|   |   | |     |-ImplicitCastExpr 0x1653b528200 <col:48, col:68> 'felem *' <ArrayToPointerDecay>
|   |   | |     | `-ArraySubscriptExpr 0x1653b5281b8 <col:48, col:68> 'felem [3]' lvalue
|   |   | |     |   |-ImplicitCastExpr 0x1653b5281a0 <col:48, col:65> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |     |   | `-ArraySubscriptExpr 0x1653b528158 <col:48, col:65> 'felem [16][3]' lvalue
|   |   | |     |   |   |-ImplicitCastExpr 0x1653b528128 <col:48, col:53> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |     |   |   | `-MemberExpr 0x1653b5280d8 <col:48, col:53> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48
|   |   | |     |   |   |   `-ImplicitCastExpr 0x1653b5280c0 <col:48> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |     |   |   |     `-DeclRefExpr 0x1653b5280a0 <col:48> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   |   | |     |   |   `-ImplicitCastExpr 0x1653b528140 <col:64> 'int' <LValueToRValue>
|   |   | |     |   |     `-DeclRefExpr 0x1653b528108 <col:64> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   |   | |     |   `-IntegerLiteral 0x1653b528178 <col:67> 'int' 2
|   |   | |     `-IntegerLiteral 0x1653b5281d8 <col:70> 'int' 1
|   |   | `-ImplicitCastExpr 0x1653b5285a8 <line:1670:19, col:42> 'const limb *':'const limb *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x1653b528590 <col:19, col:42> 'limb *' <ArrayToPointerDecay>
|   |   |     `-ArraySubscriptExpr 0x1653b5283b0 <col:19, col:42> 'felem':'limb [4]' lvalue
|   |   |       |-ImplicitCastExpr 0x1653b528398 <col:19, col:39> 'felem *' <ArrayToPointerDecay>
|   |   |       | `-ArraySubscriptExpr 0x1653b528350 <col:19, col:39> 'felem [3]' lvalue
|   |   |       |   |-ImplicitCastExpr 0x1653b528338 <col:19, col:36> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   |       |   | `-ArraySubscriptExpr 0x1653b5282f0 <col:19, col:36> 'felem [16][3]' lvalue
|   |   |       |   |   |-ImplicitCastExpr 0x1653b5282c0 <col:19, col:24> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   |       |   |   | `-MemberExpr 0x1653b528270 <col:19, col:24> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48
|   |   |       |   |   |   `-ImplicitCastExpr 0x1653b528258 <col:19> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   |       |   |   |     `-DeclRefExpr 0x1653b528238 <col:19> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   |   |       |   |   `-ImplicitCastExpr 0x1653b5282d8 <col:35> 'int' <LValueToRValue>
|   |   |       |   |     `-DeclRefExpr 0x1653b5282a0 <col:35> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   |   |       |   `-IntegerLiteral 0x1653b528310 <col:38> 'int' 2
|   |   |       `-IntegerLiteral 0x1653b528370 <col:41> 'int' 2
|   |   |-CallExpr 0x1653b535508 <line:1672:9, line:1676:43> 'void'
|   |   | |-ImplicitCastExpr 0x1653b5354f0 <line:1672:9> 'void (*)(limb *, limb *, limb *, const limb *, const limb *, const limb *, const int, const limb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1653b5285c0 <col:9> 'void (limb *, limb *, limb *, const limb *, const limb *, const limb *, const int, const limb *, const limb *, const limb *)' Function 0x1653b3fb0b8 'point_add' 'void (limb *, limb *, limb *, const limb *, const limb *, const limb *, const int, const limb *, const limb *, const limb *)'
|   |   | |-ImplicitCastExpr 0x1653b535578 <col:19, col:43> 'limb *' <ArrayToPointerDecay>
|   |   | | `-ArraySubscriptExpr 0x1653b528758 <col:19, col:43> 'felem':'limb [4]' lvalue
|   |   | |   |-ImplicitCastExpr 0x1653b528740 <col:19, col:40> 'felem *' <ArrayToPointerDecay>
|   |   | |   | `-ArraySubscriptExpr 0x1653b5286f8 <col:19, col:40> 'felem [3]' lvalue
|   |   | |   |   |-ImplicitCastExpr 0x1653b5286e0 <col:19, col:36> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |   |   | `-ArraySubscriptExpr 0x1653b528698 <col:19, col:36> 'felem [16][3]' lvalue
|   |   | |   |   |   |-ImplicitCastExpr 0x1653b528668 <col:19, col:24> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |   |   |   | `-MemberExpr 0x1653b528618 <col:19, col:24> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48
|   |   | |   |   |   |   `-ImplicitCastExpr 0x1653b528600 <col:19> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |   |   |   |     `-DeclRefExpr 0x1653b5285e0 <col:19> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   |   | |   |   |   `-ImplicitCastExpr 0x1653b528680 <col:35> 'int' <LValueToRValue>
|   |   | |   |   |     `-DeclRefExpr 0x1653b528648 <col:35> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   |   | |   |   `-IntegerLiteral 0x1653b5286b8 <col:38> 'int' 12
|   |   | |   `-IntegerLiteral 0x1653b528718 <col:42> 'int' 0
|   |   | |-ImplicitCastExpr 0x1653b535590 <col:46, col:70> 'limb *' <ArrayToPointerDecay>
|   |   | | `-ArraySubscriptExpr 0x1653b5288f0 <col:46, col:70> 'felem':'limb [4]' lvalue
|   |   | |   |-ImplicitCastExpr 0x1653b5288d8 <col:46, col:67> 'felem *' <ArrayToPointerDecay>
|   |   | |   | `-ArraySubscriptExpr 0x1653b528890 <col:46, col:67> 'felem [3]' lvalue
|   |   | |   |   |-ImplicitCastExpr 0x1653b528878 <col:46, col:63> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |   |   | `-ArraySubscriptExpr 0x1653b528830 <col:46, col:63> 'felem [16][3]' lvalue
|   |   | |   |   |   |-ImplicitCastExpr 0x1653b528800 <col:46, col:51> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |   |   |   | `-MemberExpr 0x1653b5287b0 <col:46, col:51> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48
|   |   | |   |   |   |   `-ImplicitCastExpr 0x1653b528798 <col:46> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |   |   |   |     `-DeclRefExpr 0x1653b528778 <col:46> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   |   | |   |   |   `-ImplicitCastExpr 0x1653b528818 <col:62> 'int' <LValueToRValue>
|   |   | |   |   |     `-DeclRefExpr 0x1653b5287e0 <col:62> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   |   | |   |   `-IntegerLiteral 0x1653b528850 <col:65> 'int' 12
|   |   | |   `-IntegerLiteral 0x1653b5288b0 <col:69> 'int' 1
|   |   | |-ImplicitCastExpr 0x1653b5355a8 <line:1673:19, col:43> 'limb *' <ArrayToPointerDecay>
|   |   | | `-ArraySubscriptExpr 0x1653b528a88 <col:19, col:43> 'felem':'limb [4]' lvalue
|   |   | |   |-ImplicitCastExpr 0x1653b528a70 <col:19, col:40> 'felem *' <ArrayToPointerDecay>
|   |   | |   | `-ArraySubscriptExpr 0x1653b528a28 <col:19, col:40> 'felem [3]' lvalue
|   |   | |   |   |-ImplicitCastExpr 0x1653b528a10 <col:19, col:36> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |   |   | `-ArraySubscriptExpr 0x1653b5289c8 <col:19, col:36> 'felem [16][3]' lvalue
|   |   | |   |   |   |-ImplicitCastExpr 0x1653b528998 <col:19, col:24> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |   |   |   | `-MemberExpr 0x1653b528948 <col:19, col:24> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48
|   |   | |   |   |   |   `-ImplicitCastExpr 0x1653b528930 <col:19> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |   |   |   |     `-DeclRefExpr 0x1653b528910 <col:19> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   |   | |   |   |   `-ImplicitCastExpr 0x1653b5289b0 <col:35> 'int' <LValueToRValue>
|   |   | |   |   |     `-DeclRefExpr 0x1653b528978 <col:35> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   |   | |   |   `-IntegerLiteral 0x1653b5289e8 <col:38> 'int' 12
|   |   | |   `-IntegerLiteral 0x1653b528a48 <col:42> 'int' 2
|   |   | |-ImplicitCastExpr 0x1653b5355d8 <col:46, col:69> 'const limb *':'const limb *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x1653b5355c0 <col:46, col:69> 'limb *' <ArrayToPointerDecay>
|   |   | |   `-ArraySubscriptExpr 0x1653b528c20 <col:46, col:69> 'felem':'limb [4]' lvalue
|   |   | |     |-ImplicitCastExpr 0x1653b528c08 <col:46, col:66> 'felem *' <ArrayToPointerDecay>
|   |   | |     | `-ArraySubscriptExpr 0x1653b528bc0 <col:46, col:66> 'felem [3]' lvalue
|   |   | |     |   |-ImplicitCastExpr 0x1653b528ba8 <col:46, col:63> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |     |   | `-ArraySubscriptExpr 0x1653b528b60 <col:46, col:63> 'felem [16][3]' lvalue
|   |   | |     |   |   |-ImplicitCastExpr 0x1653b528b30 <col:46, col:51> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |     |   |   | `-MemberExpr 0x1653b528ae0 <col:46, col:51> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48
|   |   | |     |   |   |   `-ImplicitCastExpr 0x1653b528ac8 <col:46> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |     |   |   |     `-DeclRefExpr 0x1653b528aa8 <col:46> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   |   | |     |   |   `-ImplicitCastExpr 0x1653b528b48 <col:62> 'int' <LValueToRValue>
|   |   | |     |   |     `-DeclRefExpr 0x1653b528b10 <col:62> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   |   | |     |   `-IntegerLiteral 0x1653b528b80 <col:65> 'int' 8
|   |   | |     `-IntegerLiteral 0x1653b528be0 <col:68> 'int' 0
|   |   | |-ImplicitCastExpr 0x1653b535608 <line:1674:19, col:42> 'const limb *':'const limb *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x1653b5355f0 <col:19, col:42> 'limb *' <ArrayToPointerDecay>
|   |   | |   `-ArraySubscriptExpr 0x1653b528db8 <col:19, col:42> 'felem':'limb [4]' lvalue
|   |   | |     |-ImplicitCastExpr 0x1653b528da0 <col:19, col:39> 'felem *' <ArrayToPointerDecay>
|   |   | |     | `-ArraySubscriptExpr 0x1653b528d58 <col:19, col:39> 'felem [3]' lvalue
|   |   | |     |   |-ImplicitCastExpr 0x1653b528d40 <col:19, col:36> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |     |   | `-ArraySubscriptExpr 0x1653b528cf8 <col:19, col:36> 'felem [16][3]' lvalue
|   |   | |     |   |   |-ImplicitCastExpr 0x1653b528cc8 <col:19, col:24> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |     |   |   | `-MemberExpr 0x1653b528c78 <col:19, col:24> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48
|   |   | |     |   |   |   `-ImplicitCastExpr 0x1653b528c60 <col:19> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |     |   |   |     `-DeclRefExpr 0x1653b528c40 <col:19> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   |   | |     |   |   `-ImplicitCastExpr 0x1653b528ce0 <col:35> 'int' <LValueToRValue>
|   |   | |     |   |     `-DeclRefExpr 0x1653b528ca8 <col:35> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   |   | |     |   `-IntegerLiteral 0x1653b528d18 <col:38> 'int' 8
|   |   | |     `-IntegerLiteral 0x1653b528d78 <col:41> 'int' 1
|   |   | |-ImplicitCastExpr 0x1653b535638 <col:45, col:68> 'const limb *':'const limb *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x1653b535620 <col:45, col:68> 'limb *' <ArrayToPointerDecay>
|   |   | |   `-ArraySubscriptExpr 0x1653b528f50 <col:45, col:68> 'felem':'limb [4]' lvalue
|   |   | |     |-ImplicitCastExpr 0x1653b528f38 <col:45, col:65> 'felem *' <ArrayToPointerDecay>
|   |   | |     | `-ArraySubscriptExpr 0x1653b528ef0 <col:45, col:65> 'felem [3]' lvalue
|   |   | |     |   |-ImplicitCastExpr 0x1653b528ed8 <col:45, col:62> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |     |   | `-ArraySubscriptExpr 0x1653b528e90 <col:45, col:62> 'felem [16][3]' lvalue
|   |   | |     |   |   |-ImplicitCastExpr 0x1653b528e60 <col:45, col:50> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |     |   |   | `-MemberExpr 0x1653b528e10 <col:45, col:50> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48
|   |   | |     |   |   |   `-ImplicitCastExpr 0x1653b528df8 <col:45> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |     |   |   |     `-DeclRefExpr 0x1653b528dd8 <col:45> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   |   | |     |   |   `-ImplicitCastExpr 0x1653b528e78 <col:61> 'int' <LValueToRValue>
|   |   | |     |   |     `-DeclRefExpr 0x1653b528e40 <col:61> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   |   | |     |   `-IntegerLiteral 0x1653b528eb0 <col:64> 'int' 8
|   |   | |     `-IntegerLiteral 0x1653b528f10 <col:67> 'int' 2
|   |   | |-IntegerLiteral 0x1653b528f70 <line:1675:19> 'int' 0
|   |   | |-ImplicitCastExpr 0x1653b535668 <col:22, col:45> 'const limb *':'const limb *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x1653b535650 <col:22, col:45> 'limb *' <ArrayToPointerDecay>
|   |   | |   `-ArraySubscriptExpr 0x1653b5351a0 <col:22, col:45> 'felem':'limb [4]' lvalue
|   |   | |     |-ImplicitCastExpr 0x1653b535188 <col:22, col:42> 'felem *' <ArrayToPointerDecay>
|   |   | |     | `-ArraySubscriptExpr 0x1653b535140 <col:22, col:42> 'felem [3]' lvalue
|   |   | |     |   |-ImplicitCastExpr 0x1653b535128 <col:22, col:39> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |     |   | `-ArraySubscriptExpr 0x1653b5350e0 <col:22, col:39> 'felem [16][3]' lvalue
|   |   | |     |   |   |-ImplicitCastExpr 0x1653b5350b0 <col:22, col:27> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |     |   |   | `-MemberExpr 0x1653b535060 <col:22, col:27> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48
|   |   | |     |   |   |   `-ImplicitCastExpr 0x1653b528fb8 <col:22> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |     |   |   |     `-DeclRefExpr 0x1653b528f98 <col:22> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   |   | |     |   |   `-ImplicitCastExpr 0x1653b5350c8 <col:38> 'int' <LValueToRValue>
|   |   | |     |   |     `-DeclRefExpr 0x1653b535090 <col:38> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   |   | |     |   `-IntegerLiteral 0x1653b535100 <col:41> 'int' 4
|   |   | |     `-IntegerLiteral 0x1653b535160 <col:44> 'int' 0
|   |   | |-ImplicitCastExpr 0x1653b535698 <col:48, col:71> 'const limb *':'const limb *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x1653b535680 <col:48, col:71> 'limb *' <ArrayToPointerDecay>
|   |   | |   `-ArraySubscriptExpr 0x1653b535338 <col:48, col:71> 'felem':'limb [4]' lvalue
|   |   | |     |-ImplicitCastExpr 0x1653b535320 <col:48, col:68> 'felem *' <ArrayToPointerDecay>
|   |   | |     | `-ArraySubscriptExpr 0x1653b5352d8 <col:48, col:68> 'felem [3]' lvalue
|   |   | |     |   |-ImplicitCastExpr 0x1653b5352c0 <col:48, col:65> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |     |   | `-ArraySubscriptExpr 0x1653b535278 <col:48, col:65> 'felem [16][3]' lvalue
|   |   | |     |   |   |-ImplicitCastExpr 0x1653b535248 <col:48, col:53> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |     |   |   | `-MemberExpr 0x1653b5351f8 <col:48, col:53> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48
|   |   | |     |   |   |   `-ImplicitCastExpr 0x1653b5351e0 <col:48> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |     |   |   |     `-DeclRefExpr 0x1653b5351c0 <col:48> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   |   | |     |   |   `-ImplicitCastExpr 0x1653b535260 <col:64> 'int' <LValueToRValue>
|   |   | |     |   |     `-DeclRefExpr 0x1653b535228 <col:64> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   |   | |     |   `-IntegerLiteral 0x1653b535298 <col:67> 'int' 4
|   |   | |     `-IntegerLiteral 0x1653b5352f8 <col:70> 'int' 1
|   |   | `-ImplicitCastExpr 0x1653b5356c8 <line:1676:19, col:42> 'const limb *':'const limb *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x1653b5356b0 <col:19, col:42> 'limb *' <ArrayToPointerDecay>
|   |   |     `-ArraySubscriptExpr 0x1653b5354d0 <col:19, col:42> 'felem':'limb [4]' lvalue
|   |   |       |-ImplicitCastExpr 0x1653b5354b8 <col:19, col:39> 'felem *' <ArrayToPointerDecay>
|   |   |       | `-ArraySubscriptExpr 0x1653b535470 <col:19, col:39> 'felem [3]' lvalue
|   |   |       |   |-ImplicitCastExpr 0x1653b535458 <col:19, col:36> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   |       |   | `-ArraySubscriptExpr 0x1653b535410 <col:19, col:36> 'felem [16][3]' lvalue
|   |   |       |   |   |-ImplicitCastExpr 0x1653b5353e0 <col:19, col:24> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   |       |   |   | `-MemberExpr 0x1653b535390 <col:19, col:24> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48
|   |   |       |   |   |   `-ImplicitCastExpr 0x1653b535378 <col:19> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   |       |   |   |     `-DeclRefExpr 0x1653b535358 <col:19> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   |   |       |   |   `-ImplicitCastExpr 0x1653b5353f8 <col:35> 'int' <LValueToRValue>
|   |   |       |   |     `-DeclRefExpr 0x1653b5353c0 <col:35> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   |   |       |   `-IntegerLiteral 0x1653b535430 <col:38> 'int' 4
|   |   |       `-IntegerLiteral 0x1653b535490 <col:41> 'int' 2
|   |   |-CallExpr 0x1653b536598 <line:1680:9, line:1684:43> 'void'
|   |   | |-ImplicitCastExpr 0x1653b536580 <line:1680:9> 'void (*)(limb *, limb *, limb *, const limb *, const limb *, const limb *, const int, const limb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1653b5356e0 <col:9> 'void (limb *, limb *, limb *, const limb *, const limb *, const limb *, const int, const limb *, const limb *, const limb *)' Function 0x1653b3fb0b8 'point_add' 'void (limb *, limb *, limb *, const limb *, const limb *, const limb *, const int, const limb *, const limb *, const limb *)'
|   |   | |-ImplicitCastExpr 0x1653b536608 <col:19, col:43> 'limb *' <ArrayToPointerDecay>
|   |   | | `-ArraySubscriptExpr 0x1653b535878 <col:19, col:43> 'felem':'limb [4]' lvalue
|   |   | |   |-ImplicitCastExpr 0x1653b535860 <col:19, col:40> 'felem *' <ArrayToPointerDecay>
|   |   | |   | `-ArraySubscriptExpr 0x1653b535818 <col:19, col:40> 'felem [3]' lvalue
|   |   | |   |   |-ImplicitCastExpr 0x1653b535800 <col:19, col:36> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |   |   | `-ArraySubscriptExpr 0x1653b5357b8 <col:19, col:36> 'felem [16][3]' lvalue
|   |   | |   |   |   |-ImplicitCastExpr 0x1653b535788 <col:19, col:24> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |   |   |   | `-MemberExpr 0x1653b535738 <col:19, col:24> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48
|   |   | |   |   |   |   `-ImplicitCastExpr 0x1653b535720 <col:19> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |   |   |   |     `-DeclRefExpr 0x1653b535700 <col:19> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   |   | |   |   |   `-ImplicitCastExpr 0x1653b5357a0 <col:35> 'int' <LValueToRValue>
|   |   | |   |   |     `-DeclRefExpr 0x1653b535768 <col:35> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   |   | |   |   `-IntegerLiteral 0x1653b5357d8 <col:38> 'int' 14
|   |   | |   `-IntegerLiteral 0x1653b535838 <col:42> 'int' 0
|   |   | |-ImplicitCastExpr 0x1653b536620 <col:46, col:70> 'limb *' <ArrayToPointerDecay>
|   |   | | `-ArraySubscriptExpr 0x1653b535a10 <col:46, col:70> 'felem':'limb [4]' lvalue
|   |   | |   |-ImplicitCastExpr 0x1653b5359f8 <col:46, col:67> 'felem *' <ArrayToPointerDecay>
|   |   | |   | `-ArraySubscriptExpr 0x1653b5359b0 <col:46, col:67> 'felem [3]' lvalue
|   |   | |   |   |-ImplicitCastExpr 0x1653b535998 <col:46, col:63> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |   |   | `-ArraySubscriptExpr 0x1653b535950 <col:46, col:63> 'felem [16][3]' lvalue
|   |   | |   |   |   |-ImplicitCastExpr 0x1653b535920 <col:46, col:51> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |   |   |   | `-MemberExpr 0x1653b5358d0 <col:46, col:51> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48
|   |   | |   |   |   |   `-ImplicitCastExpr 0x1653b5358b8 <col:46> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |   |   |   |     `-DeclRefExpr 0x1653b535898 <col:46> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   |   | |   |   |   `-ImplicitCastExpr 0x1653b535938 <col:62> 'int' <LValueToRValue>
|   |   | |   |   |     `-DeclRefExpr 0x1653b535900 <col:62> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   |   | |   |   `-IntegerLiteral 0x1653b535970 <col:65> 'int' 14
|   |   | |   `-IntegerLiteral 0x1653b5359d0 <col:69> 'int' 1
|   |   | |-ImplicitCastExpr 0x1653b536638 <line:1681:19, col:43> 'limb *' <ArrayToPointerDecay>
|   |   | | `-ArraySubscriptExpr 0x1653b535ba8 <col:19, col:43> 'felem':'limb [4]' lvalue
|   |   | |   |-ImplicitCastExpr 0x1653b535b90 <col:19, col:40> 'felem *' <ArrayToPointerDecay>
|   |   | |   | `-ArraySubscriptExpr 0x1653b535b48 <col:19, col:40> 'felem [3]' lvalue
|   |   | |   |   |-ImplicitCastExpr 0x1653b535b30 <col:19, col:36> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |   |   | `-ArraySubscriptExpr 0x1653b535ae8 <col:19, col:36> 'felem [16][3]' lvalue
|   |   | |   |   |   |-ImplicitCastExpr 0x1653b535ab8 <col:19, col:24> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |   |   |   | `-MemberExpr 0x1653b535a68 <col:19, col:24> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48
|   |   | |   |   |   |   `-ImplicitCastExpr 0x1653b535a50 <col:19> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |   |   |   |     `-DeclRefExpr 0x1653b535a30 <col:19> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   |   | |   |   |   `-ImplicitCastExpr 0x1653b535ad0 <col:35> 'int' <LValueToRValue>
|   |   | |   |   |     `-DeclRefExpr 0x1653b535a98 <col:35> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   |   | |   |   `-IntegerLiteral 0x1653b535b08 <col:38> 'int' 14
|   |   | |   `-IntegerLiteral 0x1653b535b68 <col:42> 'int' 2
|   |   | |-ImplicitCastExpr 0x1653b536668 <col:46, col:70> 'const limb *':'const limb *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x1653b536650 <col:46, col:70> 'limb *' <ArrayToPointerDecay>
|   |   | |   `-ArraySubscriptExpr 0x1653b535d40 <col:46, col:70> 'felem':'limb [4]' lvalue
|   |   | |     |-ImplicitCastExpr 0x1653b535d28 <col:46, col:67> 'felem *' <ArrayToPointerDecay>
|   |   | |     | `-ArraySubscriptExpr 0x1653b535ce0 <col:46, col:67> 'felem [3]' lvalue
|   |   | |     |   |-ImplicitCastExpr 0x1653b535cc8 <col:46, col:63> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |     |   | `-ArraySubscriptExpr 0x1653b535c80 <col:46, col:63> 'felem [16][3]' lvalue
|   |   | |     |   |   |-ImplicitCastExpr 0x1653b535c50 <col:46, col:51> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |     |   |   | `-MemberExpr 0x1653b535c00 <col:46, col:51> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48
|   |   | |     |   |   |   `-ImplicitCastExpr 0x1653b535be8 <col:46> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |     |   |   |     `-DeclRefExpr 0x1653b535bc8 <col:46> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   |   | |     |   |   `-ImplicitCastExpr 0x1653b535c68 <col:62> 'int' <LValueToRValue>
|   |   | |     |   |     `-DeclRefExpr 0x1653b535c30 <col:62> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   |   | |     |   `-IntegerLiteral 0x1653b535ca0 <col:65> 'int' 12
|   |   | |     `-IntegerLiteral 0x1653b535d00 <col:69> 'int' 0
|   |   | |-ImplicitCastExpr 0x1653b536698 <line:1682:19, col:43> 'const limb *':'const limb *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x1653b536680 <col:19, col:43> 'limb *' <ArrayToPointerDecay>
|   |   | |   `-ArraySubscriptExpr 0x1653b535ed8 <col:19, col:43> 'felem':'limb [4]' lvalue
|   |   | |     |-ImplicitCastExpr 0x1653b535ec0 <col:19, col:40> 'felem *' <ArrayToPointerDecay>
|   |   | |     | `-ArraySubscriptExpr 0x1653b535e78 <col:19, col:40> 'felem [3]' lvalue
|   |   | |     |   |-ImplicitCastExpr 0x1653b535e60 <col:19, col:36> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |     |   | `-ArraySubscriptExpr 0x1653b535e18 <col:19, col:36> 'felem [16][3]' lvalue
|   |   | |     |   |   |-ImplicitCastExpr 0x1653b535de8 <col:19, col:24> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |     |   |   | `-MemberExpr 0x1653b535d98 <col:19, col:24> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48
|   |   | |     |   |   |   `-ImplicitCastExpr 0x1653b535d80 <col:19> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |     |   |   |     `-DeclRefExpr 0x1653b535d60 <col:19> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   |   | |     |   |   `-ImplicitCastExpr 0x1653b535e00 <col:35> 'int' <LValueToRValue>
|   |   | |     |   |     `-DeclRefExpr 0x1653b535dc8 <col:35> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   |   | |     |   `-IntegerLiteral 0x1653b535e38 <col:38> 'int' 12
|   |   | |     `-IntegerLiteral 0x1653b535e98 <col:42> 'int' 1
|   |   | |-ImplicitCastExpr 0x1653b5366c8 <col:46, col:70> 'const limb *':'const limb *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x1653b5366b0 <col:46, col:70> 'limb *' <ArrayToPointerDecay>
|   |   | |   `-ArraySubscriptExpr 0x1653b536070 <col:46, col:70> 'felem':'limb [4]' lvalue
|   |   | |     |-ImplicitCastExpr 0x1653b536058 <col:46, col:67> 'felem *' <ArrayToPointerDecay>
|   |   | |     | `-ArraySubscriptExpr 0x1653b536010 <col:46, col:67> 'felem [3]' lvalue
|   |   | |     |   |-ImplicitCastExpr 0x1653b535ff8 <col:46, col:63> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |     |   | `-ArraySubscriptExpr 0x1653b535fb0 <col:46, col:63> 'felem [16][3]' lvalue
|   |   | |     |   |   |-ImplicitCastExpr 0x1653b535f80 <col:46, col:51> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |     |   |   | `-MemberExpr 0x1653b535f30 <col:46, col:51> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48
|   |   | |     |   |   |   `-ImplicitCastExpr 0x1653b535f18 <col:46> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |     |   |   |     `-DeclRefExpr 0x1653b535ef8 <col:46> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   |   | |     |   |   `-ImplicitCastExpr 0x1653b535f98 <col:62> 'int' <LValueToRValue>
|   |   | |     |   |     `-DeclRefExpr 0x1653b535f60 <col:62> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   |   | |     |   `-IntegerLiteral 0x1653b535fd0 <col:65> 'int' 12
|   |   | |     `-IntegerLiteral 0x1653b536030 <col:69> 'int' 2
|   |   | |-IntegerLiteral 0x1653b536090 <line:1683:19> 'int' 0
|   |   | |-ImplicitCastExpr 0x1653b5366f8 <col:22, col:45> 'const limb *':'const limb *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x1653b5366e0 <col:22, col:45> 'limb *' <ArrayToPointerDecay>
|   |   | |   `-ArraySubscriptExpr 0x1653b536230 <col:22, col:45> 'felem':'limb [4]' lvalue
|   |   | |     |-ImplicitCastExpr 0x1653b536218 <col:22, col:42> 'felem *' <ArrayToPointerDecay>
|   |   | |     | `-ArraySubscriptExpr 0x1653b5361d0 <col:22, col:42> 'felem [3]' lvalue
|   |   | |     |   |-ImplicitCastExpr 0x1653b5361b8 <col:22, col:39> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |     |   | `-ArraySubscriptExpr 0x1653b536170 <col:22, col:39> 'felem [16][3]' lvalue
|   |   | |     |   |   |-ImplicitCastExpr 0x1653b536140 <col:22, col:27> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |     |   |   | `-MemberExpr 0x1653b5360f0 <col:22, col:27> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48
|   |   | |     |   |   |   `-ImplicitCastExpr 0x1653b5360d8 <col:22> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |     |   |   |     `-DeclRefExpr 0x1653b5360b8 <col:22> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   |   | |     |   |   `-ImplicitCastExpr 0x1653b536158 <col:38> 'int' <LValueToRValue>
|   |   | |     |   |     `-DeclRefExpr 0x1653b536120 <col:38> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   |   | |     |   `-IntegerLiteral 0x1653b536190 <col:41> 'int' 2
|   |   | |     `-IntegerLiteral 0x1653b5361f0 <col:44> 'int' 0
|   |   | |-ImplicitCastExpr 0x1653b536728 <col:48, col:71> 'const limb *':'const limb *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x1653b536710 <col:48, col:71> 'limb *' <ArrayToPointerDecay>
|   |   | |   `-ArraySubscriptExpr 0x1653b5363c8 <col:48, col:71> 'felem':'limb [4]' lvalue
|   |   | |     |-ImplicitCastExpr 0x1653b5363b0 <col:48, col:68> 'felem *' <ArrayToPointerDecay>
|   |   | |     | `-ArraySubscriptExpr 0x1653b536368 <col:48, col:68> 'felem [3]' lvalue
|   |   | |     |   |-ImplicitCastExpr 0x1653b536350 <col:48, col:65> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |     |   | `-ArraySubscriptExpr 0x1653b536308 <col:48, col:65> 'felem [16][3]' lvalue
|   |   | |     |   |   |-ImplicitCastExpr 0x1653b5362d8 <col:48, col:53> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |     |   |   | `-MemberExpr 0x1653b536288 <col:48, col:53> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48
|   |   | |     |   |   |   `-ImplicitCastExpr 0x1653b536270 <col:48> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |     |   |   |     `-DeclRefExpr 0x1653b536250 <col:48> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   |   | |     |   |   `-ImplicitCastExpr 0x1653b5362f0 <col:64> 'int' <LValueToRValue>
|   |   | |     |   |     `-DeclRefExpr 0x1653b5362b8 <col:64> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   |   | |     |   `-IntegerLiteral 0x1653b536328 <col:67> 'int' 2
|   |   | |     `-IntegerLiteral 0x1653b536388 <col:70> 'int' 1
|   |   | `-ImplicitCastExpr 0x1653b536758 <line:1684:19, col:42> 'const limb *':'const limb *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x1653b536740 <col:19, col:42> 'limb *' <ArrayToPointerDecay>
|   |   |     `-ArraySubscriptExpr 0x1653b536560 <col:19, col:42> 'felem':'limb [4]' lvalue
|   |   |       |-ImplicitCastExpr 0x1653b536548 <col:19, col:39> 'felem *' <ArrayToPointerDecay>
|   |   |       | `-ArraySubscriptExpr 0x1653b536500 <col:19, col:39> 'felem [3]' lvalue
|   |   |       |   |-ImplicitCastExpr 0x1653b5364e8 <col:19, col:36> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   |       |   | `-ArraySubscriptExpr 0x1653b5364a0 <col:19, col:36> 'felem [16][3]' lvalue
|   |   |       |   |   |-ImplicitCastExpr 0x1653b536470 <col:19, col:24> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   |       |   |   | `-MemberExpr 0x1653b536420 <col:19, col:24> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48
|   |   |       |   |   |   `-ImplicitCastExpr 0x1653b536408 <col:19> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   |       |   |   |     `-DeclRefExpr 0x1653b5363e8 <col:19> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   |   |       |   |   `-ImplicitCastExpr 0x1653b536488 <col:35> 'int' <LValueToRValue>
|   |   |       |   |     `-DeclRefExpr 0x1653b536450 <col:35> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   |   |       |   `-IntegerLiteral 0x1653b5364c0 <col:38> 'int' 2
|   |   |       `-IntegerLiteral 0x1653b536520 <col:41> 'int' 2
|   |   `-ForStmt 0x1653b537c38 <line:1685:9, line:1695:9>
|   |     |-BinaryOperator 0x1653b5367b8 <line:1685:14, col:18> 'int' '='
|   |     | |-DeclRefExpr 0x1653b536770 <col:14> 'int' lvalue Var 0x1653b5255f8 'j' 'int'
|   |     | `-IntegerLiteral 0x1653b536790 <col:18> 'int' 1
|   |     |-<<<NULL>>>
|   |     |-BinaryOperator 0x1653b536838 <col:21, col:25> 'int' '<'
|   |     | |-ImplicitCastExpr 0x1653b536820 <col:21> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1653b5367d8 <col:21> 'int' lvalue Var 0x1653b5255f8 'j' 'int'
|   |     | `-IntegerLiteral 0x1653b5367f8 <col:25> 'int' 8
|   |     |-UnaryOperator 0x1653b536878 <col:28, col:30> 'int' prefix '++'
|   |     | `-DeclRefExpr 0x1653b536858 <col:30> 'int' lvalue Var 0x1653b5255f8 'j' 'int'
|   |     `-CompoundStmt 0x1653b537c20 <col:33, line:1695:9>
|   |       `-CallExpr 0x1653b537a48 <line:1687:13, line:1694:47> 'void'
|   |         |-ImplicitCastExpr 0x1653b537a30 <line:1687:13> 'void (*)(limb *, limb *, limb *, const limb *, const limb *, const limb *, const int, const limb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   |         | `-DeclRefExpr 0x1653b536890 <col:13> 'void (limb *, limb *, limb *, const limb *, const limb *, const limb *, const int, const limb *, const limb *, const limb *)' Function 0x1653b3fb0b8 'point_add' 'void (limb *, limb *, limb *, const limb *, const limb *, const limb *, const int, const limb *, const limb *, const limb *)'
|   |         |-ImplicitCastExpr 0x1653b537ab8 <col:23, col:54> 'limb *' <ArrayToPointerDecay>
|   |         | `-ArraySubscriptExpr 0x1653b536ac8 <col:23, col:54> 'felem':'limb [4]' lvalue
|   |         |   |-ImplicitCastExpr 0x1653b536ab0 <col:23, col:51> 'felem *' <ArrayToPointerDecay>
|   |         |   | `-ArraySubscriptExpr 0x1653b536a68 <col:23, col:51> 'felem [3]' lvalue
|   |         |   |   |-ImplicitCastExpr 0x1653b536a50 <col:23, col:40> 'felem (*)[3]' <ArrayToPointerDecay>
|   |         |   |   | `-ArraySubscriptExpr 0x1653b536968 <col:23, col:40> 'felem [16][3]' lvalue
|   |         |   |   |   |-ImplicitCastExpr 0x1653b536938 <col:23, col:28> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |         |   |   |   | `-MemberExpr 0x1653b5368e8 <col:23, col:28> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48
|   |         |   |   |   |   `-ImplicitCastExpr 0x1653b5368d0 <col:23> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |         |   |   |   |     `-DeclRefExpr 0x1653b5368b0 <col:23> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   |         |   |   |   `-ImplicitCastExpr 0x1653b536950 <col:39> 'int' <LValueToRValue>
|   |         |   |   |     `-DeclRefExpr 0x1653b536918 <col:39> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   |         |   |   `-BinaryOperator 0x1653b536a30 <col:42, col:50> 'int' '+'
|   |         |   |     |-BinaryOperator 0x1653b5369e8 <col:42, col:46> 'int' '*'
|   |         |   |     | |-IntegerLiteral 0x1653b536988 <col:42> 'int' 2
|   |         |   |     | `-ImplicitCastExpr 0x1653b5369d0 <col:46> 'int' <LValueToRValue>
|   |         |   |     |   `-DeclRefExpr 0x1653b5369b0 <col:46> 'int' lvalue Var 0x1653b5255f8 'j' 'int'
|   |         |   |     `-IntegerLiteral 0x1653b536a08 <col:50> 'int' 1
|   |         |   `-IntegerLiteral 0x1653b536a88 <col:53> 'int' 0
|   |         |-ImplicitCastExpr 0x1653b537ad0 <line:1688:23, col:54> 'limb *' <ArrayToPointerDecay>
|   |         | `-ArraySubscriptExpr 0x1653b536d00 <col:23, col:54> 'felem':'limb [4]' lvalue
|   |         |   |-ImplicitCastExpr 0x1653b536ce8 <col:23, col:51> 'felem *' <ArrayToPointerDecay>
|   |         |   | `-ArraySubscriptExpr 0x1653b536ca0 <col:23, col:51> 'felem [3]' lvalue
|   |         |   |   |-ImplicitCastExpr 0x1653b536c88 <col:23, col:40> 'felem (*)[3]' <ArrayToPointerDecay>
|   |         |   |   | `-ArraySubscriptExpr 0x1653b536ba0 <col:23, col:40> 'felem [16][3]' lvalue
|   |         |   |   |   |-ImplicitCastExpr 0x1653b536b70 <col:23, col:28> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |         |   |   |   | `-MemberExpr 0x1653b536b20 <col:23, col:28> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48
|   |         |   |   |   |   `-ImplicitCastExpr 0x1653b536b08 <col:23> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |         |   |   |   |     `-DeclRefExpr 0x1653b536ae8 <col:23> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   |         |   |   |   `-ImplicitCastExpr 0x1653b536b88 <col:39> 'int' <LValueToRValue>
|   |         |   |   |     `-DeclRefExpr 0x1653b536b50 <col:39> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   |         |   |   `-BinaryOperator 0x1653b536c68 <col:42, col:50> 'int' '+'
|   |         |   |     |-BinaryOperator 0x1653b536c20 <col:42, col:46> 'int' '*'
|   |         |   |     | |-IntegerLiteral 0x1653b536bc0 <col:42> 'int' 2
|   |         |   |     | `-ImplicitCastExpr 0x1653b536c08 <col:46> 'int' <LValueToRValue>
|   |         |   |     |   `-DeclRefExpr 0x1653b536be8 <col:46> 'int' lvalue Var 0x1653b5255f8 'j' 'int'
|   |         |   |     `-IntegerLiteral 0x1653b536c40 <col:50> 'int' 1
|   |         |   `-IntegerLiteral 0x1653b536cc0 <col:53> 'int' 1
|   |         |-ImplicitCastExpr 0x1653b537ae8 <line:1689:23, col:54> 'limb *' <ArrayToPointerDecay>
|   |         | `-ArraySubscriptExpr 0x1653b536f38 <col:23, col:54> 'felem':'limb [4]' lvalue
|   |         |   |-ImplicitCastExpr 0x1653b536f20 <col:23, col:51> 'felem *' <ArrayToPointerDecay>
|   |         |   | `-ArraySubscriptExpr 0x1653b536ed8 <col:23, col:51> 'felem [3]' lvalue
|   |         |   |   |-ImplicitCastExpr 0x1653b536ec0 <col:23, col:40> 'felem (*)[3]' <ArrayToPointerDecay>
|   |         |   |   | `-ArraySubscriptExpr 0x1653b536dd8 <col:23, col:40> 'felem [16][3]' lvalue
|   |         |   |   |   |-ImplicitCastExpr 0x1653b536da8 <col:23, col:28> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |         |   |   |   | `-MemberExpr 0x1653b536d58 <col:23, col:28> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48
|   |         |   |   |   |   `-ImplicitCastExpr 0x1653b536d40 <col:23> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |         |   |   |   |     `-DeclRefExpr 0x1653b536d20 <col:23> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   |         |   |   |   `-ImplicitCastExpr 0x1653b536dc0 <col:39> 'int' <LValueToRValue>
|   |         |   |   |     `-DeclRefExpr 0x1653b536d88 <col:39> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   |         |   |   `-BinaryOperator 0x1653b536ea0 <col:42, col:50> 'int' '+'
|   |         |   |     |-BinaryOperator 0x1653b536e58 <col:42, col:46> 'int' '*'
|   |         |   |     | |-IntegerLiteral 0x1653b536df8 <col:42> 'int' 2
|   |         |   |     | `-ImplicitCastExpr 0x1653b536e40 <col:46> 'int' <LValueToRValue>
|   |         |   |     |   `-DeclRefExpr 0x1653b536e20 <col:46> 'int' lvalue Var 0x1653b5255f8 'j' 'int'
|   |         |   |     `-IntegerLiteral 0x1653b536e78 <col:50> 'int' 1
|   |         |   `-IntegerLiteral 0x1653b536ef8 <col:53> 'int' 2
|   |         |-ImplicitCastExpr 0x1653b537b18 <line:1690:23, col:50> 'const limb *':'const limb *' <NoOp>
|   |         | `-ImplicitCastExpr 0x1653b537b00 <col:23, col:50> 'limb *' <ArrayToPointerDecay>
|   |         |   `-ArraySubscriptExpr 0x1653b537140 <col:23, col:50> 'felem':'limb [4]' lvalue
|   |         |     |-ImplicitCastExpr 0x1653b537128 <col:23, col:47> 'felem *' <ArrayToPointerDecay>
|   |         |     | `-ArraySubscriptExpr 0x1653b5370e0 <col:23, col:47> 'felem [3]' lvalue
|   |         |     |   |-ImplicitCastExpr 0x1653b5370c8 <col:23, col:40> 'felem (*)[3]' <ArrayToPointerDecay>
|   |         |     |   | `-ArraySubscriptExpr 0x1653b537010 <col:23, col:40> 'felem [16][3]' lvalue
|   |         |     |   |   |-ImplicitCastExpr 0x1653b536fe0 <col:23, col:28> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |         |     |   |   | `-MemberExpr 0x1653b536f90 <col:23, col:28> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48
|   |         |     |   |   |   `-ImplicitCastExpr 0x1653b536f78 <col:23> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |         |     |   |   |     `-DeclRefExpr 0x1653b536f58 <col:23> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   |         |     |   |   `-ImplicitCastExpr 0x1653b536ff8 <col:39> 'int' <LValueToRValue>
|   |         |     |   |     `-DeclRefExpr 0x1653b536fc0 <col:39> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   |         |     |   `-BinaryOperator 0x1653b5370a8 <col:42, col:46> 'int' '*'
|   |         |     |     |-IntegerLiteral 0x1653b537030 <col:42> 'int' 2
|   |         |     |     `-ImplicitCastExpr 0x1653b537090 <col:46> 'int' <LValueToRValue>
|   |         |     |       `-DeclRefExpr 0x1653b537070 <col:46> 'int' lvalue Var 0x1653b5255f8 'j' 'int'
|   |         |     `-IntegerLiteral 0x1653b537100 <col:49> 'int' 0
|   |         |-ImplicitCastExpr 0x1653b537b48 <line:1691:23, col:50> 'const limb *':'const limb *' <NoOp>
|   |         | `-ImplicitCastExpr 0x1653b537b30 <col:23, col:50> 'limb *' <ArrayToPointerDecay>
|   |         |   `-ArraySubscriptExpr 0x1653b537330 <col:23, col:50> 'felem':'limb [4]' lvalue
|   |         |     |-ImplicitCastExpr 0x1653b537318 <col:23, col:47> 'felem *' <ArrayToPointerDecay>
|   |         |     | `-ArraySubscriptExpr 0x1653b5372d0 <col:23, col:47> 'felem [3]' lvalue
|   |         |     |   |-ImplicitCastExpr 0x1653b5372b8 <col:23, col:40> 'felem (*)[3]' <ArrayToPointerDecay>
|   |         |     |   | `-ArraySubscriptExpr 0x1653b537218 <col:23, col:40> 'felem [16][3]' lvalue
|   |         |     |   |   |-ImplicitCastExpr 0x1653b5371e8 <col:23, col:28> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |         |     |   |   | `-MemberExpr 0x1653b537198 <col:23, col:28> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48
|   |         |     |   |   |   `-ImplicitCastExpr 0x1653b537180 <col:23> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |         |     |   |   |     `-DeclRefExpr 0x1653b537160 <col:23> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   |         |     |   |   `-ImplicitCastExpr 0x1653b537200 <col:39> 'int' <LValueToRValue>
|   |         |     |   |     `-DeclRefExpr 0x1653b5371c8 <col:39> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   |         |     |   `-BinaryOperator 0x1653b537298 <col:42, col:46> 'int' '*'
|   |         |     |     |-IntegerLiteral 0x1653b537238 <col:42> 'int' 2
|   |         |     |     `-ImplicitCastExpr 0x1653b537280 <col:46> 'int' <LValueToRValue>
|   |         |     |       `-DeclRefExpr 0x1653b537260 <col:46> 'int' lvalue Var 0x1653b5255f8 'j' 'int'
|   |         |     `-IntegerLiteral 0x1653b5372f0 <col:49> 'int' 1
|   |         |-ImplicitCastExpr 0x1653b537b78 <line:1692:23, col:50> 'const limb *':'const limb *' <NoOp>
|   |         | `-ImplicitCastExpr 0x1653b537b60 <col:23, col:50> 'limb *' <ArrayToPointerDecay>
|   |         |   `-ArraySubscriptExpr 0x1653b537520 <col:23, col:50> 'felem':'limb [4]' lvalue
|   |         |     |-ImplicitCastExpr 0x1653b537508 <col:23, col:47> 'felem *' <ArrayToPointerDecay>
|   |         |     | `-ArraySubscriptExpr 0x1653b5374c0 <col:23, col:47> 'felem [3]' lvalue
|   |         |     |   |-ImplicitCastExpr 0x1653b5374a8 <col:23, col:40> 'felem (*)[3]' <ArrayToPointerDecay>
|   |         |     |   | `-ArraySubscriptExpr 0x1653b537408 <col:23, col:40> 'felem [16][3]' lvalue
|   |         |     |   |   |-ImplicitCastExpr 0x1653b5373d8 <col:23, col:28> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |         |     |   |   | `-MemberExpr 0x1653b537388 <col:23, col:28> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48
|   |         |     |   |   |   `-ImplicitCastExpr 0x1653b537370 <col:23> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |         |     |   |   |     `-DeclRefExpr 0x1653b537350 <col:23> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   |         |     |   |   `-ImplicitCastExpr 0x1653b5373f0 <col:39> 'int' <LValueToRValue>
|   |         |     |   |     `-DeclRefExpr 0x1653b5373b8 <col:39> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   |         |     |   `-BinaryOperator 0x1653b537488 <col:42, col:46> 'int' '*'
|   |         |     |     |-IntegerLiteral 0x1653b537428 <col:42> 'int' 2
|   |         |     |     `-ImplicitCastExpr 0x1653b537470 <col:46> 'int' <LValueToRValue>
|   |         |     |       `-DeclRefExpr 0x1653b537450 <col:46> 'int' lvalue Var 0x1653b5255f8 'j' 'int'
|   |         |     `-IntegerLiteral 0x1653b5374e0 <col:49> 'int' 2
|   |         |-IntegerLiteral 0x1653b537540 <col:53> 'int' 0
|   |         |-ImplicitCastExpr 0x1653b537ba8 <line:1693:23, col:46> 'const limb *':'const limb *' <NoOp>
|   |         | `-ImplicitCastExpr 0x1653b537b90 <col:23, col:46> 'limb *' <ArrayToPointerDecay>
|   |         |   `-ArraySubscriptExpr 0x1653b5376e0 <col:23, col:46> 'felem':'limb [4]' lvalue
|   |         |     |-ImplicitCastExpr 0x1653b5376c8 <col:23, col:43> 'felem *' <ArrayToPointerDecay>
|   |         |     | `-ArraySubscriptExpr 0x1653b537680 <col:23, col:43> 'felem [3]' lvalue
|   |         |     |   |-ImplicitCastExpr 0x1653b537668 <col:23, col:40> 'felem (*)[3]' <ArrayToPointerDecay>
|   |         |     |   | `-ArraySubscriptExpr 0x1653b537620 <col:23, col:40> 'felem [16][3]' lvalue
|   |         |     |   |   |-ImplicitCastExpr 0x1653b5375f0 <col:23, col:28> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |         |     |   |   | `-MemberExpr 0x1653b5375a0 <col:23, col:28> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48
|   |         |     |   |   |   `-ImplicitCastExpr 0x1653b537588 <col:23> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |         |     |   |   |     `-DeclRefExpr 0x1653b537568 <col:23> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   |         |     |   |   `-ImplicitCastExpr 0x1653b537608 <col:39> 'int' <LValueToRValue>
|   |         |     |   |     `-DeclRefExpr 0x1653b5375d0 <col:39> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   |         |     |   `-IntegerLiteral 0x1653b537640 <col:42> 'int' 1
|   |         |     `-IntegerLiteral 0x1653b5376a0 <col:45> 'int' 0
|   |         |-ImplicitCastExpr 0x1653b537bd8 <col:49, col:72> 'const limb *':'const limb *' <NoOp>
|   |         | `-ImplicitCastExpr 0x1653b537bc0 <col:49, col:72> 'limb *' <ArrayToPointerDecay>
|   |         |   `-ArraySubscriptExpr 0x1653b537878 <col:49, col:72> 'felem':'limb [4]' lvalue
|   |         |     |-ImplicitCastExpr 0x1653b537860 <col:49, col:69> 'felem *' <ArrayToPointerDecay>
|   |         |     | `-ArraySubscriptExpr 0x1653b537818 <col:49, col:69> 'felem [3]' lvalue
|   |         |     |   |-ImplicitCastExpr 0x1653b537800 <col:49, col:66> 'felem (*)[3]' <ArrayToPointerDecay>
|   |         |     |   | `-ArraySubscriptExpr 0x1653b5377b8 <col:49, col:66> 'felem [16][3]' lvalue
|   |         |     |   |   |-ImplicitCastExpr 0x1653b537788 <col:49, col:54> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |         |     |   |   | `-MemberExpr 0x1653b537738 <col:49, col:54> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48
|   |         |     |   |   |   `-ImplicitCastExpr 0x1653b537720 <col:49> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |         |     |   |   |     `-DeclRefExpr 0x1653b537700 <col:49> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   |         |     |   |   `-ImplicitCastExpr 0x1653b5377a0 <col:65> 'int' <LValueToRValue>
|   |         |     |   |     `-DeclRefExpr 0x1653b537768 <col:65> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   |         |     |   `-IntegerLiteral 0x1653b5377d8 <col:68> 'int' 1
|   |         |     `-IntegerLiteral 0x1653b537838 <col:71> 'int' 1
|   |         `-ImplicitCastExpr 0x1653b537c08 <line:1694:23, col:46> 'const limb *':'const limb *' <NoOp>
|   |           `-ImplicitCastExpr 0x1653b537bf0 <col:23, col:46> 'limb *' <ArrayToPointerDecay>
|   |             `-ArraySubscriptExpr 0x1653b537a10 <col:23, col:46> 'felem':'limb [4]' lvalue
|   |               |-ImplicitCastExpr 0x1653b5379f8 <col:23, col:43> 'felem *' <ArrayToPointerDecay>
|   |               | `-ArraySubscriptExpr 0x1653b5379b0 <col:23, col:43> 'felem [3]' lvalue
|   |               |   |-ImplicitCastExpr 0x1653b537998 <col:23, col:40> 'felem (*)[3]' <ArrayToPointerDecay>
|   |               |   | `-ArraySubscriptExpr 0x1653b537950 <col:23, col:40> 'felem [16][3]' lvalue
|   |               |   |   |-ImplicitCastExpr 0x1653b537920 <col:23, col:28> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |               |   |   | `-MemberExpr 0x1653b5378d0 <col:23, col:28> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48
|   |               |   |   |   `-ImplicitCastExpr 0x1653b5378b8 <col:23> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |               |   |   |     `-DeclRefExpr 0x1653b537898 <col:23> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   |               |   |   `-ImplicitCastExpr 0x1653b537938 <col:39> 'int' <LValueToRValue>
|   |               |   |     `-DeclRefExpr 0x1653b537900 <col:39> 'int' lvalue Var 0x1653b525578 'i' 'int'
|   |               |   `-IntegerLiteral 0x1653b537970 <col:42> 'int' 1
|   |               `-IntegerLiteral 0x1653b5379d0 <col:45> 'int' 2
|   |-CallExpr 0x1653b537ee0 <line:1697:5, col:64> 'void'
|   | |-ImplicitCastExpr 0x1653b537ec8 <col:5> 'void (*)(size_t, felem (*)[3], felem *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b537ce8 <col:5> 'void (size_t, felem (*)[3], felem *)' Function 0x1653b51dbf8 'make_points_affine' 'void (size_t, felem (*)[3], felem *)'
|   | |-ImplicitCastExpr 0x1653b537f18 <col:24> 'size_t':'unsigned long long' <IntegralCast>
|   | | `-IntegerLiteral 0x1653b537d08 <col:24> 'int' 31
|   | |-UnaryOperator 0x1653b537e78 <col:28, col:51> 'felem (*)[3]' prefix '&' cannot overflow
|   | | `-ParenExpr 0x1653b537e58 <col:29, col:51> 'felem [3]' lvalue
|   | |   `-ArraySubscriptExpr 0x1653b537e38 <col:30, col:50> 'felem [3]' lvalue
|   | |     |-ImplicitCastExpr 0x1653b537e20 <col:30, col:47> 'felem (*)[3]' <ArrayToPointerDecay>
|   | |     | `-ArraySubscriptExpr 0x1653b537dd8 <col:30, col:47> 'felem [16][3]' lvalue
|   | |     |   |-ImplicitCastExpr 0x1653b537dc0 <col:30, col:35> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   | |     |   | `-MemberExpr 0x1653b537d68 <col:30, col:35> 'felem [2][16][3]' lvalue ->g_pre_comp 0x1653b2f7e48
|   | |     |   |   `-ImplicitCastExpr 0x1653b537d50 <col:30> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   | |     |   |     `-DeclRefExpr 0x1653b537d30 <col:30> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   | |     |   `-IntegerLiteral 0x1653b537d98 <col:46> 'int' 0
|   | |     `-IntegerLiteral 0x1653b537df8 <col:49> 'int' 1
|   | `-ImplicitCastExpr 0x1653b537f30 <col:54> 'felem *' <ArrayToPointerDecay>
|   |   `-DeclRefExpr 0x1653b537e90 <col:54> 'felem [32]' lvalue Var 0x1653b525878 'tmp_felems' 'felem [32]'
|   |-LabelStmt 0x1653b537f90 <line:1699:2, col:6> 'done'
|   | `-NullStmt 0x1653b537f88 <col:6>
|   |-BinaryOperator 0x1653b538068 <line:1701:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'NISTP224_PRE_COMP *' '='
|   | |-DeclRefExpr 0x1653b537fa8 <.//openssl//file_jk/before\crypto\ec\ecp_nistp224.c:1701:5> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   | `-ImplicitCastExpr 0x1653b538050 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'NISTP224_PRE_COMP *' <NullToPointer>
|   |   `-ParenExpr 0x1653b538030 <col:17, col:27> 'void *'
|   |     `-CStyleCastExpr 0x1653b538008 <col:18, col:26> 'void *' <NullToPointer>
|   |       `-IntegerLiteral 0x1653b537fc8 <col:26> 'int' 0
|   |-BinaryOperator 0x1653b5380e8 <.//openssl//file_jk/before\crypto\ec\ecp_nistp224.c:1702:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x1653b538088 <col:5> 'int' lvalue Var 0x1653b525388 'ret' 'int'
|   | `-IntegerLiteral 0x1653b5380c0 <col:11> 'int' 1
|   |-LabelStmt 0x1653b538130 <line:1703:2, col:5> 'err'
|   | `-NullStmt 0x1653b538128 <col:5>
|   |-CallExpr 0x1653b538240 <line:1707:5, col:34> 'void'
|   | |-ImplicitCastExpr 0x1653b538228 <col:5> 'void (*)(NISTP224_PRE_COMP *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1653b538188 <col:5> 'void (NISTP224_PRE_COMP *)' Function 0x1653b51bd68 'EC_nistp224_pre_comp_free' 'void (NISTP224_PRE_COMP *)'
|   | `-ImplicitCastExpr 0x1653b538268 <col:31> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1653b5381a8 <col:31> 'NISTP224_PRE_COMP *' lvalue Var 0x1653b525440 'pre' 'NISTP224_PRE_COMP *'
|   `-ReturnStmt 0x1653b5382b8 <line:1708:5, col:12>
|     `-ImplicitCastExpr 0x1653b5382a0 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1653b538280 <col:12> 'int' lvalue Var 0x1653b525388 'ret' 'int'
`-FunctionDecl 0x1653b538430 <line:1711:1, line:1714:1> line:1711:5 invalid ec_GFp_nistp224_have_precompute_mult 'int (const int *)'
  |-ParmVarDecl 0x1653b538398 <col:42, col:58> col:58 invalid group 'const int *'
  `-CompoundStmt 0x1653b538598 <line:1712:1, line:1714:1>
