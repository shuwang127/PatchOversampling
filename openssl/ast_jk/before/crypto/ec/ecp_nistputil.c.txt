TranslationUnitDecl 0x229a08e6418 <<invalid sloc>> <invalid sloc> <undeserialized declarations>
|-TypedefDecl 0x229a08e6cb0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x229a08e69b0 '__int128'
|-TypedefDecl 0x229a08e6d20 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x229a08e69d0 'unsigned __int128'
|-TypedefDecl 0x229a08e7058 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x229a08e6e10 'struct __NSConstantString_tag'
|   `-Record 0x229a08e6d78 '__NSConstantString_tag'
|-TypedefDecl 0x229a08e70c8 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x229a08e65f0 'unsigned long long'
|-TypedefDecl 0x229a08e7160 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x229a08e7120 'char *'
|   `-BuiltinType 0x229a08e64b0 'char'
|-TypedefDecl 0x229a08e71d0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x229a08e7120 'char *'
|   `-BuiltinType 0x229a08e64b0 'char'
|-TypedefDecl 0x229a08e7240 <D:\LLVM\lib\clang\10.0.0\include\stddef.h:35:1, col:26> col:26 ptrdiff_t 'long long'
| `-BuiltinType 0x229a08e6550 'long long'
|-TypedefDecl 0x229a08e72b0 prev 0x229a08e70c8 <line:46:1, col:23> col:23 size_t 'unsigned long long'
| `-BuiltinType 0x229a08e65f0 'unsigned long long'
|-TypedefDecl 0x229a08e7338 <line:60:1, col:23> col:23 rsize_t 'unsigned long long'
| `-BuiltinType 0x229a08e65f0 'unsigned long long'
|-TypedefDecl 0x229a08e73a8 <line:74:1, col:24> col:24 wchar_t 'unsigned short'
| `-BuiltinType 0x229a08e6590 'unsigned short'
|-ImportDecl 0x229a22a36e0 <line:102:1> col:1 implicit _Builtin_stddef_max_align_t
|-TypedefDecl 0x229a22a3788 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x229a08e65f0 'unsigned long long'
|-TypedefDecl 0x229a22a37f8 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x229a08e7120 'char *'
|   `-BuiltinType 0x229a08e64b0 'char'
|-FunctionDecl 0x229a22a3a40 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x229a22a3ae0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x229a22a3b50 <col:21> Implicit
|-FunctionDecl 0x229a22a3ba8 prev 0x229a22a3a40 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x229a22a38d8 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x229a22a3c98 <col:21> Inherited Implicit
|-TypedefDecl 0x229a22a3d50 prev 0x229a22a3cc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x229a08e65f0 'unsigned long long'
|-TypedefDecl 0x229a22a3de0 prev 0x229a08e7338 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x229a22a3db0 'size_t' sugar
|   |-Typedef 0x229a22a3d50 'size_t'
|   `-BuiltinType 0x229a08e65f0 'unsigned long long'
|-TypedefDecl 0x229a22a3e68 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x229a08e6550 'long long'
|-TypedefDecl 0x229a22a3ed8 prev 0x229a08e7240 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x229a08e6550 'long long'
|-TypedefDecl 0x229a22a3f60 prev 0x229a08e73a8 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x229a08e6590 'unsigned short'
|-TypedefDecl 0x229a22a3fe8 <line:541:1, col:24> col:24 wint_t 'unsigned short'
| `-BuiltinType 0x229a08e6590 'unsigned short'
|-TypedefDecl 0x229a22a4058 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x229a08e6590 'unsigned short'
|-TypedefDecl 0x229a22a40c8 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x229a08e6510 'int'
|-TypedefDecl 0x229a22a4138 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x229a08e6530 'long'
|-TypedefDecl 0x229a22a41a8 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x229a08e6550 'long long'
|-TypedefDecl 0x229a22a4230 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x229a22a4200 '__time64_t' sugar
|   |-Typedef 0x229a22a41a8 '__time64_t'
|   `-BuiltinType 0x229a08e6550 'long long'
|-FunctionDecl 0x229a22a43a8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x229a22a45c8 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x229a243c070 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x229a243bc08 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x229a243bc80 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x229a243bcf8 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x229a243bd78 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x229a243be10 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x229a243c150 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x229a243c210 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x229a243c380 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x229a243c330 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x229a243c2d0 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x229a243c1f0 'struct threadlocaleinfostruct'
|       `-Record 0x229a244eed8 'threadlocaleinfostruct'
|-TypedefDecl 0x229a243c490 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x229a243c440 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x229a243c3e0 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x229a243c2b0 'struct threadmbcinfostruct'
|       `-Record 0x229a243c210 'threadmbcinfostruct'
|-RecordDecl 0x229a243c4e8 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x229a243c5a0 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x229a243c660 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x229a243c6f0 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x229a243c780 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x229a243c838 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x229a243c7e0 'struct localeinfo_struct' sugar
|   `-RecordType 0x229a243c640 'struct localeinfo_struct'
|     `-Record 0x229a243c5a0 'localeinfo_struct'
|-TypedefDecl 0x229a243c910 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x229a243c8c0 'struct localeinfo_struct *'
|   `-ElaboratedType 0x229a243c7e0 'struct localeinfo_struct' sugar
|     `-RecordType 0x229a243c640 'struct localeinfo_struct'
|       `-Record 0x229a243c5a0 'localeinfo_struct'
|-RecordDecl 0x229a243c988 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x229a243ca40 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x229a243cab8 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x229a243cb78 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x229a244ed40 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x229a244edb0 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x229a244ee68 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x229a244ee10 'struct localerefcount' sugar
|   `-RecordType 0x229a243ca20 'struct localerefcount'
|     `-Record 0x229a243c988 'localerefcount'
|-RecordDecl 0x229a244eed8 prev 0x229a243c150 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x229a244ef58 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x229a244efd0 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x229a244f040 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x229a244f0b0 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x229a244f120 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x229a244f2e8 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x229a244f358 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x229a244f3c8 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x229a244f438 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x229a244f4a8 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x229a244f518 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x229a244f570 parent 0x229a08e6418 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x229a244f700 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x229a244f770 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x229a244f7e0 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x229a244f850 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x229a244f8f0 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x229a244f960 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x229a244fa70 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x229a244fba8 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x229a244fc58 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x229a244fc00 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x229a243c1f0 'struct threadlocaleinfostruct'
|     `-Record 0x229a244eed8 'threadlocaleinfostruct'
|-TypedefDecl 0x229a2452ef8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:52:1, col:24> col:24 referenced _onexit_t 'int (*)(void) __attribute__((cdecl))'
| `-PointerType 0x229a2452e90 'int (*)(void) __attribute__((cdecl))'
|   `-AttributedType 0x229a2452e30 'int (void) __attribute__((cdecl))' sugar
|     |-ParenType 0x229a2452de0 'int (void)' sugar
|     | `-FunctionProtoType 0x229a2452db0 'int (void)' cdecl
|     |   `-BuiltinType 0x229a08e6510 'int'
|     `-ParenType 0x229a2452de0 'int (void)' sugar
|       `-FunctionProtoType 0x229a2452db0 'int (void)' cdecl
|         `-BuiltinType 0x229a08e6510 'int'
|-RecordDecl 0x229a2452f50 <line:75:9, line:78:1> line:75:16 struct _div_t definition
| |-MaxFieldAlignmentAttr 0x229a2453010 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x229a2453088 <line:76:9, col:13> col:13 quot 'int'
| `-FieldDecl 0x229a24530f8 <line:77:9, col:13> col:13 rem 'int'
|-TypedefDecl 0x229a24531a8 <line:75:1, line:78:3> col:3 referenced div_t 'struct _div_t':'struct _div_t'
| `-ElaboratedType 0x229a2453150 'struct _div_t' sugar
|   `-RecordType 0x229a2452ff0 'struct _div_t'
|     `-Record 0x229a2452f50 '_div_t'
|-RecordDecl 0x229a2453218 <line:80:9, line:83:1> line:80:16 struct _ldiv_t definition
| |-MaxFieldAlignmentAttr 0x229a24532d0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x229a2453348 <line:81:9, col:14> col:14 quot 'long'
| `-FieldDecl 0x229a24533b8 <line:82:9, col:14> col:14 rem 'long'
|-TypedefDecl 0x229a2453468 <line:80:1, line:83:3> col:3 referenced ldiv_t 'struct _ldiv_t':'struct _ldiv_t'
| `-ElaboratedType 0x229a2453410 'struct _ldiv_t' sugar
|   `-RecordType 0x229a24532b0 'struct _ldiv_t'
|     `-Record 0x229a2453218 '_ldiv_t'
|-RecordDecl 0x229a24534d8 <line:85:9, line:88:1> line:85:16 struct _lldiv_t definition
| |-MaxFieldAlignmentAttr 0x229a2453590 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x229a2453608 <line:86:9, col:19> col:19 quot 'long long'
| `-FieldDecl 0x229a2453678 <line:87:9, col:19> col:19 rem 'long long'
|-TypedefDecl 0x229a2453728 <line:85:1, line:88:3> col:3 referenced lldiv_t 'struct _lldiv_t':'struct _lldiv_t'
| `-ElaboratedType 0x229a24536d0 'struct _lldiv_t' sugar
|   `-RecordType 0x229a2453570 'struct _lldiv_t'
|     `-Record 0x229a24534d8 '_lldiv_t'
|-RecordDecl 0x229a24537c0 <line:103:9, line:105:1> line:103:9 struct definition
| |-MaxFieldAlignmentAttr 0x229a2453880 <<invalid sloc>> Implicit 32
| `-FieldDecl 0x229a2453980 <line:104:5, col:24> col:19 ld 'unsigned char [10]'
|-TypedefDecl 0x229a2453a38 <line:103:1, line:105:3> col:3 referenced _LDOUBLE 'struct _LDOUBLE':'_LDOUBLE'
| `-ElaboratedType 0x229a24539e0 'struct _LDOUBLE' sugar
|   `-RecordType 0x229a2453860 '_LDOUBLE'
|     `-Record 0x229a24537c0 ''
|-RecordDecl 0x229a2453aa8 <line:122:9, line:124:1> line:122:9 struct definition
| `-FieldDecl 0x229a2453b78 <line:123:9, col:16> col:16 x 'double'
|-TypedefDecl 0x229a2453c28 <line:122:1, line:124:3> col:3 referenced _CRT_DOUBLE 'struct _CRT_DOUBLE':'_CRT_DOUBLE'
| `-ElaboratedType 0x229a2453bd0 'struct _CRT_DOUBLE' sugar
|   `-RecordType 0x229a2453b40 '_CRT_DOUBLE'
|     `-Record 0x229a2453aa8 ''
|-RecordDecl 0x229a2453c98 <line:126:9, line:128:1> line:126:9 struct definition
| `-FieldDecl 0x229a2457dc8 <line:127:5, col:11> col:11 f 'float'
|-TypedefDecl 0x229a2457e78 <line:126:1, line:128:3> col:3 referenced _CRT_FLOAT 'struct _CRT_FLOAT':'_CRT_FLOAT'
| `-ElaboratedType 0x229a2457e20 'struct _CRT_FLOAT' sugar
|   `-RecordType 0x229a2457d90 '_CRT_FLOAT'
|     `-Record 0x229a2453c98 ''
|-RecordDecl 0x229a2457ee8 <line:134:9, line:139:1> line:134:9 struct definition
| `-FieldDecl 0x229a2457fb8 <line:138:9, col:21> col:21 x 'long double'
|-TypedefDecl 0x229a2458068 <line:134:1, line:139:3> col:3 _LONGDOUBLE 'struct _LONGDOUBLE':'_LONGDOUBLE'
| `-ElaboratedType 0x229a2458010 'struct _LONGDOUBLE' sugar
|   `-RecordType 0x229a2457f80 '_LONGDOUBLE'
|     `-Record 0x229a2457ee8 ''
|-RecordDecl 0x229a2458100 <line:144:9, line:146:1> line:144:9 struct definition
| |-MaxFieldAlignmentAttr 0x229a24581c0 <<invalid sloc>> Implicit 32
| `-FieldDecl 0x229a24582c0 <line:145:5, col:26> col:19 ld12 'unsigned char [12]'
|-TypedefDecl 0x229a2458378 <line:144:1, line:146:3> col:3 _LDBL12 'struct _LDBL12':'_LDBL12'
| `-ElaboratedType 0x229a2458320 'struct _LDBL12' sugar
|   `-RecordType 0x229a24581a0 '_LDBL12'
|     `-Record 0x229a2458100 ''
|-VarDecl 0x229a2458400 <line:170:9, col:20> col:20 __mb_cur_max 'int' extern
|-FunctionDecl 0x229a2458580 <line:175:9, col:44> col:21 ___mb_cur_max_func 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x229a24587d8 <line:176:9, col:51> col:21 ___mb_cur_max_l_func 'int (_locale_t) __attribute__((cdecl))':'int (_locale_t)'
| `-ParmVarDecl 0x229a2458670 <col:42> col:51 '_locale_t':'struct localeinfo_struct *'
|-TypedefDecl 0x229a2458a20 <line:215:1, col:24> col:24 referenced _purecall_handler 'void (*)(void) __attribute__((cdecl))'
| `-PointerType 0x229a24589c0 'void (*)(void) __attribute__((cdecl))'
|   `-AttributedType 0x229a2458960 'void (void) __attribute__((cdecl))' sugar
|     |-ParenType 0x229a2458910 'void (void)' sugar
|     | `-FunctionProtoType 0x229a22a4300 'void (void)' cdecl
|     |   `-BuiltinType 0x229a08e6470 'void'
|     `-ParenType 0x229a2458910 'void (void)' sugar
|       `-FunctionProtoType 0x229a22a4300 'void (void)' cdecl
|         `-BuiltinType 0x229a08e6470 'void'
|-FunctionDecl 0x229a2458c20 <line:218:9, col:92> col:35 _set_purecall_handler '_purecall_handler (_purecall_handler) __attribute__((cdecl))':'_purecall_handler (_purecall_handler)'
| `-ParmVarDecl 0x229a2458ab0 <col:66, col:84> col:84 _Handler '_purecall_handler':'void (*)(void) __attribute__((cdecl))'
|-FunctionDecl 0x229a2455e18 <line:219:9, col:61> col:35 _get_purecall_handler '_purecall_handler (void) __attribute__((cdecl))':'_purecall_handler (void)'
|-TypedefDecl 0x229a2456268 <line:235:1, col:24> col:24 referenced _invalid_parameter_handler 'void (*)(const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((cdecl))'
| `-PointerType 0x229a24561e0 'void (*)(const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((cdecl))'
|   `-AttributedType 0x229a2456180 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((cdecl))' sugar
|     |-ParenType 0x229a2456130 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t)' sugar
|     | `-FunctionProtoType 0x229a243bed0 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t)' cdecl
|     |   |-BuiltinType 0x229a08e6470 'void'
|     |   |-PointerType 0x229a243bbd0 'const wchar_t *'
|     |   | `-QualType 0x229a22a4681 'const wchar_t' const
|     |   |   `-TypedefType 0x229a22a4680 'wchar_t' sugar
|     |   |     |-Typedef 0x229a22a3f60 'wchar_t'
|     |   |     `-BuiltinType 0x229a08e6590 'unsigned short'
|     |   |-PointerType 0x229a243bbd0 'const wchar_t *'
|     |   | `-QualType 0x229a22a4681 'const wchar_t' const
|     |   |   `-TypedefType 0x229a22a4680 'wchar_t' sugar
|     |   |     |-Typedef 0x229a22a3f60 'wchar_t'
|     |   |     `-BuiltinType 0x229a08e6590 'unsigned short'
|     |   |-PointerType 0x229a243bbd0 'const wchar_t *'
|     |   | `-QualType 0x229a22a4681 'const wchar_t' const
|     |   |   `-TypedefType 0x229a22a4680 'wchar_t' sugar
|     |   |     |-Typedef 0x229a22a3f60 'wchar_t'
|     |   |     `-BuiltinType 0x229a08e6590 'unsigned short'
|     |   |-BuiltinType 0x229a08e65b0 'unsigned int'
|     |   `-TypedefType 0x229a243bde0 'uintptr_t' sugar
|     |     |-Typedef 0x229a22a3788 'uintptr_t'
|     |     `-BuiltinType 0x229a08e65f0 'unsigned long long'
|     `-ParenType 0x229a2456130 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t)' sugar
|       `-FunctionProtoType 0x229a243bed0 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t)' cdecl
|         |-BuiltinType 0x229a08e6470 'void'
|         |-PointerType 0x229a243bbd0 'const wchar_t *'
|         | `-QualType 0x229a22a4681 'const wchar_t' const
|         |   `-TypedefType 0x229a22a4680 'wchar_t' sugar
|         |     |-Typedef 0x229a22a3f60 'wchar_t'
|         |     `-BuiltinType 0x229a08e6590 'unsigned short'
|         |-PointerType 0x229a243bbd0 'const wchar_t *'
|         | `-QualType 0x229a22a4681 'const wchar_t' const
|         |   `-TypedefType 0x229a22a4680 'wchar_t' sugar
|         |     |-Typedef 0x229a22a3f60 'wchar_t'
|         |     `-BuiltinType 0x229a08e6590 'unsigned short'
|         |-PointerType 0x229a243bbd0 'const wchar_t *'
|         | `-QualType 0x229a22a4681 'const wchar_t' const
|         |   `-TypedefType 0x229a22a4680 'wchar_t' sugar
|         |     |-Typedef 0x229a22a3f60 'wchar_t'
|         |     `-BuiltinType 0x229a08e6590 'unsigned short'
|         |-BuiltinType 0x229a08e65b0 'unsigned int'
|         `-TypedefType 0x229a243bde0 'uintptr_t' sugar
|           |-Typedef 0x229a22a3788 'uintptr_t'
|           `-BuiltinType 0x229a08e65f0 'unsigned long long'
|-FunctionDecl 0x229a2456460 <line:238:9, col:119> col:44 _set_invalid_parameter_handler '_invalid_parameter_handler (_invalid_parameter_handler) __attribute__((cdecl))':'_invalid_parameter_handler (_invalid_parameter_handler)'
| `-ParmVarDecl 0x229a24562f0 <col:84, col:111> col:111 _Handler '_invalid_parameter_handler':'void (*)(const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((cdecl))'
|-FunctionDecl 0x229a2456678 <line:239:9, col:79> col:44 _get_invalid_parameter_handler '_invalid_parameter_handler (void) __attribute__((cdecl))':'_invalid_parameter_handler (void)'
|-FunctionDecl 0x229a2456860 <line:245:9, col:41> col:30 _errno 'int *(void) __attribute__((cdecl))':'int *(void)' extern
|-FunctionDecl 0x229a2456ad0 <line:248:1, col:43> col:17 _set_errno 'errno_t (int) __attribute__((cdecl))':'errno_t (int)'
| `-ParmVarDecl 0x229a2456958 <col:33, col:37> col:37 _Value 'int'
|-FunctionDecl 0x229a2456d80 <line:249:1, col:46> col:17 _get_errno 'errno_t (int *) __attribute__((cdecl))':'errno_t (int *)'
| `-ParmVarDecl 0x229a2456ba8 <col:34, col:40> col:40 _Value 'int *'
|-FunctionDecl 0x229a2456fa0 <line:252:9, col:48> col:33 __doserrno 'unsigned long *(void) __attribute__((cdecl))':'unsigned long *(void)'
|-FunctionDecl 0x229a24571e0 <line:255:1, col:56> col:17 _set_doserrno 'errno_t (unsigned long) __attribute__((cdecl))':'errno_t (unsigned long)'
| `-ParmVarDecl 0x229a2457070 <col:36, col:50> col:50 _Value 'unsigned long'
|-FunctionDecl 0x229a2457430 <line:256:1, col:59> col:17 _get_doserrno 'errno_t (unsigned long *) __attribute__((cdecl))':'errno_t (unsigned long *)'
| `-ParmVarDecl 0x229a24572b8 <col:37, col:53> col:53 _Value 'unsigned long *'
|-FunctionDecl 0x229a2457710 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:259:77> col:59 __sys_errlist 'char **(void) __attribute__((cdecl))':'char **(void)'
| `-DeprecatedAttr 0x229a24577b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x229a2457a70 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:262:72> col:57 __sys_nerr 'int *(void) __attribute__((cdecl))':'int *(void)'
| `-DeprecatedAttr 0x229a2457b10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-VarDecl 0x229a2457c58 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:288:9, col:20> col:20 __argc 'int' extern
|-VarDecl 0x229a2457cf0 <line:289:9, col:24> col:24 __argv 'char **' extern
|-VarDecl 0x229a2485610 <line:290:9, col:27> col:27 __wargv 'wchar_t **' extern
|-VarDecl 0x229a24856a8 <line:306:9, col:24> col:24 _environ 'char **' extern
|-VarDecl 0x229a2485740 <line:307:9, col:27> col:27 _wenviron 'wchar_t **' extern
|-VarDecl 0x229a24858d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:311:68> col:68 _pgmptr 'char *' extern
| `-DeprecatedAttr 0x229a2485938 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_pgmptr instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-VarDecl 0x229a2485b78 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:312:72> col:72 _wpgmptr 'wchar_t *' extern
| `-DeprecatedAttr 0x229a2485be0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_wpgmptr instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x229a2485ea0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:339:1, col:61> col:17 _get_pgmptr 'errno_t (char **) __attribute__((cdecl))':'errno_t (char **)'
| `-ParmVarDecl 0x229a2485d28 <col:47, col:55> col:55 _Value 'char **'
|-FunctionDecl 0x229a24860f0 <line:340:1, col:65> col:17 _get_wpgmptr 'errno_t (wchar_t **) __attribute__((cdecl))':'errno_t (wchar_t **)'
| `-ParmVarDecl 0x229a2485f78 <col:48, col:59> col:59 _Value 'wchar_t **'
|-VarDecl 0x229a24862c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:346:64> col:64 _fmode 'int' extern
| `-DeprecatedAttr 0x229a2486328 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_fmode instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x229a24865b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:353:9, col:50> col:25 _set_fmode 'errno_t (int) __attribute__((cdecl))':'errno_t (int)'
| `-ParmVarDecl 0x229a2486470 <col:41, col:45> col:45 _Mode 'int'
|-FunctionDecl 0x229a2486760 <line:354:9, col:54> col:25 _get_fmode 'errno_t (int *) __attribute__((cdecl))':'errno_t (int *)'
| `-ParmVarDecl 0x229a2486688 <col:42, col:48> col:48 _PMode 'int *'
|-FunctionDecl 0x229a24869b0 <line:376:43> col:43 implicit exit 'void (int) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x229a2486a50 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x229a2486ac0 prev 0x229a24869b0 <col:9, col:62> col:43 exit 'void (int) __attribute__((noreturn))'
| `-ParmVarDecl 0x229a2486838 <col:53, col:57> col:57 _Code 'int'
|-FunctionDecl 0x229a2486c70 <line:378:43> col:43 implicit _exit 'void (int) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x229a2486d10 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x229a2486d80 prev 0x229a2486c70 <col:9, col:63> col:43 _exit 'void (int) __attribute__((noreturn))'
| `-ParmVarDecl 0x229a2486b98 <col:54, col:58> col:58 _Code 'int'
|-FunctionDecl 0x229a2486f08 <line:379:43> col:43 implicit abort 'void (void) __attribute__((noreturn))' extern
|-FunctionDecl 0x229a2486fa8 prev 0x229a2486f08 <col:9, col:53> col:43 abort 'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x229a2487260 <line:382:9, col:99> col:30 _set_abort_behavior 'unsigned int (unsigned int, unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int, unsigned int)'
| |-ParmVarDecl 0x229a2487078 <col:55, col:68> col:68 _Flags 'unsigned int'
| `-ParmVarDecl 0x229a24870f8 <col:81, col:94> col:94 _Mask 'unsigned int'
|-FunctionDecl 0x229a2487458 <line:384:19> col:19 implicit abs 'int (int)' extern
| |-ParmVarDecl 0x229a24874f8 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x229a2487568 <col:19> Implicit
| `-ConstAttr 0x229a24875f0 <col:19> Implicit
|-FunctionDecl 0x229a2487618 prev 0x229a2487458 <col:1, col:34> col:19 abs 'int (int)'
| |-ParmVarDecl 0x229a2487340 <col:28, col:32> col:32 _X 'int'
| |-NoThrowAttr 0x229a2487708 <col:19> Inherited Implicit
| `-ConstAttr 0x229a2487730 <col:19> Inherited Implicit
|-FunctionDecl 0x229a24878b8 <line:385:19> col:19 implicit labs 'long (long)' extern
| |-ParmVarDecl 0x229a2487958 <<invalid sloc>> <invalid sloc> 'long'
| |-NoThrowAttr 0x229a24879c8 <col:19> Implicit
| `-ConstAttr 0x229a2487a20 <col:19> Implicit
|-FunctionDecl 0x229a2487a48 prev 0x229a24878b8 <col:1, col:36> col:19 labs 'long (long)'
| |-ParmVarDecl 0x229a2487770 <col:29, col:34> col:34 _X 'long'
| |-NoThrowAttr 0x229a2487b38 <col:19> Inherited Implicit
| `-ConstAttr 0x229a2487b60 <col:19> Inherited Implicit
|-FunctionDecl 0x229a2487ce8 <line:386:19> col:19 implicit llabs 'long long (long long)' extern
| |-ParmVarDecl 0x229a2487d88 <<invalid sloc>> <invalid sloc> 'long long'
| |-NoThrowAttr 0x229a2487df8 <col:19> Implicit
| `-ConstAttr 0x229a2487e50 <col:19> Implicit
|-FunctionDecl 0x229a2487e78 prev 0x229a2487ce8 <col:1, col:42> col:19 llabs 'long long (long long)'
| |-ParmVarDecl 0x229a2487ba0 <col:30, col:40> col:40 _X 'long long'
| |-NoThrowAttr 0x229a2487f68 <col:19> Inherited Implicit
| `-ConstAttr 0x229a2487f90 <col:19> Inherited Implicit
|-FunctionDecl 0x229a2488098 <line:388:9, col:42> col:28 _abs64 'long long (long long) __attribute__((cdecl))':'long long (long long)'
| `-ParmVarDecl 0x229a2487fd0 <col:35> col:42 'long long'
|-FunctionDecl 0x229a2488398 <line:426:9, col:53> col:24 atexit 'int (void (*)(void) __attribute__((cdecl))) __attribute__((cdecl))':'int (void (*)(void) __attribute__((cdecl)))'
| `-ParmVarDecl 0x229a2488230 <col:31, col:45> col:46 'void (*)(void) __attribute__((cdecl))'
|-FunctionDecl 0x229a24885d0 <line:428:24, col:71> col:40 atof 'double (const char *) __attribute__((cdecl))':'double (const char *)'
| `-ParmVarDecl 0x229a2488470 <col:52, col:64> col:64 _String 'const char *'
|-FunctionDecl 0x229a24888d0 <line:429:24, col:102> col:40 _atof_l 'double (const char *, _locale_t) __attribute__((cdecl))':'double (const char *, _locale_t)'
| |-ParmVarDecl 0x229a24886a8 <col:55, col:67> col:67 _String 'const char *'
| `-ParmVarDecl 0x229a2488720 <col:85, col:95> col:95 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x229a2488af8 <line:430:43, col:86> col:58 atoi 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x229a24889b0 <col:70, col:82> col:82 _Str 'const char *'
|-FunctionDecl 0x229a2488df0 <line:431:24, col:98> col:39 _atoi_l 'int (const char *, _locale_t) __attribute__((cdecl))':'int (const char *, _locale_t)'
| |-ParmVarDecl 0x229a2488bd0 <col:54, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x229a2488c48 <col:81, col:91> col:91 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x229a2489018 <line:432:24, col:67> col:39 atol 'long (const char *) __attribute__((cdecl))':'long (const char *)'
| `-ParmVarDecl 0x229a2488ed0 <col:51, col:63> col:63 _Str 'const char *'
|-FunctionDecl 0x229a2489310 <line:433:24, col:98> col:39 _atol_l 'long (const char *, _locale_t) __attribute__((cdecl))':'long (const char *, _locale_t)'
| |-ParmVarDecl 0x229a24890f0 <col:54, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x229a2489168 <col:81, col:91> col:91 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x229a2483580 <line:434:24, col:71> col:42 atoll 'long long (const char *) __attribute__((cdecl))':'long long (const char *)'
| `-ParmVarDecl 0x229a24893f0 <col:55, col:67> col:67 _Str 'const char *'
|-FunctionDecl 0x229a2483880 <line:435:24, col:102> col:42 _atoll_l 'long long (const char *, _locale_t) __attribute__((cdecl))':'long long (const char *, _locale_t)'
| |-ParmVarDecl 0x229a2483658 <col:58, col:70> col:70 _Str 'const char *'
| `-ParmVarDecl 0x229a24836d0 <col:85, col:95> col:95 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x229a2484170 <line:439:24, line:441:97> line:439:39 bsearch_s 'void *(const void *, const void *, rsize_t, rsize_t, int (*)(void *, const void *, const void *) __attribute__((cdecl)), void *) __attribute__((cdecl))':'void *(const void *, const void *, rsize_t, rsize_t, int (*)(void *, const void *, const void *) __attribute__((cdecl)), void *)'
| |-ParmVarDecl 0x229a2483990 <col:54, col:67> col:67 _Key 'const void *'
| |-ParmVarDecl 0x229a2483a10 <col:124, col:137> col:137 _Base 'const void *'
| |-ParmVarDecl 0x229a2483ab0 <line:440:14, col:22> col:22 _NumOfElements 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x229a2483b28 <col:43, col:51> col:51 _SizeOfElements 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x229a2483e80 <line:441:14, col:29> col:29 _PtFuncCompare 'int (*)(void *, const void *, const void *) __attribute__((cdecl))'
| `-ParmVarDecl 0x229a2483f00 <col:82, col:89> col:89 _Context 'void *'
|-FunctionDecl 0x229a2489988 <line:443:24, line:445:72> line:443:39 bsearch 'void *(const void *, const void *, size_t, size_t, int (*)(const void *, const void *) __attribute__((cdecl))) __attribute__((cdecl))':'void *(const void *, const void *, size_t, size_t, int (*)(const void *, const void *) __attribute__((cdecl)))'
| |-ParmVarDecl 0x229a2484270 <col:52, col:65> col:65 _Key 'const void *'
| |-ParmVarDecl 0x229a24842f0 <col:122, col:135> col:135 _Base 'const void *'
| |-ParmVarDecl 0x229a2484368 <line:444:14, col:21> col:21 _NumOfElements 'size_t':'unsigned long long'
| |-ParmVarDecl 0x229a24843e0 <col:42, col:49> col:49 _SizeOfElements 'size_t':'unsigned long long'
| `-ParmVarDecl 0x229a2489748 <line:445:14, col:29> col:29 _PtFuncCompare 'int (*)(const void *, const void *) __attribute__((cdecl))'
|-FunctionDecl 0x229a248a090 <line:448:9, line:450:96> line:448:22 qsort_s 'void (void *, rsize_t, rsize_t, int (*)(void *, const void *, const void *) __attribute__((cdecl)), void *) __attribute__((cdecl))':'void (void *, rsize_t, rsize_t, int (*)(void *, const void *, const void *) __attribute__((cdecl)), void *)'
| |-ParmVarDecl 0x229a2489a80 <col:85, col:92> col:92 _Base 'void *'
| |-ParmVarDecl 0x229a2489af8 <line:449:14, col:22> col:22 _NumOfElements 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x229a2489b70 <col:43, col:51> col:51 _SizeOfElements 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x229a2489dd8 <line:450:14, col:29> col:29 _PtFuncCompare 'int (*)(void *, const void *, const void *) __attribute__((cdecl))'
| `-ParmVarDecl 0x229a2489e58 <col:82, col:88> col:88 _Context 'void *'
|-FunctionDecl 0x229a24825e8 <line:452:9, line:454:72> line:452:22 qsort 'void (void *, size_t, size_t, int (*)(const void *, const void *) __attribute__((cdecl))) __attribute__((cdecl))':'void (void *, size_t, size_t, int (*)(const void *, const void *) __attribute__((cdecl)))'
| |-ParmVarDecl 0x229a248a188 <col:84, col:91> col:91 _Base 'void *'
| |-ParmVarDecl 0x229a248a200 <line:453:14, col:21> col:21 _NumOfElements 'size_t':'unsigned long long'
| |-ParmVarDecl 0x229a248a278 <col:42, col:49> col:49 _SizeOfElements 'size_t':'unsigned long long'
| `-ParmVarDecl 0x229a248a458 <line:454:14, col:29> col:29 _PtFuncCompare 'int (*)(const void *, const void *) __attribute__((cdecl))'
|-FunctionDecl 0x229a2482828 <line:456:47> col:47 implicit _byteswap_ushort 'unsigned short (unsigned short)' extern
| |-ParmVarDecl 0x229a24828c8 <<invalid sloc>> <invalid sloc> 'unsigned short'
| |-NoThrowAttr 0x229a2482938 <col:47> Implicit
| `-ConstAttr 0x229a2482990 <col:47> Implicit
|-FunctionDecl 0x229a24829b8 prev 0x229a2482828 <col:24, col:90> col:47 _byteswap_ushort 'unsigned short (unsigned short)'
| |-ParmVarDecl 0x229a24826d8 <col:69, col:84> col:84 _Short 'unsigned short'
| |-NoThrowAttr 0x229a2482aa8 <col:47> Inherited Implicit
| `-ConstAttr 0x229a2482ad0 <col:47> Inherited Implicit
|-FunctionDecl 0x229a2482c58 <line:457:47> col:47 implicit _byteswap_ulong 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x229a2482cf8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x229a2482d68 <col:47> Implicit
| `-ConstAttr 0x229a2482dc0 <col:47> Implicit
|-FunctionDecl 0x229a2482de8 prev 0x229a2482c58 <col:24, col:88> col:47 _byteswap_ulong 'unsigned long (unsigned long)'
| |-ParmVarDecl 0x229a2482b10 <col:69, col:83> col:83 _Long 'unsigned long'
| |-NoThrowAttr 0x229a2482ed8 <col:47> Inherited Implicit
| `-ConstAttr 0x229a2482f00 <col:47> Inherited Implicit
|-FunctionDecl 0x229a2483088 <line:458:49> col:49 implicit _byteswap_uint64 'unsigned long long (unsigned long long)' extern
| |-ParmVarDecl 0x229a2483128 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-NoThrowAttr 0x229a2483198 <col:49> Implicit
| `-ConstAttr 0x229a24831f0 <col:49> Implicit
|-FunctionDecl 0x229a2483218 prev 0x229a2483088 <col:24, col:94> col:49 _byteswap_uint64 'unsigned long long (unsigned long long)'
| |-ParmVarDecl 0x229a2482f40 <col:71, col:88> col:88 _Int64 'unsigned long long'
| |-NoThrowAttr 0x229a2483308 <col:49> Inherited Implicit
| `-ConstAttr 0x229a2483330 <col:49> Inherited Implicit
|-FunctionDecl 0x229a248b668 <line:459:24, col:85> col:39 div 'div_t (int, int) __attribute__((cdecl))':'div_t (int, int)'
| |-ParmVarDecl 0x229a2483398 <col:48, col:52> col:52 _Numerator 'int'
| `-ParmVarDecl 0x229a2483418 <col:69, col:73> col:73 _Denominator 'int'
|-FunctionDecl 0x229a248b988 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:462:109> col:74 getenv 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x229a248b840 <col:88, col:101> col:101 _VarName 'const char *'
| `-DeprecatedAttr 0x229a248ba30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _dupenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x229a248bf48 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:464:28, col:177> col:44 getenv_s 'errno_t (size_t *, char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (size_t *, char *, rsize_t, const char *)'
| |-ParmVarDecl 0x229a248bbc8 <col:59, col:68> col:68 _ReturnSize 'size_t *'
| |-ParmVarDecl 0x229a248bc48 <col:110, col:117> col:117 _DstBuf 'char *'
| |-ParmVarDecl 0x229a248bcc0 <col:131, col:139> col:139 _DstSize 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x229a248bd40 <col:156, col:169> col:169 _VarName 'const char *'
|-FunctionDecl 0x229a248c300 <line:472:28, col:212> col:44 _dupenv_s 'errno_t (char **, size_t *, const char *) __attribute__((cdecl))':'errno_t (char **, size_t *, const char *)'
| |-ParmVarDecl 0x229a248c038 <col:127, col:134> col:134 _PBuffer 'char **'
| |-ParmVarDecl 0x229a248c0b0 <col:154, col:163> col:163 _PBufferSizeInBytes 'size_t *'
| `-ParmVarDecl 0x229a248c130 <col:191, col:204> col:204 _VarName 'const char *'
|-FunctionDecl 0x229a24846f8 <line:479:28, col:141> col:44 _itoa_s 'errno_t (int, char *, size_t, int) __attribute__((cdecl))':'errno_t (int, char *, size_t, int)'
| |-ParmVarDecl 0x229a248c3e8 <col:57, col:61> col:61 _Value 'int'
| |-ParmVarDecl 0x229a248c468 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x229a248c4e0 <col:112, col:119> col:119 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x229a248c560 <col:131, col:135> col:135 _Radix 'int'
|-FunctionDecl 0x229a2484b78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:481:79 _itoa 'char *(int, char *, int) __attribute__((cdecl))':'char *(int, char *, int)'
| |-ParmVarDecl 0x229a24848e0 <col:91, col:96> col:96 _Value 'int'
| |-ParmVarDecl 0x229a2484960 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x229a24849e0 <col:146, col:151> col:151 _Radix 'int'
| `-DeprecatedAttr 0x229a2484c30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _itoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x229a24850f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:482:28, col:145> col:44 _i64toa_s 'errno_t (long long, char *, size_t, int) __attribute__((cdecl))':'errno_t (long long, char *, size_t, int)'
| |-ParmVarDecl 0x229a2484d78 <col:59, col:67> col:67 _Val 'long long'
| |-ParmVarDecl 0x229a2484df8 <col:95, col:102> col:102 _DstBuf 'char *'
| |-ParmVarDecl 0x229a2484e70 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x229a2484ef0 <col:135, col:139> col:139 _Radix 'int'
|-FunctionDecl 0x229a248e630 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:483:140> col:59 _i64toa 'char *(long long, char *, int) __attribute__((cdecl))':'char *(long long, char *, int)'
| |-ParmVarDecl 0x229a24852a8 <col:72, col:80> col:80 _Val 'long long'
| |-ParmVarDecl 0x229a2485328 <col:109, col:116> col:116 _DstBuf 'char *'
| |-ParmVarDecl 0x229a24853a8 <col:130, col:134> col:134 _Radix 'int'
| `-DeprecatedAttr 0x229a248e6e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _i64toa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x229a248eba8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:484:28, col:155> col:44 _ui64toa_s 'errno_t (unsigned long long, char *, size_t, int) __attribute__((cdecl))':'errno_t (unsigned long long, char *, size_t, int)'
| |-ParmVarDecl 0x229a248e830 <col:60, col:77> col:77 _Val 'unsigned long long'
| |-ParmVarDecl 0x229a248e8b0 <col:105, col:112> col:112 _DstBuf 'char *'
| |-ParmVarDecl 0x229a248e928 <col:126, col:133> col:133 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x229a248e9a8 <col:145, col:149> col:149 _Radix 'int'
|-FunctionDecl 0x229a248eff8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:485:151> col:60 _ui64toa 'char *(unsigned long long, char *, int) __attribute__((cdecl))':'char *(unsigned long long, char *, int)'
| |-ParmVarDecl 0x229a248ed58 <col:74, col:91> col:91 _Val 'unsigned long long'
| |-ParmVarDecl 0x229a248edd8 <col:120, col:127> col:127 _DstBuf 'char *'
| |-ParmVarDecl 0x229a248ee58 <col:141, col:145> col:145 _Radix 'int'
| `-DeprecatedAttr 0x229a248f0b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ui64toa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x229a248f2d8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:486:24, col:75> col:40 _atoi64 'long long (const char *) __attribute__((cdecl))':'long long (const char *)'
| `-ParmVarDecl 0x229a248f1f8 <col:55, col:68> col:68 _String 'const char *'
|-FunctionDecl 0x229a248f528 <line:487:24, col:105> col:40 _atoi64_l 'long long (const char *, _locale_t) __attribute__((cdecl))':'long long (const char *, _locale_t)'
| |-ParmVarDecl 0x229a248f3b0 <col:57, col:70> col:70 _String 'const char *'
| `-ParmVarDecl 0x229a248f428 <col:88, col:98> col:98 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x229a2492908 <line:488:24, col:136> col:40 _strtoi64 'long long (const char *, char **, int) __attribute__((cdecl))':'long long (const char *, char **, int)'
| |-ParmVarDecl 0x229a2492670 <col:57, col:70> col:70 _String 'const char *'
| |-ParmVarDecl 0x229a24926f0 <col:104, col:112> col:112 _EndPtr 'char **'
| `-ParmVarDecl 0x229a2492770 <col:126, col:130> col:130 _Radix 'int'
|-FunctionDecl 0x229a2492d70 <line:489:24, col:166> col:40 _strtoi64_l 'long long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'long long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x229a24929f0 <col:59, col:72> col:72 _String 'const char *'
| |-ParmVarDecl 0x229a2492a70 <col:106, col:114> col:114 _EndPtr 'char **'
| |-ParmVarDecl 0x229a2492af0 <col:128, col:132> col:132 _Radix 'int'
| `-ParmVarDecl 0x229a2492b68 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x229a24930f8 <line:490:24, col:146> col:49 _strtoui64 'unsigned long long (const char *, char **, int) __attribute__((cdecl))':'unsigned long long (const char *, char **, int)'
| |-ParmVarDecl 0x229a2492e60 <col:67, col:80> col:80 _String 'const char *'
| |-ParmVarDecl 0x229a2492ee0 <col:114, col:122> col:122 _EndPtr 'char **'
| `-ParmVarDecl 0x229a2492f60 <col:136, col:140> col:140 _Radix 'int'
|-FunctionDecl 0x229a2493560 <line:491:24, col:177> col:49 _strtoui64_l 'unsigned long long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'unsigned long long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x229a24931e0 <col:69, col:82> col:82 _String 'const char *'
| |-ParmVarDecl 0x229a2493260 <col:116, col:124> col:124 _EndPtr 'char **'
| |-ParmVarDecl 0x229a24932e0 <col:138, col:143> col:143 _Radix 'int'
| `-ParmVarDecl 0x229a2493358 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x229a248d858 <line:492:24, col:88> col:39 ldiv 'ldiv_t (long, long) __attribute__((cdecl))':'ldiv_t (long, long)'
| |-ParmVarDecl 0x229a248d638 <col:49, col:54> col:54 _Numerator 'long'
| `-ParmVarDecl 0x229a248d6b8 <col:71, col:76> col:76 _Denominator 'long'
|-FunctionDecl 0x229a248db78 <line:493:24, col:100> col:40 lldiv 'lldiv_t (long long, long long) __attribute__((cdecl))':'lldiv_t (long long, long long)'
| |-ParmVarDecl 0x229a248d958 <col:51, col:61> col:61 _Numerator 'long long'
| `-ParmVarDecl 0x229a248d9d8 <col:78, col:88> col:88 _Denominator 'long long'
|-FunctionDecl 0x229a248dfd8 <line:515:28, col:140> col:44 _ltoa_s 'errno_t (long, char *, size_t, int) __attribute__((cdecl))':'errno_t (long, char *, size_t, int)'
| |-ParmVarDecl 0x229a248dc58 <col:57, col:62> col:62 _Val 'long'
| |-ParmVarDecl 0x229a248dcd8 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x229a248dd50 <col:111, col:118> col:118 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x229a248ddd0 <col:130, col:134> col:134 _Radix 'int'
|-FunctionDecl 0x229a248e428 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:517:79 _ltoa 'char *(long, char *, int) __attribute__((cdecl))':'char *(long, char *, int)'
| |-ParmVarDecl 0x229a248e188 <col:91, col:97> col:97 _Value 'long'
| |-ParmVarDecl 0x229a248e208 <col:129, col:135> col:135 _Dest 'char *'
| |-ParmVarDecl 0x229a248e288 <col:147, col:152> col:152 _Radix 'int'
| `-DeprecatedAttr 0x229a248e4e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ltoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x229a2490890 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:518:24, col:128> col:39 mblen 'int (const char *, size_t) __attribute__((cdecl))':'int (const char *, size_t)'
| |-ParmVarDecl 0x229a2490668 <col:89, col:102> col:102 _Ch 'const char *'
| `-ParmVarDecl 0x229a24906e0 <col:112, col:119> col:119 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x229a2490c38 <line:519:24, col:159> col:39 _mblen_l 'int (const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x229a2490970 <col:92, col:105> col:105 _Ch 'const char *'
| |-ParmVarDecl 0x229a24909e8 <col:115, col:122> col:122 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x229a2490a60 <col:142, col:152> col:152 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x229a2490e90 <line:520:24, col:73> col:39 _mbstrlen 'size_t (const char *) __attribute__((cdecl))':'size_t (const char *)'
| `-ParmVarDecl 0x229a2490d20 <col:56, col:69> col:69 _Str 'const char *'
|-FunctionDecl 0x229a2491188 <line:521:24, col:102> col:39 _mbstrlen_l 'size_t (const char *, _locale_t) __attribute__((cdecl))':'size_t (const char *, _locale_t)'
| |-ParmVarDecl 0x229a2490f68 <col:58, col:70> col:70 _Str 'const char *'
| `-ParmVarDecl 0x229a2490fe0 <col:85, col:95> col:95 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x229a2491488 <line:522:24, col:96> col:39 _mbstrnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x229a2491268 <col:57, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x229a24912e0 <col:80, col:87> col:87 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x229a2493860 <line:523:24, col:126> col:39 _mbstrnlen_l 'size_t (const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x229a2491568 <col:59, col:71> col:71 _Str 'const char *'
| |-ParmVarDecl 0x229a24915e0 <col:82, col:89> col:89 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x229a2493690 <col:109, col:119> col:119 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x229a2493c18 <line:524:9, col:170> col:24 mbtowc 'int (wchar_t *, const char *, size_t) __attribute__((cdecl))':'int (wchar_t *, const char *, size_t)'
| |-ParmVarDecl 0x229a2493940 <col:54, col:64> col:64 _DstCh 'wchar_t *'
| |-ParmVarDecl 0x229a24939c0 <col:122, col:135> col:135 _SrcCh 'const char *'
| `-ParmVarDecl 0x229a2493a38 <col:148, col:155> col:155 _SrcSizeInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x229a2494070 <line:525:9, col:201> col:24 _mbtowc_l 'int (wchar_t *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (wchar_t *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x229a2493cf8 <col:57, col:67> col:67 _DstCh 'wchar_t *'
| |-ParmVarDecl 0x229a2493d78 <col:125, col:138> col:138 _SrcCh 'const char *'
| |-ParmVarDecl 0x229a2493df0 <col:151, col:158> col:158 _SrcSizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x229a2493e68 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x229a2494570 <line:526:28, col:271> col:44 mbstowcs_s 'errno_t (size_t *, wchar_t *, size_t, const char *, size_t) __attribute__((cdecl))':'errno_t (size_t *, wchar_t *, size_t, const char *, size_t)'
| |-ParmVarDecl 0x229a2494158 <col:65, col:74> col:74 _PtNumOfCharConverted 'size_t *'
| |-ParmVarDecl 0x229a24941d0 <col:155, col:165> col:165 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x229a2494248 <col:179, col:186> col:186 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x229a24942c8 <col:227, col:240> col:240 _SrcBuf 'const char *'
| `-ParmVarDecl 0x229a2494340 <col:254, col:261> col:261 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x229a248c9b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2007:144> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:528:56 mbstowcs 'size_t (wchar_t *, const char *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const char *, size_t)'
| |-ParmVarDecl 0x229a248c6e0 <col:97, col:106> col:106 _Dest 'wchar_t *'
| |-ParmVarDecl 0x229a248c760 <col:120, col:134> col:134 _Source 'const char *'
| |-ParmVarDecl 0x229a248c7d8 <col:148, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x229a248ca68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using mbstowcs_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x229a248d068 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:530:28, col:301> col:44 _mbstowcs_s_l 'errno_t (size_t *, wchar_t *, size_t, const char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (size_t *, wchar_t *, size_t, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x229a248cba8 <col:68, col:77> col:77 _PtNumOfCharConverted 'size_t *'
| |-ParmVarDecl 0x229a248cc20 <col:158, col:168> col:168 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x229a248cc98 <col:182, col:189> col:189 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x229a248cd18 <col:230, col:243> col:243 _SrcBuf 'const char *'
| |-ParmVarDecl 0x229a248cd90 <col:257, col:264> col:264 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x229a248ce08 <col:284, col:294> col:294 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x229a2494690 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2010:160> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:532:59 _mbstowcs_l 'size_t (wchar_t *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x229a248d258 <col:149, col:158> col:158 _Dest 'wchar_t *'
| |-ParmVarDecl 0x229a248d2d8 <col:172, col:186> col:186 _Source 'const char *'
| |-ParmVarDecl 0x229a248d350 <col:200, col:208> col:208 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x229a248d3c8 <col:228, col:239> col:239 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x229a2494750 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _mbstowcs_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x229a2494950 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:534:24, col:48> col:39 rand 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x229a2494b00 <line:539:28, col:73> col:43 _set_error_mode 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x229a2494a20 <col:64, col:68> col:68 _Mode 'int'
|-FunctionDecl 0x229a2494d20 <line:541:9, col:53> col:24 srand 'void (unsigned int) __attribute__((cdecl))':'void (unsigned int)'
| `-ParmVarDecl 0x229a2494bd8 <col:35, col:48> col:48 _Seed 'unsigned int'
|-FunctionDecl 0x229a2494fe0 <line:542:39> col:39 implicit strtod 'double (const char *, char **)' extern
| |-ParmVarDecl 0x229a2495080 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x229a24950e8 <<invalid sloc>> <invalid sloc> 'char **'
|-FunctionDecl 0x229a2495160 prev 0x229a2494fe0 <col:24, col:112> col:39 strtod 'double (const char *, char **)'
| |-ParmVarDecl 0x229a2494df8 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x229a2494e78 <col:97, col:105> col:105 _EndPtr 'char **'
|-FunctionDecl 0x229a2495518 <line:543:24, col:143> col:39 _strtod_l 'double (const char *, char **, _locale_t) __attribute__((cdecl))':'double (const char *, char **, _locale_t)'
| |-ParmVarDecl 0x229a2495240 <col:56, col:69> col:69 _Str 'const char *'
| |-ParmVarDecl 0x229a24952c0 <col:100, col:108> col:108 _EndPtr 'char **'
| `-ParmVarDecl 0x229a2495338 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x229a24958b8 <line:544:39> col:39 implicit strtol 'long (const char *, char **, int)' extern
| |-ParmVarDecl 0x229a2495958 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x229a24959c0 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x229a2495a28 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x229a2495aa8 prev 0x229a24958b8 <col:24, col:130> col:39 strtol 'long (const char *, char **, int)'
| |-ParmVarDecl 0x229a2495600 <col:53, col:66> col:66 _Str 'const char *'
| |-ParmVarDecl 0x229a24956a0 <col:97, col:105> col:105 _EndPtr 'char **'
| `-ParmVarDecl 0x229a2495720 <col:119, col:123> col:123 _Radix 'int'
|-FunctionDecl 0x229a2495f10 <line:545:24, col:158> col:39 _strtol_l 'long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x229a2495b90 <col:56, col:68> col:68 _Str 'const char *'
| |-ParmVarDecl 0x229a2495c10 <col:99, col:106> col:106 _EndPtr 'char **'
| |-ParmVarDecl 0x229a2495c90 <col:120, col:124> col:124 _Radix 'int'
| `-ParmVarDecl 0x229a2495d08 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x229a2496220 <line:546:43> col:43 implicit strtoll 'long long (const char *, char **, int)' extern
| |-ParmVarDecl 0x229a24962c0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x229a2496328 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x229a2496390 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x229a2496410 prev 0x229a2496220 <col:24, col:135> col:43 strtoll 'long long (const char *, char **, int)'
| |-ParmVarDecl 0x229a2496000 <col:58, col:71> col:71 _Str 'const char *'
| |-ParmVarDecl 0x229a2496080 <col:102, col:110> col:110 _EndPtr 'char **'
| `-ParmVarDecl 0x229a2496100 <col:124, col:128> col:128 _Radix 'int'
|-FunctionDecl 0x229a24967f0 <line:547:24, col:166> col:43 _strtoll_l 'long long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'long long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x229a24964f8 <col:61, col:74> col:74 _Str 'const char *'
| |-ParmVarDecl 0x229a2496578 <col:105, col:113> col:113 _EndPtr 'char **'
| |-ParmVarDecl 0x229a24965f8 <col:127, col:131> col:131 _Radix 'int'
| `-ParmVarDecl 0x229a24966b0 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x229a2496b78 <line:548:46> col:46 implicit strtoul 'unsigned long (const char *, char **, int)' extern
| |-ParmVarDecl 0x229a2496c18 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x229a2496c80 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x229a2496ce8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x229a2496d68 prev 0x229a2496b78 <col:24, col:137> col:46 strtoul 'unsigned long (const char *, char **, int)'
| |-ParmVarDecl 0x229a24968e0 <col:61, col:74> col:74 _Str 'const char *'
| |-ParmVarDecl 0x229a2496960 <col:105, col:113> col:113 _EndPtr 'char **'
| `-ParmVarDecl 0x229a24969e0 <col:127, col:131> col:131 _Radix 'int'
|-FunctionDecl 0x229a24971d0 <line:549:24, col:160> col:46 _strtoul_l 'unsigned long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'unsigned long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x229a2496e50 <col:57, col:70> col:70 _Str 'const char *'
| |-ParmVarDecl 0x229a2496ed0 <col:101, col:108> col:108 _EndPtr 'char **'
| |-ParmVarDecl 0x229a2496f50 <col:122, col:126> col:126 _Radix 'int'
| `-ParmVarDecl 0x229a2496fc8 <col:143, col:153> col:153 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x229a24974e0 <line:550:51> col:51 implicit strtoull 'unsigned long long (const char *, char **, int)' extern
| |-ParmVarDecl 0x229a2497580 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x229a24975e8 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x229a248f640 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x229a248f6c0 prev 0x229a24974e0 <col:24, col:143> col:51 strtoull 'unsigned long long (const char *, char **, int)'
| |-ParmVarDecl 0x229a24972c0 <col:67, col:80> col:80 _Str 'const char *'
| |-ParmVarDecl 0x229a2497340 <col:111, col:119> col:119 _EndPtr 'char **'
| `-ParmVarDecl 0x229a24973c0 <col:133, col:137> col:137 _Radix 'int'
|-FunctionDecl 0x229a248fa60 <line:551:24, col:174> col:51 _strtoull_l 'unsigned long long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'unsigned long long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x229a248f7a8 <col:70, col:83> col:83 _Str 'const char *'
| |-ParmVarDecl 0x229a248f828 <col:114, col:122> col:122 _EndPtr 'char **'
| |-ParmVarDecl 0x229a248f8a8 <col:136, col:140> col:140 _Radix 'int'
| `-ParmVarDecl 0x229a248f920 <col:157, col:167> col:167 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x229a248fd40 <line:552:44> col:44 implicit strtold 'long double (const char *, char **)' extern
| |-ParmVarDecl 0x229a248fde0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x229a248fe48 <<invalid sloc>> <invalid sloc> 'char **'
|-FunctionDecl 0x229a248fec0 prev 0x229a248fd40 <col:24, col:118> col:44 strtold 'long double (const char *, char **)'
| |-ParmVarDecl 0x229a248fb50 <col:59, col:72> col:72 _Str 'const char *'
| `-ParmVarDecl 0x229a248fbd0 <col:103, col:111> col:111 _EndPtr 'char **'
|-FunctionDecl 0x229a2490278 <line:553:24, col:149> col:44 _strtold_l 'long double (const char *, char **, _locale_t) __attribute__((cdecl))':'long double (const char *, char **, _locale_t)'
| |-ParmVarDecl 0x229a248ffa0 <col:62, col:75> col:75 _Str 'const char *'
| |-ParmVarDecl 0x229a2490020 <col:106, col:114> col:114 _EndPtr 'char **'
| `-ParmVarDecl 0x229a2490098 <col:132, col:142> col:142 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x229a2490550 <line:554:38> col:38 implicit strtof 'float (const char *, char **)' extern
| |-ParmVarDecl 0x229a24976c0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x229a2497728 <<invalid sloc>> <invalid sloc> 'char **'
|-FunctionDecl 0x229a24977a0 prev 0x229a2490550 <col:24, col:111> col:38 strtof 'float (const char *, char **)'
| |-ParmVarDecl 0x229a2490360 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x229a24903e0 <col:96, col:104> col:104 _EndPtr 'char **'
|-FunctionDecl 0x229a2497b58 <line:555:24, col:142> col:38 _strtof_l 'float (const char *, char **, _locale_t) __attribute__((cdecl))':'float (const char *, char **, _locale_t)'
| |-ParmVarDecl 0x229a2497880 <col:55, col:68> col:68 _Str 'const char *'
| |-ParmVarDecl 0x229a2497900 <col:99, col:107> col:107 _EndPtr 'char **'
| `-ParmVarDecl 0x229a2497978 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x229a2497d20 <line:560:9, col:60> col:21 system 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x229a2497c40 <col:39, col:52> col:52 _Command 'const char *'
|-FunctionDecl 0x229a2498178 <line:564:28, col:150> col:44 _ultoa_s 'errno_t (unsigned long, char *, size_t, int) __attribute__((cdecl))':'errno_t (unsigned long, char *, size_t, int)'
| |-ParmVarDecl 0x229a2497df8 <col:58, col:72> col:72 _Val 'unsigned long'
| |-ParmVarDecl 0x229a2497e78 <col:100, col:107> col:107 _DstBuf 'char *'
| |-ParmVarDecl 0x229a2497ef0 <col:121, col:128> col:128 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x229a2497f70 <col:140, col:144> col:144 _Radix 'int'
|-FunctionDecl 0x229a24985c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:566:79 _ultoa 'char *(unsigned long, char *, int) __attribute__((cdecl))':'char *(unsigned long, char *, int)'
| |-ParmVarDecl 0x229a2498328 <col:92, col:107> col:107 _Value 'unsigned long'
| |-ParmVarDecl 0x229a24983a8 <col:139, col:145> col:145 _Dest 'char *'
| |-ParmVarDecl 0x229a2498428 <col:157, col:162> col:162 _Radix 'int'
| `-DeprecatedAttr 0x229a24986d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ultoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x229a2498b00 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:567:127> col:58 wctomb 'int (char *, wchar_t) __attribute__((cdecl))':'int (char *, wchar_t)'
| |-ParmVarDecl 0x229a24988d8 <col:96, col:103> col:103 _MbCh 'char *'
| |-ParmVarDecl 0x229a2498950 <col:115, col:123> col:123 _WCh 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x229a2498bb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wctomb_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x229a2499088 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:568:155> col:61 _wctomb_l 'int (char *, wchar_t, _locale_t) __attribute__((cdecl))':'int (char *, wchar_t, _locale_t)'
| |-ParmVarDecl 0x229a2498db8 <col:96, col:103> col:103 _MbCh 'char *'
| |-ParmVarDecl 0x229a2498e30 <col:115, col:123> col:123 _WCh 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x229a2498ea8 <col:138, col:148> col:148 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x229a2499140 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wctomb_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x229a24995f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:570:28, col:200> col:44 wctomb_s 'errno_t (int *, char *, rsize_t, wchar_t) __attribute__((cdecl))':'errno_t (int *, char *, rsize_t, wchar_t)'
| |-ParmVarDecl 0x229a2499288 <col:63, col:69> col:69 _SizeConverted 'int *'
| |-ParmVarDecl 0x229a2499308 <col:142, col:149> col:149 _MbCh 'char *'
| |-ParmVarDecl 0x229a2499380 <col:161, col:169> col:169 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x229a24993f8 <col:188, col:196> col:196 _WCh 'wchar_t':'unsigned short'
|-FunctionDecl 0x229a249eb60 <line:572:28, col:206> col:44 _wctomb_s_l 'errno_t (int *, char *, size_t, wchar_t, _locale_t) __attribute__((cdecl))':'errno_t (int *, char *, size_t, wchar_t, _locale_t)'
| |-ParmVarDecl 0x229a249e748 <col:66, col:72> col:72 _SizeConverted 'int *'
| |-ParmVarDecl 0x229a249e7c8 <col:121, col:128> col:128 _MbCh 'char *'
| |-ParmVarDecl 0x229a249e840 <col:140, col:147> col:147 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x229a249e8b8 <col:166, col:174> col:174 _WCh 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x229a249e930 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x229a249f070 <line:573:28, col:263> col:44 wcstombs_s 'errno_t (size_t *, char *, size_t, const wchar_t *, size_t) __attribute__((cdecl))':'errno_t (size_t *, char *, size_t, const wchar_t *, size_t)'
| |-ParmVarDecl 0x229a249ec50 <col:65, col:74> col:74 _PtNumOfCharConverted 'size_t *'
| |-ParmVarDecl 0x229a249ecd0 <col:164, col:171> col:171 _Dst 'char *'
| |-ParmVarDecl 0x229a249ed48 <col:182, col:189> col:189 _DstSizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x229a249edc0 <col:213, col:229> col:229 _Src 'const wchar_t *'
| `-ParmVarDecl 0x229a249ee38 <col:240, col:247> col:247 _MaxCountInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x229a249f4f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2007:144> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:575:56 wcstombs 'size_t (char *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (char *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x229a249f228 <col:97, col:103> col:103 _Dest 'char *'
| |-ParmVarDecl 0x229a249f2a0 <col:117, col:134> col:134 _Source 'const wchar_t *'
| |-ParmVarDecl 0x229a249f318 <col:148, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x229a249f5a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstombs_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x229a249bbc8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:576:28, col:294> col:44 _wcstombs_s_l 'errno_t (size_t *, char *, size_t, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (size_t *, char *, size_t, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x229a249b700 <col:68, col:77> col:77 _PtNumOfCharConverted 'size_t *'
| |-ParmVarDecl 0x229a249b780 <col:167, col:174> col:174 _Dst 'char *'
| |-ParmVarDecl 0x229a249b7f8 <col:185, col:192> col:192 _DstSizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x229a249b870 <col:216, col:232> col:232 _Src 'const wchar_t *'
| |-ParmVarDecl 0x229a249b8e8 <col:243, col:250> col:250 _MaxCountInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x229a249b960 <col:277, col:287> col:287 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x229a249c0f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2010:160> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:578:59 _wcstombs_l 'size_t (char *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x229a249bd88 <col:146, col:152> col:152 _Dest 'char *'
| |-ParmVarDecl 0x229a249be00 <col:166, col:183> col:183 _Source 'const wchar_t *'
| |-ParmVarDecl 0x229a249be78 <col:197, col:205> col:205 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x229a249bef0 <col:225, col:236> col:236 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x229a249c1b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcstombs_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x229a249c520 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:640:142> col:142 implicit calloc 'void *(unsigned long long, unsigned long long)' extern
| |-ParmVarDecl 0x229a249c5c0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x229a249c628 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x229a249c710 prev 0x229a249c520 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:640:224> col:142 calloc 'void *(unsigned long long, unsigned long long)'
| |-ParmVarDecl 0x229a249c2f8 <col:173, col:180> col:180 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x229a249c370 <col:212, col:219> col:219 _Size 'size_t':'unsigned long long'
| |-NoAliasAttr 0x229a249c7c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x229a249c818 <line:615:33> restrict
|-FunctionDecl 0x229a249c9b0 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:641:182> col:132 free 'void (void *) __attribute__((cdecl))':'void (void *)'
| |-ParmVarDecl 0x229a249c870 <col:168, col:175> col:175 _Memory 'void *'
| `-NoAliasAttr 0x229a249ca58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
|-FunctionDecl 0x229a249cc58 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:642:161> col:161 implicit malloc 'void *(unsigned long long)' extern
| `-ParmVarDecl 0x229a249ccf8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x229a249cd68 prev 0x229a249cc58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:642:204> col:161 malloc 'void *(unsigned long long)'
| |-ParmVarDecl 0x229a249cad8 <col:192, col:199> col:199 _Size 'size_t':'unsigned long long'
| |-NoAliasAttr 0x229a249ce10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x229a249ce68 <line:615:33> restrict
|-FunctionDecl 0x229a249d0e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:644:142> col:142 implicit realloc 'void *(void *, unsigned long long)' extern
| |-ParmVarDecl 0x229a249d180 <<invalid sloc>> <invalid sloc> 'void *'
| `-ParmVarDecl 0x229a249d1e8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x229a249d260 prev 0x229a249d0e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:644:236> col:142 realloc 'void *(void *, unsigned long long)'
| |-ParmVarDecl 0x229a249cec0 <col:181, col:188> col:188 _Memory 'void *'
| |-ParmVarDecl 0x229a249cf38 <col:221, col:228> col:228 _NewSize 'size_t':'unsigned long long'
| |-NoAliasAttr 0x229a249d310 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x229a249d368 <line:615:33> restrict
|-FunctionDecl 0x229a24996e0 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:646:274> col:142 _recalloc 'void *(void *, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t)'
| |-ParmVarDecl 0x229a249d3c0 <col:183, col:190> col:190 _Memory 'void *'
| |-ParmVarDecl 0x229a249d438 <col:223, col:230> col:230 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x229a249d4b0 <col:262, col:269> col:269 _Size 'size_t':'unsigned long long'
| |-NoAliasAttr 0x229a2499798 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x229a24997f0 <line:615:33> restrict
|-FunctionDecl 0x229a2499920 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:647:191> col:132 _aligned_free 'void (void *) __attribute__((cdecl))':'void (void *)'
| |-ParmVarDecl 0x229a2499848 <col:177, col:184> col:184 _Memory 'void *'
| `-NoAliasAttr 0x229a24999c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
|-FunctionDecl 0x229a2499bc0 <col:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:648:218> col:142 _aligned_malloc 'void *(size_t, size_t) __attribute__((cdecl))':'void *(size_t, size_t)'
| |-ParmVarDecl 0x229a2499a48 <col:182, col:189> col:189 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x229a2499ac0 <col:201, col:208> col:208 _Alignment 'size_t':'unsigned long long'
| |-NoAliasAttr 0x229a2499c70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x229a2499cc8 <line:615:33> restrict
|-FunctionDecl 0x229a2499fe8 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:649:246> col:142 _aligned_offset_malloc 'void *(size_t, size_t, size_t) __attribute__((cdecl))':'void *(size_t, size_t, size_t)'
| |-ParmVarDecl 0x229a2499d18 <col:189, col:196> col:196 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x229a2499d90 <col:208, col:215> col:215 _Alignment 'size_t':'unsigned long long'
| |-ParmVarDecl 0x229a2499e08 <col:232, col:239> col:239 _Offset 'size_t':'unsigned long long'
| |-NoAliasAttr 0x229a249a0a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x229a249a0f8 <line:615:33> restrict
|-FunctionDecl 0x229a249a360 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:651:272> col:145 _aligned_realloc 'void *(void *, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t)'
| |-ParmVarDecl 0x229a249a150 <col:193, col:200> col:200 _Memory 'void *'
| |-ParmVarDecl 0x229a249a1c8 <col:233, col:240> col:240 _NewSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x229a249a240 <col:255, col:262> col:262 _Alignment 'size_t':'unsigned long long'
| |-NoAliasAttr 0x229a249a418 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x229a249a470 <line:615:33> restrict
|-FunctionDecl 0x229a249a850 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:653:306> col:142 _aligned_recalloc 'void *(void *, size_t, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t, size_t)'
| |-ParmVarDecl 0x229a249a4c8 <col:191, col:198> col:198 _Memory 'void *'
| |-ParmVarDecl 0x229a249a540 <col:231, col:238> col:238 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x229a249a5b8 <col:270, col:277> col:277 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x229a249a630 <col:289, col:296> col:296 _Alignment 'size_t':'unsigned long long'
| |-NoAliasAttr 0x229a249a910 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x229a249a968 <line:615:33> restrict
|-FunctionDecl 0x229a249ac68 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:655:300> col:145 _aligned_offset_realloc 'void *(void *, size_t, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t, size_t)'
| |-ParmVarDecl 0x229a249a9c0 <col:200, col:207> col:207 _Memory 'void *'
| |-ParmVarDecl 0x229a249aa38 <col:240, col:247> col:247 _NewSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x229a249aab0 <col:262, col:269> col:269 _Alignment 'size_t':'unsigned long long'
| |-ParmVarDecl 0x229a249ab28 <col:286, col:293> col:293 _Offset 'size_t':'unsigned long long'
| |-NoAliasAttr 0x229a249ad28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x229a249ad80 <line:615:33> restrict
|-FunctionDecl 0x229a249b1f8 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:657:334> col:142 _aligned_offset_recalloc 'void *(void *, size_t, size_t, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t, size_t, size_t)'
| |-ParmVarDecl 0x229a249add8 <col:198, col:205> col:205 _Memory 'void *'
| |-ParmVarDecl 0x229a249ae50 <col:238, col:245> col:245 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x229a249aec8 <col:277, col:284> col:284 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x229a249af40 <col:296, col:303> col:303 _Alignment 'size_t':'unsigned long long'
| |-ParmVarDecl 0x229a249afb8 <col:320, col:327> col:327 _Offset 'size_t':'unsigned long long'
| |-NoAliasAttr 0x229a249b2c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x229a249b318 <line:615:33> restrict
|-FunctionDecl 0x229a249b630 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:658:73, col:176> col:88 _aligned_msize 'size_t (void *, size_t, size_t) __attribute__((cdecl))':'size_t (void *, size_t, size_t)'
| |-ParmVarDecl 0x229a249b370 <col:117, col:124> col:124 _Memory 'void *'
| |-ParmVarDecl 0x229a249b3e8 <col:138, col:145> col:145 _Alignment 'size_t':'unsigned long long'
| `-ParmVarDecl 0x229a249b460 <col:162, col:169> col:169 _Offset 'size_t':'unsigned long long'
|-FunctionDecl 0x229a24a0af8 <line:685:28, col:157> col:44 _itow_s 'errno_t (int, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (int, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x229a24a0780 <col:58, col:62> col:62 _Val 'int'
| |-ParmVarDecl 0x229a24a07f8 <col:97, col:107> col:107 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x229a24a0870 <col:121, col:128> col:128 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x229a24a08f0 <col:147, col:151> col:151 _Radix 'int'
|-FunctionDecl 0x229a24a0f70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:687:82 _itow 'wchar_t *(int, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(int, wchar_t *, int)'
| |-ParmVarDecl 0x229a24a0ca8 <col:94, col:99> col:99 _Value 'int'
| |-ParmVarDecl 0x229a24a0d20 <col:131, col:140> col:140 _Dest 'wchar_t *'
| |-ParmVarDecl 0x229a24a0da0 <col:152, col:157> col:157 _Radix 'int'
| `-DeprecatedAttr 0x229a24a1028 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _itow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x229a24a14e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:688:28, col:158> col:44 _ltow_s 'errno_t (long, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (long, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x229a24a1170 <col:58, col:63> col:63 _Val 'long'
| |-ParmVarDecl 0x229a24a11e8 <col:98, col:108> col:108 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x229a24a1260 <col:122, col:129> col:129 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x229a24a12e0 <col:148, col:152> col:152 _Radix 'int'
|-FunctionDecl 0x229a249d970 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:690:82 _ltow 'wchar_t *(long, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(long, wchar_t *, int)'
| |-ParmVarDecl 0x229a24a1698 <col:94, col:100> col:100 _Value 'long'
| |-ParmVarDecl 0x229a249d720 <col:132, col:141> col:141 _Dest 'wchar_t *'
| |-ParmVarDecl 0x229a249d7a0 <col:153, col:158> col:158 _Radix 'int'
| `-DeprecatedAttr 0x229a249da28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ltow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x229a249dee8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:691:28, col:168> col:44 _ultow_s 'errno_t (unsigned long, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (unsigned long, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x229a249db70 <col:59, col:73> col:73 _Val 'unsigned long'
| |-ParmVarDecl 0x229a249dbe8 <col:108, col:118> col:118 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x229a249dc60 <col:132, col:139> col:139 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x229a249dce0 <col:158, col:162> col:162 _Radix 'int'
|-FunctionDecl 0x229a249e360 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:693:82 _ultow 'wchar_t *(unsigned long, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(unsigned long, wchar_t *, int)'
| |-ParmVarDecl 0x229a249e098 <col:95, col:110> col:110 _Value 'unsigned long'
| |-ParmVarDecl 0x229a249e110 <col:142, col:151> col:151 _Dest 'wchar_t *'
| |-ParmVarDecl 0x229a249e190 <col:163, col:168> col:168 _Radix 'int'
| `-DeprecatedAttr 0x229a249e418 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ultow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x229a24a25f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:694:24, col:118> col:39 wcstod 'double (const wchar_t *, wchar_t **) __attribute__((cdecl))':'double (const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x229a249e558 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x229a249e5d8 <col:100, col:111> col:111 _EndPtr 'wchar_t **'
|-FunctionDecl 0x229a24a2998 <line:695:24, col:148> col:39 _wcstod_l 'double (const wchar_t *, wchar_t **, _locale_t) __attribute__((cdecl))':'double (const wchar_t *, wchar_t **, _locale_t)'
| |-ParmVarDecl 0x229a24a26c8 <col:56, col:71> col:71 _Str 'const wchar_t *'
| |-ParmVarDecl 0x229a24a2748 <col:102, col:113> col:113 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x229a24a27c0 <col:131, col:141> col:141 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x229a24a2d58 <line:696:24, col:129> col:39 wcstol 'long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x229a24a2a78 <col:53, col:68> col:68 _Str 'const wchar_t *'
| |-ParmVarDecl 0x229a24a2af8 <col:99, col:110> col:110 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x229a24a2b78 <col:119, col:123> col:123 _Radix 'int'
|-FunctionDecl 0x229a24a31c0 <line:697:24, col:159> col:39 _wcstol_l 'long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x229a24a2e38 <col:56, col:71> col:71 _Str 'const wchar_t *'
| |-ParmVarDecl 0x229a24a2eb8 <col:102, col:112> col:112 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x229a24a2f38 <col:121, col:125> col:125 _Radix 'int'
| `-ParmVarDecl 0x229a24a2fb0 <col:142, col:152> col:152 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x229a24a7618 <line:698:24, col:133> col:43 wcstoll 'long long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'long long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x229a24a32a8 <col:58, col:73> col:73 _Str 'const wchar_t *'
| |-ParmVarDecl 0x229a24a3328 <col:104, col:114> col:114 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x229a24a33a8 <col:123, col:127> col:127 _Radix 'int'
|-FunctionDecl 0x229a24a7a80 <line:699:24, col:164> col:43 _wcstoll_l 'long long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'long long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x229a24a76f8 <col:61, col:76> col:76 _Str 'const wchar_t *'
| |-ParmVarDecl 0x229a24a7778 <col:107, col:117> col:117 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x229a24a77f8 <col:126, col:130> col:130 _Radix 'int'
| `-ParmVarDecl 0x229a24a7870 <col:147, col:157> col:157 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x229a24a7e48 <line:700:24, col:137> col:46 wcstoul 'unsigned long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'unsigned long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x229a24a7b68 <col:61, col:76> col:76 _Str 'const wchar_t *'
| |-ParmVarDecl 0x229a24a7be8 <col:107, col:118> col:118 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x229a24a7c68 <col:127, col:131> col:131 _Radix 'int'
|-FunctionDecl 0x229a24a82b0 <line:701:24, col:167> col:46 _wcstoul_l 'unsigned long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'unsigned long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x229a24a7f28 <col:64, col:79> col:79 _Str 'const wchar_t *'
| |-ParmVarDecl 0x229a24a7fa8 <col:110, col:120> col:120 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x229a24a8028 <col:129, col:133> col:133 _Radix 'int'
| `-ParmVarDecl 0x229a24a80a0 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x229a24a4648 <line:702:24, col:143> col:51 wcstoull 'unsigned long long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'unsigned long long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x229a24a8398 <col:67, col:82> col:82 _Str 'const wchar_t *'
| |-ParmVarDecl 0x229a24a8418 <col:113, col:124> col:124 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x229a24a8498 <col:133, col:137> col:137 _Radix 'int'
|-FunctionDecl 0x229a24a4ab0 <line:703:24, col:174> col:51 _wcstoull_l 'unsigned long long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'unsigned long long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x229a24a4728 <col:70, col:85> col:85 _Str 'const wchar_t *'
| |-ParmVarDecl 0x229a24a47a8 <col:116, col:127> col:127 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x229a24a4828 <col:136, col:140> col:140 _Radix 'int'
| `-ParmVarDecl 0x229a24a48a0 <col:157, col:167> col:167 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x229a24a4dc0 <line:704:24, col:124> col:44 wcstold 'long double (const wchar_t *, wchar_t **) __attribute__((cdecl))':'long double (const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x229a24a4b98 <col:59, col:75> col:75 _Str 'const wchar_t *'
| `-ParmVarDecl 0x229a24a4c18 <col:106, col:117> col:117 _EndPtr 'wchar_t **'
|-FunctionDecl 0x229a24a5168 <line:705:24, col:155> col:44 _wcstold_l 'long double (const wchar_t *, wchar_t **, _locale_t) __attribute__((cdecl))':'long double (const wchar_t *, wchar_t **, _locale_t)'
| |-ParmVarDecl 0x229a24a4e98 <col:62, col:78> col:78 _Str 'const wchar_t *'
| |-ParmVarDecl 0x229a24a4f18 <col:109, col:120> col:120 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x229a24a4f90 <col:138, col:148> col:148 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x229a24a5470 <line:706:24, col:117> col:38 wcstof 'float (const wchar_t *, wchar_t **) __attribute__((cdecl))':'float (const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x229a24a5248 <col:52, col:68> col:68 _Str 'const wchar_t *'
| `-ParmVarDecl 0x229a24a52c8 <col:99, col:110> col:110 _EndPtr 'wchar_t **'
|-FunctionDecl 0x229a24a88b8 <line:707:24, col:148> col:38 _wcstof_l 'float (const wchar_t *, wchar_t **, _locale_t) __attribute__((cdecl))':'float (const wchar_t *, wchar_t **, _locale_t)'
| |-ParmVarDecl 0x229a24a85e0 <col:55, col:71> col:71 _Str 'const wchar_t *'
| |-ParmVarDecl 0x229a24a8660 <col:102, col:113> col:113 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x229a24a86d8 <col:131, col:141> col:141 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x229a24a8bd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:711:118> col:78 _wgetenv 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x229a24a8a58 <col:94, col:110> col:110 _VarName 'const wchar_t *'
| `-DeprecatedAttr 0x229a24a8c78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wdupenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x229a24a9128 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:712:28, col:198> col:44 _wgetenv_s 'errno_t (size_t *, wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (size_t *, wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x229a24a8db8 <col:61, col:70> col:70 _ReturnSize 'size_t *'
| |-ParmVarDecl 0x229a24a8e30 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x229a24a8ea8 <col:143, col:150> col:150 _DstSizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x229a24a8f20 <col:174, col:190> col:190 _VarName 'const wchar_t *'
|-FunctionDecl 0x229a24a94e0 <line:720:28, col:214> col:44 _wdupenv_s 'errno_t (wchar_t **, size_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t **, size_t *, const wchar_t *)'
| |-ParmVarDecl 0x229a24a9218 <col:127, col:137> col:137 _Buffer 'wchar_t **'
| |-ParmVarDecl 0x229a24a9290 <col:156, col:164> col:164 _BufferSizeInWords 'size_t *'
| `-ParmVarDecl 0x229a24a9308 <col:191, col:206> col:206 _VarName 'const wchar_t *'
|-FunctionDecl 0x229a24a9768 <line:728:9, col:65> col:21 _wsystem 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x229a24a95f0 <col:41, col:57> col:57 _Command 'const wchar_t *'
|-FunctionDecl 0x229a24a99b8 <line:733:24, col:71> col:39 _wtof 'double (const wchar_t *) __attribute__((cdecl))':'double (const wchar_t *)'
| `-ParmVarDecl 0x229a24a9838 <col:52, col:67> col:67 _Str 'const wchar_t *'
|-FunctionDecl 0x229a24a9cb0 <line:734:24, col:101> col:39 _wtof_l 'double (const wchar_t *, _locale_t) __attribute__((cdecl))':'double (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x229a24a9a88 <col:54, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x229a24a9b00 <col:84, col:94> col:94 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x229a24a9e68 <line:735:24, col:68> col:36 _wtoi 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x229a24a9d88 <col:49, col:64> col:64 _Str 'const wchar_t *'
|-FunctionDecl 0x229a24aa160 <line:736:24, col:98> col:36 _wtoi_l 'int (const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x229a24a9f38 <col:51, col:66> col:66 _Str 'const wchar_t *'
| `-ParmVarDecl 0x229a24a9fb0 <col:81, col:91> col:91 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x229a24aa3b8 <line:737:24, col:69> col:37 _wtol 'long (const wchar_t *) __attribute__((cdecl))':'long (const wchar_t *)'
| `-ParmVarDecl 0x229a24aa238 <col:50, col:65> col:65 _Str 'const wchar_t *'
|-FunctionDecl 0x229a24aa6d0 <line:738:24, col:99> col:37 _wtol_l 'long (const wchar_t *, _locale_t) __attribute__((cdecl))':'long (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x229a24aa488 <col:52, col:67> col:67 _Str 'const wchar_t *'
| `-ParmVarDecl 0x229a24aa500 <col:82, col:92> col:92 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x229a24aa928 <line:739:24, col:75> col:42 _wtoll 'long long (const wchar_t *) __attribute__((cdecl))':'long long (const wchar_t *)'
| `-ParmVarDecl 0x229a24aa7a8 <col:56, col:71> col:71 _Str 'const wchar_t *'
|-FunctionDecl 0x229a24aac20 <line:740:24, col:105> col:42 _wtoll_l 'long long (const wchar_t *, _locale_t) __attribute__((cdecl))':'long long (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x229a24aa9f8 <col:58, col:73> col:73 _Str 'const wchar_t *'
| `-ParmVarDecl 0x229a24aaa70 <col:88, col:98> col:98 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x229a24ab078 <line:742:28, col:162> col:44 _i64tow_s 'errno_t (long long, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (long long, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x229a24aad00 <col:59, col:67> col:67 _Val 'long long'
| |-ParmVarDecl 0x229a24aad78 <col:102, col:112> col:112 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x229a24aadf0 <col:126, col:133> col:133 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x229a24aae70 <col:152, col:156> col:156 _Radix 'int'
|-FunctionDecl 0x229a24ab4f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:743:146> col:62 _i64tow 'wchar_t *(long long, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(long long, wchar_t *, int)'
| |-ParmVarDecl 0x229a24ab228 <col:75, col:83> col:83 _Val 'long long'
| |-ParmVarDecl 0x229a24ab2a0 <col:112, col:122> col:122 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x229a24ab320 <col:136, col:140> col:140 _Radix 'int'
| `-DeprecatedAttr 0x229a24ab5a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _i64tow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x229a24aba88 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:744:28, col:172> col:44 _ui64tow_s 'errno_t (unsigned long long, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (unsigned long long, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x229a24ab710 <col:60, col:77> col:77 _Val 'unsigned long long'
| |-ParmVarDecl 0x229a24ab788 <col:112, col:122> col:122 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x229a24ab800 <col:136, col:143> col:143 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x229a24ab880 <col:162, col:166> col:166 _Radix 'int'
|-FunctionDecl 0x229a24abf00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:745:157> col:63 _ui64tow 'wchar_t *(unsigned long long, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(unsigned long long, wchar_t *, int)'
| |-ParmVarDecl 0x229a24abc38 <col:77, col:94> col:94 _Val 'unsigned long long'
| |-ParmVarDecl 0x229a24abcb0 <col:123, col:133> col:133 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x229a24abd30 <col:147, col:151> col:151 _Radix 'int'
| `-DeprecatedAttr 0x229a24abfb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ui64tow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x229a24ac1d8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:746:24, col:76> col:42 _wtoi64 'long long (const wchar_t *) __attribute__((cdecl))':'long long (const wchar_t *)'
| `-ParmVarDecl 0x229a24ac0f8 <col:57, col:72> col:72 _Str 'const wchar_t *'
|-FunctionDecl 0x229a24ac420 <line:747:24, col:106> col:42 _wtoi64_l 'long long (const wchar_t *, _locale_t) __attribute__((cdecl))':'long long (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x229a24ac2a8 <col:59, col:74> col:74 _Str 'const wchar_t *'
| `-ParmVarDecl 0x229a24ac320 <col:89, col:99> col:99 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x229a24a56d0 <line:748:24, col:141> col:42 _wcstoi64 'long long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'long long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x229a24ac4f8 <col:59, col:75> col:75 _Str 'const wchar_t *'
| |-ParmVarDecl 0x229a24ac578 <col:106, col:117> col:117 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x229a24a55b0 <col:131, col:135> col:135 _Radix 'int'
|-FunctionDecl 0x229a24a5a68 <line:749:24, col:171> col:42 _wcstoi64_l 'long long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'long long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x229a24a57b0 <col:61, col:77> col:77 _Str 'const wchar_t *'
| |-ParmVarDecl 0x229a24a5830 <col:108, col:119> col:119 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x229a24a58b0 <col:133, col:137> col:137 _Radix 'int'
| `-ParmVarDecl 0x229a24a5928 <col:154, col:164> col:164 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x229a24a5d70 <line:750:24, col:150> col:50 _wcstoui64 'unsigned long long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'unsigned long long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x229a24a5b50 <col:68, col:84> col:84 _Str 'const wchar_t *'
| |-ParmVarDecl 0x229a24a5bd0 <col:115, col:126> col:126 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x229a24a5c50 <col:140, col:144> col:144 _Radix 'int'
|-FunctionDecl 0x229a24a6108 <line:751:24, col:180> col:50 _wcstoui64_l 'unsigned long long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'unsigned long long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x229a24a5e50 <col:70, col:85> col:85 _Str 'const wchar_t *'
| |-ParmVarDecl 0x229a24a5ed0 <col:117, col:128> col:128 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x229a24a5f50 <col:142, col:146> col:146 _Radix 'int'
| `-ParmVarDecl 0x229a24a5fc8 <col:163, col:173> col:173 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x229a24a64c8 <line:770:24, col:151> col:39 _fullpath 'char *(char *, const char *, size_t) __attribute__((cdecl))':'char *(char *, const char *, size_t)'
| |-ParmVarDecl 0x229a24a61f8 <col:82, col:89> col:89 _FullPath 'char *'
| |-ParmVarDecl 0x229a24a6278 <col:107, col:120> col:120 _Path 'const char *'
| `-ParmVarDecl 0x229a24a62f0 <col:132, col:139> col:139 _SizeInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x229a24adb08 <line:778:28, col:189> col:44 _ecvt_s 'errno_t (char *, size_t, double, int, int *, int *) __attribute__((cdecl))':'errno_t (char *, size_t, double, int, int *, int *)'
| |-ParmVarDecl 0x229a24ad630 <col:74, col:81> col:81 _DstBuf 'char *'
| |-ParmVarDecl 0x229a24ad6a8 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x229a24ad728 <col:114, col:121> col:121 _Val 'double'
| |-ParmVarDecl 0x229a24ad7a8 <col:132, col:136> col:136 _NumOfDights 'int'
| |-ParmVarDecl 0x229a24ad828 <col:156, col:162> col:162 _PtDec 'int *'
| `-ParmVarDecl 0x229a24ad8a8 <col:176, col:182> col:182 _PtSign 'int *'
|-FunctionDecl 0x229a24ae000 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:780:158> col:72 _ecvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x229a24adcc8 <col:83, col:90> col:90 _Val 'double'
| |-ParmVarDecl 0x229a24add48 <col:101, col:105> col:105 _NumOfDigits 'int'
| |-ParmVarDecl 0x229a24addc8 <col:125, col:131> col:131 _PtDec 'int *'
| |-ParmVarDecl 0x229a24ade48 <col:145, col:151> col:151 _PtSign 'int *'
| `-DeprecatedAttr 0x229a24ae0c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ecvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x229a24a65c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:781:28, col:186> col:44 _fcvt_s 'errno_t (char *, size_t, double, int, int *, int *) __attribute__((cdecl))':'errno_t (char *, size_t, double, int, int *, int *)'
| |-ParmVarDecl 0x229a24ae208 <col:74, col:81> col:81 _DstBuf 'char *'
| |-ParmVarDecl 0x229a24ae280 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x229a24ae300 <col:114, col:121> col:121 _Val 'double'
| |-ParmVarDecl 0x229a24ae380 <col:132, col:136> col:136 _NumOfDec 'int'
| |-ParmVarDecl 0x229a24ae400 <col:153, col:159> col:159 _PtDec 'int *'
| `-ParmVarDecl 0x229a24ae480 <col:173, col:179> col:179 _PtSign 'int *'
|-FunctionDecl 0x229a24a6a40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:783:155> col:72 _fcvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x229a24a6780 <col:83, col:90> col:90 _Val 'double'
| |-ParmVarDecl 0x229a24a6800 <col:101, col:105> col:105 _NumOfDec 'int'
| |-ParmVarDecl 0x229a24a6880 <col:122, col:128> col:128 _PtDec 'int *'
| |-ParmVarDecl 0x229a24a6900 <col:142, col:148> col:148 _PtSign 'int *'
| `-DeprecatedAttr 0x229a24a6b00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fcvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x229a24a6fc8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:784:9, col:129> col:25 _gcvt_s 'errno_t (char *, size_t, double, int) __attribute__((cdecl))':'errno_t (char *, size_t, double, int)'
| |-ParmVarDecl 0x229a24a6c48 <col:55, col:62> col:62 _DstBuf 'char *'
| |-ParmVarDecl 0x229a24a6cc0 <col:76, col:83> col:83 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x229a24a6d40 <col:95, col:102> col:102 _Val 'double'
| `-ParmVarDecl 0x229a24a6dc0 <col:113, col:117> col:117 _NumOfDigits 'int'
|-FunctionDecl 0x229a24a7418 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:786:141> col:57 _gcvt 'char *(double, int, char *) __attribute__((cdecl))':'char *(double, int, char *)'
| |-ParmVarDecl 0x229a24a7178 <col:68, col:75> col:75 _Val 'double'
| |-ParmVarDecl 0x229a24a71f8 <col:86, col:90> col:90 _NumOfDigits 'int'
| |-ParmVarDecl 0x229a24a7278 <col:127, col:134> col:134 _DstBuf 'char *'
| `-DeprecatedAttr 0x229a24a74d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _gcvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x229a24b3990 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:788:24, col:91> col:36 _atodbl 'int (_CRT_DOUBLE *, char *) __attribute__((cdecl))':'int (_CRT_DOUBLE *, char *)'
| |-ParmVarDecl 0x229a24b3768 <col:50, col:64> col:64 _Result '_CRT_DOUBLE *'
| `-ParmVarDecl 0x229a24b37e8 <col:80, col:87> col:87 _Str 'char *'
|-FunctionDecl 0x229a24b3d10 <line:789:24, col:89> col:36 _atoldbl 'int (_LDOUBLE *, char *) __attribute__((cdecl))':'int (_LDOUBLE *, char *)'
| |-ParmVarDecl 0x229a24b3ae8 <col:51, col:62> col:62 _Result '_LDOUBLE *'
| `-ParmVarDecl 0x229a24b3b68 <col:78, col:85> col:85 _Str 'char *'
|-FunctionDecl 0x229a24b4090 <line:790:24, col:96> col:36 _atoflt 'int (_CRT_FLOAT *, const char *) __attribute__((cdecl))':'int (_CRT_FLOAT *, const char *)'
| |-ParmVarDecl 0x229a24b3e68 <col:50, col:63> col:63 _Result '_CRT_FLOAT *'
| `-ParmVarDecl 0x229a24b3ee8 <col:79, col:92> col:92 _Str 'const char *'
|-FunctionDecl 0x229a24b4438 <line:791:24, col:121> col:36 _atodbl_l 'int (_CRT_DOUBLE *, char *, _locale_t) __attribute__((cdecl))':'int (_CRT_DOUBLE *, char *, _locale_t)'
| |-ParmVarDecl 0x229a24b4168 <col:52, col:66> col:66 _Result '_CRT_DOUBLE *'
| |-ParmVarDecl 0x229a24b41e8 <col:82, col:89> col:89 _Str 'char *'
| `-ParmVarDecl 0x229a24b4260 <col:104, col:114> col:114 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x229a24ae798 <line:792:24, col:119> col:36 _atoldbl_l 'int (_LDOUBLE *, char *, _locale_t) __attribute__((cdecl))':'int (_LDOUBLE *, char *, _locale_t)'
| |-ParmVarDecl 0x229a24b4518 <col:53, col:64> col:64 _Result '_LDOUBLE *'
| |-ParmVarDecl 0x229a24b4598 <col:80, col:87> col:87 _Str 'char *'
| `-ParmVarDecl 0x229a24b4610 <col:102, col:112> col:112 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x229a24aeb48 <line:793:24, col:126> col:36 _atoflt_l 'int (_CRT_FLOAT *, const char *, _locale_t) __attribute__((cdecl))':'int (_CRT_FLOAT *, const char *, _locale_t)'
| |-ParmVarDecl 0x229a24ae878 <col:52, col:65> col:65 _Result '_CRT_FLOAT *'
| |-ParmVarDecl 0x229a24ae8f8 <col:81, col:94> col:94 _Str 'const char *'
| `-ParmVarDecl 0x229a24ae970 <col:109, col:119> col:119 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x229a24aee20 <line:794:46> col:46 implicit _lrotl 'unsigned long (unsigned long, int)' extern
| |-ParmVarDecl 0x229a24aeec0 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0x229a24aef28 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x229a24aefa0 <col:46> Implicit
|-FunctionDecl 0x229a24aeff8 prev 0x229a24aee20 <col:24, col:93> col:46 _lrotl 'unsigned long (unsigned long, int)'
| |-ParmVarDecl 0x229a24aec30 <col:58, col:72> col:72 _Val 'unsigned long'
| |-ParmVarDecl 0x229a24aecb0 <col:83, col:87> col:87 _Shift 'int'
| `-NoThrowAttr 0x229a24af0f0 <col:46> Inherited Implicit
|-FunctionDecl 0x229a24af2b0 <line:795:46> col:46 implicit _lrotr 'unsigned long (unsigned long, int)' extern
| |-ParmVarDecl 0x229a24af350 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0x229a24af3b8 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x229a24af430 <col:46> Implicit
|-FunctionDecl 0x229a24af488 prev 0x229a24af2b0 <col:24, col:93> col:46 _lrotr 'unsigned long (unsigned long, int)'
| |-ParmVarDecl 0x229a24af130 <col:58, col:72> col:72 _Val 'unsigned long'
| |-ParmVarDecl 0x229a24af1b0 <col:83, col:87> col:87 _Shift 'int'
| `-NoThrowAttr 0x229a24af580 <col:46> Inherited Implicit
|-FunctionDecl 0x229a24b4b08 <line:796:40, line:797:37> line:796:58 _makepath_s 'errno_t (char *, size_t, const char *, const char *, const char *, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *, const char *, const char *, const char *)'
| |-ParmVarDecl 0x229a24af5c0 <col:99, col:106> col:106 _PathResult 'char *'
| |-ParmVarDecl 0x229a24b46a0 <col:124, col:131> col:131 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x229a24b4720 <col:156, col:169> col:169 _Drive 'const char *'
| |-ParmVarDecl 0x229a24b47a0 <col:188, col:201> col:201 _Dir 'const char *'
| |-ParmVarDecl 0x229a24b4820 <col:218, col:231> col:231 _Filename 'const char *'
| `-ParmVarDecl 0x229a24b48a0 <line:797:20, col:33> col:33 _Ext 'const char *'
|-FunctionDecl 0x229a24b50b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1948:181> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:799:78 _makepath 'void (char *, const char *, const char *, const char *, const char *) __attribute__((cdecl))':'void (char *, const char *, const char *, const char *, const char *)'
| |-ParmVarDecl 0x229a24b4cc8 <col:113, col:119> col:119 _Path 'char *'
| |-ParmVarDecl 0x229a24b4d48 <col:137, col:151> col:151 _Drive 'const char *'
| |-ParmVarDecl 0x229a24b4dc8 <col:170, col:184> col:184 _Dir 'const char *'
| |-ParmVarDecl 0x229a24b4e48 <col:201, col:215> col:215 _Filename 'const char *'
| |-ParmVarDecl 0x229a24b4ec8 <col:237, col:251> col:251 _Ext 'const char *'
| `-DeprecatedAttr 0x229a24b5178 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _makepath_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x229a24b5450 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:826:9, col:59> col:27 _onexit '_onexit_t (_onexit_t) __attribute__((cdecl))':'_onexit_t (_onexit_t)'
| `-ParmVarDecl 0x229a24b52e0 <col:44, col:54> col:54 _Func '_onexit_t':'int (*)(void) __attribute__((cdecl))'
|-FunctionDecl 0x229a24b2680 <line:831:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x229a24b5528 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x229a24b2838 <line:838:24, col:77> col:39 _putenv 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x229a24b2758 <col:54, col:67> col:67 _EnvString 'const char *'
|-FunctionDecl 0x229a24b2b38 <line:839:28, col:107> col:44 _putenv_s 'errno_t (const char *, const char *) __attribute__((cdecl))':'errno_t (const char *, const char *)'
| |-ParmVarDecl 0x229a24b2910 <col:61, col:74> col:74 _Name 'const char *'
| `-ParmVarDecl 0x229a24b2990 <col:88, col:101> col:101 _Value 'const char *'
|-FunctionDecl 0x229a24b2e00 <line:842:30> col:30 implicit _rotl 'unsigned int (unsigned int, int)' extern
| |-ParmVarDecl 0x229a24b2ea0 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-ParmVarDecl 0x229a24b2f08 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x229a24b2f80 <col:30> Implicit
|-FunctionDecl 0x229a24b2fd8 prev 0x229a24b2e00 <col:9, col:75> col:30 _rotl 'unsigned int (unsigned int, int)'
| |-ParmVarDecl 0x229a24b2c18 <col:41, col:54> col:54 _Val 'unsigned int'
| |-ParmVarDecl 0x229a24b2c98 <col:65, col:69> col:69 _Shift 'int'
| `-NoThrowAttr 0x229a24b30d0 <col:30> Inherited Implicit
|-FunctionDecl 0x229a24b3300 <line:843:34> col:34 implicit _rotl64 'unsigned long long (unsigned long long, int)' extern
| |-ParmVarDecl 0x229a24b33a0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x229a24b3408 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x229a24b3480 <col:34> Implicit
|-FunctionDecl 0x229a24b34d8 prev 0x229a24b3300 <col:9, col:85> col:34 _rotl64 'unsigned long long (unsigned long long, int)'
| |-ParmVarDecl 0x229a24b3110 <col:47, col:64> col:64 _Val 'unsigned long long'
| |-ParmVarDecl 0x229a24b3190 <col:75, col:79> col:79 _Shift 'int'
| `-NoThrowAttr 0x229a24b35d0 <col:34> Inherited Implicit
|-FunctionDecl 0x229a24b0778 <line:844:30> col:30 implicit _rotr 'unsigned int (unsigned int, int)' extern
| |-ParmVarDecl 0x229a24b0818 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-ParmVarDecl 0x229a24b0880 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x229a24b08f8 <col:30> Implicit
|-FunctionDecl 0x229a24b0950 prev 0x229a24b0778 <col:9, col:75> col:30 _rotr 'unsigned int (unsigned int, int)'
| |-ParmVarDecl 0x229a24b3610 <col:41, col:54> col:54 _Val 'unsigned int'
| |-ParmVarDecl 0x229a24b0678 <col:65, col:69> col:69 _Shift 'int'
| `-NoThrowAttr 0x229a24b0a48 <col:30> Inherited Implicit
|-FunctionDecl 0x229a24b0c08 <line:845:34> col:34 implicit _rotr64 'unsigned long long (unsigned long long, int)' extern
| |-ParmVarDecl 0x229a24b0ca8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x229a24b0d10 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x229a24b0d88 <col:34> Implicit
|-FunctionDecl 0x229a24b0de0 prev 0x229a24b0c08 <col:9, col:85> col:34 _rotr64 'unsigned long long (unsigned long long, int)'
| |-ParmVarDecl 0x229a24b0a88 <col:47, col:64> col:64 _Val 'unsigned long long'
| |-ParmVarDecl 0x229a24b0b08 <col:75, col:79> col:79 _Shift 'int'
| `-NoThrowAttr 0x229a24b0ed8 <col:34> Inherited Implicit
|-FunctionDecl 0x229a24b1298 <line:849:9, col:171> col:25 _searchenv_s 'errno_t (const char *, const char *, char *, size_t) __attribute__((cdecl))':'errno_t (const char *, const char *, char *, size_t)'
| |-ParmVarDecl 0x229a24b0f18 <col:45, col:58> col:58 _Filename 'const char *'
| |-ParmVarDecl 0x229a24b0f98 <col:76, col:89> col:89 _EnvVar 'const char *'
| |-ParmVarDecl 0x229a24b1018 <col:127, col:134> col:134 _ResultPath 'char *'
| `-ParmVarDecl 0x229a24b1090 <col:152, col:159> col:159 _SizeInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x229a24b1710 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1954:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:851:78 _searchenv 'void (const char *, const char *, char *) __attribute__((cdecl))':'void (const char *, const char *, char *)'
| |-ParmVarDecl 0x229a24b1448 <col:97, col:111> col:111 _Filename 'const char *'
| |-ParmVarDecl 0x229a24b14c8 <col:129, col:143> col:143 _EnvVar 'const char *'
| |-ParmVarDecl 0x229a24b1548 <col:176, col:182> col:182 _ResultPath 'char *'
| `-DeprecatedAttr 0x229a24b17c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _searchenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x229a24b1db0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:854:261> col:62 _splitpath 'void (const char *, char *, char *, char *, char *) __attribute__((cdecl))':'void (const char *, char *, char *, char *, char *)'
| |-ParmVarDecl 0x229a24b19d0 <col:80, col:93> col:93 _FullPath 'const char *'
| |-ParmVarDecl 0x229a24b1a50 <col:129, col:136> col:136 _Drive 'char *'
| |-ParmVarDecl 0x229a24b1ad0 <col:169, col:176> col:176 _Dir 'char *'
| |-ParmVarDecl 0x229a24b1b50 <col:207, col:214> col:214 _Filename 'char *'
| |-ParmVarDecl 0x229a24b1bd0 <col:250, col:257> col:257 _Ext 'char *'
| `-DeprecatedAttr 0x229a24b1e78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _splitpath_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x229a24b5720 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:855:40, line:859:79> line:855:57 _splitpath_s 'errno_t (const char *, char *, size_t, char *, size_t, char *, size_t, char *, size_t) __attribute__((cdecl))':'errno_t (const char *, char *, size_t, char *, size_t, char *, size_t, char *, size_t)'
| |-ParmVarDecl 0x229a24b1fc0 <col:77, col:90> col:90 _FullPath 'const char *'
| |-ParmVarDecl 0x229a24b2040 <line:856:48, col:55> col:55 _Drive 'char *'
| |-ParmVarDecl 0x229a24b20b8 <col:68, col:75> col:75 _DriveSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x229a24b2138 <line:857:46, col:53> col:53 _Dir 'char *'
| |-ParmVarDecl 0x229a24b21b0 <col:64, col:71> col:71 _DirSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x229a24b2230 <line:858:51, col:58> col:58 _Filename 'char *'
| |-ParmVarDecl 0x229a24b22a8 <col:74, col:81> col:81 _FilenameSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x229a24b2328 <line:859:46, col:53> col:53 _Ext 'char *'
| `-ParmVarDecl 0x229a24b23a0 <col:64, col:71> col:71 _ExtSize 'size_t':'unsigned long long'
|-FunctionDecl 0x229a24b5ad0 <line:862:9, col:204> col:24 _swab 'void (char *, char *, int) __attribute__((cdecl))':'void (char *, char *, int)'
| |-ParmVarDecl 0x229a24b5838 <col:95, col:102> col:102 _Buf1 'char *'
| |-ParmVarDecl 0x229a24b58b8 <col:174, col:181> col:181 _Buf2 'char *'
| `-ParmVarDecl 0x229a24b5938 <col:188, col:192> col:192 _SizeInBytes 'int'
|-FunctionDecl 0x229a24b5e70 <line:873:24, col:161> col:42 _wfullpath 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x229a24b5bb0 <col:86, col:96> col:96 _FullPath 'wchar_t *'
| |-ParmVarDecl 0x229a24b5c28 <col:114, col:130> col:130 _Path 'const wchar_t *'
| `-ParmVarDecl 0x229a24b5ca0 <col:142, col:149> col:149 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x229a24b6408 <line:879:40, line:880:40> line:879:56 _wmakepath_s 'errno_t (wchar_t *, size_t, const wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x229a24b5f50 <col:91, col:101> col:101 _PathResult 'wchar_t *'
| |-ParmVarDecl 0x229a24b5fc8 <col:119, col:126> col:126 _SIZE 'size_t':'unsigned long long'
| |-ParmVarDecl 0x229a24b6040 <col:144, col:160> col:160 _Drive 'const wchar_t *'
| |-ParmVarDecl 0x229a24b60b8 <col:179, col:195> col:195 _Dir 'const wchar_t *'
| |-ParmVarDecl 0x229a24b6130 <col:212, col:228> col:228 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x229a24b61a8 <line:880:20, col:36> col:36 _Ext 'const wchar_t *'
|-FunctionDecl 0x229a24af970 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1948:181> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:882:78 _wmakepath 'void (wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'void (wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x229a24b65c0 <col:114, col:123> col:123 _ResultPath 'wchar_t *'
| |-ParmVarDecl 0x229a24b6638 <col:147, col:164> col:164 _Drive 'const wchar_t *'
| |-ParmVarDecl 0x229a24af650 <col:183, col:200> col:200 _Dir 'const wchar_t *'
| |-ParmVarDecl 0x229a24af6c8 <col:217, col:234> col:234 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x229a24af740 <col:256, col:273> col:273 _Ext 'const wchar_t *'
| `-DeprecatedAttr 0x229a24afa38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wmakepath_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x229a24afcf0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:885:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x229a24afb78 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x229a24afea0 <line:889:24, col:81> col:39 _wputenv 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x229a24afdc0 <col:55, col:71> col:71 _EnvString 'const wchar_t *'
|-FunctionDecl 0x229a24b0188 <line:890:28, col:114> col:44 _wputenv_s 'errno_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x229a24aff70 <col:62, col:78> col:78 _Name 'const wchar_t *'
| `-ParmVarDecl 0x229a24affe8 <col:92, col:108> col:108 _Value 'const wchar_t *'
|-FunctionDecl 0x229a24ba700 <line:891:9, col:181> col:25 _wsearchenv_s 'errno_t (const wchar_t *, const wchar_t *, wchar_t *, size_t) __attribute__((cdecl))':'errno_t (const wchar_t *, const wchar_t *, wchar_t *, size_t)'
| |-ParmVarDecl 0x229a24b0260 <col:46, col:62> col:62 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x229a24b02d8 <col:80, col:96> col:96 _EnvVar 'const wchar_t *'
| |-ParmVarDecl 0x229a24b0350 <col:134, col:144> col:144 _ResultPath 'wchar_t *'
| `-ParmVarDecl 0x229a24b03c8 <col:162, col:169> col:169 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x229a24bab70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1954:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:893:78 _wsearchenv 'void (const wchar_t *, const wchar_t *, wchar_t *) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, wchar_t *)'
| |-ParmVarDecl 0x229a24ba8a8 <col:98, col:115> col:115 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x229a24ba920 <col:133, col:150> col:150 _EnvVar 'const wchar_t *'
| |-ParmVarDecl 0x229a24ba998 <col:183, col:192> col:192 _ResultPath 'wchar_t *'
| `-DeprecatedAttr 0x229a24bac28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wsearchenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x229a24bb240 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:896:278> col:63 _wsplitpath 'void (const wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *) __attribute__((cdecl))':'void (const wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *)'
| |-ParmVarDecl 0x229a24bae28 <col:82, col:98> col:98 _FullPath 'const wchar_t *'
| |-ParmVarDecl 0x229a24baea0 <col:134, col:144> col:144 _Drive 'wchar_t *'
| |-ParmVarDecl 0x229a24baf18 <col:177, col:187> col:187 _Dir 'wchar_t *'
| |-ParmVarDecl 0x229a24baf90 <col:218, col:228> col:228 _Filename 'wchar_t *'
| |-ParmVarDecl 0x229a24bb008 <col:264, col:274> col:274 _Ext 'wchar_t *'
| `-DeprecatedAttr 0x229a24bb308 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wsplitpath_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x229a24bcb80 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:897:21, line:901:82> line:897:37 _wsplitpath_s 'errno_t (const wchar_t *, wchar_t *, size_t, wchar_t *, size_t, wchar_t *, size_t, wchar_t *, size_t) __attribute__((cdecl))':'errno_t (const wchar_t *, wchar_t *, size_t, wchar_t *, size_t, wchar_t *, size_t, wchar_t *, size_t)'
| |-ParmVarDecl 0x229a24bb448 <col:58, col:74> col:74 _FullPath 'const wchar_t *'
| |-ParmVarDecl 0x229a24bb4c0 <line:898:48, col:58> col:58 _Drive 'wchar_t *'
| |-ParmVarDecl 0x229a24bb538 <col:71, col:78> col:78 _DriveSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x229a24bb5b0 <line:899:46, col:56> col:56 _Dir 'wchar_t *'
| |-ParmVarDecl 0x229a24bb628 <col:67, col:74> col:74 _DirSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x229a24bc720 <line:900:51, col:61> col:61 _Filename 'wchar_t *'
| |-ParmVarDecl 0x229a24bc798 <col:77, col:84> col:84 _FilenameSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x229a24bc810 <line:901:46, col:56> col:56 _Ext 'wchar_t *'
| `-ParmVarDecl 0x229a24bc888 <col:67, col:74> col:74 _ExtSize 'size_t':'unsigned long long'
|-FunctionDecl 0x229a24bcea0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:909:78> col:50 _seterrormode 'void (int) __attribute__((cdecl))':'void (int)'
| |-ParmVarDecl 0x229a24bcd98 <col:69, col:73> col:73 _Mode 'int'
| `-DeprecatedAttr 0x229a24bcf48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using SetErrorMode instead. See online help for details." ""
|-FunctionDecl 0x229a24bd338 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:910:97> col:42 _beep 'void (unsigned int, unsigned int) __attribute__((cdecl))':'void (unsigned int, unsigned int)'
| |-ParmVarDecl 0x229a24bd158 <col:53, col:62> col:62 _Frequency 'unsigned int'
| |-ParmVarDecl 0x229a24bd1d8 <col:79, col:88> col:88 _Duration 'unsigned int'
| `-DeprecatedAttr 0x229a24bd3e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using Beep instead. See online help for details." ""
|-FunctionDecl 0x229a24b8710 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:911:78> col:43 _sleep 'void (unsigned long) __attribute__((cdecl))':'void (unsigned long)'
| |-ParmVarDecl 0x229a24bd5f0 <col:55, col:69> col:69 _Duration 'unsigned long'
| `-DeprecatedAttr 0x229a24b87b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using Sleep instead. See online help for details." ""
|-FunctionDecl 0x229a24b8d60 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:934:187> col:102 ecvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x229a24b8aa0 <col:112, col:119> col:119 _Val 'double'
| |-ParmVarDecl 0x229a24b8b20 <col:130, col:134> col:134 _NumOfDigits 'int'
| |-ParmVarDecl 0x229a24b8ba0 <col:154, col:160> col:160 _PtDec 'int *'
| |-ParmVarDecl 0x229a24b8c20 <col:174, col:180> col:180 _PtSign 'int *'
| |-DeprecatedAttr 0x229a24b8e20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _ecvt. See online help for details." ""
| `-DeprecatedAttr 0x229a24b8f18 <col:47, col:63> "This function or variable may be unsafe. Consider using _ecvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x229a24b9450 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:935:184> col:102 fcvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x229a24b9190 <col:112, col:119> col:119 _Val 'double'
| |-ParmVarDecl 0x229a24b9210 <col:130, col:134> col:134 _NumOfDec 'int'
| |-ParmVarDecl 0x229a24b9290 <col:151, col:157> col:157 _PtDec 'int *'
| |-ParmVarDecl 0x229a24b9310 <col:171, col:177> col:177 _PtSign 'int *'
| |-DeprecatedAttr 0x229a24b9510 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcvt. See online help for details." ""
| `-DeprecatedAttr 0x229a24b9608 <col:47, col:63> "This function or variable may be unsafe. Consider using _fcvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x229a24bbb60 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:936:179> col:96 gcvt 'char *(double, int, char *) __attribute__((cdecl))':'char *(double, int, char *)'
| |-ParmVarDecl 0x229a24bb940 <col:106, col:113> col:113 _Val 'double'
| |-ParmVarDecl 0x229a24bb9c0 <col:124, col:128> col:128 _NumOfDigits 'int'
| |-ParmVarDecl 0x229a24bba40 <col:165, col:172> col:172 _DstBuf 'char *'
| |-DeprecatedAttr 0x229a24bbc18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _gcvt. See online help for details." ""
| `-DeprecatedAttr 0x229a24bbd10 <col:47, col:63> "This function or variable may be unsafe. Consider using _fcvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x229a24bc1a8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:937:170> col:96 itoa 'char *(int, char *, int) __attribute__((cdecl))':'char *(int, char *, int)'
| |-ParmVarDecl 0x229a24bbf88 <col:106, col:110> col:110 _Val 'int'
| |-ParmVarDecl 0x229a24bc008 <col:139, col:146> col:146 _DstBuf 'char *'
| |-ParmVarDecl 0x229a24bc088 <col:160, col:164> col:164 _Radix 'int'
| |-DeprecatedAttr 0x229a24bc260 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _itoa. See online help for details." ""
| `-DeprecatedAttr 0x229a24bc358 <col:47, col:63> "This function or variable may be unsafe. Consider using _itoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x229a24b67e0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:938:171> col:96 ltoa 'char *(long, char *, int) __attribute__((cdecl))':'char *(long, char *, int)'
| |-ParmVarDecl 0x229a24bc5d0 <col:106, col:111> col:111 _Val 'long'
| |-ParmVarDecl 0x229a24bc650 <col:140, col:147> col:147 _DstBuf 'char *'
| |-ParmVarDecl 0x229a24b66c0 <col:161, col:165> col:165 _Radix 'int'
| |-DeprecatedAttr 0x229a24b6898 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _ltoa. See online help for details." ""
| `-DeprecatedAttr 0x229a24b6990 <col:47, col:63> "This function or variable may be unsafe. Consider using _ltoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x229a24b6c60 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:941:108> col:71 putenv 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x229a24b6b80 <col:85, col:98> col:98 _EnvString 'const char *'
| `-DeprecatedAttr 0x229a24b6d08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putenv. See online help for details." ""
|-FunctionDecl 0x229a24b70e8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:944:245> col:128 swab 'void (char *, char *, int) __attribute__((cdecl))':'void (char *, char *, int)'
| |-ParmVarDecl 0x229a24b6ed0 <col:165, col:172> col:172 _Buf1 'char *'
| |-ParmVarDecl 0x229a24b6f50 <col:210, col:217> col:217 _Buf2 'char *'
| |-ParmVarDecl 0x229a24b6fd0 <col:229, col:233> col:233 _SizeInBytes 'int'
| `-DeprecatedAttr 0x229a24b71a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _swab. See online help for details." ""
|-FunctionDecl 0x229a24be740 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:945:181> col:96 ultoa 'char *(unsigned long, char *, int) __attribute__((cdecl))':'char *(unsigned long, char *, int)'
| |-ParmVarDecl 0x229a24b7460 <col:107, col:121> col:121 _Val 'unsigned long'
| |-ParmVarDecl 0x229a24b74e0 <col:150, col:157> col:157 _Dstbuf 'char *'
| |-ParmVarDecl 0x229a24b7560 <col:171, col:175> col:175 _Radix 'int'
| |-DeprecatedAttr 0x229a24be7f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _ultoa. See online help for details." ""
| `-DeprecatedAttr 0x229a24be8f0 <col:47, col:63> "This function or variable may be unsafe. Consider using _ultoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x229a24bead8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:64:18, line:947:48> col:18 onexit '_onexit_t (_onexit_t) __attribute__((cdecl))':'_onexit_t (_onexit_t)'
| `-ParmVarDecl 0x229a24bea00 <line:64:18, line:947:43> col:43 _Func '_onexit_t':'int (*)(void) __attribute__((cdecl))'
|-RecordDecl 0x229a24beb98 <.//openssl//file_jk/before\crypto\ec/ec_lcl.h:52:1, line:173:1> line:52:8 struct ec_method_st definition
| |-FieldDecl 0x229a24bec68 <line:54:5, col:9> col:9 flags 'int'
| |-FieldDecl 0x229a24becd8 <line:56:5, col:9> col:9 field_type 'int'
| |-FieldDecl 0x229a24bee78 <line:61:5, col:34> col:11 group_init 'int (*)(int *)'
| |-FieldDecl 0x229a24bf040 <line:62:5, col:37> col:12 group_finish 'void (*)(int *)'
| |-FieldDecl 0x229a24bf150 <line:63:5, col:43> col:12 group_clear_finish 'void (*)(int *)'
| |-FieldDecl 0x229a24bf3c0 <line:64:5, col:52> col:11 group_copy 'int (*)(int *, const int *)'
| |-FieldDecl 0x229a24c0818 <line:67:5, line:68:54> line:67:11 group_set_curve 'int (*)(int *, const int *, const int *, const int *, int *)'
| |-FieldDecl 0x229a24c0c28 <line:69:5, line:70:37> line:69:11 group_get_curve 'int (*)(const int *, int *, int *, int *, int *)'
| |-FieldDecl 0x229a24c0df8 <line:72:5, col:46> col:11 group_get_degree 'int (*)(const int *)'
| |-FieldDecl 0x229a24c0f10 <line:73:5, col:46> col:11 group_order_bits 'int (*)(const int *)'
| |-FieldDecl 0x229a24c1180 <line:75:5, col:64> col:11 group_check_discriminant 'int (*)(const int *, int *)'
| |-FieldDecl 0x229a24c1298 <line:80:5, col:34> col:11 point_init 'int (*)(int *)'
| |-FieldDecl 0x229a24c13a8 <line:81:5, col:37> col:12 point_finish 'void (*)(int *)'
| |-FieldDecl 0x229a24c14b8 <line:82:5, col:43> col:12 point_clear_finish 'void (*)(int *)'
| |-FieldDecl 0x229a24c1658 <line:83:5, col:52> col:11 point_copy 'int (*)(int *, const int *)'
| |-FieldDecl 0x229a24bf800 <line:92:5, col:63> col:11 point_set_to_infinity 'int (*)(const int *, int *)'
| |-FieldDecl 0x229a24bfcb0 <line:93:5, line:96:76> line:93:11 point_set_Jprojective_coordinates_GFp 'int (*)(const int *, int *, const int *, const int *, const int *, int *)'
| |-FieldDecl 0x229a24c0160 <line:97:5, line:100:59> line:97:11 point_get_Jprojective_coordinates_GFp 'int (*)(const int *, const int *, int *, int *, int *, int *)'
| |-FieldDecl 0x229a24c0578 <line:101:5, line:103:50> line:101:11 point_set_affine_coordinates 'int (*)(const int *, int *, const int *, const int *, int *)'
| |-FieldDecl 0x229a25431d8 <line:104:5, line:105:72> line:104:11 point_get_affine_coordinates 'int (*)(const int *, const int *, int *, int *, int *)'
| |-FieldDecl 0x229a25435e8 <line:106:5, line:108:54> line:106:11 point_set_compressed_coordinates 'int (*)(const int *, int *, const int *, int, int *)'
| |-FieldDecl 0x229a2543b08 <line:110:5, line:112:46> line:110:14 point2oct 'size_t (*)(const int *, const int *, int, unsigned char *, size_t, int *)'
| |-FieldDecl 0x229a253ff70 <line:113:5, line:114:43> line:113:11 oct2point 'int (*)(const int *, int *, const unsigned char *, size_t, int *)'
| |-FieldDecl 0x229a25402a8 <line:116:5, line:117:44> line:116:11 add 'int (*)(const int *, int *, const int *, const int *, int *)'
| |-FieldDecl 0x229a2540630 <line:118:5, col:75> col:11 dbl 'int (*)(const int *, int *, const int *, int *)'
| |-FieldDecl 0x229a2540928 <line:119:5, col:58> col:11 invert 'int (*)(const int *, int *, int *)'
| |-FieldDecl 0x229a2540b90 <line:123:5, col:62> col:11 is_at_infinity 'int (*)(const int *, const int *)'
| |-FieldDecl 0x229a2540e88 <line:124:5, col:69> col:11 is_on_curve 'int (*)(const int *, const int *, int *)'
| |-FieldDecl 0x229a253f210 <line:125:5, line:126:31> line:125:11 point_cmp 'int (*)(const int *, const int *, const int *, int *)'
| |-FieldDecl 0x229a253f438 <line:128:5, col:63> col:11 make_affine 'int (*)(const int *, int *, int *)'
| |-FieldDecl 0x229a253f8b0 <line:129:5, line:130:40> line:129:11 points_make_affine 'int (*)(const int *, size_t, int **, int *)'
| |-FieldDecl 0x229a253fee8 <line:136:5, line:138:25> line:136:11 mul 'int (*)(const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-FieldDecl 0x229a25471e0 <line:139:5, col:54> col:11 precompute_mult 'int (*)(int *, int *)'
| |-FieldDecl 0x229a25472f8 <line:140:5, col:55> col:11 have_precompute_mult 'int (*)(const int *)'
| |-FieldDecl 0x229a2547630 <line:148:5, line:149:48> line:148:11 field_mul 'int (*)(const int *, int *, const int *, const int *, int *)'
| |-FieldDecl 0x229a25478e0 <line:150:5, col:77> col:11 field_sqr 'int (*)(const int *, int *, const int *, int *)'
| |-FieldDecl 0x229a2547c18 <line:151:5, line:152:48> line:151:11 field_div 'int (*)(const int *, int *, const int *, const int *, int *)'
| |-FieldDecl 0x229a2547ec8 <line:154:5, line:155:34> line:154:11 field_encode 'int (*)(const int *, int *, const int *, int *)'
| |-FieldDecl 0x229a2544170 <line:157:5, line:158:34> line:157:11 field_decode 'int (*)(const int *, int *, const int *, int *)'
| |-FieldDecl 0x229a2544398 <line:159:5, col:67> col:11 field_set_to_one 'int (*)(const int *, int *, int *)'
| |-FieldDecl 0x229a25446c0 <line:161:5, col:75> col:14 priv2oct 'size_t (*)(const int *, unsigned char *, size_t)'
| |-FieldDecl 0x229a25449e8 <line:162:5, col:72> col:11 oct2priv 'int (*)(int *, const unsigned char *, size_t)'
| |-FieldDecl 0x229a2544b88 <line:163:5, col:61> col:11 set_private 'int (*)(int *, const int *)'
| |-FieldDecl 0x229a2544ca0 <line:164:5, col:32> col:11 keygen 'int (*)(int *)'
| |-FieldDecl 0x229a2544db8 <line:165:5, col:40> col:11 keycheck 'int (*)(const int *)'
| |-FieldDecl 0x229a2544ed0 <line:166:5, col:35> col:11 keygenpub 'int (*)(int *)'
| |-FieldDecl 0x229a2542058 <line:167:5, col:50> col:11 keycopy 'int (*)(int *, const int *)'
| |-FieldDecl 0x229a2542168 <line:168:5, col:36> col:12 keyfinish 'void (*)(int *)'
| |-FieldDecl 0x229a2542570 <line:170:5, line:171:72> line:170:11 ecdh_compute_key 'int (*)(unsigned char **, size_t *, const int *, const int *)'
| `-FieldDecl 0x229a2542798 <line:172:5, col:77> col:11 blind_coordinates 'int (*)(const int *, int *, int *)'
|-RecordDecl 0x229a25427f0 <line:178:9, col:16> col:16 struct nistp224_pre_comp_st
|-TypedefDecl 0x229a2542908 <col:1, col:37> col:37 referenced NISTP224_PRE_COMP 'struct nistp224_pre_comp_st':'struct nistp224_pre_comp_st'
| `-ElaboratedType 0x229a25428b0 'struct nistp224_pre_comp_st' sugar
|   `-RecordType 0x229a2542890 'struct nistp224_pre_comp_st'
|     `-Record 0x229a25427f0 'nistp224_pre_comp_st'
|-RecordDecl 0x229a2542978 <line:179:9, col:16> col:16 struct nistp256_pre_comp_st
|-TypedefDecl 0x229a2542a88 <col:1, col:37> col:37 referenced NISTP256_PRE_COMP 'struct nistp256_pre_comp_st':'struct nistp256_pre_comp_st'
| `-ElaboratedType 0x229a2542a30 'struct nistp256_pre_comp_st' sugar
|   `-RecordType 0x229a2542a10 'struct nistp256_pre_comp_st'
|     `-Record 0x229a2542978 'nistp256_pre_comp_st'
|-RecordDecl 0x229a2542af8 <line:180:9, col:16> col:16 struct nistp521_pre_comp_st
|-TypedefDecl 0x229a2542c08 <col:1, col:37> col:37 referenced NISTP521_PRE_COMP 'struct nistp521_pre_comp_st':'struct nistp521_pre_comp_st'
| `-ElaboratedType 0x229a2542bb0 'struct nistp521_pre_comp_st' sugar
|   `-RecordType 0x229a2542b90 'struct nistp521_pre_comp_st'
|     `-Record 0x229a2542af8 'nistp521_pre_comp_st'
|-RecordDecl 0x229a2542c78 <line:181:9, col:16> col:16 struct nistz256_pre_comp_st
|-TypedefDecl 0x229a2542d88 <col:1, col:37> col:37 referenced NISTZ256_PRE_COMP 'struct nistz256_pre_comp_st':'struct nistz256_pre_comp_st'
| `-ElaboratedType 0x229a2542d30 'struct nistz256_pre_comp_st' sugar
|   `-RecordType 0x229a2542d10 'struct nistz256_pre_comp_st'
|     `-Record 0x229a2542c78 'nistz256_pre_comp_st'
|-RecordDecl 0x229a2542df8 <line:182:9, col:16> col:16 struct ec_pre_comp_st
|-TypedefDecl 0x229a2542f08 <col:1, col:31> col:31 referenced EC_PRE_COMP 'struct ec_pre_comp_st':'struct ec_pre_comp_st'
| `-ElaboratedType 0x229a2542eb0 'struct ec_pre_comp_st' sugar
|   `-RecordType 0x229a2542e90 'struct ec_pre_comp_st'
|     `-Record 0x229a2542df8 'ec_pre_comp_st'
|-RecordDecl 0x229a2544fc0 <line:184:1, line:249:1> line:184:8 invalid struct ec_group_st definition
| |-FieldDecl 0x229a2545098 <line:185:5, col:22> col:22 invalid meth 'const int *'
| |-FieldDecl 0x229a2545108 <line:186:5, col:15> col:15 invalid generator 'int *'
| |-FieldDecl 0x229a2545178 <line:187:5, col:13> col:13 invalid order 'int *'
| |-FieldDecl 0x229a25451e8 <col:5, col:21> col:21 invalid cofactor 'int *'
| |-FieldDecl 0x229a2545258 <line:188:5, col:9> col:9 curve_name 'int'
| |-FieldDecl 0x229a25452c8 <line:189:5, col:9> col:9 asn1_flag 'int'
| |-FieldDecl 0x229a2545338 <line:190:5, col:29> col:29 invalid asn1_form 'int'
| |-FieldDecl 0x229a25453a8 <line:191:5, col:20> col:20 seed 'unsigned char *'
| |-FieldDecl 0x229a2545410 <line:193:5, col:12> col:12 seed_len 'size_t':'unsigned long long'
| |-FieldDecl 0x229a2545480 <line:203:5, col:13> col:13 invalid field 'int *'
| |-FieldDecl 0x229a2545580 <line:211:5, col:15> col:9 poly 'int [6]'
| |-FieldDecl 0x229a25455f0 <line:219:5, col:13> col:13 invalid a 'int *'
| |-FieldDecl 0x229a2545660 <col:5, col:17> col:17 invalid b 'int *'
| |-FieldDecl 0x229a25456d0 <line:221:5, col:9> col:9 a_is_minus3 'int'
| |-FieldDecl 0x229a2545740 <line:223:5, col:11> col:11 field_data1 'void *'
| |-FieldDecl 0x229a25457b0 <line:225:5, col:11> col:11 field_data2 'void *'
| |-FieldDecl 0x229a2545b40 <line:227:5, line:228:36> line:227:11 field_mod_func 'int (*)(int *, const int *, const int *, int *)'
| |-FieldDecl 0x229a2545bb0 <line:230:5, col:18> col:18 invalid mont_data 'int *'
| |-EnumDecl 0x229a2545c08 <line:237:5, line:241:5> line:237:5
| | |-EnumConstantDecl 0x229a2545ce0 <line:238:9> col:9 PCT_none 'int'
| | |-EnumConstantDecl 0x229a2545d38 <line:239:9> col:9 PCT_nistp224 'int'
| | |-EnumConstantDecl 0x229a2545d90 <col:23> col:23 PCT_nistp256 'int'
| | |-EnumConstantDecl 0x229a2545de8 <col:37> col:37 PCT_nistp521 'int'
| | |-EnumConstantDecl 0x229a2545e40 <col:51> col:51 PCT_nistz256 'int'
| | `-EnumConstantDecl 0x229a2545e98 <line:240:9> col:9 PCT_ec 'int'
| |-FieldDecl 0x229a2545f48 <line:237:5, line:241:7> col:7 pre_comp_type 'enum (anonymous enum at .//openssl//file_jk/before\crypto\ec/ec_lcl.h:237:5)':'enum ec_group_st::(anonymous at .//openssl//file_jk/before\crypto\ec/ec_lcl.h:237:5)'
| |-RecordDecl 0x229a2545fd0 <line:242:5, line:248:5> line:242:5 union definition
| | |-FieldDecl 0x229a2546118 <line:243:9, col:28> col:28 nistp224 'NISTP224_PRE_COMP *'
| | |-FieldDecl 0x229a25461f8 <line:244:9, col:28> col:28 nistp256 'NISTP256_PRE_COMP *'
| | |-FieldDecl 0x229a25462d8 <line:245:9, col:28> col:28 nistp521 'NISTP521_PRE_COMP *'
| | |-FieldDecl 0x229a25463b8 <line:246:9, col:28> col:28 nistz256 'NISTZ256_PRE_COMP *'
| | `-FieldDecl 0x229a2546498 <line:247:9, col:22> col:22 ec 'EC_PRE_COMP *'
| `-FieldDecl 0x229a2546548 <line:242:5, line:248:7> col:7 pre_comp 'union (anonymous union at .//openssl//file_jk/before\crypto\ec/ec_lcl.h:242:5)':'union ec_group_st::(anonymous at .//openssl//file_jk/before\crypto\ec/ec_lcl.h:242:5)'
|-RecordDecl 0x229a25465a0 <line:256:1, line:269:1> line:256:8 invalid struct ec_key_st definition
| |-FieldDecl 0x229a2546678 <line:257:5, col:26> col:26 invalid meth 'const int *'
| |-FieldDecl 0x229a25466e8 <line:258:5, col:13> col:13 invalid engine 'int *'
| |-FieldDecl 0x229a2546758 <line:259:5, col:9> col:9 version 'int'
| |-FieldDecl 0x229a25467c8 <line:260:5, col:15> col:15 invalid group 'int *'
| |-FieldDecl 0x229a2546838 <line:261:5, col:15> col:15 invalid pub_key 'int *'
| |-FieldDecl 0x229a25468a8 <line:262:5, col:13> col:13 invalid priv_key 'int *'
| |-FieldDecl 0x229a2546918 <line:263:5, col:18> col:18 enc_flag 'unsigned int'
| |-FieldDecl 0x229a2546988 <line:264:5, col:29> col:29 invalid conv_form 'int'
| |-FieldDecl 0x229a25469f8 <line:265:5, col:9> col:9 references 'int'
| |-FieldDecl 0x229a2546a68 <line:266:5, col:9> col:9 flags 'int'
| |-FieldDecl 0x229a2546ad8 <line:267:5, col:20> col:20 invalid ex_data 'int'
| `-FieldDecl 0x229a2546b48 <line:268:5, col:20> col:20 invalid lock 'int *'
|-RecordDecl 0x229a2546ba0 <line:271:1, line:285:1> line:271:8 invalid struct ec_point_st definition
| |-FieldDecl 0x229a2546c78 <line:272:5, col:22> col:22 invalid meth 'const int *'
| |-FieldDecl 0x229a2546ce8 <line:274:5, col:9> col:9 curve_name 'int'
| |-FieldDecl 0x229a2546d58 <line:279:5, col:13> col:13 invalid X 'int *'
| |-FieldDecl 0x229a2546dc8 <line:280:5, col:13> col:13 invalid Y 'int *'
| |-FieldDecl 0x229a2546e38 <line:281:5, col:13> col:13 invalid Z 'int *'
| `-FieldDecl 0x229a2546ea8 <line:283:5, col:9> col:9 Z_is_one 'int'
|-FunctionDecl 0x229a254a0b0 <line:288:1, line:298:1> line:288:24 invalid ec_point_is_compat 'int (const int *, const int *)' static
| |-ParmVarDecl 0x229a2546f18 <col:43, col:59> col:59 invalid point 'const int *'
| |-ParmVarDecl 0x229a254a010 <line:289:43, col:59> col:59 invalid group 'const int *'
| `-CompoundStmt 0x229a254a268 <line:290:1, line:298:1>
|   |-IfStmt 0x229a254a218 <line:291:5, line:295:16>
|   | |-OpaqueValueExpr 0x229a254a200 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x229a254a1f0 <col:9, col:16>
|   |   `-IntegerLiteral 0x229a254a1c8 <col:16> 'int' 0
|   `-ReturnStmt 0x229a254a258 <line:297:5, col:12>
|     `-IntegerLiteral 0x229a254a230 <col:12> 'int' 1
|-FunctionDecl 0x229a254a388 <line:301:1, col:64> col:20 EC_nistp224_pre_comp_dup 'NISTP224_PRE_COMP *(NISTP224_PRE_COMP *)'
| `-ParmVarDecl 0x229a254a298 <col:45, col:63> col:64 'NISTP224_PRE_COMP *'
|-FunctionDecl 0x229a254a548 <line:302:1, col:64> col:20 EC_nistp256_pre_comp_dup 'NISTP256_PRE_COMP *(NISTP256_PRE_COMP *)'
| `-ParmVarDecl 0x229a254a458 <col:45, col:63> col:64 'NISTP256_PRE_COMP *'
|-FunctionDecl 0x229a254a708 <line:303:1, col:64> col:20 EC_nistp521_pre_comp_dup 'NISTP521_PRE_COMP *(NISTP521_PRE_COMP *)'
| `-ParmVarDecl 0x229a254a618 <col:45, col:63> col:64 'NISTP521_PRE_COMP *'
|-FunctionDecl 0x229a254a8c8 <line:304:1, col:64> col:20 EC_nistz256_pre_comp_dup 'NISTZ256_PRE_COMP *(NISTZ256_PRE_COMP *)'
| `-ParmVarDecl 0x229a254a7d8 <col:45, col:63> col:64 'NISTZ256_PRE_COMP *'
|-FunctionDecl 0x229a254aa28 prev 0x229a254a548 <line:305:1, col:64> col:20 EC_nistp256_pre_comp_dup 'NISTP256_PRE_COMP *(NISTP256_PRE_COMP *)'
| `-ParmVarDecl 0x229a254a998 <col:45, col:63> col:64 'NISTP256_PRE_COMP *'
|-FunctionDecl 0x229a254abd8 <line:306:1, col:46> col:14 EC_ec_pre_comp_dup 'EC_PRE_COMP *(EC_PRE_COMP *)'
| `-ParmVarDecl 0x229a254aae0 <col:33, col:45> col:46 'EC_PRE_COMP *'
|-FunctionDecl 0x229a254ad40 <line:308:1, col:38> col:6 invalid EC_pre_comp_free 'void (int *)'
| `-ParmVarDecl 0x229a254acb0 <col:23, col:33> col:33 invalid group 'int *'
|-FunctionDecl 0x229a254aee8 <line:309:1, col:51> col:6 EC_nistp224_pre_comp_free 'void (NISTP224_PRE_COMP *)'
| `-ParmVarDecl 0x229a254adf8 <col:32, col:50> col:51 'NISTP224_PRE_COMP *'
|-FunctionDecl 0x229a254b118 <line:310:1, col:51> col:6 EC_nistp256_pre_comp_free 'void (NISTP256_PRE_COMP *)'
| `-ParmVarDecl 0x229a254b020 <col:32, col:50> col:51 'NISTP256_PRE_COMP *'
|-FunctionDecl 0x229a254b2d8 <line:311:1, col:51> col:6 EC_nistp521_pre_comp_free 'void (NISTP521_PRE_COMP *)'
| `-ParmVarDecl 0x229a254b1e8 <col:32, col:50> col:51 'NISTP521_PRE_COMP *'
|-FunctionDecl 0x229a254b498 <line:312:1, col:51> col:6 EC_nistz256_pre_comp_free 'void (NISTZ256_PRE_COMP *)'
| `-ParmVarDecl 0x229a254b3a8 <col:32, col:50> col:51 'NISTZ256_PRE_COMP *'
|-FunctionDecl 0x229a254b658 <line:313:1, col:39> col:6 EC_ec_pre_comp_free 'void (EC_PRE_COMP *)'
| `-ParmVarDecl 0x229a254b568 <col:26, col:38> col:39 'EC_PRE_COMP *'
|-FunctionDecl 0x229a254bb10 <line:319:1, line:321:25> line:319:5 invalid ec_wNAF_mul 'int (const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-ParmVarDecl 0x229a254b730 <col:17, col:33> col:33 invalid group 'const int *'
| |-ParmVarDecl 0x229a254b7b0 <col:40, col:50> col:50 invalid r 'int *'
| |-ParmVarDecl 0x229a254b830 <col:53, col:67> col:67 invalid scalar 'const int *'
| |-ParmVarDecl 0x229a254b8a8 <line:320:17, col:24> col:24 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x229a254b938 <col:29, <invalid sloc>> col:45 invalid points 'const int **':'const int **'
| |-ParmVarDecl 0x229a254b9c8 <col:55, <invalid sloc>> col:69 invalid scalars 'const int **':'const int **'
| `-ParmVarDecl 0x229a254ba48 <line:321:17, <invalid sloc>> col:25 invalid 'int *'
|-FunctionDecl 0x229a254bd20 <line:322:1, col:54> col:5 invalid ec_wNAF_precompute_mult 'int (int *, int *)'
| |-ParmVarDecl 0x229a254bc00 <col:29, col:39> col:39 invalid group 'int *'
| `-ParmVarDecl 0x229a254bc80 <col:46, <invalid sloc>> col:54 invalid 'int *'
|-FunctionDecl 0x229a254be80 <line:323:1, col:55> col:5 invalid ec_wNAF_have_precompute_mult 'int (const int *)'
| `-ParmVarDecl 0x229a254bde8 <col:34, col:50> col:50 invalid group 'const int *'
|-FunctionDecl 0x229a254d040 <line:326:1, col:40> col:5 invalid ec_GFp_simple_group_init 'int (int *)'
| `-ParmVarDecl 0x229a254bf40 <col:30, <invalid sloc>> col:40 invalid 'int *'
|-FunctionDecl 0x229a254d190 <line:327:1, col:43> col:6 invalid ec_GFp_simple_group_finish 'void (int *)'
| `-ParmVarDecl 0x229a254d100 <col:33, <invalid sloc>> col:43 invalid 'int *'
|-FunctionDecl 0x229a254d2e0 <line:328:1, col:49> col:6 invalid ec_GFp_simple_group_clear_finish 'void (int *)'
| `-ParmVarDecl 0x229a254d250 <col:39, <invalid sloc>> col:49 invalid 'int *'
|-FunctionDecl 0x229a254d4c0 <line:329:1, col:58> col:5 invalid ec_GFp_simple_group_copy 'int (int *, const int *)'
| |-ParmVarDecl 0x229a254d3a0 <col:30, <invalid sloc>> col:40 invalid 'int *'
| `-ParmVarDecl 0x229a254d420 <col:42, <invalid sloc>> col:58 invalid 'const int *'
|-FunctionDecl 0x229a254d840 <line:330:1, line:331:77> line:330:5 invalid ec_GFp_simple_group_set_curve 'int (int *, const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x229a254d588 <col:35, <invalid sloc>> col:45 invalid 'int *'
| |-ParmVarDecl 0x229a254d608 <col:47, col:61> col:61 invalid p 'const int *'
| |-ParmVarDecl 0x229a254d688 <line:331:35, col:49> col:49 invalid a 'const int *'
| |-ParmVarDecl 0x229a254d708 <col:52, col:66> col:66 invalid b 'const int *'
| `-ParmVarDecl 0x229a254d788 <col:69, <invalid sloc>> col:77 invalid 'int *'
|-FunctionDecl 0x229a254dbd8 <line:332:1, line:333:54> line:332:5 invalid ec_GFp_simple_group_get_curve 'int (const int *, int *, int *, int *, int *)'
| |-ParmVarDecl 0x229a254d920 <col:35, <invalid sloc>> col:51 invalid 'const int *'
| |-ParmVarDecl 0x229a254d9a0 <col:53, col:61> col:61 invalid p 'int *'
| |-ParmVarDecl 0x229a254da20 <col:64, col:72> col:72 invalid a 'int *'
| |-ParmVarDecl 0x229a254daa0 <line:333:35, col:43> col:43 invalid b 'int *'
| `-ParmVarDecl 0x229a254db20 <col:46, <invalid sloc>> col:54 invalid 'int *'
|-FunctionDecl 0x229a254dd50 <line:334:1, col:52> col:5 invalid ec_GFp_simple_group_get_degree 'int (const int *)'
| `-ParmVarDecl 0x229a254dcb8 <col:36, <invalid sloc>> col:52 invalid 'const int *'
|-FunctionDecl 0x229a254df30 <line:335:1, col:70> col:5 invalid ec_GFp_simple_group_check_discriminant 'int (const int *, int *)'
| |-ParmVarDecl 0x229a254de10 <col:44, <invalid sloc>> col:60 invalid 'const int *'
| `-ParmVarDecl 0x229a254de90 <col:62, <invalid sloc>> col:70 invalid 'int *'
|-FunctionDecl 0x229a2549098 <line:336:1, col:40> col:5 invalid ec_GFp_simple_point_init 'int (int *)'
| `-ParmVarDecl 0x229a2549000 <col:30, <invalid sloc>> col:40 invalid 'int *'
|-FunctionDecl 0x229a25491e8 <line:337:1, col:43> col:6 invalid ec_GFp_simple_point_finish 'void (int *)'
| `-ParmVarDecl 0x229a2549158 <col:33, <invalid sloc>> col:43 invalid 'int *'
|-FunctionDecl 0x229a2549338 <line:338:1, col:49> col:6 invalid ec_GFp_simple_point_clear_finish 'void (int *)'
| `-ParmVarDecl 0x229a25492a8 <col:39, <invalid sloc>> col:49 invalid 'int *'
|-FunctionDecl 0x229a2549518 <line:339:1, col:58> col:5 invalid ec_GFp_simple_point_copy 'int (int *, const int *)'
| |-ParmVarDecl 0x229a25493f8 <col:30, <invalid sloc>> col:40 invalid 'int *'
| `-ParmVarDecl 0x229a2549478 <col:42, <invalid sloc>> col:58 invalid 'const int *'
|-FunctionDecl 0x229a2549700 <line:340:1, col:69> col:5 invalid ec_GFp_simple_point_set_to_infinity 'int (const int *, int *)'
| |-ParmVarDecl 0x229a25495e0 <col:41, <invalid sloc>> col:57 invalid 'const int *'
| `-ParmVarDecl 0x229a2549660 <col:59, <invalid sloc>> col:69 invalid 'int *'
|-FunctionDecl 0x229a2549b08 <line:341:1, line:344:76> line:341:5 invalid ec_GFp_simple_set_Jprojective_coordinates_GFp 'int (const int *, int *, const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x229a25497c8 <col:51, <invalid sloc>> col:67 invalid 'const int *'
| |-ParmVarDecl 0x229a2549848 <line:342:51, <invalid sloc>> col:61 invalid 'int *'
| |-ParmVarDecl 0x229a25498c8 <col:63, col:77> col:77 invalid x 'const int *'
| |-ParmVarDecl 0x229a2549948 <line:343:51, col:65> col:65 invalid y 'const int *'
| |-ParmVarDecl 0x229a25499c8 <line:344:51, col:65> col:65 invalid z 'const int *'
| `-ParmVarDecl 0x229a2549a48 <col:68, <invalid sloc>> col:76 invalid 'int *'
|-FunctionDecl 0x229a2549f30 <line:345:1, line:348:59> line:345:5 invalid ec_GFp_simple_get_Jprojective_coordinates_GFp 'int (const int *, const int *, int *, int *, int *, int *)'
| |-ParmVarDecl 0x229a2549bf0 <col:51, <invalid sloc>> col:67 invalid 'const int *'
| |-ParmVarDecl 0x229a2549c70 <line:346:51, <invalid sloc>> col:67 invalid 'const int *'
| |-ParmVarDecl 0x229a2549cf0 <col:69, col:77> col:77 invalid x 'int *'
| |-ParmVarDecl 0x229a2549d70 <line:347:51, col:59> col:59 invalid y 'int *'
| |-ParmVarDecl 0x229a2549df0 <col:62, col:70> col:70 invalid z 'int *'
| `-ParmVarDecl 0x229a2549e70 <line:348:51, <invalid sloc>> col:59 invalid 'int *'
|-FunctionDecl 0x229a2553370 <line:349:1, line:351:73> line:349:5 invalid ec_GFp_simple_point_set_affine_coordinates 'int (const int *, int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x229a25530b8 <col:48, <invalid sloc>> col:64 invalid 'const int *'
| |-ParmVarDecl 0x229a2553138 <col:66, <invalid sloc>> col:76 invalid 'int *'
| |-ParmVarDecl 0x229a25531b8 <line:350:48, col:62> col:62 invalid x 'const int *'
| |-ParmVarDecl 0x229a2553238 <line:351:48, col:62> col:62 invalid y 'const int *'
| `-ParmVarDecl 0x229a25532b8 <col:65, <invalid sloc>> col:73 invalid 'int *'
|-FunctionDecl 0x229a2553708 <line:352:1, line:354:67> line:352:5 invalid ec_GFp_simple_point_get_affine_coordinates 'int (const int *, const int *, int *, int *, int *)'
| |-ParmVarDecl 0x229a2553450 <col:48, <invalid sloc>> col:64 invalid 'const int *'
| |-ParmVarDecl 0x229a25534d0 <line:353:48, <invalid sloc>> col:64 invalid 'const int *'
| |-ParmVarDecl 0x229a2553550 <col:66, col:74> col:74 invalid x 'int *'
| |-ParmVarDecl 0x229a25535d0 <line:354:48, col:56> col:56 invalid y 'int *'
| `-ParmVarDecl 0x229a2553650 <col:59, <invalid sloc>> col:67 invalid 'int *'
|-FunctionDecl 0x229a2553aa0 <line:355:1, line:357:54> line:355:5 invalid ec_GFp_simple_set_compressed_coordinates 'int (const int *, int *, const int *, int, int *)'
| |-ParmVarDecl 0x229a25537e8 <col:46, <invalid sloc>> col:62 invalid 'const int *'
| |-ParmVarDecl 0x229a2553868 <col:64, <invalid sloc>> col:74 invalid 'int *'
| |-ParmVarDecl 0x229a25538e8 <line:356:46, col:60> col:60 invalid x 'const int *'
| |-ParmVarDecl 0x229a2553968 <col:63, col:67> col:67 y_bit 'int'
| `-ParmVarDecl 0x229a25539e8 <line:357:46, <invalid sloc>> col:54 invalid 'int *'
|-FunctionDecl 0x229a2553eb0 <line:358:1, line:360:72> line:358:8 invalid ec_GFp_simple_point2oct 'size_t (const int *, const int *, int, unsigned char *, size_t, int *)'
| |-ParmVarDecl 0x229a2553b80 <col:32, <invalid sloc>> col:48 invalid 'const int *'
| |-ParmVarDecl 0x229a2553c00 <col:50, <invalid sloc>> col:66 invalid 'const int *'
| |-ParmVarDecl 0x229a2553c80 <line:359:32, col:56> col:56 invalid form 'int'
| |-ParmVarDecl 0x229a2553d00 <line:360:32, col:47> col:47 buf 'unsigned char *'
| |-ParmVarDecl 0x229a2553d78 <col:52, col:59> col:59 len 'size_t':'unsigned long long'
| `-ParmVarDecl 0x229a2553df8 <col:64, <invalid sloc>> col:72 invalid 'int *'
|-FunctionDecl 0x229a254c1e0 <line:361:1, line:362:75> line:361:5 invalid ec_GFp_simple_oct2point 'int (const int *, int *, const unsigned char *, size_t, int *)'
| |-ParmVarDecl 0x229a2553f98 <col:29, <invalid sloc>> col:45 invalid 'const int *'
| |-ParmVarDecl 0x229a2554018 <col:47, <invalid sloc>> col:57 invalid 'int *'
| |-ParmVarDecl 0x229a254c030 <line:362:29, col:50> col:50 buf 'const unsigned char *'
| |-ParmVarDecl 0x229a254c0a8 <col:55, col:62> col:62 len 'size_t':'unsigned long long'
| `-ParmVarDecl 0x229a254c128 <col:67, <invalid sloc>> col:75 invalid 'int *'
|-FunctionDecl 0x229a254c578 <line:363:1, line:364:50> line:363:5 invalid ec_GFp_simple_add 'int (const int *, int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x229a254c2c0 <col:23, <invalid sloc>> col:39 invalid 'const int *'
| |-ParmVarDecl 0x229a254c340 <col:41, col:51> col:51 invalid r 'int *'
| |-ParmVarDecl 0x229a254c3c0 <col:54, col:70> col:70 invalid a 'const int *'
| |-ParmVarDecl 0x229a254c440 <line:364:23, col:39> col:39 invalid b 'const int *'
| `-ParmVarDecl 0x229a254c4c0 <col:42, <invalid sloc>> col:50 invalid 'int *'
|-FunctionDecl 0x229a254c888 <line:365:1, line:366:31> line:365:5 invalid ec_GFp_simple_dbl 'int (const int *, int *, const int *, int *)'
| |-ParmVarDecl 0x229a254c658 <col:23, <invalid sloc>> col:39 invalid 'const int *'
| |-ParmVarDecl 0x229a254c6d8 <col:41, col:51> col:51 invalid r 'int *'
| |-ParmVarDecl 0x229a254c758 <col:54, col:70> col:70 invalid a 'const int *'
| `-ParmVarDecl 0x229a254c7d8 <line:366:23, <invalid sloc>> col:31 invalid 'int *'
|-FunctionDecl 0x229a254cb08 <line:367:1, col:64> col:5 invalid ec_GFp_simple_invert 'int (const int *, int *, int *)'
| |-ParmVarDecl 0x229a254c960 <col:26, <invalid sloc>> col:42 invalid 'const int *'
| |-ParmVarDecl 0x229a254c9e0 <col:44, <invalid sloc>> col:54 invalid 'int *'
| `-ParmVarDecl 0x229a254ca60 <col:56, <invalid sloc>> col:64 invalid 'int *'
|-FunctionDecl 0x229a254ccf8 <line:368:1, col:68> col:5 invalid ec_GFp_simple_is_at_infinity 'int (const int *, const int *)'
| |-ParmVarDecl 0x229a254cbd8 <col:34, <invalid sloc>> col:50 invalid 'const int *'
| `-ParmVarDecl 0x229a254cc58 <col:52, <invalid sloc>> col:68 invalid 'const int *'
|-FunctionDecl 0x229a254cf68 <line:369:1, col:75> col:5 invalid ec_GFp_simple_is_on_curve 'int (const int *, const int *, int *)'
| |-ParmVarDecl 0x229a254cdc0 <col:31, <invalid sloc>> col:47 invalid 'const int *'
| |-ParmVarDecl 0x229a254ce40 <col:49, <invalid sloc>> col:65 invalid 'const int *'
| `-ParmVarDecl 0x229a254cec0 <col:67, <invalid sloc>> col:75 invalid 'int *'
|-FunctionDecl 0x229a254e298 <line:370:1, line:371:31> line:370:5 invalid ec_GFp_simple_cmp 'int (const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x229a254e068 <col:23, <invalid sloc>> col:39 invalid 'const int *'
| |-ParmVarDecl 0x229a254e0e8 <col:41, col:57> col:57 invalid a 'const int *'
| |-ParmVarDecl 0x229a254e168 <col:60, col:76> col:76 invalid b 'const int *'
| `-ParmVarDecl 0x229a254e1e8 <line:371:23, <invalid sloc>> col:31 invalid 'int *'
|-FunctionDecl 0x229a254e518 <line:372:1, col:69> col:5 invalid ec_GFp_simple_make_affine 'int (const int *, int *, int *)'
| |-ParmVarDecl 0x229a254e370 <col:31, <invalid sloc>> col:47 invalid 'const int *'
| |-ParmVarDecl 0x229a254e3f0 <col:49, <invalid sloc>> col:59 invalid 'int *'
| `-ParmVarDecl 0x229a254e470 <col:61, <invalid sloc>> col:69 invalid 'int *'
|-FunctionDecl 0x229a254e820 <line:373:1, line:374:60> line:373:5 invalid ec_GFp_simple_points_make_affine 'int (const int *, size_t, int **, int *)'
| |-ParmVarDecl 0x229a254e5e8 <col:38, <invalid sloc>> col:54 invalid 'const int *'
| |-ParmVarDecl 0x229a254e660 <col:56, col:63> col:63 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x229a254e6f0 <line:374:38, <invalid sloc>> col:48 invalid 'int **':'int **'
| `-ParmVarDecl 0x229a254e770 <col:52, <invalid sloc>> col:60 invalid 'int *'
|-FunctionDecl 0x229a254ebb0 <line:375:1, line:376:54> line:375:5 invalid ec_GFp_simple_field_mul 'int (const int *, int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x229a254e8f8 <col:29, <invalid sloc>> col:45 invalid 'const int *'
| |-ParmVarDecl 0x229a254e978 <col:47, col:55> col:55 invalid r 'int *'
| |-ParmVarDecl 0x229a254e9f8 <col:58, col:72> col:72 invalid a 'const int *'
| |-ParmVarDecl 0x229a254ea78 <line:376:29, col:43> col:43 invalid b 'const int *'
| `-ParmVarDecl 0x229a254eaf8 <col:46, <invalid sloc>> col:54 invalid 'int *'
|-FunctionDecl 0x229a254eec0 <line:377:1, line:378:37> line:377:5 invalid ec_GFp_simple_field_sqr 'int (const int *, int *, const int *, int *)'
| |-ParmVarDecl 0x229a254ec90 <col:29, <invalid sloc>> col:45 invalid 'const int *'
| |-ParmVarDecl 0x229a254ed10 <col:47, col:55> col:55 invalid r 'int *'
| |-ParmVarDecl 0x229a254ed90 <col:58, col:72> col:72 invalid a 'const int *'
| `-ParmVarDecl 0x229a254ee10 <line:378:29, <invalid sloc>> col:37 invalid 'int *'
|-FunctionDecl 0x229a25541d8 <line:379:1, line:380:48> line:379:5 invalid ec_GFp_simple_blind_coordinates 'int (const int *, int *, int *)'
| |-ParmVarDecl 0x229a254ef98 <col:37, col:53> col:53 invalid group 'const int *'
| |-ParmVarDecl 0x229a25540b0 <col:60, col:70> col:70 invalid p 'int *'
| `-ParmVarDecl 0x229a2554130 <line:380:37, col:45> col:45 invalid ctx 'int *'
|-FunctionDecl 0x229a2554340 <line:383:1, col:38> col:5 invalid ec_GFp_mont_group_init 'int (int *)'
| `-ParmVarDecl 0x229a25542a8 <col:28, <invalid sloc>> col:38 invalid 'int *'
|-FunctionDecl 0x229a25546b8 <line:384:1, line:385:58> line:384:5 invalid ec_GFp_mont_group_set_curve 'int (int *, const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x229a2554400 <col:33, <invalid sloc>> col:43 invalid 'int *'
| |-ParmVarDecl 0x229a2554480 <col:45, col:59> col:59 invalid p 'const int *'
| |-ParmVarDecl 0x229a2554500 <col:62, col:76> col:76 invalid a 'const int *'
| |-ParmVarDecl 0x229a2554580 <line:385:33, col:47> col:47 invalid b 'const int *'
| `-ParmVarDecl 0x229a2554600 <col:50, <invalid sloc>> col:58 invalid 'int *'
|-FunctionDecl 0x229a2554828 <line:386:1, col:41> col:6 invalid ec_GFp_mont_group_finish 'void (int *)'
| `-ParmVarDecl 0x229a2554798 <col:31, <invalid sloc>> col:41 invalid 'int *'
|-FunctionDecl 0x229a2554978 <line:387:1, col:47> col:6 invalid ec_GFp_mont_group_clear_finish 'void (int *)'
| `-ParmVarDecl 0x229a25548e8 <col:37, <invalid sloc>> col:47 invalid 'int *'
|-FunctionDecl 0x229a2554b58 <line:388:1, col:56> col:5 invalid ec_GFp_mont_group_copy 'int (int *, const int *)'
| |-ParmVarDecl 0x229a2554a38 <col:28, <invalid sloc>> col:38 invalid 'int *'
| `-ParmVarDecl 0x229a2554ab8 <col:40, <invalid sloc>> col:56 invalid 'const int *'
|-FunctionDecl 0x229a2554ed8 <line:389:1, line:390:52> line:389:5 invalid ec_GFp_mont_field_mul 'int (const int *, int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x229a2554c20 <col:27, <invalid sloc>> col:43 invalid 'const int *'
| |-ParmVarDecl 0x229a2554ca0 <col:45, col:53> col:53 invalid r 'int *'
| |-ParmVarDecl 0x229a2554d20 <col:56, col:70> col:70 invalid a 'const int *'
| |-ParmVarDecl 0x229a2554da0 <line:390:27, col:41> col:41 invalid b 'const int *'
| `-ParmVarDecl 0x229a2554e20 <col:44, <invalid sloc>> col:52 invalid 'int *'
|-FunctionDecl 0x229a2555208 <line:391:1, line:392:35> line:391:5 invalid ec_GFp_mont_field_sqr 'int (const int *, int *, const int *, int *)'
| |-ParmVarDecl 0x229a2554fb8 <col:27, <invalid sloc>> col:43 invalid 'const int *'
| |-ParmVarDecl 0x229a2555038 <col:45, col:53> col:53 invalid r 'int *'
| |-ParmVarDecl 0x229a25550d8 <col:56, col:70> col:70 invalid a 'const int *'
| `-ParmVarDecl 0x229a2555158 <line:392:27, <invalid sloc>> col:35 invalid 'int *'
|-FunctionDecl 0x229a2555510 <line:393:1, line:394:38> line:393:5 invalid ec_GFp_mont_field_encode 'int (const int *, int *, const int *, int *)'
| |-ParmVarDecl 0x229a25552e0 <col:30, <invalid sloc>> col:46 invalid 'const int *'
| |-ParmVarDecl 0x229a2555360 <col:48, col:56> col:56 invalid r 'int *'
| |-ParmVarDecl 0x229a25553e0 <col:59, col:73> col:73 invalid a 'const int *'
| `-ParmVarDecl 0x229a2555460 <line:394:30, <invalid sloc>> col:38 invalid 'int *'
|-FunctionDecl 0x229a2555818 <line:395:1, line:396:38> line:395:5 invalid ec_GFp_mont_field_decode 'int (const int *, int *, const int *, int *)'
| |-ParmVarDecl 0x229a25555e8 <col:30, <invalid sloc>> col:46 invalid 'const int *'
| |-ParmVarDecl 0x229a2555668 <col:48, col:56> col:56 invalid r 'int *'
| |-ParmVarDecl 0x229a25556e8 <col:59, col:73> col:73 invalid a 'const int *'
| `-ParmVarDecl 0x229a2555768 <line:396:30, <invalid sloc>> col:38 invalid 'int *'
|-FunctionDecl 0x229a2555a98 <line:397:1, col:71> col:5 invalid ec_GFp_mont_field_set_to_one 'int (const int *, int *, int *)'
| |-ParmVarDecl 0x229a25558f0 <col:34, <invalid sloc>> col:50 invalid 'const int *'
| |-ParmVarDecl 0x229a2555970 <col:52, col:60> col:60 invalid r 'int *'
| `-ParmVarDecl 0x229a25559f0 <col:63, <invalid sloc>> col:71 invalid 'int *'
|-FunctionDecl 0x229a2555c88 <line:400:1, col:63> col:5 invalid ec_GFp_nist_group_copy 'int (int *, const int *)'
| |-ParmVarDecl 0x229a2555b68 <col:28, col:38> col:38 invalid dest 'int *'
| `-ParmVarDecl 0x229a2555be8 <col:44, col:60> col:60 invalid src 'const int *'
|-FunctionDecl 0x229a2556008 <line:401:1, line:402:58> line:401:5 invalid ec_GFp_nist_group_set_curve 'int (int *, const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x229a2555d50 <col:33, <invalid sloc>> col:43 invalid 'int *'
| |-ParmVarDecl 0x229a2555dd0 <col:45, col:59> col:59 invalid p 'const int *'
| |-ParmVarDecl 0x229a2555e50 <col:62, col:76> col:76 invalid a 'const int *'
| |-ParmVarDecl 0x229a2555ed0 <line:402:33, col:47> col:47 invalid b 'const int *'
| `-ParmVarDecl 0x229a2555f50 <col:50, <invalid sloc>> col:58 invalid 'int *'
|-FunctionDecl 0x229a254f358 <line:403:1, line:404:52> line:403:5 invalid ec_GFp_nist_field_mul 'int (const int *, int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x229a254f0a0 <col:27, <invalid sloc>> col:43 invalid 'const int *'
| |-ParmVarDecl 0x229a254f120 <col:45, col:53> col:53 invalid r 'int *'
| |-ParmVarDecl 0x229a254f1a0 <col:56, col:70> col:70 invalid a 'const int *'
| |-ParmVarDecl 0x229a254f220 <line:404:27, col:41> col:41 invalid b 'const int *'
| `-ParmVarDecl 0x229a254f2a0 <col:44, <invalid sloc>> col:52 invalid 'int *'
|-FunctionDecl 0x229a254f668 <line:405:1, line:406:35> line:405:5 invalid ec_GFp_nist_field_sqr 'int (const int *, int *, const int *, int *)'
| |-ParmVarDecl 0x229a254f438 <col:27, <invalid sloc>> col:43 invalid 'const int *'
| |-ParmVarDecl 0x229a254f4b8 <col:45, col:53> col:53 invalid r 'int *'
| |-ParmVarDecl 0x229a254f538 <col:56, col:70> col:70 invalid a 'const int *'
| `-ParmVarDecl 0x229a254f5b8 <line:406:27, <invalid sloc>> col:35 invalid 'int *'
|-FunctionDecl 0x229a254f7d8 <line:409:1, col:41> col:5 invalid ec_GF2m_simple_group_init 'int (int *)'
| `-ParmVarDecl 0x229a254f740 <col:31, <invalid sloc>> col:41 invalid 'int *'
|-FunctionDecl 0x229a254f928 <line:410:1, col:44> col:6 invalid ec_GF2m_simple_group_finish 'void (int *)'
| `-ParmVarDecl 0x229a254f898 <col:34, <invalid sloc>> col:44 invalid 'int *'
|-FunctionDecl 0x229a254fa78 <line:411:1, col:50> col:6 invalid ec_GF2m_simple_group_clear_finish 'void (int *)'
| `-ParmVarDecl 0x229a254f9e8 <col:40, <invalid sloc>> col:50 invalid 'int *'
|-FunctionDecl 0x229a254fc58 <line:412:1, col:59> col:5 invalid ec_GF2m_simple_group_copy 'int (int *, const int *)'
| |-ParmVarDecl 0x229a254fb38 <col:31, <invalid sloc>> col:41 invalid 'int *'
| `-ParmVarDecl 0x229a254fbb8 <col:43, <invalid sloc>> col:59 invalid 'const int *'
|-FunctionDecl 0x229a25570e0 <line:413:1, line:415:44> line:413:5 invalid ec_GF2m_simple_group_set_curve 'int (int *, const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x229a254fd20 <col:36, <invalid sloc>> col:46 invalid 'int *'
| |-ParmVarDecl 0x229a254fda0 <col:48, col:62> col:62 invalid p 'const int *'
| |-ParmVarDecl 0x229a254fe20 <line:414:36, col:50> col:50 invalid a 'const int *'
| |-ParmVarDecl 0x229a254fea0 <col:53, col:67> col:67 invalid b 'const int *'
| `-ParmVarDecl 0x229a254ff20 <line:415:36, <invalid sloc>> col:44 invalid 'int *'
|-FunctionDecl 0x229a2557478 <line:416:1, line:417:55> line:416:5 invalid ec_GF2m_simple_group_get_curve 'int (const int *, int *, int *, int *, int *)'
| |-ParmVarDecl 0x229a25571c0 <col:36, <invalid sloc>> col:52 invalid 'const int *'
| |-ParmVarDecl 0x229a2557240 <col:54, col:62> col:62 invalid p 'int *'
| |-ParmVarDecl 0x229a25572c0 <col:65, col:73> col:73 invalid a 'int *'
| |-ParmVarDecl 0x229a2557340 <line:417:36, col:44> col:44 invalid b 'int *'
| `-ParmVarDecl 0x229a25573c0 <col:47, <invalid sloc>> col:55 invalid 'int *'
|-FunctionDecl 0x229a25575f0 <line:418:1, col:53> col:5 invalid ec_GF2m_simple_group_get_degree 'int (const int *)'
| `-ParmVarDecl 0x229a2557558 <col:37, <invalid sloc>> col:53 invalid 'const int *'
|-FunctionDecl 0x229a25577d0 <line:419:1, col:71> col:5 invalid ec_GF2m_simple_group_check_discriminant 'int (const int *, int *)'
| |-ParmVarDecl 0x229a25576b0 <col:45, <invalid sloc>> col:61 invalid 'const int *'
| `-ParmVarDecl 0x229a2557730 <col:63, <invalid sloc>> col:71 invalid 'int *'
|-FunctionDecl 0x229a2557930 <line:420:1, col:41> col:5 invalid ec_GF2m_simple_point_init 'int (int *)'
| `-ParmVarDecl 0x229a2557898 <col:31, <invalid sloc>> col:41 invalid 'int *'
|-FunctionDecl 0x229a2557a80 <line:421:1, col:44> col:6 invalid ec_GF2m_simple_point_finish 'void (int *)'
| `-ParmVarDecl 0x229a25579f0 <col:34, <invalid sloc>> col:44 invalid 'int *'
|-FunctionDecl 0x229a2557bd0 <line:422:1, col:50> col:6 invalid ec_GF2m_simple_point_clear_finish 'void (int *)'
| `-ParmVarDecl 0x229a2557b40 <col:40, <invalid sloc>> col:50 invalid 'int *'
|-FunctionDecl 0x229a2557db0 <line:423:1, col:59> col:5 invalid ec_GF2m_simple_point_copy 'int (int *, const int *)'
| |-ParmVarDecl 0x229a2557c90 <col:31, <invalid sloc>> col:41 invalid 'int *'
| `-ParmVarDecl 0x229a2557d10 <col:43, <invalid sloc>> col:59 invalid 'const int *'
|-FunctionDecl 0x229a2557f98 <line:424:1, col:70> col:5 invalid ec_GF2m_simple_point_set_to_infinity 'int (const int *, int *)'
| |-ParmVarDecl 0x229a2557e78 <col:42, <invalid sloc>> col:58 invalid 'const int *'
| `-ParmVarDecl 0x229a2557ef8 <col:60, <invalid sloc>> col:70 invalid 'int *'
|-FunctionDecl 0x229a25502a8 <line:425:1, line:427:74> line:425:5 invalid ec_GF2m_simple_point_set_affine_coordinates 'int (const int *, int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x229a2558060 <col:49, <invalid sloc>> col:65 invalid 'const int *'
| |-ParmVarDecl 0x229a2550070 <col:67, <invalid sloc>> col:77 invalid 'int *'
| |-ParmVarDecl 0x229a25500f0 <line:426:49, col:63> col:63 invalid x 'const int *'
| |-ParmVarDecl 0x229a2550170 <line:427:49, col:63> col:63 invalid y 'const int *'
| `-ParmVarDecl 0x229a25501f0 <col:66, <invalid sloc>> col:74 invalid 'int *'
|-FunctionDecl 0x229a2550640 <line:428:1, line:430:68> line:428:5 invalid ec_GF2m_simple_point_get_affine_coordinates 'int (const int *, const int *, int *, int *, int *)'
| |-ParmVarDecl 0x229a2550388 <col:49, <invalid sloc>> col:65 invalid 'const int *'
| |-ParmVarDecl 0x229a2550408 <line:429:49, <invalid sloc>> col:65 invalid 'const int *'
| |-ParmVarDecl 0x229a2550488 <col:67, col:75> col:75 invalid x 'int *'
| |-ParmVarDecl 0x229a2550508 <line:430:49, col:57> col:57 invalid y 'int *'
| `-ParmVarDecl 0x229a2550588 <col:60, <invalid sloc>> col:68 invalid 'int *'
|-FunctionDecl 0x229a25509d8 <line:431:1, line:433:55> line:431:5 invalid ec_GF2m_simple_set_compressed_coordinates 'int (const int *, int *, const int *, int, int *)'
| |-ParmVarDecl 0x229a2550720 <col:47, <invalid sloc>> col:63 invalid 'const int *'
| |-ParmVarDecl 0x229a25507a0 <col:65, <invalid sloc>> col:75 invalid 'int *'
| |-ParmVarDecl 0x229a2550820 <line:432:47, col:61> col:61 invalid x 'const int *'
| |-ParmVarDecl 0x229a25508a0 <col:64, col:68> col:68 y_bit 'int'
| `-ParmVarDecl 0x229a2550920 <line:433:47, <invalid sloc>> col:55 invalid 'int *'
|-FunctionDecl 0x229a2550de8 <line:434:1, line:436:73> line:434:8 invalid ec_GF2m_simple_point2oct 'size_t (const int *, const int *, int, unsigned char *, size_t, int *)'
| |-ParmVarDecl 0x229a2550ab8 <col:33, <invalid sloc>> col:49 invalid 'const int *'
| |-ParmVarDecl 0x229a2550b38 <col:51, <invalid sloc>> col:67 invalid 'const int *'
| |-ParmVarDecl 0x229a2550bb8 <line:435:33, col:57> col:57 invalid form 'int'
| |-ParmVarDecl 0x229a2550c38 <line:436:33, col:48> col:48 buf 'unsigned char *'
| |-ParmVarDecl 0x229a2550cb0 <col:53, col:60> col:60 len 'size_t':'unsigned long long'
| `-ParmVarDecl 0x229a2550d30 <col:65, <invalid sloc>> col:73 invalid 'int *'
|-FunctionDecl 0x229a2558228 <line:437:1, line:438:76> line:437:5 invalid ec_GF2m_simple_oct2point 'int (const int *, int *, const unsigned char *, size_t, int *)'
| |-ParmVarDecl 0x229a2550ed0 <col:30, <invalid sloc>> col:46 invalid 'const int *'
| |-ParmVarDecl 0x229a2550f50 <col:48, <invalid sloc>> col:58 invalid 'int *'
| |-ParmVarDecl 0x229a2550fd0 <line:438:30, col:51> col:51 buf 'const unsigned char *'
| |-ParmVarDecl 0x229a25580f0 <col:56, col:63> col:63 len 'size_t':'unsigned long long'
| `-ParmVarDecl 0x229a2558170 <col:68, <invalid sloc>> col:76 invalid 'int *'
|-FunctionDecl 0x229a25585c0 <line:439:1, line:440:51> line:439:5 invalid ec_GF2m_simple_add 'int (const int *, int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x229a2558308 <col:24, <invalid sloc>> col:40 invalid 'const int *'
| |-ParmVarDecl 0x229a2558388 <col:42, col:52> col:52 invalid r 'int *'
| |-ParmVarDecl 0x229a2558408 <col:55, col:71> col:71 invalid a 'const int *'
| |-ParmVarDecl 0x229a2558488 <line:440:24, col:40> col:40 invalid b 'const int *'
| `-ParmVarDecl 0x229a2558508 <col:43, <invalid sloc>> col:51 invalid 'int *'
|-FunctionDecl 0x229a25588d0 <line:441:1, line:442:32> line:441:5 invalid ec_GF2m_simple_dbl 'int (const int *, int *, const int *, int *)'
| |-ParmVarDecl 0x229a25586a0 <col:24, <invalid sloc>> col:40 invalid 'const int *'
| |-ParmVarDecl 0x229a2558720 <col:42, col:52> col:52 invalid r 'int *'
| |-ParmVarDecl 0x229a25587a0 <col:55, col:71> col:71 invalid a 'const int *'
| `-ParmVarDecl 0x229a2558820 <line:442:24, <invalid sloc>> col:32 invalid 'int *'
|-FunctionDecl 0x229a2558b50 <line:443:1, col:65> col:5 invalid ec_GF2m_simple_invert 'int (const int *, int *, int *)'
| |-ParmVarDecl 0x229a25589a8 <col:27, <invalid sloc>> col:43 invalid 'const int *'
| |-ParmVarDecl 0x229a2558a28 <col:45, <invalid sloc>> col:55 invalid 'int *'
| `-ParmVarDecl 0x229a2558aa8 <col:57, <invalid sloc>> col:65 invalid 'int *'
|-FunctionDecl 0x229a2558d40 <line:444:1, col:69> col:5 invalid ec_GF2m_simple_is_at_infinity 'int (const int *, const int *)'
| |-ParmVarDecl 0x229a2558c20 <col:35, <invalid sloc>> col:51 invalid 'const int *'
| `-ParmVarDecl 0x229a2558ca0 <col:53, <invalid sloc>> col:69 invalid 'const int *'
|-FunctionDecl 0x229a2558fb0 <line:445:1, col:76> col:5 invalid ec_GF2m_simple_is_on_curve 'int (const int *, const int *, int *)'
| |-ParmVarDecl 0x229a2558e08 <col:32, <invalid sloc>> col:48 invalid 'const int *'
| |-ParmVarDecl 0x229a2558e88 <col:50, <invalid sloc>> col:66 invalid 'const int *'
| `-ParmVarDecl 0x229a2558f08 <col:68, <invalid sloc>> col:76 invalid 'int *'
|-FunctionDecl 0x229a2551248 <line:446:1, line:447:32> line:446:5 invalid ec_GF2m_simple_cmp 'int (const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x229a2559080 <col:24, <invalid sloc>> col:40 invalid 'const int *'
| |-ParmVarDecl 0x229a2551098 <col:42, col:58> col:58 invalid a 'const int *'
| |-ParmVarDecl 0x229a2551118 <col:61, col:77> col:77 invalid b 'const int *'
| `-ParmVarDecl 0x229a2551198 <line:447:24, <invalid sloc>> col:32 invalid 'int *'
|-FunctionDecl 0x229a25514c8 <line:448:1, col:70> col:5 invalid ec_GF2m_simple_make_affine 'int (const int *, int *, int *)'
| |-ParmVarDecl 0x229a2551320 <col:32, <invalid sloc>> col:48 invalid 'const int *'
| |-ParmVarDecl 0x229a25513a0 <col:50, <invalid sloc>> col:60 invalid 'int *'
| `-ParmVarDecl 0x229a2551420 <col:62, <invalid sloc>> col:70 invalid 'int *'
|-FunctionDecl 0x229a25517d0 <line:449:1, line:450:61> line:449:5 invalid ec_GF2m_simple_points_make_affine 'int (const int *, size_t, int **, int *)'
| |-ParmVarDecl 0x229a2551598 <col:39, <invalid sloc>> col:55 invalid 'const int *'
| |-ParmVarDecl 0x229a2551610 <col:57, col:64> col:64 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x229a25516a0 <line:450:39, <invalid sloc>> col:49 invalid 'int **':'int **'
| `-ParmVarDecl 0x229a2551720 <col:53, <invalid sloc>> col:61 invalid 'int *'
|-FunctionDecl 0x229a2551b60 <line:451:1, line:452:55> line:451:5 invalid ec_GF2m_simple_field_mul 'int (const int *, int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x229a25518a8 <col:30, <invalid sloc>> col:46 invalid 'const int *'
| |-ParmVarDecl 0x229a2551928 <col:48, col:56> col:56 invalid r 'int *'
| |-ParmVarDecl 0x229a25519a8 <col:59, col:73> col:73 invalid a 'const int *'
| |-ParmVarDecl 0x229a2551a28 <line:452:30, col:44> col:44 invalid b 'const int *'
| `-ParmVarDecl 0x229a2551aa8 <col:47, <invalid sloc>> col:55 invalid 'int *'
|-FunctionDecl 0x229a2551e70 <line:453:1, line:454:38> line:453:5 invalid ec_GF2m_simple_field_sqr 'int (const int *, int *, const int *, int *)'
| |-ParmVarDecl 0x229a2551c40 <col:30, <invalid sloc>> col:46 invalid 'const int *'
| |-ParmVarDecl 0x229a2551cc0 <col:48, col:56> col:56 invalid r 'int *'
| |-ParmVarDecl 0x229a2551d40 <col:59, col:73> col:73 invalid a 'const int *'
| `-ParmVarDecl 0x229a2551dc0 <line:454:30, <invalid sloc>> col:38 invalid 'int *'
|-FunctionDecl 0x229a25592b8 <line:455:1, line:456:55> line:455:5 invalid ec_GF2m_simple_field_div 'int (const int *, int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x229a2551f48 <col:30, <invalid sloc>> col:46 invalid 'const int *'
| |-ParmVarDecl 0x229a2551fc8 <col:48, col:56> col:56 invalid r 'int *'
| |-ParmVarDecl 0x229a2559100 <col:59, col:73> col:73 invalid a 'const int *'
| |-ParmVarDecl 0x229a2559180 <line:456:30, col:44> col:44 invalid b 'const int *'
| `-ParmVarDecl 0x229a2559200 <col:47, <invalid sloc>> col:55 invalid 'int *'
|-FunctionDecl 0x229a2559778 <line:459:1, line:462:32> line:459:5 invalid ec_GF2m_simple_mul 'int (const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-ParmVarDecl 0x229a2559398 <col:24, col:40> col:40 invalid group 'const int *'
| |-ParmVarDecl 0x229a2559418 <col:47, col:57> col:57 invalid r 'int *'
| |-ParmVarDecl 0x229a2559498 <line:460:24, col:38> col:38 invalid scalar 'const int *'
| |-ParmVarDecl 0x229a2559510 <col:46, col:53> col:53 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x229a25595a0 <line:461:24, <invalid sloc>> col:40 invalid points 'const int **':'const int **'
| |-ParmVarDecl 0x229a2559630 <col:50, <invalid sloc>> col:64 invalid scalars 'const int **':'const int **'
| `-ParmVarDecl 0x229a25596b0 <line:462:24, <invalid sloc>> col:32 invalid 'int *'
|-FunctionDecl 0x229a2559988 <line:463:1, col:57> col:5 invalid ec_GF2m_precompute_mult 'int (int *, int *)'
| |-ParmVarDecl 0x229a2559868 <col:29, col:39> col:39 invalid group 'int *'
| `-ParmVarDecl 0x229a25598e8 <col:46, col:54> col:54 invalid ctx 'int *'
|-FunctionDecl 0x229a2559ae8 <line:464:1, col:55> col:5 invalid ec_GF2m_have_precompute_mult 'int (const int *)'
| `-ParmVarDecl 0x229a2559a50 <col:34, col:50> col:50 invalid group 'const int *'
|-FunctionDecl 0x229a2559c40 <line:468:1, col:47> col:5 invalid ec_GFp_nistp224_group_init 'int (int *)'
| `-ParmVarDecl 0x229a2559ba8 <col:32, col:42> col:42 invalid group 'int *'
|-FunctionDecl 0x229a2559fb8 <line:469:1, line:471:45> line:469:5 invalid ec_GFp_nistp224_group_set_curve 'int (int *, const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x229a2559d00 <col:37, col:47> col:47 invalid group 'int *'
| |-ParmVarDecl 0x229a2559d80 <col:54, col:68> col:68 invalid p 'const int *'
| |-ParmVarDecl 0x229a2559e00 <line:470:37, col:51> col:51 invalid a 'const int *'
| |-ParmVarDecl 0x229a2559e80 <col:54, col:68> col:68 invalid n 'const int *'
| `-ParmVarDecl 0x229a2559f00 <line:471:37, <invalid sloc>> col:45 invalid 'int *'
|-FunctionDecl 0x229a25522e0 <line:472:1, line:475:61> line:472:5 invalid ec_GFp_nistp224_point_get_affine_coordinates 'int (const int *, const int *, int *, int *, int *)'
| |-ParmVarDecl 0x229a255a098 <col:50, col:66> col:66 invalid group 'const int *'
| |-ParmVarDecl 0x229a25520a8 <line:473:50, col:66> col:66 invalid point 'const int *'
| |-ParmVarDecl 0x229a2552128 <line:474:50, col:58> col:58 invalid x 'int *'
| |-ParmVarDecl 0x229a25521a8 <col:61, col:69> col:69 invalid y 'int *'
| `-ParmVarDecl 0x229a2552228 <line:475:50, col:58> col:58 invalid ctx 'int *'
|-FunctionDecl 0x229a25527a0 <line:476:1, line:479:33> line:476:5 invalid ec_GFp_nistp224_mul 'int (const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-ParmVarDecl 0x229a25523c0 <col:25, col:41> col:41 invalid group 'const int *'
| |-ParmVarDecl 0x229a2552440 <col:48, col:58> col:58 invalid r 'int *'
| |-ParmVarDecl 0x229a25524c0 <line:477:25, col:39> col:39 invalid scalar 'const int *'
| |-ParmVarDecl 0x229a2552538 <col:47, col:54> col:54 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x229a25525c8 <line:478:25, <invalid sloc>> col:41 invalid points 'const int **':'const int **'
| |-ParmVarDecl 0x229a2552658 <col:51, <invalid sloc>> col:65 invalid scalars 'const int **':'const int **'
| `-ParmVarDecl 0x229a25526d8 <line:479:25, <invalid sloc>> col:33 invalid 'int *'
|-FunctionDecl 0x229a2552c70 <line:480:1, line:483:68> line:480:5 invalid ec_GFp_nistp224_points_mul 'int (const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-ParmVarDecl 0x229a2552890 <col:32, col:48> col:48 invalid group 'const int *'
| |-ParmVarDecl 0x229a2552910 <col:55, col:65> col:65 invalid r 'int *'
| |-ParmVarDecl 0x229a2552990 <line:481:32, col:46> col:46 invalid scalar 'const int *'
| |-ParmVarDecl 0x229a2552a08 <col:54, col:61> col:61 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x229a2552a98 <line:482:32, <invalid sloc>> col:48 invalid points 'const int **':'const int **'
| |-ParmVarDecl 0x229a2552b28 <line:483:32, <invalid sloc>> col:46 invalid scalars 'const int **':'const int **'
| `-ParmVarDecl 0x229a2552ba8 <col:57, col:65> col:65 invalid ctx 'int *'
|-FunctionDecl 0x229a2552e80 <line:484:1, col:65> col:5 invalid ec_GFp_nistp224_precompute_mult 'int (int *, int *)'
| |-ParmVarDecl 0x229a2552d60 <col:37, col:47> col:47 invalid group 'int *'
| `-ParmVarDecl 0x229a2552de0 <col:54, col:62> col:62 invalid ctx 'int *'
|-FunctionDecl 0x229a2552fe0 <line:485:1, col:63> col:5 invalid ec_GFp_nistp224_have_precompute_mult 'int (const int *)'
| `-ParmVarDecl 0x229a2552f48 <col:42, col:58> col:58 invalid group 'const int *'
|-FunctionDecl 0x229a255b1d0 <line:488:1, col:47> col:5 invalid ec_GFp_nistp256_group_init 'int (int *)'
| `-ParmVarDecl 0x229a255b138 <col:32, col:42> col:42 invalid group 'int *'
|-FunctionDecl 0x229a255b548 <line:489:1, line:491:45> line:489:5 invalid ec_GFp_nistp256_group_set_curve 'int (int *, const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x229a255b290 <col:37, col:47> col:47 invalid group 'int *'
| |-ParmVarDecl 0x229a255b310 <col:54, col:68> col:68 invalid p 'const int *'
| |-ParmVarDecl 0x229a255b390 <line:490:37, col:51> col:51 invalid a 'const int *'
| |-ParmVarDecl 0x229a255b410 <col:54, col:68> col:68 invalid n 'const int *'
| `-ParmVarDecl 0x229a255b490 <line:491:37, <invalid sloc>> col:45 invalid 'int *'
|-FunctionDecl 0x229a255b8e0 <line:492:1, line:495:61> line:492:5 invalid ec_GFp_nistp256_point_get_affine_coordinates 'int (const int *, const int *, int *, int *, int *)'
| |-ParmVarDecl 0x229a255b628 <col:50, col:66> col:66 invalid group 'const int *'
| |-ParmVarDecl 0x229a255b6a8 <line:493:50, col:66> col:66 invalid point 'const int *'
| |-ParmVarDecl 0x229a255b728 <line:494:50, col:58> col:58 invalid x 'int *'
| |-ParmVarDecl 0x229a255b7a8 <col:61, col:69> col:69 invalid y 'int *'
| `-ParmVarDecl 0x229a255b828 <line:495:50, col:58> col:58 invalid ctx 'int *'
|-FunctionDecl 0x229a255bda0 <line:496:1, line:499:33> line:496:5 invalid ec_GFp_nistp256_mul 'int (const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-ParmVarDecl 0x229a255b9c0 <col:25, col:41> col:41 invalid group 'const int *'
| |-ParmVarDecl 0x229a255ba40 <col:48, col:58> col:58 invalid r 'int *'
| |-ParmVarDecl 0x229a255bac0 <line:497:25, col:39> col:39 invalid scalar 'const int *'
| |-ParmVarDecl 0x229a255bb38 <col:47, col:54> col:54 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x229a255bbc8 <line:498:25, <invalid sloc>> col:41 invalid points 'const int **':'const int **'
| |-ParmVarDecl 0x229a255bc58 <col:51, <invalid sloc>> col:65 invalid scalars 'const int **':'const int **'
| `-ParmVarDecl 0x229a255bcd8 <line:499:25, <invalid sloc>> col:33 invalid 'int *'
|-FunctionDecl 0x229a255c2a0 <line:500:1, line:503:68> line:500:5 invalid ec_GFp_nistp256_points_mul 'int (const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-ParmVarDecl 0x229a255be90 <col:32, col:48> col:48 invalid group 'const int *'
| |-ParmVarDecl 0x229a255bf10 <col:55, col:65> col:65 invalid r 'int *'
| |-ParmVarDecl 0x229a255bf90 <line:501:32, col:46> col:46 invalid scalar 'const int *'
| |-ParmVarDecl 0x229a255c008 <col:54, col:61> col:61 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x229a255c098 <line:502:32, <invalid sloc>> col:48 invalid points 'const int **':'const int **'
| |-ParmVarDecl 0x229a255c158 <line:503:32, <invalid sloc>> col:46 invalid scalars 'const int **':'const int **'
| `-ParmVarDecl 0x229a255c1d8 <col:57, col:65> col:65 invalid ctx 'int *'
|-FunctionDecl 0x229a255c4b0 <line:504:1, col:65> col:5 invalid ec_GFp_nistp256_precompute_mult 'int (int *, int *)'
| |-ParmVarDecl 0x229a255c390 <col:37, col:47> col:47 invalid group 'int *'
| `-ParmVarDecl 0x229a255c410 <col:54, col:62> col:62 invalid ctx 'int *'
|-FunctionDecl 0x229a255c610 <line:505:1, col:63> col:5 invalid ec_GFp_nistp256_have_precompute_mult 'int (const int *)'
| `-ParmVarDecl 0x229a255c578 <col:42, col:58> col:58 invalid group 'const int *'
|-FunctionDecl 0x229a255c768 <line:508:1, col:47> col:5 invalid ec_GFp_nistp521_group_init 'int (int *)'
| `-ParmVarDecl 0x229a255c6d0 <col:32, col:42> col:42 invalid group 'int *'
|-FunctionDecl 0x229a255cae0 <line:509:1, line:511:45> line:509:5 invalid ec_GFp_nistp521_group_set_curve 'int (int *, const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x229a255c828 <col:37, col:47> col:47 invalid group 'int *'
| |-ParmVarDecl 0x229a255c8a8 <col:54, col:68> col:68 invalid p 'const int *'
| |-ParmVarDecl 0x229a255c928 <line:510:37, col:51> col:51 invalid a 'const int *'
| |-ParmVarDecl 0x229a255c9a8 <col:54, col:68> col:68 invalid n 'const int *'
| `-ParmVarDecl 0x229a255ca28 <line:511:37, <invalid sloc>> col:45 invalid 'int *'
|-FunctionDecl 0x229a255ce78 <line:512:1, line:515:61> line:512:5 invalid ec_GFp_nistp521_point_get_affine_coordinates 'int (const int *, const int *, int *, int *, int *)'
| |-ParmVarDecl 0x229a255cbc0 <col:50, col:66> col:66 invalid group 'const int *'
| |-ParmVarDecl 0x229a255cc40 <line:513:50, col:66> col:66 invalid point 'const int *'
| |-ParmVarDecl 0x229a255ccc0 <line:514:50, col:58> col:58 invalid x 'int *'
| |-ParmVarDecl 0x229a255cd40 <col:61, col:69> col:69 invalid y 'int *'
| `-ParmVarDecl 0x229a255cdc0 <line:515:50, col:58> col:58 invalid ctx 'int *'
|-FunctionDecl 0x229a255d3a8 <line:516:1, line:519:33> line:516:5 invalid ec_GFp_nistp521_mul 'int (const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-ParmVarDecl 0x229a255cf58 <col:25, col:41> col:41 invalid group 'const int *'
| |-ParmVarDecl 0x229a255cfd8 <col:48, col:58> col:58 invalid r 'int *'
| |-ParmVarDecl 0x229a255d058 <line:517:25, col:39> col:39 invalid scalar 'const int *'
| |-ParmVarDecl 0x229a255d140 <col:47, col:54> col:54 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x229a255d1d0 <line:518:25, <invalid sloc>> col:41 invalid points 'const int **':'const int **'
| |-ParmVarDecl 0x229a255d260 <col:51, <invalid sloc>> col:65 invalid scalars 'const int **':'const int **'
| `-ParmVarDecl 0x229a255d2e0 <line:519:25, <invalid sloc>> col:33 invalid 'int *'
|-FunctionDecl 0x229a255d878 <line:520:1, line:523:68> line:520:5 invalid ec_GFp_nistp521_points_mul 'int (const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-ParmVarDecl 0x229a255d498 <col:32, col:48> col:48 invalid group 'const int *'
| |-ParmVarDecl 0x229a255d518 <col:55, col:65> col:65 invalid r 'int *'
| |-ParmVarDecl 0x229a255d598 <line:521:32, col:46> col:46 invalid scalar 'const int *'
| |-ParmVarDecl 0x229a255d610 <col:54, col:61> col:61 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x229a255d6a0 <line:522:32, <invalid sloc>> col:48 invalid points 'const int **':'const int **'
| |-ParmVarDecl 0x229a255d730 <line:523:32, <invalid sloc>> col:46 invalid scalars 'const int **':'const int **'
| `-ParmVarDecl 0x229a255d7b0 <col:57, col:65> col:65 invalid ctx 'int *'
|-FunctionDecl 0x229a255da88 <line:524:1, col:65> col:5 invalid ec_GFp_nistp521_precompute_mult 'int (int *, int *)'
| |-ParmVarDecl 0x229a255d968 <col:37, col:47> col:47 invalid group 'int *'
| `-ParmVarDecl 0x229a255d9e8 <col:54, col:62> col:62 invalid ctx 'int *'
|-FunctionDecl 0x229a255dbe8 <line:525:1, col:63> col:5 invalid ec_GFp_nistp521_have_precompute_mult 'int (const int *)'
| `-ParmVarDecl 0x229a255db50 <col:42, col:58> col:58 invalid group 'const int *'
|-FunctionDecl 0x229a2560048 <line:528:1, line:552:75> line:528:6 ec_GFp_nistp_points_make_affine_internal 'void (size_t, void *, size_t, void *, void (*)(void *), int (*)(const void *), void (*)(void *, const void *), void (*)(void *, const void *), void (*)(void *, const void *, const void *), void (*)(void *, const void *), void (*)(void *, const void *))'
| |-ParmVarDecl 0x229a255dca0 <col:47, col:54> col:54 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x229a255dd20 <col:59, col:65> col:65 point_array 'void *'
| |-ParmVarDecl 0x229a255dd98 <line:529:47, col:54> col:54 felem_size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x229a255de18 <line:530:47, col:53> col:53 tmp_felems 'void *'
| |-ParmVarDecl 0x229a255dfe0 <line:531:47, col:75> col:54 felem_one 'void (*)(void *)'
| |-ParmVarDecl 0x229a255f1f8 <line:532:47, line:533:72> line:532:53 felem_is_zero 'int (*)(const void *)'
| |-ParmVarDecl 0x229a255f498 <line:534:47, line:536:72> line:534:54 felem_assign 'void (*)(void *, const void *)'
| |-ParmVarDecl 0x229a255f670 <line:537:47, line:539:72> line:537:54 felem_square 'void (*)(void *, const void *)'
| |-ParmVarDecl 0x229a255f9b0 <line:540:47, line:544:70> line:540:54 felem_mul 'void (*)(void *, const void *, const void *)'
| |-ParmVarDecl 0x229a255fb88 <line:545:47, line:547:69> line:545:54 felem_inv 'void (*)(void *, const void *)'
| `-ParmVarDecl 0x229a255fd60 <line:548:47, line:552:74> line:548:54 felem_contract 'void (*)(void *, const void *)'
|-FunctionDecl 0x229a25603b8 <line:553:1, line:554:76> line:553:6 ec_GFp_nistp_recode_scalar_bits 'void (unsigned char *, unsigned char *, unsigned char)'
| |-ParmVarDecl 0x229a2560188 <col:38, col:53> col:53 sign 'unsigned char *'
| |-ParmVarDecl 0x229a2560208 <line:554:38, col:53> col:53 digit 'unsigned char *'
| `-ParmVarDecl 0x229a2560288 <col:60, col:74> col:74 in 'unsigned char'
|-FunctionDecl 0x229a2560538 <line:556:1, col:39> col:5 invalid ec_precompute_mont_data 'int (int *)'
| `-ParmVarDecl 0x229a25604a0 <col:29, <invalid sloc>> col:39 invalid 'int *'
|-FunctionDecl 0x229a2560690 <line:557:1, col:53> col:5 invalid ec_group_simple_order_bits 'int (const int *)'
| `-ParmVarDecl 0x229a25605f8 <col:32, col:48> col:48 invalid group 'const int *'
|-FunctionDecl 0x229a25608e8 <line:567:1, line:568:61> line:567:8 invalid ec_key_simple_priv2oct 'size_t (const int *, unsigned char *, size_t)'
| |-ParmVarDecl 0x229a2560750 <col:31, col:45> col:45 invalid eckey 'const int *'
| |-ParmVarDecl 0x229a25607d0 <line:568:31, col:46> col:46 buf 'unsigned char *'
| `-ParmVarDecl 0x229a2560848 <col:51, col:58> col:58 len 'size_t':'unsigned long long'
|-FunctionDecl 0x229a2560b58 <line:569:1, col:79> col:5 invalid ec_key_simple_oct2priv 'int (int *, const unsigned char *, size_t)'
| |-ParmVarDecl 0x229a25609b8 <col:28, col:36> col:36 invalid eckey 'int *'
| |-ParmVarDecl 0x229a2560a38 <col:43, col:64> col:64 buf 'const unsigned char *'
| `-ParmVarDecl 0x229a2560ab0 <col:69, col:76> col:76 len 'size_t':'unsigned long long'
|-FunctionDecl 0x229a2560cc0 <line:570:1, col:45> col:5 invalid ec_key_simple_generate_key 'int (int *)'
| `-ParmVarDecl 0x229a2560c28 <col:32, col:40> col:40 invalid eckey 'int *'
|-FunctionDecl 0x229a2560e18 <line:571:1, col:52> col:5 invalid ec_key_simple_generate_public_key 'int (int *)'
| `-ParmVarDecl 0x229a2560d80 <col:39, col:47> col:47 invalid eckey 'int *'
|-FunctionDecl 0x229a2560f70 <line:572:1, col:48> col:5 invalid ec_key_simple_check_key 'int (const int *)'
| `-ParmVarDecl 0x229a2560ed8 <col:29, col:43> col:43 invalid eckey 'const int *'
|-RecordDecl 0x229a2561018 <line:576:1, line:601:1> line:576:8 invalid struct ec_key_method_st definition
| |-FieldDecl 0x229a25610e8 <line:577:5, col:17> col:17 name 'const char *'
| |-FieldDecl 0x229a2561180 <line:578:5, col:13> col:13 invalid flags 'int'
| |-FieldDecl 0x229a2561298 <line:579:5, col:28> col:11 init 'int (*)(int *)'
| |-FieldDecl 0x229a25613a8 <line:580:5, col:31> col:12 finish 'void (*)(int *)'
| |-FieldDecl 0x229a2561548 <line:581:5, col:48> col:11 copy 'int (*)(int *, const int *)'
| |-FieldDecl 0x229a25616e8 <line:582:5, col:54> col:11 set_group 'int (*)(int *, const int *)'
| |-FieldDecl 0x229a2561888 <line:583:5, col:59> col:11 set_private 'int (*)(int *, const int *)'
| |-FieldDecl 0x229a2561a28 <line:584:5, col:59> col:11 set_public 'int (*)(int *, const int *)'
| |-FieldDecl 0x229a2561b40 <line:585:5, col:30> col:11 keygen 'int (*)(int *)'
| |-FieldDecl 0x229a2561df0 <line:586:5, line:587:67> line:586:11 compute_key 'int (*)(unsigned char **, size_t *, const int *, const int *)'
| |-FieldDecl 0x229a255a380 <line:588:5, line:590:47> line:588:11 sign 'int (*)(int, const unsigned char *, int, unsigned char *, unsigned int *, const int *, const int *, int *)'
| |-FieldDecl 0x229a255a720 <line:591:5, line:592:34> line:591:11 sign_setup 'int (*)(int *, int *, int **, int **)'
| |-FieldDecl 0x229a255ab38 <line:593:5, <invalid sloc>> col:18 invalid sign_sig 'int *(*)(const unsigned char *, int, const int *, const int *, int *)'
| |-FieldDecl 0x229a255afe0 <line:597:5, line:598:74> line:597:11 verify 'int (*)(int, const unsigned char *, int, const unsigned char *, int, int *)'
| `-FieldDecl 0x229a2567480 <line:599:5, line:600:58> line:599:11 verify_sig 'int (*)(const unsigned char *, int, const int *, int *)'
|-FunctionDecl 0x229a2567588 <line:605:1, col:34> col:5 invalid ossl_ec_key_gen 'int (int *)'
| `-ParmVarDecl 0x229a25674f0 <col:21, col:29> col:29 invalid eckey 'int *'
|-FunctionDecl 0x229a2567878 <line:606:1, line:607:70> line:606:5 invalid ossl_ecdh_compute_key 'int (unsigned char **, size_t *, const int *, const int *)'
| |-ParmVarDecl 0x229a2567650 <col:27, col:43> col:43 pout 'unsigned char **'
| |-ParmVarDecl 0x229a25676c8 <col:49, col:57> col:57 poutlen 'size_t *'
| |-ParmVarDecl 0x229a2567748 <line:607:27, col:43> col:43 invalid pub_key 'const int *'
| `-ParmVarDecl 0x229a25677c8 <col:52, col:66> col:66 invalid ecdh 'const int *'
|-FunctionDecl 0x229a2567b80 <line:608:1, line:609:72> line:608:5 invalid ecdh_simple_compute_key 'int (unsigned char **, size_t *, const int *, const int *)'
| |-ParmVarDecl 0x229a2567958 <col:29, col:45> col:45 pout 'unsigned char **'
| |-ParmVarDecl 0x229a25679d0 <col:51, col:59> col:59 poutlen 'size_t *'
| |-ParmVarDecl 0x229a2567a50 <line:609:29, col:45> col:45 invalid pub_key 'const int *'
| `-ParmVarDecl 0x229a2567ad0 <col:54, col:68> col:68 invalid ecdh 'const int *'
|-RecordDecl 0x229a2567c40 <line:611:1, line:614:1> line:611:8 invalid struct ECDSA_SIG_st definition
| |-FieldDecl 0x229a2567d18 <line:612:5, col:13> col:13 invalid r 'int *'
| `-FieldDecl 0x229a2567d88 <line:613:5, col:13> col:13 invalid s 'int *'
|-FunctionDecl 0x229a2568038 <line:616:1, line:617:38> line:616:5 invalid ossl_ecdsa_sign_setup 'int (int *, int *, int **, int **)'
| |-ParmVarDecl 0x229a2567df8 <col:27, col:35> col:35 invalid eckey 'int *'
| |-ParmVarDecl 0x229a2567e78 <col:42, col:50> col:50 invalid ctx_in 'int *'
| |-ParmVarDecl 0x229a2567f00 <col:58, col:67> col:67 invalid kinvp 'int **'
| `-ParmVarDecl 0x229a2567f88 <line:617:27, col:36> col:36 invalid rp 'int **'
|-FunctionDecl 0x229a25685c0 <line:618:1, line:620:71> line:618:5 invalid ossl_ecdsa_sign 'int (int, const unsigned char *, int, unsigned char *, unsigned int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x229a2568110 <col:21, col:25> col:25 type 'int'
| |-ParmVarDecl 0x229a25681f0 <col:31, col:52> col:52 dgst 'const unsigned char *'
| |-ParmVarDecl 0x229a2568270 <col:58, col:62> col:62 dlen 'int'
| |-ParmVarDecl 0x229a25682f0 <line:619:21, col:36> col:36 sig 'unsigned char *'
| |-ParmVarDecl 0x229a2568370 <col:41, col:55> col:55 siglen 'unsigned int *'
| |-ParmVarDecl 0x229a25683f0 <line:620:21, col:35> col:35 invalid kinv 'const int *'
| |-ParmVarDecl 0x229a2568470 <col:41, col:55> col:55 invalid r 'const int *'
| `-ParmVarDecl 0x229a25684f0 <col:58, col:66> col:66 invalid eckey 'int *'
|-FunctionDecl 0x229a2568970 <line:621:1, line:623:45> line:621:12 invalid ossl_ecdsa_sign_sig 'int *(const unsigned char *, int, const int *, const int *, int *)'
| |-ParmVarDecl 0x229a25686b8 <col:32, col:53> col:53 dgst 'const unsigned char *'
| |-ParmVarDecl 0x229a2568738 <col:59, col:63> col:63 dgst_len 'int'
| |-ParmVarDecl 0x229a25687b8 <line:622:32, col:46> col:46 invalid in_kinv 'const int *'
| |-ParmVarDecl 0x229a2568838 <col:55, col:69> col:69 invalid in_r 'const int *'
| `-ParmVarDecl 0x229a25688b8 <line:623:32, col:40> col:40 invalid eckey 'int *'
|-FunctionDecl 0x229a2568d90 <line:624:1, line:625:78> line:624:5 invalid ossl_ecdsa_verify 'int (int, const unsigned char *, int, const unsigned char *, int, int *)'
| |-ParmVarDecl 0x229a2568a50 <col:23, col:27> col:27 type 'int'
| |-ParmVarDecl 0x229a2568ad0 <col:33, col:54> col:54 dgst 'const unsigned char *'
| |-ParmVarDecl 0x229a2568b50 <col:60, col:64> col:64 dgst_len 'int'
| |-ParmVarDecl 0x229a2568bd0 <line:625:23, col:44> col:44 sigbuf 'const unsigned char *'
| |-ParmVarDecl 0x229a2568c50 <col:52, col:56> col:56 sig_len 'int'
| `-ParmVarDecl 0x229a2568cd0 <col:65, col:73> col:73 invalid eckey 'int *'
|-FunctionDecl 0x229a25690a8 <line:626:1, line:627:62> line:626:5 invalid ossl_ecdsa_verify_sig 'int (const unsigned char *, int, const int *, int *)'
| |-ParmVarDecl 0x229a2568e78 <col:27, col:48> col:48 dgst 'const unsigned char *'
| |-ParmVarDecl 0x229a2568ef8 <col:54, col:58> col:58 dgst_len 'int'
| |-ParmVarDecl 0x229a2568f78 <line:627:27, col:44> col:44 invalid sig 'const int *'
| `-ParmVarDecl 0x229a2568ff8 <col:49, col:57> col:57 invalid eckey 'int *'
|-FunctionDecl 0x229a25695a0 <line:629:1, line:630:47> line:629:5 invalid X25519 'int (int *, const int *, const int *)'
| |-ParmVarDecl 0x229a2569260 <col:12, <invalid sloc>> col:20 invalid out_shared_key 'int *':'int *'
| |-ParmVarDecl 0x229a25693a0 <col:40, <invalid sloc>> col:54 invalid private_key 'const int *':'const int *'
| `-ParmVarDecl 0x229a2569470 <line:630:12, <invalid sloc>> col:26 invalid peer_public_value 'const int *':'const int *'
|-FunctionDecl 0x229a25698a8 <line:631:1, line:632:62> line:631:6 invalid X25519_public_from_private 'void (int *, const int *)'
| |-ParmVarDecl 0x229a25696c0 <col:33, <invalid sloc>> col:41 invalid out_public_value 'int *':'int *'
| `-ParmVarDecl 0x229a2569790 <line:632:33, <invalid sloc>> col:47 invalid private_key 'const int *':'const int *'
|-FunctionDecl 0x229a2569b18 <line:634:1, col:79> col:5 invalid ec_point_blind_coordinates 'int (const int *, int *, int *)'
| |-ParmVarDecl 0x229a2569970 <col:32, col:48> col:48 invalid group 'const int *'
| |-ParmVarDecl 0x229a25699f0 <col:55, col:65> col:65 invalid p 'int *'
| `-ParmVarDecl 0x229a2569a70 <col:68, col:76> col:76 invalid ctx 'int *'
|-FunctionDecl 0x229a2562b78 prev 0x229a2560048 <.//openssl//file_jk/before\crypto\ec\ecp_nistputil.c:49:1, line:134:1> line:49:6 ec_GFp_nistp_points_make_affine_internal 'void (size_t, void *, size_t, void *, void (*)(void *), int (*)(const void *), void (*)(void *, const void *), void (*)(void *, const void *), void (*)(void *, const void *, const void *), void (*)(void *, const void *), void (*)(void *, const void *))'
| |-ParmVarDecl 0x229a2569be0 <col:47, col:54> col:54 used num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x229a2569c60 <col:59, col:65> col:65 used point_array 'void *'
| |-ParmVarDecl 0x229a2569cd8 <line:50:47, col:54> col:54 used felem_size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x229a2569d58 <line:51:47, col:53> col:53 used tmp_felems 'void *'
| |-ParmVarDecl 0x229a2569e90 <line:52:47, col:75> col:54 used felem_one 'void (*)(void *)'
| |-ParmVarDecl 0x229a2569fd0 <line:53:47, line:54:72> line:53:53 used felem_is_zero 'int (*)(const void *)'
| |-ParmVarDecl 0x229a2562190 <line:55:47, line:57:72> line:55:54 used felem_assign 'void (*)(void *, const void *)'
| |-ParmVarDecl 0x229a2562368 <line:58:47, line:60:72> line:58:54 used felem_square 'void (*)(void *, const void *)'
| |-ParmVarDecl 0x229a25625e0 <line:61:47, line:65:70> line:61:54 used felem_mul 'void (*)(void *, const void *, const void *)'
| |-ParmVarDecl 0x229a25627b8 <line:66:47, line:68:69> line:66:54 used felem_inv 'void (*)(void *, const void *)'
| |-ParmVarDecl 0x229a2562990 <line:69:47, line:73:74> line:69:54 used felem_contract 'void (*)(void *, const void *)'
| `-CompoundStmt 0x229a2573120 <line:74:1, line:134:1>
|   |-DeclStmt 0x229a2562d18 <line:75:5, col:14>
|   | `-VarDecl 0x229a2562c88 <col:5, col:13> col:9 used i 'int' cinit
|   |   `-IntegerLiteral 0x229a2562cf0 <col:13> 'int' 0
|   |-IfStmt 0x229a256a758 <line:82:5, line:85:31> has_else
|   | |-UnaryOperator 0x229a2563000 <line:82:9, col:28> 'int' prefix '!' cannot overflow
|   | | `-CallExpr 0x229a2562fc0 <col:10, col:28> 'int'
|   | |   |-ImplicitCastExpr 0x229a2562fa8 <col:10> 'int (*)(const void *)' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x229a2562d30 <col:10> 'int (*)(const void *)' lvalue ParmVar 0x229a2569fd0 'felem_is_zero' 'int (*)(const void *)'
|   | |   `-ImplicitCastExpr 0x229a2562fe8 <line:80:15, col:64> 'const void *' <BitCast>
|   | |     `-ParenExpr 0x229a2562f88 <col:15, col:64> 'char *'
|   | |       `-UnaryOperator 0x229a2562f70 <col:16, col:63> 'char *' prefix '&' cannot overflow
|   | |         `-ArraySubscriptExpr 0x229a2562f50 <col:17, col:63> 'char' lvalue
|   | |           |-ParenExpr 0x229a2562dc8 <col:17, col:37> 'char *'
|   | |           | `-CStyleCastExpr 0x229a2562da0 <col:18, col:26> 'char *' <BitCast>
|   | |           |   `-ImplicitCastExpr 0x229a2562d88 <col:26> 'void *' <LValueToRValue> part_of_explicit_cast
|   | |           |     `-DeclRefExpr 0x229a2562d50 <col:26> 'void *' lvalue ParmVar 0x229a2569c60 'point_array' 'void *'
|   | |           `-BinaryOperator 0x229a2562f30 <col:39, col:53> 'unsigned long long' '*'
|   | |             |-ImplicitCastExpr 0x229a2562f18 <col:39, col:49> 'unsigned long long' <IntegralCast>
|   | |             | `-ParenExpr 0x229a2562ec0 <col:39, col:49> 'int'
|   | |             |   `-BinaryOperator 0x229a2562ea0 <col:40, col:48> 'int' '+'
|   | |             |     |-BinaryOperator 0x229a2562e58 <col:40, col:44> 'int' '*'
|   | |             |     | |-IntegerLiteral 0x229a2562de8 <col:40> 'int' 3
|   | |             |     | `-ParenExpr 0x229a2562e38 <col:42, col:44> 'int'
|   | |             |     |   `-IntegerLiteral 0x229a2562e10 <line:82:26> 'int' 0
|   | |             |     `-IntegerLiteral 0x229a2562e78 <line:80:48> 'int' 2
|   | |             `-ImplicitCastExpr 0x229a2562f00 <col:53> 'size_t':'unsigned long long' <LValueToRValue>
|   | |               `-DeclRefExpr 0x229a2562ee0 <col:53> 'size_t':'unsigned long long' lvalue ParmVar 0x229a2569cd8 'felem_size' 'size_t':'unsigned long long'
|   | |-CallExpr 0x229a256a4d8 <line:83:9, col:40> 'void'
|   | | |-ImplicitCastExpr 0x229a256a4c0 <col:9> 'void (*)(void *, const void *)' <LValueToRValue>
|   | | | `-DeclRefExpr 0x229a2563018 <col:9> 'void (*)(void *, const void *)' lvalue ParmVar 0x229a2562190 'felem_assign' 'void (*)(void *, const void *)'
|   | | |-ImplicitCastExpr 0x229a256a508 <line:77:23, col:63> 'void *' <BitCast>
|   | | | `-ParenExpr 0x229a256a248 <col:23, col:63> 'char *'
|   | | |   `-UnaryOperator 0x229a256a230 <col:24, col:62> 'char *' prefix '&' cannot overflow
|   | | |     `-ArraySubscriptExpr 0x229a256a210 <col:25, col:62> 'char' lvalue
|   | | |       |-ParenExpr 0x229a25630b0 <col:25, col:44> 'char *'
|   | | |       | `-CStyleCastExpr 0x229a2563088 <col:26, col:34> 'char *' <BitCast>
|   | | |       |   `-ImplicitCastExpr 0x229a2563070 <col:34> 'void *' <LValueToRValue> part_of_explicit_cast
|   | | |       |     `-DeclRefExpr 0x229a2563038 <col:34> 'void *' lvalue ParmVar 0x229a2569d58 'tmp_felems' 'void *'
|   | | |       `-BinaryOperator 0x229a2563168 <col:46, col:52> 'unsigned long long' '*'
|   | | |         |-ImplicitCastExpr 0x229a2563150 <col:46, col:48> 'unsigned long long' <IntegralCast>
|   | | |         | `-ParenExpr 0x229a25630f8 <col:46, col:48> 'int'
|   | | |         |   `-IntegerLiteral 0x229a25630d0 <line:83:32> 'int' 0
|   | | |         `-ImplicitCastExpr 0x229a2563138 <line:77:52> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |           `-DeclRefExpr 0x229a2563118 <col:52> 'size_t':'unsigned long long' lvalue ParmVar 0x229a2569cd8 'felem_size' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x229a256a520 <line:80:15, col:64> 'const void *' <BitCast>
|   | |   `-ParenExpr 0x229a256a4a0 <col:15, col:64> 'char *'
|   | |     `-UnaryOperator 0x229a256a488 <col:16, col:63> 'char *' prefix '&' cannot overflow
|   | |       `-ArraySubscriptExpr 0x229a256a468 <col:17, col:63> 'char' lvalue
|   | |         |-ParenExpr 0x229a256a2e0 <col:17, col:37> 'char *'
|   | |         | `-CStyleCastExpr 0x229a256a2b8 <col:18, col:26> 'char *' <BitCast>
|   | |         |   `-ImplicitCastExpr 0x229a256a2a0 <col:26> 'void *' <LValueToRValue> part_of_explicit_cast
|   | |         |     `-DeclRefExpr 0x229a256a268 <col:26> 'void *' lvalue ParmVar 0x229a2569c60 'point_array' 'void *'
|   | |         `-BinaryOperator 0x229a256a448 <col:39, col:53> 'unsigned long long' '*'
|   | |           |-ImplicitCastExpr 0x229a256a430 <col:39, col:49> 'unsigned long long' <IntegralCast>
|   | |           | `-ParenExpr 0x229a256a3d8 <col:39, col:49> 'int'
|   | |           |   `-BinaryOperator 0x229a256a3b8 <col:40, col:48> 'int' '+'
|   | |           |     |-BinaryOperator 0x229a256a370 <col:40, col:44> 'int' '*'
|   | |           |     | |-IntegerLiteral 0x229a256a300 <col:40> 'int' 3
|   | |           |     | `-ParenExpr 0x229a256a350 <col:42, col:44> 'int'
|   | |           |     |   `-IntegerLiteral 0x229a256a328 <line:83:38> 'int' 0
|   | |           |     `-IntegerLiteral 0x229a256a390 <line:80:48> 'int' 2
|   | |           `-ImplicitCastExpr 0x229a256a418 <col:53> 'size_t':'unsigned long long' <LValueToRValue>
|   | |             `-DeclRefExpr 0x229a256a3f8 <col:53> 'size_t':'unsigned long long' lvalue ParmVar 0x229a2569cd8 'felem_size' 'size_t':'unsigned long long'
|   | `-CallExpr 0x229a256a718 <line:85:9, col:31> 'void'
|   |   |-ImplicitCastExpr 0x229a256a700 <col:9> 'void (*)(void *)' <LValueToRValue>
|   |   | `-DeclRefExpr 0x229a256a538 <col:9> 'void (*)(void *)' lvalue ParmVar 0x229a2569e90 'felem_one' 'void (*)(void *)'
|   |   `-ImplicitCastExpr 0x229a256a740 <line:77:23, col:63> 'void *' <BitCast>
|   |     `-ParenExpr 0x229a256a6e0 <col:23, col:63> 'char *'
|   |       `-UnaryOperator 0x229a256a6c8 <col:24, col:62> 'char *' prefix '&' cannot overflow
|   |         `-ArraySubscriptExpr 0x229a256a6a8 <col:25, col:62> 'char' lvalue
|   |           |-ParenExpr 0x229a256a5d0 <col:25, col:44> 'char *'
|   |           | `-CStyleCastExpr 0x229a256a5a8 <col:26, col:34> 'char *' <BitCast>
|   |           |   `-ImplicitCastExpr 0x229a256a590 <col:34> 'void *' <LValueToRValue> part_of_explicit_cast
|   |           |     `-DeclRefExpr 0x229a256a558 <col:34> 'void *' lvalue ParmVar 0x229a2569d58 'tmp_felems' 'void *'
|   |           `-BinaryOperator 0x229a256a688 <col:46, col:52> 'unsigned long long' '*'
|   |             |-ImplicitCastExpr 0x229a256a670 <col:46, col:48> 'unsigned long long' <IntegralCast>
|   |             | `-ParenExpr 0x229a256a618 <col:46, col:48> 'int'
|   |             |   `-IntegerLiteral 0x229a256a5f0 <line:85:29> 'int' 0
|   |             `-ImplicitCastExpr 0x229a256a658 <line:77:52> 'size_t':'unsigned long long' <LValueToRValue>
|   |               `-DeclRefExpr 0x229a256a638 <col:52> 'size_t':'unsigned long long' lvalue ParmVar 0x229a2569cd8 'felem_size' 'size_t':'unsigned long long'
|   |-ForStmt 0x229a256b780 <line:86:5, line:91:5>
|   | |-BinaryOperator 0x229a256a7e0 <line:86:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x229a256a780 <col:10> 'int' lvalue Var 0x229a2562c88 'i' 'int'
|   | | `-IntegerLiteral 0x229a256a7b8 <col:14> 'int' 1
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x229a256a8b0 <col:17, col:26> 'int' '<'
|   | | |-ImplicitCastExpr 0x229a256a898 <col:17> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x229a256a800 <col:17> 'int' lvalue Var 0x229a2562c88 'i' 'int'
|   | | `-CStyleCastExpr 0x229a256a870 <col:21, col:26> 'int' <IntegralCast>
|   | |   `-ImplicitCastExpr 0x229a256a858 <col:26> 'size_t':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   | |     `-DeclRefExpr 0x229a256a820 <col:26> 'size_t':'unsigned long long' lvalue ParmVar 0x229a2569be0 'num' 'size_t':'unsigned long long'
|   | |-UnaryOperator 0x229a256a8f0 <col:31, col:32> 'int' postfix '++'
|   | | `-DeclRefExpr 0x229a256a8d0 <col:31> 'int' lvalue Var 0x229a2562c88 'i' 'int'
|   | `-CompoundStmt 0x229a256b768 <col:36, line:91:5>
|   |   `-IfStmt 0x229a256b740 <line:87:9, line:90:56> has_else
|   |     |-UnaryOperator 0x229a256abe8 <line:87:13, col:32> 'int' prefix '!' cannot overflow
|   |     | `-CallExpr 0x229a256aba8 <col:14, col:32> 'int'
|   |     |   |-ImplicitCastExpr 0x229a256ab90 <col:14> 'int (*)(const void *)' <LValueToRValue>
|   |     |   | `-DeclRefExpr 0x229a256a908 <col:14> 'int (*)(const void *)' lvalue ParmVar 0x229a2569fd0 'felem_is_zero' 'int (*)(const void *)'
|   |     |   `-ImplicitCastExpr 0x229a256abd0 <line:80:15, col:64> 'const void *' <BitCast>
|   |     |     `-ParenExpr 0x229a256ab70 <col:15, col:64> 'char *'
|   |     |       `-UnaryOperator 0x229a256ab58 <col:16, col:63> 'char *' prefix '&' cannot overflow
|   |     |         `-ArraySubscriptExpr 0x229a256ab38 <col:17, col:63> 'char' lvalue
|   |     |           |-ParenExpr 0x229a256a9a0 <col:17, col:37> 'char *'
|   |     |           | `-CStyleCastExpr 0x229a256a978 <col:18, col:26> 'char *' <BitCast>
|   |     |           |   `-ImplicitCastExpr 0x229a256a960 <col:26> 'void *' <LValueToRValue> part_of_explicit_cast
|   |     |           |     `-DeclRefExpr 0x229a256a928 <col:26> 'void *' lvalue ParmVar 0x229a2569c60 'point_array' 'void *'
|   |     |           `-BinaryOperator 0x229a256ab18 <col:39, col:53> 'unsigned long long' '*'
|   |     |             |-ImplicitCastExpr 0x229a256ab00 <col:39, col:49> 'unsigned long long' <IntegralCast>
|   |     |             | `-ParenExpr 0x229a256aaa8 <col:39, col:49> 'int'
|   |     |             |   `-BinaryOperator 0x229a256aa88 <col:40, col:48> 'int' '+'
|   |     |             |     |-BinaryOperator 0x229a256aa40 <col:40, col:44> 'int' '*'
|   |     |             |     | |-IntegerLiteral 0x229a256a9c0 <col:40> 'int' 3
|   |     |             |     | `-ImplicitCastExpr 0x229a256aa28 <col:42, col:44> 'int' <LValueToRValue>
|   |     |             |     |   `-ParenExpr 0x229a256aa08 <col:42, col:44> 'int' lvalue
|   |     |             |     |     `-DeclRefExpr 0x229a256a9e8 <line:87:30> 'int' lvalue Var 0x229a2562c88 'i' 'int'
|   |     |             |     `-IntegerLiteral 0x229a256aa60 <line:80:48> 'int' 2
|   |     |             `-ImplicitCastExpr 0x229a256aae8 <col:53> 'size_t':'unsigned long long' <LValueToRValue>
|   |     |               `-DeclRefExpr 0x229a256aac8 <col:53> 'size_t':'unsigned long long' lvalue ParmVar 0x229a2569cd8 'felem_size' 'size_t':'unsigned long long'
|   |     |-CallExpr 0x229a256b270 <line:88:13, col:59> 'void'
|   |     | |-ImplicitCastExpr 0x229a256b258 <col:13> 'void (*)(void *, const void *, const void *)' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x229a256ac00 <col:13> 'void (*)(void *, const void *, const void *)' lvalue ParmVar 0x229a25625e0 'felem_mul' 'void (*)(void *, const void *, const void *)'
|   |     | |-ImplicitCastExpr 0x229a256b2a8 <line:77:23, col:63> 'void *' <BitCast>
|   |     | | `-ParenExpr 0x229a256adb8 <col:23, col:63> 'char *'
|   |     | |   `-UnaryOperator 0x229a256ada0 <col:24, col:62> 'char *' prefix '&' cannot overflow
|   |     | |     `-ArraySubscriptExpr 0x229a256ad80 <col:25, col:62> 'char' lvalue
|   |     | |       |-ParenExpr 0x229a256ac98 <col:25, col:44> 'char *'
|   |     | |       | `-CStyleCastExpr 0x229a256ac70 <col:26, col:34> 'char *' <BitCast>
|   |     | |       |   `-ImplicitCastExpr 0x229a256ac58 <col:34> 'void *' <LValueToRValue> part_of_explicit_cast
|   |     | |       |     `-DeclRefExpr 0x229a256ac20 <col:34> 'void *' lvalue ParmVar 0x229a2569d58 'tmp_felems' 'void *'
|   |     | |       `-BinaryOperator 0x229a256ad60 <col:46, col:52> 'unsigned long long' '*'
|   |     | |         |-ImplicitCastExpr 0x229a256ad48 <col:46, col:48> 'unsigned long long' <IntegralCast>
|   |     | |         | `-ImplicitCastExpr 0x229a256ad18 <col:46, col:48> 'int' <LValueToRValue>
|   |     | |         |   `-ParenExpr 0x229a256acd8 <col:46, col:48> 'int' lvalue
|   |     | |         |     `-DeclRefExpr 0x229a256acb8 <line:88:33> 'int' lvalue Var 0x229a2562c88 'i' 'int'
|   |     | |         `-ImplicitCastExpr 0x229a256ad30 <line:77:52> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | |           `-DeclRefExpr 0x229a256acf8 <col:52> 'size_t':'unsigned long long' lvalue ParmVar 0x229a2569cd8 'felem_size' 'size_t':'unsigned long long'
|   |     | |-ImplicitCastExpr 0x229a256b2c0 <col:23, col:63> 'const void *' <BitCast>
|   |     | | `-ParenExpr 0x229a256afb8 <col:23, col:63> 'char *'
|   |     | |   `-UnaryOperator 0x229a256afa0 <col:24, col:62> 'char *' prefix '&' cannot overflow
|   |     | |     `-ArraySubscriptExpr 0x229a256af80 <col:25, col:62> 'char' lvalue
|   |     | |       |-ParenExpr 0x229a256ae50 <col:25, col:44> 'char *'
|   |     | |       | `-CStyleCastExpr 0x229a256ae28 <col:26, col:34> 'char *' <BitCast>
|   |     | |       |   `-ImplicitCastExpr 0x229a256ae10 <col:34> 'void *' <LValueToRValue> part_of_explicit_cast
|   |     | |       |     `-DeclRefExpr 0x229a256add8 <col:34> 'void *' lvalue ParmVar 0x229a2569d58 'tmp_felems' 'void *'
|   |     | |       `-BinaryOperator 0x229a256af60 <col:46, col:52> 'unsigned long long' '*'
|   |     | |         |-ImplicitCastExpr 0x229a256af48 <col:46, col:48> 'unsigned long long' <IntegralCast>
|   |     | |         | `-ParenExpr 0x229a256aef0 <col:46, col:48> 'int'
|   |     | |         |   `-BinaryOperator 0x229a256aed0 <line:88:47, col:51> 'int' '-'
|   |     | |         |     |-ImplicitCastExpr 0x229a256aeb8 <col:47> 'int' <LValueToRValue>
|   |     | |         |     | `-DeclRefExpr 0x229a256ae70 <col:47> 'int' lvalue Var 0x229a2562c88 'i' 'int'
|   |     | |         |     `-IntegerLiteral 0x229a256ae90 <col:51> 'int' 1
|   |     | |         `-ImplicitCastExpr 0x229a256af30 <line:77:52> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | |           `-DeclRefExpr 0x229a256af10 <col:52> 'size_t':'unsigned long long' lvalue ParmVar 0x229a2569cd8 'felem_size' 'size_t':'unsigned long long'
|   |     | `-ImplicitCastExpr 0x229a256b2d8 <line:80:15, col:64> 'const void *' <BitCast>
|   |     |   `-ParenExpr 0x229a256b238 <col:15, col:64> 'char *'
|   |     |     `-UnaryOperator 0x229a256b220 <col:16, col:63> 'char *' prefix '&' cannot overflow
|   |     |       `-ArraySubscriptExpr 0x229a256b1e8 <col:17, col:63> 'char' lvalue
|   |     |         |-ParenExpr 0x229a256b050 <col:17, col:37> 'char *'
|   |     |         | `-CStyleCastExpr 0x229a256b028 <col:18, col:26> 'char *' <BitCast>
|   |     |         |   `-ImplicitCastExpr 0x229a256b010 <col:26> 'void *' <LValueToRValue> part_of_explicit_cast
|   |     |         |     `-DeclRefExpr 0x229a256afd8 <col:26> 'void *' lvalue ParmVar 0x229a2569c60 'point_array' 'void *'
|   |     |         `-BinaryOperator 0x229a256b1c8 <col:39, col:53> 'unsigned long long' '*'
|   |     |           |-ImplicitCastExpr 0x229a256b1b0 <col:39, col:49> 'unsigned long long' <IntegralCast>
|   |     |           | `-ParenExpr 0x229a256b158 <col:39, col:49> 'int'
|   |     |           |   `-BinaryOperator 0x229a256b138 <col:40, col:48> 'int' '+'
|   |     |           |     |-BinaryOperator 0x229a256b0f0 <col:40, col:44> 'int' '*'
|   |     |           |     | |-IntegerLiteral 0x229a256b070 <col:40> 'int' 3
|   |     |           |     | `-ImplicitCastExpr 0x229a256b0d8 <col:42, col:44> 'int' <LValueToRValue>
|   |     |           |     |   `-ParenExpr 0x229a256b0b8 <col:42, col:44> 'int' lvalue
|   |     |           |     |     `-DeclRefExpr 0x229a256b098 <line:88:57> 'int' lvalue Var 0x229a2562c88 'i' 'int'
|   |     |           |     `-IntegerLiteral 0x229a256b110 <line:80:48> 'int' 2
|   |     |           `-ImplicitCastExpr 0x229a256b198 <col:53> 'size_t':'unsigned long long' <LValueToRValue>
|   |     |             `-DeclRefExpr 0x229a256b178 <col:53> 'size_t':'unsigned long long' lvalue ParmVar 0x229a2569cd8 'felem_size' 'size_t':'unsigned long long'
|   |     `-CallExpr 0x229a256b6e0 <line:90:13, col:56> 'void'
|   |       |-ImplicitCastExpr 0x229a256b6c8 <col:13> 'void (*)(void *, const void *)' <LValueToRValue>
|   |       | `-DeclRefExpr 0x229a256b2f0 <col:13> 'void (*)(void *, const void *)' lvalue ParmVar 0x229a2562190 'felem_assign' 'void (*)(void *, const void *)'
|   |       |-ImplicitCastExpr 0x229a256b710 <line:77:23, col:63> 'void *' <BitCast>
|   |       | `-ParenExpr 0x229a256b4a8 <col:23, col:63> 'char *'
|   |       |   `-UnaryOperator 0x229a256b490 <col:24, col:62> 'char *' prefix '&' cannot overflow
|   |       |     `-ArraySubscriptExpr 0x229a256b470 <col:25, col:62> 'char' lvalue
|   |       |       |-ParenExpr 0x229a256b388 <col:25, col:44> 'char *'
|   |       |       | `-CStyleCastExpr 0x229a256b360 <col:26, col:34> 'char *' <BitCast>
|   |       |       |   `-ImplicitCastExpr 0x229a256b348 <col:34> 'void *' <LValueToRValue> part_of_explicit_cast
|   |       |       |     `-DeclRefExpr 0x229a256b310 <col:34> 'void *' lvalue ParmVar 0x229a2569d58 'tmp_felems' 'void *'
|   |       |       `-BinaryOperator 0x229a256b450 <col:46, col:52> 'unsigned long long' '*'
|   |       |         |-ImplicitCastExpr 0x229a256b438 <col:46, col:48> 'unsigned long long' <IntegralCast>
|   |       |         | `-ImplicitCastExpr 0x229a256b408 <col:46, col:48> 'int' <LValueToRValue>
|   |       |         |   `-ParenExpr 0x229a256b3c8 <col:46, col:48> 'int' lvalue
|   |       |         |     `-DeclRefExpr 0x229a256b3a8 <line:90:36> 'int' lvalue Var 0x229a2562c88 'i' 'int'
|   |       |         `-ImplicitCastExpr 0x229a256b420 <line:77:52> 'size_t':'unsigned long long' <LValueToRValue>
|   |       |           `-DeclRefExpr 0x229a256b3e8 <col:52> 'size_t':'unsigned long long' lvalue ParmVar 0x229a2569cd8 'felem_size' 'size_t':'unsigned long long'
|   |       `-ImplicitCastExpr 0x229a256b728 <col:23, col:63> 'const void *' <BitCast>
|   |         `-ParenExpr 0x229a256b6a8 <col:23, col:63> 'char *'
|   |           `-UnaryOperator 0x229a256b690 <col:24, col:62> 'char *' prefix '&' cannot overflow
|   |             `-ArraySubscriptExpr 0x229a256b670 <col:25, col:62> 'char' lvalue
|   |               |-ParenExpr 0x229a256b540 <col:25, col:44> 'char *'
|   |               | `-CStyleCastExpr 0x229a256b518 <col:26, col:34> 'char *' <BitCast>
|   |               |   `-ImplicitCastExpr 0x229a256b500 <col:34> 'void *' <LValueToRValue> part_of_explicit_cast
|   |               |     `-DeclRefExpr 0x229a256b4c8 <col:34> 'void *' lvalue ParmVar 0x229a2569d58 'tmp_felems' 'void *'
|   |               `-BinaryOperator 0x229a256b650 <col:46, col:52> 'unsigned long long' '*'
|   |                 |-ImplicitCastExpr 0x229a256b638 <col:46, col:48> 'unsigned long long' <IntegralCast>
|   |                 | `-ParenExpr 0x229a256b5e0 <col:46, col:48> 'int'
|   |                 |   `-BinaryOperator 0x229a256b5c0 <line:90:50, col:54> 'int' '-'
|   |                 |     |-ImplicitCastExpr 0x229a256b5a8 <col:50> 'int' <LValueToRValue>
|   |                 |     | `-DeclRefExpr 0x229a256b560 <col:50> 'int' lvalue Var 0x229a2562c88 'i' 'int'
|   |                 |     `-IntegerLiteral 0x229a256b580 <col:54> 'int' 1
|   |                 `-ImplicitCastExpr 0x229a256b620 <line:77:52> 'size_t':'unsigned long long' <LValueToRValue>
|   |                   `-DeclRefExpr 0x229a256b600 <col:52> 'size_t':'unsigned long long' lvalue ParmVar 0x229a2569cd8 'felem_size' 'size_t':'unsigned long long'
|   |-CallExpr 0x229a256bbf0 <line:97:5, col:53> 'void'
|   | |-ImplicitCastExpr 0x229a256bbd8 <col:5> 'void (*)(void *, const void *)' <LValueToRValue>
|   | | `-DeclRefExpr 0x229a256b7b8 <col:5> 'void (*)(void *, const void *)' lvalue ParmVar 0x229a25627b8 'felem_inv' 'void (*)(void *, const void *)'
|   | |-ImplicitCastExpr 0x229a256bc20 <line:77:23, col:63> 'void *' <BitCast>
|   | | `-ParenExpr 0x229a256b9b8 <col:23, col:63> 'char *'
|   | |   `-UnaryOperator 0x229a256b9a0 <col:24, col:62> 'char *' prefix '&' cannot overflow
|   | |     `-ArraySubscriptExpr 0x229a256b980 <col:25, col:62> 'char' lvalue
|   | |       |-ParenExpr 0x229a256b850 <col:25, col:44> 'char *'
|   | |       | `-CStyleCastExpr 0x229a256b828 <col:26, col:34> 'char *' <BitCast>
|   | |       |   `-ImplicitCastExpr 0x229a256b810 <col:34> 'void *' <LValueToRValue> part_of_explicit_cast
|   | |       |     `-DeclRefExpr 0x229a256b7d8 <col:34> 'void *' lvalue ParmVar 0x229a2569d58 'tmp_felems' 'void *'
|   | |       `-BinaryOperator 0x229a256b960 <col:46, col:52> 'unsigned long long' '*'
|   | |         |-ParenExpr 0x229a256b908 <col:46, col:48> 'unsigned long long'
|   | |         | `-BinaryOperator 0x229a256b8e8 <line:97:25, col:31> 'unsigned long long' '-'
|   | |         |   |-ImplicitCastExpr 0x229a256b8b8 <col:25> 'size_t':'unsigned long long' <LValueToRValue>
|   | |         |   | `-DeclRefExpr 0x229a256b870 <col:25> 'size_t':'unsigned long long' lvalue ParmVar 0x229a2569be0 'num' 'size_t':'unsigned long long'
|   | |         |   `-ImplicitCastExpr 0x229a256b8d0 <col:31> 'unsigned long long' <IntegralCast>
|   | |         |     `-IntegerLiteral 0x229a256b890 <col:31> 'int' 1
|   | |         `-ImplicitCastExpr 0x229a256b948 <line:77:52> 'size_t':'unsigned long long' <LValueToRValue>
|   | |           `-DeclRefExpr 0x229a256b928 <col:52> 'size_t':'unsigned long long' lvalue ParmVar 0x229a2569cd8 'felem_size' 'size_t':'unsigned long long'
|   | `-ImplicitCastExpr 0x229a256bc38 <col:23, col:63> 'const void *' <BitCast>
|   |   `-ParenExpr 0x229a256bbb8 <col:23, col:63> 'char *'
|   |     `-UnaryOperator 0x229a256bba0 <col:24, col:62> 'char *' prefix '&' cannot overflow
|   |       `-ArraySubscriptExpr 0x229a256bb80 <col:25, col:62> 'char' lvalue
|   |         |-ParenExpr 0x229a256ba50 <col:25, col:44> 'char *'
|   |         | `-CStyleCastExpr 0x229a256ba28 <col:26, col:34> 'char *' <BitCast>
|   |         |   `-ImplicitCastExpr 0x229a256ba10 <col:34> 'void *' <LValueToRValue> part_of_explicit_cast
|   |         |     `-DeclRefExpr 0x229a256b9d8 <col:34> 'void *' lvalue ParmVar 0x229a2569d58 'tmp_felems' 'void *'
|   |         `-BinaryOperator 0x229a256bb60 <col:46, col:52> 'unsigned long long' '*'
|   |           |-ParenExpr 0x229a256bb08 <col:46, col:48> 'unsigned long long'
|   |           | `-BinaryOperator 0x229a256bae8 <line:97:45, col:51> 'unsigned long long' '-'
|   |           |   |-ImplicitCastExpr 0x229a256bab8 <col:45> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   | `-DeclRefExpr 0x229a256ba70 <col:45> 'size_t':'unsigned long long' lvalue ParmVar 0x229a2569be0 'num' 'size_t':'unsigned long long'
|   |           |   `-ImplicitCastExpr 0x229a256bad0 <col:51> 'unsigned long long' <IntegralCast>
|   |           |     `-IntegerLiteral 0x229a256ba90 <col:51> 'int' 1
|   |           `-ImplicitCastExpr 0x229a256bb48 <line:77:52> 'size_t':'unsigned long long' <LValueToRValue>
|   |             `-DeclRefExpr 0x229a256bb28 <col:52> 'size_t':'unsigned long long' lvalue ParmVar 0x229a2569cd8 'felem_size' 'size_t':'unsigned long long'
|   `-ForStmt 0x229a25730e8 <line:98:5, line:133:5>
|     |-BinaryOperator 0x229a256bd20 <line:98:10, col:20> 'int' '='
|     | |-DeclRefExpr 0x229a256bc50 <col:10> 'int' lvalue Var 0x229a2562c88 'i' 'int'
|     | `-ImplicitCastExpr 0x229a256bd08 <col:14, col:20> 'int' <IntegralCast>
|     |   `-BinaryOperator 0x229a256bce8 <col:14, col:20> 'unsigned long long' '-'
|     |     |-ImplicitCastExpr 0x229a256bcb8 <col:14> 'size_t':'unsigned long long' <LValueToRValue>
|     |     | `-DeclRefExpr 0x229a256bc70 <col:14> 'size_t':'unsigned long long' lvalue ParmVar 0x229a2569be0 'num' 'size_t':'unsigned long long'
|     |     `-ImplicitCastExpr 0x229a256bcd0 <col:20> 'unsigned long long' <IntegralCast>
|     |       `-IntegerLiteral 0x229a256bc90 <col:20> 'int' 1
|     |-<<<NULL>>>
|     |-BinaryOperator 0x229a256bda0 <col:23, col:28> 'int' '>='
|     | |-ImplicitCastExpr 0x229a256bd88 <col:23> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x229a256bd40 <col:23> 'int' lvalue Var 0x229a2562c88 'i' 'int'
|     | `-IntegerLiteral 0x229a256bd60 <col:28> 'int' 0
|     |-UnaryOperator 0x229a256bde0 <col:31, col:32> 'int' postfix '--'
|     | `-DeclRefExpr 0x229a256bdc0 <col:31> 'int' lvalue Var 0x229a2562c88 'i' 'int'
|     `-CompoundStmt 0x229a25730c8 <col:36, line:133:5>
|       |-IfStmt 0x229a2564800 <line:99:9, line:107:54> has_else
|       | |-BinaryOperator 0x229a256be58 <line:99:13, col:17> 'int' '>'
|       | | |-ImplicitCastExpr 0x229a256be40 <col:13> 'int' <LValueToRValue>
|       | | | `-DeclRefExpr 0x229a256bdf8 <col:13> 'int' lvalue Var 0x229a2562c88 'i' 'int'
|       | | `-IntegerLiteral 0x229a256be18 <col:17> 'int' 0
|       | |-CallExpr 0x229a25643a0 <line:105:13, col:69> 'void'
|       | | |-ImplicitCastExpr 0x229a2564388 <col:13> 'void (*)(void *, const void *, const void *)' <LValueToRValue>
|       | | | `-DeclRefExpr 0x229a256be78 <col:13> 'void (*)(void *, const void *, const void *)' lvalue ParmVar 0x229a25625e0 'felem_mul' 'void (*)(void *, const void *, const void *)'
|       | | |-ImplicitCastExpr 0x229a25643d8 <line:77:23, col:63> 'void *' <BitCast>
|       | | | `-ParenExpr 0x229a256c018 <col:23, col:63> 'char *'
|       | | |   `-UnaryOperator 0x229a256c000 <col:24, col:62> 'char *' prefix '&' cannot overflow
|       | | |     `-ArraySubscriptExpr 0x229a256bfe0 <col:25, col:62> 'char' lvalue
|       | | |       |-ParenExpr 0x229a256bf10 <col:25, col:44> 'char *'
|       | | |       | `-CStyleCastExpr 0x229a256bee8 <col:26, col:34> 'char *' <BitCast>
|       | | |       |   `-ImplicitCastExpr 0x229a256bed0 <col:34> 'void *' <LValueToRValue> part_of_explicit_cast
|       | | |       |     `-DeclRefExpr 0x229a256be98 <col:34> 'void *' lvalue ParmVar 0x229a2569d58 'tmp_felems' 'void *'
|       | | |       `-BinaryOperator 0x229a256bfc0 <col:46, col:52> 'unsigned long long' '*'
|       | | |         |-ImplicitCastExpr 0x229a256bf90 <col:46, col:48> 'size_t':'unsigned long long' <LValueToRValue>
|       | | |         | `-ParenExpr 0x229a256bf50 <col:46, col:48> 'size_t':'unsigned long long' lvalue
|       | | |         |   `-DeclRefExpr 0x229a256bf30 <line:105:33> 'size_t':'unsigned long long' lvalue ParmVar 0x229a2569be0 'num' 'size_t':'unsigned long long'
|       | | |         `-ImplicitCastExpr 0x229a256bfa8 <line:77:52> 'size_t':'unsigned long long' <LValueToRValue>
|       | | |           `-DeclRefExpr 0x229a256bf70 <col:52> 'size_t':'unsigned long long' lvalue ParmVar 0x229a2569cd8 'felem_size' 'size_t':'unsigned long long'
|       | | |-ImplicitCastExpr 0x229a25643f0 <col:23, col:63> 'const void *' <BitCast>
|       | | | `-ParenExpr 0x229a25641b0 <col:23, col:63> 'char *'
|       | | |   `-UnaryOperator 0x229a256c200 <col:24, col:62> 'char *' prefix '&' cannot overflow
|       | | |     `-ArraySubscriptExpr 0x229a256c1e0 <col:25, col:62> 'char' lvalue
|       | | |       |-ParenExpr 0x229a256c0b0 <col:25, col:44> 'char *'
|       | | |       | `-CStyleCastExpr 0x229a256c088 <col:26, col:34> 'char *' <BitCast>
|       | | |       |   `-ImplicitCastExpr 0x229a256c070 <col:34> 'void *' <LValueToRValue> part_of_explicit_cast
|       | | |       |     `-DeclRefExpr 0x229a256c038 <col:34> 'void *' lvalue ParmVar 0x229a2569d58 'tmp_felems' 'void *'
|       | | |       `-BinaryOperator 0x229a256c1c0 <col:46, col:52> 'unsigned long long' '*'
|       | | |         |-ImplicitCastExpr 0x229a256c1a8 <col:46, col:48> 'unsigned long long' <IntegralCast>
|       | | |         | `-ParenExpr 0x229a256c150 <col:46, col:48> 'int'
|       | | |         |   `-BinaryOperator 0x229a256c130 <line:105:49, col:53> 'int' '-'
|       | | |         |     |-ImplicitCastExpr 0x229a256c118 <col:49> 'int' <LValueToRValue>
|       | | |         |     | `-DeclRefExpr 0x229a256c0d0 <col:49> 'int' lvalue Var 0x229a2562c88 'i' 'int'
|       | | |         |     `-IntegerLiteral 0x229a256c0f0 <col:53> 'int' 1
|       | | |         `-ImplicitCastExpr 0x229a256c190 <line:77:52> 'size_t':'unsigned long long' <LValueToRValue>
|       | | |           `-DeclRefExpr 0x229a256c170 <col:52> 'size_t':'unsigned long long' lvalue ParmVar 0x229a2569cd8 'felem_size' 'size_t':'unsigned long long'
|       | | `-ImplicitCastExpr 0x229a2564408 <col:23, col:63> 'const void *' <BitCast>
|       | |   `-ParenExpr 0x229a2564368 <col:23, col:63> 'char *'
|       | |     `-UnaryOperator 0x229a2564350 <col:24, col:62> 'char *' prefix '&' cannot overflow
|       | |       `-ArraySubscriptExpr 0x229a2564330 <col:25, col:62> 'char' lvalue
|       | |         |-ParenExpr 0x229a2564248 <col:25, col:44> 'char *'
|       | |         | `-CStyleCastExpr 0x229a2564220 <col:26, col:34> 'char *' <BitCast>
|       | |         |   `-ImplicitCastExpr 0x229a2564208 <col:34> 'void *' <LValueToRValue> part_of_explicit_cast
|       | |         |     `-DeclRefExpr 0x229a25641d0 <col:34> 'void *' lvalue ParmVar 0x229a2569d58 'tmp_felems' 'void *'
|       | |         `-BinaryOperator 0x229a2564310 <col:46, col:52> 'unsigned long long' '*'
|       | |           |-ImplicitCastExpr 0x229a25642f8 <col:46, col:48> 'unsigned long long' <IntegralCast>
|       | |           | `-ImplicitCastExpr 0x229a25642c8 <col:46, col:48> 'int' <LValueToRValue>
|       | |           |   `-ParenExpr 0x229a2564288 <col:46, col:48> 'int' lvalue
|       | |           |     `-DeclRefExpr 0x229a2564268 <line:105:67> 'int' lvalue Var 0x229a2562c88 'i' 'int'
|       | |           `-ImplicitCastExpr 0x229a25642e0 <line:77:52> 'size_t':'unsigned long long' <LValueToRValue>
|       | |             `-DeclRefExpr 0x229a25642a8 <col:52> 'size_t':'unsigned long long' lvalue ParmVar 0x229a2569cd8 'felem_size' 'size_t':'unsigned long long'
|       | `-CallExpr 0x229a25647a0 <line:107:13, col:54> 'void'
|       |   |-ImplicitCastExpr 0x229a2564788 <col:13> 'void (*)(void *, const void *)' <LValueToRValue>
|       |   | `-DeclRefExpr 0x229a2564420 <col:13> 'void (*)(void *, const void *)' lvalue ParmVar 0x229a2562190 'felem_assign' 'void (*)(void *, const void *)'
|       |   |-ImplicitCastExpr 0x229a25647d0 <line:77:23, col:63> 'void *' <BitCast>
|       |   | `-ParenExpr 0x229a25645c0 <col:23, col:63> 'char *'
|       |   |   `-UnaryOperator 0x229a25645a8 <col:24, col:62> 'char *' prefix '&' cannot overflow
|       |   |     `-ArraySubscriptExpr 0x229a2564588 <col:25, col:62> 'char' lvalue
|       |   |       |-ParenExpr 0x229a25644b8 <col:25, col:44> 'char *'
|       |   |       | `-CStyleCastExpr 0x229a2564490 <col:26, col:34> 'char *' <BitCast>
|       |   |       |   `-ImplicitCastExpr 0x229a2564478 <col:34> 'void *' <LValueToRValue> part_of_explicit_cast
|       |   |       |     `-DeclRefExpr 0x229a2564440 <col:34> 'void *' lvalue ParmVar 0x229a2569d58 'tmp_felems' 'void *'
|       |   |       `-BinaryOperator 0x229a2564568 <col:46, col:52> 'unsigned long long' '*'
|       |   |         |-ImplicitCastExpr 0x229a2564538 <col:46, col:48> 'size_t':'unsigned long long' <LValueToRValue>
|       |   |         | `-ParenExpr 0x229a25644f8 <col:46, col:48> 'size_t':'unsigned long long' lvalue
|       |   |         |   `-DeclRefExpr 0x229a25644d8 <line:107:36> 'size_t':'unsigned long long' lvalue ParmVar 0x229a2569be0 'num' 'size_t':'unsigned long long'
|       |   |         `-ImplicitCastExpr 0x229a2564550 <line:77:52> 'size_t':'unsigned long long' <LValueToRValue>
|       |   |           `-DeclRefExpr 0x229a2564518 <col:52> 'size_t':'unsigned long long' lvalue ParmVar 0x229a2569cd8 'felem_size' 'size_t':'unsigned long long'
|       |   `-ImplicitCastExpr 0x229a25647e8 <col:23, col:63> 'const void *' <BitCast>
|       |     `-ParenExpr 0x229a2564768 <col:23, col:63> 'char *'
|       |       `-UnaryOperator 0x229a2564750 <col:24, col:62> 'char *' prefix '&' cannot overflow
|       |         `-ArraySubscriptExpr 0x229a2564730 <col:25, col:62> 'char' lvalue
|       |           |-ParenExpr 0x229a2564658 <col:25, col:44> 'char *'
|       |           | `-CStyleCastExpr 0x229a2564630 <col:26, col:34> 'char *' <BitCast>
|       |           |   `-ImplicitCastExpr 0x229a2564618 <col:34> 'void *' <LValueToRValue> part_of_explicit_cast
|       |           |     `-DeclRefExpr 0x229a25645e0 <col:34> 'void *' lvalue ParmVar 0x229a2569d58 'tmp_felems' 'void *'
|       |           `-BinaryOperator 0x229a2564710 <col:46, col:52> 'unsigned long long' '*'
|       |             |-ImplicitCastExpr 0x229a25646f8 <col:46, col:48> 'unsigned long long' <IntegralCast>
|       |             | `-ParenExpr 0x229a25646a0 <col:46, col:48> 'int'
|       |             |   `-IntegerLiteral 0x229a2564678 <line:107:52> 'int' 0
|       |             `-ImplicitCastExpr 0x229a25646e0 <line:77:52> 'size_t':'unsigned long long' <LValueToRValue>
|       |               `-DeclRefExpr 0x229a25646c0 <col:52> 'size_t':'unsigned long long' lvalue ParmVar 0x229a2569cd8 'felem_size' 'size_t':'unsigned long long'
|       `-IfStmt 0x229a25730a0 <line:109:9, line:132:9> has_else
|         |-UnaryOperator 0x229a2564b08 <line:109:13, col:32> 'int' prefix '!' cannot overflow
|         | `-CallExpr 0x229a2564ac8 <col:14, col:32> 'int'
|         |   |-ImplicitCastExpr 0x229a2564ab0 <col:14> 'int (*)(const void *)' <LValueToRValue>
|         |   | `-DeclRefExpr 0x229a2564828 <col:14> 'int (*)(const void *)' lvalue ParmVar 0x229a2569fd0 'felem_is_zero' 'int (*)(const void *)'
|         |   `-ImplicitCastExpr 0x229a2564af0 <line:80:15, col:64> 'const void *' <BitCast>
|         |     `-ParenExpr 0x229a2564a90 <col:15, col:64> 'char *'
|         |       `-UnaryOperator 0x229a2564a78 <col:16, col:63> 'char *' prefix '&' cannot overflow
|         |         `-ArraySubscriptExpr 0x229a2564a58 <col:17, col:63> 'char' lvalue
|         |           |-ParenExpr 0x229a25648c0 <col:17, col:37> 'char *'
|         |           | `-CStyleCastExpr 0x229a2564898 <col:18, col:26> 'char *' <BitCast>
|         |           |   `-ImplicitCastExpr 0x229a2564880 <col:26> 'void *' <LValueToRValue> part_of_explicit_cast
|         |           |     `-DeclRefExpr 0x229a2564848 <col:26> 'void *' lvalue ParmVar 0x229a2569c60 'point_array' 'void *'
|         |           `-BinaryOperator 0x229a2564a38 <col:39, col:53> 'unsigned long long' '*'
|         |             |-ImplicitCastExpr 0x229a2564a20 <col:39, col:49> 'unsigned long long' <IntegralCast>
|         |             | `-ParenExpr 0x229a25649c8 <col:39, col:49> 'int'
|         |             |   `-BinaryOperator 0x229a25649a8 <col:40, col:48> 'int' '+'
|         |             |     |-BinaryOperator 0x229a2564960 <col:40, col:44> 'int' '*'
|         |             |     | |-IntegerLiteral 0x229a25648e0 <col:40> 'int' 3
|         |             |     | `-ImplicitCastExpr 0x229a2564948 <col:42, col:44> 'int' <LValueToRValue>
|         |             |     |   `-ParenExpr 0x229a2564928 <col:42, col:44> 'int' lvalue
|         |             |     |     `-DeclRefExpr 0x229a2564908 <line:109:30> 'int' lvalue Var 0x229a2562c88 'i' 'int'
|         |             |     `-IntegerLiteral 0x229a2564980 <line:80:48> 'int' 2
|         |             `-ImplicitCastExpr 0x229a2564a08 <col:53> 'size_t':'unsigned long long' <LValueToRValue>
|         |               `-DeclRefExpr 0x229a25649e8 <col:53> 'size_t':'unsigned long long' lvalue ParmVar 0x229a2569cd8 'felem_size' 'size_t':'unsigned long long'
|         |-CompoundStmt 0x229a2572b50 <line:109:35, line:126:9>
|         | |-IfStmt 0x229a256c300 <line:110:13, line:114:63>
|         | | |-BinaryOperator 0x229a2564b80 <line:110:17, col:21> 'int' '>'
|         | | | |-ImplicitCastExpr 0x229a2564b68 <col:17> 'int' <LValueToRValue>
|         | | | | `-DeclRefExpr 0x229a2564b20 <col:17> 'int' lvalue Var 0x229a2562c88 'i' 'int'
|         | | | `-IntegerLiteral 0x229a2564b40 <col:21> 'int' 0
|         | | `-CallExpr 0x229a256c280 <line:114:17, col:63> 'void'
|         | |   |-ImplicitCastExpr 0x229a256c268 <col:17> 'void (*)(void *, const void *, const void *)' <LValueToRValue>
|         | |   | `-DeclRefExpr 0x229a2564ba0 <col:17> 'void (*)(void *, const void *, const void *)' lvalue ParmVar 0x229a25625e0 'felem_mul' 'void (*)(void *, const void *, const void *)'
|         | |   |-ImplicitCastExpr 0x229a256c2b8 <line:77:23, col:63> 'void *' <BitCast>
|         | |   | `-ParenExpr 0x229a2564da0 <col:23, col:63> 'char *'
|         | |   |   `-UnaryOperator 0x229a2564d88 <col:24, col:62> 'char *' prefix '&' cannot overflow
|         | |   |     `-ArraySubscriptExpr 0x229a2564d68 <col:25, col:62> 'char' lvalue
|         | |   |       |-ParenExpr 0x229a2564c38 <col:25, col:44> 'char *'
|         | |   |       | `-CStyleCastExpr 0x229a2564c10 <col:26, col:34> 'char *' <BitCast>
|         | |   |       |   `-ImplicitCastExpr 0x229a2564bf8 <col:34> 'void *' <LValueToRValue> part_of_explicit_cast
|         | |   |       |     `-DeclRefExpr 0x229a2564bc0 <col:34> 'void *' lvalue ParmVar 0x229a2569d58 'tmp_felems' 'void *'
|         | |   |       `-BinaryOperator 0x229a2564d48 <col:46, col:52> 'unsigned long long' '*'
|         | |   |         |-ImplicitCastExpr 0x229a2564d30 <col:46, col:48> 'unsigned long long' <IntegralCast>
|         | |   |         | `-ParenExpr 0x229a2564cd8 <col:46, col:48> 'int'
|         | |   |         |   `-BinaryOperator 0x229a2564cb8 <line:114:37, col:41> 'int' '-'
|         | |   |         |     |-ImplicitCastExpr 0x229a2564ca0 <col:37> 'int' <LValueToRValue>
|         | |   |         |     | `-DeclRefExpr 0x229a2564c58 <col:37> 'int' lvalue Var 0x229a2562c88 'i' 'int'
|         | |   |         |     `-IntegerLiteral 0x229a2564c78 <col:41> 'int' 1
|         | |   |         `-ImplicitCastExpr 0x229a2564d18 <line:77:52> 'size_t':'unsigned long long' <LValueToRValue>
|         | |   |           `-DeclRefExpr 0x229a2564cf8 <col:52> 'size_t':'unsigned long long' lvalue ParmVar 0x229a2569cd8 'felem_size' 'size_t':'unsigned long long'
|         | |   |-ImplicitCastExpr 0x229a256c2d0 <col:23, col:63> 'const void *' <BitCast>
|         | |   | `-ParenExpr 0x229a2564f58 <col:23, col:63> 'char *'
|         | |   |   `-UnaryOperator 0x229a2564f40 <col:24, col:62> 'char *' prefix '&' cannot overflow
|         | |   |     `-ArraySubscriptExpr 0x229a2564f20 <col:25, col:62> 'char' lvalue
|         | |   |       |-ParenExpr 0x229a2564e38 <col:25, col:44> 'char *'
|         | |   |       | `-CStyleCastExpr 0x229a2564e10 <col:26, col:34> 'char *' <BitCast>
|         | |   |       |   `-ImplicitCastExpr 0x229a2564df8 <col:34> 'void *' <LValueToRValue> part_of_explicit_cast
|         | |   |       |     `-DeclRefExpr 0x229a2564dc0 <col:34> 'void *' lvalue ParmVar 0x229a2569d58 'tmp_felems' 'void *'
|         | |   |       `-BinaryOperator 0x229a2564f00 <col:46, col:52> 'unsigned long long' '*'
|         | |   |         |-ImplicitCastExpr 0x229a2564ee8 <col:46, col:48> 'unsigned long long' <IntegralCast>
|         | |   |         | `-ImplicitCastExpr 0x229a2564eb8 <col:46, col:48> 'int' <LValueToRValue>
|         | |   |         |   `-ParenExpr 0x229a2564e78 <col:46, col:48> 'int' lvalue
|         | |   |         |     `-DeclRefExpr 0x229a2564e58 <line:114:55> 'int' lvalue Var 0x229a2562c88 'i' 'int'
|         | |   |         `-ImplicitCastExpr 0x229a2564ed0 <line:77:52> 'size_t':'unsigned long long' <LValueToRValue>
|         | |   |           `-DeclRefExpr 0x229a2564e98 <col:52> 'size_t':'unsigned long long' lvalue ParmVar 0x229a2569cd8 'felem_size' 'size_t':'unsigned long long'
|         | |   `-ImplicitCastExpr 0x229a256c2e8 <line:80:15, col:64> 'const void *' <BitCast>
|         | |     `-ParenExpr 0x229a256c248 <col:15, col:64> 'char *'
|         | |       `-UnaryOperator 0x229a256c230 <col:16, col:63> 'char *' prefix '&' cannot overflow
|         | |         `-ArraySubscriptExpr 0x229a2565188 <col:17, col:63> 'char' lvalue
|         | |           |-ParenExpr 0x229a2564ff0 <col:17, col:37> 'char *'
|         | |           | `-CStyleCastExpr 0x229a2564fc8 <col:18, col:26> 'char *' <BitCast>
|         | |           |   `-ImplicitCastExpr 0x229a2564fb0 <col:26> 'void *' <LValueToRValue> part_of_explicit_cast
|         | |           |     `-DeclRefExpr 0x229a2564f78 <col:26> 'void *' lvalue ParmVar 0x229a2569c60 'point_array' 'void *'
|         | |           `-BinaryOperator 0x229a2565168 <col:39, col:53> 'unsigned long long' '*'
|         | |             |-ImplicitCastExpr 0x229a2565150 <col:39, col:49> 'unsigned long long' <IntegralCast>
|         | |             | `-ParenExpr 0x229a25650f8 <col:39, col:49> 'int'
|         | |             |   `-BinaryOperator 0x229a25650d8 <col:40, col:48> 'int' '+'
|         | |             |     |-BinaryOperator 0x229a2565090 <col:40, col:44> 'int' '*'
|         | |             |     | |-IntegerLiteral 0x229a2565010 <col:40> 'int' 3
|         | |             |     | `-ImplicitCastExpr 0x229a2565078 <col:42, col:44> 'int' <LValueToRValue>
|         | |             |     |   `-ParenExpr 0x229a2565058 <col:42, col:44> 'int' lvalue
|         | |             |     |     `-DeclRefExpr 0x229a2565038 <line:114:61> 'int' lvalue Var 0x229a2562c88 'i' 'int'
|         | |             |     `-IntegerLiteral 0x229a25650b0 <line:80:48> 'int' 2
|         | |             `-ImplicitCastExpr 0x229a2565138 <col:53> 'size_t':'unsigned long long' <LValueToRValue>
|         | |               `-DeclRefExpr 0x229a2565118 <col:53> 'size_t':'unsigned long long' lvalue ParmVar 0x229a2569cd8 'felem_size' 'size_t':'unsigned long long'
|         | |-CallExpr 0x229a256c758 <line:119:13, col:46> 'void'
|         | | |-ImplicitCastExpr 0x229a256c740 <col:13> 'void (*)(void *, const void *)' <LValueToRValue>
|         | | | `-DeclRefExpr 0x229a256c318 <col:13> 'void (*)(void *, const void *)' lvalue ParmVar 0x229a2562368 'felem_square' 'void (*)(void *, const void *)'
|         | | |-ImplicitCastExpr 0x229a256c788 <line:80:15, col:64> 'void *' <BitCast>
|         | | | `-ParenExpr 0x229a256c580 <col:15, col:64> 'char *'
|         | | |   `-UnaryOperator 0x229a256c568 <col:16, col:63> 'char *' prefix '&' cannot overflow
|         | | |     `-ArraySubscriptExpr 0x229a256c548 <col:17, col:63> 'char' lvalue
|         | | |       |-ParenExpr 0x229a256c3b0 <col:17, col:37> 'char *'
|         | | |       | `-CStyleCastExpr 0x229a256c388 <col:18, col:26> 'char *' <BitCast>
|         | | |       |   `-ImplicitCastExpr 0x229a256c370 <col:26> 'void *' <LValueToRValue> part_of_explicit_cast
|         | | |       |     `-DeclRefExpr 0x229a256c338 <col:26> 'void *' lvalue ParmVar 0x229a2569c60 'point_array' 'void *'
|         | | |       `-BinaryOperator 0x229a256c528 <col:39, col:53> 'unsigned long long' '*'
|         | | |         |-ImplicitCastExpr 0x229a256c510 <col:39, col:49> 'unsigned long long' <IntegralCast>
|         | | |         | `-ParenExpr 0x229a256c4b8 <col:39, col:49> 'int'
|         | | |         |   `-BinaryOperator 0x229a256c498 <col:40, col:48> 'int' '+'
|         | | |         |     |-BinaryOperator 0x229a256c450 <col:40, col:44> 'int' '*'
|         | | |         |     | |-IntegerLiteral 0x229a256c3d0 <col:40> 'int' 3
|         | | |         |     | `-ImplicitCastExpr 0x229a256c438 <col:42, col:44> 'int' <LValueToRValue>
|         | | |         |     |   `-ParenExpr 0x229a256c418 <col:42, col:44> 'int' lvalue
|         | | |         |     |     `-DeclRefExpr 0x229a256c3f8 <line:119:28> 'int' lvalue Var 0x229a2562c88 'i' 'int'
|         | | |         |     `-IntegerLiteral 0x229a256c470 <line:80:48> 'int' 2
|         | | |         `-ImplicitCastExpr 0x229a256c4f8 <col:53> 'size_t':'unsigned long long' <LValueToRValue>
|         | | |           `-DeclRefExpr 0x229a256c4d8 <col:53> 'size_t':'unsigned long long' lvalue ParmVar 0x229a2569cd8 'felem_size' 'size_t':'unsigned long long'
|         | | `-ImplicitCastExpr 0x229a256c7a0 <line:77:23, col:63> 'const void *' <BitCast>
|         | |   `-ParenExpr 0x229a256c720 <col:23, col:63> 'char *'
|         | |     `-UnaryOperator 0x229a256c708 <col:24, col:62> 'char *' prefix '&' cannot overflow
|         | |       `-ArraySubscriptExpr 0x229a256c6e8 <col:25, col:62> 'char' lvalue
|         | |         |-ParenExpr 0x229a256c618 <col:25, col:44> 'char *'
|         | |         | `-CStyleCastExpr 0x229a256c5f0 <col:26, col:34> 'char *' <BitCast>
|         | |         |   `-ImplicitCastExpr 0x229a256c5d8 <col:34> 'void *' <LValueToRValue> part_of_explicit_cast
|         | |         |     `-DeclRefExpr 0x229a256c5a0 <col:34> 'void *' lvalue ParmVar 0x229a2569d58 'tmp_felems' 'void *'
|         | |         `-BinaryOperator 0x229a256c6c8 <col:46, col:52> 'unsigned long long' '*'
|         | |           |-ImplicitCastExpr 0x229a256c698 <col:46, col:48> 'size_t':'unsigned long long' <LValueToRValue>
|         | |           | `-ParenExpr 0x229a256c658 <col:46, col:48> 'size_t':'unsigned long long' lvalue
|         | |           |   `-DeclRefExpr 0x229a256c638 <line:119:42> 'size_t':'unsigned long long' lvalue ParmVar 0x229a2569be0 'num' 'size_t':'unsigned long long'
|         | |           `-ImplicitCastExpr 0x229a256c6b0 <line:77:52> 'size_t':'unsigned long long' <LValueToRValue>
|         | |             `-DeclRefExpr 0x229a256c678 <col:52> 'size_t':'unsigned long long' lvalue ParmVar 0x229a2569cd8 'felem_size' 'size_t':'unsigned long long'
|         | |-CallExpr 0x229a256ce58 <line:120:13, col:39> 'void'
|         | | |-ImplicitCastExpr 0x229a256ce40 <col:13> 'void (*)(void *, const void *, const void *)' <LValueToRValue>
|         | | | `-DeclRefExpr 0x229a256c7b8 <col:13> 'void (*)(void *, const void *, const void *)' lvalue ParmVar 0x229a25625e0 'felem_mul' 'void (*)(void *, const void *, const void *)'
|         | | |-ImplicitCastExpr 0x229a256ce90 <line:78:15, col:58> 'void *' <BitCast>
|         | | | `-ParenExpr 0x229a256c9b8 <col:15, col:58> 'char *'
|         | | |   `-UnaryOperator 0x229a256c9a0 <col:16, col:57> 'char *' prefix '&' cannot overflow
|         | | |     `-ArraySubscriptExpr 0x229a256c980 <col:17, col:57> 'char' lvalue
|         | | |       |-ParenExpr 0x229a256c850 <col:17, col:37> 'char *'
|         | | |       | `-CStyleCastExpr 0x229a256c828 <col:18, col:26> 'char *' <BitCast>
|         | | |       |   `-ImplicitCastExpr 0x229a256c810 <col:26> 'void *' <LValueToRValue> part_of_explicit_cast
|         | | |       |     `-DeclRefExpr 0x229a256c7d8 <col:26> 'void *' lvalue ParmVar 0x229a2569c60 'point_array' 'void *'
|         | | |       `-BinaryOperator 0x229a256c960 <col:39, col:47> 'unsigned long long' '*'
|         | | |         |-ImplicitCastExpr 0x229a256c948 <col:39, col:43> 'unsigned long long' <IntegralCast>
|         | | |         | `-BinaryOperator 0x229a256c8f0 <col:39, col:43> 'int' '*'
|         | | |         |   |-IntegerLiteral 0x229a256c870 <col:39> 'int' 3
|         | | |         |   `-ImplicitCastExpr 0x229a256c8d8 <col:41, col:43> 'int' <LValueToRValue>
|         | | |         |     `-ParenExpr 0x229a256c8b8 <col:41, col:43> 'int' lvalue
|         | | |         |       `-DeclRefExpr 0x229a256c898 <line:120:25> 'int' lvalue Var 0x229a2562c88 'i' 'int'
|         | | |         `-ImplicitCastExpr 0x229a256c930 <line:78:47> 'size_t':'unsigned long long' <LValueToRValue>
|         | | |           `-DeclRefExpr 0x229a256c910 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x229a2569cd8 'felem_size' 'size_t':'unsigned long long'
|         | | |-ImplicitCastExpr 0x229a256cea8 <col:15, col:58> 'const void *' <BitCast>
|         | | | `-ParenExpr 0x229a256cbb8 <col:15, col:58> 'char *'
|         | | |   `-UnaryOperator 0x229a256cba0 <col:16, col:57> 'char *' prefix '&' cannot overflow
|         | | |     `-ArraySubscriptExpr 0x229a256cb80 <col:17, col:57> 'char' lvalue
|         | | |       |-ParenExpr 0x229a256ca50 <col:17, col:37> 'char *'
|         | | |       | `-CStyleCastExpr 0x229a256ca28 <col:18, col:26> 'char *' <BitCast>
|         | | |       |   `-ImplicitCastExpr 0x229a256ca10 <col:26> 'void *' <LValueToRValue> part_of_explicit_cast
|         | | |       |     `-DeclRefExpr 0x229a256c9d8 <col:26> 'void *' lvalue ParmVar 0x229a2569c60 'point_array' 'void *'
|         | | |       `-BinaryOperator 0x229a256cb60 <col:39, col:47> 'unsigned long long' '*'
|         | | |         |-ImplicitCastExpr 0x229a256cb48 <col:39, col:43> 'unsigned long long' <IntegralCast>
|         | | |         | `-BinaryOperator 0x229a256caf0 <col:39, col:43> 'int' '*'
|         | | |         |   |-IntegerLiteral 0x229a256ca70 <col:39> 'int' 3
|         | | |         |   `-ImplicitCastExpr 0x229a256cad8 <col:41, col:43> 'int' <LValueToRValue>
|         | | |         |     `-ParenExpr 0x229a256cab8 <col:41, col:43> 'int' lvalue
|         | | |         |       `-DeclRefExpr 0x229a256ca98 <line:120:31> 'int' lvalue Var 0x229a2562c88 'i' 'int'
|         | | |         `-ImplicitCastExpr 0x229a256cb30 <line:78:47> 'size_t':'unsigned long long' <LValueToRValue>
|         | | |           `-DeclRefExpr 0x229a256cb10 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x229a2569cd8 'felem_size' 'size_t':'unsigned long long'
|         | | `-ImplicitCastExpr 0x229a256cec0 <line:80:15, col:64> 'const void *' <BitCast>
|         | |   `-ParenExpr 0x229a256ce20 <col:15, col:64> 'char *'
|         | |     `-UnaryOperator 0x229a256ce08 <col:16, col:63> 'char *' prefix '&' cannot overflow
|         | |       `-ArraySubscriptExpr 0x229a256cde8 <col:17, col:63> 'char' lvalue
|         | |         |-ParenExpr 0x229a256cc50 <col:17, col:37> 'char *'
|         | |         | `-CStyleCastExpr 0x229a256cc28 <col:18, col:26> 'char *' <BitCast>
|         | |         |   `-ImplicitCastExpr 0x229a256cc10 <col:26> 'void *' <LValueToRValue> part_of_explicit_cast
|         | |         |     `-DeclRefExpr 0x229a256cbd8 <col:26> 'void *' lvalue ParmVar 0x229a2569c60 'point_array' 'void *'
|         | |         `-BinaryOperator 0x229a256cdc8 <col:39, col:53> 'unsigned long long' '*'
|         | |           |-ImplicitCastExpr 0x229a256cdb0 <col:39, col:49> 'unsigned long long' <IntegralCast>
|         | |           | `-ParenExpr 0x229a256cd58 <col:39, col:49> 'int'
|         | |           |   `-BinaryOperator 0x229a256cd38 <col:40, col:48> 'int' '+'
|         | |           |     |-BinaryOperator 0x229a256ccf0 <col:40, col:44> 'int' '*'
|         | |           |     | |-IntegerLiteral 0x229a256cc70 <col:40> 'int' 3
|         | |           |     | `-ImplicitCastExpr 0x229a256ccd8 <col:42, col:44> 'int' <LValueToRValue>
|         | |           |     |   `-ParenExpr 0x229a256ccb8 <col:42, col:44> 'int' lvalue
|         | |           |     |     `-DeclRefExpr 0x229a256cc98 <line:120:37> 'int' lvalue Var 0x229a2562c88 'i' 'int'
|         | |           |     `-IntegerLiteral 0x229a256cd10 <line:80:48> 'int' 2
|         | |           `-ImplicitCastExpr 0x229a256cd98 <col:53> 'size_t':'unsigned long long' <LValueToRValue>
|         | |             `-DeclRefExpr 0x229a256cd78 <col:53> 'size_t':'unsigned long long' lvalue ParmVar 0x229a2569cd8 'felem_size' 'size_t':'unsigned long long'
|         | |-CallExpr 0x229a25715e0 <line:121:13, col:49> 'void'
|         | | |-ImplicitCastExpr 0x229a25715c8 <col:13> 'void (*)(void *, const void *, const void *)' <LValueToRValue>
|         | | | `-DeclRefExpr 0x229a256ced8 <col:13> 'void (*)(void *, const void *, const void *)' lvalue ParmVar 0x229a25625e0 'felem_mul' 'void (*)(void *, const void *, const void *)'
|         | | |-ImplicitCastExpr 0x229a2571618 <line:80:15, col:64> 'void *' <BitCast>
|         | | | `-ParenExpr 0x229a256d140 <col:15, col:64> 'char *'
|         | | |   `-UnaryOperator 0x229a256d128 <col:16, col:63> 'char *' prefix '&' cannot overflow
|         | | |     `-ArraySubscriptExpr 0x229a256d108 <col:17, col:63> 'char' lvalue
|         | | |       |-ParenExpr 0x229a256cf70 <col:17, col:37> 'char *'
|         | | |       | `-CStyleCastExpr 0x229a256cf48 <col:18, col:26> 'char *' <BitCast>
|         | | |       |   `-ImplicitCastExpr 0x229a256cf30 <col:26> 'void *' <LValueToRValue> part_of_explicit_cast
|         | | |       |     `-DeclRefExpr 0x229a256cef8 <col:26> 'void *' lvalue ParmVar 0x229a2569c60 'point_array' 'void *'
|         | | |       `-BinaryOperator 0x229a256d0e8 <col:39, col:53> 'unsigned long long' '*'
|         | | |         |-ImplicitCastExpr 0x229a256d0d0 <col:39, col:49> 'unsigned long long' <IntegralCast>
|         | | |         | `-ParenExpr 0x229a256d078 <col:39, col:49> 'int'
|         | | |         |   `-BinaryOperator 0x229a256d058 <col:40, col:48> 'int' '+'
|         | | |         |     |-BinaryOperator 0x229a256d010 <col:40, col:44> 'int' '*'
|         | | |         |     | |-IntegerLiteral 0x229a256cf90 <col:40> 'int' 3
|         | | |         |     | `-ImplicitCastExpr 0x229a256cff8 <col:42, col:44> 'int' <LValueToRValue>
|         | | |         |     |   `-ParenExpr 0x229a256cfd8 <col:42, col:44> 'int' lvalue
|         | | |         |     |     `-DeclRefExpr 0x229a256cfb8 <line:121:25> 'int' lvalue Var 0x229a2562c88 'i' 'int'
|         | | |         |     `-IntegerLiteral 0x229a256d030 <line:80:48> 'int' 2
|         | | |         `-ImplicitCastExpr 0x229a256d0b8 <col:53> 'size_t':'unsigned long long' <LValueToRValue>
|         | | |           `-DeclRefExpr 0x229a256d098 <col:53> 'size_t':'unsigned long long' lvalue ParmVar 0x229a2569cd8 'felem_size' 'size_t':'unsigned long long'
|         | | |-ImplicitCastExpr 0x229a2571630 <col:15, col:64> 'const void *' <BitCast>
|         | | | `-ParenExpr 0x229a2571408 <col:15, col:64> 'char *'
|         | | |   `-UnaryOperator 0x229a25713f0 <col:16, col:63> 'char *' prefix '&' cannot overflow
|         | | |     `-ArraySubscriptExpr 0x229a25713d0 <col:17, col:63> 'char' lvalue
|         | | |       |-ParenExpr 0x229a256d1d8 <col:17, col:37> 'char *'
|         | | |       | `-CStyleCastExpr 0x229a256d1b0 <col:18, col:26> 'char *' <BitCast>
|         | | |       |   `-ImplicitCastExpr 0x229a256d198 <col:26> 'void *' <LValueToRValue> part_of_explicit_cast
|         | | |       |     `-DeclRefExpr 0x229a256d160 <col:26> 'void *' lvalue ParmVar 0x229a2569c60 'point_array' 'void *'
|         | | |       `-BinaryOperator 0x229a25713b0 <col:39, col:53> 'unsigned long long' '*'
|         | | |         |-ImplicitCastExpr 0x229a2571398 <col:39, col:49> 'unsigned long long' <IntegralCast>
|         | | |         | `-ParenExpr 0x229a2571340 <col:39, col:49> 'int'
|         | | |         |   `-BinaryOperator 0x229a2571320 <col:40, col:48> 'int' '+'
|         | | |         |     |-BinaryOperator 0x229a25712d8 <col:40, col:44> 'int' '*'
|         | | |         |     | |-IntegerLiteral 0x229a256d1f8 <col:40> 'int' 3
|         | | |         |     | `-ImplicitCastExpr 0x229a25712c0 <col:42, col:44> 'int' <LValueToRValue>
|         | | |         |     |   `-ParenExpr 0x229a25712a0 <col:42, col:44> 'int' lvalue
|         | | |         |     |     `-DeclRefExpr 0x229a2571280 <line:121:31> 'int' lvalue Var 0x229a2562c88 'i' 'int'
|         | | |         |     `-IntegerLiteral 0x229a25712f8 <line:80:48> 'int' 2
|         | | |         `-ImplicitCastExpr 0x229a2571380 <col:53> 'size_t':'unsigned long long' <LValueToRValue>
|         | | |           `-DeclRefExpr 0x229a2571360 <col:53> 'size_t':'unsigned long long' lvalue ParmVar 0x229a2569cd8 'felem_size' 'size_t':'unsigned long long'
|         | | `-ImplicitCastExpr 0x229a2571648 <line:77:23, col:63> 'const void *' <BitCast>
|         | |   `-ParenExpr 0x229a25715a8 <col:23, col:63> 'char *'
|         | |     `-UnaryOperator 0x229a2571590 <col:24, col:62> 'char *' prefix '&' cannot overflow
|         | |       `-ArraySubscriptExpr 0x229a2571570 <col:25, col:62> 'char' lvalue
|         | |         |-ParenExpr 0x229a25714a0 <col:25, col:44> 'char *'
|         | |         | `-CStyleCastExpr 0x229a2571478 <col:26, col:34> 'char *' <BitCast>
|         | |         |   `-ImplicitCastExpr 0x229a2571460 <col:34> 'void *' <LValueToRValue> part_of_explicit_cast
|         | |         |     `-DeclRefExpr 0x229a2571428 <col:34> 'void *' lvalue ParmVar 0x229a2569d58 'tmp_felems' 'void *'
|         | |         `-BinaryOperator 0x229a2571550 <col:46, col:52> 'unsigned long long' '*'
|         | |           |-ImplicitCastExpr 0x229a2571520 <col:46, col:48> 'size_t':'unsigned long long' <LValueToRValue>
|         | |           | `-ParenExpr 0x229a25714e0 <col:46, col:48> 'size_t':'unsigned long long' lvalue
|         | |           |   `-DeclRefExpr 0x229a25714c0 <line:121:45> 'size_t':'unsigned long long' lvalue ParmVar 0x229a2569be0 'num' 'size_t':'unsigned long long'
|         | |           `-ImplicitCastExpr 0x229a2571538 <line:77:52> 'size_t':'unsigned long long' <LValueToRValue>
|         | |             `-DeclRefExpr 0x229a2571500 <col:52> 'size_t':'unsigned long long' lvalue ParmVar 0x229a2569cd8 'felem_size' 'size_t':'unsigned long long'
|         | |-CallExpr 0x229a2571dd0 <line:122:13, col:39> 'void'
|         | | |-ImplicitCastExpr 0x229a2571db8 <col:13> 'void (*)(void *, const void *, const void *)' <LValueToRValue>
|         | | | `-DeclRefExpr 0x229a2571660 <col:13> 'void (*)(void *, const void *, const void *)' lvalue ParmVar 0x229a25625e0 'felem_mul' 'void (*)(void *, const void *, const void *)'
|         | | |-ImplicitCastExpr 0x229a2571e08 <line:79:15, col:64> 'void *' <BitCast>
|         | | | `-ParenExpr 0x229a25718c8 <col:15, col:64> 'char *'
|         | | |   `-UnaryOperator 0x229a25718b0 <col:16, col:63> 'char *' prefix '&' cannot overflow
|         | | |     `-ArraySubscriptExpr 0x229a2571890 <col:17, col:63> 'char' lvalue
|         | | |       |-ParenExpr 0x229a25716f8 <col:17, col:37> 'char *'
|         | | |       | `-CStyleCastExpr 0x229a25716d0 <col:18, col:26> 'char *' <BitCast>
|         | | |       |   `-ImplicitCastExpr 0x229a25716b8 <col:26> 'void *' <LValueToRValue> part_of_explicit_cast
|         | | |       |     `-DeclRefExpr 0x229a2571680 <col:26> 'void *' lvalue ParmVar 0x229a2569c60 'point_array' 'void *'
|         | | |       `-BinaryOperator 0x229a2571870 <col:39, col:53> 'unsigned long long' '*'
|         | | |         |-ImplicitCastExpr 0x229a2571858 <col:39, col:49> 'unsigned long long' <IntegralCast>
|         | | |         | `-ParenExpr 0x229a2571800 <col:39, col:49> 'int'
|         | | |         |   `-BinaryOperator 0x229a25717e0 <col:40, col:48> 'int' '+'
|         | | |         |     |-BinaryOperator 0x229a2571798 <col:40, col:44> 'int' '*'
|         | | |         |     | |-IntegerLiteral 0x229a2571718 <col:40> 'int' 3
|         | | |         |     | `-ImplicitCastExpr 0x229a2571780 <col:42, col:44> 'int' <LValueToRValue>
|         | | |         |     |   `-ParenExpr 0x229a2571760 <col:42, col:44> 'int' lvalue
|         | | |         |     |     `-DeclRefExpr 0x229a2571740 <line:122:25> 'int' lvalue Var 0x229a2562c88 'i' 'int'
|         | | |         |     `-IntegerLiteral 0x229a25717b8 <line:79:48> 'int' 1
|         | | |         `-ImplicitCastExpr 0x229a2571840 <col:53> 'size_t':'unsigned long long' <LValueToRValue>
|         | | |           `-DeclRefExpr 0x229a2571820 <col:53> 'size_t':'unsigned long long' lvalue ParmVar 0x229a2569cd8 'felem_size' 'size_t':'unsigned long long'
|         | | |-ImplicitCastExpr 0x229a2571e20 <col:15, col:64> 'const void *' <BitCast>
|         | | | `-ParenExpr 0x229a2571b30 <col:15, col:64> 'char *'
|         | | |   `-UnaryOperator 0x229a2571b18 <col:16, col:63> 'char *' prefix '&' cannot overflow
|         | | |     `-ArraySubscriptExpr 0x229a2571af8 <col:17, col:63> 'char' lvalue
|         | | |       |-ParenExpr 0x229a2571960 <col:17, col:37> 'char *'
|         | | |       | `-CStyleCastExpr 0x229a2571938 <col:18, col:26> 'char *' <BitCast>
|         | | |       |   `-ImplicitCastExpr 0x229a2571920 <col:26> 'void *' <LValueToRValue> part_of_explicit_cast
|         | | |       |     `-DeclRefExpr 0x229a25718e8 <col:26> 'void *' lvalue ParmVar 0x229a2569c60 'point_array' 'void *'
|         | | |       `-BinaryOperator 0x229a2571ad8 <col:39, col:53> 'unsigned long long' '*'
|         | | |         |-ImplicitCastExpr 0x229a2571ac0 <col:39, col:49> 'unsigned long long' <IntegralCast>
|         | | |         | `-ParenExpr 0x229a2571a68 <col:39, col:49> 'int'
|         | | |         |   `-BinaryOperator 0x229a2571a48 <col:40, col:48> 'int' '+'
|         | | |         |     |-BinaryOperator 0x229a2571a00 <col:40, col:44> 'int' '*'
|         | | |         |     | |-IntegerLiteral 0x229a2571980 <col:40> 'int' 3
|         | | |         |     | `-ImplicitCastExpr 0x229a25719e8 <col:42, col:44> 'int' <LValueToRValue>
|         | | |         |     |   `-ParenExpr 0x229a25719c8 <col:42, col:44> 'int' lvalue
|         | | |         |     |     `-DeclRefExpr 0x229a25719a8 <line:122:31> 'int' lvalue Var 0x229a2562c88 'i' 'int'
|         | | |         |     `-IntegerLiteral 0x229a2571a20 <line:79:48> 'int' 1
|         | | |         `-ImplicitCastExpr 0x229a2571aa8 <col:53> 'size_t':'unsigned long long' <LValueToRValue>
|         | | |           `-DeclRefExpr 0x229a2571a88 <col:53> 'size_t':'unsigned long long' lvalue ParmVar 0x229a2569cd8 'felem_size' 'size_t':'unsigned long long'
|         | | `-ImplicitCastExpr 0x229a2571e38 <line:80:15, col:64> 'const void *' <BitCast>
|         | |   `-ParenExpr 0x229a2571d98 <col:15, col:64> 'char *'
|         | |     `-UnaryOperator 0x229a2571d80 <col:16, col:63> 'char *' prefix '&' cannot overflow
|         | |       `-ArraySubscriptExpr 0x229a2571d60 <col:17, col:63> 'char' lvalue
|         | |         |-ParenExpr 0x229a2571bc8 <col:17, col:37> 'char *'
|         | |         | `-CStyleCastExpr 0x229a2571ba0 <col:18, col:26> 'char *' <BitCast>
|         | |         |   `-ImplicitCastExpr 0x229a2571b88 <col:26> 'void *' <LValueToRValue> part_of_explicit_cast
|         | |         |     `-DeclRefExpr 0x229a2571b50 <col:26> 'void *' lvalue ParmVar 0x229a2569c60 'point_array' 'void *'
|         | |         `-BinaryOperator 0x229a2571d40 <col:39, col:53> 'unsigned long long' '*'
|         | |           |-ImplicitCastExpr 0x229a2571d28 <col:39, col:49> 'unsigned long long' <IntegralCast>
|         | |           | `-ParenExpr 0x229a2571cd0 <col:39, col:49> 'int'
|         | |           |   `-BinaryOperator 0x229a2571cb0 <col:40, col:48> 'int' '+'
|         | |           |     |-BinaryOperator 0x229a2571c68 <col:40, col:44> 'int' '*'
|         | |           |     | |-IntegerLiteral 0x229a2571be8 <col:40> 'int' 3
|         | |           |     | `-ImplicitCastExpr 0x229a2571c50 <col:42, col:44> 'int' <LValueToRValue>
|         | |           |     |   `-ParenExpr 0x229a2571c30 <col:42, col:44> 'int' lvalue
|         | |           |     |     `-DeclRefExpr 0x229a2571c10 <line:122:37> 'int' lvalue Var 0x229a2562c88 'i' 'int'
|         | |           |     `-IntegerLiteral 0x229a2571c88 <line:80:48> 'int' 2
|         | |           `-ImplicitCastExpr 0x229a2571d10 <col:53> 'size_t':'unsigned long long' <LValueToRValue>
|         | |             `-DeclRefExpr 0x229a2571cf0 <col:53> 'size_t':'unsigned long long' lvalue ParmVar 0x229a2569cd8 'felem_size' 'size_t':'unsigned long long'
|         | |-CallExpr 0x229a25722a8 <line:123:13, col:38> 'void'
|         | | |-ImplicitCastExpr 0x229a2572290 <col:13> 'void (*)(void *, const void *)' <LValueToRValue>
|         | | | `-DeclRefExpr 0x229a2571e50 <col:13> 'void (*)(void *, const void *)' lvalue ParmVar 0x229a2562990 'felem_contract' 'void (*)(void *, const void *)'
|         | | |-ImplicitCastExpr 0x229a25722d8 <line:78:15, col:58> 'void *' <BitCast>
|         | | | `-ParenExpr 0x229a2572050 <col:15, col:58> 'char *'
|         | | |   `-UnaryOperator 0x229a2572038 <col:16, col:57> 'char *' prefix '&' cannot overflow
|         | | |     `-ArraySubscriptExpr 0x229a2572018 <col:17, col:57> 'char' lvalue
|         | | |       |-ParenExpr 0x229a2571ee8 <col:17, col:37> 'char *'
|         | | |       | `-CStyleCastExpr 0x229a2571ec0 <col:18, col:26> 'char *' <BitCast>
|         | | |       |   `-ImplicitCastExpr 0x229a2571ea8 <col:26> 'void *' <LValueToRValue> part_of_explicit_cast
|         | | |       |     `-DeclRefExpr 0x229a2571e70 <col:26> 'void *' lvalue ParmVar 0x229a2569c60 'point_array' 'void *'
|         | | |       `-BinaryOperator 0x229a2571ff8 <col:39, col:47> 'unsigned long long' '*'
|         | | |         |-ImplicitCastExpr 0x229a2571fe0 <col:39, col:43> 'unsigned long long' <IntegralCast>
|         | | |         | `-BinaryOperator 0x229a2571f88 <col:39, col:43> 'int' '*'
|         | | |         |   |-IntegerLiteral 0x229a2571f08 <col:39> 'int' 3
|         | | |         |   `-ImplicitCastExpr 0x229a2571f70 <col:41, col:43> 'int' <LValueToRValue>
|         | | |         |     `-ParenExpr 0x229a2571f50 <col:41, col:43> 'int' lvalue
|         | | |         |       `-DeclRefExpr 0x229a2571f30 <line:123:30> 'int' lvalue Var 0x229a2562c88 'i' 'int'
|         | | |         `-ImplicitCastExpr 0x229a2571fc8 <line:78:47> 'size_t':'unsigned long long' <LValueToRValue>
|         | | |           `-DeclRefExpr 0x229a2571fa8 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x229a2569cd8 'felem_size' 'size_t':'unsigned long long'
|         | | `-ImplicitCastExpr 0x229a25722f0 <col:15, col:58> 'const void *' <BitCast>
|         | |   `-ParenExpr 0x229a2572250 <col:15, col:58> 'char *'
|         | |     `-UnaryOperator 0x229a2572238 <col:16, col:57> 'char *' prefix '&' cannot overflow
|         | |       `-ArraySubscriptExpr 0x229a2572218 <col:17, col:57> 'char' lvalue
|         | |         |-ParenExpr 0x229a25720e8 <col:17, col:37> 'char *'
|         | |         | `-CStyleCastExpr 0x229a25720c0 <col:18, col:26> 'char *' <BitCast>
|         | |         |   `-ImplicitCastExpr 0x229a25720a8 <col:26> 'void *' <LValueToRValue> part_of_explicit_cast
|         | |         |     `-DeclRefExpr 0x229a2572070 <col:26> 'void *' lvalue ParmVar 0x229a2569c60 'point_array' 'void *'
|         | |         `-BinaryOperator 0x229a25721f8 <col:39, col:47> 'unsigned long long' '*'
|         | |           |-ImplicitCastExpr 0x229a25721e0 <col:39, col:43> 'unsigned long long' <IntegralCast>
|         | |           | `-BinaryOperator 0x229a2572188 <col:39, col:43> 'int' '*'
|         | |           |   |-IntegerLiteral 0x229a2572108 <col:39> 'int' 3
|         | |           |   `-ImplicitCastExpr 0x229a2572170 <col:41, col:43> 'int' <LValueToRValue>
|         | |           |     `-ParenExpr 0x229a2572150 <col:41, col:43> 'int' lvalue
|         | |           |       `-DeclRefExpr 0x229a2572130 <line:123:36> 'int' lvalue Var 0x229a2562c88 'i' 'int'
|         | |           `-ImplicitCastExpr 0x229a25721c8 <line:78:47> 'size_t':'unsigned long long' <LValueToRValue>
|         | |             `-DeclRefExpr 0x229a25721a8 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x229a2569cd8 'felem_size' 'size_t':'unsigned long long'
|         | |-CallExpr 0x229a2572810 <line:124:13, col:38> 'void'
|         | | |-ImplicitCastExpr 0x229a25727f8 <col:13> 'void (*)(void *, const void *)' <LValueToRValue>
|         | | | `-DeclRefExpr 0x229a2572308 <col:13> 'void (*)(void *, const void *)' lvalue ParmVar 0x229a2562990 'felem_contract' 'void (*)(void *, const void *)'
|         | | |-ImplicitCastExpr 0x229a2572840 <line:79:15, col:64> 'void *' <BitCast>
|         | | | `-ParenExpr 0x229a2572570 <col:15, col:64> 'char *'
|         | | |   `-UnaryOperator 0x229a2572558 <col:16, col:63> 'char *' prefix '&' cannot overflow
|         | | |     `-ArraySubscriptExpr 0x229a2572538 <col:17, col:63> 'char' lvalue
|         | | |       |-ParenExpr 0x229a25723a0 <col:17, col:37> 'char *'
|         | | |       | `-CStyleCastExpr 0x229a2572378 <col:18, col:26> 'char *' <BitCast>
|         | | |       |   `-ImplicitCastExpr 0x229a2572360 <col:26> 'void *' <LValueToRValue> part_of_explicit_cast
|         | | |       |     `-DeclRefExpr 0x229a2572328 <col:26> 'void *' lvalue ParmVar 0x229a2569c60 'point_array' 'void *'
|         | | |       `-BinaryOperator 0x229a2572518 <col:39, col:53> 'unsigned long long' '*'
|         | | |         |-ImplicitCastExpr 0x229a2572500 <col:39, col:49> 'unsigned long long' <IntegralCast>
|         | | |         | `-ParenExpr 0x229a25724a8 <col:39, col:49> 'int'
|         | | |         |   `-BinaryOperator 0x229a2572488 <col:40, col:48> 'int' '+'
|         | | |         |     |-BinaryOperator 0x229a2572440 <col:40, col:44> 'int' '*'
|         | | |         |     | |-IntegerLiteral 0x229a25723c0 <col:40> 'int' 3
|         | | |         |     | `-ImplicitCastExpr 0x229a2572428 <col:42, col:44> 'int' <LValueToRValue>
|         | | |         |     |   `-ParenExpr 0x229a2572408 <col:42, col:44> 'int' lvalue
|         | | |         |     |     `-DeclRefExpr 0x229a25723e8 <line:124:30> 'int' lvalue Var 0x229a2562c88 'i' 'int'
|         | | |         |     `-IntegerLiteral 0x229a2572460 <line:79:48> 'int' 1
|         | | |         `-ImplicitCastExpr 0x229a25724e8 <col:53> 'size_t':'unsigned long long' <LValueToRValue>
|         | | |           `-DeclRefExpr 0x229a25724c8 <col:53> 'size_t':'unsigned long long' lvalue ParmVar 0x229a2569cd8 'felem_size' 'size_t':'unsigned long long'
|         | | `-ImplicitCastExpr 0x229a2572858 <col:15, col:64> 'const void *' <BitCast>
|         | |   `-ParenExpr 0x229a25727d8 <col:15, col:64> 'char *'
|         | |     `-UnaryOperator 0x229a25727c0 <col:16, col:63> 'char *' prefix '&' cannot overflow
|         | |       `-ArraySubscriptExpr 0x229a25727a0 <col:17, col:63> 'char' lvalue
|         | |         |-ParenExpr 0x229a2572608 <col:17, col:37> 'char *'
|         | |         | `-CStyleCastExpr 0x229a25725e0 <col:18, col:26> 'char *' <BitCast>
|         | |         |   `-ImplicitCastExpr 0x229a25725c8 <col:26> 'void *' <LValueToRValue> part_of_explicit_cast
|         | |         |     `-DeclRefExpr 0x229a2572590 <col:26> 'void *' lvalue ParmVar 0x229a2569c60 'point_array' 'void *'
|         | |         `-BinaryOperator 0x229a2572780 <col:39, col:53> 'unsigned long long' '*'
|         | |           |-ImplicitCastExpr 0x229a2572768 <col:39, col:49> 'unsigned long long' <IntegralCast>
|         | |           | `-ParenExpr 0x229a2572710 <col:39, col:49> 'int'
|         | |           |   `-BinaryOperator 0x229a25726f0 <col:40, col:48> 'int' '+'
|         | |           |     |-BinaryOperator 0x229a25726a8 <col:40, col:44> 'int' '*'
|         | |           |     | |-IntegerLiteral 0x229a2572628 <col:40> 'int' 3
|         | |           |     | `-ImplicitCastExpr 0x229a2572690 <col:42, col:44> 'int' <LValueToRValue>
|         | |           |     |   `-ParenExpr 0x229a2572670 <col:42, col:44> 'int' lvalue
|         | |           |     |     `-DeclRefExpr 0x229a2572650 <line:124:36> 'int' lvalue Var 0x229a2562c88 'i' 'int'
|         | |           |     `-IntegerLiteral 0x229a25726c8 <line:79:48> 'int' 1
|         | |           `-ImplicitCastExpr 0x229a2572750 <col:53> 'size_t':'unsigned long long' <LValueToRValue>
|         | |             `-DeclRefExpr 0x229a2572730 <col:53> 'size_t':'unsigned long long' lvalue ParmVar 0x229a2569cd8 'felem_size' 'size_t':'unsigned long long'
|         | `-CallExpr 0x229a2572b10 <line:125:13, col:27> 'void'
|         |   |-ImplicitCastExpr 0x229a2572af8 <col:13> 'void (*)(void *)' <LValueToRValue>
|         |   | `-DeclRefExpr 0x229a2572870 <col:13> 'void (*)(void *)' lvalue ParmVar 0x229a2569e90 'felem_one' 'void (*)(void *)'
|         |   `-ImplicitCastExpr 0x229a2572b38 <line:80:15, col:64> 'void *' <BitCast>
|         |     `-ParenExpr 0x229a2572ad8 <col:15, col:64> 'char *'
|         |       `-UnaryOperator 0x229a2572ac0 <col:16, col:63> 'char *' prefix '&' cannot overflow
|         |         `-ArraySubscriptExpr 0x229a2572aa0 <col:17, col:63> 'char' lvalue
|         |           |-ParenExpr 0x229a2572908 <col:17, col:37> 'char *'
|         |           | `-CStyleCastExpr 0x229a25728e0 <col:18, col:26> 'char *' <BitCast>
|         |           |   `-ImplicitCastExpr 0x229a25728c8 <col:26> 'void *' <LValueToRValue> part_of_explicit_cast
|         |           |     `-DeclRefExpr 0x229a2572890 <col:26> 'void *' lvalue ParmVar 0x229a2569c60 'point_array' 'void *'
|         |           `-BinaryOperator 0x229a2572a80 <col:39, col:53> 'unsigned long long' '*'
|         |             |-ImplicitCastExpr 0x229a2572a68 <col:39, col:49> 'unsigned long long' <IntegralCast>
|         |             | `-ParenExpr 0x229a2572a10 <col:39, col:49> 'int'
|         |             |   `-BinaryOperator 0x229a25729f0 <col:40, col:48> 'int' '+'
|         |             |     |-BinaryOperator 0x229a25729a8 <col:40, col:44> 'int' '*'
|         |             |     | |-IntegerLiteral 0x229a2572928 <col:40> 'int' 3
|         |             |     | `-ImplicitCastExpr 0x229a2572990 <col:42, col:44> 'int' <LValueToRValue>
|         |             |     |   `-ParenExpr 0x229a2572970 <col:42, col:44> 'int' lvalue
|         |             |     |     `-DeclRefExpr 0x229a2572950 <line:125:25> 'int' lvalue Var 0x229a2562c88 'i' 'int'
|         |             |     `-IntegerLiteral 0x229a25729c8 <line:80:48> 'int' 2
|         |             `-ImplicitCastExpr 0x229a2572a50 <col:53> 'size_t':'unsigned long long' <LValueToRValue>
|         |               `-DeclRefExpr 0x229a2572a30 <col:53> 'size_t':'unsigned long long' lvalue ParmVar 0x229a2569cd8 'felem_size' 'size_t':'unsigned long long'
|         `-CompoundStmt 0x229a2573088 <line:126:16, line:132:9>
|           `-IfStmt 0x229a2573070 <line:127:13, line:131:60>
|             |-BinaryOperator 0x229a2572c00 <line:127:17, col:21> 'int' '>'
|             | |-ImplicitCastExpr 0x229a2572be8 <col:17> 'int' <LValueToRValue>
|             | | `-DeclRefExpr 0x229a2572ba0 <col:17> 'int' lvalue Var 0x229a2562c88 'i' 'int'
|             | `-IntegerLiteral 0x229a2572bc0 <col:21> 'int' 0
|             `-CallExpr 0x229a2573010 <line:131:17, col:60> 'void'
|               |-ImplicitCastExpr 0x229a2572ff8 <col:17> 'void (*)(void *, const void *)' <LValueToRValue>
|               | `-DeclRefExpr 0x229a2572c20 <col:17> 'void (*)(void *, const void *)' lvalue ParmVar 0x229a2562190 'felem_assign' 'void (*)(void *, const void *)'
|               |-ImplicitCastExpr 0x229a2573040 <line:77:23, col:63> 'void *' <BitCast>
|               | `-ParenExpr 0x229a2572e20 <col:23, col:63> 'char *'
|               |   `-UnaryOperator 0x229a2572e08 <col:24, col:62> 'char *' prefix '&' cannot overflow
|               |     `-ArraySubscriptExpr 0x229a2572de8 <col:25, col:62> 'char' lvalue
|               |       |-ParenExpr 0x229a2572cb8 <col:25, col:44> 'char *'
|               |       | `-CStyleCastExpr 0x229a2572c90 <col:26, col:34> 'char *' <BitCast>
|               |       |   `-ImplicitCastExpr 0x229a2572c78 <col:34> 'void *' <LValueToRValue> part_of_explicit_cast
|               |       |     `-DeclRefExpr 0x229a2572c40 <col:34> 'void *' lvalue ParmVar 0x229a2569d58 'tmp_felems' 'void *'
|               |       `-BinaryOperator 0x229a2572dc8 <col:46, col:52> 'unsigned long long' '*'
|               |         |-ImplicitCastExpr 0x229a2572db0 <col:46, col:48> 'unsigned long long' <IntegralCast>
|               |         | `-ParenExpr 0x229a2572d58 <col:46, col:48> 'int'
|               |         |   `-BinaryOperator 0x229a2572d38 <line:131:40, col:44> 'int' '-'
|               |         |     |-ImplicitCastExpr 0x229a2572d20 <col:40> 'int' <LValueToRValue>
|               |         |     | `-DeclRefExpr 0x229a2572cd8 <col:40> 'int' lvalue Var 0x229a2562c88 'i' 'int'
|               |         |     `-IntegerLiteral 0x229a2572cf8 <col:44> 'int' 1
|               |         `-ImplicitCastExpr 0x229a2572d98 <line:77:52> 'size_t':'unsigned long long' <LValueToRValue>
|               |           `-DeclRefExpr 0x229a2572d78 <col:52> 'size_t':'unsigned long long' lvalue ParmVar 0x229a2569cd8 'felem_size' 'size_t':'unsigned long long'
|               `-ImplicitCastExpr 0x229a2573058 <col:23, col:63> 'const void *' <BitCast>
|                 `-ParenExpr 0x229a2572fd8 <col:23, col:63> 'char *'
|                   `-UnaryOperator 0x229a2572fc0 <col:24, col:62> 'char *' prefix '&' cannot overflow
|                     `-ArraySubscriptExpr 0x229a2572fa0 <col:25, col:62> 'char' lvalue
|                       |-ParenExpr 0x229a2572eb8 <col:25, col:44> 'char *'
|                       | `-CStyleCastExpr 0x229a2572e90 <col:26, col:34> 'char *' <BitCast>
|                       |   `-ImplicitCastExpr 0x229a2572e78 <col:34> 'void *' <LValueToRValue> part_of_explicit_cast
|                       |     `-DeclRefExpr 0x229a2572e40 <col:34> 'void *' lvalue ParmVar 0x229a2569d58 'tmp_felems' 'void *'
|                       `-BinaryOperator 0x229a2572f80 <col:46, col:52> 'unsigned long long' '*'
|                         |-ImplicitCastExpr 0x229a2572f68 <col:46, col:48> 'unsigned long long' <IntegralCast>
|                         | `-ImplicitCastExpr 0x229a2572f38 <col:46, col:48> 'int' <LValueToRValue>
|                         |   `-ParenExpr 0x229a2572ef8 <col:46, col:48> 'int' lvalue
|                         |     `-DeclRefExpr 0x229a2572ed8 <line:131:58> 'int' lvalue Var 0x229a2562c88 'i' 'int'
|                         `-ImplicitCastExpr 0x229a2572f50 <line:77:52> 'size_t':'unsigned long long' <LValueToRValue>
|                           `-DeclRefExpr 0x229a2572f18 <col:52> 'size_t':'unsigned long long' lvalue ParmVar 0x229a2569cd8 'felem_size' 'size_t':'unsigned long long'
`-FunctionDecl 0x229a256f348 prev 0x229a25603b8 <line:209:1, line:222:1> line:209:6 ec_GFp_nistp_recode_scalar_bits 'void (unsigned char *, unsigned char *, unsigned char)'
  |-ParmVarDecl 0x229a2573170 <col:38, col:53> col:53 used sign 'unsigned char *'
  |-ParmVarDecl 0x229a25731f0 <line:210:38, col:53> col:53 used digit 'unsigned char *'
  |-ParmVarDecl 0x229a256f260 <col:60, col:74> col:74 used in 'unsigned char'
  `-CompoundStmt 0x229a256fe90 <line:211:1, line:222:1>
    |-DeclStmt 0x229a256f518 <line:212:5, col:23>
    | |-VarDecl 0x229a256f418 <col:5, col:19> col:19 used s 'unsigned char'
    | `-VarDecl 0x229a256f498 <col:5, col:22> col:22 used d 'unsigned char'
    |-BinaryOperator 0x229a256f6b8 <line:214:5, col:24> 'unsigned char' '='
    | |-DeclRefExpr 0x229a256f530 <col:5> 'unsigned char' lvalue Var 0x229a256f418 's' 'unsigned char'
    | `-ImplicitCastExpr 0x229a256f6a0 <col:9, col:24> 'unsigned char' <IntegralCast>
    |   `-UnaryOperator 0x229a256f688 <col:9, col:24> 'int' prefix '~' cannot overflow
    |     `-ParenExpr 0x229a256f668 <col:10, col:24> 'int'
    |       `-BinaryOperator 0x229a256f648 <col:11, col:23> 'int' '-'
    |         |-ParenExpr 0x229a256f600 <col:11, col:19> 'int'
    |         | `-BinaryOperator 0x229a256f5e0 <col:12, col:18> 'int' '>>'
    |         |   |-ImplicitCastExpr 0x229a256f5c8 <col:12> 'int' <IntegralCast>
    |         |   | `-ImplicitCastExpr 0x229a256f5b0 <col:12> 'unsigned char' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x229a256f568 <col:12> 'unsigned char' lvalue ParmVar 0x229a256f260 'in' 'unsigned char'
    |         |   `-IntegerLiteral 0x229a256f588 <col:18> 'int' 5
    |         `-IntegerLiteral 0x229a256f620 <col:23> 'int' 1
    |-BinaryOperator 0x229a256f870 <line:216:5, col:25> 'unsigned char' '='
    | |-DeclRefExpr 0x229a256f6d8 <col:5> 'unsigned char' lvalue Var 0x229a256f498 'd' 'unsigned char'
    | `-ImplicitCastExpr 0x229a256f858 <col:9, col:25> 'unsigned char' <IntegralCast>
    |   `-BinaryOperator 0x229a256f838 <col:9, col:25> 'int' '-'
    |     |-BinaryOperator 0x229a256f7f0 <col:9, col:20> 'int' '-'
    |     | |-ParenExpr 0x229a256f780 <col:9, col:16> 'int'
    |     | | `-BinaryOperator 0x229a256f760 <col:10, col:15> 'int' '<<'
    |     | |   |-IntegerLiteral 0x229a256f710 <col:10> 'int' 1
    |     | |   `-IntegerLiteral 0x229a256f738 <col:15> 'int' 6
    |     | `-ImplicitCastExpr 0x229a256f7d8 <col:20> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x229a256f7c0 <col:20> 'unsigned char' <LValueToRValue>
    |     |     `-DeclRefExpr 0x229a256f7a0 <col:20> 'unsigned char' lvalue ParmVar 0x229a256f260 'in' 'unsigned char'
    |     `-IntegerLiteral 0x229a256f810 <col:25> 'int' 1
    |-BinaryOperator 0x229a256fac0 <line:217:5, col:27> 'unsigned char' '='
    | |-DeclRefExpr 0x229a256f890 <col:5> 'unsigned char' lvalue Var 0x229a256f498 'd' 'unsigned char'
    | `-ImplicitCastExpr 0x229a256faa8 <col:9, col:27> 'unsigned char' <IntegralCast>
    |   `-BinaryOperator 0x229a256fa88 <col:9, col:27> 'int' '|'
    |     |-ParenExpr 0x229a256f970 <col:9, col:15> 'int'
    |     | `-BinaryOperator 0x229a256f950 <col:10, col:14> 'int' '&'
    |     |   |-ImplicitCastExpr 0x229a256f908 <col:10> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x229a256f8f0 <col:10> 'unsigned char' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x229a256f8b0 <col:10> 'unsigned char' lvalue Var 0x229a256f498 'd' 'unsigned char'
    |     |   `-ImplicitCastExpr 0x229a256f938 <col:14> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x229a256f920 <col:14> 'unsigned char' <LValueToRValue>
    |     |       `-DeclRefExpr 0x229a256f8d0 <col:14> 'unsigned char' lvalue Var 0x229a256f418 's' 'unsigned char'
    |     `-ParenExpr 0x229a256fa68 <col:19, col:27> 'int'
    |       `-BinaryOperator 0x229a256fa48 <col:20, col:26> 'int' '&'
    |         |-ImplicitCastExpr 0x229a256fa30 <col:20> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x229a256fa18 <col:20> 'unsigned char' <LValueToRValue>
    |         |   `-DeclRefExpr 0x229a256f990 <col:20> 'unsigned char' lvalue ParmVar 0x229a256f260 'in' 'unsigned char'
    |         `-UnaryOperator 0x229a256fa00 <col:25, col:26> 'int' prefix '~' cannot overflow
    |           `-ImplicitCastExpr 0x229a256f9e8 <col:26> 'int' <IntegralCast>
    |             `-ImplicitCastExpr 0x229a256f9d0 <col:26> 'unsigned char' <LValueToRValue>
    |               `-DeclRefExpr 0x229a256f9b0 <col:26> 'unsigned char' lvalue Var 0x229a256f418 's' 'unsigned char'
    |-BinaryOperator 0x229a256fca8 <line:218:5, col:26> 'unsigned char' '='
    | |-DeclRefExpr 0x229a256fae0 <col:5> 'unsigned char' lvalue Var 0x229a256f498 'd' 'unsigned char'
    | `-ImplicitCastExpr 0x229a256fc90 <col:9, col:26> 'unsigned char' <IntegralCast>
    |   `-BinaryOperator 0x229a256fc70 <col:9, col:26> 'int' '+'
    |     |-ParenExpr 0x229a256fb98 <col:9, col:16> 'int'
    |     | `-BinaryOperator 0x229a256fb78 <col:10, col:15> 'int' '>>'
    |     |   |-ImplicitCastExpr 0x229a256fb60 <col:10> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x229a256fb48 <col:10> 'unsigned char' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x229a256fb00 <col:10> 'unsigned char' lvalue Var 0x229a256f498 'd' 'unsigned char'
    |     |   `-IntegerLiteral 0x229a256fb20 <col:15> 'int' 1
    |     `-ParenExpr 0x229a256fc50 <col:20, col:26> 'int'
    |       `-BinaryOperator 0x229a256fc30 <col:21, col:25> 'int' '&'
    |         |-ImplicitCastExpr 0x229a256fc18 <col:21> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x229a256fc00 <col:21> 'unsigned char' <LValueToRValue>
    |         |   `-DeclRefExpr 0x229a256fbb8 <col:21> 'unsigned char' lvalue Var 0x229a256f498 'd' 'unsigned char'
    |         `-IntegerLiteral 0x229a256fbd8 <col:25> 'int' 1
    |-BinaryOperator 0x229a256fdc8 <line:220:5, col:17> 'unsigned char' '='
    | |-UnaryOperator 0x229a256fd00 <col:5, col:6> 'unsigned char' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x229a256fce8 <col:6> 'unsigned char *' <LValueToRValue>
    | |   `-DeclRefExpr 0x229a256fcc8 <col:6> 'unsigned char *' lvalue ParmVar 0x229a2573170 'sign' 'unsigned char *'
    | `-ImplicitCastExpr 0x229a256fdb0 <col:13, col:17> 'unsigned char' <IntegralCast>
    |   `-BinaryOperator 0x229a256fd90 <col:13, col:17> 'int' '&'
    |     |-ImplicitCastExpr 0x229a256fd78 <col:13> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x229a256fd60 <col:13> 'unsigned char' <LValueToRValue>
    |     |   `-DeclRefExpr 0x229a256fd18 <col:13> 'unsigned char' lvalue Var 0x229a256f418 's' 'unsigned char'
    |     `-IntegerLiteral 0x229a256fd38 <col:17> 'int' 1
    `-BinaryOperator 0x229a256fe70 <line:221:5, col:14> 'unsigned char' '='
      |-UnaryOperator 0x229a256fe20 <col:5, col:6> 'unsigned char' lvalue prefix '*' cannot overflow
      | `-ImplicitCastExpr 0x229a256fe08 <col:6> 'unsigned char *' <LValueToRValue>
      |   `-DeclRefExpr 0x229a256fde8 <col:6> 'unsigned char *' lvalue ParmVar 0x229a25731f0 'digit' 'unsigned char *'
      `-ImplicitCastExpr 0x229a256fe58 <col:14> 'unsigned char' <LValueToRValue>
        `-DeclRefExpr 0x229a256fe38 <col:14> 'unsigned char' lvalue Var 0x229a256f498 'd' 'unsigned char'
