TranslationUnitDecl 0x159a9336bd8 <<invalid sloc>> <invalid sloc> <undeserialized declarations>
|-TypedefDecl 0x159a9337470 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x159a9337170 '__int128'
|-TypedefDecl 0x159a93374e0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x159a9337190 'unsigned __int128'
|-TypedefDecl 0x159a9337818 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x159a93375d0 'struct __NSConstantString_tag'
|   `-Record 0x159a9337538 '__NSConstantString_tag'
|-TypedefDecl 0x159a9337888 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x159a9336db0 'unsigned long long'
|-TypedefDecl 0x159a9337920 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x159a93378e0 'char *'
|   `-BuiltinType 0x159a9336c70 'char'
|-TypedefDecl 0x159a9337990 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x159a93378e0 'char *'
|   `-BuiltinType 0x159a9336c70 'char'
|-TypedefDecl 0x159a9337a00 <D:\LLVM\lib\clang\10.0.0\include\stddef.h:35:1, col:26> col:26 ptrdiff_t 'long long'
| `-BuiltinType 0x159a9336d10 'long long'
|-TypedefDecl 0x159a9337a70 prev 0x159a9337888 <line:46:1, col:23> col:23 size_t 'unsigned long long'
| `-BuiltinType 0x159a9336db0 'unsigned long long'
|-TypedefDecl 0x159a9337af8 <line:60:1, col:23> col:23 rsize_t 'unsigned long long'
| `-BuiltinType 0x159a9336db0 'unsigned long long'
|-TypedefDecl 0x159a9337b68 <line:74:1, col:24> col:24 wchar_t 'unsigned short'
| `-BuiltinType 0x159a9336d50 'unsigned short'
|-ImportDecl 0x159aac42ca0 <line:102:1> col:1 implicit _Builtin_stddef_max_align_t
|-TypedefDecl 0x159aac42d48 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x159a9336db0 'unsigned long long'
|-TypedefDecl 0x159aac42db8 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x159a93378e0 'char *'
|   `-BuiltinType 0x159a9336c70 'char'
|-FunctionDecl 0x159aac43000 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x159aac430a0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x159aac43110 <col:21> Implicit
|-FunctionDecl 0x159aac43168 prev 0x159aac43000 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x159aac42e98 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x159aac43258 <col:21> Inherited Implicit
|-TypedefDecl 0x159aac43310 prev 0x159aac43288 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x159a9336db0 'unsigned long long'
|-TypedefDecl 0x159aac433a0 prev 0x159a9337af8 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x159aac43370 'size_t' sugar
|   |-Typedef 0x159aac43310 'size_t'
|   `-BuiltinType 0x159a9336db0 'unsigned long long'
|-TypedefDecl 0x159aac43428 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x159a9336d10 'long long'
|-TypedefDecl 0x159aac43498 prev 0x159a9337a00 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x159a9336d10 'long long'
|-TypedefDecl 0x159aac43520 prev 0x159a9337b68 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x159a9336d50 'unsigned short'
|-TypedefDecl 0x159aac435a8 <line:541:1, col:24> col:24 wint_t 'unsigned short'
| `-BuiltinType 0x159a9336d50 'unsigned short'
|-TypedefDecl 0x159aac43618 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x159a9336d50 'unsigned short'
|-TypedefDecl 0x159aac43688 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x159a9336cd0 'int'
|-TypedefDecl 0x159aac436f8 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x159a9336cf0 'long'
|-TypedefDecl 0x159aac43768 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x159a9336d10 'long long'
|-TypedefDecl 0x159aac437f0 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x159aac437c0 '__time64_t' sugar
|   |-Typedef 0x159aac43768 '__time64_t'
|   `-BuiltinType 0x159a9336d10 'long long'
|-FunctionDecl 0x159aac43968 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x159aac43b88 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x159aae0db60 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x159aae0d6f8 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x159aae0d770 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x159aae0d7e8 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x159aae0d868 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x159aae0d900 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x159aae0dc40 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x159aae0dd00 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x159aae0de70 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x159aae0de20 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x159aae0ddc0 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x159aae0dce0 'struct threadlocaleinfostruct'
|       `-Record 0x159aae209c8 'threadlocaleinfostruct'
|-TypedefDecl 0x159aae0df80 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x159aae0df30 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x159aae0ded0 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x159aae0dda0 'struct threadmbcinfostruct'
|       `-Record 0x159aae0dd00 'threadmbcinfostruct'
|-RecordDecl 0x159aae0dfd8 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x159aae0e090 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x159aae0e150 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x159aae0e1e0 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x159aae0e270 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x159aae0e328 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x159aae0e2d0 'struct localeinfo_struct' sugar
|   `-RecordType 0x159aae0e130 'struct localeinfo_struct'
|     `-Record 0x159aae0e090 'localeinfo_struct'
|-TypedefDecl 0x159aae0e400 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x159aae0e3b0 'struct localeinfo_struct *'
|   `-ElaboratedType 0x159aae0e2d0 'struct localeinfo_struct' sugar
|     `-RecordType 0x159aae0e130 'struct localeinfo_struct'
|       `-Record 0x159aae0e090 'localeinfo_struct'
|-RecordDecl 0x159aae0e478 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x159aae0e530 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x159aae0e5a8 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x159aae0e668 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x159aae20830 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x159aae208a0 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x159aae20958 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x159aae20900 'struct localerefcount' sugar
|   `-RecordType 0x159aae0e510 'struct localerefcount'
|     `-Record 0x159aae0e478 'localerefcount'
|-RecordDecl 0x159aae209c8 prev 0x159aae0dc40 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x159aae20a48 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x159aae20ac0 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x159aae20b30 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x159aae20ba0 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x159aae20c10 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x159aae20dd8 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x159aae20e48 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x159aae20eb8 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x159aae20f28 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x159aae20f98 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x159aae21008 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x159aae21060 parent 0x159a9336bd8 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x159aae211f0 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x159aae21260 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x159aae212d0 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x159aae21340 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x159aae213e0 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x159aae21450 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x159aae21560 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x159aae21698 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x159aae21748 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x159aae216f0 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x159aae0dce0 'struct threadlocaleinfostruct'
|     `-Record 0x159aae209c8 'threadlocaleinfostruct'
|-TypedefDecl 0x159aae219b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:52:1, col:24> col:24 referenced _onexit_t 'int (*)(void) __attribute__((cdecl))'
| `-PointerType 0x159aae21950 'int (*)(void) __attribute__((cdecl))'
|   `-AttributedType 0x159aae218f0 'int (void) __attribute__((cdecl))' sugar
|     |-ParenType 0x159aae218a0 'int (void)' sugar
|     | `-FunctionProtoType 0x159aae21870 'int (void)' cdecl
|     |   `-BuiltinType 0x159a9336cd0 'int'
|     `-ParenType 0x159aae218a0 'int (void)' sugar
|       `-FunctionProtoType 0x159aae21870 'int (void)' cdecl
|         `-BuiltinType 0x159a9336cd0 'int'
|-RecordDecl 0x159aae21a10 <line:75:9, line:78:1> line:75:16 struct _div_t definition
| |-MaxFieldAlignmentAttr 0x159aae21ad0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x159aae21b48 <line:76:9, col:13> col:13 quot 'int'
| `-FieldDecl 0x159aae21bb8 <line:77:9, col:13> col:13 rem 'int'
|-TypedefDecl 0x159aae21c68 <line:75:1, line:78:3> col:3 referenced div_t 'struct _div_t':'struct _div_t'
| `-ElaboratedType 0x159aae21c10 'struct _div_t' sugar
|   `-RecordType 0x159aae21ab0 'struct _div_t'
|     `-Record 0x159aae21a10 '_div_t'
|-RecordDecl 0x159aae21cd8 <line:80:9, line:83:1> line:80:16 struct _ldiv_t definition
| |-MaxFieldAlignmentAttr 0x159aae21d90 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x159aae21e08 <line:81:9, col:14> col:14 quot 'long'
| `-FieldDecl 0x159aae21e78 <line:82:9, col:14> col:14 rem 'long'
|-TypedefDecl 0x159aae21f28 <line:80:1, line:83:3> col:3 referenced ldiv_t 'struct _ldiv_t':'struct _ldiv_t'
| `-ElaboratedType 0x159aae21ed0 'struct _ldiv_t' sugar
|   `-RecordType 0x159aae21d70 'struct _ldiv_t'
|     `-Record 0x159aae21cd8 '_ldiv_t'
|-RecordDecl 0x159aae21f98 <line:85:9, line:88:1> line:85:16 struct _lldiv_t definition
| |-MaxFieldAlignmentAttr 0x159aae22050 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x159aae220c8 <line:86:9, col:19> col:19 quot 'long long'
| `-FieldDecl 0x159aae22138 <line:87:9, col:19> col:19 rem 'long long'
|-TypedefDecl 0x159aae221e8 <line:85:1, line:88:3> col:3 referenced lldiv_t 'struct _lldiv_t':'struct _lldiv_t'
| `-ElaboratedType 0x159aae22190 'struct _lldiv_t' sugar
|   `-RecordType 0x159aae22030 'struct _lldiv_t'
|     `-Record 0x159aae21f98 '_lldiv_t'
|-RecordDecl 0x159aae22280 <line:103:9, line:105:1> line:103:9 struct definition
| |-MaxFieldAlignmentAttr 0x159aae22340 <<invalid sloc>> Implicit 32
| `-FieldDecl 0x159aae22440 <line:104:5, col:24> col:19 ld 'unsigned char [10]'
|-TypedefDecl 0x159aae224f8 <line:103:1, line:105:3> col:3 referenced _LDOUBLE 'struct _LDOUBLE':'_LDOUBLE'
| `-ElaboratedType 0x159aae224a0 'struct _LDOUBLE' sugar
|   `-RecordType 0x159aae22320 '_LDOUBLE'
|     `-Record 0x159aae22280 ''
|-RecordDecl 0x159aae22568 <line:122:9, line:124:1> line:122:9 struct definition
| `-FieldDecl 0x159aae22638 <line:123:9, col:16> col:16 x 'double'
|-TypedefDecl 0x159aae226e8 <line:122:1, line:124:3> col:3 referenced _CRT_DOUBLE 'struct _CRT_DOUBLE':'_CRT_DOUBLE'
| `-ElaboratedType 0x159aae22690 'struct _CRT_DOUBLE' sugar
|   `-RecordType 0x159aae22600 '_CRT_DOUBLE'
|     `-Record 0x159aae22568 ''
|-RecordDecl 0x159aae22758 <line:126:9, line:128:1> line:126:9 struct definition
| `-FieldDecl 0x159aae2b8d8 <line:127:5, col:11> col:11 f 'float'
|-TypedefDecl 0x159aae2b988 <line:126:1, line:128:3> col:3 referenced _CRT_FLOAT 'struct _CRT_FLOAT':'_CRT_FLOAT'
| `-ElaboratedType 0x159aae2b930 'struct _CRT_FLOAT' sugar
|   `-RecordType 0x159aae2b8a0 '_CRT_FLOAT'
|     `-Record 0x159aae22758 ''
|-RecordDecl 0x159aae2b9f8 <line:134:9, line:139:1> line:134:9 struct definition
| `-FieldDecl 0x159aae2bac8 <line:138:9, col:21> col:21 x 'long double'
|-TypedefDecl 0x159aae2bb78 <line:134:1, line:139:3> col:3 _LONGDOUBLE 'struct _LONGDOUBLE':'_LONGDOUBLE'
| `-ElaboratedType 0x159aae2bb20 'struct _LONGDOUBLE' sugar
|   `-RecordType 0x159aae2ba90 '_LONGDOUBLE'
|     `-Record 0x159aae2b9f8 ''
|-RecordDecl 0x159aae2bc10 <line:144:9, line:146:1> line:144:9 struct definition
| |-MaxFieldAlignmentAttr 0x159aae2bcd0 <<invalid sloc>> Implicit 32
| `-FieldDecl 0x159aae2bdd0 <line:145:5, col:26> col:19 ld12 'unsigned char [12]'
|-TypedefDecl 0x159aae2be88 <line:144:1, line:146:3> col:3 _LDBL12 'struct _LDBL12':'_LDBL12'
| `-ElaboratedType 0x159aae2be30 'struct _LDBL12' sugar
|   `-RecordType 0x159aae2bcb0 '_LDBL12'
|     `-Record 0x159aae2bc10 ''
|-VarDecl 0x159aae2bf10 <line:170:9, col:20> col:20 __mb_cur_max 'int' extern
|-FunctionDecl 0x159aae2c090 <line:175:9, col:44> col:21 ___mb_cur_max_func 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x159aae2c2e8 <line:176:9, col:51> col:21 ___mb_cur_max_l_func 'int (_locale_t) __attribute__((cdecl))':'int (_locale_t)'
| `-ParmVarDecl 0x159aae2c180 <col:42> col:51 '_locale_t':'struct localeinfo_struct *'
|-TypedefDecl 0x159aae2c530 <line:215:1, col:24> col:24 referenced _purecall_handler 'void (*)(void) __attribute__((cdecl))'
| `-PointerType 0x159aae2c4d0 'void (*)(void) __attribute__((cdecl))'
|   `-AttributedType 0x159aae2c470 'void (void) __attribute__((cdecl))' sugar
|     |-ParenType 0x159aae2c420 'void (void)' sugar
|     | `-FunctionProtoType 0x159aac438c0 'void (void)' cdecl
|     |   `-BuiltinType 0x159a9336c30 'void'
|     `-ParenType 0x159aae2c420 'void (void)' sugar
|       `-FunctionProtoType 0x159aac438c0 'void (void)' cdecl
|         `-BuiltinType 0x159a9336c30 'void'
|-FunctionDecl 0x159aae2c730 <line:218:9, col:92> col:35 _set_purecall_handler '_purecall_handler (_purecall_handler) __attribute__((cdecl))':'_purecall_handler (_purecall_handler)'
| `-ParmVarDecl 0x159aae2c5c0 <col:66, col:84> col:84 _Handler '_purecall_handler':'void (*)(void) __attribute__((cdecl))'
|-FunctionDecl 0x159aae27908 <line:219:9, col:61> col:35 _get_purecall_handler '_purecall_handler (void) __attribute__((cdecl))':'_purecall_handler (void)'
|-TypedefDecl 0x159aae27d58 <line:235:1, col:24> col:24 referenced _invalid_parameter_handler 'void (*)(const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((cdecl))'
| `-PointerType 0x159aae27cd0 'void (*)(const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((cdecl))'
|   `-AttributedType 0x159aae27c70 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((cdecl))' sugar
|     |-ParenType 0x159aae27c20 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t)' sugar
|     | `-FunctionProtoType 0x159aae0d9c0 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t)' cdecl
|     |   |-BuiltinType 0x159a9336c30 'void'
|     |   |-PointerType 0x159aae0d6c0 'const wchar_t *'
|     |   | `-QualType 0x159aac43c41 'const wchar_t' const
|     |   |   `-TypedefType 0x159aac43c40 'wchar_t' sugar
|     |   |     |-Typedef 0x159aac43520 'wchar_t'
|     |   |     `-BuiltinType 0x159a9336d50 'unsigned short'
|     |   |-PointerType 0x159aae0d6c0 'const wchar_t *'
|     |   | `-QualType 0x159aac43c41 'const wchar_t' const
|     |   |   `-TypedefType 0x159aac43c40 'wchar_t' sugar
|     |   |     |-Typedef 0x159aac43520 'wchar_t'
|     |   |     `-BuiltinType 0x159a9336d50 'unsigned short'
|     |   |-PointerType 0x159aae0d6c0 'const wchar_t *'
|     |   | `-QualType 0x159aac43c41 'const wchar_t' const
|     |   |   `-TypedefType 0x159aac43c40 'wchar_t' sugar
|     |   |     |-Typedef 0x159aac43520 'wchar_t'
|     |   |     `-BuiltinType 0x159a9336d50 'unsigned short'
|     |   |-BuiltinType 0x159a9336d70 'unsigned int'
|     |   `-TypedefType 0x159aae0d8d0 'uintptr_t' sugar
|     |     |-Typedef 0x159aac42d48 'uintptr_t'
|     |     `-BuiltinType 0x159a9336db0 'unsigned long long'
|     `-ParenType 0x159aae27c20 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t)' sugar
|       `-FunctionProtoType 0x159aae0d9c0 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t)' cdecl
|         |-BuiltinType 0x159a9336c30 'void'
|         |-PointerType 0x159aae0d6c0 'const wchar_t *'
|         | `-QualType 0x159aac43c41 'const wchar_t' const
|         |   `-TypedefType 0x159aac43c40 'wchar_t' sugar
|         |     |-Typedef 0x159aac43520 'wchar_t'
|         |     `-BuiltinType 0x159a9336d50 'unsigned short'
|         |-PointerType 0x159aae0d6c0 'const wchar_t *'
|         | `-QualType 0x159aac43c41 'const wchar_t' const
|         |   `-TypedefType 0x159aac43c40 'wchar_t' sugar
|         |     |-Typedef 0x159aac43520 'wchar_t'
|         |     `-BuiltinType 0x159a9336d50 'unsigned short'
|         |-PointerType 0x159aae0d6c0 'const wchar_t *'
|         | `-QualType 0x159aac43c41 'const wchar_t' const
|         |   `-TypedefType 0x159aac43c40 'wchar_t' sugar
|         |     |-Typedef 0x159aac43520 'wchar_t'
|         |     `-BuiltinType 0x159a9336d50 'unsigned short'
|         |-BuiltinType 0x159a9336d70 'unsigned int'
|         `-TypedefType 0x159aae0d8d0 'uintptr_t' sugar
|           |-Typedef 0x159aac42d48 'uintptr_t'
|           `-BuiltinType 0x159a9336db0 'unsigned long long'
|-FunctionDecl 0x159aae27f50 <line:238:9, col:119> col:44 _set_invalid_parameter_handler '_invalid_parameter_handler (_invalid_parameter_handler) __attribute__((cdecl))':'_invalid_parameter_handler (_invalid_parameter_handler)'
| `-ParmVarDecl 0x159aae27de0 <col:84, col:111> col:111 _Handler '_invalid_parameter_handler':'void (*)(const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((cdecl))'
|-FunctionDecl 0x159aae28168 <line:239:9, col:79> col:44 _get_invalid_parameter_handler '_invalid_parameter_handler (void) __attribute__((cdecl))':'_invalid_parameter_handler (void)'
|-FunctionDecl 0x159aae28350 <line:245:9, col:41> col:30 _errno 'int *(void) __attribute__((cdecl))':'int *(void)' extern
|-FunctionDecl 0x159aae285c0 <line:248:1, col:43> col:17 _set_errno 'errno_t (int) __attribute__((cdecl))':'errno_t (int)'
| `-ParmVarDecl 0x159aae28448 <col:33, col:37> col:37 _Value 'int'
|-FunctionDecl 0x159aae29880 <line:249:1, col:46> col:17 _get_errno 'errno_t (int *) __attribute__((cdecl))':'errno_t (int *)'
| `-ParmVarDecl 0x159aae28698 <col:34, col:40> col:40 _Value 'int *'
|-FunctionDecl 0x159aae29aa0 <line:252:9, col:48> col:33 __doserrno 'unsigned long *(void) __attribute__((cdecl))':'unsigned long *(void)'
|-FunctionDecl 0x159aae29ce0 <line:255:1, col:56> col:17 _set_doserrno 'errno_t (unsigned long) __attribute__((cdecl))':'errno_t (unsigned long)'
| `-ParmVarDecl 0x159aae29b70 <col:36, col:50> col:50 _Value 'unsigned long'
|-FunctionDecl 0x159aae29f30 <line:256:1, col:59> col:17 _get_doserrno 'errno_t (unsigned long *) __attribute__((cdecl))':'errno_t (unsigned long *)'
| `-ParmVarDecl 0x159aae29db8 <col:37, col:53> col:53 _Value 'unsigned long *'
|-FunctionDecl 0x159aae2a210 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:259:77> col:59 __sys_errlist 'char **(void) __attribute__((cdecl))':'char **(void)'
| `-DeprecatedAttr 0x159aae2a2b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x159aae2a570 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:262:72> col:57 __sys_nerr 'int *(void) __attribute__((cdecl))':'int *(void)'
| `-DeprecatedAttr 0x159aae2a610 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-VarDecl 0x159aae2a758 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:288:9, col:20> col:20 __argc 'int' extern
|-VarDecl 0x159aae2a7f0 <line:289:9, col:24> col:24 __argv 'char **' extern
|-VarDecl 0x159aae55760 <line:290:9, col:27> col:27 __wargv 'wchar_t **' extern
|-VarDecl 0x159aae557f8 <line:306:9, col:24> col:24 _environ 'char **' extern
|-VarDecl 0x159aae55890 <line:307:9, col:27> col:27 _wenviron 'wchar_t **' extern
|-VarDecl 0x159aae55a20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:311:68> col:68 _pgmptr 'char *' extern
| `-DeprecatedAttr 0x159aae55a88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_pgmptr instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-VarDecl 0x159aae55cc8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:312:72> col:72 _wpgmptr 'wchar_t *' extern
| `-DeprecatedAttr 0x159aae55d30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_wpgmptr instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x159aae55ff0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:339:1, col:61> col:17 _get_pgmptr 'errno_t (char **) __attribute__((cdecl))':'errno_t (char **)'
| `-ParmVarDecl 0x159aae55e78 <col:47, col:55> col:55 _Value 'char **'
|-FunctionDecl 0x159aae56240 <line:340:1, col:65> col:17 _get_wpgmptr 'errno_t (wchar_t **) __attribute__((cdecl))':'errno_t (wchar_t **)'
| `-ParmVarDecl 0x159aae560c8 <col:48, col:59> col:59 _Value 'wchar_t **'
|-VarDecl 0x159aae56410 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:346:64> col:64 _fmode 'int' extern
| `-DeprecatedAttr 0x159aae56478 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_fmode instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x159aae5a740 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:353:9, col:50> col:25 _set_fmode 'errno_t (int) __attribute__((cdecl))':'errno_t (int)'
| `-ParmVarDecl 0x159aae565c0 <col:41, col:45> col:45 _Mode 'int'
|-FunctionDecl 0x159aae5a8f0 <line:354:9, col:54> col:25 _get_fmode 'errno_t (int *) __attribute__((cdecl))':'errno_t (int *)'
| `-ParmVarDecl 0x159aae5a818 <col:42, col:48> col:48 _PMode 'int *'
|-FunctionDecl 0x159aae5ab40 <line:376:43> col:43 implicit exit 'void (int) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x159aae5abe0 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x159aae5ac50 prev 0x159aae5ab40 <col:9, col:62> col:43 exit 'void (int) __attribute__((noreturn))'
| `-ParmVarDecl 0x159aae5a9c8 <col:53, col:57> col:57 _Code 'int'
|-FunctionDecl 0x159aae5ae00 <line:378:43> col:43 implicit _exit 'void (int) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x159aae5aea0 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x159aae5af10 prev 0x159aae5ae00 <col:9, col:63> col:43 _exit 'void (int) __attribute__((noreturn))'
| `-ParmVarDecl 0x159aae5ad28 <col:54, col:58> col:58 _Code 'int'
|-FunctionDecl 0x159aae5b098 <line:379:43> col:43 implicit abort 'void (void) __attribute__((noreturn))' extern
|-FunctionDecl 0x159aae5b138 prev 0x159aae5b098 <col:9, col:53> col:43 abort 'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x159aae5b3f0 <line:382:9, col:99> col:30 _set_abort_behavior 'unsigned int (unsigned int, unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int, unsigned int)'
| |-ParmVarDecl 0x159aae5b208 <col:55, col:68> col:68 _Flags 'unsigned int'
| `-ParmVarDecl 0x159aae5b288 <col:81, col:94> col:94 _Mask 'unsigned int'
|-FunctionDecl 0x159aae5b5e8 <line:384:19> col:19 implicit abs 'int (int)' extern
| |-ParmVarDecl 0x159aae5b688 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x159aae5b6f8 <col:19> Implicit
| `-ConstAttr 0x159aae5b780 <col:19> Implicit
|-FunctionDecl 0x159aae5b7a8 prev 0x159aae5b5e8 <col:1, col:34> col:19 abs 'int (int)'
| |-ParmVarDecl 0x159aae5b4d0 <col:28, col:32> col:32 _X 'int'
| |-NoThrowAttr 0x159aae5b898 <col:19> Inherited Implicit
| `-ConstAttr 0x159aae5b8c0 <col:19> Inherited Implicit
|-FunctionDecl 0x159aae5ba48 <line:385:19> col:19 implicit labs 'long (long)' extern
| |-ParmVarDecl 0x159aae5bae8 <<invalid sloc>> <invalid sloc> 'long'
| |-NoThrowAttr 0x159aae5bb58 <col:19> Implicit
| `-ConstAttr 0x159aae5bbb0 <col:19> Implicit
|-FunctionDecl 0x159aae5bbd8 prev 0x159aae5ba48 <col:1, col:36> col:19 labs 'long (long)'
| |-ParmVarDecl 0x159aae5b900 <col:29, col:34> col:34 _X 'long'
| |-NoThrowAttr 0x159aae5bcc8 <col:19> Inherited Implicit
| `-ConstAttr 0x159aae5bcf0 <col:19> Inherited Implicit
|-FunctionDecl 0x159aae5be78 <line:386:19> col:19 implicit llabs 'long long (long long)' extern
| |-ParmVarDecl 0x159aae5bf18 <<invalid sloc>> <invalid sloc> 'long long'
| |-NoThrowAttr 0x159aae5bf88 <col:19> Implicit
| `-ConstAttr 0x159aae5bfe0 <col:19> Implicit
|-FunctionDecl 0x159aae5c008 prev 0x159aae5be78 <col:1, col:42> col:19 llabs 'long long (long long)'
| |-ParmVarDecl 0x159aae5bd30 <col:30, col:40> col:40 _X 'long long'
| |-NoThrowAttr 0x159aae5c0f8 <col:19> Inherited Implicit
| `-ConstAttr 0x159aae5c120 <col:19> Inherited Implicit
|-FunctionDecl 0x159aae5c228 <line:388:9, col:42> col:28 _abs64 'long long (long long) __attribute__((cdecl))':'long long (long long)'
| `-ParmVarDecl 0x159aae5c160 <col:35> col:42 'long long'
|-FunctionDecl 0x159aae5c528 <line:426:9, col:53> col:24 atexit 'int (void (*)(void) __attribute__((cdecl))) __attribute__((cdecl))':'int (void (*)(void) __attribute__((cdecl)))'
| `-ParmVarDecl 0x159aae5c3c0 <col:31, col:45> col:46 'void (*)(void) __attribute__((cdecl))'
|-FunctionDecl 0x159aae57710 <line:428:24, col:71> col:40 atof 'double (const char *) __attribute__((cdecl))':'double (const char *)'
| `-ParmVarDecl 0x159aae5c600 <col:52, col:64> col:64 _String 'const char *'
|-FunctionDecl 0x159aae57a10 <line:429:24, col:102> col:40 _atof_l 'double (const char *, _locale_t) __attribute__((cdecl))':'double (const char *, _locale_t)'
| |-ParmVarDecl 0x159aae577e8 <col:55, col:67> col:67 _String 'const char *'
| `-ParmVarDecl 0x159aae57860 <col:85, col:95> col:95 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x159aae57c38 <line:430:43, col:86> col:58 atoi 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x159aae57af0 <col:70, col:82> col:82 _Str 'const char *'
|-FunctionDecl 0x159aae57f30 <line:431:24, col:98> col:39 _atoi_l 'int (const char *, _locale_t) __attribute__((cdecl))':'int (const char *, _locale_t)'
| |-ParmVarDecl 0x159aae57d10 <col:54, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x159aae57d88 <col:81, col:91> col:91 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x159aae58158 <line:432:24, col:67> col:39 atol 'long (const char *) __attribute__((cdecl))':'long (const char *)'
| `-ParmVarDecl 0x159aae58010 <col:51, col:63> col:63 _Str 'const char *'
|-FunctionDecl 0x159aae58450 <line:433:24, col:98> col:39 _atol_l 'long (const char *, _locale_t) __attribute__((cdecl))':'long (const char *, _locale_t)'
| |-ParmVarDecl 0x159aae58230 <col:54, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x159aae582a8 <col:81, col:91> col:91 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x159aae59730 <line:434:24, col:71> col:42 atoll 'long long (const char *) __attribute__((cdecl))':'long long (const char *)'
| `-ParmVarDecl 0x159aae58530 <col:55, col:67> col:67 _Str 'const char *'
|-FunctionDecl 0x159aae59a30 <line:435:24, col:102> col:42 _atoll_l 'long long (const char *, _locale_t) __attribute__((cdecl))':'long long (const char *, _locale_t)'
| |-ParmVarDecl 0x159aae59808 <col:58, col:70> col:70 _Str 'const char *'
| `-ParmVarDecl 0x159aae59880 <col:85, col:95> col:95 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x159aae5a320 <line:439:24, line:441:97> line:439:39 bsearch_s 'void *(const void *, const void *, rsize_t, rsize_t, int (*)(void *, const void *, const void *) __attribute__((cdecl)), void *) __attribute__((cdecl))':'void *(const void *, const void *, rsize_t, rsize_t, int (*)(void *, const void *, const void *) __attribute__((cdecl)), void *)'
| |-ParmVarDecl 0x159aae59b40 <col:54, col:67> col:67 _Key 'const void *'
| |-ParmVarDecl 0x159aae59bc0 <col:124, col:137> col:137 _Base 'const void *'
| |-ParmVarDecl 0x159aae59c60 <line:440:14, col:22> col:22 _NumOfElements 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x159aae59cd8 <col:43, col:51> col:51 _SizeOfElements 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x159aae5a030 <line:441:14, col:29> col:29 _PtFuncCompare 'int (*)(void *, const void *, const void *) __attribute__((cdecl))'
| `-ParmVarDecl 0x159aae5a0b0 <col:82, col:89> col:89 _Context 'void *'
|-FunctionDecl 0x159aae5cb08 <line:443:24, line:445:72> line:443:39 bsearch 'void *(const void *, const void *, size_t, size_t, int (*)(const void *, const void *) __attribute__((cdecl))) __attribute__((cdecl))':'void *(const void *, const void *, size_t, size_t, int (*)(const void *, const void *) __attribute__((cdecl)))'
| |-ParmVarDecl 0x159aae5a420 <col:52, col:65> col:65 _Key 'const void *'
| |-ParmVarDecl 0x159aae5a4a0 <col:122, col:135> col:135 _Base 'const void *'
| |-ParmVarDecl 0x159aae5a518 <line:444:14, col:21> col:21 _NumOfElements 'size_t':'unsigned long long'
| |-ParmVarDecl 0x159aae5a590 <col:42, col:49> col:49 _SizeOfElements 'size_t':'unsigned long long'
| `-ParmVarDecl 0x159aae5c8c8 <line:445:14, col:29> col:29 _PtFuncCompare 'int (*)(const void *, const void *) __attribute__((cdecl))'
|-FunctionDecl 0x159aae5d210 <line:448:9, line:450:96> line:448:22 qsort_s 'void (void *, rsize_t, rsize_t, int (*)(void *, const void *, const void *) __attribute__((cdecl)), void *) __attribute__((cdecl))':'void (void *, rsize_t, rsize_t, int (*)(void *, const void *, const void *) __attribute__((cdecl)), void *)'
| |-ParmVarDecl 0x159aae5cc00 <col:85, col:92> col:92 _Base 'void *'
| |-ParmVarDecl 0x159aae5cc78 <line:449:14, col:22> col:22 _NumOfElements 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x159aae5ccf0 <col:43, col:51> col:51 _SizeOfElements 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x159aae5cf58 <line:450:14, col:29> col:29 _PtFuncCompare 'int (*)(void *, const void *, const void *) __attribute__((cdecl))'
| `-ParmVarDecl 0x159aae5cfd8 <col:82, col:88> col:88 _Context 'void *'
|-FunctionDecl 0x159aae58798 <line:452:9, line:454:72> line:452:22 qsort 'void (void *, size_t, size_t, int (*)(const void *, const void *) __attribute__((cdecl))) __attribute__((cdecl))':'void (void *, size_t, size_t, int (*)(const void *, const void *) __attribute__((cdecl)))'
| |-ParmVarDecl 0x159aae5d308 <col:84, col:91> col:91 _Base 'void *'
| |-ParmVarDecl 0x159aae5d380 <line:453:14, col:21> col:21 _NumOfElements 'size_t':'unsigned long long'
| |-ParmVarDecl 0x159aae5d3f8 <col:42, col:49> col:49 _SizeOfElements 'size_t':'unsigned long long'
| `-ParmVarDecl 0x159aae5d5d8 <line:454:14, col:29> col:29 _PtFuncCompare 'int (*)(const void *, const void *) __attribute__((cdecl))'
|-FunctionDecl 0x159aae589d8 <line:456:47> col:47 implicit _byteswap_ushort 'unsigned short (unsigned short)' extern
| |-ParmVarDecl 0x159aae58a78 <<invalid sloc>> <invalid sloc> 'unsigned short'
| |-NoThrowAttr 0x159aae58ae8 <col:47> Implicit
| `-ConstAttr 0x159aae58b40 <col:47> Implicit
|-FunctionDecl 0x159aae58b68 prev 0x159aae589d8 <col:24, col:90> col:47 _byteswap_ushort 'unsigned short (unsigned short)'
| |-ParmVarDecl 0x159aae58888 <col:69, col:84> col:84 _Short 'unsigned short'
| |-NoThrowAttr 0x159aae58c58 <col:47> Inherited Implicit
| `-ConstAttr 0x159aae58c80 <col:47> Inherited Implicit
|-FunctionDecl 0x159aae58e08 <line:457:47> col:47 implicit _byteswap_ulong 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x159aae58ea8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x159aae58f18 <col:47> Implicit
| `-ConstAttr 0x159aae58f70 <col:47> Implicit
|-FunctionDecl 0x159aae58f98 prev 0x159aae58e08 <col:24, col:88> col:47 _byteswap_ulong 'unsigned long (unsigned long)'
| |-ParmVarDecl 0x159aae58cc0 <col:69, col:83> col:83 _Long 'unsigned long'
| |-NoThrowAttr 0x159aae59088 <col:47> Inherited Implicit
| `-ConstAttr 0x159aae590b0 <col:47> Inherited Implicit
|-FunctionDecl 0x159aae59238 <line:458:49> col:49 implicit _byteswap_uint64 'unsigned long long (unsigned long long)' extern
| |-ParmVarDecl 0x159aae592d8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-NoThrowAttr 0x159aae59348 <col:49> Implicit
| `-ConstAttr 0x159aae593a0 <col:49> Implicit
|-FunctionDecl 0x159aae593c8 prev 0x159aae59238 <col:24, col:94> col:49 _byteswap_uint64 'unsigned long long (unsigned long long)'
| |-ParmVarDecl 0x159aae590f0 <col:71, col:88> col:88 _Int64 'unsigned long long'
| |-NoThrowAttr 0x159aae594b8 <col:49> Inherited Implicit
| `-ConstAttr 0x159aae594e0 <col:49> Inherited Implicit
|-FunctionDecl 0x159aae56768 <line:459:24, col:85> col:39 div 'div_t (int, int) __attribute__((cdecl))':'div_t (int, int)'
| |-ParmVarDecl 0x159aae59548 <col:48, col:52> col:52 _Numerator 'int'
| `-ParmVarDecl 0x159aae595c8 <col:69, col:73> col:73 _Denominator 'int'
|-FunctionDecl 0x159aae56a88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:462:109> col:74 getenv 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x159aae56940 <col:88, col:101> col:101 _VarName 'const char *'
| `-DeprecatedAttr 0x159aae56b30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _dupenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x159aae57048 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:464:28, col:177> col:44 getenv_s 'errno_t (size_t *, char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (size_t *, char *, rsize_t, const char *)'
| |-ParmVarDecl 0x159aae56cc8 <col:59, col:68> col:68 _ReturnSize 'size_t *'
| |-ParmVarDecl 0x159aae56d48 <col:110, col:117> col:117 _DstBuf 'char *'
| |-ParmVarDecl 0x159aae56dc0 <col:131, col:139> col:139 _DstSize 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x159aae56e40 <col:156, col:169> col:169 _VarName 'const char *'
|-FunctionDecl 0x159aae57400 <line:472:28, col:212> col:44 _dupenv_s 'errno_t (char **, size_t *, const char *) __attribute__((cdecl))':'errno_t (char **, size_t *, const char *)'
| |-ParmVarDecl 0x159aae57138 <col:127, col:134> col:134 _PBuffer 'char **'
| |-ParmVarDecl 0x159aae571b0 <col:154, col:163> col:163 _PBufferSizeInBytes 'size_t *'
| `-ParmVarDecl 0x159aae57230 <col:191, col:204> col:204 _VarName 'const char *'
|-FunctionDecl 0x159aae65958 <line:479:28, col:141> col:44 _itoa_s 'errno_t (int, char *, size_t, int) __attribute__((cdecl))':'errno_t (int, char *, size_t, int)'
| |-ParmVarDecl 0x159aae574e8 <col:57, col:61> col:61 _Value 'int'
| |-ParmVarDecl 0x159aae57568 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x159aae575e0 <col:112, col:119> col:119 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x159aae57660 <col:131, col:135> col:135 _Radix 'int'
|-FunctionDecl 0x159aae65dd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:481:79 _itoa 'char *(int, char *, int) __attribute__((cdecl))':'char *(int, char *, int)'
| |-ParmVarDecl 0x159aae65b40 <col:91, col:96> col:96 _Value 'int'
| |-ParmVarDecl 0x159aae65bc0 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x159aae65c40 <col:146, col:151> col:151 _Radix 'int'
| `-DeprecatedAttr 0x159aae65e90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _itoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x159aae66358 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:482:28, col:145> col:44 _i64toa_s 'errno_t (long long, char *, size_t, int) __attribute__((cdecl))':'errno_t (long long, char *, size_t, int)'
| |-ParmVarDecl 0x159aae65fd8 <col:59, col:67> col:67 _Val 'long long'
| |-ParmVarDecl 0x159aae66058 <col:95, col:102> col:102 _DstBuf 'char *'
| |-ParmVarDecl 0x159aae660d0 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x159aae66150 <col:135, col:139> col:139 _Radix 'int'
|-FunctionDecl 0x159aae627c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:483:140> col:59 _i64toa 'char *(long long, char *, int) __attribute__((cdecl))':'char *(long long, char *, int)'
| |-ParmVarDecl 0x159aae66508 <col:72, col:80> col:80 _Val 'long long'
| |-ParmVarDecl 0x159aae66588 <col:109, col:116> col:116 _DstBuf 'char *'
| |-ParmVarDecl 0x159aae66608 <col:130, col:134> col:134 _Radix 'int'
| `-DeprecatedAttr 0x159aae62878 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _i64toa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x159aae62d38 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:484:28, col:155> col:44 _ui64toa_s 'errno_t (unsigned long long, char *, size_t, int) __attribute__((cdecl))':'errno_t (unsigned long long, char *, size_t, int)'
| |-ParmVarDecl 0x159aae629c0 <col:60, col:77> col:77 _Val 'unsigned long long'
| |-ParmVarDecl 0x159aae62a40 <col:105, col:112> col:112 _DstBuf 'char *'
| |-ParmVarDecl 0x159aae62ab8 <col:126, col:133> col:133 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x159aae62b38 <col:145, col:149> col:149 _Radix 'int'
|-FunctionDecl 0x159aae63188 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:485:151> col:60 _ui64toa 'char *(unsigned long long, char *, int) __attribute__((cdecl))':'char *(unsigned long long, char *, int)'
| |-ParmVarDecl 0x159aae62ee8 <col:74, col:91> col:91 _Val 'unsigned long long'
| |-ParmVarDecl 0x159aae62f68 <col:120, col:127> col:127 _DstBuf 'char *'
| |-ParmVarDecl 0x159aae62fe8 <col:141, col:145> col:145 _Radix 'int'
| `-DeprecatedAttr 0x159aae63240 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ui64toa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x159aae63468 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:486:24, col:75> col:40 _atoi64 'long long (const char *) __attribute__((cdecl))':'long long (const char *)'
| `-ParmVarDecl 0x159aae63388 <col:55, col:68> col:68 _String 'const char *'
|-FunctionDecl 0x159aae636b8 <line:487:24, col:105> col:40 _atoi64_l 'long long (const char *, _locale_t) __attribute__((cdecl))':'long long (const char *, _locale_t)'
| |-ParmVarDecl 0x159aae63540 <col:57, col:70> col:70 _String 'const char *'
| `-ParmVarDecl 0x159aae635b8 <col:88, col:98> col:98 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x159aae64a78 <line:488:24, col:136> col:40 _strtoi64 'long long (const char *, char **, int) __attribute__((cdecl))':'long long (const char *, char **, int)'
| |-ParmVarDecl 0x159aae647e0 <col:57, col:70> col:70 _String 'const char *'
| |-ParmVarDecl 0x159aae64860 <col:104, col:112> col:112 _EndPtr 'char **'
| `-ParmVarDecl 0x159aae648e0 <col:126, col:130> col:130 _Radix 'int'
|-FunctionDecl 0x159aae64ee0 <line:489:24, col:166> col:40 _strtoi64_l 'long long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'long long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x159aae64b60 <col:59, col:72> col:72 _String 'const char *'
| |-ParmVarDecl 0x159aae64be0 <col:106, col:114> col:114 _EndPtr 'char **'
| |-ParmVarDecl 0x159aae64c60 <col:128, col:132> col:132 _Radix 'int'
| `-ParmVarDecl 0x159aae64cd8 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x159aae65268 <line:490:24, col:146> col:49 _strtoui64 'unsigned long long (const char *, char **, int) __attribute__((cdecl))':'unsigned long long (const char *, char **, int)'
| |-ParmVarDecl 0x159aae64fd0 <col:67, col:80> col:80 _String 'const char *'
| |-ParmVarDecl 0x159aae65050 <col:114, col:122> col:122 _EndPtr 'char **'
| `-ParmVarDecl 0x159aae650d0 <col:136, col:140> col:140 _Radix 'int'
|-FunctionDecl 0x159aae656d0 <line:491:24, col:177> col:49 _strtoui64_l 'unsigned long long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'unsigned long long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x159aae65350 <col:69, col:82> col:82 _String 'const char *'
| |-ParmVarDecl 0x159aae653d0 <col:116, col:124> col:124 _EndPtr 'char **'
| |-ParmVarDecl 0x159aae65450 <col:138, col:143> col:143 _Radix 'int'
| `-ParmVarDecl 0x159aae654c8 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x159aae63a08 <line:492:24, col:88> col:39 ldiv 'ldiv_t (long, long) __attribute__((cdecl))':'ldiv_t (long, long)'
| |-ParmVarDecl 0x159aae637e8 <col:49, col:54> col:54 _Numerator 'long'
| `-ParmVarDecl 0x159aae63868 <col:71, col:76> col:76 _Denominator 'long'
|-FunctionDecl 0x159aae63d28 <line:493:24, col:100> col:40 lldiv 'lldiv_t (long long, long long) __attribute__((cdecl))':'lldiv_t (long long, long long)'
| |-ParmVarDecl 0x159aae63b08 <col:51, col:61> col:61 _Numerator 'long long'
| `-ParmVarDecl 0x159aae63b88 <col:78, col:88> col:88 _Denominator 'long long'
|-FunctionDecl 0x159aae64188 <line:515:28, col:140> col:44 _ltoa_s 'errno_t (long, char *, size_t, int) __attribute__((cdecl))':'errno_t (long, char *, size_t, int)'
| |-ParmVarDecl 0x159aae63e08 <col:57, col:62> col:62 _Val 'long'
| |-ParmVarDecl 0x159aae63e88 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x159aae63f00 <col:111, col:118> col:118 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x159aae63f80 <col:130, col:134> col:134 _Radix 'int'
|-FunctionDecl 0x159aae645d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:517:79 _ltoa 'char *(long, char *, int) __attribute__((cdecl))':'char *(long, char *, int)'
| |-ParmVarDecl 0x159aae64338 <col:91, col:97> col:97 _Value 'long'
| |-ParmVarDecl 0x159aae643b8 <col:129, col:135> col:135 _Dest 'char *'
| |-ParmVarDecl 0x159aae64438 <col:147, col:152> col:152 _Radix 'int'
| `-DeprecatedAttr 0x159aae64690 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ltoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x159aae5f9d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:518:24, col:128> col:39 mblen 'int (const char *, size_t) __attribute__((cdecl))':'int (const char *, size_t)'
| |-ParmVarDecl 0x159aae5f7a8 <col:89, col:102> col:102 _Ch 'const char *'
| `-ParmVarDecl 0x159aae5f820 <col:112, col:119> col:119 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x159aae5fd78 <line:519:24, col:159> col:39 _mblen_l 'int (const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x159aae5fab0 <col:92, col:105> col:105 _Ch 'const char *'
| |-ParmVarDecl 0x159aae5fb28 <col:115, col:122> col:122 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x159aae5fba0 <col:142, col:152> col:152 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x159aae5ffd0 <line:520:24, col:73> col:39 _mbstrlen 'size_t (const char *) __attribute__((cdecl))':'size_t (const char *)'
| `-ParmVarDecl 0x159aae5fe60 <col:56, col:69> col:69 _Str 'const char *'
|-FunctionDecl 0x159aae602c8 <line:521:24, col:102> col:39 _mbstrlen_l 'size_t (const char *, _locale_t) __attribute__((cdecl))':'size_t (const char *, _locale_t)'
| |-ParmVarDecl 0x159aae600a8 <col:58, col:70> col:70 _Str 'const char *'
| `-ParmVarDecl 0x159aae60120 <col:85, col:95> col:95 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x159aae605c8 <line:522:24, col:96> col:39 _mbstrnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x159aae603a8 <col:57, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x159aae60420 <col:80, col:87> col:87 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x159aae60980 <line:523:24, col:126> col:39 _mbstrnlen_l 'size_t (const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x159aae606a8 <col:59, col:71> col:71 _Str 'const char *'
| |-ParmVarDecl 0x159aae60720 <col:82, col:89> col:89 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x159aae607b0 <col:109, col:119> col:119 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x159aae60d38 <line:524:9, col:170> col:24 mbtowc 'int (wchar_t *, const char *, size_t) __attribute__((cdecl))':'int (wchar_t *, const char *, size_t)'
| |-ParmVarDecl 0x159aae60a60 <col:54, col:64> col:64 _DstCh 'wchar_t *'
| |-ParmVarDecl 0x159aae60ae0 <col:122, col:135> col:135 _SrcCh 'const char *'
| `-ParmVarDecl 0x159aae60b58 <col:148, col:155> col:155 _SrcSizeInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x159aae61190 <line:525:9, col:201> col:24 _mbtowc_l 'int (wchar_t *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (wchar_t *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x159aae60e18 <col:57, col:67> col:67 _DstCh 'wchar_t *'
| |-ParmVarDecl 0x159aae60e98 <col:125, col:138> col:138 _SrcCh 'const char *'
| |-ParmVarDecl 0x159aae60f10 <col:151, col:158> col:158 _SrcSizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x159aae60f88 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x159aae61690 <line:526:28, col:271> col:44 mbstowcs_s 'errno_t (size_t *, wchar_t *, size_t, const char *, size_t) __attribute__((cdecl))':'errno_t (size_t *, wchar_t *, size_t, const char *, size_t)'
| |-ParmVarDecl 0x159aae61278 <col:65, col:74> col:74 _PtNumOfCharConverted 'size_t *'
| |-ParmVarDecl 0x159aae612f0 <col:155, col:165> col:165 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x159aae61368 <col:179, col:186> col:186 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x159aae613e8 <col:227, col:240> col:240 _SrcBuf 'const char *'
| `-ParmVarDecl 0x159aae61460 <col:254, col:261> col:261 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x159aae5eb20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2007:144> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:528:56 mbstowcs 'size_t (wchar_t *, const char *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const char *, size_t)'
| |-ParmVarDecl 0x159aae5e850 <col:97, col:106> col:106 _Dest 'wchar_t *'
| |-ParmVarDecl 0x159aae5e8d0 <col:120, col:134> col:134 _Source 'const char *'
| |-ParmVarDecl 0x159aae5e948 <col:148, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x159aae5ebd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using mbstowcs_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x159aae5f1d8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:530:28, col:301> col:44 _mbstowcs_s_l 'errno_t (size_t *, wchar_t *, size_t, const char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (size_t *, wchar_t *, size_t, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x159aae5ed18 <col:68, col:77> col:77 _PtNumOfCharConverted 'size_t *'
| |-ParmVarDecl 0x159aae5ed90 <col:158, col:168> col:168 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x159aae5ee08 <col:182, col:189> col:189 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x159aae5ee88 <col:230, col:243> col:243 _SrcBuf 'const char *'
| |-ParmVarDecl 0x159aae5ef00 <col:257, col:264> col:264 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x159aae5ef78 <col:284, col:294> col:294 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x159aae67810 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2010:160> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:532:59 _mbstowcs_l 'size_t (wchar_t *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x159aae5f3c8 <col:149, col:158> col:158 _Dest 'wchar_t *'
| |-ParmVarDecl 0x159aae5f448 <col:172, col:186> col:186 _Source 'const char *'
| |-ParmVarDecl 0x159aae5f4c0 <col:200, col:208> col:208 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x159aae5f538 <col:228, col:239> col:239 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x159aae678d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _mbstowcs_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x159aae67ad0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:534:24, col:48> col:39 rand 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x159aae67c80 <line:539:28, col:73> col:43 _set_error_mode 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x159aae67ba0 <col:64, col:68> col:68 _Mode 'int'
|-FunctionDecl 0x159aae67ea0 <line:541:9, col:53> col:24 srand 'void (unsigned int) __attribute__((cdecl))':'void (unsigned int)'
| `-ParmVarDecl 0x159aae67d58 <col:35, col:48> col:48 _Seed 'unsigned int'
|-FunctionDecl 0x159aae68160 <line:542:39> col:39 implicit strtod 'double (const char *, char **)' extern
| |-ParmVarDecl 0x159aae68200 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x159aae68268 <<invalid sloc>> <invalid sloc> 'char **'
|-FunctionDecl 0x159aae682e0 prev 0x159aae68160 <col:24, col:112> col:39 strtod 'double (const char *, char **)'
| |-ParmVarDecl 0x159aae67f78 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x159aae67ff8 <col:97, col:105> col:105 _EndPtr 'char **'
|-FunctionDecl 0x159aae68698 <line:543:24, col:143> col:39 _strtod_l 'double (const char *, char **, _locale_t) __attribute__((cdecl))':'double (const char *, char **, _locale_t)'
| |-ParmVarDecl 0x159aae683c0 <col:56, col:69> col:69 _Str 'const char *'
| |-ParmVarDecl 0x159aae68440 <col:100, col:108> col:108 _EndPtr 'char **'
| `-ParmVarDecl 0x159aae684b8 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x159aae68a38 <line:544:39> col:39 implicit strtol 'long (const char *, char **, int)' extern
| |-ParmVarDecl 0x159aae68ad8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x159aae68b40 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x159aae68ba8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x159aae68c28 prev 0x159aae68a38 <col:24, col:130> col:39 strtol 'long (const char *, char **, int)'
| |-ParmVarDecl 0x159aae68780 <col:53, col:66> col:66 _Str 'const char *'
| |-ParmVarDecl 0x159aae68820 <col:97, col:105> col:105 _EndPtr 'char **'
| `-ParmVarDecl 0x159aae688a0 <col:119, col:123> col:123 _Radix 'int'
|-FunctionDecl 0x159aae69090 <line:545:24, col:158> col:39 _strtol_l 'long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x159aae68d10 <col:56, col:68> col:68 _Str 'const char *'
| |-ParmVarDecl 0x159aae68d90 <col:99, col:106> col:106 _EndPtr 'char **'
| |-ParmVarDecl 0x159aae68e10 <col:120, col:124> col:124 _Radix 'int'
| `-ParmVarDecl 0x159aae68e88 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x159aae693a0 <line:546:43> col:43 implicit strtoll 'long long (const char *, char **, int)' extern
| |-ParmVarDecl 0x159aae69440 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x159aae694a8 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x159aae69510 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x159aae69590 prev 0x159aae693a0 <col:24, col:135> col:43 strtoll 'long long (const char *, char **, int)'
| |-ParmVarDecl 0x159aae69180 <col:58, col:71> col:71 _Str 'const char *'
| |-ParmVarDecl 0x159aae69200 <col:102, col:110> col:110 _EndPtr 'char **'
| `-ParmVarDecl 0x159aae69280 <col:124, col:128> col:128 _Radix 'int'
|-FunctionDecl 0x159aae618f0 <line:547:24, col:166> col:43 _strtoll_l 'long long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'long long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x159aae69678 <col:61, col:74> col:74 _Str 'const char *'
| |-ParmVarDecl 0x159aae696f8 <col:105, col:113> col:113 _EndPtr 'char **'
| |-ParmVarDecl 0x159aae69778 <col:127, col:131> col:131 _Radix 'int'
| `-ParmVarDecl 0x159aae617b0 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x159aae61c78 <line:548:46> col:46 implicit strtoul 'unsigned long (const char *, char **, int)' extern
| |-ParmVarDecl 0x159aae61d18 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x159aae61d80 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x159aae61de8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x159aae61e68 prev 0x159aae61c78 <col:24, col:137> col:46 strtoul 'unsigned long (const char *, char **, int)'
| |-ParmVarDecl 0x159aae619e0 <col:61, col:74> col:74 _Str 'const char *'
| |-ParmVarDecl 0x159aae61a60 <col:105, col:113> col:113 _EndPtr 'char **'
| `-ParmVarDecl 0x159aae61ae0 <col:127, col:131> col:131 _Radix 'int'
|-FunctionDecl 0x159aae622d0 <line:549:24, col:160> col:46 _strtoul_l 'unsigned long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'unsigned long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x159aae61f50 <col:57, col:70> col:70 _Str 'const char *'
| |-ParmVarDecl 0x159aae61fd0 <col:101, col:108> col:108 _EndPtr 'char **'
| |-ParmVarDecl 0x159aae62050 <col:122, col:126> col:126 _Radix 'int'
| `-ParmVarDecl 0x159aae620c8 <col:143, col:153> col:153 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x159aae625e0 <line:550:51> col:51 implicit strtoull 'unsigned long long (const char *, char **, int)' extern
| |-ParmVarDecl 0x159aae62680 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x159aae626e8 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x159aae708a0 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x159aae70920 prev 0x159aae625e0 <col:24, col:143> col:51 strtoull 'unsigned long long (const char *, char **, int)'
| |-ParmVarDecl 0x159aae623c0 <col:67, col:80> col:80 _Str 'const char *'
| |-ParmVarDecl 0x159aae62440 <col:111, col:119> col:119 _EndPtr 'char **'
| `-ParmVarDecl 0x159aae624c0 <col:133, col:137> col:137 _Radix 'int'
|-FunctionDecl 0x159aae70cc0 <line:551:24, col:174> col:51 _strtoull_l 'unsigned long long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'unsigned long long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x159aae70a08 <col:70, col:83> col:83 _Str 'const char *'
| |-ParmVarDecl 0x159aae70a88 <col:114, col:122> col:122 _EndPtr 'char **'
| |-ParmVarDecl 0x159aae70b08 <col:136, col:140> col:140 _Radix 'int'
| `-ParmVarDecl 0x159aae70b80 <col:157, col:167> col:167 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x159aae70fa0 <line:552:44> col:44 implicit strtold 'long double (const char *, char **)' extern
| |-ParmVarDecl 0x159aae71040 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x159aae710a8 <<invalid sloc>> <invalid sloc> 'char **'
|-FunctionDecl 0x159aae71120 prev 0x159aae70fa0 <col:24, col:118> col:44 strtold 'long double (const char *, char **)'
| |-ParmVarDecl 0x159aae70db0 <col:59, col:72> col:72 _Str 'const char *'
| `-ParmVarDecl 0x159aae70e30 <col:103, col:111> col:111 _EndPtr 'char **'
|-FunctionDecl 0x159aae714d8 <line:553:24, col:149> col:44 _strtold_l 'long double (const char *, char **, _locale_t) __attribute__((cdecl))':'long double (const char *, char **, _locale_t)'
| |-ParmVarDecl 0x159aae71200 <col:62, col:75> col:75 _Str 'const char *'
| |-ParmVarDecl 0x159aae71280 <col:106, col:114> col:114 _EndPtr 'char **'
| `-ParmVarDecl 0x159aae712f8 <col:132, col:142> col:142 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x159aae717b0 <line:554:38> col:38 implicit strtof 'float (const char *, char **)' extern
| |-ParmVarDecl 0x159aae69830 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x159aae69898 <<invalid sloc>> <invalid sloc> 'char **'
|-FunctionDecl 0x159aae69910 prev 0x159aae717b0 <col:24, col:111> col:38 strtof 'float (const char *, char **)'
| |-ParmVarDecl 0x159aae715c0 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x159aae71640 <col:96, col:104> col:104 _EndPtr 'char **'
|-FunctionDecl 0x159aae69cc8 <line:555:24, col:142> col:38 _strtof_l 'float (const char *, char **, _locale_t) __attribute__((cdecl))':'float (const char *, char **, _locale_t)'
| |-ParmVarDecl 0x159aae699f0 <col:55, col:68> col:68 _Str 'const char *'
| |-ParmVarDecl 0x159aae69a70 <col:99, col:107> col:107 _EndPtr 'char **'
| `-ParmVarDecl 0x159aae69ae8 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x159aae69e90 <line:560:9, col:60> col:21 system 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x159aae69db0 <col:39, col:52> col:52 _Command 'const char *'
|-FunctionDecl 0x159aae6a2e8 <line:564:28, col:150> col:44 _ultoa_s 'errno_t (unsigned long, char *, size_t, int) __attribute__((cdecl))':'errno_t (unsigned long, char *, size_t, int)'
| |-ParmVarDecl 0x159aae69f68 <col:58, col:72> col:72 _Val 'unsigned long'
| |-ParmVarDecl 0x159aae69fe8 <col:100, col:107> col:107 _DstBuf 'char *'
| |-ParmVarDecl 0x159aae6a060 <col:121, col:128> col:128 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x159aae6a0e0 <col:140, col:144> col:144 _Radix 'int'
|-FunctionDecl 0x159aae6a738 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:566:79 _ultoa 'char *(unsigned long, char *, int) __attribute__((cdecl))':'char *(unsigned long, char *, int)'
| |-ParmVarDecl 0x159aae6a498 <col:92, col:107> col:107 _Value 'unsigned long'
| |-ParmVarDecl 0x159aae6a518 <col:139, col:145> col:145 _Dest 'char *'
| |-ParmVarDecl 0x159aae6a598 <col:157, col:162> col:162 _Radix 'int'
| `-DeprecatedAttr 0x159aae6c860 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ultoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x159aae6cc90 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:567:127> col:58 wctomb 'int (char *, wchar_t) __attribute__((cdecl))':'int (char *, wchar_t)'
| |-ParmVarDecl 0x159aae6ca68 <col:96, col:103> col:103 _MbCh 'char *'
| |-ParmVarDecl 0x159aae6cae0 <col:115, col:123> col:123 _WCh 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x159aae6cd40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wctomb_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x159aae6d218 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:568:155> col:61 _wctomb_l 'int (char *, wchar_t, _locale_t) __attribute__((cdecl))':'int (char *, wchar_t, _locale_t)'
| |-ParmVarDecl 0x159aae6cf48 <col:96, col:103> col:103 _MbCh 'char *'
| |-ParmVarDecl 0x159aae6cfc0 <col:115, col:123> col:123 _WCh 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x159aae6d038 <col:138, col:148> col:148 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x159aae6d2d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wctomb_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x159aae6d788 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:570:28, col:200> col:44 wctomb_s 'errno_t (int *, char *, rsize_t, wchar_t) __attribute__((cdecl))':'errno_t (int *, char *, rsize_t, wchar_t)'
| |-ParmVarDecl 0x159aae6d418 <col:63, col:69> col:69 _SizeConverted 'int *'
| |-ParmVarDecl 0x159aae6d498 <col:142, col:149> col:149 _MbCh 'char *'
| |-ParmVarDecl 0x159aae6d510 <col:161, col:169> col:169 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x159aae6d588 <col:188, col:196> col:196 _WCh 'wchar_t':'unsigned short'
|-FunctionDecl 0x159aae6bc80 <line:572:28, col:206> col:44 _wctomb_s_l 'errno_t (int *, char *, size_t, wchar_t, _locale_t) __attribute__((cdecl))':'errno_t (int *, char *, size_t, wchar_t, _locale_t)'
| |-ParmVarDecl 0x159aae6b868 <col:66, col:72> col:72 _SizeConverted 'int *'
| |-ParmVarDecl 0x159aae6b8e8 <col:121, col:128> col:128 _MbCh 'char *'
| |-ParmVarDecl 0x159aae6b960 <col:140, col:147> col:147 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x159aae6b9d8 <col:166, col:174> col:174 _WCh 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x159aae6ba50 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x159aae6c190 <line:573:28, col:263> col:44 wcstombs_s 'errno_t (size_t *, char *, size_t, const wchar_t *, size_t) __attribute__((cdecl))':'errno_t (size_t *, char *, size_t, const wchar_t *, size_t)'
| |-ParmVarDecl 0x159aae6bd70 <col:65, col:74> col:74 _PtNumOfCharConverted 'size_t *'
| |-ParmVarDecl 0x159aae6bdf0 <col:164, col:171> col:171 _Dst 'char *'
| |-ParmVarDecl 0x159aae6be68 <col:182, col:189> col:189 _DstSizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x159aae6bee0 <col:213, col:229> col:229 _Src 'const wchar_t *'
| `-ParmVarDecl 0x159aae6bf58 <col:240, col:247> col:247 _MaxCountInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x159aae6c610 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2007:144> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:575:56 wcstombs 'size_t (char *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (char *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x159aae6c348 <col:97, col:103> col:103 _Dest 'char *'
| |-ParmVarDecl 0x159aae6c3c0 <col:117, col:134> col:134 _Source 'const wchar_t *'
| |-ParmVarDecl 0x159aae6c438 <col:148, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x159aae6c6c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstombs_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x159aae6fd58 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:576:28, col:294> col:44 _wcstombs_s_l 'errno_t (size_t *, char *, size_t, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (size_t *, char *, size_t, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x159aae6f890 <col:68, col:77> col:77 _PtNumOfCharConverted 'size_t *'
| |-ParmVarDecl 0x159aae6f910 <col:167, col:174> col:174 _Dst 'char *'
| |-ParmVarDecl 0x159aae6f988 <col:185, col:192> col:192 _DstSizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x159aae6fa00 <col:216, col:232> col:232 _Src 'const wchar_t *'
| |-ParmVarDecl 0x159aae6fa78 <col:243, col:250> col:250 _MaxCountInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x159aae6faf0 <col:277, col:287> col:287 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x159aae70288 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2010:160> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:578:59 _wcstombs_l 'size_t (char *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x159aae6ff18 <col:146, col:152> col:152 _Dest 'char *'
| |-ParmVarDecl 0x159aae6ff90 <col:166, col:183> col:183 _Source 'const wchar_t *'
| |-ParmVarDecl 0x159aae70008 <col:197, col:205> col:205 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x159aae70080 <col:225, col:236> col:236 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x159aae70348 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcstombs_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x159aae706b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:640:142> col:142 implicit calloc 'void *(unsigned long long, unsigned long long)' extern
| |-ParmVarDecl 0x159aae70750 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x159aae707b8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x159aae738d0 prev 0x159aae706b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:640:224> col:142 calloc 'void *(unsigned long long, unsigned long long)'
| |-ParmVarDecl 0x159aae70488 <col:173, col:180> col:180 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x159aae70500 <col:212, col:219> col:219 _Size 'size_t':'unsigned long long'
| |-NoAliasAttr 0x159aae73980 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x159aae739d8 <line:615:33> restrict
|-FunctionDecl 0x159aae73b70 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:641:182> col:132 free 'void (void *) __attribute__((cdecl))':'void (void *)'
| |-ParmVarDecl 0x159aae73a30 <col:168, col:175> col:175 _Memory 'void *'
| `-NoAliasAttr 0x159aae73c18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
|-FunctionDecl 0x159aae73e18 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:642:161> col:161 implicit malloc 'void *(unsigned long long)' extern
| `-ParmVarDecl 0x159aae73eb8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x159aae73f28 prev 0x159aae73e18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:642:204> col:161 malloc 'void *(unsigned long long)'
| |-ParmVarDecl 0x159aae73c98 <col:192, col:199> col:199 _Size 'size_t':'unsigned long long'
| |-NoAliasAttr 0x159aae73fd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x159aae74028 <line:615:33> restrict
|-FunctionDecl 0x159aae742a0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:644:142> col:142 implicit realloc 'void *(void *, unsigned long long)' extern
| |-ParmVarDecl 0x159aae74340 <<invalid sloc>> <invalid sloc> 'void *'
| `-ParmVarDecl 0x159aae743a8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x159aae74420 prev 0x159aae742a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:644:236> col:142 realloc 'void *(void *, unsigned long long)'
| |-ParmVarDecl 0x159aae74080 <col:181, col:188> col:188 _Memory 'void *'
| |-ParmVarDecl 0x159aae740f8 <col:221, col:228> col:228 _NewSize 'size_t':'unsigned long long'
| |-NoAliasAttr 0x159aae744d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x159aae74528 <line:615:33> restrict
|-FunctionDecl 0x159aae6d870 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:646:274> col:142 _recalloc 'void *(void *, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t)'
| |-ParmVarDecl 0x159aae74580 <col:183, col:190> col:190 _Memory 'void *'
| |-ParmVarDecl 0x159aae745f8 <col:223, col:230> col:230 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x159aae74670 <col:262, col:269> col:269 _Size 'size_t':'unsigned long long'
| |-NoAliasAttr 0x159aae6d928 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x159aae6d980 <line:615:33> restrict
|-FunctionDecl 0x159aae6dab0 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:647:191> col:132 _aligned_free 'void (void *) __attribute__((cdecl))':'void (void *)'
| |-ParmVarDecl 0x159aae6d9d8 <col:177, col:184> col:184 _Memory 'void *'
| `-NoAliasAttr 0x159aae6db58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
|-FunctionDecl 0x159aae6dd50 <col:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:648:218> col:142 _aligned_malloc 'void *(size_t, size_t) __attribute__((cdecl))':'void *(size_t, size_t)'
| |-ParmVarDecl 0x159aae6dbd8 <col:182, col:189> col:189 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x159aae6dc50 <col:201, col:208> col:208 _Alignment 'size_t':'unsigned long long'
| |-NoAliasAttr 0x159aae6de00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x159aae6de58 <line:615:33> restrict
|-FunctionDecl 0x159aae6e178 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:649:246> col:142 _aligned_offset_malloc 'void *(size_t, size_t, size_t) __attribute__((cdecl))':'void *(size_t, size_t, size_t)'
| |-ParmVarDecl 0x159aae6dea8 <col:189, col:196> col:196 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x159aae6df20 <col:208, col:215> col:215 _Alignment 'size_t':'unsigned long long'
| |-ParmVarDecl 0x159aae6df98 <col:232, col:239> col:239 _Offset 'size_t':'unsigned long long'
| |-NoAliasAttr 0x159aae6e230 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x159aae6e288 <line:615:33> restrict
|-FunctionDecl 0x159aae6e4f0 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:651:272> col:145 _aligned_realloc 'void *(void *, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t)'
| |-ParmVarDecl 0x159aae6e2e0 <col:193, col:200> col:200 _Memory 'void *'
| |-ParmVarDecl 0x159aae6e358 <col:233, col:240> col:240 _NewSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x159aae6e3d0 <col:255, col:262> col:262 _Alignment 'size_t':'unsigned long long'
| |-NoAliasAttr 0x159aae6e5a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x159aae6e600 <line:615:33> restrict
|-FunctionDecl 0x159aae6e9e0 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:653:306> col:142 _aligned_recalloc 'void *(void *, size_t, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t, size_t)'
| |-ParmVarDecl 0x159aae6e658 <col:191, col:198> col:198 _Memory 'void *'
| |-ParmVarDecl 0x159aae6e6d0 <col:231, col:238> col:238 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x159aae6e748 <col:270, col:277> col:277 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x159aae6e7c0 <col:289, col:296> col:296 _Alignment 'size_t':'unsigned long long'
| |-NoAliasAttr 0x159aae6eaa0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x159aae6eaf8 <line:615:33> restrict
|-FunctionDecl 0x159aae6edf8 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:655:300> col:145 _aligned_offset_realloc 'void *(void *, size_t, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t, size_t)'
| |-ParmVarDecl 0x159aae6eb50 <col:200, col:207> col:207 _Memory 'void *'
| |-ParmVarDecl 0x159aae6ebc8 <col:240, col:247> col:247 _NewSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x159aae6ec40 <col:262, col:269> col:269 _Alignment 'size_t':'unsigned long long'
| |-ParmVarDecl 0x159aae6ecb8 <col:286, col:293> col:293 _Offset 'size_t':'unsigned long long'
| |-NoAliasAttr 0x159aae6eeb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x159aae6ef10 <line:615:33> restrict
|-FunctionDecl 0x159aae6f388 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:657:334> col:142 _aligned_offset_recalloc 'void *(void *, size_t, size_t, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t, size_t, size_t)'
| |-ParmVarDecl 0x159aae6ef68 <col:198, col:205> col:205 _Memory 'void *'
| |-ParmVarDecl 0x159aae6efe0 <col:238, col:245> col:245 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x159aae6f058 <col:277, col:284> col:284 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x159aae6f0d0 <col:296, col:303> col:303 _Alignment 'size_t':'unsigned long long'
| |-ParmVarDecl 0x159aae6f148 <col:320, col:327> col:327 _Offset 'size_t':'unsigned long long'
| |-NoAliasAttr 0x159aae6f450 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x159aae6f4a8 <line:615:33> restrict
|-FunctionDecl 0x159aae6f7c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:658:73, col:176> col:88 _aligned_msize 'size_t (void *, size_t, size_t) __attribute__((cdecl))':'size_t (void *, size_t, size_t)'
| |-ParmVarDecl 0x159aae6f500 <col:117, col:124> col:124 _Memory 'void *'
| |-ParmVarDecl 0x159aae6f578 <col:138, col:145> col:145 _Alignment 'size_t':'unsigned long long'
| `-ParmVarDecl 0x159aae6f5f0 <col:162, col:169> col:169 _Offset 'size_t':'unsigned long long'
|-FunctionDecl 0x159aae71c58 <line:685:28, col:157> col:44 _itow_s 'errno_t (int, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (int, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x159aae718e0 <col:58, col:62> col:62 _Val 'int'
| |-ParmVarDecl 0x159aae71958 <col:97, col:107> col:107 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x159aae719d0 <col:121, col:128> col:128 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x159aae71a50 <col:147, col:151> col:151 _Radix 'int'
|-FunctionDecl 0x159aae720d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:687:82 _itow 'wchar_t *(int, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(int, wchar_t *, int)'
| |-ParmVarDecl 0x159aae71e08 <col:94, col:99> col:99 _Value 'int'
| |-ParmVarDecl 0x159aae71e80 <col:131, col:140> col:140 _Dest 'wchar_t *'
| |-ParmVarDecl 0x159aae71f00 <col:152, col:157> col:157 _Radix 'int'
| `-DeprecatedAttr 0x159aae72188 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _itow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x159aae72648 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:688:28, col:158> col:44 _ltow_s 'errno_t (long, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (long, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x159aae722d0 <col:58, col:63> col:63 _Val 'long'
| |-ParmVarDecl 0x159aae72348 <col:98, col:108> col:108 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x159aae723c0 <col:122, col:129> col:129 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x159aae72440 <col:148, col:152> col:152 _Radix 'int'
|-FunctionDecl 0x159aae72b10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:690:82 _ltow 'wchar_t *(long, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(long, wchar_t *, int)'
| |-ParmVarDecl 0x159aae727f8 <col:94, col:100> col:100 _Value 'long'
| |-ParmVarDecl 0x159aae728c0 <col:132, col:141> col:141 _Dest 'wchar_t *'
| |-ParmVarDecl 0x159aae72940 <col:153, col:158> col:158 _Radix 'int'
| `-DeprecatedAttr 0x159aae72bc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ltow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x159aae73088 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:691:28, col:168> col:44 _ultow_s 'errno_t (unsigned long, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (unsigned long, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x159aae72d10 <col:59, col:73> col:73 _Val 'unsigned long'
| |-ParmVarDecl 0x159aae72d88 <col:108, col:118> col:118 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x159aae72e00 <col:132, col:139> col:139 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x159aae72e80 <col:158, col:162> col:162 _Radix 'int'
|-FunctionDecl 0x159aae73500 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:693:82 _ultow 'wchar_t *(unsigned long, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(unsigned long, wchar_t *, int)'
| |-ParmVarDecl 0x159aae73238 <col:95, col:110> col:110 _Value 'unsigned long'
| |-ParmVarDecl 0x159aae732b0 <col:142, col:151> col:151 _Dest 'wchar_t *'
| |-ParmVarDecl 0x159aae73330 <col:163, col:168> col:168 _Radix 'int'
| `-DeprecatedAttr 0x159aae735b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ultow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x159aaec5e30 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:694:24, col:118> col:39 wcstod 'double (const wchar_t *, wchar_t **) __attribute__((cdecl))':'double (const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x159aae736f8 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x159aae73778 <col:100, col:111> col:111 _EndPtr 'wchar_t **'
|-FunctionDecl 0x159aaec61d8 <line:695:24, col:148> col:39 _wcstod_l 'double (const wchar_t *, wchar_t **, _locale_t) __attribute__((cdecl))':'double (const wchar_t *, wchar_t **, _locale_t)'
| |-ParmVarDecl 0x159aaec5f08 <col:56, col:71> col:71 _Str 'const wchar_t *'
| |-ParmVarDecl 0x159aaec5f88 <col:102, col:113> col:113 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x159aaec6000 <col:131, col:141> col:141 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x159aaec6598 <line:696:24, col:129> col:39 wcstol 'long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x159aaec62b8 <col:53, col:68> col:68 _Str 'const wchar_t *'
| |-ParmVarDecl 0x159aaec6338 <col:99, col:110> col:110 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x159aaec63b8 <col:119, col:123> col:123 _Radix 'int'
|-FunctionDecl 0x159aaec6a00 <line:697:24, col:159> col:39 _wcstol_l 'long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x159aaec6678 <col:56, col:71> col:71 _Str 'const wchar_t *'
| |-ParmVarDecl 0x159aaec66f8 <col:102, col:112> col:112 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x159aaec6778 <col:121, col:125> col:125 _Radix 'int'
| `-ParmVarDecl 0x159aaec67f0 <col:142, col:152> col:152 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x159aaec8e38 <line:698:24, col:133> col:43 wcstoll 'long long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'long long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x159aaec6ae8 <col:58, col:73> col:73 _Str 'const wchar_t *'
| |-ParmVarDecl 0x159aaec6b68 <col:104, col:114> col:114 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x159aaec6be8 <col:123, col:127> col:127 _Radix 'int'
|-FunctionDecl 0x159aaec92a0 <line:699:24, col:164> col:43 _wcstoll_l 'long long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'long long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x159aaec8f18 <col:61, col:76> col:76 _Str 'const wchar_t *'
| |-ParmVarDecl 0x159aaec8f98 <col:107, col:117> col:117 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x159aaec9018 <col:126, col:130> col:130 _Radix 'int'
| `-ParmVarDecl 0x159aaec9090 <col:147, col:157> col:157 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x159aaec9668 <line:700:24, col:137> col:46 wcstoul 'unsigned long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'unsigned long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x159aaec9388 <col:61, col:76> col:76 _Str 'const wchar_t *'
| |-ParmVarDecl 0x159aaec9408 <col:107, col:118> col:118 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x159aaec9488 <col:127, col:131> col:131 _Radix 'int'
|-FunctionDecl 0x159aaec9ad0 <line:701:24, col:167> col:46 _wcstoul_l 'unsigned long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'unsigned long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x159aaec9748 <col:64, col:79> col:79 _Str 'const wchar_t *'
| |-ParmVarDecl 0x159aaec97c8 <col:110, col:120> col:120 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x159aaec9848 <col:129, col:133> col:133 _Radix 'int'
| `-ParmVarDecl 0x159aaec98c0 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x159aaec6e78 <line:702:24, col:143> col:51 wcstoull 'unsigned long long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'unsigned long long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x159aaec9bb8 <col:67, col:82> col:82 _Str 'const wchar_t *'
| |-ParmVarDecl 0x159aaec9c38 <col:113, col:124> col:124 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x159aaec9cb8 <col:133, col:137> col:137 _Radix 'int'
|-FunctionDecl 0x159aaec72e0 <line:703:24, col:174> col:51 _wcstoull_l 'unsigned long long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'unsigned long long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x159aaec6f58 <col:70, col:85> col:85 _Str 'const wchar_t *'
| |-ParmVarDecl 0x159aaec6fd8 <col:116, col:127> col:127 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x159aaec7058 <col:136, col:140> col:140 _Radix 'int'
| `-ParmVarDecl 0x159aaec70d0 <col:157, col:167> col:167 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x159aaec75f0 <line:704:24, col:124> col:44 wcstold 'long double (const wchar_t *, wchar_t **) __attribute__((cdecl))':'long double (const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x159aaec73c8 <col:59, col:75> col:75 _Str 'const wchar_t *'
| `-ParmVarDecl 0x159aaec7448 <col:106, col:117> col:117 _EndPtr 'wchar_t **'
|-FunctionDecl 0x159aaec7998 <line:705:24, col:155> col:44 _wcstold_l 'long double (const wchar_t *, wchar_t **, _locale_t) __attribute__((cdecl))':'long double (const wchar_t *, wchar_t **, _locale_t)'
| |-ParmVarDecl 0x159aaec76c8 <col:62, col:78> col:78 _Str 'const wchar_t *'
| |-ParmVarDecl 0x159aaec7748 <col:109, col:120> col:120 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x159aaec77c0 <col:138, col:148> col:148 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x159aaec7ca0 <line:706:24, col:117> col:38 wcstof 'float (const wchar_t *, wchar_t **) __attribute__((cdecl))':'float (const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x159aaec7a78 <col:52, col:68> col:68 _Str 'const wchar_t *'
| `-ParmVarDecl 0x159aaec7af8 <col:99, col:110> col:110 _EndPtr 'wchar_t **'
|-FunctionDecl 0x159aaec3068 <line:707:24, col:148> col:38 _wcstof_l 'float (const wchar_t *, wchar_t **, _locale_t) __attribute__((cdecl))':'float (const wchar_t *, wchar_t **, _locale_t)'
| |-ParmVarDecl 0x159aaec2d90 <col:55, col:71> col:71 _Str 'const wchar_t *'
| |-ParmVarDecl 0x159aaec2e10 <col:102, col:113> col:113 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x159aaec2e88 <col:131, col:141> col:141 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x159aaec3380 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:711:118> col:78 _wgetenv 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x159aaec3208 <col:94, col:110> col:110 _VarName 'const wchar_t *'
| `-DeprecatedAttr 0x159aaec3428 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wdupenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x159aaec38d8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:712:28, col:198> col:44 _wgetenv_s 'errno_t (size_t *, wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (size_t *, wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x159aaec3568 <col:61, col:70> col:70 _ReturnSize 'size_t *'
| |-ParmVarDecl 0x159aaec35e0 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x159aaec3658 <col:143, col:150> col:150 _DstSizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x159aaec36d0 <col:174, col:190> col:190 _VarName 'const wchar_t *'
|-FunctionDecl 0x159aaec3c90 <line:720:28, col:214> col:44 _wdupenv_s 'errno_t (wchar_t **, size_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t **, size_t *, const wchar_t *)'
| |-ParmVarDecl 0x159aaec39c8 <col:127, col:137> col:137 _Buffer 'wchar_t **'
| |-ParmVarDecl 0x159aaec3a40 <col:156, col:164> col:164 _BufferSizeInWords 'size_t *'
| `-ParmVarDecl 0x159aaec3ab8 <col:191, col:206> col:206 _VarName 'const wchar_t *'
|-FunctionDecl 0x159aaec1ef8 <line:728:9, col:65> col:21 _wsystem 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x159aaec1d80 <col:41, col:57> col:57 _Command 'const wchar_t *'
|-FunctionDecl 0x159aaec2148 <line:733:24, col:71> col:39 _wtof 'double (const wchar_t *) __attribute__((cdecl))':'double (const wchar_t *)'
| `-ParmVarDecl 0x159aaec1fc8 <col:52, col:67> col:67 _Str 'const wchar_t *'
|-FunctionDecl 0x159aaec2440 <line:734:24, col:101> col:39 _wtof_l 'double (const wchar_t *, _locale_t) __attribute__((cdecl))':'double (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x159aaec2218 <col:54, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x159aaec2290 <col:84, col:94> col:94 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x159aaec25f8 <line:735:24, col:68> col:36 _wtoi 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x159aaec2518 <col:49, col:64> col:64 _Str 'const wchar_t *'
|-FunctionDecl 0x159aaec28f0 <line:736:24, col:98> col:36 _wtoi_l 'int (const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x159aaec26c8 <col:51, col:66> col:66 _Str 'const wchar_t *'
| `-ParmVarDecl 0x159aaec2740 <col:81, col:91> col:91 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x159aaec2b48 <line:737:24, col:69> col:37 _wtol 'long (const wchar_t *) __attribute__((cdecl))':'long (const wchar_t *)'
| `-ParmVarDecl 0x159aaec29c8 <col:50, col:65> col:65 _Str 'const wchar_t *'
|-FunctionDecl 0x159aaec7eb0 <line:738:24, col:99> col:37 _wtol_l 'long (const wchar_t *, _locale_t) __attribute__((cdecl))':'long (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x159aaec2c18 <col:52, col:67> col:67 _Str 'const wchar_t *'
| `-ParmVarDecl 0x159aaec2c90 <col:82, col:92> col:92 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x159aaec8108 <line:739:24, col:75> col:42 _wtoll 'long long (const wchar_t *) __attribute__((cdecl))':'long long (const wchar_t *)'
| `-ParmVarDecl 0x159aaec7f88 <col:56, col:71> col:71 _Str 'const wchar_t *'
|-FunctionDecl 0x159aaec8400 <line:740:24, col:105> col:42 _wtoll_l 'long long (const wchar_t *, _locale_t) __attribute__((cdecl))':'long long (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x159aaec81d8 <col:58, col:73> col:73 _Str 'const wchar_t *'
| `-ParmVarDecl 0x159aaec8250 <col:88, col:98> col:98 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x159aaec8858 <line:742:28, col:162> col:44 _i64tow_s 'errno_t (long long, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (long long, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x159aaec84e0 <col:59, col:67> col:67 _Val 'long long'
| |-ParmVarDecl 0x159aaec8558 <col:102, col:112> col:112 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x159aaec85d0 <col:126, col:133> col:133 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x159aaec8650 <col:152, col:156> col:156 _Radix 'int'
|-FunctionDecl 0x159aaec8cd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:743:146> col:62 _i64tow 'wchar_t *(long long, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(long long, wchar_t *, int)'
| |-ParmVarDecl 0x159aaec8a08 <col:75, col:83> col:83 _Val 'long long'
| |-ParmVarDecl 0x159aaec8a80 <col:112, col:122> col:122 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x159aaec8b00 <col:136, col:140> col:140 _Radix 'int'
| `-DeprecatedAttr 0x159aaec8d88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _i64tow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x159aaeca278 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:744:28, col:172> col:44 _ui64tow_s 'errno_t (unsigned long long, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (unsigned long long, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x159aaec9f00 <col:60, col:77> col:77 _Val 'unsigned long long'
| |-ParmVarDecl 0x159aaec9f78 <col:112, col:122> col:122 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x159aaec9ff0 <col:136, col:143> col:143 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x159aaeca070 <col:162, col:166> col:166 _Radix 'int'
|-FunctionDecl 0x159aaeca6f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:745:157> col:63 _ui64tow 'wchar_t *(unsigned long long, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(unsigned long long, wchar_t *, int)'
| |-ParmVarDecl 0x159aaeca428 <col:77, col:94> col:94 _Val 'unsigned long long'
| |-ParmVarDecl 0x159aaeca4a0 <col:123, col:133> col:133 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x159aaeca520 <col:147, col:151> col:151 _Radix 'int'
| `-DeprecatedAttr 0x159aaeca7a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ui64tow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x159aaeca9c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:746:24, col:76> col:42 _wtoi64 'long long (const wchar_t *) __attribute__((cdecl))':'long long (const wchar_t *)'
| `-ParmVarDecl 0x159aaeca8e8 <col:57, col:72> col:72 _Str 'const wchar_t *'
|-FunctionDecl 0x159aaecac10 <line:747:24, col:106> col:42 _wtoi64_l 'long long (const wchar_t *, _locale_t) __attribute__((cdecl))':'long long (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x159aaecaa98 <col:59, col:74> col:74 _Str 'const wchar_t *'
| `-ParmVarDecl 0x159aaecab10 <col:89, col:99> col:99 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x159aaecaf30 <line:748:24, col:141> col:42 _wcstoi64 'long long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'long long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x159aaecace8 <col:59, col:75> col:75 _Str 'const wchar_t *'
| |-ParmVarDecl 0x159aaecad68 <col:106, col:117> col:117 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x159aaecae10 <col:131, col:135> col:135 _Radix 'int'
|-FunctionDecl 0x159aaecb2c8 <line:749:24, col:171> col:42 _wcstoi64_l 'long long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'long long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x159aaecb010 <col:61, col:77> col:77 _Str 'const wchar_t *'
| |-ParmVarDecl 0x159aaecb090 <col:108, col:119> col:119 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x159aaecb110 <col:133, col:137> col:137 _Radix 'int'
| `-ParmVarDecl 0x159aaecb188 <col:154, col:164> col:164 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x159aaecb5d0 <line:750:24, col:150> col:50 _wcstoui64 'unsigned long long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'unsigned long long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x159aaecb3b0 <col:68, col:84> col:84 _Str 'const wchar_t *'
| |-ParmVarDecl 0x159aaecb430 <col:115, col:126> col:126 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x159aaecb4b0 <col:140, col:144> col:144 _Radix 'int'
|-FunctionDecl 0x159aaecb968 <line:751:24, col:180> col:50 _wcstoui64_l 'unsigned long long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'unsigned long long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x159aaecb6b0 <col:70, col:85> col:85 _Str 'const wchar_t *'
| |-ParmVarDecl 0x159aaecb730 <col:117, col:128> col:128 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x159aaecb7b0 <col:142, col:146> col:146 _Radix 'int'
| `-ParmVarDecl 0x159aaecb828 <col:163, col:173> col:173 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x159aaecbd28 <line:770:24, col:151> col:39 _fullpath 'char *(char *, const char *, size_t) __attribute__((cdecl))':'char *(char *, const char *, size_t)'
| |-ParmVarDecl 0x159aaecba58 <col:82, col:89> col:89 _FullPath 'char *'
| |-ParmVarDecl 0x159aaecbad8 <col:107, col:120> col:120 _Path 'const char *'
| `-ParmVarDecl 0x159aaecbb50 <col:132, col:139> col:139 _SizeInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x159aaed1348 <line:778:28, col:189> col:44 _ecvt_s 'errno_t (char *, size_t, double, int, int *, int *) __attribute__((cdecl))':'errno_t (char *, size_t, double, int, int *, int *)'
| |-ParmVarDecl 0x159aaed0e70 <col:74, col:81> col:81 _DstBuf 'char *'
| |-ParmVarDecl 0x159aaed0ee8 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x159aaed0f68 <col:114, col:121> col:121 _Val 'double'
| |-ParmVarDecl 0x159aaed0fe8 <col:132, col:136> col:136 _NumOfDights 'int'
| |-ParmVarDecl 0x159aaed1068 <col:156, col:162> col:162 _PtDec 'int *'
| `-ParmVarDecl 0x159aaed10e8 <col:176, col:182> col:182 _PtSign 'int *'
|-FunctionDecl 0x159aaed1840 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:780:158> col:72 _ecvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x159aaed1508 <col:83, col:90> col:90 _Val 'double'
| |-ParmVarDecl 0x159aaed1588 <col:101, col:105> col:105 _NumOfDigits 'int'
| |-ParmVarDecl 0x159aaed1608 <col:125, col:131> col:131 _PtDec 'int *'
| |-ParmVarDecl 0x159aaed1688 <col:145, col:151> col:151 _PtSign 'int *'
| `-DeprecatedAttr 0x159aaed1900 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ecvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x159aaed1e80 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:781:28, col:186> col:44 _fcvt_s 'errno_t (char *, size_t, double, int, int *, int *) __attribute__((cdecl))':'errno_t (char *, size_t, double, int, int *, int *)'
| |-ParmVarDecl 0x159aaed1a48 <col:74, col:81> col:81 _DstBuf 'char *'
| |-ParmVarDecl 0x159aaed1ac0 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x159aaed1b40 <col:114, col:121> col:121 _Val 'double'
| |-ParmVarDecl 0x159aaed1bc0 <col:132, col:136> col:136 _NumOfDec 'int'
| |-ParmVarDecl 0x159aaed1c40 <col:153, col:159> col:159 _PtDec 'int *'
| `-ParmVarDecl 0x159aaed1cc0 <col:173, col:179> col:179 _PtSign 'int *'
|-FunctionDecl 0x159aaed2300 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:783:155> col:72 _fcvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x159aaed2040 <col:83, col:90> col:90 _Val 'double'
| |-ParmVarDecl 0x159aaed20c0 <col:101, col:105> col:105 _NumOfDec 'int'
| |-ParmVarDecl 0x159aaed2140 <col:122, col:128> col:128 _PtDec 'int *'
| |-ParmVarDecl 0x159aaed21c0 <col:142, col:148> col:148 _PtSign 'int *'
| `-DeprecatedAttr 0x159aaed23c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fcvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x159aaed2888 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:784:9, col:129> col:25 _gcvt_s 'errno_t (char *, size_t, double, int) __attribute__((cdecl))':'errno_t (char *, size_t, double, int)'
| |-ParmVarDecl 0x159aaed2508 <col:55, col:62> col:62 _DstBuf 'char *'
| |-ParmVarDecl 0x159aaed2580 <col:76, col:83> col:83 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x159aaed2600 <col:95, col:102> col:102 _Val 'double'
| `-ParmVarDecl 0x159aaed2680 <col:113, col:117> col:117 _NumOfDigits 'int'
|-FunctionDecl 0x159aaed2cd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:786:141> col:57 _gcvt 'char *(double, int, char *) __attribute__((cdecl))':'char *(double, int, char *)'
| |-ParmVarDecl 0x159aaed2a38 <col:68, col:75> col:75 _Val 'double'
| |-ParmVarDecl 0x159aaed2ab8 <col:86, col:90> col:90 _NumOfDigits 'int'
| |-ParmVarDecl 0x159aaed2b38 <col:127, col:134> col:134 _DstBuf 'char *'
| `-DeprecatedAttr 0x159aaed2d90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _gcvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x159aaecc120 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:788:24, col:91> col:36 _atodbl 'int (_CRT_DOUBLE *, char *) __attribute__((cdecl))':'int (_CRT_DOUBLE *, char *)'
| |-ParmVarDecl 0x159aaecbef8 <col:50, col:64> col:64 _Result '_CRT_DOUBLE *'
| `-ParmVarDecl 0x159aaecbf78 <col:80, col:87> col:87 _Str 'char *'
|-FunctionDecl 0x159aaecc4a0 <line:789:24, col:89> col:36 _atoldbl 'int (_LDOUBLE *, char *) __attribute__((cdecl))':'int (_LDOUBLE *, char *)'
| |-ParmVarDecl 0x159aaecc278 <col:51, col:62> col:62 _Result '_LDOUBLE *'
| `-ParmVarDecl 0x159aaecc2f8 <col:78, col:85> col:85 _Str 'char *'
|-FunctionDecl 0x159aaecc820 <line:790:24, col:96> col:36 _atoflt 'int (_CRT_FLOAT *, const char *) __attribute__((cdecl))':'int (_CRT_FLOAT *, const char *)'
| |-ParmVarDecl 0x159aaecc5f8 <col:50, col:63> col:63 _Result '_CRT_FLOAT *'
| `-ParmVarDecl 0x159aaecc678 <col:79, col:92> col:92 _Str 'const char *'
|-FunctionDecl 0x159aaeccbc8 <line:791:24, col:121> col:36 _atodbl_l 'int (_CRT_DOUBLE *, char *, _locale_t) __attribute__((cdecl))':'int (_CRT_DOUBLE *, char *, _locale_t)'
| |-ParmVarDecl 0x159aaecc8f8 <col:52, col:66> col:66 _Result '_CRT_DOUBLE *'
| |-ParmVarDecl 0x159aaecc978 <col:82, col:89> col:89 _Str 'char *'
| `-ParmVarDecl 0x159aaecc9f0 <col:104, col:114> col:114 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x159aaeccf88 <line:792:24, col:119> col:36 _atoldbl_l 'int (_LDOUBLE *, char *, _locale_t) __attribute__((cdecl))':'int (_LDOUBLE *, char *, _locale_t)'
| |-ParmVarDecl 0x159aaeccca8 <col:53, col:64> col:64 _Result '_LDOUBLE *'
| |-ParmVarDecl 0x159aaeccd28 <col:80, col:87> col:87 _Str 'char *'
| `-ParmVarDecl 0x159aaeccda0 <col:102, col:112> col:112 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x159aaecd338 <line:793:24, col:126> col:36 _atoflt_l 'int (_CRT_FLOAT *, const char *, _locale_t) __attribute__((cdecl))':'int (_CRT_FLOAT *, const char *, _locale_t)'
| |-ParmVarDecl 0x159aaecd068 <col:52, col:65> col:65 _Result '_CRT_FLOAT *'
| |-ParmVarDecl 0x159aaecd0e8 <col:81, col:94> col:94 _Str 'const char *'
| `-ParmVarDecl 0x159aaecd160 <col:109, col:119> col:119 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x159aaecd610 <line:794:46> col:46 implicit _lrotl 'unsigned long (unsigned long, int)' extern
| |-ParmVarDecl 0x159aaecd6b0 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0x159aaecd718 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x159aaecd790 <col:46> Implicit
|-FunctionDecl 0x159aaecd7e8 prev 0x159aaecd610 <col:24, col:93> col:46 _lrotl 'unsigned long (unsigned long, int)'
| |-ParmVarDecl 0x159aaecd420 <col:58, col:72> col:72 _Val 'unsigned long'
| |-ParmVarDecl 0x159aaecd4a0 <col:83, col:87> col:87 _Shift 'int'
| `-NoThrowAttr 0x159aaecd8e0 <col:46> Inherited Implicit
|-FunctionDecl 0x159aaecdaa0 <line:795:46> col:46 implicit _lrotr 'unsigned long (unsigned long, int)' extern
| |-ParmVarDecl 0x159aaecdb40 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0x159aaecdba8 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x159aaecdc20 <col:46> Implicit
|-FunctionDecl 0x159aaecdc78 prev 0x159aaecdaa0 <col:24, col:93> col:46 _lrotr 'unsigned long (unsigned long, int)'
| |-ParmVarDecl 0x159aaecd920 <col:58, col:72> col:72 _Val 'unsigned long'
| |-ParmVarDecl 0x159aaecd9a0 <col:83, col:87> col:87 _Shift 'int'
| `-NoThrowAttr 0x159aaecdd70 <col:46> Inherited Implicit
|-FunctionDecl 0x159aaed32f8 <line:796:40, line:797:37> line:796:58 _makepath_s 'errno_t (char *, size_t, const char *, const char *, const char *, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *, const char *, const char *, const char *)'
| |-ParmVarDecl 0x159aaecddb0 <col:99, col:106> col:106 _PathResult 'char *'
| |-ParmVarDecl 0x159aaed2e90 <col:124, col:131> col:131 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x159aaed2f10 <col:156, col:169> col:169 _Drive 'const char *'
| |-ParmVarDecl 0x159aaed2f90 <col:188, col:201> col:201 _Dir 'const char *'
| |-ParmVarDecl 0x159aaed3010 <col:218, col:231> col:231 _Filename 'const char *'
| `-ParmVarDecl 0x159aaed3090 <line:797:20, col:33> col:33 _Ext 'const char *'
|-FunctionDecl 0x159aaed38a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1948:181> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:799:78 _makepath 'void (char *, const char *, const char *, const char *, const char *) __attribute__((cdecl))':'void (char *, const char *, const char *, const char *, const char *)'
| |-ParmVarDecl 0x159aaed34b8 <col:113, col:119> col:119 _Path 'char *'
| |-ParmVarDecl 0x159aaed3538 <col:137, col:151> col:151 _Drive 'const char *'
| |-ParmVarDecl 0x159aaed35b8 <col:170, col:184> col:184 _Dir 'const char *'
| |-ParmVarDecl 0x159aaed3638 <col:201, col:215> col:215 _Filename 'const char *'
| |-ParmVarDecl 0x159aaed36b8 <col:237, col:251> col:251 _Ext 'const char *'
| `-DeprecatedAttr 0x159aaed3968 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _makepath_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x159aaed3c40 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:826:9, col:59> col:27 _onexit '_onexit_t (_onexit_t) __attribute__((cdecl))':'_onexit_t (_onexit_t)'
| `-ParmVarDecl 0x159aaed3ad0 <col:44, col:54> col:54 _Func '_onexit_t':'int (*)(void) __attribute__((cdecl))'
|-FunctionDecl 0x159aaed4eb0 <line:831:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x159aaed3d18 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x159aaed5068 <line:838:24, col:77> col:39 _putenv 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x159aaed4f88 <col:54, col:67> col:67 _EnvString 'const char *'
|-FunctionDecl 0x159aaed5368 <line:839:28, col:107> col:44 _putenv_s 'errno_t (const char *, const char *) __attribute__((cdecl))':'errno_t (const char *, const char *)'
| |-ParmVarDecl 0x159aaed5140 <col:61, col:74> col:74 _Name 'const char *'
| `-ParmVarDecl 0x159aaed51c0 <col:88, col:101> col:101 _Value 'const char *'
|-FunctionDecl 0x159aaed5630 <line:842:30> col:30 implicit _rotl 'unsigned int (unsigned int, int)' extern
| |-ParmVarDecl 0x159aaed56d0 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-ParmVarDecl 0x159aaed5738 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x159aaed57b0 <col:30> Implicit
|-FunctionDecl 0x159aaed5808 prev 0x159aaed5630 <col:9, col:75> col:30 _rotl 'unsigned int (unsigned int, int)'
| |-ParmVarDecl 0x159aaed5448 <col:41, col:54> col:54 _Val 'unsigned int'
| |-ParmVarDecl 0x159aaed54c8 <col:65, col:69> col:69 _Shift 'int'
| `-NoThrowAttr 0x159aaed5900 <col:30> Inherited Implicit
|-FunctionDecl 0x159aaed5b30 <line:843:34> col:34 implicit _rotl64 'unsigned long long (unsigned long long, int)' extern
| |-ParmVarDecl 0x159aaed5bd0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x159aaed5c38 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x159aaed5cb0 <col:34> Implicit
|-FunctionDecl 0x159aaed5d08 prev 0x159aaed5b30 <col:9, col:85> col:34 _rotl64 'unsigned long long (unsigned long long, int)'
| |-ParmVarDecl 0x159aaed5940 <col:47, col:64> col:64 _Val 'unsigned long long'
| |-ParmVarDecl 0x159aaed59c0 <col:75, col:79> col:79 _Shift 'int'
| `-NoThrowAttr 0x159aaed5e00 <col:34> Inherited Implicit
|-FunctionDecl 0x159aaecff78 <line:844:30> col:30 implicit _rotr 'unsigned int (unsigned int, int)' extern
| |-ParmVarDecl 0x159aaed0018 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-ParmVarDecl 0x159aaed0080 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x159aaed00f8 <col:30> Implicit
|-FunctionDecl 0x159aaed0150 prev 0x159aaecff78 <col:9, col:75> col:30 _rotr 'unsigned int (unsigned int, int)'
| |-ParmVarDecl 0x159aaed5e40 <col:41, col:54> col:54 _Val 'unsigned int'
| |-ParmVarDecl 0x159aaecfe78 <col:65, col:69> col:69 _Shift 'int'
| `-NoThrowAttr 0x159aaed0248 <col:30> Inherited Implicit
|-FunctionDecl 0x159aaed0408 <line:845:34> col:34 implicit _rotr64 'unsigned long long (unsigned long long, int)' extern
| |-ParmVarDecl 0x159aaed04a8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x159aaed0510 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x159aaed0588 <col:34> Implicit
|-FunctionDecl 0x159aaed05e0 prev 0x159aaed0408 <col:9, col:85> col:34 _rotr64 'unsigned long long (unsigned long long, int)'
| |-ParmVarDecl 0x159aaed0288 <col:47, col:64> col:64 _Val 'unsigned long long'
| |-ParmVarDecl 0x159aaed0308 <col:75, col:79> col:79 _Shift 'int'
| `-NoThrowAttr 0x159aaed06d8 <col:34> Inherited Implicit
|-FunctionDecl 0x159aaed0a98 <line:849:9, col:171> col:25 _searchenv_s 'errno_t (const char *, const char *, char *, size_t) __attribute__((cdecl))':'errno_t (const char *, const char *, char *, size_t)'
| |-ParmVarDecl 0x159aaed0718 <col:45, col:58> col:58 _Filename 'const char *'
| |-ParmVarDecl 0x159aaed0798 <col:76, col:89> col:89 _EnvVar 'const char *'
| |-ParmVarDecl 0x159aaed0818 <col:127, col:134> col:134 _ResultPath 'char *'
| `-ParmVarDecl 0x159aaed0890 <col:152, col:159> col:159 _SizeInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x159aaed3f40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1954:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:851:78 _searchenv 'void (const char *, const char *, char *) __attribute__((cdecl))':'void (const char *, const char *, char *)'
| |-ParmVarDecl 0x159aaed0c48 <col:97, col:111> col:111 _Filename 'const char *'
| |-ParmVarDecl 0x159aaed0cc8 <col:129, col:143> col:143 _EnvVar 'const char *'
| |-ParmVarDecl 0x159aaed0d48 <col:176, col:182> col:182 _ResultPath 'char *'
| `-DeprecatedAttr 0x159aaed3ff8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _searchenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x159aaed45e0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:854:261> col:62 _splitpath 'void (const char *, char *, char *, char *, char *) __attribute__((cdecl))':'void (const char *, char *, char *, char *, char *)'
| |-ParmVarDecl 0x159aaed4200 <col:80, col:93> col:93 _FullPath 'const char *'
| |-ParmVarDecl 0x159aaed4280 <col:129, col:136> col:136 _Drive 'char *'
| |-ParmVarDecl 0x159aaed4300 <col:169, col:176> col:176 _Dir 'char *'
| |-ParmVarDecl 0x159aaed4380 <col:207, col:214> col:214 _Filename 'char *'
| |-ParmVarDecl 0x159aaed4400 <col:250, col:257> col:257 _Ext 'char *'
| `-DeprecatedAttr 0x159aaed46a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _splitpath_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x159aaecdeb0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:855:40, line:859:79> line:855:57 _splitpath_s 'errno_t (const char *, char *, size_t, char *, size_t, char *, size_t, char *, size_t) __attribute__((cdecl))':'errno_t (const char *, char *, size_t, char *, size_t, char *, size_t, char *, size_t)'
| |-ParmVarDecl 0x159aaed47f0 <col:77, col:90> col:90 _FullPath 'const char *'
| |-ParmVarDecl 0x159aaed4870 <line:856:48, col:55> col:55 _Drive 'char *'
| |-ParmVarDecl 0x159aaed48e8 <col:68, col:75> col:75 _DriveSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x159aaed4968 <line:857:46, col:53> col:53 _Dir 'char *'
| |-ParmVarDecl 0x159aaed49e0 <col:64, col:71> col:71 _DirSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x159aaed4a60 <line:858:51, col:58> col:58 _Filename 'char *'
| |-ParmVarDecl 0x159aaed4ad8 <col:74, col:81> col:81 _FilenameSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x159aaed4b58 <line:859:46, col:53> col:53 _Ext 'char *'
| `-ParmVarDecl 0x159aaed4bd0 <col:64, col:71> col:71 _ExtSize 'size_t':'unsigned long long'
|-FunctionDecl 0x159aaece260 <line:862:9, col:204> col:24 _swab 'void (char *, char *, int) __attribute__((cdecl))':'void (char *, char *, int)'
| |-ParmVarDecl 0x159aaecdfc8 <col:95, col:102> col:102 _Buf1 'char *'
| |-ParmVarDecl 0x159aaece048 <col:174, col:181> col:181 _Buf2 'char *'
| `-ParmVarDecl 0x159aaece0c8 <col:188, col:192> col:192 _SizeInBytes 'int'
|-FunctionDecl 0x159aaece600 <line:873:24, col:161> col:42 _wfullpath 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x159aaece340 <col:86, col:96> col:96 _FullPath 'wchar_t *'
| |-ParmVarDecl 0x159aaece3b8 <col:114, col:130> col:130 _Path 'const wchar_t *'
| `-ParmVarDecl 0x159aaece430 <col:142, col:149> col:149 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x159aaeceb98 <line:879:40, line:880:40> line:879:56 _wmakepath_s 'errno_t (wchar_t *, size_t, const wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x159aaece6e0 <col:91, col:101> col:101 _PathResult 'wchar_t *'
| |-ParmVarDecl 0x159aaece758 <col:119, col:126> col:126 _SIZE 'size_t':'unsigned long long'
| |-ParmVarDecl 0x159aaece7d0 <col:144, col:160> col:160 _Drive 'const wchar_t *'
| |-ParmVarDecl 0x159aaece848 <col:179, col:195> col:195 _Dir 'const wchar_t *'
| |-ParmVarDecl 0x159aaece8c0 <col:212, col:228> col:228 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x159aaece938 <line:880:20, col:36> col:36 _Ext 'const wchar_t *'
|-FunctionDecl 0x159aaed61e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1948:181> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:882:78 _wmakepath 'void (wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'void (wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x159aaeced50 <col:114, col:123> col:123 _ResultPath 'wchar_t *'
| |-ParmVarDecl 0x159aaecedc8 <col:147, col:164> col:164 _Drive 'const wchar_t *'
| |-ParmVarDecl 0x159aaed5ec0 <col:183, col:200> col:200 _Dir 'const wchar_t *'
| |-ParmVarDecl 0x159aaed5f38 <col:217, col:234> col:234 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x159aaed5fb0 <col:256, col:273> col:273 _Ext 'const wchar_t *'
| `-DeprecatedAttr 0x159aaed62a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wmakepath_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x159aaed6560 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:885:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x159aaed63e8 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x159aaed6710 <line:889:24, col:81> col:39 _wputenv 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x159aaed6630 <col:55, col:71> col:71 _EnvString 'const wchar_t *'
|-FunctionDecl 0x159aaed69f8 <line:890:28, col:114> col:44 _wputenv_s 'errno_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x159aaed67e0 <col:62, col:78> col:78 _Name 'const wchar_t *'
| `-ParmVarDecl 0x159aaed6858 <col:92, col:108> col:108 _Value 'const wchar_t *'
|-FunctionDecl 0x159aaecee50 <line:891:9, col:181> col:25 _wsearchenv_s 'errno_t (const wchar_t *, const wchar_t *, wchar_t *, size_t) __attribute__((cdecl))':'errno_t (const wchar_t *, const wchar_t *, wchar_t *, size_t)'
| |-ParmVarDecl 0x159aaed6ad0 <col:46, col:62> col:62 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x159aaed6b48 <col:80, col:96> col:96 _EnvVar 'const wchar_t *'
| |-ParmVarDecl 0x159aaed6bc0 <col:134, col:144> col:144 _ResultPath 'wchar_t *'
| `-ParmVarDecl 0x159aaed6c38 <col:162, col:169> col:169 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x159aaecf2c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1954:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:893:78 _wsearchenv 'void (const wchar_t *, const wchar_t *, wchar_t *) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, wchar_t *)'
| |-ParmVarDecl 0x159aaeceff8 <col:98, col:115> col:115 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x159aaecf070 <col:133, col:150> col:150 _EnvVar 'const wchar_t *'
| |-ParmVarDecl 0x159aaecf0e8 <col:183, col:192> col:192 _ResultPath 'wchar_t *'
| `-DeprecatedAttr 0x159aaecf378 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wsearchenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x159aaecf990 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:896:278> col:63 _wsplitpath 'void (const wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *) __attribute__((cdecl))':'void (const wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *)'
| |-ParmVarDecl 0x159aaecf578 <col:82, col:98> col:98 _FullPath 'const wchar_t *'
| |-ParmVarDecl 0x159aaecf5f0 <col:134, col:144> col:144 _Drive 'wchar_t *'
| |-ParmVarDecl 0x159aaecf668 <col:177, col:187> col:187 _Dir 'wchar_t *'
| |-ParmVarDecl 0x159aaecf6e0 <col:218, col:228> col:228 _Filename 'wchar_t *'
| |-ParmVarDecl 0x159aaecf758 <col:264, col:274> col:274 _Ext 'wchar_t *'
| `-DeprecatedAttr 0x159aaecfa58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wsplitpath_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x159aaed7330 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:897:21, line:901:82> line:897:37 _wsplitpath_s 'errno_t (const wchar_t *, wchar_t *, size_t, wchar_t *, size_t, wchar_t *, size_t, wchar_t *, size_t) __attribute__((cdecl))':'errno_t (const wchar_t *, wchar_t *, size_t, wchar_t *, size_t, wchar_t *, size_t, wchar_t *, size_t)'
| |-ParmVarDecl 0x159aaecfb98 <col:58, col:74> col:74 _FullPath 'const wchar_t *'
| |-ParmVarDecl 0x159aaecfc10 <line:898:48, col:58> col:58 _Drive 'wchar_t *'
| |-ParmVarDecl 0x159aaecfc88 <col:71, col:78> col:78 _DriveSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x159aaecfd00 <line:899:46, col:56> col:56 _Dir 'wchar_t *'
| |-ParmVarDecl 0x159aaecfd78 <col:67, col:74> col:74 _DirSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x159aaed6ed0 <line:900:51, col:61> col:61 _Filename 'wchar_t *'
| |-ParmVarDecl 0x159aaed6f48 <col:77, col:84> col:84 _FilenameSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x159aaed6fc0 <line:901:46, col:56> col:56 _Ext 'wchar_t *'
| `-ParmVarDecl 0x159aaed7038 <col:67, col:74> col:74 _ExtSize 'size_t':'unsigned long long'
|-FunctionDecl 0x159aaed7650 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:909:78> col:50 _seterrormode 'void (int) __attribute__((cdecl))':'void (int)'
| |-ParmVarDecl 0x159aaed7548 <col:69, col:73> col:73 _Mode 'int'
| `-DeprecatedAttr 0x159aaed76f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using SetErrorMode instead. See online help for details." ""
|-FunctionDecl 0x159aaed7ae8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:910:97> col:42 _beep 'void (unsigned int, unsigned int) __attribute__((cdecl))':'void (unsigned int, unsigned int)'
| |-ParmVarDecl 0x159aaed7908 <col:53, col:62> col:62 _Frequency 'unsigned int'
| |-ParmVarDecl 0x159aaed7988 <col:79, col:88> col:88 _Duration 'unsigned int'
| `-DeprecatedAttr 0x159aaed7b98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using Beep instead. See online help for details." ""
|-FunctionDecl 0x159aaedaf40 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:911:78> col:43 _sleep 'void (unsigned long) __attribute__((cdecl))':'void (unsigned long)'
| |-ParmVarDecl 0x159aaed7da0 <col:55, col:69> col:69 _Duration 'unsigned long'
| `-DeprecatedAttr 0x159aaedafe8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using Sleep instead. See online help for details." ""
|-FunctionDecl 0x159aaedb590 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:934:187> col:102 ecvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x159aaedb2d0 <col:112, col:119> col:119 _Val 'double'
| |-ParmVarDecl 0x159aaedb350 <col:130, col:134> col:134 _NumOfDigits 'int'
| |-ParmVarDecl 0x159aaedb3d0 <col:154, col:160> col:160 _PtDec 'int *'
| |-ParmVarDecl 0x159aaedb450 <col:174, col:180> col:180 _PtSign 'int *'
| |-DeprecatedAttr 0x159aaedb650 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _ecvt. See online help for details." ""
| `-DeprecatedAttr 0x159aaedb748 <col:47, col:63> "This function or variable may be unsafe. Consider using _ecvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x159aaedbc80 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:935:184> col:102 fcvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x159aaedb9c0 <col:112, col:119> col:119 _Val 'double'
| |-ParmVarDecl 0x159aaedba40 <col:130, col:134> col:134 _NumOfDec 'int'
| |-ParmVarDecl 0x159aaedbac0 <col:151, col:157> col:157 _PtDec 'int *'
| |-ParmVarDecl 0x159aaedbb40 <col:171, col:177> col:177 _PtSign 'int *'
| |-DeprecatedAttr 0x159aaedbd40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcvt. See online help for details." ""
| `-DeprecatedAttr 0x159aaedbe38 <col:47, col:63> "This function or variable may be unsafe. Consider using _fcvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x159aaeda350 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:936:179> col:96 gcvt 'char *(double, int, char *) __attribute__((cdecl))':'char *(double, int, char *)'
| |-ParmVarDecl 0x159aaeda130 <col:106, col:113> col:113 _Val 'double'
| |-ParmVarDecl 0x159aaeda1b0 <col:124, col:128> col:128 _NumOfDigits 'int'
| |-ParmVarDecl 0x159aaeda230 <col:165, col:172> col:172 _DstBuf 'char *'
| |-DeprecatedAttr 0x159aaeda408 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _gcvt. See online help for details." ""
| `-DeprecatedAttr 0x159aaeda500 <col:47, col:63> "This function or variable may be unsafe. Consider using _fcvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x159aaeda998 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:937:170> col:96 itoa 'char *(int, char *, int) __attribute__((cdecl))':'char *(int, char *, int)'
| |-ParmVarDecl 0x159aaeda778 <col:106, col:110> col:110 _Val 'int'
| |-ParmVarDecl 0x159aaeda7f8 <col:139, col:146> col:146 _DstBuf 'char *'
| |-ParmVarDecl 0x159aaeda878 <col:160, col:164> col:164 _Radix 'int'
| |-DeprecatedAttr 0x159aaedaa50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _itoa. See online help for details." ""
| `-DeprecatedAttr 0x159aaedab48 <col:47, col:63> "This function or variable may be unsafe. Consider using _itoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x159aaedc040 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:938:171> col:96 ltoa 'char *(long, char *, int) __attribute__((cdecl))':'char *(long, char *, int)'
| |-ParmVarDecl 0x159aaedadc0 <col:106, col:111> col:111 _Val 'long'
| |-ParmVarDecl 0x159aaedae40 <col:140, col:147> col:147 _DstBuf 'char *'
| |-ParmVarDecl 0x159aaedbf20 <col:161, col:165> col:165 _Radix 'int'
| |-DeprecatedAttr 0x159aaedc0f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _ltoa. See online help for details." ""
| `-DeprecatedAttr 0x159aaedc1f0 <col:47, col:63> "This function or variable may be unsafe. Consider using _ltoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x159aaedc4c0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:941:108> col:71 putenv 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x159aaedc3e0 <col:85, col:98> col:98 _EnvString 'const char *'
| `-DeprecatedAttr 0x159aaedc568 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putenv. See online help for details." ""
|-FunctionDecl 0x159aaedc948 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:944:245> col:128 swab 'void (char *, char *, int) __attribute__((cdecl))':'void (char *, char *, int)'
| |-ParmVarDecl 0x159aaedc730 <col:165, col:172> col:172 _Buf1 'char *'
| |-ParmVarDecl 0x159aaedc7b0 <col:210, col:217> col:217 _Buf2 'char *'
| |-ParmVarDecl 0x159aaedc830 <col:229, col:233> col:233 _SizeInBytes 'int'
| `-DeprecatedAttr 0x159aaedca00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _swab. See online help for details." ""
|-FunctionDecl 0x159aaedef50 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:945:181> col:96 ultoa 'char *(unsigned long, char *, int) __attribute__((cdecl))':'char *(unsigned long, char *, int)'
| |-ParmVarDecl 0x159aaedccc0 <col:107, col:121> col:121 _Val 'unsigned long'
| |-ParmVarDecl 0x159aaedcd40 <col:150, col:157> col:157 _Dstbuf 'char *'
| |-ParmVarDecl 0x159aaedcdc0 <col:171, col:175> col:175 _Radix 'int'
| |-DeprecatedAttr 0x159aaedf008 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _ultoa. See online help for details." ""
| `-DeprecatedAttr 0x159aaedf100 <col:47, col:63> "This function or variable may be unsafe. Consider using _ultoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x159aaedf2e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:64:18, line:947:48> col:18 onexit '_onexit_t (_onexit_t) __attribute__((cdecl))':'_onexit_t (_onexit_t)'
| `-ParmVarDecl 0x159aaedf210 <line:64:18, line:947:43> col:43 _Func '_onexit_t':'int (*)(void) __attribute__((cdecl))'
|-RecordDecl 0x159aaedf3a8 <.//openssl//file_jk/before\crypto\ec/ec_lcl.h:52:1, line:173:1> line:52:8 struct ec_method_st definition
| |-FieldDecl 0x159aaedf478 <line:54:5, col:9> col:9 flags 'int'
| |-FieldDecl 0x159aaedf4e8 <line:56:5, col:9> col:9 field_type 'int'
| |-FieldDecl 0x159aaedf688 <line:61:5, col:34> col:11 group_init 'int (*)(int *)'
| |-FieldDecl 0x159aaedf850 <line:62:5, col:37> col:12 group_finish 'void (*)(int *)'
| |-FieldDecl 0x159aaedf960 <line:63:5, col:43> col:12 group_clear_finish 'void (*)(int *)'
| |-FieldDecl 0x159aaedfbd0 <line:64:5, col:52> col:11 group_copy 'int (*)(int *, const int *)'
| |-FieldDecl 0x159aaeddff8 <line:67:5, line:68:54> line:67:11 group_set_curve 'int (*)(int *, const int *, const int *, const int *, int *)'
| |-FieldDecl 0x159aaede408 <line:69:5, line:70:37> line:69:11 group_get_curve 'int (*)(const int *, int *, int *, int *, int *)'
| |-FieldDecl 0x159aaede5d8 <line:72:5, col:46> col:11 group_get_degree 'int (*)(const int *)'
| |-FieldDecl 0x159aaede6f0 <line:73:5, col:46> col:11 group_order_bits 'int (*)(const int *)'
| |-FieldDecl 0x159aaede960 <line:75:5, col:64> col:11 group_check_discriminant 'int (*)(const int *, int *)'
| |-FieldDecl 0x159aaedea78 <line:80:5, col:34> col:11 point_init 'int (*)(int *)'
| |-FieldDecl 0x159aaedeb88 <line:81:5, col:37> col:12 point_finish 'void (*)(int *)'
| |-FieldDecl 0x159aaedec98 <line:82:5, col:43> col:12 point_clear_finish 'void (*)(int *)'
| |-FieldDecl 0x159aaedee38 <line:83:5, col:52> col:11 point_copy 'int (*)(int *, const int *)'
| |-FieldDecl 0x159aaee0010 <line:92:5, col:63> col:11 point_set_to_infinity 'int (*)(const int *, int *)'
| |-FieldDecl 0x159aaee04c0 <line:93:5, line:96:76> line:93:11 point_set_Jprojective_coordinates_GFp 'int (*)(const int *, int *, const int *, const int *, const int *, int *)'
| |-FieldDecl 0x159aaee0970 <line:97:5, line:100:59> line:97:11 point_get_Jprojective_coordinates_GFp 'int (*)(const int *, const int *, int *, int *, int *, int *)'
| |-FieldDecl 0x159aaee0d88 <line:101:5, line:103:50> line:101:11 point_set_affine_coordinates 'int (*)(const int *, int *, const int *, const int *, int *)'
| |-FieldDecl 0x159aaf37178 <line:104:5, line:105:72> line:104:11 point_get_affine_coordinates 'int (*)(const int *, const int *, int *, int *, int *)'
| |-FieldDecl 0x159aaf37588 <line:106:5, line:108:54> line:106:11 point_set_compressed_coordinates 'int (*)(const int *, int *, const int *, int, int *)'
| |-FieldDecl 0x159aaf37aa8 <line:110:5, line:112:46> line:110:14 point2oct 'size_t (*)(const int *, const int *, int, unsigned char *, size_t, int *)'
| |-FieldDecl 0x159aaf35f30 <line:113:5, line:114:43> line:113:11 oct2point 'int (*)(const int *, int *, const unsigned char *, size_t, int *)'
| |-FieldDecl 0x159aaf36268 <line:116:5, line:117:44> line:116:11 add 'int (*)(const int *, int *, const int *, const int *, int *)'
| |-FieldDecl 0x159aaf365f0 <line:118:5, col:75> col:11 dbl 'int (*)(const int *, int *, const int *, int *)'
| |-FieldDecl 0x159aaf368e8 <line:119:5, col:58> col:11 invert 'int (*)(const int *, int *, int *)'
| |-FieldDecl 0x159aaf36b50 <line:123:5, col:62> col:11 is_at_infinity 'int (*)(const int *, const int *)'
| |-FieldDecl 0x159aaf36e48 <line:124:5, col:69> col:11 is_on_curve 'int (*)(const int *, const int *, int *)'
| |-FieldDecl 0x159aaf3a220 <line:125:5, line:126:31> line:125:11 point_cmp 'int (*)(const int *, const int *, const int *, int *)'
| |-FieldDecl 0x159aaf3a448 <line:128:5, col:63> col:11 make_affine 'int (*)(const int *, int *, int *)'
| |-FieldDecl 0x159aaf3a8c0 <line:129:5, line:130:40> line:129:11 points_make_affine 'int (*)(const int *, size_t, int **, int *)'
| |-FieldDecl 0x159aaf3aef8 <line:136:5, line:138:25> line:136:11 mul 'int (*)(const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-FieldDecl 0x159aaf38150 <line:139:5, col:54> col:11 precompute_mult 'int (*)(int *, int *)'
| |-FieldDecl 0x159aaf38268 <line:140:5, col:55> col:11 have_precompute_mult 'int (*)(const int *)'
| |-FieldDecl 0x159aaf385a0 <line:148:5, line:149:48> line:148:11 field_mul 'int (*)(const int *, int *, const int *, const int *, int *)'
| |-FieldDecl 0x159aaf38850 <line:150:5, col:77> col:11 field_sqr 'int (*)(const int *, int *, const int *, int *)'
| |-FieldDecl 0x159aaf38b88 <line:151:5, line:152:48> line:151:11 field_div 'int (*)(const int *, int *, const int *, const int *, int *)'
| |-FieldDecl 0x159aaf38e38 <line:154:5, line:155:34> line:154:11 field_encode 'int (*)(const int *, int *, const int *, int *)'
| |-FieldDecl 0x159aaf330c0 <line:157:5, line:158:34> line:157:11 field_decode 'int (*)(const int *, int *, const int *, int *)'
| |-FieldDecl 0x159aaf332e8 <line:159:5, col:67> col:11 field_set_to_one 'int (*)(const int *, int *, int *)'
| |-FieldDecl 0x159aaf33610 <line:161:5, col:75> col:14 priv2oct 'size_t (*)(const int *, unsigned char *, size_t)'
| |-FieldDecl 0x159aaf33938 <line:162:5, col:72> col:11 oct2priv 'int (*)(int *, const unsigned char *, size_t)'
| |-FieldDecl 0x159aaf33ad8 <line:163:5, col:61> col:11 set_private 'int (*)(int *, const int *)'
| |-FieldDecl 0x159aaf33bf0 <line:164:5, col:32> col:11 keygen 'int (*)(int *)'
| |-FieldDecl 0x159aaf33d08 <line:165:5, col:40> col:11 keycheck 'int (*)(const int *)'
| |-FieldDecl 0x159aaf33e20 <line:166:5, col:35> col:11 keygenpub 'int (*)(int *)'
| |-FieldDecl 0x159aaf33fd8 <line:167:5, col:50> col:11 keycopy 'int (*)(int *, const int *)'
| |-FieldDecl 0x159aaf340e8 <line:168:5, col:36> col:12 keyfinish 'void (*)(int *)'
| |-FieldDecl 0x159aaf344f0 <line:170:5, line:171:72> line:170:11 ecdh_compute_key 'int (*)(unsigned char **, size_t *, const int *, const int *)'
| `-FieldDecl 0x159aaf34718 <line:172:5, col:77> col:11 blind_coordinates 'int (*)(const int *, int *, int *)'
|-RecordDecl 0x159aaf34770 <line:178:9, col:16> col:16 struct nistp224_pre_comp_st
|-TypedefDecl 0x159aaf34888 <col:1, col:37> col:37 referenced NISTP224_PRE_COMP 'struct nistp224_pre_comp_st':'struct nistp224_pre_comp_st'
| `-ElaboratedType 0x159aaf34830 'struct nistp224_pre_comp_st' sugar
|   `-RecordType 0x159aaf34810 'struct nistp224_pre_comp_st'
|     `-Record 0x159aaf34770 'nistp224_pre_comp_st'
|-RecordDecl 0x159aaf348f8 <line:179:9, col:16> col:16 struct nistp256_pre_comp_st
|-TypedefDecl 0x159aaf34a08 <col:1, col:37> col:37 referenced NISTP256_PRE_COMP 'struct nistp256_pre_comp_st':'struct nistp256_pre_comp_st'
| `-ElaboratedType 0x159aaf349b0 'struct nistp256_pre_comp_st' sugar
|   `-RecordType 0x159aaf34990 'struct nistp256_pre_comp_st'
|     `-Record 0x159aaf348f8 'nistp256_pre_comp_st'
|-RecordDecl 0x159aaf34a78 <line:180:9, col:16> col:16 struct nistp521_pre_comp_st
|-TypedefDecl 0x159aaf34b88 <col:1, col:37> col:37 referenced NISTP521_PRE_COMP 'struct nistp521_pre_comp_st':'struct nistp521_pre_comp_st'
| `-ElaboratedType 0x159aaf34b30 'struct nistp521_pre_comp_st' sugar
|   `-RecordType 0x159aaf34b10 'struct nistp521_pre_comp_st'
|     `-Record 0x159aaf34a78 'nistp521_pre_comp_st'
|-RecordDecl 0x159aaf34bf8 <line:181:9, col:16> col:16 struct nistz256_pre_comp_st
|-TypedefDecl 0x159aaf34d08 <col:1, col:37> col:37 referenced NISTZ256_PRE_COMP 'struct nistz256_pre_comp_st':'struct nistz256_pre_comp_st'
| `-ElaboratedType 0x159aaf34cb0 'struct nistz256_pre_comp_st' sugar
|   `-RecordType 0x159aaf34c90 'struct nistz256_pre_comp_st'
|     `-Record 0x159aaf34bf8 'nistz256_pre_comp_st'
|-RecordDecl 0x159aaf34d78 <line:182:9, col:16> col:16 struct ec_pre_comp_st
|-TypedefDecl 0x159aaf34e88 <col:1, col:31> col:31 referenced EC_PRE_COMP 'struct ec_pre_comp_st':'struct ec_pre_comp_st'
| `-ElaboratedType 0x159aaf34e30 'struct ec_pre_comp_st' sugar
|   `-RecordType 0x159aaf34e10 'struct ec_pre_comp_st'
|     `-Record 0x159aaf34d78 'ec_pre_comp_st'
|-RecordDecl 0x159aaf3af80 <line:184:1, line:249:1> line:184:8 invalid struct ec_group_st definition
| |-FieldDecl 0x159aaf3b058 <line:185:5, col:22> col:22 invalid meth 'const int *'
| |-FieldDecl 0x159aaf3b0c8 <line:186:5, col:15> col:15 invalid generator 'int *'
| |-FieldDecl 0x159aaf3b138 <line:187:5, col:13> col:13 invalid order 'int *'
| |-FieldDecl 0x159aaf3b1a8 <col:5, col:21> col:21 invalid cofactor 'int *'
| |-FieldDecl 0x159aaf3b218 <line:188:5, col:9> col:9 curve_name 'int'
| |-FieldDecl 0x159aaf3b288 <line:189:5, col:9> col:9 asn1_flag 'int'
| |-FieldDecl 0x159aaf3b2f8 <line:190:5, col:29> col:29 invalid asn1_form 'int'
| |-FieldDecl 0x159aaf3b368 <line:191:5, col:20> col:20 seed 'unsigned char *'
| |-FieldDecl 0x159aaf3b3d0 <line:193:5, col:12> col:12 seed_len 'size_t':'unsigned long long'
| |-FieldDecl 0x159aaf3b440 <line:203:5, col:13> col:13 invalid field 'int *'
| |-FieldDecl 0x159aaf3b540 <line:211:5, col:15> col:9 poly 'int [6]'
| |-FieldDecl 0x159aaf3b5b0 <line:219:5, col:13> col:13 invalid a 'int *'
| |-FieldDecl 0x159aaf3b620 <col:5, col:17> col:17 invalid b 'int *'
| |-FieldDecl 0x159aaf3b690 <line:221:5, col:9> col:9 a_is_minus3 'int'
| |-FieldDecl 0x159aaf3b700 <line:223:5, col:11> col:11 field_data1 'void *'
| |-FieldDecl 0x159aaf3b770 <line:225:5, col:11> col:11 field_data2 'void *'
| |-FieldDecl 0x159aaf3bb00 <line:227:5, line:228:36> line:227:11 field_mod_func 'int (*)(int *, const int *, const int *, int *)'
| |-FieldDecl 0x159aaf3bb70 <line:230:5, col:18> col:18 invalid mont_data 'int *'
| |-EnumDecl 0x159aaf3bbc8 <line:237:5, line:241:5> line:237:5
| | |-EnumConstantDecl 0x159aaf3bca0 <line:238:9> col:9 PCT_none 'int'
| | |-EnumConstantDecl 0x159aaf3bcf8 <line:239:9> col:9 PCT_nistp224 'int'
| | |-EnumConstantDecl 0x159aaf3bd50 <col:23> col:23 PCT_nistp256 'int'
| | |-EnumConstantDecl 0x159aaf3bda8 <col:37> col:37 PCT_nistp521 'int'
| | |-EnumConstantDecl 0x159aaf3be00 <col:51> col:51 PCT_nistz256 'int'
| | `-EnumConstantDecl 0x159aaf3be58 <line:240:9> col:9 PCT_ec 'int'
| |-FieldDecl 0x159aaf3bf08 <line:237:5, line:241:7> col:7 pre_comp_type 'enum (anonymous enum at .//openssl//file_jk/before\crypto\ec/ec_lcl.h:237:5)':'enum ec_group_st::(anonymous at .//openssl//file_jk/before\crypto\ec/ec_lcl.h:237:5)'
| |-RecordDecl 0x159aaf3bf90 <line:242:5, line:248:5> line:242:5 union definition
| | |-FieldDecl 0x159aaf3c0d8 <line:243:9, col:28> col:28 nistp224 'NISTP224_PRE_COMP *'
| | |-FieldDecl 0x159aaf3c1b8 <line:244:9, col:28> col:28 nistp256 'NISTP256_PRE_COMP *'
| | |-FieldDecl 0x159aaf3c298 <line:245:9, col:28> col:28 nistp521 'NISTP521_PRE_COMP *'
| | |-FieldDecl 0x159aaf3c378 <line:246:9, col:28> col:28 nistz256 'NISTZ256_PRE_COMP *'
| | `-FieldDecl 0x159aaf3c458 <line:247:9, col:22> col:22 ec 'EC_PRE_COMP *'
| `-FieldDecl 0x159aaf3c508 <line:242:5, line:248:7> col:7 pre_comp 'union (anonymous union at .//openssl//file_jk/before\crypto\ec/ec_lcl.h:242:5)':'union ec_group_st::(anonymous at .//openssl//file_jk/before\crypto\ec/ec_lcl.h:242:5)'
|-RecordDecl 0x159aaf3c560 <line:256:1, line:269:1> line:256:8 invalid struct ec_key_st definition
| |-FieldDecl 0x159aaf3c638 <line:257:5, col:26> col:26 invalid meth 'const int *'
| |-FieldDecl 0x159aaf3c6a8 <line:258:5, col:13> col:13 invalid engine 'int *'
| |-FieldDecl 0x159aaf3c718 <line:259:5, col:9> col:9 version 'int'
| |-FieldDecl 0x159aaf3c788 <line:260:5, col:15> col:15 invalid group 'int *'
| |-FieldDecl 0x159aaf3c7f8 <line:261:5, col:15> col:15 invalid pub_key 'int *'
| |-FieldDecl 0x159aaf3c868 <line:262:5, col:13> col:13 invalid priv_key 'int *'
| |-FieldDecl 0x159aaf3c8d8 <line:263:5, col:18> col:18 enc_flag 'unsigned int'
| |-FieldDecl 0x159aaf3c948 <line:264:5, col:29> col:29 invalid conv_form 'int'
| |-FieldDecl 0x159aaf3c9b8 <line:265:5, col:9> col:9 references 'int'
| |-FieldDecl 0x159aaf3ca28 <line:266:5, col:9> col:9 flags 'int'
| |-FieldDecl 0x159aaf3ca98 <line:267:5, col:20> col:20 invalid ex_data 'int'
| `-FieldDecl 0x159aaf3cb08 <line:268:5, col:20> col:20 invalid lock 'int *'
|-RecordDecl 0x159aaf3cb60 <line:271:1, line:285:1> line:271:8 invalid struct ec_point_st definition
| |-FieldDecl 0x159aaf3cc38 <line:272:5, col:22> col:22 invalid meth 'const int *'
| |-FieldDecl 0x159aaf3cca8 <line:274:5, col:9> col:9 curve_name 'int'
| |-FieldDecl 0x159aaf3cd18 <line:279:5, col:13> col:13 invalid X 'int *'
| |-FieldDecl 0x159aaf3cd88 <line:280:5, col:13> col:13 invalid Y 'int *'
| |-FieldDecl 0x159aaf3cdf8 <line:281:5, col:13> col:13 invalid Z 'int *'
| `-FieldDecl 0x159aaf3ce68 <line:283:5, col:9> col:9 Z_is_one 'int'
|-FunctionDecl 0x159aaf3e050 <line:288:1, line:298:1> line:288:24 invalid ec_point_is_compat 'int (const int *, const int *)' static
| |-ParmVarDecl 0x159aaf3ced8 <col:43, col:59> col:59 invalid point 'const int *'
| |-ParmVarDecl 0x159aaf3dfb0 <line:289:43, col:59> col:59 invalid group 'const int *'
| `-CompoundStmt 0x159aaf3e208 <line:290:1, line:298:1>
|   |-IfStmt 0x159aaf3e1b8 <line:291:5, line:295:16>
|   | |-OpaqueValueExpr 0x159aaf3e1a0 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x159aaf3e190 <col:9, col:16>
|   |   `-IntegerLiteral 0x159aaf3e168 <col:16> 'int' 0
|   `-ReturnStmt 0x159aaf3e1f8 <line:297:5, col:12>
|     `-IntegerLiteral 0x159aaf3e1d0 <col:12> 'int' 1
|-FunctionDecl 0x159aaf3e328 <line:301:1, col:64> col:20 EC_nistp224_pre_comp_dup 'NISTP224_PRE_COMP *(NISTP224_PRE_COMP *)'
| `-ParmVarDecl 0x159aaf3e238 <col:45, col:63> col:64 'NISTP224_PRE_COMP *'
|-FunctionDecl 0x159aaf3e4e8 <line:302:1, col:64> col:20 EC_nistp256_pre_comp_dup 'NISTP256_PRE_COMP *(NISTP256_PRE_COMP *)'
| `-ParmVarDecl 0x159aaf3e3f8 <col:45, col:63> col:64 'NISTP256_PRE_COMP *'
|-FunctionDecl 0x159aaf3e6a8 <line:303:1, col:64> col:20 EC_nistp521_pre_comp_dup 'NISTP521_PRE_COMP *(NISTP521_PRE_COMP *)'
| `-ParmVarDecl 0x159aaf3e5b8 <col:45, col:63> col:64 'NISTP521_PRE_COMP *'
|-FunctionDecl 0x159aaf3e868 <line:304:1, col:64> col:20 EC_nistz256_pre_comp_dup 'NISTZ256_PRE_COMP *(NISTZ256_PRE_COMP *)'
| `-ParmVarDecl 0x159aaf3e778 <col:45, col:63> col:64 'NISTZ256_PRE_COMP *'
|-FunctionDecl 0x159aaf3e9c8 prev 0x159aaf3e4e8 <line:305:1, col:64> col:20 EC_nistp256_pre_comp_dup 'NISTP256_PRE_COMP *(NISTP256_PRE_COMP *)'
| `-ParmVarDecl 0x159aaf3e938 <col:45, col:63> col:64 'NISTP256_PRE_COMP *'
|-FunctionDecl 0x159aaf3eb78 <line:306:1, col:46> col:14 EC_ec_pre_comp_dup 'EC_PRE_COMP *(EC_PRE_COMP *)'
| `-ParmVarDecl 0x159aaf3ea80 <col:33, col:45> col:46 'EC_PRE_COMP *'
|-FunctionDecl 0x159aaf3ece0 <line:308:1, col:38> col:6 invalid EC_pre_comp_free 'void (int *)'
| `-ParmVarDecl 0x159aaf3ec50 <col:23, col:33> col:33 invalid group 'int *'
|-FunctionDecl 0x159aaf3ee88 <line:309:1, col:51> col:6 EC_nistp224_pre_comp_free 'void (NISTP224_PRE_COMP *)'
| `-ParmVarDecl 0x159aaf3ed98 <col:32, col:50> col:51 'NISTP224_PRE_COMP *'
|-FunctionDecl 0x159aaf3f0b8 <line:310:1, col:51> col:6 EC_nistp256_pre_comp_free 'void (NISTP256_PRE_COMP *)'
| `-ParmVarDecl 0x159aaf3efc0 <col:32, col:50> col:51 'NISTP256_PRE_COMP *'
|-FunctionDecl 0x159aaf3f278 <line:311:1, col:51> col:6 EC_nistp521_pre_comp_free 'void (NISTP521_PRE_COMP *)'
| `-ParmVarDecl 0x159aaf3f188 <col:32, col:50> col:51 'NISTP521_PRE_COMP *'
|-FunctionDecl 0x159aaf3f438 <line:312:1, col:51> col:6 EC_nistz256_pre_comp_free 'void (NISTZ256_PRE_COMP *)'
| `-ParmVarDecl 0x159aaf3f348 <col:32, col:50> col:51 'NISTZ256_PRE_COMP *'
|-FunctionDecl 0x159aaf3f5f8 <line:313:1, col:39> col:6 EC_ec_pre_comp_free 'void (EC_PRE_COMP *)'
| `-ParmVarDecl 0x159aaf3f508 <col:26, col:38> col:39 'EC_PRE_COMP *'
|-FunctionDecl 0x159aaf3fab0 <line:319:1, line:321:25> line:319:5 invalid ec_wNAF_mul 'int (const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-ParmVarDecl 0x159aaf3f6d0 <col:17, col:33> col:33 invalid group 'const int *'
| |-ParmVarDecl 0x159aaf3f750 <col:40, col:50> col:50 invalid r 'int *'
| |-ParmVarDecl 0x159aaf3f7d0 <col:53, col:67> col:67 invalid scalar 'const int *'
| |-ParmVarDecl 0x159aaf3f848 <line:320:17, col:24> col:24 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x159aaf3f8d8 <col:29, <invalid sloc>> col:45 invalid points 'const int **':'const int **'
| |-ParmVarDecl 0x159aaf3f968 <col:55, <invalid sloc>> col:69 invalid scalars 'const int **':'const int **'
| `-ParmVarDecl 0x159aaf3f9e8 <line:321:17, <invalid sloc>> col:25 invalid 'int *'
|-FunctionDecl 0x159aaf3fcc0 <line:322:1, col:54> col:5 invalid ec_wNAF_precompute_mult 'int (int *, int *)'
| |-ParmVarDecl 0x159aaf3fba0 <col:29, col:39> col:39 invalid group 'int *'
| `-ParmVarDecl 0x159aaf3fc20 <col:46, <invalid sloc>> col:54 invalid 'int *'
|-FunctionDecl 0x159aaf3fe20 <line:323:1, col:55> col:5 invalid ec_wNAF_have_precompute_mult 'int (const int *)'
| `-ParmVarDecl 0x159aaf3fd88 <col:34, col:50> col:50 invalid group 'const int *'
|-FunctionDecl 0x159aaf3ffd0 <line:326:1, col:40> col:5 invalid ec_GFp_simple_group_init 'int (int *)'
| `-ParmVarDecl 0x159aaf3fee0 <col:30, <invalid sloc>> col:40 invalid 'int *'
|-FunctionDecl 0x159aaf40120 <line:327:1, col:43> col:6 invalid ec_GFp_simple_group_finish 'void (int *)'
| `-ParmVarDecl 0x159aaf40090 <col:33, <invalid sloc>> col:43 invalid 'int *'
|-FunctionDecl 0x159aaf40270 <line:328:1, col:49> col:6 invalid ec_GFp_simple_group_clear_finish 'void (int *)'
| `-ParmVarDecl 0x159aaf401e0 <col:39, <invalid sloc>> col:49 invalid 'int *'
|-FunctionDecl 0x159aaf40450 <line:329:1, col:58> col:5 invalid ec_GFp_simple_group_copy 'int (int *, const int *)'
| |-ParmVarDecl 0x159aaf40330 <col:30, <invalid sloc>> col:40 invalid 'int *'
| `-ParmVarDecl 0x159aaf403b0 <col:42, <invalid sloc>> col:58 invalid 'const int *'
|-FunctionDecl 0x159aaf407d0 <line:330:1, line:331:77> line:330:5 invalid ec_GFp_simple_group_set_curve 'int (int *, const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x159aaf40518 <col:35, <invalid sloc>> col:45 invalid 'int *'
| |-ParmVarDecl 0x159aaf40598 <col:47, col:61> col:61 invalid p 'const int *'
| |-ParmVarDecl 0x159aaf40618 <line:331:35, col:49> col:49 invalid a 'const int *'
| |-ParmVarDecl 0x159aaf40698 <col:52, col:66> col:66 invalid b 'const int *'
| `-ParmVarDecl 0x159aaf40718 <col:69, <invalid sloc>> col:77 invalid 'int *'
|-FunctionDecl 0x159aaf40b68 <line:332:1, line:333:54> line:332:5 invalid ec_GFp_simple_group_get_curve 'int (const int *, int *, int *, int *, int *)'
| |-ParmVarDecl 0x159aaf408b0 <col:35, <invalid sloc>> col:51 invalid 'const int *'
| |-ParmVarDecl 0x159aaf40930 <col:53, col:61> col:61 invalid p 'int *'
| |-ParmVarDecl 0x159aaf409b0 <col:64, col:72> col:72 invalid a 'int *'
| |-ParmVarDecl 0x159aaf40a30 <line:333:35, col:43> col:43 invalid b 'int *'
| `-ParmVarDecl 0x159aaf40ab0 <col:46, <invalid sloc>> col:54 invalid 'int *'
|-FunctionDecl 0x159aaf40ce0 <line:334:1, col:52> col:5 invalid ec_GFp_simple_group_get_degree 'int (const int *)'
| `-ParmVarDecl 0x159aaf40c48 <col:36, <invalid sloc>> col:52 invalid 'const int *'
|-FunctionDecl 0x159aaf40ec0 <line:335:1, col:70> col:5 invalid ec_GFp_simple_group_check_discriminant 'int (const int *, int *)'
| |-ParmVarDecl 0x159aaf40da0 <col:44, <invalid sloc>> col:60 invalid 'const int *'
| `-ParmVarDecl 0x159aaf40e20 <col:62, <invalid sloc>> col:70 invalid 'int *'
|-FunctionDecl 0x159aaf3d038 <line:336:1, col:40> col:5 invalid ec_GFp_simple_point_init 'int (int *)'
| `-ParmVarDecl 0x159aaf3cfa0 <col:30, <invalid sloc>> col:40 invalid 'int *'
|-FunctionDecl 0x159aaf3d188 <line:337:1, col:43> col:6 invalid ec_GFp_simple_point_finish 'void (int *)'
| `-ParmVarDecl 0x159aaf3d0f8 <col:33, <invalid sloc>> col:43 invalid 'int *'
|-FunctionDecl 0x159aaf3d2d8 <line:338:1, col:49> col:6 invalid ec_GFp_simple_point_clear_finish 'void (int *)'
| `-ParmVarDecl 0x159aaf3d248 <col:39, <invalid sloc>> col:49 invalid 'int *'
|-FunctionDecl 0x159aaf3d4b8 <line:339:1, col:58> col:5 invalid ec_GFp_simple_point_copy 'int (int *, const int *)'
| |-ParmVarDecl 0x159aaf3d398 <col:30, <invalid sloc>> col:40 invalid 'int *'
| `-ParmVarDecl 0x159aaf3d418 <col:42, <invalid sloc>> col:58 invalid 'const int *'
|-FunctionDecl 0x159aaf3d6a0 <line:340:1, col:69> col:5 invalid ec_GFp_simple_point_set_to_infinity 'int (const int *, int *)'
| |-ParmVarDecl 0x159aaf3d580 <col:41, <invalid sloc>> col:57 invalid 'const int *'
| `-ParmVarDecl 0x159aaf3d600 <col:59, <invalid sloc>> col:69 invalid 'int *'
|-FunctionDecl 0x159aaf3daa8 <line:341:1, line:344:76> line:341:5 invalid ec_GFp_simple_set_Jprojective_coordinates_GFp 'int (const int *, int *, const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x159aaf3d768 <col:51, <invalid sloc>> col:67 invalid 'const int *'
| |-ParmVarDecl 0x159aaf3d7e8 <line:342:51, <invalid sloc>> col:61 invalid 'int *'
| |-ParmVarDecl 0x159aaf3d868 <col:63, col:77> col:77 invalid x 'const int *'
| |-ParmVarDecl 0x159aaf3d8e8 <line:343:51, col:65> col:65 invalid y 'const int *'
| |-ParmVarDecl 0x159aaf3d968 <line:344:51, col:65> col:65 invalid z 'const int *'
| `-ParmVarDecl 0x159aaf3d9e8 <col:68, <invalid sloc>> col:76 invalid 'int *'
|-FunctionDecl 0x159aaf3ded0 <line:345:1, line:348:59> line:345:5 invalid ec_GFp_simple_get_Jprojective_coordinates_GFp 'int (const int *, const int *, int *, int *, int *, int *)'
| |-ParmVarDecl 0x159aaf3db90 <col:51, <invalid sloc>> col:67 invalid 'const int *'
| |-ParmVarDecl 0x159aaf3dc10 <line:346:51, <invalid sloc>> col:67 invalid 'const int *'
| |-ParmVarDecl 0x159aaf3dc90 <col:69, col:77> col:77 invalid x 'int *'
| |-ParmVarDecl 0x159aaf3dd10 <line:347:51, col:59> col:59 invalid y 'int *'
| |-ParmVarDecl 0x159aaf3dd90 <col:62, col:70> col:70 invalid z 'int *'
| `-ParmVarDecl 0x159aaf3de10 <line:348:51, <invalid sloc>> col:59 invalid 'int *'
|-FunctionDecl 0x159aaf452f0 <line:349:1, line:351:73> line:349:5 invalid ec_GFp_simple_point_set_affine_coordinates 'int (const int *, int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x159aaf45038 <col:48, <invalid sloc>> col:64 invalid 'const int *'
| |-ParmVarDecl 0x159aaf450b8 <col:66, <invalid sloc>> col:76 invalid 'int *'
| |-ParmVarDecl 0x159aaf45138 <line:350:48, col:62> col:62 invalid x 'const int *'
| |-ParmVarDecl 0x159aaf451b8 <line:351:48, col:62> col:62 invalid y 'const int *'
| `-ParmVarDecl 0x159aaf45238 <col:65, <invalid sloc>> col:73 invalid 'int *'
|-FunctionDecl 0x159aaf45688 <line:352:1, line:354:67> line:352:5 invalid ec_GFp_simple_point_get_affine_coordinates 'int (const int *, const int *, int *, int *, int *)'
| |-ParmVarDecl 0x159aaf453d0 <col:48, <invalid sloc>> col:64 invalid 'const int *'
| |-ParmVarDecl 0x159aaf45450 <line:353:48, <invalid sloc>> col:64 invalid 'const int *'
| |-ParmVarDecl 0x159aaf454d0 <col:66, col:74> col:74 invalid x 'int *'
| |-ParmVarDecl 0x159aaf45550 <line:354:48, col:56> col:56 invalid y 'int *'
| `-ParmVarDecl 0x159aaf455d0 <col:59, <invalid sloc>> col:67 invalid 'int *'
|-FunctionDecl 0x159aaf45a20 <line:355:1, line:357:54> line:355:5 invalid ec_GFp_simple_set_compressed_coordinates 'int (const int *, int *, const int *, int, int *)'
| |-ParmVarDecl 0x159aaf45768 <col:46, <invalid sloc>> col:62 invalid 'const int *'
| |-ParmVarDecl 0x159aaf457e8 <col:64, <invalid sloc>> col:74 invalid 'int *'
| |-ParmVarDecl 0x159aaf45868 <line:356:46, col:60> col:60 invalid x 'const int *'
| |-ParmVarDecl 0x159aaf458e8 <col:63, col:67> col:67 y_bit 'int'
| `-ParmVarDecl 0x159aaf45968 <line:357:46, <invalid sloc>> col:54 invalid 'int *'
|-FunctionDecl 0x159aaf45e30 <line:358:1, line:360:72> line:358:8 invalid ec_GFp_simple_point2oct 'size_t (const int *, const int *, int, unsigned char *, size_t, int *)'
| |-ParmVarDecl 0x159aaf45b00 <col:32, <invalid sloc>> col:48 invalid 'const int *'
| |-ParmVarDecl 0x159aaf45b80 <col:50, <invalid sloc>> col:66 invalid 'const int *'
| |-ParmVarDecl 0x159aaf45c00 <line:359:32, col:56> col:56 invalid form 'int'
| |-ParmVarDecl 0x159aaf45c80 <line:360:32, col:47> col:47 buf 'unsigned char *'
| |-ParmVarDecl 0x159aaf45cf8 <col:52, col:59> col:59 len 'size_t':'unsigned long long'
| `-ParmVarDecl 0x159aaf45d78 <col:64, <invalid sloc>> col:72 invalid 'int *'
|-FunctionDecl 0x159aaf431b0 <line:361:1, line:362:75> line:361:5 invalid ec_GFp_simple_oct2point 'int (const int *, int *, const unsigned char *, size_t, int *)'
| |-ParmVarDecl 0x159aaf45f18 <col:29, <invalid sloc>> col:45 invalid 'const int *'
| |-ParmVarDecl 0x159aaf45f98 <col:47, <invalid sloc>> col:57 invalid 'int *'
| |-ParmVarDecl 0x159aaf43000 <line:362:29, col:50> col:50 buf 'const unsigned char *'
| |-ParmVarDecl 0x159aaf43078 <col:55, col:62> col:62 len 'size_t':'unsigned long long'
| `-ParmVarDecl 0x159aaf430f8 <col:67, <invalid sloc>> col:75 invalid 'int *'
|-FunctionDecl 0x159aaf43548 <line:363:1, line:364:50> line:363:5 invalid ec_GFp_simple_add 'int (const int *, int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x159aaf43290 <col:23, <invalid sloc>> col:39 invalid 'const int *'
| |-ParmVarDecl 0x159aaf43310 <col:41, col:51> col:51 invalid r 'int *'
| |-ParmVarDecl 0x159aaf43390 <col:54, col:70> col:70 invalid a 'const int *'
| |-ParmVarDecl 0x159aaf43410 <line:364:23, col:39> col:39 invalid b 'const int *'
| `-ParmVarDecl 0x159aaf43490 <col:42, <invalid sloc>> col:50 invalid 'int *'
|-FunctionDecl 0x159aaf43858 <line:365:1, line:366:31> line:365:5 invalid ec_GFp_simple_dbl 'int (const int *, int *, const int *, int *)'
| |-ParmVarDecl 0x159aaf43628 <col:23, <invalid sloc>> col:39 invalid 'const int *'
| |-ParmVarDecl 0x159aaf436a8 <col:41, col:51> col:51 invalid r 'int *'
| |-ParmVarDecl 0x159aaf43728 <col:54, col:70> col:70 invalid a 'const int *'
| `-ParmVarDecl 0x159aaf437a8 <line:366:23, <invalid sloc>> col:31 invalid 'int *'
|-FunctionDecl 0x159aaf43ad8 <line:367:1, col:64> col:5 invalid ec_GFp_simple_invert 'int (const int *, int *, int *)'
| |-ParmVarDecl 0x159aaf43930 <col:26, <invalid sloc>> col:42 invalid 'const int *'
| |-ParmVarDecl 0x159aaf439b0 <col:44, <invalid sloc>> col:54 invalid 'int *'
| `-ParmVarDecl 0x159aaf43a30 <col:56, <invalid sloc>> col:64 invalid 'int *'
|-FunctionDecl 0x159aaf43cc8 <line:368:1, col:68> col:5 invalid ec_GFp_simple_is_at_infinity 'int (const int *, const int *)'
| |-ParmVarDecl 0x159aaf43ba8 <col:34, <invalid sloc>> col:50 invalid 'const int *'
| `-ParmVarDecl 0x159aaf43c28 <col:52, <invalid sloc>> col:68 invalid 'const int *'
|-FunctionDecl 0x159aaf43f38 <line:369:1, col:75> col:5 invalid ec_GFp_simple_is_on_curve 'int (const int *, const int *, int *)'
| |-ParmVarDecl 0x159aaf43d90 <col:31, <invalid sloc>> col:47 invalid 'const int *'
| |-ParmVarDecl 0x159aaf43e10 <col:49, <invalid sloc>> col:65 invalid 'const int *'
| `-ParmVarDecl 0x159aaf43e90 <col:67, <invalid sloc>> col:75 invalid 'int *'
|-FunctionDecl 0x159aaf41228 <line:370:1, line:371:31> line:370:5 invalid ec_GFp_simple_cmp 'int (const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x159aaf40ff8 <col:23, <invalid sloc>> col:39 invalid 'const int *'
| |-ParmVarDecl 0x159aaf41078 <col:41, col:57> col:57 invalid a 'const int *'
| |-ParmVarDecl 0x159aaf410f8 <col:60, col:76> col:76 invalid b 'const int *'
| `-ParmVarDecl 0x159aaf41178 <line:371:23, <invalid sloc>> col:31 invalid 'int *'
|-FunctionDecl 0x159aaf414a8 <line:372:1, col:69> col:5 invalid ec_GFp_simple_make_affine 'int (const int *, int *, int *)'
| |-ParmVarDecl 0x159aaf41300 <col:31, <invalid sloc>> col:47 invalid 'const int *'
| |-ParmVarDecl 0x159aaf41380 <col:49, <invalid sloc>> col:59 invalid 'int *'
| `-ParmVarDecl 0x159aaf41400 <col:61, <invalid sloc>> col:69 invalid 'int *'
|-FunctionDecl 0x159aaf417b0 <line:373:1, line:374:60> line:373:5 invalid ec_GFp_simple_points_make_affine 'int (const int *, size_t, int **, int *)'
| |-ParmVarDecl 0x159aaf41578 <col:38, <invalid sloc>> col:54 invalid 'const int *'
| |-ParmVarDecl 0x159aaf415f0 <col:56, col:63> col:63 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x159aaf41680 <line:374:38, <invalid sloc>> col:48 invalid 'int **':'int **'
| `-ParmVarDecl 0x159aaf41700 <col:52, <invalid sloc>> col:60 invalid 'int *'
|-FunctionDecl 0x159aaf41b40 <line:375:1, line:376:54> line:375:5 invalid ec_GFp_simple_field_mul 'int (const int *, int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x159aaf41888 <col:29, <invalid sloc>> col:45 invalid 'const int *'
| |-ParmVarDecl 0x159aaf41908 <col:47, col:55> col:55 invalid r 'int *'
| |-ParmVarDecl 0x159aaf41988 <col:58, col:72> col:72 invalid a 'const int *'
| |-ParmVarDecl 0x159aaf41a08 <line:376:29, col:43> col:43 invalid b 'const int *'
| `-ParmVarDecl 0x159aaf41a88 <col:46, <invalid sloc>> col:54 invalid 'int *'
|-FunctionDecl 0x159aaf41e50 <line:377:1, line:378:37> line:377:5 invalid ec_GFp_simple_field_sqr 'int (const int *, int *, const int *, int *)'
| |-ParmVarDecl 0x159aaf41c20 <col:29, <invalid sloc>> col:45 invalid 'const int *'
| |-ParmVarDecl 0x159aaf41ca0 <col:47, col:55> col:55 invalid r 'int *'
| |-ParmVarDecl 0x159aaf41d20 <col:58, col:72> col:72 invalid a 'const int *'
| `-ParmVarDecl 0x159aaf41da0 <line:378:29, <invalid sloc>> col:37 invalid 'int *'
|-FunctionDecl 0x159aaf42118 <line:379:1, line:380:48> line:379:5 invalid ec_GFp_simple_blind_coordinates 'int (const int *, int *, int *)'
| |-ParmVarDecl 0x159aaf41f28 <col:37, col:53> col:53 invalid group 'const int *'
| |-ParmVarDecl 0x159aaf41ff0 <col:60, col:70> col:70 invalid p 'int *'
| `-ParmVarDecl 0x159aaf42070 <line:380:37, col:45> col:45 invalid ctx 'int *'
|-FunctionDecl 0x159aaf42280 <line:383:1, col:38> col:5 invalid ec_GFp_mont_group_init 'int (int *)'
| `-ParmVarDecl 0x159aaf421e8 <col:28, <invalid sloc>> col:38 invalid 'int *'
|-FunctionDecl 0x159aaf425f8 <line:384:1, line:385:58> line:384:5 invalid ec_GFp_mont_group_set_curve 'int (int *, const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x159aaf42340 <col:33, <invalid sloc>> col:43 invalid 'int *'
| |-ParmVarDecl 0x159aaf423c0 <col:45, col:59> col:59 invalid p 'const int *'
| |-ParmVarDecl 0x159aaf42440 <col:62, col:76> col:76 invalid a 'const int *'
| |-ParmVarDecl 0x159aaf424c0 <line:385:33, col:47> col:47 invalid b 'const int *'
| `-ParmVarDecl 0x159aaf42540 <col:50, <invalid sloc>> col:58 invalid 'int *'
|-FunctionDecl 0x159aaf42768 <line:386:1, col:41> col:6 invalid ec_GFp_mont_group_finish 'void (int *)'
| `-ParmVarDecl 0x159aaf426d8 <col:31, <invalid sloc>> col:41 invalid 'int *'
|-FunctionDecl 0x159aaf428b8 <line:387:1, col:47> col:6 invalid ec_GFp_mont_group_clear_finish 'void (int *)'
| `-ParmVarDecl 0x159aaf42828 <col:37, <invalid sloc>> col:47 invalid 'int *'
|-FunctionDecl 0x159aaf42a98 <line:388:1, col:56> col:5 invalid ec_GFp_mont_group_copy 'int (int *, const int *)'
| |-ParmVarDecl 0x159aaf42978 <col:28, <invalid sloc>> col:38 invalid 'int *'
| `-ParmVarDecl 0x159aaf429f8 <col:40, <invalid sloc>> col:56 invalid 'const int *'
|-FunctionDecl 0x159aaf42e18 <line:389:1, line:390:52> line:389:5 invalid ec_GFp_mont_field_mul 'int (const int *, int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x159aaf42b60 <col:27, <invalid sloc>> col:43 invalid 'const int *'
| |-ParmVarDecl 0x159aaf42be0 <col:45, col:53> col:53 invalid r 'int *'
| |-ParmVarDecl 0x159aaf42c60 <col:56, col:70> col:70 invalid a 'const int *'
| |-ParmVarDecl 0x159aaf42ce0 <line:390:27, col:41> col:41 invalid b 'const int *'
| `-ParmVarDecl 0x159aaf42d60 <col:44, <invalid sloc>> col:52 invalid 'int *'
|-FunctionDecl 0x159aaf46178 <line:391:1, line:392:35> line:391:5 invalid ec_GFp_mont_field_sqr 'int (const int *, int *, const int *, int *)'
| |-ParmVarDecl 0x159aaf42ef8 <col:27, <invalid sloc>> col:43 invalid 'const int *'
| |-ParmVarDecl 0x159aaf42f78 <col:45, col:53> col:53 invalid r 'int *'
| |-ParmVarDecl 0x159aaf46048 <col:56, col:70> col:70 invalid a 'const int *'
| `-ParmVarDecl 0x159aaf460c8 <line:392:27, <invalid sloc>> col:35 invalid 'int *'
|-FunctionDecl 0x159aaf46480 <line:393:1, line:394:38> line:393:5 invalid ec_GFp_mont_field_encode 'int (const int *, int *, const int *, int *)'
| |-ParmVarDecl 0x159aaf46250 <col:30, <invalid sloc>> col:46 invalid 'const int *'
| |-ParmVarDecl 0x159aaf462d0 <col:48, col:56> col:56 invalid r 'int *'
| |-ParmVarDecl 0x159aaf46350 <col:59, col:73> col:73 invalid a 'const int *'
| `-ParmVarDecl 0x159aaf463d0 <line:394:30, <invalid sloc>> col:38 invalid 'int *'
|-FunctionDecl 0x159aaf46788 <line:395:1, line:396:38> line:395:5 invalid ec_GFp_mont_field_decode 'int (const int *, int *, const int *, int *)'
| |-ParmVarDecl 0x159aaf46558 <col:30, <invalid sloc>> col:46 invalid 'const int *'
| |-ParmVarDecl 0x159aaf465d8 <col:48, col:56> col:56 invalid r 'int *'
| |-ParmVarDecl 0x159aaf46658 <col:59, col:73> col:73 invalid a 'const int *'
| `-ParmVarDecl 0x159aaf466d8 <line:396:30, <invalid sloc>> col:38 invalid 'int *'
|-FunctionDecl 0x159aaf46a08 <line:397:1, col:71> col:5 invalid ec_GFp_mont_field_set_to_one 'int (const int *, int *, int *)'
| |-ParmVarDecl 0x159aaf46860 <col:34, <invalid sloc>> col:50 invalid 'const int *'
| |-ParmVarDecl 0x159aaf468e0 <col:52, col:60> col:60 invalid r 'int *'
| `-ParmVarDecl 0x159aaf46960 <col:63, <invalid sloc>> col:71 invalid 'int *'
|-FunctionDecl 0x159aaf46bf8 <line:400:1, col:63> col:5 invalid ec_GFp_nist_group_copy 'int (int *, const int *)'
| |-ParmVarDecl 0x159aaf46ad8 <col:28, col:38> col:38 invalid dest 'int *'
| `-ParmVarDecl 0x159aaf46b58 <col:44, col:60> col:60 invalid src 'const int *'
|-FunctionDecl 0x159aaf46f78 <line:401:1, line:402:58> line:401:5 invalid ec_GFp_nist_group_set_curve 'int (int *, const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x159aaf46cc0 <col:33, <invalid sloc>> col:43 invalid 'int *'
| |-ParmVarDecl 0x159aaf46d40 <col:45, col:59> col:59 invalid p 'const int *'
| |-ParmVarDecl 0x159aaf46dc0 <col:62, col:76> col:76 invalid a 'const int *'
| |-ParmVarDecl 0x159aaf46e40 <line:402:33, col:47> col:47 invalid b 'const int *'
| `-ParmVarDecl 0x159aaf46ec0 <col:50, <invalid sloc>> col:58 invalid 'int *'
|-FunctionDecl 0x159aaf4a368 <line:403:1, line:404:52> line:403:5 invalid ec_GFp_nist_field_mul 'int (const int *, int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x159aaf4a0b0 <col:27, <invalid sloc>> col:43 invalid 'const int *'
| |-ParmVarDecl 0x159aaf4a130 <col:45, col:53> col:53 invalid r 'int *'
| |-ParmVarDecl 0x159aaf4a1b0 <col:56, col:70> col:70 invalid a 'const int *'
| |-ParmVarDecl 0x159aaf4a230 <line:404:27, col:41> col:41 invalid b 'const int *'
| `-ParmVarDecl 0x159aaf4a2b0 <col:44, <invalid sloc>> col:52 invalid 'int *'
|-FunctionDecl 0x159aaf4a678 <line:405:1, line:406:35> line:405:5 invalid ec_GFp_nist_field_sqr 'int (const int *, int *, const int *, int *)'
| |-ParmVarDecl 0x159aaf4a448 <col:27, <invalid sloc>> col:43 invalid 'const int *'
| |-ParmVarDecl 0x159aaf4a4c8 <col:45, col:53> col:53 invalid r 'int *'
| |-ParmVarDecl 0x159aaf4a548 <col:56, col:70> col:70 invalid a 'const int *'
| `-ParmVarDecl 0x159aaf4a5c8 <line:406:27, <invalid sloc>> col:35 invalid 'int *'
|-FunctionDecl 0x159aaf4a7e8 <line:409:1, col:41> col:5 invalid ec_GF2m_simple_group_init 'int (int *)'
| `-ParmVarDecl 0x159aaf4a750 <col:31, <invalid sloc>> col:41 invalid 'int *'
|-FunctionDecl 0x159aaf4a938 <line:410:1, col:44> col:6 invalid ec_GF2m_simple_group_finish 'void (int *)'
| `-ParmVarDecl 0x159aaf4a8a8 <col:34, <invalid sloc>> col:44 invalid 'int *'
|-FunctionDecl 0x159aaf4aa88 <line:411:1, col:50> col:6 invalid ec_GF2m_simple_group_clear_finish 'void (int *)'
| `-ParmVarDecl 0x159aaf4a9f8 <col:40, <invalid sloc>> col:50 invalid 'int *'
|-FunctionDecl 0x159aaf4ac68 <line:412:1, col:59> col:5 invalid ec_GF2m_simple_group_copy 'int (int *, const int *)'
| |-ParmVarDecl 0x159aaf4ab48 <col:31, <invalid sloc>> col:41 invalid 'int *'
| `-ParmVarDecl 0x159aaf4abc8 <col:43, <invalid sloc>> col:59 invalid 'const int *'
|-FunctionDecl 0x159aaf4b080 <line:413:1, line:415:44> line:413:5 invalid ec_GF2m_simple_group_set_curve 'int (int *, const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x159aaf4ad30 <col:36, <invalid sloc>> col:46 invalid 'int *'
| |-ParmVarDecl 0x159aaf4adb0 <col:48, col:62> col:62 invalid p 'const int *'
| |-ParmVarDecl 0x159aaf4ae30 <line:414:36, col:50> col:50 invalid a 'const int *'
| |-ParmVarDecl 0x159aaf4aeb0 <col:53, col:67> col:67 invalid b 'const int *'
| `-ParmVarDecl 0x159aaf4af30 <line:415:36, <invalid sloc>> col:44 invalid 'int *'
|-FunctionDecl 0x159aaf4b418 <line:416:1, line:417:55> line:416:5 invalid ec_GF2m_simple_group_get_curve 'int (const int *, int *, int *, int *, int *)'
| |-ParmVarDecl 0x159aaf4b160 <col:36, <invalid sloc>> col:52 invalid 'const int *'
| |-ParmVarDecl 0x159aaf4b1e0 <col:54, col:62> col:62 invalid p 'int *'
| |-ParmVarDecl 0x159aaf4b260 <col:65, col:73> col:73 invalid a 'int *'
| |-ParmVarDecl 0x159aaf4b2e0 <line:417:36, col:44> col:44 invalid b 'int *'
| `-ParmVarDecl 0x159aaf4b360 <col:47, <invalid sloc>> col:55 invalid 'int *'
|-FunctionDecl 0x159aaf4b590 <line:418:1, col:53> col:5 invalid ec_GF2m_simple_group_get_degree 'int (const int *)'
| `-ParmVarDecl 0x159aaf4b4f8 <col:37, <invalid sloc>> col:53 invalid 'const int *'
|-FunctionDecl 0x159aaf4b770 <line:419:1, col:71> col:5 invalid ec_GF2m_simple_group_check_discriminant 'int (const int *, int *)'
| |-ParmVarDecl 0x159aaf4b650 <col:45, <invalid sloc>> col:61 invalid 'const int *'
| `-ParmVarDecl 0x159aaf4b6d0 <col:63, <invalid sloc>> col:71 invalid 'int *'
|-FunctionDecl 0x159aaf4b8d0 <line:420:1, col:41> col:5 invalid ec_GF2m_simple_point_init 'int (int *)'
| `-ParmVarDecl 0x159aaf4b838 <col:31, <invalid sloc>> col:41 invalid 'int *'
|-FunctionDecl 0x159aaf4ba20 <line:421:1, col:44> col:6 invalid ec_GF2m_simple_point_finish 'void (int *)'
| `-ParmVarDecl 0x159aaf4b990 <col:34, <invalid sloc>> col:44 invalid 'int *'
|-FunctionDecl 0x159aaf4bb70 <line:422:1, col:50> col:6 invalid ec_GF2m_simple_point_clear_finish 'void (int *)'
| `-ParmVarDecl 0x159aaf4bae0 <col:40, <invalid sloc>> col:50 invalid 'int *'
|-FunctionDecl 0x159aaf4bd50 <line:423:1, col:59> col:5 invalid ec_GF2m_simple_point_copy 'int (int *, const int *)'
| |-ParmVarDecl 0x159aaf4bc30 <col:31, <invalid sloc>> col:41 invalid 'int *'
| `-ParmVarDecl 0x159aaf4bcb0 <col:43, <invalid sloc>> col:59 invalid 'const int *'
|-FunctionDecl 0x159aaf4bf38 <line:424:1, col:70> col:5 invalid ec_GF2m_simple_point_set_to_infinity 'int (const int *, int *)'
| |-ParmVarDecl 0x159aaf4be18 <col:42, <invalid sloc>> col:58 invalid 'const int *'
| `-ParmVarDecl 0x159aaf4be98 <col:60, <invalid sloc>> col:70 invalid 'int *'
|-FunctionDecl 0x159aaf44248 <line:425:1, line:427:74> line:425:5 invalid ec_GF2m_simple_point_set_affine_coordinates 'int (const int *, int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x159aaf4c000 <col:49, <invalid sloc>> col:65 invalid 'const int *'
| |-ParmVarDecl 0x159aaf44010 <col:67, <invalid sloc>> col:77 invalid 'int *'
| |-ParmVarDecl 0x159aaf44090 <line:426:49, col:63> col:63 invalid x 'const int *'
| |-ParmVarDecl 0x159aaf44110 <line:427:49, col:63> col:63 invalid y 'const int *'
| `-ParmVarDecl 0x159aaf44190 <col:66, <invalid sloc>> col:74 invalid 'int *'
|-FunctionDecl 0x159aaf445e0 <line:428:1, line:430:68> line:428:5 invalid ec_GF2m_simple_point_get_affine_coordinates 'int (const int *, const int *, int *, int *, int *)'
| |-ParmVarDecl 0x159aaf44328 <col:49, <invalid sloc>> col:65 invalid 'const int *'
| |-ParmVarDecl 0x159aaf443a8 <line:429:49, <invalid sloc>> col:65 invalid 'const int *'
| |-ParmVarDecl 0x159aaf44428 <col:67, col:75> col:75 invalid x 'int *'
| |-ParmVarDecl 0x159aaf444a8 <line:430:49, col:57> col:57 invalid y 'int *'
| `-ParmVarDecl 0x159aaf44528 <col:60, <invalid sloc>> col:68 invalid 'int *'
|-FunctionDecl 0x159aaf44978 <line:431:1, line:433:55> line:431:5 invalid ec_GF2m_simple_set_compressed_coordinates 'int (const int *, int *, const int *, int, int *)'
| |-ParmVarDecl 0x159aaf446c0 <col:47, <invalid sloc>> col:63 invalid 'const int *'
| |-ParmVarDecl 0x159aaf44740 <col:65, <invalid sloc>> col:75 invalid 'int *'
| |-ParmVarDecl 0x159aaf447c0 <line:432:47, col:61> col:61 invalid x 'const int *'
| |-ParmVarDecl 0x159aaf44840 <col:64, col:68> col:68 y_bit 'int'
| `-ParmVarDecl 0x159aaf448c0 <line:433:47, <invalid sloc>> col:55 invalid 'int *'
|-FunctionDecl 0x159aaf44d88 <line:434:1, line:436:73> line:434:8 invalid ec_GF2m_simple_point2oct 'size_t (const int *, const int *, int, unsigned char *, size_t, int *)'
| |-ParmVarDecl 0x159aaf44a58 <col:33, <invalid sloc>> col:49 invalid 'const int *'
| |-ParmVarDecl 0x159aaf44ad8 <col:51, <invalid sloc>> col:67 invalid 'const int *'
| |-ParmVarDecl 0x159aaf44b58 <line:435:33, col:57> col:57 invalid form 'int'
| |-ParmVarDecl 0x159aaf44bd8 <line:436:33, col:48> col:48 buf 'unsigned char *'
| |-ParmVarDecl 0x159aaf44c50 <col:53, col:60> col:60 len 'size_t':'unsigned long long'
| `-ParmVarDecl 0x159aaf44cd0 <col:65, <invalid sloc>> col:73 invalid 'int *'
|-FunctionDecl 0x159aaf4f1f8 <line:437:1, line:438:76> line:437:5 invalid ec_GF2m_simple_oct2point 'int (const int *, int *, const unsigned char *, size_t, int *)'
| |-ParmVarDecl 0x159aaf44e70 <col:30, <invalid sloc>> col:46 invalid 'const int *'
| |-ParmVarDecl 0x159aaf44ef0 <col:48, <invalid sloc>> col:58 invalid 'int *'
| |-ParmVarDecl 0x159aaf44f70 <line:438:30, col:51> col:51 buf 'const unsigned char *'
| |-ParmVarDecl 0x159aaf4f0c0 <col:56, col:63> col:63 len 'size_t':'unsigned long long'
| `-ParmVarDecl 0x159aaf4f140 <col:68, <invalid sloc>> col:76 invalid 'int *'
|-FunctionDecl 0x159aaf4f590 <line:439:1, line:440:51> line:439:5 invalid ec_GF2m_simple_add 'int (const int *, int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x159aaf4f2d8 <col:24, <invalid sloc>> col:40 invalid 'const int *'
| |-ParmVarDecl 0x159aaf4f358 <col:42, col:52> col:52 invalid r 'int *'
| |-ParmVarDecl 0x159aaf4f3d8 <col:55, col:71> col:71 invalid a 'const int *'
| |-ParmVarDecl 0x159aaf4f458 <line:440:24, col:40> col:40 invalid b 'const int *'
| `-ParmVarDecl 0x159aaf4f4d8 <col:43, <invalid sloc>> col:51 invalid 'int *'
|-FunctionDecl 0x159aaf4f8a0 <line:441:1, line:442:32> line:441:5 invalid ec_GF2m_simple_dbl 'int (const int *, int *, const int *, int *)'
| |-ParmVarDecl 0x159aaf4f670 <col:24, <invalid sloc>> col:40 invalid 'const int *'
| |-ParmVarDecl 0x159aaf4f6f0 <col:42, col:52> col:52 invalid r 'int *'
| |-ParmVarDecl 0x159aaf4f770 <col:55, col:71> col:71 invalid a 'const int *'
| `-ParmVarDecl 0x159aaf4f7f0 <line:442:24, <invalid sloc>> col:32 invalid 'int *'
|-FunctionDecl 0x159aaf4fb20 <line:443:1, col:65> col:5 invalid ec_GF2m_simple_invert 'int (const int *, int *, int *)'
| |-ParmVarDecl 0x159aaf4f978 <col:27, <invalid sloc>> col:43 invalid 'const int *'
| |-ParmVarDecl 0x159aaf4f9f8 <col:45, <invalid sloc>> col:55 invalid 'int *'
| `-ParmVarDecl 0x159aaf4fa78 <col:57, <invalid sloc>> col:65 invalid 'int *'
|-FunctionDecl 0x159aaf4fd10 <line:444:1, col:69> col:5 invalid ec_GF2m_simple_is_at_infinity 'int (const int *, const int *)'
| |-ParmVarDecl 0x159aaf4fbf0 <col:35, <invalid sloc>> col:51 invalid 'const int *'
| `-ParmVarDecl 0x159aaf4fc70 <col:53, <invalid sloc>> col:69 invalid 'const int *'
|-FunctionDecl 0x159aaf4ff80 <line:445:1, col:76> col:5 invalid ec_GF2m_simple_is_on_curve 'int (const int *, const int *, int *)'
| |-ParmVarDecl 0x159aaf4fdd8 <col:32, <invalid sloc>> col:48 invalid 'const int *'
| |-ParmVarDecl 0x159aaf4fe58 <col:50, <invalid sloc>> col:66 invalid 'const int *'
| `-ParmVarDecl 0x159aaf4fed8 <col:68, <invalid sloc>> col:76 invalid 'int *'
|-FunctionDecl 0x159aaf49228 <line:446:1, line:447:32> line:446:5 invalid ec_GF2m_simple_cmp 'int (const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x159aaf50050 <col:24, <invalid sloc>> col:40 invalid 'const int *'
| |-ParmVarDecl 0x159aaf49078 <col:42, col:58> col:58 invalid a 'const int *'
| |-ParmVarDecl 0x159aaf490f8 <col:61, col:77> col:77 invalid b 'const int *'
| `-ParmVarDecl 0x159aaf49178 <line:447:24, <invalid sloc>> col:32 invalid 'int *'
|-FunctionDecl 0x159aaf494a8 <line:448:1, col:70> col:5 invalid ec_GF2m_simple_make_affine 'int (const int *, int *, int *)'
| |-ParmVarDecl 0x159aaf49300 <col:32, <invalid sloc>> col:48 invalid 'const int *'
| |-ParmVarDecl 0x159aaf49380 <col:50, <invalid sloc>> col:60 invalid 'int *'
| `-ParmVarDecl 0x159aaf49400 <col:62, <invalid sloc>> col:70 invalid 'int *'
|-FunctionDecl 0x159aaf497b0 <line:449:1, line:450:61> line:449:5 invalid ec_GF2m_simple_points_make_affine 'int (const int *, size_t, int **, int *)'
| |-ParmVarDecl 0x159aaf49578 <col:39, <invalid sloc>> col:55 invalid 'const int *'
| |-ParmVarDecl 0x159aaf495f0 <col:57, col:64> col:64 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x159aaf49680 <line:450:39, <invalid sloc>> col:49 invalid 'int **':'int **'
| `-ParmVarDecl 0x159aaf49700 <col:53, <invalid sloc>> col:61 invalid 'int *'
|-FunctionDecl 0x159aaf49b40 <line:451:1, line:452:55> line:451:5 invalid ec_GF2m_simple_field_mul 'int (const int *, int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x159aaf49888 <col:30, <invalid sloc>> col:46 invalid 'const int *'
| |-ParmVarDecl 0x159aaf49908 <col:48, col:56> col:56 invalid r 'int *'
| |-ParmVarDecl 0x159aaf49988 <col:59, col:73> col:73 invalid a 'const int *'
| |-ParmVarDecl 0x159aaf49a08 <line:452:30, col:44> col:44 invalid b 'const int *'
| `-ParmVarDecl 0x159aaf49a88 <col:47, <invalid sloc>> col:55 invalid 'int *'
|-FunctionDecl 0x159aaf49e50 <line:453:1, line:454:38> line:453:5 invalid ec_GF2m_simple_field_sqr 'int (const int *, int *, const int *, int *)'
| |-ParmVarDecl 0x159aaf49c20 <col:30, <invalid sloc>> col:46 invalid 'const int *'
| |-ParmVarDecl 0x159aaf49ca0 <col:48, col:56> col:56 invalid r 'int *'
| |-ParmVarDecl 0x159aaf49d20 <col:59, col:73> col:73 invalid a 'const int *'
| `-ParmVarDecl 0x159aaf49da0 <line:454:30, <invalid sloc>> col:38 invalid 'int *'
|-FunctionDecl 0x159aaf4c248 <line:455:1, line:456:55> line:455:5 invalid ec_GF2m_simple_field_div 'int (const int *, int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x159aaf49f28 <col:30, <invalid sloc>> col:46 invalid 'const int *'
| |-ParmVarDecl 0x159aaf49fa8 <col:48, col:56> col:56 invalid r 'int *'
| |-ParmVarDecl 0x159aaf4c090 <col:59, col:73> col:73 invalid a 'const int *'
| |-ParmVarDecl 0x159aaf4c110 <line:456:30, col:44> col:44 invalid b 'const int *'
| `-ParmVarDecl 0x159aaf4c190 <col:47, <invalid sloc>> col:55 invalid 'int *'
|-FunctionDecl 0x159aaf4c708 <line:459:1, line:462:32> line:459:5 invalid ec_GF2m_simple_mul 'int (const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-ParmVarDecl 0x159aaf4c328 <col:24, col:40> col:40 invalid group 'const int *'
| |-ParmVarDecl 0x159aaf4c3a8 <col:47, col:57> col:57 invalid r 'int *'
| |-ParmVarDecl 0x159aaf4c428 <line:460:24, col:38> col:38 invalid scalar 'const int *'
| |-ParmVarDecl 0x159aaf4c4a0 <col:46, col:53> col:53 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x159aaf4c530 <line:461:24, <invalid sloc>> col:40 invalid points 'const int **':'const int **'
| |-ParmVarDecl 0x159aaf4c5c0 <col:50, <invalid sloc>> col:64 invalid scalars 'const int **':'const int **'
| `-ParmVarDecl 0x159aaf4c640 <line:462:24, <invalid sloc>> col:32 invalid 'int *'
|-FunctionDecl 0x159aaf4c918 <line:463:1, col:57> col:5 invalid ec_GF2m_precompute_mult 'int (int *, int *)'
| |-ParmVarDecl 0x159aaf4c7f8 <col:29, col:39> col:39 invalid group 'int *'
| `-ParmVarDecl 0x159aaf4c878 <col:46, col:54> col:54 invalid ctx 'int *'
|-FunctionDecl 0x159aaf4ca78 <line:464:1, col:55> col:5 invalid ec_GF2m_have_precompute_mult 'int (const int *)'
| `-ParmVarDecl 0x159aaf4c9e0 <col:34, col:50> col:50 invalid group 'const int *'
|-FunctionDecl 0x159aaf4cbd0 <line:468:1, col:47> col:5 invalid ec_GFp_nistp224_group_init 'int (int *)'
| `-ParmVarDecl 0x159aaf4cb38 <col:32, col:42> col:42 invalid group 'int *'
|-FunctionDecl 0x159aaf4cf48 <line:469:1, line:471:45> line:469:5 invalid ec_GFp_nistp224_group_set_curve 'int (int *, const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x159aaf4cc90 <col:37, col:47> col:47 invalid group 'int *'
| |-ParmVarDecl 0x159aaf4cd10 <col:54, col:68> col:68 invalid p 'const int *'
| |-ParmVarDecl 0x159aaf4cd90 <line:470:37, col:51> col:51 invalid a 'const int *'
| |-ParmVarDecl 0x159aaf4ce10 <col:54, col:68> col:68 invalid n 'const int *'
| `-ParmVarDecl 0x159aaf4ce90 <line:471:37, <invalid sloc>> col:45 invalid 'int *'
|-FunctionDecl 0x159aaf482a0 <line:472:1, line:475:61> line:472:5 invalid ec_GFp_nistp224_point_get_affine_coordinates 'int (const int *, const int *, int *, int *, int *)'
| |-ParmVarDecl 0x159aaf4d028 <col:50, col:66> col:66 invalid group 'const int *'
| |-ParmVarDecl 0x159aaf48068 <line:473:50, col:66> col:66 invalid point 'const int *'
| |-ParmVarDecl 0x159aaf480e8 <line:474:50, col:58> col:58 invalid x 'int *'
| |-ParmVarDecl 0x159aaf48168 <col:61, col:69> col:69 invalid y 'int *'
| `-ParmVarDecl 0x159aaf481e8 <line:475:50, col:58> col:58 invalid ctx 'int *'
|-FunctionDecl 0x159aaf48760 <line:476:1, line:479:33> line:476:5 invalid ec_GFp_nistp224_mul 'int (const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-ParmVarDecl 0x159aaf48380 <col:25, col:41> col:41 invalid group 'const int *'
| |-ParmVarDecl 0x159aaf48400 <col:48, col:58> col:58 invalid r 'int *'
| |-ParmVarDecl 0x159aaf48480 <line:477:25, col:39> col:39 invalid scalar 'const int *'
| |-ParmVarDecl 0x159aaf484f8 <col:47, col:54> col:54 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x159aaf48588 <line:478:25, <invalid sloc>> col:41 invalid points 'const int **':'const int **'
| |-ParmVarDecl 0x159aaf48618 <col:51, <invalid sloc>> col:65 invalid scalars 'const int **':'const int **'
| `-ParmVarDecl 0x159aaf48698 <line:479:25, <invalid sloc>> col:33 invalid 'int *'
|-FunctionDecl 0x159aaf48c30 <line:480:1, line:483:68> line:480:5 invalid ec_GFp_nistp224_points_mul 'int (const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-ParmVarDecl 0x159aaf48850 <col:32, col:48> col:48 invalid group 'const int *'
| |-ParmVarDecl 0x159aaf488d0 <col:55, col:65> col:65 invalid r 'int *'
| |-ParmVarDecl 0x159aaf48950 <line:481:32, col:46> col:46 invalid scalar 'const int *'
| |-ParmVarDecl 0x159aaf489c8 <col:54, col:61> col:61 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x159aaf48a58 <line:482:32, <invalid sloc>> col:48 invalid points 'const int **':'const int **'
| |-ParmVarDecl 0x159aaf48ae8 <line:483:32, <invalid sloc>> col:46 invalid scalars 'const int **':'const int **'
| `-ParmVarDecl 0x159aaf48b68 <col:57, col:65> col:65 invalid ctx 'int *'
|-FunctionDecl 0x159aaf48e40 <line:484:1, col:65> col:5 invalid ec_GFp_nistp224_precompute_mult 'int (int *, int *)'
| |-ParmVarDecl 0x159aaf48d20 <col:37, col:47> col:47 invalid group 'int *'
| `-ParmVarDecl 0x159aaf48da0 <col:54, col:62> col:62 invalid ctx 'int *'
|-FunctionDecl 0x159aaf48fa0 <line:485:1, col:63> col:5 invalid ec_GFp_nistp224_have_precompute_mult 'int (const int *)'
| `-ParmVarDecl 0x159aaf48f08 <col:42, col:58> col:58 invalid group 'const int *'
|-FunctionDecl 0x159aaf531b0 <line:488:1, col:47> col:5 invalid ec_GFp_nistp256_group_init 'int (int *)'
| `-ParmVarDecl 0x159aaf53118 <col:32, col:42> col:42 invalid group 'int *'
|-FunctionDecl 0x159aaf53528 <line:489:1, line:491:45> line:489:5 invalid ec_GFp_nistp256_group_set_curve 'int (int *, const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x159aaf53270 <col:37, col:47> col:47 invalid group 'int *'
| |-ParmVarDecl 0x159aaf532f0 <col:54, col:68> col:68 invalid p 'const int *'
| |-ParmVarDecl 0x159aaf53370 <line:490:37, col:51> col:51 invalid a 'const int *'
| |-ParmVarDecl 0x159aaf533f0 <col:54, col:68> col:68 invalid n 'const int *'
| `-ParmVarDecl 0x159aaf53470 <line:491:37, <invalid sloc>> col:45 invalid 'int *'
|-FunctionDecl 0x159aaf538c0 <line:492:1, line:495:61> line:492:5 invalid ec_GFp_nistp256_point_get_affine_coordinates 'int (const int *, const int *, int *, int *, int *)'
| |-ParmVarDecl 0x159aaf53608 <col:50, col:66> col:66 invalid group 'const int *'
| |-ParmVarDecl 0x159aaf53688 <line:493:50, col:66> col:66 invalid point 'const int *'
| |-ParmVarDecl 0x159aaf53708 <line:494:50, col:58> col:58 invalid x 'int *'
| |-ParmVarDecl 0x159aaf53788 <col:61, col:69> col:69 invalid y 'int *'
| `-ParmVarDecl 0x159aaf53808 <line:495:50, col:58> col:58 invalid ctx 'int *'
|-FunctionDecl 0x159aaf53d80 <line:496:1, line:499:33> line:496:5 invalid ec_GFp_nistp256_mul 'int (const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-ParmVarDecl 0x159aaf539a0 <col:25, col:41> col:41 invalid group 'const int *'
| |-ParmVarDecl 0x159aaf53a20 <col:48, col:58> col:58 invalid r 'int *'
| |-ParmVarDecl 0x159aaf53aa0 <line:497:25, col:39> col:39 invalid scalar 'const int *'
| |-ParmVarDecl 0x159aaf53b18 <col:47, col:54> col:54 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x159aaf53ba8 <line:498:25, <invalid sloc>> col:41 invalid points 'const int **':'const int **'
| |-ParmVarDecl 0x159aaf53c38 <col:51, <invalid sloc>> col:65 invalid scalars 'const int **':'const int **'
| `-ParmVarDecl 0x159aaf53cb8 <line:499:25, <invalid sloc>> col:33 invalid 'int *'
|-FunctionDecl 0x159aaf52260 <line:500:1, line:503:68> line:500:5 invalid ec_GFp_nistp256_points_mul 'int (const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-ParmVarDecl 0x159aaf53e70 <col:32, col:48> col:48 invalid group 'const int *'
| |-ParmVarDecl 0x159aaf53ef0 <col:55, col:65> col:65 invalid r 'int *'
| |-ParmVarDecl 0x159aaf53f70 <line:501:32, col:46> col:46 invalid scalar 'const int *'
| |-ParmVarDecl 0x159aaf53fe8 <col:54, col:61> col:61 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x159aaf54078 <line:502:32, <invalid sloc>> col:48 invalid points 'const int **':'const int **'
| |-ParmVarDecl 0x159aaf52118 <line:503:32, <invalid sloc>> col:46 invalid scalars 'const int **':'const int **'
| `-ParmVarDecl 0x159aaf52198 <col:57, col:65> col:65 invalid ctx 'int *'
|-FunctionDecl 0x159aaf52470 <line:504:1, col:65> col:5 invalid ec_GFp_nistp256_precompute_mult 'int (int *, int *)'
| |-ParmVarDecl 0x159aaf52350 <col:37, col:47> col:47 invalid group 'int *'
| `-ParmVarDecl 0x159aaf523d0 <col:54, col:62> col:62 invalid ctx 'int *'
|-FunctionDecl 0x159aaf525d0 <line:505:1, col:63> col:5 invalid ec_GFp_nistp256_have_precompute_mult 'int (const int *)'
| `-ParmVarDecl 0x159aaf52538 <col:42, col:58> col:58 invalid group 'const int *'
|-FunctionDecl 0x159aaf52728 <line:508:1, col:47> col:5 invalid ec_GFp_nistp521_group_init 'int (int *)'
| `-ParmVarDecl 0x159aaf52690 <col:32, col:42> col:42 invalid group 'int *'
|-FunctionDecl 0x159aaf52aa0 <line:509:1, line:511:45> line:509:5 invalid ec_GFp_nistp521_group_set_curve 'int (int *, const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x159aaf527e8 <col:37, col:47> col:47 invalid group 'int *'
| |-ParmVarDecl 0x159aaf52868 <col:54, col:68> col:68 invalid p 'const int *'
| |-ParmVarDecl 0x159aaf528e8 <line:510:37, col:51> col:51 invalid a 'const int *'
| |-ParmVarDecl 0x159aaf52968 <col:54, col:68> col:68 invalid n 'const int *'
| `-ParmVarDecl 0x159aaf529e8 <line:511:37, <invalid sloc>> col:45 invalid 'int *'
|-FunctionDecl 0x159aaf52e38 <line:512:1, line:515:61> line:512:5 invalid ec_GFp_nistp521_point_get_affine_coordinates 'int (const int *, const int *, int *, int *, int *)'
| |-ParmVarDecl 0x159aaf52b80 <col:50, col:66> col:66 invalid group 'const int *'
| |-ParmVarDecl 0x159aaf52c00 <line:513:50, col:66> col:66 invalid point 'const int *'
| |-ParmVarDecl 0x159aaf52c80 <line:514:50, col:58> col:58 invalid x 'int *'
| |-ParmVarDecl 0x159aaf52d00 <col:61, col:69> col:69 invalid y 'int *'
| `-ParmVarDecl 0x159aaf52d80 <line:515:50, col:58> col:58 invalid ctx 'int *'
|-FunctionDecl 0x159aaf50338 <line:516:1, line:519:33> line:516:5 invalid ec_GFp_nistp521_mul 'int (const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-ParmVarDecl 0x159aaf52f18 <col:25, col:41> col:41 invalid group 'const int *'
| |-ParmVarDecl 0x159aaf52f98 <col:48, col:58> col:58 invalid r 'int *'
| |-ParmVarDecl 0x159aaf53018 <line:517:25, col:39> col:39 invalid scalar 'const int *'
| |-ParmVarDecl 0x159aaf500d0 <col:47, col:54> col:54 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x159aaf50160 <line:518:25, <invalid sloc>> col:41 invalid points 'const int **':'const int **'
| |-ParmVarDecl 0x159aaf501f0 <col:51, <invalid sloc>> col:65 invalid scalars 'const int **':'const int **'
| `-ParmVarDecl 0x159aaf50270 <line:519:25, <invalid sloc>> col:33 invalid 'int *'
|-FunctionDecl 0x159aaf50808 <line:520:1, line:523:68> line:520:5 invalid ec_GFp_nistp521_points_mul 'int (const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-ParmVarDecl 0x159aaf50428 <col:32, col:48> col:48 invalid group 'const int *'
| |-ParmVarDecl 0x159aaf504a8 <col:55, col:65> col:65 invalid r 'int *'
| |-ParmVarDecl 0x159aaf50528 <line:521:32, col:46> col:46 invalid scalar 'const int *'
| |-ParmVarDecl 0x159aaf505a0 <col:54, col:61> col:61 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x159aaf50630 <line:522:32, <invalid sloc>> col:48 invalid points 'const int **':'const int **'
| |-ParmVarDecl 0x159aaf506c0 <line:523:32, <invalid sloc>> col:46 invalid scalars 'const int **':'const int **'
| `-ParmVarDecl 0x159aaf50740 <col:57, col:65> col:65 invalid ctx 'int *'
|-FunctionDecl 0x159aaf50a18 <line:524:1, col:65> col:5 invalid ec_GFp_nistp521_precompute_mult 'int (int *, int *)'
| |-ParmVarDecl 0x159aaf508f8 <col:37, col:47> col:47 invalid group 'int *'
| `-ParmVarDecl 0x159aaf50978 <col:54, col:62> col:62 invalid ctx 'int *'
|-FunctionDecl 0x159aaf50b78 <line:525:1, col:63> col:5 invalid ec_GFp_nistp521_have_precompute_mult 'int (const int *)'
| `-ParmVarDecl 0x159aaf50ae0 <col:42, col:58> col:58 invalid group 'const int *'
|-FunctionDecl 0x159aaf4df88 <line:528:1, line:552:75> line:528:6 ec_GFp_nistp_points_make_affine_internal 'void (size_t, void *, size_t, void *, void (*)(void *), int (*)(const void *), void (*)(void *, const void *), void (*)(void *, const void *), void (*)(void *, const void *, const void *), void (*)(void *, const void *), void (*)(void *, const void *))'
| |-ParmVarDecl 0x159aaf50c30 <col:47, col:54> col:54 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x159aaf50cb0 <col:59, col:65> col:65 point_array 'void *'
| |-ParmVarDecl 0x159aaf50d28 <line:529:47, col:54> col:54 felem_size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x159aaf50da8 <line:530:47, col:53> col:53 tmp_felems 'void *'
| |-ParmVarDecl 0x159aaf50f70 <line:531:47, col:75> col:54 felem_one 'void (*)(void *)'
| |-ParmVarDecl 0x159aaf4d138 <line:532:47, line:533:72> line:532:53 felem_is_zero 'int (*)(const void *)'
| |-ParmVarDecl 0x159aaf4d3d8 <line:534:47, line:536:72> line:534:54 felem_assign 'void (*)(void *, const void *)'
| |-ParmVarDecl 0x159aaf4d5b0 <line:537:47, line:539:72> line:537:54 felem_square 'void (*)(void *, const void *)'
| |-ParmVarDecl 0x159aaf4d8f0 <line:540:47, line:544:70> line:540:54 felem_mul 'void (*)(void *, const void *, const void *)'
| |-ParmVarDecl 0x159aaf4dac8 <line:545:47, line:547:69> line:545:54 felem_inv 'void (*)(void *, const void *)'
| `-ParmVarDecl 0x159aaf4dca0 <line:548:47, line:552:74> line:548:54 felem_contract 'void (*)(void *, const void *)'
|-FunctionDecl 0x159aaf55368 <line:553:1, line:554:76> line:553:6 ec_GFp_nistp_recode_scalar_bits 'void (unsigned char *, unsigned char *, unsigned char)'
| |-ParmVarDecl 0x159aaf55138 <col:38, col:53> col:53 sign 'unsigned char *'
| |-ParmVarDecl 0x159aaf551b8 <line:554:38, col:53> col:53 digit 'unsigned char *'
| `-ParmVarDecl 0x159aaf55238 <col:60, col:74> col:74 in 'unsigned char'
|-FunctionDecl 0x159aaf554e8 <line:556:1, col:39> col:5 invalid ec_precompute_mont_data 'int (int *)'
| `-ParmVarDecl 0x159aaf55450 <col:29, <invalid sloc>> col:39 invalid 'int *'
|-FunctionDecl 0x159aaf55640 <line:557:1, col:53> col:5 invalid ec_group_simple_order_bits 'int (const int *)'
| `-ParmVarDecl 0x159aaf555a8 <col:32, col:48> col:48 invalid group 'const int *'
|-FunctionDecl 0x159aaf55898 <line:567:1, line:568:61> line:567:8 invalid ec_key_simple_priv2oct 'size_t (const int *, unsigned char *, size_t)'
| |-ParmVarDecl 0x159aaf55700 <col:31, col:45> col:45 invalid eckey 'const int *'
| |-ParmVarDecl 0x159aaf55780 <line:568:31, col:46> col:46 buf 'unsigned char *'
| `-ParmVarDecl 0x159aaf557f8 <col:51, col:58> col:58 len 'size_t':'unsigned long long'
|-FunctionDecl 0x159aaf55b08 <line:569:1, col:79> col:5 invalid ec_key_simple_oct2priv 'int (int *, const unsigned char *, size_t)'
| |-ParmVarDecl 0x159aaf55968 <col:28, col:36> col:36 invalid eckey 'int *'
| |-ParmVarDecl 0x159aaf559e8 <col:43, col:64> col:64 buf 'const unsigned char *'
| `-ParmVarDecl 0x159aaf55a60 <col:69, col:76> col:76 len 'size_t':'unsigned long long'
|-FunctionDecl 0x159aaf55c70 <line:570:1, col:45> col:5 invalid ec_key_simple_generate_key 'int (int *)'
| `-ParmVarDecl 0x159aaf55bd8 <col:32, col:40> col:40 invalid eckey 'int *'
|-FunctionDecl 0x159aaf55dc8 <line:571:1, col:52> col:5 invalid ec_key_simple_generate_public_key 'int (int *)'
| `-ParmVarDecl 0x159aaf55d30 <col:39, col:47> col:47 invalid eckey 'int *'
|-FunctionDecl 0x159aaf55f20 <line:572:1, col:48> col:5 invalid ec_key_simple_check_key 'int (const int *)'
| `-ParmVarDecl 0x159aaf55e88 <col:29, col:43> col:43 invalid eckey 'const int *'
|-RecordDecl 0x159aaf55fc8 <line:576:1, line:601:1> line:576:8 invalid struct ec_key_method_st definition
| |-FieldDecl 0x159aaf56098 <line:577:5, col:17> col:17 name 'const char *'
| |-FieldDecl 0x159aaf4e0b0 <line:578:5, col:13> col:13 invalid flags 'int'
| |-FieldDecl 0x159aaf4e1c8 <line:579:5, col:28> col:11 init 'int (*)(int *)'
| |-FieldDecl 0x159aaf4e2d8 <line:580:5, col:31> col:12 finish 'void (*)(int *)'
| |-FieldDecl 0x159aaf4e478 <line:581:5, col:48> col:11 copy 'int (*)(int *, const int *)'
| |-FieldDecl 0x159aaf4e618 <line:582:5, col:54> col:11 set_group 'int (*)(int *, const int *)'
| |-FieldDecl 0x159aaf4e7b8 <line:583:5, col:59> col:11 set_private 'int (*)(int *, const int *)'
| |-FieldDecl 0x159aaf4e958 <line:584:5, col:59> col:11 set_public 'int (*)(int *, const int *)'
| |-FieldDecl 0x159aaf4ea70 <line:585:5, col:30> col:11 keygen 'int (*)(int *)'
| |-FieldDecl 0x159aaf4ed20 <line:586:5, line:587:67> line:586:11 compute_key 'int (*)(unsigned char **, size_t *, const int *, const int *)'
| |-FieldDecl 0x159aaf563a0 <line:588:5, line:590:47> line:588:11 sign 'int (*)(int, const unsigned char *, int, unsigned char *, unsigned int *, const int *, const int *, int *)'
| |-FieldDecl 0x159aaf56740 <line:591:5, line:592:34> line:591:11 sign_setup 'int (*)(int *, int *, int **, int **)'
| |-FieldDecl 0x159aaf56b58 <line:593:5, <invalid sloc>> col:18 invalid sign_sig 'int *(*)(const unsigned char *, int, const int *, const int *, int *)'
| |-FieldDecl 0x159aaf57000 <line:597:5, line:598:74> line:597:11 verify 'int (*)(int, const unsigned char *, int, const unsigned char *, int, int *)'
| `-FieldDecl 0x159aaf573e0 <line:599:5, line:600:58> line:599:11 verify_sig 'int (*)(const unsigned char *, int, const int *, int *)'
|-FunctionDecl 0x159aaf574e8 <line:605:1, col:34> col:5 invalid ossl_ec_key_gen 'int (int *)'
| `-ParmVarDecl 0x159aaf57450 <col:21, col:29> col:29 invalid eckey 'int *'
|-FunctionDecl 0x159aaf577d8 <line:606:1, line:607:70> line:606:5 invalid ossl_ecdh_compute_key 'int (unsigned char **, size_t *, const int *, const int *)'
| |-ParmVarDecl 0x159aaf575b0 <col:27, col:43> col:43 pout 'unsigned char **'
| |-ParmVarDecl 0x159aaf57628 <col:49, col:57> col:57 poutlen 'size_t *'
| |-ParmVarDecl 0x159aaf576a8 <line:607:27, col:43> col:43 invalid pub_key 'const int *'
| `-ParmVarDecl 0x159aaf57728 <col:52, col:66> col:66 invalid ecdh 'const int *'
|-FunctionDecl 0x159aaf57ae0 <line:608:1, line:609:72> line:608:5 invalid ecdh_simple_compute_key 'int (unsigned char **, size_t *, const int *, const int *)'
| |-ParmVarDecl 0x159aaf578b8 <col:29, col:45> col:45 pout 'unsigned char **'
| |-ParmVarDecl 0x159aaf57930 <col:51, col:59> col:59 poutlen 'size_t *'
| |-ParmVarDecl 0x159aaf579b0 <line:609:29, col:45> col:45 invalid pub_key 'const int *'
| `-ParmVarDecl 0x159aaf57a30 <col:54, col:68> col:68 invalid ecdh 'const int *'
|-RecordDecl 0x159aaf57ba0 <line:611:1, line:614:1> line:611:8 invalid struct ECDSA_SIG_st definition
| |-FieldDecl 0x159aaf57c78 <line:612:5, col:13> col:13 invalid r 'int *'
| `-FieldDecl 0x159aaf57ce8 <line:613:5, col:13> col:13 invalid s 'int *'
|-FunctionDecl 0x159aaf57f98 <line:616:1, line:617:38> line:616:5 invalid ossl_ecdsa_sign_setup 'int (int *, int *, int **, int **)'
| |-ParmVarDecl 0x159aaf57d58 <col:27, col:35> col:35 invalid eckey 'int *'
| |-ParmVarDecl 0x159aaf57dd8 <col:42, col:50> col:50 invalid ctx_in 'int *'
| |-ParmVarDecl 0x159aaf57e60 <col:58, col:67> col:67 invalid kinvp 'int **'
| `-ParmVarDecl 0x159aaf57ee8 <line:617:27, col:36> col:36 invalid rp 'int **'
|-FunctionDecl 0x159aaf58520 <line:618:1, line:620:71> line:618:5 invalid ossl_ecdsa_sign 'int (int, const unsigned char *, int, unsigned char *, unsigned int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x159aaf58070 <col:21, col:25> col:25 type 'int'
| |-ParmVarDecl 0x159aaf58150 <col:31, col:52> col:52 dgst 'const unsigned char *'
| |-ParmVarDecl 0x159aaf581d0 <col:58, col:62> col:62 dlen 'int'
| |-ParmVarDecl 0x159aaf58250 <line:619:21, col:36> col:36 sig 'unsigned char *'
| |-ParmVarDecl 0x159aaf582d0 <col:41, col:55> col:55 siglen 'unsigned int *'
| |-ParmVarDecl 0x159aaf58350 <line:620:21, col:35> col:35 invalid kinv 'const int *'
| |-ParmVarDecl 0x159aaf583d0 <col:41, col:55> col:55 invalid r 'const int *'
| `-ParmVarDecl 0x159aaf58450 <col:58, col:66> col:66 invalid eckey 'int *'
|-FunctionDecl 0x159aaf588d0 <line:621:1, line:623:45> line:621:12 invalid ossl_ecdsa_sign_sig 'int *(const unsigned char *, int, const int *, const int *, int *)'
| |-ParmVarDecl 0x159aaf58618 <col:32, col:53> col:53 dgst 'const unsigned char *'
| |-ParmVarDecl 0x159aaf58698 <col:59, col:63> col:63 dgst_len 'int'
| |-ParmVarDecl 0x159aaf58718 <line:622:32, col:46> col:46 invalid in_kinv 'const int *'
| |-ParmVarDecl 0x159aaf58798 <col:55, col:69> col:69 invalid in_r 'const int *'
| `-ParmVarDecl 0x159aaf58818 <line:623:32, col:40> col:40 invalid eckey 'int *'
|-FunctionDecl 0x159aaf58cf0 <line:624:1, line:625:78> line:624:5 invalid ossl_ecdsa_verify 'int (int, const unsigned char *, int, const unsigned char *, int, int *)'
| |-ParmVarDecl 0x159aaf589b0 <col:23, col:27> col:27 type 'int'
| |-ParmVarDecl 0x159aaf58a30 <col:33, col:54> col:54 dgst 'const unsigned char *'
| |-ParmVarDecl 0x159aaf58ab0 <col:60, col:64> col:64 dgst_len 'int'
| |-ParmVarDecl 0x159aaf58b30 <line:625:23, col:44> col:44 sigbuf 'const unsigned char *'
| |-ParmVarDecl 0x159aaf58bb0 <col:52, col:56> col:56 sig_len 'int'
| `-ParmVarDecl 0x159aaf58c30 <col:65, col:73> col:73 invalid eckey 'int *'
|-FunctionDecl 0x159aaf59008 <line:626:1, line:627:62> line:626:5 invalid ossl_ecdsa_verify_sig 'int (const unsigned char *, int, const int *, int *)'
| |-ParmVarDecl 0x159aaf58dd8 <col:27, col:48> col:48 dgst 'const unsigned char *'
| |-ParmVarDecl 0x159aaf58e58 <col:54, col:58> col:58 dgst_len 'int'
| |-ParmVarDecl 0x159aaf58ed8 <line:627:27, col:44> col:44 invalid sig 'const int *'
| `-ParmVarDecl 0x159aaf58f58 <col:49, col:57> col:57 invalid eckey 'int *'
|-FunctionDecl 0x159aaf59500 <line:629:1, line:630:47> line:629:5 invalid X25519 'int (int *, const int *, const int *)'
| |-ParmVarDecl 0x159aaf591c0 <col:12, <invalid sloc>> col:20 invalid out_shared_key 'int *':'int *'
| |-ParmVarDecl 0x159aaf59300 <col:40, <invalid sloc>> col:54 invalid private_key 'const int *':'const int *'
| `-ParmVarDecl 0x159aaf593d0 <line:630:12, <invalid sloc>> col:26 invalid peer_public_value 'const int *':'const int *'
|-FunctionDecl 0x159aaf59808 <line:631:1, line:632:62> line:631:6 invalid X25519_public_from_private 'void (int *, const int *)'
| |-ParmVarDecl 0x159aaf59620 <col:33, <invalid sloc>> col:41 invalid out_public_value 'int *':'int *'
| `-ParmVarDecl 0x159aaf596f0 <line:632:33, <invalid sloc>> col:47 invalid private_key 'const int *':'const int *'
|-FunctionDecl 0x159aaf59a78 <line:634:1, col:79> col:5 invalid ec_point_blind_coordinates 'int (const int *, int *, int *)'
| |-ParmVarDecl 0x159aaf598d0 <col:32, col:48> col:48 invalid group 'const int *'
| |-ParmVarDecl 0x159aaf59950 <col:55, col:65> col:65 invalid p 'int *'
| `-ParmVarDecl 0x159aaf599d0 <col:68, col:76> col:76 invalid ctx 'int *'
|-FunctionDecl 0x159aaf5bb68 prev 0x159aaf4df88 <.//openssl//file_jk/before\crypto\ec\ecp_nistputil.c:49:1, line:134:1> line:49:6 ec_GFp_nistp_points_make_affine_internal 'void (size_t, void *, size_t, void *, void (*)(void *), int (*)(const void *), void (*)(void *, const void *), void (*)(void *, const void *), void (*)(void *, const void *, const void *), void (*)(void *, const void *), void (*)(void *, const void *))'
| |-ParmVarDecl 0x159aaf59b40 <col:47, col:54> col:54 used num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x159aaf59bc0 <col:59, col:65> col:65 used point_array 'void *'
| |-ParmVarDecl 0x159aaf59c38 <line:50:47, col:54> col:54 used felem_size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x159aaf59cb8 <line:51:47, col:53> col:53 used tmp_felems 'void *'
| |-ParmVarDecl 0x159aaf59df0 <line:52:47, col:75> col:54 used felem_one 'void (*)(void *)'
| |-ParmVarDecl 0x159aaf59f30 <line:53:47, line:54:72> line:53:53 used felem_is_zero 'int (*)(const void *)'
| |-ParmVarDecl 0x159aaf5b180 <line:55:47, line:57:72> line:55:54 used felem_assign 'void (*)(void *, const void *)'
| |-ParmVarDecl 0x159aaf5b358 <line:58:47, line:60:72> line:58:54 used felem_square 'void (*)(void *, const void *)'
| |-ParmVarDecl 0x159aaf5b5d0 <line:61:47, line:65:70> line:61:54 used felem_mul 'void (*)(void *, const void *, const void *)'
| |-ParmVarDecl 0x159aaf5b7a8 <line:66:47, line:68:69> line:66:54 used felem_inv 'void (*)(void *, const void *)'
| |-ParmVarDecl 0x159aaf5b980 <line:69:47, line:73:74> line:69:54 used felem_contract 'void (*)(void *, const void *)'
| `-CompoundStmt 0x159aaf64090 <line:74:1, line:134:1>
|   |-DeclStmt 0x159aaf5bd08 <line:75:5, col:14>
|   | `-VarDecl 0x159aaf5bc78 <col:5, col:13> col:9 used i 'int' cinit
|   |   `-IntegerLiteral 0x159aaf5bce0 <col:13> 'int' 0
|   |-IfStmt 0x159aaf5c6d8 <line:82:5, line:85:31> has_else
|   | |-UnaryOperator 0x159aaf5bff0 <line:82:9, col:28> 'int' prefix '!' cannot overflow
|   | | `-CallExpr 0x159aaf5bfb0 <col:10, col:28> 'int'
|   | |   |-ImplicitCastExpr 0x159aaf5bf98 <col:10> 'int (*)(const void *)' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x159aaf5bd20 <col:10> 'int (*)(const void *)' lvalue ParmVar 0x159aaf59f30 'felem_is_zero' 'int (*)(const void *)'
|   | |   `-ImplicitCastExpr 0x159aaf5bfd8 <line:80:15, col:64> 'const void *' <BitCast>
|   | |     `-ParenExpr 0x159aaf5bf78 <col:15, col:64> 'char *'
|   | |       `-UnaryOperator 0x159aaf5bf60 <col:16, col:63> 'char *' prefix '&' cannot overflow
|   | |         `-ArraySubscriptExpr 0x159aaf5bf40 <col:17, col:63> 'char' lvalue
|   | |           |-ParenExpr 0x159aaf5bdb8 <col:17, col:37> 'char *'
|   | |           | `-CStyleCastExpr 0x159aaf5bd90 <col:18, col:26> 'char *' <BitCast>
|   | |           |   `-ImplicitCastExpr 0x159aaf5bd78 <col:26> 'void *' <LValueToRValue> part_of_explicit_cast
|   | |           |     `-DeclRefExpr 0x159aaf5bd40 <col:26> 'void *' lvalue ParmVar 0x159aaf59bc0 'point_array' 'void *'
|   | |           `-BinaryOperator 0x159aaf5bf20 <col:39, col:53> 'unsigned long long' '*'
|   | |             |-ImplicitCastExpr 0x159aaf5bf08 <col:39, col:49> 'unsigned long long' <IntegralCast>
|   | |             | `-ParenExpr 0x159aaf5beb0 <col:39, col:49> 'int'
|   | |             |   `-BinaryOperator 0x159aaf5be90 <col:40, col:48> 'int' '+'
|   | |             |     |-BinaryOperator 0x159aaf5be48 <col:40, col:44> 'int' '*'
|   | |             |     | |-IntegerLiteral 0x159aaf5bdd8 <col:40> 'int' 3
|   | |             |     | `-ParenExpr 0x159aaf5be28 <col:42, col:44> 'int'
|   | |             |     |   `-IntegerLiteral 0x159aaf5be00 <line:82:26> 'int' 0
|   | |             |     `-IntegerLiteral 0x159aaf5be68 <line:80:48> 'int' 2
|   | |             `-ImplicitCastExpr 0x159aaf5bef0 <col:53> 'size_t':'unsigned long long' <LValueToRValue>
|   | |               `-DeclRefExpr 0x159aaf5bed0 <col:53> 'size_t':'unsigned long long' lvalue ParmVar 0x159aaf59c38 'felem_size' 'size_t':'unsigned long long'
|   | |-CallExpr 0x159aaf5c458 <line:83:9, col:40> 'void'
|   | | |-ImplicitCastExpr 0x159aaf5c440 <col:9> 'void (*)(void *, const void *)' <LValueToRValue>
|   | | | `-DeclRefExpr 0x159aaf5c008 <col:9> 'void (*)(void *, const void *)' lvalue ParmVar 0x159aaf5b180 'felem_assign' 'void (*)(void *, const void *)'
|   | | |-ImplicitCastExpr 0x159aaf5c488 <line:77:23, col:63> 'void *' <BitCast>
|   | | | `-ParenExpr 0x159aaf5c1c8 <col:23, col:63> 'char *'
|   | | |   `-UnaryOperator 0x159aaf5c1b0 <col:24, col:62> 'char *' prefix '&' cannot overflow
|   | | |     `-ArraySubscriptExpr 0x159aaf5c190 <col:25, col:62> 'char' lvalue
|   | | |       |-ParenExpr 0x159aaf5c0a0 <col:25, col:44> 'char *'
|   | | |       | `-CStyleCastExpr 0x159aaf5c078 <col:26, col:34> 'char *' <BitCast>
|   | | |       |   `-ImplicitCastExpr 0x159aaf5c060 <col:34> 'void *' <LValueToRValue> part_of_explicit_cast
|   | | |       |     `-DeclRefExpr 0x159aaf5c028 <col:34> 'void *' lvalue ParmVar 0x159aaf59cb8 'tmp_felems' 'void *'
|   | | |       `-BinaryOperator 0x159aaf5c158 <col:46, col:52> 'unsigned long long' '*'
|   | | |         |-ImplicitCastExpr 0x159aaf5c140 <col:46, col:48> 'unsigned long long' <IntegralCast>
|   | | |         | `-ParenExpr 0x159aaf5c0e8 <col:46, col:48> 'int'
|   | | |         |   `-IntegerLiteral 0x159aaf5c0c0 <line:83:32> 'int' 0
|   | | |         `-ImplicitCastExpr 0x159aaf5c128 <line:77:52> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |           `-DeclRefExpr 0x159aaf5c108 <col:52> 'size_t':'unsigned long long' lvalue ParmVar 0x159aaf59c38 'felem_size' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x159aaf5c4a0 <line:80:15, col:64> 'const void *' <BitCast>
|   | |   `-ParenExpr 0x159aaf5c420 <col:15, col:64> 'char *'
|   | |     `-UnaryOperator 0x159aaf5c408 <col:16, col:63> 'char *' prefix '&' cannot overflow
|   | |       `-ArraySubscriptExpr 0x159aaf5c3e8 <col:17, col:63> 'char' lvalue
|   | |         |-ParenExpr 0x159aaf5c260 <col:17, col:37> 'char *'
|   | |         | `-CStyleCastExpr 0x159aaf5c238 <col:18, col:26> 'char *' <BitCast>
|   | |         |   `-ImplicitCastExpr 0x159aaf5c220 <col:26> 'void *' <LValueToRValue> part_of_explicit_cast
|   | |         |     `-DeclRefExpr 0x159aaf5c1e8 <col:26> 'void *' lvalue ParmVar 0x159aaf59bc0 'point_array' 'void *'
|   | |         `-BinaryOperator 0x159aaf5c3c8 <col:39, col:53> 'unsigned long long' '*'
|   | |           |-ImplicitCastExpr 0x159aaf5c3b0 <col:39, col:49> 'unsigned long long' <IntegralCast>
|   | |           | `-ParenExpr 0x159aaf5c358 <col:39, col:49> 'int'
|   | |           |   `-BinaryOperator 0x159aaf5c338 <col:40, col:48> 'int' '+'
|   | |           |     |-BinaryOperator 0x159aaf5c2f0 <col:40, col:44> 'int' '*'
|   | |           |     | |-IntegerLiteral 0x159aaf5c280 <col:40> 'int' 3
|   | |           |     | `-ParenExpr 0x159aaf5c2d0 <col:42, col:44> 'int'
|   | |           |     |   `-IntegerLiteral 0x159aaf5c2a8 <line:83:38> 'int' 0
|   | |           |     `-IntegerLiteral 0x159aaf5c310 <line:80:48> 'int' 2
|   | |           `-ImplicitCastExpr 0x159aaf5c398 <col:53> 'size_t':'unsigned long long' <LValueToRValue>
|   | |             `-DeclRefExpr 0x159aaf5c378 <col:53> 'size_t':'unsigned long long' lvalue ParmVar 0x159aaf59c38 'felem_size' 'size_t':'unsigned long long'
|   | `-CallExpr 0x159aaf5c698 <line:85:9, col:31> 'void'
|   |   |-ImplicitCastExpr 0x159aaf5c680 <col:9> 'void (*)(void *)' <LValueToRValue>
|   |   | `-DeclRefExpr 0x159aaf5c4b8 <col:9> 'void (*)(void *)' lvalue ParmVar 0x159aaf59df0 'felem_one' 'void (*)(void *)'
|   |   `-ImplicitCastExpr 0x159aaf5c6c0 <line:77:23, col:63> 'void *' <BitCast>
|   |     `-ParenExpr 0x159aaf5c660 <col:23, col:63> 'char *'
|   |       `-UnaryOperator 0x159aaf5c648 <col:24, col:62> 'char *' prefix '&' cannot overflow
|   |         `-ArraySubscriptExpr 0x159aaf5c628 <col:25, col:62> 'char' lvalue
|   |           |-ParenExpr 0x159aaf5c550 <col:25, col:44> 'char *'
|   |           | `-CStyleCastExpr 0x159aaf5c528 <col:26, col:34> 'char *' <BitCast>
|   |           |   `-ImplicitCastExpr 0x159aaf5c510 <col:34> 'void *' <LValueToRValue> part_of_explicit_cast
|   |           |     `-DeclRefExpr 0x159aaf5c4d8 <col:34> 'void *' lvalue ParmVar 0x159aaf59cb8 'tmp_felems' 'void *'
|   |           `-BinaryOperator 0x159aaf5c608 <col:46, col:52> 'unsigned long long' '*'
|   |             |-ImplicitCastExpr 0x159aaf5c5f0 <col:46, col:48> 'unsigned long long' <IntegralCast>
|   |             | `-ParenExpr 0x159aaf5c598 <col:46, col:48> 'int'
|   |             |   `-IntegerLiteral 0x159aaf5c570 <line:85:29> 'int' 0
|   |             `-ImplicitCastExpr 0x159aaf5c5d8 <line:77:52> 'size_t':'unsigned long long' <LValueToRValue>
|   |               `-DeclRefExpr 0x159aaf5c5b8 <col:52> 'size_t':'unsigned long long' lvalue ParmVar 0x159aaf59c38 'felem_size' 'size_t':'unsigned long long'
|   |-ForStmt 0x159aaf61740 <line:86:5, line:91:5>
|   | |-BinaryOperator 0x159aaf5c760 <line:86:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x159aaf5c700 <col:10> 'int' lvalue Var 0x159aaf5bc78 'i' 'int'
|   | | `-IntegerLiteral 0x159aaf5c738 <col:14> 'int' 1
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x159aaf5c830 <col:17, col:26> 'int' '<'
|   | | |-ImplicitCastExpr 0x159aaf5c818 <col:17> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x159aaf5c780 <col:17> 'int' lvalue Var 0x159aaf5bc78 'i' 'int'
|   | | `-CStyleCastExpr 0x159aaf5c7f0 <col:21, col:26> 'int' <IntegralCast>
|   | |   `-ImplicitCastExpr 0x159aaf5c7d8 <col:26> 'size_t':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   | |     `-DeclRefExpr 0x159aaf5c7a0 <col:26> 'size_t':'unsigned long long' lvalue ParmVar 0x159aaf59b40 'num' 'size_t':'unsigned long long'
|   | |-UnaryOperator 0x159aaf5c870 <col:31, col:32> 'int' postfix '++'
|   | | `-DeclRefExpr 0x159aaf5c850 <col:31> 'int' lvalue Var 0x159aaf5bc78 'i' 'int'
|   | `-CompoundStmt 0x159aaf61728 <col:36, line:91:5>
|   |   `-IfStmt 0x159aaf61700 <line:87:9, line:90:56> has_else
|   |     |-UnaryOperator 0x159aaf5cb68 <line:87:13, col:32> 'int' prefix '!' cannot overflow
|   |     | `-CallExpr 0x159aaf5cb28 <col:14, col:32> 'int'
|   |     |   |-ImplicitCastExpr 0x159aaf5cb10 <col:14> 'int (*)(const void *)' <LValueToRValue>
|   |     |   | `-DeclRefExpr 0x159aaf5c888 <col:14> 'int (*)(const void *)' lvalue ParmVar 0x159aaf59f30 'felem_is_zero' 'int (*)(const void *)'
|   |     |   `-ImplicitCastExpr 0x159aaf5cb50 <line:80:15, col:64> 'const void *' <BitCast>
|   |     |     `-ParenExpr 0x159aaf5caf0 <col:15, col:64> 'char *'
|   |     |       `-UnaryOperator 0x159aaf5cad8 <col:16, col:63> 'char *' prefix '&' cannot overflow
|   |     |         `-ArraySubscriptExpr 0x159aaf5cab8 <col:17, col:63> 'char' lvalue
|   |     |           |-ParenExpr 0x159aaf5c920 <col:17, col:37> 'char *'
|   |     |           | `-CStyleCastExpr 0x159aaf5c8f8 <col:18, col:26> 'char *' <BitCast>
|   |     |           |   `-ImplicitCastExpr 0x159aaf5c8e0 <col:26> 'void *' <LValueToRValue> part_of_explicit_cast
|   |     |           |     `-DeclRefExpr 0x159aaf5c8a8 <col:26> 'void *' lvalue ParmVar 0x159aaf59bc0 'point_array' 'void *'
|   |     |           `-BinaryOperator 0x159aaf5ca98 <col:39, col:53> 'unsigned long long' '*'
|   |     |             |-ImplicitCastExpr 0x159aaf5ca80 <col:39, col:49> 'unsigned long long' <IntegralCast>
|   |     |             | `-ParenExpr 0x159aaf5ca28 <col:39, col:49> 'int'
|   |     |             |   `-BinaryOperator 0x159aaf5ca08 <col:40, col:48> 'int' '+'
|   |     |             |     |-BinaryOperator 0x159aaf5c9c0 <col:40, col:44> 'int' '*'
|   |     |             |     | |-IntegerLiteral 0x159aaf5c940 <col:40> 'int' 3
|   |     |             |     | `-ImplicitCastExpr 0x159aaf5c9a8 <col:42, col:44> 'int' <LValueToRValue>
|   |     |             |     |   `-ParenExpr 0x159aaf5c988 <col:42, col:44> 'int' lvalue
|   |     |             |     |     `-DeclRefExpr 0x159aaf5c968 <line:87:30> 'int' lvalue Var 0x159aaf5bc78 'i' 'int'
|   |     |             |     `-IntegerLiteral 0x159aaf5c9e0 <line:80:48> 'int' 2
|   |     |             `-ImplicitCastExpr 0x159aaf5ca68 <col:53> 'size_t':'unsigned long long' <LValueToRValue>
|   |     |               `-DeclRefExpr 0x159aaf5ca48 <col:53> 'size_t':'unsigned long long' lvalue ParmVar 0x159aaf59c38 'felem_size' 'size_t':'unsigned long long'
|   |     |-CallExpr 0x159aaf61230 <line:88:13, col:59> 'void'
|   |     | |-ImplicitCastExpr 0x159aaf61218 <col:13> 'void (*)(void *, const void *, const void *)' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x159aaf5cb80 <col:13> 'void (*)(void *, const void *, const void *)' lvalue ParmVar 0x159aaf5b5d0 'felem_mul' 'void (*)(void *, const void *, const void *)'
|   |     | |-ImplicitCastExpr 0x159aaf61268 <line:77:23, col:63> 'void *' <BitCast>
|   |     | | `-ParenExpr 0x159aaf5cd38 <col:23, col:63> 'char *'
|   |     | |   `-UnaryOperator 0x159aaf5cd20 <col:24, col:62> 'char *' prefix '&' cannot overflow
|   |     | |     `-ArraySubscriptExpr 0x159aaf5cd00 <col:25, col:62> 'char' lvalue
|   |     | |       |-ParenExpr 0x159aaf5cc18 <col:25, col:44> 'char *'
|   |     | |       | `-CStyleCastExpr 0x159aaf5cbf0 <col:26, col:34> 'char *' <BitCast>
|   |     | |       |   `-ImplicitCastExpr 0x159aaf5cbd8 <col:34> 'void *' <LValueToRValue> part_of_explicit_cast
|   |     | |       |     `-DeclRefExpr 0x159aaf5cba0 <col:34> 'void *' lvalue ParmVar 0x159aaf59cb8 'tmp_felems' 'void *'
|   |     | |       `-BinaryOperator 0x159aaf5cce0 <col:46, col:52> 'unsigned long long' '*'
|   |     | |         |-ImplicitCastExpr 0x159aaf5ccc8 <col:46, col:48> 'unsigned long long' <IntegralCast>
|   |     | |         | `-ImplicitCastExpr 0x159aaf5cc98 <col:46, col:48> 'int' <LValueToRValue>
|   |     | |         |   `-ParenExpr 0x159aaf5cc58 <col:46, col:48> 'int' lvalue
|   |     | |         |     `-DeclRefExpr 0x159aaf5cc38 <line:88:33> 'int' lvalue Var 0x159aaf5bc78 'i' 'int'
|   |     | |         `-ImplicitCastExpr 0x159aaf5ccb0 <line:77:52> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | |           `-DeclRefExpr 0x159aaf5cc78 <col:52> 'size_t':'unsigned long long' lvalue ParmVar 0x159aaf59c38 'felem_size' 'size_t':'unsigned long long'
|   |     | |-ImplicitCastExpr 0x159aaf61280 <col:23, col:63> 'const void *' <BitCast>
|   |     | | `-ParenExpr 0x159aaf5cf38 <col:23, col:63> 'char *'
|   |     | |   `-UnaryOperator 0x159aaf5cf20 <col:24, col:62> 'char *' prefix '&' cannot overflow
|   |     | |     `-ArraySubscriptExpr 0x159aaf5cf00 <col:25, col:62> 'char' lvalue
|   |     | |       |-ParenExpr 0x159aaf5cdd0 <col:25, col:44> 'char *'
|   |     | |       | `-CStyleCastExpr 0x159aaf5cda8 <col:26, col:34> 'char *' <BitCast>
|   |     | |       |   `-ImplicitCastExpr 0x159aaf5cd90 <col:34> 'void *' <LValueToRValue> part_of_explicit_cast
|   |     | |       |     `-DeclRefExpr 0x159aaf5cd58 <col:34> 'void *' lvalue ParmVar 0x159aaf59cb8 'tmp_felems' 'void *'
|   |     | |       `-BinaryOperator 0x159aaf5cee0 <col:46, col:52> 'unsigned long long' '*'
|   |     | |         |-ImplicitCastExpr 0x159aaf5cec8 <col:46, col:48> 'unsigned long long' <IntegralCast>
|   |     | |         | `-ParenExpr 0x159aaf5ce70 <col:46, col:48> 'int'
|   |     | |         |   `-BinaryOperator 0x159aaf5ce50 <line:88:47, col:51> 'int' '-'
|   |     | |         |     |-ImplicitCastExpr 0x159aaf5ce38 <col:47> 'int' <LValueToRValue>
|   |     | |         |     | `-DeclRefExpr 0x159aaf5cdf0 <col:47> 'int' lvalue Var 0x159aaf5bc78 'i' 'int'
|   |     | |         |     `-IntegerLiteral 0x159aaf5ce10 <col:51> 'int' 1
|   |     | |         `-ImplicitCastExpr 0x159aaf5ceb0 <line:77:52> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | |           `-DeclRefExpr 0x159aaf5ce90 <col:52> 'size_t':'unsigned long long' lvalue ParmVar 0x159aaf59c38 'felem_size' 'size_t':'unsigned long long'
|   |     | `-ImplicitCastExpr 0x159aaf61298 <line:80:15, col:64> 'const void *' <BitCast>
|   |     |   `-ParenExpr 0x159aaf611f8 <col:15, col:64> 'char *'
|   |     |     `-UnaryOperator 0x159aaf611e0 <col:16, col:63> 'char *' prefix '&' cannot overflow
|   |     |       `-ArraySubscriptExpr 0x159aaf5d168 <col:17, col:63> 'char' lvalue
|   |     |         |-ParenExpr 0x159aaf5cfd0 <col:17, col:37> 'char *'
|   |     |         | `-CStyleCastExpr 0x159aaf5cfa8 <col:18, col:26> 'char *' <BitCast>
|   |     |         |   `-ImplicitCastExpr 0x159aaf5cf90 <col:26> 'void *' <LValueToRValue> part_of_explicit_cast
|   |     |         |     `-DeclRefExpr 0x159aaf5cf58 <col:26> 'void *' lvalue ParmVar 0x159aaf59bc0 'point_array' 'void *'
|   |     |         `-BinaryOperator 0x159aaf5d148 <col:39, col:53> 'unsigned long long' '*'
|   |     |           |-ImplicitCastExpr 0x159aaf5d130 <col:39, col:49> 'unsigned long long' <IntegralCast>
|   |     |           | `-ParenExpr 0x159aaf5d0d8 <col:39, col:49> 'int'
|   |     |           |   `-BinaryOperator 0x159aaf5d0b8 <col:40, col:48> 'int' '+'
|   |     |           |     |-BinaryOperator 0x159aaf5d070 <col:40, col:44> 'int' '*'
|   |     |           |     | |-IntegerLiteral 0x159aaf5cff0 <col:40> 'int' 3
|   |     |           |     | `-ImplicitCastExpr 0x159aaf5d058 <col:42, col:44> 'int' <LValueToRValue>
|   |     |           |     |   `-ParenExpr 0x159aaf5d038 <col:42, col:44> 'int' lvalue
|   |     |           |     |     `-DeclRefExpr 0x159aaf5d018 <line:88:57> 'int' lvalue Var 0x159aaf5bc78 'i' 'int'
|   |     |           |     `-IntegerLiteral 0x159aaf5d090 <line:80:48> 'int' 2
|   |     |           `-ImplicitCastExpr 0x159aaf5d118 <col:53> 'size_t':'unsigned long long' <LValueToRValue>
|   |     |             `-DeclRefExpr 0x159aaf5d0f8 <col:53> 'size_t':'unsigned long long' lvalue ParmVar 0x159aaf59c38 'felem_size' 'size_t':'unsigned long long'
|   |     `-CallExpr 0x159aaf616a0 <line:90:13, col:56> 'void'
|   |       |-ImplicitCastExpr 0x159aaf61688 <col:13> 'void (*)(void *, const void *)' <LValueToRValue>
|   |       | `-DeclRefExpr 0x159aaf612b0 <col:13> 'void (*)(void *, const void *)' lvalue ParmVar 0x159aaf5b180 'felem_assign' 'void (*)(void *, const void *)'
|   |       |-ImplicitCastExpr 0x159aaf616d0 <line:77:23, col:63> 'void *' <BitCast>
|   |       | `-ParenExpr 0x159aaf61468 <col:23, col:63> 'char *'
|   |       |   `-UnaryOperator 0x159aaf61450 <col:24, col:62> 'char *' prefix '&' cannot overflow
|   |       |     `-ArraySubscriptExpr 0x159aaf61430 <col:25, col:62> 'char' lvalue
|   |       |       |-ParenExpr 0x159aaf61348 <col:25, col:44> 'char *'
|   |       |       | `-CStyleCastExpr 0x159aaf61320 <col:26, col:34> 'char *' <BitCast>
|   |       |       |   `-ImplicitCastExpr 0x159aaf61308 <col:34> 'void *' <LValueToRValue> part_of_explicit_cast
|   |       |       |     `-DeclRefExpr 0x159aaf612d0 <col:34> 'void *' lvalue ParmVar 0x159aaf59cb8 'tmp_felems' 'void *'
|   |       |       `-BinaryOperator 0x159aaf61410 <col:46, col:52> 'unsigned long long' '*'
|   |       |         |-ImplicitCastExpr 0x159aaf613f8 <col:46, col:48> 'unsigned long long' <IntegralCast>
|   |       |         | `-ImplicitCastExpr 0x159aaf613c8 <col:46, col:48> 'int' <LValueToRValue>
|   |       |         |   `-ParenExpr 0x159aaf61388 <col:46, col:48> 'int' lvalue
|   |       |         |     `-DeclRefExpr 0x159aaf61368 <line:90:36> 'int' lvalue Var 0x159aaf5bc78 'i' 'int'
|   |       |         `-ImplicitCastExpr 0x159aaf613e0 <line:77:52> 'size_t':'unsigned long long' <LValueToRValue>
|   |       |           `-DeclRefExpr 0x159aaf613a8 <col:52> 'size_t':'unsigned long long' lvalue ParmVar 0x159aaf59c38 'felem_size' 'size_t':'unsigned long long'
|   |       `-ImplicitCastExpr 0x159aaf616e8 <col:23, col:63> 'const void *' <BitCast>
|   |         `-ParenExpr 0x159aaf61668 <col:23, col:63> 'char *'
|   |           `-UnaryOperator 0x159aaf61650 <col:24, col:62> 'char *' prefix '&' cannot overflow
|   |             `-ArraySubscriptExpr 0x159aaf61630 <col:25, col:62> 'char' lvalue
|   |               |-ParenExpr 0x159aaf61500 <col:25, col:44> 'char *'
|   |               | `-CStyleCastExpr 0x159aaf614d8 <col:26, col:34> 'char *' <BitCast>
|   |               |   `-ImplicitCastExpr 0x159aaf614c0 <col:34> 'void *' <LValueToRValue> part_of_explicit_cast
|   |               |     `-DeclRefExpr 0x159aaf61488 <col:34> 'void *' lvalue ParmVar 0x159aaf59cb8 'tmp_felems' 'void *'
|   |               `-BinaryOperator 0x159aaf61610 <col:46, col:52> 'unsigned long long' '*'
|   |                 |-ImplicitCastExpr 0x159aaf615f8 <col:46, col:48> 'unsigned long long' <IntegralCast>
|   |                 | `-ParenExpr 0x159aaf615a0 <col:46, col:48> 'int'
|   |                 |   `-BinaryOperator 0x159aaf61580 <line:90:50, col:54> 'int' '-'
|   |                 |     |-ImplicitCastExpr 0x159aaf61568 <col:50> 'int' <LValueToRValue>
|   |                 |     | `-DeclRefExpr 0x159aaf61520 <col:50> 'int' lvalue Var 0x159aaf5bc78 'i' 'int'
|   |                 |     `-IntegerLiteral 0x159aaf61540 <col:54> 'int' 1
|   |                 `-ImplicitCastExpr 0x159aaf615e0 <line:77:52> 'size_t':'unsigned long long' <LValueToRValue>
|   |                   `-DeclRefExpr 0x159aaf615c0 <col:52> 'size_t':'unsigned long long' lvalue ParmVar 0x159aaf59c38 'felem_size' 'size_t':'unsigned long long'
|   |-CallExpr 0x159aaf61bb0 <line:97:5, col:53> 'void'
|   | |-ImplicitCastExpr 0x159aaf61b98 <col:5> 'void (*)(void *, const void *)' <LValueToRValue>
|   | | `-DeclRefExpr 0x159aaf61778 <col:5> 'void (*)(void *, const void *)' lvalue ParmVar 0x159aaf5b7a8 'felem_inv' 'void (*)(void *, const void *)'
|   | |-ImplicitCastExpr 0x159aaf61be0 <line:77:23, col:63> 'void *' <BitCast>
|   | | `-ParenExpr 0x159aaf61978 <col:23, col:63> 'char *'
|   | |   `-UnaryOperator 0x159aaf61960 <col:24, col:62> 'char *' prefix '&' cannot overflow
|   | |     `-ArraySubscriptExpr 0x159aaf61940 <col:25, col:62> 'char' lvalue
|   | |       |-ParenExpr 0x159aaf61810 <col:25, col:44> 'char *'
|   | |       | `-CStyleCastExpr 0x159aaf617e8 <col:26, col:34> 'char *' <BitCast>
|   | |       |   `-ImplicitCastExpr 0x159aaf617d0 <col:34> 'void *' <LValueToRValue> part_of_explicit_cast
|   | |       |     `-DeclRefExpr 0x159aaf61798 <col:34> 'void *' lvalue ParmVar 0x159aaf59cb8 'tmp_felems' 'void *'
|   | |       `-BinaryOperator 0x159aaf61920 <col:46, col:52> 'unsigned long long' '*'
|   | |         |-ParenExpr 0x159aaf618c8 <col:46, col:48> 'unsigned long long'
|   | |         | `-BinaryOperator 0x159aaf618a8 <line:97:25, col:31> 'unsigned long long' '-'
|   | |         |   |-ImplicitCastExpr 0x159aaf61878 <col:25> 'size_t':'unsigned long long' <LValueToRValue>
|   | |         |   | `-DeclRefExpr 0x159aaf61830 <col:25> 'size_t':'unsigned long long' lvalue ParmVar 0x159aaf59b40 'num' 'size_t':'unsigned long long'
|   | |         |   `-ImplicitCastExpr 0x159aaf61890 <col:31> 'unsigned long long' <IntegralCast>
|   | |         |     `-IntegerLiteral 0x159aaf61850 <col:31> 'int' 1
|   | |         `-ImplicitCastExpr 0x159aaf61908 <line:77:52> 'size_t':'unsigned long long' <LValueToRValue>
|   | |           `-DeclRefExpr 0x159aaf618e8 <col:52> 'size_t':'unsigned long long' lvalue ParmVar 0x159aaf59c38 'felem_size' 'size_t':'unsigned long long'
|   | `-ImplicitCastExpr 0x159aaf61bf8 <col:23, col:63> 'const void *' <BitCast>
|   |   `-ParenExpr 0x159aaf61b78 <col:23, col:63> 'char *'
|   |     `-UnaryOperator 0x159aaf61b60 <col:24, col:62> 'char *' prefix '&' cannot overflow
|   |       `-ArraySubscriptExpr 0x159aaf61b40 <col:25, col:62> 'char' lvalue
|   |         |-ParenExpr 0x159aaf61a10 <col:25, col:44> 'char *'
|   |         | `-CStyleCastExpr 0x159aaf619e8 <col:26, col:34> 'char *' <BitCast>
|   |         |   `-ImplicitCastExpr 0x159aaf619d0 <col:34> 'void *' <LValueToRValue> part_of_explicit_cast
|   |         |     `-DeclRefExpr 0x159aaf61998 <col:34> 'void *' lvalue ParmVar 0x159aaf59cb8 'tmp_felems' 'void *'
|   |         `-BinaryOperator 0x159aaf61b20 <col:46, col:52> 'unsigned long long' '*'
|   |           |-ParenExpr 0x159aaf61ac8 <col:46, col:48> 'unsigned long long'
|   |           | `-BinaryOperator 0x159aaf61aa8 <line:97:45, col:51> 'unsigned long long' '-'
|   |           |   |-ImplicitCastExpr 0x159aaf61a78 <col:45> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   | `-DeclRefExpr 0x159aaf61a30 <col:45> 'size_t':'unsigned long long' lvalue ParmVar 0x159aaf59b40 'num' 'size_t':'unsigned long long'
|   |           |   `-ImplicitCastExpr 0x159aaf61a90 <col:51> 'unsigned long long' <IntegralCast>
|   |           |     `-IntegerLiteral 0x159aaf61a50 <col:51> 'int' 1
|   |           `-ImplicitCastExpr 0x159aaf61b08 <line:77:52> 'size_t':'unsigned long long' <LValueToRValue>
|   |             `-DeclRefExpr 0x159aaf61ae8 <col:52> 'size_t':'unsigned long long' lvalue ParmVar 0x159aaf59c38 'felem_size' 'size_t':'unsigned long long'
|   `-ForStmt 0x159aaf64058 <line:98:5, line:133:5>
|     |-BinaryOperator 0x159aaf61ce0 <line:98:10, col:20> 'int' '='
|     | |-DeclRefExpr 0x159aaf61c10 <col:10> 'int' lvalue Var 0x159aaf5bc78 'i' 'int'
|     | `-ImplicitCastExpr 0x159aaf61cc8 <col:14, col:20> 'int' <IntegralCast>
|     |   `-BinaryOperator 0x159aaf61ca8 <col:14, col:20> 'unsigned long long' '-'
|     |     |-ImplicitCastExpr 0x159aaf61c78 <col:14> 'size_t':'unsigned long long' <LValueToRValue>
|     |     | `-DeclRefExpr 0x159aaf61c30 <col:14> 'size_t':'unsigned long long' lvalue ParmVar 0x159aaf59b40 'num' 'size_t':'unsigned long long'
|     |     `-ImplicitCastExpr 0x159aaf61c90 <col:20> 'unsigned long long' <IntegralCast>
|     |       `-IntegerLiteral 0x159aaf61c50 <col:20> 'int' 1
|     |-<<<NULL>>>
|     |-BinaryOperator 0x159aaf61d60 <col:23, col:28> 'int' '>='
|     | |-ImplicitCastExpr 0x159aaf61d48 <col:23> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x159aaf61d00 <col:23> 'int' lvalue Var 0x159aaf5bc78 'i' 'int'
|     | `-IntegerLiteral 0x159aaf61d20 <col:28> 'int' 0
|     |-UnaryOperator 0x159aaf61da0 <col:31, col:32> 'int' postfix '--'
|     | `-DeclRefExpr 0x159aaf61d80 <col:31> 'int' lvalue Var 0x159aaf5bc78 'i' 'int'
|     `-CompoundStmt 0x159aaf64038 <col:36, line:133:5>
|       |-IfStmt 0x159aaf5a7c0 <line:99:9, line:107:54> has_else
|       | |-BinaryOperator 0x159aaf61e18 <line:99:13, col:17> 'int' '>'
|       | | |-ImplicitCastExpr 0x159aaf61e00 <col:13> 'int' <LValueToRValue>
|       | | | `-DeclRefExpr 0x159aaf61db8 <col:13> 'int' lvalue Var 0x159aaf5bc78 'i' 'int'
|       | | `-IntegerLiteral 0x159aaf61dd8 <col:17> 'int' 0
|       | |-CallExpr 0x159aaf5a360 <line:105:13, col:69> 'void'
|       | | |-ImplicitCastExpr 0x159aaf5a348 <col:13> 'void (*)(void *, const void *, const void *)' <LValueToRValue>
|       | | | `-DeclRefExpr 0x159aaf61e38 <col:13> 'void (*)(void *, const void *, const void *)' lvalue ParmVar 0x159aaf5b5d0 'felem_mul' 'void (*)(void *, const void *, const void *)'
|       | | |-ImplicitCastExpr 0x159aaf5a398 <line:77:23, col:63> 'void *' <BitCast>
|       | | | `-ParenExpr 0x159aaf61fd8 <col:23, col:63> 'char *'
|       | | |   `-UnaryOperator 0x159aaf61fc0 <col:24, col:62> 'char *' prefix '&' cannot overflow
|       | | |     `-ArraySubscriptExpr 0x159aaf61fa0 <col:25, col:62> 'char' lvalue
|       | | |       |-ParenExpr 0x159aaf61ed0 <col:25, col:44> 'char *'
|       | | |       | `-CStyleCastExpr 0x159aaf61ea8 <col:26, col:34> 'char *' <BitCast>
|       | | |       |   `-ImplicitCastExpr 0x159aaf61e90 <col:34> 'void *' <LValueToRValue> part_of_explicit_cast
|       | | |       |     `-DeclRefExpr 0x159aaf61e58 <col:34> 'void *' lvalue ParmVar 0x159aaf59cb8 'tmp_felems' 'void *'
|       | | |       `-BinaryOperator 0x159aaf61f80 <col:46, col:52> 'unsigned long long' '*'
|       | | |         |-ImplicitCastExpr 0x159aaf61f50 <col:46, col:48> 'size_t':'unsigned long long' <LValueToRValue>
|       | | |         | `-ParenExpr 0x159aaf61f10 <col:46, col:48> 'size_t':'unsigned long long' lvalue
|       | | |         |   `-DeclRefExpr 0x159aaf61ef0 <line:105:33> 'size_t':'unsigned long long' lvalue ParmVar 0x159aaf59b40 'num' 'size_t':'unsigned long long'
|       | | |         `-ImplicitCastExpr 0x159aaf61f68 <line:77:52> 'size_t':'unsigned long long' <LValueToRValue>
|       | | |           `-DeclRefExpr 0x159aaf61f30 <col:52> 'size_t':'unsigned long long' lvalue ParmVar 0x159aaf59c38 'felem_size' 'size_t':'unsigned long long'
|       | | |-ImplicitCastExpr 0x159aaf5a3b0 <col:23, col:63> 'const void *' <BitCast>
|       | | | `-ParenExpr 0x159aaf5a170 <col:23, col:63> 'char *'
|       | | |   `-UnaryOperator 0x159aaf621c0 <col:24, col:62> 'char *' prefix '&' cannot overflow
|       | | |     `-ArraySubscriptExpr 0x159aaf621a0 <col:25, col:62> 'char' lvalue
|       | | |       |-ParenExpr 0x159aaf62070 <col:25, col:44> 'char *'
|       | | |       | `-CStyleCastExpr 0x159aaf62048 <col:26, col:34> 'char *' <BitCast>
|       | | |       |   `-ImplicitCastExpr 0x159aaf62030 <col:34> 'void *' <LValueToRValue> part_of_explicit_cast
|       | | |       |     `-DeclRefExpr 0x159aaf61ff8 <col:34> 'void *' lvalue ParmVar 0x159aaf59cb8 'tmp_felems' 'void *'
|       | | |       `-BinaryOperator 0x159aaf62180 <col:46, col:52> 'unsigned long long' '*'
|       | | |         |-ImplicitCastExpr 0x159aaf62168 <col:46, col:48> 'unsigned long long' <IntegralCast>
|       | | |         | `-ParenExpr 0x159aaf62110 <col:46, col:48> 'int'
|       | | |         |   `-BinaryOperator 0x159aaf620f0 <line:105:49, col:53> 'int' '-'
|       | | |         |     |-ImplicitCastExpr 0x159aaf620d8 <col:49> 'int' <LValueToRValue>
|       | | |         |     | `-DeclRefExpr 0x159aaf62090 <col:49> 'int' lvalue Var 0x159aaf5bc78 'i' 'int'
|       | | |         |     `-IntegerLiteral 0x159aaf620b0 <col:53> 'int' 1
|       | | |         `-ImplicitCastExpr 0x159aaf62150 <line:77:52> 'size_t':'unsigned long long' <LValueToRValue>
|       | | |           `-DeclRefExpr 0x159aaf62130 <col:52> 'size_t':'unsigned long long' lvalue ParmVar 0x159aaf59c38 'felem_size' 'size_t':'unsigned long long'
|       | | `-ImplicitCastExpr 0x159aaf5a3c8 <col:23, col:63> 'const void *' <BitCast>
|       | |   `-ParenExpr 0x159aaf5a328 <col:23, col:63> 'char *'
|       | |     `-UnaryOperator 0x159aaf5a310 <col:24, col:62> 'char *' prefix '&' cannot overflow
|       | |       `-ArraySubscriptExpr 0x159aaf5a2f0 <col:25, col:62> 'char' lvalue
|       | |         |-ParenExpr 0x159aaf5a208 <col:25, col:44> 'char *'
|       | |         | `-CStyleCastExpr 0x159aaf5a1e0 <col:26, col:34> 'char *' <BitCast>
|       | |         |   `-ImplicitCastExpr 0x159aaf5a1c8 <col:34> 'void *' <LValueToRValue> part_of_explicit_cast
|       | |         |     `-DeclRefExpr 0x159aaf5a190 <col:34> 'void *' lvalue ParmVar 0x159aaf59cb8 'tmp_felems' 'void *'
|       | |         `-BinaryOperator 0x159aaf5a2d0 <col:46, col:52> 'unsigned long long' '*'
|       | |           |-ImplicitCastExpr 0x159aaf5a2b8 <col:46, col:48> 'unsigned long long' <IntegralCast>
|       | |           | `-ImplicitCastExpr 0x159aaf5a288 <col:46, col:48> 'int' <LValueToRValue>
|       | |           |   `-ParenExpr 0x159aaf5a248 <col:46, col:48> 'int' lvalue
|       | |           |     `-DeclRefExpr 0x159aaf5a228 <line:105:67> 'int' lvalue Var 0x159aaf5bc78 'i' 'int'
|       | |           `-ImplicitCastExpr 0x159aaf5a2a0 <line:77:52> 'size_t':'unsigned long long' <LValueToRValue>
|       | |             `-DeclRefExpr 0x159aaf5a268 <col:52> 'size_t':'unsigned long long' lvalue ParmVar 0x159aaf59c38 'felem_size' 'size_t':'unsigned long long'
|       | `-CallExpr 0x159aaf5a760 <line:107:13, col:54> 'void'
|       |   |-ImplicitCastExpr 0x159aaf5a748 <col:13> 'void (*)(void *, const void *)' <LValueToRValue>
|       |   | `-DeclRefExpr 0x159aaf5a3e0 <col:13> 'void (*)(void *, const void *)' lvalue ParmVar 0x159aaf5b180 'felem_assign' 'void (*)(void *, const void *)'
|       |   |-ImplicitCastExpr 0x159aaf5a790 <line:77:23, col:63> 'void *' <BitCast>
|       |   | `-ParenExpr 0x159aaf5a580 <col:23, col:63> 'char *'
|       |   |   `-UnaryOperator 0x159aaf5a568 <col:24, col:62> 'char *' prefix '&' cannot overflow
|       |   |     `-ArraySubscriptExpr 0x159aaf5a548 <col:25, col:62> 'char' lvalue
|       |   |       |-ParenExpr 0x159aaf5a478 <col:25, col:44> 'char *'
|       |   |       | `-CStyleCastExpr 0x159aaf5a450 <col:26, col:34> 'char *' <BitCast>
|       |   |       |   `-ImplicitCastExpr 0x159aaf5a438 <col:34> 'void *' <LValueToRValue> part_of_explicit_cast
|       |   |       |     `-DeclRefExpr 0x159aaf5a400 <col:34> 'void *' lvalue ParmVar 0x159aaf59cb8 'tmp_felems' 'void *'
|       |   |       `-BinaryOperator 0x159aaf5a528 <col:46, col:52> 'unsigned long long' '*'
|       |   |         |-ImplicitCastExpr 0x159aaf5a4f8 <col:46, col:48> 'size_t':'unsigned long long' <LValueToRValue>
|       |   |         | `-ParenExpr 0x159aaf5a4b8 <col:46, col:48> 'size_t':'unsigned long long' lvalue
|       |   |         |   `-DeclRefExpr 0x159aaf5a498 <line:107:36> 'size_t':'unsigned long long' lvalue ParmVar 0x159aaf59b40 'num' 'size_t':'unsigned long long'
|       |   |         `-ImplicitCastExpr 0x159aaf5a510 <line:77:52> 'size_t':'unsigned long long' <LValueToRValue>
|       |   |           `-DeclRefExpr 0x159aaf5a4d8 <col:52> 'size_t':'unsigned long long' lvalue ParmVar 0x159aaf59c38 'felem_size' 'size_t':'unsigned long long'
|       |   `-ImplicitCastExpr 0x159aaf5a7a8 <col:23, col:63> 'const void *' <BitCast>
|       |     `-ParenExpr 0x159aaf5a728 <col:23, col:63> 'char *'
|       |       `-UnaryOperator 0x159aaf5a710 <col:24, col:62> 'char *' prefix '&' cannot overflow
|       |         `-ArraySubscriptExpr 0x159aaf5a6f0 <col:25, col:62> 'char' lvalue
|       |           |-ParenExpr 0x159aaf5a618 <col:25, col:44> 'char *'
|       |           | `-CStyleCastExpr 0x159aaf5a5f0 <col:26, col:34> 'char *' <BitCast>
|       |           |   `-ImplicitCastExpr 0x159aaf5a5d8 <col:34> 'void *' <LValueToRValue> part_of_explicit_cast
|       |           |     `-DeclRefExpr 0x159aaf5a5a0 <col:34> 'void *' lvalue ParmVar 0x159aaf59cb8 'tmp_felems' 'void *'
|       |           `-BinaryOperator 0x159aaf5a6d0 <col:46, col:52> 'unsigned long long' '*'
|       |             |-ImplicitCastExpr 0x159aaf5a6b8 <col:46, col:48> 'unsigned long long' <IntegralCast>
|       |             | `-ParenExpr 0x159aaf5a660 <col:46, col:48> 'int'
|       |             |   `-IntegerLiteral 0x159aaf5a638 <line:107:52> 'int' 0
|       |             `-ImplicitCastExpr 0x159aaf5a6a0 <line:77:52> 'size_t':'unsigned long long' <LValueToRValue>
|       |               `-DeclRefExpr 0x159aaf5a680 <col:52> 'size_t':'unsigned long long' lvalue ParmVar 0x159aaf59c38 'felem_size' 'size_t':'unsigned long long'
|       `-IfStmt 0x159aaf64010 <line:109:9, line:132:9> has_else
|         |-UnaryOperator 0x159aaf5aac8 <line:109:13, col:32> 'int' prefix '!' cannot overflow
|         | `-CallExpr 0x159aaf5aa88 <col:14, col:32> 'int'
|         |   |-ImplicitCastExpr 0x159aaf5aa70 <col:14> 'int (*)(const void *)' <LValueToRValue>
|         |   | `-DeclRefExpr 0x159aaf5a7e8 <col:14> 'int (*)(const void *)' lvalue ParmVar 0x159aaf59f30 'felem_is_zero' 'int (*)(const void *)'
|         |   `-ImplicitCastExpr 0x159aaf5aab0 <line:80:15, col:64> 'const void *' <BitCast>
|         |     `-ParenExpr 0x159aaf5aa50 <col:15, col:64> 'char *'
|         |       `-UnaryOperator 0x159aaf5aa38 <col:16, col:63> 'char *' prefix '&' cannot overflow
|         |         `-ArraySubscriptExpr 0x159aaf5aa18 <col:17, col:63> 'char' lvalue
|         |           |-ParenExpr 0x159aaf5a880 <col:17, col:37> 'char *'
|         |           | `-CStyleCastExpr 0x159aaf5a858 <col:18, col:26> 'char *' <BitCast>
|         |           |   `-ImplicitCastExpr 0x159aaf5a840 <col:26> 'void *' <LValueToRValue> part_of_explicit_cast
|         |           |     `-DeclRefExpr 0x159aaf5a808 <col:26> 'void *' lvalue ParmVar 0x159aaf59bc0 'point_array' 'void *'
|         |           `-BinaryOperator 0x159aaf5a9f8 <col:39, col:53> 'unsigned long long' '*'
|         |             |-ImplicitCastExpr 0x159aaf5a9e0 <col:39, col:49> 'unsigned long long' <IntegralCast>
|         |             | `-ParenExpr 0x159aaf5a988 <col:39, col:49> 'int'
|         |             |   `-BinaryOperator 0x159aaf5a968 <col:40, col:48> 'int' '+'
|         |             |     |-BinaryOperator 0x159aaf5a920 <col:40, col:44> 'int' '*'
|         |             |     | |-IntegerLiteral 0x159aaf5a8a0 <col:40> 'int' 3
|         |             |     | `-ImplicitCastExpr 0x159aaf5a908 <col:42, col:44> 'int' <LValueToRValue>
|         |             |     |   `-ParenExpr 0x159aaf5a8e8 <col:42, col:44> 'int' lvalue
|         |             |     |     `-DeclRefExpr 0x159aaf5a8c8 <line:109:30> 'int' lvalue Var 0x159aaf5bc78 'i' 'int'
|         |             |     `-IntegerLiteral 0x159aaf5a940 <line:80:48> 'int' 2
|         |             `-ImplicitCastExpr 0x159aaf5a9c8 <col:53> 'size_t':'unsigned long long' <LValueToRValue>
|         |               `-DeclRefExpr 0x159aaf5a9a8 <col:53> 'size_t':'unsigned long long' lvalue ParmVar 0x159aaf59c38 'felem_size' 'size_t':'unsigned long long'
|         |-CompoundStmt 0x159aaf63ac0 <line:109:35, line:126:9>
|         | |-IfStmt 0x159aaf622c0 <line:110:13, line:114:63>
|         | | |-BinaryOperator 0x159aaf5ab40 <line:110:17, col:21> 'int' '>'
|         | | | |-ImplicitCastExpr 0x159aaf5ab28 <col:17> 'int' <LValueToRValue>
|         | | | | `-DeclRefExpr 0x159aaf5aae0 <col:17> 'int' lvalue Var 0x159aaf5bc78 'i' 'int'
|         | | | `-IntegerLiteral 0x159aaf5ab00 <col:21> 'int' 0
|         | | `-CallExpr 0x159aaf62240 <line:114:17, col:63> 'void'
|         | |   |-ImplicitCastExpr 0x159aaf62228 <col:17> 'void (*)(void *, const void *, const void *)' <LValueToRValue>
|         | |   | `-DeclRefExpr 0x159aaf5ab60 <col:17> 'void (*)(void *, const void *, const void *)' lvalue ParmVar 0x159aaf5b5d0 'felem_mul' 'void (*)(void *, const void *, const void *)'
|         | |   |-ImplicitCastExpr 0x159aaf62278 <line:77:23, col:63> 'void *' <BitCast>
|         | |   | `-ParenExpr 0x159aaf5ad60 <col:23, col:63> 'char *'
|         | |   |   `-UnaryOperator 0x159aaf5ad48 <col:24, col:62> 'char *' prefix '&' cannot overflow
|         | |   |     `-ArraySubscriptExpr 0x159aaf5ad28 <col:25, col:62> 'char' lvalue
|         | |   |       |-ParenExpr 0x159aaf5abf8 <col:25, col:44> 'char *'
|         | |   |       | `-CStyleCastExpr 0x159aaf5abd0 <col:26, col:34> 'char *' <BitCast>
|         | |   |       |   `-ImplicitCastExpr 0x159aaf5abb8 <col:34> 'void *' <LValueToRValue> part_of_explicit_cast
|         | |   |       |     `-DeclRefExpr 0x159aaf5ab80 <col:34> 'void *' lvalue ParmVar 0x159aaf59cb8 'tmp_felems' 'void *'
|         | |   |       `-BinaryOperator 0x159aaf5ad08 <col:46, col:52> 'unsigned long long' '*'
|         | |   |         |-ImplicitCastExpr 0x159aaf5acf0 <col:46, col:48> 'unsigned long long' <IntegralCast>
|         | |   |         | `-ParenExpr 0x159aaf5ac98 <col:46, col:48> 'int'
|         | |   |         |   `-BinaryOperator 0x159aaf5ac78 <line:114:37, col:41> 'int' '-'
|         | |   |         |     |-ImplicitCastExpr 0x159aaf5ac60 <col:37> 'int' <LValueToRValue>
|         | |   |         |     | `-DeclRefExpr 0x159aaf5ac18 <col:37> 'int' lvalue Var 0x159aaf5bc78 'i' 'int'
|         | |   |         |     `-IntegerLiteral 0x159aaf5ac38 <col:41> 'int' 1
|         | |   |         `-ImplicitCastExpr 0x159aaf5acd8 <line:77:52> 'size_t':'unsigned long long' <LValueToRValue>
|         | |   |           `-DeclRefExpr 0x159aaf5acb8 <col:52> 'size_t':'unsigned long long' lvalue ParmVar 0x159aaf59c38 'felem_size' 'size_t':'unsigned long long'
|         | |   |-ImplicitCastExpr 0x159aaf62290 <col:23, col:63> 'const void *' <BitCast>
|         | |   | `-ParenExpr 0x159aaf5af18 <col:23, col:63> 'char *'
|         | |   |   `-UnaryOperator 0x159aaf5af00 <col:24, col:62> 'char *' prefix '&' cannot overflow
|         | |   |     `-ArraySubscriptExpr 0x159aaf5aee0 <col:25, col:62> 'char' lvalue
|         | |   |       |-ParenExpr 0x159aaf5adf8 <col:25, col:44> 'char *'
|         | |   |       | `-CStyleCastExpr 0x159aaf5add0 <col:26, col:34> 'char *' <BitCast>
|         | |   |       |   `-ImplicitCastExpr 0x159aaf5adb8 <col:34> 'void *' <LValueToRValue> part_of_explicit_cast
|         | |   |       |     `-DeclRefExpr 0x159aaf5ad80 <col:34> 'void *' lvalue ParmVar 0x159aaf59cb8 'tmp_felems' 'void *'
|         | |   |       `-BinaryOperator 0x159aaf5aec0 <col:46, col:52> 'unsigned long long' '*'
|         | |   |         |-ImplicitCastExpr 0x159aaf5aea8 <col:46, col:48> 'unsigned long long' <IntegralCast>
|         | |   |         | `-ImplicitCastExpr 0x159aaf5ae78 <col:46, col:48> 'int' <LValueToRValue>
|         | |   |         |   `-ParenExpr 0x159aaf5ae38 <col:46, col:48> 'int' lvalue
|         | |   |         |     `-DeclRefExpr 0x159aaf5ae18 <line:114:55> 'int' lvalue Var 0x159aaf5bc78 'i' 'int'
|         | |   |         `-ImplicitCastExpr 0x159aaf5ae90 <line:77:52> 'size_t':'unsigned long long' <LValueToRValue>
|         | |   |           `-DeclRefExpr 0x159aaf5ae58 <col:52> 'size_t':'unsigned long long' lvalue ParmVar 0x159aaf59c38 'felem_size' 'size_t':'unsigned long long'
|         | |   `-ImplicitCastExpr 0x159aaf622a8 <line:80:15, col:64> 'const void *' <BitCast>
|         | |     `-ParenExpr 0x159aaf62208 <col:15, col:64> 'char *'
|         | |       `-UnaryOperator 0x159aaf621f0 <col:16, col:63> 'char *' prefix '&' cannot overflow
|         | |         `-ArraySubscriptExpr 0x159aaf5b148 <col:17, col:63> 'char' lvalue
|         | |           |-ParenExpr 0x159aaf5afb0 <col:17, col:37> 'char *'
|         | |           | `-CStyleCastExpr 0x159aaf5af88 <col:18, col:26> 'char *' <BitCast>
|         | |           |   `-ImplicitCastExpr 0x159aaf5af70 <col:26> 'void *' <LValueToRValue> part_of_explicit_cast
|         | |           |     `-DeclRefExpr 0x159aaf5af38 <col:26> 'void *' lvalue ParmVar 0x159aaf59bc0 'point_array' 'void *'
|         | |           `-BinaryOperator 0x159aaf5b128 <col:39, col:53> 'unsigned long long' '*'
|         | |             |-ImplicitCastExpr 0x159aaf5b110 <col:39, col:49> 'unsigned long long' <IntegralCast>
|         | |             | `-ParenExpr 0x159aaf5b0b8 <col:39, col:49> 'int'
|         | |             |   `-BinaryOperator 0x159aaf5b098 <col:40, col:48> 'int' '+'
|         | |             |     |-BinaryOperator 0x159aaf5b050 <col:40, col:44> 'int' '*'
|         | |             |     | |-IntegerLiteral 0x159aaf5afd0 <col:40> 'int' 3
|         | |             |     | `-ImplicitCastExpr 0x159aaf5b038 <col:42, col:44> 'int' <LValueToRValue>
|         | |             |     |   `-ParenExpr 0x159aaf5b018 <col:42, col:44> 'int' lvalue
|         | |             |     |     `-DeclRefExpr 0x159aaf5aff8 <line:114:61> 'int' lvalue Var 0x159aaf5bc78 'i' 'int'
|         | |             |     `-IntegerLiteral 0x159aaf5b070 <line:80:48> 'int' 2
|         | |             `-ImplicitCastExpr 0x159aaf5b0f8 <col:53> 'size_t':'unsigned long long' <LValueToRValue>
|         | |               `-DeclRefExpr 0x159aaf5b0d8 <col:53> 'size_t':'unsigned long long' lvalue ParmVar 0x159aaf59c38 'felem_size' 'size_t':'unsigned long long'
|         | |-CallExpr 0x159aaf62718 <line:119:13, col:46> 'void'
|         | | |-ImplicitCastExpr 0x159aaf62700 <col:13> 'void (*)(void *, const void *)' <LValueToRValue>
|         | | | `-DeclRefExpr 0x159aaf622d8 <col:13> 'void (*)(void *, const void *)' lvalue ParmVar 0x159aaf5b358 'felem_square' 'void (*)(void *, const void *)'
|         | | |-ImplicitCastExpr 0x159aaf62748 <line:80:15, col:64> 'void *' <BitCast>
|         | | | `-ParenExpr 0x159aaf62540 <col:15, col:64> 'char *'
|         | | |   `-UnaryOperator 0x159aaf62528 <col:16, col:63> 'char *' prefix '&' cannot overflow
|         | | |     `-ArraySubscriptExpr 0x159aaf62508 <col:17, col:63> 'char' lvalue
|         | | |       |-ParenExpr 0x159aaf62370 <col:17, col:37> 'char *'
|         | | |       | `-CStyleCastExpr 0x159aaf62348 <col:18, col:26> 'char *' <BitCast>
|         | | |       |   `-ImplicitCastExpr 0x159aaf62330 <col:26> 'void *' <LValueToRValue> part_of_explicit_cast
|         | | |       |     `-DeclRefExpr 0x159aaf622f8 <col:26> 'void *' lvalue ParmVar 0x159aaf59bc0 'point_array' 'void *'
|         | | |       `-BinaryOperator 0x159aaf624e8 <col:39, col:53> 'unsigned long long' '*'
|         | | |         |-ImplicitCastExpr 0x159aaf624d0 <col:39, col:49> 'unsigned long long' <IntegralCast>
|         | | |         | `-ParenExpr 0x159aaf62478 <col:39, col:49> 'int'
|         | | |         |   `-BinaryOperator 0x159aaf62458 <col:40, col:48> 'int' '+'
|         | | |         |     |-BinaryOperator 0x159aaf62410 <col:40, col:44> 'int' '*'
|         | | |         |     | |-IntegerLiteral 0x159aaf62390 <col:40> 'int' 3
|         | | |         |     | `-ImplicitCastExpr 0x159aaf623f8 <col:42, col:44> 'int' <LValueToRValue>
|         | | |         |     |   `-ParenExpr 0x159aaf623d8 <col:42, col:44> 'int' lvalue
|         | | |         |     |     `-DeclRefExpr 0x159aaf623b8 <line:119:28> 'int' lvalue Var 0x159aaf5bc78 'i' 'int'
|         | | |         |     `-IntegerLiteral 0x159aaf62430 <line:80:48> 'int' 2
|         | | |         `-ImplicitCastExpr 0x159aaf624b8 <col:53> 'size_t':'unsigned long long' <LValueToRValue>
|         | | |           `-DeclRefExpr 0x159aaf62498 <col:53> 'size_t':'unsigned long long' lvalue ParmVar 0x159aaf59c38 'felem_size' 'size_t':'unsigned long long'
|         | | `-ImplicitCastExpr 0x159aaf62760 <line:77:23, col:63> 'const void *' <BitCast>
|         | |   `-ParenExpr 0x159aaf626e0 <col:23, col:63> 'char *'
|         | |     `-UnaryOperator 0x159aaf626c8 <col:24, col:62> 'char *' prefix '&' cannot overflow
|         | |       `-ArraySubscriptExpr 0x159aaf626a8 <col:25, col:62> 'char' lvalue
|         | |         |-ParenExpr 0x159aaf625d8 <col:25, col:44> 'char *'
|         | |         | `-CStyleCastExpr 0x159aaf625b0 <col:26, col:34> 'char *' <BitCast>
|         | |         |   `-ImplicitCastExpr 0x159aaf62598 <col:34> 'void *' <LValueToRValue> part_of_explicit_cast
|         | |         |     `-DeclRefExpr 0x159aaf62560 <col:34> 'void *' lvalue ParmVar 0x159aaf59cb8 'tmp_felems' 'void *'
|         | |         `-BinaryOperator 0x159aaf62688 <col:46, col:52> 'unsigned long long' '*'
|         | |           |-ImplicitCastExpr 0x159aaf62658 <col:46, col:48> 'size_t':'unsigned long long' <LValueToRValue>
|         | |           | `-ParenExpr 0x159aaf62618 <col:46, col:48> 'size_t':'unsigned long long' lvalue
|         | |           |   `-DeclRefExpr 0x159aaf625f8 <line:119:42> 'size_t':'unsigned long long' lvalue ParmVar 0x159aaf59b40 'num' 'size_t':'unsigned long long'
|         | |           `-ImplicitCastExpr 0x159aaf62670 <line:77:52> 'size_t':'unsigned long long' <LValueToRValue>
|         | |             `-DeclRefExpr 0x159aaf62638 <col:52> 'size_t':'unsigned long long' lvalue ParmVar 0x159aaf59c38 'felem_size' 'size_t':'unsigned long long'
|         | |-CallExpr 0x159aaf62e18 <line:120:13, col:39> 'void'
|         | | |-ImplicitCastExpr 0x159aaf62e00 <col:13> 'void (*)(void *, const void *, const void *)' <LValueToRValue>
|         | | | `-DeclRefExpr 0x159aaf62778 <col:13> 'void (*)(void *, const void *, const void *)' lvalue ParmVar 0x159aaf5b5d0 'felem_mul' 'void (*)(void *, const void *, const void *)'
|         | | |-ImplicitCastExpr 0x159aaf62e50 <line:78:15, col:58> 'void *' <BitCast>
|         | | | `-ParenExpr 0x159aaf62978 <col:15, col:58> 'char *'
|         | | |   `-UnaryOperator 0x159aaf62960 <col:16, col:57> 'char *' prefix '&' cannot overflow
|         | | |     `-ArraySubscriptExpr 0x159aaf62940 <col:17, col:57> 'char' lvalue
|         | | |       |-ParenExpr 0x159aaf62810 <col:17, col:37> 'char *'
|         | | |       | `-CStyleCastExpr 0x159aaf627e8 <col:18, col:26> 'char *' <BitCast>
|         | | |       |   `-ImplicitCastExpr 0x159aaf627d0 <col:26> 'void *' <LValueToRValue> part_of_explicit_cast
|         | | |       |     `-DeclRefExpr 0x159aaf62798 <col:26> 'void *' lvalue ParmVar 0x159aaf59bc0 'point_array' 'void *'
|         | | |       `-BinaryOperator 0x159aaf62920 <col:39, col:47> 'unsigned long long' '*'
|         | | |         |-ImplicitCastExpr 0x159aaf62908 <col:39, col:43> 'unsigned long long' <IntegralCast>
|         | | |         | `-BinaryOperator 0x159aaf628b0 <col:39, col:43> 'int' '*'
|         | | |         |   |-IntegerLiteral 0x159aaf62830 <col:39> 'int' 3
|         | | |         |   `-ImplicitCastExpr 0x159aaf62898 <col:41, col:43> 'int' <LValueToRValue>
|         | | |         |     `-ParenExpr 0x159aaf62878 <col:41, col:43> 'int' lvalue
|         | | |         |       `-DeclRefExpr 0x159aaf62858 <line:120:25> 'int' lvalue Var 0x159aaf5bc78 'i' 'int'
|         | | |         `-ImplicitCastExpr 0x159aaf628f0 <line:78:47> 'size_t':'unsigned long long' <LValueToRValue>
|         | | |           `-DeclRefExpr 0x159aaf628d0 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x159aaf59c38 'felem_size' 'size_t':'unsigned long long'
|         | | |-ImplicitCastExpr 0x159aaf62e68 <col:15, col:58> 'const void *' <BitCast>
|         | | | `-ParenExpr 0x159aaf62b78 <col:15, col:58> 'char *'
|         | | |   `-UnaryOperator 0x159aaf62b60 <col:16, col:57> 'char *' prefix '&' cannot overflow
|         | | |     `-ArraySubscriptExpr 0x159aaf62b40 <col:17, col:57> 'char' lvalue
|         | | |       |-ParenExpr 0x159aaf62a10 <col:17, col:37> 'char *'
|         | | |       | `-CStyleCastExpr 0x159aaf629e8 <col:18, col:26> 'char *' <BitCast>
|         | | |       |   `-ImplicitCastExpr 0x159aaf629d0 <col:26> 'void *' <LValueToRValue> part_of_explicit_cast
|         | | |       |     `-DeclRefExpr 0x159aaf62998 <col:26> 'void *' lvalue ParmVar 0x159aaf59bc0 'point_array' 'void *'
|         | | |       `-BinaryOperator 0x159aaf62b20 <col:39, col:47> 'unsigned long long' '*'
|         | | |         |-ImplicitCastExpr 0x159aaf62b08 <col:39, col:43> 'unsigned long long' <IntegralCast>
|         | | |         | `-BinaryOperator 0x159aaf62ab0 <col:39, col:43> 'int' '*'
|         | | |         |   |-IntegerLiteral 0x159aaf62a30 <col:39> 'int' 3
|         | | |         |   `-ImplicitCastExpr 0x159aaf62a98 <col:41, col:43> 'int' <LValueToRValue>
|         | | |         |     `-ParenExpr 0x159aaf62a78 <col:41, col:43> 'int' lvalue
|         | | |         |       `-DeclRefExpr 0x159aaf62a58 <line:120:31> 'int' lvalue Var 0x159aaf5bc78 'i' 'int'
|         | | |         `-ImplicitCastExpr 0x159aaf62af0 <line:78:47> 'size_t':'unsigned long long' <LValueToRValue>
|         | | |           `-DeclRefExpr 0x159aaf62ad0 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x159aaf59c38 'felem_size' 'size_t':'unsigned long long'
|         | | `-ImplicitCastExpr 0x159aaf62e80 <line:80:15, col:64> 'const void *' <BitCast>
|         | |   `-ParenExpr 0x159aaf62de0 <col:15, col:64> 'char *'
|         | |     `-UnaryOperator 0x159aaf62dc8 <col:16, col:63> 'char *' prefix '&' cannot overflow
|         | |       `-ArraySubscriptExpr 0x159aaf62da8 <col:17, col:63> 'char' lvalue
|         | |         |-ParenExpr 0x159aaf62c10 <col:17, col:37> 'char *'
|         | |         | `-CStyleCastExpr 0x159aaf62be8 <col:18, col:26> 'char *' <BitCast>
|         | |         |   `-ImplicitCastExpr 0x159aaf62bd0 <col:26> 'void *' <LValueToRValue> part_of_explicit_cast
|         | |         |     `-DeclRefExpr 0x159aaf62b98 <col:26> 'void *' lvalue ParmVar 0x159aaf59bc0 'point_array' 'void *'
|         | |         `-BinaryOperator 0x159aaf62d88 <col:39, col:53> 'unsigned long long' '*'
|         | |           |-ImplicitCastExpr 0x159aaf62d70 <col:39, col:49> 'unsigned long long' <IntegralCast>
|         | |           | `-ParenExpr 0x159aaf62d18 <col:39, col:49> 'int'
|         | |           |   `-BinaryOperator 0x159aaf62cf8 <col:40, col:48> 'int' '+'
|         | |           |     |-BinaryOperator 0x159aaf62cb0 <col:40, col:44> 'int' '*'
|         | |           |     | |-IntegerLiteral 0x159aaf62c30 <col:40> 'int' 3
|         | |           |     | `-ImplicitCastExpr 0x159aaf62c98 <col:42, col:44> 'int' <LValueToRValue>
|         | |           |     |   `-ParenExpr 0x159aaf62c78 <col:42, col:44> 'int' lvalue
|         | |           |     |     `-DeclRefExpr 0x159aaf62c58 <line:120:37> 'int' lvalue Var 0x159aaf5bc78 'i' 'int'
|         | |           |     `-IntegerLiteral 0x159aaf62cd0 <line:80:48> 'int' 2
|         | |           `-ImplicitCastExpr 0x159aaf62d58 <col:53> 'size_t':'unsigned long long' <LValueToRValue>
|         | |             `-DeclRefExpr 0x159aaf62d38 <col:53> 'size_t':'unsigned long long' lvalue ParmVar 0x159aaf59c38 'felem_size' 'size_t':'unsigned long long'
|         | |-CallExpr 0x159aaf65580 <line:121:13, col:49> 'void'
|         | | |-ImplicitCastExpr 0x159aaf65568 <col:13> 'void (*)(void *, const void *, const void *)' <LValueToRValue>
|         | | | `-DeclRefExpr 0x159aaf62e98 <col:13> 'void (*)(void *, const void *, const void *)' lvalue ParmVar 0x159aaf5b5d0 'felem_mul' 'void (*)(void *, const void *, const void *)'
|         | | |-ImplicitCastExpr 0x159aaf655b8 <line:80:15, col:64> 'void *' <BitCast>
|         | | | `-ParenExpr 0x159aaf63100 <col:15, col:64> 'char *'
|         | | |   `-UnaryOperator 0x159aaf630e8 <col:16, col:63> 'char *' prefix '&' cannot overflow
|         | | |     `-ArraySubscriptExpr 0x159aaf630c8 <col:17, col:63> 'char' lvalue
|         | | |       |-ParenExpr 0x159aaf62f30 <col:17, col:37> 'char *'
|         | | |       | `-CStyleCastExpr 0x159aaf62f08 <col:18, col:26> 'char *' <BitCast>
|         | | |       |   `-ImplicitCastExpr 0x159aaf62ef0 <col:26> 'void *' <LValueToRValue> part_of_explicit_cast
|         | | |       |     `-DeclRefExpr 0x159aaf62eb8 <col:26> 'void *' lvalue ParmVar 0x159aaf59bc0 'point_array' 'void *'
|         | | |       `-BinaryOperator 0x159aaf630a8 <col:39, col:53> 'unsigned long long' '*'
|         | | |         |-ImplicitCastExpr 0x159aaf63090 <col:39, col:49> 'unsigned long long' <IntegralCast>
|         | | |         | `-ParenExpr 0x159aaf63038 <col:39, col:49> 'int'
|         | | |         |   `-BinaryOperator 0x159aaf63018 <col:40, col:48> 'int' '+'
|         | | |         |     |-BinaryOperator 0x159aaf62fd0 <col:40, col:44> 'int' '*'
|         | | |         |     | |-IntegerLiteral 0x159aaf62f50 <col:40> 'int' 3
|         | | |         |     | `-ImplicitCastExpr 0x159aaf62fb8 <col:42, col:44> 'int' <LValueToRValue>
|         | | |         |     |   `-ParenExpr 0x159aaf62f98 <col:42, col:44> 'int' lvalue
|         | | |         |     |     `-DeclRefExpr 0x159aaf62f78 <line:121:25> 'int' lvalue Var 0x159aaf5bc78 'i' 'int'
|         | | |         |     `-IntegerLiteral 0x159aaf62ff0 <line:80:48> 'int' 2
|         | | |         `-ImplicitCastExpr 0x159aaf63078 <col:53> 'size_t':'unsigned long long' <LValueToRValue>
|         | | |           `-DeclRefExpr 0x159aaf63058 <col:53> 'size_t':'unsigned long long' lvalue ParmVar 0x159aaf59c38 'felem_size' 'size_t':'unsigned long long'
|         | | |-ImplicitCastExpr 0x159aaf655d0 <col:15, col:64> 'const void *' <BitCast>
|         | | | `-ParenExpr 0x159aaf653a8 <col:15, col:64> 'char *'
|         | | |   `-UnaryOperator 0x159aaf65390 <col:16, col:63> 'char *' prefix '&' cannot overflow
|         | | |     `-ArraySubscriptExpr 0x159aaf65370 <col:17, col:63> 'char' lvalue
|         | | |       |-ParenExpr 0x159aaf63198 <col:17, col:37> 'char *'
|         | | |       | `-CStyleCastExpr 0x159aaf63170 <col:18, col:26> 'char *' <BitCast>
|         | | |       |   `-ImplicitCastExpr 0x159aaf63158 <col:26> 'void *' <LValueToRValue> part_of_explicit_cast
|         | | |       |     `-DeclRefExpr 0x159aaf63120 <col:26> 'void *' lvalue ParmVar 0x159aaf59bc0 'point_array' 'void *'
|         | | |       `-BinaryOperator 0x159aaf65350 <col:39, col:53> 'unsigned long long' '*'
|         | | |         |-ImplicitCastExpr 0x159aaf65338 <col:39, col:49> 'unsigned long long' <IntegralCast>
|         | | |         | `-ParenExpr 0x159aaf652e0 <col:39, col:49> 'int'
|         | | |         |   `-BinaryOperator 0x159aaf652c0 <col:40, col:48> 'int' '+'
|         | | |         |     |-BinaryOperator 0x159aaf65278 <col:40, col:44> 'int' '*'
|         | | |         |     | |-IntegerLiteral 0x159aaf631b8 <col:40> 'int' 3
|         | | |         |     | `-ImplicitCastExpr 0x159aaf65260 <col:42, col:44> 'int' <LValueToRValue>
|         | | |         |     |   `-ParenExpr 0x159aaf65240 <col:42, col:44> 'int' lvalue
|         | | |         |     |     `-DeclRefExpr 0x159aaf65220 <line:121:31> 'int' lvalue Var 0x159aaf5bc78 'i' 'int'
|         | | |         |     `-IntegerLiteral 0x159aaf65298 <line:80:48> 'int' 2
|         | | |         `-ImplicitCastExpr 0x159aaf65320 <col:53> 'size_t':'unsigned long long' <LValueToRValue>
|         | | |           `-DeclRefExpr 0x159aaf65300 <col:53> 'size_t':'unsigned long long' lvalue ParmVar 0x159aaf59c38 'felem_size' 'size_t':'unsigned long long'
|         | | `-ImplicitCastExpr 0x159aaf655e8 <line:77:23, col:63> 'const void *' <BitCast>
|         | |   `-ParenExpr 0x159aaf65548 <col:23, col:63> 'char *'
|         | |     `-UnaryOperator 0x159aaf65530 <col:24, col:62> 'char *' prefix '&' cannot overflow
|         | |       `-ArraySubscriptExpr 0x159aaf65510 <col:25, col:62> 'char' lvalue
|         | |         |-ParenExpr 0x159aaf65440 <col:25, col:44> 'char *'
|         | |         | `-CStyleCastExpr 0x159aaf65418 <col:26, col:34> 'char *' <BitCast>
|         | |         |   `-ImplicitCastExpr 0x159aaf65400 <col:34> 'void *' <LValueToRValue> part_of_explicit_cast
|         | |         |     `-DeclRefExpr 0x159aaf653c8 <col:34> 'void *' lvalue ParmVar 0x159aaf59cb8 'tmp_felems' 'void *'
|         | |         `-BinaryOperator 0x159aaf654f0 <col:46, col:52> 'unsigned long long' '*'
|         | |           |-ImplicitCastExpr 0x159aaf654c0 <col:46, col:48> 'size_t':'unsigned long long' <LValueToRValue>
|         | |           | `-ParenExpr 0x159aaf65480 <col:46, col:48> 'size_t':'unsigned long long' lvalue
|         | |           |   `-DeclRefExpr 0x159aaf65460 <line:121:45> 'size_t':'unsigned long long' lvalue ParmVar 0x159aaf59b40 'num' 'size_t':'unsigned long long'
|         | |           `-ImplicitCastExpr 0x159aaf654d8 <line:77:52> 'size_t':'unsigned long long' <LValueToRValue>
|         | |             `-DeclRefExpr 0x159aaf654a0 <col:52> 'size_t':'unsigned long long' lvalue ParmVar 0x159aaf59c38 'felem_size' 'size_t':'unsigned long long'
|         | |-CallExpr 0x159aaf65d70 <line:122:13, col:39> 'void'
|         | | |-ImplicitCastExpr 0x159aaf65d58 <col:13> 'void (*)(void *, const void *, const void *)' <LValueToRValue>
|         | | | `-DeclRefExpr 0x159aaf65600 <col:13> 'void (*)(void *, const void *, const void *)' lvalue ParmVar 0x159aaf5b5d0 'felem_mul' 'void (*)(void *, const void *, const void *)'
|         | | |-ImplicitCastExpr 0x159aaf65da8 <line:79:15, col:64> 'void *' <BitCast>
|         | | | `-ParenExpr 0x159aaf65868 <col:15, col:64> 'char *'
|         | | |   `-UnaryOperator 0x159aaf65850 <col:16, col:63> 'char *' prefix '&' cannot overflow
|         | | |     `-ArraySubscriptExpr 0x159aaf65830 <col:17, col:63> 'char' lvalue
|         | | |       |-ParenExpr 0x159aaf65698 <col:17, col:37> 'char *'
|         | | |       | `-CStyleCastExpr 0x159aaf65670 <col:18, col:26> 'char *' <BitCast>
|         | | |       |   `-ImplicitCastExpr 0x159aaf65658 <col:26> 'void *' <LValueToRValue> part_of_explicit_cast
|         | | |       |     `-DeclRefExpr 0x159aaf65620 <col:26> 'void *' lvalue ParmVar 0x159aaf59bc0 'point_array' 'void *'
|         | | |       `-BinaryOperator 0x159aaf65810 <col:39, col:53> 'unsigned long long' '*'
|         | | |         |-ImplicitCastExpr 0x159aaf657f8 <col:39, col:49> 'unsigned long long' <IntegralCast>
|         | | |         | `-ParenExpr 0x159aaf657a0 <col:39, col:49> 'int'
|         | | |         |   `-BinaryOperator 0x159aaf65780 <col:40, col:48> 'int' '+'
|         | | |         |     |-BinaryOperator 0x159aaf65738 <col:40, col:44> 'int' '*'
|         | | |         |     | |-IntegerLiteral 0x159aaf656b8 <col:40> 'int' 3
|         | | |         |     | `-ImplicitCastExpr 0x159aaf65720 <col:42, col:44> 'int' <LValueToRValue>
|         | | |         |     |   `-ParenExpr 0x159aaf65700 <col:42, col:44> 'int' lvalue
|         | | |         |     |     `-DeclRefExpr 0x159aaf656e0 <line:122:25> 'int' lvalue Var 0x159aaf5bc78 'i' 'int'
|         | | |         |     `-IntegerLiteral 0x159aaf65758 <line:79:48> 'int' 1
|         | | |         `-ImplicitCastExpr 0x159aaf657e0 <col:53> 'size_t':'unsigned long long' <LValueToRValue>
|         | | |           `-DeclRefExpr 0x159aaf657c0 <col:53> 'size_t':'unsigned long long' lvalue ParmVar 0x159aaf59c38 'felem_size' 'size_t':'unsigned long long'
|         | | |-ImplicitCastExpr 0x159aaf65dc0 <col:15, col:64> 'const void *' <BitCast>
|         | | | `-ParenExpr 0x159aaf65ad0 <col:15, col:64> 'char *'
|         | | |   `-UnaryOperator 0x159aaf65ab8 <col:16, col:63> 'char *' prefix '&' cannot overflow
|         | | |     `-ArraySubscriptExpr 0x159aaf65a98 <col:17, col:63> 'char' lvalue
|         | | |       |-ParenExpr 0x159aaf65900 <col:17, col:37> 'char *'
|         | | |       | `-CStyleCastExpr 0x159aaf658d8 <col:18, col:26> 'char *' <BitCast>
|         | | |       |   `-ImplicitCastExpr 0x159aaf658c0 <col:26> 'void *' <LValueToRValue> part_of_explicit_cast
|         | | |       |     `-DeclRefExpr 0x159aaf65888 <col:26> 'void *' lvalue ParmVar 0x159aaf59bc0 'point_array' 'void *'
|         | | |       `-BinaryOperator 0x159aaf65a78 <col:39, col:53> 'unsigned long long' '*'
|         | | |         |-ImplicitCastExpr 0x159aaf65a60 <col:39, col:49> 'unsigned long long' <IntegralCast>
|         | | |         | `-ParenExpr 0x159aaf65a08 <col:39, col:49> 'int'
|         | | |         |   `-BinaryOperator 0x159aaf659e8 <col:40, col:48> 'int' '+'
|         | | |         |     |-BinaryOperator 0x159aaf659a0 <col:40, col:44> 'int' '*'
|         | | |         |     | |-IntegerLiteral 0x159aaf65920 <col:40> 'int' 3
|         | | |         |     | `-ImplicitCastExpr 0x159aaf65988 <col:42, col:44> 'int' <LValueToRValue>
|         | | |         |     |   `-ParenExpr 0x159aaf65968 <col:42, col:44> 'int' lvalue
|         | | |         |     |     `-DeclRefExpr 0x159aaf65948 <line:122:31> 'int' lvalue Var 0x159aaf5bc78 'i' 'int'
|         | | |         |     `-IntegerLiteral 0x159aaf659c0 <line:79:48> 'int' 1
|         | | |         `-ImplicitCastExpr 0x159aaf65a48 <col:53> 'size_t':'unsigned long long' <LValueToRValue>
|         | | |           `-DeclRefExpr 0x159aaf65a28 <col:53> 'size_t':'unsigned long long' lvalue ParmVar 0x159aaf59c38 'felem_size' 'size_t':'unsigned long long'
|         | | `-ImplicitCastExpr 0x159aaf65dd8 <line:80:15, col:64> 'const void *' <BitCast>
|         | |   `-ParenExpr 0x159aaf65d38 <col:15, col:64> 'char *'
|         | |     `-UnaryOperator 0x159aaf65d20 <col:16, col:63> 'char *' prefix '&' cannot overflow
|         | |       `-ArraySubscriptExpr 0x159aaf65d00 <col:17, col:63> 'char' lvalue
|         | |         |-ParenExpr 0x159aaf65b68 <col:17, col:37> 'char *'
|         | |         | `-CStyleCastExpr 0x159aaf65b40 <col:18, col:26> 'char *' <BitCast>
|         | |         |   `-ImplicitCastExpr 0x159aaf65b28 <col:26> 'void *' <LValueToRValue> part_of_explicit_cast
|         | |         |     `-DeclRefExpr 0x159aaf65af0 <col:26> 'void *' lvalue ParmVar 0x159aaf59bc0 'point_array' 'void *'
|         | |         `-BinaryOperator 0x159aaf65ce0 <col:39, col:53> 'unsigned long long' '*'
|         | |           |-ImplicitCastExpr 0x159aaf65cc8 <col:39, col:49> 'unsigned long long' <IntegralCast>
|         | |           | `-ParenExpr 0x159aaf65c70 <col:39, col:49> 'int'
|         | |           |   `-BinaryOperator 0x159aaf65c50 <col:40, col:48> 'int' '+'
|         | |           |     |-BinaryOperator 0x159aaf65c08 <col:40, col:44> 'int' '*'
|         | |           |     | |-IntegerLiteral 0x159aaf65b88 <col:40> 'int' 3
|         | |           |     | `-ImplicitCastExpr 0x159aaf65bf0 <col:42, col:44> 'int' <LValueToRValue>
|         | |           |     |   `-ParenExpr 0x159aaf65bd0 <col:42, col:44> 'int' lvalue
|         | |           |     |     `-DeclRefExpr 0x159aaf65bb0 <line:122:37> 'int' lvalue Var 0x159aaf5bc78 'i' 'int'
|         | |           |     `-IntegerLiteral 0x159aaf65c28 <line:80:48> 'int' 2
|         | |           `-ImplicitCastExpr 0x159aaf65cb0 <col:53> 'size_t':'unsigned long long' <LValueToRValue>
|         | |             `-DeclRefExpr 0x159aaf65c90 <col:53> 'size_t':'unsigned long long' lvalue ParmVar 0x159aaf59c38 'felem_size' 'size_t':'unsigned long long'
|         | |-CallExpr 0x159aaf63218 <line:123:13, col:38> 'void'
|         | | |-ImplicitCastExpr 0x159aaf63200 <col:13> 'void (*)(void *, const void *)' <LValueToRValue>
|         | | | `-DeclRefExpr 0x159aaf65df0 <col:13> 'void (*)(void *, const void *)' lvalue ParmVar 0x159aaf5b980 'felem_contract' 'void (*)(void *, const void *)'
|         | | |-ImplicitCastExpr 0x159aaf63248 <line:78:15, col:58> 'void *' <BitCast>
|         | | | `-ParenExpr 0x159aaf65ff0 <col:15, col:58> 'char *'
|         | | |   `-UnaryOperator 0x159aaf65fd8 <col:16, col:57> 'char *' prefix '&' cannot overflow
|         | | |     `-ArraySubscriptExpr 0x159aaf65fb8 <col:17, col:57> 'char' lvalue
|         | | |       |-ParenExpr 0x159aaf65e88 <col:17, col:37> 'char *'
|         | | |       | `-CStyleCastExpr 0x159aaf65e60 <col:18, col:26> 'char *' <BitCast>
|         | | |       |   `-ImplicitCastExpr 0x159aaf65e48 <col:26> 'void *' <LValueToRValue> part_of_explicit_cast
|         | | |       |     `-DeclRefExpr 0x159aaf65e10 <col:26> 'void *' lvalue ParmVar 0x159aaf59bc0 'point_array' 'void *'
|         | | |       `-BinaryOperator 0x159aaf65f98 <col:39, col:47> 'unsigned long long' '*'
|         | | |         |-ImplicitCastExpr 0x159aaf65f80 <col:39, col:43> 'unsigned long long' <IntegralCast>
|         | | |         | `-BinaryOperator 0x159aaf65f28 <col:39, col:43> 'int' '*'
|         | | |         |   |-IntegerLiteral 0x159aaf65ea8 <col:39> 'int' 3
|         | | |         |   `-ImplicitCastExpr 0x159aaf65f10 <col:41, col:43> 'int' <LValueToRValue>
|         | | |         |     `-ParenExpr 0x159aaf65ef0 <col:41, col:43> 'int' lvalue
|         | | |         |       `-DeclRefExpr 0x159aaf65ed0 <line:123:30> 'int' lvalue Var 0x159aaf5bc78 'i' 'int'
|         | | |         `-ImplicitCastExpr 0x159aaf65f68 <line:78:47> 'size_t':'unsigned long long' <LValueToRValue>
|         | | |           `-DeclRefExpr 0x159aaf65f48 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x159aaf59c38 'felem_size' 'size_t':'unsigned long long'
|         | | `-ImplicitCastExpr 0x159aaf63260 <col:15, col:58> 'const void *' <BitCast>
|         | |   `-ParenExpr 0x159aaf661f0 <col:15, col:58> 'char *'
|         | |     `-UnaryOperator 0x159aaf661d8 <col:16, col:57> 'char *' prefix '&' cannot overflow
|         | |       `-ArraySubscriptExpr 0x159aaf661b8 <col:17, col:57> 'char' lvalue
|         | |         |-ParenExpr 0x159aaf66088 <col:17, col:37> 'char *'
|         | |         | `-CStyleCastExpr 0x159aaf66060 <col:18, col:26> 'char *' <BitCast>
|         | |         |   `-ImplicitCastExpr 0x159aaf66048 <col:26> 'void *' <LValueToRValue> part_of_explicit_cast
|         | |         |     `-DeclRefExpr 0x159aaf66010 <col:26> 'void *' lvalue ParmVar 0x159aaf59bc0 'point_array' 'void *'
|         | |         `-BinaryOperator 0x159aaf66198 <col:39, col:47> 'unsigned long long' '*'
|         | |           |-ImplicitCastExpr 0x159aaf66180 <col:39, col:43> 'unsigned long long' <IntegralCast>
|         | |           | `-BinaryOperator 0x159aaf66128 <col:39, col:43> 'int' '*'
|         | |           |   |-IntegerLiteral 0x159aaf660a8 <col:39> 'int' 3
|         | |           |   `-ImplicitCastExpr 0x159aaf66110 <col:41, col:43> 'int' <LValueToRValue>
|         | |           |     `-ParenExpr 0x159aaf660f0 <col:41, col:43> 'int' lvalue
|         | |           |       `-DeclRefExpr 0x159aaf660d0 <line:123:36> 'int' lvalue Var 0x159aaf5bc78 'i' 'int'
|         | |           `-ImplicitCastExpr 0x159aaf66168 <line:78:47> 'size_t':'unsigned long long' <LValueToRValue>
|         | |             `-DeclRefExpr 0x159aaf66148 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x159aaf59c38 'felem_size' 'size_t':'unsigned long long'
|         | |-CallExpr 0x159aaf63780 <line:124:13, col:38> 'void'
|         | | |-ImplicitCastExpr 0x159aaf63768 <col:13> 'void (*)(void *, const void *)' <LValueToRValue>
|         | | | `-DeclRefExpr 0x159aaf63278 <col:13> 'void (*)(void *, const void *)' lvalue ParmVar 0x159aaf5b980 'felem_contract' 'void (*)(void *, const void *)'
|         | | |-ImplicitCastExpr 0x159aaf637b0 <line:79:15, col:64> 'void *' <BitCast>
|         | | | `-ParenExpr 0x159aaf634e0 <col:15, col:64> 'char *'
|         | | |   `-UnaryOperator 0x159aaf634c8 <col:16, col:63> 'char *' prefix '&' cannot overflow
|         | | |     `-ArraySubscriptExpr 0x159aaf634a8 <col:17, col:63> 'char' lvalue
|         | | |       |-ParenExpr 0x159aaf63310 <col:17, col:37> 'char *'
|         | | |       | `-CStyleCastExpr 0x159aaf632e8 <col:18, col:26> 'char *' <BitCast>
|         | | |       |   `-ImplicitCastExpr 0x159aaf632d0 <col:26> 'void *' <LValueToRValue> part_of_explicit_cast
|         | | |       |     `-DeclRefExpr 0x159aaf63298 <col:26> 'void *' lvalue ParmVar 0x159aaf59bc0 'point_array' 'void *'
|         | | |       `-BinaryOperator 0x159aaf63488 <col:39, col:53> 'unsigned long long' '*'
|         | | |         |-ImplicitCastExpr 0x159aaf63470 <col:39, col:49> 'unsigned long long' <IntegralCast>
|         | | |         | `-ParenExpr 0x159aaf63418 <col:39, col:49> 'int'
|         | | |         |   `-BinaryOperator 0x159aaf633f8 <col:40, col:48> 'int' '+'
|         | | |         |     |-BinaryOperator 0x159aaf633b0 <col:40, col:44> 'int' '*'
|         | | |         |     | |-IntegerLiteral 0x159aaf63330 <col:40> 'int' 3
|         | | |         |     | `-ImplicitCastExpr 0x159aaf63398 <col:42, col:44> 'int' <LValueToRValue>
|         | | |         |     |   `-ParenExpr 0x159aaf63378 <col:42, col:44> 'int' lvalue
|         | | |         |     |     `-DeclRefExpr 0x159aaf63358 <line:124:30> 'int' lvalue Var 0x159aaf5bc78 'i' 'int'
|         | | |         |     `-IntegerLiteral 0x159aaf633d0 <line:79:48> 'int' 1
|         | | |         `-ImplicitCastExpr 0x159aaf63458 <col:53> 'size_t':'unsigned long long' <LValueToRValue>
|         | | |           `-DeclRefExpr 0x159aaf63438 <col:53> 'size_t':'unsigned long long' lvalue ParmVar 0x159aaf59c38 'felem_size' 'size_t':'unsigned long long'
|         | | `-ImplicitCastExpr 0x159aaf637c8 <col:15, col:64> 'const void *' <BitCast>
|         | |   `-ParenExpr 0x159aaf63748 <col:15, col:64> 'char *'
|         | |     `-UnaryOperator 0x159aaf63730 <col:16, col:63> 'char *' prefix '&' cannot overflow
|         | |       `-ArraySubscriptExpr 0x159aaf63710 <col:17, col:63> 'char' lvalue
|         | |         |-ParenExpr 0x159aaf63578 <col:17, col:37> 'char *'
|         | |         | `-CStyleCastExpr 0x159aaf63550 <col:18, col:26> 'char *' <BitCast>
|         | |         |   `-ImplicitCastExpr 0x159aaf63538 <col:26> 'void *' <LValueToRValue> part_of_explicit_cast
|         | |         |     `-DeclRefExpr 0x159aaf63500 <col:26> 'void *' lvalue ParmVar 0x159aaf59bc0 'point_array' 'void *'
|         | |         `-BinaryOperator 0x159aaf636f0 <col:39, col:53> 'unsigned long long' '*'
|         | |           |-ImplicitCastExpr 0x159aaf636d8 <col:39, col:49> 'unsigned long long' <IntegralCast>
|         | |           | `-ParenExpr 0x159aaf63680 <col:39, col:49> 'int'
|         | |           |   `-BinaryOperator 0x159aaf63660 <col:40, col:48> 'int' '+'
|         | |           |     |-BinaryOperator 0x159aaf63618 <col:40, col:44> 'int' '*'
|         | |           |     | |-IntegerLiteral 0x159aaf63598 <col:40> 'int' 3
|         | |           |     | `-ImplicitCastExpr 0x159aaf63600 <col:42, col:44> 'int' <LValueToRValue>
|         | |           |     |   `-ParenExpr 0x159aaf635e0 <col:42, col:44> 'int' lvalue
|         | |           |     |     `-DeclRefExpr 0x159aaf635c0 <line:124:36> 'int' lvalue Var 0x159aaf5bc78 'i' 'int'
|         | |           |     `-IntegerLiteral 0x159aaf63638 <line:79:48> 'int' 1
|         | |           `-ImplicitCastExpr 0x159aaf636c0 <col:53> 'size_t':'unsigned long long' <LValueToRValue>
|         | |             `-DeclRefExpr 0x159aaf636a0 <col:53> 'size_t':'unsigned long long' lvalue ParmVar 0x159aaf59c38 'felem_size' 'size_t':'unsigned long long'
|         | `-CallExpr 0x159aaf63a80 <line:125:13, col:27> 'void'
|         |   |-ImplicitCastExpr 0x159aaf63a68 <col:13> 'void (*)(void *)' <LValueToRValue>
|         |   | `-DeclRefExpr 0x159aaf637e0 <col:13> 'void (*)(void *)' lvalue ParmVar 0x159aaf59df0 'felem_one' 'void (*)(void *)'
|         |   `-ImplicitCastExpr 0x159aaf63aa8 <line:80:15, col:64> 'void *' <BitCast>
|         |     `-ParenExpr 0x159aaf63a48 <col:15, col:64> 'char *'
|         |       `-UnaryOperator 0x159aaf63a30 <col:16, col:63> 'char *' prefix '&' cannot overflow
|         |         `-ArraySubscriptExpr 0x159aaf63a10 <col:17, col:63> 'char' lvalue
|         |           |-ParenExpr 0x159aaf63878 <col:17, col:37> 'char *'
|         |           | `-CStyleCastExpr 0x159aaf63850 <col:18, col:26> 'char *' <BitCast>
|         |           |   `-ImplicitCastExpr 0x159aaf63838 <col:26> 'void *' <LValueToRValue> part_of_explicit_cast
|         |           |     `-DeclRefExpr 0x159aaf63800 <col:26> 'void *' lvalue ParmVar 0x159aaf59bc0 'point_array' 'void *'
|         |           `-BinaryOperator 0x159aaf639f0 <col:39, col:53> 'unsigned long long' '*'
|         |             |-ImplicitCastExpr 0x159aaf639d8 <col:39, col:49> 'unsigned long long' <IntegralCast>
|         |             | `-ParenExpr 0x159aaf63980 <col:39, col:49> 'int'
|         |             |   `-BinaryOperator 0x159aaf63960 <col:40, col:48> 'int' '+'
|         |             |     |-BinaryOperator 0x159aaf63918 <col:40, col:44> 'int' '*'
|         |             |     | |-IntegerLiteral 0x159aaf63898 <col:40> 'int' 3
|         |             |     | `-ImplicitCastExpr 0x159aaf63900 <col:42, col:44> 'int' <LValueToRValue>
|         |             |     |   `-ParenExpr 0x159aaf638e0 <col:42, col:44> 'int' lvalue
|         |             |     |     `-DeclRefExpr 0x159aaf638c0 <line:125:25> 'int' lvalue Var 0x159aaf5bc78 'i' 'int'
|         |             |     `-IntegerLiteral 0x159aaf63938 <line:80:48> 'int' 2
|         |             `-ImplicitCastExpr 0x159aaf639c0 <col:53> 'size_t':'unsigned long long' <LValueToRValue>
|         |               `-DeclRefExpr 0x159aaf639a0 <col:53> 'size_t':'unsigned long long' lvalue ParmVar 0x159aaf59c38 'felem_size' 'size_t':'unsigned long long'
|         `-CompoundStmt 0x159aaf63ff8 <line:126:16, line:132:9>
|           `-IfStmt 0x159aaf63fe0 <line:127:13, line:131:60>
|             |-BinaryOperator 0x159aaf63b70 <line:127:17, col:21> 'int' '>'
|             | |-ImplicitCastExpr 0x159aaf63b58 <col:17> 'int' <LValueToRValue>
|             | | `-DeclRefExpr 0x159aaf63b10 <col:17> 'int' lvalue Var 0x159aaf5bc78 'i' 'int'
|             | `-IntegerLiteral 0x159aaf63b30 <col:21> 'int' 0
|             `-CallExpr 0x159aaf63f80 <line:131:17, col:60> 'void'
|               |-ImplicitCastExpr 0x159aaf63f68 <col:17> 'void (*)(void *, const void *)' <LValueToRValue>
|               | `-DeclRefExpr 0x159aaf63b90 <col:17> 'void (*)(void *, const void *)' lvalue ParmVar 0x159aaf5b180 'felem_assign' 'void (*)(void *, const void *)'
|               |-ImplicitCastExpr 0x159aaf63fb0 <line:77:23, col:63> 'void *' <BitCast>
|               | `-ParenExpr 0x159aaf63d90 <col:23, col:63> 'char *'
|               |   `-UnaryOperator 0x159aaf63d78 <col:24, col:62> 'char *' prefix '&' cannot overflow
|               |     `-ArraySubscriptExpr 0x159aaf63d58 <col:25, col:62> 'char' lvalue
|               |       |-ParenExpr 0x159aaf63c28 <col:25, col:44> 'char *'
|               |       | `-CStyleCastExpr 0x159aaf63c00 <col:26, col:34> 'char *' <BitCast>
|               |       |   `-ImplicitCastExpr 0x159aaf63be8 <col:34> 'void *' <LValueToRValue> part_of_explicit_cast
|               |       |     `-DeclRefExpr 0x159aaf63bb0 <col:34> 'void *' lvalue ParmVar 0x159aaf59cb8 'tmp_felems' 'void *'
|               |       `-BinaryOperator 0x159aaf63d38 <col:46, col:52> 'unsigned long long' '*'
|               |         |-ImplicitCastExpr 0x159aaf63d20 <col:46, col:48> 'unsigned long long' <IntegralCast>
|               |         | `-ParenExpr 0x159aaf63cc8 <col:46, col:48> 'int'
|               |         |   `-BinaryOperator 0x159aaf63ca8 <line:131:40, col:44> 'int' '-'
|               |         |     |-ImplicitCastExpr 0x159aaf63c90 <col:40> 'int' <LValueToRValue>
|               |         |     | `-DeclRefExpr 0x159aaf63c48 <col:40> 'int' lvalue Var 0x159aaf5bc78 'i' 'int'
|               |         |     `-IntegerLiteral 0x159aaf63c68 <col:44> 'int' 1
|               |         `-ImplicitCastExpr 0x159aaf63d08 <line:77:52> 'size_t':'unsigned long long' <LValueToRValue>
|               |           `-DeclRefExpr 0x159aaf63ce8 <col:52> 'size_t':'unsigned long long' lvalue ParmVar 0x159aaf59c38 'felem_size' 'size_t':'unsigned long long'
|               `-ImplicitCastExpr 0x159aaf63fc8 <col:23, col:63> 'const void *' <BitCast>
|                 `-ParenExpr 0x159aaf63f48 <col:23, col:63> 'char *'
|                   `-UnaryOperator 0x159aaf63f30 <col:24, col:62> 'char *' prefix '&' cannot overflow
|                     `-ArraySubscriptExpr 0x159aaf63f10 <col:25, col:62> 'char' lvalue
|                       |-ParenExpr 0x159aaf63e28 <col:25, col:44> 'char *'
|                       | `-CStyleCastExpr 0x159aaf63e00 <col:26, col:34> 'char *' <BitCast>
|                       |   `-ImplicitCastExpr 0x159aaf63de8 <col:34> 'void *' <LValueToRValue> part_of_explicit_cast
|                       |     `-DeclRefExpr 0x159aaf63db0 <col:34> 'void *' lvalue ParmVar 0x159aaf59cb8 'tmp_felems' 'void *'
|                       `-BinaryOperator 0x159aaf63ef0 <col:46, col:52> 'unsigned long long' '*'
|                         |-ImplicitCastExpr 0x159aaf63ed8 <col:46, col:48> 'unsigned long long' <IntegralCast>
|                         | `-ImplicitCastExpr 0x159aaf63ea8 <col:46, col:48> 'int' <LValueToRValue>
|                         |   `-ParenExpr 0x159aaf63e68 <col:46, col:48> 'int' lvalue
|                         |     `-DeclRefExpr 0x159aaf63e48 <line:131:58> 'int' lvalue Var 0x159aaf5bc78 'i' 'int'
|                         `-ImplicitCastExpr 0x159aaf63ec0 <line:77:52> 'size_t':'unsigned long long' <LValueToRValue>
|                           `-DeclRefExpr 0x159aaf63e88 <col:52> 'size_t':'unsigned long long' lvalue ParmVar 0x159aaf59c38 'felem_size' 'size_t':'unsigned long long'
`-FunctionDecl 0x159aaf642f8 prev 0x159aaf55368 <line:209:1, line:222:1> line:209:6 ec_GFp_nistp_recode_scalar_bits 'void (unsigned char *, unsigned char *, unsigned char)'
  |-ParmVarDecl 0x159aaf640e0 <col:38, col:53> col:53 used sign 'unsigned char *'
  |-ParmVarDecl 0x159aaf64160 <line:210:38, col:53> col:53 used digit 'unsigned char *'
  |-ParmVarDecl 0x159aaf64210 <col:60, col:74> col:74 used in 'unsigned char'
  `-CompoundStmt 0x159aaf64e40 <line:211:1, line:222:1>
    |-DeclStmt 0x159aaf644c8 <line:212:5, col:23>
    | |-VarDecl 0x159aaf643c8 <col:5, col:19> col:19 used s 'unsigned char'
    | `-VarDecl 0x159aaf64448 <col:5, col:22> col:22 used d 'unsigned char'
    |-BinaryOperator 0x159aaf64668 <line:214:5, col:24> 'unsigned char' '='
    | |-DeclRefExpr 0x159aaf644e0 <col:5> 'unsigned char' lvalue Var 0x159aaf643c8 's' 'unsigned char'
    | `-ImplicitCastExpr 0x159aaf64650 <col:9, col:24> 'unsigned char' <IntegralCast>
    |   `-UnaryOperator 0x159aaf64638 <col:9, col:24> 'int' prefix '~' cannot overflow
    |     `-ParenExpr 0x159aaf64618 <col:10, col:24> 'int'
    |       `-BinaryOperator 0x159aaf645f8 <col:11, col:23> 'int' '-'
    |         |-ParenExpr 0x159aaf645b0 <col:11, col:19> 'int'
    |         | `-BinaryOperator 0x159aaf64590 <col:12, col:18> 'int' '>>'
    |         |   |-ImplicitCastExpr 0x159aaf64578 <col:12> 'int' <IntegralCast>
    |         |   | `-ImplicitCastExpr 0x159aaf64560 <col:12> 'unsigned char' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x159aaf64518 <col:12> 'unsigned char' lvalue ParmVar 0x159aaf64210 'in' 'unsigned char'
    |         |   `-IntegerLiteral 0x159aaf64538 <col:18> 'int' 5
    |         `-IntegerLiteral 0x159aaf645d0 <col:23> 'int' 1
    |-BinaryOperator 0x159aaf64820 <line:216:5, col:25> 'unsigned char' '='
    | |-DeclRefExpr 0x159aaf64688 <col:5> 'unsigned char' lvalue Var 0x159aaf64448 'd' 'unsigned char'
    | `-ImplicitCastExpr 0x159aaf64808 <col:9, col:25> 'unsigned char' <IntegralCast>
    |   `-BinaryOperator 0x159aaf647e8 <col:9, col:25> 'int' '-'
    |     |-BinaryOperator 0x159aaf647a0 <col:9, col:20> 'int' '-'
    |     | |-ParenExpr 0x159aaf64730 <col:9, col:16> 'int'
    |     | | `-BinaryOperator 0x159aaf64710 <col:10, col:15> 'int' '<<'
    |     | |   |-IntegerLiteral 0x159aaf646c0 <col:10> 'int' 1
    |     | |   `-IntegerLiteral 0x159aaf646e8 <col:15> 'int' 6
    |     | `-ImplicitCastExpr 0x159aaf64788 <col:20> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x159aaf64770 <col:20> 'unsigned char' <LValueToRValue>
    |     |     `-DeclRefExpr 0x159aaf64750 <col:20> 'unsigned char' lvalue ParmVar 0x159aaf64210 'in' 'unsigned char'
    |     `-IntegerLiteral 0x159aaf647c0 <col:25> 'int' 1
    |-BinaryOperator 0x159aaf64a70 <line:217:5, col:27> 'unsigned char' '='
    | |-DeclRefExpr 0x159aaf64840 <col:5> 'unsigned char' lvalue Var 0x159aaf64448 'd' 'unsigned char'
    | `-ImplicitCastExpr 0x159aaf64a58 <col:9, col:27> 'unsigned char' <IntegralCast>
    |   `-BinaryOperator 0x159aaf64a38 <col:9, col:27> 'int' '|'
    |     |-ParenExpr 0x159aaf64920 <col:9, col:15> 'int'
    |     | `-BinaryOperator 0x159aaf64900 <col:10, col:14> 'int' '&'
    |     |   |-ImplicitCastExpr 0x159aaf648b8 <col:10> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x159aaf648a0 <col:10> 'unsigned char' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x159aaf64860 <col:10> 'unsigned char' lvalue Var 0x159aaf64448 'd' 'unsigned char'
    |     |   `-ImplicitCastExpr 0x159aaf648e8 <col:14> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x159aaf648d0 <col:14> 'unsigned char' <LValueToRValue>
    |     |       `-DeclRefExpr 0x159aaf64880 <col:14> 'unsigned char' lvalue Var 0x159aaf643c8 's' 'unsigned char'
    |     `-ParenExpr 0x159aaf64a18 <col:19, col:27> 'int'
    |       `-BinaryOperator 0x159aaf649f8 <col:20, col:26> 'int' '&'
    |         |-ImplicitCastExpr 0x159aaf649e0 <col:20> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x159aaf649c8 <col:20> 'unsigned char' <LValueToRValue>
    |         |   `-DeclRefExpr 0x159aaf64940 <col:20> 'unsigned char' lvalue ParmVar 0x159aaf64210 'in' 'unsigned char'
    |         `-UnaryOperator 0x159aaf649b0 <col:25, col:26> 'int' prefix '~' cannot overflow
    |           `-ImplicitCastExpr 0x159aaf64998 <col:26> 'int' <IntegralCast>
    |             `-ImplicitCastExpr 0x159aaf64980 <col:26> 'unsigned char' <LValueToRValue>
    |               `-DeclRefExpr 0x159aaf64960 <col:26> 'unsigned char' lvalue Var 0x159aaf643c8 's' 'unsigned char'
    |-BinaryOperator 0x159aaf64c58 <line:218:5, col:26> 'unsigned char' '='
    | |-DeclRefExpr 0x159aaf64a90 <col:5> 'unsigned char' lvalue Var 0x159aaf64448 'd' 'unsigned char'
    | `-ImplicitCastExpr 0x159aaf64c40 <col:9, col:26> 'unsigned char' <IntegralCast>
    |   `-BinaryOperator 0x159aaf64c20 <col:9, col:26> 'int' '+'
    |     |-ParenExpr 0x159aaf64b48 <col:9, col:16> 'int'
    |     | `-BinaryOperator 0x159aaf64b28 <col:10, col:15> 'int' '>>'
    |     |   |-ImplicitCastExpr 0x159aaf64b10 <col:10> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x159aaf64af8 <col:10> 'unsigned char' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x159aaf64ab0 <col:10> 'unsigned char' lvalue Var 0x159aaf64448 'd' 'unsigned char'
    |     |   `-IntegerLiteral 0x159aaf64ad0 <col:15> 'int' 1
    |     `-ParenExpr 0x159aaf64c00 <col:20, col:26> 'int'
    |       `-BinaryOperator 0x159aaf64be0 <col:21, col:25> 'int' '&'
    |         |-ImplicitCastExpr 0x159aaf64bc8 <col:21> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x159aaf64bb0 <col:21> 'unsigned char' <LValueToRValue>
    |         |   `-DeclRefExpr 0x159aaf64b68 <col:21> 'unsigned char' lvalue Var 0x159aaf64448 'd' 'unsigned char'
    |         `-IntegerLiteral 0x159aaf64b88 <col:25> 'int' 1
    |-BinaryOperator 0x159aaf64d78 <line:220:5, col:17> 'unsigned char' '='
    | |-UnaryOperator 0x159aaf64cb0 <col:5, col:6> 'unsigned char' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x159aaf64c98 <col:6> 'unsigned char *' <LValueToRValue>
    | |   `-DeclRefExpr 0x159aaf64c78 <col:6> 'unsigned char *' lvalue ParmVar 0x159aaf640e0 'sign' 'unsigned char *'
    | `-ImplicitCastExpr 0x159aaf64d60 <col:13, col:17> 'unsigned char' <IntegralCast>
    |   `-BinaryOperator 0x159aaf64d40 <col:13, col:17> 'int' '&'
    |     |-ImplicitCastExpr 0x159aaf64d28 <col:13> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x159aaf64d10 <col:13> 'unsigned char' <LValueToRValue>
    |     |   `-DeclRefExpr 0x159aaf64cc8 <col:13> 'unsigned char' lvalue Var 0x159aaf643c8 's' 'unsigned char'
    |     `-IntegerLiteral 0x159aaf64ce8 <col:17> 'int' 1
    `-BinaryOperator 0x159aaf64e20 <line:221:5, col:14> 'unsigned char' '='
      |-UnaryOperator 0x159aaf64dd0 <col:5, col:6> 'unsigned char' lvalue prefix '*' cannot overflow
      | `-ImplicitCastExpr 0x159aaf64db8 <col:6> 'unsigned char *' <LValueToRValue>
      |   `-DeclRefExpr 0x159aaf64d98 <col:6> 'unsigned char *' lvalue ParmVar 0x159aaf64160 'digit' 'unsigned char *'
      `-ImplicitCastExpr 0x159aaf64e08 <col:14> 'unsigned char' <LValueToRValue>
        `-DeclRefExpr 0x159aaf64de8 <col:14> 'unsigned char' lvalue Var 0x159aaf64448 'd' 'unsigned char'
