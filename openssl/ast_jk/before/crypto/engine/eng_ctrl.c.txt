TranslationUnitDecl 0x1e5ed9d5fa8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1e5ed9d6840 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1e5ed9d6540 '__int128'
|-TypedefDecl 0x1e5ed9d68b0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1e5ed9d6560 'unsigned __int128'
|-TypedefDecl 0x1e5ed9d6be8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1e5ed9d69a0 'struct __NSConstantString_tag'
|   `-Record 0x1e5ed9d6908 '__NSConstantString_tag'
|-TypedefDecl 0x1e5ed9d6c58 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x1e5ed9d6180 'unsigned long long'
|-TypedefDecl 0x1e5ed9d6cf0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1e5ed9d6cb0 'char *'
|   `-BuiltinType 0x1e5ed9d6040 'char'
|-TypedefDecl 0x1e5ed9d6d60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1e5ed9d6cb0 'char *'
|   `-BuiltinType 0x1e5ed9d6040 'char'
|-VarDecl 0x1e5ed9d6e00 <.//openssl//file_jk/before\crypto\engine/eng_int.h:27:1, col:23> col:23 invalid global_engine_lock 'int *' extern
|-TypedefDecl 0x1e5ef35a810 <line:58:1, col:39> col:15 referenced ENGINE_CLEANUP_CB 'void (void)':'void (void)'
| `-ParenType 0x1e5ed9d6f10 'void (void)' sugar
|   `-FunctionProtoType 0x1e5ed9d6ee0 'void (void)' cdecl
|     `-BuiltinType 0x1e5ed9d6000 'void'
|-RecordDecl 0x1e5ef35a868 <line:59:9, line:61:1> line:59:16 struct st_engine_cleanup_item definition
| `-FieldDecl 0x1e5ef35a9a8 <line:60:5, col:24> col:24 cb 'ENGINE_CLEANUP_CB *'
|-TypedefDecl 0x1e5ef35aa58 <line:59:1, line:61:3> col:3 referenced ENGINE_CLEANUP_ITEM 'struct st_engine_cleanup_item':'struct st_engine_cleanup_item'
| `-ElaboratedType 0x1e5ef35aa00 'struct st_engine_cleanup_item' sugar
|   `-RecordType 0x1e5ef35a900 'struct st_engine_cleanup_item'
|     `-Record 0x1e5ef35a868 'st_engine_cleanup_item'
|-FunctionDecl 0x1e5ef35ac00 <line:62:1, col:36> col:1 DEFINE_STACK_OF 'int (ENGINE_CLEANUP_ITEM)'
| `-ParmVarDecl 0x1e5ef35ab00 <col:17> col:36 'ENGINE_CLEANUP_ITEM':'struct st_engine_cleanup_item'
|-FunctionDecl 0x1e5ef35ae28 <line:63:1, col:52> col:6 engine_cleanup_add_first 'void (ENGINE_CLEANUP_CB *)'
| `-ParmVarDecl 0x1e5ef35ad18 <col:31, col:50> col:50 cb 'ENGINE_CLEANUP_CB *'
|-FunctionDecl 0x1e5ef35afa0 <line:64:1, col:51> col:6 engine_cleanup_add_last 'void (ENGINE_CLEANUP_CB *)'
| `-ParmVarDecl 0x1e5ef35aef8 <col:30, col:49> col:49 cb 'ENGINE_CLEANUP_CB *'
|-RecordDecl 0x1e5ef35b060 <line:81:9, col:16> col:16 struct st_engine_table
|-EmptyDecl 0x1e5ef362c68 <line:88:59> col:59
|-TypedefDecl 0x1e5ef362f10 <line:94:1, line:95:61> line:94:15 referenced engine_table_doall_cb 'void (int, int (*)())':'void (int, int (*)())'
| `-ParenType 0x1e5ef362eb0 'void (int, int (*)())' sugar
|   `-FunctionProtoType 0x1e5ef362e70 'void (int, int (*)())' cdecl
|     |-BuiltinType 0x1e5ed9d6000 'void'
|     |-BuiltinType 0x1e5ed9d60a0 'int'
|     `-DecayedType 0x1e5ef362d90 'int (*)()' sugar
|       |-FunctionNoProtoType 0x1e5ef362d10 'int ()' cdecl
|       | `-BuiltinType 0x1e5ed9d60a0 'int'
|       `-PointerType 0x1e5ef362d60 'int (*)()'
|         `-FunctionNoProtoType 0x1e5ef362d10 'int ()' cdecl
|           `-BuiltinType 0x1e5ed9d60a0 'int'
|-FunctionDecl 0x1e5ef363218 <line:96:1, line:97:34> line:96:6 invalid engine_table_doall 'void (int *, engine_table_doall_cb *, void *)'
| |-ParmVarDecl 0x1e5ef362f80 <col:25, col:39> col:39 invalid table 'int *'
| |-ParmVarDecl 0x1e5ef363078 <col:46, col:69> col:69 cb 'engine_table_doall_cb *'
| `-ParmVarDecl 0x1e5ef3630f8 <line:97:25, col:31> col:31 arg 'void *'
|-FunctionDecl 0x1e5ef3633b0 <line:104:1, col:35> col:5 invalid engine_unlocked_init 'int (int *)'
| `-ParmVarDecl 0x1e5ef3632e8 <col:26, col:34> col:34 invalid e 'int *'
|-FunctionDecl 0x1e5ef3635d0 <line:105:1, col:62> col:5 invalid engine_unlocked_finish 'int (int *, int)'
| |-ParmVarDecl 0x1e5ef363470 <col:28, col:36> col:36 invalid e 'int *'
| `-ParmVarDecl 0x1e5ef3634f0 <col:39, col:43> col:43 unlock_for_handlers 'int'
|-FunctionDecl 0x1e5ef3637b8 <line:106:1, col:43> col:5 invalid engine_free_util 'int (int *, int)'
| |-ParmVarDecl 0x1e5ef363698 <col:22, col:30> col:30 invalid e 'int *'
| `-ParmVarDecl 0x1e5ef363718 <col:33, col:37> col:37 locked 'int'
|-FunctionDecl 0x1e5ef35b8e8 <line:113:1, col:35> col:6 invalid engine_set_all_null 'void (int *)'
| `-ParmVarDecl 0x1e5ef35b820 <col:26, col:34> col:34 invalid e 'int *'
|-FunctionDecl 0x1e5ef35ba38 <line:122:1, col:38> col:6 invalid engine_pkey_meths_free 'void (int *)'
| `-ParmVarDecl 0x1e5ef35b9a8 <col:29, col:37> col:37 invalid e 'int *'
|-FunctionDecl 0x1e5ef35bb88 <line:123:1, col:43> col:6 invalid engine_pkey_asn1_meths_free 'void (int *)'
| `-ParmVarDecl 0x1e5ef35baf8 <col:34, col:42> col:42 invalid e 'int *'
|-VarDecl 0x1e5ef35bc48 <line:126:1, col:20> col:20 invalid engine_lock_init 'int' extern
|-RecordDecl 0x1e5ef35bcb0 <line:133:1, line:173:1> line:133:8 invalid struct engine_st definition
| |-FieldDecl 0x1e5ef35bd88 <line:134:5, col:17> col:17 id 'const char *'
| |-FieldDecl 0x1e5ef35bdf8 <line:135:5, col:17> col:17 name 'const char *'
| |-FieldDecl 0x1e5ef35be68 <line:136:5, col:23> col:23 invalid rsa_meth 'const int *'
| |-FieldDecl 0x1e5ef35bed8 <line:137:5, col:23> col:23 invalid dsa_meth 'const int *'
| |-FieldDecl 0x1e5ef35bf48 <line:138:5, col:22> col:22 invalid dh_meth 'const int *'
| |-FieldDecl 0x1e5ef35bfb8 <line:139:5, col:26> col:26 invalid ec_meth 'const int *'
| |-FieldDecl 0x1e5ef35c028 <line:140:5, col:24> col:24 invalid rand_meth 'const int *'
| |-FieldDecl 0x1e5ef35c098 <line:142:5, col:24> col:24 invalid ciphers 'int'
| |-FieldDecl 0x1e5ef35c108 <line:144:5, col:24> col:24 invalid digests 'int'
| |-FieldDecl 0x1e5ef35c178 <line:146:5, col:27> col:27 invalid pkey_meths 'int'
| |-FieldDecl 0x1e5ef35c1e8 <line:148:5, col:32> col:32 invalid pkey_asn1_meths 'int'
| |-FieldDecl 0x1e5ef35c258 <line:149:5, col:29> col:29 invalid destroy 'int'
| |-FieldDecl 0x1e5ef35c2c8 <line:150:5, col:29> col:29 invalid init 'int'
| |-FieldDecl 0x1e5ef35c338 <line:151:5, col:29> col:29 invalid finish 'int'
| |-FieldDecl 0x1e5ef35c3a8 <line:152:5, col:26> col:26 invalid ctrl 'int'
| |-FieldDecl 0x1e5ef35c418 <line:153:5, col:25> col:25 invalid load_privkey 'int'
| |-FieldDecl 0x1e5ef35c488 <line:154:5, col:25> col:25 invalid load_pubkey 'int'
| |-FieldDecl 0x1e5ef35c4f8 <line:155:5, col:32> col:32 invalid load_ssl_client_cert 'int'
| |-FieldDecl 0x1e5ef35c568 <line:156:5, col:28> col:28 invalid cmd_defns 'const int *'
| |-FieldDecl 0x1e5ef35c5d8 <line:157:5, col:9> col:9 flags 'int'
| |-FieldDecl 0x1e5ef35c648 <line:159:5, col:9> col:9 struct_ref 'int'
| |-FieldDecl 0x1e5ef35c6b8 <line:167:5, col:9> col:9 funct_ref 'int'
| |-FieldDecl 0x1e5ef35c728 <line:169:5, col:20> col:20 invalid ex_data 'int'
| |-FieldDecl 0x1e5ef35e878 <line:171:5, col:23> col:23 prev 'struct engine_st *'
| `-FieldDecl 0x1e5ef35e8f8 <line:172:5, col:23> col:23 next 'struct engine_st *'
|-RecordDecl 0x1e5ef35e950 <line:175:9, col:16> col:16 struct st_engine_pile
|-EmptyDecl 0x1e5ef35eb50 <line:177:29> col:29
|-VarDecl 0x1e5ef35eb90 <.//openssl//file_jk/before\crypto\engine\eng_ctrl.c:16:1, col:41> col:20 used int_no_description 'const char *' static cinit
| `-ImplicitCastExpr 0x1e5ef35ec80 <col:41> 'const char *' <NoOp>
|   `-ImplicitCastExpr 0x1e5ef35ec68 <col:41> 'char *' <ArrayToPointerDecay>
|     `-StringLiteral 0x1e5ef35ec38 <col:41> 'char [1]' lvalue ""
|-FunctionDecl 0x1e5ef35ed80 <line:24:1, line:29:1> line:24:12 invalid int_ctrl_cmd_is_null 'int (const int *)' static
| |-ParmVarDecl 0x1e5ef35ecb0 <col:33, col:56> col:56 invalid defn 'const int *'
| `-CompoundStmt 0x1e5ef35ef08 <line:25:1, line:29:1>
|   |-IfStmt 0x1e5ef35eeb8 <line:26:5, line:27:16>
|   | |-OpaqueValueExpr 0x1e5ef35eea0 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1e5ef35ee90 <col:9, col:16>
|   |   `-IntegerLiteral 0x1e5ef35ee68 <col:16> 'int' 1
|   `-ReturnStmt 0x1e5ef35eef8 <line:28:5, col:12>
|     `-IntegerLiteral 0x1e5ef35eed0 <col:12> 'int' 0
|-FunctionDecl 0x1e5ef35f0a0 <line:31:1, line:42:1> line:31:12 invalid int_ctrl_cmd_by_name 'int (const int *, const char *)' static
| |-ParmVarDecl 0x1e5ef35ef40 <col:33, col:56> col:56 invalid defn 'const int *'
| |-ParmVarDecl 0x1e5ef35efc0 <col:62, col:74> col:74 used s 'const char *'
| `-CompoundStmt 0x1e5ef35f5b0 <line:32:1, line:42:1>
|   |-DeclStmt 0x1e5ef35f210 <line:33:5, col:16>
|   | `-VarDecl 0x1e5ef35f180 <col:5, col:15> col:9 used idx 'int' cinit
|   |   `-IntegerLiteral 0x1e5ef35f1e8 <col:15> 'int' 0
|   |-IfStmt 0x1e5ef35f550 <line:38:5, line:40:17>
|   | |-OpaqueValueExpr 0x1e5ef35f538 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1e5ef35f528 <col:9, col:17>
|   |   `-UnaryOperator 0x1e5ef35f510 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x1e5ef35f4e8 <col:17> 'int' 1
|   `-ReturnStmt 0x1e5ef35f5a0 <line:41:5, col:12>
|     `-ImplicitCastExpr 0x1e5ef35f588 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1e5ef35f568 <col:12> 'int' lvalue Var 0x1e5ef35f180 'idx' 'int'
|-FunctionDecl 0x1e5ef35f268 <line:34:44> col:44 implicit used strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x1e5ef35f308 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1e5ef35f370 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1e5ef35f750 <line:44:1, line:59:1> line:44:12 invalid int_ctrl_cmd_by_num 'int (const int *, unsigned int)' static
| |-ParmVarDecl 0x1e5ef35f5f0 <col:32, col:55> col:55 invalid defn 'const int *'
| |-ParmVarDecl 0x1e5ef35f670 <col:61, col:74> col:74 used num 'unsigned int'
| `-CompoundStmt 0x1e5ef363ad0 <line:45:1, line:59:1>
|   |-DeclStmt 0x1e5ef363930 <line:46:5, col:16>
|   | `-VarDecl 0x1e5ef3638a0 <col:5, col:15> col:9 used idx 'int' cinit
|   |   `-IntegerLiteral 0x1e5ef363908 <col:15> 'int' 0
|   |-IfStmt 0x1e5ef363a68 <line:55:5, line:56:16>
|   | |-OpaqueValueExpr 0x1e5ef363a50 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1e5ef363a40 <col:9, col:16>
|   |   `-ImplicitCastExpr 0x1e5ef363a28 <col:16> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x1e5ef363a08 <col:16> 'int' lvalue Var 0x1e5ef3638a0 'idx' 'int'
|   `-ReturnStmt 0x1e5ef363ac0 <line:58:5, col:13>
|     `-UnaryOperator 0x1e5ef363aa8 <col:12, col:13> 'int' prefix '-'
|       `-IntegerLiteral 0x1e5ef363a80 <col:13> 'int' 1
|-FunctionDecl 0x1e5ef363f20 <line:61:1, line:131:1> line:61:12 invalid int_ctrl_helper 'int (int *, int, long, void *, void (*)(void))' static
| |-ParmVarDecl 0x1e5ef363b10 <col:28, col:36> col:36 invalid e 'int *'
| |-ParmVarDecl 0x1e5ef363b90 <col:39, col:43> col:43 used cmd 'int'
| |-ParmVarDecl 0x1e5ef363c10 <col:48, col:53> col:53 used i 'long'
| |-ParmVarDecl 0x1e5ef363c90 <col:56, col:62> col:62 used p 'void *'
| |-ParmVarDecl 0x1e5ef363dc8 <line:62:28, col:43> col:35 f 'void (*)(void)'
| `-CompoundStmt 0x1e5ef36e8d0 <line:63:1, line:131:1>
|   |-DeclStmt 0x1e5ef364080 <line:64:5, col:12>
|   | `-VarDecl 0x1e5ef364018 <col:5, col:9> col:9 used idx 'int'
|   |-DeclStmt 0x1e5ef3641a8 <line:65:5, col:24>
|   | `-VarDecl 0x1e5ef3640b0 <col:5, col:23> col:11 used s 'char *' cinit
|   |   `-CStyleCastExpr 0x1e5ef364180 <col:15, col:23> 'char *' <BitCast>
|   |     `-ImplicitCastExpr 0x1e5ef364168 <col:23> 'void *' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0x1e5ef364118 <col:23> 'void *' lvalue ParmVar 0x1e5ef363c90 'p' 'void *'
|   |-IfStmt 0x1e5ef364290 <line:67:5, line:71:5>
|   | |-OpaqueValueExpr 0x1e5ef364278 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1e5ef364260 <line:67:48, line:71:5>
|   |   `-IfStmt 0x1e5ef364248 <line:68:9, line:69:20>
|   |     |-OpaqueValueExpr 0x1e5ef364230 <<invalid sloc>> '_Bool'
|   |     `-ReturnStmt 0x1e5ef364220 <col:13, col:20>
|   |       `-IntegerLiteral 0x1e5ef3641f8 <col:20> 'int' 0
|   |-IfStmt 0x1e5ef364518 <line:73:5, line:80:5>
|   | |-OpaqueValueExpr 0x1e5ef364500 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1e5ef3644e8 <line:75:49, line:80:5>
|   |   `-IfStmt 0x1e5ef3644d0 <line:76:9, line:79:9>
|   |     |-OpaqueValueExpr 0x1e5ef3644b8 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x1e5ef3644a0 <line:76:24, line:79:9>
|   |       `-ReturnStmt 0x1e5ef364490 <line:78:13, col:21>
|   |         `-UnaryOperator 0x1e5ef364478 <col:20, col:21> 'int' prefix '-'
|   |           `-IntegerLiteral 0x1e5ef364450 <col:21> 'int' 1
|   |-IfStmt 0x1e5ef3646d8 <line:82:5, line:89:5>
|   | |-OpaqueValueExpr 0x1e5ef3646c0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1e5ef3646a8 <line:82:47, line:89:5>
|   |   `-IfStmt 0x1e5ef364670 <line:83:9, line:87:9>
|   |     |-OpaqueValueExpr 0x1e5ef364658 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x1e5ef364640 <line:84:69, line:87:9>
|   |       `-ReturnStmt 0x1e5ef364630 <line:86:13, col:21>
|   |         `-UnaryOperator 0x1e5ef364618 <col:20, col:21> 'int' prefix '-'
|   |           `-IntegerLiteral 0x1e5ef3645f0 <col:21> 'int' 1
|   |-IfStmt 0x1e5ef364868 <line:94:5, line:99:5>
|   | |-OpaqueValueExpr 0x1e5ef364850 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1e5ef364838 <line:96:73, line:99:5>
|   |   `-ReturnStmt 0x1e5ef364828 <line:98:9, col:17>
|   |     `-UnaryOperator 0x1e5ef364810 <col:16, col:17> 'int' prefix '-'
|   |       `-IntegerLiteral 0x1e5ef3647e8 <col:17> 'int' 1
|   |-SwitchStmt 0x1e5ef36dea8 <line:101:5, line:127:5>
|   | |-ImplicitCastExpr 0x1e5ef36de90 <line:101:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1e5ef364880 <col:13> 'int' lvalue ParmVar 0x1e5ef363b90 'cmd' 'int'
|   | `-CompoundStmt 0x1e5ef36e830 <col:18, line:127:5>
|   |   |-UnaryOperator 0x1e5ef36dee8 <line:103:9, col:12> 'int' postfix '++'
|   |   | `-DeclRefExpr 0x1e5ef36dec8 <col:9> 'int' lvalue Var 0x1e5ef364018 'idx' 'int'
|   |   |-IfStmt 0x1e5ef36df98 <line:104:9, line:108:13> has_else
|   |   | |-OpaqueValueExpr 0x1e5ef36df80 <<invalid sloc>> '_Bool'
|   |   | |-ReturnStmt 0x1e5ef36df48 <line:106:13, col:20>
|   |   | | `-IntegerLiteral 0x1e5ef36df20 <col:20> 'int' 0
|   |   | `-NullStmt 0x1e5ef36df78 <line:108:13>
|   |   |-ReturnStmt 0x1e5ef36e4b8 <line:117:9, col:41>
|   |   | `-ImplicitCastExpr 0x1e5ef36e4a0 <col:16, col:41> 'int' <IntegralCast>
|   |   |   `-CallExpr 0x1e5ef36e460 <col:16, col:41> 'unsigned long long'
|   |   |     |-ImplicitCastExpr 0x1e5ef36e448 <col:16> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x1e5ef36e3c8 <col:16> 'unsigned long long (const char *)' Function 0x1e5ef36dff0 'strlen' 'unsigned long long (const char *)'
|   |   |     `-ImplicitCastExpr 0x1e5ef36e488 <col:23> 'const char *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x1e5ef36e3e8 <col:23> 'const char *' lvalue Var 0x1e5ef35eb90 'int_no_description' 'const char *'
|   |   `-ReturnStmt 0x1e5ef36e800 <line:123:9, line:124:47>
|   |     `-CallExpr 0x1e5ef36e778 <line:123:16, line:124:47> 'int'
|   |       |-ImplicitCastExpr 0x1e5ef36e760 <line:123:16> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x1e5ef36e5d0 <col:16> 'int ()' Function 0x1e5ef36e180 'BIO_snprintf' 'int ()'
|   |       |-ImplicitCastExpr 0x1e5ef36e7b8 <col:29> 'char *' <LValueToRValue>
|   |       | `-DeclRefExpr 0x1e5ef36e5f0 <col:29> 'char *' lvalue Var 0x1e5ef3640b0 's' 'char *'
|   |       |-BinaryOperator 0x1e5ef36e700 <col:32, col:61> 'unsigned long long' '+'
|   |       | |-CallExpr 0x1e5ef36e680 <col:32, col:57> 'unsigned long long'
|   |       | | |-ImplicitCastExpr 0x1e5ef36e668 <col:32> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |       | | | `-DeclRefExpr 0x1e5ef36e610 <col:32> 'unsigned long long (const char *)' Function 0x1e5ef36dff0 'strlen' 'unsigned long long (const char *)'
|   |       | | `-ImplicitCastExpr 0x1e5ef36e6a8 <col:39> 'const char *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x1e5ef36e630 <col:39> 'const char *' lvalue Var 0x1e5ef35eb90 'int_no_description' 'const char *'
|   |       | `-ImplicitCastExpr 0x1e5ef36e6e8 <col:61> 'unsigned long long' <IntegralCast>
|   |       |   `-IntegerLiteral 0x1e5ef36e6c0 <col:61> 'int' 1
|   |       |-ImplicitCastExpr 0x1e5ef36e7d0 <col:64> 'char *' <ArrayToPointerDecay>
|   |       | `-StringLiteral 0x1e5ef36e720 <col:64> 'char [3]' lvalue "%s"
|   |       `-ImplicitCastExpr 0x1e5ef36e7e8 <line:124:29> 'const char *' <LValueToRValue>
|   |         `-DeclRefExpr 0x1e5ef36e740 <col:29> 'const char *' lvalue Var 0x1e5ef35eb90 'int_no_description' 'const char *'
|   `-ReturnStmt 0x1e5ef36e8c0 <line:130:5, col:13>
|     `-UnaryOperator 0x1e5ef36e8a8 <col:12, col:13> 'int' prefix '-'
|       `-IntegerLiteral 0x1e5ef36e880 <col:13> 'int' 1
|-FunctionDecl 0x1e5ef36dff0 <line:110:16> col:16 implicit used strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x1e5ef36e090 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1e5ef36ec80 <line:133:1, line:183:1> line:133:5 invalid ENGINE_ctrl 'int (int *, int, long, void *, void (*)(void))'
| |-ParmVarDecl 0x1e5ef36e938 <col:17, col:25> col:25 invalid e 'int *'
| |-ParmVarDecl 0x1e5ef36e9b8 <col:28, col:32> col:32 used cmd 'int'
| |-ParmVarDecl 0x1e5ef36ea38 <col:37, col:42> col:42 used i 'long'
| |-ParmVarDecl 0x1e5ef36eab8 <col:45, col:51> col:51 used p 'void *'
| |-ParmVarDecl 0x1e5ef36ebc8 <col:54, col:69> col:61 used f 'void (*)(void)'
| `-CompoundStmt 0x1e5ef36d788 <line:134:1, line:183:1>
|   |-DeclStmt 0x1e5ef36ee78 <line:135:5, col:32>
|   | |-VarDecl 0x1e5ef36ed78 <col:5, col:9> col:9 used ctrl_exists 'int'
|   | `-VarDecl 0x1e5ef36edf8 <col:5, col:22> col:22 used ref_exists 'int'
|   |-IfStmt 0x1e5ef36cf08 <line:136:5, line:139:5>
|   | |-OpaqueValueExpr 0x1e5ef36cef0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1e5ef36ced8 <line:136:20, line:139:5>
|   |   `-ReturnStmt 0x1e5ef36cec8 <line:138:9, col:16>
|   |     `-IntegerLiteral 0x1e5ef36cea0 <col:16> 'int' 0
|   |-IfStmt 0x1e5ef36d338 <line:144:5, line:147:5>
|   | |-UnaryOperator 0x1e5ef36d2b0 <line:144:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x1e5ef36d298 <col:10> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1e5ef36d278 <col:10> 'int' lvalue Var 0x1e5ef36edf8 'ref_exists' 'int'
|   | `-CompoundStmt 0x1e5ef36d320 <col:22, line:147:5>
|   |   `-ReturnStmt 0x1e5ef36d310 <line:146:9, col:16>
|   |     `-IntegerLiteral 0x1e5ef36d2e8 <col:16> 'int' 0
|   |-SwitchStmt 0x1e5ef36d3a0 <line:152:5, line:176:5>
|   | |-ImplicitCastExpr 0x1e5ef36d388 <line:152:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1e5ef36d350 <col:13> 'int' lvalue ParmVar 0x1e5ef36e9b8 'cmd' 'int'
|   | `-CompoundStmt 0x1e5ef36d608 <col:18, line:176:5>
|   |   |-ReturnStmt 0x1e5ef36d3f8 <line:154:9, col:16>
|   |   | `-ImplicitCastExpr 0x1e5ef36d3e0 <col:16> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1e5ef36d3c0 <col:16> 'int' lvalue Var 0x1e5ef36ed78 'ctrl_exists' 'int'
|   |   |-IfStmt 0x1e5ef36d5c8 <line:165:9, line:173:9>
|   |   | |-UnaryOperator 0x1e5ef36d528 <line:165:13, col:14> 'int' prefix '!' cannot overflow
|   |   | | `-ImplicitCastExpr 0x1e5ef36d510 <col:14> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1e5ef36d4f0 <col:14> 'int' lvalue Var 0x1e5ef36ed78 'ctrl_exists' 'int'
|   |   | `-CompoundStmt 0x1e5ef36d5b0 <col:27, line:173:9>
|   |   |   `-ReturnStmt 0x1e5ef36d5a0 <line:172:13, col:21>
|   |   |     `-UnaryOperator 0x1e5ef36d588 <col:20, col:21> 'int' prefix '-'
|   |   |       `-IntegerLiteral 0x1e5ef36d560 <col:21> 'int' 1
|   |   `-DefaultStmt 0x1e5ef36d5e8 <line:174:5, line:175:9>
|   |     `-BreakStmt 0x1e5ef36d5e0 <col:9>
|   `-IfStmt 0x1e5ef36d6f0 <line:178:5, line:181:5>
|     |-UnaryOperator 0x1e5ef36d668 <line:178:9, col:10> 'int' prefix '!' cannot overflow
|     | `-ImplicitCastExpr 0x1e5ef36d650 <col:10> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x1e5ef36d630 <col:10> 'int' lvalue Var 0x1e5ef36ed78 'ctrl_exists' 'int'
|     `-CompoundStmt 0x1e5ef36d6d8 <col:23, line:181:5>
|       `-ReturnStmt 0x1e5ef36d6c8 <line:180:9, col:16>
|         `-IntegerLiteral 0x1e5ef36d6a0 <col:16> 'int' 0
|-FunctionDecl 0x1e5ef36d8f8 <line:185:1, line:199:1> line:185:5 invalid ENGINE_cmd_is_executable 'int (int *, int)'
| |-ParmVarDecl 0x1e5ef36d7d8 <col:30, col:38> col:38 invalid e 'int *'
| |-ParmVarDecl 0x1e5ef36d858 <col:41, col:45> col:45 used cmd 'int'
| `-CompoundStmt 0x1e5ef36dc90 <line:186:1, line:199:1>
|   |-DeclStmt 0x1e5ef36da40 <line:187:5, col:14>
|   | `-VarDecl 0x1e5ef36d9d8 <col:5, col:9> col:9 used flags 'int'
|   |-IfStmt 0x1e5ef36db78 <line:188:5, line:193:5>
|   | |-OpaqueValueExpr 0x1e5ef36db60 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1e5ef36db48 <line:189:75, line:193:5>
|   |   `-ReturnStmt 0x1e5ef36db38 <line:192:9, col:16>
|   |     `-IntegerLiteral 0x1e5ef36db10 <col:16> 'int' 0
|   |-IfStmt 0x1e5ef36dc40 <line:194:5, line:197:16>
|   | |-OpaqueValueExpr 0x1e5ef36dc28 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1e5ef36dc18 <col:9, col:16>
|   |   `-IntegerLiteral 0x1e5ef36dbf0 <col:16> 'int' 0
|   `-ReturnStmt 0x1e5ef36dc80 <line:198:5, col:12>
|     `-IntegerLiteral 0x1e5ef36dc58 <col:12> 'int' 1
|-FunctionDecl 0x1e5ef3721e0 <line:201:1, line:235:1> line:201:5 invalid ENGINE_ctrl_cmd 'int (int *, const char *, long, void *, void (*)(void), int)'
| |-ParmVarDecl 0x1e5ef36dcd8 <col:21, col:29> col:29 invalid e 'int *'
| |-ParmVarDecl 0x1e5ef36dd58 <col:32, col:44> col:44 used cmd_name 'const char *'
| |-ParmVarDecl 0x1e5ef36ddd8 <line:202:21, col:26> col:26 used i 'long'
| |-ParmVarDecl 0x1e5ef371ed0 <col:29, col:35> col:35 used p 'void *'
| |-ParmVarDecl 0x1e5ef371fe0 <col:38, col:53> col:45 used f 'void (*)(void)'
| |-ParmVarDecl 0x1e5ef372060 <col:56, col:60> col:60 used cmd_optional 'int'
| `-CompoundStmt 0x1e5ef372978 <line:203:1, line:235:1>
|   |-DeclStmt 0x1e5ef372348 <line:204:5, col:12>
|   | `-VarDecl 0x1e5ef3722e0 <col:5, col:9> col:9 used num 'int'
|   |-IfStmt 0x1e5ef372420 <line:206:5, line:209:5>
|   | |-OpaqueValueExpr 0x1e5ef372408 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1e5ef3723f0 <line:206:40, line:209:5>
|   |   `-ReturnStmt 0x1e5ef3723e0 <line:208:9, col:16>
|   |     `-IntegerLiteral 0x1e5ef3723b8 <col:16> 'int' 0
|   |-IfStmt 0x1e5ef3727d0 <line:210:5, line:227:5>
|   | |-OpaqueValueExpr 0x1e5ef3727b8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1e5ef372798 <line:212:65, line:227:5>
|   |   |-IfStmt 0x1e5ef372728 <line:221:9, line:224:9>
|   |   | |-ImplicitCastExpr 0x1e5ef372570 <line:221:13> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1e5ef372538 <col:13> 'int' lvalue ParmVar 0x1e5ef372060 'cmd_optional' 'int'
|   |   | `-CompoundStmt 0x1e5ef372708 <col:27, line:224:9>
|   |   |   |-CallExpr 0x1e5ef3726b0 <line:222:13, col:29> 'int'
|   |   |   | `-ImplicitCastExpr 0x1e5ef372698 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |   |   `-DeclRefExpr 0x1e5ef372678 <col:13> 'int ()' Function 0x1e5ef3725b0 'ERR_clear_error' 'int ()'
|   |   |   `-ReturnStmt 0x1e5ef3726f8 <line:223:13, col:20>
|   |   |     `-IntegerLiteral 0x1e5ef3726d0 <col:20> 'int' 1
|   |   `-ReturnStmt 0x1e5ef372788 <line:226:9, col:16>
|   |     `-IntegerLiteral 0x1e5ef372760 <col:16> 'int' 0
|   |-IfStmt 0x1e5ef372928 <line:232:5, line:233:16>
|   | |-OpaqueValueExpr 0x1e5ef372910 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1e5ef372900 <col:9, col:16>
|   |   `-IntegerLiteral 0x1e5ef3728d8 <col:16> 'int' 1
|   `-ReturnStmt 0x1e5ef372968 <line:234:5, col:12>
|     `-IntegerLiteral 0x1e5ef372940 <col:12> 'int' 0
|-FunctionDecl 0x1e5ef372c40 <line:237:1, line:338:1> line:237:5 invalid ENGINE_ctrl_cmd_string 'int (int *, const char *, const char *, int)'
| |-ParmVarDecl 0x1e5ef3729c8 <col:28, col:36> col:36 invalid e 'int *'
| |-ParmVarDecl 0x1e5ef372a48 <col:39, col:51> col:51 used cmd_name 'const char *'
| |-ParmVarDecl 0x1e5ef372ac8 <col:61, col:73> col:73 used arg 'const char *'
| |-ParmVarDecl 0x1e5ef372b48 <line:238:28, col:32> col:32 used cmd_optional 'int'
| `-CompoundStmt 0x1e5ef373350 <line:239:1, line:338:1>
|   |-DeclStmt 0x1e5ef372e30 <line:240:5, col:19>
|   | |-VarDecl 0x1e5ef372d30 <col:5, col:9> col:9 used num 'int'
|   | `-VarDecl 0x1e5ef372db0 <col:5, col:14> col:14 used flags 'int'
|   |-DeclStmt 0x1e5ef374f00 <line:241:5, col:11>
|   | `-VarDecl 0x1e5ef372e60 <col:5, col:10> col:10 used l 'long'
|   |-DeclStmt 0x1e5ef374f98 <line:242:5, col:14>
|   | `-VarDecl 0x1e5ef374f30 <col:5, col:11> col:11 used ptr 'char *'
|   |-IfStmt 0x1e5ef375070 <line:244:5, line:247:5>
|   | |-OpaqueValueExpr 0x1e5ef375058 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1e5ef375040 <line:244:40, line:247:5>
|   |   `-ReturnStmt 0x1e5ef375030 <line:246:9, col:16>
|   |     `-IntegerLiteral 0x1e5ef375008 <col:16> 'int' 0
|   |-IfStmt 0x1e5ef375330 <line:248:5, line:265:5>
|   | |-OpaqueValueExpr 0x1e5ef375318 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1e5ef3752f8 <line:250:65, line:265:5>
|   |   |-IfStmt 0x1e5ef375288 <line:259:9, line:262:9>
|   |   | |-ImplicitCastExpr 0x1e5ef3751c0 <line:259:13> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1e5ef375188 <col:13> 'int' lvalue ParmVar 0x1e5ef372b48 'cmd_optional' 'int'
|   |   | `-CompoundStmt 0x1e5ef375268 <col:27, line:262:9>
|   |   |   |-CallExpr 0x1e5ef375210 <line:260:13, col:29> 'int'
|   |   |   | `-ImplicitCastExpr 0x1e5ef3751f8 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |   |   `-DeclRefExpr 0x1e5ef3751d8 <col:13> 'int ()' Function 0x1e5ef3725b0 'ERR_clear_error' 'int ()'
|   |   |   `-ReturnStmt 0x1e5ef375258 <line:261:13, col:20>
|   |   |     `-IntegerLiteral 0x1e5ef375230 <col:20> 'int' 1
|   |   `-ReturnStmt 0x1e5ef3752e8 <line:264:9, col:16>
|   |     `-IntegerLiteral 0x1e5ef3752c0 <col:16> 'int' 0
|   |-IfStmt 0x1e5ef3753f0 <line:266:5, line:270:5>
|   | |-OpaqueValueExpr 0x1e5ef3753d8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1e5ef3753c0 <line:266:44, line:270:5>
|   |   `-ReturnStmt 0x1e5ef3753b0 <line:269:9, col:16>
|   |     `-IntegerLiteral 0x1e5ef375388 <col:16> 'int' 0
|   |-IfStmt 0x1e5ef375550 <line:273:5, line:281:5>
|   | |-BinaryOperator 0x1e5ef3754c0 <line:273:9, col:17> 'int' '<'
|   | | |-ImplicitCastExpr 0x1e5ef3754a8 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1e5ef375460 <col:9> 'int' lvalue Var 0x1e5ef372db0 'flags' 'int'
|   | | `-IntegerLiteral 0x1e5ef375480 <col:17> 'int' 0
|   | `-CompoundStmt 0x1e5ef375538 <col:20, line:281:5>
|   |   `-ReturnStmt 0x1e5ef375528 <line:280:9, col:16>
|   |     `-IntegerLiteral 0x1e5ef375500 <col:16> 'int' 0
|   |-IfStmt 0x1e5ef375828 <line:285:5, line:300:5>
|   | |-OpaqueValueExpr 0x1e5ef375810 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1e5ef3757e8 <line:285:43, line:300:5>
|   |   |-IfStmt 0x1e5ef375648 <line:286:9, line:290:9>
|   |   | |-OpaqueValueExpr 0x1e5ef375630 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x1e5ef375618 <line:286:26, line:290:9>
|   |   |   `-ReturnStmt 0x1e5ef375608 <line:289:13, col:20>
|   |   |     `-IntegerLiteral 0x1e5ef3755e0 <col:20> 'int' 0
|   |   |-IfStmt 0x1e5ef375798 <line:297:9, line:298:20>
|   |   | |-OpaqueValueExpr 0x1e5ef375780 <<invalid sloc>> '_Bool'
|   |   | `-ReturnStmt 0x1e5ef375770 <col:13, col:20>
|   |   |   `-IntegerLiteral 0x1e5ef375748 <col:20> 'int' 1
|   |   `-ReturnStmt 0x1e5ef3757d8 <line:299:9, col:16>
|   |     `-IntegerLiteral 0x1e5ef3757b0 <col:16> 'int' 0
|   |-IfStmt 0x1e5ef3758e8 <line:302:5, line:306:5>
|   | |-OpaqueValueExpr 0x1e5ef3758d0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1e5ef3758b8 <line:302:22, line:306:5>
|   |   `-ReturnStmt 0x1e5ef3758a8 <line:305:9, col:16>
|   |     `-IntegerLiteral 0x1e5ef375880 <col:16> 'int' 0
|   |-IfStmt 0x1e5ef375ae0 <line:308:5, line:313:5>
|   | |-OpaqueValueExpr 0x1e5ef375ac8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1e5ef375aa8 <line:308:41, line:313:5>
|   |   |-IfStmt 0x1e5ef375a58 <line:310:9, line:311:20>
|   |   | |-OpaqueValueExpr 0x1e5ef375a40 <<invalid sloc>> '_Bool'
|   |   | `-ReturnStmt 0x1e5ef375a30 <col:13, col:20>
|   |   |   `-IntegerLiteral 0x1e5ef375a08 <col:20> 'int' 1
|   |   `-ReturnStmt 0x1e5ef375a98 <line:312:9, col:16>
|   |     `-IntegerLiteral 0x1e5ef375a70 <col:16> 'int' 0
|   |-IfStmt 0x1e5ef375ba0 <line:320:5, line:324:5>
|   | |-OpaqueValueExpr 0x1e5ef375b88 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1e5ef375b70 <line:320:45, line:324:5>
|   |   `-ReturnStmt 0x1e5ef375b60 <line:323:9, col:16>
|   |     `-IntegerLiteral 0x1e5ef375b38 <col:16> 'int' 0
|   |-BinaryOperator 0x1e5ef372fb0 <line:325:5, col:29> 'long' '='
|   | |-DeclRefExpr 0x1e5ef375bb8 <col:5> 'long' lvalue Var 0x1e5ef372e60 'l' 'long'
|   | `-CallExpr 0x1e5ef372f60 <col:9, col:29> 'long'
|   |   |-ImplicitCastExpr 0x1e5ef372f48 <col:9> 'long (*)(const char *, char **, int)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1e5ef375e50 <col:9> 'long (const char *, char **, int)' Function 0x1e5ef375c60 'strtol' 'long (const char *, char **, int)'
|   |   |-ImplicitCastExpr 0x1e5ef372f98 <col:16> 'const char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1e5ef375e88 <col:16> 'const char *' lvalue ParmVar 0x1e5ef372ac8 'arg' 'const char *'
|   |   |-UnaryOperator 0x1e5ef375ee0 <col:21, col:22> 'char **' prefix '&' cannot overflow
|   |   | `-DeclRefExpr 0x1e5ef375ea8 <col:22> 'char *' lvalue Var 0x1e5ef374f30 'ptr' 'char *'
|   |   `-IntegerLiteral 0x1e5ef372ee0 <col:27> 'int' 10
|   |-IfStmt 0x1e5ef373230 <line:326:5, line:330:5>
|   | |-BinaryOperator 0x1e5ef3731a0 <line:326:9, col:38> 'int' '||'
|   | | |-ParenExpr 0x1e5ef373078 <col:9, col:20> 'int'
|   | | | `-BinaryOperator 0x1e5ef373058 <col:10, col:17> 'int' '=='
|   | | |   |-ImplicitCastExpr 0x1e5ef373010 <col:10> 'const char *' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x1e5ef372fd0 <col:10> 'const char *' lvalue ParmVar 0x1e5ef372ac8 'arg' 'const char *'
|   | | |   `-ImplicitCastExpr 0x1e5ef373040 <col:17> 'const char *' <BitCast>
|   | | |     `-ImplicitCastExpr 0x1e5ef373028 <col:17> 'char *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x1e5ef372ff0 <col:17> 'char *' lvalue Var 0x1e5ef374f30 'ptr' 'char *'
|   | | `-ParenExpr 0x1e5ef373180 <col:25, col:38> 'int'
|   | |   `-BinaryOperator 0x1e5ef373160 <col:26, col:34> 'int' '!='
|   | |     |-ImplicitCastExpr 0x1e5ef373148 <col:26, col:27> 'int' <IntegralCast>
|   | |     | `-ImplicitCastExpr 0x1e5ef373130 <col:26, col:27> 'char' <LValueToRValue>
|   | |     |   `-UnaryOperator 0x1e5ef373100 <col:26, col:27> 'char' lvalue prefix '*' cannot overflow
|   | |     |     `-ImplicitCastExpr 0x1e5ef3730e8 <col:27> 'char *' <LValueToRValue>
|   | |     |       `-DeclRefExpr 0x1e5ef3730c8 <col:27> 'char *' lvalue Var 0x1e5ef374f30 'ptr' 'char *'
|   | |     `-CharacterLiteral 0x1e5ef373118 <col:34> 'int' 0
|   | `-CompoundStmt 0x1e5ef373218 <col:41, line:330:5>
|   |   `-ReturnStmt 0x1e5ef373208 <line:329:9, col:16>
|   |     `-IntegerLiteral 0x1e5ef3731e0 <col:16> 'int' 0
|   |-IfStmt 0x1e5ef373300 <line:335:5, line:336:16>
|   | |-OpaqueValueExpr 0x1e5ef3732e8 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1e5ef3732d8 <col:9, col:16>
|   |   `-IntegerLiteral 0x1e5ef3732b0 <col:16> 'int' 1
|   `-ReturnStmt 0x1e5ef373340 <line:337:5, col:12>
|     `-IntegerLiteral 0x1e5ef373318 <col:12> 'int' 0
`-FunctionDecl 0x1e5ef375c60 <line:325:9> col:9 implicit used strtol 'long (const char *, char **, int)' extern
  |-ParmVarDecl 0x1e5ef375d00 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x1e5ef375d68 <<invalid sloc>> <invalid sloc> 'char **'
  `-ParmVarDecl 0x1e5ef375dd0 <<invalid sloc>> <invalid sloc> 'int'
