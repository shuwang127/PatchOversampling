TranslationUnitDecl 0x2d609b9e788 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x2d609b9f020 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x2d609b9ed20 '__int128'
|-TypedefDecl 0x2d609b9f090 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x2d609b9ed40 'unsigned __int128'
|-TypedefDecl 0x2d609b9f3c8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x2d609b9f180 'struct __NSConstantString_tag'
|   `-Record 0x2d609b9f0e8 '__NSConstantString_tag'
|-TypedefDecl 0x2d609b9f438 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x2d609b9e960 'unsigned long long'
|-TypedefDecl 0x2d609b9f4d0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x2d609b9f490 'char *'
|   `-BuiltinType 0x2d609b9e820 'char'
|-TypedefDecl 0x2d609b9f540 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x2d609b9f490 'char *'
|   `-BuiltinType 0x2d609b9e820 'char'
|-VarDecl 0x2d609b9f5e0 <.//openssl//file_jk/before\crypto\engine/eng_int.h:27:1, col:23> col:23 invalid global_engine_lock 'int *' extern
|-TypedefDecl 0x2d60b520b50 <line:58:1, col:39> col:15 referenced ENGINE_CLEANUP_CB 'void (void)':'void (void)'
| `-ParenType 0x2d609b9f6f0 'void (void)' sugar
|   `-FunctionProtoType 0x2d609b9f6c0 'void (void)' cdecl
|     `-BuiltinType 0x2d609b9e7e0 'void'
|-RecordDecl 0x2d60b520ba8 <line:59:9, line:61:1> line:59:16 struct st_engine_cleanup_item definition
| `-FieldDecl 0x2d60b520ce8 <line:60:5, col:24> col:24 cb 'ENGINE_CLEANUP_CB *'
|-TypedefDecl 0x2d60b520d98 <line:59:1, line:61:3> col:3 referenced ENGINE_CLEANUP_ITEM 'struct st_engine_cleanup_item':'struct st_engine_cleanup_item'
| `-ElaboratedType 0x2d60b520d40 'struct st_engine_cleanup_item' sugar
|   `-RecordType 0x2d60b520c40 'struct st_engine_cleanup_item'
|     `-Record 0x2d60b520ba8 'st_engine_cleanup_item'
|-FunctionDecl 0x2d60b520f40 <line:62:1, col:36> col:1 DEFINE_STACK_OF 'int (ENGINE_CLEANUP_ITEM)'
| `-ParmVarDecl 0x2d60b520e40 <col:17> col:36 'ENGINE_CLEANUP_ITEM':'struct st_engine_cleanup_item'
|-FunctionDecl 0x2d60b521168 <line:63:1, col:52> col:6 engine_cleanup_add_first 'void (ENGINE_CLEANUP_CB *)'
| `-ParmVarDecl 0x2d60b521058 <col:31, col:50> col:50 cb 'ENGINE_CLEANUP_CB *'
|-FunctionDecl 0x2d60b5212e0 <line:64:1, col:51> col:6 engine_cleanup_add_last 'void (ENGINE_CLEANUP_CB *)'
| `-ParmVarDecl 0x2d60b521238 <col:30, col:49> col:49 cb 'ENGINE_CLEANUP_CB *'
|-RecordDecl 0x2d60b5213a0 <line:81:9, col:16> col:16 struct st_engine_table
|-EmptyDecl 0x2d60b527f98 <line:88:59> col:59
|-TypedefDecl 0x2d60b528240 <line:94:1, line:95:61> line:94:15 referenced engine_table_doall_cb 'void (int, int (*)())':'void (int, int (*)())'
| `-ParenType 0x2d60b5281e0 'void (int, int (*)())' sugar
|   `-FunctionProtoType 0x2d60b5281a0 'void (int, int (*)())' cdecl
|     |-BuiltinType 0x2d609b9e7e0 'void'
|     |-BuiltinType 0x2d609b9e880 'int'
|     `-DecayedType 0x2d60b5280c0 'int (*)()' sugar
|       |-FunctionNoProtoType 0x2d60b528040 'int ()' cdecl
|       | `-BuiltinType 0x2d609b9e880 'int'
|       `-PointerType 0x2d60b528090 'int (*)()'
|         `-FunctionNoProtoType 0x2d60b528040 'int ()' cdecl
|           `-BuiltinType 0x2d609b9e880 'int'
|-FunctionDecl 0x2d60b528548 <line:96:1, line:97:34> line:96:6 invalid engine_table_doall 'void (int *, engine_table_doall_cb *, void *)'
| |-ParmVarDecl 0x2d60b5282b0 <col:25, col:39> col:39 invalid table 'int *'
| |-ParmVarDecl 0x2d60b5283a8 <col:46, col:69> col:69 cb 'engine_table_doall_cb *'
| `-ParmVarDecl 0x2d60b528428 <line:97:25, col:31> col:31 arg 'void *'
|-FunctionDecl 0x2d60b5286e0 <line:104:1, col:35> col:5 invalid engine_unlocked_init 'int (int *)'
| `-ParmVarDecl 0x2d60b528618 <col:26, col:34> col:34 invalid e 'int *'
|-FunctionDecl 0x2d60b528900 <line:105:1, col:62> col:5 invalid engine_unlocked_finish 'int (int *, int)'
| |-ParmVarDecl 0x2d60b5287a0 <col:28, col:36> col:36 invalid e 'int *'
| `-ParmVarDecl 0x2d60b528820 <col:39, col:43> col:43 unlock_for_handlers 'int'
|-FunctionDecl 0x2d60b528ae8 <line:106:1, col:43> col:5 invalid engine_free_util 'int (int *, int)'
| |-ParmVarDecl 0x2d60b5289c8 <col:22, col:30> col:30 invalid e 'int *'
| `-ParmVarDecl 0x2d60b528a48 <col:33, col:37> col:37 locked 'int'
|-FunctionDecl 0x2d60b528c98 <line:113:1, col:35> col:6 invalid engine_set_all_null 'void (int *)'
| `-ParmVarDecl 0x2d60b528bd0 <col:26, col:34> col:34 invalid e 'int *'
|-FunctionDecl 0x2d60b528de8 <line:122:1, col:38> col:6 invalid engine_pkey_meths_free 'void (int *)'
| `-ParmVarDecl 0x2d60b528d58 <col:29, col:37> col:37 invalid e 'int *'
|-FunctionDecl 0x2d60b528f38 <line:123:1, col:43> col:6 invalid engine_pkey_asn1_meths_free 'void (int *)'
| `-ParmVarDecl 0x2d60b528ea8 <col:34, col:42> col:42 invalid e 'int *'
|-VarDecl 0x2d60b528ff8 <line:126:1, col:20> col:20 invalid engine_lock_init 'int' extern
|-RecordDecl 0x2d60b529060 <line:133:1, line:173:1> line:133:8 invalid struct engine_st definition
| |-FieldDecl 0x2d60b529138 <line:134:5, col:17> col:17 id 'const char *'
| |-FieldDecl 0x2d60b5291a8 <line:135:5, col:17> col:17 name 'const char *'
| |-FieldDecl 0x2d60b529218 <line:136:5, col:23> col:23 invalid rsa_meth 'const int *'
| |-FieldDecl 0x2d60b529288 <line:137:5, col:23> col:23 invalid dsa_meth 'const int *'
| |-FieldDecl 0x2d60b5292f8 <line:138:5, col:22> col:22 invalid dh_meth 'const int *'
| |-FieldDecl 0x2d60b529368 <line:139:5, col:26> col:26 invalid ec_meth 'const int *'
| |-FieldDecl 0x2d60b5293d8 <line:140:5, col:24> col:24 invalid rand_meth 'const int *'
| |-FieldDecl 0x2d60b529448 <line:142:5, col:24> col:24 invalid ciphers 'int'
| |-FieldDecl 0x2d60b5294b8 <line:144:5, col:24> col:24 invalid digests 'int'
| |-FieldDecl 0x2d60b529528 <line:146:5, col:27> col:27 invalid pkey_meths 'int'
| |-FieldDecl 0x2d60b529598 <line:148:5, col:32> col:32 invalid pkey_asn1_meths 'int'
| |-FieldDecl 0x2d60b529608 <line:149:5, col:29> col:29 invalid destroy 'int'
| |-FieldDecl 0x2d60b529678 <line:150:5, col:29> col:29 invalid init 'int'
| |-FieldDecl 0x2d60b5296e8 <line:151:5, col:29> col:29 invalid finish 'int'
| |-FieldDecl 0x2d60b529758 <line:152:5, col:26> col:26 invalid ctrl 'int'
| |-FieldDecl 0x2d60b5297c8 <line:153:5, col:25> col:25 invalid load_privkey 'int'
| |-FieldDecl 0x2d60b529838 <line:154:5, col:25> col:25 invalid load_pubkey 'int'
| |-FieldDecl 0x2d60b5298a8 <line:155:5, col:32> col:32 invalid load_ssl_client_cert 'int'
| |-FieldDecl 0x2d60b529918 <line:156:5, col:28> col:28 invalid cmd_defns 'const int *'
| |-FieldDecl 0x2d60b529988 <line:157:5, col:9> col:9 flags 'int'
| |-FieldDecl 0x2d60b5299f8 <line:159:5, col:9> col:9 struct_ref 'int'
| |-FieldDecl 0x2d60b529a68 <line:167:5, col:9> col:9 funct_ref 'int'
| |-FieldDecl 0x2d60b529ad8 <line:169:5, col:20> col:20 invalid ex_data 'int'
| |-FieldDecl 0x2d60b521b88 <line:171:5, col:23> col:23 prev 'struct engine_st *'
| `-FieldDecl 0x2d60b521c08 <line:172:5, col:23> col:23 next 'struct engine_st *'
|-RecordDecl 0x2d60b521c60 <line:175:9, col:16> col:16 struct st_engine_pile
|-EmptyDecl 0x2d60b521e60 <line:177:29> col:29
|-FunctionDecl 0x2d60b521f38 <.//openssl//file_jk/before\crypto\engine\eng_dyn.c:21:1, col:34> col:12 invalid dynamic_init 'int (int *)' static
| `-ParmVarDecl 0x2d60b521ea0 <col:25, col:33> col:33 invalid e 'int *'
|-FunctionDecl 0x2d60b522090 <line:22:1, col:36> col:12 invalid dynamic_finish 'int (int *)' static
| `-ParmVarDecl 0x2d60b521ff8 <col:27, col:35> col:35 invalid e 'int *'
|-FunctionDecl 0x2d60b522560 <line:23:1, line:24:41> line:23:12 invalid dynamic_ctrl 'int (int *, int, long, void *, void (*)(void))' static
| |-ParmVarDecl 0x2d60b522150 <col:25, col:33> col:33 invalid e 'int *'
| |-ParmVarDecl 0x2d60b5221d0 <col:36, col:40> col:40 cmd 'int'
| |-ParmVarDecl 0x2d60b522250 <col:45, col:50> col:50 i 'long'
| |-ParmVarDecl 0x2d60b5222d0 <col:53, col:59> col:59 p 'void *'
| `-ParmVarDecl 0x2d60b522408 <line:24:25, col:40> col:32 f 'void (*)(void)'
|-RecordDecl 0x2d60b522628 <line:26:9, col:16> col:16 struct st_dynamic_data_ctx
|-TypedefDecl 0x2d60b522738 <col:1, col:36> col:36 referenced dynamic_data_ctx 'struct st_dynamic_data_ctx':'struct st_dynamic_data_ctx'
| `-ElaboratedType 0x2d60b5226e0 'struct st_dynamic_data_ctx' sugar
|   `-RecordType 0x2d60b5226c0 'struct st_dynamic_data_ctx'
|     `-Record 0x2d60b52a570 'st_dynamic_data_ctx'
|-FunctionDecl 0x2d60b5229d0 <line:28:1, col:57> col:12 invalid dynamic_load 'int (int *, dynamic_data_ctx *)' static
| |-ParmVarDecl 0x2d60b5227c0 <col:25, col:33> col:33 invalid e 'int *'
| `-ParmVarDecl 0x2d60b5228b8 <col:36, col:54> col:54 ctx 'dynamic_data_ctx *'
|-VarDecl 0x2d60b522a98 <line:39:1, col:40> col:20 used engine_dynamic_id 'const char *' static cinit
| `-ImplicitCastExpr 0x2d60b529c10 <col:40> 'const char *' <NoOp>
|   `-ImplicitCastExpr 0x2d60b529bf8 <col:40> 'char *' <ArrayToPointerDecay>
|     `-StringLiteral 0x2d60b522b38 <col:40> 'char [8]' lvalue "dynamic"
|-VarDecl 0x2d60b529c40 <line:40:1, col:42> col:20 used engine_dynamic_name 'const char *' static cinit
| `-ImplicitCastExpr 0x2d60b529d50 <col:42> 'const char *' <NoOp>
|   `-ImplicitCastExpr 0x2d60b529d38 <col:42> 'char *' <ArrayToPointerDecay>
|     `-StringLiteral 0x2d60b529ce8 <col:42> 'char [31]' lvalue "Dynamic engine loading support"
|-VarDecl 0x2d60b529df0 <line:41:1, <invalid sloc>> col:30 invalid dynamic_cmd_defns 'const int []' static
|-RecordDecl 0x2d60b52a570 prev 0x2d60b522628 <line:78:1, line:112:1> line:78:8 invalid struct st_dynamic_data_ctx definition
| |-FieldDecl 0x2d60b52a608 <line:80:5, col:10> col:10 invalid dynamic_dso 'int *'
| |-FieldDecl 0x2d60b52a678 <line:84:5, col:24> col:24 invalid v_check 'int'
| |-FieldDecl 0x2d60b52a6e8 <line:88:5, col:25> col:25 invalid bind_engine 'int'
| |-FieldDecl 0x2d60b52a758 <line:90:5, col:11> col:11 referenced DYNAMIC_LIBNAME 'char *'
| |-FieldDecl 0x2d60b52a7c8 <line:92:5, col:9> col:9 referenced no_vcheck 'int'
| |-FieldDecl 0x2d60b52a838 <line:94:5, col:11> col:11 referenced engine_id 'char *'
| |-FieldDecl 0x2d60b52a8a8 <line:100:5, col:9> col:9 referenced list_add_value 'int'
| |-FieldDecl 0x2d60b52a918 <line:102:5, col:17> col:17 referenced DYNAMIC_F1 'const char *'
| |-FieldDecl 0x2d60b52a988 <line:104:5, col:17> col:17 referenced DYNAMIC_F2 'const char *'
| |-FieldDecl 0x2d60b52a9f8 <line:109:5, col:9> col:9 referenced dir_load 'int'
| `-FieldDecl 0x2d60b52aa78 <line:111:5, <invalid sloc>> col:5 invalid STACK_OF 'int ()'
|-VarDecl 0x2d60b52aae8 <line:118:1, col:35> col:12 used dynamic_ex_data_idx 'int' static cinit
| `-UnaryOperator 0x2d60b52ab78 <col:34, col:35> 'int' prefix '-'
|   `-IntegerLiteral 0x2d60b52ab50 <col:35> 'int' 1
|-FunctionDecl 0x2d60b536cf8 <line:120:1, line:123:1> line:120:13 used int_free_str 'void (char *)' static
| |-ParmVarDecl 0x2d60b536c20 <col:26, col:32> col:32 used s 'char *'
| `-CompoundStmt 0x2d60b536f40 <line:121:1, line:123:1>
|   `-CallExpr 0x2d60b536f00 <line:122:5, col:19> 'int'
|     |-ImplicitCastExpr 0x2d60b536ee8 <col:5> 'int (*)()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x2d60b536ea8 <col:5> 'int ()' Function 0x2d60b536de0 'OPENSSL_free' 'int ()'
|     `-ImplicitCastExpr 0x2d60b536f28 <col:18> 'char *' <LValueToRValue>
|       `-DeclRefExpr 0x2d60b536ec8 <col:18> 'char *' lvalue ParmVar 0x2d60b536c20 's' 'char *'
|-FunctionDecl 0x2d60b537308 <line:134:1, line:146:1> line:134:13 invalid dynamic_data_ctx_free_func 'void (void *, void *, int *, int, long, void *)' static
| |-ParmVarDecl 0x2d60b536f70 <col:40, col:46> col:46 parent 'void *'
| |-ParmVarDecl 0x2d60b536ff0 <col:54, col:60> col:60 used ptr 'void *'
| |-ParmVarDecl 0x2d60b537070 <line:135:40, col:56> col:56 invalid ad 'int *'
| |-ParmVarDecl 0x2d60b5370f0 <col:60, col:64> col:64 idx 'int'
| |-ParmVarDecl 0x2d60b537170 <col:69, col:74> col:74 argl 'long'
| |-ParmVarDecl 0x2d60b5371f0 <line:136:40, col:46> col:46 argp 'void *'
| `-CompoundStmt 0x2d60b537aa8 <line:137:1, line:146:1>
|   `-IfStmt 0x2d60b537a90 <line:138:5, line:145:5>
|     |-ImplicitCastExpr 0x2d60b537428 <line:138:9> 'void *' <LValueToRValue>
|     | `-DeclRefExpr 0x2d60b5373f0 <col:9> 'void *' lvalue ParmVar 0x2d60b536ff0 'ptr' 'void *'
|     `-CompoundStmt 0x2d60b537a60 <col:14, line:145:5>
|       |-DeclStmt 0x2d60b537528 <line:139:9, col:56>
|       | `-VarDecl 0x2d60b537450 <col:9, col:53> col:27 used ctx 'dynamic_data_ctx *' cinit
|       |   `-CStyleCastExpr 0x2d60b537500 <col:33, col:53> 'dynamic_data_ctx *' <BitCast>
|       |     `-ImplicitCastExpr 0x2d60b5374e8 <col:53> 'void *' <LValueToRValue> part_of_explicit_cast
|       |       `-DeclRefExpr 0x2d60b5374b8 <col:53> 'void *' lvalue ParmVar 0x2d60b536ff0 'ptr' 'void *'
|       |-CallExpr 0x2d60b537740 <line:141:9, col:42> 'int'
|       | |-ImplicitCastExpr 0x2d60b537728 <col:9> 'int (*)()' <FunctionToPointerDecay>
|       | | `-DeclRefExpr 0x2d60b5376a0 <col:9> 'int ()' Function 0x2d60b536de0 'OPENSSL_free' 'int ()'
|       | `-ImplicitCastExpr 0x2d60b537768 <col:22, col:27> 'char *' <LValueToRValue>
|       |   `-MemberExpr 0x2d60b5376f8 <col:22, col:27> 'char *' lvalue ->DYNAMIC_LIBNAME 0x2d60b52a758
|       |     `-ImplicitCastExpr 0x2d60b5376e0 <col:22> 'dynamic_data_ctx *' <LValueToRValue>
|       |       `-DeclRefExpr 0x2d60b5376c0 <col:22> 'dynamic_data_ctx *' lvalue Var 0x2d60b537450 'ctx' 'dynamic_data_ctx *'
|       |-CallExpr 0x2d60b537820 <line:142:9, col:36> 'int'
|       | |-ImplicitCastExpr 0x2d60b537808 <col:9> 'int (*)()' <FunctionToPointerDecay>
|       | | `-DeclRefExpr 0x2d60b537780 <col:9> 'int ()' Function 0x2d60b536de0 'OPENSSL_free' 'int ()'
|       | `-ImplicitCastExpr 0x2d60b537848 <col:22, col:27> 'char *' <LValueToRValue>
|       |   `-MemberExpr 0x2d60b5377d8 <col:22, col:27> 'char *' lvalue ->engine_id 0x2d60b52a838
|       |     `-ImplicitCastExpr 0x2d60b5377c0 <col:22> 'dynamic_data_ctx *' <LValueToRValue>
|       |       `-DeclRefExpr 0x2d60b5377a0 <col:22> 'dynamic_data_ctx *' lvalue Var 0x2d60b537450 'ctx' 'dynamic_data_ctx *'
|       `-CallExpr 0x2d60b537a20 <line:144:9, col:25> 'int'
|         |-ImplicitCastExpr 0x2d60b537a08 <col:9> 'int (*)()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x2d60b5379c8 <col:9> 'int ()' Function 0x2d60b536de0 'OPENSSL_free' 'int ()'
|         `-ImplicitCastExpr 0x2d60b537a48 <col:22> 'dynamic_data_ctx *' <LValueToRValue>
|           `-DeclRefExpr 0x2d60b5379e8 <col:22> 'dynamic_data_ctx *' lvalue Var 0x2d60b537450 'ctx' 'dynamic_data_ctx *'
|-FunctionDecl 0x2d60b534cb0 <line:154:1, line:192:1> line:154:12 invalid dynamic_set_data_ctx 'int (int *, dynamic_data_ctx **)' static
| |-ParmVarDecl 0x2d60b537ad8 <col:33, col:41> col:41 invalid e 'int *'
| |-ParmVarDecl 0x2d60b537bb0 <col:44, col:63> col:63 used ctx 'dynamic_data_ctx **'
| `-CompoundStmt 0x2d60b536158 <line:155:1, line:192:1>
|   |-DeclStmt 0x2d60b534fe8 <line:156:5, col:53>
|   | `-VarDecl 0x2d60b534d88 <col:5, col:52> col:23 used c 'dynamic_data_ctx *' cinit
|   |   `-ImplicitCastExpr 0x2d60b534fd0 <col:27, col:52> 'dynamic_data_ctx *' <IntegralToPointer>
|   |     `-CallExpr 0x2d60b534fa8 <col:27, col:52> 'int'
|   |       |-ImplicitCastExpr 0x2d60b534f90 <col:27> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x2d60b534ee0 <col:27> 'int ()' Function 0x2d60b534e18 'OPENSSL_zalloc' 'int ()'
|   |       `-UnaryExprOrTypeTraitExpr 0x2d60b534f70 <col:42, col:51> 'unsigned long long' sizeof
|   |         `-ParenExpr 0x2d60b534f50 <col:48, col:51> 'dynamic_data_ctx':'struct st_dynamic_data_ctx' lvalue
|   |           `-UnaryOperator 0x2d60b534f38 <col:49, col:50> 'dynamic_data_ctx':'struct st_dynamic_data_ctx' lvalue prefix '*' cannot overflow
|   |             `-ImplicitCastExpr 0x2d60b534f20 <col:50> 'dynamic_data_ctx *' <LValueToRValue>
|   |               `-DeclRefExpr 0x2d60b534f00 <col:50> 'dynamic_data_ctx *' lvalue Var 0x2d60b534d88 'c' 'dynamic_data_ctx *' non_odr_use_unevaluated
|   |-DeclStmt 0x2d60b5350a8 <line:157:5, col:16>
|   | `-VarDecl 0x2d60b535018 <col:5, col:15> col:9 used ret 'int' cinit
|   |   `-IntegerLiteral 0x2d60b535080 <col:15> 'int' 1
|   |-IfStmt 0x2d60b535270 <line:159:5, line:162:5>
|   | |-OpaqueValueExpr 0x2d60b535258 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x2d60b535240 <line:159:20, line:162:5>
|   |   `-ReturnStmt 0x2d60b535230 <line:161:9, col:16>
|   |     `-IntegerLiteral 0x2d60b535208 <col:16> 'int' 0
|   |-IfStmt 0x2d60b535568 <line:164:5, line:168:5>
|   | |-OpaqueValueExpr 0x2d60b535550 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x2d60b535530 <line:164:26, line:168:5>
|   |   |-CallExpr 0x2d60b5354b8 <line:166:9, col:23> 'int'
|   |   | |-ImplicitCastExpr 0x2d60b5354a0 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x2d60b535460 <col:9> 'int ()' Function 0x2d60b536de0 'OPENSSL_free' 'int ()'
|   |   | `-ImplicitCastExpr 0x2d60b5354e0 <col:22> 'dynamic_data_ctx *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x2d60b535480 <col:22> 'dynamic_data_ctx *' lvalue Var 0x2d60b534d88 'c' 'dynamic_data_ctx *'
|   |   `-ReturnStmt 0x2d60b535520 <line:167:9, col:16>
|   |     `-IntegerLiteral 0x2d60b5354f8 <col:16> 'int' 0
|   |-BinaryOperator 0x2d60b535638 <line:169:5, col:21> 'const char *' '='
|   | |-MemberExpr 0x2d60b5355b8 <col:5, col:8> 'const char *' lvalue ->DYNAMIC_F1 0x2d60b52a918
|   | | `-ImplicitCastExpr 0x2d60b5355a0 <col:5> 'dynamic_data_ctx *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2d60b535580 <col:5> 'dynamic_data_ctx *' lvalue Var 0x2d60b534d88 'c' 'dynamic_data_ctx *'
|   | `-ImplicitCastExpr 0x2d60b535620 <col:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x2d60b535608 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x2d60b5355e8 <col:21> 'char [8]' lvalue "v_check"
|   |-BinaryOperator 0x2d60b535750 <line:170:5, col:21> 'const char *' '='
|   | |-MemberExpr 0x2d60b535690 <col:5, col:8> 'const char *' lvalue ->DYNAMIC_F2 0x2d60b52a988
|   | | `-ImplicitCastExpr 0x2d60b535678 <col:5> 'dynamic_data_ctx *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2d60b535658 <col:5> 'dynamic_data_ctx *' lvalue Var 0x2d60b534d88 'c' 'dynamic_data_ctx *'
|   | `-ImplicitCastExpr 0x2d60b535738 <col:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x2d60b535720 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x2d60b5356f8 <col:21> 'char [12]' lvalue "bind_engine"
|   |-BinaryOperator 0x2d60b535800 <line:171:5, col:19> 'int' '='
|   | |-MemberExpr 0x2d60b5357a8 <col:5, col:8> 'int' lvalue ->dir_load 0x2d60b52a9f8
|   | | `-ImplicitCastExpr 0x2d60b535790 <col:5> 'dynamic_data_ctx *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2d60b535770 <col:5> 'dynamic_data_ctx *' lvalue Var 0x2d60b534d88 'c' 'dynamic_data_ctx *'
|   | `-IntegerLiteral 0x2d60b5357d8 <col:19> 'int' 1
|   |-IfStmt 0x2d60b535dd0 <line:173:5, line:182:5>
|   | |-OpaqueValueExpr 0x2d60b535db8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x2d60b535da0 <line:175:18, line:182:5>
|   |   `-IfStmt 0x2d60b535d88 <line:178:9, line:181:9>
|   |     |-ImplicitCastExpr 0x2d60b535c90 <line:178:13> 'int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x2d60b535c70 <col:13> 'int' lvalue Var 0x2d60b535018 'ret' 'int'
|   |     `-CompoundStmt 0x2d60b535d70 <col:18, line:181:9>
|   |       `-BinaryOperator 0x2d60b535d30 <line:179:13, col:20> 'dynamic_data_ctx *' '='
|   |         |-UnaryOperator 0x2d60b535ce0 <col:13, col:14> 'dynamic_data_ctx *' lvalue prefix '*' cannot overflow
|   |         | `-ImplicitCastExpr 0x2d60b535cc8 <col:14> 'dynamic_data_ctx **' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x2d60b535ca8 <col:14> 'dynamic_data_ctx **' lvalue ParmVar 0x2d60b537bb0 'ctx' 'dynamic_data_ctx **'
|   |         `-ImplicitCastExpr 0x2d60b535d18 <col:20> 'dynamic_data_ctx *' <LValueToRValue>
|   |           `-DeclRefExpr 0x2d60b535cf8 <col:20> 'dynamic_data_ctx *' lvalue Var 0x2d60b534d88 'c' 'dynamic_data_ctx *'
|   |-CallExpr 0x2d60b5360d0 <line:190:5, col:19> 'int'
|   | |-ImplicitCastExpr 0x2d60b5360b8 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x2d60b536078 <col:5> 'int ()' Function 0x2d60b536de0 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x2d60b5360f8 <col:18> 'dynamic_data_ctx *' <LValueToRValue>
|   |   `-DeclRefExpr 0x2d60b536098 <col:18> 'dynamic_data_ctx *' lvalue Var 0x2d60b534d88 'c' 'dynamic_data_ctx *'
|   `-ReturnStmt 0x2d60b536148 <line:191:5, col:12>
|     `-ImplicitCastExpr 0x2d60b536130 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x2d60b536110 <col:12> 'int' lvalue Var 0x2d60b535018 'ret' 'int'
|-FunctionDecl 0x2d60b5362c8 <line:198:1, line:232:1> line:198:26 invalid dynamic_get_data_ctx 'dynamic_data_ctx *(int *)' static
| |-ParmVarDecl 0x2d60b5361d0 <col:47, col:55> col:55 invalid e 'int *'
| `-CompoundStmt 0x2d60b536aa8 <line:199:1, line:232:1>
|   |-DeclStmt 0x2d60b536400 <line:200:5, col:26>
|   | `-VarDecl 0x2d60b536398 <col:5, col:23> col:23 used ctx 'dynamic_data_ctx *'
|   |-IfStmt 0x2d60b536978 <line:201:5, line:225:5>
|   | |-BinaryOperator 0x2d60b536478 <line:201:9, col:31> 'int' '<'
|   | | |-ImplicitCastExpr 0x2d60b536460 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2d60b536418 <col:9> 'int' lvalue Var 0x2d60b52aae8 'dynamic_ex_data_idx' 'int'
|   | | `-IntegerLiteral 0x2d60b536438 <col:31> 'int' 0
|   | `-CompoundStmt 0x2d60b536950 <col:34, line:225:5>
|   |   |-DeclStmt 0x2d60b536650 <line:207:9, line:208:74>
|   |   | `-VarDecl 0x2d60b5364b0 <line:207:9, col:13> col:13 used new_idx 'int'
|   |   |-IfStmt 0x2d60b536748 <line:209:9, line:212:9>
|   |   | |-BinaryOperator 0x2d60b5366f8 <line:209:13, col:25> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x2d60b5366e0 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x2d60b536668 <col:13> 'int' lvalue Var 0x2d60b5364b0 'new_idx' 'int'
|   |   | | `-UnaryOperator 0x2d60b5366c8 <col:24, col:25> 'int' prefix '-'
|   |   | |   `-IntegerLiteral 0x2d60b5366a0 <col:25> 'int' 1
|   |   | `-CompoundStmt 0x2d60b536738 <col:28, line:212:9>
|   |   `-IfStmt 0x2d60b536918 <line:215:9, line:219:9>
|   |     |-BinaryOperator 0x2d60b5367e0 <line:215:13, col:35> 'int' '<'
|   |     | |-ImplicitCastExpr 0x2d60b5367c8 <col:13> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x2d60b536780 <col:13> 'int' lvalue Var 0x2d60b52aae8 'dynamic_ex_data_idx' 'int'
|   |     | `-IntegerLiteral 0x2d60b5367a0 <col:35> 'int' 0
|   |     `-CompoundStmt 0x2d60b5368f8 <col:38, line:219:9>
|   |       |-BinaryOperator 0x2d60b536858 <line:217:13, col:35> 'int' '='
|   |       | |-DeclRefExpr 0x2d60b536800 <col:13> 'int' lvalue Var 0x2d60b52aae8 'dynamic_ex_data_idx' 'int'
|   |       | `-ImplicitCastExpr 0x2d60b536840 <col:35> 'int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x2d60b536820 <col:35> 'int' lvalue Var 0x2d60b5364b0 'new_idx' 'int'
|   |       `-BinaryOperator 0x2d60b5368d8 <line:218:13, col:24> 'int' '='
|   |         |-DeclRefExpr 0x2d60b536878 <col:13> 'int' lvalue Var 0x2d60b5364b0 'new_idx' 'int'
|   |         `-UnaryOperator 0x2d60b5368c0 <col:23, col:24> 'int' prefix '-'
|   |           `-IntegerLiteral 0x2d60b536898 <col:24> 'int' 1
|   `-ReturnStmt 0x2d60b536a98 <line:231:5, col:12>
|     `-ImplicitCastExpr 0x2d60b536a80 <col:12> 'dynamic_data_ctx *' <LValueToRValue>
|       `-DeclRefExpr 0x2d60b536a60 <col:12> 'dynamic_data_ctx *' lvalue Var 0x2d60b536398 'ctx' 'dynamic_data_ctx *'
|-FunctionDecl 0x2d60b52fbb0 <line:234:1, line:250:1> line:234:16 invalid engine_dynamic 'int *(void)' static
| `-CompoundStmt 0x2d60b5306b0 <line:235:1, line:250:1>
|   `-IfStmt 0x2d60b530698 <line:239:5, line:248:5>
|     |-OpaqueValueExpr 0x2d60b530680 <<invalid sloc>> '_Bool'
|     `-CompoundStmt 0x2d60b530670 <line:245:56, line:248:5>
|-FunctionDecl 0x2d60b530760 <line:252:1, line:269:1> line:252:6 engine_load_dynamic_int 'void (void)'
| `-CompoundStmt 0x2d60b530ad0 <line:253:1, line:269:1>
|   |-IfStmt 0x2d60b530840 <line:255:5, line:256:9>
|   | |-OpaqueValueExpr 0x2d60b530828 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x2d60b530818 <col:9>
|   `-CallExpr 0x2d60b530ab0 <line:268:5, col:21> 'int'
|     `-ImplicitCastExpr 0x2d60b530a98 <col:5> 'int (*)()' <FunctionToPointerDecay>
|       `-DeclRefExpr 0x2d60b530a78 <col:5> 'int ()' Function 0x2d60b5309b0 'ERR_clear_error' 'int ()'
|-FunctionDecl 0x2d60b538c40 <line:271:1, line:278:1> line:271:12 invalid dynamic_init 'int (int *)' static
| |-ParmVarDecl 0x2d60b530b08 <col:25, col:33> col:33 invalid e 'int *'
| `-CompoundStmt 0x2d60b538d38 <line:272:1, line:278:1>
|   `-ReturnStmt 0x2d60b538d28 <line:277:5, col:12>
|     `-IntegerLiteral 0x2d60b538d00 <col:12> 'int' 0
|-FunctionDecl 0x2d60b538e00 <line:280:1, line:287:1> line:280:12 invalid dynamic_finish 'int (int *)' static
| |-ParmVarDecl 0x2d60b538d68 <col:27, col:35> col:35 invalid e 'int *'
| `-CompoundStmt 0x2d60b538ef8 <line:281:1, line:287:1>
|   `-ReturnStmt 0x2d60b538ee8 <line:286:5, col:12>
|     `-IntegerLiteral 0x2d60b538ec0 <col:12> 'int' 0
|-FunctionDecl 0x2d60b539270 <line:289:1, line:368:1> line:289:12 invalid dynamic_ctrl 'int (int *, int, long, void *, void (*)(void))' static
| |-ParmVarDecl 0x2d60b538f28 <col:25, col:33> col:33 invalid e 'int *'
| |-ParmVarDecl 0x2d60b538fa8 <col:36, col:40> col:40 used cmd 'int'
| |-ParmVarDecl 0x2d60b539028 <col:45, col:50> col:50 used i 'long'
| |-ParmVarDecl 0x2d60b5390a8 <col:53, col:59> col:59 used p 'void *'
| |-ParmVarDecl 0x2d60b5391b8 <col:62, col:77> col:69 f 'void (*)(void)'
| `-CompoundStmt 0x2d60b5337d0 <line:290:1, line:368:1>
|   |-DeclStmt 0x2d60b5393c8 <line:291:5, col:52>
|   | `-VarDecl 0x2d60b539360 <col:5, col:23> col:23 used ctx 'dynamic_data_ctx *'
|   |-DeclStmt 0x2d60b539460 <line:292:5, col:20>
|   | `-VarDecl 0x2d60b5393f8 <col:5, col:9> col:9 used initialised 'int'
|   |-IfStmt 0x2d60b539550 <line:294:5, line:297:5>
|   | |-UnaryOperator 0x2d60b5394c8 <line:294:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x2d60b5394b0 <col:10> 'dynamic_data_ctx *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2d60b539478 <col:10> 'dynamic_data_ctx *' lvalue Var 0x2d60b539360 'ctx' 'dynamic_data_ctx *'
|   | `-CompoundStmt 0x2d60b539538 <col:15, line:297:5>
|   |   `-ReturnStmt 0x2d60b539528 <line:296:9, col:16>
|   |     `-IntegerLiteral 0x2d60b539500 <col:16> 'int' 0
|   |-IfStmt 0x2d60b5396d0 <line:300:5, line:303:5>
|   | |-ImplicitCastExpr 0x2d60b539648 <line:300:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x2d60b539628 <col:9> 'int' lvalue Var 0x2d60b5393f8 'initialised' 'int'
|   | `-CompoundStmt 0x2d60b5396b8 <col:22, line:303:5>
|   |   `-ReturnStmt 0x2d60b5396a8 <line:302:9, col:16>
|   |     `-IntegerLiteral 0x2d60b539680 <col:16> 'int' 0
|   |-SwitchStmt 0x2d60b539738 <line:304:5, line:365:5>
|   | |-ImplicitCastExpr 0x2d60b539720 <line:304:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x2d60b5396e8 <col:13> 'int' lvalue ParmVar 0x2d60b538fa8 'cmd' 'int'
|   | `-CompoundStmt 0x2d60b5336d8 <col:18, line:365:5>
|   |   |-CallExpr 0x2d60b539b60 <line:309:9, col:42> 'int'
|   |   | |-ImplicitCastExpr 0x2d60b539b48 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x2d60b539ac0 <col:9> 'int ()' Function 0x2d60b536de0 'OPENSSL_free' 'int ()'
|   |   | `-ImplicitCastExpr 0x2d60b539b88 <col:22, col:27> 'char *' <LValueToRValue>
|   |   |   `-MemberExpr 0x2d60b539b18 <col:22, col:27> 'char *' lvalue ->DYNAMIC_LIBNAME 0x2d60b52a758
|   |   |     `-ImplicitCastExpr 0x2d60b539b00 <col:22> 'dynamic_data_ctx *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x2d60b539ae0 <col:22> 'dynamic_data_ctx *' lvalue Var 0x2d60b539360 'ctx' 'dynamic_data_ctx *'
|   |   |-IfStmt 0x2d60b537e60 <line:310:9, line:313:13> has_else
|   |   | |-ImplicitCastExpr 0x2d60b539bc0 <line:310:13> 'void *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x2d60b539ba0 <col:13> 'void *' lvalue ParmVar 0x2d60b5390a8 'p' 'void *'
|   |   | |-BinaryOperator 0x2d60b537dd0 <line:311:13, col:52> 'char *' '='
|   |   | | |-MemberExpr 0x2d60b539c10 <col:13, col:18> 'char *' lvalue ->DYNAMIC_LIBNAME 0x2d60b52a758
|   |   | | | `-ImplicitCastExpr 0x2d60b539bf8 <col:13> 'dynamic_data_ctx *' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x2d60b539bd8 <col:13> 'dynamic_data_ctx *' lvalue Var 0x2d60b539360 'ctx' 'dynamic_data_ctx *'
|   |   | | `-ImplicitCastExpr 0x2d60b537db8 <col:36, col:52> 'char *' <IntegralToPointer>
|   |   | |   `-CallExpr 0x2d60b537d78 <col:36, col:52> 'int'
|   |   | |     |-ImplicitCastExpr 0x2d60b537d60 <col:36> 'int (*)()' <FunctionToPointerDecay>
|   |   | |     | `-DeclRefExpr 0x2d60b537d20 <col:36> 'int ()' Function 0x2d60b537c58 'OPENSSL_strdup' 'int ()'
|   |   | |     `-ImplicitCastExpr 0x2d60b537da0 <col:51> 'void *' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x2d60b537d40 <col:51> 'void *' lvalue ParmVar 0x2d60b5390a8 'p' 'void *'
|   |   | `-NullStmt 0x2d60b537e58 <line:313:13>
|   |   |-ReturnStmt 0x2d60b537fa8 <line:314:9, col:45>
|   |   | `-ParenExpr 0x2d60b537f88 <col:16, col:45> 'int'
|   |   |   `-ConditionalOperator 0x2d60b537f58 <col:17, col:44> 'int'
|   |   |     |-ImplicitCastExpr 0x2d60b537f40 <col:17, col:22> 'char *' <LValueToRValue>
|   |   |     | `-MemberExpr 0x2d60b537ec0 <col:17, col:22> 'char *' lvalue ->DYNAMIC_LIBNAME 0x2d60b52a758
|   |   |     |   `-ImplicitCastExpr 0x2d60b537ea8 <col:17> 'dynamic_data_ctx *' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x2d60b537e88 <col:17> 'dynamic_data_ctx *' lvalue Var 0x2d60b539360 'ctx' 'dynamic_data_ctx *'
|   |   |     |-IntegerLiteral 0x2d60b537ef0 <col:40> 'int' 1
|   |   |     `-IntegerLiteral 0x2d60b537f18 <col:44> 'int' 0
|   |   |-BinaryOperator 0x2d60b5381b8 <line:316:9, col:43> 'int' '='
|   |   | |-MemberExpr 0x2d60b538018 <col:9, col:14> 'int' lvalue ->no_vcheck 0x2d60b52a7c8
|   |   | | `-ImplicitCastExpr 0x2d60b538000 <col:9> 'dynamic_data_ctx *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2d60b537fe0 <col:9> 'dynamic_data_ctx *' lvalue Var 0x2d60b539360 'ctx' 'dynamic_data_ctx *'
|   |   | `-ParenExpr 0x2d60b538198 <col:26, col:43> 'int'
|   |   |   `-ConditionalOperator 0x2d60b538168 <col:27, col:42> 'int'
|   |   |     |-ParenExpr 0x2d60b5380f8 <col:27, col:34> 'int'
|   |   |     | `-BinaryOperator 0x2d60b5380d8 <col:28, col:33> 'int' '=='
|   |   |     |   |-ImplicitCastExpr 0x2d60b5380a8 <col:28> 'long' <LValueToRValue>
|   |   |     |   | `-DeclRefExpr 0x2d60b538048 <col:28> 'long' lvalue ParmVar 0x2d60b539028 'i' 'long'
|   |   |     |   `-ImplicitCastExpr 0x2d60b5380c0 <col:33> 'long' <IntegralCast>
|   |   |     |     `-IntegerLiteral 0x2d60b538080 <col:33> 'int' 0
|   |   |     |-IntegerLiteral 0x2d60b538118 <col:38> 'int' 0
|   |   |     `-IntegerLiteral 0x2d60b538140 <col:42> 'int' 1
|   |   |-ReturnStmt 0x2d60b538200 <line:317:9, col:16>
|   |   | `-IntegerLiteral 0x2d60b5381d8 <col:16> 'int' 1
|   |   |-CallExpr 0x2d60b5384a8 <line:322:9, col:36> 'int'
|   |   | |-ImplicitCastExpr 0x2d60b538490 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x2d60b538408 <col:9> 'int ()' Function 0x2d60b536de0 'OPENSSL_free' 'int ()'
|   |   | `-ImplicitCastExpr 0x2d60b5384d0 <col:22, col:27> 'char *' <LValueToRValue>
|   |   |   `-MemberExpr 0x2d60b538460 <col:22, col:27> 'char *' lvalue ->engine_id 0x2d60b52a838
|   |   |     `-ImplicitCastExpr 0x2d60b538448 <col:22> 'dynamic_data_ctx *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x2d60b538428 <col:22> 'dynamic_data_ctx *' lvalue Var 0x2d60b539360 'ctx' 'dynamic_data_ctx *'
|   |   |-IfStmt 0x2d60b5386c8 <line:323:9, line:326:13> has_else
|   |   | |-ImplicitCastExpr 0x2d60b538508 <line:323:13> 'void *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x2d60b5384e8 <col:13> 'void *' lvalue ParmVar 0x2d60b5390a8 'p' 'void *'
|   |   | |-BinaryOperator 0x2d60b538638 <line:324:13, col:46> 'char *' '='
|   |   | | |-MemberExpr 0x2d60b538558 <col:13, col:18> 'char *' lvalue ->engine_id 0x2d60b52a838
|   |   | | | `-ImplicitCastExpr 0x2d60b538540 <col:13> 'dynamic_data_ctx *' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x2d60b538520 <col:13> 'dynamic_data_ctx *' lvalue Var 0x2d60b539360 'ctx' 'dynamic_data_ctx *'
|   |   | | `-ImplicitCastExpr 0x2d60b538620 <col:30, col:46> 'char *' <IntegralToPointer>
|   |   | |   `-CallExpr 0x2d60b5385e0 <col:30, col:46> 'int'
|   |   | |     |-ImplicitCastExpr 0x2d60b5385c8 <col:30> 'int (*)()' <FunctionToPointerDecay>
|   |   | |     | `-DeclRefExpr 0x2d60b538588 <col:30> 'int ()' Function 0x2d60b537c58 'OPENSSL_strdup' 'int ()'
|   |   | |     `-ImplicitCastExpr 0x2d60b538608 <col:45> 'void *' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x2d60b5385a8 <col:45> 'void *' lvalue ParmVar 0x2d60b5390a8 'p' 'void *'
|   |   | `-NullStmt 0x2d60b5386c0 <line:326:13>
|   |   |-ReturnStmt 0x2d60b538810 <line:327:9, col:39>
|   |   | `-ParenExpr 0x2d60b5387f0 <col:16, col:39> 'int'
|   |   |   `-ConditionalOperator 0x2d60b5387c0 <col:17, col:38> 'int'
|   |   |     |-ImplicitCastExpr 0x2d60b5387a8 <col:17, col:22> 'char *' <LValueToRValue>
|   |   |     | `-MemberExpr 0x2d60b538728 <col:17, col:22> 'char *' lvalue ->engine_id 0x2d60b52a838
|   |   |     |   `-ImplicitCastExpr 0x2d60b538710 <col:17> 'dynamic_data_ctx *' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x2d60b5386f0 <col:17> 'dynamic_data_ctx *' lvalue Var 0x2d60b539360 'ctx' 'dynamic_data_ctx *'
|   |   |     |-IntegerLiteral 0x2d60b538758 <col:34> 'int' 1
|   |   |     `-IntegerLiteral 0x2d60b538780 <col:38> 'int' 0
|   |   |-IfStmt 0x2d60b538a48 <line:329:9, line:332:9>
|   |   | |-BinaryOperator 0x2d60b5389b8 <line:329:13, col:30> 'int' '||'
|   |   | | |-ParenExpr 0x2d60b5388e0 <col:13, col:19> 'int'
|   |   | | | `-BinaryOperator 0x2d60b5388c0 <col:14, col:18> 'int' '<'
|   |   | | |   |-ImplicitCastExpr 0x2d60b538890 <col:14> 'long' <LValueToRValue>
|   |   | | |   | `-DeclRefExpr 0x2d60b538848 <col:14> 'long' lvalue ParmVar 0x2d60b539028 'i' 'long'
|   |   | | |   `-ImplicitCastExpr 0x2d60b5388a8 <col:18> 'long' <IntegralCast>
|   |   | | |     `-IntegerLiteral 0x2d60b538868 <col:18> 'int' 0
|   |   | | `-ParenExpr 0x2d60b538998 <col:24, col:30> 'int'
|   |   | |   `-BinaryOperator 0x2d60b538978 <col:25, col:29> 'int' '>'
|   |   | |     |-ImplicitCastExpr 0x2d60b538948 <col:25> 'long' <LValueToRValue>
|   |   | |     | `-DeclRefExpr 0x2d60b538900 <col:25> 'long' lvalue ParmVar 0x2d60b539028 'i' 'long'
|   |   | |     `-ImplicitCastExpr 0x2d60b538960 <col:29> 'long' <IntegralCast>
|   |   | |       `-IntegerLiteral 0x2d60b538920 <col:29> 'int' 2
|   |   | `-CompoundStmt 0x2d60b538a30 <col:33, line:332:9>
|   |   |   `-ReturnStmt 0x2d60b538a20 <line:331:13, col:20>
|   |   |     `-IntegerLiteral 0x2d60b5389f8 <col:20> 'int' 0
|   |   |-BinaryOperator 0x2d60b538b40 <line:333:9, col:36> 'int' '='
|   |   | |-MemberExpr 0x2d60b538a98 <col:9, col:14> 'int' lvalue ->list_add_value 0x2d60b52a8a8
|   |   | | `-ImplicitCastExpr 0x2d60b538a80 <col:9> 'dynamic_data_ctx *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2d60b538a60 <col:9> 'dynamic_data_ctx *' lvalue Var 0x2d60b539360 'ctx' 'dynamic_data_ctx *'
|   |   | `-CStyleCastExpr 0x2d60b538b18 <col:31, col:36> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x2d60b538b00 <col:36> 'long' <LValueToRValue> part_of_explicit_cast
|   |   |     `-DeclRefExpr 0x2d60b538ac8 <col:36> 'long' lvalue ParmVar 0x2d60b539028 'i' 'long'
|   |   |-ReturnStmt 0x2d60b538b88 <line:334:9, col:16>
|   |   | `-IntegerLiteral 0x2d60b538b60 <col:16> 'int' 1
|   |   |-IfStmt 0x2d60b532dc0 <line:338:9, line:341:9>
|   |   | |-BinaryOperator 0x2d60b532d30 <line:338:13, col:30> 'int' '||'
|   |   | | |-ParenExpr 0x2d60b532c58 <col:13, col:19> 'int'
|   |   | | | `-BinaryOperator 0x2d60b532c38 <col:14, col:18> 'int' '<'
|   |   | | |   |-ImplicitCastExpr 0x2d60b532c08 <col:14> 'long' <LValueToRValue>
|   |   | | |   | `-DeclRefExpr 0x2d60b538c08 <col:14> 'long' lvalue ParmVar 0x2d60b539028 'i' 'long'
|   |   | | |   `-ImplicitCastExpr 0x2d60b532c20 <col:18> 'long' <IntegralCast>
|   |   | | |     `-IntegerLiteral 0x2d60b532be0 <col:18> 'int' 0
|   |   | | `-ParenExpr 0x2d60b532d10 <col:24, col:30> 'int'
|   |   | |   `-BinaryOperator 0x2d60b532cf0 <col:25, col:29> 'int' '>'
|   |   | |     |-ImplicitCastExpr 0x2d60b532cc0 <col:25> 'long' <LValueToRValue>
|   |   | |     | `-DeclRefExpr 0x2d60b532c78 <col:25> 'long' lvalue ParmVar 0x2d60b539028 'i' 'long'
|   |   | |     `-ImplicitCastExpr 0x2d60b532cd8 <col:29> 'long' <IntegralCast>
|   |   | |       `-IntegerLiteral 0x2d60b532c98 <col:29> 'int' 2
|   |   | `-CompoundStmt 0x2d60b532da8 <col:33, line:341:9>
|   |   |   `-ReturnStmt 0x2d60b532d98 <line:340:13, col:20>
|   |   |     `-IntegerLiteral 0x2d60b532d70 <col:20> 'int' 0
|   |   |-BinaryOperator 0x2d60b532eb8 <line:342:9, col:30> 'int' '='
|   |   | |-MemberExpr 0x2d60b532e10 <col:9, col:14> 'int' lvalue ->dir_load 0x2d60b52a9f8
|   |   | | `-ImplicitCastExpr 0x2d60b532df8 <col:9> 'dynamic_data_ctx *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2d60b532dd8 <col:9> 'dynamic_data_ctx *' lvalue Var 0x2d60b539360 'ctx' 'dynamic_data_ctx *'
|   |   | `-CStyleCastExpr 0x2d60b532e90 <col:25, col:30> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x2d60b532e78 <col:30> 'long' <LValueToRValue> part_of_explicit_cast
|   |   |     `-DeclRefExpr 0x2d60b532e40 <col:30> 'long' lvalue ParmVar 0x2d60b539028 'i' 'long'
|   |   |-ReturnStmt 0x2d60b532f00 <line:343:9, col:16>
|   |   | `-IntegerLiteral 0x2d60b532ed8 <col:16> 'int' 1
|   |   |-IfStmt 0x2d60b533170 <line:346:9, line:349:9>
|   |   | |-BinaryOperator 0x2d60b5330e0 <line:346:13, col:47> 'int' '||'
|   |   | | |-UnaryOperator 0x2d60b532f70 <col:13, col:14> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x2d60b532f58 <col:14> 'void *' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x2d60b532f38 <col:14> 'void *' lvalue ParmVar 0x2d60b5390a8 'p' 'void *'
|   |   | | `-ParenExpr 0x2d60b5330c0 <col:19, col:47> 'int'
|   |   | |   `-BinaryOperator 0x2d60b5330a0 <col:20, col:46> 'int' '<'
|   |   | |     |-CallExpr 0x2d60b533038 <col:20, col:42> 'unsigned long long'
|   |   | |     | |-ImplicitCastExpr 0x2d60b533020 <col:20> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |   | |     | | `-DeclRefExpr 0x2d60b532f88 <col:20> 'unsigned long long (const char *)' Function 0x2d60b5397c0 'strlen' 'unsigned long long (const char *)'
|   |   | |     | `-CStyleCastExpr 0x2d60b532ff8 <col:27, col:41> 'const char *' <BitCast>
|   |   | |     |   `-ImplicitCastExpr 0x2d60b532fe0 <col:41> 'void *' <LValueToRValue> part_of_explicit_cast
|   |   | |     |     `-DeclRefExpr 0x2d60b532fa8 <col:41> 'void *' lvalue ParmVar 0x2d60b5390a8 'p' 'void *'
|   |   | |     `-ImplicitCastExpr 0x2d60b533088 <col:46> 'unsigned long long' <IntegralCast>
|   |   | |       `-IntegerLiteral 0x2d60b533060 <col:46> 'int' 1
|   |   | `-CompoundStmt 0x2d60b533158 <col:50, line:349:9>
|   |   |   `-ReturnStmt 0x2d60b533148 <line:348:13, col:20>
|   |   |     `-IntegerLiteral 0x2d60b533120 <col:20> 'int' 0
|   |   |-CompoundStmt 0x2d60b533650 <line:350:9, line:361:9>
|   |   | |-DeclStmt 0x2d60b5332b8 <line:351:13, col:46>
|   |   | | `-VarDecl 0x2d60b5331a0 <col:13, col:45> col:19 used tmp_str 'char *' cinit
|   |   | |   `-ImplicitCastExpr 0x2d60b5332a0 <col:29, col:45> 'char *' <IntegralToPointer>
|   |   | |     `-CallExpr 0x2d60b533260 <col:29, col:45> 'int'
|   |   | |       |-ImplicitCastExpr 0x2d60b533248 <col:29> 'int (*)()' <FunctionToPointerDecay>
|   |   | |       | `-DeclRefExpr 0x2d60b533208 <col:29> 'int ()' Function 0x2d60b537c58 'OPENSSL_strdup' 'int ()'
|   |   | |       `-ImplicitCastExpr 0x2d60b533288 <col:44> 'void *' <LValueToRValue>
|   |   | |         `-DeclRefExpr 0x2d60b533228 <col:44> 'void *' lvalue ParmVar 0x2d60b5390a8 'p' 'void *'
|   |   | |-IfStmt 0x2d60b533390 <line:352:13, line:355:13>
|   |   | | |-OpaqueValueExpr 0x2d60b533378 <<invalid sloc>> '_Bool'
|   |   | | `-CompoundStmt 0x2d60b533360 <line:352:34, line:355:13>
|   |   | |   `-ReturnStmt 0x2d60b533350 <line:354:17, col:24>
|   |   | |     `-IntegerLiteral 0x2d60b533328 <col:24> 'int' 0
|   |   | `-IfStmt 0x2d60b533638 <line:356:13, line:360:13>
|   |   |   |-OpaqueValueExpr 0x2d60b533620 <<invalid sloc>> '_Bool'
|   |   |   `-CompoundStmt 0x2d60b533600 <line:356:62, line:360:13>
|   |   |     |-CallExpr 0x2d60b533568 <line:357:17, col:37> 'int'
|   |   |     | |-ImplicitCastExpr 0x2d60b533550 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |   |     | | `-DeclRefExpr 0x2d60b533510 <col:17> 'int ()' Function 0x2d60b536de0 'OPENSSL_free' 'int ()'
|   |   |     | `-ImplicitCastExpr 0x2d60b533590 <col:30> 'char *' <LValueToRValue>
|   |   |     |   `-DeclRefExpr 0x2d60b533530 <col:30> 'char *' lvalue Var 0x2d60b5331a0 'tmp_str' 'char *'
|   |   |     `-ReturnStmt 0x2d60b5335f0 <line:359:17, col:24>
|   |   |       `-IntegerLiteral 0x2d60b5335c8 <col:24> 'int' 0
|   |   |-ReturnStmt 0x2d60b5336a0 <line:362:9, col:16>
|   |   | `-IntegerLiteral 0x2d60b533678 <col:16> 'int' 1
|   |   `-DefaultStmt 0x2d60b5336b8 <line:363:5, line:364:9>
|   |     `-BreakStmt 0x2d60b5336b0 <col:9>
|   `-ReturnStmt 0x2d60b5337c0 <line:367:5, col:12>
|     `-IntegerLiteral 0x2d60b533798 <col:12> 'int' 0
|-FunctionDecl 0x2d60b5397c0 <line:307:19> col:19 implicit used strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x2d60b539860 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2d60b533930 <line:370:1, line:394:1> line:370:12 used int_load 'int (dynamic_data_ctx *)' static
| |-ParmVarDecl 0x2d60b533820 <col:21, col:39> col:39 used ctx 'dynamic_data_ctx *'
| `-CompoundStmt 0x2d60b532a78 <line:371:1, line:394:1>
|   |-DeclStmt 0x2d60b533b08 <line:372:5, col:18>
|   | |-VarDecl 0x2d60b533a08 <col:5, col:9> col:9 used num 'int'
|   | `-VarDecl 0x2d60b533a88 <col:5, col:14> col:14 used loop 'int'
|   |-IfStmt 0x2d60b531e38 <line:374:5, line:377:16>
|   | |-OpaqueValueExpr 0x2d60b531e20 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x2d60b531e10 <col:9, col:16>
|   |   `-IntegerLiteral 0x2d60b531de8 <col:16> 'int' 1
|   |-IfStmt 0x2d60b5320e0 <line:379:5, line:380:16>
|   | |-OpaqueValueExpr 0x2d60b5320c8 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x2d60b5320b8 <col:9, col:16>
|   |   `-IntegerLiteral 0x2d60b532090 <col:16> 'int' 0
|   |-ForStmt 0x2d60b532a08 <line:381:5, line:392:5>
|   | |-BinaryOperator 0x2d60b532158 <line:381:10, col:17> 'int' '='
|   | | |-DeclRefExpr 0x2d60b5320f8 <col:10> 'int' lvalue Var 0x2d60b533a88 'loop' 'int'
|   | | `-IntegerLiteral 0x2d60b532130 <col:17> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2d60b5321e8 <col:20, col:27> 'int' '<'
|   | | |-ImplicitCastExpr 0x2d60b5321b8 <col:20> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2d60b532178 <col:20> 'int' lvalue Var 0x2d60b533a88 'loop' 'int'
|   | | `-ImplicitCastExpr 0x2d60b5321d0 <col:27> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2d60b532198 <col:27> 'int' lvalue Var 0x2d60b533a08 'num' 'int'
|   | |-UnaryOperator 0x2d60b532228 <col:32, col:36> 'int' postfix '++'
|   | | `-DeclRefExpr 0x2d60b532208 <col:32> 'int' lvalue Var 0x2d60b533a88 'loop' 'int'
|   | `-CompoundStmt 0x2d60b5329d0 <col:40, line:392:5>
|   |   |-DeclStmt 0x2d60b532428 <line:382:9, col:65>
|   |   | `-VarDecl 0x2d60b532258 <col:9, col:21> col:21 used s 'const char *'
|   |   |-DeclStmt 0x2d60b5326a8 <line:383:9, col:75>
|   |   | `-VarDecl 0x2d60b532458 <col:9, col:15> col:15 used merge 'char *'
|   |   |-IfStmt 0x2d60b532760 <line:384:9, line:385:20>
|   |   | |-UnaryOperator 0x2d60b532710 <line:384:13, col:14> 'int' prefix '!' cannot overflow
|   |   | | `-ImplicitCastExpr 0x2d60b5326f8 <col:14> 'char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2d60b5326c0 <col:14> 'char *' lvalue Var 0x2d60b532458 'merge' 'char *'
|   |   | `-ReturnStmt 0x2d60b532750 <line:385:13, col:20>
|   |   |   `-IntegerLiteral 0x2d60b532728 <col:20> 'int' 0
|   |   |-IfStmt 0x2d60b532920 <line:386:9, line:390:9>
|   |   | |-OpaqueValueExpr 0x2d60b532908 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x2d60b5328e8 <line:386:57, line:390:9>
|   |   |   |-CallExpr 0x2d60b532870 <line:388:13, col:31> 'int'
|   |   |   | |-ImplicitCastExpr 0x2d60b532858 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x2d60b532818 <col:13> 'int ()' Function 0x2d60b536de0 'OPENSSL_free' 'int ()'
|   |   |   | `-ImplicitCastExpr 0x2d60b532898 <col:26> 'char *' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x2d60b532838 <col:26> 'char *' lvalue Var 0x2d60b532458 'merge' 'char *'
|   |   |   `-ReturnStmt 0x2d60b5328d8 <line:389:13, col:20>
|   |   |     `-IntegerLiteral 0x2d60b5328b0 <col:20> 'int' 1
|   |   `-CallExpr 0x2d60b532990 <line:391:9, col:27> 'int'
|   |     |-ImplicitCastExpr 0x2d60b532978 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x2d60b532938 <col:9> 'int ()' Function 0x2d60b536de0 'OPENSSL_free' 'int ()'
|   |     `-ImplicitCastExpr 0x2d60b5329b8 <col:22> 'char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x2d60b532958 <col:22> 'char *' lvalue Var 0x2d60b532458 'merge' 'char *'
|   `-ReturnStmt 0x2d60b532a68 <line:393:5, col:12>
|     `-IntegerLiteral 0x2d60b532a40 <col:12> 'int' 0
|-FunctionDecl 0x2d60b540cf8 <line:396:1, line:510:1> line:396:12 invalid dynamic_load 'int (int *, dynamic_data_ctx *)' static
| |-ParmVarDecl 0x2d60b532ac8 <col:25, col:33> col:33 invalid e 'int *'
| |-ParmVarDecl 0x2d60b532b40 <col:36, col:54> col:54 used ctx 'dynamic_data_ctx *'
| `-CompoundStmt 0x2d60b53c798 <line:397:1, line:510:1>
|   |-IfStmt 0x2d60b541018 <line:403:5, line:404:16>
|   | |-OpaqueValueExpr 0x2d60b541000 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x2d60b540ff0 <col:9, col:16>
|   |   `-IntegerLiteral 0x2d60b540fc8 <col:16> 'int' 0
|   |-IfStmt 0x2d60b541528 <line:405:5, line:412:5>
|   | |-UnaryOperator 0x2d60b5410b0 <line:405:9, col:15> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x2d60b541098 <col:10, col:15> 'char *' <LValueToRValue>
|   | |   `-MemberExpr 0x2d60b541068 <col:10, col:15> 'char *' lvalue ->DYNAMIC_LIBNAME 0x2d60b52a758
|   | |     `-ImplicitCastExpr 0x2d60b541050 <col:10> 'dynamic_data_ctx *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x2d60b541030 <col:10> 'dynamic_data_ctx *' lvalue ParmVar 0x2d60b532b40 'ctx' 'dynamic_data_ctx *'
|   | `-CompoundStmt 0x2d60b541510 <col:32, line:412:5>
|   |   `-IfStmt 0x2d60b541198 <line:406:9, line:407:20>
|   |     |-UnaryOperator 0x2d60b541148 <line:406:13, col:19> 'int' prefix '!' cannot overflow
|   |     | `-ImplicitCastExpr 0x2d60b541130 <col:14, col:19> 'char *' <LValueToRValue>
|   |     |   `-MemberExpr 0x2d60b541100 <col:14, col:19> 'char *' lvalue ->engine_id 0x2d60b52a838
|   |     |     `-ImplicitCastExpr 0x2d60b5410e8 <col:14> 'dynamic_data_ctx *' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x2d60b5410c8 <col:14> 'dynamic_data_ctx *' lvalue ParmVar 0x2d60b532b40 'ctx' 'dynamic_data_ctx *'
|   |     `-ReturnStmt 0x2d60b541188 <line:407:13, col:20>
|   |       `-IntegerLiteral 0x2d60b541160 <col:20> 'int' 0
|   |-IfStmt 0x2d60b541748 <line:413:5, line:418:5>
|   | |-UnaryOperator 0x2d60b541630 <line:413:9, col:22> 'int' prefix '!' cannot overflow
|   | | `-CallExpr 0x2d60b5415f0 <col:10, col:22> 'int'
|   | |   |-ImplicitCastExpr 0x2d60b5415d8 <col:10> 'int (*)(dynamic_data_ctx *)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2d60b541540 <col:10> 'int (dynamic_data_ctx *)' Function 0x2d60b533930 'int_load' 'int (dynamic_data_ctx *)'
|   | |   `-ImplicitCastExpr 0x2d60b541618 <col:19> 'dynamic_data_ctx *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x2d60b541560 <col:19> 'dynamic_data_ctx *' lvalue ParmVar 0x2d60b532b40 'ctx' 'dynamic_data_ctx *'
|   | `-CompoundStmt 0x2d60b541730 <col:25, line:418:5>
|   |   `-ReturnStmt 0x2d60b541720 <line:417:9, col:16>
|   |     `-IntegerLiteral 0x2d60b5416f8 <col:16> 'int' 0
|   |-IfStmt 0x2d60b5418e8 <line:420:5, line:429:5>
|   | |-OpaqueValueExpr 0x2d60b5418d0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x2d60b5418b8 <line:423:65, line:429:5>
|   |   `-ReturnStmt 0x2d60b5418a8 <line:428:9, col:16>
|   |     `-IntegerLiteral 0x2d60b541880 <col:16> 'int' 0
|   |-IfStmt 0x2d60b53bce8 <line:431:5, line:457:5>
|   | |-UnaryOperator 0x2d60b541980 <line:431:9, col:15> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x2d60b541968 <col:10, col:15> 'int' <LValueToRValue>
|   | |   `-MemberExpr 0x2d60b541938 <col:10, col:15> 'int' lvalue ->no_vcheck 0x2d60b52a7c8
|   | |     `-ImplicitCastExpr 0x2d60b541920 <col:10> 'dynamic_data_ctx *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x2d60b541900 <col:10> 'dynamic_data_ctx *' lvalue ParmVar 0x2d60b532b40 'ctx' 'dynamic_data_ctx *'
|   | `-CompoundStmt 0x2d60b53bcc8 <col:26, line:457:5>
|   |   |-DeclStmt 0x2d60b541a58 <line:432:9, col:37>
|   |   | `-VarDecl 0x2d60b5419b0 <col:9, col:36> col:23 used vcheck_res 'unsigned long' cinit
|   |   |   `-ImplicitCastExpr 0x2d60b541a40 <col:36> 'unsigned long' <IntegralCast>
|   |   |     `-IntegerLiteral 0x2d60b541a18 <col:36> 'int' 0
|   |   `-IfStmt 0x2d60b53bcb0 <line:447:9, line:456:9>
|   |     |-OpaqueValueExpr 0x2d60b53bc98 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x2d60b53bc80 <line:447:47, line:456:9>
|   |       `-ReturnStmt 0x2d60b53bc70 <line:455:13, col:20>
|   |         `-IntegerLiteral 0x2d60b541c90 <col:20> 'int' 0
|   |-IfStmt 0x2d60b53c438 <line:480:5, line:489:5>
|   | |-OpaqueValueExpr 0x2d60b53c420 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x2d60b53c408 <line:480:53, line:489:5>
|   |   `-ReturnStmt 0x2d60b53c3f8 <line:488:9, col:16>
|   |     `-IntegerLiteral 0x2d60b53c3d0 <col:16> 'int' 0
|   |-IfStmt 0x2d60b53c748 <line:491:5, line:508:5>
|   | |-BinaryOperator 0x2d60b53c4f8 <line:491:9, col:31> 'int' '>'
|   | | |-ImplicitCastExpr 0x2d60b53c4e0 <col:9, col:14> 'int' <LValueToRValue>
|   | | | `-MemberExpr 0x2d60b53c488 <col:9, col:14> 'int' lvalue ->list_add_value 0x2d60b52a8a8
|   | | |   `-ImplicitCastExpr 0x2d60b53c470 <col:9> 'dynamic_data_ctx *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x2d60b53c450 <col:9> 'dynamic_data_ctx *' lvalue ParmVar 0x2d60b532b40 'ctx' 'dynamic_data_ctx *'
|   | | `-IntegerLiteral 0x2d60b53c4b8 <col:31> 'int' 0
|   | `-CompoundStmt 0x2d60b53c730 <col:34, line:508:5>
|   |   `-IfStmt 0x2d60b53c718 <line:492:9, line:507:9>
|   |     |-OpaqueValueExpr 0x2d60b53c700 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x2d60b53c6e0 <line:492:29, line:507:9>
|   |       |-IfStmt 0x2d60b53c670 <line:494:13, line:504:13>
|   |       | |-BinaryOperator 0x2d60b53c5e0 <line:494:17, col:39> 'int' '>'
|   |       | | |-ImplicitCastExpr 0x2d60b53c5c8 <col:17, col:22> 'int' <LValueToRValue>
|   |       | | | `-MemberExpr 0x2d60b53c570 <col:17, col:22> 'int' lvalue ->list_add_value 0x2d60b52a8a8
|   |       | | |   `-ImplicitCastExpr 0x2d60b53c558 <col:17> 'dynamic_data_ctx *' <LValueToRValue>
|   |       | | |     `-DeclRefExpr 0x2d60b53c538 <col:17> 'dynamic_data_ctx *' lvalue ParmVar 0x2d60b532b40 'ctx' 'dynamic_data_ctx *'
|   |       | | `-IntegerLiteral 0x2d60b53c5a0 <col:39> 'int' 1
|   |       | `-CompoundStmt 0x2d60b53c658 <col:42, line:504:13>
|   |       |   `-ReturnStmt 0x2d60b53c648 <line:503:17, col:24>
|   |       |     `-IntegerLiteral 0x2d60b53c620 <col:24> 'int' 0
|   |       `-CallExpr 0x2d60b53c6c0 <line:506:13, col:29> 'int'
|   |         `-ImplicitCastExpr 0x2d60b53c6a8 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |           `-DeclRefExpr 0x2d60b53c688 <col:13> 'int ()' Function 0x2d60b5309b0 'ERR_clear_error' 'int ()'
|   `-ReturnStmt 0x2d60b53c788 <line:509:5, col:12>
|     `-IntegerLiteral 0x2d60b53c760 <col:12> 'int' 1
`-FunctionDecl 0x2d60b53bd70 <line:462:5> col:5 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
  |-ParmVarDecl 0x2d60b53be10 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x2d60b53be78 <<invalid sloc>> <invalid sloc> 'const void *'
  `-ParmVarDecl 0x2d60b53bee0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
