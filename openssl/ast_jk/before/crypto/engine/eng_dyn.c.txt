TranslationUnitDecl 0x1b5935f3c28 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1b5935f44c0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1b5935f41c0 '__int128'
|-TypedefDecl 0x1b5935f4530 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1b5935f41e0 'unsigned __int128'
|-TypedefDecl 0x1b5935f4868 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1b5935f4620 'struct __NSConstantString_tag'
|   `-Record 0x1b5935f4588 '__NSConstantString_tag'
|-TypedefDecl 0x1b5935f48d8 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x1b5935f3e00 'unsigned long long'
|-TypedefDecl 0x1b5935f4970 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1b5935f4930 'char *'
|   `-BuiltinType 0x1b5935f3cc0 'char'
|-TypedefDecl 0x1b5935f49e0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1b5935f4930 'char *'
|   `-BuiltinType 0x1b5935f3cc0 'char'
|-VarDecl 0x1b5935f4a80 <.//openssl//file_jk/before\crypto\engine/eng_int.h:27:1, col:23> col:23 invalid global_engine_lock 'int *' extern
|-TypedefDecl 0x1b594fc77d0 <line:58:1, col:39> col:15 referenced ENGINE_CLEANUP_CB 'void (void)':'void (void)'
| `-ParenType 0x1b5935f4b90 'void (void)' sugar
|   `-FunctionProtoType 0x1b5935f4b60 'void (void)' cdecl
|     `-BuiltinType 0x1b5935f3c80 'void'
|-RecordDecl 0x1b594fc7828 <line:59:9, line:61:1> line:59:16 struct st_engine_cleanup_item definition
| `-FieldDecl 0x1b594fc7968 <line:60:5, col:24> col:24 cb 'ENGINE_CLEANUP_CB *'
|-TypedefDecl 0x1b594fc7a18 <line:59:1, line:61:3> col:3 referenced ENGINE_CLEANUP_ITEM 'struct st_engine_cleanup_item':'struct st_engine_cleanup_item'
| `-ElaboratedType 0x1b594fc79c0 'struct st_engine_cleanup_item' sugar
|   `-RecordType 0x1b594fc78c0 'struct st_engine_cleanup_item'
|     `-Record 0x1b594fc7828 'st_engine_cleanup_item'
|-FunctionDecl 0x1b594fc7bc0 <line:62:1, col:36> col:1 DEFINE_STACK_OF 'int (ENGINE_CLEANUP_ITEM)'
| `-ParmVarDecl 0x1b594fc7ac0 <col:17> col:36 'ENGINE_CLEANUP_ITEM':'struct st_engine_cleanup_item'
|-FunctionDecl 0x1b594fc7de8 <line:63:1, col:52> col:6 engine_cleanup_add_first 'void (ENGINE_CLEANUP_CB *)'
| `-ParmVarDecl 0x1b594fc7cd8 <col:31, col:50> col:50 cb 'ENGINE_CLEANUP_CB *'
|-FunctionDecl 0x1b594fc7f60 <line:64:1, col:51> col:6 engine_cleanup_add_last 'void (ENGINE_CLEANUP_CB *)'
| `-ParmVarDecl 0x1b594fc7eb8 <col:30, col:49> col:49 cb 'ENGINE_CLEANUP_CB *'
|-RecordDecl 0x1b594fc8020 <line:81:9, col:16> col:16 struct st_engine_table
|-EmptyDecl 0x1b594fc4b78 <line:88:59> col:59
|-TypedefDecl 0x1b594fc4e20 <line:94:1, line:95:61> line:94:15 referenced engine_table_doall_cb 'void (int, int (*)())':'void (int, int (*)())'
| `-ParenType 0x1b594fc4dc0 'void (int, int (*)())' sugar
|   `-FunctionProtoType 0x1b594fc4d80 'void (int, int (*)())' cdecl
|     |-BuiltinType 0x1b5935f3c80 'void'
|     |-BuiltinType 0x1b5935f3d20 'int'
|     `-DecayedType 0x1b594fc4ca0 'int (*)()' sugar
|       |-FunctionNoProtoType 0x1b594fc4c20 'int ()' cdecl
|       | `-BuiltinType 0x1b5935f3d20 'int'
|       `-PointerType 0x1b594fc4c70 'int (*)()'
|         `-FunctionNoProtoType 0x1b594fc4c20 'int ()' cdecl
|           `-BuiltinType 0x1b5935f3d20 'int'
|-FunctionDecl 0x1b594fc5128 <line:96:1, line:97:34> line:96:6 invalid engine_table_doall 'void (int *, engine_table_doall_cb *, void *)'
| |-ParmVarDecl 0x1b594fc4e90 <col:25, col:39> col:39 invalid table 'int *'
| |-ParmVarDecl 0x1b594fc4f88 <col:46, col:69> col:69 cb 'engine_table_doall_cb *'
| `-ParmVarDecl 0x1b594fc5008 <line:97:25, col:31> col:31 arg 'void *'
|-FunctionDecl 0x1b594fc52c0 <line:104:1, col:35> col:5 invalid engine_unlocked_init 'int (int *)'
| `-ParmVarDecl 0x1b594fc51f8 <col:26, col:34> col:34 invalid e 'int *'
|-FunctionDecl 0x1b594fc54e0 <line:105:1, col:62> col:5 invalid engine_unlocked_finish 'int (int *, int)'
| |-ParmVarDecl 0x1b594fc5380 <col:28, col:36> col:36 invalid e 'int *'
| `-ParmVarDecl 0x1b594fc5400 <col:39, col:43> col:43 unlock_for_handlers 'int'
|-FunctionDecl 0x1b594fc56c8 <line:106:1, col:43> col:5 invalid engine_free_util 'int (int *, int)'
| |-ParmVarDecl 0x1b594fc55a8 <col:22, col:30> col:30 invalid e 'int *'
| `-ParmVarDecl 0x1b594fc5628 <col:33, col:37> col:37 locked 'int'
|-FunctionDecl 0x1b594fce908 <line:113:1, col:35> col:6 invalid engine_set_all_null 'void (int *)'
| `-ParmVarDecl 0x1b594fce840 <col:26, col:34> col:34 invalid e 'int *'
|-FunctionDecl 0x1b594fcea58 <line:122:1, col:38> col:6 invalid engine_pkey_meths_free 'void (int *)'
| `-ParmVarDecl 0x1b594fce9c8 <col:29, col:37> col:37 invalid e 'int *'
|-FunctionDecl 0x1b594fceba8 <line:123:1, col:43> col:6 invalid engine_pkey_asn1_meths_free 'void (int *)'
| `-ParmVarDecl 0x1b594fceb18 <col:34, col:42> col:42 invalid e 'int *'
|-VarDecl 0x1b594fcec68 <line:126:1, col:20> col:20 invalid engine_lock_init 'int' extern
|-RecordDecl 0x1b594fcecd0 <line:133:1, line:173:1> line:133:8 invalid struct engine_st definition
| |-FieldDecl 0x1b594fceda8 <line:134:5, col:17> col:17 id 'const char *'
| |-FieldDecl 0x1b594fcee18 <line:135:5, col:17> col:17 name 'const char *'
| |-FieldDecl 0x1b594fcee88 <line:136:5, col:23> col:23 invalid rsa_meth 'const int *'
| |-FieldDecl 0x1b594fceef8 <line:137:5, col:23> col:23 invalid dsa_meth 'const int *'
| |-FieldDecl 0x1b594fcef68 <line:138:5, col:22> col:22 invalid dh_meth 'const int *'
| |-FieldDecl 0x1b594fcefd8 <line:139:5, col:26> col:26 invalid ec_meth 'const int *'
| |-FieldDecl 0x1b594fcf048 <line:140:5, col:24> col:24 invalid rand_meth 'const int *'
| |-FieldDecl 0x1b594fcf0b8 <line:142:5, col:24> col:24 invalid ciphers 'int'
| |-FieldDecl 0x1b594fcf128 <line:144:5, col:24> col:24 invalid digests 'int'
| |-FieldDecl 0x1b594fcf198 <line:146:5, col:27> col:27 invalid pkey_meths 'int'
| |-FieldDecl 0x1b594fcf208 <line:148:5, col:32> col:32 invalid pkey_asn1_meths 'int'
| |-FieldDecl 0x1b594fcf278 <line:149:5, col:29> col:29 invalid destroy 'int'
| |-FieldDecl 0x1b594fcf2e8 <line:150:5, col:29> col:29 invalid init 'int'
| |-FieldDecl 0x1b594fcf358 <line:151:5, col:29> col:29 invalid finish 'int'
| |-FieldDecl 0x1b594fcf3c8 <line:152:5, col:26> col:26 invalid ctrl 'int'
| |-FieldDecl 0x1b594fcf438 <line:153:5, col:25> col:25 invalid load_privkey 'int'
| |-FieldDecl 0x1b594fcf4a8 <line:154:5, col:25> col:25 invalid load_pubkey 'int'
| |-FieldDecl 0x1b594fcf518 <line:155:5, col:32> col:32 invalid load_ssl_client_cert 'int'
| |-FieldDecl 0x1b594fcf588 <line:156:5, col:28> col:28 invalid cmd_defns 'const int *'
| |-FieldDecl 0x1b594fcf5f8 <line:157:5, col:9> col:9 flags 'int'
| |-FieldDecl 0x1b594fcf668 <line:159:5, col:9> col:9 struct_ref 'int'
| |-FieldDecl 0x1b594fcf6d8 <line:167:5, col:9> col:9 funct_ref 'int'
| |-FieldDecl 0x1b594fcf748 <line:169:5, col:20> col:20 invalid ex_data 'int'
| |-FieldDecl 0x1b594fcd858 <line:171:5, col:23> col:23 prev 'struct engine_st *'
| `-FieldDecl 0x1b594fcd8d8 <line:172:5, col:23> col:23 next 'struct engine_st *'
|-RecordDecl 0x1b594fcd930 <line:175:9, col:16> col:16 struct st_engine_pile
|-EmptyDecl 0x1b594fcdb30 <line:177:29> col:29
|-FunctionDecl 0x1b594fcdc08 <.//openssl//file_jk/before\crypto\engine\eng_dyn.c:21:1, col:34> col:12 invalid dynamic_init 'int (int *)' static
| `-ParmVarDecl 0x1b594fcdb70 <col:25, col:33> col:33 invalid e 'int *'
|-FunctionDecl 0x1b594fcdd60 <line:22:1, col:36> col:12 invalid dynamic_finish 'int (int *)' static
| `-ParmVarDecl 0x1b594fcdcc8 <col:27, col:35> col:35 invalid e 'int *'
|-FunctionDecl 0x1b594fce230 <line:23:1, line:24:41> line:23:12 invalid dynamic_ctrl 'int (int *, int, long, void *, void (*)(void))' static
| |-ParmVarDecl 0x1b594fcde20 <col:25, col:33> col:33 invalid e 'int *'
| |-ParmVarDecl 0x1b594fcdea0 <col:36, col:40> col:40 cmd 'int'
| |-ParmVarDecl 0x1b594fcdf20 <col:45, col:50> col:50 i 'long'
| |-ParmVarDecl 0x1b594fcdfa0 <col:53, col:59> col:59 p 'void *'
| `-ParmVarDecl 0x1b594fce0d8 <line:24:25, col:40> col:32 f 'void (*)(void)'
|-RecordDecl 0x1b594fce2f8 <line:26:9, col:16> col:16 struct st_dynamic_data_ctx
|-TypedefDecl 0x1b594fce408 <col:1, col:36> col:36 referenced dynamic_data_ctx 'struct st_dynamic_data_ctx':'struct st_dynamic_data_ctx'
| `-ElaboratedType 0x1b594fce3b0 'struct st_dynamic_data_ctx' sugar
|   `-RecordType 0x1b594fce390 'struct st_dynamic_data_ctx'
|     `-Record 0x1b594fd01e0 'st_dynamic_data_ctx'
|-FunctionDecl 0x1b594fce6a0 <line:28:1, col:57> col:12 invalid dynamic_load 'int (int *, dynamic_data_ctx *)' static
| |-ParmVarDecl 0x1b594fce490 <col:25, col:33> col:33 invalid e 'int *'
| `-ParmVarDecl 0x1b594fce588 <col:36, col:54> col:54 ctx 'dynamic_data_ctx *'
|-VarDecl 0x1b594fce768 <line:39:1, col:40> col:20 used engine_dynamic_id 'const char *' static cinit
| `-ImplicitCastExpr 0x1b594fcf880 <col:40> 'const char *' <NoOp>
|   `-ImplicitCastExpr 0x1b594fcf868 <col:40> 'char *' <ArrayToPointerDecay>
|     `-StringLiteral 0x1b594fce808 <col:40> 'char [8]' lvalue "dynamic"
|-VarDecl 0x1b594fcf8b0 <line:40:1, col:42> col:20 used engine_dynamic_name 'const char *' static cinit
| `-ImplicitCastExpr 0x1b594fcf9c0 <col:42> 'const char *' <NoOp>
|   `-ImplicitCastExpr 0x1b594fcf9a8 <col:42> 'char *' <ArrayToPointerDecay>
|     `-StringLiteral 0x1b594fcf958 <col:42> 'char [31]' lvalue "Dynamic engine loading support"
|-VarDecl 0x1b594fcfa60 <line:41:1, <invalid sloc>> col:30 invalid dynamic_cmd_defns 'const int []' static
|-RecordDecl 0x1b594fd01e0 prev 0x1b594fce2f8 <line:78:1, line:112:1> line:78:8 invalid struct st_dynamic_data_ctx definition
| |-FieldDecl 0x1b594fd0278 <line:80:5, col:10> col:10 invalid dynamic_dso 'int *'
| |-FieldDecl 0x1b594fd02e8 <line:84:5, col:24> col:24 invalid v_check 'int'
| |-FieldDecl 0x1b594fd0358 <line:88:5, col:25> col:25 invalid bind_engine 'int'
| |-FieldDecl 0x1b594fd03c8 <line:90:5, col:11> col:11 referenced DYNAMIC_LIBNAME 'char *'
| |-FieldDecl 0x1b594fd0438 <line:92:5, col:9> col:9 referenced no_vcheck 'int'
| |-FieldDecl 0x1b594fd04a8 <line:94:5, col:11> col:11 referenced engine_id 'char *'
| |-FieldDecl 0x1b594fd0518 <line:100:5, col:9> col:9 referenced list_add_value 'int'
| |-FieldDecl 0x1b594fd0588 <line:102:5, col:17> col:17 referenced DYNAMIC_F1 'const char *'
| |-FieldDecl 0x1b594fd05f8 <line:104:5, col:17> col:17 referenced DYNAMIC_F2 'const char *'
| |-FieldDecl 0x1b594fd0668 <line:109:5, col:9> col:9 referenced dir_load 'int'
| `-FieldDecl 0x1b594fd06e8 <line:111:5, <invalid sloc>> col:5 invalid STACK_OF 'int ()'
|-VarDecl 0x1b594fd0758 <line:118:1, col:35> col:12 used dynamic_ex_data_idx 'int' static cinit
| `-UnaryOperator 0x1b594fd07e8 <col:34, col:35> 'int' prefix '-'
|   `-IntegerLiteral 0x1b594fd07c0 <col:35> 'int' 1
|-FunctionDecl 0x1b594fdaf58 <line:120:1, line:123:1> line:120:13 used int_free_str 'void (char *)' static
| |-ParmVarDecl 0x1b594fdae80 <col:26, col:32> col:32 used s 'char *'
| `-CompoundStmt 0x1b594fdb1a0 <line:121:1, line:123:1>
|   `-CallExpr 0x1b594fdb160 <line:122:5, col:19> 'int'
|     |-ImplicitCastExpr 0x1b594fdb148 <col:5> 'int (*)()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x1b594fdb108 <col:5> 'int ()' Function 0x1b594fdb040 'OPENSSL_free' 'int ()'
|     `-ImplicitCastExpr 0x1b594fdb188 <col:18> 'char *' <LValueToRValue>
|       `-DeclRefExpr 0x1b594fdb128 <col:18> 'char *' lvalue ParmVar 0x1b594fdae80 's' 'char *'
|-FunctionDecl 0x1b594fdb568 <line:134:1, line:146:1> line:134:13 invalid dynamic_data_ctx_free_func 'void (void *, void *, int *, int, long, void *)' static
| |-ParmVarDecl 0x1b594fdb1d0 <col:40, col:46> col:46 parent 'void *'
| |-ParmVarDecl 0x1b594fdb250 <col:54, col:60> col:60 used ptr 'void *'
| |-ParmVarDecl 0x1b594fdb2d0 <line:135:40, col:56> col:56 invalid ad 'int *'
| |-ParmVarDecl 0x1b594fdb350 <col:60, col:64> col:64 idx 'int'
| |-ParmVarDecl 0x1b594fdb3d0 <col:69, col:74> col:74 argl 'long'
| |-ParmVarDecl 0x1b594fdb450 <line:136:40, col:46> col:46 argp 'void *'
| `-CompoundStmt 0x1b594fdbd08 <line:137:1, line:146:1>
|   `-IfStmt 0x1b594fdbcf0 <line:138:5, line:145:5>
|     |-ImplicitCastExpr 0x1b594fdb688 <line:138:9> 'void *' <LValueToRValue>
|     | `-DeclRefExpr 0x1b594fdb650 <col:9> 'void *' lvalue ParmVar 0x1b594fdb250 'ptr' 'void *'
|     `-CompoundStmt 0x1b594fdbcc0 <col:14, line:145:5>
|       |-DeclStmt 0x1b594fdb788 <line:139:9, col:56>
|       | `-VarDecl 0x1b594fdb6b0 <col:9, col:53> col:27 used ctx 'dynamic_data_ctx *' cinit
|       |   `-CStyleCastExpr 0x1b594fdb760 <col:33, col:53> 'dynamic_data_ctx *' <BitCast>
|       |     `-ImplicitCastExpr 0x1b594fdb748 <col:53> 'void *' <LValueToRValue> part_of_explicit_cast
|       |       `-DeclRefExpr 0x1b594fdb718 <col:53> 'void *' lvalue ParmVar 0x1b594fdb250 'ptr' 'void *'
|       |-CallExpr 0x1b594fdb9a0 <line:141:9, col:42> 'int'
|       | |-ImplicitCastExpr 0x1b594fdb988 <col:9> 'int (*)()' <FunctionToPointerDecay>
|       | | `-DeclRefExpr 0x1b594fdb900 <col:9> 'int ()' Function 0x1b594fdb040 'OPENSSL_free' 'int ()'
|       | `-ImplicitCastExpr 0x1b594fdb9c8 <col:22, col:27> 'char *' <LValueToRValue>
|       |   `-MemberExpr 0x1b594fdb958 <col:22, col:27> 'char *' lvalue ->DYNAMIC_LIBNAME 0x1b594fd03c8
|       |     `-ImplicitCastExpr 0x1b594fdb940 <col:22> 'dynamic_data_ctx *' <LValueToRValue>
|       |       `-DeclRefExpr 0x1b594fdb920 <col:22> 'dynamic_data_ctx *' lvalue Var 0x1b594fdb6b0 'ctx' 'dynamic_data_ctx *'
|       |-CallExpr 0x1b594fdba80 <line:142:9, col:36> 'int'
|       | |-ImplicitCastExpr 0x1b594fdba68 <col:9> 'int (*)()' <FunctionToPointerDecay>
|       | | `-DeclRefExpr 0x1b594fdb9e0 <col:9> 'int ()' Function 0x1b594fdb040 'OPENSSL_free' 'int ()'
|       | `-ImplicitCastExpr 0x1b594fdbaa8 <col:22, col:27> 'char *' <LValueToRValue>
|       |   `-MemberExpr 0x1b594fdba38 <col:22, col:27> 'char *' lvalue ->engine_id 0x1b594fd04a8
|       |     `-ImplicitCastExpr 0x1b594fdba20 <col:22> 'dynamic_data_ctx *' <LValueToRValue>
|       |       `-DeclRefExpr 0x1b594fdba00 <col:22> 'dynamic_data_ctx *' lvalue Var 0x1b594fdb6b0 'ctx' 'dynamic_data_ctx *'
|       `-CallExpr 0x1b594fdbc80 <line:144:9, col:25> 'int'
|         |-ImplicitCastExpr 0x1b594fdbc68 <col:9> 'int (*)()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x1b594fdbc28 <col:9> 'int ()' Function 0x1b594fdb040 'OPENSSL_free' 'int ()'
|         `-ImplicitCastExpr 0x1b594fdbca8 <col:22> 'dynamic_data_ctx *' <LValueToRValue>
|           `-DeclRefExpr 0x1b594fdbc48 <col:22> 'dynamic_data_ctx *' lvalue Var 0x1b594fdb6b0 'ctx' 'dynamic_data_ctx *'
|-FunctionDecl 0x1b594fd8f10 <line:154:1, line:192:1> line:154:12 invalid dynamic_set_data_ctx 'int (int *, dynamic_data_ctx **)' static
| |-ParmVarDecl 0x1b594fdbd38 <col:33, col:41> col:41 invalid e 'int *'
| |-ParmVarDecl 0x1b594fdbe10 <col:44, col:63> col:63 used ctx 'dynamic_data_ctx **'
| `-CompoundStmt 0x1b594fdd3e8 <line:155:1, line:192:1>
|   |-DeclStmt 0x1b594fd9248 <line:156:5, col:53>
|   | `-VarDecl 0x1b594fd8fe8 <col:5, col:52> col:23 used c 'dynamic_data_ctx *' cinit
|   |   `-ImplicitCastExpr 0x1b594fd9230 <col:27, col:52> 'dynamic_data_ctx *' <IntegralToPointer>
|   |     `-CallExpr 0x1b594fd9208 <col:27, col:52> 'int'
|   |       |-ImplicitCastExpr 0x1b594fd91f0 <col:27> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x1b594fd9140 <col:27> 'int ()' Function 0x1b594fd9078 'OPENSSL_zalloc' 'int ()'
|   |       `-UnaryExprOrTypeTraitExpr 0x1b594fd91d0 <col:42, col:51> 'unsigned long long' sizeof
|   |         `-ParenExpr 0x1b594fd91b0 <col:48, col:51> 'dynamic_data_ctx':'struct st_dynamic_data_ctx' lvalue
|   |           `-UnaryOperator 0x1b594fd9198 <col:49, col:50> 'dynamic_data_ctx':'struct st_dynamic_data_ctx' lvalue prefix '*' cannot overflow
|   |             `-ImplicitCastExpr 0x1b594fd9180 <col:50> 'dynamic_data_ctx *' <LValueToRValue>
|   |               `-DeclRefExpr 0x1b594fd9160 <col:50> 'dynamic_data_ctx *' lvalue Var 0x1b594fd8fe8 'c' 'dynamic_data_ctx *' non_odr_use_unevaluated
|   |-DeclStmt 0x1b594fd9308 <line:157:5, col:16>
|   | `-VarDecl 0x1b594fd9278 <col:5, col:15> col:9 used ret 'int' cinit
|   |   `-IntegerLiteral 0x1b594fd92e0 <col:15> 'int' 1
|   |-IfStmt 0x1b594fd94d0 <line:159:5, line:162:5>
|   | |-OpaqueValueExpr 0x1b594fd94b8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1b594fd94a0 <line:159:20, line:162:5>
|   |   `-ReturnStmt 0x1b594fd9490 <line:161:9, col:16>
|   |     `-IntegerLiteral 0x1b594fd9468 <col:16> 'int' 0
|   |-IfStmt 0x1b594fd97c8 <line:164:5, line:168:5>
|   | |-OpaqueValueExpr 0x1b594fd97b0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1b594fd9790 <line:164:26, line:168:5>
|   |   |-CallExpr 0x1b594fd9718 <line:166:9, col:23> 'int'
|   |   | |-ImplicitCastExpr 0x1b594fd9700 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1b594fd96c0 <col:9> 'int ()' Function 0x1b594fdb040 'OPENSSL_free' 'int ()'
|   |   | `-ImplicitCastExpr 0x1b594fd9740 <col:22> 'dynamic_data_ctx *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1b594fd96e0 <col:22> 'dynamic_data_ctx *' lvalue Var 0x1b594fd8fe8 'c' 'dynamic_data_ctx *'
|   |   `-ReturnStmt 0x1b594fd9780 <line:167:9, col:16>
|   |     `-IntegerLiteral 0x1b594fd9758 <col:16> 'int' 0
|   |-BinaryOperator 0x1b594fd9898 <line:169:5, col:21> 'const char *' '='
|   | |-MemberExpr 0x1b594fd9818 <col:5, col:8> 'const char *' lvalue ->DYNAMIC_F1 0x1b594fd0588
|   | | `-ImplicitCastExpr 0x1b594fd9800 <col:5> 'dynamic_data_ctx *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1b594fd97e0 <col:5> 'dynamic_data_ctx *' lvalue Var 0x1b594fd8fe8 'c' 'dynamic_data_ctx *'
|   | `-ImplicitCastExpr 0x1b594fd9880 <col:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1b594fd9868 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1b594fd9848 <col:21> 'char [8]' lvalue "v_check"
|   |-BinaryOperator 0x1b594fd99b0 <line:170:5, col:21> 'const char *' '='
|   | |-MemberExpr 0x1b594fd98f0 <col:5, col:8> 'const char *' lvalue ->DYNAMIC_F2 0x1b594fd05f8
|   | | `-ImplicitCastExpr 0x1b594fd98d8 <col:5> 'dynamic_data_ctx *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1b594fd98b8 <col:5> 'dynamic_data_ctx *' lvalue Var 0x1b594fd8fe8 'c' 'dynamic_data_ctx *'
|   | `-ImplicitCastExpr 0x1b594fd9998 <col:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1b594fd9980 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1b594fd9958 <col:21> 'char [12]' lvalue "bind_engine"
|   |-BinaryOperator 0x1b594fd9a60 <line:171:5, col:19> 'int' '='
|   | |-MemberExpr 0x1b594fd9a08 <col:5, col:8> 'int' lvalue ->dir_load 0x1b594fd0668
|   | | `-ImplicitCastExpr 0x1b594fd99f0 <col:5> 'dynamic_data_ctx *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1b594fd99d0 <col:5> 'dynamic_data_ctx *' lvalue Var 0x1b594fd8fe8 'c' 'dynamic_data_ctx *'
|   | `-IntegerLiteral 0x1b594fd9a38 <col:19> 'int' 1
|   |-IfStmt 0x1b594fdd060 <line:173:5, line:182:5>
|   | |-OpaqueValueExpr 0x1b594fdd048 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1b594fdd030 <line:175:18, line:182:5>
|   |   `-IfStmt 0x1b594fdd018 <line:178:9, line:181:9>
|   |     |-ImplicitCastExpr 0x1b594fdcf20 <line:178:13> 'int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1b594fdcf00 <col:13> 'int' lvalue Var 0x1b594fd9278 'ret' 'int'
|   |     `-CompoundStmt 0x1b594fdd000 <col:18, line:181:9>
|   |       `-BinaryOperator 0x1b594fdcfc0 <line:179:13, col:20> 'dynamic_data_ctx *' '='
|   |         |-UnaryOperator 0x1b594fdcf70 <col:13, col:14> 'dynamic_data_ctx *' lvalue prefix '*' cannot overflow
|   |         | `-ImplicitCastExpr 0x1b594fdcf58 <col:14> 'dynamic_data_ctx **' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x1b594fdcf38 <col:14> 'dynamic_data_ctx **' lvalue ParmVar 0x1b594fdbe10 'ctx' 'dynamic_data_ctx **'
|   |         `-ImplicitCastExpr 0x1b594fdcfa8 <col:20> 'dynamic_data_ctx *' <LValueToRValue>
|   |           `-DeclRefExpr 0x1b594fdcf88 <col:20> 'dynamic_data_ctx *' lvalue Var 0x1b594fd8fe8 'c' 'dynamic_data_ctx *'
|   |-CallExpr 0x1b594fdd360 <line:190:5, col:19> 'int'
|   | |-ImplicitCastExpr 0x1b594fdd348 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1b594fdd308 <col:5> 'int ()' Function 0x1b594fdb040 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x1b594fdd388 <col:18> 'dynamic_data_ctx *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1b594fdd328 <col:18> 'dynamic_data_ctx *' lvalue Var 0x1b594fd8fe8 'c' 'dynamic_data_ctx *'
|   `-ReturnStmt 0x1b594fdd3d8 <line:191:5, col:12>
|     `-ImplicitCastExpr 0x1b594fdd3c0 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1b594fdd3a0 <col:12> 'int' lvalue Var 0x1b594fd9278 'ret' 'int'
|-FunctionDecl 0x1b594fdd558 <line:198:1, line:232:1> line:198:26 invalid dynamic_get_data_ctx 'dynamic_data_ctx *(int *)' static
| |-ParmVarDecl 0x1b594fdd460 <col:47, col:55> col:55 invalid e 'int *'
| `-CompoundStmt 0x1b594fddd38 <line:199:1, line:232:1>
|   |-DeclStmt 0x1b594fdd690 <line:200:5, col:26>
|   | `-VarDecl 0x1b594fdd628 <col:5, col:23> col:23 used ctx 'dynamic_data_ctx *'
|   |-IfStmt 0x1b594fddc08 <line:201:5, line:225:5>
|   | |-BinaryOperator 0x1b594fdd708 <line:201:9, col:31> 'int' '<'
|   | | |-ImplicitCastExpr 0x1b594fdd6f0 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1b594fdd6a8 <col:9> 'int' lvalue Var 0x1b594fd0758 'dynamic_ex_data_idx' 'int'
|   | | `-IntegerLiteral 0x1b594fdd6c8 <col:31> 'int' 0
|   | `-CompoundStmt 0x1b594fddbe0 <col:34, line:225:5>
|   |   |-DeclStmt 0x1b594fdd8e0 <line:207:9, line:208:74>
|   |   | `-VarDecl 0x1b594fdd740 <line:207:9, col:13> col:13 used new_idx 'int'
|   |   |-IfStmt 0x1b594fdd9d8 <line:209:9, line:212:9>
|   |   | |-BinaryOperator 0x1b594fdd988 <line:209:13, col:25> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x1b594fdd970 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1b594fdd8f8 <col:13> 'int' lvalue Var 0x1b594fdd740 'new_idx' 'int'
|   |   | | `-UnaryOperator 0x1b594fdd958 <col:24, col:25> 'int' prefix '-'
|   |   | |   `-IntegerLiteral 0x1b594fdd930 <col:25> 'int' 1
|   |   | `-CompoundStmt 0x1b594fdd9c8 <col:28, line:212:9>
|   |   `-IfStmt 0x1b594fddba8 <line:215:9, line:219:9>
|   |     |-BinaryOperator 0x1b594fdda70 <line:215:13, col:35> 'int' '<'
|   |     | |-ImplicitCastExpr 0x1b594fdda58 <col:13> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1b594fdda10 <col:13> 'int' lvalue Var 0x1b594fd0758 'dynamic_ex_data_idx' 'int'
|   |     | `-IntegerLiteral 0x1b594fdda30 <col:35> 'int' 0
|   |     `-CompoundStmt 0x1b594fddb88 <col:38, line:219:9>
|   |       |-BinaryOperator 0x1b594fddae8 <line:217:13, col:35> 'int' '='
|   |       | |-DeclRefExpr 0x1b594fdda90 <col:13> 'int' lvalue Var 0x1b594fd0758 'dynamic_ex_data_idx' 'int'
|   |       | `-ImplicitCastExpr 0x1b594fddad0 <col:35> 'int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x1b594fddab0 <col:35> 'int' lvalue Var 0x1b594fdd740 'new_idx' 'int'
|   |       `-BinaryOperator 0x1b594fddb68 <line:218:13, col:24> 'int' '='
|   |         |-DeclRefExpr 0x1b594fddb08 <col:13> 'int' lvalue Var 0x1b594fdd740 'new_idx' 'int'
|   |         `-UnaryOperator 0x1b594fddb50 <col:23, col:24> 'int' prefix '-'
|   |           `-IntegerLiteral 0x1b594fddb28 <col:24> 'int' 1
|   `-ReturnStmt 0x1b594fddd28 <line:231:5, col:12>
|     `-ImplicitCastExpr 0x1b594fddd10 <col:12> 'dynamic_data_ctx *' <LValueToRValue>
|       `-DeclRefExpr 0x1b594fddcf0 <col:12> 'dynamic_data_ctx *' lvalue Var 0x1b594fdd628 'ctx' 'dynamic_data_ctx *'
|-FunctionDecl 0x1b594fddeb0 <line:234:1, line:250:1> line:234:16 invalid engine_dynamic 'int *(void)' static
| `-CompoundStmt 0x1b594fde9b0 <line:235:1, line:250:1>
|   `-IfStmt 0x1b594fde998 <line:239:5, line:248:5>
|     |-OpaqueValueExpr 0x1b594fde980 <<invalid sloc>> '_Bool'
|     `-CompoundStmt 0x1b594fde970 <line:245:56, line:248:5>
|-FunctionDecl 0x1b594fdea60 <line:252:1, line:269:1> line:252:6 engine_load_dynamic_int 'void (void)'
| `-CompoundStmt 0x1b594fdedd0 <line:253:1, line:269:1>
|   |-IfStmt 0x1b594fdeb40 <line:255:5, line:256:9>
|   | |-OpaqueValueExpr 0x1b594fdeb28 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1b594fdeb18 <col:9>
|   `-CallExpr 0x1b594fdedb0 <line:268:5, col:21> 'int'
|     `-ImplicitCastExpr 0x1b594fded98 <col:5> 'int (*)()' <FunctionToPointerDecay>
|       `-DeclRefExpr 0x1b594fded78 <col:5> 'int ()' Function 0x1b594fdecb0 'ERR_clear_error' 'int ()'
|-FunctionDecl 0x1b594fd6e40 <line:271:1, line:278:1> line:271:12 invalid dynamic_init 'int (int *)' static
| |-ParmVarDecl 0x1b594fdee08 <col:25, col:33> col:33 invalid e 'int *'
| `-CompoundStmt 0x1b594fd6f38 <line:272:1, line:278:1>
|   `-ReturnStmt 0x1b594fd6f28 <line:277:5, col:12>
|     `-IntegerLiteral 0x1b594fd6f00 <col:12> 'int' 0
|-FunctionDecl 0x1b594fd7000 <line:280:1, line:287:1> line:280:12 invalid dynamic_finish 'int (int *)' static
| |-ParmVarDecl 0x1b594fd6f68 <col:27, col:35> col:35 invalid e 'int *'
| `-CompoundStmt 0x1b594fd70f8 <line:281:1, line:287:1>
|   `-ReturnStmt 0x1b594fd70e8 <line:286:5, col:12>
|     `-IntegerLiteral 0x1b594fd70c0 <col:12> 'int' 0
|-FunctionDecl 0x1b594fd7470 <line:289:1, line:368:1> line:289:12 invalid dynamic_ctrl 'int (int *, int, long, void *, void (*)(void))' static
| |-ParmVarDecl 0x1b594fd7128 <col:25, col:33> col:33 invalid e 'int *'
| |-ParmVarDecl 0x1b594fd71a8 <col:36, col:40> col:40 used cmd 'int'
| |-ParmVarDecl 0x1b594fd7228 <col:45, col:50> col:50 used i 'long'
| |-ParmVarDecl 0x1b594fd72a8 <col:53, col:59> col:59 used p 'void *'
| |-ParmVarDecl 0x1b594fd73b8 <col:62, col:77> col:69 f 'void (*)(void)'
| `-CompoundStmt 0x1b594fdfab0 <line:290:1, line:368:1>
|   |-DeclStmt 0x1b594fd75c8 <line:291:5, col:52>
|   | `-VarDecl 0x1b594fd7560 <col:5, col:23> col:23 used ctx 'dynamic_data_ctx *'
|   |-DeclStmt 0x1b594fd7660 <line:292:5, col:20>
|   | `-VarDecl 0x1b594fd75f8 <col:5, col:9> col:9 used initialised 'int'
|   |-IfStmt 0x1b594fd7750 <line:294:5, line:297:5>
|   | |-UnaryOperator 0x1b594fd76c8 <line:294:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x1b594fd76b0 <col:10> 'dynamic_data_ctx *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1b594fd7678 <col:10> 'dynamic_data_ctx *' lvalue Var 0x1b594fd7560 'ctx' 'dynamic_data_ctx *'
|   | `-CompoundStmt 0x1b594fd7738 <col:15, line:297:5>
|   |   `-ReturnStmt 0x1b594fd7728 <line:296:9, col:16>
|   |     `-IntegerLiteral 0x1b594fd7700 <col:16> 'int' 0
|   |-IfStmt 0x1b594fd78d0 <line:300:5, line:303:5>
|   | |-ImplicitCastExpr 0x1b594fd7848 <line:300:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1b594fd7828 <col:9> 'int' lvalue Var 0x1b594fd75f8 'initialised' 'int'
|   | `-CompoundStmt 0x1b594fd78b8 <col:22, line:303:5>
|   |   `-ReturnStmt 0x1b594fd78a8 <line:302:9, col:16>
|   |     `-IntegerLiteral 0x1b594fd7880 <col:16> 'int' 0
|   |-SwitchStmt 0x1b594fd7938 <line:304:5, line:365:5>
|   | |-ImplicitCastExpr 0x1b594fd7920 <line:304:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1b594fd78e8 <col:13> 'int' lvalue ParmVar 0x1b594fd71a8 'cmd' 'int'
|   | `-CompoundStmt 0x1b594fdf9b8 <col:18, line:365:5>
|   |   |-CallExpr 0x1b594fd7d60 <line:309:9, col:42> 'int'
|   |   | |-ImplicitCastExpr 0x1b594fd7d48 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1b594fd7cc0 <col:9> 'int ()' Function 0x1b594fdb040 'OPENSSL_free' 'int ()'
|   |   | `-ImplicitCastExpr 0x1b594fd7d88 <col:22, col:27> 'char *' <LValueToRValue>
|   |   |   `-MemberExpr 0x1b594fd7d18 <col:22, col:27> 'char *' lvalue ->DYNAMIC_LIBNAME 0x1b594fd03c8
|   |   |     `-ImplicitCastExpr 0x1b594fd7d00 <col:22> 'dynamic_data_ctx *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x1b594fd7ce0 <col:22> 'dynamic_data_ctx *' lvalue Var 0x1b594fd7560 'ctx' 'dynamic_data_ctx *'
|   |   |-IfStmt 0x1b594fd8080 <line:310:9, line:313:13> has_else
|   |   | |-ImplicitCastExpr 0x1b594fd7dc0 <line:310:13> 'void *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1b594fd7da0 <col:13> 'void *' lvalue ParmVar 0x1b594fd72a8 'p' 'void *'
|   |   | |-BinaryOperator 0x1b594fd7ff0 <line:311:13, col:52> 'char *' '='
|   |   | | |-MemberExpr 0x1b594fd7e10 <col:13, col:18> 'char *' lvalue ->DYNAMIC_LIBNAME 0x1b594fd03c8
|   |   | | | `-ImplicitCastExpr 0x1b594fd7df8 <col:13> 'dynamic_data_ctx *' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x1b594fd7dd8 <col:13> 'dynamic_data_ctx *' lvalue Var 0x1b594fd7560 'ctx' 'dynamic_data_ctx *'
|   |   | | `-ImplicitCastExpr 0x1b594fd7fd8 <col:36, col:52> 'char *' <IntegralToPointer>
|   |   | |   `-CallExpr 0x1b594fd7f98 <col:36, col:52> 'int'
|   |   | |     |-ImplicitCastExpr 0x1b594fd7f80 <col:36> 'int (*)()' <FunctionToPointerDecay>
|   |   | |     | `-DeclRefExpr 0x1b594fd7f40 <col:36> 'int ()' Function 0x1b594fd7e78 'OPENSSL_strdup' 'int ()'
|   |   | |     `-ImplicitCastExpr 0x1b594fd7fc0 <col:51> 'void *' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x1b594fd7f60 <col:51> 'void *' lvalue ParmVar 0x1b594fd72a8 'p' 'void *'
|   |   | `-NullStmt 0x1b594fd8078 <line:313:13>
|   |   |-ReturnStmt 0x1b594fd81c8 <line:314:9, col:45>
|   |   | `-ParenExpr 0x1b594fd81a8 <col:16, col:45> 'int'
|   |   |   `-ConditionalOperator 0x1b594fd8178 <col:17, col:44> 'int'
|   |   |     |-ImplicitCastExpr 0x1b594fd8160 <col:17, col:22> 'char *' <LValueToRValue>
|   |   |     | `-MemberExpr 0x1b594fd80e0 <col:17, col:22> 'char *' lvalue ->DYNAMIC_LIBNAME 0x1b594fd03c8
|   |   |     |   `-ImplicitCastExpr 0x1b594fd80c8 <col:17> 'dynamic_data_ctx *' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x1b594fd80a8 <col:17> 'dynamic_data_ctx *' lvalue Var 0x1b594fd7560 'ctx' 'dynamic_data_ctx *'
|   |   |     |-IntegerLiteral 0x1b594fd8110 <col:40> 'int' 1
|   |   |     `-IntegerLiteral 0x1b594fd8138 <col:44> 'int' 0
|   |   |-BinaryOperator 0x1b594fd83d8 <line:316:9, col:43> 'int' '='
|   |   | |-MemberExpr 0x1b594fd8238 <col:9, col:14> 'int' lvalue ->no_vcheck 0x1b594fd0438
|   |   | | `-ImplicitCastExpr 0x1b594fd8220 <col:9> 'dynamic_data_ctx *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1b594fd8200 <col:9> 'dynamic_data_ctx *' lvalue Var 0x1b594fd7560 'ctx' 'dynamic_data_ctx *'
|   |   | `-ParenExpr 0x1b594fd83b8 <col:26, col:43> 'int'
|   |   |   `-ConditionalOperator 0x1b594fd8388 <col:27, col:42> 'int'
|   |   |     |-ParenExpr 0x1b594fd8318 <col:27, col:34> 'int'
|   |   |     | `-BinaryOperator 0x1b594fd82f8 <col:28, col:33> 'int' '=='
|   |   |     |   |-ImplicitCastExpr 0x1b594fd82c8 <col:28> 'long' <LValueToRValue>
|   |   |     |   | `-DeclRefExpr 0x1b594fd8268 <col:28> 'long' lvalue ParmVar 0x1b594fd7228 'i' 'long'
|   |   |     |   `-ImplicitCastExpr 0x1b594fd82e0 <col:33> 'long' <IntegralCast>
|   |   |     |     `-IntegerLiteral 0x1b594fd82a0 <col:33> 'int' 0
|   |   |     |-IntegerLiteral 0x1b594fd8338 <col:38> 'int' 0
|   |   |     `-IntegerLiteral 0x1b594fd8360 <col:42> 'int' 1
|   |   |-ReturnStmt 0x1b594fd8420 <line:317:9, col:16>
|   |   | `-IntegerLiteral 0x1b594fd83f8 <col:16> 'int' 1
|   |   |-CallExpr 0x1b594fd86c8 <line:322:9, col:36> 'int'
|   |   | |-ImplicitCastExpr 0x1b594fd86b0 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1b594fd8628 <col:9> 'int ()' Function 0x1b594fdb040 'OPENSSL_free' 'int ()'
|   |   | `-ImplicitCastExpr 0x1b594fd86f0 <col:22, col:27> 'char *' <LValueToRValue>
|   |   |   `-MemberExpr 0x1b594fd8680 <col:22, col:27> 'char *' lvalue ->engine_id 0x1b594fd04a8
|   |   |     `-ImplicitCastExpr 0x1b594fd8668 <col:22> 'dynamic_data_ctx *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x1b594fd8648 <col:22> 'dynamic_data_ctx *' lvalue Var 0x1b594fd7560 'ctx' 'dynamic_data_ctx *'
|   |   |-IfStmt 0x1b594fd88e8 <line:323:9, line:326:13> has_else
|   |   | |-ImplicitCastExpr 0x1b594fd8728 <line:323:13> 'void *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1b594fd8708 <col:13> 'void *' lvalue ParmVar 0x1b594fd72a8 'p' 'void *'
|   |   | |-BinaryOperator 0x1b594fd8858 <line:324:13, col:46> 'char *' '='
|   |   | | |-MemberExpr 0x1b594fd8778 <col:13, col:18> 'char *' lvalue ->engine_id 0x1b594fd04a8
|   |   | | | `-ImplicitCastExpr 0x1b594fd8760 <col:13> 'dynamic_data_ctx *' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x1b594fd8740 <col:13> 'dynamic_data_ctx *' lvalue Var 0x1b594fd7560 'ctx' 'dynamic_data_ctx *'
|   |   | | `-ImplicitCastExpr 0x1b594fd8840 <col:30, col:46> 'char *' <IntegralToPointer>
|   |   | |   `-CallExpr 0x1b594fd8800 <col:30, col:46> 'int'
|   |   | |     |-ImplicitCastExpr 0x1b594fd87e8 <col:30> 'int (*)()' <FunctionToPointerDecay>
|   |   | |     | `-DeclRefExpr 0x1b594fd87a8 <col:30> 'int ()' Function 0x1b594fd7e78 'OPENSSL_strdup' 'int ()'
|   |   | |     `-ImplicitCastExpr 0x1b594fd8828 <col:45> 'void *' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x1b594fd87c8 <col:45> 'void *' lvalue ParmVar 0x1b594fd72a8 'p' 'void *'
|   |   | `-NullStmt 0x1b594fd88e0 <line:326:13>
|   |   |-ReturnStmt 0x1b594fd8a30 <line:327:9, col:39>
|   |   | `-ParenExpr 0x1b594fd8a10 <col:16, col:39> 'int'
|   |   |   `-ConditionalOperator 0x1b594fd89e0 <col:17, col:38> 'int'
|   |   |     |-ImplicitCastExpr 0x1b594fd89c8 <col:17, col:22> 'char *' <LValueToRValue>
|   |   |     | `-MemberExpr 0x1b594fd8948 <col:17, col:22> 'char *' lvalue ->engine_id 0x1b594fd04a8
|   |   |     |   `-ImplicitCastExpr 0x1b594fd8930 <col:17> 'dynamic_data_ctx *' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x1b594fd8910 <col:17> 'dynamic_data_ctx *' lvalue Var 0x1b594fd7560 'ctx' 'dynamic_data_ctx *'
|   |   |     |-IntegerLiteral 0x1b594fd8978 <col:34> 'int' 1
|   |   |     `-IntegerLiteral 0x1b594fd89a0 <col:38> 'int' 0
|   |   |-IfStmt 0x1b594fd8c68 <line:329:9, line:332:9>
|   |   | |-BinaryOperator 0x1b594fd8bd8 <line:329:13, col:30> 'int' '||'
|   |   | | |-ParenExpr 0x1b594fd8b00 <col:13, col:19> 'int'
|   |   | | | `-BinaryOperator 0x1b594fd8ae0 <col:14, col:18> 'int' '<'
|   |   | | |   |-ImplicitCastExpr 0x1b594fd8ab0 <col:14> 'long' <LValueToRValue>
|   |   | | |   | `-DeclRefExpr 0x1b594fd8a68 <col:14> 'long' lvalue ParmVar 0x1b594fd7228 'i' 'long'
|   |   | | |   `-ImplicitCastExpr 0x1b594fd8ac8 <col:18> 'long' <IntegralCast>
|   |   | | |     `-IntegerLiteral 0x1b594fd8a88 <col:18> 'int' 0
|   |   | | `-ParenExpr 0x1b594fd8bb8 <col:24, col:30> 'int'
|   |   | |   `-BinaryOperator 0x1b594fd8b98 <col:25, col:29> 'int' '>'
|   |   | |     |-ImplicitCastExpr 0x1b594fd8b68 <col:25> 'long' <LValueToRValue>
|   |   | |     | `-DeclRefExpr 0x1b594fd8b20 <col:25> 'long' lvalue ParmVar 0x1b594fd7228 'i' 'long'
|   |   | |     `-ImplicitCastExpr 0x1b594fd8b80 <col:29> 'long' <IntegralCast>
|   |   | |       `-IntegerLiteral 0x1b594fd8b40 <col:29> 'int' 2
|   |   | `-CompoundStmt 0x1b594fd8c50 <col:33, line:332:9>
|   |   |   `-ReturnStmt 0x1b594fd8c40 <line:331:13, col:20>
|   |   |     `-IntegerLiteral 0x1b594fd8c18 <col:20> 'int' 0
|   |   |-BinaryOperator 0x1b594fd8d60 <line:333:9, col:36> 'int' '='
|   |   | |-MemberExpr 0x1b594fd8cb8 <col:9, col:14> 'int' lvalue ->list_add_value 0x1b594fd0518
|   |   | | `-ImplicitCastExpr 0x1b594fd8ca0 <col:9> 'dynamic_data_ctx *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1b594fd8c80 <col:9> 'dynamic_data_ctx *' lvalue Var 0x1b594fd7560 'ctx' 'dynamic_data_ctx *'
|   |   | `-CStyleCastExpr 0x1b594fd8d38 <col:31, col:36> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x1b594fd8d20 <col:36> 'long' <LValueToRValue> part_of_explicit_cast
|   |   |     `-DeclRefExpr 0x1b594fd8ce8 <col:36> 'long' lvalue ParmVar 0x1b594fd7228 'i' 'long'
|   |   |-ReturnStmt 0x1b594fd8da8 <line:334:9, col:16>
|   |   | `-IntegerLiteral 0x1b594fd8d80 <col:16> 'int' 1
|   |   |-IfStmt 0x1b594fdf0a0 <line:338:9, line:341:9>
|   |   | |-BinaryOperator 0x1b594fdf010 <line:338:13, col:30> 'int' '||'
|   |   | | |-ParenExpr 0x1b594fdef38 <col:13, col:19> 'int'
|   |   | | | `-BinaryOperator 0x1b594fdef18 <col:14, col:18> 'int' '<'
|   |   | | |   |-ImplicitCastExpr 0x1b594fdeee8 <col:14> 'long' <LValueToRValue>
|   |   | | |   | `-DeclRefExpr 0x1b594fd8e28 <col:14> 'long' lvalue ParmVar 0x1b594fd7228 'i' 'long'
|   |   | | |   `-ImplicitCastExpr 0x1b594fdef00 <col:18> 'long' <IntegralCast>
|   |   | | |     `-IntegerLiteral 0x1b594fdeec0 <col:18> 'int' 0
|   |   | | `-ParenExpr 0x1b594fdeff0 <col:24, col:30> 'int'
|   |   | |   `-BinaryOperator 0x1b594fdefd0 <col:25, col:29> 'int' '>'
|   |   | |     |-ImplicitCastExpr 0x1b594fdefa0 <col:25> 'long' <LValueToRValue>
|   |   | |     | `-DeclRefExpr 0x1b594fdef58 <col:25> 'long' lvalue ParmVar 0x1b594fd7228 'i' 'long'
|   |   | |     `-ImplicitCastExpr 0x1b594fdefb8 <col:29> 'long' <IntegralCast>
|   |   | |       `-IntegerLiteral 0x1b594fdef78 <col:29> 'int' 2
|   |   | `-CompoundStmt 0x1b594fdf088 <col:33, line:341:9>
|   |   |   `-ReturnStmt 0x1b594fdf078 <line:340:13, col:20>
|   |   |     `-IntegerLiteral 0x1b594fdf050 <col:20> 'int' 0
|   |   |-BinaryOperator 0x1b594fdf198 <line:342:9, col:30> 'int' '='
|   |   | |-MemberExpr 0x1b594fdf0f0 <col:9, col:14> 'int' lvalue ->dir_load 0x1b594fd0668
|   |   | | `-ImplicitCastExpr 0x1b594fdf0d8 <col:9> 'dynamic_data_ctx *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1b594fdf0b8 <col:9> 'dynamic_data_ctx *' lvalue Var 0x1b594fd7560 'ctx' 'dynamic_data_ctx *'
|   |   | `-CStyleCastExpr 0x1b594fdf170 <col:25, col:30> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x1b594fdf158 <col:30> 'long' <LValueToRValue> part_of_explicit_cast
|   |   |     `-DeclRefExpr 0x1b594fdf120 <col:30> 'long' lvalue ParmVar 0x1b594fd7228 'i' 'long'
|   |   |-ReturnStmt 0x1b594fdf1e0 <line:343:9, col:16>
|   |   | `-IntegerLiteral 0x1b594fdf1b8 <col:16> 'int' 1
|   |   |-IfStmt 0x1b594fdf450 <line:346:9, line:349:9>
|   |   | |-BinaryOperator 0x1b594fdf3c0 <line:346:13, col:47> 'int' '||'
|   |   | | |-UnaryOperator 0x1b594fdf250 <col:13, col:14> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x1b594fdf238 <col:14> 'void *' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x1b594fdf218 <col:14> 'void *' lvalue ParmVar 0x1b594fd72a8 'p' 'void *'
|   |   | | `-ParenExpr 0x1b594fdf3a0 <col:19, col:47> 'int'
|   |   | |   `-BinaryOperator 0x1b594fdf380 <col:20, col:46> 'int' '<'
|   |   | |     |-CallExpr 0x1b594fdf318 <col:20, col:42> 'unsigned long long'
|   |   | |     | |-ImplicitCastExpr 0x1b594fdf300 <col:20> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |   | |     | | `-DeclRefExpr 0x1b594fdf268 <col:20> 'unsigned long long (const char *)' Function 0x1b594fd79c0 'strlen' 'unsigned long long (const char *)'
|   |   | |     | `-CStyleCastExpr 0x1b594fdf2d8 <col:27, col:41> 'const char *' <BitCast>
|   |   | |     |   `-ImplicitCastExpr 0x1b594fdf2c0 <col:41> 'void *' <LValueToRValue> part_of_explicit_cast
|   |   | |     |     `-DeclRefExpr 0x1b594fdf288 <col:41> 'void *' lvalue ParmVar 0x1b594fd72a8 'p' 'void *'
|   |   | |     `-ImplicitCastExpr 0x1b594fdf368 <col:46> 'unsigned long long' <IntegralCast>
|   |   | |       `-IntegerLiteral 0x1b594fdf340 <col:46> 'int' 1
|   |   | `-CompoundStmt 0x1b594fdf438 <col:50, line:349:9>
|   |   |   `-ReturnStmt 0x1b594fdf428 <line:348:13, col:20>
|   |   |     `-IntegerLiteral 0x1b594fdf400 <col:20> 'int' 0
|   |   |-CompoundStmt 0x1b594fdf930 <line:350:9, line:361:9>
|   |   | |-DeclStmt 0x1b594fdf598 <line:351:13, col:46>
|   |   | | `-VarDecl 0x1b594fdf480 <col:13, col:45> col:19 used tmp_str 'char *' cinit
|   |   | |   `-ImplicitCastExpr 0x1b594fdf580 <col:29, col:45> 'char *' <IntegralToPointer>
|   |   | |     `-CallExpr 0x1b594fdf540 <col:29, col:45> 'int'
|   |   | |       |-ImplicitCastExpr 0x1b594fdf528 <col:29> 'int (*)()' <FunctionToPointerDecay>
|   |   | |       | `-DeclRefExpr 0x1b594fdf4e8 <col:29> 'int ()' Function 0x1b594fd7e78 'OPENSSL_strdup' 'int ()'
|   |   | |       `-ImplicitCastExpr 0x1b594fdf568 <col:44> 'void *' <LValueToRValue>
|   |   | |         `-DeclRefExpr 0x1b594fdf508 <col:44> 'void *' lvalue ParmVar 0x1b594fd72a8 'p' 'void *'
|   |   | |-IfStmt 0x1b594fdf670 <line:352:13, line:355:13>
|   |   | | |-OpaqueValueExpr 0x1b594fdf658 <<invalid sloc>> '_Bool'
|   |   | | `-CompoundStmt 0x1b594fdf640 <line:352:34, line:355:13>
|   |   | |   `-ReturnStmt 0x1b594fdf630 <line:354:17, col:24>
|   |   | |     `-IntegerLiteral 0x1b594fdf608 <col:24> 'int' 0
|   |   | `-IfStmt 0x1b594fdf918 <line:356:13, line:360:13>
|   |   |   |-OpaqueValueExpr 0x1b594fdf900 <<invalid sloc>> '_Bool'
|   |   |   `-CompoundStmt 0x1b594fdf8e0 <line:356:62, line:360:13>
|   |   |     |-CallExpr 0x1b594fdf848 <line:357:17, col:37> 'int'
|   |   |     | |-ImplicitCastExpr 0x1b594fdf830 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |   |     | | `-DeclRefExpr 0x1b594fdf7f0 <col:17> 'int ()' Function 0x1b594fdb040 'OPENSSL_free' 'int ()'
|   |   |     | `-ImplicitCastExpr 0x1b594fdf870 <col:30> 'char *' <LValueToRValue>
|   |   |     |   `-DeclRefExpr 0x1b594fdf810 <col:30> 'char *' lvalue Var 0x1b594fdf480 'tmp_str' 'char *'
|   |   |     `-ReturnStmt 0x1b594fdf8d0 <line:359:17, col:24>
|   |   |       `-IntegerLiteral 0x1b594fdf8a8 <col:24> 'int' 0
|   |   |-ReturnStmt 0x1b594fdf980 <line:362:9, col:16>
|   |   | `-IntegerLiteral 0x1b594fdf958 <col:16> 'int' 1
|   |   `-DefaultStmt 0x1b594fdf998 <line:363:5, line:364:9>
|   |     `-BreakStmt 0x1b594fdf990 <col:9>
|   `-ReturnStmt 0x1b594fdfaa0 <line:367:5, col:12>
|     `-IntegerLiteral 0x1b594fdfa78 <col:12> 'int' 0
|-FunctionDecl 0x1b594fd79c0 <line:307:19> col:19 implicit used strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x1b594fd7a60 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1b594fdfc10 <line:370:1, line:394:1> line:370:12 used int_load 'int (dynamic_data_ctx *)' static
| |-ParmVarDecl 0x1b594fdfb00 <col:21, col:39> col:39 used ctx 'dynamic_data_ctx *'
| `-CompoundStmt 0x1b594fe0d78 <line:371:1, line:394:1>
|   |-DeclStmt 0x1b594fdfde8 <line:372:5, col:18>
|   | |-VarDecl 0x1b594fdfce8 <col:5, col:9> col:9 used num 'int'
|   | `-VarDecl 0x1b594fdfd68 <col:5, col:14> col:14 used loop 'int'
|   |-IfStmt 0x1b594fe0138 <line:374:5, line:377:16>
|   | |-OpaqueValueExpr 0x1b594fe0120 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1b594fe0110 <col:9, col:16>
|   |   `-IntegerLiteral 0x1b594fe00e8 <col:16> 'int' 1
|   |-IfStmt 0x1b594fe03e0 <line:379:5, line:380:16>
|   | |-OpaqueValueExpr 0x1b594fe03c8 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1b594fe03b8 <col:9, col:16>
|   |   `-IntegerLiteral 0x1b594fe0390 <col:16> 'int' 0
|   |-ForStmt 0x1b594fe0d08 <line:381:5, line:392:5>
|   | |-BinaryOperator 0x1b594fe0458 <line:381:10, col:17> 'int' '='
|   | | |-DeclRefExpr 0x1b594fe03f8 <col:10> 'int' lvalue Var 0x1b594fdfd68 'loop' 'int'
|   | | `-IntegerLiteral 0x1b594fe0430 <col:17> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1b594fe04e8 <col:20, col:27> 'int' '<'
|   | | |-ImplicitCastExpr 0x1b594fe04b8 <col:20> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1b594fe0478 <col:20> 'int' lvalue Var 0x1b594fdfd68 'loop' 'int'
|   | | `-ImplicitCastExpr 0x1b594fe04d0 <col:27> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1b594fe0498 <col:27> 'int' lvalue Var 0x1b594fdfce8 'num' 'int'
|   | |-UnaryOperator 0x1b594fe0528 <col:32, col:36> 'int' postfix '++'
|   | | `-DeclRefExpr 0x1b594fe0508 <col:32> 'int' lvalue Var 0x1b594fdfd68 'loop' 'int'
|   | `-CompoundStmt 0x1b594fe0cd0 <col:40, line:392:5>
|   |   |-DeclStmt 0x1b594fe0728 <line:382:9, col:65>
|   |   | `-VarDecl 0x1b594fe0558 <col:9, col:21> col:21 used s 'const char *'
|   |   |-DeclStmt 0x1b594fe09a8 <line:383:9, col:75>
|   |   | `-VarDecl 0x1b594fe0758 <col:9, col:15> col:15 used merge 'char *'
|   |   |-IfStmt 0x1b594fe0a60 <line:384:9, line:385:20>
|   |   | |-UnaryOperator 0x1b594fe0a10 <line:384:13, col:14> 'int' prefix '!' cannot overflow
|   |   | | `-ImplicitCastExpr 0x1b594fe09f8 <col:14> 'char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1b594fe09c0 <col:14> 'char *' lvalue Var 0x1b594fe0758 'merge' 'char *'
|   |   | `-ReturnStmt 0x1b594fe0a50 <line:385:13, col:20>
|   |   |   `-IntegerLiteral 0x1b594fe0a28 <col:20> 'int' 0
|   |   |-IfStmt 0x1b594fe0c20 <line:386:9, line:390:9>
|   |   | |-OpaqueValueExpr 0x1b594fe0c08 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x1b594fe0be8 <line:386:57, line:390:9>
|   |   |   |-CallExpr 0x1b594fe0b70 <line:388:13, col:31> 'int'
|   |   |   | |-ImplicitCastExpr 0x1b594fe0b58 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x1b594fe0b18 <col:13> 'int ()' Function 0x1b594fdb040 'OPENSSL_free' 'int ()'
|   |   |   | `-ImplicitCastExpr 0x1b594fe0b98 <col:26> 'char *' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x1b594fe0b38 <col:26> 'char *' lvalue Var 0x1b594fe0758 'merge' 'char *'
|   |   |   `-ReturnStmt 0x1b594fe0bd8 <line:389:13, col:20>
|   |   |     `-IntegerLiteral 0x1b594fe0bb0 <col:20> 'int' 1
|   |   `-CallExpr 0x1b594fe0c90 <line:391:9, col:27> 'int'
|   |     |-ImplicitCastExpr 0x1b594fe0c78 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1b594fe0c38 <col:9> 'int ()' Function 0x1b594fdb040 'OPENSSL_free' 'int ()'
|   |     `-ImplicitCastExpr 0x1b594fe0cb8 <col:22> 'char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1b594fe0c58 <col:22> 'char *' lvalue Var 0x1b594fe0758 'merge' 'char *'
|   `-ReturnStmt 0x1b594fe0d68 <line:393:5, col:12>
|     `-IntegerLiteral 0x1b594fe0d40 <col:12> 'int' 0
|-FunctionDecl 0x1b594fe0f18 <line:396:1, line:510:1> line:396:12 invalid dynamic_load 'int (int *, dynamic_data_ctx *)' static
| |-ParmVarDecl 0x1b594fe0dc8 <col:25, col:33> col:33 invalid e 'int *'
| |-ParmVarDecl 0x1b594fe0e40 <col:36, col:54> col:54 used ctx 'dynamic_data_ctx *'
| `-CompoundStmt 0x1b594fe8a78 <line:397:1, line:510:1>
|   |-IfStmt 0x1b594fe1238 <line:403:5, line:404:16>
|   | |-OpaqueValueExpr 0x1b594fe1220 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1b594fe1210 <col:9, col:16>
|   |   `-IntegerLiteral 0x1b594fe11e8 <col:16> 'int' 0
|   |-IfStmt 0x1b594fe1748 <line:405:5, line:412:5>
|   | |-UnaryOperator 0x1b594fe12d0 <line:405:9, col:15> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x1b594fe12b8 <col:10, col:15> 'char *' <LValueToRValue>
|   | |   `-MemberExpr 0x1b594fe1288 <col:10, col:15> 'char *' lvalue ->DYNAMIC_LIBNAME 0x1b594fd03c8
|   | |     `-ImplicitCastExpr 0x1b594fe1270 <col:10> 'dynamic_data_ctx *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x1b594fe1250 <col:10> 'dynamic_data_ctx *' lvalue ParmVar 0x1b594fe0e40 'ctx' 'dynamic_data_ctx *'
|   | `-CompoundStmt 0x1b594fe1730 <col:32, line:412:5>
|   |   `-IfStmt 0x1b594fe13b8 <line:406:9, line:407:20>
|   |     |-UnaryOperator 0x1b594fe1368 <line:406:13, col:19> 'int' prefix '!' cannot overflow
|   |     | `-ImplicitCastExpr 0x1b594fe1350 <col:14, col:19> 'char *' <LValueToRValue>
|   |     |   `-MemberExpr 0x1b594fe1320 <col:14, col:19> 'char *' lvalue ->engine_id 0x1b594fd04a8
|   |     |     `-ImplicitCastExpr 0x1b594fe1308 <col:14> 'dynamic_data_ctx *' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x1b594fe12e8 <col:14> 'dynamic_data_ctx *' lvalue ParmVar 0x1b594fe0e40 'ctx' 'dynamic_data_ctx *'
|   |     `-ReturnStmt 0x1b594fe13a8 <line:407:13, col:20>
|   |       `-IntegerLiteral 0x1b594fe1380 <col:20> 'int' 0
|   |-IfStmt 0x1b594fe1968 <line:413:5, line:418:5>
|   | |-UnaryOperator 0x1b594fe1850 <line:413:9, col:22> 'int' prefix '!' cannot overflow
|   | | `-CallExpr 0x1b594fe1810 <col:10, col:22> 'int'
|   | |   |-ImplicitCastExpr 0x1b594fe17f8 <col:10> 'int (*)(dynamic_data_ctx *)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x1b594fe1760 <col:10> 'int (dynamic_data_ctx *)' Function 0x1b594fdfc10 'int_load' 'int (dynamic_data_ctx *)'
|   | |   `-ImplicitCastExpr 0x1b594fe1838 <col:19> 'dynamic_data_ctx *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x1b594fe1780 <col:19> 'dynamic_data_ctx *' lvalue ParmVar 0x1b594fe0e40 'ctx' 'dynamic_data_ctx *'
|   | `-CompoundStmt 0x1b594fe1950 <col:25, line:418:5>
|   |   `-ReturnStmt 0x1b594fe1940 <line:417:9, col:16>
|   |     `-IntegerLiteral 0x1b594fe1918 <col:16> 'int' 0
|   |-IfStmt 0x1b594fe1b08 <line:420:5, line:429:5>
|   | |-OpaqueValueExpr 0x1b594fe1af0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1b594fe1ad8 <line:423:65, line:429:5>
|   |   `-ReturnStmt 0x1b594fe1ac8 <line:428:9, col:16>
|   |     `-IntegerLiteral 0x1b594fe1aa0 <col:16> 'int' 0
|   |-IfStmt 0x1b594fe7fc8 <line:431:5, line:457:5>
|   | |-UnaryOperator 0x1b594fe1ba0 <line:431:9, col:15> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x1b594fe1b88 <col:10, col:15> 'int' <LValueToRValue>
|   | |   `-MemberExpr 0x1b594fe1b58 <col:10, col:15> 'int' lvalue ->no_vcheck 0x1b594fd0438
|   | |     `-ImplicitCastExpr 0x1b594fe1b40 <col:10> 'dynamic_data_ctx *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x1b594fe1b20 <col:10> 'dynamic_data_ctx *' lvalue ParmVar 0x1b594fe0e40 'ctx' 'dynamic_data_ctx *'
|   | `-CompoundStmt 0x1b594fe7fa8 <col:26, line:457:5>
|   |   |-DeclStmt 0x1b594fe1c78 <line:432:9, col:37>
|   |   | `-VarDecl 0x1b594fe1bd0 <col:9, col:36> col:23 used vcheck_res 'unsigned long' cinit
|   |   |   `-ImplicitCastExpr 0x1b594fe1c60 <col:36> 'unsigned long' <IntegralCast>
|   |   |     `-IntegerLiteral 0x1b594fe1c38 <col:36> 'int' 0
|   |   `-IfStmt 0x1b594fe7f90 <line:447:9, line:456:9>
|   |     |-OpaqueValueExpr 0x1b594fe7f78 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x1b594fe7f60 <line:447:47, line:456:9>
|   |       `-ReturnStmt 0x1b594fe7f50 <line:455:13, col:20>
|   |         `-IntegerLiteral 0x1b594fe1eb0 <col:20> 'int' 0
|   |-IfStmt 0x1b594fe8718 <line:480:5, line:489:5>
|   | |-OpaqueValueExpr 0x1b594fe8700 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1b594fe86e8 <line:480:53, line:489:5>
|   |   `-ReturnStmt 0x1b594fe86d8 <line:488:9, col:16>
|   |     `-IntegerLiteral 0x1b594fe86b0 <col:16> 'int' 0
|   |-IfStmt 0x1b594fe8a28 <line:491:5, line:508:5>
|   | |-BinaryOperator 0x1b594fe87d8 <line:491:9, col:31> 'int' '>'
|   | | |-ImplicitCastExpr 0x1b594fe87c0 <col:9, col:14> 'int' <LValueToRValue>
|   | | | `-MemberExpr 0x1b594fe8768 <col:9, col:14> 'int' lvalue ->list_add_value 0x1b594fd0518
|   | | |   `-ImplicitCastExpr 0x1b594fe8750 <col:9> 'dynamic_data_ctx *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x1b594fe8730 <col:9> 'dynamic_data_ctx *' lvalue ParmVar 0x1b594fe0e40 'ctx' 'dynamic_data_ctx *'
|   | | `-IntegerLiteral 0x1b594fe8798 <col:31> 'int' 0
|   | `-CompoundStmt 0x1b594fe8a10 <col:34, line:508:5>
|   |   `-IfStmt 0x1b594fe89f8 <line:492:9, line:507:9>
|   |     |-OpaqueValueExpr 0x1b594fe89e0 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x1b594fe89c0 <line:492:29, line:507:9>
|   |       |-IfStmt 0x1b594fe8950 <line:494:13, line:504:13>
|   |       | |-BinaryOperator 0x1b594fe88c0 <line:494:17, col:39> 'int' '>'
|   |       | | |-ImplicitCastExpr 0x1b594fe88a8 <col:17, col:22> 'int' <LValueToRValue>
|   |       | | | `-MemberExpr 0x1b594fe8850 <col:17, col:22> 'int' lvalue ->list_add_value 0x1b594fd0518
|   |       | | |   `-ImplicitCastExpr 0x1b594fe8838 <col:17> 'dynamic_data_ctx *' <LValueToRValue>
|   |       | | |     `-DeclRefExpr 0x1b594fe8818 <col:17> 'dynamic_data_ctx *' lvalue ParmVar 0x1b594fe0e40 'ctx' 'dynamic_data_ctx *'
|   |       | | `-IntegerLiteral 0x1b594fe8880 <col:39> 'int' 1
|   |       | `-CompoundStmt 0x1b594fe8938 <col:42, line:504:13>
|   |       |   `-ReturnStmt 0x1b594fe8928 <line:503:17, col:24>
|   |       |     `-IntegerLiteral 0x1b594fe8900 <col:24> 'int' 0
|   |       `-CallExpr 0x1b594fe89a0 <line:506:13, col:29> 'int'
|   |         `-ImplicitCastExpr 0x1b594fe8988 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |           `-DeclRefExpr 0x1b594fe8968 <col:13> 'int ()' Function 0x1b594fdecb0 'ERR_clear_error' 'int ()'
|   `-ReturnStmt 0x1b594fe8a68 <line:509:5, col:12>
|     `-IntegerLiteral 0x1b594fe8a40 <col:12> 'int' 1
`-FunctionDecl 0x1b594fe8050 <line:462:5> col:5 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
  |-ParmVarDecl 0x1b594fe80f0 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x1b594fe8158 <<invalid sloc>> <invalid sloc> 'const void *'
  `-ParmVarDecl 0x1b594fe81c0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
