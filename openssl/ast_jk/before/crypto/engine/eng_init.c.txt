TranslationUnitDecl 0x13094c042f8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13094c04b90 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13094c04890 '__int128'
|-TypedefDecl 0x13094c04c00 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13094c048b0 'unsigned __int128'
|-TypedefDecl 0x13094c04f38 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13094c04cf0 'struct __NSConstantString_tag'
|   `-Record 0x13094c04c58 '__NSConstantString_tag'
|-TypedefDecl 0x13094c04fa8 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x13094c044d0 'unsigned long long'
|-TypedefDecl 0x13094c05040 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13094c05000 'char *'
|   `-BuiltinType 0x13094c04390 'char'
|-TypedefDecl 0x13094c050b0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13094c05000 'char *'
|   `-BuiltinType 0x13094c04390 'char'
|-VarDecl 0x13094c05150 <.//openssl//file_jk/before\crypto\engine/eng_int.h:27:1, col:23> col:23 invalid global_engine_lock 'int *' extern
|-TypedefDecl 0x1309658f9d0 <line:58:1, col:39> col:15 referenced ENGINE_CLEANUP_CB 'void (void)':'void (void)'
| `-ParenType 0x13094c05260 'void (void)' sugar
|   `-FunctionProtoType 0x13094c05230 'void (void)' cdecl
|     `-BuiltinType 0x13094c04350 'void'
|-RecordDecl 0x1309658fa28 <line:59:9, line:61:1> line:59:16 struct st_engine_cleanup_item definition
| `-FieldDecl 0x1309658fb68 <line:60:5, col:24> col:24 cb 'ENGINE_CLEANUP_CB *'
|-TypedefDecl 0x1309658fc18 <line:59:1, line:61:3> col:3 referenced ENGINE_CLEANUP_ITEM 'struct st_engine_cleanup_item':'struct st_engine_cleanup_item'
| `-ElaboratedType 0x1309658fbc0 'struct st_engine_cleanup_item' sugar
|   `-RecordType 0x1309658fac0 'struct st_engine_cleanup_item'
|     `-Record 0x1309658fa28 'st_engine_cleanup_item'
|-FunctionDecl 0x1309658fdc0 <line:62:1, col:36> col:1 DEFINE_STACK_OF 'int (ENGINE_CLEANUP_ITEM)'
| `-ParmVarDecl 0x1309658fcc0 <col:17> col:36 'ENGINE_CLEANUP_ITEM':'struct st_engine_cleanup_item'
|-FunctionDecl 0x1309658ffe8 <line:63:1, col:52> col:6 engine_cleanup_add_first 'void (ENGINE_CLEANUP_CB *)'
| `-ParmVarDecl 0x1309658fed8 <col:31, col:50> col:50 cb 'ENGINE_CLEANUP_CB *'
|-FunctionDecl 0x13096590160 <line:64:1, col:51> col:6 engine_cleanup_add_last 'void (ENGINE_CLEANUP_CB *)'
| `-ParmVarDecl 0x130965900b8 <col:30, col:49> col:49 cb 'ENGINE_CLEANUP_CB *'
|-RecordDecl 0x13096590220 <line:81:9, col:16> col:16 struct st_engine_table
|-EmptyDecl 0x1309658cd78 <line:88:59> col:59
|-TypedefDecl 0x1309658d020 <line:94:1, line:95:61> line:94:15 referenced engine_table_doall_cb 'void (int, int (*)())':'void (int, int (*)())'
| `-ParenType 0x1309658cfc0 'void (int, int (*)())' sugar
|   `-FunctionProtoType 0x1309658cf80 'void (int, int (*)())' cdecl
|     |-BuiltinType 0x13094c04350 'void'
|     |-BuiltinType 0x13094c043f0 'int'
|     `-DecayedType 0x1309658cea0 'int (*)()' sugar
|       |-FunctionNoProtoType 0x1309658ce20 'int ()' cdecl
|       | `-BuiltinType 0x13094c043f0 'int'
|       `-PointerType 0x1309658ce70 'int (*)()'
|         `-FunctionNoProtoType 0x1309658ce20 'int ()' cdecl
|           `-BuiltinType 0x13094c043f0 'int'
|-FunctionDecl 0x1309658d328 <line:96:1, line:97:34> line:96:6 invalid engine_table_doall 'void (int *, engine_table_doall_cb *, void *)'
| |-ParmVarDecl 0x1309658d090 <col:25, col:39> col:39 invalid table 'int *'
| |-ParmVarDecl 0x1309658d188 <col:46, col:69> col:69 cb 'engine_table_doall_cb *'
| `-ParmVarDecl 0x1309658d208 <line:97:25, col:31> col:31 arg 'void *'
|-FunctionDecl 0x1309658d4c0 <line:104:1, col:35> col:5 invalid engine_unlocked_init 'int (int *)'
| `-ParmVarDecl 0x1309658d3f8 <col:26, col:34> col:34 invalid e 'int *'
|-FunctionDecl 0x1309658d6e0 <line:105:1, col:62> col:5 invalid engine_unlocked_finish 'int (int *, int)'
| |-ParmVarDecl 0x1309658d580 <col:28, col:36> col:36 invalid e 'int *'
| `-ParmVarDecl 0x1309658d600 <col:39, col:43> col:43 unlock_for_handlers 'int'
|-FunctionDecl 0x1309658d8c8 <line:106:1, col:43> col:5 invalid engine_free_util 'int (int *, int)'
| |-ParmVarDecl 0x1309658d7a8 <col:22, col:30> col:30 invalid e 'int *'
| `-ParmVarDecl 0x1309658d828 <col:33, col:37> col:37 locked 'int'
|-FunctionDecl 0x1309658da78 <line:113:1, col:35> col:6 invalid engine_set_all_null 'void (int *)'
| `-ParmVarDecl 0x1309658d9b0 <col:26, col:34> col:34 invalid e 'int *'
|-FunctionDecl 0x1309658dbc8 <line:122:1, col:38> col:6 invalid engine_pkey_meths_free 'void (int *)'
| `-ParmVarDecl 0x1309658db38 <col:29, col:37> col:37 invalid e 'int *'
|-FunctionDecl 0x1309658dd18 <line:123:1, col:43> col:6 invalid engine_pkey_asn1_meths_free 'void (int *)'
| `-ParmVarDecl 0x1309658dc88 <col:34, col:42> col:42 invalid e 'int *'
|-VarDecl 0x1309658ddd8 <line:126:1, col:20> col:20 invalid engine_lock_init 'int' extern
|-RecordDecl 0x1309658de40 <line:133:1, line:173:1> line:133:8 invalid struct engine_st definition
| |-FieldDecl 0x1309658df18 <line:134:5, col:17> col:17 id 'const char *'
| |-FieldDecl 0x1309658df88 <line:135:5, col:17> col:17 name 'const char *'
| |-FieldDecl 0x1309658dff8 <line:136:5, col:23> col:23 invalid rsa_meth 'const int *'
| |-FieldDecl 0x1309658e068 <line:137:5, col:23> col:23 invalid dsa_meth 'const int *'
| |-FieldDecl 0x1309658e0d8 <line:138:5, col:22> col:22 invalid dh_meth 'const int *'
| |-FieldDecl 0x1309658e148 <line:139:5, col:26> col:26 invalid ec_meth 'const int *'
| |-FieldDecl 0x1309658e1b8 <line:140:5, col:24> col:24 invalid rand_meth 'const int *'
| |-FieldDecl 0x1309658e228 <line:142:5, col:24> col:24 invalid ciphers 'int'
| |-FieldDecl 0x1309658e298 <line:144:5, col:24> col:24 invalid digests 'int'
| |-FieldDecl 0x1309658e308 <line:146:5, col:27> col:27 invalid pkey_meths 'int'
| |-FieldDecl 0x1309658e378 <line:148:5, col:32> col:32 invalid pkey_asn1_meths 'int'
| |-FieldDecl 0x1309658e3e8 <line:149:5, col:29> col:29 invalid destroy 'int'
| |-FieldDecl 0x1309658e458 <line:150:5, col:29> col:29 invalid init 'int'
| |-FieldDecl 0x1309658e4c8 <line:151:5, col:29> col:29 invalid finish 'int'
| |-FieldDecl 0x1309658e538 <line:152:5, col:26> col:26 invalid ctrl 'int'
| |-FieldDecl 0x1309658e5a8 <line:153:5, col:25> col:25 invalid load_privkey 'int'
| |-FieldDecl 0x1309658e618 <line:154:5, col:25> col:25 invalid load_pubkey 'int'
| |-FieldDecl 0x1309658e688 <line:155:5, col:32> col:32 invalid load_ssl_client_cert 'int'
| |-FieldDecl 0x1309658e6f8 <line:156:5, col:28> col:28 invalid cmd_defns 'const int *'
| |-FieldDecl 0x1309658e768 <line:157:5, col:9> col:9 flags 'int'
| |-FieldDecl 0x1309658e7d8 <line:159:5, col:9> col:9 struct_ref 'int'
| |-FieldDecl 0x1309658e848 <line:167:5, col:9> col:9 funct_ref 'int'
| |-FieldDecl 0x1309658e8b8 <line:169:5, col:20> col:20 invalid ex_data 'int'
| |-FieldDecl 0x13096590a08 <line:171:5, col:23> col:23 prev 'struct engine_st *'
| `-FieldDecl 0x13096590a88 <line:172:5, col:23> col:23 next 'struct engine_st *'
|-RecordDecl 0x13096590ae0 <line:175:9, col:16> col:16 struct st_engine_pile
|-EmptyDecl 0x13096590ce0 <line:177:29> col:29
|-FunctionDecl 0x13096590db8 <.//openssl//file_jk/before\crypto\engine\eng_init.c:16:1, line:37:1> line:16:5 invalid engine_unlocked_init 'int (int *)'
| |-ParmVarDecl 0x13096590d20 <col:26, col:34> col:34 invalid e 'int *'
| `-CompoundStmt 0x13096591060 <line:17:1, line:37:1>
|   |-DeclStmt 0x13096590f20 <line:18:5, col:22>
|   | `-VarDecl 0x13096590e90 <col:5, col:21> col:9 used to_return 'int' cinit
|   |   `-IntegerLiteral 0x13096590ef8 <col:21> 'int' 1
|   |-IfStmt 0x13096591000 <line:26:5, line:35:5>
|   | |-ImplicitCastExpr 0x13096590fb8 <line:26:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x13096590f98 <col:9> 'int' lvalue Var 0x13096590e90 'to_return' 'int'
|   | `-CompoundStmt 0x13096590fe0 <col:20, line:35:5>
|   |   |-NullStmt 0x13096590fd0 <line:33:34>
|   |   `-NullStmt 0x13096590fd8 <line:34:34>
|   `-ReturnStmt 0x13096591050 <line:36:5, col:12>
|     `-ImplicitCastExpr 0x13096591038 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x13096591018 <col:12> 'int' lvalue Var 0x13096590e90 'to_return' 'int'
|-FunctionDecl 0x130965911c0 <line:43:1, line:73:1> line:43:5 invalid engine_unlocked_finish 'int (int *, int)'
| |-ParmVarDecl 0x130965910a0 <col:28, col:36> col:36 invalid e 'int *'
| |-ParmVarDecl 0x13096591120 <col:39, col:43> col:43 used unlock_for_handlers 'int'
| `-CompoundStmt 0x13096589a10 <line:44:1, line:73:1>
|   |-DeclStmt 0x13096591330 <line:45:5, col:22>
|   | `-VarDecl 0x130965912a0 <col:5, col:21> col:9 used to_return 'int' cinit
|   |   `-IntegerLiteral 0x13096591308 <col:21> 'int' 1
|   |-NullStmt 0x13096591348 <line:56:31>
|   |-IfStmt 0x13096591728 <line:57:5, line:65:5>
|   | |-OpaqueValueExpr 0x13096591710 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x130965916f8 <line:57:43, line:65:5>
|   |   `-IfStmt 0x130965916e0 <line:63:9, line:64:20>
|   |     |-UnaryOperator 0x13096591690 <line:63:13, col:14> 'int' prefix '!' cannot overflow
|   |     | `-ImplicitCastExpr 0x13096591678 <col:14> 'int' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x13096591658 <col:14> 'int' lvalue Var 0x130965912a0 'to_return' 'int'
|   |     `-ReturnStmt 0x130965916d0 <line:64:13, col:20>
|   |       `-IntegerLiteral 0x130965916a8 <col:20> 'int' 0
|   |-IfStmt 0x130965899b0 <line:68:5, line:71:5>
|   | |-OpaqueValueExpr 0x13096589998 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x13096589980 <line:68:34, line:71:5>
|   |   `-ReturnStmt 0x13096589970 <line:70:9, col:16>
|   |     `-IntegerLiteral 0x130965919b0 <col:16> 'int' 0
|   `-ReturnStmt 0x13096589a00 <line:72:5, col:12>
|     `-ImplicitCastExpr 0x130965899e8 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x130965899c8 <col:12> 'int' lvalue Var 0x130965912a0 'to_return' 'int'
|-FunctionDecl 0x13096589af8 <line:76:1, line:91:1> line:76:5 invalid ENGINE_init 'int (int *)'
| |-ParmVarDecl 0x13096589a60 <col:17, col:25> col:25 invalid e 'int *'
| `-CompoundStmt 0x13096589f60 <line:77:1, line:91:1>
|   |-DeclStmt 0x13096589c38 <line:78:5, col:12>
|   | `-VarDecl 0x13096589bd0 <col:5, col:9> col:9 used ret 'int'
|   |-IfStmt 0x13096589cd8 <line:79:5, line:82:5>
|   | |-OpaqueValueExpr 0x13096589cc0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x13096589ca8 <line:79:20, line:82:5>
|   |   `-ReturnStmt 0x13096589c98 <line:81:9, col:16>
|   |     `-IntegerLiteral 0x13096589c70 <col:16> 'int' 0
|   |-IfStmt 0x13096589e88 <line:83:5, line:86:5>
|   | |-OpaqueValueExpr 0x13096589e70 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x13096589e58 <line:83:60, line:86:5>
|   |   `-ReturnStmt 0x13096589e48 <line:85:9, col:16>
|   |     `-IntegerLiteral 0x13096589e20 <col:16> 'int' 0
|   `-ReturnStmt 0x13096589f50 <line:90:5, col:12>
|     `-ImplicitCastExpr 0x13096589f38 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x13096589f18 <col:12> 'int' lvalue Var 0x13096589bd0 'ret' 'int'
`-FunctionDecl 0x1309658a040 <line:94:1, line:108:1> line:94:5 invalid ENGINE_finish 'int (int *)'
  |-ParmVarDecl 0x13096589fa8 <col:19, col:27> col:27 invalid e 'int *'
  `-CompoundStmt 0x1309658a3e8 <line:95:1, line:108:1>
    |-DeclStmt 0x1309658a1a8 <line:96:5, col:22>
    | `-VarDecl 0x1309658a118 <col:5, col:21> col:9 used to_return 'int' cinit
    |   `-IntegerLiteral 0x1309658a180 <col:21> 'int' 1
    |-IfStmt 0x1309658a210 <line:98:5, line:99:16>
    | |-OpaqueValueExpr 0x1309658a1f8 <<invalid sloc>> '_Bool'
    | `-ReturnStmt 0x1309658a1e8 <col:9, col:16>
    |   `-IntegerLiteral 0x1309658a1c0 <col:16> 'int' 1
    |-IfStmt 0x1309658a388 <line:103:5, line:106:5>
    | |-UnaryOperator 0x1309658a300 <line:103:9, col:10> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x1309658a2e8 <col:10> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x1309658a2c8 <col:10> 'int' lvalue Var 0x1309658a118 'to_return' 'int'
    | `-CompoundStmt 0x1309658a370 <col:21, line:106:5>
    |   `-ReturnStmt 0x1309658a360 <line:105:9, col:16>
    |     `-IntegerLiteral 0x1309658a338 <col:16> 'int' 0
    `-ReturnStmt 0x1309658a3d8 <line:107:5, col:12>
      `-ImplicitCastExpr 0x1309658a3c0 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x1309658a3a0 <col:12> 'int' lvalue Var 0x1309658a118 'to_return' 'int'
