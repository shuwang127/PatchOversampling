TranslationUnitDecl 0x1ff0c7041b8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1ff0c704a50 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1ff0c704750 '__int128'
|-TypedefDecl 0x1ff0c704ac0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1ff0c704770 'unsigned __int128'
|-TypedefDecl 0x1ff0c704df8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1ff0c704bb0 'struct __NSConstantString_tag'
|   `-Record 0x1ff0c704b18 '__NSConstantString_tag'
|-TypedefDecl 0x1ff0c704e68 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x1ff0c704390 'unsigned long long'
|-TypedefDecl 0x1ff0c704f00 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1ff0c704ec0 'char *'
|   `-BuiltinType 0x1ff0c704250 'char'
|-TypedefDecl 0x1ff0c704f70 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1ff0c704ec0 'char *'
|   `-BuiltinType 0x1ff0c704250 'char'
|-VarDecl 0x1ff0c705010 <.//openssl//file_jk/before\crypto\engine/eng_int.h:27:1, col:23> col:23 invalid global_engine_lock 'int *' extern
|-TypedefDecl 0x1ff0dfbe8d0 <line:58:1, col:39> col:15 referenced ENGINE_CLEANUP_CB 'void (void)':'void (void)'
| `-ParenType 0x1ff0c705120 'void (void)' sugar
|   `-FunctionProtoType 0x1ff0c7050f0 'void (void)' cdecl
|     `-BuiltinType 0x1ff0c704210 'void'
|-RecordDecl 0x1ff0dfbe928 <line:59:9, line:61:1> line:59:16 struct st_engine_cleanup_item definition
| `-FieldDecl 0x1ff0dfbea68 <line:60:5, col:24> col:24 cb 'ENGINE_CLEANUP_CB *'
|-TypedefDecl 0x1ff0dfbeb18 <line:59:1, line:61:3> col:3 referenced ENGINE_CLEANUP_ITEM 'struct st_engine_cleanup_item':'struct st_engine_cleanup_item'
| `-ElaboratedType 0x1ff0dfbeac0 'struct st_engine_cleanup_item' sugar
|   `-RecordType 0x1ff0dfbe9c0 'struct st_engine_cleanup_item'
|     `-Record 0x1ff0dfbe928 'st_engine_cleanup_item'
|-FunctionDecl 0x1ff0dfbecc0 <line:62:1, col:36> col:1 DEFINE_STACK_OF 'int (ENGINE_CLEANUP_ITEM)'
| `-ParmVarDecl 0x1ff0dfbebc0 <col:17> col:36 'ENGINE_CLEANUP_ITEM':'struct st_engine_cleanup_item'
|-FunctionDecl 0x1ff0dfbeee8 <line:63:1, col:52> col:6 engine_cleanup_add_first 'void (ENGINE_CLEANUP_CB *)'
| `-ParmVarDecl 0x1ff0dfbedd8 <col:31, col:50> col:50 cb 'ENGINE_CLEANUP_CB *'
|-FunctionDecl 0x1ff0dfbf060 <line:64:1, col:51> col:6 used engine_cleanup_add_last 'void (ENGINE_CLEANUP_CB *)'
| `-ParmVarDecl 0x1ff0dfbefb8 <col:30, col:49> col:49 cb 'ENGINE_CLEANUP_CB *'
|-RecordDecl 0x1ff0dfbf120 <line:81:9, col:16> col:16 struct st_engine_table
|-EmptyDecl 0x1ff0dfc1cd8 <line:88:59> col:59
|-TypedefDecl 0x1ff0dfc1f80 <line:94:1, line:95:61> line:94:15 referenced engine_table_doall_cb 'void (int, int (*)())':'void (int, int (*)())'
| `-ParenType 0x1ff0dfc1f20 'void (int, int (*)())' sugar
|   `-FunctionProtoType 0x1ff0dfc1ee0 'void (int, int (*)())' cdecl
|     |-BuiltinType 0x1ff0c704210 'void'
|     |-BuiltinType 0x1ff0c7042b0 'int'
|     `-DecayedType 0x1ff0dfc1e00 'int (*)()' sugar
|       |-FunctionNoProtoType 0x1ff0dfc1d80 'int ()' cdecl
|       | `-BuiltinType 0x1ff0c7042b0 'int'
|       `-PointerType 0x1ff0dfc1dd0 'int (*)()'
|         `-FunctionNoProtoType 0x1ff0dfc1d80 'int ()' cdecl
|           `-BuiltinType 0x1ff0c7042b0 'int'
|-FunctionDecl 0x1ff0dfc2288 <line:96:1, line:97:34> line:96:6 invalid engine_table_doall 'void (int *, engine_table_doall_cb *, void *)'
| |-ParmVarDecl 0x1ff0dfc1ff0 <col:25, col:39> col:39 invalid table 'int *'
| |-ParmVarDecl 0x1ff0dfc20e8 <col:46, col:69> col:69 cb 'engine_table_doall_cb *'
| `-ParmVarDecl 0x1ff0dfc2168 <line:97:25, col:31> col:31 arg 'void *'
|-FunctionDecl 0x1ff0dfc2420 <line:104:1, col:35> col:5 invalid engine_unlocked_init 'int (int *)'
| `-ParmVarDecl 0x1ff0dfc2358 <col:26, col:34> col:34 invalid e 'int *'
|-FunctionDecl 0x1ff0dfc2640 <line:105:1, col:62> col:5 invalid engine_unlocked_finish 'int (int *, int)'
| |-ParmVarDecl 0x1ff0dfc24e0 <col:28, col:36> col:36 invalid e 'int *'
| `-ParmVarDecl 0x1ff0dfc2560 <col:39, col:43> col:43 unlock_for_handlers 'int'
|-FunctionDecl 0x1ff0dfc2828 <line:106:1, col:43> col:5 invalid engine_free_util 'int (int *, int)'
| |-ParmVarDecl 0x1ff0dfc2708 <col:22, col:30> col:30 invalid e 'int *'
| `-ParmVarDecl 0x1ff0dfc2788 <col:33, col:37> col:37 locked 'int'
|-FunctionDecl 0x1ff0dfc29d8 <line:113:1, col:35> col:6 invalid engine_set_all_null 'void (int *)'
| `-ParmVarDecl 0x1ff0dfc2910 <col:26, col:34> col:34 invalid e 'int *'
|-FunctionDecl 0x1ff0dfc2b28 <line:122:1, col:38> col:6 invalid engine_pkey_meths_free 'void (int *)'
| `-ParmVarDecl 0x1ff0dfc2a98 <col:29, col:37> col:37 invalid e 'int *'
|-FunctionDecl 0x1ff0dfc2c78 <line:123:1, col:43> col:6 invalid engine_pkey_asn1_meths_free 'void (int *)'
| `-ParmVarDecl 0x1ff0dfc2be8 <col:34, col:42> col:42 invalid e 'int *'
|-VarDecl 0x1ff0dfc2d38 <line:126:1, col:20> col:20 invalid engine_lock_init 'int' extern
|-RecordDecl 0x1ff0dfc2da0 <line:133:1, line:173:1> line:133:8 invalid struct engine_st definition
| |-FieldDecl 0x1ff0dfc2e78 <line:134:5, col:17> col:17 id 'const char *'
| |-FieldDecl 0x1ff0dfc2ee8 <line:135:5, col:17> col:17 name 'const char *'
| |-FieldDecl 0x1ff0dfc2f58 <line:136:5, col:23> col:23 invalid rsa_meth 'const int *'
| |-FieldDecl 0x1ff0dfc2fc8 <line:137:5, col:23> col:23 invalid dsa_meth 'const int *'
| |-FieldDecl 0x1ff0dfc3038 <line:138:5, col:22> col:22 invalid dh_meth 'const int *'
| |-FieldDecl 0x1ff0dfc30a8 <line:139:5, col:26> col:26 invalid ec_meth 'const int *'
| |-FieldDecl 0x1ff0dfc3118 <line:140:5, col:24> col:24 invalid rand_meth 'const int *'
| |-FieldDecl 0x1ff0dfc3188 <line:142:5, col:24> col:24 invalid ciphers 'int'
| |-FieldDecl 0x1ff0dfc31f8 <line:144:5, col:24> col:24 invalid digests 'int'
| |-FieldDecl 0x1ff0dfc3268 <line:146:5, col:27> col:27 invalid pkey_meths 'int'
| |-FieldDecl 0x1ff0dfc32d8 <line:148:5, col:32> col:32 invalid pkey_asn1_meths 'int'
| |-FieldDecl 0x1ff0dfc3348 <line:149:5, col:29> col:29 invalid destroy 'int'
| |-FieldDecl 0x1ff0dfc33b8 <line:150:5, col:29> col:29 invalid init 'int'
| |-FieldDecl 0x1ff0dfc3428 <line:151:5, col:29> col:29 invalid finish 'int'
| |-FieldDecl 0x1ff0dfc3498 <line:152:5, col:26> col:26 invalid ctrl 'int'
| |-FieldDecl 0x1ff0dfc3508 <line:153:5, col:25> col:25 invalid load_privkey 'int'
| |-FieldDecl 0x1ff0dfc3578 <line:154:5, col:25> col:25 invalid load_pubkey 'int'
| |-FieldDecl 0x1ff0dfc35e8 <line:155:5, col:32> col:32 invalid load_ssl_client_cert 'int'
| |-FieldDecl 0x1ff0dfc3658 <line:156:5, col:28> col:28 invalid cmd_defns 'const int *'
| |-FieldDecl 0x1ff0dfc36c8 <line:157:5, col:9> col:9 flags 'int'
| |-FieldDecl 0x1ff0dfc3738 <line:159:5, col:9> col:9 struct_ref 'int'
| |-FieldDecl 0x1ff0dfc37a8 <line:167:5, col:9> col:9 funct_ref 'int'
| |-FieldDecl 0x1ff0dfc3818 <line:169:5, col:20> col:20 invalid ex_data 'int'
| |-FieldDecl 0x1ff0dfc0918 <line:171:5, col:23> col:23 prev 'struct engine_st *'
| `-FieldDecl 0x1ff0dfc0998 <line:172:5, col:23> col:23 next 'struct engine_st *'
|-RecordDecl 0x1ff0dfc09f0 <line:175:9, col:16> col:16 struct st_engine_pile
|-EmptyDecl 0x1ff0dfc0bf0 <line:177:29> col:29
|-VarDecl 0x1ff0dfc0c30 <.//openssl//file_jk/before\crypto\engine\eng_list.c:29:1, col:16> col:16 invalid engine_list_head 'int *' static
|-VarDecl 0x1ff0dfc0cb0 <line:30:1, col:16> col:16 invalid engine_list_tail 'int *' static
|-FunctionDecl 0x1ff0dfc0db0 <line:38:1, line:47:1> line:38:13 used engine_list_cleanup 'void (void)' static
| `-CompoundStmt 0x1ff0dfc0f98 <line:39:1, line:47:1>
|   `-ReturnStmt 0x1ff0dfc0f88 <line:46:5>
|-FunctionDecl 0x1ff0dfc1060 <line:53:1, line:101:1> line:53:12 invalid engine_list_add 'int (int *)' static
| |-ParmVarDecl 0x1ff0dfc0fc8 <col:28, col:36> col:36 invalid e 'int *'
| `-CompoundStmt 0x1ff0dfbc9a0 <line:54:1, line:101:1>
|   |-DeclStmt 0x1ff0dfc11c8 <line:55:5, col:21>
|   | `-VarDecl 0x1ff0dfc1138 <col:5, col:20> col:9 used conflict 'int' cinit
|   |   `-IntegerLiteral 0x1ff0dfc11a0 <col:20> 'int' 0
|   |-IfStmt 0x1ff0dfc1358 <line:58:5, line:61:5>
|   | |-OpaqueValueExpr 0x1ff0dfc1340 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1ff0dfc1328 <line:58:20, line:61:5>
|   |   `-ReturnStmt 0x1ff0dfc1318 <line:60:9, col:16>
|   |     `-IntegerLiteral 0x1ff0dfc12f0 <col:16> 'int' 0
|   |-IfStmt 0x1ff0dfc16d0 <line:67:5, line:70:5>
|   | |-ImplicitCastExpr 0x1ff0dfc1648 <line:67:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1ff0dfc1628 <col:9> 'int' lvalue Var 0x1ff0dfc1138 'conflict' 'int'
|   | `-CompoundStmt 0x1ff0dfc16b8 <col:19, line:70:5>
|   |   `-ReturnStmt 0x1ff0dfc16a8 <line:69:9, col:16>
|   |     `-IntegerLiteral 0x1ff0dfc1680 <col:16> 'int' 0
|   |-IfStmt 0x1ff0dfbc938 <line:71:5, line:91:5> has_else
|   | |-OpaqueValueExpr 0x1ff0dfbc920 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x1ff0dfc1880 <line:71:35, line:83:5>
|   | | |-IfStmt 0x1ff0dfc1770 <line:73:9, line:76:9>
|   | | | |-OpaqueValueExpr 0x1ff0dfc1758 <<invalid sloc>> '_Bool'
|   | | | `-CompoundStmt 0x1ff0dfc1740 <line:73:31, line:76:9>
|   | | |   `-ReturnStmt 0x1ff0dfc1730 <line:75:13, col:20>
|   | | |     `-IntegerLiteral 0x1ff0dfc1708 <col:20> 'int' 0
|   | | `-CallExpr 0x1ff0dfc1840 <line:82:9, col:52> 'void'
|   | |   |-ImplicitCastExpr 0x1ff0dfc1828 <col:9> 'void (*)(ENGINE_CLEANUP_CB *)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x1ff0dfc1788 <col:9> 'void (ENGINE_CLEANUP_CB *)' Function 0x1ff0dfbf060 'engine_cleanup_add_last' 'void (ENGINE_CLEANUP_CB *)'
|   | |   `-ImplicitCastExpr 0x1ff0dfc1868 <col:33> 'void (*)(void)' <FunctionToPointerDecay>
|   | |     `-DeclRefExpr 0x1ff0dfc17a8 <col:33> 'void (void)' Function 0x1ff0dfc0db0 'engine_list_cleanup' 'void (void)'
|   | `-CompoundStmt 0x1ff0dfbc908 <line:83:12, line:91:5>
|   |   `-IfStmt 0x1ff0dfbc8f0 <line:85:9, line:88:9>
|   |     |-OpaqueValueExpr 0x1ff0dfbc8d8 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x1ff0dfbc8c0 <line:85:77, line:88:9>
|   |       `-ReturnStmt 0x1ff0dfbc8b0 <line:87:13, col:20>
|   |         `-IntegerLiteral 0x1ff0dfc18c0 <col:20> 'int' 0
|   |-NullStmt 0x1ff0dfbc960 <line:96:30>
|   `-ReturnStmt 0x1ff0dfbc990 <line:100:5, col:12>
|     `-IntegerLiteral 0x1ff0dfbc968 <col:12> 'int' 1
|-FunctionDecl 0x1ff0dfc1438 <line:64:21> col:21 implicit used strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x1ff0dfc14d8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1ff0dfc1540 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1ff0dfbca90 <line:103:1, line:132:1> line:103:12 invalid engine_list_remove 'int (int *)' static
| |-ParmVarDecl 0x1ff0dfbc9f8 <col:31, col:39> col:39 invalid e 'int *'
| `-CompoundStmt 0x1ff0dfbccf0 <line:104:1, line:132:1>
|   |-IfStmt 0x1ff0dfbcbd8 <line:107:5, line:110:5>
|   | |-OpaqueValueExpr 0x1ff0dfbcbc0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1ff0dfbcba8 <line:107:20, line:110:5>
|   |   `-ReturnStmt 0x1ff0dfbcb98 <line:109:9, col:16>
|   |     `-IntegerLiteral 0x1ff0dfbcb70 <col:16> 'int' 0
|   |-IfStmt 0x1ff0dfbcc78 <line:115:5, line:119:5>
|   | |-OpaqueValueExpr 0x1ff0dfbcc60 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1ff0dfbcc48 <line:115:27, line:119:5>
|   |   `-ReturnStmt 0x1ff0dfbcc38 <line:118:9, col:16>
|   |     `-IntegerLiteral 0x1ff0dfbcc10 <col:16> 'int' 0
|   `-ReturnStmt 0x1ff0dfbcce0 <line:131:5, col:12>
|     `-IntegerLiteral 0x1ff0dfbccb8 <col:12> 'int' 1
|-FunctionDecl 0x1ff0dfbcde0 <line:135:1, line:152:1> line:135:9 invalid ENGINE_get_first 'int *(void)'
| `-CompoundStmt 0x1ff0dfbd278 <line:136:1, line:152:1>
|   |-IfStmt 0x1ff0dfbcff0 <line:139:5, line:142:5>
|   | |-OpaqueValueExpr 0x1ff0dfbcfd8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1ff0dfbcfc8 <line:139:60, line:142:5>
|   `-IfStmt 0x1ff0dfbd150 <line:146:5, line:149:5>
|     |-OpaqueValueExpr 0x1ff0dfbd138 <<invalid sloc>> '_Bool'
|     `-CompoundStmt 0x1ff0dfbd120 <line:146:14, line:149:5>
|       `-NullStmt 0x1ff0dfbd118 <line:148:36>
|-FunctionDecl 0x1ff0dfbd338 <line:154:1, line:171:1> line:154:9 invalid ENGINE_get_last 'int *(void)'
| `-CompoundStmt 0x1ff0dfbd500 <line:155:1, line:171:1>
|   |-IfStmt 0x1ff0dfbd458 <line:158:5, line:161:5>
|   | |-OpaqueValueExpr 0x1ff0dfbd440 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1ff0dfbd430 <line:158:60, line:161:5>
|   `-IfStmt 0x1ff0dfbd4c8 <line:165:5, line:168:5>
|     |-OpaqueValueExpr 0x1ff0dfbd4b0 <<invalid sloc>> '_Bool'
|     `-CompoundStmt 0x1ff0dfbd498 <line:165:14, line:168:5>
|       `-NullStmt 0x1ff0dfbd490 <line:167:36>
|-FunctionDecl 0x1ff0dfbd600 <line:174:1, line:192:1> line:174:9 invalid ENGINE_get_next 'int *(int *)'
| |-ParmVarDecl 0x1ff0dfbd538 <col:25, col:33> col:33 invalid e 'int *'
| `-CompoundStmt 0x1ff0dfc3a08 <line:175:1, line:192:1>
|   |-IfStmt 0x1ff0dfbd760 <line:177:5, line:180:5>
|   | |-OpaqueValueExpr 0x1ff0dfbd748 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1ff0dfbd730 <line:177:20, line:180:5>
|   |   `-ReturnStmt 0x1ff0dfbd720 <line:179:9, col:16>
|   |     `-ImplicitCastExpr 0x1ff0dfbd708 <col:16> 'int *' <NullToPointer>
|   |       `-IntegerLiteral 0x1ff0dfbd6e0 <col:16> 'int' 0
|   `-IfStmt 0x1ff0dfbd7d0 <line:183:5, line:187:5>
|     |-OpaqueValueExpr 0x1ff0dfbd7b8 <<invalid sloc>> '_Bool'
|     `-CompoundStmt 0x1ff0dfbd7a0 <line:183:14, line:187:5>
|       `-NullStmt 0x1ff0dfbd798 <line:186:36>
|-FunctionDecl 0x1ff0dfc3ad8 <line:194:1, line:212:1> line:194:9 invalid ENGINE_get_prev 'int *(int *)'
| |-ParmVarDecl 0x1ff0dfc3a40 <col:25, col:33> col:33 invalid e 'int *'
| `-CompoundStmt 0x1ff0dfc3d00 <line:195:1, line:212:1>
|   |-IfStmt 0x1ff0dfc3c38 <line:197:5, line:200:5>
|   | |-OpaqueValueExpr 0x1ff0dfc3c20 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1ff0dfc3c08 <line:197:20, line:200:5>
|   |   `-ReturnStmt 0x1ff0dfc3bf8 <line:199:9, col:16>
|   |     `-ImplicitCastExpr 0x1ff0dfc3be0 <col:16> 'int *' <NullToPointer>
|   |       `-IntegerLiteral 0x1ff0dfc3bb8 <col:16> 'int' 0
|   `-IfStmt 0x1ff0dfc3ca8 <line:203:5, line:207:5>
|     |-OpaqueValueExpr 0x1ff0dfc3c90 <<invalid sloc>> '_Bool'
|     `-CompoundStmt 0x1ff0dfc3c78 <line:203:14, line:207:5>
|       `-NullStmt 0x1ff0dfc3c70 <line:206:36>
|-FunctionDecl 0x1ff0dfc3dd0 <line:215:1, line:233:1> line:215:5 invalid ENGINE_add 'int (int *)'
| |-ParmVarDecl 0x1ff0dfc3d38 <col:16, col:24> col:24 invalid e 'int *'
| `-CompoundStmt 0x1ff0dfc4200 <line:216:1, line:233:1>
|   |-DeclStmt 0x1ff0dfc3f38 <line:217:5, col:22>
|   | `-VarDecl 0x1ff0dfc3ea8 <col:5, col:21> col:9 used to_return 'int' cinit
|   |   `-IntegerLiteral 0x1ff0dfc3f10 <col:21> 'int' 1
|   |-IfStmt 0x1ff0dfc3fd8 <line:218:5, line:221:5>
|   | |-OpaqueValueExpr 0x1ff0dfc3fc0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1ff0dfc3fa8 <line:218:20, line:221:5>
|   |   `-ReturnStmt 0x1ff0dfc3f98 <line:220:9, col:16>
|   |     `-IntegerLiteral 0x1ff0dfc3f70 <col:16> 'int' 0
|   |-IfStmt 0x1ff0dfc4078 <line:222:5, line:225:5>
|   | |-OpaqueValueExpr 0x1ff0dfc4060 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1ff0dfc4048 <line:222:47, line:225:5>
|   |   `-ReturnStmt 0x1ff0dfc4038 <line:224:9, col:16>
|   |     `-IntegerLiteral 0x1ff0dfc4010 <col:16> 'int' 0
|   |-IfStmt 0x1ff0dfc4180 <line:227:5, line:230:5>
|   | |-OpaqueValueExpr 0x1ff0dfc4168 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1ff0dfc4150 <line:227:30, line:230:5>
|   |   `-BinaryOperator 0x1ff0dfc4130 <line:229:9, col:21> 'int' '='
|   |     |-DeclRefExpr 0x1ff0dfc40d0 <col:9> 'int' lvalue Var 0x1ff0dfc3ea8 'to_return' 'int'
|   |     `-IntegerLiteral 0x1ff0dfc4108 <col:21> 'int' 0
|   `-ReturnStmt 0x1ff0dfc41f0 <line:232:5, col:12>
|     `-ImplicitCastExpr 0x1ff0dfc41d8 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1ff0dfc41b8 <col:12> 'int' lvalue Var 0x1ff0dfc3ea8 'to_return' 'int'
|-FunctionDecl 0x1ff0dfc42e8 <line:236:1, line:250:1> line:236:5 invalid ENGINE_remove 'int (int *)'
| |-ParmVarDecl 0x1ff0dfc4250 <col:19, col:27> col:27 invalid e 'int *'
| `-CompoundStmt 0x1ff0dfc4678 <line:237:1, line:250:1>
|   |-DeclStmt 0x1ff0dfc4450 <line:238:5, col:22>
|   | `-VarDecl 0x1ff0dfc43c0 <col:5, col:21> col:9 used to_return 'int' cinit
|   |   `-IntegerLiteral 0x1ff0dfc4428 <col:21> 'int' 1
|   |-IfStmt 0x1ff0dfc44f0 <line:239:5, line:242:5>
|   | |-OpaqueValueExpr 0x1ff0dfc44d8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1ff0dfc44c0 <line:239:20, line:242:5>
|   |   `-ReturnStmt 0x1ff0dfc44b0 <line:241:9, col:16>
|   |     `-IntegerLiteral 0x1ff0dfc4488 <col:16> 'int' 0
|   |-IfStmt 0x1ff0dfc45f8 <line:244:5, line:247:5>
|   | |-OpaqueValueExpr 0x1ff0dfc45e0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1ff0dfc45c8 <line:244:33, line:247:5>
|   |   `-BinaryOperator 0x1ff0dfc45a8 <line:246:9, col:21> 'int' '='
|   |     |-DeclRefExpr 0x1ff0dfc4548 <col:9> 'int' lvalue Var 0x1ff0dfc43c0 'to_return' 'int'
|   |     `-IntegerLiteral 0x1ff0dfc4580 <col:21> 'int' 0
|   `-ReturnStmt 0x1ff0dfc4668 <line:249:5, col:12>
|     `-ImplicitCastExpr 0x1ff0dfc4650 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1ff0dfc4630 <col:12> 'int' lvalue Var 0x1ff0dfc43c0 'to_return' 'int'
|-FunctionDecl 0x1ff0dfc4818 <line:252:1, line:280:1> line:252:13 invalid engine_cpy 'void (int *, const int *)' static
| |-ParmVarDecl 0x1ff0dfc46c0 <col:24, col:32> col:32 invalid dest 'int *'
| |-ParmVarDecl 0x1ff0dfc4740 <col:38, col:52> col:52 invalid src 'const int *'
| `-CompoundStmt 0x1ff0dfc48e0 <line:253:1, line:280:1>
|-FunctionDecl 0x1ff0dfd26a0 <line:282:1, line:343:1> line:282:9 invalid ENGINE_by_id 'int *(const char *)'
| |-ParmVarDecl 0x1ff0dfd25c0 <col:22, col:34> col:34 used id 'const char *'
| `-CompoundStmt 0x1ff0dfcc798 <line:283:1, line:343:1>
|   |-DeclStmt 0x1ff0dfd27e0 <line:285:5, col:26>
|   | `-VarDecl 0x1ff0dfd2778 <col:5, col:11> col:11 used load_dir 'char *'
|   |-IfStmt 0x1ff0dfd2860 <line:286:5, line:289:5>
|   | |-OpaqueValueExpr 0x1ff0dfd2848 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1ff0dfd2838 <line:286:21, line:289:5>
|   |-IfStmt 0x1ff0dfd28e0 <line:290:5, line:293:5>
|   | |-OpaqueValueExpr 0x1ff0dfd28c8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1ff0dfd28b8 <line:290:60, line:293:5>
|   |-IfStmt 0x1ff0dfd2bc8 <line:299:5, line:317:5>
|   | |-OpaqueValueExpr 0x1ff0dfd2bb0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1ff0dfd2b98 <line:299:27, line:317:5>
|   |   `-IfStmt 0x1ff0dfd2b70 <line:305:9, line:316:9> has_else
|   |     |-OpaqueValueExpr 0x1ff0dfd2b58 <<invalid sloc>> '_Bool'
|   |     |-CompoundStmt 0x1ff0dfd2b20 <line:305:56, line:313:9>
|   |     | `-IfStmt 0x1ff0dfd2af8 <line:307:13, line:312:13> has_else
|   |     |   |-OpaqueValueExpr 0x1ff0dfd2ae0 <<invalid sloc>> '_Bool'
|   |     |   |-NullStmt 0x1ff0dfd2ad8 <line:308:17>
|   |     |   `-CompoundStmt 0x1ff0dfd2ac8 <line:309:18, line:312:13>
|   |     `-CompoundStmt 0x1ff0dfd2b40 <line:313:16, line:316:9>
|   |       `-NullStmt 0x1ff0dfd2b38 <line:315:45>
|   |-IfStmt 0x1ff0dfd3530 <line:324:5, line:336:5>
|   | |-CallExpr 0x1ff0dfd2d10 <line:324:9, col:29> 'int'
|   | | |-ImplicitCastExpr 0x1ff0dfd2cf8 <col:9> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | | | `-DeclRefExpr 0x1ff0dfd2c00 <col:9> 'int (const char *, const char *)' Function 0x1ff0dfc1438 'strcmp' 'int (const char *, const char *)'
|   | | |-ImplicitCastExpr 0x1ff0dfd2d40 <col:16> 'const char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1ff0dfd2c20 <col:16> 'const char *' lvalue ParmVar 0x1ff0dfd25c0 'id' 'const char *'
|   | | `-ImplicitCastExpr 0x1ff0dfd2d70 <col:20> 'const char *' <NoOp>
|   | |   `-ImplicitCastExpr 0x1ff0dfd2d58 <col:20> 'char *' <ArrayToPointerDecay>
|   | |     `-StringLiteral 0x1ff0dfd2c78 <col:20> 'char [8]' lvalue "dynamic"
|   | `-CompoundStmt 0x1ff0dfd3518 <col:32, line:336:5>
|   |   `-IfStmt 0x1ff0dfd3500 <line:328:9, line:334:18>
|   |     |-OpaqueValueExpr 0x1ff0dfd34e8 <<invalid sloc>> '_Bool'
|   |     `-GotoStmt 0x1ff0dfd34d0 <col:13, col:18> 'notfound' 0x1ff0dfd3480
|   |-LabelStmt 0x1ff0dfd3570 <line:337:2, col:10> 'notfound'
|   | `-NullStmt 0x1ff0dfd3568 <col:10>
|   `-CallExpr 0x1ff0dfcc730 <line:340:5, col:36> 'int'
|     |-ImplicitCastExpr 0x1ff0dfcc718 <col:5> 'int (*)()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x1ff0dfcc650 <col:5> 'int ()' Function 0x1ff0dfcc588 'ERR_add_error_data' 'int ()'
|     |-IntegerLiteral 0x1ff0dfcc670 <col:24> 'int' 2
|     |-ImplicitCastExpr 0x1ff0dfcc768 <col:27> 'char *' <ArrayToPointerDecay>
|     | `-StringLiteral 0x1ff0dfcc6d8 <col:27> 'char [4]' lvalue "id="
|     `-ImplicitCastExpr 0x1ff0dfcc780 <col:34> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x1ff0dfcc6f8 <col:34> 'const char *' lvalue ParmVar 0x1ff0dfd25c0 'id' 'const char *'
`-FunctionDecl 0x1ff0dfcc890 <line:345:1, line:354:1> line:345:5 invalid ENGINE_up_ref 'int (int *)'
  |-ParmVarDecl 0x1ff0dfcc7f8 <col:19, col:27> col:27 invalid e 'int *'
  `-CompoundStmt 0x1ff0dfccc48 <line:346:1, line:354:1>
    |-DeclStmt 0x1ff0dfcc9d0 <line:347:5, col:10>
    | `-VarDecl 0x1ff0dfcc968 <col:5, col:9> col:9 used i 'int'
    |-IfStmt 0x1ff0dfcca70 <line:348:5, line:351:5>
    | |-OpaqueValueExpr 0x1ff0dfcca58 <<invalid sloc>> '_Bool'
    | `-CompoundStmt 0x1ff0dfcca40 <line:348:20, line:351:5>
    |   `-ReturnStmt 0x1ff0dfcca30 <line:350:9, col:16>
    |     `-IntegerLiteral 0x1ff0dfcca08 <col:16> 'int' 0
    `-ReturnStmt 0x1ff0dfccc38 <line:353:5, col:12>
      `-IntegerLiteral 0x1ff0dfccc10 <col:12> 'int' 1
