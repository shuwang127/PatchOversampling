TranslationUnitDecl 0x2835357a678 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x2835357af10 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x2835357ac10 '__int128'
|-TypedefDecl 0x2835357af80 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x2835357ac30 'unsigned __int128'
|-TypedefDecl 0x2835357b2b8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x2835357b070 'struct __NSConstantString_tag'
|   `-Record 0x2835357afd8 '__NSConstantString_tag'
|-TypedefDecl 0x2835357b328 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x2835357a850 'unsigned long long'
|-TypedefDecl 0x2835357b3c0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x2835357b380 'char *'
|   `-BuiltinType 0x2835357a710 'char'
|-TypedefDecl 0x2835357b430 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x2835357b380 'char *'
|   `-BuiltinType 0x2835357a710 'char'
|-TypedefDecl 0x2835357b4f0 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x2835357a850 'unsigned long long'
|-TypedefDecl 0x2835357b560 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x2835357b380 'char *'
|   `-BuiltinType 0x2835357a710 'char'
|-FunctionDecl 0x28354f213d0 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x28354f21470 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x28354f214e0 <col:21> Implicit
|-FunctionDecl 0x28354f21538 prev 0x28354f213d0 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x28354f21260 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x28354f21628 <col:21> Inherited Implicit
|-TypedefDecl 0x28354f21668 prev 0x2835357b328 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x2835357a850 'unsigned long long'
|-TypedefDecl 0x28354f21710 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x28354f216e0 'size_t' sugar
|   |-Typedef 0x28354f21668 'size_t'
|   `-BuiltinType 0x2835357a850 'unsigned long long'
|-TypedefDecl 0x28354f21780 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x2835357a7b0 'long long'
|-TypedefDecl 0x28354f217f0 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x2835357a7b0 'long long'
|-TypedefDecl 0x28354f21860 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x2835357a7f0 'unsigned short'
|-TypedefDecl 0x28354f218d0 <line:541:1, col:24> col:24 referenced wint_t 'unsigned short'
| `-BuiltinType 0x2835357a7f0 'unsigned short'
|-TypedefDecl 0x28354f21940 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x2835357a7f0 'unsigned short'
|-TypedefDecl 0x28354f219b0 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x2835357a770 'int'
|-TypedefDecl 0x28354f21a20 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x2835357a790 'long'
|-TypedefDecl 0x28354f21a90 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x2835357a7b0 'long long'
|-TypedefDecl 0x28354f21b20 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x28354f21af0 '__time64_t' sugar
|   |-Typedef 0x28354f21a90 '__time64_t'
|   `-BuiltinType 0x2835357a7b0 'long long'
|-FunctionDecl 0x28354f21c98 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x28354f21eb8 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x28354f60630 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x28354f21ff8 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x28354f22070 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x28354f220e8 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x28354f22168 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x28354f603d0 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x28354f60710 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x28354f607d0 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x28354f60940 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x28354f608f0 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x28354f60890 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x28354f607b0 'struct threadlocaleinfostruct'
|       `-Record 0x28354f6a470 'threadlocaleinfostruct'
|-TypedefDecl 0x28354f60a50 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x28354f60a00 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x28354f609a0 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x28354f60870 'struct threadmbcinfostruct'
|       `-Record 0x28354f607d0 'threadmbcinfostruct'
|-RecordDecl 0x28354f60aa8 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x28354f60b60 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x28354f60c20 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x28354f60cb0 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x28354f60d40 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x28354f60df8 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x28354f60da0 'struct localeinfo_struct' sugar
|   `-RecordType 0x28354f60c00 'struct localeinfo_struct'
|     `-Record 0x28354f60b60 'localeinfo_struct'
|-TypedefDecl 0x28354f60ed0 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x28354f60e80 'struct localeinfo_struct *'
|   `-ElaboratedType 0x28354f60da0 'struct localeinfo_struct' sugar
|     `-RecordType 0x28354f60c00 'struct localeinfo_struct'
|       `-Record 0x28354f60b60 'localeinfo_struct'
|-RecordDecl 0x28354f60f48 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x28354f61000 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x28354f61078 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x28354f61138 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x28354f611d0 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x28354f61240 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x28354f612f8 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x28354f612a0 'struct localerefcount' sugar
|   `-RecordType 0x28354f60fe0 'struct localerefcount'
|     `-Record 0x28354f60f48 'localerefcount'
|-RecordDecl 0x28354f6a470 prev 0x28354f60710 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x28354f6a4f0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x28354f6a568 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x28354f6a5d8 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x28354f6a648 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x28354f6a6b8 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x28354f6a878 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x28354f6a8e8 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x28354f6a958 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x28354f6a9c8 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x28354f6aa38 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x28354f6aaa8 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x28354f6ab00 parent 0x2835357a678 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x28354f6ac90 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x28354f6ad00 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x28354f6ad70 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x28354f6ade0 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x28354f6ae80 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x28354f6aef0 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x28354f6b000 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x28354f6b138 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x28354f6b1e8 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x28354f6b190 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x28354f607b0 'struct threadlocaleinfostruct'
|     `-Record 0x28354f6a470 'threadlocaleinfostruct'
|-RecordDecl 0x28354f6b280 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:63:1, line:72:9> line:63:8 struct _iobuf definition
| |-MaxFieldAlignmentAttr 0x28354f6b340 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x28354f6b3b8 <line:64:9, col:15> col:15 _ptr 'char *'
| |-FieldDecl 0x28354f64410 <line:65:9, col:15> col:15 _cnt 'int'
| |-FieldDecl 0x28354f64480 <line:66:9, col:15> col:15 _base 'char *'
| |-FieldDecl 0x28354f644f0 <line:67:9, col:15> col:15 _flag 'int'
| |-FieldDecl 0x28354f64560 <line:68:9, col:15> col:15 _file 'int'
| |-FieldDecl 0x28354f645d0 <line:69:9, col:15> col:15 _charbuf 'int'
| |-FieldDecl 0x28354f64640 <line:70:9, col:15> col:15 _bufsiz 'int'
| `-FieldDecl 0x28354f646b0 <line:71:9, col:15> col:15 _tmpfname 'char *'
|-TypedefDecl 0x28354f64760 <line:73:1, col:23> col:23 referenced FILE 'struct _iobuf':'struct _iobuf'
| `-ElaboratedType 0x28354f64710 'struct _iobuf' sugar
|   `-RecordType 0x28354f6b320 'struct _iobuf'
|     `-Record 0x28354f6b280 '_iobuf'
|-FunctionDecl 0x28354f64998 <line:137:9, col:39> col:24 __iob_func 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|-TypedefDecl 0x28354f64a68 <line:144:1, col:17> col:17 referenced fpos_t 'long long'
| `-BuiltinType 0x2835357a7b0 'long long'
|-FunctionDecl 0x28354f64c48 <line:175:24, col:65> col:36 _filbuf 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x28354f64ad0 <col:52, col:59> col:59 _File 'FILE *'
|-FunctionDecl 0x28354f64f40 <line:176:28, col:82> col:40 _flsbuf 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x28354f64d20 <col:53, col:57> col:57 _Ch 'int'
| `-ParmVarDecl 0x28354f64d98 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x28354f652f0 <line:178:24, col:121> col:39 _fsopen 'FILE *(const char *, const char *, int) __attribute__((cdecl))':'FILE *(const char *, const char *, int)'
| |-ParmVarDecl 0x28354f65020 <col:54, col:67> col:67 _Filename 'const char *'
| |-ParmVarDecl 0x28354f650a0 <col:85, col:98> col:98 _Mode 'const char *'
| `-ParmVarDecl 0x28354f65120 <col:110, col:114> col:114 _ShFlag 'int'
|-FunctionDecl 0x28354f72660 <line:180:9, col:51> col:22 clearerr 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x28354f724f0 <col:39, col:46> col:46 _File 'FILE *'
|-FunctionDecl 0x28354f72890 <line:182:28, col:76> col:44 clearerr_s 'errno_t (FILE *) __attribute__((cdecl))':'errno_t (FILE *)'
| `-ParmVarDecl 0x28354f72750 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x28354f72a40 <line:184:28, col:67> col:40 fclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x28354f72960 <col:55, col:62> col:62 _File 'FILE *'
|-FunctionDecl 0x28354f72c30 <line:185:28, col:55> col:40 _fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x28354f72f28 <line:187:24, col:94> col:39 _fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x28354f72d00 <col:52, col:56> col:56 _FileHandle 'int'
| `-ParmVarDecl 0x28354f72d80 <col:76, col:89> col:89 _Mode 'const char *'
|-FunctionDecl 0x28354f730e0 <line:189:24, col:58> col:36 feof 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x28354f73000 <col:46, col:53> col:53 _File 'FILE *'
|-FunctionDecl 0x28354f73290 <line:190:24, col:60> col:36 ferror 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x28354f731b0 <col:48, col:55> col:55 _File 'FILE *'
|-FunctionDecl 0x28354f73440 <line:191:28, col:71> col:40 fflush 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x28354f73360 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x28354f73608 <line:192:28, col:66> col:40 fgetc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x28354f73528 <col:54, col:61> col:61 _File 'FILE *'
|-FunctionDecl 0x28354f73798 <line:193:28, col:54> col:40 _fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x28354f73b00 <line:194:28, col:90> col:40 fgetpos 'int (FILE *, fpos_t *) __attribute__((cdecl))':'int (FILE *, fpos_t *)'
| |-ParmVarDecl 0x28354f73860 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x28354f73958 <col:77, col:86> col:86 _Pos 'fpos_t *'
|-FunctionDecl 0x28354f73eb8 <line:195:28, col:128> col:43 fgets 'char *(char *, int, FILE *) __attribute__((cdecl))':'char *(char *, int, FILE *)'
| |-ParmVarDecl 0x28354f73be0 <col:75, col:82> col:82 _Buf 'char *'
| |-ParmVarDecl 0x28354f73c60 <col:93, col:97> col:97 _MaxCount 'int'
| `-ParmVarDecl 0x28354f73cd8 <col:116, col:123> col:123 _File 'FILE *'
|-FunctionDecl 0x28354f74078 <line:197:24, col:61> col:36 _fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x28354f73f98 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x28354f74340 <line:204:24, col:117> col:39 _tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x28354f74150 <col:59, col:72> col:72 _DirName 'const char *'
| `-ParmVarDecl 0x28354f741d0 <col:93, col:106> col:106 _FilePrefix 'const char *'
|-FunctionDecl 0x28354f704d0 <line:210:28, col:54> col:40 _flushall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x28354f708c8 <line:211:72> col:72 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x28354f70968 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x28354f709d0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x28354f70a48 prev 0x28354f708c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:211:134> col:72 fopen 'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x28354f706a0 <col:85, col:98> col:98 _Filename 'const char *'
| |-ParmVarDecl 0x28354f70720 <col:116, col:129> col:129 _Mode 'const char *'
| `-DeprecatedAttr 0x28354f70af8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28354f70f70 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:213:28, col:149> col:44 fopen_s 'errno_t (FILE **, const char *, const char *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *)'
| |-ParmVarDecl 0x28354f70ca0 <col:78, col:86> col:86 _File 'FILE **'
| |-ParmVarDecl 0x28354f70d20 <col:100, col:113> col:113 _Filename 'const char *'
| `-ParmVarDecl 0x28354f70da0 <col:131, col:144> col:144 _Mode 'const char *'
|-FunctionDecl 0x28354f71290 <line:215:40> col:40 implicit fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x28354f71330 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x28354f71398 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x28354f71410 <col:40> Implicit printf 2 3
|-FunctionDecl 0x28354f75520 prev 0x28354f71290 <col:28, col:125> col:40 fprintf 'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x28354f71050 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x28354f710d0 <col:100, col:113> col:113 _Format 'const char *'
| `-FormatAttr 0x28354f75618 <col:40> Inherited printf 2 3
|-FunctionDecl 0x28354f757e0 <line:217:28, col:127> col:40 fprintf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x28354f75660 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x28354f756e0 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x28354f75a38 <line:219:28, col:80> col:40 fputc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x28354f758c0 <col:51, col:55> col:55 _Ch 'int'
| `-ParmVarDecl 0x28354f75938 <col:68, col:75> col:75 _File 'FILE *'
|-FunctionDecl 0x28354f75c68 <line:220:28, col:62> col:40 _fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x28354f75b18 <col:55, col:59> col:59 _Ch 'int'
|-FunctionDecl 0x28354f75f60 <line:221:28, col:92> col:40 fputs 'int (const char *, FILE *) __attribute__((cdecl))':'int (const char *, FILE *)'
| |-ParmVarDecl 0x28354f75d40 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x28354f75db8 <col:80, col:87> col:87 _File 'FILE *'
|-FunctionDecl 0x28354f763f8 <line:222:43> col:43 implicit fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x28354f76498 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x28354f6e4b0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x28354f6e518 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x28354f6e580 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x28354f6e608 prev 0x28354f763f8 <col:28, col:171> col:43 fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x28354f76040 <col:89, col:96> col:96 _DstBuf 'void *'
| |-ParmVarDecl 0x28354f760b8 <col:110, col:117> col:117 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28354f76130 <col:136, col:143> col:143 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28354f761a8 <col:159, col:166> col:166 _File 'FILE *'
|-FunctionDecl 0x28354f6eb10 <line:224:28, col:195> col:43 fread_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x28354f6e6f8 <col:91, col:98> col:98 _DstBuf 'void *'
| |-ParmVarDecl 0x28354f6e770 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28354f6e7e8 <col:134, col:141> col:141 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28354f6e860 <col:160, col:167> col:167 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28354f6e8d8 <col:183, col:190> col:190 _File 'FILE *'
|-FunctionDecl 0x28354f6efd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:226:160> col:74 freopen 'FILE *(const char *, const char *, FILE *) __attribute__((cdecl))':'FILE *(const char *, const char *, FILE *)'
| |-ParmVarDecl 0x28354f6ed00 <col:89, col:102> col:102 _Filename 'const char *'
| |-ParmVarDecl 0x28354f6ed80 <col:120, col:133> col:133 _Mode 'const char *'
| |-ParmVarDecl 0x28354f6edf8 <col:148, col:155> col:155 _File 'FILE *'
| `-DeprecatedAttr 0x28354f6f088 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using freopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28354f71588 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:228:28, col:176> col:44 freopen_s 'errno_t (FILE **, const char *, const char *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *, FILE *)'
| |-ParmVarDecl 0x28354f6f1d0 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x28354f6f250 <col:102, col:115> col:115 _Filename 'const char *'
| |-ParmVarDecl 0x28354f6f2d0 <col:133, col:146> col:146 _Mode 'const char *'
| `-ParmVarDecl 0x28354f6f348 <col:161, col:168> col:168 _OldFile 'FILE *'
|-FunctionDecl 0x28354f71930 <line:230:70> col:70 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x28354f719d0 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x28354f71a38 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x28354f71ab0 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x28354f71b18 prev 0x28354f71930 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:230:153> col:70 fscanf 'int (FILE *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x28354f71768 <col:85, col:92> col:92 _File 'FILE *'
| |-ParmVarDecl 0x28354f717e8 <col:128, col:141> col:141 _Format 'const char *'
| |-FormatAttr 0x28354f71cf8 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x28354f71bc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28354f72138 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:231:201> col:77 _fscanf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x28354f71e38 <col:95, col:102> col:102 _File 'FILE *'
| |-ParmVarDecl 0x28354f71eb8 <col:148, col:161> col:161 _Format 'const char *'
| |-ParmVarDecl 0x28354f71f50 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x28354f721f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28354f76530 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:235:28, col:127> col:40 fscanf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x28354f72330 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x28354f723b0 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x28354f76820 <line:237:28, col:168> col:40 _fscanf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x28354f76608 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x28354f76688 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x28354f76700 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28354f76b80 <line:239:28, col:94> col:40 fsetpos 'int (FILE *, const fpos_t *) __attribute__((cdecl))':'int (FILE *, const fpos_t *)'
| |-ParmVarDecl 0x28354f76900 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x28354f769d8 <col:75, col:90> col:90 _Pos 'const fpos_t *'
|-FunctionDecl 0x28354f76f38 <line:240:28, col:103> col:40 fseek 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x28354f76c58 <col:54, col:61> col:61 _File 'FILE *'
| |-ParmVarDecl 0x28354f76cd8 <col:73, col:78> col:78 _Offset 'long'
| `-ParmVarDecl 0x28354f76d58 <col:92, col:96> col:96 _Origin 'int'
|-FunctionDecl 0x28354f77198 <line:241:24, col:63> col:37 ftell 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x28354f77018 <col:51, col:58> col:58 _File 'FILE *'
|-FunctionDecl 0x28354f6f508 <line:243:28, col:110> col:40 _fseeki64 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x28354f77268 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x28354f772e8 <col:77, col:85> col:85 _Offset 'long long'
| `-ParmVarDecl 0x28354f77368 <col:99, col:103> col:103 _Origin 'int'
|-FunctionDecl 0x28354f6f768 <line:244:24, col:70> col:40 _ftelli64 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x28354f6f5e8 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x28354f6fc28 <line:246:43> col:43 implicit fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x28354f6fcc8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x28354f6fd30 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x28354f6fd98 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x28354f6fe00 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x28354f6fe88 prev 0x28354f6fc28 <col:28, col:159> col:43 fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x28354f6f870 <col:81, col:94> col:94 _Str 'const void *'
| |-ParmVarDecl 0x28354f6f8e8 <col:105, col:112> col:112 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28354f6f960 <col:124, col:131> col:131 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28354f6f9d8 <col:147, col:154> col:154 _File 'FILE *'
|-FunctionDecl 0x28354f70050 <line:247:24, col:61> col:36 getc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x28354f6ff70 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x28354f701e0 <line:248:24, col:48> col:36 getchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x28354f70368 <line:249:24, col:53> col:36 _getmaxstdio 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x28354f78710 <line:251:9, col:84> col:24 gets_s 'char *(char *, rsize_t) __attribute__((cdecl))':'char *(char *, rsize_t)'
| |-ParmVarDecl 0x28354f70438 <col:53, col:60> col:60 _Buf 'char *'
| `-ParmVarDecl 0x28354f78560 <col:71, col:79> col:79 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x28354f78a38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:254:80 gets 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x28354f788f0 <col:139, col:145> col:145 _Buffer 'char *'
| `-DeprecatedAttr 0x28354f78ae0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28354f78d00 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:255:16, col:54> col:28 _getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x28354f78c20 <col:42, col:49> col:49 _File 'FILE *'
|-FunctionDecl 0x28354f78f20 <line:258:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x28354f78dd8 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x28354f790d0 <line:261:28, col:68> col:40 _pclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x28354f78ff0 <col:56, col:63> col:63 _File 'FILE *'
|-FunctionDecl 0x28354f79320 <line:262:24, col:101> col:39 _popen 'FILE *(const char *, const char *) __attribute__((cdecl))':'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x28354f791a8 <col:53, col:66> col:66 _Command 'const char *'
| `-ParmVarDecl 0x28354f79228 <col:83, col:96> col:96 _Mode 'const char *'
|-FunctionDecl 0x28354f79560 <line:264:40> col:40 implicit printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x28354f79600 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x28354f79670 <col:40> Implicit printf 1 2
|-FunctionDecl 0x28354f796d8 prev 0x28354f79560 <col:28, col:102> col:40 printf 'int (const char *, ...)'
| |-ParmVarDecl 0x28354f79400 <col:77, col:90> col:90 _Format 'const char *'
| `-FormatAttr 0x28354f797c8 <col:40> Inherited printf 1 2
|-FunctionDecl 0x28354f798f8 <line:266:28, col:104> col:40 printf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x28354f79818 <col:79, col:92> col:92 _Format 'const char *'
|-FunctionDecl 0x28354f79b48 <line:268:28, col:79> col:40 putc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x28354f799d0 <col:50, col:54> col:54 _Ch 'int'
| `-ParmVarDecl 0x28354f79a48 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x28354f79d08 <line:269:28, col:60> col:40 putchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x28354f79c28 <col:53, col:57> col:57 _Ch 'int'
|-FunctionDecl 0x28354f79f28 <line:270:28, col:69> col:40 puts 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x28354f79de0 <col:52, col:65> col:65 _Str 'const char *'
|-FunctionDecl 0x28354f7a178 <line:271:28, col:82> col:40 _putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x28354f7a000 <col:51, col:55> col:55 _Word 'int'
| `-ParmVarDecl 0x28354f7a078 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x28354f7a338 <line:274:9, col:57> col:21 remove 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x28354f7a258 <col:35, col:48> col:48 _Filename 'const char *'
|-FunctionDecl 0x28354fca030 <line:275:24, col:109> col:36 rename 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x28354f7a410 <col:50, col:63> col:63 _OldFilename 'const char *'
| `-ParmVarDecl 0x28354f7a490 <col:84, col:97> col:97 _NewFilename 'const char *'
|-FunctionDecl 0x28354fca1f0 <line:276:9, col:58> col:21 _unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x28354fca110 <col:36, col:49> col:49 _Filename 'const char *'
|-FunctionDecl 0x28354fca480 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:278:89> col:53 unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x28354fca3a0 <col:67, col:80> col:80 _Filename 'const char *'
| `-DeprecatedAttr 0x28354fca528 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _unlink. See online help for details." ""
|-FunctionDecl 0x28354fca720 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:281:9, col:49> col:22 rewind 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x28354fca648 <col:37, col:44> col:44 _File 'FILE *'
|-FunctionDecl 0x28354fca8b0 <line:282:28, col:51> col:40 _rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x28354fcab58 <line:283:69> col:69 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x28354fcabf8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x28354fcac68 <col:69> Implicit scanf 1 2
|-FunctionDecl 0x28354fcacd0 prev 0x28354fcab58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:283:129> col:69 scanf 'int (const char *restrict, ...)'
| |-ParmVarDecl 0x28354fcaa40 <col:104, col:117> col:117 _Format 'const char *'
| |-FormatAttr 0x28354fcaea8 <col:69> Inherited scanf 1 2
| `-DeprecatedAttr 0x28354fcad78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28354fcb280 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:284:177> col:76 _scanf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x28354fcb048 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x28354fcb0c0 <col:155, col:165> col:165 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x28354fcb330 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _scanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28354fcb558 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:288:40, col:116> col:52 scanf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x28354fcb478 <col:91, col:104> col:104 _Format 'const char *'
|-FunctionDecl 0x28354fcb7a8 <line:290:40, col:157> col:52 _scanf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x28354fcb630 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x28354fcb6a8 <col:135, col:145> col:145 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28354fcbb68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:292:150> col:55 setbuf 'void (FILE *, char *) __attribute__((cdecl))':'void (FILE *, char *)'
| |-ParmVarDecl 0x28354fcb940 <col:70, col:77> col:77 _File 'FILE *'
| |-ParmVarDecl 0x28354fcb9c0 <col:136, col:143> col:143 _Buffer 'char *'
| `-DeprecatedAttr 0x28354fcbc18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using setvbuf instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28354fcbe40 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:293:28, col:66> col:40 _setmaxstdio 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x28354fcbd60 <col:58, col:62> col:62 _Max 'int'
|-FunctionDecl 0x28354fc5058 <line:294:28, col:93> col:49 _set_output_format 'unsigned int (unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int)'
| `-ParmVarDecl 0x28354fc4f10 <col:73, col:86> col:86 _Format 'unsigned int'
|-FunctionDecl 0x28354fc5240 <line:295:28, col:72> col:49 _get_output_format 'unsigned int (void) __attribute__((cdecl))':'unsigned int (void)'
|-FunctionDecl 0x28354fc5690 <line:296:28, col:145> col:40 setvbuf 'int (FILE *, char *, int, size_t) __attribute__((cdecl))':'int (FILE *, char *, int, size_t)'
| |-ParmVarDecl 0x28354fc5308 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x28354fc5388 <col:99, col:106> col:106 _Buf 'char *'
| |-ParmVarDecl 0x28354fc5408 <col:117, col:121> col:121 _Mode 'int'
| `-ParmVarDecl 0x28354fc5480 <col:133, col:140> col:140 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x28354fc5b10 <line:297:40, col:213> col:52 _snprintf_s 'int (char *, size_t, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, ...)'
| |-ParmVarDecl 0x28354fc5780 <col:93, col:100> col:100 _DstBuf 'char *'
| |-ParmVarDecl 0x28354fc57f8 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28354fc5870 <col:140, col:147> col:147 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28354fc58f0 <col:188, col:201> col:201 _Format 'const char *'
|-FunctionDecl 0x28354fc6f30 <line:300:40, col:188> col:52 sprintf_s 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x28354fc5c00 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x28354fc5c78 <col:112, col:119> col:119 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28354fc5cf8 <col:163, col:176> col:176 _Format 'const char *'
|-FunctionDecl 0x28354fc70f8 <line:303:24, col:101> col:36 _scprintf 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x28354fc7018 <col:76, col:89> col:89 _Format 'const char *'
|-FunctionDecl 0x28354fc74d0 <line:304:70> col:70 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x28354fc7570 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x28354fc75d8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x28354fc7650 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x28354fc76b8 prev 0x28354fc74d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:304:157> col:70 sscanf 'int (const char *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x28354fc7290 <col:84, col:97> col:97 _Src 'const char *'
| |-ParmVarDecl 0x28354fc7310 <col:132, col:145> col:145 _Format 'const char *'
| |-FormatAttr 0x28354fc7898 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x28354fc7768 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28354fc7c88 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:305:205> col:77 _sscanf_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x28354fc79a8 <col:94, col:107> col:107 _Src 'const char *'
| |-ParmVarDecl 0x28354fc7a28 <col:152, col:165> col:165 _Format 'const char *'
| |-ParmVarDecl 0x28354fc7aa0 <col:183, col:193> col:193 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x28354fc7d40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28354fcc080 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:309:40, col:143> col:52 sscanf_s 'int (const char *, const char *, ...) __attribute__((cdecl))':'int (const char *, const char *, ...)'
| |-ParmVarDecl 0x28354fc7e88 <col:68, col:81> col:81 _Src 'const char *'
| `-ParmVarDecl 0x28354fcbf80 <col:118, col:131> col:131 _Format 'const char *'
|-FunctionDecl 0x28354fcc378 <line:311:40, col:184> col:52 _sscanf_s_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x28354fcc160 <col:71, col:84> col:84 _Src 'const char *'
| |-ParmVarDecl 0x28354fcc1e0 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x28354fcc258 <col:162, col:172> col:172 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28354fcc808 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:312:217> col:76 _snscanf 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x28354fcc520 <col:121, col:134> col:134 _Src 'const char *'
| |-ParmVarDecl 0x28354fcc598 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28354fcc618 <col:192, col:205> col:205 _Format 'const char *'
| `-DeprecatedAttr 0x28354fcc8c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28354fcce90 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:313:259> col:78 _snscanf_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x28354fccb00 <col:125, col:138> col:138 _Src 'const char *'
| |-ParmVarDecl 0x28354fccb78 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28354fccbf8 <col:206, col:219> col:219 _Format 'const char *'
| |-ParmVarDecl 0x28354fccc70 <col:237, col:247> col:247 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x28354fccf90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28354fcd2f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:314:40, col:197> col:52 _snscanf_s 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x28354fcd0d8 <col:99, col:112> col:112 _Src 'const char *'
| |-ParmVarDecl 0x28354fcd150 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28354fcd1d0 <col:172, col:185> col:185 _Format 'const char *'
|-FunctionDecl 0x28354fcd688 <line:315:40, col:237> col:52 _snscanf_s_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x28354fcd3d8 <col:101, col:114> col:114 _Src 'const char *'
| |-ParmVarDecl 0x28354fcd450 <col:125, col:132> col:132 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28354fcd4d0 <col:184, col:197> col:197 _Format 'const char *'
| `-ParmVarDecl 0x28354fcd548 <col:215, col:225> col:225 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28354fcd8e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:317:86> col:74 tmpfile 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
| `-DeprecatedAttr 0x28354fcd988 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpfile_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28354fcdc40 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:319:28, col:96> col:44 tmpfile_s 'errno_t (FILE **) __attribute__((cdecl))':'errno_t (FILE **)'
| `-ParmVarDecl 0x28354fcdad0 <col:83, col:91> col:91 _File 'FILE **'
|-FunctionDecl 0x28354fc8f50 <line:320:28, col:106> col:44 tmpnam_s 'errno_t (char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t)'
| |-ParmVarDecl 0x28354fcdd18 <col:75, col:82> col:82 _Buf 'char *'
| `-ParmVarDecl 0x28354fcdd90 <col:93, col:101> col:101 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x28354fc91d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:323:79 tmpnam 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x28354fc90f0 <col:113, col:119> col:119 _Buffer 'char *'
| `-DeprecatedAttr 0x28354fc9278 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28354fc9538 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:324:28, col:81> col:40 ungetc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x28354fc93c0 <col:52, col:56> col:56 _Ch 'int'
| `-ParmVarDecl 0x28354fc9438 <col:69, col:76> col:76 _File 'FILE *'
|-FunctionDecl 0x28354fc9950 <line:325:40> col:40 implicit vfprintf 'int (FILE *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x28354fc99f0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x28354fc9a58 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x28354fc9ac0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x28354fc9b40 <col:40> Implicit printf 2 0
|-FunctionDecl 0x28354fc9ba8 prev 0x28354fc9950 <col:28, col:139> col:40 vfprintf 'int (FILE *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x28354fc9610 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x28354fc9690 <col:101, col:114> col:114 _Format 'const char *'
| |-ParmVarDecl 0x28354fc9708 <col:123, col:131> col:131 _ArgList 'va_list':'char *'
| `-FormatAttr 0x28354fc9ca8 <col:40> Inherited printf 2 0
|-FunctionDecl 0x28354fc5f20 <line:326:40> col:40 implicit vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x28354fc5fc0 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x28354fc6028 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x28354fc6090 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x28354fc6110 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x28354fc6178 prev 0x28354fc5f20 <col:28, col:138> col:40 vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x28354fc9cf0 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x28354fc9d70 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x28354fc9de8 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x28354fc6278 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x28354fc64d8 <line:328:28, col:141> col:40 vfprintf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x28354fc62c0 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x28354fc6340 <col:103, col:116> col:116 _Format 'const char *'
| `-ParmVarDecl 0x28354fc63b8 <col:125, col:133> col:133 _ArgList 'va_list':'char *'
|-FunctionDecl 0x28354fc67d0 <line:329:28, col:140> col:40 vfscanf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x28354fc65b8 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x28354fc6638 <col:102, col:115> col:115 _Format 'const char *'
| `-ParmVarDecl 0x28354fc66b0 <col:124, col:132> col:132 _ArgList 'va_list':'char *'
|-FunctionDecl 0x28354fc6b18 <line:331:40> col:40 implicit vprintf 'int (const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x28354fc6bb8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x28354fc6c20 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x28354fc6c98 <col:40> Implicit printf 1 0
|-FunctionDecl 0x28354fc6d00 prev 0x28354fc6b18 <col:28, col:116> col:40 vprintf 'int (const char *, __builtin_va_list)'
| |-ParmVarDecl 0x28354fc68b8 <col:78, col:91> col:91 _Format 'const char *'
| |-ParmVarDecl 0x28354fc6930 <col:100, col:108> col:108 _ArgList 'va_list':'char *'
| `-FormatAttr 0x28354fc6df8 <col:40> Inherited printf 1 0
|-FunctionDecl 0x28354fcf0e8 <line:332:40> col:40 implicit vscanf 'int (const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x28354fcf188 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x28354fcf1f0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x28354fcf268 <col:40> Implicit scanf 1 0
|-FunctionDecl 0x28354fcf2d0 prev 0x28354fcf0e8 <col:28, col:115> col:40 vscanf 'int (const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x28354fc6e48 <col:77, col:90> col:90 _Format 'const char *'
| |-ParmVarDecl 0x28354fcefb0 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
| `-FormatAttr 0x28354fcf3c8 <col:40> Inherited scanf 1 0
|-FunctionDecl 0x28354fcf590 <line:334:28, col:118> col:40 vprintf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x28354fcf418 <col:80, col:93> col:93 _Format 'const char *'
| `-ParmVarDecl 0x28354fcf490 <col:102, col:110> col:110 _ArgList 'va_list':'char *'
|-FunctionDecl 0x28354fcf7e8 <line:335:28, col:117> col:40 vscanf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x28354fcf670 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x28354fcf6e8 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x28354fcfd48 <line:337:77> col:77 implicit vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x28354fcfde8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x28354fcfe50 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x28354fcfeb8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x28354fcff20 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x28354fc7f40 <col:77> Implicit printf 3 0
|-FunctionDecl 0x28354fc7fa8 prev 0x28354fcfd48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:337:218> col:77 vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x28354fcf988 <col:111, col:118> col:118 _DstBuf 'char *'
| |-ParmVarDecl 0x28354fcfa00 <col:132, col:139> col:139 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28354fcfa80 <col:180, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x28354fcfaf8 <col:202, col:210> col:210 _ArgList 'va_list':'char *'
| |-FormatAttr 0x28354fc8198 <col:77> Inherited printf 3 0
| `-DeprecatedAttr 0x28354fc8068 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28354fc8608 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:339:28, col:206> col:40 vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x28354fc81e8 <col:77, col:84> col:84 _DstBuf 'char *'
| |-ParmVarDecl 0x28354fc8260 <col:98, col:105> col:105 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28354fc82d8 <col:120, col:127> col:127 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28354fc8358 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x28354fc83d0 <col:190, col:198> col:198 _ArgList 'va_list':'char *'
|-FunctionDecl 0x28354fc8a48 <line:342:40, col:227> col:52 _vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x28354fc8700 <col:94, col:101> col:101 _DstBuf 'char *'
| |-ParmVarDecl 0x28354fc8778 <col:115, col:122> col:122 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28354fc87f0 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28354fc8870 <col:189, col:202> col:202 _Format 'const char *'
| `-ParmVarDecl 0x28354fc88e8 <col:211, col:219> col:219 _ArgList 'va_list':'char *'
|-FunctionDecl 0x28354fc8e18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:89 _snprintf 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x28354fc8c00 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x28354fc8c78 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28354fc8cf8 <col:246, col:260> col:260 _Format 'const char *'
| `-DeprecatedAttr 0x28354fc8ed0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28354fd1440 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:100 _vsnprintf 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x28354fd1190 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x28354fd1208 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28354fd1288 <col:246, col:260> col:260 _Format 'const char *'
| |-ParmVarDecl 0x28354fd1300 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x28354fd1500 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28354fd18f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:349:21, col:183> col:33 vsprintf_s 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x28354fd1648 <col:73, col:80> col:80 _DstBuf 'char *'
| |-ParmVarDecl 0x28354fd16c0 <col:94, col:101> col:101 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28354fd1740 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x28354fd17b8 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x28354fd1cb8 <line:351:40, col:149> col:52 vsscanf_s 'int (const char *, const char *, va_list) __attribute__((cdecl))':'int (const char *, const char *, va_list)'
| |-ParmVarDecl 0x28354fd19e8 <col:62, col:75> col:75 _Src 'const char *'
| |-ParmVarDecl 0x28354fd1a68 <col:111, col:124> col:124 _Format 'const char *'
| `-ParmVarDecl 0x28354fd1ae0 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x28354fd3090 <line:356:85> col:85 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x28354fd3130 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x28354fd3198 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x28354fd3210 <col:85> Implicit printf 2 3
|-FunctionDecl 0x28354fd3278 prev 0x28354fd3090 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:85 sprintf 'int (char *, const char *, ...)'
| |-ParmVarDecl 0x28354fd1e60 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x28354fd1ee0 <col:171, col:185> col:185 _Format 'const char *'
| |-FormatAttr 0x28354fd3458 <col:85> Inherited printf 2 3
| `-DeprecatedAttr 0x28354fd3328 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28354fd3880 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> col:94 implicit vsprintf 'int (char *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x28354fd3920 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x28354fd3988 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x28354fd39f0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x28354fd3a70 <col:94> Implicit printf 2 0
|-FunctionDecl 0x28354fd3ad8 prev 0x28354fd3880 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94 vsprintf 'int (char *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x28354fd3568 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x28354fd35e8 <col:171, col:185> col:185 _Format 'const char *'
| |-ParmVarDecl 0x28354fd3660 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-FormatAttr 0x28354fd3cc0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> Inherited printf 2 0
| `-DeprecatedAttr 0x28354fd3b90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28354fd1fe0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:357:40> col:40 implicit vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x28354fd2080 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x28354fd20e8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x28354fd2150 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x28354fd21d0 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x28354fd2238 prev 0x28354fd1fe0 <col:28, col:138> col:40 vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x28354fd3d10 <col:48, col:61> col:61 _srcBuf 'const char *'
| |-ParmVarDecl 0x28354fd3d90 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x28354fd3e08 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x28354fd2338 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x28354fd2500 <line:359:24, col:115> col:36 _vscprintf 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x28354fd2388 <col:77, col:90> col:90 _Format 'const char *'
| `-ParmVarDecl 0x28354fd2400 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
|-FunctionDecl 0x28354fd27f8 <line:360:28, col:170> col:40 _snprintf_c 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x28354fd25e0 <col:76, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x28354fd2658 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28354fd26d8 <col:145, col:158> col:158 _Format 'const char *'
|-FunctionDecl 0x28354fd2b90 <line:361:28, col:183> col:40 _vsnprintf_c 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x28354fd28e0 <col:77, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x28354fd2958 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28354fd29d8 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x28354fd2a50 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x28354fd2df8 <line:363:28, col:128> col:40 _fprintf_p 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x28354fd2c78 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x28354fd2cf8 <col:103, col:116> col:116 _Format 'const char *'
|-FunctionDecl 0x28354fcdfa0 <line:364:28, col:105> col:40 _printf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x28354fd2ed8 <col:80, col:93> col:93 _Format 'const char *'
|-FunctionDecl 0x28354fce290 <line:365:28, col:168> col:40 _sprintf_p 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x28354fce078 <col:77, col:84> col:84 _Dst 'char *'
| |-ParmVarDecl 0x28354fce0f0 <col:95, col:102> col:102 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28354fce170 <col:143, col:156> col:156 _Format 'const char *'
|-FunctionDecl 0x28354fce588 <line:366:28, col:142> col:40 _vfprintf_p 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x28354fce370 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x28354fce3f0 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x28354fce468 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x28354fce7e8 <line:367:28, col:119> col:40 _vprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x28354fce670 <col:81, col:94> col:94 _Format 'const char *'
| `-ParmVarDecl 0x28354fce6e8 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x28354fceb78 <line:368:28, col:182> col:40 _vsprintf_p 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x28354fce8c8 <col:78, col:85> col:85 _Dst 'char *'
| |-ParmVarDecl 0x28354fce940 <col:96, col:103> col:103 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28354fce9c0 <col:144, col:157> col:157 _Format 'const char *'
| `-ParmVarDecl 0x28354fcea38 <col:166, col:174> col:174 _ArgList 'va_list':'char *'
|-FunctionDecl 0x28354fced48 <line:369:24, col:103> col:36 _scprintf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x28354fcec68 <col:78, col:91> col:91 _Format 'const char *'
|-FunctionDecl 0x28354fd4000 <line:370:24, col:117> col:36 _vscprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x28354fcee20 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x28354fcee98 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x28354fd41c0 <line:371:9, col:61> col:21 _set_printf_count_output 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x28354fd40e0 <col:51, col:55> col:55 _Value 'int'
|-FunctionDecl 0x28354fd4350 <line:372:9, col:50> col:21 _get_printf_count_output 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x28354fd4598 <line:374:28, col:143> col:40 _printf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x28354fd4420 <col:90, col:103> col:103 _Format 'const char *'
| `-ParmVarDecl 0x28354fd4498 <col:121, col:131> col:131 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28354fd47f0 <line:375:28, col:145> col:40 _printf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x28354fd4678 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x28354fd46f0 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28354fd4a48 <line:376:28, col:145> col:40 _printf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x28354fd48d0 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x28354fd4948 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28354fd4df8 <line:377:28, col:157> col:40 _vprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x28354fd4b28 <col:91, col:104> col:104 _Format 'const char *'
| |-ParmVarDecl 0x28354fd4ba0 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x28354fd4c18 <col:141, col:149> col:149 _ArgList 'va_list':'char *'
|-FunctionDecl 0x28354fd5130 <line:378:28, col:159> col:40 _vprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x28354fd4ee0 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x28354fd4f58 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x28354fd5010 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x28354fd5428 <line:379:28, col:159> col:40 _vprintf_s_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x28354fd5218 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x28354fd5290 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x28354fd5308 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x28354fd5720 <line:381:28, col:166> col:40 _fprintf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x28354fd5508 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x28354fd5588 <col:113, col:126> col:126 _Format 'const char *'
| `-ParmVarDecl 0x28354fd5600 <col:144, col:154> col:154 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28354fd5a18 <line:382:28, col:168> col:40 _fprintf_p_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x28354fd5800 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x28354fd5880 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x28354fd58f8 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28354fd5d10 <line:383:28, col:168> col:40 _fprintf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x28354fd5af8 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x28354fd5b78 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x28354fd5bf0 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28354fd6180 <line:384:28, col:147> col:40 _vfprintf_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x28354fd5df0 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x28354fd5e70 <col:81, col:94> col:94 _Format 'const char *'
| |-ParmVarDecl 0x28354fd5ee8 <col:112, col:122> col:122 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x28354fd5f60 <col:131, col:139> col:139 _ArgList 'va_list':'char *'
|-FunctionDecl 0x28354fd6518 <line:385:28, col:149> col:40 _vfprintf_p_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x28354fd6268 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x28354fd62e8 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x28354fd6360 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x28354fd63d8 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x28354fd68b0 <line:386:28, col:149> col:40 _vfprintf_s_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x28354fd6600 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x28354fd6680 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x28354fd66f8 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x28354fd6770 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x28354fd6d48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:388:221> col:78 _sprintf_l 'int (char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x28354fd6a60 <col:112, col:119> col:119 _DstBuf 'char *'
| |-ParmVarDecl 0x28354fd6ae0 <col:168, col:181> col:181 _Format 'const char *'
| |-ParmVarDecl 0x28354fd6b58 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x28354fd6e00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28354fd02d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:389:28, col:211> col:40 _sprintf_p_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x28354fd6f48 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x28354fcffc0 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28354fd0040 <col:158, col:171> col:171 _Format 'const char *'
| `-ParmVarDecl 0x28354fd00b8 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28354fd0670 <line:390:40, col:221> col:52 _sprintf_s_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x28354fd03c0 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x28354fd0438 <col:111, col:118> col:118 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28354fd04b8 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x28354fd0530 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28354fd0bc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:391:195> col:79 _vsprintf_l 'int (char *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x28354fd0860 <col:114, col:121> col:121 _DstBuf 'char *'
| |-ParmVarDecl 0x28354fd08e0 <col:137, col:150> col:150 _Format 'const char *'
| |-ParmVarDecl 0x28354fd0958 <col:168> col:177 '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x28354fd09d0 <col:179, col:187> col:187 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x28354fd0c80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28354fda298 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:392:28, col:225> col:40 _vsprintf_p_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x28354fd0dc8 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x28354fd0e40 <col:101, col:108> col:108 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28354fd0ec0 <col:159, col:171> col:171 _Format 'const char *'
| |-ParmVarDecl 0x28354fd0f38 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x28354fda060 <col:209, col:217> col:217 _ArgList 'va_list':'char *'
|-FunctionDecl 0x28354fda6d8 <line:393:40, col:235> col:52 _vsprintf_s_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x28354fda390 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x28354fda408 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28354fda488 <col:169, col:182> col:182 _Format 'const char *'
| |-ParmVarDecl 0x28354fda500 <col:200, col:210> col:210 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x28354fda578 <col:219, col:227> col:227 _ArgList 'va_list':'char *'
|-FunctionDecl 0x28354fda948 <line:395:28, col:145> col:40 _scprintf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x28354fda7d0 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x28354fda848 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28354fdaba0 <line:396:28, col:147> col:40 _scprintf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x28354fdaa28 <col:94, col:107> col:107 _Format 'const char *'
| `-ParmVarDecl 0x28354fdaaa0 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28354fdae90 <line:397:28, col:159> col:40 _vscprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x28354fdac80 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x28354fdacf8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x28354fdad70 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x28354fdd1c0 <line:398:28, col:161> col:40 _vscprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x28354fdaf78 <col:95, col:108> col:108 _Format 'const char *'
| |-ParmVarDecl 0x28354fdaff0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x28354fdd0a0 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x28354fdd618 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:400:247> col:79 _snprintf_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x28354fdd368 <col:115, col:122> col:122 _DstBuf 'char *'
| |-ParmVarDecl 0x28354fdd3e0 <col:136, col:143> col:143 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28354fdd460 <col:194, col:207> col:207 _Format 'const char *'
| |-ParmVarDecl 0x28354fdd4d8 <col:225, col:235> col:235 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x28354fdd6d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28354fddad0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:401:28, col:210> col:40 _snprintf_c_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x28354fdd820 <col:78, col:85> col:85 _DstBuf 'char *'
| |-ParmVarDecl 0x28354fdd898 <col:99, col:106> col:106 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28354fdd918 <col:157, col:170> col:170 _Format 'const char *'
| `-ParmVarDecl 0x28354fdd990 <col:188, col:198> col:198 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28354fde0a0 <line:402:40, col:245> col:52 _snprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x28354fddbc0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x28354fddc38 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28354fddcb0 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28354fddd30 <col:192, col:205> col:205 _Format 'const char *'
| `-ParmVarDecl 0x28354fddda8 <col:223, col:233> col:233 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28354fde5e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:403:262> col:80 _vsnprintf_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x28354fde298 <col:117, col:124> col:124 _DstBuf 'char *'
| |-ParmVarDecl 0x28354fde310 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28354fde390 <col:196, col:209> col:209 _Format 'const char *'
| |-ParmVarDecl 0x28354fde408 <col:227, col:237> col:237 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x28354fde480 <col:246, col:254> col:254 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x28354fde6a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28354fdeb28 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:404:28, col:176> col:40 _vsnprintf_c_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x28354fde7f8 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x28354fde870 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28354fde8f0 <col:118, col:129> col:130 'const char *'
| |-ParmVarDecl 0x28354fde968 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x28354fde9e0 <col:160, col:168> col:168 _ArgList 'va_list':'char *'
|-FunctionDecl 0x28354fdf110 <line:405:28, col:245> col:40 _vsnprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x28354fdec20 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x28354fdec98 <col:101, col:108> col:108 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28354fded10 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28354fded90 <col:181, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x28354fdee08 <col:210, col:220> col:220 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x28354fdee80 <col:229, col:237> col:237 _ArgList 'va_list':'char *'
|-FunctionDecl 0x28354fdf4d0 <line:415:24, col:128> col:39 _wfsopen 'FILE *(const wchar_t *, const wchar_t *, int) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, int)'
| |-ParmVarDecl 0x28354fdf208 <col:55, col:71> col:71 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x28354fdf280 <col:89, col:105> col:105 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x28354fdf300 <col:117, col:121> col:121 _ShFlag 'int'
|-FunctionDecl 0x28354fdf740 <line:417:28, col:70> col:43 fgetwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x28354fdf5d0 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x28354fdf958 <line:418:28, col:58> col:43 _fgetwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x28354fdfc38 <line:419:28, col:88> col:43 fputwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x28354fdfa20 <col:55, col:63> col:63 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x28354fdfa98 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x28354fdfe80 <line:420:28, col:70> col:43 _fputwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x28354fdfd10 <col:59, col:67> col:67 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x28354fd8040 <line:421:24, col:65> col:39 getwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x28354fdff50 <col:53, col:60> col:60 _File 'FILE *'
|-FunctionDecl 0x28354fd81c8 <line:422:24, col:52> col:39 getwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x28354fd8400 <line:423:28, col:87> col:43 putwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x28354fd8290 <col:54, col:62> col:62 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x28354fd8308 <col:75, col:82> col:82 _File 'FILE *'
|-FunctionDecl 0x28354fd85b0 <line:424:28, col:68> col:43 putwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x28354fd84d8 <col:57, col:65> col:65 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x28354fd8858 <line:425:28, col:88> col:43 ungetwc 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x28354fd8680 <col:56, col:63> col:63 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x28354fd86f8 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x28354fd8c00 <line:427:28, col:141> col:46 fgetws 'wchar_t *(wchar_t *, int, FILE *) __attribute__((cdecl))':'wchar_t *(wchar_t *, int, FILE *)'
| |-ParmVarDecl 0x28354fd8930 <col:82, col:92> col:92 _Dst 'wchar_t *'
| |-ParmVarDecl 0x28354fd89b0 <col:103, col:107> col:107 _SizeInWords 'int'
| `-ParmVarDecl 0x28354fd8a28 <col:129, col:136> col:136 _File 'FILE *'
|-FunctionDecl 0x28354fd8f00 <line:428:28, col:96> col:40 fputws 'int (const wchar_t *, FILE *) __attribute__((cdecl))':'int (const wchar_t *, FILE *)'
| |-ParmVarDecl 0x28354fd8ce0 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x28354fd8d58 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x28354fd9208 <line:429:28, col:124> col:46 _getws_s 'wchar_t *(wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, size_t)'
| |-ParmVarDecl 0x28354fd8fd8 <col:84, col:94> col:94 _Str 'wchar_t *'
| `-ParmVarDecl 0x28354fd9060 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x28354fd9510 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:431:83 _getws 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x28354fd93a0 <col:115, col:124> col:124 _String 'wchar_t *'
| `-DeprecatedAttr 0x28354fd95b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _getws_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28354fd9878 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:432:28, col:74> col:40 _putws 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x28354fd96f8 <col:54, col:70> col:70 _Str 'const wchar_t *'
|-FunctionDecl 0x28354fd9b80 <line:434:28, col:129> col:40 fwprintf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x28354fd9948 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x28354fd99c0 <col:101, col:117> col:117 _Format 'const wchar_t *'
|-FunctionDecl 0x28354fd9dd0 <line:436:28, col:131> col:40 fwprintf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x28354fd9c58 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x28354fd9cd0 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x28354fdb070 <line:438:28, col:106> col:40 wprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x28354fd9ea8 <col:78, col:94> col:94 _Format 'const wchar_t *'
|-FunctionDecl 0x28354fdb220 <line:440:28, col:108> col:40 wprintf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x28354fdb140 <col:80, col:96> col:96 _Format 'const wchar_t *'
|-FunctionDecl 0x28354fdb3d0 <line:442:24, col:105> col:36 _scwprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x28354fdb2f0 <col:77, col:93> col:93 _Format 'const wchar_t *'
|-FunctionDecl 0x28354fdb768 <line:443:28, col:143> col:40 vfwprintf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x28354fdb4a0 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x28354fdb518 <col:102, col:118> col:118 _Format 'const wchar_t *'
| `-ParmVarDecl 0x28354fdb590 <col:127, col:135> col:135 _ArgList 'va_list':'char *'
|-FunctionDecl 0x28354fdba58 <line:444:28, col:142> col:40 vfwscanf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x28354fdb848 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x28354fdb8c0 <col:101, col:117> col:117 _Format 'const wchar_t *'
| `-ParmVarDecl 0x28354fdb938 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x28354fdbd48 <line:446:28, col:145> col:40 vfwprintf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x28354fdbb38 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x28354fdbbb0 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x28354fdbc28 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x28354fe30f0 <line:447:28, col:144> col:40 vfwscanf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x28354fdbe28 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x28354fdbea0 <col:103, col:119> col:119 _Format 'const wchar_t *'
| `-ParmVarDecl 0x28354fdbf18 <col:128, col:136> col:136 _ArgList 'va_list':'char *'
|-FunctionDecl 0x28354fe33f0 <line:449:28, col:120> col:40 vwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x28354fe31d0 <col:79, col:95> col:95 _Format 'const wchar_t *'
| `-ParmVarDecl 0x28354fe3248 <col:104, col:112> col:112 _ArgList 'va_list':'char *'
|-FunctionDecl 0x28354fe3640 <line:450:28, col:119> col:40 vwscanf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x28354fe34c8 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x28354fe3540 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x28354fe3890 <line:452:28, col:122> col:40 vwprintf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x28354fe3718 <col:81, col:97> col:97 _Format 'const wchar_t *'
| `-ParmVarDecl 0x28354fe3790 <col:106, col:114> col:114 _ArgList 'va_list':'char *'
|-FunctionDecl 0x28354fe3ae0 <line:453:28, col:121> col:40 vwscanf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x28354fe3968 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x28354fe39e0 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x28354fe3e98 <line:457:21, col:173> col:33 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x28354fe3bb8 <col:73, col:83> col:83 _Dst 'wchar_t *'
| |-ParmVarDecl 0x28354fe3c30 <col:94, col:101> col:101 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28354fe3ca8 <col:145, col:161> col:161 _Format 'const wchar_t *'
|-FunctionDecl 0x28354fe12e0 <line:461:21, col:187> col:33 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x28354fe3f78 <col:74, col:84> col:84 _Dst 'wchar_t *'
| |-ParmVarDecl 0x28354fe3ff0 <col:95, col:102> col:102 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28354fe4068 <col:146, col:162> col:162 _Format 'const wchar_t *'
| `-ParmVarDecl 0x28354fe10d0 <col:171, col:179> col:179 _ArgList 'va_list':'char *'
|-FunctionDecl 0x28354fe1698 <line:462:40, col:156> col:52 vswscanf_s 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x28354fe13c8 <col:63, col:79> col:79 _Src 'const wchar_t *'
| |-ParmVarDecl 0x28354fe1440 <col:115, col:131> col:131 _Format 'const wchar_t *'
| `-ParmVarDecl 0x28354fe14b8 <col:140, col:148> col:148 _ArgList 'va_list':'char *'
|-FunctionDecl 0x28354fe1988 <line:466:28, col:145> col:40 vswscanf 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x28354fe1778 <col:49, col:65> col:65 _srcBuf 'const wchar_t *'
| |-ParmVarDecl 0x28354fe17f0 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x28354fe1868 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x28354fe1c78 <line:468:28, col:184> col:40 _swprintf_c 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x28354fe1a68 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x28354fe1ae0 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28354fe1b58 <col:156, col:172> col:172 _Format 'const wchar_t *'
|-FunctionDecl 0x28354fe2000 <line:469:28, col:198> col:40 _vswprintf_c 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x28354fe1d58 <col:82, col:92> col:92 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x28354fe1dd0 <col:106, col:113> col:113 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28354fe1e48 <col:157, col:173> col:173 _Format 'const wchar_t *'
| `-ParmVarDecl 0x28354fe1ec0 <col:182, col:190> col:190 _ArgList 'va_list':'char *'
|-FunctionDecl 0x28354fe2490 <line:471:40, col:220> col:52 _snwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x28354fe2108 <col:94, col:104> col:104 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x28354fe2180 <col:118, col:125> col:125 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28354fe21f8 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28354fe2270 <col:192, col:208> col:208 _Format 'const wchar_t *'
|-FunctionDecl 0x28354fe2998 <line:473:40, col:234> col:52 _vsnwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x28354fe2578 <col:95, col:105> col:105 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x28354fe25f0 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28354fe2668 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28354fe26e0 <col:193, col:209> col:209 _Format 'const wchar_t *'
| `-ParmVarDecl 0x28354fe2758 <col:218, col:226> col:226 _ArgList 'va_list':'char *'
|-FunctionDecl 0x28354fe2d58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:89 _snwprintf 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x28354fe2b48 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x28354fe2bc0 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28354fe2c38 <col:254, col:271> col:271 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x28354fe2e10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28354fdc2b0 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:101 _vsnwprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x28354fe3010 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x28354fdc080 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28354fdc0f8 <col:254, col:271> col:271 _Format 'const wchar_t *'
| |-ParmVarDecl 0x28354fdc170 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x28354fdc370 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28354fdc628 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:480:28, col:132> col:40 _fwprintf_p 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x28354fdc4b0 <col:60, col:67> col:67 _File 'FILE *'
| `-ParmVarDecl 0x28354fdc528 <col:104, col:120> col:120 _Format 'const wchar_t *'
|-FunctionDecl 0x28354fdc7e0 <line:481:28, col:109> col:40 _wprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x28354fdc700 <col:81, col:97> col:97 _Format 'const wchar_t *'
|-FunctionDecl 0x28354fdcac0 <line:482:28, col:146> col:40 _vfwprintf_p 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x28354fdc8b0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x28354fdc928 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x28354fdc9a0 <col:130, col:138> col:138 _ArgList 'va_list':'char *'
|-FunctionDecl 0x28354fdcd18 <line:483:28, col:123> col:40 _vwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x28354fdcba0 <col:82, col:98> col:98 _Format 'const wchar_t *'
| `-ParmVarDecl 0x28354fdcc18 <col:107, col:115> col:115 _ArgList 'va_list':'char *'
|-FunctionDecl 0x28354fe7f60 <line:484:28, col:178> col:40 _swprintf_p 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x28354fdcdf0 <col:78, col:88> col:88 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x28354fdce68 <col:102, col:109> col:109 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28354fdcee0 <col:150, col:166> col:166 _Format 'const wchar_t *'
|-FunctionDecl 0x28354fe82e8 <line:485:28, col:192> col:40 _vswprintf_p 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x28354fe8040 <col:79, col:89> col:89 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x28354fe80b8 <col:103, col:110> col:110 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28354fe8130 <col:151, col:167> col:167 _Format 'const wchar_t *'
| `-ParmVarDecl 0x28354fe81a8 <col:176, col:184> col:184 _ArgList 'va_list':'char *'
|-FunctionDecl 0x28354fe84b0 <line:486:24, col:107> col:36 _scwprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x28354fe83d0 <col:79, col:95> col:95 _Format 'const wchar_t *'
|-FunctionDecl 0x28354fe86f8 <line:487:24, col:121> col:36 _vscwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x28354fe8580 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x28354fe85f8 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x28354fe8a00 <line:489:28, col:147> col:40 _wprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x28354fe87d0 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x28354fe8848 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28354fe8c50 <line:490:28, col:149> col:40 _wprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x28354fe8ad8 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x28354fe8b50 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28354fe8ea0 <line:491:28, col:149> col:40 _wprintf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x28354fe8d28 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x28354fe8da0 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28354fe6238 <line:492:28, col:161> col:40 _vwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x28354fe5f68 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x28354fe5fe0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x28354fe6058 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x28354fe6528 <line:493:28, col:163> col:40 _vwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x28354fe6318 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x28354fe6390 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x28354fe6408 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x28354fe6818 <line:494:28, col:163> col:40 _vwprintf_s_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x28354fe6608 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x28354fe6680 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x28354fe66f8 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x28354fe6bd8 <line:496:28, col:170> col:40 _fwprintf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x28354fe68f8 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x28354fe6970 <col:114, col:130> col:130 _Format 'const wchar_t *'
| `-ParmVarDecl 0x28354fe69e8 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28354fe9f80 <line:497:28, col:172> col:40 _fwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x28354fe6cb8 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x28354fe6d30 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x28354fe6da8 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28354fea270 <line:498:28, col:172> col:40 _fwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x28354fea060 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x28354fea0d8 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x28354fea150 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28354fea6c0 <line:499:28, col:184> col:40 _vfwprintf_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x28354fea350 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x28354fea3c8 <col:115, col:131> col:131 _Format 'const wchar_t *'
| |-ParmVarDecl 0x28354fea440 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x28354fea4b8 <col:168, col:176> col:176 _ArgList 'va_list':'char *'
|-FunctionDecl 0x28354feaa50 <line:500:28, col:186> col:40 _vfwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x28354fea7a8 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x28354fea820 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x28354fea898 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x28354fea910 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x28354feade0 <line:501:28, col:186> col:40 _vfwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x28354feab38 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x28354feabb0 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x28354feac28 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x28354feaca0 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x28354feb2a0 <line:503:28, col:218> col:40 _swprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x28354feaec8 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x28354feaf90 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28354feb008 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x28354feb080 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28354feb630 <line:504:28, col:218> col:40 _swprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x28354feb388 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x28354feb400 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28354feb478 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x28354feb4f0 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28354feb9c0 <line:505:40, col:228> col:52 _swprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x28354feb718 <col:91, col:101> col:101 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x28354feb790 <col:115, col:122> col:122 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28354feb808 <col:172, col:188> col:188 _Format 'const wchar_t *'
| `-ParmVarDecl 0x28354feb880 <col:206, col:216> col:216 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28354febec8 <line:506:28, col:232> col:40 used _vswprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x28354febaa8 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x28354febb20 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28354febb98 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x28354febc10 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x28354febc88 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x28354fec308 <line:507:28, col:232> col:40 _vswprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x28354febfc8 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x28354fec040 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28354fec0b8 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x28354fec130 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x28354fec1a8 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x28354fec738 <line:508:40, col:242> col:52 _vswprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x28354fec3f8 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x28354fec470 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28354fec4e8 <col:173, col:189> col:189 _Format 'const wchar_t *'
| |-ParmVarDecl 0x28354fec560 <col:207, col:217> col:217 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x28354fec5d8 <col:226, col:234> col:234 _ArgList 'va_list':'char *'
|-FunctionDecl 0x28354fec9a0 <line:510:24, col:145> col:36 _scwprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x28354fec828 <col:89, col:105> col:105 _Format 'const wchar_t *'
| `-ParmVarDecl 0x28354fec8a0 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28354fecbf0 <line:511:24, col:147> col:36 _scwprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x28354feca78 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x28354fecaf0 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28354feced8 <line:512:24, col:161> col:36 _vscwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x28354feccc8 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x28354fecd40 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x28354fecdb8 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x28354fed348 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:514:255> col:80 _snwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x28354fed0a0 <col:117, col:127> col:127 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x28354fed118 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28354fed190 <col:199, col:215> col:215 _Format 'const wchar_t *'
| |-ParmVarDecl 0x28354fed208 <col:233, col:243> col:243 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x28354fed408 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28354fed978 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:515:40, col:252> col:52 _snwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x28354fed550 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x28354fed5c8 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28354fed640 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28354fed6b8 <col:196, col:212> col:212 _Format 'const wchar_t *'
| `-ParmVarDecl 0x28354fed730 <col:230, col:240> col:240 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28354fedeb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:516:270> col:81 _vsnwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x28354fedb70 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x28354fedbe8 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28354fedc60 <col:201, col:217> col:217 _Format 'const wchar_t *'
| |-ParmVarDecl 0x28354fedcd8 <col:235, col:245> col:245 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x28354fedd50 <col:254, col:262> col:262 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x28354fedfc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28354fee5d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:517:40, col:266> col:52 _vsnwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x28354fee108 <col:93, col:103> col:103 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x28354fee180 <col:117, col:124> col:124 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28354fee1f8 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28354fee270 <col:197, col:213> col:213 _Format 'const wchar_t *'
| |-ParmVarDecl 0x28354fee2e8 <col:231, col:241> col:241 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x28354fee360 <col:250, col:258> col:258 _ArgList 'va_list':'char *'
|-FunctionDecl 0x28354feead0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:110 _swprintf 'int (wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x28354fee898 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x28354fee910 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-DeprecatedAttr 0x28354feeb80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x28354feec98 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x28354fe71b8 <col:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:134 _vswprintf 'int (wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x28354feef50 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x28354fe6f60 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-ParmVarDecl 0x28354fe6fd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x28354fe7270 <line:275:47, col:63> "This function or variable may be unsafe. Consider using vswprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x28354fe7388 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x28354fe7928 <col:36, line:1961:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:110 __swprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x28354fe7648 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x28354fe76c0 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x28354fe7738 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-DeprecatedAttr 0x28354fe79e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __swprintf_l_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x28354fe7b00 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x28354ff01f0 <col:36, line:1962:166> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:124 __vswprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x28354fe7dc0 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x28354fe7e38 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x28354fe7eb0 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x28354feffe0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1962:153, col:161> col:161 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x28354ff02b0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vswprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x28354ff03d0 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x28354ff06d8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:36:1, line:44:1> line:36:21 swprintf 'int (wchar_t *, size_t, const wchar_t *, ...)' static inline
| |-ParmVarDecl 0x28354ff04f8 <col:53, col:63> col:63 used _String 'wchar_t *'
| |-ParmVarDecl 0x28354ff0570 <col:72, col:79> col:79 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28354ff05e8 <col:117, col:133> col:133 used _Format 'const wchar_t *'
| `-CompoundStmt 0x28354ff32b0 <line:37:1, line:44:1>
|   |-DeclStmt 0x28354ff0820 <line:38:5, col:21>
|   | `-VarDecl 0x28354ff07b8 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x28354ff08b8 <line:39:5, col:13>
|   | `-VarDecl 0x28354ff0850 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x28354ff0c10 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x28354ff0bf8 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x28354ff0b10 <col:34> '<builtin fn type>' Function 0x28354ff09a8 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x28354ff0b48 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:40:19> 'va_list':'char *' lvalue Var 0x28354ff07b8 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x28354ff0b80 <col:29> 'const wchar_t *' lvalue ParmVar 0x28354ff05e8 '_Format' 'const wchar_t *'
|   |-BinaryOperator 0x28354ff0ed0 <line:41:5, col:67> 'int' '='
|   | |-DeclRefExpr 0x28354ff0c40 <col:5> 'int' lvalue Var 0x28354ff0850 '_Ret' 'int'
|   | `-CallExpr 0x28354ff0e10 <col:12, col:67> 'int'
|   |   |-ImplicitCastExpr 0x28354ff0df8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x28354ff0c78 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x28354febec8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x28354ff0e58 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x28354ff0c98 <col:27> 'wchar_t *' lvalue ParmVar 0x28354ff04f8 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x28354ff0e70 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x28354ff0cb8 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x28354ff0570 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x28354ff0e88 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x28354ff0cd8 <col:44> 'const wchar_t *' lvalue ParmVar 0x28354ff05e8 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x28354ff0ea0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|   |   | `-ParenExpr 0x28354ff0d60 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x28354ff0d38 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x28354ff0cf8 <col:26> 'int' 0
|   |   `-ImplicitCastExpr 0x28354ff0eb8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:41:59> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x28354ff0d80 <col:59> 'va_list':'char *' lvalue Var 0x28354ff07b8 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x28354ff3240 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x28354ff3228 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x28354ff3178 <col:34> '<builtin fn type>' Function 0x28354ff3010 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x28354ff31b0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:42:17> 'va_list':'char *' lvalue Var 0x28354ff07b8 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x28354ff32a0 <line:43:5, col:12>
|     `-ImplicitCastExpr 0x28354ff3288 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x28354ff3268 <col:12> 'int' lvalue Var 0x28354ff0850 '_Ret' 'int'
|-FunctionDecl 0x28354ff09a8 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34> col:34 implicit used __builtin_va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x28354ff0a48 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x28354ff0ab8 <col:34> Implicit
|-FunctionDecl 0x28354ff3010 <line:27:34> col:34 implicit used __builtin_va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x28354ff30b0 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x28354ff3120 <col:34> Implicit
|-FunctionDecl 0x28354ff35a8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:49:1, line:52:1> line:49:31 vswprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)' static inline
| |-ParmVarDecl 0x28354ff3300 <col:64, col:74> col:74 used _String 'wchar_t *'
| |-ParmVarDecl 0x28354ff3378 <col:83, col:90> col:90 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28354ff33f0 <col:138, col:154> col:154 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x28354ff3468 <col:163, col:171> col:171 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x28354ff3890 <line:50:1, line:52:1>
|   `-ReturnStmt 0x28354ff3880 <line:51:5, col:62>
|     `-CallExpr 0x28354ff37c0 <col:12, col:62> 'int'
|       |-ImplicitCastExpr 0x28354ff37a8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x28354ff3680 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x28354febec8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x28354ff3808 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x28354ff36a0 <col:27> 'wchar_t *' lvalue ParmVar 0x28354ff3300 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x28354ff3820 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x28354ff36c0 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x28354ff3378 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x28354ff3838 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x28354ff36e0 <col:44> 'const wchar_t *' lvalue ParmVar 0x28354ff33f0 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x28354ff3850 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|       | `-ParenExpr 0x28354ff3768 <col:17, col:27> 'void *'
|       |   `-CStyleCastExpr 0x28354ff3740 <col:18, col:26> 'void *' <NullToPointer>
|       |     `-IntegerLiteral 0x28354ff3700 <col:26> 'int' 0
|       `-ImplicitCastExpr 0x28354ff3868 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:51:59> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x28354ff3788 <col:59> 'va_list':'char *' lvalue ParmVar 0x28354ff3468 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x28354ff3b30 <line:60:1, line:68:1> line:60:21 _swprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)' static inline
| |-ParmVarDecl 0x28354ff38b8 <col:56, col:66> col:66 used _String 'wchar_t *'
| |-ParmVarDecl 0x28354ff3930 <col:75, col:82> col:82 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28354ff39a8 <col:130, col:146> col:146 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x28354ff3a20 <col:155, col:165> col:165 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| `-CompoundStmt 0x28354ff40c8 <line:61:1, line:68:1>
|   |-DeclStmt 0x28354ff3c80 <line:62:5, col:21>
|   | `-VarDecl 0x28354ff3c18 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x28354ff3d18 <line:63:5, col:13>
|   | `-VarDecl 0x28354ff3cb0 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x28354ff3dc0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x28354ff3da8 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x28354ff3d30 <col:34> '<builtin fn type>' Function 0x28354ff09a8 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x28354ff3d50 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:64:19> 'va_list':'char *' lvalue Var 0x28354ff3c18 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x28354ff3d88 <col:29> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x28354ff3a20 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |-BinaryOperator 0x28354ff3fc0 <line:65:5, col:72> 'int' '='
|   | |-DeclRefExpr 0x28354ff3df0 <col:5> 'int' lvalue Var 0x28354ff3cb0 '_Ret' 'int'
|   | `-CallExpr 0x28354ff3f00 <col:12, col:72> 'int'
|   |   |-ImplicitCastExpr 0x28354ff3ee8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x28354ff3e28 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x28354febec8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x28354ff3f48 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x28354ff3e48 <col:27> 'wchar_t *' lvalue ParmVar 0x28354ff38b8 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x28354ff3f60 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x28354ff3e68 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x28354ff3930 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x28354ff3f78 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x28354ff3e88 <col:44> 'const wchar_t *' lvalue ParmVar 0x28354ff39a8 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x28354ff3f90 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x28354ff3ea8 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x28354ff3a20 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |   `-ImplicitCastExpr 0x28354ff3fa8 <col:64> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x28354ff3ec8 <col:64> 'va_list':'char *' lvalue Var 0x28354ff3c18 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x28354ff4058 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x28354ff4040 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x28354ff3fe0 <col:34> '<builtin fn type>' Function 0x28354ff3010 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x28354ff4020 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:66:17> 'va_list':'char *' lvalue Var 0x28354ff3c18 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x28354ff40b8 <line:67:5, col:12>
|     `-ImplicitCastExpr 0x28354ff40a0 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x28354ff4080 <col:12> 'int' lvalue Var 0x28354ff3cb0 '_Ret' 'int'
|-FunctionDecl 0x28354ff4458 <line:73:1, line:76:1> line:73:31 _vswprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' static inline
| |-ParmVarDecl 0x28354ff4118 <col:67, col:77> col:77 used _String 'wchar_t *'
| |-ParmVarDecl 0x28354ff4190 <col:86, col:93> col:93 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28354ff4208 <col:141, col:157> col:157 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x28354ff4280 <col:166, col:176> col:176 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x28354ff42f8 <col:187, col:195> col:195 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x28354ff46e0 <line:74:1, line:76:1>
|   `-ReturnStmt 0x28354ff46d0 <line:75:5, col:67>
|     `-CallExpr 0x28354ff4610 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x28354ff45f8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x28354ff4538 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x28354febec8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x28354ff4658 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x28354ff4558 <col:27> 'wchar_t *' lvalue ParmVar 0x28354ff4118 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x28354ff4670 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x28354ff4578 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x28354ff4190 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x28354ff4688 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x28354ff4598 <col:44> 'const wchar_t *' lvalue ParmVar 0x28354ff4208 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x28354ff46a0 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|       | `-DeclRefExpr 0x28354ff45b8 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x28354ff4280 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|       `-ImplicitCastExpr 0x28354ff46b8 <col:64> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x28354ff45d8 <col:64> 'va_list':'char *' lvalue ParmVar 0x28354ff42f8 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x28354ff4928 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:555:24, col:129> col:42 _wtempnam 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x28354ff4708 <col:63, col:79> col:79 _Directory 'const wchar_t *'
| `-ParmVarDecl 0x28354ff4780 <col:102, col:118> col:118 _FilePrefix 'const wchar_t *'
|-FunctionDecl 0x28354ff4b78 <line:561:24, col:119> col:36 _vscwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x28354ff4a00 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x28354ff4a78 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x28354ff4e60 <line:562:24, col:159> col:36 _vscwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x28354ff4c50 <col:90, col:106> col:106 _Format 'const wchar_t *'
| |-ParmVarDecl 0x28354ff4cc8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x28354ff4d40 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x28354ff61b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:563:158> col:71 fwscanf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x28354ff6040 <col:87, col:94> col:94 _File 'FILE *'
| |-ParmVarDecl 0x28354ff60b8 <col:130, col:146> col:146 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x28354ff6268 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28354ff6678 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:564:206> col:78 _fwscanf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x28354ff6468 <col:97, col:104> col:104 _File 'FILE *'
| |-ParmVarDecl 0x28354ff64e0 <col:150, col:166> col:166 _Format 'const wchar_t *'
| |-ParmVarDecl 0x28354ff6558 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x28354ff6730 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28354ff69e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:568:28, col:131> col:40 fwscanf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x28354ff6870 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x28354ff68e8 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x28354ff6cd0 <line:570:28, col:172> col:40 _fwscanf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x28354ff6ac0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x28354ff6b38 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x28354ff6bb0 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28354ff2070 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:571:165> col:71 swscanf 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x28354ff6e70 <col:86, col:102> col:102 _Src 'const wchar_t *'
| |-ParmVarDecl 0x28354ff6ee8 <col:137, col:153> col:153 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x28354ff2120 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using swscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28354ff25f8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:572:213> col:78 _swscanf_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x28354ff2320 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x28354ff2398 <col:157, col:173> col:173 _Format 'const wchar_t *'
| |-ParmVarDecl 0x28354ff2410 <col:191, col:201> col:201 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x28354ff26b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28354ff2968 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:574:40, col:149> col:52 swscanf_s 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x28354ff27f0 <col:69, col:84> col:84 _Src 'const wchar_t *'
| `-ParmVarDecl 0x28354ff2868 <col:121, col:137> col:137 _Format 'const wchar_t *'
|-FunctionDecl 0x28354ff2c50 <line:576:40, col:191> col:52 _swscanf_s_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x28354ff2a40 <col:72, col:88> col:88 _Src 'const wchar_t *'
| |-ParmVarDecl 0x28354ff2ab8 <col:135, col:151> col:151 _Format 'const wchar_t *'
| `-ParmVarDecl 0x28354ff2b30 <col:169, col:179> col:179 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28354ff10d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:577:219> col:77 _snwscanf 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x28354ff2df0 <col:117, col:133> col:133 _Src 'const wchar_t *'
| |-ParmVarDecl 0x28354ff2e68 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28354ff2ee0 <col:191, col:207> col:207 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x28354ff1190 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28354ff1710 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:578:261> col:79 _snwscanf_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x28354ff1390 <col:121, col:137> col:137 _Src 'const wchar_t *'
| |-ParmVarDecl 0x28354ff1408 <col:148, col:155> col:155 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28354ff1480 <col:205, col:221> col:221 _Format 'const wchar_t *'
| |-ParmVarDecl 0x28354ff14f8 <col:239, col:249> col:249 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x28354ff17d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28354ff1b20 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:579:40, col:198> col:52 _snwscanf_s 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x28354ff1910 <col:94, col:110> col:110 _Src 'const wchar_t *'
| |-ParmVarDecl 0x28354ff1988 <col:121, col:128> col:128 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28354ff1a00 <col:170, col:186> col:186 _Format 'const wchar_t *'
|-FunctionDecl 0x28354ff1ea8 <line:580:40, col:238> col:52 _snwscanf_s_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x28354ff1c00 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x28354ff1c78 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28354ff1cf0 <col:182, col:198> col:198 _Format 'const wchar_t *'
| `-ParmVarDecl 0x28354ff1d68 <col:216, col:226> col:226 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28354fef180 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:581:134> col:70 wscanf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| |-ParmVarDecl 0x28354fef0a0 <col:106, col:122> col:122 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x28354fef228 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28354fef5a0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:582:182> col:77 _wscanf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x28354fef428 <col:126, col:142> col:142 _Format 'const wchar_t *'
| |-ParmVarDecl 0x28354fef4a0 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x28354fef650 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28354fef870 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:584:40, col:120> col:52 wscanf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x28354fef790 <col:92, col:108> col:108 _Format 'const wchar_t *'
|-FunctionDecl 0x28354fefab8 <line:586:40, col:161> col:52 _wscanf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x28354fef940 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x28354fef9b8 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28354fefdb8 <line:589:24, col:99> col:39 _wfdopen 'FILE *(int, const wchar_t *) __attribute__((cdecl))':'FILE *(int, const wchar_t *)'
| |-ParmVarDecl 0x28354fefb98 <col:53, col:57> col:57 _FileHandle 'int'
| `-ParmVarDecl 0x28354fefc10 <col:78, col:94> col:94 _Mode 'const wchar_t *'
|-FunctionDecl 0x28354ffa228 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:590:144> col:74 _wfopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x28354feff50 <col:89, col:105> col:105 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x28354ffa080 <col:123, col:139> col:139 _Mode 'const wchar_t *'
| `-DeprecatedAttr 0x28354ffa2d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28354ffa6e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:591:28, col:157> col:44 _wfopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x28354ffa420 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x28354ffa498 <col:102, col:118> col:118 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x28354ffa510 <col:136, col:152> col:152 _Mode 'const wchar_t *'
|-FunctionDecl 0x28354ffab40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:592:173> col:76 _wfreopen 'FILE *(const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x28354ffa880 <col:93, col:109> col:109 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x28354ffa8f8 <col:127, col:143> col:143 _Mode 'const wchar_t *'
| |-ParmVarDecl 0x28354ffa970 <col:158, col:165> col:165 _OldFile 'FILE *'
| `-DeprecatedAttr 0x28354ffabf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfreopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28354ff7098 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:593:28, col:184> col:44 _wfreopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x28354ffad40 <col:82, col:90> col:90 _File 'FILE **'
| |-ParmVarDecl 0x28354ffadb8 <col:104, col:120> col:120 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x28354ffae30 <col:138, col:154> col:154 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x28354ffaea8 <col:169, col:176> col:176 _OldFile 'FILE *'
|-FunctionDecl 0x28354ff72f0 <line:597:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x28354ff7180 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x28354ff7530 <line:600:24, col:107> col:39 _wpopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x28354ff73c0 <col:54, col:69> col:69 _Command 'const wchar_t *'
| `-ParmVarDecl 0x28354ff7438 <col:86, col:102> col:102 _Mode 'const wchar_t *'
|-FunctionDecl 0x28354ff76e8 <line:602:9, col:62> col:21 _wremove 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x28354ff7608 <col:37, col:53> col:53 _Filename 'const wchar_t *'
|-FunctionDecl 0x28354ff79d8 <line:603:28, col:127> col:44 _wtmpnam_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x28354ff77b8 <col:84, col:94> col:94 _DstBuf 'wchar_t *'
| `-ParmVarDecl 0x28354ff7830 <col:108, col:115> col:115 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x28354ff7c48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:605:82 _wtmpnam 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x28354ff7b70 <col:118, col:127> col:127 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x28354ff7cf0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wtmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28354ff7f08 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:607:28, col:78> col:43 _fgetwc_nolock 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x28354ff7e30 <col:66, col:73> col:73 _File 'FILE *'
|-FunctionDecl 0x28354ffb188 <line:608:28, col:96> col:43 _fputwc_nolock 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x28354ff7fd8 <col:63, col:71> col:71 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x28354ffb090 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x28354ffb3d0 <line:609:28, col:96> col:43 _ungetwc_nolock 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x28354ffb260 <col:64, col:71> col:71 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x28354ffb2d8 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x28354ffb580 <line:670:9, col:53> col:22 _lock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x28354ffb4a8 <col:41, col:48> col:48 _File 'FILE *'
|-FunctionDecl 0x28354ffb728 <line:671:9, col:55> col:22 _unlock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x28354ffb650 <col:43, col:50> col:50 _File 'FILE *'
|-FunctionDecl 0x28354ffb8d8 <line:673:28, col:75> col:40 _fclose_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x28354ffb7f8 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x28354ffba88 <line:674:28, col:79> col:40 _fflush_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x28354ffb9a8 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x28354ffbe00 <line:675:28, col:179> col:43 _fread_nolock 'size_t (void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x28354ffbb60 <col:97, col:104> col:104 _DstBuf 'void *'
| |-ParmVarDecl 0x28354ffbbd8 <col:118, col:125> col:125 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28354ffbc50 <col:144, col:151> col:151 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28354ffbcc8 <col:167, col:174> col:174 _File 'FILE *'
|-FunctionDecl 0x28354ff9240 <line:676:28, col:203> col:43 _fread_nolock_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x28354ffbef0 <col:99, col:106> col:106 _DstBuf 'void *'
| |-ParmVarDecl 0x28354ffbf68 <col:120, col:127> col:127 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28354ffbfe0 <col:142, col:149> col:149 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28354ff9070 <col:168, col:175> col:175 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28354ff90e8 <col:191, col:198> col:198 _File 'FILE *'
|-FunctionDecl 0x28354ff9550 <line:677:28, col:111> col:40 _fseek_nolock 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x28354ff9330 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x28354ff93b0 <col:81, col:86> col:86 _Offset 'long'
| `-ParmVarDecl 0x28354ff9430 <col:100, col:104> col:104 _Origin 'int'
|-FunctionDecl 0x28354ff9710 <line:678:24, col:71> col:37 _ftell_nolock 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x28354ff9630 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x28354ff9a00 <line:679:28, col:117> col:40 _fseeki64_nolock 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x28354ff97e0 <col:65, col:72> col:72 _File 'FILE *'
| |-ParmVarDecl 0x28354ff9860 <col:84, col:92> col:92 _Offset 'long long'
| `-ParmVarDecl 0x28354ff98e0 <col:106, col:110> col:110 _Origin 'int'
|-FunctionDecl 0x28354ff9bc0 <line:680:24, col:77> col:40 _ftelli64_nolock 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x28354ff9ae0 <col:65, col:72> col:72 _File 'FILE *'
|-FunctionDecl 0x28354ff9f38 <line:681:28, col:170> col:43 _fwrite_nolock 'size_t (const void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (const void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x28354ff9c98 <col:89, col:102> col:102 _DstBuf 'const void *'
| |-ParmVarDecl 0x28354ff9d10 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28354ff9d88 <col:135, col:142> col:142 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28354ff9e00 <col:158, col:165> col:165 _File 'FILE *'
|-FunctionDecl 0x28354ff81d8 <line:682:28, col:89> col:40 _ungetc_nolock 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x28354ff8060 <col:60, col:64> col:64 _Ch 'int'
| `-ParmVarDecl 0x28354ff80d8 <col:77, col:84> col:84 _File 'FILE *'
|-FunctionDecl 0x28354ff8510 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:709:136> col:57 tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x28354ff8390 <col:76, col:89> col:89 _Directory 'const char *'
| |-ParmVarDecl 0x28354ff8410 <col:112, col:125> col:125 _FilePrefix 'const char *'
| `-DeprecatedAttr 0x28354ff85c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tempnam. See online help for details." ""
|-FunctionDecl 0x28354ff8878 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:715:89> col:75 fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x28354ff8918 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcloseall. See online help for details." ""
|-FunctionDecl 0x28354ff8c58 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:716:127> col:71 fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x28354ff8ae0 <col:83, col:87> col:87 _FileHandle 'int'
| |-ParmVarDecl 0x28354ff8b60 <col:107, col:120> col:120 _Format 'const char *'
| `-DeprecatedAttr 0x28354ff8d08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fdopen. See online help for details." ""
|-FunctionDecl 0x283550000e0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:717:87> col:74 fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x28355000180 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fgetchar. See online help for details." ""
|-FunctionDecl 0x28355000420 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:718:92> col:68 fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x28355000340 <col:80, col:87> col:87 _File 'FILE *'
| `-DeprecatedAttr 0x283550004c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fileno. See online help for details." ""
|-FunctionDecl 0x28355000748 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:719:87> col:74 flushall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x283550007e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _flushall. See online help for details." ""
|-FunctionDecl 0x28355000a90 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:720:95> col:74 fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| |-ParmVarDecl 0x283550009b0 <col:88, col:92> col:92 _Ch 'int'
| `-DeprecatedAttr 0x28355000b38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fputchar. See online help for details." ""
|-FunctionDecl 0x28355000e18 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:721:91> col:66 getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x28355000d38 <col:79, col:86> col:86 _File 'FILE *'
| `-DeprecatedAttr 0x28355000ec0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _getw. See online help for details." ""
|-FunctionDecl 0x28355003288 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:722:109> col:70 putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x28355003110 <col:80, col:84> col:84 _Ch 'int'
| |-ParmVarDecl 0x28355003188 <col:97, col:104> col:104 _File 'FILE *'
| `-DeprecatedAttr 0x28355003338 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putw. See online help for details." ""
|-FunctionDecl 0x283550035f8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:723:77> col:67 rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x28355003698 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _rmtmp. See online help for details." ""
|-FunctionDecl 0x283550038d0 <D:\Microsoft Visual Studio 12.0\VC\include\errno.h:31:9, col:41> col:30 _errno 'int *(void) __attribute__((cdecl))':'int *(void)' extern
|-FunctionDecl 0x28355003ae0 <line:34:1, col:43> col:17 _set_errno 'errno_t (int) __attribute__((cdecl))':'errno_t (int)'
| `-ParmVarDecl 0x283550039a0 <col:33, col:37> col:37 _Value 'int'
|-FunctionDecl 0x28355003d30 <line:35:1, col:46> col:17 _get_errno 'errno_t (int *) __attribute__((cdecl))':'errno_t (int *)'
| `-ParmVarDecl 0x28355003bb8 <col:34, col:40> col:40 _Value 'int *'
|-FunctionDecl 0x28355003ff0 <.//openssl//file_jk/before\crypto\evp\bio_b64.c:17:1, col:54> col:12 invalid b64_write 'int (int *, const char *, int)' static
| |-ParmVarDecl 0x28355003e08 <col:22, col:27> col:27 invalid h 'int *'
| |-ParmVarDecl 0x28355003e88 <col:30, col:42> col:42 buf 'const char *'
| `-ParmVarDecl 0x28355003f08 <col:47, col:51> col:51 num 'int'
|-FunctionDecl 0x28355011240 <line:18:1, col:48> col:12 invalid b64_read 'int (int *, char *, int)' static
| |-ParmVarDecl 0x28355011050 <col:21, col:26> col:26 invalid h 'int *'
| |-ParmVarDecl 0x283550110d0 <col:29, col:35> col:35 buf 'char *'
| `-ParmVarDecl 0x28355011150 <col:40, col:44> col:44 size 'int'
|-FunctionDecl 0x28355011470 <line:19:1, col:44> col:12 invalid b64_puts 'int (int *, const char *)' static
| |-ParmVarDecl 0x28355011310 <col:21, col:26> col:26 invalid h 'int *'
| `-ParmVarDecl 0x28355011390 <col:29, col:41> col:41 str 'const char *'
|-FunctionDecl 0x283550117b0 <line:23:1, col:60> col:13 invalid b64_ctrl 'long (int *, int, long, void *)' static
| |-ParmVarDecl 0x28355011538 <col:22, col:27> col:27 invalid h 'int *'
| |-ParmVarDecl 0x283550115b8 <col:30, col:34> col:34 cmd 'int'
| |-ParmVarDecl 0x28355011638 <col:39, col:44> col:44 arg1 'long'
| `-ParmVarDecl 0x283550116b8 <col:50, col:56> col:56 arg2 'void *'
|-FunctionDecl 0x28355011920 <line:24:1, col:26> col:12 invalid b64_new 'int (int *)' static
| `-ParmVarDecl 0x28355011888 <col:20, col:25> col:25 invalid h 'int *'
|-FunctionDecl 0x28355011a78 <line:25:1, col:30> col:12 invalid b64_free 'int (int *)' static
| `-ParmVarDecl 0x283550119e0 <col:21, col:26> col:26 invalid data 'int *'
|-FunctionDecl 0x28355011d20 <line:26:1, col:63> col:13 invalid b64_callback_ctrl 'long (int *, int, int *)' static
| |-ParmVarDecl 0x28355011b38 <col:31, col:36> col:36 invalid h 'int *'
| |-ParmVarDecl 0x28355011bb8 <col:39, col:43> col:43 cmd 'int'
| `-ParmVarDecl 0x28355011c38 <col:48, col:61> col:61 invalid fp 'int *'
|-RecordDecl 0x28355011dd8 <line:33:9, line:47:1> line:33:16 invalid struct b64_struct definition
| |-FieldDecl 0x28355011ea8 <line:37:5, col:9> col:9 referenced buf_len 'int'
| |-FieldDecl 0x28355011f18 <line:38:5, col:9> col:9 referenced buf_off 'int'
| |-FieldDecl 0x28355011f88 <line:39:5, col:9> col:9 referenced tmp_len 'int'
| |-FieldDecl 0x28355011ff8 <line:40:5, col:9> col:9 referenced tmp_nl 'int'
| |-FieldDecl 0x28355013088 <line:41:5, col:9> col:9 referenced encode 'int'
| |-FieldDecl 0x283550130f8 <line:42:5, col:9> col:9 referenced start 'int'
| |-FieldDecl 0x28355013168 <line:43:5, col:9> col:9 referenced cont 'int'
| |-FieldDecl 0x283550131d8 <line:44:5, col:21> col:21 invalid base64 'int *'
| |-FieldDecl 0x283550134a8 <line:45:5, col:52> col:10 invalid buf 'char [EVP_ENCODE_LENGTH(1024) + 10]'
| `-FieldDecl 0x28355013598 <line:46:5, col:28> col:10 referenced tmp 'char [1024]'
|-FunctionDecl 0x28355013280 <<invalid sloc>> line:45:14 implicit used EVP_ENCODE_LENGTH 'int ()'
|-TypedefDecl 0x28355013648 <line:33:1, line:47:3> col:3 referenced BIO_B64_CTX 'struct b64_struct':'struct b64_struct'
| `-ElaboratedType 0x283550135f0 'struct b64_struct' sugar
|   `-RecordType 0x28355011e70 'struct b64_struct'
|     `-Record 0x28355011dd8 'b64_struct'
|-VarDecl 0x283550136d0 <line:49:1, col:25> col:25 invalid methods_b64 'const int' static
|-FunctionDecl 0x283550138f0 <line:63:1, line:66:1> line:63:19 invalid BIO_f_base64 'const int *(void)'
| `-CompoundStmt 0x283550139a8 <line:64:1, line:66:1>
|-FunctionDecl 0x28355013a68 <line:68:1, line:88:1> line:68:12 invalid b64_new 'int (int *)' static
| |-ParmVarDecl 0x283550139d0 <col:20, col:25> col:25 invalid bi 'int *'
| `-CompoundStmt 0x28355017870 <line:69:1, line:88:1>
|   |-DeclStmt 0x28355013c20 <line:70:5, col:21>
|   | `-VarDecl 0x28355013bb8 <col:5, col:18> col:18 used ctx 'BIO_B64_CTX *'
|   |-BinaryOperator 0x28355013e68 <line:72:5, col:38> 'BIO_B64_CTX *' '='
|   | |-DeclRefExpr 0x28355013c38 <col:5> 'BIO_B64_CTX *' lvalue Var 0x28355013bb8 'ctx' 'BIO_B64_CTX *'
|   | `-ImplicitCastExpr 0x28355013e50 <col:11, col:38> 'BIO_B64_CTX *' <IntegralToPointer>
|   |   `-CallExpr 0x28355013e28 <col:11, col:38> 'int'
|   |     |-ImplicitCastExpr 0x28355013e10 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x28355013d60 <col:11> 'int ()' Function 0x28355013c98 'OPENSSL_zalloc' 'int ()'
|   |     `-UnaryExprOrTypeTraitExpr 0x28355013df0 <col:26, col:37> 'unsigned long long' sizeof
|   |       `-ParenExpr 0x28355013dd0 <col:32, col:37> 'BIO_B64_CTX':'struct b64_struct' lvalue
|   |         `-UnaryOperator 0x28355013db8 <col:33, col:34> 'BIO_B64_CTX':'struct b64_struct' lvalue prefix '*' cannot overflow
|   |           `-ImplicitCastExpr 0x28355013da0 <col:34> 'BIO_B64_CTX *' <LValueToRValue>
|   |             `-DeclRefExpr 0x28355013d80 <col:34> 'BIO_B64_CTX *' lvalue Var 0x28355013bb8 'ctx' 'BIO_B64_CTX *' non_odr_use_unevaluated
|   |-IfStmt 0x28355013fb8 <line:73:5, line:74:16>
|   | |-BinaryOperator 0x28355013f60 <line:73:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x28355013f30 <.//openssl//file_jk/before\crypto\evp\bio_b64.c:73:9> 'BIO_B64_CTX *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28355013e88 <col:9> 'BIO_B64_CTX *' lvalue Var 0x28355013bb8 'ctx' 'BIO_B64_CTX *'
|   | | `-ImplicitCastExpr 0x28355013f48 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'BIO_B64_CTX *' <BitCast>
|   | |   `-ParenExpr 0x28355013f10 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x28355013ee8 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x28355013ea8 <col:26> 'int' 0
|   | `-ReturnStmt 0x28355013fa8 <.//openssl//file_jk/before\crypto\evp\bio_b64.c:74:9, col:16>
|   |   `-IntegerLiteral 0x28355013f80 <col:16> 'int' 0
|   |-BinaryOperator 0x283550170b0 <line:76:5, col:17> 'int' '='
|   | |-MemberExpr 0x28355014008 <col:5, col:10> 'int' lvalue ->cont 0x28355013168
|   | | `-ImplicitCastExpr 0x28355013ff0 <col:5> 'BIO_B64_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x28355013fd0 <col:5> 'BIO_B64_CTX *' lvalue Var 0x28355013bb8 'ctx' 'BIO_B64_CTX *'
|   | `-IntegerLiteral 0x28355014038 <col:17> 'int' 1
|   |-BinaryOperator 0x28355017160 <line:77:5, col:18> 'int' '='
|   | |-MemberExpr 0x28355017108 <col:5, col:10> 'int' lvalue ->start 0x283550130f8
|   | | `-ImplicitCastExpr 0x283550170f0 <col:5> 'BIO_B64_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x283550170d0 <col:5> 'BIO_B64_CTX *' lvalue Var 0x28355013bb8 'ctx' 'BIO_B64_CTX *'
|   | `-IntegerLiteral 0x28355017138 <col:18> 'int' 1
|   |-IfStmt 0x283550175b8 <line:79:5, line:82:5>
|   | |-OpaqueValueExpr 0x283550175a0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x28355017580 <line:79:30, line:82:5>
|   |   |-CallExpr 0x28355017508 <line:80:9, col:25> 'int'
|   |   | |-ImplicitCastExpr 0x283550174f0 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x283550174b0 <col:9> 'int ()' Function 0x283550173e8 'OPENSSL_free' 'int ()'
|   |   | `-ImplicitCastExpr 0x28355017530 <col:22> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x283550174d0 <col:22> 'BIO_B64_CTX *' lvalue Var 0x28355013bb8 'ctx' 'BIO_B64_CTX *'
|   |   `-ReturnStmt 0x28355017570 <line:81:9, col:16>
|   |     `-IntegerLiteral 0x28355017548 <col:16> 'int' 0
|   `-ReturnStmt 0x28355017860 <line:87:5, col:12>
|     `-IntegerLiteral 0x28355017838 <col:12> 'int' 1
|-FunctionDecl 0x28355017968 <line:90:1, line:106:1> line:90:12 invalid b64_free 'int (int *)' static
| |-ParmVarDecl 0x283550178d0 <col:21, col:26> col:26 invalid a 'int *'
| `-CompoundStmt 0x283550100e0 <line:91:1, line:106:1>
|   |-DeclStmt 0x28355017aa0 <line:92:5, col:21>
|   | `-VarDecl 0x28355017a38 <col:5, col:18> col:18 used ctx 'BIO_B64_CTX *'
|   |-IfStmt 0x28355017b90 <line:93:5, line:94:16>
|   | |-OpaqueValueExpr 0x28355017b78 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x28355017b68 <col:9, col:16>
|   |   `-IntegerLiteral 0x28355017b40 <col:16> 'int' 0
|   |-IfStmt 0x28355017e20 <line:97:5, line:98:16>
|   | |-BinaryOperator 0x28355017dc8 <line:97:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x28355017d98 <.//openssl//file_jk/before\crypto\evp\bio_b64.c:97:9> 'BIO_B64_CTX *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28355017cf0 <col:9> 'BIO_B64_CTX *' lvalue Var 0x28355017a38 'ctx' 'BIO_B64_CTX *'
|   | | `-ImplicitCastExpr 0x28355017db0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'BIO_B64_CTX *' <BitCast>
|   | |   `-ParenExpr 0x28355017d78 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x28355017d50 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x28355017d10 <col:26> 'int' 0
|   | `-ReturnStmt 0x28355017e10 <.//openssl//file_jk/before\crypto\evp\bio_b64.c:98:9, col:16>
|   |   `-IntegerLiteral 0x28355017de8 <col:16> 'int' 0
|   |-CallExpr 0x28355017fd8 <line:101:5, col:21> 'int'
|   | |-ImplicitCastExpr 0x28355017fc0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28355017f80 <col:5> 'int ()' Function 0x283550173e8 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x28355018000 <col:18> 'BIO_B64_CTX *' <LValueToRValue>
|   |   `-DeclRefExpr 0x28355017fa0 <col:18> 'BIO_B64_CTX *' lvalue Var 0x28355017a38 'ctx' 'BIO_B64_CTX *'
|   `-ReturnStmt 0x283550100d0 <line:105:5, col:12>
|     `-IntegerLiteral 0x283550100a8 <col:12> 'int' 1
|-FunctionDecl 0x283550102d8 <line:108:1, line:324:1> line:108:12 invalid b64_read 'int (int *, char *, int)' static
| |-ParmVarDecl 0x28355010130 <col:21, col:26> col:26 invalid b 'int *'
| |-ParmVarDecl 0x283550101b0 <col:29, col:35> col:35 used out 'char *'
| |-ParmVarDecl 0x28355010230 <col:40, col:44> col:44 used outl 'int'
| `-CompoundStmt 0x28355023d88 <line:109:1, line:324:1>
|   |-DeclStmt 0x283550108c8 <line:110:5, col:54>
|   | |-VarDecl 0x283550103c0 <col:5, col:15> col:9 used ret 'int' cinit
|   | | `-IntegerLiteral 0x28355010428 <col:15> 'int' 0
|   | |-VarDecl 0x28355010468 <col:5, col:18> col:18 used i 'int'
|   | |-VarDecl 0x283550104e8 <col:5, col:21> col:21 used ii 'int'
|   | |-VarDecl 0x28355010568 <col:5, col:25> col:25 used j 'int'
|   | |-VarDecl 0x283550105e8 <col:5, col:28> col:28 used k 'int'
|   | |-VarDecl 0x28355010668 <col:5, col:31> col:31 used x 'int'
|   | |-VarDecl 0x283550106e8 <col:5, col:34> col:34 used n 'int'
|   | |-VarDecl 0x28355010768 <col:5, col:37> col:37 used num 'int'
|   | `-VarDecl 0x283550107e8 <col:5, col:53> col:42 used ret_code 'int' cinit
|   |   `-IntegerLiteral 0x28355010850 <col:53> 'int' 0
|   |-DeclStmt 0x28355010958 <line:111:5, col:21>
|   | `-VarDecl 0x283550108f0 <col:5, col:18> col:18 used ctx 'BIO_B64_CTX *'
|   |-DeclStmt 0x28355010ab0 <line:112:5, col:25>
|   | |-VarDecl 0x283550109b0 <col:5, col:20> col:20 used p 'unsigned char *'
|   | `-VarDecl 0x28355010a30 <col:5, col:24> col:24 used q 'unsigned char *'
|   |-IfStmt 0x28355010c30 <line:115:5, line:116:18>
|   | |-BinaryOperator 0x28355010bb8 <line:115:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x28355010b88 <.//openssl//file_jk/before\crypto\evp\bio_b64.c:115:9> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28355010ac8 <col:9> 'char *' lvalue ParmVar 0x283550101b0 'out' 'char *'
|   | | `-ImplicitCastExpr 0x28355010ba0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x28355010b68 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x28355010b40 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x28355010b00 <col:26> 'int' 0
|   | `-ReturnStmt 0x28355010c20 <.//openssl//file_jk/before\crypto\evp\bio_b64.c:116:9, col:18>
|   |   `-ParenExpr 0x28355010c00 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x28355010bd8 <col:17> 'int' 0
|   |-IfStmt 0x28355010fa0 <line:120:5, line:121:16>
|   | |-OpaqueValueExpr 0x28355010f88 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x28355010f78 <col:9, col:16>
|   |   `-IntegerLiteral 0x28355010f50 <col:16> 'int' 0
|   |-IfStmt 0x283550186a8 <line:125:5, line:131:5>
|   | |-BinaryOperator 0x28355018250 <line:125:9, line:31:25> 'int' '!='
|   | | |-ImplicitCastExpr 0x28355018238 <line:125:9, col:14> 'int' <LValueToRValue>
|   | | | `-MemberExpr 0x283550181e0 <col:9, col:14> 'int' lvalue ->encode 0x28355013088
|   | | |   `-ImplicitCastExpr 0x283550181c8 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x283550181a8 <col:9> 'BIO_B64_CTX *' lvalue Var 0x283550108f0 'ctx' 'BIO_B64_CTX *'
|   | | `-IntegerLiteral 0x28355018210 <line:31:25> 'int' 2
|   | `-CompoundStmt 0x28355018678 <line:125:36, line:131:5>
|   |   |-BinaryOperator 0x28355018300 <line:126:9, line:31:25> 'int' '='
|   |   | |-MemberExpr 0x283550182a8 <line:126:9, col:14> 'int' lvalue ->encode 0x28355013088
|   |   | | `-ImplicitCastExpr 0x28355018290 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x28355018270 <col:9> 'BIO_B64_CTX *' lvalue Var 0x283550108f0 'ctx' 'BIO_B64_CTX *'
|   |   | `-IntegerLiteral 0x283550182d8 <line:31:25> 'int' 2
|   |   |-BinaryOperator 0x283550183b0 <line:127:9, col:24> 'int' '='
|   |   | |-MemberExpr 0x28355018358 <col:9, col:14> 'int' lvalue ->buf_len 0x28355011ea8
|   |   | | `-ImplicitCastExpr 0x28355018340 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x28355018320 <col:9> 'BIO_B64_CTX *' lvalue Var 0x283550108f0 'ctx' 'BIO_B64_CTX *'
|   |   | `-IntegerLiteral 0x28355018388 <col:24> 'int' 0
|   |   |-BinaryOperator 0x28355018460 <line:128:9, col:24> 'int' '='
|   |   | |-MemberExpr 0x28355018408 <col:9, col:14> 'int' lvalue ->buf_off 0x28355011f18
|   |   | | `-ImplicitCastExpr 0x283550183f0 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x283550183d0 <col:9> 'BIO_B64_CTX *' lvalue Var 0x283550108f0 'ctx' 'BIO_B64_CTX *'
|   |   | `-IntegerLiteral 0x28355018438 <col:24> 'int' 0
|   |   `-BinaryOperator 0x28355018510 <line:129:9, col:24> 'int' '='
|   |     |-MemberExpr 0x283550184b8 <col:9, col:14> 'int' lvalue ->tmp_len 0x28355011f88
|   |     | `-ImplicitCastExpr 0x283550184a0 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x28355018480 <col:9> 'BIO_B64_CTX *' lvalue Var 0x283550108f0 'ctx' 'BIO_B64_CTX *'
|   |     `-IntegerLiteral 0x283550184e8 <col:24> 'int' 0
|   |-IfStmt 0x283550196b0 <line:134:5, line:149:5>
|   | |-BinaryOperator 0x28355018768 <line:134:9, col:24> 'int' '>'
|   | | |-ImplicitCastExpr 0x28355018750 <col:9, col:14> 'int' <LValueToRValue>
|   | | | `-MemberExpr 0x283550186f8 <col:9, col:14> 'int' lvalue ->buf_len 0x28355011ea8
|   | | |   `-ImplicitCastExpr 0x283550186e0 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x283550186c0 <col:9> 'BIO_B64_CTX *' lvalue Var 0x283550108f0 'ctx' 'BIO_B64_CTX *'
|   | | `-IntegerLiteral 0x28355018728 <col:24> 'int' 0
|   | `-CompoundStmt 0x28355019660 <col:27, line:149:5>
|   |   |-CallExpr 0x283550189d0 <line:135:9, col:52> 'int'
|   |   | |-ImplicitCastExpr 0x283550189b8 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x28355018878 <col:9> 'int ()' Function 0x283550187b0 'OPENSSL_assert' 'int ()'
|   |   | `-BinaryOperator 0x28355018998 <col:24, col:45> 'int' '>='
|   |   |   |-ImplicitCastExpr 0x28355018968 <col:24, col:29> 'int' <LValueToRValue>
|   |   |   | `-MemberExpr 0x283550188d0 <col:24, col:29> 'int' lvalue ->buf_len 0x28355011ea8
|   |   |   |   `-ImplicitCastExpr 0x283550188b8 <col:24> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x28355018898 <col:24> 'BIO_B64_CTX *' lvalue Var 0x283550108f0 'ctx' 'BIO_B64_CTX *'
|   |   |   `-ImplicitCastExpr 0x28355018980 <col:40, col:45> 'int' <LValueToRValue>
|   |   |     `-MemberExpr 0x28355018938 <col:40, col:45> 'int' lvalue ->buf_off 0x28355011f18
|   |   |       `-ImplicitCastExpr 0x28355018920 <col:40> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x28355018900 <col:40> 'BIO_B64_CTX *' lvalue Var 0x283550108f0 'ctx' 'BIO_B64_CTX *'
|   |   |-BinaryOperator 0x28355018b50 <line:136:9, col:33> 'int' '='
|   |   | |-DeclRefExpr 0x283550189f8 <col:9> 'int' lvalue Var 0x28355010468 'i' 'int'
|   |   | `-BinaryOperator 0x28355018b30 <col:13, col:33> 'int' '-'
|   |   |   |-ImplicitCastExpr 0x28355018b00 <col:13, col:18> 'int' <LValueToRValue>
|   |   |   | `-MemberExpr 0x28355018a68 <col:13, col:18> 'int' lvalue ->buf_len 0x28355011ea8
|   |   |   |   `-ImplicitCastExpr 0x28355018a50 <col:13> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x28355018a30 <col:13> 'BIO_B64_CTX *' lvalue Var 0x283550108f0 'ctx' 'BIO_B64_CTX *'
|   |   |   `-ImplicitCastExpr 0x28355018b18 <col:28, col:33> 'int' <LValueToRValue>
|   |   |     `-MemberExpr 0x28355018ad0 <col:28, col:33> 'int' lvalue ->buf_off 0x28355011f18
|   |   |       `-ImplicitCastExpr 0x28355018ab8 <col:28> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x28355018a98 <col:28> 'BIO_B64_CTX *' lvalue Var 0x283550108f0 'ctx' 'BIO_B64_CTX *'
|   |   |-IfStmt 0x28355018c90 <line:137:9, line:138:17>
|   |   | |-BinaryOperator 0x28355018bf8 <line:137:13, col:17> 'int' '>'
|   |   | | |-ImplicitCastExpr 0x28355018bc8 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x28355018b70 <col:13> 'int' lvalue Var 0x28355010468 'i' 'int'
|   |   | | `-ImplicitCastExpr 0x28355018be0 <col:17> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x28355018b90 <col:17> 'int' lvalue ParmVar 0x28355010230 'outl' 'int'
|   |   | `-BinaryOperator 0x28355018c70 <line:138:13, col:17> 'int' '='
|   |   |   |-DeclRefExpr 0x28355018c18 <col:13> 'int' lvalue Var 0x28355010468 'i' 'int'
|   |   |   `-ImplicitCastExpr 0x28355018c58 <col:17> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x28355018c38 <col:17> 'int' lvalue ParmVar 0x28355010230 'outl' 'int'
|   |   |-BinaryOperator 0x283550191a8 <line:141:9, col:15> 'int' '='
|   |   | |-DeclRefExpr 0x28355019138 <col:9> 'int' lvalue Var 0x283550103c0 'ret' 'int'
|   |   | `-ImplicitCastExpr 0x28355019190 <col:15> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x28355019170 <col:15> 'int' lvalue Var 0x28355010468 'i' 'int'
|   |   |-CompoundAssignOperator 0x28355019220 <line:142:9, col:16> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
|   |   | |-DeclRefExpr 0x283550191c8 <col:9> 'char *' lvalue ParmVar 0x283550101b0 'out' 'char *'
|   |   | `-ImplicitCastExpr 0x28355019208 <col:16> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x283550191e8 <col:16> 'int' lvalue Var 0x28355010468 'i' 'int'
|   |   |-CompoundAssignOperator 0x283550192a8 <line:143:9, col:17> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-DeclRefExpr 0x28355019250 <col:9> 'int' lvalue ParmVar 0x28355010230 'outl' 'int'
|   |   | `-ImplicitCastExpr 0x28355019290 <col:17> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x28355019270 <col:17> 'int' lvalue Var 0x28355010468 'i' 'int'
|   |   |-CompoundAssignOperator 0x28355019378 <line:144:9, col:25> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-MemberExpr 0x28355019310 <col:9, col:14> 'int' lvalue ->buf_off 0x28355011f18
|   |   | | `-ImplicitCastExpr 0x283550192f8 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x283550192d8 <col:9> 'BIO_B64_CTX *' lvalue Var 0x283550108f0 'ctx' 'BIO_B64_CTX *'
|   |   | `-ImplicitCastExpr 0x28355019360 <col:25> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x28355019340 <col:25> 'int' lvalue Var 0x28355010468 'i' 'int'
|   |   `-IfStmt 0x28355019648 <line:145:9, line:148:9>
|   |     |-BinaryOperator 0x283550194a8 <line:145:13, col:34> 'int' '=='
|   |     | |-ImplicitCastExpr 0x28355019478 <col:13, col:18> 'int' <LValueToRValue>
|   |     | | `-MemberExpr 0x283550193e0 <col:13, col:18> 'int' lvalue ->buf_len 0x28355011ea8
|   |     | |   `-ImplicitCastExpr 0x283550193c8 <col:13> 'BIO_B64_CTX *' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x283550193a8 <col:13> 'BIO_B64_CTX *' lvalue Var 0x283550108f0 'ctx' 'BIO_B64_CTX *'
|   |     | `-ImplicitCastExpr 0x28355019490 <col:29, col:34> 'int' <LValueToRValue>
|   |     |   `-MemberExpr 0x28355019448 <col:29, col:34> 'int' lvalue ->buf_off 0x28355011f18
|   |     |     `-ImplicitCastExpr 0x28355019430 <col:29> 'BIO_B64_CTX *' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x28355019410 <col:29> 'BIO_B64_CTX *' lvalue Var 0x283550108f0 'ctx' 'BIO_B64_CTX *'
|   |     `-CompoundStmt 0x28355019628 <col:43, line:148:9>
|   |       |-BinaryOperator 0x28355019558 <line:146:13, col:28> 'int' '='
|   |       | |-MemberExpr 0x28355019500 <col:13, col:18> 'int' lvalue ->buf_len 0x28355011ea8
|   |       | | `-ImplicitCastExpr 0x283550194e8 <col:13> 'BIO_B64_CTX *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x283550194c8 <col:13> 'BIO_B64_CTX *' lvalue Var 0x283550108f0 'ctx' 'BIO_B64_CTX *'
|   |       | `-IntegerLiteral 0x28355019530 <col:28> 'int' 0
|   |       `-BinaryOperator 0x28355019608 <line:147:13, col:28> 'int' '='
|   |         |-MemberExpr 0x283550195b0 <col:13, col:18> 'int' lvalue ->buf_off 0x28355011f18
|   |         | `-ImplicitCastExpr 0x28355019598 <col:13> 'BIO_B64_CTX *' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x28355019578 <col:13> 'BIO_B64_CTX *' lvalue Var 0x283550108f0 'ctx' 'BIO_B64_CTX *'
|   |         `-IntegerLiteral 0x283550195e0 <col:28> 'int' 0
|   |-BinaryOperator 0x28355019728 <line:156:5, col:16> 'int' '='
|   | |-DeclRefExpr 0x283550196c8 <col:5> 'int' lvalue Var 0x283550107e8 'ret_code' 'int'
|   | `-IntegerLiteral 0x28355019700 <col:16> 'int' 0
|   |-WhileStmt 0x28355023af0 <line:157:5, line:320:5>
|   | |-BinaryOperator 0x283550197a8 <line:157:12, col:19> 'int' '>'
|   | | |-ImplicitCastExpr 0x28355019790 <col:12> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28355019748 <col:12> 'int' lvalue ParmVar 0x28355010230 'outl' 'int'
|   | | `-IntegerLiteral 0x28355019768 <col:19> 'int' 0
|   | `-CompoundStmt 0x28355023a68 <col:22, line:320:5>
|   |   |-IfStmt 0x28355019898 <line:158:9, line:159:13>
|   |   | |-BinaryOperator 0x28355019870 <line:158:13, col:26> 'int' '<='
|   |   | | |-ImplicitCastExpr 0x28355019858 <col:13, col:18> 'int' <LValueToRValue>
|   |   | | | `-MemberExpr 0x28355019800 <col:13, col:18> 'int' lvalue ->cont 0x28355013168
|   |   | | |   `-ImplicitCastExpr 0x283550197e8 <col:13> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x283550197c8 <col:13> 'BIO_B64_CTX *' lvalue Var 0x283550108f0 'ctx' 'BIO_B64_CTX *'
|   |   | | `-IntegerLiteral 0x28355019830 <col:26> 'int' 0
|   |   | `-BreakStmt 0x28355019890 <line:159:13>
|   |   |-IfStmt 0x2835501a0b0 <line:164:9, line:180:9>
|   |   | |-BinaryOperator 0x28355019c60 <line:164:13, col:18> 'int' '<='
|   |   | | |-ImplicitCastExpr 0x28355019c48 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x28355019c00 <col:13> 'int' lvalue Var 0x28355010468 'i' 'int'
|   |   | | `-IntegerLiteral 0x28355019c20 <col:18> 'int' 0
|   |   | `-CompoundStmt 0x2835501a090 <col:21, line:180:9>
|   |   |   |-BinaryOperator 0x28355019cd8 <line:165:13, col:24> 'int' '='
|   |   |   | |-DeclRefExpr 0x28355019c80 <col:13> 'int' lvalue Var 0x283550107e8 'ret_code' 'int'
|   |   |   | `-ImplicitCastExpr 0x28355019cc0 <col:24> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x28355019ca0 <col:24> 'int' lvalue Var 0x28355010468 'i' 'int'
|   |   |   `-IfStmt 0x2835501a068 <line:168:13, line:179:17> has_else
|   |   |     |-OpaqueValueExpr 0x2835501a050 <<invalid sloc>> '_Bool'
|   |   |     |-CompoundStmt 0x2835501a028 <line:168:42, line:176:13>
|   |   |     | |-BinaryOperator 0x28355019ea8 <line:169:17, col:29> 'int' '='
|   |   |     | | |-MemberExpr 0x28355019e40 <col:17, col:22> 'int' lvalue ->cont 0x28355013168
|   |   |     | | | `-ImplicitCastExpr 0x28355019e28 <col:17> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |     | | |   `-DeclRefExpr 0x28355019e08 <col:17> 'BIO_B64_CTX *' lvalue Var 0x283550108f0 'ctx' 'BIO_B64_CTX *'
|   |   |     | | `-ImplicitCastExpr 0x28355019e90 <col:29> 'int' <LValueToRValue>
|   |   |     | |   `-DeclRefExpr 0x28355019e70 <col:29> 'int' lvalue Var 0x28355010468 'i' 'int'
|   |   |     | `-IfStmt 0x2835501a000 <line:171:17, line:175:25> has_else
|   |   |     |   |-BinaryOperator 0x28355019f70 <line:171:21, col:37> 'int' '=='
|   |   |     |   | |-ImplicitCastExpr 0x28355019f58 <col:21, col:26> 'int' <LValueToRValue>
|   |   |     |   | | `-MemberExpr 0x28355019f00 <col:21, col:26> 'int' lvalue ->tmp_len 0x28355011f88
|   |   |     |   | |   `-ImplicitCastExpr 0x28355019ee8 <col:21> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |     |   | |     `-DeclRefExpr 0x28355019ec8 <col:21> 'BIO_B64_CTX *' lvalue Var 0x283550108f0 'ctx' 'BIO_B64_CTX *'
|   |   |     |   | `-IntegerLiteral 0x28355019f30 <col:37> 'int' 0
|   |   |     |   |-BreakStmt 0x28355019f90 <line:172:21>
|   |   |     |   `-BinaryOperator 0x28355019fe0 <line:175:21, col:25> 'int' '='
|   |   |     |     |-DeclRefExpr 0x28355019f98 <col:21> 'int' lvalue Var 0x28355010468 'i' 'int'
|   |   |     |     `-IntegerLiteral 0x28355019fb8 <col:25> 'int' 0
|   |   |     `-BreakStmt 0x2835501a048 <line:179:17>
|   |   |-CompoundAssignOperator 0x28355012100 <line:181:9, col:19> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-DeclRefExpr 0x28355012060 <col:9> 'int' lvalue Var 0x28355010468 'i' 'int'
|   |   | `-ImplicitCastExpr 0x283550120e8 <col:14, col:19> 'int' <LValueToRValue>
|   |   |   `-MemberExpr 0x283550120b8 <col:14, col:19> 'int' lvalue ->tmp_len 0x28355011f88
|   |   |     `-ImplicitCastExpr 0x283550120a0 <col:14> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x28355012080 <col:14> 'BIO_B64_CTX *' lvalue Var 0x283550108f0 'ctx' 'BIO_B64_CTX *'
|   |   |-BinaryOperator 0x283550121d0 <line:182:9, col:24> 'int' '='
|   |   | |-MemberExpr 0x28355012168 <col:9, col:14> 'int' lvalue ->tmp_len 0x28355011f88
|   |   | | `-ImplicitCastExpr 0x28355012150 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x28355012130 <col:9> 'BIO_B64_CTX *' lvalue Var 0x283550108f0 'ctx' 'BIO_B64_CTX *'
|   |   | `-ImplicitCastExpr 0x283550121b8 <col:24> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x28355012198 <col:24> 'int' lvalue Var 0x28355010468 'i' 'int'
|   |   |-IfStmt 0x2835501a870 <line:188:9, line:258:9> has_else
|   |   | |-OpaqueValueExpr 0x2835501a858 <<invalid sloc>> '_Bool'
|   |   | |-CompoundStmt 0x28355012418 <line:188:72, line:191:9>
|   |   | | `-BinaryOperator 0x283550123f8 <line:190:13, col:28> 'int' '='
|   |   | |   |-MemberExpr 0x283550123a0 <col:13, col:18> 'int' lvalue ->tmp_len 0x28355011f88
|   |   | |   | `-ImplicitCastExpr 0x28355012388 <col:13> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x28355012368 <col:13> 'BIO_B64_CTX *' lvalue Var 0x283550108f0 'ctx' 'BIO_B64_CTX *'
|   |   | |   `-IntegerLiteral 0x283550123d0 <col:28> 'int' 0
|   |   | `-IfStmt 0x2835501a830 <line:191:16, line:258:9> has_else
|   |   |   |-ImplicitCastExpr 0x28355012498 <line:191:20, col:25> 'int' <LValueToRValue>
|   |   |   | `-MemberExpr 0x28355012468 <col:20, col:25> 'int' lvalue ->start 0x283550130f8
|   |   |   |   `-ImplicitCastExpr 0x28355012450 <col:20> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x28355012430 <col:20> 'BIO_B64_CTX *' lvalue Var 0x283550108f0 'ctx' 'BIO_B64_CTX *'
|   |   |   |-CompoundStmt 0x2835501a620 <col:32, line:252:9>
|   |   |   | |-BinaryOperator 0x28355012600 <line:192:13, col:43> 'unsigned char *' '='
|   |   |   | | |-DeclRefExpr 0x283550124b0 <col:13> 'unsigned char *' lvalue Var 0x28355010a30 'q' 'unsigned char *'
|   |   |   | | `-BinaryOperator 0x283550125e0 <col:17, col:43> 'unsigned char *' '='
|   |   |   | |   |-DeclRefExpr 0x283550124e8 <col:17> 'unsigned char *' lvalue Var 0x283550109b0 'p' 'unsigned char *'
|   |   |   | |   `-CStyleCastExpr 0x283550125b8 <col:21, col:43> 'unsigned char *' <BitCast>
|   |   |   | |     `-ImplicitCastExpr 0x283550125a0 <col:38, col:43> 'char *' <ArrayToPointerDecay> part_of_explicit_cast
|   |   |   | |       `-MemberExpr 0x28355012558 <col:38, col:43> 'char [1024]' lvalue ->tmp 0x28355013598
|   |   |   | |         `-ImplicitCastExpr 0x28355012540 <col:38> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   | |           `-DeclRefExpr 0x28355012520 <col:38> 'BIO_B64_CTX *' lvalue Var 0x283550108f0 'ctx' 'BIO_B64_CTX *'
|   |   |   | |-BinaryOperator 0x28355012680 <line:193:13, col:19> 'int' '='
|   |   |   | | |-DeclRefExpr 0x28355012620 <col:13> 'int' lvalue Var 0x28355010768 'num' 'int'
|   |   |   | | `-IntegerLiteral 0x28355012658 <col:19> 'int' 0
|   |   |   | |-ForStmt 0x28355021a18 <line:194:13, line:227:13>
|   |   |   | | |-BinaryOperator 0x28355012700 <line:194:18, col:22> 'int' '='
|   |   |   | | | |-DeclRefExpr 0x283550126a0 <col:18> 'int' lvalue Var 0x28355010568 'j' 'int'
|   |   |   | | | `-IntegerLiteral 0x283550126d8 <col:22> 'int' 0
|   |   |   | | |-<<<NULL>>>
|   |   |   | | |-BinaryOperator 0x28355012790 <col:25, col:29> 'int' '<'
|   |   |   | | | |-ImplicitCastExpr 0x28355012760 <col:25> 'int' <LValueToRValue>
|   |   |   | | | | `-DeclRefExpr 0x28355012720 <col:25> 'int' lvalue Var 0x28355010568 'j' 'int'
|   |   |   | | | `-ImplicitCastExpr 0x28355012778 <col:29> 'int' <LValueToRValue>
|   |   |   | | |   `-DeclRefExpr 0x28355012740 <col:29> 'int' lvalue Var 0x28355010468 'i' 'int'
|   |   |   | | |-UnaryOperator 0x283550127d0 <col:32, col:33> 'int' postfix '++'
|   |   |   | | | `-DeclRefExpr 0x283550127b0 <col:32> 'int' lvalue Var 0x28355010568 'j' 'int'
|   |   |   | | `-CompoundStmt 0x283550219e8 <col:37, line:227:13>
|   |   |   | |   |-IfStmt 0x283550128c8 <line:195:17, line:196:21>
|   |   |   | |   | |-BinaryOperator 0x283550128a0 <line:195:21, col:31> 'int' '!='
|   |   |   | |   | | |-ImplicitCastExpr 0x28355012888 <col:21, col:26> 'int' <IntegralCast>
|   |   |   | |   | | | `-ImplicitCastExpr 0x28355012870 <col:21, col:26> 'unsigned char' <LValueToRValue>
|   |   |   | |   | | |   `-UnaryOperator 0x28355012840 <col:21, col:26> 'unsigned char' lvalue prefix '*' cannot overflow
|   |   |   | |   | | |     `-ParenExpr 0x28355012820 <col:22, col:26> 'unsigned char *'
|   |   |   | |   | | |       `-UnaryOperator 0x28355012808 <col:23, col:24> 'unsigned char *' postfix '++'
|   |   |   | |   | | |         `-DeclRefExpr 0x283550127e8 <col:23> 'unsigned char *' lvalue Var 0x28355010a30 'q' 'unsigned char *'
|   |   |   | |   | | `-CharacterLiteral 0x28355012858 <col:31> 'int' 10
|   |   |   | |   | `-ContinueStmt 0x283550128c0 <line:196:21>
|   |   |   | |   |-IfStmt 0x28355012ab8 <line:203:17, line:207:17>
|   |   |   | |   | |-ImplicitCastExpr 0x28355012948 <line:203:21, col:26> 'int' <LValueToRValue>
|   |   |   | |   | | `-MemberExpr 0x28355012918 <col:21, col:26> 'int' lvalue ->tmp_nl 0x28355011ff8
|   |   |   | |   | |   `-ImplicitCastExpr 0x28355012900 <col:21> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   | |   | |     `-DeclRefExpr 0x283550128e0 <col:21> 'BIO_B64_CTX *' lvalue Var 0x283550108f0 'ctx' 'BIO_B64_CTX *'
|   |   |   | |   | `-CompoundStmt 0x28355012a90 <col:34, line:207:17>
|   |   |   | |   |   |-BinaryOperator 0x283550129b8 <line:204:21, col:25> 'unsigned char *' '='
|   |   |   | |   |   | |-DeclRefExpr 0x28355012960 <col:21> 'unsigned char *' lvalue Var 0x283550109b0 'p' 'unsigned char *'
|   |   |   | |   |   | `-ImplicitCastExpr 0x283550129a0 <col:25> 'unsigned char *' <LValueToRValue>
|   |   |   | |   |   |   `-DeclRefExpr 0x28355012980 <col:25> 'unsigned char *' lvalue Var 0x28355010a30 'q' 'unsigned char *'
|   |   |   | |   |   |-BinaryOperator 0x28355012a68 <line:205:21, col:35> 'int' '='
|   |   |   | |   |   | |-MemberExpr 0x28355012a10 <col:21, col:26> 'int' lvalue ->tmp_nl 0x28355011ff8
|   |   |   | |   |   | | `-ImplicitCastExpr 0x283550129f8 <col:21> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   | |   |   | |   `-DeclRefExpr 0x283550129d8 <col:21> 'BIO_B64_CTX *' lvalue Var 0x283550108f0 'ctx' 'BIO_B64_CTX *'
|   |   |   | |   |   | `-IntegerLiteral 0x28355012a40 <col:35> 'int' 0
|   |   |   | |   |   `-ContinueStmt 0x28355012a88 <line:206:21>
|   |   |   | |   |-IfStmt 0x28355021948 <line:212:17, line:225:17> has_else
|   |   |   | |   | |-BinaryOperator 0x28355012f70 <line:212:21, col:58> 'int' '&&'
|   |   |   | |   | | |-BinaryOperator 0x28355012eb0 <col:21, col:42> 'int' '&&'
|   |   |   | |   | | | |-ParenExpr 0x28355012df0 <col:21, col:28> 'int'
|   |   |   | |   | | | | `-BinaryOperator 0x28355012dd0 <col:22, col:27> 'int' '<='
|   |   |   | |   | | | |   |-ImplicitCastExpr 0x28355012db8 <col:22> 'int' <LValueToRValue>
|   |   |   | |   | | | |   | `-DeclRefExpr 0x28355012d70 <col:22> 'int' lvalue Var 0x283550105e8 'k' 'int'
|   |   |   | |   | | | |   `-IntegerLiteral 0x28355012d90 <col:27> 'int' 0
|   |   |   | |   | | | `-ParenExpr 0x28355012e90 <col:33, col:42> 'int'
|   |   |   | |   | | |   `-BinaryOperator 0x28355012e70 <col:34, col:41> 'int' '=='
|   |   |   | |   | | |     |-ImplicitCastExpr 0x28355012e58 <col:34> 'int' <LValueToRValue>
|   |   |   | |   | | |     | `-DeclRefExpr 0x28355012e10 <col:34> 'int' lvalue Var 0x28355010768 'num' 'int'
|   |   |   | |   | | |     `-IntegerLiteral 0x28355012e30 <col:41> 'int' 0
|   |   |   | |   | | `-ImplicitCastExpr 0x28355012f58 <col:47, col:58> 'int' <LValueToRValue>
|   |   |   | |   | |   `-ParenExpr 0x28355012f38 <col:47, col:58> 'int' lvalue
|   |   |   | |   | |     `-MemberExpr 0x28355012f08 <col:48, col:53> 'int' lvalue ->start 0x283550130f8
|   |   |   | |   | |       `-ImplicitCastExpr 0x28355012ef0 <col:48> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   | |   | |         `-DeclRefExpr 0x28355012ed0 <col:48> 'BIO_B64_CTX *' lvalue Var 0x283550108f0 'ctx' 'BIO_B64_CTX *'
|   |   |   | |   | |-NullStmt 0x28355021940 <line:213:21>
|   |   |   | |   | `-CompoundStmt 0x28355021918 <line:214:22, line:225:17>
|   |   |   | |   |   |-IfStmt 0x283550217f0 <line:215:21, line:221:21>
|   |   |   | |   |   | |-BinaryOperator 0x28355021270 <line:215:25, line:216:38> 'int' '!='
|   |   |   | |   |   | | |-ImplicitCastExpr 0x28355021258 <line:215:25> 'unsigned char *' <LValueToRValue>
|   |   |   | |   |   | | | `-DeclRefExpr 0x28355012fe8 <col:25> 'unsigned char *' lvalue Var 0x283550109b0 'p' 'unsigned char *'
|   |   |   | |   |   | | `-CStyleCastExpr 0x28355021230 <col:30, line:216:38> 'unsigned char *' <BitCast>
|   |   |   | |   |   | |   `-UnaryOperator 0x28355021200 <col:25, col:38> 'char *' prefix '&' cannot overflow
|   |   |   | |   |   | |     `-ParenExpr 0x283550211e0 <col:26, col:38> 'char' lvalue
|   |   |   | |   |   | |       `-ArraySubscriptExpr 0x283550211c0 <col:27, col:37> 'char' lvalue
|   |   |   | |   |   | |         |-ImplicitCastExpr 0x283550211a8 <col:27, col:32> 'char *' <ArrayToPointerDecay>
|   |   |   | |   |   | |         | `-MemberExpr 0x28355021150 <col:27, col:32> 'char [1024]' lvalue ->tmp 0x28355013598
|   |   |   | |   |   | |         |   `-ImplicitCastExpr 0x28355013028 <col:27> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   | |   |   | |         |     `-DeclRefExpr 0x28355013008 <col:27> 'BIO_B64_CTX *' lvalue Var 0x283550108f0 'ctx' 'BIO_B64_CTX *'
|   |   |   | |   |   | |         `-IntegerLiteral 0x28355021180 <col:36> 'int' 0
|   |   |   | |   |   | `-CompoundStmt 0x283550217d0 <col:41, line:221:21>
|   |   |   | |   |   |   |-CompoundAssignOperator 0x28355021468 <line:217:25, line:218:45> 'int' '-=' ComputeLHSTy='long long' ComputeResultTy='long long'
|   |   |   | |   |   |   | |-DeclRefExpr 0x28355021290 <line:217:25> 'int' lvalue Var 0x28355010468 'i' 'int'
|   |   |   | |   |   |   | `-ParenExpr 0x28355021448 <col:30, line:218:45> 'long long'
|   |   |   | |   |   |   |   `-BinaryOperator 0x28355021428 <line:217:31, line:218:44> 'long long' '-'
|   |   |   | |   |   |   |     |-ImplicitCastExpr 0x28355021410 <line:217:31> 'unsigned char *' <LValueToRValue>
|   |   |   | |   |   |   |     | `-DeclRefExpr 0x283550212b0 <col:31> 'unsigned char *' lvalue Var 0x283550109b0 'p' 'unsigned char *'
|   |   |   | |   |   |   |     `-CStyleCastExpr 0x283550213e8 <col:35, line:218:44> 'unsigned char *' <BitCast>
|   |   |   | |   |   |   |       `-UnaryOperator 0x283550213b8 <col:31, col:44> 'char *' prefix '&' cannot overflow
|   |   |   | |   |   |   |         `-ParenExpr 0x28355021398 <col:32, col:44> 'char' lvalue
|   |   |   | |   |   |   |           `-ArraySubscriptExpr 0x28355021378 <col:33, col:43> 'char' lvalue
|   |   |   | |   |   |   |             |-ImplicitCastExpr 0x28355021360 <col:33, col:38> 'char *' <ArrayToPointerDecay>
|   |   |   | |   |   |   |             | `-MemberExpr 0x28355021308 <col:33, col:38> 'char [1024]' lvalue ->tmp 0x28355013598
|   |   |   | |   |   |   |             |   `-ImplicitCastExpr 0x283550212f0 <col:33> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   | |   |   |   |             |     `-DeclRefExpr 0x283550212d0 <col:33> 'BIO_B64_CTX *' lvalue Var 0x283550108f0 'ctx' 'BIO_B64_CTX *'
|   |   |   | |   |   |   |             `-IntegerLiteral 0x28355021338 <col:42> 'int' 0
|   |   |   | |   |   |   `-ForStmt 0x28355021798 <line:219:25, line:220:46>
|   |   |   | |   |   |     |-BinaryOperator 0x283550214f8 <line:219:30, col:34> 'int' '='
|   |   |   | |   |   |     | |-DeclRefExpr 0x28355021498 <col:30> 'int' lvalue Var 0x28355010668 'x' 'int'
|   |   |   | |   |   |     | `-IntegerLiteral 0x283550214d0 <col:34> 'int' 0
|   |   |   | |   |   |     |-<<<NULL>>>
|   |   |   | |   |   |     |-BinaryOperator 0x28355021588 <col:37, col:41> 'int' '<'
|   |   |   | |   |   |     | |-ImplicitCastExpr 0x28355021558 <col:37> 'int' <LValueToRValue>
|   |   |   | |   |   |     | | `-DeclRefExpr 0x28355021518 <col:37> 'int' lvalue Var 0x28355010668 'x' 'int'
|   |   |   | |   |   |     | `-ImplicitCastExpr 0x28355021570 <col:41> 'int' <LValueToRValue>
|   |   |   | |   |   |     |   `-DeclRefExpr 0x28355021538 <col:41> 'int' lvalue Var 0x28355010468 'i' 'int'
|   |   |   | |   |   |     |-UnaryOperator 0x283550215c8 <col:44, col:45> 'int' postfix '++'
|   |   |   | |   |   |     | `-DeclRefExpr 0x283550215a8 <col:44> 'int' lvalue Var 0x28355010668 'x' 'int'
|   |   |   | |   |   |     `-BinaryOperator 0x28355021778 <line:220:29, col:46> 'char' '='
|   |   |   | |   |   |       |-ArraySubscriptExpr 0x28355021698 <col:29, col:39> 'char' lvalue
|   |   |   | |   |   |       | |-ImplicitCastExpr 0x28355021668 <col:29, col:34> 'char *' <ArrayToPointerDecay>
|   |   |   | |   |   |       | | `-MemberExpr 0x28355021618 <col:29, col:34> 'char [1024]' lvalue ->tmp 0x28355013598
|   |   |   | |   |   |       | |   `-ImplicitCastExpr 0x28355021600 <col:29> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   | |   |   |       | |     `-DeclRefExpr 0x283550215e0 <col:29> 'BIO_B64_CTX *' lvalue Var 0x283550108f0 'ctx' 'BIO_B64_CTX *'
|   |   |   | |   |   |       | `-ImplicitCastExpr 0x28355021680 <col:38> 'int' <LValueToRValue>
|   |   |   | |   |   |       |   `-DeclRefExpr 0x28355021648 <col:38> 'int' lvalue Var 0x28355010668 'x' 'int'
|   |   |   | |   |   |       `-ImplicitCastExpr 0x28355021760 <col:43, col:46> 'char' <IntegralCast>
|   |   |   | |   |   |         `-ImplicitCastExpr 0x28355021748 <col:43, col:46> 'unsigned char' <LValueToRValue>
|   |   |   | |   |   |           `-ArraySubscriptExpr 0x28355021728 <col:43, col:46> 'unsigned char' lvalue
|   |   |   | |   |   |             |-ImplicitCastExpr 0x283550216f8 <col:43> 'unsigned char *' <LValueToRValue>
|   |   |   | |   |   |             | `-DeclRefExpr 0x283550216b8 <col:43> 'unsigned char *' lvalue Var 0x283550109b0 'p' 'unsigned char *'
|   |   |   | |   |   |             `-ImplicitCastExpr 0x28355021710 <col:45> 'int' <LValueToRValue>
|   |   |   | |   |   |               `-DeclRefExpr 0x283550216d8 <col:45> 'int' lvalue Var 0x28355010668 'x' 'int'
|   |   |   | |   |   |-BinaryOperator 0x283550218f0 <line:223:21, col:34> 'int' '='
|   |   |   | |   |   | |-MemberExpr 0x28355021898 <col:21, col:26> 'int' lvalue ->start 0x283550130f8
|   |   |   | |   |   | | `-ImplicitCastExpr 0x28355021880 <col:21> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   | |   |   | |   `-DeclRefExpr 0x28355021860 <col:21> 'BIO_B64_CTX *' lvalue Var 0x283550108f0 'ctx' 'BIO_B64_CTX *'
|   |   |   | |   |   | `-IntegerLiteral 0x283550218c8 <col:34> 'int' 0
|   |   |   | |   |   `-BreakStmt 0x28355021910 <line:224:21>
|   |   |   | |   `-BinaryOperator 0x283550219c8 <line:226:17, col:21> 'unsigned char *' '='
|   |   |   | |     |-DeclRefExpr 0x28355021970 <col:17> 'unsigned char *' lvalue Var 0x283550109b0 'p' 'unsigned char *'
|   |   |   | |     `-ImplicitCastExpr 0x283550219b0 <col:21> 'unsigned char *' <LValueToRValue>
|   |   |   | |       `-DeclRefExpr 0x28355021990 <col:21> 'unsigned char *' lvalue Var 0x28355010a30 'q' 'unsigned char *'
|   |   |   | `-IfStmt 0x2835501a5f8 <line:230:13, line:251:13> has_else
|   |   |   |   |-BinaryOperator 0x28355021ba0 <line:230:17, col:38> 'int' '&&'
|   |   |   |   | |-ParenExpr 0x28355021ae0 <col:17, col:24> 'int'
|   |   |   |   | | `-BinaryOperator 0x28355021ac0 <col:18, col:23> 'int' '=='
|   |   |   |   | |   |-ImplicitCastExpr 0x28355021a90 <col:18> 'int' <LValueToRValue>
|   |   |   |   | |   | `-DeclRefExpr 0x28355021a50 <col:18> 'int' lvalue Var 0x28355010568 'j' 'int'
|   |   |   |   | |   `-ImplicitCastExpr 0x28355021aa8 <col:23> 'int' <LValueToRValue>
|   |   |   |   | |     `-DeclRefExpr 0x28355021a70 <col:23> 'int' lvalue Var 0x28355010468 'i' 'int'
|   |   |   |   | `-ParenExpr 0x28355021b80 <col:29, col:38> 'int'
|   |   |   |   |   `-BinaryOperator 0x28355021b60 <col:30, col:37> 'int' '=='
|   |   |   |   |     |-ImplicitCastExpr 0x28355021b48 <col:30> 'int' <LValueToRValue>
|   |   |   |   |     | `-DeclRefExpr 0x28355021b00 <col:30> 'int' lvalue Var 0x28355010768 'num' 'int'
|   |   |   |   |     `-IntegerLiteral 0x28355021b20 <col:37> 'int' 0
|   |   |   |   |-CompoundStmt 0x2835501a510 <col:41, line:249:13>
|   |   |   |   | |-IfStmt 0x2835501a4e0 <line:235:17, line:246:17> has_else
|   |   |   |   | | |-BinaryOperator 0x28355021d38 <line:235:21, col:56> 'int' '=='
|   |   |   |   | | | |-ImplicitCastExpr 0x28355021d20 <col:21> 'unsigned char *' <LValueToRValue>
|   |   |   |   | | | | `-DeclRefExpr 0x28355021bc0 <col:21> 'unsigned char *' lvalue Var 0x283550109b0 'p' 'unsigned char *'
|   |   |   |   | | | `-CStyleCastExpr 0x28355021cf8 <col:26, col:56> 'unsigned char *' <BitCast>
|   |   |   |   | | |   `-UnaryOperator 0x28355021cc8 <col:43, col:56> 'char *' prefix '&' cannot overflow
|   |   |   |   | | |     `-ParenExpr 0x28355021ca8 <col:44, col:56> 'char' lvalue
|   |   |   |   | | |       `-ArraySubscriptExpr 0x28355021c88 <col:45, col:55> 'char' lvalue
|   |   |   |   | | |         |-ImplicitCastExpr 0x28355021c70 <col:45, col:50> 'char *' <ArrayToPointerDecay>
|   |   |   |   | | |         | `-MemberExpr 0x28355021c18 <col:45, col:50> 'char [1024]' lvalue ->tmp 0x28355013598
|   |   |   |   | | |         |   `-ImplicitCastExpr 0x28355021c00 <col:45> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   |   | | |         |     `-DeclRefExpr 0x28355021be0 <col:45> 'BIO_B64_CTX *' lvalue Var 0x283550108f0 'ctx' 'BIO_B64_CTX *'
|   |   |   |   | | |         `-IntegerLiteral 0x28355021c48 <col:54> 'int' 0
|   |   |   |   | | |-CompoundStmt 0x28355021f70 <col:59, line:241:17>
|   |   |   |   | | | `-IfStmt 0x28355021f58 <line:237:21, line:240:21>
|   |   |   |   | | |   |-BinaryOperator 0x28355021db8 <line:237:25, line:27:25> 'int' '=='
|   |   |   |   | | |   | |-ImplicitCastExpr 0x28355021da0 <line:237:25> 'int' <LValueToRValue>
|   |   |   |   | | |   | | `-DeclRefExpr 0x28355021d58 <col:25> 'int' lvalue Var 0x28355010468 'i' 'int'
|   |   |   |   | | |   | `-IntegerLiteral 0x28355021d78 <line:27:25> 'int' 1024
|   |   |   |   | | |   `-CompoundStmt 0x28355021f38 <line:237:46, line:240:21>
|   |   |   |   | | |     |-BinaryOperator 0x28355021e68 <line:238:25, col:39> 'int' '='
|   |   |   |   | | |     | |-MemberExpr 0x28355021e10 <col:25, col:30> 'int' lvalue ->tmp_nl 0x28355011ff8
|   |   |   |   | | |     | | `-ImplicitCastExpr 0x28355021df8 <col:25> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   |   | | |     | |   `-DeclRefExpr 0x28355021dd8 <col:25> 'BIO_B64_CTX *' lvalue Var 0x283550108f0 'ctx' 'BIO_B64_CTX *'
|   |   |   |   | | |     | `-IntegerLiteral 0x28355021e40 <col:39> 'int' 1
|   |   |   |   | | |     `-BinaryOperator 0x28355021f18 <line:239:25, col:40> 'int' '='
|   |   |   |   | | |       |-MemberExpr 0x28355021ec0 <col:25, col:30> 'int' lvalue ->tmp_len 0x28355011f88
|   |   |   |   | | |       | `-ImplicitCastExpr 0x28355021ea8 <col:25> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   |   | | |       |   `-DeclRefExpr 0x28355021e88 <col:25> 'BIO_B64_CTX *' lvalue Var 0x283550108f0 'ctx' 'BIO_B64_CTX *'
|   |   |   |   | | |       `-IntegerLiteral 0x28355021ef0 <col:40> 'int' 0
|   |   |   |   | | `-IfStmt 0x2835501a4c8 <line:241:24, line:246:17>
|   |   |   |   | |   |-BinaryOperator 0x28355021ff8 <line:241:28, col:33> 'int' '!='
|   |   |   |   | |   | |-ImplicitCastExpr 0x28355021fc8 <col:28> 'unsigned char *' <LValueToRValue>
|   |   |   |   | |   | | `-DeclRefExpr 0x28355021f88 <col:28> 'unsigned char *' lvalue Var 0x283550109b0 'p' 'unsigned char *'
|   |   |   |   | |   | `-ImplicitCastExpr 0x28355021fe0 <col:33> 'unsigned char *' <LValueToRValue>
|   |   |   |   | |   |   `-DeclRefExpr 0x28355021fa8 <col:33> 'unsigned char *' lvalue Var 0x28355010a30 'q' 'unsigned char *'
|   |   |   |   | |   `-CompoundStmt 0x2835501a4a0 <col:36, line:246:17>
|   |   |   |   | |     |-BinaryOperator 0x283550220f8 <line:242:21, col:29> 'int' '='
|   |   |   |   | |     | |-DeclRefExpr 0x28355022018 <col:21> 'int' lvalue Var 0x283550106e8 'n' 'int'
|   |   |   |   | |     | `-ImplicitCastExpr 0x283550220e0 <col:25, col:29> 'int' <IntegralCast>
|   |   |   |   | |     |   `-BinaryOperator 0x283550220c0 <col:25, col:29> 'long long' '-'
|   |   |   |   | |     |     |-ImplicitCastExpr 0x28355022090 <col:25> 'unsigned char *' <LValueToRValue>
|   |   |   |   | |     |     | `-DeclRefExpr 0x28355022050 <col:25> 'unsigned char *' lvalue Var 0x28355010a30 'q' 'unsigned char *'
|   |   |   |   | |     |     `-ImplicitCastExpr 0x283550220a8 <col:29> 'unsigned char *' <LValueToRValue>
|   |   |   |   | |     |       `-DeclRefExpr 0x28355022070 <col:29> 'unsigned char *' lvalue Var 0x283550109b0 'p' 'unsigned char *'
|   |   |   |   | |     |-ForStmt 0x2835501a3a8 <line:243:21, line:244:44>
|   |   |   |   | |     | |-BinaryOperator 0x2835501a108 <line:243:26, col:31> 'int' '='
|   |   |   |   | |     | | |-DeclRefExpr 0x28355022118 <col:26> 'int' lvalue Var 0x283550104e8 'ii' 'int'
|   |   |   |   | |     | | `-IntegerLiteral 0x2835501a0e0 <col:31> 'int' 0
|   |   |   |   | |     | |-<<<NULL>>>
|   |   |   |   | |     | |-BinaryOperator 0x2835501a198 <col:34, col:39> 'int' '<'
|   |   |   |   | |     | | |-ImplicitCastExpr 0x2835501a168 <col:34> 'int' <LValueToRValue>
|   |   |   |   | |     | | | `-DeclRefExpr 0x2835501a128 <col:34> 'int' lvalue Var 0x283550104e8 'ii' 'int'
|   |   |   |   | |     | | `-ImplicitCastExpr 0x2835501a180 <col:39> 'int' <LValueToRValue>
|   |   |   |   | |     | |   `-DeclRefExpr 0x2835501a148 <col:39> 'int' lvalue Var 0x283550106e8 'n' 'int'
|   |   |   |   | |     | |-UnaryOperator 0x2835501a1d8 <col:42, col:44> 'int' postfix '++'
|   |   |   |   | |     | | `-DeclRefExpr 0x2835501a1b8 <col:42> 'int' lvalue Var 0x283550104e8 'ii' 'int'
|   |   |   |   | |     | `-BinaryOperator 0x2835501a388 <line:244:25, col:44> 'char' '='
|   |   |   |   | |     |   |-ArraySubscriptExpr 0x2835501a2a8 <col:25, col:36> 'char' lvalue
|   |   |   |   | |     |   | |-ImplicitCastExpr 0x2835501a278 <col:25, col:30> 'char *' <ArrayToPointerDecay>
|   |   |   |   | |     |   | | `-MemberExpr 0x2835501a228 <col:25, col:30> 'char [1024]' lvalue ->tmp 0x28355013598
|   |   |   |   | |     |   | |   `-ImplicitCastExpr 0x2835501a210 <col:25> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   |   | |     |   | |     `-DeclRefExpr 0x2835501a1f0 <col:25> 'BIO_B64_CTX *' lvalue Var 0x283550108f0 'ctx' 'BIO_B64_CTX *'
|   |   |   |   | |     |   | `-ImplicitCastExpr 0x2835501a290 <col:34> 'int' <LValueToRValue>
|   |   |   |   | |     |   |   `-DeclRefExpr 0x2835501a258 <col:34> 'int' lvalue Var 0x283550104e8 'ii' 'int'
|   |   |   |   | |     |   `-ImplicitCastExpr 0x2835501a370 <col:40, col:44> 'char' <IntegralCast>
|   |   |   |   | |     |     `-ImplicitCastExpr 0x2835501a358 <col:40, col:44> 'unsigned char' <LValueToRValue>
|   |   |   |   | |     |       `-ArraySubscriptExpr 0x2835501a338 <col:40, col:44> 'unsigned char' lvalue
|   |   |   |   | |     |         |-ImplicitCastExpr 0x2835501a308 <col:40> 'unsigned char *' <LValueToRValue>
|   |   |   |   | |     |         | `-DeclRefExpr 0x2835501a2c8 <col:40> 'unsigned char *' lvalue Var 0x283550109b0 'p' 'unsigned char *'
|   |   |   |   | |     |         `-ImplicitCastExpr 0x2835501a320 <col:42> 'int' <LValueToRValue>
|   |   |   |   | |     |           `-DeclRefExpr 0x2835501a2e8 <col:42> 'int' lvalue Var 0x283550104e8 'ii' 'int'
|   |   |   |   | |     `-BinaryOperator 0x2835501a480 <line:245:21, col:36> 'int' '='
|   |   |   |   | |       |-MemberExpr 0x2835501a418 <col:21, col:26> 'int' lvalue ->tmp_len 0x28355011f88
|   |   |   |   | |       | `-ImplicitCastExpr 0x2835501a400 <col:21> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   |   | |       |   `-DeclRefExpr 0x2835501a3e0 <col:21> 'BIO_B64_CTX *' lvalue Var 0x283550108f0 'ctx' 'BIO_B64_CTX *'
|   |   |   |   | |       `-ImplicitCastExpr 0x2835501a468 <col:36> 'int' <LValueToRValue>
|   |   |   |   | |         `-DeclRefExpr 0x2835501a448 <col:36> 'int' lvalue Var 0x283550106e8 'n' 'int'
|   |   |   |   | `-ContinueStmt 0x2835501a508 <line:248:17>
|   |   |   |   `-CompoundStmt 0x2835501a5e0 <line:249:20, line:251:13>
|   |   |   |     `-BinaryOperator 0x2835501a5c0 <line:250:17, col:32> 'int' '='
|   |   |   |       |-MemberExpr 0x2835501a568 <col:17, col:22> 'int' lvalue ->tmp_len 0x28355011f88
|   |   |   |       | `-ImplicitCastExpr 0x2835501a550 <col:17> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   |       |   `-DeclRefExpr 0x2835501a530 <col:17> 'BIO_B64_CTX *' lvalue Var 0x283550108f0 'ctx' 'BIO_B64_CTX *'
|   |   |   |       `-IntegerLiteral 0x2835501a598 <col:32> 'int' 0
|   |   |   `-IfStmt 0x2835501a818 <line:252:16, line:258:9>
|   |   |     |-BinaryOperator 0x2835501a7d8 <line:252:20, col:58> 'int' '&&'
|   |   |     | |-ParenExpr 0x2835501a6d0 <col:20, col:39> 'int'
|   |   |     | | `-BinaryOperator 0x2835501a6b0 <col:21, line:27:25> 'int' '<'
|   |   |     | |   |-ImplicitCastExpr 0x2835501a698 <line:252:21> 'int' <LValueToRValue>
|   |   |     | |   | `-DeclRefExpr 0x2835501a650 <col:21> 'int' lvalue Var 0x28355010468 'i' 'int'
|   |   |     | |   `-IntegerLiteral 0x2835501a670 <line:27:25> 'int' 1024
|   |   |     | `-ParenExpr 0x2835501a7b8 <line:252:44, col:58> 'int'
|   |   |     |   `-BinaryOperator 0x2835501a798 <col:45, col:57> 'int' '>'
|   |   |     |     |-ImplicitCastExpr 0x2835501a780 <col:45, col:50> 'int' <LValueToRValue>
|   |   |     |     | `-MemberExpr 0x2835501a728 <col:45, col:50> 'int' lvalue ->cont 0x28355013168
|   |   |     |     |   `-ImplicitCastExpr 0x2835501a710 <col:45> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |     |     |     `-DeclRefExpr 0x2835501a6f0 <col:45> 'BIO_B64_CTX *' lvalue Var 0x283550108f0 'ctx' 'BIO_B64_CTX *'
|   |   |     |     `-IntegerLiteral 0x2835501a758 <col:57> 'int' 0
|   |   |     `-CompoundStmt 0x2835501a800 <col:61, line:258:9>
|   |   |       `-ContinueStmt 0x2835501a7f8 <line:257:13>
|   |   |-IfStmt 0x2835501be78 <line:260:9, line:290:9> has_else
|   |   | |-OpaqueValueExpr 0x2835501be60 <<invalid sloc>> '_Bool'
|   |   | |-CompoundStmt 0x2835501bb40 <line:260:56, line:285:9>
|   |   | | |-DeclStmt 0x2835501a9d0 <line:261:13, col:22>
|   |   | | | |-VarDecl 0x2835501a8d0 <col:13, col:17> col:17 used z 'int'
|   |   | | | `-VarDecl 0x2835501a950 <col:13, col:20> col:20 used jj 'int'
|   |   | | |-BinaryOperator 0x2835501aab8 <line:263:13, col:23> 'int' '='
|   |   | | | |-DeclRefExpr 0x2835501a9e8 <col:13> 'int' lvalue Var 0x2835501a950 'jj' 'int'
|   |   | | | `-BinaryOperator 0x2835501aa98 <col:18, col:23> 'int' '&'
|   |   | | |   |-ImplicitCastExpr 0x2835501aa80 <col:18> 'int' <LValueToRValue>
|   |   | | |   | `-DeclRefExpr 0x2835501aa20 <col:18> 'int' lvalue Var 0x28355010468 'i' 'int'
|   |   | | |   `-UnaryOperator 0x2835501aa68 <col:22, col:23> 'int' prefix '~' cannot overflow
|   |   | | |     `-IntegerLiteral 0x2835501aa40 <col:23> 'int' 3
|   |   | | |-IfStmt 0x2835501b1b0 <line:266:13, line:272:13>
|   |   | | | |-BinaryOperator 0x2835501ad98 <line:266:17, col:22> 'int' '>'
|   |   | | | | |-ImplicitCastExpr 0x2835501ad80 <col:17> 'int' <LValueToRValue>
|   |   | | | | | `-DeclRefExpr 0x2835501ad38 <col:17> 'int' lvalue Var 0x2835501a950 'jj' 'int'
|   |   | | | | `-IntegerLiteral 0x2835501ad58 <col:22> 'int' 2
|   |   | | | `-CompoundStmt 0x2835501b198 <col:25, line:272:13>
|   |   | | |   `-IfStmt 0x2835501b180 <line:267:17, line:271:17>
|   |   | | |     |-BinaryOperator 0x2835501af20 <line:267:21, col:41> 'int' '=='
|   |   | | |     | |-ImplicitCastExpr 0x2835501af08 <col:21, col:36> 'int' <IntegralCast>
|   |   | | |     | | `-ImplicitCastExpr 0x2835501aef0 <col:21, col:36> 'char' <LValueToRValue>
|   |   | | |     | |   `-ArraySubscriptExpr 0x2835501aeb8 <col:21, col:36> 'char' lvalue
|   |   | | |     | |     |-ImplicitCastExpr 0x2835501aea0 <col:21, col:26> 'char *' <ArrayToPointerDecay>
|   |   | | |     | |     | `-MemberExpr 0x2835501adf0 <col:21, col:26> 'char [1024]' lvalue ->tmp 0x28355013598
|   |   | | |     | |     |   `-ImplicitCastExpr 0x2835501add8 <col:21> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | | |     | |     |     `-DeclRefExpr 0x2835501adb8 <col:21> 'BIO_B64_CTX *' lvalue Var 0x283550108f0 'ctx' 'BIO_B64_CTX *'
|   |   | | |     | |     `-BinaryOperator 0x2835501ae80 <col:30, col:35> 'int' '-'
|   |   | | |     | |       |-ImplicitCastExpr 0x2835501ae68 <col:30> 'int' <LValueToRValue>
|   |   | | |     | |       | `-DeclRefExpr 0x2835501ae20 <col:30> 'int' lvalue Var 0x2835501a950 'jj' 'int'
|   |   | | |     | |       `-IntegerLiteral 0x2835501ae40 <col:35> 'int' 1
|   |   | | |     | `-CharacterLiteral 0x2835501aed8 <col:41> 'int' 61
|   |   | | |     `-CompoundStmt 0x2835501b160 <col:46, line:271:17>
|   |   | | |       |-UnaryOperator 0x2835501af60 <line:268:21, col:22> 'int' postfix '--'
|   |   | | |       | `-DeclRefExpr 0x2835501af40 <col:21> 'int' lvalue Var 0x2835501a8d0 'z' 'int'
|   |   | | |       `-IfStmt 0x2835501b148 <line:269:21, line:270:26>
|   |   | | |         |-BinaryOperator 0x2835501b0f0 <line:269:25, col:45> 'int' '=='
|   |   | | |         | |-ImplicitCastExpr 0x2835501b0c8 <col:25, col:40> 'int' <IntegralCast>
|   |   | | |         | | `-ImplicitCastExpr 0x2835501b0b0 <col:25, col:40> 'char' <LValueToRValue>
|   |   | | |         | |   `-ArraySubscriptExpr 0x2835501b078 <col:25, col:40> 'char' lvalue
|   |   | | |         | |     |-ImplicitCastExpr 0x2835501b060 <col:25, col:30> 'char *' <ArrayToPointerDecay>
|   |   | | |         | |     | `-MemberExpr 0x2835501afb0 <col:25, col:30> 'char [1024]' lvalue ->tmp 0x28355013598
|   |   | | |         | |     |   `-ImplicitCastExpr 0x2835501af98 <col:25> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | | |         | |     |     `-DeclRefExpr 0x2835501af78 <col:25> 'BIO_B64_CTX *' lvalue Var 0x283550108f0 'ctx' 'BIO_B64_CTX *'
|   |   | | |         | |     `-BinaryOperator 0x2835501b040 <col:34, col:39> 'int' '-'
|   |   | | |         | |       |-ImplicitCastExpr 0x2835501b028 <col:34> 'int' <LValueToRValue>
|   |   | | |         | |       | `-DeclRefExpr 0x2835501afe0 <col:34> 'int' lvalue Var 0x2835501a950 'jj' 'int'
|   |   | | |         | |       `-IntegerLiteral 0x2835501b000 <col:39> 'int' 2
|   |   | | |         | `-CharacterLiteral 0x2835501b098 <col:45> 'int' 61
|   |   | | |         `-UnaryOperator 0x2835501b130 <line:270:25, col:26> 'int' postfix '--'
|   |   | | |           `-DeclRefExpr 0x2835501b110 <col:25> 'int' lvalue Var 0x2835501a8d0 'z' 'int'
|   |   | | |-IfStmt 0x2835501b890 <line:276:13, line:279:13>
|   |   | | | |-BinaryOperator 0x2835501b238 <line:276:17, col:23> 'int' '!='
|   |   | | | | |-ImplicitCastExpr 0x2835501b208 <col:17> 'int' <LValueToRValue>
|   |   | | | | | `-DeclRefExpr 0x2835501b1c8 <col:17> 'int' lvalue Var 0x2835501a950 'jj' 'int'
|   |   | | | | `-ImplicitCastExpr 0x2835501b220 <col:23> 'int' <LValueToRValue>
|   |   | | | |   `-DeclRefExpr 0x2835501b1e8 <col:23> 'int' lvalue Var 0x28355010468 'i' 'int'
|   |   | | | `-CompoundStmt 0x2835501b870 <col:26, line:279:13>
|   |   | | |   |-CallExpr 0x2835501b6c0 <line:277:17, col:56> 'void *'
|   |   | | |   | |-ImplicitCastExpr 0x2835501b6a8 <col:17> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   |   | | |   | | `-DeclRefExpr 0x2835501b448 <col:17> 'void *(void *, const void *, unsigned long long)' Function 0x2835501b258 'memmove' 'void *(void *, const void *, unsigned long long)'
|   |   | | |   | |-ImplicitCastExpr 0x2835501b710 <col:25, col:30> 'void *' <BitCast>
|   |   | | |   | | `-ImplicitCastExpr 0x2835501b6f8 <col:25, col:30> 'char *' <ArrayToPointerDecay>
|   |   | | |   | |   `-MemberExpr 0x2835501b4b8 <col:25, col:30> 'char [1024]' lvalue ->tmp 0x28355013598
|   |   | | |   | |     `-ImplicitCastExpr 0x2835501b4a0 <col:25> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | | |   | |       `-DeclRefExpr 0x2835501b480 <col:25> 'BIO_B64_CTX *' lvalue Var 0x283550108f0 'ctx' 'BIO_B64_CTX *'
|   |   | | |   | |-ImplicitCastExpr 0x2835501b728 <col:35, col:47> 'const void *' <BitCast>
|   |   | | |   | | `-UnaryOperator 0x2835501b5c0 <col:35, col:47> 'char *' prefix '&' cannot overflow
|   |   | | |   | |   `-ArraySubscriptExpr 0x2835501b5a0 <col:36, col:47> 'char' lvalue
|   |   | | |   | |     |-ImplicitCastExpr 0x2835501b570 <col:36, col:41> 'char *' <ArrayToPointerDecay>
|   |   | | |   | |     | `-MemberExpr 0x2835501b520 <col:36, col:41> 'char [1024]' lvalue ->tmp 0x28355013598
|   |   | | |   | |     |   `-ImplicitCastExpr 0x2835501b508 <col:36> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | | |   | |     |     `-DeclRefExpr 0x2835501b4e8 <col:36> 'BIO_B64_CTX *' lvalue Var 0x283550108f0 'ctx' 'BIO_B64_CTX *'
|   |   | | |   | |     `-ImplicitCastExpr 0x2835501b588 <col:45> 'int' <LValueToRValue>
|   |   | | |   | |       `-DeclRefExpr 0x2835501b550 <col:45> 'int' lvalue Var 0x2835501a950 'jj' 'int'
|   |   | | |   | `-ImplicitCastExpr 0x2835501b740 <col:50, col:54> 'unsigned long long' <IntegralCast>
|   |   | | |   |   `-BinaryOperator 0x2835501b648 <col:50, col:54> 'int' '-'
|   |   | | |   |     |-ImplicitCastExpr 0x2835501b618 <col:50> 'int' <LValueToRValue>
|   |   | | |   |     | `-DeclRefExpr 0x2835501b5d8 <col:50> 'int' lvalue Var 0x28355010468 'i' 'int'
|   |   | | |   |     `-ImplicitCastExpr 0x2835501b630 <col:54> 'int' <LValueToRValue>
|   |   | | |   |       `-DeclRefExpr 0x2835501b5f8 <col:54> 'int' lvalue Var 0x2835501a950 'jj' 'int'
|   |   | | |   `-BinaryOperator 0x2835501b850 <line:278:17, col:36> 'int' '='
|   |   | | |     |-MemberExpr 0x2835501b790 <col:17, col:22> 'int' lvalue ->tmp_len 0x28355011f88
|   |   | | |     | `-ImplicitCastExpr 0x2835501b778 <col:17> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | | |     |   `-DeclRefExpr 0x2835501b758 <col:17> 'BIO_B64_CTX *' lvalue Var 0x283550108f0 'ctx' 'BIO_B64_CTX *'
|   |   | | |     `-BinaryOperator 0x2835501b830 <col:32, col:36> 'int' '-'
|   |   | | |       |-ImplicitCastExpr 0x2835501b800 <col:32> 'int' <LValueToRValue>
|   |   | | |       | `-DeclRefExpr 0x2835501b7c0 <col:32> 'int' lvalue Var 0x28355010468 'i' 'int'
|   |   | | |       `-ImplicitCastExpr 0x2835501b818 <col:36> 'int' <LValueToRValue>
|   |   | | |         `-DeclRefExpr 0x2835501b7e0 <col:36> 'int' lvalue Var 0x2835501a950 'jj' 'int'
|   |   | | |-BinaryOperator 0x2835501b938 <line:280:13, col:28> 'int' '='
|   |   | | | |-MemberExpr 0x2835501b8e0 <col:13, col:18> 'int' lvalue ->buf_len 0x28355011ea8
|   |   | | | | `-ImplicitCastExpr 0x2835501b8c8 <col:13> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | | | |   `-DeclRefExpr 0x2835501b8a8 <col:13> 'BIO_B64_CTX *' lvalue Var 0x283550108f0 'ctx' 'BIO_B64_CTX *'
|   |   | | | `-IntegerLiteral 0x2835501b910 <col:28> 'int' 0
|   |   | | |-IfStmt 0x2835501bab0 <line:281:13, line:283:13>
|   |   | | | |-BinaryOperator 0x2835501b9b8 <line:281:17, col:21> 'int' '>'
|   |   | | | | |-ImplicitCastExpr 0x2835501b9a0 <col:17> 'int' <LValueToRValue>
|   |   | | | | | `-DeclRefExpr 0x2835501b958 <col:17> 'int' lvalue Var 0x2835501a8d0 'z' 'int'
|   |   | | | | `-IntegerLiteral 0x2835501b978 <col:21> 'int' 0
|   |   | | | `-CompoundStmt 0x2835501ba98 <col:24, line:283:13>
|   |   | | |   `-BinaryOperator 0x2835501ba78 <line:282:17, col:32> 'int' '='
|   |   | | |     |-MemberExpr 0x2835501ba10 <col:17, col:22> 'int' lvalue ->buf_len 0x28355011ea8
|   |   | | |     | `-ImplicitCastExpr 0x2835501b9f8 <col:17> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | | |     |   `-DeclRefExpr 0x2835501b9d8 <col:17> 'BIO_B64_CTX *' lvalue Var 0x283550108f0 'ctx' 'BIO_B64_CTX *'
|   |   | | |     `-ImplicitCastExpr 0x2835501ba60 <col:32> 'int' <LValueToRValue>
|   |   | | |       `-DeclRefExpr 0x2835501ba40 <col:32> 'int' lvalue Var 0x2835501a8d0 'z' 'int'
|   |   | | `-BinaryOperator 0x2835501bb20 <line:284:13, col:17> 'int' '='
|   |   | |   |-DeclRefExpr 0x2835501bac8 <col:13> 'int' lvalue Var 0x28355010468 'i' 'int'
|   |   | |   `-ImplicitCastExpr 0x2835501bb08 <col:17> 'int' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x2835501bae8 <col:17> 'int' lvalue Var 0x2835501a8d0 'z' 'int'
|   |   | `-CompoundStmt 0x2835501be48 <line:285:16, line:290:9>
|   |   |   `-BinaryOperator 0x2835501be28 <line:289:13, col:28> 'int' '='
|   |   |     |-MemberExpr 0x2835501bdd0 <col:13, col:18> 'int' lvalue ->tmp_len 0x28355011f88
|   |   |     | `-ImplicitCastExpr 0x2835501bdb8 <col:13> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |     |   `-DeclRefExpr 0x2835501bd98 <col:13> 'BIO_B64_CTX *' lvalue Var 0x283550108f0 'ctx' 'BIO_B64_CTX *'
|   |   |     `-IntegerLiteral 0x2835501be00 <col:28> 'int' 0
|   |   |-BinaryOperator 0x2835501bf40 <line:297:9, col:21> 'int' '='
|   |   | |-MemberExpr 0x2835501bed8 <col:9, col:14> 'int' lvalue ->cont 0x28355013168
|   |   | | `-ImplicitCastExpr 0x2835501bec0 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2835501bea0 <col:9> 'BIO_B64_CTX *' lvalue Var 0x283550108f0 'ctx' 'BIO_B64_CTX *'
|   |   | `-ImplicitCastExpr 0x2835501bf28 <col:21> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x2835501bf08 <col:21> 'int' lvalue Var 0x28355010468 'i' 'int'
|   |   |-BinaryOperator 0x2835501bff0 <line:299:9, col:24> 'int' '='
|   |   | |-MemberExpr 0x2835501bf98 <col:9, col:14> 'int' lvalue ->buf_off 0x28355011f18
|   |   | | `-ImplicitCastExpr 0x2835501bf80 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2835501bf60 <col:9> 'BIO_B64_CTX *' lvalue Var 0x283550108f0 'ctx' 'BIO_B64_CTX *'
|   |   | `-IntegerLiteral 0x2835501bfc8 <col:24> 'int' 0
|   |   |-IfStmt 0x28355023270 <line:300:9, line:304:9>
|   |   | |-BinaryOperator 0x2835501c070 <line:300:13, col:17> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x2835501c058 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x2835501c010 <col:13> 'int' lvalue Var 0x28355010468 'i' 'int'
|   |   | | `-IntegerLiteral 0x2835501c030 <col:17> 'int' 0
|   |   | `-CompoundStmt 0x28355023248 <col:20, line:304:9>
|   |   |   |-BinaryOperator 0x28355023170 <line:301:13, col:24> 'int' '='
|   |   |   | |-DeclRefExpr 0x2835501c090 <col:13> 'int' lvalue Var 0x283550107e8 'ret_code' 'int'
|   |   |   | `-IntegerLiteral 0x2835501c0b0 <col:24> 'int' 0
|   |   |   |-BinaryOperator 0x28355023220 <line:302:13, col:28> 'int' '='
|   |   |   | |-MemberExpr 0x283550231c8 <col:13, col:18> 'int' lvalue ->buf_len 0x28355011ea8
|   |   |   | | `-ImplicitCastExpr 0x283550231b0 <col:13> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x28355023190 <col:13> 'BIO_B64_CTX *' lvalue Var 0x283550108f0 'ctx' 'BIO_B64_CTX *'
|   |   |   | `-IntegerLiteral 0x283550231f8 <col:28> 'int' 0
|   |   |   `-BreakStmt 0x28355023240 <line:303:13>
|   |   |-IfStmt 0x28355023498 <line:306:9, line:309:17> has_else
|   |   | |-BinaryOperator 0x28355023340 <line:306:13, col:29> 'int' '<='
|   |   | | |-ImplicitCastExpr 0x28355023310 <col:13, col:18> 'int' <LValueToRValue>
|   |   | | | `-MemberExpr 0x283550232c0 <col:13, col:18> 'int' lvalue ->buf_len 0x28355011ea8
|   |   | | |   `-ImplicitCastExpr 0x283550232a8 <col:13> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x28355023288 <col:13> 'BIO_B64_CTX *' lvalue Var 0x283550108f0 'ctx' 'BIO_B64_CTX *'
|   |   | | `-ImplicitCastExpr 0x28355023328 <col:29> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x283550232f0 <col:29> 'int' lvalue ParmVar 0x28355010230 'outl' 'int'
|   |   | |-BinaryOperator 0x28355023400 <line:307:13, col:22> 'int' '='
|   |   | | |-DeclRefExpr 0x28355023360 <col:13> 'int' lvalue Var 0x28355010468 'i' 'int'
|   |   | | `-ImplicitCastExpr 0x283550233e8 <col:17, col:22> 'int' <LValueToRValue>
|   |   | |   `-MemberExpr 0x283550233b8 <col:17, col:22> 'int' lvalue ->buf_len 0x28355011ea8
|   |   | |     `-ImplicitCastExpr 0x283550233a0 <col:17> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x28355023380 <col:17> 'BIO_B64_CTX *' lvalue Var 0x283550108f0 'ctx' 'BIO_B64_CTX *'
|   |   | `-BinaryOperator 0x28355023478 <line:309:13, col:17> 'int' '='
|   |   |   |-DeclRefExpr 0x28355023420 <col:13> 'int' lvalue Var 0x28355010468 'i' 'int'
|   |   |   `-ImplicitCastExpr 0x28355023460 <col:17> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x28355023440 <col:17> 'int' lvalue ParmVar 0x28355010230 'outl' 'int'
|   |   |-CompoundAssignOperator 0x283550235b0 <line:312:9, col:16> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-DeclRefExpr 0x28355023558 <col:9> 'int' lvalue Var 0x283550103c0 'ret' 'int'
|   |   | `-ImplicitCastExpr 0x28355023598 <col:16> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x28355023578 <col:16> 'int' lvalue Var 0x28355010468 'i' 'int'
|   |   |-BinaryOperator 0x28355023680 <line:313:9, col:24> 'int' '='
|   |   | |-MemberExpr 0x28355023618 <col:9, col:14> 'int' lvalue ->buf_off 0x28355011f18
|   |   | | `-ImplicitCastExpr 0x28355023600 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x283550235e0 <col:9> 'BIO_B64_CTX *' lvalue Var 0x283550108f0 'ctx' 'BIO_B64_CTX *'
|   |   | `-ImplicitCastExpr 0x28355023668 <col:24> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x28355023648 <col:24> 'int' lvalue Var 0x28355010468 'i' 'int'
|   |   |-IfStmt 0x28355023940 <line:314:9, line:317:9>
|   |   | |-BinaryOperator 0x283550237a0 <line:314:13, col:34> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x28355023770 <col:13, col:18> 'int' <LValueToRValue>
|   |   | | | `-MemberExpr 0x283550236d8 <col:13, col:18> 'int' lvalue ->buf_off 0x28355011f18
|   |   | | |   `-ImplicitCastExpr 0x283550236c0 <col:13> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x283550236a0 <col:13> 'BIO_B64_CTX *' lvalue Var 0x283550108f0 'ctx' 'BIO_B64_CTX *'
|   |   | | `-ImplicitCastExpr 0x28355023788 <col:29, col:34> 'int' <LValueToRValue>
|   |   | |   `-MemberExpr 0x28355023740 <col:29, col:34> 'int' lvalue ->buf_len 0x28355011ea8
|   |   | |     `-ImplicitCastExpr 0x28355023728 <col:29> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x28355023708 <col:29> 'BIO_B64_CTX *' lvalue Var 0x283550108f0 'ctx' 'BIO_B64_CTX *'
|   |   | `-CompoundStmt 0x28355023920 <col:43, line:317:9>
|   |   |   |-BinaryOperator 0x28355023850 <line:315:13, col:28> 'int' '='
|   |   |   | |-MemberExpr 0x283550237f8 <col:13, col:18> 'int' lvalue ->buf_len 0x28355011ea8
|   |   |   | | `-ImplicitCastExpr 0x283550237e0 <col:13> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x283550237c0 <col:13> 'BIO_B64_CTX *' lvalue Var 0x283550108f0 'ctx' 'BIO_B64_CTX *'
|   |   |   | `-IntegerLiteral 0x28355023828 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x28355023900 <line:316:13, col:28> 'int' '='
|   |   |     |-MemberExpr 0x283550238a8 <col:13, col:18> 'int' lvalue ->buf_off 0x28355011f18
|   |   |     | `-ImplicitCastExpr 0x28355023890 <col:13> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |     |   `-DeclRefExpr 0x28355023870 <col:13> 'BIO_B64_CTX *' lvalue Var 0x283550108f0 'ctx' 'BIO_B64_CTX *'
|   |   |     `-IntegerLiteral 0x283550238d8 <col:28> 'int' 0
|   |   |-CompoundAssignOperator 0x283550239b0 <line:318:9, col:17> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-DeclRefExpr 0x28355023958 <col:9> 'int' lvalue ParmVar 0x28355010230 'outl' 'int'
|   |   | `-ImplicitCastExpr 0x28355023998 <col:17> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x28355023978 <col:17> 'int' lvalue Var 0x28355010468 'i' 'int'
|   |   `-CompoundAssignOperator 0x28355023a38 <line:319:9, col:16> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
|   |     |-DeclRefExpr 0x283550239e0 <col:9> 'char *' lvalue ParmVar 0x283550101b0 'out' 'char *'
|   |     `-ImplicitCastExpr 0x28355023a20 <col:16> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x28355023a00 <col:16> 'int' lvalue Var 0x28355010468 'i' 'int'
|   `-ReturnStmt 0x28355023d78 <line:323:5, col:40>
|     `-ParenExpr 0x28355023d58 <col:12, col:40> 'int'
|       `-ConditionalOperator 0x28355023d28 <col:13, col:37> 'int'
|         |-ParenExpr 0x28355023c98 <col:13, col:22> 'int'
|         | `-BinaryOperator 0x28355023c78 <col:14, col:21> 'int' '=='
|         |   |-ImplicitCastExpr 0x28355023c60 <col:14> 'int' <LValueToRValue>
|         |   | `-DeclRefExpr 0x28355023c18 <col:14> 'int' lvalue Var 0x283550103c0 'ret' 'int'
|         |   `-IntegerLiteral 0x28355023c38 <col:21> 'int' 0
|         |-ImplicitCastExpr 0x28355023cf8 <col:26> 'int' <LValueToRValue>
|         | `-DeclRefExpr 0x28355023cb8 <col:26> 'int' lvalue Var 0x283550107e8 'ret_code' 'int'
|         `-ImplicitCastExpr 0x28355023d10 <col:37> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x28355023cd8 <col:37> 'int' lvalue Var 0x283550103c0 'ret' 'int'
|-FunctionDecl 0x28355018e20 <line:140:9> col:9 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x28355018ec0 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x28355018f28 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x28355018f90 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2835501b258 <line:277:17> col:17 implicit used memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x2835501b2f8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x2835501b360 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x2835501b3c8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x28355023fa8 <line:326:1, line:444:1> line:326:12 invalid b64_write 'int (int *, const char *, int)' static
| |-ParmVarDecl 0x28355023e00 <col:22, col:27> col:27 invalid b 'int *'
| |-ParmVarDecl 0x28355023e80 <col:30, col:42> col:42 used in 'const char *'
| |-ParmVarDecl 0x28355023f00 <col:46, col:50> col:50 used inl 'int'
| `-CompoundStmt 0x28355022b50 <line:327:1, line:444:1>
|   |-DeclStmt 0x28355024120 <line:328:5, col:16>
|   | `-VarDecl 0x28355024090 <col:5, col:15> col:9 used ret 'int' cinit
|   |   `-IntegerLiteral 0x283550240f8 <col:15> 'int' 0
|   |-DeclStmt 0x2835501c168 <line:329:5, col:10>
|   | `-VarDecl 0x2835501c100 <col:5, col:9> col:9 used n 'int'
|   |-DeclStmt 0x2835501c200 <line:330:5, col:10>
|   | `-VarDecl 0x2835501c198 <col:5, col:9> col:9 used i 'int'
|   |-DeclStmt 0x2835501c290 <line:331:5, col:21>
|   | `-VarDecl 0x2835501c228 <col:5, col:18> col:18 used ctx 'BIO_B64_CTX *'
|   |-IfStmt 0x2835501c510 <line:336:5, line:337:16>
|   | |-OpaqueValueExpr 0x2835501c4f8 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x2835501c4e8 <col:9, col:16>
|   |   `-IntegerLiteral 0x2835501c4c0 <col:16> 'int' 0
|   |-IfStmt 0x2835501ca48 <line:341:5, line:347:5>
|   | |-BinaryOperator 0x2835501c5f0 <line:341:9, line:30:25> 'int' '!='
|   | | |-ImplicitCastExpr 0x2835501c5d8 <line:341:9, col:14> 'int' <LValueToRValue>
|   | | | `-MemberExpr 0x2835501c580 <col:9, col:14> 'int' lvalue ->encode 0x28355013088
|   | | |   `-ImplicitCastExpr 0x2835501c568 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x2835501c548 <col:9> 'BIO_B64_CTX *' lvalue Var 0x2835501c228 'ctx' 'BIO_B64_CTX *'
|   | | `-IntegerLiteral 0x2835501c5b0 <line:30:25> 'int' 1
|   | `-CompoundStmt 0x2835501ca18 <line:341:36, line:347:5>
|   |   |-BinaryOperator 0x2835501c6a0 <line:342:9, line:30:25> 'int' '='
|   |   | |-MemberExpr 0x2835501c648 <line:342:9, col:14> 'int' lvalue ->encode 0x28355013088
|   |   | | `-ImplicitCastExpr 0x2835501c630 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2835501c610 <col:9> 'BIO_B64_CTX *' lvalue Var 0x2835501c228 'ctx' 'BIO_B64_CTX *'
|   |   | `-IntegerLiteral 0x2835501c678 <line:30:25> 'int' 1
|   |   |-BinaryOperator 0x2835501c750 <line:343:9, col:24> 'int' '='
|   |   | |-MemberExpr 0x2835501c6f8 <col:9, col:14> 'int' lvalue ->buf_len 0x28355011ea8
|   |   | | `-ImplicitCastExpr 0x2835501c6e0 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2835501c6c0 <col:9> 'BIO_B64_CTX *' lvalue Var 0x2835501c228 'ctx' 'BIO_B64_CTX *'
|   |   | `-IntegerLiteral 0x2835501c728 <col:24> 'int' 0
|   |   |-BinaryOperator 0x2835501c800 <line:344:9, col:24> 'int' '='
|   |   | |-MemberExpr 0x2835501c7a8 <col:9, col:14> 'int' lvalue ->buf_off 0x28355011f18
|   |   | | `-ImplicitCastExpr 0x2835501c790 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2835501c770 <col:9> 'BIO_B64_CTX *' lvalue Var 0x2835501c228 'ctx' 'BIO_B64_CTX *'
|   |   | `-IntegerLiteral 0x2835501c7d8 <col:24> 'int' 0
|   |   `-BinaryOperator 0x2835501c8b0 <line:345:9, col:24> 'int' '='
|   |     |-MemberExpr 0x2835501c858 <col:9, col:14> 'int' lvalue ->tmp_len 0x28355011f88
|   |     | `-ImplicitCastExpr 0x2835501c840 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x2835501c820 <col:9> 'BIO_B64_CTX *' lvalue Var 0x2835501c228 'ctx' 'BIO_B64_CTX *'
|   |     `-IntegerLiteral 0x2835501c888 <col:24> 'int' 0
|   |-CallExpr 0x2835501cd38 <line:351:5, col:48> 'int'
|   | |-ImplicitCastExpr 0x2835501cd20 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x2835501cbe0 <col:5> 'int ()' Function 0x283550187b0 'OPENSSL_assert' 'int ()'
|   | `-BinaryOperator 0x2835501cd00 <col:20, col:41> 'int' '>='
|   |   |-ImplicitCastExpr 0x2835501ccd0 <col:20, col:25> 'int' <LValueToRValue>
|   |   | `-MemberExpr 0x2835501cc38 <col:20, col:25> 'int' lvalue ->buf_len 0x28355011ea8
|   |   |   `-ImplicitCastExpr 0x2835501cc20 <col:20> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x2835501cc00 <col:20> 'BIO_B64_CTX *' lvalue Var 0x2835501c228 'ctx' 'BIO_B64_CTX *'
|   |   `-ImplicitCastExpr 0x2835501cce8 <col:36, col:41> 'int' <LValueToRValue>
|   |     `-MemberExpr 0x2835501cca0 <col:36, col:41> 'int' lvalue ->buf_off 0x28355011f18
|   |       `-ImplicitCastExpr 0x2835501cc88 <col:36> 'BIO_B64_CTX *' <LValueToRValue>
|   |         `-DeclRefExpr 0x2835501cc68 <col:36> 'BIO_B64_CTX *' lvalue Var 0x2835501c228 'ctx' 'BIO_B64_CTX *'
|   |-BinaryOperator 0x2835501ceb8 <line:352:5, col:29> 'int' '='
|   | |-DeclRefExpr 0x2835501cd60 <col:5> 'int' lvalue Var 0x2835501c100 'n' 'int'
|   | `-BinaryOperator 0x2835501ce98 <col:9, col:29> 'int' '-'
|   |   |-ImplicitCastExpr 0x2835501ce68 <col:9, col:14> 'int' <LValueToRValue>
|   |   | `-MemberExpr 0x2835501cdd0 <col:9, col:14> 'int' lvalue ->buf_len 0x28355011ea8
|   |   |   `-ImplicitCastExpr 0x2835501cdb8 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x2835501cd98 <col:9> 'BIO_B64_CTX *' lvalue Var 0x2835501c228 'ctx' 'BIO_B64_CTX *'
|   |   `-ImplicitCastExpr 0x2835501ce80 <col:24, col:29> 'int' <LValueToRValue>
|   |     `-MemberExpr 0x2835501ce38 <col:24, col:29> 'int' lvalue ->buf_off 0x28355011f18
|   |       `-ImplicitCastExpr 0x2835501ce20 <col:24> 'BIO_B64_CTX *' <LValueToRValue>
|   |         `-DeclRefExpr 0x2835501ce00 <col:24> 'BIO_B64_CTX *' lvalue Var 0x2835501c228 'ctx' 'BIO_B64_CTX *'
|   |-WhileStmt 0x2835501e780 <line:353:5, line:364:5>
|   | |-BinaryOperator 0x2835501cf38 <line:353:12, col:16> 'int' '>'
|   | | |-ImplicitCastExpr 0x2835501cf20 <col:12> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2835501ced8 <col:12> 'int' lvalue Var 0x2835501c100 'n' 'int'
|   | | `-IntegerLiteral 0x2835501cef8 <col:16> 'int' 0
|   | `-CompoundStmt 0x2835501e748 <col:19, line:364:5>
|   |   |-IfStmt 0x2835501e2a8 <line:355:9, line:358:9>
|   |   | |-BinaryOperator 0x2835501e1e8 <line:355:13, col:18> 'int' '<='
|   |   | | |-ImplicitCastExpr 0x2835501e1d0 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x2835501e188 <col:13> 'int' lvalue Var 0x2835501c198 'i' 'int'
|   |   | | `-IntegerLiteral 0x2835501e1a8 <col:18> 'int' 0
|   |   | `-CompoundStmt 0x2835501e290 <col:21, line:358:9>
|   |   |   `-ReturnStmt 0x2835501e280 <line:357:13, col:22>
|   |   |     `-ImplicitCastExpr 0x2835501e268 <col:20, col:22> 'int' <LValueToRValue>
|   |   |       `-ParenExpr 0x2835501e248 <col:20, col:22> 'int' lvalue
|   |   |         `-DeclRefExpr 0x2835501e228 <col:21> 'int' lvalue Var 0x2835501c198 'i' 'int'
|   |   |-CallExpr 0x2835501e388 <line:359:9, col:30> 'int'
|   |   | |-ImplicitCastExpr 0x2835501e370 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x2835501e2c0 <col:9> 'int ()' Function 0x283550187b0 'OPENSSL_assert' 'int ()'
|   |   | `-BinaryOperator 0x2835501e350 <col:24, col:29> 'int' '<='
|   |   |   |-ImplicitCastExpr 0x2835501e320 <col:24> 'int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x2835501e2e0 <col:24> 'int' lvalue Var 0x2835501c198 'i' 'int'
|   |   |   `-ImplicitCastExpr 0x2835501e338 <col:29> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x2835501e300 <col:29> 'int' lvalue Var 0x2835501c100 'n' 'int'
|   |   |-CompoundAssignOperator 0x2835501e450 <line:360:9, col:25> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-MemberExpr 0x2835501e3e8 <col:9, col:14> 'int' lvalue ->buf_off 0x28355011f18
|   |   | | `-ImplicitCastExpr 0x2835501e3d0 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2835501e3b0 <col:9> 'BIO_B64_CTX *' lvalue Var 0x2835501c228 'ctx' 'BIO_B64_CTX *'
|   |   | `-ImplicitCastExpr 0x2835501e438 <col:25> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x2835501e418 <col:25> 'int' lvalue Var 0x2835501c198 'i' 'int'
|   |   |-CallExpr 0x2835501e698 <line:362:9, col:52> 'int'
|   |   | |-ImplicitCastExpr 0x2835501e680 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x2835501e540 <col:9> 'int ()' Function 0x283550187b0 'OPENSSL_assert' 'int ()'
|   |   | `-BinaryOperator 0x2835501e660 <col:24, col:45> 'int' '>='
|   |   |   |-ImplicitCastExpr 0x2835501e630 <col:24, col:29> 'int' <LValueToRValue>
|   |   |   | `-MemberExpr 0x2835501e598 <col:24, col:29> 'int' lvalue ->buf_len 0x28355011ea8
|   |   |   |   `-ImplicitCastExpr 0x2835501e580 <col:24> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x2835501e560 <col:24> 'BIO_B64_CTX *' lvalue Var 0x2835501c228 'ctx' 'BIO_B64_CTX *'
|   |   |   `-ImplicitCastExpr 0x2835501e648 <col:40, col:45> 'int' <LValueToRValue>
|   |   |     `-MemberExpr 0x2835501e600 <col:40, col:45> 'int' lvalue ->buf_off 0x28355011f18
|   |   |       `-ImplicitCastExpr 0x2835501e5e8 <col:40> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x2835501e5c8 <col:40> 'BIO_B64_CTX *' lvalue Var 0x2835501c228 'ctx' 'BIO_B64_CTX *'
|   |   `-CompoundAssignOperator 0x2835501e718 <line:363:9, col:14> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     |-DeclRefExpr 0x2835501e6c0 <col:9> 'int' lvalue Var 0x2835501c100 'n' 'int'
|   |     `-ImplicitCastExpr 0x2835501e700 <col:14> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x2835501e6e0 <col:14> 'int' lvalue Var 0x2835501c198 'i' 'int'
|   |-BinaryOperator 0x2835501e828 <line:366:5, col:20> 'int' '='
|   | |-MemberExpr 0x2835501e7d0 <col:5, col:10> 'int' lvalue ->buf_off 0x28355011f18
|   | | `-ImplicitCastExpr 0x2835501e7b8 <col:5> 'BIO_B64_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2835501e798 <col:5> 'BIO_B64_CTX *' lvalue Var 0x2835501c228 'ctx' 'BIO_B64_CTX *'
|   | `-IntegerLiteral 0x2835501e800 <col:20> 'int' 0
|   |-BinaryOperator 0x2835501e8d8 <line:367:5, col:20> 'int' '='
|   | |-MemberExpr 0x2835501e880 <col:5, col:10> 'int' lvalue ->buf_len 0x28355011ea8
|   | | `-ImplicitCastExpr 0x2835501e868 <col:5> 'BIO_B64_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2835501e848 <col:5> 'BIO_B64_CTX *' lvalue Var 0x2835501c228 'ctx' 'BIO_B64_CTX *'
|   | `-IntegerLiteral 0x2835501e8b0 <col:20> 'int' 0
|   |-IfStmt 0x2835501eb58 <line:369:5, line:370:18>
|   | |-BinaryOperator 0x2835501eae0 <line:369:9, col:34> 'int' '||'
|   | | |-ParenExpr 0x2835501ea08 <col:9, col:20> 'int'
|   | | | `-BinaryOperator 0x2835501e9e8 <col:10, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |   |-ImplicitCastExpr 0x2835501e9b8 <.//openssl//file_jk/before\crypto\evp\bio_b64.c:369:10> 'const char *' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x2835501e8f8 <col:10> 'const char *' lvalue ParmVar 0x28355023e80 'in' 'const char *'
|   | | |   `-ImplicitCastExpr 0x2835501e9d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   | | |     `-ParenExpr 0x2835501e998 <col:17, col:27> 'void *'
|   | | |       `-CStyleCastExpr 0x2835501e970 <col:18, col:26> 'void *' <NullToPointer>
|   | | |         `-IntegerLiteral 0x2835501e930 <col:26> 'int' 0
|   | | `-ParenExpr 0x2835501eac0 <.//openssl//file_jk/before\crypto\evp\bio_b64.c:369:25, col:34> 'int'
|   | |   `-BinaryOperator 0x2835501eaa0 <col:26, col:33> 'int' '<='
|   | |     |-ImplicitCastExpr 0x2835501ea88 <col:26> 'int' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x2835501ea28 <col:26> 'int' lvalue ParmVar 0x28355023f00 'inl' 'int'
|   | |     `-IntegerLiteral 0x2835501ea60 <col:33> 'int' 0
|   | `-ReturnStmt 0x2835501eb48 <line:370:9, col:18>
|   |   `-ParenExpr 0x2835501eb28 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x2835501eb00 <col:17> 'int' 0
|   |-WhileStmt 0x28355022ad0 <line:372:5, line:442:5>
|   | |-BinaryOperator 0x2835501ebd0 <line:372:12, col:18> 'int' '>'
|   | | |-ImplicitCastExpr 0x2835501ebb8 <col:12> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2835501eb70 <col:12> 'int' lvalue ParmVar 0x28355023f00 'inl' 'int'
|   | | `-IntegerLiteral 0x2835501eb90 <col:18> 'int' 0
|   | `-CompoundStmt 0x28355022a78 <col:21, line:442:5>
|   |   |-BinaryOperator 0x2835501ed40 <line:373:9, col:55> 'int' '='
|   |   | |-DeclRefExpr 0x2835501ebf0 <col:9> 'int' lvalue Var 0x2835501c100 'n' 'int'
|   |   | `-ConditionalOperator 0x2835501ed10 <col:13, col:55> 'int'
|   |   |   |-ParenExpr 0x2835501ec90 <col:13, col:34> 'int'
|   |   |   | `-BinaryOperator 0x2835501ec70 <col:14, line:27:25> 'int' '>'
|   |   |   |   |-ImplicitCastExpr 0x2835501ec58 <line:373:14> 'int' <LValueToRValue>
|   |   |   |   | `-DeclRefExpr 0x2835501ec10 <col:14> 'int' lvalue ParmVar 0x28355023f00 'inl' 'int'
|   |   |   |   `-IntegerLiteral 0x2835501ec30 <line:27:25> 'int' 1024
|   |   |   |-IntegerLiteral 0x2835501ecb0 <col:25> 'int' 1024
|   |   |   `-ImplicitCastExpr 0x2835501ecf8 <line:373:55> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x2835501ecd8 <col:55> 'int' lvalue ParmVar 0x28355023f00 'inl' 'int'
|   |   |-IfStmt 0x2835501fd98 <line:375:9, line:422:9> has_else
|   |   | |-OpaqueValueExpr 0x2835501fd80 <<invalid sloc>> '_Bool'
|   |   | |-CompoundStmt 0x2835501f638 <line:375:56, line:414:9>
|   |   | | `-IfStmt 0x2835501f610 <line:376:13, line:413:13> has_else
|   |   | |   |-BinaryOperator 0x2835501ee28 <line:376:17, col:32> 'int' '>'
|   |   | |   | |-ImplicitCastExpr 0x2835501ee10 <col:17, col:22> 'int' <LValueToRValue>
|   |   | |   | | `-MemberExpr 0x2835501edb8 <col:17, col:22> 'int' lvalue ->tmp_len 0x28355011f88
|   |   | |   | |   `-ImplicitCastExpr 0x2835501eda0 <col:17> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   | |     `-DeclRefExpr 0x2835501ed80 <col:17> 'BIO_B64_CTX *' lvalue Var 0x2835501c228 'ctx' 'BIO_B64_CTX *'
|   |   | |   | `-IntegerLiteral 0x2835501ede8 <col:32> 'int' 0
|   |   | |   |-CompoundStmt 0x28355024ce0 <col:35, line:399:13>
|   |   | |   | |-CallExpr 0x2835501ef48 <line:377:17, col:49> 'int'
|   |   | |   | | |-ImplicitCastExpr 0x2835501ef30 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |   | |   | | | `-DeclRefExpr 0x2835501ee48 <col:17> 'int ()' Function 0x283550187b0 'OPENSSL_assert' 'int ()'
|   |   | |   | | `-BinaryOperator 0x2835501ef10 <col:32, col:48> 'int' '<='
|   |   | |   | |   |-ImplicitCastExpr 0x2835501eef8 <col:32, col:37> 'int' <LValueToRValue>
|   |   | |   | |   | `-MemberExpr 0x2835501eea0 <col:32, col:37> 'int' lvalue ->tmp_len 0x28355011f88
|   |   | |   | |   |   `-ImplicitCastExpr 0x2835501ee88 <col:32> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   | |   |     `-DeclRefExpr 0x2835501ee68 <col:32> 'BIO_B64_CTX *' lvalue Var 0x2835501c228 'ctx' 'BIO_B64_CTX *'
|   |   | |   | |   `-IntegerLiteral 0x2835501eed0 <col:48> 'int' 3
|   |   | |   | |-BinaryOperator 0x2835501f058 <line:378:17, col:30> 'int' '='
|   |   | |   | | |-DeclRefExpr 0x2835501ef70 <col:17> 'int' lvalue Var 0x2835501c100 'n' 'int'
|   |   | |   | | `-BinaryOperator 0x2835501f038 <col:21, col:30> 'int' '-'
|   |   | |   | |   |-IntegerLiteral 0x2835501ef90 <col:21> 'int' 3
|   |   | |   | |   `-ImplicitCastExpr 0x2835501f020 <col:25, col:30> 'int' <LValueToRValue>
|   |   | |   | |     `-MemberExpr 0x2835501eff0 <col:25, col:30> 'int' lvalue ->tmp_len 0x28355011f88
|   |   | |   | |       `-ImplicitCastExpr 0x2835501efd8 <col:25> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   | |         `-DeclRefExpr 0x2835501efb8 <col:25> 'BIO_B64_CTX *' lvalue Var 0x2835501c228 'ctx' 'BIO_B64_CTX *'
|   |   | |   | |-IfStmt 0x283550241f8 <line:382:17, line:383:25>
|   |   | |   | | |-BinaryOperator 0x2835501f0e8 <line:382:21, col:25> 'int' '>'
|   |   | |   | | | |-ImplicitCastExpr 0x2835501f0b8 <col:21> 'int' <LValueToRValue>
|   |   | |   | | | | `-DeclRefExpr 0x2835501f078 <col:21> 'int' lvalue Var 0x2835501c100 'n' 'int'
|   |   | |   | | | `-ImplicitCastExpr 0x2835501f0d0 <col:25> 'int' <LValueToRValue>
|   |   | |   | | |   `-DeclRefExpr 0x2835501f098 <col:25> 'int' lvalue ParmVar 0x28355023f00 'inl' 'int'
|   |   | |   | | `-BinaryOperator 0x283550241d8 <line:383:21, col:25> 'int' '='
|   |   | |   | |   |-DeclRefExpr 0x28355024180 <col:21> 'int' lvalue Var 0x2835501c100 'n' 'int'
|   |   | |   | |   `-ImplicitCastExpr 0x283550241c0 <col:25> 'int' <LValueToRValue>
|   |   | |   | |     `-DeclRefExpr 0x283550241a0 <col:25> 'int' lvalue ParmVar 0x28355023f00 'inl' 'int'
|   |   | |   | |-CallExpr 0x28355024410 <line:384:17, col:56> 'void *'
|   |   | |   | | |-ImplicitCastExpr 0x283550243f8 <col:17> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   |   | |   | | | `-DeclRefExpr 0x28355024210 <col:17> 'void *(void *, const void *, unsigned long long)' Function 0x28355018e20 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   |   | |   | | |-ImplicitCastExpr 0x28355024448 <col:24, col:48> 'void *' <BitCast>
|   |   | |   | | | `-UnaryOperator 0x28355024370 <col:24, col:48> 'char *' prefix '&' cannot overflow
|   |   | |   | | |   `-ParenExpr 0x28355024350 <col:25, col:48> 'char' lvalue
|   |   | |   | | |     `-ArraySubscriptExpr 0x28355024330 <col:26, col:47> 'char' lvalue
|   |   | |   | | |       |-ImplicitCastExpr 0x28355024300 <col:26, col:31> 'char *' <ArrayToPointerDecay>
|   |   | |   | | |       | `-MemberExpr 0x28355024268 <col:26, col:31> 'char [1024]' lvalue ->tmp 0x28355013598
|   |   | |   | | |       |   `-ImplicitCastExpr 0x28355024250 <col:26> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   | | |       |     `-DeclRefExpr 0x28355024230 <col:26> 'BIO_B64_CTX *' lvalue Var 0x2835501c228 'ctx' 'BIO_B64_CTX *'
|   |   | |   | | |       `-ImplicitCastExpr 0x28355024318 <col:35, col:40> 'int' <LValueToRValue>
|   |   | |   | | |         `-MemberExpr 0x283550242d0 <col:35, col:40> 'int' lvalue ->tmp_len 0x28355011f88
|   |   | |   | | |           `-ImplicitCastExpr 0x283550242b8 <col:35> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   | | |             `-DeclRefExpr 0x28355024298 <col:35> 'BIO_B64_CTX *' lvalue Var 0x2835501c228 'ctx' 'BIO_B64_CTX *'
|   |   | |   | | |-ImplicitCastExpr 0x28355024478 <col:51> 'const void *' <BitCast>
|   |   | |   | | | `-ImplicitCastExpr 0x28355024460 <col:51> 'const char *' <LValueToRValue>
|   |   | |   | | |   `-DeclRefExpr 0x28355024388 <col:51> 'const char *' lvalue ParmVar 0x28355023e80 'in' 'const char *'
|   |   | |   | | `-ImplicitCastExpr 0x283550244a8 <col:55> 'unsigned long long' <IntegralCast>
|   |   | |   | |   `-ImplicitCastExpr 0x28355024490 <col:55> 'int' <LValueToRValue>
|   |   | |   | |     `-DeclRefExpr 0x283550243a8 <col:55> 'int' lvalue Var 0x2835501c100 'n' 'int'
|   |   | |   | |-CompoundAssignOperator 0x28355024560 <line:385:17, col:33> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |   | | |-MemberExpr 0x283550244f8 <col:17, col:22> 'int' lvalue ->tmp_len 0x28355011f88
|   |   | |   | | | `-ImplicitCastExpr 0x283550244e0 <col:17> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   | | |   `-DeclRefExpr 0x283550244c0 <col:17> 'BIO_B64_CTX *' lvalue Var 0x2835501c228 'ctx' 'BIO_B64_CTX *'
|   |   | |   | | `-ImplicitCastExpr 0x28355024548 <col:33> 'int' <LValueToRValue>
|   |   | |   | |   `-DeclRefExpr 0x28355024528 <col:33> 'int' lvalue Var 0x2835501c100 'n' 'int'
|   |   | |   | |-CompoundAssignOperator 0x28355024600 <line:386:17, col:24> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |   | | |-DeclRefExpr 0x28355024590 <col:17> 'int' lvalue Var 0x28355024090 'ret' 'int'
|   |   | |   | | `-ImplicitCastExpr 0x283550245e8 <col:24> 'int' <LValueToRValue>
|   |   | |   | |   `-DeclRefExpr 0x283550245c8 <col:24> 'int' lvalue Var 0x2835501c100 'n' 'int'
|   |   | |   | |-IfStmt 0x28355024700 <line:387:17, line:388:21>
|   |   | |   | | |-BinaryOperator 0x283550246d8 <line:387:21, col:36> 'int' '<'
|   |   | |   | | | |-ImplicitCastExpr 0x283550246c0 <col:21, col:26> 'int' <LValueToRValue>
|   |   | |   | | | | `-MemberExpr 0x28355024668 <col:21, col:26> 'int' lvalue ->tmp_len 0x28355011f88
|   |   | |   | | | |   `-ImplicitCastExpr 0x28355024650 <col:21> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   | | | |     `-DeclRefExpr 0x28355024630 <col:21> 'BIO_B64_CTX *' lvalue Var 0x2835501c228 'ctx' 'BIO_B64_CTX *'
|   |   | |   | | | `-IntegerLiteral 0x28355024698 <col:36> 'int' 3
|   |   | |   | | `-BreakStmt 0x283550246f8 <line:388:21>
|   |   | |   | |-CallExpr 0x28355024c08 <line:393:17, col:60> 'int'
|   |   | |   | | |-ImplicitCastExpr 0x28355024bf0 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |   | |   | | | `-DeclRefExpr 0x28355024ab0 <col:17> 'int ()' Function 0x283550187b0 'OPENSSL_assert' 'int ()'
|   |   | |   | | `-BinaryOperator 0x28355024bd0 <col:32, col:53> 'int' '>='
|   |   | |   | |   |-ImplicitCastExpr 0x28355024ba0 <col:32, col:37> 'int' <LValueToRValue>
|   |   | |   | |   | `-MemberExpr 0x28355024b08 <col:32, col:37> 'int' lvalue ->buf_len 0x28355011ea8
|   |   | |   | |   |   `-ImplicitCastExpr 0x28355024af0 <col:32> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   | |   |     `-DeclRefExpr 0x28355024ad0 <col:32> 'BIO_B64_CTX *' lvalue Var 0x2835501c228 'ctx' 'BIO_B64_CTX *'
|   |   | |   | |   `-ImplicitCastExpr 0x28355024bb8 <col:48, col:53> 'int' <LValueToRValue>
|   |   | |   | |     `-MemberExpr 0x28355024b70 <col:48, col:53> 'int' lvalue ->buf_off 0x28355011f18
|   |   | |   | |       `-ImplicitCastExpr 0x28355024b58 <col:48> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   | |         `-DeclRefExpr 0x28355024b38 <col:48> 'BIO_B64_CTX *' lvalue Var 0x2835501c228 'ctx' 'BIO_B64_CTX *'
|   |   | |   | `-BinaryOperator 0x28355024cc0 <line:398:17, col:32> 'int' '='
|   |   | |   |   |-MemberExpr 0x28355024c68 <col:17, col:22> 'int' lvalue ->tmp_len 0x28355011f88
|   |   | |   |   | `-ImplicitCastExpr 0x28355024c50 <col:17> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   |   |   `-DeclRefExpr 0x28355024c30 <col:17> 'BIO_B64_CTX *' lvalue Var 0x2835501c228 'ctx' 'BIO_B64_CTX *'
|   |   | |   |   `-IntegerLiteral 0x28355024c98 <col:32> 'int' 0
|   |   | |   `-CompoundStmt 0x2835501f5e0 <line:399:20, line:413:13>
|   |   | |     |-IfStmt 0x28355025128 <line:400:17, line:405:17>
|   |   | |     | |-BinaryOperator 0x28355024d98 <line:400:21, col:25> 'int' '<'
|   |   | |     | | |-ImplicitCastExpr 0x28355024d80 <col:21> 'int' <LValueToRValue>
|   |   | |     | | | `-DeclRefExpr 0x28355024d38 <col:21> 'int' lvalue Var 0x2835501c100 'n' 'int'
|   |   | |     | | `-IntegerLiteral 0x28355024d58 <col:25> 'int' 3
|   |   | |     | `-CompoundStmt 0x283550250f8 <col:28, line:405:17>
|   |   | |     |   |-CallExpr 0x28355024ee0 <line:401:21, col:43> 'void *'
|   |   | |     |   | |-ImplicitCastExpr 0x28355024ec8 <col:21> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   |   | |     |   | | `-DeclRefExpr 0x28355024db8 <col:21> 'void *(void *, const void *, unsigned long long)' Function 0x28355018e20 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   |   | |     |   | |-ImplicitCastExpr 0x28355024f30 <col:28, col:33> 'void *' <BitCast>
|   |   | |     |   | | `-ImplicitCastExpr 0x28355024f18 <col:28, col:33> 'char *' <ArrayToPointerDecay>
|   |   | |     |   | |   `-MemberExpr 0x28355024e10 <col:28, col:33> 'char [1024]' lvalue ->tmp 0x28355013598
|   |   | |     |   | |     `-ImplicitCastExpr 0x28355024df8 <col:28> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |     |   | |       `-DeclRefExpr 0x28355024dd8 <col:28> 'BIO_B64_CTX *' lvalue Var 0x2835501c228 'ctx' 'BIO_B64_CTX *'
|   |   | |     |   | |-ImplicitCastExpr 0x28355024f60 <col:38> 'const void *' <BitCast>
|   |   | |     |   | | `-ImplicitCastExpr 0x28355024f48 <col:38> 'const char *' <LValueToRValue>
|   |   | |     |   | |   `-DeclRefExpr 0x28355024e40 <col:38> 'const char *' lvalue ParmVar 0x28355023e80 'in' 'const char *'
|   |   | |     |   | `-ImplicitCastExpr 0x28355024f90 <col:42> 'unsigned long long' <IntegralCast>
|   |   | |     |   |   `-ImplicitCastExpr 0x28355024f78 <col:42> 'int' <LValueToRValue>
|   |   | |     |   |     `-DeclRefExpr 0x28355024e60 <col:42> 'int' lvalue Var 0x2835501c100 'n' 'int'
|   |   | |     |   |-BinaryOperator 0x28355025048 <line:402:21, col:36> 'int' '='
|   |   | |     |   | |-MemberExpr 0x28355024fe0 <col:21, col:26> 'int' lvalue ->tmp_len 0x28355011f88
|   |   | |     |   | | `-ImplicitCastExpr 0x28355024fc8 <col:21> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |     |   | |   `-DeclRefExpr 0x28355024fa8 <col:21> 'BIO_B64_CTX *' lvalue Var 0x2835501c228 'ctx' 'BIO_B64_CTX *'
|   |   | |     |   | `-ImplicitCastExpr 0x28355025030 <col:36> 'int' <LValueToRValue>
|   |   | |     |   |   `-DeclRefExpr 0x28355025010 <col:36> 'int' lvalue Var 0x2835501c100 'n' 'int'
|   |   | |     |   |-CompoundAssignOperator 0x283550250c0 <line:403:21, col:28> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |     |   | |-DeclRefExpr 0x28355025068 <col:21> 'int' lvalue Var 0x28355024090 'ret' 'int'
|   |   | |     |   | `-ImplicitCastExpr 0x283550250a8 <col:28> 'int' <LValueToRValue>
|   |   | |     |   |   `-DeclRefExpr 0x28355025088 <col:28> 'int' lvalue Var 0x2835501c100 'n' 'int'
|   |   | |     |   `-BreakStmt 0x283550250f0 <line:404:21>
|   |   | |     |-CompoundAssignOperator 0x2835501f190 <line:406:17, col:26> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |     | |-DeclRefExpr 0x28355025140 <col:17> 'int' lvalue Var 0x2835501c100 'n' 'int'
|   |   | |     | `-BinaryOperator 0x2835501f170 <col:22, col:26> 'int' '%'
|   |   | |     |   |-ImplicitCastExpr 0x2835501f158 <col:22> 'int' <LValueToRValue>
|   |   | |     |   | `-DeclRefExpr 0x28355025160 <col:22> 'int' lvalue Var 0x2835501c100 'n' 'int'
|   |   | |     |   `-IntegerLiteral 0x2835501f130 <col:26> 'int' 3
|   |   | |     |-CallExpr 0x2835501f530 <line:411:17, col:60> 'int'
|   |   | |     | |-ImplicitCastExpr 0x2835501f518 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |   | |     | | `-DeclRefExpr 0x2835501f3d8 <col:17> 'int ()' Function 0x283550187b0 'OPENSSL_assert' 'int ()'
|   |   | |     | `-BinaryOperator 0x2835501f4f8 <col:32, col:53> 'int' '>='
|   |   | |     |   |-ImplicitCastExpr 0x2835501f4c8 <col:32, col:37> 'int' <LValueToRValue>
|   |   | |     |   | `-MemberExpr 0x2835501f430 <col:32, col:37> 'int' lvalue ->buf_len 0x28355011ea8
|   |   | |     |   |   `-ImplicitCastExpr 0x2835501f418 <col:32> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |     |   |     `-DeclRefExpr 0x2835501f3f8 <col:32> 'BIO_B64_CTX *' lvalue Var 0x2835501c228 'ctx' 'BIO_B64_CTX *'
|   |   | |     |   `-ImplicitCastExpr 0x2835501f4e0 <col:48, col:53> 'int' <LValueToRValue>
|   |   | |     |     `-MemberExpr 0x2835501f498 <col:48, col:53> 'int' lvalue ->buf_off 0x28355011f18
|   |   | |     |       `-ImplicitCastExpr 0x2835501f480 <col:48> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |     |         `-DeclRefExpr 0x2835501f460 <col:48> 'BIO_B64_CTX *' lvalue Var 0x2835501c228 'ctx' 'BIO_B64_CTX *'
|   |   | |     `-CompoundAssignOperator 0x2835501f5b0 <line:412:17, col:24> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |       |-DeclRefExpr 0x2835501f558 <col:17> 'int' lvalue Var 0x28355024090 'ret' 'int'
|   |   | |       `-ImplicitCastExpr 0x2835501f598 <col:24> 'int' <LValueToRValue>
|   |   | |         `-DeclRefExpr 0x2835501f578 <col:24> 'int' lvalue Var 0x2835501c100 'n' 'int'
|   |   | `-CompoundStmt 0x2835501fd58 <line:414:16, line:422:9>
|   |   |   |-IfStmt 0x2835501fa78 <line:415:13, line:418:46>
|   |   |   | |-OpaqueValueExpr 0x2835501fa60 <<invalid sloc>> '_Bool'
|   |   |   | `-ReturnStmt 0x2835501fa50 <col:17, col:46>
|   |   |   |   `-ParenExpr 0x2835501fa30 <col:24, col:46> 'int'
|   |   |   |     `-ConditionalOperator 0x2835501fa00 <col:25, col:43> 'int'
|   |   |   |       |-ParenExpr 0x2835501f968 <col:25, col:34> 'int'
|   |   |   |       | `-BinaryOperator 0x2835501f948 <col:26, col:33> 'int' '=='
|   |   |   |       |   |-ImplicitCastExpr 0x2835501f930 <col:26> 'int' <LValueToRValue>
|   |   |   |       |   | `-DeclRefExpr 0x2835501f8e8 <col:26> 'int' lvalue Var 0x28355024090 'ret' 'int'
|   |   |   |       |   `-IntegerLiteral 0x2835501f908 <col:33> 'int' 0
|   |   |   |       |-UnaryOperator 0x2835501f9b0 <col:38, col:39> 'int' prefix '-'
|   |   |   |       | `-IntegerLiteral 0x2835501f988 <col:39> 'int' 1
|   |   |   |       `-ImplicitCastExpr 0x2835501f9e8 <col:43> 'int' <LValueToRValue>
|   |   |   |         `-DeclRefExpr 0x2835501f9c8 <col:43> 'int' lvalue Var 0x28355024090 'ret' 'int'
|   |   |   |-CallExpr 0x2835501fca8 <line:420:13, col:56> 'int'
|   |   |   | |-ImplicitCastExpr 0x2835501fc90 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x2835501fb50 <col:13> 'int ()' Function 0x283550187b0 'OPENSSL_assert' 'int ()'
|   |   |   | `-BinaryOperator 0x2835501fc70 <col:28, col:49> 'int' '>='
|   |   |   |   |-ImplicitCastExpr 0x2835501fc40 <col:28, col:33> 'int' <LValueToRValue>
|   |   |   |   | `-MemberExpr 0x2835501fba8 <col:28, col:33> 'int' lvalue ->buf_len 0x28355011ea8
|   |   |   |   |   `-ImplicitCastExpr 0x2835501fb90 <col:28> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   |   |     `-DeclRefExpr 0x2835501fb70 <col:28> 'BIO_B64_CTX *' lvalue Var 0x2835501c228 'ctx' 'BIO_B64_CTX *'
|   |   |   |   `-ImplicitCastExpr 0x2835501fc58 <col:44, col:49> 'int' <LValueToRValue>
|   |   |   |     `-MemberExpr 0x2835501fc10 <col:44, col:49> 'int' lvalue ->buf_off 0x28355011f18
|   |   |   |       `-ImplicitCastExpr 0x2835501fbf8 <col:44> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   |         `-DeclRefExpr 0x2835501fbd8 <col:44> 'BIO_B64_CTX *' lvalue Var 0x2835501c228 'ctx' 'BIO_B64_CTX *'
|   |   |   `-CompoundAssignOperator 0x2835501fd28 <line:421:13, col:20> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |     |-DeclRefExpr 0x2835501fcd0 <col:13> 'int' lvalue Var 0x28355024090 'ret' 'int'
|   |   |     `-ImplicitCastExpr 0x2835501fd10 <col:20> 'int' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x2835501fcf0 <col:20> 'int' lvalue Var 0x2835501c100 'n' 'int'
|   |   |-CompoundAssignOperator 0x2835501fe18 <line:423:9, col:16> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-DeclRefExpr 0x2835501fdc0 <col:9> 'int' lvalue ParmVar 0x28355023f00 'inl' 'int'
|   |   | `-ImplicitCastExpr 0x2835501fe00 <col:16> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x2835501fde0 <col:16> 'int' lvalue Var 0x2835501c100 'n' 'int'
|   |   |-CompoundAssignOperator 0x2835501fea0 <line:424:9, col:15> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'
|   |   | |-DeclRefExpr 0x2835501fe48 <col:9> 'const char *' lvalue ParmVar 0x28355023e80 'in' 'const char *'
|   |   | `-ImplicitCastExpr 0x2835501fe88 <col:15> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x2835501fe68 <col:15> 'int' lvalue Var 0x2835501c100 'n' 'int'
|   |   |-BinaryOperator 0x2835501ff60 <line:426:9, col:24> 'int' '='
|   |   | |-MemberExpr 0x2835501ff08 <col:9, col:14> 'int' lvalue ->buf_off 0x28355011f18
|   |   | | `-ImplicitCastExpr 0x2835501fef0 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2835501fed0 <col:9> 'BIO_B64_CTX *' lvalue Var 0x2835501c228 'ctx' 'BIO_B64_CTX *'
|   |   | `-IntegerLiteral 0x2835501ff38 <col:24> 'int' 0
|   |   |-BinaryOperator 0x28355020020 <line:427:9, col:18> 'int' '='
|   |   | |-DeclRefExpr 0x2835501ff80 <col:9> 'int' lvalue Var 0x2835501c100 'n' 'int'
|   |   | `-ImplicitCastExpr 0x28355020008 <col:13, col:18> 'int' <LValueToRValue>
|   |   |   `-MemberExpr 0x2835501ffd8 <col:13, col:18> 'int' lvalue ->buf_len 0x28355011ea8
|   |   |     `-ImplicitCastExpr 0x2835501ffc0 <col:13> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x2835501ffa0 <col:13> 'BIO_B64_CTX *' lvalue Var 0x2835501c228 'ctx' 'BIO_B64_CTX *'
|   |   |-WhileStmt 0x28355022900 <line:428:9, line:439:9>
|   |   | |-BinaryOperator 0x283550200a0 <line:428:16, col:20> 'int' '>'
|   |   | | |-ImplicitCastExpr 0x28355020088 <col:16> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x28355020040 <col:16> 'int' lvalue Var 0x2835501c100 'n' 'int'
|   |   | | `-IntegerLiteral 0x28355020060 <col:20> 'int' 0
|   |   | `-CompoundStmt 0x283550228c8 <col:23, line:439:9>
|   |   |   |-IfStmt 0x28355022428 <line:430:13, line:433:13>
|   |   |   | |-BinaryOperator 0x28355022260 <line:430:17, col:22> 'int' '<='
|   |   |   | | |-ImplicitCastExpr 0x28355022248 <col:17> 'int' <LValueToRValue>
|   |   |   | | | `-DeclRefExpr 0x28355022200 <col:17> 'int' lvalue Var 0x2835501c198 'i' 'int'
|   |   |   | | `-IntegerLiteral 0x28355022220 <col:22> 'int' 0
|   |   |   | `-CompoundStmt 0x28355022410 <col:25, line:433:13>
|   |   |   |   `-ReturnStmt 0x28355022400 <line:432:17, col:45>
|   |   |   |     `-ParenExpr 0x283550223e0 <col:24, col:45> 'int'
|   |   |   |       `-ConditionalOperator 0x283550223b0 <col:25, col:42> 'int'
|   |   |   |         |-ParenExpr 0x28355022320 <col:25, col:34> 'int'
|   |   |   |         | `-BinaryOperator 0x28355022300 <col:26, col:33> 'int' '=='
|   |   |   |         |   |-ImplicitCastExpr 0x283550222e8 <col:26> 'int' <LValueToRValue>
|   |   |   |         |   | `-DeclRefExpr 0x283550222a0 <col:26> 'int' lvalue Var 0x28355024090 'ret' 'int'
|   |   |   |         |   `-IntegerLiteral 0x283550222c0 <col:33> 'int' 0
|   |   |   |         |-ImplicitCastExpr 0x28355022380 <col:38> 'int' <LValueToRValue>
|   |   |   |         | `-DeclRefExpr 0x28355022340 <col:38> 'int' lvalue Var 0x2835501c198 'i' 'int'
|   |   |   |         `-ImplicitCastExpr 0x28355022398 <col:42> 'int' <LValueToRValue>
|   |   |   |           `-DeclRefExpr 0x28355022360 <col:42> 'int' lvalue Var 0x28355024090 'ret' 'int'
|   |   |   |-CallExpr 0x28355022508 <line:434:13, col:34> 'int'
|   |   |   | |-ImplicitCastExpr 0x283550224f0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x28355022440 <col:13> 'int ()' Function 0x283550187b0 'OPENSSL_assert' 'int ()'
|   |   |   | `-BinaryOperator 0x283550224d0 <col:28, col:33> 'int' '<='
|   |   |   |   |-ImplicitCastExpr 0x283550224a0 <col:28> 'int' <LValueToRValue>
|   |   |   |   | `-DeclRefExpr 0x28355022460 <col:28> 'int' lvalue Var 0x2835501c198 'i' 'int'
|   |   |   |   `-ImplicitCastExpr 0x283550224b8 <col:33> 'int' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x28355022480 <col:33> 'int' lvalue Var 0x2835501c100 'n' 'int'
|   |   |   |-CompoundAssignOperator 0x28355022588 <line:435:13, col:18> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |   | |-DeclRefExpr 0x28355022530 <col:13> 'int' lvalue Var 0x2835501c100 'n' 'int'
|   |   |   | `-ImplicitCastExpr 0x28355022570 <col:18> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x28355022550 <col:18> 'int' lvalue Var 0x2835501c198 'i' 'int'
|   |   |   |-CompoundAssignOperator 0x28355022658 <line:436:13, col:29> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |   | |-MemberExpr 0x283550225f0 <col:13, col:18> 'int' lvalue ->buf_off 0x28355011f18
|   |   |   | | `-ImplicitCastExpr 0x283550225d8 <col:13> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x283550225b8 <col:13> 'BIO_B64_CTX *' lvalue Var 0x2835501c228 'ctx' 'BIO_B64_CTX *'
|   |   |   | `-ImplicitCastExpr 0x28355022640 <col:29> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x28355022620 <col:29> 'int' lvalue Var 0x2835501c198 'i' 'int'
|   |   |   `-CallExpr 0x283550228a0 <line:438:13, col:56> 'int'
|   |   |     |-ImplicitCastExpr 0x28355022888 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x28355022748 <col:13> 'int ()' Function 0x283550187b0 'OPENSSL_assert' 'int ()'
|   |   |     `-BinaryOperator 0x28355022868 <col:28, col:49> 'int' '>='
|   |   |       |-ImplicitCastExpr 0x28355022838 <col:28, col:33> 'int' <LValueToRValue>
|   |   |       | `-MemberExpr 0x283550227a0 <col:28, col:33> 'int' lvalue ->buf_len 0x28355011ea8
|   |   |       |   `-ImplicitCastExpr 0x28355022788 <col:28> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |       |     `-DeclRefExpr 0x28355022768 <col:28> 'BIO_B64_CTX *' lvalue Var 0x2835501c228 'ctx' 'BIO_B64_CTX *'
|   |   |       `-ImplicitCastExpr 0x28355022850 <col:44, col:49> 'int' <LValueToRValue>
|   |   |         `-MemberExpr 0x28355022808 <col:44, col:49> 'int' lvalue ->buf_off 0x28355011f18
|   |   |           `-ImplicitCastExpr 0x283550227f0 <col:44> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |             `-DeclRefExpr 0x283550227d0 <col:44> 'BIO_B64_CTX *' lvalue Var 0x2835501c228 'ctx' 'BIO_B64_CTX *'
|   |   |-BinaryOperator 0x283550229a8 <line:440:9, col:24> 'int' '='
|   |   | |-MemberExpr 0x28355022950 <col:9, col:14> 'int' lvalue ->buf_len 0x28355011ea8
|   |   | | `-ImplicitCastExpr 0x28355022938 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x28355022918 <col:9> 'BIO_B64_CTX *' lvalue Var 0x2835501c228 'ctx' 'BIO_B64_CTX *'
|   |   | `-IntegerLiteral 0x28355022980 <col:24> 'int' 0
|   |   `-BinaryOperator 0x28355022a58 <line:441:9, col:24> 'int' '='
|   |     |-MemberExpr 0x28355022a00 <col:9, col:14> 'int' lvalue ->buf_off 0x28355011f18
|   |     | `-ImplicitCastExpr 0x283550229e8 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x283550229c8 <col:9> 'BIO_B64_CTX *' lvalue Var 0x2835501c228 'ctx' 'BIO_B64_CTX *'
|   |     `-IntegerLiteral 0x28355022a30 <col:24> 'int' 0
|   `-ReturnStmt 0x28355022b40 <line:443:5, col:16>
|     `-ImplicitCastExpr 0x28355022b28 <col:12, col:16> 'int' <LValueToRValue>
|       `-ParenExpr 0x28355022b08 <col:12, col:16> 'int' lvalue
|         `-DeclRefExpr 0x28355022ae8 <col:13> 'int' lvalue Var 0x28355024090 'ret' 'int'
|-FunctionDecl 0x28355022e18 <line:446:1, line:531:1> line:446:13 invalid b64_ctrl 'long (int *, int, long, void *)' static
| |-ParmVarDecl 0x28355022be8 <col:22, col:27> col:27 invalid b 'int *'
| |-ParmVarDecl 0x28355022c68 <col:30, col:34> col:34 used cmd 'int'
| |-ParmVarDecl 0x28355022ce8 <col:39, col:44> col:44 used num 'long'
| |-ParmVarDecl 0x28355022d68 <col:49, col:55> col:55 used ptr 'void *'
| `-CompoundStmt 0x283550297d0 <line:447:1, line:531:1>
|   |-DeclStmt 0x28355022f68 <line:448:5, col:21>
|   | `-VarDecl 0x28355022f00 <col:5, col:18> col:18 used ctx 'BIO_B64_CTX *'
|   |-DeclStmt 0x28355023040 <line:449:5, col:17>
|   | `-VarDecl 0x28355022f98 <col:5, col:16> col:10 used ret 'long' cinit
|   |   `-ImplicitCastExpr 0x28355023028 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x28355023000 <col:16> 'int' 1
|   |-DeclStmt 0x283550230d8 <line:450:5, col:10>
|   | `-VarDecl 0x28355023070 <col:5, col:9> col:9 used i 'int'
|   |-IfStmt 0x2835501d338 <line:455:5, line:456:16>
|   | |-OpaqueValueExpr 0x2835501d320 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x2835501d310 <col:9, col:16>
|   |   `-ImplicitCastExpr 0x2835501d2f8 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x2835501d2d0 <col:16> 'int' 0
|   |-SwitchStmt 0x2835501d3a0 <line:458:5, line:529:5>
|   | |-ImplicitCastExpr 0x2835501d388 <line:458:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x2835501d350 <col:13> 'int' lvalue ParmVar 0x28355022c68 'cmd' 'int'
|   | `-CompoundStmt 0x283550296d8 <col:18, line:529:5>
|   |   |-BinaryOperator 0x2835501d450 <line:460:9, col:21> 'int' '='
|   |   | |-MemberExpr 0x2835501d3f8 <col:9, col:14> 'int' lvalue ->cont 0x28355013168
|   |   | | `-ImplicitCastExpr 0x2835501d3e0 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2835501d3c0 <col:9> 'BIO_B64_CTX *' lvalue Var 0x28355022f00 'ctx' 'BIO_B64_CTX *'
|   |   | `-IntegerLiteral 0x2835501d428 <col:21> 'int' 1
|   |   |-BinaryOperator 0x2835501d500 <line:461:9, col:22> 'int' '='
|   |   | |-MemberExpr 0x2835501d4a8 <col:9, col:14> 'int' lvalue ->start 0x283550130f8
|   |   | | `-ImplicitCastExpr 0x2835501d490 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2835501d470 <col:9> 'BIO_B64_CTX *' lvalue Var 0x28355022f00 'ctx' 'BIO_B64_CTX *'
|   |   | `-IntegerLiteral 0x2835501d4d8 <col:22> 'int' 1
|   |   |-BinaryOperator 0x2835501d5b0 <line:462:9, line:29:25> 'int' '='
|   |   | |-MemberExpr 0x2835501d558 <line:462:9, col:14> 'int' lvalue ->encode 0x28355013088
|   |   | | `-ImplicitCastExpr 0x2835501d540 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2835501d520 <col:9> 'BIO_B64_CTX *' lvalue Var 0x28355022f00 'ctx' 'BIO_B64_CTX *'
|   |   | `-IntegerLiteral 0x2835501d588 <line:29:25> 'int' 0
|   |   |-BreakStmt 0x2835501d7a8 <line:464:9>
|   |   |-IfStmt 0x2835501d9a0 <line:466:9, line:469:13> has_else
|   |   | |-BinaryOperator 0x2835501d858 <line:466:13, col:26> 'int' '<='
|   |   | | |-ImplicitCastExpr 0x2835501d840 <col:13, col:18> 'int' <LValueToRValue>
|   |   | | | `-MemberExpr 0x2835501d7e8 <col:13, col:18> 'int' lvalue ->cont 0x28355013168
|   |   | | |   `-ImplicitCastExpr 0x2835501d7d0 <col:13> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x2835501d7b0 <col:13> 'BIO_B64_CTX *' lvalue Var 0x28355022f00 'ctx' 'BIO_B64_CTX *'
|   |   | | `-IntegerLiteral 0x2835501d818 <col:26> 'int' 0
|   |   | |-BinaryOperator 0x2835501d8d8 <line:467:13, col:19> 'long' '='
|   |   | | |-DeclRefExpr 0x2835501d878 <col:13> 'long' lvalue Var 0x28355022f98 'ret' 'long'
|   |   | | `-ImplicitCastExpr 0x2835501d8c0 <col:19> 'long' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x2835501d898 <col:19> 'int' 1
|   |   | `-NullStmt 0x2835501d998 <line:469:13>
|   |   |-BreakStmt 0x2835501d9c8 <line:470:9>
|   |   |-CallExpr 0x2835501db28 <line:472:9, col:52> 'int'
|   |   | |-ImplicitCastExpr 0x2835501db10 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x2835501d9d0 <col:9> 'int ()' Function 0x283550187b0 'OPENSSL_assert' 'int ()'
|   |   | `-BinaryOperator 0x2835501daf0 <col:24, col:45> 'int' '>='
|   |   |   |-ImplicitCastExpr 0x2835501dac0 <col:24, col:29> 'int' <LValueToRValue>
|   |   |   | `-MemberExpr 0x2835501da28 <col:24, col:29> 'int' lvalue ->buf_len 0x28355011ea8
|   |   |   |   `-ImplicitCastExpr 0x2835501da10 <col:24> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x2835501d9f0 <col:24> 'BIO_B64_CTX *' lvalue Var 0x28355022f00 'ctx' 'BIO_B64_CTX *'
|   |   |   `-ImplicitCastExpr 0x2835501dad8 <col:40, col:45> 'int' <LValueToRValue>
|   |   |     `-MemberExpr 0x2835501da90 <col:40, col:45> 'int' lvalue ->buf_off 0x28355011f18
|   |   |       `-ImplicitCastExpr 0x2835501da78 <col:40> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x2835501da58 <col:40> 'BIO_B64_CTX *' lvalue Var 0x28355022f00 'ctx' 'BIO_B64_CTX *'
|   |   |-BinaryOperator 0x2835501dca8 <line:473:9, col:35> 'long' '='
|   |   | |-DeclRefExpr 0x2835501db50 <col:9> 'long' lvalue Var 0x28355022f98 'ret' 'long'
|   |   | `-ImplicitCastExpr 0x2835501dc90 <col:15, col:35> 'long' <IntegralCast>
|   |   |   `-BinaryOperator 0x2835501dc70 <col:15, col:35> 'int' '-'
|   |   |     |-ImplicitCastExpr 0x2835501dc40 <col:15, col:20> 'int' <LValueToRValue>
|   |   |     | `-MemberExpr 0x2835501dba8 <col:15, col:20> 'int' lvalue ->buf_len 0x28355011ea8
|   |   |     |   `-ImplicitCastExpr 0x2835501db90 <col:15> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x2835501db70 <col:15> 'BIO_B64_CTX *' lvalue Var 0x28355022f00 'ctx' 'BIO_B64_CTX *'
|   |   |     `-ImplicitCastExpr 0x2835501dc58 <col:30, col:35> 'int' <LValueToRValue>
|   |   |       `-MemberExpr 0x2835501dc10 <col:30, col:35> 'int' lvalue ->buf_off 0x28355011f18
|   |   |         `-ImplicitCastExpr 0x2835501dbf8 <col:30> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |           `-DeclRefExpr 0x2835501dbd8 <col:30> 'BIO_B64_CTX *' lvalue Var 0x28355022f00 'ctx' 'BIO_B64_CTX *'
|   |   |-IfStmt 0x28355020200 <line:474:9, line:477:14> has_else
|   |   | |-OpaqueValueExpr 0x283550201e8 <<invalid sloc>> '_Bool'
|   |   | |-BinaryOperator 0x2835501e058 <line:476:13, col:19> 'long' '='
|   |   | | |-DeclRefExpr 0x2835501dff8 <col:13> 'long' lvalue Var 0x28355022f98 'ret' 'long'
|   |   | | `-ImplicitCastExpr 0x2835501e040 <col:19> 'long' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x2835501e018 <col:19> 'int' 1
|   |   | `-NullStmt 0x283550201e0 <line:477:14>
|   |   |-BreakStmt 0x28355020228 <line:479:9>
|   |   |-CallExpr 0x28355020388 <line:481:9, col:52> 'int'
|   |   | |-ImplicitCastExpr 0x28355020370 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x28355020230 <col:9> 'int ()' Function 0x283550187b0 'OPENSSL_assert' 'int ()'
|   |   | `-BinaryOperator 0x28355020350 <col:24, col:45> 'int' '>='
|   |   |   |-ImplicitCastExpr 0x28355020320 <col:24, col:29> 'int' <LValueToRValue>
|   |   |   | `-MemberExpr 0x28355020288 <col:24, col:29> 'int' lvalue ->buf_len 0x28355011ea8
|   |   |   |   `-ImplicitCastExpr 0x28355020270 <col:24> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x28355020250 <col:24> 'BIO_B64_CTX *' lvalue Var 0x28355022f00 'ctx' 'BIO_B64_CTX *'
|   |   |   `-ImplicitCastExpr 0x28355020338 <col:40, col:45> 'int' <LValueToRValue>
|   |   |     `-MemberExpr 0x283550202f0 <col:40, col:45> 'int' lvalue ->buf_off 0x28355011f18
|   |   |       `-ImplicitCastExpr 0x283550202d8 <col:40> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x283550202b8 <col:40> 'BIO_B64_CTX *' lvalue Var 0x28355022f00 'ctx' 'BIO_B64_CTX *'
|   |   |-BinaryOperator 0x28355020508 <line:482:9, col:35> 'long' '='
|   |   | |-DeclRefExpr 0x283550203b0 <col:9> 'long' lvalue Var 0x28355022f98 'ret' 'long'
|   |   | `-ImplicitCastExpr 0x283550204f0 <col:15, col:35> 'long' <IntegralCast>
|   |   |   `-BinaryOperator 0x283550204d0 <col:15, col:35> 'int' '-'
|   |   |     |-ImplicitCastExpr 0x283550204a0 <col:15, col:20> 'int' <LValueToRValue>
|   |   |     | `-MemberExpr 0x28355020408 <col:15, col:20> 'int' lvalue ->buf_len 0x28355011ea8
|   |   |     |   `-ImplicitCastExpr 0x283550203f0 <col:15> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x283550203d0 <col:15> 'BIO_B64_CTX *' lvalue Var 0x28355022f00 'ctx' 'BIO_B64_CTX *'
|   |   |     `-ImplicitCastExpr 0x283550204b8 <col:30, col:35> 'int' <LValueToRValue>
|   |   |       `-MemberExpr 0x28355020470 <col:30, col:35> 'int' lvalue ->buf_off 0x28355011f18
|   |   |         `-ImplicitCastExpr 0x28355020458 <col:30> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |           `-DeclRefExpr 0x28355020438 <col:30> 'BIO_B64_CTX *' lvalue Var 0x28355022f00 'ctx' 'BIO_B64_CTX *'
|   |   |-BreakStmt 0x28355020660 <line:485:9>
|   |   |-LabelStmt 0x283550209e8 <line:488:2, line:493:9> 'again'
|   |   | `-WhileStmt 0x28355020980 <line:489:9, line:493:9>
|   |   |   |-BinaryOperator 0x28355020768 <line:489:16, col:37> 'int' '!='
|   |   |   | |-ImplicitCastExpr 0x28355020738 <col:16, col:21> 'int' <LValueToRValue>
|   |   |   | | `-MemberExpr 0x283550206a0 <col:16, col:21> 'int' lvalue ->buf_len 0x28355011ea8
|   |   |   | |   `-ImplicitCastExpr 0x28355020688 <col:16> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   | |     `-DeclRefExpr 0x28355020668 <col:16> 'BIO_B64_CTX *' lvalue Var 0x28355022f00 'ctx' 'BIO_B64_CTX *'
|   |   |   | `-ImplicitCastExpr 0x28355020750 <col:32, col:37> 'int' <LValueToRValue>
|   |   |   |   `-MemberExpr 0x28355020708 <col:32, col:37> 'int' lvalue ->buf_off 0x28355011f18
|   |   |   |     `-ImplicitCastExpr 0x283550206f0 <col:32> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   |       `-DeclRefExpr 0x283550206d0 <col:32> 'BIO_B64_CTX *' lvalue Var 0x28355022f00 'ctx' 'BIO_B64_CTX *'
|   |   |   `-CompoundStmt 0x28355020968 <col:46, line:493:9>
|   |   |     `-IfStmt 0x28355020950 <line:491:13, line:492:24>
|   |   |       |-BinaryOperator 0x283550208d0 <line:491:17, col:21> 'int' '<'
|   |   |       | |-ImplicitCastExpr 0x283550208b8 <col:17> 'int' <LValueToRValue>
|   |   |       | | `-DeclRefExpr 0x28355020870 <col:17> 'int' lvalue Var 0x28355023070 'i' 'int'
|   |   |       | `-IntegerLiteral 0x28355020890 <col:21> 'int' 0
|   |   |       `-ReturnStmt 0x28355020940 <line:492:17, col:24>
|   |   |         `-ImplicitCastExpr 0x28355020928 <col:24> 'long' <IntegralCast>
|   |   |           `-ImplicitCastExpr 0x28355020910 <col:24> 'int' <LValueToRValue>
|   |   |             `-DeclRefExpr 0x283550208f0 <col:24> 'int' lvalue Var 0x28355023070 'i' 'int'
|   |   |-IfStmt 0x28355029448 <line:494:9, line:510:9> has_else
|   |   | |-OpaqueValueExpr 0x28355029430 <<invalid sloc>> '_Bool'
|   |   | |-CompoundStmt 0x28355020e88 <line:494:56, line:503:9>
|   |   | | `-IfStmt 0x28355020e70 <line:495:13, line:502:13>
|   |   | |   |-BinaryOperator 0x28355020ac8 <line:495:17, col:33> 'int' '!='
|   |   | |   | |-ImplicitCastExpr 0x28355020ab0 <col:17, col:22> 'int' <LValueToRValue>
|   |   | |   | | `-MemberExpr 0x28355020a58 <col:17, col:22> 'int' lvalue ->tmp_len 0x28355011f88
|   |   | |   | |   `-ImplicitCastExpr 0x28355020a40 <col:17> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   | |     `-DeclRefExpr 0x28355020a20 <col:17> 'BIO_B64_CTX *' lvalue Var 0x28355022f00 'ctx' 'BIO_B64_CTX *'
|   |   | |   | `-IntegerLiteral 0x28355020a88 <col:33> 'int' 0
|   |   | |   `-CompoundStmt 0x28355020e48 <col:36, line:502:13>
|   |   | |     |-BinaryOperator 0x28355020d60 <line:499:17, col:32> 'int' '='
|   |   | |     | |-MemberExpr 0x28355020d08 <col:17, col:22> 'int' lvalue ->buf_off 0x28355011f18
|   |   | |     | | `-ImplicitCastExpr 0x28355020cf0 <col:17> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |     | |   `-DeclRefExpr 0x28355020cd0 <col:17> 'BIO_B64_CTX *' lvalue Var 0x28355022f00 'ctx' 'BIO_B64_CTX *'
|   |   | |     | `-IntegerLiteral 0x28355020d38 <col:32> 'int' 0
|   |   | |     |-BinaryOperator 0x28355020e10 <line:500:17, col:32> 'int' '='
|   |   | |     | |-MemberExpr 0x28355020db8 <col:17, col:22> 'int' lvalue ->tmp_len 0x28355011f88
|   |   | |     | | `-ImplicitCastExpr 0x28355020da0 <col:17> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |     | |   `-DeclRefExpr 0x28355020d80 <col:17> 'BIO_B64_CTX *' lvalue Var 0x28355022f00 'ctx' 'BIO_B64_CTX *'
|   |   | |     | `-IntegerLiteral 0x28355020de8 <col:32> 'int' 0
|   |   | |     `-GotoStmt 0x28355020e30 <line:501:17, col:22> 'again' 0x28355020998
|   |   | `-IfStmt 0x28355029418 <line:503:16, line:510:9>
|   |   |   |-OpaqueValueExpr 0x28355029400 <<invalid sloc>> '_Bool'
|   |   |   `-CompoundStmt 0x283550293e0 <line:504:61, line:510:9>
|   |   |     |-BinaryOperator 0x28355021078 <line:505:13, col:28> 'int' '='
|   |   |     | |-MemberExpr 0x28355021020 <col:13, col:18> 'int' lvalue ->buf_off 0x28355011f18
|   |   |     | | `-ImplicitCastExpr 0x28355021008 <col:13> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |     | |   `-DeclRefExpr 0x28355020fe8 <col:13> 'BIO_B64_CTX *' lvalue Var 0x28355022f00 'ctx' 'BIO_B64_CTX *'
|   |   |     | `-IntegerLiteral 0x28355021050 <col:28> 'int' 0
|   |   |     `-GotoStmt 0x283550293c8 <line:509:13, col:18> 'again' 0x28355020998
|   |   |-BreakStmt 0x28355029510 <line:513:9>
|   |   |-BreakStmt 0x283550295f8 <line:519:9>
|   |   |-BreakStmt 0x28355029600 <line:522:9>
|   |   |-DefaultStmt 0x283550296b0 <line:526:5, col:12>
|   |   | `-NullStmt 0x283550296a8 <col:12>
|   |   `-BreakStmt 0x283550296d0 <line:528:9>
|   `-ReturnStmt 0x283550297c0 <line:530:5, col:12>
|     `-ImplicitCastExpr 0x283550297a8 <col:12> 'long' <LValueToRValue>
|       `-DeclRefExpr 0x28355029788 <col:12> 'long' lvalue Var 0x28355022f98 'ret' 'long'
|-FunctionDecl 0x283550299d0 <line:533:1, line:546:1> line:533:13 invalid b64_callback_ctrl 'long (int *, int, int *)' static
| |-ParmVarDecl 0x28355029828 <col:31, col:36> col:36 invalid b 'int *'
| |-ParmVarDecl 0x283550298a8 <col:39, col:43> col:43 used cmd 'int'
| |-ParmVarDecl 0x28355029928 <col:48, col:61> col:61 invalid fp 'int *'
| `-CompoundStmt 0x28355029f30 <line:534:1, line:546:1>
|   |-DeclStmt 0x28355029b60 <line:535:5, col:17>
|   | `-VarDecl 0x28355029ab8 <col:5, col:16> col:10 used ret 'long' cinit
|   |   `-ImplicitCastExpr 0x28355029b48 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x28355029b20 <col:16> 'int' 1
|   |-IfStmt 0x28355029c88 <line:538:5, line:539:16>
|   | |-OpaqueValueExpr 0x28355029c70 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x28355029c60 <col:9, col:16>
|   |   `-ImplicitCastExpr 0x28355029c48 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x28355029c20 <col:16> 'int' 0
|   |-SwitchStmt 0x28355029cf0 <line:540:5, line:544:5>
|   | |-ImplicitCastExpr 0x28355029cd8 <line:540:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x28355029ca0 <col:13> 'int' lvalue ParmVar 0x283550298a8 'cmd' 'int'
|   | `-CompoundStmt 0x28355029ea8 <col:18, line:544:5>
|   |   |-DefaultStmt 0x28355029e80 <line:541:5, col:12>
|   |   | `-NullStmt 0x28355029e78 <col:12>
|   |   `-BreakStmt 0x28355029ea0 <line:543:9>
|   `-ReturnStmt 0x28355029f20 <line:545:5, col:16>
|     `-ImplicitCastExpr 0x28355029f08 <col:12, col:16> 'long' <LValueToRValue>
|       `-ParenExpr 0x28355029ee8 <col:12, col:16> 'long' lvalue
|         `-DeclRefExpr 0x28355029ec8 <col:13> 'long' lvalue Var 0x28355029ab8 'ret' 'long'
|-FunctionDecl 0x2835502a098 <line:548:1, line:551:1> line:548:12 invalid b64_puts 'int (int *, const char *)' static
| |-ParmVarDecl 0x28355029f78 <col:21, col:26> col:26 invalid b 'int *'
| |-ParmVarDecl 0x28355029ff8 <col:29, col:41> col:41 used str 'const char *'
| `-CompoundStmt 0x2835502c400 <line:549:1, line:551:1>
`-FunctionDecl 0x2835502c200 <line:550:30> col:30 implicit used strlen 'unsigned long long (const char *)' extern
  `-ParmVarDecl 0x2835502c2a0 <<invalid sloc>> <invalid sloc> 'const char *'
