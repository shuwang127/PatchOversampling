TranslationUnitDecl 0x2b889761dc8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x2b889762660 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x2b889762360 '__int128'
|-TypedefDecl 0x2b8897626d0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x2b889762380 'unsigned __int128'
|-TypedefDecl 0x2b889762a08 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x2b8897627c0 'struct __NSConstantString_tag'
|   `-Record 0x2b889762728 '__NSConstantString_tag'
|-TypedefDecl 0x2b889762a78 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x2b889761fa0 'unsigned long long'
|-TypedefDecl 0x2b889762b10 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x2b889762ad0 'char *'
|   `-BuiltinType 0x2b889761e60 'char'
|-TypedefDecl 0x2b889762b80 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x2b889762ad0 'char *'
|   `-BuiltinType 0x2b889761e60 'char'
|-TypedefDecl 0x2b889762c40 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x2b889761fa0 'unsigned long long'
|-TypedefDecl 0x2b889762cb0 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x2b889762ad0 'char *'
|   `-BuiltinType 0x2b889761e60 'char'
|-FunctionDecl 0x2b88b242450 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x2b88b2424f0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x2b88b242560 <col:21> Implicit
|-FunctionDecl 0x2b88b2425b8 prev 0x2b88b242450 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x2b88b2422e0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x2b88b2426a8 <col:21> Inherited Implicit
|-TypedefDecl 0x2b88b2426e8 prev 0x2b889762a78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x2b889761fa0 'unsigned long long'
|-TypedefDecl 0x2b88b242790 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x2b88b242760 'size_t' sugar
|   |-Typedef 0x2b88b2426e8 'size_t'
|   `-BuiltinType 0x2b889761fa0 'unsigned long long'
|-TypedefDecl 0x2b88b242800 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x2b889761f00 'long long'
|-TypedefDecl 0x2b88b242870 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x2b889761f00 'long long'
|-TypedefDecl 0x2b88b2428e0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x2b889761f40 'unsigned short'
|-TypedefDecl 0x2b88b242950 <line:541:1, col:24> col:24 referenced wint_t 'unsigned short'
| `-BuiltinType 0x2b889761f40 'unsigned short'
|-TypedefDecl 0x2b88b2429c0 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x2b889761f40 'unsigned short'
|-TypedefDecl 0x2b88b242a30 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x2b889761ec0 'int'
|-TypedefDecl 0x2b88b242aa0 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x2b889761ee0 'long'
|-TypedefDecl 0x2b88b242b10 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x2b889761f00 'long long'
|-TypedefDecl 0x2b88b242ba0 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x2b88b242b70 '__time64_t' sugar
|   |-Typedef 0x2b88b242b10 '__time64_t'
|   `-BuiltinType 0x2b889761f00 'long long'
|-FunctionDecl 0x2b88b242d18 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x2b88b242f38 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x2b88b27c830 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x2b88b243078 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x2b88b2430f0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x2b88b243168 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x2b88b2431e8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x2b88b27c5d0 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x2b88b27c910 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x2b88b27c9d0 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x2b88b27cb40 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x2b88b27caf0 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x2b88b27ca90 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x2b88b27c9b0 'struct threadlocaleinfostruct'
|       `-Record 0x2b88b287680 'threadlocaleinfostruct'
|-TypedefDecl 0x2b88b27cc50 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x2b88b27cc00 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x2b88b27cba0 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x2b88b27ca70 'struct threadmbcinfostruct'
|       `-Record 0x2b88b27c9d0 'threadmbcinfostruct'
|-RecordDecl 0x2b88b27cca8 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x2b88b27cd60 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x2b88b27ce20 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2b88b27ceb0 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x2b88b27cf40 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x2b88b27cff8 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x2b88b27cfa0 'struct localeinfo_struct' sugar
|   `-RecordType 0x2b88b27ce00 'struct localeinfo_struct'
|     `-Record 0x2b88b27cd60 'localeinfo_struct'
|-TypedefDecl 0x2b88b27d0d0 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x2b88b27d080 'struct localeinfo_struct *'
|   `-ElaboratedType 0x2b88b27cfa0 'struct localeinfo_struct' sugar
|     `-RecordType 0x2b88b27ce00 'struct localeinfo_struct'
|       `-Record 0x2b88b27cd60 'localeinfo_struct'
|-RecordDecl 0x2b88b27d148 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x2b88b27d200 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2b88b27d278 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x2b88b27d338 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x2b88b27d3d0 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x2b88b27d440 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x2b88b27d4f8 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x2b88b27d4a0 'struct localerefcount' sugar
|   `-RecordType 0x2b88b27d1e0 'struct localerefcount'
|     `-Record 0x2b88b27d148 'localerefcount'
|-RecordDecl 0x2b88b287680 prev 0x2b88b27c910 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x2b88b287700 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2b88b287778 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x2b88b2877e8 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x2b88b287858 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x2b88b2878c8 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x2b88b287a88 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x2b88b287af8 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x2b88b287b68 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x2b88b287bd8 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x2b88b287c48 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x2b88b287cb8 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x2b88b287d10 parent 0x2b889761dc8 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x2b88b287ea0 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x2b88b287f10 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x2b88b287f80 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x2b88b287ff0 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x2b88b288090 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x2b88b288100 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x2b88b288210 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x2b88b288348 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x2b88b2883f8 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x2b88b2883a0 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x2b88b27c9b0 'struct threadlocaleinfostruct'
|     `-Record 0x2b88b287680 'threadlocaleinfostruct'
|-RecordDecl 0x2b88b288490 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:63:1, line:72:9> line:63:8 struct _iobuf definition
| |-MaxFieldAlignmentAttr 0x2b88b288550 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2b88b2885c8 <line:64:9, col:15> col:15 _ptr 'char *'
| |-FieldDecl 0x2b88b280610 <line:65:9, col:15> col:15 _cnt 'int'
| |-FieldDecl 0x2b88b280680 <line:66:9, col:15> col:15 _base 'char *'
| |-FieldDecl 0x2b88b2806f0 <line:67:9, col:15> col:15 _flag 'int'
| |-FieldDecl 0x2b88b280760 <line:68:9, col:15> col:15 _file 'int'
| |-FieldDecl 0x2b88b2807d0 <line:69:9, col:15> col:15 _charbuf 'int'
| |-FieldDecl 0x2b88b280840 <line:70:9, col:15> col:15 _bufsiz 'int'
| `-FieldDecl 0x2b88b2808b0 <line:71:9, col:15> col:15 _tmpfname 'char *'
|-TypedefDecl 0x2b88b280960 <line:73:1, col:23> col:23 referenced FILE 'struct _iobuf':'struct _iobuf'
| `-ElaboratedType 0x2b88b280910 'struct _iobuf' sugar
|   `-RecordType 0x2b88b288530 'struct _iobuf'
|     `-Record 0x2b88b288490 '_iobuf'
|-FunctionDecl 0x2b88b280b98 <line:137:9, col:39> col:24 __iob_func 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|-TypedefDecl 0x2b88b280c68 <line:144:1, col:17> col:17 referenced fpos_t 'long long'
| `-BuiltinType 0x2b889761f00 'long long'
|-FunctionDecl 0x2b88b280e48 <line:175:24, col:65> col:36 _filbuf 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2b88b280cd0 <col:52, col:59> col:59 _File 'FILE *'
|-FunctionDecl 0x2b88b281140 <line:176:28, col:82> col:40 _flsbuf 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2b88b280f20 <col:53, col:57> col:57 _Ch 'int'
| `-ParmVarDecl 0x2b88b280f98 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x2b88b2814f0 <line:178:24, col:121> col:39 _fsopen 'FILE *(const char *, const char *, int) __attribute__((cdecl))':'FILE *(const char *, const char *, int)'
| |-ParmVarDecl 0x2b88b281220 <col:54, col:67> col:67 _Filename 'const char *'
| |-ParmVarDecl 0x2b88b2812a0 <col:85, col:98> col:98 _Mode 'const char *'
| `-ParmVarDecl 0x2b88b281320 <col:110, col:114> col:114 _ShFlag 'int'
|-FunctionDecl 0x2b88b289810 <line:180:9, col:51> col:22 clearerr 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x2b88b2896a0 <col:39, col:46> col:46 _File 'FILE *'
|-FunctionDecl 0x2b88b289a40 <line:182:28, col:76> col:44 clearerr_s 'errno_t (FILE *) __attribute__((cdecl))':'errno_t (FILE *)'
| `-ParmVarDecl 0x2b88b289900 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x2b88b289bf0 <line:184:28, col:67> col:40 fclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2b88b289b10 <col:55, col:62> col:62 _File 'FILE *'
|-FunctionDecl 0x2b88b289de0 <line:185:28, col:55> col:40 _fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2b88b28a0d8 <line:187:24, col:94> col:39 _fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x2b88b289eb0 <col:52, col:56> col:56 _FileHandle 'int'
| `-ParmVarDecl 0x2b88b289f30 <col:76, col:89> col:89 _Mode 'const char *'
|-FunctionDecl 0x2b88b28a290 <line:189:24, col:58> col:36 feof 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2b88b28a1b0 <col:46, col:53> col:53 _File 'FILE *'
|-FunctionDecl 0x2b88b28a440 <line:190:24, col:60> col:36 ferror 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2b88b28a360 <col:48, col:55> col:55 _File 'FILE *'
|-FunctionDecl 0x2b88b28a5f0 <line:191:28, col:71> col:40 fflush 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2b88b28a510 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x2b88b28a7b8 <line:192:28, col:66> col:40 fgetc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2b88b28a6d8 <col:54, col:61> col:61 _File 'FILE *'
|-FunctionDecl 0x2b88b28a948 <line:193:28, col:54> col:40 _fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2b88b28acb0 <line:194:28, col:90> col:40 fgetpos 'int (FILE *, fpos_t *) __attribute__((cdecl))':'int (FILE *, fpos_t *)'
| |-ParmVarDecl 0x2b88b28aa10 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x2b88b28ab08 <col:77, col:86> col:86 _Pos 'fpos_t *'
|-FunctionDecl 0x2b88b28b068 <line:195:28, col:128> col:43 fgets 'char *(char *, int, FILE *) __attribute__((cdecl))':'char *(char *, int, FILE *)'
| |-ParmVarDecl 0x2b88b28ad90 <col:75, col:82> col:82 _Buf 'char *'
| |-ParmVarDecl 0x2b88b28ae10 <col:93, col:97> col:97 _MaxCount 'int'
| `-ParmVarDecl 0x2b88b28ae88 <col:116, col:123> col:123 _File 'FILE *'
|-FunctionDecl 0x2b88b28b228 <line:197:24, col:61> col:36 _fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2b88b28b148 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x2b88b28b4f0 <line:204:24, col:117> col:39 _tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x2b88b28b300 <col:59, col:72> col:72 _DirName 'const char *'
| `-ParmVarDecl 0x2b88b28b380 <col:93, col:106> col:106 _FilePrefix 'const char *'
|-FunctionDecl 0x2b88b28b6c0 <line:210:28, col:54> col:40 _flushall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2b88b28bab8 <line:211:72> col:72 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x2b88b28bb58 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2b88b28bbc0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2b88b28bc38 prev 0x2b88b28bab8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:211:134> col:72 fopen 'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x2b88b28b890 <col:85, col:98> col:98 _Filename 'const char *'
| |-ParmVarDecl 0x2b88b28b910 <col:116, col:129> col:129 _Mode 'const char *'
| `-DeprecatedAttr 0x2b88b28bce8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2b88b28c160 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:213:28, col:149> col:44 fopen_s 'errno_t (FILE **, const char *, const char *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *)'
| |-ParmVarDecl 0x2b88b28be90 <col:78, col:86> col:86 _File 'FILE **'
| |-ParmVarDecl 0x2b88b28bf10 <col:100, col:113> col:113 _Filename 'const char *'
| `-ParmVarDecl 0x2b88b28bf90 <col:131, col:144> col:144 _Mode 'const char *'
|-FunctionDecl 0x2b88b28c480 <line:215:40> col:40 implicit fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x2b88b28c520 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x2b88b28c588 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x2b88b28c600 <col:40> Implicit printf 2 3
|-FunctionDecl 0x2b88b28c6d0 prev 0x2b88b28c480 <col:28, col:125> col:40 fprintf 'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x2b88b28c240 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x2b88b28c2c0 <col:100, col:113> col:113 _Format 'const char *'
| `-FormatAttr 0x2b88b28c7c8 <col:40> Inherited printf 2 3
|-FunctionDecl 0x2b88b28c990 <line:217:28, col:127> col:40 fprintf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x2b88b28c810 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x2b88b28c890 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x2b88b28cbe8 <line:219:28, col:80> col:40 fputc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2b88b28ca70 <col:51, col:55> col:55 _Ch 'int'
| `-ParmVarDecl 0x2b88b28cae8 <col:68, col:75> col:75 _File 'FILE *'
|-FunctionDecl 0x2b88b28ce18 <line:220:28, col:62> col:40 _fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x2b88b28ccc8 <col:55, col:59> col:59 _Ch 'int'
|-FunctionDecl 0x2b88b28d110 <line:221:28, col:92> col:40 fputs 'int (const char *, FILE *) __attribute__((cdecl))':'int (const char *, FILE *)'
| |-ParmVarDecl 0x2b88b28cef0 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x2b88b28cf68 <col:80, col:87> col:87 _File 'FILE *'
|-FunctionDecl 0x2b88b28d5a8 <line:222:43> col:43 implicit fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x2b88b28d648 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x2b88b286670 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x2b88b2866d8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x2b88b286740 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x2b88b2867c8 prev 0x2b88b28d5a8 <col:28, col:171> col:43 fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x2b88b28d1f0 <col:89, col:96> col:96 _DstBuf 'void *'
| |-ParmVarDecl 0x2b88b28d268 <col:110, col:117> col:117 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2b88b28d2e0 <col:136, col:143> col:143 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2b88b28d358 <col:159, col:166> col:166 _File 'FILE *'
|-FunctionDecl 0x2b88b286cd0 <line:224:28, col:195> col:43 fread_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x2b88b2868b8 <col:91, col:98> col:98 _DstBuf 'void *'
| |-ParmVarDecl 0x2b88b286930 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2b88b2869a8 <col:134, col:141> col:141 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2b88b286a20 <col:160, col:167> col:167 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2b88b286a98 <col:183, col:190> col:190 _File 'FILE *'
|-FunctionDecl 0x2b88b287190 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:226:160> col:74 freopen 'FILE *(const char *, const char *, FILE *) __attribute__((cdecl))':'FILE *(const char *, const char *, FILE *)'
| |-ParmVarDecl 0x2b88b286ec0 <col:89, col:102> col:102 _Filename 'const char *'
| |-ParmVarDecl 0x2b88b286f40 <col:120, col:133> col:133 _Mode 'const char *'
| |-ParmVarDecl 0x2b88b286fb8 <col:148, col:155> col:155 _File 'FILE *'
| `-DeprecatedAttr 0x2b88b287248 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using freopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2b88b285708 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:228:28, col:176> col:44 freopen_s 'errno_t (FILE **, const char *, const char *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *, FILE *)'
| |-ParmVarDecl 0x2b88b287390 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x2b88b287410 <col:102, col:115> col:115 _Filename 'const char *'
| |-ParmVarDecl 0x2b88b287490 <col:133, col:146> col:146 _Mode 'const char *'
| `-ParmVarDecl 0x2b88b287508 <col:161, col:168> col:168 _OldFile 'FILE *'
|-FunctionDecl 0x2b88b285ab0 <line:230:70> col:70 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x2b88b285b50 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x2b88b285bb8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x2b88b285c30 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x2b88b285c98 prev 0x2b88b285ab0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:230:153> col:70 fscanf 'int (FILE *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x2b88b2858e8 <col:85, col:92> col:92 _File 'FILE *'
| |-ParmVarDecl 0x2b88b285968 <col:128, col:141> col:141 _Format 'const char *'
| |-FormatAttr 0x2b88b285e78 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x2b88b285d48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2b88b2862b8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:231:201> col:77 _fscanf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2b88b285fb8 <col:95, col:102> col:102 _File 'FILE *'
| |-ParmVarDecl 0x2b88b286038 <col:148, col:161> col:161 _Format 'const char *'
| |-ParmVarDecl 0x2b88b2860d0 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2b88b286370 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2b88b28f700 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:235:28, col:127> col:40 fscanf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x2b88b2864b0 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x2b88b286530 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x2b88b28f9f0 <line:237:28, col:168> col:40 _fscanf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2b88b28f7d8 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x2b88b28f858 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x2b88b28f8d0 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2b88b28fd50 <line:239:28, col:94> col:40 fsetpos 'int (FILE *, const fpos_t *) __attribute__((cdecl))':'int (FILE *, const fpos_t *)'
| |-ParmVarDecl 0x2b88b28fad0 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x2b88b28fba8 <col:75, col:90> col:90 _Pos 'const fpos_t *'
|-FunctionDecl 0x2b88b290108 <line:240:28, col:103> col:40 fseek 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x2b88b28fe28 <col:54, col:61> col:61 _File 'FILE *'
| |-ParmVarDecl 0x2b88b28fea8 <col:73, col:78> col:78 _Offset 'long'
| `-ParmVarDecl 0x2b88b28ff28 <col:92, col:96> col:96 _Origin 'int'
|-FunctionDecl 0x2b88b290368 <line:241:24, col:63> col:37 ftell 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x2b88b2901e8 <col:51, col:58> col:58 _File 'FILE *'
|-FunctionDecl 0x2b88b290758 <line:243:28, col:110> col:40 _fseeki64 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x2b88b290438 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x2b88b2904b8 <col:77, col:85> col:85 _Offset 'long long'
| `-ParmVarDecl 0x2b88b290538 <col:99, col:103> col:103 _Origin 'int'
|-FunctionDecl 0x2b88b2909b8 <line:244:24, col:70> col:40 _ftelli64 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x2b88b290838 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x2b88b290e78 <line:246:43> col:43 implicit fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x2b88b290f18 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x2b88b290f80 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x2b88b290fe8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x2b88b291050 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x2b88b2910d8 prev 0x2b88b290e78 <col:28, col:159> col:43 fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x2b88b290ac0 <col:81, col:94> col:94 _Str 'const void *'
| |-ParmVarDecl 0x2b88b290b38 <col:105, col:112> col:112 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2b88b290bb0 <col:124, col:131> col:131 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2b88b290c28 <col:147, col:154> col:154 _File 'FILE *'
|-FunctionDecl 0x2b88b2912a0 <line:247:24, col:61> col:36 getc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2b88b2911c0 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x2b88b291430 <line:248:24, col:48> col:36 getchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2b88b2915b8 <line:249:24, col:53> col:36 _getmaxstdio 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2b88b28d8a0 <line:251:9, col:84> col:24 gets_s 'char *(char *, rsize_t) __attribute__((cdecl))':'char *(char *, rsize_t)'
| |-ParmVarDecl 0x2b88b291688 <col:53, col:60> col:60 _Buf 'char *'
| `-ParmVarDecl 0x2b88b28d6f0 <col:71, col:79> col:79 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x2b88b28dbc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:254:80 gets 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x2b88b28da80 <col:139, col:145> col:145 _Buffer 'char *'
| `-DeprecatedAttr 0x2b88b28dc70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2b88b28de90 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:255:16, col:54> col:28 _getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2b88b28ddb0 <col:42, col:49> col:49 _File 'FILE *'
|-FunctionDecl 0x2b88b28e0b0 <line:258:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x2b88b28df68 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x2b88b28e260 <line:261:28, col:68> col:40 _pclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2b88b28e180 <col:56, col:63> col:63 _File 'FILE *'
|-FunctionDecl 0x2b88b28e4b0 <line:262:24, col:101> col:39 _popen 'FILE *(const char *, const char *) __attribute__((cdecl))':'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x2b88b28e338 <col:53, col:66> col:66 _Command 'const char *'
| `-ParmVarDecl 0x2b88b28e3b8 <col:83, col:96> col:96 _Mode 'const char *'
|-FunctionDecl 0x2b88b291720 <line:264:40> col:40 implicit printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x2b88b2917c0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x2b88b291830 <col:40> Implicit printf 1 2
|-FunctionDecl 0x2b88b291898 prev 0x2b88b291720 <col:28, col:102> col:40 printf 'int (const char *, ...)'
| |-ParmVarDecl 0x2b88b28e590 <col:77, col:90> col:90 _Format 'const char *'
| `-FormatAttr 0x2b88b291988 <col:40> Inherited printf 1 2
|-FunctionDecl 0x2b88b291ab8 <line:266:28, col:104> col:40 printf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x2b88b2919d8 <col:79, col:92> col:92 _Format 'const char *'
|-FunctionDecl 0x2b88b291d08 <line:268:28, col:79> col:40 putc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2b88b291b90 <col:50, col:54> col:54 _Ch 'int'
| `-ParmVarDecl 0x2b88b291c08 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x2b88b291ec8 <line:269:28, col:60> col:40 putchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x2b88b291de8 <col:53, col:57> col:57 _Ch 'int'
|-FunctionDecl 0x2b88b2920e8 <line:270:28, col:69> col:40 puts 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x2b88b291fa0 <col:52, col:65> col:65 _Str 'const char *'
|-FunctionDecl 0x2b88b292338 <line:271:28, col:82> col:40 _putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2b88b2921c0 <col:51, col:55> col:55 _Word 'int'
| `-ParmVarDecl 0x2b88b292238 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x2b88b2924f8 <line:274:9, col:57> col:21 remove 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x2b88b292418 <col:35, col:48> col:48 _Filename 'const char *'
|-FunctionDecl 0x2b88b2e0120 <line:275:24, col:109> col:36 rename 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x2b88b2925d0 <col:50, col:63> col:63 _OldFilename 'const char *'
| `-ParmVarDecl 0x2b88b292650 <col:84, col:97> col:97 _NewFilename 'const char *'
|-FunctionDecl 0x2b88b2e02e0 <line:276:9, col:58> col:21 _unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x2b88b2e0200 <col:36, col:49> col:49 _Filename 'const char *'
|-FunctionDecl 0x2b88b2e0570 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:278:89> col:53 unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x2b88b2e0490 <col:67, col:80> col:80 _Filename 'const char *'
| `-DeprecatedAttr 0x2b88b2e0618 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _unlink. See online help for details." ""
|-FunctionDecl 0x2b88b2e0810 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:281:9, col:49> col:22 rewind 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x2b88b2e0738 <col:37, col:44> col:44 _File 'FILE *'
|-FunctionDecl 0x2b88b2e09a0 <line:282:28, col:51> col:40 _rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2b88b2e0c48 <line:283:69> col:69 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x2b88b2e0ce8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x2b88b2e0d58 <col:69> Implicit scanf 1 2
|-FunctionDecl 0x2b88b2e0dc0 prev 0x2b88b2e0c48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:283:129> col:69 scanf 'int (const char *restrict, ...)'
| |-ParmVarDecl 0x2b88b2e0b30 <col:104, col:117> col:117 _Format 'const char *'
| |-FormatAttr 0x2b88b2e0f98 <col:69> Inherited scanf 1 2
| `-DeprecatedAttr 0x2b88b2e0e68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2b88b2e43a0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:284:177> col:76 _scanf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2b88b2e4168 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x2b88b2e41e0 <col:155, col:165> col:165 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2b88b2e4450 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _scanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2b88b2e4678 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:288:40, col:116> col:52 scanf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x2b88b2e4598 <col:91, col:104> col:104 _Format 'const char *'
|-FunctionDecl 0x2b88b2e48c8 <line:290:40, col:157> col:52 _scanf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2b88b2e4750 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x2b88b2e47c8 <col:135, col:145> col:145 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2b88b2e4c88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:292:150> col:55 setbuf 'void (FILE *, char *) __attribute__((cdecl))':'void (FILE *, char *)'
| |-ParmVarDecl 0x2b88b2e4a60 <col:70, col:77> col:77 _File 'FILE *'
| |-ParmVarDecl 0x2b88b2e4ae0 <col:136, col:143> col:143 _Buffer 'char *'
| `-DeprecatedAttr 0x2b88b2e4d38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using setvbuf instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2b88b2e4f60 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:293:28, col:66> col:40 _setmaxstdio 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x2b88b2e4e80 <col:58, col:62> col:62 _Max 'int'
|-FunctionDecl 0x2b88b2de178 <line:294:28, col:93> col:49 _set_output_format 'unsigned int (unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int)'
| `-ParmVarDecl 0x2b88b2de030 <col:73, col:86> col:86 _Format 'unsigned int'
|-FunctionDecl 0x2b88b2de360 <line:295:28, col:72> col:49 _get_output_format 'unsigned int (void) __attribute__((cdecl))':'unsigned int (void)'
|-FunctionDecl 0x2b88b2de7b0 <line:296:28, col:145> col:40 setvbuf 'int (FILE *, char *, int, size_t) __attribute__((cdecl))':'int (FILE *, char *, int, size_t)'
| |-ParmVarDecl 0x2b88b2de428 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x2b88b2de4a8 <col:99, col:106> col:106 _Buf 'char *'
| |-ParmVarDecl 0x2b88b2de528 <col:117, col:121> col:121 _Mode 'int'
| `-ParmVarDecl 0x2b88b2de5a0 <col:133, col:140> col:140 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x2b88b2dec30 <line:297:40, col:213> col:52 _snprintf_s 'int (char *, size_t, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, ...)'
| |-ParmVarDecl 0x2b88b2de8a0 <col:93, col:100> col:100 _DstBuf 'char *'
| |-ParmVarDecl 0x2b88b2de918 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2b88b2de990 <col:140, col:147> col:147 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2b88b2dea10 <col:188, col:201> col:201 _Format 'const char *'
|-FunctionDecl 0x2b88b2dd020 <line:300:40, col:188> col:52 sprintf_s 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x2b88b2ded20 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x2b88b2ded98 <col:112, col:119> col:119 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2b88b2dee18 <col:163, col:176> col:176 _Format 'const char *'
|-FunctionDecl 0x2b88b2dd1e8 <line:303:24, col:101> col:36 _scprintf 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x2b88b2dd108 <col:76, col:89> col:89 _Format 'const char *'
|-FunctionDecl 0x2b88b2dd5c0 <line:304:70> col:70 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x2b88b2dd660 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x2b88b2dd6c8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x2b88b2dd740 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x2b88b2dd7a8 prev 0x2b88b2dd5c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:304:157> col:70 sscanf 'int (const char *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x2b88b2dd380 <col:84, col:97> col:97 _Src 'const char *'
| |-ParmVarDecl 0x2b88b2dd400 <col:132, col:145> col:145 _Format 'const char *'
| |-FormatAttr 0x2b88b2dd988 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x2b88b2dd858 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2b88b2ddd78 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:305:205> col:77 _sscanf_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2b88b2dda98 <col:94, col:107> col:107 _Src 'const char *'
| |-ParmVarDecl 0x2b88b2ddb18 <col:152, col:165> col:165 _Format 'const char *'
| |-ParmVarDecl 0x2b88b2ddb90 <col:183, col:193> col:193 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2b88b2dde30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2b88b2e51a0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:309:40, col:143> col:52 sscanf_s 'int (const char *, const char *, ...) __attribute__((cdecl))':'int (const char *, const char *, ...)'
| |-ParmVarDecl 0x2b88b2ddf78 <col:68, col:81> col:81 _Src 'const char *'
| `-ParmVarDecl 0x2b88b2e50a0 <col:118, col:131> col:131 _Format 'const char *'
|-FunctionDecl 0x2b88b2e5498 <line:311:40, col:184> col:52 _sscanf_s_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2b88b2e5280 <col:71, col:84> col:84 _Src 'const char *'
| |-ParmVarDecl 0x2b88b2e5300 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x2b88b2e5378 <col:162, col:172> col:172 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2b88b2e5928 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:312:217> col:76 _snscanf 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x2b88b2e5640 <col:121, col:134> col:134 _Src 'const char *'
| |-ParmVarDecl 0x2b88b2e56b8 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2b88b2e5738 <col:192, col:205> col:205 _Format 'const char *'
| `-DeprecatedAttr 0x2b88b2e59e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2b88b2e5fb0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:313:259> col:78 _snscanf_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2b88b2e5c20 <col:125, col:138> col:138 _Src 'const char *'
| |-ParmVarDecl 0x2b88b2e5c98 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2b88b2e5d18 <col:206, col:219> col:219 _Format 'const char *'
| |-ParmVarDecl 0x2b88b2e5d90 <col:237, col:247> col:247 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2b88b2e1060 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2b88b2e13c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:314:40, col:197> col:52 _snscanf_s 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x2b88b2e11a8 <col:99, col:112> col:112 _Src 'const char *'
| |-ParmVarDecl 0x2b88b2e1220 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2b88b2e12a0 <col:172, col:185> col:185 _Format 'const char *'
|-FunctionDecl 0x2b88b2e1758 <line:315:40, col:237> col:52 _snscanf_s_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2b88b2e14a8 <col:101, col:114> col:114 _Src 'const char *'
| |-ParmVarDecl 0x2b88b2e1520 <col:125, col:132> col:132 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2b88b2e15a0 <col:184, col:197> col:197 _Format 'const char *'
| `-ParmVarDecl 0x2b88b2e1618 <col:215, col:225> col:225 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2b88b2e19b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:317:86> col:74 tmpfile 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
| `-DeprecatedAttr 0x2b88b2e1a58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpfile_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2b88b2e1d10 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:319:28, col:96> col:44 tmpfile_s 'errno_t (FILE **) __attribute__((cdecl))':'errno_t (FILE **)'
| `-ParmVarDecl 0x2b88b2e1ba0 <col:83, col:91> col:91 _File 'FILE **'
|-FunctionDecl 0x2b88b2e60b0 <line:320:28, col:106> col:44 tmpnam_s 'errno_t (char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t)'
| |-ParmVarDecl 0x2b88b2e1de8 <col:75, col:82> col:82 _Buf 'char *'
| `-ParmVarDecl 0x2b88b2e1e60 <col:93, col:101> col:101 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x2b88b2e6330 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:323:79 tmpnam 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x2b88b2e6250 <col:113, col:119> col:119 _Buffer 'char *'
| `-DeprecatedAttr 0x2b88b2e63d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2b88b2e6698 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:324:28, col:81> col:40 ungetc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2b88b2e6520 <col:52, col:56> col:56 _Ch 'int'
| `-ParmVarDecl 0x2b88b2e6598 <col:69, col:76> col:76 _File 'FILE *'
|-FunctionDecl 0x2b88b2e6ab0 <line:325:40> col:40 implicit vfprintf 'int (FILE *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x2b88b2e6b50 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x2b88b2e6bb8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x2b88b2e6c20 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2b88b2e6ca0 <col:40> Implicit printf 2 0
|-FunctionDecl 0x2b88b2e6d08 prev 0x2b88b2e6ab0 <col:28, col:139> col:40 vfprintf 'int (FILE *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x2b88b2e6770 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x2b88b2e67f0 <col:101, col:114> col:114 _Format 'const char *'
| |-ParmVarDecl 0x2b88b2e6868 <col:123, col:131> col:131 _ArgList 'va_list':'char *'
| `-FormatAttr 0x2b88b2e6e08 <col:40> Inherited printf 2 0
|-FunctionDecl 0x2b88b2e2070 <line:326:40> col:40 implicit vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x2b88b2e2110 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x2b88b2e2178 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x2b88b2e21e0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2b88b2e2260 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x2b88b2e22c8 prev 0x2b88b2e2070 <col:28, col:138> col:40 vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x2b88b2e6e50 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x2b88b2e6ed0 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x2b88b2e6f48 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x2b88b2e23c8 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x2b88b2e2628 <line:328:28, col:141> col:40 vfprintf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x2b88b2e2410 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x2b88b2e2490 <col:103, col:116> col:116 _Format 'const char *'
| `-ParmVarDecl 0x2b88b2e2508 <col:125, col:133> col:133 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2b88b2e2920 <line:329:28, col:140> col:40 vfscanf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x2b88b2e2708 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x2b88b2e2788 <col:102, col:115> col:115 _Format 'const char *'
| `-ParmVarDecl 0x2b88b2e2800 <col:124, col:132> col:132 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2b88b2e2c68 <line:331:40> col:40 implicit vprintf 'int (const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x2b88b2e2d08 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x2b88b2e2d70 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2b88b2e2de8 <col:40> Implicit printf 1 0
|-FunctionDecl 0x2b88b2e2e50 prev 0x2b88b2e2c68 <col:28, col:116> col:40 vprintf 'int (const char *, __builtin_va_list)'
| |-ParmVarDecl 0x2b88b2e2a08 <col:78, col:91> col:91 _Format 'const char *'
| |-ParmVarDecl 0x2b88b2e2a80 <col:100, col:108> col:108 _ArgList 'va_list':'char *'
| `-FormatAttr 0x2b88b2e2f48 <col:40> Inherited printf 1 0
|-FunctionDecl 0x2b88b2df178 <line:332:40> col:40 implicit vscanf 'int (const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x2b88b2df218 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x2b88b2df280 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2b88b2df2f8 <col:40> Implicit scanf 1 0
|-FunctionDecl 0x2b88b2df360 prev 0x2b88b2df178 <col:28, col:115> col:40 vscanf 'int (const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x2b88b2e2f98 <col:77, col:90> col:90 _Format 'const char *'
| |-ParmVarDecl 0x2b88b2df040 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
| `-FormatAttr 0x2b88b2df458 <col:40> Inherited scanf 1 0
|-FunctionDecl 0x2b88b2df620 <line:334:28, col:118> col:40 vprintf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x2b88b2df4a8 <col:80, col:93> col:93 _Format 'const char *'
| `-ParmVarDecl 0x2b88b2df520 <col:102, col:110> col:110 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2b88b2df878 <line:335:28, col:117> col:40 vscanf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x2b88b2df700 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x2b88b2df778 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2b88b2dfdd8 <line:337:77> col:77 implicit vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x2b88b2dfe78 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x2b88b2dfee0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x2b88b2dff48 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x2b88b2dffb0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2b88b2ea0f0 <col:77> Implicit printf 3 0
|-FunctionDecl 0x2b88b2ea158 prev 0x2b88b2dfdd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:337:218> col:77 vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x2b88b2dfa18 <col:111, col:118> col:118 _DstBuf 'char *'
| |-ParmVarDecl 0x2b88b2dfa90 <col:132, col:139> col:139 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2b88b2dfb10 <col:180, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x2b88b2dfb88 <col:202, col:210> col:210 _ArgList 'va_list':'char *'
| |-FormatAttr 0x2b88b2ea348 <col:77> Inherited printf 3 0
| `-DeprecatedAttr 0x2b88b2ea218 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2b88b2ea7b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:339:28, col:206> col:40 vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x2b88b2ea398 <col:77, col:84> col:84 _DstBuf 'char *'
| |-ParmVarDecl 0x2b88b2ea410 <col:98, col:105> col:105 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2b88b2ea488 <col:120, col:127> col:127 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2b88b2ea508 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x2b88b2ea580 <col:190, col:198> col:198 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2b88b2eabf8 <line:342:40, col:227> col:52 _vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x2b88b2ea8b0 <col:94, col:101> col:101 _DstBuf 'char *'
| |-ParmVarDecl 0x2b88b2ea928 <col:115, col:122> col:122 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2b88b2ea9a0 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2b88b2eaa20 <col:189, col:202> col:202 _Format 'const char *'
| `-ParmVarDecl 0x2b88b2eaa98 <col:211, col:219> col:219 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2b88b2eafc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:89 _snprintf 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x2b88b2eadb0 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x2b88b2eae28 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2b88b2eaea8 <col:246, col:260> col:260 _Format 'const char *'
| `-DeprecatedAttr 0x2b88b2eb080 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2b88b2e9550 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:100 _vsnprintf 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x2b88b2e92a0 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x2b88b2e9318 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2b88b2e9398 <col:246, col:260> col:260 _Format 'const char *'
| |-ParmVarDecl 0x2b88b2e9410 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x2b88b2e9610 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2b88b2e9a08 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:349:21, col:183> col:33 vsprintf_s 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x2b88b2e9758 <col:73, col:80> col:80 _DstBuf 'char *'
| |-ParmVarDecl 0x2b88b2e97d0 <col:94, col:101> col:101 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2b88b2e9850 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x2b88b2e98c8 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2b88b2e9dc8 <line:351:40, col:149> col:52 vsscanf_s 'int (const char *, const char *, va_list) __attribute__((cdecl))':'int (const char *, const char *, va_list)'
| |-ParmVarDecl 0x2b88b2e9af8 <col:62, col:75> col:75 _Src 'const char *'
| |-ParmVarDecl 0x2b88b2e9b78 <col:111, col:124> col:124 _Format 'const char *'
| `-ParmVarDecl 0x2b88b2e9bf0 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2b88b2e3120 <line:356:85> col:85 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x2b88b2e31c0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x2b88b2e3228 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x2b88b2e32a0 <col:85> Implicit printf 2 3
|-FunctionDecl 0x2b88b2e3308 prev 0x2b88b2e3120 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:85 sprintf 'int (char *, const char *, ...)'
| |-ParmVarDecl 0x2b88b2e9f70 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x2b88b2e9ff0 <col:171, col:185> col:185 _Format 'const char *'
| |-FormatAttr 0x2b88b2e34e8 <col:85> Inherited printf 2 3
| `-DeprecatedAttr 0x2b88b2e33b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2b88b2e3910 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> col:94 implicit vsprintf 'int (char *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x2b88b2e39b0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x2b88b2e3a18 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x2b88b2e3a80 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2b88b2e3b00 <col:94> Implicit printf 2 0
|-FunctionDecl 0x2b88b2e3b68 prev 0x2b88b2e3910 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94 vsprintf 'int (char *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x2b88b2e35f8 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x2b88b2e3678 <col:171, col:185> col:185 _Format 'const char *'
| |-ParmVarDecl 0x2b88b2e36f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-FormatAttr 0x2b88b2e3d50 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> Inherited printf 2 0
| `-DeprecatedAttr 0x2b88b2e3c20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2b88b2eb100 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:357:40> col:40 implicit vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x2b88b2eb1a0 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x2b88b2eb208 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x2b88b2eb270 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2b88b2eb2f0 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x2b88b2eb358 prev 0x2b88b2eb100 <col:28, col:138> col:40 vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x2b88b2e3da0 <col:48, col:61> col:61 _srcBuf 'const char *'
| |-ParmVarDecl 0x2b88b2e3e20 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x2b88b2e3e98 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x2b88b2eb458 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x2b88b2eb620 <line:359:24, col:115> col:36 _vscprintf 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x2b88b2eb4a8 <col:77, col:90> col:90 _Format 'const char *'
| `-ParmVarDecl 0x2b88b2eb520 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2b88b2eb918 <line:360:28, col:170> col:40 _snprintf_c 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x2b88b2eb700 <col:76, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x2b88b2eb778 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2b88b2eb7f8 <col:145, col:158> col:158 _Format 'const char *'
|-FunctionDecl 0x2b88b2ebcb0 <line:361:28, col:183> col:40 _vsnprintf_c 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x2b88b2eba00 <col:77, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x2b88b2eba78 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2b88b2ebaf8 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x2b88b2ebb70 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2b88b2ebf18 <line:363:28, col:128> col:40 _fprintf_p 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x2b88b2ebd98 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x2b88b2ebe18 <col:103, col:116> col:116 _Format 'const char *'
|-FunctionDecl 0x2b88b2e80d0 <line:364:28, col:105> col:40 _printf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x2b88b2ebff8 <col:80, col:93> col:93 _Format 'const char *'
|-FunctionDecl 0x2b88b2e83c0 <line:365:28, col:168> col:40 _sprintf_p 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x2b88b2e81a8 <col:77, col:84> col:84 _Dst 'char *'
| |-ParmVarDecl 0x2b88b2e8220 <col:95, col:102> col:102 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2b88b2e82a0 <col:143, col:156> col:156 _Format 'const char *'
|-FunctionDecl 0x2b88b2e86b8 <line:366:28, col:142> col:40 _vfprintf_p 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x2b88b2e84a0 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x2b88b2e8520 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x2b88b2e8598 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2b88b2e8918 <line:367:28, col:119> col:40 _vprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x2b88b2e87a0 <col:81, col:94> col:94 _Format 'const char *'
| `-ParmVarDecl 0x2b88b2e8818 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2b88b2e8ca8 <line:368:28, col:182> col:40 _vsprintf_p 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x2b88b2e89f8 <col:78, col:85> col:85 _Dst 'char *'
| |-ParmVarDecl 0x2b88b2e8a70 <col:96, col:103> col:103 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2b88b2e8af0 <col:144, col:157> col:157 _Format 'const char *'
| `-ParmVarDecl 0x2b88b2e8b68 <col:166, col:174> col:174 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2b88b2e8e78 <line:369:24, col:103> col:36 _scprintf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x2b88b2e8d98 <col:78, col:91> col:91 _Format 'const char *'
|-FunctionDecl 0x2b88b2ed120 <line:370:24, col:117> col:36 _vscprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x2b88b2e8f50 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x2b88b2e8fc8 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2b88b2ed2e0 <line:371:9, col:61> col:21 _set_printf_count_output 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x2b88b2ed200 <col:51, col:55> col:55 _Value 'int'
|-FunctionDecl 0x2b88b2ed470 <line:372:9, col:50> col:21 _get_printf_count_output 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2b88b2ed6b8 <line:374:28, col:143> col:40 _printf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2b88b2ed540 <col:90, col:103> col:103 _Format 'const char *'
| `-ParmVarDecl 0x2b88b2ed5b8 <col:121, col:131> col:131 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2b88b2ed910 <line:375:28, col:145> col:40 _printf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2b88b2ed798 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x2b88b2ed810 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2b88b2edb68 <line:376:28, col:145> col:40 _printf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2b88b2ed9f0 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x2b88b2eda68 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2b88b2edf18 <line:377:28, col:157> col:40 _vprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2b88b2edc48 <col:91, col:104> col:104 _Format 'const char *'
| |-ParmVarDecl 0x2b88b2edcc0 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2b88b2edd38 <col:141, col:149> col:149 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2b88b2ee250 <line:378:28, col:159> col:40 _vprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2b88b2ee000 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x2b88b2ee078 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2b88b2ee130 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2b88b2ee548 <line:379:28, col:159> col:40 _vprintf_s_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2b88b2ee338 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x2b88b2ee3b0 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2b88b2ee428 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2b88b2ee840 <line:381:28, col:166> col:40 _fprintf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2b88b2ee628 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x2b88b2ee6a8 <col:113, col:126> col:126 _Format 'const char *'
| `-ParmVarDecl 0x2b88b2ee720 <col:144, col:154> col:154 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2b88b2eeb38 <line:382:28, col:168> col:40 _fprintf_p_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2b88b2ee920 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x2b88b2ee9a0 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x2b88b2eea18 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2b88b2eee30 <line:383:28, col:168> col:40 _fprintf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2b88b2eec18 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x2b88b2eec98 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x2b88b2eed10 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2b88b2e7220 <line:384:28, col:147> col:40 _vfprintf_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2b88b2eef10 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x2b88b2eef90 <col:81, col:94> col:94 _Format 'const char *'
| |-ParmVarDecl 0x2b88b2ef008 <col:112, col:122> col:122 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2b88b2ef080 <col:131, col:139> col:139 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2b88b2e75b8 <line:385:28, col:149> col:40 _vfprintf_p_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2b88b2e7308 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x2b88b2e7388 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x2b88b2e7400 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2b88b2e7478 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2b88b2e7950 <line:386:28, col:149> col:40 _vfprintf_s_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2b88b2e76a0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x2b88b2e7720 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x2b88b2e7798 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2b88b2e7810 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2b88b2e7de8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:388:221> col:78 _sprintf_l 'int (char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2b88b2e7b00 <col:112, col:119> col:119 _DstBuf 'char *'
| |-ParmVarDecl 0x2b88b2e7b80 <col:168, col:181> col:181 _Format 'const char *'
| |-ParmVarDecl 0x2b88b2e7bf8 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2b88b2e7ea0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2b88b2f2480 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:389:28, col:211> col:40 _sprintf_p_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2b88b2e7fe8 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x2b88b2f2170 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2b88b2f21f0 <col:158, col:171> col:171 _Format 'const char *'
| `-ParmVarDecl 0x2b88b2f2268 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2b88b2f2820 <line:390:40, col:221> col:52 _sprintf_s_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2b88b2f2570 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x2b88b2f25e8 <col:111, col:118> col:118 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2b88b2f2668 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x2b88b2f26e0 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2b88b2f2d70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:391:195> col:79 _vsprintf_l 'int (char *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2b88b2f2a10 <col:114, col:121> col:121 _DstBuf 'char *'
| |-ParmVarDecl 0x2b88b2f2a90 <col:137, col:150> col:150 _Format 'const char *'
| |-ParmVarDecl 0x2b88b2f2b08 <col:168> col:177 '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x2b88b2f2b80 <col:179, col:187> col:187 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x2b88b2f2e30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2b88b2ef378 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:392:28, col:225> col:40 _vsprintf_p_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2b88b2f2f78 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x2b88b2f2ff0 <col:101, col:108> col:108 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2b88b2f3070 <col:159, col:171> col:171 _Format 'const char *'
| |-ParmVarDecl 0x2b88b2f30e8 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2b88b2ef140 <col:209, col:217> col:217 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2b88b2ef7b8 <line:393:40, col:235> col:52 _vsprintf_s_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2b88b2ef470 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x2b88b2ef4e8 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2b88b2ef568 <col:169, col:182> col:182 _Format 'const char *'
| |-ParmVarDecl 0x2b88b2ef5e0 <col:200, col:210> col:210 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2b88b2ef658 <col:219, col:227> col:227 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2b88b2efa28 <line:395:28, col:145> col:40 _scprintf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2b88b2ef8b0 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x2b88b2ef928 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2b88b2efc80 <line:396:28, col:147> col:40 _scprintf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2b88b2efb08 <col:94, col:107> col:107 _Format 'const char *'
| `-ParmVarDecl 0x2b88b2efb80 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2b88b2eff70 <line:397:28, col:159> col:40 _vscprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2b88b2efd60 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x2b88b2efdd8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2b88b2efe50 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2b88b2f42c0 <line:398:28, col:161> col:40 _vscprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2b88b2f0058 <col:95, col:108> col:108 _Format 'const char *'
| |-ParmVarDecl 0x2b88b2f00d0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2b88b2f41a0 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2b88b2f4718 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:400:247> col:79 _snprintf_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2b88b2f4468 <col:115, col:122> col:122 _DstBuf 'char *'
| |-ParmVarDecl 0x2b88b2f44e0 <col:136, col:143> col:143 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2b88b2f4560 <col:194, col:207> col:207 _Format 'const char *'
| |-ParmVarDecl 0x2b88b2f45d8 <col:225, col:235> col:235 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2b88b2f47d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2b88b2f4bd0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:401:28, col:210> col:40 _snprintf_c_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2b88b2f4920 <col:78, col:85> col:85 _DstBuf 'char *'
| |-ParmVarDecl 0x2b88b2f4998 <col:99, col:106> col:106 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2b88b2f4a18 <col:157, col:170> col:170 _Format 'const char *'
| `-ParmVarDecl 0x2b88b2f4a90 <col:188, col:198> col:198 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2b88b2f0150 <line:402:40, col:245> col:52 _snprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2b88b2f4cc0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x2b88b2f4d38 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2b88b2f4db0 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2b88b2f4e30 <col:192, col:205> col:205 _Format 'const char *'
| `-ParmVarDecl 0x2b88b2f4ea8 <col:223, col:233> col:233 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2b88b2f0690 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:403:262> col:80 _vsnprintf_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2b88b2f0348 <col:117, col:124> col:124 _DstBuf 'char *'
| |-ParmVarDecl 0x2b88b2f03c0 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2b88b2f0440 <col:196, col:209> col:209 _Format 'const char *'
| |-ParmVarDecl 0x2b88b2f04b8 <col:227, col:237> col:237 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x2b88b2f0530 <col:246, col:254> col:254 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x2b88b2f0758 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2b88b2f0bd8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:404:28, col:176> col:40 _vsnprintf_c_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2b88b2f08a8 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x2b88b2f0920 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2b88b2f09a0 <col:118, col:129> col:130 'const char *'
| |-ParmVarDecl 0x2b88b2f0a18 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2b88b2f0a90 <col:160, col:168> col:168 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2b88b2f6210 <line:405:28, col:245> col:40 _vsnprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2b88b2f0cd0 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x2b88b2f0d48 <col:101, col:108> col:108 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2b88b2f0dc0 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2b88b2f0e40 <col:181, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x2b88b2f0eb8 <col:210, col:220> col:220 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2b88b2f0f30 <col:229, col:237> col:237 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2b88b2f65d0 <line:415:24, col:128> col:39 _wfsopen 'FILE *(const wchar_t *, const wchar_t *, int) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, int)'
| |-ParmVarDecl 0x2b88b2f6308 <col:55, col:71> col:71 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x2b88b2f6380 <col:89, col:105> col:105 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x2b88b2f6400 <col:117, col:121> col:121 _ShFlag 'int'
|-FunctionDecl 0x2b88b2f6840 <line:417:28, col:70> col:43 fgetwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x2b88b2f66d0 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x2b88b2f6a58 <line:418:28, col:58> col:43 _fgetwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x2b88b2f6d38 <line:419:28, col:88> col:43 fputwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x2b88b2f6b20 <col:55, col:63> col:63 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x2b88b2f6b98 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x2b88b2f6f80 <line:420:28, col:70> col:43 _fputwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x2b88b2f6e10 <col:59, col:67> col:67 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x2b88b2f1160 <line:421:24, col:65> col:39 getwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x2b88b2f7050 <col:53, col:60> col:60 _File 'FILE *'
|-FunctionDecl 0x2b88b2f12e8 <line:422:24, col:52> col:39 getwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x2b88b2f1520 <line:423:28, col:87> col:43 putwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x2b88b2f13b0 <col:54, col:62> col:62 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x2b88b2f1428 <col:75, col:82> col:82 _File 'FILE *'
|-FunctionDecl 0x2b88b2f16d0 <line:424:28, col:68> col:43 putwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x2b88b2f15f8 <col:57, col:65> col:65 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x2b88b2f1978 <line:425:28, col:88> col:43 ungetwc 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x2b88b2f17a0 <col:56, col:63> col:63 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x2b88b2f1818 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x2b88b2f1d20 <line:427:28, col:141> col:46 fgetws 'wchar_t *(wchar_t *, int, FILE *) __attribute__((cdecl))':'wchar_t *(wchar_t *, int, FILE *)'
| |-ParmVarDecl 0x2b88b2f1a50 <col:82, col:92> col:92 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2b88b2f1ad0 <col:103, col:107> col:107 _SizeInWords 'int'
| `-ParmVarDecl 0x2b88b2f1b48 <col:129, col:136> col:136 _File 'FILE *'
|-FunctionDecl 0x2b88b2f2020 <line:428:28, col:96> col:40 fputws 'int (const wchar_t *, FILE *) __attribute__((cdecl))':'int (const wchar_t *, FILE *)'
| |-ParmVarDecl 0x2b88b2f1e00 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2b88b2f1e78 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x2b88b2f7378 <line:429:28, col:124> col:46 _getws_s 'wchar_t *(wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, size_t)'
| |-ParmVarDecl 0x2b88b2f20f8 <col:84, col:94> col:94 _Str 'wchar_t *'
| `-ParmVarDecl 0x2b88b2f71d0 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x2b88b2f7680 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:431:83 _getws 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x2b88b2f7510 <col:115, col:124> col:124 _String 'wchar_t *'
| `-DeprecatedAttr 0x2b88b2f7728 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _getws_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2b88b2f79e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:432:28, col:74> col:40 _putws 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x2b88b2f7868 <col:54, col:70> col:70 _Str 'const wchar_t *'
|-FunctionDecl 0x2b88b2f7cf0 <line:434:28, col:129> col:40 fwprintf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2b88b2f7ab8 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x2b88b2f7b30 <col:101, col:117> col:117 _Format 'const wchar_t *'
|-FunctionDecl 0x2b88b2f7f40 <line:436:28, col:131> col:40 fwprintf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2b88b2f7dc8 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x2b88b2f7e40 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x2b88b2f81d0 <line:438:28, col:106> col:40 wprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x2b88b2f8018 <col:78, col:94> col:94 _Format 'const wchar_t *'
|-FunctionDecl 0x2b88b2f8380 <line:440:28, col:108> col:40 wprintf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x2b88b2f82a0 <col:80, col:96> col:96 _Format 'const wchar_t *'
|-FunctionDecl 0x2b88b2f8530 <line:442:24, col:105> col:36 _scwprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x2b88b2f8450 <col:77, col:93> col:93 _Format 'const wchar_t *'
|-FunctionDecl 0x2b88b2f88c8 <line:443:28, col:143> col:40 vfwprintf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2b88b2f8600 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x2b88b2f8678 <col:102, col:118> col:118 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2b88b2f86f0 <col:127, col:135> col:135 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2b88b2f8bb8 <line:444:28, col:142> col:40 vfwscanf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2b88b2f89a8 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x2b88b2f8a20 <col:101, col:117> col:117 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2b88b2f8a98 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2b88b2f8ea8 <line:446:28, col:145> col:40 vfwprintf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2b88b2f8c98 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x2b88b2f8d10 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2b88b2f8d88 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2b88b2f91e0 <line:447:28, col:144> col:40 vfwscanf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2b88b2f8f88 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x2b88b2f9000 <col:103, col:119> col:119 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2b88b2f9078 <col:128, col:136> col:136 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2b88b2f94e0 <line:449:28, col:120> col:40 vwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2b88b2f92c0 <col:79, col:95> col:95 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2b88b2f9338 <col:104, col:112> col:112 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2b88b2f9730 <line:450:28, col:119> col:40 vwscanf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2b88b2f95b8 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2b88b2f9630 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2b88b2f9980 <line:452:28, col:122> col:40 vwprintf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2b88b2f9808 <col:81, col:97> col:97 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2b88b2f9880 <col:106, col:114> col:114 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2b88b2f9bd0 <line:453:28, col:121> col:40 vwscanf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2b88b2f9a58 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2b88b2f9ad0 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2b88b2f9f88 <line:457:21, col:173> col:33 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2b88b2f9ca8 <col:73, col:83> col:83 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2b88b2f9d20 <col:94, col:101> col:101 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2b88b2f9d98 <col:145, col:161> col:161 _Format 'const wchar_t *'
|-FunctionDecl 0x2b88b2fa400 <line:461:21, col:187> col:33 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2b88b2fa068 <col:74, col:84> col:84 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2b88b2fa0e0 <col:95, col:102> col:102 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2b88b2fa158 <col:146, col:162> col:162 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2b88b2fa1f0 <col:171, col:179> col:179 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2b88b2fa7b8 <line:462:40, col:156> col:52 vswscanf_s 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2b88b2fa4e8 <col:63, col:79> col:79 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2b88b2fa560 <col:115, col:131> col:131 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2b88b2fa5d8 <col:140, col:148> col:148 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2b88b2faaa8 <line:466:28, col:145> col:40 vswscanf 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2b88b2fa898 <col:49, col:65> col:65 _srcBuf 'const wchar_t *'
| |-ParmVarDecl 0x2b88b2fa910 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2b88b2fa988 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2b88b2fad98 <line:468:28, col:184> col:40 _swprintf_c 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2b88b2fab88 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2b88b2fac00 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2b88b2fac78 <col:156, col:172> col:172 _Format 'const wchar_t *'
|-FunctionDecl 0x2b88b2fb120 <line:469:28, col:198> col:40 _vswprintf_c 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2b88b2fae78 <col:82, col:92> col:92 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2b88b2faef0 <col:106, col:113> col:113 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2b88b2faf68 <col:157, col:173> col:173 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2b88b2fafe0 <col:182, col:190> col:190 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2b88b2f3530 <line:471:40, col:220> col:52 _snwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2b88b2f31a8 <col:94, col:104> col:104 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2b88b2f3220 <col:118, col:125> col:125 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2b88b2f3298 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2b88b2f3310 <col:192, col:208> col:208 _Format 'const wchar_t *'
|-FunctionDecl 0x2b88b2f3a38 <line:473:40, col:234> col:52 _vsnwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2b88b2f3618 <col:95, col:105> col:105 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2b88b2f3690 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2b88b2f3708 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2b88b2f3780 <col:193, col:209> col:209 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2b88b2f37f8 <col:218, col:226> col:226 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2b88b2f3df8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:89 _snwprintf 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2b88b2f3be8 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2b88b2f3c60 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2b88b2f3cd8 <col:254, col:271> col:271 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x2b88b2f3eb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2b88b2fb430 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:101 _vsnwprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2b88b2f40b0 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2b88b2fb200 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2b88b2fb278 <col:254, col:271> col:271 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2b88b2fb2f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x2b88b2fb4f0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2b88b2fb7a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:480:28, col:132> col:40 _fwprintf_p 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2b88b2fb630 <col:60, col:67> col:67 _File 'FILE *'
| `-ParmVarDecl 0x2b88b2fb6a8 <col:104, col:120> col:120 _Format 'const wchar_t *'
|-FunctionDecl 0x2b88b2fb960 <line:481:28, col:109> col:40 _wprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x2b88b2fb880 <col:81, col:97> col:97 _Format 'const wchar_t *'
|-FunctionDecl 0x2b88b2fbc40 <line:482:28, col:146> col:40 _vfwprintf_p 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2b88b2fba30 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x2b88b2fbaa8 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2b88b2fbb20 <col:130, col:138> col:138 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2b88b2fbe98 <line:483:28, col:123> col:40 _vwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2b88b2fbd20 <col:82, col:98> col:98 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2b88b2fbd98 <col:107, col:115> col:115 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2b88b3040a0 <line:484:28, col:178> col:40 _swprintf_p 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2b88b2fbf70 <col:78, col:88> col:88 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2b88b2fbfe8 <col:102, col:109> col:109 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2b88b2fc060 <col:150, col:166> col:166 _Format 'const wchar_t *'
|-FunctionDecl 0x2b88b304428 <line:485:28, col:192> col:40 _vswprintf_p 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2b88b304180 <col:79, col:89> col:89 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2b88b3041f8 <col:103, col:110> col:110 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2b88b304270 <col:151, col:167> col:167 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2b88b3042e8 <col:176, col:184> col:184 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2b88b3045f0 <line:486:24, col:107> col:36 _scwprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x2b88b304510 <col:79, col:95> col:95 _Format 'const wchar_t *'
|-FunctionDecl 0x2b88b304838 <line:487:24, col:121> col:36 _vscwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2b88b3046c0 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2b88b304738 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2b88b304b40 <line:489:28, col:147> col:40 _wprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2b88b304910 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2b88b304988 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2b88b304d90 <line:490:28, col:149> col:40 _wprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2b88b304c18 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2b88b304c90 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2b88b304fe0 <line:491:28, col:149> col:40 _wprintf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2b88b304e68 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2b88b304ee0 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2b88b303388 <line:492:28, col:161> col:40 _vwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2b88b3030b8 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2b88b303130 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2b88b3031a8 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2b88b303678 <line:493:28, col:163> col:40 _vwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2b88b303468 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2b88b3034e0 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2b88b303558 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2b88b303968 <line:494:28, col:163> col:40 _vwprintf_s_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2b88b303758 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2b88b3037d0 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2b88b303848 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2b88b303d28 <line:496:28, col:170> col:40 _fwprintf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2b88b303a48 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x2b88b303ac0 <col:114, col:130> col:130 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2b88b303b38 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2b88b2fd030 <line:497:28, col:172> col:40 _fwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2b88b303e08 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x2b88b303e80 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2b88b303ef8 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2b88b2fd320 <line:498:28, col:172> col:40 _fwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2b88b2fd110 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x2b88b2fd188 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2b88b2fd200 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2b88b2fd770 <line:499:28, col:184> col:40 _vfwprintf_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2b88b2fd400 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x2b88b2fd478 <col:115, col:131> col:131 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2b88b2fd4f0 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2b88b2fd568 <col:168, col:176> col:176 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2b88b2fdb00 <line:500:28, col:186> col:40 _vfwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2b88b2fd858 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x2b88b2fd8d0 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2b88b2fd948 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2b88b2fd9c0 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2b88b2fde90 <line:501:28, col:186> col:40 _vfwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2b88b2fdbe8 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x2b88b2fdc60 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2b88b2fdcd8 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2b88b2fdd50 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2b88b302390 <line:503:28, col:218> col:40 _swprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2b88b2fdf78 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2b88b302080 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2b88b3020f8 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2b88b302170 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2b88b302720 <line:504:28, col:218> col:40 _swprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2b88b302478 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2b88b3024f0 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2b88b302568 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2b88b3025e0 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2b88b302ab0 <line:505:40, col:228> col:52 _swprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2b88b302808 <col:91, col:101> col:101 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2b88b302880 <col:115, col:122> col:122 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2b88b3028f8 <col:172, col:188> col:188 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2b88b302970 <col:206, col:216> col:216 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2b88b302fb8 <line:506:28, col:232> col:40 used _vswprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2b88b302b98 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2b88b302c10 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2b88b302c88 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2b88b302d00 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2b88b302d78 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2b88b305418 <line:507:28, col:232> col:40 _vswprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2b88b3050d8 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2b88b305150 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2b88b3051c8 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2b88b305240 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2b88b3052b8 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2b88b305848 <line:508:40, col:242> col:52 _vswprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2b88b305508 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2b88b305580 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2b88b3055f8 <col:173, col:189> col:189 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2b88b305670 <col:207, col:217> col:217 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2b88b3056e8 <col:226, col:234> col:234 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2b88b305ab0 <line:510:24, col:145> col:36 _scwprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2b88b305938 <col:89, col:105> col:105 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2b88b3059b0 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2b88b305d00 <line:511:24, col:147> col:36 _scwprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2b88b305b88 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2b88b305c00 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2b88b305fe8 <line:512:24, col:161> col:36 _vscwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2b88b305dd8 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2b88b305e50 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2b88b305ec8 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2b88b2ff3e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:514:255> col:80 _snwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2b88b2ff140 <col:117, col:127> col:127 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2b88b2ff1b8 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2b88b2ff230 <col:199, col:215> col:215 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2b88b2ff2a8 <col:233, col:243> col:243 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2b88b2ff4a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2b88b2ffa18 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:515:40, col:252> col:52 _snwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2b88b2ff5f0 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2b88b2ff668 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2b88b2ff6e0 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2b88b2ff758 <col:196, col:212> col:212 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2b88b2ff7d0 <col:230, col:240> col:240 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2b88b2fff50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:516:270> col:81 _vsnwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2b88b2ffc10 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2b88b2ffc88 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2b88b2ffd00 <col:201, col:217> col:217 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2b88b2ffd78 <col:235, col:245> col:245 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x2b88b2ffdf0 <col:254, col:262> col:262 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x2b88b300060 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2b88b300670 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:517:40, col:266> col:52 _vsnwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2b88b3001a8 <col:93, col:103> col:103 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2b88b300220 <col:117, col:124> col:124 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2b88b300298 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2b88b300310 <col:197, col:213> col:213 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2b88b300388 <col:231, col:241> col:241 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2b88b300400 <col:250, col:258> col:258 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2b88b300b70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:110 _swprintf 'int (wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2b88b300938 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2b88b3009b0 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-DeprecatedAttr 0x2b88b300c20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x2b88b300d38 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x2b88b2fe2a8 <col:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:134 _vswprintf 'int (wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2b88b300ff0 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2b88b2fe050 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2b88b2fe0c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x2b88b2fe360 <line:275:47, col:63> "This function or variable may be unsafe. Consider using vswprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x2b88b2fe478 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x2b88b2fea18 <col:36, line:1961:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:110 __swprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2b88b2fe738 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2b88b2fe7b0 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2b88b2fe828 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-DeprecatedAttr 0x2b88b2fead0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __swprintf_l_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x2b88b2febf0 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x2b88b3072e0 <col:36, line:1962:166> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:124 __vswprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2b88b2feeb0 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2b88b2fef28 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2b88b2fefa0 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x2b88b3070d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1962:153, col:161> col:161 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x2b88b3073a0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vswprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x2b88b3074c0 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x2b88b3077c8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:36:1, line:44:1> line:36:21 swprintf 'int (wchar_t *, size_t, const wchar_t *, ...)' static inline
| |-ParmVarDecl 0x2b88b3075e8 <col:53, col:63> col:63 used _String 'wchar_t *'
| |-ParmVarDecl 0x2b88b307660 <col:72, col:79> col:79 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2b88b3076d8 <col:117, col:133> col:133 used _Format 'const wchar_t *'
| `-CompoundStmt 0x2b88b309390 <line:37:1, line:44:1>
|   |-DeclStmt 0x2b88b307910 <line:38:5, col:21>
|   | `-VarDecl 0x2b88b3078a8 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x2b88b3079a8 <line:39:5, col:13>
|   | `-VarDecl 0x2b88b307940 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x2b88b307d00 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x2b88b307ce8 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x2b88b307c00 <col:34> '<builtin fn type>' Function 0x2b88b307a98 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x2b88b307c38 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:40:19> 'va_list':'char *' lvalue Var 0x2b88b3078a8 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x2b88b307c70 <col:29> 'const wchar_t *' lvalue ParmVar 0x2b88b3076d8 '_Format' 'const wchar_t *'
|   |-BinaryOperator 0x2b88b307fc0 <line:41:5, col:67> 'int' '='
|   | |-DeclRefExpr 0x2b88b307d30 <col:5> 'int' lvalue Var 0x2b88b307940 '_Ret' 'int'
|   | `-CallExpr 0x2b88b307f00 <col:12, col:67> 'int'
|   |   |-ImplicitCastExpr 0x2b88b307ee8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x2b88b307d68 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x2b88b302fb8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x2b88b307f48 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2b88b307d88 <col:27> 'wchar_t *' lvalue ParmVar 0x2b88b3075e8 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x2b88b307f60 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2b88b307da8 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x2b88b307660 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x2b88b307f78 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2b88b307dc8 <col:44> 'const wchar_t *' lvalue ParmVar 0x2b88b3076d8 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x2b88b307f90 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|   |   | `-ParenExpr 0x2b88b307e50 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x2b88b307e28 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x2b88b307de8 <col:26> 'int' 0
|   |   `-ImplicitCastExpr 0x2b88b307fa8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:41:59> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x2b88b307e70 <col:59> 'va_list':'char *' lvalue Var 0x2b88b3078a8 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x2b88b309320 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x2b88b309308 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x2b88b309258 <col:34> '<builtin fn type>' Function 0x2b88b3090f0 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x2b88b309290 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:42:17> 'va_list':'char *' lvalue Var 0x2b88b3078a8 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x2b88b309380 <line:43:5, col:12>
|     `-ImplicitCastExpr 0x2b88b309368 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x2b88b309348 <col:12> 'int' lvalue Var 0x2b88b307940 '_Ret' 'int'
|-FunctionDecl 0x2b88b307a98 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34> col:34 implicit used __builtin_va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x2b88b307b38 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x2b88b307ba8 <col:34> Implicit
|-FunctionDecl 0x2b88b3090f0 <line:27:34> col:34 implicit used __builtin_va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x2b88b309190 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x2b88b309200 <col:34> Implicit
|-FunctionDecl 0x2b88b309688 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:49:1, line:52:1> line:49:31 vswprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)' static inline
| |-ParmVarDecl 0x2b88b3093e0 <col:64, col:74> col:74 used _String 'wchar_t *'
| |-ParmVarDecl 0x2b88b309458 <col:83, col:90> col:90 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2b88b3094d0 <col:138, col:154> col:154 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x2b88b309548 <col:163, col:171> col:171 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x2b88b309970 <line:50:1, line:52:1>
|   `-ReturnStmt 0x2b88b309960 <line:51:5, col:62>
|     `-CallExpr 0x2b88b3098a0 <col:12, col:62> 'int'
|       |-ImplicitCastExpr 0x2b88b309888 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x2b88b309760 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x2b88b302fb8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x2b88b3098e8 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x2b88b309780 <col:27> 'wchar_t *' lvalue ParmVar 0x2b88b3093e0 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x2b88b309900 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x2b88b3097a0 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x2b88b309458 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x2b88b309918 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x2b88b3097c0 <col:44> 'const wchar_t *' lvalue ParmVar 0x2b88b3094d0 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x2b88b309930 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|       | `-ParenExpr 0x2b88b309848 <col:17, col:27> 'void *'
|       |   `-CStyleCastExpr 0x2b88b309820 <col:18, col:26> 'void *' <NullToPointer>
|       |     `-IntegerLiteral 0x2b88b3097e0 <col:26> 'int' 0
|       `-ImplicitCastExpr 0x2b88b309948 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:51:59> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x2b88b309868 <col:59> 'va_list':'char *' lvalue ParmVar 0x2b88b309548 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x2b88b309c10 <line:60:1, line:68:1> line:60:21 _swprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)' static inline
| |-ParmVarDecl 0x2b88b309998 <col:56, col:66> col:66 used _String 'wchar_t *'
| |-ParmVarDecl 0x2b88b309a10 <col:75, col:82> col:82 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2b88b309a88 <col:130, col:146> col:146 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x2b88b309b00 <col:155, col:165> col:165 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| `-CompoundStmt 0x2b88b306168 <line:61:1, line:68:1>
|   |-DeclStmt 0x2b88b309d60 <line:62:5, col:21>
|   | `-VarDecl 0x2b88b309cf8 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x2b88b309df8 <line:63:5, col:13>
|   | `-VarDecl 0x2b88b309d90 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x2b88b309ea0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x2b88b309e88 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x2b88b309e10 <col:34> '<builtin fn type>' Function 0x2b88b307a98 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x2b88b309e30 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:64:19> 'va_list':'char *' lvalue Var 0x2b88b309cf8 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x2b88b309e68 <col:29> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x2b88b309b00 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |-BinaryOperator 0x2b88b30a0a0 <line:65:5, col:72> 'int' '='
|   | |-DeclRefExpr 0x2b88b309ed0 <col:5> 'int' lvalue Var 0x2b88b309d90 '_Ret' 'int'
|   | `-CallExpr 0x2b88b309fe0 <col:12, col:72> 'int'
|   |   |-ImplicitCastExpr 0x2b88b309fc8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x2b88b309f08 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x2b88b302fb8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x2b88b30a028 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2b88b309f28 <col:27> 'wchar_t *' lvalue ParmVar 0x2b88b309998 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x2b88b30a040 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2b88b309f48 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x2b88b309a10 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x2b88b30a058 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2b88b309f68 <col:44> 'const wchar_t *' lvalue ParmVar 0x2b88b309a88 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x2b88b30a070 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2b88b309f88 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x2b88b309b00 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |   `-ImplicitCastExpr 0x2b88b30a088 <col:64> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x2b88b309fa8 <col:64> 'va_list':'char *' lvalue Var 0x2b88b309cf8 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x2b88b3060f8 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x2b88b3060e0 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x2b88b30a0c0 <col:34> '<builtin fn type>' Function 0x2b88b3090f0 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x2b88b3060c0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:66:17> 'va_list':'char *' lvalue Var 0x2b88b309cf8 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x2b88b306158 <line:67:5, col:12>
|     `-ImplicitCastExpr 0x2b88b306140 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x2b88b306120 <col:12> 'int' lvalue Var 0x2b88b309d90 '_Ret' 'int'
|-FunctionDecl 0x2b88b3064f8 <line:73:1, line:76:1> line:73:31 _vswprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' static inline
| |-ParmVarDecl 0x2b88b3061b8 <col:67, col:77> col:77 used _String 'wchar_t *'
| |-ParmVarDecl 0x2b88b306230 <col:86, col:93> col:93 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2b88b3062a8 <col:141, col:157> col:157 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x2b88b306320 <col:166, col:176> col:176 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x2b88b306398 <col:187, col:195> col:195 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x2b88b306780 <line:74:1, line:76:1>
|   `-ReturnStmt 0x2b88b306770 <line:75:5, col:67>
|     `-CallExpr 0x2b88b3066b0 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x2b88b306698 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x2b88b3065d8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x2b88b302fb8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x2b88b3066f8 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x2b88b3065f8 <col:27> 'wchar_t *' lvalue ParmVar 0x2b88b3061b8 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x2b88b306710 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x2b88b306618 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x2b88b306230 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x2b88b306728 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x2b88b306638 <col:44> 'const wchar_t *' lvalue ParmVar 0x2b88b3062a8 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x2b88b306740 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|       | `-DeclRefExpr 0x2b88b306658 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x2b88b306320 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|       `-ImplicitCastExpr 0x2b88b306758 <col:64> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x2b88b306678 <col:64> 'va_list':'char *' lvalue ParmVar 0x2b88b306398 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x2b88b3069c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:555:24, col:129> col:42 _wtempnam 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2b88b3067a8 <col:63, col:79> col:79 _Directory 'const wchar_t *'
| `-ParmVarDecl 0x2b88b306820 <col:102, col:118> col:118 _FilePrefix 'const wchar_t *'
|-FunctionDecl 0x2b88b306c18 <line:561:24, col:119> col:36 _vscwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2b88b306aa0 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2b88b306b18 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2b88b306f00 <line:562:24, col:159> col:36 _vscwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2b88b306cf0 <col:90, col:106> col:106 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2b88b306d68 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2b88b306de0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2b88b308258 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:563:158> col:71 fwscanf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2b88b3080e0 <col:87, col:94> col:94 _File 'FILE *'
| |-ParmVarDecl 0x2b88b308158 <col:130, col:146> col:146 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x2b88b308308 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2b88b308718 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:564:206> col:78 _fwscanf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2b88b308508 <col:97, col:104> col:104 _File 'FILE *'
| |-ParmVarDecl 0x2b88b308580 <col:150, col:166> col:166 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2b88b3085f8 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2b88b3087d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2b88b308a88 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:568:28, col:131> col:40 fwscanf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2b88b308910 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x2b88b308988 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x2b88b308d70 <line:570:28, col:172> col:40 _fwscanf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2b88b308b60 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x2b88b308bd8 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2b88b308c50 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2b88b30b180 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:571:165> col:71 swscanf 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2b88b308f10 <col:86, col:102> col:102 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2b88b308f88 <col:137, col:153> col:153 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x2b88b30b230 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using swscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2b88b30b708 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:572:213> col:78 _swscanf_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2b88b30b430 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2b88b30b4a8 <col:157, col:173> col:173 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2b88b30b520 <col:191, col:201> col:201 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2b88b30b7c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2b88b30ba78 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:574:40, col:149> col:52 swscanf_s 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2b88b30b900 <col:69, col:84> col:84 _Src 'const wchar_t *'
| `-ParmVarDecl 0x2b88b30b978 <col:121, col:137> col:137 _Format 'const wchar_t *'
|-FunctionDecl 0x2b88b30bd60 <line:576:40, col:191> col:52 _swscanf_s_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2b88b30bb50 <col:72, col:88> col:88 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2b88b30bbc8 <col:135, col:151> col:151 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2b88b30bc40 <col:169, col:179> col:179 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2b88b30c208 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:577:219> col:77 _snwscanf 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2b88b30bf00 <col:117, col:133> col:133 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2b88b30bf78 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2b88b30bff0 <col:191, col:207> col:207 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x2b88b30c2c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2b88b30c840 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:578:261> col:79 _snwscanf_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2b88b30c4c0 <col:121, col:137> col:137 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2b88b30c538 <col:148, col:155> col:155 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2b88b30c5b0 <col:205, col:221> col:221 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2b88b30c628 <col:239, col:249> col:249 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2b88b30c900 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2b88b30cc50 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:579:40, col:198> col:52 _snwscanf_s 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2b88b30ca40 <col:94, col:110> col:110 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2b88b30cab8 <col:121, col:128> col:128 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2b88b30cb30 <col:170, col:186> col:186 _Format 'const wchar_t *'
|-FunctionDecl 0x2b88b30cfd8 <line:580:40, col:238> col:52 _snwscanf_s_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2b88b30cd30 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2b88b30cda8 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2b88b30ce20 <col:182, col:198> col:198 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2b88b30ce98 <col:216, col:226> col:226 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2b88b313340 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:581:134> col:70 wscanf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| |-ParmVarDecl 0x2b88b313260 <col:106, col:122> col:122 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x2b88b3133e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2b88b313760 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:582:182> col:77 _wscanf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2b88b3135e8 <col:126, col:142> col:142 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2b88b313660 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2b88b313810 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2b88b313a30 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:584:40, col:120> col:52 wscanf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x2b88b313950 <col:92, col:108> col:108 _Format 'const wchar_t *'
|-FunctionDecl 0x2b88b313c78 <line:586:40, col:161> col:52 _wscanf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2b88b313b00 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2b88b313b78 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2b88b313f78 <line:589:24, col:99> col:39 _wfdopen 'FILE *(int, const wchar_t *) __attribute__((cdecl))':'FILE *(int, const wchar_t *)'
| |-ParmVarDecl 0x2b88b313d58 <col:53, col:57> col:57 _FileHandle 'int'
| `-ParmVarDecl 0x2b88b313dd0 <col:78, col:94> col:94 _Mode 'const wchar_t *'
|-FunctionDecl 0x2b88b30f2f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:590:144> col:74 _wfopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2b88b314110 <col:89, col:105> col:105 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x2b88b30f150 <col:123, col:139> col:139 _Mode 'const wchar_t *'
| `-DeprecatedAttr 0x2b88b30f3a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2b88b30f7b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:591:28, col:157> col:44 _wfopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2b88b30f4f0 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x2b88b30f568 <col:102, col:118> col:118 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x2b88b30f5e0 <col:136, col:152> col:152 _Mode 'const wchar_t *'
|-FunctionDecl 0x2b88b30fc10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:592:173> col:76 _wfreopen 'FILE *(const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x2b88b30f950 <col:93, col:109> col:109 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x2b88b30f9c8 <col:127, col:143> col:143 _Mode 'const wchar_t *'
| |-ParmVarDecl 0x2b88b30fa40 <col:158, col:165> col:165 _OldFile 'FILE *'
| `-DeprecatedAttr 0x2b88b30fcc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfreopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2b88b30e188 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:593:28, col:184> col:44 _wfreopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x2b88b30fe10 <col:82, col:90> col:90 _File 'FILE **'
| |-ParmVarDecl 0x2b88b30fe88 <col:104, col:120> col:120 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x2b88b30ff00 <col:138, col:154> col:154 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x2b88b30ff78 <col:169, col:176> col:176 _OldFile 'FILE *'
|-FunctionDecl 0x2b88b30e3e0 <line:597:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x2b88b30e270 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x2b88b30e620 <line:600:24, col:107> col:39 _wpopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2b88b30e4b0 <col:54, col:69> col:69 _Command 'const wchar_t *'
| `-ParmVarDecl 0x2b88b30e528 <col:86, col:102> col:102 _Mode 'const wchar_t *'
|-FunctionDecl 0x2b88b30e7d8 <line:602:9, col:62> col:21 _wremove 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x2b88b30e6f8 <col:37, col:53> col:53 _Filename 'const wchar_t *'
|-FunctionDecl 0x2b88b30eac8 <line:603:28, col:127> col:44 _wtmpnam_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x2b88b30e8a8 <col:84, col:94> col:94 _DstBuf 'wchar_t *'
| `-ParmVarDecl 0x2b88b30e920 <col:108, col:115> col:115 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x2b88b30ed38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:605:82 _wtmpnam 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x2b88b30ec60 <col:118, col:127> col:127 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x2b88b30ede0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wtmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2b88b30eff8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:607:28, col:78> col:43 _fgetwc_nolock 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x2b88b30ef20 <col:66, col:73> col:73 _File 'FILE *'
|-FunctionDecl 0x2b88b30d228 <line:608:28, col:96> col:43 _fputwc_nolock 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x2b88b30f0c8 <col:63, col:71> col:71 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x2b88b30d130 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x2b88b30d470 <line:609:28, col:96> col:43 _ungetwc_nolock 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x2b88b30d300 <col:64, col:71> col:71 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x2b88b30d378 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x2b88b30d620 <line:670:9, col:53> col:22 _lock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x2b88b30d548 <col:41, col:48> col:48 _File 'FILE *'
|-FunctionDecl 0x2b88b30d7c8 <line:671:9, col:55> col:22 _unlock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x2b88b30d6f0 <col:43, col:50> col:50 _File 'FILE *'
|-FunctionDecl 0x2b88b30d978 <line:673:28, col:75> col:40 _fclose_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2b88b30d898 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x2b88b30db28 <line:674:28, col:79> col:40 _fflush_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2b88b30da48 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x2b88b30dea0 <line:675:28, col:179> col:43 _fread_nolock 'size_t (void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x2b88b30dc00 <col:97, col:104> col:104 _DstBuf 'void *'
| |-ParmVarDecl 0x2b88b30dc78 <col:118, col:125> col:125 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2b88b30dcf0 <col:144, col:151> col:151 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2b88b30dd68 <col:167, col:174> col:174 _File 'FILE *'
|-FunctionDecl 0x2b88b316390 <line:676:28, col:203> col:43 _fread_nolock_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x2b88b30df90 <col:99, col:106> col:106 _DstBuf 'void *'
| |-ParmVarDecl 0x2b88b30e008 <col:120, col:127> col:127 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2b88b30e080 <col:142, col:149> col:149 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2b88b3161c0 <col:168, col:175> col:175 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2b88b316238 <col:191, col:198> col:198 _File 'FILE *'
|-FunctionDecl 0x2b88b3166a0 <line:677:28, col:111> col:40 _fseek_nolock 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x2b88b316480 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x2b88b316500 <col:81, col:86> col:86 _Offset 'long'
| `-ParmVarDecl 0x2b88b316580 <col:100, col:104> col:104 _Origin 'int'
|-FunctionDecl 0x2b88b316860 <line:678:24, col:71> col:37 _ftell_nolock 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x2b88b316780 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x2b88b316b50 <line:679:28, col:117> col:40 _fseeki64_nolock 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x2b88b316930 <col:65, col:72> col:72 _File 'FILE *'
| |-ParmVarDecl 0x2b88b3169b0 <col:84, col:92> col:92 _Offset 'long long'
| `-ParmVarDecl 0x2b88b316a30 <col:106, col:110> col:110 _Origin 'int'
|-FunctionDecl 0x2b88b316d10 <line:680:24, col:77> col:40 _ftelli64_nolock 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x2b88b316c30 <col:65, col:72> col:72 _File 'FILE *'
|-FunctionDecl 0x2b88b317088 <line:681:28, col:170> col:43 _fwrite_nolock 'size_t (const void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (const void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x2b88b316de8 <col:89, col:102> col:102 _DstBuf 'const void *'
| |-ParmVarDecl 0x2b88b316e60 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2b88b316ed8 <col:135, col:142> col:142 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2b88b316f50 <col:158, col:165> col:165 _File 'FILE *'
|-FunctionDecl 0x2b88b3102d8 <line:682:28, col:89> col:40 _ungetc_nolock 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2b88b310160 <col:60, col:64> col:64 _Ch 'int'
| `-ParmVarDecl 0x2b88b3101d8 <col:77, col:84> col:84 _File 'FILE *'
|-FunctionDecl 0x2b88b310610 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:709:136> col:57 tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x2b88b310490 <col:76, col:89> col:89 _Directory 'const char *'
| |-ParmVarDecl 0x2b88b310510 <col:112, col:125> col:125 _FilePrefix 'const char *'
| `-DeprecatedAttr 0x2b88b3106c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tempnam. See online help for details." ""
|-FunctionDecl 0x2b88b310978 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:715:89> col:75 fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x2b88b310a18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcloseall. See online help for details." ""
|-FunctionDecl 0x2b88b310d58 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:716:127> col:71 fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x2b88b310be0 <col:83, col:87> col:87 _FileHandle 'int'
| |-ParmVarDecl 0x2b88b310c60 <col:107, col:120> col:120 _Format 'const char *'
| `-DeprecatedAttr 0x2b88b310e08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fdopen. See online help for details." ""
|-FunctionDecl 0x2b88b3151b0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:717:87> col:74 fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x2b88b315250 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fgetchar. See online help for details." ""
|-FunctionDecl 0x2b88b3154f0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:718:92> col:68 fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x2b88b315410 <col:80, col:87> col:87 _File 'FILE *'
| `-DeprecatedAttr 0x2b88b315598 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fileno. See online help for details." ""
|-FunctionDecl 0x2b88b315818 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:719:87> col:74 flushall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x2b88b3158b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _flushall. See online help for details." ""
|-FunctionDecl 0x2b88b315b60 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:720:95> col:74 fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| |-ParmVarDecl 0x2b88b315a80 <col:88, col:92> col:92 _Ch 'int'
| `-DeprecatedAttr 0x2b88b315c08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fputchar. See online help for details." ""
|-FunctionDecl 0x2b88b315ee8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:721:91> col:66 getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x2b88b315e08 <col:79, col:86> col:86 _File 'FILE *'
| `-DeprecatedAttr 0x2b88b315f90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _getw. See online help for details." ""
|-FunctionDecl 0x2b88b318358 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:722:109> col:70 putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2b88b3181e0 <col:80, col:84> col:84 _Ch 'int'
| |-ParmVarDecl 0x2b88b318258 <col:97, col:104> col:104 _File 'FILE *'
| `-DeprecatedAttr 0x2b88b318408 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putw. See online help for details." ""
|-FunctionDecl 0x2b88b3186c8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:723:77> col:67 rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x2b88b318768 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _rmtmp. See online help for details." ""
|-FunctionDecl 0x2b88b3189a0 <D:\Microsoft Visual Studio 12.0\VC\include\errno.h:31:9, col:41> col:30 _errno 'int *(void) __attribute__((cdecl))':'int *(void)' extern
|-FunctionDecl 0x2b88b318bb0 <line:34:1, col:43> col:17 _set_errno 'errno_t (int) __attribute__((cdecl))':'errno_t (int)'
| `-ParmVarDecl 0x2b88b318a70 <col:33, col:37> col:37 _Value 'int'
|-FunctionDecl 0x2b88b318e00 <line:35:1, col:46> col:17 _get_errno 'errno_t (int *) __attribute__((cdecl))':'errno_t (int *)'
| `-ParmVarDecl 0x2b88b318c88 <col:34, col:40> col:40 _Value 'int *'
|-FunctionDecl 0x2b88b3190c0 <.//openssl//file_jk/before\crypto\evp\bio_b64.c:17:1, col:54> col:12 invalid b64_write 'int (int *, const char *, int)' static
| |-ParmVarDecl 0x2b88b318ed8 <col:22, col:27> col:27 invalid h 'int *'
| |-ParmVarDecl 0x2b88b318f58 <col:30, col:42> col:42 buf 'const char *'
| `-ParmVarDecl 0x2b88b318fd8 <col:47, col:51> col:51 num 'int'
|-FunctionDecl 0x2b88b3203d0 <line:18:1, col:48> col:12 invalid b64_read 'int (int *, char *, int)' static
| |-ParmVarDecl 0x2b88b3201e0 <col:21, col:26> col:26 invalid h 'int *'
| |-ParmVarDecl 0x2b88b320260 <col:29, col:35> col:35 buf 'char *'
| `-ParmVarDecl 0x2b88b3202e0 <col:40, col:44> col:44 size 'int'
|-FunctionDecl 0x2b88b320600 <line:19:1, col:44> col:12 invalid b64_puts 'int (int *, const char *)' static
| |-ParmVarDecl 0x2b88b3204a0 <col:21, col:26> col:26 invalid h 'int *'
| `-ParmVarDecl 0x2b88b320520 <col:29, col:41> col:41 str 'const char *'
|-FunctionDecl 0x2b88b320940 <line:23:1, col:60> col:13 invalid b64_ctrl 'long (int *, int, long, void *)' static
| |-ParmVarDecl 0x2b88b3206c8 <col:22, col:27> col:27 invalid h 'int *'
| |-ParmVarDecl 0x2b88b320748 <col:30, col:34> col:34 cmd 'int'
| |-ParmVarDecl 0x2b88b3207c8 <col:39, col:44> col:44 arg1 'long'
| `-ParmVarDecl 0x2b88b320848 <col:50, col:56> col:56 arg2 'void *'
|-FunctionDecl 0x2b88b320ab0 <line:24:1, col:26> col:12 invalid b64_new 'int (int *)' static
| `-ParmVarDecl 0x2b88b320a18 <col:20, col:25> col:25 invalid h 'int *'
|-FunctionDecl 0x2b88b320c08 <line:25:1, col:30> col:12 invalid b64_free 'int (int *)' static
| `-ParmVarDecl 0x2b88b320b70 <col:21, col:26> col:26 invalid data 'int *'
|-FunctionDecl 0x2b88b320eb0 <line:26:1, col:63> col:13 invalid b64_callback_ctrl 'long (int *, int, int *)' static
| |-ParmVarDecl 0x2b88b320cc8 <col:31, col:36> col:36 invalid h 'int *'
| |-ParmVarDecl 0x2b88b320d48 <col:39, col:43> col:43 cmd 'int'
| `-ParmVarDecl 0x2b88b320dc8 <col:48, col:61> col:61 invalid fp 'int *'
|-RecordDecl 0x2b88b320f68 <line:33:9, line:47:1> line:33:16 invalid struct b64_struct definition
| |-FieldDecl 0x2b88b321038 <line:37:5, col:9> col:9 referenced buf_len 'int'
| |-FieldDecl 0x2b88b3210a8 <line:38:5, col:9> col:9 referenced buf_off 'int'
| |-FieldDecl 0x2b88b321118 <line:39:5, col:9> col:9 referenced tmp_len 'int'
| |-FieldDecl 0x2b88b321188 <line:40:5, col:9> col:9 referenced tmp_nl 'int'
| |-FieldDecl 0x2b88b323228 <line:41:5, col:9> col:9 referenced encode 'int'
| |-FieldDecl 0x2b88b323298 <line:42:5, col:9> col:9 referenced start 'int'
| |-FieldDecl 0x2b88b323308 <line:43:5, col:9> col:9 referenced cont 'int'
| |-FieldDecl 0x2b88b323378 <line:44:5, col:21> col:21 invalid base64 'int *'
| |-FieldDecl 0x2b88b323648 <line:45:5, col:52> col:10 invalid buf 'char [EVP_ENCODE_LENGTH(1024) + 10]'
| `-FieldDecl 0x2b88b323738 <line:46:5, col:28> col:10 referenced tmp 'char [1024]'
|-FunctionDecl 0x2b88b323420 <<invalid sloc>> line:45:14 implicit used EVP_ENCODE_LENGTH 'int ()'
|-TypedefDecl 0x2b88b3237e8 <line:33:1, line:47:3> col:3 referenced BIO_B64_CTX 'struct b64_struct':'struct b64_struct'
| `-ElaboratedType 0x2b88b323790 'struct b64_struct' sugar
|   `-RecordType 0x2b88b321000 'struct b64_struct'
|     `-Record 0x2b88b320f68 'b64_struct'
|-VarDecl 0x2b88b323870 <line:49:1, col:25> col:25 invalid methods_b64 'const int' static
|-FunctionDecl 0x2b88b323a90 <line:63:1, line:66:1> line:63:19 invalid BIO_f_base64 'const int *(void)'
| `-CompoundStmt 0x2b88b323b48 <line:64:1, line:66:1>
|-FunctionDecl 0x2b88b323c08 <line:68:1, line:88:1> line:68:12 invalid b64_new 'int (int *)' static
| |-ParmVarDecl 0x2b88b323b70 <col:20, col:25> col:25 invalid bi 'int *'
| `-CompoundStmt 0x2b88b329a30 <line:69:1, line:88:1>
|   |-DeclStmt 0x2b88b323dc0 <line:70:5, col:21>
|   | `-VarDecl 0x2b88b323d58 <col:5, col:18> col:18 used ctx 'BIO_B64_CTX *'
|   |-BinaryOperator 0x2b88b324008 <line:72:5, col:38> 'BIO_B64_CTX *' '='
|   | |-DeclRefExpr 0x2b88b323dd8 <col:5> 'BIO_B64_CTX *' lvalue Var 0x2b88b323d58 'ctx' 'BIO_B64_CTX *'
|   | `-ImplicitCastExpr 0x2b88b323ff0 <col:11, col:38> 'BIO_B64_CTX *' <IntegralToPointer>
|   |   `-CallExpr 0x2b88b323fc8 <col:11, col:38> 'int'
|   |     |-ImplicitCastExpr 0x2b88b323fb0 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x2b88b323f00 <col:11> 'int ()' Function 0x2b88b323e38 'OPENSSL_zalloc' 'int ()'
|   |     `-UnaryExprOrTypeTraitExpr 0x2b88b323f90 <col:26, col:37> 'unsigned long long' sizeof
|   |       `-ParenExpr 0x2b88b323f70 <col:32, col:37> 'BIO_B64_CTX':'struct b64_struct' lvalue
|   |         `-UnaryOperator 0x2b88b323f58 <col:33, col:34> 'BIO_B64_CTX':'struct b64_struct' lvalue prefix '*' cannot overflow
|   |           `-ImplicitCastExpr 0x2b88b323f40 <col:34> 'BIO_B64_CTX *' <LValueToRValue>
|   |             `-DeclRefExpr 0x2b88b323f20 <col:34> 'BIO_B64_CTX *' lvalue Var 0x2b88b323d58 'ctx' 'BIO_B64_CTX *' non_odr_use_unevaluated
|   |-IfStmt 0x2b88b324158 <line:73:5, line:74:16>
|   | |-BinaryOperator 0x2b88b324100 <line:73:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x2b88b3240d0 <.//openssl//file_jk/before\crypto\evp\bio_b64.c:73:9> 'BIO_B64_CTX *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2b88b324028 <col:9> 'BIO_B64_CTX *' lvalue Var 0x2b88b323d58 'ctx' 'BIO_B64_CTX *'
|   | | `-ImplicitCastExpr 0x2b88b3240e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'BIO_B64_CTX *' <BitCast>
|   | |   `-ParenExpr 0x2b88b3240b0 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x2b88b324088 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x2b88b324048 <col:26> 'int' 0
|   | `-ReturnStmt 0x2b88b324148 <.//openssl//file_jk/before\crypto\evp\bio_b64.c:74:9, col:16>
|   |   `-IntegerLiteral 0x2b88b324120 <col:16> 'int' 0
|   |-BinaryOperator 0x2b88b329270 <line:76:5, col:17> 'int' '='
|   | |-MemberExpr 0x2b88b3241a8 <col:5, col:10> 'int' lvalue ->cont 0x2b88b323308
|   | | `-ImplicitCastExpr 0x2b88b324190 <col:5> 'BIO_B64_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2b88b324170 <col:5> 'BIO_B64_CTX *' lvalue Var 0x2b88b323d58 'ctx' 'BIO_B64_CTX *'
|   | `-IntegerLiteral 0x2b88b3241d8 <col:17> 'int' 1
|   |-BinaryOperator 0x2b88b329320 <line:77:5, col:18> 'int' '='
|   | |-MemberExpr 0x2b88b3292c8 <col:5, col:10> 'int' lvalue ->start 0x2b88b323298
|   | | `-ImplicitCastExpr 0x2b88b3292b0 <col:5> 'BIO_B64_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2b88b329290 <col:5> 'BIO_B64_CTX *' lvalue Var 0x2b88b323d58 'ctx' 'BIO_B64_CTX *'
|   | `-IntegerLiteral 0x2b88b3292f8 <col:18> 'int' 1
|   |-IfStmt 0x2b88b329778 <line:79:5, line:82:5>
|   | |-OpaqueValueExpr 0x2b88b329760 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x2b88b329740 <line:79:30, line:82:5>
|   |   |-CallExpr 0x2b88b3296c8 <line:80:9, col:25> 'int'
|   |   | |-ImplicitCastExpr 0x2b88b3296b0 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x2b88b329670 <col:9> 'int ()' Function 0x2b88b3295a8 'OPENSSL_free' 'int ()'
|   |   | `-ImplicitCastExpr 0x2b88b3296f0 <col:22> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x2b88b329690 <col:22> 'BIO_B64_CTX *' lvalue Var 0x2b88b323d58 'ctx' 'BIO_B64_CTX *'
|   |   `-ReturnStmt 0x2b88b329730 <line:81:9, col:16>
|   |     `-IntegerLiteral 0x2b88b329708 <col:16> 'int' 0
|   `-ReturnStmt 0x2b88b329a20 <line:87:5, col:12>
|     `-IntegerLiteral 0x2b88b3299f8 <col:12> 'int' 1
|-FunctionDecl 0x2b88b329b28 <line:90:1, line:106:1> line:90:12 invalid b64_free 'int (int *)' static
| |-ParmVarDecl 0x2b88b329a90 <col:21, col:26> col:26 invalid a 'int *'
| `-CompoundStmt 0x2b88b3242c0 <line:91:1, line:106:1>
|   |-DeclStmt 0x2b88b329c60 <line:92:5, col:21>
|   | `-VarDecl 0x2b88b329bf8 <col:5, col:18> col:18 used ctx 'BIO_B64_CTX *'
|   |-IfStmt 0x2b88b329d50 <line:93:5, line:94:16>
|   | |-OpaqueValueExpr 0x2b88b329d38 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x2b88b329d28 <col:9, col:16>
|   |   `-IntegerLiteral 0x2b88b329d00 <col:16> 'int' 0
|   |-IfStmt 0x2b88b329fe0 <line:97:5, line:98:16>
|   | |-BinaryOperator 0x2b88b329f88 <line:97:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x2b88b329f58 <.//openssl//file_jk/before\crypto\evp\bio_b64.c:97:9> 'BIO_B64_CTX *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2b88b329eb0 <col:9> 'BIO_B64_CTX *' lvalue Var 0x2b88b329bf8 'ctx' 'BIO_B64_CTX *'
|   | | `-ImplicitCastExpr 0x2b88b329f70 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'BIO_B64_CTX *' <BitCast>
|   | |   `-ParenExpr 0x2b88b329f38 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x2b88b329f10 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x2b88b329ed0 <col:26> 'int' 0
|   | `-ReturnStmt 0x2b88b329fd0 <.//openssl//file_jk/before\crypto\evp\bio_b64.c:98:9, col:16>
|   |   `-IntegerLiteral 0x2b88b329fa8 <col:16> 'int' 0
|   |-CallExpr 0x2b88b32a198 <line:101:5, col:21> 'int'
|   | |-ImplicitCastExpr 0x2b88b32a180 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x2b88b32a140 <col:5> 'int ()' Function 0x2b88b3295a8 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x2b88b32a1c0 <col:18> 'BIO_B64_CTX *' <LValueToRValue>
|   |   `-DeclRefExpr 0x2b88b32a160 <col:18> 'BIO_B64_CTX *' lvalue Var 0x2b88b329bf8 'ctx' 'BIO_B64_CTX *'
|   `-ReturnStmt 0x2b88b3242b0 <line:105:5, col:12>
|     `-IntegerLiteral 0x2b88b324288 <col:12> 'int' 1
|-FunctionDecl 0x2b88b3244b8 <line:108:1, line:324:1> line:108:12 invalid b64_read 'int (int *, char *, int)' static
| |-ParmVarDecl 0x2b88b324310 <col:21, col:26> col:26 invalid b 'int *'
| |-ParmVarDecl 0x2b88b324390 <col:29, col:35> col:35 used out 'char *'
| |-ParmVarDecl 0x2b88b324410 <col:40, col:44> col:44 used outl 'int'
| `-CompoundStmt 0x2b88b32dec8 <line:109:1, line:324:1>
|   |-DeclStmt 0x2b88b324aa8 <line:110:5, col:54>
|   | |-VarDecl 0x2b88b3245a0 <col:5, col:15> col:9 used ret 'int' cinit
|   | | `-IntegerLiteral 0x2b88b324608 <col:15> 'int' 0
|   | |-VarDecl 0x2b88b324648 <col:5, col:18> col:18 used i 'int'
|   | |-VarDecl 0x2b88b3246c8 <col:5, col:21> col:21 used ii 'int'
|   | |-VarDecl 0x2b88b324748 <col:5, col:25> col:25 used j 'int'
|   | |-VarDecl 0x2b88b3247c8 <col:5, col:28> col:28 used k 'int'
|   | |-VarDecl 0x2b88b324848 <col:5, col:31> col:31 used x 'int'
|   | |-VarDecl 0x2b88b3248c8 <col:5, col:34> col:34 used n 'int'
|   | |-VarDecl 0x2b88b324948 <col:5, col:37> col:37 used num 'int'
|   | `-VarDecl 0x2b88b3249c8 <col:5, col:53> col:42 used ret_code 'int' cinit
|   |   `-IntegerLiteral 0x2b88b324a30 <col:53> 'int' 0
|   |-DeclStmt 0x2b88b324b38 <line:111:5, col:21>
|   | `-VarDecl 0x2b88b324ad0 <col:5, col:18> col:18 used ctx 'BIO_B64_CTX *'
|   |-DeclStmt 0x2b88b324c90 <line:112:5, col:25>
|   | |-VarDecl 0x2b88b324b90 <col:5, col:20> col:20 used p 'unsigned char *'
|   | `-VarDecl 0x2b88b324c10 <col:5, col:24> col:24 used q 'unsigned char *'
|   |-IfStmt 0x2b88b324e10 <line:115:5, line:116:18>
|   | |-BinaryOperator 0x2b88b324d98 <line:115:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x2b88b324d68 <.//openssl//file_jk/before\crypto\evp\bio_b64.c:115:9> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2b88b324ca8 <col:9> 'char *' lvalue ParmVar 0x2b88b324390 'out' 'char *'
|   | | `-ImplicitCastExpr 0x2b88b324d80 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x2b88b324d48 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x2b88b324d20 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x2b88b324ce0 <col:26> 'int' 0
|   | `-ReturnStmt 0x2b88b324e00 <.//openssl//file_jk/before\crypto\evp\bio_b64.c:116:9, col:18>
|   |   `-ParenExpr 0x2b88b324de0 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x2b88b324db8 <col:17> 'int' 0
|   |-IfStmt 0x2b88b325180 <line:120:5, line:121:16>
|   | |-OpaqueValueExpr 0x2b88b325168 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x2b88b325158 <col:9, col:16>
|   |   `-IntegerLiteral 0x2b88b325130 <col:16> 'int' 0
|   |-IfStmt 0x2b88b3227e8 <line:125:5, line:131:5>
|   | |-BinaryOperator 0x2b88b322390 <line:125:9, line:31:25> 'int' '!='
|   | | |-ImplicitCastExpr 0x2b88b322378 <line:125:9, col:14> 'int' <LValueToRValue>
|   | | | `-MemberExpr 0x2b88b322320 <col:9, col:14> 'int' lvalue ->encode 0x2b88b323228
|   | | |   `-ImplicitCastExpr 0x2b88b322308 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x2b88b3222e8 <col:9> 'BIO_B64_CTX *' lvalue Var 0x2b88b324ad0 'ctx' 'BIO_B64_CTX *'
|   | | `-IntegerLiteral 0x2b88b322350 <line:31:25> 'int' 2
|   | `-CompoundStmt 0x2b88b3227b8 <line:125:36, line:131:5>
|   |   |-BinaryOperator 0x2b88b322440 <line:126:9, line:31:25> 'int' '='
|   |   | |-MemberExpr 0x2b88b3223e8 <line:126:9, col:14> 'int' lvalue ->encode 0x2b88b323228
|   |   | | `-ImplicitCastExpr 0x2b88b3223d0 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2b88b3223b0 <col:9> 'BIO_B64_CTX *' lvalue Var 0x2b88b324ad0 'ctx' 'BIO_B64_CTX *'
|   |   | `-IntegerLiteral 0x2b88b322418 <line:31:25> 'int' 2
|   |   |-BinaryOperator 0x2b88b3224f0 <line:127:9, col:24> 'int' '='
|   |   | |-MemberExpr 0x2b88b322498 <col:9, col:14> 'int' lvalue ->buf_len 0x2b88b321038
|   |   | | `-ImplicitCastExpr 0x2b88b322480 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2b88b322460 <col:9> 'BIO_B64_CTX *' lvalue Var 0x2b88b324ad0 'ctx' 'BIO_B64_CTX *'
|   |   | `-IntegerLiteral 0x2b88b3224c8 <col:24> 'int' 0
|   |   |-BinaryOperator 0x2b88b3225a0 <line:128:9, col:24> 'int' '='
|   |   | |-MemberExpr 0x2b88b322548 <col:9, col:14> 'int' lvalue ->buf_off 0x2b88b3210a8
|   |   | | `-ImplicitCastExpr 0x2b88b322530 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2b88b322510 <col:9> 'BIO_B64_CTX *' lvalue Var 0x2b88b324ad0 'ctx' 'BIO_B64_CTX *'
|   |   | `-IntegerLiteral 0x2b88b322578 <col:24> 'int' 0
|   |   `-BinaryOperator 0x2b88b322650 <line:129:9, col:24> 'int' '='
|   |     |-MemberExpr 0x2b88b3225f8 <col:9, col:14> 'int' lvalue ->tmp_len 0x2b88b321118
|   |     | `-ImplicitCastExpr 0x2b88b3225e0 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x2b88b3225c0 <col:9> 'BIO_B64_CTX *' lvalue Var 0x2b88b324ad0 'ctx' 'BIO_B64_CTX *'
|   |     `-IntegerLiteral 0x2b88b322628 <col:24> 'int' 0
|   |-IfStmt 0x2b88b32a860 <line:134:5, line:149:5>
|   | |-BinaryOperator 0x2b88b3228a8 <line:134:9, col:24> 'int' '>'
|   | | |-ImplicitCastExpr 0x2b88b322890 <col:9, col:14> 'int' <LValueToRValue>
|   | | | `-MemberExpr 0x2b88b322838 <col:9, col:14> 'int' lvalue ->buf_len 0x2b88b321038
|   | | |   `-ImplicitCastExpr 0x2b88b322820 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x2b88b322800 <col:9> 'BIO_B64_CTX *' lvalue Var 0x2b88b324ad0 'ctx' 'BIO_B64_CTX *'
|   | | `-IntegerLiteral 0x2b88b322868 <col:24> 'int' 0
|   | `-CompoundStmt 0x2b88b32a810 <col:27, line:149:5>
|   |   |-CallExpr 0x2b88b322b10 <line:135:9, col:52> 'int'
|   |   | |-ImplicitCastExpr 0x2b88b322af8 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x2b88b3229b8 <col:9> 'int ()' Function 0x2b88b3228f0 'OPENSSL_assert' 'int ()'
|   |   | `-BinaryOperator 0x2b88b322ad8 <col:24, col:45> 'int' '>='
|   |   |   |-ImplicitCastExpr 0x2b88b322aa8 <col:24, col:29> 'int' <LValueToRValue>
|   |   |   | `-MemberExpr 0x2b88b322a10 <col:24, col:29> 'int' lvalue ->buf_len 0x2b88b321038
|   |   |   |   `-ImplicitCastExpr 0x2b88b3229f8 <col:24> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x2b88b3229d8 <col:24> 'BIO_B64_CTX *' lvalue Var 0x2b88b324ad0 'ctx' 'BIO_B64_CTX *'
|   |   |   `-ImplicitCastExpr 0x2b88b322ac0 <col:40, col:45> 'int' <LValueToRValue>
|   |   |     `-MemberExpr 0x2b88b322a78 <col:40, col:45> 'int' lvalue ->buf_off 0x2b88b3210a8
|   |   |       `-ImplicitCastExpr 0x2b88b322a60 <col:40> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x2b88b322a40 <col:40> 'BIO_B64_CTX *' lvalue Var 0x2b88b324ad0 'ctx' 'BIO_B64_CTX *'
|   |   |-BinaryOperator 0x2b88b322c90 <line:136:9, col:33> 'int' '='
|   |   | |-DeclRefExpr 0x2b88b322b38 <col:9> 'int' lvalue Var 0x2b88b324648 'i' 'int'
|   |   | `-BinaryOperator 0x2b88b322c70 <col:13, col:33> 'int' '-'
|   |   |   |-ImplicitCastExpr 0x2b88b322c40 <col:13, col:18> 'int' <LValueToRValue>
|   |   |   | `-MemberExpr 0x2b88b322ba8 <col:13, col:18> 'int' lvalue ->buf_len 0x2b88b321038
|   |   |   |   `-ImplicitCastExpr 0x2b88b322b90 <col:13> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x2b88b322b70 <col:13> 'BIO_B64_CTX *' lvalue Var 0x2b88b324ad0 'ctx' 'BIO_B64_CTX *'
|   |   |   `-ImplicitCastExpr 0x2b88b322c58 <col:28, col:33> 'int' <LValueToRValue>
|   |   |     `-MemberExpr 0x2b88b322c10 <col:28, col:33> 'int' lvalue ->buf_off 0x2b88b3210a8
|   |   |       `-ImplicitCastExpr 0x2b88b322bf8 <col:28> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x2b88b322bd8 <col:28> 'BIO_B64_CTX *' lvalue Var 0x2b88b324ad0 'ctx' 'BIO_B64_CTX *'
|   |   |-IfStmt 0x2b88b322dd0 <line:137:9, line:138:17>
|   |   | |-BinaryOperator 0x2b88b322d38 <line:137:13, col:17> 'int' '>'
|   |   | | |-ImplicitCastExpr 0x2b88b322d08 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x2b88b322cb0 <col:13> 'int' lvalue Var 0x2b88b324648 'i' 'int'
|   |   | | `-ImplicitCastExpr 0x2b88b322d20 <col:17> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2b88b322cd0 <col:17> 'int' lvalue ParmVar 0x2b88b324410 'outl' 'int'
|   |   | `-BinaryOperator 0x2b88b322db0 <line:138:13, col:17> 'int' '='
|   |   |   |-DeclRefExpr 0x2b88b322d58 <col:13> 'int' lvalue Var 0x2b88b324648 'i' 'int'
|   |   |   `-ImplicitCastExpr 0x2b88b322d98 <col:17> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x2b88b322d78 <col:17> 'int' lvalue ParmVar 0x2b88b324410 'outl' 'int'
|   |   |-BinaryOperator 0x2b88b32a358 <line:141:9, col:15> 'int' '='
|   |   | |-DeclRefExpr 0x2b88b32a2e8 <col:9> 'int' lvalue Var 0x2b88b3245a0 'ret' 'int'
|   |   | `-ImplicitCastExpr 0x2b88b32a340 <col:15> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x2b88b32a320 <col:15> 'int' lvalue Var 0x2b88b324648 'i' 'int'
|   |   |-CompoundAssignOperator 0x2b88b32a3d0 <line:142:9, col:16> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
|   |   | |-DeclRefExpr 0x2b88b32a378 <col:9> 'char *' lvalue ParmVar 0x2b88b324390 'out' 'char *'
|   |   | `-ImplicitCastExpr 0x2b88b32a3b8 <col:16> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x2b88b32a398 <col:16> 'int' lvalue Var 0x2b88b324648 'i' 'int'
|   |   |-CompoundAssignOperator 0x2b88b32a458 <line:143:9, col:17> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-DeclRefExpr 0x2b88b32a400 <col:9> 'int' lvalue ParmVar 0x2b88b324410 'outl' 'int'
|   |   | `-ImplicitCastExpr 0x2b88b32a440 <col:17> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x2b88b32a420 <col:17> 'int' lvalue Var 0x2b88b324648 'i' 'int'
|   |   |-CompoundAssignOperator 0x2b88b32a528 <line:144:9, col:25> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-MemberExpr 0x2b88b32a4c0 <col:9, col:14> 'int' lvalue ->buf_off 0x2b88b3210a8
|   |   | | `-ImplicitCastExpr 0x2b88b32a4a8 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2b88b32a488 <col:9> 'BIO_B64_CTX *' lvalue Var 0x2b88b324ad0 'ctx' 'BIO_B64_CTX *'
|   |   | `-ImplicitCastExpr 0x2b88b32a510 <col:25> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x2b88b32a4f0 <col:25> 'int' lvalue Var 0x2b88b324648 'i' 'int'
|   |   `-IfStmt 0x2b88b32a7f8 <line:145:9, line:148:9>
|   |     |-BinaryOperator 0x2b88b32a658 <line:145:13, col:34> 'int' '=='
|   |     | |-ImplicitCastExpr 0x2b88b32a628 <col:13, col:18> 'int' <LValueToRValue>
|   |     | | `-MemberExpr 0x2b88b32a590 <col:13, col:18> 'int' lvalue ->buf_len 0x2b88b321038
|   |     | |   `-ImplicitCastExpr 0x2b88b32a578 <col:13> 'BIO_B64_CTX *' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x2b88b32a558 <col:13> 'BIO_B64_CTX *' lvalue Var 0x2b88b324ad0 'ctx' 'BIO_B64_CTX *'
|   |     | `-ImplicitCastExpr 0x2b88b32a640 <col:29, col:34> 'int' <LValueToRValue>
|   |     |   `-MemberExpr 0x2b88b32a5f8 <col:29, col:34> 'int' lvalue ->buf_off 0x2b88b3210a8
|   |     |     `-ImplicitCastExpr 0x2b88b32a5e0 <col:29> 'BIO_B64_CTX *' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x2b88b32a5c0 <col:29> 'BIO_B64_CTX *' lvalue Var 0x2b88b324ad0 'ctx' 'BIO_B64_CTX *'
|   |     `-CompoundStmt 0x2b88b32a7d8 <col:43, line:148:9>
|   |       |-BinaryOperator 0x2b88b32a708 <line:146:13, col:28> 'int' '='
|   |       | |-MemberExpr 0x2b88b32a6b0 <col:13, col:18> 'int' lvalue ->buf_len 0x2b88b321038
|   |       | | `-ImplicitCastExpr 0x2b88b32a698 <col:13> 'BIO_B64_CTX *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x2b88b32a678 <col:13> 'BIO_B64_CTX *' lvalue Var 0x2b88b324ad0 'ctx' 'BIO_B64_CTX *'
|   |       | `-IntegerLiteral 0x2b88b32a6e0 <col:28> 'int' 0
|   |       `-BinaryOperator 0x2b88b32a7b8 <line:147:13, col:28> 'int' '='
|   |         |-MemberExpr 0x2b88b32a760 <col:13, col:18> 'int' lvalue ->buf_off 0x2b88b3210a8
|   |         | `-ImplicitCastExpr 0x2b88b32a748 <col:13> 'BIO_B64_CTX *' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x2b88b32a728 <col:13> 'BIO_B64_CTX *' lvalue Var 0x2b88b324ad0 'ctx' 'BIO_B64_CTX *'
|   |         `-IntegerLiteral 0x2b88b32a790 <col:28> 'int' 0
|   |-BinaryOperator 0x2b88b32a8d8 <line:156:5, col:16> 'int' '='
|   | |-DeclRefExpr 0x2b88b32a878 <col:5> 'int' lvalue Var 0x2b88b3249c8 'ret_code' 'int'
|   | `-IntegerLiteral 0x2b88b32a8b0 <col:16> 'int' 0
|   |-WhileStmt 0x2b88b32dc30 <line:157:5, line:320:5>
|   | |-BinaryOperator 0x2b88b32a958 <line:157:12, col:19> 'int' '>'
|   | | |-ImplicitCastExpr 0x2b88b32a940 <col:12> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2b88b32a8f8 <col:12> 'int' lvalue ParmVar 0x2b88b324410 'outl' 'int'
|   | | `-IntegerLiteral 0x2b88b32a918 <col:19> 'int' 0
|   | `-CompoundStmt 0x2b88b32dba8 <col:22, line:320:5>
|   |   |-IfStmt 0x2b88b32aa48 <line:158:9, line:159:13>
|   |   | |-BinaryOperator 0x2b88b32aa20 <line:158:13, col:26> 'int' '<='
|   |   | | |-ImplicitCastExpr 0x2b88b32aa08 <col:13, col:18> 'int' <LValueToRValue>
|   |   | | | `-MemberExpr 0x2b88b32a9b0 <col:13, col:18> 'int' lvalue ->cont 0x2b88b323308
|   |   | | |   `-ImplicitCastExpr 0x2b88b32a998 <col:13> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x2b88b32a978 <col:13> 'BIO_B64_CTX *' lvalue Var 0x2b88b324ad0 'ctx' 'BIO_B64_CTX *'
|   |   | | `-IntegerLiteral 0x2b88b32a9e0 <col:26> 'int' 0
|   |   | `-BreakStmt 0x2b88b32aa40 <line:159:13>
|   |   |-IfStmt 0x2b88b32b260 <line:164:9, line:180:9>
|   |   | |-BinaryOperator 0x2b88b32ae10 <line:164:13, col:18> 'int' '<='
|   |   | | |-ImplicitCastExpr 0x2b88b32adf8 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x2b88b32adb0 <col:13> 'int' lvalue Var 0x2b88b324648 'i' 'int'
|   |   | | `-IntegerLiteral 0x2b88b32add0 <col:18> 'int' 0
|   |   | `-CompoundStmt 0x2b88b32b240 <col:21, line:180:9>
|   |   |   |-BinaryOperator 0x2b88b32ae88 <line:165:13, col:24> 'int' '='
|   |   |   | |-DeclRefExpr 0x2b88b32ae30 <col:13> 'int' lvalue Var 0x2b88b3249c8 'ret_code' 'int'
|   |   |   | `-ImplicitCastExpr 0x2b88b32ae70 <col:24> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x2b88b32ae50 <col:24> 'int' lvalue Var 0x2b88b324648 'i' 'int'
|   |   |   `-IfStmt 0x2b88b32b218 <line:168:13, line:179:17> has_else
|   |   |     |-OpaqueValueExpr 0x2b88b32b200 <<invalid sloc>> '_Bool'
|   |   |     |-CompoundStmt 0x2b88b32b1d8 <line:168:42, line:176:13>
|   |   |     | |-BinaryOperator 0x2b88b32b058 <line:169:17, col:29> 'int' '='
|   |   |     | | |-MemberExpr 0x2b88b32aff0 <col:17, col:22> 'int' lvalue ->cont 0x2b88b323308
|   |   |     | | | `-ImplicitCastExpr 0x2b88b32afd8 <col:17> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |     | | |   `-DeclRefExpr 0x2b88b32afb8 <col:17> 'BIO_B64_CTX *' lvalue Var 0x2b88b324ad0 'ctx' 'BIO_B64_CTX *'
|   |   |     | | `-ImplicitCastExpr 0x2b88b32b040 <col:29> 'int' <LValueToRValue>
|   |   |     | |   `-DeclRefExpr 0x2b88b32b020 <col:29> 'int' lvalue Var 0x2b88b324648 'i' 'int'
|   |   |     | `-IfStmt 0x2b88b32b1b0 <line:171:17, line:175:25> has_else
|   |   |     |   |-BinaryOperator 0x2b88b32b120 <line:171:21, col:37> 'int' '=='
|   |   |     |   | |-ImplicitCastExpr 0x2b88b32b108 <col:21, col:26> 'int' <LValueToRValue>
|   |   |     |   | | `-MemberExpr 0x2b88b32b0b0 <col:21, col:26> 'int' lvalue ->tmp_len 0x2b88b321118
|   |   |     |   | |   `-ImplicitCastExpr 0x2b88b32b098 <col:21> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |     |   | |     `-DeclRefExpr 0x2b88b32b078 <col:21> 'BIO_B64_CTX *' lvalue Var 0x2b88b324ad0 'ctx' 'BIO_B64_CTX *'
|   |   |     |   | `-IntegerLiteral 0x2b88b32b0e0 <col:37> 'int' 0
|   |   |     |   |-BreakStmt 0x2b88b32b140 <line:172:21>
|   |   |     |   `-BinaryOperator 0x2b88b32b190 <line:175:21, col:25> 'int' '='
|   |   |     |     |-DeclRefExpr 0x2b88b32b148 <col:21> 'int' lvalue Var 0x2b88b324648 'i' 'int'
|   |   |     |     `-IntegerLiteral 0x2b88b32b168 <col:25> 'int' 0
|   |   |     `-BreakStmt 0x2b88b32b1f8 <line:179:17>
|   |   |-CompoundAssignOperator 0x2b88b32f370 <line:181:9, col:19> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-DeclRefExpr 0x2b88b32f2d0 <col:9> 'int' lvalue Var 0x2b88b324648 'i' 'int'
|   |   | `-ImplicitCastExpr 0x2b88b32f358 <col:14, col:19> 'int' <LValueToRValue>
|   |   |   `-MemberExpr 0x2b88b32f328 <col:14, col:19> 'int' lvalue ->tmp_len 0x2b88b321118
|   |   |     `-ImplicitCastExpr 0x2b88b32f310 <col:14> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x2b88b32f2f0 <col:14> 'BIO_B64_CTX *' lvalue Var 0x2b88b324ad0 'ctx' 'BIO_B64_CTX *'
|   |   |-BinaryOperator 0x2b88b32f440 <line:182:9, col:24> 'int' '='
|   |   | |-MemberExpr 0x2b88b32f3d8 <col:9, col:14> 'int' lvalue ->tmp_len 0x2b88b321118
|   |   | | `-ImplicitCastExpr 0x2b88b32f3c0 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2b88b32f3a0 <col:9> 'BIO_B64_CTX *' lvalue Var 0x2b88b324ad0 'ctx' 'BIO_B64_CTX *'
|   |   | `-ImplicitCastExpr 0x2b88b32f428 <col:24> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x2b88b32f408 <col:24> 'int' lvalue Var 0x2b88b324648 'i' 'int'
|   |   |-IfStmt 0x2b88b330a70 <line:188:9, line:258:9> has_else
|   |   | |-OpaqueValueExpr 0x2b88b330a58 <<invalid sloc>> '_Bool'
|   |   | |-CompoundStmt 0x2b88b32f688 <line:188:72, line:191:9>
|   |   | | `-BinaryOperator 0x2b88b32f668 <line:190:13, col:28> 'int' '='
|   |   | |   |-MemberExpr 0x2b88b32f610 <col:13, col:18> 'int' lvalue ->tmp_len 0x2b88b321118
|   |   | |   | `-ImplicitCastExpr 0x2b88b32f5f8 <col:13> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x2b88b32f5d8 <col:13> 'BIO_B64_CTX *' lvalue Var 0x2b88b324ad0 'ctx' 'BIO_B64_CTX *'
|   |   | |   `-IntegerLiteral 0x2b88b32f640 <col:28> 'int' 0
|   |   | `-IfStmt 0x2b88b330a30 <line:191:16, line:258:9> has_else
|   |   |   |-ImplicitCastExpr 0x2b88b32f708 <line:191:20, col:25> 'int' <LValueToRValue>
|   |   |   | `-MemberExpr 0x2b88b32f6d8 <col:20, col:25> 'int' lvalue ->start 0x2b88b323298
|   |   |   |   `-ImplicitCastExpr 0x2b88b32f6c0 <col:20> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x2b88b32f6a0 <col:20> 'BIO_B64_CTX *' lvalue Var 0x2b88b324ad0 'ctx' 'BIO_B64_CTX *'
|   |   |   |-CompoundStmt 0x2b88b330820 <col:32, line:252:9>
|   |   |   | |-BinaryOperator 0x2b88b32f870 <line:192:13, col:43> 'unsigned char *' '='
|   |   |   | | |-DeclRefExpr 0x2b88b32f720 <col:13> 'unsigned char *' lvalue Var 0x2b88b324c10 'q' 'unsigned char *'
|   |   |   | | `-BinaryOperator 0x2b88b32f850 <col:17, col:43> 'unsigned char *' '='
|   |   |   | |   |-DeclRefExpr 0x2b88b32f758 <col:17> 'unsigned char *' lvalue Var 0x2b88b324b90 'p' 'unsigned char *'
|   |   |   | |   `-CStyleCastExpr 0x2b88b32f828 <col:21, col:43> 'unsigned char *' <BitCast>
|   |   |   | |     `-ImplicitCastExpr 0x2b88b32f810 <col:38, col:43> 'char *' <ArrayToPointerDecay> part_of_explicit_cast
|   |   |   | |       `-MemberExpr 0x2b88b32f7c8 <col:38, col:43> 'char [1024]' lvalue ->tmp 0x2b88b323738
|   |   |   | |         `-ImplicitCastExpr 0x2b88b32f7b0 <col:38> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   | |           `-DeclRefExpr 0x2b88b32f790 <col:38> 'BIO_B64_CTX *' lvalue Var 0x2b88b324ad0 'ctx' 'BIO_B64_CTX *'
|   |   |   | |-BinaryOperator 0x2b88b32f8f0 <line:193:13, col:19> 'int' '='
|   |   |   | | |-DeclRefExpr 0x2b88b32f890 <col:13> 'int' lvalue Var 0x2b88b324948 'num' 'int'
|   |   |   | | `-IntegerLiteral 0x2b88b32f8c8 <col:19> 'int' 0
|   |   |   | |-ForStmt 0x2b88b331bb8 <line:194:13, line:227:13>
|   |   |   | | |-BinaryOperator 0x2b88b32f970 <line:194:18, col:22> 'int' '='
|   |   |   | | | |-DeclRefExpr 0x2b88b32f910 <col:18> 'int' lvalue Var 0x2b88b324748 'j' 'int'
|   |   |   | | | `-IntegerLiteral 0x2b88b32f948 <col:22> 'int' 0
|   |   |   | | |-<<<NULL>>>
|   |   |   | | |-BinaryOperator 0x2b88b32fa00 <col:25, col:29> 'int' '<'
|   |   |   | | | |-ImplicitCastExpr 0x2b88b32f9d0 <col:25> 'int' <LValueToRValue>
|   |   |   | | | | `-DeclRefExpr 0x2b88b32f990 <col:25> 'int' lvalue Var 0x2b88b324748 'j' 'int'
|   |   |   | | | `-ImplicitCastExpr 0x2b88b32f9e8 <col:29> 'int' <LValueToRValue>
|   |   |   | | |   `-DeclRefExpr 0x2b88b32f9b0 <col:29> 'int' lvalue Var 0x2b88b324648 'i' 'int'
|   |   |   | | |-UnaryOperator 0x2b88b32fa40 <col:32, col:33> 'int' postfix '++'
|   |   |   | | | `-DeclRefExpr 0x2b88b32fa20 <col:32> 'int' lvalue Var 0x2b88b324748 'j' 'int'
|   |   |   | | `-CompoundStmt 0x2b88b331b88 <col:37, line:227:13>
|   |   |   | |   |-IfStmt 0x2b88b32fb38 <line:195:17, line:196:21>
|   |   |   | |   | |-BinaryOperator 0x2b88b32fb10 <line:195:21, col:31> 'int' '!='
|   |   |   | |   | | |-ImplicitCastExpr 0x2b88b32faf8 <col:21, col:26> 'int' <IntegralCast>
|   |   |   | |   | | | `-ImplicitCastExpr 0x2b88b32fae0 <col:21, col:26> 'unsigned char' <LValueToRValue>
|   |   |   | |   | | |   `-UnaryOperator 0x2b88b32fab0 <col:21, col:26> 'unsigned char' lvalue prefix '*' cannot overflow
|   |   |   | |   | | |     `-ParenExpr 0x2b88b32fa90 <col:22, col:26> 'unsigned char *'
|   |   |   | |   | | |       `-UnaryOperator 0x2b88b32fa78 <col:23, col:24> 'unsigned char *' postfix '++'
|   |   |   | |   | | |         `-DeclRefExpr 0x2b88b32fa58 <col:23> 'unsigned char *' lvalue Var 0x2b88b324c10 'q' 'unsigned char *'
|   |   |   | |   | | `-CharacterLiteral 0x2b88b32fac8 <col:31> 'int' 10
|   |   |   | |   | `-ContinueStmt 0x2b88b32fb30 <line:196:21>
|   |   |   | |   |-IfStmt 0x2b88b32fd28 <line:203:17, line:207:17>
|   |   |   | |   | |-ImplicitCastExpr 0x2b88b32fbb8 <line:203:21, col:26> 'int' <LValueToRValue>
|   |   |   | |   | | `-MemberExpr 0x2b88b32fb88 <col:21, col:26> 'int' lvalue ->tmp_nl 0x2b88b321188
|   |   |   | |   | |   `-ImplicitCastExpr 0x2b88b32fb70 <col:21> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   | |   | |     `-DeclRefExpr 0x2b88b32fb50 <col:21> 'BIO_B64_CTX *' lvalue Var 0x2b88b324ad0 'ctx' 'BIO_B64_CTX *'
|   |   |   | |   | `-CompoundStmt 0x2b88b32fd00 <col:34, line:207:17>
|   |   |   | |   |   |-BinaryOperator 0x2b88b32fc28 <line:204:21, col:25> 'unsigned char *' '='
|   |   |   | |   |   | |-DeclRefExpr 0x2b88b32fbd0 <col:21> 'unsigned char *' lvalue Var 0x2b88b324b90 'p' 'unsigned char *'
|   |   |   | |   |   | `-ImplicitCastExpr 0x2b88b32fc10 <col:25> 'unsigned char *' <LValueToRValue>
|   |   |   | |   |   |   `-DeclRefExpr 0x2b88b32fbf0 <col:25> 'unsigned char *' lvalue Var 0x2b88b324c10 'q' 'unsigned char *'
|   |   |   | |   |   |-BinaryOperator 0x2b88b32fcd8 <line:205:21, col:35> 'int' '='
|   |   |   | |   |   | |-MemberExpr 0x2b88b32fc80 <col:21, col:26> 'int' lvalue ->tmp_nl 0x2b88b321188
|   |   |   | |   |   | | `-ImplicitCastExpr 0x2b88b32fc68 <col:21> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   | |   |   | |   `-DeclRefExpr 0x2b88b32fc48 <col:21> 'BIO_B64_CTX *' lvalue Var 0x2b88b324ad0 'ctx' 'BIO_B64_CTX *'
|   |   |   | |   |   | `-IntegerLiteral 0x2b88b32fcb0 <col:35> 'int' 0
|   |   |   | |   |   `-ContinueStmt 0x2b88b32fcf8 <line:206:21>
|   |   |   | |   |-IfStmt 0x2b88b331ae8 <line:212:17, line:225:17> has_else
|   |   |   | |   | |-BinaryOperator 0x2b88b3301e0 <line:212:21, col:58> 'int' '&&'
|   |   |   | |   | | |-BinaryOperator 0x2b88b330120 <col:21, col:42> 'int' '&&'
|   |   |   | |   | | | |-ParenExpr 0x2b88b330060 <col:21, col:28> 'int'
|   |   |   | |   | | | | `-BinaryOperator 0x2b88b330040 <col:22, col:27> 'int' '<='
|   |   |   | |   | | | |   |-ImplicitCastExpr 0x2b88b330028 <col:22> 'int' <LValueToRValue>
|   |   |   | |   | | | |   | `-DeclRefExpr 0x2b88b32ffe0 <col:22> 'int' lvalue Var 0x2b88b3247c8 'k' 'int'
|   |   |   | |   | | | |   `-IntegerLiteral 0x2b88b330000 <col:27> 'int' 0
|   |   |   | |   | | | `-ParenExpr 0x2b88b330100 <col:33, col:42> 'int'
|   |   |   | |   | | |   `-BinaryOperator 0x2b88b3300e0 <col:34, col:41> 'int' '=='
|   |   |   | |   | | |     |-ImplicitCastExpr 0x2b88b3300c8 <col:34> 'int' <LValueToRValue>
|   |   |   | |   | | |     | `-DeclRefExpr 0x2b88b330080 <col:34> 'int' lvalue Var 0x2b88b324948 'num' 'int'
|   |   |   | |   | | |     `-IntegerLiteral 0x2b88b3300a0 <col:41> 'int' 0
|   |   |   | |   | | `-ImplicitCastExpr 0x2b88b3301c8 <col:47, col:58> 'int' <LValueToRValue>
|   |   |   | |   | |   `-ParenExpr 0x2b88b3301a8 <col:47, col:58> 'int' lvalue
|   |   |   | |   | |     `-MemberExpr 0x2b88b330178 <col:48, col:53> 'int' lvalue ->start 0x2b88b323298
|   |   |   | |   | |       `-ImplicitCastExpr 0x2b88b330160 <col:48> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   | |   | |         `-DeclRefExpr 0x2b88b330140 <col:48> 'BIO_B64_CTX *' lvalue Var 0x2b88b324ad0 'ctx' 'BIO_B64_CTX *'
|   |   |   | |   | |-NullStmt 0x2b88b331ae0 <line:213:21>
|   |   |   | |   | `-CompoundStmt 0x2b88b331ab8 <line:214:22, line:225:17>
|   |   |   | |   |   |-IfStmt 0x2b88b331990 <line:215:21, line:221:21>
|   |   |   | |   |   | |-BinaryOperator 0x2b88b331410 <line:215:25, line:216:38> 'int' '!='
|   |   |   | |   |   | | |-ImplicitCastExpr 0x2b88b3313f8 <line:215:25> 'unsigned char *' <LValueToRValue>
|   |   |   | |   |   | | | `-DeclRefExpr 0x2b88b330258 <col:25> 'unsigned char *' lvalue Var 0x2b88b324b90 'p' 'unsigned char *'
|   |   |   | |   |   | | `-CStyleCastExpr 0x2b88b3313d0 <col:30, line:216:38> 'unsigned char *' <BitCast>
|   |   |   | |   |   | |   `-UnaryOperator 0x2b88b3313a0 <col:25, col:38> 'char *' prefix '&' cannot overflow
|   |   |   | |   |   | |     `-ParenExpr 0x2b88b331380 <col:26, col:38> 'char' lvalue
|   |   |   | |   |   | |       `-ArraySubscriptExpr 0x2b88b331360 <col:27, col:37> 'char' lvalue
|   |   |   | |   |   | |         |-ImplicitCastExpr 0x2b88b331348 <col:27, col:32> 'char *' <ArrayToPointerDecay>
|   |   |   | |   |   | |         | `-MemberExpr 0x2b88b3312f0 <col:27, col:32> 'char [1024]' lvalue ->tmp 0x2b88b323738
|   |   |   | |   |   | |         |   `-ImplicitCastExpr 0x2b88b330298 <col:27> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   | |   |   | |         |     `-DeclRefExpr 0x2b88b330278 <col:27> 'BIO_B64_CTX *' lvalue Var 0x2b88b324ad0 'ctx' 'BIO_B64_CTX *'
|   |   |   | |   |   | |         `-IntegerLiteral 0x2b88b331320 <col:36> 'int' 0
|   |   |   | |   |   | `-CompoundStmt 0x2b88b331970 <col:41, line:221:21>
|   |   |   | |   |   |   |-CompoundAssignOperator 0x2b88b331608 <line:217:25, line:218:45> 'int' '-=' ComputeLHSTy='long long' ComputeResultTy='long long'
|   |   |   | |   |   |   | |-DeclRefExpr 0x2b88b331430 <line:217:25> 'int' lvalue Var 0x2b88b324648 'i' 'int'
|   |   |   | |   |   |   | `-ParenExpr 0x2b88b3315e8 <col:30, line:218:45> 'long long'
|   |   |   | |   |   |   |   `-BinaryOperator 0x2b88b3315c8 <line:217:31, line:218:44> 'long long' '-'
|   |   |   | |   |   |   |     |-ImplicitCastExpr 0x2b88b3315b0 <line:217:31> 'unsigned char *' <LValueToRValue>
|   |   |   | |   |   |   |     | `-DeclRefExpr 0x2b88b331450 <col:31> 'unsigned char *' lvalue Var 0x2b88b324b90 'p' 'unsigned char *'
|   |   |   | |   |   |   |     `-CStyleCastExpr 0x2b88b331588 <col:35, line:218:44> 'unsigned char *' <BitCast>
|   |   |   | |   |   |   |       `-UnaryOperator 0x2b88b331558 <col:31, col:44> 'char *' prefix '&' cannot overflow
|   |   |   | |   |   |   |         `-ParenExpr 0x2b88b331538 <col:32, col:44> 'char' lvalue
|   |   |   | |   |   |   |           `-ArraySubscriptExpr 0x2b88b331518 <col:33, col:43> 'char' lvalue
|   |   |   | |   |   |   |             |-ImplicitCastExpr 0x2b88b331500 <col:33, col:38> 'char *' <ArrayToPointerDecay>
|   |   |   | |   |   |   |             | `-MemberExpr 0x2b88b3314a8 <col:33, col:38> 'char [1024]' lvalue ->tmp 0x2b88b323738
|   |   |   | |   |   |   |             |   `-ImplicitCastExpr 0x2b88b331490 <col:33> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   | |   |   |   |             |     `-DeclRefExpr 0x2b88b331470 <col:33> 'BIO_B64_CTX *' lvalue Var 0x2b88b324ad0 'ctx' 'BIO_B64_CTX *'
|   |   |   | |   |   |   |             `-IntegerLiteral 0x2b88b3314d8 <col:42> 'int' 0
|   |   |   | |   |   |   `-ForStmt 0x2b88b331938 <line:219:25, line:220:46>
|   |   |   | |   |   |     |-BinaryOperator 0x2b88b331698 <line:219:30, col:34> 'int' '='
|   |   |   | |   |   |     | |-DeclRefExpr 0x2b88b331638 <col:30> 'int' lvalue Var 0x2b88b324848 'x' 'int'
|   |   |   | |   |   |     | `-IntegerLiteral 0x2b88b331670 <col:34> 'int' 0
|   |   |   | |   |   |     |-<<<NULL>>>
|   |   |   | |   |   |     |-BinaryOperator 0x2b88b331728 <col:37, col:41> 'int' '<'
|   |   |   | |   |   |     | |-ImplicitCastExpr 0x2b88b3316f8 <col:37> 'int' <LValueToRValue>
|   |   |   | |   |   |     | | `-DeclRefExpr 0x2b88b3316b8 <col:37> 'int' lvalue Var 0x2b88b324848 'x' 'int'
|   |   |   | |   |   |     | `-ImplicitCastExpr 0x2b88b331710 <col:41> 'int' <LValueToRValue>
|   |   |   | |   |   |     |   `-DeclRefExpr 0x2b88b3316d8 <col:41> 'int' lvalue Var 0x2b88b324648 'i' 'int'
|   |   |   | |   |   |     |-UnaryOperator 0x2b88b331768 <col:44, col:45> 'int' postfix '++'
|   |   |   | |   |   |     | `-DeclRefExpr 0x2b88b331748 <col:44> 'int' lvalue Var 0x2b88b324848 'x' 'int'
|   |   |   | |   |   |     `-BinaryOperator 0x2b88b331918 <line:220:29, col:46> 'char' '='
|   |   |   | |   |   |       |-ArraySubscriptExpr 0x2b88b331838 <col:29, col:39> 'char' lvalue
|   |   |   | |   |   |       | |-ImplicitCastExpr 0x2b88b331808 <col:29, col:34> 'char *' <ArrayToPointerDecay>
|   |   |   | |   |   |       | | `-MemberExpr 0x2b88b3317b8 <col:29, col:34> 'char [1024]' lvalue ->tmp 0x2b88b323738
|   |   |   | |   |   |       | |   `-ImplicitCastExpr 0x2b88b3317a0 <col:29> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   | |   |   |       | |     `-DeclRefExpr 0x2b88b331780 <col:29> 'BIO_B64_CTX *' lvalue Var 0x2b88b324ad0 'ctx' 'BIO_B64_CTX *'
|   |   |   | |   |   |       | `-ImplicitCastExpr 0x2b88b331820 <col:38> 'int' <LValueToRValue>
|   |   |   | |   |   |       |   `-DeclRefExpr 0x2b88b3317e8 <col:38> 'int' lvalue Var 0x2b88b324848 'x' 'int'
|   |   |   | |   |   |       `-ImplicitCastExpr 0x2b88b331900 <col:43, col:46> 'char' <IntegralCast>
|   |   |   | |   |   |         `-ImplicitCastExpr 0x2b88b3318e8 <col:43, col:46> 'unsigned char' <LValueToRValue>
|   |   |   | |   |   |           `-ArraySubscriptExpr 0x2b88b3318c8 <col:43, col:46> 'unsigned char' lvalue
|   |   |   | |   |   |             |-ImplicitCastExpr 0x2b88b331898 <col:43> 'unsigned char *' <LValueToRValue>
|   |   |   | |   |   |             | `-DeclRefExpr 0x2b88b331858 <col:43> 'unsigned char *' lvalue Var 0x2b88b324b90 'p' 'unsigned char *'
|   |   |   | |   |   |             `-ImplicitCastExpr 0x2b88b3318b0 <col:45> 'int' <LValueToRValue>
|   |   |   | |   |   |               `-DeclRefExpr 0x2b88b331878 <col:45> 'int' lvalue Var 0x2b88b324848 'x' 'int'
|   |   |   | |   |   |-BinaryOperator 0x2b88b331a90 <line:223:21, col:34> 'int' '='
|   |   |   | |   |   | |-MemberExpr 0x2b88b331a38 <col:21, col:26> 'int' lvalue ->start 0x2b88b323298
|   |   |   | |   |   | | `-ImplicitCastExpr 0x2b88b331a20 <col:21> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   | |   |   | |   `-DeclRefExpr 0x2b88b331a00 <col:21> 'BIO_B64_CTX *' lvalue Var 0x2b88b324ad0 'ctx' 'BIO_B64_CTX *'
|   |   |   | |   |   | `-IntegerLiteral 0x2b88b331a68 <col:34> 'int' 0
|   |   |   | |   |   `-BreakStmt 0x2b88b331ab0 <line:224:21>
|   |   |   | |   `-BinaryOperator 0x2b88b331b68 <line:226:17, col:21> 'unsigned char *' '='
|   |   |   | |     |-DeclRefExpr 0x2b88b331b10 <col:17> 'unsigned char *' lvalue Var 0x2b88b324b90 'p' 'unsigned char *'
|   |   |   | |     `-ImplicitCastExpr 0x2b88b331b50 <col:21> 'unsigned char *' <LValueToRValue>
|   |   |   | |       `-DeclRefExpr 0x2b88b331b30 <col:21> 'unsigned char *' lvalue Var 0x2b88b324c10 'q' 'unsigned char *'
|   |   |   | `-IfStmt 0x2b88b3307f8 <line:230:13, line:251:13> has_else
|   |   |   |   |-BinaryOperator 0x2b88b331d40 <line:230:17, col:38> 'int' '&&'
|   |   |   |   | |-ParenExpr 0x2b88b331c80 <col:17, col:24> 'int'
|   |   |   |   | | `-BinaryOperator 0x2b88b331c60 <col:18, col:23> 'int' '=='
|   |   |   |   | |   |-ImplicitCastExpr 0x2b88b331c30 <col:18> 'int' <LValueToRValue>
|   |   |   |   | |   | `-DeclRefExpr 0x2b88b331bf0 <col:18> 'int' lvalue Var 0x2b88b324748 'j' 'int'
|   |   |   |   | |   `-ImplicitCastExpr 0x2b88b331c48 <col:23> 'int' <LValueToRValue>
|   |   |   |   | |     `-DeclRefExpr 0x2b88b331c10 <col:23> 'int' lvalue Var 0x2b88b324648 'i' 'int'
|   |   |   |   | `-ParenExpr 0x2b88b331d20 <col:29, col:38> 'int'
|   |   |   |   |   `-BinaryOperator 0x2b88b331d00 <col:30, col:37> 'int' '=='
|   |   |   |   |     |-ImplicitCastExpr 0x2b88b331ce8 <col:30> 'int' <LValueToRValue>
|   |   |   |   |     | `-DeclRefExpr 0x2b88b331ca0 <col:30> 'int' lvalue Var 0x2b88b324948 'num' 'int'
|   |   |   |   |     `-IntegerLiteral 0x2b88b331cc0 <col:37> 'int' 0
|   |   |   |   |-CompoundStmt 0x2b88b330710 <col:41, line:249:13>
|   |   |   |   | |-IfStmt 0x2b88b3306e0 <line:235:17, line:246:17> has_else
|   |   |   |   | | |-BinaryOperator 0x2b88b331ed8 <line:235:21, col:56> 'int' '=='
|   |   |   |   | | | |-ImplicitCastExpr 0x2b88b331ec0 <col:21> 'unsigned char *' <LValueToRValue>
|   |   |   |   | | | | `-DeclRefExpr 0x2b88b331d60 <col:21> 'unsigned char *' lvalue Var 0x2b88b324b90 'p' 'unsigned char *'
|   |   |   |   | | | `-CStyleCastExpr 0x2b88b331e98 <col:26, col:56> 'unsigned char *' <BitCast>
|   |   |   |   | | |   `-UnaryOperator 0x2b88b331e68 <col:43, col:56> 'char *' prefix '&' cannot overflow
|   |   |   |   | | |     `-ParenExpr 0x2b88b331e48 <col:44, col:56> 'char' lvalue
|   |   |   |   | | |       `-ArraySubscriptExpr 0x2b88b331e28 <col:45, col:55> 'char' lvalue
|   |   |   |   | | |         |-ImplicitCastExpr 0x2b88b331e10 <col:45, col:50> 'char *' <ArrayToPointerDecay>
|   |   |   |   | | |         | `-MemberExpr 0x2b88b331db8 <col:45, col:50> 'char [1024]' lvalue ->tmp 0x2b88b323738
|   |   |   |   | | |         |   `-ImplicitCastExpr 0x2b88b331da0 <col:45> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   |   | | |         |     `-DeclRefExpr 0x2b88b331d80 <col:45> 'BIO_B64_CTX *' lvalue Var 0x2b88b324ad0 'ctx' 'BIO_B64_CTX *'
|   |   |   |   | | |         `-IntegerLiteral 0x2b88b331de8 <col:54> 'int' 0
|   |   |   |   | | |-CompoundStmt 0x2b88b332110 <col:59, line:241:17>
|   |   |   |   | | | `-IfStmt 0x2b88b3320f8 <line:237:21, line:240:21>
|   |   |   |   | | |   |-BinaryOperator 0x2b88b331f58 <line:237:25, line:27:25> 'int' '=='
|   |   |   |   | | |   | |-ImplicitCastExpr 0x2b88b331f40 <line:237:25> 'int' <LValueToRValue>
|   |   |   |   | | |   | | `-DeclRefExpr 0x2b88b331ef8 <col:25> 'int' lvalue Var 0x2b88b324648 'i' 'int'
|   |   |   |   | | |   | `-IntegerLiteral 0x2b88b331f18 <line:27:25> 'int' 1024
|   |   |   |   | | |   `-CompoundStmt 0x2b88b3320d8 <line:237:46, line:240:21>
|   |   |   |   | | |     |-BinaryOperator 0x2b88b332008 <line:238:25, col:39> 'int' '='
|   |   |   |   | | |     | |-MemberExpr 0x2b88b331fb0 <col:25, col:30> 'int' lvalue ->tmp_nl 0x2b88b321188
|   |   |   |   | | |     | | `-ImplicitCastExpr 0x2b88b331f98 <col:25> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   |   | | |     | |   `-DeclRefExpr 0x2b88b331f78 <col:25> 'BIO_B64_CTX *' lvalue Var 0x2b88b324ad0 'ctx' 'BIO_B64_CTX *'
|   |   |   |   | | |     | `-IntegerLiteral 0x2b88b331fe0 <col:39> 'int' 1
|   |   |   |   | | |     `-BinaryOperator 0x2b88b3320b8 <line:239:25, col:40> 'int' '='
|   |   |   |   | | |       |-MemberExpr 0x2b88b332060 <col:25, col:30> 'int' lvalue ->tmp_len 0x2b88b321118
|   |   |   |   | | |       | `-ImplicitCastExpr 0x2b88b332048 <col:25> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   |   | | |       |   `-DeclRefExpr 0x2b88b332028 <col:25> 'BIO_B64_CTX *' lvalue Var 0x2b88b324ad0 'ctx' 'BIO_B64_CTX *'
|   |   |   |   | | |       `-IntegerLiteral 0x2b88b332090 <col:40> 'int' 0
|   |   |   |   | | `-IfStmt 0x2b88b3306c8 <line:241:24, line:246:17>
|   |   |   |   | |   |-BinaryOperator 0x2b88b332198 <line:241:28, col:33> 'int' '!='
|   |   |   |   | |   | |-ImplicitCastExpr 0x2b88b332168 <col:28> 'unsigned char *' <LValueToRValue>
|   |   |   |   | |   | | `-DeclRefExpr 0x2b88b332128 <col:28> 'unsigned char *' lvalue Var 0x2b88b324b90 'p' 'unsigned char *'
|   |   |   |   | |   | `-ImplicitCastExpr 0x2b88b332180 <col:33> 'unsigned char *' <LValueToRValue>
|   |   |   |   | |   |   `-DeclRefExpr 0x2b88b332148 <col:33> 'unsigned char *' lvalue Var 0x2b88b324c10 'q' 'unsigned char *'
|   |   |   |   | |   `-CompoundStmt 0x2b88b3306a0 <col:36, line:246:17>
|   |   |   |   | |     |-BinaryOperator 0x2b88b332298 <line:242:21, col:29> 'int' '='
|   |   |   |   | |     | |-DeclRefExpr 0x2b88b3321b8 <col:21> 'int' lvalue Var 0x2b88b3248c8 'n' 'int'
|   |   |   |   | |     | `-ImplicitCastExpr 0x2b88b332280 <col:25, col:29> 'int' <IntegralCast>
|   |   |   |   | |     |   `-BinaryOperator 0x2b88b332260 <col:25, col:29> 'long long' '-'
|   |   |   |   | |     |     |-ImplicitCastExpr 0x2b88b332230 <col:25> 'unsigned char *' <LValueToRValue>
|   |   |   |   | |     |     | `-DeclRefExpr 0x2b88b3321f0 <col:25> 'unsigned char *' lvalue Var 0x2b88b324c10 'q' 'unsigned char *'
|   |   |   |   | |     |     `-ImplicitCastExpr 0x2b88b332248 <col:29> 'unsigned char *' <LValueToRValue>
|   |   |   |   | |     |       `-DeclRefExpr 0x2b88b332210 <col:29> 'unsigned char *' lvalue Var 0x2b88b324b90 'p' 'unsigned char *'
|   |   |   |   | |     |-ForStmt 0x2b88b3305a8 <line:243:21, line:244:44>
|   |   |   |   | |     | |-BinaryOperator 0x2b88b330308 <line:243:26, col:31> 'int' '='
|   |   |   |   | |     | | |-DeclRefExpr 0x2b88b3322b8 <col:26> 'int' lvalue Var 0x2b88b3246c8 'ii' 'int'
|   |   |   |   | |     | | `-IntegerLiteral 0x2b88b3302e0 <col:31> 'int' 0
|   |   |   |   | |     | |-<<<NULL>>>
|   |   |   |   | |     | |-BinaryOperator 0x2b88b330398 <col:34, col:39> 'int' '<'
|   |   |   |   | |     | | |-ImplicitCastExpr 0x2b88b330368 <col:34> 'int' <LValueToRValue>
|   |   |   |   | |     | | | `-DeclRefExpr 0x2b88b330328 <col:34> 'int' lvalue Var 0x2b88b3246c8 'ii' 'int'
|   |   |   |   | |     | | `-ImplicitCastExpr 0x2b88b330380 <col:39> 'int' <LValueToRValue>
|   |   |   |   | |     | |   `-DeclRefExpr 0x2b88b330348 <col:39> 'int' lvalue Var 0x2b88b3248c8 'n' 'int'
|   |   |   |   | |     | |-UnaryOperator 0x2b88b3303d8 <col:42, col:44> 'int' postfix '++'
|   |   |   |   | |     | | `-DeclRefExpr 0x2b88b3303b8 <col:42> 'int' lvalue Var 0x2b88b3246c8 'ii' 'int'
|   |   |   |   | |     | `-BinaryOperator 0x2b88b330588 <line:244:25, col:44> 'char' '='
|   |   |   |   | |     |   |-ArraySubscriptExpr 0x2b88b3304a8 <col:25, col:36> 'char' lvalue
|   |   |   |   | |     |   | |-ImplicitCastExpr 0x2b88b330478 <col:25, col:30> 'char *' <ArrayToPointerDecay>
|   |   |   |   | |     |   | | `-MemberExpr 0x2b88b330428 <col:25, col:30> 'char [1024]' lvalue ->tmp 0x2b88b323738
|   |   |   |   | |     |   | |   `-ImplicitCastExpr 0x2b88b330410 <col:25> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   |   | |     |   | |     `-DeclRefExpr 0x2b88b3303f0 <col:25> 'BIO_B64_CTX *' lvalue Var 0x2b88b324ad0 'ctx' 'BIO_B64_CTX *'
|   |   |   |   | |     |   | `-ImplicitCastExpr 0x2b88b330490 <col:34> 'int' <LValueToRValue>
|   |   |   |   | |     |   |   `-DeclRefExpr 0x2b88b330458 <col:34> 'int' lvalue Var 0x2b88b3246c8 'ii' 'int'
|   |   |   |   | |     |   `-ImplicitCastExpr 0x2b88b330570 <col:40, col:44> 'char' <IntegralCast>
|   |   |   |   | |     |     `-ImplicitCastExpr 0x2b88b330558 <col:40, col:44> 'unsigned char' <LValueToRValue>
|   |   |   |   | |     |       `-ArraySubscriptExpr 0x2b88b330538 <col:40, col:44> 'unsigned char' lvalue
|   |   |   |   | |     |         |-ImplicitCastExpr 0x2b88b330508 <col:40> 'unsigned char *' <LValueToRValue>
|   |   |   |   | |     |         | `-DeclRefExpr 0x2b88b3304c8 <col:40> 'unsigned char *' lvalue Var 0x2b88b324b90 'p' 'unsigned char *'
|   |   |   |   | |     |         `-ImplicitCastExpr 0x2b88b330520 <col:42> 'int' <LValueToRValue>
|   |   |   |   | |     |           `-DeclRefExpr 0x2b88b3304e8 <col:42> 'int' lvalue Var 0x2b88b3246c8 'ii' 'int'
|   |   |   |   | |     `-BinaryOperator 0x2b88b330680 <line:245:21, col:36> 'int' '='
|   |   |   |   | |       |-MemberExpr 0x2b88b330618 <col:21, col:26> 'int' lvalue ->tmp_len 0x2b88b321118
|   |   |   |   | |       | `-ImplicitCastExpr 0x2b88b330600 <col:21> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   |   | |       |   `-DeclRefExpr 0x2b88b3305e0 <col:21> 'BIO_B64_CTX *' lvalue Var 0x2b88b324ad0 'ctx' 'BIO_B64_CTX *'
|   |   |   |   | |       `-ImplicitCastExpr 0x2b88b330668 <col:36> 'int' <LValueToRValue>
|   |   |   |   | |         `-DeclRefExpr 0x2b88b330648 <col:36> 'int' lvalue Var 0x2b88b3248c8 'n' 'int'
|   |   |   |   | `-ContinueStmt 0x2b88b330708 <line:248:17>
|   |   |   |   `-CompoundStmt 0x2b88b3307e0 <line:249:20, line:251:13>
|   |   |   |     `-BinaryOperator 0x2b88b3307c0 <line:250:17, col:32> 'int' '='
|   |   |   |       |-MemberExpr 0x2b88b330768 <col:17, col:22> 'int' lvalue ->tmp_len 0x2b88b321118
|   |   |   |       | `-ImplicitCastExpr 0x2b88b330750 <col:17> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   |       |   `-DeclRefExpr 0x2b88b330730 <col:17> 'BIO_B64_CTX *' lvalue Var 0x2b88b324ad0 'ctx' 'BIO_B64_CTX *'
|   |   |   |       `-IntegerLiteral 0x2b88b330798 <col:32> 'int' 0
|   |   |   `-IfStmt 0x2b88b330a18 <line:252:16, line:258:9>
|   |   |     |-BinaryOperator 0x2b88b3309d8 <line:252:20, col:58> 'int' '&&'
|   |   |     | |-ParenExpr 0x2b88b3308d0 <col:20, col:39> 'int'
|   |   |     | | `-BinaryOperator 0x2b88b3308b0 <col:21, line:27:25> 'int' '<'
|   |   |     | |   |-ImplicitCastExpr 0x2b88b330898 <line:252:21> 'int' <LValueToRValue>
|   |   |     | |   | `-DeclRefExpr 0x2b88b330850 <col:21> 'int' lvalue Var 0x2b88b324648 'i' 'int'
|   |   |     | |   `-IntegerLiteral 0x2b88b330870 <line:27:25> 'int' 1024
|   |   |     | `-ParenExpr 0x2b88b3309b8 <line:252:44, col:58> 'int'
|   |   |     |   `-BinaryOperator 0x2b88b330998 <col:45, col:57> 'int' '>'
|   |   |     |     |-ImplicitCastExpr 0x2b88b330980 <col:45, col:50> 'int' <LValueToRValue>
|   |   |     |     | `-MemberExpr 0x2b88b330928 <col:45, col:50> 'int' lvalue ->cont 0x2b88b323308
|   |   |     |     |   `-ImplicitCastExpr 0x2b88b330910 <col:45> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |     |     |     `-DeclRefExpr 0x2b88b3308f0 <col:45> 'BIO_B64_CTX *' lvalue Var 0x2b88b324ad0 'ctx' 'BIO_B64_CTX *'
|   |   |     |     `-IntegerLiteral 0x2b88b330958 <col:57> 'int' 0
|   |   |     `-CompoundStmt 0x2b88b330a00 <col:61, line:258:9>
|   |   |       `-ContinueStmt 0x2b88b3309f8 <line:257:13>
|   |   |-IfStmt 0x2b88b333088 <line:260:9, line:290:9> has_else
|   |   | |-OpaqueValueExpr 0x2b88b333070 <<invalid sloc>> '_Bool'
|   |   | |-CompoundStmt 0x2b88b332d50 <line:260:56, line:285:9>
|   |   | | |-DeclStmt 0x2b88b330bd0 <line:261:13, col:22>
|   |   | | | |-VarDecl 0x2b88b330ad0 <col:13, col:17> col:17 used z 'int'
|   |   | | | `-VarDecl 0x2b88b330b50 <col:13, col:20> col:20 used jj 'int'
|   |   | | |-BinaryOperator 0x2b88b330cb8 <line:263:13, col:23> 'int' '='
|   |   | | | |-DeclRefExpr 0x2b88b330be8 <col:13> 'int' lvalue Var 0x2b88b330b50 'jj' 'int'
|   |   | | | `-BinaryOperator 0x2b88b330c98 <col:18, col:23> 'int' '&'
|   |   | | |   |-ImplicitCastExpr 0x2b88b330c80 <col:18> 'int' <LValueToRValue>
|   |   | | |   | `-DeclRefExpr 0x2b88b330c20 <col:18> 'int' lvalue Var 0x2b88b324648 'i' 'int'
|   |   | | |   `-UnaryOperator 0x2b88b330c68 <col:22, col:23> 'int' prefix '~' cannot overflow
|   |   | | |     `-IntegerLiteral 0x2b88b330c40 <col:23> 'int' 3
|   |   | | |-IfStmt 0x2b88b3323c0 <line:266:13, line:272:13>
|   |   | | | |-BinaryOperator 0x2b88b330f98 <line:266:17, col:22> 'int' '>'
|   |   | | | | |-ImplicitCastExpr 0x2b88b330f80 <col:17> 'int' <LValueToRValue>
|   |   | | | | | `-DeclRefExpr 0x2b88b330f38 <col:17> 'int' lvalue Var 0x2b88b330b50 'jj' 'int'
|   |   | | | | `-IntegerLiteral 0x2b88b330f58 <col:22> 'int' 2
|   |   | | | `-CompoundStmt 0x2b88b3323a8 <col:25, line:272:13>
|   |   | | |   `-IfStmt 0x2b88b332390 <line:267:17, line:271:17>
|   |   | | |     |-BinaryOperator 0x2b88b331120 <line:267:21, col:41> 'int' '=='
|   |   | | |     | |-ImplicitCastExpr 0x2b88b331108 <col:21, col:36> 'int' <IntegralCast>
|   |   | | |     | | `-ImplicitCastExpr 0x2b88b3310f0 <col:21, col:36> 'char' <LValueToRValue>
|   |   | | |     | |   `-ArraySubscriptExpr 0x2b88b3310b8 <col:21, col:36> 'char' lvalue
|   |   | | |     | |     |-ImplicitCastExpr 0x2b88b3310a0 <col:21, col:26> 'char *' <ArrayToPointerDecay>
|   |   | | |     | |     | `-MemberExpr 0x2b88b330ff0 <col:21, col:26> 'char [1024]' lvalue ->tmp 0x2b88b323738
|   |   | | |     | |     |   `-ImplicitCastExpr 0x2b88b330fd8 <col:21> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | | |     | |     |     `-DeclRefExpr 0x2b88b330fb8 <col:21> 'BIO_B64_CTX *' lvalue Var 0x2b88b324ad0 'ctx' 'BIO_B64_CTX *'
|   |   | | |     | |     `-BinaryOperator 0x2b88b331080 <col:30, col:35> 'int' '-'
|   |   | | |     | |       |-ImplicitCastExpr 0x2b88b331068 <col:30> 'int' <LValueToRValue>
|   |   | | |     | |       | `-DeclRefExpr 0x2b88b331020 <col:30> 'int' lvalue Var 0x2b88b330b50 'jj' 'int'
|   |   | | |     | |       `-IntegerLiteral 0x2b88b331040 <col:35> 'int' 1
|   |   | | |     | `-CharacterLiteral 0x2b88b3310d8 <col:41> 'int' 61
|   |   | | |     `-CompoundStmt 0x2b88b332370 <col:46, line:271:17>
|   |   | | |       |-UnaryOperator 0x2b88b331160 <line:268:21, col:22> 'int' postfix '--'
|   |   | | |       | `-DeclRefExpr 0x2b88b331140 <col:21> 'int' lvalue Var 0x2b88b330ad0 'z' 'int'
|   |   | | |       `-IfStmt 0x2b88b332358 <line:269:21, line:270:26>
|   |   | | |         |-BinaryOperator 0x2b88b332300 <line:269:25, col:45> 'int' '=='
|   |   | | |         | |-ImplicitCastExpr 0x2b88b3312c8 <col:25, col:40> 'int' <IntegralCast>
|   |   | | |         | | `-ImplicitCastExpr 0x2b88b3312b0 <col:25, col:40> 'char' <LValueToRValue>
|   |   | | |         | |   `-ArraySubscriptExpr 0x2b88b331278 <col:25, col:40> 'char' lvalue
|   |   | | |         | |     |-ImplicitCastExpr 0x2b88b331260 <col:25, col:30> 'char *' <ArrayToPointerDecay>
|   |   | | |         | |     | `-MemberExpr 0x2b88b3311b0 <col:25, col:30> 'char [1024]' lvalue ->tmp 0x2b88b323738
|   |   | | |         | |     |   `-ImplicitCastExpr 0x2b88b331198 <col:25> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | | |         | |     |     `-DeclRefExpr 0x2b88b331178 <col:25> 'BIO_B64_CTX *' lvalue Var 0x2b88b324ad0 'ctx' 'BIO_B64_CTX *'
|   |   | | |         | |     `-BinaryOperator 0x2b88b331240 <col:34, col:39> 'int' '-'
|   |   | | |         | |       |-ImplicitCastExpr 0x2b88b331228 <col:34> 'int' <LValueToRValue>
|   |   | | |         | |       | `-DeclRefExpr 0x2b88b3311e0 <col:34> 'int' lvalue Var 0x2b88b330b50 'jj' 'int'
|   |   | | |         | |       `-IntegerLiteral 0x2b88b331200 <col:39> 'int' 2
|   |   | | |         | `-CharacterLiteral 0x2b88b331298 <col:45> 'int' 61
|   |   | | |         `-UnaryOperator 0x2b88b332340 <line:270:25, col:26> 'int' postfix '--'
|   |   | | |           `-DeclRefExpr 0x2b88b332320 <col:25> 'int' lvalue Var 0x2b88b330ad0 'z' 'int'
|   |   | | |-IfStmt 0x2b88b332aa0 <line:276:13, line:279:13>
|   |   | | | |-BinaryOperator 0x2b88b332448 <line:276:17, col:23> 'int' '!='
|   |   | | | | |-ImplicitCastExpr 0x2b88b332418 <col:17> 'int' <LValueToRValue>
|   |   | | | | | `-DeclRefExpr 0x2b88b3323d8 <col:17> 'int' lvalue Var 0x2b88b330b50 'jj' 'int'
|   |   | | | | `-ImplicitCastExpr 0x2b88b332430 <col:23> 'int' <LValueToRValue>
|   |   | | | |   `-DeclRefExpr 0x2b88b3323f8 <col:23> 'int' lvalue Var 0x2b88b324648 'i' 'int'
|   |   | | | `-CompoundStmt 0x2b88b332a80 <col:26, line:279:13>
|   |   | | |   |-CallExpr 0x2b88b3328d0 <line:277:17, col:56> 'void *'
|   |   | | |   | |-ImplicitCastExpr 0x2b88b3328b8 <col:17> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   |   | | |   | | `-DeclRefExpr 0x2b88b332658 <col:17> 'void *(void *, const void *, unsigned long long)' Function 0x2b88b332468 'memmove' 'void *(void *, const void *, unsigned long long)'
|   |   | | |   | |-ImplicitCastExpr 0x2b88b332920 <col:25, col:30> 'void *' <BitCast>
|   |   | | |   | | `-ImplicitCastExpr 0x2b88b332908 <col:25, col:30> 'char *' <ArrayToPointerDecay>
|   |   | | |   | |   `-MemberExpr 0x2b88b3326c8 <col:25, col:30> 'char [1024]' lvalue ->tmp 0x2b88b323738
|   |   | | |   | |     `-ImplicitCastExpr 0x2b88b3326b0 <col:25> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | | |   | |       `-DeclRefExpr 0x2b88b332690 <col:25> 'BIO_B64_CTX *' lvalue Var 0x2b88b324ad0 'ctx' 'BIO_B64_CTX *'
|   |   | | |   | |-ImplicitCastExpr 0x2b88b332938 <col:35, col:47> 'const void *' <BitCast>
|   |   | | |   | | `-UnaryOperator 0x2b88b3327d0 <col:35, col:47> 'char *' prefix '&' cannot overflow
|   |   | | |   | |   `-ArraySubscriptExpr 0x2b88b3327b0 <col:36, col:47> 'char' lvalue
|   |   | | |   | |     |-ImplicitCastExpr 0x2b88b332780 <col:36, col:41> 'char *' <ArrayToPointerDecay>
|   |   | | |   | |     | `-MemberExpr 0x2b88b332730 <col:36, col:41> 'char [1024]' lvalue ->tmp 0x2b88b323738
|   |   | | |   | |     |   `-ImplicitCastExpr 0x2b88b332718 <col:36> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | | |   | |     |     `-DeclRefExpr 0x2b88b3326f8 <col:36> 'BIO_B64_CTX *' lvalue Var 0x2b88b324ad0 'ctx' 'BIO_B64_CTX *'
|   |   | | |   | |     `-ImplicitCastExpr 0x2b88b332798 <col:45> 'int' <LValueToRValue>
|   |   | | |   | |       `-DeclRefExpr 0x2b88b332760 <col:45> 'int' lvalue Var 0x2b88b330b50 'jj' 'int'
|   |   | | |   | `-ImplicitCastExpr 0x2b88b332950 <col:50, col:54> 'unsigned long long' <IntegralCast>
|   |   | | |   |   `-BinaryOperator 0x2b88b332858 <col:50, col:54> 'int' '-'
|   |   | | |   |     |-ImplicitCastExpr 0x2b88b332828 <col:50> 'int' <LValueToRValue>
|   |   | | |   |     | `-DeclRefExpr 0x2b88b3327e8 <col:50> 'int' lvalue Var 0x2b88b324648 'i' 'int'
|   |   | | |   |     `-ImplicitCastExpr 0x2b88b332840 <col:54> 'int' <LValueToRValue>
|   |   | | |   |       `-DeclRefExpr 0x2b88b332808 <col:54> 'int' lvalue Var 0x2b88b330b50 'jj' 'int'
|   |   | | |   `-BinaryOperator 0x2b88b332a60 <line:278:17, col:36> 'int' '='
|   |   | | |     |-MemberExpr 0x2b88b3329a0 <col:17, col:22> 'int' lvalue ->tmp_len 0x2b88b321118
|   |   | | |     | `-ImplicitCastExpr 0x2b88b332988 <col:17> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | | |     |   `-DeclRefExpr 0x2b88b332968 <col:17> 'BIO_B64_CTX *' lvalue Var 0x2b88b324ad0 'ctx' 'BIO_B64_CTX *'
|   |   | | |     `-BinaryOperator 0x2b88b332a40 <col:32, col:36> 'int' '-'
|   |   | | |       |-ImplicitCastExpr 0x2b88b332a10 <col:32> 'int' <LValueToRValue>
|   |   | | |       | `-DeclRefExpr 0x2b88b3329d0 <col:32> 'int' lvalue Var 0x2b88b324648 'i' 'int'
|   |   | | |       `-ImplicitCastExpr 0x2b88b332a28 <col:36> 'int' <LValueToRValue>
|   |   | | |         `-DeclRefExpr 0x2b88b3329f0 <col:36> 'int' lvalue Var 0x2b88b330b50 'jj' 'int'
|   |   | | |-BinaryOperator 0x2b88b332b48 <line:280:13, col:28> 'int' '='
|   |   | | | |-MemberExpr 0x2b88b332af0 <col:13, col:18> 'int' lvalue ->buf_len 0x2b88b321038
|   |   | | | | `-ImplicitCastExpr 0x2b88b332ad8 <col:13> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | | | |   `-DeclRefExpr 0x2b88b332ab8 <col:13> 'BIO_B64_CTX *' lvalue Var 0x2b88b324ad0 'ctx' 'BIO_B64_CTX *'
|   |   | | | `-IntegerLiteral 0x2b88b332b20 <col:28> 'int' 0
|   |   | | |-IfStmt 0x2b88b332cc0 <line:281:13, line:283:13>
|   |   | | | |-BinaryOperator 0x2b88b332bc8 <line:281:17, col:21> 'int' '>'
|   |   | | | | |-ImplicitCastExpr 0x2b88b332bb0 <col:17> 'int' <LValueToRValue>
|   |   | | | | | `-DeclRefExpr 0x2b88b332b68 <col:17> 'int' lvalue Var 0x2b88b330ad0 'z' 'int'
|   |   | | | | `-IntegerLiteral 0x2b88b332b88 <col:21> 'int' 0
|   |   | | | `-CompoundStmt 0x2b88b332ca8 <col:24, line:283:13>
|   |   | | |   `-BinaryOperator 0x2b88b332c88 <line:282:17, col:32> 'int' '='
|   |   | | |     |-MemberExpr 0x2b88b332c20 <col:17, col:22> 'int' lvalue ->buf_len 0x2b88b321038
|   |   | | |     | `-ImplicitCastExpr 0x2b88b332c08 <col:17> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | | |     |   `-DeclRefExpr 0x2b88b332be8 <col:17> 'BIO_B64_CTX *' lvalue Var 0x2b88b324ad0 'ctx' 'BIO_B64_CTX *'
|   |   | | |     `-ImplicitCastExpr 0x2b88b332c70 <col:32> 'int' <LValueToRValue>
|   |   | | |       `-DeclRefExpr 0x2b88b332c50 <col:32> 'int' lvalue Var 0x2b88b330ad0 'z' 'int'
|   |   | | `-BinaryOperator 0x2b88b332d30 <line:284:13, col:17> 'int' '='
|   |   | |   |-DeclRefExpr 0x2b88b332cd8 <col:13> 'int' lvalue Var 0x2b88b324648 'i' 'int'
|   |   | |   `-ImplicitCastExpr 0x2b88b332d18 <col:17> 'int' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x2b88b332cf8 <col:17> 'int' lvalue Var 0x2b88b330ad0 'z' 'int'
|   |   | `-CompoundStmt 0x2b88b333058 <line:285:16, line:290:9>
|   |   |   `-BinaryOperator 0x2b88b333038 <line:289:13, col:28> 'int' '='
|   |   |     |-MemberExpr 0x2b88b332fe0 <col:13, col:18> 'int' lvalue ->tmp_len 0x2b88b321118
|   |   |     | `-ImplicitCastExpr 0x2b88b332fc8 <col:13> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |     |   `-DeclRefExpr 0x2b88b332fa8 <col:13> 'BIO_B64_CTX *' lvalue Var 0x2b88b324ad0 'ctx' 'BIO_B64_CTX *'
|   |   |     `-IntegerLiteral 0x2b88b333010 <col:28> 'int' 0
|   |   |-BinaryOperator 0x2b88b333150 <line:297:9, col:21> 'int' '='
|   |   | |-MemberExpr 0x2b88b3330e8 <col:9, col:14> 'int' lvalue ->cont 0x2b88b323308
|   |   | | `-ImplicitCastExpr 0x2b88b3330d0 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2b88b3330b0 <col:9> 'BIO_B64_CTX *' lvalue Var 0x2b88b324ad0 'ctx' 'BIO_B64_CTX *'
|   |   | `-ImplicitCastExpr 0x2b88b333138 <col:21> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x2b88b333118 <col:21> 'int' lvalue Var 0x2b88b324648 'i' 'int'
|   |   |-BinaryOperator 0x2b88b333200 <line:299:9, col:24> 'int' '='
|   |   | |-MemberExpr 0x2b88b3331a8 <col:9, col:14> 'int' lvalue ->buf_off 0x2b88b3210a8
|   |   | | `-ImplicitCastExpr 0x2b88b333190 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2b88b333170 <col:9> 'BIO_B64_CTX *' lvalue Var 0x2b88b324ad0 'ctx' 'BIO_B64_CTX *'
|   |   | `-IntegerLiteral 0x2b88b3331d8 <col:24> 'int' 0
|   |   |-IfStmt 0x2b88b32d3b0 <line:300:9, line:304:9>
|   |   | |-BinaryOperator 0x2b88b333280 <line:300:13, col:17> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x2b88b333268 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x2b88b333220 <col:13> 'int' lvalue Var 0x2b88b324648 'i' 'int'
|   |   | | `-IntegerLiteral 0x2b88b333240 <col:17> 'int' 0
|   |   | `-CompoundStmt 0x2b88b32d388 <col:20, line:304:9>
|   |   |   |-BinaryOperator 0x2b88b32d2b0 <line:301:13, col:24> 'int' '='
|   |   |   | |-DeclRefExpr 0x2b88b3332a0 <col:13> 'int' lvalue Var 0x2b88b3249c8 'ret_code' 'int'
|   |   |   | `-IntegerLiteral 0x2b88b3332c0 <col:24> 'int' 0
|   |   |   |-BinaryOperator 0x2b88b32d360 <line:302:13, col:28> 'int' '='
|   |   |   | |-MemberExpr 0x2b88b32d308 <col:13, col:18> 'int' lvalue ->buf_len 0x2b88b321038
|   |   |   | | `-ImplicitCastExpr 0x2b88b32d2f0 <col:13> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x2b88b32d2d0 <col:13> 'BIO_B64_CTX *' lvalue Var 0x2b88b324ad0 'ctx' 'BIO_B64_CTX *'
|   |   |   | `-IntegerLiteral 0x2b88b32d338 <col:28> 'int' 0
|   |   |   `-BreakStmt 0x2b88b32d380 <line:303:13>
|   |   |-IfStmt 0x2b88b32d5d8 <line:306:9, line:309:17> has_else
|   |   | |-BinaryOperator 0x2b88b32d480 <line:306:13, col:29> 'int' '<='
|   |   | | |-ImplicitCastExpr 0x2b88b32d450 <col:13, col:18> 'int' <LValueToRValue>
|   |   | | | `-MemberExpr 0x2b88b32d400 <col:13, col:18> 'int' lvalue ->buf_len 0x2b88b321038
|   |   | | |   `-ImplicitCastExpr 0x2b88b32d3e8 <col:13> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x2b88b32d3c8 <col:13> 'BIO_B64_CTX *' lvalue Var 0x2b88b324ad0 'ctx' 'BIO_B64_CTX *'
|   |   | | `-ImplicitCastExpr 0x2b88b32d468 <col:29> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2b88b32d430 <col:29> 'int' lvalue ParmVar 0x2b88b324410 'outl' 'int'
|   |   | |-BinaryOperator 0x2b88b32d540 <line:307:13, col:22> 'int' '='
|   |   | | |-DeclRefExpr 0x2b88b32d4a0 <col:13> 'int' lvalue Var 0x2b88b324648 'i' 'int'
|   |   | | `-ImplicitCastExpr 0x2b88b32d528 <col:17, col:22> 'int' <LValueToRValue>
|   |   | |   `-MemberExpr 0x2b88b32d4f8 <col:17, col:22> 'int' lvalue ->buf_len 0x2b88b321038
|   |   | |     `-ImplicitCastExpr 0x2b88b32d4e0 <col:17> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x2b88b32d4c0 <col:17> 'BIO_B64_CTX *' lvalue Var 0x2b88b324ad0 'ctx' 'BIO_B64_CTX *'
|   |   | `-BinaryOperator 0x2b88b32d5b8 <line:309:13, col:17> 'int' '='
|   |   |   |-DeclRefExpr 0x2b88b32d560 <col:13> 'int' lvalue Var 0x2b88b324648 'i' 'int'
|   |   |   `-ImplicitCastExpr 0x2b88b32d5a0 <col:17> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x2b88b32d580 <col:17> 'int' lvalue ParmVar 0x2b88b324410 'outl' 'int'
|   |   |-CompoundAssignOperator 0x2b88b32d6f0 <line:312:9, col:16> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-DeclRefExpr 0x2b88b32d698 <col:9> 'int' lvalue Var 0x2b88b3245a0 'ret' 'int'
|   |   | `-ImplicitCastExpr 0x2b88b32d6d8 <col:16> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x2b88b32d6b8 <col:16> 'int' lvalue Var 0x2b88b324648 'i' 'int'
|   |   |-BinaryOperator 0x2b88b32d7c0 <line:313:9, col:24> 'int' '='
|   |   | |-MemberExpr 0x2b88b32d758 <col:9, col:14> 'int' lvalue ->buf_off 0x2b88b3210a8
|   |   | | `-ImplicitCastExpr 0x2b88b32d740 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2b88b32d720 <col:9> 'BIO_B64_CTX *' lvalue Var 0x2b88b324ad0 'ctx' 'BIO_B64_CTX *'
|   |   | `-ImplicitCastExpr 0x2b88b32d7a8 <col:24> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x2b88b32d788 <col:24> 'int' lvalue Var 0x2b88b324648 'i' 'int'
|   |   |-IfStmt 0x2b88b32da80 <line:314:9, line:317:9>
|   |   | |-BinaryOperator 0x2b88b32d8e0 <line:314:13, col:34> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x2b88b32d8b0 <col:13, col:18> 'int' <LValueToRValue>
|   |   | | | `-MemberExpr 0x2b88b32d818 <col:13, col:18> 'int' lvalue ->buf_off 0x2b88b3210a8
|   |   | | |   `-ImplicitCastExpr 0x2b88b32d800 <col:13> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x2b88b32d7e0 <col:13> 'BIO_B64_CTX *' lvalue Var 0x2b88b324ad0 'ctx' 'BIO_B64_CTX *'
|   |   | | `-ImplicitCastExpr 0x2b88b32d8c8 <col:29, col:34> 'int' <LValueToRValue>
|   |   | |   `-MemberExpr 0x2b88b32d880 <col:29, col:34> 'int' lvalue ->buf_len 0x2b88b321038
|   |   | |     `-ImplicitCastExpr 0x2b88b32d868 <col:29> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x2b88b32d848 <col:29> 'BIO_B64_CTX *' lvalue Var 0x2b88b324ad0 'ctx' 'BIO_B64_CTX *'
|   |   | `-CompoundStmt 0x2b88b32da60 <col:43, line:317:9>
|   |   |   |-BinaryOperator 0x2b88b32d990 <line:315:13, col:28> 'int' '='
|   |   |   | |-MemberExpr 0x2b88b32d938 <col:13, col:18> 'int' lvalue ->buf_len 0x2b88b321038
|   |   |   | | `-ImplicitCastExpr 0x2b88b32d920 <col:13> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x2b88b32d900 <col:13> 'BIO_B64_CTX *' lvalue Var 0x2b88b324ad0 'ctx' 'BIO_B64_CTX *'
|   |   |   | `-IntegerLiteral 0x2b88b32d968 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x2b88b32da40 <line:316:13, col:28> 'int' '='
|   |   |     |-MemberExpr 0x2b88b32d9e8 <col:13, col:18> 'int' lvalue ->buf_off 0x2b88b3210a8
|   |   |     | `-ImplicitCastExpr 0x2b88b32d9d0 <col:13> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |     |   `-DeclRefExpr 0x2b88b32d9b0 <col:13> 'BIO_B64_CTX *' lvalue Var 0x2b88b324ad0 'ctx' 'BIO_B64_CTX *'
|   |   |     `-IntegerLiteral 0x2b88b32da18 <col:28> 'int' 0
|   |   |-CompoundAssignOperator 0x2b88b32daf0 <line:318:9, col:17> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-DeclRefExpr 0x2b88b32da98 <col:9> 'int' lvalue ParmVar 0x2b88b324410 'outl' 'int'
|   |   | `-ImplicitCastExpr 0x2b88b32dad8 <col:17> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x2b88b32dab8 <col:17> 'int' lvalue Var 0x2b88b324648 'i' 'int'
|   |   `-CompoundAssignOperator 0x2b88b32db78 <line:319:9, col:16> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
|   |     |-DeclRefExpr 0x2b88b32db20 <col:9> 'char *' lvalue ParmVar 0x2b88b324390 'out' 'char *'
|   |     `-ImplicitCastExpr 0x2b88b32db60 <col:16> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x2b88b32db40 <col:16> 'int' lvalue Var 0x2b88b324648 'i' 'int'
|   `-ReturnStmt 0x2b88b32deb8 <line:323:5, col:40>
|     `-ParenExpr 0x2b88b32de98 <col:12, col:40> 'int'
|       `-ConditionalOperator 0x2b88b32de68 <col:13, col:37> 'int'
|         |-ParenExpr 0x2b88b32ddd8 <col:13, col:22> 'int'
|         | `-BinaryOperator 0x2b88b32ddb8 <col:14, col:21> 'int' '=='
|         |   |-ImplicitCastExpr 0x2b88b32dda0 <col:14> 'int' <LValueToRValue>
|         |   | `-DeclRefExpr 0x2b88b32dd58 <col:14> 'int' lvalue Var 0x2b88b3245a0 'ret' 'int'
|         |   `-IntegerLiteral 0x2b88b32dd78 <col:21> 'int' 0
|         |-ImplicitCastExpr 0x2b88b32de38 <col:26> 'int' <LValueToRValue>
|         | `-DeclRefExpr 0x2b88b32ddf8 <col:26> 'int' lvalue Var 0x2b88b3249c8 'ret_code' 'int'
|         `-ImplicitCastExpr 0x2b88b32de50 <col:37> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x2b88b32de18 <col:37> 'int' lvalue Var 0x2b88b3245a0 'ret' 'int'
|-FunctionDecl 0x2b88b322f60 <line:140:9> col:9 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x2b88b323000 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x2b88b323068 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x2b88b3230d0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2b88b332468 <line:277:17> col:17 implicit used memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x2b88b332508 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x2b88b332570 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x2b88b3325d8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2b88b32e0e8 <line:326:1, line:444:1> line:326:12 invalid b64_write 'int (int *, const char *, int)' static
| |-ParmVarDecl 0x2b88b32df40 <col:22, col:27> col:27 invalid b 'int *'
| |-ParmVarDecl 0x2b88b32dfc0 <col:30, col:42> col:42 used in 'const char *'
| |-ParmVarDecl 0x2b88b32e040 <col:46, col:50> col:50 used inl 'int'
| `-CompoundStmt 0x2b88b339d60 <line:327:1, line:444:1>
|   |-DeclStmt 0x2b88b32e260 <line:328:5, col:16>
|   | `-VarDecl 0x2b88b32e1d0 <col:5, col:15> col:9 used ret 'int' cinit
|   |   `-IntegerLiteral 0x2b88b32e238 <col:15> 'int' 0
|   |-DeclStmt 0x2b88b32e328 <line:329:5, col:10>
|   | `-VarDecl 0x2b88b32e2c0 <col:5, col:9> col:9 used n 'int'
|   |-DeclStmt 0x2b88b32e3c0 <line:330:5, col:10>
|   | `-VarDecl 0x2b88b32e358 <col:5, col:9> col:9 used i 'int'
|   |-DeclStmt 0x2b88b32e450 <line:331:5, col:21>
|   | `-VarDecl 0x2b88b32e3e8 <col:5, col:18> col:18 used ctx 'BIO_B64_CTX *'
|   |-IfStmt 0x2b88b32e6d0 <line:336:5, line:337:16>
|   | |-OpaqueValueExpr 0x2b88b32e6b8 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x2b88b32e6a8 <col:9, col:16>
|   |   `-IntegerLiteral 0x2b88b32e680 <col:16> 'int' 0
|   |-IfStmt 0x2b88b32ec08 <line:341:5, line:347:5>
|   | |-BinaryOperator 0x2b88b32e7b0 <line:341:9, line:30:25> 'int' '!='
|   | | |-ImplicitCastExpr 0x2b88b32e798 <line:341:9, col:14> 'int' <LValueToRValue>
|   | | | `-MemberExpr 0x2b88b32e740 <col:9, col:14> 'int' lvalue ->encode 0x2b88b323228
|   | | |   `-ImplicitCastExpr 0x2b88b32e728 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x2b88b32e708 <col:9> 'BIO_B64_CTX *' lvalue Var 0x2b88b32e3e8 'ctx' 'BIO_B64_CTX *'
|   | | `-IntegerLiteral 0x2b88b32e770 <line:30:25> 'int' 1
|   | `-CompoundStmt 0x2b88b32ebd8 <line:341:36, line:347:5>
|   |   |-BinaryOperator 0x2b88b32e860 <line:342:9, line:30:25> 'int' '='
|   |   | |-MemberExpr 0x2b88b32e808 <line:342:9, col:14> 'int' lvalue ->encode 0x2b88b323228
|   |   | | `-ImplicitCastExpr 0x2b88b32e7f0 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2b88b32e7d0 <col:9> 'BIO_B64_CTX *' lvalue Var 0x2b88b32e3e8 'ctx' 'BIO_B64_CTX *'
|   |   | `-IntegerLiteral 0x2b88b32e838 <line:30:25> 'int' 1
|   |   |-BinaryOperator 0x2b88b32e910 <line:343:9, col:24> 'int' '='
|   |   | |-MemberExpr 0x2b88b32e8b8 <col:9, col:14> 'int' lvalue ->buf_len 0x2b88b321038
|   |   | | `-ImplicitCastExpr 0x2b88b32e8a0 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2b88b32e880 <col:9> 'BIO_B64_CTX *' lvalue Var 0x2b88b32e3e8 'ctx' 'BIO_B64_CTX *'
|   |   | `-IntegerLiteral 0x2b88b32e8e8 <col:24> 'int' 0
|   |   |-BinaryOperator 0x2b88b32e9c0 <line:344:9, col:24> 'int' '='
|   |   | |-MemberExpr 0x2b88b32e968 <col:9, col:14> 'int' lvalue ->buf_off 0x2b88b3210a8
|   |   | | `-ImplicitCastExpr 0x2b88b32e950 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2b88b32e930 <col:9> 'BIO_B64_CTX *' lvalue Var 0x2b88b32e3e8 'ctx' 'BIO_B64_CTX *'
|   |   | `-IntegerLiteral 0x2b88b32e998 <col:24> 'int' 0
|   |   `-BinaryOperator 0x2b88b32ea70 <line:345:9, col:24> 'int' '='
|   |     |-MemberExpr 0x2b88b32ea18 <col:9, col:14> 'int' lvalue ->tmp_len 0x2b88b321118
|   |     | `-ImplicitCastExpr 0x2b88b32ea00 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x2b88b32e9e0 <col:9> 'BIO_B64_CTX *' lvalue Var 0x2b88b32e3e8 'ctx' 'BIO_B64_CTX *'
|   |     `-IntegerLiteral 0x2b88b32ea48 <col:24> 'int' 0
|   |-CallExpr 0x2b88b32eef8 <line:351:5, col:48> 'int'
|   | |-ImplicitCastExpr 0x2b88b32eee0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x2b88b32eda0 <col:5> 'int ()' Function 0x2b88b3228f0 'OPENSSL_assert' 'int ()'
|   | `-BinaryOperator 0x2b88b32eec0 <col:20, col:41> 'int' '>='
|   |   |-ImplicitCastExpr 0x2b88b32ee90 <col:20, col:25> 'int' <LValueToRValue>
|   |   | `-MemberExpr 0x2b88b32edf8 <col:20, col:25> 'int' lvalue ->buf_len 0x2b88b321038
|   |   |   `-ImplicitCastExpr 0x2b88b32ede0 <col:20> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x2b88b32edc0 <col:20> 'BIO_B64_CTX *' lvalue Var 0x2b88b32e3e8 'ctx' 'BIO_B64_CTX *'
|   |   `-ImplicitCastExpr 0x2b88b32eea8 <col:36, col:41> 'int' <LValueToRValue>
|   |     `-MemberExpr 0x2b88b32ee60 <col:36, col:41> 'int' lvalue ->buf_off 0x2b88b3210a8
|   |       `-ImplicitCastExpr 0x2b88b32ee48 <col:36> 'BIO_B64_CTX *' <LValueToRValue>
|   |         `-DeclRefExpr 0x2b88b32ee28 <col:36> 'BIO_B64_CTX *' lvalue Var 0x2b88b32e3e8 'ctx' 'BIO_B64_CTX *'
|   |-BinaryOperator 0x2b88b32f078 <line:352:5, col:29> 'int' '='
|   | |-DeclRefExpr 0x2b88b32ef20 <col:5> 'int' lvalue Var 0x2b88b32e2c0 'n' 'int'
|   | `-BinaryOperator 0x2b88b32f058 <col:9, col:29> 'int' '-'
|   |   |-ImplicitCastExpr 0x2b88b32f028 <col:9, col:14> 'int' <LValueToRValue>
|   |   | `-MemberExpr 0x2b88b32ef90 <col:9, col:14> 'int' lvalue ->buf_len 0x2b88b321038
|   |   |   `-ImplicitCastExpr 0x2b88b32ef78 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x2b88b32ef58 <col:9> 'BIO_B64_CTX *' lvalue Var 0x2b88b32e3e8 'ctx' 'BIO_B64_CTX *'
|   |   `-ImplicitCastExpr 0x2b88b32f040 <col:24, col:29> 'int' <LValueToRValue>
|   |     `-MemberExpr 0x2b88b32eff8 <col:24, col:29> 'int' lvalue ->buf_off 0x2b88b3210a8
|   |       `-ImplicitCastExpr 0x2b88b32efe0 <col:24> 'BIO_B64_CTX *' <LValueToRValue>
|   |         `-DeclRefExpr 0x2b88b32efc0 <col:24> 'BIO_B64_CTX *' lvalue Var 0x2b88b32e3e8 'ctx' 'BIO_B64_CTX *'
|   |-WhileStmt 0x2b88b32c900 <line:353:5, line:364:5>
|   | |-BinaryOperator 0x2b88b32f0f8 <line:353:12, col:16> 'int' '>'
|   | | |-ImplicitCastExpr 0x2b88b32f0e0 <col:12> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2b88b32f098 <col:12> 'int' lvalue Var 0x2b88b32e2c0 'n' 'int'
|   | | `-IntegerLiteral 0x2b88b32f0b8 <col:16> 'int' 0
|   | `-CompoundStmt 0x2b88b32c8c8 <col:19, line:364:5>
|   |   |-IfStmt 0x2b88b32c428 <line:355:9, line:358:9>
|   |   | |-BinaryOperator 0x2b88b32c368 <line:355:13, col:18> 'int' '<='
|   |   | | |-ImplicitCastExpr 0x2b88b32c350 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x2b88b32c308 <col:13> 'int' lvalue Var 0x2b88b32e358 'i' 'int'
|   |   | | `-IntegerLiteral 0x2b88b32c328 <col:18> 'int' 0
|   |   | `-CompoundStmt 0x2b88b32c410 <col:21, line:358:9>
|   |   |   `-ReturnStmt 0x2b88b32c400 <line:357:13, col:22>
|   |   |     `-ImplicitCastExpr 0x2b88b32c3e8 <col:20, col:22> 'int' <LValueToRValue>
|   |   |       `-ParenExpr 0x2b88b32c3c8 <col:20, col:22> 'int' lvalue
|   |   |         `-DeclRefExpr 0x2b88b32c3a8 <col:21> 'int' lvalue Var 0x2b88b32e358 'i' 'int'
|   |   |-CallExpr 0x2b88b32c508 <line:359:9, col:30> 'int'
|   |   | |-ImplicitCastExpr 0x2b88b32c4f0 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x2b88b32c440 <col:9> 'int ()' Function 0x2b88b3228f0 'OPENSSL_assert' 'int ()'
|   |   | `-BinaryOperator 0x2b88b32c4d0 <col:24, col:29> 'int' '<='
|   |   |   |-ImplicitCastExpr 0x2b88b32c4a0 <col:24> 'int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x2b88b32c460 <col:24> 'int' lvalue Var 0x2b88b32e358 'i' 'int'
|   |   |   `-ImplicitCastExpr 0x2b88b32c4b8 <col:29> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x2b88b32c480 <col:29> 'int' lvalue Var 0x2b88b32e2c0 'n' 'int'
|   |   |-CompoundAssignOperator 0x2b88b32c5d0 <line:360:9, col:25> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-MemberExpr 0x2b88b32c568 <col:9, col:14> 'int' lvalue ->buf_off 0x2b88b3210a8
|   |   | | `-ImplicitCastExpr 0x2b88b32c550 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2b88b32c530 <col:9> 'BIO_B64_CTX *' lvalue Var 0x2b88b32e3e8 'ctx' 'BIO_B64_CTX *'
|   |   | `-ImplicitCastExpr 0x2b88b32c5b8 <col:25> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x2b88b32c598 <col:25> 'int' lvalue Var 0x2b88b32e358 'i' 'int'
|   |   |-CallExpr 0x2b88b32c818 <line:362:9, col:52> 'int'
|   |   | |-ImplicitCastExpr 0x2b88b32c800 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x2b88b32c6c0 <col:9> 'int ()' Function 0x2b88b3228f0 'OPENSSL_assert' 'int ()'
|   |   | `-BinaryOperator 0x2b88b32c7e0 <col:24, col:45> 'int' '>='
|   |   |   |-ImplicitCastExpr 0x2b88b32c7b0 <col:24, col:29> 'int' <LValueToRValue>
|   |   |   | `-MemberExpr 0x2b88b32c718 <col:24, col:29> 'int' lvalue ->buf_len 0x2b88b321038
|   |   |   |   `-ImplicitCastExpr 0x2b88b32c700 <col:24> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x2b88b32c6e0 <col:24> 'BIO_B64_CTX *' lvalue Var 0x2b88b32e3e8 'ctx' 'BIO_B64_CTX *'
|   |   |   `-ImplicitCastExpr 0x2b88b32c7c8 <col:40, col:45> 'int' <LValueToRValue>
|   |   |     `-MemberExpr 0x2b88b32c780 <col:40, col:45> 'int' lvalue ->buf_off 0x2b88b3210a8
|   |   |       `-ImplicitCastExpr 0x2b88b32c768 <col:40> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x2b88b32c748 <col:40> 'BIO_B64_CTX *' lvalue Var 0x2b88b32e3e8 'ctx' 'BIO_B64_CTX *'
|   |   `-CompoundAssignOperator 0x2b88b32c898 <line:363:9, col:14> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     |-DeclRefExpr 0x2b88b32c840 <col:9> 'int' lvalue Var 0x2b88b32e2c0 'n' 'int'
|   |     `-ImplicitCastExpr 0x2b88b32c880 <col:14> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x2b88b32c860 <col:14> 'int' lvalue Var 0x2b88b32e358 'i' 'int'
|   |-BinaryOperator 0x2b88b32c9a8 <line:366:5, col:20> 'int' '='
|   | |-MemberExpr 0x2b88b32c950 <col:5, col:10> 'int' lvalue ->buf_off 0x2b88b3210a8
|   | | `-ImplicitCastExpr 0x2b88b32c938 <col:5> 'BIO_B64_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2b88b32c918 <col:5> 'BIO_B64_CTX *' lvalue Var 0x2b88b32e3e8 'ctx' 'BIO_B64_CTX *'
|   | `-IntegerLiteral 0x2b88b32c980 <col:20> 'int' 0
|   |-BinaryOperator 0x2b88b32ca58 <line:367:5, col:20> 'int' '='
|   | |-MemberExpr 0x2b88b32ca00 <col:5, col:10> 'int' lvalue ->buf_len 0x2b88b321038
|   | | `-ImplicitCastExpr 0x2b88b32c9e8 <col:5> 'BIO_B64_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2b88b32c9c8 <col:5> 'BIO_B64_CTX *' lvalue Var 0x2b88b32e3e8 'ctx' 'BIO_B64_CTX *'
|   | `-IntegerLiteral 0x2b88b32ca30 <col:20> 'int' 0
|   |-IfStmt 0x2b88b32ccd8 <line:369:5, line:370:18>
|   | |-BinaryOperator 0x2b88b32cc60 <line:369:9, col:34> 'int' '||'
|   | | |-ParenExpr 0x2b88b32cb88 <col:9, col:20> 'int'
|   | | | `-BinaryOperator 0x2b88b32cb68 <col:10, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |   |-ImplicitCastExpr 0x2b88b32cb38 <.//openssl//file_jk/before\crypto\evp\bio_b64.c:369:10> 'const char *' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x2b88b32ca78 <col:10> 'const char *' lvalue ParmVar 0x2b88b32dfc0 'in' 'const char *'
|   | | |   `-ImplicitCastExpr 0x2b88b32cb50 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   | | |     `-ParenExpr 0x2b88b32cb18 <col:17, col:27> 'void *'
|   | | |       `-CStyleCastExpr 0x2b88b32caf0 <col:18, col:26> 'void *' <NullToPointer>
|   | | |         `-IntegerLiteral 0x2b88b32cab0 <col:26> 'int' 0
|   | | `-ParenExpr 0x2b88b32cc40 <.//openssl//file_jk/before\crypto\evp\bio_b64.c:369:25, col:34> 'int'
|   | |   `-BinaryOperator 0x2b88b32cc20 <col:26, col:33> 'int' '<='
|   | |     |-ImplicitCastExpr 0x2b88b32cc08 <col:26> 'int' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x2b88b32cba8 <col:26> 'int' lvalue ParmVar 0x2b88b32e040 'inl' 'int'
|   | |     `-IntegerLiteral 0x2b88b32cbe0 <col:33> 'int' 0
|   | `-ReturnStmt 0x2b88b32ccc8 <line:370:9, col:18>
|   |   `-ParenExpr 0x2b88b32cca8 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x2b88b32cc80 <col:17> 'int' 0
|   |-WhileStmt 0x2b88b339ce0 <line:372:5, line:442:5>
|   | |-BinaryOperator 0x2b88b32cd50 <line:372:12, col:18> 'int' '>'
|   | | |-ImplicitCastExpr 0x2b88b32cd38 <col:12> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2b88b32ccf0 <col:12> 'int' lvalue ParmVar 0x2b88b32e040 'inl' 'int'
|   | | `-IntegerLiteral 0x2b88b32cd10 <col:18> 'int' 0
|   | `-CompoundStmt 0x2b88b339c88 <col:21, line:442:5>
|   |   |-BinaryOperator 0x2b88b32cec0 <line:373:9, col:55> 'int' '='
|   |   | |-DeclRefExpr 0x2b88b32cd70 <col:9> 'int' lvalue Var 0x2b88b32e2c0 'n' 'int'
|   |   | `-ConditionalOperator 0x2b88b32ce90 <col:13, col:55> 'int'
|   |   |   |-ParenExpr 0x2b88b32ce10 <col:13, col:34> 'int'
|   |   |   | `-BinaryOperator 0x2b88b32cdf0 <col:14, line:27:25> 'int' '>'
|   |   |   |   |-ImplicitCastExpr 0x2b88b32cdd8 <line:373:14> 'int' <LValueToRValue>
|   |   |   |   | `-DeclRefExpr 0x2b88b32cd90 <col:14> 'int' lvalue ParmVar 0x2b88b32e040 'inl' 'int'
|   |   |   |   `-IntegerLiteral 0x2b88b32cdb0 <line:27:25> 'int' 1024
|   |   |   |-IntegerLiteral 0x2b88b32ce30 <col:25> 'int' 1024
|   |   |   `-ImplicitCastExpr 0x2b88b32ce78 <line:373:55> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x2b88b32ce58 <col:55> 'int' lvalue ParmVar 0x2b88b32e040 'inl' 'int'
|   |   |-IfStmt 0x2b88b338fc8 <line:375:9, line:422:9> has_else
|   |   | |-OpaqueValueExpr 0x2b88b338fb0 <<invalid sloc>> '_Bool'
|   |   | |-CompoundStmt 0x2b88b338868 <line:375:56, line:414:9>
|   |   | | `-IfStmt 0x2b88b338840 <line:376:13, line:413:13> has_else
|   |   | |   |-BinaryOperator 0x2b88b32cfa8 <line:376:17, col:32> 'int' '>'
|   |   | |   | |-ImplicitCastExpr 0x2b88b32cf90 <col:17, col:22> 'int' <LValueToRValue>
|   |   | |   | | `-MemberExpr 0x2b88b32cf38 <col:17, col:22> 'int' lvalue ->tmp_len 0x2b88b321118
|   |   | |   | |   `-ImplicitCastExpr 0x2b88b32cf20 <col:17> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   | |     `-DeclRefExpr 0x2b88b32cf00 <col:17> 'BIO_B64_CTX *' lvalue Var 0x2b88b32e3e8 'ctx' 'BIO_B64_CTX *'
|   |   | |   | `-IntegerLiteral 0x2b88b32cf68 <col:32> 'int' 0
|   |   | |   |-CompoundStmt 0x2b88b32bdf0 <col:35, line:399:13>
|   |   | |   | |-CallExpr 0x2b88b32d0c8 <line:377:17, col:49> 'int'
|   |   | |   | | |-ImplicitCastExpr 0x2b88b32d0b0 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |   | |   | | | `-DeclRefExpr 0x2b88b32cfc8 <col:17> 'int ()' Function 0x2b88b3228f0 'OPENSSL_assert' 'int ()'
|   |   | |   | | `-BinaryOperator 0x2b88b32d090 <col:32, col:48> 'int' '<='
|   |   | |   | |   |-ImplicitCastExpr 0x2b88b32d078 <col:32, col:37> 'int' <LValueToRValue>
|   |   | |   | |   | `-MemberExpr 0x2b88b32d020 <col:32, col:37> 'int' lvalue ->tmp_len 0x2b88b321118
|   |   | |   | |   |   `-ImplicitCastExpr 0x2b88b32d008 <col:32> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   | |   |     `-DeclRefExpr 0x2b88b32cfe8 <col:32> 'BIO_B64_CTX *' lvalue Var 0x2b88b32e3e8 'ctx' 'BIO_B64_CTX *'
|   |   | |   | |   `-IntegerLiteral 0x2b88b32d050 <col:48> 'int' 3
|   |   | |   | |-BinaryOperator 0x2b88b32d1d8 <line:378:17, col:30> 'int' '='
|   |   | |   | | |-DeclRefExpr 0x2b88b32d0f0 <col:17> 'int' lvalue Var 0x2b88b32e2c0 'n' 'int'
|   |   | |   | | `-BinaryOperator 0x2b88b32d1b8 <col:21, col:30> 'int' '-'
|   |   | |   | |   |-IntegerLiteral 0x2b88b32d110 <col:21> 'int' 3
|   |   | |   | |   `-ImplicitCastExpr 0x2b88b32d1a0 <col:25, col:30> 'int' <LValueToRValue>
|   |   | |   | |     `-MemberExpr 0x2b88b32d170 <col:25, col:30> 'int' lvalue ->tmp_len 0x2b88b321118
|   |   | |   | |       `-ImplicitCastExpr 0x2b88b32d158 <col:25> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   | |         `-DeclRefExpr 0x2b88b32d138 <col:25> 'BIO_B64_CTX *' lvalue Var 0x2b88b32e3e8 'ctx' 'BIO_B64_CTX *'
|   |   | |   | |-IfStmt 0x2b88b32b308 <line:382:17, line:383:25>
|   |   | |   | | |-BinaryOperator 0x2b88b32d268 <line:382:21, col:25> 'int' '>'
|   |   | |   | | | |-ImplicitCastExpr 0x2b88b32d238 <col:21> 'int' <LValueToRValue>
|   |   | |   | | | | `-DeclRefExpr 0x2b88b32d1f8 <col:21> 'int' lvalue Var 0x2b88b32e2c0 'n' 'int'
|   |   | |   | | | `-ImplicitCastExpr 0x2b88b32d250 <col:25> 'int' <LValueToRValue>
|   |   | |   | | |   `-DeclRefExpr 0x2b88b32d218 <col:25> 'int' lvalue ParmVar 0x2b88b32e040 'inl' 'int'
|   |   | |   | | `-BinaryOperator 0x2b88b32b2e8 <line:383:21, col:25> 'int' '='
|   |   | |   | |   |-DeclRefExpr 0x2b88b32b290 <col:21> 'int' lvalue Var 0x2b88b32e2c0 'n' 'int'
|   |   | |   | |   `-ImplicitCastExpr 0x2b88b32b2d0 <col:25> 'int' <LValueToRValue>
|   |   | |   | |     `-DeclRefExpr 0x2b88b32b2b0 <col:25> 'int' lvalue ParmVar 0x2b88b32e040 'inl' 'int'
|   |   | |   | |-CallExpr 0x2b88b32b520 <line:384:17, col:56> 'void *'
|   |   | |   | | |-ImplicitCastExpr 0x2b88b32b508 <col:17> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   |   | |   | | | `-DeclRefExpr 0x2b88b32b320 <col:17> 'void *(void *, const void *, unsigned long long)' Function 0x2b88b322f60 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   |   | |   | | |-ImplicitCastExpr 0x2b88b32b558 <col:24, col:48> 'void *' <BitCast>
|   |   | |   | | | `-UnaryOperator 0x2b88b32b480 <col:24, col:48> 'char *' prefix '&' cannot overflow
|   |   | |   | | |   `-ParenExpr 0x2b88b32b460 <col:25, col:48> 'char' lvalue
|   |   | |   | | |     `-ArraySubscriptExpr 0x2b88b32b440 <col:26, col:47> 'char' lvalue
|   |   | |   | | |       |-ImplicitCastExpr 0x2b88b32b410 <col:26, col:31> 'char *' <ArrayToPointerDecay>
|   |   | |   | | |       | `-MemberExpr 0x2b88b32b378 <col:26, col:31> 'char [1024]' lvalue ->tmp 0x2b88b323738
|   |   | |   | | |       |   `-ImplicitCastExpr 0x2b88b32b360 <col:26> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   | | |       |     `-DeclRefExpr 0x2b88b32b340 <col:26> 'BIO_B64_CTX *' lvalue Var 0x2b88b32e3e8 'ctx' 'BIO_B64_CTX *'
|   |   | |   | | |       `-ImplicitCastExpr 0x2b88b32b428 <col:35, col:40> 'int' <LValueToRValue>
|   |   | |   | | |         `-MemberExpr 0x2b88b32b3e0 <col:35, col:40> 'int' lvalue ->tmp_len 0x2b88b321118
|   |   | |   | | |           `-ImplicitCastExpr 0x2b88b32b3c8 <col:35> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   | | |             `-DeclRefExpr 0x2b88b32b3a8 <col:35> 'BIO_B64_CTX *' lvalue Var 0x2b88b32e3e8 'ctx' 'BIO_B64_CTX *'
|   |   | |   | | |-ImplicitCastExpr 0x2b88b32b588 <col:51> 'const void *' <BitCast>
|   |   | |   | | | `-ImplicitCastExpr 0x2b88b32b570 <col:51> 'const char *' <LValueToRValue>
|   |   | |   | | |   `-DeclRefExpr 0x2b88b32b498 <col:51> 'const char *' lvalue ParmVar 0x2b88b32dfc0 'in' 'const char *'
|   |   | |   | | `-ImplicitCastExpr 0x2b88b32b5b8 <col:55> 'unsigned long long' <IntegralCast>
|   |   | |   | |   `-ImplicitCastExpr 0x2b88b32b5a0 <col:55> 'int' <LValueToRValue>
|   |   | |   | |     `-DeclRefExpr 0x2b88b32b4b8 <col:55> 'int' lvalue Var 0x2b88b32e2c0 'n' 'int'
|   |   | |   | |-CompoundAssignOperator 0x2b88b32b670 <line:385:17, col:33> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |   | | |-MemberExpr 0x2b88b32b608 <col:17, col:22> 'int' lvalue ->tmp_len 0x2b88b321118
|   |   | |   | | | `-ImplicitCastExpr 0x2b88b32b5f0 <col:17> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   | | |   `-DeclRefExpr 0x2b88b32b5d0 <col:17> 'BIO_B64_CTX *' lvalue Var 0x2b88b32e3e8 'ctx' 'BIO_B64_CTX *'
|   |   | |   | | `-ImplicitCastExpr 0x2b88b32b658 <col:33> 'int' <LValueToRValue>
|   |   | |   | |   `-DeclRefExpr 0x2b88b32b638 <col:33> 'int' lvalue Var 0x2b88b32e2c0 'n' 'int'
|   |   | |   | |-CompoundAssignOperator 0x2b88b32b710 <line:386:17, col:24> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |   | | |-DeclRefExpr 0x2b88b32b6a0 <col:17> 'int' lvalue Var 0x2b88b32e1d0 'ret' 'int'
|   |   | |   | | `-ImplicitCastExpr 0x2b88b32b6f8 <col:24> 'int' <LValueToRValue>
|   |   | |   | |   `-DeclRefExpr 0x2b88b32b6d8 <col:24> 'int' lvalue Var 0x2b88b32e2c0 'n' 'int'
|   |   | |   | |-IfStmt 0x2b88b32b810 <line:387:17, line:388:21>
|   |   | |   | | |-BinaryOperator 0x2b88b32b7e8 <line:387:21, col:36> 'int' '<'
|   |   | |   | | | |-ImplicitCastExpr 0x2b88b32b7d0 <col:21, col:26> 'int' <LValueToRValue>
|   |   | |   | | | | `-MemberExpr 0x2b88b32b778 <col:21, col:26> 'int' lvalue ->tmp_len 0x2b88b321118
|   |   | |   | | | |   `-ImplicitCastExpr 0x2b88b32b760 <col:21> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   | | | |     `-DeclRefExpr 0x2b88b32b740 <col:21> 'BIO_B64_CTX *' lvalue Var 0x2b88b32e3e8 'ctx' 'BIO_B64_CTX *'
|   |   | |   | | | `-IntegerLiteral 0x2b88b32b7a8 <col:36> 'int' 3
|   |   | |   | | `-BreakStmt 0x2b88b32b808 <line:388:21>
|   |   | |   | |-CallExpr 0x2b88b32bd18 <line:393:17, col:60> 'int'
|   |   | |   | | |-ImplicitCastExpr 0x2b88b32bd00 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |   | |   | | | `-DeclRefExpr 0x2b88b32bbc0 <col:17> 'int ()' Function 0x2b88b3228f0 'OPENSSL_assert' 'int ()'
|   |   | |   | | `-BinaryOperator 0x2b88b32bce0 <col:32, col:53> 'int' '>='
|   |   | |   | |   |-ImplicitCastExpr 0x2b88b32bcb0 <col:32, col:37> 'int' <LValueToRValue>
|   |   | |   | |   | `-MemberExpr 0x2b88b32bc18 <col:32, col:37> 'int' lvalue ->buf_len 0x2b88b321038
|   |   | |   | |   |   `-ImplicitCastExpr 0x2b88b32bc00 <col:32> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   | |   |     `-DeclRefExpr 0x2b88b32bbe0 <col:32> 'BIO_B64_CTX *' lvalue Var 0x2b88b32e3e8 'ctx' 'BIO_B64_CTX *'
|   |   | |   | |   `-ImplicitCastExpr 0x2b88b32bcc8 <col:48, col:53> 'int' <LValueToRValue>
|   |   | |   | |     `-MemberExpr 0x2b88b32bc80 <col:48, col:53> 'int' lvalue ->buf_off 0x2b88b3210a8
|   |   | |   | |       `-ImplicitCastExpr 0x2b88b32bc68 <col:48> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   | |         `-DeclRefExpr 0x2b88b32bc48 <col:48> 'BIO_B64_CTX *' lvalue Var 0x2b88b32e3e8 'ctx' 'BIO_B64_CTX *'
|   |   | |   | `-BinaryOperator 0x2b88b32bdd0 <line:398:17, col:32> 'int' '='
|   |   | |   |   |-MemberExpr 0x2b88b32bd78 <col:17, col:22> 'int' lvalue ->tmp_len 0x2b88b321118
|   |   | |   |   | `-ImplicitCastExpr 0x2b88b32bd60 <col:17> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   |   |   `-DeclRefExpr 0x2b88b32bd40 <col:17> 'BIO_B64_CTX *' lvalue Var 0x2b88b32e3e8 'ctx' 'BIO_B64_CTX *'
|   |   | |   |   `-IntegerLiteral 0x2b88b32bda8 <col:32> 'int' 0
|   |   | |   `-CompoundStmt 0x2b88b338810 <line:399:20, line:413:13>
|   |   | |     |-IfStmt 0x2b88b32c238 <line:400:17, line:405:17>
|   |   | |     | |-BinaryOperator 0x2b88b32bea8 <line:400:21, col:25> 'int' '<'
|   |   | |     | | |-ImplicitCastExpr 0x2b88b32be90 <col:21> 'int' <LValueToRValue>
|   |   | |     | | | `-DeclRefExpr 0x2b88b32be48 <col:21> 'int' lvalue Var 0x2b88b32e2c0 'n' 'int'
|   |   | |     | | `-IntegerLiteral 0x2b88b32be68 <col:25> 'int' 3
|   |   | |     | `-CompoundStmt 0x2b88b32c208 <col:28, line:405:17>
|   |   | |     |   |-CallExpr 0x2b88b32bff0 <line:401:21, col:43> 'void *'
|   |   | |     |   | |-ImplicitCastExpr 0x2b88b32bfd8 <col:21> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   |   | |     |   | | `-DeclRefExpr 0x2b88b32bec8 <col:21> 'void *(void *, const void *, unsigned long long)' Function 0x2b88b322f60 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   |   | |     |   | |-ImplicitCastExpr 0x2b88b32c040 <col:28, col:33> 'void *' <BitCast>
|   |   | |     |   | | `-ImplicitCastExpr 0x2b88b32c028 <col:28, col:33> 'char *' <ArrayToPointerDecay>
|   |   | |     |   | |   `-MemberExpr 0x2b88b32bf20 <col:28, col:33> 'char [1024]' lvalue ->tmp 0x2b88b323738
|   |   | |     |   | |     `-ImplicitCastExpr 0x2b88b32bf08 <col:28> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |     |   | |       `-DeclRefExpr 0x2b88b32bee8 <col:28> 'BIO_B64_CTX *' lvalue Var 0x2b88b32e3e8 'ctx' 'BIO_B64_CTX *'
|   |   | |     |   | |-ImplicitCastExpr 0x2b88b32c070 <col:38> 'const void *' <BitCast>
|   |   | |     |   | | `-ImplicitCastExpr 0x2b88b32c058 <col:38> 'const char *' <LValueToRValue>
|   |   | |     |   | |   `-DeclRefExpr 0x2b88b32bf50 <col:38> 'const char *' lvalue ParmVar 0x2b88b32dfc0 'in' 'const char *'
|   |   | |     |   | `-ImplicitCastExpr 0x2b88b32c0a0 <col:42> 'unsigned long long' <IntegralCast>
|   |   | |     |   |   `-ImplicitCastExpr 0x2b88b32c088 <col:42> 'int' <LValueToRValue>
|   |   | |     |   |     `-DeclRefExpr 0x2b88b32bf70 <col:42> 'int' lvalue Var 0x2b88b32e2c0 'n' 'int'
|   |   | |     |   |-BinaryOperator 0x2b88b32c158 <line:402:21, col:36> 'int' '='
|   |   | |     |   | |-MemberExpr 0x2b88b32c0f0 <col:21, col:26> 'int' lvalue ->tmp_len 0x2b88b321118
|   |   | |     |   | | `-ImplicitCastExpr 0x2b88b32c0d8 <col:21> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |     |   | |   `-DeclRefExpr 0x2b88b32c0b8 <col:21> 'BIO_B64_CTX *' lvalue Var 0x2b88b32e3e8 'ctx' 'BIO_B64_CTX *'
|   |   | |     |   | `-ImplicitCastExpr 0x2b88b32c140 <col:36> 'int' <LValueToRValue>
|   |   | |     |   |   `-DeclRefExpr 0x2b88b32c120 <col:36> 'int' lvalue Var 0x2b88b32e2c0 'n' 'int'
|   |   | |     |   |-CompoundAssignOperator 0x2b88b32c1d0 <line:403:21, col:28> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |     |   | |-DeclRefExpr 0x2b88b32c178 <col:21> 'int' lvalue Var 0x2b88b32e1d0 'ret' 'int'
|   |   | |     |   | `-ImplicitCastExpr 0x2b88b32c1b8 <col:28> 'int' <LValueToRValue>
|   |   | |     |   |   `-DeclRefExpr 0x2b88b32c198 <col:28> 'int' lvalue Var 0x2b88b32e2c0 'n' 'int'
|   |   | |     |   `-BreakStmt 0x2b88b32c200 <line:404:21>
|   |   | |     |-CompoundAssignOperator 0x2b88b3383c0 <line:406:17, col:26> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |     | |-DeclRefExpr 0x2b88b32c250 <col:17> 'int' lvalue Var 0x2b88b32e2c0 'n' 'int'
|   |   | |     | `-BinaryOperator 0x2b88b3383a0 <col:22, col:26> 'int' '%'
|   |   | |     |   |-ImplicitCastExpr 0x2b88b338388 <col:22> 'int' <LValueToRValue>
|   |   | |     |   | `-DeclRefExpr 0x2b88b32c270 <col:22> 'int' lvalue Var 0x2b88b32e2c0 'n' 'int'
|   |   | |     |   `-IntegerLiteral 0x2b88b338360 <col:26> 'int' 3
|   |   | |     |-CallExpr 0x2b88b338760 <line:411:17, col:60> 'int'
|   |   | |     | |-ImplicitCastExpr 0x2b88b338748 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |   | |     | | `-DeclRefExpr 0x2b88b338608 <col:17> 'int ()' Function 0x2b88b3228f0 'OPENSSL_assert' 'int ()'
|   |   | |     | `-BinaryOperator 0x2b88b338728 <col:32, col:53> 'int' '>='
|   |   | |     |   |-ImplicitCastExpr 0x2b88b3386f8 <col:32, col:37> 'int' <LValueToRValue>
|   |   | |     |   | `-MemberExpr 0x2b88b338660 <col:32, col:37> 'int' lvalue ->buf_len 0x2b88b321038
|   |   | |     |   |   `-ImplicitCastExpr 0x2b88b338648 <col:32> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |     |   |     `-DeclRefExpr 0x2b88b338628 <col:32> 'BIO_B64_CTX *' lvalue Var 0x2b88b32e3e8 'ctx' 'BIO_B64_CTX *'
|   |   | |     |   `-ImplicitCastExpr 0x2b88b338710 <col:48, col:53> 'int' <LValueToRValue>
|   |   | |     |     `-MemberExpr 0x2b88b3386c8 <col:48, col:53> 'int' lvalue ->buf_off 0x2b88b3210a8
|   |   | |     |       `-ImplicitCastExpr 0x2b88b3386b0 <col:48> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |     |         `-DeclRefExpr 0x2b88b338690 <col:48> 'BIO_B64_CTX *' lvalue Var 0x2b88b32e3e8 'ctx' 'BIO_B64_CTX *'
|   |   | |     `-CompoundAssignOperator 0x2b88b3387e0 <line:412:17, col:24> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |       |-DeclRefExpr 0x2b88b338788 <col:17> 'int' lvalue Var 0x2b88b32e1d0 'ret' 'int'
|   |   | |       `-ImplicitCastExpr 0x2b88b3387c8 <col:24> 'int' <LValueToRValue>
|   |   | |         `-DeclRefExpr 0x2b88b3387a8 <col:24> 'int' lvalue Var 0x2b88b32e2c0 'n' 'int'
|   |   | `-CompoundStmt 0x2b88b338f88 <line:414:16, line:422:9>
|   |   |   |-IfStmt 0x2b88b338ca8 <line:415:13, line:418:46>
|   |   |   | |-OpaqueValueExpr 0x2b88b338c90 <<invalid sloc>> '_Bool'
|   |   |   | `-ReturnStmt 0x2b88b338c80 <col:17, col:46>
|   |   |   |   `-ParenExpr 0x2b88b338c60 <col:24, col:46> 'int'
|   |   |   |     `-ConditionalOperator 0x2b88b338c30 <col:25, col:43> 'int'
|   |   |   |       |-ParenExpr 0x2b88b338b98 <col:25, col:34> 'int'
|   |   |   |       | `-BinaryOperator 0x2b88b338b78 <col:26, col:33> 'int' '=='
|   |   |   |       |   |-ImplicitCastExpr 0x2b88b338b60 <col:26> 'int' <LValueToRValue>
|   |   |   |       |   | `-DeclRefExpr 0x2b88b338b18 <col:26> 'int' lvalue Var 0x2b88b32e1d0 'ret' 'int'
|   |   |   |       |   `-IntegerLiteral 0x2b88b338b38 <col:33> 'int' 0
|   |   |   |       |-UnaryOperator 0x2b88b338be0 <col:38, col:39> 'int' prefix '-'
|   |   |   |       | `-IntegerLiteral 0x2b88b338bb8 <col:39> 'int' 1
|   |   |   |       `-ImplicitCastExpr 0x2b88b338c18 <col:43> 'int' <LValueToRValue>
|   |   |   |         `-DeclRefExpr 0x2b88b338bf8 <col:43> 'int' lvalue Var 0x2b88b32e1d0 'ret' 'int'
|   |   |   |-CallExpr 0x2b88b338ed8 <line:420:13, col:56> 'int'
|   |   |   | |-ImplicitCastExpr 0x2b88b338ec0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x2b88b338d80 <col:13> 'int ()' Function 0x2b88b3228f0 'OPENSSL_assert' 'int ()'
|   |   |   | `-BinaryOperator 0x2b88b338ea0 <col:28, col:49> 'int' '>='
|   |   |   |   |-ImplicitCastExpr 0x2b88b338e70 <col:28, col:33> 'int' <LValueToRValue>
|   |   |   |   | `-MemberExpr 0x2b88b338dd8 <col:28, col:33> 'int' lvalue ->buf_len 0x2b88b321038
|   |   |   |   |   `-ImplicitCastExpr 0x2b88b338dc0 <col:28> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   |   |     `-DeclRefExpr 0x2b88b338da0 <col:28> 'BIO_B64_CTX *' lvalue Var 0x2b88b32e3e8 'ctx' 'BIO_B64_CTX *'
|   |   |   |   `-ImplicitCastExpr 0x2b88b338e88 <col:44, col:49> 'int' <LValueToRValue>
|   |   |   |     `-MemberExpr 0x2b88b338e40 <col:44, col:49> 'int' lvalue ->buf_off 0x2b88b3210a8
|   |   |   |       `-ImplicitCastExpr 0x2b88b338e28 <col:44> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   |         `-DeclRefExpr 0x2b88b338e08 <col:44> 'BIO_B64_CTX *' lvalue Var 0x2b88b32e3e8 'ctx' 'BIO_B64_CTX *'
|   |   |   `-CompoundAssignOperator 0x2b88b338f58 <line:421:13, col:20> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |     |-DeclRefExpr 0x2b88b338f00 <col:13> 'int' lvalue Var 0x2b88b32e1d0 'ret' 'int'
|   |   |     `-ImplicitCastExpr 0x2b88b338f40 <col:20> 'int' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x2b88b338f20 <col:20> 'int' lvalue Var 0x2b88b32e2c0 'n' 'int'
|   |   |-CompoundAssignOperator 0x2b88b339048 <line:423:9, col:16> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-DeclRefExpr 0x2b88b338ff0 <col:9> 'int' lvalue ParmVar 0x2b88b32e040 'inl' 'int'
|   |   | `-ImplicitCastExpr 0x2b88b339030 <col:16> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x2b88b339010 <col:16> 'int' lvalue Var 0x2b88b32e2c0 'n' 'int'
|   |   |-CompoundAssignOperator 0x2b88b3390d0 <line:424:9, col:15> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'
|   |   | |-DeclRefExpr 0x2b88b339078 <col:9> 'const char *' lvalue ParmVar 0x2b88b32dfc0 'in' 'const char *'
|   |   | `-ImplicitCastExpr 0x2b88b3390b8 <col:15> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x2b88b339098 <col:15> 'int' lvalue Var 0x2b88b32e2c0 'n' 'int'
|   |   |-BinaryOperator 0x2b88b339190 <line:426:9, col:24> 'int' '='
|   |   | |-MemberExpr 0x2b88b339138 <col:9, col:14> 'int' lvalue ->buf_off 0x2b88b3210a8
|   |   | | `-ImplicitCastExpr 0x2b88b339120 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2b88b339100 <col:9> 'BIO_B64_CTX *' lvalue Var 0x2b88b32e3e8 'ctx' 'BIO_B64_CTX *'
|   |   | `-IntegerLiteral 0x2b88b339168 <col:24> 'int' 0
|   |   |-BinaryOperator 0x2b88b339250 <line:427:9, col:18> 'int' '='
|   |   | |-DeclRefExpr 0x2b88b3391b0 <col:9> 'int' lvalue Var 0x2b88b32e2c0 'n' 'int'
|   |   | `-ImplicitCastExpr 0x2b88b339238 <col:13, col:18> 'int' <LValueToRValue>
|   |   |   `-MemberExpr 0x2b88b339208 <col:13, col:18> 'int' lvalue ->buf_len 0x2b88b321038
|   |   |     `-ImplicitCastExpr 0x2b88b3391f0 <col:13> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x2b88b3391d0 <col:13> 'BIO_B64_CTX *' lvalue Var 0x2b88b32e3e8 'ctx' 'BIO_B64_CTX *'
|   |   |-WhileStmt 0x2b88b339b10 <line:428:9, line:439:9>
|   |   | |-BinaryOperator 0x2b88b3392d0 <line:428:16, col:20> 'int' '>'
|   |   | | |-ImplicitCastExpr 0x2b88b3392b8 <col:16> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x2b88b339270 <col:16> 'int' lvalue Var 0x2b88b32e2c0 'n' 'int'
|   |   | | `-IntegerLiteral 0x2b88b339290 <col:20> 'int' 0
|   |   | `-CompoundStmt 0x2b88b339ad8 <col:23, line:439:9>
|   |   |   |-IfStmt 0x2b88b339638 <line:430:13, line:433:13>
|   |   |   | |-BinaryOperator 0x2b88b339470 <line:430:17, col:22> 'int' '<='
|   |   |   | | |-ImplicitCastExpr 0x2b88b339458 <col:17> 'int' <LValueToRValue>
|   |   |   | | | `-DeclRefExpr 0x2b88b339410 <col:17> 'int' lvalue Var 0x2b88b32e358 'i' 'int'
|   |   |   | | `-IntegerLiteral 0x2b88b339430 <col:22> 'int' 0
|   |   |   | `-CompoundStmt 0x2b88b339620 <col:25, line:433:13>
|   |   |   |   `-ReturnStmt 0x2b88b339610 <line:432:17, col:45>
|   |   |   |     `-ParenExpr 0x2b88b3395f0 <col:24, col:45> 'int'
|   |   |   |       `-ConditionalOperator 0x2b88b3395c0 <col:25, col:42> 'int'
|   |   |   |         |-ParenExpr 0x2b88b339530 <col:25, col:34> 'int'
|   |   |   |         | `-BinaryOperator 0x2b88b339510 <col:26, col:33> 'int' '=='
|   |   |   |         |   |-ImplicitCastExpr 0x2b88b3394f8 <col:26> 'int' <LValueToRValue>
|   |   |   |         |   | `-DeclRefExpr 0x2b88b3394b0 <col:26> 'int' lvalue Var 0x2b88b32e1d0 'ret' 'int'
|   |   |   |         |   `-IntegerLiteral 0x2b88b3394d0 <col:33> 'int' 0
|   |   |   |         |-ImplicitCastExpr 0x2b88b339590 <col:38> 'int' <LValueToRValue>
|   |   |   |         | `-DeclRefExpr 0x2b88b339550 <col:38> 'int' lvalue Var 0x2b88b32e358 'i' 'int'
|   |   |   |         `-ImplicitCastExpr 0x2b88b3395a8 <col:42> 'int' <LValueToRValue>
|   |   |   |           `-DeclRefExpr 0x2b88b339570 <col:42> 'int' lvalue Var 0x2b88b32e1d0 'ret' 'int'
|   |   |   |-CallExpr 0x2b88b339718 <line:434:13, col:34> 'int'
|   |   |   | |-ImplicitCastExpr 0x2b88b339700 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x2b88b339650 <col:13> 'int ()' Function 0x2b88b3228f0 'OPENSSL_assert' 'int ()'
|   |   |   | `-BinaryOperator 0x2b88b3396e0 <col:28, col:33> 'int' '<='
|   |   |   |   |-ImplicitCastExpr 0x2b88b3396b0 <col:28> 'int' <LValueToRValue>
|   |   |   |   | `-DeclRefExpr 0x2b88b339670 <col:28> 'int' lvalue Var 0x2b88b32e358 'i' 'int'
|   |   |   |   `-ImplicitCastExpr 0x2b88b3396c8 <col:33> 'int' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x2b88b339690 <col:33> 'int' lvalue Var 0x2b88b32e2c0 'n' 'int'
|   |   |   |-CompoundAssignOperator 0x2b88b339798 <line:435:13, col:18> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |   | |-DeclRefExpr 0x2b88b339740 <col:13> 'int' lvalue Var 0x2b88b32e2c0 'n' 'int'
|   |   |   | `-ImplicitCastExpr 0x2b88b339780 <col:18> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x2b88b339760 <col:18> 'int' lvalue Var 0x2b88b32e358 'i' 'int'
|   |   |   |-CompoundAssignOperator 0x2b88b339868 <line:436:13, col:29> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |   | |-MemberExpr 0x2b88b339800 <col:13, col:18> 'int' lvalue ->buf_off 0x2b88b3210a8
|   |   |   | | `-ImplicitCastExpr 0x2b88b3397e8 <col:13> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x2b88b3397c8 <col:13> 'BIO_B64_CTX *' lvalue Var 0x2b88b32e3e8 'ctx' 'BIO_B64_CTX *'
|   |   |   | `-ImplicitCastExpr 0x2b88b339850 <col:29> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x2b88b339830 <col:29> 'int' lvalue Var 0x2b88b32e358 'i' 'int'
|   |   |   `-CallExpr 0x2b88b339ab0 <line:438:13, col:56> 'int'
|   |   |     |-ImplicitCastExpr 0x2b88b339a98 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x2b88b339958 <col:13> 'int ()' Function 0x2b88b3228f0 'OPENSSL_assert' 'int ()'
|   |   |     `-BinaryOperator 0x2b88b339a78 <col:28, col:49> 'int' '>='
|   |   |       |-ImplicitCastExpr 0x2b88b339a48 <col:28, col:33> 'int' <LValueToRValue>
|   |   |       | `-MemberExpr 0x2b88b3399b0 <col:28, col:33> 'int' lvalue ->buf_len 0x2b88b321038
|   |   |       |   `-ImplicitCastExpr 0x2b88b339998 <col:28> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |       |     `-DeclRefExpr 0x2b88b339978 <col:28> 'BIO_B64_CTX *' lvalue Var 0x2b88b32e3e8 'ctx' 'BIO_B64_CTX *'
|   |   |       `-ImplicitCastExpr 0x2b88b339a60 <col:44, col:49> 'int' <LValueToRValue>
|   |   |         `-MemberExpr 0x2b88b339a18 <col:44, col:49> 'int' lvalue ->buf_off 0x2b88b3210a8
|   |   |           `-ImplicitCastExpr 0x2b88b339a00 <col:44> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |             `-DeclRefExpr 0x2b88b3399e0 <col:44> 'BIO_B64_CTX *' lvalue Var 0x2b88b32e3e8 'ctx' 'BIO_B64_CTX *'
|   |   |-BinaryOperator 0x2b88b339bb8 <line:440:9, col:24> 'int' '='
|   |   | |-MemberExpr 0x2b88b339b60 <col:9, col:14> 'int' lvalue ->buf_len 0x2b88b321038
|   |   | | `-ImplicitCastExpr 0x2b88b339b48 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2b88b339b28 <col:9> 'BIO_B64_CTX *' lvalue Var 0x2b88b32e3e8 'ctx' 'BIO_B64_CTX *'
|   |   | `-IntegerLiteral 0x2b88b339b90 <col:24> 'int' 0
|   |   `-BinaryOperator 0x2b88b339c68 <line:441:9, col:24> 'int' '='
|   |     |-MemberExpr 0x2b88b339c10 <col:9, col:14> 'int' lvalue ->buf_off 0x2b88b3210a8
|   |     | `-ImplicitCastExpr 0x2b88b339bf8 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x2b88b339bd8 <col:9> 'BIO_B64_CTX *' lvalue Var 0x2b88b32e3e8 'ctx' 'BIO_B64_CTX *'
|   |     `-IntegerLiteral 0x2b88b339c40 <col:24> 'int' 0
|   `-ReturnStmt 0x2b88b339d50 <line:443:5, col:16>
|     `-ImplicitCastExpr 0x2b88b339d38 <col:12, col:16> 'int' <LValueToRValue>
|       `-ParenExpr 0x2b88b339d18 <col:12, col:16> 'int' lvalue
|         `-DeclRefExpr 0x2b88b339cf8 <col:13> 'int' lvalue Var 0x2b88b32e1d0 'ret' 'int'
|-FunctionDecl 0x2b88b33a028 <line:446:1, line:531:1> line:446:13 invalid b64_ctrl 'long (int *, int, long, void *)' static
| |-ParmVarDecl 0x2b88b339df8 <col:22, col:27> col:27 invalid b 'int *'
| |-ParmVarDecl 0x2b88b339e78 <col:30, col:34> col:34 used cmd 'int'
| |-ParmVarDecl 0x2b88b339ef8 <col:39, col:44> col:44 used num 'long'
| |-ParmVarDecl 0x2b88b339f78 <col:49, col:55> col:55 used ptr 'void *'
| `-CompoundStmt 0x2b88b33a980 <line:447:1, line:531:1>
|   |-DeclStmt 0x2b88b33a178 <line:448:5, col:21>
|   | `-VarDecl 0x2b88b33a110 <col:5, col:18> col:18 used ctx 'BIO_B64_CTX *'
|   |-DeclStmt 0x2b88b33a250 <line:449:5, col:17>
|   | `-VarDecl 0x2b88b33a1a8 <col:5, col:16> col:10 used ret 'long' cinit
|   |   `-ImplicitCastExpr 0x2b88b33a238 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x2b88b33a210 <col:16> 'int' 1
|   |-DeclStmt 0x2b88b33a2e8 <line:450:5, col:10>
|   | `-VarDecl 0x2b88b33a280 <col:5, col:9> col:9 used i 'int'
|   |-IfStmt 0x2b88b334548 <line:455:5, line:456:16>
|   | |-OpaqueValueExpr 0x2b88b334530 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x2b88b334520 <col:9, col:16>
|   |   `-ImplicitCastExpr 0x2b88b334508 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x2b88b3344e0 <col:16> 'int' 0
|   |-SwitchStmt 0x2b88b3345b0 <line:458:5, line:529:5>
|   | |-ImplicitCastExpr 0x2b88b334598 <line:458:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x2b88b334560 <col:13> 'int' lvalue ParmVar 0x2b88b339e78 'cmd' 'int'
|   | `-CompoundStmt 0x2b88b33a888 <col:18, line:529:5>
|   |   |-BinaryOperator 0x2b88b334660 <line:460:9, col:21> 'int' '='
|   |   | |-MemberExpr 0x2b88b334608 <col:9, col:14> 'int' lvalue ->cont 0x2b88b323308
|   |   | | `-ImplicitCastExpr 0x2b88b3345f0 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2b88b3345d0 <col:9> 'BIO_B64_CTX *' lvalue Var 0x2b88b33a110 'ctx' 'BIO_B64_CTX *'
|   |   | `-IntegerLiteral 0x2b88b334638 <col:21> 'int' 1
|   |   |-BinaryOperator 0x2b88b334710 <line:461:9, col:22> 'int' '='
|   |   | |-MemberExpr 0x2b88b3346b8 <col:9, col:14> 'int' lvalue ->start 0x2b88b323298
|   |   | | `-ImplicitCastExpr 0x2b88b3346a0 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2b88b334680 <col:9> 'BIO_B64_CTX *' lvalue Var 0x2b88b33a110 'ctx' 'BIO_B64_CTX *'
|   |   | `-IntegerLiteral 0x2b88b3346e8 <col:22> 'int' 1
|   |   |-BinaryOperator 0x2b88b3347c0 <line:462:9, line:29:25> 'int' '='
|   |   | |-MemberExpr 0x2b88b334768 <line:462:9, col:14> 'int' lvalue ->encode 0x2b88b323228
|   |   | | `-ImplicitCastExpr 0x2b88b334750 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2b88b334730 <col:9> 'BIO_B64_CTX *' lvalue Var 0x2b88b33a110 'ctx' 'BIO_B64_CTX *'
|   |   | `-IntegerLiteral 0x2b88b334798 <line:29:25> 'int' 0
|   |   |-BreakStmt 0x2b88b3349b8 <line:464:9>
|   |   |-IfStmt 0x2b88b334bb0 <line:466:9, line:469:13> has_else
|   |   | |-BinaryOperator 0x2b88b334a68 <line:466:13, col:26> 'int' '<='
|   |   | | |-ImplicitCastExpr 0x2b88b334a50 <col:13, col:18> 'int' <LValueToRValue>
|   |   | | | `-MemberExpr 0x2b88b3349f8 <col:13, col:18> 'int' lvalue ->cont 0x2b88b323308
|   |   | | |   `-ImplicitCastExpr 0x2b88b3349e0 <col:13> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x2b88b3349c0 <col:13> 'BIO_B64_CTX *' lvalue Var 0x2b88b33a110 'ctx' 'BIO_B64_CTX *'
|   |   | | `-IntegerLiteral 0x2b88b334a28 <col:26> 'int' 0
|   |   | |-BinaryOperator 0x2b88b334ae8 <line:467:13, col:19> 'long' '='
|   |   | | |-DeclRefExpr 0x2b88b334a88 <col:13> 'long' lvalue Var 0x2b88b33a1a8 'ret' 'long'
|   |   | | `-ImplicitCastExpr 0x2b88b334ad0 <col:19> 'long' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x2b88b334aa8 <col:19> 'int' 1
|   |   | `-NullStmt 0x2b88b334ba8 <line:469:13>
|   |   |-BreakStmt 0x2b88b334bd8 <line:470:9>
|   |   |-CallExpr 0x2b88b334d38 <line:472:9, col:52> 'int'
|   |   | |-ImplicitCastExpr 0x2b88b334d20 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x2b88b334be0 <col:9> 'int ()' Function 0x2b88b3228f0 'OPENSSL_assert' 'int ()'
|   |   | `-BinaryOperator 0x2b88b334d00 <col:24, col:45> 'int' '>='
|   |   |   |-ImplicitCastExpr 0x2b88b334cd0 <col:24, col:29> 'int' <LValueToRValue>
|   |   |   | `-MemberExpr 0x2b88b334c38 <col:24, col:29> 'int' lvalue ->buf_len 0x2b88b321038
|   |   |   |   `-ImplicitCastExpr 0x2b88b334c20 <col:24> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x2b88b334c00 <col:24> 'BIO_B64_CTX *' lvalue Var 0x2b88b33a110 'ctx' 'BIO_B64_CTX *'
|   |   |   `-ImplicitCastExpr 0x2b88b334ce8 <col:40, col:45> 'int' <LValueToRValue>
|   |   |     `-MemberExpr 0x2b88b334ca0 <col:40, col:45> 'int' lvalue ->buf_off 0x2b88b3210a8
|   |   |       `-ImplicitCastExpr 0x2b88b334c88 <col:40> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x2b88b334c68 <col:40> 'BIO_B64_CTX *' lvalue Var 0x2b88b33a110 'ctx' 'BIO_B64_CTX *'
|   |   |-BinaryOperator 0x2b88b334eb8 <line:473:9, col:35> 'long' '='
|   |   | |-DeclRefExpr 0x2b88b334d60 <col:9> 'long' lvalue Var 0x2b88b33a1a8 'ret' 'long'
|   |   | `-ImplicitCastExpr 0x2b88b334ea0 <col:15, col:35> 'long' <IntegralCast>
|   |   |   `-BinaryOperator 0x2b88b334e80 <col:15, col:35> 'int' '-'
|   |   |     |-ImplicitCastExpr 0x2b88b334e50 <col:15, col:20> 'int' <LValueToRValue>
|   |   |     | `-MemberExpr 0x2b88b334db8 <col:15, col:20> 'int' lvalue ->buf_len 0x2b88b321038
|   |   |     |   `-ImplicitCastExpr 0x2b88b334da0 <col:15> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x2b88b334d80 <col:15> 'BIO_B64_CTX *' lvalue Var 0x2b88b33a110 'ctx' 'BIO_B64_CTX *'
|   |   |     `-ImplicitCastExpr 0x2b88b334e68 <col:30, col:35> 'int' <LValueToRValue>
|   |   |       `-MemberExpr 0x2b88b334e20 <col:30, col:35> 'int' lvalue ->buf_off 0x2b88b3210a8
|   |   |         `-ImplicitCastExpr 0x2b88b334e08 <col:30> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |           `-DeclRefExpr 0x2b88b334de8 <col:30> 'BIO_B64_CTX *' lvalue Var 0x2b88b33a110 'ctx' 'BIO_B64_CTX *'
|   |   |-IfStmt 0x2b88b336400 <line:474:9, line:477:14> has_else
|   |   | |-OpaqueValueExpr 0x2b88b3363e8 <<invalid sloc>> '_Bool'
|   |   | |-BinaryOperator 0x2b88b335268 <line:476:13, col:19> 'long' '='
|   |   | | |-DeclRefExpr 0x2b88b335208 <col:13> 'long' lvalue Var 0x2b88b33a1a8 'ret' 'long'
|   |   | | `-ImplicitCastExpr 0x2b88b335250 <col:19> 'long' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x2b88b335228 <col:19> 'int' 1
|   |   | `-NullStmt 0x2b88b3363e0 <line:477:14>
|   |   |-BreakStmt 0x2b88b336428 <line:479:9>
|   |   |-CallExpr 0x2b88b336588 <line:481:9, col:52> 'int'
|   |   | |-ImplicitCastExpr 0x2b88b336570 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x2b88b336430 <col:9> 'int ()' Function 0x2b88b3228f0 'OPENSSL_assert' 'int ()'
|   |   | `-BinaryOperator 0x2b88b336550 <col:24, col:45> 'int' '>='
|   |   |   |-ImplicitCastExpr 0x2b88b336520 <col:24, col:29> 'int' <LValueToRValue>
|   |   |   | `-MemberExpr 0x2b88b336488 <col:24, col:29> 'int' lvalue ->buf_len 0x2b88b321038
|   |   |   |   `-ImplicitCastExpr 0x2b88b336470 <col:24> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x2b88b336450 <col:24> 'BIO_B64_CTX *' lvalue Var 0x2b88b33a110 'ctx' 'BIO_B64_CTX *'
|   |   |   `-ImplicitCastExpr 0x2b88b336538 <col:40, col:45> 'int' <LValueToRValue>
|   |   |     `-MemberExpr 0x2b88b3364f0 <col:40, col:45> 'int' lvalue ->buf_off 0x2b88b3210a8
|   |   |       `-ImplicitCastExpr 0x2b88b3364d8 <col:40> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x2b88b3364b8 <col:40> 'BIO_B64_CTX *' lvalue Var 0x2b88b33a110 'ctx' 'BIO_B64_CTX *'
|   |   |-BinaryOperator 0x2b88b336708 <line:482:9, col:35> 'long' '='
|   |   | |-DeclRefExpr 0x2b88b3365b0 <col:9> 'long' lvalue Var 0x2b88b33a1a8 'ret' 'long'
|   |   | `-ImplicitCastExpr 0x2b88b3366f0 <col:15, col:35> 'long' <IntegralCast>
|   |   |   `-BinaryOperator 0x2b88b3366d0 <col:15, col:35> 'int' '-'
|   |   |     |-ImplicitCastExpr 0x2b88b3366a0 <col:15, col:20> 'int' <LValueToRValue>
|   |   |     | `-MemberExpr 0x2b88b336608 <col:15, col:20> 'int' lvalue ->buf_len 0x2b88b321038
|   |   |     |   `-ImplicitCastExpr 0x2b88b3365f0 <col:15> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x2b88b3365d0 <col:15> 'BIO_B64_CTX *' lvalue Var 0x2b88b33a110 'ctx' 'BIO_B64_CTX *'
|   |   |     `-ImplicitCastExpr 0x2b88b3366b8 <col:30, col:35> 'int' <LValueToRValue>
|   |   |       `-MemberExpr 0x2b88b336670 <col:30, col:35> 'int' lvalue ->buf_off 0x2b88b3210a8
|   |   |         `-ImplicitCastExpr 0x2b88b336658 <col:30> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |           `-DeclRefExpr 0x2b88b336638 <col:30> 'BIO_B64_CTX *' lvalue Var 0x2b88b33a110 'ctx' 'BIO_B64_CTX *'
|   |   |-BreakStmt 0x2b88b336860 <line:485:9>
|   |   |-LabelStmt 0x2b88b336be8 <line:488:2, line:493:9> 'again'
|   |   | `-WhileStmt 0x2b88b336b80 <line:489:9, line:493:9>
|   |   |   |-BinaryOperator 0x2b88b336968 <line:489:16, col:37> 'int' '!='
|   |   |   | |-ImplicitCastExpr 0x2b88b336938 <col:16, col:21> 'int' <LValueToRValue>
|   |   |   | | `-MemberExpr 0x2b88b3368a0 <col:16, col:21> 'int' lvalue ->buf_len 0x2b88b321038
|   |   |   | |   `-ImplicitCastExpr 0x2b88b336888 <col:16> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   | |     `-DeclRefExpr 0x2b88b336868 <col:16> 'BIO_B64_CTX *' lvalue Var 0x2b88b33a110 'ctx' 'BIO_B64_CTX *'
|   |   |   | `-ImplicitCastExpr 0x2b88b336950 <col:32, col:37> 'int' <LValueToRValue>
|   |   |   |   `-MemberExpr 0x2b88b336908 <col:32, col:37> 'int' lvalue ->buf_off 0x2b88b3210a8
|   |   |   |     `-ImplicitCastExpr 0x2b88b3368f0 <col:32> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   |       `-DeclRefExpr 0x2b88b3368d0 <col:32> 'BIO_B64_CTX *' lvalue Var 0x2b88b33a110 'ctx' 'BIO_B64_CTX *'
|   |   |   `-CompoundStmt 0x2b88b336b68 <col:46, line:493:9>
|   |   |     `-IfStmt 0x2b88b336b50 <line:491:13, line:492:24>
|   |   |       |-BinaryOperator 0x2b88b336ad0 <line:491:17, col:21> 'int' '<'
|   |   |       | |-ImplicitCastExpr 0x2b88b336ab8 <col:17> 'int' <LValueToRValue>
|   |   |       | | `-DeclRefExpr 0x2b88b336a70 <col:17> 'int' lvalue Var 0x2b88b33a280 'i' 'int'
|   |   |       | `-IntegerLiteral 0x2b88b336a90 <col:21> 'int' 0
|   |   |       `-ReturnStmt 0x2b88b336b40 <line:492:17, col:24>
|   |   |         `-ImplicitCastExpr 0x2b88b336b28 <col:24> 'long' <IntegralCast>
|   |   |           `-ImplicitCastExpr 0x2b88b336b10 <col:24> 'int' <LValueToRValue>
|   |   |             `-DeclRefExpr 0x2b88b336af0 <col:24> 'int' lvalue Var 0x2b88b33a280 'i' 'int'
|   |   |-IfStmt 0x2b88b33a5f8 <line:494:9, line:510:9> has_else
|   |   | |-OpaqueValueExpr 0x2b88b33a5e0 <<invalid sloc>> '_Bool'
|   |   | |-CompoundStmt 0x2b88b337088 <line:494:56, line:503:9>
|   |   | | `-IfStmt 0x2b88b337070 <line:495:13, line:502:13>
|   |   | |   |-BinaryOperator 0x2b88b336cc8 <line:495:17, col:33> 'int' '!='
|   |   | |   | |-ImplicitCastExpr 0x2b88b336cb0 <col:17, col:22> 'int' <LValueToRValue>
|   |   | |   | | `-MemberExpr 0x2b88b336c58 <col:17, col:22> 'int' lvalue ->tmp_len 0x2b88b321118
|   |   | |   | |   `-ImplicitCastExpr 0x2b88b336c40 <col:17> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   | |     `-DeclRefExpr 0x2b88b336c20 <col:17> 'BIO_B64_CTX *' lvalue Var 0x2b88b33a110 'ctx' 'BIO_B64_CTX *'
|   |   | |   | `-IntegerLiteral 0x2b88b336c88 <col:33> 'int' 0
|   |   | |   `-CompoundStmt 0x2b88b337048 <col:36, line:502:13>
|   |   | |     |-BinaryOperator 0x2b88b336f60 <line:499:17, col:32> 'int' '='
|   |   | |     | |-MemberExpr 0x2b88b336f08 <col:17, col:22> 'int' lvalue ->buf_off 0x2b88b3210a8
|   |   | |     | | `-ImplicitCastExpr 0x2b88b336ef0 <col:17> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |     | |   `-DeclRefExpr 0x2b88b336ed0 <col:17> 'BIO_B64_CTX *' lvalue Var 0x2b88b33a110 'ctx' 'BIO_B64_CTX *'
|   |   | |     | `-IntegerLiteral 0x2b88b336f38 <col:32> 'int' 0
|   |   | |     |-BinaryOperator 0x2b88b337010 <line:500:17, col:32> 'int' '='
|   |   | |     | |-MemberExpr 0x2b88b336fb8 <col:17, col:22> 'int' lvalue ->tmp_len 0x2b88b321118
|   |   | |     | | `-ImplicitCastExpr 0x2b88b336fa0 <col:17> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |     | |   `-DeclRefExpr 0x2b88b336f80 <col:17> 'BIO_B64_CTX *' lvalue Var 0x2b88b33a110 'ctx' 'BIO_B64_CTX *'
|   |   | |     | `-IntegerLiteral 0x2b88b336fe8 <col:32> 'int' 0
|   |   | |     `-GotoStmt 0x2b88b337030 <line:501:17, col:22> 'again' 0x2b88b336b98
|   |   | `-IfStmt 0x2b88b33a5c8 <line:503:16, line:510:9>
|   |   |   |-OpaqueValueExpr 0x2b88b33a5b0 <<invalid sloc>> '_Bool'
|   |   |   `-CompoundStmt 0x2b88b33a590 <line:504:61, line:510:9>
|   |   |     |-BinaryOperator 0x2b88b337278 <line:505:13, col:28> 'int' '='
|   |   |     | |-MemberExpr 0x2b88b337220 <col:13, col:18> 'int' lvalue ->buf_off 0x2b88b3210a8
|   |   |     | | `-ImplicitCastExpr 0x2b88b337208 <col:13> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |     | |   `-DeclRefExpr 0x2b88b3371e8 <col:13> 'BIO_B64_CTX *' lvalue Var 0x2b88b33a110 'ctx' 'BIO_B64_CTX *'
|   |   |     | `-IntegerLiteral 0x2b88b337250 <col:28> 'int' 0
|   |   |     `-GotoStmt 0x2b88b33a578 <line:509:13, col:18> 'again' 0x2b88b336b98
|   |   |-BreakStmt 0x2b88b33a6c0 <line:513:9>
|   |   |-BreakStmt 0x2b88b33a7a8 <line:519:9>
|   |   |-BreakStmt 0x2b88b33a7b0 <line:522:9>
|   |   |-DefaultStmt 0x2b88b33a860 <line:526:5, col:12>
|   |   | `-NullStmt 0x2b88b33a858 <col:12>
|   |   `-BreakStmt 0x2b88b33a880 <line:528:9>
|   `-ReturnStmt 0x2b88b33a970 <line:530:5, col:12>
|     `-ImplicitCastExpr 0x2b88b33a958 <col:12> 'long' <LValueToRValue>
|       `-DeclRefExpr 0x2b88b33a938 <col:12> 'long' lvalue Var 0x2b88b33a1a8 'ret' 'long'
|-FunctionDecl 0x2b88b33ab80 <line:533:1, line:546:1> line:533:13 invalid b64_callback_ctrl 'long (int *, int, int *)' static
| |-ParmVarDecl 0x2b88b33a9d8 <col:31, col:36> col:36 invalid b 'int *'
| |-ParmVarDecl 0x2b88b33aa58 <col:39, col:43> col:43 used cmd 'int'
| |-ParmVarDecl 0x2b88b33aad8 <col:48, col:61> col:61 invalid fp 'int *'
| `-CompoundStmt 0x2b88b33b0e0 <line:534:1, line:546:1>
|   |-DeclStmt 0x2b88b33ad10 <line:535:5, col:17>
|   | `-VarDecl 0x2b88b33ac68 <col:5, col:16> col:10 used ret 'long' cinit
|   |   `-ImplicitCastExpr 0x2b88b33acf8 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x2b88b33acd0 <col:16> 'int' 1
|   |-IfStmt 0x2b88b33ae38 <line:538:5, line:539:16>
|   | |-OpaqueValueExpr 0x2b88b33ae20 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x2b88b33ae10 <col:9, col:16>
|   |   `-ImplicitCastExpr 0x2b88b33adf8 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x2b88b33add0 <col:16> 'int' 0
|   |-SwitchStmt 0x2b88b33aea0 <line:540:5, line:544:5>
|   | |-ImplicitCastExpr 0x2b88b33ae88 <line:540:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x2b88b33ae50 <col:13> 'int' lvalue ParmVar 0x2b88b33aa58 'cmd' 'int'
|   | `-CompoundStmt 0x2b88b33b058 <col:18, line:544:5>
|   |   |-DefaultStmt 0x2b88b33b030 <line:541:5, col:12>
|   |   | `-NullStmt 0x2b88b33b028 <col:12>
|   |   `-BreakStmt 0x2b88b33b050 <line:543:9>
|   `-ReturnStmt 0x2b88b33b0d0 <line:545:5, col:16>
|     `-ImplicitCastExpr 0x2b88b33b0b8 <col:12, col:16> 'long' <LValueToRValue>
|       `-ParenExpr 0x2b88b33b098 <col:12, col:16> 'long' lvalue
|         `-DeclRefExpr 0x2b88b33b078 <col:13> 'long' lvalue Var 0x2b88b33ac68 'ret' 'long'
|-FunctionDecl 0x2b88b33b248 <line:548:1, line:551:1> line:548:12 invalid b64_puts 'int (int *, const char *)' static
| |-ParmVarDecl 0x2b88b33b128 <col:21, col:26> col:26 invalid b 'int *'
| |-ParmVarDecl 0x2b88b33b1a8 <col:29, col:41> col:41 used str 'const char *'
| `-CompoundStmt 0x2b88b337550 <line:549:1, line:551:1>
`-FunctionDecl 0x2b88b337350 <line:550:30> col:30 implicit used strlen 'unsigned long long (const char *)' extern
  `-ParmVarDecl 0x2b88b3373f0 <<invalid sloc>> <invalid sloc> 'const char *'
