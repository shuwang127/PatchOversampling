TranslationUnitDecl 0x23241076088 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x23241076920 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x23241076620 '__int128'
|-TypedefDecl 0x23241076990 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x23241076640 'unsigned __int128'
|-TypedefDecl 0x23241076cc8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x23241076a80 'struct __NSConstantString_tag'
|   `-Record 0x232410769e8 '__NSConstantString_tag'
|-TypedefDecl 0x23241076d38 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x23241076260 'unsigned long long'
|-TypedefDecl 0x23241076dd0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x23241076d90 'char *'
|   `-BuiltinType 0x23241076120 'char'
|-TypedefDecl 0x23241076e40 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x23241076d90 'char *'
|   `-BuiltinType 0x23241076120 'char'
|-TypedefDecl 0x23241076f00 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x23241076260 'unsigned long long'
|-TypedefDecl 0x23241076f70 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x23241076d90 'char *'
|   `-BuiltinType 0x23241076120 'char'
|-FunctionDecl 0x23242c44440 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x23242c444e0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x23242c44550 <col:21> Implicit
|-FunctionDecl 0x23242c445a8 prev 0x23242c44440 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x23242c442d0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x23242c44698 <col:21> Inherited Implicit
|-TypedefDecl 0x23242c446d8 prev 0x23241076d38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x23241076260 'unsigned long long'
|-TypedefDecl 0x23242c44780 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x23242c44750 'size_t' sugar
|   |-Typedef 0x23242c446d8 'size_t'
|   `-BuiltinType 0x23241076260 'unsigned long long'
|-TypedefDecl 0x23242c447f0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x232410761c0 'long long'
|-TypedefDecl 0x23242c44860 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x232410761c0 'long long'
|-TypedefDecl 0x23242c448d0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x23241076200 'unsigned short'
|-TypedefDecl 0x23242c44940 <line:541:1, col:24> col:24 referenced wint_t 'unsigned short'
| `-BuiltinType 0x23241076200 'unsigned short'
|-TypedefDecl 0x23242c449b0 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x23241076200 'unsigned short'
|-TypedefDecl 0x23242c44a20 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x23241076180 'int'
|-TypedefDecl 0x23242c44a90 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x232410761a0 'long'
|-TypedefDecl 0x23242c44b00 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x232410761c0 'long long'
|-TypedefDecl 0x23242c44b90 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x23242c44b60 '__time64_t' sugar
|   |-Typedef 0x23242c44b00 '__time64_t'
|   `-BuiltinType 0x232410761c0 'long long'
|-FunctionDecl 0x23242c44d08 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x23242c44f28 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x23242c7ac60 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x23242c45068 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x23242c450e0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x23242c45158 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x23242c451d8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x23242c7aa00 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x23242c7ad40 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x23242c7ae00 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x23242c7af70 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x23242c7af20 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x23242c7aec0 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x23242c7ade0 'struct threadlocaleinfostruct'
|       `-Record 0x23242c80a60 'threadlocaleinfostruct'
|-TypedefDecl 0x23242c7b080 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x23242c7b030 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x23242c7afd0 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x23242c7aea0 'struct threadmbcinfostruct'
|       `-Record 0x23242c7ae00 'threadmbcinfostruct'
|-RecordDecl 0x23242c7b0d8 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x23242c7b190 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x23242c7b250 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x23242c7b2e0 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x23242c7b370 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x23242c7b428 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x23242c7b3d0 'struct localeinfo_struct' sugar
|   `-RecordType 0x23242c7b230 'struct localeinfo_struct'
|     `-Record 0x23242c7b190 'localeinfo_struct'
|-TypedefDecl 0x23242c7b500 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x23242c7b4b0 'struct localeinfo_struct *'
|   `-ElaboratedType 0x23242c7b3d0 'struct localeinfo_struct' sugar
|     `-RecordType 0x23242c7b230 'struct localeinfo_struct'
|       `-Record 0x23242c7b190 'localeinfo_struct'
|-RecordDecl 0x23242c7b578 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x23242c7b630 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x23242c7b6a8 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x23242c7b768 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x23242c7b800 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x23242c7b870 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x23242c7b928 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x23242c7b8d0 'struct localerefcount' sugar
|   `-RecordType 0x23242c7b610 'struct localerefcount'
|     `-Record 0x23242c7b578 'localerefcount'
|-RecordDecl 0x23242c80a60 prev 0x23242c7ad40 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x23242c80ae0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x23242c80b58 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x23242c80bc8 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x23242c80c38 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x23242c80ca8 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x23242c80e68 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x23242c80ed8 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x23242c80f48 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x23242c80fb8 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x23242c81028 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x23242c81098 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x23242c810f0 parent 0x23241076088 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x23242c81280 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x23242c812f0 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x23242c81360 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x23242c813d0 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x23242c81470 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x23242c814e0 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x23242c815f0 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x23242c81728 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x23242c817d8 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x23242c81780 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x23242c7ade0 'struct threadlocaleinfostruct'
|     `-Record 0x23242c80a60 'threadlocaleinfostruct'
|-RecordDecl 0x23242c81870 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:63:1, line:72:9> line:63:8 struct _iobuf definition
| |-MaxFieldAlignmentAttr 0x23242c81930 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x23242c819a8 <line:64:9, col:15> col:15 _ptr 'char *'
| |-FieldDecl 0x23242c7fa50 <line:65:9, col:15> col:15 _cnt 'int'
| |-FieldDecl 0x23242c7fac0 <line:66:9, col:15> col:15 _base 'char *'
| |-FieldDecl 0x23242c7fb30 <line:67:9, col:15> col:15 _flag 'int'
| |-FieldDecl 0x23242c7fba0 <line:68:9, col:15> col:15 _file 'int'
| |-FieldDecl 0x23242c7fc10 <line:69:9, col:15> col:15 _charbuf 'int'
| |-FieldDecl 0x23242c7fc80 <line:70:9, col:15> col:15 _bufsiz 'int'
| `-FieldDecl 0x23242c7fcf0 <line:71:9, col:15> col:15 _tmpfname 'char *'
|-TypedefDecl 0x23242c7fda0 <line:73:1, col:23> col:23 referenced FILE 'struct _iobuf':'struct _iobuf'
| `-ElaboratedType 0x23242c7fd50 'struct _iobuf' sugar
|   `-RecordType 0x23242c81910 'struct _iobuf'
|     `-Record 0x23242c81870 '_iobuf'
|-FunctionDecl 0x23242c7ffd8 <line:137:9, col:39> col:24 __iob_func 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|-TypedefDecl 0x23242c800a8 <line:144:1, col:17> col:17 referenced fpos_t 'long long'
| `-BuiltinType 0x232410761c0 'long long'
|-FunctionDecl 0x23242c80288 <line:175:24, col:65> col:36 _filbuf 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x23242c80110 <col:52, col:59> col:59 _File 'FILE *'
|-FunctionDecl 0x23242c80580 <line:176:28, col:82> col:40 _flsbuf 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x23242c80360 <col:53, col:57> col:57 _Ch 'int'
| `-ParmVarDecl 0x23242c803d8 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x23242c80930 <line:178:24, col:121> col:39 _fsopen 'FILE *(const char *, const char *, int) __attribute__((cdecl))':'FILE *(const char *, const char *, int)'
| |-ParmVarDecl 0x23242c80660 <col:54, col:67> col:67 _Filename 'const char *'
| |-ParmVarDecl 0x23242c806e0 <col:85, col:98> col:98 _Mode 'const char *'
| `-ParmVarDecl 0x23242c80760 <col:110, col:114> col:114 _ShFlag 'int'
|-FunctionDecl 0x23242c8dca0 <line:180:9, col:51> col:22 clearerr 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x23242c8db30 <col:39, col:46> col:46 _File 'FILE *'
|-FunctionDecl 0x23242c8ded0 <line:182:28, col:76> col:44 clearerr_s 'errno_t (FILE *) __attribute__((cdecl))':'errno_t (FILE *)'
| `-ParmVarDecl 0x23242c8dd90 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x23242c8e080 <line:184:28, col:67> col:40 fclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x23242c8dfa0 <col:55, col:62> col:62 _File 'FILE *'
|-FunctionDecl 0x23242c8e270 <line:185:28, col:55> col:40 _fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x23242c8e568 <line:187:24, col:94> col:39 _fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x23242c8e340 <col:52, col:56> col:56 _FileHandle 'int'
| `-ParmVarDecl 0x23242c8e3c0 <col:76, col:89> col:89 _Mode 'const char *'
|-FunctionDecl 0x23242c8e720 <line:189:24, col:58> col:36 feof 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x23242c8e640 <col:46, col:53> col:53 _File 'FILE *'
|-FunctionDecl 0x23242c8e8d0 <line:190:24, col:60> col:36 ferror 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x23242c8e7f0 <col:48, col:55> col:55 _File 'FILE *'
|-FunctionDecl 0x23242c8ea80 <line:191:28, col:71> col:40 fflush 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x23242c8e9a0 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x23242c8ac08 <line:192:28, col:66> col:40 fgetc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x23242c8ab28 <col:54, col:61> col:61 _File 'FILE *'
|-FunctionDecl 0x23242c8ad98 <line:193:28, col:54> col:40 _fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x23242c8b100 <line:194:28, col:90> col:40 fgetpos 'int (FILE *, fpos_t *) __attribute__((cdecl))':'int (FILE *, fpos_t *)'
| |-ParmVarDecl 0x23242c8ae60 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x23242c8af58 <col:77, col:86> col:86 _Pos 'fpos_t *'
|-FunctionDecl 0x23242c8b4b8 <line:195:28, col:128> col:43 fgets 'char *(char *, int, FILE *) __attribute__((cdecl))':'char *(char *, int, FILE *)'
| |-ParmVarDecl 0x23242c8b1e0 <col:75, col:82> col:82 _Buf 'char *'
| |-ParmVarDecl 0x23242c8b260 <col:93, col:97> col:97 _MaxCount 'int'
| `-ParmVarDecl 0x23242c8b2d8 <col:116, col:123> col:123 _File 'FILE *'
|-FunctionDecl 0x23242c8b678 <line:197:24, col:61> col:36 _fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x23242c8b598 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x23242c8b940 <line:204:24, col:117> col:39 _tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x23242c8b750 <col:59, col:72> col:72 _DirName 'const char *'
| `-ParmVarDecl 0x23242c8b7d0 <col:93, col:106> col:106 _FilePrefix 'const char *'
|-FunctionDecl 0x23242c87ad0 <line:210:28, col:54> col:40 _flushall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x23242c87ec8 <line:211:72> col:72 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x23242c87f68 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x23242c87fd0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x23242c88048 prev 0x23242c87ec8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:211:134> col:72 fopen 'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x23242c87ca0 <col:85, col:98> col:98 _Filename 'const char *'
| |-ParmVarDecl 0x23242c87d20 <col:116, col:129> col:129 _Mode 'const char *'
| `-DeprecatedAttr 0x23242c880f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23242c88570 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:213:28, col:149> col:44 fopen_s 'errno_t (FILE **, const char *, const char *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *)'
| |-ParmVarDecl 0x23242c882a0 <col:78, col:86> col:86 _File 'FILE **'
| |-ParmVarDecl 0x23242c88320 <col:100, col:113> col:113 _Filename 'const char *'
| `-ParmVarDecl 0x23242c883a0 <col:131, col:144> col:144 _Mode 'const char *'
|-FunctionDecl 0x23242c88890 <line:215:40> col:40 implicit fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x23242c88930 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x23242c88998 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x23242c88a10 <col:40> Implicit printf 2 3
|-FunctionDecl 0x23242c8cb20 prev 0x23242c88890 <col:28, col:125> col:40 fprintf 'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x23242c88650 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x23242c886d0 <col:100, col:113> col:113 _Format 'const char *'
| `-FormatAttr 0x23242c8cc18 <col:40> Inherited printf 2 3
|-FunctionDecl 0x23242c8cde0 <line:217:28, col:127> col:40 fprintf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x23242c8cc60 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x23242c8cce0 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x23242c8d038 <line:219:28, col:80> col:40 fputc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x23242c8cec0 <col:51, col:55> col:55 _Ch 'int'
| `-ParmVarDecl 0x23242c8cf38 <col:68, col:75> col:75 _File 'FILE *'
|-FunctionDecl 0x23242c8d268 <line:220:28, col:62> col:40 _fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x23242c8d118 <col:55, col:59> col:59 _Ch 'int'
|-FunctionDecl 0x23242c8d560 <line:221:28, col:92> col:40 fputs 'int (const char *, FILE *) __attribute__((cdecl))':'int (const char *, FILE *)'
| |-ParmVarDecl 0x23242c8d340 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x23242c8d3b8 <col:80, col:87> col:87 _File 'FILE *'
|-FunctionDecl 0x23242c8d9f8 <line:222:43> col:43 implicit fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x23242c8da98 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x23242c8fb50 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x23242c8fbb8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x23242c8fc20 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x23242c8fca8 prev 0x23242c8d9f8 <col:28, col:171> col:43 fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x23242c8d640 <col:89, col:96> col:96 _DstBuf 'void *'
| |-ParmVarDecl 0x23242c8d6b8 <col:110, col:117> col:117 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23242c8d730 <col:136, col:143> col:143 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x23242c8d7a8 <col:159, col:166> col:166 _File 'FILE *'
|-FunctionDecl 0x23242c901b0 <line:224:28, col:195> col:43 fread_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x23242c8fd98 <col:91, col:98> col:98 _DstBuf 'void *'
| |-ParmVarDecl 0x23242c8fe10 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23242c8fe88 <col:134, col:141> col:141 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23242c8ff00 <col:160, col:167> col:167 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x23242c8ff78 <col:183, col:190> col:190 _File 'FILE *'
|-FunctionDecl 0x23242c90670 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:226:160> col:74 freopen 'FILE *(const char *, const char *, FILE *) __attribute__((cdecl))':'FILE *(const char *, const char *, FILE *)'
| |-ParmVarDecl 0x23242c903a0 <col:89, col:102> col:102 _Filename 'const char *'
| |-ParmVarDecl 0x23242c90420 <col:120, col:133> col:133 _Mode 'const char *'
| |-ParmVarDecl 0x23242c90498 <col:148, col:155> col:155 _File 'FILE *'
| `-DeprecatedAttr 0x23242c90728 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using freopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23242c94c48 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:228:28, col:176> col:44 freopen_s 'errno_t (FILE **, const char *, const char *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *, FILE *)'
| |-ParmVarDecl 0x23242c90870 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x23242c908f0 <col:102, col:115> col:115 _Filename 'const char *'
| |-ParmVarDecl 0x23242c90970 <col:133, col:146> col:146 _Mode 'const char *'
| `-ParmVarDecl 0x23242c909e8 <col:161, col:168> col:168 _OldFile 'FILE *'
|-FunctionDecl 0x23242c94ff0 <line:230:70> col:70 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x23242c95090 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x23242c950f8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x23242c95170 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x23242c951d8 prev 0x23242c94ff0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:230:153> col:70 fscanf 'int (FILE *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x23242c94e28 <col:85, col:92> col:92 _File 'FILE *'
| |-ParmVarDecl 0x23242c94ea8 <col:128, col:141> col:141 _Format 'const char *'
| |-FormatAttr 0x23242c953b8 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x23242c95288 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23242c957f8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:231:201> col:77 _fscanf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x23242c954f8 <col:95, col:102> col:102 _File 'FILE *'
| |-ParmVarDecl 0x23242c95578 <col:148, col:161> col:161 _Format 'const char *'
| |-ParmVarDecl 0x23242c95610 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x23242c958b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23242c90b60 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:235:28, col:127> col:40 fscanf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x23242c959f0 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x23242c95a70 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x23242c90e50 <line:237:28, col:168> col:40 _fscanf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x23242c90c38 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x23242c90cb8 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x23242c90d30 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23242c911b0 <line:239:28, col:94> col:40 fsetpos 'int (FILE *, const fpos_t *) __attribute__((cdecl))':'int (FILE *, const fpos_t *)'
| |-ParmVarDecl 0x23242c90f30 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x23242c91008 <col:75, col:90> col:90 _Pos 'const fpos_t *'
|-FunctionDecl 0x23242c91568 <line:240:28, col:103> col:40 fseek 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x23242c91288 <col:54, col:61> col:61 _File 'FILE *'
| |-ParmVarDecl 0x23242c91308 <col:73, col:78> col:78 _Offset 'long'
| `-ParmVarDecl 0x23242c91388 <col:92, col:96> col:96 _Origin 'int'
|-FunctionDecl 0x23242c917c8 <line:241:24, col:63> col:37 ftell 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x23242c91648 <col:51, col:58> col:58 _File 'FILE *'
|-FunctionDecl 0x23242c95bf8 <line:243:28, col:110> col:40 _fseeki64 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x23242c91898 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x23242c91918 <col:77, col:85> col:85 _Offset 'long long'
| `-ParmVarDecl 0x23242c91998 <col:99, col:103> col:103 _Origin 'int'
|-FunctionDecl 0x23242c95e58 <line:244:24, col:70> col:40 _ftelli64 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x23242c95cd8 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x23242c96318 <line:246:43> col:43 implicit fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x23242c963b8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x23242c96420 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x23242c96488 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x23242c964f0 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x23242c96578 prev 0x23242c96318 <col:28, col:159> col:43 fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x23242c95f60 <col:81, col:94> col:94 _Str 'const void *'
| |-ParmVarDecl 0x23242c95fd8 <col:105, col:112> col:112 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23242c96050 <col:124, col:131> col:131 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x23242c960c8 <col:147, col:154> col:154 _File 'FILE *'
|-FunctionDecl 0x23242c96740 <line:247:24, col:61> col:36 getc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x23242c96660 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x23242c968d0 <line:248:24, col:48> col:36 getchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x23242c96a58 <line:249:24, col:53> col:36 _getmaxstdio 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x23242c93d50 <line:251:9, col:84> col:24 gets_s 'char *(char *, rsize_t) __attribute__((cdecl))':'char *(char *, rsize_t)'
| |-ParmVarDecl 0x23242c96b28 <col:53, col:60> col:60 _Buf 'char *'
| `-ParmVarDecl 0x23242c93ba0 <col:71, col:79> col:79 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x23242c94078 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:254:80 gets 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x23242c93f30 <col:139, col:145> col:145 _Buffer 'char *'
| `-DeprecatedAttr 0x23242c94120 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23242c94340 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:255:16, col:54> col:28 _getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x23242c94260 <col:42, col:49> col:49 _File 'FILE *'
|-FunctionDecl 0x23242c94560 <line:258:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x23242c94418 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x23242c94710 <line:261:28, col:68> col:40 _pclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x23242c94630 <col:56, col:63> col:63 _File 'FILE *'
|-FunctionDecl 0x23242c94960 <line:262:24, col:101> col:39 _popen 'FILE *(const char *, const char *) __attribute__((cdecl))':'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x23242c947e8 <col:53, col:66> col:66 _Command 'const char *'
| `-ParmVarDecl 0x23242c94868 <col:83, col:96> col:96 _Mode 'const char *'
|-FunctionDecl 0x23242c92b80 <line:264:40> col:40 implicit printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x23242c92c20 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x23242c92c90 <col:40> Implicit printf 1 2
|-FunctionDecl 0x23242c92cf8 prev 0x23242c92b80 <col:28, col:102> col:40 printf 'int (const char *, ...)'
| |-ParmVarDecl 0x23242c94a40 <col:77, col:90> col:90 _Format 'const char *'
| `-FormatAttr 0x23242c92de8 <col:40> Inherited printf 1 2
|-FunctionDecl 0x23242c92f18 <line:266:28, col:104> col:40 printf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x23242c92e38 <col:79, col:92> col:92 _Format 'const char *'
|-FunctionDecl 0x23242c93168 <line:268:28, col:79> col:40 putc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x23242c92ff0 <col:50, col:54> col:54 _Ch 'int'
| `-ParmVarDecl 0x23242c93068 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x23242c93328 <line:269:28, col:60> col:40 putchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x23242c93248 <col:53, col:57> col:57 _Ch 'int'
|-FunctionDecl 0x23242c93548 <line:270:28, col:69> col:40 puts 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x23242c93400 <col:52, col:65> col:65 _Str 'const char *'
|-FunctionDecl 0x23242c93798 <line:271:28, col:82> col:40 _putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x23242c93620 <col:51, col:55> col:55 _Word 'int'
| `-ParmVarDecl 0x23242c93698 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x23242c93958 <line:274:9, col:57> col:21 remove 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x23242c93878 <col:35, col:48> col:48 _Filename 'const char *'
|-FunctionDecl 0x23242ce7020 <line:275:24, col:109> col:36 rename 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x23242c93a30 <col:50, col:63> col:63 _OldFilename 'const char *'
| `-ParmVarDecl 0x23242c93ab0 <col:84, col:97> col:97 _NewFilename 'const char *'
|-FunctionDecl 0x23242ce71e0 <line:276:9, col:58> col:21 _unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x23242ce7100 <col:36, col:49> col:49 _Filename 'const char *'
|-FunctionDecl 0x23242ce7470 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:278:89> col:53 unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x23242ce7390 <col:67, col:80> col:80 _Filename 'const char *'
| `-DeprecatedAttr 0x23242ce7518 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _unlink. See online help for details." ""
|-FunctionDecl 0x23242ce7710 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:281:9, col:49> col:22 rewind 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x23242ce7638 <col:37, col:44> col:44 _File 'FILE *'
|-FunctionDecl 0x23242ce78a0 <line:282:28, col:51> col:40 _rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x23242ce7b48 <line:283:69> col:69 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x23242ce7be8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x23242ce7c58 <col:69> Implicit scanf 1 2
|-FunctionDecl 0x23242ce7cc0 prev 0x23242ce7b48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:283:129> col:69 scanf 'int (const char *restrict, ...)'
| |-ParmVarDecl 0x23242ce7a30 <col:104, col:117> col:117 _Format 'const char *'
| |-FormatAttr 0x23242ce7e98 <col:69> Inherited scanf 1 2
| `-DeprecatedAttr 0x23242ce7d68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23242ce1200 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:284:177> col:76 _scanf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x23242ce0fc8 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x23242ce1040 <col:155, col:165> col:165 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x23242ce12b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _scanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23242ce14d8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:288:40, col:116> col:52 scanf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x23242ce13f8 <col:91, col:104> col:104 _Format 'const char *'
|-FunctionDecl 0x23242ce1728 <line:290:40, col:157> col:52 _scanf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x23242ce15b0 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x23242ce1628 <col:135, col:145> col:145 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23242ce1ae8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:292:150> col:55 setbuf 'void (FILE *, char *) __attribute__((cdecl))':'void (FILE *, char *)'
| |-ParmVarDecl 0x23242ce18c0 <col:70, col:77> col:77 _File 'FILE *'
| |-ParmVarDecl 0x23242ce1940 <col:136, col:143> col:143 _Buffer 'char *'
| `-DeprecatedAttr 0x23242ce1b98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using setvbuf instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23242ce1dc0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:293:28, col:66> col:40 _setmaxstdio 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x23242ce1ce0 <col:58, col:62> col:62 _Max 'int'
|-FunctionDecl 0x23242ce80a8 <line:294:28, col:93> col:49 _set_output_format 'unsigned int (unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int)'
| `-ParmVarDecl 0x23242ce7f60 <col:73, col:86> col:86 _Format 'unsigned int'
|-FunctionDecl 0x23242ce8290 <line:295:28, col:72> col:49 _get_output_format 'unsigned int (void) __attribute__((cdecl))':'unsigned int (void)'
|-FunctionDecl 0x23242ce86e0 <line:296:28, col:145> col:40 setvbuf 'int (FILE *, char *, int, size_t) __attribute__((cdecl))':'int (FILE *, char *, int, size_t)'
| |-ParmVarDecl 0x23242ce8358 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x23242ce83d8 <col:99, col:106> col:106 _Buf 'char *'
| |-ParmVarDecl 0x23242ce8458 <col:117, col:121> col:121 _Mode 'int'
| `-ParmVarDecl 0x23242ce84d0 <col:133, col:140> col:140 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x23242ce8b60 <line:297:40, col:213> col:52 _snprintf_s 'int (char *, size_t, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, ...)'
| |-ParmVarDecl 0x23242ce87d0 <col:93, col:100> col:100 _DstBuf 'char *'
| |-ParmVarDecl 0x23242ce8848 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23242ce88c0 <col:140, col:147> col:147 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x23242ce8940 <col:188, col:201> col:201 _Format 'const char *'
|-FunctionDecl 0x23242ce1f00 <line:300:40, col:188> col:52 sprintf_s 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x23242ce8c50 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x23242ce8cc8 <col:112, col:119> col:119 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x23242ce8d48 <col:163, col:176> col:176 _Format 'const char *'
|-FunctionDecl 0x23242ce20c8 <line:303:24, col:101> col:36 _scprintf 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x23242ce1fe8 <col:76, col:89> col:89 _Format 'const char *'
|-FunctionDecl 0x23242ce24a0 <line:304:70> col:70 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x23242ce2540 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x23242ce25a8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x23242ce2620 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x23242ce2688 prev 0x23242ce24a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:304:157> col:70 sscanf 'int (const char *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x23242ce2260 <col:84, col:97> col:97 _Src 'const char *'
| |-ParmVarDecl 0x23242ce22e0 <col:132, col:145> col:145 _Format 'const char *'
| |-FormatAttr 0x23242ce2868 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x23242ce2738 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23242ce2c58 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:305:205> col:77 _sscanf_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x23242ce2978 <col:94, col:107> col:107 _Src 'const char *'
| |-ParmVarDecl 0x23242ce29f8 <col:152, col:165> col:165 _Format 'const char *'
| |-ParmVarDecl 0x23242ce2a70 <col:183, col:193> col:193 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x23242ce2d10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23242ce6040 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:309:40, col:143> col:52 sscanf_s 'int (const char *, const char *, ...) __attribute__((cdecl))':'int (const char *, const char *, ...)'
| |-ParmVarDecl 0x23242ce2e58 <col:68, col:81> col:81 _Src 'const char *'
| `-ParmVarDecl 0x23242ce5f40 <col:118, col:131> col:131 _Format 'const char *'
|-FunctionDecl 0x23242ce6338 <line:311:40, col:184> col:52 _sscanf_s_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x23242ce6120 <col:71, col:84> col:84 _Src 'const char *'
| |-ParmVarDecl 0x23242ce61a0 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x23242ce6218 <col:162, col:172> col:172 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23242ce67c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:312:217> col:76 _snscanf 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x23242ce64e0 <col:121, col:134> col:134 _Src 'const char *'
| |-ParmVarDecl 0x23242ce6558 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23242ce65d8 <col:192, col:205> col:205 _Format 'const char *'
| `-DeprecatedAttr 0x23242ce6880 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23242ce6e50 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:313:259> col:78 _snscanf_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x23242ce6ac0 <col:125, col:138> col:138 _Src 'const char *'
| |-ParmVarDecl 0x23242ce6b38 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23242ce6bb8 <col:206, col:219> col:219 _Format 'const char *'
| |-ParmVarDecl 0x23242ce6c30 <col:237, col:247> col:247 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x23242ce8f70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23242ce92d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:314:40, col:197> col:52 _snscanf_s 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x23242ce90b8 <col:99, col:112> col:112 _Src 'const char *'
| |-ParmVarDecl 0x23242ce9130 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x23242ce91b0 <col:172, col:185> col:185 _Format 'const char *'
|-FunctionDecl 0x23242ce9668 <line:315:40, col:237> col:52 _snscanf_s_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x23242ce93b8 <col:101, col:114> col:114 _Src 'const char *'
| |-ParmVarDecl 0x23242ce9430 <col:125, col:132> col:132 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23242ce94b0 <col:184, col:197> col:197 _Format 'const char *'
| `-ParmVarDecl 0x23242ce9528 <col:215, col:225> col:225 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23242ce98c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:317:86> col:74 tmpfile 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
| `-DeprecatedAttr 0x23242ce9968 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpfile_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23242ce9c20 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:319:28, col:96> col:44 tmpfile_s 'errno_t (FILE **) __attribute__((cdecl))':'errno_t (FILE **)'
| `-ParmVarDecl 0x23242ce9ab0 <col:83, col:91> col:91 _File 'FILE **'
|-FunctionDecl 0x23242ce3f20 <line:320:28, col:106> col:44 tmpnam_s 'errno_t (char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t)'
| |-ParmVarDecl 0x23242ce9cf8 <col:75, col:82> col:82 _Buf 'char *'
| `-ParmVarDecl 0x23242ce9d70 <col:93, col:101> col:101 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x23242ce41a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:323:79 tmpnam 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x23242ce40c0 <col:113, col:119> col:119 _Buffer 'char *'
| `-DeprecatedAttr 0x23242ce4248 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23242ce4508 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:324:28, col:81> col:40 ungetc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x23242ce4390 <col:52, col:56> col:56 _Ch 'int'
| `-ParmVarDecl 0x23242ce4408 <col:69, col:76> col:76 _File 'FILE *'
|-FunctionDecl 0x23242ce4920 <line:325:40> col:40 implicit vfprintf 'int (FILE *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x23242ce49c0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x23242ce4a28 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x23242ce4a90 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x23242ce4b10 <col:40> Implicit printf 2 0
|-FunctionDecl 0x23242ce4b78 prev 0x23242ce4920 <col:28, col:139> col:40 vfprintf 'int (FILE *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x23242ce45e0 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x23242ce4660 <col:101, col:114> col:114 _Format 'const char *'
| |-ParmVarDecl 0x23242ce46d8 <col:123, col:131> col:131 _ArgList 'va_list':'char *'
| `-FormatAttr 0x23242ce4c78 <col:40> Inherited printf 2 0
|-FunctionDecl 0x23242ce9f80 <line:326:40> col:40 implicit vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x23242cea020 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x23242cea088 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x23242cea0f0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x23242cea170 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x23242cea1d8 prev 0x23242ce9f80 <col:28, col:138> col:40 vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x23242ce4cc0 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x23242ce4d40 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x23242ce4db8 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x23242cea2d8 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x23242cea538 <line:328:28, col:141> col:40 vfprintf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x23242cea320 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x23242cea3a0 <col:103, col:116> col:116 _Format 'const char *'
| `-ParmVarDecl 0x23242cea418 <col:125, col:133> col:133 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23242cea830 <line:329:28, col:140> col:40 vfscanf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x23242cea618 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x23242cea698 <col:102, col:115> col:115 _Format 'const char *'
| `-ParmVarDecl 0x23242cea710 <col:124, col:132> col:132 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23242ceab78 <line:331:40> col:40 implicit vprintf 'int (const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x23242ceac18 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x23242ceac80 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x23242ceacf8 <col:40> Implicit printf 1 0
|-FunctionDecl 0x23242cead60 prev 0x23242ceab78 <col:28, col:116> col:40 vprintf 'int (const char *, __builtin_va_list)'
| |-ParmVarDecl 0x23242cea918 <col:78, col:91> col:91 _Format 'const char *'
| |-ParmVarDecl 0x23242cea990 <col:100, col:108> col:108 _ArgList 'va_list':'char *'
| `-FormatAttr 0x23242ceae58 <col:40> Inherited printf 1 0
|-FunctionDecl 0x23242ce5068 <line:332:40> col:40 implicit vscanf 'int (const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x23242ce5108 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x23242ce5170 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x23242ce51e8 <col:40> Implicit scanf 1 0
|-FunctionDecl 0x23242ce5250 prev 0x23242ce5068 <col:28, col:115> col:40 vscanf 'int (const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x23242ceaea8 <col:77, col:90> col:90 _Format 'const char *'
| |-ParmVarDecl 0x23242ce4f30 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
| `-FormatAttr 0x23242ce5348 <col:40> Inherited scanf 1 0
|-FunctionDecl 0x23242ce5510 <line:334:28, col:118> col:40 vprintf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x23242ce5398 <col:80, col:93> col:93 _Format 'const char *'
| `-ParmVarDecl 0x23242ce5410 <col:102, col:110> col:110 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23242ce5768 <line:335:28, col:117> col:40 vscanf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x23242ce55f0 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x23242ce5668 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23242ce5cc8 <line:337:77> col:77 implicit vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x23242ce5d68 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x23242ce5dd0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x23242ce5e38 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x23242ce5ea0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x23242ce2f10 <col:77> Implicit printf 3 0
|-FunctionDecl 0x23242ce2f78 prev 0x23242ce5cc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:337:218> col:77 vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x23242ce5908 <col:111, col:118> col:118 _DstBuf 'char *'
| |-ParmVarDecl 0x23242ce5980 <col:132, col:139> col:139 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23242ce5a00 <col:180, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x23242ce5a78 <col:202, col:210> col:210 _ArgList 'va_list':'char *'
| |-FormatAttr 0x23242ce3168 <col:77> Inherited printf 3 0
| `-DeprecatedAttr 0x23242ce3038 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23242ce35d8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:339:28, col:206> col:40 vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x23242ce31b8 <col:77, col:84> col:84 _DstBuf 'char *'
| |-ParmVarDecl 0x23242ce3230 <col:98, col:105> col:105 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23242ce32a8 <col:120, col:127> col:127 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23242ce3328 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x23242ce33a0 <col:190, col:198> col:198 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23242ce3a18 <line:342:40, col:227> col:52 _vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x23242ce36d0 <col:94, col:101> col:101 _DstBuf 'char *'
| |-ParmVarDecl 0x23242ce3748 <col:115, col:122> col:122 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23242ce37c0 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23242ce3840 <col:189, col:202> col:202 _Format 'const char *'
| `-ParmVarDecl 0x23242ce38b8 <col:211, col:219> col:219 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23242ce3de8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:89 _snprintf 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x23242ce3bd0 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x23242ce3c48 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23242ce3cc8 <col:246, col:260> col:260 _Format 'const char *'
| `-DeprecatedAttr 0x23242ce3ea0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23242cf1460 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:100 _vsnprintf 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x23242cf11b0 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x23242cf1228 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23242cf12a8 <col:246, col:260> col:260 _Format 'const char *'
| |-ParmVarDecl 0x23242cf1320 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x23242cf1520 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23242cf1918 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:349:21, col:183> col:33 vsprintf_s 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x23242cf1668 <col:73, col:80> col:80 _DstBuf 'char *'
| |-ParmVarDecl 0x23242cf16e0 <col:94, col:101> col:101 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23242cf1760 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x23242cf17d8 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23242cf1cd8 <line:351:40, col:149> col:52 vsscanf_s 'int (const char *, const char *, va_list) __attribute__((cdecl))':'int (const char *, const char *, va_list)'
| |-ParmVarDecl 0x23242cf1a08 <col:62, col:75> col:75 _Src 'const char *'
| |-ParmVarDecl 0x23242cf1a88 <col:111, col:124> col:124 _Format 'const char *'
| `-ParmVarDecl 0x23242cf1b00 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23242ced050 <line:356:85> col:85 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x23242ced0f0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x23242ced158 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x23242ced1d0 <col:85> Implicit printf 2 3
|-FunctionDecl 0x23242ced238 prev 0x23242ced050 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:85 sprintf 'int (char *, const char *, ...)'
| |-ParmVarDecl 0x23242cf1e80 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x23242cf1f00 <col:171, col:185> col:185 _Format 'const char *'
| |-FormatAttr 0x23242ced418 <col:85> Inherited printf 2 3
| `-DeprecatedAttr 0x23242ced2e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23242ced840 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> col:94 implicit vsprintf 'int (char *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x23242ced8e0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x23242ced948 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x23242ced9b0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x23242ceda30 <col:94> Implicit printf 2 0
|-FunctionDecl 0x23242ceda98 prev 0x23242ced840 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94 vsprintf 'int (char *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x23242ced528 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x23242ced5a8 <col:171, col:185> col:185 _Format 'const char *'
| |-ParmVarDecl 0x23242ced620 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-FormatAttr 0x23242cedc80 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> Inherited printf 2 0
| `-DeprecatedAttr 0x23242cedb50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23242cedfc0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:357:40> col:40 implicit vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x23242cee060 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x23242cee0c8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x23242cee130 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x23242cee1b0 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x23242cee218 prev 0x23242cedfc0 <col:28, col:138> col:40 vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x23242cedcd0 <col:48, col:61> col:61 _srcBuf 'const char *'
| |-ParmVarDecl 0x23242cedd50 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x23242ceddc8 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x23242cee318 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x23242cee4e0 <line:359:24, col:115> col:36 _vscprintf 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x23242cee368 <col:77, col:90> col:90 _Format 'const char *'
| `-ParmVarDecl 0x23242cee3e0 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23242cee7d8 <line:360:28, col:170> col:40 _snprintf_c 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x23242cee5c0 <col:76, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x23242cee638 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x23242cee6b8 <col:145, col:158> col:158 _Format 'const char *'
|-FunctionDecl 0x23242ceeb70 <line:361:28, col:183> col:40 _vsnprintf_c 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x23242cee8c0 <col:77, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x23242cee938 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23242cee9b8 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x23242ceea30 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23242ceedd8 <line:363:28, col:128> col:40 _fprintf_p 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x23242ceec58 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x23242ceecd8 <col:103, col:116> col:116 _Format 'const char *'
|-FunctionDecl 0x23242ceefd0 <line:364:28, col:105> col:40 _printf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x23242ceeeb8 <col:80, col:93> col:93 _Format 'const char *'
|-FunctionDecl 0x23242cef2c0 <line:365:28, col:168> col:40 _sprintf_p 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x23242cef0a8 <col:77, col:84> col:84 _Dst 'char *'
| |-ParmVarDecl 0x23242cef120 <col:95, col:102> col:102 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x23242cef1a0 <col:143, col:156> col:156 _Format 'const char *'
|-FunctionDecl 0x23242cef5b8 <line:366:28, col:142> col:40 _vfprintf_p 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x23242cef3a0 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x23242cef420 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x23242cef498 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23242cef818 <line:367:28, col:119> col:40 _vprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x23242cef6a0 <col:81, col:94> col:94 _Format 'const char *'
| `-ParmVarDecl 0x23242cef718 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23242cefba8 <line:368:28, col:182> col:40 _vsprintf_p 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x23242cef8f8 <col:78, col:85> col:85 _Dst 'char *'
| |-ParmVarDecl 0x23242cef970 <col:96, col:103> col:103 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23242cef9f0 <col:144, col:157> col:157 _Format 'const char *'
| `-ParmVarDecl 0x23242cefa68 <col:166, col:174> col:174 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23242cefd78 <line:369:24, col:103> col:36 _scprintf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x23242cefc98 <col:78, col:91> col:91 _Format 'const char *'
|-FunctionDecl 0x23242cebfa0 <line:370:24, col:117> col:36 _vscprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x23242cefe50 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x23242cefec8 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23242cec160 <line:371:9, col:61> col:21 _set_printf_count_output 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x23242cec080 <col:51, col:55> col:55 _Value 'int'
|-FunctionDecl 0x23242cec2f0 <line:372:9, col:50> col:21 _get_printf_count_output 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x23242cec538 <line:374:28, col:143> col:40 _printf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x23242cec3c0 <col:90, col:103> col:103 _Format 'const char *'
| `-ParmVarDecl 0x23242cec438 <col:121, col:131> col:131 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23242cec790 <line:375:28, col:145> col:40 _printf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x23242cec618 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x23242cec690 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23242cec9e8 <line:376:28, col:145> col:40 _printf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x23242cec870 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x23242cec8e8 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23242cecd98 <line:377:28, col:157> col:40 _vprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x23242cecac8 <col:91, col:104> col:104 _Format 'const char *'
| |-ParmVarDecl 0x23242cecb40 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x23242cecbb8 <col:141, col:149> col:149 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23242cf2120 <line:378:28, col:159> col:40 _vprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x23242cece80 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x23242cecef8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x23242cf2000 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23242cf2418 <line:379:28, col:159> col:40 _vprintf_s_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x23242cf2208 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x23242cf2280 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x23242cf22f8 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23242cf2710 <line:381:28, col:166> col:40 _fprintf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x23242cf24f8 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x23242cf2578 <col:113, col:126> col:126 _Format 'const char *'
| `-ParmVarDecl 0x23242cf25f0 <col:144, col:154> col:154 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23242cf2a08 <line:382:28, col:168> col:40 _fprintf_p_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x23242cf27f0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x23242cf2870 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x23242cf28e8 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23242cf2d00 <line:383:28, col:168> col:40 _fprintf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x23242cf2ae8 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x23242cf2b68 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x23242cf2be0 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23242ceb0f0 <line:384:28, col:147> col:40 _vfprintf_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x23242cf2de0 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x23242cf2e60 <col:81, col:94> col:94 _Format 'const char *'
| |-ParmVarDecl 0x23242cf2ed8 <col:112, col:122> col:122 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x23242cf2f50 <col:131, col:139> col:139 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23242ceb488 <line:385:28, col:149> col:40 _vfprintf_p_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x23242ceb1d8 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x23242ceb258 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x23242ceb2d0 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x23242ceb348 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23242ceb820 <line:386:28, col:149> col:40 _vfprintf_s_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x23242ceb570 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x23242ceb5f0 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x23242ceb668 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x23242ceb6e0 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23242cebcb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:388:221> col:78 _sprintf_l 'int (char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x23242ceb9d0 <col:112, col:119> col:119 _DstBuf 'char *'
| |-ParmVarDecl 0x23242ceba50 <col:168, col:181> col:181 _Format 'const char *'
| |-ParmVarDecl 0x23242cebac8 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x23242cebd70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23242cfa390 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:389:28, col:211> col:40 _sprintf_p_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x23242cebeb8 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x23242cfa080 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23242cfa100 <col:158, col:171> col:171 _Format 'const char *'
| `-ParmVarDecl 0x23242cfa178 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23242cfa730 <line:390:40, col:221> col:52 _sprintf_s_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x23242cfa480 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x23242cfa4f8 <col:111, col:118> col:118 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23242cfa578 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x23242cfa5f0 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23242cfac80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:391:195> col:79 _vsprintf_l 'int (char *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x23242cfa920 <col:114, col:121> col:121 _DstBuf 'char *'
| |-ParmVarDecl 0x23242cfa9a0 <col:137, col:150> col:150 _Format 'const char *'
| |-ParmVarDecl 0x23242cfaa18 <col:168> col:177 '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x23242cfaa90 <col:179, col:187> col:187 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x23242cfad40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23242cf4258 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:392:28, col:225> col:40 _vsprintf_p_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x23242cfae88 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x23242cfaf00 <col:101, col:108> col:108 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23242cfaf80 <col:159, col:171> col:171 _Format 'const char *'
| |-ParmVarDecl 0x23242cfaff8 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x23242cf4020 <col:209, col:217> col:217 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23242cf4698 <line:393:40, col:235> col:52 _vsprintf_s_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x23242cf4350 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x23242cf43c8 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23242cf4448 <col:169, col:182> col:182 _Format 'const char *'
| |-ParmVarDecl 0x23242cf44c0 <col:200, col:210> col:210 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x23242cf4538 <col:219, col:227> col:227 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23242cf4908 <line:395:28, col:145> col:40 _scprintf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x23242cf4790 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x23242cf4808 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23242cf4b60 <line:396:28, col:147> col:40 _scprintf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x23242cf49e8 <col:94, col:107> col:107 _Format 'const char *'
| `-ParmVarDecl 0x23242cf4a60 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23242cf4e50 <line:397:28, col:159> col:40 _vscprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x23242cf4c40 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x23242cf4cb8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x23242cf4d30 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23242cf3140 <line:398:28, col:161> col:40 _vscprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x23242cf4f38 <col:95, col:108> col:108 _Format 'const char *'
| |-ParmVarDecl 0x23242cf4fb0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x23242cf3020 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23242cf3598 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:400:247> col:79 _snprintf_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x23242cf32e8 <col:115, col:122> col:122 _DstBuf 'char *'
| |-ParmVarDecl 0x23242cf3360 <col:136, col:143> col:143 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23242cf33e0 <col:194, col:207> col:207 _Format 'const char *'
| |-ParmVarDecl 0x23242cf3458 <col:225, col:235> col:235 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x23242cf3658 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23242cf3a50 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:401:28, col:210> col:40 _snprintf_c_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x23242cf37a0 <col:78, col:85> col:85 _DstBuf 'char *'
| |-ParmVarDecl 0x23242cf3818 <col:99, col:106> col:106 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23242cf3898 <col:157, col:170> col:170 _Format 'const char *'
| `-ParmVarDecl 0x23242cf3910 <col:188, col:198> col:198 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23242cf6040 <line:402:40, col:245> col:52 _snprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x23242cf3b40 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x23242cf3bb8 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23242cf3c30 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23242cf3cb0 <col:192, col:205> col:205 _Format 'const char *'
| `-ParmVarDecl 0x23242cf3d28 <col:223, col:233> col:233 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23242cf6580 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:403:262> col:80 _vsnprintf_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x23242cf6238 <col:117, col:124> col:124 _DstBuf 'char *'
| |-ParmVarDecl 0x23242cf62b0 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23242cf6330 <col:196, col:209> col:209 _Format 'const char *'
| |-ParmVarDecl 0x23242cf63a8 <col:227, col:237> col:237 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x23242cf6420 <col:246, col:254> col:254 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x23242cf6648 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23242cf6ac8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:404:28, col:176> col:40 _vsnprintf_c_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x23242cf6798 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x23242cf6810 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23242cf6890 <col:118, col:129> col:130 'const char *'
| |-ParmVarDecl 0x23242cf6908 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x23242cf6980 <col:160, col:168> col:168 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23242cf80c0 <line:405:28, col:245> col:40 _vsnprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x23242cf6bc0 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x23242cf6c38 <col:101, col:108> col:108 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23242cf6cb0 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23242cf6d30 <col:181, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x23242cf6da8 <col:210, col:220> col:220 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x23242cf6e20 <col:229, col:237> col:237 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23242cf8480 <line:415:24, col:128> col:39 _wfsopen 'FILE *(const wchar_t *, const wchar_t *, int) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, int)'
| |-ParmVarDecl 0x23242cf81b8 <col:55, col:71> col:71 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x23242cf8230 <col:89, col:105> col:105 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x23242cf82b0 <col:117, col:121> col:121 _ShFlag 'int'
|-FunctionDecl 0x23242cf86f0 <line:417:28, col:70> col:43 fgetwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x23242cf8580 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x23242cf8908 <line:418:28, col:58> col:43 _fgetwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x23242cf8be8 <line:419:28, col:88> col:43 fputwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x23242cf89d0 <col:55, col:63> col:63 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x23242cf8a48 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x23242cf8e30 <line:420:28, col:70> col:43 _fputwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x23242cf8cc0 <col:59, col:67> col:67 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x23242cfc0a0 <line:421:24, col:65> col:39 getwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x23242cf8f00 <col:53, col:60> col:60 _File 'FILE *'
|-FunctionDecl 0x23242cfc228 <line:422:24, col:52> col:39 getwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x23242cfc460 <line:423:28, col:87> col:43 putwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x23242cfc2f0 <col:54, col:62> col:62 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x23242cfc368 <col:75, col:82> col:82 _File 'FILE *'
|-FunctionDecl 0x23242cfc610 <line:424:28, col:68> col:43 putwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x23242cfc538 <col:57, col:65> col:65 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x23242cfc8b8 <line:425:28, col:88> col:43 ungetwc 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x23242cfc6e0 <col:56, col:63> col:63 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x23242cfc758 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x23242cfcc60 <line:427:28, col:141> col:46 fgetws 'wchar_t *(wchar_t *, int, FILE *) __attribute__((cdecl))':'wchar_t *(wchar_t *, int, FILE *)'
| |-ParmVarDecl 0x23242cfc990 <col:82, col:92> col:92 _Dst 'wchar_t *'
| |-ParmVarDecl 0x23242cfca10 <col:103, col:107> col:107 _SizeInWords 'int'
| `-ParmVarDecl 0x23242cfca88 <col:129, col:136> col:136 _File 'FILE *'
|-FunctionDecl 0x23242cfcf60 <line:428:28, col:96> col:40 fputws 'int (const wchar_t *, FILE *) __attribute__((cdecl))':'int (const wchar_t *, FILE *)'
| |-ParmVarDecl 0x23242cfcd40 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x23242cfcdb8 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x23242cf7208 <line:429:28, col:124> col:46 _getws_s 'wchar_t *(wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, size_t)'
| |-ParmVarDecl 0x23242cfd038 <col:84, col:94> col:94 _Str 'wchar_t *'
| `-ParmVarDecl 0x23242cf7060 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x23242cf7510 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:431:83 _getws 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x23242cf73a0 <col:115, col:124> col:124 _String 'wchar_t *'
| `-DeprecatedAttr 0x23242cf75b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _getws_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23242cf7878 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:432:28, col:74> col:40 _putws 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x23242cf76f8 <col:54, col:70> col:70 _Str 'const wchar_t *'
|-FunctionDecl 0x23242cf7b80 <line:434:28, col:129> col:40 fwprintf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x23242cf7948 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x23242cf79c0 <col:101, col:117> col:117 _Format 'const wchar_t *'
|-FunctionDecl 0x23242cf7dd0 <line:436:28, col:131> col:40 fwprintf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x23242cf7c58 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x23242cf7cd0 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x23242cfb090 <line:438:28, col:106> col:40 wprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x23242cf7ea8 <col:78, col:94> col:94 _Format 'const wchar_t *'
|-FunctionDecl 0x23242cfb240 <line:440:28, col:108> col:40 wprintf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x23242cfb160 <col:80, col:96> col:96 _Format 'const wchar_t *'
|-FunctionDecl 0x23242cfb3f0 <line:442:24, col:105> col:36 _scwprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x23242cfb310 <col:77, col:93> col:93 _Format 'const wchar_t *'
|-FunctionDecl 0x23242cfb788 <line:443:28, col:143> col:40 vfwprintf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x23242cfb4c0 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x23242cfb538 <col:102, col:118> col:118 _Format 'const wchar_t *'
| `-ParmVarDecl 0x23242cfb5b0 <col:127, col:135> col:135 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23242cfba78 <line:444:28, col:142> col:40 vfwscanf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x23242cfb868 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x23242cfb8e0 <col:101, col:117> col:117 _Format 'const wchar_t *'
| `-ParmVarDecl 0x23242cfb958 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23242cfbd68 <line:446:28, col:145> col:40 vfwprintf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x23242cfbb58 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x23242cfbbd0 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x23242cfbc48 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23242cf5030 <line:447:28, col:144> col:40 vfwscanf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x23242cfbe48 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x23242cfbec0 <col:103, col:119> col:119 _Format 'const wchar_t *'
| `-ParmVarDecl 0x23242cfbf38 <col:128, col:136> col:136 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23242cf5330 <line:449:28, col:120> col:40 vwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x23242cf5110 <col:79, col:95> col:95 _Format 'const wchar_t *'
| `-ParmVarDecl 0x23242cf5188 <col:104, col:112> col:112 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23242cf5580 <line:450:28, col:119> col:40 vwscanf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x23242cf5408 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x23242cf5480 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23242cf57d0 <line:452:28, col:122> col:40 vwprintf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x23242cf5658 <col:81, col:97> col:97 _Format 'const wchar_t *'
| `-ParmVarDecl 0x23242cf56d0 <col:106, col:114> col:114 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23242cf5a20 <line:453:28, col:121> col:40 vwscanf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x23242cf58a8 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x23242cf5920 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23242cf5dd8 <line:457:21, col:173> col:33 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x23242cf5af8 <col:73, col:83> col:83 _Dst 'wchar_t *'
| |-ParmVarDecl 0x23242cf5b70 <col:94, col:101> col:101 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x23242cf5be8 <col:145, col:161> col:161 _Format 'const wchar_t *'
|-FunctionDecl 0x23242cff2e0 <line:461:21, col:187> col:33 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x23242cf5eb8 <col:74, col:84> col:84 _Dst 'wchar_t *'
| |-ParmVarDecl 0x23242cf5f30 <col:95, col:102> col:102 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23242cf5fa8 <col:146, col:162> col:162 _Format 'const wchar_t *'
| `-ParmVarDecl 0x23242cff0d0 <col:171, col:179> col:179 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23242cff698 <line:462:40, col:156> col:52 vswscanf_s 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x23242cff3c8 <col:63, col:79> col:79 _Src 'const wchar_t *'
| |-ParmVarDecl 0x23242cff440 <col:115, col:131> col:131 _Format 'const wchar_t *'
| `-ParmVarDecl 0x23242cff4b8 <col:140, col:148> col:148 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23242cff988 <line:466:28, col:145> col:40 vswscanf 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x23242cff778 <col:49, col:65> col:65 _srcBuf 'const wchar_t *'
| |-ParmVarDecl 0x23242cff7f0 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x23242cff868 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23242cffc78 <line:468:28, col:184> col:40 _swprintf_c 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x23242cffa68 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x23242cffae0 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x23242cffb58 <col:156, col:172> col:172 _Format 'const wchar_t *'
|-FunctionDecl 0x23242d00000 <line:469:28, col:198> col:40 _vswprintf_c 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x23242cffd58 <col:82, col:92> col:92 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x23242cffdd0 <col:106, col:113> col:113 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23242cffe48 <col:157, col:173> col:173 _Format 'const wchar_t *'
| `-ParmVarDecl 0x23242cffec0 <col:182, col:190> col:190 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23242cfd460 <line:471:40, col:220> col:52 _snwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x23242cfd0d8 <col:94, col:104> col:104 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x23242cfd150 <col:118, col:125> col:125 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23242cfd1c8 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x23242cfd240 <col:192, col:208> col:208 _Format 'const wchar_t *'
|-FunctionDecl 0x23242cfd968 <line:473:40, col:234> col:52 _vsnwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x23242cfd548 <col:95, col:105> col:105 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x23242cfd5c0 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23242cfd638 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23242cfd6b0 <col:193, col:209> col:209 _Format 'const wchar_t *'
| `-ParmVarDecl 0x23242cfd728 <col:218, col:226> col:226 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23242cfdd28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:89 _snwprintf 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x23242cfdb18 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x23242cfdb90 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23242cfdc08 <col:254, col:271> col:271 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x23242cfdde0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23242cfe2f0 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:101 _vsnwprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x23242cfdfe0 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x23242cfe0c0 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23242cfe138 <col:254, col:271> col:271 _Format 'const wchar_t *'
| |-ParmVarDecl 0x23242cfe1b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x23242cfe3b0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23242cfe668 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:480:28, col:132> col:40 _fwprintf_p 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x23242cfe4f0 <col:60, col:67> col:67 _File 'FILE *'
| `-ParmVarDecl 0x23242cfe568 <col:104, col:120> col:120 _Format 'const wchar_t *'
|-FunctionDecl 0x23242cfe820 <line:481:28, col:109> col:40 _wprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x23242cfe740 <col:81, col:97> col:97 _Format 'const wchar_t *'
|-FunctionDecl 0x23242cfeb00 <line:482:28, col:146> col:40 _vfwprintf_p 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x23242cfe8f0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x23242cfe968 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x23242cfe9e0 <col:130, col:138> col:138 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23242cfed58 <line:483:28, col:123> col:40 _vwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x23242cfebe0 <col:82, col:98> col:98 _Format 'const wchar_t *'
| `-ParmVarDecl 0x23242cfec58 <col:107, col:115> col:115 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23242cc3fc0 <line:484:28, col:178> col:40 _swprintf_p 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x23242cfee30 <col:78, col:88> col:88 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x23242cfeea8 <col:102, col:109> col:109 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x23242cfef20 <col:150, col:166> col:166 _Format 'const wchar_t *'
|-FunctionDecl 0x23242cc4348 <line:485:28, col:192> col:40 _vswprintf_p 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x23242cc40a0 <col:79, col:89> col:89 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x23242cc4118 <col:103, col:110> col:110 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23242cc4190 <col:151, col:167> col:167 _Format 'const wchar_t *'
| `-ParmVarDecl 0x23242cc4208 <col:176, col:184> col:184 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23242cc4510 <line:486:24, col:107> col:36 _scwprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x23242cc4430 <col:79, col:95> col:95 _Format 'const wchar_t *'
|-FunctionDecl 0x23242cc4758 <line:487:24, col:121> col:36 _vscwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x23242cc45e0 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x23242cc4658 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23242cc4a60 <line:489:28, col:147> col:40 _wprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x23242cc4830 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x23242cc48a8 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23242cc4cb0 <line:490:28, col:149> col:40 _wprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x23242cc4b38 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x23242cc4bb0 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23242cc4f00 <line:491:28, col:149> col:40 _wprintf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x23242cc4d88 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x23242cc4e00 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23242cc32a8 <line:492:28, col:161> col:40 _vwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x23242cc2fd8 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x23242cc3050 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x23242cc30c8 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23242cc3598 <line:493:28, col:163> col:40 _vwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x23242cc3388 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x23242cc3400 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x23242cc3478 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23242cc3888 <line:494:28, col:163> col:40 _vwprintf_s_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x23242cc3678 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x23242cc36f0 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x23242cc3768 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23242cc3c48 <line:496:28, col:170> col:40 _fwprintf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x23242cc3968 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x23242cc39e0 <col:114, col:130> col:130 _Format 'const wchar_t *'
| `-ParmVarDecl 0x23242cc3a58 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23242cc4fd0 <line:497:28, col:172> col:40 _fwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x23242cc3d28 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x23242cc3da0 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x23242cc3e18 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23242cc52c0 <line:498:28, col:172> col:40 _fwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x23242cc50b0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x23242cc5128 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x23242cc51a0 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23242cc5710 <line:499:28, col:184> col:40 _vfwprintf_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x23242cc53a0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x23242cc5418 <col:115, col:131> col:131 _Format 'const wchar_t *'
| |-ParmVarDecl 0x23242cc5490 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x23242cc5508 <col:168, col:176> col:176 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23242cc5aa0 <line:500:28, col:186> col:40 _vfwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x23242cc57f8 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x23242cc5870 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x23242cc58e8 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x23242cc5960 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23242cc5e30 <line:501:28, col:186> col:40 _vfwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x23242cc5b88 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x23242cc5c00 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x23242cc5c78 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x23242cc5cf0 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23242cc62f0 <line:503:28, col:218> col:40 _swprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x23242cc5f18 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x23242cc5fe0 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23242cc6058 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x23242cc60d0 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23242cc6680 <line:504:28, col:218> col:40 _swprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x23242cc63d8 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x23242cc6450 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23242cc64c8 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x23242cc6540 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23242cc6a10 <line:505:40, col:228> col:52 _swprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x23242cc6768 <col:91, col:101> col:101 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x23242cc67e0 <col:115, col:122> col:122 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23242cc6858 <col:172, col:188> col:188 _Format 'const wchar_t *'
| `-ParmVarDecl 0x23242cc68d0 <col:206, col:216> col:216 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23242cc6f18 <line:506:28, col:232> col:40 used _vswprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x23242cc6af8 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x23242cc6b70 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23242cc6be8 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x23242cc6c60 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x23242cc6cd8 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23242cc7358 <line:507:28, col:232> col:40 _vswprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x23242cc7018 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x23242cc7090 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23242cc7108 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x23242cc7180 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x23242cc71f8 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23242cc7788 <line:508:40, col:242> col:52 _vswprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x23242cc7448 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x23242cc74c0 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23242cc7538 <col:173, col:189> col:189 _Format 'const wchar_t *'
| |-ParmVarDecl 0x23242cc75b0 <col:207, col:217> col:217 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x23242cc7628 <col:226, col:234> col:234 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23242cc79f0 <line:510:24, col:145> col:36 _scwprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x23242cc7878 <col:89, col:105> col:105 _Format 'const wchar_t *'
| `-ParmVarDecl 0x23242cc78f0 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23242cc7c40 <line:511:24, col:147> col:36 _scwprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x23242cc7ac8 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x23242cc7b40 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23242cc7f28 <line:512:24, col:161> col:36 _vscwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x23242cc7d18 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x23242cc7d90 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x23242cc7e08 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23242cc0318 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:514:255> col:80 _snwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x23242cc0070 <col:117, col:127> col:127 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x23242cc00e8 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23242cc0160 <col:199, col:215> col:215 _Format 'const wchar_t *'
| |-ParmVarDecl 0x23242cc01d8 <col:233, col:243> col:243 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x23242cc03d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23242cc0948 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:515:40, col:252> col:52 _snwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x23242cc0520 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x23242cc0598 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23242cc0610 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23242cc0688 <col:196, col:212> col:212 _Format 'const wchar_t *'
| `-ParmVarDecl 0x23242cc0700 <col:230, col:240> col:240 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23242cc0e80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:516:270> col:81 _vsnwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x23242cc0b40 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x23242cc0bb8 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23242cc0c30 <col:201, col:217> col:217 _Format 'const wchar_t *'
| |-ParmVarDecl 0x23242cc0ca8 <col:235, col:245> col:245 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x23242cc0d20 <col:254, col:262> col:262 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x23242cc8000 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23242cc8610 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:517:40, col:266> col:52 _vsnwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x23242cc8148 <col:93, col:103> col:103 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x23242cc81c0 <col:117, col:124> col:124 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23242cc8238 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23242cc82b0 <col:197, col:213> col:213 _Format 'const wchar_t *'
| |-ParmVarDecl 0x23242cc8328 <col:231, col:241> col:241 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x23242cc83a0 <col:250, col:258> col:258 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23242cc8b10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:110 _swprintf 'int (wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x23242cc88d8 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x23242cc8950 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-DeprecatedAttr 0x23242cc8bc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x23242cc8cd8 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x23242cc9278 <col:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:134 _vswprintf 'int (wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x23242cc8f90 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x23242cc9020 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-ParmVarDecl 0x23242cc9098 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x23242cc9330 <line:275:47, col:63> "This function or variable may be unsafe. Consider using vswprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x23242cc9448 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x23242cc99e8 <col:36, line:1961:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:110 __swprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x23242cc9708 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x23242cc9780 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x23242cc97f8 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-DeprecatedAttr 0x23242cc9aa0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __swprintf_l_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x23242cc9bc0 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x23242cc21b0 <col:36, line:1962:166> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:124 __vswprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x23242cc9e80 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x23242cc9ef8 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x23242cc9f70 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x23242cc1fa0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1962:153, col:161> col:161 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x23242cc2270 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vswprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x23242cc2390 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x23242cc2698 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:36:1, line:44:1> line:36:21 swprintf 'int (wchar_t *, size_t, const wchar_t *, ...)' static inline
| |-ParmVarDecl 0x23242cc24b8 <col:53, col:63> col:63 used _String 'wchar_t *'
| |-ParmVarDecl 0x23242cc2530 <col:72, col:79> col:79 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23242cc25a8 <col:117, col:133> col:133 used _Format 'const wchar_t *'
| `-CompoundStmt 0x23242ccb2d0 <line:37:1, line:44:1>
|   |-DeclStmt 0x23242cc27e0 <line:38:5, col:21>
|   | `-VarDecl 0x23242cc2778 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x23242cc2878 <line:39:5, col:13>
|   | `-VarDecl 0x23242cc2810 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x23242cc2bd0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x23242cc2bb8 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x23242cc2ad0 <col:34> '<builtin fn type>' Function 0x23242cc2968 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x23242cc2b08 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:40:19> 'va_list':'char *' lvalue Var 0x23242cc2778 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x23242cc2b40 <col:29> 'const wchar_t *' lvalue ParmVar 0x23242cc25a8 '_Format' 'const wchar_t *'
|   |-BinaryOperator 0x23242cc2e90 <line:41:5, col:67> 'int' '='
|   | |-DeclRefExpr 0x23242cc2c00 <col:5> 'int' lvalue Var 0x23242cc2810 '_Ret' 'int'
|   | `-CallExpr 0x23242cc2dd0 <col:12, col:67> 'int'
|   |   |-ImplicitCastExpr 0x23242cc2db8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x23242cc2c38 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x23242cc6f18 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x23242cc2e18 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x23242cc2c58 <col:27> 'wchar_t *' lvalue ParmVar 0x23242cc24b8 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x23242cc2e30 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x23242cc2c78 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x23242cc2530 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x23242cc2e48 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x23242cc2c98 <col:44> 'const wchar_t *' lvalue ParmVar 0x23242cc25a8 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x23242cc2e60 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|   |   | `-ParenExpr 0x23242cc2d20 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x23242cc2cf8 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x23242cc2cb8 <col:26> 'int' 0
|   |   `-ImplicitCastExpr 0x23242cc2e78 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:41:59> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x23242cc2d40 <col:59> 'va_list':'char *' lvalue Var 0x23242cc2778 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x23242ccb260 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x23242ccb248 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x23242ccb198 <col:34> '<builtin fn type>' Function 0x23242ccb030 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x23242ccb1d0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:42:17> 'va_list':'char *' lvalue Var 0x23242cc2778 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x23242ccb2c0 <line:43:5, col:12>
|     `-ImplicitCastExpr 0x23242ccb2a8 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x23242ccb288 <col:12> 'int' lvalue Var 0x23242cc2810 '_Ret' 'int'
|-FunctionDecl 0x23242cc2968 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34> col:34 implicit used __builtin_va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x23242cc2a08 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x23242cc2a78 <col:34> Implicit
|-FunctionDecl 0x23242ccb030 <line:27:34> col:34 implicit used __builtin_va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x23242ccb0d0 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x23242ccb140 <col:34> Implicit
|-FunctionDecl 0x23242ccb5c8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:49:1, line:52:1> line:49:31 vswprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)' static inline
| |-ParmVarDecl 0x23242ccb320 <col:64, col:74> col:74 used _String 'wchar_t *'
| |-ParmVarDecl 0x23242ccb398 <col:83, col:90> col:90 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23242ccb410 <col:138, col:154> col:154 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x23242ccb488 <col:163, col:171> col:171 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x23242ccb8b0 <line:50:1, line:52:1>
|   `-ReturnStmt 0x23242ccb8a0 <line:51:5, col:62>
|     `-CallExpr 0x23242ccb7e0 <col:12, col:62> 'int'
|       |-ImplicitCastExpr 0x23242ccb7c8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x23242ccb6a0 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x23242cc6f18 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x23242ccb828 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x23242ccb6c0 <col:27> 'wchar_t *' lvalue ParmVar 0x23242ccb320 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x23242ccb840 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x23242ccb6e0 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x23242ccb398 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x23242ccb858 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x23242ccb700 <col:44> 'const wchar_t *' lvalue ParmVar 0x23242ccb410 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x23242ccb870 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|       | `-ParenExpr 0x23242ccb788 <col:17, col:27> 'void *'
|       |   `-CStyleCastExpr 0x23242ccb760 <col:18, col:26> 'void *' <NullToPointer>
|       |     `-IntegerLiteral 0x23242ccb720 <col:26> 'int' 0
|       `-ImplicitCastExpr 0x23242ccb888 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:51:59> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x23242ccb7a8 <col:59> 'va_list':'char *' lvalue ParmVar 0x23242ccb488 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x23242ccbb50 <line:60:1, line:68:1> line:60:21 _swprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)' static inline
| |-ParmVarDecl 0x23242ccb8d8 <col:56, col:66> col:66 used _String 'wchar_t *'
| |-ParmVarDecl 0x23242ccb950 <col:75, col:82> col:82 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23242ccb9c8 <col:130, col:146> col:146 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x23242ccba40 <col:155, col:165> col:165 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| `-CompoundStmt 0x23242cca0c8 <line:61:1, line:68:1>
|   |-DeclStmt 0x23242ccbca0 <line:62:5, col:21>
|   | `-VarDecl 0x23242ccbc38 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x23242ccbd38 <line:63:5, col:13>
|   | `-VarDecl 0x23242ccbcd0 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x23242ccbde0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x23242ccbdc8 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x23242ccbd50 <col:34> '<builtin fn type>' Function 0x23242cc2968 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x23242ccbd70 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:64:19> 'va_list':'char *' lvalue Var 0x23242ccbc38 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x23242ccbda8 <col:29> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x23242ccba40 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |-BinaryOperator 0x23242ccbfe0 <line:65:5, col:72> 'int' '='
|   | |-DeclRefExpr 0x23242ccbe10 <col:5> 'int' lvalue Var 0x23242ccbcd0 '_Ret' 'int'
|   | `-CallExpr 0x23242ccbf20 <col:12, col:72> 'int'
|   |   |-ImplicitCastExpr 0x23242ccbf08 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x23242ccbe48 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x23242cc6f18 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x23242ccbf68 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x23242ccbe68 <col:27> 'wchar_t *' lvalue ParmVar 0x23242ccb8d8 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x23242ccbf80 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x23242ccbe88 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x23242ccb950 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x23242ccbf98 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x23242ccbea8 <col:44> 'const wchar_t *' lvalue ParmVar 0x23242ccb9c8 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x23242ccbfb0 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x23242ccbec8 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x23242ccba40 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |   `-ImplicitCastExpr 0x23242ccbfc8 <col:64> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x23242ccbee8 <col:64> 'va_list':'char *' lvalue Var 0x23242ccbc38 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x23242cca058 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x23242cca040 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x23242ccc000 <col:34> '<builtin fn type>' Function 0x23242ccb030 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x23242cca020 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:66:17> 'va_list':'char *' lvalue Var 0x23242ccbc38 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x23242cca0b8 <line:67:5, col:12>
|     `-ImplicitCastExpr 0x23242cca0a0 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x23242cca080 <col:12> 'int' lvalue Var 0x23242ccbcd0 '_Ret' 'int'
|-FunctionDecl 0x23242cca458 <line:73:1, line:76:1> line:73:31 _vswprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' static inline
| |-ParmVarDecl 0x23242cca118 <col:67, col:77> col:77 used _String 'wchar_t *'
| |-ParmVarDecl 0x23242cca190 <col:86, col:93> col:93 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23242cca208 <col:141, col:157> col:157 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x23242cca280 <col:166, col:176> col:176 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x23242cca2f8 <col:187, col:195> col:195 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x23242cca6e0 <line:74:1, line:76:1>
|   `-ReturnStmt 0x23242cca6d0 <line:75:5, col:67>
|     `-CallExpr 0x23242cca610 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x23242cca5f8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x23242cca538 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x23242cc6f18 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x23242cca658 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x23242cca558 <col:27> 'wchar_t *' lvalue ParmVar 0x23242cca118 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x23242cca670 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x23242cca578 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x23242cca190 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x23242cca688 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x23242cca598 <col:44> 'const wchar_t *' lvalue ParmVar 0x23242cca208 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x23242cca6a0 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|       | `-DeclRefExpr 0x23242cca5b8 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x23242cca280 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|       `-ImplicitCastExpr 0x23242cca6b8 <col:64> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x23242cca5d8 <col:64> 'va_list':'char *' lvalue ParmVar 0x23242cca2f8 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x23242cca928 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:555:24, col:129> col:42 _wtempnam 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x23242cca708 <col:63, col:79> col:79 _Directory 'const wchar_t *'
| `-ParmVarDecl 0x23242cca780 <col:102, col:118> col:118 _FilePrefix 'const wchar_t *'
|-FunctionDecl 0x23242ccab78 <line:561:24, col:119> col:36 _vscwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x23242ccaa00 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x23242ccaa78 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23242ccae60 <line:562:24, col:159> col:36 _vscwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x23242ccac50 <col:90, col:106> col:106 _Format 'const wchar_t *'
| |-ParmVarDecl 0x23242ccacc8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x23242ccad40 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23242ccd1c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:563:158> col:71 fwscanf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x23242ccd050 <col:87, col:94> col:94 _File 'FILE *'
| |-ParmVarDecl 0x23242ccd0c8 <col:130, col:146> col:146 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x23242ccd278 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23242ccd688 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:564:206> col:78 _fwscanf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x23242ccd478 <col:97, col:104> col:104 _File 'FILE *'
| |-ParmVarDecl 0x23242ccd4f0 <col:150, col:166> col:166 _Format 'const wchar_t *'
| |-ParmVarDecl 0x23242ccd568 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x23242ccd740 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23242ccd9f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:568:28, col:131> col:40 fwscanf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x23242ccd880 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x23242ccd8f8 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x23242ccdce0 <line:570:28, col:172> col:40 _fwscanf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x23242ccdad0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x23242ccdb48 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x23242ccdbc0 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23242cce0d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:571:165> col:71 swscanf 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x23242ccde80 <col:86, col:102> col:102 _Src 'const wchar_t *'
| |-ParmVarDecl 0x23242ccdef8 <col:137, col:153> col:153 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x23242cce180 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using swscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23242cce658 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:572:213> col:78 _swscanf_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x23242cce380 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x23242cce3f8 <col:157, col:173> col:173 _Format 'const wchar_t *'
| |-ParmVarDecl 0x23242cce470 <col:191, col:201> col:201 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x23242cce710 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23242cce9c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:574:40, col:149> col:52 swscanf_s 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x23242cce850 <col:69, col:84> col:84 _Src 'const wchar_t *'
| `-ParmVarDecl 0x23242cce8c8 <col:121, col:137> col:137 _Format 'const wchar_t *'
|-FunctionDecl 0x23242ccecb0 <line:576:40, col:191> col:52 _swscanf_s_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x23242cceaa0 <col:72, col:88> col:88 _Src 'const wchar_t *'
| |-ParmVarDecl 0x23242cceb18 <col:135, col:151> col:151 _Format 'const wchar_t *'
| `-ParmVarDecl 0x23242cceb90 <col:169, col:179> col:179 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23242cd2188 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:577:219> col:77 _snwscanf 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x23242ccee50 <col:117, col:133> col:133 _Src 'const wchar_t *'
| |-ParmVarDecl 0x23242cceec8 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23242ccef40 <col:191, col:207> col:207 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x23242cd2240 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23242cd27c0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:578:261> col:79 _snwscanf_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x23242cd2440 <col:121, col:137> col:137 _Src 'const wchar_t *'
| |-ParmVarDecl 0x23242cd24b8 <col:148, col:155> col:155 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23242cd2530 <col:205, col:221> col:221 _Format 'const wchar_t *'
| |-ParmVarDecl 0x23242cd25a8 <col:239, col:249> col:249 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x23242cd2880 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23242cd2bd0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:579:40, col:198> col:52 _snwscanf_s 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x23242cd29c0 <col:94, col:110> col:110 _Src 'const wchar_t *'
| |-ParmVarDecl 0x23242cd2a38 <col:121, col:128> col:128 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x23242cd2ab0 <col:170, col:186> col:186 _Format 'const wchar_t *'
|-FunctionDecl 0x23242cd2f58 <line:580:40, col:238> col:52 _snwscanf_s_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x23242cd2cb0 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x23242cd2d28 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23242cd2da0 <col:182, col:198> col:198 _Format 'const wchar_t *'
| `-ParmVarDecl 0x23242cd2e18 <col:216, col:226> col:226 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23242cd3260 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:581:134> col:70 wscanf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| |-ParmVarDecl 0x23242cd3180 <col:106, col:122> col:122 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x23242cd3308 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23242cd3680 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:582:182> col:77 _wscanf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x23242cd3508 <col:126, col:142> col:142 _Format 'const wchar_t *'
| |-ParmVarDecl 0x23242cd3580 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x23242cd3730 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23242cd3950 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:584:40, col:120> col:52 wscanf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x23242cd3870 <col:92, col:108> col:108 _Format 'const wchar_t *'
|-FunctionDecl 0x23242cd3b98 <line:586:40, col:161> col:52 _wscanf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x23242cd3a20 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x23242cd3a98 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23242cd3e98 <line:589:24, col:99> col:39 _wfdopen 'FILE *(int, const wchar_t *) __attribute__((cdecl))':'FILE *(int, const wchar_t *)'
| |-ParmVarDecl 0x23242cd3c78 <col:53, col:57> col:57 _FileHandle 'int'
| `-ParmVarDecl 0x23242cd3cf0 <col:78, col:94> col:94 _Mode 'const wchar_t *'
|-FunctionDecl 0x23242cd0228 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:590:144> col:74 _wfopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x23242cd4030 <col:89, col:105> col:105 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x23242cd0080 <col:123, col:139> col:139 _Mode 'const wchar_t *'
| `-DeprecatedAttr 0x23242cd02d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23242cd06e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:591:28, col:157> col:44 _wfopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x23242cd0420 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x23242cd0498 <col:102, col:118> col:118 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x23242cd0510 <col:136, col:152> col:152 _Mode 'const wchar_t *'
|-FunctionDecl 0x23242cd0b40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:592:173> col:76 _wfreopen 'FILE *(const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x23242cd0880 <col:93, col:109> col:109 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x23242cd08f8 <col:127, col:143> col:143 _Mode 'const wchar_t *'
| |-ParmVarDecl 0x23242cd0970 <col:158, col:165> col:165 _OldFile 'FILE *'
| `-DeprecatedAttr 0x23242cd0bf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfreopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23242ccc088 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:593:28, col:184> col:44 _wfreopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x23242cd0d40 <col:82, col:90> col:90 _File 'FILE **'
| |-ParmVarDecl 0x23242cd0db8 <col:104, col:120> col:120 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x23242cd0e30 <col:138, col:154> col:154 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x23242cd0ea8 <col:169, col:176> col:176 _OldFile 'FILE *'
|-FunctionDecl 0x23242ccc2e0 <line:597:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x23242ccc170 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x23242ccc520 <line:600:24, col:107> col:39 _wpopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x23242ccc3b0 <col:54, col:69> col:69 _Command 'const wchar_t *'
| `-ParmVarDecl 0x23242ccc428 <col:86, col:102> col:102 _Mode 'const wchar_t *'
|-FunctionDecl 0x23242ccc6d8 <line:602:9, col:62> col:21 _wremove 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x23242ccc5f8 <col:37, col:53> col:53 _Filename 'const wchar_t *'
|-FunctionDecl 0x23242ccc9c8 <line:603:28, col:127> col:44 _wtmpnam_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x23242ccc7a8 <col:84, col:94> col:94 _DstBuf 'wchar_t *'
| `-ParmVarDecl 0x23242ccc820 <col:108, col:115> col:115 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x23242cccc38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:605:82 _wtmpnam 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x23242cccb60 <col:118, col:127> col:127 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x23242cccce0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wtmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23242cccef8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:607:28, col:78> col:43 _fgetwc_nolock 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x23242ccce20 <col:66, col:73> col:73 _File 'FILE *'
|-FunctionDecl 0x23242cd51c8 <line:608:28, col:96> col:43 _fputwc_nolock 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x23242cccfc8 <col:63, col:71> col:71 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x23242cd50d0 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x23242cd5410 <line:609:28, col:96> col:43 _ungetwc_nolock 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x23242cd52a0 <col:64, col:71> col:71 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x23242cd5318 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x23242cd55c0 <line:670:9, col:53> col:22 _lock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x23242cd54e8 <col:41, col:48> col:48 _File 'FILE *'
|-FunctionDecl 0x23242cd5768 <line:671:9, col:55> col:22 _unlock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x23242cd5690 <col:43, col:50> col:50 _File 'FILE *'
|-FunctionDecl 0x23242cd5918 <line:673:28, col:75> col:40 _fclose_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x23242cd5838 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x23242cd5ac8 <line:674:28, col:79> col:40 _fflush_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x23242cd59e8 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x23242cd5e40 <line:675:28, col:179> col:43 _fread_nolock 'size_t (void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x23242cd5ba0 <col:97, col:104> col:104 _DstBuf 'void *'
| |-ParmVarDecl 0x23242cd5c18 <col:118, col:125> col:125 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23242cd5c90 <col:144, col:151> col:151 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x23242cd5d08 <col:167, col:174> col:174 _File 'FILE *'
|-FunctionDecl 0x23242cd72c0 <line:676:28, col:203> col:43 _fread_nolock_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x23242cd5f30 <col:99, col:106> col:106 _DstBuf 'void *'
| |-ParmVarDecl 0x23242cd5fa8 <col:120, col:127> col:127 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23242cd6020 <col:142, col:149> col:149 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23242cd70f0 <col:168, col:175> col:175 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x23242cd7168 <col:191, col:198> col:198 _File 'FILE *'
|-FunctionDecl 0x23242cd75d0 <line:677:28, col:111> col:40 _fseek_nolock 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x23242cd73b0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x23242cd7430 <col:81, col:86> col:86 _Offset 'long'
| `-ParmVarDecl 0x23242cd74b0 <col:100, col:104> col:104 _Origin 'int'
|-FunctionDecl 0x23242cd7790 <line:678:24, col:71> col:37 _ftell_nolock 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x23242cd76b0 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x23242cd7a80 <line:679:28, col:117> col:40 _fseeki64_nolock 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x23242cd7860 <col:65, col:72> col:72 _File 'FILE *'
| |-ParmVarDecl 0x23242cd78e0 <col:84, col:92> col:92 _Offset 'long long'
| `-ParmVarDecl 0x23242cd7960 <col:106, col:110> col:110 _Origin 'int'
|-FunctionDecl 0x23242cd7c40 <line:680:24, col:77> col:40 _ftelli64_nolock 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x23242cd7b60 <col:65, col:72> col:72 _File 'FILE *'
|-FunctionDecl 0x23242cd7fb8 <line:681:28, col:170> col:43 _fwrite_nolock 'size_t (const void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (const void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x23242cd7d18 <col:89, col:102> col:102 _DstBuf 'const void *'
| |-ParmVarDecl 0x23242cd7d90 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23242cd7e08 <col:135, col:142> col:142 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x23242cd7e80 <col:158, col:165> col:165 _File 'FILE *'
|-FunctionDecl 0x23242cd4238 <line:682:28, col:89> col:40 _ungetc_nolock 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x23242cd40c0 <col:60, col:64> col:64 _Ch 'int'
| `-ParmVarDecl 0x23242cd4138 <col:77, col:84> col:84 _File 'FILE *'
|-FunctionDecl 0x23242cd4570 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:709:136> col:57 tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x23242cd43f0 <col:76, col:89> col:89 _Directory 'const char *'
| |-ParmVarDecl 0x23242cd4470 <col:112, col:125> col:125 _FilePrefix 'const char *'
| `-DeprecatedAttr 0x23242cd4620 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tempnam. See online help for details." ""
|-FunctionDecl 0x23242cd48d8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:715:89> col:75 fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x23242cd4978 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcloseall. See online help for details." ""
|-FunctionDecl 0x23242cd4cb8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:716:127> col:71 fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x23242cd4b40 <col:83, col:87> col:87 _FileHandle 'int'
| |-ParmVarDecl 0x23242cd4bc0 <col:107, col:120> col:120 _Format 'const char *'
| `-DeprecatedAttr 0x23242cd4d68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fdopen. See online help for details." ""
|-FunctionDecl 0x23242cdb130 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:717:87> col:74 fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x23242cdb1d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fgetchar. See online help for details." ""
|-FunctionDecl 0x23242cdb470 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:718:92> col:68 fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x23242cdb390 <col:80, col:87> col:87 _File 'FILE *'
| `-DeprecatedAttr 0x23242cdb518 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fileno. See online help for details." ""
|-FunctionDecl 0x23242cdb798 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:719:87> col:74 flushall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x23242cdb838 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _flushall. See online help for details." ""
|-FunctionDecl 0x23242cdbae0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:720:95> col:74 fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| |-ParmVarDecl 0x23242cdba00 <col:88, col:92> col:92 _Ch 'int'
| `-DeprecatedAttr 0x23242cdbb88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fputchar. See online help for details." ""
|-FunctionDecl 0x23242cdbe68 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:721:91> col:66 getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x23242cdbd88 <col:79, col:86> col:86 _File 'FILE *'
| `-DeprecatedAttr 0x23242cdbf10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _getw. See online help for details." ""
|-FunctionDecl 0x23242cda298 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:722:109> col:70 putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x23242cda120 <col:80, col:84> col:84 _Ch 'int'
| |-ParmVarDecl 0x23242cda198 <col:97, col:104> col:104 _File 'FILE *'
| `-DeprecatedAttr 0x23242cda348 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putw. See online help for details." ""
|-FunctionDecl 0x23242cda608 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:723:77> col:67 rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x23242cda6a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _rmtmp. See online help for details." ""
|-FunctionDecl 0x23242cda8e0 <D:\Microsoft Visual Studio 12.0\VC\include\errno.h:31:9, col:41> col:30 _errno 'int *(void) __attribute__((cdecl))':'int *(void)' extern
|-FunctionDecl 0x23242cdaaf0 <line:34:1, col:43> col:17 _set_errno 'errno_t (int) __attribute__((cdecl))':'errno_t (int)'
| `-ParmVarDecl 0x23242cda9b0 <col:33, col:37> col:37 _Value 'int'
|-FunctionDecl 0x23242cdad40 <line:35:1, col:46> col:17 _get_errno 'errno_t (int *) __attribute__((cdecl))':'errno_t (int *)'
| `-ParmVarDecl 0x23242cdabc8 <col:34, col:40> col:40 _Value 'int *'
|-FunctionDecl 0x23242cdb000 <.//openssl//file_jk/before\crypto\evp\bio_enc.c:17:1, col:54> col:12 invalid enc_write 'int (int *, const char *, int)' static
| |-ParmVarDecl 0x23242cdae18 <col:22, col:27> col:27 invalid h 'int *'
| |-ParmVarDecl 0x23242cdae98 <col:30, col:42> col:42 buf 'const char *'
| `-ParmVarDecl 0x23242cdaf18 <col:47, col:51> col:51 num 'int'
|-FunctionDecl 0x23242d062d0 <line:18:1, col:48> col:12 invalid enc_read 'int (int *, char *, int)' static
| |-ParmVarDecl 0x23242d060e0 <col:21, col:26> col:26 invalid h 'int *'
| |-ParmVarDecl 0x23242d06160 <col:29, col:35> col:35 buf 'char *'
| `-ParmVarDecl 0x23242d061e0 <col:40, col:44> col:44 size 'int'
|-FunctionDecl 0x23242d06620 <line:25:1, col:60> col:13 invalid enc_ctrl 'long (int *, int, long, void *)' static
| |-ParmVarDecl 0x23242d063a0 <col:22, col:27> col:27 invalid h 'int *'
| |-ParmVarDecl 0x23242d06420 <col:30, col:34> col:34 cmd 'int'
| |-ParmVarDecl 0x23242d064a0 <col:39, col:44> col:44 arg1 'long'
| `-ParmVarDecl 0x23242d06520 <col:50, col:56> col:56 arg2 'void *'
|-FunctionDecl 0x23242d06790 <line:26:1, col:26> col:12 invalid enc_new 'int (int *)' static
| `-ParmVarDecl 0x23242d066f8 <col:20, col:25> col:25 invalid h 'int *'
|-FunctionDecl 0x23242d068e8 <line:27:1, col:30> col:12 invalid enc_free 'int (int *)' static
| `-ParmVarDecl 0x23242d06850 <col:21, col:26> col:26 invalid data 'int *'
|-FunctionDecl 0x23242d06b90 <line:28:1, col:64> col:13 invalid enc_callback_ctrl 'long (int *, int, int *)' static
| |-ParmVarDecl 0x23242d069a8 <col:31, col:36> col:36 invalid h 'int *'
| |-ParmVarDecl 0x23242d06a28 <col:39, col:43> col:43 cmd 'int'
| `-ParmVarDecl 0x23242d06aa8 <col:48, col:61> col:61 invalid fps 'int *'
|-RecordDecl 0x23242d06c48 <line:33:9, line:46:1> line:33:16 invalid struct enc_struct definition
| |-FieldDecl 0x23242d06d18 <line:34:5, col:9> col:9 referenced buf_len 'int'
| |-FieldDecl 0x23242d06d88 <line:35:5, col:9> col:9 referenced buf_off 'int'
| |-FieldDecl 0x23242d06df8 <line:36:5, col:9> col:9 referenced cont 'int'
| |-FieldDecl 0x23242d06e68 <line:37:5, col:9> col:9 referenced finished 'int'
| |-FieldDecl 0x23242d06ed8 <line:38:5, col:9> col:9 referenced ok 'int'
| |-FieldDecl 0x23242d06f48 <line:39:5, col:21> col:21 invalid cipher 'int *'
| |-FieldDecl 0x23242d06fe0 <line:40:5, col:20> col:20 referenced read_start 'unsigned char *'
| |-FieldDecl 0x23242d07050 <col:5, col:33> col:33 referenced read_end 'unsigned char *'
| `-FieldDecl 0x23242d081c8 <line:45:5, col:19> col:19 invalid buf 'unsigned char'
|-TypedefDecl 0x23242d08278 <line:33:1, line:46:3> col:3 referenced BIO_ENC_CTX 'struct enc_struct':'struct enc_struct'
| `-ElaboratedType 0x23242d08220 'struct enc_struct' sugar
|   `-RecordType 0x23242d06ce0 'struct enc_struct'
|     `-Record 0x23242d06c48 'enc_struct'
|-VarDecl 0x23242d08300 <line:48:1, col:25> col:25 invalid methods_enc 'const int' static
|-FunctionDecl 0x23242d085a0 <line:61:1, line:64:1> line:61:19 invalid BIO_f_cipher 'const int *(void)'
| `-CompoundStmt 0x23242d08658 <line:62:1, line:64:1>
|-FunctionDecl 0x23242d08718 <line:66:1, line:86:1> line:66:12 invalid enc_new 'int (int *)' static
| |-ParmVarDecl 0x23242d08680 <col:20, col:25> col:25 invalid bi 'int *'
| `-CompoundStmt 0x23242d0d6d0 <line:67:1, line:86:1>
|   |-DeclStmt 0x23242d088d0 <line:68:5, col:21>
|   | `-VarDecl 0x23242d08868 <col:5, col:18> col:18 used ctx 'BIO_ENC_CTX *'
|   |-BinaryOperator 0x23242d08b70 <line:70:5, col:38> 'BIO_ENC_CTX *' '='
|   | |-DeclRefExpr 0x23242d088e8 <col:5> 'BIO_ENC_CTX *' lvalue Var 0x23242d08868 'ctx' 'BIO_ENC_CTX *'
|   | `-ImplicitCastExpr 0x23242d08b58 <col:11, col:38> 'BIO_ENC_CTX *' <IntegralToPointer>
|   |   `-CallExpr 0x23242d08b30 <col:11, col:38> 'int'
|   |     |-ImplicitCastExpr 0x23242d08b18 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x23242d08a38 <col:11> 'int ()' Function 0x23242d08970 'OPENSSL_zalloc' 'int ()'
|   |     `-UnaryExprOrTypeTraitExpr 0x23242d08ac8 <col:26, col:37> 'unsigned long long' sizeof
|   |       `-ParenExpr 0x23242d08aa8 <col:32, col:37> 'BIO_ENC_CTX':'struct enc_struct' lvalue
|   |         `-UnaryOperator 0x23242d08a90 <col:33, col:34> 'BIO_ENC_CTX':'struct enc_struct' lvalue prefix '*' cannot overflow
|   |           `-ImplicitCastExpr 0x23242d08a78 <col:34> 'BIO_ENC_CTX *' <LValueToRValue>
|   |             `-DeclRefExpr 0x23242d08a58 <col:34> 'BIO_ENC_CTX *' lvalue Var 0x23242d08868 'ctx' 'BIO_ENC_CTX *' non_odr_use_unevaluated
|   |-IfStmt 0x23242d08cc0 <line:71:5, line:72:16>
|   | |-BinaryOperator 0x23242d08c68 <line:71:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x23242d08c38 <.//openssl//file_jk/before\crypto\evp\bio_enc.c:71:9> 'BIO_ENC_CTX *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x23242d08b90 <col:9> 'BIO_ENC_CTX *' lvalue Var 0x23242d08868 'ctx' 'BIO_ENC_CTX *'
|   | | `-ImplicitCastExpr 0x23242d08c50 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'BIO_ENC_CTX *' <BitCast>
|   | |   `-ParenExpr 0x23242d08c18 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x23242d08bf0 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x23242d08bb0 <col:26> 'int' 0
|   | `-ReturnStmt 0x23242d08cb0 <.//openssl//file_jk/before\crypto\evp\bio_enc.c:72:9, col:16>
|   |   `-IntegerLiteral 0x23242d08c88 <col:16> 'int' 0
|   |-IfStmt 0x23242d0d168 <line:75:5, line:78:5>
|   | |-OpaqueValueExpr 0x23242d0d150 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x23242d090d8 <line:75:30, line:78:5>
|   |   |-CallExpr 0x23242d09060 <line:76:9, col:25> 'int'
|   |   | |-ImplicitCastExpr 0x23242d09048 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x23242d09008 <col:9> 'int ()' Function 0x23242d08f40 'OPENSSL_free' 'int ()'
|   |   | `-ImplicitCastExpr 0x23242d09088 <col:22> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x23242d09028 <col:22> 'BIO_ENC_CTX *' lvalue Var 0x23242d08868 'ctx' 'BIO_ENC_CTX *'
|   |   `-ReturnStmt 0x23242d090c8 <line:77:9, col:16>
|   |     `-IntegerLiteral 0x23242d090a0 <col:16> 'int' 0
|   |-BinaryOperator 0x23242d0d210 <line:79:5, col:17> 'int' '='
|   | |-MemberExpr 0x23242d0d1b8 <col:5, col:10> 'int' lvalue ->cont 0x23242d06df8
|   | | `-ImplicitCastExpr 0x23242d0d1a0 <col:5> 'BIO_ENC_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x23242d0d180 <col:5> 'BIO_ENC_CTX *' lvalue Var 0x23242d08868 'ctx' 'BIO_ENC_CTX *'
|   | `-IntegerLiteral 0x23242d0d1e8 <col:17> 'int' 1
|   |-BinaryOperator 0x23242d0d2c0 <line:80:5, col:15> 'int' '='
|   | |-MemberExpr 0x23242d0d268 <col:5, col:10> 'int' lvalue ->ok 0x23242d06ed8
|   | | `-ImplicitCastExpr 0x23242d0d250 <col:5> 'BIO_ENC_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x23242d0d230 <col:5> 'BIO_ENC_CTX *' lvalue Var 0x23242d08868 'ctx' 'BIO_ENC_CTX *'
|   | `-IntegerLiteral 0x23242d0d298 <col:15> 'int' 1
|   `-ReturnStmt 0x23242d0d6c0 <line:85:5, col:12>
|     `-IntegerLiteral 0x23242d0d698 <col:12> 'int' 1
|-FunctionDecl 0x23242d0d7c8 <line:88:1, line:105:1> line:88:12 invalid enc_free 'int (int *)' static
| |-ParmVarDecl 0x23242d0d730 <col:21, col:26> col:26 invalid a 'int *'
| `-CompoundStmt 0x23242d0e0c8 <line:89:1, line:105:1>
|   |-DeclStmt 0x23242d0d900 <line:90:5, col:19>
|   | `-VarDecl 0x23242d0d898 <col:5, col:18> col:18 used b 'BIO_ENC_CTX *'
|   |-IfStmt 0x23242d0d9f0 <line:92:5, line:93:16>
|   | |-OpaqueValueExpr 0x23242d0d9d8 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x23242d0d9c8 <col:9, col:16>
|   |   `-IntegerLiteral 0x23242d0d9a0 <col:16> 'int' 0
|   |-IfStmt 0x23242d0dc80 <line:96:5, line:97:16>
|   | |-BinaryOperator 0x23242d0dc28 <line:96:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x23242d0dbf8 <.//openssl//file_jk/before\crypto\evp\bio_enc.c:96:9> 'BIO_ENC_CTX *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x23242d0db50 <col:9> 'BIO_ENC_CTX *' lvalue Var 0x23242d0d898 'b' 'BIO_ENC_CTX *'
|   | | `-ImplicitCastExpr 0x23242d0dc10 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'BIO_ENC_CTX *' <BitCast>
|   | |   `-ParenExpr 0x23242d0dbd8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x23242d0dbb0 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x23242d0db70 <col:26> 'int' 0
|   | `-ReturnStmt 0x23242d0dc70 <.//openssl//file_jk/before\crypto\evp\bio_enc.c:97:9, col:16>
|   |   `-IntegerLiteral 0x23242d0dc48 <col:16> 'int' 0
|   |-CallExpr 0x23242d0df58 <line:100:5, col:46> 'int'
|   | |-ImplicitCastExpr 0x23242d0df40 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x23242d0ded0 <col:5> 'int ()' Function 0x23242d0de08 'OPENSSL_clear_free' 'int ()'
|   | |-ImplicitCastExpr 0x23242d0df88 <col:24> 'BIO_ENC_CTX *' <LValueToRValue>
|   | | `-DeclRefExpr 0x23242d0def0 <col:24> 'BIO_ENC_CTX *' lvalue Var 0x23242d0d898 'b' 'BIO_ENC_CTX *'
|   | `-UnaryExprOrTypeTraitExpr 0x23242d0df20 <col:27, col:45> 'unsigned long long' sizeof 'BIO_ENC_CTX':'struct enc_struct'
|   `-ReturnStmt 0x23242d0e0b8 <line:104:5, col:12>
|     `-IntegerLiteral 0x23242d0e090 <col:12> 'int' 1
|-FunctionDecl 0x23242d0f318 <line:107:1, line:233:1> line:107:12 invalid enc_read 'int (int *, char *, int)' static
| |-ParmVarDecl 0x23242d0f170 <col:21, col:26> col:26 invalid b 'int *'
| |-ParmVarDecl 0x23242d0f1f0 <col:29, col:35> col:35 used out 'char *'
| |-ParmVarDecl 0x23242d0f270 <col:40, col:44> col:44 used outl 'int'
| `-CompoundStmt 0x23242d148a8 <line:108:1, line:233:1>
|   |-DeclStmt 0x23242d0f5b0 <line:109:5, col:30>
|   | |-VarDecl 0x23242d0f400 <col:5, col:15> col:9 used ret 'int' cinit
|   | | `-IntegerLiteral 0x23242d0f468 <col:15> 'int' 0
|   | |-VarDecl 0x23242d0f4a8 <col:5, col:18> col:18 used i 'int'
|   | `-VarDecl 0x23242d0f528 <col:5, col:21> col:21 used blocksize 'int'
|   |-DeclStmt 0x23242d0f640 <line:110:5, col:21>
|   | `-VarDecl 0x23242d0f5d8 <col:5, col:18> col:18 used ctx 'BIO_ENC_CTX *'
|   |-IfStmt 0x23242d0f7c0 <line:113:5, line:114:18>
|   | |-BinaryOperator 0x23242d0f748 <line:113:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x23242d0f718 <.//openssl//file_jk/before\crypto\evp\bio_enc.c:113:9> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x23242d0f658 <col:9> 'char *' lvalue ParmVar 0x23242d0f1f0 'out' 'char *'
|   | | `-ImplicitCastExpr 0x23242d0f730 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x23242d0f6f8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x23242d0f6d0 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x23242d0f690 <col:26> 'int' 0
|   | `-ReturnStmt 0x23242d0f7b0 <.//openssl//file_jk/before\crypto\evp\bio_enc.c:114:9, col:18>
|   |   `-ParenExpr 0x23242d0f790 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x23242d0f768 <col:17> 'int' 0
|   |-IfStmt 0x23242d0fb30 <line:118:5, line:119:16>
|   | |-OpaqueValueExpr 0x23242d0fb18 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x23242d0fb08 <col:9, col:16>
|   |   `-IntegerLiteral 0x23242d0fae0 <col:16> 'int' 0
|   |-IfStmt 0x23242d10790 <line:122:5, line:135:5>
|   | |-BinaryOperator 0x23242d0fbf0 <line:122:9, col:24> 'int' '>'
|   | | |-ImplicitCastExpr 0x23242d0fbd8 <col:9, col:14> 'int' <LValueToRValue>
|   | | | `-MemberExpr 0x23242d0fb80 <col:9, col:14> 'int' lvalue ->buf_len 0x23242d06d18
|   | | |   `-ImplicitCastExpr 0x23242d0fb68 <col:9> 'BIO_ENC_CTX *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x23242d0fb48 <col:9> 'BIO_ENC_CTX *' lvalue Var 0x23242d0f5d8 'ctx' 'BIO_ENC_CTX *'
|   | | `-IntegerLiteral 0x23242d0fbb0 <col:24> 'int' 0
|   | `-CompoundStmt 0x23242d10748 <col:27, line:135:5>
|   |   |-BinaryOperator 0x23242d0fd68 <line:123:9, col:33> 'int' '='
|   |   | |-DeclRefExpr 0x23242d0fc10 <col:9> 'int' lvalue Var 0x23242d0f4a8 'i' 'int'
|   |   | `-BinaryOperator 0x23242d0fd48 <col:13, col:33> 'int' '-'
|   |   |   |-ImplicitCastExpr 0x23242d0fd18 <col:13, col:18> 'int' <LValueToRValue>
|   |   |   | `-MemberExpr 0x23242d0fc80 <col:13, col:18> 'int' lvalue ->buf_len 0x23242d06d18
|   |   |   |   `-ImplicitCastExpr 0x23242d0fc68 <col:13> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x23242d0fc48 <col:13> 'BIO_ENC_CTX *' lvalue Var 0x23242d0f5d8 'ctx' 'BIO_ENC_CTX *'
|   |   |   `-ImplicitCastExpr 0x23242d0fd30 <col:28, col:33> 'int' <LValueToRValue>
|   |   |     `-MemberExpr 0x23242d0fce8 <col:28, col:33> 'int' lvalue ->buf_off 0x23242d06d88
|   |   |       `-ImplicitCastExpr 0x23242d0fcd0 <col:28> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x23242d0fcb0 <col:28> 'BIO_ENC_CTX *' lvalue Var 0x23242d0f5d8 'ctx' 'BIO_ENC_CTX *'
|   |   |-IfStmt 0x23242d0fea8 <line:124:9, line:125:17>
|   |   | |-BinaryOperator 0x23242d0fe10 <line:124:13, col:17> 'int' '>'
|   |   | | |-ImplicitCastExpr 0x23242d0fde0 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x23242d0fd88 <col:13> 'int' lvalue Var 0x23242d0f4a8 'i' 'int'
|   |   | | `-ImplicitCastExpr 0x23242d0fdf8 <col:17> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x23242d0fda8 <col:17> 'int' lvalue ParmVar 0x23242d0f270 'outl' 'int'
|   |   | `-BinaryOperator 0x23242d0fe88 <line:125:13, col:17> 'int' '='
|   |   |   |-DeclRefExpr 0x23242d0fe30 <col:13> 'int' lvalue Var 0x23242d0f4a8 'i' 'int'
|   |   |   `-ImplicitCastExpr 0x23242d0fe70 <col:17> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x23242d0fe50 <col:17> 'int' lvalue ParmVar 0x23242d0f270 'outl' 'int'
|   |   |-BinaryOperator 0x23242d10290 <line:127:9, col:15> 'int' '='
|   |   | |-DeclRefExpr 0x23242d10220 <col:9> 'int' lvalue Var 0x23242d0f400 'ret' 'int'
|   |   | `-ImplicitCastExpr 0x23242d10278 <col:15> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x23242d10258 <col:15> 'int' lvalue Var 0x23242d0f4a8 'i' 'int'
|   |   |-CompoundAssignOperator 0x23242d10308 <line:128:9, col:16> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
|   |   | |-DeclRefExpr 0x23242d102b0 <col:9> 'char *' lvalue ParmVar 0x23242d0f1f0 'out' 'char *'
|   |   | `-ImplicitCastExpr 0x23242d102f0 <col:16> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x23242d102d0 <col:16> 'int' lvalue Var 0x23242d0f4a8 'i' 'int'
|   |   |-CompoundAssignOperator 0x23242d10390 <line:129:9, col:17> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-DeclRefExpr 0x23242d10338 <col:9> 'int' lvalue ParmVar 0x23242d0f270 'outl' 'int'
|   |   | `-ImplicitCastExpr 0x23242d10378 <col:17> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x23242d10358 <col:17> 'int' lvalue Var 0x23242d0f4a8 'i' 'int'
|   |   |-CompoundAssignOperator 0x23242d10460 <line:130:9, col:25> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-MemberExpr 0x23242d103f8 <col:9, col:14> 'int' lvalue ->buf_off 0x23242d06d88
|   |   | | `-ImplicitCastExpr 0x23242d103e0 <col:9> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x23242d103c0 <col:9> 'BIO_ENC_CTX *' lvalue Var 0x23242d0f5d8 'ctx' 'BIO_ENC_CTX *'
|   |   | `-ImplicitCastExpr 0x23242d10448 <col:25> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x23242d10428 <col:25> 'int' lvalue Var 0x23242d0f4a8 'i' 'int'
|   |   `-IfStmt 0x23242d10730 <line:131:9, line:134:9>
|   |     |-BinaryOperator 0x23242d10590 <line:131:13, col:34> 'int' '=='
|   |     | |-ImplicitCastExpr 0x23242d10560 <col:13, col:18> 'int' <LValueToRValue>
|   |     | | `-MemberExpr 0x23242d104c8 <col:13, col:18> 'int' lvalue ->buf_len 0x23242d06d18
|   |     | |   `-ImplicitCastExpr 0x23242d104b0 <col:13> 'BIO_ENC_CTX *' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x23242d10490 <col:13> 'BIO_ENC_CTX *' lvalue Var 0x23242d0f5d8 'ctx' 'BIO_ENC_CTX *'
|   |     | `-ImplicitCastExpr 0x23242d10578 <col:29, col:34> 'int' <LValueToRValue>
|   |     |   `-MemberExpr 0x23242d10530 <col:29, col:34> 'int' lvalue ->buf_off 0x23242d06d88
|   |     |     `-ImplicitCastExpr 0x23242d10518 <col:29> 'BIO_ENC_CTX *' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x23242d104f8 <col:29> 'BIO_ENC_CTX *' lvalue Var 0x23242d0f5d8 'ctx' 'BIO_ENC_CTX *'
|   |     `-CompoundStmt 0x23242d10710 <col:43, line:134:9>
|   |       |-BinaryOperator 0x23242d10640 <line:132:13, col:28> 'int' '='
|   |       | |-MemberExpr 0x23242d105e8 <col:13, col:18> 'int' lvalue ->buf_len 0x23242d06d18
|   |       | | `-ImplicitCastExpr 0x23242d105d0 <col:13> 'BIO_ENC_CTX *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x23242d105b0 <col:13> 'BIO_ENC_CTX *' lvalue Var 0x23242d0f5d8 'ctx' 'BIO_ENC_CTX *'
|   |       | `-IntegerLiteral 0x23242d10618 <col:28> 'int' 0
|   |       `-BinaryOperator 0x23242d106f0 <line:133:13, col:28> 'int' '='
|   |         |-MemberExpr 0x23242d10698 <col:13, col:18> 'int' lvalue ->buf_off 0x23242d06d88
|   |         | `-ImplicitCastExpr 0x23242d10680 <col:13> 'BIO_ENC_CTX *' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x23242d10660 <col:13> 'BIO_ENC_CTX *' lvalue Var 0x23242d0f5d8 'ctx' 'BIO_ENC_CTX *'
|   |         `-IntegerLiteral 0x23242d106c8 <col:28> 'int' 0
|   |-IfStmt 0x23242d10a10 <line:138:5, line:139:21>
|   | |-BinaryOperator 0x23242d10988 <line:138:9, col:22> 'int' '=='
|   | | |-ImplicitCastExpr 0x23242d10970 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x23242d10928 <col:9> 'int' lvalue Var 0x23242d0f528 'blocksize' 'int'
|   | | `-IntegerLiteral 0x23242d10948 <col:22> 'int' 1
|   | `-BinaryOperator 0x23242d109f0 <line:139:9, col:21> 'int' '='
|   |   |-DeclRefExpr 0x23242d109a8 <col:9> 'int' lvalue Var 0x23242d0f528 'blocksize' 'int'
|   |   `-IntegerLiteral 0x23242d109c8 <col:21> 'int' 0
|   |-WhileStmt 0x23242d145a8 <line:146:5, line:228:5>
|   | |-BinaryOperator 0x23242d10a88 <line:146:12, col:19> 'int' '>'
|   | | |-ImplicitCastExpr 0x23242d10a70 <col:12> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x23242d10a28 <col:12> 'int' lvalue ParmVar 0x23242d0f270 'outl' 'int'
|   | | `-IntegerLiteral 0x23242d10a48 <col:19> 'int' 0
|   | `-CompoundStmt 0x23242d14550 <col:22, line:228:5>
|   |   |-IfStmt 0x23242d10b78 <line:147:9, line:148:13>
|   |   | |-BinaryOperator 0x23242d10b50 <line:147:13, col:26> 'int' '<='
|   |   | | |-ImplicitCastExpr 0x23242d10b38 <col:13, col:18> 'int' <LValueToRValue>
|   |   | | | `-MemberExpr 0x23242d10ae0 <col:13, col:18> 'int' lvalue ->cont 0x23242d06df8
|   |   | | |   `-ImplicitCastExpr 0x23242d10ac8 <col:13> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x23242d10aa8 <col:13> 'BIO_ENC_CTX *' lvalue Var 0x23242d0f5d8 'ctx' 'BIO_ENC_CTX *'
|   |   | | `-IntegerLiteral 0x23242d10b10 <col:26> 'int' 0
|   |   | `-BreakStmt 0x23242d10b70 <line:148:13>
|   |   |-IfStmt 0x23242d0e320 <line:150:9, line:157:9> has_else
|   |   | |-BinaryOperator 0x23242d10c90 <line:150:13, col:37> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x23242d10c60 <col:13, col:18> 'unsigned char *' <LValueToRValue>
|   |   | | | `-MemberExpr 0x23242d10bc8 <col:13, col:18> 'unsigned char *' lvalue ->read_start 0x23242d06fe0
|   |   | | |   `-ImplicitCastExpr 0x23242d10bb0 <col:13> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x23242d10b90 <col:13> 'BIO_ENC_CTX *' lvalue Var 0x23242d0f5d8 'ctx' 'BIO_ENC_CTX *'
|   |   | | `-ImplicitCastExpr 0x23242d10c78 <col:32, col:37> 'unsigned char *' <LValueToRValue>
|   |   | |   `-MemberExpr 0x23242d10c30 <col:32, col:37> 'unsigned char *' lvalue ->read_end 0x23242d07050
|   |   | |     `-ImplicitCastExpr 0x23242d10c18 <col:32> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x23242d10bf8 <col:32> 'BIO_ENC_CTX *' lvalue Var 0x23242d0f5d8 'ctx' 'BIO_ENC_CTX *'
|   |   | |-CompoundStmt 0x23242d0e178 <col:47, line:155:9>
|   |   | | `-IfStmt 0x23242d0e160 <line:153:13, line:154:34>
|   |   | |   |-BinaryOperator 0x23242d11088 <line:153:17, col:21> 'int' '>'
|   |   | |   | |-ImplicitCastExpr 0x23242d11070 <col:17> 'int' <LValueToRValue>
|   |   | |   | | `-DeclRefExpr 0x23242d11028 <col:17> 'int' lvalue Var 0x23242d0f4a8 'i' 'int'
|   |   | |   | `-IntegerLiteral 0x23242d11048 <col:21> 'int' 0
|   |   | |   `-CompoundAssignOperator 0x23242d11148 <line:154:17, col:34> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   |   | |     |-MemberExpr 0x23242d110e0 <col:17, col:22> 'unsigned char *' lvalue ->read_end 0x23242d07050
|   |   | |     | `-ImplicitCastExpr 0x23242d110c8 <col:17> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   | |     |   `-DeclRefExpr 0x23242d110a8 <col:17> 'BIO_ENC_CTX *' lvalue Var 0x23242d0f5d8 'ctx' 'BIO_ENC_CTX *'
|   |   | |     `-ImplicitCastExpr 0x23242d11130 <col:34> 'int' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x23242d11110 <col:34> 'int' lvalue Var 0x23242d0f4a8 'i' 'int'
|   |   | `-CompoundStmt 0x23242d0e308 <line:155:16, line:157:9>
|   |   |   `-BinaryOperator 0x23242d0e2e8 <line:156:13, col:38> 'int' '='
|   |   |     |-DeclRefExpr 0x23242d0e190 <col:13> 'int' lvalue Var 0x23242d0f4a8 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x23242d0e2d0 <col:17, col:38> 'int' <IntegralCast>
|   |   |       `-BinaryOperator 0x23242d0e2b0 <col:17, col:38> 'long long' '-'
|   |   |         |-ImplicitCastExpr 0x23242d0e280 <col:17, col:22> 'unsigned char *' <LValueToRValue>
|   |   |         | `-MemberExpr 0x23242d0e1e8 <col:17, col:22> 'unsigned char *' lvalue ->read_end 0x23242d07050
|   |   |         |   `-ImplicitCastExpr 0x23242d0e1d0 <col:17> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |         |     `-DeclRefExpr 0x23242d0e1b0 <col:17> 'BIO_ENC_CTX *' lvalue Var 0x23242d0f5d8 'ctx' 'BIO_ENC_CTX *'
|   |   |         `-ImplicitCastExpr 0x23242d0e298 <col:33, col:38> 'unsigned char *' <LValueToRValue>
|   |   |           `-MemberExpr 0x23242d0e250 <col:33, col:38> 'unsigned char *' lvalue ->read_start 0x23242d06fe0
|   |   |             `-ImplicitCastExpr 0x23242d0e238 <col:33> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |               `-DeclRefExpr 0x23242d0e218 <col:33> 'BIO_ENC_CTX *' lvalue Var 0x23242d0f5d8 'ctx' 'BIO_ENC_CTX *'
|   |   |-IfStmt 0x23242d09ea8 <line:159:9, line:215:9> has_else
|   |   | |-BinaryOperator 0x23242d0e3a8 <line:159:13, col:18> 'int' '<='
|   |   | | |-ImplicitCastExpr 0x23242d0e390 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x23242d0e348 <col:13> 'int' lvalue Var 0x23242d0f4a8 'i' 'int'
|   |   | | `-IntegerLiteral 0x23242d0e368 <col:18> 'int' 0
|   |   | |-CompoundStmt 0x23242d0eb58 <col:21, line:171:9>
|   |   | | `-IfStmt 0x23242d0eb30 <line:161:13, line:170:13> has_else
|   |   | |   |-OpaqueValueExpr 0x23242d0eb18 <<invalid sloc>> '_Bool'
|   |   | |   |-CompoundStmt 0x23242d0e948 <line:161:42, line:167:13>
|   |   | |   | |-BinaryOperator 0x23242d0e578 <line:162:17, col:29> 'int' '='
|   |   | |   | | |-MemberExpr 0x23242d0e510 <col:17, col:22> 'int' lvalue ->cont 0x23242d06df8
|   |   | |   | | | `-ImplicitCastExpr 0x23242d0e4f8 <col:17> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   | |   | | |   `-DeclRefExpr 0x23242d0e4d8 <col:17> 'BIO_ENC_CTX *' lvalue Var 0x23242d0f5d8 'ctx' 'BIO_ENC_CTX *'
|   |   | |   | | `-ImplicitCastExpr 0x23242d0e560 <col:29> 'int' <LValueToRValue>
|   |   | |   | |   `-DeclRefExpr 0x23242d0e540 <col:29> 'int' lvalue Var 0x23242d0f4a8 'i' 'int'
|   |   | |   | |-BinaryOperator 0x23242d0e878 <line:165:17, col:27> 'int' '='
|   |   | |   | | |-MemberExpr 0x23242d0e810 <col:17, col:22> 'int' lvalue ->ok 0x23242d06ed8
|   |   | |   | | | `-ImplicitCastExpr 0x23242d0e7f8 <col:17> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   | |   | | |   `-DeclRefExpr 0x23242d0e7d8 <col:17> 'BIO_ENC_CTX *' lvalue Var 0x23242d0f5d8 'ctx' 'BIO_ENC_CTX *'
|   |   | |   | | `-ImplicitCastExpr 0x23242d0e860 <col:27> 'int' <LValueToRValue>
|   |   | |   | |   `-DeclRefExpr 0x23242d0e840 <col:27> 'int' lvalue Var 0x23242d0f4a8 'i' 'int'
|   |   | |   | `-BinaryOperator 0x23242d0e928 <line:166:17, col:32> 'int' '='
|   |   | |   |   |-MemberExpr 0x23242d0e8d0 <col:17, col:22> 'int' lvalue ->buf_off 0x23242d06d88
|   |   | |   |   | `-ImplicitCastExpr 0x23242d0e8b8 <col:17> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   | |   |   |   `-DeclRefExpr 0x23242d0e898 <col:17> 'BIO_ENC_CTX *' lvalue Var 0x23242d0f5d8 'ctx' 'BIO_ENC_CTX *'
|   |   | |   |   `-IntegerLiteral 0x23242d0e900 <col:32> 'int' 0
|   |   | |   `-CompoundStmt 0x23242d0eaf8 <line:167:20, line:170:13>
|   |   | |     |-BinaryOperator 0x23242d0ead0 <line:168:17, col:40> 'int' '='
|   |   | |     | |-DeclRefExpr 0x23242d0e970 <col:17> 'int' lvalue Var 0x23242d0f400 'ret' 'int'
|   |   | |     | `-ConditionalOperator 0x23242d0eaa0 <col:23, col:40> 'int'
|   |   | |     |   |-ParenExpr 0x23242d0ea10 <col:23, col:32> 'int'
|   |   | |     |   | `-BinaryOperator 0x23242d0e9f0 <col:24, col:31> 'int' '=='
|   |   | |     |   |   |-ImplicitCastExpr 0x23242d0e9d8 <col:24> 'int' <LValueToRValue>
|   |   | |     |   |   | `-DeclRefExpr 0x23242d0e990 <col:24> 'int' lvalue Var 0x23242d0f400 'ret' 'int'
|   |   | |     |   |   `-IntegerLiteral 0x23242d0e9b0 <col:31> 'int' 0
|   |   | |     |   |-ImplicitCastExpr 0x23242d0ea70 <col:36> 'int' <LValueToRValue>
|   |   | |     |   | `-DeclRefExpr 0x23242d0ea30 <col:36> 'int' lvalue Var 0x23242d0f4a8 'i' 'int'
|   |   | |     |   `-ImplicitCastExpr 0x23242d0ea88 <col:40> 'int' <LValueToRValue>
|   |   | |     |     `-DeclRefExpr 0x23242d0ea50 <col:40> 'int' lvalue Var 0x23242d0f400 'ret' 'int'
|   |   | |     `-BreakStmt 0x23242d0eaf0 <line:169:17>
|   |   | `-CompoundStmt 0x23242d09e68 <line:171:16, line:215:9>
|   |   |   |-IfStmt 0x23242d097b8 <line:172:13, line:195:13>
|   |   |   | |-BinaryOperator 0x23242d0ebf0 <line:172:17, line:30:29> 'int' '>'
|   |   |   | | |-ImplicitCastExpr 0x23242d0ebd8 <line:172:17> 'int' <LValueToRValue>
|   |   |   | | | `-DeclRefExpr 0x23242d0eb70 <col:17> 'int' lvalue ParmVar 0x23242d0f270 'outl' 'int'
|   |   |   | | `-ParenExpr 0x23242d0ebb8 <line:30:25, col:29> 'int'
|   |   |   | |   `-IntegerLiteral 0x23242d0eb90 <col:26> 'int' 256
|   |   |   | `-CompoundStmt 0x23242d09770 <line:172:39, line:195:13>
|   |   |   |   |-DeclStmt 0x23242d0edb8 <line:178:17, col:50>
|   |   |   |   | |-VarDecl 0x23242d0ec28 <col:17, col:32> col:21 used j 'int' cinit
|   |   |   |   | | `-BinaryOperator 0x23242d0ed00 <col:25, col:32> 'int' '-'
|   |   |   |   | |   |-ImplicitCastExpr 0x23242d0ecd0 <col:25> 'int' <LValueToRValue>
|   |   |   |   | |   | `-DeclRefExpr 0x23242d0ec90 <col:25> 'int' lvalue ParmVar 0x23242d0f270 'outl' 'int'
|   |   |   |   | |   `-ImplicitCastExpr 0x23242d0ece8 <col:32> 'int' <LValueToRValue>
|   |   |   |   | |     `-DeclRefExpr 0x23242d0ecb0 <col:32> 'int' lvalue Var 0x23242d0f528 'blocksize' 'int'
|   |   |   |   | `-VarDecl 0x23242d0ed38 <col:17, col:43> col:43 used buf_len 'int'
|   |   |   |   |-IfStmt 0x23242d092b8 <line:180:17, line:185:17>
|   |   |   |   | |-OpaqueValueExpr 0x23242d092a0 <<invalid sloc>> '_Bool'
|   |   |   |   | `-CompoundStmt 0x23242d09288 <line:182:72, line:185:17>
|   |   |   |   |   `-ReturnStmt 0x23242d09278 <line:184:21, col:28>
|   |   |   |   |     `-IntegerLiteral 0x23242d09250 <col:28> 'int' 0
|   |   |   |   |-CompoundAssignOperator 0x23242d09328 <line:186:17, col:24> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |   |   | |-DeclRefExpr 0x23242d092d0 <col:17> 'int' lvalue Var 0x23242d0f400 'ret' 'int'
|   |   |   |   | `-ImplicitCastExpr 0x23242d09310 <col:24> 'int' <LValueToRValue>
|   |   |   |   |   `-DeclRefExpr 0x23242d092f0 <col:24> 'int' lvalue Var 0x23242d0ed38 'buf_len' 'int'
|   |   |   |   |-CompoundAssignOperator 0x23242d093b0 <line:187:17, col:24> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
|   |   |   |   | |-DeclRefExpr 0x23242d09358 <col:17> 'char *' lvalue ParmVar 0x23242d0f1f0 'out' 'char *'
|   |   |   |   | `-ImplicitCastExpr 0x23242d09398 <col:24> 'int' <LValueToRValue>
|   |   |   |   |   `-DeclRefExpr 0x23242d09378 <col:24> 'int' lvalue Var 0x23242d0ed38 'buf_len' 'int'
|   |   |   |   |-CompoundAssignOperator 0x23242d09438 <line:188:17, col:25> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |   |   | |-DeclRefExpr 0x23242d093e0 <col:17> 'int' lvalue ParmVar 0x23242d0f270 'outl' 'int'
|   |   |   |   | `-ImplicitCastExpr 0x23242d09420 <col:25> 'int' <LValueToRValue>
|   |   |   |   |   `-DeclRefExpr 0x23242d09400 <col:25> 'int' lvalue Var 0x23242d0ed38 'buf_len' 'int'
|   |   |   |   |-IfStmt 0x23242d09688 <line:190:17, line:193:17>
|   |   |   |   | |-BinaryOperator 0x23242d09538 <line:190:21, col:33> 'int' '<='
|   |   |   |   | | |-ParenExpr 0x23242d094f0 <col:21, col:28> 'int'
|   |   |   |   | | | `-CompoundAssignOperator 0x23242d094c0 <col:22, col:27> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |   |   | | |   |-DeclRefExpr 0x23242d09468 <col:22> 'int' lvalue Var 0x23242d0f4a8 'i' 'int'
|   |   |   |   | | |   `-ImplicitCastExpr 0x23242d094a8 <col:27> 'int' <LValueToRValue>
|   |   |   |   | | |     `-DeclRefExpr 0x23242d09488 <col:27> 'int' lvalue Var 0x23242d0ec28 'j' 'int'
|   |   |   |   | | `-IntegerLiteral 0x23242d09510 <col:33> 'int' 0
|   |   |   |   | `-CompoundStmt 0x23242d09668 <col:36, line:193:17>
|   |   |   |   |   |-BinaryOperator 0x23242d09640 <line:191:21, col:44> 'unsigned char *' '='
|   |   |   |   |   | |-MemberExpr 0x23242d09590 <col:21, col:26> 'unsigned char *' lvalue ->read_start 0x23242d06fe0
|   |   |   |   |   | | `-ImplicitCastExpr 0x23242d09578 <col:21> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |   |   |   | |   `-DeclRefExpr 0x23242d09558 <col:21> 'BIO_ENC_CTX *' lvalue Var 0x23242d0f5d8 'ctx' 'BIO_ENC_CTX *'
|   |   |   |   |   | `-ImplicitCastExpr 0x23242d09628 <col:39, col:44> 'unsigned char *' <LValueToRValue>
|   |   |   |   |   |   `-MemberExpr 0x23242d095f8 <col:39, col:44> 'unsigned char *' lvalue ->read_end 0x23242d07050
|   |   |   |   |   |     `-ImplicitCastExpr 0x23242d095e0 <col:39> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |   |   |   |       `-DeclRefExpr 0x23242d095c0 <col:39> 'BIO_ENC_CTX *' lvalue Var 0x23242d0f5d8 'ctx' 'BIO_ENC_CTX *'
|   |   |   |   |   `-ContinueStmt 0x23242d09660 <line:192:21>
|   |   |   |   `-CompoundAssignOperator 0x23242d09740 <line:194:17, col:36> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   |   |   |     |-MemberExpr 0x23242d096d8 <col:17, col:22> 'unsigned char *' lvalue ->read_start 0x23242d06fe0
|   |   |   |     | `-ImplicitCastExpr 0x23242d096c0 <col:17> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |   |     |   `-DeclRefExpr 0x23242d096a0 <col:17> 'BIO_ENC_CTX *' lvalue Var 0x23242d0f5d8 'ctx' 'BIO_ENC_CTX *'
|   |   |   |     `-ImplicitCastExpr 0x23242d09728 <col:36> 'int' <LValueToRValue>
|   |   |   |       `-DeclRefExpr 0x23242d09708 <col:36> 'int' lvalue Var 0x23242d0ec28 'j' 'int'
|   |   |   |-IfStmt 0x23242d098f8 <line:196:13, line:30:29>
|   |   |   | |-BinaryOperator 0x23242d09850 <line:196:17, line:30:29> 'int' '>'
|   |   |   | | |-ImplicitCastExpr 0x23242d09838 <line:196:17> 'int' <LValueToRValue>
|   |   |   | | | `-DeclRefExpr 0x23242d097d0 <col:17> 'int' lvalue Var 0x23242d0f4a8 'i' 'int'
|   |   |   | | `-ParenExpr 0x23242d09818 <line:30:25, col:29> 'int'
|   |   |   | |   `-IntegerLiteral 0x23242d097f0 <col:26> 'int' 256
|   |   |   | `-BinaryOperator 0x23242d098d8 <line:197:17, line:30:29> 'int' '='
|   |   |   |   |-DeclRefExpr 0x23242d09870 <line:197:17> 'int' lvalue Var 0x23242d0f4a8 'i' 'int'
|   |   |   |   `-ParenExpr 0x23242d098b8 <line:30:25, col:29> 'int'
|   |   |   |     `-IntegerLiteral 0x23242d09890 <col:26> 'int' 256
|   |   |   |-IfStmt 0x23242d09be8 <line:198:13, line:204:13>
|   |   |   | |-OpaqueValueExpr 0x23242d09bd0 <<invalid sloc>> '_Bool'
|   |   |   | `-CompoundStmt 0x23242d09bb0 <line:200:56, line:204:13>
|   |   |   |   |-BinaryOperator 0x23242d09b58 <line:202:17, col:27> 'int' '='
|   |   |   |   | |-MemberExpr 0x23242d09b00 <col:17, col:22> 'int' lvalue ->ok 0x23242d06ed8
|   |   |   |   | | `-ImplicitCastExpr 0x23242d09ae8 <col:17> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |   |   | |   `-DeclRefExpr 0x23242d09ac8 <col:17> 'BIO_ENC_CTX *' lvalue Var 0x23242d0f5d8 'ctx' 'BIO_ENC_CTX *'
|   |   |   |   | `-IntegerLiteral 0x23242d09b30 <col:27> 'int' 0
|   |   |   |   `-ReturnStmt 0x23242d09ba0 <line:203:17, col:24>
|   |   |   |     `-IntegerLiteral 0x23242d09b78 <col:24> 'int' 0
|   |   |   |-CompoundAssignOperator 0x23242d09ca0 <line:205:13, col:32> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   |   |   | |-MemberExpr 0x23242d09c38 <col:13, col:18> 'unsigned char *' lvalue ->read_start 0x23242d06fe0
|   |   |   | | `-ImplicitCastExpr 0x23242d09c20 <col:13> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x23242d09c00 <col:13> 'BIO_ENC_CTX *' lvalue Var 0x23242d0f5d8 'ctx' 'BIO_ENC_CTX *'
|   |   |   | `-ImplicitCastExpr 0x23242d09c88 <col:32> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x23242d09c68 <col:32> 'int' lvalue Var 0x23242d0f4a8 'i' 'int'
|   |   |   |-BinaryOperator 0x23242d09d60 <line:206:13, col:25> 'int' '='
|   |   |   | |-MemberExpr 0x23242d09d08 <col:13, col:18> 'int' lvalue ->cont 0x23242d06df8
|   |   |   | | `-ImplicitCastExpr 0x23242d09cf0 <col:13> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x23242d09cd0 <col:13> 'BIO_ENC_CTX *' lvalue Var 0x23242d0f5d8 'ctx' 'BIO_ENC_CTX *'
|   |   |   | `-IntegerLiteral 0x23242d09d38 <col:25> 'int' 1
|   |   |   `-IfStmt 0x23242d09e50 <line:213:13, line:214:17>
|   |   |     |-BinaryOperator 0x23242d09e28 <line:213:17, col:33> 'int' '=='
|   |   |     | |-ImplicitCastExpr 0x23242d09e10 <col:17, col:22> 'int' <LValueToRValue>
|   |   |     | | `-MemberExpr 0x23242d09db8 <col:17, col:22> 'int' lvalue ->buf_len 0x23242d06d18
|   |   |     | |   `-ImplicitCastExpr 0x23242d09da0 <col:17> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |     | |     `-DeclRefExpr 0x23242d09d80 <col:17> 'BIO_ENC_CTX *' lvalue Var 0x23242d0f5d8 'ctx' 'BIO_ENC_CTX *'
|   |   |     | `-IntegerLiteral 0x23242d09de8 <col:33> 'int' 0
|   |   |     `-ContinueStmt 0x23242d09e48 <line:214:17>
|   |   |-IfStmt 0x23242d0a0e0 <line:217:9, line:220:17> has_else
|   |   | |-BinaryOperator 0x23242d09f88 <line:217:13, col:29> 'int' '<='
|   |   | | |-ImplicitCastExpr 0x23242d09f58 <col:13, col:18> 'int' <LValueToRValue>
|   |   | | | `-MemberExpr 0x23242d09f08 <col:13, col:18> 'int' lvalue ->buf_len 0x23242d06d18
|   |   | | |   `-ImplicitCastExpr 0x23242d09ef0 <col:13> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x23242d09ed0 <col:13> 'BIO_ENC_CTX *' lvalue Var 0x23242d0f5d8 'ctx' 'BIO_ENC_CTX *'
|   |   | | `-ImplicitCastExpr 0x23242d09f70 <col:29> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x23242d09f38 <col:29> 'int' lvalue ParmVar 0x23242d0f270 'outl' 'int'
|   |   | |-BinaryOperator 0x23242d0a048 <line:218:13, col:22> 'int' '='
|   |   | | |-DeclRefExpr 0x23242d09fa8 <col:13> 'int' lvalue Var 0x23242d0f4a8 'i' 'int'
|   |   | | `-ImplicitCastExpr 0x23242d0a030 <col:17, col:22> 'int' <LValueToRValue>
|   |   | |   `-MemberExpr 0x23242d0a000 <col:17, col:22> 'int' lvalue ->buf_len 0x23242d06d18
|   |   | |     `-ImplicitCastExpr 0x23242d09fe8 <col:17> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x23242d09fc8 <col:17> 'BIO_ENC_CTX *' lvalue Var 0x23242d0f5d8 'ctx' 'BIO_ENC_CTX *'
|   |   | `-BinaryOperator 0x23242d0a0c0 <line:220:13, col:17> 'int' '='
|   |   |   |-DeclRefExpr 0x23242d0a068 <col:13> 'int' lvalue Var 0x23242d0f4a8 'i' 'int'
|   |   |   `-ImplicitCastExpr 0x23242d0a0a8 <col:17> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x23242d0a088 <col:17> 'int' lvalue ParmVar 0x23242d0f270 'outl' 'int'
|   |   |-IfStmt 0x23242d14248 <line:221:9, line:222:13>
|   |   | |-BinaryOperator 0x23242d14220 <line:221:13, col:18> 'int' '<='
|   |   | | |-ImplicitCastExpr 0x23242d14208 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x23242d141c0 <col:13> 'int' lvalue Var 0x23242d0f4a8 'i' 'int'
|   |   | | `-IntegerLiteral 0x23242d141e0 <col:18> 'int' 0
|   |   | `-BreakStmt 0x23242d14240 <line:222:13>
|   |   |-CompoundAssignOperator 0x23242d14350 <line:224:9, col:16> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-DeclRefExpr 0x23242d142f8 <col:9> 'int' lvalue Var 0x23242d0f400 'ret' 'int'
|   |   | `-ImplicitCastExpr 0x23242d14338 <col:16> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x23242d14318 <col:16> 'int' lvalue Var 0x23242d0f4a8 'i' 'int'
|   |   |-BinaryOperator 0x23242d14420 <line:225:9, col:24> 'int' '='
|   |   | |-MemberExpr 0x23242d143b8 <col:9, col:14> 'int' lvalue ->buf_off 0x23242d06d88
|   |   | | `-ImplicitCastExpr 0x23242d143a0 <col:9> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x23242d14380 <col:9> 'BIO_ENC_CTX *' lvalue Var 0x23242d0f5d8 'ctx' 'BIO_ENC_CTX *'
|   |   | `-ImplicitCastExpr 0x23242d14408 <col:24> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x23242d143e8 <col:24> 'int' lvalue Var 0x23242d0f4a8 'i' 'int'
|   |   |-CompoundAssignOperator 0x23242d14498 <line:226:9, col:17> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-DeclRefExpr 0x23242d14440 <col:9> 'int' lvalue ParmVar 0x23242d0f270 'outl' 'int'
|   |   | `-ImplicitCastExpr 0x23242d14480 <col:17> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x23242d14460 <col:17> 'int' lvalue Var 0x23242d0f4a8 'i' 'int'
|   |   `-CompoundAssignOperator 0x23242d14520 <line:227:9, col:16> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
|   |     |-DeclRefExpr 0x23242d144c8 <col:9> 'char *' lvalue ParmVar 0x23242d0f1f0 'out' 'char *'
|   |     `-ImplicitCastExpr 0x23242d14508 <col:16> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x23242d144e8 <col:16> 'int' lvalue Var 0x23242d0f4a8 'i' 'int'
|   `-ReturnStmt 0x23242d14898 <line:232:5, col:41>
|     `-ParenExpr 0x23242d14878 <col:12, col:41> 'int'
|       `-ConditionalOperator 0x23242d14848 <col:13, col:38> 'int'
|         |-ParenExpr 0x23242d14770 <col:13, col:22> 'int'
|         | `-BinaryOperator 0x23242d14750 <col:14, col:21> 'int' '=='
|         |   |-ImplicitCastExpr 0x23242d14738 <col:14> 'int' <LValueToRValue>
|         |   | `-DeclRefExpr 0x23242d146f0 <col:14> 'int' lvalue Var 0x23242d0f400 'ret' 'int'
|         |   `-IntegerLiteral 0x23242d14710 <col:21> 'int' 0
|         |-ImplicitCastExpr 0x23242d14818 <col:26, col:31> 'int' <LValueToRValue>
|         | `-MemberExpr 0x23242d147c8 <col:26, col:31> 'int' lvalue ->cont 0x23242d06df8
|         |   `-ImplicitCastExpr 0x23242d147b0 <col:26> 'BIO_ENC_CTX *' <LValueToRValue>
|         |     `-DeclRefExpr 0x23242d14790 <col:26> 'BIO_ENC_CTX *' lvalue Var 0x23242d0f5d8 'ctx' 'BIO_ENC_CTX *'
|         `-ImplicitCastExpr 0x23242d14830 <col:38> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x23242d147f8 <col:38> 'int' lvalue Var 0x23242d0f400 'ret' 'int'
|-FunctionDecl 0x23242d0ff00 <line:126:9> col:9 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x23242d0ffa0 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x23242d10008 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x23242d10070 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x23242d14ab8 <line:235:1, line:293:1> line:235:12 invalid enc_write 'int (int *, const char *, int)' static
| |-ParmVarDecl 0x23242d14910 <col:22, col:27> col:27 invalid b 'int *'
| |-ParmVarDecl 0x23242d14990 <col:30, col:42> col:42 used in 'const char *'
| |-ParmVarDecl 0x23242d14a10 <col:46, col:50> col:50 used inl 'int'
| `-CompoundStmt 0x23242d13b60 <line:236:1, line:293:1>
|   |-DeclStmt 0x23242d14d50 <line:237:5, col:22>
|   | |-VarDecl 0x23242d14ba0 <col:5, col:15> col:9 used ret 'int' cinit
|   | | `-IntegerLiteral 0x23242d14c08 <col:15> 'int' 0
|   | |-VarDecl 0x23242d14c48 <col:5, col:18> col:18 used n 'int'
|   | `-VarDecl 0x23242d14cc8 <col:5, col:21> col:21 used i 'int'
|   |-DeclStmt 0x23242d14de0 <line:238:5, col:21>
|   | `-VarDecl 0x23242d14d78 <col:5, col:18> col:18 used ctx 'BIO_ENC_CTX *'
|   |-IfStmt 0x23242d15060 <line:243:5, line:244:16>
|   | |-OpaqueValueExpr 0x23242d15048 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x23242d15038 <col:9, col:16>
|   |   `-IntegerLiteral 0x23242d15010 <col:16> 'int' 0
|   |-BinaryOperator 0x23242d15100 <line:246:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x23242d15078 <col:5> 'int' lvalue Var 0x23242d14ba0 'ret' 'int'
|   | `-ImplicitCastExpr 0x23242d150e8 <col:11> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x23242d150b0 <col:11> 'int' lvalue ParmVar 0x23242d14a10 'inl' 'int'
|   |-BinaryOperator 0x23242d182e8 <line:249:5, col:29> 'int' '='
|   | |-DeclRefExpr 0x23242d15140 <col:5> 'int' lvalue Var 0x23242d14c48 'n' 'int'
|   | `-BinaryOperator 0x23242d182c8 <col:9, col:29> 'int' '-'
|   |   |-ImplicitCastExpr 0x23242d18298 <col:9, col:14> 'int' <LValueToRValue>
|   |   | `-MemberExpr 0x23242d18200 <col:9, col:14> 'int' lvalue ->buf_len 0x23242d06d18
|   |   |   `-ImplicitCastExpr 0x23242d15198 <col:9> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x23242d15178 <col:9> 'BIO_ENC_CTX *' lvalue Var 0x23242d14d78 'ctx' 'BIO_ENC_CTX *'
|   |   `-ImplicitCastExpr 0x23242d182b0 <col:24, col:29> 'int' <LValueToRValue>
|   |     `-MemberExpr 0x23242d18268 <col:24, col:29> 'int' lvalue ->buf_off 0x23242d06d88
|   |       `-ImplicitCastExpr 0x23242d18250 <col:24> 'BIO_ENC_CTX *' <LValueToRValue>
|   |         `-DeclRefExpr 0x23242d18230 <col:24> 'BIO_ENC_CTX *' lvalue Var 0x23242d14d78 'ctx' 'BIO_ENC_CTX *'
|   |-WhileStmt 0x23242d18848 <line:250:5, line:258:5>
|   | |-BinaryOperator 0x23242d18368 <line:250:12, col:16> 'int' '>'
|   | | |-ImplicitCastExpr 0x23242d18350 <col:12> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x23242d18308 <col:12> 'int' lvalue Var 0x23242d14c48 'n' 'int'
|   | | `-IntegerLiteral 0x23242d18328 <col:16> 'int' 0
|   | `-CompoundStmt 0x23242d18820 <col:19, line:258:5>
|   |   |-IfStmt 0x23242d186b0 <line:252:9, line:255:9>
|   |   | |-BinaryOperator 0x23242d185f0 <line:252:13, col:18> 'int' '<='
|   |   | | |-ImplicitCastExpr 0x23242d185d8 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x23242d18590 <col:13> 'int' lvalue Var 0x23242d14cc8 'i' 'int'
|   |   | | `-IntegerLiteral 0x23242d185b0 <col:18> 'int' 0
|   |   | `-CompoundStmt 0x23242d18698 <col:21, line:255:9>
|   |   |   `-ReturnStmt 0x23242d18688 <line:254:13, col:22>
|   |   |     `-ImplicitCastExpr 0x23242d18670 <col:20, col:22> 'int' <LValueToRValue>
|   |   |       `-ParenExpr 0x23242d18650 <col:20, col:22> 'int' lvalue
|   |   |         `-DeclRefExpr 0x23242d18630 <col:21> 'int' lvalue Var 0x23242d14cc8 'i' 'int'
|   |   |-CompoundAssignOperator 0x23242d18768 <line:256:9, col:25> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-MemberExpr 0x23242d18700 <col:9, col:14> 'int' lvalue ->buf_off 0x23242d06d88
|   |   | | `-ImplicitCastExpr 0x23242d186e8 <col:9> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x23242d186c8 <col:9> 'BIO_ENC_CTX *' lvalue Var 0x23242d14d78 'ctx' 'BIO_ENC_CTX *'
|   |   | `-ImplicitCastExpr 0x23242d18750 <col:25> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x23242d18730 <col:25> 'int' lvalue Var 0x23242d14cc8 'i' 'int'
|   |   `-CompoundAssignOperator 0x23242d187f0 <line:257:9, col:14> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     |-DeclRefExpr 0x23242d18798 <col:9> 'int' lvalue Var 0x23242d14c48 'n' 'int'
|   |     `-ImplicitCastExpr 0x23242d187d8 <col:14> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x23242d187b8 <col:14> 'int' lvalue Var 0x23242d14cc8 'i' 'int'
|   |-IfStmt 0x23242d18aa8 <line:261:5, line:262:18>
|   | |-BinaryOperator 0x23242d18a30 <line:261:9, col:34> 'int' '||'
|   | | |-ParenExpr 0x23242d18970 <col:9, col:20> 'int'
|   | | | `-BinaryOperator 0x23242d18950 <col:10, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |   |-ImplicitCastExpr 0x23242d18920 <.//openssl//file_jk/before\crypto\evp\bio_enc.c:261:10> 'const char *' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x23242d18860 <col:10> 'const char *' lvalue ParmVar 0x23242d14990 'in' 'const char *'
|   | | |   `-ImplicitCastExpr 0x23242d18938 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   | | |     `-ParenExpr 0x23242d18900 <col:17, col:27> 'void *'
|   | | |       `-CStyleCastExpr 0x23242d188d8 <col:18, col:26> 'void *' <NullToPointer>
|   | | |         `-IntegerLiteral 0x23242d18898 <col:26> 'int' 0
|   | | `-ParenExpr 0x23242d18a10 <.//openssl//file_jk/before\crypto\evp\bio_enc.c:261:25, col:34> 'int'
|   | |   `-BinaryOperator 0x23242d189f0 <col:26, col:33> 'int' '<='
|   | |     |-ImplicitCastExpr 0x23242d189d8 <col:26> 'int' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x23242d18990 <col:26> 'int' lvalue ParmVar 0x23242d14a10 'inl' 'int'
|   | |     `-IntegerLiteral 0x23242d189b0 <col:33> 'int' 0
|   | `-ReturnStmt 0x23242d18a98 <line:262:9, col:18>
|   |   `-ParenExpr 0x23242d18a78 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x23242d18a50 <col:17> 'int' 0
|   |-BinaryOperator 0x23242d18b50 <line:264:5, col:20> 'int' '='
|   | |-MemberExpr 0x23242d18af8 <col:5, col:10> 'int' lvalue ->buf_off 0x23242d06d88
|   | | `-ImplicitCastExpr 0x23242d18ae0 <col:5> 'BIO_ENC_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x23242d18ac0 <col:5> 'BIO_ENC_CTX *' lvalue Var 0x23242d14d78 'ctx' 'BIO_ENC_CTX *'
|   | `-IntegerLiteral 0x23242d18b28 <col:20> 'int' 0
|   |-WhileStmt 0x23242d13ac0 <line:265:5, line:290:5>
|   | |-BinaryOperator 0x23242d18bd0 <line:265:12, col:18> 'int' '>'
|   | | |-ImplicitCastExpr 0x23242d18bb8 <col:12> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x23242d18b70 <col:12> 'int' lvalue ParmVar 0x23242d14a10 'inl' 'int'
|   | | `-IntegerLiteral 0x23242d18b90 <col:18> 'int' 0
|   | `-CompoundStmt 0x23242d13a68 <col:21, line:290:5>
|   |   |-BinaryOperator 0x23242d18e10 <line:266:9, col:55> 'int' '='
|   |   | |-DeclRefExpr 0x23242d18bf0 <col:9> 'int' lvalue Var 0x23242d14c48 'n' 'int'
|   |   | `-ConditionalOperator 0x23242d18de0 <col:13, col:55> 'int'
|   |   |   |-ParenExpr 0x23242d18cf8 <col:13, col:34> 'int'
|   |   |   | `-BinaryOperator 0x23242d18cd8 <col:14, line:29:32> 'int' '>'
|   |   |   |   |-ImplicitCastExpr 0x23242d18cc0 <line:266:14> 'int' <LValueToRValue>
|   |   |   |   | `-DeclRefExpr 0x23242d18c10 <col:14> 'int' lvalue ParmVar 0x23242d14a10 'inl' 'int'
|   |   |   |   `-ParenExpr 0x23242d18ca0 <line:29:25, col:32> 'int'
|   |   |   |     `-BinaryOperator 0x23242d18c80 <col:26, col:31> 'int' '*'
|   |   |   |       |-IntegerLiteral 0x23242d18c30 <col:26> 'int' 1024
|   |   |   |       `-IntegerLiteral 0x23242d18c58 <col:31> 'int' 4
|   |   |   |-ParenExpr 0x23242d18d88 <col:25, col:32> 'int'
|   |   |   | `-BinaryOperator 0x23242d18d68 <col:26, col:31> 'int' '*'
|   |   |   |   |-IntegerLiteral 0x23242d18d18 <col:26> 'int' 1024
|   |   |   |   `-IntegerLiteral 0x23242d18d40 <col:31> 'int' 4
|   |   |   `-ImplicitCastExpr 0x23242d18dc8 <line:266:55> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x23242d18da8 <col:55> 'int' lvalue ParmVar 0x23242d14a10 'inl' 'int'
|   |   |-IfStmt 0x23242d19118 <line:267:9, line:273:9>
|   |   | |-OpaqueValueExpr 0x23242d19100 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x23242d190e0 <line:269:62, line:273:9>
|   |   |   |-BinaryOperator 0x23242d19088 <line:271:13, col:23> 'int' '='
|   |   |   | |-MemberExpr 0x23242d19030 <col:13, col:18> 'int' lvalue ->ok 0x23242d06ed8
|   |   |   | | `-ImplicitCastExpr 0x23242d19018 <col:13> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x23242d18ff8 <col:13> 'BIO_ENC_CTX *' lvalue Var 0x23242d14d78 'ctx' 'BIO_ENC_CTX *'
|   |   |   | `-IntegerLiteral 0x23242d19060 <col:23> 'int' 0
|   |   |   `-ReturnStmt 0x23242d190d0 <line:272:13, col:20>
|   |   |     `-IntegerLiteral 0x23242d190a8 <col:20> 'int' 0
|   |   |-CompoundAssignOperator 0x23242d19188 <line:274:9, col:16> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-DeclRefExpr 0x23242d19130 <col:9> 'int' lvalue ParmVar 0x23242d14a10 'inl' 'int'
|   |   | `-ImplicitCastExpr 0x23242d19170 <col:16> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x23242d19150 <col:16> 'int' lvalue Var 0x23242d14c48 'n' 'int'
|   |   |-CompoundAssignOperator 0x23242d131c8 <line:275:9, col:15> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'
|   |   | |-DeclRefExpr 0x23242d191b8 <col:9> 'const char *' lvalue ParmVar 0x23242d14990 'in' 'const char *'
|   |   | `-ImplicitCastExpr 0x23242d131b0 <col:15> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x23242d191d8 <col:15> 'int' lvalue Var 0x23242d14c48 'n' 'int'
|   |   |-BinaryOperator 0x23242d13288 <line:277:9, col:24> 'int' '='
|   |   | |-MemberExpr 0x23242d13230 <col:9, col:14> 'int' lvalue ->buf_off 0x23242d06d88
|   |   | | `-ImplicitCastExpr 0x23242d13218 <col:9> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x23242d131f8 <col:9> 'BIO_ENC_CTX *' lvalue Var 0x23242d14d78 'ctx' 'BIO_ENC_CTX *'
|   |   | `-IntegerLiteral 0x23242d13260 <col:24> 'int' 0
|   |   |-BinaryOperator 0x23242d13348 <line:278:9, col:18> 'int' '='
|   |   | |-DeclRefExpr 0x23242d132a8 <col:9> 'int' lvalue Var 0x23242d14c48 'n' 'int'
|   |   | `-ImplicitCastExpr 0x23242d13330 <col:13, col:18> 'int' <LValueToRValue>
|   |   |   `-MemberExpr 0x23242d13300 <col:13, col:18> 'int' lvalue ->buf_len 0x23242d06d18
|   |   |     `-ImplicitCastExpr 0x23242d132e8 <col:13> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x23242d132c8 <col:13> 'BIO_ENC_CTX *' lvalue Var 0x23242d14d78 'ctx' 'BIO_ENC_CTX *'
|   |   |-WhileStmt 0x23242d138f0 <line:279:9, line:287:9>
|   |   | |-BinaryOperator 0x23242d133c8 <line:279:16, col:20> 'int' '>'
|   |   | | |-ImplicitCastExpr 0x23242d133b0 <col:16> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x23242d13368 <col:16> 'int' lvalue Var 0x23242d14c48 'n' 'int'
|   |   | | `-IntegerLiteral 0x23242d13388 <col:20> 'int' 0
|   |   | `-CompoundStmt 0x23242d138c8 <col:23, line:287:9>
|   |   |   |-IfStmt 0x23242d13758 <line:281:13, line:284:13>
|   |   |   | |-BinaryOperator 0x23242d13548 <line:281:17, col:22> 'int' '<='
|   |   |   | | |-ImplicitCastExpr 0x23242d13530 <col:17> 'int' <LValueToRValue>
|   |   |   | | | `-DeclRefExpr 0x23242d134e8 <col:17> 'int' lvalue Var 0x23242d14cc8 'i' 'int'
|   |   |   | | `-IntegerLiteral 0x23242d13508 <col:22> 'int' 0
|   |   |   | `-CompoundStmt 0x23242d13740 <col:25, line:284:13>
|   |   |   |   `-ReturnStmt 0x23242d13730 <line:283:17, col:49>
|   |   |   |     `-ConditionalOperator 0x23242d13700 <col:24, col:49> 'int'
|   |   |   |       |-ParenExpr 0x23242d13618 <col:24, col:35> 'int'
|   |   |   |       | `-BinaryOperator 0x23242d135f8 <col:25, col:32> 'int' '=='
|   |   |   |       |   |-ImplicitCastExpr 0x23242d135c8 <col:25> 'int' <LValueToRValue>
|   |   |   |       |   | `-DeclRefExpr 0x23242d13588 <col:25> 'int' lvalue Var 0x23242d14ba0 'ret' 'int'
|   |   |   |       |   `-ImplicitCastExpr 0x23242d135e0 <col:32> 'int' <LValueToRValue>
|   |   |   |       |     `-DeclRefExpr 0x23242d135a8 <col:32> 'int' lvalue ParmVar 0x23242d14a10 'inl' 'int'
|   |   |   |       |-ImplicitCastExpr 0x23242d136e8 <col:39> 'int' <LValueToRValue>
|   |   |   |       | `-DeclRefExpr 0x23242d13638 <col:39> 'int' lvalue Var 0x23242d14cc8 'i' 'int'
|   |   |   |       `-BinaryOperator 0x23242d136c8 <col:43, col:49> 'int' '-'
|   |   |   |         |-ImplicitCastExpr 0x23242d13698 <col:43> 'int' <LValueToRValue>
|   |   |   |         | `-DeclRefExpr 0x23242d13658 <col:43> 'int' lvalue Var 0x23242d14ba0 'ret' 'int'
|   |   |   |         `-ImplicitCastExpr 0x23242d136b0 <col:49> 'int' <LValueToRValue>
|   |   |   |           `-DeclRefExpr 0x23242d13678 <col:49> 'int' lvalue ParmVar 0x23242d14a10 'inl' 'int'
|   |   |   |-CompoundAssignOperator 0x23242d137c8 <line:285:13, col:18> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |   | |-DeclRefExpr 0x23242d13770 <col:13> 'int' lvalue Var 0x23242d14c48 'n' 'int'
|   |   |   | `-ImplicitCastExpr 0x23242d137b0 <col:18> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x23242d13790 <col:18> 'int' lvalue Var 0x23242d14cc8 'i' 'int'
|   |   |   `-CompoundAssignOperator 0x23242d13898 <line:286:13, col:29> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |     |-MemberExpr 0x23242d13830 <col:13, col:18> 'int' lvalue ->buf_off 0x23242d06d88
|   |   |     | `-ImplicitCastExpr 0x23242d13818 <col:13> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |     |   `-DeclRefExpr 0x23242d137f8 <col:13> 'BIO_ENC_CTX *' lvalue Var 0x23242d14d78 'ctx' 'BIO_ENC_CTX *'
|   |   |     `-ImplicitCastExpr 0x23242d13880 <col:29> 'int' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x23242d13860 <col:29> 'int' lvalue Var 0x23242d14cc8 'i' 'int'
|   |   |-BinaryOperator 0x23242d13998 <line:288:9, col:24> 'int' '='
|   |   | |-MemberExpr 0x23242d13940 <col:9, col:14> 'int' lvalue ->buf_len 0x23242d06d18
|   |   | | `-ImplicitCastExpr 0x23242d13928 <col:9> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x23242d13908 <col:9> 'BIO_ENC_CTX *' lvalue Var 0x23242d14d78 'ctx' 'BIO_ENC_CTX *'
|   |   | `-IntegerLiteral 0x23242d13970 <col:24> 'int' 0
|   |   `-BinaryOperator 0x23242d13a48 <line:289:9, col:24> 'int' '='
|   |     |-MemberExpr 0x23242d139f0 <col:9, col:14> 'int' lvalue ->buf_off 0x23242d06d88
|   |     | `-ImplicitCastExpr 0x23242d139d8 <col:9> 'BIO_ENC_CTX *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x23242d139b8 <col:9> 'BIO_ENC_CTX *' lvalue Var 0x23242d14d78 'ctx' 'BIO_ENC_CTX *'
|   |     `-IntegerLiteral 0x23242d13a20 <col:24> 'int' 0
|   `-ReturnStmt 0x23242d13b50 <line:292:5, col:16>
|     `-ImplicitCastExpr 0x23242d13b38 <col:12, col:16> 'int' <LValueToRValue>
|       `-ParenExpr 0x23242d13b18 <col:12, col:16> 'int' lvalue
|         `-DeclRefExpr 0x23242d13af8 <col:13> 'int' lvalue Var 0x23242d14ba0 'ret' 'int'
|-FunctionDecl 0x23242d13e08 <line:295:1, line:388:1> line:295:13 invalid enc_ctrl 'long (int *, int, long, void *)' static
| |-ParmVarDecl 0x23242d13bd8 <col:22, col:27> col:27 invalid b 'int *'
| |-ParmVarDecl 0x23242d13c58 <col:30, col:34> col:34 used cmd 'int'
| |-ParmVarDecl 0x23242d13cd8 <col:39, col:44> col:44 used num 'long'
| |-ParmVarDecl 0x23242d13d58 <col:49, col:55> col:55 used ptr 'void *'
| `-CompoundStmt 0x23242d19680 <line:296:1, line:388:1>
|   |-DeclStmt 0x23242d13fe8 <line:298:5, col:28>
|   | |-VarDecl 0x23242d13ef0 <col:5, col:18> col:18 used ctx 'BIO_ENC_CTX *'
|   | `-VarDecl 0x23242d13f68 <col:5, col:24> col:24 used dctx 'BIO_ENC_CTX *'
|   |-DeclStmt 0x23242d140c0 <line:299:5, col:17>
|   | `-VarDecl 0x23242d14018 <col:5, col:16> col:10 used ret 'long' cinit
|   |   `-ImplicitCastExpr 0x23242d140a8 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x23242d14080 <col:16> 'int' 1
|   |-DeclStmt 0x23242d14158 <line:300:5, col:10>
|   | `-VarDecl 0x23242d140f0 <col:5, col:9> col:9 used i 'int'
|   |-IfStmt 0x23242d15358 <line:306:5, line:307:16>
|   | |-BinaryOperator 0x23242d152e8 <line:306:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x23242d152b8 <.//openssl//file_jk/before\crypto\evp\bio_enc.c:306:9> 'BIO_ENC_CTX *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x23242d15210 <col:9> 'BIO_ENC_CTX *' lvalue Var 0x23242d13ef0 'ctx' 'BIO_ENC_CTX *'
|   | | `-ImplicitCastExpr 0x23242d152d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'BIO_ENC_CTX *' <BitCast>
|   | |   `-ParenExpr 0x23242d15298 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x23242d15270 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x23242d15230 <col:26> 'int' 0
|   | `-ReturnStmt 0x23242d15348 <.//openssl//file_jk/before\crypto\evp\bio_enc.c:307:9, col:16>
|   |   `-ImplicitCastExpr 0x23242d15330 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x23242d15308 <col:16> 'int' 0
|   |-SwitchStmt 0x23242d153c0 <line:309:5, line:386:5>
|   | |-ImplicitCastExpr 0x23242d153a8 <line:309:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x23242d15370 <col:13> 'int' lvalue ParmVar 0x23242d13c58 'cmd' 'int'
|   | `-CompoundStmt 0x23242d19560 <col:18, line:386:5>
|   |   |-BinaryOperator 0x23242d15470 <line:311:9, col:19> 'int' '='
|   |   | |-MemberExpr 0x23242d15418 <col:9, col:14> 'int' lvalue ->ok 0x23242d06ed8
|   |   | | `-ImplicitCastExpr 0x23242d15400 <col:9> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x23242d153e0 <col:9> 'BIO_ENC_CTX *' lvalue Var 0x23242d13ef0 'ctx' 'BIO_ENC_CTX *'
|   |   | `-IntegerLiteral 0x23242d15448 <col:19> 'int' 1
|   |   |-BinaryOperator 0x23242d15520 <line:312:9, col:25> 'int' '='
|   |   | |-MemberExpr 0x23242d154c8 <col:9, col:14> 'int' lvalue ->finished 0x23242d06e68
|   |   | | `-ImplicitCastExpr 0x23242d154b0 <col:9> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x23242d15490 <col:9> 'BIO_ENC_CTX *' lvalue Var 0x23242d13ef0 'ctx' 'BIO_ENC_CTX *'
|   |   | `-IntegerLiteral 0x23242d154f8 <col:25> 'int' 0
|   |   |-IfStmt 0x23242d15a58 <line:313:9, line:315:20>
|   |   | |-OpaqueValueExpr 0x23242d15a40 <<invalid sloc>> '_Bool'
|   |   | `-ReturnStmt 0x23242d15a30 <col:13, col:20>
|   |   |   `-ImplicitCastExpr 0x23242d15a18 <col:20> 'long' <IntegralCast>
|   |   |     `-IntegerLiteral 0x23242d159f0 <col:20> 'int' 0
|   |   |-BreakStmt 0x23242d15c48 <line:317:9>
|   |   |-IfStmt 0x23242d15e40 <line:319:9, line:322:13> has_else
|   |   | |-BinaryOperator 0x23242d15cf8 <line:319:13, col:26> 'int' '<='
|   |   | | |-ImplicitCastExpr 0x23242d15ce0 <col:13, col:18> 'int' <LValueToRValue>
|   |   | | | `-MemberExpr 0x23242d15c88 <col:13, col:18> 'int' lvalue ->cont 0x23242d06df8
|   |   | | |   `-ImplicitCastExpr 0x23242d15c70 <col:13> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x23242d15c50 <col:13> 'BIO_ENC_CTX *' lvalue Var 0x23242d13ef0 'ctx' 'BIO_ENC_CTX *'
|   |   | | `-IntegerLiteral 0x23242d15cb8 <col:26> 'int' 0
|   |   | |-BinaryOperator 0x23242d15d78 <line:320:13, col:19> 'long' '='
|   |   | | |-DeclRefExpr 0x23242d15d18 <col:13> 'long' lvalue Var 0x23242d14018 'ret' 'long'
|   |   | | `-ImplicitCastExpr 0x23242d15d60 <col:19> 'long' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x23242d15d38 <col:19> 'int' 1
|   |   | `-NullStmt 0x23242d15e38 <line:322:13>
|   |   |-BreakStmt 0x23242d15e68 <line:323:9>
|   |   |-BinaryOperator 0x23242d15fc8 <line:325:9, col:35> 'long' '='
|   |   | |-DeclRefExpr 0x23242d15e70 <col:9> 'long' lvalue Var 0x23242d14018 'ret' 'long'
|   |   | `-ImplicitCastExpr 0x23242d15fb0 <col:15, col:35> 'long' <IntegralCast>
|   |   |   `-BinaryOperator 0x23242d15f90 <col:15, col:35> 'int' '-'
|   |   |     |-ImplicitCastExpr 0x23242d15f60 <col:15, col:20> 'int' <LValueToRValue>
|   |   |     | `-MemberExpr 0x23242d15ec8 <col:15, col:20> 'int' lvalue ->buf_len 0x23242d06d18
|   |   |     |   `-ImplicitCastExpr 0x23242d15eb0 <col:15> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x23242d15e90 <col:15> 'BIO_ENC_CTX *' lvalue Var 0x23242d13ef0 'ctx' 'BIO_ENC_CTX *'
|   |   |     `-ImplicitCastExpr 0x23242d15f78 <col:30, col:35> 'int' <LValueToRValue>
|   |   |       `-MemberExpr 0x23242d15f30 <col:30, col:35> 'int' lvalue ->buf_off 0x23242d06d88
|   |   |         `-ImplicitCastExpr 0x23242d15f18 <col:30> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |           `-DeclRefExpr 0x23242d15ef8 <col:30> 'BIO_ENC_CTX *' lvalue Var 0x23242d13ef0 'ctx' 'BIO_ENC_CTX *'
|   |   |-BreakStmt 0x23242d16120 <line:328:9>
|   |   |-BinaryOperator 0x23242d11240 <line:330:9, col:35> 'long' '='
|   |   | |-DeclRefExpr 0x23242d16128 <col:9> 'long' lvalue Var 0x23242d14018 'ret' 'long'
|   |   | `-ImplicitCastExpr 0x23242d11228 <col:15, col:35> 'long' <IntegralCast>
|   |   |   `-BinaryOperator 0x23242d11208 <col:15, col:35> 'int' '-'
|   |   |     |-ImplicitCastExpr 0x23242d111d8 <col:15, col:20> 'int' <LValueToRValue>
|   |   |     | `-MemberExpr 0x23242d16180 <col:15, col:20> 'int' lvalue ->buf_len 0x23242d06d18
|   |   |     |   `-ImplicitCastExpr 0x23242d16168 <col:15> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x23242d16148 <col:15> 'BIO_ENC_CTX *' lvalue Var 0x23242d13ef0 'ctx' 'BIO_ENC_CTX *'
|   |   |     `-ImplicitCastExpr 0x23242d111f0 <col:30, col:35> 'int' <LValueToRValue>
|   |   |       `-MemberExpr 0x23242d111a8 <col:30, col:35> 'int' lvalue ->buf_off 0x23242d06d88
|   |   |         `-ImplicitCastExpr 0x23242d11190 <col:30> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |           `-DeclRefExpr 0x23242d161b0 <col:30> 'BIO_ENC_CTX *' lvalue Var 0x23242d13ef0 'ctx' 'BIO_ENC_CTX *'
|   |   |-BreakStmt 0x23242d11398 <line:333:9>
|   |   |-LabelStmt 0x23242d11720 <line:336:2, line:341:9> 'again'
|   |   | `-WhileStmt 0x23242d116b8 <line:337:9, line:341:9>
|   |   |   |-BinaryOperator 0x23242d114a0 <line:337:16, col:37> 'int' '!='
|   |   |   | |-ImplicitCastExpr 0x23242d11470 <col:16, col:21> 'int' <LValueToRValue>
|   |   |   | | `-MemberExpr 0x23242d113d8 <col:16, col:21> 'int' lvalue ->buf_len 0x23242d06d18
|   |   |   | |   `-ImplicitCastExpr 0x23242d113c0 <col:16> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |   | |     `-DeclRefExpr 0x23242d113a0 <col:16> 'BIO_ENC_CTX *' lvalue Var 0x23242d13ef0 'ctx' 'BIO_ENC_CTX *'
|   |   |   | `-ImplicitCastExpr 0x23242d11488 <col:32, col:37> 'int' <LValueToRValue>
|   |   |   |   `-MemberExpr 0x23242d11440 <col:32, col:37> 'int' lvalue ->buf_off 0x23242d06d88
|   |   |   |     `-ImplicitCastExpr 0x23242d11428 <col:32> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |   |       `-DeclRefExpr 0x23242d11408 <col:32> 'BIO_ENC_CTX *' lvalue Var 0x23242d13ef0 'ctx' 'BIO_ENC_CTX *'
|   |   |   `-CompoundStmt 0x23242d116a0 <col:46, line:341:9>
|   |   |     `-IfStmt 0x23242d11688 <line:339:13, line:340:24>
|   |   |       |-BinaryOperator 0x23242d11608 <line:339:17, col:21> 'int' '<'
|   |   |       | |-ImplicitCastExpr 0x23242d115f0 <col:17> 'int' <LValueToRValue>
|   |   |       | | `-DeclRefExpr 0x23242d115a8 <col:17> 'int' lvalue Var 0x23242d140f0 'i' 'int'
|   |   |       | `-IntegerLiteral 0x23242d115c8 <col:21> 'int' 0
|   |   |       `-ReturnStmt 0x23242d11678 <line:340:17, col:24>
|   |   |         `-ImplicitCastExpr 0x23242d11660 <col:24> 'long' <IntegralCast>
|   |   |           `-ImplicitCastExpr 0x23242d11648 <col:24> 'int' <LValueToRValue>
|   |   |             `-DeclRefExpr 0x23242d11628 <col:24> 'int' lvalue Var 0x23242d140f0 'i' 'int'
|   |   |-IfStmt 0x23242d11c88 <line:343:9, line:355:9>
|   |   | |-UnaryOperator 0x23242d117b8 <line:343:13, col:19> 'int' prefix '!' cannot overflow
|   |   | | `-ImplicitCastExpr 0x23242d117a0 <col:14, col:19> 'int' <LValueToRValue>
|   |   | |   `-MemberExpr 0x23242d11770 <col:14, col:19> 'int' lvalue ->finished 0x23242d06e68
|   |   | |     `-ImplicitCastExpr 0x23242d11758 <col:14> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x23242d11738 <col:14> 'BIO_ENC_CTX *' lvalue Var 0x23242d13ef0 'ctx' 'BIO_ENC_CTX *'
|   |   | `-CompoundStmt 0x23242d11c50 <col:29, line:355:9>
|   |   |   |-BinaryOperator 0x23242d11860 <line:344:13, col:29> 'int' '='
|   |   |   | |-MemberExpr 0x23242d11808 <col:13, col:18> 'int' lvalue ->finished 0x23242d06e68
|   |   |   | | `-ImplicitCastExpr 0x23242d117f0 <col:13> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x23242d117d0 <col:13> 'BIO_ENC_CTX *' lvalue Var 0x23242d13ef0 'ctx' 'BIO_ENC_CTX *'
|   |   |   | `-IntegerLiteral 0x23242d11838 <col:29> 'int' 1
|   |   |   |-BinaryOperator 0x23242d11910 <line:345:13, col:28> 'int' '='
|   |   |   | |-MemberExpr 0x23242d118b8 <col:13, col:18> 'int' lvalue ->buf_off 0x23242d06d88
|   |   |   | | `-ImplicitCastExpr 0x23242d118a0 <col:13> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x23242d11880 <col:13> 'BIO_ENC_CTX *' lvalue Var 0x23242d13ef0 'ctx' 'BIO_ENC_CTX *'
|   |   |   | `-IntegerLiteral 0x23242d118e8 <col:28> 'int' 0
|   |   |   |-BinaryOperator 0x23242d11b60 <line:349:13, col:28> 'int' '='
|   |   |   | |-MemberExpr 0x23242d11ab8 <col:13, col:18> 'int' lvalue ->ok 0x23242d06ed8
|   |   |   | | `-ImplicitCastExpr 0x23242d11aa0 <col:13> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x23242d11a80 <col:13> 'BIO_ENC_CTX *' lvalue Var 0x23242d13ef0 'ctx' 'BIO_ENC_CTX *'
|   |   |   | `-CStyleCastExpr 0x23242d11b38 <col:23, col:28> 'int' <IntegralCast>
|   |   |   |   `-ImplicitCastExpr 0x23242d11b20 <col:28> 'long' <LValueToRValue> part_of_explicit_cast
|   |   |   |     `-DeclRefExpr 0x23242d11ae8 <col:28> 'long' lvalue Var 0x23242d14018 'ret' 'long'
|   |   |   |-IfStmt 0x23242d11c20 <line:350:13, line:351:17>
|   |   |   | |-BinaryOperator 0x23242d11bf8 <line:350:17, col:24> 'int' '<='
|   |   |   | | |-ImplicitCastExpr 0x23242d11bc8 <col:17> 'long' <LValueToRValue>
|   |   |   | | | `-DeclRefExpr 0x23242d11b80 <col:17> 'long' lvalue Var 0x23242d14018 'ret' 'long'
|   |   |   | | `-ImplicitCastExpr 0x23242d11be0 <col:24> 'long' <IntegralCast>
|   |   |   | |   `-IntegerLiteral 0x23242d11ba0 <col:24> 'int' 0
|   |   |   | `-BreakStmt 0x23242d11c18 <line:351:17>
|   |   |   `-GotoStmt 0x23242d11c38 <line:354:13, col:18> 'again' 0x23242d116d0
|   |   |-BreakStmt 0x23242d11d40 <line:359:9>
|   |   |-BinaryOperator 0x23242d11e28 <line:361:9, col:26> 'long' '='
|   |   | |-DeclRefExpr 0x23242d11d48 <col:9> 'long' lvalue Var 0x23242d14018 'ret' 'long'
|   |   | `-CStyleCastExpr 0x23242d11e00 <col:15, col:26> 'long' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x23242d11de8 <col:21, col:26> 'int' <LValueToRValue> part_of_explicit_cast
|   |   |     `-MemberExpr 0x23242d11da0 <col:21, col:26> 'int' lvalue ->ok 0x23242d06ed8
|   |   |       `-ImplicitCastExpr 0x23242d11d88 <col:21> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x23242d11d68 <col:21> 'BIO_ENC_CTX *' lvalue Var 0x23242d13ef0 'ctx' 'BIO_ENC_CTX *'
|   |   |-BreakStmt 0x23242d11e48 <line:362:9>
|   |   |-BreakStmt 0x23242d11f30 <line:367:9>
|   |   |-BreakStmt 0x23242d11fb8 <line:372:9>
|   |   |-IfStmt 0x23242d19250 <line:377:9, line:378:20>
|   |   | |-OpaqueValueExpr 0x23242d19238 <<invalid sloc>> '_Bool'
|   |   | `-ReturnStmt 0x23242d19228 <col:13, col:20>
|   |   |   `-ImplicitCastExpr 0x23242d19210 <col:20> 'long' <IntegralCast>
|   |   |     `-IntegerLiteral 0x23242d12168 <col:20> 'int' 0
|   |   |-BreakStmt 0x23242d19488 <line:382:9>
|   |   |-DefaultStmt 0x23242d19538 <line:383:5, col:12>
|   |   | `-NullStmt 0x23242d19530 <col:12>
|   |   `-BreakStmt 0x23242d19558 <line:385:9>
|   `-ReturnStmt 0x23242d19670 <line:387:5, col:16>
|     `-ImplicitCastExpr 0x23242d19658 <col:12, col:16> 'long' <LValueToRValue>
|       `-ParenExpr 0x23242d19638 <col:12, col:16> 'long' lvalue
|         `-DeclRefExpr 0x23242d19618 <col:13> 'long' lvalue Var 0x23242d14018 'ret' 'long'
|-FunctionDecl 0x23242d19880 <line:390:1, line:403:1> line:390:13 invalid enc_callback_ctrl 'long (int *, int, int *)' static
| |-ParmVarDecl 0x23242d196d8 <col:31, col:36> col:36 invalid b 'int *'
| |-ParmVarDecl 0x23242d19758 <col:39, col:43> col:43 used cmd 'int'
| |-ParmVarDecl 0x23242d197d8 <col:48, col:61> col:61 invalid fp 'int *'
| `-CompoundStmt 0x23242d19e00 <line:391:1, line:403:1>
|   |-DeclStmt 0x23242d19a10 <line:392:5, col:17>
|   | `-VarDecl 0x23242d19968 <col:5, col:16> col:10 used ret 'long' cinit
|   |   `-ImplicitCastExpr 0x23242d199f8 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x23242d199d0 <col:16> 'int' 1
|   |-IfStmt 0x23242d19b58 <line:395:5, line:396:18>
|   | |-OpaqueValueExpr 0x23242d19b40 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x23242d19b30 <col:9, col:18>
|   |   `-ImplicitCastExpr 0x23242d19b18 <col:16, col:18> 'long' <IntegralCast>
|   |     `-ParenExpr 0x23242d19af8 <col:16, col:18> 'int'
|   |       `-IntegerLiteral 0x23242d19ad0 <col:17> 'int' 0
|   |-SwitchStmt 0x23242d19bc0 <line:397:5, line:401:5>
|   | |-ImplicitCastExpr 0x23242d19ba8 <line:397:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x23242d19b70 <col:13> 'int' lvalue ParmVar 0x23242d19758 'cmd' 'int'
|   | `-CompoundStmt 0x23242d19d78 <col:18, line:401:5>
|   |   |-DefaultStmt 0x23242d19d50 <line:398:5, col:12>
|   |   | `-NullStmt 0x23242d19d48 <col:12>
|   |   `-BreakStmt 0x23242d19d70 <line:400:9>
|   `-ReturnStmt 0x23242d19df0 <line:402:5, col:16>
|     `-ImplicitCastExpr 0x23242d19dd8 <col:12, col:16> 'long' <LValueToRValue>
|       `-ParenExpr 0x23242d19db8 <col:12, col:16> 'long' lvalue
|         `-DeclRefExpr 0x23242d19d98 <col:13> 'long' lvalue Var 0x23242d19968 'ret' 'long'
`-FunctionDecl 0x23242d1a150 <line:425:1, line:450:1> line:425:5 invalid BIO_set_cipher 'int (int *, const int *, const unsigned char *, const unsigned char *, int)'
  |-ParmVarDecl 0x23242d19e48 <col:20, col:25> col:25 invalid b 'int *'
  |-ParmVarDecl 0x23242d19ec8 <col:28, col:46> col:46 invalid c 'const int *'
  |-ParmVarDecl 0x23242d19f48 <col:49, col:70> col:70 used k 'const unsigned char *'
  |-ParmVarDecl 0x23242d19fc8 <line:426:20, col:41> col:41 used i 'const unsigned char *'
  |-ParmVarDecl 0x23242d1a048 <col:44, col:48> col:48 used e 'int'
  `-CompoundStmt 0x23242d1a258 <line:427:1, line:450:1>
    |-DeclStmt 0x23242d12258 <line:428:5, col:21>
    | `-VarDecl 0x23242d121f0 <col:5, col:18> col:18 used ctx 'BIO_ENC_CTX *'
    |-DeclStmt 0x23242d128f8 <line:429:5, col:75>
    | `-VarDecl 0x23242d12890 <col:5, col:74> col:12 used callback 'long (*)(struct bio_st *, int, const char *, int, long, long)'
    |-IfStmt 0x23242d12a98 <line:432:5, line:433:16>
    | |-BinaryOperator 0x23242d12a40 <line:432:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
    | | |-ImplicitCastExpr 0x23242d12a10 <.//openssl//file_jk/before\crypto\evp\bio_enc.c:432:9> 'BIO_ENC_CTX *' <LValueToRValue>
    | | | `-DeclRefExpr 0x23242d12968 <col:9> 'BIO_ENC_CTX *' lvalue Var 0x23242d121f0 'ctx' 'BIO_ENC_CTX *'
    | | `-ImplicitCastExpr 0x23242d12a28 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'BIO_ENC_CTX *' <BitCast>
    | |   `-ParenExpr 0x23242d129f0 <col:17, col:27> 'void *'
    | |     `-CStyleCastExpr 0x23242d129c8 <col:18, col:26> 'void *' <NullToPointer>
    | |       `-IntegerLiteral 0x23242d12988 <col:26> 'int' 0
    | `-ReturnStmt 0x23242d12a88 <.//openssl//file_jk/before\crypto\evp\bio_enc.c:433:9, col:16>
    |   `-IntegerLiteral 0x23242d12a60 <col:16> 'int' 0
    |-IfStmt 0x23242d12e08 <line:437:5, line:440:16>
    | |-OpaqueValueExpr 0x23242d12df0 <<invalid sloc>> '_Bool'
    | `-ReturnStmt 0x23242d12de0 <col:9, col:16>
    |   `-IntegerLiteral 0x23242d12db8 <col:16> 'int' 0
    |-IfStmt 0x23242d13028 <line:444:5, line:445:16>
    | |-OpaqueValueExpr 0x23242d13010 <<invalid sloc>> '_Bool'
    | `-ReturnStmt 0x23242d13000 <col:9, col:16>
    |   `-IntegerLiteral 0x23242d12fd8 <col:16> 'int' 0
    `-ReturnStmt 0x23242d1a248 <line:449:5, col:12>
      `-IntegerLiteral 0x23242d1a220 <col:12> 'int' 1
