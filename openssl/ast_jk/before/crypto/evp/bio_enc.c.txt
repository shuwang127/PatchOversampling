TranslationUnitDecl 0x1ccd6fef768 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1ccd6ff0000 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1ccd6fefd00 '__int128'
|-TypedefDecl 0x1ccd6ff0070 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1ccd6fefd20 'unsigned __int128'
|-TypedefDecl 0x1ccd6ff03a8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1ccd6ff0160 'struct __NSConstantString_tag'
|   `-Record 0x1ccd6ff00c8 '__NSConstantString_tag'
|-TypedefDecl 0x1ccd6ff0418 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x1ccd6fef940 'unsigned long long'
|-TypedefDecl 0x1ccd6ff04b0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1ccd6ff0470 'char *'
|   `-BuiltinType 0x1ccd6fef800 'char'
|-TypedefDecl 0x1ccd6ff0520 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1ccd6ff0470 'char *'
|   `-BuiltinType 0x1ccd6fef800 'char'
|-TypedefDecl 0x1ccd6ff05e0 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x1ccd6fef940 'unsigned long long'
|-TypedefDecl 0x1ccd6ff0650 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x1ccd6ff0470 'char *'
|   `-BuiltinType 0x1ccd6fef800 'char'
|-FunctionDecl 0x1ccd8aa0930 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1ccd8aa09d0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x1ccd8aa0a40 <col:21> Implicit
|-FunctionDecl 0x1ccd8aa0a98 prev 0x1ccd8aa0930 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1ccd8aa07c0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x1ccd8aa0b88 <col:21> Inherited Implicit
|-TypedefDecl 0x1ccd8aa0bc8 prev 0x1ccd6ff0418 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x1ccd6fef940 'unsigned long long'
|-TypedefDecl 0x1ccd8aa0c70 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x1ccd8aa0c40 'size_t' sugar
|   |-Typedef 0x1ccd8aa0bc8 'size_t'
|   `-BuiltinType 0x1ccd6fef940 'unsigned long long'
|-TypedefDecl 0x1ccd8aa0ce0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x1ccd6fef8a0 'long long'
|-TypedefDecl 0x1ccd8aa0d50 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x1ccd6fef8a0 'long long'
|-TypedefDecl 0x1ccd8aa0dc0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x1ccd6fef8e0 'unsigned short'
|-TypedefDecl 0x1ccd8aa0e30 <line:541:1, col:24> col:24 referenced wint_t 'unsigned short'
| `-BuiltinType 0x1ccd6fef8e0 'unsigned short'
|-TypedefDecl 0x1ccd8aa0ea0 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x1ccd6fef8e0 'unsigned short'
|-TypedefDecl 0x1ccd8aa0f10 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x1ccd6fef860 'int'
|-TypedefDecl 0x1ccd8aa0f80 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x1ccd6fef880 'long'
|-TypedefDecl 0x1ccd8aa0ff0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x1ccd6fef8a0 'long long'
|-TypedefDecl 0x1ccd8aa1080 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x1ccd8aa1050 '__time64_t' sugar
|   |-Typedef 0x1ccd8aa0ff0 '__time64_t'
|   `-BuiltinType 0x1ccd6fef8a0 'long long'
|-FunctionDecl 0x1ccd8aa11f8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x1ccd8aa1418 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x1ccd8ad6580 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x1ccd8aa1558 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x1ccd8aa15d0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x1ccd8aa1648 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x1ccd8aa16c8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x1ccd8ad6320 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x1ccd8ad6660 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x1ccd8ad6720 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x1ccd8ad6890 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x1ccd8ad6840 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x1ccd8ad67e0 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x1ccd8ad6700 'struct threadlocaleinfostruct'
|       `-Record 0x1ccd8ae6420 'threadlocaleinfostruct'
|-TypedefDecl 0x1ccd8ad69a0 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x1ccd8ad6950 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x1ccd8ad68f0 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x1ccd8ad67c0 'struct threadmbcinfostruct'
|       `-Record 0x1ccd8ad6720 'threadmbcinfostruct'
|-RecordDecl 0x1ccd8ad69f8 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x1ccd8ad6ab0 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x1ccd8ad6b70 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1ccd8ad6c00 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x1ccd8ad6c90 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x1ccd8ad6d48 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x1ccd8ad6cf0 'struct localeinfo_struct' sugar
|   `-RecordType 0x1ccd8ad6b50 'struct localeinfo_struct'
|     `-Record 0x1ccd8ad6ab0 'localeinfo_struct'
|-TypedefDecl 0x1ccd8ad6e20 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x1ccd8ad6dd0 'struct localeinfo_struct *'
|   `-ElaboratedType 0x1ccd8ad6cf0 'struct localeinfo_struct' sugar
|     `-RecordType 0x1ccd8ad6b50 'struct localeinfo_struct'
|       `-Record 0x1ccd8ad6ab0 'localeinfo_struct'
|-RecordDecl 0x1ccd8ad6e98 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x1ccd8ad6f50 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1ccd8ad6fc8 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x1ccd8ad7088 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x1ccd8ad7120 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x1ccd8ad7190 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x1ccd8ad7248 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x1ccd8ad71f0 'struct localerefcount' sugar
|   `-RecordType 0x1ccd8ad6f30 'struct localerefcount'
|     `-Record 0x1ccd8ad6e98 'localerefcount'
|-RecordDecl 0x1ccd8ae6420 prev 0x1ccd8ad6660 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x1ccd8ae64a0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1ccd8ae6518 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x1ccd8ae6588 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x1ccd8ae65f8 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x1ccd8ae6668 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x1ccd8ae6828 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x1ccd8ae6898 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x1ccd8ae6908 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x1ccd8ae6978 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x1ccd8ae69e8 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x1ccd8ae6a58 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x1ccd8ae6ab0 parent 0x1ccd6fef768 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x1ccd8ae6c40 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x1ccd8ae6cb0 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x1ccd8ae6d20 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x1ccd8ae6d90 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x1ccd8ae6e30 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x1ccd8ae6ea0 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x1ccd8ae6fb0 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x1ccd8ae70e8 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x1ccd8ae7198 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x1ccd8ae7140 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x1ccd8ad6700 'struct threadlocaleinfostruct'
|     `-Record 0x1ccd8ae6420 'threadlocaleinfostruct'
|-RecordDecl 0x1ccd8ae7230 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:63:1, line:72:9> line:63:8 struct _iobuf definition
| |-MaxFieldAlignmentAttr 0x1ccd8ae72f0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1ccd8ae7368 <line:64:9, col:15> col:15 _ptr 'char *'
| |-FieldDecl 0x1ccd8ae5410 <line:65:9, col:15> col:15 _cnt 'int'
| |-FieldDecl 0x1ccd8ae5480 <line:66:9, col:15> col:15 _base 'char *'
| |-FieldDecl 0x1ccd8ae54f0 <line:67:9, col:15> col:15 _flag 'int'
| |-FieldDecl 0x1ccd8ae5560 <line:68:9, col:15> col:15 _file 'int'
| |-FieldDecl 0x1ccd8ae55d0 <line:69:9, col:15> col:15 _charbuf 'int'
| |-FieldDecl 0x1ccd8ae5640 <line:70:9, col:15> col:15 _bufsiz 'int'
| `-FieldDecl 0x1ccd8ae56b0 <line:71:9, col:15> col:15 _tmpfname 'char *'
|-TypedefDecl 0x1ccd8ae5760 <line:73:1, col:23> col:23 referenced FILE 'struct _iobuf':'struct _iobuf'
| `-ElaboratedType 0x1ccd8ae5710 'struct _iobuf' sugar
|   `-RecordType 0x1ccd8ae72d0 'struct _iobuf'
|     `-Record 0x1ccd8ae7230 '_iobuf'
|-FunctionDecl 0x1ccd8ae5998 <line:137:9, col:39> col:24 __iob_func 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|-TypedefDecl 0x1ccd8ae5a68 <line:144:1, col:17> col:17 referenced fpos_t 'long long'
| `-BuiltinType 0x1ccd6fef8a0 'long long'
|-FunctionDecl 0x1ccd8ae5c48 <line:175:24, col:65> col:36 _filbuf 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1ccd8ae5ad0 <col:52, col:59> col:59 _File 'FILE *'
|-FunctionDecl 0x1ccd8ae5f40 <line:176:28, col:82> col:40 _flsbuf 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1ccd8ae5d20 <col:53, col:57> col:57 _Ch 'int'
| `-ParmVarDecl 0x1ccd8ae5d98 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x1ccd8ae62f0 <line:178:24, col:121> col:39 _fsopen 'FILE *(const char *, const char *, int) __attribute__((cdecl))':'FILE *(const char *, const char *, int)'
| |-ParmVarDecl 0x1ccd8ae6020 <col:54, col:67> col:67 _Filename 'const char *'
| |-ParmVarDecl 0x1ccd8ae60a0 <col:85, col:98> col:98 _Mode 'const char *'
| `-ParmVarDecl 0x1ccd8ae6120 <col:110, col:114> col:114 _ShFlag 'int'
|-FunctionDecl 0x1ccd8af0630 <line:180:9, col:51> col:22 clearerr 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1ccd8af04c0 <col:39, col:46> col:46 _File 'FILE *'
|-FunctionDecl 0x1ccd8af0860 <line:182:28, col:76> col:44 clearerr_s 'errno_t (FILE *) __attribute__((cdecl))':'errno_t (FILE *)'
| `-ParmVarDecl 0x1ccd8af0720 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x1ccd8af0a10 <line:184:28, col:67> col:40 fclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1ccd8af0930 <col:55, col:62> col:62 _File 'FILE *'
|-FunctionDecl 0x1ccd8af0c00 <line:185:28, col:55> col:40 _fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1ccd8af0ef8 <line:187:24, col:94> col:39 _fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x1ccd8af0cd0 <col:52, col:56> col:56 _FileHandle 'int'
| `-ParmVarDecl 0x1ccd8af0d50 <col:76, col:89> col:89 _Mode 'const char *'
|-FunctionDecl 0x1ccd8af10b0 <line:189:24, col:58> col:36 feof 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1ccd8af0fd0 <col:46, col:53> col:53 _File 'FILE *'
|-FunctionDecl 0x1ccd8af1260 <line:190:24, col:60> col:36 ferror 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1ccd8af1180 <col:48, col:55> col:55 _File 'FILE *'
|-FunctionDecl 0x1ccd8af1410 <line:191:28, col:71> col:40 fflush 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1ccd8af1330 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x1ccd8aec588 <line:192:28, col:66> col:40 fgetc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1ccd8aec4a8 <col:54, col:61> col:61 _File 'FILE *'
|-FunctionDecl 0x1ccd8aec718 <line:193:28, col:54> col:40 _fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1ccd8aeca80 <line:194:28, col:90> col:40 fgetpos 'int (FILE *, fpos_t *) __attribute__((cdecl))':'int (FILE *, fpos_t *)'
| |-ParmVarDecl 0x1ccd8aec7e0 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x1ccd8aec8d8 <col:77, col:86> col:86 _Pos 'fpos_t *'
|-FunctionDecl 0x1ccd8aece38 <line:195:28, col:128> col:43 fgets 'char *(char *, int, FILE *) __attribute__((cdecl))':'char *(char *, int, FILE *)'
| |-ParmVarDecl 0x1ccd8aecb60 <col:75, col:82> col:82 _Buf 'char *'
| |-ParmVarDecl 0x1ccd8aecbe0 <col:93, col:97> col:97 _MaxCount 'int'
| `-ParmVarDecl 0x1ccd8aecc58 <col:116, col:123> col:123 _File 'FILE *'
|-FunctionDecl 0x1ccd8aecff8 <line:197:24, col:61> col:36 _fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1ccd8aecf18 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x1ccd8aed2c0 <line:204:24, col:117> col:39 _tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x1ccd8aed0d0 <col:59, col:72> col:72 _DirName 'const char *'
| `-ParmVarDecl 0x1ccd8aed150 <col:93, col:106> col:106 _FilePrefix 'const char *'
|-FunctionDecl 0x1ccd8aed490 <line:210:28, col:54> col:40 _flushall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1ccd8aed888 <line:211:72> col:72 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x1ccd8aed928 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1ccd8aed990 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1ccd8aeda08 prev 0x1ccd8aed888 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:211:134> col:72 fopen 'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x1ccd8aed660 <col:85, col:98> col:98 _Filename 'const char *'
| |-ParmVarDecl 0x1ccd8aed6e0 <col:116, col:129> col:129 _Mode 'const char *'
| `-DeprecatedAttr 0x1ccd8aedab8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ccd8aedf30 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:213:28, col:149> col:44 fopen_s 'errno_t (FILE **, const char *, const char *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *)'
| |-ParmVarDecl 0x1ccd8aedc60 <col:78, col:86> col:86 _File 'FILE **'
| |-ParmVarDecl 0x1ccd8aedce0 <col:100, col:113> col:113 _Filename 'const char *'
| `-ParmVarDecl 0x1ccd8aedd60 <col:131, col:144> col:144 _Mode 'const char *'
|-FunctionDecl 0x1ccd8aee250 <line:215:40> col:40 implicit fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x1ccd8aee2f0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x1ccd8aee358 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1ccd8aee3d0 <col:40> Implicit printf 2 3
|-FunctionDecl 0x1ccd8aef4b0 prev 0x1ccd8aee250 <col:28, col:125> col:40 fprintf 'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1ccd8aee010 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1ccd8aee090 <col:100, col:113> col:113 _Format 'const char *'
| `-FormatAttr 0x1ccd8aef5a8 <col:40> Inherited printf 2 3
|-FunctionDecl 0x1ccd8aef770 <line:217:28, col:127> col:40 fprintf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1ccd8aef5f0 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x1ccd8aef670 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x1ccd8aef9c8 <line:219:28, col:80> col:40 fputc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1ccd8aef850 <col:51, col:55> col:55 _Ch 'int'
| `-ParmVarDecl 0x1ccd8aef8c8 <col:68, col:75> col:75 _File 'FILE *'
|-FunctionDecl 0x1ccd8aefbf8 <line:220:28, col:62> col:40 _fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1ccd8aefaa8 <col:55, col:59> col:59 _Ch 'int'
|-FunctionDecl 0x1ccd8aefef0 <line:221:28, col:92> col:40 fputs 'int (const char *, FILE *) __attribute__((cdecl))':'int (const char *, FILE *)'
| |-ParmVarDecl 0x1ccd8aefcd0 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x1ccd8aefd48 <col:80, col:87> col:87 _File 'FILE *'
|-FunctionDecl 0x1ccd8af0388 <line:222:43> col:43 implicit fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x1ccd8af0428 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1ccd8ae9450 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1ccd8ae94b8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x1ccd8ae9520 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x1ccd8ae95a8 prev 0x1ccd8af0388 <col:28, col:171> col:43 fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x1ccd8aeffd0 <col:89, col:96> col:96 _DstBuf 'void *'
| |-ParmVarDecl 0x1ccd8af0048 <col:110, col:117> col:117 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ccd8af00c0 <col:136, col:143> col:143 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ccd8af0138 <col:159, col:166> col:166 _File 'FILE *'
|-FunctionDecl 0x1ccd8ae9ab0 <line:224:28, col:195> col:43 fread_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1ccd8ae9698 <col:91, col:98> col:98 _DstBuf 'void *'
| |-ParmVarDecl 0x1ccd8ae9710 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ccd8ae9788 <col:134, col:141> col:141 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ccd8ae9800 <col:160, col:167> col:167 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ccd8ae9878 <col:183, col:190> col:190 _File 'FILE *'
|-FunctionDecl 0x1ccd8ae9f70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:226:160> col:74 freopen 'FILE *(const char *, const char *, FILE *) __attribute__((cdecl))':'FILE *(const char *, const char *, FILE *)'
| |-ParmVarDecl 0x1ccd8ae9ca0 <col:89, col:102> col:102 _Filename 'const char *'
| |-ParmVarDecl 0x1ccd8ae9d20 <col:120, col:133> col:133 _Mode 'const char *'
| |-ParmVarDecl 0x1ccd8ae9d98 <col:148, col:155> col:155 _File 'FILE *'
| `-DeprecatedAttr 0x1ccd8aea028 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using freopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ccd8aee548 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:228:28, col:176> col:44 freopen_s 'errno_t (FILE **, const char *, const char *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *, FILE *)'
| |-ParmVarDecl 0x1ccd8aea170 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x1ccd8aea1f0 <col:102, col:115> col:115 _Filename 'const char *'
| |-ParmVarDecl 0x1ccd8aea270 <col:133, col:146> col:146 _Mode 'const char *'
| `-ParmVarDecl 0x1ccd8aea2e8 <col:161, col:168> col:168 _OldFile 'FILE *'
|-FunctionDecl 0x1ccd8aee8f0 <line:230:70> col:70 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x1ccd8aee990 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x1ccd8aee9f8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1ccd8aeea70 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x1ccd8aeead8 prev 0x1ccd8aee8f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:230:153> col:70 fscanf 'int (FILE *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x1ccd8aee728 <col:85, col:92> col:92 _File 'FILE *'
| |-ParmVarDecl 0x1ccd8aee7a8 <col:128, col:141> col:141 _Format 'const char *'
| |-FormatAttr 0x1ccd8aeecb8 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x1ccd8aeeb88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ccd8aef0f8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:231:201> col:77 _fscanf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ccd8aeedf8 <col:95, col:102> col:102 _File 'FILE *'
| |-ParmVarDecl 0x1ccd8aeee78 <col:148, col:161> col:161 _Format 'const char *'
| |-ParmVarDecl 0x1ccd8aeef10 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ccd8aef1b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ccd8af14d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:235:28, col:127> col:40 fscanf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1ccd8aef2f0 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x1ccd8aef370 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x1ccd8af17c0 <line:237:28, col:168> col:40 _fscanf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ccd8af15a8 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1ccd8af1628 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1ccd8af16a0 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ccd8af1b20 <line:239:28, col:94> col:40 fsetpos 'int (FILE *, const fpos_t *) __attribute__((cdecl))':'int (FILE *, const fpos_t *)'
| |-ParmVarDecl 0x1ccd8af18a0 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x1ccd8af1978 <col:75, col:90> col:90 _Pos 'const fpos_t *'
|-FunctionDecl 0x1ccd8af1ed8 <line:240:28, col:103> col:40 fseek 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x1ccd8af1bf8 <col:54, col:61> col:61 _File 'FILE *'
| |-ParmVarDecl 0x1ccd8af1c78 <col:73, col:78> col:78 _Offset 'long'
| `-ParmVarDecl 0x1ccd8af1cf8 <col:92, col:96> col:96 _Origin 'int'
|-FunctionDecl 0x1ccd8af2138 <line:241:24, col:63> col:37 ftell 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x1ccd8af1fb8 <col:51, col:58> col:58 _File 'FILE *'
|-FunctionDecl 0x1ccd8aeb4b8 <line:243:28, col:110> col:40 _fseeki64 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x1ccd8af2208 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1ccd8af2288 <col:77, col:85> col:85 _Offset 'long long'
| `-ParmVarDecl 0x1ccd8af2308 <col:99, col:103> col:103 _Origin 'int'
|-FunctionDecl 0x1ccd8aeb718 <line:244:24, col:70> col:40 _ftelli64 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x1ccd8aeb598 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x1ccd8aebbd8 <line:246:43> col:43 implicit fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x1ccd8aebc78 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1ccd8aebce0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1ccd8aebd48 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x1ccd8aebdb0 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x1ccd8aebe38 prev 0x1ccd8aebbd8 <col:28, col:159> col:43 fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x1ccd8aeb820 <col:81, col:94> col:94 _Str 'const void *'
| |-ParmVarDecl 0x1ccd8aeb898 <col:105, col:112> col:112 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ccd8aeb910 <col:124, col:131> col:131 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ccd8aeb988 <col:147, col:154> col:154 _File 'FILE *'
|-FunctionDecl 0x1ccd8aec000 <line:247:24, col:61> col:36 getc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1ccd8aebf20 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x1ccd8aec190 <line:248:24, col:48> col:36 getchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1ccd8aec318 <line:249:24, col:53> col:36 _getmaxstdio 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1ccd8af26a0 <line:251:9, col:84> col:24 gets_s 'char *(char *, rsize_t) __attribute__((cdecl))':'char *(char *, rsize_t)'
| |-ParmVarDecl 0x1ccd8aec3e8 <col:53, col:60> col:60 _Buf 'char *'
| `-ParmVarDecl 0x1ccd8af24f0 <col:71, col:79> col:79 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1ccd8af29c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:254:80 gets 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1ccd8af2880 <col:139, col:145> col:145 _Buffer 'char *'
| `-DeprecatedAttr 0x1ccd8af2a70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ccd8af2c90 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:255:16, col:54> col:28 _getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1ccd8af2bb0 <col:42, col:49> col:49 _File 'FILE *'
|-FunctionDecl 0x1ccd8af2eb0 <line:258:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x1ccd8af2d68 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x1ccd8af3060 <line:261:28, col:68> col:40 _pclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1ccd8af2f80 <col:56, col:63> col:63 _File 'FILE *'
|-FunctionDecl 0x1ccd8af32b0 <line:262:24, col:101> col:39 _popen 'FILE *(const char *, const char *) __attribute__((cdecl))':'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x1ccd8af3138 <col:53, col:66> col:66 _Command 'const char *'
| `-ParmVarDecl 0x1ccd8af31b8 <col:83, col:96> col:96 _Mode 'const char *'
|-FunctionDecl 0x1ccd8af34f0 <line:264:40> col:40 implicit printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x1ccd8af3590 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1ccd8af3600 <col:40> Implicit printf 1 2
|-FunctionDecl 0x1ccd8af3668 prev 0x1ccd8af34f0 <col:28, col:102> col:40 printf 'int (const char *, ...)'
| |-ParmVarDecl 0x1ccd8af3390 <col:77, col:90> col:90 _Format 'const char *'
| `-FormatAttr 0x1ccd8af3758 <col:40> Inherited printf 1 2
|-FunctionDecl 0x1ccd8af3888 <line:266:28, col:104> col:40 printf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1ccd8af37a8 <col:79, col:92> col:92 _Format 'const char *'
|-FunctionDecl 0x1ccd8af3ad8 <line:268:28, col:79> col:40 putc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1ccd8af3960 <col:50, col:54> col:54 _Ch 'int'
| `-ParmVarDecl 0x1ccd8af39d8 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x1ccd8af3c98 <line:269:28, col:60> col:40 putchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1ccd8af3bb8 <col:53, col:57> col:57 _Ch 'int'
|-FunctionDecl 0x1ccd8af3eb8 <line:270:28, col:69> col:40 puts 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1ccd8af3d70 <col:52, col:65> col:65 _Str 'const char *'
|-FunctionDecl 0x1ccd8af4108 <line:271:28, col:82> col:40 _putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1ccd8af3f90 <col:51, col:55> col:55 _Word 'int'
| `-ParmVarDecl 0x1ccd8af4008 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x1ccd8af42c8 <line:274:9, col:57> col:21 remove 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1ccd8af41e8 <col:35, col:48> col:48 _Filename 'const char *'
|-FunctionDecl 0x1ccd8b3f070 <line:275:24, col:109> col:36 rename 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1ccd8af43a0 <col:50, col:63> col:63 _OldFilename 'const char *'
| `-ParmVarDecl 0x1ccd8af4420 <col:84, col:97> col:97 _NewFilename 'const char *'
|-FunctionDecl 0x1ccd8b3f230 <line:276:9, col:58> col:21 _unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1ccd8b3f150 <col:36, col:49> col:49 _Filename 'const char *'
|-FunctionDecl 0x1ccd8b3f4c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:278:89> col:53 unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x1ccd8b3f3e0 <col:67, col:80> col:80 _Filename 'const char *'
| `-DeprecatedAttr 0x1ccd8b3f568 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _unlink. See online help for details." ""
|-FunctionDecl 0x1ccd8b3f760 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:281:9, col:49> col:22 rewind 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1ccd8b3f688 <col:37, col:44> col:44 _File 'FILE *'
|-FunctionDecl 0x1ccd8b3f8f0 <line:282:28, col:51> col:40 _rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1ccd8b3fb98 <line:283:69> col:69 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x1ccd8b3fc38 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1ccd8b3fca8 <col:69> Implicit scanf 1 2
|-FunctionDecl 0x1ccd8b3fd10 prev 0x1ccd8b3fb98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:283:129> col:69 scanf 'int (const char *restrict, ...)'
| |-ParmVarDecl 0x1ccd8b3fa80 <col:104, col:117> col:117 _Format 'const char *'
| |-FormatAttr 0x1ccd8b3fee8 <col:69> Inherited scanf 1 2
| `-DeprecatedAttr 0x1ccd8b3fdb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ccd8b412d0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:284:177> col:76 _scanf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ccd8b41098 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x1ccd8b41110 <col:155, col:165> col:165 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ccd8b41380 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _scanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ccd8b415a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:288:40, col:116> col:52 scanf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1ccd8b414c8 <col:91, col:104> col:104 _Format 'const char *'
|-FunctionDecl 0x1ccd8b417f8 <line:290:40, col:157> col:52 _scanf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ccd8b41680 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x1ccd8b416f8 <col:135, col:145> col:145 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ccd8b41bb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:292:150> col:55 setbuf 'void (FILE *, char *) __attribute__((cdecl))':'void (FILE *, char *)'
| |-ParmVarDecl 0x1ccd8b41990 <col:70, col:77> col:77 _File 'FILE *'
| |-ParmVarDecl 0x1ccd8b41a10 <col:136, col:143> col:143 _Buffer 'char *'
| `-DeprecatedAttr 0x1ccd8b41c68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using setvbuf instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ccd8b41e90 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:293:28, col:66> col:40 _setmaxstdio 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1ccd8b41db0 <col:58, col:62> col:62 _Max 'int'
|-FunctionDecl 0x1ccd8b44138 <line:294:28, col:93> col:49 _set_output_format 'unsigned int (unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int)'
| `-ParmVarDecl 0x1ccd8b43ff0 <col:73, col:86> col:86 _Format 'unsigned int'
|-FunctionDecl 0x1ccd8b44320 <line:295:28, col:72> col:49 _get_output_format 'unsigned int (void) __attribute__((cdecl))':'unsigned int (void)'
|-FunctionDecl 0x1ccd8b44770 <line:296:28, col:145> col:40 setvbuf 'int (FILE *, char *, int, size_t) __attribute__((cdecl))':'int (FILE *, char *, int, size_t)'
| |-ParmVarDecl 0x1ccd8b443e8 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1ccd8b44468 <col:99, col:106> col:106 _Buf 'char *'
| |-ParmVarDecl 0x1ccd8b444e8 <col:117, col:121> col:121 _Mode 'int'
| `-ParmVarDecl 0x1ccd8b44560 <col:133, col:140> col:140 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1ccd8b44bf0 <line:297:40, col:213> col:52 _snprintf_s 'int (char *, size_t, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, ...)'
| |-ParmVarDecl 0x1ccd8b44860 <col:93, col:100> col:100 _DstBuf 'char *'
| |-ParmVarDecl 0x1ccd8b448d8 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ccd8b44950 <col:140, col:147> col:147 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ccd8b449d0 <col:188, col:201> col:201 _Format 'const char *'
|-FunctionDecl 0x1ccd8b41fd0 <line:300:40, col:188> col:52 sprintf_s 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1ccd8b44ce0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1ccd8b44d58 <col:112, col:119> col:119 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ccd8b44dd8 <col:163, col:176> col:176 _Format 'const char *'
|-FunctionDecl 0x1ccd8b42198 <line:303:24, col:101> col:36 _scprintf 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1ccd8b420b8 <col:76, col:89> col:89 _Format 'const char *'
|-FunctionDecl 0x1ccd8b42570 <line:304:70> col:70 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x1ccd8b42610 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1ccd8b42678 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1ccd8b426f0 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x1ccd8b42758 prev 0x1ccd8b42570 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:304:157> col:70 sscanf 'int (const char *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x1ccd8b42330 <col:84, col:97> col:97 _Src 'const char *'
| |-ParmVarDecl 0x1ccd8b423b0 <col:132, col:145> col:145 _Format 'const char *'
| |-FormatAttr 0x1ccd8b42938 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x1ccd8b42808 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ccd8b42d28 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:305:205> col:77 _sscanf_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ccd8b42a48 <col:94, col:107> col:107 _Src 'const char *'
| |-ParmVarDecl 0x1ccd8b42ac8 <col:152, col:165> col:165 _Format 'const char *'
| |-ParmVarDecl 0x1ccd8b42b40 <col:183, col:193> col:193 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ccd8b42de0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ccd8b46110 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:309:40, col:143> col:52 sscanf_s 'int (const char *, const char *, ...) __attribute__((cdecl))':'int (const char *, const char *, ...)'
| |-ParmVarDecl 0x1ccd8b42f28 <col:68, col:81> col:81 _Src 'const char *'
| `-ParmVarDecl 0x1ccd8b46010 <col:118, col:131> col:131 _Format 'const char *'
|-FunctionDecl 0x1ccd8b46408 <line:311:40, col:184> col:52 _sscanf_s_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ccd8b461f0 <col:71, col:84> col:84 _Src 'const char *'
| |-ParmVarDecl 0x1ccd8b46270 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x1ccd8b462e8 <col:162, col:172> col:172 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ccd8b46898 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:312:217> col:76 _snscanf 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1ccd8b465b0 <col:121, col:134> col:134 _Src 'const char *'
| |-ParmVarDecl 0x1ccd8b46628 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ccd8b466a8 <col:192, col:205> col:205 _Format 'const char *'
| `-DeprecatedAttr 0x1ccd8b46950 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ccd8b46f20 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:313:259> col:78 _snscanf_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ccd8b46b90 <col:125, col:138> col:138 _Src 'const char *'
| |-ParmVarDecl 0x1ccd8b46c08 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ccd8b46c88 <col:206, col:219> col:219 _Format 'const char *'
| |-ParmVarDecl 0x1ccd8b46d00 <col:237, col:247> col:247 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ccd8b42fe0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ccd8b43340 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:314:40, col:197> col:52 _snscanf_s 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1ccd8b43128 <col:99, col:112> col:112 _Src 'const char *'
| |-ParmVarDecl 0x1ccd8b431a0 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ccd8b43220 <col:172, col:185> col:185 _Format 'const char *'
|-FunctionDecl 0x1ccd8b436d8 <line:315:40, col:237> col:52 _snscanf_s_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ccd8b43428 <col:101, col:114> col:114 _Src 'const char *'
| |-ParmVarDecl 0x1ccd8b434a0 <col:125, col:132> col:132 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ccd8b43520 <col:184, col:197> col:197 _Format 'const char *'
| `-ParmVarDecl 0x1ccd8b43598 <col:215, col:225> col:225 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ccd8b43938 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:317:86> col:74 tmpfile 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
| `-DeprecatedAttr 0x1ccd8b439d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpfile_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ccd8b43c90 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:319:28, col:96> col:44 tmpfile_s 'errno_t (FILE **) __attribute__((cdecl))':'errno_t (FILE **)'
| `-ParmVarDecl 0x1ccd8b43b20 <col:83, col:91> col:91 _File 'FILE **'
|-FunctionDecl 0x1ccd8b45000 <line:320:28, col:106> col:44 tmpnam_s 'errno_t (char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t)'
| |-ParmVarDecl 0x1ccd8b43d68 <col:75, col:82> col:82 _Buf 'char *'
| `-ParmVarDecl 0x1ccd8b43de0 <col:93, col:101> col:101 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1ccd8b45280 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:323:79 tmpnam 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1ccd8b451a0 <col:113, col:119> col:119 _Buffer 'char *'
| `-DeprecatedAttr 0x1ccd8b45328 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ccd8b455e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:324:28, col:81> col:40 ungetc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1ccd8b45470 <col:52, col:56> col:56 _Ch 'int'
| `-ParmVarDecl 0x1ccd8b454e8 <col:69, col:76> col:76 _File 'FILE *'
|-FunctionDecl 0x1ccd8b45a00 <line:325:40> col:40 implicit vfprintf 'int (FILE *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1ccd8b45aa0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x1ccd8b45b08 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1ccd8b45b70 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1ccd8b45bf0 <col:40> Implicit printf 2 0
|-FunctionDecl 0x1ccd8b45c58 prev 0x1ccd8b45a00 <col:28, col:139> col:40 vfprintf 'int (FILE *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1ccd8b456c0 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x1ccd8b45740 <col:101, col:114> col:114 _Format 'const char *'
| |-ParmVarDecl 0x1ccd8b457b8 <col:123, col:131> col:131 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1ccd8b45d58 <col:40> Inherited printf 2 0
|-FunctionDecl 0x1ccd8b47020 <line:326:40> col:40 implicit vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1ccd8b470c0 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x1ccd8b47128 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1ccd8b47190 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1ccd8b47210 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x1ccd8b47278 prev 0x1ccd8b47020 <col:28, col:138> col:40 vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1ccd8b45da0 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1ccd8b45e20 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x1ccd8b45e98 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1ccd8b47378 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x1ccd8b475d8 <line:328:28, col:141> col:40 vfprintf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1ccd8b473c0 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1ccd8b47440 <col:103, col:116> col:116 _Format 'const char *'
| `-ParmVarDecl 0x1ccd8b474b8 <col:125, col:133> col:133 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ccd8b478d0 <line:329:28, col:140> col:40 vfscanf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1ccd8b476b8 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1ccd8b47738 <col:102, col:115> col:115 _Format 'const char *'
| `-ParmVarDecl 0x1ccd8b477b0 <col:124, col:132> col:132 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ccd8b47c18 <line:331:40> col:40 implicit vprintf 'int (const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1ccd8b47cb8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1ccd8b47d20 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1ccd8b47d98 <col:40> Implicit printf 1 0
|-FunctionDecl 0x1ccd8b47e00 prev 0x1ccd8b47c18 <col:28, col:116> col:40 vprintf 'int (const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1ccd8b479b8 <col:78, col:91> col:91 _Format 'const char *'
| |-ParmVarDecl 0x1ccd8b47a30 <col:100, col:108> col:108 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1ccd8b47ef8 <col:40> Inherited printf 1 0
|-FunctionDecl 0x1ccd8b400e8 <line:332:40> col:40 implicit vscanf 'int (const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1ccd8b40188 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1ccd8b401f0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1ccd8b40268 <col:40> Implicit scanf 1 0
|-FunctionDecl 0x1ccd8b402d0 prev 0x1ccd8b400e8 <col:28, col:115> col:40 vscanf 'int (const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1ccd8b47f48 <col:77, col:90> col:90 _Format 'const char *'
| |-ParmVarDecl 0x1ccd8b3ffb0 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1ccd8b403c8 <col:40> Inherited scanf 1 0
|-FunctionDecl 0x1ccd8b40590 <line:334:28, col:118> col:40 vprintf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1ccd8b40418 <col:80, col:93> col:93 _Format 'const char *'
| `-ParmVarDecl 0x1ccd8b40490 <col:102, col:110> col:110 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ccd8b407e8 <line:335:28, col:117> col:40 vscanf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1ccd8b40670 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x1ccd8b406e8 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ccd8b40d48 <line:337:77> col:77 implicit vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1ccd8b40de8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1ccd8b40e50 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1ccd8b40eb8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1ccd8b40f20 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1ccd8b4e090 <col:77> Implicit printf 3 0
|-FunctionDecl 0x1ccd8b4e0f8 prev 0x1ccd8b40d48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:337:218> col:77 vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1ccd8b40988 <col:111, col:118> col:118 _DstBuf 'char *'
| |-ParmVarDecl 0x1ccd8b40a00 <col:132, col:139> col:139 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ccd8b40a80 <col:180, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x1ccd8b40af8 <col:202, col:210> col:210 _ArgList 'va_list':'char *'
| |-FormatAttr 0x1ccd8b4e2e8 <col:77> Inherited printf 3 0
| `-DeprecatedAttr 0x1ccd8b4e1b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ccd8b4e758 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:339:28, col:206> col:40 vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1ccd8b4e338 <col:77, col:84> col:84 _DstBuf 'char *'
| |-ParmVarDecl 0x1ccd8b4e3b0 <col:98, col:105> col:105 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ccd8b4e428 <col:120, col:127> col:127 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ccd8b4e4a8 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x1ccd8b4e520 <col:190, col:198> col:198 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ccd8b4eb98 <line:342:40, col:227> col:52 _vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1ccd8b4e850 <col:94, col:101> col:101 _DstBuf 'char *'
| |-ParmVarDecl 0x1ccd8b4e8c8 <col:115, col:122> col:122 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ccd8b4e940 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ccd8b4e9c0 <col:189, col:202> col:202 _Format 'const char *'
| `-ParmVarDecl 0x1ccd8b4ea38 <col:211, col:219> col:219 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ccd8b4ef68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:89 _snprintf 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1ccd8b4ed50 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x1ccd8b4edc8 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ccd8b4ee48 <col:246, col:260> col:260 _Format 'const char *'
| `-DeprecatedAttr 0x1ccd8b4f020 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ccd8b4b4d0 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:100 _vsnprintf 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1ccd8b4b220 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x1ccd8b4b298 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ccd8b4b318 <col:246, col:260> col:260 _Format 'const char *'
| |-ParmVarDecl 0x1ccd8b4b390 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x1ccd8b4b590 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ccd8b4b988 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:349:21, col:183> col:33 vsprintf_s 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1ccd8b4b6d8 <col:73, col:80> col:80 _DstBuf 'char *'
| |-ParmVarDecl 0x1ccd8b4b750 <col:94, col:101> col:101 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ccd8b4b7d0 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x1ccd8b4b848 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ccd8b4bd48 <line:351:40, col:149> col:52 vsscanf_s 'int (const char *, const char *, va_list) __attribute__((cdecl))':'int (const char *, const char *, va_list)'
| |-ParmVarDecl 0x1ccd8b4ba78 <col:62, col:75> col:75 _Src 'const char *'
| |-ParmVarDecl 0x1ccd8b4baf8 <col:111, col:124> col:124 _Format 'const char *'
| `-ParmVarDecl 0x1ccd8b4bb70 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ccd8b4c110 <line:356:85> col:85 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x1ccd8b4c1b0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1ccd8b4c218 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1ccd8b4c290 <col:85> Implicit printf 2 3
|-FunctionDecl 0x1ccd8b4c2f8 prev 0x1ccd8b4c110 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:85 sprintf 'int (char *, const char *, ...)'
| |-ParmVarDecl 0x1ccd8b4bef0 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x1ccd8b4bf70 <col:171, col:185> col:185 _Format 'const char *'
| |-FormatAttr 0x1ccd8b4c4d8 <col:85> Inherited printf 2 3
| `-DeprecatedAttr 0x1ccd8b4c3a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ccd8b4c900 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> col:94 implicit vsprintf 'int (char *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1ccd8b4c9a0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1ccd8b4ca08 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1ccd8b4ca70 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1ccd8b4caf0 <col:94> Implicit printf 2 0
|-FunctionDecl 0x1ccd8b4cb58 prev 0x1ccd8b4c900 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94 vsprintf 'int (char *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1ccd8b4c5e8 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x1ccd8b4c668 <col:171, col:185> col:185 _Format 'const char *'
| |-ParmVarDecl 0x1ccd8b4c6e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-FormatAttr 0x1ccd8b4cd40 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> Inherited printf 2 0
| `-DeprecatedAttr 0x1ccd8b4cc10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ccd8b4f0a0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:357:40> col:40 implicit vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1ccd8b4f140 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1ccd8b4f1a8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1ccd8b4f210 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1ccd8b4f290 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x1ccd8b4f2f8 prev 0x1ccd8b4f0a0 <col:28, col:138> col:40 vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1ccd8b4cd90 <col:48, col:61> col:61 _srcBuf 'const char *'
| |-ParmVarDecl 0x1ccd8b4ce10 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x1ccd8b4ce88 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1ccd8b4f3f8 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x1ccd8b4f5c0 <line:359:24, col:115> col:36 _vscprintf 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1ccd8b4f448 <col:77, col:90> col:90 _Format 'const char *'
| `-ParmVarDecl 0x1ccd8b4f4c0 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ccd8b4f8b8 <line:360:28, col:170> col:40 _snprintf_c 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1ccd8b4f6a0 <col:76, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x1ccd8b4f718 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ccd8b4f798 <col:145, col:158> col:158 _Format 'const char *'
|-FunctionDecl 0x1ccd8b4fc50 <line:361:28, col:183> col:40 _vsnprintf_c 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1ccd8b4f9a0 <col:77, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x1ccd8b4fa18 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ccd8b4fa98 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x1ccd8b4fb10 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ccd8b4feb8 <line:363:28, col:128> col:40 _fprintf_p 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1ccd8b4fd38 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x1ccd8b4fdb8 <col:103, col:116> col:116 _Format 'const char *'
|-FunctionDecl 0x1ccd8b48030 <line:364:28, col:105> col:40 _printf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1ccd8b4ff98 <col:80, col:93> col:93 _Format 'const char *'
|-FunctionDecl 0x1ccd8b48320 <line:365:28, col:168> col:40 _sprintf_p 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1ccd8b48108 <col:77, col:84> col:84 _Dst 'char *'
| |-ParmVarDecl 0x1ccd8b48180 <col:95, col:102> col:102 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ccd8b48200 <col:143, col:156> col:156 _Format 'const char *'
|-FunctionDecl 0x1ccd8b48618 <line:366:28, col:142> col:40 _vfprintf_p 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1ccd8b48400 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1ccd8b48480 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x1ccd8b484f8 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ccd8b48878 <line:367:28, col:119> col:40 _vprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1ccd8b48700 <col:81, col:94> col:94 _Format 'const char *'
| `-ParmVarDecl 0x1ccd8b48778 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ccd8b48c08 <line:368:28, col:182> col:40 _vsprintf_p 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1ccd8b48958 <col:78, col:85> col:85 _Dst 'char *'
| |-ParmVarDecl 0x1ccd8b489d0 <col:96, col:103> col:103 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ccd8b48a50 <col:144, col:157> col:157 _Format 'const char *'
| `-ParmVarDecl 0x1ccd8b48ac8 <col:166, col:174> col:174 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ccd8b48dd8 <line:369:24, col:103> col:36 _scprintf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1ccd8b48cf8 <col:78, col:91> col:91 _Format 'const char *'
|-FunctionDecl 0x1ccd8b500b0 <line:370:24, col:117> col:36 _vscprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1ccd8b48eb0 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x1ccd8b48f28 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ccd8b50270 <line:371:9, col:61> col:21 _set_printf_count_output 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1ccd8b50190 <col:51, col:55> col:55 _Value 'int'
|-FunctionDecl 0x1ccd8b50400 <line:372:9, col:50> col:21 _get_printf_count_output 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1ccd8b50648 <line:374:28, col:143> col:40 _printf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ccd8b504d0 <col:90, col:103> col:103 _Format 'const char *'
| `-ParmVarDecl 0x1ccd8b50548 <col:121, col:131> col:131 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ccd8b508a0 <line:375:28, col:145> col:40 _printf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ccd8b50728 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1ccd8b507a0 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ccd8b50af8 <line:376:28, col:145> col:40 _printf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ccd8b50980 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1ccd8b509f8 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ccd8b50ea8 <line:377:28, col:157> col:40 _vprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ccd8b50bd8 <col:91, col:104> col:104 _Format 'const char *'
| |-ParmVarDecl 0x1ccd8b50c50 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ccd8b50cc8 <col:141, col:149> col:149 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ccd8b49160 <line:378:28, col:159> col:40 _vprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ccd8b50f90 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1ccd8b51008 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ccd8b49040 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ccd8b49458 <line:379:28, col:159> col:40 _vprintf_s_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ccd8b49248 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1ccd8b492c0 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ccd8b49338 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ccd8b49750 <line:381:28, col:166> col:40 _fprintf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ccd8b49538 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1ccd8b495b8 <col:113, col:126> col:126 _Format 'const char *'
| `-ParmVarDecl 0x1ccd8b49630 <col:144, col:154> col:154 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ccd8b49a48 <line:382:28, col:168> col:40 _fprintf_p_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ccd8b49830 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1ccd8b498b0 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1ccd8b49928 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ccd8b49d40 <line:383:28, col:168> col:40 _fprintf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ccd8b49b28 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1ccd8b49ba8 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1ccd8b49c20 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ccd8b51220 <line:384:28, col:147> col:40 _vfprintf_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ccd8b49e20 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1ccd8b49ea0 <col:81, col:94> col:94 _Format 'const char *'
| |-ParmVarDecl 0x1ccd8b49f18 <col:112, col:122> col:122 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ccd8b49f90 <col:131, col:139> col:139 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ccd8b515b8 <line:385:28, col:149> col:40 _vfprintf_p_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ccd8b51308 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1ccd8b51388 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x1ccd8b51400 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ccd8b51478 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ccd8b51950 <line:386:28, col:149> col:40 _vfprintf_s_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ccd8b516a0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1ccd8b51720 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x1ccd8b51798 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ccd8b51810 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ccd8b51de8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:388:221> col:78 _sprintf_l 'int (char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ccd8b51b00 <col:112, col:119> col:119 _DstBuf 'char *'
| |-ParmVarDecl 0x1ccd8b51b80 <col:168, col:181> col:181 _Format 'const char *'
| |-ParmVarDecl 0x1ccd8b51bf8 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ccd8b51ea0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ccd8b4a360 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:389:28, col:211> col:40 _sprintf_p_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ccd8b51fe8 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x1ccd8b4a050 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ccd8b4a0d0 <col:158, col:171> col:171 _Format 'const char *'
| `-ParmVarDecl 0x1ccd8b4a148 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ccd8b4a700 <line:390:40, col:221> col:52 _sprintf_s_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ccd8b4a450 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x1ccd8b4a4c8 <col:111, col:118> col:118 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ccd8b4a548 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x1ccd8b4a5c0 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ccd8b4ac50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:391:195> col:79 _vsprintf_l 'int (char *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ccd8b4a8f0 <col:114, col:121> col:121 _DstBuf 'char *'
| |-ParmVarDecl 0x1ccd8b4a970 <col:137, col:150> col:150 _Format 'const char *'
| |-ParmVarDecl 0x1ccd8b4a9e8 <col:168> col:177 '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1ccd8b4aa60 <col:179, col:187> col:187 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1ccd8b4ad10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ccd8b56348 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:392:28, col:225> col:40 _vsprintf_p_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ccd8b4ae58 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x1ccd8b4aed0 <col:101, col:108> col:108 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ccd8b4af50 <col:159, col:171> col:171 _Format 'const char *'
| |-ParmVarDecl 0x1ccd8b4afc8 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ccd8b56110 <col:209, col:217> col:217 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ccd8b56788 <line:393:40, col:235> col:52 _vsprintf_s_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ccd8b56440 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1ccd8b564b8 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ccd8b56538 <col:169, col:182> col:182 _Format 'const char *'
| |-ParmVarDecl 0x1ccd8b565b0 <col:200, col:210> col:210 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ccd8b56628 <col:219, col:227> col:227 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ccd8b569f8 <line:395:28, col:145> col:40 _scprintf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ccd8b56880 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1ccd8b568f8 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ccd8b56c50 <line:396:28, col:147> col:40 _scprintf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ccd8b56ad8 <col:94, col:107> col:107 _Format 'const char *'
| `-ParmVarDecl 0x1ccd8b56b50 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ccd8b56f40 <line:397:28, col:159> col:40 _vscprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ccd8b56d30 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1ccd8b56da8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ccd8b56e20 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ccd8b59270 <line:398:28, col:161> col:40 _vscprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ccd8b57028 <col:95, col:108> col:108 _Format 'const char *'
| |-ParmVarDecl 0x1ccd8b570a0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ccd8b59150 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ccd8b596c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:400:247> col:79 _snprintf_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ccd8b59418 <col:115, col:122> col:122 _DstBuf 'char *'
| |-ParmVarDecl 0x1ccd8b59490 <col:136, col:143> col:143 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ccd8b59510 <col:194, col:207> col:207 _Format 'const char *'
| |-ParmVarDecl 0x1ccd8b59588 <col:225, col:235> col:235 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ccd8b59788 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ccd8b59b80 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:401:28, col:210> col:40 _snprintf_c_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ccd8b598d0 <col:78, col:85> col:85 _DstBuf 'char *'
| |-ParmVarDecl 0x1ccd8b59948 <col:99, col:106> col:106 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ccd8b599c8 <col:157, col:170> col:170 _Format 'const char *'
| `-ParmVarDecl 0x1ccd8b59a40 <col:188, col:198> col:198 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ccd8b57120 <line:402:40, col:245> col:52 _snprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ccd8b59c70 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1ccd8b59ce8 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ccd8b59d60 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ccd8b59de0 <col:192, col:205> col:205 _Format 'const char *'
| `-ParmVarDecl 0x1ccd8b59e58 <col:223, col:233> col:233 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ccd8b57660 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:403:262> col:80 _vsnprintf_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ccd8b57318 <col:117, col:124> col:124 _DstBuf 'char *'
| |-ParmVarDecl 0x1ccd8b57390 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ccd8b57410 <col:196, col:209> col:209 _Format 'const char *'
| |-ParmVarDecl 0x1ccd8b57488 <col:227, col:237> col:237 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1ccd8b57500 <col:246, col:254> col:254 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1ccd8b57728 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ccd8b57ba8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:404:28, col:176> col:40 _vsnprintf_c_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ccd8b57878 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x1ccd8b578f0 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ccd8b57970 <col:118, col:129> col:130 'const char *'
| |-ParmVarDecl 0x1ccd8b579e8 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ccd8b57a60 <col:160, col:168> col:168 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ccd8b58190 <line:405:28, col:245> col:40 _vsnprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ccd8b57ca0 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x1ccd8b57d18 <col:101, col:108> col:108 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ccd8b57d90 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ccd8b57e10 <col:181, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x1ccd8b57e88 <col:210, col:220> col:220 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ccd8b57f00 <col:229, col:237> col:237 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ccd8b58550 <line:415:24, col:128> col:39 _wfsopen 'FILE *(const wchar_t *, const wchar_t *, int) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, int)'
| |-ParmVarDecl 0x1ccd8b58288 <col:55, col:71> col:71 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1ccd8b58300 <col:89, col:105> col:105 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x1ccd8b58380 <col:117, col:121> col:121 _ShFlag 'int'
|-FunctionDecl 0x1ccd8b587c0 <line:417:28, col:70> col:43 fgetwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1ccd8b58650 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x1ccd8b589d8 <line:418:28, col:58> col:43 _fgetwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x1ccd8b58cb8 <line:419:28, col:88> col:43 fputwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1ccd8b58aa0 <col:55, col:63> col:63 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1ccd8b58b18 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x1ccd8b58f00 <line:420:28, col:70> col:43 _fputwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x1ccd8b58d90 <col:59, col:67> col:67 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1ccd8b520d0 <line:421:24, col:65> col:39 getwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1ccd8b58fd0 <col:53, col:60> col:60 _File 'FILE *'
|-FunctionDecl 0x1ccd8b52258 <line:422:24, col:52> col:39 getwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x1ccd8b52490 <line:423:28, col:87> col:43 putwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1ccd8b52320 <col:54, col:62> col:62 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1ccd8b52398 <col:75, col:82> col:82 _File 'FILE *'
|-FunctionDecl 0x1ccd8b52640 <line:424:28, col:68> col:43 putwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x1ccd8b52568 <col:57, col:65> col:65 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1ccd8b528e8 <line:425:28, col:88> col:43 ungetwc 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x1ccd8b52710 <col:56, col:63> col:63 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ccd8b52788 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x1ccd8b52c90 <line:427:28, col:141> col:46 fgetws 'wchar_t *(wchar_t *, int, FILE *) __attribute__((cdecl))':'wchar_t *(wchar_t *, int, FILE *)'
| |-ParmVarDecl 0x1ccd8b529c0 <col:82, col:92> col:92 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1ccd8b52a40 <col:103, col:107> col:107 _SizeInWords 'int'
| `-ParmVarDecl 0x1ccd8b52ab8 <col:129, col:136> col:136 _File 'FILE *'
|-FunctionDecl 0x1ccd8b52f90 <line:428:28, col:96> col:40 fputws 'int (const wchar_t *, FILE *) __attribute__((cdecl))':'int (const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1ccd8b52d70 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1ccd8b52de8 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1ccd8b542a8 <line:429:28, col:124> col:46 _getws_s 'wchar_t *(wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, size_t)'
| |-ParmVarDecl 0x1ccd8b53068 <col:84, col:94> col:94 _Str 'wchar_t *'
| `-ParmVarDecl 0x1ccd8b54100 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1ccd8b545b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:431:83 _getws 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1ccd8b54440 <col:115, col:124> col:124 _String 'wchar_t *'
| `-DeprecatedAttr 0x1ccd8b54658 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _getws_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ccd8b54918 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:432:28, col:74> col:40 _putws 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1ccd8b54798 <col:54, col:70> col:70 _Str 'const wchar_t *'
|-FunctionDecl 0x1ccd8b54c20 <line:434:28, col:129> col:40 fwprintf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ccd8b549e8 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x1ccd8b54a60 <col:101, col:117> col:117 _Format 'const wchar_t *'
|-FunctionDecl 0x1ccd8b54e70 <line:436:28, col:131> col:40 fwprintf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ccd8b54cf8 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x1ccd8b54d70 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x1ccd8b55100 <line:438:28, col:106> col:40 wprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1ccd8b54f48 <col:78, col:94> col:94 _Format 'const wchar_t *'
|-FunctionDecl 0x1ccd8b552b0 <line:440:28, col:108> col:40 wprintf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1ccd8b551d0 <col:80, col:96> col:96 _Format 'const wchar_t *'
|-FunctionDecl 0x1ccd8b55460 <line:442:24, col:105> col:36 _scwprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1ccd8b55380 <col:77, col:93> col:93 _Format 'const wchar_t *'
|-FunctionDecl 0x1ccd8b557f8 <line:443:28, col:143> col:40 vfwprintf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ccd8b55530 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1ccd8b555a8 <col:102, col:118> col:118 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ccd8b55620 <col:127, col:135> col:135 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ccd8b55ae8 <line:444:28, col:142> col:40 vfwscanf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ccd8b558d8 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x1ccd8b55950 <col:101, col:117> col:117 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ccd8b559c8 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ccd8b55dd8 <line:446:28, col:145> col:40 vfwprintf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ccd8b55bc8 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1ccd8b55c40 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ccd8b55cb8 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ccd8b530e0 <line:447:28, col:144> col:40 vfwscanf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ccd8b55eb8 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1ccd8b55f30 <col:103, col:119> col:119 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ccd8b55fa8 <col:128, col:136> col:136 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ccd8b533e0 <line:449:28, col:120> col:40 vwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ccd8b531c0 <col:79, col:95> col:95 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ccd8b53238 <col:104, col:112> col:112 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ccd8b53630 <line:450:28, col:119> col:40 vwscanf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ccd8b534b8 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ccd8b53530 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ccd8b53880 <line:452:28, col:122> col:40 vwprintf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ccd8b53708 <col:81, col:97> col:97 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ccd8b53780 <col:106, col:114> col:114 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ccd8b53ad0 <line:453:28, col:121> col:40 vwscanf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ccd8b53958 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ccd8b539d0 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ccd8b53e88 <line:457:21, col:173> col:33 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ccd8b53ba8 <col:73, col:83> col:83 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1ccd8b53c20 <col:94, col:101> col:101 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ccd8b53c98 <col:145, col:161> col:161 _Format 'const wchar_t *'
|-FunctionDecl 0x1ccd8b5c380 <line:461:21, col:187> col:33 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ccd8b53f68 <col:74, col:84> col:84 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1ccd8b53fe0 <col:95, col:102> col:102 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ccd8b54058 <col:146, col:162> col:162 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ccd8b5c170 <col:171, col:179> col:179 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ccd8b5c738 <line:462:40, col:156> col:52 vswscanf_s 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ccd8b5c468 <col:63, col:79> col:79 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1ccd8b5c4e0 <col:115, col:131> col:131 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ccd8b5c558 <col:140, col:148> col:148 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ccd8b5ca28 <line:466:28, col:145> col:40 vswscanf 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ccd8b5c818 <col:49, col:65> col:65 _srcBuf 'const wchar_t *'
| |-ParmVarDecl 0x1ccd8b5c890 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ccd8b5c908 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ccd8b5cd18 <line:468:28, col:184> col:40 _swprintf_c 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ccd8b5cb08 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ccd8b5cb80 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ccd8b5cbf8 <col:156, col:172> col:172 _Format 'const wchar_t *'
|-FunctionDecl 0x1ccd8b5d0a0 <line:469:28, col:198> col:40 _vswprintf_c 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ccd8b5cdf8 <col:82, col:92> col:92 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ccd8b5ce70 <col:106, col:113> col:113 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ccd8b5cee8 <col:157, col:173> col:173 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ccd8b5cf60 <col:182, col:190> col:190 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ccd8b5b510 <line:471:40, col:220> col:52 _snwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ccd8b5b188 <col:94, col:104> col:104 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ccd8b5b200 <col:118, col:125> col:125 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ccd8b5b278 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ccd8b5b2f0 <col:192, col:208> col:208 _Format 'const wchar_t *'
|-FunctionDecl 0x1ccd8b5ba18 <line:473:40, col:234> col:52 _vsnwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ccd8b5b5f8 <col:95, col:105> col:105 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ccd8b5b670 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ccd8b5b6e8 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ccd8b5b760 <col:193, col:209> col:209 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ccd8b5b7d8 <col:218, col:226> col:226 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ccd8b5bdd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:89 _snwprintf 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ccd8b5bbc8 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1ccd8b5bc40 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ccd8b5bcb8 <col:254, col:271> col:271 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1ccd8b5be90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ccd8b5d3b0 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:101 _vsnwprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ccd8b5c090 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1ccd8b5d180 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ccd8b5d1f8 <col:254, col:271> col:271 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ccd8b5d270 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x1ccd8b5d470 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ccd8b5d728 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:480:28, col:132> col:40 _fwprintf_p 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ccd8b5d5b0 <col:60, col:67> col:67 _File 'FILE *'
| `-ParmVarDecl 0x1ccd8b5d628 <col:104, col:120> col:120 _Format 'const wchar_t *'
|-FunctionDecl 0x1ccd8b5d8e0 <line:481:28, col:109> col:40 _wprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1ccd8b5d800 <col:81, col:97> col:97 _Format 'const wchar_t *'
|-FunctionDecl 0x1ccd8b5dbc0 <line:482:28, col:146> col:40 _vfwprintf_p 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ccd8b5d9b0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1ccd8b5da28 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ccd8b5daa0 <col:130, col:138> col:138 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ccd8b5de18 <line:483:28, col:123> col:40 _vwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ccd8b5dca0 <col:82, col:98> col:98 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ccd8b5dd18 <col:107, col:115> col:115 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ccd8b5ffd0 <line:484:28, col:178> col:40 _swprintf_p 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ccd8b5def0 <col:78, col:88> col:88 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ccd8b5df68 <col:102, col:109> col:109 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ccd8b5dfe0 <col:150, col:166> col:166 _Format 'const wchar_t *'
|-FunctionDecl 0x1ccd8b60358 <line:485:28, col:192> col:40 _vswprintf_p 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ccd8b600b0 <col:79, col:89> col:89 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ccd8b60128 <col:103, col:110> col:110 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ccd8b601a0 <col:151, col:167> col:167 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ccd8b60218 <col:176, col:184> col:184 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ccd8b60520 <line:486:24, col:107> col:36 _scwprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1ccd8b60440 <col:79, col:95> col:95 _Format 'const wchar_t *'
|-FunctionDecl 0x1ccd8b60768 <line:487:24, col:121> col:36 _vscwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ccd8b605f0 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ccd8b60668 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ccd8b60a70 <line:489:28, col:147> col:40 _wprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ccd8b60840 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ccd8b608b8 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ccd8b60cc0 <line:490:28, col:149> col:40 _wprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ccd8b60b48 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ccd8b60bc0 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ccd8b60f10 <line:491:28, col:149> col:40 _wprintf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ccd8b60d98 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ccd8b60e10 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ccd8b67338 <line:492:28, col:161> col:40 _vwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ccd8b67068 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ccd8b670e0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ccd8b67158 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ccd8b67628 <line:493:28, col:163> col:40 _vwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ccd8b67418 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ccd8b67490 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ccd8b67508 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ccd8b67918 <line:494:28, col:163> col:40 _vwprintf_s_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ccd8b67708 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ccd8b67780 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ccd8b677f8 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ccd8b67cd8 <line:496:28, col:170> col:40 _fwprintf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ccd8b679f8 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1ccd8b67a70 <col:114, col:130> col:130 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ccd8b67ae8 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ccd8b61ff0 <line:497:28, col:172> col:40 _fwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ccd8b67db8 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1ccd8b67e30 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ccd8b67ea8 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ccd8b622e0 <line:498:28, col:172> col:40 _fwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ccd8b620d0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1ccd8b62148 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ccd8b621c0 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ccd8b62730 <line:499:28, col:184> col:40 _vfwprintf_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ccd8b623c0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1ccd8b62438 <col:115, col:131> col:131 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ccd8b624b0 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ccd8b62528 <col:168, col:176> col:176 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ccd8b62ac0 <line:500:28, col:186> col:40 _vfwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ccd8b62818 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x1ccd8b62890 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ccd8b62908 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ccd8b62980 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ccd8b62e50 <line:501:28, col:186> col:40 _vfwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ccd8b62ba8 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x1ccd8b62c20 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ccd8b62c98 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ccd8b62d10 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ccd8b68360 <line:503:28, col:218> col:40 _swprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ccd8b62f38 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ccd8b68050 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ccd8b680c8 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ccd8b68140 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ccd8b686f0 <line:504:28, col:218> col:40 _swprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ccd8b68448 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ccd8b684c0 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ccd8b68538 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ccd8b685b0 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ccd8b68a80 <line:505:40, col:228> col:52 _swprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ccd8b687d8 <col:91, col:101> col:101 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ccd8b68850 <col:115, col:122> col:122 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ccd8b688c8 <col:172, col:188> col:188 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ccd8b68940 <col:206, col:216> col:216 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ccd8b68f88 <line:506:28, col:232> col:40 used _vswprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ccd8b68b68 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ccd8b68be0 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ccd8b68c58 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ccd8b68cd0 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ccd8b68d48 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ccd8b64378 <line:507:28, col:232> col:40 _vswprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ccd8b64038 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ccd8b640b0 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ccd8b64128 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ccd8b641a0 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ccd8b64218 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ccd8b647a8 <line:508:40, col:242> col:52 _vswprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ccd8b64468 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ccd8b644e0 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ccd8b64558 <col:173, col:189> col:189 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ccd8b645d0 <col:207, col:217> col:217 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ccd8b64648 <col:226, col:234> col:234 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ccd8b64a10 <line:510:24, col:145> col:36 _scwprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ccd8b64898 <col:89, col:105> col:105 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ccd8b64910 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ccd8b64c60 <line:511:24, col:147> col:36 _scwprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ccd8b64ae8 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ccd8b64b60 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ccd8b64f48 <line:512:24, col:161> col:36 _vscwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ccd8b64d38 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ccd8b64db0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ccd8b64e28 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ccd8b61378 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:514:255> col:80 _snwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ccd8b610d0 <col:117, col:127> col:127 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ccd8b61148 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ccd8b611c0 <col:199, col:215> col:215 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ccd8b61238 <col:233, col:243> col:243 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ccd8b61438 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ccd8b619a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:515:40, col:252> col:52 _snwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ccd8b61580 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ccd8b615f8 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ccd8b61670 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ccd8b616e8 <col:196, col:212> col:212 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ccd8b61760 <col:230, col:240> col:240 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ccd8b61ee0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:516:270> col:81 _vsnwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ccd8b61ba0 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ccd8b61c18 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ccd8b61c90 <col:201, col:217> col:217 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ccd8b61d08 <col:235, col:245> col:245 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1ccd8b61d80 <col:254, col:262> col:262 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1ccd8b65020 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ccd8b65630 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:517:40, col:266> col:52 _vsnwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ccd8b65168 <col:93, col:103> col:103 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ccd8b651e0 <col:117, col:124> col:124 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ccd8b65258 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ccd8b652d0 <col:197, col:213> col:213 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ccd8b65348 <col:231, col:241> col:241 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ccd8b653c0 <col:250, col:258> col:258 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ccd8b65b30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:110 _swprintf 'int (wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ccd8b658f8 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1ccd8b65970 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-DeprecatedAttr 0x1ccd8b65be0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1ccd8b65cf8 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1ccd8b63268 <col:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:134 _vswprintf 'int (wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ccd8b65fb0 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1ccd8b63010 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ccd8b63088 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x1ccd8b63320 <line:275:47, col:63> "This function or variable may be unsafe. Consider using vswprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1ccd8b63438 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1ccd8b639d8 <col:36, line:1961:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:110 __swprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ccd8b636f8 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1ccd8b63770 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ccd8b637e8 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-DeprecatedAttr 0x1ccd8b63a90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __swprintf_l_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1ccd8b63bb0 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1ccd8b6c2a0 <col:36, line:1962:166> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:124 __vswprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ccd8b63e70 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1ccd8b63ee8 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ccd8b63f60 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1ccd8b6c090 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1962:153, col:161> col:161 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x1ccd8b6c360 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vswprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1ccd8b6c480 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1ccd8b6c788 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:36:1, line:44:1> line:36:21 swprintf 'int (wchar_t *, size_t, const wchar_t *, ...)' static inline
| |-ParmVarDecl 0x1ccd8b6c5a8 <col:53, col:63> col:63 used _String 'wchar_t *'
| |-ParmVarDecl 0x1ccd8b6c620 <col:72, col:79> col:79 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ccd8b6c698 <col:117, col:133> col:133 used _Format 'const wchar_t *'
| `-CompoundStmt 0x1ccd8b6e350 <line:37:1, line:44:1>
|   |-DeclStmt 0x1ccd8b6c8d0 <line:38:5, col:21>
|   | `-VarDecl 0x1ccd8b6c868 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x1ccd8b6c968 <line:39:5, col:13>
|   | `-VarDecl 0x1ccd8b6c900 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x1ccd8b6ccc0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x1ccd8b6cca8 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1ccd8b6cbc0 <col:34> '<builtin fn type>' Function 0x1ccd8b6ca58 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x1ccd8b6cbf8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:40:19> 'va_list':'char *' lvalue Var 0x1ccd8b6c868 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x1ccd8b6cc30 <col:29> 'const wchar_t *' lvalue ParmVar 0x1ccd8b6c698 '_Format' 'const wchar_t *'
|   |-BinaryOperator 0x1ccd8b6cf80 <line:41:5, col:67> 'int' '='
|   | |-DeclRefExpr 0x1ccd8b6ccf0 <col:5> 'int' lvalue Var 0x1ccd8b6c900 '_Ret' 'int'
|   | `-CallExpr 0x1ccd8b6cec0 <col:12, col:67> 'int'
|   |   |-ImplicitCastExpr 0x1ccd8b6cea8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1ccd8b6cd28 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1ccd8b68f88 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x1ccd8b6cf08 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1ccd8b6cd48 <col:27> 'wchar_t *' lvalue ParmVar 0x1ccd8b6c5a8 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x1ccd8b6cf20 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1ccd8b6cd68 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1ccd8b6c620 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x1ccd8b6cf38 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1ccd8b6cd88 <col:44> 'const wchar_t *' lvalue ParmVar 0x1ccd8b6c698 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x1ccd8b6cf50 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|   |   | `-ParenExpr 0x1ccd8b6ce10 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x1ccd8b6cde8 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x1ccd8b6cda8 <col:26> 'int' 0
|   |   `-ImplicitCastExpr 0x1ccd8b6cf68 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:41:59> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1ccd8b6ce30 <col:59> 'va_list':'char *' lvalue Var 0x1ccd8b6c868 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x1ccd8b6e2e0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x1ccd8b6e2c8 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1ccd8b6e218 <col:34> '<builtin fn type>' Function 0x1ccd8b6e0b0 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x1ccd8b6e250 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:42:17> 'va_list':'char *' lvalue Var 0x1ccd8b6c868 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x1ccd8b6e340 <line:43:5, col:12>
|     `-ImplicitCastExpr 0x1ccd8b6e328 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1ccd8b6e308 <col:12> 'int' lvalue Var 0x1ccd8b6c900 '_Ret' 'int'
|-FunctionDecl 0x1ccd8b6ca58 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34> col:34 implicit used __builtin_va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x1ccd8b6caf8 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x1ccd8b6cb68 <col:34> Implicit
|-FunctionDecl 0x1ccd8b6e0b0 <line:27:34> col:34 implicit used __builtin_va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x1ccd8b6e150 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x1ccd8b6e1c0 <col:34> Implicit
|-FunctionDecl 0x1ccd8b6e648 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:49:1, line:52:1> line:49:31 vswprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)' static inline
| |-ParmVarDecl 0x1ccd8b6e3a0 <col:64, col:74> col:74 used _String 'wchar_t *'
| |-ParmVarDecl 0x1ccd8b6e418 <col:83, col:90> col:90 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ccd8b6e490 <col:138, col:154> col:154 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ccd8b6e508 <col:163, col:171> col:171 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x1ccd8b6e930 <line:50:1, line:52:1>
|   `-ReturnStmt 0x1ccd8b6e920 <line:51:5, col:62>
|     `-CallExpr 0x1ccd8b6e860 <col:12, col:62> 'int'
|       |-ImplicitCastExpr 0x1ccd8b6e848 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1ccd8b6e720 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1ccd8b68f88 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x1ccd8b6e8a8 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1ccd8b6e740 <col:27> 'wchar_t *' lvalue ParmVar 0x1ccd8b6e3a0 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x1ccd8b6e8c0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x1ccd8b6e760 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1ccd8b6e418 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x1ccd8b6e8d8 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1ccd8b6e780 <col:44> 'const wchar_t *' lvalue ParmVar 0x1ccd8b6e490 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x1ccd8b6e8f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|       | `-ParenExpr 0x1ccd8b6e808 <col:17, col:27> 'void *'
|       |   `-CStyleCastExpr 0x1ccd8b6e7e0 <col:18, col:26> 'void *' <NullToPointer>
|       |     `-IntegerLiteral 0x1ccd8b6e7a0 <col:26> 'int' 0
|       `-ImplicitCastExpr 0x1ccd8b6e908 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:51:59> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x1ccd8b6e828 <col:59> 'va_list':'char *' lvalue ParmVar 0x1ccd8b6e508 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x1ccd8b6ebd0 <line:60:1, line:68:1> line:60:21 _swprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)' static inline
| |-ParmVarDecl 0x1ccd8b6e958 <col:56, col:66> col:66 used _String 'wchar_t *'
| |-ParmVarDecl 0x1ccd8b6e9d0 <col:75, col:82> col:82 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ccd8b6ea48 <col:130, col:146> col:146 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ccd8b6eac0 <col:155, col:165> col:165 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| `-CompoundStmt 0x1ccd8b6f168 <line:61:1, line:68:1>
|   |-DeclStmt 0x1ccd8b6ed20 <line:62:5, col:21>
|   | `-VarDecl 0x1ccd8b6ecb8 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x1ccd8b6edb8 <line:63:5, col:13>
|   | `-VarDecl 0x1ccd8b6ed50 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x1ccd8b6ee60 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x1ccd8b6ee48 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1ccd8b6edd0 <col:34> '<builtin fn type>' Function 0x1ccd8b6ca58 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x1ccd8b6edf0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:64:19> 'va_list':'char *' lvalue Var 0x1ccd8b6ecb8 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x1ccd8b6ee28 <col:29> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1ccd8b6eac0 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |-BinaryOperator 0x1ccd8b6f060 <line:65:5, col:72> 'int' '='
|   | |-DeclRefExpr 0x1ccd8b6ee90 <col:5> 'int' lvalue Var 0x1ccd8b6ed50 '_Ret' 'int'
|   | `-CallExpr 0x1ccd8b6efa0 <col:12, col:72> 'int'
|   |   |-ImplicitCastExpr 0x1ccd8b6ef88 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1ccd8b6eec8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1ccd8b68f88 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x1ccd8b6efe8 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1ccd8b6eee8 <col:27> 'wchar_t *' lvalue ParmVar 0x1ccd8b6e958 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x1ccd8b6f000 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1ccd8b6ef08 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1ccd8b6e9d0 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x1ccd8b6f018 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1ccd8b6ef28 <col:44> 'const wchar_t *' lvalue ParmVar 0x1ccd8b6ea48 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x1ccd8b6f030 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1ccd8b6ef48 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1ccd8b6eac0 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |   `-ImplicitCastExpr 0x1ccd8b6f048 <col:64> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1ccd8b6ef68 <col:64> 'va_list':'char *' lvalue Var 0x1ccd8b6ecb8 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x1ccd8b6f0f8 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x1ccd8b6f0e0 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1ccd8b6f080 <col:34> '<builtin fn type>' Function 0x1ccd8b6e0b0 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x1ccd8b6f0c0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:66:17> 'va_list':'char *' lvalue Var 0x1ccd8b6ecb8 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x1ccd8b6f158 <line:67:5, col:12>
|     `-ImplicitCastExpr 0x1ccd8b6f140 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1ccd8b6f120 <col:12> 'int' lvalue Var 0x1ccd8b6ed50 '_Ret' 'int'
|-FunctionDecl 0x1ccd8b6f4f8 <line:73:1, line:76:1> line:73:31 _vswprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' static inline
| |-ParmVarDecl 0x1ccd8b6f1b8 <col:67, col:77> col:77 used _String 'wchar_t *'
| |-ParmVarDecl 0x1ccd8b6f230 <col:86, col:93> col:93 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ccd8b6f2a8 <col:141, col:157> col:157 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ccd8b6f320 <col:166, col:176> col:176 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1ccd8b6f398 <col:187, col:195> col:195 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x1ccd8b6f780 <line:74:1, line:76:1>
|   `-ReturnStmt 0x1ccd8b6f770 <line:75:5, col:67>
|     `-CallExpr 0x1ccd8b6f6b0 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x1ccd8b6f698 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1ccd8b6f5d8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1ccd8b68f88 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x1ccd8b6f6f8 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1ccd8b6f5f8 <col:27> 'wchar_t *' lvalue ParmVar 0x1ccd8b6f1b8 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x1ccd8b6f710 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x1ccd8b6f618 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1ccd8b6f230 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x1ccd8b6f728 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1ccd8b6f638 <col:44> 'const wchar_t *' lvalue ParmVar 0x1ccd8b6f2a8 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x1ccd8b6f740 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|       | `-DeclRefExpr 0x1ccd8b6f658 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1ccd8b6f320 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|       `-ImplicitCastExpr 0x1ccd8b6f758 <col:64> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x1ccd8b6f678 <col:64> 'va_list':'char *' lvalue ParmVar 0x1ccd8b6f398 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x1ccd8b6f9c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:555:24, col:129> col:42 _wtempnam 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1ccd8b6f7a8 <col:63, col:79> col:79 _Directory 'const wchar_t *'
| `-ParmVarDecl 0x1ccd8b6f820 <col:102, col:118> col:118 _FilePrefix 'const wchar_t *'
|-FunctionDecl 0x1ccd8b6fc18 <line:561:24, col:119> col:36 _vscwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ccd8b6faa0 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ccd8b6fb18 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ccd8b6ff00 <line:562:24, col:159> col:36 _vscwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ccd8b6fcf0 <col:90, col:106> col:106 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ccd8b6fd68 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ccd8b6fde0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ccd8b70248 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:563:158> col:71 fwscanf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ccd8b700d0 <col:87, col:94> col:94 _File 'FILE *'
| |-ParmVarDecl 0x1ccd8b70148 <col:130, col:146> col:146 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1ccd8b702f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ccd8b70708 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:564:206> col:78 _fwscanf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ccd8b704f8 <col:97, col:104> col:104 _File 'FILE *'
| |-ParmVarDecl 0x1ccd8b70570 <col:150, col:166> col:166 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ccd8b705e8 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ccd8b707c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ccd8b70a78 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:568:28, col:131> col:40 fwscanf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ccd8b70900 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x1ccd8b70978 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x1ccd8b70d60 <line:570:28, col:172> col:40 _fwscanf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ccd8b70b50 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1ccd8b70bc8 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ccd8b70c40 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ccd8b690d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:571:165> col:71 swscanf 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ccd8b70f00 <col:86, col:102> col:102 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1ccd8b70f78 <col:137, col:153> col:153 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1ccd8b69180 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using swscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ccd8b69658 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:572:213> col:78 _swscanf_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ccd8b69380 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1ccd8b693f8 <col:157, col:173> col:173 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ccd8b69470 <col:191, col:201> col:201 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ccd8b69710 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ccd8b699c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:574:40, col:149> col:52 swscanf_s 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ccd8b69850 <col:69, col:84> col:84 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1ccd8b698c8 <col:121, col:137> col:137 _Format 'const wchar_t *'
|-FunctionDecl 0x1ccd8b69cb0 <line:576:40, col:191> col:52 _swscanf_s_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ccd8b69aa0 <col:72, col:88> col:88 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1ccd8b69b18 <col:135, col:151> col:151 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ccd8b69b90 <col:169, col:179> col:179 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ccd8b6a158 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:577:219> col:77 _snwscanf 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ccd8b69e50 <col:117, col:133> col:133 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1ccd8b69ec8 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ccd8b69f40 <col:191, col:207> col:207 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1ccd8b6a210 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ccd8b6a790 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:578:261> col:79 _snwscanf_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ccd8b6a410 <col:121, col:137> col:137 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1ccd8b6a488 <col:148, col:155> col:155 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ccd8b6a500 <col:205, col:221> col:221 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ccd8b6a578 <col:239, col:249> col:249 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ccd8b6a850 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ccd8b6aba0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:579:40, col:198> col:52 _snwscanf_s 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ccd8b6a990 <col:94, col:110> col:110 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1ccd8b6aa08 <col:121, col:128> col:128 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ccd8b6aa80 <col:170, col:186> col:186 _Format 'const wchar_t *'
|-FunctionDecl 0x1ccd8b6af28 <line:580:40, col:238> col:52 _snwscanf_s_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ccd8b6ac80 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1ccd8b6acf8 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ccd8b6ad70 <col:182, col:198> col:198 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ccd8b6ade8 <col:216, col:226> col:226 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ccd8b71290 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:581:134> col:70 wscanf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| |-ParmVarDecl 0x1ccd8b711b0 <col:106, col:122> col:122 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1ccd8b71338 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ccd8b716b0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:582:182> col:77 _wscanf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ccd8b71538 <col:126, col:142> col:142 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ccd8b715b0 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ccd8b71760 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ccd8b71980 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:584:40, col:120> col:52 wscanf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1ccd8b718a0 <col:92, col:108> col:108 _Format 'const wchar_t *'
|-FunctionDecl 0x1ccd8b71bc8 <line:586:40, col:161> col:52 _wscanf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ccd8b71a50 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ccd8b71ac8 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ccd8b71ec8 <line:589:24, col:99> col:39 _wfdopen 'FILE *(int, const wchar_t *) __attribute__((cdecl))':'FILE *(int, const wchar_t *)'
| |-ParmVarDecl 0x1ccd8b71ca8 <col:53, col:57> col:57 _FileHandle 'int'
| `-ParmVarDecl 0x1ccd8b71d20 <col:78, col:94> col:94 _Mode 'const wchar_t *'
|-FunctionDecl 0x1ccd8b6b228 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:590:144> col:74 _wfopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1ccd8b72060 <col:89, col:105> col:105 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1ccd8b6b080 <col:123, col:139> col:139 _Mode 'const wchar_t *'
| `-DeprecatedAttr 0x1ccd8b6b2d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ccd8b6b6e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:591:28, col:157> col:44 _wfopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1ccd8b6b420 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x1ccd8b6b498 <col:102, col:118> col:118 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x1ccd8b6b510 <col:136, col:152> col:152 _Mode 'const wchar_t *'
|-FunctionDecl 0x1ccd8b6bb40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:592:173> col:76 _wfreopen 'FILE *(const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1ccd8b6b880 <col:93, col:109> col:109 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1ccd8b6b8f8 <col:127, col:143> col:143 _Mode 'const wchar_t *'
| |-ParmVarDecl 0x1ccd8b6b970 <col:158, col:165> col:165 _OldFile 'FILE *'
| `-DeprecatedAttr 0x1ccd8b6bbf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfreopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ccd8b73148 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:593:28, col:184> col:44 _wfreopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1ccd8b6bd40 <col:82, col:90> col:90 _File 'FILE **'
| |-ParmVarDecl 0x1ccd8b6bdb8 <col:104, col:120> col:120 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1ccd8b6be30 <col:138, col:154> col:154 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x1ccd8b6bea8 <col:169, col:176> col:176 _OldFile 'FILE *'
|-FunctionDecl 0x1ccd8b733a0 <line:597:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x1ccd8b73230 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x1ccd8b735e0 <line:600:24, col:107> col:39 _wpopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1ccd8b73470 <col:54, col:69> col:69 _Command 'const wchar_t *'
| `-ParmVarDecl 0x1ccd8b734e8 <col:86, col:102> col:102 _Mode 'const wchar_t *'
|-FunctionDecl 0x1ccd8b73798 <line:602:9, col:62> col:21 _wremove 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1ccd8b736b8 <col:37, col:53> col:53 _Filename 'const wchar_t *'
|-FunctionDecl 0x1ccd8b73a88 <line:603:28, col:127> col:44 _wtmpnam_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1ccd8b73868 <col:84, col:94> col:94 _DstBuf 'wchar_t *'
| `-ParmVarDecl 0x1ccd8b738e0 <col:108, col:115> col:115 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1ccd8b73cf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:605:82 _wtmpnam 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1ccd8b73c20 <col:118, col:127> col:127 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x1ccd8b73da0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wtmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ccd8b73fb8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:607:28, col:78> col:43 _fgetwc_nolock 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1ccd8b73ee0 <col:66, col:73> col:73 _File 'FILE *'
|-FunctionDecl 0x1ccd8b76228 <line:608:28, col:96> col:43 _fputwc_nolock 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1ccd8b74088 <col:63, col:71> col:71 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1ccd8b76130 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1ccd8b76470 <line:609:28, col:96> col:43 _ungetwc_nolock 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x1ccd8b76300 <col:64, col:71> col:71 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ccd8b76378 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1ccd8b76620 <line:670:9, col:53> col:22 _lock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1ccd8b76548 <col:41, col:48> col:48 _File 'FILE *'
|-FunctionDecl 0x1ccd8b767c8 <line:671:9, col:55> col:22 _unlock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1ccd8b766f0 <col:43, col:50> col:50 _File 'FILE *'
|-FunctionDecl 0x1ccd8b76978 <line:673:28, col:75> col:40 _fclose_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1ccd8b76898 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x1ccd8b76b28 <line:674:28, col:79> col:40 _fflush_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1ccd8b76a48 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x1ccd8b76ea0 <line:675:28, col:179> col:43 _fread_nolock 'size_t (void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1ccd8b76c00 <col:97, col:104> col:104 _DstBuf 'void *'
| |-ParmVarDecl 0x1ccd8b76c78 <col:118, col:125> col:125 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ccd8b76cf0 <col:144, col:151> col:151 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ccd8b76d68 <col:167, col:174> col:174 _File 'FILE *'
|-FunctionDecl 0x1ccd8b752f0 <line:676:28, col:203> col:43 _fread_nolock_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1ccd8b76f90 <col:99, col:106> col:106 _DstBuf 'void *'
| |-ParmVarDecl 0x1ccd8b77008 <col:120, col:127> col:127 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ccd8b77080 <col:142, col:149> col:149 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ccd8b75120 <col:168, col:175> col:175 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ccd8b75198 <col:191, col:198> col:198 _File 'FILE *'
|-FunctionDecl 0x1ccd8b75600 <line:677:28, col:111> col:40 _fseek_nolock 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x1ccd8b753e0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1ccd8b75460 <col:81, col:86> col:86 _Offset 'long'
| `-ParmVarDecl 0x1ccd8b754e0 <col:100, col:104> col:104 _Origin 'int'
|-FunctionDecl 0x1ccd8b757c0 <line:678:24, col:71> col:37 _ftell_nolock 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x1ccd8b756e0 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x1ccd8b75ab0 <line:679:28, col:117> col:40 _fseeki64_nolock 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x1ccd8b75890 <col:65, col:72> col:72 _File 'FILE *'
| |-ParmVarDecl 0x1ccd8b75910 <col:84, col:92> col:92 _Offset 'long long'
| `-ParmVarDecl 0x1ccd8b75990 <col:106, col:110> col:110 _Origin 'int'
|-FunctionDecl 0x1ccd8b75c70 <line:680:24, col:77> col:40 _ftelli64_nolock 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x1ccd8b75b90 <col:65, col:72> col:72 _File 'FILE *'
|-FunctionDecl 0x1ccd8b75fe8 <line:681:28, col:170> col:43 _fwrite_nolock 'size_t (const void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (const void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1ccd8b75d48 <col:89, col:102> col:102 _DstBuf 'const void *'
| |-ParmVarDecl 0x1ccd8b75dc0 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ccd8b75e38 <col:135, col:142> col:142 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ccd8b75eb0 <col:158, col:165> col:165 _File 'FILE *'
|-FunctionDecl 0x1ccd8b7b2f8 <line:682:28, col:89> col:40 _ungetc_nolock 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1ccd8b7b180 <col:60, col:64> col:64 _Ch 'int'
| `-ParmVarDecl 0x1ccd8b7b1f8 <col:77, col:84> col:84 _File 'FILE *'
|-FunctionDecl 0x1ccd8b7b630 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:709:136> col:57 tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x1ccd8b7b4b0 <col:76, col:89> col:89 _Directory 'const char *'
| |-ParmVarDecl 0x1ccd8b7b530 <col:112, col:125> col:125 _FilePrefix 'const char *'
| `-DeprecatedAttr 0x1ccd8b7b6e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tempnam. See online help for details." ""
|-FunctionDecl 0x1ccd8b7b998 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:715:89> col:75 fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1ccd8b7ba38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcloseall. See online help for details." ""
|-FunctionDecl 0x1ccd8b7bd78 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:716:127> col:71 fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x1ccd8b7bc00 <col:83, col:87> col:87 _FileHandle 'int'
| |-ParmVarDecl 0x1ccd8b7bc80 <col:107, col:120> col:120 _Format 'const char *'
| `-DeprecatedAttr 0x1ccd8b7be28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fdopen. See online help for details." ""
|-FunctionDecl 0x1ccd8b77140 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:717:87> col:74 fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1ccd8b771e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fgetchar. See online help for details." ""
|-FunctionDecl 0x1ccd8b77480 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:718:92> col:68 fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x1ccd8b773a0 <col:80, col:87> col:87 _File 'FILE *'
| `-DeprecatedAttr 0x1ccd8b77528 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fileno. See online help for details." ""
|-FunctionDecl 0x1ccd8b777a8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:719:87> col:74 flushall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1ccd8b77848 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _flushall. See online help for details." ""
|-FunctionDecl 0x1ccd8b77af0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:720:95> col:74 fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| |-ParmVarDecl 0x1ccd8b77a10 <col:88, col:92> col:92 _Ch 'int'
| `-DeprecatedAttr 0x1ccd8b77b98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fputchar. See online help for details." ""
|-FunctionDecl 0x1ccd8b77e78 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:721:91> col:66 getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x1ccd8b77d98 <col:79, col:86> col:86 _File 'FILE *'
| `-DeprecatedAttr 0x1ccd8b77f20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _getw. See online help for details." ""
|-FunctionDecl 0x1ccd8b792d8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:722:109> col:70 putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1ccd8b79160 <col:80, col:84> col:84 _Ch 'int'
| |-ParmVarDecl 0x1ccd8b791d8 <col:97, col:104> col:104 _File 'FILE *'
| `-DeprecatedAttr 0x1ccd8b79388 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putw. See online help for details." ""
|-FunctionDecl 0x1ccd8b79648 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:723:77> col:67 rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1ccd8b796e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _rmtmp. See online help for details." ""
|-FunctionDecl 0x1ccd8b79920 <D:\Microsoft Visual Studio 12.0\VC\include\errno.h:31:9, col:41> col:30 _errno 'int *(void) __attribute__((cdecl))':'int *(void)' extern
|-FunctionDecl 0x1ccd8b79b30 <line:34:1, col:43> col:17 _set_errno 'errno_t (int) __attribute__((cdecl))':'errno_t (int)'
| `-ParmVarDecl 0x1ccd8b799f0 <col:33, col:37> col:37 _Value 'int'
|-FunctionDecl 0x1ccd8b79d80 <line:35:1, col:46> col:17 _get_errno 'errno_t (int *) __attribute__((cdecl))':'errno_t (int *)'
| `-ParmVarDecl 0x1ccd8b79c08 <col:34, col:40> col:40 _Value 'int *'
|-FunctionDecl 0x1ccd8b7a040 <.//openssl//file_jk/before\crypto\evp\bio_enc.c:17:1, col:54> col:12 invalid enc_write 'int (int *, const char *, int)' static
| |-ParmVarDecl 0x1ccd8b79e58 <col:22, col:27> col:27 invalid h 'int *'
| |-ParmVarDecl 0x1ccd8b79ed8 <col:30, col:42> col:42 buf 'const char *'
| `-ParmVarDecl 0x1ccd8b79f58 <col:47, col:51> col:51 num 'int'
|-FunctionDecl 0x1ccd8b85c50 <line:18:1, col:48> col:12 invalid enc_read 'int (int *, char *, int)' static
| |-ParmVarDecl 0x1ccd8b85a60 <col:21, col:26> col:26 invalid h 'int *'
| |-ParmVarDecl 0x1ccd8b85ae0 <col:29, col:35> col:35 buf 'char *'
| `-ParmVarDecl 0x1ccd8b85b60 <col:40, col:44> col:44 size 'int'
|-FunctionDecl 0x1ccd8b85fa0 <line:25:1, col:60> col:13 invalid enc_ctrl 'long (int *, int, long, void *)' static
| |-ParmVarDecl 0x1ccd8b85d20 <col:22, col:27> col:27 invalid h 'int *'
| |-ParmVarDecl 0x1ccd8b85da0 <col:30, col:34> col:34 cmd 'int'
| |-ParmVarDecl 0x1ccd8b85e20 <col:39, col:44> col:44 arg1 'long'
| `-ParmVarDecl 0x1ccd8b85ea0 <col:50, col:56> col:56 arg2 'void *'
|-FunctionDecl 0x1ccd8b86110 <line:26:1, col:26> col:12 invalid enc_new 'int (int *)' static
| `-ParmVarDecl 0x1ccd8b86078 <col:20, col:25> col:25 invalid h 'int *'
|-FunctionDecl 0x1ccd8b86268 <line:27:1, col:30> col:12 invalid enc_free 'int (int *)' static
| `-ParmVarDecl 0x1ccd8b861d0 <col:21, col:26> col:26 invalid data 'int *'
|-FunctionDecl 0x1ccd8b86510 <line:28:1, col:64> col:13 invalid enc_callback_ctrl 'long (int *, int, int *)' static
| |-ParmVarDecl 0x1ccd8b86328 <col:31, col:36> col:36 invalid h 'int *'
| |-ParmVarDecl 0x1ccd8b863a8 <col:39, col:43> col:43 cmd 'int'
| `-ParmVarDecl 0x1ccd8b86428 <col:48, col:61> col:61 invalid fps 'int *'
|-RecordDecl 0x1ccd8b865c8 <line:33:9, line:46:1> line:33:16 invalid struct enc_struct definition
| |-FieldDecl 0x1ccd8b86698 <line:34:5, col:9> col:9 referenced buf_len 'int'
| |-FieldDecl 0x1ccd8b86708 <line:35:5, col:9> col:9 referenced buf_off 'int'
| |-FieldDecl 0x1ccd8b86778 <line:36:5, col:9> col:9 referenced cont 'int'
| |-FieldDecl 0x1ccd8b867e8 <line:37:5, col:9> col:9 referenced finished 'int'
| |-FieldDecl 0x1ccd8b86858 <line:38:5, col:9> col:9 referenced ok 'int'
| |-FieldDecl 0x1ccd8b868c8 <line:39:5, col:21> col:21 invalid cipher 'int *'
| |-FieldDecl 0x1ccd8b86960 <line:40:5, col:20> col:20 referenced read_start 'unsigned char *'
| |-FieldDecl 0x1ccd8b869d0 <col:5, col:33> col:33 referenced read_end 'unsigned char *'
| `-FieldDecl 0x1ccd8b88b58 <line:45:5, col:19> col:19 invalid buf 'unsigned char'
|-TypedefDecl 0x1ccd8b88c08 <line:33:1, line:46:3> col:3 referenced BIO_ENC_CTX 'struct enc_struct':'struct enc_struct'
| `-ElaboratedType 0x1ccd8b88bb0 'struct enc_struct' sugar
|   `-RecordType 0x1ccd8b86660 'struct enc_struct'
|     `-Record 0x1ccd8b865c8 'enc_struct'
|-VarDecl 0x1ccd8b88c90 <line:48:1, col:25> col:25 invalid methods_enc 'const int' static
|-FunctionDecl 0x1ccd8b88f30 <line:61:1, line:64:1> line:61:19 invalid BIO_f_cipher 'const int *(void)'
| `-CompoundStmt 0x1ccd8b88fe8 <line:62:1, line:64:1>
|-FunctionDecl 0x1ccd8b890a8 <line:66:1, line:86:1> line:66:12 invalid enc_new 'int (int *)' static
| |-ParmVarDecl 0x1ccd8b89010 <col:20, col:25> col:25 invalid bi 'int *'
| `-CompoundStmt 0x1ccd8b82fb0 <line:67:1, line:86:1>
|   |-DeclStmt 0x1ccd8b89260 <line:68:5, col:21>
|   | `-VarDecl 0x1ccd8b891f8 <col:5, col:18> col:18 used ctx 'BIO_ENC_CTX *'
|   |-BinaryOperator 0x1ccd8b89500 <line:70:5, col:38> 'BIO_ENC_CTX *' '='
|   | |-DeclRefExpr 0x1ccd8b89278 <col:5> 'BIO_ENC_CTX *' lvalue Var 0x1ccd8b891f8 'ctx' 'BIO_ENC_CTX *'
|   | `-ImplicitCastExpr 0x1ccd8b894e8 <col:11, col:38> 'BIO_ENC_CTX *' <IntegralToPointer>
|   |   `-CallExpr 0x1ccd8b894c0 <col:11, col:38> 'int'
|   |     |-ImplicitCastExpr 0x1ccd8b894a8 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1ccd8b893c8 <col:11> 'int ()' Function 0x1ccd8b89300 'OPENSSL_zalloc' 'int ()'
|   |     `-UnaryExprOrTypeTraitExpr 0x1ccd8b89458 <col:26, col:37> 'unsigned long long' sizeof
|   |       `-ParenExpr 0x1ccd8b89438 <col:32, col:37> 'BIO_ENC_CTX':'struct enc_struct' lvalue
|   |         `-UnaryOperator 0x1ccd8b89420 <col:33, col:34> 'BIO_ENC_CTX':'struct enc_struct' lvalue prefix '*' cannot overflow
|   |           `-ImplicitCastExpr 0x1ccd8b89408 <col:34> 'BIO_ENC_CTX *' <LValueToRValue>
|   |             `-DeclRefExpr 0x1ccd8b893e8 <col:34> 'BIO_ENC_CTX *' lvalue Var 0x1ccd8b891f8 'ctx' 'BIO_ENC_CTX *' non_odr_use_unevaluated
|   |-IfStmt 0x1ccd8b89650 <line:71:5, line:72:16>
|   | |-BinaryOperator 0x1ccd8b895f8 <line:71:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x1ccd8b895c8 <.//openssl//file_jk/before\crypto\evp\bio_enc.c:71:9> 'BIO_ENC_CTX *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1ccd8b89520 <col:9> 'BIO_ENC_CTX *' lvalue Var 0x1ccd8b891f8 'ctx' 'BIO_ENC_CTX *'
|   | | `-ImplicitCastExpr 0x1ccd8b895e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'BIO_ENC_CTX *' <BitCast>
|   | |   `-ParenExpr 0x1ccd8b895a8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1ccd8b89580 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1ccd8b89540 <col:26> 'int' 0
|   | `-ReturnStmt 0x1ccd8b89640 <.//openssl//file_jk/before\crypto\evp\bio_enc.c:72:9, col:16>
|   |   `-IntegerLiteral 0x1ccd8b89618 <col:16> 'int' 0
|   |-IfStmt 0x1ccd8b82a48 <line:75:5, line:78:5>
|   | |-OpaqueValueExpr 0x1ccd8b82a30 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1ccd8b89a68 <line:75:30, line:78:5>
|   |   |-CallExpr 0x1ccd8b899f0 <line:76:9, col:25> 'int'
|   |   | |-ImplicitCastExpr 0x1ccd8b899d8 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1ccd8b89998 <col:9> 'int ()' Function 0x1ccd8b898d0 'OPENSSL_free' 'int ()'
|   |   | `-ImplicitCastExpr 0x1ccd8b89a18 <col:22> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1ccd8b899b8 <col:22> 'BIO_ENC_CTX *' lvalue Var 0x1ccd8b891f8 'ctx' 'BIO_ENC_CTX *'
|   |   `-ReturnStmt 0x1ccd8b89a58 <line:77:9, col:16>
|   |     `-IntegerLiteral 0x1ccd8b89a30 <col:16> 'int' 0
|   |-BinaryOperator 0x1ccd8b82af0 <line:79:5, col:17> 'int' '='
|   | |-MemberExpr 0x1ccd8b82a98 <col:5, col:10> 'int' lvalue ->cont 0x1ccd8b86778
|   | | `-ImplicitCastExpr 0x1ccd8b82a80 <col:5> 'BIO_ENC_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1ccd8b82a60 <col:5> 'BIO_ENC_CTX *' lvalue Var 0x1ccd8b891f8 'ctx' 'BIO_ENC_CTX *'
|   | `-IntegerLiteral 0x1ccd8b82ac8 <col:17> 'int' 1
|   |-BinaryOperator 0x1ccd8b82ba0 <line:80:5, col:15> 'int' '='
|   | |-MemberExpr 0x1ccd8b82b48 <col:5, col:10> 'int' lvalue ->ok 0x1ccd8b86858
|   | | `-ImplicitCastExpr 0x1ccd8b82b30 <col:5> 'BIO_ENC_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1ccd8b82b10 <col:5> 'BIO_ENC_CTX *' lvalue Var 0x1ccd8b891f8 'ctx' 'BIO_ENC_CTX *'
|   | `-IntegerLiteral 0x1ccd8b82b78 <col:15> 'int' 1
|   `-ReturnStmt 0x1ccd8b82fa0 <line:85:5, col:12>
|     `-IntegerLiteral 0x1ccd8b82f78 <col:12> 'int' 1
|-FunctionDecl 0x1ccd8b830a8 <line:88:1, line:105:1> line:88:12 invalid enc_free 'int (int *)' static
| |-ParmVarDecl 0x1ccd8b83010 <col:21, col:26> col:26 invalid a 'int *'
| `-CompoundStmt 0x1ccd8b839a8 <line:89:1, line:105:1>
|   |-DeclStmt 0x1ccd8b831e0 <line:90:5, col:19>
|   | `-VarDecl 0x1ccd8b83178 <col:5, col:18> col:18 used b 'BIO_ENC_CTX *'
|   |-IfStmt 0x1ccd8b832d0 <line:92:5, line:93:16>
|   | |-OpaqueValueExpr 0x1ccd8b832b8 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1ccd8b832a8 <col:9, col:16>
|   |   `-IntegerLiteral 0x1ccd8b83280 <col:16> 'int' 0
|   |-IfStmt 0x1ccd8b83560 <line:96:5, line:97:16>
|   | |-BinaryOperator 0x1ccd8b83508 <line:96:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x1ccd8b834d8 <.//openssl//file_jk/before\crypto\evp\bio_enc.c:96:9> 'BIO_ENC_CTX *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1ccd8b83430 <col:9> 'BIO_ENC_CTX *' lvalue Var 0x1ccd8b83178 'b' 'BIO_ENC_CTX *'
|   | | `-ImplicitCastExpr 0x1ccd8b834f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'BIO_ENC_CTX *' <BitCast>
|   | |   `-ParenExpr 0x1ccd8b834b8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1ccd8b83490 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1ccd8b83450 <col:26> 'int' 0
|   | `-ReturnStmt 0x1ccd8b83550 <.//openssl//file_jk/before\crypto\evp\bio_enc.c:97:9, col:16>
|   |   `-IntegerLiteral 0x1ccd8b83528 <col:16> 'int' 0
|   |-CallExpr 0x1ccd8b83838 <line:100:5, col:46> 'int'
|   | |-ImplicitCastExpr 0x1ccd8b83820 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ccd8b837b0 <col:5> 'int ()' Function 0x1ccd8b836e8 'OPENSSL_clear_free' 'int ()'
|   | |-ImplicitCastExpr 0x1ccd8b83868 <col:24> 'BIO_ENC_CTX *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1ccd8b837d0 <col:24> 'BIO_ENC_CTX *' lvalue Var 0x1ccd8b83178 'b' 'BIO_ENC_CTX *'
|   | `-UnaryExprOrTypeTraitExpr 0x1ccd8b83800 <col:27, col:45> 'unsigned long long' sizeof 'BIO_ENC_CTX':'struct enc_struct'
|   `-ReturnStmt 0x1ccd8b83998 <line:104:5, col:12>
|     `-IntegerLiteral 0x1ccd8b83970 <col:12> 'int' 1
|-FunctionDecl 0x1ccd8b81bc8 <line:107:1, line:233:1> line:107:12 invalid enc_read 'int (int *, char *, int)' static
| |-ParmVarDecl 0x1ccd8b81a20 <col:21, col:26> col:26 invalid b 'int *'
| |-ParmVarDecl 0x1ccd8b81aa0 <col:29, col:35> col:35 used out 'char *'
| |-ParmVarDecl 0x1ccd8b81b20 <col:40, col:44> col:44 used outl 'int'
| `-CompoundStmt 0x1ccd8b8c1a8 <line:108:1, line:233:1>
|   |-DeclStmt 0x1ccd8b81e60 <line:109:5, col:30>
|   | |-VarDecl 0x1ccd8b81cb0 <col:5, col:15> col:9 used ret 'int' cinit
|   | | `-IntegerLiteral 0x1ccd8b81d18 <col:15> 'int' 0
|   | |-VarDecl 0x1ccd8b81d58 <col:5, col:18> col:18 used i 'int'
|   | `-VarDecl 0x1ccd8b81dd8 <col:5, col:21> col:21 used blocksize 'int'
|   |-DeclStmt 0x1ccd8b81ef0 <line:110:5, col:21>
|   | `-VarDecl 0x1ccd8b81e88 <col:5, col:18> col:18 used ctx 'BIO_ENC_CTX *'
|   |-IfStmt 0x1ccd8b82070 <line:113:5, line:114:18>
|   | |-BinaryOperator 0x1ccd8b81ff8 <line:113:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x1ccd8b81fc8 <.//openssl//file_jk/before\crypto\evp\bio_enc.c:113:9> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1ccd8b81f08 <col:9> 'char *' lvalue ParmVar 0x1ccd8b81aa0 'out' 'char *'
|   | | `-ImplicitCastExpr 0x1ccd8b81fe0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x1ccd8b81fa8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1ccd8b81f80 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1ccd8b81f40 <col:26> 'int' 0
|   | `-ReturnStmt 0x1ccd8b82060 <.//openssl//file_jk/before\crypto\evp\bio_enc.c:114:9, col:18>
|   |   `-ParenExpr 0x1ccd8b82040 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x1ccd8b82018 <col:17> 'int' 0
|   |-IfStmt 0x1ccd8b823e0 <line:118:5, line:119:16>
|   | |-OpaqueValueExpr 0x1ccd8b823c8 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1ccd8b823b8 <col:9, col:16>
|   |   `-IntegerLiteral 0x1ccd8b82390 <col:16> 'int' 0
|   |-IfStmt 0x1ccd8b91120 <line:122:5, line:135:5>
|   | |-BinaryOperator 0x1ccd8b824a0 <line:122:9, col:24> 'int' '>'
|   | | |-ImplicitCastExpr 0x1ccd8b82488 <col:9, col:14> 'int' <LValueToRValue>
|   | | | `-MemberExpr 0x1ccd8b82430 <col:9, col:14> 'int' lvalue ->buf_len 0x1ccd8b86698
|   | | |   `-ImplicitCastExpr 0x1ccd8b82418 <col:9> 'BIO_ENC_CTX *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x1ccd8b823f8 <col:9> 'BIO_ENC_CTX *' lvalue Var 0x1ccd8b81e88 'ctx' 'BIO_ENC_CTX *'
|   | | `-IntegerLiteral 0x1ccd8b82460 <col:24> 'int' 0
|   | `-CompoundStmt 0x1ccd8b910d8 <col:27, line:135:5>
|   |   |-BinaryOperator 0x1ccd8b82618 <line:123:9, col:33> 'int' '='
|   |   | |-DeclRefExpr 0x1ccd8b824c0 <col:9> 'int' lvalue Var 0x1ccd8b81d58 'i' 'int'
|   |   | `-BinaryOperator 0x1ccd8b825f8 <col:13, col:33> 'int' '-'
|   |   |   |-ImplicitCastExpr 0x1ccd8b825c8 <col:13, col:18> 'int' <LValueToRValue>
|   |   |   | `-MemberExpr 0x1ccd8b82530 <col:13, col:18> 'int' lvalue ->buf_len 0x1ccd8b86698
|   |   |   |   `-ImplicitCastExpr 0x1ccd8b82518 <col:13> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x1ccd8b824f8 <col:13> 'BIO_ENC_CTX *' lvalue Var 0x1ccd8b81e88 'ctx' 'BIO_ENC_CTX *'
|   |   |   `-ImplicitCastExpr 0x1ccd8b825e0 <col:28, col:33> 'int' <LValueToRValue>
|   |   |     `-MemberExpr 0x1ccd8b82598 <col:28, col:33> 'int' lvalue ->buf_off 0x1ccd8b86708
|   |   |       `-ImplicitCastExpr 0x1ccd8b82580 <col:28> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x1ccd8b82560 <col:28> 'BIO_ENC_CTX *' lvalue Var 0x1ccd8b81e88 'ctx' 'BIO_ENC_CTX *'
|   |   |-IfStmt 0x1ccd8b82758 <line:124:9, line:125:17>
|   |   | |-BinaryOperator 0x1ccd8b826c0 <line:124:13, col:17> 'int' '>'
|   |   | | |-ImplicitCastExpr 0x1ccd8b82690 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1ccd8b82638 <col:13> 'int' lvalue Var 0x1ccd8b81d58 'i' 'int'
|   |   | | `-ImplicitCastExpr 0x1ccd8b826a8 <col:17> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1ccd8b82658 <col:17> 'int' lvalue ParmVar 0x1ccd8b81b20 'outl' 'int'
|   |   | `-BinaryOperator 0x1ccd8b82738 <line:125:13, col:17> 'int' '='
|   |   |   |-DeclRefExpr 0x1ccd8b826e0 <col:13> 'int' lvalue Var 0x1ccd8b81d58 'i' 'int'
|   |   |   `-ImplicitCastExpr 0x1ccd8b82720 <col:17> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1ccd8b82700 <col:17> 'int' lvalue ParmVar 0x1ccd8b81b20 'outl' 'int'
|   |   |-BinaryOperator 0x1ccd8b90c20 <line:127:9, col:15> 'int' '='
|   |   | |-DeclRefExpr 0x1ccd8b90bb0 <col:9> 'int' lvalue Var 0x1ccd8b81cb0 'ret' 'int'
|   |   | `-ImplicitCastExpr 0x1ccd8b90c08 <col:15> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1ccd8b90be8 <col:15> 'int' lvalue Var 0x1ccd8b81d58 'i' 'int'
|   |   |-CompoundAssignOperator 0x1ccd8b90c98 <line:128:9, col:16> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
|   |   | |-DeclRefExpr 0x1ccd8b90c40 <col:9> 'char *' lvalue ParmVar 0x1ccd8b81aa0 'out' 'char *'
|   |   | `-ImplicitCastExpr 0x1ccd8b90c80 <col:16> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1ccd8b90c60 <col:16> 'int' lvalue Var 0x1ccd8b81d58 'i' 'int'
|   |   |-CompoundAssignOperator 0x1ccd8b90d20 <line:129:9, col:17> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-DeclRefExpr 0x1ccd8b90cc8 <col:9> 'int' lvalue ParmVar 0x1ccd8b81b20 'outl' 'int'
|   |   | `-ImplicitCastExpr 0x1ccd8b90d08 <col:17> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1ccd8b90ce8 <col:17> 'int' lvalue Var 0x1ccd8b81d58 'i' 'int'
|   |   |-CompoundAssignOperator 0x1ccd8b90df0 <line:130:9, col:25> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-MemberExpr 0x1ccd8b90d88 <col:9, col:14> 'int' lvalue ->buf_off 0x1ccd8b86708
|   |   | | `-ImplicitCastExpr 0x1ccd8b90d70 <col:9> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1ccd8b90d50 <col:9> 'BIO_ENC_CTX *' lvalue Var 0x1ccd8b81e88 'ctx' 'BIO_ENC_CTX *'
|   |   | `-ImplicitCastExpr 0x1ccd8b90dd8 <col:25> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1ccd8b90db8 <col:25> 'int' lvalue Var 0x1ccd8b81d58 'i' 'int'
|   |   `-IfStmt 0x1ccd8b910c0 <line:131:9, line:134:9>
|   |     |-BinaryOperator 0x1ccd8b90f20 <line:131:13, col:34> 'int' '=='
|   |     | |-ImplicitCastExpr 0x1ccd8b90ef0 <col:13, col:18> 'int' <LValueToRValue>
|   |     | | `-MemberExpr 0x1ccd8b90e58 <col:13, col:18> 'int' lvalue ->buf_len 0x1ccd8b86698
|   |     | |   `-ImplicitCastExpr 0x1ccd8b90e40 <col:13> 'BIO_ENC_CTX *' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x1ccd8b90e20 <col:13> 'BIO_ENC_CTX *' lvalue Var 0x1ccd8b81e88 'ctx' 'BIO_ENC_CTX *'
|   |     | `-ImplicitCastExpr 0x1ccd8b90f08 <col:29, col:34> 'int' <LValueToRValue>
|   |     |   `-MemberExpr 0x1ccd8b90ec0 <col:29, col:34> 'int' lvalue ->buf_off 0x1ccd8b86708
|   |     |     `-ImplicitCastExpr 0x1ccd8b90ea8 <col:29> 'BIO_ENC_CTX *' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x1ccd8b90e88 <col:29> 'BIO_ENC_CTX *' lvalue Var 0x1ccd8b81e88 'ctx' 'BIO_ENC_CTX *'
|   |     `-CompoundStmt 0x1ccd8b910a0 <col:43, line:134:9>
|   |       |-BinaryOperator 0x1ccd8b90fd0 <line:132:13, col:28> 'int' '='
|   |       | |-MemberExpr 0x1ccd8b90f78 <col:13, col:18> 'int' lvalue ->buf_len 0x1ccd8b86698
|   |       | | `-ImplicitCastExpr 0x1ccd8b90f60 <col:13> 'BIO_ENC_CTX *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x1ccd8b90f40 <col:13> 'BIO_ENC_CTX *' lvalue Var 0x1ccd8b81e88 'ctx' 'BIO_ENC_CTX *'
|   |       | `-IntegerLiteral 0x1ccd8b90fa8 <col:28> 'int' 0
|   |       `-BinaryOperator 0x1ccd8b91080 <line:133:13, col:28> 'int' '='
|   |         |-MemberExpr 0x1ccd8b91028 <col:13, col:18> 'int' lvalue ->buf_off 0x1ccd8b86708
|   |         | `-ImplicitCastExpr 0x1ccd8b91010 <col:13> 'BIO_ENC_CTX *' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x1ccd8b90ff0 <col:13> 'BIO_ENC_CTX *' lvalue Var 0x1ccd8b81e88 'ctx' 'BIO_ENC_CTX *'
|   |         `-IntegerLiteral 0x1ccd8b91058 <col:28> 'int' 0
|   |-IfStmt 0x1ccd8b913a0 <line:138:5, line:139:21>
|   | |-BinaryOperator 0x1ccd8b91318 <line:138:9, col:22> 'int' '=='
|   | | |-ImplicitCastExpr 0x1ccd8b91300 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1ccd8b912b8 <col:9> 'int' lvalue Var 0x1ccd8b81dd8 'blocksize' 'int'
|   | | `-IntegerLiteral 0x1ccd8b912d8 <col:22> 'int' 1
|   | `-BinaryOperator 0x1ccd8b91380 <line:139:9, col:21> 'int' '='
|   |   |-DeclRefExpr 0x1ccd8b91338 <col:9> 'int' lvalue Var 0x1ccd8b81dd8 'blocksize' 'int'
|   |   `-IntegerLiteral 0x1ccd8b91358 <col:21> 'int' 0
|   |-WhileStmt 0x1ccd8b8bea8 <line:146:5, line:228:5>
|   | |-BinaryOperator 0x1ccd8b91418 <line:146:12, col:19> 'int' '>'
|   | | |-ImplicitCastExpr 0x1ccd8b91400 <col:12> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1ccd8b913b8 <col:12> 'int' lvalue ParmVar 0x1ccd8b81b20 'outl' 'int'
|   | | `-IntegerLiteral 0x1ccd8b913d8 <col:19> 'int' 0
|   | `-CompoundStmt 0x1ccd8b8be50 <col:22, line:228:5>
|   |   |-IfStmt 0x1ccd8b91508 <line:147:9, line:148:13>
|   |   | |-BinaryOperator 0x1ccd8b914e0 <line:147:13, col:26> 'int' '<='
|   |   | | |-ImplicitCastExpr 0x1ccd8b914c8 <col:13, col:18> 'int' <LValueToRValue>
|   |   | | | `-MemberExpr 0x1ccd8b91470 <col:13, col:18> 'int' lvalue ->cont 0x1ccd8b86778
|   |   | | |   `-ImplicitCastExpr 0x1ccd8b91458 <col:13> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x1ccd8b91438 <col:13> 'BIO_ENC_CTX *' lvalue Var 0x1ccd8b81e88 'ctx' 'BIO_ENC_CTX *'
|   |   | | `-IntegerLiteral 0x1ccd8b914a0 <col:26> 'int' 0
|   |   | `-BreakStmt 0x1ccd8b91500 <line:148:13>
|   |   |-IfStmt 0x1ccd8b8cc90 <line:150:9, line:157:9> has_else
|   |   | |-BinaryOperator 0x1ccd8b91620 <line:150:13, col:37> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x1ccd8b915f0 <col:13, col:18> 'unsigned char *' <LValueToRValue>
|   |   | | | `-MemberExpr 0x1ccd8b91558 <col:13, col:18> 'unsigned char *' lvalue ->read_start 0x1ccd8b86960
|   |   | | |   `-ImplicitCastExpr 0x1ccd8b91540 <col:13> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x1ccd8b91520 <col:13> 'BIO_ENC_CTX *' lvalue Var 0x1ccd8b81e88 'ctx' 'BIO_ENC_CTX *'
|   |   | | `-ImplicitCastExpr 0x1ccd8b91608 <col:32, col:37> 'unsigned char *' <LValueToRValue>
|   |   | |   `-MemberExpr 0x1ccd8b915c0 <col:32, col:37> 'unsigned char *' lvalue ->read_end 0x1ccd8b869d0
|   |   | |     `-ImplicitCastExpr 0x1ccd8b915a8 <col:32> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x1ccd8b91588 <col:32> 'BIO_ENC_CTX *' lvalue Var 0x1ccd8b81e88 'ctx' 'BIO_ENC_CTX *'
|   |   | |-CompoundStmt 0x1ccd8b8cae8 <col:47, line:155:9>
|   |   | | `-IfStmt 0x1ccd8b8cad0 <line:153:13, line:154:34>
|   |   | |   |-BinaryOperator 0x1ccd8b91a18 <line:153:17, col:21> 'int' '>'
|   |   | |   | |-ImplicitCastExpr 0x1ccd8b91a00 <col:17> 'int' <LValueToRValue>
|   |   | |   | | `-DeclRefExpr 0x1ccd8b919b8 <col:17> 'int' lvalue Var 0x1ccd8b81d58 'i' 'int'
|   |   | |   | `-IntegerLiteral 0x1ccd8b919d8 <col:21> 'int' 0
|   |   | |   `-CompoundAssignOperator 0x1ccd8b91ad8 <line:154:17, col:34> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   |   | |     |-MemberExpr 0x1ccd8b91a70 <col:17, col:22> 'unsigned char *' lvalue ->read_end 0x1ccd8b869d0
|   |   | |     | `-ImplicitCastExpr 0x1ccd8b91a58 <col:17> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   | |     |   `-DeclRefExpr 0x1ccd8b91a38 <col:17> 'BIO_ENC_CTX *' lvalue Var 0x1ccd8b81e88 'ctx' 'BIO_ENC_CTX *'
|   |   | |     `-ImplicitCastExpr 0x1ccd8b91ac0 <col:34> 'int' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x1ccd8b91aa0 <col:34> 'int' lvalue Var 0x1ccd8b81d58 'i' 'int'
|   |   | `-CompoundStmt 0x1ccd8b8cc78 <line:155:16, line:157:9>
|   |   |   `-BinaryOperator 0x1ccd8b8cc58 <line:156:13, col:38> 'int' '='
|   |   |     |-DeclRefExpr 0x1ccd8b8cb00 <col:13> 'int' lvalue Var 0x1ccd8b81d58 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x1ccd8b8cc40 <col:17, col:38> 'int' <IntegralCast>
|   |   |       `-BinaryOperator 0x1ccd8b8cc20 <col:17, col:38> 'long long' '-'
|   |   |         |-ImplicitCastExpr 0x1ccd8b8cbf0 <col:17, col:22> 'unsigned char *' <LValueToRValue>
|   |   |         | `-MemberExpr 0x1ccd8b8cb58 <col:17, col:22> 'unsigned char *' lvalue ->read_end 0x1ccd8b869d0
|   |   |         |   `-ImplicitCastExpr 0x1ccd8b8cb40 <col:17> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |         |     `-DeclRefExpr 0x1ccd8b8cb20 <col:17> 'BIO_ENC_CTX *' lvalue Var 0x1ccd8b81e88 'ctx' 'BIO_ENC_CTX *'
|   |   |         `-ImplicitCastExpr 0x1ccd8b8cc08 <col:33, col:38> 'unsigned char *' <LValueToRValue>
|   |   |           `-MemberExpr 0x1ccd8b8cbc0 <col:33, col:38> 'unsigned char *' lvalue ->read_start 0x1ccd8b86960
|   |   |             `-ImplicitCastExpr 0x1ccd8b8cba8 <col:33> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |               `-DeclRefExpr 0x1ccd8b8cb88 <col:33> 'BIO_ENC_CTX *' lvalue Var 0x1ccd8b81e88 'ctx' 'BIO_ENC_CTX *'
|   |   |-IfStmt 0x1ccd8b8a838 <line:159:9, line:215:9> has_else
|   |   | |-BinaryOperator 0x1ccd8b8cd18 <line:159:13, col:18> 'int' '<='
|   |   | | |-ImplicitCastExpr 0x1ccd8b8cd00 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1ccd8b8ccb8 <col:13> 'int' lvalue Var 0x1ccd8b81d58 'i' 'int'
|   |   | | `-IntegerLiteral 0x1ccd8b8ccd8 <col:18> 'int' 0
|   |   | |-CompoundStmt 0x1ccd8b8d4c8 <col:21, line:171:9>
|   |   | | `-IfStmt 0x1ccd8b8d4a0 <line:161:13, line:170:13> has_else
|   |   | |   |-OpaqueValueExpr 0x1ccd8b8d488 <<invalid sloc>> '_Bool'
|   |   | |   |-CompoundStmt 0x1ccd8b8d2b8 <line:161:42, line:167:13>
|   |   | |   | |-BinaryOperator 0x1ccd8b8cee8 <line:162:17, col:29> 'int' '='
|   |   | |   | | |-MemberExpr 0x1ccd8b8ce80 <col:17, col:22> 'int' lvalue ->cont 0x1ccd8b86778
|   |   | |   | | | `-ImplicitCastExpr 0x1ccd8b8ce68 <col:17> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   | |   | | |   `-DeclRefExpr 0x1ccd8b8ce48 <col:17> 'BIO_ENC_CTX *' lvalue Var 0x1ccd8b81e88 'ctx' 'BIO_ENC_CTX *'
|   |   | |   | | `-ImplicitCastExpr 0x1ccd8b8ced0 <col:29> 'int' <LValueToRValue>
|   |   | |   | |   `-DeclRefExpr 0x1ccd8b8ceb0 <col:29> 'int' lvalue Var 0x1ccd8b81d58 'i' 'int'
|   |   | |   | |-BinaryOperator 0x1ccd8b8d1e8 <line:165:17, col:27> 'int' '='
|   |   | |   | | |-MemberExpr 0x1ccd8b8d180 <col:17, col:22> 'int' lvalue ->ok 0x1ccd8b86858
|   |   | |   | | | `-ImplicitCastExpr 0x1ccd8b8d168 <col:17> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   | |   | | |   `-DeclRefExpr 0x1ccd8b8d148 <col:17> 'BIO_ENC_CTX *' lvalue Var 0x1ccd8b81e88 'ctx' 'BIO_ENC_CTX *'
|   |   | |   | | `-ImplicitCastExpr 0x1ccd8b8d1d0 <col:27> 'int' <LValueToRValue>
|   |   | |   | |   `-DeclRefExpr 0x1ccd8b8d1b0 <col:27> 'int' lvalue Var 0x1ccd8b81d58 'i' 'int'
|   |   | |   | `-BinaryOperator 0x1ccd8b8d298 <line:166:17, col:32> 'int' '='
|   |   | |   |   |-MemberExpr 0x1ccd8b8d240 <col:17, col:22> 'int' lvalue ->buf_off 0x1ccd8b86708
|   |   | |   |   | `-ImplicitCastExpr 0x1ccd8b8d228 <col:17> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   | |   |   |   `-DeclRefExpr 0x1ccd8b8d208 <col:17> 'BIO_ENC_CTX *' lvalue Var 0x1ccd8b81e88 'ctx' 'BIO_ENC_CTX *'
|   |   | |   |   `-IntegerLiteral 0x1ccd8b8d270 <col:32> 'int' 0
|   |   | |   `-CompoundStmt 0x1ccd8b8d468 <line:167:20, line:170:13>
|   |   | |     |-BinaryOperator 0x1ccd8b8d440 <line:168:17, col:40> 'int' '='
|   |   | |     | |-DeclRefExpr 0x1ccd8b8d2e0 <col:17> 'int' lvalue Var 0x1ccd8b81cb0 'ret' 'int'
|   |   | |     | `-ConditionalOperator 0x1ccd8b8d410 <col:23, col:40> 'int'
|   |   | |     |   |-ParenExpr 0x1ccd8b8d380 <col:23, col:32> 'int'
|   |   | |     |   | `-BinaryOperator 0x1ccd8b8d360 <col:24, col:31> 'int' '=='
|   |   | |     |   |   |-ImplicitCastExpr 0x1ccd8b8d348 <col:24> 'int' <LValueToRValue>
|   |   | |     |   |   | `-DeclRefExpr 0x1ccd8b8d300 <col:24> 'int' lvalue Var 0x1ccd8b81cb0 'ret' 'int'
|   |   | |     |   |   `-IntegerLiteral 0x1ccd8b8d320 <col:31> 'int' 0
|   |   | |     |   |-ImplicitCastExpr 0x1ccd8b8d3e0 <col:36> 'int' <LValueToRValue>
|   |   | |     |   | `-DeclRefExpr 0x1ccd8b8d3a0 <col:36> 'int' lvalue Var 0x1ccd8b81d58 'i' 'int'
|   |   | |     |   `-ImplicitCastExpr 0x1ccd8b8d3f8 <col:40> 'int' <LValueToRValue>
|   |   | |     |     `-DeclRefExpr 0x1ccd8b8d3c0 <col:40> 'int' lvalue Var 0x1ccd8b81cb0 'ret' 'int'
|   |   | |     `-BreakStmt 0x1ccd8b8d460 <line:169:17>
|   |   | `-CompoundStmt 0x1ccd8b8a7f8 <line:171:16, line:215:9>
|   |   |   |-IfStmt 0x1ccd8b8a148 <line:172:13, line:195:13>
|   |   |   | |-BinaryOperator 0x1ccd8b8d560 <line:172:17, line:30:29> 'int' '>'
|   |   |   | | |-ImplicitCastExpr 0x1ccd8b8d548 <line:172:17> 'int' <LValueToRValue>
|   |   |   | | | `-DeclRefExpr 0x1ccd8b8d4e0 <col:17> 'int' lvalue ParmVar 0x1ccd8b81b20 'outl' 'int'
|   |   |   | | `-ParenExpr 0x1ccd8b8d528 <line:30:25, col:29> 'int'
|   |   |   | |   `-IntegerLiteral 0x1ccd8b8d500 <col:26> 'int' 256
|   |   |   | `-CompoundStmt 0x1ccd8b8a100 <line:172:39, line:195:13>
|   |   |   |   |-DeclStmt 0x1ccd8b8d728 <line:178:17, col:50>
|   |   |   |   | |-VarDecl 0x1ccd8b8d598 <col:17, col:32> col:21 used j 'int' cinit
|   |   |   |   | | `-BinaryOperator 0x1ccd8b8d670 <col:25, col:32> 'int' '-'
|   |   |   |   | |   |-ImplicitCastExpr 0x1ccd8b8d640 <col:25> 'int' <LValueToRValue>
|   |   |   |   | |   | `-DeclRefExpr 0x1ccd8b8d600 <col:25> 'int' lvalue ParmVar 0x1ccd8b81b20 'outl' 'int'
|   |   |   |   | |   `-ImplicitCastExpr 0x1ccd8b8d658 <col:32> 'int' <LValueToRValue>
|   |   |   |   | |     `-DeclRefExpr 0x1ccd8b8d620 <col:32> 'int' lvalue Var 0x1ccd8b81dd8 'blocksize' 'int'
|   |   |   |   | `-VarDecl 0x1ccd8b8d6a8 <col:17, col:43> col:43 used buf_len 'int'
|   |   |   |   |-IfStmt 0x1ccd8b89c48 <line:180:17, line:185:17>
|   |   |   |   | |-OpaqueValueExpr 0x1ccd8b89c30 <<invalid sloc>> '_Bool'
|   |   |   |   | `-CompoundStmt 0x1ccd8b89c18 <line:182:72, line:185:17>
|   |   |   |   |   `-ReturnStmt 0x1ccd8b89c08 <line:184:21, col:28>
|   |   |   |   |     `-IntegerLiteral 0x1ccd8b89be0 <col:28> 'int' 0
|   |   |   |   |-CompoundAssignOperator 0x1ccd8b89cb8 <line:186:17, col:24> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |   |   | |-DeclRefExpr 0x1ccd8b89c60 <col:17> 'int' lvalue Var 0x1ccd8b81cb0 'ret' 'int'
|   |   |   |   | `-ImplicitCastExpr 0x1ccd8b89ca0 <col:24> 'int' <LValueToRValue>
|   |   |   |   |   `-DeclRefExpr 0x1ccd8b89c80 <col:24> 'int' lvalue Var 0x1ccd8b8d6a8 'buf_len' 'int'
|   |   |   |   |-CompoundAssignOperator 0x1ccd8b89d40 <line:187:17, col:24> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
|   |   |   |   | |-DeclRefExpr 0x1ccd8b89ce8 <col:17> 'char *' lvalue ParmVar 0x1ccd8b81aa0 'out' 'char *'
|   |   |   |   | `-ImplicitCastExpr 0x1ccd8b89d28 <col:24> 'int' <LValueToRValue>
|   |   |   |   |   `-DeclRefExpr 0x1ccd8b89d08 <col:24> 'int' lvalue Var 0x1ccd8b8d6a8 'buf_len' 'int'
|   |   |   |   |-CompoundAssignOperator 0x1ccd8b89dc8 <line:188:17, col:25> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |   |   | |-DeclRefExpr 0x1ccd8b89d70 <col:17> 'int' lvalue ParmVar 0x1ccd8b81b20 'outl' 'int'
|   |   |   |   | `-ImplicitCastExpr 0x1ccd8b89db0 <col:25> 'int' <LValueToRValue>
|   |   |   |   |   `-DeclRefExpr 0x1ccd8b89d90 <col:25> 'int' lvalue Var 0x1ccd8b8d6a8 'buf_len' 'int'
|   |   |   |   |-IfStmt 0x1ccd8b8a018 <line:190:17, line:193:17>
|   |   |   |   | |-BinaryOperator 0x1ccd8b89ec8 <line:190:21, col:33> 'int' '<='
|   |   |   |   | | |-ParenExpr 0x1ccd8b89e80 <col:21, col:28> 'int'
|   |   |   |   | | | `-CompoundAssignOperator 0x1ccd8b89e50 <col:22, col:27> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |   |   | | |   |-DeclRefExpr 0x1ccd8b89df8 <col:22> 'int' lvalue Var 0x1ccd8b81d58 'i' 'int'
|   |   |   |   | | |   `-ImplicitCastExpr 0x1ccd8b89e38 <col:27> 'int' <LValueToRValue>
|   |   |   |   | | |     `-DeclRefExpr 0x1ccd8b89e18 <col:27> 'int' lvalue Var 0x1ccd8b8d598 'j' 'int'
|   |   |   |   | | `-IntegerLiteral 0x1ccd8b89ea0 <col:33> 'int' 0
|   |   |   |   | `-CompoundStmt 0x1ccd8b89ff8 <col:36, line:193:17>
|   |   |   |   |   |-BinaryOperator 0x1ccd8b89fd0 <line:191:21, col:44> 'unsigned char *' '='
|   |   |   |   |   | |-MemberExpr 0x1ccd8b89f20 <col:21, col:26> 'unsigned char *' lvalue ->read_start 0x1ccd8b86960
|   |   |   |   |   | | `-ImplicitCastExpr 0x1ccd8b89f08 <col:21> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |   |   |   | |   `-DeclRefExpr 0x1ccd8b89ee8 <col:21> 'BIO_ENC_CTX *' lvalue Var 0x1ccd8b81e88 'ctx' 'BIO_ENC_CTX *'
|   |   |   |   |   | `-ImplicitCastExpr 0x1ccd8b89fb8 <col:39, col:44> 'unsigned char *' <LValueToRValue>
|   |   |   |   |   |   `-MemberExpr 0x1ccd8b89f88 <col:39, col:44> 'unsigned char *' lvalue ->read_end 0x1ccd8b869d0
|   |   |   |   |   |     `-ImplicitCastExpr 0x1ccd8b89f70 <col:39> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |   |   |   |       `-DeclRefExpr 0x1ccd8b89f50 <col:39> 'BIO_ENC_CTX *' lvalue Var 0x1ccd8b81e88 'ctx' 'BIO_ENC_CTX *'
|   |   |   |   |   `-ContinueStmt 0x1ccd8b89ff0 <line:192:21>
|   |   |   |   `-CompoundAssignOperator 0x1ccd8b8a0d0 <line:194:17, col:36> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   |   |   |     |-MemberExpr 0x1ccd8b8a068 <col:17, col:22> 'unsigned char *' lvalue ->read_start 0x1ccd8b86960
|   |   |   |     | `-ImplicitCastExpr 0x1ccd8b8a050 <col:17> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |   |     |   `-DeclRefExpr 0x1ccd8b8a030 <col:17> 'BIO_ENC_CTX *' lvalue Var 0x1ccd8b81e88 'ctx' 'BIO_ENC_CTX *'
|   |   |   |     `-ImplicitCastExpr 0x1ccd8b8a0b8 <col:36> 'int' <LValueToRValue>
|   |   |   |       `-DeclRefExpr 0x1ccd8b8a098 <col:36> 'int' lvalue Var 0x1ccd8b8d598 'j' 'int'
|   |   |   |-IfStmt 0x1ccd8b8a288 <line:196:13, line:30:29>
|   |   |   | |-BinaryOperator 0x1ccd8b8a1e0 <line:196:17, line:30:29> 'int' '>'
|   |   |   | | |-ImplicitCastExpr 0x1ccd8b8a1c8 <line:196:17> 'int' <LValueToRValue>
|   |   |   | | | `-DeclRefExpr 0x1ccd8b8a160 <col:17> 'int' lvalue Var 0x1ccd8b81d58 'i' 'int'
|   |   |   | | `-ParenExpr 0x1ccd8b8a1a8 <line:30:25, col:29> 'int'
|   |   |   | |   `-IntegerLiteral 0x1ccd8b8a180 <col:26> 'int' 256
|   |   |   | `-BinaryOperator 0x1ccd8b8a268 <line:197:17, line:30:29> 'int' '='
|   |   |   |   |-DeclRefExpr 0x1ccd8b8a200 <line:197:17> 'int' lvalue Var 0x1ccd8b81d58 'i' 'int'
|   |   |   |   `-ParenExpr 0x1ccd8b8a248 <line:30:25, col:29> 'int'
|   |   |   |     `-IntegerLiteral 0x1ccd8b8a220 <col:26> 'int' 256
|   |   |   |-IfStmt 0x1ccd8b8a578 <line:198:13, line:204:13>
|   |   |   | |-OpaqueValueExpr 0x1ccd8b8a560 <<invalid sloc>> '_Bool'
|   |   |   | `-CompoundStmt 0x1ccd8b8a540 <line:200:56, line:204:13>
|   |   |   |   |-BinaryOperator 0x1ccd8b8a4e8 <line:202:17, col:27> 'int' '='
|   |   |   |   | |-MemberExpr 0x1ccd8b8a490 <col:17, col:22> 'int' lvalue ->ok 0x1ccd8b86858
|   |   |   |   | | `-ImplicitCastExpr 0x1ccd8b8a478 <col:17> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |   |   | |   `-DeclRefExpr 0x1ccd8b8a458 <col:17> 'BIO_ENC_CTX *' lvalue Var 0x1ccd8b81e88 'ctx' 'BIO_ENC_CTX *'
|   |   |   |   | `-IntegerLiteral 0x1ccd8b8a4c0 <col:27> 'int' 0
|   |   |   |   `-ReturnStmt 0x1ccd8b8a530 <line:203:17, col:24>
|   |   |   |     `-IntegerLiteral 0x1ccd8b8a508 <col:24> 'int' 0
|   |   |   |-CompoundAssignOperator 0x1ccd8b8a630 <line:205:13, col:32> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   |   |   | |-MemberExpr 0x1ccd8b8a5c8 <col:13, col:18> 'unsigned char *' lvalue ->read_start 0x1ccd8b86960
|   |   |   | | `-ImplicitCastExpr 0x1ccd8b8a5b0 <col:13> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x1ccd8b8a590 <col:13> 'BIO_ENC_CTX *' lvalue Var 0x1ccd8b81e88 'ctx' 'BIO_ENC_CTX *'
|   |   |   | `-ImplicitCastExpr 0x1ccd8b8a618 <col:32> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x1ccd8b8a5f8 <col:32> 'int' lvalue Var 0x1ccd8b81d58 'i' 'int'
|   |   |   |-BinaryOperator 0x1ccd8b8a6f0 <line:206:13, col:25> 'int' '='
|   |   |   | |-MemberExpr 0x1ccd8b8a698 <col:13, col:18> 'int' lvalue ->cont 0x1ccd8b86778
|   |   |   | | `-ImplicitCastExpr 0x1ccd8b8a680 <col:13> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x1ccd8b8a660 <col:13> 'BIO_ENC_CTX *' lvalue Var 0x1ccd8b81e88 'ctx' 'BIO_ENC_CTX *'
|   |   |   | `-IntegerLiteral 0x1ccd8b8a6c8 <col:25> 'int' 1
|   |   |   `-IfStmt 0x1ccd8b8a7e0 <line:213:13, line:214:17>
|   |   |     |-BinaryOperator 0x1ccd8b8a7b8 <line:213:17, col:33> 'int' '=='
|   |   |     | |-ImplicitCastExpr 0x1ccd8b8a7a0 <col:17, col:22> 'int' <LValueToRValue>
|   |   |     | | `-MemberExpr 0x1ccd8b8a748 <col:17, col:22> 'int' lvalue ->buf_len 0x1ccd8b86698
|   |   |     | |   `-ImplicitCastExpr 0x1ccd8b8a730 <col:17> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |     | |     `-DeclRefExpr 0x1ccd8b8a710 <col:17> 'BIO_ENC_CTX *' lvalue Var 0x1ccd8b81e88 'ctx' 'BIO_ENC_CTX *'
|   |   |     | `-IntegerLiteral 0x1ccd8b8a778 <col:33> 'int' 0
|   |   |     `-ContinueStmt 0x1ccd8b8a7d8 <line:214:17>
|   |   |-IfStmt 0x1ccd8b8aa70 <line:217:9, line:220:17> has_else
|   |   | |-BinaryOperator 0x1ccd8b8a918 <line:217:13, col:29> 'int' '<='
|   |   | | |-ImplicitCastExpr 0x1ccd8b8a8e8 <col:13, col:18> 'int' <LValueToRValue>
|   |   | | | `-MemberExpr 0x1ccd8b8a898 <col:13, col:18> 'int' lvalue ->buf_len 0x1ccd8b86698
|   |   | | |   `-ImplicitCastExpr 0x1ccd8b8a880 <col:13> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x1ccd8b8a860 <col:13> 'BIO_ENC_CTX *' lvalue Var 0x1ccd8b81e88 'ctx' 'BIO_ENC_CTX *'
|   |   | | `-ImplicitCastExpr 0x1ccd8b8a900 <col:29> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1ccd8b8a8c8 <col:29> 'int' lvalue ParmVar 0x1ccd8b81b20 'outl' 'int'
|   |   | |-BinaryOperator 0x1ccd8b8a9d8 <line:218:13, col:22> 'int' '='
|   |   | | |-DeclRefExpr 0x1ccd8b8a938 <col:13> 'int' lvalue Var 0x1ccd8b81d58 'i' 'int'
|   |   | | `-ImplicitCastExpr 0x1ccd8b8a9c0 <col:17, col:22> 'int' <LValueToRValue>
|   |   | |   `-MemberExpr 0x1ccd8b8a990 <col:17, col:22> 'int' lvalue ->buf_len 0x1ccd8b86698
|   |   | |     `-ImplicitCastExpr 0x1ccd8b8a978 <col:17> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x1ccd8b8a958 <col:17> 'BIO_ENC_CTX *' lvalue Var 0x1ccd8b81e88 'ctx' 'BIO_ENC_CTX *'
|   |   | `-BinaryOperator 0x1ccd8b8aa50 <line:220:13, col:17> 'int' '='
|   |   |   |-DeclRefExpr 0x1ccd8b8a9f8 <col:13> 'int' lvalue Var 0x1ccd8b81d58 'i' 'int'
|   |   |   `-ImplicitCastExpr 0x1ccd8b8aa38 <col:17> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1ccd8b8aa18 <col:17> 'int' lvalue ParmVar 0x1ccd8b81b20 'outl' 'int'
|   |   |-IfStmt 0x1ccd8b8bb48 <line:221:9, line:222:13>
|   |   | |-BinaryOperator 0x1ccd8b8bb20 <line:221:13, col:18> 'int' '<='
|   |   | | |-ImplicitCastExpr 0x1ccd8b8bb08 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1ccd8b8bac0 <col:13> 'int' lvalue Var 0x1ccd8b81d58 'i' 'int'
|   |   | | `-IntegerLiteral 0x1ccd8b8bae0 <col:18> 'int' 0
|   |   | `-BreakStmt 0x1ccd8b8bb40 <line:222:13>
|   |   |-CompoundAssignOperator 0x1ccd8b8bc50 <line:224:9, col:16> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-DeclRefExpr 0x1ccd8b8bbf8 <col:9> 'int' lvalue Var 0x1ccd8b81cb0 'ret' 'int'
|   |   | `-ImplicitCastExpr 0x1ccd8b8bc38 <col:16> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1ccd8b8bc18 <col:16> 'int' lvalue Var 0x1ccd8b81d58 'i' 'int'
|   |   |-BinaryOperator 0x1ccd8b8bd20 <line:225:9, col:24> 'int' '='
|   |   | |-MemberExpr 0x1ccd8b8bcb8 <col:9, col:14> 'int' lvalue ->buf_off 0x1ccd8b86708
|   |   | | `-ImplicitCastExpr 0x1ccd8b8bca0 <col:9> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1ccd8b8bc80 <col:9> 'BIO_ENC_CTX *' lvalue Var 0x1ccd8b81e88 'ctx' 'BIO_ENC_CTX *'
|   |   | `-ImplicitCastExpr 0x1ccd8b8bd08 <col:24> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1ccd8b8bce8 <col:24> 'int' lvalue Var 0x1ccd8b81d58 'i' 'int'
|   |   |-CompoundAssignOperator 0x1ccd8b8bd98 <line:226:9, col:17> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-DeclRefExpr 0x1ccd8b8bd40 <col:9> 'int' lvalue ParmVar 0x1ccd8b81b20 'outl' 'int'
|   |   | `-ImplicitCastExpr 0x1ccd8b8bd80 <col:17> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1ccd8b8bd60 <col:17> 'int' lvalue Var 0x1ccd8b81d58 'i' 'int'
|   |   `-CompoundAssignOperator 0x1ccd8b8be20 <line:227:9, col:16> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
|   |     |-DeclRefExpr 0x1ccd8b8bdc8 <col:9> 'char *' lvalue ParmVar 0x1ccd8b81aa0 'out' 'char *'
|   |     `-ImplicitCastExpr 0x1ccd8b8be08 <col:16> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x1ccd8b8bde8 <col:16> 'int' lvalue Var 0x1ccd8b81d58 'i' 'int'
|   `-ReturnStmt 0x1ccd8b8c198 <line:232:5, col:41>
|     `-ParenExpr 0x1ccd8b8c178 <col:12, col:41> 'int'
|       `-ConditionalOperator 0x1ccd8b8c148 <col:13, col:38> 'int'
|         |-ParenExpr 0x1ccd8b8c070 <col:13, col:22> 'int'
|         | `-BinaryOperator 0x1ccd8b8c050 <col:14, col:21> 'int' '=='
|         |   |-ImplicitCastExpr 0x1ccd8b8c038 <col:14> 'int' <LValueToRValue>
|         |   | `-DeclRefExpr 0x1ccd8b8bff0 <col:14> 'int' lvalue Var 0x1ccd8b81cb0 'ret' 'int'
|         |   `-IntegerLiteral 0x1ccd8b8c010 <col:21> 'int' 0
|         |-ImplicitCastExpr 0x1ccd8b8c118 <col:26, col:31> 'int' <LValueToRValue>
|         | `-MemberExpr 0x1ccd8b8c0c8 <col:26, col:31> 'int' lvalue ->cont 0x1ccd8b86778
|         |   `-ImplicitCastExpr 0x1ccd8b8c0b0 <col:26> 'BIO_ENC_CTX *' <LValueToRValue>
|         |     `-DeclRefExpr 0x1ccd8b8c090 <col:26> 'BIO_ENC_CTX *' lvalue Var 0x1ccd8b81e88 'ctx' 'BIO_ENC_CTX *'
|         `-ImplicitCastExpr 0x1ccd8b8c130 <col:38> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x1ccd8b8c0f8 <col:38> 'int' lvalue Var 0x1ccd8b81cb0 'ret' 'int'
|-FunctionDecl 0x1ccd8b827b0 <line:126:9> col:9 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1ccd8b82850 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1ccd8b828b8 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1ccd8b82920 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1ccd8b8c3b8 <line:235:1, line:293:1> line:235:12 invalid enc_write 'int (int *, const char *, int)' static
| |-ParmVarDecl 0x1ccd8b8c210 <col:22, col:27> col:27 invalid b 'int *'
| |-ParmVarDecl 0x1ccd8b8c290 <col:30, col:42> col:42 used in 'const char *'
| |-ParmVarDecl 0x1ccd8b8c310 <col:46, col:50> col:50 used inl 'int'
| `-CompoundStmt 0x1ccd8b924d0 <line:236:1, line:293:1>
|   |-DeclStmt 0x1ccd8b8c650 <line:237:5, col:22>
|   | |-VarDecl 0x1ccd8b8c4a0 <col:5, col:15> col:9 used ret 'int' cinit
|   | | `-IntegerLiteral 0x1ccd8b8c508 <col:15> 'int' 0
|   | |-VarDecl 0x1ccd8b8c548 <col:5, col:18> col:18 used n 'int'
|   | `-VarDecl 0x1ccd8b8c5c8 <col:5, col:21> col:21 used i 'int'
|   |-DeclStmt 0x1ccd8b8c6e0 <line:238:5, col:21>
|   | `-VarDecl 0x1ccd8b8c678 <col:5, col:18> col:18 used ctx 'BIO_ENC_CTX *'
|   |-IfStmt 0x1ccd8b8c960 <line:243:5, line:244:16>
|   | |-OpaqueValueExpr 0x1ccd8b8c948 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1ccd8b8c938 <col:9, col:16>
|   |   `-IntegerLiteral 0x1ccd8b8c910 <col:16> 'int' 0
|   |-BinaryOperator 0x1ccd8b8ca00 <line:246:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x1ccd8b8c978 <col:5> 'int' lvalue Var 0x1ccd8b8c4a0 'ret' 'int'
|   | `-ImplicitCastExpr 0x1ccd8b8c9e8 <col:11> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x1ccd8b8c9b0 <col:11> 'int' lvalue ParmVar 0x1ccd8b8c310 'inl' 'int'
|   |-BinaryOperator 0x1ccd8b8fbe8 <line:249:5, col:29> 'int' '='
|   | |-DeclRefExpr 0x1ccd8b8ca40 <col:5> 'int' lvalue Var 0x1ccd8b8c548 'n' 'int'
|   | `-BinaryOperator 0x1ccd8b8fbc8 <col:9, col:29> 'int' '-'
|   |   |-ImplicitCastExpr 0x1ccd8b8fb98 <col:9, col:14> 'int' <LValueToRValue>
|   |   | `-MemberExpr 0x1ccd8b8fb00 <col:9, col:14> 'int' lvalue ->buf_len 0x1ccd8b86698
|   |   |   `-ImplicitCastExpr 0x1ccd8b8ca98 <col:9> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1ccd8b8ca78 <col:9> 'BIO_ENC_CTX *' lvalue Var 0x1ccd8b8c678 'ctx' 'BIO_ENC_CTX *'
|   |   `-ImplicitCastExpr 0x1ccd8b8fbb0 <col:24, col:29> 'int' <LValueToRValue>
|   |     `-MemberExpr 0x1ccd8b8fb68 <col:24, col:29> 'int' lvalue ->buf_off 0x1ccd8b86708
|   |       `-ImplicitCastExpr 0x1ccd8b8fb50 <col:24> 'BIO_ENC_CTX *' <LValueToRValue>
|   |         `-DeclRefExpr 0x1ccd8b8fb30 <col:24> 'BIO_ENC_CTX *' lvalue Var 0x1ccd8b8c678 'ctx' 'BIO_ENC_CTX *'
|   |-WhileStmt 0x1ccd8b90148 <line:250:5, line:258:5>
|   | |-BinaryOperator 0x1ccd8b8fc68 <line:250:12, col:16> 'int' '>'
|   | | |-ImplicitCastExpr 0x1ccd8b8fc50 <col:12> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1ccd8b8fc08 <col:12> 'int' lvalue Var 0x1ccd8b8c548 'n' 'int'
|   | | `-IntegerLiteral 0x1ccd8b8fc28 <col:16> 'int' 0
|   | `-CompoundStmt 0x1ccd8b90120 <col:19, line:258:5>
|   |   |-IfStmt 0x1ccd8b8ffb0 <line:252:9, line:255:9>
|   |   | |-BinaryOperator 0x1ccd8b8fef0 <line:252:13, col:18> 'int' '<='
|   |   | | |-ImplicitCastExpr 0x1ccd8b8fed8 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1ccd8b8fe90 <col:13> 'int' lvalue Var 0x1ccd8b8c5c8 'i' 'int'
|   |   | | `-IntegerLiteral 0x1ccd8b8feb0 <col:18> 'int' 0
|   |   | `-CompoundStmt 0x1ccd8b8ff98 <col:21, line:255:9>
|   |   |   `-ReturnStmt 0x1ccd8b8ff88 <line:254:13, col:22>
|   |   |     `-ImplicitCastExpr 0x1ccd8b8ff70 <col:20, col:22> 'int' <LValueToRValue>
|   |   |       `-ParenExpr 0x1ccd8b8ff50 <col:20, col:22> 'int' lvalue
|   |   |         `-DeclRefExpr 0x1ccd8b8ff30 <col:21> 'int' lvalue Var 0x1ccd8b8c5c8 'i' 'int'
|   |   |-CompoundAssignOperator 0x1ccd8b90068 <line:256:9, col:25> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-MemberExpr 0x1ccd8b90000 <col:9, col:14> 'int' lvalue ->buf_off 0x1ccd8b86708
|   |   | | `-ImplicitCastExpr 0x1ccd8b8ffe8 <col:9> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1ccd8b8ffc8 <col:9> 'BIO_ENC_CTX *' lvalue Var 0x1ccd8b8c678 'ctx' 'BIO_ENC_CTX *'
|   |   | `-ImplicitCastExpr 0x1ccd8b90050 <col:25> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1ccd8b90030 <col:25> 'int' lvalue Var 0x1ccd8b8c5c8 'i' 'int'
|   |   `-CompoundAssignOperator 0x1ccd8b900f0 <line:257:9, col:14> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     |-DeclRefExpr 0x1ccd8b90098 <col:9> 'int' lvalue Var 0x1ccd8b8c548 'n' 'int'
|   |     `-ImplicitCastExpr 0x1ccd8b900d8 <col:14> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x1ccd8b900b8 <col:14> 'int' lvalue Var 0x1ccd8b8c5c8 'i' 'int'
|   |-IfStmt 0x1ccd8b903a8 <line:261:5, line:262:18>
|   | |-BinaryOperator 0x1ccd8b90330 <line:261:9, col:34> 'int' '||'
|   | | |-ParenExpr 0x1ccd8b90270 <col:9, col:20> 'int'
|   | | | `-BinaryOperator 0x1ccd8b90250 <col:10, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |   |-ImplicitCastExpr 0x1ccd8b90220 <.//openssl//file_jk/before\crypto\evp\bio_enc.c:261:10> 'const char *' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x1ccd8b90160 <col:10> 'const char *' lvalue ParmVar 0x1ccd8b8c290 'in' 'const char *'
|   | | |   `-ImplicitCastExpr 0x1ccd8b90238 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   | | |     `-ParenExpr 0x1ccd8b90200 <col:17, col:27> 'void *'
|   | | |       `-CStyleCastExpr 0x1ccd8b901d8 <col:18, col:26> 'void *' <NullToPointer>
|   | | |         `-IntegerLiteral 0x1ccd8b90198 <col:26> 'int' 0
|   | | `-ParenExpr 0x1ccd8b90310 <.//openssl//file_jk/before\crypto\evp\bio_enc.c:261:25, col:34> 'int'
|   | |   `-BinaryOperator 0x1ccd8b902f0 <col:26, col:33> 'int' '<='
|   | |     |-ImplicitCastExpr 0x1ccd8b902d8 <col:26> 'int' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x1ccd8b90290 <col:26> 'int' lvalue ParmVar 0x1ccd8b8c310 'inl' 'int'
|   | |     `-IntegerLiteral 0x1ccd8b902b0 <col:33> 'int' 0
|   | `-ReturnStmt 0x1ccd8b90398 <line:262:9, col:18>
|   |   `-ParenExpr 0x1ccd8b90378 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x1ccd8b90350 <col:17> 'int' 0
|   |-BinaryOperator 0x1ccd8b90450 <line:264:5, col:20> 'int' '='
|   | |-MemberExpr 0x1ccd8b903f8 <col:5, col:10> 'int' lvalue ->buf_off 0x1ccd8b86708
|   | | `-ImplicitCastExpr 0x1ccd8b903e0 <col:5> 'BIO_ENC_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1ccd8b903c0 <col:5> 'BIO_ENC_CTX *' lvalue Var 0x1ccd8b8c678 'ctx' 'BIO_ENC_CTX *'
|   | `-IntegerLiteral 0x1ccd8b90428 <col:20> 'int' 0
|   |-WhileStmt 0x1ccd8b92430 <line:265:5, line:290:5>
|   | |-BinaryOperator 0x1ccd8b904d0 <line:265:12, col:18> 'int' '>'
|   | | |-ImplicitCastExpr 0x1ccd8b904b8 <col:12> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1ccd8b90470 <col:12> 'int' lvalue ParmVar 0x1ccd8b8c310 'inl' 'int'
|   | | `-IntegerLiteral 0x1ccd8b90490 <col:18> 'int' 0
|   | `-CompoundStmt 0x1ccd8b923d8 <col:21, line:290:5>
|   |   |-BinaryOperator 0x1ccd8b90710 <line:266:9, col:55> 'int' '='
|   |   | |-DeclRefExpr 0x1ccd8b904f0 <col:9> 'int' lvalue Var 0x1ccd8b8c548 'n' 'int'
|   |   | `-ConditionalOperator 0x1ccd8b906e0 <col:13, col:55> 'int'
|   |   |   |-ParenExpr 0x1ccd8b905f8 <col:13, col:34> 'int'
|   |   |   | `-BinaryOperator 0x1ccd8b905d8 <col:14, line:29:32> 'int' '>'
|   |   |   |   |-ImplicitCastExpr 0x1ccd8b905c0 <line:266:14> 'int' <LValueToRValue>
|   |   |   |   | `-DeclRefExpr 0x1ccd8b90510 <col:14> 'int' lvalue ParmVar 0x1ccd8b8c310 'inl' 'int'
|   |   |   |   `-ParenExpr 0x1ccd8b905a0 <line:29:25, col:32> 'int'
|   |   |   |     `-BinaryOperator 0x1ccd8b90580 <col:26, col:31> 'int' '*'
|   |   |   |       |-IntegerLiteral 0x1ccd8b90530 <col:26> 'int' 1024
|   |   |   |       `-IntegerLiteral 0x1ccd8b90558 <col:31> 'int' 4
|   |   |   |-ParenExpr 0x1ccd8b90688 <col:25, col:32> 'int'
|   |   |   | `-BinaryOperator 0x1ccd8b90668 <col:26, col:31> 'int' '*'
|   |   |   |   |-IntegerLiteral 0x1ccd8b90618 <col:26> 'int' 1024
|   |   |   |   `-IntegerLiteral 0x1ccd8b90640 <col:31> 'int' 4
|   |   |   `-ImplicitCastExpr 0x1ccd8b906c8 <line:266:55> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1ccd8b906a8 <col:55> 'int' lvalue ParmVar 0x1ccd8b8c310 'inl' 'int'
|   |   |-IfStmt 0x1ccd8b90a18 <line:267:9, line:273:9>
|   |   | |-OpaqueValueExpr 0x1ccd8b90a00 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x1ccd8b909e0 <line:269:62, line:273:9>
|   |   |   |-BinaryOperator 0x1ccd8b90988 <line:271:13, col:23> 'int' '='
|   |   |   | |-MemberExpr 0x1ccd8b90930 <col:13, col:18> 'int' lvalue ->ok 0x1ccd8b86858
|   |   |   | | `-ImplicitCastExpr 0x1ccd8b90918 <col:13> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x1ccd8b908f8 <col:13> 'BIO_ENC_CTX *' lvalue Var 0x1ccd8b8c678 'ctx' 'BIO_ENC_CTX *'
|   |   |   | `-IntegerLiteral 0x1ccd8b90960 <col:23> 'int' 0
|   |   |   `-ReturnStmt 0x1ccd8b909d0 <line:272:13, col:20>
|   |   |     `-IntegerLiteral 0x1ccd8b909a8 <col:20> 'int' 0
|   |   |-CompoundAssignOperator 0x1ccd8b90a88 <line:274:9, col:16> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-DeclRefExpr 0x1ccd8b90a30 <col:9> 'int' lvalue ParmVar 0x1ccd8b8c310 'inl' 'int'
|   |   | `-ImplicitCastExpr 0x1ccd8b90a70 <col:16> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1ccd8b90a50 <col:16> 'int' lvalue Var 0x1ccd8b8c548 'n' 'int'
|   |   |-CompoundAssignOperator 0x1ccd8b91b38 <line:275:9, col:15> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'
|   |   | |-DeclRefExpr 0x1ccd8b90ab8 <col:9> 'const char *' lvalue ParmVar 0x1ccd8b8c290 'in' 'const char *'
|   |   | `-ImplicitCastExpr 0x1ccd8b91b20 <col:15> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1ccd8b90ad8 <col:15> 'int' lvalue Var 0x1ccd8b8c548 'n' 'int'
|   |   |-BinaryOperator 0x1ccd8b91bf8 <line:277:9, col:24> 'int' '='
|   |   | |-MemberExpr 0x1ccd8b91ba0 <col:9, col:14> 'int' lvalue ->buf_off 0x1ccd8b86708
|   |   | | `-ImplicitCastExpr 0x1ccd8b91b88 <col:9> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1ccd8b91b68 <col:9> 'BIO_ENC_CTX *' lvalue Var 0x1ccd8b8c678 'ctx' 'BIO_ENC_CTX *'
|   |   | `-IntegerLiteral 0x1ccd8b91bd0 <col:24> 'int' 0
|   |   |-BinaryOperator 0x1ccd8b91cb8 <line:278:9, col:18> 'int' '='
|   |   | |-DeclRefExpr 0x1ccd8b91c18 <col:9> 'int' lvalue Var 0x1ccd8b8c548 'n' 'int'
|   |   | `-ImplicitCastExpr 0x1ccd8b91ca0 <col:13, col:18> 'int' <LValueToRValue>
|   |   |   `-MemberExpr 0x1ccd8b91c70 <col:13, col:18> 'int' lvalue ->buf_len 0x1ccd8b86698
|   |   |     `-ImplicitCastExpr 0x1ccd8b91c58 <col:13> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x1ccd8b91c38 <col:13> 'BIO_ENC_CTX *' lvalue Var 0x1ccd8b8c678 'ctx' 'BIO_ENC_CTX *'
|   |   |-WhileStmt 0x1ccd8b92260 <line:279:9, line:287:9>
|   |   | |-BinaryOperator 0x1ccd8b91d38 <line:279:16, col:20> 'int' '>'
|   |   | | |-ImplicitCastExpr 0x1ccd8b91d20 <col:16> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1ccd8b91cd8 <col:16> 'int' lvalue Var 0x1ccd8b8c548 'n' 'int'
|   |   | | `-IntegerLiteral 0x1ccd8b91cf8 <col:20> 'int' 0
|   |   | `-CompoundStmt 0x1ccd8b92238 <col:23, line:287:9>
|   |   |   |-IfStmt 0x1ccd8b920c8 <line:281:13, line:284:13>
|   |   |   | |-BinaryOperator 0x1ccd8b91eb8 <line:281:17, col:22> 'int' '<='
|   |   |   | | |-ImplicitCastExpr 0x1ccd8b91ea0 <col:17> 'int' <LValueToRValue>
|   |   |   | | | `-DeclRefExpr 0x1ccd8b91e58 <col:17> 'int' lvalue Var 0x1ccd8b8c5c8 'i' 'int'
|   |   |   | | `-IntegerLiteral 0x1ccd8b91e78 <col:22> 'int' 0
|   |   |   | `-CompoundStmt 0x1ccd8b920b0 <col:25, line:284:13>
|   |   |   |   `-ReturnStmt 0x1ccd8b920a0 <line:283:17, col:49>
|   |   |   |     `-ConditionalOperator 0x1ccd8b92070 <col:24, col:49> 'int'
|   |   |   |       |-ParenExpr 0x1ccd8b91f88 <col:24, col:35> 'int'
|   |   |   |       | `-BinaryOperator 0x1ccd8b91f68 <col:25, col:32> 'int' '=='
|   |   |   |       |   |-ImplicitCastExpr 0x1ccd8b91f38 <col:25> 'int' <LValueToRValue>
|   |   |   |       |   | `-DeclRefExpr 0x1ccd8b91ef8 <col:25> 'int' lvalue Var 0x1ccd8b8c4a0 'ret' 'int'
|   |   |   |       |   `-ImplicitCastExpr 0x1ccd8b91f50 <col:32> 'int' <LValueToRValue>
|   |   |   |       |     `-DeclRefExpr 0x1ccd8b91f18 <col:32> 'int' lvalue ParmVar 0x1ccd8b8c310 'inl' 'int'
|   |   |   |       |-ImplicitCastExpr 0x1ccd8b92058 <col:39> 'int' <LValueToRValue>
|   |   |   |       | `-DeclRefExpr 0x1ccd8b91fa8 <col:39> 'int' lvalue Var 0x1ccd8b8c5c8 'i' 'int'
|   |   |   |       `-BinaryOperator 0x1ccd8b92038 <col:43, col:49> 'int' '-'
|   |   |   |         |-ImplicitCastExpr 0x1ccd8b92008 <col:43> 'int' <LValueToRValue>
|   |   |   |         | `-DeclRefExpr 0x1ccd8b91fc8 <col:43> 'int' lvalue Var 0x1ccd8b8c4a0 'ret' 'int'
|   |   |   |         `-ImplicitCastExpr 0x1ccd8b92020 <col:49> 'int' <LValueToRValue>
|   |   |   |           `-DeclRefExpr 0x1ccd8b91fe8 <col:49> 'int' lvalue ParmVar 0x1ccd8b8c310 'inl' 'int'
|   |   |   |-CompoundAssignOperator 0x1ccd8b92138 <line:285:13, col:18> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |   | |-DeclRefExpr 0x1ccd8b920e0 <col:13> 'int' lvalue Var 0x1ccd8b8c548 'n' 'int'
|   |   |   | `-ImplicitCastExpr 0x1ccd8b92120 <col:18> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x1ccd8b92100 <col:18> 'int' lvalue Var 0x1ccd8b8c5c8 'i' 'int'
|   |   |   `-CompoundAssignOperator 0x1ccd8b92208 <line:286:13, col:29> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |     |-MemberExpr 0x1ccd8b921a0 <col:13, col:18> 'int' lvalue ->buf_off 0x1ccd8b86708
|   |   |     | `-ImplicitCastExpr 0x1ccd8b92188 <col:13> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |     |   `-DeclRefExpr 0x1ccd8b92168 <col:13> 'BIO_ENC_CTX *' lvalue Var 0x1ccd8b8c678 'ctx' 'BIO_ENC_CTX *'
|   |   |     `-ImplicitCastExpr 0x1ccd8b921f0 <col:29> 'int' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x1ccd8b921d0 <col:29> 'int' lvalue Var 0x1ccd8b8c5c8 'i' 'int'
|   |   |-BinaryOperator 0x1ccd8b92308 <line:288:9, col:24> 'int' '='
|   |   | |-MemberExpr 0x1ccd8b922b0 <col:9, col:14> 'int' lvalue ->buf_len 0x1ccd8b86698
|   |   | | `-ImplicitCastExpr 0x1ccd8b92298 <col:9> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1ccd8b92278 <col:9> 'BIO_ENC_CTX *' lvalue Var 0x1ccd8b8c678 'ctx' 'BIO_ENC_CTX *'
|   |   | `-IntegerLiteral 0x1ccd8b922e0 <col:24> 'int' 0
|   |   `-BinaryOperator 0x1ccd8b923b8 <line:289:9, col:24> 'int' '='
|   |     |-MemberExpr 0x1ccd8b92360 <col:9, col:14> 'int' lvalue ->buf_off 0x1ccd8b86708
|   |     | `-ImplicitCastExpr 0x1ccd8b92348 <col:9> 'BIO_ENC_CTX *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x1ccd8b92328 <col:9> 'BIO_ENC_CTX *' lvalue Var 0x1ccd8b8c678 'ctx' 'BIO_ENC_CTX *'
|   |     `-IntegerLiteral 0x1ccd8b92390 <col:24> 'int' 0
|   `-ReturnStmt 0x1ccd8b924c0 <line:292:5, col:16>
|     `-ImplicitCastExpr 0x1ccd8b924a8 <col:12, col:16> 'int' <LValueToRValue>
|       `-ParenExpr 0x1ccd8b92488 <col:12, col:16> 'int' lvalue
|         `-DeclRefExpr 0x1ccd8b92468 <col:13> 'int' lvalue Var 0x1ccd8b8c4a0 'ret' 'int'
|-FunctionDecl 0x1ccd8b92778 <line:295:1, line:388:1> line:295:13 invalid enc_ctrl 'long (int *, int, long, void *)' static
| |-ParmVarDecl 0x1ccd8b92548 <col:22, col:27> col:27 invalid b 'int *'
| |-ParmVarDecl 0x1ccd8b925c8 <col:30, col:34> col:34 used cmd 'int'
| |-ParmVarDecl 0x1ccd8b92648 <col:39, col:44> col:44 used num 'long'
| |-ParmVarDecl 0x1ccd8b926c8 <col:49, col:55> col:55 used ptr 'void *'
| `-CompoundStmt 0x1ccd8b92fa0 <line:296:1, line:388:1>
|   |-DeclStmt 0x1ccd8b92958 <line:298:5, col:28>
|   | |-VarDecl 0x1ccd8b92860 <col:5, col:18> col:18 used ctx 'BIO_ENC_CTX *'
|   | `-VarDecl 0x1ccd8b928d8 <col:5, col:24> col:24 used dctx 'BIO_ENC_CTX *'
|   |-DeclStmt 0x1ccd8b92a30 <line:299:5, col:17>
|   | `-VarDecl 0x1ccd8b92988 <col:5, col:16> col:10 used ret 'long' cinit
|   |   `-ImplicitCastExpr 0x1ccd8b92a18 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x1ccd8b929f0 <col:16> 'int' 1
|   |-DeclStmt 0x1ccd8b92ac8 <line:300:5, col:10>
|   | `-VarDecl 0x1ccd8b92a60 <col:5, col:9> col:9 used i 'int'
|   |-IfStmt 0x1ccd8b8ac38 <line:306:5, line:307:16>
|   | |-BinaryOperator 0x1ccd8b8abc8 <line:306:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x1ccd8b8ab98 <.//openssl//file_jk/before\crypto\evp\bio_enc.c:306:9> 'BIO_ENC_CTX *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1ccd8b8aaf0 <col:9> 'BIO_ENC_CTX *' lvalue Var 0x1ccd8b92860 'ctx' 'BIO_ENC_CTX *'
|   | | `-ImplicitCastExpr 0x1ccd8b8abb0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'BIO_ENC_CTX *' <BitCast>
|   | |   `-ParenExpr 0x1ccd8b8ab78 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1ccd8b8ab50 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1ccd8b8ab10 <col:26> 'int' 0
|   | `-ReturnStmt 0x1ccd8b8ac28 <.//openssl//file_jk/before\crypto\evp\bio_enc.c:307:9, col:16>
|   |   `-ImplicitCastExpr 0x1ccd8b8ac10 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x1ccd8b8abe8 <col:16> 'int' 0
|   |-SwitchStmt 0x1ccd8b8aca0 <line:309:5, line:386:5>
|   | |-ImplicitCastExpr 0x1ccd8b8ac88 <line:309:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1ccd8b8ac50 <col:13> 'int' lvalue ParmVar 0x1ccd8b925c8 'cmd' 'int'
|   | `-CompoundStmt 0x1ccd8b92e80 <col:18, line:386:5>
|   |   |-BinaryOperator 0x1ccd8b8ad50 <line:311:9, col:19> 'int' '='
|   |   | |-MemberExpr 0x1ccd8b8acf8 <col:9, col:14> 'int' lvalue ->ok 0x1ccd8b86858
|   |   | | `-ImplicitCastExpr 0x1ccd8b8ace0 <col:9> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1ccd8b8acc0 <col:9> 'BIO_ENC_CTX *' lvalue Var 0x1ccd8b92860 'ctx' 'BIO_ENC_CTX *'
|   |   | `-IntegerLiteral 0x1ccd8b8ad28 <col:19> 'int' 1
|   |   |-BinaryOperator 0x1ccd8b8ae00 <line:312:9, col:25> 'int' '='
|   |   | |-MemberExpr 0x1ccd8b8ada8 <col:9, col:14> 'int' lvalue ->finished 0x1ccd8b867e8
|   |   | | `-ImplicitCastExpr 0x1ccd8b8ad90 <col:9> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1ccd8b8ad70 <col:9> 'BIO_ENC_CTX *' lvalue Var 0x1ccd8b92860 'ctx' 'BIO_ENC_CTX *'
|   |   | `-IntegerLiteral 0x1ccd8b8add8 <col:25> 'int' 0
|   |   |-IfStmt 0x1ccd8b8b338 <line:313:9, line:315:20>
|   |   | |-OpaqueValueExpr 0x1ccd8b8b320 <<invalid sloc>> '_Bool'
|   |   | `-ReturnStmt 0x1ccd8b8b310 <col:13, col:20>
|   |   |   `-ImplicitCastExpr 0x1ccd8b8b2f8 <col:20> 'long' <IntegralCast>
|   |   |     `-IntegerLiteral 0x1ccd8b8b2d0 <col:20> 'int' 0
|   |   |-BreakStmt 0x1ccd8b8b528 <line:317:9>
|   |   |-IfStmt 0x1ccd8b8b720 <line:319:9, line:322:13> has_else
|   |   | |-BinaryOperator 0x1ccd8b8b5d8 <line:319:13, col:26> 'int' '<='
|   |   | | |-ImplicitCastExpr 0x1ccd8b8b5c0 <col:13, col:18> 'int' <LValueToRValue>
|   |   | | | `-MemberExpr 0x1ccd8b8b568 <col:13, col:18> 'int' lvalue ->cont 0x1ccd8b86778
|   |   | | |   `-ImplicitCastExpr 0x1ccd8b8b550 <col:13> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x1ccd8b8b530 <col:13> 'BIO_ENC_CTX *' lvalue Var 0x1ccd8b92860 'ctx' 'BIO_ENC_CTX *'
|   |   | | `-IntegerLiteral 0x1ccd8b8b598 <col:26> 'int' 0
|   |   | |-BinaryOperator 0x1ccd8b8b658 <line:320:13, col:19> 'long' '='
|   |   | | |-DeclRefExpr 0x1ccd8b8b5f8 <col:13> 'long' lvalue Var 0x1ccd8b92988 'ret' 'long'
|   |   | | `-ImplicitCastExpr 0x1ccd8b8b640 <col:19> 'long' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x1ccd8b8b618 <col:19> 'int' 1
|   |   | `-NullStmt 0x1ccd8b8b718 <line:322:13>
|   |   |-BreakStmt 0x1ccd8b8b748 <line:323:9>
|   |   |-BinaryOperator 0x1ccd8b8b8a8 <line:325:9, col:35> 'long' '='
|   |   | |-DeclRefExpr 0x1ccd8b8b750 <col:9> 'long' lvalue Var 0x1ccd8b92988 'ret' 'long'
|   |   | `-ImplicitCastExpr 0x1ccd8b8b890 <col:15, col:35> 'long' <IntegralCast>
|   |   |   `-BinaryOperator 0x1ccd8b8b870 <col:15, col:35> 'int' '-'
|   |   |     |-ImplicitCastExpr 0x1ccd8b8b840 <col:15, col:20> 'int' <LValueToRValue>
|   |   |     | `-MemberExpr 0x1ccd8b8b7a8 <col:15, col:20> 'int' lvalue ->buf_len 0x1ccd8b86698
|   |   |     |   `-ImplicitCastExpr 0x1ccd8b8b790 <col:15> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x1ccd8b8b770 <col:15> 'BIO_ENC_CTX *' lvalue Var 0x1ccd8b92860 'ctx' 'BIO_ENC_CTX *'
|   |   |     `-ImplicitCastExpr 0x1ccd8b8b858 <col:30, col:35> 'int' <LValueToRValue>
|   |   |       `-MemberExpr 0x1ccd8b8b810 <col:30, col:35> 'int' lvalue ->buf_off 0x1ccd8b86708
|   |   |         `-ImplicitCastExpr 0x1ccd8b8b7f8 <col:30> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |           `-DeclRefExpr 0x1ccd8b8b7d8 <col:30> 'BIO_ENC_CTX *' lvalue Var 0x1ccd8b92860 'ctx' 'BIO_ENC_CTX *'
|   |   |-BreakStmt 0x1ccd8b8ba00 <line:328:9>
|   |   |-BinaryOperator 0x1ccd8b8eba0 <line:330:9, col:35> 'long' '='
|   |   | |-DeclRefExpr 0x1ccd8b8ba08 <col:9> 'long' lvalue Var 0x1ccd8b92988 'ret' 'long'
|   |   | `-ImplicitCastExpr 0x1ccd8b8eb88 <col:15, col:35> 'long' <IntegralCast>
|   |   |   `-BinaryOperator 0x1ccd8b8eb68 <col:15, col:35> 'int' '-'
|   |   |     |-ImplicitCastExpr 0x1ccd8b8eb38 <col:15, col:20> 'int' <LValueToRValue>
|   |   |     | `-MemberExpr 0x1ccd8b8ba60 <col:15, col:20> 'int' lvalue ->buf_len 0x1ccd8b86698
|   |   |     |   `-ImplicitCastExpr 0x1ccd8b8ba48 <col:15> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x1ccd8b8ba28 <col:15> 'BIO_ENC_CTX *' lvalue Var 0x1ccd8b92860 'ctx' 'BIO_ENC_CTX *'
|   |   |     `-ImplicitCastExpr 0x1ccd8b8eb50 <col:30, col:35> 'int' <LValueToRValue>
|   |   |       `-MemberExpr 0x1ccd8b8eb08 <col:30, col:35> 'int' lvalue ->buf_off 0x1ccd8b86708
|   |   |         `-ImplicitCastExpr 0x1ccd8b8eaf0 <col:30> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |           `-DeclRefExpr 0x1ccd8b8ba90 <col:30> 'BIO_ENC_CTX *' lvalue Var 0x1ccd8b92860 'ctx' 'BIO_ENC_CTX *'
|   |   |-BreakStmt 0x1ccd8b8ecf8 <line:333:9>
|   |   |-LabelStmt 0x1ccd8b8f080 <line:336:2, line:341:9> 'again'
|   |   | `-WhileStmt 0x1ccd8b8f018 <line:337:9, line:341:9>
|   |   |   |-BinaryOperator 0x1ccd8b8ee00 <line:337:16, col:37> 'int' '!='
|   |   |   | |-ImplicitCastExpr 0x1ccd8b8edd0 <col:16, col:21> 'int' <LValueToRValue>
|   |   |   | | `-MemberExpr 0x1ccd8b8ed38 <col:16, col:21> 'int' lvalue ->buf_len 0x1ccd8b86698
|   |   |   | |   `-ImplicitCastExpr 0x1ccd8b8ed20 <col:16> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |   | |     `-DeclRefExpr 0x1ccd8b8ed00 <col:16> 'BIO_ENC_CTX *' lvalue Var 0x1ccd8b92860 'ctx' 'BIO_ENC_CTX *'
|   |   |   | `-ImplicitCastExpr 0x1ccd8b8ede8 <col:32, col:37> 'int' <LValueToRValue>
|   |   |   |   `-MemberExpr 0x1ccd8b8eda0 <col:32, col:37> 'int' lvalue ->buf_off 0x1ccd8b86708
|   |   |   |     `-ImplicitCastExpr 0x1ccd8b8ed88 <col:32> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |   |       `-DeclRefExpr 0x1ccd8b8ed68 <col:32> 'BIO_ENC_CTX *' lvalue Var 0x1ccd8b92860 'ctx' 'BIO_ENC_CTX *'
|   |   |   `-CompoundStmt 0x1ccd8b8f000 <col:46, line:341:9>
|   |   |     `-IfStmt 0x1ccd8b8efe8 <line:339:13, line:340:24>
|   |   |       |-BinaryOperator 0x1ccd8b8ef68 <line:339:17, col:21> 'int' '<'
|   |   |       | |-ImplicitCastExpr 0x1ccd8b8ef50 <col:17> 'int' <LValueToRValue>
|   |   |       | | `-DeclRefExpr 0x1ccd8b8ef08 <col:17> 'int' lvalue Var 0x1ccd8b92a60 'i' 'int'
|   |   |       | `-IntegerLiteral 0x1ccd8b8ef28 <col:21> 'int' 0
|   |   |       `-ReturnStmt 0x1ccd8b8efd8 <line:340:17, col:24>
|   |   |         `-ImplicitCastExpr 0x1ccd8b8efc0 <col:24> 'long' <IntegralCast>
|   |   |           `-ImplicitCastExpr 0x1ccd8b8efa8 <col:24> 'int' <LValueToRValue>
|   |   |             `-DeclRefExpr 0x1ccd8b8ef88 <col:24> 'int' lvalue Var 0x1ccd8b92a60 'i' 'int'
|   |   |-IfStmt 0x1ccd8b8f5e8 <line:343:9, line:355:9>
|   |   | |-UnaryOperator 0x1ccd8b8f118 <line:343:13, col:19> 'int' prefix '!' cannot overflow
|   |   | | `-ImplicitCastExpr 0x1ccd8b8f100 <col:14, col:19> 'int' <LValueToRValue>
|   |   | |   `-MemberExpr 0x1ccd8b8f0d0 <col:14, col:19> 'int' lvalue ->finished 0x1ccd8b867e8
|   |   | |     `-ImplicitCastExpr 0x1ccd8b8f0b8 <col:14> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x1ccd8b8f098 <col:14> 'BIO_ENC_CTX *' lvalue Var 0x1ccd8b92860 'ctx' 'BIO_ENC_CTX *'
|   |   | `-CompoundStmt 0x1ccd8b8f5b0 <col:29, line:355:9>
|   |   |   |-BinaryOperator 0x1ccd8b8f1c0 <line:344:13, col:29> 'int' '='
|   |   |   | |-MemberExpr 0x1ccd8b8f168 <col:13, col:18> 'int' lvalue ->finished 0x1ccd8b867e8
|   |   |   | | `-ImplicitCastExpr 0x1ccd8b8f150 <col:13> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x1ccd8b8f130 <col:13> 'BIO_ENC_CTX *' lvalue Var 0x1ccd8b92860 'ctx' 'BIO_ENC_CTX *'
|   |   |   | `-IntegerLiteral 0x1ccd8b8f198 <col:29> 'int' 1
|   |   |   |-BinaryOperator 0x1ccd8b8f270 <line:345:13, col:28> 'int' '='
|   |   |   | |-MemberExpr 0x1ccd8b8f218 <col:13, col:18> 'int' lvalue ->buf_off 0x1ccd8b86708
|   |   |   | | `-ImplicitCastExpr 0x1ccd8b8f200 <col:13> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x1ccd8b8f1e0 <col:13> 'BIO_ENC_CTX *' lvalue Var 0x1ccd8b92860 'ctx' 'BIO_ENC_CTX *'
|   |   |   | `-IntegerLiteral 0x1ccd8b8f248 <col:28> 'int' 0
|   |   |   |-BinaryOperator 0x1ccd8b8f4c0 <line:349:13, col:28> 'int' '='
|   |   |   | |-MemberExpr 0x1ccd8b8f418 <col:13, col:18> 'int' lvalue ->ok 0x1ccd8b86858
|   |   |   | | `-ImplicitCastExpr 0x1ccd8b8f400 <col:13> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x1ccd8b8f3e0 <col:13> 'BIO_ENC_CTX *' lvalue Var 0x1ccd8b92860 'ctx' 'BIO_ENC_CTX *'
|   |   |   | `-CStyleCastExpr 0x1ccd8b8f498 <col:23, col:28> 'int' <IntegralCast>
|   |   |   |   `-ImplicitCastExpr 0x1ccd8b8f480 <col:28> 'long' <LValueToRValue> part_of_explicit_cast
|   |   |   |     `-DeclRefExpr 0x1ccd8b8f448 <col:28> 'long' lvalue Var 0x1ccd8b92988 'ret' 'long'
|   |   |   |-IfStmt 0x1ccd8b8f580 <line:350:13, line:351:17>
|   |   |   | |-BinaryOperator 0x1ccd8b8f558 <line:350:17, col:24> 'int' '<='
|   |   |   | | |-ImplicitCastExpr 0x1ccd8b8f528 <col:17> 'long' <LValueToRValue>
|   |   |   | | | `-DeclRefExpr 0x1ccd8b8f4e0 <col:17> 'long' lvalue Var 0x1ccd8b92988 'ret' 'long'
|   |   |   | | `-ImplicitCastExpr 0x1ccd8b8f540 <col:24> 'long' <IntegralCast>
|   |   |   | |   `-IntegerLiteral 0x1ccd8b8f500 <col:24> 'int' 0
|   |   |   | `-BreakStmt 0x1ccd8b8f578 <line:351:17>
|   |   |   `-GotoStmt 0x1ccd8b8f598 <line:354:13, col:18> 'again' 0x1ccd8b8f030
|   |   |-BreakStmt 0x1ccd8b8f6a0 <line:359:9>
|   |   |-BinaryOperator 0x1ccd8b8f788 <line:361:9, col:26> 'long' '='
|   |   | |-DeclRefExpr 0x1ccd8b8f6a8 <col:9> 'long' lvalue Var 0x1ccd8b92988 'ret' 'long'
|   |   | `-CStyleCastExpr 0x1ccd8b8f760 <col:15, col:26> 'long' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x1ccd8b8f748 <col:21, col:26> 'int' <LValueToRValue> part_of_explicit_cast
|   |   |     `-MemberExpr 0x1ccd8b8f700 <col:21, col:26> 'int' lvalue ->ok 0x1ccd8b86858
|   |   |       `-ImplicitCastExpr 0x1ccd8b8f6e8 <col:21> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x1ccd8b8f6c8 <col:21> 'BIO_ENC_CTX *' lvalue Var 0x1ccd8b92860 'ctx' 'BIO_ENC_CTX *'
|   |   |-BreakStmt 0x1ccd8b8f7a8 <line:362:9>
|   |   |-BreakStmt 0x1ccd8b8f890 <line:367:9>
|   |   |-BreakStmt 0x1ccd8b8f918 <line:372:9>
|   |   |-IfStmt 0x1ccd8b92b70 <line:377:9, line:378:20>
|   |   | |-OpaqueValueExpr 0x1ccd8b92b58 <<invalid sloc>> '_Bool'
|   |   | `-ReturnStmt 0x1ccd8b92b48 <col:13, col:20>
|   |   |   `-ImplicitCastExpr 0x1ccd8b92b30 <col:20> 'long' <IntegralCast>
|   |   |     `-IntegerLiteral 0x1ccd8b8fac8 <col:20> 'int' 0
|   |   |-BreakStmt 0x1ccd8b92da8 <line:382:9>
|   |   |-DefaultStmt 0x1ccd8b92e58 <line:383:5, col:12>
|   |   | `-NullStmt 0x1ccd8b92e50 <col:12>
|   |   `-BreakStmt 0x1ccd8b92e78 <line:385:9>
|   `-ReturnStmt 0x1ccd8b92f90 <line:387:5, col:16>
|     `-ImplicitCastExpr 0x1ccd8b92f78 <col:12, col:16> 'long' <LValueToRValue>
|       `-ParenExpr 0x1ccd8b92f58 <col:12, col:16> 'long' lvalue
|         `-DeclRefExpr 0x1ccd8b92f38 <col:13> 'long' lvalue Var 0x1ccd8b92988 'ret' 'long'
|-FunctionDecl 0x1ccd8b931a0 <line:390:1, line:403:1> line:390:13 invalid enc_callback_ctrl 'long (int *, int, int *)' static
| |-ParmVarDecl 0x1ccd8b92ff8 <col:31, col:36> col:36 invalid b 'int *'
| |-ParmVarDecl 0x1ccd8b93078 <col:39, col:43> col:43 used cmd 'int'
| |-ParmVarDecl 0x1ccd8b930f8 <col:48, col:61> col:61 invalid fp 'int *'
| `-CompoundStmt 0x1ccd8b93720 <line:391:1, line:403:1>
|   |-DeclStmt 0x1ccd8b93330 <line:392:5, col:17>
|   | `-VarDecl 0x1ccd8b93288 <col:5, col:16> col:10 used ret 'long' cinit
|   |   `-ImplicitCastExpr 0x1ccd8b93318 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x1ccd8b932f0 <col:16> 'int' 1
|   |-IfStmt 0x1ccd8b93478 <line:395:5, line:396:18>
|   | |-OpaqueValueExpr 0x1ccd8b93460 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1ccd8b93450 <col:9, col:18>
|   |   `-ImplicitCastExpr 0x1ccd8b93438 <col:16, col:18> 'long' <IntegralCast>
|   |     `-ParenExpr 0x1ccd8b93418 <col:16, col:18> 'int'
|   |       `-IntegerLiteral 0x1ccd8b933f0 <col:17> 'int' 0
|   |-SwitchStmt 0x1ccd8b934e0 <line:397:5, line:401:5>
|   | |-ImplicitCastExpr 0x1ccd8b934c8 <line:397:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1ccd8b93490 <col:13> 'int' lvalue ParmVar 0x1ccd8b93078 'cmd' 'int'
|   | `-CompoundStmt 0x1ccd8b93698 <col:18, line:401:5>
|   |   |-DefaultStmt 0x1ccd8b93670 <line:398:5, col:12>
|   |   | `-NullStmt 0x1ccd8b93668 <col:12>
|   |   `-BreakStmt 0x1ccd8b93690 <line:400:9>
|   `-ReturnStmt 0x1ccd8b93710 <line:402:5, col:16>
|     `-ImplicitCastExpr 0x1ccd8b936f8 <col:12, col:16> 'long' <LValueToRValue>
|       `-ParenExpr 0x1ccd8b936d8 <col:12, col:16> 'long' lvalue
|         `-DeclRefExpr 0x1ccd8b936b8 <col:13> 'long' lvalue Var 0x1ccd8b93288 'ret' 'long'
`-FunctionDecl 0x1ccd8b93a70 <line:425:1, line:450:1> line:425:5 invalid BIO_set_cipher 'int (int *, const int *, const unsigned char *, const unsigned char *, int)'
  |-ParmVarDecl 0x1ccd8b93768 <col:20, col:25> col:25 invalid b 'int *'
  |-ParmVarDecl 0x1ccd8b937e8 <col:28, col:46> col:46 invalid c 'const int *'
  |-ParmVarDecl 0x1ccd8b93868 <col:49, col:70> col:70 used k 'const unsigned char *'
  |-ParmVarDecl 0x1ccd8b938e8 <line:426:20, col:41> col:41 used i 'const unsigned char *'
  |-ParmVarDecl 0x1ccd8b93968 <col:44, col:48> col:48 used e 'int'
  `-CompoundStmt 0x1ccd8b8db18 <line:427:1, line:450:1>
    |-DeclStmt 0x1ccd8b93bf8 <line:428:5, col:21>
    | `-VarDecl 0x1ccd8b93b90 <col:5, col:18> col:18 used ctx 'BIO_ENC_CTX *'
    |-DeclStmt 0x1ccd8b94298 <line:429:5, col:75>
    | `-VarDecl 0x1ccd8b94230 <col:5, col:74> col:12 used callback 'long (*)(struct bio_st *, int, const char *, int, long, long)'
    |-IfStmt 0x1ccd8b94438 <line:432:5, line:433:16>
    | |-BinaryOperator 0x1ccd8b943e0 <line:432:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
    | | |-ImplicitCastExpr 0x1ccd8b943b0 <.//openssl//file_jk/before\crypto\evp\bio_enc.c:432:9> 'BIO_ENC_CTX *' <LValueToRValue>
    | | | `-DeclRefExpr 0x1ccd8b94308 <col:9> 'BIO_ENC_CTX *' lvalue Var 0x1ccd8b93b90 'ctx' 'BIO_ENC_CTX *'
    | | `-ImplicitCastExpr 0x1ccd8b943c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'BIO_ENC_CTX *' <BitCast>
    | |   `-ParenExpr 0x1ccd8b94390 <col:17, col:27> 'void *'
    | |     `-CStyleCastExpr 0x1ccd8b94368 <col:18, col:26> 'void *' <NullToPointer>
    | |       `-IntegerLiteral 0x1ccd8b94328 <col:26> 'int' 0
    | `-ReturnStmt 0x1ccd8b94428 <.//openssl//file_jk/before\crypto\evp\bio_enc.c:433:9, col:16>
    |   `-IntegerLiteral 0x1ccd8b94400 <col:16> 'int' 0
    |-IfStmt 0x1ccd8b947a8 <line:437:5, line:440:16>
    | |-OpaqueValueExpr 0x1ccd8b94790 <<invalid sloc>> '_Bool'
    | `-ReturnStmt 0x1ccd8b94780 <col:9, col:16>
    |   `-IntegerLiteral 0x1ccd8b94758 <col:16> 'int' 0
    |-IfStmt 0x1ccd8b949c8 <line:444:5, line:445:16>
    | |-OpaqueValueExpr 0x1ccd8b949b0 <<invalid sloc>> '_Bool'
    | `-ReturnStmt 0x1ccd8b949a0 <col:9, col:16>
    |   `-IntegerLiteral 0x1ccd8b94978 <col:16> 'int' 0
    `-ReturnStmt 0x1ccd8b8db08 <line:449:5, col:12>
      `-IntegerLiteral 0x1ccd8b8dae0 <col:12> 'int' 1
