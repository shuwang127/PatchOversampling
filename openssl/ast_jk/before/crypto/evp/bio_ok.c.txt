TranslationUnitDecl 0x25023bd2ff8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x25023bd3890 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x25023bd3590 '__int128'
|-TypedefDecl 0x25023bd3900 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x25023bd35b0 'unsigned __int128'
|-TypedefDecl 0x25023bd3c38 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x25023bd39f0 'struct __NSConstantString_tag'
|   `-Record 0x25023bd3958 '__NSConstantString_tag'
|-TypedefDecl 0x25023bd3ca8 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x25023bd31d0 'unsigned long long'
|-TypedefDecl 0x25023bd3d40 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x25023bd3d00 'char *'
|   `-BuiltinType 0x25023bd3090 'char'
|-TypedefDecl 0x25023bd3db0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x25023bd3d00 'char *'
|   `-BuiltinType 0x25023bd3090 'char'
|-TypedefDecl 0x25023bd3e70 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x25023bd31d0 'unsigned long long'
|-TypedefDecl 0x25023bd3ee0 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x25023bd3d00 'char *'
|   `-BuiltinType 0x25023bd3090 'char'
|-FunctionDecl 0x250255edde0 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x250255ede80 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x250255edef0 <col:21> Implicit
|-FunctionDecl 0x250255edf48 prev 0x250255edde0 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x250255edc70 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x250255ee038 <col:21> Inherited Implicit
|-TypedefDecl 0x250255ee078 prev 0x25023bd3ca8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x25023bd31d0 'unsigned long long'
|-TypedefDecl 0x250255ee120 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x250255ee0f0 'size_t' sugar
|   |-Typedef 0x250255ee078 'size_t'
|   `-BuiltinType 0x25023bd31d0 'unsigned long long'
|-TypedefDecl 0x250255ee190 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x25023bd3130 'long long'
|-TypedefDecl 0x250255ee200 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x25023bd3130 'long long'
|-TypedefDecl 0x250255ee270 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x25023bd3170 'unsigned short'
|-TypedefDecl 0x250255ee2e0 <line:541:1, col:24> col:24 referenced wint_t 'unsigned short'
| `-BuiltinType 0x25023bd3170 'unsigned short'
|-TypedefDecl 0x250255ee350 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x25023bd3170 'unsigned short'
|-TypedefDecl 0x250255ee3c0 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x25023bd30f0 'int'
|-TypedefDecl 0x250255ee430 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x25023bd3110 'long'
|-TypedefDecl 0x250255ee4a0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x25023bd3130 'long long'
|-TypedefDecl 0x250255ee530 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x250255ee500 '__time64_t' sugar
|   |-Typedef 0x250255ee4a0 '__time64_t'
|   `-BuiltinType 0x25023bd3130 'long long'
|-FunctionDecl 0x250255ee6a8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x250255ee8c8 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x2502562ebc0 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x250255eea08 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x250255eea80 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x250255eeaf8 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x250255eeb78 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x2502562e960 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x2502562eca0 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x2502562ed60 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x2502562eed0 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x2502562ee80 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x2502562ee20 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x2502562ed40 'struct threadlocaleinfostruct'
|       `-Record 0x2502562d950 'threadlocaleinfostruct'
|-TypedefDecl 0x2502562efe0 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x2502562ef90 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x2502562ef30 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x2502562ee00 'struct threadmbcinfostruct'
|       `-Record 0x2502562ed60 'threadmbcinfostruct'
|-RecordDecl 0x2502562f038 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x2502562f0f0 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x2502562f1b0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2502562f240 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x2502562f2d0 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x2502562f388 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x2502562f330 'struct localeinfo_struct' sugar
|   `-RecordType 0x2502562f190 'struct localeinfo_struct'
|     `-Record 0x2502562f0f0 'localeinfo_struct'
|-TypedefDecl 0x2502562f460 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x2502562f410 'struct localeinfo_struct *'
|   `-ElaboratedType 0x2502562f330 'struct localeinfo_struct' sugar
|     `-RecordType 0x2502562f190 'struct localeinfo_struct'
|       `-Record 0x2502562f0f0 'localeinfo_struct'
|-RecordDecl 0x2502562f4d8 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x2502562f590 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2502562f608 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x2502562f6c8 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x2502562f760 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x2502562f7d0 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x2502562f888 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x2502562f830 'struct localerefcount' sugar
|   `-RecordType 0x2502562f570 'struct localerefcount'
|     `-Record 0x2502562f4d8 'localerefcount'
|-RecordDecl 0x2502562d950 prev 0x2502562eca0 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x2502562d9d0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2502562da48 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x2502562dab8 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x2502562db28 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x2502562db98 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x2502562dd58 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x2502562ddc8 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x2502562de38 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x2502562dea8 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x2502562df18 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x2502562df88 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x2502562dfe0 parent 0x25023bd2ff8 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x2502562e170 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x2502562e1e0 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x2502562e250 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x2502562e2c0 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x2502562e360 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x2502562e3d0 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x2502562e4e0 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x2502562e618 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x2502562e6c8 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x2502562e670 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x2502562ed40 'struct threadlocaleinfostruct'
|     `-Record 0x2502562d950 'threadlocaleinfostruct'
|-RecordDecl 0x2502562e760 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:63:1, line:72:9> line:63:8 struct _iobuf definition
| |-MaxFieldAlignmentAttr 0x2502562e820 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2502562e898 <line:64:9, col:15> col:15 _ptr 'char *'
| |-FieldDecl 0x250256369e0 <line:65:9, col:15> col:15 _cnt 'int'
| |-FieldDecl 0x25025636a50 <line:66:9, col:15> col:15 _base 'char *'
| |-FieldDecl 0x25025636ac0 <line:67:9, col:15> col:15 _flag 'int'
| |-FieldDecl 0x25025636b30 <line:68:9, col:15> col:15 _file 'int'
| |-FieldDecl 0x25025636ba0 <line:69:9, col:15> col:15 _charbuf 'int'
| |-FieldDecl 0x25025636c10 <line:70:9, col:15> col:15 _bufsiz 'int'
| `-FieldDecl 0x25025636c80 <line:71:9, col:15> col:15 _tmpfname 'char *'
|-TypedefDecl 0x25025636d30 <line:73:1, col:23> col:23 referenced FILE 'struct _iobuf':'struct _iobuf'
| `-ElaboratedType 0x25025636ce0 'struct _iobuf' sugar
|   `-RecordType 0x2502562e800 'struct _iobuf'
|     `-Record 0x2502562e760 '_iobuf'
|-FunctionDecl 0x25025636f68 <line:137:9, col:39> col:24 __iob_func 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|-TypedefDecl 0x25025637038 <line:144:1, col:17> col:17 referenced fpos_t 'long long'
| `-BuiltinType 0x25023bd3130 'long long'
|-FunctionDecl 0x25025637218 <line:175:24, col:65> col:36 _filbuf 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x250256370a0 <col:52, col:59> col:59 _File 'FILE *'
|-FunctionDecl 0x25025637510 <line:176:28, col:82> col:40 _flsbuf 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x250256372f0 <col:53, col:57> col:57 _Ch 'int'
| `-ParmVarDecl 0x25025637368 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x250256378c0 <line:178:24, col:121> col:39 _fsopen 'FILE *(const char *, const char *, int) __attribute__((cdecl))':'FILE *(const char *, const char *, int)'
| |-ParmVarDecl 0x250256375f0 <col:54, col:67> col:67 _Filename 'const char *'
| |-ParmVarDecl 0x25025637670 <col:85, col:98> col:98 _Mode 'const char *'
| `-ParmVarDecl 0x250256376f0 <col:110, col:114> col:114 _ShFlag 'int'
|-FunctionDecl 0x25025635b40 <line:180:9, col:51> col:22 clearerr 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x250256359d0 <col:39, col:46> col:46 _File 'FILE *'
|-FunctionDecl 0x25025635d70 <line:182:28, col:76> col:44 clearerr_s 'errno_t (FILE *) __attribute__((cdecl))':'errno_t (FILE *)'
| `-ParmVarDecl 0x25025635c30 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x25025635f20 <line:184:28, col:67> col:40 fclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x25025635e40 <col:55, col:62> col:62 _File 'FILE *'
|-FunctionDecl 0x25025636110 <line:185:28, col:55> col:40 _fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x25025636408 <line:187:24, col:94> col:39 _fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x250256361e0 <col:52, col:56> col:56 _FileHandle 'int'
| `-ParmVarDecl 0x25025636260 <col:76, col:89> col:89 _Mode 'const char *'
|-FunctionDecl 0x250256365c0 <line:189:24, col:58> col:36 feof 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x250256364e0 <col:46, col:53> col:53 _File 'FILE *'
|-FunctionDecl 0x25025636770 <line:190:24, col:60> col:36 ferror 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x25025636690 <col:48, col:55> col:55 _File 'FILE *'
|-FunctionDecl 0x25025636920 <line:191:28, col:71> col:40 fflush 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x25025636840 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x2502563db58 <line:192:28, col:66> col:40 fgetc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2502563da78 <col:54, col:61> col:61 _File 'FILE *'
|-FunctionDecl 0x2502563dce8 <line:193:28, col:54> col:40 _fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2502563e050 <line:194:28, col:90> col:40 fgetpos 'int (FILE *, fpos_t *) __attribute__((cdecl))':'int (FILE *, fpos_t *)'
| |-ParmVarDecl 0x2502563ddb0 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x2502563dea8 <col:77, col:86> col:86 _Pos 'fpos_t *'
|-FunctionDecl 0x2502563e408 <line:195:28, col:128> col:43 fgets 'char *(char *, int, FILE *) __attribute__((cdecl))':'char *(char *, int, FILE *)'
| |-ParmVarDecl 0x2502563e130 <col:75, col:82> col:82 _Buf 'char *'
| |-ParmVarDecl 0x2502563e1b0 <col:93, col:97> col:97 _MaxCount 'int'
| `-ParmVarDecl 0x2502563e228 <col:116, col:123> col:123 _File 'FILE *'
|-FunctionDecl 0x2502563e5c8 <line:197:24, col:61> col:36 _fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2502563e4e8 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x2502563e890 <line:204:24, col:117> col:39 _tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x2502563e6a0 <col:59, col:72> col:72 _DirName 'const char *'
| `-ParmVarDecl 0x2502563e720 <col:93, col:106> col:106 _FilePrefix 'const char *'
|-FunctionDecl 0x2502563ba30 <line:210:28, col:54> col:40 _flushall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2502563be28 <line:211:72> col:72 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x2502563bec8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2502563bf30 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2502563bfa8 prev 0x2502563be28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:211:134> col:72 fopen 'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x2502563bc00 <col:85, col:98> col:98 _Filename 'const char *'
| |-ParmVarDecl 0x2502563bc80 <col:116, col:129> col:129 _Mode 'const char *'
| `-DeprecatedAttr 0x2502563c058 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2502563c4d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:213:28, col:149> col:44 fopen_s 'errno_t (FILE **, const char *, const char *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *)'
| |-ParmVarDecl 0x2502563c200 <col:78, col:86> col:86 _File 'FILE **'
| |-ParmVarDecl 0x2502563c280 <col:100, col:113> col:113 _Filename 'const char *'
| `-ParmVarDecl 0x2502563c300 <col:131, col:144> col:144 _Mode 'const char *'
|-FunctionDecl 0x2502563c7f0 <line:215:40> col:40 implicit fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x2502563c890 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x2502563c8f8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x2502563c970 <col:40> Implicit printf 2 3
|-FunctionDecl 0x2502563ea60 prev 0x2502563c7f0 <col:28, col:125> col:40 fprintf 'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x2502563c5b0 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x2502563c630 <col:100, col:113> col:113 _Format 'const char *'
| `-FormatAttr 0x2502563eb58 <col:40> Inherited printf 2 3
|-FunctionDecl 0x2502563ed20 <line:217:28, col:127> col:40 fprintf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x2502563eba0 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x2502563ec20 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x2502563ef78 <line:219:28, col:80> col:40 fputc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2502563ee00 <col:51, col:55> col:55 _Ch 'int'
| `-ParmVarDecl 0x2502563ee78 <col:68, col:75> col:75 _File 'FILE *'
|-FunctionDecl 0x2502563f1a8 <line:220:28, col:62> col:40 _fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x2502563f058 <col:55, col:59> col:59 _Ch 'int'
|-FunctionDecl 0x2502563f4a0 <line:221:28, col:92> col:40 fputs 'int (const char *, FILE *) __attribute__((cdecl))':'int (const char *, FILE *)'
| |-ParmVarDecl 0x2502563f280 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x2502563f2f8 <col:80, col:87> col:87 _File 'FILE *'
|-FunctionDecl 0x2502563f938 <line:222:43> col:43 implicit fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x2502563f9d8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x250256379f0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x25025637a58 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x25025637ac0 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x25025637b48 prev 0x2502563f938 <col:28, col:171> col:43 fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x2502563f580 <col:89, col:96> col:96 _DstBuf 'void *'
| |-ParmVarDecl 0x2502563f5f8 <col:110, col:117> col:117 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2502563f670 <col:136, col:143> col:143 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2502563f6e8 <col:159, col:166> col:166 _File 'FILE *'
|-FunctionDecl 0x25025638050 <line:224:28, col:195> col:43 fread_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x25025637c38 <col:91, col:98> col:98 _DstBuf 'void *'
| |-ParmVarDecl 0x25025637cb0 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x25025637d28 <col:134, col:141> col:141 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x25025637da0 <col:160, col:167> col:167 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x25025637e18 <col:183, col:190> col:190 _File 'FILE *'
|-FunctionDecl 0x25025638510 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:226:160> col:74 freopen 'FILE *(const char *, const char *, FILE *) __attribute__((cdecl))':'FILE *(const char *, const char *, FILE *)'
| |-ParmVarDecl 0x25025638240 <col:89, col:102> col:102 _Filename 'const char *'
| |-ParmVarDecl 0x250256382c0 <col:120, col:133> col:133 _Mode 'const char *'
| |-ParmVarDecl 0x25025638338 <col:148, col:155> col:155 _File 'FILE *'
| `-DeprecatedAttr 0x250256385c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using freopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x25025640b28 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:228:28, col:176> col:44 freopen_s 'errno_t (FILE **, const char *, const char *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *, FILE *)'
| |-ParmVarDecl 0x25025638710 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x25025638790 <col:102, col:115> col:115 _Filename 'const char *'
| |-ParmVarDecl 0x25025638810 <col:133, col:146> col:146 _Mode 'const char *'
| `-ParmVarDecl 0x25025638888 <col:161, col:168> col:168 _OldFile 'FILE *'
|-FunctionDecl 0x25025640ed0 <line:230:70> col:70 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x25025640f70 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x25025640fd8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x25025641050 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x250256410b8 prev 0x25025640ed0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:230:153> col:70 fscanf 'int (FILE *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x25025640d08 <col:85, col:92> col:92 _File 'FILE *'
| |-ParmVarDecl 0x25025640d88 <col:128, col:141> col:141 _Format 'const char *'
| |-FormatAttr 0x25025641298 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x25025641168 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x250256416d8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:231:201> col:77 _fscanf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x250256413d8 <col:95, col:102> col:102 _File 'FILE *'
| |-ParmVarDecl 0x25025641458 <col:148, col:161> col:161 _Format 'const char *'
| |-ParmVarDecl 0x250256414f0 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x25025641790 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x25025641a90 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:235:28, col:127> col:40 fscanf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x250256418d0 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x25025641950 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x25025641d80 <line:237:28, col:168> col:40 _fscanf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x25025641b68 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x25025641be8 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x25025641c60 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x250256420e0 <line:239:28, col:94> col:40 fsetpos 'int (FILE *, const fpos_t *) __attribute__((cdecl))':'int (FILE *, const fpos_t *)'
| |-ParmVarDecl 0x25025641e60 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x25025641f38 <col:75, col:90> col:90 _Pos 'const fpos_t *'
|-FunctionDecl 0x25025642498 <line:240:28, col:103> col:40 fseek 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x250256421b8 <col:54, col:61> col:61 _File 'FILE *'
| |-ParmVarDecl 0x25025642238 <col:73, col:78> col:78 _Offset 'long'
| `-ParmVarDecl 0x250256422b8 <col:92, col:96> col:96 _Origin 'int'
|-FunctionDecl 0x250256426f8 <line:241:24, col:63> col:37 ftell 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x25025642578 <col:51, col:58> col:58 _File 'FILE *'
|-FunctionDecl 0x25025644b08 <line:243:28, col:110> col:40 _fseeki64 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x250256427c8 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x25025642848 <col:77, col:85> col:85 _Offset 'long long'
| `-ParmVarDecl 0x250256428c8 <col:99, col:103> col:103 _Origin 'int'
|-FunctionDecl 0x25025644d68 <line:244:24, col:70> col:40 _ftelli64 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x25025644be8 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x25025645228 <line:246:43> col:43 implicit fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x250256452c8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x25025645330 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x25025645398 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x25025645400 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x25025645488 prev 0x25025645228 <col:28, col:159> col:43 fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x25025644e70 <col:81, col:94> col:94 _Str 'const void *'
| |-ParmVarDecl 0x25025644ee8 <col:105, col:112> col:112 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x25025644f60 <col:124, col:131> col:131 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x25025644fd8 <col:147, col:154> col:154 _File 'FILE *'
|-FunctionDecl 0x25025645650 <line:247:24, col:61> col:36 getc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x25025645570 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x250256457e0 <line:248:24, col:48> col:36 getchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x25025645968 <line:249:24, col:53> col:36 _getmaxstdio 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2502563fc30 <line:251:9, col:84> col:24 gets_s 'char *(char *, rsize_t) __attribute__((cdecl))':'char *(char *, rsize_t)'
| |-ParmVarDecl 0x25025645a38 <col:53, col:60> col:60 _Buf 'char *'
| `-ParmVarDecl 0x2502563fa80 <col:71, col:79> col:79 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x2502563ff58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:254:80 gets 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x2502563fe10 <col:139, col:145> col:145 _Buffer 'char *'
| `-DeprecatedAttr 0x25025640000 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x25025640220 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:255:16, col:54> col:28 _getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x25025640140 <col:42, col:49> col:49 _File 'FILE *'
|-FunctionDecl 0x25025640440 <line:258:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x250256402f8 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x250256405f0 <line:261:28, col:68> col:40 _pclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x25025640510 <col:56, col:63> col:63 _File 'FILE *'
|-FunctionDecl 0x25025640840 <line:262:24, col:101> col:39 _popen 'FILE *(const char *, const char *) __attribute__((cdecl))':'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x250256406c8 <col:53, col:66> col:66 _Command 'const char *'
| `-ParmVarDecl 0x25025640748 <col:83, col:96> col:96 _Mode 'const char *'
|-FunctionDecl 0x25025642aa0 <line:264:40> col:40 implicit printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x25025642b40 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x25025642bb0 <col:40> Implicit printf 1 2
|-FunctionDecl 0x25025642c18 prev 0x25025642aa0 <col:28, col:102> col:40 printf 'int (const char *, ...)'
| |-ParmVarDecl 0x25025640920 <col:77, col:90> col:90 _Format 'const char *'
| `-FormatAttr 0x25025642d08 <col:40> Inherited printf 1 2
|-FunctionDecl 0x25025642e38 <line:266:28, col:104> col:40 printf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x25025642d58 <col:79, col:92> col:92 _Format 'const char *'
|-FunctionDecl 0x25025643088 <line:268:28, col:79> col:40 putc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x25025642f10 <col:50, col:54> col:54 _Ch 'int'
| `-ParmVarDecl 0x25025642f88 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x25025643248 <line:269:28, col:60> col:40 putchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x25025643168 <col:53, col:57> col:57 _Ch 'int'
|-FunctionDecl 0x25025643468 <line:270:28, col:69> col:40 puts 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x25025643320 <col:52, col:65> col:65 _Str 'const char *'
|-FunctionDecl 0x250256436b8 <line:271:28, col:82> col:40 _putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x25025643540 <col:51, col:55> col:55 _Word 'int'
| `-ParmVarDecl 0x250256435b8 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x25025643878 <line:274:9, col:57> col:21 remove 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x25025643798 <col:35, col:48> col:48 _Filename 'const char *'
|-FunctionDecl 0x25025692010 <line:275:24, col:109> col:36 rename 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x25025643950 <col:50, col:63> col:63 _OldFilename 'const char *'
| `-ParmVarDecl 0x250256439d0 <col:84, col:97> col:97 _NewFilename 'const char *'
|-FunctionDecl 0x250256921d0 <line:276:9, col:58> col:21 _unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x250256920f0 <col:36, col:49> col:49 _Filename 'const char *'
|-FunctionDecl 0x25025692460 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:278:89> col:53 unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x25025692380 <col:67, col:80> col:80 _Filename 'const char *'
| `-DeprecatedAttr 0x25025692508 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _unlink. See online help for details." ""
|-FunctionDecl 0x25025692700 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:281:9, col:49> col:22 rewind 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x25025692628 <col:37, col:44> col:44 _File 'FILE *'
|-FunctionDecl 0x25025692890 <line:282:28, col:51> col:40 _rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x25025692b38 <line:283:69> col:69 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x25025692bd8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x25025692c48 <col:69> Implicit scanf 1 2
|-FunctionDecl 0x25025692cb0 prev 0x25025692b38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:283:129> col:69 scanf 'int (const char *restrict, ...)'
| |-ParmVarDecl 0x25025692a20 <col:104, col:117> col:117 _Format 'const char *'
| |-FormatAttr 0x25025692e88 <col:69> Inherited scanf 1 2
| `-DeprecatedAttr 0x25025692d58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x25025694270 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:284:177> col:76 _scanf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x25025694038 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x250256940b0 <col:155, col:165> col:165 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x25025694320 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _scanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x25025694548 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:288:40, col:116> col:52 scanf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x25025694468 <col:91, col:104> col:104 _Format 'const char *'
|-FunctionDecl 0x25025694798 <line:290:40, col:157> col:52 _scanf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x25025694620 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x25025694698 <col:135, col:145> col:145 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x25025694b58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:292:150> col:55 setbuf 'void (FILE *, char *) __attribute__((cdecl))':'void (FILE *, char *)'
| |-ParmVarDecl 0x25025694930 <col:70, col:77> col:77 _File 'FILE *'
| |-ParmVarDecl 0x250256949b0 <col:136, col:143> col:143 _Buffer 'char *'
| `-DeprecatedAttr 0x25025694c08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using setvbuf instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x25025694e30 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:293:28, col:66> col:40 _setmaxstdio 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x25025694d50 <col:58, col:62> col:62 _Max 'int'
|-FunctionDecl 0x25025690068 <line:294:28, col:93> col:49 _set_output_format 'unsigned int (unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int)'
| `-ParmVarDecl 0x2502568ff20 <col:73, col:86> col:86 _Format 'unsigned int'
|-FunctionDecl 0x25025690250 <line:295:28, col:72> col:49 _get_output_format 'unsigned int (void) __attribute__((cdecl))':'unsigned int (void)'
|-FunctionDecl 0x250256906a0 <line:296:28, col:145> col:40 setvbuf 'int (FILE *, char *, int, size_t) __attribute__((cdecl))':'int (FILE *, char *, int, size_t)'
| |-ParmVarDecl 0x25025690318 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x25025690398 <col:99, col:106> col:106 _Buf 'char *'
| |-ParmVarDecl 0x25025690418 <col:117, col:121> col:121 _Mode 'int'
| `-ParmVarDecl 0x25025690490 <col:133, col:140> col:140 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x25025690b20 <line:297:40, col:213> col:52 _snprintf_s 'int (char *, size_t, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, ...)'
| |-ParmVarDecl 0x25025690790 <col:93, col:100> col:100 _DstBuf 'char *'
| |-ParmVarDecl 0x25025690808 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x25025690880 <col:140, col:147> col:147 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x25025690900 <col:188, col:201> col:201 _Format 'const char *'
|-FunctionDecl 0x25025694f70 <line:300:40, col:188> col:52 sprintf_s 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x25025690c10 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x25025690c88 <col:112, col:119> col:119 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x25025690d08 <col:163, col:176> col:176 _Format 'const char *'
|-FunctionDecl 0x25025695138 <line:303:24, col:101> col:36 _scprintf 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x25025695058 <col:76, col:89> col:89 _Format 'const char *'
|-FunctionDecl 0x25025695510 <line:304:70> col:70 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x250256955b0 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x25025695618 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x25025695690 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x250256956f8 prev 0x25025695510 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:304:157> col:70 sscanf 'int (const char *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x250256952d0 <col:84, col:97> col:97 _Src 'const char *'
| |-ParmVarDecl 0x25025695350 <col:132, col:145> col:145 _Format 'const char *'
| |-FormatAttr 0x250256958d8 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x250256957a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x25025695cc8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:305:205> col:77 _sscanf_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x250256959e8 <col:94, col:107> col:107 _Src 'const char *'
| |-ParmVarDecl 0x25025695a68 <col:152, col:165> col:165 _Format 'const char *'
| |-ParmVarDecl 0x25025695ae0 <col:183, col:193> col:193 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x25025695d80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x25025691030 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:309:40, col:143> col:52 sscanf_s 'int (const char *, const char *, ...) __attribute__((cdecl))':'int (const char *, const char *, ...)'
| |-ParmVarDecl 0x25025695ec8 <col:68, col:81> col:81 _Src 'const char *'
| `-ParmVarDecl 0x25025690f30 <col:118, col:131> col:131 _Format 'const char *'
|-FunctionDecl 0x25025691328 <line:311:40, col:184> col:52 _sscanf_s_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x25025691110 <col:71, col:84> col:84 _Src 'const char *'
| |-ParmVarDecl 0x25025691190 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x25025691208 <col:162, col:172> col:172 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x250256917b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:312:217> col:76 _snscanf 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x250256914d0 <col:121, col:134> col:134 _Src 'const char *'
| |-ParmVarDecl 0x25025691548 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x250256915c8 <col:192, col:205> col:205 _Format 'const char *'
| `-DeprecatedAttr 0x25025691870 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x25025691e40 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:313:259> col:78 _snscanf_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x25025691ab0 <col:125, col:138> col:138 _Src 'const char *'
| |-ParmVarDecl 0x25025691b28 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x25025691ba8 <col:206, col:219> col:219 _Format 'const char *'
| |-ParmVarDecl 0x25025691c20 <col:237, col:247> col:247 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x25025696f90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x250256972f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:314:40, col:197> col:52 _snscanf_s 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x250256970d8 <col:99, col:112> col:112 _Src 'const char *'
| |-ParmVarDecl 0x25025697150 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x250256971d0 <col:172, col:185> col:185 _Format 'const char *'
|-FunctionDecl 0x25025697688 <line:315:40, col:237> col:52 _snscanf_s_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x250256973d8 <col:101, col:114> col:114 _Src 'const char *'
| |-ParmVarDecl 0x25025697450 <col:125, col:132> col:132 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x250256974d0 <col:184, col:197> col:197 _Format 'const char *'
| `-ParmVarDecl 0x25025697548 <col:215, col:225> col:225 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x250256978e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:317:86> col:74 tmpfile 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
| `-DeprecatedAttr 0x25025697988 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpfile_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x25025697c40 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:319:28, col:96> col:44 tmpfile_s 'errno_t (FILE **) __attribute__((cdecl))':'errno_t (FILE **)'
| `-ParmVarDecl 0x25025697ad0 <col:83, col:91> col:91 _File 'FILE **'
|-FunctionDecl 0x25025692f50 <line:320:28, col:106> col:44 tmpnam_s 'errno_t (char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t)'
| |-ParmVarDecl 0x25025697d18 <col:75, col:82> col:82 _Buf 'char *'
| `-ParmVarDecl 0x25025697d90 <col:93, col:101> col:101 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x250256931d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:323:79 tmpnam 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x250256930f0 <col:113, col:119> col:119 _Buffer 'char *'
| `-DeprecatedAttr 0x25025693278 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x25025693538 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:324:28, col:81> col:40 ungetc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x250256933c0 <col:52, col:56> col:56 _Ch 'int'
| `-ParmVarDecl 0x25025693438 <col:69, col:76> col:76 _File 'FILE *'
|-FunctionDecl 0x25025693950 <line:325:40> col:40 implicit vfprintf 'int (FILE *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x250256939f0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x25025693a58 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x25025693ac0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x25025693b40 <col:40> Implicit printf 2 0
|-FunctionDecl 0x25025693ba8 prev 0x25025693950 <col:28, col:139> col:40 vfprintf 'int (FILE *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x25025693610 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x25025693690 <col:101, col:114> col:114 _Format 'const char *'
| |-ParmVarDecl 0x25025693708 <col:123, col:131> col:131 _ArgList 'va_list':'char *'
| `-FormatAttr 0x25025693ca8 <col:40> Inherited printf 2 0
|-FunctionDecl 0x2502569afd0 <line:326:40> col:40 implicit vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x2502569b070 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x2502569b0d8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x2502569b140 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2502569b1c0 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x2502569b228 prev 0x2502569afd0 <col:28, col:138> col:40 vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x25025693cf0 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x25025693d70 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x25025693de8 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x2502569b328 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x2502569b588 <line:328:28, col:141> col:40 vfprintf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x2502569b370 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x2502569b3f0 <col:103, col:116> col:116 _Format 'const char *'
| `-ParmVarDecl 0x2502569b468 <col:125, col:133> col:133 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2502569b880 <line:329:28, col:140> col:40 vfscanf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x2502569b668 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x2502569b6e8 <col:102, col:115> col:115 _Format 'const char *'
| `-ParmVarDecl 0x2502569b760 <col:124, col:132> col:132 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2502569bbc8 <line:331:40> col:40 implicit vprintf 'int (const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x2502569bc68 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x2502569bcd0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2502569bd48 <col:40> Implicit printf 1 0
|-FunctionDecl 0x2502569bdb0 prev 0x2502569bbc8 <col:28, col:116> col:40 vprintf 'int (const char *, __builtin_va_list)'
| |-ParmVarDecl 0x2502569b968 <col:78, col:91> col:91 _Format 'const char *'
| |-ParmVarDecl 0x2502569b9e0 <col:100, col:108> col:108 _ArgList 'va_list':'char *'
| `-FormatAttr 0x2502569bea8 <col:40> Inherited printf 1 0
|-FunctionDecl 0x2502569d128 <line:332:40> col:40 implicit vscanf 'int (const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x2502569d1c8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x2502569d230 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2502569d2a8 <col:40> Implicit scanf 1 0
|-FunctionDecl 0x2502569d310 prev 0x2502569d128 <col:28, col:115> col:40 vscanf 'int (const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x2502569bef8 <col:77, col:90> col:90 _Format 'const char *'
| |-ParmVarDecl 0x2502569cff0 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
| `-FormatAttr 0x2502569d408 <col:40> Inherited scanf 1 0
|-FunctionDecl 0x2502569d5d0 <line:334:28, col:118> col:40 vprintf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x2502569d458 <col:80, col:93> col:93 _Format 'const char *'
| `-ParmVarDecl 0x2502569d4d0 <col:102, col:110> col:110 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2502569d828 <line:335:28, col:117> col:40 vscanf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x2502569d6b0 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x2502569d728 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2502569dd88 <line:337:77> col:77 implicit vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x2502569de28 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x2502569de90 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x2502569def8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x2502569df60 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x25025695f80 <col:77> Implicit printf 3 0
|-FunctionDecl 0x25025695fe8 prev 0x2502569dd88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:337:218> col:77 vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x2502569d9c8 <col:111, col:118> col:118 _DstBuf 'char *'
| |-ParmVarDecl 0x2502569da40 <col:132, col:139> col:139 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2502569dac0 <col:180, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x2502569db38 <col:202, col:210> col:210 _ArgList 'va_list':'char *'
| |-FormatAttr 0x250256961d8 <col:77> Inherited printf 3 0
| `-DeprecatedAttr 0x250256960a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x25025696648 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:339:28, col:206> col:40 vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x25025696228 <col:77, col:84> col:84 _DstBuf 'char *'
| |-ParmVarDecl 0x250256962a0 <col:98, col:105> col:105 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x25025696318 <col:120, col:127> col:127 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x25025696398 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x25025696410 <col:190, col:198> col:198 _ArgList 'va_list':'char *'
|-FunctionDecl 0x25025696a88 <line:342:40, col:227> col:52 _vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x25025696740 <col:94, col:101> col:101 _DstBuf 'char *'
| |-ParmVarDecl 0x250256967b8 <col:115, col:122> col:122 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x25025696830 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x250256968b0 <col:189, col:202> col:202 _Format 'const char *'
| `-ParmVarDecl 0x25025696928 <col:211, col:219> col:219 _ArgList 'va_list':'char *'
|-FunctionDecl 0x25025696e58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:89 _snprintf 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x25025696c40 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x25025696cb8 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x25025696d38 <col:246, col:260> col:260 _Format 'const char *'
| `-DeprecatedAttr 0x25025696f10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2502569e470 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:100 _vsnprintf 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x2502569e1c0 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x2502569e238 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2502569e2b8 <col:246, col:260> col:260 _Format 'const char *'
| |-ParmVarDecl 0x2502569e330 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x2502569e530 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2502569e928 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:349:21, col:183> col:33 vsprintf_s 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x2502569e678 <col:73, col:80> col:80 _DstBuf 'char *'
| |-ParmVarDecl 0x2502569e6f0 <col:94, col:101> col:101 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2502569e770 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x2502569e7e8 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2502569ece8 <line:351:40, col:149> col:52 vsscanf_s 'int (const char *, const char *, va_list) __attribute__((cdecl))':'int (const char *, const char *, va_list)'
| |-ParmVarDecl 0x2502569ea18 <col:62, col:75> col:75 _Src 'const char *'
| |-ParmVarDecl 0x2502569ea98 <col:111, col:124> col:124 _Format 'const char *'
| `-ParmVarDecl 0x2502569eb10 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2502569f0b0 <line:356:85> col:85 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x2502569f150 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x2502569f1b8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x2502569f230 <col:85> Implicit printf 2 3
|-FunctionDecl 0x2502569f298 prev 0x2502569f0b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:85 sprintf 'int (char *, const char *, ...)'
| |-ParmVarDecl 0x2502569ee90 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x2502569ef10 <col:171, col:185> col:185 _Format 'const char *'
| |-FormatAttr 0x2502569f478 <col:85> Inherited printf 2 3
| `-DeprecatedAttr 0x2502569f348 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2502569f8a0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> col:94 implicit vsprintf 'int (char *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x2502569f940 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x2502569f9a8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x2502569fa10 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2502569fa90 <col:94> Implicit printf 2 0
|-FunctionDecl 0x2502569faf8 prev 0x2502569f8a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94 vsprintf 'int (char *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x2502569f588 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x2502569f608 <col:171, col:185> col:185 _Format 'const char *'
| |-ParmVarDecl 0x2502569f680 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-FormatAttr 0x2502569fce0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> Inherited printf 2 0
| `-DeprecatedAttr 0x2502569fbb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x25025697fa0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:357:40> col:40 implicit vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x25025698040 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x250256980a8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x25025698110 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x25025698190 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x250256981f8 prev 0x25025697fa0 <col:28, col:138> col:40 vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x2502569fd30 <col:48, col:61> col:61 _srcBuf 'const char *'
| |-ParmVarDecl 0x2502569fdb0 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x2502569fe28 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x250256982f8 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x250256984c0 <line:359:24, col:115> col:36 _vscprintf 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x25025698348 <col:77, col:90> col:90 _Format 'const char *'
| `-ParmVarDecl 0x250256983c0 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
|-FunctionDecl 0x250256987b8 <line:360:28, col:170> col:40 _snprintf_c 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x250256985a0 <col:76, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x25025698618 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x25025698698 <col:145, col:158> col:158 _Format 'const char *'
|-FunctionDecl 0x25025698b50 <line:361:28, col:183> col:40 _vsnprintf_c 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x250256988a0 <col:77, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x25025698918 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x25025698998 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x25025698a10 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x25025698db8 <line:363:28, col:128> col:40 _fprintf_p 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x25025698c38 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x25025698cb8 <col:103, col:116> col:116 _Format 'const char *'
|-FunctionDecl 0x250256a0020 <line:364:28, col:105> col:40 _printf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x25025698e98 <col:80, col:93> col:93 _Format 'const char *'
|-FunctionDecl 0x250256a0310 <line:365:28, col:168> col:40 _sprintf_p 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x250256a00f8 <col:77, col:84> col:84 _Dst 'char *'
| |-ParmVarDecl 0x250256a0170 <col:95, col:102> col:102 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x250256a01f0 <col:143, col:156> col:156 _Format 'const char *'
|-FunctionDecl 0x250256a0608 <line:366:28, col:142> col:40 _vfprintf_p 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x250256a03f0 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x250256a0470 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x250256a04e8 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x250256a0868 <line:367:28, col:119> col:40 _vprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x250256a06f0 <col:81, col:94> col:94 _Format 'const char *'
| `-ParmVarDecl 0x250256a0768 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x250256a0bf8 <line:368:28, col:182> col:40 _vsprintf_p 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x250256a0948 <col:78, col:85> col:85 _Dst 'char *'
| |-ParmVarDecl 0x250256a09c0 <col:96, col:103> col:103 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x250256a0a40 <col:144, col:157> col:157 _Format 'const char *'
| `-ParmVarDecl 0x250256a0ab8 <col:166, col:174> col:174 _ArgList 'va_list':'char *'
|-FunctionDecl 0x250256a0dc8 <line:369:24, col:103> col:36 _scprintf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x250256a0ce8 <col:78, col:91> col:91 _Format 'const char *'
|-FunctionDecl 0x250256a1030 <line:370:24, col:117> col:36 _vscprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x250256a0ea0 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x250256a0f18 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x250256a11f0 <line:371:9, col:61> col:21 _set_printf_count_output 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x250256a1110 <col:51, col:55> col:55 _Value 'int'
|-FunctionDecl 0x250256a1380 <line:372:9, col:50> col:21 _get_printf_count_output 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x250256a15c8 <line:374:28, col:143> col:40 _printf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x250256a1450 <col:90, col:103> col:103 _Format 'const char *'
| `-ParmVarDecl 0x250256a14c8 <col:121, col:131> col:131 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x250256a1820 <line:375:28, col:145> col:40 _printf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x250256a16a8 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x250256a1720 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x250256a1a78 <line:376:28, col:145> col:40 _printf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x250256a1900 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x250256a1978 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x250256a1e28 <line:377:28, col:157> col:40 _vprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x250256a1b58 <col:91, col:104> col:104 _Format 'const char *'
| |-ParmVarDecl 0x250256a1bd0 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x250256a1c48 <col:141, col:149> col:149 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2502569c100 <line:378:28, col:159> col:40 _vprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x250256a1f10 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x250256a1f88 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2502569bfe0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2502569c3f8 <line:379:28, col:159> col:40 _vprintf_s_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2502569c1e8 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x2502569c260 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2502569c2d8 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2502569c6f0 <line:381:28, col:166> col:40 _fprintf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2502569c4d8 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x2502569c558 <col:113, col:126> col:126 _Format 'const char *'
| `-ParmVarDecl 0x2502569c5d0 <col:144, col:154> col:154 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2502569c9e8 <line:382:28, col:168> col:40 _fprintf_p_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2502569c7d0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x2502569c850 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x2502569c8c8 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2502569cce0 <line:383:28, col:168> col:40 _fprintf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2502569cac8 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x2502569cb48 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x2502569cbc0 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2502569a120 <line:384:28, col:147> col:40 _vfprintf_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2502569cdc0 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x2502569ce40 <col:81, col:94> col:94 _Format 'const char *'
| |-ParmVarDecl 0x2502569ceb8 <col:112, col:122> col:122 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2502569cf30 <col:131, col:139> col:139 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2502569a4b8 <line:385:28, col:149> col:40 _vfprintf_p_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2502569a208 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x2502569a288 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x2502569a300 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2502569a378 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2502569a850 <line:386:28, col:149> col:40 _vfprintf_s_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2502569a5a0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x2502569a620 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x2502569a698 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2502569a710 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2502569ace8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:388:221> col:78 _sprintf_l 'int (char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2502569aa00 <col:112, col:119> col:119 _DstBuf 'char *'
| |-ParmVarDecl 0x2502569aa80 <col:168, col:181> col:181 _Format 'const char *'
| |-ParmVarDecl 0x2502569aaf8 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2502569ada0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x250256a6390 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:389:28, col:211> col:40 _sprintf_p_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2502569aee8 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x250256a6080 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x250256a6100 <col:158, col:171> col:171 _Format 'const char *'
| `-ParmVarDecl 0x250256a6178 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x250256a6730 <line:390:40, col:221> col:52 _sprintf_s_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x250256a6480 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x250256a64f8 <col:111, col:118> col:118 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x250256a6578 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x250256a65f0 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x250256a6c80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:391:195> col:79 _vsprintf_l 'int (char *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x250256a6920 <col:114, col:121> col:121 _DstBuf 'char *'
| |-ParmVarDecl 0x250256a69a0 <col:137, col:150> col:150 _Format 'const char *'
| |-ParmVarDecl 0x250256a6a18 <col:168> col:177 '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x250256a6a90 <col:179, col:187> col:187 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x250256a6d40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x250256a72c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:392:28, col:225> col:40 _vsprintf_p_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x250256a6e88 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x250256a6f00 <col:101, col:108> col:108 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x250256a6f80 <col:159, col:171> col:171 _Format 'const char *'
| |-ParmVarDecl 0x250256a6ff8 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x250256a7090 <col:209, col:217> col:217 _ArgList 'va_list':'char *'
|-FunctionDecl 0x250256a7708 <line:393:40, col:235> col:52 _vsprintf_s_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x250256a73c0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x250256a7438 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x250256a74b8 <col:169, col:182> col:182 _Format 'const char *'
| |-ParmVarDecl 0x250256a7530 <col:200, col:210> col:210 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x250256a75a8 <col:219, col:227> col:227 _ArgList 'va_list':'char *'
|-FunctionDecl 0x250256a7978 <line:395:28, col:145> col:40 _scprintf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x250256a7800 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x250256a7878 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x250256a7bd0 <line:396:28, col:147> col:40 _scprintf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x250256a7a58 <col:94, col:107> col:107 _Format 'const char *'
| `-ParmVarDecl 0x250256a7ad0 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x250256a7ec0 <line:397:28, col:159> col:40 _vscprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x250256a7cb0 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x250256a7d28 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x250256a7da0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x250256a51a0 <line:398:28, col:161> col:40 _vscprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x250256a7fa8 <col:95, col:108> col:108 _Format 'const char *'
| |-ParmVarDecl 0x250256a8020 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x250256a5080 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x250256a55f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:400:247> col:79 _snprintf_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x250256a5348 <col:115, col:122> col:122 _DstBuf 'char *'
| |-ParmVarDecl 0x250256a53c0 <col:136, col:143> col:143 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x250256a5440 <col:194, col:207> col:207 _Format 'const char *'
| |-ParmVarDecl 0x250256a54b8 <col:225, col:235> col:235 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x250256a56b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x250256a5ab0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:401:28, col:210> col:40 _snprintf_c_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x250256a5800 <col:78, col:85> col:85 _DstBuf 'char *'
| |-ParmVarDecl 0x250256a5878 <col:99, col:106> col:106 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x250256a58f8 <col:157, col:170> col:170 _Format 'const char *'
| `-ParmVarDecl 0x250256a5970 <col:188, col:198> col:198 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x250256a2040 <line:402:40, col:245> col:52 _snprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x250256a5ba0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x250256a5c18 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x250256a5c90 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x250256a5d10 <col:192, col:205> col:205 _Format 'const char *'
| `-ParmVarDecl 0x250256a5d88 <col:223, col:233> col:233 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x250256a2580 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:403:262> col:80 _vsnprintf_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x250256a2238 <col:117, col:124> col:124 _DstBuf 'char *'
| |-ParmVarDecl 0x250256a22b0 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x250256a2330 <col:196, col:209> col:209 _Format 'const char *'
| |-ParmVarDecl 0x250256a23a8 <col:227, col:237> col:237 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x250256a2420 <col:246, col:254> col:254 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x250256a2648 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x250256a2ac8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:404:28, col:176> col:40 _vsnprintf_c_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x250256a2798 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x250256a2810 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x250256a2890 <col:118, col:129> col:130 'const char *'
| |-ParmVarDecl 0x250256a2908 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x250256a2980 <col:160, col:168> col:168 _ArgList 'va_list':'char *'
|-FunctionDecl 0x250256a30b0 <line:405:28, col:245> col:40 _vsnprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x250256a2bc0 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x250256a2c38 <col:101, col:108> col:108 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x250256a2cb0 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x250256a2d30 <col:181, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x250256a2da8 <col:210, col:220> col:220 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x250256a2e20 <col:229, col:237> col:237 _ArgList 'va_list':'char *'
|-FunctionDecl 0x250256a3470 <line:415:24, col:128> col:39 _wfsopen 'FILE *(const wchar_t *, const wchar_t *, int) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, int)'
| |-ParmVarDecl 0x250256a31a8 <col:55, col:71> col:71 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x250256a3220 <col:89, col:105> col:105 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x250256a32a0 <col:117, col:121> col:121 _ShFlag 'int'
|-FunctionDecl 0x250256a36e0 <line:417:28, col:70> col:43 fgetwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x250256a3570 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x250256a38f8 <line:418:28, col:58> col:43 _fgetwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x250256a3bd8 <line:419:28, col:88> col:43 fputwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x250256a39c0 <col:55, col:63> col:63 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x250256a3a38 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x250256a3e20 <line:420:28, col:70> col:43 _fputwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x250256a3cb0 <col:59, col:67> col:67 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x250256aa0c0 <line:421:24, col:65> col:39 getwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x250256a3ef0 <col:53, col:60> col:60 _File 'FILE *'
|-FunctionDecl 0x250256aa248 <line:422:24, col:52> col:39 getwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x250256aa480 <line:423:28, col:87> col:43 putwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x250256aa310 <col:54, col:62> col:62 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x250256aa388 <col:75, col:82> col:82 _File 'FILE *'
|-FunctionDecl 0x250256aa630 <line:424:28, col:68> col:43 putwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x250256aa558 <col:57, col:65> col:65 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x250256aa8d8 <line:425:28, col:88> col:43 ungetwc 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x250256aa700 <col:56, col:63> col:63 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x250256aa778 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x250256aac80 <line:427:28, col:141> col:46 fgetws 'wchar_t *(wchar_t *, int, FILE *) __attribute__((cdecl))':'wchar_t *(wchar_t *, int, FILE *)'
| |-ParmVarDecl 0x250256aa9b0 <col:82, col:92> col:92 _Dst 'wchar_t *'
| |-ParmVarDecl 0x250256aaa30 <col:103, col:107> col:107 _SizeInWords 'int'
| `-ParmVarDecl 0x250256aaaa8 <col:129, col:136> col:136 _File 'FILE *'
|-FunctionDecl 0x250256aaf80 <line:428:28, col:96> col:40 fputws 'int (const wchar_t *, FILE *) __attribute__((cdecl))':'int (const wchar_t *, FILE *)'
| |-ParmVarDecl 0x250256aad60 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x250256aadd8 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x250256a8258 <line:429:28, col:124> col:46 _getws_s 'wchar_t *(wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, size_t)'
| |-ParmVarDecl 0x250256ab058 <col:84, col:94> col:94 _Str 'wchar_t *'
| `-ParmVarDecl 0x250256a80b0 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x250256a8560 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:431:83 _getws 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x250256a83f0 <col:115, col:124> col:124 _String 'wchar_t *'
| `-DeprecatedAttr 0x250256a8608 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _getws_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x250256a88c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:432:28, col:74> col:40 _putws 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x250256a8748 <col:54, col:70> col:70 _Str 'const wchar_t *'
|-FunctionDecl 0x250256a8bd0 <line:434:28, col:129> col:40 fwprintf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x250256a8998 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x250256a8a10 <col:101, col:117> col:117 _Format 'const wchar_t *'
|-FunctionDecl 0x250256a8e20 <line:436:28, col:131> col:40 fwprintf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x250256a8ca8 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x250256a8d20 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x250256a90b0 <line:438:28, col:106> col:40 wprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x250256a8ef8 <col:78, col:94> col:94 _Format 'const wchar_t *'
|-FunctionDecl 0x250256a9260 <line:440:28, col:108> col:40 wprintf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x250256a9180 <col:80, col:96> col:96 _Format 'const wchar_t *'
|-FunctionDecl 0x250256a9410 <line:442:24, col:105> col:36 _scwprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x250256a9330 <col:77, col:93> col:93 _Format 'const wchar_t *'
|-FunctionDecl 0x250256a97a8 <line:443:28, col:143> col:40 vfwprintf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x250256a94e0 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x250256a9558 <col:102, col:118> col:118 _Format 'const wchar_t *'
| `-ParmVarDecl 0x250256a95d0 <col:127, col:135> col:135 _ArgList 'va_list':'char *'
|-FunctionDecl 0x250256a9a98 <line:444:28, col:142> col:40 vfwscanf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x250256a9888 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x250256a9900 <col:101, col:117> col:117 _Format 'const wchar_t *'
| `-ParmVarDecl 0x250256a9978 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x250256a9d88 <line:446:28, col:145> col:40 vfwprintf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x250256a9b78 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x250256a9bf0 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x250256a9c68 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x250256a4060 <line:447:28, col:144> col:40 vfwscanf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x250256a9e68 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x250256a9ee0 <col:103, col:119> col:119 _Format 'const wchar_t *'
| `-ParmVarDecl 0x250256a9f58 <col:128, col:136> col:136 _ArgList 'va_list':'char *'
|-FunctionDecl 0x250256a4360 <line:449:28, col:120> col:40 vwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x250256a4140 <col:79, col:95> col:95 _Format 'const wchar_t *'
| `-ParmVarDecl 0x250256a41b8 <col:104, col:112> col:112 _ArgList 'va_list':'char *'
|-FunctionDecl 0x250256a45b0 <line:450:28, col:119> col:40 vwscanf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x250256a4438 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x250256a44b0 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x250256a4800 <line:452:28, col:122> col:40 vwprintf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x250256a4688 <col:81, col:97> col:97 _Format 'const wchar_t *'
| `-ParmVarDecl 0x250256a4700 <col:106, col:114> col:114 _ArgList 'va_list':'char *'
|-FunctionDecl 0x250256a4a50 <line:453:28, col:121> col:40 vwscanf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x250256a48d8 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x250256a4950 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x250256a4e08 <line:457:21, col:173> col:33 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x250256a4b28 <col:73, col:83> col:83 _Dst 'wchar_t *'
| |-ParmVarDecl 0x250256a4ba0 <col:94, col:101> col:101 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x250256a4c18 <col:145, col:161> col:161 _Format 'const wchar_t *'
|-FunctionDecl 0x250256ac2f0 <line:461:21, col:187> col:33 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x250256a4ee8 <col:74, col:84> col:84 _Dst 'wchar_t *'
| |-ParmVarDecl 0x250256a4f60 <col:95, col:102> col:102 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x250256a4fd8 <col:146, col:162> col:162 _Format 'const wchar_t *'
| `-ParmVarDecl 0x250256ac0e0 <col:171, col:179> col:179 _ArgList 'va_list':'char *'
|-FunctionDecl 0x250256ac6a8 <line:462:40, col:156> col:52 vswscanf_s 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x250256ac3d8 <col:63, col:79> col:79 _Src 'const wchar_t *'
| |-ParmVarDecl 0x250256ac450 <col:115, col:131> col:131 _Format 'const wchar_t *'
| `-ParmVarDecl 0x250256ac4c8 <col:140, col:148> col:148 _ArgList 'va_list':'char *'
|-FunctionDecl 0x250256ac998 <line:466:28, col:145> col:40 vswscanf 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x250256ac788 <col:49, col:65> col:65 _srcBuf 'const wchar_t *'
| |-ParmVarDecl 0x250256ac800 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x250256ac878 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x250256acc88 <line:468:28, col:184> col:40 _swprintf_c 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x250256aca78 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x250256acaf0 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x250256acb68 <col:156, col:172> col:172 _Format 'const wchar_t *'
|-FunctionDecl 0x250256ad010 <line:469:28, col:198> col:40 _vswprintf_c 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x250256acd68 <col:82, col:92> col:92 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x250256acde0 <col:106, col:113> col:113 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x250256ace58 <col:157, col:173> col:173 _Format 'const wchar_t *'
| `-ParmVarDecl 0x250256aced0 <col:182, col:190> col:190 _ArgList 'va_list':'char *'
|-FunctionDecl 0x250256ae4b0 <line:471:40, col:220> col:52 _snwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x250256ae128 <col:94, col:104> col:104 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x250256ae1a0 <col:118, col:125> col:125 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x250256ae218 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x250256ae290 <col:192, col:208> col:208 _Format 'const wchar_t *'
|-FunctionDecl 0x250256ae9b8 <line:473:40, col:234> col:52 _vsnwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x250256ae598 <col:95, col:105> col:105 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x250256ae610 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x250256ae688 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x250256ae700 <col:193, col:209> col:209 _Format 'const wchar_t *'
| `-ParmVarDecl 0x250256ae778 <col:218, col:226> col:226 _ArgList 'va_list':'char *'
|-FunctionDecl 0x250256aed78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:89 _snwprintf 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x250256aeb68 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x250256aebe0 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x250256aec58 <col:254, col:271> col:271 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x250256aee30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x250256ad320 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:101 _vsnwprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x250256af030 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x250256ad0f0 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x250256ad168 <col:254, col:271> col:271 _Format 'const wchar_t *'
| |-ParmVarDecl 0x250256ad1e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x250256ad3e0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x250256ad698 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:480:28, col:132> col:40 _fwprintf_p 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x250256ad520 <col:60, col:67> col:67 _File 'FILE *'
| `-ParmVarDecl 0x250256ad598 <col:104, col:120> col:120 _Format 'const wchar_t *'
|-FunctionDecl 0x250256ad850 <line:481:28, col:109> col:40 _wprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x250256ad770 <col:81, col:97> col:97 _Format 'const wchar_t *'
|-FunctionDecl 0x250256adb30 <line:482:28, col:146> col:40 _vfwprintf_p 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x250256ad920 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x250256ad998 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x250256ada10 <col:130, col:138> col:138 _ArgList 'va_list':'char *'
|-FunctionDecl 0x250256add88 <line:483:28, col:123> col:40 _vwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x250256adc10 <col:82, col:98> col:98 _Format 'const wchar_t *'
| `-ParmVarDecl 0x250256adc88 <col:107, col:115> col:115 _ArgList 'va_list':'char *'
|-FunctionDecl 0x250256b2f70 <line:484:28, col:178> col:40 _swprintf_p 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x250256ade60 <col:78, col:88> col:88 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x250256aded8 <col:102, col:109> col:109 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x250256adf50 <col:150, col:166> col:166 _Format 'const wchar_t *'
|-FunctionDecl 0x250256b32f8 <line:485:28, col:192> col:40 _vswprintf_p 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x250256b3050 <col:79, col:89> col:89 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x250256b30c8 <col:103, col:110> col:110 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x250256b3140 <col:151, col:167> col:167 _Format 'const wchar_t *'
| `-ParmVarDecl 0x250256b31b8 <col:176, col:184> col:184 _ArgList 'va_list':'char *'
|-FunctionDecl 0x250256b34c0 <line:486:24, col:107> col:36 _scwprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x250256b33e0 <col:79, col:95> col:95 _Format 'const wchar_t *'
|-FunctionDecl 0x250256b3708 <line:487:24, col:121> col:36 _vscwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x250256b3590 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x250256b3608 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x250256b3a10 <line:489:28, col:147> col:40 _wprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x250256b37e0 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x250256b3858 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x250256b3c60 <line:490:28, col:149> col:40 _wprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x250256b3ae8 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x250256b3b60 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x250256b3eb0 <line:491:28, col:149> col:40 _wprintf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x250256b3d38 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x250256b3db0 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x250256b5288 <line:492:28, col:161> col:40 _vwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x250256b4fb8 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x250256b5030 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x250256b50a8 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x250256b5578 <line:493:28, col:163> col:40 _vwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x250256b5368 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x250256b53e0 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x250256b5458 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x250256b5868 <line:494:28, col:163> col:40 _vwprintf_s_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x250256b5658 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x250256b56d0 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x250256b5748 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x250256b5c28 <line:496:28, col:170> col:40 _fwprintf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x250256b5948 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x250256b59c0 <col:114, col:130> col:130 _Format 'const wchar_t *'
| `-ParmVarDecl 0x250256b5a38 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x250256b3f80 <line:497:28, col:172> col:40 _fwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x250256b5d08 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x250256b5d80 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x250256b5df8 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x250256b4270 <line:498:28, col:172> col:40 _fwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x250256b4060 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x250256b40d8 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x250256b4150 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x250256b46c0 <line:499:28, col:184> col:40 _vfwprintf_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x250256b4350 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x250256b43c8 <col:115, col:131> col:131 _Format 'const wchar_t *'
| |-ParmVarDecl 0x250256b4440 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x250256b44b8 <col:168, col:176> col:176 _ArgList 'va_list':'char *'
|-FunctionDecl 0x250256b4a50 <line:500:28, col:186> col:40 _vfwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x250256b47a8 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x250256b4820 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x250256b4898 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x250256b4910 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x250256b4de0 <line:501:28, col:186> col:40 _vfwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x250256b4b38 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x250256b4bb0 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x250256b4c28 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x250256b4ca0 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x250256b62b0 <line:503:28, col:218> col:40 _swprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x250256b4ec8 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x250256b5fa0 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x250256b6018 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x250256b6090 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x250256b6640 <line:504:28, col:218> col:40 _swprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x250256b6398 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x250256b6410 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x250256b6488 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x250256b6500 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x250256b69d0 <line:505:40, col:228> col:52 _swprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x250256b6728 <col:91, col:101> col:101 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x250256b67a0 <col:115, col:122> col:122 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x250256b6818 <col:172, col:188> col:188 _Format 'const wchar_t *'
| `-ParmVarDecl 0x250256b6890 <col:206, col:216> col:216 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x250256b6ed8 <line:506:28, col:232> col:40 used _vswprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x250256b6ab8 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x250256b6b30 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x250256b6ba8 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x250256b6c20 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x250256b6c98 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x250256b7318 <line:507:28, col:232> col:40 _vswprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x250256b6fd8 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x250256b7050 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x250256b70c8 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x250256b7140 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x250256b71b8 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x250256b7748 <line:508:40, col:242> col:52 _vswprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x250256b7408 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x250256b7480 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x250256b74f8 <col:173, col:189> col:189 _Format 'const wchar_t *'
| |-ParmVarDecl 0x250256b7570 <col:207, col:217> col:217 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x250256b75e8 <col:226, col:234> col:234 _ArgList 'va_list':'char *'
|-FunctionDecl 0x250256b79b0 <line:510:24, col:145> col:36 _scwprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x250256b7838 <col:89, col:105> col:105 _Format 'const wchar_t *'
| `-ParmVarDecl 0x250256b78b0 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x250256b7c00 <line:511:24, col:147> col:36 _scwprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x250256b7a88 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x250256b7b00 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x250256b7ee8 <line:512:24, col:161> col:36 _vscwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x250256b7cd8 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x250256b7d50 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x250256b7dc8 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x250256b8358 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:514:255> col:80 _snwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x250256b80b0 <col:117, col:127> col:127 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x250256b8128 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x250256b81a0 <col:199, col:215> col:215 _Format 'const wchar_t *'
| |-ParmVarDecl 0x250256b8218 <col:233, col:243> col:243 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x250256b8418 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x250256b8988 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:515:40, col:252> col:52 _snwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x250256b8560 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x250256b85d8 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x250256b8650 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x250256b86c8 <col:196, col:212> col:212 _Format 'const wchar_t *'
| `-ParmVarDecl 0x250256b8740 <col:230, col:240> col:240 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x250256b8ec0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:516:270> col:81 _vsnwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x250256b8b80 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x250256b8bf8 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x250256b8c70 <col:201, col:217> col:217 _Format 'const wchar_t *'
| |-ParmVarDecl 0x250256b8ce8 <col:235, col:245> col:245 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x250256b8d60 <col:254, col:262> col:262 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x250256b0f50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x250256b1560 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:517:40, col:266> col:52 _vsnwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x250256b1098 <col:93, col:103> col:103 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x250256b1110 <col:117, col:124> col:124 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x250256b1188 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x250256b1200 <col:197, col:213> col:213 _Format 'const wchar_t *'
| |-ParmVarDecl 0x250256b1278 <col:231, col:241> col:241 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x250256b12f0 <col:250, col:258> col:258 _ArgList 'va_list':'char *'
|-FunctionDecl 0x250256b1a60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:110 _swprintf 'int (wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x250256b1828 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x250256b18a0 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-DeprecatedAttr 0x250256b1b10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x250256b1c28 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x250256be288 <col:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:134 _vswprintf 'int (wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x250256b1ee0 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x250256be030 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-ParmVarDecl 0x250256be0a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x250256be340 <line:275:47, col:63> "This function or variable may be unsafe. Consider using vswprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x250256be458 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x250256be9f8 <col:36, line:1961:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:110 __swprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x250256be718 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x250256be790 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x250256be808 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-DeprecatedAttr 0x250256beab0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __swprintf_l_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x250256bebd0 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x250256bd220 <col:36, line:1962:166> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:124 __vswprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x250256bee90 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x250256bef08 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x250256bef80 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x250256bd010 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1962:153, col:161> col:161 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x250256bd2e0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vswprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x250256bd400 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x250256bd708 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:36:1, line:44:1> line:36:21 swprintf 'int (wchar_t *, size_t, const wchar_t *, ...)' static inline
| |-ParmVarDecl 0x250256bd528 <col:53, col:63> col:63 used _String 'wchar_t *'
| |-ParmVarDecl 0x250256bd5a0 <col:72, col:79> col:79 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x250256bd618 <col:117, col:133> col:133 used _Format 'const wchar_t *'
| `-CompoundStmt 0x250256b9270 <line:37:1, line:44:1>
|   |-DeclStmt 0x250256bd850 <line:38:5, col:21>
|   | `-VarDecl 0x250256bd7e8 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x250256bd8e8 <line:39:5, col:13>
|   | `-VarDecl 0x250256bd880 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x250256bdc40 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x250256bdc28 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x250256bdb40 <col:34> '<builtin fn type>' Function 0x250256bd9d8 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x250256bdb78 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:40:19> 'va_list':'char *' lvalue Var 0x250256bd7e8 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x250256bdbb0 <col:29> 'const wchar_t *' lvalue ParmVar 0x250256bd618 '_Format' 'const wchar_t *'
|   |-BinaryOperator 0x250256bdf00 <line:41:5, col:67> 'int' '='
|   | |-DeclRefExpr 0x250256bdc70 <col:5> 'int' lvalue Var 0x250256bd880 '_Ret' 'int'
|   | `-CallExpr 0x250256bde40 <col:12, col:67> 'int'
|   |   |-ImplicitCastExpr 0x250256bde28 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x250256bdca8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x250256b6ed8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x250256bde88 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x250256bdcc8 <col:27> 'wchar_t *' lvalue ParmVar 0x250256bd528 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x250256bdea0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x250256bdce8 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x250256bd5a0 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x250256bdeb8 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x250256bdd08 <col:44> 'const wchar_t *' lvalue ParmVar 0x250256bd618 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x250256bded0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|   |   | `-ParenExpr 0x250256bdd90 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x250256bdd68 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x250256bdd28 <col:26> 'int' 0
|   |   `-ImplicitCastExpr 0x250256bdee8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:41:59> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x250256bddb0 <col:59> 'va_list':'char *' lvalue Var 0x250256bd7e8 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x250256b9200 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x250256b91e8 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x250256b9138 <col:34> '<builtin fn type>' Function 0x250256b8fd0 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x250256b9170 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:42:17> 'va_list':'char *' lvalue Var 0x250256bd7e8 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x250256b9260 <line:43:5, col:12>
|     `-ImplicitCastExpr 0x250256b9248 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x250256b9228 <col:12> 'int' lvalue Var 0x250256bd880 '_Ret' 'int'
|-FunctionDecl 0x250256bd9d8 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34> col:34 implicit used __builtin_va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x250256bda78 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x250256bdae8 <col:34> Implicit
|-FunctionDecl 0x250256b8fd0 <line:27:34> col:34 implicit used __builtin_va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x250256b9070 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x250256b90e0 <col:34> Implicit
|-FunctionDecl 0x250256b9568 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:49:1, line:52:1> line:49:31 vswprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)' static inline
| |-ParmVarDecl 0x250256b92c0 <col:64, col:74> col:74 used _String 'wchar_t *'
| |-ParmVarDecl 0x250256b9338 <col:83, col:90> col:90 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x250256b93b0 <col:138, col:154> col:154 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x250256b9428 <col:163, col:171> col:171 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x250256b9850 <line:50:1, line:52:1>
|   `-ReturnStmt 0x250256b9840 <line:51:5, col:62>
|     `-CallExpr 0x250256b9780 <col:12, col:62> 'int'
|       |-ImplicitCastExpr 0x250256b9768 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x250256b9640 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x250256b6ed8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x250256b97c8 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x250256b9660 <col:27> 'wchar_t *' lvalue ParmVar 0x250256b92c0 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x250256b97e0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x250256b9680 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x250256b9338 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x250256b97f8 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x250256b96a0 <col:44> 'const wchar_t *' lvalue ParmVar 0x250256b93b0 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x250256b9810 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|       | `-ParenExpr 0x250256b9728 <col:17, col:27> 'void *'
|       |   `-CStyleCastExpr 0x250256b9700 <col:18, col:26> 'void *' <NullToPointer>
|       |     `-IntegerLiteral 0x250256b96c0 <col:26> 'int' 0
|       `-ImplicitCastExpr 0x250256b9828 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:51:59> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x250256b9748 <col:59> 'va_list':'char *' lvalue ParmVar 0x250256b9428 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x250256b9af0 <line:60:1, line:68:1> line:60:21 _swprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)' static inline
| |-ParmVarDecl 0x250256b9878 <col:56, col:66> col:66 used _String 'wchar_t *'
| |-ParmVarDecl 0x250256b98f0 <col:75, col:82> col:82 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x250256b9968 <col:130, col:146> col:146 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x250256b99e0 <col:155, col:165> col:165 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| `-CompoundStmt 0x250256bf0d8 <line:61:1, line:68:1>
|   |-DeclStmt 0x250256b9c40 <line:62:5, col:21>
|   | `-VarDecl 0x250256b9bd8 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x250256b9cd8 <line:63:5, col:13>
|   | `-VarDecl 0x250256b9c70 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x250256b9d80 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x250256b9d68 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x250256b9cf0 <col:34> '<builtin fn type>' Function 0x250256bd9d8 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x250256b9d10 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:64:19> 'va_list':'char *' lvalue Var 0x250256b9bd8 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x250256b9d48 <col:29> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x250256b99e0 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |-BinaryOperator 0x250256b9f80 <line:65:5, col:72> 'int' '='
|   | |-DeclRefExpr 0x250256b9db0 <col:5> 'int' lvalue Var 0x250256b9c70 '_Ret' 'int'
|   | `-CallExpr 0x250256b9ec0 <col:12, col:72> 'int'
|   |   |-ImplicitCastExpr 0x250256b9ea8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x250256b9de8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x250256b6ed8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x250256b9f08 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x250256b9e08 <col:27> 'wchar_t *' lvalue ParmVar 0x250256b9878 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x250256b9f20 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x250256b9e28 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x250256b98f0 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x250256b9f38 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x250256b9e48 <col:44> 'const wchar_t *' lvalue ParmVar 0x250256b9968 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x250256b9f50 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x250256b9e68 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x250256b99e0 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |   `-ImplicitCastExpr 0x250256b9f68 <col:64> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x250256b9e88 <col:64> 'va_list':'char *' lvalue Var 0x250256b9bd8 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x250256bf068 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x250256bf050 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x250256b9fa0 <col:34> '<builtin fn type>' Function 0x250256b8fd0 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x250256bf030 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:66:17> 'va_list':'char *' lvalue Var 0x250256b9bd8 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x250256bf0c8 <line:67:5, col:12>
|     `-ImplicitCastExpr 0x250256bf0b0 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x250256bf090 <col:12> 'int' lvalue Var 0x250256b9c70 '_Ret' 'int'
|-FunctionDecl 0x250256bf468 <line:73:1, line:76:1> line:73:31 _vswprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' static inline
| |-ParmVarDecl 0x250256bf128 <col:67, col:77> col:77 used _String 'wchar_t *'
| |-ParmVarDecl 0x250256bf1a0 <col:86, col:93> col:93 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x250256bf218 <col:141, col:157> col:157 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x250256bf290 <col:166, col:176> col:176 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x250256bf308 <col:187, col:195> col:195 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x250256bf6f0 <line:74:1, line:76:1>
|   `-ReturnStmt 0x250256bf6e0 <line:75:5, col:67>
|     `-CallExpr 0x250256bf620 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x250256bf608 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x250256bf548 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x250256b6ed8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x250256bf668 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x250256bf568 <col:27> 'wchar_t *' lvalue ParmVar 0x250256bf128 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x250256bf680 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x250256bf588 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x250256bf1a0 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x250256bf698 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x250256bf5a8 <col:44> 'const wchar_t *' lvalue ParmVar 0x250256bf218 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x250256bf6b0 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|       | `-DeclRefExpr 0x250256bf5c8 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x250256bf290 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|       `-ImplicitCastExpr 0x250256bf6c8 <col:64> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x250256bf5e8 <col:64> 'va_list':'char *' lvalue ParmVar 0x250256bf308 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x250256bf938 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:555:24, col:129> col:42 _wtempnam 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x250256bf718 <col:63, col:79> col:79 _Directory 'const wchar_t *'
| `-ParmVarDecl 0x250256bf790 <col:102, col:118> col:118 _FilePrefix 'const wchar_t *'
|-FunctionDecl 0x250256bfb88 <line:561:24, col:119> col:36 _vscwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x250256bfa10 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x250256bfa88 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x250256bfe70 <line:562:24, col:159> col:36 _vscwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x250256bfc60 <col:90, col:106> col:106 _Format 'const wchar_t *'
| |-ParmVarDecl 0x250256bfcd8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x250256bfd50 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x250256c11c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:563:158> col:71 fwscanf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x250256c1050 <col:87, col:94> col:94 _File 'FILE *'
| |-ParmVarDecl 0x250256c10c8 <col:130, col:146> col:146 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x250256c1278 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x250256c1688 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:564:206> col:78 _fwscanf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x250256c1478 <col:97, col:104> col:104 _File 'FILE *'
| |-ParmVarDecl 0x250256c14f0 <col:150, col:166> col:166 _Format 'const wchar_t *'
| |-ParmVarDecl 0x250256c1568 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x250256c1740 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x250256c19f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:568:28, col:131> col:40 fwscanf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x250256c1880 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x250256c18f8 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x250256c1ce0 <line:570:28, col:172> col:40 _fwscanf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x250256c1ad0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x250256c1b48 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x250256c1bc0 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x250256bb060 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:571:165> col:71 swscanf 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x250256c1e80 <col:86, col:102> col:102 _Src 'const wchar_t *'
| |-ParmVarDecl 0x250256c1ef8 <col:137, col:153> col:153 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x250256bb110 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using swscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x250256bb5e8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:572:213> col:78 _swscanf_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x250256bb310 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x250256bb388 <col:157, col:173> col:173 _Format 'const wchar_t *'
| |-ParmVarDecl 0x250256bb400 <col:191, col:201> col:201 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x250256bb6a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x250256bb958 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:574:40, col:149> col:52 swscanf_s 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x250256bb7e0 <col:69, col:84> col:84 _Src 'const wchar_t *'
| `-ParmVarDecl 0x250256bb858 <col:121, col:137> col:137 _Format 'const wchar_t *'
|-FunctionDecl 0x250256bbc40 <line:576:40, col:191> col:52 _swscanf_s_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x250256bba30 <col:72, col:88> col:88 _Src 'const wchar_t *'
| |-ParmVarDecl 0x250256bbaa8 <col:135, col:151> col:151 _Format 'const wchar_t *'
| `-ParmVarDecl 0x250256bbb20 <col:169, col:179> col:179 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x250256ba0c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:577:219> col:77 _snwscanf 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x250256bbde0 <col:117, col:133> col:133 _Src 'const wchar_t *'
| |-ParmVarDecl 0x250256bbe58 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x250256bbed0 <col:191, col:207> col:207 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x250256ba180 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x250256ba700 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:578:261> col:79 _snwscanf_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x250256ba380 <col:121, col:137> col:137 _Src 'const wchar_t *'
| |-ParmVarDecl 0x250256ba3f8 <col:148, col:155> col:155 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x250256ba470 <col:205, col:221> col:221 _Format 'const wchar_t *'
| |-ParmVarDecl 0x250256ba4e8 <col:239, col:249> col:249 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x250256ba7c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x250256bab10 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:579:40, col:198> col:52 _snwscanf_s 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x250256ba900 <col:94, col:110> col:110 _Src 'const wchar_t *'
| |-ParmVarDecl 0x250256ba978 <col:121, col:128> col:128 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x250256ba9f0 <col:170, col:186> col:186 _Format 'const wchar_t *'
|-FunctionDecl 0x250256bae98 <line:580:40, col:238> col:52 _snwscanf_s_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x250256babf0 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x250256bac68 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x250256bace0 <col:182, col:198> col:198 _Format 'const wchar_t *'
| `-ParmVarDecl 0x250256bad58 <col:216, col:226> col:226 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x250256bc1b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:581:134> col:70 wscanf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| |-ParmVarDecl 0x250256bc0d0 <col:106, col:122> col:122 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x250256bc258 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x250256bc5d0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:582:182> col:77 _wscanf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x250256bc458 <col:126, col:142> col:142 _Format 'const wchar_t *'
| |-ParmVarDecl 0x250256bc4d0 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x250256bc680 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x250256bc8a0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:584:40, col:120> col:52 wscanf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x250256bc7c0 <col:92, col:108> col:108 _Format 'const wchar_t *'
|-FunctionDecl 0x250256bcae8 <line:586:40, col:161> col:52 _wscanf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x250256bc970 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x250256bc9e8 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x250256bcde8 <line:589:24, col:99> col:39 _wfdopen 'FILE *(int, const wchar_t *) __attribute__((cdecl))':'FILE *(int, const wchar_t *)'
| |-ParmVarDecl 0x250256bcbc8 <col:53, col:57> col:57 _FileHandle 'int'
| `-ParmVarDecl 0x250256bcc40 <col:78, col:94> col:94 _Mode 'const wchar_t *'
|-FunctionDecl 0x250256c2208 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:590:144> col:74 _wfopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x250256bcf80 <col:89, col:105> col:105 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x250256c2060 <col:123, col:139> col:139 _Mode 'const wchar_t *'
| `-DeprecatedAttr 0x250256c22b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x250256c26c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:591:28, col:157> col:44 _wfopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x250256c2400 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x250256c2478 <col:102, col:118> col:118 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x250256c24f0 <col:136, col:152> col:152 _Mode 'const wchar_t *'
|-FunctionDecl 0x250256c2b20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:592:173> col:76 _wfreopen 'FILE *(const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x250256c2860 <col:93, col:109> col:109 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x250256c28d8 <col:127, col:143> col:143 _Mode 'const wchar_t *'
| |-ParmVarDecl 0x250256c2950 <col:158, col:165> col:165 _OldFile 'FILE *'
| `-DeprecatedAttr 0x250256c2bd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfreopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x250256c30b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:593:28, col:184> col:44 _wfreopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x250256c2d20 <col:82, col:90> col:90 _File 'FILE **'
| |-ParmVarDecl 0x250256c2d98 <col:104, col:120> col:120 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x250256c2e10 <col:138, col:154> col:154 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x250256c2e88 <col:169, col:176> col:176 _OldFile 'FILE *'
|-FunctionDecl 0x250256c3310 <line:597:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x250256c31a0 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x250256c3550 <line:600:24, col:107> col:39 _wpopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x250256c33e0 <col:54, col:69> col:69 _Command 'const wchar_t *'
| `-ParmVarDecl 0x250256c3458 <col:86, col:102> col:102 _Mode 'const wchar_t *'
|-FunctionDecl 0x250256c3708 <line:602:9, col:62> col:21 _wremove 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x250256c3628 <col:37, col:53> col:53 _Filename 'const wchar_t *'
|-FunctionDecl 0x250256c39f8 <line:603:28, col:127> col:44 _wtmpnam_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x250256c37d8 <col:84, col:94> col:94 _DstBuf 'wchar_t *'
| `-ParmVarDecl 0x250256c3850 <col:108, col:115> col:115 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x250256c3c68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:605:82 _wtmpnam 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x250256c3b90 <col:118, col:127> col:127 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x250256c3d10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wtmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x250256c3f28 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:607:28, col:78> col:43 _fgetwc_nolock 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x250256c3e50 <col:66, col:73> col:73 _File 'FILE *'
|-FunctionDecl 0x250256c91c8 <line:608:28, col:96> col:43 _fputwc_nolock 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x250256c3ff8 <col:63, col:71> col:71 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x250256c90d0 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x250256c9410 <line:609:28, col:96> col:43 _ungetwc_nolock 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x250256c92a0 <col:64, col:71> col:71 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x250256c9318 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x250256c95c0 <line:670:9, col:53> col:22 _lock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x250256c94e8 <col:41, col:48> col:48 _File 'FILE *'
|-FunctionDecl 0x250256c9768 <line:671:9, col:55> col:22 _unlock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x250256c9690 <col:43, col:50> col:50 _File 'FILE *'
|-FunctionDecl 0x250256c9918 <line:673:28, col:75> col:40 _fclose_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x250256c9838 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x250256c9ac8 <line:674:28, col:79> col:40 _fflush_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x250256c99e8 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x250256c9e40 <line:675:28, col:179> col:43 _fread_nolock 'size_t (void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x250256c9ba0 <col:97, col:104> col:104 _DstBuf 'void *'
| |-ParmVarDecl 0x250256c9c18 <col:118, col:125> col:125 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x250256c9c90 <col:144, col:151> col:151 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x250256c9d08 <col:167, col:174> col:174 _File 'FILE *'
|-FunctionDecl 0x250256c4250 <line:676:28, col:203> col:43 _fread_nolock_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x250256c9f30 <col:99, col:106> col:106 _DstBuf 'void *'
| |-ParmVarDecl 0x250256c9fa8 <col:120, col:127> col:127 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x250256ca020 <col:142, col:149> col:149 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x250256c4080 <col:168, col:175> col:175 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x250256c40f8 <col:191, col:198> col:198 _File 'FILE *'
|-FunctionDecl 0x250256c4560 <line:677:28, col:111> col:40 _fseek_nolock 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x250256c4340 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x250256c43c0 <col:81, col:86> col:86 _Offset 'long'
| `-ParmVarDecl 0x250256c4440 <col:100, col:104> col:104 _Origin 'int'
|-FunctionDecl 0x250256c4720 <line:678:24, col:71> col:37 _ftell_nolock 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x250256c4640 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x250256c4a10 <line:679:28, col:117> col:40 _fseeki64_nolock 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x250256c47f0 <col:65, col:72> col:72 _File 'FILE *'
| |-ParmVarDecl 0x250256c4870 <col:84, col:92> col:92 _Offset 'long long'
| `-ParmVarDecl 0x250256c48f0 <col:106, col:110> col:110 _Origin 'int'
|-FunctionDecl 0x250256c4bd0 <line:680:24, col:77> col:40 _ftelli64_nolock 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x250256c4af0 <col:65, col:72> col:72 _File 'FILE *'
|-FunctionDecl 0x250256c4f48 <line:681:28, col:170> col:43 _fwrite_nolock 'size_t (const void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (const void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x250256c4ca8 <col:89, col:102> col:102 _DstBuf 'const void *'
| |-ParmVarDecl 0x250256c4d20 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x250256c4d98 <col:135, col:142> col:142 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x250256c4e10 <col:158, col:165> col:165 _File 'FILE *'
|-FunctionDecl 0x250256ca258 <line:682:28, col:89> col:40 _ungetc_nolock 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x250256ca0e0 <col:60, col:64> col:64 _Ch 'int'
| `-ParmVarDecl 0x250256ca158 <col:77, col:84> col:84 _File 'FILE *'
|-FunctionDecl 0x250256ca590 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:709:136> col:57 tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x250256ca410 <col:76, col:89> col:89 _Directory 'const char *'
| |-ParmVarDecl 0x250256ca490 <col:112, col:125> col:125 _FilePrefix 'const char *'
| `-DeprecatedAttr 0x250256ca640 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tempnam. See online help for details." ""
|-FunctionDecl 0x250256ca8f8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:715:89> col:75 fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x250256ca998 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcloseall. See online help for details." ""
|-FunctionDecl 0x250256cacd8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:716:127> col:71 fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x250256cab60 <col:83, col:87> col:87 _FileHandle 'int'
| |-ParmVarDecl 0x250256cabe0 <col:107, col:120> col:120 _Format 'const char *'
| `-DeprecatedAttr 0x250256cad88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fdopen. See online help for details." ""
|-FunctionDecl 0x250256c70b0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:717:87> col:74 fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x250256c7150 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fgetchar. See online help for details." ""
|-FunctionDecl 0x250256c73f0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:718:92> col:68 fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x250256c7310 <col:80, col:87> col:87 _File 'FILE *'
| `-DeprecatedAttr 0x250256c7498 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fileno. See online help for details." ""
|-FunctionDecl 0x250256c7718 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:719:87> col:74 flushall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x250256c77b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _flushall. See online help for details." ""
|-FunctionDecl 0x250256c7a60 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:720:95> col:74 fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| |-ParmVarDecl 0x250256c7980 <col:88, col:92> col:92 _Ch 'int'
| `-DeprecatedAttr 0x250256c7b08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fputchar. See online help for details." ""
|-FunctionDecl 0x250256c7de8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:721:91> col:66 getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x250256c7d08 <col:79, col:86> col:86 _File 'FILE *'
| `-DeprecatedAttr 0x250256c7e90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _getw. See online help for details." ""
|-FunctionDecl 0x250256c5208 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:722:109> col:70 putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x250256c5090 <col:80, col:84> col:84 _Ch 'int'
| |-ParmVarDecl 0x250256c5108 <col:97, col:104> col:104 _File 'FILE *'
| `-DeprecatedAttr 0x250256c52b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putw. See online help for details." ""
|-FunctionDecl 0x250256c5578 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:723:77> col:67 rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x250256c5618 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _rmtmp. See online help for details." ""
|-FunctionDecl 0x250256c5850 <D:\Microsoft Visual Studio 12.0\VC\include\errno.h:31:9, col:41> col:30 _errno 'int *(void) __attribute__((cdecl))':'int *(void)' extern
|-FunctionDecl 0x250256c5a60 <line:34:1, col:43> col:17 _set_errno 'errno_t (int) __attribute__((cdecl))':'errno_t (int)'
| `-ParmVarDecl 0x250256c5920 <col:33, col:37> col:37 _Value 'int'
|-FunctionDecl 0x250256c5cb0 <line:35:1, col:46> col:17 _get_errno 'errno_t (int *) __attribute__((cdecl))':'errno_t (int *)'
| `-ParmVarDecl 0x250256c5b38 <col:34, col:40> col:40 _Value 'int *'
|-FunctionDecl 0x250256d8130 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:35:9, col:112> col:22 used _wassert 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
| |-ParmVarDecl 0x250256c5d80 <col:38, col:54> col:54 _Message 'const wchar_t *'
| |-ParmVarDecl 0x250256c5df8 <col:71, col:86> col:86 _File 'const wchar_t *'
| `-ParmVarDecl 0x250256c5e78 <col:98, col:107> col:107 _Line 'unsigned int'
|-FunctionDecl 0x250256d8400 <.//openssl//file_jk/before\crypto\evp\bio_ok.c:81:1, col:53> col:12 invalid ok_write 'int (int *, const char *, int)' static
| |-ParmVarDecl 0x250256d8218 <col:21, col:26> col:26 invalid h 'int *'
| |-ParmVarDecl 0x250256d8298 <col:29, col:41> col:41 buf 'const char *'
| `-ParmVarDecl 0x250256d8318 <col:46, col:50> col:50 num 'int'
|-FunctionDecl 0x250256d86c0 <line:82:1, col:47> col:12 invalid ok_read 'int (int *, char *, int)' static
| |-ParmVarDecl 0x250256d84d0 <col:20, col:25> col:25 invalid h 'int *'
| |-ParmVarDecl 0x250256d8550 <col:28, col:34> col:34 buf 'char *'
| `-ParmVarDecl 0x250256d85d0 <col:39, col:43> col:43 size 'int'
|-FunctionDecl 0x250256d8a10 <line:83:1, col:59> col:13 invalid ok_ctrl 'long (int *, int, long, void *)' static
| |-ParmVarDecl 0x250256d8790 <col:21, col:26> col:26 invalid h 'int *'
| |-ParmVarDecl 0x250256d8810 <col:29, col:33> col:33 cmd 'int'
| |-ParmVarDecl 0x250256d8890 <col:38, col:43> col:43 arg1 'long'
| `-ParmVarDecl 0x250256d8910 <col:49, col:55> col:55 arg2 'void *'
|-FunctionDecl 0x250256d8b80 <line:84:1, col:25> col:12 invalid ok_new 'int (int *)' static
| `-ParmVarDecl 0x250256d8ae8 <col:19, col:24> col:24 invalid h 'int *'
|-FunctionDecl 0x250256d8cd8 <line:85:1, col:29> col:12 invalid ok_free 'int (int *)' static
| `-ParmVarDecl 0x250256d8c40 <col:20, col:25> col:25 invalid data 'int *'
|-FunctionDecl 0x250256d8f80 <line:86:1, col:62> col:13 invalid ok_callback_ctrl 'long (int *, int, int *)' static
| |-ParmVarDecl 0x250256d8d98 <col:30, col:35> col:35 invalid h 'int *'
| |-ParmVarDecl 0x250256d8e18 <col:38, col:42> col:42 cmd 'int'
| `-ParmVarDecl 0x250256d8e98 <col:47, col:60> col:60 invalid fp 'int *'
|-FunctionDecl 0x250256da150 <line:88:1, col:33> col:19 invalid sig_out 'int (int *)' static
| `-ParmVarDecl 0x250256d9050 <col:27, col:32> col:32 invalid b 'int *'
|-FunctionDecl 0x250256da2a8 <line:89:1, col:32> col:19 invalid sig_in 'int (int *)' static
| `-ParmVarDecl 0x250256da210 <col:26, col:31> col:31 invalid b 'int *'
|-FunctionDecl 0x250256da400 <line:90:1, col:35> col:19 invalid block_out 'int (int *)' static
| `-ParmVarDecl 0x250256da368 <col:29, col:34> col:34 invalid b 'int *'
|-FunctionDecl 0x250256da558 <line:91:1, col:34> col:19 invalid block_in 'int (int *)' static
| `-ParmVarDecl 0x250256da4c0 <col:28, col:33> col:33 invalid b 'int *'
|-RecordDecl 0x250256da600 <line:97:9, line:108:1> line:97:16 invalid struct ok_struct definition
| |-FieldDecl 0x250256da6d0 <line:98:5, col:12> col:12 referenced buf_len 'size_t':'unsigned long long'
| |-FieldDecl 0x250256da738 <line:99:5, col:12> col:12 referenced buf_off 'size_t':'unsigned long long'
| |-FieldDecl 0x250256da7a0 <line:100:5, col:12> col:12 referenced buf_len_save 'size_t':'unsigned long long'
| |-FieldDecl 0x250256da808 <line:101:5, col:12> col:12 referenced buf_off_save 'size_t':'unsigned long long'
| |-FieldDecl 0x250256da878 <line:102:5, col:9> col:9 referenced cont 'int'
| |-FieldDecl 0x250256da8e8 <line:103:5, col:9> col:9 referenced finished 'int'
| |-FieldDecl 0x250256da958 <line:104:5, col:17> col:17 invalid md 'int *'
| |-FieldDecl 0x250256da9c8 <line:105:5, col:9> col:9 referenced blockout 'int'
| |-FieldDecl 0x250256daa38 <line:106:5, col:9> col:9 referenced sigio 'int'
| `-FieldDecl 0x250256daba8 <line:107:5, col:19> col:19 invalid buf 'unsigned char'
|-TypedefDecl 0x250256dac58 <line:97:1, line:108:3> col:3 referenced BIO_OK_CTX 'struct ok_struct':'struct ok_struct'
| `-ElaboratedType 0x250256dac00 'struct ok_struct' sugar
|   `-RecordType 0x250256da6a0 'struct ok_struct'
|     `-Record 0x250256da600 'ok_struct'
|-VarDecl 0x250256dace0 <line:110:1, col:25> col:25 invalid methods_ok 'const int' static
|-FunctionDecl 0x250256daf80 <line:123:1, line:126:1> line:123:19 invalid BIO_f_reliable 'const int *(void)'
| `-CompoundStmt 0x250256db038 <line:124:1, line:126:1>
|-FunctionDecl 0x250256d30e0 <line:128:1, line:147:1> line:128:12 invalid ok_new 'int (int *)' static
| |-ParmVarDecl 0x250256db060 <col:19, col:24> col:24 invalid bi 'int *'
| `-CompoundStmt 0x250256d3ee8 <line:129:1, line:147:1>
|   |-DeclStmt 0x250256d3290 <line:130:5, col:20>
|   | `-VarDecl 0x250256d3228 <col:5, col:17> col:17 used ctx 'BIO_OK_CTX *'
|   |-BinaryOperator 0x250256d3530 <line:132:5, col:38> 'BIO_OK_CTX *' '='
|   | |-DeclRefExpr 0x250256d32a8 <col:5> 'BIO_OK_CTX *' lvalue Var 0x250256d3228 'ctx' 'BIO_OK_CTX *'
|   | `-ImplicitCastExpr 0x250256d3518 <col:11, col:38> 'BIO_OK_CTX *' <IntegralToPointer>
|   |   `-CallExpr 0x250256d34f0 <col:11, col:38> 'int'
|   |     |-ImplicitCastExpr 0x250256d34d8 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x250256d33f8 <col:11> 'int ()' Function 0x250256d3330 'OPENSSL_zalloc' 'int ()'
|   |     `-UnaryExprOrTypeTraitExpr 0x250256d3488 <col:26, col:37> 'unsigned long long' sizeof
|   |       `-ParenExpr 0x250256d3468 <col:32, col:37> 'BIO_OK_CTX':'struct ok_struct' lvalue
|   |         `-UnaryOperator 0x250256d3450 <col:33, col:34> 'BIO_OK_CTX':'struct ok_struct' lvalue prefix '*' cannot overflow
|   |           `-ImplicitCastExpr 0x250256d3438 <col:34> 'BIO_OK_CTX *' <LValueToRValue>
|   |             `-DeclRefExpr 0x250256d3418 <col:34> 'BIO_OK_CTX *' lvalue Var 0x250256d3228 'ctx' 'BIO_OK_CTX *' non_odr_use_unevaluated
|   |-IfStmt 0x250256d3680 <line:133:5, line:134:16>
|   | |-BinaryOperator 0x250256d3628 <line:133:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x250256d35f8 <.//openssl//file_jk/before\crypto\evp\bio_ok.c:133:9> 'BIO_OK_CTX *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x250256d3550 <col:9> 'BIO_OK_CTX *' lvalue Var 0x250256d3228 'ctx' 'BIO_OK_CTX *'
|   | | `-ImplicitCastExpr 0x250256d3610 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'BIO_OK_CTX *' <BitCast>
|   | |   `-ParenExpr 0x250256d35d8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x250256d35b0 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x250256d3570 <col:26> 'int' 0
|   | `-ReturnStmt 0x250256d3670 <.//openssl//file_jk/before\crypto\evp\bio_ok.c:134:9, col:16>
|   |   `-IntegerLiteral 0x250256d3648 <col:16> 'int' 0
|   |-BinaryOperator 0x250256d3728 <line:136:5, col:17> 'int' '='
|   | |-MemberExpr 0x250256d36d0 <col:5, col:10> 'int' lvalue ->cont 0x250256da878
|   | | `-ImplicitCastExpr 0x250256d36b8 <col:5> 'BIO_OK_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x250256d3698 <col:5> 'BIO_OK_CTX *' lvalue Var 0x250256d3228 'ctx' 'BIO_OK_CTX *'
|   | `-IntegerLiteral 0x250256d3700 <col:17> 'int' 1
|   |-BinaryOperator 0x250256d37d8 <line:137:5, col:18> 'int' '='
|   | |-MemberExpr 0x250256d3780 <col:5, col:10> 'int' lvalue ->sigio 0x250256daa38
|   | | `-ImplicitCastExpr 0x250256d3768 <col:5> 'BIO_OK_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x250256d3748 <col:5> 'BIO_OK_CTX *' lvalue Var 0x250256d3228 'ctx' 'BIO_OK_CTX *'
|   | `-IntegerLiteral 0x250256d37b0 <col:18> 'int' 1
|   |-IfStmt 0x250256d3c30 <line:139:5, line:142:5>
|   | |-OpaqueValueExpr 0x250256d3c18 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x250256d3bf8 <line:139:26, line:142:5>
|   |   |-CallExpr 0x250256d3b80 <line:140:9, col:25> 'int'
|   |   | |-ImplicitCastExpr 0x250256d3b68 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x250256d3b28 <col:9> 'int ()' Function 0x250256d3a60 'OPENSSL_free' 'int ()'
|   |   | `-ImplicitCastExpr 0x250256d3ba8 <col:22> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x250256d3b48 <col:22> 'BIO_OK_CTX *' lvalue Var 0x250256d3228 'ctx' 'BIO_OK_CTX *'
|   |   `-ReturnStmt 0x250256d3be8 <line:141:9, col:16>
|   |     `-IntegerLiteral 0x250256d3bc0 <col:16> 'int' 0
|   `-ReturnStmt 0x250256d3ed8 <line:146:5, col:12>
|     `-IntegerLiteral 0x250256d3eb0 <col:12> 'int' 1
|-FunctionDecl 0x250256d3fe0 <line:149:1, line:164:1> line:149:12 invalid ok_free 'int (int *)' static
| |-ParmVarDecl 0x250256d3f48 <col:20, col:25> col:25 invalid a 'int *'
| `-CompoundStmt 0x250256dc858 <line:150:1, line:164:1>
|   |-DeclStmt 0x250256dc1d8 <line:151:5, col:20>
|   | `-VarDecl 0x250256dc170 <col:5, col:17> col:17 used ctx 'BIO_OK_CTX *'
|   |-IfStmt 0x250256dc2c8 <line:153:5, line:154:16>
|   | |-OpaqueValueExpr 0x250256dc2b0 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x250256dc2a0 <col:9, col:16>
|   |   `-IntegerLiteral 0x250256dc278 <col:16> 'int' 0
|   |-CallExpr 0x250256dc6e8 <line:159:5, col:47> 'int'
|   | |-ImplicitCastExpr 0x250256dc6d0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x250256dc660 <col:5> 'int ()' Function 0x250256dc598 'OPENSSL_clear_free' 'int ()'
|   | |-ImplicitCastExpr 0x250256dc718 <col:24> 'BIO_OK_CTX *' <LValueToRValue>
|   | | `-DeclRefExpr 0x250256dc680 <col:24> 'BIO_OK_CTX *' lvalue Var 0x250256dc170 'ctx' 'BIO_OK_CTX *'
|   | `-UnaryExprOrTypeTraitExpr 0x250256dc6b0 <col:29, col:46> 'unsigned long long' sizeof 'BIO_OK_CTX':'struct ok_struct'
|   `-ReturnStmt 0x250256dc848 <line:163:5, col:12>
|     `-IntegerLiteral 0x250256dc820 <col:12> 'int' 1
|-FunctionDecl 0x250256dca48 <line:166:1, line:250:1> line:166:12 invalid ok_read 'int (int *, char *, int)' static
| |-ParmVarDecl 0x250256dc8a0 <col:20, col:25> col:25 invalid b 'int *'
| |-ParmVarDecl 0x250256dc920 <col:28, col:34> col:34 used out 'char *'
| |-ParmVarDecl 0x250256dc9a0 <col:39, col:43> col:43 used outl 'int'
| `-CompoundStmt 0x250256e0540 <line:167:1, line:250:1>
|   |-DeclStmt 0x250256dcce0 <line:168:5, col:22>
|   | |-VarDecl 0x250256dcb30 <col:5, col:15> col:9 used ret 'int' cinit
|   | | `-IntegerLiteral 0x250256dcb98 <col:15> 'int' 0
|   | |-VarDecl 0x250256dcbd8 <col:5, col:18> col:18 used i 'int'
|   | `-VarDecl 0x250256dcc58 <col:5, col:21> col:21 used n 'int'
|   |-DeclStmt 0x250256dcd70 <line:169:5, col:20>
|   | `-VarDecl 0x250256dcd08 <col:5, col:17> col:17 used ctx 'BIO_OK_CTX *'
|   |-IfStmt 0x250256dced0 <line:172:5, line:173:16>
|   | |-BinaryOperator 0x250256dce78 <line:172:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x250256dce48 <.//openssl//file_jk/before\crypto\evp\bio_ok.c:172:9> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x250256dcd88 <col:9> 'char *' lvalue ParmVar 0x250256dc920 'out' 'char *'
|   | | `-ImplicitCastExpr 0x250256dce60 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x250256dce28 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x250256dce00 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x250256dcdc0 <col:26> 'int' 0
|   | `-ReturnStmt 0x250256dcec0 <.//openssl//file_jk/before\crypto\evp\bio_ok.c:173:9, col:16>
|   |   `-IntegerLiteral 0x250256dce98 <col:16> 'int' 0
|   |-IfStmt 0x250256dd390 <line:178:5, line:179:16>
|   | |-OpaqueValueExpr 0x250256dd378 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x250256dd368 <col:9, col:16>
|   |   `-IntegerLiteral 0x250256dd340 <col:16> 'int' 0
|   |-WhileStmt 0x250256e03b0 <line:181:5, line:245:5>
|   | |-BinaryOperator 0x250256dd420 <line:181:12, col:19> 'int' '>'
|   | | |-ImplicitCastExpr 0x250256dd408 <col:12> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x250256dd3a8 <col:12> 'int' lvalue ParmVar 0x250256dc9a0 'outl' 'int'
|   | | `-IntegerLiteral 0x250256dd3e0 <col:19> 'int' 0
|   | `-CompoundStmt 0x250256e0368 <col:22, line:245:5>
|   |   |-IfStmt 0x250256df868 <line:184:9, line:210:9>
|   |   | |-ImplicitCastExpr 0x250256dd4a8 <line:184:13, col:18> 'int' <LValueToRValue>
|   |   | | `-MemberExpr 0x250256dd478 <col:13, col:18> 'int' lvalue ->blockout 0x250256da9c8
|   |   | |   `-ImplicitCastExpr 0x250256dd460 <col:13> 'BIO_OK_CTX *' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x250256dd440 <col:13> 'BIO_OK_CTX *' lvalue Var 0x250256dcd08 'ctx' 'BIO_OK_CTX *'
|   |   | `-CompoundStmt 0x250256df820 <col:28, line:210:9>
|   |   |   |-BinaryOperator 0x250256dd630 <line:185:13, col:37> 'int' '='
|   |   |   | |-DeclRefExpr 0x250256dd4c0 <col:13> 'int' lvalue Var 0x250256dcbd8 'i' 'int'
|   |   |   | `-ImplicitCastExpr 0x250256dd618 <col:17, col:37> 'int' <IntegralCast>
|   |   |   |   `-BinaryOperator 0x250256dd5f8 <col:17, col:37> 'unsigned long long' '-'
|   |   |   |     |-ImplicitCastExpr 0x250256dd5c8 <col:17, col:22> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   |     | `-MemberExpr 0x250256dd530 <col:17, col:22> 'size_t':'unsigned long long' lvalue ->buf_len 0x250256da6d0
|   |   |   |     |   `-ImplicitCastExpr 0x250256dd518 <col:17> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |   |     |     `-DeclRefExpr 0x250256dd4f8 <col:17> 'BIO_OK_CTX *' lvalue Var 0x250256dcd08 'ctx' 'BIO_OK_CTX *'
|   |   |   |     `-ImplicitCastExpr 0x250256dd5e0 <col:32, col:37> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   |       `-MemberExpr 0x250256dd598 <col:32, col:37> 'size_t':'unsigned long long' lvalue ->buf_off 0x250256da738
|   |   |   |         `-ImplicitCastExpr 0x250256dd580 <col:32> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |   |           `-DeclRefExpr 0x250256dd560 <col:32> 'BIO_OK_CTX *' lvalue Var 0x250256dcd08 'ctx' 'BIO_OK_CTX *'
|   |   |   |-IfStmt 0x250256dd758 <line:186:13, line:187:21>
|   |   |   | |-BinaryOperator 0x250256dd6c0 <line:186:17, col:21> 'int' '>'
|   |   |   | | |-ImplicitCastExpr 0x250256dd690 <col:17> 'int' <LValueToRValue>
|   |   |   | | | `-DeclRefExpr 0x250256dd650 <col:17> 'int' lvalue Var 0x250256dcbd8 'i' 'int'
|   |   |   | | `-ImplicitCastExpr 0x250256dd6a8 <col:21> 'int' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x250256dd670 <col:21> 'int' lvalue ParmVar 0x250256dc9a0 'outl' 'int'
|   |   |   | `-BinaryOperator 0x250256dd738 <line:187:17, col:21> 'int' '='
|   |   |   |   |-DeclRefExpr 0x250256dd6e0 <col:17> 'int' lvalue Var 0x250256dcbd8 'i' 'int'
|   |   |   |   `-ImplicitCastExpr 0x250256dd720 <col:21> 'int' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x250256dd700 <col:21> 'int' lvalue ParmVar 0x250256dc9a0 'outl' 'int'
|   |   |   |-CompoundAssignOperator 0x250256ddb28 <line:189:13, col:20> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |   | |-DeclRefExpr 0x250256ddab8 <col:13> 'int' lvalue Var 0x250256dcb30 'ret' 'int'
|   |   |   | `-ImplicitCastExpr 0x250256ddb10 <col:20> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x250256ddaf0 <col:20> 'int' lvalue Var 0x250256dcbd8 'i' 'int'
|   |   |   |-CompoundAssignOperator 0x250256ddbb0 <line:190:13, col:20> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
|   |   |   | |-DeclRefExpr 0x250256ddb58 <col:13> 'char *' lvalue ParmVar 0x250256dc920 'out' 'char *'
|   |   |   | `-ImplicitCastExpr 0x250256ddb98 <col:20> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x250256ddb78 <col:20> 'int' lvalue Var 0x250256dcbd8 'i' 'int'
|   |   |   |-CompoundAssignOperator 0x250256ddc38 <line:191:13, col:21> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |   | |-DeclRefExpr 0x250256ddbe0 <col:13> 'int' lvalue ParmVar 0x250256dc9a0 'outl' 'int'
|   |   |   | `-ImplicitCastExpr 0x250256ddc20 <col:21> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x250256ddc00 <col:21> 'int' lvalue Var 0x250256dcbd8 'i' 'int'
|   |   |   |-CompoundAssignOperator 0x250256ddd20 <line:192:13, col:29> 'size_t':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |   |   | |-MemberExpr 0x250256ddca0 <col:13, col:18> 'size_t':'unsigned long long' lvalue ->buf_off 0x250256da738
|   |   |   | | `-ImplicitCastExpr 0x250256ddc88 <col:13> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x250256ddc68 <col:13> 'BIO_OK_CTX *' lvalue Var 0x250256dcd08 'ctx' 'BIO_OK_CTX *'
|   |   |   | `-ImplicitCastExpr 0x250256ddd08 <col:29> 'unsigned long long' <IntegralCast>
|   |   |   |   `-ImplicitCastExpr 0x250256ddcf0 <col:29> 'int' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x250256ddcd0 <col:29> 'int' lvalue Var 0x250256dcbd8 'i' 'int'
|   |   |   `-IfStmt 0x250256df808 <line:195:13, line:209:13>
|   |   |     |-BinaryOperator 0x250256dde50 <line:195:17, col:38> 'int' '=='
|   |   |     | |-ImplicitCastExpr 0x250256dde20 <col:17, col:22> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |     | | `-MemberExpr 0x250256ddd88 <col:17, col:22> 'size_t':'unsigned long long' lvalue ->buf_len 0x250256da6d0
|   |   |     | |   `-ImplicitCastExpr 0x250256ddd70 <col:17> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |     | |     `-DeclRefExpr 0x250256ddd50 <col:17> 'BIO_OK_CTX *' lvalue Var 0x250256dcd08 'ctx' 'BIO_OK_CTX *'
|   |   |     | `-ImplicitCastExpr 0x250256dde38 <col:33, col:38> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |     |   `-MemberExpr 0x250256dddf0 <col:33, col:38> 'size_t':'unsigned long long' lvalue ->buf_off 0x250256da738
|   |   |     |     `-ImplicitCastExpr 0x250256dddd8 <col:33> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |     |       `-DeclRefExpr 0x250256dddb8 <col:33> 'BIO_OK_CTX *' lvalue Var 0x250256dcd08 'ctx' 'BIO_OK_CTX *'
|   |   |     `-CompoundStmt 0x250256df7e0 <col:47, line:209:13>
|   |   |       |-BinaryOperator 0x250256ddf18 <line:196:17, col:32> 'size_t':'unsigned long long' '='
|   |   |       | |-MemberExpr 0x250256ddea8 <col:17, col:22> 'size_t':'unsigned long long' lvalue ->buf_off 0x250256da738
|   |   |       | | `-ImplicitCastExpr 0x250256dde90 <col:17> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |       | |   `-DeclRefExpr 0x250256dde70 <col:17> 'BIO_OK_CTX *' lvalue Var 0x250256dcd08 'ctx' 'BIO_OK_CTX *'
|   |   |       | `-ImplicitCastExpr 0x250256ddf00 <col:32> 'size_t':'unsigned long long' <IntegralCast>
|   |   |       |   `-IntegerLiteral 0x250256dded8 <col:32> 'int' 0
|   |   |       |-IfStmt 0x250256df708 <line:201:17, line:207:17> has_else
|   |   |       | |-BinaryOperator 0x250256de098 <line:201:21, col:61> 'int' '>'
|   |   |       | | |-BinaryOperator 0x250256de038 <col:21, col:46> 'unsigned long long' '-'
|   |   |       | | | |-ImplicitCastExpr 0x250256de008 <col:21, col:26> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |       | | | | `-MemberExpr 0x250256ddf70 <col:21, col:26> 'size_t':'unsigned long long' lvalue ->buf_len_save 0x250256da7a0
|   |   |       | | | |   `-ImplicitCastExpr 0x250256ddf58 <col:21> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |       | | | |     `-DeclRefExpr 0x250256ddf38 <col:21> 'BIO_OK_CTX *' lvalue Var 0x250256dcd08 'ctx' 'BIO_OK_CTX *'
|   |   |       | | | `-ImplicitCastExpr 0x250256de020 <col:41, col:46> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |       | | |   `-MemberExpr 0x250256ddfd8 <col:41, col:46> 'size_t':'unsigned long long' lvalue ->buf_off_save 0x250256da808
|   |   |       | | |     `-ImplicitCastExpr 0x250256ddfc0 <col:41> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |       | | |       `-DeclRefExpr 0x250256ddfa0 <col:41> 'BIO_OK_CTX *' lvalue Var 0x250256dcd08 'ctx' 'BIO_OK_CTX *'
|   |   |       | | `-ImplicitCastExpr 0x250256de080 <col:61> 'unsigned long long' <IntegralCast>
|   |   |       | |   `-IntegerLiteral 0x250256de058 <col:61> 'int' 0
|   |   |       | |-CompoundStmt 0x250256df610 <col:64, line:205:17>
|   |   |       | | `-BinaryOperator 0x250256df288 <line:202:21, col:61> 'size_t':'unsigned long long' '='
|   |   |       | |   |-MemberExpr 0x250256de0f0 <col:21, col:26> 'size_t':'unsigned long long' lvalue ->buf_len 0x250256da6d0
|   |   |       | |   | `-ImplicitCastExpr 0x250256de0d8 <col:21> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |       | |   |   `-DeclRefExpr 0x250256de0b8 <col:21> 'BIO_OK_CTX *' lvalue Var 0x250256dcd08 'ctx' 'BIO_OK_CTX *'
|   |   |       | |   `-BinaryOperator 0x250256df268 <col:36, col:61> 'unsigned long long' '-'
|   |   |       | |     |-ImplicitCastExpr 0x250256df238 <col:36, col:41> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |       | |     | `-MemberExpr 0x250256df1a0 <col:36, col:41> 'size_t':'unsigned long long' lvalue ->buf_len_save 0x250256da7a0
|   |   |       | |     |   `-ImplicitCastExpr 0x250256de140 <col:36> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |       | |     |     `-DeclRefExpr 0x250256de120 <col:36> 'BIO_OK_CTX *' lvalue Var 0x250256dcd08 'ctx' 'BIO_OK_CTX *'
|   |   |       | |     `-ImplicitCastExpr 0x250256df250 <col:56, col:61> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |       | |       `-MemberExpr 0x250256df208 <col:56, col:61> 'size_t':'unsigned long long' lvalue ->buf_off_save 0x250256da808
|   |   |       | |         `-ImplicitCastExpr 0x250256df1f0 <col:56> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |       | |           `-DeclRefExpr 0x250256df1d0 <col:56> 'BIO_OK_CTX *' lvalue Var 0x250256dcd08 'ctx' 'BIO_OK_CTX *'
|   |   |       | `-CompoundStmt 0x250256df6f0 <line:205:24, line:207:17>
|   |   |       |   `-BinaryOperator 0x250256df6d0 <line:206:21, col:36> 'size_t':'unsigned long long' '='
|   |   |       |     |-MemberExpr 0x250256df660 <col:21, col:26> 'size_t':'unsigned long long' lvalue ->buf_len 0x250256da6d0
|   |   |       |     | `-ImplicitCastExpr 0x250256df648 <col:21> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |       |     |   `-DeclRefExpr 0x250256df628 <col:21> 'BIO_OK_CTX *' lvalue Var 0x250256dcd08 'ctx' 'BIO_OK_CTX *'
|   |   |       |     `-ImplicitCastExpr 0x250256df6b8 <col:36> 'size_t':'unsigned long long' <IntegralCast>
|   |   |       |       `-IntegerLiteral 0x250256df690 <col:36> 'int' 0
|   |   |       `-BinaryOperator 0x250256df7c0 <line:208:17, col:33> 'int' '='
|   |   |         |-MemberExpr 0x250256df768 <col:17, col:22> 'int' lvalue ->blockout 0x250256da9c8
|   |   |         | `-ImplicitCastExpr 0x250256df750 <col:17> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |         |   `-DeclRefExpr 0x250256df730 <col:17> 'BIO_OK_CTX *' lvalue Var 0x250256dcd08 'ctx' 'BIO_OK_CTX *'
|   |   |         `-IntegerLiteral 0x250256df798 <col:33> 'int' 0
|   |   |-IfStmt 0x250256df908 <line:213:9, line:214:13>
|   |   | |-BinaryOperator 0x250256df8e0 <line:213:13, col:21> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x250256df8c8 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x250256df880 <col:13> 'int' lvalue ParmVar 0x250256dc9a0 'outl' 'int'
|   |   | | `-IntegerLiteral 0x250256df8a0 <col:21> 'int' 0
|   |   | `-BreakStmt 0x250256df900 <line:214:13>
|   |   |-IfStmt 0x250256dfd38 <line:220:9, line:221:13>
|   |   | |-BinaryOperator 0x250256dfd10 <line:220:13, col:18> 'int' '<='
|   |   | | |-ImplicitCastExpr 0x250256dfcf8 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x250256dfcb0 <col:13> 'int' lvalue Var 0x250256dcbd8 'i' 'int'
|   |   | | `-IntegerLiteral 0x250256dfcd0 <col:18> 'int' 0
|   |   | `-BreakStmt 0x250256dfd30 <line:221:13>
|   |   |-CompoundAssignOperator 0x250256dfe08 <line:223:9, col:25> 'size_t':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |   | |-MemberExpr 0x250256dfd88 <col:9, col:14> 'size_t':'unsigned long long' lvalue ->buf_len 0x250256da6d0
|   |   | | `-ImplicitCastExpr 0x250256dfd70 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x250256dfd50 <col:9> 'BIO_OK_CTX *' lvalue Var 0x250256dcd08 'ctx' 'BIO_OK_CTX *'
|   |   | `-ImplicitCastExpr 0x250256dfdf0 <col:25> 'unsigned long long' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x250256dfdd8 <col:25> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x250256dfdb8 <col:25> 'int' lvalue Var 0x250256dcbd8 'i' 'int'
|   |   |-IfStmt 0x250256e00a8 <line:226:9, line:231:9>
|   |   | |-BinaryOperator 0x250256dfee0 <line:226:13, col:27> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x250256dfec8 <col:13, col:18> 'int' <LValueToRValue>
|   |   | | | `-MemberExpr 0x250256dfe70 <col:13, col:18> 'int' lvalue ->sigio 0x250256daa38
|   |   | | |   `-ImplicitCastExpr 0x250256dfe58 <col:13> 'BIO_OK_CTX *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x250256dfe38 <col:13> 'BIO_OK_CTX *' lvalue Var 0x250256dcd08 'ctx' 'BIO_OK_CTX *'
|   |   | | `-IntegerLiteral 0x250256dfea0 <col:27> 'int' 1
|   |   | `-CompoundStmt 0x250256e0090 <col:30, line:231:9>
|   |   |   `-IfStmt 0x250256e0078 <line:227:13, line:230:13>
|   |   |     |-OpaqueValueExpr 0x250256e0060 <<invalid sloc>> '_Bool'
|   |   |     `-CompoundStmt 0x250256e0048 <line:227:29, line:230:13>
|   |   |       `-ReturnStmt 0x250256e0038 <line:229:17, col:24>
|   |   |         `-IntegerLiteral 0x250256e0010 <col:24> 'int' 0
|   |   |-IfStmt 0x250256e0268 <line:234:9, line:239:9>
|   |   | |-BinaryOperator 0x250256e0168 <line:234:13, col:27> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x250256e0150 <col:13, col:18> 'int' <LValueToRValue>
|   |   | | | `-MemberExpr 0x250256e00f8 <col:13, col:18> 'int' lvalue ->sigio 0x250256daa38
|   |   | | |   `-ImplicitCastExpr 0x250256e00e0 <col:13> 'BIO_OK_CTX *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x250256e00c0 <col:13> 'BIO_OK_CTX *' lvalue Var 0x250256dcd08 'ctx' 'BIO_OK_CTX *'
|   |   | | `-IntegerLiteral 0x250256e0128 <col:27> 'int' 0
|   |   | `-CompoundStmt 0x250256e0250 <col:30, line:239:9>
|   |   |   `-IfStmt 0x250256e0238 <line:235:13, line:238:13>
|   |   |     |-OpaqueValueExpr 0x250256e0220 <<invalid sloc>> '_Bool'
|   |   |     `-CompoundStmt 0x250256e0208 <line:235:31, line:238:13>
|   |   |       `-ReturnStmt 0x250256e01f8 <line:237:17, col:24>
|   |   |         `-IntegerLiteral 0x250256e01d0 <col:24> 'int' 0
|   |   `-IfStmt 0x250256e0350 <line:242:9, line:243:13>
|   |     |-BinaryOperator 0x250256e0328 <line:242:13, col:26> 'int' '<='
|   |     | |-ImplicitCastExpr 0x250256e0310 <col:13, col:18> 'int' <LValueToRValue>
|   |     | | `-MemberExpr 0x250256e02b8 <col:13, col:18> 'int' lvalue ->cont 0x250256da878
|   |     | |   `-ImplicitCastExpr 0x250256e02a0 <col:13> 'BIO_OK_CTX *' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x250256e0280 <col:13> 'BIO_OK_CTX *' lvalue Var 0x250256dcd08 'ctx' 'BIO_OK_CTX *'
|   |     | `-IntegerLiteral 0x250256e02e8 <col:26> 'int' 0
|   |     `-BreakStmt 0x250256e0348 <line:243:13>
|   `-ReturnStmt 0x250256e0530 <line:249:5, col:12>
|     `-ImplicitCastExpr 0x250256e0518 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x250256e04f8 <col:12> 'int' lvalue Var 0x250256dcb30 'ret' 'int'
|-FunctionDecl 0x250256dd7b0 <line:188:13> col:13 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x250256dd850 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x250256dd8b8 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x250256dd920 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x250256df2a8 <line:203:21> col:21 implicit used memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x250256df348 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x250256df3b0 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x250256df418 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x250256e0740 <line:252:1, line:315:1> line:252:12 invalid ok_write 'int (int *, const char *, int)' static
| |-ParmVarDecl 0x250256e0598 <col:21, col:26> col:26 invalid b 'int *'
| |-ParmVarDecl 0x250256e0618 <col:29, col:41> col:41 used in 'const char *'
| |-ParmVarDecl 0x250256e0698 <col:45, col:49> col:49 used inl 'int'
| `-CompoundStmt 0x250256e1b78 <line:253:1, line:315:1>
|   |-DeclStmt 0x250256e09d8 <line:254:5, col:22>
|   | |-VarDecl 0x250256e0828 <col:5, col:15> col:9 used ret 'int' cinit
|   | | `-IntegerLiteral 0x250256e0890 <col:15> 'int' 0
|   | |-VarDecl 0x250256e08d0 <col:5, col:18> col:18 used n 'int'
|   | `-VarDecl 0x250256e0950 <col:5, col:21> col:21 used i 'int'
|   |-DeclStmt 0x250256e0a68 <line:255:5, col:20>
|   | `-VarDecl 0x250256e0a00 <col:5, col:17> col:17 used ctx 'BIO_OK_CTX *'
|   |-IfStmt 0x250256e0b60 <line:258:5, line:259:16>
|   | |-BinaryOperator 0x250256e0af8 <line:258:9, col:16> 'int' '<='
|   | | |-ImplicitCastExpr 0x250256e0ae0 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x250256e0a80 <col:9> 'int' lvalue ParmVar 0x250256e0698 'inl' 'int'
|   | | `-IntegerLiteral 0x250256e0ab8 <col:16> 'int' 0
|   | `-ReturnStmt 0x250256e0b50 <line:259:9, col:16>
|   |   `-ImplicitCastExpr 0x250256e0b38 <col:16> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x250256e0b18 <col:16> 'int' lvalue ParmVar 0x250256e0698 'inl' 'int'
|   |-BinaryOperator 0x250256e0c60 <line:263:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x250256e0bf0 <col:5> 'int' lvalue Var 0x250256e0828 'ret' 'int'
|   | `-ImplicitCastExpr 0x250256e0c48 <col:11> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x250256e0c28 <col:11> 'int' lvalue ParmVar 0x250256e0698 'inl' 'int'
|   |-IfStmt 0x250256e0ed8 <line:265:5, line:266:18>
|   | |-OpaqueValueExpr 0x250256e0ec0 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x250256e0eb0 <col:9, col:18>
|   |   `-ParenExpr 0x250256e0e90 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x250256e0e68 <col:17> 'int' 0
|   |-IfStmt 0x250256e0fa8 <line:268:5, line:269:16>
|   | |-OpaqueValueExpr 0x250256e0f90 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x250256e0f80 <col:9, col:16>
|   |   `-IntegerLiteral 0x250256e0f58 <col:16> 'int' 0
|   |-DoStmt 0x250256e1ab0 <line:271:5, line:310:21>
|   | |-CompoundStmt 0x250256e19d0 <line:271:8, line:310:5>
|   | | |-BinaryOperator 0x250256e1150 <line:273:9, col:33> 'int' '='
|   | | | |-DeclRefExpr 0x250256e0fe0 <col:9> 'int' lvalue Var 0x250256e08d0 'n' 'int'
|   | | | `-ImplicitCastExpr 0x250256e1138 <col:13, col:33> 'int' <IntegralCast>
|   | | |   `-BinaryOperator 0x250256e1118 <col:13, col:33> 'unsigned long long' '-'
|   | | |     |-ImplicitCastExpr 0x250256e10e8 <col:13, col:18> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |     | `-MemberExpr 0x250256e1050 <col:13, col:18> 'size_t':'unsigned long long' lvalue ->buf_len 0x250256da6d0
|   | | |     |   `-ImplicitCastExpr 0x250256e1038 <col:13> 'BIO_OK_CTX *' <LValueToRValue>
|   | | |     |     `-DeclRefExpr 0x250256e1018 <col:13> 'BIO_OK_CTX *' lvalue Var 0x250256e0a00 'ctx' 'BIO_OK_CTX *'
|   | | |     `-ImplicitCastExpr 0x250256e1100 <col:28, col:33> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |       `-MemberExpr 0x250256e10b8 <col:28, col:33> 'size_t':'unsigned long long' lvalue ->buf_off 0x250256da738
|   | | |         `-ImplicitCastExpr 0x250256e10a0 <col:28> 'BIO_OK_CTX *' <LValueToRValue>
|   | | |           `-DeclRefExpr 0x250256e1080 <col:28> 'BIO_OK_CTX *' lvalue Var 0x250256e0a00 'ctx' 'BIO_OK_CTX *'
|   | | |-WhileStmt 0x250256de948 <line:274:9, line:284:9>
|   | | | |-BinaryOperator 0x250256de258 <line:274:16, col:37> 'int' '&&'
|   | | | | |-ImplicitCastExpr 0x250256de240 <col:16, col:21> 'int' <LValueToRValue>
|   | | | | | `-MemberExpr 0x250256de190 <col:16, col:21> 'int' lvalue ->blockout 0x250256da9c8
|   | | | | |   `-ImplicitCastExpr 0x250256e1190 <col:16> 'BIO_OK_CTX *' <LValueToRValue>
|   | | | | |     `-DeclRefExpr 0x250256e1170 <col:16> 'BIO_OK_CTX *' lvalue Var 0x250256e0a00 'ctx' 'BIO_OK_CTX *'
|   | | | | `-BinaryOperator 0x250256de220 <col:33, col:37> 'int' '>'
|   | | | |   |-ImplicitCastExpr 0x250256de208 <col:33> 'int' <LValueToRValue>
|   | | | |   | `-DeclRefExpr 0x250256de1c0 <col:33> 'int' lvalue Var 0x250256e08d0 'n' 'int'
|   | | | |   `-IntegerLiteral 0x250256de1e0 <col:37> 'int' 0
|   | | | `-CompoundStmt 0x250256de920 <col:40, line:284:9>
|   | | |   |-IfStmt 0x250256de798 <line:276:13, line:281:13>
|   | | |   | |-BinaryOperator 0x250256de4e0 <line:276:17, col:22> 'int' '<='
|   | | |   | | |-ImplicitCastExpr 0x250256de4c8 <col:17> 'int' <LValueToRValue>
|   | | |   | | | `-DeclRefExpr 0x250256de480 <col:17> 'int' lvalue Var 0x250256e0950 'i' 'int'
|   | | |   | | `-IntegerLiteral 0x250256de4a0 <col:22> 'int' 0
|   | | |   | `-CompoundStmt 0x250256de778 <col:25, line:281:13>
|   | | |   |   |-IfStmt 0x250256de6f8 <line:278:17, line:279:33>
|   | | |   |   | |-OpaqueValueExpr 0x250256de6e0 <<invalid sloc>> '_Bool'
|   | | |   |   | `-BinaryOperator 0x250256de6c0 <col:21, col:33> 'int' '='
|   | | |   |   |   |-MemberExpr 0x250256de668 <col:21, col:26> 'int' lvalue ->cont 0x250256da878
|   | | |   |   |   | `-ImplicitCastExpr 0x250256de650 <col:21> 'BIO_OK_CTX *' <LValueToRValue>
|   | | |   |   |   |   `-DeclRefExpr 0x250256de630 <col:21> 'BIO_OK_CTX *' lvalue Var 0x250256e0a00 'ctx' 'BIO_OK_CTX *'
|   | | |   |   |   `-IntegerLiteral 0x250256de698 <col:33> 'int' 0
|   | | |   |   `-ReturnStmt 0x250256de768 <line:280:17, col:26>
|   | | |   |     `-ImplicitCastExpr 0x250256de750 <col:24, col:26> 'int' <LValueToRValue>
|   | | |   |       `-ParenExpr 0x250256de730 <col:24, col:26> 'int' lvalue
|   | | |   |         `-DeclRefExpr 0x250256de710 <col:25> 'int' lvalue Var 0x250256e0950 'i' 'int'
|   | | |   |-CompoundAssignOperator 0x250256de868 <line:282:13, col:29> 'size_t':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | | |   | |-MemberExpr 0x250256de7e8 <col:13, col:18> 'size_t':'unsigned long long' lvalue ->buf_off 0x250256da738
|   | | |   | | `-ImplicitCastExpr 0x250256de7d0 <col:13> 'BIO_OK_CTX *' <LValueToRValue>
|   | | |   | |   `-DeclRefExpr 0x250256de7b0 <col:13> 'BIO_OK_CTX *' lvalue Var 0x250256e0a00 'ctx' 'BIO_OK_CTX *'
|   | | |   | `-ImplicitCastExpr 0x250256de850 <col:29> 'unsigned long long' <IntegralCast>
|   | | |   |   `-ImplicitCastExpr 0x250256de838 <col:29> 'int' <LValueToRValue>
|   | | |   |     `-DeclRefExpr 0x250256de818 <col:29> 'int' lvalue Var 0x250256e0950 'i' 'int'
|   | | |   `-CompoundAssignOperator 0x250256de8f0 <line:283:13, col:18> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   | | |     |-DeclRefExpr 0x250256de898 <col:13> 'int' lvalue Var 0x250256e08d0 'n' 'int'
|   | | |     `-ImplicitCastExpr 0x250256de8d8 <col:18> 'int' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x250256de8b8 <col:18> 'int' lvalue Var 0x250256e0950 'i' 'int'
|   | | |-BinaryOperator 0x250256de9f0 <line:287:9, col:25> 'int' '='
|   | | | |-MemberExpr 0x250256de998 <col:9, col:14> 'int' lvalue ->blockout 0x250256da9c8
|   | | | | `-ImplicitCastExpr 0x250256de980 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x250256de960 <col:9> 'BIO_OK_CTX *' lvalue Var 0x250256e0a00 'ctx' 'BIO_OK_CTX *'
|   | | | `-IntegerLiteral 0x250256de9c8 <col:25> 'int' 0
|   | | |-IfStmt 0x250256dece0 <line:288:9, line:291:9>
|   | | | |-BinaryOperator 0x250256deb10 <line:288:13, col:34> 'int' '=='
|   | | | | |-ImplicitCastExpr 0x250256deae0 <col:13, col:18> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | | | `-MemberExpr 0x250256dea48 <col:13, col:18> 'size_t':'unsigned long long' lvalue ->buf_len 0x250256da6d0
|   | | | | |   `-ImplicitCastExpr 0x250256dea30 <col:13> 'BIO_OK_CTX *' <LValueToRValue>
|   | | | | |     `-DeclRefExpr 0x250256dea10 <col:13> 'BIO_OK_CTX *' lvalue Var 0x250256e0a00 'ctx' 'BIO_OK_CTX *'
|   | | | | `-ImplicitCastExpr 0x250256deaf8 <col:29, col:34> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | |   `-MemberExpr 0x250256deab0 <col:29, col:34> 'size_t':'unsigned long long' lvalue ->buf_off 0x250256da738
|   | | | |     `-ImplicitCastExpr 0x250256dea98 <col:29> 'BIO_OK_CTX *' <LValueToRValue>
|   | | | |       `-DeclRefExpr 0x250256dea78 <col:29> 'BIO_OK_CTX *' lvalue Var 0x250256e0a00 'ctx' 'BIO_OK_CTX *'
|   | | | `-CompoundStmt 0x250256decc0 <col:43, line:291:9>
|   | | |   |-BinaryOperator 0x250256debd8 <line:289:13, line:93:25> 'size_t':'unsigned long long' '='
|   | | |   | |-MemberExpr 0x250256deb68 <line:289:13, col:18> 'size_t':'unsigned long long' lvalue ->buf_len 0x250256da6d0
|   | | |   | | `-ImplicitCastExpr 0x250256deb50 <col:13> 'BIO_OK_CTX *' <LValueToRValue>
|   | | |   | |   `-DeclRefExpr 0x250256deb30 <col:13> 'BIO_OK_CTX *' lvalue Var 0x250256e0a00 'ctx' 'BIO_OK_CTX *'
|   | | |   | `-ImplicitCastExpr 0x250256debc0 <line:93:25> 'size_t':'unsigned long long' <IntegralCast>
|   | | |   |   `-IntegerLiteral 0x250256deb98 <col:25> 'int' 4
|   | | |   `-BinaryOperator 0x250256deca0 <line:290:13, col:28> 'size_t':'unsigned long long' '='
|   | | |     |-MemberExpr 0x250256dec30 <col:13, col:18> 'size_t':'unsigned long long' lvalue ->buf_off 0x250256da738
|   | | |     | `-ImplicitCastExpr 0x250256dec18 <col:13> 'BIO_OK_CTX *' <LValueToRValue>
|   | | |     |   `-DeclRefExpr 0x250256debf8 <col:13> 'BIO_OK_CTX *' lvalue Var 0x250256e0a00 'ctx' 'BIO_OK_CTX *'
|   | | |     `-ImplicitCastExpr 0x250256dec88 <col:28> 'size_t':'unsigned long long' <IntegralCast>
|   | | |       `-IntegerLiteral 0x250256dec60 <col:28> 'int' 0
|   | | |-IfStmt 0x250256def40 <line:293:9, line:294:22>
|   | | | |-BinaryOperator 0x250256deec8 <line:293:13, col:38> 'int' '||'
|   | | | | |-ParenExpr 0x250256dee08 <col:13, col:24> 'int'
|   | | | | | `-BinaryOperator 0x250256dede8 <col:14, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | | | |   |-ImplicitCastExpr 0x250256dedb8 <.//openssl//file_jk/before\crypto\evp\bio_ok.c:293:14> 'const char *' <LValueToRValue>
|   | | | | |   | `-DeclRefExpr 0x250256decf8 <col:14> 'const char *' lvalue ParmVar 0x250256e0618 'in' 'const char *'
|   | | | | |   `-ImplicitCastExpr 0x250256dedd0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   | | | | |     `-ParenExpr 0x250256ded98 <col:17, col:27> 'void *'
|   | | | | |       `-CStyleCastExpr 0x250256ded70 <col:18, col:26> 'void *' <NullToPointer>
|   | | | | |         `-IntegerLiteral 0x250256ded30 <col:26> 'int' 0
|   | | | | `-ParenExpr 0x250256deea8 <.//openssl//file_jk/before\crypto\evp\bio_ok.c:293:29, col:38> 'int'
|   | | | |   `-BinaryOperator 0x250256dee88 <col:30, col:37> 'int' '<='
|   | | | |     |-ImplicitCastExpr 0x250256dee70 <col:30> 'int' <LValueToRValue>
|   | | | |     | `-DeclRefExpr 0x250256dee28 <col:30> 'int' lvalue ParmVar 0x250256e0698 'inl' 'int'
|   | | | |     `-IntegerLiteral 0x250256dee48 <col:37> 'int' 0
|   | | | `-ReturnStmt 0x250256def30 <line:294:13, col:22>
|   | | |   `-ParenExpr 0x250256def10 <col:20, col:22> 'int'
|   | | |     `-IntegerLiteral 0x250256deee8 <col:21> 'int' 0
|   | | |-BinaryOperator 0x250256e1458 <line:296:9, line:297:68> 'int' '='
|   | | | |-DeclRefExpr 0x250256def58 <line:296:9> 'int' lvalue Var 0x250256e08d0 'n' 'int'
|   | | | `-ConditionalOperator 0x250256e1428 <col:13, line:297:68> 'int'
|   | | |   |-ParenExpr 0x250256e11c0 <line:296:13, col:65> 'int'
|   | | |   | `-BinaryOperator 0x250256df158 <col:14, line:93:25> 'int' '>'
|   | | |   |   |-BinaryOperator 0x250256df048 <line:296:14, col:25> 'unsigned long long' '+'
|   | | |   |   | |-ImplicitCastExpr 0x250256df030 <col:14> 'unsigned long long' <IntegralCast>
|   | | |   |   | | `-ImplicitCastExpr 0x250256df000 <col:14> 'int' <LValueToRValue>
|   | | |   |   | |   `-DeclRefExpr 0x250256def78 <col:14> 'int' lvalue ParmVar 0x250256e0698 'inl' 'int'
|   | | |   |   | `-ImplicitCastExpr 0x250256df018 <col:20, col:25> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |   |   |   `-MemberExpr 0x250256defd0 <col:20, col:25> 'size_t':'unsigned long long' lvalue ->buf_len 0x250256da6d0
|   | | |   |   |     `-ImplicitCastExpr 0x250256defb8 <col:20> 'BIO_OK_CTX *' <LValueToRValue>
|   | | |   |   |       `-DeclRefExpr 0x250256def98 <col:20> 'BIO_OK_CTX *' lvalue Var 0x250256e0a00 'ctx' 'BIO_OK_CTX *'
|   | | |   |   `-ImplicitCastExpr 0x250256df140 <line:92:25, line:93:25> 'unsigned long long' <IntegralCast>
|   | | |   |     `-BinaryOperator 0x250256df120 <line:92:25, line:93:25> 'int' '+'
|   | | |   |       |-ParenExpr 0x250256df0d8 <line:92:25, col:32> 'int'
|   | | |   |       | `-BinaryOperator 0x250256df0b8 <col:26, col:31> 'int' '*'
|   | | |   |       |   |-IntegerLiteral 0x250256df068 <col:26> 'int' 1024
|   | | |   |       |   `-IntegerLiteral 0x250256df090 <col:31> 'int' 4
|   | | |   |       `-IntegerLiteral 0x250256df0f8 <line:93:25> 'int' 4
|   | | |   |-CStyleCastExpr 0x250256e13c8 <line:297:13, col:64> 'int' <IntegralCast>
|   | | |   | `-ParenExpr 0x250256e13a8 <col:18, col:64> 'unsigned long long'
|   | | |   |   `-BinaryOperator 0x250256e1350 <line:92:25, line:297:57> 'unsigned long long' '-'
|   | | |   |     |-ImplicitCastExpr 0x250256e1338 <line:92:25, line:93:25> 'unsigned long long' <IntegralCast>
|   | | |   |     | `-BinaryOperator 0x250256e1298 <line:92:25, line:93:25> 'int' '+'
|   | | |   |     |   |-ParenExpr 0x250256e1250 <line:92:25, col:32> 'int'
|   | | |   |     |   | `-BinaryOperator 0x250256e1230 <col:26, col:31> 'int' '*'
|   | | |   |     |   |   |-IntegerLiteral 0x250256e11e0 <col:26> 'int' 1024
|   | | |   |     |   |   `-IntegerLiteral 0x250256e1208 <col:31> 'int' 4
|   | | |   |     |   `-IntegerLiteral 0x250256e1270 <line:93:25> 'int' 4
|   | | |   |     `-ImplicitCastExpr 0x250256e1320 <line:297:52, col:57> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |   |       `-MemberExpr 0x250256e12f0 <col:52, col:57> 'size_t':'unsigned long long' lvalue ->buf_len 0x250256da6d0
|   | | |   |         `-ImplicitCastExpr 0x250256e12d8 <col:52> 'BIO_OK_CTX *' <LValueToRValue>
|   | | |   |           `-DeclRefExpr 0x250256e12b8 <col:52> 'BIO_OK_CTX *' lvalue Var 0x250256e0a00 'ctx' 'BIO_OK_CTX *'
|   | | |   `-ImplicitCastExpr 0x250256e1410 <col:68> 'int' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x250256e13f0 <col:68> 'int' lvalue ParmVar 0x250256e0698 'inl' 'int'
|   | | |-CompoundAssignOperator 0x250256e1630 <line:300:9, col:25> 'size_t':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | | | |-MemberExpr 0x250256e15b0 <col:9, col:14> 'size_t':'unsigned long long' lvalue ->buf_len 0x250256da6d0
|   | | | | `-ImplicitCastExpr 0x250256e1598 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x250256e1578 <col:9> 'BIO_OK_CTX *' lvalue Var 0x250256e0a00 'ctx' 'BIO_OK_CTX *'
|   | | | `-ImplicitCastExpr 0x250256e1618 <col:25> 'unsigned long long' <IntegralCast>
|   | | |   `-ImplicitCastExpr 0x250256e1600 <col:25> 'int' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x250256e15e0 <col:25> 'int' lvalue Var 0x250256e08d0 'n' 'int'
|   | | |-CompoundAssignOperator 0x250256e16b8 <line:301:9, col:16> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   | | | |-DeclRefExpr 0x250256e1660 <col:9> 'int' lvalue ParmVar 0x250256e0698 'inl' 'int'
|   | | | `-ImplicitCastExpr 0x250256e16a0 <col:16> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x250256e1680 <col:16> 'int' lvalue Var 0x250256e08d0 'n' 'int'
|   | | |-CompoundAssignOperator 0x250256e1740 <line:302:9, col:15> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'
|   | | | |-DeclRefExpr 0x250256e16e8 <col:9> 'const char *' lvalue ParmVar 0x250256e0618 'in' 'const char *'
|   | | | `-ImplicitCastExpr 0x250256e1728 <col:15> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x250256e1708 <col:15> 'int' lvalue Var 0x250256e08d0 'n' 'int'
|   | | `-IfStmt 0x250256e19b8 <line:304:9, line:309:9>
|   | |   |-BinaryOperator 0x250256e18e0 <line:304:13, line:93:25> 'int' '>='
|   | |   | |-ImplicitCastExpr 0x250256e18b0 <line:304:13, col:18> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   | | `-MemberExpr 0x250256e17a8 <col:13, col:18> 'size_t':'unsigned long long' lvalue ->buf_len 0x250256da6d0
|   | |   | |   `-ImplicitCastExpr 0x250256e1790 <col:13> 'BIO_OK_CTX *' <LValueToRValue>
|   | |   | |     `-DeclRefExpr 0x250256e1770 <col:13> 'BIO_OK_CTX *' lvalue Var 0x250256e0a00 'ctx' 'BIO_OK_CTX *'
|   | |   | `-ImplicitCastExpr 0x250256e18c8 <line:92:25, line:93:25> 'unsigned long long' <IntegralCast>
|   | |   |   `-BinaryOperator 0x250256e1890 <line:92:25, line:93:25> 'int' '+'
|   | |   |     |-ParenExpr 0x250256e1848 <line:92:25, col:32> 'int'
|   | |   |     | `-BinaryOperator 0x250256e1828 <col:26, col:31> 'int' '*'
|   | |   |     |   |-IntegerLiteral 0x250256e17d8 <col:26> 'int' 1024
|   | |   |     |   `-IntegerLiteral 0x250256e1800 <col:31> 'int' 4
|   | |   |     `-IntegerLiteral 0x250256e1868 <line:93:25> 'int' 4
|   | |   `-CompoundStmt 0x250256e19a0 <line:304:61, line:309:9>
|   | |     `-IfStmt 0x250256e1988 <line:305:13, line:308:13>
|   | |       |-OpaqueValueExpr 0x250256e1970 <<invalid sloc>> '_Bool'
|   | |       `-CompoundStmt 0x250256e1958 <line:305:32, line:308:13>
|   | |         `-ReturnStmt 0x250256e1948 <line:307:17, col:24>
|   | |           `-IntegerLiteral 0x250256e1920 <col:24> 'int' 0
|   | `-BinaryOperator 0x250256e1a90 <line:310:14, col:20> 'int' '>'
|   |   |-ImplicitCastExpr 0x250256e1a78 <col:14> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x250256e1a30 <col:14> 'int' lvalue ParmVar 0x250256e0698 'inl' 'int'
|   |   `-IntegerLiteral 0x250256e1a50 <col:20> 'int' 0
|   `-ReturnStmt 0x250256e1b68 <line:314:5, col:16>
|     `-ImplicitCastExpr 0x250256e1b50 <col:12, col:16> 'int' <LValueToRValue>
|       `-ParenExpr 0x250256e1b30 <col:12, col:16> 'int' lvalue
|         `-DeclRefExpr 0x250256e1b10 <col:13> 'int' lvalue Var 0x250256e0828 'ret' 'int'
|-FunctionDecl 0x250256e1e10 <line:317:1, line:400:1> line:317:13 invalid ok_ctrl 'long (int *, int, long, void *)' static
| |-ParmVarDecl 0x250256e1be0 <col:21, col:26> col:26 invalid b 'int *'
| |-ParmVarDecl 0x250256e1c60 <col:29, col:33> col:33 used cmd 'int'
| |-ParmVarDecl 0x250256e1ce0 <col:38, col:43> col:43 used num 'long'
| |-ParmVarDecl 0x250256e1d60 <col:48, col:54> col:54 used ptr 'void *'
| `-CompoundStmt 0x250256e7198 <line:318:1, line:400:1>
|   |-DeclStmt 0x250256e1f60 <line:319:5, col:20>
|   | `-VarDecl 0x250256e1ef8 <col:5, col:17> col:17 used ctx 'BIO_OK_CTX *'
|   |-DeclStmt 0x250256e2030 <line:321:5, col:24>
|   | `-VarDecl 0x250256e1fc8 <col:5, col:20> col:20 invalid ppmd 'const int **'
|   |-DeclStmt 0x250256e2108 <line:322:5, col:17>
|   | `-VarDecl 0x250256e2060 <col:5, col:16> col:10 used ret 'long' cinit
|   |   `-ImplicitCastExpr 0x250256e20f0 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x250256e20c8 <col:16> 'int' 1
|   |-DeclStmt 0x250256e21a0 <line:323:5, col:10>
|   | `-VarDecl 0x250256e2138 <col:5, col:9> col:9 used i 'int'
|   |-SwitchStmt 0x250256db228 <line:329:5, line:398:5>
|   | |-ImplicitCastExpr 0x250256db210 <line:329:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x250256db1d8 <col:13> 'int' lvalue ParmVar 0x250256e1c60 'cmd' 'int'
|   | `-CompoundStmt 0x250256e7060 <col:18, line:398:5>
|   |   |-BinaryOperator 0x250256db2f0 <line:331:9, col:24> 'size_t':'unsigned long long' '='
|   |   | |-MemberExpr 0x250256db280 <col:9, col:14> 'size_t':'unsigned long long' lvalue ->buf_len 0x250256da6d0
|   |   | | `-ImplicitCastExpr 0x250256db268 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x250256db248 <col:9> 'BIO_OK_CTX *' lvalue Var 0x250256e1ef8 'ctx' 'BIO_OK_CTX *'
|   |   | `-ImplicitCastExpr 0x250256db2d8 <col:24> 'size_t':'unsigned long long' <IntegralCast>
|   |   |   `-IntegerLiteral 0x250256db2b0 <col:24> 'int' 0
|   |   |-BinaryOperator 0x250256db3b8 <line:332:9, col:24> 'size_t':'unsigned long long' '='
|   |   | |-MemberExpr 0x250256db348 <col:9, col:14> 'size_t':'unsigned long long' lvalue ->buf_off 0x250256da738
|   |   | | `-ImplicitCastExpr 0x250256db330 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x250256db310 <col:9> 'BIO_OK_CTX *' lvalue Var 0x250256e1ef8 'ctx' 'BIO_OK_CTX *'
|   |   | `-ImplicitCastExpr 0x250256db3a0 <col:24> 'size_t':'unsigned long long' <IntegralCast>
|   |   |   `-IntegerLiteral 0x250256db378 <col:24> 'int' 0
|   |   |-BinaryOperator 0x250256db480 <line:333:9, col:29> 'size_t':'unsigned long long' '='
|   |   | |-MemberExpr 0x250256db410 <col:9, col:14> 'size_t':'unsigned long long' lvalue ->buf_len_save 0x250256da7a0
|   |   | | `-ImplicitCastExpr 0x250256db3f8 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x250256db3d8 <col:9> 'BIO_OK_CTX *' lvalue Var 0x250256e1ef8 'ctx' 'BIO_OK_CTX *'
|   |   | `-ImplicitCastExpr 0x250256db468 <col:29> 'size_t':'unsigned long long' <IntegralCast>
|   |   |   `-IntegerLiteral 0x250256db440 <col:29> 'int' 0
|   |   |-BinaryOperator 0x250256db548 <line:334:9, col:29> 'size_t':'unsigned long long' '='
|   |   | |-MemberExpr 0x250256db4d8 <col:9, col:14> 'size_t':'unsigned long long' lvalue ->buf_off_save 0x250256da808
|   |   | | `-ImplicitCastExpr 0x250256db4c0 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x250256db4a0 <col:9> 'BIO_OK_CTX *' lvalue Var 0x250256e1ef8 'ctx' 'BIO_OK_CTX *'
|   |   | `-ImplicitCastExpr 0x250256db530 <col:29> 'size_t':'unsigned long long' <IntegralCast>
|   |   |   `-IntegerLiteral 0x250256db508 <col:29> 'int' 0
|   |   |-BinaryOperator 0x250256db5f8 <line:335:9, col:21> 'int' '='
|   |   | |-MemberExpr 0x250256db5a0 <col:9, col:14> 'int' lvalue ->cont 0x250256da878
|   |   | | `-ImplicitCastExpr 0x250256db588 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x250256db568 <col:9> 'BIO_OK_CTX *' lvalue Var 0x250256e1ef8 'ctx' 'BIO_OK_CTX *'
|   |   | `-IntegerLiteral 0x250256db5d0 <col:21> 'int' 1
|   |   |-BinaryOperator 0x250256db6a8 <line:336:9, col:25> 'int' '='
|   |   | |-MemberExpr 0x250256db650 <col:9, col:14> 'int' lvalue ->finished 0x250256da8e8
|   |   | | `-ImplicitCastExpr 0x250256db638 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x250256db618 <col:9> 'BIO_OK_CTX *' lvalue Var 0x250256e1ef8 'ctx' 'BIO_OK_CTX *'
|   |   | `-IntegerLiteral 0x250256db680 <col:25> 'int' 0
|   |   |-BinaryOperator 0x250256db758 <line:337:9, col:25> 'int' '='
|   |   | |-MemberExpr 0x250256db700 <col:9, col:14> 'int' lvalue ->blockout 0x250256da9c8
|   |   | | `-ImplicitCastExpr 0x250256db6e8 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x250256db6c8 <col:9> 'BIO_OK_CTX *' lvalue Var 0x250256e1ef8 'ctx' 'BIO_OK_CTX *'
|   |   | `-IntegerLiteral 0x250256db730 <col:25> 'int' 0
|   |   |-BinaryOperator 0x250256db808 <line:338:9, col:22> 'int' '='
|   |   | |-MemberExpr 0x250256db7b0 <col:9, col:14> 'int' lvalue ->sigio 0x250256daa38
|   |   | | `-ImplicitCastExpr 0x250256db798 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x250256db778 <col:9> 'BIO_OK_CTX *' lvalue Var 0x250256e1ef8 'ctx' 'BIO_OK_CTX *'
|   |   | `-IntegerLiteral 0x250256db7e0 <col:22> 'int' 1
|   |   |-BreakStmt 0x250256dba00 <line:340:9>
|   |   |-IfStmt 0x250256dbbf8 <line:342:9, line:345:13> has_else
|   |   | |-BinaryOperator 0x250256dbab0 <line:342:13, col:26> 'int' '<='
|   |   | | |-ImplicitCastExpr 0x250256dba98 <col:13, col:18> 'int' <LValueToRValue>
|   |   | | | `-MemberExpr 0x250256dba40 <col:13, col:18> 'int' lvalue ->cont 0x250256da878
|   |   | | |   `-ImplicitCastExpr 0x250256dba28 <col:13> 'BIO_OK_CTX *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x250256dba08 <col:13> 'BIO_OK_CTX *' lvalue Var 0x250256e1ef8 'ctx' 'BIO_OK_CTX *'
|   |   | | `-IntegerLiteral 0x250256dba70 <col:26> 'int' 0
|   |   | |-BinaryOperator 0x250256dbb30 <line:343:13, col:19> 'long' '='
|   |   | | |-DeclRefExpr 0x250256dbad0 <col:13> 'long' lvalue Var 0x250256e2060 'ret' 'long'
|   |   | | `-ImplicitCastExpr 0x250256dbb18 <col:19> 'long' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x250256dbaf0 <col:19> 'int' 1
|   |   | `-NullStmt 0x250256dbbf0 <line:345:13>
|   |   |-BreakStmt 0x250256dbc20 <line:346:9>
|   |   |-BinaryOperator 0x250256dbe70 <line:349:9, col:61> 'long' '='
|   |   | |-DeclRefExpr 0x250256dbc28 <col:9> 'long' lvalue Var 0x250256e2060 'ret' 'long'
|   |   | `-ImplicitCastExpr 0x250256dbe58 <col:15, col:61> 'long' <IntegralCast>
|   |   |   `-ConditionalOperator 0x250256dbe28 <col:15, col:61> 'unsigned long long'
|   |   |     |-ImplicitCastExpr 0x250256dbdf8 <col:15, col:20> 'int' <LValueToRValue>
|   |   |     | `-MemberExpr 0x250256dbc80 <col:15, col:20> 'int' lvalue ->blockout 0x250256da9c8
|   |   |     |   `-ImplicitCastExpr 0x250256dbc68 <col:15> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x250256dbc48 <col:15> 'BIO_OK_CTX *' lvalue Var 0x250256e1ef8 'ctx' 'BIO_OK_CTX *'
|   |   |     |-BinaryOperator 0x250256dbdb0 <col:31, col:51> 'unsigned long long' '-'
|   |   |     | |-ImplicitCastExpr 0x250256dbd80 <col:31, col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |     | | `-MemberExpr 0x250256dbce8 <col:31, col:36> 'size_t':'unsigned long long' lvalue ->buf_len 0x250256da6d0
|   |   |     | |   `-ImplicitCastExpr 0x250256dbcd0 <col:31> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |     | |     `-DeclRefExpr 0x250256dbcb0 <col:31> 'BIO_OK_CTX *' lvalue Var 0x250256e1ef8 'ctx' 'BIO_OK_CTX *'
|   |   |     | `-ImplicitCastExpr 0x250256dbd98 <col:46, col:51> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |     |   `-MemberExpr 0x250256dbd50 <col:46, col:51> 'size_t':'unsigned long long' lvalue ->buf_off 0x250256da738
|   |   |     |     `-ImplicitCastExpr 0x250256dbd38 <col:46> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |     |       `-DeclRefExpr 0x250256dbd18 <col:46> 'BIO_OK_CTX *' lvalue Var 0x250256e1ef8 'ctx' 'BIO_OK_CTX *'
|   |   |     `-ImplicitCastExpr 0x250256dbe10 <col:61> 'unsigned long long' <IntegralCast>
|   |   |       `-IntegerLiteral 0x250256dbdd0 <col:61> 'int' 0
|   |   |-BreakStmt 0x250256dbfc8 <line:352:9>
|   |   |-IfStmt 0x250256dc118 <line:355:9, line:357:24>
|   |   | |-BinaryOperator 0x250256dc078 <line:355:13, col:30> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x250256dc060 <col:13, col:18> 'int' <LValueToRValue>
|   |   | | | `-MemberExpr 0x250256dc008 <col:13, col:18> 'int' lvalue ->blockout 0x250256da9c8
|   |   | | |   `-ImplicitCastExpr 0x250256dbff0 <col:13> 'BIO_OK_CTX *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x250256dbfd0 <col:13> 'BIO_OK_CTX *' lvalue Var 0x250256e1ef8 'ctx' 'BIO_OK_CTX *'
|   |   | | `-IntegerLiteral 0x250256dc038 <col:30> 'int' 0
|   |   | `-IfStmt 0x250256dc100 <line:356:13, line:357:24>
|   |   |   |-OpaqueValueExpr 0x250256dc0e8 <<invalid sloc>> '_Bool'
|   |   |   `-ReturnStmt 0x250256dc0d8 <col:17, col:24>
|   |   |     `-ImplicitCastExpr 0x250256dc0c0 <col:24> 'long' <IntegralCast>
|   |   |       `-IntegerLiteral 0x250256dc098 <col:24> 'int' 0
|   |   |-WhileStmt 0x250256e64c0 <line:359:9, line:365:9>
|   |   | |-ImplicitCastExpr 0x250256e6258 <line:359:16, col:21> 'int' <LValueToRValue>
|   |   | | `-MemberExpr 0x250256e6228 <col:16, col:21> 'int' lvalue ->blockout 0x250256da9c8
|   |   | |   `-ImplicitCastExpr 0x250256e6210 <col:16> 'BIO_OK_CTX *' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x250256dc130 <col:16> 'BIO_OK_CTX *' lvalue Var 0x250256e1ef8 'ctx' 'BIO_OK_CTX *'
|   |   | `-CompoundStmt 0x250256e64a8 <col:31, line:365:9>
|   |   |   `-IfStmt 0x250256e6490 <line:361:13, line:364:13>
|   |   |     |-BinaryOperator 0x250256e63b8 <line:361:17, col:21> 'int' '<'
|   |   |     | |-ImplicitCastExpr 0x250256e63a0 <col:17> 'int' <LValueToRValue>
|   |   |     | | `-DeclRefExpr 0x250256e6358 <col:17> 'int' lvalue Var 0x250256e2138 'i' 'int'
|   |   |     | `-IntegerLiteral 0x250256e6378 <col:21> 'int' 0
|   |   |     `-CompoundStmt 0x250256e6470 <col:24, line:364:13>
|   |   |       |-BinaryOperator 0x250256e6448 <line:362:17, col:23> 'long' '='
|   |   |       | |-DeclRefExpr 0x250256e63d8 <col:17> 'long' lvalue Var 0x250256e2060 'ret' 'long'
|   |   |       | `-ImplicitCastExpr 0x250256e6430 <col:23> 'long' <IntegralCast>
|   |   |       |   `-ImplicitCastExpr 0x250256e6418 <col:23> 'int' <LValueToRValue>
|   |   |       |     `-DeclRefExpr 0x250256e63f8 <col:23> 'int' lvalue Var 0x250256e2138 'i' 'int'
|   |   |       `-BreakStmt 0x250256e6468 <line:363:17>
|   |   |-BinaryOperator 0x250256e6568 <line:367:9, col:25> 'int' '='
|   |   | |-MemberExpr 0x250256e6510 <col:9, col:14> 'int' lvalue ->finished 0x250256da8e8
|   |   | | `-ImplicitCastExpr 0x250256e64f8 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x250256e64d8 <col:9> 'BIO_OK_CTX *' lvalue Var 0x250256e1ef8 'ctx' 'BIO_OK_CTX *'
|   |   | `-IntegerLiteral 0x250256e6540 <col:25> 'int' 1
|   |   |-BinaryOperator 0x250256e66b8 <line:368:9, col:39> 'size_t':'unsigned long long' '='
|   |   | |-MemberExpr 0x250256e65c0 <col:9, col:14> 'size_t':'unsigned long long' lvalue ->buf_off 0x250256da738
|   |   | | `-ImplicitCastExpr 0x250256e65a8 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x250256e6588 <col:9> 'BIO_OK_CTX *' lvalue Var 0x250256e1ef8 'ctx' 'BIO_OK_CTX *'
|   |   | `-BinaryOperator 0x250256e6698 <col:24, col:39> 'size_t':'unsigned long long' '='
|   |   |   |-MemberExpr 0x250256e6628 <col:24, col:29> 'size_t':'unsigned long long' lvalue ->buf_len 0x250256da6d0
|   |   |   | `-ImplicitCastExpr 0x250256e6610 <col:24> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x250256e65f0 <col:24> 'BIO_OK_CTX *' lvalue Var 0x250256e1ef8 'ctx' 'BIO_OK_CTX *'
|   |   |   `-ImplicitCastExpr 0x250256e6680 <col:39> 'size_t':'unsigned long long' <IntegralCast>
|   |   |     `-IntegerLiteral 0x250256e6658 <col:39> 'int' 0
|   |   |-BinaryOperator 0x250256e67b8 <line:369:9, col:26> 'int' '='
|   |   | |-MemberExpr 0x250256e6710 <col:9, col:14> 'int' lvalue ->cont 0x250256da878
|   |   | | `-ImplicitCastExpr 0x250256e66f8 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x250256e66d8 <col:9> 'BIO_OK_CTX *' lvalue Var 0x250256e1ef8 'ctx' 'BIO_OK_CTX *'
|   |   | `-CStyleCastExpr 0x250256e6790 <col:21, col:26> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x250256e6778 <col:26> 'long' <LValueToRValue> part_of_explicit_cast
|   |   |     `-DeclRefExpr 0x250256e6740 <col:26> 'long' lvalue Var 0x250256e2060 'ret' 'long'
|   |   |-BreakStmt 0x250256e6878 <line:373:9>
|   |   |-BreakStmt 0x250256e6960 <line:378:9>
|   |   |-BinaryOperator 0x250256e6a48 <line:380:9, col:26> 'long' '='
|   |   | |-DeclRefExpr 0x250256e6968 <col:9> 'long' lvalue Var 0x250256e2060 'ret' 'long'
|   |   | `-CStyleCastExpr 0x250256e6a20 <col:15, col:26> 'long' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x250256e6a08 <col:21, col:26> 'int' <LValueToRValue> part_of_explicit_cast
|   |   |     `-MemberExpr 0x250256e69c0 <col:21, col:26> 'int' lvalue ->cont 0x250256da878
|   |   |       `-ImplicitCastExpr 0x250256e69a8 <col:21> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x250256e6988 <col:21> 'BIO_OK_CTX *' lvalue Var 0x250256e1ef8 'ctx' 'BIO_OK_CTX *'
|   |   |-BreakStmt 0x250256e6a68 <line:381:9>
|   |   |-IfStmt 0x250256e6cc8 <line:384:9, line:385:20>
|   |   | |-OpaqueValueExpr 0x250256e6cb0 <<invalid sloc>> '_Bool'
|   |   | `-ReturnStmt 0x250256e6ca0 <col:13, col:20>
|   |   |   `-ImplicitCastExpr 0x250256e6c88 <col:20> 'long' <IntegralCast>
|   |   |     `-IntegerLiteral 0x250256e6c60 <col:20> 'int' 0
|   |   |-BreakStmt 0x250256e6d28 <line:387:9>
|   |   |-IfStmt 0x250256e6f60 <line:389:9, line:393:19> has_else
|   |   | |-OpaqueValueExpr 0x250256e6f48 <<invalid sloc>> '_Bool'
|   |   | |-CompoundStmt 0x250256e6eb8 <line:389:30, line:392:9>
|   |   | `-BinaryOperator 0x250256e6f28 <line:393:13, col:19> 'long' '='
|   |   |   |-DeclRefExpr 0x250256e6ec8 <col:13> 'long' lvalue Var 0x250256e2060 'ret' 'long'
|   |   |   `-ImplicitCastExpr 0x250256e6f10 <col:19> 'long' <IntegralCast>
|   |   |     `-IntegerLiteral 0x250256e6ee8 <col:19> 'int' 0
|   |   |-BreakStmt 0x250256e6f88 <line:394:9>
|   |   |-DefaultStmt 0x250256e7038 <line:395:5, col:12>
|   |   | `-NullStmt 0x250256e7030 <col:12>
|   |   `-BreakStmt 0x250256e7058 <line:397:9>
|   `-ReturnStmt 0x250256e7188 <line:399:5, col:12>
|     `-ImplicitCastExpr 0x250256e7170 <col:12> 'long' <LValueToRValue>
|       `-DeclRefExpr 0x250256e7150 <col:12> 'long' lvalue Var 0x250256e2060 'ret' 'long'
|-FunctionDecl 0x250256e73c8 <line:402:1, line:419:1> line:402:13 invalid ok_callback_ctrl 'long (int *, int, int *)' static
| |-ParmVarDecl 0x250256e7220 <col:30, col:35> col:35 invalid b 'int *'
| |-ParmVarDecl 0x250256e72a0 <col:38, col:42> col:42 used cmd 'int'
| |-ParmVarDecl 0x250256e7320 <col:47, col:60> col:60 invalid fp 'int *'
| `-CompoundStmt 0x250256e7908 <line:403:1, line:419:1>
|   |-DeclStmt 0x250256e7558 <line:404:5, col:17>
|   | `-VarDecl 0x250256e74b0 <col:5, col:16> col:10 used ret 'long' cinit
|   |   `-ImplicitCastExpr 0x250256e7540 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x250256e7518 <col:16> 'int' 1
|   |-IfStmt 0x250256e7680 <line:409:5, line:410:16>
|   | |-OpaqueValueExpr 0x250256e7668 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x250256e7658 <col:9, col:16>
|   |   `-ImplicitCastExpr 0x250256e7640 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x250256e7618 <col:16> 'int' 0
|   |-SwitchStmt 0x250256e76e8 <line:412:5, line:416:5>
|   | |-ImplicitCastExpr 0x250256e76d0 <line:412:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x250256e7698 <col:13> 'int' lvalue ParmVar 0x250256e72a0 'cmd' 'int'
|   | `-CompoundStmt 0x250256e78a0 <col:18, line:416:5>
|   |   |-DefaultStmt 0x250256e7878 <line:413:5, col:12>
|   |   | `-NullStmt 0x250256e7870 <col:12>
|   |   `-BreakStmt 0x250256e7898 <line:415:9>
|   `-ReturnStmt 0x250256e78f8 <line:418:5, col:12>
|     `-ImplicitCastExpr 0x250256e78e0 <col:12> 'long' <LValueToRValue>
|       `-DeclRefExpr 0x250256e78c0 <col:12> 'long' lvalue Var 0x250256e74b0 'ret' 'long'
|-FunctionDecl 0x250256e7b08 <line:421:1, line:439:1> line:421:13 used longswap 'void (void *, size_t)' static
| |-ParmVarDecl 0x250256e7950 <col:22, col:28> col:28 used _ptr 'void *'
| |-ParmVarDecl 0x250256e79c8 <col:34, col:41> col:41 used len 'size_t':'unsigned long long'
| `-CompoundStmt 0x250256e2a80 <line:422:1, line:439:1>
|   |-DeclStmt 0x250256e7f28 <line:423:5, line:428:6>
|   | |-RecordDecl 0x250256e7bd0 <line:423:11, line:426:5> line:423:11 union definition
|   | | |-FieldDecl 0x250256e7ca8 <line:424:9, col:14> col:14 one 'long'
|   | | `-FieldDecl 0x250256e7d10 <line:425:9, col:14> col:14 referenced little 'char'
|   | `-VarDecl 0x250256e7dc8 <line:423:5, line:428:5> line:426:7 used is_endian 'const union (anonymous union at .//openssl//file_jk/before\crypto\evp\bio_ok.c:423:11)':'const union (anonymous at .//openssl//file_jk/before\crypto\evp\bio_ok.c:423:11)' cinit
|   |   `-InitListExpr 0x250256e7eb0 <col:19, line:428:5> 'union (anonymous union at .//openssl//file_jk/before\crypto\evp\bio_ok.c:423:11)':'union (anonymous at .//openssl//file_jk/before\crypto\evp\bio_ok.c:423:11)' field Field 0x250256e7ca8 'one' 'long'
|   |     `-ImplicitCastExpr 0x250256e7ef8 <line:427:9> 'long' <IntegralCast>
|   |       `-IntegerLiteral 0x250256e7e30 <col:9> 'int' 1
|   `-IfStmt 0x250256e2a68 <line:430:5, line:438:5>
|     |-ImplicitCastExpr 0x250256e7fa8 <line:430:9, col:19> 'char' <LValueToRValue>
|     | `-MemberExpr 0x250256e7f78 <col:9, col:19> 'const char' lvalue .little 0x250256e7d10
|     |   `-DeclRefExpr 0x250256e7f40 <col:9> 'const union (anonymous union at .//openssl//file_jk/before\crypto\evp\bio_ok.c:423:11)':'const union (anonymous at .//openssl//file_jk/before\crypto\evp\bio_ok.c:423:11)' lvalue Var 0x250256e7dc8 'is_endian' 'const union (anonymous union at .//openssl//file_jk/before\crypto\evp\bio_ok.c:423:11)':'const union (anonymous at .//openssl//file_jk/before\crypto\evp\bio_ok.c:423:11)'
|     `-CompoundStmt 0x250256e2a40 <col:27, line:438:5>
|       |-DeclStmt 0x250256e8038 <line:431:9, col:17>
|       | `-VarDecl 0x250256e7fd0 <col:9, col:16> col:16 used i 'size_t':'unsigned long long'
|       |-DeclStmt 0x250256e81e0 <line:432:9, col:35>
|       | |-VarDecl 0x250256e8090 <col:9, col:28> col:24 used p 'unsigned char *' cinit
|       | | `-ImplicitCastExpr 0x250256e8130 <col:28> 'unsigned char *' <BitCast>
|       | |   `-ImplicitCastExpr 0x250256e8118 <col:28> 'void *' <LValueToRValue>
|       | |     `-DeclRefExpr 0x250256e80f8 <col:28> 'void *' lvalue ParmVar 0x250256e7950 '_ptr' 'void *'
|       | `-VarDecl 0x250256e8160 <col:9, col:34> col:34 used c 'unsigned char'
|       `-ForStmt 0x250256e2a08 <line:434:9, line:437:9>
|         |-BinaryOperator 0x250256e2228 <line:434:14, col:18> 'size_t':'unsigned long long' '='
|         | |-DeclRefExpr 0x250256e81f8 <col:14> 'size_t':'unsigned long long' lvalue Var 0x250256e7fd0 'i' 'size_t':'unsigned long long'
|         | `-ImplicitCastExpr 0x250256e2210 <col:18> 'size_t':'unsigned long long' <IntegralCast>
|         |   `-IntegerLiteral 0x250256e21e8 <col:18> 'int' 0
|         |-<<<NULL>>>
|         |-BinaryOperator 0x250256e22b8 <col:21, col:25> 'int' '<'
|         | |-ImplicitCastExpr 0x250256e2288 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|         | | `-DeclRefExpr 0x250256e2248 <col:21> 'size_t':'unsigned long long' lvalue Var 0x250256e7fd0 'i' 'size_t':'unsigned long long'
|         | `-ImplicitCastExpr 0x250256e22a0 <col:25> 'size_t':'unsigned long long' <LValueToRValue>
|         |   `-DeclRefExpr 0x250256e2268 <col:25> 'size_t':'unsigned long long' lvalue ParmVar 0x250256e79c8 'len' 'size_t':'unsigned long long'
|         |-CompoundAssignOperator 0x250256e2338 <col:30, col:35> 'size_t':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|         | |-DeclRefExpr 0x250256e22d8 <col:30> 'size_t':'unsigned long long' lvalue Var 0x250256e7fd0 'i' 'size_t':'unsigned long long'
|         | `-ImplicitCastExpr 0x250256e2320 <col:35> 'unsigned long long' <IntegralCast>
|         |   `-IntegerLiteral 0x250256e22f8 <col:35> 'int' 4
|         `-CompoundStmt 0x250256e29e8 <col:38, line:437:9>
|           |-BinaryOperator 0x250256e26a0 <line:435:13, col:43> 'unsigned char' ','
|           | |-BinaryOperator 0x250256e25a8 <col:13, col:33> 'unsigned char' ','
|           | | |-BinaryOperator 0x250256e2450 <col:13, col:20> 'unsigned char' '='
|           | | | |-DeclRefExpr 0x250256e2368 <col:13> 'unsigned char' lvalue Var 0x250256e8160 'c' 'unsigned char'
|           | | | `-ImplicitCastExpr 0x250256e2438 <col:17, col:20> 'unsigned char' <LValueToRValue>
|           | | |   `-ArraySubscriptExpr 0x250256e2418 <col:17, col:20> 'unsigned char' lvalue
|           | | |     |-ImplicitCastExpr 0x250256e2400 <col:17> 'unsigned char *' <LValueToRValue>
|           | | |     | `-DeclRefExpr 0x250256e23a0 <col:17> 'unsigned char *' lvalue Var 0x250256e8090 'p' 'unsigned char *'
|           | | |     `-IntegerLiteral 0x250256e23d8 <col:19> 'int' 0
|           | | `-BinaryOperator 0x250256e2588 <col:23, col:33> 'unsigned char' '='
|           | |   |-ArraySubscriptExpr 0x250256e24d0 <col:23, col:26> 'unsigned char' lvalue
|           | |   | |-ImplicitCastExpr 0x250256e24b8 <col:23> 'unsigned char *' <LValueToRValue>
|           | |   | | `-DeclRefExpr 0x250256e2470 <col:23> 'unsigned char *' lvalue Var 0x250256e8090 'p' 'unsigned char *'
|           | |   | `-IntegerLiteral 0x250256e2490 <col:25> 'int' 0
|           | |   `-ImplicitCastExpr 0x250256e2570 <col:30, col:33> 'unsigned char' <LValueToRValue>
|           | |     `-ArraySubscriptExpr 0x250256e2550 <col:30, col:33> 'unsigned char' lvalue
|           | |       |-ImplicitCastExpr 0x250256e2538 <col:30> 'unsigned char *' <LValueToRValue>
|           | |       | `-DeclRefExpr 0x250256e24f0 <col:30> 'unsigned char *' lvalue Var 0x250256e8090 'p' 'unsigned char *'
|           | |       `-IntegerLiteral 0x250256e2510 <col:32> 'int' 3
|           | `-BinaryOperator 0x250256e2680 <col:36, col:43> 'unsigned char' '='
|           |   |-ArraySubscriptExpr 0x250256e2628 <col:36, col:39> 'unsigned char' lvalue
|           |   | |-ImplicitCastExpr 0x250256e2610 <col:36> 'unsigned char *' <LValueToRValue>
|           |   | | `-DeclRefExpr 0x250256e25c8 <col:36> 'unsigned char *' lvalue Var 0x250256e8090 'p' 'unsigned char *'
|           |   | `-IntegerLiteral 0x250256e25e8 <col:38> 'int' 3
|           |   `-ImplicitCastExpr 0x250256e2668 <col:43> 'unsigned char' <LValueToRValue>
|           |     `-DeclRefExpr 0x250256e2648 <col:43> 'unsigned char' lvalue Var 0x250256e8160 'c' 'unsigned char'
|           `-BinaryOperator 0x250256e29c8 <line:436:13, col:43> 'unsigned char' ','
|             |-BinaryOperator 0x250256e28d0 <col:13, col:33> 'unsigned char' ','
|             | |-BinaryOperator 0x250256e2778 <col:13, col:20> 'unsigned char' '='
|             | | |-DeclRefExpr 0x250256e26c0 <col:13> 'unsigned char' lvalue Var 0x250256e8160 'c' 'unsigned char'
|             | | `-ImplicitCastExpr 0x250256e2760 <col:17, col:20> 'unsigned char' <LValueToRValue>
|             | |   `-ArraySubscriptExpr 0x250256e2740 <col:17, col:20> 'unsigned char' lvalue
|             | |     |-ImplicitCastExpr 0x250256e2728 <col:17> 'unsigned char *' <LValueToRValue>
|             | |     | `-DeclRefExpr 0x250256e26e0 <col:17> 'unsigned char *' lvalue Var 0x250256e8090 'p' 'unsigned char *'
|             | |     `-IntegerLiteral 0x250256e2700 <col:19> 'int' 1
|             | `-BinaryOperator 0x250256e28b0 <col:23, col:33> 'unsigned char' '='
|             |   |-ArraySubscriptExpr 0x250256e27f8 <col:23, col:26> 'unsigned char' lvalue
|             |   | |-ImplicitCastExpr 0x250256e27e0 <col:23> 'unsigned char *' <LValueToRValue>
|             |   | | `-DeclRefExpr 0x250256e2798 <col:23> 'unsigned char *' lvalue Var 0x250256e8090 'p' 'unsigned char *'
|             |   | `-IntegerLiteral 0x250256e27b8 <col:25> 'int' 1
|             |   `-ImplicitCastExpr 0x250256e2898 <col:30, col:33> 'unsigned char' <LValueToRValue>
|             |     `-ArraySubscriptExpr 0x250256e2878 <col:30, col:33> 'unsigned char' lvalue
|             |       |-ImplicitCastExpr 0x250256e2860 <col:30> 'unsigned char *' <LValueToRValue>
|             |       | `-DeclRefExpr 0x250256e2818 <col:30> 'unsigned char *' lvalue Var 0x250256e8090 'p' 'unsigned char *'
|             |       `-IntegerLiteral 0x250256e2838 <col:32> 'int' 2
|             `-BinaryOperator 0x250256e29a8 <col:36, col:43> 'unsigned char' '='
|               |-ArraySubscriptExpr 0x250256e2950 <col:36, col:39> 'unsigned char' lvalue
|               | |-ImplicitCastExpr 0x250256e2938 <col:36> 'unsigned char *' <LValueToRValue>
|               | | `-DeclRefExpr 0x250256e28f0 <col:36> 'unsigned char *' lvalue Var 0x250256e8090 'p' 'unsigned char *'
|               | `-IntegerLiteral 0x250256e2910 <col:38> 'int' 2
|               `-ImplicitCastExpr 0x250256e2990 <col:43> 'unsigned char' <LValueToRValue>
|                 `-DeclRefExpr 0x250256e2970 <col:43> 'unsigned char' lvalue Var 0x250256e8160 'c' 'unsigned char'
|-FunctionDecl 0x250256e2b50 <line:441:1, line:481:1> line:441:12 invalid sig_out 'int (int *)' static
| |-ParmVarDecl 0x250256e2ab8 <col:20, col:25> col:25 invalid b 'int *'
| `-CompoundStmt 0x250256e8488 <line:442:1, line:481:1>
|   |-DeclStmt 0x250256e2c88 <line:443:5, col:20>
|   | `-VarDecl 0x250256e2c20 <col:5, col:17> col:17 used ctx 'BIO_OK_CTX *'
|   |-DeclStmt 0x250256e2d20 <line:445:5, col:25>
|   | `-VarDecl 0x250256e2cb8 <col:5, col:19> col:19 invalid digest 'const int *'
|   |-DeclStmt 0x250256e2db8 <line:446:5, col:16>
|   | `-VarDecl 0x250256e2d50 <col:5, col:9> col:9 used md_size 'int'
|   |-DeclStmt 0x250256e2e50 <line:447:5, col:18>
|   | `-VarDecl 0x250256e2de8 <col:5, col:11> col:11 used md_data 'void *'
|   |-IfStmt 0x250256ea468 <line:455:5, line:456:16>
|   | |-BinaryOperator 0x250256ea410 <line:455:9, line:92:32> 'int' '>'
|   | | |-BinaryOperator 0x250256ea348 <line:455:9, col:28> 'unsigned long long' '+'
|   | | | |-ImplicitCastExpr 0x250256ea318 <col:9, col:14> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | | `-MemberExpr 0x250256ea268 <col:9, col:14> 'size_t':'unsigned long long' lvalue ->buf_len 0x250256da6d0
|   | | | |   `-ImplicitCastExpr 0x250256ea250 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   | | | |     `-DeclRefExpr 0x250256e31a8 <col:9> 'BIO_OK_CTX *' lvalue Var 0x250256e2c20 'ctx' 'BIO_OK_CTX *'
|   | | | `-ImplicitCastExpr 0x250256ea330 <col:24, col:28> 'unsigned long long' <IntegralCast>
|   | | |   `-BinaryOperator 0x250256ea2f8 <col:24, col:28> 'int' '*'
|   | | |     |-IntegerLiteral 0x250256ea298 <col:24> 'int' 2
|   | | |     `-ImplicitCastExpr 0x250256ea2e0 <col:28> 'int' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x250256ea2c0 <col:28> 'int' lvalue Var 0x250256e2d50 'md_size' 'int'
|   | | `-ImplicitCastExpr 0x250256ea3f8 <line:92:25, col:32> 'unsigned long long' <IntegralCast>
|   | |   `-ParenExpr 0x250256ea3d8 <col:25, col:32> 'int'
|   | |     `-BinaryOperator 0x250256ea3b8 <col:26, col:31> 'int' '*'
|   | |       |-IntegerLiteral 0x250256ea368 <col:26> 'int' 1024
|   | |       `-IntegerLiteral 0x250256ea390 <col:31> 'int' 4
|   | `-ReturnStmt 0x250256ea458 <line:456:9, col:16>
|   |   `-IntegerLiteral 0x250256ea430 <col:16> 'int' 1
|   |-IfStmt 0x250256ea5a8 <line:458:5, line:459:14>
|   | |-OpaqueValueExpr 0x250256ea590 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x250256ea578 <col:9, col:14> 'berr' 0x250256ea528
|   |-IfStmt 0x250256ea7e8 <line:464:5, line:465:14>
|   | |-BinaryOperator 0x250256ea7b0 <line:464:9, col:41> 'int' '<='
|   | | |-CallExpr 0x250256ea728 <col:9, col:36> 'int'
|   | | | |-ImplicitCastExpr 0x250256ea710 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x250256ea6b0 <col:9> 'int ()' Function 0x250256ea5e8 'RAND_bytes' 'int ()'
|   | | | |-ImplicitCastExpr 0x250256ea758 <col:20> 'void *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x250256ea6d0 <col:20> 'void *' lvalue Var 0x250256e2de8 'md_data' 'void *'
|   | | | `-ImplicitCastExpr 0x250256ea770 <col:29> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x250256ea6f0 <col:29> 'int' lvalue Var 0x250256e2d50 'md_size' 'int'
|   | | `-IntegerLiteral 0x250256ea788 <col:41> 'int' 0
|   | `-GotoStmt 0x250256ea7d0 <line:465:9, col:14> 'berr' 0x250256ea528
|   |-CompoundAssignOperator 0x250256eaa98 <line:468:5, col:21> 'size_t':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |-MemberExpr 0x250256eaa18 <col:5, col:10> 'size_t':'unsigned long long' lvalue ->buf_len 0x250256da6d0
|   | | `-ImplicitCastExpr 0x250256eaa00 <col:5> 'BIO_OK_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x250256ea9e0 <col:5> 'BIO_OK_CTX *' lvalue Var 0x250256e2c20 'ctx' 'BIO_OK_CTX *'
|   | `-ImplicitCastExpr 0x250256eaa80 <col:21> 'unsigned long long' <IntegralCast>
|   |   `-ImplicitCastExpr 0x250256eaa68 <col:21> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x250256eaa48 <col:21> 'int' lvalue Var 0x250256e2d50 'md_size' 'int'
|   |-IfStmt 0x250256eaf18 <line:470:5, line:471:14>
|   | |-OpaqueValueExpr 0x250256eaf00 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x250256eaee8 <col:9, col:14> 'berr' 0x250256ea528
|   |-IfStmt 0x250256eb198 <line:472:5, line:473:14>
|   | |-OpaqueValueExpr 0x250256eb180 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x250256eb168 <col:9, col:14> 'berr' 0x250256ea528
|   |-CompoundAssignOperator 0x250256e8248 <line:474:5, col:21> 'size_t':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |-MemberExpr 0x250256eb1e8 <col:5, col:10> 'size_t':'unsigned long long' lvalue ->buf_len 0x250256da6d0
|   | | `-ImplicitCastExpr 0x250256eb1d0 <col:5> 'BIO_OK_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x250256eb1b0 <col:5> 'BIO_OK_CTX *' lvalue Var 0x250256e2c20 'ctx' 'BIO_OK_CTX *'
|   | `-ImplicitCastExpr 0x250256e8230 <col:21> 'unsigned long long' <IntegralCast>
|   |   `-ImplicitCastExpr 0x250256eb238 <col:21> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x250256eb218 <col:21> 'int' lvalue Var 0x250256e2d50 'md_size' 'int'
|   |-BinaryOperator 0x250256e8308 <line:475:5, col:21> 'int' '='
|   | |-MemberExpr 0x250256e82b0 <col:5, col:10> 'int' lvalue ->blockout 0x250256da9c8
|   | | `-ImplicitCastExpr 0x250256e8298 <col:5> 'BIO_OK_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x250256e8278 <col:5> 'BIO_OK_CTX *' lvalue Var 0x250256e2c20 'ctx' 'BIO_OK_CTX *'
|   | `-IntegerLiteral 0x250256e82e0 <col:21> 'int' 1
|   |-BinaryOperator 0x250256e83b8 <line:476:5, col:18> 'int' '='
|   | |-MemberExpr 0x250256e8360 <col:5, col:10> 'int' lvalue ->sigio 0x250256daa38
|   | | `-ImplicitCastExpr 0x250256e8348 <col:5> 'BIO_OK_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x250256e8328 <col:5> 'BIO_OK_CTX *' lvalue Var 0x250256e2c20 'ctx' 'BIO_OK_CTX *'
|   | `-IntegerLiteral 0x250256e8390 <col:18> 'int' 0
|   |-ReturnStmt 0x250256e8400 <line:477:5, col:12>
|   | `-IntegerLiteral 0x250256e83d8 <col:12> 'int' 1
|   |-LabelStmt 0x250256e8438 <line:478:2, col:6> 'berr'
|   | `-NullStmt 0x250256e8430 <col:6>
|   `-ReturnStmt 0x250256e8478 <line:480:5, col:12>
|     `-IntegerLiteral 0x250256e8450 <col:12> 'int' 0
|-FunctionDecl 0x250256eaca0 <line:470:42> col:42 implicit used strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x250256ead40 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x250256e85c8 <line:483:1, line:529:1> line:483:12 invalid sig_in 'int (int *)' static
| |-ParmVarDecl 0x250256e8530 <col:19, col:24> col:24 invalid b 'int *'
| `-CompoundStmt 0x250256e5200 <line:484:1, line:529:1>
|   |-DeclStmt 0x250256e8700 <line:485:5, col:20>
|   | `-VarDecl 0x250256e8698 <col:5, col:17> col:17 used ctx 'BIO_OK_CTX *'
|   |-DeclStmt 0x250256e8798 <line:487:5, col:39>
|   | `-VarDecl 0x250256e8730 <col:5, col:19> col:19 invalid tmp 'unsigned char'
|   |-DeclStmt 0x250256e8858 <line:488:5, col:16>
|   | `-VarDecl 0x250256e87c8 <col:5, col:15> col:9 used ret 'int' cinit
|   |   `-IntegerLiteral 0x250256e8830 <col:15> 'int' 0
|   |-DeclStmt 0x250256e88f0 <line:489:5, col:25>
|   | `-VarDecl 0x250256e8888 <col:5, col:19> col:19 invalid digest 'const int *'
|   |-DeclStmt 0x250256e8988 <line:490:5, col:16>
|   | `-VarDecl 0x250256e8920 <col:5, col:9> col:9 used md_size 'int'
|   |-DeclStmt 0x250256e8a20 <line:491:5, col:18>
|   | `-VarDecl 0x250256e89b8 <col:5, col:11> col:11 used md_data 'void *'
|   |-IfStmt 0x250256e8e10 <line:499:5, line:500:16>
|   | |-BinaryOperator 0x250256e8db8 <line:499:9, col:50> 'int' '<'
|   | | |-CStyleCastExpr 0x250256e8d10 <col:9, col:42> 'int' <IntegralCast>
|   | | | `-ParenExpr 0x250256e8cf0 <col:14, col:42> 'unsigned long long'
|   | | |   `-BinaryOperator 0x250256e8c98 <col:15, col:35> 'unsigned long long' '-'
|   | | |     |-ImplicitCastExpr 0x250256e8c68 <col:15, col:20> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |     | `-MemberExpr 0x250256e8bd0 <col:15, col:20> 'size_t':'unsigned long long' lvalue ->buf_len 0x250256da6d0
|   | | |     |   `-ImplicitCastExpr 0x250256e8bb8 <col:15> 'BIO_OK_CTX *' <LValueToRValue>
|   | | |     |     `-DeclRefExpr 0x250256e8b98 <col:15> 'BIO_OK_CTX *' lvalue Var 0x250256e8698 'ctx' 'BIO_OK_CTX *'
|   | | |     `-ImplicitCastExpr 0x250256e8c80 <col:30, col:35> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |       `-MemberExpr 0x250256e8c38 <col:30, col:35> 'size_t':'unsigned long long' lvalue ->buf_off 0x250256da738
|   | | |         `-ImplicitCastExpr 0x250256e8c20 <col:30> 'BIO_OK_CTX *' <LValueToRValue>
|   | | |           `-DeclRefExpr 0x250256e8c00 <col:30> 'BIO_OK_CTX *' lvalue Var 0x250256e8698 'ctx' 'BIO_OK_CTX *'
|   | | `-BinaryOperator 0x250256e8d98 <col:46, col:50> 'int' '*'
|   | |   |-IntegerLiteral 0x250256e8d38 <col:46> 'int' 2
|   | |   `-ImplicitCastExpr 0x250256e8d80 <col:50> 'int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x250256e8d60 <col:50> 'int' lvalue Var 0x250256e8920 'md_size' 'int'
|   | `-ReturnStmt 0x250256e8e00 <line:500:9, col:16>
|   |   `-IntegerLiteral 0x250256e8dd8 <col:16> 'int' 1
|   |-IfStmt 0x250256e8f50 <line:502:5, line:503:14>
|   | |-OpaqueValueExpr 0x250256e8f38 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x250256e8f20 <col:9, col:14> 'berr' 0x250256e8ed0
|   |-CallExpr 0x250256e9140 <line:505:5, col:30> 'void'
|   | |-ImplicitCastExpr 0x250256e9128 <col:5> 'void (*)(void *, size_t)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x250256e9068 <col:5> 'void (void *, size_t)' Function 0x250256e7b08 'longswap' 'void (void *, size_t)'
|   | |-ImplicitCastExpr 0x250256e9170 <col:14> 'void *' <LValueToRValue>
|   | | `-DeclRefExpr 0x250256e9088 <col:14> 'void *' lvalue Var 0x250256e89b8 'md_data' 'void *'
|   | `-ImplicitCastExpr 0x250256e91a0 <col:23> 'size_t':'unsigned long long' <IntegralCast>
|   |   `-ImplicitCastExpr 0x250256e9188 <col:23> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x250256e90a8 <col:23> 'int' lvalue Var 0x250256e8920 'md_size' 'int'
|   |-CompoundAssignOperator 0x250256e9290 <line:506:5, col:21> 'size_t':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |-MemberExpr 0x250256e91f0 <col:5, col:10> 'size_t':'unsigned long long' lvalue ->buf_off 0x250256da738
|   | | `-ImplicitCastExpr 0x250256e91d8 <col:5> 'BIO_OK_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x250256e91b8 <col:5> 'BIO_OK_CTX *' lvalue Var 0x250256e8698 'ctx' 'BIO_OK_CTX *'
|   | `-ImplicitCastExpr 0x250256e9278 <col:21> 'unsigned long long' <IntegralCast>
|   |   `-ImplicitCastExpr 0x250256e9260 <col:21> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x250256e9240 <col:21> 'int' lvalue Var 0x250256e8920 'md_size' 'int'
|   |-IfStmt 0x250256e9458 <line:508:5, line:509:14>
|   | |-OpaqueValueExpr 0x250256e9440 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x250256e9428 <col:9, col:14> 'berr' 0x250256e8ed0
|   |-IfStmt 0x250256e9548 <line:510:5, line:511:14>
|   | |-OpaqueValueExpr 0x250256e9530 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x250256e9518 <col:9, col:14> 'berr' 0x250256e8ed0
|   |-CompoundAssignOperator 0x250256e99a8 <line:513:5, col:21> 'size_t':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |-MemberExpr 0x250256e9928 <col:5, col:10> 'size_t':'unsigned long long' lvalue ->buf_off 0x250256da738
|   | | `-ImplicitCastExpr 0x250256e9910 <col:5> 'BIO_OK_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x250256e98f0 <col:5> 'BIO_OK_CTX *' lvalue Var 0x250256e8698 'ctx' 'BIO_OK_CTX *'
|   | `-ImplicitCastExpr 0x250256e9990 <col:21> 'unsigned long long' <IntegralCast>
|   |   `-ImplicitCastExpr 0x250256e9978 <col:21> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x250256e9958 <col:21> 'int' lvalue Var 0x250256e8920 'md_size' 'int'
|   |-IfStmt 0x250256ea140 <line:514:5, line:524:5> has_else
|   | |-BinaryOperator 0x250256e9a38 <line:514:9, col:16> 'int' '=='
|   | | |-ImplicitCastExpr 0x250256e9a20 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x250256e99d8 <col:9> 'int' lvalue Var 0x250256e87c8 'ret' 'int'
|   | | `-IntegerLiteral 0x250256e99f8 <col:16> 'int' 1
|   | |-CompoundStmt 0x250256ea048 <col:19, line:522:5>
|   | | |-BinaryOperator 0x250256e9ae8 <line:515:9, col:22> 'int' '='
|   | | | |-MemberExpr 0x250256e9a90 <col:9, col:14> 'int' lvalue ->sigio 0x250256daa38
|   | | | | `-ImplicitCastExpr 0x250256e9a78 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x250256e9a58 <col:9> 'BIO_OK_CTX *' lvalue Var 0x250256e8698 'ctx' 'BIO_OK_CTX *'
|   | | | `-IntegerLiteral 0x250256e9ac0 <col:22> 'int' 0
|   | | |-IfStmt 0x250256e9e50 <line:516:9, line:519:9>
|   | | | |-BinaryOperator 0x250256e9c08 <line:516:13, col:34> 'int' '!='
|   | | | | |-ImplicitCastExpr 0x250256e9bd8 <col:13, col:18> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | | | `-MemberExpr 0x250256e9b40 <col:13, col:18> 'size_t':'unsigned long long' lvalue ->buf_len 0x250256da6d0
|   | | | | |   `-ImplicitCastExpr 0x250256e9b28 <col:13> 'BIO_OK_CTX *' <LValueToRValue>
|   | | | | |     `-DeclRefExpr 0x250256e9b08 <col:13> 'BIO_OK_CTX *' lvalue Var 0x250256e8698 'ctx' 'BIO_OK_CTX *'
|   | | | | `-ImplicitCastExpr 0x250256e9bf0 <col:29, col:34> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | |   `-MemberExpr 0x250256e9ba8 <col:29, col:34> 'size_t':'unsigned long long' lvalue ->buf_off 0x250256da738
|   | | | |     `-ImplicitCastExpr 0x250256e9b90 <col:29> 'BIO_OK_CTX *' <LValueToRValue>
|   | | | |       `-DeclRefExpr 0x250256e9b70 <col:29> 'BIO_OK_CTX *' lvalue Var 0x250256e8698 'ctx' 'BIO_OK_CTX *'
|   | | | `-CompoundStmt 0x250256e9e40 <col:43, line:519:9>
|   | | |-CompoundAssignOperator 0x250256e9f50 <line:520:9, col:30> 'size_t':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | | | |-MemberExpr 0x250256e9ea0 <col:9, col:14> 'size_t':'unsigned long long' lvalue ->buf_len 0x250256da6d0
|   | | | | `-ImplicitCastExpr 0x250256e9e88 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x250256e9e68 <col:9> 'BIO_OK_CTX *' lvalue Var 0x250256e8698 'ctx' 'BIO_OK_CTX *'
|   | | | `-ImplicitCastExpr 0x250256e9f38 <col:25, col:30> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |   `-MemberExpr 0x250256e9f08 <col:25, col:30> 'size_t':'unsigned long long' lvalue ->buf_off 0x250256da738
|   | | |     `-ImplicitCastExpr 0x250256e9ef0 <col:25> 'BIO_OK_CTX *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x250256e9ed0 <col:25> 'BIO_OK_CTX *' lvalue Var 0x250256e8698 'ctx' 'BIO_OK_CTX *'
|   | | `-BinaryOperator 0x250256ea028 <line:521:9, col:24> 'size_t':'unsigned long long' '='
|   | |   |-MemberExpr 0x250256e9fb8 <col:9, col:14> 'size_t':'unsigned long long' lvalue ->buf_off 0x250256da738
|   | |   | `-ImplicitCastExpr 0x250256e9fa0 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x250256e9f80 <col:9> 'BIO_OK_CTX *' lvalue Var 0x250256e8698 'ctx' 'BIO_OK_CTX *'
|   | |   `-ImplicitCastExpr 0x250256ea010 <col:24> 'size_t':'unsigned long long' <IntegralCast>
|   | |     `-IntegerLiteral 0x250256e9fe8 <col:24> 'int' 0
|   | `-CompoundStmt 0x250256ea128 <line:522:12, line:524:5>
|   |   `-BinaryOperator 0x250256ea108 <line:523:9, col:21> 'int' '='
|   |     |-MemberExpr 0x250256ea0b0 <col:9, col:14> 'int' lvalue ->cont 0x250256da878
|   |     | `-ImplicitCastExpr 0x250256ea098 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x250256ea078 <col:9> 'BIO_OK_CTX *' lvalue Var 0x250256e8698 'ctx' 'BIO_OK_CTX *'
|   |     `-IntegerLiteral 0x250256ea0e0 <col:21> 'int' 0
|   |-ReturnStmt 0x250256ea190 <line:525:5, col:12>
|   | `-IntegerLiteral 0x250256ea168 <col:12> 'int' 1
|   |-LabelStmt 0x250256ea1c8 <line:526:2, col:6> 'berr'
|   | `-NullStmt 0x250256ea1c0 <col:6>
|   `-ReturnStmt 0x250256ea208 <line:528:5, col:12>
|     `-IntegerLiteral 0x250256ea1e0 <col:12> 'int' 0
|-FunctionDecl 0x250256e95e0 <line:512:11> col:11 implicit used memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x250256e9680 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x250256e96e8 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x250256e9750 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x250256e5348 <line:531:1, line:560:1> line:531:12 invalid block_out 'int (int *)' static
| |-ParmVarDecl 0x250256e52b0 <col:22, col:27> col:27 invalid b 'int *'
| `-CompoundStmt 0x250256eb388 <line:532:1, line:560:1>
|   |-DeclStmt 0x250256e5480 <line:533:5, col:20>
|   | `-VarDecl 0x250256e5418 <col:5, col:17> col:17 used ctx 'BIO_OK_CTX *'
|   |-DeclStmt 0x250256e5518 <line:535:5, col:21>
|   | `-VarDecl 0x250256e54b0 <col:5, col:19> col:19 used tl 'unsigned long'
|   |-DeclStmt 0x250256e55b0 <line:536:5, col:25>
|   | `-VarDecl 0x250256e5548 <col:5, col:19> col:19 invalid digest 'const int *'
|   |-DeclStmt 0x250256e5648 <line:537:5, col:16>
|   | `-VarDecl 0x250256e55e0 <col:5, col:9> col:9 used md_size 'int'
|   |-BinaryOperator 0x250256e5898 <line:544:5, line:93:25> 'unsigned long' '='
|   | |-DeclRefExpr 0x250256e5768 <line:544:5> 'unsigned long' lvalue Var 0x250256e54b0 'tl' 'unsigned long'
|   | `-ImplicitCastExpr 0x250256e5880 <col:10, line:93:25> 'unsigned long' <IntegralCast>
|   |   `-BinaryOperator 0x250256e5860 <line:544:10, line:93:25> 'unsigned long long' '-'
|   |     |-ImplicitCastExpr 0x250256e5830 <line:544:10, col:15> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | `-MemberExpr 0x250256e57d8 <col:10, col:15> 'size_t':'unsigned long long' lvalue ->buf_len 0x250256da6d0
|   |     |   `-ImplicitCastExpr 0x250256e57c0 <col:10> 'BIO_OK_CTX *' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x250256e57a0 <col:10> 'BIO_OK_CTX *' lvalue Var 0x250256e5418 'ctx' 'BIO_OK_CTX *'
|   |     `-ImplicitCastExpr 0x250256e5848 <line:93:25> 'unsigned long long' <IntegralCast>
|   |       `-IntegerLiteral 0x250256e5808 <col:25> 'int' 4
|   |-IfStmt 0x250256e5f10 <line:549:5, line:551:14>
|   | |-OpaqueValueExpr 0x250256e5ef8 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x250256e5ee0 <col:9, col:14> 'berr' 0x250256e5e90
|   |-IfStmt 0x250256e60a0 <line:552:5, line:553:14>
|   | |-OpaqueValueExpr 0x250256e6088 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x250256e6070 <col:9, col:14> 'berr' 0x250256e5e90
|   |-CompoundAssignOperator 0x250256e6170 <line:554:5, col:21> 'size_t':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |-MemberExpr 0x250256e60f0 <col:5, col:10> 'size_t':'unsigned long long' lvalue ->buf_len 0x250256da6d0
|   | | `-ImplicitCastExpr 0x250256e60d8 <col:5> 'BIO_OK_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x250256e60b8 <col:5> 'BIO_OK_CTX *' lvalue Var 0x250256e5418 'ctx' 'BIO_OK_CTX *'
|   | `-ImplicitCastExpr 0x250256e6158 <col:21> 'unsigned long long' <IntegralCast>
|   |   `-ImplicitCastExpr 0x250256e6140 <col:21> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x250256e6120 <col:21> 'int' lvalue Var 0x250256e55e0 'md_size' 'int'
|   |-BinaryOperator 0x250256eb2b8 <line:555:5, col:21> 'int' '='
|   | |-MemberExpr 0x250256eb260 <col:5, col:10> 'int' lvalue ->blockout 0x250256da9c8
|   | | `-ImplicitCastExpr 0x250256e61c0 <col:5> 'BIO_OK_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x250256e61a0 <col:5> 'BIO_OK_CTX *' lvalue Var 0x250256e5418 'ctx' 'BIO_OK_CTX *'
|   | `-IntegerLiteral 0x250256eb290 <col:21> 'int' 1
|   |-ReturnStmt 0x250256eb300 <line:556:5, col:12>
|   | `-IntegerLiteral 0x250256eb2d8 <col:12> 'int' 1
|   |-LabelStmt 0x250256eb338 <line:557:2, col:6> 'berr'
|   | `-NullStmt 0x250256eb330 <col:6>
|   `-ReturnStmt 0x250256eb378 <line:559:5, col:12>
|     `-IntegerLiteral 0x250256eb350 <col:12> 'int' 0
`-FunctionDecl 0x250256eb4a8 <line:562:1, line:605:1> line:562:12 invalid block_in 'int (int *)' static
  |-ParmVarDecl 0x250256eb410 <col:21, col:26> col:26 invalid b 'int *'
  `-CompoundStmt 0x250256e4e28 <line:563:1, line:605:1>
    |-DeclStmt 0x250256eb5e0 <line:564:5, col:20>
    | `-VarDecl 0x250256eb578 <col:5, col:17> col:17 used ctx 'BIO_OK_CTX *'
    |-DeclStmt 0x250256eb6b8 <line:566:5, col:25>
    | `-VarDecl 0x250256eb610 <col:5, col:24> col:19 used tl 'unsigned long' cinit
    |   `-ImplicitCastExpr 0x250256eb6a0 <col:24> 'unsigned long' <IntegralCast>
    |     `-IntegerLiteral 0x250256eb678 <col:24> 'int' 0
    |-DeclStmt 0x250256eb750 <line:567:5, col:39>
    | `-VarDecl 0x250256eb6e8 <col:5, col:19> col:19 invalid tmp 'unsigned char'
    |-DeclStmt 0x250256eb7e8 <line:568:5, col:16>
    | `-VarDecl 0x250256eb780 <col:5, col:9> col:9 used md_size 'int'
    |-CStyleCastExpr 0x250256ebdc8 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:29, col:128> 'void' <ToVoid>
    | `-ParenExpr 0x250256ebda8 <col:35, col:128> 'int'
    |   `-BinaryOperator 0x250256ebd58 <col:37, col:126> 'int' '||'
    |     |-ParenExpr 0x250256eba18 <col:37, col:53> 'int'
    |     | `-UnaryOperator 0x250256eba00 <col:38, col:52> 'int' prefix '!' cannot overflow
    |     |   `-UnaryOperator 0x250256eb9e8 <col:39, col:52> 'int' prefix '!' cannot overflow
    |     |     `-ParenExpr 0x250256eb9c8 <col:40, col:52> 'int'
    |     |       `-BinaryOperator 0x250256eb9a8 <.//openssl//file_jk/before\crypto\evp\bio_ok.c:574:12, line:93:25> 'int' '>='
    |     |         |-UnaryExprOrTypeTraitExpr 0x250256eb948 <line:574:12, col:21> 'unsigned long long' sizeof
    |     |         | `-ParenExpr 0x250256eb928 <col:18, col:21> 'unsigned long' lvalue
    |     |         |   `-DeclRefExpr 0x250256eb908 <col:19> 'unsigned long' lvalue Var 0x250256eb610 'tl' 'unsigned long' non_odr_use_unevaluated
    |     |         `-ImplicitCastExpr 0x250256eb990 <line:93:25> 'unsigned long long' <IntegralCast>
    |     |           `-IntegerLiteral 0x250256eb968 <col:25> 'int' 4
    |     `-ParenExpr 0x250256ebd38 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:58, col:126> 'int'
    |       `-BinaryOperator 0x250256ebd18 <col:59, col:125> 'int' ','
    |         |-CallExpr 0x250256ebc40 <col:59, col:122> 'void'
    |         | |-ImplicitCastExpr 0x250256ebc28 <col:59> 'void (*)(const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))' <FunctionToPointerDecay>
    |         | | `-DeclRefExpr 0x250256eba38 <col:59> 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)' Function 0x250256d8130 '_wassert' 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
    |         | |-ImplicitCastExpr 0x250256ebc90 <<scratch space>:199:1> 'const wchar_t *' <NoOp>
    |         | | `-ImplicitCastExpr 0x250256ebc78 <col:1> 'unsigned short *' <ArrayToPointerDecay>
    |         | |   `-StringLiteral 0x250256eba98 <col:1> 'unsigned short [29]' lvalue L"sizeof(tl) >= OK_BLOCK_BLOCK"
    |         | |-ImplicitCastExpr 0x250256ebcc0 <line:201:1> 'const wchar_t *' <NoOp>
    |         | | `-ImplicitCastExpr 0x250256ebca8 <col:1> 'unsigned short *' <ArrayToPointerDecay>
    |         | |   `-StringLiteral 0x250256ebb28 <col:1> 'unsigned short [47]' lvalue L".//openssl//file_jk/before\\crypto\\evp\\bio_ok.c"
    |         | `-ImplicitCastExpr 0x250256ebcd8 <line:202:1> 'unsigned int' <IntegralCast>
    |         |   `-IntegerLiteral 0x250256ebba0 <col:1> 'int' 574
    |         `-IntegerLiteral 0x250256ebcf0 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:125> 'int' 0
    |-CompoundAssignOperator 0x250256ebee8 <.//openssl//file_jk/before\crypto\evp\bio_ok.c:576:5, col:12> 'unsigned long' '<<=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
    | |-DeclRefExpr 0x250256ebe88 <col:5> 'unsigned long' lvalue Var 0x250256eb610 'tl' 'unsigned long'
    | `-IntegerLiteral 0x250256ebea8 <col:12> 'int' 8
    |-CompoundAssignOperator 0x250256ebff8 <line:578:5, col:12> 'unsigned long' '<<=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
    | |-DeclRefExpr 0x250256ebf98 <col:5> 'unsigned long' lvalue Var 0x250256eb610 'tl' 'unsigned long'
    | `-IntegerLiteral 0x250256ebfb8 <col:12> 'int' 8
    |-CompoundAssignOperator 0x250256ec108 <line:580:5, col:12> 'unsigned long' '<<=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
    | |-DeclRefExpr 0x250256ec0a8 <col:5> 'unsigned long' lvalue Var 0x250256eb610 'tl' 'unsigned long'
    | `-IntegerLiteral 0x250256ec0c8 <col:12> 'int' 8
    |-IfStmt 0x250256e4360 <line:583:5, line:584:16>
    | |-BinaryOperator 0x250256e4308 <line:583:9, col:46> 'int' '<'
    | | |-ImplicitCastExpr 0x250256e42d8 <col:9, col:14> 'size_t':'unsigned long long' <LValueToRValue>
    | | | `-MemberExpr 0x250256ec1f0 <col:9, col:14> 'size_t':'unsigned long long' lvalue ->buf_len 0x250256da6d0
    | | |   `-ImplicitCastExpr 0x250256ec1d8 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
    | | |     `-DeclRefExpr 0x250256ec1b8 <col:9> 'BIO_OK_CTX *' lvalue Var 0x250256eb578 'ctx' 'BIO_OK_CTX *'
    | | `-ImplicitCastExpr 0x250256e42f0 <col:24, col:46> 'unsigned long long' <IntegralCast>
    | |   `-BinaryOperator 0x250256e42b8 <col:24, col:46> 'unsigned long' '+'
    | |     |-BinaryOperator 0x250256e4248 <col:24, line:93:25> 'unsigned long' '+'
    | |     | |-ImplicitCastExpr 0x250256e4218 <line:583:24> 'unsigned long' <LValueToRValue>
    | |     | | `-DeclRefExpr 0x250256ec220 <col:24> 'unsigned long' lvalue Var 0x250256eb610 'tl' 'unsigned long'
    | |     | `-ImplicitCastExpr 0x250256e4230 <line:93:25> 'unsigned long' <IntegralCast>
    | |     |   `-IntegerLiteral 0x250256e41f0 <col:25> 'int' 4
    | |     `-ImplicitCastExpr 0x250256e42a0 <line:583:46> 'unsigned long' <IntegralCast>
    | |       `-ImplicitCastExpr 0x250256e4288 <col:46> 'int' <LValueToRValue>
    | |         `-DeclRefExpr 0x250256e4268 <col:46> 'int' lvalue Var 0x250256eb780 'md_size' 'int'
    | `-ReturnStmt 0x250256e4350 <line:584:9, col:16>
    |   `-IntegerLiteral 0x250256e4328 <col:16> 'int' 1
    |-IfStmt 0x250256e4498 <line:586:5, line:588:14>
    | |-OpaqueValueExpr 0x250256e4480 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x250256e4468 <col:9, col:14> 'berr' 0x250256e4418
    |-IfStmt 0x250256e4588 <line:589:5, line:590:14>
    | |-OpaqueValueExpr 0x250256e4570 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x250256e4558 <col:9, col:14> 'berr' 0x250256e4418
    |-IfStmt 0x250256e4d50 <line:591:5, line:600:5> has_else
    | |-OpaqueValueExpr 0x250256e4d38 <<invalid sloc>> '_Bool'
    | |-CompoundStmt 0x250256e4c38 <line:591:70, line:598:5>
    | | |-BinaryOperator 0x250256e4860 <line:593:9, col:51> 'size_t':'unsigned long long' '='
    | | | |-MemberExpr 0x250256e4710 <col:9, col:14> 'size_t':'unsigned long long' lvalue ->buf_off_save 0x250256da808
    | | | | `-ImplicitCastExpr 0x250256e46f8 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
    | | | |   `-DeclRefExpr 0x250256e46d8 <col:9> 'BIO_OK_CTX *' lvalue Var 0x250256eb578 'ctx' 'BIO_OK_CTX *'
    | | | `-ImplicitCastExpr 0x250256e4848 <col:29, col:51> 'size_t':'unsigned long long' <IntegralCast>
    | | |   `-BinaryOperator 0x250256e4828 <col:29, col:51> 'unsigned long' '+'
    | | |     |-BinaryOperator 0x250256e47b8 <col:29, line:93:25> 'unsigned long' '+'
    | | |     | |-ImplicitCastExpr 0x250256e4788 <line:593:29> 'unsigned long' <LValueToRValue>
    | | |     | | `-DeclRefExpr 0x250256e4740 <col:29> 'unsigned long' lvalue Var 0x250256eb610 'tl' 'unsigned long'
    | | |     | `-ImplicitCastExpr 0x250256e47a0 <line:93:25> 'unsigned long' <IntegralCast>
    | | |     |   `-IntegerLiteral 0x250256e4760 <col:25> 'int' 4
    | | |     `-ImplicitCastExpr 0x250256e4810 <line:593:51> 'unsigned long' <IntegralCast>
    | | |       `-ImplicitCastExpr 0x250256e47f8 <col:51> 'int' <LValueToRValue>
    | | |         `-DeclRefExpr 0x250256e47d8 <col:51> 'int' lvalue Var 0x250256eb780 'md_size' 'int'
    | | |-BinaryOperator 0x250256e4968 <line:594:9, col:34> 'size_t':'unsigned long long' '='
    | | | |-MemberExpr 0x250256e48b8 <col:9, col:14> 'size_t':'unsigned long long' lvalue ->buf_len_save 0x250256da7a0
    | | | | `-ImplicitCastExpr 0x250256e48a0 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
    | | | |   `-DeclRefExpr 0x250256e4880 <col:9> 'BIO_OK_CTX *' lvalue Var 0x250256eb578 'ctx' 'BIO_OK_CTX *'
    | | | `-ImplicitCastExpr 0x250256e4950 <col:29, col:34> 'size_t':'unsigned long long' <LValueToRValue>
    | | |   `-MemberExpr 0x250256e4920 <col:29, col:34> 'size_t':'unsigned long long' lvalue ->buf_len 0x250256da6d0
    | | |     `-ImplicitCastExpr 0x250256e4908 <col:29> 'BIO_OK_CTX *' <LValueToRValue>
    | | |       `-DeclRefExpr 0x250256e48e8 <col:29> 'BIO_OK_CTX *' lvalue Var 0x250256eb578 'ctx' 'BIO_OK_CTX *'
    | | |-BinaryOperator 0x250256e4a30 <line:595:9, line:93:25> 'size_t':'unsigned long long' '='
    | | | |-MemberExpr 0x250256e49c0 <line:595:9, col:14> 'size_t':'unsigned long long' lvalue ->buf_off 0x250256da738
    | | | | `-ImplicitCastExpr 0x250256e49a8 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
    | | | |   `-DeclRefExpr 0x250256e4988 <col:9> 'BIO_OK_CTX *' lvalue Var 0x250256eb578 'ctx' 'BIO_OK_CTX *'
    | | | `-ImplicitCastExpr 0x250256e4a18 <line:93:25> 'size_t':'unsigned long long' <IntegralCast>
    | | |   `-IntegerLiteral 0x250256e49f0 <col:25> 'int' 4
    | | |-BinaryOperator 0x250256e4b68 <line:596:9, line:93:25> 'size_t':'unsigned long long' '='
    | | | |-MemberExpr 0x250256e4a88 <line:596:9, col:14> 'size_t':'unsigned long long' lvalue ->buf_len 0x250256da6d0
    | | | | `-ImplicitCastExpr 0x250256e4a70 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
    | | | |   `-DeclRefExpr 0x250256e4a50 <col:9> 'BIO_OK_CTX *' lvalue Var 0x250256eb578 'ctx' 'BIO_OK_CTX *'
    | | | `-ImplicitCastExpr 0x250256e4b50 <col:24, line:93:25> 'size_t':'unsigned long long' <IntegralCast>
    | | |   `-BinaryOperator 0x250256e4b30 <line:596:24, line:93:25> 'unsigned long' '+'
    | | |     |-ImplicitCastExpr 0x250256e4b00 <line:596:24> 'unsigned long' <LValueToRValue>
    | | |     | `-DeclRefExpr 0x250256e4ab8 <col:24> 'unsigned long' lvalue Var 0x250256eb610 'tl' 'unsigned long'
    | | |     `-ImplicitCastExpr 0x250256e4b18 <line:93:25> 'unsigned long' <IntegralCast>
    | | |       `-IntegerLiteral 0x250256e4ad8 <col:25> 'int' 4
    | | `-BinaryOperator 0x250256e4c18 <line:597:9, col:25> 'int' '='
    | |   |-MemberExpr 0x250256e4bc0 <col:9, col:14> 'int' lvalue ->blockout 0x250256da9c8
    | |   | `-ImplicitCastExpr 0x250256e4ba8 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
    | |   |   `-DeclRefExpr 0x250256e4b88 <col:9> 'BIO_OK_CTX *' lvalue Var 0x250256eb578 'ctx' 'BIO_OK_CTX *'
    | |   `-IntegerLiteral 0x250256e4bf0 <col:25> 'int' 1
    | `-CompoundStmt 0x250256e4d20 <line:598:12, line:600:5>
    |   `-BinaryOperator 0x250256e4d00 <line:599:9, col:21> 'int' '='
    |     |-MemberExpr 0x250256e4ca8 <col:9, col:14> 'int' lvalue ->cont 0x250256da878
    |     | `-ImplicitCastExpr 0x250256e4c90 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
    |     |   `-DeclRefExpr 0x250256e4c70 <col:9> 'BIO_OK_CTX *' lvalue Var 0x250256eb578 'ctx' 'BIO_OK_CTX *'
    |     `-IntegerLiteral 0x250256e4cd8 <col:21> 'int' 0
    |-ReturnStmt 0x250256e4da0 <line:601:5, col:12>
    | `-IntegerLiteral 0x250256e4d78 <col:12> 'int' 1
    |-LabelStmt 0x250256e4dd8 <line:602:2, col:6> 'berr'
    | `-NullStmt 0x250256e4dd0 <col:6>
    `-ReturnStmt 0x250256e4e18 <line:604:5, col:12>
      `-IntegerLiteral 0x250256e4df0 <col:12> 'int' 0
