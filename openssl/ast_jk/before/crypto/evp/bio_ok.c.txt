TranslationUnitDecl 0x2aa88c56928 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x2aa88c571c0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x2aa88c56ec0 '__int128'
|-TypedefDecl 0x2aa88c57230 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x2aa88c56ee0 'unsigned __int128'
|-TypedefDecl 0x2aa88c57568 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x2aa88c57320 'struct __NSConstantString_tag'
|   `-Record 0x2aa88c57288 '__NSConstantString_tag'
|-TypedefDecl 0x2aa88c575d8 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x2aa88c56b00 'unsigned long long'
|-TypedefDecl 0x2aa88c57670 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x2aa88c57630 'char *'
|   `-BuiltinType 0x2aa88c569c0 'char'
|-TypedefDecl 0x2aa88c576e0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x2aa88c57630 'char *'
|   `-BuiltinType 0x2aa88c569c0 'char'
|-TypedefDecl 0x2aa88c577a0 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x2aa88c56b00 'unsigned long long'
|-TypedefDecl 0x2aa88c57810 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x2aa88c57630 'char *'
|   `-BuiltinType 0x2aa88c569c0 'char'
|-FunctionDecl 0x2aa8a643430 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x2aa8a6434d0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x2aa8a643540 <col:21> Implicit
|-FunctionDecl 0x2aa8a643598 prev 0x2aa8a643430 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x2aa8a6432c0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x2aa8a643688 <col:21> Inherited Implicit
|-TypedefDecl 0x2aa8a6436c8 prev 0x2aa88c575d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x2aa88c56b00 'unsigned long long'
|-TypedefDecl 0x2aa8a643770 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x2aa8a643740 'size_t' sugar
|   |-Typedef 0x2aa8a6436c8 'size_t'
|   `-BuiltinType 0x2aa88c56b00 'unsigned long long'
|-TypedefDecl 0x2aa8a6437e0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x2aa88c56a60 'long long'
|-TypedefDecl 0x2aa8a643850 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x2aa88c56a60 'long long'
|-TypedefDecl 0x2aa8a6438c0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x2aa88c56aa0 'unsigned short'
|-TypedefDecl 0x2aa8a643930 <line:541:1, col:24> col:24 referenced wint_t 'unsigned short'
| `-BuiltinType 0x2aa88c56aa0 'unsigned short'
|-TypedefDecl 0x2aa8a6439a0 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x2aa88c56aa0 'unsigned short'
|-TypedefDecl 0x2aa8a643a10 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x2aa88c56a20 'int'
|-TypedefDecl 0x2aa8a643a80 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x2aa88c56a40 'long'
|-TypedefDecl 0x2aa8a643af0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x2aa88c56a60 'long long'
|-TypedefDecl 0x2aa8a643b80 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x2aa8a643b50 '__time64_t' sugar
|   |-Typedef 0x2aa8a643af0 '__time64_t'
|   `-BuiltinType 0x2aa88c56a60 'long long'
|-FunctionDecl 0x2aa8a643cf8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x2aa8a643f18 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x2aa8a678210 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x2aa8a644058 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x2aa8a6440d0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x2aa8a644148 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x2aa8a6441c8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x2aa8a677fb0 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x2aa8a6782f0 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x2aa8a6783b0 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x2aa8a678520 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x2aa8a6784d0 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x2aa8a678470 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x2aa8a678390 'struct threadlocaleinfostruct'
|       `-Record 0x2aa8a6880b0 'threadlocaleinfostruct'
|-TypedefDecl 0x2aa8a678630 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x2aa8a6785e0 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x2aa8a678580 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x2aa8a678450 'struct threadmbcinfostruct'
|       `-Record 0x2aa8a6783b0 'threadmbcinfostruct'
|-RecordDecl 0x2aa8a678688 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x2aa8a678740 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x2aa8a678800 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2aa8a678890 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x2aa8a678920 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x2aa8a6789d8 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x2aa8a678980 'struct localeinfo_struct' sugar
|   `-RecordType 0x2aa8a6787e0 'struct localeinfo_struct'
|     `-Record 0x2aa8a678740 'localeinfo_struct'
|-TypedefDecl 0x2aa8a678ab0 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x2aa8a678a60 'struct localeinfo_struct *'
|   `-ElaboratedType 0x2aa8a678980 'struct localeinfo_struct' sugar
|     `-RecordType 0x2aa8a6787e0 'struct localeinfo_struct'
|       `-Record 0x2aa8a678740 'localeinfo_struct'
|-RecordDecl 0x2aa8a678b28 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x2aa8a678be0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2aa8a678c58 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x2aa8a678d18 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x2aa8a678db0 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x2aa8a678e20 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x2aa8a678ed8 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x2aa8a678e80 'struct localerefcount' sugar
|   `-RecordType 0x2aa8a678bc0 'struct localerefcount'
|     `-Record 0x2aa8a678b28 'localerefcount'
|-RecordDecl 0x2aa8a6880b0 prev 0x2aa8a6782f0 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x2aa8a688130 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2aa8a6881a8 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x2aa8a688218 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x2aa8a688288 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x2aa8a6882f8 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x2aa8a6884b8 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x2aa8a688528 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x2aa8a688598 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x2aa8a688608 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x2aa8a688678 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x2aa8a6886e8 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x2aa8a688740 parent 0x2aa88c56928 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x2aa8a6888d0 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x2aa8a688940 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x2aa8a6889b0 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x2aa8a688a20 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x2aa8a688ac0 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x2aa8a688b30 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x2aa8a688c40 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x2aa8a688d78 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x2aa8a688e28 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x2aa8a688dd0 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x2aa8a678390 'struct threadlocaleinfostruct'
|     `-Record 0x2aa8a6880b0 'threadlocaleinfostruct'
|-RecordDecl 0x2aa8a688ec0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:63:1, line:72:9> line:63:8 struct _iobuf definition
| |-MaxFieldAlignmentAttr 0x2aa8a688f80 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2aa8a688ff8 <line:64:9, col:15> col:15 _ptr 'char *'
| |-FieldDecl 0x2aa8a682050 <line:65:9, col:15> col:15 _cnt 'int'
| |-FieldDecl 0x2aa8a6820c0 <line:66:9, col:15> col:15 _base 'char *'
| |-FieldDecl 0x2aa8a682130 <line:67:9, col:15> col:15 _flag 'int'
| |-FieldDecl 0x2aa8a6821a0 <line:68:9, col:15> col:15 _file 'int'
| |-FieldDecl 0x2aa8a682210 <line:69:9, col:15> col:15 _charbuf 'int'
| |-FieldDecl 0x2aa8a682280 <line:70:9, col:15> col:15 _bufsiz 'int'
| `-FieldDecl 0x2aa8a6822f0 <line:71:9, col:15> col:15 _tmpfname 'char *'
|-TypedefDecl 0x2aa8a6823a0 <line:73:1, col:23> col:23 referenced FILE 'struct _iobuf':'struct _iobuf'
| `-ElaboratedType 0x2aa8a682350 'struct _iobuf' sugar
|   `-RecordType 0x2aa8a688f60 'struct _iobuf'
|     `-Record 0x2aa8a688ec0 '_iobuf'
|-FunctionDecl 0x2aa8a6825d8 <line:137:9, col:39> col:24 __iob_func 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|-TypedefDecl 0x2aa8a6826a8 <line:144:1, col:17> col:17 referenced fpos_t 'long long'
| `-BuiltinType 0x2aa88c56a60 'long long'
|-FunctionDecl 0x2aa8a682888 <line:175:24, col:65> col:36 _filbuf 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2aa8a682710 <col:52, col:59> col:59 _File 'FILE *'
|-FunctionDecl 0x2aa8a682b80 <line:176:28, col:82> col:40 _flsbuf 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2aa8a682960 <col:53, col:57> col:57 _Ch 'int'
| `-ParmVarDecl 0x2aa8a6829d8 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x2aa8a682f30 <line:178:24, col:121> col:39 _fsopen 'FILE *(const char *, const char *, int) __attribute__((cdecl))':'FILE *(const char *, const char *, int)'
| |-ParmVarDecl 0x2aa8a682c60 <col:54, col:67> col:67 _Filename 'const char *'
| |-ParmVarDecl 0x2aa8a682ce0 <col:85, col:98> col:98 _Mode 'const char *'
| `-ParmVarDecl 0x2aa8a682d60 <col:110, col:114> col:114 _ShFlag 'int'
|-FunctionDecl 0x2aa8a68d270 <line:180:9, col:51> col:22 clearerr 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x2aa8a68d100 <col:39, col:46> col:46 _File 'FILE *'
|-FunctionDecl 0x2aa8a68d4a0 <line:182:28, col:76> col:44 clearerr_s 'errno_t (FILE *) __attribute__((cdecl))':'errno_t (FILE *)'
| `-ParmVarDecl 0x2aa8a68d360 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x2aa8a68d650 <line:184:28, col:67> col:40 fclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2aa8a68d570 <col:55, col:62> col:62 _File 'FILE *'
|-FunctionDecl 0x2aa8a68d840 <line:185:28, col:55> col:40 _fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2aa8a68db38 <line:187:24, col:94> col:39 _fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x2aa8a68d910 <col:52, col:56> col:56 _FileHandle 'int'
| `-ParmVarDecl 0x2aa8a68d990 <col:76, col:89> col:89 _Mode 'const char *'
|-FunctionDecl 0x2aa8a68dcf0 <line:189:24, col:58> col:36 feof 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2aa8a68dc10 <col:46, col:53> col:53 _File 'FILE *'
|-FunctionDecl 0x2aa8a68dea0 <line:190:24, col:60> col:36 ferror 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2aa8a68ddc0 <col:48, col:55> col:55 _File 'FILE *'
|-FunctionDecl 0x2aa8a68e050 <line:191:28, col:71> col:40 fflush 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2aa8a68df70 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x2aa8a68c1f8 <line:192:28, col:66> col:40 fgetc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2aa8a68c118 <col:54, col:61> col:61 _File 'FILE *'
|-FunctionDecl 0x2aa8a68c388 <line:193:28, col:54> col:40 _fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2aa8a68c6f0 <line:194:28, col:90> col:40 fgetpos 'int (FILE *, fpos_t *) __attribute__((cdecl))':'int (FILE *, fpos_t *)'
| |-ParmVarDecl 0x2aa8a68c450 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x2aa8a68c548 <col:77, col:86> col:86 _Pos 'fpos_t *'
|-FunctionDecl 0x2aa8a68caa8 <line:195:28, col:128> col:43 fgets 'char *(char *, int, FILE *) __attribute__((cdecl))':'char *(char *, int, FILE *)'
| |-ParmVarDecl 0x2aa8a68c7d0 <col:75, col:82> col:82 _Buf 'char *'
| |-ParmVarDecl 0x2aa8a68c850 <col:93, col:97> col:97 _MaxCount 'int'
| `-ParmVarDecl 0x2aa8a68c8c8 <col:116, col:123> col:123 _File 'FILE *'
|-FunctionDecl 0x2aa8a68cc68 <line:197:24, col:61> col:36 _fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2aa8a68cb88 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x2aa8a68cf30 <line:204:24, col:117> col:39 _tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x2aa8a68cd40 <col:59, col:72> col:72 _DirName 'const char *'
| `-ParmVarDecl 0x2aa8a68cdc0 <col:93, col:106> col:106 _FilePrefix 'const char *'
|-FunctionDecl 0x2aa8a686090 <line:210:28, col:54> col:40 _flushall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2aa8a686488 <line:211:72> col:72 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x2aa8a686528 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2aa8a686590 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2aa8a686608 prev 0x2aa8a686488 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:211:134> col:72 fopen 'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x2aa8a686260 <col:85, col:98> col:98 _Filename 'const char *'
| |-ParmVarDecl 0x2aa8a6862e0 <col:116, col:129> col:129 _Mode 'const char *'
| `-DeprecatedAttr 0x2aa8a6866b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2aa8a686b30 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:213:28, col:149> col:44 fopen_s 'errno_t (FILE **, const char *, const char *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *)'
| |-ParmVarDecl 0x2aa8a686860 <col:78, col:86> col:86 _File 'FILE **'
| |-ParmVarDecl 0x2aa8a6868e0 <col:100, col:113> col:113 _Filename 'const char *'
| `-ParmVarDecl 0x2aa8a686960 <col:131, col:144> col:144 _Mode 'const char *'
|-FunctionDecl 0x2aa8a686e50 <line:215:40> col:40 implicit fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x2aa8a686ef0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x2aa8a686f58 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x2aa8a686fd0 <col:40> Implicit printf 2 3
|-FunctionDecl 0x2aa8a68f120 prev 0x2aa8a686e50 <col:28, col:125> col:40 fprintf 'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x2aa8a686c10 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x2aa8a686c90 <col:100, col:113> col:113 _Format 'const char *'
| `-FormatAttr 0x2aa8a68f218 <col:40> Inherited printf 2 3
|-FunctionDecl 0x2aa8a68f3e0 <line:217:28, col:127> col:40 fprintf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x2aa8a68f260 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x2aa8a68f2e0 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x2aa8a68f638 <line:219:28, col:80> col:40 fputc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2aa8a68f4c0 <col:51, col:55> col:55 _Ch 'int'
| `-ParmVarDecl 0x2aa8a68f538 <col:68, col:75> col:75 _File 'FILE *'
|-FunctionDecl 0x2aa8a68f868 <line:220:28, col:62> col:40 _fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x2aa8a68f718 <col:55, col:59> col:59 _Ch 'int'
|-FunctionDecl 0x2aa8a68fb60 <line:221:28, col:92> col:40 fputs 'int (const char *, FILE *) __attribute__((cdecl))':'int (const char *, FILE *)'
| |-ParmVarDecl 0x2aa8a68f940 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x2aa8a68f9b8 <col:80, col:87> col:87 _File 'FILE *'
|-FunctionDecl 0x2aa8a68fff8 <line:222:43> col:43 implicit fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x2aa8a690098 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x2aa8a695180 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x2aa8a6951e8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x2aa8a695250 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x2aa8a6952d8 prev 0x2aa8a68fff8 <col:28, col:171> col:43 fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x2aa8a68fc40 <col:89, col:96> col:96 _DstBuf 'void *'
| |-ParmVarDecl 0x2aa8a68fcb8 <col:110, col:117> col:117 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2aa8a68fd30 <col:136, col:143> col:143 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2aa8a68fda8 <col:159, col:166> col:166 _File 'FILE *'
|-FunctionDecl 0x2aa8a6957e0 <line:224:28, col:195> col:43 fread_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x2aa8a6953c8 <col:91, col:98> col:98 _DstBuf 'void *'
| |-ParmVarDecl 0x2aa8a695440 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2aa8a6954b8 <col:134, col:141> col:141 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2aa8a695530 <col:160, col:167> col:167 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2aa8a6955a8 <col:183, col:190> col:190 _File 'FILE *'
|-FunctionDecl 0x2aa8a695ca0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:226:160> col:74 freopen 'FILE *(const char *, const char *, FILE *) __attribute__((cdecl))':'FILE *(const char *, const char *, FILE *)'
| |-ParmVarDecl 0x2aa8a6959d0 <col:89, col:102> col:102 _Filename 'const char *'
| |-ParmVarDecl 0x2aa8a695a50 <col:120, col:133> col:133 _Mode 'const char *'
| |-ParmVarDecl 0x2aa8a695ac8 <col:148, col:155> col:155 _File 'FILE *'
| `-DeprecatedAttr 0x2aa8a695d58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using freopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2aa8a693208 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:228:28, col:176> col:44 freopen_s 'errno_t (FILE **, const char *, const char *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *, FILE *)'
| |-ParmVarDecl 0x2aa8a695ea0 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x2aa8a695f20 <col:102, col:115> col:115 _Filename 'const char *'
| |-ParmVarDecl 0x2aa8a695fa0 <col:133, col:146> col:146 _Mode 'const char *'
| `-ParmVarDecl 0x2aa8a696018 <col:161, col:168> col:168 _OldFile 'FILE *'
|-FunctionDecl 0x2aa8a6935b0 <line:230:70> col:70 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x2aa8a693650 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x2aa8a6936b8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x2aa8a693730 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x2aa8a693798 prev 0x2aa8a6935b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:230:153> col:70 fscanf 'int (FILE *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x2aa8a6933e8 <col:85, col:92> col:92 _File 'FILE *'
| |-ParmVarDecl 0x2aa8a693468 <col:128, col:141> col:141 _Format 'const char *'
| |-FormatAttr 0x2aa8a693978 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x2aa8a693848 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2aa8a693db8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:231:201> col:77 _fscanf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2aa8a693ab8 <col:95, col:102> col:102 _File 'FILE *'
| |-ParmVarDecl 0x2aa8a693b38 <col:148, col:161> col:161 _Format 'const char *'
| |-ParmVarDecl 0x2aa8a693bd0 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2aa8a693e70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2aa8a68e110 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:235:28, col:127> col:40 fscanf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x2aa8a693fb0 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x2aa8a694030 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x2aa8a68e400 <line:237:28, col:168> col:40 _fscanf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2aa8a68e1e8 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x2aa8a68e268 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x2aa8a68e2e0 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2aa8a68e760 <line:239:28, col:94> col:40 fsetpos 'int (FILE *, const fpos_t *) __attribute__((cdecl))':'int (FILE *, const fpos_t *)'
| |-ParmVarDecl 0x2aa8a68e4e0 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x2aa8a68e5b8 <col:75, col:90> col:90 _Pos 'const fpos_t *'
|-FunctionDecl 0x2aa8a68eb18 <line:240:28, col:103> col:40 fseek 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x2aa8a68e838 <col:54, col:61> col:61 _File 'FILE *'
| |-ParmVarDecl 0x2aa8a68e8b8 <col:73, col:78> col:78 _Offset 'long'
| `-ParmVarDecl 0x2aa8a68e938 <col:92, col:96> col:96 _Origin 'int'
|-FunctionDecl 0x2aa8a68ed78 <line:241:24, col:63> col:37 ftell 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x2aa8a68ebf8 <col:51, col:58> col:58 _File 'FILE *'
|-FunctionDecl 0x2aa8a6941b8 <line:243:28, col:110> col:40 _fseeki64 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x2aa8a68ee48 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x2aa8a68eec8 <col:77, col:85> col:85 _Offset 'long long'
| `-ParmVarDecl 0x2aa8a68ef48 <col:99, col:103> col:103 _Origin 'int'
|-FunctionDecl 0x2aa8a694418 <line:244:24, col:70> col:40 _ftelli64 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x2aa8a694298 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x2aa8a6948d8 <line:246:43> col:43 implicit fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x2aa8a694978 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x2aa8a6949e0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x2aa8a694a48 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x2aa8a694ab0 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x2aa8a694b38 prev 0x2aa8a6948d8 <col:28, col:159> col:43 fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x2aa8a694520 <col:81, col:94> col:94 _Str 'const void *'
| |-ParmVarDecl 0x2aa8a694598 <col:105, col:112> col:112 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2aa8a694610 <col:124, col:131> col:131 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2aa8a694688 <col:147, col:154> col:154 _File 'FILE *'
|-FunctionDecl 0x2aa8a694d00 <line:247:24, col:61> col:36 getc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2aa8a694c20 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x2aa8a694e90 <line:248:24, col:48> col:36 getchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2aa8a695018 <line:249:24, col:53> col:36 _getmaxstdio 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2aa8a691300 <line:251:9, col:84> col:24 gets_s 'char *(char *, rsize_t) __attribute__((cdecl))':'char *(char *, rsize_t)'
| |-ParmVarDecl 0x2aa8a6950e8 <col:53, col:60> col:60 _Buf 'char *'
| `-ParmVarDecl 0x2aa8a691150 <col:71, col:79> col:79 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x2aa8a691628 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:254:80 gets 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x2aa8a6914e0 <col:139, col:145> col:145 _Buffer 'char *'
| `-DeprecatedAttr 0x2aa8a6916d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2aa8a6918f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:255:16, col:54> col:28 _getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2aa8a691810 <col:42, col:49> col:49 _File 'FILE *'
|-FunctionDecl 0x2aa8a691b10 <line:258:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x2aa8a6919c8 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x2aa8a691cc0 <line:261:28, col:68> col:40 _pclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2aa8a691be0 <col:56, col:63> col:63 _File 'FILE *'
|-FunctionDecl 0x2aa8a691f10 <line:262:24, col:101> col:39 _popen 'FILE *(const char *, const char *) __attribute__((cdecl))':'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x2aa8a691d98 <col:53, col:66> col:66 _Command 'const char *'
| `-ParmVarDecl 0x2aa8a691e18 <col:83, col:96> col:96 _Mode 'const char *'
|-FunctionDecl 0x2aa8a692150 <line:264:40> col:40 implicit printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x2aa8a6921f0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x2aa8a692260 <col:40> Implicit printf 1 2
|-FunctionDecl 0x2aa8a6922c8 prev 0x2aa8a692150 <col:28, col:102> col:40 printf 'int (const char *, ...)'
| |-ParmVarDecl 0x2aa8a691ff0 <col:77, col:90> col:90 _Format 'const char *'
| `-FormatAttr 0x2aa8a6923b8 <col:40> Inherited printf 1 2
|-FunctionDecl 0x2aa8a6924e8 <line:266:28, col:104> col:40 printf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x2aa8a692408 <col:79, col:92> col:92 _Format 'const char *'
|-FunctionDecl 0x2aa8a692738 <line:268:28, col:79> col:40 putc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2aa8a6925c0 <col:50, col:54> col:54 _Ch 'int'
| `-ParmVarDecl 0x2aa8a692638 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x2aa8a6928f8 <line:269:28, col:60> col:40 putchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x2aa8a692818 <col:53, col:57> col:57 _Ch 'int'
|-FunctionDecl 0x2aa8a692b18 <line:270:28, col:69> col:40 puts 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x2aa8a6929d0 <col:52, col:65> col:65 _Str 'const char *'
|-FunctionDecl 0x2aa8a692d68 <line:271:28, col:82> col:40 _putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2aa8a692bf0 <col:51, col:55> col:55 _Word 'int'
| `-ParmVarDecl 0x2aa8a692c68 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x2aa8a692f28 <line:274:9, col:57> col:21 remove 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x2aa8a692e48 <col:35, col:48> col:48 _Filename 'const char *'
|-FunctionDecl 0x2aa8a6e7110 <line:275:24, col:109> col:36 rename 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x2aa8a693000 <col:50, col:63> col:63 _OldFilename 'const char *'
| `-ParmVarDecl 0x2aa8a693080 <col:84, col:97> col:97 _NewFilename 'const char *'
|-FunctionDecl 0x2aa8a6e72d0 <line:276:9, col:58> col:21 _unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x2aa8a6e71f0 <col:36, col:49> col:49 _Filename 'const char *'
|-FunctionDecl 0x2aa8a6e7560 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:278:89> col:53 unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x2aa8a6e7480 <col:67, col:80> col:80 _Filename 'const char *'
| `-DeprecatedAttr 0x2aa8a6e7608 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _unlink. See online help for details." ""
|-FunctionDecl 0x2aa8a6e7800 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:281:9, col:49> col:22 rewind 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x2aa8a6e7728 <col:37, col:44> col:44 _File 'FILE *'
|-FunctionDecl 0x2aa8a6e7990 <line:282:28, col:51> col:40 _rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2aa8a6e7c38 <line:283:69> col:69 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x2aa8a6e7cd8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x2aa8a6e7d48 <col:69> Implicit scanf 1 2
|-FunctionDecl 0x2aa8a6e7db0 prev 0x2aa8a6e7c38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:283:129> col:69 scanf 'int (const char *restrict, ...)'
| |-ParmVarDecl 0x2aa8a6e7b20 <col:104, col:117> col:117 _Format 'const char *'
| |-FormatAttr 0x2aa8a6e7f88 <col:69> Inherited scanf 1 2
| `-DeprecatedAttr 0x2aa8a6e7e58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2aa8a6e4320 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:284:177> col:76 _scanf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2aa8a6e40e8 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x2aa8a6e4160 <col:155, col:165> col:165 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2aa8a6e43d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _scanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2aa8a6e45f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:288:40, col:116> col:52 scanf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x2aa8a6e4518 <col:91, col:104> col:104 _Format 'const char *'
|-FunctionDecl 0x2aa8a6e4848 <line:290:40, col:157> col:52 _scanf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2aa8a6e46d0 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x2aa8a6e4748 <col:135, col:145> col:145 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2aa8a6e4c08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:292:150> col:55 setbuf 'void (FILE *, char *) __attribute__((cdecl))':'void (FILE *, char *)'
| |-ParmVarDecl 0x2aa8a6e49e0 <col:70, col:77> col:77 _File 'FILE *'
| |-ParmVarDecl 0x2aa8a6e4a60 <col:136, col:143> col:143 _Buffer 'char *'
| `-DeprecatedAttr 0x2aa8a6e4cb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using setvbuf instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2aa8a6e4ee0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:293:28, col:66> col:40 _setmaxstdio 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x2aa8a6e4e00 <col:58, col:62> col:62 _Max 'int'
|-FunctionDecl 0x2aa8a6e5168 <line:294:28, col:93> col:49 _set_output_format 'unsigned int (unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int)'
| `-ParmVarDecl 0x2aa8a6e5020 <col:73, col:86> col:86 _Format 'unsigned int'
|-FunctionDecl 0x2aa8a6e5350 <line:295:28, col:72> col:49 _get_output_format 'unsigned int (void) __attribute__((cdecl))':'unsigned int (void)'
|-FunctionDecl 0x2aa8a6e57a0 <line:296:28, col:145> col:40 setvbuf 'int (FILE *, char *, int, size_t) __attribute__((cdecl))':'int (FILE *, char *, int, size_t)'
| |-ParmVarDecl 0x2aa8a6e5418 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x2aa8a6e5498 <col:99, col:106> col:106 _Buf 'char *'
| |-ParmVarDecl 0x2aa8a6e5518 <col:117, col:121> col:121 _Mode 'int'
| `-ParmVarDecl 0x2aa8a6e5590 <col:133, col:140> col:140 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x2aa8a6e5c20 <line:297:40, col:213> col:52 _snprintf_s 'int (char *, size_t, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, ...)'
| |-ParmVarDecl 0x2aa8a6e5890 <col:93, col:100> col:100 _DstBuf 'char *'
| |-ParmVarDecl 0x2aa8a6e5908 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2aa8a6e5980 <col:140, col:147> col:147 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2aa8a6e5a00 <col:188, col:201> col:201 _Format 'const char *'
|-FunctionDecl 0x2aa8a6e6030 <line:300:40, col:188> col:52 sprintf_s 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x2aa8a6e5d10 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x2aa8a6e5d88 <col:112, col:119> col:119 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2aa8a6e5e08 <col:163, col:176> col:176 _Format 'const char *'
|-FunctionDecl 0x2aa8a6e61f8 <line:303:24, col:101> col:36 _scprintf 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x2aa8a6e6118 <col:76, col:89> col:89 _Format 'const char *'
|-FunctionDecl 0x2aa8a6e65d0 <line:304:70> col:70 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x2aa8a6e6670 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x2aa8a6e66d8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x2aa8a6e6750 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x2aa8a6e67b8 prev 0x2aa8a6e65d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:304:157> col:70 sscanf 'int (const char *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x2aa8a6e6390 <col:84, col:97> col:97 _Src 'const char *'
| |-ParmVarDecl 0x2aa8a6e6410 <col:132, col:145> col:145 _Format 'const char *'
| |-FormatAttr 0x2aa8a6e6998 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x2aa8a6e6868 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2aa8a6e6d88 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:305:205> col:77 _sscanf_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2aa8a6e6aa8 <col:94, col:107> col:107 _Src 'const char *'
| |-ParmVarDecl 0x2aa8a6e6b28 <col:152, col:165> col:165 _Format 'const char *'
| |-ParmVarDecl 0x2aa8a6e6ba0 <col:183, col:193> col:193 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2aa8a6e6e40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2aa8a6e10e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:309:40, col:143> col:52 sscanf_s 'int (const char *, const char *, ...) __attribute__((cdecl))':'int (const char *, const char *, ...)'
| |-ParmVarDecl 0x2aa8a6e6f88 <col:68, col:81> col:81 _Src 'const char *'
| `-ParmVarDecl 0x2aa8a6e0fe0 <col:118, col:131> col:131 _Format 'const char *'
|-FunctionDecl 0x2aa8a6e13d8 <line:311:40, col:184> col:52 _sscanf_s_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2aa8a6e11c0 <col:71, col:84> col:84 _Src 'const char *'
| |-ParmVarDecl 0x2aa8a6e1240 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x2aa8a6e12b8 <col:162, col:172> col:172 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2aa8a6e1868 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:312:217> col:76 _snscanf 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x2aa8a6e1580 <col:121, col:134> col:134 _Src 'const char *'
| |-ParmVarDecl 0x2aa8a6e15f8 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2aa8a6e1678 <col:192, col:205> col:205 _Format 'const char *'
| `-DeprecatedAttr 0x2aa8a6e1920 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2aa8a6e1ef0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:313:259> col:78 _snscanf_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2aa8a6e1b60 <col:125, col:138> col:138 _Src 'const char *'
| |-ParmVarDecl 0x2aa8a6e1bd8 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2aa8a6e1c58 <col:206, col:219> col:219 _Format 'const char *'
| |-ParmVarDecl 0x2aa8a6e1cd0 <col:237, col:247> col:247 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2aa8a6e8050 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2aa8a6e83b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:314:40, col:197> col:52 _snscanf_s 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x2aa8a6e8198 <col:99, col:112> col:112 _Src 'const char *'
| |-ParmVarDecl 0x2aa8a6e8210 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2aa8a6e8290 <col:172, col:185> col:185 _Format 'const char *'
|-FunctionDecl 0x2aa8a6e8748 <line:315:40, col:237> col:52 _snscanf_s_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2aa8a6e8498 <col:101, col:114> col:114 _Src 'const char *'
| |-ParmVarDecl 0x2aa8a6e8510 <col:125, col:132> col:132 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2aa8a6e8590 <col:184, col:197> col:197 _Format 'const char *'
| `-ParmVarDecl 0x2aa8a6e8608 <col:215, col:225> col:225 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2aa8a6e89a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:317:86> col:74 tmpfile 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
| `-DeprecatedAttr 0x2aa8a6e8a48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpfile_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2aa8a6e8d00 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:319:28, col:96> col:44 tmpfile_s 'errno_t (FILE **) __attribute__((cdecl))':'errno_t (FILE **)'
| `-ParmVarDecl 0x2aa8a6e8b90 <col:83, col:91> col:91 _File 'FILE **'
|-FunctionDecl 0x2aa8a6e9060 <line:320:28, col:106> col:44 tmpnam_s 'errno_t (char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t)'
| |-ParmVarDecl 0x2aa8a6e8dd8 <col:75, col:82> col:82 _Buf 'char *'
| `-ParmVarDecl 0x2aa8a6e8e50 <col:93, col:101> col:101 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x2aa8a6e92e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:323:79 tmpnam 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x2aa8a6e9200 <col:113, col:119> col:119 _Buffer 'char *'
| `-DeprecatedAttr 0x2aa8a6e9388 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2aa8a6e9648 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:324:28, col:81> col:40 ungetc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2aa8a6e94d0 <col:52, col:56> col:56 _Ch 'int'
| `-ParmVarDecl 0x2aa8a6e9548 <col:69, col:76> col:76 _File 'FILE *'
|-FunctionDecl 0x2aa8a6e9a60 <line:325:40> col:40 implicit vfprintf 'int (FILE *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x2aa8a6e9b00 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x2aa8a6e9b68 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x2aa8a6e9bd0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2aa8a6e9c50 <col:40> Implicit printf 2 0
|-FunctionDecl 0x2aa8a6e9cb8 prev 0x2aa8a6e9a60 <col:28, col:139> col:40 vfprintf 'int (FILE *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x2aa8a6e9720 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x2aa8a6e97a0 <col:101, col:114> col:114 _Format 'const char *'
| |-ParmVarDecl 0x2aa8a6e9818 <col:123, col:131> col:131 _ArgList 'va_list':'char *'
| `-FormatAttr 0x2aa8a6e9db8 <col:40> Inherited printf 2 0
|-FunctionDecl 0x2aa8a6e1ff0 <line:326:40> col:40 implicit vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x2aa8a6e2090 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x2aa8a6e20f8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x2aa8a6e2160 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2aa8a6e21e0 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x2aa8a6e2248 prev 0x2aa8a6e1ff0 <col:28, col:138> col:40 vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x2aa8a6e9e00 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x2aa8a6e9e80 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x2aa8a6e9ef8 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x2aa8a6e2348 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x2aa8a6e25a8 <line:328:28, col:141> col:40 vfprintf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x2aa8a6e2390 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x2aa8a6e2410 <col:103, col:116> col:116 _Format 'const char *'
| `-ParmVarDecl 0x2aa8a6e2488 <col:125, col:133> col:133 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2aa8a6e28a0 <line:329:28, col:140> col:40 vfscanf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x2aa8a6e2688 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x2aa8a6e2708 <col:102, col:115> col:115 _Format 'const char *'
| `-ParmVarDecl 0x2aa8a6e2780 <col:124, col:132> col:132 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2aa8a6e2be8 <line:331:40> col:40 implicit vprintf 'int (const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x2aa8a6e2c88 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x2aa8a6e2cf0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2aa8a6e2d68 <col:40> Implicit printf 1 0
|-FunctionDecl 0x2aa8a6e2dd0 prev 0x2aa8a6e2be8 <col:28, col:116> col:40 vprintf 'int (const char *, __builtin_va_list)'
| |-ParmVarDecl 0x2aa8a6e2988 <col:78, col:91> col:91 _Format 'const char *'
| |-ParmVarDecl 0x2aa8a6e2a00 <col:100, col:108> col:108 _ArgList 'va_list':'char *'
| `-FormatAttr 0x2aa8a6e2ec8 <col:40> Inherited printf 1 0
|-FunctionDecl 0x2aa8a6ea1a8 <line:332:40> col:40 implicit vscanf 'int (const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x2aa8a6ea248 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x2aa8a6ea2b0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2aa8a6ea328 <col:40> Implicit scanf 1 0
|-FunctionDecl 0x2aa8a6ea390 prev 0x2aa8a6ea1a8 <col:28, col:115> col:40 vscanf 'int (const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x2aa8a6e2f18 <col:77, col:90> col:90 _Format 'const char *'
| |-ParmVarDecl 0x2aa8a6ea070 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
| `-FormatAttr 0x2aa8a6ea488 <col:40> Inherited scanf 1 0
|-FunctionDecl 0x2aa8a6ea650 <line:334:28, col:118> col:40 vprintf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x2aa8a6ea4d8 <col:80, col:93> col:93 _Format 'const char *'
| `-ParmVarDecl 0x2aa8a6ea550 <col:102, col:110> col:110 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2aa8a6ea8a8 <line:335:28, col:117> col:40 vscanf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x2aa8a6ea730 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x2aa8a6ea7a8 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2aa8a6eae08 <line:337:77> col:77 implicit vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x2aa8a6eaea8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x2aa8a6eaf10 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x2aa8a6eaf78 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x2aa8a6eafe0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2aa8a6e3000 <col:77> Implicit printf 3 0
|-FunctionDecl 0x2aa8a6e3068 prev 0x2aa8a6eae08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:337:218> col:77 vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x2aa8a6eaa48 <col:111, col:118> col:118 _DstBuf 'char *'
| |-ParmVarDecl 0x2aa8a6eaac0 <col:132, col:139> col:139 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2aa8a6eab40 <col:180, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x2aa8a6eabb8 <col:202, col:210> col:210 _ArgList 'va_list':'char *'
| |-FormatAttr 0x2aa8a6e3258 <col:77> Inherited printf 3 0
| `-DeprecatedAttr 0x2aa8a6e3128 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2aa8a6e36c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:339:28, col:206> col:40 vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x2aa8a6e32a8 <col:77, col:84> col:84 _DstBuf 'char *'
| |-ParmVarDecl 0x2aa8a6e3320 <col:98, col:105> col:105 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2aa8a6e3398 <col:120, col:127> col:127 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2aa8a6e3418 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x2aa8a6e3490 <col:190, col:198> col:198 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2aa8a6e3b08 <line:342:40, col:227> col:52 _vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x2aa8a6e37c0 <col:94, col:101> col:101 _DstBuf 'char *'
| |-ParmVarDecl 0x2aa8a6e3838 <col:115, col:122> col:122 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2aa8a6e38b0 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2aa8a6e3930 <col:189, col:202> col:202 _Format 'const char *'
| `-ParmVarDecl 0x2aa8a6e39a8 <col:211, col:219> col:219 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2aa8a6e3ed8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:89 _snprintf 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x2aa8a6e3cc0 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x2aa8a6e3d38 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2aa8a6e3db8 <col:246, col:260> col:260 _Format 'const char *'
| `-DeprecatedAttr 0x2aa8a6e3f90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2aa8a6f2560 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:100 _vsnprintf 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x2aa8a6f22b0 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x2aa8a6f2328 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2aa8a6f23a8 <col:246, col:260> col:260 _Format 'const char *'
| |-ParmVarDecl 0x2aa8a6f2420 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x2aa8a6f2620 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2aa8a6f2a18 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:349:21, col:183> col:33 vsprintf_s 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x2aa8a6f2768 <col:73, col:80> col:80 _DstBuf 'char *'
| |-ParmVarDecl 0x2aa8a6f27e0 <col:94, col:101> col:101 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2aa8a6f2860 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x2aa8a6f28d8 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2aa8a6f2dd8 <line:351:40, col:149> col:52 vsscanf_s 'int (const char *, const char *, va_list) __attribute__((cdecl))':'int (const char *, const char *, va_list)'
| |-ParmVarDecl 0x2aa8a6f2b08 <col:62, col:75> col:75 _Src 'const char *'
| |-ParmVarDecl 0x2aa8a6f2b88 <col:111, col:124> col:124 _Format 'const char *'
| `-ParmVarDecl 0x2aa8a6f2c00 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2aa8a6ee150 <line:356:85> col:85 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x2aa8a6ee1f0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x2aa8a6ee258 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x2aa8a6ee2d0 <col:85> Implicit printf 2 3
|-FunctionDecl 0x2aa8a6ee338 prev 0x2aa8a6ee150 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:85 sprintf 'int (char *, const char *, ...)'
| |-ParmVarDecl 0x2aa8a6f2f80 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x2aa8a6f3000 <col:171, col:185> col:185 _Format 'const char *'
| |-FormatAttr 0x2aa8a6ee518 <col:85> Inherited printf 2 3
| `-DeprecatedAttr 0x2aa8a6ee3e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2aa8a6ee940 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> col:94 implicit vsprintf 'int (char *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x2aa8a6ee9e0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x2aa8a6eea48 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x2aa8a6eeab0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2aa8a6eeb30 <col:94> Implicit printf 2 0
|-FunctionDecl 0x2aa8a6eeb98 prev 0x2aa8a6ee940 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94 vsprintf 'int (char *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x2aa8a6ee628 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x2aa8a6ee6a8 <col:171, col:185> col:185 _Format 'const char *'
| |-ParmVarDecl 0x2aa8a6ee720 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-FormatAttr 0x2aa8a6eed80 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> Inherited printf 2 0
| `-DeprecatedAttr 0x2aa8a6eec50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2aa8a6eb080 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:357:40> col:40 implicit vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x2aa8a6eb120 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x2aa8a6eb188 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x2aa8a6eb1f0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2aa8a6eb270 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x2aa8a6eb2d8 prev 0x2aa8a6eb080 <col:28, col:138> col:40 vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x2aa8a6eedd0 <col:48, col:61> col:61 _srcBuf 'const char *'
| |-ParmVarDecl 0x2aa8a6eee50 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x2aa8a6eeec8 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x2aa8a6eb3d8 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x2aa8a6eb5a0 <line:359:24, col:115> col:36 _vscprintf 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x2aa8a6eb428 <col:77, col:90> col:90 _Format 'const char *'
| `-ParmVarDecl 0x2aa8a6eb4a0 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2aa8a6eb898 <line:360:28, col:170> col:40 _snprintf_c 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x2aa8a6eb680 <col:76, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x2aa8a6eb6f8 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2aa8a6eb778 <col:145, col:158> col:158 _Format 'const char *'
|-FunctionDecl 0x2aa8a6ebc30 <line:361:28, col:183> col:40 _vsnprintf_c 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x2aa8a6eb980 <col:77, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x2aa8a6eb9f8 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2aa8a6eba78 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x2aa8a6ebaf0 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2aa8a6ebe98 <line:363:28, col:128> col:40 _fprintf_p 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x2aa8a6ebd18 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x2aa8a6ebd98 <col:103, col:116> col:116 _Format 'const char *'
|-FunctionDecl 0x2aa8a6ec090 <line:364:28, col:105> col:40 _printf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x2aa8a6ebf78 <col:80, col:93> col:93 _Format 'const char *'
|-FunctionDecl 0x2aa8a6ec380 <line:365:28, col:168> col:40 _sprintf_p 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x2aa8a6ec168 <col:77, col:84> col:84 _Dst 'char *'
| |-ParmVarDecl 0x2aa8a6ec1e0 <col:95, col:102> col:102 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2aa8a6ec260 <col:143, col:156> col:156 _Format 'const char *'
|-FunctionDecl 0x2aa8a6ec678 <line:366:28, col:142> col:40 _vfprintf_p 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x2aa8a6ec460 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x2aa8a6ec4e0 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x2aa8a6ec558 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2aa8a6ec8d8 <line:367:28, col:119> col:40 _vprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x2aa8a6ec760 <col:81, col:94> col:94 _Format 'const char *'
| `-ParmVarDecl 0x2aa8a6ec7d8 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2aa8a6ecc68 <line:368:28, col:182> col:40 _vsprintf_p 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x2aa8a6ec9b8 <col:78, col:85> col:85 _Dst 'char *'
| |-ParmVarDecl 0x2aa8a6eca30 <col:96, col:103> col:103 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2aa8a6ecab0 <col:144, col:157> col:157 _Format 'const char *'
| `-ParmVarDecl 0x2aa8a6ecb28 <col:166, col:174> col:174 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2aa8a6ece38 <line:369:24, col:103> col:36 _scprintf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x2aa8a6ecd58 <col:78, col:91> col:91 _Format 'const char *'
|-FunctionDecl 0x2aa8a6f00d0 <line:370:24, col:117> col:36 _vscprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x2aa8a6ecf10 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x2aa8a6ecf88 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2aa8a6f0290 <line:371:9, col:61> col:21 _set_printf_count_output 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x2aa8a6f01b0 <col:51, col:55> col:55 _Value 'int'
|-FunctionDecl 0x2aa8a6f0420 <line:372:9, col:50> col:21 _get_printf_count_output 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2aa8a6f0668 <line:374:28, col:143> col:40 _printf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2aa8a6f04f0 <col:90, col:103> col:103 _Format 'const char *'
| `-ParmVarDecl 0x2aa8a6f0568 <col:121, col:131> col:131 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2aa8a6f08c0 <line:375:28, col:145> col:40 _printf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2aa8a6f0748 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x2aa8a6f07c0 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2aa8a6f0b18 <line:376:28, col:145> col:40 _printf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2aa8a6f09a0 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x2aa8a6f0a18 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2aa8a6f0ec8 <line:377:28, col:157> col:40 _vprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2aa8a6f0bf8 <col:91, col:104> col:104 _Format 'const char *'
| |-ParmVarDecl 0x2aa8a6f0c70 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2aa8a6f0ce8 <col:141, col:149> col:149 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2aa8a6ed1c0 <line:378:28, col:159> col:40 _vprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2aa8a6f0fb0 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x2aa8a6f1028 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2aa8a6ed0a0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2aa8a6ed4b8 <line:379:28, col:159> col:40 _vprintf_s_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2aa8a6ed2a8 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x2aa8a6ed320 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2aa8a6ed398 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2aa8a6ed7b0 <line:381:28, col:166> col:40 _fprintf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2aa8a6ed598 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x2aa8a6ed618 <col:113, col:126> col:126 _Format 'const char *'
| `-ParmVarDecl 0x2aa8a6ed690 <col:144, col:154> col:154 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2aa8a6edaa8 <line:382:28, col:168> col:40 _fprintf_p_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2aa8a6ed890 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x2aa8a6ed910 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x2aa8a6ed988 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2aa8a6edda0 <line:383:28, col:168> col:40 _fprintf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2aa8a6edb88 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x2aa8a6edc08 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x2aa8a6edc80 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2aa8a6f82b0 <line:384:28, col:147> col:40 _vfprintf_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2aa8a6ede80 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x2aa8a6edf00 <col:81, col:94> col:94 _Format 'const char *'
| |-ParmVarDecl 0x2aa8a6edf78 <col:112, col:122> col:122 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2aa8a6edff0 <col:131, col:139> col:139 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2aa8a6f8648 <line:385:28, col:149> col:40 _vfprintf_p_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2aa8a6f8398 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x2aa8a6f8418 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x2aa8a6f8490 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2aa8a6f8508 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2aa8a6f89e0 <line:386:28, col:149> col:40 _vfprintf_s_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2aa8a6f8730 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x2aa8a6f87b0 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x2aa8a6f8828 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2aa8a6f88a0 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2aa8a6f8e78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:388:221> col:78 _sprintf_l 'int (char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2aa8a6f8b90 <col:112, col:119> col:119 _DstBuf 'char *'
| |-ParmVarDecl 0x2aa8a6f8c10 <col:168, col:181> col:181 _Format 'const char *'
| |-ParmVarDecl 0x2aa8a6f8c88 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2aa8a6f8f30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2aa8a6f5430 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:389:28, col:211> col:40 _sprintf_p_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2aa8a6f9078 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x2aa8a6f5120 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2aa8a6f51a0 <col:158, col:171> col:171 _Format 'const char *'
| `-ParmVarDecl 0x2aa8a6f5218 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2aa8a6f57d0 <line:390:40, col:221> col:52 _sprintf_s_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2aa8a6f5520 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x2aa8a6f5598 <col:111, col:118> col:118 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2aa8a6f5618 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x2aa8a6f5690 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2aa8a6f5d20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:391:195> col:79 _vsprintf_l 'int (char *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2aa8a6f59c0 <col:114, col:121> col:121 _DstBuf 'char *'
| |-ParmVarDecl 0x2aa8a6f5a40 <col:137, col:150> col:150 _Format 'const char *'
| |-ParmVarDecl 0x2aa8a6f5ab8 <col:168> col:177 '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x2aa8a6f5b30 <col:179, col:187> col:187 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x2aa8a6f5de0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2aa8a6f3338 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:392:28, col:225> col:40 _vsprintf_p_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2aa8a6f5f28 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x2aa8a6f5fa0 <col:101, col:108> col:108 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2aa8a6f6020 <col:159, col:171> col:171 _Format 'const char *'
| |-ParmVarDecl 0x2aa8a6f6098 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2aa8a6f3100 <col:209, col:217> col:217 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2aa8a6f3778 <line:393:40, col:235> col:52 _vsprintf_s_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2aa8a6f3430 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x2aa8a6f34a8 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2aa8a6f3528 <col:169, col:182> col:182 _Format 'const char *'
| |-ParmVarDecl 0x2aa8a6f35a0 <col:200, col:210> col:210 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2aa8a6f3618 <col:219, col:227> col:227 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2aa8a6f39e8 <line:395:28, col:145> col:40 _scprintf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2aa8a6f3870 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x2aa8a6f38e8 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2aa8a6f3c40 <line:396:28, col:147> col:40 _scprintf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2aa8a6f3ac8 <col:94, col:107> col:107 _Format 'const char *'
| `-ParmVarDecl 0x2aa8a6f3b40 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2aa8a6f3f30 <line:397:28, col:159> col:40 _vscprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2aa8a6f3d20 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x2aa8a6f3d98 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2aa8a6f3e10 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2aa8a6f1210 <line:398:28, col:161> col:40 _vscprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2aa8a6f4018 <col:95, col:108> col:108 _Format 'const char *'
| |-ParmVarDecl 0x2aa8a6f4090 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2aa8a6f10f0 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2aa8a6f1668 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:400:247> col:79 _snprintf_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2aa8a6f13b8 <col:115, col:122> col:122 _DstBuf 'char *'
| |-ParmVarDecl 0x2aa8a6f1430 <col:136, col:143> col:143 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2aa8a6f14b0 <col:194, col:207> col:207 _Format 'const char *'
| |-ParmVarDecl 0x2aa8a6f1528 <col:225, col:235> col:235 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2aa8a6f1728 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2aa8a6f1b20 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:401:28, col:210> col:40 _snprintf_c_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2aa8a6f1870 <col:78, col:85> col:85 _DstBuf 'char *'
| |-ParmVarDecl 0x2aa8a6f18e8 <col:99, col:106> col:106 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2aa8a6f1968 <col:157, col:170> col:170 _Format 'const char *'
| `-ParmVarDecl 0x2aa8a6f19e0 <col:188, col:198> col:198 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2aa8a6fa170 <line:402:40, col:245> col:52 _snprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2aa8a6f1c10 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x2aa8a6f1c88 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2aa8a6f1d00 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2aa8a6f1d80 <col:192, col:205> col:205 _Format 'const char *'
| `-ParmVarDecl 0x2aa8a6f1df8 <col:223, col:233> col:233 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2aa8a6fa6b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:403:262> col:80 _vsnprintf_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2aa8a6fa368 <col:117, col:124> col:124 _DstBuf 'char *'
| |-ParmVarDecl 0x2aa8a6fa3e0 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2aa8a6fa460 <col:196, col:209> col:209 _Format 'const char *'
| |-ParmVarDecl 0x2aa8a6fa4d8 <col:227, col:237> col:237 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x2aa8a6fa550 <col:246, col:254> col:254 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x2aa8a6fa778 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2aa8a6fabf8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:404:28, col:176> col:40 _vsnprintf_c_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2aa8a6fa8c8 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x2aa8a6fa940 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2aa8a6fa9c0 <col:118, col:129> col:130 'const char *'
| |-ParmVarDecl 0x2aa8a6faa38 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2aa8a6faab0 <col:160, col:168> col:168 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2aa8a6f6190 <line:405:28, col:245> col:40 _vsnprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2aa8a6facf0 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x2aa8a6fad68 <col:101, col:108> col:108 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2aa8a6fade0 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2aa8a6fae60 <col:181, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x2aa8a6faed8 <col:210, col:220> col:220 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2aa8a6faf50 <col:229, col:237> col:237 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2aa8a6f6550 <line:415:24, col:128> col:39 _wfsopen 'FILE *(const wchar_t *, const wchar_t *, int) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, int)'
| |-ParmVarDecl 0x2aa8a6f6288 <col:55, col:71> col:71 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x2aa8a6f6300 <col:89, col:105> col:105 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x2aa8a6f6380 <col:117, col:121> col:121 _ShFlag 'int'
|-FunctionDecl 0x2aa8a6f67c0 <line:417:28, col:70> col:43 fgetwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x2aa8a6f6650 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x2aa8a6f69d8 <line:418:28, col:58> col:43 _fgetwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x2aa8a6f6cb8 <line:419:28, col:88> col:43 fputwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x2aa8a6f6aa0 <col:55, col:63> col:63 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x2aa8a6f6b18 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x2aa8a6f6f00 <line:420:28, col:70> col:43 _fputwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x2aa8a6f6d90 <col:59, col:67> col:67 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x2aa8a6f9160 <line:421:24, col:65> col:39 getwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x2aa8a6f6fd0 <col:53, col:60> col:60 _File 'FILE *'
|-FunctionDecl 0x2aa8a6f92e8 <line:422:24, col:52> col:39 getwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x2aa8a6f9520 <line:423:28, col:87> col:43 putwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x2aa8a6f93b0 <col:54, col:62> col:62 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x2aa8a6f9428 <col:75, col:82> col:82 _File 'FILE *'
|-FunctionDecl 0x2aa8a6f96d0 <line:424:28, col:68> col:43 putwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x2aa8a6f95f8 <col:57, col:65> col:65 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x2aa8a6f9978 <line:425:28, col:88> col:43 ungetwc 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x2aa8a6f97a0 <col:56, col:63> col:63 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x2aa8a6f9818 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x2aa8a6f9d20 <line:427:28, col:141> col:46 fgetws 'wchar_t *(wchar_t *, int, FILE *) __attribute__((cdecl))':'wchar_t *(wchar_t *, int, FILE *)'
| |-ParmVarDecl 0x2aa8a6f9a50 <col:82, col:92> col:92 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2aa8a6f9ad0 <col:103, col:107> col:107 _SizeInWords 'int'
| `-ParmVarDecl 0x2aa8a6f9b48 <col:129, col:136> col:136 _File 'FILE *'
|-FunctionDecl 0x2aa8a6fa020 <line:428:28, col:96> col:40 fputws 'int (const wchar_t *, FILE *) __attribute__((cdecl))':'int (const wchar_t *, FILE *)'
| |-ParmVarDecl 0x2aa8a6f9e00 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2aa8a6f9e78 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x2aa8a6f42c8 <line:429:28, col:124> col:46 _getws_s 'wchar_t *(wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, size_t)'
| |-ParmVarDecl 0x2aa8a6fa0f8 <col:84, col:94> col:94 _Str 'wchar_t *'
| `-ParmVarDecl 0x2aa8a6f4120 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x2aa8a6f45d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:431:83 _getws 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x2aa8a6f4460 <col:115, col:124> col:124 _String 'wchar_t *'
| `-DeprecatedAttr 0x2aa8a6f4678 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _getws_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2aa8a6f4938 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:432:28, col:74> col:40 _putws 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x2aa8a6f47b8 <col:54, col:70> col:70 _Str 'const wchar_t *'
|-FunctionDecl 0x2aa8a6f4c40 <line:434:28, col:129> col:40 fwprintf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2aa8a6f4a08 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x2aa8a6f4a80 <col:101, col:117> col:117 _Format 'const wchar_t *'
|-FunctionDecl 0x2aa8a6f4e90 <line:436:28, col:131> col:40 fwprintf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2aa8a6f4d18 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x2aa8a6f4d90 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x2aa8a6fb180 <line:438:28, col:106> col:40 wprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x2aa8a6f4f68 <col:78, col:94> col:94 _Format 'const wchar_t *'
|-FunctionDecl 0x2aa8a6fb330 <line:440:28, col:108> col:40 wprintf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x2aa8a6fb250 <col:80, col:96> col:96 _Format 'const wchar_t *'
|-FunctionDecl 0x2aa8a6fb4e0 <line:442:24, col:105> col:36 _scwprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x2aa8a6fb400 <col:77, col:93> col:93 _Format 'const wchar_t *'
|-FunctionDecl 0x2aa8a6fb878 <line:443:28, col:143> col:40 vfwprintf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2aa8a6fb5b0 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x2aa8a6fb628 <col:102, col:118> col:118 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2aa8a6fb6a0 <col:127, col:135> col:135 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2aa8a6fbb68 <line:444:28, col:142> col:40 vfwscanf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2aa8a6fb958 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x2aa8a6fb9d0 <col:101, col:117> col:117 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2aa8a6fba48 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2aa8a6fbe58 <line:446:28, col:145> col:40 vfwprintf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2aa8a6fbc48 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x2aa8a6fbcc0 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2aa8a6fbd38 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2aa8a6fc190 <line:447:28, col:144> col:40 vfwscanf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2aa8a6fbf38 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x2aa8a6fbfb0 <col:103, col:119> col:119 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2aa8a6fc028 <col:128, col:136> col:136 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2aa8a6fc490 <line:449:28, col:120> col:40 vwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2aa8a6fc270 <col:79, col:95> col:95 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2aa8a6fc2e8 <col:104, col:112> col:112 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2aa8a6fc6e0 <line:450:28, col:119> col:40 vwscanf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2aa8a6fc568 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2aa8a6fc5e0 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2aa8a6fc930 <line:452:28, col:122> col:40 vwprintf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2aa8a6fc7b8 <col:81, col:97> col:97 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2aa8a6fc830 <col:106, col:114> col:114 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2aa8a6fcb80 <line:453:28, col:121> col:40 vwscanf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2aa8a6fca08 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2aa8a6fca80 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2aa8a6fcf38 <line:457:21, col:173> col:33 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2aa8a6fcc58 <col:73, col:83> col:83 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2aa8a6fccd0 <col:94, col:101> col:101 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2aa8a6fcd48 <col:145, col:161> col:161 _Format 'const wchar_t *'
|-FunctionDecl 0x2aa8a6fd3b0 <line:461:21, col:187> col:33 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2aa8a6fd018 <col:74, col:84> col:84 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2aa8a6fd090 <col:95, col:102> col:102 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2aa8a6fd108 <col:146, col:162> col:162 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2aa8a6fd1a0 <col:171, col:179> col:179 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2aa8a6fd768 <line:462:40, col:156> col:52 vswscanf_s 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2aa8a6fd498 <col:63, col:79> col:79 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2aa8a6fd510 <col:115, col:131> col:131 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2aa8a6fd588 <col:140, col:148> col:148 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2aa8a6fda58 <line:466:28, col:145> col:40 vswscanf 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2aa8a6fd848 <col:49, col:65> col:65 _srcBuf 'const wchar_t *'
| |-ParmVarDecl 0x2aa8a6fd8c0 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2aa8a6fd938 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2aa8a6fdd48 <line:468:28, col:184> col:40 _swprintf_c 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2aa8a6fdb38 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2aa8a6fdbb0 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2aa8a6fdc28 <col:156, col:172> col:172 _Format 'const wchar_t *'
|-FunctionDecl 0x2aa8a6fe0d0 <line:469:28, col:198> col:40 _vswprintf_c 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2aa8a6fde28 <col:82, col:92> col:92 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2aa8a6fdea0 <col:106, col:113> col:113 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2aa8a6fdf18 <col:157, col:173> col:173 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2aa8a6fdf90 <col:182, col:190> col:190 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2aa8a6fe560 <line:471:40, col:220> col:52 _snwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2aa8a6fe1d8 <col:94, col:104> col:104 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2aa8a6fe250 <col:118, col:125> col:125 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2aa8a6fe2c8 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2aa8a6fe340 <col:192, col:208> col:208 _Format 'const wchar_t *'
|-FunctionDecl 0x2aa8a6fea68 <line:473:40, col:234> col:52 _vsnwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2aa8a6fe648 <col:95, col:105> col:105 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2aa8a6fe6c0 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2aa8a6fe738 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2aa8a6fe7b0 <col:193, col:209> col:209 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2aa8a6fe828 <col:218, col:226> col:226 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2aa8a6fee28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:89 _snwprintf 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2aa8a6fec18 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2aa8a6fec90 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2aa8a6fed08 <col:254, col:271> col:271 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x2aa8a6feee0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2aa8a6ff3f0 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:101 _vsnwprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2aa8a6ff0e0 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2aa8a6ff1c0 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2aa8a6ff238 <col:254, col:271> col:271 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2aa8a6ff2b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x2aa8a6ff4b0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2aa8a6ff768 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:480:28, col:132> col:40 _fwprintf_p 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2aa8a6ff5f0 <col:60, col:67> col:67 _File 'FILE *'
| `-ParmVarDecl 0x2aa8a6ff668 <col:104, col:120> col:120 _Format 'const wchar_t *'
|-FunctionDecl 0x2aa8a6ff920 <line:481:28, col:109> col:40 _wprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x2aa8a6ff840 <col:81, col:97> col:97 _Format 'const wchar_t *'
|-FunctionDecl 0x2aa8a6ffc00 <line:482:28, col:146> col:40 _vfwprintf_p 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2aa8a6ff9f0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x2aa8a6ffa68 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2aa8a6ffae0 <col:130, col:138> col:138 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2aa8a6ffe58 <line:483:28, col:123> col:40 _vwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2aa8a6ffce0 <col:82, col:98> col:98 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2aa8a6ffd58 <col:107, col:115> col:115 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2aa8a707070 <line:484:28, col:178> col:40 _swprintf_p 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2aa8a6fff30 <col:78, col:88> col:88 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2aa8a6fffa8 <col:102, col:109> col:109 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2aa8a700020 <col:150, col:166> col:166 _Format 'const wchar_t *'
|-FunctionDecl 0x2aa8a7073f8 <line:485:28, col:192> col:40 _vswprintf_p 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2aa8a707150 <col:79, col:89> col:89 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2aa8a7071c8 <col:103, col:110> col:110 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2aa8a707240 <col:151, col:167> col:167 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2aa8a7072b8 <col:176, col:184> col:184 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2aa8a7075c0 <line:486:24, col:107> col:36 _scwprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x2aa8a7074e0 <col:79, col:95> col:95 _Format 'const wchar_t *'
|-FunctionDecl 0x2aa8a707808 <line:487:24, col:121> col:36 _vscwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2aa8a707690 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2aa8a707708 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2aa8a707b10 <line:489:28, col:147> col:40 _wprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2aa8a7078e0 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2aa8a707958 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2aa8a707d60 <line:490:28, col:149> col:40 _wprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2aa8a707be8 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2aa8a707c60 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2aa8a707fb0 <line:491:28, col:149> col:40 _wprintf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2aa8a707e38 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2aa8a707eb0 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2aa8a709388 <line:492:28, col:161> col:40 _vwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2aa8a7090b8 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2aa8a709130 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2aa8a7091a8 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2aa8a709678 <line:493:28, col:163> col:40 _vwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2aa8a709468 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2aa8a7094e0 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2aa8a709558 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2aa8a709968 <line:494:28, col:163> col:40 _vwprintf_s_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2aa8a709758 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2aa8a7097d0 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2aa8a709848 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2aa8a709d28 <line:496:28, col:170> col:40 _fwprintf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2aa8a709a48 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x2aa8a709ac0 <col:114, col:130> col:130 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2aa8a709b38 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2aa8a708080 <line:497:28, col:172> col:40 _fwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2aa8a709e08 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x2aa8a709e80 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2aa8a709ef8 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2aa8a708370 <line:498:28, col:172> col:40 _fwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2aa8a708160 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x2aa8a7081d8 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2aa8a708250 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2aa8a7087c0 <line:499:28, col:184> col:40 _vfwprintf_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2aa8a708450 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x2aa8a7084c8 <col:115, col:131> col:131 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2aa8a708540 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2aa8a7085b8 <col:168, col:176> col:176 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2aa8a708b50 <line:500:28, col:186> col:40 _vfwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2aa8a7088a8 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x2aa8a708920 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2aa8a708998 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2aa8a708a10 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2aa8a708ee0 <line:501:28, col:186> col:40 _vfwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2aa8a708c38 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x2aa8a708cb0 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2aa8a708d28 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2aa8a708da0 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2aa8a706370 <line:503:28, col:218> col:40 _swprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2aa8a708fc8 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2aa8a706060 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2aa8a7060d8 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2aa8a706150 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2aa8a706700 <line:504:28, col:218> col:40 _swprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2aa8a706458 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2aa8a7064d0 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2aa8a706548 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2aa8a7065c0 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2aa8a706a90 <line:505:40, col:228> col:52 _swprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2aa8a7067e8 <col:91, col:101> col:101 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2aa8a706860 <col:115, col:122> col:122 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2aa8a7068d8 <col:172, col:188> col:188 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2aa8a706950 <col:206, col:216> col:216 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2aa8a706f98 <line:506:28, col:232> col:40 used _vswprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2aa8a706b78 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2aa8a706bf0 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2aa8a706c68 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2aa8a706ce0 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2aa8a706d58 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2aa8a702388 <line:507:28, col:232> col:40 _vswprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2aa8a702048 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2aa8a7020c0 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2aa8a702138 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2aa8a7021b0 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2aa8a702228 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2aa8a7027b8 <line:508:40, col:242> col:52 _vswprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2aa8a702478 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2aa8a7024f0 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2aa8a702568 <col:173, col:189> col:189 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2aa8a7025e0 <col:207, col:217> col:217 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2aa8a702658 <col:226, col:234> col:234 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2aa8a702a20 <line:510:24, col:145> col:36 _scwprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2aa8a7028a8 <col:89, col:105> col:105 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2aa8a702920 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2aa8a702c70 <line:511:24, col:147> col:36 _scwprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2aa8a702af8 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2aa8a702b70 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2aa8a702f58 <line:512:24, col:161> col:36 _vscwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2aa8a702d48 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2aa8a702dc0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2aa8a702e38 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2aa8a70a438 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:514:255> col:80 _snwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2aa8a70a190 <col:117, col:127> col:127 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2aa8a70a208 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2aa8a70a280 <col:199, col:215> col:215 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2aa8a70a2f8 <col:233, col:243> col:243 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2aa8a70a4f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2aa8a70aa68 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:515:40, col:252> col:52 _snwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2aa8a70a640 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2aa8a70a6b8 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2aa8a70a730 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2aa8a70a7a8 <col:196, col:212> col:212 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2aa8a70a820 <col:230, col:240> col:240 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2aa8a70afa0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:516:270> col:81 _vsnwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2aa8a70ac60 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2aa8a70acd8 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2aa8a70ad50 <col:201, col:217> col:217 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2aa8a70adc8 <col:235, col:245> col:245 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x2aa8a70ae40 <col:254, col:262> col:262 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x2aa8a703030 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2aa8a703640 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:517:40, col:266> col:52 _vsnwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2aa8a703178 <col:93, col:103> col:103 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2aa8a7031f0 <col:117, col:124> col:124 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2aa8a703268 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2aa8a7032e0 <col:197, col:213> col:213 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2aa8a703358 <col:231, col:241> col:241 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2aa8a7033d0 <col:250, col:258> col:258 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2aa8a703b40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:110 _swprintf 'int (wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2aa8a703908 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2aa8a703980 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-DeprecatedAttr 0x2aa8a703bf0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x2aa8a703d08 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x2aa8a70b318 <col:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:134 _vswprintf 'int (wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2aa8a703fc0 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2aa8a70b0c0 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2aa8a70b138 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x2aa8a70b3d0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using vswprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x2aa8a70b4e8 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x2aa8a70ba88 <col:36, line:1961:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:110 __swprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2aa8a70b7a8 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2aa8a70b820 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2aa8a70b898 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-DeprecatedAttr 0x2aa8a70bb40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __swprintf_l_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x2aa8a70bc60 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x2aa8a704250 <col:36, line:1962:166> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:124 __vswprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2aa8a70bf20 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2aa8a70bf98 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2aa8a70c010 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x2aa8a704040 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1962:153, col:161> col:161 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x2aa8a704310 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vswprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x2aa8a704430 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x2aa8a704738 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:36:1, line:44:1> line:36:21 swprintf 'int (wchar_t *, size_t, const wchar_t *, ...)' static inline
| |-ParmVarDecl 0x2aa8a704558 <col:53, col:63> col:63 used _String 'wchar_t *'
| |-ParmVarDecl 0x2aa8a7045d0 <col:72, col:79> col:79 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2aa8a704648 <col:117, col:133> col:133 used _Format 'const wchar_t *'
| `-CompoundStmt 0x2aa8a7123c0 <line:37:1, line:44:1>
|   |-DeclStmt 0x2aa8a704880 <line:38:5, col:21>
|   | `-VarDecl 0x2aa8a704818 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x2aa8a704918 <line:39:5, col:13>
|   | `-VarDecl 0x2aa8a7048b0 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x2aa8a704c70 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x2aa8a704c58 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x2aa8a704b70 <col:34> '<builtin fn type>' Function 0x2aa8a704a08 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x2aa8a704ba8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:40:19> 'va_list':'char *' lvalue Var 0x2aa8a704818 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x2aa8a704be0 <col:29> 'const wchar_t *' lvalue ParmVar 0x2aa8a704648 '_Format' 'const wchar_t *'
|   |-BinaryOperator 0x2aa8a704f30 <line:41:5, col:67> 'int' '='
|   | |-DeclRefExpr 0x2aa8a704ca0 <col:5> 'int' lvalue Var 0x2aa8a7048b0 '_Ret' 'int'
|   | `-CallExpr 0x2aa8a704e70 <col:12, col:67> 'int'
|   |   |-ImplicitCastExpr 0x2aa8a704e58 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x2aa8a704cd8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x2aa8a706f98 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x2aa8a704eb8 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2aa8a704cf8 <col:27> 'wchar_t *' lvalue ParmVar 0x2aa8a704558 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x2aa8a704ed0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2aa8a704d18 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x2aa8a7045d0 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x2aa8a704ee8 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2aa8a704d38 <col:44> 'const wchar_t *' lvalue ParmVar 0x2aa8a704648 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x2aa8a704f00 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|   |   | `-ParenExpr 0x2aa8a704dc0 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x2aa8a704d98 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x2aa8a704d58 <col:26> 'int' 0
|   |   `-ImplicitCastExpr 0x2aa8a704f18 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:41:59> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x2aa8a704de0 <col:59> 'va_list':'char *' lvalue Var 0x2aa8a704818 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x2aa8a712350 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x2aa8a712338 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x2aa8a712288 <col:34> '<builtin fn type>' Function 0x2aa8a712120 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x2aa8a7122c0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:42:17> 'va_list':'char *' lvalue Var 0x2aa8a704818 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x2aa8a7123b0 <line:43:5, col:12>
|     `-ImplicitCastExpr 0x2aa8a712398 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x2aa8a712378 <col:12> 'int' lvalue Var 0x2aa8a7048b0 '_Ret' 'int'
|-FunctionDecl 0x2aa8a704a08 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34> col:34 implicit used __builtin_va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x2aa8a704aa8 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x2aa8a704b18 <col:34> Implicit
|-FunctionDecl 0x2aa8a712120 <line:27:34> col:34 implicit used __builtin_va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x2aa8a7121c0 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x2aa8a712230 <col:34> Implicit
|-FunctionDecl 0x2aa8a7126b8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:49:1, line:52:1> line:49:31 vswprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)' static inline
| |-ParmVarDecl 0x2aa8a712410 <col:64, col:74> col:74 used _String 'wchar_t *'
| |-ParmVarDecl 0x2aa8a712488 <col:83, col:90> col:90 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2aa8a712500 <col:138, col:154> col:154 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x2aa8a712578 <col:163, col:171> col:171 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x2aa8a7129a0 <line:50:1, line:52:1>
|   `-ReturnStmt 0x2aa8a712990 <line:51:5, col:62>
|     `-CallExpr 0x2aa8a7128d0 <col:12, col:62> 'int'
|       |-ImplicitCastExpr 0x2aa8a7128b8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x2aa8a712790 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x2aa8a706f98 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x2aa8a712918 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x2aa8a7127b0 <col:27> 'wchar_t *' lvalue ParmVar 0x2aa8a712410 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x2aa8a712930 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x2aa8a7127d0 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x2aa8a712488 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x2aa8a712948 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x2aa8a7127f0 <col:44> 'const wchar_t *' lvalue ParmVar 0x2aa8a712500 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x2aa8a712960 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|       | `-ParenExpr 0x2aa8a712878 <col:17, col:27> 'void *'
|       |   `-CStyleCastExpr 0x2aa8a712850 <col:18, col:26> 'void *' <NullToPointer>
|       |     `-IntegerLiteral 0x2aa8a712810 <col:26> 'int' 0
|       `-ImplicitCastExpr 0x2aa8a712978 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:51:59> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x2aa8a712898 <col:59> 'va_list':'char *' lvalue ParmVar 0x2aa8a712578 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x2aa8a712c40 <line:60:1, line:68:1> line:60:21 _swprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)' static inline
| |-ParmVarDecl 0x2aa8a7129c8 <col:56, col:66> col:66 used _String 'wchar_t *'
| |-ParmVarDecl 0x2aa8a712a40 <col:75, col:82> col:82 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2aa8a712ab8 <col:130, col:146> col:146 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x2aa8a712b30 <col:155, col:165> col:165 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| `-CompoundStmt 0x2aa8a7131d8 <line:61:1, line:68:1>
|   |-DeclStmt 0x2aa8a712d90 <line:62:5, col:21>
|   | `-VarDecl 0x2aa8a712d28 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x2aa8a712e28 <line:63:5, col:13>
|   | `-VarDecl 0x2aa8a712dc0 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x2aa8a712ed0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x2aa8a712eb8 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x2aa8a712e40 <col:34> '<builtin fn type>' Function 0x2aa8a704a08 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x2aa8a712e60 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:64:19> 'va_list':'char *' lvalue Var 0x2aa8a712d28 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x2aa8a712e98 <col:29> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x2aa8a712b30 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |-BinaryOperator 0x2aa8a7130d0 <line:65:5, col:72> 'int' '='
|   | |-DeclRefExpr 0x2aa8a712f00 <col:5> 'int' lvalue Var 0x2aa8a712dc0 '_Ret' 'int'
|   | `-CallExpr 0x2aa8a713010 <col:12, col:72> 'int'
|   |   |-ImplicitCastExpr 0x2aa8a712ff8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x2aa8a712f38 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x2aa8a706f98 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x2aa8a713058 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2aa8a712f58 <col:27> 'wchar_t *' lvalue ParmVar 0x2aa8a7129c8 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x2aa8a713070 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2aa8a712f78 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x2aa8a712a40 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x2aa8a713088 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2aa8a712f98 <col:44> 'const wchar_t *' lvalue ParmVar 0x2aa8a712ab8 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x2aa8a7130a0 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2aa8a712fb8 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x2aa8a712b30 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |   `-ImplicitCastExpr 0x2aa8a7130b8 <col:64> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x2aa8a712fd8 <col:64> 'va_list':'char *' lvalue Var 0x2aa8a712d28 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x2aa8a713168 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x2aa8a713150 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x2aa8a7130f0 <col:34> '<builtin fn type>' Function 0x2aa8a712120 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x2aa8a713130 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:66:17> 'va_list':'char *' lvalue Var 0x2aa8a712d28 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x2aa8a7131c8 <line:67:5, col:12>
|     `-ImplicitCastExpr 0x2aa8a7131b0 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x2aa8a713190 <col:12> 'int' lvalue Var 0x2aa8a712dc0 '_Ret' 'int'
|-FunctionDecl 0x2aa8a713568 <line:73:1, line:76:1> line:73:31 _vswprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' static inline
| |-ParmVarDecl 0x2aa8a713228 <col:67, col:77> col:77 used _String 'wchar_t *'
| |-ParmVarDecl 0x2aa8a7132a0 <col:86, col:93> col:93 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2aa8a713318 <col:141, col:157> col:157 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x2aa8a713390 <col:166, col:176> col:176 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x2aa8a713408 <col:187, col:195> col:195 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x2aa8a7137f0 <line:74:1, line:76:1>
|   `-ReturnStmt 0x2aa8a7137e0 <line:75:5, col:67>
|     `-CallExpr 0x2aa8a713720 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x2aa8a713708 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x2aa8a713648 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x2aa8a706f98 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x2aa8a713768 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x2aa8a713668 <col:27> 'wchar_t *' lvalue ParmVar 0x2aa8a713228 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x2aa8a713780 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x2aa8a713688 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x2aa8a7132a0 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x2aa8a713798 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x2aa8a7136a8 <col:44> 'const wchar_t *' lvalue ParmVar 0x2aa8a713318 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x2aa8a7137b0 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|       | `-DeclRefExpr 0x2aa8a7136c8 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x2aa8a713390 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|       `-ImplicitCastExpr 0x2aa8a7137c8 <col:64> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x2aa8a7136e8 <col:64> 'va_list':'char *' lvalue ParmVar 0x2aa8a713408 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x2aa8a713a38 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:555:24, col:129> col:42 _wtempnam 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2aa8a713818 <col:63, col:79> col:79 _Directory 'const wchar_t *'
| `-ParmVarDecl 0x2aa8a713890 <col:102, col:118> col:118 _FilePrefix 'const wchar_t *'
|-FunctionDecl 0x2aa8a713c88 <line:561:24, col:119> col:36 _vscwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2aa8a713b10 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2aa8a713b88 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2aa8a713f70 <line:562:24, col:159> col:36 _vscwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2aa8a713d60 <col:90, col:106> col:106 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2aa8a713dd8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2aa8a713e50 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2aa8a7142b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:563:158> col:71 fwscanf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2aa8a714140 <col:87, col:94> col:94 _File 'FILE *'
| |-ParmVarDecl 0x2aa8a7141b8 <col:130, col:146> col:146 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x2aa8a714368 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2aa8a714778 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:564:206> col:78 _fwscanf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2aa8a714568 <col:97, col:104> col:104 _File 'FILE *'
| |-ParmVarDecl 0x2aa8a7145e0 <col:150, col:166> col:166 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2aa8a714658 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2aa8a714830 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2aa8a714ae8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:568:28, col:131> col:40 fwscanf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2aa8a714970 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x2aa8a7149e8 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x2aa8a714dd0 <line:570:28, col:172> col:40 _fwscanf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2aa8a714bc0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x2aa8a714c38 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2aa8a714cb0 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2aa8a70e150 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:571:165> col:71 swscanf 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2aa8a714f70 <col:86, col:102> col:102 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2aa8a714fe8 <col:137, col:153> col:153 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x2aa8a70e200 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using swscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2aa8a70e6d8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:572:213> col:78 _swscanf_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2aa8a70e400 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2aa8a70e478 <col:157, col:173> col:173 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2aa8a70e4f0 <col:191, col:201> col:201 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2aa8a70e790 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2aa8a70ea48 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:574:40, col:149> col:52 swscanf_s 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2aa8a70e8d0 <col:69, col:84> col:84 _Src 'const wchar_t *'
| `-ParmVarDecl 0x2aa8a70e948 <col:121, col:137> col:137 _Format 'const wchar_t *'
|-FunctionDecl 0x2aa8a70ed30 <line:576:40, col:191> col:52 _swscanf_s_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2aa8a70eb20 <col:72, col:88> col:88 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2aa8a70eb98 <col:135, col:151> col:151 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2aa8a70ec10 <col:169, col:179> col:179 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2aa8a7111f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:577:219> col:77 _snwscanf 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2aa8a70eed0 <col:117, col:133> col:133 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2aa8a70ef48 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2aa8a70efc0 <col:191, col:207> col:207 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x2aa8a7112b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2aa8a711830 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:578:261> col:79 _snwscanf_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2aa8a7114b0 <col:121, col:137> col:137 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2aa8a711528 <col:148, col:155> col:155 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2aa8a7115a0 <col:205, col:221> col:221 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2aa8a711618 <col:239, col:249> col:249 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2aa8a7118f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2aa8a711c40 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:579:40, col:198> col:52 _snwscanf_s 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2aa8a711a30 <col:94, col:110> col:110 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2aa8a711aa8 <col:121, col:128> col:128 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2aa8a711b20 <col:170, col:186> col:186 _Format 'const wchar_t *'
|-FunctionDecl 0x2aa8a711fc8 <line:580:40, col:238> col:52 _snwscanf_s_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2aa8a711d20 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2aa8a711d98 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2aa8a711e10 <col:182, col:198> col:198 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2aa8a711e88 <col:216, col:226> col:226 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2aa8a70d280 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:581:134> col:70 wscanf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| |-ParmVarDecl 0x2aa8a70d1a0 <col:106, col:122> col:122 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x2aa8a70d328 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2aa8a70d6a0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:582:182> col:77 _wscanf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2aa8a70d528 <col:126, col:142> col:142 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2aa8a70d5a0 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2aa8a70d750 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2aa8a70d970 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:584:40, col:120> col:52 wscanf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x2aa8a70d890 <col:92, col:108> col:108 _Format 'const wchar_t *'
|-FunctionDecl 0x2aa8a70dbb8 <line:586:40, col:161> col:52 _wscanf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2aa8a70da40 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2aa8a70dab8 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2aa8a70deb8 <line:589:24, col:99> col:39 _wfdopen 'FILE *(int, const wchar_t *) __attribute__((cdecl))':'FILE *(int, const wchar_t *)'
| |-ParmVarDecl 0x2aa8a70dc98 <col:53, col:57> col:57 _FileHandle 'int'
| `-ParmVarDecl 0x2aa8a70dd10 <col:78, col:94> col:94 _Mode 'const wchar_t *'
|-FunctionDecl 0x2aa8a7152f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:590:144> col:74 _wfopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2aa8a70e050 <col:89, col:105> col:105 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x2aa8a715150 <col:123, col:139> col:139 _Mode 'const wchar_t *'
| `-DeprecatedAttr 0x2aa8a7153a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2aa8a7157b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:591:28, col:157> col:44 _wfopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2aa8a7154f0 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x2aa8a715568 <col:102, col:118> col:118 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x2aa8a7155e0 <col:136, col:152> col:152 _Mode 'const wchar_t *'
|-FunctionDecl 0x2aa8a715c10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:592:173> col:76 _wfreopen 'FILE *(const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x2aa8a715950 <col:93, col:109> col:109 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x2aa8a7159c8 <col:127, col:143> col:143 _Mode 'const wchar_t *'
| |-ParmVarDecl 0x2aa8a715a40 <col:158, col:165> col:165 _OldFile 'FILE *'
| `-DeprecatedAttr 0x2aa8a715cc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfreopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2aa8a70f138 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:593:28, col:184> col:44 _wfreopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x2aa8a715e10 <col:82, col:90> col:90 _File 'FILE **'
| |-ParmVarDecl 0x2aa8a715e88 <col:104, col:120> col:120 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x2aa8a715f00 <col:138, col:154> col:154 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x2aa8a715f78 <col:169, col:176> col:176 _OldFile 'FILE *'
|-FunctionDecl 0x2aa8a70f390 <line:597:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x2aa8a70f220 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x2aa8a70f5d0 <line:600:24, col:107> col:39 _wpopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2aa8a70f460 <col:54, col:69> col:69 _Command 'const wchar_t *'
| `-ParmVarDecl 0x2aa8a70f4d8 <col:86, col:102> col:102 _Mode 'const wchar_t *'
|-FunctionDecl 0x2aa8a70f788 <line:602:9, col:62> col:21 _wremove 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x2aa8a70f6a8 <col:37, col:53> col:53 _Filename 'const wchar_t *'
|-FunctionDecl 0x2aa8a70fa78 <line:603:28, col:127> col:44 _wtmpnam_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x2aa8a70f858 <col:84, col:94> col:94 _DstBuf 'wchar_t *'
| `-ParmVarDecl 0x2aa8a70f8d0 <col:108, col:115> col:115 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x2aa8a70fce8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:605:82 _wtmpnam 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x2aa8a70fc10 <col:118, col:127> col:127 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x2aa8a70fd90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wtmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2aa8a70ffa8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:607:28, col:78> col:43 _fgetwc_nolock 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x2aa8a70fed0 <col:66, col:73> col:73 _File 'FILE *'
|-FunctionDecl 0x2aa8a717268 <line:608:28, col:96> col:43 _fputwc_nolock 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x2aa8a710078 <col:63, col:71> col:71 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x2aa8a717170 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x2aa8a7174b0 <line:609:28, col:96> col:43 _ungetwc_nolock 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x2aa8a717340 <col:64, col:71> col:71 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x2aa8a7173b8 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x2aa8a717660 <line:670:9, col:53> col:22 _lock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x2aa8a717588 <col:41, col:48> col:48 _File 'FILE *'
|-FunctionDecl 0x2aa8a717808 <line:671:9, col:55> col:22 _unlock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x2aa8a717730 <col:43, col:50> col:50 _File 'FILE *'
|-FunctionDecl 0x2aa8a7179b8 <line:673:28, col:75> col:40 _fclose_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2aa8a7178d8 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x2aa8a717b68 <line:674:28, col:79> col:40 _fflush_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2aa8a717a88 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x2aa8a717ee0 <line:675:28, col:179> col:43 _fread_nolock 'size_t (void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x2aa8a717c40 <col:97, col:104> col:104 _DstBuf 'void *'
| |-ParmVarDecl 0x2aa8a717cb8 <col:118, col:125> col:125 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2aa8a717d30 <col:144, col:151> col:151 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2aa8a717da8 <col:167, col:174> col:174 _File 'FILE *'
|-FunctionDecl 0x2aa8a71f3c0 <line:676:28, col:203> col:43 _fread_nolock_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x2aa8a717fd0 <col:99, col:106> col:106 _DstBuf 'void *'
| |-ParmVarDecl 0x2aa8a718048 <col:120, col:127> col:127 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2aa8a7180c0 <col:142, col:149> col:149 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2aa8a71f1f0 <col:168, col:175> col:175 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2aa8a71f268 <col:191, col:198> col:198 _File 'FILE *'
|-FunctionDecl 0x2aa8a71f6d0 <line:677:28, col:111> col:40 _fseek_nolock 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x2aa8a71f4b0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x2aa8a71f530 <col:81, col:86> col:86 _Offset 'long'
| `-ParmVarDecl 0x2aa8a71f5b0 <col:100, col:104> col:104 _Origin 'int'
|-FunctionDecl 0x2aa8a71f890 <line:678:24, col:71> col:37 _ftell_nolock 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x2aa8a71f7b0 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x2aa8a71fb80 <line:679:28, col:117> col:40 _fseeki64_nolock 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x2aa8a71f960 <col:65, col:72> col:72 _File 'FILE *'
| |-ParmVarDecl 0x2aa8a71f9e0 <col:84, col:92> col:92 _Offset 'long long'
| `-ParmVarDecl 0x2aa8a71fa60 <col:106, col:110> col:110 _Origin 'int'
|-FunctionDecl 0x2aa8a71fd40 <line:680:24, col:77> col:40 _ftelli64_nolock 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x2aa8a71fc60 <col:65, col:72> col:72 _File 'FILE *'
|-FunctionDecl 0x2aa8a7200b8 <line:681:28, col:170> col:43 _fwrite_nolock 'size_t (const void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (const void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x2aa8a71fe18 <col:89, col:102> col:102 _DstBuf 'const void *'
| |-ParmVarDecl 0x2aa8a71fe90 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2aa8a71ff08 <col:135, col:142> col:142 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2aa8a71ff80 <col:158, col:165> col:165 _File 'FILE *'
|-FunctionDecl 0x2aa8a7182f8 <line:682:28, col:89> col:40 _ungetc_nolock 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2aa8a718180 <col:60, col:64> col:64 _Ch 'int'
| `-ParmVarDecl 0x2aa8a7181f8 <col:77, col:84> col:84 _File 'FILE *'
|-FunctionDecl 0x2aa8a718630 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:709:136> col:57 tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x2aa8a7184b0 <col:76, col:89> col:89 _Directory 'const char *'
| |-ParmVarDecl 0x2aa8a718530 <col:112, col:125> col:125 _FilePrefix 'const char *'
| `-DeprecatedAttr 0x2aa8a7186e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tempnam. See online help for details." ""
|-FunctionDecl 0x2aa8a718998 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:715:89> col:75 fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x2aa8a718a38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcloseall. See online help for details." ""
|-FunctionDecl 0x2aa8a718d78 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:716:127> col:71 fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x2aa8a718c00 <col:83, col:87> col:87 _FileHandle 'int'
| |-ParmVarDecl 0x2aa8a718c80 <col:107, col:120> col:120 _Format 'const char *'
| `-DeprecatedAttr 0x2aa8a718e28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fdopen. See online help for details." ""
|-FunctionDecl 0x2aa8a719190 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:717:87> col:74 fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x2aa8a719230 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fgetchar. See online help for details." ""
|-FunctionDecl 0x2aa8a7194d0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:718:92> col:68 fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x2aa8a7193f0 <col:80, col:87> col:87 _File 'FILE *'
| `-DeprecatedAttr 0x2aa8a719578 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fileno. See online help for details." ""
|-FunctionDecl 0x2aa8a7197f8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:719:87> col:74 flushall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x2aa8a719898 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _flushall. See online help for details." ""
|-FunctionDecl 0x2aa8a719b40 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:720:95> col:74 fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| |-ParmVarDecl 0x2aa8a719a60 <col:88, col:92> col:92 _Ch 'int'
| `-DeprecatedAttr 0x2aa8a719be8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fputchar. See online help for details." ""
|-FunctionDecl 0x2aa8a719ec8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:721:91> col:66 getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x2aa8a719de8 <col:79, col:86> col:86 _File 'FILE *'
| `-DeprecatedAttr 0x2aa8a719f70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _getw. See online help for details." ""
|-FunctionDecl 0x2aa8a720378 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:722:109> col:70 putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2aa8a720200 <col:80, col:84> col:84 _Ch 'int'
| |-ParmVarDecl 0x2aa8a720278 <col:97, col:104> col:104 _File 'FILE *'
| `-DeprecatedAttr 0x2aa8a720428 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putw. See online help for details." ""
|-FunctionDecl 0x2aa8a7206e8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:723:77> col:67 rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x2aa8a720788 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _rmtmp. See online help for details." ""
|-FunctionDecl 0x2aa8a7209c0 <D:\Microsoft Visual Studio 12.0\VC\include\errno.h:31:9, col:41> col:30 _errno 'int *(void) __attribute__((cdecl))':'int *(void)' extern
|-FunctionDecl 0x2aa8a720bd0 <line:34:1, col:43> col:17 _set_errno 'errno_t (int) __attribute__((cdecl))':'errno_t (int)'
| `-ParmVarDecl 0x2aa8a720a90 <col:33, col:37> col:37 _Value 'int'
|-FunctionDecl 0x2aa8a720e20 <line:35:1, col:46> col:17 _get_errno 'errno_t (int *) __attribute__((cdecl))':'errno_t (int *)'
| `-ParmVarDecl 0x2aa8a720ca8 <col:34, col:40> col:40 _Value 'int *'
|-FunctionDecl 0x2aa8a729200 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:35:9, col:112> col:22 used _wassert 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
| |-ParmVarDecl 0x2aa8a720ef0 <col:38, col:54> col:54 _Message 'const wchar_t *'
| |-ParmVarDecl 0x2aa8a720f68 <col:71, col:86> col:86 _File 'const wchar_t *'
| `-ParmVarDecl 0x2aa8a720fe8 <col:98, col:107> col:107 _Line 'unsigned int'
|-FunctionDecl 0x2aa8a7294d0 <.//openssl//file_jk/before\crypto\evp\bio_ok.c:81:1, col:53> col:12 invalid ok_write 'int (int *, const char *, int)' static
| |-ParmVarDecl 0x2aa8a7292e8 <col:21, col:26> col:26 invalid h 'int *'
| |-ParmVarDecl 0x2aa8a729368 <col:29, col:41> col:41 buf 'const char *'
| `-ParmVarDecl 0x2aa8a7293e8 <col:46, col:50> col:50 num 'int'
|-FunctionDecl 0x2aa8a729790 <line:82:1, col:47> col:12 invalid ok_read 'int (int *, char *, int)' static
| |-ParmVarDecl 0x2aa8a7295a0 <col:20, col:25> col:25 invalid h 'int *'
| |-ParmVarDecl 0x2aa8a729620 <col:28, col:34> col:34 buf 'char *'
| `-ParmVarDecl 0x2aa8a7296a0 <col:39, col:43> col:43 size 'int'
|-FunctionDecl 0x2aa8a729ae0 <line:83:1, col:59> col:13 invalid ok_ctrl 'long (int *, int, long, void *)' static
| |-ParmVarDecl 0x2aa8a729860 <col:21, col:26> col:26 invalid h 'int *'
| |-ParmVarDecl 0x2aa8a7298e0 <col:29, col:33> col:33 cmd 'int'
| |-ParmVarDecl 0x2aa8a729960 <col:38, col:43> col:43 arg1 'long'
| `-ParmVarDecl 0x2aa8a7299e0 <col:49, col:55> col:55 arg2 'void *'
|-FunctionDecl 0x2aa8a729c50 <line:84:1, col:25> col:12 invalid ok_new 'int (int *)' static
| `-ParmVarDecl 0x2aa8a729bb8 <col:19, col:24> col:24 invalid h 'int *'
|-FunctionDecl 0x2aa8a729da8 <line:85:1, col:29> col:12 invalid ok_free 'int (int *)' static
| `-ParmVarDecl 0x2aa8a729d10 <col:20, col:25> col:25 invalid data 'int *'
|-FunctionDecl 0x2aa8a72a050 <line:86:1, col:62> col:13 invalid ok_callback_ctrl 'long (int *, int, int *)' static
| |-ParmVarDecl 0x2aa8a729e68 <col:30, col:35> col:35 invalid h 'int *'
| |-ParmVarDecl 0x2aa8a729ee8 <col:38, col:42> col:42 cmd 'int'
| `-ParmVarDecl 0x2aa8a729f68 <col:47, col:60> col:60 invalid fp 'int *'
|-FunctionDecl 0x2aa8a72b220 <line:88:1, col:33> col:19 invalid sig_out 'int (int *)' static
| `-ParmVarDecl 0x2aa8a72a120 <col:27, col:32> col:32 invalid b 'int *'
|-FunctionDecl 0x2aa8a72b378 <line:89:1, col:32> col:19 invalid sig_in 'int (int *)' static
| `-ParmVarDecl 0x2aa8a72b2e0 <col:26, col:31> col:31 invalid b 'int *'
|-FunctionDecl 0x2aa8a72b4d0 <line:90:1, col:35> col:19 invalid block_out 'int (int *)' static
| `-ParmVarDecl 0x2aa8a72b438 <col:29, col:34> col:34 invalid b 'int *'
|-FunctionDecl 0x2aa8a72b628 <line:91:1, col:34> col:19 invalid block_in 'int (int *)' static
| `-ParmVarDecl 0x2aa8a72b590 <col:28, col:33> col:33 invalid b 'int *'
|-RecordDecl 0x2aa8a72b6d0 <line:97:9, line:108:1> line:97:16 invalid struct ok_struct definition
| |-FieldDecl 0x2aa8a72b7a0 <line:98:5, col:12> col:12 referenced buf_len 'size_t':'unsigned long long'
| |-FieldDecl 0x2aa8a72b808 <line:99:5, col:12> col:12 referenced buf_off 'size_t':'unsigned long long'
| |-FieldDecl 0x2aa8a72b870 <line:100:5, col:12> col:12 referenced buf_len_save 'size_t':'unsigned long long'
| |-FieldDecl 0x2aa8a72b8d8 <line:101:5, col:12> col:12 referenced buf_off_save 'size_t':'unsigned long long'
| |-FieldDecl 0x2aa8a72b948 <line:102:5, col:9> col:9 referenced cont 'int'
| |-FieldDecl 0x2aa8a72b9b8 <line:103:5, col:9> col:9 referenced finished 'int'
| |-FieldDecl 0x2aa8a72ba28 <line:104:5, col:17> col:17 invalid md 'int *'
| |-FieldDecl 0x2aa8a72ba98 <line:105:5, col:9> col:9 referenced blockout 'int'
| |-FieldDecl 0x2aa8a72bb08 <line:106:5, col:9> col:9 referenced sigio 'int'
| `-FieldDecl 0x2aa8a72bc78 <line:107:5, col:19> col:19 invalid buf 'unsigned char'
|-TypedefDecl 0x2aa8a72bd28 <line:97:1, line:108:3> col:3 referenced BIO_OK_CTX 'struct ok_struct':'struct ok_struct'
| `-ElaboratedType 0x2aa8a72bcd0 'struct ok_struct' sugar
|   `-RecordType 0x2aa8a72b770 'struct ok_struct'
|     `-Record 0x2aa8a72b6d0 'ok_struct'
|-VarDecl 0x2aa8a72bdb0 <line:110:1, col:25> col:25 invalid methods_ok 'const int' static
|-FunctionDecl 0x2aa8a72c050 <line:123:1, line:126:1> line:123:19 invalid BIO_f_reliable 'const int *(void)'
| `-CompoundStmt 0x2aa8a72c108 <line:124:1, line:126:1>
|-FunctionDecl 0x2aa8a7241b0 <line:128:1, line:147:1> line:128:12 invalid ok_new 'int (int *)' static
| |-ParmVarDecl 0x2aa8a72c130 <col:19, col:24> col:24 invalid bi 'int *'
| `-CompoundStmt 0x2aa8a724fb8 <line:129:1, line:147:1>
|   |-DeclStmt 0x2aa8a724360 <line:130:5, col:20>
|   | `-VarDecl 0x2aa8a7242f8 <col:5, col:17> col:17 used ctx 'BIO_OK_CTX *'
|   |-BinaryOperator 0x2aa8a724600 <line:132:5, col:38> 'BIO_OK_CTX *' '='
|   | |-DeclRefExpr 0x2aa8a724378 <col:5> 'BIO_OK_CTX *' lvalue Var 0x2aa8a7242f8 'ctx' 'BIO_OK_CTX *'
|   | `-ImplicitCastExpr 0x2aa8a7245e8 <col:11, col:38> 'BIO_OK_CTX *' <IntegralToPointer>
|   |   `-CallExpr 0x2aa8a7245c0 <col:11, col:38> 'int'
|   |     |-ImplicitCastExpr 0x2aa8a7245a8 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x2aa8a7244c8 <col:11> 'int ()' Function 0x2aa8a724400 'OPENSSL_zalloc' 'int ()'
|   |     `-UnaryExprOrTypeTraitExpr 0x2aa8a724558 <col:26, col:37> 'unsigned long long' sizeof
|   |       `-ParenExpr 0x2aa8a724538 <col:32, col:37> 'BIO_OK_CTX':'struct ok_struct' lvalue
|   |         `-UnaryOperator 0x2aa8a724520 <col:33, col:34> 'BIO_OK_CTX':'struct ok_struct' lvalue prefix '*' cannot overflow
|   |           `-ImplicitCastExpr 0x2aa8a724508 <col:34> 'BIO_OK_CTX *' <LValueToRValue>
|   |             `-DeclRefExpr 0x2aa8a7244e8 <col:34> 'BIO_OK_CTX *' lvalue Var 0x2aa8a7242f8 'ctx' 'BIO_OK_CTX *' non_odr_use_unevaluated
|   |-IfStmt 0x2aa8a724750 <line:133:5, line:134:16>
|   | |-BinaryOperator 0x2aa8a7246f8 <line:133:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x2aa8a7246c8 <.//openssl//file_jk/before\crypto\evp\bio_ok.c:133:9> 'BIO_OK_CTX *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2aa8a724620 <col:9> 'BIO_OK_CTX *' lvalue Var 0x2aa8a7242f8 'ctx' 'BIO_OK_CTX *'
|   | | `-ImplicitCastExpr 0x2aa8a7246e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'BIO_OK_CTX *' <BitCast>
|   | |   `-ParenExpr 0x2aa8a7246a8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x2aa8a724680 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x2aa8a724640 <col:26> 'int' 0
|   | `-ReturnStmt 0x2aa8a724740 <.//openssl//file_jk/before\crypto\evp\bio_ok.c:134:9, col:16>
|   |   `-IntegerLiteral 0x2aa8a724718 <col:16> 'int' 0
|   |-BinaryOperator 0x2aa8a7247f8 <line:136:5, col:17> 'int' '='
|   | |-MemberExpr 0x2aa8a7247a0 <col:5, col:10> 'int' lvalue ->cont 0x2aa8a72b948
|   | | `-ImplicitCastExpr 0x2aa8a724788 <col:5> 'BIO_OK_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2aa8a724768 <col:5> 'BIO_OK_CTX *' lvalue Var 0x2aa8a7242f8 'ctx' 'BIO_OK_CTX *'
|   | `-IntegerLiteral 0x2aa8a7247d0 <col:17> 'int' 1
|   |-BinaryOperator 0x2aa8a7248a8 <line:137:5, col:18> 'int' '='
|   | |-MemberExpr 0x2aa8a724850 <col:5, col:10> 'int' lvalue ->sigio 0x2aa8a72bb08
|   | | `-ImplicitCastExpr 0x2aa8a724838 <col:5> 'BIO_OK_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2aa8a724818 <col:5> 'BIO_OK_CTX *' lvalue Var 0x2aa8a7242f8 'ctx' 'BIO_OK_CTX *'
|   | `-IntegerLiteral 0x2aa8a724880 <col:18> 'int' 1
|   |-IfStmt 0x2aa8a724d00 <line:139:5, line:142:5>
|   | |-OpaqueValueExpr 0x2aa8a724ce8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x2aa8a724cc8 <line:139:26, line:142:5>
|   |   |-CallExpr 0x2aa8a724c50 <line:140:9, col:25> 'int'
|   |   | |-ImplicitCastExpr 0x2aa8a724c38 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x2aa8a724bf8 <col:9> 'int ()' Function 0x2aa8a724b30 'OPENSSL_free' 'int ()'
|   |   | `-ImplicitCastExpr 0x2aa8a724c78 <col:22> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x2aa8a724c18 <col:22> 'BIO_OK_CTX *' lvalue Var 0x2aa8a7242f8 'ctx' 'BIO_OK_CTX *'
|   |   `-ReturnStmt 0x2aa8a724cb8 <line:141:9, col:16>
|   |     `-IntegerLiteral 0x2aa8a724c90 <col:16> 'int' 0
|   `-ReturnStmt 0x2aa8a724fa8 <line:146:5, col:12>
|     `-IntegerLiteral 0x2aa8a724f80 <col:12> 'int' 1
|-FunctionDecl 0x2aa8a7250b0 <line:149:1, line:164:1> line:149:12 invalid ok_free 'int (int *)' static
| |-ParmVarDecl 0x2aa8a725018 <col:20, col:25> col:25 invalid a 'int *'
| `-CompoundStmt 0x2aa8a72c918 <line:150:1, line:164:1>
|   |-DeclStmt 0x2aa8a72c298 <line:151:5, col:20>
|   | `-VarDecl 0x2aa8a72c230 <col:5, col:17> col:17 used ctx 'BIO_OK_CTX *'
|   |-IfStmt 0x2aa8a72c388 <line:153:5, line:154:16>
|   | |-OpaqueValueExpr 0x2aa8a72c370 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x2aa8a72c360 <col:9, col:16>
|   |   `-IntegerLiteral 0x2aa8a72c338 <col:16> 'int' 0
|   |-CallExpr 0x2aa8a72c7a8 <line:159:5, col:47> 'int'
|   | |-ImplicitCastExpr 0x2aa8a72c790 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x2aa8a72c720 <col:5> 'int ()' Function 0x2aa8a72c658 'OPENSSL_clear_free' 'int ()'
|   | |-ImplicitCastExpr 0x2aa8a72c7d8 <col:24> 'BIO_OK_CTX *' <LValueToRValue>
|   | | `-DeclRefExpr 0x2aa8a72c740 <col:24> 'BIO_OK_CTX *' lvalue Var 0x2aa8a72c230 'ctx' 'BIO_OK_CTX *'
|   | `-UnaryExprOrTypeTraitExpr 0x2aa8a72c770 <col:29, col:46> 'unsigned long long' sizeof 'BIO_OK_CTX':'struct ok_struct'
|   `-ReturnStmt 0x2aa8a72c908 <line:163:5, col:12>
|     `-IntegerLiteral 0x2aa8a72c8e0 <col:12> 'int' 1
|-FunctionDecl 0x2aa8a72cb08 <line:166:1, line:250:1> line:166:12 invalid ok_read 'int (int *, char *, int)' static
| |-ParmVarDecl 0x2aa8a72c960 <col:20, col:25> col:25 invalid b 'int *'
| |-ParmVarDecl 0x2aa8a72c9e0 <col:28, col:34> col:34 used out 'char *'
| |-ParmVarDecl 0x2aa8a72ca60 <col:39, col:43> col:43 used outl 'int'
| `-CompoundStmt 0x2aa8a731610 <line:167:1, line:250:1>
|   |-DeclStmt 0x2aa8a72cda0 <line:168:5, col:22>
|   | |-VarDecl 0x2aa8a72cbf0 <col:5, col:15> col:9 used ret 'int' cinit
|   | | `-IntegerLiteral 0x2aa8a72cc58 <col:15> 'int' 0
|   | |-VarDecl 0x2aa8a72cc98 <col:5, col:18> col:18 used i 'int'
|   | `-VarDecl 0x2aa8a72cd18 <col:5, col:21> col:21 used n 'int'
|   |-DeclStmt 0x2aa8a72ce30 <line:169:5, col:20>
|   | `-VarDecl 0x2aa8a72cdc8 <col:5, col:17> col:17 used ctx 'BIO_OK_CTX *'
|   |-IfStmt 0x2aa8a72cf90 <line:172:5, line:173:16>
|   | |-BinaryOperator 0x2aa8a72cf38 <line:172:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x2aa8a72cf08 <.//openssl//file_jk/before\crypto\evp\bio_ok.c:172:9> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2aa8a72ce48 <col:9> 'char *' lvalue ParmVar 0x2aa8a72c9e0 'out' 'char *'
|   | | `-ImplicitCastExpr 0x2aa8a72cf20 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x2aa8a72cee8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x2aa8a72cec0 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x2aa8a72ce80 <col:26> 'int' 0
|   | `-ReturnStmt 0x2aa8a72cf80 <.//openssl//file_jk/before\crypto\evp\bio_ok.c:173:9, col:16>
|   |   `-IntegerLiteral 0x2aa8a72cf58 <col:16> 'int' 0
|   |-IfStmt 0x2aa8a7253d0 <line:178:5, line:179:16>
|   | |-OpaqueValueExpr 0x2aa8a7253b8 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x2aa8a7253a8 <col:9, col:16>
|   |   `-IntegerLiteral 0x2aa8a725380 <col:16> 'int' 0
|   |-WhileStmt 0x2aa8a731480 <line:181:5, line:245:5>
|   | |-BinaryOperator 0x2aa8a725460 <line:181:12, col:19> 'int' '>'
|   | | |-ImplicitCastExpr 0x2aa8a725448 <col:12> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2aa8a7253e8 <col:12> 'int' lvalue ParmVar 0x2aa8a72ca60 'outl' 'int'
|   | | `-IntegerLiteral 0x2aa8a725420 <col:19> 'int' 0
|   | `-CompoundStmt 0x2aa8a731438 <col:22, line:245:5>
|   |   |-IfStmt 0x2aa8a730938 <line:184:9, line:210:9>
|   |   | |-ImplicitCastExpr 0x2aa8a7254e8 <line:184:13, col:18> 'int' <LValueToRValue>
|   |   | | `-MemberExpr 0x2aa8a7254b8 <col:13, col:18> 'int' lvalue ->blockout 0x2aa8a72ba98
|   |   | |   `-ImplicitCastExpr 0x2aa8a7254a0 <col:13> 'BIO_OK_CTX *' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x2aa8a725480 <col:13> 'BIO_OK_CTX *' lvalue Var 0x2aa8a72cdc8 'ctx' 'BIO_OK_CTX *'
|   |   | `-CompoundStmt 0x2aa8a7308f0 <col:28, line:210:9>
|   |   |   |-BinaryOperator 0x2aa8a725670 <line:185:13, col:37> 'int' '='
|   |   |   | |-DeclRefExpr 0x2aa8a725500 <col:13> 'int' lvalue Var 0x2aa8a72cc98 'i' 'int'
|   |   |   | `-ImplicitCastExpr 0x2aa8a725658 <col:17, col:37> 'int' <IntegralCast>
|   |   |   |   `-BinaryOperator 0x2aa8a725638 <col:17, col:37> 'unsigned long long' '-'
|   |   |   |     |-ImplicitCastExpr 0x2aa8a725608 <col:17, col:22> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   |     | `-MemberExpr 0x2aa8a725570 <col:17, col:22> 'size_t':'unsigned long long' lvalue ->buf_len 0x2aa8a72b7a0
|   |   |   |     |   `-ImplicitCastExpr 0x2aa8a725558 <col:17> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |   |     |     `-DeclRefExpr 0x2aa8a725538 <col:17> 'BIO_OK_CTX *' lvalue Var 0x2aa8a72cdc8 'ctx' 'BIO_OK_CTX *'
|   |   |   |     `-ImplicitCastExpr 0x2aa8a725620 <col:32, col:37> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   |       `-MemberExpr 0x2aa8a7255d8 <col:32, col:37> 'size_t':'unsigned long long' lvalue ->buf_off 0x2aa8a72b808
|   |   |   |         `-ImplicitCastExpr 0x2aa8a7255c0 <col:32> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |   |           `-DeclRefExpr 0x2aa8a7255a0 <col:32> 'BIO_OK_CTX *' lvalue Var 0x2aa8a72cdc8 'ctx' 'BIO_OK_CTX *'
|   |   |   |-IfStmt 0x2aa8a725798 <line:186:13, line:187:21>
|   |   |   | |-BinaryOperator 0x2aa8a725700 <line:186:17, col:21> 'int' '>'
|   |   |   | | |-ImplicitCastExpr 0x2aa8a7256d0 <col:17> 'int' <LValueToRValue>
|   |   |   | | | `-DeclRefExpr 0x2aa8a725690 <col:17> 'int' lvalue Var 0x2aa8a72cc98 'i' 'int'
|   |   |   | | `-ImplicitCastExpr 0x2aa8a7256e8 <col:21> 'int' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x2aa8a7256b0 <col:21> 'int' lvalue ParmVar 0x2aa8a72ca60 'outl' 'int'
|   |   |   | `-BinaryOperator 0x2aa8a725778 <line:187:17, col:21> 'int' '='
|   |   |   |   |-DeclRefExpr 0x2aa8a725720 <col:17> 'int' lvalue Var 0x2aa8a72cc98 'i' 'int'
|   |   |   |   `-ImplicitCastExpr 0x2aa8a725760 <col:21> 'int' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x2aa8a725740 <col:21> 'int' lvalue ParmVar 0x2aa8a72ca60 'outl' 'int'
|   |   |   |-CompoundAssignOperator 0x2aa8a725b68 <line:189:13, col:20> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |   | |-DeclRefExpr 0x2aa8a725af8 <col:13> 'int' lvalue Var 0x2aa8a72cbf0 'ret' 'int'
|   |   |   | `-ImplicitCastExpr 0x2aa8a725b50 <col:20> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x2aa8a725b30 <col:20> 'int' lvalue Var 0x2aa8a72cc98 'i' 'int'
|   |   |   |-CompoundAssignOperator 0x2aa8a725bf0 <line:190:13, col:20> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
|   |   |   | |-DeclRefExpr 0x2aa8a725b98 <col:13> 'char *' lvalue ParmVar 0x2aa8a72c9e0 'out' 'char *'
|   |   |   | `-ImplicitCastExpr 0x2aa8a725bd8 <col:20> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x2aa8a725bb8 <col:20> 'int' lvalue Var 0x2aa8a72cc98 'i' 'int'
|   |   |   |-CompoundAssignOperator 0x2aa8a725c78 <line:191:13, col:21> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |   | |-DeclRefExpr 0x2aa8a725c20 <col:13> 'int' lvalue ParmVar 0x2aa8a72ca60 'outl' 'int'
|   |   |   | `-ImplicitCastExpr 0x2aa8a725c60 <col:21> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x2aa8a725c40 <col:21> 'int' lvalue Var 0x2aa8a72cc98 'i' 'int'
|   |   |   |-CompoundAssignOperator 0x2aa8a725d60 <line:192:13, col:29> 'size_t':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |   |   | |-MemberExpr 0x2aa8a725ce0 <col:13, col:18> 'size_t':'unsigned long long' lvalue ->buf_off 0x2aa8a72b808
|   |   |   | | `-ImplicitCastExpr 0x2aa8a725cc8 <col:13> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x2aa8a725ca8 <col:13> 'BIO_OK_CTX *' lvalue Var 0x2aa8a72cdc8 'ctx' 'BIO_OK_CTX *'
|   |   |   | `-ImplicitCastExpr 0x2aa8a725d48 <col:29> 'unsigned long long' <IntegralCast>
|   |   |   |   `-ImplicitCastExpr 0x2aa8a725d30 <col:29> 'int' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x2aa8a725d10 <col:29> 'int' lvalue Var 0x2aa8a72cc98 'i' 'int'
|   |   |   `-IfStmt 0x2aa8a7308d8 <line:195:13, line:209:13>
|   |   |     |-BinaryOperator 0x2aa8a725e90 <line:195:17, col:38> 'int' '=='
|   |   |     | |-ImplicitCastExpr 0x2aa8a725e60 <col:17, col:22> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |     | | `-MemberExpr 0x2aa8a725dc8 <col:17, col:22> 'size_t':'unsigned long long' lvalue ->buf_len 0x2aa8a72b7a0
|   |   |     | |   `-ImplicitCastExpr 0x2aa8a725db0 <col:17> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |     | |     `-DeclRefExpr 0x2aa8a725d90 <col:17> 'BIO_OK_CTX *' lvalue Var 0x2aa8a72cdc8 'ctx' 'BIO_OK_CTX *'
|   |   |     | `-ImplicitCastExpr 0x2aa8a725e78 <col:33, col:38> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |     |   `-MemberExpr 0x2aa8a725e30 <col:33, col:38> 'size_t':'unsigned long long' lvalue ->buf_off 0x2aa8a72b808
|   |   |     |     `-ImplicitCastExpr 0x2aa8a725e18 <col:33> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |     |       `-DeclRefExpr 0x2aa8a725df8 <col:33> 'BIO_OK_CTX *' lvalue Var 0x2aa8a72cdc8 'ctx' 'BIO_OK_CTX *'
|   |   |     `-CompoundStmt 0x2aa8a7308b0 <col:47, line:209:13>
|   |   |       |-BinaryOperator 0x2aa8a725f58 <line:196:17, col:32> 'size_t':'unsigned long long' '='
|   |   |       | |-MemberExpr 0x2aa8a725ee8 <col:17, col:22> 'size_t':'unsigned long long' lvalue ->buf_off 0x2aa8a72b808
|   |   |       | | `-ImplicitCastExpr 0x2aa8a725ed0 <col:17> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |       | |   `-DeclRefExpr 0x2aa8a725eb0 <col:17> 'BIO_OK_CTX *' lvalue Var 0x2aa8a72cdc8 'ctx' 'BIO_OK_CTX *'
|   |   |       | `-ImplicitCastExpr 0x2aa8a725f40 <col:32> 'size_t':'unsigned long long' <IntegralCast>
|   |   |       |   `-IntegerLiteral 0x2aa8a725f18 <col:32> 'int' 0
|   |   |       |-IfStmt 0x2aa8a7307d8 <line:201:17, line:207:17> has_else
|   |   |       | |-BinaryOperator 0x2aa8a7260d8 <line:201:21, col:61> 'int' '>'
|   |   |       | | |-BinaryOperator 0x2aa8a726078 <col:21, col:46> 'unsigned long long' '-'
|   |   |       | | | |-ImplicitCastExpr 0x2aa8a726048 <col:21, col:26> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |       | | | | `-MemberExpr 0x2aa8a725fb0 <col:21, col:26> 'size_t':'unsigned long long' lvalue ->buf_len_save 0x2aa8a72b870
|   |   |       | | | |   `-ImplicitCastExpr 0x2aa8a725f98 <col:21> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |       | | | |     `-DeclRefExpr 0x2aa8a725f78 <col:21> 'BIO_OK_CTX *' lvalue Var 0x2aa8a72cdc8 'ctx' 'BIO_OK_CTX *'
|   |   |       | | | `-ImplicitCastExpr 0x2aa8a726060 <col:41, col:46> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |       | | |   `-MemberExpr 0x2aa8a726018 <col:41, col:46> 'size_t':'unsigned long long' lvalue ->buf_off_save 0x2aa8a72b8d8
|   |   |       | | |     `-ImplicitCastExpr 0x2aa8a726000 <col:41> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |       | | |       `-DeclRefExpr 0x2aa8a725fe0 <col:41> 'BIO_OK_CTX *' lvalue Var 0x2aa8a72cdc8 'ctx' 'BIO_OK_CTX *'
|   |   |       | | `-ImplicitCastExpr 0x2aa8a7260c0 <col:61> 'unsigned long long' <IntegralCast>
|   |   |       | |   `-IntegerLiteral 0x2aa8a726098 <col:61> 'int' 0
|   |   |       | |-CompoundStmt 0x2aa8a7306e0 <col:64, line:205:17>
|   |   |       | | `-BinaryOperator 0x2aa8a730358 <line:202:21, col:61> 'size_t':'unsigned long long' '='
|   |   |       | |   |-MemberExpr 0x2aa8a726130 <col:21, col:26> 'size_t':'unsigned long long' lvalue ->buf_len 0x2aa8a72b7a0
|   |   |       | |   | `-ImplicitCastExpr 0x2aa8a726118 <col:21> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |       | |   |   `-DeclRefExpr 0x2aa8a7260f8 <col:21> 'BIO_OK_CTX *' lvalue Var 0x2aa8a72cdc8 'ctx' 'BIO_OK_CTX *'
|   |   |       | |   `-BinaryOperator 0x2aa8a730338 <col:36, col:61> 'unsigned long long' '-'
|   |   |       | |     |-ImplicitCastExpr 0x2aa8a730308 <col:36, col:41> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |       | |     | `-MemberExpr 0x2aa8a730270 <col:36, col:41> 'size_t':'unsigned long long' lvalue ->buf_len_save 0x2aa8a72b870
|   |   |       | |     |   `-ImplicitCastExpr 0x2aa8a726180 <col:36> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |       | |     |     `-DeclRefExpr 0x2aa8a726160 <col:36> 'BIO_OK_CTX *' lvalue Var 0x2aa8a72cdc8 'ctx' 'BIO_OK_CTX *'
|   |   |       | |     `-ImplicitCastExpr 0x2aa8a730320 <col:56, col:61> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |       | |       `-MemberExpr 0x2aa8a7302d8 <col:56, col:61> 'size_t':'unsigned long long' lvalue ->buf_off_save 0x2aa8a72b8d8
|   |   |       | |         `-ImplicitCastExpr 0x2aa8a7302c0 <col:56> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |       | |           `-DeclRefExpr 0x2aa8a7302a0 <col:56> 'BIO_OK_CTX *' lvalue Var 0x2aa8a72cdc8 'ctx' 'BIO_OK_CTX *'
|   |   |       | `-CompoundStmt 0x2aa8a7307c0 <line:205:24, line:207:17>
|   |   |       |   `-BinaryOperator 0x2aa8a7307a0 <line:206:21, col:36> 'size_t':'unsigned long long' '='
|   |   |       |     |-MemberExpr 0x2aa8a730730 <col:21, col:26> 'size_t':'unsigned long long' lvalue ->buf_len 0x2aa8a72b7a0
|   |   |       |     | `-ImplicitCastExpr 0x2aa8a730718 <col:21> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |       |     |   `-DeclRefExpr 0x2aa8a7306f8 <col:21> 'BIO_OK_CTX *' lvalue Var 0x2aa8a72cdc8 'ctx' 'BIO_OK_CTX *'
|   |   |       |     `-ImplicitCastExpr 0x2aa8a730788 <col:36> 'size_t':'unsigned long long' <IntegralCast>
|   |   |       |       `-IntegerLiteral 0x2aa8a730760 <col:36> 'int' 0
|   |   |       `-BinaryOperator 0x2aa8a730890 <line:208:17, col:33> 'int' '='
|   |   |         |-MemberExpr 0x2aa8a730838 <col:17, col:22> 'int' lvalue ->blockout 0x2aa8a72ba98
|   |   |         | `-ImplicitCastExpr 0x2aa8a730820 <col:17> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |         |   `-DeclRefExpr 0x2aa8a730800 <col:17> 'BIO_OK_CTX *' lvalue Var 0x2aa8a72cdc8 'ctx' 'BIO_OK_CTX *'
|   |   |         `-IntegerLiteral 0x2aa8a730868 <col:33> 'int' 0
|   |   |-IfStmt 0x2aa8a7309d8 <line:213:9, line:214:13>
|   |   | |-BinaryOperator 0x2aa8a7309b0 <line:213:13, col:21> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x2aa8a730998 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x2aa8a730950 <col:13> 'int' lvalue ParmVar 0x2aa8a72ca60 'outl' 'int'
|   |   | | `-IntegerLiteral 0x2aa8a730970 <col:21> 'int' 0
|   |   | `-BreakStmt 0x2aa8a7309d0 <line:214:13>
|   |   |-IfStmt 0x2aa8a730e08 <line:220:9, line:221:13>
|   |   | |-BinaryOperator 0x2aa8a730de0 <line:220:13, col:18> 'int' '<='
|   |   | | |-ImplicitCastExpr 0x2aa8a730dc8 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x2aa8a730d80 <col:13> 'int' lvalue Var 0x2aa8a72cc98 'i' 'int'
|   |   | | `-IntegerLiteral 0x2aa8a730da0 <col:18> 'int' 0
|   |   | `-BreakStmt 0x2aa8a730e00 <line:221:13>
|   |   |-CompoundAssignOperator 0x2aa8a730ed8 <line:223:9, col:25> 'size_t':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |   | |-MemberExpr 0x2aa8a730e58 <col:9, col:14> 'size_t':'unsigned long long' lvalue ->buf_len 0x2aa8a72b7a0
|   |   | | `-ImplicitCastExpr 0x2aa8a730e40 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2aa8a730e20 <col:9> 'BIO_OK_CTX *' lvalue Var 0x2aa8a72cdc8 'ctx' 'BIO_OK_CTX *'
|   |   | `-ImplicitCastExpr 0x2aa8a730ec0 <col:25> 'unsigned long long' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x2aa8a730ea8 <col:25> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x2aa8a730e88 <col:25> 'int' lvalue Var 0x2aa8a72cc98 'i' 'int'
|   |   |-IfStmt 0x2aa8a731178 <line:226:9, line:231:9>
|   |   | |-BinaryOperator 0x2aa8a730fb0 <line:226:13, col:27> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x2aa8a730f98 <col:13, col:18> 'int' <LValueToRValue>
|   |   | | | `-MemberExpr 0x2aa8a730f40 <col:13, col:18> 'int' lvalue ->sigio 0x2aa8a72bb08
|   |   | | |   `-ImplicitCastExpr 0x2aa8a730f28 <col:13> 'BIO_OK_CTX *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x2aa8a730f08 <col:13> 'BIO_OK_CTX *' lvalue Var 0x2aa8a72cdc8 'ctx' 'BIO_OK_CTX *'
|   |   | | `-IntegerLiteral 0x2aa8a730f70 <col:27> 'int' 1
|   |   | `-CompoundStmt 0x2aa8a731160 <col:30, line:231:9>
|   |   |   `-IfStmt 0x2aa8a731148 <line:227:13, line:230:13>
|   |   |     |-OpaqueValueExpr 0x2aa8a731130 <<invalid sloc>> '_Bool'
|   |   |     `-CompoundStmt 0x2aa8a731118 <line:227:29, line:230:13>
|   |   |       `-ReturnStmt 0x2aa8a731108 <line:229:17, col:24>
|   |   |         `-IntegerLiteral 0x2aa8a7310e0 <col:24> 'int' 0
|   |   |-IfStmt 0x2aa8a731338 <line:234:9, line:239:9>
|   |   | |-BinaryOperator 0x2aa8a731238 <line:234:13, col:27> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x2aa8a731220 <col:13, col:18> 'int' <LValueToRValue>
|   |   | | | `-MemberExpr 0x2aa8a7311c8 <col:13, col:18> 'int' lvalue ->sigio 0x2aa8a72bb08
|   |   | | |   `-ImplicitCastExpr 0x2aa8a7311b0 <col:13> 'BIO_OK_CTX *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x2aa8a731190 <col:13> 'BIO_OK_CTX *' lvalue Var 0x2aa8a72cdc8 'ctx' 'BIO_OK_CTX *'
|   |   | | `-IntegerLiteral 0x2aa8a7311f8 <col:27> 'int' 0
|   |   | `-CompoundStmt 0x2aa8a731320 <col:30, line:239:9>
|   |   |   `-IfStmt 0x2aa8a731308 <line:235:13, line:238:13>
|   |   |     |-OpaqueValueExpr 0x2aa8a7312f0 <<invalid sloc>> '_Bool'
|   |   |     `-CompoundStmt 0x2aa8a7312d8 <line:235:31, line:238:13>
|   |   |       `-ReturnStmt 0x2aa8a7312c8 <line:237:17, col:24>
|   |   |         `-IntegerLiteral 0x2aa8a7312a0 <col:24> 'int' 0
|   |   `-IfStmt 0x2aa8a731420 <line:242:9, line:243:13>
|   |     |-BinaryOperator 0x2aa8a7313f8 <line:242:13, col:26> 'int' '<='
|   |     | |-ImplicitCastExpr 0x2aa8a7313e0 <col:13, col:18> 'int' <LValueToRValue>
|   |     | | `-MemberExpr 0x2aa8a731388 <col:13, col:18> 'int' lvalue ->cont 0x2aa8a72b948
|   |     | |   `-ImplicitCastExpr 0x2aa8a731370 <col:13> 'BIO_OK_CTX *' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x2aa8a731350 <col:13> 'BIO_OK_CTX *' lvalue Var 0x2aa8a72cdc8 'ctx' 'BIO_OK_CTX *'
|   |     | `-IntegerLiteral 0x2aa8a7313b8 <col:26> 'int' 0
|   |     `-BreakStmt 0x2aa8a731418 <line:243:13>
|   `-ReturnStmt 0x2aa8a731600 <line:249:5, col:12>
|     `-ImplicitCastExpr 0x2aa8a7315e8 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x2aa8a7315c8 <col:12> 'int' lvalue Var 0x2aa8a72cbf0 'ret' 'int'
|-FunctionDecl 0x2aa8a7257f0 <line:188:13> col:13 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x2aa8a725890 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x2aa8a7258f8 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x2aa8a725960 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2aa8a730378 <line:203:21> col:21 implicit used memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x2aa8a730418 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x2aa8a730480 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x2aa8a7304e8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2aa8a731810 <line:252:1, line:315:1> line:252:12 invalid ok_write 'int (int *, const char *, int)' static
| |-ParmVarDecl 0x2aa8a731668 <col:21, col:26> col:26 invalid b 'int *'
| |-ParmVarDecl 0x2aa8a7316e8 <col:29, col:41> col:41 used in 'const char *'
| |-ParmVarDecl 0x2aa8a731768 <col:45, col:49> col:49 used inl 'int'
| `-CompoundStmt 0x2aa8a734c68 <line:253:1, line:315:1>
|   |-DeclStmt 0x2aa8a731aa8 <line:254:5, col:22>
|   | |-VarDecl 0x2aa8a7318f8 <col:5, col:15> col:9 used ret 'int' cinit
|   | | `-IntegerLiteral 0x2aa8a731960 <col:15> 'int' 0
|   | |-VarDecl 0x2aa8a7319a0 <col:5, col:18> col:18 used n 'int'
|   | `-VarDecl 0x2aa8a731a20 <col:5, col:21> col:21 used i 'int'
|   |-DeclStmt 0x2aa8a731b38 <line:255:5, col:20>
|   | `-VarDecl 0x2aa8a731ad0 <col:5, col:17> col:17 used ctx 'BIO_OK_CTX *'
|   |-IfStmt 0x2aa8a731c30 <line:258:5, line:259:16>
|   | |-BinaryOperator 0x2aa8a731bc8 <line:258:9, col:16> 'int' '<='
|   | | |-ImplicitCastExpr 0x2aa8a731bb0 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2aa8a731b50 <col:9> 'int' lvalue ParmVar 0x2aa8a731768 'inl' 'int'
|   | | `-IntegerLiteral 0x2aa8a731b88 <col:16> 'int' 0
|   | `-ReturnStmt 0x2aa8a731c20 <line:259:9, col:16>
|   |   `-ImplicitCastExpr 0x2aa8a731c08 <col:16> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x2aa8a731be8 <col:16> 'int' lvalue ParmVar 0x2aa8a731768 'inl' 'int'
|   |-BinaryOperator 0x2aa8a731d30 <line:263:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x2aa8a731cc0 <col:5> 'int' lvalue Var 0x2aa8a7318f8 'ret' 'int'
|   | `-ImplicitCastExpr 0x2aa8a731d18 <col:11> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x2aa8a731cf8 <col:11> 'int' lvalue ParmVar 0x2aa8a731768 'inl' 'int'
|   |-IfStmt 0x2aa8a731fa8 <line:265:5, line:266:18>
|   | |-OpaqueValueExpr 0x2aa8a731f90 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x2aa8a731f80 <col:9, col:18>
|   |   `-ParenExpr 0x2aa8a731f60 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x2aa8a731f38 <col:17> 'int' 0
|   |-IfStmt 0x2aa8a732078 <line:268:5, line:269:16>
|   | |-OpaqueValueExpr 0x2aa8a732060 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x2aa8a732050 <col:9, col:16>
|   |   `-IntegerLiteral 0x2aa8a732028 <col:16> 'int' 0
|   |-DoStmt 0x2aa8a734ba0 <line:271:5, line:310:21>
|   | |-CompoundStmt 0x2aa8a734ac0 <line:271:8, line:310:5>
|   | | |-BinaryOperator 0x2aa8a732220 <line:273:9, col:33> 'int' '='
|   | | | |-DeclRefExpr 0x2aa8a7320b0 <col:9> 'int' lvalue Var 0x2aa8a7319a0 'n' 'int'
|   | | | `-ImplicitCastExpr 0x2aa8a732208 <col:13, col:33> 'int' <IntegralCast>
|   | | |   `-BinaryOperator 0x2aa8a7321e8 <col:13, col:33> 'unsigned long long' '-'
|   | | |     |-ImplicitCastExpr 0x2aa8a7321b8 <col:13, col:18> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |     | `-MemberExpr 0x2aa8a732120 <col:13, col:18> 'size_t':'unsigned long long' lvalue ->buf_len 0x2aa8a72b7a0
|   | | |     |   `-ImplicitCastExpr 0x2aa8a732108 <col:13> 'BIO_OK_CTX *' <LValueToRValue>
|   | | |     |     `-DeclRefExpr 0x2aa8a7320e8 <col:13> 'BIO_OK_CTX *' lvalue Var 0x2aa8a731ad0 'ctx' 'BIO_OK_CTX *'
|   | | |     `-ImplicitCastExpr 0x2aa8a7321d0 <col:28, col:33> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |       `-MemberExpr 0x2aa8a732188 <col:28, col:33> 'size_t':'unsigned long long' lvalue ->buf_off 0x2aa8a72b808
|   | | |         `-ImplicitCastExpr 0x2aa8a732170 <col:28> 'BIO_OK_CTX *' <LValueToRValue>
|   | | |           `-DeclRefExpr 0x2aa8a732150 <col:28> 'BIO_OK_CTX *' lvalue Var 0x2aa8a731ad0 'ctx' 'BIO_OK_CTX *'
|   | | |-WhileStmt 0x2aa8a732a48 <line:274:9, line:284:9>
|   | | | |-BinaryOperator 0x2aa8a732358 <line:274:16, col:37> 'int' '&&'
|   | | | | |-ImplicitCastExpr 0x2aa8a732340 <col:16, col:21> 'int' <LValueToRValue>
|   | | | | | `-MemberExpr 0x2aa8a732290 <col:16, col:21> 'int' lvalue ->blockout 0x2aa8a72ba98
|   | | | | |   `-ImplicitCastExpr 0x2aa8a732260 <col:16> 'BIO_OK_CTX *' <LValueToRValue>
|   | | | | |     `-DeclRefExpr 0x2aa8a732240 <col:16> 'BIO_OK_CTX *' lvalue Var 0x2aa8a731ad0 'ctx' 'BIO_OK_CTX *'
|   | | | | `-BinaryOperator 0x2aa8a732320 <col:33, col:37> 'int' '>'
|   | | | |   |-ImplicitCastExpr 0x2aa8a732308 <col:33> 'int' <LValueToRValue>
|   | | | |   | `-DeclRefExpr 0x2aa8a7322c0 <col:33> 'int' lvalue Var 0x2aa8a7319a0 'n' 'int'
|   | | | |   `-IntegerLiteral 0x2aa8a7322e0 <col:37> 'int' 0
|   | | | `-CompoundStmt 0x2aa8a732a20 <col:40, line:284:9>
|   | | |   |-IfStmt 0x2aa8a732898 <line:276:13, line:281:13>
|   | | |   | |-BinaryOperator 0x2aa8a7325e0 <line:276:17, col:22> 'int' '<='
|   | | |   | | |-ImplicitCastExpr 0x2aa8a7325c8 <col:17> 'int' <LValueToRValue>
|   | | |   | | | `-DeclRefExpr 0x2aa8a732580 <col:17> 'int' lvalue Var 0x2aa8a731a20 'i' 'int'
|   | | |   | | `-IntegerLiteral 0x2aa8a7325a0 <col:22> 'int' 0
|   | | |   | `-CompoundStmt 0x2aa8a732878 <col:25, line:281:13>
|   | | |   |   |-IfStmt 0x2aa8a7327f8 <line:278:17, line:279:33>
|   | | |   |   | |-OpaqueValueExpr 0x2aa8a7327e0 <<invalid sloc>> '_Bool'
|   | | |   |   | `-BinaryOperator 0x2aa8a7327c0 <col:21, col:33> 'int' '='
|   | | |   |   |   |-MemberExpr 0x2aa8a732768 <col:21, col:26> 'int' lvalue ->cont 0x2aa8a72b948
|   | | |   |   |   | `-ImplicitCastExpr 0x2aa8a732750 <col:21> 'BIO_OK_CTX *' <LValueToRValue>
|   | | |   |   |   |   `-DeclRefExpr 0x2aa8a732730 <col:21> 'BIO_OK_CTX *' lvalue Var 0x2aa8a731ad0 'ctx' 'BIO_OK_CTX *'
|   | | |   |   |   `-IntegerLiteral 0x2aa8a732798 <col:33> 'int' 0
|   | | |   |   `-ReturnStmt 0x2aa8a732868 <line:280:17, col:26>
|   | | |   |     `-ImplicitCastExpr 0x2aa8a732850 <col:24, col:26> 'int' <LValueToRValue>
|   | | |   |       `-ParenExpr 0x2aa8a732830 <col:24, col:26> 'int' lvalue
|   | | |   |         `-DeclRefExpr 0x2aa8a732810 <col:25> 'int' lvalue Var 0x2aa8a731a20 'i' 'int'
|   | | |   |-CompoundAssignOperator 0x2aa8a732968 <line:282:13, col:29> 'size_t':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | | |   | |-MemberExpr 0x2aa8a7328e8 <col:13, col:18> 'size_t':'unsigned long long' lvalue ->buf_off 0x2aa8a72b808
|   | | |   | | `-ImplicitCastExpr 0x2aa8a7328d0 <col:13> 'BIO_OK_CTX *' <LValueToRValue>
|   | | |   | |   `-DeclRefExpr 0x2aa8a7328b0 <col:13> 'BIO_OK_CTX *' lvalue Var 0x2aa8a731ad0 'ctx' 'BIO_OK_CTX *'
|   | | |   | `-ImplicitCastExpr 0x2aa8a732950 <col:29> 'unsigned long long' <IntegralCast>
|   | | |   |   `-ImplicitCastExpr 0x2aa8a732938 <col:29> 'int' <LValueToRValue>
|   | | |   |     `-DeclRefExpr 0x2aa8a732918 <col:29> 'int' lvalue Var 0x2aa8a731a20 'i' 'int'
|   | | |   `-CompoundAssignOperator 0x2aa8a7329f0 <line:283:13, col:18> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   | | |     |-DeclRefExpr 0x2aa8a732998 <col:13> 'int' lvalue Var 0x2aa8a7319a0 'n' 'int'
|   | | |     `-ImplicitCastExpr 0x2aa8a7329d8 <col:18> 'int' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x2aa8a7329b8 <col:18> 'int' lvalue Var 0x2aa8a731a20 'i' 'int'
|   | | |-BinaryOperator 0x2aa8a732af0 <line:287:9, col:25> 'int' '='
|   | | | |-MemberExpr 0x2aa8a732a98 <col:9, col:14> 'int' lvalue ->blockout 0x2aa8a72ba98
|   | | | | `-ImplicitCastExpr 0x2aa8a732a80 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x2aa8a732a60 <col:9> 'BIO_OK_CTX *' lvalue Var 0x2aa8a731ad0 'ctx' 'BIO_OK_CTX *'
|   | | | `-IntegerLiteral 0x2aa8a732ac8 <col:25> 'int' 0
|   | | |-IfStmt 0x2aa8a732de0 <line:288:9, line:291:9>
|   | | | |-BinaryOperator 0x2aa8a732c10 <line:288:13, col:34> 'int' '=='
|   | | | | |-ImplicitCastExpr 0x2aa8a732be0 <col:13, col:18> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | | | `-MemberExpr 0x2aa8a732b48 <col:13, col:18> 'size_t':'unsigned long long' lvalue ->buf_len 0x2aa8a72b7a0
|   | | | | |   `-ImplicitCastExpr 0x2aa8a732b30 <col:13> 'BIO_OK_CTX *' <LValueToRValue>
|   | | | | |     `-DeclRefExpr 0x2aa8a732b10 <col:13> 'BIO_OK_CTX *' lvalue Var 0x2aa8a731ad0 'ctx' 'BIO_OK_CTX *'
|   | | | | `-ImplicitCastExpr 0x2aa8a732bf8 <col:29, col:34> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | |   `-MemberExpr 0x2aa8a732bb0 <col:29, col:34> 'size_t':'unsigned long long' lvalue ->buf_off 0x2aa8a72b808
|   | | | |     `-ImplicitCastExpr 0x2aa8a732b98 <col:29> 'BIO_OK_CTX *' <LValueToRValue>
|   | | | |       `-DeclRefExpr 0x2aa8a732b78 <col:29> 'BIO_OK_CTX *' lvalue Var 0x2aa8a731ad0 'ctx' 'BIO_OK_CTX *'
|   | | | `-CompoundStmt 0x2aa8a732dc0 <col:43, line:291:9>
|   | | |   |-BinaryOperator 0x2aa8a732cd8 <line:289:13, line:93:25> 'size_t':'unsigned long long' '='
|   | | |   | |-MemberExpr 0x2aa8a732c68 <line:289:13, col:18> 'size_t':'unsigned long long' lvalue ->buf_len 0x2aa8a72b7a0
|   | | |   | | `-ImplicitCastExpr 0x2aa8a732c50 <col:13> 'BIO_OK_CTX *' <LValueToRValue>
|   | | |   | |   `-DeclRefExpr 0x2aa8a732c30 <col:13> 'BIO_OK_CTX *' lvalue Var 0x2aa8a731ad0 'ctx' 'BIO_OK_CTX *'
|   | | |   | `-ImplicitCastExpr 0x2aa8a732cc0 <line:93:25> 'size_t':'unsigned long long' <IntegralCast>
|   | | |   |   `-IntegerLiteral 0x2aa8a732c98 <col:25> 'int' 4
|   | | |   `-BinaryOperator 0x2aa8a732da0 <line:290:13, col:28> 'size_t':'unsigned long long' '='
|   | | |     |-MemberExpr 0x2aa8a732d30 <col:13, col:18> 'size_t':'unsigned long long' lvalue ->buf_off 0x2aa8a72b808
|   | | |     | `-ImplicitCastExpr 0x2aa8a732d18 <col:13> 'BIO_OK_CTX *' <LValueToRValue>
|   | | |     |   `-DeclRefExpr 0x2aa8a732cf8 <col:13> 'BIO_OK_CTX *' lvalue Var 0x2aa8a731ad0 'ctx' 'BIO_OK_CTX *'
|   | | |     `-ImplicitCastExpr 0x2aa8a732d88 <col:28> 'size_t':'unsigned long long' <IntegralCast>
|   | | |       `-IntegerLiteral 0x2aa8a732d60 <col:28> 'int' 0
|   | | |-IfStmt 0x2aa8a733040 <line:293:9, line:294:22>
|   | | | |-BinaryOperator 0x2aa8a732fc8 <line:293:13, col:38> 'int' '||'
|   | | | | |-ParenExpr 0x2aa8a732f08 <col:13, col:24> 'int'
|   | | | | | `-BinaryOperator 0x2aa8a732ee8 <col:14, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | | | |   |-ImplicitCastExpr 0x2aa8a732eb8 <.//openssl//file_jk/before\crypto\evp\bio_ok.c:293:14> 'const char *' <LValueToRValue>
|   | | | | |   | `-DeclRefExpr 0x2aa8a732df8 <col:14> 'const char *' lvalue ParmVar 0x2aa8a7316e8 'in' 'const char *'
|   | | | | |   `-ImplicitCastExpr 0x2aa8a732ed0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   | | | | |     `-ParenExpr 0x2aa8a732e98 <col:17, col:27> 'void *'
|   | | | | |       `-CStyleCastExpr 0x2aa8a732e70 <col:18, col:26> 'void *' <NullToPointer>
|   | | | | |         `-IntegerLiteral 0x2aa8a732e30 <col:26> 'int' 0
|   | | | | `-ParenExpr 0x2aa8a732fa8 <.//openssl//file_jk/before\crypto\evp\bio_ok.c:293:29, col:38> 'int'
|   | | | |   `-BinaryOperator 0x2aa8a732f88 <col:30, col:37> 'int' '<='
|   | | | |     |-ImplicitCastExpr 0x2aa8a732f70 <col:30> 'int' <LValueToRValue>
|   | | | |     | `-DeclRefExpr 0x2aa8a732f28 <col:30> 'int' lvalue ParmVar 0x2aa8a731768 'inl' 'int'
|   | | | |     `-IntegerLiteral 0x2aa8a732f48 <col:37> 'int' 0
|   | | | `-ReturnStmt 0x2aa8a733030 <line:294:13, col:22>
|   | | |   `-ParenExpr 0x2aa8a733010 <col:20, col:22> 'int'
|   | | |     `-IntegerLiteral 0x2aa8a732fe8 <col:21> 'int' 0
|   | | |-BinaryOperator 0x2aa8a734548 <line:296:9, line:297:68> 'int' '='
|   | | | |-DeclRefExpr 0x2aa8a733058 <line:296:9> 'int' lvalue Var 0x2aa8a7319a0 'n' 'int'
|   | | | `-ConditionalOperator 0x2aa8a734518 <col:13, line:297:68> 'int'
|   | | |   |-ParenExpr 0x2aa8a7342b0 <line:296:13, col:65> 'int'
|   | | |   | `-BinaryOperator 0x2aa8a733258 <col:14, line:93:25> 'int' '>'
|   | | |   |   |-BinaryOperator 0x2aa8a733148 <line:296:14, col:25> 'unsigned long long' '+'
|   | | |   |   | |-ImplicitCastExpr 0x2aa8a733130 <col:14> 'unsigned long long' <IntegralCast>
|   | | |   |   | | `-ImplicitCastExpr 0x2aa8a733100 <col:14> 'int' <LValueToRValue>
|   | | |   |   | |   `-DeclRefExpr 0x2aa8a733078 <col:14> 'int' lvalue ParmVar 0x2aa8a731768 'inl' 'int'
|   | | |   |   | `-ImplicitCastExpr 0x2aa8a733118 <col:20, col:25> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |   |   |   `-MemberExpr 0x2aa8a7330d0 <col:20, col:25> 'size_t':'unsigned long long' lvalue ->buf_len 0x2aa8a72b7a0
|   | | |   |   |     `-ImplicitCastExpr 0x2aa8a7330b8 <col:20> 'BIO_OK_CTX *' <LValueToRValue>
|   | | |   |   |       `-DeclRefExpr 0x2aa8a733098 <col:20> 'BIO_OK_CTX *' lvalue Var 0x2aa8a731ad0 'ctx' 'BIO_OK_CTX *'
|   | | |   |   `-ImplicitCastExpr 0x2aa8a733240 <line:92:25, line:93:25> 'unsigned long long' <IntegralCast>
|   | | |   |     `-BinaryOperator 0x2aa8a733220 <line:92:25, line:93:25> 'int' '+'
|   | | |   |       |-ParenExpr 0x2aa8a7331d8 <line:92:25, col:32> 'int'
|   | | |   |       | `-BinaryOperator 0x2aa8a7331b8 <col:26, col:31> 'int' '*'
|   | | |   |       |   |-IntegerLiteral 0x2aa8a733168 <col:26> 'int' 1024
|   | | |   |       |   `-IntegerLiteral 0x2aa8a733190 <col:31> 'int' 4
|   | | |   |       `-IntegerLiteral 0x2aa8a7331f8 <line:93:25> 'int' 4
|   | | |   |-CStyleCastExpr 0x2aa8a7344b8 <line:297:13, col:64> 'int' <IntegralCast>
|   | | |   | `-ParenExpr 0x2aa8a734498 <col:18, col:64> 'unsigned long long'
|   | | |   |   `-BinaryOperator 0x2aa8a734440 <line:92:25, line:297:57> 'unsigned long long' '-'
|   | | |   |     |-ImplicitCastExpr 0x2aa8a734428 <line:92:25, line:93:25> 'unsigned long long' <IntegralCast>
|   | | |   |     | `-BinaryOperator 0x2aa8a734388 <line:92:25, line:93:25> 'int' '+'
|   | | |   |     |   |-ParenExpr 0x2aa8a734340 <line:92:25, col:32> 'int'
|   | | |   |     |   | `-BinaryOperator 0x2aa8a734320 <col:26, col:31> 'int' '*'
|   | | |   |     |   |   |-IntegerLiteral 0x2aa8a7342d0 <col:26> 'int' 1024
|   | | |   |     |   |   `-IntegerLiteral 0x2aa8a7342f8 <col:31> 'int' 4
|   | | |   |     |   `-IntegerLiteral 0x2aa8a734360 <line:93:25> 'int' 4
|   | | |   |     `-ImplicitCastExpr 0x2aa8a734410 <line:297:52, col:57> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |   |       `-MemberExpr 0x2aa8a7343e0 <col:52, col:57> 'size_t':'unsigned long long' lvalue ->buf_len 0x2aa8a72b7a0
|   | | |   |         `-ImplicitCastExpr 0x2aa8a7343c8 <col:52> 'BIO_OK_CTX *' <LValueToRValue>
|   | | |   |           `-DeclRefExpr 0x2aa8a7343a8 <col:52> 'BIO_OK_CTX *' lvalue Var 0x2aa8a731ad0 'ctx' 'BIO_OK_CTX *'
|   | | |   `-ImplicitCastExpr 0x2aa8a734500 <col:68> 'int' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x2aa8a7344e0 <col:68> 'int' lvalue ParmVar 0x2aa8a731768 'inl' 'int'
|   | | |-CompoundAssignOperator 0x2aa8a734720 <line:300:9, col:25> 'size_t':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | | | |-MemberExpr 0x2aa8a7346a0 <col:9, col:14> 'size_t':'unsigned long long' lvalue ->buf_len 0x2aa8a72b7a0
|   | | | | `-ImplicitCastExpr 0x2aa8a734688 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x2aa8a734668 <col:9> 'BIO_OK_CTX *' lvalue Var 0x2aa8a731ad0 'ctx' 'BIO_OK_CTX *'
|   | | | `-ImplicitCastExpr 0x2aa8a734708 <col:25> 'unsigned long long' <IntegralCast>
|   | | |   `-ImplicitCastExpr 0x2aa8a7346f0 <col:25> 'int' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x2aa8a7346d0 <col:25> 'int' lvalue Var 0x2aa8a7319a0 'n' 'int'
|   | | |-CompoundAssignOperator 0x2aa8a7347a8 <line:301:9, col:16> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   | | | |-DeclRefExpr 0x2aa8a734750 <col:9> 'int' lvalue ParmVar 0x2aa8a731768 'inl' 'int'
|   | | | `-ImplicitCastExpr 0x2aa8a734790 <col:16> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x2aa8a734770 <col:16> 'int' lvalue Var 0x2aa8a7319a0 'n' 'int'
|   | | |-CompoundAssignOperator 0x2aa8a734830 <line:302:9, col:15> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'
|   | | | |-DeclRefExpr 0x2aa8a7347d8 <col:9> 'const char *' lvalue ParmVar 0x2aa8a7316e8 'in' 'const char *'
|   | | | `-ImplicitCastExpr 0x2aa8a734818 <col:15> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x2aa8a7347f8 <col:15> 'int' lvalue Var 0x2aa8a7319a0 'n' 'int'
|   | | `-IfStmt 0x2aa8a734aa8 <line:304:9, line:309:9>
|   | |   |-BinaryOperator 0x2aa8a7349d0 <line:304:13, line:93:25> 'int' '>='
|   | |   | |-ImplicitCastExpr 0x2aa8a7349a0 <line:304:13, col:18> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   | | `-MemberExpr 0x2aa8a734898 <col:13, col:18> 'size_t':'unsigned long long' lvalue ->buf_len 0x2aa8a72b7a0
|   | |   | |   `-ImplicitCastExpr 0x2aa8a734880 <col:13> 'BIO_OK_CTX *' <LValueToRValue>
|   | |   | |     `-DeclRefExpr 0x2aa8a734860 <col:13> 'BIO_OK_CTX *' lvalue Var 0x2aa8a731ad0 'ctx' 'BIO_OK_CTX *'
|   | |   | `-ImplicitCastExpr 0x2aa8a7349b8 <line:92:25, line:93:25> 'unsigned long long' <IntegralCast>
|   | |   |   `-BinaryOperator 0x2aa8a734980 <line:92:25, line:93:25> 'int' '+'
|   | |   |     |-ParenExpr 0x2aa8a734938 <line:92:25, col:32> 'int'
|   | |   |     | `-BinaryOperator 0x2aa8a734918 <col:26, col:31> 'int' '*'
|   | |   |     |   |-IntegerLiteral 0x2aa8a7348c8 <col:26> 'int' 1024
|   | |   |     |   `-IntegerLiteral 0x2aa8a7348f0 <col:31> 'int' 4
|   | |   |     `-IntegerLiteral 0x2aa8a734958 <line:93:25> 'int' 4
|   | |   `-CompoundStmt 0x2aa8a734a90 <line:304:61, line:309:9>
|   | |     `-IfStmt 0x2aa8a734a78 <line:305:13, line:308:13>
|   | |       |-OpaqueValueExpr 0x2aa8a734a60 <<invalid sloc>> '_Bool'
|   | |       `-CompoundStmt 0x2aa8a734a48 <line:305:32, line:308:13>
|   | |         `-ReturnStmt 0x2aa8a734a38 <line:307:17, col:24>
|   | |           `-IntegerLiteral 0x2aa8a734a10 <col:24> 'int' 0
|   | `-BinaryOperator 0x2aa8a734b80 <line:310:14, col:20> 'int' '>'
|   |   |-ImplicitCastExpr 0x2aa8a734b68 <col:14> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2aa8a734b20 <col:14> 'int' lvalue ParmVar 0x2aa8a731768 'inl' 'int'
|   |   `-IntegerLiteral 0x2aa8a734b40 <col:20> 'int' 0
|   `-ReturnStmt 0x2aa8a734c58 <line:314:5, col:16>
|     `-ImplicitCastExpr 0x2aa8a734c40 <col:12, col:16> 'int' <LValueToRValue>
|       `-ParenExpr 0x2aa8a734c20 <col:12, col:16> 'int' lvalue
|         `-DeclRefExpr 0x2aa8a734c00 <col:13> 'int' lvalue Var 0x2aa8a7318f8 'ret' 'int'
|-FunctionDecl 0x2aa8a734f00 <line:317:1, line:400:1> line:317:13 invalid ok_ctrl 'long (int *, int, long, void *)' static
| |-ParmVarDecl 0x2aa8a734cd0 <col:21, col:26> col:26 invalid b 'int *'
| |-ParmVarDecl 0x2aa8a734d50 <col:29, col:33> col:33 used cmd 'int'
| |-ParmVarDecl 0x2aa8a734dd0 <col:38, col:43> col:43 used num 'long'
| |-ParmVarDecl 0x2aa8a734e50 <col:48, col:54> col:54 used ptr 'void *'
| `-CompoundStmt 0x2aa8a734228 <line:318:1, line:400:1>
|   |-DeclStmt 0x2aa8a735050 <line:319:5, col:20>
|   | `-VarDecl 0x2aa8a734fe8 <col:5, col:17> col:17 used ctx 'BIO_OK_CTX *'
|   |-DeclStmt 0x2aa8a735120 <line:321:5, col:24>
|   | `-VarDecl 0x2aa8a7350b8 <col:5, col:20> col:20 invalid ppmd 'const int **'
|   |-DeclStmt 0x2aa8a7351f8 <line:322:5, col:17>
|   | `-VarDecl 0x2aa8a735150 <col:5, col:16> col:10 used ret 'long' cinit
|   |   `-ImplicitCastExpr 0x2aa8a7351e0 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x2aa8a7351b8 <col:16> 'int' 1
|   |-DeclStmt 0x2aa8a735290 <line:323:5, col:10>
|   | `-VarDecl 0x2aa8a735228 <col:5, col:9> col:9 used i 'int'
|   |-SwitchStmt 0x2aa8a72f328 <line:329:5, line:398:5>
|   | |-ImplicitCastExpr 0x2aa8a72f310 <line:329:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x2aa8a72f2d8 <col:13> 'int' lvalue ParmVar 0x2aa8a734d50 'cmd' 'int'
|   | `-CompoundStmt 0x2aa8a7340f0 <col:18, line:398:5>
|   |   |-BinaryOperator 0x2aa8a72f3f0 <line:331:9, col:24> 'size_t':'unsigned long long' '='
|   |   | |-MemberExpr 0x2aa8a72f380 <col:9, col:14> 'size_t':'unsigned long long' lvalue ->buf_len 0x2aa8a72b7a0
|   |   | | `-ImplicitCastExpr 0x2aa8a72f368 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2aa8a72f348 <col:9> 'BIO_OK_CTX *' lvalue Var 0x2aa8a734fe8 'ctx' 'BIO_OK_CTX *'
|   |   | `-ImplicitCastExpr 0x2aa8a72f3d8 <col:24> 'size_t':'unsigned long long' <IntegralCast>
|   |   |   `-IntegerLiteral 0x2aa8a72f3b0 <col:24> 'int' 0
|   |   |-BinaryOperator 0x2aa8a72f4b8 <line:332:9, col:24> 'size_t':'unsigned long long' '='
|   |   | |-MemberExpr 0x2aa8a72f448 <col:9, col:14> 'size_t':'unsigned long long' lvalue ->buf_off 0x2aa8a72b808
|   |   | | `-ImplicitCastExpr 0x2aa8a72f430 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2aa8a72f410 <col:9> 'BIO_OK_CTX *' lvalue Var 0x2aa8a734fe8 'ctx' 'BIO_OK_CTX *'
|   |   | `-ImplicitCastExpr 0x2aa8a72f4a0 <col:24> 'size_t':'unsigned long long' <IntegralCast>
|   |   |   `-IntegerLiteral 0x2aa8a72f478 <col:24> 'int' 0
|   |   |-BinaryOperator 0x2aa8a72f580 <line:333:9, col:29> 'size_t':'unsigned long long' '='
|   |   | |-MemberExpr 0x2aa8a72f510 <col:9, col:14> 'size_t':'unsigned long long' lvalue ->buf_len_save 0x2aa8a72b870
|   |   | | `-ImplicitCastExpr 0x2aa8a72f4f8 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2aa8a72f4d8 <col:9> 'BIO_OK_CTX *' lvalue Var 0x2aa8a734fe8 'ctx' 'BIO_OK_CTX *'
|   |   | `-ImplicitCastExpr 0x2aa8a72f568 <col:29> 'size_t':'unsigned long long' <IntegralCast>
|   |   |   `-IntegerLiteral 0x2aa8a72f540 <col:29> 'int' 0
|   |   |-BinaryOperator 0x2aa8a72f648 <line:334:9, col:29> 'size_t':'unsigned long long' '='
|   |   | |-MemberExpr 0x2aa8a72f5d8 <col:9, col:14> 'size_t':'unsigned long long' lvalue ->buf_off_save 0x2aa8a72b8d8
|   |   | | `-ImplicitCastExpr 0x2aa8a72f5c0 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2aa8a72f5a0 <col:9> 'BIO_OK_CTX *' lvalue Var 0x2aa8a734fe8 'ctx' 'BIO_OK_CTX *'
|   |   | `-ImplicitCastExpr 0x2aa8a72f630 <col:29> 'size_t':'unsigned long long' <IntegralCast>
|   |   |   `-IntegerLiteral 0x2aa8a72f608 <col:29> 'int' 0
|   |   |-BinaryOperator 0x2aa8a72f6f8 <line:335:9, col:21> 'int' '='
|   |   | |-MemberExpr 0x2aa8a72f6a0 <col:9, col:14> 'int' lvalue ->cont 0x2aa8a72b948
|   |   | | `-ImplicitCastExpr 0x2aa8a72f688 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2aa8a72f668 <col:9> 'BIO_OK_CTX *' lvalue Var 0x2aa8a734fe8 'ctx' 'BIO_OK_CTX *'
|   |   | `-IntegerLiteral 0x2aa8a72f6d0 <col:21> 'int' 1
|   |   |-BinaryOperator 0x2aa8a72f7a8 <line:336:9, col:25> 'int' '='
|   |   | |-MemberExpr 0x2aa8a72f750 <col:9, col:14> 'int' lvalue ->finished 0x2aa8a72b9b8
|   |   | | `-ImplicitCastExpr 0x2aa8a72f738 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2aa8a72f718 <col:9> 'BIO_OK_CTX *' lvalue Var 0x2aa8a734fe8 'ctx' 'BIO_OK_CTX *'
|   |   | `-IntegerLiteral 0x2aa8a72f780 <col:25> 'int' 0
|   |   |-BinaryOperator 0x2aa8a72f858 <line:337:9, col:25> 'int' '='
|   |   | |-MemberExpr 0x2aa8a72f800 <col:9, col:14> 'int' lvalue ->blockout 0x2aa8a72ba98
|   |   | | `-ImplicitCastExpr 0x2aa8a72f7e8 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2aa8a72f7c8 <col:9> 'BIO_OK_CTX *' lvalue Var 0x2aa8a734fe8 'ctx' 'BIO_OK_CTX *'
|   |   | `-IntegerLiteral 0x2aa8a72f830 <col:25> 'int' 0
|   |   |-BinaryOperator 0x2aa8a72f908 <line:338:9, col:22> 'int' '='
|   |   | |-MemberExpr 0x2aa8a72f8b0 <col:9, col:14> 'int' lvalue ->sigio 0x2aa8a72bb08
|   |   | | `-ImplicitCastExpr 0x2aa8a72f898 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2aa8a72f878 <col:9> 'BIO_OK_CTX *' lvalue Var 0x2aa8a734fe8 'ctx' 'BIO_OK_CTX *'
|   |   | `-IntegerLiteral 0x2aa8a72f8e0 <col:22> 'int' 1
|   |   |-BreakStmt 0x2aa8a72fb00 <line:340:9>
|   |   |-IfStmt 0x2aa8a72fcf8 <line:342:9, line:345:13> has_else
|   |   | |-BinaryOperator 0x2aa8a72fbb0 <line:342:13, col:26> 'int' '<='
|   |   | | |-ImplicitCastExpr 0x2aa8a72fb98 <col:13, col:18> 'int' <LValueToRValue>
|   |   | | | `-MemberExpr 0x2aa8a72fb40 <col:13, col:18> 'int' lvalue ->cont 0x2aa8a72b948
|   |   | | |   `-ImplicitCastExpr 0x2aa8a72fb28 <col:13> 'BIO_OK_CTX *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x2aa8a72fb08 <col:13> 'BIO_OK_CTX *' lvalue Var 0x2aa8a734fe8 'ctx' 'BIO_OK_CTX *'
|   |   | | `-IntegerLiteral 0x2aa8a72fb70 <col:26> 'int' 0
|   |   | |-BinaryOperator 0x2aa8a72fc30 <line:343:13, col:19> 'long' '='
|   |   | | |-DeclRefExpr 0x2aa8a72fbd0 <col:13> 'long' lvalue Var 0x2aa8a735150 'ret' 'long'
|   |   | | `-ImplicitCastExpr 0x2aa8a72fc18 <col:19> 'long' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x2aa8a72fbf0 <col:19> 'int' 1
|   |   | `-NullStmt 0x2aa8a72fcf0 <line:345:13>
|   |   |-BreakStmt 0x2aa8a72fd20 <line:346:9>
|   |   |-BinaryOperator 0x2aa8a72ff70 <line:349:9, col:61> 'long' '='
|   |   | |-DeclRefExpr 0x2aa8a72fd28 <col:9> 'long' lvalue Var 0x2aa8a735150 'ret' 'long'
|   |   | `-ImplicitCastExpr 0x2aa8a72ff58 <col:15, col:61> 'long' <IntegralCast>
|   |   |   `-ConditionalOperator 0x2aa8a72ff28 <col:15, col:61> 'unsigned long long'
|   |   |     |-ImplicitCastExpr 0x2aa8a72fef8 <col:15, col:20> 'int' <LValueToRValue>
|   |   |     | `-MemberExpr 0x2aa8a72fd80 <col:15, col:20> 'int' lvalue ->blockout 0x2aa8a72ba98
|   |   |     |   `-ImplicitCastExpr 0x2aa8a72fd68 <col:15> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x2aa8a72fd48 <col:15> 'BIO_OK_CTX *' lvalue Var 0x2aa8a734fe8 'ctx' 'BIO_OK_CTX *'
|   |   |     |-BinaryOperator 0x2aa8a72feb0 <col:31, col:51> 'unsigned long long' '-'
|   |   |     | |-ImplicitCastExpr 0x2aa8a72fe80 <col:31, col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |     | | `-MemberExpr 0x2aa8a72fde8 <col:31, col:36> 'size_t':'unsigned long long' lvalue ->buf_len 0x2aa8a72b7a0
|   |   |     | |   `-ImplicitCastExpr 0x2aa8a72fdd0 <col:31> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |     | |     `-DeclRefExpr 0x2aa8a72fdb0 <col:31> 'BIO_OK_CTX *' lvalue Var 0x2aa8a734fe8 'ctx' 'BIO_OK_CTX *'
|   |   |     | `-ImplicitCastExpr 0x2aa8a72fe98 <col:46, col:51> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |     |   `-MemberExpr 0x2aa8a72fe50 <col:46, col:51> 'size_t':'unsigned long long' lvalue ->buf_off 0x2aa8a72b808
|   |   |     |     `-ImplicitCastExpr 0x2aa8a72fe38 <col:46> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |     |       `-DeclRefExpr 0x2aa8a72fe18 <col:46> 'BIO_OK_CTX *' lvalue Var 0x2aa8a734fe8 'ctx' 'BIO_OK_CTX *'
|   |   |     `-ImplicitCastExpr 0x2aa8a72ff10 <col:61> 'unsigned long long' <IntegralCast>
|   |   |       `-IntegerLiteral 0x2aa8a72fed0 <col:61> 'int' 0
|   |   |-BreakStmt 0x2aa8a7300c8 <line:352:9>
|   |   |-IfStmt 0x2aa8a730218 <line:355:9, line:357:24>
|   |   | |-BinaryOperator 0x2aa8a730178 <line:355:13, col:30> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x2aa8a730160 <col:13, col:18> 'int' <LValueToRValue>
|   |   | | | `-MemberExpr 0x2aa8a730108 <col:13, col:18> 'int' lvalue ->blockout 0x2aa8a72ba98
|   |   | | |   `-ImplicitCastExpr 0x2aa8a7300f0 <col:13> 'BIO_OK_CTX *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x2aa8a7300d0 <col:13> 'BIO_OK_CTX *' lvalue Var 0x2aa8a734fe8 'ctx' 'BIO_OK_CTX *'
|   |   | | `-IntegerLiteral 0x2aa8a730138 <col:30> 'int' 0
|   |   | `-IfStmt 0x2aa8a730200 <line:356:13, line:357:24>
|   |   |   |-OpaqueValueExpr 0x2aa8a7301e8 <<invalid sloc>> '_Bool'
|   |   |   `-ReturnStmt 0x2aa8a7301d8 <col:17, col:24>
|   |   |     `-ImplicitCastExpr 0x2aa8a7301c0 <col:24> 'long' <IntegralCast>
|   |   |       `-IntegerLiteral 0x2aa8a730198 <col:24> 'int' 0
|   |   |-WhileStmt 0x2aa8a733550 <line:359:9, line:365:9>
|   |   | |-ImplicitCastExpr 0x2aa8a7332e8 <line:359:16, col:21> 'int' <LValueToRValue>
|   |   | | `-MemberExpr 0x2aa8a7332b8 <col:16, col:21> 'int' lvalue ->blockout 0x2aa8a72ba98
|   |   | |   `-ImplicitCastExpr 0x2aa8a7332a0 <col:16> 'BIO_OK_CTX *' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x2aa8a730230 <col:16> 'BIO_OK_CTX *' lvalue Var 0x2aa8a734fe8 'ctx' 'BIO_OK_CTX *'
|   |   | `-CompoundStmt 0x2aa8a733538 <col:31, line:365:9>
|   |   |   `-IfStmt 0x2aa8a733520 <line:361:13, line:364:13>
|   |   |     |-BinaryOperator 0x2aa8a733448 <line:361:17, col:21> 'int' '<'
|   |   |     | |-ImplicitCastExpr 0x2aa8a733430 <col:17> 'int' <LValueToRValue>
|   |   |     | | `-DeclRefExpr 0x2aa8a7333e8 <col:17> 'int' lvalue Var 0x2aa8a735228 'i' 'int'
|   |   |     | `-IntegerLiteral 0x2aa8a733408 <col:21> 'int' 0
|   |   |     `-CompoundStmt 0x2aa8a733500 <col:24, line:364:13>
|   |   |       |-BinaryOperator 0x2aa8a7334d8 <line:362:17, col:23> 'long' '='
|   |   |       | |-DeclRefExpr 0x2aa8a733468 <col:17> 'long' lvalue Var 0x2aa8a735150 'ret' 'long'
|   |   |       | `-ImplicitCastExpr 0x2aa8a7334c0 <col:23> 'long' <IntegralCast>
|   |   |       |   `-ImplicitCastExpr 0x2aa8a7334a8 <col:23> 'int' <LValueToRValue>
|   |   |       |     `-DeclRefExpr 0x2aa8a733488 <col:23> 'int' lvalue Var 0x2aa8a735228 'i' 'int'
|   |   |       `-BreakStmt 0x2aa8a7334f8 <line:363:17>
|   |   |-BinaryOperator 0x2aa8a7335f8 <line:367:9, col:25> 'int' '='
|   |   | |-MemberExpr 0x2aa8a7335a0 <col:9, col:14> 'int' lvalue ->finished 0x2aa8a72b9b8
|   |   | | `-ImplicitCastExpr 0x2aa8a733588 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2aa8a733568 <col:9> 'BIO_OK_CTX *' lvalue Var 0x2aa8a734fe8 'ctx' 'BIO_OK_CTX *'
|   |   | `-IntegerLiteral 0x2aa8a7335d0 <col:25> 'int' 1
|   |   |-BinaryOperator 0x2aa8a733748 <line:368:9, col:39> 'size_t':'unsigned long long' '='
|   |   | |-MemberExpr 0x2aa8a733650 <col:9, col:14> 'size_t':'unsigned long long' lvalue ->buf_off 0x2aa8a72b808
|   |   | | `-ImplicitCastExpr 0x2aa8a733638 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2aa8a733618 <col:9> 'BIO_OK_CTX *' lvalue Var 0x2aa8a734fe8 'ctx' 'BIO_OK_CTX *'
|   |   | `-BinaryOperator 0x2aa8a733728 <col:24, col:39> 'size_t':'unsigned long long' '='
|   |   |   |-MemberExpr 0x2aa8a7336b8 <col:24, col:29> 'size_t':'unsigned long long' lvalue ->buf_len 0x2aa8a72b7a0
|   |   |   | `-ImplicitCastExpr 0x2aa8a7336a0 <col:24> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x2aa8a733680 <col:24> 'BIO_OK_CTX *' lvalue Var 0x2aa8a734fe8 'ctx' 'BIO_OK_CTX *'
|   |   |   `-ImplicitCastExpr 0x2aa8a733710 <col:39> 'size_t':'unsigned long long' <IntegralCast>
|   |   |     `-IntegerLiteral 0x2aa8a7336e8 <col:39> 'int' 0
|   |   |-BinaryOperator 0x2aa8a733848 <line:369:9, col:26> 'int' '='
|   |   | |-MemberExpr 0x2aa8a7337a0 <col:9, col:14> 'int' lvalue ->cont 0x2aa8a72b948
|   |   | | `-ImplicitCastExpr 0x2aa8a733788 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2aa8a733768 <col:9> 'BIO_OK_CTX *' lvalue Var 0x2aa8a734fe8 'ctx' 'BIO_OK_CTX *'
|   |   | `-CStyleCastExpr 0x2aa8a733820 <col:21, col:26> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x2aa8a733808 <col:26> 'long' <LValueToRValue> part_of_explicit_cast
|   |   |     `-DeclRefExpr 0x2aa8a7337d0 <col:26> 'long' lvalue Var 0x2aa8a735150 'ret' 'long'
|   |   |-BreakStmt 0x2aa8a733908 <line:373:9>
|   |   |-BreakStmt 0x2aa8a7339f0 <line:378:9>
|   |   |-BinaryOperator 0x2aa8a733ad8 <line:380:9, col:26> 'long' '='
|   |   | |-DeclRefExpr 0x2aa8a7339f8 <col:9> 'long' lvalue Var 0x2aa8a735150 'ret' 'long'
|   |   | `-CStyleCastExpr 0x2aa8a733ab0 <col:15, col:26> 'long' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x2aa8a733a98 <col:21, col:26> 'int' <LValueToRValue> part_of_explicit_cast
|   |   |     `-MemberExpr 0x2aa8a733a50 <col:21, col:26> 'int' lvalue ->cont 0x2aa8a72b948
|   |   |       `-ImplicitCastExpr 0x2aa8a733a38 <col:21> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x2aa8a733a18 <col:21> 'BIO_OK_CTX *' lvalue Var 0x2aa8a734fe8 'ctx' 'BIO_OK_CTX *'
|   |   |-BreakStmt 0x2aa8a733af8 <line:381:9>
|   |   |-IfStmt 0x2aa8a733d58 <line:384:9, line:385:20>
|   |   | |-OpaqueValueExpr 0x2aa8a733d40 <<invalid sloc>> '_Bool'
|   |   | `-ReturnStmt 0x2aa8a733d30 <col:13, col:20>
|   |   |   `-ImplicitCastExpr 0x2aa8a733d18 <col:20> 'long' <IntegralCast>
|   |   |     `-IntegerLiteral 0x2aa8a733cf0 <col:20> 'int' 0
|   |   |-BreakStmt 0x2aa8a733db8 <line:387:9>
|   |   |-IfStmt 0x2aa8a733ff0 <line:389:9, line:393:19> has_else
|   |   | |-OpaqueValueExpr 0x2aa8a733fd8 <<invalid sloc>> '_Bool'
|   |   | |-CompoundStmt 0x2aa8a733f48 <line:389:30, line:392:9>
|   |   | `-BinaryOperator 0x2aa8a733fb8 <line:393:13, col:19> 'long' '='
|   |   |   |-DeclRefExpr 0x2aa8a733f58 <col:13> 'long' lvalue Var 0x2aa8a735150 'ret' 'long'
|   |   |   `-ImplicitCastExpr 0x2aa8a733fa0 <col:19> 'long' <IntegralCast>
|   |   |     `-IntegerLiteral 0x2aa8a733f78 <col:19> 'int' 0
|   |   |-BreakStmt 0x2aa8a734018 <line:394:9>
|   |   |-DefaultStmt 0x2aa8a7340c8 <line:395:5, col:12>
|   |   | `-NullStmt 0x2aa8a7340c0 <col:12>
|   |   `-BreakStmt 0x2aa8a7340e8 <line:397:9>
|   `-ReturnStmt 0x2aa8a734218 <line:399:5, col:12>
|     `-ImplicitCastExpr 0x2aa8a734200 <col:12> 'long' <LValueToRValue>
|       `-DeclRefExpr 0x2aa8a7341e0 <col:12> 'long' lvalue Var 0x2aa8a735150 'ret' 'long'
|-FunctionDecl 0x2aa8a72d3e8 <line:402:1, line:419:1> line:402:13 invalid ok_callback_ctrl 'long (int *, int, int *)' static
| |-ParmVarDecl 0x2aa8a72d240 <col:30, col:35> col:35 invalid b 'int *'
| |-ParmVarDecl 0x2aa8a72d2c0 <col:38, col:42> col:42 used cmd 'int'
| |-ParmVarDecl 0x2aa8a72d340 <col:47, col:60> col:60 invalid fp 'int *'
| `-CompoundStmt 0x2aa8a72d928 <line:403:1, line:419:1>
|   |-DeclStmt 0x2aa8a72d578 <line:404:5, col:17>
|   | `-VarDecl 0x2aa8a72d4d0 <col:5, col:16> col:10 used ret 'long' cinit
|   |   `-ImplicitCastExpr 0x2aa8a72d560 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x2aa8a72d538 <col:16> 'int' 1
|   |-IfStmt 0x2aa8a72d6a0 <line:409:5, line:410:16>
|   | |-OpaqueValueExpr 0x2aa8a72d688 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x2aa8a72d678 <col:9, col:16>
|   |   `-ImplicitCastExpr 0x2aa8a72d660 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x2aa8a72d638 <col:16> 'int' 0
|   |-SwitchStmt 0x2aa8a72d708 <line:412:5, line:416:5>
|   | |-ImplicitCastExpr 0x2aa8a72d6f0 <line:412:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x2aa8a72d6b8 <col:13> 'int' lvalue ParmVar 0x2aa8a72d2c0 'cmd' 'int'
|   | `-CompoundStmt 0x2aa8a72d8c0 <col:18, line:416:5>
|   |   |-DefaultStmt 0x2aa8a72d898 <line:413:5, col:12>
|   |   | `-NullStmt 0x2aa8a72d890 <col:12>
|   |   `-BreakStmt 0x2aa8a72d8b8 <line:415:9>
|   `-ReturnStmt 0x2aa8a72d918 <line:418:5, col:12>
|     `-ImplicitCastExpr 0x2aa8a72d900 <col:12> 'long' <LValueToRValue>
|       `-DeclRefExpr 0x2aa8a72d8e0 <col:12> 'long' lvalue Var 0x2aa8a72d4d0 'ret' 'long'
|-FunctionDecl 0x2aa8a72db28 <line:421:1, line:439:1> line:421:13 used longswap 'void (void *, size_t)' static
| |-ParmVarDecl 0x2aa8a72d970 <col:22, col:28> col:28 used _ptr 'void *'
| |-ParmVarDecl 0x2aa8a72d9e8 <col:34, col:41> col:41 used len 'size_t':'unsigned long long'
| `-CompoundStmt 0x2aa8a735b70 <line:422:1, line:439:1>
|   |-DeclStmt 0x2aa8a72df48 <line:423:5, line:428:6>
|   | |-RecordDecl 0x2aa8a72dbf0 <line:423:11, line:426:5> line:423:11 union definition
|   | | |-FieldDecl 0x2aa8a72dcc8 <line:424:9, col:14> col:14 one 'long'
|   | | `-FieldDecl 0x2aa8a72dd30 <line:425:9, col:14> col:14 referenced little 'char'
|   | `-VarDecl 0x2aa8a72dde8 <line:423:5, line:428:5> line:426:7 used is_endian 'const union (anonymous union at .//openssl//file_jk/before\crypto\evp\bio_ok.c:423:11)':'const union (anonymous at .//openssl//file_jk/before\crypto\evp\bio_ok.c:423:11)' cinit
|   |   `-InitListExpr 0x2aa8a72ded0 <col:19, line:428:5> 'union (anonymous union at .//openssl//file_jk/before\crypto\evp\bio_ok.c:423:11)':'union (anonymous at .//openssl//file_jk/before\crypto\evp\bio_ok.c:423:11)' field Field 0x2aa8a72dcc8 'one' 'long'
|   |     `-ImplicitCastExpr 0x2aa8a72df18 <line:427:9> 'long' <IntegralCast>
|   |       `-IntegerLiteral 0x2aa8a72de50 <col:9> 'int' 1
|   `-IfStmt 0x2aa8a735b58 <line:430:5, line:438:5>
|     |-ImplicitCastExpr 0x2aa8a72dfc8 <line:430:9, col:19> 'char' <LValueToRValue>
|     | `-MemberExpr 0x2aa8a72df98 <col:9, col:19> 'const char' lvalue .little 0x2aa8a72dd30
|     |   `-DeclRefExpr 0x2aa8a72df60 <col:9> 'const union (anonymous union at .//openssl//file_jk/before\crypto\evp\bio_ok.c:423:11)':'const union (anonymous at .//openssl//file_jk/before\crypto\evp\bio_ok.c:423:11)' lvalue Var 0x2aa8a72dde8 'is_endian' 'const union (anonymous union at .//openssl//file_jk/before\crypto\evp\bio_ok.c:423:11)':'const union (anonymous at .//openssl//file_jk/before\crypto\evp\bio_ok.c:423:11)'
|     `-CompoundStmt 0x2aa8a735b30 <col:27, line:438:5>
|       |-DeclStmt 0x2aa8a72e058 <line:431:9, col:17>
|       | `-VarDecl 0x2aa8a72dff0 <col:9, col:16> col:16 used i 'size_t':'unsigned long long'
|       |-DeclStmt 0x2aa8a72e200 <line:432:9, col:35>
|       | |-VarDecl 0x2aa8a72e0b0 <col:9, col:28> col:24 used p 'unsigned char *' cinit
|       | | `-ImplicitCastExpr 0x2aa8a72e150 <col:28> 'unsigned char *' <BitCast>
|       | |   `-ImplicitCastExpr 0x2aa8a72e138 <col:28> 'void *' <LValueToRValue>
|       | |     `-DeclRefExpr 0x2aa8a72e118 <col:28> 'void *' lvalue ParmVar 0x2aa8a72d970 '_ptr' 'void *'
|       | `-VarDecl 0x2aa8a72e180 <col:9, col:34> col:34 used c 'unsigned char'
|       `-ForStmt 0x2aa8a735af8 <line:434:9, line:437:9>
|         |-BinaryOperator 0x2aa8a735318 <line:434:14, col:18> 'size_t':'unsigned long long' '='
|         | |-DeclRefExpr 0x2aa8a72e218 <col:14> 'size_t':'unsigned long long' lvalue Var 0x2aa8a72dff0 'i' 'size_t':'unsigned long long'
|         | `-ImplicitCastExpr 0x2aa8a735300 <col:18> 'size_t':'unsigned long long' <IntegralCast>
|         |   `-IntegerLiteral 0x2aa8a7352d8 <col:18> 'int' 0
|         |-<<<NULL>>>
|         |-BinaryOperator 0x2aa8a7353a8 <col:21, col:25> 'int' '<'
|         | |-ImplicitCastExpr 0x2aa8a735378 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|         | | `-DeclRefExpr 0x2aa8a735338 <col:21> 'size_t':'unsigned long long' lvalue Var 0x2aa8a72dff0 'i' 'size_t':'unsigned long long'
|         | `-ImplicitCastExpr 0x2aa8a735390 <col:25> 'size_t':'unsigned long long' <LValueToRValue>
|         |   `-DeclRefExpr 0x2aa8a735358 <col:25> 'size_t':'unsigned long long' lvalue ParmVar 0x2aa8a72d9e8 'len' 'size_t':'unsigned long long'
|         |-CompoundAssignOperator 0x2aa8a735428 <col:30, col:35> 'size_t':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|         | |-DeclRefExpr 0x2aa8a7353c8 <col:30> 'size_t':'unsigned long long' lvalue Var 0x2aa8a72dff0 'i' 'size_t':'unsigned long long'
|         | `-ImplicitCastExpr 0x2aa8a735410 <col:35> 'unsigned long long' <IntegralCast>
|         |   `-IntegerLiteral 0x2aa8a7353e8 <col:35> 'int' 4
|         `-CompoundStmt 0x2aa8a735ad8 <col:38, line:437:9>
|           |-BinaryOperator 0x2aa8a735790 <line:435:13, col:43> 'unsigned char' ','
|           | |-BinaryOperator 0x2aa8a735698 <col:13, col:33> 'unsigned char' ','
|           | | |-BinaryOperator 0x2aa8a735540 <col:13, col:20> 'unsigned char' '='
|           | | | |-DeclRefExpr 0x2aa8a735458 <col:13> 'unsigned char' lvalue Var 0x2aa8a72e180 'c' 'unsigned char'
|           | | | `-ImplicitCastExpr 0x2aa8a735528 <col:17, col:20> 'unsigned char' <LValueToRValue>
|           | | |   `-ArraySubscriptExpr 0x2aa8a735508 <col:17, col:20> 'unsigned char' lvalue
|           | | |     |-ImplicitCastExpr 0x2aa8a7354f0 <col:17> 'unsigned char *' <LValueToRValue>
|           | | |     | `-DeclRefExpr 0x2aa8a735490 <col:17> 'unsigned char *' lvalue Var 0x2aa8a72e0b0 'p' 'unsigned char *'
|           | | |     `-IntegerLiteral 0x2aa8a7354c8 <col:19> 'int' 0
|           | | `-BinaryOperator 0x2aa8a735678 <col:23, col:33> 'unsigned char' '='
|           | |   |-ArraySubscriptExpr 0x2aa8a7355c0 <col:23, col:26> 'unsigned char' lvalue
|           | |   | |-ImplicitCastExpr 0x2aa8a7355a8 <col:23> 'unsigned char *' <LValueToRValue>
|           | |   | | `-DeclRefExpr 0x2aa8a735560 <col:23> 'unsigned char *' lvalue Var 0x2aa8a72e0b0 'p' 'unsigned char *'
|           | |   | `-IntegerLiteral 0x2aa8a735580 <col:25> 'int' 0
|           | |   `-ImplicitCastExpr 0x2aa8a735660 <col:30, col:33> 'unsigned char' <LValueToRValue>
|           | |     `-ArraySubscriptExpr 0x2aa8a735640 <col:30, col:33> 'unsigned char' lvalue
|           | |       |-ImplicitCastExpr 0x2aa8a735628 <col:30> 'unsigned char *' <LValueToRValue>
|           | |       | `-DeclRefExpr 0x2aa8a7355e0 <col:30> 'unsigned char *' lvalue Var 0x2aa8a72e0b0 'p' 'unsigned char *'
|           | |       `-IntegerLiteral 0x2aa8a735600 <col:32> 'int' 3
|           | `-BinaryOperator 0x2aa8a735770 <col:36, col:43> 'unsigned char' '='
|           |   |-ArraySubscriptExpr 0x2aa8a735718 <col:36, col:39> 'unsigned char' lvalue
|           |   | |-ImplicitCastExpr 0x2aa8a735700 <col:36> 'unsigned char *' <LValueToRValue>
|           |   | | `-DeclRefExpr 0x2aa8a7356b8 <col:36> 'unsigned char *' lvalue Var 0x2aa8a72e0b0 'p' 'unsigned char *'
|           |   | `-IntegerLiteral 0x2aa8a7356d8 <col:38> 'int' 3
|           |   `-ImplicitCastExpr 0x2aa8a735758 <col:43> 'unsigned char' <LValueToRValue>
|           |     `-DeclRefExpr 0x2aa8a735738 <col:43> 'unsigned char' lvalue Var 0x2aa8a72e180 'c' 'unsigned char'
|           `-BinaryOperator 0x2aa8a735ab8 <line:436:13, col:43> 'unsigned char' ','
|             |-BinaryOperator 0x2aa8a7359c0 <col:13, col:33> 'unsigned char' ','
|             | |-BinaryOperator 0x2aa8a735868 <col:13, col:20> 'unsigned char' '='
|             | | |-DeclRefExpr 0x2aa8a7357b0 <col:13> 'unsigned char' lvalue Var 0x2aa8a72e180 'c' 'unsigned char'
|             | | `-ImplicitCastExpr 0x2aa8a735850 <col:17, col:20> 'unsigned char' <LValueToRValue>
|             | |   `-ArraySubscriptExpr 0x2aa8a735830 <col:17, col:20> 'unsigned char' lvalue
|             | |     |-ImplicitCastExpr 0x2aa8a735818 <col:17> 'unsigned char *' <LValueToRValue>
|             | |     | `-DeclRefExpr 0x2aa8a7357d0 <col:17> 'unsigned char *' lvalue Var 0x2aa8a72e0b0 'p' 'unsigned char *'
|             | |     `-IntegerLiteral 0x2aa8a7357f0 <col:19> 'int' 1
|             | `-BinaryOperator 0x2aa8a7359a0 <col:23, col:33> 'unsigned char' '='
|             |   |-ArraySubscriptExpr 0x2aa8a7358e8 <col:23, col:26> 'unsigned char' lvalue
|             |   | |-ImplicitCastExpr 0x2aa8a7358d0 <col:23> 'unsigned char *' <LValueToRValue>
|             |   | | `-DeclRefExpr 0x2aa8a735888 <col:23> 'unsigned char *' lvalue Var 0x2aa8a72e0b0 'p' 'unsigned char *'
|             |   | `-IntegerLiteral 0x2aa8a7358a8 <col:25> 'int' 1
|             |   `-ImplicitCastExpr 0x2aa8a735988 <col:30, col:33> 'unsigned char' <LValueToRValue>
|             |     `-ArraySubscriptExpr 0x2aa8a735968 <col:30, col:33> 'unsigned char' lvalue
|             |       |-ImplicitCastExpr 0x2aa8a735950 <col:30> 'unsigned char *' <LValueToRValue>
|             |       | `-DeclRefExpr 0x2aa8a735908 <col:30> 'unsigned char *' lvalue Var 0x2aa8a72e0b0 'p' 'unsigned char *'
|             |       `-IntegerLiteral 0x2aa8a735928 <col:32> 'int' 2
|             `-BinaryOperator 0x2aa8a735a98 <col:36, col:43> 'unsigned char' '='
|               |-ArraySubscriptExpr 0x2aa8a735a40 <col:36, col:39> 'unsigned char' lvalue
|               | |-ImplicitCastExpr 0x2aa8a735a28 <col:36> 'unsigned char *' <LValueToRValue>
|               | | `-DeclRefExpr 0x2aa8a7359e0 <col:36> 'unsigned char *' lvalue Var 0x2aa8a72e0b0 'p' 'unsigned char *'
|               | `-IntegerLiteral 0x2aa8a735a00 <col:38> 'int' 2
|               `-ImplicitCastExpr 0x2aa8a735a80 <col:43> 'unsigned char' <LValueToRValue>
|                 `-DeclRefExpr 0x2aa8a735a60 <col:43> 'unsigned char' lvalue Var 0x2aa8a72e180 'c' 'unsigned char'
|-FunctionDecl 0x2aa8a735c40 <line:441:1, line:481:1> line:441:12 invalid sig_out 'int (int *)' static
| |-ParmVarDecl 0x2aa8a735ba8 <col:20, col:25> col:25 invalid b 'int *'
| `-CompoundStmt 0x2aa8a73c588 <line:442:1, line:481:1>
|   |-DeclStmt 0x2aa8a735d78 <line:443:5, col:20>
|   | `-VarDecl 0x2aa8a735d10 <col:5, col:17> col:17 used ctx 'BIO_OK_CTX *'
|   |-DeclStmt 0x2aa8a735e10 <line:445:5, col:25>
|   | `-VarDecl 0x2aa8a735da8 <col:5, col:19> col:19 invalid digest 'const int *'
|   |-DeclStmt 0x2aa8a735ea8 <line:446:5, col:16>
|   | `-VarDecl 0x2aa8a735e40 <col:5, col:9> col:9 used md_size 'int'
|   |-DeclStmt 0x2aa8a735f40 <line:447:5, col:18>
|   | `-VarDecl 0x2aa8a735ed8 <col:5, col:11> col:11 used md_data 'void *'
|   |-IfStmt 0x2aa8a738508 <line:455:5, line:456:16>
|   | |-BinaryOperator 0x2aa8a7384b0 <line:455:9, line:92:32> 'int' '>'
|   | | |-BinaryOperator 0x2aa8a7383e8 <line:455:9, col:28> 'unsigned long long' '+'
|   | | | |-ImplicitCastExpr 0x2aa8a7383b8 <col:9, col:14> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | | `-MemberExpr 0x2aa8a738308 <col:9, col:14> 'size_t':'unsigned long long' lvalue ->buf_len 0x2aa8a72b7a0
|   | | | |   `-ImplicitCastExpr 0x2aa8a7382f0 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   | | | |     `-DeclRefExpr 0x2aa8a736298 <col:9> 'BIO_OK_CTX *' lvalue Var 0x2aa8a735d10 'ctx' 'BIO_OK_CTX *'
|   | | | `-ImplicitCastExpr 0x2aa8a7383d0 <col:24, col:28> 'unsigned long long' <IntegralCast>
|   | | |   `-BinaryOperator 0x2aa8a738398 <col:24, col:28> 'int' '*'
|   | | |     |-IntegerLiteral 0x2aa8a738338 <col:24> 'int' 2
|   | | |     `-ImplicitCastExpr 0x2aa8a738380 <col:28> 'int' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x2aa8a738360 <col:28> 'int' lvalue Var 0x2aa8a735e40 'md_size' 'int'
|   | | `-ImplicitCastExpr 0x2aa8a738498 <line:92:25, col:32> 'unsigned long long' <IntegralCast>
|   | |   `-ParenExpr 0x2aa8a738478 <col:25, col:32> 'int'
|   | |     `-BinaryOperator 0x2aa8a738458 <col:26, col:31> 'int' '*'
|   | |       |-IntegerLiteral 0x2aa8a738408 <col:26> 'int' 1024
|   | |       `-IntegerLiteral 0x2aa8a738430 <col:31> 'int' 4
|   | `-ReturnStmt 0x2aa8a7384f8 <line:456:9, col:16>
|   |   `-IntegerLiteral 0x2aa8a7384d0 <col:16> 'int' 1
|   |-IfStmt 0x2aa8a738648 <line:458:5, line:459:14>
|   | |-OpaqueValueExpr 0x2aa8a738630 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x2aa8a738618 <col:9, col:14> 'berr' 0x2aa8a7385c8
|   |-IfStmt 0x2aa8a738888 <line:464:5, line:465:14>
|   | |-BinaryOperator 0x2aa8a738850 <line:464:9, col:41> 'int' '<='
|   | | |-CallExpr 0x2aa8a7387c8 <col:9, col:36> 'int'
|   | | | |-ImplicitCastExpr 0x2aa8a7387b0 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x2aa8a738750 <col:9> 'int ()' Function 0x2aa8a738688 'RAND_bytes' 'int ()'
|   | | | |-ImplicitCastExpr 0x2aa8a7387f8 <col:20> 'void *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x2aa8a738770 <col:20> 'void *' lvalue Var 0x2aa8a735ed8 'md_data' 'void *'
|   | | | `-ImplicitCastExpr 0x2aa8a738810 <col:29> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x2aa8a738790 <col:29> 'int' lvalue Var 0x2aa8a735e40 'md_size' 'int'
|   | | `-IntegerLiteral 0x2aa8a738828 <col:41> 'int' 0
|   | `-GotoStmt 0x2aa8a738870 <line:465:9, col:14> 'berr' 0x2aa8a7385c8
|   |-CompoundAssignOperator 0x2aa8a738b38 <line:468:5, col:21> 'size_t':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |-MemberExpr 0x2aa8a738ab8 <col:5, col:10> 'size_t':'unsigned long long' lvalue ->buf_len 0x2aa8a72b7a0
|   | | `-ImplicitCastExpr 0x2aa8a738aa0 <col:5> 'BIO_OK_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2aa8a738a80 <col:5> 'BIO_OK_CTX *' lvalue Var 0x2aa8a735d10 'ctx' 'BIO_OK_CTX *'
|   | `-ImplicitCastExpr 0x2aa8a738b20 <col:21> 'unsigned long long' <IntegralCast>
|   |   `-ImplicitCastExpr 0x2aa8a738b08 <col:21> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x2aa8a738ae8 <col:21> 'int' lvalue Var 0x2aa8a735e40 'md_size' 'int'
|   |-IfStmt 0x2aa8a738fb8 <line:470:5, line:471:14>
|   | |-OpaqueValueExpr 0x2aa8a738fa0 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x2aa8a738f88 <col:9, col:14> 'berr' 0x2aa8a7385c8
|   |-IfStmt 0x2aa8a739238 <line:472:5, line:473:14>
|   | |-OpaqueValueExpr 0x2aa8a739220 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x2aa8a739208 <col:9, col:14> 'berr' 0x2aa8a7385c8
|   |-CompoundAssignOperator 0x2aa8a73c348 <line:474:5, col:21> 'size_t':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |-MemberExpr 0x2aa8a739288 <col:5, col:10> 'size_t':'unsigned long long' lvalue ->buf_len 0x2aa8a72b7a0
|   | | `-ImplicitCastExpr 0x2aa8a739270 <col:5> 'BIO_OK_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2aa8a739250 <col:5> 'BIO_OK_CTX *' lvalue Var 0x2aa8a735d10 'ctx' 'BIO_OK_CTX *'
|   | `-ImplicitCastExpr 0x2aa8a73c330 <col:21> 'unsigned long long' <IntegralCast>
|   |   `-ImplicitCastExpr 0x2aa8a7392d8 <col:21> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x2aa8a7392b8 <col:21> 'int' lvalue Var 0x2aa8a735e40 'md_size' 'int'
|   |-BinaryOperator 0x2aa8a73c408 <line:475:5, col:21> 'int' '='
|   | |-MemberExpr 0x2aa8a73c3b0 <col:5, col:10> 'int' lvalue ->blockout 0x2aa8a72ba98
|   | | `-ImplicitCastExpr 0x2aa8a73c398 <col:5> 'BIO_OK_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2aa8a73c378 <col:5> 'BIO_OK_CTX *' lvalue Var 0x2aa8a735d10 'ctx' 'BIO_OK_CTX *'
|   | `-IntegerLiteral 0x2aa8a73c3e0 <col:21> 'int' 1
|   |-BinaryOperator 0x2aa8a73c4b8 <line:476:5, col:18> 'int' '='
|   | |-MemberExpr 0x2aa8a73c460 <col:5, col:10> 'int' lvalue ->sigio 0x2aa8a72bb08
|   | | `-ImplicitCastExpr 0x2aa8a73c448 <col:5> 'BIO_OK_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2aa8a73c428 <col:5> 'BIO_OK_CTX *' lvalue Var 0x2aa8a735d10 'ctx' 'BIO_OK_CTX *'
|   | `-IntegerLiteral 0x2aa8a73c490 <col:18> 'int' 0
|   |-ReturnStmt 0x2aa8a73c500 <line:477:5, col:12>
|   | `-IntegerLiteral 0x2aa8a73c4d8 <col:12> 'int' 1
|   |-LabelStmt 0x2aa8a73c538 <line:478:2, col:6> 'berr'
|   | `-NullStmt 0x2aa8a73c530 <col:6>
|   `-ReturnStmt 0x2aa8a73c578 <line:480:5, col:12>
|     `-IntegerLiteral 0x2aa8a73c550 <col:12> 'int' 0
|-FunctionDecl 0x2aa8a738d40 <line:470:42> col:42 implicit used strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x2aa8a738de0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2aa8a73c6c8 <line:483:1, line:529:1> line:483:12 invalid sig_in 'int (int *)' static
| |-ParmVarDecl 0x2aa8a73c630 <col:19, col:24> col:24 invalid b 'int *'
| `-CompoundStmt 0x2aa8a7362d0 <line:484:1, line:529:1>
|   |-DeclStmt 0x2aa8a73c800 <line:485:5, col:20>
|   | `-VarDecl 0x2aa8a73c798 <col:5, col:17> col:17 used ctx 'BIO_OK_CTX *'
|   |-DeclStmt 0x2aa8a73c898 <line:487:5, col:39>
|   | `-VarDecl 0x2aa8a73c830 <col:5, col:19> col:19 invalid tmp 'unsigned char'
|   |-DeclStmt 0x2aa8a73c958 <line:488:5, col:16>
|   | `-VarDecl 0x2aa8a73c8c8 <col:5, col:15> col:9 used ret 'int' cinit
|   |   `-IntegerLiteral 0x2aa8a73c930 <col:15> 'int' 0
|   |-DeclStmt 0x2aa8a73c9f0 <line:489:5, col:25>
|   | `-VarDecl 0x2aa8a73c988 <col:5, col:19> col:19 invalid digest 'const int *'
|   |-DeclStmt 0x2aa8a73ca88 <line:490:5, col:16>
|   | `-VarDecl 0x2aa8a73ca20 <col:5, col:9> col:9 used md_size 'int'
|   |-DeclStmt 0x2aa8a73cb20 <line:491:5, col:18>
|   | `-VarDecl 0x2aa8a73cab8 <col:5, col:11> col:11 used md_data 'void *'
|   |-IfStmt 0x2aa8a73cf10 <line:499:5, line:500:16>
|   | |-BinaryOperator 0x2aa8a73ceb8 <line:499:9, col:50> 'int' '<'
|   | | |-CStyleCastExpr 0x2aa8a73ce10 <col:9, col:42> 'int' <IntegralCast>
|   | | | `-ParenExpr 0x2aa8a73cdf0 <col:14, col:42> 'unsigned long long'
|   | | |   `-BinaryOperator 0x2aa8a73cd98 <col:15, col:35> 'unsigned long long' '-'
|   | | |     |-ImplicitCastExpr 0x2aa8a73cd68 <col:15, col:20> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |     | `-MemberExpr 0x2aa8a73ccd0 <col:15, col:20> 'size_t':'unsigned long long' lvalue ->buf_len 0x2aa8a72b7a0
|   | | |     |   `-ImplicitCastExpr 0x2aa8a73ccb8 <col:15> 'BIO_OK_CTX *' <LValueToRValue>
|   | | |     |     `-DeclRefExpr 0x2aa8a73cc98 <col:15> 'BIO_OK_CTX *' lvalue Var 0x2aa8a73c798 'ctx' 'BIO_OK_CTX *'
|   | | |     `-ImplicitCastExpr 0x2aa8a73cd80 <col:30, col:35> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |       `-MemberExpr 0x2aa8a73cd38 <col:30, col:35> 'size_t':'unsigned long long' lvalue ->buf_off 0x2aa8a72b808
|   | | |         `-ImplicitCastExpr 0x2aa8a73cd20 <col:30> 'BIO_OK_CTX *' <LValueToRValue>
|   | | |           `-DeclRefExpr 0x2aa8a73cd00 <col:30> 'BIO_OK_CTX *' lvalue Var 0x2aa8a73c798 'ctx' 'BIO_OK_CTX *'
|   | | `-BinaryOperator 0x2aa8a73ce98 <col:46, col:50> 'int' '*'
|   | |   |-IntegerLiteral 0x2aa8a73ce38 <col:46> 'int' 2
|   | |   `-ImplicitCastExpr 0x2aa8a73ce80 <col:50> 'int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x2aa8a73ce60 <col:50> 'int' lvalue Var 0x2aa8a73ca20 'md_size' 'int'
|   | `-ReturnStmt 0x2aa8a73cf00 <line:500:9, col:16>
|   |   `-IntegerLiteral 0x2aa8a73ced8 <col:16> 'int' 1
|   |-IfStmt 0x2aa8a73d050 <line:502:5, line:503:14>
|   | |-OpaqueValueExpr 0x2aa8a73d038 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x2aa8a73d020 <col:9, col:14> 'berr' 0x2aa8a73cfd0
|   |-CallExpr 0x2aa8a73d240 <line:505:5, col:30> 'void'
|   | |-ImplicitCastExpr 0x2aa8a73d228 <col:5> 'void (*)(void *, size_t)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x2aa8a73d168 <col:5> 'void (void *, size_t)' Function 0x2aa8a72db28 'longswap' 'void (void *, size_t)'
|   | |-ImplicitCastExpr 0x2aa8a73d270 <col:14> 'void *' <LValueToRValue>
|   | | `-DeclRefExpr 0x2aa8a73d188 <col:14> 'void *' lvalue Var 0x2aa8a73cab8 'md_data' 'void *'
|   | `-ImplicitCastExpr 0x2aa8a73d2a0 <col:23> 'size_t':'unsigned long long' <IntegralCast>
|   |   `-ImplicitCastExpr 0x2aa8a73d288 <col:23> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x2aa8a73d1a8 <col:23> 'int' lvalue Var 0x2aa8a73ca20 'md_size' 'int'
|   |-CompoundAssignOperator 0x2aa8a73d390 <line:506:5, col:21> 'size_t':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |-MemberExpr 0x2aa8a73d2f0 <col:5, col:10> 'size_t':'unsigned long long' lvalue ->buf_off 0x2aa8a72b808
|   | | `-ImplicitCastExpr 0x2aa8a73d2d8 <col:5> 'BIO_OK_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2aa8a73d2b8 <col:5> 'BIO_OK_CTX *' lvalue Var 0x2aa8a73c798 'ctx' 'BIO_OK_CTX *'
|   | `-ImplicitCastExpr 0x2aa8a73d378 <col:21> 'unsigned long long' <IntegralCast>
|   |   `-ImplicitCastExpr 0x2aa8a73d360 <col:21> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x2aa8a73d340 <col:21> 'int' lvalue Var 0x2aa8a73ca20 'md_size' 'int'
|   |-IfStmt 0x2aa8a73d558 <line:508:5, line:509:14>
|   | |-OpaqueValueExpr 0x2aa8a73d540 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x2aa8a73d528 <col:9, col:14> 'berr' 0x2aa8a73cfd0
|   |-IfStmt 0x2aa8a73d648 <line:510:5, line:511:14>
|   | |-OpaqueValueExpr 0x2aa8a73d630 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x2aa8a73d618 <col:9, col:14> 'berr' 0x2aa8a73cfd0
|   |-CompoundAssignOperator 0x2aa8a73daa8 <line:513:5, col:21> 'size_t':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |-MemberExpr 0x2aa8a73da28 <col:5, col:10> 'size_t':'unsigned long long' lvalue ->buf_off 0x2aa8a72b808
|   | | `-ImplicitCastExpr 0x2aa8a73da10 <col:5> 'BIO_OK_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2aa8a73d9f0 <col:5> 'BIO_OK_CTX *' lvalue Var 0x2aa8a73c798 'ctx' 'BIO_OK_CTX *'
|   | `-ImplicitCastExpr 0x2aa8a73da90 <col:21> 'unsigned long long' <IntegralCast>
|   |   `-ImplicitCastExpr 0x2aa8a73da78 <col:21> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x2aa8a73da58 <col:21> 'int' lvalue Var 0x2aa8a73ca20 'md_size' 'int'
|   |-IfStmt 0x2aa8a73e240 <line:514:5, line:524:5> has_else
|   | |-BinaryOperator 0x2aa8a73db38 <line:514:9, col:16> 'int' '=='
|   | | |-ImplicitCastExpr 0x2aa8a73db20 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2aa8a73dad8 <col:9> 'int' lvalue Var 0x2aa8a73c8c8 'ret' 'int'
|   | | `-IntegerLiteral 0x2aa8a73daf8 <col:16> 'int' 1
|   | |-CompoundStmt 0x2aa8a73e148 <col:19, line:522:5>
|   | | |-BinaryOperator 0x2aa8a73dbe8 <line:515:9, col:22> 'int' '='
|   | | | |-MemberExpr 0x2aa8a73db90 <col:9, col:14> 'int' lvalue ->sigio 0x2aa8a72bb08
|   | | | | `-ImplicitCastExpr 0x2aa8a73db78 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x2aa8a73db58 <col:9> 'BIO_OK_CTX *' lvalue Var 0x2aa8a73c798 'ctx' 'BIO_OK_CTX *'
|   | | | `-IntegerLiteral 0x2aa8a73dbc0 <col:22> 'int' 0
|   | | |-IfStmt 0x2aa8a73df50 <line:516:9, line:519:9>
|   | | | |-BinaryOperator 0x2aa8a73dd08 <line:516:13, col:34> 'int' '!='
|   | | | | |-ImplicitCastExpr 0x2aa8a73dcd8 <col:13, col:18> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | | | `-MemberExpr 0x2aa8a73dc40 <col:13, col:18> 'size_t':'unsigned long long' lvalue ->buf_len 0x2aa8a72b7a0
|   | | | | |   `-ImplicitCastExpr 0x2aa8a73dc28 <col:13> 'BIO_OK_CTX *' <LValueToRValue>
|   | | | | |     `-DeclRefExpr 0x2aa8a73dc08 <col:13> 'BIO_OK_CTX *' lvalue Var 0x2aa8a73c798 'ctx' 'BIO_OK_CTX *'
|   | | | | `-ImplicitCastExpr 0x2aa8a73dcf0 <col:29, col:34> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | |   `-MemberExpr 0x2aa8a73dca8 <col:29, col:34> 'size_t':'unsigned long long' lvalue ->buf_off 0x2aa8a72b808
|   | | | |     `-ImplicitCastExpr 0x2aa8a73dc90 <col:29> 'BIO_OK_CTX *' <LValueToRValue>
|   | | | |       `-DeclRefExpr 0x2aa8a73dc70 <col:29> 'BIO_OK_CTX *' lvalue Var 0x2aa8a73c798 'ctx' 'BIO_OK_CTX *'
|   | | | `-CompoundStmt 0x2aa8a73df40 <col:43, line:519:9>
|   | | |-CompoundAssignOperator 0x2aa8a73e050 <line:520:9, col:30> 'size_t':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | | | |-MemberExpr 0x2aa8a73dfa0 <col:9, col:14> 'size_t':'unsigned long long' lvalue ->buf_len 0x2aa8a72b7a0
|   | | | | `-ImplicitCastExpr 0x2aa8a73df88 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x2aa8a73df68 <col:9> 'BIO_OK_CTX *' lvalue Var 0x2aa8a73c798 'ctx' 'BIO_OK_CTX *'
|   | | | `-ImplicitCastExpr 0x2aa8a73e038 <col:25, col:30> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |   `-MemberExpr 0x2aa8a73e008 <col:25, col:30> 'size_t':'unsigned long long' lvalue ->buf_off 0x2aa8a72b808
|   | | |     `-ImplicitCastExpr 0x2aa8a73dff0 <col:25> 'BIO_OK_CTX *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x2aa8a73dfd0 <col:25> 'BIO_OK_CTX *' lvalue Var 0x2aa8a73c798 'ctx' 'BIO_OK_CTX *'
|   | | `-BinaryOperator 0x2aa8a73e128 <line:521:9, col:24> 'size_t':'unsigned long long' '='
|   | |   |-MemberExpr 0x2aa8a73e0b8 <col:9, col:14> 'size_t':'unsigned long long' lvalue ->buf_off 0x2aa8a72b808
|   | |   | `-ImplicitCastExpr 0x2aa8a73e0a0 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x2aa8a73e080 <col:9> 'BIO_OK_CTX *' lvalue Var 0x2aa8a73c798 'ctx' 'BIO_OK_CTX *'
|   | |   `-ImplicitCastExpr 0x2aa8a73e110 <col:24> 'size_t':'unsigned long long' <IntegralCast>
|   | |     `-IntegerLiteral 0x2aa8a73e0e8 <col:24> 'int' 0
|   | `-CompoundStmt 0x2aa8a73e228 <line:522:12, line:524:5>
|   |   `-BinaryOperator 0x2aa8a73e208 <line:523:9, col:21> 'int' '='
|   |     |-MemberExpr 0x2aa8a73e1b0 <col:9, col:14> 'int' lvalue ->cont 0x2aa8a72b948
|   |     | `-ImplicitCastExpr 0x2aa8a73e198 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x2aa8a73e178 <col:9> 'BIO_OK_CTX *' lvalue Var 0x2aa8a73c798 'ctx' 'BIO_OK_CTX *'
|   |     `-IntegerLiteral 0x2aa8a73e1e0 <col:21> 'int' 0
|   |-ReturnStmt 0x2aa8a73e290 <line:525:5, col:12>
|   | `-IntegerLiteral 0x2aa8a73e268 <col:12> 'int' 1
|   |-LabelStmt 0x2aa8a73e2c8 <line:526:2, col:6> 'berr'
|   | `-NullStmt 0x2aa8a73e2c0 <col:6>
|   `-ReturnStmt 0x2aa8a73e308 <line:528:5, col:12>
|     `-IntegerLiteral 0x2aa8a73e2e0 <col:12> 'int' 0
|-FunctionDecl 0x2aa8a73d6e0 <line:512:11> col:11 implicit used memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x2aa8a73d780 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x2aa8a73d7e8 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x2aa8a73d850 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2aa8a736418 <line:531:1, line:560:1> line:531:12 invalid block_out 'int (int *)' static
| |-ParmVarDecl 0x2aa8a736380 <col:22, col:27> col:27 invalid b 'int *'
| `-CompoundStmt 0x2aa8a73e478 <line:532:1, line:560:1>
|   |-DeclStmt 0x2aa8a736550 <line:533:5, col:20>
|   | `-VarDecl 0x2aa8a7364e8 <col:5, col:17> col:17 used ctx 'BIO_OK_CTX *'
|   |-DeclStmt 0x2aa8a7365e8 <line:535:5, col:21>
|   | `-VarDecl 0x2aa8a736580 <col:5, col:19> col:19 used tl 'unsigned long'
|   |-DeclStmt 0x2aa8a736680 <line:536:5, col:25>
|   | `-VarDecl 0x2aa8a736618 <col:5, col:19> col:19 invalid digest 'const int *'
|   |-DeclStmt 0x2aa8a736718 <line:537:5, col:16>
|   | `-VarDecl 0x2aa8a7366b0 <col:5, col:9> col:9 used md_size 'int'
|   |-BinaryOperator 0x2aa8a736968 <line:544:5, line:93:25> 'unsigned long' '='
|   | |-DeclRefExpr 0x2aa8a736838 <line:544:5> 'unsigned long' lvalue Var 0x2aa8a736580 'tl' 'unsigned long'
|   | `-ImplicitCastExpr 0x2aa8a736950 <col:10, line:93:25> 'unsigned long' <IntegralCast>
|   |   `-BinaryOperator 0x2aa8a736930 <line:544:10, line:93:25> 'unsigned long long' '-'
|   |     |-ImplicitCastExpr 0x2aa8a736900 <line:544:10, col:15> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | `-MemberExpr 0x2aa8a7368a8 <col:10, col:15> 'size_t':'unsigned long long' lvalue ->buf_len 0x2aa8a72b7a0
|   |     |   `-ImplicitCastExpr 0x2aa8a736890 <col:10> 'BIO_OK_CTX *' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x2aa8a736870 <col:10> 'BIO_OK_CTX *' lvalue Var 0x2aa8a7364e8 'ctx' 'BIO_OK_CTX *'
|   |     `-ImplicitCastExpr 0x2aa8a736918 <line:93:25> 'unsigned long long' <IntegralCast>
|   |       `-IntegerLiteral 0x2aa8a7368d8 <col:25> 'int' 4
|   |-IfStmt 0x2aa8a736fe0 <line:549:5, line:551:14>
|   | |-OpaqueValueExpr 0x2aa8a736fc8 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x2aa8a736fb0 <col:9, col:14> 'berr' 0x2aa8a736f60
|   |-IfStmt 0x2aa8a737170 <line:552:5, line:553:14>
|   | |-OpaqueValueExpr 0x2aa8a737158 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x2aa8a737140 <col:9, col:14> 'berr' 0x2aa8a736f60
|   |-CompoundAssignOperator 0x2aa8a737240 <line:554:5, col:21> 'size_t':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |-MemberExpr 0x2aa8a7371c0 <col:5, col:10> 'size_t':'unsigned long long' lvalue ->buf_len 0x2aa8a72b7a0
|   | | `-ImplicitCastExpr 0x2aa8a7371a8 <col:5> 'BIO_OK_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2aa8a737188 <col:5> 'BIO_OK_CTX *' lvalue Var 0x2aa8a7364e8 'ctx' 'BIO_OK_CTX *'
|   | `-ImplicitCastExpr 0x2aa8a737228 <col:21> 'unsigned long long' <IntegralCast>
|   |   `-ImplicitCastExpr 0x2aa8a737210 <col:21> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x2aa8a7371f0 <col:21> 'int' lvalue Var 0x2aa8a7366b0 'md_size' 'int'
|   |-BinaryOperator 0x2aa8a73e3a8 <line:555:5, col:21> 'int' '='
|   | |-MemberExpr 0x2aa8a73e350 <col:5, col:10> 'int' lvalue ->blockout 0x2aa8a72ba98
|   | | `-ImplicitCastExpr 0x2aa8a737290 <col:5> 'BIO_OK_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2aa8a737270 <col:5> 'BIO_OK_CTX *' lvalue Var 0x2aa8a7364e8 'ctx' 'BIO_OK_CTX *'
|   | `-IntegerLiteral 0x2aa8a73e380 <col:21> 'int' 1
|   |-ReturnStmt 0x2aa8a73e3f0 <line:556:5, col:12>
|   | `-IntegerLiteral 0x2aa8a73e3c8 <col:12> 'int' 1
|   |-LabelStmt 0x2aa8a73e428 <line:557:2, col:6> 'berr'
|   | `-NullStmt 0x2aa8a73e420 <col:6>
|   `-ReturnStmt 0x2aa8a73e468 <line:559:5, col:12>
|     `-IntegerLiteral 0x2aa8a73e440 <col:12> 'int' 0
`-FunctionDecl 0x2aa8a73e598 <line:562:1, line:605:1> line:562:12 invalid block_in 'int (int *)' static
  |-ParmVarDecl 0x2aa8a73e500 <col:21, col:26> col:26 invalid b 'int *'
  `-CompoundStmt 0x2aa8a737f18 <line:563:1, line:605:1>
    |-DeclStmt 0x2aa8a73e6d0 <line:564:5, col:20>
    | `-VarDecl 0x2aa8a73e668 <col:5, col:17> col:17 used ctx 'BIO_OK_CTX *'
    |-DeclStmt 0x2aa8a73e7a8 <line:566:5, col:25>
    | `-VarDecl 0x2aa8a73e700 <col:5, col:24> col:19 used tl 'unsigned long' cinit
    |   `-ImplicitCastExpr 0x2aa8a73e790 <col:24> 'unsigned long' <IntegralCast>
    |     `-IntegerLiteral 0x2aa8a73e768 <col:24> 'int' 0
    |-DeclStmt 0x2aa8a73e840 <line:567:5, col:39>
    | `-VarDecl 0x2aa8a73e7d8 <col:5, col:19> col:19 invalid tmp 'unsigned char'
    |-DeclStmt 0x2aa8a73e8d8 <line:568:5, col:16>
    | `-VarDecl 0x2aa8a73e870 <col:5, col:9> col:9 used md_size 'int'
    |-CStyleCastExpr 0x2aa8a73eeb8 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:29, col:128> 'void' <ToVoid>
    | `-ParenExpr 0x2aa8a73ee98 <col:35, col:128> 'int'
    |   `-BinaryOperator 0x2aa8a73ee48 <col:37, col:126> 'int' '||'
    |     |-ParenExpr 0x2aa8a73eb08 <col:37, col:53> 'int'
    |     | `-UnaryOperator 0x2aa8a73eaf0 <col:38, col:52> 'int' prefix '!' cannot overflow
    |     |   `-UnaryOperator 0x2aa8a73ead8 <col:39, col:52> 'int' prefix '!' cannot overflow
    |     |     `-ParenExpr 0x2aa8a73eab8 <col:40, col:52> 'int'
    |     |       `-BinaryOperator 0x2aa8a73ea98 <.//openssl//file_jk/before\crypto\evp\bio_ok.c:574:12, line:93:25> 'int' '>='
    |     |         |-UnaryExprOrTypeTraitExpr 0x2aa8a73ea38 <line:574:12, col:21> 'unsigned long long' sizeof
    |     |         | `-ParenExpr 0x2aa8a73ea18 <col:18, col:21> 'unsigned long' lvalue
    |     |         |   `-DeclRefExpr 0x2aa8a73e9f8 <col:19> 'unsigned long' lvalue Var 0x2aa8a73e700 'tl' 'unsigned long' non_odr_use_unevaluated
    |     |         `-ImplicitCastExpr 0x2aa8a73ea80 <line:93:25> 'unsigned long long' <IntegralCast>
    |     |           `-IntegerLiteral 0x2aa8a73ea58 <col:25> 'int' 4
    |     `-ParenExpr 0x2aa8a73ee28 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:58, col:126> 'int'
    |       `-BinaryOperator 0x2aa8a73ee08 <col:59, col:125> 'int' ','
    |         |-CallExpr 0x2aa8a73ed30 <col:59, col:122> 'void'
    |         | |-ImplicitCastExpr 0x2aa8a73ed18 <col:59> 'void (*)(const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))' <FunctionToPointerDecay>
    |         | | `-DeclRefExpr 0x2aa8a73eb28 <col:59> 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)' Function 0x2aa8a729200 '_wassert' 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
    |         | |-ImplicitCastExpr 0x2aa8a73ed80 <<scratch space>:199:1> 'const wchar_t *' <NoOp>
    |         | | `-ImplicitCastExpr 0x2aa8a73ed68 <col:1> 'unsigned short *' <ArrayToPointerDecay>
    |         | |   `-StringLiteral 0x2aa8a73eb88 <col:1> 'unsigned short [29]' lvalue L"sizeof(tl) >= OK_BLOCK_BLOCK"
    |         | |-ImplicitCastExpr 0x2aa8a73edb0 <line:201:1> 'const wchar_t *' <NoOp>
    |         | | `-ImplicitCastExpr 0x2aa8a73ed98 <col:1> 'unsigned short *' <ArrayToPointerDecay>
    |         | |   `-StringLiteral 0x2aa8a73ec18 <col:1> 'unsigned short [47]' lvalue L".//openssl//file_jk/before\\crypto\\evp\\bio_ok.c"
    |         | `-ImplicitCastExpr 0x2aa8a73edc8 <line:202:1> 'unsigned int' <IntegralCast>
    |         |   `-IntegerLiteral 0x2aa8a73ec90 <col:1> 'int' 574
    |         `-IntegerLiteral 0x2aa8a73ede0 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:125> 'int' 0
    |-CompoundAssignOperator 0x2aa8a73efd8 <.//openssl//file_jk/before\crypto\evp\bio_ok.c:576:5, col:12> 'unsigned long' '<<=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
    | |-DeclRefExpr 0x2aa8a73ef78 <col:5> 'unsigned long' lvalue Var 0x2aa8a73e700 'tl' 'unsigned long'
    | `-IntegerLiteral 0x2aa8a73ef98 <col:12> 'int' 8
    |-CompoundAssignOperator 0x2aa8a73f0e8 <line:578:5, col:12> 'unsigned long' '<<=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
    | |-DeclRefExpr 0x2aa8a73f088 <col:5> 'unsigned long' lvalue Var 0x2aa8a73e700 'tl' 'unsigned long'
    | `-IntegerLiteral 0x2aa8a73f0a8 <col:12> 'int' 8
    |-CompoundAssignOperator 0x2aa8a73f1f8 <line:580:5, col:12> 'unsigned long' '<<=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
    | |-DeclRefExpr 0x2aa8a73f198 <col:5> 'unsigned long' lvalue Var 0x2aa8a73e700 'tl' 'unsigned long'
    | `-IntegerLiteral 0x2aa8a73f1b8 <col:12> 'int' 8
    |-IfStmt 0x2aa8a737450 <line:583:5, line:584:16>
    | |-BinaryOperator 0x2aa8a7373f8 <line:583:9, col:46> 'int' '<'
    | | |-ImplicitCastExpr 0x2aa8a7373c8 <col:9, col:14> 'size_t':'unsigned long long' <LValueToRValue>
    | | | `-MemberExpr 0x2aa8a73f2e0 <col:9, col:14> 'size_t':'unsigned long long' lvalue ->buf_len 0x2aa8a72b7a0
    | | |   `-ImplicitCastExpr 0x2aa8a73f2c8 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
    | | |     `-DeclRefExpr 0x2aa8a73f2a8 <col:9> 'BIO_OK_CTX *' lvalue Var 0x2aa8a73e668 'ctx' 'BIO_OK_CTX *'
    | | `-ImplicitCastExpr 0x2aa8a7373e0 <col:24, col:46> 'unsigned long long' <IntegralCast>
    | |   `-BinaryOperator 0x2aa8a7373a8 <col:24, col:46> 'unsigned long' '+'
    | |     |-BinaryOperator 0x2aa8a737338 <col:24, line:93:25> 'unsigned long' '+'
    | |     | |-ImplicitCastExpr 0x2aa8a737308 <line:583:24> 'unsigned long' <LValueToRValue>
    | |     | | `-DeclRefExpr 0x2aa8a73f310 <col:24> 'unsigned long' lvalue Var 0x2aa8a73e700 'tl' 'unsigned long'
    | |     | `-ImplicitCastExpr 0x2aa8a737320 <line:93:25> 'unsigned long' <IntegralCast>
    | |     |   `-IntegerLiteral 0x2aa8a7372e0 <col:25> 'int' 4
    | |     `-ImplicitCastExpr 0x2aa8a737390 <line:583:46> 'unsigned long' <IntegralCast>
    | |       `-ImplicitCastExpr 0x2aa8a737378 <col:46> 'int' <LValueToRValue>
    | |         `-DeclRefExpr 0x2aa8a737358 <col:46> 'int' lvalue Var 0x2aa8a73e870 'md_size' 'int'
    | `-ReturnStmt 0x2aa8a737440 <line:584:9, col:16>
    |   `-IntegerLiteral 0x2aa8a737418 <col:16> 'int' 1
    |-IfStmt 0x2aa8a737588 <line:586:5, line:588:14>
    | |-OpaqueValueExpr 0x2aa8a737570 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x2aa8a737558 <col:9, col:14> 'berr' 0x2aa8a737508
    |-IfStmt 0x2aa8a737678 <line:589:5, line:590:14>
    | |-OpaqueValueExpr 0x2aa8a737660 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x2aa8a737648 <col:9, col:14> 'berr' 0x2aa8a737508
    |-IfStmt 0x2aa8a737e40 <line:591:5, line:600:5> has_else
    | |-OpaqueValueExpr 0x2aa8a737e28 <<invalid sloc>> '_Bool'
    | |-CompoundStmt 0x2aa8a737d28 <line:591:70, line:598:5>
    | | |-BinaryOperator 0x2aa8a737950 <line:593:9, col:51> 'size_t':'unsigned long long' '='
    | | | |-MemberExpr 0x2aa8a737800 <col:9, col:14> 'size_t':'unsigned long long' lvalue ->buf_off_save 0x2aa8a72b8d8
    | | | | `-ImplicitCastExpr 0x2aa8a7377e8 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
    | | | |   `-DeclRefExpr 0x2aa8a7377c8 <col:9> 'BIO_OK_CTX *' lvalue Var 0x2aa8a73e668 'ctx' 'BIO_OK_CTX *'
    | | | `-ImplicitCastExpr 0x2aa8a737938 <col:29, col:51> 'size_t':'unsigned long long' <IntegralCast>
    | | |   `-BinaryOperator 0x2aa8a737918 <col:29, col:51> 'unsigned long' '+'
    | | |     |-BinaryOperator 0x2aa8a7378a8 <col:29, line:93:25> 'unsigned long' '+'
    | | |     | |-ImplicitCastExpr 0x2aa8a737878 <line:593:29> 'unsigned long' <LValueToRValue>
    | | |     | | `-DeclRefExpr 0x2aa8a737830 <col:29> 'unsigned long' lvalue Var 0x2aa8a73e700 'tl' 'unsigned long'
    | | |     | `-ImplicitCastExpr 0x2aa8a737890 <line:93:25> 'unsigned long' <IntegralCast>
    | | |     |   `-IntegerLiteral 0x2aa8a737850 <col:25> 'int' 4
    | | |     `-ImplicitCastExpr 0x2aa8a737900 <line:593:51> 'unsigned long' <IntegralCast>
    | | |       `-ImplicitCastExpr 0x2aa8a7378e8 <col:51> 'int' <LValueToRValue>
    | | |         `-DeclRefExpr 0x2aa8a7378c8 <col:51> 'int' lvalue Var 0x2aa8a73e870 'md_size' 'int'
    | | |-BinaryOperator 0x2aa8a737a58 <line:594:9, col:34> 'size_t':'unsigned long long' '='
    | | | |-MemberExpr 0x2aa8a7379a8 <col:9, col:14> 'size_t':'unsigned long long' lvalue ->buf_len_save 0x2aa8a72b870
    | | | | `-ImplicitCastExpr 0x2aa8a737990 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
    | | | |   `-DeclRefExpr 0x2aa8a737970 <col:9> 'BIO_OK_CTX *' lvalue Var 0x2aa8a73e668 'ctx' 'BIO_OK_CTX *'
    | | | `-ImplicitCastExpr 0x2aa8a737a40 <col:29, col:34> 'size_t':'unsigned long long' <LValueToRValue>
    | | |   `-MemberExpr 0x2aa8a737a10 <col:29, col:34> 'size_t':'unsigned long long' lvalue ->buf_len 0x2aa8a72b7a0
    | | |     `-ImplicitCastExpr 0x2aa8a7379f8 <col:29> 'BIO_OK_CTX *' <LValueToRValue>
    | | |       `-DeclRefExpr 0x2aa8a7379d8 <col:29> 'BIO_OK_CTX *' lvalue Var 0x2aa8a73e668 'ctx' 'BIO_OK_CTX *'
    | | |-BinaryOperator 0x2aa8a737b20 <line:595:9, line:93:25> 'size_t':'unsigned long long' '='
    | | | |-MemberExpr 0x2aa8a737ab0 <line:595:9, col:14> 'size_t':'unsigned long long' lvalue ->buf_off 0x2aa8a72b808
    | | | | `-ImplicitCastExpr 0x2aa8a737a98 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
    | | | |   `-DeclRefExpr 0x2aa8a737a78 <col:9> 'BIO_OK_CTX *' lvalue Var 0x2aa8a73e668 'ctx' 'BIO_OK_CTX *'
    | | | `-ImplicitCastExpr 0x2aa8a737b08 <line:93:25> 'size_t':'unsigned long long' <IntegralCast>
    | | |   `-IntegerLiteral 0x2aa8a737ae0 <col:25> 'int' 4
    | | |-BinaryOperator 0x2aa8a737c58 <line:596:9, line:93:25> 'size_t':'unsigned long long' '='
    | | | |-MemberExpr 0x2aa8a737b78 <line:596:9, col:14> 'size_t':'unsigned long long' lvalue ->buf_len 0x2aa8a72b7a0
    | | | | `-ImplicitCastExpr 0x2aa8a737b60 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
    | | | |   `-DeclRefExpr 0x2aa8a737b40 <col:9> 'BIO_OK_CTX *' lvalue Var 0x2aa8a73e668 'ctx' 'BIO_OK_CTX *'
    | | | `-ImplicitCastExpr 0x2aa8a737c40 <col:24, line:93:25> 'size_t':'unsigned long long' <IntegralCast>
    | | |   `-BinaryOperator 0x2aa8a737c20 <line:596:24, line:93:25> 'unsigned long' '+'
    | | |     |-ImplicitCastExpr 0x2aa8a737bf0 <line:596:24> 'unsigned long' <LValueToRValue>
    | | |     | `-DeclRefExpr 0x2aa8a737ba8 <col:24> 'unsigned long' lvalue Var 0x2aa8a73e700 'tl' 'unsigned long'
    | | |     `-ImplicitCastExpr 0x2aa8a737c08 <line:93:25> 'unsigned long' <IntegralCast>
    | | |       `-IntegerLiteral 0x2aa8a737bc8 <col:25> 'int' 4
    | | `-BinaryOperator 0x2aa8a737d08 <line:597:9, col:25> 'int' '='
    | |   |-MemberExpr 0x2aa8a737cb0 <col:9, col:14> 'int' lvalue ->blockout 0x2aa8a72ba98
    | |   | `-ImplicitCastExpr 0x2aa8a737c98 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
    | |   |   `-DeclRefExpr 0x2aa8a737c78 <col:9> 'BIO_OK_CTX *' lvalue Var 0x2aa8a73e668 'ctx' 'BIO_OK_CTX *'
    | |   `-IntegerLiteral 0x2aa8a737ce0 <col:25> 'int' 1
    | `-CompoundStmt 0x2aa8a737e10 <line:598:12, line:600:5>
    |   `-BinaryOperator 0x2aa8a737df0 <line:599:9, col:21> 'int' '='
    |     |-MemberExpr 0x2aa8a737d98 <col:9, col:14> 'int' lvalue ->cont 0x2aa8a72b948
    |     | `-ImplicitCastExpr 0x2aa8a737d80 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
    |     |   `-DeclRefExpr 0x2aa8a737d60 <col:9> 'BIO_OK_CTX *' lvalue Var 0x2aa8a73e668 'ctx' 'BIO_OK_CTX *'
    |     `-IntegerLiteral 0x2aa8a737dc8 <col:21> 'int' 0
    |-ReturnStmt 0x2aa8a737e90 <line:601:5, col:12>
    | `-IntegerLiteral 0x2aa8a737e68 <col:12> 'int' 1
    |-LabelStmt 0x2aa8a737ec8 <line:602:2, col:6> 'berr'
    | `-NullStmt 0x2aa8a737ec0 <col:6>
    `-ReturnStmt 0x2aa8a737f08 <line:604:5, col:12>
      `-IntegerLiteral 0x2aa8a737ee0 <col:12> 'int' 0
