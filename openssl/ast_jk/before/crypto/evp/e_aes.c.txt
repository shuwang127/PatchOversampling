TranslationUnitDecl 0x16f68c5e338 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x16f68c5ebd0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x16f68c5e8d0 '__int128'
|-TypedefDecl 0x16f68c5ec40 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x16f68c5e8f0 'unsigned __int128'
|-TypedefDecl 0x16f68c5ef78 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x16f68c5ed30 'struct __NSConstantString_tag'
|   `-Record 0x16f68c5ec98 '__NSConstantString_tag'
|-TypedefDecl 0x16f68c5efe8 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x16f68c5e510 'unsigned long long'
|-TypedefDecl 0x16f68c5f080 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x16f68c5f040 'char *'
|   `-BuiltinType 0x16f68c5e3d0 'char'
|-TypedefDecl 0x16f68c5f0f0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x16f68c5f040 'char *'
|   `-BuiltinType 0x16f68c5e3d0 'char'
|-TypedefDecl 0x16f68c5f1b0 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x16f68c5e510 'unsigned long long'
|-TypedefDecl 0x16f68c5f220 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x16f68c5f040 'char *'
|   `-BuiltinType 0x16f68c5e3d0 'char'
|-FunctionDecl 0x16f6a839410 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x16f6a8394b0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x16f6a839520 <col:21> Implicit
|-FunctionDecl 0x16f6a839578 prev 0x16f6a839410 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x16f6a8392a0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x16f6a839668 <col:21> Inherited Implicit
|-TypedefDecl 0x16f6a8396a8 prev 0x16f68c5efe8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x16f68c5e510 'unsigned long long'
|-TypedefDecl 0x16f6a839750 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x16f6a839720 'size_t' sugar
|   |-Typedef 0x16f6a8396a8 'size_t'
|   `-BuiltinType 0x16f68c5e510 'unsigned long long'
|-TypedefDecl 0x16f6a8397c0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x16f68c5e470 'long long'
|-TypedefDecl 0x16f6a839830 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x16f68c5e470 'long long'
|-TypedefDecl 0x16f6a8398a0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x16f68c5e4b0 'unsigned short'
|-TypedefDecl 0x16f6a839910 <line:541:1, col:24> col:24 wint_t 'unsigned short'
| `-BuiltinType 0x16f68c5e4b0 'unsigned short'
|-TypedefDecl 0x16f6a839980 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x16f68c5e4b0 'unsigned short'
|-TypedefDecl 0x16f6a8399f0 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x16f68c5e430 'int'
|-TypedefDecl 0x16f6a839a60 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x16f68c5e450 'long'
|-TypedefDecl 0x16f6a839ad0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x16f68c5e470 'long long'
|-TypedefDecl 0x16f6a839b60 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x16f6a839b30 '__time64_t' sugar
|   |-Typedef 0x16f6a839ad0 '__time64_t'
|   `-BuiltinType 0x16f68c5e470 'long long'
|-FunctionDecl 0x16f6a839cd8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x16f6a839ef8 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x16f6a878140 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x16f6a83a038 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x16f6a83a0b0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x16f6a83a128 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x16f6a83a1a8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x16f6a877ee0 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x16f6a878220 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x16f6a8782e0 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x16f6a878450 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x16f6a878400 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x16f6a8783a0 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x16f6a8782c0 'struct threadlocaleinfostruct'
|       `-Record 0x16f6a87cf30 'threadlocaleinfostruct'
|-TypedefDecl 0x16f6a878560 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x16f6a878510 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x16f6a8784b0 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x16f6a878380 'struct threadmbcinfostruct'
|       `-Record 0x16f6a8782e0 'threadmbcinfostruct'
|-RecordDecl 0x16f6a8785b8 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x16f6a878670 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x16f6a878730 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x16f6a8787c0 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x16f6a878850 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x16f6a878908 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x16f6a8788b0 'struct localeinfo_struct' sugar
|   `-RecordType 0x16f6a878710 'struct localeinfo_struct'
|     `-Record 0x16f6a878670 'localeinfo_struct'
|-TypedefDecl 0x16f6a8789e0 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x16f6a878990 'struct localeinfo_struct *'
|   `-ElaboratedType 0x16f6a8788b0 'struct localeinfo_struct' sugar
|     `-RecordType 0x16f6a878710 'struct localeinfo_struct'
|       `-Record 0x16f6a878670 'localeinfo_struct'
|-RecordDecl 0x16f6a878a58 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x16f6a878b10 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x16f6a878b88 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x16f6a878c48 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x16f6a878ce0 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x16f6a878d50 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x16f6a878e08 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x16f6a878db0 'struct localerefcount' sugar
|   `-RecordType 0x16f6a878af0 'struct localerefcount'
|     `-Record 0x16f6a878a58 'localerefcount'
|-RecordDecl 0x16f6a87cf30 prev 0x16f6a878220 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x16f6a87cfb0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x16f6a87d028 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x16f6a87d098 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x16f6a87d108 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x16f6a87d178 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x16f6a87d338 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x16f6a87d3a8 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x16f6a87d418 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x16f6a87d488 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x16f6a87d4f8 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x16f6a87d568 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x16f6a87d5c0 parent 0x16f68c5e338 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x16f6a87d750 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x16f6a87d7c0 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x16f6a87d830 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x16f6a87d8a0 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x16f6a87d940 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x16f6a87d9b0 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x16f6a87dac0 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x16f6a87dbf8 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x16f6a87dca8 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x16f6a87dc50 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x16f6a8782c0 'struct threadlocaleinfostruct'
|     `-Record 0x16f6a87cf30 'threadlocaleinfostruct'
|-FunctionDecl 0x16f6a87f160 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:47:9, col:142> col:25 _memccpy 'void *(void *, const void *, int, size_t) __attribute__((cdecl))':'void *(void *, const void *, int, size_t)'
| |-ParmVarDecl 0x16f6a87dd30 <col:69, col:76> col:76 _Dst 'void *'
| |-ParmVarDecl 0x16f6a87dde0 <col:87, col:100> col:100 _Src 'const void *'
| |-ParmVarDecl 0x16f6a87de60 <col:111, col:115> col:115 _Val 'int'
| `-ParmVarDecl 0x16f6a87ef50 <col:126, col:133> col:133 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x16f6a87f528 <line:48:54> col:54 implicit memchr 'void *(const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x16f6a87f5c8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x16f6a87f630 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x16f6a87f698 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x16f6a87f718 prev 0x16f6a87f528 <col:38, col:150> col:54 memchr 'void *(const void *, int, unsigned long long)'
| |-ParmVarDecl 0x16f6a87f250 <col:94, col:107> col:107 _Buf 'const void *'
| |-ParmVarDecl 0x16f6a87f2d0 <col:119, col:123> col:123 _Val 'int'
| `-ParmVarDecl 0x16f6a87f348 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x16f6a87fad8 <line:49:24, col:162> col:40 _memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x16f6a87f800 <col:77, col:90> col:90 _Buf1 'const void *'
| |-ParmVarDecl 0x16f6a87f880 <col:125, col:138> col:138 _Buf2 'const void *'
| `-ParmVarDecl 0x16f6a87f8f8 <col:150, col:157> col:157 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x16f6a87ffb0 <line:50:24, col:192> col:40 _memicmp_l 'int (const void *, const void *, size_t, _locale_t) __attribute__((cdecl))':'int (const void *, const void *, size_t, _locale_t)'
| |-ParmVarDecl 0x16f6a87fbc0 <col:79, col:92> col:92 _Buf1 'const void *'
| |-ParmVarDecl 0x16f6a87fc40 <col:127, col:140> col:140 _Buf2 'const void *'
| |-ParmVarDecl 0x16f6a87fcb8 <col:152, col:159> col:159 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x16f6a87fd50 <col:175, col:185> col:185 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x16f6a8802b8 <line:51:32> col:32 implicit memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x16f6a880358 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x16f6a8803c0 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x16f6a880428 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x16f6a8804a8 prev 0x16f6a8802b8 <col:16, col:144> col:32 memcmp 'int (const void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x16f6a8800a0 <col:63, col:76> col:76 _Buf1 'const void *'
| |-ParmVarDecl 0x16f6a880120 <col:107, col:120> col:120 _Buf2 'const void *'
| `-ParmVarDecl 0x16f6a880198 <col:132, col:139> col:139 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x16f6a880868 <line:55:17> col:17 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x16f6a880908 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x16f6a880970 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x16f6a8809d8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x16f6a880a58 prev 0x16f6a880868 <col:1, col:127> col:17 used memcpy 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x16f6a880590 <col:54, col:61> col:61 _Dst 'void *'
| |-ParmVarDecl 0x16f6a880610 <col:91, col:104> col:104 _Src 'const void *'
| `-ParmVarDecl 0x16f6a880688 <col:115, col:122> col:122 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x16f6a880f70 <line:57:9, col:191> col:26 memcpy_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x16f6a880b68 <col:82, col:89> col:89 _Dst 'void *'
| |-ParmVarDecl 0x16f6a880c00 <col:100, col:108> col:108 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x16f6a880c80 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x16f6a880cf8 <col:174, col:182> col:182 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x16f6a881338 <line:94:25> col:25 implicit memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x16f6a8813d8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x16f6a881440 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x16f6a8814a8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x16f6a881528 prev 0x16f6a881338 <col:9, col:107> col:25 memset 'void *(void *, int, unsigned long long)'
| |-ParmVarDecl 0x16f6a881060 <col:62, col:69> col:69 _Dst 'void *'
| |-ParmVarDecl 0x16f6a8810e0 <col:80, col:84> col:84 _Val 'int'
| `-ParmVarDecl 0x16f6a881158 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x16f6a8819a8 <line:98:57> col:57 implicit memccpy 'void *(void *, const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x16f6a881a48 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x16f6a881ab0 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x16f6a881b18 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x16f6a881b80 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x16f6a881c08 prev 0x16f6a8819a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:98:187> col:57 memccpy 'void *(void *, const void *, int, unsigned long long)'
| |-ParmVarDecl 0x16f6a8816f0 <col:95, col:102> col:102 _Dst 'void *'
| |-ParmVarDecl 0x16f6a881770 <col:136, col:149> col:149 _Src 'const void *'
| |-ParmVarDecl 0x16f6a8817f0 <col:160, col:164> col:164 _Val 'int'
| |-ParmVarDecl 0x16f6a881868 <col:175, col:182> col:182 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x16f6a881cc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memccpy. See online help for details." ""
|-FunctionDecl 0x16f6a87a098 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:99:190> col:69 memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x16f6a881e90 <col:105, col:118> col:118 _Buf1 'const void *'
| |-ParmVarDecl 0x16f6a879f00 <col:153, col:166> col:166 _Buf2 'const void *'
| |-ParmVarDecl 0x16f6a879f78 <col:178, col:185> col:185 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x16f6a87a150 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memicmp. See online help for details." ""
|-FunctionDecl 0x16f6a87a540 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:105:40, col:144> col:56 _strset_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x16f6a87a278 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x16f6a87a2f0 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| `-ParmVarDecl 0x16f6a87a370 <col:134, col:138> col:138 _Value 'int'
|-FunctionDecl 0x16f6a87a910 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:107:88 _strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x16f6a87a720 <col:108, col:114> col:114 _Dest 'char *'
| |-ParmVarDecl 0x16f6a87a7a0 <col:126, col:131> col:131 _Value 'int'
| `-DeprecatedAttr 0x16f6a87a9c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16f6a87add0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:109:40, col:158> col:56 strcpy_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x16f6a87ab08 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x16f6a87ab80 <col:112, col:120> col:120 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x16f6a87ac00 <col:141, col:154> col:154 _Src 'const char *'
|-FunctionDecl 0x16f6a886280 <line:112:88> col:88 implicit strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x16f6a886320 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x16f6a886388 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x16f6a886400 prev 0x16f6a886280 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:112:88 strcpy 'char *(char *, const char *)'
| |-ParmVarDecl 0x16f6a886098 <col:142, col:148> col:148 _Dest 'char *'
| |-ParmVarDecl 0x16f6a886118 <col:162, col:176> col:176 _Source 'const char *'
| `-DeprecatedAttr 0x16f6a8864b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16f6a886808 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:114:40, col:161> col:56 strcat_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x16f6a8865f8 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x16f6a886670 <col:115, col:123> col:123 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x16f6a8866f0 <col:144, col:157> col:157 _Src 'const char *'
|-FunctionDecl 0x16f6a886b30 <line:118:88> col:88 implicit strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x16f6a886bd0 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x16f6a886c38 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x16f6a886cb0 prev 0x16f6a886b30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:118:88 strcat 'char *(char *, const char *)'
| |-ParmVarDecl 0x16f6a8869b0 <col:170, col:176> col:176 _Dest 'char *'
| |-ParmVarDecl 0x16f6a886a30 <col:190, col:204> col:204 _Source 'const char *'
| `-DeprecatedAttr 0x16f6a886d60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16f6a885080 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:120:32> col:32 implicit strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x16f6a885120 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x16f6a885188 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x16f6a885200 prev 0x16f6a885080 <col:16, col:91> col:32 strcmp 'int (const char *, const char *)'
| |-ParmVarDecl 0x16f6a886ea8 <col:46, col:59> col:59 _Str1 'const char *'
| `-ParmVarDecl 0x16f6a886f28 <col:73, col:86> col:86 _Str2 'const char *'
|-FunctionDecl 0x16f6a885450 <line:121:32> col:32 implicit strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x16f6a8854f0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x16f6a885560 prev 0x16f6a885450 <col:16, col:63> col:32 strlen 'unsigned long long (const char *)'
| `-ParmVarDecl 0x16f6a8852e0 <col:46, col:59> col:59 _Str 'const char *'
|-FunctionDecl 0x16f6a885858 <line:125:1, col:92> col:17 used strnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x16f6a885638 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x16f6a8856b0 <col:76, col:83> col:83 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x16f6a885aa8 <line:127:16, line:133:1> line:130:19 strnlen_s 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' static inline
| |-ParmVarDecl 0x16f6a885938 <col:56, col:69> col:69 used _Str 'const char *'
| |-ParmVarDecl 0x16f6a8859b0 <col:80, col:87> col:87 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x16f6a885dd8 <line:131:1, line:133:1>
|   `-ReturnStmt 0x16f6a885dc8 <line:132:5, col:51>
|     `-ConditionalOperator 0x16f6a885d98 <col:12, col:51> 'unsigned long long'
|       |-ParenExpr 0x16f6a885c08 <col:12, col:20> 'int'
|       | `-BinaryOperator 0x16f6a885be8 <col:13, col:19> 'int' '=='
|       |   |-ImplicitCastExpr 0x16f6a885bb8 <col:13> 'const char *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x16f6a885b70 <col:13> 'const char *' lvalue ParmVar 0x16f6a885938 '_Str' 'const char *'
|       |   `-ImplicitCastExpr 0x16f6a885bd0 <col:19> 'const char *' <NullToPointer>
|       |     `-IntegerLiteral 0x16f6a885b90 <col:19> 'int' 0
|       |-ImplicitCastExpr 0x16f6a885d80 <col:24> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x16f6a885c28 <col:24> 'int' 0
|       `-CallExpr 0x16f6a885d20 <col:28, col:51> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x16f6a885d08 <col:28> 'size_t (*)(const char *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x16f6a885c50 <col:28> 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' Function 0x16f6a885858 'strnlen' 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
|         |-ImplicitCastExpr 0x16f6a885d50 <col:36> 'const char *' <LValueToRValue>
|         | `-DeclRefExpr 0x16f6a885c70 <col:36> 'const char *' lvalue ParmVar 0x16f6a885938 '_Str' 'const char *'
|         `-ImplicitCastExpr 0x16f6a885d68 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x16f6a885c90 <col:42> 'size_t':'unsigned long long' lvalue ParmVar 0x16f6a8859b0 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x16f6a889128 <line:136:28, col:209> col:44 memmove_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x16f6a885e08 <col:100, col:107> col:107 _Dst 'void *'
| |-ParmVarDecl 0x16f6a885e80 <col:118, col:126> col:126 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x16f6a885f00 <col:168, col:181> col:181 _Src 'const void *'
| `-ParmVarDecl 0x16f6a888ff0 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x16f6a889430 <line:139:67> col:67 implicit memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x16f6a8894d0 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x16f6a889538 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x16f6a8895a0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x16f6a889620 prev 0x16f6a889430 <col:51, col:186> col:67 memmove 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x16f6a889218 <col:109, col:116> col:116 _Dst 'void *'
| |-ParmVarDecl 0x16f6a889298 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x16f6a889310 <col:174, col:181> col:181 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x16f6a889858 <line:146:24, col:76> col:40 _strdup 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| `-ParmVarDecl 0x16f6a889708 <col:59, col:72> col:72 _Src 'const char *'
|-FunctionDecl 0x16f6a889b20 <line:152:54> col:54 implicit strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x16f6a889bc0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x16f6a889c28 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x16f6a889ca0 prev 0x16f6a889b20 <col:38, col:100> col:54 strchr 'char *(const char *, int)'
| |-ParmVarDecl 0x16f6a889930 <col:68, col:81> col:81 _Str 'const char *'
| `-ParmVarDecl 0x16f6a8899b0 <col:92, col:96> col:96 _Val 'int'
|-FunctionDecl 0x16f6a889f00 <line:153:24, col:103> col:40 _stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x16f6a889d80 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x16f6a889e00 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x16f6a884120 <line:154:24, col:103> col:40 _strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x16f6a883fa0 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x16f6a884020 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x16f6a8844d8 <line:155:24, col:133> col:40 _stricmp_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x16f6a884200 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x16f6a884280 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x16f6a8842f8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x16f6a884740 <line:156:24, col:103> col:40 strcoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x16f6a8845c0 <col:56, col:69> col:69 _Str1 'const char *'
| `-ParmVarDecl 0x16f6a884640 <col:84, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x16f6a884a38 <line:157:24, col:133> col:40 _strcoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x16f6a884820 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x16f6a8848a0 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x16f6a884918 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x16f6a884ca0 <line:158:24, col:104> col:40 _stricoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x16f6a884b20 <col:58, col:71> col:71 _Str1 'const char *'
| `-ParmVarDecl 0x16f6a884ba0 <col:86, col:99> col:99 _Str2 'const char *'
|-FunctionDecl 0x16f6a881f80 <line:159:24, col:134> col:40 _stricoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x16f6a884d80 <col:60, col:73> col:73 _Str1 'const char *'
| |-ParmVarDecl 0x16f6a884e00 <col:88, col:101> col:101 _Str2 'const char *'
| `-ParmVarDecl 0x16f6a884e78 <col:117, col:127> col:127 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x16f6a882338 <line:160:24, col:167> col:40 _strncoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x16f6a882068 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x16f6a8820e8 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x16f6a882160 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x16f6a8827a0 <line:161:24, col:195> col:40 _strncoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x16f6a882420 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x16f6a8824a0 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x16f6a882518 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x16f6a882590 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x16f6a882aa8 <line:162:24, col:167> col:40 _strnicoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x16f6a882890 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x16f6a882910 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x16f6a882988 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x16f6a882e40 <line:163:24, col:196> col:40 _strnicoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x16f6a882b90 <col:80, col:93> col:93 _Str1 'const char *'
| |-ParmVarDecl 0x16f6a882c10 <col:127, col:140> col:140 _Str2 'const char *'
| |-ParmVarDecl 0x16f6a882c88 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x16f6a882d00 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x16f6a8871f8 <line:164:40> col:40 implicit strcspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x16f6a887298 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x16f6a887300 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x16f6a887378 prev 0x16f6a8871f8 <col:24, col:104> col:40 strcspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x16f6a886fd0 <col:56, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x16f6a887050 <col:83, col:96> col:96 _Control 'const char *'
|-FunctionDecl 0x16f6a887630 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:165:118> col:77 _strerror 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x16f6a887550 <col:98, col:111> col:111 _ErrMsg 'const char *'
| `-DeprecatedAttr 0x16f6a8876d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16f6a887ab0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:166:28, col:155> col:44 _strerror_s 'errno_t (char *, size_t, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *)'
| |-ParmVarDecl 0x16f6a887820 <col:85, col:92> col:92 _Buf 'char *'
| |-ParmVarDecl 0x16f6a887898 <col:103, col:110> col:110 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x16f6a887918 <col:135, col:148> col:148 _ErrMsg 'const char *'
|-FunctionDecl 0x16f6a887dc8 <line:168:76> col:76 implicit strerror 'char *(int)' extern
| `-ParmVarDecl 0x16f6a887e68 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x16f6a887ed8 prev 0x16f6a887dc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:168:93> col:76 strerror 'char *(int)'
| |-ParmVarDecl 0x16f6a887c90 <col:90> col:93 'int'
| `-DeprecatedAttr 0x16f6a887f80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16f6a88a310 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:170:28, col:139> col:44 strerror_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x16f6a88a100 <col:84, col:91> col:91 _Buf 'char *'
| |-ParmVarDecl 0x16f6a88a178 <col:102, col:109> col:109 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x16f6a88a1f8 <col:128, col:132> col:132 _ErrNum 'int'
|-FunctionDecl 0x16f6a88a618 <line:173:28, col:109> col:44 _strlwr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x16f6a88a3f8 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x16f6a88a470 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x16f6a88a908 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:175:79 _strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x16f6a88a7b8 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x16f6a88a9b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16f6a88adc0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:176:28, col:139> col:44 _strlwr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x16f6a88aaf8 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x16f6a88ab70 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x16f6a88abe8 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x16f6a883140 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:178:82 _strlwr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x16f6a88af68 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x16f6a882f90 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x16f6a8831f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16f6a8836a8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:180:40, col:206> col:56 strncat_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x16f6a883338 <col:98, col:105> col:105 _Dst 'char *'
| |-ParmVarDecl 0x16f6a8833b0 <col:116, col:124> col:124 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x16f6a883430 <col:165, col:178> col:178 _Src 'const char *'
| `-ParmVarDecl 0x16f6a8834a8 <col:189, col:197> col:197 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x16f6a883b28 <line:186:83> col:83 implicit strncat 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x16f6a883bc8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x16f6a883c30 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x16f6a883c98 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x16f6a883d18 prev 0x16f6a883b28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:186:83 strncat 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x16f6a883858 <col:161, col:167> col:167 _Dest 'char *'
| |-ParmVarDecl 0x16f6a8838d8 <col:198, col:212> col:212 _Source 'const char *'
| |-ParmVarDecl 0x16f6a883950 <col:226, col:234> col:234 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x16f6a883dd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16f6a88d1e0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:188:40> col:40 implicit strncmp 'int (const char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x16f6a88d280 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x16f6a88d2e8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x16f6a88d350 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x16f6a88d3d0 prev 0x16f6a88d1e0 <col:24, col:163> col:40 strncmp 'int (const char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x16f6a883f18 <col:75, col:88> col:88 _Str1 'const char *'
| |-ParmVarDecl 0x16f6a88d048 <col:122, col:135> col:135 _Str2 'const char *'
| `-ParmVarDecl 0x16f6a88d0c0 <col:147, col:154> col:154 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x16f6a88d6d0 <line:189:24, col:165> col:40 _strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x16f6a88d4b8 <col:77, col:90> col:90 _Str1 'const char *'
| |-ParmVarDecl 0x16f6a88d538 <col:124, col:137> col:137 _Str2 'const char *'
| `-ParmVarDecl 0x16f6a88d5b0 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x16f6a88da68 <line:190:24, col:195> col:40 _strnicmp_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x16f6a88d7b8 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x16f6a88d838 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x16f6a88d8b0 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x16f6a88d928 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x16f6a88de00 <line:192:40, col:203> col:56 strncpy_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x16f6a88db58 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x16f6a88dbd0 <col:113, col:121> col:121 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x16f6a88dc50 <col:162, col:175> col:175 _Src 'const char *'
| `-ParmVarDecl 0x16f6a88dcc8 <col:186, col:194> col:194 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x16f6a88b1a8 <line:195:83> col:83 implicit strncpy 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x16f6a88b248 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x16f6a88b2b0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x16f6a88b318 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x16f6a88b398 prev 0x16f6a88b1a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:195:83 strncpy 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x16f6a88dfb0 <col:167, col:173> col:173 _Dest 'char *'
| |-ParmVarDecl 0x16f6a88b010 <col:204, col:218> col:218 _Source 'const char *'
| |-ParmVarDecl 0x16f6a88b088 <col:232, col:240> col:240 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x16f6a88b450 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16f6a88b908 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:196:40, col:174> col:56 _strnset_s 'errno_t (char *, size_t, int, size_t) __attribute__((cdecl))':'errno_t (char *, size_t, int, size_t)'
| |-ParmVarDecl 0x16f6a88b598 <col:99, col:106> col:106 _Str 'char *'
| |-ParmVarDecl 0x16f6a88b610 <col:117, col:124> col:124 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x16f6a88b690 <col:143, col:147> col:147 _Val 'int'
| `-ParmVarDecl 0x16f6a88b708 <col:158, col:165> col:165 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x16f6a88bd88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:198:83 _strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x16f6a88bab8 <col:163, col:169> col:169 _Dest 'char *'
| |-ParmVarDecl 0x16f6a88bb38 <col:181, col:186> col:186 _Val 'int'
| |-ParmVarDecl 0x16f6a88bbb0 <col:197, col:205> col:205 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x16f6a88be40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16f6a88c190 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:199:54> col:54 implicit strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x16f6a88c230 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x16f6a88c298 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x16f6a88c310 prev 0x16f6a88c190 <col:38, col:116> col:54 strpbrk 'char *(const char *, const char *)'
| |-ParmVarDecl 0x16f6a88bf88 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x16f6a88c020 <col:95, col:108> col:108 _Control 'const char *'
|-FunctionDecl 0x16f6a88c570 <line:200:54> col:54 implicit strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x16f6a88c610 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x16f6a88c678 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x16f6a88c6f0 prev 0x16f6a88c570 <col:38, col:100> col:54 strrchr 'char *(const char *, int)'
| |-ParmVarDecl 0x16f6a88c3f0 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x16f6a88c470 <col:93, col:97> col:97 _Ch 'int'
|-FunctionDecl 0x16f6a88c8b0 <line:201:9, col:54> col:25 _strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| `-ParmVarDecl 0x16f6a88c7d0 <col:43, col:50> col:50 _Str 'char *'
|-FunctionDecl 0x16f6a88cb00 <line:202:40> col:40 implicit strspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x16f6a88cba0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x16f6a88cc08 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x16f6a88cc80 prev 0x16f6a88cb00 <col:24, col:101> col:40 strspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x16f6a88c988 <col:54, col:67> col:67 _Str 'const char *'
| `-ParmVarDecl 0x16f6a88ca08 <col:80, col:93> col:93 _Control 'const char *'
|-FunctionDecl 0x16f6a88cee0 <line:203:70> col:70 implicit strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x16f6a88cf80 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x16f6a907f60 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x16f6a907fd8 prev 0x16f6a88cee0 <col:54, col:130> col:70 strstr 'char *(const char *, const char *)'
| |-ParmVarDecl 0x16f6a88cd60 <col:84, col:97> col:97 _Str 'const char *'
| `-ParmVarDecl 0x16f6a88cde0 <col:110, col:123> col:123 _SubStr 'const char *'
|-FunctionDecl 0x16f6a9082f8 <line:204:74> col:74 implicit strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x16f6a908398 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x16f6a908400 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x16f6a908478 prev 0x16f6a9082f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:204:134> col:74 strtok 'char *(char *, const char *)'
| |-ParmVarDecl 0x16f6a908178 <col:95, col:102> col:102 _Str 'char *'
| |-ParmVarDecl 0x16f6a9081f8 <col:115, col:128> col:128 _Delim 'const char *'
| `-DeprecatedAttr 0x16f6a908528 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16f6a908908 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:206:36, col:162> col:52 strtok_s 'char *(char *, const char *, char **) __attribute__((cdecl))':'char *(char *, const char *, char **)'
| |-ParmVarDecl 0x16f6a908670 <col:75, col:82> col:82 _Str 'char *'
| |-ParmVarDecl 0x16f6a9086f0 <col:95, col:108> col:108 _Delim 'const char *'
| `-ParmVarDecl 0x16f6a908770 <col:146, col:154> col:154 _Context 'char **'
|-FunctionDecl 0x16f6a908b60 <line:208:28, col:109> col:44 _strupr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x16f6a9089f0 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x16f6a908a68 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x16f6a908de0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:210:79 _strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x16f6a908d00 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x16f6a908e88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16f6a907258 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:211:28, col:130> col:44 _strupr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x16f6a907050 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x16f6a9070c8 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x16f6a907140 <col:113, col:123> col:123 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x16f6a907578 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:213:82 _strupr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x16f6a907400 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x16f6a907478 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x16f6a907628 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16f6a907a40 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:214:44> col:44 implicit strxfrm 'unsigned long long (char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x16f6a907ae0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x16f6a907b48 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x16f6a907bb0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x16f6a907c30 prev 0x16f6a907a40 <col:28, col:155> col:44 strxfrm 'unsigned long long (char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x16f6a907770 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x16f6a9077f0 <col:115, col:128> col:128 _Src 'const char *'
| `-ParmVarDecl 0x16f6a907868 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x16f6a903048 <line:215:28, col:185> col:44 _strxfrm_l 'size_t (char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x16f6a907d18 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x16f6a907d98 <col:117, col:130> col:130 _Src 'const char *'
| |-ParmVarDecl 0x16f6a907e10 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x16f6a907e88 <col:168, col:178> col:178 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x16f6a9032f0 <line:245:71> col:71 implicit strdup 'char *(const char *)' extern
| `-ParmVarDecl 0x16f6a903390 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x16f6a903400 prev 0x16f6a9032f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:245:106> col:71 strdup 'char *(const char *)'
| |-ParmVarDecl 0x16f6a903210 <col:89, col:102> col:102 _Src 'const char *'
| `-DeprecatedAttr 0x16f6a9034a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strdup. See online help for details." ""
|-FunctionDecl 0x16f6a9037f0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:252:129> col:69 strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x16f6a903670 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x16f6a9036f0 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x16f6a9038a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strcmpi. See online help for details." ""
|-FunctionDecl 0x16f6a903be8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:253:129> col:69 stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x16f6a903a68 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x16f6a903ae8 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x16f6a903c98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details." ""
|-FunctionDecl 0x16f6a903f58 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:254:84> col:56 strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x16f6a903e60 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x16f6a904000 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strlwr. See online help for details." ""
|-FunctionDecl 0x16f6a904418 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:255:193> col:70 strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x16f6a904200 <col:106, col:119> col:119 _Str1 'const char *'
| |-ParmVarDecl 0x16f6a904280 <col:153, col:166> col:166 _Str 'const char *'
| |-ParmVarDecl 0x16f6a9042f8 <col:177, col:184> col:184 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x16f6a9044d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnicmp. See online help for details." ""
|-FunctionDecl 0x16f6a9048b0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:256:143> col:57 strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x16f6a904698 <col:94, col:101> col:101 _Str 'char *'
| |-ParmVarDecl 0x16f6a904718 <col:112, col:116> col:116 _Val 'int'
| |-ParmVarDecl 0x16f6a904790 <col:127, col:134> col:134 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x16f6a904968 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnset. See online help for details." ""
|-FunctionDecl 0x16f6a904c10 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:257:84> col:56 strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x16f6a904b30 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x16f6a904cb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strrev. See online help for details." ""
|-FunctionDecl 0x16f6a906040 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:258:99> col:56 strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x16f6a904e80 <col:73, col:80> col:80 _Str 'char *'
| |-ParmVarDecl 0x16f6a905f40 <col:91, col:95> col:95 _Val 'int'
| `-DeprecatedAttr 0x16f6a9060f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strset. See online help for details." ""
|-FunctionDecl 0x16f6a906398 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:259:84> col:56 strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x16f6a9062b8 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x16f6a906440 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strupr. See online help for details." ""
|-FunctionDecl 0x16f6a9066d0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:273:24, col:77> col:42 _wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| `-ParmVarDecl 0x16f6a906560 <col:57, col:73> col:73 _Str 'const wchar_t *'
|-FunctionDecl 0x16f6a906a60 <line:280:40, col:167> col:56 wcscat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x16f6a9067a0 <col:97, col:107> col:107 _Dst 'wchar_t *'
| |-ParmVarDecl 0x16f6a906818 <col:118, col:126> col:126 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x16f6a906890 <col:147, col:163> col:163 _Src 'const wchar_t *'
|-FunctionDecl 0x16f6a906e18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:284:82 wcscat 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x16f6a906c00 <col:164, col:173> col:173 _Dest 'wchar_t *'
| |-ParmVarDecl 0x16f6a906c78 <col:187, col:204> col:204 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x16f6a906ec8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16f6a901208 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:288:41> col:41 implicit wcschr 'unsigned short *(const unsigned short *, unsigned short)' extern
| |-ParmVarDecl 0x16f6a9012a8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x16f6a901310 <<invalid sloc>> <invalid sloc> 'unsigned short'
|-FunctionDecl 0x16f6a901388 prev 0x16f6a901208 <col:23, col:88> col:41 wcschr 'unsigned short *(const unsigned short *, unsigned short)'
| |-ParmVarDecl 0x16f6a900fe8 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x16f6a901060 <col:77, col:85> col:85 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x16f6a901680 <line:289:36> col:36 implicit wcscmp 'int (const unsigned short *, const unsigned short *)' extern
| |-ParmVarDecl 0x16f6a901720 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x16f6a901788 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x16f6a901800 prev 0x16f6a901680 <col:24, col:101> col:36 wcscmp 'int (const unsigned short *, const unsigned short *)'
| |-ParmVarDecl 0x16f6a901460 <col:50, col:66> col:66 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x16f6a9014d8 <col:80, col:96> col:96 _Str2 'const wchar_t *'
|-FunctionDecl 0x16f6a901ae0 <line:291:40, col:164> col:56 wcscpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x16f6a9018d8 <col:94, col:104> col:104 _Dst 'wchar_t *'
| |-ParmVarDecl 0x16f6a901950 <col:115, col:123> col:123 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x16f6a9019c8 <col:144, col:160> col:160 _Src 'const wchar_t *'
|-FunctionDecl 0x16f6a901df0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:294:82 wcscpy 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x16f6a901c80 <col:136, col:145> col:145 _Dest 'wchar_t *'
| |-ParmVarDecl 0x16f6a901cf8 <col:159, col:176> col:176 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x16f6a901ea0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16f6a909288 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:295:24, col:107> col:39 wcscspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x16f6a909068 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x16f6a9090e0 <col:83, col:99> col:99 _Control 'const wchar_t *'
|-FunctionDecl 0x16f6a9094d0 <line:296:39> col:39 implicit wcslen 'unsigned long long (const unsigned short *)' extern
| `-ParmVarDecl 0x16f6a909570 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x16f6a9095e0 prev 0x16f6a9094d0 <col:24, col:73> col:39 wcslen 'unsigned long long (const unsigned short *)'
| `-ParmVarDecl 0x16f6a909360 <col:53, col:69> col:69 _Str 'const wchar_t *'
|-FunctionDecl 0x16f6a9098c8 <line:300:1, col:94> col:16 used wcsnlen 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
| |-ParmVarDecl 0x16f6a9096b0 <col:51, col:67> col:67 _Src 'const wchar_t *'
| `-ParmVarDecl 0x16f6a909728 <col:78, col:85> col:85 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x16f6a909b10 <line:302:16, line:308:1> line:305:18 wcsnlen_s 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' static inline
| |-ParmVarDecl 0x16f6a9099a0 <col:55, col:71> col:71 used _Src 'const wchar_t *'
| |-ParmVarDecl 0x16f6a909a18 <col:82, col:89> col:89 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x16f6a909ea8 <line:306:1, line:308:1>
|   `-ReturnStmt 0x16f6a909e98 <line:307:5, col:56>
|     `-ConditionalOperator 0x16f6a909e68 <col:12, col:56> 'unsigned long long'
|       |-ParenExpr 0x16f6a909cd0 <col:12, col:25> 'int'
|       | `-BinaryOperator 0x16f6a909cb0 <col:13, line:36:27> 'int' '=='
|       |   |-ImplicitCastExpr 0x16f6a909c80 <line:307:13> 'const wchar_t *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x16f6a909bd8 <col:13> 'const wchar_t *' lvalue ParmVar 0x16f6a9099a0 '_Src' 'const wchar_t *'
|       |   `-ImplicitCastExpr 0x16f6a909c98 <line:36:17, col:27> 'const wchar_t *' <BitCast>
|       |     `-ParenExpr 0x16f6a909c60 <col:17, col:27> 'void *'
|       |       `-CStyleCastExpr 0x16f6a909c38 <col:18, col:26> 'void *' <NullToPointer>
|       |         `-IntegerLiteral 0x16f6a909bf8 <col:26> 'int' 0
|       |-ImplicitCastExpr 0x16f6a909e50 <line:307:29> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x16f6a909cf0 <col:29> 'int' 0
|       `-CallExpr 0x16f6a909df0 <col:33, col:56> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x16f6a909dd8 <col:33> 'size_t (*)(const wchar_t *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x16f6a909d18 <col:33> 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' Function 0x16f6a9098c8 'wcsnlen' 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
|         |-ImplicitCastExpr 0x16f6a909e20 <col:41> 'const wchar_t *' <LValueToRValue>
|         | `-DeclRefExpr 0x16f6a909d38 <col:41> 'const wchar_t *' lvalue ParmVar 0x16f6a9099a0 '_Src' 'const wchar_t *'
|         `-ImplicitCastExpr 0x16f6a909e38 <col:47> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x16f6a909d58 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x16f6a909a18 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x16f6a90a278 <line:311:40, col:212> col:56 wcsncat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x16f6a909ed0 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x16f6a909f80 <col:119, col:127> col:127 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x16f6a909ff8 <col:168, col:184> col:184 _Src 'const wchar_t *'
| `-ParmVarDecl 0x16f6a90a070 <col:195, col:203> col:203 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x16f6a90a6e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:316:86 wcsncat 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x16f6a90a420 <col:167, col:176> col:176 _Dest 'wchar_t *'
| |-ParmVarDecl 0x16f6a90a498 <col:207, col:224> col:224 _Source 'const wchar_t *'
| |-ParmVarDecl 0x16f6a90a510 <col:238, col:246> col:246 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x16f6a90a798 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16f6a90aba8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:318:36> col:36 implicit wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)' extern
| |-ParmVarDecl 0x16f6a90ac48 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| |-ParmVarDecl 0x16f6a90acb0 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x16f6a90ad18 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x16f6a90ad98 prev 0x16f6a90aba8 <col:24, col:165> col:36 wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)'
| |-ParmVarDecl 0x16f6a90a8d8 <col:71, col:87> col:87 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x16f6a90a950 <col:121, col:137> col:137 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x16f6a90a9c8 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x16f6a90c150 <line:320:40, col:209> col:56 wcsncpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x16f6a90ae78 <col:95, col:105> col:105 _Dst 'wchar_t *'
| |-ParmVarDecl 0x16f6a90aef0 <col:116, col:124> col:124 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x16f6a90bfa0 <col:165, col:181> col:181 _Src 'const wchar_t *'
| `-ParmVarDecl 0x16f6a90c018 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x16f6a90c500 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:323:86 wcsncpy 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x16f6a90c2f8 <col:179, col:188> col:188 _Dest 'wchar_t *'
| |-ParmVarDecl 0x16f6a90c370 <col:219, col:236> col:236 _Source 'const wchar_t *'
| |-ParmVarDecl 0x16f6a90c3e8 <col:250, col:258> col:258 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x16f6a90c5b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16f6a90c918 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:324:38, col:124> col:56 wcspbrk 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x16f6a90c6f8 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x16f6a90c770 <col:100, col:116> col:116 _Control 'const wchar_t *'
|-FunctionDecl 0x16f6a90cb60 <line:325:38, col:109> col:56 wcsrchr 'wchar_t *(const wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(const wchar_t *, wchar_t)'
| |-ParmVarDecl 0x16f6a90c9f0 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x16f6a90ca68 <col:98, col:106> col:106 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x16f6a90cda8 <line:326:24, col:106> col:39 wcsspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x16f6a90cc38 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x16f6a90ccb0 <col:82, col:98> col:98 _Control 'const wchar_t *'
|-FunctionDecl 0x16f6a904f90 <line:329:23, col:107> col:41 wcsstr 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x16f6a90ce80 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x16f6a90cef8 <col:84, col:100> col:100 _SubStr 'const wchar_t *'
|-FunctionDecl 0x16f6a905298 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:330:142> col:76 wcstok 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x16f6a905128 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x16f6a9051a0 <col:120, col:136> col:136 _Delim 'const wchar_t *'
| `-DeprecatedAttr 0x16f6a905348 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16f6a9057b0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:332:36, col:173> col:54 wcstok_s 'wchar_t *(wchar_t *, const wchar_t *, wchar_t **) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x16f6a905488 <col:77, col:87> col:87 _Str 'wchar_t *'
| |-ParmVarDecl 0x16f6a905500 <col:100, col:116> col:116 _Delim 'const wchar_t *'
| `-ParmVarDecl 0x16f6a9055e0 <col:154, col:165> col:165 _Context 'wchar_t **'
|-FunctionDecl 0x16f6a905ad0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:334:105> col:79 _wcserror 'wchar_t *(int) __attribute__((cdecl))':'wchar_t *(int)'
| |-ParmVarDecl 0x16f6a905958 <col:94, col:98> col:98 _ErrNum 'int'
| `-DeprecatedAttr 0x16f6a905b78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16f6a90d020 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:335:28, col:147> col:44 _wcserror_s 'errno_t (wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, int)'
| |-ParmVarDecl 0x16f6a905cb8 <col:89, col:99> col:99 _Buf 'wchar_t *'
| |-ParmVarDecl 0x16f6a905d30 <col:110, col:117> col:117 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x16f6a905db0 <col:136, col:140> col:140 _ErrNum 'int'
|-FunctionDecl 0x16f6a90d2d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:337:122> col:80 __wcserror 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x16f6a90d1f8 <col:102, col:118> col:118 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x16f6a90d378 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16f6a90d740 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:338:28, col:165> col:44 __wcserror_s 'errno_t (wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x16f6a90d4b8 <col:90, col:100> col:100 _Buffer 'wchar_t *'
| |-ParmVarDecl 0x16f6a90d530 <col:114, col:121> col:121 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x16f6a90d5a8 <col:142, col:158> col:158 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x16f6a90d998 <line:341:24, col:103> col:36 _wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x16f6a90d820 <col:52, col:68> col:68 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x16f6a90d898 <col:82, col:98> col:98 _Str2 'const wchar_t *'
|-FunctionDecl 0x16f6a90dd38 <line:342:24, col:133> col:36 _wcsicmp_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x16f6a90da70 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x16f6a90dae8 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x16f6a90db60 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x16f6a90f058 <line:343:24, col:167> col:36 _wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x16f6a90de18 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x16f6a90de90 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x16f6a90df08 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x16f6a90f4b0 <line:344:24, col:197> col:36 _wcsnicmp_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x16f6a90f138 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x16f6a90f1b0 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x16f6a90f228 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x16f6a90f2a0 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x16f6a90f908 <line:345:40, col:181> col:56 _wcsnset_s 'errno_t (wchar_t *, size_t, wchar_t, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t, size_t)'
| |-ParmVarDecl 0x16f6a90f598 <col:99, col:109> col:109 _Dst 'wchar_t *'
| |-ParmVarDecl 0x16f6a90f610 <col:120, col:127> col:127 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x16f6a90f688 <col:146, col:154> col:154 _Val 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x16f6a90f700 <col:165, col:172> col:172 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x16f6a90fd70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:347:86 _wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x16f6a90fab0 <col:172, col:181> col:181 _Str 'wchar_t *'
| |-ParmVarDecl 0x16f6a90fb28 <col:187, col:196> col:196 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x16f6a90fba0 <col:207, col:215> col:215 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x16f6a90fe28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16f6a9100f0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:348:9, col:59> col:27 _wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| `-ParmVarDecl 0x16f6a90ff68 <col:45, col:55> col:55 _Str 'wchar_t *'
|-FunctionDecl 0x16f6a910480 <line:349:40, col:159> col:56 _wcsset_s 'errno_t (wchar_t *, size_t, wchar_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t)'
| |-ParmVarDecl 0x16f6a9101c0 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x16f6a910238 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x16f6a9102b0 <col:145, col:153> col:153 _Value 'wchar_t':'unsigned short'
|-FunctionDecl 0x16f6a910838 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:351:85 _wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x16f6a910620 <col:150, col:159> col:159 _Str 'wchar_t *'
| |-ParmVarDecl 0x16f6a910698 <col:165, col:174> col:174 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x16f6a9108e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16f6a910c48 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:353:28, col:126> col:44 _wcslwr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x16f6a910a28 <col:86, col:96> col:96 _Str 'wchar_t *'
| `-ParmVarDecl 0x16f6a910aa0 <col:107, col:114> col:114 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x16f6a910eb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:355:82 _wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x16f6a910de0 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x16f6a910f60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16f6a9123c0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:356:28, col:156> col:44 _wcslwr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x16f6a9120f8 <col:88, col:98> col:98 _Str 'wchar_t *'
| |-ParmVarDecl 0x16f6a912170 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x16f6a9121e8 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x16f6a912778 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:358:85 _wcslwr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x16f6a912560 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x16f6a9125d8 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x16f6a912828 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16f6a912ad8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:359:28, col:112> col:44 _wcsupr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x16f6a912968 <col:79, col:89> col:89 _Str 'wchar_t *'
| `-ParmVarDecl 0x16f6a9129e0 <col:100, col:107> col:107 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x16f6a912d48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:361:82 _wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x16f6a912c70 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x16f6a912df0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16f6a90e150 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:362:28, col:142> col:44 _wcsupr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x16f6a912f30 <col:81, col:91> col:91 _Str 'wchar_t *'
| |-ParmVarDecl 0x16f6a90dfc0 <col:102, col:109> col:109 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x16f6a90e038 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x16f6a90e460 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:364:85 _wcsupr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x16f6a90e2f0 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x16f6a90e368 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x16f6a90e510 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16f6a90e910 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:365:28, col:159> col:43 wcsxfrm 'size_t (wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x16f6a90e650 <col:93, col:103> col:103 _Dst 'wchar_t *'
| |-ParmVarDecl 0x16f6a90e6c8 <col:116, col:132> col:132 _Src 'const wchar_t *'
| `-ParmVarDecl 0x16f6a90e740 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x16f6a90ed58 <line:366:28, col:189> col:43 _wcsxfrm_l 'size_t (wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x16f6a90e9f0 <col:96, col:106> col:106 _Dst 'wchar_t *'
| |-ParmVarDecl 0x16f6a90ea68 <col:119, col:134> col:134 _Src 'const wchar_t *'
| |-ParmVarDecl 0x16f6a90eae0 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x16f6a90eb58 <col:172, col:182> col:182 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x16f6a918060 <line:367:24, col:102> col:36 wcscoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x16f6a90ee40 <col:51, col:67> col:67 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x16f6a90eeb8 <col:81, col:97> col:97 _Str2 'const wchar_t *'
|-FunctionDecl 0x16f6a918348 <line:368:24, col:133> col:36 _wcscoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x16f6a918138 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x16f6a9181b0 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x16f6a918228 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x16f6a9185a0 <line:369:24, col:104> col:36 _wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x16f6a918428 <col:53, col:69> col:69 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x16f6a9184a0 <col:83, col:99> col:99 _Str2 'const wchar_t *'
|-FunctionDecl 0x16f6a918888 <line:370:24, col:133> col:36 _wcsicoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x16f6a918678 <col:55, col:71> col:71 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x16f6a9186f0 <col:85, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x16f6a918768 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x16f6a918b78 <line:371:24, col:167> col:36 _wcsncoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x16f6a918968 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x16f6a9189e0 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x16f6a918a58 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x16f6a918f00 <line:372:24, col:197> col:36 _wcsncoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x16f6a918c58 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x16f6a918cd0 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x16f6a918d48 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x16f6a918dc0 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x16f6a9141b8 <line:373:24, col:168> col:36 _wcsnicoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x16f6a918fe8 <col:74, col:90> col:90 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x16f6a914020 <col:124, col:140> col:140 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x16f6a914098 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x16f6a914540 <line:374:24, col:198> col:36 _wcsnicoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x16f6a914298 <col:76, col:92> col:92 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x16f6a914310 <col:126, col:142> col:142 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x16f6a914388 <col:154, col:161> col:161 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x16f6a914400 <col:181, col:191> col:191 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x16f6a9147a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:403:108> col:74 wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x16f6a9146c8 <col:88, col:104> col:104 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x16f6a914848 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsdup. See online help for details." ""
|-FunctionDecl 0x16f6a914b80 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:413:135> col:69 wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x16f6a914a08 <col:84, col:100> col:100 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x16f6a914a80 <col:114, col:130> col:130 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x16f6a914c30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicmp. See online help for details." ""
|-FunctionDecl 0x16f6a916040 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:414:200> col:70 wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x16f6a914df0 <col:106, col:122> col:122 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x16f6a914e68 <col:156, col:172> col:172 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x16f6a914ee0 <col:184, col:191> col:191 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x16f6a9160f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnicmp. See online help for details." ""
|-FunctionDecl 0x16f6a9164c0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:415:153> col:60 wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x16f6a9162b8 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x16f6a916330 <col:118, col:126> col:126 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x16f6a9163a8 <col:137, col:144> col:144 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x16f6a916578 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnset. See online help for details." ""
|-FunctionDecl 0x16f6a916810 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:416:90> col:59 wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x16f6a916738 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x16f6a9168b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsrev. See online help for details." ""
|-FunctionDecl 0x16f6a916be8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:417:104> col:59 wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x16f6a916a78 <col:76, col:86> col:86 _Str 'wchar_t *'
| |-ParmVarDecl 0x16f6a916af0 <col:92, col:100> col:100 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x16f6a916c98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsset. See online help for details." ""
|-FunctionDecl 0x16f6a916f30 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:418:90> col:59 wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x16f6a916e58 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x16f6a916fd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcslwr. See online help for details." ""
|-FunctionDecl 0x16f6a913260 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:419:90> col:59 wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x16f6a913188 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x16f6a913308 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsupr. See online help for details." ""
|-FunctionDecl 0x16f6a913640 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:420:137> col:70 wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x16f6a9134c8 <col:86, col:102> col:102 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x16f6a913540 <col:116, col:132> col:132 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x16f6a9136f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicoll. See online help for details." ""
|-FunctionDecl 0x16f6a913ae0 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:35:9, col:112> col:22 _wassert 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
| |-ParmVarDecl 0x16f6a913810 <col:38, col:54> col:54 _Message 'const wchar_t *'
| |-ParmVarDecl 0x16f6a913888 <col:71, col:86> col:86 _File 'const wchar_t *'
| `-ParmVarDecl 0x16f6a913908 <col:98, col:107> col:107 _Line 'unsigned int'
|-RecordDecl 0x16f6a913bb0 <.//openssl//file_jk/before\crypto\evp/evp_locl.h:12:1, line:22:1> line:12:8 invalid struct evp_md_ctx_st definition
| |-FieldDecl 0x16f6a913c88 <line:13:5, col:19> col:19 invalid digest 'const int *'
| |-FieldDecl 0x16f6a913cf8 <line:14:5, col:13> col:13 invalid engine 'int *'
| |-FieldDecl 0x16f6a913d68 <line:16:5, col:19> col:19 flags 'unsigned long'
| |-FieldDecl 0x16f6a913dd8 <line:17:5, col:11> col:11 md_data 'void *'
| |-FieldDecl 0x16f6a913e48 <line:19:5, col:19> col:19 invalid pctx 'int *'
| `-FieldDecl 0x16f6a91a248 <line:21:5, col:67> col:11 update 'int (*)(int *, const void *, size_t)'
|-RecordDecl 0x16f6a91a2a0 <line:24:1, line:42:1> line:24:8 invalid struct evp_cipher_ctx_st definition
| |-FieldDecl 0x16f6a91a378 <line:25:5, col:23> col:23 invalid cipher 'const int *'
| |-FieldDecl 0x16f6a91a3e8 <line:26:5, col:13> col:13 invalid engine 'int *'
| |-FieldDecl 0x16f6a91a458 <line:28:5, col:9> col:9 encrypt 'int'
| |-FieldDecl 0x16f6a91a4c8 <line:29:5, col:9> col:9 buf_len 'int'
| |-FieldDecl 0x16f6a91a538 <line:30:5, col:19> col:19 invalid oiv 'unsigned char'
| |-FieldDecl 0x16f6a91a5a8 <line:31:5, col:19> col:19 invalid iv 'unsigned char'
| |-FieldDecl 0x16f6a91a618 <line:32:5, col:19> col:19 invalid buf 'unsigned char'
| |-FieldDecl 0x16f6a91a688 <line:33:5, col:9> col:9 num 'int'
| |-FieldDecl 0x16f6a91a6f8 <line:35:5, col:11> col:11 app_data 'void *'
| |-FieldDecl 0x16f6a91a768 <line:36:5, col:9> col:9 key_len 'int'
| |-FieldDecl 0x16f6a91a7d8 <line:37:5, col:19> col:19 flags 'unsigned long'
| |-FieldDecl 0x16f6a91a848 <line:38:5, col:11> col:11 cipher_data 'void *'
| |-FieldDecl 0x16f6a91a8b8 <line:39:5, col:9> col:9 final_used 'int'
| |-FieldDecl 0x16f6a91a928 <line:40:5, col:9> col:9 block_mask 'int'
| `-FieldDecl 0x16f6a91a998 <line:41:5, col:19> col:19 invalid final 'unsigned char'
|-FunctionDecl 0x16f6a91ae30 <line:44:1, line:47:39> line:44:5 invalid PKCS5_v2_PBKDF2_keyivgen 'int (int *, const char *, int, int *, const int *, const int *, int)'
| |-ParmVarDecl 0x16f6a91aa08 <col:30, col:46> col:46 invalid ctx 'int *'
| |-ParmVarDecl 0x16f6a91aa88 <col:51, col:63> col:63 pass 'const char *'
| |-ParmVarDecl 0x16f6a91ab08 <line:45:30, col:34> col:34 passlen 'int'
| |-ParmVarDecl 0x16f6a91ab88 <col:43, col:54> col:54 invalid param 'int *'
| |-ParmVarDecl 0x16f6a91ac08 <line:46:30, col:48> col:48 invalid c 'const int *'
| |-ParmVarDecl 0x16f6a91ac88 <col:51, col:65> col:65 invalid md 'const int *'
| `-ParmVarDecl 0x16f6a91ad08 <line:47:30, col:34> col:34 en_de 'int'
|-RecordDecl 0x16f6a91af08 <line:49:1, line:63:1> line:49:8 struct evp_Encode_Ctx_st definition
| |-FieldDecl 0x16f6a91afd8 <line:51:5, col:9> col:9 num 'int'
| |-FieldDecl 0x16f6a91b090 <line:57:5, col:9> col:9 length 'int'
| |-FieldDecl 0x16f6a91b190 <line:59:5, col:30> col:19 enc_data 'unsigned char [80]'
| |-FieldDecl 0x16f6a91b200 <line:61:5, col:9> col:9 line_num 'int'
| `-FieldDecl 0x16f6a91b270 <line:62:5, col:9> col:9 expect_nl 'int'
|-RecordDecl 0x16f6a91b2c8 <line:65:9, col:16> col:16 struct evp_pbe_st
|-TypedefDecl 0x16f6a91b3d8 <col:1, col:27> col:27 referenced EVP_PBE_CTL 'struct evp_pbe_st':'struct evp_pbe_st'
| `-ElaboratedType 0x16f6a91b380 'struct evp_pbe_st' sugar
|   `-RecordType 0x16f6a91b360 'struct evp_pbe_st'
|     `-Record 0x16f6a91b2c8 'evp_pbe_st'
|-FunctionDecl 0x16f6a91b580 <line:66:1, col:28> col:1 DEFINE_STACK_OF 'int (EVP_PBE_CTL)'
| `-ParmVarDecl 0x16f6a91b480 <col:17> col:28 'EVP_PBE_CTL':'struct evp_pbe_st'
|-FunctionDecl 0x16f6a91b890 <line:68:1, col:73> col:5 used is_partially_overlapping 'int (const void *, const void *, int)'
| |-ParmVarDecl 0x16f6a91b658 <col:30, col:42> col:42 ptr1 'const void *'
| |-ParmVarDecl 0x16f6a91b6d8 <col:48, col:60> col:60 ptr2 'const void *'
| `-ParmVarDecl 0x16f6a91b758 <col:66, col:70> col:70 len 'int'
|-RecordDecl 0x16f6a91b960 <.//openssl//file_jk/before\crypto\evp\e_aes.c:22:9, line:32:1> line:22:9 invalid struct definition
| |-RecordDecl 0x16f6a91ba20 <line:23:5, line:26:5> line:23:5 invalid union definition
| | |-FieldDecl 0x16f6a91baf8 <line:24:9, col:16> col:16 align 'double'
| | `-FieldDecl 0x16f6a91bb68 <line:25:9, col:17> col:17 invalid ks 'int'
| |-FieldDecl 0x16f6a91bc18 <line:23:5, line:26:7> col:7 invalid ks 'union (anonymous union at .//openssl//file_jk/before\crypto\evp\e_aes.c:23:5)':'union (anonymous at .//openssl//file_jk/before\crypto\evp\e_aes.c:23:5)'
| |-FieldDecl 0x16f6a91bc88 <line:27:5, col:16> col:16 invalid block 'int'
| |-RecordDecl 0x16f6a91bce0 <line:28:5, line:31:5> line:28:5 invalid union definition
| | |-FieldDecl 0x16f6a91bdb8 <line:29:9, col:18> col:18 invalid cbc 'int'
| | `-FieldDecl 0x16f6a91be28 <line:30:9, col:18> col:18 invalid ctr 'int'
| `-FieldDecl 0x16f6a91bed8 <line:28:5, line:31:7> col:7 invalid stream 'union (anonymous union at .//openssl//file_jk/before\crypto\evp\e_aes.c:28:5)':'union (anonymous at .//openssl//file_jk/before\crypto\evp\e_aes.c:28:5)'
|-TypedefDecl 0x16f6a91bf88 <line:22:1, line:32:3> col:3 referenced EVP_AES_KEY 'struct (anonymous struct at .//openssl//file_jk/before\crypto\evp\e_aes.c:22:9)':'struct (anonymous at .//openssl//file_jk/before\crypto\evp\e_aes.c:22:9)'
| `-ElaboratedType 0x16f6a91bf30 'struct (anonymous struct at .//openssl//file_jk/before\crypto\evp\e_aes.c:22:9)' sugar
|   `-RecordType 0x16f6a91ba00 'struct (anonymous at .//openssl//file_jk/before\crypto\evp\e_aes.c:22:9)'
|     `-Record 0x16f6a91b960 ''
|-RecordDecl 0x16f6a91bff8 <line:34:9, line:48:1> line:34:9 invalid struct definition
| |-RecordDecl 0x16f6a915050 <line:35:5, line:38:5> line:35:5 invalid union definition
| | |-FieldDecl 0x16f6a915128 <line:36:9, col:16> col:16 align 'double'
| | `-FieldDecl 0x16f6a915198 <line:37:9, col:17> col:17 invalid ks 'int'
| |-FieldDecl 0x16f6a915248 <line:35:5, line:38:7> col:7 invalid ks 'union (anonymous union at .//openssl//file_jk/before\crypto\evp\e_aes.c:35:5)':'union (anonymous at .//openssl//file_jk/before\crypto\evp\e_aes.c:35:5)'
| |-FieldDecl 0x16f6a9152b8 <line:39:5, col:9> col:9 referenced key_set 'int'
| |-FieldDecl 0x16f6a915328 <line:40:5, col:9> col:9 referenced iv_set 'int'
| |-FieldDecl 0x16f6a915398 <line:41:5, col:20> col:20 invalid gcm 'int'
| |-FieldDecl 0x16f6a915430 <line:42:5, col:20> col:20 referenced iv 'unsigned char *'
| |-FieldDecl 0x16f6a9154a0 <line:43:5, col:9> col:9 referenced ivlen 'int'
| |-FieldDecl 0x16f6a915510 <line:44:5, col:9> col:9 referenced taglen 'int'
| |-FieldDecl 0x16f6a915580 <line:45:5, col:9> col:9 referenced iv_gen 'int'
| |-FieldDecl 0x16f6a9155f0 <line:46:5, col:9> col:9 referenced tls_aad_len 'int'
| `-FieldDecl 0x16f6a915660 <line:47:5, col:14> col:14 invalid ctr 'int'
|-TypedefDecl 0x16f6a915718 <line:34:1, line:48:3> col:3 referenced EVP_AES_GCM_CTX 'struct (anonymous struct at .//openssl//file_jk/before\crypto\evp\e_aes.c:34:9)':'struct (anonymous at .//openssl//file_jk/before\crypto\evp\e_aes.c:34:9)'
| `-ElaboratedType 0x16f6a9156c0 'struct (anonymous struct at .//openssl//file_jk/before\crypto\evp\e_aes.c:34:9)' sugar
|   `-RecordType 0x16f6a915030 'struct (anonymous at .//openssl//file_jk/before\crypto\evp\e_aes.c:34:9)'
|     `-Record 0x16f6a91bff8 ''
|-RecordDecl 0x16f6a915788 <line:50:9, line:60:1> line:50:9 invalid struct definition
| |-RecordDecl 0x16f6a915840 <line:51:5, line:54:5> line:51:5 invalid union definition
| | |-FieldDecl 0x16f6a915918 <line:52:9, col:16> col:16 align 'double'
| | `-FieldDecl 0x16f6a915988 <line:53:9, col:17> col:17 invalid ks 'int'
| |-FieldDecl 0x16f6a915a38 <line:51:5, line:54:7> col:7 invalid ks1 'union (anonymous union at .//openssl//file_jk/before\crypto\evp\e_aes.c:51:5)':'union (anonymous at .//openssl//file_jk/before\crypto\evp\e_aes.c:51:5)'
| |-FieldDecl 0x16f6a915ab0 <line:51:5, line:54:12> col:12 invalid ks2 'union (anonymous union at .//openssl//file_jk/before\crypto\evp\e_aes.c:51:5)':'union (anonymous at .//openssl//file_jk/before\crypto\evp\e_aes.c:51:5)'
| |-FieldDecl 0x16f6a915b20 <line:55:5, col:20> col:20 invalid xts 'int'
| `-FieldDecl 0x16f6a919158 <line:56:5, line:59:47> line:56:12 referenced stream 'void (*)(const unsigned char *, unsigned char *, size_t, const int *, const int *, const unsigned char *)'
|-TypedefDecl 0x16f6a919208 <line:50:1, line:60:3> col:3 referenced EVP_AES_XTS_CTX 'struct (anonymous struct at .//openssl//file_jk/before\crypto\evp\e_aes.c:50:9)':'struct (anonymous at .//openssl//file_jk/before\crypto\evp\e_aes.c:50:9)'
| `-ElaboratedType 0x16f6a9191b0 'struct (anonymous struct at .//openssl//file_jk/before\crypto\evp\e_aes.c:50:9)' sugar
|   `-RecordType 0x16f6a915820 'struct (anonymous at .//openssl//file_jk/before\crypto\evp\e_aes.c:50:9)'
|     `-Record 0x16f6a915788 ''
|-RecordDecl 0x16f6a919278 <line:62:9, line:75:1> line:62:9 invalid struct definition
| |-RecordDecl 0x16f6a919330 <line:63:5, line:66:5> line:63:5 invalid union definition
| | |-FieldDecl 0x16f6a919408 <line:64:9, col:16> col:16 align 'double'
| | `-FieldDecl 0x16f6a919478 <line:65:9, col:17> col:17 invalid ks 'int'
| |-FieldDecl 0x16f6a919528 <line:63:5, line:66:7> col:7 invalid ks 'union (anonymous union at .//openssl//file_jk/before\crypto\evp\e_aes.c:63:5)':'union (anonymous at .//openssl//file_jk/before\crypto\evp\e_aes.c:63:5)'
| |-FieldDecl 0x16f6a919598 <line:67:5, col:9> col:9 referenced key_set 'int'
| |-FieldDecl 0x16f6a919608 <line:68:5, col:9> col:9 referenced iv_set 'int'
| |-FieldDecl 0x16f6a919678 <line:69:5, col:9> col:9 referenced tag_set 'int'
| |-FieldDecl 0x16f6a9196e8 <line:70:5, col:9> col:9 referenced len_set 'int'
| |-FieldDecl 0x16f6a919758 <line:71:5, col:9> col:9 referenced L 'int'
| |-FieldDecl 0x16f6a9197c8 <col:5, col:12> col:12 referenced M 'int'
| |-FieldDecl 0x16f6a919838 <line:72:5, col:9> col:9 referenced tls_aad_len 'int'
| |-FieldDecl 0x16f6a9198a8 <line:73:5, col:20> col:20 invalid ccm 'int'
| `-FieldDecl 0x16f6a919918 <line:74:5, col:14> col:14 invalid str 'int'
|-TypedefDecl 0x16f6a9199c8 <line:62:1, line:75:3> col:3 referenced EVP_AES_CCM_CTX 'struct (anonymous struct at .//openssl//file_jk/before\crypto\evp\e_aes.c:62:9)':'struct (anonymous at .//openssl//file_jk/before\crypto\evp\e_aes.c:62:9)'
| `-ElaboratedType 0x16f6a919970 'struct (anonymous struct at .//openssl//file_jk/before\crypto\evp\e_aes.c:62:9)' sugar
|   `-RecordType 0x16f6a919310 'struct (anonymous at .//openssl//file_jk/before\crypto\evp\e_aes.c:62:9)'
|     `-Record 0x16f6a919278 ''
|-RecordDecl 0x16f6a919a38 <line:78:9, line:98:1> line:78:9 invalid struct definition
| |-RecordDecl 0x16f6a919af0 <line:79:5, line:82:5> line:79:5 invalid union definition
| | |-FieldDecl 0x16f6a919bc8 <line:80:9, col:16> col:16 align 'double'
| | `-FieldDecl 0x16f6a919c38 <line:81:9, col:17> col:17 invalid ks 'int'
| |-FieldDecl 0x16f6a919ce8 <line:79:5, line:82:7> col:7 invalid ksenc 'union (anonymous union at .//openssl//file_jk/before\crypto\evp\e_aes.c:79:5)':'union (anonymous at .//openssl//file_jk/before\crypto\evp\e_aes.c:79:5)'
| |-RecordDecl 0x16f6a919d40 <line:83:5, line:86:5> line:83:5 invalid union definition
| | |-FieldDecl 0x16f6a919e18 <line:84:9, col:16> col:16 align 'double'
| | `-FieldDecl 0x16f6a919e88 <line:85:9, col:17> col:17 invalid ks 'int'
| |-FieldDecl 0x16f6a919f38 <line:83:5, line:86:7> col:7 invalid ksdec 'union (anonymous union at .//openssl//file_jk/before\crypto\evp\e_aes.c:83:5)':'union (anonymous at .//openssl//file_jk/before\crypto\evp\e_aes.c:83:5)'
| |-FieldDecl 0x16f6a919fa8 <line:87:5, col:9> col:9 referenced key_set 'int'
| |-FieldDecl 0x16f6a91a018 <line:88:5, col:9> col:9 referenced iv_set 'int'
| |-FieldDecl 0x16f6a91d0c8 <line:89:5, col:20> col:20 invalid ocb 'int'
| |-FieldDecl 0x16f6a91d138 <line:90:5, col:20> col:20 referenced iv 'unsigned char *'
| |-FieldDecl 0x16f6a91d1f8 <line:91:5, col:25> col:19 referenced tag 'unsigned char [16]'
| |-FieldDecl 0x16f6a91d2b8 <line:92:5, col:30> col:19 referenced data_buf 'unsigned char [16]'
| |-FieldDecl 0x16f6a91d378 <line:93:5, col:29> col:19 referenced aad_buf 'unsigned char [16]'
| |-FieldDecl 0x16f6a91d3e8 <line:94:5, col:9> col:9 referenced data_buf_len 'int'
| |-FieldDecl 0x16f6a91d458 <line:95:5, col:9> col:9 referenced aad_buf_len 'int'
| |-FieldDecl 0x16f6a91d4c8 <line:96:5, col:9> col:9 referenced ivlen 'int'
| `-FieldDecl 0x16f6a91d538 <line:97:5, col:9> col:9 referenced taglen 'int'
|-TypedefDecl 0x16f6a91d5e8 <line:78:1, line:98:3> col:3 referenced EVP_AES_OCB_CTX 'struct (anonymous struct at .//openssl//file_jk/before\crypto\evp\e_aes.c:78:9)':'struct (anonymous at .//openssl//file_jk/before\crypto\evp\e_aes.c:78:9)'
| `-ElaboratedType 0x16f6a91d590 'struct (anonymous struct at .//openssl//file_jk/before\crypto\evp\e_aes.c:78:9)' sugar
|   `-RecordType 0x16f6a919ad0 'struct (anonymous at .//openssl//file_jk/before\crypto\evp\e_aes.c:78:9)'
|     `-Record 0x16f6a919a38 ''
|-FunctionDecl 0x16f6a91d8f0 <line:1033:1, line:1136:1> line:1033:12 invalid aes_init_key 'int (int *, const unsigned char *, const unsigned char *, int)' static
| |-ParmVarDecl 0x16f6a91d670 <col:25, col:41> col:41 invalid ctx 'int *'
| |-ParmVarDecl 0x16f6a91d6f0 <col:46, col:67> col:67 used key 'const unsigned char *'
| |-ParmVarDecl 0x16f6a91d770 <line:1034:25, col:46> col:46 iv 'const unsigned char *'
| |-ParmVarDecl 0x16f6a91d7f0 <col:50, col:54> col:54 used enc 'int'
| `-CompoundStmt 0x16f6a91f7f0 <line:1035:1, line:1136:1>
|   |-DeclStmt 0x16f6a91dae0 <line:1036:5, col:18>
|   | |-VarDecl 0x16f6a91d9e0 <col:5, col:9> col:9 used ret 'int'
|   | `-VarDecl 0x16f6a91da60 <col:5, col:14> col:14 used mode 'int'
|   |-DeclStmt 0x16f6a91dd28 <line:1037:5, col:51>
|   | `-VarDecl 0x16f6a91db88 <col:5, col:18> col:18 used dat 'EVP_AES_KEY *'
|   |-IfStmt 0x16f6a91f598 <line:1040:5, line:1128:5> has_else
|   | |-OpaqueValueExpr 0x16f6a91f580 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x16f6a91f2f8 <line:1041:18, line:1081:5>
|   | | `-CompoundStmt 0x16f6a91f2e8 <line:1073:9, line:1080:9>
|   | `-CompoundStmt 0x16f6a91f570 <line:1118:5, line:1128:5>
|   |-IfStmt 0x16f6a91f7a0 <line:1130:5, line:1133:5>
|   | |-BinaryOperator 0x16f6a91f620 <line:1130:9, col:15> 'int' '<'
|   | | |-ImplicitCastExpr 0x16f6a91f608 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x16f6a91f5c0 <col:9> 'int' lvalue Var 0x16f6a91d9e0 'ret' 'int'
|   | | `-IntegerLiteral 0x16f6a91f5e0 <col:15> 'int' 0
|   | `-CompoundStmt 0x16f6a91f788 <col:18, line:1133:5>
|   |   `-ReturnStmt 0x16f6a91f778 <line:1132:9, col:16>
|   |     `-IntegerLiteral 0x16f6a91f750 <col:16> 'int' 0
|   `-ReturnStmt 0x16f6a91f7e0 <line:1135:5, col:12>
|     `-IntegerLiteral 0x16f6a91f7b8 <col:12> 'int' 1
|-FunctionDecl 0x16f6a91fb00 <line:1138:1, line:1155:1> line:1138:12 invalid aes_cbc_cipher 'int (int *, unsigned char *, const unsigned char *, size_t)' static
| |-ParmVarDecl 0x16f6a91f840 <col:27, col:43> col:43 invalid ctx 'int *'
| |-ParmVarDecl 0x16f6a91f8c0 <col:48, col:63> col:63 used out 'unsigned char *'
| |-ParmVarDecl 0x16f6a91f940 <line:1139:27, col:48> col:48 used in 'const unsigned char *'
| |-ParmVarDecl 0x16f6a91f9b8 <col:52, col:59> col:59 used len 'size_t':'unsigned long long'
| `-CompoundStmt 0x16f6a8c7c20 <line:1140:1, line:1155:1>
|   |-DeclStmt 0x16f6a91fc70 <line:1141:5, col:51>
|   | `-VarDecl 0x16f6a91fbe8 <col:5, col:18> col:18 used dat 'EVP_AES_KEY *'
|   `-ReturnStmt 0x16f6a8c7c10 <line:1154:5, col:12>
|     `-IntegerLiteral 0x16f6a8c7be8 <col:12> 'int' 1
|-FunctionDecl 0x16f6a8c7e80 <line:1157:1, line:1171:1> line:1157:12 invalid aes_ecb_cipher 'int (int *, unsigned char *, const unsigned char *, size_t)' static
| |-ParmVarDecl 0x16f6a8c7c58 <col:27, col:43> col:43 invalid ctx 'int *'
| |-ParmVarDecl 0x16f6a8c7cd8 <col:48, col:63> col:63 used out 'unsigned char *'
| |-ParmVarDecl 0x16f6a8c7d58 <line:1158:27, col:48> col:48 used in 'const unsigned char *'
| |-ParmVarDecl 0x16f6a8c7dd0 <col:52, col:59> col:59 used len 'size_t':'unsigned long long'
| `-CompoundStmt 0x16f6a8c87b0 <line:1159:1, line:1171:1>
|   |-DeclStmt 0x16f6a8c80e0 <line:1160:5, col:47>
|   | `-VarDecl 0x16f6a8c7f68 <col:5, col:12> col:12 used bl 'size_t':'unsigned long long'
|   |-DeclStmt 0x16f6a8c8170 <line:1161:5, col:13>
|   | `-VarDecl 0x16f6a8c8108 <col:5, col:12> col:12 used i 'size_t':'unsigned long long'
|   |-DeclStmt 0x16f6a8c8220 <line:1162:5, col:51>
|   | `-VarDecl 0x16f6a8c8198 <col:5, col:18> col:18 used dat 'EVP_AES_KEY *'
|   |-IfStmt 0x16f6a8c8330 <line:1164:5, line:1165:16>
|   | |-BinaryOperator 0x16f6a8c82d8 <line:1164:9, col:15> 'int' '<'
|   | | |-ImplicitCastExpr 0x16f6a8c82a8 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x16f6a8c8238 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x16f6a8c7dd0 'len' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x16f6a8c82c0 <col:15> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x16f6a8c8270 <col:15> 'size_t':'unsigned long long' lvalue Var 0x16f6a8c7f68 'bl' 'size_t':'unsigned long long'
|   | `-ReturnStmt 0x16f6a8c8320 <line:1165:9, col:16>
|   |   `-IntegerLiteral 0x16f6a8c82f8 <col:16> 'int' 1
|   `-ReturnStmt 0x16f6a8c87a0 <line:1170:5, col:12>
|     `-IntegerLiteral 0x16f6a8c8778 <col:12> 'int' 1
|-FunctionDecl 0x16f6a8c8a48 <line:1173:1, line:1183:1> line:1173:12 invalid aes_ofb_cipher 'int (int *, unsigned char *, const unsigned char *, size_t)' static
| |-ParmVarDecl 0x16f6a8c8820 <col:27, col:43> col:43 invalid ctx 'int *'
| |-ParmVarDecl 0x16f6a8c88a0 <col:48, col:63> col:63 used out 'unsigned char *'
| |-ParmVarDecl 0x16f6a8c8920 <line:1174:27, col:48> col:48 used in 'const unsigned char *'
| |-ParmVarDecl 0x16f6a8c8998 <col:52, col:59> col:59 used len 'size_t':'unsigned long long'
| `-CompoundStmt 0x16f6a8c9190 <line:1175:1, line:1183:1>
|   |-DeclStmt 0x16f6a8c8bb8 <line:1176:5, col:51>
|   | `-VarDecl 0x16f6a8c8b30 <col:5, col:18> col:18 used dat 'EVP_AES_KEY *'
|   |-DeclStmt 0x16f6a8c8d60 <line:1178:5, col:38>
|   | `-VarDecl 0x16f6a8c8be8 <col:5, col:9> col:9 used num 'int'
|   `-ReturnStmt 0x16f6a8c9180 <line:1182:5, col:12>
|     `-IntegerLiteral 0x16f6a8c9158 <col:12> 'int' 1
|-FunctionDecl 0x16f6a8c93f8 <line:1185:1, line:1196:1> line:1185:12 invalid aes_cfb_cipher 'int (int *, unsigned char *, const unsigned char *, size_t)' static
| |-ParmVarDecl 0x16f6a8c91d0 <col:27, col:43> col:43 invalid ctx 'int *'
| |-ParmVarDecl 0x16f6a8c9250 <col:48, col:63> col:63 used out 'unsigned char *'
| |-ParmVarDecl 0x16f6a8c92d0 <line:1186:27, col:48> col:48 used in 'const unsigned char *'
| |-ParmVarDecl 0x16f6a8c9348 <col:52, col:59> col:59 used len 'size_t':'unsigned long long'
| `-CompoundStmt 0x16f6a8c4950 <line:1187:1, line:1196:1>
|   |-DeclStmt 0x16f6a8c9568 <line:1188:5, col:51>
|   | `-VarDecl 0x16f6a8c94e0 <col:5, col:18> col:18 used dat 'EVP_AES_KEY *'
|   |-DeclStmt 0x16f6a8c9620 <line:1190:5, col:38>
|   | `-VarDecl 0x16f6a8c9598 <col:5, col:9> col:9 used num 'int'
|   `-ReturnStmt 0x16f6a8c4940 <line:1195:5, col:12>
|     `-IntegerLiteral 0x16f6a8c4918 <col:12> 'int' 1
|-FunctionDecl 0x16f6a8c4bb8 <line:1198:1, line:1209:1> line:1198:12 invalid aes_cfb8_cipher 'int (int *, unsigned char *, const unsigned char *, size_t)' static
| |-ParmVarDecl 0x16f6a8c4990 <col:28, col:44> col:44 invalid ctx 'int *'
| |-ParmVarDecl 0x16f6a8c4a10 <col:49, col:64> col:64 used out 'unsigned char *'
| |-ParmVarDecl 0x16f6a8c4a90 <line:1199:28, col:49> col:49 used in 'const unsigned char *'
| |-ParmVarDecl 0x16f6a8c4b08 <col:53, col:60> col:60 used len 'size_t':'unsigned long long'
| `-CompoundStmt 0x16f6a8c5140 <line:1200:1, line:1209:1>
|   |-DeclStmt 0x16f6a8c4d28 <line:1201:5, col:51>
|   | `-VarDecl 0x16f6a8c4ca0 <col:5, col:18> col:18 used dat 'EVP_AES_KEY *'
|   |-DeclStmt 0x16f6a8c4de0 <line:1203:5, col:38>
|   | `-VarDecl 0x16f6a8c4d58 <col:5, col:9> col:9 used num 'int'
|   `-ReturnStmt 0x16f6a8c5130 <line:1208:5, col:12>
|     `-IntegerLiteral 0x16f6a8c5108 <col:12> 'int' 1
|-FunctionDecl 0x16f6a8c53a8 <line:1211:1, line:1244:1> line:1211:12 invalid aes_cfb1_cipher 'int (int *, unsigned char *, const unsigned char *, size_t)' static
| |-ParmVarDecl 0x16f6a8c5180 <col:28, col:44> col:44 invalid ctx 'int *'
| |-ParmVarDecl 0x16f6a8c5200 <col:49, col:64> col:64 used out 'unsigned char *'
| |-ParmVarDecl 0x16f6a8c5280 <line:1212:28, col:49> col:49 used in 'const unsigned char *'
| |-ParmVarDecl 0x16f6a8c52f8 <col:53, col:60> col:60 used len 'size_t':'unsigned long long'
| `-CompoundStmt 0x16f6a8c6b40 <line:1213:1, line:1244:1>
|   |-DeclStmt 0x16f6a8c5518 <line:1214:5, col:51>
|   | `-VarDecl 0x16f6a8c5490 <col:5, col:18> col:18 used dat 'EVP_AES_KEY *'
|   |-IfStmt 0x16f6a8c1a58 <line:1216:5, line:1223:5>
|   | |-OpaqueValueExpr 0x16f6a8c1a40 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x16f6a8c1a20 <line:1216:68, line:1223:5>
|   |   |-DeclStmt 0x16f6a8c56e0 <line:1217:9, col:42>
|   |   | `-VarDecl 0x16f6a8c5658 <col:9, col:13> col:13 used num 'int'
|   |   `-ReturnStmt 0x16f6a8c1a10 <line:1222:9, col:16>
|   |     `-IntegerLiteral 0x16f6a8c19e8 <col:16> 'int' 1
|   |-WhileStmt 0x16f6a8c2710 <line:1225:5, line:1234:5>
|   | |-BinaryOperator 0x16f6a8c1c58 <line:1225:12, line:101:57> 'int' '>='
|   | | |-ImplicitCastExpr 0x16f6a8c1c40 <line:1225:12> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x16f6a8c1a70 <col:12> 'size_t':'unsigned long long' lvalue ParmVar 0x16f6a8c52f8 'len' 'size_t':'unsigned long long'
|   | | `-ParenExpr 0x16f6a8c1c20 <line:101:25, col:57> 'size_t':'unsigned long long'
|   | |   `-BinaryOperator 0x16f6a8c1c00 <col:26, col:56> 'size_t':'unsigned long long' '<<'
|   | |     |-CStyleCastExpr 0x16f6a8c1ac8 <col:26, col:34> 'size_t':'unsigned long long' <IntegralCast>
|   | |     | `-IntegerLiteral 0x16f6a8c1a90 <col:34> 'int' 1
|   | |     `-ParenExpr 0x16f6a8c1be0 <col:37, col:56> 'unsigned long long'
|   | |       `-BinaryOperator 0x16f6a8c1bc0 <col:38, col:55> 'unsigned long long' '-'
|   | |         |-BinaryOperator 0x16f6a8c1b60 <col:38, col:53> 'unsigned long long' '*'
|   | |         | |-UnaryExprOrTypeTraitExpr 0x16f6a8c1b00 <col:38, col:51> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|   | |         | `-ImplicitCastExpr 0x16f6a8c1b48 <col:53> 'unsigned long long' <IntegralCast>
|   | |         |   `-IntegerLiteral 0x16f6a8c1b20 <col:53> 'int' 8
|   | |         `-ImplicitCastExpr 0x16f6a8c1ba8 <col:55> 'unsigned long long' <IntegralCast>
|   | |           `-IntegerLiteral 0x16f6a8c1b80 <col:55> 'int' 4
|   | `-CompoundStmt 0x16f6a8c26e0 <line:1225:32, line:1234:5>
|   |   |-DeclStmt 0x16f6a8c1d18 <line:1226:9, col:42>
|   |   | `-VarDecl 0x16f6a8c1c90 <col:9, col:13> col:13 used num 'int'
|   |   |-CompoundAssignOperator 0x16f6a8c22b0 <line:1231:9, line:101:57> 'size_t':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |   | |-DeclRefExpr 0x16f6a8c20e0 <line:1231:9> 'size_t':'unsigned long long' lvalue ParmVar 0x16f6a8c52f8 'len' 'size_t':'unsigned long long'
|   |   | `-ParenExpr 0x16f6a8c2290 <line:101:25, col:57> 'size_t':'unsigned long long'
|   |   |   `-BinaryOperator 0x16f6a8c2270 <col:26, col:56> 'size_t':'unsigned long long' '<<'
|   |   |     |-CStyleCastExpr 0x16f6a8c2138 <col:26, col:34> 'size_t':'unsigned long long' <IntegralCast>
|   |   |     | `-IntegerLiteral 0x16f6a8c2100 <col:34> 'int' 1
|   |   |     `-ParenExpr 0x16f6a8c2250 <col:37, col:56> 'unsigned long long'
|   |   |       `-BinaryOperator 0x16f6a8c2230 <col:38, col:55> 'unsigned long long' '-'
|   |   |         |-BinaryOperator 0x16f6a8c21d0 <col:38, col:53> 'unsigned long long' '*'
|   |   |         | |-UnaryExprOrTypeTraitExpr 0x16f6a8c2170 <col:38, col:51> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|   |   |         | `-ImplicitCastExpr 0x16f6a8c21b8 <col:53> 'unsigned long long' <IntegralCast>
|   |   |         |   `-IntegerLiteral 0x16f6a8c2190 <col:53> 'int' 8
|   |   |         `-ImplicitCastExpr 0x16f6a8c2218 <col:55> 'unsigned long long' <IntegralCast>
|   |   |           `-IntegerLiteral 0x16f6a8c21f0 <col:55> 'int' 4
|   |   |-CompoundAssignOperator 0x16f6a8c24b0 <line:1232:9, line:101:57> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   |   | |-DeclRefExpr 0x16f6a8c22e0 <line:1232:9> 'unsigned char *' lvalue ParmVar 0x16f6a8c5200 'out' 'unsigned char *'
|   |   | `-ParenExpr 0x16f6a8c2490 <line:101:25, col:57> 'size_t':'unsigned long long'
|   |   |   `-BinaryOperator 0x16f6a8c2470 <col:26, col:56> 'size_t':'unsigned long long' '<<'
|   |   |     |-CStyleCastExpr 0x16f6a8c2338 <col:26, col:34> 'size_t':'unsigned long long' <IntegralCast>
|   |   |     | `-IntegerLiteral 0x16f6a8c2300 <col:34> 'int' 1
|   |   |     `-ParenExpr 0x16f6a8c2450 <col:37, col:56> 'unsigned long long'
|   |   |       `-BinaryOperator 0x16f6a8c2430 <col:38, col:55> 'unsigned long long' '-'
|   |   |         |-BinaryOperator 0x16f6a8c23d0 <col:38, col:53> 'unsigned long long' '*'
|   |   |         | |-UnaryExprOrTypeTraitExpr 0x16f6a8c2370 <col:38, col:51> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|   |   |         | `-ImplicitCastExpr 0x16f6a8c23b8 <col:53> 'unsigned long long' <IntegralCast>
|   |   |         |   `-IntegerLiteral 0x16f6a8c2390 <col:53> 'int' 8
|   |   |         `-ImplicitCastExpr 0x16f6a8c2418 <col:55> 'unsigned long long' <IntegralCast>
|   |   |           `-IntegerLiteral 0x16f6a8c23f0 <col:55> 'int' 4
|   |   `-CompoundAssignOperator 0x16f6a8c26b0 <line:1233:9, line:101:57> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   |     |-DeclRefExpr 0x16f6a8c24e0 <line:1233:9> 'const unsigned char *' lvalue ParmVar 0x16f6a8c5280 'in' 'const unsigned char *'
|   |     `-ParenExpr 0x16f6a8c2690 <line:101:25, col:57> 'size_t':'unsigned long long'
|   |       `-BinaryOperator 0x16f6a8c2670 <col:26, col:56> 'size_t':'unsigned long long' '<<'
|   |         |-CStyleCastExpr 0x16f6a8c2538 <col:26, col:34> 'size_t':'unsigned long long' <IntegralCast>
|   |         | `-IntegerLiteral 0x16f6a8c2500 <col:34> 'int' 1
|   |         `-ParenExpr 0x16f6a8c2650 <col:37, col:56> 'unsigned long long'
|   |           `-BinaryOperator 0x16f6a8c2630 <col:38, col:55> 'unsigned long long' '-'
|   |             |-BinaryOperator 0x16f6a8c25d0 <col:38, col:53> 'unsigned long long' '*'
|   |             | |-UnaryExprOrTypeTraitExpr 0x16f6a8c2570 <col:38, col:51> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|   |             | `-ImplicitCastExpr 0x16f6a8c25b8 <col:53> 'unsigned long long' <IntegralCast>
|   |             |   `-IntegerLiteral 0x16f6a8c2590 <col:53> 'int' 8
|   |             `-ImplicitCastExpr 0x16f6a8c2618 <col:55> 'unsigned long long' <IntegralCast>
|   |               `-IntegerLiteral 0x16f6a8c25f0 <col:55> 'int' 4
|   |-IfStmt 0x16f6a8c6af0 <line:1235:5, line:1241:5>
|   | |-ImplicitCastExpr 0x16f6a8c2748 <line:1235:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | `-DeclRefExpr 0x16f6a8c2728 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x16f6a8c52f8 'len' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x16f6a8c6ad8 <col:14, line:1241:5>
|   |   `-DeclStmt 0x16f6a8c6888 <line:1236:9, col:42>
|   |     `-VarDecl 0x16f6a8c6800 <col:9, col:13> col:13 used num 'int'
|   `-ReturnStmt 0x16f6a8c6b30 <line:1243:5, col:12>
|     `-IntegerLiteral 0x16f6a8c6b08 <col:12> 'int' 1
|-FunctionDecl 0x16f6a8c6db8 <line:1246:1, line:1264:1> line:1246:12 invalid aes_ctr_cipher 'int (int *, unsigned char *, const unsigned char *, size_t)' static
| |-ParmVarDecl 0x16f6a8c6b90 <col:27, col:43> col:43 invalid ctx 'int *'
| |-ParmVarDecl 0x16f6a8c6c10 <col:48, col:63> col:63 used out 'unsigned char *'
| |-ParmVarDecl 0x16f6a8c6c90 <line:1247:27, col:48> col:48 used in 'const unsigned char *'
| |-ParmVarDecl 0x16f6a8c6d08 <col:52, col:59> col:59 used len 'size_t':'unsigned long long'
| `-CompoundStmt 0x16f6a8c76e8 <line:1248:1, line:1264:1>
|   |-DeclStmt 0x16f6a8c6f30 <line:1249:5, col:47>
|   | `-VarDecl 0x16f6a8c6ea8 <col:5, col:18> col:18 used num 'unsigned int'
|   |-DeclStmt 0x16f6a8c6fe0 <line:1250:5, col:51>
|   | `-VarDecl 0x16f6a8c6f58 <col:5, col:18> col:18 used dat 'EVP_AES_KEY *'
|   `-ReturnStmt 0x16f6a8c76d8 <line:1263:5, col:12>
|     `-IntegerLiteral 0x16f6a8c76b0 <col:12> 'int' 1
|-VarDecl 0x16f6a8c7728 <line:955:81, <scratch space>:301:1> col:1 invalid aes_128_cbc 'const int' static
|-FunctionDecl 0x16f6a8c2c00 <.//openssl//file_jk/before\crypto\evp\e_aes.c:963:32, line:965:34> <scratch space>:312:1 invalid EVP_aes_128_cbc 'const int *(void)'
| `-CompoundStmt 0x16f6a8c2cb8 <.//openssl//file_jk/before\crypto\evp\e_aes.c:964:51, line:965:34>
|-VarDecl 0x16f6a8c2ce0 <line:955:81, <scratch space>:7:1> col:1 invalid aes_128_ecb 'const int' static
|-FunctionDecl 0x16f6a8c31a8 <.//openssl//file_jk/before\crypto\evp\e_aes.c:963:32, line:965:34> <scratch space>:18:1 invalid EVP_aes_128_ecb 'const int *(void)'
| `-CompoundStmt 0x16f6a8c3260 <.//openssl//file_jk/before\crypto\evp\e_aes.c:964:51, line:965:34>
|-VarDecl 0x16f6a8c3288 <line:955:81, <scratch space>:24:1> col:1 invalid aes_128_ofb 'const int' static
|-FunctionDecl 0x16f6a8c37d0 <.//openssl//file_jk/before\crypto\evp\e_aes.c:963:32, line:965:34> <scratch space>:35:1 invalid EVP_aes_128_ofb 'const int *(void)'
| `-CompoundStmt 0x16f6a8c3888 <.//openssl//file_jk/before\crypto\evp\e_aes.c:964:51, line:965:34>
|-VarDecl 0x16f6a8c38b0 <line:955:81, <scratch space>:41:1> col:1 invalid aes_128_cfb 'const int' static
|-FunctionDecl 0x16f6a8c3d78 <.//openssl//file_jk/before\crypto\evp\e_aes.c:963:32, line:965:34> <scratch space>:52:1 invalid EVP_aes_128_cfb 'const int *(void)'
| `-CompoundStmt 0x16f6a8c3e30 <.//openssl//file_jk/before\crypto\evp\e_aes.c:964:51, line:965:34>
|-VarDecl 0x16f6a8c3e58 <line:955:81, <scratch space>:58:1> col:1 invalid aes_128_cfb1 'const int' static
|-FunctionDecl 0x16f6a8c4320 <.//openssl//file_jk/before\crypto\evp\e_aes.c:963:32, line:965:34> <scratch space>:69:1 invalid EVP_aes_128_cfb1 'const int *(void)'
| `-CompoundStmt 0x16f6a8c43d8 <.//openssl//file_jk/before\crypto\evp\e_aes.c:964:51, line:965:34>
|-VarDecl 0x16f6a8c4400 <line:955:81, <scratch space>:75:1> col:1 invalid aes_128_cfb8 'const int' static
|-FunctionDecl 0x16f6a8cc960 <.//openssl//file_jk/before\crypto\evp\e_aes.c:963:32, line:965:34> <scratch space>:86:1 invalid EVP_aes_128_cfb8 'const int *(void)'
| `-CompoundStmt 0x16f6a8cca18 <.//openssl//file_jk/before\crypto\evp\e_aes.c:964:51, line:965:34>
|-VarDecl 0x16f6a8cca40 <line:955:81, <scratch space>:92:1> col:1 invalid aes_128_ctr 'const int' static
|-FunctionDecl 0x16f6a8ccf08 <.//openssl//file_jk/before\crypto\evp\e_aes.c:963:32, line:965:34> <scratch space>:103:1 invalid EVP_aes_128_ctr 'const int *(void)'
| `-CompoundStmt 0x16f6a8ccfc0 <.//openssl//file_jk/before\crypto\evp\e_aes.c:964:51, line:965:34>
|-VarDecl 0x16f6a8ccfe8 <line:955:81, <scratch space>:109:1> col:1 invalid aes_192_cbc 'const int' static
|-FunctionDecl 0x16f6a8cd4b0 <.//openssl//file_jk/before\crypto\evp\e_aes.c:963:32, line:965:34> <scratch space>:120:1 invalid EVP_aes_192_cbc 'const int *(void)'
| `-CompoundStmt 0x16f6a8cd568 <.//openssl//file_jk/before\crypto\evp\e_aes.c:964:51, line:965:34>
|-VarDecl 0x16f6a8cd590 <line:955:81, <scratch space>:126:1> col:1 invalid aes_192_ecb 'const int' static
|-FunctionDecl 0x16f6a8d1aa8 <.//openssl//file_jk/before\crypto\evp\e_aes.c:963:32, line:965:34> <scratch space>:137:1 invalid EVP_aes_192_ecb 'const int *(void)'
| `-CompoundStmt 0x16f6a8d1b60 <.//openssl//file_jk/before\crypto\evp\e_aes.c:964:51, line:965:34>
|-VarDecl 0x16f6a8d1b88 <line:955:81, <scratch space>:143:1> col:1 invalid aes_192_ofb 'const int' static
|-FunctionDecl 0x16f6a8d2050 <.//openssl//file_jk/before\crypto\evp\e_aes.c:963:32, line:965:34> <scratch space>:154:1 invalid EVP_aes_192_ofb 'const int *(void)'
| `-CompoundStmt 0x16f6a8d2108 <.//openssl//file_jk/before\crypto\evp\e_aes.c:964:51, line:965:34>
|-VarDecl 0x16f6a8d2130 <line:955:81, <scratch space>:160:1> col:1 invalid aes_192_cfb 'const int' static
|-FunctionDecl 0x16f6a8d25f8 <.//openssl//file_jk/before\crypto\evp\e_aes.c:963:32, line:965:34> <scratch space>:171:1 invalid EVP_aes_192_cfb 'const int *(void)'
| `-CompoundStmt 0x16f6a8d26b0 <.//openssl//file_jk/before\crypto\evp\e_aes.c:964:51, line:965:34>
|-VarDecl 0x16f6a8d26d8 <line:955:81, <scratch space>:177:1> col:1 invalid aes_192_cfb1 'const int' static
|-FunctionDecl 0x16f6a8d0b90 <.//openssl//file_jk/before\crypto\evp\e_aes.c:963:32, line:965:34> <scratch space>:188:1 invalid EVP_aes_192_cfb1 'const int *(void)'
| `-CompoundStmt 0x16f6a8d0c48 <.//openssl//file_jk/before\crypto\evp\e_aes.c:964:51, line:965:34>
|-VarDecl 0x16f6a8d0c70 <line:955:81, <scratch space>:194:1> col:1 invalid aes_192_cfb8 'const int' static
|-FunctionDecl 0x16f6a8d1138 <.//openssl//file_jk/before\crypto\evp\e_aes.c:963:32, line:965:34> <scratch space>:205:1 invalid EVP_aes_192_cfb8 'const int *(void)'
| `-CompoundStmt 0x16f6a8d11f0 <.//openssl//file_jk/before\crypto\evp\e_aes.c:964:51, line:965:34>
|-VarDecl 0x16f6a8d1218 <line:955:81, <scratch space>:211:1> col:1 invalid aes_192_ctr 'const int' static
|-FunctionDecl 0x16f6a8d16e0 <.//openssl//file_jk/before\crypto\evp\e_aes.c:963:32, line:965:34> <scratch space>:222:1 invalid EVP_aes_192_ctr 'const int *(void)'
| `-CompoundStmt 0x16f6a8d1798 <.//openssl//file_jk/before\crypto\evp\e_aes.c:964:51, line:965:34>
|-VarDecl 0x16f6a8d17c0 <line:955:81, <scratch space>:228:1> col:1 invalid aes_256_cbc 'const int' static
|-FunctionDecl 0x16f6a8cdc58 <.//openssl//file_jk/before\crypto\evp\e_aes.c:963:32, line:965:34> <scratch space>:239:1 invalid EVP_aes_256_cbc 'const int *(void)'
| `-CompoundStmt 0x16f6a8cdd10 <.//openssl//file_jk/before\crypto\evp\e_aes.c:964:51, line:965:34>
|-VarDecl 0x16f6a8cdd38 <line:955:81, <scratch space>:245:1> col:1 invalid aes_256_ecb 'const int' static
|-FunctionDecl 0x16f6a8ce200 <.//openssl//file_jk/before\crypto\evp\e_aes.c:963:32, line:965:34> <scratch space>:256:1 invalid EVP_aes_256_ecb 'const int *(void)'
| `-CompoundStmt 0x16f6a8ce2b8 <.//openssl//file_jk/before\crypto\evp\e_aes.c:964:51, line:965:34>
|-VarDecl 0x16f6a8ce2e0 <line:955:81, <scratch space>:262:1> col:1 invalid aes_256_ofb 'const int' static
|-FunctionDecl 0x16f6a8ce7a8 <.//openssl//file_jk/before\crypto\evp\e_aes.c:963:32, line:965:34> <scratch space>:273:1 invalid EVP_aes_256_ofb 'const int *(void)'
| `-CompoundStmt 0x16f6a8ce860 <.//openssl//file_jk/before\crypto\evp\e_aes.c:964:51, line:965:34>
|-VarDecl 0x16f6a8ca858 <line:955:81, <scratch space>:279:1> col:1 invalid aes_256_cfb 'const int' static
|-FunctionDecl 0x16f6a8cad20 <.//openssl//file_jk/before\crypto\evp\e_aes.c:963:32, line:965:34> <scratch space>:290:1 invalid EVP_aes_256_cfb 'const int *(void)'
| `-CompoundStmt 0x16f6a8cadd8 <.//openssl//file_jk/before\crypto\evp\e_aes.c:964:51, line:965:34>
|-VarDecl 0x16f6a8cae00 <line:955:81, <scratch space>:296:1> col:1 invalid aes_256_cfb1 'const int' static
|-FunctionDecl 0x16f6a8cb2c8 <.//openssl//file_jk/before\crypto\evp\e_aes.c:963:32, line:965:34> <scratch space>:307:1 invalid EVP_aes_256_cfb1 'const int *(void)'
| `-CompoundStmt 0x16f6a8cb380 <.//openssl//file_jk/before\crypto\evp\e_aes.c:964:51, line:965:34>
|-VarDecl 0x16f6a8cb3a8 <line:955:81, <scratch space>:2:1> col:1 invalid aes_256_cfb8 'const int' static
|-FunctionDecl 0x16f6a8d5980 <.//openssl//file_jk/before\crypto\evp\e_aes.c:963:32, line:965:34> <scratch space>:13:1 invalid EVP_aes_256_cfb8 'const int *(void)'
| `-CompoundStmt 0x16f6a8d5a38 <.//openssl//file_jk/before\crypto\evp\e_aes.c:964:51, line:965:34>
|-VarDecl 0x16f6a8d5a60 <line:955:81, <scratch space>:19:1> col:1 invalid aes_256_ctr 'const int' static
|-FunctionDecl 0x16f6a8d5f28 <.//openssl//file_jk/before\crypto\evp\e_aes.c:963:32, line:965:34> <scratch space>:30:1 invalid EVP_aes_256_ctr 'const int *(void)'
| `-CompoundStmt 0x16f6a8d5fe0 <.//openssl//file_jk/before\crypto\evp\e_aes.c:964:51, line:965:34>
|-FunctionDecl 0x16f6a8d60d0 <line:1270:1, line:1279:1> line:1270:12 invalid aes_gcm_cleanup 'int (int *)' static
| |-ParmVarDecl 0x16f6a8d6008 <col:28, col:44> col:44 invalid c 'int *'
| `-CompoundStmt 0x16f6a8d6888 <line:1271:1, line:1279:1>
|   |-DeclStmt 0x16f6a8d62a0 <line:1272:5, col:58>
|   | `-VarDecl 0x16f6a8d6218 <col:5, col:22> col:22 used gctx 'EVP_AES_GCM_CTX *'
|   |-IfStmt 0x16f6a8d6400 <line:1273:5, line:1274:16>
|   | |-BinaryOperator 0x16f6a8d63a8 <line:1273:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x16f6a8d6378 <.//openssl//file_jk/before\crypto\evp\e_aes.c:1273:9> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x16f6a8d62b8 <col:9> 'EVP_AES_GCM_CTX *' lvalue Var 0x16f6a8d6218 'gctx' 'EVP_AES_GCM_CTX *'
|   | | `-ImplicitCastExpr 0x16f6a8d6390 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'EVP_AES_GCM_CTX *' <BitCast>
|   | |   `-ParenExpr 0x16f6a8d6358 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x16f6a8d6330 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x16f6a8d62f0 <col:26> 'int' 0
|   | `-ReturnStmt 0x16f6a8d63f0 <.//openssl//file_jk/before\crypto\evp\e_aes.c:1274:9, col:16>
|   |   `-IntegerLiteral 0x16f6a8d63c8 <col:16> 'int' 0
|   |-IfStmt 0x16f6a8d6838 <line:1276:5, line:1277:30>
|   | |-OpaqueValueExpr 0x16f6a8d6820 <<invalid sloc>> '_Bool'
|   | `-CallExpr 0x16f6a8d67e0 <col:9, col:30> 'int'
|   |   |-ImplicitCastExpr 0x16f6a8d67c8 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x16f6a8d6710 <col:9> 'int ()' Function 0x16f6a8d6648 'OPENSSL_free' 'int ()'
|   |   `-ImplicitCastExpr 0x16f6a8d6808 <col:22, col:28> 'unsigned char *' <LValueToRValue>
|   |     `-MemberExpr 0x16f6a8d6768 <col:22, col:28> 'unsigned char *' lvalue ->iv 0x16f6a915430
|   |       `-ImplicitCastExpr 0x16f6a8d6750 <col:22> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|   |         `-DeclRefExpr 0x16f6a8d6730 <col:22> 'EVP_AES_GCM_CTX *' lvalue Var 0x16f6a8d6218 'gctx' 'EVP_AES_GCM_CTX *'
|   `-ReturnStmt 0x16f6a8d6878 <line:1278:5, col:12>
|     `-IntegerLiteral 0x16f6a8d6850 <col:12> 'int' 1
|-FunctionDecl 0x16f6a8d39a8 <line:1282:1, line:1295:1> line:1282:13 used ctr64_inc 'void (unsigned char *)' static
| |-ParmVarDecl 0x16f6a8d38d0 <col:23, col:38> col:38 used counter 'unsigned char *'
| `-CompoundStmt 0x16f6a8d3f20 <line:1283:1, line:1295:1>
|   |-DeclStmt 0x16f6a8d3b10 <line:1284:5, col:14>
|   | `-VarDecl 0x16f6a8d3a80 <col:5, col:13> col:9 used n 'int' cinit
|   |   `-IntegerLiteral 0x16f6a8d3ae8 <col:13> 'int' 8
|   |-DeclStmt 0x16f6a8d3ba8 <line:1285:5, col:20>
|   | `-VarDecl 0x16f6a8d3b40 <col:5, col:19> col:19 used c 'unsigned char'
|   `-DoStmt 0x16f6a8d3f00 <line:1287:5, line:1294:15>
|     |-CompoundStmt 0x16f6a8d3e90 <line:1287:8, line:1294:5>
|     | |-UnaryOperator 0x16f6a8d3bf8 <line:1288:9, col:11> 'int' prefix '--'
|     | | `-DeclRefExpr 0x16f6a8d3bc0 <col:11> 'int' lvalue Var 0x16f6a8d3a80 'n' 'int'
|     | |-BinaryOperator 0x16f6a8d3cf0 <line:1289:9, col:22> 'unsigned char' '='
|     | | |-DeclRefExpr 0x16f6a8d3c10 <col:9> 'unsigned char' lvalue Var 0x16f6a8d3b40 'c' 'unsigned char'
|     | | `-ImplicitCastExpr 0x16f6a8d3cd8 <col:13, col:22> 'unsigned char' <LValueToRValue>
|     | |   `-ArraySubscriptExpr 0x16f6a8d3cb8 <col:13, col:22> 'unsigned char' lvalue
|     | |     |-ImplicitCastExpr 0x16f6a8d3c88 <col:13> 'unsigned char *' <LValueToRValue>
|     | |     | `-DeclRefExpr 0x16f6a8d3c48 <col:13> 'unsigned char *' lvalue ParmVar 0x16f6a8d38d0 'counter' 'unsigned char *'
|     | |     `-ImplicitCastExpr 0x16f6a8d3ca0 <col:21> 'int' <LValueToRValue>
|     | |       `-DeclRefExpr 0x16f6a8d3c68 <col:21> 'int' lvalue Var 0x16f6a8d3a80 'n' 'int'
|     | |-UnaryOperator 0x16f6a8d3d30 <line:1290:9, col:11> 'unsigned char' prefix '++' cannot overflow
|     | | `-DeclRefExpr 0x16f6a8d3d10 <col:11> 'unsigned char' lvalue Var 0x16f6a8d3b40 'c' 'unsigned char'
|     | |-BinaryOperator 0x16f6a8d3e10 <line:1291:9, col:22> 'unsigned char' '='
|     | | |-ArraySubscriptExpr 0x16f6a8d3db8 <col:9, col:18> 'unsigned char' lvalue
|     | | | |-ImplicitCastExpr 0x16f6a8d3d88 <col:9> 'unsigned char *' <LValueToRValue>
|     | | | | `-DeclRefExpr 0x16f6a8d3d48 <col:9> 'unsigned char *' lvalue ParmVar 0x16f6a8d38d0 'counter' 'unsigned char *'
|     | | | `-ImplicitCastExpr 0x16f6a8d3da0 <col:17> 'int' <LValueToRValue>
|     | | |   `-DeclRefExpr 0x16f6a8d3d68 <col:17> 'int' lvalue Var 0x16f6a8d3a80 'n' 'int'
|     | | `-ImplicitCastExpr 0x16f6a8d3df8 <col:22> 'unsigned char' <LValueToRValue>
|     | |   `-DeclRefExpr 0x16f6a8d3dd8 <col:22> 'unsigned char' lvalue Var 0x16f6a8d3b40 'c' 'unsigned char'
|     | `-IfStmt 0x16f6a8d3e78 <line:1292:9, line:1293:13>
|     |   |-ImplicitCastExpr 0x16f6a8d3e50 <line:1292:13> 'unsigned char' <LValueToRValue>
|     |   | `-DeclRefExpr 0x16f6a8d3e30 <col:13> 'unsigned char' lvalue Var 0x16f6a8d3b40 'c' 'unsigned char'
|     |   `-ReturnStmt 0x16f6a8d3e68 <line:1293:13>
|     `-ImplicitCastExpr 0x16f6a8d3ee8 <line:1294:14> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x16f6a8d3ec8 <col:14> 'int' lvalue Var 0x16f6a8d3a80 'n' 'int'
|-FunctionDecl 0x16f6a8d41e0 <line:1297:1, line:1434:1> line:1297:12 invalid aes_gcm_ctrl 'int (int *, int, int, void *)' static
| |-ParmVarDecl 0x16f6a8d3f60 <col:25, col:41> col:41 invalid c 'int *'
| |-ParmVarDecl 0x16f6a8d3fe0 <col:44, col:48> col:48 used type 'int'
| |-ParmVarDecl 0x16f6a8d4060 <col:54, col:58> col:58 used arg 'int'
| |-ParmVarDecl 0x16f6a8d40e0 <col:63, col:69> col:69 used ptr 'void *'
| `-CompoundStmt 0x16f6a8dde48 <line:1298:1, line:1434:1>
|   |-DeclStmt 0x16f6a8d4350 <line:1299:5, col:58>
|   | `-VarDecl 0x16f6a8d42c8 <col:5, col:22> col:22 used gctx 'EVP_AES_GCM_CTX *'
|   `-SwitchStmt 0x16f6a8d43b8 <line:1300:5, line:1433:5>
|     |-ImplicitCastExpr 0x16f6a8d43a0 <line:1300:13> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x16f6a8d4368 <col:13> 'int' lvalue ParmVar 0x16f6a8d3fe0 'type' 'int'
|     `-CompoundStmt 0x16f6a8ddd18 <col:19, line:1433:5>
|       |-BinaryOperator 0x16f6a8d4480 <line:1302:9, col:25> 'int' '='
|       | |-MemberExpr 0x16f6a8d4428 <col:9, col:15> 'int' lvalue ->key_set 0x16f6a9152b8
|       | | `-ImplicitCastExpr 0x16f6a8d4410 <col:9> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x16f6a8d43d8 <col:9> 'EVP_AES_GCM_CTX *' lvalue Var 0x16f6a8d42c8 'gctx' 'EVP_AES_GCM_CTX *'
|       | `-IntegerLiteral 0x16f6a8d4458 <col:25> 'int' 0
|       |-BinaryOperator 0x16f6a8d4530 <line:1303:9, col:24> 'int' '='
|       | |-MemberExpr 0x16f6a8d44d8 <col:9, col:15> 'int' lvalue ->iv_set 0x16f6a915328
|       | | `-ImplicitCastExpr 0x16f6a8d44c0 <col:9> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x16f6a8d44a0 <col:9> 'EVP_AES_GCM_CTX *' lvalue Var 0x16f6a8d42c8 'gctx' 'EVP_AES_GCM_CTX *'
|       | `-IntegerLiteral 0x16f6a8d4508 <col:24> 'int' 0
|       |-BinaryOperator 0x16f6a8d47f8 <line:1306:9, col:25> 'int' '='
|       | |-MemberExpr 0x16f6a8d4788 <col:9, col:15> 'int' lvalue ->taglen 0x16f6a915510
|       | | `-ImplicitCastExpr 0x16f6a8d4770 <col:9> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x16f6a8d4750 <col:9> 'EVP_AES_GCM_CTX *' lvalue Var 0x16f6a8d42c8 'gctx' 'EVP_AES_GCM_CTX *'
|       | `-UnaryOperator 0x16f6a8d47e0 <col:24, col:25> 'int' prefix '-'
|       |   `-IntegerLiteral 0x16f6a8d47b8 <col:25> 'int' 1
|       |-BinaryOperator 0x16f6a8d48a8 <line:1307:9, col:24> 'int' '='
|       | |-MemberExpr 0x16f6a8d4850 <col:9, col:15> 'int' lvalue ->iv_gen 0x16f6a915580
|       | | `-ImplicitCastExpr 0x16f6a8d4838 <col:9> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x16f6a8d4818 <col:9> 'EVP_AES_GCM_CTX *' lvalue Var 0x16f6a8d42c8 'gctx' 'EVP_AES_GCM_CTX *'
|       | `-IntegerLiteral 0x16f6a8d4880 <col:24> 'int' 0
|       |-BinaryOperator 0x16f6a8d4988 <line:1308:9, col:30> 'int' '='
|       | |-MemberExpr 0x16f6a8d4918 <col:9, col:15> 'int' lvalue ->tls_aad_len 0x16f6a9155f0
|       | | `-ImplicitCastExpr 0x16f6a8d4900 <col:9> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x16f6a8d48e0 <col:9> 'EVP_AES_GCM_CTX *' lvalue Var 0x16f6a8d42c8 'gctx' 'EVP_AES_GCM_CTX *'
|       | `-UnaryOperator 0x16f6a8d4970 <col:29, col:30> 'int' prefix '-'
|       |   `-IntegerLiteral 0x16f6a8d4948 <col:30> 'int' 1
|       |-ReturnStmt 0x16f6a8d49d0 <line:1309:9, col:16>
|       | `-IntegerLiteral 0x16f6a8d49a8 <col:16> 'int' 1
|       |-IfStmt 0x16f6a8d4ab0 <line:1312:9, line:1313:20>
|       | |-BinaryOperator 0x16f6a8d4a58 <line:1312:13, col:20> 'int' '<='
|       | | |-ImplicitCastExpr 0x16f6a8d4a40 <col:13> 'int' <LValueToRValue>
|       | | | `-DeclRefExpr 0x16f6a8d49e0 <col:13> 'int' lvalue ParmVar 0x16f6a8d4060 'arg' 'int'
|       | | `-IntegerLiteral 0x16f6a8d4a18 <col:20> 'int' 0
|       | `-ReturnStmt 0x16f6a8d4aa0 <line:1313:13, col:20>
|       |   `-IntegerLiteral 0x16f6a8d4a78 <col:20> 'int' 0
|       |-IfStmt 0x16f6a8d5170 <line:1315:9, line:1321:9>
|       | |-OpaqueValueExpr 0x16f6a8d5158 <<invalid sloc>> '_Bool'
|       | `-CompoundStmt 0x16f6a8d5130 <line:1315:63, line:1321:9>
|       |   |-IfStmt 0x16f6a8d4d60 <line:1316:13, line:1317:38>
|       |   | |-OpaqueValueExpr 0x16f6a8d4d48 <<invalid sloc>> '_Bool'
|       |   | `-CallExpr 0x16f6a8d4d08 <col:17, col:38> 'int'
|       |   |   |-ImplicitCastExpr 0x16f6a8d4cf0 <col:17> 'int (*)()' <FunctionToPointerDecay>
|       |   |   | `-DeclRefExpr 0x16f6a8d4c68 <col:17> 'int ()' Function 0x16f6a8d6648 'OPENSSL_free' 'int ()'
|       |   |   `-ImplicitCastExpr 0x16f6a8d4d30 <col:30, col:36> 'unsigned char *' <LValueToRValue>
|       |   |     `-MemberExpr 0x16f6a8d4cc0 <col:30, col:36> 'unsigned char *' lvalue ->iv 0x16f6a915430
|       |   |       `-ImplicitCastExpr 0x16f6a8d4ca8 <col:30> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       |   |         `-DeclRefExpr 0x16f6a8d4c88 <col:30> 'EVP_AES_GCM_CTX *' lvalue Var 0x16f6a8d42c8 'gctx' 'EVP_AES_GCM_CTX *'
|       |   |-BinaryOperator 0x16f6a8d4f80 <line:1318:13, col:42> 'unsigned char *' '='
|       |   | |-MemberExpr 0x16f6a8d4db0 <col:13, col:19> 'unsigned char *' lvalue ->iv 0x16f6a915430
|       |   | | `-ImplicitCastExpr 0x16f6a8d4d98 <col:13> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       |   | |   `-DeclRefExpr 0x16f6a8d4d78 <col:13> 'EVP_AES_GCM_CTX *' lvalue Var 0x16f6a8d42c8 'gctx' 'EVP_AES_GCM_CTX *'
|       |   | `-ImplicitCastExpr 0x16f6a8d4f68 <col:24, col:42> 'unsigned char *' <IntegralToPointer>
|       |   |   `-CallExpr 0x16f6a8d4f28 <col:24, col:42> 'int'
|       |   |     |-ImplicitCastExpr 0x16f6a8d4f10 <col:24> 'int (*)()' <FunctionToPointerDecay>
|       |   |     | `-DeclRefExpr 0x16f6a8d4ed0 <col:24> 'int ()' Function 0x16f6a8d4e08 'OPENSSL_malloc' 'int ()'
|       |   |     `-ImplicitCastExpr 0x16f6a8d4f50 <col:39> 'int' <LValueToRValue>
|       |   |       `-DeclRefExpr 0x16f6a8d4ef0 <col:39> 'int' lvalue ParmVar 0x16f6a8d4060 'arg' 'int'
|       |   `-IfStmt 0x16f6a8d5118 <line:1319:13, line:1320:24>
|       |     |-BinaryOperator 0x16f6a8d50c0 <line:1319:17, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|       |     | |-ImplicitCastExpr 0x16f6a8d5090 <.//openssl//file_jk/before\crypto\evp\e_aes.c:1319:17, col:23> 'unsigned char *' <LValueToRValue>
|       |     | | `-MemberExpr 0x16f6a8d4fd8 <col:17, col:23> 'unsigned char *' lvalue ->iv 0x16f6a915430
|       |     | |   `-ImplicitCastExpr 0x16f6a8d4fc0 <col:17> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       |     | |     `-DeclRefExpr 0x16f6a8d4fa0 <col:17> 'EVP_AES_GCM_CTX *' lvalue Var 0x16f6a8d42c8 'gctx' 'EVP_AES_GCM_CTX *'
|       |     | `-ImplicitCastExpr 0x16f6a8d50a8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'unsigned char *' <BitCast>
|       |     |   `-ParenExpr 0x16f6a8d5070 <col:17, col:27> 'void *'
|       |     |     `-CStyleCastExpr 0x16f6a8d5048 <col:18, col:26> 'void *' <NullToPointer>
|       |     |       `-IntegerLiteral 0x16f6a8d5008 <col:26> 'int' 0
|       |     `-ReturnStmt 0x16f6a8d5108 <.//openssl//file_jk/before\crypto\evp\e_aes.c:1320:17, col:24>
|       |       `-IntegerLiteral 0x16f6a8d50e0 <col:24> 'int' 0
|       |-BinaryOperator 0x16f6a8d5228 <line:1322:9, col:23> 'int' '='
|       | |-MemberExpr 0x16f6a8d51c0 <col:9, col:15> 'int' lvalue ->ivlen 0x16f6a9154a0
|       | | `-ImplicitCastExpr 0x16f6a8d51a8 <col:9> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x16f6a8d5188 <col:9> 'EVP_AES_GCM_CTX *' lvalue Var 0x16f6a8d42c8 'gctx' 'EVP_AES_GCM_CTX *'
|       | `-ImplicitCastExpr 0x16f6a8d5210 <col:23> 'int' <LValueToRValue>
|       |   `-DeclRefExpr 0x16f6a8d51f0 <col:23> 'int' lvalue ParmVar 0x16f6a8d4060 'arg' 'int'
|       |-ReturnStmt 0x16f6a8d5270 <line:1323:9, col:16>
|       | `-IntegerLiteral 0x16f6a8d5248 <col:16> 'int' 1
|       |-IfStmt 0x16f6a8d5410 <line:1326:9, line:1327:20>
|       | |-OpaqueValueExpr 0x16f6a8d53f8 <<invalid sloc>> '_Bool'
|       | `-ReturnStmt 0x16f6a8d53e8 <col:13, col:20>
|       |   `-IntegerLiteral 0x16f6a8d53c0 <col:20> 'int' 0
|       |-BinaryOperator 0x16f6a8d5560 <line:1329:9, col:24> 'int' '='
|       | |-MemberExpr 0x16f6a8d54f8 <col:9, col:15> 'int' lvalue ->taglen 0x16f6a915510
|       | | `-ImplicitCastExpr 0x16f6a8d54e0 <col:9> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x16f6a8d54c0 <col:9> 'EVP_AES_GCM_CTX *' lvalue Var 0x16f6a8d42c8 'gctx' 'EVP_AES_GCM_CTX *'
|       | `-ImplicitCastExpr 0x16f6a8d5548 <col:24> 'int' <LValueToRValue>
|       |   `-DeclRefExpr 0x16f6a8d5528 <col:24> 'int' lvalue ParmVar 0x16f6a8d4060 'arg' 'int'
|       |-ReturnStmt 0x16f6a8d55a8 <line:1330:9, col:16>
|       | `-IntegerLiteral 0x16f6a8d5580 <col:16> 'int' 1
|       |-IfStmt 0x16f6a8d5810 <line:1333:9, line:1335:20>
|       | |-OpaqueValueExpr 0x16f6a8d57f8 <<invalid sloc>> '_Bool'
|       | `-ReturnStmt 0x16f6a8d57e8 <col:13, col:20>
|       |   `-IntegerLiteral 0x16f6a8d57c0 <col:20> 'int' 0
|       |-ReturnStmt 0x16f6a8d58d0 <line:1337:9, col:16>
|       | `-IntegerLiteral 0x16f6a8d58a8 <col:16> 'int' 1
|       |-IfStmt 0x16f6a8cec88 <line:1341:9, line:1345:9>
|       | |-BinaryOperator 0x16f6a8ce8f8 <line:1341:13, col:21> 'int' '=='
|       | | |-ImplicitCastExpr 0x16f6a8ce8e0 <col:13> 'int' <LValueToRValue>
|       | | | `-DeclRefExpr 0x16f6a8ce880 <col:13> 'int' lvalue ParmVar 0x16f6a8d4060 'arg' 'int'
|       | | `-UnaryOperator 0x16f6a8ce8c8 <col:20, col:21> 'int' prefix '-'
|       | |   `-IntegerLiteral 0x16f6a8ce8a0 <col:21> 'int' 1
|       | `-CompoundStmt 0x16f6a8cec60 <col:24, line:1345:9>
|       |   |-CallExpr 0x16f6a8ceab0 <line:1342:13, col:46> 'void *'
|       |   | |-ImplicitCastExpr 0x16f6a8cea98 <col:13> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|       |   | | `-DeclRefExpr 0x16f6a8ce918 <col:13> 'void *(void *, const void *, unsigned long long)' Function 0x16f6a880a58 'memcpy' 'void *(void *, const void *, unsigned long long)'
|       |   | |-ImplicitCastExpr 0x16f6a8ceb00 <col:20, col:26> 'void *' <BitCast>
|       |   | | `-ImplicitCastExpr 0x16f6a8ceae8 <col:20, col:26> 'unsigned char *' <LValueToRValue>
|       |   | |   `-MemberExpr 0x16f6a8ce970 <col:20, col:26> 'unsigned char *' lvalue ->iv 0x16f6a915430
|       |   | |     `-ImplicitCastExpr 0x16f6a8ce958 <col:20> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       |   | |       `-DeclRefExpr 0x16f6a8ce938 <col:20> 'EVP_AES_GCM_CTX *' lvalue Var 0x16f6a8d42c8 'gctx' 'EVP_AES_GCM_CTX *'
|       |   | |-ImplicitCastExpr 0x16f6a8ceb30 <col:30> 'const void *' <NoOp>
|       |   | | `-ImplicitCastExpr 0x16f6a8ceb18 <col:30> 'void *' <LValueToRValue>
|       |   | |   `-DeclRefExpr 0x16f6a8ce9a0 <col:30> 'void *' lvalue ParmVar 0x16f6a8d40e0 'ptr' 'void *'
|       |   | `-ImplicitCastExpr 0x16f6a8ceb60 <col:35, col:41> 'unsigned long long' <IntegralCast>
|       |   |   `-ImplicitCastExpr 0x16f6a8ceb48 <col:35, col:41> 'int' <LValueToRValue>
|       |   |     `-MemberExpr 0x16f6a8ce9f8 <col:35, col:41> 'int' lvalue ->ivlen 0x16f6a9154a0
|       |   |       `-ImplicitCastExpr 0x16f6a8ce9e0 <col:35> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       |   |         `-DeclRefExpr 0x16f6a8ce9c0 <col:35> 'EVP_AES_GCM_CTX *' lvalue Var 0x16f6a8d42c8 'gctx' 'EVP_AES_GCM_CTX *'
|       |   |-BinaryOperator 0x16f6a8cec08 <line:1343:13, col:28> 'int' '='
|       |   | |-MemberExpr 0x16f6a8cebb0 <col:13, col:19> 'int' lvalue ->iv_gen 0x16f6a915580
|       |   | | `-ImplicitCastExpr 0x16f6a8ceb98 <col:13> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       |   | |   `-DeclRefExpr 0x16f6a8ceb78 <col:13> 'EVP_AES_GCM_CTX *' lvalue Var 0x16f6a8d42c8 'gctx' 'EVP_AES_GCM_CTX *'
|       |   | `-IntegerLiteral 0x16f6a8cebe0 <col:28> 'int' 1
|       |   `-ReturnStmt 0x16f6a8cec50 <line:1344:13, col:20>
|       |     `-IntegerLiteral 0x16f6a8cec28 <col:20> 'int' 1
|       |-IfStmt 0x16f6a8ceed8 <line:1350:9, line:1351:20>
|       | |-BinaryOperator 0x16f6a8cee80 <line:1350:13, col:48> 'int' '||'
|       | | |-ParenExpr 0x16f6a8ced20 <col:13, col:21> 'int'
|       | | | `-BinaryOperator 0x16f6a8ced00 <col:14, col:20> 'int' '<'
|       | | |   |-ImplicitCastExpr 0x16f6a8cece8 <col:14> 'int' <LValueToRValue>
|       | | |   | `-DeclRefExpr 0x16f6a8ceca0 <col:14> 'int' lvalue ParmVar 0x16f6a8d4060 'arg' 'int'
|       | | |   `-IntegerLiteral 0x16f6a8cecc0 <col:20> 'int' 4
|       | | `-BinaryOperator 0x16f6a8cee60 <col:26, col:48> 'int' '<'
|       | |   |-ParenExpr 0x16f6a8cee18 <col:26, col:44> 'int'
|       | |   | `-BinaryOperator 0x16f6a8cedf8 <col:27, col:41> 'int' '-'
|       | |   |   |-ImplicitCastExpr 0x16f6a8cedc8 <col:27, col:33> 'int' <LValueToRValue>
|       | |   |   | `-MemberExpr 0x16f6a8ced78 <col:27, col:33> 'int' lvalue ->ivlen 0x16f6a9154a0
|       | |   |   |   `-ImplicitCastExpr 0x16f6a8ced60 <col:27> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |   |   |     `-DeclRefExpr 0x16f6a8ced40 <col:27> 'EVP_AES_GCM_CTX *' lvalue Var 0x16f6a8d42c8 'gctx' 'EVP_AES_GCM_CTX *'
|       | |   |   `-ImplicitCastExpr 0x16f6a8cede0 <col:41> 'int' <LValueToRValue>
|       | |   |     `-DeclRefExpr 0x16f6a8ceda8 <col:41> 'int' lvalue ParmVar 0x16f6a8d4060 'arg' 'int'
|       | |   `-IntegerLiteral 0x16f6a8cee38 <col:48> 'int' 8
|       | `-ReturnStmt 0x16f6a8ceec8 <line:1351:13, col:20>
|       |   `-IntegerLiteral 0x16f6a8ceea0 <col:20> 'int' 0
|       |-IfStmt 0x16f6a8cf118 <line:1352:9, line:1353:38>
|       | |-ImplicitCastExpr 0x16f6a8cef10 <line:1352:13> 'int' <LValueToRValue>
|       | | `-DeclRefExpr 0x16f6a8ceef0 <col:13> 'int' lvalue ParmVar 0x16f6a8d4060 'arg' 'int'
|       | `-CallExpr 0x16f6a8cf050 <line:1353:13, col:38> 'void *'
|       |   |-ImplicitCastExpr 0x16f6a8cf038 <col:13> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x16f6a8cef28 <col:13> 'void *(void *, const void *, unsigned long long)' Function 0x16f6a880a58 'memcpy' 'void *(void *, const void *, unsigned long long)'
|       |   |-ImplicitCastExpr 0x16f6a8cf0a0 <col:20, col:26> 'void *' <BitCast>
|       |   | `-ImplicitCastExpr 0x16f6a8cf088 <col:20, col:26> 'unsigned char *' <LValueToRValue>
|       |   |   `-MemberExpr 0x16f6a8cef80 <col:20, col:26> 'unsigned char *' lvalue ->iv 0x16f6a915430
|       |   |     `-ImplicitCastExpr 0x16f6a8cef68 <col:20> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       |   |       `-DeclRefExpr 0x16f6a8cef48 <col:20> 'EVP_AES_GCM_CTX *' lvalue Var 0x16f6a8d42c8 'gctx' 'EVP_AES_GCM_CTX *'
|       |   |-ImplicitCastExpr 0x16f6a8cf0d0 <col:30> 'const void *' <NoOp>
|       |   | `-ImplicitCastExpr 0x16f6a8cf0b8 <col:30> 'void *' <LValueToRValue>
|       |   |   `-DeclRefExpr 0x16f6a8cefb0 <col:30> 'void *' lvalue ParmVar 0x16f6a8d40e0 'ptr' 'void *'
|       |   `-ImplicitCastExpr 0x16f6a8cf100 <col:35> 'unsigned long long' <IntegralCast>
|       |     `-ImplicitCastExpr 0x16f6a8cf0e8 <col:35> 'int' <LValueToRValue>
|       |       `-DeclRefExpr 0x16f6a8cefd0 <col:35> 'int' lvalue ParmVar 0x16f6a8d4060 'arg' 'int'
|       |-IfStmt 0x16f6a8cf4f0 <line:1354:9, line:1356:20>
|       | |-OpaqueValueExpr 0x16f6a8cf4d8 <<invalid sloc>> '_Bool'
|       | `-ReturnStmt 0x16f6a8cf4c8 <col:13, col:20>
|       |   `-IntegerLiteral 0x16f6a8cf4a0 <col:20> 'int' 0
|       |-BinaryOperator 0x16f6a8cf598 <line:1357:9, col:24> 'int' '='
|       | |-MemberExpr 0x16f6a8cf540 <col:9, col:15> 'int' lvalue ->iv_gen 0x16f6a915580
|       | | `-ImplicitCastExpr 0x16f6a8cf528 <col:9> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x16f6a8cf508 <col:9> 'EVP_AES_GCM_CTX *' lvalue Var 0x16f6a8d42c8 'gctx' 'EVP_AES_GCM_CTX *'
|       | `-IntegerLiteral 0x16f6a8cf570 <col:24> 'int' 1
|       |-ReturnStmt 0x16f6a8cf5e0 <line:1358:9, col:16>
|       | `-IntegerLiteral 0x16f6a8cf5b8 <col:16> 'int' 1
|       |-IfStmt 0x16f6a8cf7d8 <line:1361:9, line:1362:20>
|       | |-BinaryOperator 0x16f6a8cf780 <line:1361:13, col:51> 'int' '||'
|       | | |-BinaryOperator 0x16f6a8cf698 <col:13, col:29> 'int' '=='
|       | | | |-ImplicitCastExpr 0x16f6a8cf680 <col:13, col:19> 'int' <LValueToRValue>
|       | | | | `-MemberExpr 0x16f6a8cf628 <col:13, col:19> 'int' lvalue ->iv_gen 0x16f6a915580
|       | | | |   `-ImplicitCastExpr 0x16f6a8cf610 <col:13> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | | | |     `-DeclRefExpr 0x16f6a8cf5f0 <col:13> 'EVP_AES_GCM_CTX *' lvalue Var 0x16f6a8d42c8 'gctx' 'EVP_AES_GCM_CTX *'
|       | | | `-IntegerLiteral 0x16f6a8cf658 <col:29> 'int' 0
|       | | `-BinaryOperator 0x16f6a8cf760 <col:34, col:51> 'int' '=='
|       | |   |-ImplicitCastExpr 0x16f6a8cf748 <col:34, col:40> 'int' <LValueToRValue>
|       | |   | `-MemberExpr 0x16f6a8cf6f0 <col:34, col:40> 'int' lvalue ->key_set 0x16f6a9152b8
|       | |   |   `-ImplicitCastExpr 0x16f6a8cf6d8 <col:34> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |   |     `-DeclRefExpr 0x16f6a8cf6b8 <col:34> 'EVP_AES_GCM_CTX *' lvalue Var 0x16f6a8d42c8 'gctx' 'EVP_AES_GCM_CTX *'
|       | |   `-IntegerLiteral 0x16f6a8cf720 <col:51> 'int' 0
|       | `-ReturnStmt 0x16f6a8cf7c8 <line:1362:13, col:20>
|       |   `-IntegerLiteral 0x16f6a8cf7a0 <col:20> 'int' 0
|       |-IfStmt 0x16f6a8d6d28 <line:1364:9, line:1365:25>
|       | |-BinaryOperator 0x16f6a8d6c48 <line:1364:13, col:37> 'int' '||'
|       | | |-BinaryOperator 0x16f6a8d6b50 <col:13, col:20> 'int' '<='
|       | | | |-ImplicitCastExpr 0x16f6a8d6b38 <col:13> 'int' <LValueToRValue>
|       | | | | `-DeclRefExpr 0x16f6a8d6af0 <col:13> 'int' lvalue ParmVar 0x16f6a8d4060 'arg' 'int'
|       | | | `-IntegerLiteral 0x16f6a8d6b10 <col:20> 'int' 0
|       | | `-BinaryOperator 0x16f6a8d6c28 <col:25, col:37> 'int' '>'
|       | |   |-ImplicitCastExpr 0x16f6a8d6bf8 <col:25> 'int' <LValueToRValue>
|       | |   | `-DeclRefExpr 0x16f6a8d6b70 <col:25> 'int' lvalue ParmVar 0x16f6a8d4060 'arg' 'int'
|       | |   `-ImplicitCastExpr 0x16f6a8d6c10 <col:31, col:37> 'int' <LValueToRValue>
|       | |     `-MemberExpr 0x16f6a8d6bc8 <col:31, col:37> 'int' lvalue ->ivlen 0x16f6a9154a0
|       | |       `-ImplicitCastExpr 0x16f6a8d6bb0 <col:31> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |         `-DeclRefExpr 0x16f6a8d6b90 <col:31> 'EVP_AES_GCM_CTX *' lvalue Var 0x16f6a8d42c8 'gctx' 'EVP_AES_GCM_CTX *'
|       | `-BinaryOperator 0x16f6a8d6d08 <line:1365:13, col:25> 'int' '='
|       |   |-DeclRefExpr 0x16f6a8d6c68 <col:13> 'int' lvalue ParmVar 0x16f6a8d4060 'arg' 'int'
|       |   `-ImplicitCastExpr 0x16f6a8d6cf0 <col:19, col:25> 'int' <LValueToRValue>
|       |     `-MemberExpr 0x16f6a8d6cc0 <col:19, col:25> 'int' lvalue ->ivlen 0x16f6a9154a0
|       |       `-ImplicitCastExpr 0x16f6a8d6ca8 <col:19> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       |         `-DeclRefExpr 0x16f6a8d6c88 <col:19> 'EVP_AES_GCM_CTX *' lvalue Var 0x16f6a8d42c8 'gctx' 'EVP_AES_GCM_CTX *'
|       |-CallExpr 0x16f6a8d6f60 <line:1366:9, col:54> 'void *'
|       | |-ImplicitCastExpr 0x16f6a8d6f48 <col:9> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|       | | `-DeclRefExpr 0x16f6a8d6d40 <col:9> 'void *(void *, const void *, unsigned long long)' Function 0x16f6a880a58 'memcpy' 'void *(void *, const void *, unsigned long long)'
|       | |-ImplicitCastExpr 0x16f6a8d6f98 <col:16> 'void *' <LValueToRValue>
|       | | `-DeclRefExpr 0x16f6a8d6d60 <col:16> 'void *' lvalue ParmVar 0x16f6a8d40e0 'ptr' 'void *'
|       | |-ImplicitCastExpr 0x16f6a8d6fb0 <col:21, col:46> 'const void *' <BitCast>
|       | | `-BinaryOperator 0x16f6a8d6ed8 <col:21, col:46> 'unsigned char *' '-'
|       | |   |-BinaryOperator 0x16f6a8d6e80 <col:21, col:38> 'unsigned char *' '+'
|       | |   | |-ImplicitCastExpr 0x16f6a8d6e50 <col:21, col:27> 'unsigned char *' <LValueToRValue>
|       | |   | | `-MemberExpr 0x16f6a8d6db8 <col:21, col:27> 'unsigned char *' lvalue ->iv 0x16f6a915430
|       | |   | |   `-ImplicitCastExpr 0x16f6a8d6da0 <col:21> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |   | |     `-DeclRefExpr 0x16f6a8d6d80 <col:21> 'EVP_AES_GCM_CTX *' lvalue Var 0x16f6a8d42c8 'gctx' 'EVP_AES_GCM_CTX *'
|       | |   | `-ImplicitCastExpr 0x16f6a8d6e68 <col:32, col:38> 'int' <LValueToRValue>
|       | |   |   `-MemberExpr 0x16f6a8d6e20 <col:32, col:38> 'int' lvalue ->ivlen 0x16f6a9154a0
|       | |   |     `-ImplicitCastExpr 0x16f6a8d6e08 <col:32> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |   |       `-DeclRefExpr 0x16f6a8d6de8 <col:32> 'EVP_AES_GCM_CTX *' lvalue Var 0x16f6a8d42c8 'gctx' 'EVP_AES_GCM_CTX *'
|       | |   `-ImplicitCastExpr 0x16f6a8d6ec0 <col:46> 'int' <LValueToRValue>
|       | |     `-DeclRefExpr 0x16f6a8d6ea0 <col:46> 'int' lvalue ParmVar 0x16f6a8d4060 'arg' 'int'
|       | `-ImplicitCastExpr 0x16f6a8d6fe0 <col:51> 'unsigned long long' <IntegralCast>
|       |   `-ImplicitCastExpr 0x16f6a8d6fc8 <col:51> 'int' <LValueToRValue>
|       |     `-DeclRefExpr 0x16f6a8d6ef8 <col:51> 'int' lvalue ParmVar 0x16f6a8d4060 'arg' 'int'
|       |-CallExpr 0x16f6a8d71c0 <line:1371:9, col:45> 'void'
|       | |-ImplicitCastExpr 0x16f6a8d71a8 <col:9> 'void (*)(unsigned char *)' <FunctionToPointerDecay>
|       | | `-DeclRefExpr 0x16f6a8d6ff8 <col:9> 'void (unsigned char *)' Function 0x16f6a8d39a8 'ctr64_inc' 'void (unsigned char *)'
|       | `-BinaryOperator 0x16f6a8d7160 <col:19, col:44> 'unsigned char *' '-'
|       |   |-BinaryOperator 0x16f6a8d7118 <col:19, col:36> 'unsigned char *' '+'
|       |   | |-ImplicitCastExpr 0x16f6a8d70e8 <col:19, col:25> 'unsigned char *' <LValueToRValue>
|       |   | | `-MemberExpr 0x16f6a8d7050 <col:19, col:25> 'unsigned char *' lvalue ->iv 0x16f6a915430
|       |   | |   `-ImplicitCastExpr 0x16f6a8d7038 <col:19> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       |   | |     `-DeclRefExpr 0x16f6a8d7018 <col:19> 'EVP_AES_GCM_CTX *' lvalue Var 0x16f6a8d42c8 'gctx' 'EVP_AES_GCM_CTX *'
|       |   | `-ImplicitCastExpr 0x16f6a8d7100 <col:30, col:36> 'int' <LValueToRValue>
|       |   |   `-MemberExpr 0x16f6a8d70b8 <col:30, col:36> 'int' lvalue ->ivlen 0x16f6a9154a0
|       |   |     `-ImplicitCastExpr 0x16f6a8d70a0 <col:30> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       |   |       `-DeclRefExpr 0x16f6a8d7080 <col:30> 'EVP_AES_GCM_CTX *' lvalue Var 0x16f6a8d42c8 'gctx' 'EVP_AES_GCM_CTX *'
|       |   `-IntegerLiteral 0x16f6a8d7138 <col:44> 'int' 8
|       |-BinaryOperator 0x16f6a8d7278 <line:1372:9, col:24> 'int' '='
|       | |-MemberExpr 0x16f6a8d7220 <col:9, col:15> 'int' lvalue ->iv_set 0x16f6a915328
|       | | `-ImplicitCastExpr 0x16f6a8d7208 <col:9> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x16f6a8d71e8 <col:9> 'EVP_AES_GCM_CTX *' lvalue Var 0x16f6a8d42c8 'gctx' 'EVP_AES_GCM_CTX *'
|       | `-IntegerLiteral 0x16f6a8d7250 <col:24> 'int' 1
|       |-ReturnStmt 0x16f6a8d72c0 <line:1373:9, col:16>
|       | `-IntegerLiteral 0x16f6a8d7298 <col:16> 'int' 1
|       |-IfStmt 0x16f6a8d74f0 <line:1376:9, line:1378:20>
|       | |-OpaqueValueExpr 0x16f6a8d74d8 <<invalid sloc>> '_Bool'
|       | `-ReturnStmt 0x16f6a8d74c8 <col:13, col:20>
|       |   `-IntegerLiteral 0x16f6a8d74a0 <col:20> 'int' 0
|       |-CallExpr 0x16f6a8d7728 <line:1379:9, col:54> 'void *'
|       | |-ImplicitCastExpr 0x16f6a8d7710 <col:9> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|       | | `-DeclRefExpr 0x16f6a8d7508 <col:9> 'void *(void *, const void *, unsigned long long)' Function 0x16f6a880a58 'memcpy' 'void *(void *, const void *, unsigned long long)'
|       | |-ImplicitCastExpr 0x16f6a8d7760 <col:16, col:41> 'void *' <BitCast>
|       | | `-BinaryOperator 0x16f6a8d7680 <col:16, col:41> 'unsigned char *' '-'
|       | |   |-BinaryOperator 0x16f6a8d7628 <col:16, col:33> 'unsigned char *' '+'
|       | |   | |-ImplicitCastExpr 0x16f6a8d75f8 <col:16, col:22> 'unsigned char *' <LValueToRValue>
|       | |   | | `-MemberExpr 0x16f6a8d7560 <col:16, col:22> 'unsigned char *' lvalue ->iv 0x16f6a915430
|       | |   | |   `-ImplicitCastExpr 0x16f6a8d7548 <col:16> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |   | |     `-DeclRefExpr 0x16f6a8d7528 <col:16> 'EVP_AES_GCM_CTX *' lvalue Var 0x16f6a8d42c8 'gctx' 'EVP_AES_GCM_CTX *'
|       | |   | `-ImplicitCastExpr 0x16f6a8d7610 <col:27, col:33> 'int' <LValueToRValue>
|       | |   |   `-MemberExpr 0x16f6a8d75c8 <col:27, col:33> 'int' lvalue ->ivlen 0x16f6a9154a0
|       | |   |     `-ImplicitCastExpr 0x16f6a8d75b0 <col:27> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |   |       `-DeclRefExpr 0x16f6a8d7590 <col:27> 'EVP_AES_GCM_CTX *' lvalue Var 0x16f6a8d42c8 'gctx' 'EVP_AES_GCM_CTX *'
|       | |   `-ImplicitCastExpr 0x16f6a8d7668 <col:41> 'int' <LValueToRValue>
|       | |     `-DeclRefExpr 0x16f6a8d7648 <col:41> 'int' lvalue ParmVar 0x16f6a8d4060 'arg' 'int'
|       | |-ImplicitCastExpr 0x16f6a8d7790 <col:46> 'const void *' <NoOp>
|       | | `-ImplicitCastExpr 0x16f6a8d7778 <col:46> 'void *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x16f6a8d76a0 <col:46> 'void *' lvalue ParmVar 0x16f6a8d40e0 'ptr' 'void *'
|       | `-ImplicitCastExpr 0x16f6a8d77c0 <col:51> 'unsigned long long' <IntegralCast>
|       |   `-ImplicitCastExpr 0x16f6a8d77a8 <col:51> 'int' <LValueToRValue>
|       |     `-DeclRefExpr 0x16f6a8d76c0 <col:51> 'int' lvalue ParmVar 0x16f6a8d4060 'arg' 'int'
|       |-BinaryOperator 0x16f6a8cf920 <line:1381:9, col:24> 'int' '='
|       | |-MemberExpr 0x16f6a8cf8c8 <col:9, col:15> 'int' lvalue ->iv_set 0x16f6a915328
|       | | `-ImplicitCastExpr 0x16f6a8cf8b0 <col:9> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x16f6a8cf890 <col:9> 'EVP_AES_GCM_CTX *' lvalue Var 0x16f6a8d42c8 'gctx' 'EVP_AES_GCM_CTX *'
|       | `-IntegerLiteral 0x16f6a8cf8f8 <col:24> 'int' 1
|       |-ReturnStmt 0x16f6a8cf968 <line:1382:9, col:16>
|       | `-IntegerLiteral 0x16f6a8cf940 <col:16> 'int' 1
|       |-IfStmt 0x16f6a8cf9e8 <line:1386:9, line:1387:20>
|       | |-OpaqueValueExpr 0x16f6a8cf9d0 <<invalid sloc>> '_Bool'
|       | `-ReturnStmt 0x16f6a8cf9c0 <col:13, col:20>
|       |   `-IntegerLiteral 0x16f6a8cf998 <col:20> 'int' 0
|       |-BinaryOperator 0x16f6a8cfb20 <line:1389:9, col:29> 'int' '='
|       | |-MemberExpr 0x16f6a8cfab8 <col:9, col:15> 'int' lvalue ->tls_aad_len 0x16f6a9155f0
|       | | `-ImplicitCastExpr 0x16f6a8cfaa0 <col:9> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x16f6a8cfa80 <col:9> 'EVP_AES_GCM_CTX *' lvalue Var 0x16f6a8d42c8 'gctx' 'EVP_AES_GCM_CTX *'
|       | `-ImplicitCastExpr 0x16f6a8cfb08 <col:29> 'int' <LValueToRValue>
|       |   `-DeclRefExpr 0x16f6a8cfae8 <col:29> 'int' lvalue ParmVar 0x16f6a8d4060 'arg' 'int'
|       |-CompoundStmt 0x16f6a8d0168 <line:1390:9, line:1406:9>
|       | |-DeclStmt 0x16f6a8cfd28 <line:1391:13, line:1393:57>
|       | | `-VarDecl 0x16f6a8cfb58 <line:1391:13, col:26> col:26 used len 'unsigned int'
|       | |-IfStmt 0x16f6a8cfdc8 <line:1395:13, line:1396:24>
|       | | |-OpaqueValueExpr 0x16f6a8cfdb0 <<invalid sloc>> '_Bool'
|       | | `-ReturnStmt 0x16f6a8cfda0 <col:17, col:24>
|       | |   `-IntegerLiteral 0x16f6a8cfd78 <col:24> 'int' 0
|       | `-IfStmt 0x16f6a8cfef8 <line:1399:13, line:1403:13>
|       |   |-OpaqueValueExpr 0x16f6a8cfee0 <<invalid sloc>> '_Bool'
|       |   `-CompoundStmt 0x16f6a8cfec8 <line:1399:48, line:1403:13>
|       |     `-IfStmt 0x16f6a8cfe90 <line:1400:17, line:1401:28>
|       |       |-OpaqueValueExpr 0x16f6a8cfe78 <<invalid sloc>> '_Bool'
|       |       `-ReturnStmt 0x16f6a8cfe68 <col:21, col:28>
|       |         `-IntegerLiteral 0x16f6a8cfe40 <col:28> 'int' 0
|       |-CompoundStmt 0x16f6a8ddc78 <line:1411:9, line:1428:9>
|       | |-DeclStmt 0x16f6a8d0248 <line:1413:13, col:72>
|       | | `-VarDecl 0x16f6a8d01c0 <col:13, col:30> col:30 used gctx_out 'EVP_AES_GCM_CTX *'
|       | |-IfStmt 0x16f6a8d0428 <line:1414:13, line:1418:13>
|       | | |-OpaqueValueExpr 0x16f6a8d0410 <<invalid sloc>> '_Bool'
|       | | `-CompoundStmt 0x16f6a8d03f8 <line:1414:32, line:1418:13>
|       | |   `-IfStmt 0x16f6a8d0358 <line:1415:17, line:1416:28>
|       | |     |-OpaqueValueExpr 0x16f6a8d0340 <<invalid sloc>> '_Bool'
|       | |     `-ReturnStmt 0x16f6a8d0330 <col:21, col:28>
|       | |       `-IntegerLiteral 0x16f6a8d0308 <col:28> 'int' 0
|       | |-IfStmt 0x16f6a8ddc18 <line:1419:13, line:1426:13> has_else
|       | | |-OpaqueValueExpr 0x16f6a8ddc00 <<invalid sloc>> '_Bool'
|       | | |-NullStmt 0x16f6a8ddbf8 <line:1420:17>
|       | | `-CompoundStmt 0x16f6a8ddbd0 <line:1421:18, line:1426:13>
|       | |   |-BinaryOperator 0x16f6a8d06b0 <line:1422:17, col:58> 'unsigned char *' '='
|       | |   | |-MemberExpr 0x16f6a8d0588 <col:17, col:27> 'unsigned char *' lvalue ->iv 0x16f6a915430
|       | |   | | `-ImplicitCastExpr 0x16f6a8d0570 <col:17> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |   | |   `-DeclRefExpr 0x16f6a8d0550 <col:17> 'EVP_AES_GCM_CTX *' lvalue Var 0x16f6a8d01c0 'gctx_out' 'EVP_AES_GCM_CTX *'
|       | |   | `-ImplicitCastExpr 0x16f6a8d0698 <col:32, col:58> 'unsigned char *' <IntegralToPointer>
|       | |   |   `-CallExpr 0x16f6a8d0658 <col:32, col:58> 'int'
|       | |   |     |-ImplicitCastExpr 0x16f6a8d0640 <col:32> 'int (*)()' <FunctionToPointerDecay>
|       | |   |     | `-DeclRefExpr 0x16f6a8d05b8 <col:32> 'int ()' Function 0x16f6a8d4e08 'OPENSSL_malloc' 'int ()'
|       | |   |     `-ImplicitCastExpr 0x16f6a8d0680 <col:47, col:53> 'int' <LValueToRValue>
|       | |   |       `-MemberExpr 0x16f6a8d0610 <col:47, col:53> 'int' lvalue ->ivlen 0x16f6a9154a0
|       | |   |         `-ImplicitCastExpr 0x16f6a8d05f8 <col:47> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |   |           `-DeclRefExpr 0x16f6a8d05d8 <col:47> 'EVP_AES_GCM_CTX *' lvalue Var 0x16f6a8d42c8 'gctx' 'EVP_AES_GCM_CTX *'
|       | |   |-IfStmt 0x16f6a8d0848 <line:1423:17, line:1424:28>
|       | |   | |-BinaryOperator 0x16f6a8d07f0 <line:1423:21, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|       | |   | | |-ImplicitCastExpr 0x16f6a8d07c0 <.//openssl//file_jk/before\crypto\evp\e_aes.c:1423:21, col:31> 'unsigned char *' <LValueToRValue>
|       | |   | | | `-MemberExpr 0x16f6a8d0708 <col:21, col:31> 'unsigned char *' lvalue ->iv 0x16f6a915430
|       | |   | | |   `-ImplicitCastExpr 0x16f6a8d06f0 <col:21> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |   | | |     `-DeclRefExpr 0x16f6a8d06d0 <col:21> 'EVP_AES_GCM_CTX *' lvalue Var 0x16f6a8d01c0 'gctx_out' 'EVP_AES_GCM_CTX *'
|       | |   | | `-ImplicitCastExpr 0x16f6a8d07d8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'unsigned char *' <BitCast>
|       | |   | |   `-ParenExpr 0x16f6a8d07a0 <col:17, col:27> 'void *'
|       | |   | |     `-CStyleCastExpr 0x16f6a8d0778 <col:18, col:26> 'void *' <NullToPointer>
|       | |   | |       `-IntegerLiteral 0x16f6a8d0738 <col:26> 'int' 0
|       | |   | `-ReturnStmt 0x16f6a8d0838 <.//openssl//file_jk/before\crypto\evp\e_aes.c:1424:21, col:28>
|       | |   |   `-IntegerLiteral 0x16f6a8d0810 <col:28> 'int' 0
|       | |   `-CallExpr 0x16f6a8ddb08 <line:1425:17, col:59> 'void *'
|       | |     |-ImplicitCastExpr 0x16f6a8ddaf0 <col:17> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|       | |     | `-DeclRefExpr 0x16f6a8d0860 <col:17> 'void *(void *, const void *, unsigned long long)' Function 0x16f6a880a58 'memcpy' 'void *(void *, const void *, unsigned long long)'
|       | |     |-ImplicitCastExpr 0x16f6a8ddb58 <col:24, col:34> 'void *' <BitCast>
|       | |     | `-ImplicitCastExpr 0x16f6a8ddb40 <col:24, col:34> 'unsigned char *' <LValueToRValue>
|       | |     |   `-MemberExpr 0x16f6a8dd9a8 <col:24, col:34> 'unsigned char *' lvalue ->iv 0x16f6a915430
|       | |     |     `-ImplicitCastExpr 0x16f6a8dd990 <col:24> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |     |       `-DeclRefExpr 0x16f6a8dd970 <col:24> 'EVP_AES_GCM_CTX *' lvalue Var 0x16f6a8d01c0 'gctx_out' 'EVP_AES_GCM_CTX *'
|       | |     |-ImplicitCastExpr 0x16f6a8ddb88 <col:38, col:44> 'const void *' <BitCast>
|       | |     | `-ImplicitCastExpr 0x16f6a8ddb70 <col:38, col:44> 'unsigned char *' <LValueToRValue>
|       | |     |   `-MemberExpr 0x16f6a8dda10 <col:38, col:44> 'unsigned char *' lvalue ->iv 0x16f6a915430
|       | |     |     `-ImplicitCastExpr 0x16f6a8dd9f8 <col:38> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |     |       `-DeclRefExpr 0x16f6a8dd9d8 <col:38> 'EVP_AES_GCM_CTX *' lvalue Var 0x16f6a8d42c8 'gctx' 'EVP_AES_GCM_CTX *'
|       | |     `-ImplicitCastExpr 0x16f6a8ddbb8 <col:48, col:54> 'unsigned long long' <IntegralCast>
|       | |       `-ImplicitCastExpr 0x16f6a8ddba0 <col:48, col:54> 'int' <LValueToRValue>
|       | |         `-MemberExpr 0x16f6a8dda78 <col:48, col:54> 'int' lvalue ->ivlen 0x16f6a9154a0
|       | |           `-ImplicitCastExpr 0x16f6a8dda60 <col:48> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |             `-DeclRefExpr 0x16f6a8dda40 <col:48> 'EVP_AES_GCM_CTX *' lvalue Var 0x16f6a8d42c8 'gctx' 'EVP_AES_GCM_CTX *'
|       | `-ReturnStmt 0x16f6a8ddc68 <line:1427:13, col:20>
|       |   `-IntegerLiteral 0x16f6a8ddc40 <col:20> 'int' 1
|       `-DefaultStmt 0x16f6a8ddcf8 <line:1430:5, line:1431:17>
|         `-ReturnStmt 0x16f6a8ddce8 <col:9, col:17>
|           `-UnaryOperator 0x16f6a8ddcd0 <col:16, col:17> 'int' prefix '-'
|             `-IntegerLiteral 0x16f6a8ddca8 <col:17> 'int' 1
|-FunctionDecl 0x16f6a8de0b0 <line:1436:1, line:1511:1> line:1436:12 invalid aes_gcm_init_key 'int (int *, const unsigned char *, const unsigned char *, int)' static
| |-ParmVarDecl 0x16f6a8dde80 <col:29, col:45> col:45 invalid ctx 'int *'
| |-ParmVarDecl 0x16f6a8ddf00 <col:50, col:71> col:71 used key 'const unsigned char *'
| |-ParmVarDecl 0x16f6a8ddf80 <line:1437:29, col:50> col:50 used iv 'const unsigned char *'
| |-ParmVarDecl 0x16f6a8de000 <col:54, col:58> col:58 enc 'int'
| `-CompoundStmt 0x16f6a8df2b8 <line:1438:1, line:1511:1>
|   |-DeclStmt 0x16f6a8de220 <line:1439:5, col:60>
|   | `-VarDecl 0x16f6a8de198 <col:5, col:22> col:22 used gctx 'EVP_AES_GCM_CTX *'
|   |-IfStmt 0x16f6a8de360 <line:1440:5, line:1441:16>
|   | |-BinaryOperator 0x16f6a8de308 <line:1440:9, col:17> 'int' '&&'
|   | | |-UnaryOperator 0x16f6a8de288 <col:9, col:10> 'int' prefix '!' cannot overflow
|   | | | `-ImplicitCastExpr 0x16f6a8de270 <col:10> 'const unsigned char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x16f6a8de238 <col:10> 'const unsigned char *' lvalue ParmVar 0x16f6a8ddf80 'iv' 'const unsigned char *'
|   | | `-UnaryOperator 0x16f6a8de2f0 <col:16, col:17> 'int' prefix '!' cannot overflow
|   | |   `-ImplicitCastExpr 0x16f6a8de2d8 <col:17> 'const unsigned char *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x16f6a8de2a0 <col:17> 'const unsigned char *' lvalue ParmVar 0x16f6a8ddf00 'key' 'const unsigned char *'
|   | `-ReturnStmt 0x16f6a8de350 <line:1441:9, col:16>
|   |   `-IntegerLiteral 0x16f6a8de328 <col:16> 'int' 1
|   |-IfStmt 0x16f6a8df258 <line:1442:5, line:1509:5> has_else
|   | |-ImplicitCastExpr 0x16f6a8de398 <line:1442:9> 'const unsigned char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x16f6a8de378 <col:9> 'const unsigned char *' lvalue ParmVar 0x16f6a8ddf00 'key' 'const unsigned char *'
|   | |-CompoundStmt 0x16f6a8decd8 <col:14, line:1501:5>
|   | | |-DoStmt 0x16f6a8de768 <line:1443:9, line:1489:19>
|   | | | |-CompoundStmt 0x16f6a8de728 <line:1443:12, line:1489:9>
|   | | | | `-CStyleCastExpr 0x16f6a8de3e8 <line:1478:17, col:23> 'void' <ToVoid>
|   | | | |   `-IntegerLiteral 0x16f6a8de3b0 <col:23> 'int' 0
|   | | | `-IntegerLiteral 0x16f6a8de740 <line:1489:18> 'int' 0
|   | | |-IfStmt 0x16f6a8dea18 <line:1494:9, line:1495:24>
|   | | | |-BinaryOperator 0x16f6a8de900 <line:1494:13, col:33> 'int' '&&'
|   | | | | |-BinaryOperator 0x16f6a8de860 <col:13, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | | | | |-ImplicitCastExpr 0x16f6a8de830 <.//openssl//file_jk/before\crypto\evp\e_aes.c:1494:13> 'const unsigned char *' <LValueToRValue>
|   | | | | | | `-DeclRefExpr 0x16f6a8de788 <col:13> 'const unsigned char *' lvalue ParmVar 0x16f6a8ddf80 'iv' 'const unsigned char *'
|   | | | | | `-ImplicitCastExpr 0x16f6a8de848 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const unsigned char *' <BitCast>
|   | | | | |   `-ParenExpr 0x16f6a8de810 <col:17, col:27> 'void *'
|   | | | | |     `-CStyleCastExpr 0x16f6a8de7e8 <col:18, col:26> 'void *' <NullToPointer>
|   | | | | |       `-IntegerLiteral 0x16f6a8de7a8 <col:26> 'int' 0
|   | | | | `-ImplicitCastExpr 0x16f6a8de8e8 <.//openssl//file_jk/before\crypto\evp\e_aes.c:1494:27, col:33> 'int' <LValueToRValue>
|   | | | |   `-MemberExpr 0x16f6a8de8b8 <col:27, col:33> 'int' lvalue ->iv_set 0x16f6a915328
|   | | | |     `-ImplicitCastExpr 0x16f6a8de8a0 <col:27> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|   | | | |       `-DeclRefExpr 0x16f6a8de880 <col:27> 'EVP_AES_GCM_CTX *' lvalue Var 0x16f6a8de198 'gctx' 'EVP_AES_GCM_CTX *'
|   | | | `-BinaryOperator 0x16f6a8de9f8 <line:1495:13, col:24> 'const unsigned char *' '='
|   | | |   |-DeclRefExpr 0x16f6a8de920 <col:13> 'const unsigned char *' lvalue ParmVar 0x16f6a8ddf80 'iv' 'const unsigned char *'
|   | | |   `-ImplicitCastExpr 0x16f6a8de9e0 <col:18, col:24> 'const unsigned char *' <NoOp>
|   | | |     `-ImplicitCastExpr 0x16f6a8de9c8 <col:18, col:24> 'unsigned char *' <LValueToRValue>
|   | | |       `-MemberExpr 0x16f6a8de998 <col:18, col:24> 'unsigned char *' lvalue ->iv 0x16f6a915430
|   | | |         `-ImplicitCastExpr 0x16f6a8de980 <col:18> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|   | | |           `-DeclRefExpr 0x16f6a8de940 <col:18> 'EVP_AES_GCM_CTX *' lvalue Var 0x16f6a8de198 'gctx' 'EVP_AES_GCM_CTX *'
|   | | |-IfStmt 0x16f6a8dec10 <line:1496:9, line:1499:9>
|   | | | |-ImplicitCastExpr 0x16f6a8dea50 <line:1496:13> 'const unsigned char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x16f6a8dea30 <col:13> 'const unsigned char *' lvalue ParmVar 0x16f6a8ddf80 'iv' 'const unsigned char *'
|   | | | `-CompoundStmt 0x16f6a8debf8 <col:17, line:1499:9>
|   | | |   `-BinaryOperator 0x16f6a8debd8 <line:1498:13, col:28> 'int' '='
|   | | |     |-MemberExpr 0x16f6a8deb80 <col:13, col:19> 'int' lvalue ->iv_set 0x16f6a915328
|   | | |     | `-ImplicitCastExpr 0x16f6a8deb68 <col:13> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|   | | |     |   `-DeclRefExpr 0x16f6a8deb48 <col:13> 'EVP_AES_GCM_CTX *' lvalue Var 0x16f6a8de198 'gctx' 'EVP_AES_GCM_CTX *'
|   | | |     `-IntegerLiteral 0x16f6a8debb0 <col:28> 'int' 1
|   | | `-BinaryOperator 0x16f6a8decb8 <line:1500:9, col:25> 'int' '='
|   | |   |-MemberExpr 0x16f6a8dec60 <col:9, col:15> 'int' lvalue ->key_set 0x16f6a9152b8
|   | |   | `-ImplicitCastExpr 0x16f6a8dec48 <col:9> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x16f6a8dec28 <col:9> 'EVP_AES_GCM_CTX *' lvalue Var 0x16f6a8de198 'gctx' 'EVP_AES_GCM_CTX *'
|   | |   `-IntegerLiteral 0x16f6a8dec90 <col:25> 'int' 1
|   | `-CompoundStmt 0x16f6a8df230 <line:1501:12, line:1509:5>
|   |   |-IfStmt 0x16f6a8df0a8 <line:1503:9, line:1506:45> has_else
|   |   | |-ImplicitCastExpr 0x16f6a8ded70 <line:1503:13, col:19> 'int' <LValueToRValue>
|   |   | | `-MemberExpr 0x16f6a8ded40 <col:13, col:19> 'int' lvalue ->key_set 0x16f6a9152b8
|   |   | |   `-ImplicitCastExpr 0x16f6a8ded28 <col:13> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x16f6a8ded08 <col:13> 'EVP_AES_GCM_CTX *' lvalue Var 0x16f6a8de198 'gctx' 'EVP_AES_GCM_CTX *'
|   |   | |-NullStmt 0x16f6a8df0a0 <line:1504:13>
|   |   | `-CallExpr 0x16f6a8defd8 <line:1506:13, col:45> 'void *'
|   |   |   |-ImplicitCastExpr 0x16f6a8defc0 <col:13> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x16f6a8dee68 <col:13> 'void *(void *, const void *, unsigned long long)' Function 0x16f6a880a58 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   |   |   |-ImplicitCastExpr 0x16f6a8df028 <col:20, col:26> 'void *' <BitCast>
|   |   |   | `-ImplicitCastExpr 0x16f6a8df010 <col:20, col:26> 'unsigned char *' <LValueToRValue>
|   |   |   |   `-MemberExpr 0x16f6a8deec0 <col:20, col:26> 'unsigned char *' lvalue ->iv 0x16f6a915430
|   |   |   |     `-ImplicitCastExpr 0x16f6a8deea8 <col:20> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|   |   |   |       `-DeclRefExpr 0x16f6a8dee88 <col:20> 'EVP_AES_GCM_CTX *' lvalue Var 0x16f6a8de198 'gctx' 'EVP_AES_GCM_CTX *'
|   |   |   |-ImplicitCastExpr 0x16f6a8df058 <col:30> 'const void *' <BitCast>
|   |   |   | `-ImplicitCastExpr 0x16f6a8df040 <col:30> 'const unsigned char *' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x16f6a8deef0 <col:30> 'const unsigned char *' lvalue ParmVar 0x16f6a8ddf80 'iv' 'const unsigned char *'
|   |   |   `-ImplicitCastExpr 0x16f6a8df088 <col:34, col:40> 'unsigned long long' <IntegralCast>
|   |   |     `-ImplicitCastExpr 0x16f6a8df070 <col:34, col:40> 'int' <LValueToRValue>
|   |   |       `-MemberExpr 0x16f6a8def48 <col:34, col:40> 'int' lvalue ->ivlen 0x16f6a9154a0
|   |   |         `-ImplicitCastExpr 0x16f6a8def30 <col:34> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|   |   |           `-DeclRefExpr 0x16f6a8def10 <col:34> 'EVP_AES_GCM_CTX *' lvalue Var 0x16f6a8de198 'gctx' 'EVP_AES_GCM_CTX *'
|   |   |-BinaryOperator 0x16f6a8df160 <line:1507:9, col:24> 'int' '='
|   |   | |-MemberExpr 0x16f6a8df108 <col:9, col:15> 'int' lvalue ->iv_set 0x16f6a915328
|   |   | | `-ImplicitCastExpr 0x16f6a8df0f0 <col:9> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x16f6a8df0d0 <col:9> 'EVP_AES_GCM_CTX *' lvalue Var 0x16f6a8de198 'gctx' 'EVP_AES_GCM_CTX *'
|   |   | `-IntegerLiteral 0x16f6a8df138 <col:24> 'int' 1
|   |   `-BinaryOperator 0x16f6a8df210 <line:1508:9, col:24> 'int' '='
|   |     |-MemberExpr 0x16f6a8df1b8 <col:9, col:15> 'int' lvalue ->iv_gen 0x16f6a915580
|   |     | `-ImplicitCastExpr 0x16f6a8df1a0 <col:9> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x16f6a8df180 <col:9> 'EVP_AES_GCM_CTX *' lvalue Var 0x16f6a8de198 'gctx' 'EVP_AES_GCM_CTX *'
|   |     `-IntegerLiteral 0x16f6a8df1e8 <col:24> 'int' 0
|   `-ReturnStmt 0x16f6a8df2a8 <line:1510:5, col:12>
|     `-IntegerLiteral 0x16f6a8df280 <col:12> 'int' 1
|-FunctionDecl 0x16f6a8df528 <line:1520:1, line:1639:1> line:1520:12 invalid aes_gcm_tls_cipher 'int (int *, unsigned char *, const unsigned char *, size_t)' static
| |-ParmVarDecl 0x16f6a8df300 <col:31, col:47> col:47 invalid ctx 'int *'
| |-ParmVarDecl 0x16f6a8df380 <col:52, col:67> col:67 used out 'unsigned char *'
| |-ParmVarDecl 0x16f6a8df400 <line:1521:31, col:52> col:52 used in 'const unsigned char *'
| |-ParmVarDecl 0x16f6a8df478 <col:56, col:63> col:63 used len 'size_t':'unsigned long long'
| `-CompoundStmt 0x16f6a8d9930 <line:1522:1, line:1639:1>
|   |-DeclStmt 0x16f6a8df698 <line:1523:5, col:60>
|   | `-VarDecl 0x16f6a8df610 <col:5, col:22> col:22 used gctx 'EVP_AES_GCM_CTX *'
|   |-DeclStmt 0x16f6a8df770 <line:1524:5, col:16>
|   | `-VarDecl 0x16f6a8df6c8 <col:5, col:15> col:9 used rv 'int' cinit
|   |   `-UnaryOperator 0x16f6a8df758 <col:14, col:15> 'int' prefix '-'
|   |     `-IntegerLiteral 0x16f6a8df730 <col:15> 'int' 1
|   |-IfStmt 0x16f6a8df900 <line:1526:5, line:1528:17>
|   | |-OpaqueValueExpr 0x16f6a8df8e8 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x16f6a8df8d8 <col:9, col:17>
|   |   `-UnaryOperator 0x16f6a8df8c0 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x16f6a8df898 <col:17> 'int' 1
|   |-IfStmt 0x16f6a8d8af0 <line:1533:5, line:1536:14>
|   | |-OpaqueValueExpr 0x16f6a8d8ad8 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x16f6a8d8ac0 <col:9, col:14> 'err' 0x16f6a8d8a70
|   |-IfStmt 0x16f6a8d8d20 <line:1538:5, line:1540:14>
|   | |-OpaqueValueExpr 0x16f6a8d8d08 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x16f6a8d8cf0 <col:9, col:14> 'err' 0x16f6a8d8a70
|   |-IfStmt 0x16f6a8d86d8 <line:1545:5, line:1633:5> has_else
|   | |-OpaqueValueExpr 0x16f6a8d86c0 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x16f6a8d7930 <line:1545:41, line:1586:5>
|   | | |-IfStmt 0x16f6a8d96d0 <line:1547:9, line:1581:9> has_else
|   | | | |-OpaqueValueExpr 0x16f6a8d96b8 <<invalid sloc>> '_Bool'
|   | | | |-CompoundStmt 0x16f6a8d9250 <line:1547:24, line:1565:9>
|   | | | | |-DeclStmt 0x16f6a8d8ea8 <line:1548:13, col:28>
|   | | | | | `-VarDecl 0x16f6a8d8e00 <col:13, col:27> col:20 used bulk 'size_t':'unsigned long long' cinit
|   | | | | |   `-ImplicitCastExpr 0x16f6a8d8e90 <col:27> 'size_t':'unsigned long long' <IntegralCast>
|   | | | | |     `-IntegerLiteral 0x16f6a8d8e68 <col:27> 'int' 0
|   | | | | `-IfStmt 0x16f6a8d9238 <line:1560:13, line:1564:22>
|   | | | |   |-OpaqueValueExpr 0x16f6a8d9220 <<invalid sloc>> '_Bool'
|   | | | |   `-GotoStmt 0x16f6a8d9208 <col:17, col:22> 'err' 0x16f6a8d8a70
|   | | | `-CompoundStmt 0x16f6a8d9698 <line:1565:16, line:1581:9>
|   | | |   |-DeclStmt 0x16f6a8d9328 <line:1566:13, col:28>
|   | | |   | `-VarDecl 0x16f6a8d9280 <col:13, col:27> col:20 used bulk 'size_t':'unsigned long long' cinit
|   | | |   |   `-ImplicitCastExpr 0x16f6a8d9310 <col:27> 'size_t':'unsigned long long' <IntegralCast>
|   | | |   |     `-IntegerLiteral 0x16f6a8d92e8 <col:27> 'int' 0
|   | | |   `-IfStmt 0x16f6a8d9680 <line:1578:13, line:1580:22>
|   | | |     |-OpaqueValueExpr 0x16f6a8d9668 <<invalid sloc>> '_Bool'
|   | | |     `-GotoStmt 0x16f6a8d9650 <col:17, col:22> 'err' 0x16f6a8d8a70
|   | | `-CompoundAssignOperator 0x16f6a8d9750 <line:1582:9, col:16> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   | |   |-DeclRefExpr 0x16f6a8d96f8 <col:9> 'unsigned char *' lvalue ParmVar 0x16f6a8df380 'out' 'unsigned char *'
|   | |   `-ImplicitCastExpr 0x16f6a8d9738 <col:16> 'size_t':'unsigned long long' <LValueToRValue>
|   | |     `-DeclRefExpr 0x16f6a8d9718 <col:16> 'size_t':'unsigned long long' lvalue ParmVar 0x16f6a8df478 'len' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x16f6a8d8698 <line:1586:12, line:1633:5>
|   |   |-IfStmt 0x16f6a8d8268 <line:1588:9, line:1622:9> has_else
|   |   | |-OpaqueValueExpr 0x16f6a8d8250 <<invalid sloc>> '_Bool'
|   |   | |-CompoundStmt 0x16f6a8d7de8 <line:1588:24, line:1606:9>
|   |   | | |-DeclStmt 0x16f6a8d7a40 <line:1589:13, col:28>
|   |   | | | `-VarDecl 0x16f6a8d7998 <col:13, col:27> col:20 used bulk 'size_t':'unsigned long long' cinit
|   |   | | |   `-ImplicitCastExpr 0x16f6a8d7a28 <col:27> 'size_t':'unsigned long long' <IntegralCast>
|   |   | | |     `-IntegerLiteral 0x16f6a8d7a00 <col:27> 'int' 0
|   |   | | `-IfStmt 0x16f6a8d7dd0 <line:1601:13, line:1605:22>
|   |   | |   |-OpaqueValueExpr 0x16f6a8d7db8 <<invalid sloc>> '_Bool'
|   |   | |   `-GotoStmt 0x16f6a8d7da0 <col:17, col:22> 'err' 0x16f6a8d8a70
|   |   | `-CompoundStmt 0x16f6a8d8230 <line:1606:16, line:1622:9>
|   |   |   |-DeclStmt 0x16f6a8d7ec0 <line:1607:13, col:28>
|   |   |   | `-VarDecl 0x16f6a8d7e18 <col:13, col:27> col:20 used bulk 'size_t':'unsigned long long' cinit
|   |   |   |   `-ImplicitCastExpr 0x16f6a8d7ea8 <col:27> 'size_t':'unsigned long long' <IntegralCast>
|   |   |   |     `-IntegerLiteral 0x16f6a8d7e80 <col:27> 'int' 0
|   |   |   `-IfStmt 0x16f6a8d8218 <line:1619:13, line:1621:22>
|   |   |     |-OpaqueValueExpr 0x16f6a8d8200 <<invalid sloc>> '_Bool'
|   |   |     `-GotoStmt 0x16f6a8d81e8 <col:17, col:22> 'err' 0x16f6a8d8a70
|   |   |-IfStmt 0x16f6a8d85f0 <line:1627:9, line:1631:9>
|   |   | |-OpaqueValueExpr 0x16f6a8d85d8 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x16f6a8d85b8 <line:1628:49, line:1631:9>
|   |   |   |-CallExpr 0x16f6a8d8540 <line:1629:13, col:37> 'int'
|   |   |   | |-ImplicitCastExpr 0x16f6a8d8528 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x16f6a8d84c8 <col:13> 'int ()' Function 0x16f6a8d6440 'OPENSSL_cleanse' 'int ()'
|   |   |   | |-ImplicitCastExpr 0x16f6a8d8570 <col:29> 'unsigned char *' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x16f6a8d84e8 <col:29> 'unsigned char *' lvalue ParmVar 0x16f6a8df380 'out' 'unsigned char *'
|   |   |   | `-ImplicitCastExpr 0x16f6a8d8588 <col:34> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x16f6a8d8508 <col:34> 'size_t':'unsigned long long' lvalue ParmVar 0x16f6a8df478 'len' 'size_t':'unsigned long long'
|   |   |   `-GotoStmt 0x16f6a8d85a0 <line:1630:13, col:18> 'err' 0x16f6a8d8a70
|   |   `-BinaryOperator 0x16f6a8d8678 <line:1632:9, col:14> 'int' '='
|   |     |-DeclRefExpr 0x16f6a8d8608 <col:9> 'int' lvalue Var 0x16f6a8df6c8 'rv' 'int'
|   |     `-ImplicitCastExpr 0x16f6a8d8660 <col:14> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x16f6a8d8648 <col:14> 'size_t':'unsigned long long' <LValueToRValue>
|   |         `-DeclRefExpr 0x16f6a8d8628 <col:14> 'size_t':'unsigned long long' lvalue ParmVar 0x16f6a8df478 'len' 'size_t':'unsigned long long'
|   |-LabelStmt 0x16f6a8d87b0 <line:1635:2, line:1636:20> 'err'
|   | `-BinaryOperator 0x16f6a8d8790 <col:5, col:20> 'int' '='
|   |   |-MemberExpr 0x16f6a8d8738 <col:5, col:11> 'int' lvalue ->iv_set 0x16f6a915328
|   |   | `-ImplicitCastExpr 0x16f6a8d8720 <col:5> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x16f6a8d8700 <col:5> 'EVP_AES_GCM_CTX *' lvalue Var 0x16f6a8df610 'gctx' 'EVP_AES_GCM_CTX *'
|   |   `-IntegerLiteral 0x16f6a8d8768 <col:20> 'int' 0
|   |-BinaryOperator 0x16f6a8d8870 <line:1637:5, col:26> 'int' '='
|   | |-MemberExpr 0x16f6a8d8800 <col:5, col:11> 'int' lvalue ->tls_aad_len 0x16f6a9155f0
|   | | `-ImplicitCastExpr 0x16f6a8d87e8 <col:5> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x16f6a8d87c8 <col:5> 'EVP_AES_GCM_CTX *' lvalue Var 0x16f6a8df610 'gctx' 'EVP_AES_GCM_CTX *'
|   | `-UnaryOperator 0x16f6a8d8858 <col:25, col:26> 'int' prefix '-'
|   |   `-IntegerLiteral 0x16f6a8d8830 <col:26> 'int' 1
|   `-ReturnStmt 0x16f6a8d88c8 <line:1638:5, col:12>
|     `-ImplicitCastExpr 0x16f6a8d88b0 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x16f6a8d8890 <col:12> 'int' lvalue Var 0x16f6a8df6c8 'rv' 'int'
|-FunctionDecl 0x16f6a8d9bc8 <line:1641:1, line:1766:1> line:1641:12 invalid aes_gcm_cipher 'int (int *, unsigned char *, const unsigned char *, size_t)' static
| |-ParmVarDecl 0x16f6a8d99a0 <col:27, col:43> col:43 invalid ctx 'int *'
| |-ParmVarDecl 0x16f6a8d9a20 <col:48, col:63> col:63 used out 'unsigned char *'
| |-ParmVarDecl 0x16f6a8d9aa0 <line:1642:27, col:48> col:48 used in 'const unsigned char *'
| |-ParmVarDecl 0x16f6a8d9b18 <col:52, col:59> col:59 used len 'size_t':'unsigned long long'
| `-CompoundStmt 0x16f6a8dabd0 <line:1643:1, line:1766:1>
|   |-DeclStmt 0x16f6a8d9d38 <line:1644:5, col:60>
|   | `-VarDecl 0x16f6a8d9cb0 <col:5, col:22> col:22 used gctx 'EVP_AES_GCM_CTX *'
|   |-IfStmt 0x16f6a8d9e50 <line:1646:5, line:1647:17>
|   | |-UnaryOperator 0x16f6a8d9de8 <line:1646:9, col:16> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x16f6a8d9dd0 <col:10, col:16> 'int' <LValueToRValue>
|   | |   `-MemberExpr 0x16f6a8d9da0 <col:10, col:16> 'int' lvalue ->key_set 0x16f6a9152b8
|   | |     `-ImplicitCastExpr 0x16f6a8d9d88 <col:10> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x16f6a8d9d50 <col:10> 'EVP_AES_GCM_CTX *' lvalue Var 0x16f6a8d9cb0 'gctx' 'EVP_AES_GCM_CTX *'
|   | `-ReturnStmt 0x16f6a8d9e40 <line:1647:9, col:17>
|   |   `-UnaryOperator 0x16f6a8d9e28 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x16f6a8d9e00 <col:17> 'int' 1
|   |-IfStmt 0x16f6a8da0c0 <line:1652:5, line:1653:17>
|   | |-UnaryOperator 0x16f6a8da058 <line:1652:9, col:16> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x16f6a8da040 <col:10, col:16> 'int' <LValueToRValue>
|   | |   `-MemberExpr 0x16f6a8da010 <col:10, col:16> 'int' lvalue ->iv_set 0x16f6a915328
|   | |     `-ImplicitCastExpr 0x16f6a8d9ff8 <col:10> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x16f6a8d9fd8 <col:10> 'EVP_AES_GCM_CTX *' lvalue Var 0x16f6a8d9cb0 'gctx' 'EVP_AES_GCM_CTX *'
|   | `-ReturnStmt 0x16f6a8da0b0 <line:1653:9, col:17>
|   |   `-UnaryOperator 0x16f6a8da098 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x16f6a8da070 <col:17> 'int' 1
|   `-IfStmt 0x16f6a8daba8 <line:1654:5, line:1764:5> has_else
|     |-ImplicitCastExpr 0x16f6a8da0f8 <line:1654:9> 'const unsigned char *' <LValueToRValue>
|     | `-DeclRefExpr 0x16f6a8da0d8 <col:9> 'const unsigned char *' lvalue ParmVar 0x16f6a8d9aa0 'in' 'const unsigned char *'
|     |-CompoundStmt 0x16f6a8e0458 <col:13, line:1748:5>
|     | |-IfStmt 0x16f6a8e03d0 <line:1655:9, line:1746:9> has_else
|     | | |-BinaryOperator 0x16f6a8da1e8 <line:1655:13, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|     | | | |-ImplicitCastExpr 0x16f6a8da1b8 <.//openssl//file_jk/before\crypto\evp\e_aes.c:1655:13> 'unsigned char *' <LValueToRValue>
|     | | | | `-DeclRefExpr 0x16f6a8da110 <col:13> 'unsigned char *' lvalue ParmVar 0x16f6a8d9a20 'out' 'unsigned char *'
|     | | | `-ImplicitCastExpr 0x16f6a8da1d0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'unsigned char *' <BitCast>
|     | | |   `-ParenExpr 0x16f6a8da198 <col:17, col:27> 'void *'
|     | | |     `-CStyleCastExpr 0x16f6a8da170 <col:18, col:26> 'void *' <NullToPointer>
|     | | |       `-IntegerLiteral 0x16f6a8da130 <col:26> 'int' 0
|     | | |-CompoundStmt 0x16f6a8da320 <.//openssl//file_jk/before\crypto\evp\e_aes.c:1655:26, line:1658:9>
|     | | | `-IfStmt 0x16f6a8da308 <line:1656:13, line:1657:25>
|     | | |   |-OpaqueValueExpr 0x16f6a8da2f0 <<invalid sloc>> '_Bool'
|     | | |   `-ReturnStmt 0x16f6a8da2e0 <col:17, col:25>
|     | | |     `-UnaryOperator 0x16f6a8da2c8 <col:24, col:25> 'int' prefix '-'
|     | | |       `-IntegerLiteral 0x16f6a8da2a0 <col:25> 'int' 1
|     | | `-IfStmt 0x16f6a8e03a8 <line:1658:16, line:1746:9> has_else
|     | |   |-OpaqueValueExpr 0x16f6a8e0390 <<invalid sloc>> '_Bool'
|     | |   |-CompoundStmt 0x16f6a8dfb90 <line:1658:52, line:1702:9>
|     | |   | `-IfStmt 0x16f6a8dfb68 <line:1659:13, line:1701:13> has_else
|     | |   |   |-OpaqueValueExpr 0x16f6a8dfb50 <<invalid sloc>> '_Bool'
|     | |   |   |-CompoundStmt 0x16f6a8da738 <line:1659:28, line:1681:13>
|     | |   |   | |-DeclStmt 0x16f6a8da448 <line:1660:17, col:32>
|     | |   |   | | `-VarDecl 0x16f6a8da3a0 <col:17, col:31> col:24 used bulk 'size_t':'unsigned long long' cinit
|     | |   |   | |   `-ImplicitCastExpr 0x16f6a8da430 <col:31> 'size_t':'unsigned long long' <IntegralCast>
|     | |   |   | |     `-IntegerLiteral 0x16f6a8da408 <col:31> 'int' 0
|     | |   |   | `-IfStmt 0x16f6a8da720 <line:1676:17, line:1680:29>
|     | |   |   |   |-OpaqueValueExpr 0x16f6a8da708 <<invalid sloc>> '_Bool'
|     | |   |   |   `-ReturnStmt 0x16f6a8da6f8 <col:21, col:29>
|     | |   |   |     `-UnaryOperator 0x16f6a8da6e0 <col:28, col:29> 'int' prefix '-'
|     | |   |   |       `-IntegerLiteral 0x16f6a8da6b8 <col:29> 'int' 1
|     | |   |   `-CompoundStmt 0x16f6a8dfb30 <line:1681:20, line:1701:13>
|     | |   |     |-DeclStmt 0x16f6a8da810 <line:1682:17, col:32>
|     | |   |     | `-VarDecl 0x16f6a8da768 <col:17, col:31> col:24 used bulk 'size_t':'unsigned long long' cinit
|     | |   |     |   `-ImplicitCastExpr 0x16f6a8da7f8 <col:31> 'size_t':'unsigned long long' <IntegralCast>
|     | |   |     |     `-IntegerLiteral 0x16f6a8da7d0 <col:31> 'int' 0
|     | |   |     `-IfStmt 0x16f6a8dfb18 <line:1698:17, line:1700:29>
|     | |   |       |-OpaqueValueExpr 0x16f6a8dfb00 <<invalid sloc>> '_Bool'
|     | |   |       `-ReturnStmt 0x16f6a8dfaf0 <col:21, col:29>
|     | |   |         `-UnaryOperator 0x16f6a8dfad8 <col:28, col:29> 'int' prefix '-'
|     | |   |           `-IntegerLiteral 0x16f6a8dfab0 <col:29> 'int' 1
|     | |   `-CompoundStmt 0x16f6a8e0378 <line:1702:16, line:1746:9>
|     | |     `-IfStmt 0x16f6a8e0350 <line:1703:13, line:1745:13> has_else
|     | |       |-OpaqueValueExpr 0x16f6a8e0338 <<invalid sloc>> '_Bool'
|     | |       |-CompoundStmt 0x16f6a8dff88 <line:1703:28, line:1725:13>
|     | |       | |-DeclStmt 0x16f6a8dfc98 <line:1704:17, col:32>
|     | |       | | `-VarDecl 0x16f6a8dfbf0 <col:17, col:31> col:24 used bulk 'size_t':'unsigned long long' cinit
|     | |       | |   `-ImplicitCastExpr 0x16f6a8dfc80 <col:31> 'size_t':'unsigned long long' <IntegralCast>
|     | |       | |     `-IntegerLiteral 0x16f6a8dfc58 <col:31> 'int' 0
|     | |       | `-IfStmt 0x16f6a8dff70 <line:1720:17, line:1724:29>
|     | |       |   |-OpaqueValueExpr 0x16f6a8dff58 <<invalid sloc>> '_Bool'
|     | |       |   `-ReturnStmt 0x16f6a8dff48 <col:21, col:29>
|     | |       |     `-UnaryOperator 0x16f6a8dff30 <col:28, col:29> 'int' prefix '-'
|     | |       |       `-IntegerLiteral 0x16f6a8dff08 <col:29> 'int' 1
|     | |       `-CompoundStmt 0x16f6a8e0318 <line:1725:20, line:1745:13>
|     | |         |-DeclStmt 0x16f6a8e0060 <line:1726:17, col:32>
|     | |         | `-VarDecl 0x16f6a8dffb8 <col:17, col:31> col:24 used bulk 'size_t':'unsigned long long' cinit
|     | |         |   `-ImplicitCastExpr 0x16f6a8e0048 <col:31> 'size_t':'unsigned long long' <IntegralCast>
|     | |         |     `-IntegerLiteral 0x16f6a8e0020 <col:31> 'int' 0
|     | |         `-IfStmt 0x16f6a8e0300 <line:1742:17, line:1744:29>
|     | |           |-OpaqueValueExpr 0x16f6a8e02e8 <<invalid sloc>> '_Bool'
|     | |           `-ReturnStmt 0x16f6a8e02d8 <col:21, col:29>
|     | |             `-UnaryOperator 0x16f6a8e02c0 <col:28, col:29> 'int' prefix '-'
|     | |               `-IntegerLiteral 0x16f6a8e0298 <col:29> 'int' 1
|     | `-ReturnStmt 0x16f6a8e0448 <line:1747:9, col:16>
|     |   `-ImplicitCastExpr 0x16f6a8e0430 <col:16> 'int' <IntegralCast>
|     |     `-ImplicitCastExpr 0x16f6a8e0418 <col:16> 'size_t':'unsigned long long' <LValueToRValue>
|     |       `-DeclRefExpr 0x16f6a8e03f8 <col:16> 'size_t':'unsigned long long' lvalue ParmVar 0x16f6a8d9b18 'len' 'size_t':'unsigned long long'
|     `-CompoundStmt 0x16f6a8dab78 <line:1748:12, line:1764:5>
|       |-IfStmt 0x16f6a8e0970 <line:1749:9, line:1758:9>
|       | |-OpaqueValueExpr 0x16f6a8e0958 <<invalid sloc>> '_Bool'
|       | `-CompoundStmt 0x16f6a8e0928 <line:1749:46, line:1758:9>
|       |   |-IfStmt 0x16f6a8e05b0 <line:1750:13, line:1751:25>
|       |   | |-BinaryOperator 0x16f6a8e0540 <line:1750:17, col:32> 'int' '<'
|       |   | | |-ImplicitCastExpr 0x16f6a8e0528 <col:17, col:23> 'int' <LValueToRValue>
|       |   | | | `-MemberExpr 0x16f6a8e04d0 <col:17, col:23> 'int' lvalue ->taglen 0x16f6a915510
|       |   | | |   `-ImplicitCastExpr 0x16f6a8e04b8 <col:17> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       |   | | |     `-DeclRefExpr 0x16f6a8e0498 <col:17> 'EVP_AES_GCM_CTX *' lvalue Var 0x16f6a8d9cb0 'gctx' 'EVP_AES_GCM_CTX *'
|       |   | | `-IntegerLiteral 0x16f6a8e0500 <col:32> 'int' 0
|       |   | `-ReturnStmt 0x16f6a8e05a0 <line:1751:17, col:25>
|       |   |   `-UnaryOperator 0x16f6a8e0588 <col:24, col:25> 'int' prefix '-'
|       |   |     `-IntegerLiteral 0x16f6a8e0560 <col:25> 'int' 1
|       |   |-IfStmt 0x16f6a8e0828 <line:1752:13, line:1755:25>
|       |   | |-OpaqueValueExpr 0x16f6a8e0810 <<invalid sloc>> '_Bool'
|       |   | `-ReturnStmt 0x16f6a8e0800 <col:17, col:25>
|       |   |   `-UnaryOperator 0x16f6a8e07e8 <col:24, col:25> 'int' prefix '-'
|       |   |     `-IntegerLiteral 0x16f6a8e07c0 <col:25> 'int' 1
|       |   |-BinaryOperator 0x16f6a8e08d0 <line:1756:13, col:28> 'int' '='
|       |   | |-MemberExpr 0x16f6a8e0878 <col:13, col:19> 'int' lvalue ->iv_set 0x16f6a915328
|       |   | | `-ImplicitCastExpr 0x16f6a8e0860 <col:13> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       |   | |   `-DeclRefExpr 0x16f6a8e0840 <col:13> 'EVP_AES_GCM_CTX *' lvalue Var 0x16f6a8d9cb0 'gctx' 'EVP_AES_GCM_CTX *'
|       |   | `-IntegerLiteral 0x16f6a8e08a8 <col:28> 'int' 0
|       |   `-ReturnStmt 0x16f6a8e0918 <line:1757:13, col:20>
|       |     `-IntegerLiteral 0x16f6a8e08f0 <col:20> 'int' 0
|       |-BinaryOperator 0x16f6a8daa70 <line:1760:9, col:24> 'int' '='
|       | |-MemberExpr 0x16f6a8daa18 <col:9, col:15> 'int' lvalue ->taglen 0x16f6a915510
|       | | `-ImplicitCastExpr 0x16f6a8daa00 <col:9> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x16f6a8da9e0 <col:9> 'EVP_AES_GCM_CTX *' lvalue Var 0x16f6a8d9cb0 'gctx' 'EVP_AES_GCM_CTX *'
|       | `-IntegerLiteral 0x16f6a8daa48 <col:24> 'int' 16
|       |-BinaryOperator 0x16f6a8dab20 <line:1762:9, col:24> 'int' '='
|       | |-MemberExpr 0x16f6a8daac8 <col:9, col:15> 'int' lvalue ->iv_set 0x16f6a915328
|       | | `-ImplicitCastExpr 0x16f6a8daab0 <col:9> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x16f6a8daa90 <col:9> 'EVP_AES_GCM_CTX *' lvalue Var 0x16f6a8d9cb0 'gctx' 'EVP_AES_GCM_CTX *'
|       | `-IntegerLiteral 0x16f6a8daaf8 <col:24> 'int' 0
|       `-ReturnStmt 0x16f6a8dab68 <line:1763:9, col:16>
|         `-IntegerLiteral 0x16f6a8dab40 <col:16> 'int' 0
|-VarDecl 0x16f6a8dac18 <line:967:74, <scratch space>:36:1> col:1 invalid aes_128_gcm 'const int' static
|-FunctionDecl 0x16f6a8dafd8 <.//openssl//file_jk/before\crypto\evp\e_aes.c:976:45, line:978:34> <scratch space>:57:1 invalid EVP_aes_128_gcm 'const int *(void)'
| `-CompoundStmt 0x16f6a8db090 <.//openssl//file_jk/before\crypto\evp\e_aes.c:977:51, line:978:34>
|-VarDecl 0x16f6a8db0b8 <line:967:74, <scratch space>:63:1> col:1 invalid aes_192_gcm 'const int' static
|-FunctionDecl 0x16f6a8db478 <.//openssl//file_jk/before\crypto\evp\e_aes.c:976:45, line:978:34> <scratch space>:84:1 invalid EVP_aes_192_gcm 'const int *(void)'
| `-CompoundStmt 0x16f6a8db530 <.//openssl//file_jk/before\crypto\evp\e_aes.c:977:51, line:978:34>
|-VarDecl 0x16f6a8db558 <line:967:74, <scratch space>:90:1> col:1 invalid aes_256_gcm 'const int' static
|-FunctionDecl 0x16f6a8dc960 <.//openssl//file_jk/before\crypto\evp\e_aes.c:976:45, line:978:34> <scratch space>:111:1 invalid EVP_aes_256_gcm 'const int *(void)'
| `-CompoundStmt 0x16f6a8dca18 <.//openssl//file_jk/before\crypto\evp\e_aes.c:977:51, line:978:34>
|-FunctionDecl 0x16f6a8dcc70 <line:1780:1, line:1803:1> line:1780:12 invalid aes_xts_ctrl 'int (int *, int, int, void *)' static
| |-ParmVarDecl 0x16f6a8dca40 <col:25, col:41> col:41 invalid c 'int *'
| |-ParmVarDecl 0x16f6a8dcac0 <col:44, col:48> col:48 used type 'int'
| |-ParmVarDecl 0x16f6a8dcb40 <col:54, col:58> col:58 arg 'int'
| |-ParmVarDecl 0x16f6a8dcbc0 <col:63, col:69> col:69 used ptr 'void *'
| `-CompoundStmt 0x16f6a8dd658 <line:1781:1, line:1803:1>
|   |-DeclStmt 0x16f6a8dce60 <line:1782:5, col:58>
|   | `-VarDecl 0x16f6a8dcdd8 <col:5, col:22> col:22 used xctx 'EVP_AES_XTS_CTX *'
|   |-IfStmt 0x16f6a8dd478 <line:1783:5, line:1798:17> has_else
|   | |-OpaqueValueExpr 0x16f6a8dd460 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x16f6a8dd390 <line:1783:32, line:1797:5>
|   | | |-DeclStmt 0x16f6a8dcf80 <line:1785:9, col:68>
|   | | | `-VarDecl 0x16f6a8dcef8 <col:9, col:26> col:26 used xctx_out 'EVP_AES_XTS_CTX *'
|   | | |-IfStmt 0x16f6a8dd178 <line:1786:9, line:1790:9>
|   | | | |-OpaqueValueExpr 0x16f6a8dd160 <<invalid sloc>> '_Bool'
|   | | | `-CompoundStmt 0x16f6a8dd148 <line:1786:29, line:1790:9>
|   | | |   `-IfStmt 0x16f6a8dd0a8 <line:1787:13, line:1788:24>
|   | | |     |-OpaqueValueExpr 0x16f6a8dd090 <<invalid sloc>> '_Bool'
|   | | |     `-ReturnStmt 0x16f6a8dd080 <col:17, col:24>
|   | | |       `-IntegerLiteral 0x16f6a8dd058 <col:24> 'int' 0
|   | | |-IfStmt 0x16f6a8dd340 <line:1791:9, line:1795:9>
|   | | | |-OpaqueValueExpr 0x16f6a8dd328 <<invalid sloc>> '_Bool'
|   | | | `-CompoundStmt 0x16f6a8dd310 <line:1791:29, line:1795:9>
|   | | |   `-IfStmt 0x16f6a8dd288 <line:1792:13, line:1793:24>
|   | | |     |-OpaqueValueExpr 0x16f6a8dd270 <<invalid sloc>> '_Bool'
|   | | |     `-ReturnStmt 0x16f6a8dd260 <col:17, col:24>
|   | | |       `-IntegerLiteral 0x16f6a8dd238 <col:24> 'int' 0
|   | | `-ReturnStmt 0x16f6a8dd380 <line:1796:9, col:16>
|   | |   `-IntegerLiteral 0x16f6a8dd358 <col:16> 'int' 1
|   | `-IfStmt 0x16f6a8dd448 <line:1797:12, line:1798:17>
|   |   |-OpaqueValueExpr 0x16f6a8dd430 <<invalid sloc>> '_Bool'
|   |   `-ReturnStmt 0x16f6a8dd420 <col:9, col:17>
|   |     `-UnaryOperator 0x16f6a8dd408 <col:16, col:17> 'int' prefix '-'
|   |       `-IntegerLiteral 0x16f6a8dd3e0 <col:17> 'int' 1
|   `-ReturnStmt 0x16f6a8dd648 <line:1802:5, col:12>
|     `-IntegerLiteral 0x16f6a8dd620 <col:12> 'int' 1
|-FunctionDecl 0x16f6a975030 <line:1805:1, line:1903:1> line:1805:12 invalid aes_xts_init_key 'int (int *, const unsigned char *, const unsigned char *, int)' static
| |-ParmVarDecl 0x16f6a8dd698 <col:29, col:45> col:45 invalid ctx 'int *'
| |-ParmVarDecl 0x16f6a8dd718 <col:50, col:71> col:71 used key 'const unsigned char *'
| |-ParmVarDecl 0x16f6a8dd798 <line:1806:29, col:50> col:50 used iv 'const unsigned char *'
| |-ParmVarDecl 0x16f6a8dd818 <col:54, col:58> col:58 used enc 'int'
| `-CompoundStmt 0x16f6a975b20 <line:1807:1, line:1903:1>
|   |-DeclStmt 0x16f6a9751a0 <line:1808:5, col:60>
|   | `-VarDecl 0x16f6a975118 <col:5, col:22> col:22 used xctx 'EVP_AES_XTS_CTX *'
|   |-IfStmt 0x16f6a9752e0 <line:1809:5, line:1810:16>
|   | |-BinaryOperator 0x16f6a975288 <line:1809:9, col:17> 'int' '&&'
|   | | |-UnaryOperator 0x16f6a975208 <col:9, col:10> 'int' prefix '!' cannot overflow
|   | | | `-ImplicitCastExpr 0x16f6a9751f0 <col:10> 'const unsigned char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x16f6a9751b8 <col:10> 'const unsigned char *' lvalue ParmVar 0x16f6a8dd798 'iv' 'const unsigned char *'
|   | | `-UnaryOperator 0x16f6a975270 <col:16, col:17> 'int' prefix '!' cannot overflow
|   | |   `-ImplicitCastExpr 0x16f6a975258 <col:17> 'const unsigned char *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x16f6a975220 <col:17> 'const unsigned char *' lvalue ParmVar 0x16f6a8dd718 'key' 'const unsigned char *'
|   | `-ReturnStmt 0x16f6a9752d0 <line:1810:9, col:16>
|   |   `-IntegerLiteral 0x16f6a9752a8 <col:16> 'int' 1
|   |-IfStmt 0x16f6a975978 <line:1812:5, line:1895:19>
|   | |-ImplicitCastExpr 0x16f6a975318 <line:1812:9> 'const unsigned char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x16f6a9752f8 <col:9> 'const unsigned char *' lvalue ParmVar 0x16f6a8dd718 'key' 'const unsigned char *'
|   | `-DoStmt 0x16f6a975958 <line:1813:9, line:1895:19>
|   |   |-CompoundStmt 0x16f6a975908 <line:1813:12, line:1895:9>
|   |   | |-BinaryOperator 0x16f6a975450 <line:1817:13, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'void (*)(const unsigned char *, unsigned char *, size_t, const int *, const int *, const unsigned char *)' '='
|   |   | | |-MemberExpr 0x16f6a975380 <.//openssl//file_jk/before\crypto\evp\e_aes.c:1817:13, col:19> 'void (*)(const unsigned char *, unsigned char *, size_t, const int *, const int *, const unsigned char *)' lvalue ->stream 0x16f6a919158
|   |   | | | `-ImplicitCastExpr 0x16f6a975368 <col:13> 'EVP_AES_XTS_CTX *' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x16f6a975330 <col:13> 'EVP_AES_XTS_CTX *' lvalue Var 0x16f6a975118 'xctx' 'EVP_AES_XTS_CTX *'
|   |   | | `-ImplicitCastExpr 0x16f6a975438 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'void (*)(const unsigned char *, unsigned char *, size_t, const int *, const int *, const unsigned char *)' <NullToPointer>
|   |   | |   `-ParenExpr 0x16f6a975418 <col:17, col:27> 'void *'
|   |   | |     `-CStyleCastExpr 0x16f6a9753f0 <col:18, col:26> 'void *' <NullToPointer>
|   |   | |       `-IntegerLiteral 0x16f6a9753b0 <col:26> 'int' 0
|   |   | |-CStyleCastExpr 0x16f6a9754a8 <.//openssl//file_jk/before\crypto\evp\e_aes.c:1877:17, col:23> 'void' <ToVoid>
|   |   | | `-IntegerLiteral 0x16f6a975470 <col:23> 'int' 0
|   |   | `-IfStmt 0x16f6a975730 <line:1879:13, line:1887:13> has_else
|   |   |   |-ImplicitCastExpr 0x16f6a975508 <line:1879:17> 'int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x16f6a9754d0 <col:17> 'int' lvalue ParmVar 0x16f6a8dd818 'enc' 'int'
|   |   |   |-CompoundStmt 0x16f6a975618 <col:22, line:1883:13>
|   |   |   `-CompoundStmt 0x16f6a975720 <col:20, line:1887:13>
|   |   `-IntegerLiteral 0x16f6a975930 <line:1895:18> 'int' 0
|   |-IfStmt 0x16f6a975ad0 <line:1897:5, line:1900:5>
|   | |-ImplicitCastExpr 0x16f6a9759b0 <line:1897:9> 'const unsigned char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x16f6a975990 <col:9> 'const unsigned char *' lvalue ParmVar 0x16f6a8dd798 'iv' 'const unsigned char *'
|   | `-CompoundStmt 0x16f6a975ac0 <col:13, line:1900:5>
|   `-ReturnStmt 0x16f6a975b10 <line:1902:5, col:12>
|     `-IntegerLiteral 0x16f6a975ae8 <col:12> 'int' 1
|-FunctionDecl 0x16f6a975d98 <line:1905:1, line:1922:1> line:1905:12 invalid aes_xts_cipher 'int (int *, unsigned char *, const unsigned char *, size_t)' static
| |-ParmVarDecl 0x16f6a975b70 <col:27, col:43> col:43 invalid ctx 'int *'
| |-ParmVarDecl 0x16f6a975bf0 <col:48, col:63> col:63 used out 'unsigned char *'
| |-ParmVarDecl 0x16f6a975c70 <line:1906:27, col:48> col:48 used in 'const unsigned char *'
| |-ParmVarDecl 0x16f6a975ce8 <col:52, col:59> col:59 used len 'size_t':'unsigned long long'
| `-CompoundStmt 0x16f6a9796c0 <line:1907:1, line:1922:1>
|   |-DeclStmt 0x16f6a975f08 <line:1908:5, col:60>
|   | `-VarDecl 0x16f6a975e80 <col:5, col:22> col:22 used xctx 'EVP_AES_XTS_CTX *'
|   |-IfStmt 0x16f6a975ff8 <line:1909:5, line:1910:16>
|   | |-OpaqueValueExpr 0x16f6a975fe0 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x16f6a975fd0 <col:9, col:16>
|   |   `-IntegerLiteral 0x16f6a975fa8 <col:16> 'int' 0
|   |-IfStmt 0x16f6a9791c8 <line:1911:5, line:1912:16>
|   | |-OpaqueValueExpr 0x16f6a9791b0 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x16f6a9791a0 <col:9, col:16>
|   |   `-IntegerLiteral 0x16f6a979178 <col:16> 'int' 0
|   |-IfStmt 0x16f6a979660 <line:1913:5, line:1920:16> has_else
|   | |-ImplicitCastExpr 0x16f6a979248 <line:1913:9, col:15> 'void (*)(const unsigned char *, unsigned char *, size_t, const int *, const int *, const unsigned char *)' <LValueToRValue>
|   | | `-MemberExpr 0x16f6a979218 <col:9, col:15> 'void (*)(const unsigned char *, unsigned char *, size_t, const int *, const int *, const unsigned char *)' lvalue ->stream 0x16f6a919158
|   | |   `-ImplicitCastExpr 0x16f6a979200 <col:9> 'EVP_AES_XTS_CTX *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x16f6a9791e0 <col:9> 'EVP_AES_XTS_CTX *' lvalue Var 0x16f6a975e80 'xctx' 'EVP_AES_XTS_CTX *'
|   | |-NullStmt 0x16f6a979658 <line:1914:9>
|   | `-IfStmt 0x16f6a979640 <line:1917:10, line:1920:16>
|   |   |-OpaqueValueExpr 0x16f6a979628 <<invalid sloc>> '_Bool'
|   |   `-ReturnStmt 0x16f6a979618 <col:9, col:16>
|   |     `-IntegerLiteral 0x16f6a9795f0 <col:16> 'int' 0
|   `-ReturnStmt 0x16f6a9796b0 <line:1921:5, col:12>
|     `-IntegerLiteral 0x16f6a979688 <col:12> 'int' 1
|-VarDecl 0x16f6a979710 <line:967:74, <scratch space>:117:1> col:1 invalid aes_128_xts 'const int' static
|-FunctionDecl 0x16f6a979b58 <.//openssl//file_jk/before\crypto\evp\e_aes.c:976:45, line:978:34> <scratch space>:138:1 invalid EVP_aes_128_xts 'const int *(void)'
| `-CompoundStmt 0x16f6a979c10 <.//openssl//file_jk/before\crypto\evp\e_aes.c:977:51, line:978:34>
|-VarDecl 0x16f6a979c38 <line:967:74, <scratch space>:144:1> col:1 invalid aes_256_xts 'const int' static
|-FunctionDecl 0x16f6a972028 <.//openssl//file_jk/before\crypto\evp\e_aes.c:976:45, line:978:34> <scratch space>:165:1 invalid EVP_aes_256_xts 'const int *(void)'
| `-CompoundStmt 0x16f6a9720e0 <.//openssl//file_jk/before\crypto\evp\e_aes.c:977:51, line:978:34>
|-FunctionDecl 0x16f6a972338 <line:1933:1, line:2028:1> line:1933:12 invalid aes_ccm_ctrl 'int (int *, int, int, void *)' static
| |-ParmVarDecl 0x16f6a972108 <col:25, col:41> col:41 invalid c 'int *'
| |-ParmVarDecl 0x16f6a972188 <col:44, col:48> col:48 used type 'int'
| |-ParmVarDecl 0x16f6a972208 <col:54, col:58> col:58 used arg 'int'
| |-ParmVarDecl 0x16f6a972288 <col:63, col:69> col:69 used ptr 'void *'
| `-CompoundStmt 0x16f6a97a5b8 <line:1934:1, line:2028:1>
|   |-DeclStmt 0x16f6a972520 <line:1935:5, col:58>
|   | `-VarDecl 0x16f6a972498 <col:5, col:22> col:22 used cctx 'EVP_AES_CCM_CTX *'
|   `-SwitchStmt 0x16f6a972588 <line:1936:5, line:2027:5>
|     |-ImplicitCastExpr 0x16f6a972570 <line:1936:13> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x16f6a972538 <col:13> 'int' lvalue ParmVar 0x16f6a972188 'type' 'int'
|     `-CompoundStmt 0x16f6a97a4b0 <col:19, line:2027:5>
|       |-BinaryOperator 0x16f6a972650 <line:1938:9, col:25> 'int' '='
|       | |-MemberExpr 0x16f6a9725f8 <col:9, col:15> 'int' lvalue ->key_set 0x16f6a919598
|       | | `-ImplicitCastExpr 0x16f6a9725e0 <col:9> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x16f6a9725a8 <col:9> 'EVP_AES_CCM_CTX *' lvalue Var 0x16f6a972498 'cctx' 'EVP_AES_CCM_CTX *'
|       | `-IntegerLiteral 0x16f6a972628 <col:25> 'int' 0
|       |-BinaryOperator 0x16f6a972700 <line:1939:9, col:24> 'int' '='
|       | |-MemberExpr 0x16f6a9726a8 <col:9, col:15> 'int' lvalue ->iv_set 0x16f6a919608
|       | | `-ImplicitCastExpr 0x16f6a972690 <col:9> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x16f6a972670 <col:9> 'EVP_AES_CCM_CTX *' lvalue Var 0x16f6a972498 'cctx' 'EVP_AES_CCM_CTX *'
|       | `-IntegerLiteral 0x16f6a9726d8 <col:24> 'int' 0
|       |-BinaryOperator 0x16f6a9727b0 <line:1940:9, col:19> 'int' '='
|       | |-MemberExpr 0x16f6a972758 <col:9, col:15> 'int' lvalue ->L 0x16f6a919758
|       | | `-ImplicitCastExpr 0x16f6a972740 <col:9> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x16f6a972720 <col:9> 'EVP_AES_CCM_CTX *' lvalue Var 0x16f6a972498 'cctx' 'EVP_AES_CCM_CTX *'
|       | `-IntegerLiteral 0x16f6a972788 <col:19> 'int' 8
|       |-BinaryOperator 0x16f6a972860 <line:1941:9, col:19> 'int' '='
|       | |-MemberExpr 0x16f6a972808 <col:9, col:15> 'int' lvalue ->M 0x16f6a9197c8
|       | | `-ImplicitCastExpr 0x16f6a9727f0 <col:9> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x16f6a9727d0 <col:9> 'EVP_AES_CCM_CTX *' lvalue Var 0x16f6a972498 'cctx' 'EVP_AES_CCM_CTX *'
|       | `-IntegerLiteral 0x16f6a972838 <col:19> 'int' 12
|       |-BinaryOperator 0x16f6a972910 <line:1942:9, col:25> 'int' '='
|       | |-MemberExpr 0x16f6a9728b8 <col:9, col:15> 'int' lvalue ->tag_set 0x16f6a919678
|       | | `-ImplicitCastExpr 0x16f6a9728a0 <col:9> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x16f6a972880 <col:9> 'EVP_AES_CCM_CTX *' lvalue Var 0x16f6a972498 'cctx' 'EVP_AES_CCM_CTX *'
|       | `-IntegerLiteral 0x16f6a9728e8 <col:25> 'int' 0
|       |-BinaryOperator 0x16f6a9729c0 <line:1943:9, col:25> 'int' '='
|       | |-MemberExpr 0x16f6a972968 <col:9, col:15> 'int' lvalue ->len_set 0x16f6a9196e8
|       | | `-ImplicitCastExpr 0x16f6a972950 <col:9> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x16f6a972930 <col:9> 'EVP_AES_CCM_CTX *' lvalue Var 0x16f6a972498 'cctx' 'EVP_AES_CCM_CTX *'
|       | `-IntegerLiteral 0x16f6a972998 <col:25> 'int' 0
|       |-BinaryOperator 0x16f6a972a88 <line:1944:9, col:30> 'int' '='
|       | |-MemberExpr 0x16f6a972a18 <col:9, col:15> 'int' lvalue ->tls_aad_len 0x16f6a919838
|       | | `-ImplicitCastExpr 0x16f6a972a00 <col:9> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x16f6a9729e0 <col:9> 'EVP_AES_CCM_CTX *' lvalue Var 0x16f6a972498 'cctx' 'EVP_AES_CCM_CTX *'
|       | `-UnaryOperator 0x16f6a972a70 <col:29, col:30> 'int' prefix '-'
|       |   `-IntegerLiteral 0x16f6a972a48 <col:30> 'int' 1
|       |-ReturnStmt 0x16f6a972ad0 <line:1945:9, col:16>
|       | `-IntegerLiteral 0x16f6a972aa8 <col:16> 'int' 1
|       |-IfStmt 0x16f6a972b68 <line:1949:9, line:1950:20>
|       | |-OpaqueValueExpr 0x16f6a972b50 <<invalid sloc>> '_Bool'
|       | `-ReturnStmt 0x16f6a972b40 <col:13, col:20>
|       |   `-IntegerLiteral 0x16f6a972b18 <col:20> 'int' 0
|       |-BinaryOperator 0x16f6a972cb8 <line:1952:9, col:29> 'int' '='
|       | |-MemberExpr 0x16f6a972c50 <col:9, col:15> 'int' lvalue ->tls_aad_len 0x16f6a919838
|       | | `-ImplicitCastExpr 0x16f6a972c38 <col:9> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x16f6a972c18 <col:9> 'EVP_AES_CCM_CTX *' lvalue Var 0x16f6a972498 'cctx' 'EVP_AES_CCM_CTX *'
|       | `-ImplicitCastExpr 0x16f6a972ca0 <col:29> 'int' <LValueToRValue>
|       |   `-DeclRefExpr 0x16f6a972c80 <col:29> 'int' lvalue ParmVar 0x16f6a972208 'arg' 'int'
|       |-CompoundStmt 0x16f6a9780e8 <line:1953:9, line:1969:9>
|       | |-IfStmt 0x16f6a972d28 <line:1958:13, line:1959:24>
|       | | |-OpaqueValueExpr 0x16f6a972d10 <<invalid sloc>> '_Bool'
|       | | `-ReturnStmt 0x16f6a972d00 <col:17, col:24>
|       | |   `-IntegerLiteral 0x16f6a972cd8 <col:24> 'int' 0
|       | `-IfStmt 0x16f6a972ec8 <line:1962:13, line:1966:13>
|       |   |-OpaqueValueExpr 0x16f6a972eb0 <<invalid sloc>> '_Bool'
|       |   `-CompoundStmt 0x16f6a972e98 <line:1962:48, line:1966:13>
|       |     `-IfStmt 0x16f6a972e18 <line:1963:17, line:1964:28>
|       |       |-OpaqueValueExpr 0x16f6a972e00 <<invalid sloc>> '_Bool'
|       |       `-ReturnStmt 0x16f6a972df0 <col:21, col:28>
|       |         `-IntegerLiteral 0x16f6a972dc8 <col:28> 'int' 0
|       |-ReturnStmt 0x16f6a978188 <line:1971:9, col:22>
|       | `-ImplicitCastExpr 0x16f6a978170 <col:16, col:22> 'int' <LValueToRValue>
|       |   `-MemberExpr 0x16f6a978140 <col:16, col:22> 'int' lvalue ->M 0x16f6a9197c8
|       |     `-ImplicitCastExpr 0x16f6a978128 <col:16> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|       |       `-DeclRefExpr 0x16f6a978108 <col:16> 'EVP_AES_CCM_CTX *' lvalue Var 0x16f6a972498 'cctx' 'EVP_AES_CCM_CTX *'
|       |-IfStmt 0x16f6a978208 <line:1975:9, line:1976:20>
|       | |-OpaqueValueExpr 0x16f6a9781f0 <<invalid sloc>> '_Bool'
|       | `-ReturnStmt 0x16f6a9781e0 <col:13, col:20>
|       |   `-IntegerLiteral 0x16f6a9781b8 <col:20> 'int' 0
|       |-ReturnStmt 0x16f6a9782c8 <line:1979:9, col:16>
|       | `-IntegerLiteral 0x16f6a9782a0 <col:16> 'int' 1
|       |-BinaryOperator 0x16f6a978378 <line:1982:9, col:20> 'int' '='
|       | |-DeclRefExpr 0x16f6a9782d8 <col:9> 'int' lvalue ParmVar 0x16f6a972208 'arg' 'int'
|       | `-BinaryOperator 0x16f6a978358 <col:15, col:20> 'int' '-'
|       |   |-IntegerLiteral 0x16f6a9782f8 <col:15> 'int' 15
|       |   `-ImplicitCastExpr 0x16f6a978340 <col:20> 'int' <LValueToRValue>
|       |     `-DeclRefExpr 0x16f6a978320 <col:20> 'int' lvalue ParmVar 0x16f6a972208 'arg' 'int'
|       |-IfStmt 0x16f6a9784f0 <line:1985:9, line:1986:20>
|       | |-BinaryOperator 0x16f6a978498 <line:1985:13, col:30> 'int' '||'
|       | | |-BinaryOperator 0x16f6a9783f8 <col:13, col:19> 'int' '<'
|       | | | |-ImplicitCastExpr 0x16f6a9783e0 <col:13> 'int' <LValueToRValue>
|       | | | | `-DeclRefExpr 0x16f6a978398 <col:13> 'int' lvalue ParmVar 0x16f6a972208 'arg' 'int'
|       | | | `-IntegerLiteral 0x16f6a9783b8 <col:19> 'int' 2
|       | | `-BinaryOperator 0x16f6a978478 <col:24, col:30> 'int' '>'
|       | |   |-ImplicitCastExpr 0x16f6a978460 <col:24> 'int' <LValueToRValue>
|       | |   | `-DeclRefExpr 0x16f6a978418 <col:24> 'int' lvalue ParmVar 0x16f6a972208 'arg' 'int'
|       | |   `-IntegerLiteral 0x16f6a978438 <col:30> 'int' 8
|       | `-ReturnStmt 0x16f6a9784e0 <line:1986:13, col:20>
|       |   `-IntegerLiteral 0x16f6a9784b8 <col:20> 'int' 0
|       |-BinaryOperator 0x16f6a9785a8 <line:1987:9, col:19> 'int' '='
|       | |-MemberExpr 0x16f6a978540 <col:9, col:15> 'int' lvalue ->L 0x16f6a919758
|       | | `-ImplicitCastExpr 0x16f6a978528 <col:9> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x16f6a978508 <col:9> 'EVP_AES_CCM_CTX *' lvalue Var 0x16f6a972498 'cctx' 'EVP_AES_CCM_CTX *'
|       | `-ImplicitCastExpr 0x16f6a978590 <col:19> 'int' <LValueToRValue>
|       |   `-DeclRefExpr 0x16f6a978570 <col:19> 'int' lvalue ParmVar 0x16f6a972208 'arg' 'int'
|       |-ReturnStmt 0x16f6a9785f0 <line:1988:9, col:16>
|       | `-IntegerLiteral 0x16f6a9785c8 <col:16> 'int' 1
|       |-IfStmt 0x16f6a978818 <line:1991:9, line:1992:20>
|       | |-BinaryOperator 0x16f6a9787c0 <line:1991:13, col:43> 'int' '||'
|       | | |-BinaryOperator 0x16f6a978720 <col:13, col:32> 'int' '||'
|       | | | |-ParenExpr 0x16f6a978680 <col:13, col:21> 'int'
|       | | | | `-BinaryOperator 0x16f6a978660 <col:14, col:20> 'int' '&'
|       | | | |   |-ImplicitCastExpr 0x16f6a978648 <col:14> 'int' <LValueToRValue>
|       | | | |   | `-DeclRefExpr 0x16f6a978600 <col:14> 'int' lvalue ParmVar 0x16f6a972208 'arg' 'int'
|       | | | |   `-IntegerLiteral 0x16f6a978620 <col:20> 'int' 1
|       | | | `-BinaryOperator 0x16f6a978700 <col:26, col:32> 'int' '<'
|       | | |   |-ImplicitCastExpr 0x16f6a9786e8 <col:26> 'int' <LValueToRValue>
|       | | |   | `-DeclRefExpr 0x16f6a9786a0 <col:26> 'int' lvalue ParmVar 0x16f6a972208 'arg' 'int'
|       | | |   `-IntegerLiteral 0x16f6a9786c0 <col:32> 'int' 4
|       | | `-BinaryOperator 0x16f6a9787a0 <col:37, col:43> 'int' '>'
|       | |   |-ImplicitCastExpr 0x16f6a978788 <col:37> 'int' <LValueToRValue>
|       | |   | `-DeclRefExpr 0x16f6a978740 <col:37> 'int' lvalue ParmVar 0x16f6a972208 'arg' 'int'
|       | |   `-IntegerLiteral 0x16f6a978760 <col:43> 'int' 16
|       | `-ReturnStmt 0x16f6a978808 <line:1992:13, col:20>
|       |   `-IntegerLiteral 0x16f6a9787e0 <col:20> 'int' 0
|       |-IfStmt 0x16f6a9788c0 <line:1993:9, line:1994:20>
|       | |-OpaqueValueExpr 0x16f6a9788a8 <<invalid sloc>> '_Bool'
|       | `-ReturnStmt 0x16f6a978898 <col:13, col:20>
|       |   `-IntegerLiteral 0x16f6a978870 <col:20> 'int' 0
|       |-IfStmt 0x16f6a978a58 <line:1995:9, line:1998:9>
|       | |-ImplicitCastExpr 0x16f6a9788f8 <line:1995:13> 'void *' <LValueToRValue>
|       | | `-DeclRefExpr 0x16f6a9788d8 <col:13> 'void *' lvalue ParmVar 0x16f6a972288 'ptr' 'void *'
|       | `-CompoundStmt 0x16f6a978a40 <col:18, line:1998:9>
|       |   `-BinaryOperator 0x16f6a9789a0 <line:1996:13, col:29> 'int' '='
|       |     |-MemberExpr 0x16f6a978948 <col:13, col:19> 'int' lvalue ->tag_set 0x16f6a919678
|       |     | `-ImplicitCastExpr 0x16f6a978930 <col:13> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|       |     |   `-DeclRefExpr 0x16f6a978910 <col:13> 'EVP_AES_CCM_CTX *' lvalue Var 0x16f6a972498 'cctx' 'EVP_AES_CCM_CTX *'
|       |     `-IntegerLiteral 0x16f6a978978 <col:29> 'int' 1
|       |-BinaryOperator 0x16f6a978b10 <line:1999:9, col:19> 'int' '='
|       | |-MemberExpr 0x16f6a978aa8 <col:9, col:15> 'int' lvalue ->M 0x16f6a9197c8
|       | | `-ImplicitCastExpr 0x16f6a978a90 <col:9> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x16f6a978a70 <col:9> 'EVP_AES_CCM_CTX *' lvalue Var 0x16f6a972498 'cctx' 'EVP_AES_CCM_CTX *'
|       | `-ImplicitCastExpr 0x16f6a978af8 <col:19> 'int' <LValueToRValue>
|       |   `-DeclRefExpr 0x16f6a978ad8 <col:19> 'int' lvalue ParmVar 0x16f6a972208 'arg' 'int'
|       |-ReturnStmt 0x16f6a978b58 <line:2000:9, col:16>
|       | `-IntegerLiteral 0x16f6a978b30 <col:16> 'int' 1
|       |-IfStmt 0x16f6a978c70 <line:2003:9, line:2004:20>
|       | |-OpaqueValueExpr 0x16f6a978c58 <<invalid sloc>> '_Bool'
|       | `-ReturnStmt 0x16f6a978c48 <col:13, col:20>
|       |   `-IntegerLiteral 0x16f6a978c20 <col:20> 'int' 0
|       |-IfStmt 0x16f6a978eb0 <line:2005:9, line:2006:20>
|       | |-OpaqueValueExpr 0x16f6a978e98 <<invalid sloc>> '_Bool'
|       | `-ReturnStmt 0x16f6a978e88 <col:13, col:20>
|       |   `-IntegerLiteral 0x16f6a978e60 <col:20> 'int' 0
|       |-BinaryOperator 0x16f6a978f58 <line:2007:9, col:25> 'int' '='
|       | |-MemberExpr 0x16f6a978f00 <col:9, col:15> 'int' lvalue ->tag_set 0x16f6a919678
|       | | `-ImplicitCastExpr 0x16f6a978ee8 <col:9> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x16f6a978ec8 <col:9> 'EVP_AES_CCM_CTX *' lvalue Var 0x16f6a972498 'cctx' 'EVP_AES_CCM_CTX *'
|       | `-IntegerLiteral 0x16f6a978f30 <col:25> 'int' 0
|       |-BinaryOperator 0x16f6a979008 <line:2008:9, col:24> 'int' '='
|       | |-MemberExpr 0x16f6a978fb0 <col:9, col:15> 'int' lvalue ->iv_set 0x16f6a919608
|       | | `-ImplicitCastExpr 0x16f6a978f98 <col:9> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x16f6a978f78 <col:9> 'EVP_AES_CCM_CTX *' lvalue Var 0x16f6a972498 'cctx' 'EVP_AES_CCM_CTX *'
|       | `-IntegerLiteral 0x16f6a978fe0 <col:24> 'int' 0
|       |-BinaryOperator 0x16f6a97a0d8 <line:2009:9, col:25> 'int' '='
|       | |-MemberExpr 0x16f6a97a080 <col:9, col:15> 'int' lvalue ->len_set 0x16f6a9196e8
|       | | `-ImplicitCastExpr 0x16f6a979048 <col:9> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x16f6a979028 <col:9> 'EVP_AES_CCM_CTX *' lvalue Var 0x16f6a972498 'cctx' 'EVP_AES_CCM_CTX *'
|       | `-IntegerLiteral 0x16f6a97a0b0 <col:25> 'int' 0
|       |-ReturnStmt 0x16f6a97a120 <line:2010:9, col:16>
|       | `-IntegerLiteral 0x16f6a97a0f8 <col:16> 'int' 1
|       |-CompoundStmt 0x16f6a97a418 <line:2013:9, line:2022:9>
|       | |-DeclStmt 0x16f6a97a1e8 <line:2015:13, col:72>
|       | | `-VarDecl 0x16f6a97a160 <col:13, col:30> col:30 used cctx_out 'EVP_AES_CCM_CTX *'
|       | |-IfStmt 0x16f6a97a3c8 <line:2016:13, line:2020:13>
|       | | |-OpaqueValueExpr 0x16f6a97a3b0 <<invalid sloc>> '_Bool'
|       | | `-CompoundStmt 0x16f6a97a398 <line:2016:32, line:2020:13>
|       | |   `-IfStmt 0x16f6a97a2f8 <line:2017:17, line:2018:28>
|       | |     |-OpaqueValueExpr 0x16f6a97a2e0 <<invalid sloc>> '_Bool'
|       | |     `-ReturnStmt 0x16f6a97a2d0 <col:21, col:28>
|       | |       `-IntegerLiteral 0x16f6a97a2a8 <col:28> 'int' 0
|       | `-ReturnStmt 0x16f6a97a408 <line:2021:13, col:20>
|       |   `-IntegerLiteral 0x16f6a97a3e0 <col:20> 'int' 1
|       `-DefaultStmt 0x16f6a97a490 <line:2024:5, line:2025:17>
|         `-ReturnStmt 0x16f6a97a480 <col:9, col:17>
|           `-UnaryOperator 0x16f6a97a468 <col:16, col:17> 'int' prefix '-'
|             `-IntegerLiteral 0x16f6a97a440 <col:17> 'int' 1
|-FunctionDecl 0x16f6a97a820 <line:2030:1, line:2073:1> line:2030:12 invalid aes_ccm_init_key 'int (int *, const unsigned char *, const unsigned char *, int)' static
| |-ParmVarDecl 0x16f6a97a5f0 <col:29, col:45> col:45 invalid ctx 'int *'
| |-ParmVarDecl 0x16f6a97a670 <col:50, col:71> col:71 used key 'const unsigned char *'
| |-ParmVarDecl 0x16f6a97a6f0 <line:2031:29, col:50> col:50 used iv 'const unsigned char *'
| |-ParmVarDecl 0x16f6a97a770 <col:54, col:58> col:58 enc 'int'
| `-CompoundStmt 0x16f6a974260 <line:2032:1, line:2073:1>
|   |-DeclStmt 0x16f6a97a990 <line:2033:5, col:60>
|   | `-VarDecl 0x16f6a97a908 <col:5, col:22> col:22 used cctx 'EVP_AES_CCM_CTX *'
|   |-IfStmt 0x16f6a97aad0 <line:2034:5, line:2035:16>
|   | |-BinaryOperator 0x16f6a97aa78 <line:2034:9, col:17> 'int' '&&'
|   | | |-UnaryOperator 0x16f6a97a9f8 <col:9, col:10> 'int' prefix '!' cannot overflow
|   | | | `-ImplicitCastExpr 0x16f6a97a9e0 <col:10> 'const unsigned char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x16f6a97a9a8 <col:10> 'const unsigned char *' lvalue ParmVar 0x16f6a97a6f0 'iv' 'const unsigned char *'
|   | | `-UnaryOperator 0x16f6a97aa60 <col:16, col:17> 'int' prefix '!' cannot overflow
|   | |   `-ImplicitCastExpr 0x16f6a97aa48 <col:17> 'const unsigned char *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x16f6a97aa10 <col:17> 'const unsigned char *' lvalue ParmVar 0x16f6a97a670 'key' 'const unsigned char *'
|   | `-ReturnStmt 0x16f6a97aac0 <line:2035:9, col:16>
|   |   `-IntegerLiteral 0x16f6a97aa98 <col:16> 'int' 1
|   |-IfStmt 0x16f6a97b018 <line:2036:5, line:2067:19>
|   | |-ImplicitCastExpr 0x16f6a97ab08 <line:2036:9> 'const unsigned char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x16f6a97aae8 <col:9> 'const unsigned char *' lvalue ParmVar 0x16f6a97a670 'key' 'const unsigned char *'
|   | `-DoStmt 0x16f6a97aff8 <line:2037:9, line:2067:19>
|   |   |-CompoundStmt 0x16f6a97afb8 <line:2037:12, line:2067:9>
|   |   | `-BinaryOperator 0x16f6a97af98 <line:2066:13, col:29> 'int' '='
|   |   |   |-MemberExpr 0x16f6a97af40 <col:13, col:19> 'int' lvalue ->key_set 0x16f6a919598
|   |   |   | `-ImplicitCastExpr 0x16f6a97af28 <col:13> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x16f6a97af08 <col:13> 'EVP_AES_CCM_CTX *' lvalue Var 0x16f6a97a908 'cctx' 'EVP_AES_CCM_CTX *'
|   |   |   `-IntegerLiteral 0x16f6a97af70 <col:29> 'int' 1
|   |   `-IntegerLiteral 0x16f6a97afd0 <line:2067:18> 'int' 0
|   |-IfStmt 0x16f6a974210 <line:2068:5, line:2071:5>
|   | |-ImplicitCastExpr 0x16f6a97b050 <line:2068:9> 'const unsigned char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x16f6a97b030 <col:9> 'const unsigned char *' lvalue ParmVar 0x16f6a97a6f0 'iv' 'const unsigned char *'
|   | `-CompoundStmt 0x16f6a9741f8 <col:13, line:2071:5>
|   |   `-BinaryOperator 0x16f6a9741d8 <line:2070:9, col:24> 'int' '='
|   |     |-MemberExpr 0x16f6a974180 <col:9, col:15> 'int' lvalue ->iv_set 0x16f6a919608
|   |     | `-ImplicitCastExpr 0x16f6a974168 <col:9> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x16f6a974148 <col:9> 'EVP_AES_CCM_CTX *' lvalue Var 0x16f6a97a908 'cctx' 'EVP_AES_CCM_CTX *'
|   |     `-IntegerLiteral 0x16f6a9741b0 <col:24> 'int' 1
|   `-ReturnStmt 0x16f6a974250 <line:2072:5, col:12>
|     `-IntegerLiteral 0x16f6a974228 <col:12> 'int' 1
|-FunctionDecl 0x16f6a9744d8 <line:2075:1, line:2121:1> line:2075:12 invalid aes_ccm_tls_cipher 'int (int *, unsigned char *, const unsigned char *, size_t)' static
| |-ParmVarDecl 0x16f6a9742b0 <col:31, col:47> col:47 invalid ctx 'int *'
| |-ParmVarDecl 0x16f6a974330 <col:52, col:67> col:67 used out 'unsigned char *'
| |-ParmVarDecl 0x16f6a9743b0 <line:2076:31, col:52> col:52 used in 'const unsigned char *'
| |-ParmVarDecl 0x16f6a974428 <col:56, col:63> col:63 used len 'size_t':'unsigned long long'
| `-CompoundStmt 0x16f6a973e60 <line:2077:1, line:2121:1>
|   |-DeclStmt 0x16f6a974648 <line:2078:5, col:60>
|   | `-VarDecl 0x16f6a9745c0 <col:5, col:22> col:22 used cctx 'EVP_AES_CCM_CTX *'
|   |-IfStmt 0x16f6a9748e0 <line:2081:5, line:2082:17>
|   | |-OpaqueValueExpr 0x16f6a9748c8 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x16f6a9748b8 <col:9, col:17>
|   |   `-UnaryOperator 0x16f6a9748a0 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x16f6a974878 <col:17> 'int' 1
|   |-IfStmt 0x16f6a974ce0 <line:2092:5, line:2094:21>
|   | |-OpaqueValueExpr 0x16f6a974cc8 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x16f6a974cb8 <col:13, col:21>
|   |   `-UnaryOperator 0x16f6a974ca0 <col:20, col:21> 'int' prefix '-'
|   |     `-IntegerLiteral 0x16f6a974c78 <col:21> 'int' 1
|   `-IfStmt 0x16f6a973e38 <line:2100:5, line:2120:5> has_else
|     |-OpaqueValueExpr 0x16f6a973e20 <<invalid sloc>> '_Bool'
|     |-CompoundStmt 0x16f6a9734d8 <line:2100:41, line:2108:5>
|     | |-IfStmt 0x16f6a9732a0 <line:2101:9, line:2104:21>
|     | | |-OpaqueValueExpr 0x16f6a973288 <<invalid sloc>> '_Bool'
|     | | `-ReturnStmt 0x16f6a973278 <col:13, col:21>
|     | |   `-UnaryOperator 0x16f6a973260 <col:20, col:21> 'int' prefix '-'
|     | |     `-IntegerLiteral 0x16f6a973238 <col:21> 'int' 1
|     | `-IfStmt 0x16f6a973438 <line:2105:9, line:2106:21>
|     |   |-OpaqueValueExpr 0x16f6a973420 <<invalid sloc>> '_Bool'
|     |   `-ReturnStmt 0x16f6a973410 <col:13, col:21>
|     |     `-UnaryOperator 0x16f6a9733f8 <col:20, col:21> 'int' prefix '-'
|     |       `-IntegerLiteral 0x16f6a9733d0 <col:21> 'int' 1
|     `-CompoundStmt 0x16f6a973df8 <line:2108:12, line:2120:5>
|       |-IfStmt 0x16f6a973cb8 <line:2109:9, line:2117:9>
|       | |-OpaqueValueExpr 0x16f6a973ca0 <<invalid sloc>> '_Bool'
|       | `-CompoundStmt 0x16f6a973c80 <line:2111:56, line:2117:9>
|       |   |-DeclStmt 0x16f6a973918 <line:2112:13, col:34>
|       |   | `-VarDecl 0x16f6a9738b0 <col:13, col:33> col:27 used tag 'unsigned char [16]'
|       |   `-IfStmt 0x16f6a973c68 <line:2113:13, line:2116:13>
|       |     |-OpaqueValueExpr 0x16f6a973c50 <<invalid sloc>> '_Bool'
|       |     `-CompoundStmt 0x16f6a973c38 <line:2113:55, line:2116:13>
|       |       `-IfStmt 0x16f6a973c20 <line:2114:17, line:2115:28>
|       |         |-UnaryOperator 0x16f6a973ba8 <line:2114:21, col:58> 'int' prefix '!' cannot overflow
|       |         | `-CallExpr 0x16f6a973b40 <col:22, col:58> 'int'
|       |         |   |-ImplicitCastExpr 0x16f6a973b28 <col:22> 'int (*)()' <FunctionToPointerDecay>
|       |         |   | `-DeclRefExpr 0x16f6a9739f0 <col:22> 'int ()' Function 0x16f6a8d8330 'CRYPTO_memcmp' 'int ()'
|       |         |   |-ImplicitCastExpr 0x16f6a973b78 <col:36> 'unsigned char *' <ArrayToPointerDecay>
|       |         |   | `-DeclRefExpr 0x16f6a973a10 <col:36> 'unsigned char [16]' lvalue Var 0x16f6a9738b0 'tag' 'unsigned char [16]'
|       |         |   |-BinaryOperator 0x16f6a973aa0 <col:41, col:46> 'const unsigned char *' '+'
|       |         |   | |-ImplicitCastExpr 0x16f6a973a70 <col:41> 'const unsigned char *' <LValueToRValue>
|       |         |   | | `-DeclRefExpr 0x16f6a973a30 <col:41> 'const unsigned char *' lvalue ParmVar 0x16f6a9743b0 'in' 'const unsigned char *'
|       |         |   | `-ImplicitCastExpr 0x16f6a973a88 <col:46> 'size_t':'unsigned long long' <LValueToRValue>
|       |         |   |   `-DeclRefExpr 0x16f6a973a50 <col:46> 'size_t':'unsigned long long' lvalue ParmVar 0x16f6a974428 'len' 'size_t':'unsigned long long'
|       |         |   `-ImplicitCastExpr 0x16f6a973b90 <col:51, col:57> 'int' <LValueToRValue>
|       |         |     `-MemberExpr 0x16f6a973af8 <col:51, col:57> 'int' lvalue ->M 0x16f6a9197c8
|       |         |       `-ImplicitCastExpr 0x16f6a973ae0 <col:51> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|       |         |         `-DeclRefExpr 0x16f6a973ac0 <col:51> 'EVP_AES_CCM_CTX *' lvalue Var 0x16f6a9745c0 'cctx' 'EVP_AES_CCM_CTX *'
|       |         `-ReturnStmt 0x16f6a973c10 <line:2115:21, col:28>
|       |           `-ImplicitCastExpr 0x16f6a973bf8 <col:28> 'int' <IntegralCast>
|       |             `-ImplicitCastExpr 0x16f6a973be0 <col:28> 'size_t':'unsigned long long' <LValueToRValue>
|       |               `-DeclRefExpr 0x16f6a973bc0 <col:28> 'size_t':'unsigned long long' lvalue ParmVar 0x16f6a974428 'len' 'size_t':'unsigned long long'
|       |-CallExpr 0x16f6a973d48 <line:2118:9, col:33> 'int'
|       | |-ImplicitCastExpr 0x16f6a973d30 <col:9> 'int (*)()' <FunctionToPointerDecay>
|       | | `-DeclRefExpr 0x16f6a973cd0 <col:9> 'int ()' Function 0x16f6a8d6440 'OPENSSL_cleanse' 'int ()'
|       | |-ImplicitCastExpr 0x16f6a973d78 <col:25> 'unsigned char *' <LValueToRValue>
|       | | `-DeclRefExpr 0x16f6a973cf0 <col:25> 'unsigned char *' lvalue ParmVar 0x16f6a974330 'out' 'unsigned char *'
|       | `-ImplicitCastExpr 0x16f6a973d90 <col:30> 'size_t':'unsigned long long' <LValueToRValue>
|       |   `-DeclRefExpr 0x16f6a973d10 <col:30> 'size_t':'unsigned long long' lvalue ParmVar 0x16f6a974428 'len' 'size_t':'unsigned long long'
|       `-ReturnStmt 0x16f6a973de8 <line:2119:9, col:17>
|         `-UnaryOperator 0x16f6a973dd0 <col:16, col:17> 'int' prefix '-'
|           `-IntegerLiteral 0x16f6a973da8 <col:17> 'int' 1
|-FunctionDecl 0x16f6a97b150 <line:2123:1, line:2190:1> line:2123:12 invalid aes_ccm_cipher 'int (int *, unsigned char *, const unsigned char *, size_t)' static
| |-ParmVarDecl 0x16f6a973ea8 <col:27, col:43> col:43 invalid ctx 'int *'
| |-ParmVarDecl 0x16f6a973f28 <col:48, col:63> col:63 used out 'unsigned char *'
| |-ParmVarDecl 0x16f6a973fa8 <line:2124:27, col:48> col:48 used in 'const unsigned char *'
| |-ParmVarDecl 0x16f6a97b0a0 <col:52, col:59> col:59 used len 'size_t':'unsigned long long'
| `-CompoundStmt 0x16f6a97cf78 <line:2125:1, line:2190:1>
|   |-DeclStmt 0x16f6a97b2c0 <line:2126:5, col:60>
|   | `-VarDecl 0x16f6a97b238 <col:5, col:22> col:22 used cctx 'EVP_AES_CCM_CTX *'
|   |-IfStmt 0x16f6a97b410 <line:2129:5, line:2130:17>
|   | |-UnaryOperator 0x16f6a97b3a8 <line:2129:9, col:16> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x16f6a97b390 <col:10, col:16> 'int' <LValueToRValue>
|   | |   `-MemberExpr 0x16f6a97b360 <col:10, col:16> 'int' lvalue ->key_set 0x16f6a919598
|   | |     `-ImplicitCastExpr 0x16f6a97b348 <col:10> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x16f6a97b328 <col:10> 'EVP_AES_CCM_CTX *' lvalue Var 0x16f6a97b238 'cctx' 'EVP_AES_CCM_CTX *'
|   | `-ReturnStmt 0x16f6a97b400 <line:2130:9, col:17>
|   |   `-UnaryOperator 0x16f6a97b3e8 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x16f6a97b3c0 <col:17> 'int' 1
|   |-IfStmt 0x16f6a97b680 <line:2135:5, line:2136:17>
|   | |-UnaryOperator 0x16f6a97b618 <line:2135:9, col:16> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x16f6a97b600 <col:10, col:16> 'int' <LValueToRValue>
|   | |   `-MemberExpr 0x16f6a97b5d0 <col:10, col:16> 'int' lvalue ->iv_set 0x16f6a919608
|   | |     `-ImplicitCastExpr 0x16f6a97b5b8 <col:10> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x16f6a97b598 <col:10> 'EVP_AES_CCM_CTX *' lvalue Var 0x16f6a97b238 'cctx' 'EVP_AES_CCM_CTX *'
|   | `-ReturnStmt 0x16f6a97b670 <line:2136:9, col:17>
|   |   `-UnaryOperator 0x16f6a97b658 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x16f6a97b630 <col:17> 'int' 1
|   |-IfStmt 0x16f6a97b7b8 <line:2138:5, line:2139:17>
|   | |-OpaqueValueExpr 0x16f6a97b7a0 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x16f6a97b790 <col:9, col:17>
|   |   `-UnaryOperator 0x16f6a97b778 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x16f6a97b750 <col:17> 'int' 1
|   |-IfStmt 0x16f6a97bda8 <line:2140:5, line:2153:5>
|   | |-UnaryOperator 0x16f6a97b808 <line:2140:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x16f6a97b7f0 <col:10> 'unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x16f6a97b7d0 <col:10> 'unsigned char *' lvalue ParmVar 0x16f6a973f28 'out' 'unsigned char *'
|   | `-CompoundStmt 0x16f6a97bd80 <col:15, line:2153:5>
|   |   |-IfStmt 0x16f6a97bb50 <line:2141:9, line:2147:9>
|   |   | |-UnaryOperator 0x16f6a97b858 <line:2141:13, col:14> 'int' prefix '!' cannot overflow
|   |   | | `-ImplicitCastExpr 0x16f6a97b840 <col:14> 'const unsigned char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x16f6a97b820 <col:14> 'const unsigned char *' lvalue ParmVar 0x16f6a973fa8 'in' 'const unsigned char *'
|   |   | `-CompoundStmt 0x16f6a97bb28 <col:18, line:2147:9>
|   |   |   |-IfStmt 0x16f6a97ba00 <line:2142:13, line:2144:25>
|   |   |   | |-OpaqueValueExpr 0x16f6a97b9e8 <<invalid sloc>> '_Bool'
|   |   |   | `-ReturnStmt 0x16f6a97b9d8 <col:17, col:25>
|   |   |   |   `-UnaryOperator 0x16f6a97b9c0 <col:24, col:25> 'int' prefix '-'
|   |   |   |     `-IntegerLiteral 0x16f6a97b998 <col:25> 'int' 1
|   |   |   |-BinaryOperator 0x16f6a97baa8 <line:2145:13, col:29> 'int' '='
|   |   |   | |-MemberExpr 0x16f6a97ba50 <col:13, col:19> 'int' lvalue ->len_set 0x16f6a9196e8
|   |   |   | | `-ImplicitCastExpr 0x16f6a97ba38 <col:13> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x16f6a97ba18 <col:13> 'EVP_AES_CCM_CTX *' lvalue Var 0x16f6a97b238 'cctx' 'EVP_AES_CCM_CTX *'
|   |   |   | `-IntegerLiteral 0x16f6a97ba80 <col:29> 'int' 1
|   |   |   `-ReturnStmt 0x16f6a97bb18 <line:2146:13, col:20>
|   |   |     `-ImplicitCastExpr 0x16f6a97bb00 <col:20> 'int' <IntegralCast>
|   |   |       `-ImplicitCastExpr 0x16f6a97bae8 <col:20> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x16f6a97bac8 <col:20> 'size_t':'unsigned long long' lvalue ParmVar 0x16f6a97b0a0 'len' 'size_t':'unsigned long long'
|   |   |-IfStmt 0x16f6a97bca8 <line:2149:9, line:2150:21>
|   |   | |-BinaryOperator 0x16f6a97bc38 <line:2149:13, col:31> 'int' '&&'
|   |   | | |-UnaryOperator 0x16f6a97bbe8 <col:13, col:20> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x16f6a97bbd0 <col:14, col:20> 'int' <LValueToRValue>
|   |   | | |   `-MemberExpr 0x16f6a97bba0 <col:14, col:20> 'int' lvalue ->len_set 0x16f6a9196e8
|   |   | | |     `-ImplicitCastExpr 0x16f6a97bb88 <col:14> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|   |   | | |       `-DeclRefExpr 0x16f6a97bb68 <col:14> 'EVP_AES_CCM_CTX *' lvalue Var 0x16f6a97b238 'cctx' 'EVP_AES_CCM_CTX *'
|   |   | | `-ImplicitCastExpr 0x16f6a97bc20 <col:31> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x16f6a97bc00 <col:31> 'size_t':'unsigned long long' lvalue ParmVar 0x16f6a97b0a0 'len' 'size_t':'unsigned long long'
|   |   | `-ReturnStmt 0x16f6a97bc98 <line:2150:13, col:21>
|   |   |   `-UnaryOperator 0x16f6a97bc80 <col:20, col:21> 'int' prefix '-'
|   |   |     `-IntegerLiteral 0x16f6a97bc58 <col:21> 'int' 1
|   |   `-ReturnStmt 0x16f6a97bd70 <line:2152:9, col:16>
|   |     `-ImplicitCastExpr 0x16f6a97bd58 <col:16> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x16f6a97bd40 <col:16> 'size_t':'unsigned long long' <LValueToRValue>
|   |         `-DeclRefExpr 0x16f6a97bd20 <col:16> 'size_t':'unsigned long long' lvalue ParmVar 0x16f6a97b0a0 'len' 'size_t':'unsigned long long'
|   |-IfStmt 0x16f6a97be48 <line:2155:5, line:2156:16>
|   | |-UnaryOperator 0x16f6a97bdf8 <line:2155:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x16f6a97bde0 <col:10> 'const unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x16f6a97bdc0 <col:10> 'const unsigned char *' lvalue ParmVar 0x16f6a973fa8 'in' 'const unsigned char *'
|   | `-ReturnStmt 0x16f6a97be38 <line:2156:9, col:16>
|   |   `-IntegerLiteral 0x16f6a97be10 <col:16> 'int' 0
|   |-IfStmt 0x16f6a97c188 <line:2158:5, line:2163:5>
|   | |-UnaryOperator 0x16f6a97bee0 <line:2158:9, col:16> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x16f6a97bec8 <col:10, col:16> 'int' <LValueToRValue>
|   | |   `-MemberExpr 0x16f6a97be98 <col:10, col:16> 'int' lvalue ->len_set 0x16f6a9196e8
|   | |     `-ImplicitCastExpr 0x16f6a97be80 <col:10> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x16f6a97be60 <col:10> 'EVP_AES_CCM_CTX *' lvalue Var 0x16f6a97b238 'cctx' 'EVP_AES_CCM_CTX *'
|   | `-CompoundStmt 0x16f6a97c168 <col:25, line:2163:5>
|   |   |-IfStmt 0x16f6a97c0a0 <line:2159:9, line:2161:21>
|   |   | |-OpaqueValueExpr 0x16f6a97c070 <<invalid sloc>> '_Bool'
|   |   | `-ReturnStmt 0x16f6a97c060 <col:13, col:21>
|   |   |   `-UnaryOperator 0x16f6a97c048 <col:20, col:21> 'int' prefix '-'
|   |   |     `-IntegerLiteral 0x16f6a97c020 <col:21> 'int' 1
|   |   `-BinaryOperator 0x16f6a97c148 <line:2162:9, col:25> 'int' '='
|   |     |-MemberExpr 0x16f6a97c0f0 <col:9, col:15> 'int' lvalue ->len_set 0x16f6a9196e8
|   |     | `-ImplicitCastExpr 0x16f6a97c0d8 <col:9> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x16f6a97c0b8 <col:9> 'EVP_AES_CCM_CTX *' lvalue Var 0x16f6a97b238 'cctx' 'EVP_AES_CCM_CTX *'
|   |     `-IntegerLiteral 0x16f6a97c120 <col:25> 'int' 1
|   `-IfStmt 0x16f6a97cf50 <line:2164:5, line:2189:5> has_else
|     |-OpaqueValueExpr 0x16f6a97cf38 <<invalid sloc>> '_Bool'
|     |-CompoundStmt 0x16f6a97c4c0 <line:2164:41, line:2171:5>
|     | |-IfStmt 0x16f6a97c398 <line:2165:9, line:2168:21>
|     | | |-OpaqueValueExpr 0x16f6a97c380 <<invalid sloc>> '_Bool'
|     | | `-ReturnStmt 0x16f6a97c370 <col:13, col:21>
|     | |   `-UnaryOperator 0x16f6a97c358 <col:20, col:21> 'int' prefix '-'
|     | |     `-IntegerLiteral 0x16f6a97c330 <col:21> 'int' 1
|     | |-BinaryOperator 0x16f6a97c440 <line:2169:9, col:25> 'int' '='
|     | | |-MemberExpr 0x16f6a97c3e8 <col:9, col:15> 'int' lvalue ->tag_set 0x16f6a919678
|     | | | `-ImplicitCastExpr 0x16f6a97c3d0 <col:9> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|     | | |   `-DeclRefExpr 0x16f6a97c3b0 <col:9> 'EVP_AES_CCM_CTX *' lvalue Var 0x16f6a97b238 'cctx' 'EVP_AES_CCM_CTX *'
|     | | `-IntegerLiteral 0x16f6a97c418 <col:25> 'int' 1
|     | `-ReturnStmt 0x16f6a97c4b0 <line:2170:9, col:16>
|     |   `-ImplicitCastExpr 0x16f6a97c498 <col:16> 'int' <IntegralCast>
|     |     `-ImplicitCastExpr 0x16f6a97c480 <col:16> 'size_t':'unsigned long long' <LValueToRValue>
|     |       `-DeclRefExpr 0x16f6a97c460 <col:16> 'size_t':'unsigned long long' lvalue ParmVar 0x16f6a97b0a0 'len' 'size_t':'unsigned long long'
|     `-CompoundStmt 0x16f6a97cef0 <line:2171:12, line:2189:5>
|       |-DeclStmt 0x16f6a97c5a8 <line:2172:9, col:20>
|       | `-VarDecl 0x16f6a97c500 <col:9, col:19> col:13 used rv 'int' cinit
|       |   `-UnaryOperator 0x16f6a97c590 <col:18, col:19> 'int' prefix '-'
|       |     `-IntegerLiteral 0x16f6a97c568 <col:19> 'int' 1
|       |-IfStmt 0x16f6a97caf8 <line:2173:9, line:2182:9>
|       | |-OpaqueValueExpr 0x16f6a97cae0 <<invalid sloc>> '_Bool'
|       | `-CompoundStmt 0x16f6a97cac0 <line:2175:56, line:2182:9>
|       |   |-DeclStmt 0x16f6a97c800 <line:2176:13, col:34>
|       |   | `-VarDecl 0x16f6a97c798 <col:13, col:33> col:27 used tag 'unsigned char [16]'
|       |   `-IfStmt 0x16f6a97caa8 <line:2177:13, line:2181:13>
|       |     |-OpaqueValueExpr 0x16f6a97ca90 <<invalid sloc>> '_Bool'
|       |     `-CompoundStmt 0x16f6a97ca78 <line:2177:55, line:2181:13>
|       |       `-IfStmt 0x16f6a97ca60 <line:2178:17, line:2180:26>
|       |         |-OpaqueValueExpr 0x16f6a97ca48 <<invalid sloc>> '_Bool'
|       |         `-BinaryOperator 0x16f6a97ca28 <col:21, col:26> 'int' '='
|       |           |-DeclRefExpr 0x16f6a97c9a0 <col:21> 'int' lvalue Var 0x16f6a97c500 'rv' 'int'
|       |           `-ImplicitCastExpr 0x16f6a97ca10 <col:26> 'int' <IntegralCast>
|       |             `-ImplicitCastExpr 0x16f6a97c9f8 <col:26> 'size_t':'unsigned long long' <LValueToRValue>
|       |               `-DeclRefExpr 0x16f6a97c9d8 <col:26> 'size_t':'unsigned long long' lvalue ParmVar 0x16f6a97b0a0 'len' 'size_t':'unsigned long long'
|       |-IfStmt 0x16f6a97cc80 <line:2183:9, line:2184:37>
|       | |-BinaryOperator 0x16f6a97cb88 <line:2183:13, col:20> 'int' '=='
|       | | |-ImplicitCastExpr 0x16f6a97cb70 <col:13> 'int' <LValueToRValue>
|       | | | `-DeclRefExpr 0x16f6a97cb10 <col:13> 'int' lvalue Var 0x16f6a97c500 'rv' 'int'
|       | | `-UnaryOperator 0x16f6a97cb58 <col:19, col:20> 'int' prefix '-'
|       | |   `-IntegerLiteral 0x16f6a97cb30 <col:20> 'int' 1
|       | `-CallExpr 0x16f6a97cc20 <line:2184:13, col:37> 'int'
|       |   |-ImplicitCastExpr 0x16f6a97cc08 <col:13> 'int (*)()' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x16f6a97cba8 <col:13> 'int ()' Function 0x16f6a8d6440 'OPENSSL_cleanse' 'int ()'
|       |   |-ImplicitCastExpr 0x16f6a97cc50 <col:29> 'unsigned char *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x16f6a97cbc8 <col:29> 'unsigned char *' lvalue ParmVar 0x16f6a973f28 'out' 'unsigned char *'
|       |   `-ImplicitCastExpr 0x16f6a97cc68 <col:34> 'size_t':'unsigned long long' <LValueToRValue>
|       |     `-DeclRefExpr 0x16f6a97cbe8 <col:34> 'size_t':'unsigned long long' lvalue ParmVar 0x16f6a97b0a0 'len' 'size_t':'unsigned long long'
|       |-BinaryOperator 0x16f6a97cd28 <line:2185:9, col:24> 'int' '='
|       | |-MemberExpr 0x16f6a97ccd0 <col:9, col:15> 'int' lvalue ->iv_set 0x16f6a919608
|       | | `-ImplicitCastExpr 0x16f6a97ccb8 <col:9> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x16f6a97cc98 <col:9> 'EVP_AES_CCM_CTX *' lvalue Var 0x16f6a97b238 'cctx' 'EVP_AES_CCM_CTX *'
|       | `-IntegerLiteral 0x16f6a97cd00 <col:24> 'int' 0
|       |-BinaryOperator 0x16f6a97cdd8 <line:2186:9, col:25> 'int' '='
|       | |-MemberExpr 0x16f6a97cd80 <col:9, col:15> 'int' lvalue ->tag_set 0x16f6a919678
|       | | `-ImplicitCastExpr 0x16f6a97cd68 <col:9> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x16f6a97cd48 <col:9> 'EVP_AES_CCM_CTX *' lvalue Var 0x16f6a97b238 'cctx' 'EVP_AES_CCM_CTX *'
|       | `-IntegerLiteral 0x16f6a97cdb0 <col:25> 'int' 0
|       |-BinaryOperator 0x16f6a97ce88 <line:2187:9, col:25> 'int' '='
|       | |-MemberExpr 0x16f6a97ce30 <col:9, col:15> 'int' lvalue ->len_set 0x16f6a9196e8
|       | | `-ImplicitCastExpr 0x16f6a97ce18 <col:9> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x16f6a97cdf8 <col:9> 'EVP_AES_CCM_CTX *' lvalue Var 0x16f6a97b238 'cctx' 'EVP_AES_CCM_CTX *'
|       | `-IntegerLiteral 0x16f6a97ce60 <col:25> 'int' 0
|       `-ReturnStmt 0x16f6a97cee0 <line:2188:9, col:16>
|         `-ImplicitCastExpr 0x16f6a97cec8 <col:16> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x16f6a97cea8 <col:16> 'int' lvalue Var 0x16f6a97c500 'rv' 'int'
|-VarDecl 0x16f6a97cfe0 <line:967:74, <scratch space>:171:1> col:1 invalid aes_128_ccm 'const int' static
|-FunctionDecl 0x16f6a97d440 <.//openssl//file_jk/before\crypto\evp\e_aes.c:976:45, line:978:34> <scratch space>:192:1 invalid EVP_aes_128_ccm 'const int *(void)'
| `-CompoundStmt 0x16f6a97d4f8 <.//openssl//file_jk/before\crypto\evp\e_aes.c:977:51, line:978:34>
|-VarDecl 0x16f6a97d520 <line:967:74, <scratch space>:198:1> col:1 invalid aes_192_ccm 'const int' static
|-FunctionDecl 0x16f6a97d968 <.//openssl//file_jk/before\crypto\evp\e_aes.c:976:45, line:978:34> <scratch space>:219:1 invalid EVP_aes_192_ccm 'const int *(void)'
| `-CompoundStmt 0x16f6a97da20 <.//openssl//file_jk/before\crypto\evp\e_aes.c:977:51, line:978:34>
|-VarDecl 0x16f6a97da48 <line:967:74, <scratch space>:225:1> col:1 invalid aes_256_ccm 'const int' static
|-FunctionDecl 0x16f6a97de90 <.//openssl//file_jk/before\crypto\evp\e_aes.c:976:45, line:978:34> <scratch space>:246:1 invalid EVP_aes_256_ccm 'const int *(void)'
| `-CompoundStmt 0x16f6a97df48 <.//openssl//file_jk/before\crypto\evp\e_aes.c:977:51, line:978:34>
|-RecordDecl 0x16f6a97df58 <line:2201:9, line:2208:1> line:2201:9 invalid struct definition
| |-RecordDecl 0x16f6a97e010 <line:2202:5, line:2205:5> line:2202:5 invalid union definition
| | |-FieldDecl 0x16f6a976078 <line:2203:9, col:16> col:16 align 'double'
| | `-FieldDecl 0x16f6a9760e8 <line:2204:9, col:17> col:17 invalid ks 'int'
| |-FieldDecl 0x16f6a976198 <line:2202:5, line:2205:7> col:7 invalid ks 'union (anonymous union at .//openssl//file_jk/before\crypto\evp\e_aes.c:2202:5)':'union (anonymous at .//openssl//file_jk/before\crypto\evp\e_aes.c:2202:5)'
| `-FieldDecl 0x16f6a976208 <line:2207:5, col:20> col:20 referenced iv 'unsigned char *'
|-TypedefDecl 0x16f6a9762b8 <line:2201:1, line:2208:3> col:3 referenced EVP_AES_WRAP_CTX 'struct (anonymous struct at .//openssl//file_jk/before\crypto\evp\e_aes.c:2201:9)':'struct (anonymous at .//openssl//file_jk/before\crypto\evp\e_aes.c:2201:9)'
| `-ElaboratedType 0x16f6a976260 'struct (anonymous struct at .//openssl//file_jk/before\crypto\evp\e_aes.c:2201:9)' sugar
|   `-RecordType 0x16f6a97dff0 'struct (anonymous at .//openssl//file_jk/before\crypto\evp\e_aes.c:2201:9)'
|     `-Record 0x16f6a97df58 ''
|-FunctionDecl 0x16f6a976570 <line:2210:1, line:2231:1> line:2210:12 invalid aes_wrap_init_key 'int (int *, const unsigned char *, const unsigned char *, int)' static
| |-ParmVarDecl 0x16f6a976340 <col:30, col:46> col:46 invalid ctx 'int *'
| |-ParmVarDecl 0x16f6a9763c0 <col:51, col:72> col:72 used key 'const unsigned char *'
| |-ParmVarDecl 0x16f6a976440 <line:2211:30, col:51> col:51 used iv 'const unsigned char *'
| |-ParmVarDecl 0x16f6a9764c0 <col:55, col:59> col:59 enc 'int'
| `-CompoundStmt 0x16f6a976e08 <line:2212:1, line:2231:1>
|   |-DeclStmt 0x16f6a976760 <line:2213:5, col:62>
|   | `-VarDecl 0x16f6a9766d8 <col:5, col:23> col:23 used wctx 'EVP_AES_WRAP_CTX *'
|   |-IfStmt 0x16f6a9768a0 <line:2214:5, line:2215:16>
|   | |-BinaryOperator 0x16f6a976848 <line:2214:9, col:17> 'int' '&&'
|   | | |-UnaryOperator 0x16f6a9767c8 <col:9, col:10> 'int' prefix '!' cannot overflow
|   | | | `-ImplicitCastExpr 0x16f6a9767b0 <col:10> 'const unsigned char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x16f6a976778 <col:10> 'const unsigned char *' lvalue ParmVar 0x16f6a976440 'iv' 'const unsigned char *'
|   | | `-UnaryOperator 0x16f6a976830 <col:16, col:17> 'int' prefix '!' cannot overflow
|   | |   `-ImplicitCastExpr 0x16f6a976818 <col:17> 'const unsigned char *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x16f6a9767e0 <col:17> 'const unsigned char *' lvalue ParmVar 0x16f6a9763c0 'key' 'const unsigned char *'
|   | `-ReturnStmt 0x16f6a976890 <line:2215:9, col:16>
|   |   `-IntegerLiteral 0x16f6a976868 <col:16> 'int' 1
|   |-IfStmt 0x16f6a976c50 <line:2216:5, line:2225:5>
|   | |-ImplicitCastExpr 0x16f6a9768d8 <line:2216:9> 'const unsigned char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x16f6a9768b8 <col:9> 'const unsigned char *' lvalue ParmVar 0x16f6a9763c0 'key' 'const unsigned char *'
|   | `-CompoundStmt 0x16f6a976c38 <col:14, line:2225:5>
|   |   `-IfStmt 0x16f6a976c20 <line:2223:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|   |     |-UnaryOperator 0x16f6a976ae0 <.//openssl//file_jk/before\crypto\evp\e_aes.c:2223:13, col:14> 'int' prefix '!' cannot overflow
|   |     | `-ImplicitCastExpr 0x16f6a976ac8 <col:14> 'const unsigned char *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x16f6a976aa8 <col:14> 'const unsigned char *' lvalue ParmVar 0x16f6a976440 'iv' 'const unsigned char *'
|   |     `-BinaryOperator 0x16f6a976c00 <line:2224:13, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'unsigned char *' '='
|   |       |-MemberExpr 0x16f6a976b30 <.//openssl//file_jk/before\crypto\evp\e_aes.c:2224:13, col:19> 'unsigned char *' lvalue ->iv 0x16f6a976208
|   |       | `-ImplicitCastExpr 0x16f6a976b18 <col:13> 'EVP_AES_WRAP_CTX *' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x16f6a976af8 <col:13> 'EVP_AES_WRAP_CTX *' lvalue Var 0x16f6a9766d8 'wctx' 'EVP_AES_WRAP_CTX *'
|   |       `-ImplicitCastExpr 0x16f6a976be8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'unsigned char *' <NullToPointer>
|   |         `-ParenExpr 0x16f6a976bc8 <col:17, col:27> 'void *'
|   |           `-CStyleCastExpr 0x16f6a976ba0 <col:18, col:26> 'void *' <NullToPointer>
|   |             `-IntegerLiteral 0x16f6a976b60 <col:26> 'int' 0
|   |-IfStmt 0x16f6a976db8 <.//openssl//file_jk/before\crypto\evp\e_aes.c:2226:5, line:2229:5>
|   | |-ImplicitCastExpr 0x16f6a976c88 <line:2226:9> 'const unsigned char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x16f6a976c68 <col:9> 'const unsigned char *' lvalue ParmVar 0x16f6a976440 'iv' 'const unsigned char *'
|   | `-CompoundStmt 0x16f6a976da8 <col:13, line:2229:5>
|   `-ReturnStmt 0x16f6a976df8 <line:2230:5, col:12>
|     `-IntegerLiteral 0x16f6a976dd0 <col:12> 'int' 1
|-FunctionDecl 0x16f6a97e108 <line:2233:1, line:2290:1> line:2233:12 invalid aes_wrap_cipher 'int (int *, unsigned char *, const unsigned char *, size_t)' static
| |-ParmVarDecl 0x16f6a976e58 <col:28, col:44> col:44 invalid ctx 'int *'
| |-ParmVarDecl 0x16f6a976ed8 <col:49, col:64> col:64 used out 'unsigned char *'
| |-ParmVarDecl 0x16f6a976f58 <line:2234:28, col:49> col:49 used in 'const unsigned char *'
| |-ParmVarDecl 0x16f6a976fd0 <col:53, col:60> col:60 used inlen 'size_t':'unsigned long long'
| `-CompoundStmt 0x16f6a977a78 <line:2235:1, line:2290:1>
|   |-DeclStmt 0x16f6a97e278 <line:2236:5, col:62>
|   | `-VarDecl 0x16f6a97e1f0 <col:5, col:23> col:23 used wctx 'EVP_AES_WRAP_CTX *'
|   |-DeclStmt 0x16f6a97e308 <line:2237:5, col:14>
|   | `-VarDecl 0x16f6a97e2a0 <col:5, col:12> col:12 used rv 'size_t':'unsigned long long'
|   |-DeclStmt 0x16f6a97e3e8 <line:2239:5, col:49>
|   | `-VarDecl 0x16f6a97e338 <col:5, col:9> col:9 used pad 'int'
|   |-IfStmt 0x16f6a97e4a0 <line:2241:5, line:2242:16>
|   | |-UnaryOperator 0x16f6a97e450 <line:2241:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x16f6a97e438 <col:10> 'const unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x16f6a97e400 <col:10> 'const unsigned char *' lvalue ParmVar 0x16f6a976f58 'in' 'const unsigned char *'
|   | `-ReturnStmt 0x16f6a97e490 <line:2242:9, col:16>
|   |   `-IntegerLiteral 0x16f6a97e468 <col:16> 'int' 0
|   |-IfStmt 0x16f6a97e570 <line:2244:5, line:2245:17>
|   | |-UnaryOperator 0x16f6a97e508 <line:2244:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x16f6a97e4f0 <col:10> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x16f6a97e4b8 <col:10> 'size_t':'unsigned long long' lvalue ParmVar 0x16f6a976fd0 'inlen' 'size_t':'unsigned long long'
|   | `-ReturnStmt 0x16f6a97e560 <line:2245:9, col:17>
|   |   `-UnaryOperator 0x16f6a97e548 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x16f6a97e520 <col:17> 'int' 1
|   |-IfStmt 0x16f6a97e780 <line:2247:5, line:2248:17>
|   | |-OpaqueValueExpr 0x16f6a97e768 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x16f6a97e758 <col:9, col:17>
|   |   `-UnaryOperator 0x16f6a97e740 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x16f6a97e718 <col:17> 'int' 1
|   |-IfStmt 0x16f6a97e908 <line:2250:5, line:2251:17>
|   | |-BinaryOperator 0x16f6a97e898 <line:2250:9, col:25> 'int' '&&'
|   | | |-UnaryOperator 0x16f6a97e7e8 <col:9, col:10> 'int' prefix '!' cannot overflow
|   | | | `-ImplicitCastExpr 0x16f6a97e7d0 <col:10> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x16f6a97e798 <col:10> 'int' lvalue Var 0x16f6a97e338 'pad' 'int'
|   | | `-BinaryOperator 0x16f6a97e878 <col:17, col:25> 'unsigned long long' '&'
|   | |   |-ImplicitCastExpr 0x16f6a97e848 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x16f6a97e800 <col:17> 'size_t':'unsigned long long' lvalue ParmVar 0x16f6a976fd0 'inlen' 'size_t':'unsigned long long'
|   | |   `-ImplicitCastExpr 0x16f6a97e860 <col:25> 'unsigned long long' <IntegralCast>
|   | |     `-IntegerLiteral 0x16f6a97e820 <col:25> 'int' 7
|   | `-ReturnStmt 0x16f6a97e8f8 <line:2251:9, col:17>
|   |   `-UnaryOperator 0x16f6a97e8e0 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x16f6a97e8b8 <col:17> 'int' 1
|   |-IfStmt 0x16f6a97eb38 <line:2252:5, line:2255:5>
|   | |-CallExpr 0x16f6a97ea00 <line:2252:9, col:48> 'int'
|   | | |-ImplicitCastExpr 0x16f6a97e9e8 <col:9> 'int (*)(const void *, const void *, int)' <FunctionToPointerDecay>
|   | | | `-DeclRefExpr 0x16f6a97e920 <col:9> 'int (const void *, const void *, int)' Function 0x16f6a91b890 'is_partially_overlapping' 'int (const void *, const void *, int)'
|   | | |-ImplicitCastExpr 0x16f6a97ea50 <col:34> 'const void *' <BitCast>
|   | | | `-ImplicitCastExpr 0x16f6a97ea38 <col:34> 'unsigned char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x16f6a97e940 <col:34> 'unsigned char *' lvalue ParmVar 0x16f6a976ed8 'out' 'unsigned char *'
|   | | |-ImplicitCastExpr 0x16f6a97ea80 <col:39> 'const void *' <BitCast>
|   | | | `-ImplicitCastExpr 0x16f6a97ea68 <col:39> 'const unsigned char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x16f6a97e978 <col:39> 'const unsigned char *' lvalue ParmVar 0x16f6a976f58 'in' 'const unsigned char *'
|   | | `-ImplicitCastExpr 0x16f6a97eab0 <col:43> 'int' <IntegralCast>
|   | |   `-ImplicitCastExpr 0x16f6a97ea98 <col:43> 'size_t':'unsigned long long' <LValueToRValue>
|   | |     `-DeclRefExpr 0x16f6a97e998 <col:43> 'size_t':'unsigned long long' lvalue ParmVar 0x16f6a976fd0 'inlen' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x16f6a97eb20 <col:51, line:2255:5>
|   |   `-ReturnStmt 0x16f6a97eb10 <line:2254:9, col:16>
|   |     `-IntegerLiteral 0x16f6a97eae8 <col:16> 'int' 0
|   |-IfStmt 0x16f6a97efd8 <line:2256:5, line:2271:5>
|   | |-UnaryOperator 0x16f6a97eb88 <line:2256:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x16f6a97eb70 <col:10> 'unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x16f6a97eb50 <col:10> 'unsigned char *' lvalue ParmVar 0x16f6a976ed8 'out' 'unsigned char *'
|   | `-CompoundStmt 0x16f6a97efc0 <col:15, line:2271:5>
|   |   `-IfStmt 0x16f6a97ef98 <line:2257:9, line:2270:9> has_else
|   |     |-OpaqueValueExpr 0x16f6a97ef80 <<invalid sloc>> '_Bool'
|   |     |-CompoundStmt 0x16f6a97ee88 <line:2257:45, line:2263:9>
|   |     | |-IfStmt 0x16f6a97edb0 <line:2259:13, line:2260:43>
|   |     | | |-ImplicitCastExpr 0x16f6a97ebe0 <line:2259:17> 'int' <LValueToRValue>
|   |     | | | `-DeclRefExpr 0x16f6a97ebc0 <col:17> 'int' lvalue Var 0x16f6a97e338 'pad' 'int'
|   |     | | `-BinaryOperator 0x16f6a97ed90 <line:2260:17, col:43> 'size_t':'unsigned long long' '='
|   |     | |   |-DeclRefExpr 0x16f6a97ebf8 <col:17> 'size_t':'unsigned long long' lvalue ParmVar 0x16f6a976fd0 'inlen' 'size_t':'unsigned long long'
|   |     | |   `-BinaryOperator 0x16f6a97ed70 <col:25, col:43> 'unsigned long long' '*'
|   |     | |     |-BinaryOperator 0x16f6a97ed10 <col:25, col:39> 'unsigned long long' '/'
|   |     | |     | |-ParenExpr 0x16f6a97ecb0 <col:25, col:35> 'unsigned long long'
|   |     | |     | | `-BinaryOperator 0x16f6a97ec90 <col:26, col:34> 'unsigned long long' '+'
|   |     | |     | |   |-ImplicitCastExpr 0x16f6a97ec60 <col:26> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | |     | |   | `-DeclRefExpr 0x16f6a97ec18 <col:26> 'size_t':'unsigned long long' lvalue ParmVar 0x16f6a976fd0 'inlen' 'size_t':'unsigned long long'
|   |     | |     | |   `-ImplicitCastExpr 0x16f6a97ec78 <col:34> 'unsigned long long' <IntegralCast>
|   |     | |     | |     `-IntegerLiteral 0x16f6a97ec38 <col:34> 'int' 7
|   |     | |     | `-ImplicitCastExpr 0x16f6a97ecf8 <col:39> 'unsigned long long' <IntegralCast>
|   |     | |     |   `-IntegerLiteral 0x16f6a97ecd0 <col:39> 'int' 8
|   |     | |     `-ImplicitCastExpr 0x16f6a97ed58 <col:43> 'unsigned long long' <IntegralCast>
|   |     | |       `-IntegerLiteral 0x16f6a97ed30 <col:43> 'int' 8
|   |     | `-ReturnStmt 0x16f6a97ee78 <line:2262:13, col:28>
|   |     |   `-ImplicitCastExpr 0x16f6a97ee60 <col:20, col:28> 'int' <IntegralCast>
|   |     |     `-BinaryOperator 0x16f6a97ee40 <col:20, col:28> 'unsigned long long' '+'
|   |     |       |-ImplicitCastExpr 0x16f6a97ee10 <col:20> 'size_t':'unsigned long long' <LValueToRValue>
|   |     |       | `-DeclRefExpr 0x16f6a97edc8 <col:20> 'size_t':'unsigned long long' lvalue ParmVar 0x16f6a976fd0 'inlen' 'size_t':'unsigned long long'
|   |     |       `-ImplicitCastExpr 0x16f6a97ee28 <col:28> 'unsigned long long' <IntegralCast>
|   |     |         `-IntegerLiteral 0x16f6a97ede8 <col:28> 'int' 8
|   |     `-CompoundStmt 0x16f6a97ef68 <line:2263:16, line:2270:9>
|   |       `-ReturnStmt 0x16f6a97ef58 <line:2269:13, col:28>
|   |         `-ImplicitCastExpr 0x16f6a97ef40 <col:20, col:28> 'int' <IntegralCast>
|   |           `-BinaryOperator 0x16f6a97ef20 <col:20, col:28> 'unsigned long long' '-'
|   |             |-ImplicitCastExpr 0x16f6a97eef0 <col:20> 'size_t':'unsigned long long' <LValueToRValue>
|   |             | `-DeclRefExpr 0x16f6a97eea8 <col:20> 'size_t':'unsigned long long' lvalue ParmVar 0x16f6a976fd0 'inlen' 'size_t':'unsigned long long'
|   |             `-ImplicitCastExpr 0x16f6a97ef08 <col:28> 'unsigned long long' <IntegralCast>
|   |               `-IntegerLiteral 0x16f6a97eec8 <col:28> 'int' 8
|   |-IfStmt 0x16f6a977920 <line:2272:5, line:2288:5> has_else
|   | |-ImplicitCastExpr 0x16f6a97f010 <line:2272:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x16f6a97eff0 <col:9> 'int' lvalue Var 0x16f6a97e338 'pad' 'int'
|   | |-CompoundStmt 0x16f6a977480 <col:14, line:2281:5>
|   | `-CompoundStmt 0x16f6a977910 <col:12, line:2288:5>
|   `-ReturnStmt 0x16f6a977a68 <line:2289:5, col:28>
|     `-ConditionalOperator 0x16f6a977a38 <col:12, col:28> 'int'
|       |-ImplicitCastExpr 0x16f6a977a20 <col:12> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x16f6a977948 <col:12> 'size_t':'unsigned long long' lvalue Var 0x16f6a97e2a0 'rv' 'size_t':'unsigned long long'
|       |-CStyleCastExpr 0x16f6a9779b8 <col:17, col:22> 'int' <IntegralCast>
|       | `-ImplicitCastExpr 0x16f6a9779a0 <col:22> 'size_t':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|       |   `-DeclRefExpr 0x16f6a977968 <col:22> 'size_t':'unsigned long long' lvalue Var 0x16f6a97e2a0 'rv' 'size_t':'unsigned long long'
|       `-UnaryOperator 0x16f6a977a08 <col:27, col:28> 'int' prefix '-'
|         `-IntegerLiteral 0x16f6a9779e0 <col:28> 'int' 1
|-VarDecl 0x16f6a977af8 <line:2296:1, col:25> col:25 invalid aes_128_wrap 'const int' static
|-FunctionDecl 0x16f6a977f50 <line:2305:1, line:2308:1> line:2305:19 invalid EVP_aes_128_wrap 'const int *(void)'
| `-CompoundStmt 0x16f6a978008 <line:2306:1, line:2308:1>
|-VarDecl 0x16f6a983110 <line:2310:1, col:25> col:25 invalid aes_192_wrap 'const int' static
|-FunctionDecl 0x16f6a983568 <line:2319:1, line:2322:1> line:2319:19 invalid EVP_aes_192_wrap 'const int *(void)'
| `-CompoundStmt 0x16f6a983620 <line:2320:1, line:2322:1>
|-VarDecl 0x16f6a983648 <line:2324:1, col:25> col:25 invalid aes_256_wrap 'const int' static
|-FunctionDecl 0x16f6a983aa0 <line:2333:1, line:2336:1> line:2333:19 invalid EVP_aes_256_wrap 'const int *(void)'
| `-CompoundStmt 0x16f6a983b58 <line:2334:1, line:2336:1>
|-VarDecl 0x16f6a983b80 <line:2338:1, col:25> col:25 invalid aes_128_wrap_pad 'const int' static
|-FunctionDecl 0x16f6a983fd8 <line:2347:1, line:2350:1> line:2347:19 invalid EVP_aes_128_wrap_pad 'const int *(void)'
| `-CompoundStmt 0x16f6a984090 <line:2348:1, line:2350:1>
|-VarDecl 0x16f6a986140 <line:2352:1, col:25> col:25 invalid aes_192_wrap_pad 'const int' static
|-FunctionDecl 0x16f6a986598 <line:2361:1, line:2364:1> line:2361:19 invalid EVP_aes_192_wrap_pad 'const int *(void)'
| `-CompoundStmt 0x16f6a986650 <line:2362:1, line:2364:1>
|-VarDecl 0x16f6a986678 <line:2366:1, col:25> col:25 invalid aes_256_wrap_pad 'const int' static
|-FunctionDecl 0x16f6a986ad0 <line:2375:1, line:2378:1> line:2375:19 invalid EVP_aes_256_wrap_pad 'const int *(void)'
| `-CompoundStmt 0x16f6a986b88 <line:2376:1, line:2378:1>
|-FunctionDecl 0x16f6a986de0 <line:2381:1, line:2438:1> line:2381:12 invalid aes_ocb_ctrl 'int (int *, int, int, void *)' static
| |-ParmVarDecl 0x16f6a986bb0 <col:25, col:41> col:41 invalid c 'int *'
| |-ParmVarDecl 0x16f6a986c30 <col:44, col:48> col:48 used type 'int'
| |-ParmVarDecl 0x16f6a986cb0 <col:54, col:58> col:58 used arg 'int'
| |-ParmVarDecl 0x16f6a986d30 <col:63, col:69> col:69 used ptr 'void *'
| `-CompoundStmt 0x16f6a984588 <line:2382:1, line:2438:1>
|   |-DeclStmt 0x16f6a986fd0 <line:2383:5, col:58>
|   | `-VarDecl 0x16f6a986f48 <col:5, col:22> col:22 used octx 'EVP_AES_OCB_CTX *'
|   |-DeclStmt 0x16f6a987060 <line:2385:5, col:30>
|   | `-VarDecl 0x16f6a986ff8 <col:5, col:22> col:22 used new_octx 'EVP_AES_OCB_CTX *'
|   `-SwitchStmt 0x16f6a9870c8 <line:2387:5, line:2437:5>
|     |-ImplicitCastExpr 0x16f6a9870b0 <line:2387:13> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x16f6a987078 <col:13> 'int' lvalue ParmVar 0x16f6a986c30 'type' 'int'
|     `-CompoundStmt 0x16f6a9844f0 <col:19, line:2437:5>
|       |-BinaryOperator 0x16f6a980138 <line:2389:9, col:25> 'int' '='
|       | |-MemberExpr 0x16f6a9800e0 <col:9, col:15> 'int' lvalue ->key_set 0x16f6a919fa8
|       | | `-ImplicitCastExpr 0x16f6a987120 <col:9> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x16f6a9870e8 <col:9> 'EVP_AES_OCB_CTX *' lvalue Var 0x16f6a986f48 'octx' 'EVP_AES_OCB_CTX *'
|       | `-IntegerLiteral 0x16f6a980110 <col:25> 'int' 0
|       |-BinaryOperator 0x16f6a9801e8 <line:2390:9, col:24> 'int' '='
|       | |-MemberExpr 0x16f6a980190 <col:9, col:15> 'int' lvalue ->iv_set 0x16f6a91a018
|       | | `-ImplicitCastExpr 0x16f6a980178 <col:9> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x16f6a980158 <col:9> 'EVP_AES_OCB_CTX *' lvalue Var 0x16f6a986f48 'octx' 'EVP_AES_OCB_CTX *'
|       | `-IntegerLiteral 0x16f6a9801c0 <col:24> 'int' 0
|       |-BinaryOperator 0x16f6a9803a8 <line:2393:9, col:24> 'int' '='
|       | |-MemberExpr 0x16f6a980350 <col:9, col:15> 'int' lvalue ->taglen 0x16f6a91d538
|       | | `-ImplicitCastExpr 0x16f6a980338 <col:9> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x16f6a980318 <col:9> 'EVP_AES_OCB_CTX *' lvalue Var 0x16f6a986f48 'octx' 'EVP_AES_OCB_CTX *'
|       | `-IntegerLiteral 0x16f6a980380 <col:24> 'int' 16
|       |-BinaryOperator 0x16f6a980458 <line:2394:9, col:30> 'int' '='
|       | |-MemberExpr 0x16f6a980400 <col:9, col:15> 'int' lvalue ->data_buf_len 0x16f6a91d3e8
|       | | `-ImplicitCastExpr 0x16f6a9803e8 <col:9> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x16f6a9803c8 <col:9> 'EVP_AES_OCB_CTX *' lvalue Var 0x16f6a986f48 'octx' 'EVP_AES_OCB_CTX *'
|       | `-IntegerLiteral 0x16f6a980430 <col:30> 'int' 0
|       |-BinaryOperator 0x16f6a980508 <line:2395:9, col:29> 'int' '='
|       | |-MemberExpr 0x16f6a9804b0 <col:9, col:15> 'int' lvalue ->aad_buf_len 0x16f6a91d458
|       | | `-ImplicitCastExpr 0x16f6a980498 <col:9> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x16f6a980478 <col:9> 'EVP_AES_OCB_CTX *' lvalue Var 0x16f6a986f48 'octx' 'EVP_AES_OCB_CTX *'
|       | `-IntegerLiteral 0x16f6a9804e0 <col:29> 'int' 0
|       |-ReturnStmt 0x16f6a980550 <line:2396:9, col:16>
|       | `-IntegerLiteral 0x16f6a980528 <col:16> 'int' 1
|       |-IfStmt 0x16f6a9806d0 <line:2400:9, line:2401:20>
|       | |-BinaryOperator 0x16f6a980678 <line:2400:13, col:31> 'int' '||'
|       | | |-BinaryOperator 0x16f6a9805d8 <col:13, col:20> 'int' '<='
|       | | | |-ImplicitCastExpr 0x16f6a9805c0 <col:13> 'int' <LValueToRValue>
|       | | | | `-DeclRefExpr 0x16f6a980560 <col:13> 'int' lvalue ParmVar 0x16f6a986cb0 'arg' 'int'
|       | | | `-IntegerLiteral 0x16f6a980598 <col:20> 'int' 0
|       | | `-BinaryOperator 0x16f6a980658 <col:25, col:31> 'int' '>'
|       | |   |-ImplicitCastExpr 0x16f6a980640 <col:25> 'int' <LValueToRValue>
|       | |   | `-DeclRefExpr 0x16f6a9805f8 <col:25> 'int' lvalue ParmVar 0x16f6a986cb0 'arg' 'int'
|       | |   `-IntegerLiteral 0x16f6a980618 <col:31> 'int' 15
|       | `-ReturnStmt 0x16f6a9806c0 <line:2401:13, col:20>
|       |   `-IntegerLiteral 0x16f6a980698 <col:20> 'int' 0
|       |-BinaryOperator 0x16f6a980788 <line:2403:9, col:23> 'int' '='
|       | |-MemberExpr 0x16f6a980720 <col:9, col:15> 'int' lvalue ->ivlen 0x16f6a91d4c8
|       | | `-ImplicitCastExpr 0x16f6a980708 <col:9> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x16f6a9806e8 <col:9> 'EVP_AES_OCB_CTX *' lvalue Var 0x16f6a986f48 'octx' 'EVP_AES_OCB_CTX *'
|       | `-ImplicitCastExpr 0x16f6a980770 <col:23> 'int' <LValueToRValue>
|       |   `-DeclRefExpr 0x16f6a980750 <col:23> 'int' lvalue ParmVar 0x16f6a986cb0 'arg' 'int'
|       |-ReturnStmt 0x16f6a9807d0 <line:2404:9, col:16>
|       | `-IntegerLiteral 0x16f6a9807a8 <col:16> 'int' 1
|       |-IfStmt 0x16f6a980ad8 <line:2407:9, line:2414:9>
|       | |-UnaryOperator 0x16f6a980830 <line:2407:13, col:14> 'int' prefix '!' cannot overflow
|       | | `-ImplicitCastExpr 0x16f6a980818 <col:14> 'void *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x16f6a9807e0 <col:14> 'void *' lvalue ParmVar 0x16f6a986d30 'ptr' 'void *'
|       | `-CompoundStmt 0x16f6a980ab0 <col:19, line:2414:9>
|       |   |-IfStmt 0x16f6a9809a0 <line:2409:13, line:2410:24>
|       |   | |-BinaryOperator 0x16f6a980948 <line:2409:17, col:34> 'int' '||'
|       |   | | |-BinaryOperator 0x16f6a9808a8 <col:17, col:23> 'int' '<'
|       |   | | | |-ImplicitCastExpr 0x16f6a980890 <col:17> 'int' <LValueToRValue>
|       |   | | | | `-DeclRefExpr 0x16f6a980848 <col:17> 'int' lvalue ParmVar 0x16f6a986cb0 'arg' 'int'
|       |   | | | `-IntegerLiteral 0x16f6a980868 <col:23> 'int' 0
|       |   | | `-BinaryOperator 0x16f6a980928 <col:28, col:34> 'int' '>'
|       |   | |   |-ImplicitCastExpr 0x16f6a980910 <col:28> 'int' <LValueToRValue>
|       |   | |   | `-DeclRefExpr 0x16f6a9808c8 <col:28> 'int' lvalue ParmVar 0x16f6a986cb0 'arg' 'int'
|       |   | |   `-IntegerLiteral 0x16f6a9808e8 <col:34> 'int' 16
|       |   | `-ReturnStmt 0x16f6a980990 <line:2410:17, col:24>
|       |   |   `-IntegerLiteral 0x16f6a980968 <col:24> 'int' 0
|       |   |-BinaryOperator 0x16f6a980a58 <line:2412:13, col:28> 'int' '='
|       |   | |-MemberExpr 0x16f6a9809f0 <col:13, col:19> 'int' lvalue ->taglen 0x16f6a91d538
|       |   | | `-ImplicitCastExpr 0x16f6a9809d8 <col:13> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|       |   | |   `-DeclRefExpr 0x16f6a9809b8 <col:13> 'EVP_AES_OCB_CTX *' lvalue Var 0x16f6a986f48 'octx' 'EVP_AES_OCB_CTX *'
|       |   | `-ImplicitCastExpr 0x16f6a980a40 <col:28> 'int' <LValueToRValue>
|       |   |   `-DeclRefExpr 0x16f6a980a20 <col:28> 'int' lvalue ParmVar 0x16f6a986cb0 'arg' 'int'
|       |   `-ReturnStmt 0x16f6a980aa0 <line:2413:13, col:20>
|       |     `-IntegerLiteral 0x16f6a980a78 <col:20> 'int' 1
|       |-IfStmt 0x16f6a980c38 <line:2415:9, line:2416:20>
|       | |-OpaqueValueExpr 0x16f6a980c20 <<invalid sloc>> '_Bool'
|       | `-ReturnStmt 0x16f6a980c10 <col:13, col:20>
|       |   `-IntegerLiteral 0x16f6a980be8 <col:20> 'int' 0
|       |-CallExpr 0x16f6a980d78 <line:2417:9, col:35> 'void *'
|       | |-ImplicitCastExpr 0x16f6a980d60 <col:9> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|       | | `-DeclRefExpr 0x16f6a980c50 <col:9> 'void *(void *, const void *, unsigned long long)' Function 0x16f6a880a58 'memcpy' 'void *(void *, const void *, unsigned long long)'
|       | |-ImplicitCastExpr 0x16f6a980dc8 <col:16, col:22> 'void *' <BitCast>
|       | | `-ImplicitCastExpr 0x16f6a980db0 <col:16, col:22> 'unsigned char *' <ArrayToPointerDecay>
|       | |   `-MemberExpr 0x16f6a980ca8 <col:16, col:22> 'unsigned char [16]' lvalue ->tag 0x16f6a91d1f8
|       | |     `-ImplicitCastExpr 0x16f6a980c90 <col:16> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|       | |       `-DeclRefExpr 0x16f6a980c70 <col:16> 'EVP_AES_OCB_CTX *' lvalue Var 0x16f6a986f48 'octx' 'EVP_AES_OCB_CTX *'
|       | |-ImplicitCastExpr 0x16f6a980df8 <col:27> 'const void *' <NoOp>
|       | | `-ImplicitCastExpr 0x16f6a980de0 <col:27> 'void *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x16f6a980cd8 <col:27> 'void *' lvalue ParmVar 0x16f6a986d30 'ptr' 'void *'
|       | `-ImplicitCastExpr 0x16f6a980e28 <col:32> 'unsigned long long' <IntegralCast>
|       |   `-ImplicitCastExpr 0x16f6a980e10 <col:32> 'int' <LValueToRValue>
|       |     `-DeclRefExpr 0x16f6a980cf8 <col:32> 'int' lvalue ParmVar 0x16f6a986cb0 'arg' 'int'
|       |-ReturnStmt 0x16f6a980e68 <line:2418:9, col:16>
|       | `-IntegerLiteral 0x16f6a980e40 <col:16> 'int' 1
|       |-IfStmt 0x16f6a980fc0 <line:2421:9, line:2422:20>
|       | |-OpaqueValueExpr 0x16f6a980fa8 <<invalid sloc>> '_Bool'
|       | `-ReturnStmt 0x16f6a980f98 <col:13, col:20>
|       |   `-IntegerLiteral 0x16f6a980f70 <col:20> 'int' 0
|       |-CallExpr 0x16f6a984150 <line:2424:9, col:35> 'void *'
|       | |-ImplicitCastExpr 0x16f6a984138 <col:9> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|       | | `-DeclRefExpr 0x16f6a980fd8 <col:9> 'void *(void *, const void *, unsigned long long)' Function 0x16f6a880a58 'memcpy' 'void *(void *, const void *, unsigned long long)'
|       | |-ImplicitCastExpr 0x16f6a984188 <col:16> 'void *' <LValueToRValue>
|       | | `-DeclRefExpr 0x16f6a980ff8 <col:16> 'void *' lvalue ParmVar 0x16f6a986d30 'ptr' 'void *'
|       | |-ImplicitCastExpr 0x16f6a9841b8 <col:21, col:27> 'const void *' <BitCast>
|       | | `-ImplicitCastExpr 0x16f6a9841a0 <col:21, col:27> 'unsigned char *' <ArrayToPointerDecay>
|       | |   `-MemberExpr 0x16f6a981050 <col:21, col:27> 'unsigned char [16]' lvalue ->tag 0x16f6a91d1f8
|       | |     `-ImplicitCastExpr 0x16f6a981038 <col:21> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|       | |       `-DeclRefExpr 0x16f6a981018 <col:21> 'EVP_AES_OCB_CTX *' lvalue Var 0x16f6a986f48 'octx' 'EVP_AES_OCB_CTX *'
|       | `-ImplicitCastExpr 0x16f6a9841e8 <col:32> 'unsigned long long' <IntegralCast>
|       |   `-ImplicitCastExpr 0x16f6a9841d0 <col:32> 'int' <LValueToRValue>
|       |     `-DeclRefExpr 0x16f6a981080 <col:32> 'int' lvalue ParmVar 0x16f6a986cb0 'arg' 'int'
|       |-ReturnStmt 0x16f6a984228 <line:2425:9, col:16>
|       | `-IntegerLiteral 0x16f6a984200 <col:16> 'int' 1
|       `-DefaultStmt 0x16f6a9844d0 <line:2434:5, line:2435:17>
|         `-ReturnStmt 0x16f6a9844c0 <col:9, col:17>
|           `-UnaryOperator 0x16f6a9844a8 <col:16, col:17> 'int' prefix '-'
|             `-IntegerLiteral 0x16f6a984480 <col:17> 'int' 1
|-FunctionDecl 0x16f6a9847f8 <line:2463:1, line:2541:1> line:2463:12 invalid aes_ocb_init_key 'int (int *, const unsigned char *, const unsigned char *, int)' static
| |-ParmVarDecl 0x16f6a9845c8 <col:29, col:45> col:45 invalid ctx 'int *'
| |-ParmVarDecl 0x16f6a984648 <col:50, col:71> col:71 used key 'const unsigned char *'
| |-ParmVarDecl 0x16f6a9846c8 <line:2464:29, col:50> col:50 used iv 'const unsigned char *'
| |-ParmVarDecl 0x16f6a984748 <col:54, col:58> col:58 enc 'int'
| `-CompoundStmt 0x16f6a985c68 <line:2465:1, line:2541:1>
|   |-DeclStmt 0x16f6a984968 <line:2466:5, col:60>
|   | `-VarDecl 0x16f6a9848e0 <col:5, col:22> col:22 used octx 'EVP_AES_OCB_CTX *'
|   |-IfStmt 0x16f6a984aa8 <line:2467:5, line:2468:16>
|   | |-BinaryOperator 0x16f6a984a50 <line:2467:9, col:17> 'int' '&&'
|   | | |-UnaryOperator 0x16f6a9849d0 <col:9, col:10> 'int' prefix '!' cannot overflow
|   | | | `-ImplicitCastExpr 0x16f6a9849b8 <col:10> 'const unsigned char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x16f6a984980 <col:10> 'const unsigned char *' lvalue ParmVar 0x16f6a9846c8 'iv' 'const unsigned char *'
|   | | `-UnaryOperator 0x16f6a984a38 <col:16, col:17> 'int' prefix '!' cannot overflow
|   | |   `-ImplicitCastExpr 0x16f6a984a20 <col:17> 'const unsigned char *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x16f6a9849e8 <col:17> 'const unsigned char *' lvalue ParmVar 0x16f6a984648 'key' 'const unsigned char *'
|   | `-ReturnStmt 0x16f6a984a98 <line:2468:9, col:16>
|   |   `-IntegerLiteral 0x16f6a984a70 <col:16> 'int' 1
|   |-IfStmt 0x16f6a985c08 <line:2469:5, line:2539:5> has_else
|   | |-ImplicitCastExpr 0x16f6a984ae0 <line:2469:9> 'const unsigned char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x16f6a984ac0 <col:9> 'const unsigned char *' lvalue ParmVar 0x16f6a984648 'key' 'const unsigned char *'
|   | |-CompoundStmt 0x16f6a9856d8 <col:14, line:2532:5>
|   | | |-DoStmt 0x16f6a984f78 <line:2470:9, line:2518:17>
|   | | | |-CompoundStmt 0x16f6a984f38 <line:2470:12, line:2517:9>
|   | | | | `-IfStmt 0x16f6a984f20 <line:2511:13, line:2516:24>
|   | | | |   |-OpaqueValueExpr 0x16f6a984f08 <<invalid sloc>> '_Bool'
|   | | | |   `-ReturnStmt 0x16f6a984ef8 <col:17, col:24>
|   | | | |     `-IntegerLiteral 0x16f6a984ed0 <col:24> 'int' 0
|   | | | `-IntegerLiteral 0x16f6a984f50 <line:2518:16> 'int' 0
|   | | |-IfStmt 0x16f6a985228 <line:2523:9, line:2524:24>
|   | | | |-BinaryOperator 0x16f6a985130 <line:2523:13, col:33> 'int' '&&'
|   | | | | |-BinaryOperator 0x16f6a985070 <col:13, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | | | | |-ImplicitCastExpr 0x16f6a985040 <.//openssl//file_jk/before\crypto\evp\e_aes.c:2523:13> 'const unsigned char *' <LValueToRValue>
|   | | | | | | `-DeclRefExpr 0x16f6a984f98 <col:13> 'const unsigned char *' lvalue ParmVar 0x16f6a9846c8 'iv' 'const unsigned char *'
|   | | | | | `-ImplicitCastExpr 0x16f6a985058 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const unsigned char *' <BitCast>
|   | | | | |   `-ParenExpr 0x16f6a985020 <col:17, col:27> 'void *'
|   | | | | |     `-CStyleCastExpr 0x16f6a984ff8 <col:18, col:26> 'void *' <NullToPointer>
|   | | | | |       `-IntegerLiteral 0x16f6a984fb8 <col:26> 'int' 0
|   | | | | `-ImplicitCastExpr 0x16f6a9850f8 <.//openssl//file_jk/before\crypto\evp\e_aes.c:2523:27, col:33> 'int' <LValueToRValue>
|   | | | |   `-MemberExpr 0x16f6a9850c8 <col:27, col:33> 'int' lvalue ->iv_set 0x16f6a91a018
|   | | | |     `-ImplicitCastExpr 0x16f6a9850b0 <col:27> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|   | | | |       `-DeclRefExpr 0x16f6a985090 <col:27> 'EVP_AES_OCB_CTX *' lvalue Var 0x16f6a9848e0 'octx' 'EVP_AES_OCB_CTX *'
|   | | | `-BinaryOperator 0x16f6a985208 <line:2524:13, col:24> 'const unsigned char *' '='
|   | | |   |-DeclRefExpr 0x16f6a985150 <col:13> 'const unsigned char *' lvalue ParmVar 0x16f6a9846c8 'iv' 'const unsigned char *'
|   | | |   `-ImplicitCastExpr 0x16f6a9851f0 <col:18, col:24> 'const unsigned char *' <NoOp>
|   | | |     `-ImplicitCastExpr 0x16f6a9851d8 <col:18, col:24> 'unsigned char *' <LValueToRValue>
|   | | |       `-MemberExpr 0x16f6a9851a8 <col:18, col:24> 'unsigned char *' lvalue ->iv 0x16f6a91d138
|   | | |         `-ImplicitCastExpr 0x16f6a985190 <col:18> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|   | | |           `-DeclRefExpr 0x16f6a985170 <col:18> 'EVP_AES_OCB_CTX *' lvalue Var 0x16f6a9848e0 'octx' 'EVP_AES_OCB_CTX *'
|   | | |-IfStmt 0x16f6a985610 <line:2525:9, line:2530:9>
|   | | | |-ImplicitCastExpr 0x16f6a985260 <line:2525:13> 'const unsigned char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x16f6a985240 <col:13> 'const unsigned char *' lvalue ParmVar 0x16f6a9846c8 'iv' 'const unsigned char *'
|   | | | `-CompoundStmt 0x16f6a9855f0 <col:17, line:2530:9>
|   | | |   |-IfStmt 0x16f6a985528 <line:2526:13, line:2528:24>
|   | | |   | |-OpaqueValueExpr 0x16f6a985510 <<invalid sloc>> '_Bool'
|   | | |   | `-ReturnStmt 0x16f6a985500 <col:17, col:24>
|   | | |   |   `-IntegerLiteral 0x16f6a9854d8 <col:24> 'int' 0
|   | | |   `-BinaryOperator 0x16f6a9855d0 <line:2529:13, col:28> 'int' '='
|   | | |     |-MemberExpr 0x16f6a985578 <col:13, col:19> 'int' lvalue ->iv_set 0x16f6a91a018
|   | | |     | `-ImplicitCastExpr 0x16f6a985560 <col:13> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|   | | |     |   `-DeclRefExpr 0x16f6a985540 <col:13> 'EVP_AES_OCB_CTX *' lvalue Var 0x16f6a9848e0 'octx' 'EVP_AES_OCB_CTX *'
|   | | |     `-IntegerLiteral 0x16f6a9855a8 <col:28> 'int' 1
|   | | `-BinaryOperator 0x16f6a9856b8 <line:2531:9, col:25> 'int' '='
|   | |   |-MemberExpr 0x16f6a985660 <col:9, col:15> 'int' lvalue ->key_set 0x16f6a919fa8
|   | |   | `-ImplicitCastExpr 0x16f6a985648 <col:9> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x16f6a985628 <col:9> 'EVP_AES_OCB_CTX *' lvalue Var 0x16f6a9848e0 'octx' 'EVP_AES_OCB_CTX *'
|   | |   `-IntegerLiteral 0x16f6a985690 <col:25> 'int' 1
|   | `-CompoundStmt 0x16f6a985be8 <line:2532:12, line:2539:5>
|   |   |-IfStmt 0x16f6a985b10 <line:2534:9, line:2537:45> has_else
|   |   | |-ImplicitCastExpr 0x16f6a985770 <line:2534:13, col:19> 'int' <LValueToRValue>
|   |   | | `-MemberExpr 0x16f6a985740 <col:13, col:19> 'int' lvalue ->key_set 0x16f6a919fa8
|   |   | |   `-ImplicitCastExpr 0x16f6a985728 <col:13> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x16f6a985708 <col:13> 'EVP_AES_OCB_CTX *' lvalue Var 0x16f6a9848e0 'octx' 'EVP_AES_OCB_CTX *'
|   |   | |-NullStmt 0x16f6a985b08 <line:2535:13>
|   |   | `-CallExpr 0x16f6a985a40 <line:2537:13, col:45> 'void *'
|   |   |   |-ImplicitCastExpr 0x16f6a985a28 <col:13> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x16f6a9858d0 <col:13> 'void *(void *, const void *, unsigned long long)' Function 0x16f6a880a58 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   |   |   |-ImplicitCastExpr 0x16f6a985a90 <col:20, col:26> 'void *' <BitCast>
|   |   |   | `-ImplicitCastExpr 0x16f6a985a78 <col:20, col:26> 'unsigned char *' <LValueToRValue>
|   |   |   |   `-MemberExpr 0x16f6a985928 <col:20, col:26> 'unsigned char *' lvalue ->iv 0x16f6a91d138
|   |   |   |     `-ImplicitCastExpr 0x16f6a985910 <col:20> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|   |   |   |       `-DeclRefExpr 0x16f6a9858f0 <col:20> 'EVP_AES_OCB_CTX *' lvalue Var 0x16f6a9848e0 'octx' 'EVP_AES_OCB_CTX *'
|   |   |   |-ImplicitCastExpr 0x16f6a985ac0 <col:30> 'const void *' <BitCast>
|   |   |   | `-ImplicitCastExpr 0x16f6a985aa8 <col:30> 'const unsigned char *' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x16f6a985958 <col:30> 'const unsigned char *' lvalue ParmVar 0x16f6a9846c8 'iv' 'const unsigned char *'
|   |   |   `-ImplicitCastExpr 0x16f6a985af0 <col:34, col:40> 'unsigned long long' <IntegralCast>
|   |   |     `-ImplicitCastExpr 0x16f6a985ad8 <col:34, col:40> 'int' <LValueToRValue>
|   |   |       `-MemberExpr 0x16f6a9859b0 <col:34, col:40> 'int' lvalue ->ivlen 0x16f6a91d4c8
|   |   |         `-ImplicitCastExpr 0x16f6a985998 <col:34> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|   |   |           `-DeclRefExpr 0x16f6a985978 <col:34> 'EVP_AES_OCB_CTX *' lvalue Var 0x16f6a9848e0 'octx' 'EVP_AES_OCB_CTX *'
|   |   `-BinaryOperator 0x16f6a985bc8 <line:2538:9, col:24> 'int' '='
|   |     |-MemberExpr 0x16f6a985b70 <col:9, col:15> 'int' lvalue ->iv_set 0x16f6a91a018
|   |     | `-ImplicitCastExpr 0x16f6a985b58 <col:9> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x16f6a985b38 <col:9> 'EVP_AES_OCB_CTX *' lvalue Var 0x16f6a9848e0 'octx' 'EVP_AES_OCB_CTX *'
|   |     `-IntegerLiteral 0x16f6a985ba0 <col:24> 'int' 1
|   `-ReturnStmt 0x16f6a985c58 <line:2540:5, col:12>
|     `-IntegerLiteral 0x16f6a985c30 <col:12> 'int' 1
|-FunctionDecl 0x16f6a985ed8 <line:2543:1, line:2690:1> line:2543:12 invalid aes_ocb_cipher 'int (int *, unsigned char *, const unsigned char *, size_t)' static
| |-ParmVarDecl 0x16f6a985cb0 <col:27, col:43> col:43 invalid ctx 'int *'
| |-ParmVarDecl 0x16f6a985d30 <col:48, col:63> col:63 used out 'unsigned char *'
| |-ParmVarDecl 0x16f6a985db0 <line:2544:27, col:48> col:48 used in 'const unsigned char *'
| |-ParmVarDecl 0x16f6a985e28 <col:52, col:59> col:59 used len 'size_t':'unsigned long long'
| `-CompoundStmt 0x16f6a9821d0 <line:2545:1, line:2690:1>
|   |-DeclStmt 0x16f6a986030 <line:2546:5, col:23>
|   | `-VarDecl 0x16f6a985fc8 <col:5, col:20> col:20 used buf 'unsigned char *'
|   |-DeclStmt 0x16f6a9860c8 <line:2547:5, col:17>
|   | `-VarDecl 0x16f6a986060 <col:5, col:10> col:10 used buf_len 'int *'
|   |-DeclStmt 0x16f6a97f160 <line:2548:5, col:24>
|   | `-VarDecl 0x16f6a97f0d0 <col:5, col:23> col:9 used written_len 'int' cinit
|   |   `-IntegerLiteral 0x16f6a97f138 <col:23> 'int' 0
|   |-DeclStmt 0x16f6a97f1f0 <line:2549:5, col:24>
|   | `-VarDecl 0x16f6a97f188 <col:5, col:12> col:12 used trailing_len 'size_t':'unsigned long long'
|   |-DeclStmt 0x16f6a97f2a0 <line:2550:5, col:60>
|   | `-VarDecl 0x16f6a97f218 <col:5, col:22> col:22 used octx 'EVP_AES_OCB_CTX *'
|   |-IfStmt 0x16f6a97f3b8 <line:2553:5, line:2554:17>
|   | |-UnaryOperator 0x16f6a97f350 <line:2553:9, col:16> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x16f6a97f338 <col:10, col:16> 'int' <LValueToRValue>
|   | |   `-MemberExpr 0x16f6a97f308 <col:10, col:16> 'int' lvalue ->iv_set 0x16f6a91a018
|   | |     `-ImplicitCastExpr 0x16f6a97f2f0 <col:10> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x16f6a97f2b8 <col:10> 'EVP_AES_OCB_CTX *' lvalue Var 0x16f6a97f218 'octx' 'EVP_AES_OCB_CTX *'
|   | `-ReturnStmt 0x16f6a97f3a8 <line:2554:9, col:17>
|   |   `-UnaryOperator 0x16f6a97f390 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x16f6a97f368 <col:17> 'int' 1
|   |-IfStmt 0x16f6a97f4b8 <line:2556:5, line:2557:17>
|   | |-UnaryOperator 0x16f6a97f450 <line:2556:9, col:16> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x16f6a97f438 <col:10, col:16> 'int' <LValueToRValue>
|   | |   `-MemberExpr 0x16f6a97f408 <col:10, col:16> 'int' lvalue ->key_set 0x16f6a919fa8
|   | |     `-ImplicitCastExpr 0x16f6a97f3f0 <col:10> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x16f6a97f3d0 <col:10> 'EVP_AES_OCB_CTX *' lvalue Var 0x16f6a97f218 'octx' 'EVP_AES_OCB_CTX *'
|   | `-ReturnStmt 0x16f6a97f4a8 <line:2557:9, col:17>
|   |   `-UnaryOperator 0x16f6a97f490 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x16f6a97f468 <col:17> 'int' 1
|   `-IfStmt 0x16f6a9821a8 <line:2559:5, line:2689:5> has_else
|     |-BinaryOperator 0x16f6a97f5c0 <line:2559:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|     | |-ImplicitCastExpr 0x16f6a97f590 <.//openssl//file_jk/before\crypto\evp\e_aes.c:2559:9> 'const unsigned char *' <LValueToRValue>
|     | | `-DeclRefExpr 0x16f6a97f4d0 <col:9> 'const unsigned char *' lvalue ParmVar 0x16f6a985db0 'in' 'const unsigned char *'
|     | `-ImplicitCastExpr 0x16f6a97f5a8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const unsigned char *' <BitCast>
|     |   `-ParenExpr 0x16f6a97f570 <col:17, col:27> 'void *'
|     |     `-CStyleCastExpr 0x16f6a97f548 <col:18, col:26> 'void *' <NullToPointer>
|     |       `-IntegerLiteral 0x16f6a97f508 <col:26> 'int' 0
|     |-CompoundStmt 0x16f6a989ec0 <.//openssl//file_jk/before\crypto\evp\e_aes.c:2559:21, line:2649:5>
|     | |-IfStmt 0x16f6a97fd58 <line:2568:9, line:2579:9> has_else
|     | | |-BinaryOperator 0x16f6a97f6d0 <line:2568:13, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|     | | | |-ImplicitCastExpr 0x16f6a97f6a0 <.//openssl//file_jk/before\crypto\evp\e_aes.c:2568:13> 'unsigned char *' <LValueToRValue>
|     | | | | `-DeclRefExpr 0x16f6a97f5e0 <col:13> 'unsigned char *' lvalue ParmVar 0x16f6a985d30 'out' 'unsigned char *'
|     | | | `-ImplicitCastExpr 0x16f6a97f6b8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'unsigned char *' <BitCast>
|     | | |   `-ParenExpr 0x16f6a97f680 <col:17, col:27> 'void *'
|     | | |     `-CStyleCastExpr 0x16f6a97f658 <col:18, col:26> 'void *' <NullToPointer>
|     | | |       `-IntegerLiteral 0x16f6a97f618 <col:26> 'int' 0
|     | | |-CompoundStmt 0x16f6a97f8c0 <.//openssl//file_jk/before\crypto\evp\e_aes.c:2568:26, line:2571:9>
|     | | | |-BinaryOperator 0x16f6a97f7a8 <line:2569:13, col:25> 'unsigned char *' '='
|     | | | | |-DeclRefExpr 0x16f6a97f6f0 <col:13> 'unsigned char *' lvalue Var 0x16f6a985fc8 'buf' 'unsigned char *'
|     | | | | `-ImplicitCastExpr 0x16f6a97f790 <col:19, col:25> 'unsigned char *' <ArrayToPointerDecay>
|     | | | |   `-MemberExpr 0x16f6a97f760 <col:19, col:25> 'unsigned char [16]' lvalue ->aad_buf 0x16f6a91d378
|     | | | |     `-ImplicitCastExpr 0x16f6a97f748 <col:19> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|     | | | |       `-DeclRefExpr 0x16f6a97f728 <col:19> 'EVP_AES_OCB_CTX *' lvalue Var 0x16f6a97f218 'octx' 'EVP_AES_OCB_CTX *'
|     | | | `-BinaryOperator 0x16f6a97f8a0 <line:2570:13, col:42> 'int *' '='
|     | | |   |-DeclRefExpr 0x16f6a97f7c8 <col:13> 'int *' lvalue Var 0x16f6a986060 'buf_len' 'int *'
|     | | |   `-UnaryOperator 0x16f6a97f888 <col:23, col:42> 'int *' prefix '&' cannot overflow
|     | | |     `-ParenExpr 0x16f6a97f868 <col:24, col:42> 'int' lvalue
|     | | |       `-MemberExpr 0x16f6a97f838 <col:25, col:31> 'int' lvalue ->aad_buf_len 0x16f6a91d458
|     | | |         `-ImplicitCastExpr 0x16f6a97f820 <col:25> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|     | | |           `-DeclRefExpr 0x16f6a97f800 <col:25> 'EVP_AES_OCB_CTX *' lvalue Var 0x16f6a97f218 'octx' 'EVP_AES_OCB_CTX *'
|     | | `-CompoundStmt 0x16f6a97fd30 <line:2571:16, line:2579:9>
|     | |   |-BinaryOperator 0x16f6a97f980 <line:2572:13, col:25> 'unsigned char *' '='
|     | |   | |-DeclRefExpr 0x16f6a97f8e0 <col:13> 'unsigned char *' lvalue Var 0x16f6a985fc8 'buf' 'unsigned char *'
|     | |   | `-ImplicitCastExpr 0x16f6a97f968 <col:19, col:25> 'unsigned char *' <ArrayToPointerDecay>
|     | |   |   `-MemberExpr 0x16f6a97f938 <col:19, col:25> 'unsigned char [16]' lvalue ->data_buf 0x16f6a91d2b8
|     | |   |     `-ImplicitCastExpr 0x16f6a97f920 <col:19> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|     | |   |       `-DeclRefExpr 0x16f6a97f900 <col:19> 'EVP_AES_OCB_CTX *' lvalue Var 0x16f6a97f218 'octx' 'EVP_AES_OCB_CTX *'
|     | |   |-BinaryOperator 0x16f6a97fa60 <line:2573:13, col:43> 'int *' '='
|     | |   | |-DeclRefExpr 0x16f6a97f9a0 <col:13> 'int *' lvalue Var 0x16f6a986060 'buf_len' 'int *'
|     | |   | `-UnaryOperator 0x16f6a97fa48 <col:23, col:43> 'int *' prefix '&' cannot overflow
|     | |   |   `-ParenExpr 0x16f6a97fa28 <col:24, col:43> 'int' lvalue
|     | |   |     `-MemberExpr 0x16f6a97f9f8 <col:25, col:31> 'int' lvalue ->data_buf_len 0x16f6a91d3e8
|     | |   |       `-ImplicitCastExpr 0x16f6a97f9e0 <col:25> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|     | |   |         `-DeclRefExpr 0x16f6a97f9c0 <col:25> 'EVP_AES_OCB_CTX *' lvalue Var 0x16f6a97f218 'octx' 'EVP_AES_OCB_CTX *'
|     | |   `-IfStmt 0x16f6a97fd18 <line:2575:13, line:2578:13>
|     | |     |-CallExpr 0x16f6a97fbf8 <line:2575:17, col:65> 'int'
|     | |     | |-ImplicitCastExpr 0x16f6a97fbe0 <col:17> 'int (*)(const void *, const void *, int)' <FunctionToPointerDecay>
|     | |     | | `-DeclRefExpr 0x16f6a97fa80 <col:17> 'int (const void *, const void *, int)' Function 0x16f6a91b890 'is_partially_overlapping' 'int (const void *, const void *, int)'
|     | |     | |-ImplicitCastExpr 0x16f6a97fc30 <col:42, col:49> 'const void *' <BitCast>
|     | |     | | `-BinaryOperator 0x16f6a97fb68 <col:42, col:49> 'unsigned char *' '+'
|     | |     | |   |-ImplicitCastExpr 0x16f6a97fb38 <col:42> 'unsigned char *' <LValueToRValue>
|     | |     | |   | `-DeclRefExpr 0x16f6a97faa0 <col:42> 'unsigned char *' lvalue ParmVar 0x16f6a985d30 'out' 'unsigned char *'
|     | |     | |   `-ImplicitCastExpr 0x16f6a97fb50 <col:48, col:49> 'int' <LValueToRValue>
|     | |     | |     `-UnaryOperator 0x16f6a97fb20 <col:48, col:49> 'int' lvalue prefix '*' cannot overflow
|     | |     | |       `-ImplicitCastExpr 0x16f6a97fb08 <col:49> 'int *' <LValueToRValue>
|     | |     | |         `-DeclRefExpr 0x16f6a97fae8 <col:49> 'int *' lvalue Var 0x16f6a986060 'buf_len' 'int *'
|     | |     | |-ImplicitCastExpr 0x16f6a97fc60 <col:58> 'const void *' <BitCast>
|     | |     | | `-ImplicitCastExpr 0x16f6a97fc48 <col:58> 'const unsigned char *' <LValueToRValue>
|     | |     | |   `-DeclRefExpr 0x16f6a97fb88 <col:58> 'const unsigned char *' lvalue ParmVar 0x16f6a985db0 'in' 'const unsigned char *'
|     | |     | `-ImplicitCastExpr 0x16f6a97fc90 <col:62> 'int' <IntegralCast>
|     | |     |   `-ImplicitCastExpr 0x16f6a97fc78 <col:62> 'size_t':'unsigned long long' <LValueToRValue>
|     | |     |     `-DeclRefExpr 0x16f6a97fba8 <col:62> 'size_t':'unsigned long long' lvalue ParmVar 0x16f6a985e28 'len' 'size_t':'unsigned long long'
|     | |     `-CompoundStmt 0x16f6a97fd00 <col:68, line:2578:13>
|     | |       `-ReturnStmt 0x16f6a97fcf0 <line:2577:17, col:24>
|     | |         `-IntegerLiteral 0x16f6a97fcc8 <col:24> 'int' 0
|     | |-IfStmt 0x16f6a9891b8 <line:2585:9, line:2617:9>
|     | | |-BinaryOperator 0x16f6a97fe10 <line:2585:13, col:24> 'int' '>'
|     | | | |-ImplicitCastExpr 0x16f6a97fdf8 <col:13, col:14> 'int' <LValueToRValue>
|     | | | | `-UnaryOperator 0x16f6a97fdb8 <col:13, col:14> 'int' lvalue prefix '*' cannot overflow
|     | | | |   `-ImplicitCastExpr 0x16f6a97fda0 <col:14> 'int *' <LValueToRValue>
|     | | | |     `-DeclRefExpr 0x16f6a97fd80 <col:14> 'int *' lvalue Var 0x16f6a986060 'buf_len' 'int *'
|     | | | `-IntegerLiteral 0x16f6a97fdd0 <col:24> 'int' 0
|     | | `-CompoundStmt 0x16f6a989170 <col:27, line:2617:9>
|     | |   |-DeclStmt 0x16f6a97feb0 <line:2586:13, col:35>
|     | |   | `-VarDecl 0x16f6a97fe48 <col:13, col:26> col:26 used remaining 'unsigned int'
|     | |   |-IfStmt 0x16f6a9873f8 <line:2589:13, line:2593:13>
|     | |   | |-BinaryOperator 0x16f6a97fff8 <line:2589:17, col:29> 'int' '>'
|     | |   | | |-ImplicitCastExpr 0x16f6a97ffe0 <col:17> 'unsigned long long' <IntegralCast>
|     | |   | | | `-ImplicitCastExpr 0x16f6a97ffb0 <col:17> 'unsigned int' <LValueToRValue>
|     | |   | | |   `-DeclRefExpr 0x16f6a97ff70 <col:17> 'unsigned int' lvalue Var 0x16f6a97fe48 'remaining' 'unsigned int'
|     | |   | | `-ImplicitCastExpr 0x16f6a97ffc8 <col:29> 'size_t':'unsigned long long' <LValueToRValue>
|     | |   | |   `-DeclRefExpr 0x16f6a97ff90 <col:29> 'size_t':'unsigned long long' lvalue ParmVar 0x16f6a985e28 'len' 'size_t':'unsigned long long'
|     | |   | `-CompoundStmt 0x16f6a9873d0 <col:34, line:2593:13>
|     | |   |   |-CallExpr 0x16f6a987228 <line:2590:17, col:49> 'void *'
|     | |   |   | |-ImplicitCastExpr 0x16f6a987210 <col:17> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|     | |   |   | | `-DeclRefExpr 0x16f6a980018 <col:17> 'void *(void *, const void *, unsigned long long)' Function 0x16f6a880a58 'memcpy' 'void *(void *, const void *, unsigned long long)'
|     | |   |   | |-ImplicitCastExpr 0x16f6a987260 <col:24, col:39> 'void *' <BitCast>
|     | |   |   | | `-BinaryOperator 0x16f6a987180 <col:24, col:39> 'unsigned char *' '+'
|     | |   |   | |   |-ImplicitCastExpr 0x16f6a987150 <col:24> 'unsigned char *' <LValueToRValue>
|     | |   |   | |   | `-DeclRefExpr 0x16f6a980038 <col:24> 'unsigned char *' lvalue Var 0x16f6a985fc8 'buf' 'unsigned char *'
|     | |   |   | |   `-ImplicitCastExpr 0x16f6a987168 <col:30, col:39> 'int' <LValueToRValue>
|     | |   |   | |     `-ParenExpr 0x16f6a9800a8 <col:30, col:39> 'int' lvalue
|     | |   |   | |       `-UnaryOperator 0x16f6a980090 <col:31, col:32> 'int' lvalue prefix '*' cannot overflow
|     | |   |   | |         `-ImplicitCastExpr 0x16f6a980078 <col:32> 'int *' <LValueToRValue>
|     | |   |   | |           `-DeclRefExpr 0x16f6a980058 <col:32> 'int *' lvalue Var 0x16f6a986060 'buf_len' 'int *'
|     | |   |   | |-ImplicitCastExpr 0x16f6a987290 <col:42> 'const void *' <BitCast>
|     | |   |   | | `-ImplicitCastExpr 0x16f6a987278 <col:42> 'const unsigned char *' <LValueToRValue>
|     | |   |   | |   `-DeclRefExpr 0x16f6a9871a0 <col:42> 'const unsigned char *' lvalue ParmVar 0x16f6a985db0 'in' 'const unsigned char *'
|     | |   |   | `-ImplicitCastExpr 0x16f6a9872a8 <col:46> 'size_t':'unsigned long long' <LValueToRValue>
|     | |   |   |   `-DeclRefExpr 0x16f6a9871c0 <col:46> 'size_t':'unsigned long long' lvalue ParmVar 0x16f6a985e28 'len' 'size_t':'unsigned long long'
|     | |   |   |-CompoundAssignOperator 0x16f6a987368 <line:2591:17, col:31> 'int' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|     | |   |   | |-UnaryOperator 0x16f6a987318 <col:17, col:26> 'int' lvalue prefix '*' cannot overflow
|     | |   |   | | `-ImplicitCastExpr 0x16f6a987300 <col:18, col:26> 'int *' <LValueToRValue>
|     | |   |   | |   `-ParenExpr 0x16f6a9872e0 <col:18, col:26> 'int *' lvalue
|     | |   |   | |     `-DeclRefExpr 0x16f6a9872c0 <col:19> 'int *' lvalue Var 0x16f6a986060 'buf_len' 'int *'
|     | |   |   | `-ImplicitCastExpr 0x16f6a987350 <col:31> 'size_t':'unsigned long long' <LValueToRValue>
|     | |   |   |   `-DeclRefExpr 0x16f6a987330 <col:31> 'size_t':'unsigned long long' lvalue ParmVar 0x16f6a985e28 'len' 'size_t':'unsigned long long'
|     | |   |   `-ReturnStmt 0x16f6a9873c0 <line:2592:17, col:24>
|     | |   |     `-IntegerLiteral 0x16f6a987398 <col:24> 'int' 0
|     | |   |-CallExpr 0x16f6a987598 <line:2594:13, col:51> 'void *'
|     | |   | |-ImplicitCastExpr 0x16f6a987580 <col:13> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|     | |   | | `-DeclRefExpr 0x16f6a987410 <col:13> 'void *(void *, const void *, unsigned long long)' Function 0x16f6a880a58 'memcpy' 'void *(void *, const void *, unsigned long long)'
|     | |   | |-ImplicitCastExpr 0x16f6a9875d0 <col:20, col:35> 'void *' <BitCast>
|     | |   | | `-BinaryOperator 0x16f6a9874f0 <col:20, col:35> 'unsigned char *' '+'
|     | |   | |   |-ImplicitCastExpr 0x16f6a9874c0 <col:20> 'unsigned char *' <LValueToRValue>
|     | |   | |   | `-DeclRefExpr 0x16f6a987430 <col:20> 'unsigned char *' lvalue Var 0x16f6a985fc8 'buf' 'unsigned char *'
|     | |   | |   `-ImplicitCastExpr 0x16f6a9874d8 <col:26, col:35> 'int' <LValueToRValue>
|     | |   | |     `-ParenExpr 0x16f6a9874a0 <col:26, col:35> 'int' lvalue
|     | |   | |       `-UnaryOperator 0x16f6a987488 <col:27, col:28> 'int' lvalue prefix '*' cannot overflow
|     | |   | |         `-ImplicitCastExpr 0x16f6a987470 <col:28> 'int *' <LValueToRValue>
|     | |   | |           `-DeclRefExpr 0x16f6a987450 <col:28> 'int *' lvalue Var 0x16f6a986060 'buf_len' 'int *'
|     | |   | |-ImplicitCastExpr 0x16f6a987600 <col:38> 'const void *' <BitCast>
|     | |   | | `-ImplicitCastExpr 0x16f6a9875e8 <col:38> 'const unsigned char *' <LValueToRValue>
|     | |   | |   `-DeclRefExpr 0x16f6a987510 <col:38> 'const unsigned char *' lvalue ParmVar 0x16f6a985db0 'in' 'const unsigned char *'
|     | |   | `-ImplicitCastExpr 0x16f6a987630 <col:42> 'unsigned long long' <IntegralCast>
|     | |   |   `-ImplicitCastExpr 0x16f6a987618 <col:42> 'unsigned int' <LValueToRValue>
|     | |   |     `-DeclRefExpr 0x16f6a987530 <col:42> 'unsigned int' lvalue Var 0x16f6a97fe48 'remaining' 'unsigned int'
|     | |   |-CompoundAssignOperator 0x16f6a9876b8 <line:2599:13, col:20> 'size_t':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|     | |   | |-DeclRefExpr 0x16f6a987648 <col:13> 'size_t':'unsigned long long' lvalue ParmVar 0x16f6a985e28 'len' 'size_t':'unsigned long long'
|     | |   | `-ImplicitCastExpr 0x16f6a9876a0 <col:20> 'unsigned long long' <IntegralCast>
|     | |   |   `-ImplicitCastExpr 0x16f6a987688 <col:20> 'unsigned int' <LValueToRValue>
|     | |   |     `-DeclRefExpr 0x16f6a987668 <col:20> 'unsigned int' lvalue Var 0x16f6a97fe48 'remaining' 'unsigned int'
|     | |   |-CompoundAssignOperator 0x16f6a987740 <line:2600:13, col:19> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|     | |   | |-DeclRefExpr 0x16f6a9876e8 <col:13> 'const unsigned char *' lvalue ParmVar 0x16f6a985db0 'in' 'const unsigned char *'
|     | |   | `-ImplicitCastExpr 0x16f6a987728 <col:19> 'unsigned int' <LValueToRValue>
|     | |   |   `-DeclRefExpr 0x16f6a987708 <col:19> 'unsigned int' lvalue Var 0x16f6a97fe48 'remaining' 'unsigned int'
|     | |   |-IfStmt 0x16f6a987f08 <line:2601:13, line:2612:13> has_else
|     | |   | |-BinaryOperator 0x16f6a987848 <line:2601:17, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|     | |   | | |-ImplicitCastExpr 0x16f6a987818 <.//openssl//file_jk/before\crypto\evp\e_aes.c:2601:17> 'unsigned char *' <LValueToRValue>
|     | |   | | | `-DeclRefExpr 0x16f6a987770 <col:17> 'unsigned char *' lvalue ParmVar 0x16f6a985d30 'out' 'unsigned char *'
|     | |   | | `-ImplicitCastExpr 0x16f6a987830 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'unsigned char *' <BitCast>
|     | |   | |   `-ParenExpr 0x16f6a9877f8 <col:17, col:27> 'void *'
|     | |   | |     `-CStyleCastExpr 0x16f6a9877d0 <col:18, col:26> 'void *' <NullToPointer>
|     | |   | |       `-IntegerLiteral 0x16f6a987790 <col:26> 'int' 0
|     | |   | |-CompoundStmt 0x16f6a987a50 <.//openssl//file_jk/before\crypto\evp\e_aes.c:2601:30, line:2604:13>
|     | |   | | `-IfStmt 0x16f6a987a38 <line:2602:17, line:2603:29>
|     | |   | |   |-OpaqueValueExpr 0x16f6a987a20 <<invalid sloc>> '_Bool'
|     | |   | |   `-ReturnStmt 0x16f6a987a10 <col:21, col:29>
|     | |   | |     `-UnaryOperator 0x16f6a9879f8 <col:28, col:29> 'int' prefix '-'
|     | |   | |       `-IntegerLiteral 0x16f6a9879d0 <col:29> 'int' 1
|     | |   | `-IfStmt 0x16f6a987ee0 <line:2604:20, line:2612:13> has_else
|     | |   |   |-OpaqueValueExpr 0x16f6a987ec8 <<invalid sloc>> '_Bool'
|     | |   |   |-CompoundStmt 0x16f6a987c90 <line:2604:56, line:2608:13>
|     | |   |   | `-IfStmt 0x16f6a987c78 <line:2605:17, line:2607:29>
|     | |   |   |   |-OpaqueValueExpr 0x16f6a987c60 <<invalid sloc>> '_Bool'
|     | |   |   |   `-ReturnStmt 0x16f6a987c50 <col:21, col:29>
|     | |   |   |     `-UnaryOperator 0x16f6a987c38 <col:28, col:29> 'int' prefix '-'
|     | |   |   |       `-IntegerLiteral 0x16f6a987c10 <col:29> 'int' 1
|     | |   |   `-CompoundStmt 0x16f6a987eb0 <line:2608:20, line:2612:13>
|     | |   |     `-IfStmt 0x16f6a987e98 <line:2609:17, line:2611:29>
|     | |   |       |-OpaqueValueExpr 0x16f6a987e80 <<invalid sloc>> '_Bool'
|     | |   |       `-ReturnStmt 0x16f6a987e70 <col:21, col:29>
|     | |   |         `-UnaryOperator 0x16f6a987e58 <col:28, col:29> 'int' prefix '-'
|     | |   |           `-IntegerLiteral 0x16f6a987e30 <col:29> 'int' 1
|     | |   `-BinaryOperator 0x16f6a987fe0 <line:2614:13, col:24> 'int' '='
|     | |     |-UnaryOperator 0x16f6a987fa0 <col:13, col:14> 'int' lvalue prefix '*' cannot overflow
|     | |     | `-ImplicitCastExpr 0x16f6a987f88 <col:14> 'int *' <LValueToRValue>
|     | |     |   `-DeclRefExpr 0x16f6a987f68 <col:14> 'int *' lvalue Var 0x16f6a986060 'buf_len' 'int *'
|     | |     `-IntegerLiteral 0x16f6a987fb8 <col:24> 'int' 0
|     | |-IfStmt 0x16f6a989b40 <line:2625:9, line:2640:9>
|     | | |-BinaryOperator 0x16f6a989298 <line:2625:13, col:20> 'int' '!='
|     | | | |-ImplicitCastExpr 0x16f6a989268 <col:13> 'size_t':'unsigned long long' <LValueToRValue>
|     | | | | `-DeclRefExpr 0x16f6a989228 <col:13> 'size_t':'unsigned long long' lvalue ParmVar 0x16f6a985e28 'len' 'size_t':'unsigned long long'
|     | | | `-ImplicitCastExpr 0x16f6a989280 <col:20> 'size_t':'unsigned long long' <LValueToRValue>
|     | | |   `-DeclRefExpr 0x16f6a989248 <col:20> 'size_t':'unsigned long long' lvalue Var 0x16f6a97f188 'trailing_len' 'size_t':'unsigned long long'
|     | | `-CompoundStmt 0x16f6a989b18 <col:34, line:2640:9>
|     | |   |-IfStmt 0x16f6a989930 <line:2626:13, line:2637:13> has_else
|     | |   | |-BinaryOperator 0x16f6a989390 <line:2626:17, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|     | |   | | |-ImplicitCastExpr 0x16f6a989360 <.//openssl//file_jk/before\crypto\evp\e_aes.c:2626:17> 'unsigned char *' <LValueToRValue>
|     | |   | | | `-DeclRefExpr 0x16f6a9892b8 <col:17> 'unsigned char *' lvalue ParmVar 0x16f6a985d30 'out' 'unsigned char *'
|     | |   | | `-ImplicitCastExpr 0x16f6a989378 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'unsigned char *' <BitCast>
|     | |   | |   `-ParenExpr 0x16f6a989340 <col:17, col:27> 'void *'
|     | |   | |     `-CStyleCastExpr 0x16f6a989318 <col:18, col:26> 'void *' <NullToPointer>
|     | |   | |       `-IntegerLiteral 0x16f6a9892d8 <col:26> 'int' 0
|     | |   | |-CompoundStmt 0x16f6a989538 <.//openssl//file_jk/before\crypto\evp\e_aes.c:2626:30, line:2629:13>
|     | |   | | `-IfStmt 0x16f6a989520 <line:2627:17, line:2628:29>
|     | |   | |   |-OpaqueValueExpr 0x16f6a989508 <<invalid sloc>> '_Bool'
|     | |   | |   `-ReturnStmt 0x16f6a9894f8 <col:21, col:29>
|     | |   | |     `-UnaryOperator 0x16f6a9894e0 <col:28, col:29> 'int' prefix '-'
|     | |   | |       `-IntegerLiteral 0x16f6a9894b8 <col:29> 'int' 1
|     | |   | `-IfStmt 0x16f6a989908 <line:2629:20, line:2637:13> has_else
|     | |   |   |-OpaqueValueExpr 0x16f6a9898f0 <<invalid sloc>> '_Bool'
|     | |   |   |-CompoundStmt 0x16f6a989718 <line:2629:56, line:2633:13>
|     | |   |   | `-IfStmt 0x16f6a989700 <line:2630:17, line:2632:29>
|     | |   |   |   |-OpaqueValueExpr 0x16f6a9896e8 <<invalid sloc>> '_Bool'
|     | |   |   |   `-ReturnStmt 0x16f6a9896d8 <col:21, col:29>
|     | |   |   |     `-UnaryOperator 0x16f6a9896c0 <col:28, col:29> 'int' prefix '-'
|     | |   |   |       `-IntegerLiteral 0x16f6a989698 <col:29> 'int' 1
|     | |   |   `-CompoundStmt 0x16f6a9898d8 <line:2633:20, line:2637:13>
|     | |   |     `-IfStmt 0x16f6a9898c0 <line:2634:17, line:2636:29>
|     | |   |       |-OpaqueValueExpr 0x16f6a9898a8 <<invalid sloc>> '_Bool'
|     | |   |       `-ReturnStmt 0x16f6a989898 <col:21, col:29>
|     | |   |         `-UnaryOperator 0x16f6a989880 <col:28, col:29> 'int' prefix '-'
|     | |   |           `-IntegerLiteral 0x16f6a989858 <col:29> 'int' 1
|     | |   |-CompoundAssignOperator 0x16f6a989a08 <line:2638:13, col:34> 'int' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|     | |   | |-DeclRefExpr 0x16f6a989958 <col:13> 'int' lvalue Var 0x16f6a97f0d0 'written_len' 'int'
|     | |   | `-BinaryOperator 0x16f6a9899e8 <col:28, col:34> 'unsigned long long' '-'
|     | |   |   |-ImplicitCastExpr 0x16f6a9899b8 <col:28> 'size_t':'unsigned long long' <LValueToRValue>
|     | |   |   | `-DeclRefExpr 0x16f6a989978 <col:28> 'size_t':'unsigned long long' lvalue ParmVar 0x16f6a985e28 'len' 'size_t':'unsigned long long'
|     | |   |   `-ImplicitCastExpr 0x16f6a9899d0 <col:34> 'size_t':'unsigned long long' <LValueToRValue>
|     | |   |     `-DeclRefExpr 0x16f6a989998 <col:34> 'size_t':'unsigned long long' lvalue Var 0x16f6a97f188 'trailing_len' 'size_t':'unsigned long long'
|     | |   `-CompoundAssignOperator 0x16f6a989ae8 <line:2639:13, col:25> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|     | |     |-DeclRefExpr 0x16f6a989a38 <col:13> 'const unsigned char *' lvalue ParmVar 0x16f6a985db0 'in' 'const unsigned char *'
|     | |     `-BinaryOperator 0x16f6a989ac8 <col:19, col:25> 'unsigned long long' '-'
|     | |       |-ImplicitCastExpr 0x16f6a989a98 <col:19> 'size_t':'unsigned long long' <LValueToRValue>
|     | |       | `-DeclRefExpr 0x16f6a989a58 <col:19> 'size_t':'unsigned long long' lvalue ParmVar 0x16f6a985e28 'len' 'size_t':'unsigned long long'
|     | |       `-ImplicitCastExpr 0x16f6a989ab0 <col:25> 'size_t':'unsigned long long' <LValueToRValue>
|     | |         `-DeclRefExpr 0x16f6a989a78 <col:25> 'size_t':'unsigned long long' lvalue Var 0x16f6a97f188 'trailing_len' 'size_t':'unsigned long long'
|     | |-IfStmt 0x16f6a989e60 <line:2643:9, line:2646:9>
|     | | |-BinaryOperator 0x16f6a989bd0 <line:2643:13, col:28> 'int' '>'
|     | | | |-ImplicitCastExpr 0x16f6a989ba0 <col:13> 'size_t':'unsigned long long' <LValueToRValue>
|     | | | | `-DeclRefExpr 0x16f6a989b58 <col:13> 'size_t':'unsigned long long' lvalue Var 0x16f6a97f188 'trailing_len' 'size_t':'unsigned long long'
|     | | | `-ImplicitCastExpr 0x16f6a989bb8 <col:28> 'unsigned long long' <IntegralCast>
|     | | |   `-IntegerLiteral 0x16f6a989b78 <col:28> 'int' 0
|     | | `-CompoundStmt 0x16f6a989e40 <col:31, line:2646:9>
|     | |   |-CallExpr 0x16f6a989cd0 <line:2644:13, col:41> 'void *'
|     | |   | |-ImplicitCastExpr 0x16f6a989cb8 <col:13> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|     | |   | | `-DeclRefExpr 0x16f6a989bf0 <col:13> 'void *(void *, const void *, unsigned long long)' Function 0x16f6a880a58 'memcpy' 'void *(void *, const void *, unsigned long long)'
|     | |   | |-ImplicitCastExpr 0x16f6a989d20 <col:20> 'void *' <BitCast>
|     | |   | | `-ImplicitCastExpr 0x16f6a989d08 <col:20> 'unsigned char *' <LValueToRValue>
|     | |   | |   `-DeclRefExpr 0x16f6a989c10 <col:20> 'unsigned char *' lvalue Var 0x16f6a985fc8 'buf' 'unsigned char *'
|     | |   | |-ImplicitCastExpr 0x16f6a989d50 <col:25> 'const void *' <BitCast>
|     | |   | | `-ImplicitCastExpr 0x16f6a989d38 <col:25> 'const unsigned char *' <LValueToRValue>
|     | |   | |   `-DeclRefExpr 0x16f6a989c30 <col:25> 'const unsigned char *' lvalue ParmVar 0x16f6a985db0 'in' 'const unsigned char *'
|     | |   | `-ImplicitCastExpr 0x16f6a989d68 <col:29> 'size_t':'unsigned long long' <LValueToRValue>
|     | |   |   `-DeclRefExpr 0x16f6a989c50 <col:29> 'size_t':'unsigned long long' lvalue Var 0x16f6a97f188 'trailing_len' 'size_t':'unsigned long long'
|     | |   `-BinaryOperator 0x16f6a989e20 <line:2645:13, col:24> 'int' '='
|     | |     |-UnaryOperator 0x16f6a989db8 <col:13, col:14> 'int' lvalue prefix '*' cannot overflow
|     | |     | `-ImplicitCastExpr 0x16f6a989da0 <col:14> 'int *' <LValueToRValue>
|     | |     |   `-DeclRefExpr 0x16f6a989d80 <col:14> 'int *' lvalue Var 0x16f6a986060 'buf_len' 'int *'
|     | |     `-ImplicitCastExpr 0x16f6a989e08 <col:24> 'int' <IntegralCast>
|     | |       `-ImplicitCastExpr 0x16f6a989df0 <col:24> 'size_t':'unsigned long long' <LValueToRValue>
|     | |         `-DeclRefExpr 0x16f6a989dd0 <col:24> 'size_t':'unsigned long long' lvalue Var 0x16f6a97f188 'trailing_len' 'size_t':'unsigned long long'
|     | `-ReturnStmt 0x16f6a989eb0 <line:2648:9, col:16>
|     |   `-ImplicitCastExpr 0x16f6a989e98 <col:16> 'int' <LValueToRValue>
|     |     `-DeclRefExpr 0x16f6a989e78 <col:16> 'int' lvalue Var 0x16f6a97f0d0 'written_len' 'int'
|     `-CompoundStmt 0x16f6a982168 <line:2649:12, line:2689:5>
|       |-IfStmt 0x16f6a988570 <line:2654:9, line:2666:9>
|       | |-BinaryOperator 0x16f6a989fa0 <line:2654:13, col:34> 'int' '>'
|       | | |-ImplicitCastExpr 0x16f6a989f88 <col:13, col:19> 'int' <LValueToRValue>
|       | | | `-MemberExpr 0x16f6a989f30 <col:13, col:19> 'int' lvalue ->data_buf_len 0x16f6a91d3e8
|       | | |   `-ImplicitCastExpr 0x16f6a989f18 <col:13> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|       | | |     `-DeclRefExpr 0x16f6a989ef8 <col:13> 'EVP_AES_OCB_CTX *' lvalue Var 0x16f6a97f218 'octx' 'EVP_AES_OCB_CTX *'
|       | | `-IntegerLiteral 0x16f6a989f60 <col:34> 'int' 0
|       | `-CompoundStmt 0x16f6a988548 <col:37, line:2666:9>
|       |   |-IfStmt 0x16f6a9883b0 <line:2655:13, line:2663:13> has_else
|       |   | |-OpaqueValueExpr 0x16f6a988398 <<invalid sloc>> '_Bool'
|       |   | |-CompoundStmt 0x16f6a9881a0 <line:2655:49, line:2659:13>
|       |   | | `-IfStmt 0x16f6a988188 <line:2656:17, line:2658:29>
|       |   | |   |-OpaqueValueExpr 0x16f6a988170 <<invalid sloc>> '_Bool'
|       |   | |   `-ReturnStmt 0x16f6a988160 <col:21, col:29>
|       |   | |     `-UnaryOperator 0x16f6a98a150 <col:28, col:29> 'int' prefix '-'
|       |   | |       `-IntegerLiteral 0x16f6a98a128 <col:29> 'int' 1
|       |   | `-CompoundStmt 0x16f6a988380 <line:2659:20, line:2663:13>
|       |   |   `-IfStmt 0x16f6a988368 <line:2660:17, line:2662:29>
|       |   |     |-OpaqueValueExpr 0x16f6a988350 <<invalid sloc>> '_Bool'
|       |   |     `-ReturnStmt 0x16f6a988340 <col:21, col:29>
|       |   |       `-UnaryOperator 0x16f6a988328 <col:28, col:29> 'int' prefix '-'
|       |   |         `-IntegerLiteral 0x16f6a988300 <col:29> 'int' 1
|       |   |-BinaryOperator 0x16f6a988478 <line:2664:13, col:33> 'int' '='
|       |   | |-DeclRefExpr 0x16f6a9883d8 <col:13> 'int' lvalue Var 0x16f6a97f0d0 'written_len' 'int'
|       |   | `-ImplicitCastExpr 0x16f6a988460 <col:27, col:33> 'int' <LValueToRValue>
|       |   |   `-MemberExpr 0x16f6a988430 <col:27, col:33> 'int' lvalue ->data_buf_len 0x16f6a91d3e8
|       |   |     `-ImplicitCastExpr 0x16f6a988418 <col:27> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|       |   |       `-DeclRefExpr 0x16f6a9883f8 <col:27> 'EVP_AES_OCB_CTX *' lvalue Var 0x16f6a97f218 'octx' 'EVP_AES_OCB_CTX *'
|       |   `-BinaryOperator 0x16f6a988528 <line:2665:13, col:34> 'int' '='
|       |     |-MemberExpr 0x16f6a9884d0 <col:13, col:19> 'int' lvalue ->data_buf_len 0x16f6a91d3e8
|       |     | `-ImplicitCastExpr 0x16f6a9884b8 <col:13> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|       |     |   `-DeclRefExpr 0x16f6a988498 <col:13> 'EVP_AES_OCB_CTX *' lvalue Var 0x16f6a97f218 'octx' 'EVP_AES_OCB_CTX *'
|       |     `-IntegerLiteral 0x16f6a988500 <col:34> 'int' 0
|       |-IfStmt 0x16f6a9888c8 <line:2667:9, line:2672:9>
|       | |-BinaryOperator 0x16f6a988630 <line:2667:13, col:33> 'int' '>'
|       | | |-ImplicitCastExpr 0x16f6a988618 <col:13, col:19> 'int' <LValueToRValue>
|       | | | `-MemberExpr 0x16f6a9885c0 <col:13, col:19> 'int' lvalue ->aad_buf_len 0x16f6a91d458
|       | | |   `-ImplicitCastExpr 0x16f6a9885a8 <col:13> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|       | | |     `-DeclRefExpr 0x16f6a988588 <col:13> 'EVP_AES_OCB_CTX *' lvalue Var 0x16f6a97f218 'octx' 'EVP_AES_OCB_CTX *'
|       | | `-IntegerLiteral 0x16f6a9885f0 <col:33> 'int' 0
|       | `-CompoundStmt 0x16f6a9888a8 <col:36, line:2672:9>
|       |   |-IfStmt 0x16f6a9887e0 <line:2668:13, line:2670:25>
|       |   | |-OpaqueValueExpr 0x16f6a9887c8 <<invalid sloc>> '_Bool'
|       |   | `-ReturnStmt 0x16f6a9887b8 <col:17, col:25>
|       |   |   `-UnaryOperator 0x16f6a9887a0 <col:24, col:25> 'int' prefix '-'
|       |   |     `-IntegerLiteral 0x16f6a988778 <col:25> 'int' 1
|       |   `-BinaryOperator 0x16f6a988888 <line:2671:13, col:33> 'int' '='
|       |     |-MemberExpr 0x16f6a988830 <col:13, col:19> 'int' lvalue ->aad_buf_len 0x16f6a91d458
|       |     | `-ImplicitCastExpr 0x16f6a988818 <col:13> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|       |     |   `-DeclRefExpr 0x16f6a9887f8 <col:13> 'EVP_AES_OCB_CTX *' lvalue Var 0x16f6a97f218 'octx' 'EVP_AES_OCB_CTX *'
|       |     `-IntegerLiteral 0x16f6a988860 <col:33> 'int' 0
|       |-IfStmt 0x16f6a988e30 <line:2674:9, line:2682:9>
|       | |-OpaqueValueExpr 0x16f6a988e18 <<invalid sloc>> '_Bool'
|       | `-CompoundStmt 0x16f6a988de8 <line:2674:46, line:2682:9>
|       |   |-IfStmt 0x16f6a988a18 <line:2675:13, line:2676:25>
|       |   | |-BinaryOperator 0x16f6a9889a8 <line:2675:17, col:32> 'int' '<'
|       |   | | |-ImplicitCastExpr 0x16f6a988990 <col:17, col:23> 'int' <LValueToRValue>
|       |   | | | `-MemberExpr 0x16f6a988938 <col:17, col:23> 'int' lvalue ->taglen 0x16f6a91d538
|       |   | | |   `-ImplicitCastExpr 0x16f6a988920 <col:17> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|       |   | | |     `-DeclRefExpr 0x16f6a988900 <col:17> 'EVP_AES_OCB_CTX *' lvalue Var 0x16f6a97f218 'octx' 'EVP_AES_OCB_CTX *'
|       |   | | `-IntegerLiteral 0x16f6a988968 <col:32> 'int' 0
|       |   | `-ReturnStmt 0x16f6a988a08 <line:2676:17, col:25>
|       |   |   `-UnaryOperator 0x16f6a9889f0 <col:24, col:25> 'int' prefix '-'
|       |   |     `-IntegerLiteral 0x16f6a9889c8 <col:25> 'int' 1
|       |   |-IfStmt 0x16f6a988cd8 <line:2677:13, line:2679:25>
|       |   | |-OpaqueValueExpr 0x16f6a988cc0 <<invalid sloc>> '_Bool'
|       |   | `-ReturnStmt 0x16f6a988cb0 <col:17, col:25>
|       |   |   `-UnaryOperator 0x16f6a988c98 <col:24, col:25> 'int' prefix '-'
|       |   |     `-IntegerLiteral 0x16f6a988c70 <col:25> 'int' 1
|       |   |-BinaryOperator 0x16f6a988d80 <line:2680:13, col:28> 'int' '='
|       |   | |-MemberExpr 0x16f6a988d28 <col:13, col:19> 'int' lvalue ->iv_set 0x16f6a91a018
|       |   | | `-ImplicitCastExpr 0x16f6a988d10 <col:13> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|       |   | |   `-DeclRefExpr 0x16f6a988cf0 <col:13> 'EVP_AES_OCB_CTX *' lvalue Var 0x16f6a97f218 'octx' 'EVP_AES_OCB_CTX *'
|       |   | `-IntegerLiteral 0x16f6a988d58 <col:28> 'int' 0
|       |   `-ReturnStmt 0x16f6a988dd8 <line:2681:13, col:20>
|       |     `-ImplicitCastExpr 0x16f6a988dc0 <col:20> 'int' <LValueToRValue>
|       |       `-DeclRefExpr 0x16f6a988da0 <col:20> 'int' lvalue Var 0x16f6a97f0d0 'written_len' 'int'
|       |-IfStmt 0x16f6a9890b0 <line:2684:9, line:2685:21>
|       | |-OpaqueValueExpr 0x16f6a989098 <<invalid sloc>> '_Bool'
|       | `-ReturnStmt 0x16f6a989088 <col:13, col:21>
|       |   `-UnaryOperator 0x16f6a989070 <col:20, col:21> 'int' prefix '-'
|       |     `-IntegerLiteral 0x16f6a989048 <col:21> 'int' 1
|       |-BinaryOperator 0x16f6a982100 <line:2687:9, col:24> 'int' '='
|       | |-MemberExpr 0x16f6a989100 <col:9, col:15> 'int' lvalue ->iv_set 0x16f6a91a018
|       | | `-ImplicitCastExpr 0x16f6a9890e8 <col:9> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x16f6a9890c8 <col:9> 'EVP_AES_OCB_CTX *' lvalue Var 0x16f6a97f218 'octx' 'EVP_AES_OCB_CTX *'
|       | `-IntegerLiteral 0x16f6a989130 <col:24> 'int' 0
|       `-ReturnStmt 0x16f6a982158 <line:2688:9, col:16>
|         `-ImplicitCastExpr 0x16f6a982140 <col:16> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x16f6a982120 <col:16> 'int' lvalue Var 0x16f6a97f0d0 'written_len' 'int'
|-FunctionDecl 0x16f6a9822d0 <line:2692:1, line:2697:1> line:2692:12 invalid aes_ocb_cleanup 'int (int *)' static
| |-ParmVarDecl 0x16f6a982238 <col:28, col:44> col:44 invalid c 'int *'
| `-CompoundStmt 0x16f6a9825d8 <line:2693:1, line:2697:1>
|   |-DeclStmt 0x16f6a982428 <line:2694:5, col:58>
|   | `-VarDecl 0x16f6a9823a0 <col:5, col:22> col:22 used octx 'EVP_AES_OCB_CTX *'
|   `-ReturnStmt 0x16f6a9825c8 <line:2696:5, col:12>
|     `-IntegerLiteral 0x16f6a9825a0 <col:12> 'int' 1
|-VarDecl 0x16f6a982610 <line:967:74, <scratch space>:252:1> col:1 invalid aes_128_ocb 'const int' static
|-FunctionDecl 0x16f6a9829d0 <.//openssl//file_jk/before\crypto\evp\e_aes.c:976:45, line:978:34> <scratch space>:273:1 invalid EVP_aes_128_ocb 'const int *(void)'
| `-CompoundStmt 0x16f6a982a88 <.//openssl//file_jk/before\crypto\evp\e_aes.c:977:51, line:978:34>
|-VarDecl 0x16f6a982ab0 <line:967:74, <scratch space>:279:1> col:1 invalid aes_192_ocb 'const int' static
|-FunctionDecl 0x16f6a982e70 <.//openssl//file_jk/before\crypto\evp\e_aes.c:976:45, line:978:34> <scratch space>:300:1 invalid EVP_aes_192_ocb 'const int *(void)'
| `-CompoundStmt 0x16f6a982f28 <.//openssl//file_jk/before\crypto\evp\e_aes.c:977:51, line:978:34>
|-VarDecl 0x16f6a982f50 <line:967:74, <scratch space>:306:1> col:1 invalid aes_256_ocb 'const int' static
`-FunctionDecl 0x16f6a98f3e0 <.//openssl//file_jk/before\crypto\evp\e_aes.c:976:45, line:978:34> <scratch space>:21:1 invalid EVP_aes_256_ocb 'const int *(void)'
  `-CompoundStmt 0x16f6a98f498 <.//openssl//file_jk/before\crypto\evp\e_aes.c:977:51, line:978:34>
