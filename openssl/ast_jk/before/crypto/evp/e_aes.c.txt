TranslationUnitDecl 0x1eddc781fa8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1eddc782840 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1eddc782540 '__int128'
|-TypedefDecl 0x1eddc7828b0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1eddc782560 'unsigned __int128'
|-TypedefDecl 0x1eddc782be8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1eddc7829a0 'struct __NSConstantString_tag'
|   `-Record 0x1eddc782908 '__NSConstantString_tag'
|-TypedefDecl 0x1eddc782c58 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x1eddc782180 'unsigned long long'
|-TypedefDecl 0x1eddc782cf0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1eddc782cb0 'char *'
|   `-BuiltinType 0x1eddc782040 'char'
|-TypedefDecl 0x1eddc782d60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1eddc782cb0 'char *'
|   `-BuiltinType 0x1eddc782040 'char'
|-TypedefDecl 0x1eddc782e20 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x1eddc782180 'unsigned long long'
|-TypedefDecl 0x1eddc782e90 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x1eddc782cb0 'char *'
|   `-BuiltinType 0x1eddc782040 'char'
|-FunctionDecl 0x1edde131440 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1edde1314e0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x1edde131550 <col:21> Implicit
|-FunctionDecl 0x1edde1315a8 prev 0x1edde131440 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1edde1312d0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x1edde131698 <col:21> Inherited Implicit
|-TypedefDecl 0x1edde1316d8 prev 0x1eddc782c58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x1eddc782180 'unsigned long long'
|-TypedefDecl 0x1edde131780 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x1edde131750 'size_t' sugar
|   |-Typedef 0x1edde1316d8 'size_t'
|   `-BuiltinType 0x1eddc782180 'unsigned long long'
|-TypedefDecl 0x1edde1317f0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x1eddc7820e0 'long long'
|-TypedefDecl 0x1edde131860 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x1eddc7820e0 'long long'
|-TypedefDecl 0x1edde1318d0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x1eddc782120 'unsigned short'
|-TypedefDecl 0x1edde131940 <line:541:1, col:24> col:24 wint_t 'unsigned short'
| `-BuiltinType 0x1eddc782120 'unsigned short'
|-TypedefDecl 0x1edde1319b0 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x1eddc782120 'unsigned short'
|-TypedefDecl 0x1edde131a20 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x1eddc7820a0 'int'
|-TypedefDecl 0x1edde131a90 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x1eddc7820c0 'long'
|-TypedefDecl 0x1edde131b00 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x1eddc7820e0 'long long'
|-TypedefDecl 0x1edde131b90 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x1edde131b60 '__time64_t' sugar
|   |-Typedef 0x1edde131b00 '__time64_t'
|   `-BuiltinType 0x1eddc7820e0 'long long'
|-FunctionDecl 0x1edde131d08 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x1edde131f28 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x1edde16a1b0 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x1edde132068 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x1edde1320e0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x1edde132158 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x1edde1321d8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x1edde169f50 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x1edde16a290 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x1edde16a350 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x1edde16a4c0 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x1edde16a470 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x1edde16a410 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x1edde16a330 'struct threadlocaleinfostruct'
|       `-Record 0x1edde173ff0 'threadlocaleinfostruct'
|-TypedefDecl 0x1edde16a5d0 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x1edde16a580 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x1edde16a520 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x1edde16a3f0 'struct threadmbcinfostruct'
|       `-Record 0x1edde16a350 'threadmbcinfostruct'
|-RecordDecl 0x1edde16a628 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x1edde16a6e0 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x1edde16a7a0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1edde16a830 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x1edde16a8c0 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x1edde16a978 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x1edde16a920 'struct localeinfo_struct' sugar
|   `-RecordType 0x1edde16a780 'struct localeinfo_struct'
|     `-Record 0x1edde16a6e0 'localeinfo_struct'
|-TypedefDecl 0x1edde16aa50 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x1edde16aa00 'struct localeinfo_struct *'
|   `-ElaboratedType 0x1edde16a920 'struct localeinfo_struct' sugar
|     `-RecordType 0x1edde16a780 'struct localeinfo_struct'
|       `-Record 0x1edde16a6e0 'localeinfo_struct'
|-RecordDecl 0x1edde16aac8 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x1edde16ab80 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1edde16abf8 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x1edde16acb8 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x1edde16ad50 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x1edde16adc0 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x1edde16ae78 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x1edde16ae20 'struct localerefcount' sugar
|   `-RecordType 0x1edde16ab60 'struct localerefcount'
|     `-Record 0x1edde16aac8 'localerefcount'
|-RecordDecl 0x1edde173ff0 prev 0x1edde16a290 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x1edde174070 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1edde1740e8 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x1edde174158 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x1edde1741c8 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x1edde174238 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x1edde1743f8 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x1edde174468 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x1edde1744d8 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x1edde174548 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x1edde1745b8 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x1edde174628 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x1edde174680 parent 0x1eddc781fa8 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x1edde174810 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x1edde174880 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x1edde1748f0 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x1edde174960 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x1edde174a00 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x1edde174a70 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x1edde174b80 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x1edde174cb8 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x1edde174d68 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x1edde174d10 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x1edde16a330 'struct threadlocaleinfostruct'
|     `-Record 0x1edde173ff0 'threadlocaleinfostruct'
|-FunctionDecl 0x1edde1731f0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:47:9, col:142> col:25 _memccpy 'void *(void *, const void *, int, size_t) __attribute__((cdecl))':'void *(void *, const void *, int, size_t)'
| |-ParmVarDecl 0x1edde174df0 <col:69, col:76> col:76 _Dst 'void *'
| |-ParmVarDecl 0x1edde174ea0 <col:87, col:100> col:100 _Src 'const void *'
| |-ParmVarDecl 0x1edde174f20 <col:111, col:115> col:115 _Val 'int'
| `-ParmVarDecl 0x1edde172fe0 <col:126, col:133> col:133 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1edde1735b8 <line:48:54> col:54 implicit memchr 'void *(const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1edde173658 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1edde1736c0 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1edde173728 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1edde1737a8 prev 0x1edde1735b8 <col:38, col:150> col:54 memchr 'void *(const void *, int, unsigned long long)'
| |-ParmVarDecl 0x1edde1732e0 <col:94, col:107> col:107 _Buf 'const void *'
| |-ParmVarDecl 0x1edde173360 <col:119, col:123> col:123 _Val 'int'
| `-ParmVarDecl 0x1edde1733d8 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1edde173b68 <line:49:24, col:162> col:40 _memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x1edde173890 <col:77, col:90> col:90 _Buf1 'const void *'
| |-ParmVarDecl 0x1edde173910 <col:125, col:138> col:138 _Buf2 'const void *'
| `-ParmVarDecl 0x1edde173988 <col:150, col:157> col:157 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1edde16dfe0 <line:50:24, col:192> col:40 _memicmp_l 'int (const void *, const void *, size_t, _locale_t) __attribute__((cdecl))':'int (const void *, const void *, size_t, _locale_t)'
| |-ParmVarDecl 0x1edde173c50 <col:79, col:92> col:92 _Buf1 'const void *'
| |-ParmVarDecl 0x1edde173cd0 <col:127, col:140> col:140 _Buf2 'const void *'
| |-ParmVarDecl 0x1edde173d48 <col:152, col:159> col:159 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1edde173de0 <col:175, col:185> col:185 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1edde16e2e8 <line:51:32> col:32 implicit memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1edde16e388 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1edde16e3f0 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1edde16e458 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1edde16e4d8 prev 0x1edde16e2e8 <col:16, col:144> col:32 memcmp 'int (const void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x1edde16e0d0 <col:63, col:76> col:76 _Buf1 'const void *'
| |-ParmVarDecl 0x1edde16e150 <col:107, col:120> col:120 _Buf2 'const void *'
| `-ParmVarDecl 0x1edde16e1c8 <col:132, col:139> col:139 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1edde16e898 <line:55:17> col:17 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1edde16e938 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1edde16e9a0 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1edde16ea08 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1edde16ea88 prev 0x1edde16e898 <col:1, col:127> col:17 used memcpy 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x1edde16e5c0 <col:54, col:61> col:61 _Dst 'void *'
| |-ParmVarDecl 0x1edde16e640 <col:91, col:104> col:104 _Src 'const void *'
| `-ParmVarDecl 0x1edde16e6b8 <col:115, col:122> col:122 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1edde17c070 <line:57:9, col:191> col:26 memcpy_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x1edde16eb98 <col:82, col:89> col:89 _Dst 'void *'
| |-ParmVarDecl 0x1edde16ec30 <col:100, col:108> col:108 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1edde16ecb0 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x1edde16ed28 <col:174, col:182> col:182 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1edde17c438 <line:94:25> col:25 implicit memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1edde17c4d8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1edde17c540 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1edde17c5a8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1edde17c628 prev 0x1edde17c438 <col:9, col:107> col:25 memset 'void *(void *, int, unsigned long long)'
| |-ParmVarDecl 0x1edde17c160 <col:62, col:69> col:69 _Dst 'void *'
| |-ParmVarDecl 0x1edde17c1e0 <col:80, col:84> col:84 _Val 'int'
| `-ParmVarDecl 0x1edde17c258 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1edde17caa8 <line:98:57> col:57 implicit memccpy 'void *(void *, const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1edde17cb48 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1edde17cbb0 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1edde17cc18 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1edde17cc80 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1edde17cd08 prev 0x1edde17caa8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:98:187> col:57 memccpy 'void *(void *, const void *, int, unsigned long long)'
| |-ParmVarDecl 0x1edde17c7f0 <col:95, col:102> col:102 _Dst 'void *'
| |-ParmVarDecl 0x1edde17c870 <col:136, col:149> col:149 _Src 'const void *'
| |-ParmVarDecl 0x1edde17c8f0 <col:160, col:164> col:164 _Val 'int'
| |-ParmVarDecl 0x1edde17c968 <col:175, col:182> col:182 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1edde17cdc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memccpy. See online help for details." ""
|-FunctionDecl 0x1edde1781c8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:99:190> col:69 memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x1edde17cf90 <col:105, col:118> col:118 _Buf1 'const void *'
| |-ParmVarDecl 0x1edde178030 <col:153, col:166> col:166 _Buf2 'const void *'
| |-ParmVarDecl 0x1edde1780a8 <col:178, col:185> col:185 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1edde178280 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memicmp. See online help for details." ""
|-FunctionDecl 0x1edde178670 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:105:40, col:144> col:56 _strset_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x1edde1783a8 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x1edde178420 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1edde1784a0 <col:134, col:138> col:138 _Value 'int'
|-FunctionDecl 0x1edde178a40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:107:88 _strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x1edde178850 <col:108, col:114> col:114 _Dest 'char *'
| |-ParmVarDecl 0x1edde1788d0 <col:126, col:131> col:131 _Value 'int'
| `-DeprecatedAttr 0x1edde178af0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1edde178f00 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:109:40, col:158> col:56 strcpy_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x1edde178c38 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x1edde178cb0 <col:112, col:120> col:120 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1edde178d30 <col:141, col:154> col:154 _Src 'const char *'
|-FunctionDecl 0x1edde17a310 <line:112:88> col:88 implicit strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1edde17a3b0 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x1edde17a418 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1edde17a490 prev 0x1edde17a310 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:112:88 strcpy 'char *(char *, const char *)'
| |-ParmVarDecl 0x1edde17a128 <col:142, col:148> col:148 _Dest 'char *'
| |-ParmVarDecl 0x1edde17a1a8 <col:162, col:176> col:176 _Source 'const char *'
| `-DeprecatedAttr 0x1edde17a540 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1edde17a898 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:114:40, col:161> col:56 strcat_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x1edde17a688 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x1edde17a700 <col:115, col:123> col:123 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1edde17a780 <col:144, col:157> col:157 _Src 'const char *'
|-FunctionDecl 0x1edde17abc0 <line:118:88> col:88 implicit strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1edde17ac60 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x1edde17acc8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1edde17ad40 prev 0x1edde17abc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:118:88 strcat 'char *(char *, const char *)'
| |-ParmVarDecl 0x1edde17aa40 <col:170, col:176> col:176 _Dest 'char *'
| |-ParmVarDecl 0x1edde17aac0 <col:190, col:204> col:204 _Source 'const char *'
| `-DeprecatedAttr 0x1edde17adf0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1edde17e160 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:120:32> col:32 implicit strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x1edde17e200 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1edde17e268 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1edde17e2e0 prev 0x1edde17e160 <col:16, col:91> col:32 strcmp 'int (const char *, const char *)'
| |-ParmVarDecl 0x1edde17af38 <col:46, col:59> col:59 _Str1 'const char *'
| `-ParmVarDecl 0x1edde17afb8 <col:73, col:86> col:86 _Str2 'const char *'
|-FunctionDecl 0x1edde17e530 <line:121:32> col:32 implicit strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x1edde17e5d0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1edde17e640 prev 0x1edde17e530 <col:16, col:63> col:32 strlen 'unsigned long long (const char *)'
| `-ParmVarDecl 0x1edde17e3c0 <col:46, col:59> col:59 _Str 'const char *'
|-FunctionDecl 0x1edde17e938 <line:125:1, col:92> col:17 used strnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x1edde17e718 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x1edde17e790 <col:76, col:83> col:83 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1edde17eb88 <line:127:16, line:133:1> line:130:19 strnlen_s 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' static inline
| |-ParmVarDecl 0x1edde17ea18 <col:56, col:69> col:69 used _Str 'const char *'
| |-ParmVarDecl 0x1edde17ea90 <col:80, col:87> col:87 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x1edde17eeb8 <line:131:1, line:133:1>
|   `-ReturnStmt 0x1edde17eea8 <line:132:5, col:51>
|     `-ConditionalOperator 0x1edde17ee78 <col:12, col:51> 'unsigned long long'
|       |-ParenExpr 0x1edde17ece8 <col:12, col:20> 'int'
|       | `-BinaryOperator 0x1edde17ecc8 <col:13, col:19> 'int' '=='
|       |   |-ImplicitCastExpr 0x1edde17ec98 <col:13> 'const char *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x1edde17ec50 <col:13> 'const char *' lvalue ParmVar 0x1edde17ea18 '_Str' 'const char *'
|       |   `-ImplicitCastExpr 0x1edde17ecb0 <col:19> 'const char *' <NullToPointer>
|       |     `-IntegerLiteral 0x1edde17ec70 <col:19> 'int' 0
|       |-ImplicitCastExpr 0x1edde17ee60 <col:24> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x1edde17ed08 <col:24> 'int' 0
|       `-CallExpr 0x1edde17ee00 <col:28, col:51> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x1edde17ede8 <col:28> 'size_t (*)(const char *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x1edde17ed30 <col:28> 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' Function 0x1edde17e938 'strnlen' 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
|         |-ImplicitCastExpr 0x1edde17ee30 <col:36> 'const char *' <LValueToRValue>
|         | `-DeclRefExpr 0x1edde17ed50 <col:36> 'const char *' lvalue ParmVar 0x1edde17ea18 '_Str' 'const char *'
|         `-ImplicitCastExpr 0x1edde17ee48 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x1edde17ed70 <col:42> 'size_t':'unsigned long long' lvalue ParmVar 0x1edde17ea90 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x1edde17d1b8 <line:136:28, col:209> col:44 memmove_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x1edde17eee8 <col:100, col:107> col:107 _Dst 'void *'
| |-ParmVarDecl 0x1edde17ef60 <col:118, col:126> col:126 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1edde17efe0 <col:168, col:181> col:181 _Src 'const void *'
| `-ParmVarDecl 0x1edde17d080 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1edde17d4c0 <line:139:67> col:67 implicit memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1edde17d560 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1edde17d5c8 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1edde17d630 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1edde17d6b0 prev 0x1edde17d4c0 <col:51, col:186> col:67 memmove 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x1edde17d2a8 <col:109, col:116> col:116 _Dst 'void *'
| |-ParmVarDecl 0x1edde17d328 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x1edde17d3a0 <col:174, col:181> col:181 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1edde17d8e8 <line:146:24, col:76> col:40 _strdup 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| `-ParmVarDecl 0x1edde17d798 <col:59, col:72> col:72 _Src 'const char *'
|-FunctionDecl 0x1edde17dbb0 <line:152:54> col:54 implicit strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x1edde17dc50 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1edde17dcb8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1edde17dd30 prev 0x1edde17dbb0 <col:38, col:100> col:54 strchr 'char *(const char *, int)'
| |-ParmVarDecl 0x1edde17d9c0 <col:68, col:81> col:81 _Str 'const char *'
| `-ParmVarDecl 0x1edde17da40 <col:92, col:96> col:96 _Val 'int'
|-FunctionDecl 0x1edde17df90 <line:153:24, col:103> col:40 _stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1edde17de10 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x1edde17de90 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x1edde1771a0 <line:154:24, col:103> col:40 _strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1edde177020 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x1edde1770a0 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x1edde177558 <line:155:24, col:133> col:40 _stricmp_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x1edde177280 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x1edde177300 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x1edde177378 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1edde1777c0 <line:156:24, col:103> col:40 strcoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1edde177640 <col:56, col:69> col:69 _Str1 'const char *'
| `-ParmVarDecl 0x1edde1776c0 <col:84, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x1edde177ab8 <line:157:24, col:133> col:40 _strcoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x1edde1778a0 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x1edde177920 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x1edde177998 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1edde177d20 <line:158:24, col:104> col:40 _stricoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1edde177ba0 <col:58, col:71> col:71 _Str1 'const char *'
| `-ParmVarDecl 0x1edde177c20 <col:86, col:99> col:99 _Str2 'const char *'
|-FunctionDecl 0x1edde17b060 <line:159:24, col:134> col:40 _stricoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x1edde177e00 <col:60, col:73> col:73 _Str1 'const char *'
| |-ParmVarDecl 0x1edde177e80 <col:88, col:101> col:101 _Str2 'const char *'
| `-ParmVarDecl 0x1edde177ef8 <col:117, col:127> col:127 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1edde17b418 <line:160:24, col:167> col:40 _strncoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1edde17b148 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1edde17b1c8 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x1edde17b240 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1edde17b880 <line:161:24, col:195> col:40 _strncoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1edde17b500 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1edde17b580 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x1edde17b5f8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1edde17b670 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1edde17bb88 <line:162:24, col:167> col:40 _strnicoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1edde17b970 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1edde17b9f0 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x1edde17ba68 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1edde17bf20 <line:163:24, col:196> col:40 _strnicoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1edde17bc70 <col:80, col:93> col:93 _Str1 'const char *'
| |-ParmVarDecl 0x1edde17bcf0 <col:127, col:140> col:140 _Str2 'const char *'
| |-ParmVarDecl 0x1edde17bd68 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1edde17bde0 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1edde17f2c8 <line:164:40> col:40 implicit strcspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x1edde17f368 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1edde17f3d0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1edde17f448 prev 0x1edde17f2c8 <col:24, col:104> col:40 strcspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x1edde17f0a0 <col:56, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x1edde17f120 <col:83, col:96> col:96 _Control 'const char *'
|-FunctionDecl 0x1edde17f700 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:165:118> col:77 _strerror 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x1edde17f620 <col:98, col:111> col:111 _ErrMsg 'const char *'
| `-DeprecatedAttr 0x1edde17f7a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1edde17fb80 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:166:28, col:155> col:44 _strerror_s 'errno_t (char *, size_t, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *)'
| |-ParmVarDecl 0x1edde17f8f0 <col:85, col:92> col:92 _Buf 'char *'
| |-ParmVarDecl 0x1edde17f968 <col:103, col:110> col:110 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1edde17f9e8 <col:135, col:148> col:148 _ErrMsg 'const char *'
|-FunctionDecl 0x1edde17fe98 <line:168:76> col:76 implicit strerror 'char *(int)' extern
| `-ParmVarDecl 0x1edde17ff38 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1edde17ffa8 prev 0x1edde17fe98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:168:93> col:76 strerror 'char *(int)'
| |-ParmVarDecl 0x1edde17fd60 <col:90> col:93 'int'
| `-DeprecatedAttr 0x1edde180050 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1edde1803c0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:170:28, col:139> col:44 strerror_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x1edde1801b0 <col:84, col:91> col:91 _Buf 'char *'
| |-ParmVarDecl 0x1edde180228 <col:102, col:109> col:109 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1edde1802a8 <col:128, col:132> col:132 _ErrNum 'int'
|-FunctionDecl 0x1edde1806c8 <line:173:28, col:109> col:44 _strlwr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x1edde1804a8 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x1edde180520 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1edde1809b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:175:79 _strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1edde180868 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x1edde180a60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1edde180e70 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:176:28, col:139> col:44 _strlwr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1edde180ba8 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x1edde180c20 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1edde180c98 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1edde1791f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:178:82 _strlwr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x1edde181018 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x1edde179040 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1edde1792a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1edde179758 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:180:40, col:206> col:56 strncat_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x1edde1793e8 <col:98, col:105> col:105 _Dst 'char *'
| |-ParmVarDecl 0x1edde179460 <col:116, col:124> col:124 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1edde1794e0 <col:165, col:178> col:178 _Src 'const char *'
| `-ParmVarDecl 0x1edde179558 <col:189, col:197> col:197 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1edde179bd8 <line:186:83> col:83 implicit strncat 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1edde179c78 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1edde179ce0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1edde179d48 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1edde179dc8 prev 0x1edde179bd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:186:83 strncat 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1edde179908 <col:161, col:167> col:167 _Dest 'char *'
| |-ParmVarDecl 0x1edde179988 <col:198, col:212> col:212 _Source 'const char *'
| |-ParmVarDecl 0x1edde179a00 <col:226, col:234> col:234 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1edde179e80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1edde181270 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:188:40> col:40 implicit strncmp 'int (const char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1edde181310 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1edde181378 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1edde1813e0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1edde181460 prev 0x1edde181270 <col:24, col:163> col:40 strncmp 'int (const char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1edde179fc8 <col:75, col:88> col:88 _Str1 'const char *'
| |-ParmVarDecl 0x1edde1810d8 <col:122, col:135> col:135 _Str2 'const char *'
| `-ParmVarDecl 0x1edde181150 <col:147, col:154> col:154 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1edde181760 <line:189:24, col:165> col:40 _strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1edde181548 <col:77, col:90> col:90 _Str1 'const char *'
| |-ParmVarDecl 0x1edde1815c8 <col:124, col:137> col:137 _Str2 'const char *'
| `-ParmVarDecl 0x1edde181640 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1edde181af8 <line:190:24, col:195> col:40 _strnicmp_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1edde181848 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1edde1818c8 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x1edde181940 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1edde1819b8 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1edde181e90 <line:192:40, col:203> col:56 strncpy_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x1edde181be8 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x1edde181c60 <col:113, col:121> col:121 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1edde181ce0 <col:162, col:175> col:175 _Src 'const char *'
| `-ParmVarDecl 0x1edde181d58 <col:186, col:194> col:194 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1edde182268 <line:195:83> col:83 implicit strncpy 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1edde182308 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1edde182370 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1edde1823d8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1edde182458 prev 0x1edde182268 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:195:83 strncpy 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1edde182040 <col:167, col:173> col:173 _Dest 'char *'
| |-ParmVarDecl 0x1edde1820d0 <col:204, col:218> col:218 _Source 'const char *'
| |-ParmVarDecl 0x1edde182148 <col:232, col:240> col:240 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1edde182510 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1edde1829c8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:196:40, col:174> col:56 _strnset_s 'errno_t (char *, size_t, int, size_t) __attribute__((cdecl))':'errno_t (char *, size_t, int, size_t)'
| |-ParmVarDecl 0x1edde182658 <col:99, col:106> col:106 _Str 'char *'
| |-ParmVarDecl 0x1edde1826d0 <col:117, col:124> col:124 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1edde182750 <col:143, col:147> col:147 _Val 'int'
| `-ParmVarDecl 0x1edde1827c8 <col:158, col:165> col:165 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1edde182e48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:198:83 _strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x1edde182b78 <col:163, col:169> col:169 _Dest 'char *'
| |-ParmVarDecl 0x1edde182bf8 <col:181, col:186> col:186 _Val 'int'
| |-ParmVarDecl 0x1edde182c70 <col:197, col:205> col:205 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1edde182f00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1edde183250 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:199:54> col:54 implicit strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x1edde1832f0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1edde183358 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1edde1833d0 prev 0x1edde183250 <col:38, col:116> col:54 strpbrk 'char *(const char *, const char *)'
| |-ParmVarDecl 0x1edde183048 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x1edde1830e0 <col:95, col:108> col:108 _Control 'const char *'
|-FunctionDecl 0x1edde183630 <line:200:54> col:54 implicit strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x1edde1836d0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1edde183738 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1edde1837b0 prev 0x1edde183630 <col:38, col:100> col:54 strrchr 'char *(const char *, int)'
| |-ParmVarDecl 0x1edde1834b0 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x1edde183530 <col:93, col:97> col:97 _Ch 'int'
|-FunctionDecl 0x1edde183970 <line:201:9, col:54> col:25 _strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| `-ParmVarDecl 0x1edde183890 <col:43, col:50> col:50 _Str 'char *'
|-FunctionDecl 0x1edde183bc0 <line:202:40> col:40 implicit strspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x1edde183c60 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1edde183cc8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1edde183d40 prev 0x1edde183bc0 <col:24, col:101> col:40 strspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x1edde183a48 <col:54, col:67> col:67 _Str 'const char *'
| `-ParmVarDecl 0x1edde183ac8 <col:80, col:93> col:93 _Control 'const char *'
|-FunctionDecl 0x1edde183fa0 <line:203:70> col:70 implicit strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x1edde184040 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1edde1fe040 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1edde1fe0b8 prev 0x1edde183fa0 <col:54, col:130> col:70 strstr 'char *(const char *, const char *)'
| |-ParmVarDecl 0x1edde183e20 <col:84, col:97> col:97 _Str 'const char *'
| `-ParmVarDecl 0x1edde183ea0 <col:110, col:123> col:123 _SubStr 'const char *'
|-FunctionDecl 0x1edde1fe3d8 <line:204:74> col:74 implicit strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1edde1fe478 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x1edde1fe4e0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1edde1fe558 prev 0x1edde1fe3d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:204:134> col:74 strtok 'char *(char *, const char *)'
| |-ParmVarDecl 0x1edde1fe258 <col:95, col:102> col:102 _Str 'char *'
| |-ParmVarDecl 0x1edde1fe2d8 <col:115, col:128> col:128 _Delim 'const char *'
| `-DeprecatedAttr 0x1edde1fe608 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1edde1fe9e8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:206:36, col:162> col:52 strtok_s 'char *(char *, const char *, char **) __attribute__((cdecl))':'char *(char *, const char *, char **)'
| |-ParmVarDecl 0x1edde1fe750 <col:75, col:82> col:82 _Str 'char *'
| |-ParmVarDecl 0x1edde1fe7d0 <col:95, col:108> col:108 _Delim 'const char *'
| `-ParmVarDecl 0x1edde1fe850 <col:146, col:154> col:154 _Context 'char **'
|-FunctionDecl 0x1edde1fec40 <line:208:28, col:109> col:44 _strupr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x1edde1fead0 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x1edde1feb48 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1edde1feec0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:210:79 _strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1edde1fede0 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x1edde1fef68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1edde1fd338 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:211:28, col:130> col:44 _strupr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1edde1fd130 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x1edde1fd1a8 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1edde1fd220 <col:113, col:123> col:123 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1edde1fd658 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:213:82 _strupr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x1edde1fd4e0 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x1edde1fd558 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1edde1fd708 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1edde1fdb20 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:214:44> col:44 implicit strxfrm 'unsigned long long (char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1edde1fdbc0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1edde1fdc28 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1edde1fdc90 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1edde1fdd10 prev 0x1edde1fdb20 <col:28, col:155> col:44 strxfrm 'unsigned long long (char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1edde1fd850 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x1edde1fd8d0 <col:115, col:128> col:128 _Src 'const char *'
| `-ParmVarDecl 0x1edde1fd948 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1edde1f7108 <line:215:28, col:185> col:44 _strxfrm_l 'size_t (char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1edde1fddf8 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x1edde1fde78 <col:117, col:130> col:130 _Src 'const char *'
| |-ParmVarDecl 0x1edde1fdef0 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1edde1fdf68 <col:168, col:178> col:178 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1edde1f73b0 <line:245:71> col:71 implicit strdup 'char *(const char *)' extern
| `-ParmVarDecl 0x1edde1f7450 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1edde1f74c0 prev 0x1edde1f73b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:245:106> col:71 strdup 'char *(const char *)'
| |-ParmVarDecl 0x1edde1f72d0 <col:89, col:102> col:102 _Src 'const char *'
| `-DeprecatedAttr 0x1edde1f7568 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strdup. See online help for details." ""
|-FunctionDecl 0x1edde1f78b0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:252:129> col:69 strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1edde1f7730 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x1edde1f77b0 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x1edde1f7960 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strcmpi. See online help for details." ""
|-FunctionDecl 0x1edde1f7ca8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:253:129> col:69 stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1edde1f7b28 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x1edde1f7ba8 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x1edde1f7d58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details." ""
|-FunctionDecl 0x1edde1ff088 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:254:84> col:56 strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1edde1f7f20 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x1edde1ff130 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strlwr. See online help for details." ""
|-FunctionDecl 0x1edde1ff548 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:255:193> col:70 strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1edde1ff330 <col:106, col:119> col:119 _Str1 'const char *'
| |-ParmVarDecl 0x1edde1ff3b0 <col:153, col:166> col:166 _Str 'const char *'
| |-ParmVarDecl 0x1edde1ff428 <col:177, col:184> col:184 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1edde1ff600 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnicmp. See online help for details." ""
|-FunctionDecl 0x1edde1ff9e0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:256:143> col:57 strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x1edde1ff7c8 <col:94, col:101> col:101 _Str 'char *'
| |-ParmVarDecl 0x1edde1ff848 <col:112, col:116> col:116 _Val 'int'
| |-ParmVarDecl 0x1edde1ff8c0 <col:127, col:134> col:134 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1edde1ffa98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnset. See online help for details." ""
|-FunctionDecl 0x1edde1ffd40 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:257:84> col:56 strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1edde1ffc60 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x1edde1ffde8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strrev. See online help for details." ""
|-FunctionDecl 0x1edde1fb110 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:258:99> col:56 strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x1edde1fffb0 <col:73, col:80> col:80 _Str 'char *'
| |-ParmVarDecl 0x1edde1fb010 <col:91, col:95> col:95 _Val 'int'
| `-DeprecatedAttr 0x1edde1fb1c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strset. See online help for details." ""
|-FunctionDecl 0x1edde1fb468 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:259:84> col:56 strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1edde1fb388 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x1edde1fb510 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strupr. See online help for details." ""
|-FunctionDecl 0x1edde1fb7a0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:273:24, col:77> col:42 _wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| `-ParmVarDecl 0x1edde1fb630 <col:57, col:73> col:73 _Str 'const wchar_t *'
|-FunctionDecl 0x1edde1fbb30 <line:280:40, col:167> col:56 wcscat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x1edde1fb870 <col:97, col:107> col:107 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1edde1fb8e8 <col:118, col:126> col:126 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1edde1fb960 <col:147, col:163> col:163 _Src 'const wchar_t *'
|-FunctionDecl 0x1edde1fbee8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:284:82 wcscat 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1edde1fbcd0 <col:164, col:173> col:173 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1edde1fbd48 <col:187, col:204> col:204 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x1edde1fbf98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1edde1f9308 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:288:41> col:41 implicit wcschr 'unsigned short *(const unsigned short *, unsigned short)' extern
| |-ParmVarDecl 0x1edde1f93a8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x1edde1f9410 <<invalid sloc>> <invalid sloc> 'unsigned short'
|-FunctionDecl 0x1edde1f9488 prev 0x1edde1f9308 <col:23, col:88> col:41 wcschr 'unsigned short *(const unsigned short *, unsigned short)'
| |-ParmVarDecl 0x1edde1f90e8 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1edde1f9160 <col:77, col:85> col:85 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1edde1f9780 <line:289:36> col:36 implicit wcscmp 'int (const unsigned short *, const unsigned short *)' extern
| |-ParmVarDecl 0x1edde1f9820 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x1edde1f9888 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x1edde1f9900 prev 0x1edde1f9780 <col:24, col:101> col:36 wcscmp 'int (const unsigned short *, const unsigned short *)'
| |-ParmVarDecl 0x1edde1f9560 <col:50, col:66> col:66 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1edde1f95d8 <col:80, col:96> col:96 _Str2 'const wchar_t *'
|-FunctionDecl 0x1edde1f9be0 <line:291:40, col:164> col:56 wcscpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x1edde1f99d8 <col:94, col:104> col:104 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1edde1f9a50 <col:115, col:123> col:123 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1edde1f9ac8 <col:144, col:160> col:160 _Src 'const wchar_t *'
|-FunctionDecl 0x1edde1f9ef0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:294:82 wcscpy 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1edde1f9d80 <col:136, col:145> col:145 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1edde1f9df8 <col:159, col:176> col:176 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x1edde1f9fa0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1edde1fa318 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:295:24, col:107> col:39 wcscspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1edde1fa0f8 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1edde1fa170 <col:83, col:99> col:99 _Control 'const wchar_t *'
|-FunctionDecl 0x1edde1fa560 <line:296:39> col:39 implicit wcslen 'unsigned long long (const unsigned short *)' extern
| `-ParmVarDecl 0x1edde1fa600 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x1edde1fa670 prev 0x1edde1fa560 <col:24, col:73> col:39 wcslen 'unsigned long long (const unsigned short *)'
| `-ParmVarDecl 0x1edde1fa3f0 <col:53, col:69> col:69 _Str 'const wchar_t *'
|-FunctionDecl 0x1edde1fa958 <line:300:1, col:94> col:16 used wcsnlen 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
| |-ParmVarDecl 0x1edde1fa740 <col:51, col:67> col:67 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1edde1fa7b8 <col:78, col:85> col:85 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1edde1faba0 <line:302:16, line:308:1> line:305:18 wcsnlen_s 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' static inline
| |-ParmVarDecl 0x1edde1faa30 <col:55, col:71> col:71 used _Src 'const wchar_t *'
| |-ParmVarDecl 0x1edde1faaa8 <col:82, col:89> col:89 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x1edde1faf38 <line:306:1, line:308:1>
|   `-ReturnStmt 0x1edde1faf28 <line:307:5, col:56>
|     `-ConditionalOperator 0x1edde1faef8 <col:12, col:56> 'unsigned long long'
|       |-ParenExpr 0x1edde1fad60 <col:12, col:25> 'int'
|       | `-BinaryOperator 0x1edde1fad40 <col:13, line:36:27> 'int' '=='
|       |   |-ImplicitCastExpr 0x1edde1fad10 <line:307:13> 'const wchar_t *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x1edde1fac68 <col:13> 'const wchar_t *' lvalue ParmVar 0x1edde1faa30 '_Src' 'const wchar_t *'
|       |   `-ImplicitCastExpr 0x1edde1fad28 <line:36:17, col:27> 'const wchar_t *' <BitCast>
|       |     `-ParenExpr 0x1edde1facf0 <col:17, col:27> 'void *'
|       |       `-CStyleCastExpr 0x1edde1facc8 <col:18, col:26> 'void *' <NullToPointer>
|       |         `-IntegerLiteral 0x1edde1fac88 <col:26> 'int' 0
|       |-ImplicitCastExpr 0x1edde1faee0 <line:307:29> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x1edde1fad80 <col:29> 'int' 0
|       `-CallExpr 0x1edde1fae80 <col:33, col:56> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x1edde1fae68 <col:33> 'size_t (*)(const wchar_t *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x1edde1fada8 <col:33> 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' Function 0x1edde1fa958 'wcsnlen' 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
|         |-ImplicitCastExpr 0x1edde1faeb0 <col:41> 'const wchar_t *' <LValueToRValue>
|         | `-DeclRefExpr 0x1edde1fadc8 <col:41> 'const wchar_t *' lvalue ParmVar 0x1edde1faa30 '_Src' 'const wchar_t *'
|         `-ImplicitCastExpr 0x1edde1faec8 <col:47> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x1edde1fade8 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x1edde1faaa8 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x1edde1f82d8 <line:311:40, col:212> col:56 wcsncat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x1edde1faf60 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1edde1f7fe0 <col:119, col:127> col:127 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1edde1f8058 <col:168, col:184> col:184 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1edde1f80d0 <col:195, col:203> col:203 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1edde1f8740 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:316:86 wcsncat 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1edde1f8480 <col:167, col:176> col:176 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1edde1f84f8 <col:207, col:224> col:224 _Source 'const wchar_t *'
| |-ParmVarDecl 0x1edde1f8570 <col:238, col:246> col:246 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1edde1f87f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1edde1f8c08 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:318:36> col:36 implicit wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)' extern
| |-ParmVarDecl 0x1edde1f8ca8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| |-ParmVarDecl 0x1edde1f8d10 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x1edde1f8d78 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1edde1f8df8 prev 0x1edde1f8c08 <col:24, col:165> col:36 wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)'
| |-ParmVarDecl 0x1edde1f8938 <col:71, col:87> col:87 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1edde1f89b0 <col:121, col:137> col:137 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1edde1f8a28 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1edde200210 <line:320:40, col:209> col:56 wcsncpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x1edde1f8ed8 <col:95, col:105> col:105 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1edde1f8f50 <col:116, col:124> col:124 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1edde200060 <col:165, col:181> col:181 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1edde2000d8 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1edde2005c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:323:86 wcsncpy 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1edde2003b8 <col:179, col:188> col:188 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1edde200430 <col:219, col:236> col:236 _Source 'const wchar_t *'
| |-ParmVarDecl 0x1edde2004a8 <col:250, col:258> col:258 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1edde200678 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1edde2009d8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:324:38, col:124> col:56 wcspbrk 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1edde2007b8 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1edde200830 <col:100, col:116> col:116 _Control 'const wchar_t *'
|-FunctionDecl 0x1edde200c20 <line:325:38, col:109> col:56 wcsrchr 'wchar_t *(const wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(const wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1edde200ab0 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1edde200b28 <col:98, col:106> col:106 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1edde200e68 <line:326:24, col:106> col:39 wcsspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1edde200cf8 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1edde200d70 <col:82, col:98> col:98 _Control 'const wchar_t *'
|-FunctionDecl 0x1edde2020e0 <line:329:23, col:107> col:41 wcsstr 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1edde200f40 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1edde200fb8 <col:84, col:100> col:100 _SubStr 'const wchar_t *'
|-FunctionDecl 0x1edde2023e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:330:142> col:76 wcstok 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1edde202278 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x1edde2022f0 <col:120, col:136> col:136 _Delim 'const wchar_t *'
| `-DeprecatedAttr 0x1edde202498 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1edde202900 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:332:36, col:173> col:54 wcstok_s 'wchar_t *(wchar_t *, const wchar_t *, wchar_t **) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x1edde2025d8 <col:77, col:87> col:87 _Str 'wchar_t *'
| |-ParmVarDecl 0x1edde202650 <col:100, col:116> col:116 _Delim 'const wchar_t *'
| `-ParmVarDecl 0x1edde202730 <col:154, col:165> col:165 _Context 'wchar_t **'
|-FunctionDecl 0x1edde202c20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:334:105> col:79 _wcserror 'wchar_t *(int) __attribute__((cdecl))':'wchar_t *(int)'
| |-ParmVarDecl 0x1edde202aa8 <col:94, col:98> col:98 _ErrNum 'int'
| `-DeprecatedAttr 0x1edde202cc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1edde208150 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:335:28, col:147> col:44 _wcserror_s 'errno_t (wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, int)'
| |-ParmVarDecl 0x1edde202e08 <col:89, col:99> col:99 _Buf 'wchar_t *'
| |-ParmVarDecl 0x1edde202e80 <col:110, col:117> col:117 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1edde202f00 <col:136, col:140> col:140 _ErrNum 'int'
|-FunctionDecl 0x1edde208400 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:337:122> col:80 __wcserror 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x1edde208328 <col:102, col:118> col:118 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x1edde2084a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1edde208870 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:338:28, col:165> col:44 __wcserror_s 'errno_t (wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x1edde2085e8 <col:90, col:100> col:100 _Buffer 'wchar_t *'
| |-ParmVarDecl 0x1edde208660 <col:114, col:121> col:121 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1edde2086d8 <col:142, col:158> col:158 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x1edde208ac8 <line:341:24, col:103> col:36 _wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1edde208950 <col:52, col:68> col:68 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1edde2089c8 <col:82, col:98> col:98 _Str2 'const wchar_t *'
|-FunctionDecl 0x1edde208e68 <line:342:24, col:133> col:36 _wcsicmp_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1edde208ba0 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1edde208c18 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1edde208c90 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1edde203118 <line:343:24, col:167> col:36 _wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1edde208f48 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1edde208fc0 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1edde209038 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1edde203570 <line:344:24, col:197> col:36 _wcsnicmp_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1edde2031f8 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1edde203270 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1edde2032e8 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1edde203360 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1edde2039c8 <line:345:40, col:181> col:56 _wcsnset_s 'errno_t (wchar_t *, size_t, wchar_t, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t, size_t)'
| |-ParmVarDecl 0x1edde203658 <col:99, col:109> col:109 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1edde2036d0 <col:120, col:127> col:127 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1edde203748 <col:146, col:154> col:154 _Val 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1edde2037c0 <col:165, col:172> col:172 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1edde203e30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:347:86 _wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x1edde203b70 <col:172, col:181> col:181 _Str 'wchar_t *'
| |-ParmVarDecl 0x1edde203be8 <col:187, col:196> col:196 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x1edde203c60 <col:207, col:215> col:215 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1edde203ee8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1edde2071e0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:348:9, col:59> col:27 _wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| `-ParmVarDecl 0x1edde204028 <col:45, col:55> col:55 _Str 'wchar_t *'
|-FunctionDecl 0x1edde207570 <line:349:40, col:159> col:56 _wcsset_s 'errno_t (wchar_t *, size_t, wchar_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t)'
| |-ParmVarDecl 0x1edde2072b0 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1edde207328 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1edde2073a0 <col:145, col:153> col:153 _Value 'wchar_t':'unsigned short'
|-FunctionDecl 0x1edde207928 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:351:85 _wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1edde207710 <col:150, col:159> col:159 _Str 'wchar_t *'
| |-ParmVarDecl 0x1edde207788 <col:165, col:174> col:174 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x1edde2079d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1edde207d38 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:353:28, col:126> col:44 _wcslwr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1edde207b18 <col:86, col:96> col:96 _Str 'wchar_t *'
| `-ParmVarDecl 0x1edde207b90 <col:107, col:114> col:114 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1edde207fa8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:355:82 _wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1edde207ed0 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x1edde208050 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1edde201430 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:356:28, col:156> col:44 _wcslwr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1edde201168 <col:88, col:98> col:98 _Str 'wchar_t *'
| |-ParmVarDecl 0x1edde2011e0 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1edde201258 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1edde2017e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:358:85 _wcslwr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1edde2015d0 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x1edde201648 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1edde201898 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1edde201b48 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:359:28, col:112> col:44 _wcsupr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1edde2019d8 <col:79, col:89> col:89 _Str 'wchar_t *'
| `-ParmVarDecl 0x1edde201a50 <col:100, col:107> col:107 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1edde201db8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:361:82 _wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1edde201ce0 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x1edde201e60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1edde20a290 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:362:28, col:142> col:44 _wcsupr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1edde201fa0 <col:81, col:91> col:91 _Str 'wchar_t *'
| |-ParmVarDecl 0x1edde20a100 <col:102, col:109> col:109 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1edde20a178 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1edde20a5a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:364:85 _wcsupr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1edde20a430 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x1edde20a4a8 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1edde20a650 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1edde20aa50 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:365:28, col:159> col:43 wcsxfrm 'size_t (wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1edde20a790 <col:93, col:103> col:103 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1edde20a808 <col:116, col:132> col:132 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1edde20a880 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1edde20ae98 <line:366:28, col:189> col:43 _wcsxfrm_l 'size_t (wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1edde20ab30 <col:96, col:106> col:106 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1edde20aba8 <col:119, col:134> col:134 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1edde20ac20 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1edde20ac98 <col:172, col:182> col:182 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1edde2040a0 <line:367:24, col:102> col:36 wcscoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1edde20af80 <col:51, col:67> col:67 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1edde20aff8 <col:81, col:97> col:97 _Str2 'const wchar_t *'
|-FunctionDecl 0x1edde204388 <line:368:24, col:133> col:36 _wcscoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1edde204178 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1edde2041f0 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1edde204268 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1edde2045e0 <line:369:24, col:104> col:36 _wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1edde204468 <col:53, col:69> col:69 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1edde2044e0 <col:83, col:99> col:99 _Str2 'const wchar_t *'
|-FunctionDecl 0x1edde2048c8 <line:370:24, col:133> col:36 _wcsicoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1edde2046b8 <col:55, col:71> col:71 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1edde204730 <col:85, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1edde2047a8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1edde204bb8 <line:371:24, col:167> col:36 _wcsncoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1edde2049a8 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1edde204a20 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1edde204a98 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1edde204f40 <line:372:24, col:197> col:36 _wcsncoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1edde204c98 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1edde204d10 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1edde204d88 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1edde204e00 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1edde20b2a8 <line:373:24, col:168> col:36 _wcsnicoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1edde205028 <col:74, col:90> col:90 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1edde20b110 <col:124, col:140> col:140 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1edde20b188 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1edde20b630 <line:374:24, col:198> col:36 _wcsnicoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1edde20b388 <col:76, col:92> col:92 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1edde20b400 <col:126, col:142> col:142 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1edde20b478 <col:154, col:161> col:161 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1edde20b4f0 <col:181, col:191> col:191 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1edde20b890 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:403:108> col:74 wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x1edde20b7b8 <col:88, col:104> col:104 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x1edde20b938 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsdup. See online help for details." ""
|-FunctionDecl 0x1edde20bc70 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:413:135> col:69 wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1edde20baf8 <col:84, col:100> col:100 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1edde20bb70 <col:114, col:130> col:130 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x1edde20bd20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicmp. See online help for details." ""
|-FunctionDecl 0x1edde2090f0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:414:200> col:70 wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1edde20bee0 <col:106, col:122> col:122 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1edde20bf58 <col:156, col:172> col:172 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1edde20bfd0 <col:184, col:191> col:191 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1edde2091a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnicmp. See online help for details." ""
|-FunctionDecl 0x1edde209570 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:415:153> col:60 wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x1edde209368 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x1edde2093e0 <col:118, col:126> col:126 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x1edde209458 <col:137, col:144> col:144 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1edde209628 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnset. See online help for details." ""
|-FunctionDecl 0x1edde2098c0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:416:90> col:59 wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1edde2097e8 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1edde209968 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsrev. See online help for details." ""
|-FunctionDecl 0x1edde209c98 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:417:104> col:59 wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1edde209b28 <col:76, col:86> col:86 _Str 'wchar_t *'
| |-ParmVarDecl 0x1edde209ba0 <col:92, col:100> col:100 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x1edde209d48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsset. See online help for details." ""
|-FunctionDecl 0x1edde209fe0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:418:90> col:59 wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1edde209f08 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1edde20a088 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcslwr. See online help for details." ""
|-FunctionDecl 0x1edde2133e0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:419:90> col:59 wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1edde213308 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1edde213488 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsupr. See online help for details." ""
|-FunctionDecl 0x1edde2137c0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:420:137> col:70 wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1edde213648 <col:86, col:102> col:102 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1edde2136c0 <col:116, col:132> col:132 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x1edde213870 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicoll. See online help for details." ""
|-FunctionDecl 0x1edde213c60 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:35:9, col:112> col:22 _wassert 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
| |-ParmVarDecl 0x1edde213990 <col:38, col:54> col:54 _Message 'const wchar_t *'
| |-ParmVarDecl 0x1edde213a08 <col:71, col:86> col:86 _File 'const wchar_t *'
| `-ParmVarDecl 0x1edde213a88 <col:98, col:107> col:107 _Line 'unsigned int'
|-RecordDecl 0x1edde213d30 <.//openssl//file_jk/before\crypto\evp/evp_locl.h:12:1, line:22:1> line:12:8 invalid struct evp_md_ctx_st definition
| |-FieldDecl 0x1edde213e08 <line:13:5, col:19> col:19 invalid digest 'const int *'
| |-FieldDecl 0x1edde213e78 <line:14:5, col:13> col:13 invalid engine 'int *'
| |-FieldDecl 0x1edde213ee8 <line:16:5, col:19> col:19 flags 'unsigned long'
| |-FieldDecl 0x1edde213f58 <line:17:5, col:11> col:11 md_data 'void *'
| |-FieldDecl 0x1edde213fc8 <line:19:5, col:19> col:19 invalid pctx 'int *'
| `-FieldDecl 0x1edde20d2f8 <line:21:5, col:67> col:11 update 'int (*)(int *, const void *, size_t)'
|-RecordDecl 0x1edde20d350 <line:24:1, line:42:1> line:24:8 invalid struct evp_cipher_ctx_st definition
| |-FieldDecl 0x1edde20d428 <line:25:5, col:23> col:23 invalid cipher 'const int *'
| |-FieldDecl 0x1edde20d498 <line:26:5, col:13> col:13 invalid engine 'int *'
| |-FieldDecl 0x1edde20d508 <line:28:5, col:9> col:9 encrypt 'int'
| |-FieldDecl 0x1edde20d578 <line:29:5, col:9> col:9 buf_len 'int'
| |-FieldDecl 0x1edde20d5e8 <line:30:5, col:19> col:19 invalid oiv 'unsigned char'
| |-FieldDecl 0x1edde20d658 <line:31:5, col:19> col:19 invalid iv 'unsigned char'
| |-FieldDecl 0x1edde20d6c8 <line:32:5, col:19> col:19 invalid buf 'unsigned char'
| |-FieldDecl 0x1edde20d738 <line:33:5, col:9> col:9 num 'int'
| |-FieldDecl 0x1edde20d7a8 <line:35:5, col:11> col:11 app_data 'void *'
| |-FieldDecl 0x1edde20d818 <line:36:5, col:9> col:9 key_len 'int'
| |-FieldDecl 0x1edde20d888 <line:37:5, col:19> col:19 flags 'unsigned long'
| |-FieldDecl 0x1edde20d8f8 <line:38:5, col:11> col:11 cipher_data 'void *'
| |-FieldDecl 0x1edde20d968 <line:39:5, col:9> col:9 final_used 'int'
| |-FieldDecl 0x1edde20d9d8 <line:40:5, col:9> col:9 block_mask 'int'
| `-FieldDecl 0x1edde20da48 <line:41:5, col:19> col:19 invalid final 'unsigned char'
|-FunctionDecl 0x1edde20dee0 <line:44:1, line:47:39> line:44:5 invalid PKCS5_v2_PBKDF2_keyivgen 'int (int *, const char *, int, int *, const int *, const int *, int)'
| |-ParmVarDecl 0x1edde20dab8 <col:30, col:46> col:46 invalid ctx 'int *'
| |-ParmVarDecl 0x1edde20db38 <col:51, col:63> col:63 pass 'const char *'
| |-ParmVarDecl 0x1edde20dbb8 <line:45:30, col:34> col:34 passlen 'int'
| |-ParmVarDecl 0x1edde20dc38 <col:43, col:54> col:54 invalid param 'int *'
| |-ParmVarDecl 0x1edde20dcb8 <line:46:30, col:48> col:48 invalid c 'const int *'
| |-ParmVarDecl 0x1edde20dd38 <col:51, col:65> col:65 invalid md 'const int *'
| `-ParmVarDecl 0x1edde20ddb8 <line:47:30, col:34> col:34 en_de 'int'
|-RecordDecl 0x1edde20dfb8 <line:49:1, line:63:1> line:49:8 struct evp_Encode_Ctx_st definition
| |-FieldDecl 0x1edde20e088 <line:51:5, col:9> col:9 num 'int'
| |-FieldDecl 0x1edde20e140 <line:57:5, col:9> col:9 length 'int'
| |-FieldDecl 0x1edde20e240 <line:59:5, col:30> col:19 enc_data 'unsigned char [80]'
| |-FieldDecl 0x1edde20e2b0 <line:61:5, col:9> col:9 line_num 'int'
| `-FieldDecl 0x1edde20e320 <line:62:5, col:9> col:9 expect_nl 'int'
|-RecordDecl 0x1edde20e378 <line:65:9, col:16> col:16 struct evp_pbe_st
|-TypedefDecl 0x1edde20e488 <col:1, col:27> col:27 referenced EVP_PBE_CTL 'struct evp_pbe_st':'struct evp_pbe_st'
| `-ElaboratedType 0x1edde20e430 'struct evp_pbe_st' sugar
|   `-RecordType 0x1edde20e410 'struct evp_pbe_st'
|     `-Record 0x1edde20e378 'evp_pbe_st'
|-FunctionDecl 0x1edde20e630 <line:66:1, col:28> col:1 DEFINE_STACK_OF 'int (EVP_PBE_CTL)'
| `-ParmVarDecl 0x1edde20e530 <col:17> col:28 'EVP_PBE_CTL':'struct evp_pbe_st'
|-FunctionDecl 0x1edde20e940 <line:68:1, col:73> col:5 used is_partially_overlapping 'int (const void *, const void *, int)'
| |-ParmVarDecl 0x1edde20e708 <col:30, col:42> col:42 ptr1 'const void *'
| |-ParmVarDecl 0x1edde20e788 <col:48, col:60> col:60 ptr2 'const void *'
| `-ParmVarDecl 0x1edde20e808 <col:66, col:70> col:70 len 'int'
|-RecordDecl 0x1edde20ea10 <.//openssl//file_jk/before\crypto\evp\e_aes.c:22:9, line:32:1> line:22:9 invalid struct definition
| |-RecordDecl 0x1edde20ead0 <line:23:5, line:26:5> line:23:5 invalid union definition
| | |-FieldDecl 0x1edde20eba8 <line:24:9, col:16> col:16 align 'double'
| | `-FieldDecl 0x1edde20ec18 <line:25:9, col:17> col:17 invalid ks 'int'
| |-FieldDecl 0x1edde20ecc8 <line:23:5, line:26:7> col:7 invalid ks 'union (anonymous union at .//openssl//file_jk/before\crypto\evp\e_aes.c:23:5)':'union (anonymous at .//openssl//file_jk/before\crypto\evp\e_aes.c:23:5)'
| |-FieldDecl 0x1edde20ed38 <line:27:5, col:16> col:16 invalid block 'int'
| |-RecordDecl 0x1edde20ed90 <line:28:5, line:31:5> line:28:5 invalid union definition
| | |-FieldDecl 0x1edde20ee68 <line:29:9, col:18> col:18 invalid cbc 'int'
| | `-FieldDecl 0x1edde20eed8 <line:30:9, col:18> col:18 invalid ctr 'int'
| `-FieldDecl 0x1edde20ef88 <line:28:5, line:31:7> col:7 invalid stream 'union (anonymous union at .//openssl//file_jk/before\crypto\evp\e_aes.c:28:5)':'union (anonymous at .//openssl//file_jk/before\crypto\evp\e_aes.c:28:5)'
|-TypedefDecl 0x1edde20f038 <line:22:1, line:32:3> col:3 referenced EVP_AES_KEY 'struct (anonymous struct at .//openssl//file_jk/before\crypto\evp\e_aes.c:22:9)':'struct (anonymous at .//openssl//file_jk/before\crypto\evp\e_aes.c:22:9)'
| `-ElaboratedType 0x1edde20efe0 'struct (anonymous struct at .//openssl//file_jk/before\crypto\evp\e_aes.c:22:9)' sugar
|   `-RecordType 0x1edde20eab0 'struct (anonymous at .//openssl//file_jk/before\crypto\evp\e_aes.c:22:9)'
|     `-Record 0x1edde20ea10 ''
|-RecordDecl 0x1edde20f0a8 <line:34:9, line:48:1> line:34:9 invalid struct definition
| |-RecordDecl 0x1edde210180 <line:35:5, line:38:5> line:35:5 invalid union definition
| | |-FieldDecl 0x1edde210258 <line:36:9, col:16> col:16 align 'double'
| | `-FieldDecl 0x1edde2102c8 <line:37:9, col:17> col:17 invalid ks 'int'
| |-FieldDecl 0x1edde210378 <line:35:5, line:38:7> col:7 invalid ks 'union (anonymous union at .//openssl//file_jk/before\crypto\evp\e_aes.c:35:5)':'union (anonymous at .//openssl//file_jk/before\crypto\evp\e_aes.c:35:5)'
| |-FieldDecl 0x1edde2103e8 <line:39:5, col:9> col:9 referenced key_set 'int'
| |-FieldDecl 0x1edde210458 <line:40:5, col:9> col:9 referenced iv_set 'int'
| |-FieldDecl 0x1edde2104c8 <line:41:5, col:20> col:20 invalid gcm 'int'
| |-FieldDecl 0x1edde210560 <line:42:5, col:20> col:20 referenced iv 'unsigned char *'
| |-FieldDecl 0x1edde2105d0 <line:43:5, col:9> col:9 referenced ivlen 'int'
| |-FieldDecl 0x1edde210640 <line:44:5, col:9> col:9 referenced taglen 'int'
| |-FieldDecl 0x1edde2106b0 <line:45:5, col:9> col:9 referenced iv_gen 'int'
| |-FieldDecl 0x1edde210720 <line:46:5, col:9> col:9 referenced tls_aad_len 'int'
| `-FieldDecl 0x1edde210790 <line:47:5, col:14> col:14 invalid ctr 'int'
|-TypedefDecl 0x1edde210848 <line:34:1, line:48:3> col:3 referenced EVP_AES_GCM_CTX 'struct (anonymous struct at .//openssl//file_jk/before\crypto\evp\e_aes.c:34:9)':'struct (anonymous at .//openssl//file_jk/before\crypto\evp\e_aes.c:34:9)'
| `-ElaboratedType 0x1edde2107f0 'struct (anonymous struct at .//openssl//file_jk/before\crypto\evp\e_aes.c:34:9)' sugar
|   `-RecordType 0x1edde210160 'struct (anonymous at .//openssl//file_jk/before\crypto\evp\e_aes.c:34:9)'
|     `-Record 0x1edde20f0a8 ''
|-RecordDecl 0x1edde2108b8 <line:50:9, line:60:1> line:50:9 invalid struct definition
| |-RecordDecl 0x1edde210970 <line:51:5, line:54:5> line:51:5 invalid union definition
| | |-FieldDecl 0x1edde210a48 <line:52:9, col:16> col:16 align 'double'
| | `-FieldDecl 0x1edde210ab8 <line:53:9, col:17> col:17 invalid ks 'int'
| |-FieldDecl 0x1edde210b68 <line:51:5, line:54:7> col:7 invalid ks1 'union (anonymous union at .//openssl//file_jk/before\crypto\evp\e_aes.c:51:5)':'union (anonymous at .//openssl//file_jk/before\crypto\evp\e_aes.c:51:5)'
| |-FieldDecl 0x1edde210be0 <line:51:5, line:54:12> col:12 invalid ks2 'union (anonymous union at .//openssl//file_jk/before\crypto\evp\e_aes.c:51:5)':'union (anonymous at .//openssl//file_jk/before\crypto\evp\e_aes.c:51:5)'
| |-FieldDecl 0x1edde210c50 <line:55:5, col:20> col:20 invalid xts 'int'
| `-FieldDecl 0x1edde215298 <line:56:5, line:59:47> line:56:12 referenced stream 'void (*)(const unsigned char *, unsigned char *, size_t, const int *, const int *, const unsigned char *)'
|-TypedefDecl 0x1edde215348 <line:50:1, line:60:3> col:3 referenced EVP_AES_XTS_CTX 'struct (anonymous struct at .//openssl//file_jk/before\crypto\evp\e_aes.c:50:9)':'struct (anonymous at .//openssl//file_jk/before\crypto\evp\e_aes.c:50:9)'
| `-ElaboratedType 0x1edde2152f0 'struct (anonymous struct at .//openssl//file_jk/before\crypto\evp\e_aes.c:50:9)' sugar
|   `-RecordType 0x1edde210950 'struct (anonymous at .//openssl//file_jk/before\crypto\evp\e_aes.c:50:9)'
|     `-Record 0x1edde2108b8 ''
|-RecordDecl 0x1edde2153b8 <line:62:9, line:75:1> line:62:9 invalid struct definition
| |-RecordDecl 0x1edde215470 <line:63:5, line:66:5> line:63:5 invalid union definition
| | |-FieldDecl 0x1edde215548 <line:64:9, col:16> col:16 align 'double'
| | `-FieldDecl 0x1edde2155b8 <line:65:9, col:17> col:17 invalid ks 'int'
| |-FieldDecl 0x1edde215668 <line:63:5, line:66:7> col:7 invalid ks 'union (anonymous union at .//openssl//file_jk/before\crypto\evp\e_aes.c:63:5)':'union (anonymous at .//openssl//file_jk/before\crypto\evp\e_aes.c:63:5)'
| |-FieldDecl 0x1edde2156d8 <line:67:5, col:9> col:9 referenced key_set 'int'
| |-FieldDecl 0x1edde215748 <line:68:5, col:9> col:9 referenced iv_set 'int'
| |-FieldDecl 0x1edde2157b8 <line:69:5, col:9> col:9 referenced tag_set 'int'
| |-FieldDecl 0x1edde215828 <line:70:5, col:9> col:9 referenced len_set 'int'
| |-FieldDecl 0x1edde215898 <line:71:5, col:9> col:9 referenced L 'int'
| |-FieldDecl 0x1edde215908 <col:5, col:12> col:12 referenced M 'int'
| |-FieldDecl 0x1edde215978 <line:72:5, col:9> col:9 referenced tls_aad_len 'int'
| |-FieldDecl 0x1edde2159e8 <line:73:5, col:20> col:20 invalid ccm 'int'
| `-FieldDecl 0x1edde215a58 <line:74:5, col:14> col:14 invalid str 'int'
|-TypedefDecl 0x1edde215b08 <line:62:1, line:75:3> col:3 referenced EVP_AES_CCM_CTX 'struct (anonymous struct at .//openssl//file_jk/before\crypto\evp\e_aes.c:62:9)':'struct (anonymous at .//openssl//file_jk/before\crypto\evp\e_aes.c:62:9)'
| `-ElaboratedType 0x1edde215ab0 'struct (anonymous struct at .//openssl//file_jk/before\crypto\evp\e_aes.c:62:9)' sugar
|   `-RecordType 0x1edde215450 'struct (anonymous at .//openssl//file_jk/before\crypto\evp\e_aes.c:62:9)'
|     `-Record 0x1edde2153b8 ''
|-RecordDecl 0x1edde215b78 <line:78:9, line:98:1> line:78:9 invalid struct definition
| |-RecordDecl 0x1edde215c30 <line:79:5, line:82:5> line:79:5 invalid union definition
| | |-FieldDecl 0x1edde215d08 <line:80:9, col:16> col:16 align 'double'
| | `-FieldDecl 0x1edde215d78 <line:81:9, col:17> col:17 invalid ks 'int'
| |-FieldDecl 0x1edde215e28 <line:79:5, line:82:7> col:7 invalid ksenc 'union (anonymous union at .//openssl//file_jk/before\crypto\evp\e_aes.c:79:5)':'union (anonymous at .//openssl//file_jk/before\crypto\evp\e_aes.c:79:5)'
| |-RecordDecl 0x1edde215e80 <line:83:5, line:86:5> line:83:5 invalid union definition
| | |-FieldDecl 0x1edde215f58 <line:84:9, col:16> col:16 align 'double'
| | `-FieldDecl 0x1edde215fc8 <line:85:9, col:17> col:17 invalid ks 'int'
| |-FieldDecl 0x1edde216078 <line:83:5, line:86:7> col:7 invalid ksdec 'union (anonymous union at .//openssl//file_jk/before\crypto\evp\e_aes.c:83:5)':'union (anonymous at .//openssl//file_jk/before\crypto\evp\e_aes.c:83:5)'
| |-FieldDecl 0x1edde2160e8 <line:87:5, col:9> col:9 referenced key_set 'int'
| |-FieldDecl 0x1edde216158 <line:88:5, col:9> col:9 referenced iv_set 'int'
| |-FieldDecl 0x1edde211188 <line:89:5, col:20> col:20 invalid ocb 'int'
| |-FieldDecl 0x1edde2111f8 <line:90:5, col:20> col:20 referenced iv 'unsigned char *'
| |-FieldDecl 0x1edde2112b8 <line:91:5, col:25> col:19 referenced tag 'unsigned char [16]'
| |-FieldDecl 0x1edde211378 <line:92:5, col:30> col:19 referenced data_buf 'unsigned char [16]'
| |-FieldDecl 0x1edde211438 <line:93:5, col:29> col:19 referenced aad_buf 'unsigned char [16]'
| |-FieldDecl 0x1edde2114a8 <line:94:5, col:9> col:9 referenced data_buf_len 'int'
| |-FieldDecl 0x1edde211518 <line:95:5, col:9> col:9 referenced aad_buf_len 'int'
| |-FieldDecl 0x1edde211588 <line:96:5, col:9> col:9 referenced ivlen 'int'
| `-FieldDecl 0x1edde2115f8 <line:97:5, col:9> col:9 referenced taglen 'int'
|-TypedefDecl 0x1edde2116a8 <line:78:1, line:98:3> col:3 referenced EVP_AES_OCB_CTX 'struct (anonymous struct at .//openssl//file_jk/before\crypto\evp\e_aes.c:78:9)':'struct (anonymous at .//openssl//file_jk/before\crypto\evp\e_aes.c:78:9)'
| `-ElaboratedType 0x1edde211650 'struct (anonymous struct at .//openssl//file_jk/before\crypto\evp\e_aes.c:78:9)' sugar
|   `-RecordType 0x1edde215c10 'struct (anonymous at .//openssl//file_jk/before\crypto\evp\e_aes.c:78:9)'
|     `-Record 0x1edde215b78 ''
|-FunctionDecl 0x1edde2119b0 <line:1033:1, line:1136:1> line:1033:12 invalid aes_init_key 'int (int *, const unsigned char *, const unsigned char *, int)' static
| |-ParmVarDecl 0x1edde211730 <col:25, col:41> col:41 invalid ctx 'int *'
| |-ParmVarDecl 0x1edde2117b0 <col:46, col:67> col:67 used key 'const unsigned char *'
| |-ParmVarDecl 0x1edde211830 <line:1034:25, col:46> col:46 iv 'const unsigned char *'
| |-ParmVarDecl 0x1edde2118b0 <col:50, col:54> col:54 used enc 'int'
| `-CompoundStmt 0x1edde2148c0 <line:1035:1, line:1136:1>
|   |-DeclStmt 0x1edde211ba0 <line:1036:5, col:18>
|   | |-VarDecl 0x1edde211aa0 <col:5, col:9> col:9 used ret 'int'
|   | `-VarDecl 0x1edde211b20 <col:5, col:14> col:14 used mode 'int'
|   |-DeclStmt 0x1edde211de8 <line:1037:5, col:51>
|   | `-VarDecl 0x1edde211c48 <col:5, col:18> col:18 used dat 'EVP_AES_KEY *'
|   |-IfStmt 0x1edde214668 <line:1040:5, line:1128:5> has_else
|   | |-OpaqueValueExpr 0x1edde214650 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x1edde2143c8 <line:1041:18, line:1081:5>
|   | | `-CompoundStmt 0x1edde2143b8 <line:1073:9, line:1080:9>
|   | `-CompoundStmt 0x1edde214640 <line:1118:5, line:1128:5>
|   |-IfStmt 0x1edde214870 <line:1130:5, line:1133:5>
|   | |-BinaryOperator 0x1edde2146f0 <line:1130:9, col:15> 'int' '<'
|   | | |-ImplicitCastExpr 0x1edde2146d8 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1edde214690 <col:9> 'int' lvalue Var 0x1edde211aa0 'ret' 'int'
|   | | `-IntegerLiteral 0x1edde2146b0 <col:15> 'int' 0
|   | `-CompoundStmt 0x1edde214858 <col:18, line:1133:5>
|   |   `-ReturnStmt 0x1edde214848 <line:1132:9, col:16>
|   |     `-IntegerLiteral 0x1edde214820 <col:16> 'int' 0
|   `-ReturnStmt 0x1edde2148b0 <line:1135:5, col:12>
|     `-IntegerLiteral 0x1edde214888 <col:12> 'int' 1
|-FunctionDecl 0x1edde214bd0 <line:1138:1, line:1155:1> line:1138:12 invalid aes_cbc_cipher 'int (int *, unsigned char *, const unsigned char *, size_t)' static
| |-ParmVarDecl 0x1edde214910 <col:27, col:43> col:43 invalid ctx 'int *'
| |-ParmVarDecl 0x1edde214990 <col:48, col:63> col:63 used out 'unsigned char *'
| |-ParmVarDecl 0x1edde214a10 <line:1139:27, col:48> col:48 used in 'const unsigned char *'
| |-ParmVarDecl 0x1edde214a88 <col:52, col:59> col:59 used len 'size_t':'unsigned long long'
| `-CompoundStmt 0x1edde1bebd0 <line:1140:1, line:1155:1>
|   |-DeclStmt 0x1edde214d40 <line:1141:5, col:51>
|   | `-VarDecl 0x1edde214cb8 <col:5, col:18> col:18 used dat 'EVP_AES_KEY *'
|   `-ReturnStmt 0x1edde1bebc0 <line:1154:5, col:12>
|     `-IntegerLiteral 0x1edde1beb98 <col:12> 'int' 1
|-FunctionDecl 0x1edde1bee30 <line:1157:1, line:1171:1> line:1157:12 invalid aes_ecb_cipher 'int (int *, unsigned char *, const unsigned char *, size_t)' static
| |-ParmVarDecl 0x1edde1bec08 <col:27, col:43> col:43 invalid ctx 'int *'
| |-ParmVarDecl 0x1edde1bec88 <col:48, col:63> col:63 used out 'unsigned char *'
| |-ParmVarDecl 0x1edde1bed08 <line:1158:27, col:48> col:48 used in 'const unsigned char *'
| |-ParmVarDecl 0x1edde1bed80 <col:52, col:59> col:59 used len 'size_t':'unsigned long long'
| `-CompoundStmt 0x1edde1bf760 <line:1159:1, line:1171:1>
|   |-DeclStmt 0x1edde1bf090 <line:1160:5, col:47>
|   | `-VarDecl 0x1edde1bef18 <col:5, col:12> col:12 used bl 'size_t':'unsigned long long'
|   |-DeclStmt 0x1edde1bf120 <line:1161:5, col:13>
|   | `-VarDecl 0x1edde1bf0b8 <col:5, col:12> col:12 used i 'size_t':'unsigned long long'
|   |-DeclStmt 0x1edde1bf1d0 <line:1162:5, col:51>
|   | `-VarDecl 0x1edde1bf148 <col:5, col:18> col:18 used dat 'EVP_AES_KEY *'
|   |-IfStmt 0x1edde1bf2e0 <line:1164:5, line:1165:16>
|   | |-BinaryOperator 0x1edde1bf288 <line:1164:9, col:15> 'int' '<'
|   | | |-ImplicitCastExpr 0x1edde1bf258 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1edde1bf1e8 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x1edde1bed80 'len' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x1edde1bf270 <col:15> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1edde1bf220 <col:15> 'size_t':'unsigned long long' lvalue Var 0x1edde1bef18 'bl' 'size_t':'unsigned long long'
|   | `-ReturnStmt 0x1edde1bf2d0 <line:1165:9, col:16>
|   |   `-IntegerLiteral 0x1edde1bf2a8 <col:16> 'int' 1
|   `-ReturnStmt 0x1edde1bf750 <line:1170:5, col:12>
|     `-IntegerLiteral 0x1edde1bf728 <col:12> 'int' 1
|-FunctionDecl 0x1edde1b9998 <line:1173:1, line:1183:1> line:1173:12 invalid aes_ofb_cipher 'int (int *, unsigned char *, const unsigned char *, size_t)' static
| |-ParmVarDecl 0x1edde1b9770 <col:27, col:43> col:43 invalid ctx 'int *'
| |-ParmVarDecl 0x1edde1b97f0 <col:48, col:63> col:63 used out 'unsigned char *'
| |-ParmVarDecl 0x1edde1b9870 <line:1174:27, col:48> col:48 used in 'const unsigned char *'
| |-ParmVarDecl 0x1edde1b98e8 <col:52, col:59> col:59 used len 'size_t':'unsigned long long'
| `-CompoundStmt 0x1edde1ba0e0 <line:1175:1, line:1183:1>
|   |-DeclStmt 0x1edde1b9b08 <line:1176:5, col:51>
|   | `-VarDecl 0x1edde1b9a80 <col:5, col:18> col:18 used dat 'EVP_AES_KEY *'
|   |-DeclStmt 0x1edde1b9cb0 <line:1178:5, col:38>
|   | `-VarDecl 0x1edde1b9b38 <col:5, col:9> col:9 used num 'int'
|   `-ReturnStmt 0x1edde1ba0d0 <line:1182:5, col:12>
|     `-IntegerLiteral 0x1edde1ba0a8 <col:12> 'int' 1
|-FunctionDecl 0x1edde1ba348 <line:1185:1, line:1196:1> line:1185:12 invalid aes_cfb_cipher 'int (int *, unsigned char *, const unsigned char *, size_t)' static
| |-ParmVarDecl 0x1edde1ba120 <col:27, col:43> col:43 invalid ctx 'int *'
| |-ParmVarDecl 0x1edde1ba1a0 <col:48, col:63> col:63 used out 'unsigned char *'
| |-ParmVarDecl 0x1edde1ba220 <line:1186:27, col:48> col:48 used in 'const unsigned char *'
| |-ParmVarDecl 0x1edde1ba298 <col:52, col:59> col:59 used len 'size_t':'unsigned long long'
| `-CompoundStmt 0x1edde1bc910 <line:1187:1, line:1196:1>
|   |-DeclStmt 0x1edde1ba4b8 <line:1188:5, col:51>
|   | `-VarDecl 0x1edde1ba430 <col:5, col:18> col:18 used dat 'EVP_AES_KEY *'
|   |-DeclStmt 0x1edde1ba570 <line:1190:5, col:38>
|   | `-VarDecl 0x1edde1ba4e8 <col:5, col:9> col:9 used num 'int'
|   `-ReturnStmt 0x1edde1bc900 <line:1195:5, col:12>
|     `-IntegerLiteral 0x1edde1bc8d8 <col:12> 'int' 1
|-FunctionDecl 0x1edde1bcb78 <line:1198:1, line:1209:1> line:1198:12 invalid aes_cfb8_cipher 'int (int *, unsigned char *, const unsigned char *, size_t)' static
| |-ParmVarDecl 0x1edde1bc950 <col:28, col:44> col:44 invalid ctx 'int *'
| |-ParmVarDecl 0x1edde1bc9d0 <col:49, col:64> col:64 used out 'unsigned char *'
| |-ParmVarDecl 0x1edde1bca50 <line:1199:28, col:49> col:49 used in 'const unsigned char *'
| |-ParmVarDecl 0x1edde1bcac8 <col:53, col:60> col:60 used len 'size_t':'unsigned long long'
| `-CompoundStmt 0x1edde1bd100 <line:1200:1, line:1209:1>
|   |-DeclStmt 0x1edde1bcce8 <line:1201:5, col:51>
|   | `-VarDecl 0x1edde1bcc60 <col:5, col:18> col:18 used dat 'EVP_AES_KEY *'
|   |-DeclStmt 0x1edde1bcda0 <line:1203:5, col:38>
|   | `-VarDecl 0x1edde1bcd18 <col:5, col:9> col:9 used num 'int'
|   `-ReturnStmt 0x1edde1bd0f0 <line:1208:5, col:12>
|     `-IntegerLiteral 0x1edde1bd0c8 <col:12> 'int' 1
|-FunctionDecl 0x1edde1bd368 <line:1211:1, line:1244:1> line:1211:12 invalid aes_cfb1_cipher 'int (int *, unsigned char *, const unsigned char *, size_t)' static
| |-ParmVarDecl 0x1edde1bd140 <col:28, col:44> col:44 invalid ctx 'int *'
| |-ParmVarDecl 0x1edde1bd1c0 <col:49, col:64> col:64 used out 'unsigned char *'
| |-ParmVarDecl 0x1edde1bd240 <line:1212:28, col:49> col:49 used in 'const unsigned char *'
| |-ParmVarDecl 0x1edde1bd2b8 <col:53, col:60> col:60 used len 'size_t':'unsigned long long'
| `-CompoundStmt 0x1edde1bdaf0 <line:1213:1, line:1244:1>
|   |-DeclStmt 0x1edde1bd4d8 <line:1214:5, col:51>
|   | `-VarDecl 0x1edde1bd450 <col:5, col:18> col:18 used dat 'EVP_AES_KEY *'
|   |-IfStmt 0x1edde1b79f8 <line:1216:5, line:1223:5>
|   | |-OpaqueValueExpr 0x1edde1b79e0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1edde1b79c0 <line:1216:68, line:1223:5>
|   |   |-DeclStmt 0x1edde1bd6a0 <line:1217:9, col:42>
|   |   | `-VarDecl 0x1edde1bd618 <col:9, col:13> col:13 used num 'int'
|   |   `-ReturnStmt 0x1edde1b79b0 <line:1222:9, col:16>
|   |     `-IntegerLiteral 0x1edde1b7988 <col:16> 'int' 1
|   |-WhileStmt 0x1edde1b86b0 <line:1225:5, line:1234:5>
|   | |-BinaryOperator 0x1edde1b7bf8 <line:1225:12, line:101:57> 'int' '>='
|   | | |-ImplicitCastExpr 0x1edde1b7be0 <line:1225:12> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1edde1b7a10 <col:12> 'size_t':'unsigned long long' lvalue ParmVar 0x1edde1bd2b8 'len' 'size_t':'unsigned long long'
|   | | `-ParenExpr 0x1edde1b7bc0 <line:101:25, col:57> 'size_t':'unsigned long long'
|   | |   `-BinaryOperator 0x1edde1b7ba0 <col:26, col:56> 'size_t':'unsigned long long' '<<'
|   | |     |-CStyleCastExpr 0x1edde1b7a68 <col:26, col:34> 'size_t':'unsigned long long' <IntegralCast>
|   | |     | `-IntegerLiteral 0x1edde1b7a30 <col:34> 'int' 1
|   | |     `-ParenExpr 0x1edde1b7b80 <col:37, col:56> 'unsigned long long'
|   | |       `-BinaryOperator 0x1edde1b7b60 <col:38, col:55> 'unsigned long long' '-'
|   | |         |-BinaryOperator 0x1edde1b7b00 <col:38, col:53> 'unsigned long long' '*'
|   | |         | |-UnaryExprOrTypeTraitExpr 0x1edde1b7aa0 <col:38, col:51> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|   | |         | `-ImplicitCastExpr 0x1edde1b7ae8 <col:53> 'unsigned long long' <IntegralCast>
|   | |         |   `-IntegerLiteral 0x1edde1b7ac0 <col:53> 'int' 8
|   | |         `-ImplicitCastExpr 0x1edde1b7b48 <col:55> 'unsigned long long' <IntegralCast>
|   | |           `-IntegerLiteral 0x1edde1b7b20 <col:55> 'int' 4
|   | `-CompoundStmt 0x1edde1b8680 <line:1225:32, line:1234:5>
|   |   |-DeclStmt 0x1edde1b7cb8 <line:1226:9, col:42>
|   |   | `-VarDecl 0x1edde1b7c30 <col:9, col:13> col:13 used num 'int'
|   |   |-CompoundAssignOperator 0x1edde1b8250 <line:1231:9, line:101:57> 'size_t':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |   | |-DeclRefExpr 0x1edde1b8080 <line:1231:9> 'size_t':'unsigned long long' lvalue ParmVar 0x1edde1bd2b8 'len' 'size_t':'unsigned long long'
|   |   | `-ParenExpr 0x1edde1b8230 <line:101:25, col:57> 'size_t':'unsigned long long'
|   |   |   `-BinaryOperator 0x1edde1b8210 <col:26, col:56> 'size_t':'unsigned long long' '<<'
|   |   |     |-CStyleCastExpr 0x1edde1b80d8 <col:26, col:34> 'size_t':'unsigned long long' <IntegralCast>
|   |   |     | `-IntegerLiteral 0x1edde1b80a0 <col:34> 'int' 1
|   |   |     `-ParenExpr 0x1edde1b81f0 <col:37, col:56> 'unsigned long long'
|   |   |       `-BinaryOperator 0x1edde1b81d0 <col:38, col:55> 'unsigned long long' '-'
|   |   |         |-BinaryOperator 0x1edde1b8170 <col:38, col:53> 'unsigned long long' '*'
|   |   |         | |-UnaryExprOrTypeTraitExpr 0x1edde1b8110 <col:38, col:51> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|   |   |         | `-ImplicitCastExpr 0x1edde1b8158 <col:53> 'unsigned long long' <IntegralCast>
|   |   |         |   `-IntegerLiteral 0x1edde1b8130 <col:53> 'int' 8
|   |   |         `-ImplicitCastExpr 0x1edde1b81b8 <col:55> 'unsigned long long' <IntegralCast>
|   |   |           `-IntegerLiteral 0x1edde1b8190 <col:55> 'int' 4
|   |   |-CompoundAssignOperator 0x1edde1b8450 <line:1232:9, line:101:57> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   |   | |-DeclRefExpr 0x1edde1b8280 <line:1232:9> 'unsigned char *' lvalue ParmVar 0x1edde1bd1c0 'out' 'unsigned char *'
|   |   | `-ParenExpr 0x1edde1b8430 <line:101:25, col:57> 'size_t':'unsigned long long'
|   |   |   `-BinaryOperator 0x1edde1b8410 <col:26, col:56> 'size_t':'unsigned long long' '<<'
|   |   |     |-CStyleCastExpr 0x1edde1b82d8 <col:26, col:34> 'size_t':'unsigned long long' <IntegralCast>
|   |   |     | `-IntegerLiteral 0x1edde1b82a0 <col:34> 'int' 1
|   |   |     `-ParenExpr 0x1edde1b83f0 <col:37, col:56> 'unsigned long long'
|   |   |       `-BinaryOperator 0x1edde1b83d0 <col:38, col:55> 'unsigned long long' '-'
|   |   |         |-BinaryOperator 0x1edde1b8370 <col:38, col:53> 'unsigned long long' '*'
|   |   |         | |-UnaryExprOrTypeTraitExpr 0x1edde1b8310 <col:38, col:51> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|   |   |         | `-ImplicitCastExpr 0x1edde1b8358 <col:53> 'unsigned long long' <IntegralCast>
|   |   |         |   `-IntegerLiteral 0x1edde1b8330 <col:53> 'int' 8
|   |   |         `-ImplicitCastExpr 0x1edde1b83b8 <col:55> 'unsigned long long' <IntegralCast>
|   |   |           `-IntegerLiteral 0x1edde1b8390 <col:55> 'int' 4
|   |   `-CompoundAssignOperator 0x1edde1b8650 <line:1233:9, line:101:57> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   |     |-DeclRefExpr 0x1edde1b8480 <line:1233:9> 'const unsigned char *' lvalue ParmVar 0x1edde1bd240 'in' 'const unsigned char *'
|   |     `-ParenExpr 0x1edde1b8630 <line:101:25, col:57> 'size_t':'unsigned long long'
|   |       `-BinaryOperator 0x1edde1b8610 <col:26, col:56> 'size_t':'unsigned long long' '<<'
|   |         |-CStyleCastExpr 0x1edde1b84d8 <col:26, col:34> 'size_t':'unsigned long long' <IntegralCast>
|   |         | `-IntegerLiteral 0x1edde1b84a0 <col:34> 'int' 1
|   |         `-ParenExpr 0x1edde1b85f0 <col:37, col:56> 'unsigned long long'
|   |           `-BinaryOperator 0x1edde1b85d0 <col:38, col:55> 'unsigned long long' '-'
|   |             |-BinaryOperator 0x1edde1b8570 <col:38, col:53> 'unsigned long long' '*'
|   |             | |-UnaryExprOrTypeTraitExpr 0x1edde1b8510 <col:38, col:51> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|   |             | `-ImplicitCastExpr 0x1edde1b8558 <col:53> 'unsigned long long' <IntegralCast>
|   |             |   `-IntegerLiteral 0x1edde1b8530 <col:53> 'int' 8
|   |             `-ImplicitCastExpr 0x1edde1b85b8 <col:55> 'unsigned long long' <IntegralCast>
|   |               `-IntegerLiteral 0x1edde1b8590 <col:55> 'int' 4
|   |-IfStmt 0x1edde1bdaa0 <line:1235:5, line:1241:5>
|   | |-ImplicitCastExpr 0x1edde1b86e8 <line:1235:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | `-DeclRefExpr 0x1edde1b86c8 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x1edde1bd2b8 'len' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x1edde1bda88 <col:14, line:1241:5>
|   |   `-DeclStmt 0x1edde1bd838 <line:1236:9, col:42>
|   |     `-VarDecl 0x1edde1bd7b0 <col:9, col:13> col:13 used num 'int'
|   `-ReturnStmt 0x1edde1bdae0 <line:1243:5, col:12>
|     `-IntegerLiteral 0x1edde1bdab8 <col:12> 'int' 1
|-FunctionDecl 0x1edde1bdd68 <line:1246:1, line:1264:1> line:1246:12 invalid aes_ctr_cipher 'int (int *, unsigned char *, const unsigned char *, size_t)' static
| |-ParmVarDecl 0x1edde1bdb40 <col:27, col:43> col:43 invalid ctx 'int *'
| |-ParmVarDecl 0x1edde1bdbc0 <col:48, col:63> col:63 used out 'unsigned char *'
| |-ParmVarDecl 0x1edde1bdc40 <line:1247:27, col:48> col:48 used in 'const unsigned char *'
| |-ParmVarDecl 0x1edde1bdcb8 <col:52, col:59> col:59 used len 'size_t':'unsigned long long'
| `-CompoundStmt 0x1edde1be698 <line:1248:1, line:1264:1>
|   |-DeclStmt 0x1edde1bdee0 <line:1249:5, col:47>
|   | `-VarDecl 0x1edde1bde58 <col:5, col:18> col:18 used num 'unsigned int'
|   |-DeclStmt 0x1edde1bdf90 <line:1250:5, col:51>
|   | `-VarDecl 0x1edde1bdf08 <col:5, col:18> col:18 used dat 'EVP_AES_KEY *'
|   `-ReturnStmt 0x1edde1be688 <line:1263:5, col:12>
|     `-IntegerLiteral 0x1edde1be660 <col:12> 'int' 1
|-VarDecl 0x1edde1be6d8 <line:955:81, <scratch space>:301:1> col:1 invalid aes_128_cbc 'const int' static
|-FunctionDecl 0x1edde1b8ba0 <.//openssl//file_jk/before\crypto\evp\e_aes.c:963:32, line:965:34> <scratch space>:312:1 invalid EVP_aes_128_cbc 'const int *(void)'
| `-CompoundStmt 0x1edde1b8c58 <.//openssl//file_jk/before\crypto\evp\e_aes.c:964:51, line:965:34>
|-VarDecl 0x1edde1b8c80 <line:955:81, <scratch space>:7:1> col:1 invalid aes_128_ecb 'const int' static
|-FunctionDecl 0x1edde1b9148 <.//openssl//file_jk/before\crypto\evp\e_aes.c:963:32, line:965:34> <scratch space>:18:1 invalid EVP_aes_128_ecb 'const int *(void)'
| `-CompoundStmt 0x1edde1b9200 <.//openssl//file_jk/before\crypto\evp\e_aes.c:964:51, line:965:34>
|-VarDecl 0x1edde1b9228 <line:955:81, <scratch space>:24:1> col:1 invalid aes_128_ofb 'const int' static
|-FunctionDecl 0x1edde1c17f0 <.//openssl//file_jk/before\crypto\evp\e_aes.c:963:32, line:965:34> <scratch space>:35:1 invalid EVP_aes_128_ofb 'const int *(void)'
| `-CompoundStmt 0x1edde1c18a8 <.//openssl//file_jk/before\crypto\evp\e_aes.c:964:51, line:965:34>
|-VarDecl 0x1edde1c18d0 <line:955:81, <scratch space>:41:1> col:1 invalid aes_128_cfb 'const int' static
|-FunctionDecl 0x1edde1c1d98 <.//openssl//file_jk/before\crypto\evp\e_aes.c:963:32, line:965:34> <scratch space>:52:1 invalid EVP_aes_128_cfb 'const int *(void)'
| `-CompoundStmt 0x1edde1c1e50 <.//openssl//file_jk/before\crypto\evp\e_aes.c:964:51, line:965:34>
|-VarDecl 0x1edde1c1e78 <line:955:81, <scratch space>:58:1> col:1 invalid aes_128_cfb1 'const int' static
|-FunctionDecl 0x1edde1c2340 <.//openssl//file_jk/before\crypto\evp\e_aes.c:963:32, line:965:34> <scratch space>:69:1 invalid EVP_aes_128_cfb1 'const int *(void)'
| `-CompoundStmt 0x1edde1c23f8 <.//openssl//file_jk/before\crypto\evp\e_aes.c:964:51, line:965:34>
|-VarDecl 0x1edde1c2420 <line:955:81, <scratch space>:75:1> col:1 invalid aes_128_cfb8 'const int' static
|-FunctionDecl 0x1edde1c08e0 <.//openssl//file_jk/before\crypto\evp\e_aes.c:963:32, line:965:34> <scratch space>:86:1 invalid EVP_aes_128_cfb8 'const int *(void)'
| `-CompoundStmt 0x1edde1c0998 <.//openssl//file_jk/before\crypto\evp\e_aes.c:964:51, line:965:34>
|-VarDecl 0x1edde1c09c0 <line:955:81, <scratch space>:92:1> col:1 invalid aes_128_ctr 'const int' static
|-FunctionDecl 0x1edde1c0e88 <.//openssl//file_jk/before\crypto\evp\e_aes.c:963:32, line:965:34> <scratch space>:103:1 invalid EVP_aes_128_ctr 'const int *(void)'
| `-CompoundStmt 0x1edde1c0f40 <.//openssl//file_jk/before\crypto\evp\e_aes.c:964:51, line:965:34>
|-VarDecl 0x1edde1c0f68 <line:955:81, <scratch space>:109:1> col:1 invalid aes_192_cbc 'const int' static
|-FunctionDecl 0x1edde1c1430 <.//openssl//file_jk/before\crypto\evp\e_aes.c:963:32, line:965:34> <scratch space>:120:1 invalid EVP_aes_192_cbc 'const int *(void)'
| `-CompoundStmt 0x1edde1c14e8 <.//openssl//file_jk/before\crypto\evp\e_aes.c:964:51, line:965:34>
|-VarDecl 0x1edde1c1510 <line:955:81, <scratch space>:126:1> col:1 invalid aes_192_ecb 'const int' static
|-FunctionDecl 0x1edde1ba978 <.//openssl//file_jk/before\crypto\evp\e_aes.c:963:32, line:965:34> <scratch space>:137:1 invalid EVP_aes_192_ecb 'const int *(void)'
| `-CompoundStmt 0x1edde1baa30 <.//openssl//file_jk/before\crypto\evp\e_aes.c:964:51, line:965:34>
|-VarDecl 0x1edde1baa58 <line:955:81, <scratch space>:143:1> col:1 invalid aes_192_ofb 'const int' static
|-FunctionDecl 0x1edde1baf20 <.//openssl//file_jk/before\crypto\evp\e_aes.c:963:32, line:965:34> <scratch space>:154:1 invalid EVP_aes_192_ofb 'const int *(void)'
| `-CompoundStmt 0x1edde1bafd8 <.//openssl//file_jk/before\crypto\evp\e_aes.c:964:51, line:965:34>
|-VarDecl 0x1edde1bb000 <line:955:81, <scratch space>:160:1> col:1 invalid aes_192_cfb 'const int' static
|-FunctionDecl 0x1edde1bb4c8 <.//openssl//file_jk/before\crypto\evp\e_aes.c:963:32, line:965:34> <scratch space>:171:1 invalid EVP_aes_192_cfb 'const int *(void)'
| `-CompoundStmt 0x1edde1bb580 <.//openssl//file_jk/before\crypto\evp\e_aes.c:964:51, line:965:34>
|-VarDecl 0x1edde1bb5a8 <line:955:81, <scratch space>:177:1> col:1 invalid aes_192_cfb1 'const int' static
|-FunctionDecl 0x1edde1c9b60 <.//openssl//file_jk/before\crypto\evp\e_aes.c:963:32, line:965:34> <scratch space>:188:1 invalid EVP_aes_192_cfb1 'const int *(void)'
| `-CompoundStmt 0x1edde1c9c18 <.//openssl//file_jk/before\crypto\evp\e_aes.c:964:51, line:965:34>
|-VarDecl 0x1edde1c9c40 <line:955:81, <scratch space>:194:1> col:1 invalid aes_192_cfb8 'const int' static
|-FunctionDecl 0x1edde1ca108 <.//openssl//file_jk/before\crypto\evp\e_aes.c:963:32, line:965:34> <scratch space>:205:1 invalid EVP_aes_192_cfb8 'const int *(void)'
| `-CompoundStmt 0x1edde1ca1c0 <.//openssl//file_jk/before\crypto\evp\e_aes.c:964:51, line:965:34>
|-VarDecl 0x1edde1ca1e8 <line:955:81, <scratch space>:211:1> col:1 invalid aes_192_ctr 'const int' static
|-FunctionDecl 0x1edde1ca6b0 <.//openssl//file_jk/before\crypto\evp\e_aes.c:963:32, line:965:34> <scratch space>:222:1 invalid EVP_aes_192_ctr 'const int *(void)'
| `-CompoundStmt 0x1edde1ca768 <.//openssl//file_jk/before\crypto\evp\e_aes.c:964:51, line:965:34>
|-VarDecl 0x1edde1ca790 <line:955:81, <scratch space>:228:1> col:1 invalid aes_256_cbc 'const int' static
|-FunctionDecl 0x1edde1c2be8 <.//openssl//file_jk/before\crypto\evp\e_aes.c:963:32, line:965:34> <scratch space>:239:1 invalid EVP_aes_256_cbc 'const int *(void)'
| `-CompoundStmt 0x1edde1c2ca0 <.//openssl//file_jk/before\crypto\evp\e_aes.c:964:51, line:965:34>
|-VarDecl 0x1edde1c2cc8 <line:955:81, <scratch space>:245:1> col:1 invalid aes_256_ecb 'const int' static
|-FunctionDecl 0x1edde1c3190 <.//openssl//file_jk/before\crypto\evp\e_aes.c:963:32, line:965:34> <scratch space>:256:1 invalid EVP_aes_256_ecb 'const int *(void)'
| `-CompoundStmt 0x1edde1c3248 <.//openssl//file_jk/before\crypto\evp\e_aes.c:964:51, line:965:34>
|-VarDecl 0x1edde1c3270 <line:955:81, <scratch space>:262:1> col:1 invalid aes_256_ofb 'const int' static
|-FunctionDecl 0x1edde1c3738 <.//openssl//file_jk/before\crypto\evp\e_aes.c:963:32, line:965:34> <scratch space>:273:1 invalid EVP_aes_256_ofb 'const int *(void)'
| `-CompoundStmt 0x1edde1c37f0 <.//openssl//file_jk/before\crypto\evp\e_aes.c:964:51, line:965:34>
|-VarDecl 0x1edde1c8878 <line:955:81, <scratch space>:279:1> col:1 invalid aes_256_cfb 'const int' static
|-FunctionDecl 0x1edde1c8d40 <.//openssl//file_jk/before\crypto\evp\e_aes.c:963:32, line:965:34> <scratch space>:290:1 invalid EVP_aes_256_cfb 'const int *(void)'
| `-CompoundStmt 0x1edde1c8df8 <.//openssl//file_jk/before\crypto\evp\e_aes.c:964:51, line:965:34>
|-VarDecl 0x1edde1c8e20 <line:955:81, <scratch space>:296:1> col:1 invalid aes_256_cfb1 'const int' static
|-FunctionDecl 0x1edde1c92e8 <.//openssl//file_jk/before\crypto\evp\e_aes.c:963:32, line:965:34> <scratch space>:307:1 invalid EVP_aes_256_cfb1 'const int *(void)'
| `-CompoundStmt 0x1edde1c93a0 <.//openssl//file_jk/before\crypto\evp\e_aes.c:964:51, line:965:34>
|-VarDecl 0x1edde1c93c8 <line:955:81, <scratch space>:2:1> col:1 invalid aes_256_cfb8 'const int' static
|-FunctionDecl 0x1edde1c78e0 <.//openssl//file_jk/before\crypto\evp\e_aes.c:963:32, line:965:34> <scratch space>:13:1 invalid EVP_aes_256_cfb8 'const int *(void)'
| `-CompoundStmt 0x1edde1c7998 <.//openssl//file_jk/before\crypto\evp\e_aes.c:964:51, line:965:34>
|-VarDecl 0x1edde1c79c0 <line:955:81, <scratch space>:19:1> col:1 invalid aes_256_ctr 'const int' static
|-FunctionDecl 0x1edde1c7e88 <.//openssl//file_jk/before\crypto\evp\e_aes.c:963:32, line:965:34> <scratch space>:30:1 invalid EVP_aes_256_ctr 'const int *(void)'
| `-CompoundStmt 0x1edde1c7f40 <.//openssl//file_jk/before\crypto\evp\e_aes.c:964:51, line:965:34>
|-FunctionDecl 0x1edde1c8030 <line:1270:1, line:1279:1> line:1270:12 invalid aes_gcm_cleanup 'int (int *)' static
| |-ParmVarDecl 0x1edde1c7f68 <col:28, col:44> col:44 invalid c 'int *'
| `-CompoundStmt 0x1edde1c87e8 <line:1271:1, line:1279:1>
|   |-DeclStmt 0x1edde1c8200 <line:1272:5, col:58>
|   | `-VarDecl 0x1edde1c8178 <col:5, col:22> col:22 used gctx 'EVP_AES_GCM_CTX *'
|   |-IfStmt 0x1edde1c8360 <line:1273:5, line:1274:16>
|   | |-BinaryOperator 0x1edde1c8308 <line:1273:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x1edde1c82d8 <.//openssl//file_jk/before\crypto\evp\e_aes.c:1273:9> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1edde1c8218 <col:9> 'EVP_AES_GCM_CTX *' lvalue Var 0x1edde1c8178 'gctx' 'EVP_AES_GCM_CTX *'
|   | | `-ImplicitCastExpr 0x1edde1c82f0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'EVP_AES_GCM_CTX *' <BitCast>
|   | |   `-ParenExpr 0x1edde1c82b8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1edde1c8290 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1edde1c8250 <col:26> 'int' 0
|   | `-ReturnStmt 0x1edde1c8350 <.//openssl//file_jk/before\crypto\evp\e_aes.c:1274:9, col:16>
|   |   `-IntegerLiteral 0x1edde1c8328 <col:16> 'int' 0
|   |-IfStmt 0x1edde1c8798 <line:1276:5, line:1277:30>
|   | |-OpaqueValueExpr 0x1edde1c8780 <<invalid sloc>> '_Bool'
|   | `-CallExpr 0x1edde1c8740 <col:9, col:30> 'int'
|   |   |-ImplicitCastExpr 0x1edde1c8728 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1edde1c8670 <col:9> 'int ()' Function 0x1edde1c85a8 'OPENSSL_free' 'int ()'
|   |   `-ImplicitCastExpr 0x1edde1c8768 <col:22, col:28> 'unsigned char *' <LValueToRValue>
|   |     `-MemberExpr 0x1edde1c86c8 <col:22, col:28> 'unsigned char *' lvalue ->iv 0x1edde210560
|   |       `-ImplicitCastExpr 0x1edde1c86b0 <col:22> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|   |         `-DeclRefExpr 0x1edde1c8690 <col:22> 'EVP_AES_GCM_CTX *' lvalue Var 0x1edde1c8178 'gctx' 'EVP_AES_GCM_CTX *'
|   `-ReturnStmt 0x1edde1c87d8 <line:1278:5, col:12>
|     `-IntegerLiteral 0x1edde1c87b0 <col:12> 'int' 1
|-FunctionDecl 0x1edde1c38e8 <line:1282:1, line:1295:1> line:1282:13 used ctr64_inc 'void (unsigned char *)' static
| |-ParmVarDecl 0x1edde1c3810 <col:23, col:38> col:38 used counter 'unsigned char *'
| `-CompoundStmt 0x1edde1c3e60 <line:1283:1, line:1295:1>
|   |-DeclStmt 0x1edde1c3a50 <line:1284:5, col:14>
|   | `-VarDecl 0x1edde1c39c0 <col:5, col:13> col:9 used n 'int' cinit
|   |   `-IntegerLiteral 0x1edde1c3a28 <col:13> 'int' 8
|   |-DeclStmt 0x1edde1c3ae8 <line:1285:5, col:20>
|   | `-VarDecl 0x1edde1c3a80 <col:5, col:19> col:19 used c 'unsigned char'
|   `-DoStmt 0x1edde1c3e40 <line:1287:5, line:1294:15>
|     |-CompoundStmt 0x1edde1c3dd0 <line:1287:8, line:1294:5>
|     | |-UnaryOperator 0x1edde1c3b38 <line:1288:9, col:11> 'int' prefix '--'
|     | | `-DeclRefExpr 0x1edde1c3b00 <col:11> 'int' lvalue Var 0x1edde1c39c0 'n' 'int'
|     | |-BinaryOperator 0x1edde1c3c30 <line:1289:9, col:22> 'unsigned char' '='
|     | | |-DeclRefExpr 0x1edde1c3b50 <col:9> 'unsigned char' lvalue Var 0x1edde1c3a80 'c' 'unsigned char'
|     | | `-ImplicitCastExpr 0x1edde1c3c18 <col:13, col:22> 'unsigned char' <LValueToRValue>
|     | |   `-ArraySubscriptExpr 0x1edde1c3bf8 <col:13, col:22> 'unsigned char' lvalue
|     | |     |-ImplicitCastExpr 0x1edde1c3bc8 <col:13> 'unsigned char *' <LValueToRValue>
|     | |     | `-DeclRefExpr 0x1edde1c3b88 <col:13> 'unsigned char *' lvalue ParmVar 0x1edde1c3810 'counter' 'unsigned char *'
|     | |     `-ImplicitCastExpr 0x1edde1c3be0 <col:21> 'int' <LValueToRValue>
|     | |       `-DeclRefExpr 0x1edde1c3ba8 <col:21> 'int' lvalue Var 0x1edde1c39c0 'n' 'int'
|     | |-UnaryOperator 0x1edde1c3c70 <line:1290:9, col:11> 'unsigned char' prefix '++' cannot overflow
|     | | `-DeclRefExpr 0x1edde1c3c50 <col:11> 'unsigned char' lvalue Var 0x1edde1c3a80 'c' 'unsigned char'
|     | |-BinaryOperator 0x1edde1c3d50 <line:1291:9, col:22> 'unsigned char' '='
|     | | |-ArraySubscriptExpr 0x1edde1c3cf8 <col:9, col:18> 'unsigned char' lvalue
|     | | | |-ImplicitCastExpr 0x1edde1c3cc8 <col:9> 'unsigned char *' <LValueToRValue>
|     | | | | `-DeclRefExpr 0x1edde1c3c88 <col:9> 'unsigned char *' lvalue ParmVar 0x1edde1c3810 'counter' 'unsigned char *'
|     | | | `-ImplicitCastExpr 0x1edde1c3ce0 <col:17> 'int' <LValueToRValue>
|     | | |   `-DeclRefExpr 0x1edde1c3ca8 <col:17> 'int' lvalue Var 0x1edde1c39c0 'n' 'int'
|     | | `-ImplicitCastExpr 0x1edde1c3d38 <col:22> 'unsigned char' <LValueToRValue>
|     | |   `-DeclRefExpr 0x1edde1c3d18 <col:22> 'unsigned char' lvalue Var 0x1edde1c3a80 'c' 'unsigned char'
|     | `-IfStmt 0x1edde1c3db8 <line:1292:9, line:1293:13>
|     |   |-ImplicitCastExpr 0x1edde1c3d90 <line:1292:13> 'unsigned char' <LValueToRValue>
|     |   | `-DeclRefExpr 0x1edde1c3d70 <col:13> 'unsigned char' lvalue Var 0x1edde1c3a80 'c' 'unsigned char'
|     |   `-ReturnStmt 0x1edde1c3da8 <line:1293:13>
|     `-ImplicitCastExpr 0x1edde1c3e28 <line:1294:14> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1edde1c3e08 <col:14> 'int' lvalue Var 0x1edde1c39c0 'n' 'int'
|-FunctionDecl 0x1edde1c4120 <line:1297:1, line:1434:1> line:1297:12 invalid aes_gcm_ctrl 'int (int *, int, int, void *)' static
| |-ParmVarDecl 0x1edde1c3ea0 <col:25, col:41> col:41 invalid c 'int *'
| |-ParmVarDecl 0x1edde1c3f20 <col:44, col:48> col:48 used type 'int'
| |-ParmVarDecl 0x1edde1c3fa0 <col:54, col:58> col:58 used arg 'int'
| |-ParmVarDecl 0x1edde1c4020 <col:63, col:69> col:69 used ptr 'void *'
| `-CompoundStmt 0x1edde1d0db8 <line:1298:1, line:1434:1>
|   |-DeclStmt 0x1edde1c4290 <line:1299:5, col:58>
|   | `-VarDecl 0x1edde1c4208 <col:5, col:22> col:22 used gctx 'EVP_AES_GCM_CTX *'
|   `-SwitchStmt 0x1edde1c42f8 <line:1300:5, line:1433:5>
|     |-ImplicitCastExpr 0x1edde1c42e0 <line:1300:13> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x1edde1c42a8 <col:13> 'int' lvalue ParmVar 0x1edde1c3f20 'type' 'int'
|     `-CompoundStmt 0x1edde1d0c88 <col:19, line:1433:5>
|       |-BinaryOperator 0x1edde1c43c0 <line:1302:9, col:25> 'int' '='
|       | |-MemberExpr 0x1edde1c4368 <col:9, col:15> 'int' lvalue ->key_set 0x1edde2103e8
|       | | `-ImplicitCastExpr 0x1edde1c4350 <col:9> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1edde1c4318 <col:9> 'EVP_AES_GCM_CTX *' lvalue Var 0x1edde1c4208 'gctx' 'EVP_AES_GCM_CTX *'
|       | `-IntegerLiteral 0x1edde1c4398 <col:25> 'int' 0
|       |-BinaryOperator 0x1edde1c4470 <line:1303:9, col:24> 'int' '='
|       | |-MemberExpr 0x1edde1c4418 <col:9, col:15> 'int' lvalue ->iv_set 0x1edde210458
|       | | `-ImplicitCastExpr 0x1edde1c4400 <col:9> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1edde1c43e0 <col:9> 'EVP_AES_GCM_CTX *' lvalue Var 0x1edde1c4208 'gctx' 'EVP_AES_GCM_CTX *'
|       | `-IntegerLiteral 0x1edde1c4448 <col:24> 'int' 0
|       |-BinaryOperator 0x1edde1c4738 <line:1306:9, col:25> 'int' '='
|       | |-MemberExpr 0x1edde1c46c8 <col:9, col:15> 'int' lvalue ->taglen 0x1edde210640
|       | | `-ImplicitCastExpr 0x1edde1c46b0 <col:9> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1edde1c4690 <col:9> 'EVP_AES_GCM_CTX *' lvalue Var 0x1edde1c4208 'gctx' 'EVP_AES_GCM_CTX *'
|       | `-UnaryOperator 0x1edde1c4720 <col:24, col:25> 'int' prefix '-'
|       |   `-IntegerLiteral 0x1edde1c46f8 <col:25> 'int' 1
|       |-BinaryOperator 0x1edde1c47e8 <line:1307:9, col:24> 'int' '='
|       | |-MemberExpr 0x1edde1c4790 <col:9, col:15> 'int' lvalue ->iv_gen 0x1edde2106b0
|       | | `-ImplicitCastExpr 0x1edde1c4778 <col:9> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1edde1c4758 <col:9> 'EVP_AES_GCM_CTX *' lvalue Var 0x1edde1c4208 'gctx' 'EVP_AES_GCM_CTX *'
|       | `-IntegerLiteral 0x1edde1c47c0 <col:24> 'int' 0
|       |-BinaryOperator 0x1edde1cb938 <line:1308:9, col:30> 'int' '='
|       | |-MemberExpr 0x1edde1cb8c8 <col:9, col:15> 'int' lvalue ->tls_aad_len 0x1edde210720
|       | | `-ImplicitCastExpr 0x1edde1cb8b0 <col:9> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1edde1cb890 <col:9> 'EVP_AES_GCM_CTX *' lvalue Var 0x1edde1c4208 'gctx' 'EVP_AES_GCM_CTX *'
|       | `-UnaryOperator 0x1edde1cb920 <col:29, col:30> 'int' prefix '-'
|       |   `-IntegerLiteral 0x1edde1cb8f8 <col:30> 'int' 1
|       |-ReturnStmt 0x1edde1cb980 <line:1309:9, col:16>
|       | `-IntegerLiteral 0x1edde1cb958 <col:16> 'int' 1
|       |-IfStmt 0x1edde1cba60 <line:1312:9, line:1313:20>
|       | |-BinaryOperator 0x1edde1cba08 <line:1312:13, col:20> 'int' '<='
|       | | |-ImplicitCastExpr 0x1edde1cb9f0 <col:13> 'int' <LValueToRValue>
|       | | | `-DeclRefExpr 0x1edde1cb990 <col:13> 'int' lvalue ParmVar 0x1edde1c3fa0 'arg' 'int'
|       | | `-IntegerLiteral 0x1edde1cb9c8 <col:20> 'int' 0
|       | `-ReturnStmt 0x1edde1cba50 <line:1313:13, col:20>
|       |   `-IntegerLiteral 0x1edde1cba28 <col:20> 'int' 0
|       |-IfStmt 0x1edde1cc120 <line:1315:9, line:1321:9>
|       | |-OpaqueValueExpr 0x1edde1cc108 <<invalid sloc>> '_Bool'
|       | `-CompoundStmt 0x1edde1cc0e0 <line:1315:63, line:1321:9>
|       |   |-IfStmt 0x1edde1cbd10 <line:1316:13, line:1317:38>
|       |   | |-OpaqueValueExpr 0x1edde1cbcf8 <<invalid sloc>> '_Bool'
|       |   | `-CallExpr 0x1edde1cbcb8 <col:17, col:38> 'int'
|       |   |   |-ImplicitCastExpr 0x1edde1cbca0 <col:17> 'int (*)()' <FunctionToPointerDecay>
|       |   |   | `-DeclRefExpr 0x1edde1cbc18 <col:17> 'int ()' Function 0x1edde1c85a8 'OPENSSL_free' 'int ()'
|       |   |   `-ImplicitCastExpr 0x1edde1cbce0 <col:30, col:36> 'unsigned char *' <LValueToRValue>
|       |   |     `-MemberExpr 0x1edde1cbc70 <col:30, col:36> 'unsigned char *' lvalue ->iv 0x1edde210560
|       |   |       `-ImplicitCastExpr 0x1edde1cbc58 <col:30> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       |   |         `-DeclRefExpr 0x1edde1cbc38 <col:30> 'EVP_AES_GCM_CTX *' lvalue Var 0x1edde1c4208 'gctx' 'EVP_AES_GCM_CTX *'
|       |   |-BinaryOperator 0x1edde1cbf30 <line:1318:13, col:42> 'unsigned char *' '='
|       |   | |-MemberExpr 0x1edde1cbd60 <col:13, col:19> 'unsigned char *' lvalue ->iv 0x1edde210560
|       |   | | `-ImplicitCastExpr 0x1edde1cbd48 <col:13> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       |   | |   `-DeclRefExpr 0x1edde1cbd28 <col:13> 'EVP_AES_GCM_CTX *' lvalue Var 0x1edde1c4208 'gctx' 'EVP_AES_GCM_CTX *'
|       |   | `-ImplicitCastExpr 0x1edde1cbf18 <col:24, col:42> 'unsigned char *' <IntegralToPointer>
|       |   |   `-CallExpr 0x1edde1cbed8 <col:24, col:42> 'int'
|       |   |     |-ImplicitCastExpr 0x1edde1cbec0 <col:24> 'int (*)()' <FunctionToPointerDecay>
|       |   |     | `-DeclRefExpr 0x1edde1cbe80 <col:24> 'int ()' Function 0x1edde1cbdb8 'OPENSSL_malloc' 'int ()'
|       |   |     `-ImplicitCastExpr 0x1edde1cbf00 <col:39> 'int' <LValueToRValue>
|       |   |       `-DeclRefExpr 0x1edde1cbea0 <col:39> 'int' lvalue ParmVar 0x1edde1c3fa0 'arg' 'int'
|       |   `-IfStmt 0x1edde1cc0c8 <line:1319:13, line:1320:24>
|       |     |-BinaryOperator 0x1edde1cc070 <line:1319:17, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|       |     | |-ImplicitCastExpr 0x1edde1cc040 <.//openssl//file_jk/before\crypto\evp\e_aes.c:1319:17, col:23> 'unsigned char *' <LValueToRValue>
|       |     | | `-MemberExpr 0x1edde1cbf88 <col:17, col:23> 'unsigned char *' lvalue ->iv 0x1edde210560
|       |     | |   `-ImplicitCastExpr 0x1edde1cbf70 <col:17> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       |     | |     `-DeclRefExpr 0x1edde1cbf50 <col:17> 'EVP_AES_GCM_CTX *' lvalue Var 0x1edde1c4208 'gctx' 'EVP_AES_GCM_CTX *'
|       |     | `-ImplicitCastExpr 0x1edde1cc058 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'unsigned char *' <BitCast>
|       |     |   `-ParenExpr 0x1edde1cc020 <col:17, col:27> 'void *'
|       |     |     `-CStyleCastExpr 0x1edde1cbff8 <col:18, col:26> 'void *' <NullToPointer>
|       |     |       `-IntegerLiteral 0x1edde1cbfb8 <col:26> 'int' 0
|       |     `-ReturnStmt 0x1edde1cc0b8 <.//openssl//file_jk/before\crypto\evp\e_aes.c:1320:17, col:24>
|       |       `-IntegerLiteral 0x1edde1cc090 <col:24> 'int' 0
|       |-BinaryOperator 0x1edde1cc1d8 <line:1322:9, col:23> 'int' '='
|       | |-MemberExpr 0x1edde1cc170 <col:9, col:15> 'int' lvalue ->ivlen 0x1edde2105d0
|       | | `-ImplicitCastExpr 0x1edde1cc158 <col:9> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1edde1cc138 <col:9> 'EVP_AES_GCM_CTX *' lvalue Var 0x1edde1c4208 'gctx' 'EVP_AES_GCM_CTX *'
|       | `-ImplicitCastExpr 0x1edde1cc1c0 <col:23> 'int' <LValueToRValue>
|       |   `-DeclRefExpr 0x1edde1cc1a0 <col:23> 'int' lvalue ParmVar 0x1edde1c3fa0 'arg' 'int'
|       |-ReturnStmt 0x1edde1cc220 <line:1323:9, col:16>
|       | `-IntegerLiteral 0x1edde1cc1f8 <col:16> 'int' 1
|       |-IfStmt 0x1edde1cc3c0 <line:1326:9, line:1327:20>
|       | |-OpaqueValueExpr 0x1edde1cc3a8 <<invalid sloc>> '_Bool'
|       | `-ReturnStmt 0x1edde1cc398 <col:13, col:20>
|       |   `-IntegerLiteral 0x1edde1cc370 <col:20> 'int' 0
|       |-BinaryOperator 0x1edde1cc510 <line:1329:9, col:24> 'int' '='
|       | |-MemberExpr 0x1edde1cc4a8 <col:9, col:15> 'int' lvalue ->taglen 0x1edde210640
|       | | `-ImplicitCastExpr 0x1edde1cc490 <col:9> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1edde1cc470 <col:9> 'EVP_AES_GCM_CTX *' lvalue Var 0x1edde1c4208 'gctx' 'EVP_AES_GCM_CTX *'
|       | `-ImplicitCastExpr 0x1edde1cc4f8 <col:24> 'int' <LValueToRValue>
|       |   `-DeclRefExpr 0x1edde1cc4d8 <col:24> 'int' lvalue ParmVar 0x1edde1c3fa0 'arg' 'int'
|       |-ReturnStmt 0x1edde1cc558 <line:1330:9, col:16>
|       | `-IntegerLiteral 0x1edde1cc530 <col:16> 'int' 1
|       |-IfStmt 0x1edde1cc7c0 <line:1333:9, line:1335:20>
|       | |-OpaqueValueExpr 0x1edde1cc7a8 <<invalid sloc>> '_Bool'
|       | `-ReturnStmt 0x1edde1cc798 <col:13, col:20>
|       |   `-IntegerLiteral 0x1edde1cc770 <col:20> 'int' 0
|       |-ReturnStmt 0x1edde1cc880 <line:1337:9, col:16>
|       | `-IntegerLiteral 0x1edde1cc858 <col:16> 'int' 1
|       |-IfStmt 0x1edde1c4c28 <line:1341:9, line:1345:9>
|       | |-BinaryOperator 0x1edde1c4898 <line:1341:13, col:21> 'int' '=='
|       | | |-ImplicitCastExpr 0x1edde1c4880 <col:13> 'int' <LValueToRValue>
|       | | | `-DeclRefExpr 0x1edde1c4820 <col:13> 'int' lvalue ParmVar 0x1edde1c3fa0 'arg' 'int'
|       | | `-UnaryOperator 0x1edde1c4868 <col:20, col:21> 'int' prefix '-'
|       | |   `-IntegerLiteral 0x1edde1c4840 <col:21> 'int' 1
|       | `-CompoundStmt 0x1edde1c4c00 <col:24, line:1345:9>
|       |   |-CallExpr 0x1edde1c4a50 <line:1342:13, col:46> 'void *'
|       |   | |-ImplicitCastExpr 0x1edde1c4a38 <col:13> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|       |   | | `-DeclRefExpr 0x1edde1c48b8 <col:13> 'void *(void *, const void *, unsigned long long)' Function 0x1edde16ea88 'memcpy' 'void *(void *, const void *, unsigned long long)'
|       |   | |-ImplicitCastExpr 0x1edde1c4aa0 <col:20, col:26> 'void *' <BitCast>
|       |   | | `-ImplicitCastExpr 0x1edde1c4a88 <col:20, col:26> 'unsigned char *' <LValueToRValue>
|       |   | |   `-MemberExpr 0x1edde1c4910 <col:20, col:26> 'unsigned char *' lvalue ->iv 0x1edde210560
|       |   | |     `-ImplicitCastExpr 0x1edde1c48f8 <col:20> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       |   | |       `-DeclRefExpr 0x1edde1c48d8 <col:20> 'EVP_AES_GCM_CTX *' lvalue Var 0x1edde1c4208 'gctx' 'EVP_AES_GCM_CTX *'
|       |   | |-ImplicitCastExpr 0x1edde1c4ad0 <col:30> 'const void *' <NoOp>
|       |   | | `-ImplicitCastExpr 0x1edde1c4ab8 <col:30> 'void *' <LValueToRValue>
|       |   | |   `-DeclRefExpr 0x1edde1c4940 <col:30> 'void *' lvalue ParmVar 0x1edde1c4020 'ptr' 'void *'
|       |   | `-ImplicitCastExpr 0x1edde1c4b00 <col:35, col:41> 'unsigned long long' <IntegralCast>
|       |   |   `-ImplicitCastExpr 0x1edde1c4ae8 <col:35, col:41> 'int' <LValueToRValue>
|       |   |     `-MemberExpr 0x1edde1c4998 <col:35, col:41> 'int' lvalue ->ivlen 0x1edde2105d0
|       |   |       `-ImplicitCastExpr 0x1edde1c4980 <col:35> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       |   |         `-DeclRefExpr 0x1edde1c4960 <col:35> 'EVP_AES_GCM_CTX *' lvalue Var 0x1edde1c4208 'gctx' 'EVP_AES_GCM_CTX *'
|       |   |-BinaryOperator 0x1edde1c4ba8 <line:1343:13, col:28> 'int' '='
|       |   | |-MemberExpr 0x1edde1c4b50 <col:13, col:19> 'int' lvalue ->iv_gen 0x1edde2106b0
|       |   | | `-ImplicitCastExpr 0x1edde1c4b38 <col:13> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       |   | |   `-DeclRefExpr 0x1edde1c4b18 <col:13> 'EVP_AES_GCM_CTX *' lvalue Var 0x1edde1c4208 'gctx' 'EVP_AES_GCM_CTX *'
|       |   | `-IntegerLiteral 0x1edde1c4b80 <col:28> 'int' 1
|       |   `-ReturnStmt 0x1edde1c4bf0 <line:1344:13, col:20>
|       |     `-IntegerLiteral 0x1edde1c4bc8 <col:20> 'int' 1
|       |-IfStmt 0x1edde1c4e78 <line:1350:9, line:1351:20>
|       | |-BinaryOperator 0x1edde1c4e20 <line:1350:13, col:48> 'int' '||'
|       | | |-ParenExpr 0x1edde1c4cc0 <col:13, col:21> 'int'
|       | | | `-BinaryOperator 0x1edde1c4ca0 <col:14, col:20> 'int' '<'
|       | | |   |-ImplicitCastExpr 0x1edde1c4c88 <col:14> 'int' <LValueToRValue>
|       | | |   | `-DeclRefExpr 0x1edde1c4c40 <col:14> 'int' lvalue ParmVar 0x1edde1c3fa0 'arg' 'int'
|       | | |   `-IntegerLiteral 0x1edde1c4c60 <col:20> 'int' 4
|       | | `-BinaryOperator 0x1edde1c4e00 <col:26, col:48> 'int' '<'
|       | |   |-ParenExpr 0x1edde1c4db8 <col:26, col:44> 'int'
|       | |   | `-BinaryOperator 0x1edde1c4d98 <col:27, col:41> 'int' '-'
|       | |   |   |-ImplicitCastExpr 0x1edde1c4d68 <col:27, col:33> 'int' <LValueToRValue>
|       | |   |   | `-MemberExpr 0x1edde1c4d18 <col:27, col:33> 'int' lvalue ->ivlen 0x1edde2105d0
|       | |   |   |   `-ImplicitCastExpr 0x1edde1c4d00 <col:27> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |   |   |     `-DeclRefExpr 0x1edde1c4ce0 <col:27> 'EVP_AES_GCM_CTX *' lvalue Var 0x1edde1c4208 'gctx' 'EVP_AES_GCM_CTX *'
|       | |   |   `-ImplicitCastExpr 0x1edde1c4d80 <col:41> 'int' <LValueToRValue>
|       | |   |     `-DeclRefExpr 0x1edde1c4d48 <col:41> 'int' lvalue ParmVar 0x1edde1c3fa0 'arg' 'int'
|       | |   `-IntegerLiteral 0x1edde1c4dd8 <col:48> 'int' 8
|       | `-ReturnStmt 0x1edde1c4e68 <line:1351:13, col:20>
|       |   `-IntegerLiteral 0x1edde1c4e40 <col:20> 'int' 0
|       |-IfStmt 0x1edde1c50b8 <line:1352:9, line:1353:38>
|       | |-ImplicitCastExpr 0x1edde1c4eb0 <line:1352:13> 'int' <LValueToRValue>
|       | | `-DeclRefExpr 0x1edde1c4e90 <col:13> 'int' lvalue ParmVar 0x1edde1c3fa0 'arg' 'int'
|       | `-CallExpr 0x1edde1c4ff0 <line:1353:13, col:38> 'void *'
|       |   |-ImplicitCastExpr 0x1edde1c4fd8 <col:13> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x1edde1c4ec8 <col:13> 'void *(void *, const void *, unsigned long long)' Function 0x1edde16ea88 'memcpy' 'void *(void *, const void *, unsigned long long)'
|       |   |-ImplicitCastExpr 0x1edde1c5040 <col:20, col:26> 'void *' <BitCast>
|       |   | `-ImplicitCastExpr 0x1edde1c5028 <col:20, col:26> 'unsigned char *' <LValueToRValue>
|       |   |   `-MemberExpr 0x1edde1c4f20 <col:20, col:26> 'unsigned char *' lvalue ->iv 0x1edde210560
|       |   |     `-ImplicitCastExpr 0x1edde1c4f08 <col:20> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       |   |       `-DeclRefExpr 0x1edde1c4ee8 <col:20> 'EVP_AES_GCM_CTX *' lvalue Var 0x1edde1c4208 'gctx' 'EVP_AES_GCM_CTX *'
|       |   |-ImplicitCastExpr 0x1edde1c5070 <col:30> 'const void *' <NoOp>
|       |   | `-ImplicitCastExpr 0x1edde1c5058 <col:30> 'void *' <LValueToRValue>
|       |   |   `-DeclRefExpr 0x1edde1c4f50 <col:30> 'void *' lvalue ParmVar 0x1edde1c4020 'ptr' 'void *'
|       |   `-ImplicitCastExpr 0x1edde1c50a0 <col:35> 'unsigned long long' <IntegralCast>
|       |     `-ImplicitCastExpr 0x1edde1c5088 <col:35> 'int' <LValueToRValue>
|       |       `-DeclRefExpr 0x1edde1c4f70 <col:35> 'int' lvalue ParmVar 0x1edde1c3fa0 'arg' 'int'
|       |-IfStmt 0x1edde1c5490 <line:1354:9, line:1356:20>
|       | |-OpaqueValueExpr 0x1edde1c5478 <<invalid sloc>> '_Bool'
|       | `-ReturnStmt 0x1edde1c5468 <col:13, col:20>
|       |   `-IntegerLiteral 0x1edde1c5440 <col:20> 'int' 0
|       |-BinaryOperator 0x1edde1c5538 <line:1357:9, col:24> 'int' '='
|       | |-MemberExpr 0x1edde1c54e0 <col:9, col:15> 'int' lvalue ->iv_gen 0x1edde2106b0
|       | | `-ImplicitCastExpr 0x1edde1c54c8 <col:9> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1edde1c54a8 <col:9> 'EVP_AES_GCM_CTX *' lvalue Var 0x1edde1c4208 'gctx' 'EVP_AES_GCM_CTX *'
|       | `-IntegerLiteral 0x1edde1c5510 <col:24> 'int' 1
|       |-ReturnStmt 0x1edde1c5580 <line:1358:9, col:16>
|       | `-IntegerLiteral 0x1edde1c5558 <col:16> 'int' 1
|       |-IfStmt 0x1edde1c5778 <line:1361:9, line:1362:20>
|       | |-BinaryOperator 0x1edde1c5720 <line:1361:13, col:51> 'int' '||'
|       | | |-BinaryOperator 0x1edde1c5638 <col:13, col:29> 'int' '=='
|       | | | |-ImplicitCastExpr 0x1edde1c5620 <col:13, col:19> 'int' <LValueToRValue>
|       | | | | `-MemberExpr 0x1edde1c55c8 <col:13, col:19> 'int' lvalue ->iv_gen 0x1edde2106b0
|       | | | |   `-ImplicitCastExpr 0x1edde1c55b0 <col:13> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | | | |     `-DeclRefExpr 0x1edde1c5590 <col:13> 'EVP_AES_GCM_CTX *' lvalue Var 0x1edde1c4208 'gctx' 'EVP_AES_GCM_CTX *'
|       | | | `-IntegerLiteral 0x1edde1c55f8 <col:29> 'int' 0
|       | | `-BinaryOperator 0x1edde1c5700 <col:34, col:51> 'int' '=='
|       | |   |-ImplicitCastExpr 0x1edde1c56e8 <col:34, col:40> 'int' <LValueToRValue>
|       | |   | `-MemberExpr 0x1edde1c5690 <col:34, col:40> 'int' lvalue ->key_set 0x1edde2103e8
|       | |   |   `-ImplicitCastExpr 0x1edde1c5678 <col:34> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |   |     `-DeclRefExpr 0x1edde1c5658 <col:34> 'EVP_AES_GCM_CTX *' lvalue Var 0x1edde1c4208 'gctx' 'EVP_AES_GCM_CTX *'
|       | |   `-IntegerLiteral 0x1edde1c56c0 <col:51> 'int' 0
|       | `-ReturnStmt 0x1edde1c5768 <line:1362:13, col:20>
|       |   `-IntegerLiteral 0x1edde1c5740 <col:20> 'int' 0
|       |-IfStmt 0x1edde1c6c68 <line:1364:9, line:1365:25>
|       | |-BinaryOperator 0x1edde1c6b88 <line:1364:13, col:37> 'int' '||'
|       | | |-BinaryOperator 0x1edde1c6a90 <col:13, col:20> 'int' '<='
|       | | | |-ImplicitCastExpr 0x1edde1c6a78 <col:13> 'int' <LValueToRValue>
|       | | | | `-DeclRefExpr 0x1edde1c6a30 <col:13> 'int' lvalue ParmVar 0x1edde1c3fa0 'arg' 'int'
|       | | | `-IntegerLiteral 0x1edde1c6a50 <col:20> 'int' 0
|       | | `-BinaryOperator 0x1edde1c6b68 <col:25, col:37> 'int' '>'
|       | |   |-ImplicitCastExpr 0x1edde1c6b38 <col:25> 'int' <LValueToRValue>
|       | |   | `-DeclRefExpr 0x1edde1c6ab0 <col:25> 'int' lvalue ParmVar 0x1edde1c3fa0 'arg' 'int'
|       | |   `-ImplicitCastExpr 0x1edde1c6b50 <col:31, col:37> 'int' <LValueToRValue>
|       | |     `-MemberExpr 0x1edde1c6b08 <col:31, col:37> 'int' lvalue ->ivlen 0x1edde2105d0
|       | |       `-ImplicitCastExpr 0x1edde1c6af0 <col:31> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |         `-DeclRefExpr 0x1edde1c6ad0 <col:31> 'EVP_AES_GCM_CTX *' lvalue Var 0x1edde1c4208 'gctx' 'EVP_AES_GCM_CTX *'
|       | `-BinaryOperator 0x1edde1c6c48 <line:1365:13, col:25> 'int' '='
|       |   |-DeclRefExpr 0x1edde1c6ba8 <col:13> 'int' lvalue ParmVar 0x1edde1c3fa0 'arg' 'int'
|       |   `-ImplicitCastExpr 0x1edde1c6c30 <col:19, col:25> 'int' <LValueToRValue>
|       |     `-MemberExpr 0x1edde1c6c00 <col:19, col:25> 'int' lvalue ->ivlen 0x1edde2105d0
|       |       `-ImplicitCastExpr 0x1edde1c6be8 <col:19> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       |         `-DeclRefExpr 0x1edde1c6bc8 <col:19> 'EVP_AES_GCM_CTX *' lvalue Var 0x1edde1c4208 'gctx' 'EVP_AES_GCM_CTX *'
|       |-CallExpr 0x1edde1c6ea0 <line:1366:9, col:54> 'void *'
|       | |-ImplicitCastExpr 0x1edde1c6e88 <col:9> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|       | | `-DeclRefExpr 0x1edde1c6c80 <col:9> 'void *(void *, const void *, unsigned long long)' Function 0x1edde16ea88 'memcpy' 'void *(void *, const void *, unsigned long long)'
|       | |-ImplicitCastExpr 0x1edde1c6ed8 <col:16> 'void *' <LValueToRValue>
|       | | `-DeclRefExpr 0x1edde1c6ca0 <col:16> 'void *' lvalue ParmVar 0x1edde1c4020 'ptr' 'void *'
|       | |-ImplicitCastExpr 0x1edde1c6ef0 <col:21, col:46> 'const void *' <BitCast>
|       | | `-BinaryOperator 0x1edde1c6e18 <col:21, col:46> 'unsigned char *' '-'
|       | |   |-BinaryOperator 0x1edde1c6dc0 <col:21, col:38> 'unsigned char *' '+'
|       | |   | |-ImplicitCastExpr 0x1edde1c6d90 <col:21, col:27> 'unsigned char *' <LValueToRValue>
|       | |   | | `-MemberExpr 0x1edde1c6cf8 <col:21, col:27> 'unsigned char *' lvalue ->iv 0x1edde210560
|       | |   | |   `-ImplicitCastExpr 0x1edde1c6ce0 <col:21> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |   | |     `-DeclRefExpr 0x1edde1c6cc0 <col:21> 'EVP_AES_GCM_CTX *' lvalue Var 0x1edde1c4208 'gctx' 'EVP_AES_GCM_CTX *'
|       | |   | `-ImplicitCastExpr 0x1edde1c6da8 <col:32, col:38> 'int' <LValueToRValue>
|       | |   |   `-MemberExpr 0x1edde1c6d60 <col:32, col:38> 'int' lvalue ->ivlen 0x1edde2105d0
|       | |   |     `-ImplicitCastExpr 0x1edde1c6d48 <col:32> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |   |       `-DeclRefExpr 0x1edde1c6d28 <col:32> 'EVP_AES_GCM_CTX *' lvalue Var 0x1edde1c4208 'gctx' 'EVP_AES_GCM_CTX *'
|       | |   `-ImplicitCastExpr 0x1edde1c6e00 <col:46> 'int' <LValueToRValue>
|       | |     `-DeclRefExpr 0x1edde1c6de0 <col:46> 'int' lvalue ParmVar 0x1edde1c3fa0 'arg' 'int'
|       | `-ImplicitCastExpr 0x1edde1c6f20 <col:51> 'unsigned long long' <IntegralCast>
|       |   `-ImplicitCastExpr 0x1edde1c6f08 <col:51> 'int' <LValueToRValue>
|       |     `-DeclRefExpr 0x1edde1c6e38 <col:51> 'int' lvalue ParmVar 0x1edde1c3fa0 'arg' 'int'
|       |-CallExpr 0x1edde1c7100 <line:1371:9, col:45> 'void'
|       | |-ImplicitCastExpr 0x1edde1c70e8 <col:9> 'void (*)(unsigned char *)' <FunctionToPointerDecay>
|       | | `-DeclRefExpr 0x1edde1c6f38 <col:9> 'void (unsigned char *)' Function 0x1edde1c38e8 'ctr64_inc' 'void (unsigned char *)'
|       | `-BinaryOperator 0x1edde1c70a0 <col:19, col:44> 'unsigned char *' '-'
|       |   |-BinaryOperator 0x1edde1c7058 <col:19, col:36> 'unsigned char *' '+'
|       |   | |-ImplicitCastExpr 0x1edde1c7028 <col:19, col:25> 'unsigned char *' <LValueToRValue>
|       |   | | `-MemberExpr 0x1edde1c6f90 <col:19, col:25> 'unsigned char *' lvalue ->iv 0x1edde210560
|       |   | |   `-ImplicitCastExpr 0x1edde1c6f78 <col:19> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       |   | |     `-DeclRefExpr 0x1edde1c6f58 <col:19> 'EVP_AES_GCM_CTX *' lvalue Var 0x1edde1c4208 'gctx' 'EVP_AES_GCM_CTX *'
|       |   | `-ImplicitCastExpr 0x1edde1c7040 <col:30, col:36> 'int' <LValueToRValue>
|       |   |   `-MemberExpr 0x1edde1c6ff8 <col:30, col:36> 'int' lvalue ->ivlen 0x1edde2105d0
|       |   |     `-ImplicitCastExpr 0x1edde1c6fe0 <col:30> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       |   |       `-DeclRefExpr 0x1edde1c6fc0 <col:30> 'EVP_AES_GCM_CTX *' lvalue Var 0x1edde1c4208 'gctx' 'EVP_AES_GCM_CTX *'
|       |   `-IntegerLiteral 0x1edde1c7078 <col:44> 'int' 8
|       |-BinaryOperator 0x1edde1c71b8 <line:1372:9, col:24> 'int' '='
|       | |-MemberExpr 0x1edde1c7160 <col:9, col:15> 'int' lvalue ->iv_set 0x1edde210458
|       | | `-ImplicitCastExpr 0x1edde1c7148 <col:9> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1edde1c7128 <col:9> 'EVP_AES_GCM_CTX *' lvalue Var 0x1edde1c4208 'gctx' 'EVP_AES_GCM_CTX *'
|       | `-IntegerLiteral 0x1edde1c7190 <col:24> 'int' 1
|       |-ReturnStmt 0x1edde1c7200 <line:1373:9, col:16>
|       | `-IntegerLiteral 0x1edde1c71d8 <col:16> 'int' 1
|       |-IfStmt 0x1edde1c7430 <line:1376:9, line:1378:20>
|       | |-OpaqueValueExpr 0x1edde1c7418 <<invalid sloc>> '_Bool'
|       | `-ReturnStmt 0x1edde1c7408 <col:13, col:20>
|       |   `-IntegerLiteral 0x1edde1c73e0 <col:20> 'int' 0
|       |-CallExpr 0x1edde1c7668 <line:1379:9, col:54> 'void *'
|       | |-ImplicitCastExpr 0x1edde1c7650 <col:9> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|       | | `-DeclRefExpr 0x1edde1c7448 <col:9> 'void *(void *, const void *, unsigned long long)' Function 0x1edde16ea88 'memcpy' 'void *(void *, const void *, unsigned long long)'
|       | |-ImplicitCastExpr 0x1edde1c76a0 <col:16, col:41> 'void *' <BitCast>
|       | | `-BinaryOperator 0x1edde1c75c0 <col:16, col:41> 'unsigned char *' '-'
|       | |   |-BinaryOperator 0x1edde1c7568 <col:16, col:33> 'unsigned char *' '+'
|       | |   | |-ImplicitCastExpr 0x1edde1c7538 <col:16, col:22> 'unsigned char *' <LValueToRValue>
|       | |   | | `-MemberExpr 0x1edde1c74a0 <col:16, col:22> 'unsigned char *' lvalue ->iv 0x1edde210560
|       | |   | |   `-ImplicitCastExpr 0x1edde1c7488 <col:16> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |   | |     `-DeclRefExpr 0x1edde1c7468 <col:16> 'EVP_AES_GCM_CTX *' lvalue Var 0x1edde1c4208 'gctx' 'EVP_AES_GCM_CTX *'
|       | |   | `-ImplicitCastExpr 0x1edde1c7550 <col:27, col:33> 'int' <LValueToRValue>
|       | |   |   `-MemberExpr 0x1edde1c7508 <col:27, col:33> 'int' lvalue ->ivlen 0x1edde2105d0
|       | |   |     `-ImplicitCastExpr 0x1edde1c74f0 <col:27> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |   |       `-DeclRefExpr 0x1edde1c74d0 <col:27> 'EVP_AES_GCM_CTX *' lvalue Var 0x1edde1c4208 'gctx' 'EVP_AES_GCM_CTX *'
|       | |   `-ImplicitCastExpr 0x1edde1c75a8 <col:41> 'int' <LValueToRValue>
|       | |     `-DeclRefExpr 0x1edde1c7588 <col:41> 'int' lvalue ParmVar 0x1edde1c3fa0 'arg' 'int'
|       | |-ImplicitCastExpr 0x1edde1c76d0 <col:46> 'const void *' <NoOp>
|       | | `-ImplicitCastExpr 0x1edde1c76b8 <col:46> 'void *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1edde1c75e0 <col:46> 'void *' lvalue ParmVar 0x1edde1c4020 'ptr' 'void *'
|       | `-ImplicitCastExpr 0x1edde1c7700 <col:51> 'unsigned long long' <IntegralCast>
|       |   `-ImplicitCastExpr 0x1edde1c76e8 <col:51> 'int' <LValueToRValue>
|       |     `-DeclRefExpr 0x1edde1c7600 <col:51> 'int' lvalue ParmVar 0x1edde1c3fa0 'arg' 'int'
|       |-BinaryOperator 0x1edde1d2990 <line:1381:9, col:24> 'int' '='
|       | |-MemberExpr 0x1edde1d2938 <col:9, col:15> 'int' lvalue ->iv_set 0x1edde210458
|       | | `-ImplicitCastExpr 0x1edde1d2920 <col:9> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1edde1d2900 <col:9> 'EVP_AES_GCM_CTX *' lvalue Var 0x1edde1c4208 'gctx' 'EVP_AES_GCM_CTX *'
|       | `-IntegerLiteral 0x1edde1d2968 <col:24> 'int' 1
|       |-ReturnStmt 0x1edde1d29d8 <line:1382:9, col:16>
|       | `-IntegerLiteral 0x1edde1d29b0 <col:16> 'int' 1
|       |-IfStmt 0x1edde1d2a58 <line:1386:9, line:1387:20>
|       | |-OpaqueValueExpr 0x1edde1d2a40 <<invalid sloc>> '_Bool'
|       | `-ReturnStmt 0x1edde1d2a30 <col:13, col:20>
|       |   `-IntegerLiteral 0x1edde1d2a08 <col:20> 'int' 0
|       |-BinaryOperator 0x1edde1d2b90 <line:1389:9, col:29> 'int' '='
|       | |-MemberExpr 0x1edde1d2b28 <col:9, col:15> 'int' lvalue ->tls_aad_len 0x1edde210720
|       | | `-ImplicitCastExpr 0x1edde1d2b10 <col:9> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1edde1d2af0 <col:9> 'EVP_AES_GCM_CTX *' lvalue Var 0x1edde1c4208 'gctx' 'EVP_AES_GCM_CTX *'
|       | `-ImplicitCastExpr 0x1edde1d2b78 <col:29> 'int' <LValueToRValue>
|       |   `-DeclRefExpr 0x1edde1d2b58 <col:29> 'int' lvalue ParmVar 0x1edde1c3fa0 'arg' 'int'
|       |-CompoundStmt 0x1edde1d31d8 <line:1390:9, line:1406:9>
|       | |-DeclStmt 0x1edde1d2d98 <line:1391:13, line:1393:57>
|       | | `-VarDecl 0x1edde1d2bc8 <line:1391:13, col:26> col:26 used len 'unsigned int'
|       | |-IfStmt 0x1edde1d2e38 <line:1395:13, line:1396:24>
|       | | |-OpaqueValueExpr 0x1edde1d2e20 <<invalid sloc>> '_Bool'
|       | | `-ReturnStmt 0x1edde1d2e10 <col:17, col:24>
|       | |   `-IntegerLiteral 0x1edde1d2de8 <col:24> 'int' 0
|       | `-IfStmt 0x1edde1d2f68 <line:1399:13, line:1403:13>
|       |   |-OpaqueValueExpr 0x1edde1d2f50 <<invalid sloc>> '_Bool'
|       |   `-CompoundStmt 0x1edde1d2f38 <line:1399:48, line:1403:13>
|       |     `-IfStmt 0x1edde1d2f00 <line:1400:17, line:1401:28>
|       |       |-OpaqueValueExpr 0x1edde1d2ee8 <<invalid sloc>> '_Bool'
|       |       `-ReturnStmt 0x1edde1d2ed8 <col:21, col:28>
|       |         `-IntegerLiteral 0x1edde1d2eb0 <col:28> 'int' 0
|       |-CompoundStmt 0x1edde1d0be8 <line:1411:9, line:1428:9>
|       | |-DeclStmt 0x1edde1d32b8 <line:1413:13, col:72>
|       | | `-VarDecl 0x1edde1d3230 <col:13, col:30> col:30 used gctx_out 'EVP_AES_GCM_CTX *'
|       | |-IfStmt 0x1edde1d3498 <line:1414:13, line:1418:13>
|       | | |-OpaqueValueExpr 0x1edde1d3480 <<invalid sloc>> '_Bool'
|       | | `-CompoundStmt 0x1edde1d3468 <line:1414:32, line:1418:13>
|       | |   `-IfStmt 0x1edde1d33c8 <line:1415:17, line:1416:28>
|       | |     |-OpaqueValueExpr 0x1edde1d33b0 <<invalid sloc>> '_Bool'
|       | |     `-ReturnStmt 0x1edde1d33a0 <col:21, col:28>
|       | |       `-IntegerLiteral 0x1edde1d3378 <col:28> 'int' 0
|       | |-IfStmt 0x1edde1d0b88 <line:1419:13, line:1426:13> has_else
|       | | |-OpaqueValueExpr 0x1edde1d0b70 <<invalid sloc>> '_Bool'
|       | | |-NullStmt 0x1edde1d0b68 <line:1420:17>
|       | | `-CompoundStmt 0x1edde1d0b40 <line:1421:18, line:1426:13>
|       | |   |-BinaryOperator 0x1edde1d3720 <line:1422:17, col:58> 'unsigned char *' '='
|       | |   | |-MemberExpr 0x1edde1d35f8 <col:17, col:27> 'unsigned char *' lvalue ->iv 0x1edde210560
|       | |   | | `-ImplicitCastExpr 0x1edde1d35e0 <col:17> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |   | |   `-DeclRefExpr 0x1edde1d35c0 <col:17> 'EVP_AES_GCM_CTX *' lvalue Var 0x1edde1d3230 'gctx_out' 'EVP_AES_GCM_CTX *'
|       | |   | `-ImplicitCastExpr 0x1edde1d3708 <col:32, col:58> 'unsigned char *' <IntegralToPointer>
|       | |   |   `-CallExpr 0x1edde1d36c8 <col:32, col:58> 'int'
|       | |   |     |-ImplicitCastExpr 0x1edde1d36b0 <col:32> 'int (*)()' <FunctionToPointerDecay>
|       | |   |     | `-DeclRefExpr 0x1edde1d3628 <col:32> 'int ()' Function 0x1edde1cbdb8 'OPENSSL_malloc' 'int ()'
|       | |   |     `-ImplicitCastExpr 0x1edde1d36f0 <col:47, col:53> 'int' <LValueToRValue>
|       | |   |       `-MemberExpr 0x1edde1d3680 <col:47, col:53> 'int' lvalue ->ivlen 0x1edde2105d0
|       | |   |         `-ImplicitCastExpr 0x1edde1d3668 <col:47> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |   |           `-DeclRefExpr 0x1edde1d3648 <col:47> 'EVP_AES_GCM_CTX *' lvalue Var 0x1edde1c4208 'gctx' 'EVP_AES_GCM_CTX *'
|       | |   |-IfStmt 0x1edde1d38b8 <line:1423:17, line:1424:28>
|       | |   | |-BinaryOperator 0x1edde1d3860 <line:1423:21, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|       | |   | | |-ImplicitCastExpr 0x1edde1d3830 <.//openssl//file_jk/before\crypto\evp\e_aes.c:1423:21, col:31> 'unsigned char *' <LValueToRValue>
|       | |   | | | `-MemberExpr 0x1edde1d3778 <col:21, col:31> 'unsigned char *' lvalue ->iv 0x1edde210560
|       | |   | | |   `-ImplicitCastExpr 0x1edde1d3760 <col:21> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |   | | |     `-DeclRefExpr 0x1edde1d3740 <col:21> 'EVP_AES_GCM_CTX *' lvalue Var 0x1edde1d3230 'gctx_out' 'EVP_AES_GCM_CTX *'
|       | |   | | `-ImplicitCastExpr 0x1edde1d3848 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'unsigned char *' <BitCast>
|       | |   | |   `-ParenExpr 0x1edde1d3810 <col:17, col:27> 'void *'
|       | |   | |     `-CStyleCastExpr 0x1edde1d37e8 <col:18, col:26> 'void *' <NullToPointer>
|       | |   | |       `-IntegerLiteral 0x1edde1d37a8 <col:26> 'int' 0
|       | |   | `-ReturnStmt 0x1edde1d38a8 <.//openssl//file_jk/before\crypto\evp\e_aes.c:1424:21, col:28>
|       | |   |   `-IntegerLiteral 0x1edde1d3880 <col:28> 'int' 0
|       | |   `-CallExpr 0x1edde1d0a78 <line:1425:17, col:59> 'void *'
|       | |     |-ImplicitCastExpr 0x1edde1d0a60 <col:17> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|       | |     | `-DeclRefExpr 0x1edde1d38d0 <col:17> 'void *(void *, const void *, unsigned long long)' Function 0x1edde16ea88 'memcpy' 'void *(void *, const void *, unsigned long long)'
|       | |     |-ImplicitCastExpr 0x1edde1d0ac8 <col:24, col:34> 'void *' <BitCast>
|       | |     | `-ImplicitCastExpr 0x1edde1d0ab0 <col:24, col:34> 'unsigned char *' <LValueToRValue>
|       | |     |   `-MemberExpr 0x1edde1d0918 <col:24, col:34> 'unsigned char *' lvalue ->iv 0x1edde210560
|       | |     |     `-ImplicitCastExpr 0x1edde1d0900 <col:24> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |     |       `-DeclRefExpr 0x1edde1d08e0 <col:24> 'EVP_AES_GCM_CTX *' lvalue Var 0x1edde1d3230 'gctx_out' 'EVP_AES_GCM_CTX *'
|       | |     |-ImplicitCastExpr 0x1edde1d0af8 <col:38, col:44> 'const void *' <BitCast>
|       | |     | `-ImplicitCastExpr 0x1edde1d0ae0 <col:38, col:44> 'unsigned char *' <LValueToRValue>
|       | |     |   `-MemberExpr 0x1edde1d0980 <col:38, col:44> 'unsigned char *' lvalue ->iv 0x1edde210560
|       | |     |     `-ImplicitCastExpr 0x1edde1d0968 <col:38> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |     |       `-DeclRefExpr 0x1edde1d0948 <col:38> 'EVP_AES_GCM_CTX *' lvalue Var 0x1edde1c4208 'gctx' 'EVP_AES_GCM_CTX *'
|       | |     `-ImplicitCastExpr 0x1edde1d0b28 <col:48, col:54> 'unsigned long long' <IntegralCast>
|       | |       `-ImplicitCastExpr 0x1edde1d0b10 <col:48, col:54> 'int' <LValueToRValue>
|       | |         `-MemberExpr 0x1edde1d09e8 <col:48, col:54> 'int' lvalue ->ivlen 0x1edde2105d0
|       | |           `-ImplicitCastExpr 0x1edde1d09d0 <col:48> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |             `-DeclRefExpr 0x1edde1d09b0 <col:48> 'EVP_AES_GCM_CTX *' lvalue Var 0x1edde1c4208 'gctx' 'EVP_AES_GCM_CTX *'
|       | `-ReturnStmt 0x1edde1d0bd8 <line:1427:13, col:20>
|       |   `-IntegerLiteral 0x1edde1d0bb0 <col:20> 'int' 1
|       `-DefaultStmt 0x1edde1d0c68 <line:1430:5, line:1431:17>
|         `-ReturnStmt 0x1edde1d0c58 <col:9, col:17>
|           `-UnaryOperator 0x1edde1d0c40 <col:16, col:17> 'int' prefix '-'
|             `-IntegerLiteral 0x1edde1d0c18 <col:17> 'int' 1
|-FunctionDecl 0x1edde1d1020 <line:1436:1, line:1511:1> line:1436:12 invalid aes_gcm_init_key 'int (int *, const unsigned char *, const unsigned char *, int)' static
| |-ParmVarDecl 0x1edde1d0df0 <col:29, col:45> col:45 invalid ctx 'int *'
| |-ParmVarDecl 0x1edde1d0e70 <col:50, col:71> col:71 used key 'const unsigned char *'
| |-ParmVarDecl 0x1edde1d0ef0 <line:1437:29, col:50> col:50 used iv 'const unsigned char *'
| |-ParmVarDecl 0x1edde1d0f70 <col:54, col:58> col:58 enc 'int'
| `-CompoundStmt 0x1edde1ce1e8 <line:1438:1, line:1511:1>
|   |-DeclStmt 0x1edde1d1190 <line:1439:5, col:60>
|   | `-VarDecl 0x1edde1d1108 <col:5, col:22> col:22 used gctx 'EVP_AES_GCM_CTX *'
|   |-IfStmt 0x1edde1d12d0 <line:1440:5, line:1441:16>
|   | |-BinaryOperator 0x1edde1d1278 <line:1440:9, col:17> 'int' '&&'
|   | | |-UnaryOperator 0x1edde1d11f8 <col:9, col:10> 'int' prefix '!' cannot overflow
|   | | | `-ImplicitCastExpr 0x1edde1d11e0 <col:10> 'const unsigned char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1edde1d11a8 <col:10> 'const unsigned char *' lvalue ParmVar 0x1edde1d0ef0 'iv' 'const unsigned char *'
|   | | `-UnaryOperator 0x1edde1d1260 <col:16, col:17> 'int' prefix '!' cannot overflow
|   | |   `-ImplicitCastExpr 0x1edde1d1248 <col:17> 'const unsigned char *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x1edde1d1210 <col:17> 'const unsigned char *' lvalue ParmVar 0x1edde1d0e70 'key' 'const unsigned char *'
|   | `-ReturnStmt 0x1edde1d12c0 <line:1441:9, col:16>
|   |   `-IntegerLiteral 0x1edde1d1298 <col:16> 'int' 1
|   |-IfStmt 0x1edde1ce188 <line:1442:5, line:1509:5> has_else
|   | |-ImplicitCastExpr 0x1edde1d1308 <line:1442:9> 'const unsigned char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1edde1d12e8 <col:9> 'const unsigned char *' lvalue ParmVar 0x1edde1d0e70 'key' 'const unsigned char *'
|   | |-CompoundStmt 0x1edde1cdc08 <col:14, line:1501:5>
|   | | |-DoStmt 0x1edde1d16d8 <line:1443:9, line:1489:19>
|   | | | |-CompoundStmt 0x1edde1d1698 <line:1443:12, line:1489:9>
|   | | | | `-CStyleCastExpr 0x1edde1d1358 <line:1478:17, col:23> 'void' <ToVoid>
|   | | | |   `-IntegerLiteral 0x1edde1d1320 <col:23> 'int' 0
|   | | | `-IntegerLiteral 0x1edde1d16b0 <line:1489:18> 'int' 0
|   | | |-IfStmt 0x1edde1cd948 <line:1494:9, line:1495:24>
|   | | | |-BinaryOperator 0x1edde1d1870 <line:1494:13, col:33> 'int' '&&'
|   | | | | |-BinaryOperator 0x1edde1d17d0 <col:13, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | | | | |-ImplicitCastExpr 0x1edde1d17a0 <.//openssl//file_jk/before\crypto\evp\e_aes.c:1494:13> 'const unsigned char *' <LValueToRValue>
|   | | | | | | `-DeclRefExpr 0x1edde1d16f8 <col:13> 'const unsigned char *' lvalue ParmVar 0x1edde1d0ef0 'iv' 'const unsigned char *'
|   | | | | | `-ImplicitCastExpr 0x1edde1d17b8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const unsigned char *' <BitCast>
|   | | | | |   `-ParenExpr 0x1edde1d1780 <col:17, col:27> 'void *'
|   | | | | |     `-CStyleCastExpr 0x1edde1d1758 <col:18, col:26> 'void *' <NullToPointer>
|   | | | | |       `-IntegerLiteral 0x1edde1d1718 <col:26> 'int' 0
|   | | | | `-ImplicitCastExpr 0x1edde1d1858 <.//openssl//file_jk/before\crypto\evp\e_aes.c:1494:27, col:33> 'int' <LValueToRValue>
|   | | | |   `-MemberExpr 0x1edde1d1828 <col:27, col:33> 'int' lvalue ->iv_set 0x1edde210458
|   | | | |     `-ImplicitCastExpr 0x1edde1d1810 <col:27> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|   | | | |       `-DeclRefExpr 0x1edde1d17f0 <col:27> 'EVP_AES_GCM_CTX *' lvalue Var 0x1edde1d1108 'gctx' 'EVP_AES_GCM_CTX *'
|   | | | `-BinaryOperator 0x1edde1cd928 <line:1495:13, col:24> 'const unsigned char *' '='
|   | | |   |-DeclRefExpr 0x1edde1d1890 <col:13> 'const unsigned char *' lvalue ParmVar 0x1edde1d0ef0 'iv' 'const unsigned char *'
|   | | |   `-ImplicitCastExpr 0x1edde1cd910 <col:18, col:24> 'const unsigned char *' <NoOp>
|   | | |     `-ImplicitCastExpr 0x1edde1cd8f8 <col:18, col:24> 'unsigned char *' <LValueToRValue>
|   | | |       `-MemberExpr 0x1edde1cd8c8 <col:18, col:24> 'unsigned char *' lvalue ->iv 0x1edde210560
|   | | |         `-ImplicitCastExpr 0x1edde1cd8b0 <col:18> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|   | | |           `-DeclRefExpr 0x1edde1d18b0 <col:18> 'EVP_AES_GCM_CTX *' lvalue Var 0x1edde1d1108 'gctx' 'EVP_AES_GCM_CTX *'
|   | | |-IfStmt 0x1edde1cdb40 <line:1496:9, line:1499:9>
|   | | | |-ImplicitCastExpr 0x1edde1cd980 <line:1496:13> 'const unsigned char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1edde1cd960 <col:13> 'const unsigned char *' lvalue ParmVar 0x1edde1d0ef0 'iv' 'const unsigned char *'
|   | | | `-CompoundStmt 0x1edde1cdb28 <col:17, line:1499:9>
|   | | |   `-BinaryOperator 0x1edde1cdb08 <line:1498:13, col:28> 'int' '='
|   | | |     |-MemberExpr 0x1edde1cdab0 <col:13, col:19> 'int' lvalue ->iv_set 0x1edde210458
|   | | |     | `-ImplicitCastExpr 0x1edde1cda98 <col:13> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|   | | |     |   `-DeclRefExpr 0x1edde1cda78 <col:13> 'EVP_AES_GCM_CTX *' lvalue Var 0x1edde1d1108 'gctx' 'EVP_AES_GCM_CTX *'
|   | | |     `-IntegerLiteral 0x1edde1cdae0 <col:28> 'int' 1
|   | | `-BinaryOperator 0x1edde1cdbe8 <line:1500:9, col:25> 'int' '='
|   | |   |-MemberExpr 0x1edde1cdb90 <col:9, col:15> 'int' lvalue ->key_set 0x1edde2103e8
|   | |   | `-ImplicitCastExpr 0x1edde1cdb78 <col:9> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x1edde1cdb58 <col:9> 'EVP_AES_GCM_CTX *' lvalue Var 0x1edde1d1108 'gctx' 'EVP_AES_GCM_CTX *'
|   | |   `-IntegerLiteral 0x1edde1cdbc0 <col:25> 'int' 1
|   | `-CompoundStmt 0x1edde1ce160 <line:1501:12, line:1509:5>
|   |   |-IfStmt 0x1edde1cdfd8 <line:1503:9, line:1506:45> has_else
|   |   | |-ImplicitCastExpr 0x1edde1cdca0 <line:1503:13, col:19> 'int' <LValueToRValue>
|   |   | | `-MemberExpr 0x1edde1cdc70 <col:13, col:19> 'int' lvalue ->key_set 0x1edde2103e8
|   |   | |   `-ImplicitCastExpr 0x1edde1cdc58 <col:13> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x1edde1cdc38 <col:13> 'EVP_AES_GCM_CTX *' lvalue Var 0x1edde1d1108 'gctx' 'EVP_AES_GCM_CTX *'
|   |   | |-NullStmt 0x1edde1cdfd0 <line:1504:13>
|   |   | `-CallExpr 0x1edde1cdf08 <line:1506:13, col:45> 'void *'
|   |   |   |-ImplicitCastExpr 0x1edde1cdef0 <col:13> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x1edde1cdd98 <col:13> 'void *(void *, const void *, unsigned long long)' Function 0x1edde16ea88 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   |   |   |-ImplicitCastExpr 0x1edde1cdf58 <col:20, col:26> 'void *' <BitCast>
|   |   |   | `-ImplicitCastExpr 0x1edde1cdf40 <col:20, col:26> 'unsigned char *' <LValueToRValue>
|   |   |   |   `-MemberExpr 0x1edde1cddf0 <col:20, col:26> 'unsigned char *' lvalue ->iv 0x1edde210560
|   |   |   |     `-ImplicitCastExpr 0x1edde1cddd8 <col:20> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|   |   |   |       `-DeclRefExpr 0x1edde1cddb8 <col:20> 'EVP_AES_GCM_CTX *' lvalue Var 0x1edde1d1108 'gctx' 'EVP_AES_GCM_CTX *'
|   |   |   |-ImplicitCastExpr 0x1edde1cdf88 <col:30> 'const void *' <BitCast>
|   |   |   | `-ImplicitCastExpr 0x1edde1cdf70 <col:30> 'const unsigned char *' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x1edde1cde20 <col:30> 'const unsigned char *' lvalue ParmVar 0x1edde1d0ef0 'iv' 'const unsigned char *'
|   |   |   `-ImplicitCastExpr 0x1edde1cdfb8 <col:34, col:40> 'unsigned long long' <IntegralCast>
|   |   |     `-ImplicitCastExpr 0x1edde1cdfa0 <col:34, col:40> 'int' <LValueToRValue>
|   |   |       `-MemberExpr 0x1edde1cde78 <col:34, col:40> 'int' lvalue ->ivlen 0x1edde2105d0
|   |   |         `-ImplicitCastExpr 0x1edde1cde60 <col:34> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|   |   |           `-DeclRefExpr 0x1edde1cde40 <col:34> 'EVP_AES_GCM_CTX *' lvalue Var 0x1edde1d1108 'gctx' 'EVP_AES_GCM_CTX *'
|   |   |-BinaryOperator 0x1edde1ce090 <line:1507:9, col:24> 'int' '='
|   |   | |-MemberExpr 0x1edde1ce038 <col:9, col:15> 'int' lvalue ->iv_set 0x1edde210458
|   |   | | `-ImplicitCastExpr 0x1edde1ce020 <col:9> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1edde1ce000 <col:9> 'EVP_AES_GCM_CTX *' lvalue Var 0x1edde1d1108 'gctx' 'EVP_AES_GCM_CTX *'
|   |   | `-IntegerLiteral 0x1edde1ce068 <col:24> 'int' 1
|   |   `-BinaryOperator 0x1edde1ce140 <line:1508:9, col:24> 'int' '='
|   |     |-MemberExpr 0x1edde1ce0e8 <col:9, col:15> 'int' lvalue ->iv_gen 0x1edde2106b0
|   |     | `-ImplicitCastExpr 0x1edde1ce0d0 <col:9> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x1edde1ce0b0 <col:9> 'EVP_AES_GCM_CTX *' lvalue Var 0x1edde1d1108 'gctx' 'EVP_AES_GCM_CTX *'
|   |     `-IntegerLiteral 0x1edde1ce118 <col:24> 'int' 0
|   `-ReturnStmt 0x1edde1ce1d8 <line:1510:5, col:12>
|     `-IntegerLiteral 0x1edde1ce1b0 <col:12> 'int' 1
|-FunctionDecl 0x1edde1ce458 <line:1520:1, line:1639:1> line:1520:12 invalid aes_gcm_tls_cipher 'int (int *, unsigned char *, const unsigned char *, size_t)' static
| |-ParmVarDecl 0x1edde1ce230 <col:31, col:47> col:47 invalid ctx 'int *'
| |-ParmVarDecl 0x1edde1ce2b0 <col:52, col:67> col:67 used out 'unsigned char *'
| |-ParmVarDecl 0x1edde1ce330 <line:1521:31, col:52> col:52 used in 'const unsigned char *'
| |-ParmVarDecl 0x1edde1ce3a8 <col:56, col:63> col:63 used len 'size_t':'unsigned long long'
| `-CompoundStmt 0x1edde1d4920 <line:1522:1, line:1639:1>
|   |-DeclStmt 0x1edde1ce5c8 <line:1523:5, col:60>
|   | `-VarDecl 0x1edde1ce540 <col:5, col:22> col:22 used gctx 'EVP_AES_GCM_CTX *'
|   |-DeclStmt 0x1edde1ce6a0 <line:1524:5, col:16>
|   | `-VarDecl 0x1edde1ce5f8 <col:5, col:15> col:9 used rv 'int' cinit
|   |   `-UnaryOperator 0x1edde1ce688 <col:14, col:15> 'int' prefix '-'
|   |     `-IntegerLiteral 0x1edde1ce660 <col:15> 'int' 1
|   |-IfStmt 0x1edde1ce830 <line:1526:5, line:1528:17>
|   | |-OpaqueValueExpr 0x1edde1ce818 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1edde1ce808 <col:9, col:17>
|   |   `-UnaryOperator 0x1edde1ce7f0 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x1edde1ce7c8 <col:17> 'int' 1
|   |-IfStmt 0x1edde1d3ae0 <line:1533:5, line:1536:14>
|   | |-OpaqueValueExpr 0x1edde1d3ac8 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1edde1d3ab0 <col:9, col:14> 'err' 0x1edde1d3a60
|   |-IfStmt 0x1edde1d3d10 <line:1538:5, line:1540:14>
|   | |-OpaqueValueExpr 0x1edde1d3cf8 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1edde1d3ce0 <col:9, col:14> 'err' 0x1edde1d3a60
|   |-IfStmt 0x1edde1cd668 <line:1545:5, line:1633:5> has_else
|   | |-OpaqueValueExpr 0x1edde1cd650 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x1edde1cc8c0 <line:1545:41, line:1586:5>
|   | | |-IfStmt 0x1edde1d46c0 <line:1547:9, line:1581:9> has_else
|   | | | |-OpaqueValueExpr 0x1edde1d46a8 <<invalid sloc>> '_Bool'
|   | | | |-CompoundStmt 0x1edde1d4240 <line:1547:24, line:1565:9>
|   | | | | |-DeclStmt 0x1edde1d3e98 <line:1548:13, col:28>
|   | | | | | `-VarDecl 0x1edde1d3df0 <col:13, col:27> col:20 used bulk 'size_t':'unsigned long long' cinit
|   | | | | |   `-ImplicitCastExpr 0x1edde1d3e80 <col:27> 'size_t':'unsigned long long' <IntegralCast>
|   | | | | |     `-IntegerLiteral 0x1edde1d3e58 <col:27> 'int' 0
|   | | | | `-IfStmt 0x1edde1d4228 <line:1560:13, line:1564:22>
|   | | | |   |-OpaqueValueExpr 0x1edde1d4210 <<invalid sloc>> '_Bool'
|   | | | |   `-GotoStmt 0x1edde1d41f8 <col:17, col:22> 'err' 0x1edde1d3a60
|   | | | `-CompoundStmt 0x1edde1d4688 <line:1565:16, line:1581:9>
|   | | |   |-DeclStmt 0x1edde1d4318 <line:1566:13, col:28>
|   | | |   | `-VarDecl 0x1edde1d4270 <col:13, col:27> col:20 used bulk 'size_t':'unsigned long long' cinit
|   | | |   |   `-ImplicitCastExpr 0x1edde1d4300 <col:27> 'size_t':'unsigned long long' <IntegralCast>
|   | | |   |     `-IntegerLiteral 0x1edde1d42d8 <col:27> 'int' 0
|   | | |   `-IfStmt 0x1edde1d4670 <line:1578:13, line:1580:22>
|   | | |     |-OpaqueValueExpr 0x1edde1d4658 <<invalid sloc>> '_Bool'
|   | | |     `-GotoStmt 0x1edde1d4640 <col:17, col:22> 'err' 0x1edde1d3a60
|   | | `-CompoundAssignOperator 0x1edde1d4740 <line:1582:9, col:16> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   | |   |-DeclRefExpr 0x1edde1d46e8 <col:9> 'unsigned char *' lvalue ParmVar 0x1edde1ce2b0 'out' 'unsigned char *'
|   | |   `-ImplicitCastExpr 0x1edde1d4728 <col:16> 'size_t':'unsigned long long' <LValueToRValue>
|   | |     `-DeclRefExpr 0x1edde1d4708 <col:16> 'size_t':'unsigned long long' lvalue ParmVar 0x1edde1ce3a8 'len' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x1edde1cd628 <line:1586:12, line:1633:5>
|   |   |-IfStmt 0x1edde1cd1f8 <line:1588:9, line:1622:9> has_else
|   |   | |-OpaqueValueExpr 0x1edde1cd1e0 <<invalid sloc>> '_Bool'
|   |   | |-CompoundStmt 0x1edde1ccd78 <line:1588:24, line:1606:9>
|   |   | | |-DeclStmt 0x1edde1cc9d0 <line:1589:13, col:28>
|   |   | | | `-VarDecl 0x1edde1cc928 <col:13, col:27> col:20 used bulk 'size_t':'unsigned long long' cinit
|   |   | | |   `-ImplicitCastExpr 0x1edde1cc9b8 <col:27> 'size_t':'unsigned long long' <IntegralCast>
|   |   | | |     `-IntegerLiteral 0x1edde1cc990 <col:27> 'int' 0
|   |   | | `-IfStmt 0x1edde1ccd60 <line:1601:13, line:1605:22>
|   |   | |   |-OpaqueValueExpr 0x1edde1ccd48 <<invalid sloc>> '_Bool'
|   |   | |   `-GotoStmt 0x1edde1ccd30 <col:17, col:22> 'err' 0x1edde1d3a60
|   |   | `-CompoundStmt 0x1edde1cd1c0 <line:1606:16, line:1622:9>
|   |   |   |-DeclStmt 0x1edde1cce50 <line:1607:13, col:28>
|   |   |   | `-VarDecl 0x1edde1ccda8 <col:13, col:27> col:20 used bulk 'size_t':'unsigned long long' cinit
|   |   |   |   `-ImplicitCastExpr 0x1edde1cce38 <col:27> 'size_t':'unsigned long long' <IntegralCast>
|   |   |   |     `-IntegerLiteral 0x1edde1cce10 <col:27> 'int' 0
|   |   |   `-IfStmt 0x1edde1cd1a8 <line:1619:13, line:1621:22>
|   |   |     |-OpaqueValueExpr 0x1edde1cd190 <<invalid sloc>> '_Bool'
|   |   |     `-GotoStmt 0x1edde1cd178 <col:17, col:22> 'err' 0x1edde1d3a60
|   |   |-IfStmt 0x1edde1cd580 <line:1627:9, line:1631:9>
|   |   | |-OpaqueValueExpr 0x1edde1cd568 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x1edde1cd548 <line:1628:49, line:1631:9>
|   |   |   |-CallExpr 0x1edde1cd4d0 <line:1629:13, col:37> 'int'
|   |   |   | |-ImplicitCastExpr 0x1edde1cd4b8 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x1edde1cd458 <col:13> 'int ()' Function 0x1edde1c83a0 'OPENSSL_cleanse' 'int ()'
|   |   |   | |-ImplicitCastExpr 0x1edde1cd500 <col:29> 'unsigned char *' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x1edde1cd478 <col:29> 'unsigned char *' lvalue ParmVar 0x1edde1ce2b0 'out' 'unsigned char *'
|   |   |   | `-ImplicitCastExpr 0x1edde1cd518 <col:34> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x1edde1cd498 <col:34> 'size_t':'unsigned long long' lvalue ParmVar 0x1edde1ce3a8 'len' 'size_t':'unsigned long long'
|   |   |   `-GotoStmt 0x1edde1cd530 <line:1630:13, col:18> 'err' 0x1edde1d3a60
|   |   `-BinaryOperator 0x1edde1cd608 <line:1632:9, col:14> 'int' '='
|   |     |-DeclRefExpr 0x1edde1cd598 <col:9> 'int' lvalue Var 0x1edde1ce5f8 'rv' 'int'
|   |     `-ImplicitCastExpr 0x1edde1cd5f0 <col:14> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x1edde1cd5d8 <col:14> 'size_t':'unsigned long long' <LValueToRValue>
|   |         `-DeclRefExpr 0x1edde1cd5b8 <col:14> 'size_t':'unsigned long long' lvalue ParmVar 0x1edde1ce3a8 'len' 'size_t':'unsigned long long'
|   |-LabelStmt 0x1edde1cd740 <line:1635:2, line:1636:20> 'err'
|   | `-BinaryOperator 0x1edde1cd720 <col:5, col:20> 'int' '='
|   |   |-MemberExpr 0x1edde1cd6c8 <col:5, col:11> 'int' lvalue ->iv_set 0x1edde210458
|   |   | `-ImplicitCastExpr 0x1edde1cd6b0 <col:5> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1edde1cd690 <col:5> 'EVP_AES_GCM_CTX *' lvalue Var 0x1edde1ce540 'gctx' 'EVP_AES_GCM_CTX *'
|   |   `-IntegerLiteral 0x1edde1cd6f8 <col:20> 'int' 0
|   |-BinaryOperator 0x1edde1cd800 <line:1637:5, col:26> 'int' '='
|   | |-MemberExpr 0x1edde1cd790 <col:5, col:11> 'int' lvalue ->tls_aad_len 0x1edde210720
|   | | `-ImplicitCastExpr 0x1edde1cd778 <col:5> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1edde1cd758 <col:5> 'EVP_AES_GCM_CTX *' lvalue Var 0x1edde1ce540 'gctx' 'EVP_AES_GCM_CTX *'
|   | `-UnaryOperator 0x1edde1cd7e8 <col:25, col:26> 'int' prefix '-'
|   |   `-IntegerLiteral 0x1edde1cd7c0 <col:26> 'int' 1
|   `-ReturnStmt 0x1edde1cd858 <line:1638:5, col:12>
|     `-ImplicitCastExpr 0x1edde1cd840 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1edde1cd820 <col:12> 'int' lvalue Var 0x1edde1ce5f8 'rv' 'int'
|-FunctionDecl 0x1edde1d4bb8 <line:1641:1, line:1766:1> line:1641:12 invalid aes_gcm_cipher 'int (int *, unsigned char *, const unsigned char *, size_t)' static
| |-ParmVarDecl 0x1edde1d4990 <col:27, col:43> col:43 invalid ctx 'int *'
| |-ParmVarDecl 0x1edde1d4a10 <col:48, col:63> col:63 used out 'unsigned char *'
| |-ParmVarDecl 0x1edde1d4a90 <line:1642:27, col:48> col:48 used in 'const unsigned char *'
| |-ParmVarDecl 0x1edde1d4b08 <col:52, col:59> col:59 used len 'size_t':'unsigned long long'
| `-CompoundStmt 0x1edde1d5bc0 <line:1643:1, line:1766:1>
|   |-DeclStmt 0x1edde1d4d28 <line:1644:5, col:60>
|   | `-VarDecl 0x1edde1d4ca0 <col:5, col:22> col:22 used gctx 'EVP_AES_GCM_CTX *'
|   |-IfStmt 0x1edde1d4e40 <line:1646:5, line:1647:17>
|   | |-UnaryOperator 0x1edde1d4dd8 <line:1646:9, col:16> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x1edde1d4dc0 <col:10, col:16> 'int' <LValueToRValue>
|   | |   `-MemberExpr 0x1edde1d4d90 <col:10, col:16> 'int' lvalue ->key_set 0x1edde2103e8
|   | |     `-ImplicitCastExpr 0x1edde1d4d78 <col:10> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x1edde1d4d40 <col:10> 'EVP_AES_GCM_CTX *' lvalue Var 0x1edde1d4ca0 'gctx' 'EVP_AES_GCM_CTX *'
|   | `-ReturnStmt 0x1edde1d4e30 <line:1647:9, col:17>
|   |   `-UnaryOperator 0x1edde1d4e18 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x1edde1d4df0 <col:17> 'int' 1
|   |-IfStmt 0x1edde1d50b0 <line:1652:5, line:1653:17>
|   | |-UnaryOperator 0x1edde1d5048 <line:1652:9, col:16> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x1edde1d5030 <col:10, col:16> 'int' <LValueToRValue>
|   | |   `-MemberExpr 0x1edde1d5000 <col:10, col:16> 'int' lvalue ->iv_set 0x1edde210458
|   | |     `-ImplicitCastExpr 0x1edde1d4fe8 <col:10> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x1edde1d4fc8 <col:10> 'EVP_AES_GCM_CTX *' lvalue Var 0x1edde1d4ca0 'gctx' 'EVP_AES_GCM_CTX *'
|   | `-ReturnStmt 0x1edde1d50a0 <line:1653:9, col:17>
|   |   `-UnaryOperator 0x1edde1d5088 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x1edde1d5060 <col:17> 'int' 1
|   `-IfStmt 0x1edde1d5b98 <line:1654:5, line:1764:5> has_else
|     |-ImplicitCastExpr 0x1edde1d50e8 <line:1654:9> 'const unsigned char *' <LValueToRValue>
|     | `-DeclRefExpr 0x1edde1d50c8 <col:9> 'const unsigned char *' lvalue ParmVar 0x1edde1d4a90 'in' 'const unsigned char *'
|     |-CompoundStmt 0x1edde1d23b8 <col:13, line:1748:5>
|     | |-IfStmt 0x1edde1d2330 <line:1655:9, line:1746:9> has_else
|     | | |-BinaryOperator 0x1edde1d51d8 <line:1655:13, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|     | | | |-ImplicitCastExpr 0x1edde1d51a8 <.//openssl//file_jk/before\crypto\evp\e_aes.c:1655:13> 'unsigned char *' <LValueToRValue>
|     | | | | `-DeclRefExpr 0x1edde1d5100 <col:13> 'unsigned char *' lvalue ParmVar 0x1edde1d4a10 'out' 'unsigned char *'
|     | | | `-ImplicitCastExpr 0x1edde1d51c0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'unsigned char *' <BitCast>
|     | | |   `-ParenExpr 0x1edde1d5188 <col:17, col:27> 'void *'
|     | | |     `-CStyleCastExpr 0x1edde1d5160 <col:18, col:26> 'void *' <NullToPointer>
|     | | |       `-IntegerLiteral 0x1edde1d5120 <col:26> 'int' 0
|     | | |-CompoundStmt 0x1edde1d5310 <.//openssl//file_jk/before\crypto\evp\e_aes.c:1655:26, line:1658:9>
|     | | | `-IfStmt 0x1edde1d52f8 <line:1656:13, line:1657:25>
|     | | |   |-OpaqueValueExpr 0x1edde1d52e0 <<invalid sloc>> '_Bool'
|     | | |   `-ReturnStmt 0x1edde1d52d0 <col:17, col:25>
|     | | |     `-UnaryOperator 0x1edde1d52b8 <col:24, col:25> 'int' prefix '-'
|     | | |       `-IntegerLiteral 0x1edde1d5290 <col:25> 'int' 1
|     | | `-IfStmt 0x1edde1d2308 <line:1658:16, line:1746:9> has_else
|     | |   |-OpaqueValueExpr 0x1edde1d22f0 <<invalid sloc>> '_Bool'
|     | |   |-CompoundStmt 0x1edde1d1af0 <line:1658:52, line:1702:9>
|     | |   | `-IfStmt 0x1edde1d1ac8 <line:1659:13, line:1701:13> has_else
|     | |   |   |-OpaqueValueExpr 0x1edde1d1ab0 <<invalid sloc>> '_Bool'
|     | |   |   |-CompoundStmt 0x1edde1d5728 <line:1659:28, line:1681:13>
|     | |   |   | |-DeclStmt 0x1edde1d5438 <line:1660:17, col:32>
|     | |   |   | | `-VarDecl 0x1edde1d5390 <col:17, col:31> col:24 used bulk 'size_t':'unsigned long long' cinit
|     | |   |   | |   `-ImplicitCastExpr 0x1edde1d5420 <col:31> 'size_t':'unsigned long long' <IntegralCast>
|     | |   |   | |     `-IntegerLiteral 0x1edde1d53f8 <col:31> 'int' 0
|     | |   |   | `-IfStmt 0x1edde1d5710 <line:1676:17, line:1680:29>
|     | |   |   |   |-OpaqueValueExpr 0x1edde1d56f8 <<invalid sloc>> '_Bool'
|     | |   |   |   `-ReturnStmt 0x1edde1d56e8 <col:21, col:29>
|     | |   |   |     `-UnaryOperator 0x1edde1d56d0 <col:28, col:29> 'int' prefix '-'
|     | |   |   |       `-IntegerLiteral 0x1edde1d56a8 <col:29> 'int' 1
|     | |   |   `-CompoundStmt 0x1edde1d1a90 <line:1681:20, line:1701:13>
|     | |   |     |-DeclStmt 0x1edde1d5800 <line:1682:17, col:32>
|     | |   |     | `-VarDecl 0x1edde1d5758 <col:17, col:31> col:24 used bulk 'size_t':'unsigned long long' cinit
|     | |   |     |   `-ImplicitCastExpr 0x1edde1d57e8 <col:31> 'size_t':'unsigned long long' <IntegralCast>
|     | |   |     |     `-IntegerLiteral 0x1edde1d57c0 <col:31> 'int' 0
|     | |   |     `-IfStmt 0x1edde1d1a78 <line:1698:17, line:1700:29>
|     | |   |       |-OpaqueValueExpr 0x1edde1d1a60 <<invalid sloc>> '_Bool'
|     | |   |       `-ReturnStmt 0x1edde1d1a50 <col:21, col:29>
|     | |   |         `-UnaryOperator 0x1edde1d1a38 <col:28, col:29> 'int' prefix '-'
|     | |   |           `-IntegerLiteral 0x1edde1d1a10 <col:29> 'int' 1
|     | |   `-CompoundStmt 0x1edde1d22d8 <line:1702:16, line:1746:9>
|     | |     `-IfStmt 0x1edde1d22b0 <line:1703:13, line:1745:13> has_else
|     | |       |-OpaqueValueExpr 0x1edde1d2298 <<invalid sloc>> '_Bool'
|     | |       |-CompoundStmt 0x1edde1d1ee8 <line:1703:28, line:1725:13>
|     | |       | |-DeclStmt 0x1edde1d1bf8 <line:1704:17, col:32>
|     | |       | | `-VarDecl 0x1edde1d1b50 <col:17, col:31> col:24 used bulk 'size_t':'unsigned long long' cinit
|     | |       | |   `-ImplicitCastExpr 0x1edde1d1be0 <col:31> 'size_t':'unsigned long long' <IntegralCast>
|     | |       | |     `-IntegerLiteral 0x1edde1d1bb8 <col:31> 'int' 0
|     | |       | `-IfStmt 0x1edde1d1ed0 <line:1720:17, line:1724:29>
|     | |       |   |-OpaqueValueExpr 0x1edde1d1eb8 <<invalid sloc>> '_Bool'
|     | |       |   `-ReturnStmt 0x1edde1d1ea8 <col:21, col:29>
|     | |       |     `-UnaryOperator 0x1edde1d1e90 <col:28, col:29> 'int' prefix '-'
|     | |       |       `-IntegerLiteral 0x1edde1d1e68 <col:29> 'int' 1
|     | |       `-CompoundStmt 0x1edde1d2278 <line:1725:20, line:1745:13>
|     | |         |-DeclStmt 0x1edde1d1fc0 <line:1726:17, col:32>
|     | |         | `-VarDecl 0x1edde1d1f18 <col:17, col:31> col:24 used bulk 'size_t':'unsigned long long' cinit
|     | |         |   `-ImplicitCastExpr 0x1edde1d1fa8 <col:31> 'size_t':'unsigned long long' <IntegralCast>
|     | |         |     `-IntegerLiteral 0x1edde1d1f80 <col:31> 'int' 0
|     | |         `-IfStmt 0x1edde1d2260 <line:1742:17, line:1744:29>
|     | |           |-OpaqueValueExpr 0x1edde1d2248 <<invalid sloc>> '_Bool'
|     | |           `-ReturnStmt 0x1edde1d2238 <col:21, col:29>
|     | |             `-UnaryOperator 0x1edde1d2220 <col:28, col:29> 'int' prefix '-'
|     | |               `-IntegerLiteral 0x1edde1d21f8 <col:29> 'int' 1
|     | `-ReturnStmt 0x1edde1d23a8 <line:1747:9, col:16>
|     |   `-ImplicitCastExpr 0x1edde1d2390 <col:16> 'int' <IntegralCast>
|     |     `-ImplicitCastExpr 0x1edde1d2378 <col:16> 'size_t':'unsigned long long' <LValueToRValue>
|     |       `-DeclRefExpr 0x1edde1d2358 <col:16> 'size_t':'unsigned long long' lvalue ParmVar 0x1edde1d4b08 'len' 'size_t':'unsigned long long'
|     `-CompoundStmt 0x1edde1d5b68 <line:1748:12, line:1764:5>
|       |-IfStmt 0x1edde1d28d0 <line:1749:9, line:1758:9>
|       | |-OpaqueValueExpr 0x1edde1d28b8 <<invalid sloc>> '_Bool'
|       | `-CompoundStmt 0x1edde1d2888 <line:1749:46, line:1758:9>
|       |   |-IfStmt 0x1edde1d2510 <line:1750:13, line:1751:25>
|       |   | |-BinaryOperator 0x1edde1d24a0 <line:1750:17, col:32> 'int' '<'
|       |   | | |-ImplicitCastExpr 0x1edde1d2488 <col:17, col:23> 'int' <LValueToRValue>
|       |   | | | `-MemberExpr 0x1edde1d2430 <col:17, col:23> 'int' lvalue ->taglen 0x1edde210640
|       |   | | |   `-ImplicitCastExpr 0x1edde1d2418 <col:17> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       |   | | |     `-DeclRefExpr 0x1edde1d23f8 <col:17> 'EVP_AES_GCM_CTX *' lvalue Var 0x1edde1d4ca0 'gctx' 'EVP_AES_GCM_CTX *'
|       |   | | `-IntegerLiteral 0x1edde1d2460 <col:32> 'int' 0
|       |   | `-ReturnStmt 0x1edde1d2500 <line:1751:17, col:25>
|       |   |   `-UnaryOperator 0x1edde1d24e8 <col:24, col:25> 'int' prefix '-'
|       |   |     `-IntegerLiteral 0x1edde1d24c0 <col:25> 'int' 1
|       |   |-IfStmt 0x1edde1d2788 <line:1752:13, line:1755:25>
|       |   | |-OpaqueValueExpr 0x1edde1d2770 <<invalid sloc>> '_Bool'
|       |   | `-ReturnStmt 0x1edde1d2760 <col:17, col:25>
|       |   |   `-UnaryOperator 0x1edde1d2748 <col:24, col:25> 'int' prefix '-'
|       |   |     `-IntegerLiteral 0x1edde1d2720 <col:25> 'int' 1
|       |   |-BinaryOperator 0x1edde1d2830 <line:1756:13, col:28> 'int' '='
|       |   | |-MemberExpr 0x1edde1d27d8 <col:13, col:19> 'int' lvalue ->iv_set 0x1edde210458
|       |   | | `-ImplicitCastExpr 0x1edde1d27c0 <col:13> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       |   | |   `-DeclRefExpr 0x1edde1d27a0 <col:13> 'EVP_AES_GCM_CTX *' lvalue Var 0x1edde1d4ca0 'gctx' 'EVP_AES_GCM_CTX *'
|       |   | `-IntegerLiteral 0x1edde1d2808 <col:28> 'int' 0
|       |   `-ReturnStmt 0x1edde1d2878 <line:1757:13, col:20>
|       |     `-IntegerLiteral 0x1edde1d2850 <col:20> 'int' 0
|       |-BinaryOperator 0x1edde1d5a60 <line:1760:9, col:24> 'int' '='
|       | |-MemberExpr 0x1edde1d5a08 <col:9, col:15> 'int' lvalue ->taglen 0x1edde210640
|       | | `-ImplicitCastExpr 0x1edde1d59f0 <col:9> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1edde1d59d0 <col:9> 'EVP_AES_GCM_CTX *' lvalue Var 0x1edde1d4ca0 'gctx' 'EVP_AES_GCM_CTX *'
|       | `-IntegerLiteral 0x1edde1d5a38 <col:24> 'int' 16
|       |-BinaryOperator 0x1edde1d5b10 <line:1762:9, col:24> 'int' '='
|       | |-MemberExpr 0x1edde1d5ab8 <col:9, col:15> 'int' lvalue ->iv_set 0x1edde210458
|       | | `-ImplicitCastExpr 0x1edde1d5aa0 <col:9> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1edde1d5a80 <col:9> 'EVP_AES_GCM_CTX *' lvalue Var 0x1edde1d4ca0 'gctx' 'EVP_AES_GCM_CTX *'
|       | `-IntegerLiteral 0x1edde1d5ae8 <col:24> 'int' 0
|       `-ReturnStmt 0x1edde1d5b58 <line:1763:9, col:16>
|         `-IntegerLiteral 0x1edde1d5b30 <col:16> 'int' 0
|-VarDecl 0x1edde1d5c08 <line:967:74, <scratch space>:36:1> col:1 invalid aes_128_gcm 'const int' static
|-FunctionDecl 0x1edde1d5fc8 <.//openssl//file_jk/before\crypto\evp\e_aes.c:976:45, line:978:34> <scratch space>:57:1 invalid EVP_aes_128_gcm 'const int *(void)'
| `-CompoundStmt 0x1edde1d6080 <.//openssl//file_jk/before\crypto\evp\e_aes.c:977:51, line:978:34>
|-VarDecl 0x1edde1d60a8 <line:967:74, <scratch space>:63:1> col:1 invalid aes_192_gcm 'const int' static
|-FunctionDecl 0x1edde1d6468 <.//openssl//file_jk/before\crypto\evp\e_aes.c:976:45, line:978:34> <scratch space>:84:1 invalid EVP_aes_192_gcm 'const int *(void)'
| `-CompoundStmt 0x1edde1d6520 <.//openssl//file_jk/before\crypto\evp\e_aes.c:977:51, line:978:34>
|-VarDecl 0x1edde1d6548 <line:967:74, <scratch space>:90:1> col:1 invalid aes_256_gcm 'const int' static
|-FunctionDecl 0x1edde1cf8d0 <.//openssl//file_jk/before\crypto\evp\e_aes.c:976:45, line:978:34> <scratch space>:111:1 invalid EVP_aes_256_gcm 'const int *(void)'
| `-CompoundStmt 0x1edde1cf988 <.//openssl//file_jk/before\crypto\evp\e_aes.c:977:51, line:978:34>
|-FunctionDecl 0x1edde1cfbe0 <line:1780:1, line:1803:1> line:1780:12 invalid aes_xts_ctrl 'int (int *, int, int, void *)' static
| |-ParmVarDecl 0x1edde1cf9b0 <col:25, col:41> col:41 invalid c 'int *'
| |-ParmVarDecl 0x1edde1cfa30 <col:44, col:48> col:48 used type 'int'
| |-ParmVarDecl 0x1edde1cfab0 <col:54, col:58> col:58 arg 'int'
| |-ParmVarDecl 0x1edde1cfb30 <col:63, col:69> col:69 used ptr 'void *'
| `-CompoundStmt 0x1edde1d05c8 <line:1781:1, line:1803:1>
|   |-DeclStmt 0x1edde1cfdd0 <line:1782:5, col:58>
|   | `-VarDecl 0x1edde1cfd48 <col:5, col:22> col:22 used xctx 'EVP_AES_XTS_CTX *'
|   |-IfStmt 0x1edde1d03e8 <line:1783:5, line:1798:17> has_else
|   | |-OpaqueValueExpr 0x1edde1d03d0 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x1edde1d0300 <line:1783:32, line:1797:5>
|   | | |-DeclStmt 0x1edde1cfef0 <line:1785:9, col:68>
|   | | | `-VarDecl 0x1edde1cfe68 <col:9, col:26> col:26 used xctx_out 'EVP_AES_XTS_CTX *'
|   | | |-IfStmt 0x1edde1d00e8 <line:1786:9, line:1790:9>
|   | | | |-OpaqueValueExpr 0x1edde1d00d0 <<invalid sloc>> '_Bool'
|   | | | `-CompoundStmt 0x1edde1d00b8 <line:1786:29, line:1790:9>
|   | | |   `-IfStmt 0x1edde1d0018 <line:1787:13, line:1788:24>
|   | | |     |-OpaqueValueExpr 0x1edde1d0000 <<invalid sloc>> '_Bool'
|   | | |     `-ReturnStmt 0x1edde1cfff0 <col:17, col:24>
|   | | |       `-IntegerLiteral 0x1edde1cffc8 <col:24> 'int' 0
|   | | |-IfStmt 0x1edde1d02b0 <line:1791:9, line:1795:9>
|   | | | |-OpaqueValueExpr 0x1edde1d0298 <<invalid sloc>> '_Bool'
|   | | | `-CompoundStmt 0x1edde1d0280 <line:1791:29, line:1795:9>
|   | | |   `-IfStmt 0x1edde1d01f8 <line:1792:13, line:1793:24>
|   | | |     |-OpaqueValueExpr 0x1edde1d01e0 <<invalid sloc>> '_Bool'
|   | | |     `-ReturnStmt 0x1edde1d01d0 <col:17, col:24>
|   | | |       `-IntegerLiteral 0x1edde1d01a8 <col:24> 'int' 0
|   | | `-ReturnStmt 0x1edde1d02f0 <line:1796:9, col:16>
|   | |   `-IntegerLiteral 0x1edde1d02c8 <col:16> 'int' 1
|   | `-IfStmt 0x1edde1d03b8 <line:1797:12, line:1798:17>
|   |   |-OpaqueValueExpr 0x1edde1d03a0 <<invalid sloc>> '_Bool'
|   |   `-ReturnStmt 0x1edde1d0390 <col:9, col:17>
|   |     `-UnaryOperator 0x1edde1d0378 <col:16, col:17> 'int' prefix '-'
|   |       `-IntegerLiteral 0x1edde1d0350 <col:17> 'int' 1
|   `-ReturnStmt 0x1edde1d05b8 <line:1802:5, col:12>
|     `-IntegerLiteral 0x1edde1d0590 <col:12> 'int' 1
|-FunctionDecl 0x1edde26bfe0 <line:1805:1, line:1903:1> line:1805:12 invalid aes_xts_init_key 'int (int *, const unsigned char *, const unsigned char *, int)' static
| |-ParmVarDecl 0x1edde1d0608 <col:29, col:45> col:45 invalid ctx 'int *'
| |-ParmVarDecl 0x1edde1d0688 <col:50, col:71> col:71 used key 'const unsigned char *'
| |-ParmVarDecl 0x1edde1d0708 <line:1806:29, col:50> col:50 used iv 'const unsigned char *'
| |-ParmVarDecl 0x1edde1d0788 <col:54, col:58> col:58 used enc 'int'
| `-CompoundStmt 0x1edde26cad0 <line:1807:1, line:1903:1>
|   |-DeclStmt 0x1edde26c150 <line:1808:5, col:60>
|   | `-VarDecl 0x1edde26c0c8 <col:5, col:22> col:22 used xctx 'EVP_AES_XTS_CTX *'
|   |-IfStmt 0x1edde26c290 <line:1809:5, line:1810:16>
|   | |-BinaryOperator 0x1edde26c238 <line:1809:9, col:17> 'int' '&&'
|   | | |-UnaryOperator 0x1edde26c1b8 <col:9, col:10> 'int' prefix '!' cannot overflow
|   | | | `-ImplicitCastExpr 0x1edde26c1a0 <col:10> 'const unsigned char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1edde26c168 <col:10> 'const unsigned char *' lvalue ParmVar 0x1edde1d0708 'iv' 'const unsigned char *'
|   | | `-UnaryOperator 0x1edde26c220 <col:16, col:17> 'int' prefix '!' cannot overflow
|   | |   `-ImplicitCastExpr 0x1edde26c208 <col:17> 'const unsigned char *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x1edde26c1d0 <col:17> 'const unsigned char *' lvalue ParmVar 0x1edde1d0688 'key' 'const unsigned char *'
|   | `-ReturnStmt 0x1edde26c280 <line:1810:9, col:16>
|   |   `-IntegerLiteral 0x1edde26c258 <col:16> 'int' 1
|   |-IfStmt 0x1edde26c928 <line:1812:5, line:1895:19>
|   | |-ImplicitCastExpr 0x1edde26c2c8 <line:1812:9> 'const unsigned char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1edde26c2a8 <col:9> 'const unsigned char *' lvalue ParmVar 0x1edde1d0688 'key' 'const unsigned char *'
|   | `-DoStmt 0x1edde26c908 <line:1813:9, line:1895:19>
|   |   |-CompoundStmt 0x1edde26c8b8 <line:1813:12, line:1895:9>
|   |   | |-BinaryOperator 0x1edde26c400 <line:1817:13, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'void (*)(const unsigned char *, unsigned char *, size_t, const int *, const int *, const unsigned char *)' '='
|   |   | | |-MemberExpr 0x1edde26c330 <.//openssl//file_jk/before\crypto\evp\e_aes.c:1817:13, col:19> 'void (*)(const unsigned char *, unsigned char *, size_t, const int *, const int *, const unsigned char *)' lvalue ->stream 0x1edde215298
|   |   | | | `-ImplicitCastExpr 0x1edde26c318 <col:13> 'EVP_AES_XTS_CTX *' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x1edde26c2e0 <col:13> 'EVP_AES_XTS_CTX *' lvalue Var 0x1edde26c0c8 'xctx' 'EVP_AES_XTS_CTX *'
|   |   | | `-ImplicitCastExpr 0x1edde26c3e8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'void (*)(const unsigned char *, unsigned char *, size_t, const int *, const int *, const unsigned char *)' <NullToPointer>
|   |   | |   `-ParenExpr 0x1edde26c3c8 <col:17, col:27> 'void *'
|   |   | |     `-CStyleCastExpr 0x1edde26c3a0 <col:18, col:26> 'void *' <NullToPointer>
|   |   | |       `-IntegerLiteral 0x1edde26c360 <col:26> 'int' 0
|   |   | |-CStyleCastExpr 0x1edde26c458 <.//openssl//file_jk/before\crypto\evp\e_aes.c:1877:17, col:23> 'void' <ToVoid>
|   |   | | `-IntegerLiteral 0x1edde26c420 <col:23> 'int' 0
|   |   | `-IfStmt 0x1edde26c6e0 <line:1879:13, line:1887:13> has_else
|   |   |   |-ImplicitCastExpr 0x1edde26c4b8 <line:1879:17> 'int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x1edde26c480 <col:17> 'int' lvalue ParmVar 0x1edde1d0788 'enc' 'int'
|   |   |   |-CompoundStmt 0x1edde26c5c8 <col:22, line:1883:13>
|   |   |   `-CompoundStmt 0x1edde26c6d0 <col:20, line:1887:13>
|   |   `-IntegerLiteral 0x1edde26c8e0 <line:1895:18> 'int' 0
|   |-IfStmt 0x1edde26ca80 <line:1897:5, line:1900:5>
|   | |-ImplicitCastExpr 0x1edde26c960 <line:1897:9> 'const unsigned char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1edde26c940 <col:9> 'const unsigned char *' lvalue ParmVar 0x1edde1d0708 'iv' 'const unsigned char *'
|   | `-CompoundStmt 0x1edde26ca70 <col:13, line:1900:5>
|   `-ReturnStmt 0x1edde26cac0 <line:1902:5, col:12>
|     `-IntegerLiteral 0x1edde26ca98 <col:12> 'int' 1
|-FunctionDecl 0x1edde26cd48 <line:1905:1, line:1922:1> line:1905:12 invalid aes_xts_cipher 'int (int *, unsigned char *, const unsigned char *, size_t)' static
| |-ParmVarDecl 0x1edde26cb20 <col:27, col:43> col:43 invalid ctx 'int *'
| |-ParmVarDecl 0x1edde26cba0 <col:48, col:63> col:63 used out 'unsigned char *'
| |-ParmVarDecl 0x1edde26cc20 <line:1906:27, col:48> col:48 used in 'const unsigned char *'
| |-ParmVarDecl 0x1edde26cc98 <col:52, col:59> col:59 used len 'size_t':'unsigned long long'
| `-CompoundStmt 0x1edde26b620 <line:1907:1, line:1922:1>
|   |-DeclStmt 0x1edde26ceb8 <line:1908:5, col:60>
|   | `-VarDecl 0x1edde26ce30 <col:5, col:22> col:22 used xctx 'EVP_AES_XTS_CTX *'
|   |-IfStmt 0x1edde26cfa8 <line:1909:5, line:1910:16>
|   | |-OpaqueValueExpr 0x1edde26cf90 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1edde26cf80 <col:9, col:16>
|   |   `-IntegerLiteral 0x1edde26cf58 <col:16> 'int' 0
|   |-IfStmt 0x1edde26b128 <line:1911:5, line:1912:16>
|   | |-OpaqueValueExpr 0x1edde26b110 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1edde26b100 <col:9, col:16>
|   |   `-IntegerLiteral 0x1edde26b0d8 <col:16> 'int' 0
|   |-IfStmt 0x1edde26b5c0 <line:1913:5, line:1920:16> has_else
|   | |-ImplicitCastExpr 0x1edde26b1a8 <line:1913:9, col:15> 'void (*)(const unsigned char *, unsigned char *, size_t, const int *, const int *, const unsigned char *)' <LValueToRValue>
|   | | `-MemberExpr 0x1edde26b178 <col:9, col:15> 'void (*)(const unsigned char *, unsigned char *, size_t, const int *, const int *, const unsigned char *)' lvalue ->stream 0x1edde215298
|   | |   `-ImplicitCastExpr 0x1edde26b160 <col:9> 'EVP_AES_XTS_CTX *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x1edde26b140 <col:9> 'EVP_AES_XTS_CTX *' lvalue Var 0x1edde26ce30 'xctx' 'EVP_AES_XTS_CTX *'
|   | |-NullStmt 0x1edde26b5b8 <line:1914:9>
|   | `-IfStmt 0x1edde26b5a0 <line:1917:10, line:1920:16>
|   |   |-OpaqueValueExpr 0x1edde26b588 <<invalid sloc>> '_Bool'
|   |   `-ReturnStmt 0x1edde26b578 <col:9, col:16>
|   |     `-IntegerLiteral 0x1edde26b550 <col:16> 'int' 0
|   `-ReturnStmt 0x1edde26b610 <line:1921:5, col:12>
|     `-IntegerLiteral 0x1edde26b5e8 <col:12> 'int' 1
|-VarDecl 0x1edde26b670 <line:967:74, <scratch space>:117:1> col:1 invalid aes_128_xts 'const int' static
|-FunctionDecl 0x1edde26bab8 <.//openssl//file_jk/before\crypto\evp\e_aes.c:976:45, line:978:34> <scratch space>:138:1 invalid EVP_aes_128_xts 'const int *(void)'
| `-CompoundStmt 0x1edde26bb70 <.//openssl//file_jk/before\crypto\evp\e_aes.c:977:51, line:978:34>
|-VarDecl 0x1edde26bb98 <line:967:74, <scratch space>:144:1> col:1 invalid aes_256_xts 'const int' static
|-FunctionDecl 0x1edde26d018 <.//openssl//file_jk/before\crypto\evp\e_aes.c:976:45, line:978:34> <scratch space>:165:1 invalid EVP_aes_256_xts 'const int *(void)'
| `-CompoundStmt 0x1edde26d0d0 <.//openssl//file_jk/before\crypto\evp\e_aes.c:977:51, line:978:34>
|-FunctionDecl 0x1edde26d328 <line:1933:1, line:2028:1> line:1933:12 invalid aes_ccm_ctrl 'int (int *, int, int, void *)' static
| |-ParmVarDecl 0x1edde26d0f8 <col:25, col:41> col:41 invalid c 'int *'
| |-ParmVarDecl 0x1edde26d178 <col:44, col:48> col:48 used type 'int'
| |-ParmVarDecl 0x1edde26d1f8 <col:54, col:58> col:58 used arg 'int'
| |-ParmVarDecl 0x1edde26d278 <col:63, col:69> col:69 used ptr 'void *'
| `-CompoundStmt 0x1edde26f548 <line:1934:1, line:2028:1>
|   |-DeclStmt 0x1edde26d510 <line:1935:5, col:58>
|   | `-VarDecl 0x1edde26d488 <col:5, col:22> col:22 used cctx 'EVP_AES_CCM_CTX *'
|   `-SwitchStmt 0x1edde26d578 <line:1936:5, line:2027:5>
|     |-ImplicitCastExpr 0x1edde26d560 <line:1936:13> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x1edde26d528 <col:13> 'int' lvalue ParmVar 0x1edde26d178 'type' 'int'
|     `-CompoundStmt 0x1edde26f440 <col:19, line:2027:5>
|       |-BinaryOperator 0x1edde26d640 <line:1938:9, col:25> 'int' '='
|       | |-MemberExpr 0x1edde26d5e8 <col:9, col:15> 'int' lvalue ->key_set 0x1edde2156d8
|       | | `-ImplicitCastExpr 0x1edde26d5d0 <col:9> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1edde26d598 <col:9> 'EVP_AES_CCM_CTX *' lvalue Var 0x1edde26d488 'cctx' 'EVP_AES_CCM_CTX *'
|       | `-IntegerLiteral 0x1edde26d618 <col:25> 'int' 0
|       |-BinaryOperator 0x1edde26d6f0 <line:1939:9, col:24> 'int' '='
|       | |-MemberExpr 0x1edde26d698 <col:9, col:15> 'int' lvalue ->iv_set 0x1edde215748
|       | | `-ImplicitCastExpr 0x1edde26d680 <col:9> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1edde26d660 <col:9> 'EVP_AES_CCM_CTX *' lvalue Var 0x1edde26d488 'cctx' 'EVP_AES_CCM_CTX *'
|       | `-IntegerLiteral 0x1edde26d6c8 <col:24> 'int' 0
|       |-BinaryOperator 0x1edde26d7a0 <line:1940:9, col:19> 'int' '='
|       | |-MemberExpr 0x1edde26d748 <col:9, col:15> 'int' lvalue ->L 0x1edde215898
|       | | `-ImplicitCastExpr 0x1edde26d730 <col:9> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1edde26d710 <col:9> 'EVP_AES_CCM_CTX *' lvalue Var 0x1edde26d488 'cctx' 'EVP_AES_CCM_CTX *'
|       | `-IntegerLiteral 0x1edde26d778 <col:19> 'int' 8
|       |-BinaryOperator 0x1edde26d850 <line:1941:9, col:19> 'int' '='
|       | |-MemberExpr 0x1edde26d7f8 <col:9, col:15> 'int' lvalue ->M 0x1edde215908
|       | | `-ImplicitCastExpr 0x1edde26d7e0 <col:9> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1edde26d7c0 <col:9> 'EVP_AES_CCM_CTX *' lvalue Var 0x1edde26d488 'cctx' 'EVP_AES_CCM_CTX *'
|       | `-IntegerLiteral 0x1edde26d828 <col:19> 'int' 12
|       |-BinaryOperator 0x1edde26d900 <line:1942:9, col:25> 'int' '='
|       | |-MemberExpr 0x1edde26d8a8 <col:9, col:15> 'int' lvalue ->tag_set 0x1edde2157b8
|       | | `-ImplicitCastExpr 0x1edde26d890 <col:9> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1edde26d870 <col:9> 'EVP_AES_CCM_CTX *' lvalue Var 0x1edde26d488 'cctx' 'EVP_AES_CCM_CTX *'
|       | `-IntegerLiteral 0x1edde26d8d8 <col:25> 'int' 0
|       |-BinaryOperator 0x1edde26d9b0 <line:1943:9, col:25> 'int' '='
|       | |-MemberExpr 0x1edde26d958 <col:9, col:15> 'int' lvalue ->len_set 0x1edde215828
|       | | `-ImplicitCastExpr 0x1edde26d940 <col:9> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1edde26d920 <col:9> 'EVP_AES_CCM_CTX *' lvalue Var 0x1edde26d488 'cctx' 'EVP_AES_CCM_CTX *'
|       | `-IntegerLiteral 0x1edde26d988 <col:25> 'int' 0
|       |-BinaryOperator 0x1edde26da78 <line:1944:9, col:30> 'int' '='
|       | |-MemberExpr 0x1edde26da08 <col:9, col:15> 'int' lvalue ->tls_aad_len 0x1edde215978
|       | | `-ImplicitCastExpr 0x1edde26d9f0 <col:9> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1edde26d9d0 <col:9> 'EVP_AES_CCM_CTX *' lvalue Var 0x1edde26d488 'cctx' 'EVP_AES_CCM_CTX *'
|       | `-UnaryOperator 0x1edde26da60 <col:29, col:30> 'int' prefix '-'
|       |   `-IntegerLiteral 0x1edde26da38 <col:30> 'int' 1
|       |-ReturnStmt 0x1edde26dac0 <line:1945:9, col:16>
|       | `-IntegerLiteral 0x1edde26da98 <col:16> 'int' 1
|       |-IfStmt 0x1edde26db58 <line:1949:9, line:1950:20>
|       | |-OpaqueValueExpr 0x1edde26db40 <<invalid sloc>> '_Bool'
|       | `-ReturnStmt 0x1edde26db30 <col:13, col:20>
|       |   `-IntegerLiteral 0x1edde26db08 <col:20> 'int' 0
|       |-BinaryOperator 0x1edde26dca8 <line:1952:9, col:29> 'int' '='
|       | |-MemberExpr 0x1edde26dc40 <col:9, col:15> 'int' lvalue ->tls_aad_len 0x1edde215978
|       | | `-ImplicitCastExpr 0x1edde26dc28 <col:9> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1edde26dc08 <col:9> 'EVP_AES_CCM_CTX *' lvalue Var 0x1edde26d488 'cctx' 'EVP_AES_CCM_CTX *'
|       | `-ImplicitCastExpr 0x1edde26dc90 <col:29> 'int' <LValueToRValue>
|       |   `-DeclRefExpr 0x1edde26dc70 <col:29> 'int' lvalue ParmVar 0x1edde26d1f8 'arg' 'int'
|       |-CompoundStmt 0x1edde26e088 <line:1953:9, line:1969:9>
|       | |-IfStmt 0x1edde26dd18 <line:1958:13, line:1959:24>
|       | | |-OpaqueValueExpr 0x1edde26dd00 <<invalid sloc>> '_Bool'
|       | | `-ReturnStmt 0x1edde26dcf0 <col:17, col:24>
|       | |   `-IntegerLiteral 0x1edde26dcc8 <col:24> 'int' 0
|       | `-IfStmt 0x1edde26deb8 <line:1962:13, line:1966:13>
|       |   |-OpaqueValueExpr 0x1edde26dea0 <<invalid sloc>> '_Bool'
|       |   `-CompoundStmt 0x1edde26de88 <line:1962:48, line:1966:13>
|       |     `-IfStmt 0x1edde26de08 <line:1963:17, line:1964:28>
|       |       |-OpaqueValueExpr 0x1edde26ddf0 <<invalid sloc>> '_Bool'
|       |       `-ReturnStmt 0x1edde26dde0 <col:21, col:28>
|       |         `-IntegerLiteral 0x1edde26ddb8 <col:28> 'int' 0
|       |-ReturnStmt 0x1edde26e128 <line:1971:9, col:22>
|       | `-ImplicitCastExpr 0x1edde26e110 <col:16, col:22> 'int' <LValueToRValue>
|       |   `-MemberExpr 0x1edde26e0e0 <col:16, col:22> 'int' lvalue ->M 0x1edde215908
|       |     `-ImplicitCastExpr 0x1edde26e0c8 <col:16> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|       |       `-DeclRefExpr 0x1edde26e0a8 <col:16> 'EVP_AES_CCM_CTX *' lvalue Var 0x1edde26d488 'cctx' 'EVP_AES_CCM_CTX *'
|       |-IfStmt 0x1edde26e1a8 <line:1975:9, line:1976:20>
|       | |-OpaqueValueExpr 0x1edde26e190 <<invalid sloc>> '_Bool'
|       | `-ReturnStmt 0x1edde26e180 <col:13, col:20>
|       |   `-IntegerLiteral 0x1edde26e158 <col:20> 'int' 0
|       |-ReturnStmt 0x1edde26e268 <line:1979:9, col:16>
|       | `-IntegerLiteral 0x1edde26e240 <col:16> 'int' 1
|       |-BinaryOperator 0x1edde26e318 <line:1982:9, col:20> 'int' '='
|       | |-DeclRefExpr 0x1edde26e278 <col:9> 'int' lvalue ParmVar 0x1edde26d1f8 'arg' 'int'
|       | `-BinaryOperator 0x1edde26e2f8 <col:15, col:20> 'int' '-'
|       |   |-IntegerLiteral 0x1edde26e298 <col:15> 'int' 15
|       |   `-ImplicitCastExpr 0x1edde26e2e0 <col:20> 'int' <LValueToRValue>
|       |     `-DeclRefExpr 0x1edde26e2c0 <col:20> 'int' lvalue ParmVar 0x1edde26d1f8 'arg' 'int'
|       |-IfStmt 0x1edde26e490 <line:1985:9, line:1986:20>
|       | |-BinaryOperator 0x1edde26e438 <line:1985:13, col:30> 'int' '||'
|       | | |-BinaryOperator 0x1edde26e398 <col:13, col:19> 'int' '<'
|       | | | |-ImplicitCastExpr 0x1edde26e380 <col:13> 'int' <LValueToRValue>
|       | | | | `-DeclRefExpr 0x1edde26e338 <col:13> 'int' lvalue ParmVar 0x1edde26d1f8 'arg' 'int'
|       | | | `-IntegerLiteral 0x1edde26e358 <col:19> 'int' 2
|       | | `-BinaryOperator 0x1edde26e418 <col:24, col:30> 'int' '>'
|       | |   |-ImplicitCastExpr 0x1edde26e400 <col:24> 'int' <LValueToRValue>
|       | |   | `-DeclRefExpr 0x1edde26e3b8 <col:24> 'int' lvalue ParmVar 0x1edde26d1f8 'arg' 'int'
|       | |   `-IntegerLiteral 0x1edde26e3d8 <col:30> 'int' 8
|       | `-ReturnStmt 0x1edde26e480 <line:1986:13, col:20>
|       |   `-IntegerLiteral 0x1edde26e458 <col:20> 'int' 0
|       |-BinaryOperator 0x1edde26e548 <line:1987:9, col:19> 'int' '='
|       | |-MemberExpr 0x1edde26e4e0 <col:9, col:15> 'int' lvalue ->L 0x1edde215898
|       | | `-ImplicitCastExpr 0x1edde26e4c8 <col:9> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1edde26e4a8 <col:9> 'EVP_AES_CCM_CTX *' lvalue Var 0x1edde26d488 'cctx' 'EVP_AES_CCM_CTX *'
|       | `-ImplicitCastExpr 0x1edde26e530 <col:19> 'int' <LValueToRValue>
|       |   `-DeclRefExpr 0x1edde26e510 <col:19> 'int' lvalue ParmVar 0x1edde26d1f8 'arg' 'int'
|       |-ReturnStmt 0x1edde26e590 <line:1988:9, col:16>
|       | `-IntegerLiteral 0x1edde26e568 <col:16> 'int' 1
|       |-IfStmt 0x1edde26e7b8 <line:1991:9, line:1992:20>
|       | |-BinaryOperator 0x1edde26e760 <line:1991:13, col:43> 'int' '||'
|       | | |-BinaryOperator 0x1edde26e6c0 <col:13, col:32> 'int' '||'
|       | | | |-ParenExpr 0x1edde26e620 <col:13, col:21> 'int'
|       | | | | `-BinaryOperator 0x1edde26e600 <col:14, col:20> 'int' '&'
|       | | | |   |-ImplicitCastExpr 0x1edde26e5e8 <col:14> 'int' <LValueToRValue>
|       | | | |   | `-DeclRefExpr 0x1edde26e5a0 <col:14> 'int' lvalue ParmVar 0x1edde26d1f8 'arg' 'int'
|       | | | |   `-IntegerLiteral 0x1edde26e5c0 <col:20> 'int' 1
|       | | | `-BinaryOperator 0x1edde26e6a0 <col:26, col:32> 'int' '<'
|       | | |   |-ImplicitCastExpr 0x1edde26e688 <col:26> 'int' <LValueToRValue>
|       | | |   | `-DeclRefExpr 0x1edde26e640 <col:26> 'int' lvalue ParmVar 0x1edde26d1f8 'arg' 'int'
|       | | |   `-IntegerLiteral 0x1edde26e660 <col:32> 'int' 4
|       | | `-BinaryOperator 0x1edde26e740 <col:37, col:43> 'int' '>'
|       | |   |-ImplicitCastExpr 0x1edde26e728 <col:37> 'int' <LValueToRValue>
|       | |   | `-DeclRefExpr 0x1edde26e6e0 <col:37> 'int' lvalue ParmVar 0x1edde26d1f8 'arg' 'int'
|       | |   `-IntegerLiteral 0x1edde26e700 <col:43> 'int' 16
|       | `-ReturnStmt 0x1edde26e7a8 <line:1992:13, col:20>
|       |   `-IntegerLiteral 0x1edde26e780 <col:20> 'int' 0
|       |-IfStmt 0x1edde26e860 <line:1993:9, line:1994:20>
|       | |-OpaqueValueExpr 0x1edde26e848 <<invalid sloc>> '_Bool'
|       | `-ReturnStmt 0x1edde26e838 <col:13, col:20>
|       |   `-IntegerLiteral 0x1edde26e810 <col:20> 'int' 0
|       |-IfStmt 0x1edde26e9f8 <line:1995:9, line:1998:9>
|       | |-ImplicitCastExpr 0x1edde26e898 <line:1995:13> 'void *' <LValueToRValue>
|       | | `-DeclRefExpr 0x1edde26e878 <col:13> 'void *' lvalue ParmVar 0x1edde26d278 'ptr' 'void *'
|       | `-CompoundStmt 0x1edde26e9e0 <col:18, line:1998:9>
|       |   `-BinaryOperator 0x1edde26e940 <line:1996:13, col:29> 'int' '='
|       |     |-MemberExpr 0x1edde26e8e8 <col:13, col:19> 'int' lvalue ->tag_set 0x1edde2157b8
|       |     | `-ImplicitCastExpr 0x1edde26e8d0 <col:13> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|       |     |   `-DeclRefExpr 0x1edde26e8b0 <col:13> 'EVP_AES_CCM_CTX *' lvalue Var 0x1edde26d488 'cctx' 'EVP_AES_CCM_CTX *'
|       |     `-IntegerLiteral 0x1edde26e918 <col:29> 'int' 1
|       |-BinaryOperator 0x1edde26eab0 <line:1999:9, col:19> 'int' '='
|       | |-MemberExpr 0x1edde26ea48 <col:9, col:15> 'int' lvalue ->M 0x1edde215908
|       | | `-ImplicitCastExpr 0x1edde26ea30 <col:9> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1edde26ea10 <col:9> 'EVP_AES_CCM_CTX *' lvalue Var 0x1edde26d488 'cctx' 'EVP_AES_CCM_CTX *'
|       | `-ImplicitCastExpr 0x1edde26ea98 <col:19> 'int' <LValueToRValue>
|       |   `-DeclRefExpr 0x1edde26ea78 <col:19> 'int' lvalue ParmVar 0x1edde26d1f8 'arg' 'int'
|       |-ReturnStmt 0x1edde26eaf8 <line:2000:9, col:16>
|       | `-IntegerLiteral 0x1edde26ead0 <col:16> 'int' 1
|       |-IfStmt 0x1edde26ec10 <line:2003:9, line:2004:20>
|       | |-OpaqueValueExpr 0x1edde26ebf8 <<invalid sloc>> '_Bool'
|       | `-ReturnStmt 0x1edde26ebe8 <col:13, col:20>
|       |   `-IntegerLiteral 0x1edde26ebc0 <col:20> 'int' 0
|       |-IfStmt 0x1edde26ee50 <line:2005:9, line:2006:20>
|       | |-OpaqueValueExpr 0x1edde26ee38 <<invalid sloc>> '_Bool'
|       | `-ReturnStmt 0x1edde26ee28 <col:13, col:20>
|       |   `-IntegerLiteral 0x1edde26ee00 <col:20> 'int' 0
|       |-BinaryOperator 0x1edde26eef8 <line:2007:9, col:25> 'int' '='
|       | |-MemberExpr 0x1edde26eea0 <col:9, col:15> 'int' lvalue ->tag_set 0x1edde2157b8
|       | | `-ImplicitCastExpr 0x1edde26ee88 <col:9> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1edde26ee68 <col:9> 'EVP_AES_CCM_CTX *' lvalue Var 0x1edde26d488 'cctx' 'EVP_AES_CCM_CTX *'
|       | `-IntegerLiteral 0x1edde26eed0 <col:25> 'int' 0
|       |-BinaryOperator 0x1edde26efa8 <line:2008:9, col:24> 'int' '='
|       | |-MemberExpr 0x1edde26ef50 <col:9, col:15> 'int' lvalue ->iv_set 0x1edde215748
|       | | `-ImplicitCastExpr 0x1edde26ef38 <col:9> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1edde26ef18 <col:9> 'EVP_AES_CCM_CTX *' lvalue Var 0x1edde26d488 'cctx' 'EVP_AES_CCM_CTX *'
|       | `-IntegerLiteral 0x1edde26ef80 <col:24> 'int' 0
|       |-BinaryOperator 0x1edde26f068 <line:2009:9, col:25> 'int' '='
|       | |-MemberExpr 0x1edde26f010 <col:9, col:15> 'int' lvalue ->len_set 0x1edde215828
|       | | `-ImplicitCastExpr 0x1edde26efe8 <col:9> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1edde26efc8 <col:9> 'EVP_AES_CCM_CTX *' lvalue Var 0x1edde26d488 'cctx' 'EVP_AES_CCM_CTX *'
|       | `-IntegerLiteral 0x1edde26f040 <col:25> 'int' 0
|       |-ReturnStmt 0x1edde26f0b0 <line:2010:9, col:16>
|       | `-IntegerLiteral 0x1edde26f088 <col:16> 'int' 1
|       |-CompoundStmt 0x1edde26f3a8 <line:2013:9, line:2022:9>
|       | |-DeclStmt 0x1edde26f178 <line:2015:13, col:72>
|       | | `-VarDecl 0x1edde26f0f0 <col:13, col:30> col:30 used cctx_out 'EVP_AES_CCM_CTX *'
|       | |-IfStmt 0x1edde26f358 <line:2016:13, line:2020:13>
|       | | |-OpaqueValueExpr 0x1edde26f340 <<invalid sloc>> '_Bool'
|       | | `-CompoundStmt 0x1edde26f328 <line:2016:32, line:2020:13>
|       | |   `-IfStmt 0x1edde26f288 <line:2017:17, line:2018:28>
|       | |     |-OpaqueValueExpr 0x1edde26f270 <<invalid sloc>> '_Bool'
|       | |     `-ReturnStmt 0x1edde26f260 <col:21, col:28>
|       | |       `-IntegerLiteral 0x1edde26f238 <col:28> 'int' 0
|       | `-ReturnStmt 0x1edde26f398 <line:2021:13, col:20>
|       |   `-IntegerLiteral 0x1edde26f370 <col:20> 'int' 1
|       `-DefaultStmt 0x1edde26f420 <line:2024:5, line:2025:17>
|         `-ReturnStmt 0x1edde26f410 <col:9, col:17>
|           `-UnaryOperator 0x1edde26f3f8 <col:16, col:17> 'int' prefix '-'
|             `-IntegerLiteral 0x1edde26f3d0 <col:17> 'int' 1
|-FunctionDecl 0x1edde26f7b0 <line:2030:1, line:2073:1> line:2030:12 invalid aes_ccm_init_key 'int (int *, const unsigned char *, const unsigned char *, int)' static
| |-ParmVarDecl 0x1edde26f580 <col:29, col:45> col:45 invalid ctx 'int *'
| |-ParmVarDecl 0x1edde26f600 <col:50, col:71> col:71 used key 'const unsigned char *'
| |-ParmVarDecl 0x1edde26f680 <line:2031:29, col:50> col:50 used iv 'const unsigned char *'
| |-ParmVarDecl 0x1edde26f700 <col:54, col:58> col:58 enc 'int'
| `-CompoundStmt 0x1edde2681e0 <line:2032:1, line:2073:1>
|   |-DeclStmt 0x1edde26f920 <line:2033:5, col:60>
|   | `-VarDecl 0x1edde26f898 <col:5, col:22> col:22 used cctx 'EVP_AES_CCM_CTX *'
|   |-IfStmt 0x1edde26fa60 <line:2034:5, line:2035:16>
|   | |-BinaryOperator 0x1edde26fa08 <line:2034:9, col:17> 'int' '&&'
|   | | |-UnaryOperator 0x1edde26f988 <col:9, col:10> 'int' prefix '!' cannot overflow
|   | | | `-ImplicitCastExpr 0x1edde26f970 <col:10> 'const unsigned char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1edde26f938 <col:10> 'const unsigned char *' lvalue ParmVar 0x1edde26f680 'iv' 'const unsigned char *'
|   | | `-UnaryOperator 0x1edde26f9f0 <col:16, col:17> 'int' prefix '!' cannot overflow
|   | |   `-ImplicitCastExpr 0x1edde26f9d8 <col:17> 'const unsigned char *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x1edde26f9a0 <col:17> 'const unsigned char *' lvalue ParmVar 0x1edde26f600 'key' 'const unsigned char *'
|   | `-ReturnStmt 0x1edde26fa50 <line:2035:9, col:16>
|   |   `-IntegerLiteral 0x1edde26fa28 <col:16> 'int' 1
|   |-IfStmt 0x1edde26ffa8 <line:2036:5, line:2067:19>
|   | |-ImplicitCastExpr 0x1edde26fa98 <line:2036:9> 'const unsigned char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1edde26fa78 <col:9> 'const unsigned char *' lvalue ParmVar 0x1edde26f600 'key' 'const unsigned char *'
|   | `-DoStmt 0x1edde26ff88 <line:2037:9, line:2067:19>
|   |   |-CompoundStmt 0x1edde26ff48 <line:2037:12, line:2067:9>
|   |   | `-BinaryOperator 0x1edde26ff28 <line:2066:13, col:29> 'int' '='
|   |   |   |-MemberExpr 0x1edde26fed0 <col:13, col:19> 'int' lvalue ->key_set 0x1edde2156d8
|   |   |   | `-ImplicitCastExpr 0x1edde26feb8 <col:13> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x1edde26fe98 <col:13> 'EVP_AES_CCM_CTX *' lvalue Var 0x1edde26f898 'cctx' 'EVP_AES_CCM_CTX *'
|   |   |   `-IntegerLiteral 0x1edde26ff00 <col:29> 'int' 1
|   |   `-IntegerLiteral 0x1edde26ff60 <line:2067:18> 'int' 0
|   |-IfStmt 0x1edde268190 <line:2068:5, line:2071:5>
|   | |-ImplicitCastExpr 0x1edde26ffe0 <line:2068:9> 'const unsigned char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1edde26ffc0 <col:9> 'const unsigned char *' lvalue ParmVar 0x1edde26f680 'iv' 'const unsigned char *'
|   | `-CompoundStmt 0x1edde268178 <col:13, line:2071:5>
|   |   `-BinaryOperator 0x1edde268158 <line:2070:9, col:24> 'int' '='
|   |     |-MemberExpr 0x1edde268100 <col:9, col:15> 'int' lvalue ->iv_set 0x1edde215748
|   |     | `-ImplicitCastExpr 0x1edde2680e8 <col:9> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x1edde2680c8 <col:9> 'EVP_AES_CCM_CTX *' lvalue Var 0x1edde26f898 'cctx' 'EVP_AES_CCM_CTX *'
|   |     `-IntegerLiteral 0x1edde268130 <col:24> 'int' 1
|   `-ReturnStmt 0x1edde2681d0 <line:2072:5, col:12>
|     `-IntegerLiteral 0x1edde2681a8 <col:12> 'int' 1
|-FunctionDecl 0x1edde268458 <line:2075:1, line:2121:1> line:2075:12 invalid aes_ccm_tls_cipher 'int (int *, unsigned char *, const unsigned char *, size_t)' static
| |-ParmVarDecl 0x1edde268230 <col:31, col:47> col:47 invalid ctx 'int *'
| |-ParmVarDecl 0x1edde2682b0 <col:52, col:67> col:67 used out 'unsigned char *'
| |-ParmVarDecl 0x1edde268330 <line:2076:31, col:52> col:52 used in 'const unsigned char *'
| |-ParmVarDecl 0x1edde2683a8 <col:56, col:63> col:63 used len 'size_t':'unsigned long long'
| `-CompoundStmt 0x1edde270e70 <line:2077:1, line:2121:1>
|   |-DeclStmt 0x1edde2685c8 <line:2078:5, col:60>
|   | `-VarDecl 0x1edde268540 <col:5, col:22> col:22 used cctx 'EVP_AES_CCM_CTX *'
|   |-IfStmt 0x1edde268860 <line:2081:5, line:2082:17>
|   | |-OpaqueValueExpr 0x1edde268848 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1edde268838 <col:9, col:17>
|   |   `-UnaryOperator 0x1edde268820 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x1edde2687f8 <col:17> 'int' 1
|   |-IfStmt 0x1edde268c60 <line:2092:5, line:2094:21>
|   | |-OpaqueValueExpr 0x1edde268c48 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1edde268c38 <col:13, col:21>
|   |   `-UnaryOperator 0x1edde268c20 <col:20, col:21> 'int' prefix '-'
|   |     `-IntegerLiteral 0x1edde268bf8 <col:21> 'int' 1
|   `-IfStmt 0x1edde270e48 <line:2100:5, line:2120:5> has_else
|     |-OpaqueValueExpr 0x1edde270e30 <<invalid sloc>> '_Bool'
|     |-CompoundStmt 0x1edde2704e8 <line:2100:41, line:2108:5>
|     | |-IfStmt 0x1edde2702b0 <line:2101:9, line:2104:21>
|     | | |-OpaqueValueExpr 0x1edde270298 <<invalid sloc>> '_Bool'
|     | | `-ReturnStmt 0x1edde270288 <col:13, col:21>
|     | |   `-UnaryOperator 0x1edde270270 <col:20, col:21> 'int' prefix '-'
|     | |     `-IntegerLiteral 0x1edde270248 <col:21> 'int' 1
|     | `-IfStmt 0x1edde270448 <line:2105:9, line:2106:21>
|     |   |-OpaqueValueExpr 0x1edde270430 <<invalid sloc>> '_Bool'
|     |   `-ReturnStmt 0x1edde270420 <col:13, col:21>
|     |     `-UnaryOperator 0x1edde270408 <col:20, col:21> 'int' prefix '-'
|     |       `-IntegerLiteral 0x1edde2703e0 <col:21> 'int' 1
|     `-CompoundStmt 0x1edde270e08 <line:2108:12, line:2120:5>
|       |-IfStmt 0x1edde270cc8 <line:2109:9, line:2117:9>
|       | |-OpaqueValueExpr 0x1edde270cb0 <<invalid sloc>> '_Bool'
|       | `-CompoundStmt 0x1edde270c90 <line:2111:56, line:2117:9>
|       |   |-DeclStmt 0x1edde270928 <line:2112:13, col:34>
|       |   | `-VarDecl 0x1edde2708c0 <col:13, col:33> col:27 used tag 'unsigned char [16]'
|       |   `-IfStmt 0x1edde270c78 <line:2113:13, line:2116:13>
|       |     |-OpaqueValueExpr 0x1edde270c60 <<invalid sloc>> '_Bool'
|       |     `-CompoundStmt 0x1edde270c48 <line:2113:55, line:2116:13>
|       |       `-IfStmt 0x1edde270c30 <line:2114:17, line:2115:28>
|       |         |-UnaryOperator 0x1edde270bb8 <line:2114:21, col:58> 'int' prefix '!' cannot overflow
|       |         | `-CallExpr 0x1edde270b50 <col:22, col:58> 'int'
|       |         |   |-ImplicitCastExpr 0x1edde270b38 <col:22> 'int (*)()' <FunctionToPointerDecay>
|       |         |   | `-DeclRefExpr 0x1edde270a00 <col:22> 'int ()' Function 0x1edde1cd2c0 'CRYPTO_memcmp' 'int ()'
|       |         |   |-ImplicitCastExpr 0x1edde270b88 <col:36> 'unsigned char *' <ArrayToPointerDecay>
|       |         |   | `-DeclRefExpr 0x1edde270a20 <col:36> 'unsigned char [16]' lvalue Var 0x1edde2708c0 'tag' 'unsigned char [16]'
|       |         |   |-BinaryOperator 0x1edde270ab0 <col:41, col:46> 'const unsigned char *' '+'
|       |         |   | |-ImplicitCastExpr 0x1edde270a80 <col:41> 'const unsigned char *' <LValueToRValue>
|       |         |   | | `-DeclRefExpr 0x1edde270a40 <col:41> 'const unsigned char *' lvalue ParmVar 0x1edde268330 'in' 'const unsigned char *'
|       |         |   | `-ImplicitCastExpr 0x1edde270a98 <col:46> 'size_t':'unsigned long long' <LValueToRValue>
|       |         |   |   `-DeclRefExpr 0x1edde270a60 <col:46> 'size_t':'unsigned long long' lvalue ParmVar 0x1edde2683a8 'len' 'size_t':'unsigned long long'
|       |         |   `-ImplicitCastExpr 0x1edde270ba0 <col:51, col:57> 'int' <LValueToRValue>
|       |         |     `-MemberExpr 0x1edde270b08 <col:51, col:57> 'int' lvalue ->M 0x1edde215908
|       |         |       `-ImplicitCastExpr 0x1edde270af0 <col:51> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|       |         |         `-DeclRefExpr 0x1edde270ad0 <col:51> 'EVP_AES_CCM_CTX *' lvalue Var 0x1edde268540 'cctx' 'EVP_AES_CCM_CTX *'
|       |         `-ReturnStmt 0x1edde270c20 <line:2115:21, col:28>
|       |           `-ImplicitCastExpr 0x1edde270c08 <col:28> 'int' <IntegralCast>
|       |             `-ImplicitCastExpr 0x1edde270bf0 <col:28> 'size_t':'unsigned long long' <LValueToRValue>
|       |               `-DeclRefExpr 0x1edde270bd0 <col:28> 'size_t':'unsigned long long' lvalue ParmVar 0x1edde2683a8 'len' 'size_t':'unsigned long long'
|       |-CallExpr 0x1edde270d58 <line:2118:9, col:33> 'int'
|       | |-ImplicitCastExpr 0x1edde270d40 <col:9> 'int (*)()' <FunctionToPointerDecay>
|       | | `-DeclRefExpr 0x1edde270ce0 <col:9> 'int ()' Function 0x1edde1c83a0 'OPENSSL_cleanse' 'int ()'
|       | |-ImplicitCastExpr 0x1edde270d88 <col:25> 'unsigned char *' <LValueToRValue>
|       | | `-DeclRefExpr 0x1edde270d00 <col:25> 'unsigned char *' lvalue ParmVar 0x1edde2682b0 'out' 'unsigned char *'
|       | `-ImplicitCastExpr 0x1edde270da0 <col:30> 'size_t':'unsigned long long' <LValueToRValue>
|       |   `-DeclRefExpr 0x1edde270d20 <col:30> 'size_t':'unsigned long long' lvalue ParmVar 0x1edde2683a8 'len' 'size_t':'unsigned long long'
|       `-ReturnStmt 0x1edde270df8 <line:2119:9, col:17>
|         `-UnaryOperator 0x1edde270de0 <col:16, col:17> 'int' prefix '-'
|           `-IntegerLiteral 0x1edde270db8 <col:17> 'int' 1
|-FunctionDecl 0x1edde269070 <line:2123:1, line:2190:1> line:2123:12 invalid aes_ccm_cipher 'int (int *, unsigned char *, const unsigned char *, size_t)' static
| |-ParmVarDecl 0x1edde270eb8 <col:27, col:43> col:43 invalid ctx 'int *'
| |-ParmVarDecl 0x1edde270f38 <col:48, col:63> col:63 used out 'unsigned char *'
| |-ParmVarDecl 0x1edde270fb8 <line:2124:27, col:48> col:48 used in 'const unsigned char *'
| |-ParmVarDecl 0x1edde268fc0 <col:52, col:59> col:59 used len 'size_t':'unsigned long long'
| `-CompoundStmt 0x1edde271f08 <line:2125:1, line:2190:1>
|   |-DeclStmt 0x1edde2691e0 <line:2126:5, col:60>
|   | `-VarDecl 0x1edde269158 <col:5, col:22> col:22 used cctx 'EVP_AES_CCM_CTX *'
|   |-IfStmt 0x1edde269330 <line:2129:5, line:2130:17>
|   | |-UnaryOperator 0x1edde2692c8 <line:2129:9, col:16> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x1edde2692b0 <col:10, col:16> 'int' <LValueToRValue>
|   | |   `-MemberExpr 0x1edde269280 <col:10, col:16> 'int' lvalue ->key_set 0x1edde2156d8
|   | |     `-ImplicitCastExpr 0x1edde269268 <col:10> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x1edde269248 <col:10> 'EVP_AES_CCM_CTX *' lvalue Var 0x1edde269158 'cctx' 'EVP_AES_CCM_CTX *'
|   | `-ReturnStmt 0x1edde269320 <line:2130:9, col:17>
|   |   `-UnaryOperator 0x1edde269308 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x1edde2692e0 <col:17> 'int' 1
|   |-IfStmt 0x1edde2695a0 <line:2135:5, line:2136:17>
|   | |-UnaryOperator 0x1edde269538 <line:2135:9, col:16> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x1edde269520 <col:10, col:16> 'int' <LValueToRValue>
|   | |   `-MemberExpr 0x1edde2694f0 <col:10, col:16> 'int' lvalue ->iv_set 0x1edde215748
|   | |     `-ImplicitCastExpr 0x1edde2694d8 <col:10> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x1edde2694b8 <col:10> 'EVP_AES_CCM_CTX *' lvalue Var 0x1edde269158 'cctx' 'EVP_AES_CCM_CTX *'
|   | `-ReturnStmt 0x1edde269590 <line:2136:9, col:17>
|   |   `-UnaryOperator 0x1edde269578 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x1edde269550 <col:17> 'int' 1
|   |-IfStmt 0x1edde2696d8 <line:2138:5, line:2139:17>
|   | |-OpaqueValueExpr 0x1edde2696c0 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1edde2696b0 <col:9, col:17>
|   |   `-UnaryOperator 0x1edde269698 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x1edde269670 <col:17> 'int' 1
|   |-IfStmt 0x1edde269cc8 <line:2140:5, line:2153:5>
|   | |-UnaryOperator 0x1edde269728 <line:2140:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x1edde269710 <col:10> 'unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1edde2696f0 <col:10> 'unsigned char *' lvalue ParmVar 0x1edde270f38 'out' 'unsigned char *'
|   | `-CompoundStmt 0x1edde269ca0 <col:15, line:2153:5>
|   |   |-IfStmt 0x1edde269a70 <line:2141:9, line:2147:9>
|   |   | |-UnaryOperator 0x1edde269778 <line:2141:13, col:14> 'int' prefix '!' cannot overflow
|   |   | | `-ImplicitCastExpr 0x1edde269760 <col:14> 'const unsigned char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1edde269740 <col:14> 'const unsigned char *' lvalue ParmVar 0x1edde270fb8 'in' 'const unsigned char *'
|   |   | `-CompoundStmt 0x1edde269a48 <col:18, line:2147:9>
|   |   |   |-IfStmt 0x1edde269920 <line:2142:13, line:2144:25>
|   |   |   | |-OpaqueValueExpr 0x1edde269908 <<invalid sloc>> '_Bool'
|   |   |   | `-ReturnStmt 0x1edde2698f8 <col:17, col:25>
|   |   |   |   `-UnaryOperator 0x1edde2698e0 <col:24, col:25> 'int' prefix '-'
|   |   |   |     `-IntegerLiteral 0x1edde2698b8 <col:25> 'int' 1
|   |   |   |-BinaryOperator 0x1edde2699c8 <line:2145:13, col:29> 'int' '='
|   |   |   | |-MemberExpr 0x1edde269970 <col:13, col:19> 'int' lvalue ->len_set 0x1edde215828
|   |   |   | | `-ImplicitCastExpr 0x1edde269958 <col:13> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x1edde269938 <col:13> 'EVP_AES_CCM_CTX *' lvalue Var 0x1edde269158 'cctx' 'EVP_AES_CCM_CTX *'
|   |   |   | `-IntegerLiteral 0x1edde2699a0 <col:29> 'int' 1
|   |   |   `-ReturnStmt 0x1edde269a38 <line:2146:13, col:20>
|   |   |     `-ImplicitCastExpr 0x1edde269a20 <col:20> 'int' <IntegralCast>
|   |   |       `-ImplicitCastExpr 0x1edde269a08 <col:20> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x1edde2699e8 <col:20> 'size_t':'unsigned long long' lvalue ParmVar 0x1edde268fc0 'len' 'size_t':'unsigned long long'
|   |   |-IfStmt 0x1edde269bc8 <line:2149:9, line:2150:21>
|   |   | |-BinaryOperator 0x1edde269b58 <line:2149:13, col:31> 'int' '&&'
|   |   | | |-UnaryOperator 0x1edde269b08 <col:13, col:20> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x1edde269af0 <col:14, col:20> 'int' <LValueToRValue>
|   |   | | |   `-MemberExpr 0x1edde269ac0 <col:14, col:20> 'int' lvalue ->len_set 0x1edde215828
|   |   | | |     `-ImplicitCastExpr 0x1edde269aa8 <col:14> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|   |   | | |       `-DeclRefExpr 0x1edde269a88 <col:14> 'EVP_AES_CCM_CTX *' lvalue Var 0x1edde269158 'cctx' 'EVP_AES_CCM_CTX *'
|   |   | | `-ImplicitCastExpr 0x1edde269b40 <col:31> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1edde269b20 <col:31> 'size_t':'unsigned long long' lvalue ParmVar 0x1edde268fc0 'len' 'size_t':'unsigned long long'
|   |   | `-ReturnStmt 0x1edde269bb8 <line:2150:13, col:21>
|   |   |   `-UnaryOperator 0x1edde269ba0 <col:20, col:21> 'int' prefix '-'
|   |   |     `-IntegerLiteral 0x1edde269b78 <col:21> 'int' 1
|   |   `-ReturnStmt 0x1edde269c90 <line:2152:9, col:16>
|   |     `-ImplicitCastExpr 0x1edde269c78 <col:16> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x1edde269c60 <col:16> 'size_t':'unsigned long long' <LValueToRValue>
|   |         `-DeclRefExpr 0x1edde269c40 <col:16> 'size_t':'unsigned long long' lvalue ParmVar 0x1edde268fc0 'len' 'size_t':'unsigned long long'
|   |-IfStmt 0x1edde269d68 <line:2155:5, line:2156:16>
|   | |-UnaryOperator 0x1edde269d18 <line:2155:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x1edde269d00 <col:10> 'const unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1edde269ce0 <col:10> 'const unsigned char *' lvalue ParmVar 0x1edde270fb8 'in' 'const unsigned char *'
|   | `-ReturnStmt 0x1edde269d58 <line:2156:9, col:16>
|   |   `-IntegerLiteral 0x1edde269d30 <col:16> 'int' 0
|   |-IfStmt 0x1edde271118 <line:2158:5, line:2163:5>
|   | |-UnaryOperator 0x1edde269e00 <line:2158:9, col:16> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x1edde269de8 <col:10, col:16> 'int' <LValueToRValue>
|   | |   `-MemberExpr 0x1edde269db8 <col:10, col:16> 'int' lvalue ->len_set 0x1edde215828
|   | |     `-ImplicitCastExpr 0x1edde269da0 <col:10> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x1edde269d80 <col:10> 'EVP_AES_CCM_CTX *' lvalue Var 0x1edde269158 'cctx' 'EVP_AES_CCM_CTX *'
|   | `-CompoundStmt 0x1edde2710f8 <col:25, line:2163:5>
|   |   |-IfStmt 0x1edde271030 <line:2159:9, line:2161:21>
|   |   | |-OpaqueValueExpr 0x1edde269f90 <<invalid sloc>> '_Bool'
|   |   | `-ReturnStmt 0x1edde269f80 <col:13, col:21>
|   |   |   `-UnaryOperator 0x1edde269f68 <col:20, col:21> 'int' prefix '-'
|   |   |     `-IntegerLiteral 0x1edde269f40 <col:21> 'int' 1
|   |   `-BinaryOperator 0x1edde2710d8 <line:2162:9, col:25> 'int' '='
|   |     |-MemberExpr 0x1edde271080 <col:9, col:15> 'int' lvalue ->len_set 0x1edde215828
|   |     | `-ImplicitCastExpr 0x1edde271068 <col:9> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x1edde271048 <col:9> 'EVP_AES_CCM_CTX *' lvalue Var 0x1edde269158 'cctx' 'EVP_AES_CCM_CTX *'
|   |     `-IntegerLiteral 0x1edde2710b0 <col:25> 'int' 1
|   `-IfStmt 0x1edde271ee0 <line:2164:5, line:2189:5> has_else
|     |-OpaqueValueExpr 0x1edde271ec8 <<invalid sloc>> '_Bool'
|     |-CompoundStmt 0x1edde271450 <line:2164:41, line:2171:5>
|     | |-IfStmt 0x1edde271328 <line:2165:9, line:2168:21>
|     | | |-OpaqueValueExpr 0x1edde271310 <<invalid sloc>> '_Bool'
|     | | `-ReturnStmt 0x1edde271300 <col:13, col:21>
|     | |   `-UnaryOperator 0x1edde2712e8 <col:20, col:21> 'int' prefix '-'
|     | |     `-IntegerLiteral 0x1edde2712c0 <col:21> 'int' 1
|     | |-BinaryOperator 0x1edde2713d0 <line:2169:9, col:25> 'int' '='
|     | | |-MemberExpr 0x1edde271378 <col:9, col:15> 'int' lvalue ->tag_set 0x1edde2157b8
|     | | | `-ImplicitCastExpr 0x1edde271360 <col:9> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|     | | |   `-DeclRefExpr 0x1edde271340 <col:9> 'EVP_AES_CCM_CTX *' lvalue Var 0x1edde269158 'cctx' 'EVP_AES_CCM_CTX *'
|     | | `-IntegerLiteral 0x1edde2713a8 <col:25> 'int' 1
|     | `-ReturnStmt 0x1edde271440 <line:2170:9, col:16>
|     |   `-ImplicitCastExpr 0x1edde271428 <col:16> 'int' <IntegralCast>
|     |     `-ImplicitCastExpr 0x1edde271410 <col:16> 'size_t':'unsigned long long' <LValueToRValue>
|     |       `-DeclRefExpr 0x1edde2713f0 <col:16> 'size_t':'unsigned long long' lvalue ParmVar 0x1edde268fc0 'len' 'size_t':'unsigned long long'
|     `-CompoundStmt 0x1edde271e80 <line:2171:12, line:2189:5>
|       |-DeclStmt 0x1edde271538 <line:2172:9, col:20>
|       | `-VarDecl 0x1edde271490 <col:9, col:19> col:13 used rv 'int' cinit
|       |   `-UnaryOperator 0x1edde271520 <col:18, col:19> 'int' prefix '-'
|       |     `-IntegerLiteral 0x1edde2714f8 <col:19> 'int' 1
|       |-IfStmt 0x1edde271a88 <line:2173:9, line:2182:9>
|       | |-OpaqueValueExpr 0x1edde271a70 <<invalid sloc>> '_Bool'
|       | `-CompoundStmt 0x1edde271a50 <line:2175:56, line:2182:9>
|       |   |-DeclStmt 0x1edde271790 <line:2176:13, col:34>
|       |   | `-VarDecl 0x1edde271728 <col:13, col:33> col:27 used tag 'unsigned char [16]'
|       |   `-IfStmt 0x1edde271a38 <line:2177:13, line:2181:13>
|       |     |-OpaqueValueExpr 0x1edde271a20 <<invalid sloc>> '_Bool'
|       |     `-CompoundStmt 0x1edde271a08 <line:2177:55, line:2181:13>
|       |       `-IfStmt 0x1edde2719f0 <line:2178:17, line:2180:26>
|       |         |-OpaqueValueExpr 0x1edde2719d8 <<invalid sloc>> '_Bool'
|       |         `-BinaryOperator 0x1edde2719b8 <col:21, col:26> 'int' '='
|       |           |-DeclRefExpr 0x1edde271930 <col:21> 'int' lvalue Var 0x1edde271490 'rv' 'int'
|       |           `-ImplicitCastExpr 0x1edde2719a0 <col:26> 'int' <IntegralCast>
|       |             `-ImplicitCastExpr 0x1edde271988 <col:26> 'size_t':'unsigned long long' <LValueToRValue>
|       |               `-DeclRefExpr 0x1edde271968 <col:26> 'size_t':'unsigned long long' lvalue ParmVar 0x1edde268fc0 'len' 'size_t':'unsigned long long'
|       |-IfStmt 0x1edde271c10 <line:2183:9, line:2184:37>
|       | |-BinaryOperator 0x1edde271b18 <line:2183:13, col:20> 'int' '=='
|       | | |-ImplicitCastExpr 0x1edde271b00 <col:13> 'int' <LValueToRValue>
|       | | | `-DeclRefExpr 0x1edde271aa0 <col:13> 'int' lvalue Var 0x1edde271490 'rv' 'int'
|       | | `-UnaryOperator 0x1edde271ae8 <col:19, col:20> 'int' prefix '-'
|       | |   `-IntegerLiteral 0x1edde271ac0 <col:20> 'int' 1
|       | `-CallExpr 0x1edde271bb0 <line:2184:13, col:37> 'int'
|       |   |-ImplicitCastExpr 0x1edde271b98 <col:13> 'int (*)()' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x1edde271b38 <col:13> 'int ()' Function 0x1edde1c83a0 'OPENSSL_cleanse' 'int ()'
|       |   |-ImplicitCastExpr 0x1edde271be0 <col:29> 'unsigned char *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x1edde271b58 <col:29> 'unsigned char *' lvalue ParmVar 0x1edde270f38 'out' 'unsigned char *'
|       |   `-ImplicitCastExpr 0x1edde271bf8 <col:34> 'size_t':'unsigned long long' <LValueToRValue>
|       |     `-DeclRefExpr 0x1edde271b78 <col:34> 'size_t':'unsigned long long' lvalue ParmVar 0x1edde268fc0 'len' 'size_t':'unsigned long long'
|       |-BinaryOperator 0x1edde271cb8 <line:2185:9, col:24> 'int' '='
|       | |-MemberExpr 0x1edde271c60 <col:9, col:15> 'int' lvalue ->iv_set 0x1edde215748
|       | | `-ImplicitCastExpr 0x1edde271c48 <col:9> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1edde271c28 <col:9> 'EVP_AES_CCM_CTX *' lvalue Var 0x1edde269158 'cctx' 'EVP_AES_CCM_CTX *'
|       | `-IntegerLiteral 0x1edde271c90 <col:24> 'int' 0
|       |-BinaryOperator 0x1edde271d68 <line:2186:9, col:25> 'int' '='
|       | |-MemberExpr 0x1edde271d10 <col:9, col:15> 'int' lvalue ->tag_set 0x1edde2157b8
|       | | `-ImplicitCastExpr 0x1edde271cf8 <col:9> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1edde271cd8 <col:9> 'EVP_AES_CCM_CTX *' lvalue Var 0x1edde269158 'cctx' 'EVP_AES_CCM_CTX *'
|       | `-IntegerLiteral 0x1edde271d40 <col:25> 'int' 0
|       |-BinaryOperator 0x1edde271e18 <line:2187:9, col:25> 'int' '='
|       | |-MemberExpr 0x1edde271dc0 <col:9, col:15> 'int' lvalue ->len_set 0x1edde215828
|       | | `-ImplicitCastExpr 0x1edde271da8 <col:9> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1edde271d88 <col:9> 'EVP_AES_CCM_CTX *' lvalue Var 0x1edde269158 'cctx' 'EVP_AES_CCM_CTX *'
|       | `-IntegerLiteral 0x1edde271df0 <col:25> 'int' 0
|       `-ReturnStmt 0x1edde271e70 <line:2188:9, col:16>
|         `-ImplicitCastExpr 0x1edde271e58 <col:16> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x1edde271e38 <col:16> 'int' lvalue Var 0x1edde271490 'rv' 'int'
|-VarDecl 0x1edde271f70 <line:967:74, <scratch space>:171:1> col:1 invalid aes_128_ccm 'const int' static
|-FunctionDecl 0x1edde26a350 <.//openssl//file_jk/before\crypto\evp\e_aes.c:976:45, line:978:34> <scratch space>:192:1 invalid EVP_aes_128_ccm 'const int *(void)'
| `-CompoundStmt 0x1edde26a408 <.//openssl//file_jk/before\crypto\evp\e_aes.c:977:51, line:978:34>
|-VarDecl 0x1edde26a430 <line:967:74, <scratch space>:198:1> col:1 invalid aes_192_ccm 'const int' static
|-FunctionDecl 0x1edde26a878 <.//openssl//file_jk/before\crypto\evp\e_aes.c:976:45, line:978:34> <scratch space>:219:1 invalid EVP_aes_192_ccm 'const int *(void)'
| `-CompoundStmt 0x1edde26a930 <.//openssl//file_jk/before\crypto\evp\e_aes.c:977:51, line:978:34>
|-VarDecl 0x1edde26a958 <line:967:74, <scratch space>:225:1> col:1 invalid aes_256_ccm 'const int' static
|-FunctionDecl 0x1edde26ada0 <.//openssl//file_jk/before\crypto\evp\e_aes.c:976:45, line:978:34> <scratch space>:246:1 invalid EVP_aes_256_ccm 'const int *(void)'
| `-CompoundStmt 0x1edde26ae58 <.//openssl//file_jk/before\crypto\evp\e_aes.c:977:51, line:978:34>
|-RecordDecl 0x1edde26ae68 <line:2201:9, line:2208:1> line:2201:9 invalid struct definition
| |-RecordDecl 0x1edde26af20 <line:2202:5, line:2205:5> line:2202:5 invalid union definition
| | |-FieldDecl 0x1edde272078 <line:2203:9, col:16> col:16 align 'double'
| | `-FieldDecl 0x1edde2720e8 <line:2204:9, col:17> col:17 invalid ks 'int'
| |-FieldDecl 0x1edde272198 <line:2202:5, line:2205:7> col:7 invalid ks 'union (anonymous union at .//openssl//file_jk/before\crypto\evp\e_aes.c:2202:5)':'union (anonymous at .//openssl//file_jk/before\crypto\evp\e_aes.c:2202:5)'
| `-FieldDecl 0x1edde272208 <line:2207:5, col:20> col:20 referenced iv 'unsigned char *'
|-TypedefDecl 0x1edde2722b8 <line:2201:1, line:2208:3> col:3 referenced EVP_AES_WRAP_CTX 'struct (anonymous struct at .//openssl//file_jk/before\crypto\evp\e_aes.c:2201:9)':'struct (anonymous at .//openssl//file_jk/before\crypto\evp\e_aes.c:2201:9)'
| `-ElaboratedType 0x1edde272260 'struct (anonymous struct at .//openssl//file_jk/before\crypto\evp\e_aes.c:2201:9)' sugar
|   `-RecordType 0x1edde26af00 'struct (anonymous at .//openssl//file_jk/before\crypto\evp\e_aes.c:2201:9)'
|     `-Record 0x1edde26ae68 ''
|-FunctionDecl 0x1edde272570 <line:2210:1, line:2231:1> line:2210:12 invalid aes_wrap_init_key 'int (int *, const unsigned char *, const unsigned char *, int)' static
| |-ParmVarDecl 0x1edde272340 <col:30, col:46> col:46 invalid ctx 'int *'
| |-ParmVarDecl 0x1edde2723c0 <col:51, col:72> col:72 used key 'const unsigned char *'
| |-ParmVarDecl 0x1edde272440 <line:2211:30, col:51> col:51 used iv 'const unsigned char *'
| |-ParmVarDecl 0x1edde2724c0 <col:55, col:59> col:59 enc 'int'
| `-CompoundStmt 0x1edde272e08 <line:2212:1, line:2231:1>
|   |-DeclStmt 0x1edde272760 <line:2213:5, col:62>
|   | `-VarDecl 0x1edde2726d8 <col:5, col:23> col:23 used wctx 'EVP_AES_WRAP_CTX *'
|   |-IfStmt 0x1edde2728a0 <line:2214:5, line:2215:16>
|   | |-BinaryOperator 0x1edde272848 <line:2214:9, col:17> 'int' '&&'
|   | | |-UnaryOperator 0x1edde2727c8 <col:9, col:10> 'int' prefix '!' cannot overflow
|   | | | `-ImplicitCastExpr 0x1edde2727b0 <col:10> 'const unsigned char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1edde272778 <col:10> 'const unsigned char *' lvalue ParmVar 0x1edde272440 'iv' 'const unsigned char *'
|   | | `-UnaryOperator 0x1edde272830 <col:16, col:17> 'int' prefix '!' cannot overflow
|   | |   `-ImplicitCastExpr 0x1edde272818 <col:17> 'const unsigned char *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x1edde2727e0 <col:17> 'const unsigned char *' lvalue ParmVar 0x1edde2723c0 'key' 'const unsigned char *'
|   | `-ReturnStmt 0x1edde272890 <line:2215:9, col:16>
|   |   `-IntegerLiteral 0x1edde272868 <col:16> 'int' 1
|   |-IfStmt 0x1edde272c50 <line:2216:5, line:2225:5>
|   | |-ImplicitCastExpr 0x1edde2728d8 <line:2216:9> 'const unsigned char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1edde2728b8 <col:9> 'const unsigned char *' lvalue ParmVar 0x1edde2723c0 'key' 'const unsigned char *'
|   | `-CompoundStmt 0x1edde272c38 <col:14, line:2225:5>
|   |   `-IfStmt 0x1edde272c20 <line:2223:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|   |     |-UnaryOperator 0x1edde272ae0 <.//openssl//file_jk/before\crypto\evp\e_aes.c:2223:13, col:14> 'int' prefix '!' cannot overflow
|   |     | `-ImplicitCastExpr 0x1edde272ac8 <col:14> 'const unsigned char *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x1edde272aa8 <col:14> 'const unsigned char *' lvalue ParmVar 0x1edde272440 'iv' 'const unsigned char *'
|   |     `-BinaryOperator 0x1edde272c00 <line:2224:13, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'unsigned char *' '='
|   |       |-MemberExpr 0x1edde272b30 <.//openssl//file_jk/before\crypto\evp\e_aes.c:2224:13, col:19> 'unsigned char *' lvalue ->iv 0x1edde272208
|   |       | `-ImplicitCastExpr 0x1edde272b18 <col:13> 'EVP_AES_WRAP_CTX *' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x1edde272af8 <col:13> 'EVP_AES_WRAP_CTX *' lvalue Var 0x1edde2726d8 'wctx' 'EVP_AES_WRAP_CTX *'
|   |       `-ImplicitCastExpr 0x1edde272be8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'unsigned char *' <NullToPointer>
|   |         `-ParenExpr 0x1edde272bc8 <col:17, col:27> 'void *'
|   |           `-CStyleCastExpr 0x1edde272ba0 <col:18, col:26> 'void *' <NullToPointer>
|   |             `-IntegerLiteral 0x1edde272b60 <col:26> 'int' 0
|   |-IfStmt 0x1edde272db8 <.//openssl//file_jk/before\crypto\evp\e_aes.c:2226:5, line:2229:5>
|   | |-ImplicitCastExpr 0x1edde272c88 <line:2226:9> 'const unsigned char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1edde272c68 <col:9> 'const unsigned char *' lvalue ParmVar 0x1edde272440 'iv' 'const unsigned char *'
|   | `-CompoundStmt 0x1edde272da8 <col:13, line:2229:5>
|   `-ReturnStmt 0x1edde272df8 <line:2230:5, col:12>
|     `-IntegerLiteral 0x1edde272dd0 <col:12> 'int' 1
|-FunctionDecl 0x1edde2770d8 <line:2233:1, line:2290:1> line:2233:12 invalid aes_wrap_cipher 'int (int *, unsigned char *, const unsigned char *, size_t)' static
| |-ParmVarDecl 0x1edde272e58 <col:28, col:44> col:44 invalid ctx 'int *'
| |-ParmVarDecl 0x1edde272ed8 <col:49, col:64> col:64 used out 'unsigned char *'
| |-ParmVarDecl 0x1edde272f58 <line:2234:28, col:49> col:49 used in 'const unsigned char *'
| |-ParmVarDecl 0x1edde272fd0 <col:53, col:60> col:60 used inlen 'size_t':'unsigned long long'
| `-CompoundStmt 0x1edde273a78 <line:2235:1, line:2290:1>
|   |-DeclStmt 0x1edde277248 <line:2236:5, col:62>
|   | `-VarDecl 0x1edde2771c0 <col:5, col:23> col:23 used wctx 'EVP_AES_WRAP_CTX *'
|   |-DeclStmt 0x1edde2772d8 <line:2237:5, col:14>
|   | `-VarDecl 0x1edde277270 <col:5, col:12> col:12 used rv 'size_t':'unsigned long long'
|   |-DeclStmt 0x1edde2773b8 <line:2239:5, col:49>
|   | `-VarDecl 0x1edde277308 <col:5, col:9> col:9 used pad 'int'
|   |-IfStmt 0x1edde277470 <line:2241:5, line:2242:16>
|   | |-UnaryOperator 0x1edde277420 <line:2241:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x1edde277408 <col:10> 'const unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1edde2773d0 <col:10> 'const unsigned char *' lvalue ParmVar 0x1edde272f58 'in' 'const unsigned char *'
|   | `-ReturnStmt 0x1edde277460 <line:2242:9, col:16>
|   |   `-IntegerLiteral 0x1edde277438 <col:16> 'int' 0
|   |-IfStmt 0x1edde277540 <line:2244:5, line:2245:17>
|   | |-UnaryOperator 0x1edde2774d8 <line:2244:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x1edde2774c0 <col:10> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1edde277488 <col:10> 'size_t':'unsigned long long' lvalue ParmVar 0x1edde272fd0 'inlen' 'size_t':'unsigned long long'
|   | `-ReturnStmt 0x1edde277530 <line:2245:9, col:17>
|   |   `-UnaryOperator 0x1edde277518 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x1edde2774f0 <col:17> 'int' 1
|   |-IfStmt 0x1edde277750 <line:2247:5, line:2248:17>
|   | |-OpaqueValueExpr 0x1edde277738 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1edde277728 <col:9, col:17>
|   |   `-UnaryOperator 0x1edde277710 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x1edde2776e8 <col:17> 'int' 1
|   |-IfStmt 0x1edde2778d8 <line:2250:5, line:2251:17>
|   | |-BinaryOperator 0x1edde277868 <line:2250:9, col:25> 'int' '&&'
|   | | |-UnaryOperator 0x1edde2777b8 <col:9, col:10> 'int' prefix '!' cannot overflow
|   | | | `-ImplicitCastExpr 0x1edde2777a0 <col:10> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1edde277768 <col:10> 'int' lvalue Var 0x1edde277308 'pad' 'int'
|   | | `-BinaryOperator 0x1edde277848 <col:17, col:25> 'unsigned long long' '&'
|   | |   |-ImplicitCastExpr 0x1edde277818 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x1edde2777d0 <col:17> 'size_t':'unsigned long long' lvalue ParmVar 0x1edde272fd0 'inlen' 'size_t':'unsigned long long'
|   | |   `-ImplicitCastExpr 0x1edde277830 <col:25> 'unsigned long long' <IntegralCast>
|   | |     `-IntegerLiteral 0x1edde2777f0 <col:25> 'int' 7
|   | `-ReturnStmt 0x1edde2778c8 <line:2251:9, col:17>
|   |   `-UnaryOperator 0x1edde2778b0 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x1edde277888 <col:17> 'int' 1
|   |-IfStmt 0x1edde277b08 <line:2252:5, line:2255:5>
|   | |-CallExpr 0x1edde2779d0 <line:2252:9, col:48> 'int'
|   | | |-ImplicitCastExpr 0x1edde2779b8 <col:9> 'int (*)(const void *, const void *, int)' <FunctionToPointerDecay>
|   | | | `-DeclRefExpr 0x1edde2778f0 <col:9> 'int (const void *, const void *, int)' Function 0x1edde20e940 'is_partially_overlapping' 'int (const void *, const void *, int)'
|   | | |-ImplicitCastExpr 0x1edde277a20 <col:34> 'const void *' <BitCast>
|   | | | `-ImplicitCastExpr 0x1edde277a08 <col:34> 'unsigned char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1edde277910 <col:34> 'unsigned char *' lvalue ParmVar 0x1edde272ed8 'out' 'unsigned char *'
|   | | |-ImplicitCastExpr 0x1edde277a50 <col:39> 'const void *' <BitCast>
|   | | | `-ImplicitCastExpr 0x1edde277a38 <col:39> 'const unsigned char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1edde277948 <col:39> 'const unsigned char *' lvalue ParmVar 0x1edde272f58 'in' 'const unsigned char *'
|   | | `-ImplicitCastExpr 0x1edde277a80 <col:43> 'int' <IntegralCast>
|   | |   `-ImplicitCastExpr 0x1edde277a68 <col:43> 'size_t':'unsigned long long' <LValueToRValue>
|   | |     `-DeclRefExpr 0x1edde277968 <col:43> 'size_t':'unsigned long long' lvalue ParmVar 0x1edde272fd0 'inlen' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x1edde277af0 <col:51, line:2255:5>
|   |   `-ReturnStmt 0x1edde277ae0 <line:2254:9, col:16>
|   |     `-IntegerLiteral 0x1edde277ab8 <col:16> 'int' 0
|   |-IfStmt 0x1edde277fa8 <line:2256:5, line:2271:5>
|   | |-UnaryOperator 0x1edde277b58 <line:2256:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x1edde277b40 <col:10> 'unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1edde277b20 <col:10> 'unsigned char *' lvalue ParmVar 0x1edde272ed8 'out' 'unsigned char *'
|   | `-CompoundStmt 0x1edde277f90 <col:15, line:2271:5>
|   |   `-IfStmt 0x1edde277f68 <line:2257:9, line:2270:9> has_else
|   |     |-OpaqueValueExpr 0x1edde277f50 <<invalid sloc>> '_Bool'
|   |     |-CompoundStmt 0x1edde277e58 <line:2257:45, line:2263:9>
|   |     | |-IfStmt 0x1edde277d80 <line:2259:13, line:2260:43>
|   |     | | |-ImplicitCastExpr 0x1edde277bb0 <line:2259:17> 'int' <LValueToRValue>
|   |     | | | `-DeclRefExpr 0x1edde277b90 <col:17> 'int' lvalue Var 0x1edde277308 'pad' 'int'
|   |     | | `-BinaryOperator 0x1edde277d60 <line:2260:17, col:43> 'size_t':'unsigned long long' '='
|   |     | |   |-DeclRefExpr 0x1edde277bc8 <col:17> 'size_t':'unsigned long long' lvalue ParmVar 0x1edde272fd0 'inlen' 'size_t':'unsigned long long'
|   |     | |   `-BinaryOperator 0x1edde277d40 <col:25, col:43> 'unsigned long long' '*'
|   |     | |     |-BinaryOperator 0x1edde277ce0 <col:25, col:39> 'unsigned long long' '/'
|   |     | |     | |-ParenExpr 0x1edde277c80 <col:25, col:35> 'unsigned long long'
|   |     | |     | | `-BinaryOperator 0x1edde277c60 <col:26, col:34> 'unsigned long long' '+'
|   |     | |     | |   |-ImplicitCastExpr 0x1edde277c30 <col:26> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | |     | |   | `-DeclRefExpr 0x1edde277be8 <col:26> 'size_t':'unsigned long long' lvalue ParmVar 0x1edde272fd0 'inlen' 'size_t':'unsigned long long'
|   |     | |     | |   `-ImplicitCastExpr 0x1edde277c48 <col:34> 'unsigned long long' <IntegralCast>
|   |     | |     | |     `-IntegerLiteral 0x1edde277c08 <col:34> 'int' 7
|   |     | |     | `-ImplicitCastExpr 0x1edde277cc8 <col:39> 'unsigned long long' <IntegralCast>
|   |     | |     |   `-IntegerLiteral 0x1edde277ca0 <col:39> 'int' 8
|   |     | |     `-ImplicitCastExpr 0x1edde277d28 <col:43> 'unsigned long long' <IntegralCast>
|   |     | |       `-IntegerLiteral 0x1edde277d00 <col:43> 'int' 8
|   |     | `-ReturnStmt 0x1edde277e48 <line:2262:13, col:28>
|   |     |   `-ImplicitCastExpr 0x1edde277e30 <col:20, col:28> 'int' <IntegralCast>
|   |     |     `-BinaryOperator 0x1edde277e10 <col:20, col:28> 'unsigned long long' '+'
|   |     |       |-ImplicitCastExpr 0x1edde277de0 <col:20> 'size_t':'unsigned long long' <LValueToRValue>
|   |     |       | `-DeclRefExpr 0x1edde277d98 <col:20> 'size_t':'unsigned long long' lvalue ParmVar 0x1edde272fd0 'inlen' 'size_t':'unsigned long long'
|   |     |       `-ImplicitCastExpr 0x1edde277df8 <col:28> 'unsigned long long' <IntegralCast>
|   |     |         `-IntegerLiteral 0x1edde277db8 <col:28> 'int' 8
|   |     `-CompoundStmt 0x1edde277f38 <line:2263:16, line:2270:9>
|   |       `-ReturnStmt 0x1edde277f28 <line:2269:13, col:28>
|   |         `-ImplicitCastExpr 0x1edde277f10 <col:20, col:28> 'int' <IntegralCast>
|   |           `-BinaryOperator 0x1edde277ef0 <col:20, col:28> 'unsigned long long' '-'
|   |             |-ImplicitCastExpr 0x1edde277ec0 <col:20> 'size_t':'unsigned long long' <LValueToRValue>
|   |             | `-DeclRefExpr 0x1edde277e78 <col:20> 'size_t':'unsigned long long' lvalue ParmVar 0x1edde272fd0 'inlen' 'size_t':'unsigned long long'
|   |             `-ImplicitCastExpr 0x1edde277ed8 <col:28> 'unsigned long long' <IntegralCast>
|   |               `-IntegerLiteral 0x1edde277e98 <col:28> 'int' 8
|   |-IfStmt 0x1edde273920 <line:2272:5, line:2288:5> has_else
|   | |-ImplicitCastExpr 0x1edde277fe0 <line:2272:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1edde277fc0 <col:9> 'int' lvalue Var 0x1edde277308 'pad' 'int'
|   | |-CompoundStmt 0x1edde273480 <col:14, line:2281:5>
|   | `-CompoundStmt 0x1edde273910 <col:12, line:2288:5>
|   `-ReturnStmt 0x1edde273a68 <line:2289:5, col:28>
|     `-ConditionalOperator 0x1edde273a38 <col:12, col:28> 'int'
|       |-ImplicitCastExpr 0x1edde273a20 <col:12> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x1edde273948 <col:12> 'size_t':'unsigned long long' lvalue Var 0x1edde277270 'rv' 'size_t':'unsigned long long'
|       |-CStyleCastExpr 0x1edde2739b8 <col:17, col:22> 'int' <IntegralCast>
|       | `-ImplicitCastExpr 0x1edde2739a0 <col:22> 'size_t':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|       |   `-DeclRefExpr 0x1edde273968 <col:22> 'size_t':'unsigned long long' lvalue Var 0x1edde277270 'rv' 'size_t':'unsigned long long'
|       `-UnaryOperator 0x1edde273a08 <col:27, col:28> 'int' prefix '-'
|         `-IntegerLiteral 0x1edde2739e0 <col:28> 'int' 1
|-VarDecl 0x1edde273af8 <line:2296:1, col:25> col:25 invalid aes_128_wrap 'const int' static
|-FunctionDecl 0x1edde273f50 <line:2305:1, line:2308:1> line:2305:19 invalid EVP_aes_128_wrap 'const int *(void)'
| `-CompoundStmt 0x1edde274008 <line:2306:1, line:2308:1>
|-VarDecl 0x1edde2780a0 <line:2310:1, col:25> col:25 invalid aes_192_wrap 'const int' static
|-FunctionDecl 0x1edde2784f8 <line:2319:1, line:2322:1> line:2319:19 invalid EVP_aes_192_wrap 'const int *(void)'
| `-CompoundStmt 0x1edde2785b0 <line:2320:1, line:2322:1>
|-VarDecl 0x1edde2785d8 <line:2324:1, col:25> col:25 invalid aes_256_wrap 'const int' static
|-FunctionDecl 0x1edde278a30 <line:2333:1, line:2336:1> line:2333:19 invalid EVP_aes_256_wrap 'const int *(void)'
| `-CompoundStmt 0x1edde278ae8 <line:2334:1, line:2336:1>
|-VarDecl 0x1edde278b10 <line:2338:1, col:25> col:25 invalid aes_128_wrap_pad 'const int' static
|-FunctionDecl 0x1edde278f68 <line:2347:1, line:2350:1> line:2347:19 invalid EVP_aes_128_wrap_pad 'const int *(void)'
| `-CompoundStmt 0x1edde279020 <line:2348:1, line:2350:1>
|-VarDecl 0x1edde27b0d0 <line:2352:1, col:25> col:25 invalid aes_192_wrap_pad 'const int' static
|-FunctionDecl 0x1edde27b528 <line:2361:1, line:2364:1> line:2361:19 invalid EVP_aes_192_wrap_pad 'const int *(void)'
| `-CompoundStmt 0x1edde27b5e0 <line:2362:1, line:2364:1>
|-VarDecl 0x1edde27b608 <line:2366:1, col:25> col:25 invalid aes_256_wrap_pad 'const int' static
|-FunctionDecl 0x1edde27ba60 <line:2375:1, line:2378:1> line:2375:19 invalid EVP_aes_256_wrap_pad 'const int *(void)'
| `-CompoundStmt 0x1edde27bb18 <line:2376:1, line:2378:1>
|-FunctionDecl 0x1edde27bd70 <line:2381:1, line:2438:1> line:2381:12 invalid aes_ocb_ctrl 'int (int *, int, int, void *)' static
| |-ParmVarDecl 0x1edde27bb40 <col:25, col:41> col:41 invalid c 'int *'
| |-ParmVarDecl 0x1edde27bbc0 <col:44, col:48> col:48 used type 'int'
| |-ParmVarDecl 0x1edde27bc40 <col:54, col:58> col:58 used arg 'int'
| |-ParmVarDecl 0x1edde27bcc0 <col:63, col:69> col:69 used ptr 'void *'
| `-CompoundStmt 0x1edde2764e8 <line:2382:1, line:2438:1>
|   |-DeclStmt 0x1edde27bf60 <line:2383:5, col:58>
|   | `-VarDecl 0x1edde27bed8 <col:5, col:22> col:22 used octx 'EVP_AES_OCB_CTX *'
|   |-DeclStmt 0x1edde27bff0 <line:2385:5, col:30>
|   | `-VarDecl 0x1edde27bf88 <col:5, col:22> col:22 used new_octx 'EVP_AES_OCB_CTX *'
|   `-SwitchStmt 0x1edde27c058 <line:2387:5, line:2437:5>
|     |-ImplicitCastExpr 0x1edde27c040 <line:2387:13> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x1edde27c008 <col:13> 'int' lvalue ParmVar 0x1edde27bbc0 'type' 'int'
|     `-CompoundStmt 0x1edde276450 <col:19, line:2437:5>
|       |-BinaryOperator 0x1edde279108 <line:2389:9, col:25> 'int' '='
|       | |-MemberExpr 0x1edde2790b0 <col:9, col:15> 'int' lvalue ->key_set 0x1edde2160e8
|       | | `-ImplicitCastExpr 0x1edde27c0b0 <col:9> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1edde27c078 <col:9> 'EVP_AES_OCB_CTX *' lvalue Var 0x1edde27bed8 'octx' 'EVP_AES_OCB_CTX *'
|       | `-IntegerLiteral 0x1edde2790e0 <col:25> 'int' 0
|       |-BinaryOperator 0x1edde2791b8 <line:2390:9, col:24> 'int' '='
|       | |-MemberExpr 0x1edde279160 <col:9, col:15> 'int' lvalue ->iv_set 0x1edde216158
|       | | `-ImplicitCastExpr 0x1edde279148 <col:9> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1edde279128 <col:9> 'EVP_AES_OCB_CTX *' lvalue Var 0x1edde27bed8 'octx' 'EVP_AES_OCB_CTX *'
|       | `-IntegerLiteral 0x1edde279190 <col:24> 'int' 0
|       |-BinaryOperator 0x1edde279378 <line:2393:9, col:24> 'int' '='
|       | |-MemberExpr 0x1edde279320 <col:9, col:15> 'int' lvalue ->taglen 0x1edde2115f8
|       | | `-ImplicitCastExpr 0x1edde279308 <col:9> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1edde2792e8 <col:9> 'EVP_AES_OCB_CTX *' lvalue Var 0x1edde27bed8 'octx' 'EVP_AES_OCB_CTX *'
|       | `-IntegerLiteral 0x1edde279350 <col:24> 'int' 16
|       |-BinaryOperator 0x1edde279428 <line:2394:9, col:30> 'int' '='
|       | |-MemberExpr 0x1edde2793d0 <col:9, col:15> 'int' lvalue ->data_buf_len 0x1edde2114a8
|       | | `-ImplicitCastExpr 0x1edde2793b8 <col:9> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1edde279398 <col:9> 'EVP_AES_OCB_CTX *' lvalue Var 0x1edde27bed8 'octx' 'EVP_AES_OCB_CTX *'
|       | `-IntegerLiteral 0x1edde279400 <col:30> 'int' 0
|       |-BinaryOperator 0x1edde2794d8 <line:2395:9, col:29> 'int' '='
|       | |-MemberExpr 0x1edde279480 <col:9, col:15> 'int' lvalue ->aad_buf_len 0x1edde211518
|       | | `-ImplicitCastExpr 0x1edde279468 <col:9> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1edde279448 <col:9> 'EVP_AES_OCB_CTX *' lvalue Var 0x1edde27bed8 'octx' 'EVP_AES_OCB_CTX *'
|       | `-IntegerLiteral 0x1edde2794b0 <col:29> 'int' 0
|       |-ReturnStmt 0x1edde279520 <line:2396:9, col:16>
|       | `-IntegerLiteral 0x1edde2794f8 <col:16> 'int' 1
|       |-IfStmt 0x1edde2796a0 <line:2400:9, line:2401:20>
|       | |-BinaryOperator 0x1edde279648 <line:2400:13, col:31> 'int' '||'
|       | | |-BinaryOperator 0x1edde2795a8 <col:13, col:20> 'int' '<='
|       | | | |-ImplicitCastExpr 0x1edde279590 <col:13> 'int' <LValueToRValue>
|       | | | | `-DeclRefExpr 0x1edde279530 <col:13> 'int' lvalue ParmVar 0x1edde27bc40 'arg' 'int'
|       | | | `-IntegerLiteral 0x1edde279568 <col:20> 'int' 0
|       | | `-BinaryOperator 0x1edde279628 <col:25, col:31> 'int' '>'
|       | |   |-ImplicitCastExpr 0x1edde279610 <col:25> 'int' <LValueToRValue>
|       | |   | `-DeclRefExpr 0x1edde2795c8 <col:25> 'int' lvalue ParmVar 0x1edde27bc40 'arg' 'int'
|       | |   `-IntegerLiteral 0x1edde2795e8 <col:31> 'int' 15
|       | `-ReturnStmt 0x1edde279690 <line:2401:13, col:20>
|       |   `-IntegerLiteral 0x1edde279668 <col:20> 'int' 0
|       |-BinaryOperator 0x1edde279758 <line:2403:9, col:23> 'int' '='
|       | |-MemberExpr 0x1edde2796f0 <col:9, col:15> 'int' lvalue ->ivlen 0x1edde211588
|       | | `-ImplicitCastExpr 0x1edde2796d8 <col:9> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1edde2796b8 <col:9> 'EVP_AES_OCB_CTX *' lvalue Var 0x1edde27bed8 'octx' 'EVP_AES_OCB_CTX *'
|       | `-ImplicitCastExpr 0x1edde279740 <col:23> 'int' <LValueToRValue>
|       |   `-DeclRefExpr 0x1edde279720 <col:23> 'int' lvalue ParmVar 0x1edde27bc40 'arg' 'int'
|       |-ReturnStmt 0x1edde2797a0 <line:2404:9, col:16>
|       | `-IntegerLiteral 0x1edde279778 <col:16> 'int' 1
|       |-IfStmt 0x1edde279aa8 <line:2407:9, line:2414:9>
|       | |-UnaryOperator 0x1edde279800 <line:2407:13, col:14> 'int' prefix '!' cannot overflow
|       | | `-ImplicitCastExpr 0x1edde2797e8 <col:14> 'void *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1edde2797b0 <col:14> 'void *' lvalue ParmVar 0x1edde27bcc0 'ptr' 'void *'
|       | `-CompoundStmt 0x1edde279a80 <col:19, line:2414:9>
|       |   |-IfStmt 0x1edde279970 <line:2409:13, line:2410:24>
|       |   | |-BinaryOperator 0x1edde279918 <line:2409:17, col:34> 'int' '||'
|       |   | | |-BinaryOperator 0x1edde279878 <col:17, col:23> 'int' '<'
|       |   | | | |-ImplicitCastExpr 0x1edde279860 <col:17> 'int' <LValueToRValue>
|       |   | | | | `-DeclRefExpr 0x1edde279818 <col:17> 'int' lvalue ParmVar 0x1edde27bc40 'arg' 'int'
|       |   | | | `-IntegerLiteral 0x1edde279838 <col:23> 'int' 0
|       |   | | `-BinaryOperator 0x1edde2798f8 <col:28, col:34> 'int' '>'
|       |   | |   |-ImplicitCastExpr 0x1edde2798e0 <col:28> 'int' <LValueToRValue>
|       |   | |   | `-DeclRefExpr 0x1edde279898 <col:28> 'int' lvalue ParmVar 0x1edde27bc40 'arg' 'int'
|       |   | |   `-IntegerLiteral 0x1edde2798b8 <col:34> 'int' 16
|       |   | `-ReturnStmt 0x1edde279960 <line:2410:17, col:24>
|       |   |   `-IntegerLiteral 0x1edde279938 <col:24> 'int' 0
|       |   |-BinaryOperator 0x1edde279a28 <line:2412:13, col:28> 'int' '='
|       |   | |-MemberExpr 0x1edde2799c0 <col:13, col:19> 'int' lvalue ->taglen 0x1edde2115f8
|       |   | | `-ImplicitCastExpr 0x1edde2799a8 <col:13> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|       |   | |   `-DeclRefExpr 0x1edde279988 <col:13> 'EVP_AES_OCB_CTX *' lvalue Var 0x1edde27bed8 'octx' 'EVP_AES_OCB_CTX *'
|       |   | `-ImplicitCastExpr 0x1edde279a10 <col:28> 'int' <LValueToRValue>
|       |   |   `-DeclRefExpr 0x1edde2799f0 <col:28> 'int' lvalue ParmVar 0x1edde27bc40 'arg' 'int'
|       |   `-ReturnStmt 0x1edde279a70 <line:2413:13, col:20>
|       |     `-IntegerLiteral 0x1edde279a48 <col:20> 'int' 1
|       |-IfStmt 0x1edde279c08 <line:2415:9, line:2416:20>
|       | |-OpaqueValueExpr 0x1edde279bf0 <<invalid sloc>> '_Bool'
|       | `-ReturnStmt 0x1edde279be0 <col:13, col:20>
|       |   `-IntegerLiteral 0x1edde279bb8 <col:20> 'int' 0
|       |-CallExpr 0x1edde279d48 <line:2417:9, col:35> 'void *'
|       | |-ImplicitCastExpr 0x1edde279d30 <col:9> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|       | | `-DeclRefExpr 0x1edde279c20 <col:9> 'void *(void *, const void *, unsigned long long)' Function 0x1edde16ea88 'memcpy' 'void *(void *, const void *, unsigned long long)'
|       | |-ImplicitCastExpr 0x1edde279d98 <col:16, col:22> 'void *' <BitCast>
|       | | `-ImplicitCastExpr 0x1edde279d80 <col:16, col:22> 'unsigned char *' <ArrayToPointerDecay>
|       | |   `-MemberExpr 0x1edde279c78 <col:16, col:22> 'unsigned char [16]' lvalue ->tag 0x1edde2112b8
|       | |     `-ImplicitCastExpr 0x1edde279c60 <col:16> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|       | |       `-DeclRefExpr 0x1edde279c40 <col:16> 'EVP_AES_OCB_CTX *' lvalue Var 0x1edde27bed8 'octx' 'EVP_AES_OCB_CTX *'
|       | |-ImplicitCastExpr 0x1edde279dc8 <col:27> 'const void *' <NoOp>
|       | | `-ImplicitCastExpr 0x1edde279db0 <col:27> 'void *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1edde279ca8 <col:27> 'void *' lvalue ParmVar 0x1edde27bcc0 'ptr' 'void *'
|       | `-ImplicitCastExpr 0x1edde279df8 <col:32> 'unsigned long long' <IntegralCast>
|       |   `-ImplicitCastExpr 0x1edde279de0 <col:32> 'int' <LValueToRValue>
|       |     `-DeclRefExpr 0x1edde279cc8 <col:32> 'int' lvalue ParmVar 0x1edde27bc40 'arg' 'int'
|       |-ReturnStmt 0x1edde279e38 <line:2418:9, col:16>
|       | `-IntegerLiteral 0x1edde279e10 <col:16> 'int' 1
|       |-IfStmt 0x1edde279f90 <line:2421:9, line:2422:20>
|       | |-OpaqueValueExpr 0x1edde279f78 <<invalid sloc>> '_Bool'
|       | `-ReturnStmt 0x1edde279f68 <col:13, col:20>
|       |   `-IntegerLiteral 0x1edde279f40 <col:20> 'int' 0
|       |-CallExpr 0x1edde2760b0 <line:2424:9, col:35> 'void *'
|       | |-ImplicitCastExpr 0x1edde276098 <col:9> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|       | | `-DeclRefExpr 0x1edde279fa8 <col:9> 'void *(void *, const void *, unsigned long long)' Function 0x1edde16ea88 'memcpy' 'void *(void *, const void *, unsigned long long)'
|       | |-ImplicitCastExpr 0x1edde2760e8 <col:16> 'void *' <LValueToRValue>
|       | | `-DeclRefExpr 0x1edde279fc8 <col:16> 'void *' lvalue ParmVar 0x1edde27bcc0 'ptr' 'void *'
|       | |-ImplicitCastExpr 0x1edde276118 <col:21, col:27> 'const void *' <BitCast>
|       | | `-ImplicitCastExpr 0x1edde276100 <col:21, col:27> 'unsigned char *' <ArrayToPointerDecay>
|       | |   `-MemberExpr 0x1edde27a020 <col:21, col:27> 'unsigned char [16]' lvalue ->tag 0x1edde2112b8
|       | |     `-ImplicitCastExpr 0x1edde27a008 <col:21> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|       | |       `-DeclRefExpr 0x1edde279fe8 <col:21> 'EVP_AES_OCB_CTX *' lvalue Var 0x1edde27bed8 'octx' 'EVP_AES_OCB_CTX *'
|       | `-ImplicitCastExpr 0x1edde276148 <col:32> 'unsigned long long' <IntegralCast>
|       |   `-ImplicitCastExpr 0x1edde276130 <col:32> 'int' <LValueToRValue>
|       |     `-DeclRefExpr 0x1edde27a050 <col:32> 'int' lvalue ParmVar 0x1edde27bc40 'arg' 'int'
|       |-ReturnStmt 0x1edde276188 <line:2425:9, col:16>
|       | `-IntegerLiteral 0x1edde276160 <col:16> 'int' 1
|       `-DefaultStmt 0x1edde276430 <line:2434:5, line:2435:17>
|         `-ReturnStmt 0x1edde276420 <col:9, col:17>
|           `-UnaryOperator 0x1edde276408 <col:16, col:17> 'int' prefix '-'
|             `-IntegerLiteral 0x1edde2763e0 <col:17> 'int' 1
|-FunctionDecl 0x1edde276758 <line:2463:1, line:2541:1> line:2463:12 invalid aes_ocb_init_key 'int (int *, const unsigned char *, const unsigned char *, int)' static
| |-ParmVarDecl 0x1edde276528 <col:29, col:45> col:45 invalid ctx 'int *'
| |-ParmVarDecl 0x1edde2765a8 <col:50, col:71> col:71 used key 'const unsigned char *'
| |-ParmVarDecl 0x1edde276628 <line:2464:29, col:50> col:50 used iv 'const unsigned char *'
| |-ParmVarDecl 0x1edde2766a8 <col:54, col:58> col:58 enc 'int'
| `-CompoundStmt 0x1edde27abf8 <line:2465:1, line:2541:1>
|   |-DeclStmt 0x1edde2768c8 <line:2466:5, col:60>
|   | `-VarDecl 0x1edde276840 <col:5, col:22> col:22 used octx 'EVP_AES_OCB_CTX *'
|   |-IfStmt 0x1edde276a08 <line:2467:5, line:2468:16>
|   | |-BinaryOperator 0x1edde2769b0 <line:2467:9, col:17> 'int' '&&'
|   | | |-UnaryOperator 0x1edde276930 <col:9, col:10> 'int' prefix '!' cannot overflow
|   | | | `-ImplicitCastExpr 0x1edde276918 <col:10> 'const unsigned char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1edde2768e0 <col:10> 'const unsigned char *' lvalue ParmVar 0x1edde276628 'iv' 'const unsigned char *'
|   | | `-UnaryOperator 0x1edde276998 <col:16, col:17> 'int' prefix '!' cannot overflow
|   | |   `-ImplicitCastExpr 0x1edde276980 <col:17> 'const unsigned char *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x1edde276948 <col:17> 'const unsigned char *' lvalue ParmVar 0x1edde2765a8 'key' 'const unsigned char *'
|   | `-ReturnStmt 0x1edde2769f8 <line:2468:9, col:16>
|   |   `-IntegerLiteral 0x1edde2769d0 <col:16> 'int' 1
|   |-IfStmt 0x1edde27ab98 <line:2469:5, line:2539:5> has_else
|   | |-ImplicitCastExpr 0x1edde276a40 <line:2469:9> 'const unsigned char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1edde276a20 <col:9> 'const unsigned char *' lvalue ParmVar 0x1edde2765a8 'key' 'const unsigned char *'
|   | |-CompoundStmt 0x1edde27a668 <col:14, line:2532:5>
|   | | |-DoStmt 0x1edde276ed8 <line:2470:9, line:2518:17>
|   | | | |-CompoundStmt 0x1edde276e98 <line:2470:12, line:2517:9>
|   | | | | `-IfStmt 0x1edde276e80 <line:2511:13, line:2516:24>
|   | | | |   |-OpaqueValueExpr 0x1edde276e68 <<invalid sloc>> '_Bool'
|   | | | |   `-ReturnStmt 0x1edde276e58 <col:17, col:24>
|   | | | |     `-IntegerLiteral 0x1edde276e30 <col:24> 'int' 0
|   | | | `-IntegerLiteral 0x1edde276eb0 <line:2518:16> 'int' 0
|   | | |-IfStmt 0x1edde27a1b8 <line:2523:9, line:2524:24>
|   | | | |-BinaryOperator 0x1edde27a0c0 <line:2523:13, col:33> 'int' '&&'
|   | | | | |-BinaryOperator 0x1edde276fd0 <col:13, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | | | | |-ImplicitCastExpr 0x1edde276fa0 <.//openssl//file_jk/before\crypto\evp\e_aes.c:2523:13> 'const unsigned char *' <LValueToRValue>
|   | | | | | | `-DeclRefExpr 0x1edde276ef8 <col:13> 'const unsigned char *' lvalue ParmVar 0x1edde276628 'iv' 'const unsigned char *'
|   | | | | | `-ImplicitCastExpr 0x1edde276fb8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const unsigned char *' <BitCast>
|   | | | | |   `-ParenExpr 0x1edde276f80 <col:17, col:27> 'void *'
|   | | | | |     `-CStyleCastExpr 0x1edde276f58 <col:18, col:26> 'void *' <NullToPointer>
|   | | | | |       `-IntegerLiteral 0x1edde276f18 <col:26> 'int' 0
|   | | | | `-ImplicitCastExpr 0x1edde277058 <.//openssl//file_jk/before\crypto\evp\e_aes.c:2523:27, col:33> 'int' <LValueToRValue>
|   | | | |   `-MemberExpr 0x1edde277028 <col:27, col:33> 'int' lvalue ->iv_set 0x1edde216158
|   | | | |     `-ImplicitCastExpr 0x1edde277010 <col:27> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|   | | | |       `-DeclRefExpr 0x1edde276ff0 <col:27> 'EVP_AES_OCB_CTX *' lvalue Var 0x1edde276840 'octx' 'EVP_AES_OCB_CTX *'
|   | | | `-BinaryOperator 0x1edde27a198 <line:2524:13, col:24> 'const unsigned char *' '='
|   | | |   |-DeclRefExpr 0x1edde27a0e0 <col:13> 'const unsigned char *' lvalue ParmVar 0x1edde276628 'iv' 'const unsigned char *'
|   | | |   `-ImplicitCastExpr 0x1edde27a180 <col:18, col:24> 'const unsigned char *' <NoOp>
|   | | |     `-ImplicitCastExpr 0x1edde27a168 <col:18, col:24> 'unsigned char *' <LValueToRValue>
|   | | |       `-MemberExpr 0x1edde27a138 <col:18, col:24> 'unsigned char *' lvalue ->iv 0x1edde2111f8
|   | | |         `-ImplicitCastExpr 0x1edde27a120 <col:18> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|   | | |           `-DeclRefExpr 0x1edde27a100 <col:18> 'EVP_AES_OCB_CTX *' lvalue Var 0x1edde276840 'octx' 'EVP_AES_OCB_CTX *'
|   | | |-IfStmt 0x1edde27a5a0 <line:2525:9, line:2530:9>
|   | | | |-ImplicitCastExpr 0x1edde27a1f0 <line:2525:13> 'const unsigned char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1edde27a1d0 <col:13> 'const unsigned char *' lvalue ParmVar 0x1edde276628 'iv' 'const unsigned char *'
|   | | | `-CompoundStmt 0x1edde27a580 <col:17, line:2530:9>
|   | | |   |-IfStmt 0x1edde27a4b8 <line:2526:13, line:2528:24>
|   | | |   | |-OpaqueValueExpr 0x1edde27a4a0 <<invalid sloc>> '_Bool'
|   | | |   | `-ReturnStmt 0x1edde27a490 <col:17, col:24>
|   | | |   |   `-IntegerLiteral 0x1edde27a468 <col:24> 'int' 0
|   | | |   `-BinaryOperator 0x1edde27a560 <line:2529:13, col:28> 'int' '='
|   | | |     |-MemberExpr 0x1edde27a508 <col:13, col:19> 'int' lvalue ->iv_set 0x1edde216158
|   | | |     | `-ImplicitCastExpr 0x1edde27a4f0 <col:13> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|   | | |     |   `-DeclRefExpr 0x1edde27a4d0 <col:13> 'EVP_AES_OCB_CTX *' lvalue Var 0x1edde276840 'octx' 'EVP_AES_OCB_CTX *'
|   | | |     `-IntegerLiteral 0x1edde27a538 <col:28> 'int' 1
|   | | `-BinaryOperator 0x1edde27a648 <line:2531:9, col:25> 'int' '='
|   | |   |-MemberExpr 0x1edde27a5f0 <col:9, col:15> 'int' lvalue ->key_set 0x1edde2160e8
|   | |   | `-ImplicitCastExpr 0x1edde27a5d8 <col:9> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x1edde27a5b8 <col:9> 'EVP_AES_OCB_CTX *' lvalue Var 0x1edde276840 'octx' 'EVP_AES_OCB_CTX *'
|   | |   `-IntegerLiteral 0x1edde27a620 <col:25> 'int' 1
|   | `-CompoundStmt 0x1edde27ab78 <line:2532:12, line:2539:5>
|   |   |-IfStmt 0x1edde27aaa0 <line:2534:9, line:2537:45> has_else
|   |   | |-ImplicitCastExpr 0x1edde27a700 <line:2534:13, col:19> 'int' <LValueToRValue>
|   |   | | `-MemberExpr 0x1edde27a6d0 <col:13, col:19> 'int' lvalue ->key_set 0x1edde2160e8
|   |   | |   `-ImplicitCastExpr 0x1edde27a6b8 <col:13> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x1edde27a698 <col:13> 'EVP_AES_OCB_CTX *' lvalue Var 0x1edde276840 'octx' 'EVP_AES_OCB_CTX *'
|   |   | |-NullStmt 0x1edde27aa98 <line:2535:13>
|   |   | `-CallExpr 0x1edde27a9d0 <line:2537:13, col:45> 'void *'
|   |   |   |-ImplicitCastExpr 0x1edde27a9b8 <col:13> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x1edde27a860 <col:13> 'void *(void *, const void *, unsigned long long)' Function 0x1edde16ea88 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   |   |   |-ImplicitCastExpr 0x1edde27aa20 <col:20, col:26> 'void *' <BitCast>
|   |   |   | `-ImplicitCastExpr 0x1edde27aa08 <col:20, col:26> 'unsigned char *' <LValueToRValue>
|   |   |   |   `-MemberExpr 0x1edde27a8b8 <col:20, col:26> 'unsigned char *' lvalue ->iv 0x1edde2111f8
|   |   |   |     `-ImplicitCastExpr 0x1edde27a8a0 <col:20> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|   |   |   |       `-DeclRefExpr 0x1edde27a880 <col:20> 'EVP_AES_OCB_CTX *' lvalue Var 0x1edde276840 'octx' 'EVP_AES_OCB_CTX *'
|   |   |   |-ImplicitCastExpr 0x1edde27aa50 <col:30> 'const void *' <BitCast>
|   |   |   | `-ImplicitCastExpr 0x1edde27aa38 <col:30> 'const unsigned char *' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x1edde27a8e8 <col:30> 'const unsigned char *' lvalue ParmVar 0x1edde276628 'iv' 'const unsigned char *'
|   |   |   `-ImplicitCastExpr 0x1edde27aa80 <col:34, col:40> 'unsigned long long' <IntegralCast>
|   |   |     `-ImplicitCastExpr 0x1edde27aa68 <col:34, col:40> 'int' <LValueToRValue>
|   |   |       `-MemberExpr 0x1edde27a940 <col:34, col:40> 'int' lvalue ->ivlen 0x1edde211588
|   |   |         `-ImplicitCastExpr 0x1edde27a928 <col:34> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|   |   |           `-DeclRefExpr 0x1edde27a908 <col:34> 'EVP_AES_OCB_CTX *' lvalue Var 0x1edde276840 'octx' 'EVP_AES_OCB_CTX *'
|   |   `-BinaryOperator 0x1edde27ab58 <line:2538:9, col:24> 'int' '='
|   |     |-MemberExpr 0x1edde27ab00 <col:9, col:15> 'int' lvalue ->iv_set 0x1edde216158
|   |     | `-ImplicitCastExpr 0x1edde27aae8 <col:9> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x1edde27aac8 <col:9> 'EVP_AES_OCB_CTX *' lvalue Var 0x1edde276840 'octx' 'EVP_AES_OCB_CTX *'
|   |     `-IntegerLiteral 0x1edde27ab30 <col:24> 'int' 1
|   `-ReturnStmt 0x1edde27abe8 <line:2540:5, col:12>
|     `-IntegerLiteral 0x1edde27abc0 <col:12> 'int' 1
|-FunctionDecl 0x1edde27ae68 <line:2543:1, line:2690:1> line:2543:12 invalid aes_ocb_cipher 'int (int *, unsigned char *, const unsigned char *, size_t)' static
| |-ParmVarDecl 0x1edde27ac40 <col:27, col:43> col:43 invalid ctx 'int *'
| |-ParmVarDecl 0x1edde27acc0 <col:48, col:63> col:63 used out 'unsigned char *'
| |-ParmVarDecl 0x1edde27ad40 <line:2544:27, col:48> col:48 used in 'const unsigned char *'
| |-ParmVarDecl 0x1edde27adb8 <col:52, col:59> col:59 used len 'size_t':'unsigned long long'
| `-CompoundStmt 0x1edde27c1b0 <line:2545:1, line:2690:1>
|   |-DeclStmt 0x1edde27afc0 <line:2546:5, col:23>
|   | `-VarDecl 0x1edde27af58 <col:5, col:20> col:20 used buf 'unsigned char *'
|   |-DeclStmt 0x1edde27b058 <line:2547:5, col:17>
|   | `-VarDecl 0x1edde27aff0 <col:5, col:10> col:10 used buf_len 'int *'
|   |-DeclStmt 0x1edde2740f0 <line:2548:5, col:24>
|   | `-VarDecl 0x1edde274060 <col:5, col:23> col:9 used written_len 'int' cinit
|   |   `-IntegerLiteral 0x1edde2740c8 <col:23> 'int' 0
|   |-DeclStmt 0x1edde274180 <line:2549:5, col:24>
|   | `-VarDecl 0x1edde274118 <col:5, col:12> col:12 used trailing_len 'size_t':'unsigned long long'
|   |-DeclStmt 0x1edde274230 <line:2550:5, col:60>
|   | `-VarDecl 0x1edde2741a8 <col:5, col:22> col:22 used octx 'EVP_AES_OCB_CTX *'
|   |-IfStmt 0x1edde274348 <line:2553:5, line:2554:17>
|   | |-UnaryOperator 0x1edde2742e0 <line:2553:9, col:16> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x1edde2742c8 <col:10, col:16> 'int' <LValueToRValue>
|   | |   `-MemberExpr 0x1edde274298 <col:10, col:16> 'int' lvalue ->iv_set 0x1edde216158
|   | |     `-ImplicitCastExpr 0x1edde274280 <col:10> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x1edde274248 <col:10> 'EVP_AES_OCB_CTX *' lvalue Var 0x1edde2741a8 'octx' 'EVP_AES_OCB_CTX *'
|   | `-ReturnStmt 0x1edde274338 <line:2554:9, col:17>
|   |   `-UnaryOperator 0x1edde274320 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x1edde2742f8 <col:17> 'int' 1
|   |-IfStmt 0x1edde274448 <line:2556:5, line:2557:17>
|   | |-UnaryOperator 0x1edde2743e0 <line:2556:9, col:16> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x1edde2743c8 <col:10, col:16> 'int' <LValueToRValue>
|   | |   `-MemberExpr 0x1edde274398 <col:10, col:16> 'int' lvalue ->key_set 0x1edde2160e8
|   | |     `-ImplicitCastExpr 0x1edde274380 <col:10> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x1edde274360 <col:10> 'EVP_AES_OCB_CTX *' lvalue Var 0x1edde2741a8 'octx' 'EVP_AES_OCB_CTX *'
|   | `-ReturnStmt 0x1edde274438 <line:2557:9, col:17>
|   |   `-UnaryOperator 0x1edde274420 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x1edde2743f8 <col:17> 'int' 1
|   `-IfStmt 0x1edde27c188 <line:2559:5, line:2689:5> has_else
|     |-BinaryOperator 0x1edde274550 <line:2559:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|     | |-ImplicitCastExpr 0x1edde274520 <.//openssl//file_jk/before\crypto\evp\e_aes.c:2559:9> 'const unsigned char *' <LValueToRValue>
|     | | `-DeclRefExpr 0x1edde274460 <col:9> 'const unsigned char *' lvalue ParmVar 0x1edde27ad40 'in' 'const unsigned char *'
|     | `-ImplicitCastExpr 0x1edde274538 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const unsigned char *' <BitCast>
|     |   `-ParenExpr 0x1edde274500 <col:17, col:27> 'void *'
|     |     `-CStyleCastExpr 0x1edde2744d8 <col:18, col:26> 'void *' <NullToPointer>
|     |       `-IntegerLiteral 0x1edde274498 <col:26> 'int' 0
|     |-CompoundStmt 0x1edde283ea0 <.//openssl//file_jk/before\crypto\evp\e_aes.c:2559:21, line:2649:5>
|     | |-IfStmt 0x1edde274ce8 <line:2568:9, line:2579:9> has_else
|     | | |-BinaryOperator 0x1edde274660 <line:2568:13, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|     | | | |-ImplicitCastExpr 0x1edde274630 <.//openssl//file_jk/before\crypto\evp\e_aes.c:2568:13> 'unsigned char *' <LValueToRValue>
|     | | | | `-DeclRefExpr 0x1edde274570 <col:13> 'unsigned char *' lvalue ParmVar 0x1edde27acc0 'out' 'unsigned char *'
|     | | | `-ImplicitCastExpr 0x1edde274648 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'unsigned char *' <BitCast>
|     | | |   `-ParenExpr 0x1edde274610 <col:17, col:27> 'void *'
|     | | |     `-CStyleCastExpr 0x1edde2745e8 <col:18, col:26> 'void *' <NullToPointer>
|     | | |       `-IntegerLiteral 0x1edde2745a8 <col:26> 'int' 0
|     | | |-CompoundStmt 0x1edde274850 <.//openssl//file_jk/before\crypto\evp\e_aes.c:2568:26, line:2571:9>
|     | | | |-BinaryOperator 0x1edde274738 <line:2569:13, col:25> 'unsigned char *' '='
|     | | | | |-DeclRefExpr 0x1edde274680 <col:13> 'unsigned char *' lvalue Var 0x1edde27af58 'buf' 'unsigned char *'
|     | | | | `-ImplicitCastExpr 0x1edde274720 <col:19, col:25> 'unsigned char *' <ArrayToPointerDecay>
|     | | | |   `-MemberExpr 0x1edde2746f0 <col:19, col:25> 'unsigned char [16]' lvalue ->aad_buf 0x1edde211438
|     | | | |     `-ImplicitCastExpr 0x1edde2746d8 <col:19> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|     | | | |       `-DeclRefExpr 0x1edde2746b8 <col:19> 'EVP_AES_OCB_CTX *' lvalue Var 0x1edde2741a8 'octx' 'EVP_AES_OCB_CTX *'
|     | | | `-BinaryOperator 0x1edde274830 <line:2570:13, col:42> 'int *' '='
|     | | |   |-DeclRefExpr 0x1edde274758 <col:13> 'int *' lvalue Var 0x1edde27aff0 'buf_len' 'int *'
|     | | |   `-UnaryOperator 0x1edde274818 <col:23, col:42> 'int *' prefix '&' cannot overflow
|     | | |     `-ParenExpr 0x1edde2747f8 <col:24, col:42> 'int' lvalue
|     | | |       `-MemberExpr 0x1edde2747c8 <col:25, col:31> 'int' lvalue ->aad_buf_len 0x1edde211518
|     | | |         `-ImplicitCastExpr 0x1edde2747b0 <col:25> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|     | | |           `-DeclRefExpr 0x1edde274790 <col:25> 'EVP_AES_OCB_CTX *' lvalue Var 0x1edde2741a8 'octx' 'EVP_AES_OCB_CTX *'
|     | | `-CompoundStmt 0x1edde274cc0 <line:2571:16, line:2579:9>
|     | |   |-BinaryOperator 0x1edde274910 <line:2572:13, col:25> 'unsigned char *' '='
|     | |   | |-DeclRefExpr 0x1edde274870 <col:13> 'unsigned char *' lvalue Var 0x1edde27af58 'buf' 'unsigned char *'
|     | |   | `-ImplicitCastExpr 0x1edde2748f8 <col:19, col:25> 'unsigned char *' <ArrayToPointerDecay>
|     | |   |   `-MemberExpr 0x1edde2748c8 <col:19, col:25> 'unsigned char [16]' lvalue ->data_buf 0x1edde211378
|     | |   |     `-ImplicitCastExpr 0x1edde2748b0 <col:19> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|     | |   |       `-DeclRefExpr 0x1edde274890 <col:19> 'EVP_AES_OCB_CTX *' lvalue Var 0x1edde2741a8 'octx' 'EVP_AES_OCB_CTX *'
|     | |   |-BinaryOperator 0x1edde2749f0 <line:2573:13, col:43> 'int *' '='
|     | |   | |-DeclRefExpr 0x1edde274930 <col:13> 'int *' lvalue Var 0x1edde27aff0 'buf_len' 'int *'
|     | |   | `-UnaryOperator 0x1edde2749d8 <col:23, col:43> 'int *' prefix '&' cannot overflow
|     | |   |   `-ParenExpr 0x1edde2749b8 <col:24, col:43> 'int' lvalue
|     | |   |     `-MemberExpr 0x1edde274988 <col:25, col:31> 'int' lvalue ->data_buf_len 0x1edde2114a8
|     | |   |       `-ImplicitCastExpr 0x1edde274970 <col:25> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|     | |   |         `-DeclRefExpr 0x1edde274950 <col:25> 'EVP_AES_OCB_CTX *' lvalue Var 0x1edde2741a8 'octx' 'EVP_AES_OCB_CTX *'
|     | |   `-IfStmt 0x1edde274ca8 <line:2575:13, line:2578:13>
|     | |     |-CallExpr 0x1edde274b88 <line:2575:17, col:65> 'int'
|     | |     | |-ImplicitCastExpr 0x1edde274b70 <col:17> 'int (*)(const void *, const void *, int)' <FunctionToPointerDecay>
|     | |     | | `-DeclRefExpr 0x1edde274a10 <col:17> 'int (const void *, const void *, int)' Function 0x1edde20e940 'is_partially_overlapping' 'int (const void *, const void *, int)'
|     | |     | |-ImplicitCastExpr 0x1edde274bc0 <col:42, col:49> 'const void *' <BitCast>
|     | |     | | `-BinaryOperator 0x1edde274af8 <col:42, col:49> 'unsigned char *' '+'
|     | |     | |   |-ImplicitCastExpr 0x1edde274ac8 <col:42> 'unsigned char *' <LValueToRValue>
|     | |     | |   | `-DeclRefExpr 0x1edde274a30 <col:42> 'unsigned char *' lvalue ParmVar 0x1edde27acc0 'out' 'unsigned char *'
|     | |     | |   `-ImplicitCastExpr 0x1edde274ae0 <col:48, col:49> 'int' <LValueToRValue>
|     | |     | |     `-UnaryOperator 0x1edde274ab0 <col:48, col:49> 'int' lvalue prefix '*' cannot overflow
|     | |     | |       `-ImplicitCastExpr 0x1edde274a98 <col:49> 'int *' <LValueToRValue>
|     | |     | |         `-DeclRefExpr 0x1edde274a78 <col:49> 'int *' lvalue Var 0x1edde27aff0 'buf_len' 'int *'
|     | |     | |-ImplicitCastExpr 0x1edde274bf0 <col:58> 'const void *' <BitCast>
|     | |     | | `-ImplicitCastExpr 0x1edde274bd8 <col:58> 'const unsigned char *' <LValueToRValue>
|     | |     | |   `-DeclRefExpr 0x1edde274b18 <col:58> 'const unsigned char *' lvalue ParmVar 0x1edde27ad40 'in' 'const unsigned char *'
|     | |     | `-ImplicitCastExpr 0x1edde274c20 <col:62> 'int' <IntegralCast>
|     | |     |   `-ImplicitCastExpr 0x1edde274c08 <col:62> 'size_t':'unsigned long long' <LValueToRValue>
|     | |     |     `-DeclRefExpr 0x1edde274b38 <col:62> 'size_t':'unsigned long long' lvalue ParmVar 0x1edde27adb8 'len' 'size_t':'unsigned long long'
|     | |     `-CompoundStmt 0x1edde274c90 <col:68, line:2578:13>
|     | |       `-ReturnStmt 0x1edde274c80 <line:2577:17, col:24>
|     | |         `-IntegerLiteral 0x1edde274c58 <col:24> 'int' 0
|     | |-IfStmt 0x1edde283198 <line:2585:9, line:2617:9>
|     | | |-BinaryOperator 0x1edde274da0 <line:2585:13, col:24> 'int' '>'
|     | | | |-ImplicitCastExpr 0x1edde274d88 <col:13, col:14> 'int' <LValueToRValue>
|     | | | | `-UnaryOperator 0x1edde274d48 <col:13, col:14> 'int' lvalue prefix '*' cannot overflow
|     | | | |   `-ImplicitCastExpr 0x1edde274d30 <col:14> 'int *' <LValueToRValue>
|     | | | |     `-DeclRefExpr 0x1edde274d10 <col:14> 'int *' lvalue Var 0x1edde27aff0 'buf_len' 'int *'
|     | | | `-IntegerLiteral 0x1edde274d60 <col:24> 'int' 0
|     | | `-CompoundStmt 0x1edde283150 <col:27, line:2617:9>
|     | |   |-DeclStmt 0x1edde274e40 <line:2586:13, col:35>
|     | |   | `-VarDecl 0x1edde274dd8 <col:13, col:26> col:26 used remaining 'unsigned int'
|     | |   |-IfStmt 0x1edde2823e8 <line:2589:13, line:2593:13>
|     | |   | |-BinaryOperator 0x1edde274f88 <line:2589:17, col:29> 'int' '>'
|     | |   | | |-ImplicitCastExpr 0x1edde274f70 <col:17> 'unsigned long long' <IntegralCast>
|     | |   | | | `-ImplicitCastExpr 0x1edde274f40 <col:17> 'unsigned int' <LValueToRValue>
|     | |   | | |   `-DeclRefExpr 0x1edde274f00 <col:17> 'unsigned int' lvalue Var 0x1edde274dd8 'remaining' 'unsigned int'
|     | |   | | `-ImplicitCastExpr 0x1edde274f58 <col:29> 'size_t':'unsigned long long' <LValueToRValue>
|     | |   | |   `-DeclRefExpr 0x1edde274f20 <col:29> 'size_t':'unsigned long long' lvalue ParmVar 0x1edde27adb8 'len' 'size_t':'unsigned long long'
|     | |   | `-CompoundStmt 0x1edde2823c0 <col:34, line:2593:13>
|     | |   |   |-CallExpr 0x1edde282218 <line:2590:17, col:49> 'void *'
|     | |   |   | |-ImplicitCastExpr 0x1edde282200 <col:17> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|     | |   |   | | `-DeclRefExpr 0x1edde274fa8 <col:17> 'void *(void *, const void *, unsigned long long)' Function 0x1edde16ea88 'memcpy' 'void *(void *, const void *, unsigned long long)'
|     | |   |   | |-ImplicitCastExpr 0x1edde282250 <col:24, col:39> 'void *' <BitCast>
|     | |   |   | | `-BinaryOperator 0x1edde282170 <col:24, col:39> 'unsigned char *' '+'
|     | |   |   | |   |-ImplicitCastExpr 0x1edde282140 <col:24> 'unsigned char *' <LValueToRValue>
|     | |   |   | |   | `-DeclRefExpr 0x1edde274fc8 <col:24> 'unsigned char *' lvalue Var 0x1edde27af58 'buf' 'unsigned char *'
|     | |   |   | |   `-ImplicitCastExpr 0x1edde282158 <col:30, col:39> 'int' <LValueToRValue>
|     | |   |   | |     `-ParenExpr 0x1edde275038 <col:30, col:39> 'int' lvalue
|     | |   |   | |       `-UnaryOperator 0x1edde275020 <col:31, col:32> 'int' lvalue prefix '*' cannot overflow
|     | |   |   | |         `-ImplicitCastExpr 0x1edde275008 <col:32> 'int *' <LValueToRValue>
|     | |   |   | |           `-DeclRefExpr 0x1edde274fe8 <col:32> 'int *' lvalue Var 0x1edde27aff0 'buf_len' 'int *'
|     | |   |   | |-ImplicitCastExpr 0x1edde282280 <col:42> 'const void *' <BitCast>
|     | |   |   | | `-ImplicitCastExpr 0x1edde282268 <col:42> 'const unsigned char *' <LValueToRValue>
|     | |   |   | |   `-DeclRefExpr 0x1edde282190 <col:42> 'const unsigned char *' lvalue ParmVar 0x1edde27ad40 'in' 'const unsigned char *'
|     | |   |   | `-ImplicitCastExpr 0x1edde282298 <col:46> 'size_t':'unsigned long long' <LValueToRValue>
|     | |   |   |   `-DeclRefExpr 0x1edde2821b0 <col:46> 'size_t':'unsigned long long' lvalue ParmVar 0x1edde27adb8 'len' 'size_t':'unsigned long long'
|     | |   |   |-CompoundAssignOperator 0x1edde282358 <line:2591:17, col:31> 'int' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|     | |   |   | |-UnaryOperator 0x1edde282308 <col:17, col:26> 'int' lvalue prefix '*' cannot overflow
|     | |   |   | | `-ImplicitCastExpr 0x1edde2822f0 <col:18, col:26> 'int *' <LValueToRValue>
|     | |   |   | |   `-ParenExpr 0x1edde2822d0 <col:18, col:26> 'int *' lvalue
|     | |   |   | |     `-DeclRefExpr 0x1edde2822b0 <col:19> 'int *' lvalue Var 0x1edde27aff0 'buf_len' 'int *'
|     | |   |   | `-ImplicitCastExpr 0x1edde282340 <col:31> 'size_t':'unsigned long long' <LValueToRValue>
|     | |   |   |   `-DeclRefExpr 0x1edde282320 <col:31> 'size_t':'unsigned long long' lvalue ParmVar 0x1edde27adb8 'len' 'size_t':'unsigned long long'
|     | |   |   `-ReturnStmt 0x1edde2823b0 <line:2592:17, col:24>
|     | |   |     `-IntegerLiteral 0x1edde282388 <col:24> 'int' 0
|     | |   |-CallExpr 0x1edde282588 <line:2594:13, col:51> 'void *'
|     | |   | |-ImplicitCastExpr 0x1edde282570 <col:13> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|     | |   | | `-DeclRefExpr 0x1edde282400 <col:13> 'void *(void *, const void *, unsigned long long)' Function 0x1edde16ea88 'memcpy' 'void *(void *, const void *, unsigned long long)'
|     | |   | |-ImplicitCastExpr 0x1edde2825c0 <col:20, col:35> 'void *' <BitCast>
|     | |   | | `-BinaryOperator 0x1edde2824e0 <col:20, col:35> 'unsigned char *' '+'
|     | |   | |   |-ImplicitCastExpr 0x1edde2824b0 <col:20> 'unsigned char *' <LValueToRValue>
|     | |   | |   | `-DeclRefExpr 0x1edde282420 <col:20> 'unsigned char *' lvalue Var 0x1edde27af58 'buf' 'unsigned char *'
|     | |   | |   `-ImplicitCastExpr 0x1edde2824c8 <col:26, col:35> 'int' <LValueToRValue>
|     | |   | |     `-ParenExpr 0x1edde282490 <col:26, col:35> 'int' lvalue
|     | |   | |       `-UnaryOperator 0x1edde282478 <col:27, col:28> 'int' lvalue prefix '*' cannot overflow
|     | |   | |         `-ImplicitCastExpr 0x1edde282460 <col:28> 'int *' <LValueToRValue>
|     | |   | |           `-DeclRefExpr 0x1edde282440 <col:28> 'int *' lvalue Var 0x1edde27aff0 'buf_len' 'int *'
|     | |   | |-ImplicitCastExpr 0x1edde2825f0 <col:38> 'const void *' <BitCast>
|     | |   | | `-ImplicitCastExpr 0x1edde2825d8 <col:38> 'const unsigned char *' <LValueToRValue>
|     | |   | |   `-DeclRefExpr 0x1edde282500 <col:38> 'const unsigned char *' lvalue ParmVar 0x1edde27ad40 'in' 'const unsigned char *'
|     | |   | `-ImplicitCastExpr 0x1edde282620 <col:42> 'unsigned long long' <IntegralCast>
|     | |   |   `-ImplicitCastExpr 0x1edde282608 <col:42> 'unsigned int' <LValueToRValue>
|     | |   |     `-DeclRefExpr 0x1edde282520 <col:42> 'unsigned int' lvalue Var 0x1edde274dd8 'remaining' 'unsigned int'
|     | |   |-CompoundAssignOperator 0x1edde2826a8 <line:2599:13, col:20> 'size_t':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|     | |   | |-DeclRefExpr 0x1edde282638 <col:13> 'size_t':'unsigned long long' lvalue ParmVar 0x1edde27adb8 'len' 'size_t':'unsigned long long'
|     | |   | `-ImplicitCastExpr 0x1edde282690 <col:20> 'unsigned long long' <IntegralCast>
|     | |   |   `-ImplicitCastExpr 0x1edde282678 <col:20> 'unsigned int' <LValueToRValue>
|     | |   |     `-DeclRefExpr 0x1edde282658 <col:20> 'unsigned int' lvalue Var 0x1edde274dd8 'remaining' 'unsigned int'
|     | |   |-CompoundAssignOperator 0x1edde282730 <line:2600:13, col:19> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|     | |   | |-DeclRefExpr 0x1edde2826d8 <col:13> 'const unsigned char *' lvalue ParmVar 0x1edde27ad40 'in' 'const unsigned char *'
|     | |   | `-ImplicitCastExpr 0x1edde282718 <col:19> 'unsigned int' <LValueToRValue>
|     | |   |   `-DeclRefExpr 0x1edde2826f8 <col:19> 'unsigned int' lvalue Var 0x1edde274dd8 'remaining' 'unsigned int'
|     | |   |-IfStmt 0x1edde282ef8 <line:2601:13, line:2612:13> has_else
|     | |   | |-BinaryOperator 0x1edde282838 <line:2601:17, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|     | |   | | |-ImplicitCastExpr 0x1edde282808 <.//openssl//file_jk/before\crypto\evp\e_aes.c:2601:17> 'unsigned char *' <LValueToRValue>
|     | |   | | | `-DeclRefExpr 0x1edde282760 <col:17> 'unsigned char *' lvalue ParmVar 0x1edde27acc0 'out' 'unsigned char *'
|     | |   | | `-ImplicitCastExpr 0x1edde282820 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'unsigned char *' <BitCast>
|     | |   | |   `-ParenExpr 0x1edde2827e8 <col:17, col:27> 'void *'
|     | |   | |     `-CStyleCastExpr 0x1edde2827c0 <col:18, col:26> 'void *' <NullToPointer>
|     | |   | |       `-IntegerLiteral 0x1edde282780 <col:26> 'int' 0
|     | |   | |-CompoundStmt 0x1edde282a40 <.//openssl//file_jk/before\crypto\evp\e_aes.c:2601:30, line:2604:13>
|     | |   | | `-IfStmt 0x1edde282a28 <line:2602:17, line:2603:29>
|     | |   | |   |-OpaqueValueExpr 0x1edde282a10 <<invalid sloc>> '_Bool'
|     | |   | |   `-ReturnStmt 0x1edde282a00 <col:21, col:29>
|     | |   | |     `-UnaryOperator 0x1edde2829e8 <col:28, col:29> 'int' prefix '-'
|     | |   | |       `-IntegerLiteral 0x1edde2829c0 <col:29> 'int' 1
|     | |   | `-IfStmt 0x1edde282ed0 <line:2604:20, line:2612:13> has_else
|     | |   |   |-OpaqueValueExpr 0x1edde282eb8 <<invalid sloc>> '_Bool'
|     | |   |   |-CompoundStmt 0x1edde282c80 <line:2604:56, line:2608:13>
|     | |   |   | `-IfStmt 0x1edde282c68 <line:2605:17, line:2607:29>
|     | |   |   |   |-OpaqueValueExpr 0x1edde282c50 <<invalid sloc>> '_Bool'
|     | |   |   |   `-ReturnStmt 0x1edde282c40 <col:21, col:29>
|     | |   |   |     `-UnaryOperator 0x1edde282c28 <col:28, col:29> 'int' prefix '-'
|     | |   |   |       `-IntegerLiteral 0x1edde282c00 <col:29> 'int' 1
|     | |   |   `-CompoundStmt 0x1edde282ea0 <line:2608:20, line:2612:13>
|     | |   |     `-IfStmt 0x1edde282e88 <line:2609:17, line:2611:29>
|     | |   |       |-OpaqueValueExpr 0x1edde282e70 <<invalid sloc>> '_Bool'
|     | |   |       `-ReturnStmt 0x1edde282e60 <col:21, col:29>
|     | |   |         `-UnaryOperator 0x1edde282e48 <col:28, col:29> 'int' prefix '-'
|     | |   |           `-IntegerLiteral 0x1edde282e20 <col:29> 'int' 1
|     | |   `-BinaryOperator 0x1edde282fd0 <line:2614:13, col:24> 'int' '='
|     | |     |-UnaryOperator 0x1edde282f90 <col:13, col:14> 'int' lvalue prefix '*' cannot overflow
|     | |     | `-ImplicitCastExpr 0x1edde282f78 <col:14> 'int *' <LValueToRValue>
|     | |     |   `-DeclRefExpr 0x1edde282f58 <col:14> 'int *' lvalue Var 0x1edde27aff0 'buf_len' 'int *'
|     | |     `-IntegerLiteral 0x1edde282fa8 <col:24> 'int' 0
|     | |-IfStmt 0x1edde283b20 <line:2625:9, line:2640:9>
|     | | |-BinaryOperator 0x1edde283278 <line:2625:13, col:20> 'int' '!='
|     | | | |-ImplicitCastExpr 0x1edde283248 <col:13> 'size_t':'unsigned long long' <LValueToRValue>
|     | | | | `-DeclRefExpr 0x1edde283208 <col:13> 'size_t':'unsigned long long' lvalue ParmVar 0x1edde27adb8 'len' 'size_t':'unsigned long long'
|     | | | `-ImplicitCastExpr 0x1edde283260 <col:20> 'size_t':'unsigned long long' <LValueToRValue>
|     | | |   `-DeclRefExpr 0x1edde283228 <col:20> 'size_t':'unsigned long long' lvalue Var 0x1edde274118 'trailing_len' 'size_t':'unsigned long long'
|     | | `-CompoundStmt 0x1edde283af8 <col:34, line:2640:9>
|     | |   |-IfStmt 0x1edde283910 <line:2626:13, line:2637:13> has_else
|     | |   | |-BinaryOperator 0x1edde283370 <line:2626:17, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|     | |   | | |-ImplicitCastExpr 0x1edde283340 <.//openssl//file_jk/before\crypto\evp\e_aes.c:2626:17> 'unsigned char *' <LValueToRValue>
|     | |   | | | `-DeclRefExpr 0x1edde283298 <col:17> 'unsigned char *' lvalue ParmVar 0x1edde27acc0 'out' 'unsigned char *'
|     | |   | | `-ImplicitCastExpr 0x1edde283358 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'unsigned char *' <BitCast>
|     | |   | |   `-ParenExpr 0x1edde283320 <col:17, col:27> 'void *'
|     | |   | |     `-CStyleCastExpr 0x1edde2832f8 <col:18, col:26> 'void *' <NullToPointer>
|     | |   | |       `-IntegerLiteral 0x1edde2832b8 <col:26> 'int' 0
|     | |   | |-CompoundStmt 0x1edde283518 <.//openssl//file_jk/before\crypto\evp\e_aes.c:2626:30, line:2629:13>
|     | |   | | `-IfStmt 0x1edde283500 <line:2627:17, line:2628:29>
|     | |   | |   |-OpaqueValueExpr 0x1edde2834e8 <<invalid sloc>> '_Bool'
|     | |   | |   `-ReturnStmt 0x1edde2834d8 <col:21, col:29>
|     | |   | |     `-UnaryOperator 0x1edde2834c0 <col:28, col:29> 'int' prefix '-'
|     | |   | |       `-IntegerLiteral 0x1edde283498 <col:29> 'int' 1
|     | |   | `-IfStmt 0x1edde2838e8 <line:2629:20, line:2637:13> has_else
|     | |   |   |-OpaqueValueExpr 0x1edde2838d0 <<invalid sloc>> '_Bool'
|     | |   |   |-CompoundStmt 0x1edde2836f8 <line:2629:56, line:2633:13>
|     | |   |   | `-IfStmt 0x1edde2836e0 <line:2630:17, line:2632:29>
|     | |   |   |   |-OpaqueValueExpr 0x1edde2836c8 <<invalid sloc>> '_Bool'
|     | |   |   |   `-ReturnStmt 0x1edde2836b8 <col:21, col:29>
|     | |   |   |     `-UnaryOperator 0x1edde2836a0 <col:28, col:29> 'int' prefix '-'
|     | |   |   |       `-IntegerLiteral 0x1edde283678 <col:29> 'int' 1
|     | |   |   `-CompoundStmt 0x1edde2838b8 <line:2633:20, line:2637:13>
|     | |   |     `-IfStmt 0x1edde2838a0 <line:2634:17, line:2636:29>
|     | |   |       |-OpaqueValueExpr 0x1edde283888 <<invalid sloc>> '_Bool'
|     | |   |       `-ReturnStmt 0x1edde283878 <col:21, col:29>
|     | |   |         `-UnaryOperator 0x1edde283860 <col:28, col:29> 'int' prefix '-'
|     | |   |           `-IntegerLiteral 0x1edde283838 <col:29> 'int' 1
|     | |   |-CompoundAssignOperator 0x1edde2839e8 <line:2638:13, col:34> 'int' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|     | |   | |-DeclRefExpr 0x1edde283938 <col:13> 'int' lvalue Var 0x1edde274060 'written_len' 'int'
|     | |   | `-BinaryOperator 0x1edde2839c8 <col:28, col:34> 'unsigned long long' '-'
|     | |   |   |-ImplicitCastExpr 0x1edde283998 <col:28> 'size_t':'unsigned long long' <LValueToRValue>
|     | |   |   | `-DeclRefExpr 0x1edde283958 <col:28> 'size_t':'unsigned long long' lvalue ParmVar 0x1edde27adb8 'len' 'size_t':'unsigned long long'
|     | |   |   `-ImplicitCastExpr 0x1edde2839b0 <col:34> 'size_t':'unsigned long long' <LValueToRValue>
|     | |   |     `-DeclRefExpr 0x1edde283978 <col:34> 'size_t':'unsigned long long' lvalue Var 0x1edde274118 'trailing_len' 'size_t':'unsigned long long'
|     | |   `-CompoundAssignOperator 0x1edde283ac8 <line:2639:13, col:25> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|     | |     |-DeclRefExpr 0x1edde283a18 <col:13> 'const unsigned char *' lvalue ParmVar 0x1edde27ad40 'in' 'const unsigned char *'
|     | |     `-BinaryOperator 0x1edde283aa8 <col:19, col:25> 'unsigned long long' '-'
|     | |       |-ImplicitCastExpr 0x1edde283a78 <col:19> 'size_t':'unsigned long long' <LValueToRValue>
|     | |       | `-DeclRefExpr 0x1edde283a38 <col:19> 'size_t':'unsigned long long' lvalue ParmVar 0x1edde27adb8 'len' 'size_t':'unsigned long long'
|     | |       `-ImplicitCastExpr 0x1edde283a90 <col:25> 'size_t':'unsigned long long' <LValueToRValue>
|     | |         `-DeclRefExpr 0x1edde283a58 <col:25> 'size_t':'unsigned long long' lvalue Var 0x1edde274118 'trailing_len' 'size_t':'unsigned long long'
|     | |-IfStmt 0x1edde283e40 <line:2643:9, line:2646:9>
|     | | |-BinaryOperator 0x1edde283bb0 <line:2643:13, col:28> 'int' '>'
|     | | | |-ImplicitCastExpr 0x1edde283b80 <col:13> 'size_t':'unsigned long long' <LValueToRValue>
|     | | | | `-DeclRefExpr 0x1edde283b38 <col:13> 'size_t':'unsigned long long' lvalue Var 0x1edde274118 'trailing_len' 'size_t':'unsigned long long'
|     | | | `-ImplicitCastExpr 0x1edde283b98 <col:28> 'unsigned long long' <IntegralCast>
|     | | |   `-IntegerLiteral 0x1edde283b58 <col:28> 'int' 0
|     | | `-CompoundStmt 0x1edde283e20 <col:31, line:2646:9>
|     | |   |-CallExpr 0x1edde283cb0 <line:2644:13, col:41> 'void *'
|     | |   | |-ImplicitCastExpr 0x1edde283c98 <col:13> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|     | |   | | `-DeclRefExpr 0x1edde283bd0 <col:13> 'void *(void *, const void *, unsigned long long)' Function 0x1edde16ea88 'memcpy' 'void *(void *, const void *, unsigned long long)'
|     | |   | |-ImplicitCastExpr 0x1edde283d00 <col:20> 'void *' <BitCast>
|     | |   | | `-ImplicitCastExpr 0x1edde283ce8 <col:20> 'unsigned char *' <LValueToRValue>
|     | |   | |   `-DeclRefExpr 0x1edde283bf0 <col:20> 'unsigned char *' lvalue Var 0x1edde27af58 'buf' 'unsigned char *'
|     | |   | |-ImplicitCastExpr 0x1edde283d30 <col:25> 'const void *' <BitCast>
|     | |   | | `-ImplicitCastExpr 0x1edde283d18 <col:25> 'const unsigned char *' <LValueToRValue>
|     | |   | |   `-DeclRefExpr 0x1edde283c10 <col:25> 'const unsigned char *' lvalue ParmVar 0x1edde27ad40 'in' 'const unsigned char *'
|     | |   | `-ImplicitCastExpr 0x1edde283d48 <col:29> 'size_t':'unsigned long long' <LValueToRValue>
|     | |   |   `-DeclRefExpr 0x1edde283c30 <col:29> 'size_t':'unsigned long long' lvalue Var 0x1edde274118 'trailing_len' 'size_t':'unsigned long long'
|     | |   `-BinaryOperator 0x1edde283e00 <line:2645:13, col:24> 'int' '='
|     | |     |-UnaryOperator 0x1edde283d98 <col:13, col:14> 'int' lvalue prefix '*' cannot overflow
|     | |     | `-ImplicitCastExpr 0x1edde283d80 <col:14> 'int *' <LValueToRValue>
|     | |     |   `-DeclRefExpr 0x1edde283d60 <col:14> 'int *' lvalue Var 0x1edde27aff0 'buf_len' 'int *'
|     | |     `-ImplicitCastExpr 0x1edde283de8 <col:24> 'int' <IntegralCast>
|     | |       `-ImplicitCastExpr 0x1edde283dd0 <col:24> 'size_t':'unsigned long long' <LValueToRValue>
|     | |         `-DeclRefExpr 0x1edde283db0 <col:24> 'size_t':'unsigned long long' lvalue Var 0x1edde274118 'trailing_len' 'size_t':'unsigned long long'
|     | `-ReturnStmt 0x1edde283e90 <line:2648:9, col:16>
|     |   `-ImplicitCastExpr 0x1edde283e78 <col:16> 'int' <LValueToRValue>
|     |     `-DeclRefExpr 0x1edde283e58 <col:16> 'int' lvalue Var 0x1edde274060 'written_len' 'int'
|     `-CompoundStmt 0x1edde27c148 <line:2649:12, line:2689:5>
|       |-IfStmt 0x1edde27e510 <line:2654:9, line:2666:9>
|       | |-BinaryOperator 0x1edde283f80 <line:2654:13, col:34> 'int' '>'
|       | | |-ImplicitCastExpr 0x1edde283f68 <col:13, col:19> 'int' <LValueToRValue>
|       | | | `-MemberExpr 0x1edde283f10 <col:13, col:19> 'int' lvalue ->data_buf_len 0x1edde2114a8
|       | | |   `-ImplicitCastExpr 0x1edde283ef8 <col:13> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|       | | |     `-DeclRefExpr 0x1edde283ed8 <col:13> 'EVP_AES_OCB_CTX *' lvalue Var 0x1edde2741a8 'octx' 'EVP_AES_OCB_CTX *'
|       | | `-IntegerLiteral 0x1edde283f40 <col:34> 'int' 0
|       | `-CompoundStmt 0x1edde27e4e8 <col:37, line:2666:9>
|       |   |-IfStmt 0x1edde27e350 <line:2655:13, line:2663:13> has_else
|       |   | |-OpaqueValueExpr 0x1edde27e338 <<invalid sloc>> '_Bool'
|       |   | |-CompoundStmt 0x1edde27e140 <line:2655:49, line:2659:13>
|       |   | | `-IfStmt 0x1edde27e128 <line:2656:17, line:2658:29>
|       |   | |   |-OpaqueValueExpr 0x1edde27e110 <<invalid sloc>> '_Bool'
|       |   | |   `-ReturnStmt 0x1edde27e100 <col:21, col:29>
|       |   | |     `-UnaryOperator 0x1edde284130 <col:28, col:29> 'int' prefix '-'
|       |   | |       `-IntegerLiteral 0x1edde284108 <col:29> 'int' 1
|       |   | `-CompoundStmt 0x1edde27e320 <line:2659:20, line:2663:13>
|       |   |   `-IfStmt 0x1edde27e308 <line:2660:17, line:2662:29>
|       |   |     |-OpaqueValueExpr 0x1edde27e2f0 <<invalid sloc>> '_Bool'
|       |   |     `-ReturnStmt 0x1edde27e2e0 <col:21, col:29>
|       |   |       `-UnaryOperator 0x1edde27e2c8 <col:28, col:29> 'int' prefix '-'
|       |   |         `-IntegerLiteral 0x1edde27e2a0 <col:29> 'int' 1
|       |   |-BinaryOperator 0x1edde27e418 <line:2664:13, col:33> 'int' '='
|       |   | |-DeclRefExpr 0x1edde27e378 <col:13> 'int' lvalue Var 0x1edde274060 'written_len' 'int'
|       |   | `-ImplicitCastExpr 0x1edde27e400 <col:27, col:33> 'int' <LValueToRValue>
|       |   |   `-MemberExpr 0x1edde27e3d0 <col:27, col:33> 'int' lvalue ->data_buf_len 0x1edde2114a8
|       |   |     `-ImplicitCastExpr 0x1edde27e3b8 <col:27> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|       |   |       `-DeclRefExpr 0x1edde27e398 <col:27> 'EVP_AES_OCB_CTX *' lvalue Var 0x1edde2741a8 'octx' 'EVP_AES_OCB_CTX *'
|       |   `-BinaryOperator 0x1edde27e4c8 <line:2665:13, col:34> 'int' '='
|       |     |-MemberExpr 0x1edde27e470 <col:13, col:19> 'int' lvalue ->data_buf_len 0x1edde2114a8
|       |     | `-ImplicitCastExpr 0x1edde27e458 <col:13> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|       |     |   `-DeclRefExpr 0x1edde27e438 <col:13> 'EVP_AES_OCB_CTX *' lvalue Var 0x1edde2741a8 'octx' 'EVP_AES_OCB_CTX *'
|       |     `-IntegerLiteral 0x1edde27e4a0 <col:34> 'int' 0
|       |-IfStmt 0x1edde27e868 <line:2667:9, line:2672:9>
|       | |-BinaryOperator 0x1edde27e5d0 <line:2667:13, col:33> 'int' '>'
|       | | |-ImplicitCastExpr 0x1edde27e5b8 <col:13, col:19> 'int' <LValueToRValue>
|       | | | `-MemberExpr 0x1edde27e560 <col:13, col:19> 'int' lvalue ->aad_buf_len 0x1edde211518
|       | | |   `-ImplicitCastExpr 0x1edde27e548 <col:13> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|       | | |     `-DeclRefExpr 0x1edde27e528 <col:13> 'EVP_AES_OCB_CTX *' lvalue Var 0x1edde2741a8 'octx' 'EVP_AES_OCB_CTX *'
|       | | `-IntegerLiteral 0x1edde27e590 <col:33> 'int' 0
|       | `-CompoundStmt 0x1edde27e848 <col:36, line:2672:9>
|       |   |-IfStmt 0x1edde27e780 <line:2668:13, line:2670:25>
|       |   | |-OpaqueValueExpr 0x1edde27e768 <<invalid sloc>> '_Bool'
|       |   | `-ReturnStmt 0x1edde27e758 <col:17, col:25>
|       |   |   `-UnaryOperator 0x1edde27e740 <col:24, col:25> 'int' prefix '-'
|       |   |     `-IntegerLiteral 0x1edde27e718 <col:25> 'int' 1
|       |   `-BinaryOperator 0x1edde27e828 <line:2671:13, col:33> 'int' '='
|       |     |-MemberExpr 0x1edde27e7d0 <col:13, col:19> 'int' lvalue ->aad_buf_len 0x1edde211518
|       |     | `-ImplicitCastExpr 0x1edde27e7b8 <col:13> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|       |     |   `-DeclRefExpr 0x1edde27e798 <col:13> 'EVP_AES_OCB_CTX *' lvalue Var 0x1edde2741a8 'octx' 'EVP_AES_OCB_CTX *'
|       |     `-IntegerLiteral 0x1edde27e800 <col:33> 'int' 0
|       |-IfStmt 0x1edde27edd0 <line:2674:9, line:2682:9>
|       | |-OpaqueValueExpr 0x1edde27edb8 <<invalid sloc>> '_Bool'
|       | `-CompoundStmt 0x1edde27ed88 <line:2674:46, line:2682:9>
|       |   |-IfStmt 0x1edde27e9b8 <line:2675:13, line:2676:25>
|       |   | |-BinaryOperator 0x1edde27e948 <line:2675:17, col:32> 'int' '<'
|       |   | | |-ImplicitCastExpr 0x1edde27e930 <col:17, col:23> 'int' <LValueToRValue>
|       |   | | | `-MemberExpr 0x1edde27e8d8 <col:17, col:23> 'int' lvalue ->taglen 0x1edde2115f8
|       |   | | |   `-ImplicitCastExpr 0x1edde27e8c0 <col:17> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|       |   | | |     `-DeclRefExpr 0x1edde27e8a0 <col:17> 'EVP_AES_OCB_CTX *' lvalue Var 0x1edde2741a8 'octx' 'EVP_AES_OCB_CTX *'
|       |   | | `-IntegerLiteral 0x1edde27e908 <col:32> 'int' 0
|       |   | `-ReturnStmt 0x1edde27e9a8 <line:2676:17, col:25>
|       |   |   `-UnaryOperator 0x1edde27e990 <col:24, col:25> 'int' prefix '-'
|       |   |     `-IntegerLiteral 0x1edde27e968 <col:25> 'int' 1
|       |   |-IfStmt 0x1edde27ec78 <line:2677:13, line:2679:25>
|       |   | |-OpaqueValueExpr 0x1edde27ec60 <<invalid sloc>> '_Bool'
|       |   | `-ReturnStmt 0x1edde27ec50 <col:17, col:25>
|       |   |   `-UnaryOperator 0x1edde27ec38 <col:24, col:25> 'int' prefix '-'
|       |   |     `-IntegerLiteral 0x1edde27ec10 <col:25> 'int' 1
|       |   |-BinaryOperator 0x1edde27ed20 <line:2680:13, col:28> 'int' '='
|       |   | |-MemberExpr 0x1edde27ecc8 <col:13, col:19> 'int' lvalue ->iv_set 0x1edde216158
|       |   | | `-ImplicitCastExpr 0x1edde27ecb0 <col:13> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|       |   | |   `-DeclRefExpr 0x1edde27ec90 <col:13> 'EVP_AES_OCB_CTX *' lvalue Var 0x1edde2741a8 'octx' 'EVP_AES_OCB_CTX *'
|       |   | `-IntegerLiteral 0x1edde27ecf8 <col:28> 'int' 0
|       |   `-ReturnStmt 0x1edde27ed78 <line:2681:13, col:20>
|       |     `-ImplicitCastExpr 0x1edde27ed60 <col:20> 'int' <LValueToRValue>
|       |       `-DeclRefExpr 0x1edde27ed40 <col:20> 'int' lvalue Var 0x1edde274060 'written_len' 'int'
|       |-IfStmt 0x1edde27f050 <line:2684:9, line:2685:21>
|       | |-OpaqueValueExpr 0x1edde27f038 <<invalid sloc>> '_Bool'
|       | `-ReturnStmt 0x1edde27f028 <col:13, col:21>
|       |   `-UnaryOperator 0x1edde27f010 <col:20, col:21> 'int' prefix '-'
|       |     `-IntegerLiteral 0x1edde27efe8 <col:21> 'int' 1
|       |-BinaryOperator 0x1edde27c0e0 <line:2687:9, col:24> 'int' '='
|       | |-MemberExpr 0x1edde27f0a0 <col:9, col:15> 'int' lvalue ->iv_set 0x1edde216158
|       | | `-ImplicitCastExpr 0x1edde27f088 <col:9> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1edde27f068 <col:9> 'EVP_AES_OCB_CTX *' lvalue Var 0x1edde2741a8 'octx' 'EVP_AES_OCB_CTX *'
|       | `-IntegerLiteral 0x1edde27f0d0 <col:24> 'int' 0
|       `-ReturnStmt 0x1edde27c138 <line:2688:9, col:16>
|         `-ImplicitCastExpr 0x1edde27c120 <col:16> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x1edde27c100 <col:16> 'int' lvalue Var 0x1edde274060 'written_len' 'int'
|-FunctionDecl 0x1edde27c2b0 <line:2692:1, line:2697:1> line:2692:12 invalid aes_ocb_cleanup 'int (int *)' static
| |-ParmVarDecl 0x1edde27c218 <col:28, col:44> col:44 invalid c 'int *'
| `-CompoundStmt 0x1edde27c5b8 <line:2693:1, line:2697:1>
|   |-DeclStmt 0x1edde27c408 <line:2694:5, col:58>
|   | `-VarDecl 0x1edde27c380 <col:5, col:22> col:22 used octx 'EVP_AES_OCB_CTX *'
|   `-ReturnStmt 0x1edde27c5a8 <line:2696:5, col:12>
|     `-IntegerLiteral 0x1edde27c580 <col:12> 'int' 1
|-VarDecl 0x1edde27c5f0 <line:967:74, <scratch space>:252:1> col:1 invalid aes_128_ocb 'const int' static
|-FunctionDecl 0x1edde27c9b0 <.//openssl//file_jk/before\crypto\evp\e_aes.c:976:45, line:978:34> <scratch space>:273:1 invalid EVP_aes_128_ocb 'const int *(void)'
| `-CompoundStmt 0x1edde27ca68 <.//openssl//file_jk/before\crypto\evp\e_aes.c:977:51, line:978:34>
|-VarDecl 0x1edde27ca90 <line:967:74, <scratch space>:279:1> col:1 invalid aes_192_ocb 'const int' static
|-FunctionDecl 0x1edde27ce50 <.//openssl//file_jk/before\crypto\evp\e_aes.c:976:45, line:978:34> <scratch space>:300:1 invalid EVP_aes_192_ocb 'const int *(void)'
| `-CompoundStmt 0x1edde27cf08 <.//openssl//file_jk/before\crypto\evp\e_aes.c:977:51, line:978:34>
|-VarDecl 0x1edde27cf30 <line:967:74, <scratch space>:306:1> col:1 invalid aes_256_ocb 'const int' static
`-FunctionDecl 0x1edde281340 <.//openssl//file_jk/before\crypto\evp\e_aes.c:976:45, line:978:34> <scratch space>:21:1 invalid EVP_aes_256_ocb 'const int *(void)'
  `-CompoundStmt 0x1edde2813f8 <.//openssl//file_jk/before\crypto\evp\e_aes.c:977:51, line:978:34>
