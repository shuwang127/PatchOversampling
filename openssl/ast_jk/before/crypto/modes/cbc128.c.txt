TranslationUnitDecl 0x2159a095ff8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x2159a096890 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x2159a096590 '__int128'
|-TypedefDecl 0x2159a096900 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x2159a0965b0 'unsigned __int128'
|-TypedefDecl 0x2159a096c38 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x2159a0969f0 'struct __NSConstantString_tag'
|   `-Record 0x2159a096958 '__NSConstantString_tag'
|-TypedefDecl 0x2159a096ca8 <<invalid sloc>> <invalid sloc> implicit referenced size_t 'unsigned long long'
| `-BuiltinType 0x2159a0961d0 'unsigned long long'
|-TypedefDecl 0x2159a096d40 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x2159a096d00 'char *'
|   `-BuiltinType 0x2159a096090 'char'
|-TypedefDecl 0x2159a096db0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x2159a096d00 'char *'
|   `-BuiltinType 0x2159a096090 'char'
|-TypedefDecl 0x2159a096e20 <.//openssl//file_jk/before\crypto\modes/modes_lcl.h:13:1, col:17> col:17 i64 'long long'
| `-BuiltinType 0x2159a096130 'long long'
|-TypedefDecl 0x2159a096e90 <line:14:1, col:26> col:26 referenced u64 'unsigned long long'
| `-BuiltinType 0x2159a0961d0 'unsigned long long'
|-TypedefDecl 0x2159a096f00 <line:26:1, col:22> col:22 referenced u32 'unsigned int'
| `-BuiltinType 0x2159a096190 'unsigned int'
|-TypedefDecl 0x2159a096f70 <line:27:1, col:23> col:23 referenced u8 'unsigned char'
| `-BuiltinType 0x2159a096150 'unsigned char'
|-RecordDecl 0x2159ba88e40 <line:94:32, line:96:1> line:94:32 struct definition
| |-FieldDecl 0x2159ba88f30 <line:95:5, col:9> col:9 hi 'u64':'unsigned long long'
| `-FieldDecl 0x2159ba88f98 <col:5, col:13> col:13 lo 'u64':'unsigned long long'
|-TypedefDecl 0x2159ba89048 <line:94:24, line:96:3> col:3 referenced u128 'struct u128':'u128'
| `-ElaboratedType 0x2159ba88ff0 'struct u128' sugar
|   `-RecordType 0x2159ba88ee0 'u128'
|     `-Record 0x2159ba88e40 ''
|-RecordDecl 0x2159ba890b8 <line:107:1, line:130:1> line:107:8 invalid struct gcm128_context definition
| |-RecordDecl 0x2159ba89170 <line:109:5, line:114:5> line:109:5 union definition
| | |-FieldDecl 0x2159ba89308 <line:110:9, col:16> col:13 u 'u64 [2]'
| | |-FieldDecl 0x2159ba89458 <line:111:9, col:16> col:13 d 'u32 [4]'
| | |-FieldDecl 0x2159ba895a8 <line:112:9, col:16> col:12 c 'u8 [16]'
| | `-FieldDecl 0x2159ba89728 <line:113:9, col:37> col:16 t 'size_t [2]'
| |-FieldDecl 0x2159ba897d8 <line:109:5, line:114:7> col:7 Yi 'union (anonymous union at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x2159ba89850 <line:109:5, line:114:11> col:11 EKi 'union (anonymous union at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x2159ba898c8 <line:109:5, line:114:16> col:16 EK0 'union (anonymous union at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x2159ba89940 <line:109:5, line:114:21> col:21 len 'union (anonymous union at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x2159ba899b8 <line:109:5, line:114:26> col:26 Xi 'union (anonymous union at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x2159ba89a30 <line:109:5, line:114:30> col:30 H 'union (anonymous union at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x2159ba89be8 <line:122:5, col:19> col:10 Htable 'u128 [16]'
| |-FieldDecl 0x2159ba8e108 <line:123:5, col:52> col:12 gmult 'void (*)(u64 *, const u128 *)'
| |-FieldDecl 0x2159ba8e618 <line:124:5, line:125:30> line:124:12 ghash 'void (*)(u64 *, const u128 *, const u8 *, size_t)'
| |-FieldDecl 0x2159ba8e688 <line:127:5, col:18> col:18 mres 'unsigned int'
| |-FieldDecl 0x2159ba8e6f8 <col:5, col:24> col:24 ares 'unsigned int'
| |-FieldDecl 0x2159ba8e768 <line:128:5, col:16> col:16 invalid block 'int'
| `-FieldDecl 0x2159ba8e7d8 <line:129:5, col:11> col:11 key 'void *'
|-RecordDecl 0x2159ba8e898 <line:132:1, line:135:1> line:132:8 invalid struct xts128_context definition
| |-FieldDecl 0x2159ba8e968 <line:133:5, col:11> col:11 key1 'void *'
| |-FieldDecl 0x2159ba8e9d8 <col:5, col:18> col:18 key2 'void *'
| |-FieldDecl 0x2159ba8ea48 <line:134:5, col:16> col:16 invalid block1 'int'
| `-FieldDecl 0x2159ba8eab8 <col:5, col:24> col:24 invalid block2 'int'
|-RecordDecl 0x2159ba8eb10 <line:137:1, line:145:1> line:137:8 invalid struct ccm128_context definition
| |-RecordDecl 0x2159ba8ebd0 <line:138:5, line:141:5> line:138:5 union definition
| | |-FieldDecl 0x2159ba8ecf0 <line:139:9, col:16> col:13 u 'u64 [2]'
| | `-FieldDecl 0x2159ba8eda8 <line:140:9, col:16> col:12 c 'u8 [16]'
| |-FieldDecl 0x2159ba8eea0 <line:138:5, line:141:7> col:7 nonce 'union (anonymous union at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:138:5)':'union ccm128_context::(anonymous at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:138:5)'
| |-FieldDecl 0x2159ba8ef18 <line:138:5, line:141:14> col:14 cmac 'union (anonymous union at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:138:5)':'union ccm128_context::(anonymous at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:138:5)'
| |-FieldDecl 0x2159ba8ef80 <line:142:5, col:9> col:9 blocks 'u64':'unsigned long long'
| |-FieldDecl 0x2159ba8eff0 <line:143:5, col:16> col:16 invalid block 'int'
| `-FieldDecl 0x2159ba8f060 <line:144:5, col:11> col:11 key 'void *'
|-RecordDecl 0x2159ba8f110 <line:149:9, line:152:1> line:149:9 union definition
| |-FieldDecl 0x2159ba8f230 <line:150:5, col:12> col:9 a 'u64 [2]'
| `-FieldDecl 0x2159ba8f2f0 <line:151:5, col:23> col:19 c 'unsigned char [16]'
|-TypedefDecl 0x2159ba8f3a8 <line:149:1, line:152:3> col:3 referenced OCB_BLOCK 'union OCB_BLOCK':'OCB_BLOCK'
| `-ElaboratedType 0x2159ba8f350 'union OCB_BLOCK' sugar
|   `-RecordType 0x2159ba8f1b0 'OCB_BLOCK'
|     `-Record 0x2159ba8f110 ''
|-RecordDecl 0x2159ba8f418 <line:163:1, line:185:1> line:163:8 invalid struct ocb128_context definition
| |-FieldDecl 0x2159ba8f4e8 <line:165:5, col:16> col:16 invalid encrypt 'int'
| |-FieldDecl 0x2159ba8f558 <line:166:5, col:16> col:16 invalid decrypt 'int'
| |-FieldDecl 0x2159ba8f5c8 <line:167:5, col:11> col:11 keyenc 'void *'
| |-FieldDecl 0x2159ba8f638 <line:168:5, col:11> col:11 keydec 'void *'
| |-FieldDecl 0x2159ba8f6a8 <line:169:5, col:14> col:14 invalid stream 'int'
| |-FieldDecl 0x2159ba8f710 <line:171:5, col:12> col:12 l_index 'size_t':'unsigned long long'
| |-FieldDecl 0x2159ba8f778 <line:172:5, col:12> col:12 max_l_index 'size_t':'unsigned long long'
| |-FieldDecl 0x2159ba8f800 <line:173:5, col:15> col:15 l_star 'OCB_BLOCK':'OCB_BLOCK'
| |-FieldDecl 0x2159ba8f868 <line:174:5, col:15> col:15 l_dollar 'OCB_BLOCK':'OCB_BLOCK'
| |-FieldDecl 0x2159ba8f928 <line:175:5, col:16> col:16 l 'OCB_BLOCK *'
| |-RecordDecl 0x2159ba8f980 <line:177:5, line:184:5> line:177:5 struct definition
| | |-FieldDecl 0x2159ba8fa50 <line:178:9, col:13> col:13 blocks_hashed 'u64':'unsigned long long'
| | |-FieldDecl 0x2159ba8fab8 <line:179:9, col:13> col:13 blocks_processed 'u64':'unsigned long long'
| | |-FieldDecl 0x2159ba8fb20 <line:180:9, col:19> col:19 offset_aad 'OCB_BLOCK':'OCB_BLOCK'
| | |-FieldDecl 0x2159ba8fb88 <line:181:9, col:19> col:19 sum 'OCB_BLOCK':'OCB_BLOCK'
| | |-FieldDecl 0x2159ba8fbf0 <line:182:9, col:19> col:19 offset 'OCB_BLOCK':'OCB_BLOCK'
| | `-FieldDecl 0x2159ba8fc58 <line:183:9, col:19> col:19 checksum 'OCB_BLOCK':'OCB_BLOCK'
| `-FieldDecl 0x2159ba8fd08 <line:177:5, line:184:7> col:7 sess 'struct (anonymous struct at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:177:5)':'struct ocb128_context::(anonymous at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:177:5)'
|-TypedefDecl 0x2159ba8fdc8 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x2159a0961d0 'unsigned long long'
|-TypedefDecl 0x2159ba8fe38 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x2159a096d00 'char *'
|   `-BuiltinType 0x2159a096090 'char'
|-FunctionDecl 0x2159bb90a40 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x2159bb90ae0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x2159bb90b50 <col:21> Implicit
|-FunctionDecl 0x2159bb90ba8 prev 0x2159bb90a40 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x2159bb908d8 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x2159bb90c98 <col:21> Inherited Implicit
|-TypedefDecl 0x2159bb90cd8 prev 0x2159a096ca8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x2159a0961d0 'unsigned long long'
|-TypedefDecl 0x2159bb90d80 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x2159bb90d50 'size_t' sugar
|   |-Typedef 0x2159bb90cd8 'size_t'
|   `-BuiltinType 0x2159a0961d0 'unsigned long long'
|-TypedefDecl 0x2159bb90df0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x2159a096130 'long long'
|-TypedefDecl 0x2159bb90e60 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x2159a096130 'long long'
|-TypedefDecl 0x2159bb90ed0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x2159a096170 'unsigned short'
|-TypedefDecl 0x2159bb90f40 <line:541:1, col:24> col:24 wint_t 'unsigned short'
| `-BuiltinType 0x2159a096170 'unsigned short'
|-TypedefDecl 0x2159bb90fb0 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x2159a096170 'unsigned short'
|-TypedefDecl 0x2159bb91020 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x2159a0960f0 'int'
|-TypedefDecl 0x2159bb91090 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x2159a096110 'long'
|-TypedefDecl 0x2159bb91100 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x2159a096130 'long long'
|-TypedefDecl 0x2159bb91190 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x2159bb91160 '__time64_t' sugar
|   |-Typedef 0x2159bb91100 '__time64_t'
|   `-BuiltinType 0x2159a096130 'long long'
|-FunctionDecl 0x2159bb91308 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x2159bb91528 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x2159bb93b10 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x2159bb91668 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x2159bb916e0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x2159bb91758 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x2159bb917d8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x2159bb938b0 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x2159bb93bf0 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x2159bb93cb0 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x2159bb93e20 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x2159bb93dd0 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x2159bb93d70 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x2159bb93c90 'struct threadlocaleinfostruct'
|       `-Record 0x2159bba59a0 'threadlocaleinfostruct'
|-TypedefDecl 0x2159bb93f30 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x2159bb93ee0 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x2159bb93e80 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x2159bb93d50 'struct threadmbcinfostruct'
|       `-Record 0x2159bb93cb0 'threadmbcinfostruct'
|-RecordDecl 0x2159bb93f88 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x2159bb94040 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x2159bb94100 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2159bb94190 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x2159bb94220 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x2159bb942d8 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x2159bb94280 'struct localeinfo_struct' sugar
|   `-RecordType 0x2159bb940e0 'struct localeinfo_struct'
|     `-Record 0x2159bb94040 'localeinfo_struct'
|-TypedefDecl 0x2159bb943b0 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x2159bb94360 'struct localeinfo_struct *'
|   `-ElaboratedType 0x2159bb94280 'struct localeinfo_struct' sugar
|     `-RecordType 0x2159bb940e0 'struct localeinfo_struct'
|       `-Record 0x2159bb94040 'localeinfo_struct'
|-RecordDecl 0x2159bb94428 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x2159bb944e0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2159bb94558 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x2159bb94618 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x2159bb946b0 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x2159bb94720 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x2159bb947d8 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x2159bb94780 'struct localerefcount' sugar
|   `-RecordType 0x2159bb944c0 'struct localerefcount'
|     `-Record 0x2159bb94428 'localerefcount'
|-RecordDecl 0x2159bba59a0 prev 0x2159bb93bf0 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x2159bba5a20 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2159bba5a98 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x2159bba5b08 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x2159bba5b78 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x2159bba5be8 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x2159bba5da8 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x2159bba5e18 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x2159bba5e88 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x2159bba5ef8 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x2159bba5f68 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x2159bba5fd8 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x2159bba6030 parent 0x2159a095ff8 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x2159bba61c0 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x2159bba6230 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x2159bba62a0 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x2159bba6310 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x2159bba6380 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x2159bba63f0 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x2159bba6500 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x2159bba6638 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x2159bba66e8 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x2159bba6690 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x2159bb93c90 'struct threadlocaleinfostruct'
|     `-Record 0x2159bba59a0 'threadlocaleinfostruct'
|-FunctionDecl 0x2159bb9eac0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:47:9, col:142> col:25 _memccpy 'void *(void *, const void *, int, size_t) __attribute__((cdecl))':'void *(void *, const void *, int, size_t)'
| |-ParmVarDecl 0x2159bba6770 <col:69, col:76> col:76 _Dst 'void *'
| |-ParmVarDecl 0x2159bba6820 <col:87, col:100> col:100 _Src 'const void *'
| |-ParmVarDecl 0x2159bba68a0 <col:111, col:115> col:115 _Val 'int'
| `-ParmVarDecl 0x2159bba6918 <col:126, col:133> col:133 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2159bb9ee88 <line:48:54> col:54 implicit memchr 'void *(const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x2159bb9ef28 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x2159bb9ef90 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x2159bb9eff8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2159bb9f078 prev 0x2159bb9ee88 <col:38, col:150> col:54 memchr 'void *(const void *, int, unsigned long long)'
| |-ParmVarDecl 0x2159bb9ebb0 <col:94, col:107> col:107 _Buf 'const void *'
| |-ParmVarDecl 0x2159bb9ec30 <col:119, col:123> col:123 _Val 'int'
| `-ParmVarDecl 0x2159bb9eca8 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2159bb9f438 <line:49:24, col:162> col:40 _memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x2159bb9f160 <col:77, col:90> col:90 _Buf1 'const void *'
| |-ParmVarDecl 0x2159bb9f1e0 <col:125, col:138> col:138 _Buf2 'const void *'
| `-ParmVarDecl 0x2159bb9f258 <col:150, col:157> col:157 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x2159bba89d0 <line:50:24, col:192> col:40 _memicmp_l 'int (const void *, const void *, size_t, _locale_t) __attribute__((cdecl))':'int (const void *, const void *, size_t, _locale_t)'
| |-ParmVarDecl 0x2159bb9f520 <col:79, col:92> col:92 _Buf1 'const void *'
| |-ParmVarDecl 0x2159bb9f5a0 <col:127, col:140> col:140 _Buf2 'const void *'
| |-ParmVarDecl 0x2159bb9f618 <col:152, col:159> col:159 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2159bb9f6b0 <col:175, col:185> col:185 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2159bba8cd8 <line:51:32> col:32 implicit memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x2159bba8d78 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x2159bba8de0 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x2159bba8e48 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2159bba8ec8 prev 0x2159bba8cd8 <col:16, col:144> col:32 memcmp 'int (const void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x2159bba8ac0 <col:63, col:76> col:76 _Buf1 'const void *'
| |-ParmVarDecl 0x2159bba8b40 <col:107, col:120> col:120 _Buf2 'const void *'
| `-ParmVarDecl 0x2159bba8bb8 <col:132, col:139> col:139 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x2159bba9288 <line:55:17> col:17 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x2159bba9328 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x2159bba9390 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x2159bba93f8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2159bba9478 prev 0x2159bba9288 <col:1, col:127> col:17 used memcpy 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x2159bba8fb0 <col:54, col:61> col:61 _Dst 'void *'
| |-ParmVarDecl 0x2159bba9030 <col:91, col:104> col:104 _Src 'const void *'
| `-ParmVarDecl 0x2159bba90a8 <col:115, col:122> col:122 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x2159bba9918 <line:57:9, col:191> col:26 memcpy_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x2159bba9588 <col:82, col:89> col:89 _Dst 'void *'
| |-ParmVarDecl 0x2159bba9620 <col:100, col:108> col:108 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x2159bba96a0 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x2159bba9718 <col:174, col:182> col:182 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x2159bbadd48 <line:94:25> col:25 implicit memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x2159bbadde8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x2159bbade50 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x2159bbadeb8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2159bbadf38 prev 0x2159bbadd48 <col:9, col:107> col:25 memset 'void *(void *, int, unsigned long long)'
| |-ParmVarDecl 0x2159bbada70 <col:62, col:69> col:69 _Dst 'void *'
| |-ParmVarDecl 0x2159bbadaf0 <col:80, col:84> col:84 _Val 'int'
| `-ParmVarDecl 0x2159bbadb68 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x2159bbae3b8 <line:98:57> col:57 implicit memccpy 'void *(void *, const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x2159bbae458 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x2159bbae4c0 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x2159bbae528 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x2159bbae590 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2159bbae618 prev 0x2159bbae3b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:98:187> col:57 memccpy 'void *(void *, const void *, int, unsigned long long)'
| |-ParmVarDecl 0x2159bbae100 <col:95, col:102> col:102 _Dst 'void *'
| |-ParmVarDecl 0x2159bbae180 <col:136, col:149> col:149 _Src 'const void *'
| |-ParmVarDecl 0x2159bbae200 <col:160, col:164> col:164 _Val 'int'
| |-ParmVarDecl 0x2159bbae278 <col:175, col:182> col:182 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2159bbae6d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memccpy. See online help for details." ""
|-FunctionDecl 0x2159bba7a60 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:99:190> col:69 memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x2159bbae8a0 <col:105, col:118> col:118 _Buf1 'const void *'
| |-ParmVarDecl 0x2159bbae920 <col:153, col:166> col:166 _Buf2 'const void *'
| |-ParmVarDecl 0x2159bbae998 <col:178, col:185> col:185 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2159bba7b18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memicmp. See online help for details." ""
|-FunctionDecl 0x2159bba7f10 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:105:40, col:144> col:56 _strset_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x2159bba7c40 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x2159bba7cb8 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2159bba7d38 <col:134, col:138> col:138 _Value 'int'
|-FunctionDecl 0x2159bba82e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:107:88 _strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x2159bba80f0 <col:108, col:114> col:114 _Dest 'char *'
| |-ParmVarDecl 0x2159bba8170 <col:126, col:131> col:131 _Value 'int'
| `-DeprecatedAttr 0x2159bba8390 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2159bba87a0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:109:40, col:158> col:56 strcpy_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x2159bba84d8 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x2159bba8550 <col:112, col:120> col:120 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x2159bba85d0 <col:141, col:154> col:154 _Src 'const char *'
|-FunctionDecl 0x2159bba6ba0 <line:112:88> col:88 implicit strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x2159bba6c40 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x2159bba6ca8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2159bba6d20 prev 0x2159bba6ba0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:112:88 strcpy 'char *(char *, const char *)'
| |-ParmVarDecl 0x2159bba69b0 <col:142, col:148> col:148 _Dest 'char *'
| |-ParmVarDecl 0x2159bba6a30 <col:162, col:176> col:176 _Source 'const char *'
| `-DeprecatedAttr 0x2159bba6dd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2159bba7128 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:114:40, col:161> col:56 strcat_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x2159bba6f18 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x2159bba6f90 <col:115, col:123> col:123 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x2159bba7010 <col:144, col:157> col:157 _Src 'const char *'
|-FunctionDecl 0x2159bba7450 <line:118:88> col:88 implicit strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x2159bba74f0 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x2159bba7558 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2159bba75d0 prev 0x2159bba7450 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:118:88 strcat 'char *(char *, const char *)'
| |-ParmVarDecl 0x2159bba72d0 <col:170, col:176> col:176 _Dest 'char *'
| |-ParmVarDecl 0x2159bba7350 <col:190, col:204> col:204 _Source 'const char *'
| `-DeprecatedAttr 0x2159bba7680 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2159bbaa9f0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:120:32> col:32 implicit strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x2159bbaaa90 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2159bbaaaf8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2159bbaab70 prev 0x2159bbaa9f0 <col:16, col:91> col:32 strcmp 'int (const char *, const char *)'
| |-ParmVarDecl 0x2159bba77c8 <col:46, col:59> col:59 _Str1 'const char *'
| `-ParmVarDecl 0x2159bba7848 <col:73, col:86> col:86 _Str2 'const char *'
|-FunctionDecl 0x2159bbaadc0 <line:121:32> col:32 implicit strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x2159bbaae60 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2159bbaaed0 prev 0x2159bbaadc0 <col:16, col:63> col:32 strlen 'unsigned long long (const char *)'
| `-ParmVarDecl 0x2159bbaac50 <col:46, col:59> col:59 _Str 'const char *'
|-FunctionDecl 0x2159bbab1c8 <line:125:1, col:92> col:17 used strnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x2159bbaafa8 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x2159bbab020 <col:76, col:83> col:83 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2159bbab418 <line:127:16, line:133:1> line:130:19 strnlen_s 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' static inline
| |-ParmVarDecl 0x2159bbab2a8 <col:56, col:69> col:69 used _Str 'const char *'
| |-ParmVarDecl 0x2159bbab320 <col:80, col:87> col:87 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x2159bbab748 <line:131:1, line:133:1>
|   `-ReturnStmt 0x2159bbab738 <line:132:5, col:51>
|     `-ConditionalOperator 0x2159bbab708 <col:12, col:51> 'unsigned long long'
|       |-ParenExpr 0x2159bbab578 <col:12, col:20> 'int'
|       | `-BinaryOperator 0x2159bbab558 <col:13, col:19> 'int' '=='
|       |   |-ImplicitCastExpr 0x2159bbab528 <col:13> 'const char *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x2159bbab4e0 <col:13> 'const char *' lvalue ParmVar 0x2159bbab2a8 '_Str' 'const char *'
|       |   `-ImplicitCastExpr 0x2159bbab540 <col:19> 'const char *' <NullToPointer>
|       |     `-IntegerLiteral 0x2159bbab500 <col:19> 'int' 0
|       |-ImplicitCastExpr 0x2159bbab6f0 <col:24> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x2159bbab598 <col:24> 'int' 0
|       `-CallExpr 0x2159bbab690 <col:28, col:51> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x2159bbab678 <col:28> 'size_t (*)(const char *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x2159bbab5c0 <col:28> 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' Function 0x2159bbab1c8 'strnlen' 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
|         |-ImplicitCastExpr 0x2159bbab6c0 <col:36> 'const char *' <LValueToRValue>
|         | `-DeclRefExpr 0x2159bbab5e0 <col:36> 'const char *' lvalue ParmVar 0x2159bbab2a8 '_Str' 'const char *'
|         `-ImplicitCastExpr 0x2159bbab6d8 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x2159bbab600 <col:42> 'size_t':'unsigned long long' lvalue ParmVar 0x2159bbab320 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x2159bbaba48 <line:136:28, col:209> col:44 memmove_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x2159bbab778 <col:100, col:107> col:107 _Dst 'void *'
| |-ParmVarDecl 0x2159bbab7f0 <col:118, col:126> col:126 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x2159bbab870 <col:168, col:181> col:181 _Src 'const void *'
| `-ParmVarDecl 0x2159bbab8e8 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x2159bbabd50 <line:139:67> col:67 implicit memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x2159bbabdf0 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x2159bbabe58 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x2159bbabec0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2159bbabf40 prev 0x2159bbabd50 <col:51, col:186> col:67 memmove 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x2159bbabb38 <col:109, col:116> col:116 _Dst 'void *'
| |-ParmVarDecl 0x2159bbabbb8 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x2159bbabc30 <col:174, col:181> col:181 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x2159bbac178 <line:146:24, col:76> col:40 _strdup 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| `-ParmVarDecl 0x2159bbac028 <col:59, col:72> col:72 _Src 'const char *'
|-FunctionDecl 0x2159bbac440 <line:152:54> col:54 implicit strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x2159bbac4e0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2159bbac548 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x2159bbac5c0 prev 0x2159bbac440 <col:38, col:100> col:54 strchr 'char *(const char *, int)'
| |-ParmVarDecl 0x2159bbac250 <col:68, col:81> col:81 _Str 'const char *'
| `-ParmVarDecl 0x2159bbac2d0 <col:92, col:96> col:96 _Val 'int'
|-FunctionDecl 0x2159bbac820 <line:153:24, col:103> col:40 _stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x2159bbac6a0 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x2159bbac720 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x2159bbaca90 <line:154:24, col:103> col:40 _strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x2159bbac900 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x2159bbac980 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x2159bbace48 <line:155:24, col:133> col:40 _stricmp_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x2159bbacb70 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x2159bbacbf0 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x2159bbacc68 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2159bbad0b0 <line:156:24, col:103> col:40 strcoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x2159bbacf30 <col:56, col:69> col:69 _Str1 'const char *'
| `-ParmVarDecl 0x2159bbacfb0 <col:84, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x2159bbad3a8 <line:157:24, col:133> col:40 _strcoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x2159bbad190 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x2159bbad210 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x2159bbad288 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2159bbad610 <line:158:24, col:104> col:40 _stricoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x2159bbad490 <col:58, col:71> col:71 _Str1 'const char *'
| `-ParmVarDecl 0x2159bbad510 <col:86, col:99> col:99 _Str2 'const char *'
|-FunctionDecl 0x2159bbad908 <line:159:24, col:134> col:40 _stricoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x2159bbad6f0 <col:60, col:73> col:73 _Str1 'const char *'
| |-ParmVarDecl 0x2159bbad770 <col:88, col:101> col:101 _Str2 'const char *'
| `-ParmVarDecl 0x2159bbad7e8 <col:117, col:127> col:127 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2159bb6a5c8 <line:160:24, col:167> col:40 _strncoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x2159bb6a2f0 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x2159bb6a370 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x2159bb6a3e8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2159bb6aa30 <line:161:24, col:195> col:40 _strncoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x2159bb6a6b0 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x2159bb6a730 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x2159bb6a7a8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2159bb6a820 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2159bb6ad38 <line:162:24, col:167> col:40 _strnicoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x2159bb6ab20 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x2159bb6aba0 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x2159bb6ac18 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2159bb6b0d0 <line:163:24, col:196> col:40 _strnicoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x2159bb6ae20 <col:80, col:93> col:93 _Str1 'const char *'
| |-ParmVarDecl 0x2159bb6aea0 <col:127, col:140> col:140 _Str2 'const char *'
| |-ParmVarDecl 0x2159bb6af18 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2159bb6af90 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2159bc03f68 <line:164:40> col:40 implicit strcspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x2159bc04008 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2159bc04070 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2159bc040e8 prev 0x2159bc03f68 <col:24, col:104> col:40 strcspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x2159bb6b1c0 <col:56, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x2159bb6b240 <col:83, col:96> col:96 _Control 'const char *'
|-FunctionDecl 0x2159bc043a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:165:118> col:77 _strerror 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x2159bc042c0 <col:98, col:111> col:111 _ErrMsg 'const char *'
| `-DeprecatedAttr 0x2159bc04448 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2159bc04820 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:166:28, col:155> col:44 _strerror_s 'errno_t (char *, size_t, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *)'
| |-ParmVarDecl 0x2159bc04590 <col:85, col:92> col:92 _Buf 'char *'
| |-ParmVarDecl 0x2159bc04608 <col:103, col:110> col:110 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2159bc04688 <col:135, col:148> col:148 _ErrMsg 'const char *'
|-FunctionDecl 0x2159bc04b38 <line:168:76> col:76 implicit strerror 'char *(int)' extern
| `-ParmVarDecl 0x2159bc04bd8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x2159bc04c48 prev 0x2159bc04b38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:168:93> col:76 strerror 'char *(int)'
| |-ParmVarDecl 0x2159bc04a00 <col:90> col:93 'int'
| `-DeprecatedAttr 0x2159bc04cf0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2159bc06090 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:170:28, col:139> col:44 strerror_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x2159bc05e80 <col:84, col:91> col:91 _Buf 'char *'
| |-ParmVarDecl 0x2159bc05ef8 <col:102, col:109> col:109 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2159bc05f78 <col:128, col:132> col:132 _ErrNum 'int'
|-FunctionDecl 0x2159bc06398 <line:173:28, col:109> col:44 _strlwr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x2159bc06178 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x2159bc061f0 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x2159bc06688 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:175:79 _strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x2159bc06538 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x2159bc06730 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2159bc06b40 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:176:28, col:139> col:44 _strlwr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x2159bc06878 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x2159bc068f0 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2159bc06968 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2159bc07f40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:178:82 _strlwr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x2159bc06ce8 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x2159bc06d60 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2159bc07ff0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2159bc084a8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:180:40, col:206> col:56 strncat_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x2159bc08138 <col:98, col:105> col:105 _Dst 'char *'
| |-ParmVarDecl 0x2159bc081b0 <col:116, col:124> col:124 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x2159bc08230 <col:165, col:178> col:178 _Src 'const char *'
| `-ParmVarDecl 0x2159bc082a8 <col:189, col:197> col:197 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x2159bc08928 <line:186:83> col:83 implicit strncat 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x2159bc089c8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x2159bc08a30 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2159bc08a98 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2159bc08b18 prev 0x2159bc08928 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:186:83 strncat 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x2159bc08658 <col:161, col:167> col:167 _Dest 'char *'
| |-ParmVarDecl 0x2159bc086d8 <col:198, col:212> col:212 _Source 'const char *'
| |-ParmVarDecl 0x2159bc08750 <col:226, col:234> col:234 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2159bc08bd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2159bc09f60 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:188:40> col:40 implicit strncmp 'int (const char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x2159bc0a000 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x2159bc0a068 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2159bc0a0d0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2159bc0a150 prev 0x2159bc09f60 <col:24, col:163> col:40 strncmp 'int (const char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x2159bc08d18 <col:75, col:88> col:88 _Str1 'const char *'
| |-ParmVarDecl 0x2159bc08d98 <col:122, col:135> col:135 _Str2 'const char *'
| `-ParmVarDecl 0x2159bc08e10 <col:147, col:154> col:154 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2159bc0a450 <line:189:24, col:165> col:40 _strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x2159bc0a238 <col:77, col:90> col:90 _Str1 'const char *'
| |-ParmVarDecl 0x2159bc0a2b8 <col:124, col:137> col:137 _Str2 'const char *'
| `-ParmVarDecl 0x2159bc0a330 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2159bc0a7e8 <line:190:24, col:195> col:40 _strnicmp_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x2159bc0a538 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x2159bc0a5b8 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x2159bc0a630 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2159bc0a6a8 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2159bc0ab80 <line:192:40, col:203> col:56 strncpy_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x2159bc0a8d8 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x2159bc0a950 <col:113, col:121> col:121 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x2159bc0a9d0 <col:162, col:175> col:175 _Src 'const char *'
| `-ParmVarDecl 0x2159bc0aa48 <col:186, col:194> col:194 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x2159bc0af58 <line:195:83> col:83 implicit strncpy 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x2159bc0aff8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x2159bc0b060 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2159bc0b0c8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2159bc0b148 prev 0x2159bc0af58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:195:83 strncpy 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x2159bc0ad30 <col:167, col:173> col:173 _Dest 'char *'
| |-ParmVarDecl 0x2159bc0adb0 <col:204, col:218> col:218 _Source 'const char *'
| |-ParmVarDecl 0x2159bc0ae28 <col:232, col:240> col:240 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2159bc0b200 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2159bc0b6b8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:196:40, col:174> col:56 _strnset_s 'errno_t (char *, size_t, int, size_t) __attribute__((cdecl))':'errno_t (char *, size_t, int, size_t)'
| |-ParmVarDecl 0x2159bc0b348 <col:99, col:106> col:106 _Str 'char *'
| |-ParmVarDecl 0x2159bc0b3c0 <col:117, col:124> col:124 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2159bc0b440 <col:143, col:147> col:147 _Val 'int'
| `-ParmVarDecl 0x2159bc0b4b8 <col:158, col:165> col:165 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2159bc0bb38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:198:83 _strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x2159bc0b868 <col:163, col:169> col:169 _Dest 'char *'
| |-ParmVarDecl 0x2159bc0b8e8 <col:181, col:186> col:186 _Val 'int'
| |-ParmVarDecl 0x2159bc0b960 <col:197, col:205> col:205 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2159bc0bbf0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2159bc08f20 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:199:54> col:54 implicit strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x2159bc08fc0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2159bc09028 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2159bc090a0 prev 0x2159bc08f20 <col:38, col:116> col:54 strpbrk 'char *(const char *, const char *)'
| |-ParmVarDecl 0x2159bc0bd38 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x2159bc0bdb8 <col:95, col:108> col:108 _Control 'const char *'
|-FunctionDecl 0x2159bc09300 <line:200:54> col:54 implicit strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x2159bc093a0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2159bc09408 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x2159bc09480 prev 0x2159bc09300 <col:38, col:100> col:54 strrchr 'char *(const char *, int)'
| |-ParmVarDecl 0x2159bc09180 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x2159bc09200 <col:93, col:97> col:97 _Ch 'int'
|-FunctionDecl 0x2159bc09640 <line:201:9, col:54> col:25 _strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| `-ParmVarDecl 0x2159bc09560 <col:43, col:50> col:50 _Str 'char *'
|-FunctionDecl 0x2159bc09890 <line:202:40> col:40 implicit strspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x2159bc09930 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2159bc09998 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2159bc09a10 prev 0x2159bc09890 <col:24, col:101> col:40 strspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x2159bc09718 <col:54, col:67> col:67 _Str 'const char *'
| `-ParmVarDecl 0x2159bc09798 <col:80, col:93> col:93 _Control 'const char *'
|-FunctionDecl 0x2159bc09c70 <line:203:70> col:70 implicit strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x2159bc09d10 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2159bc09d78 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2159bc09df0 prev 0x2159bc09c70 <col:54, col:130> col:70 strstr 'char *(const char *, const char *)'
| |-ParmVarDecl 0x2159bc09af0 <col:84, col:97> col:97 _Str 'const char *'
| `-ParmVarDecl 0x2159bc09b70 <col:110, col:123> col:123 _SubStr 'const char *'
|-FunctionDecl 0x2159bc0c150 <line:204:74> col:74 implicit strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x2159bc0c1f0 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x2159bc0c258 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2159bc0c2d0 prev 0x2159bc0c150 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:204:134> col:74 strtok 'char *(char *, const char *)'
| |-ParmVarDecl 0x2159bc0bfd0 <col:95, col:102> col:102 _Str 'char *'
| |-ParmVarDecl 0x2159bc0c050 <col:115, col:128> col:128 _Delim 'const char *'
| `-DeprecatedAttr 0x2159bc0c380 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2159bc0c768 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:206:36, col:162> col:52 strtok_s 'char *(char *, const char *, char **) __attribute__((cdecl))':'char *(char *, const char *, char **)'
| |-ParmVarDecl 0x2159bc0c4c8 <col:75, col:82> col:82 _Str 'char *'
| |-ParmVarDecl 0x2159bc0c548 <col:95, col:108> col:108 _Delim 'const char *'
| `-ParmVarDecl 0x2159bc0c5c8 <col:146, col:154> col:154 _Context 'char **'
|-FunctionDecl 0x2159bc0c9c0 <line:208:28, col:109> col:44 _strupr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x2159bc0c850 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x2159bc0c8c8 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x2159bc0cc40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:210:79 _strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x2159bc0cb60 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x2159bc0cce8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2159bc07020 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:211:28, col:130> col:44 _strupr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x2159bc0ce30 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x2159bc06e90 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2159bc06f08 <col:113, col:123> col:123 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2159bc07340 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:213:82 _strupr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x2159bc071c8 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x2159bc07240 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2159bc073f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2159bc07800 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:214:44> col:44 implicit strxfrm 'unsigned long long (char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x2159bc078a0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x2159bc07908 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2159bc07970 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2159bc079f0 prev 0x2159bc07800 <col:28, col:155> col:44 strxfrm 'unsigned long long (char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x2159bc07538 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x2159bc075b8 <col:115, col:128> col:128 _Src 'const char *'
| `-ParmVarDecl 0x2159bc07630 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2159bc04e70 <line:215:28, col:185> col:44 _strxfrm_l 'size_t (char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x2159bc07ad8 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x2159bc07b58 <col:117, col:130> col:130 _Src 'const char *'
| |-ParmVarDecl 0x2159bc07bd0 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2159bc07c48 <col:168, col:178> col:178 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2159bc05120 <line:245:71> col:71 implicit strdup 'char *(const char *)' extern
| `-ParmVarDecl 0x2159bc051c0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2159bc05230 prev 0x2159bc05120 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:245:106> col:71 strdup 'char *(const char *)'
| |-ParmVarDecl 0x2159bc05040 <col:89, col:102> col:102 _Src 'const char *'
| `-DeprecatedAttr 0x2159bc052d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strdup. See online help for details." ""
|-FunctionDecl 0x2159bc05620 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:252:129> col:69 strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x2159bc054a0 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x2159bc05520 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x2159bc056d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strcmpi. See online help for details." ""
|-FunctionDecl 0x2159bc05a18 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:253:129> col:69 stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x2159bc05898 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x2159bc05918 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x2159bc05ac8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details." ""
|-FunctionDecl 0x2159bc05d70 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:254:84> col:56 strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x2159bc05c90 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x2159bc05e18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strlwr. See online help for details." ""
|-FunctionDecl 0x2159bc0f2e8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:255:193> col:70 strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x2159bc0f0d0 <col:106, col:119> col:119 _Str1 'const char *'
| |-ParmVarDecl 0x2159bc0f150 <col:153, col:166> col:166 _Str 'const char *'
| |-ParmVarDecl 0x2159bc0f1c8 <col:177, col:184> col:184 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2159bc0f3a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnicmp. See online help for details." ""
|-FunctionDecl 0x2159bc0f780 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:256:143> col:57 strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x2159bc0f568 <col:94, col:101> col:101 _Str 'char *'
| |-ParmVarDecl 0x2159bc0f5e8 <col:112, col:116> col:116 _Val 'int'
| |-ParmVarDecl 0x2159bc0f660 <col:127, col:134> col:134 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2159bc0f838 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnset. See online help for details." ""
|-FunctionDecl 0x2159bc0fae0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:257:84> col:56 strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x2159bc0fa00 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x2159bc0fb88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strrev. See online help for details." ""
|-FunctionDecl 0x2159bc10f30 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:258:99> col:56 strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x2159bc0fd50 <col:73, col:80> col:80 _Str 'char *'
| |-ParmVarDecl 0x2159bc0fdd0 <col:91, col:95> col:95 _Val 'int'
| `-DeprecatedAttr 0x2159bc10fe0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strset. See online help for details." ""
|-FunctionDecl 0x2159bc11288 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:259:84> col:56 strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x2159bc111a8 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x2159bc11330 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strupr. See online help for details." ""
|-FunctionDecl 0x2159bc115c0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:273:24, col:77> col:42 _wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| `-ParmVarDecl 0x2159bc11450 <col:57, col:73> col:73 _Str 'const wchar_t *'
|-FunctionDecl 0x2159bc11950 <line:280:40, col:167> col:56 wcscat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x2159bc11690 <col:97, col:107> col:107 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2159bc11708 <col:118, col:126> col:126 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x2159bc11780 <col:147, col:163> col:163 _Src 'const wchar_t *'
|-FunctionDecl 0x2159bc11d08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:284:82 wcscat 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2159bc11af0 <col:164, col:173> col:173 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2159bc11b68 <col:187, col:204> col:204 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x2159bc11db8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2159bc14178 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:288:41> col:41 implicit wcschr 'unsigned short *(const unsigned short *, unsigned short)' extern
| |-ParmVarDecl 0x2159bc14218 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x2159bc14280 <<invalid sloc>> <invalid sloc> 'unsigned short'
|-FunctionDecl 0x2159bc142f8 prev 0x2159bc14178 <col:23, col:88> col:41 wcschr 'unsigned short *(const unsigned short *, unsigned short)'
| |-ParmVarDecl 0x2159bc13f60 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2159bc13fd8 <col:77, col:85> col:85 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x2159bc145f0 <line:289:36> col:36 implicit wcscmp 'int (const unsigned short *, const unsigned short *)' extern
| |-ParmVarDecl 0x2159bc14690 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x2159bc146f8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x2159bc14770 prev 0x2159bc145f0 <col:24, col:101> col:36 wcscmp 'int (const unsigned short *, const unsigned short *)'
| |-ParmVarDecl 0x2159bc143d0 <col:50, col:66> col:66 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x2159bc14448 <col:80, col:96> col:96 _Str2 'const wchar_t *'
|-FunctionDecl 0x2159bc14a50 <line:291:40, col:164> col:56 wcscpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x2159bc14848 <col:94, col:104> col:104 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2159bc148c0 <col:115, col:123> col:123 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x2159bc14938 <col:144, col:160> col:160 _Src 'const wchar_t *'
|-FunctionDecl 0x2159bc14d60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:294:82 wcscpy 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2159bc14bf0 <col:136, col:145> col:145 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2159bc14c68 <col:159, col:176> col:176 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x2159bc14e10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2159bc13168 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:295:24, col:107> col:39 wcscspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2159bc12f50 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2159bc12fc8 <col:83, col:99> col:99 _Control 'const wchar_t *'
|-FunctionDecl 0x2159bc133b0 <line:296:39> col:39 implicit wcslen 'unsigned long long (const unsigned short *)' extern
| `-ParmVarDecl 0x2159bc13450 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x2159bc134c0 prev 0x2159bc133b0 <col:24, col:73> col:39 wcslen 'unsigned long long (const unsigned short *)'
| `-ParmVarDecl 0x2159bc13240 <col:53, col:69> col:69 _Str 'const wchar_t *'
|-FunctionDecl 0x2159bc137a8 <line:300:1, col:94> col:16 used wcsnlen 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
| |-ParmVarDecl 0x2159bc13590 <col:51, col:67> col:67 _Src 'const wchar_t *'
| `-ParmVarDecl 0x2159bc13608 <col:78, col:85> col:85 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2159bc139f0 <line:302:16, line:308:1> line:305:18 wcsnlen_s 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' static inline
| |-ParmVarDecl 0x2159bc13880 <col:55, col:71> col:71 used _Src 'const wchar_t *'
| |-ParmVarDecl 0x2159bc138f8 <col:82, col:89> col:89 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x2159bc13d88 <line:306:1, line:308:1>
|   `-ReturnStmt 0x2159bc13d78 <line:307:5, col:56>
|     `-ConditionalOperator 0x2159bc13d48 <col:12, col:56> 'unsigned long long'
|       |-ParenExpr 0x2159bc13bb0 <col:12, col:25> 'int'
|       | `-BinaryOperator 0x2159bc13b90 <col:13, line:36:27> 'int' '=='
|       |   |-ImplicitCastExpr 0x2159bc13b60 <line:307:13> 'const wchar_t *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x2159bc13ab8 <col:13> 'const wchar_t *' lvalue ParmVar 0x2159bc13880 '_Src' 'const wchar_t *'
|       |   `-ImplicitCastExpr 0x2159bc13b78 <line:36:17, col:27> 'const wchar_t *' <BitCast>
|       |     `-ParenExpr 0x2159bc13b40 <col:17, col:27> 'void *'
|       |       `-CStyleCastExpr 0x2159bc13b18 <col:18, col:26> 'void *' <NullToPointer>
|       |         `-IntegerLiteral 0x2159bc13ad8 <col:26> 'int' 0
|       |-ImplicitCastExpr 0x2159bc13d30 <line:307:29> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x2159bc13bd0 <col:29> 'int' 0
|       `-CallExpr 0x2159bc13cd0 <col:33, col:56> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x2159bc13cb8 <col:33> 'size_t (*)(const wchar_t *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x2159bc13bf8 <col:33> 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' Function 0x2159bc137a8 'wcsnlen' 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
|         |-ImplicitCastExpr 0x2159bc13d00 <col:41> 'const wchar_t *' <LValueToRValue>
|         | `-DeclRefExpr 0x2159bc13c18 <col:41> 'const wchar_t *' lvalue ParmVar 0x2159bc13880 '_Src' 'const wchar_t *'
|         `-ImplicitCastExpr 0x2159bc13d18 <col:47> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x2159bc13c38 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x2159bc138f8 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x2159bc0d0f8 <line:311:40, col:212> col:56 wcsncat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x2159bc13db0 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2159bc13e28 <col:119, col:127> col:127 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x2159bc13ea0 <col:168, col:184> col:184 _Src 'const wchar_t *'
| `-ParmVarDecl 0x2159bc0cef0 <col:195, col:203> col:203 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x2159bc0d560 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:316:86 wcsncat 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x2159bc0d2a0 <col:167, col:176> col:176 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2159bc0d318 <col:207, col:224> col:224 _Source 'const wchar_t *'
| |-ParmVarDecl 0x2159bc0d390 <col:238, col:246> col:246 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2159bc0d618 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2159bc0da28 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:318:36> col:36 implicit wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)' extern
| |-ParmVarDecl 0x2159bc0dac8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| |-ParmVarDecl 0x2159bc0db30 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x2159bc0db98 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2159bc0dc18 prev 0x2159bc0da28 <col:24, col:165> col:36 wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)'
| |-ParmVarDecl 0x2159bc0d758 <col:71, col:87> col:87 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2159bc0d7d0 <col:121, col:137> col:137 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x2159bc0d848 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2159bc15028 <line:320:40, col:209> col:56 wcsncpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x2159bc0dcf8 <col:95, col:105> col:105 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2159bc0dd70 <col:116, col:124> col:124 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x2159bc0dde8 <col:165, col:181> col:181 _Src 'const wchar_t *'
| `-ParmVarDecl 0x2159bc0de60 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x2159bc153d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:323:86 wcsncpy 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x2159bc151d0 <col:179, col:188> col:188 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2159bc15248 <col:219, col:236> col:236 _Source 'const wchar_t *'
| |-ParmVarDecl 0x2159bc152c0 <col:250, col:258> col:258 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2159bc15490 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2159bc157e8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:324:38, col:124> col:56 wcspbrk 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2159bc155d0 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2159bc15648 <col:100, col:116> col:116 _Control 'const wchar_t *'
|-FunctionDecl 0x2159bc15a30 <line:325:38, col:109> col:56 wcsrchr 'wchar_t *(const wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(const wchar_t *, wchar_t)'
| |-ParmVarDecl 0x2159bc158c0 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2159bc15938 <col:98, col:106> col:106 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x2159bc15c78 <line:326:24, col:106> col:39 wcsspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2159bc15b08 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2159bc15b80 <col:82, col:98> col:98 _Control 'const wchar_t *'
|-FunctionDecl 0x2159bc15ec0 <line:329:23, col:107> col:41 wcsstr 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2159bc15d50 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2159bc15dc8 <col:84, col:100> col:100 _SubStr 'const wchar_t *'
|-FunctionDecl 0x2159bc12198 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:330:142> col:76 wcstok 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2159bc12028 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x2159bc120a0 <col:120, col:136> col:136 _Delim 'const wchar_t *'
| `-DeprecatedAttr 0x2159bc12248 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2159bc126b0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:332:36, col:173> col:54 wcstok_s 'wchar_t *(wchar_t *, const wchar_t *, wchar_t **) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x2159bc12388 <col:77, col:87> col:87 _Str 'wchar_t *'
| |-ParmVarDecl 0x2159bc12400 <col:100, col:116> col:116 _Delim 'const wchar_t *'
| `-ParmVarDecl 0x2159bc124e0 <col:154, col:165> col:165 _Context 'wchar_t **'
|-FunctionDecl 0x2159bc129d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:334:105> col:79 _wcserror 'wchar_t *(int) __attribute__((cdecl))':'wchar_t *(int)'
| |-ParmVarDecl 0x2159bc12858 <col:94, col:98> col:98 _ErrNum 'int'
| `-DeprecatedAttr 0x2159bc12a78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2159bc12e80 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:335:28, col:147> col:44 _wcserror_s 'errno_t (wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, int)'
| |-ParmVarDecl 0x2159bc12bb8 <col:89, col:99> col:99 _Buf 'wchar_t *'
| |-ParmVarDecl 0x2159bc12c30 <col:110, col:117> col:117 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2159bc12cb0 <col:136, col:140> col:140 _ErrNum 'int'
|-FunctionDecl 0x2159bc16180 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:337:122> col:80 __wcserror 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x2159bc160a8 <col:102, col:118> col:118 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x2159bc16228 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2159bc165f0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:338:28, col:165> col:44 __wcserror_s 'errno_t (wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x2159bc16368 <col:90, col:100> col:100 _Buffer 'wchar_t *'
| |-ParmVarDecl 0x2159bc163e0 <col:114, col:121> col:121 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2159bc16458 <col:142, col:158> col:158 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x2159bc16848 <line:341:24, col:103> col:36 _wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2159bc166d0 <col:52, col:68> col:68 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x2159bc16748 <col:82, col:98> col:98 _Str2 'const wchar_t *'
|-FunctionDecl 0x2159bc16be8 <line:342:24, col:133> col:36 _wcsicmp_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x2159bc16920 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2159bc16998 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x2159bc16a10 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2159bc16ed8 <line:343:24, col:167> col:36 _wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x2159bc16cc8 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2159bc16d40 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x2159bc16db8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2159bc17340 <line:344:24, col:197> col:36 _wcsnicmp_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x2159bc16fd0 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2159bc17048 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x2159bc170c0 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2159bc17138 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2159bc17798 <line:345:40, col:181> col:56 _wcsnset_s 'errno_t (wchar_t *, size_t, wchar_t, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t, size_t)'
| |-ParmVarDecl 0x2159bc17428 <col:99, col:109> col:109 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2159bc174a0 <col:120, col:127> col:127 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2159bc17518 <col:146, col:154> col:154 _Val 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x2159bc17590 <col:165, col:172> col:172 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2159bc17c00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:347:86 _wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x2159bc17940 <col:172, col:181> col:181 _Str 'wchar_t *'
| |-ParmVarDecl 0x2159bc179b8 <col:187, col:196> col:196 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x2159bc17a30 <col:207, col:215> col:215 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2159bc17cb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2159bc0ff20 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:348:9, col:59> col:27 _wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| `-ParmVarDecl 0x2159bc17df8 <col:45, col:55> col:55 _Str 'wchar_t *'
|-FunctionDecl 0x2159bc102b0 <line:349:40, col:159> col:56 _wcsset_s 'errno_t (wchar_t *, size_t, wchar_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t)'
| |-ParmVarDecl 0x2159bc0fff0 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2159bc10068 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2159bc100e0 <col:145, col:153> col:153 _Value 'wchar_t':'unsigned short'
|-FunctionDecl 0x2159bc10668 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:351:85 _wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x2159bc10450 <col:150, col:159> col:159 _Str 'wchar_t *'
| |-ParmVarDecl 0x2159bc104c8 <col:165, col:174> col:174 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x2159bc10718 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2159bc10a78 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:353:28, col:126> col:44 _wcslwr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x2159bc10858 <col:86, col:96> col:96 _Str 'wchar_t *'
| `-ParmVarDecl 0x2159bc108d0 <col:107, col:114> col:114 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x2159bc10ce8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:355:82 _wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x2159bc10c10 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x2159bc10d90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2159bc1e2c0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:356:28, col:156> col:44 _wcslwr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x2159bc1e000 <col:88, col:98> col:98 _Str 'wchar_t *'
| |-ParmVarDecl 0x2159bc1e078 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2159bc1e0f0 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2159bc1e678 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:358:85 _wcslwr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x2159bc1e460 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x2159bc1e4d8 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2159bc1e728 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2159bc1e9d8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:359:28, col:112> col:44 _wcsupr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x2159bc1e868 <col:79, col:89> col:89 _Str 'wchar_t *'
| `-ParmVarDecl 0x2159bc1e8e0 <col:100, col:107> col:107 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x2159bc1ec48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:361:82 _wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x2159bc1eb70 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x2159bc1ecf0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2159bc1a000 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:362:28, col:142> col:44 _wcsupr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x2159bc1ee30 <col:81, col:91> col:91 _Str 'wchar_t *'
| |-ParmVarDecl 0x2159bc1eea8 <col:102, col:109> col:109 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2159bc1ef20 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2159bc1a310 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:364:85 _wcsupr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x2159bc1a1a0 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x2159bc1a218 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2159bc1a3c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2159bc1a7c0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:365:28, col:159> col:43 wcsxfrm 'size_t (wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x2159bc1a500 <col:93, col:103> col:103 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2159bc1a578 <col:116, col:132> col:132 _Src 'const wchar_t *'
| `-ParmVarDecl 0x2159bc1a5f0 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2159bc1ac08 <line:366:28, col:189> col:43 _wcsxfrm_l 'size_t (wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x2159bc1a8a0 <col:96, col:106> col:106 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2159bc1a918 <col:119, col:134> col:134 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2159bc1a990 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2159bc1aa08 <col:172, col:182> col:182 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2159bc1ae68 <line:367:24, col:102> col:36 wcscoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2159bc1acf0 <col:51, col:67> col:67 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x2159bc1ad68 <col:81, col:97> col:97 _Str2 'const wchar_t *'
|-FunctionDecl 0x2159bc1b168 <line:368:24, col:133> col:36 _wcscoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x2159bc1af40 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2159bc1afd0 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x2159bc1b048 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2159bc1b3c0 <line:369:24, col:104> col:36 _wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2159bc1b248 <col:53, col:69> col:69 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x2159bc1b2c0 <col:83, col:99> col:99 _Str2 'const wchar_t *'
|-FunctionDecl 0x2159bc1b6a8 <line:370:24, col:133> col:36 _wcsicoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x2159bc1b498 <col:55, col:71> col:71 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2159bc1b510 <col:85, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x2159bc1b588 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2159bc1b998 <line:371:24, col:167> col:36 _wcsncoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x2159bc1b788 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2159bc1b800 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x2159bc1b878 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2159bc1bd20 <line:372:24, col:197> col:36 _wcsncoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x2159bc1ba78 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2159bc1baf0 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x2159bc1bb68 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2159bc1bbe0 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2159bc18ff8 <line:373:24, col:168> col:36 _wcsnicoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x2159bc1be08 <col:74, col:90> col:90 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2159bc1be80 <col:124, col:140> col:140 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x2159bc1bef8 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2159bc19380 <line:374:24, col:198> col:36 _wcsnicoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x2159bc190d8 <col:76, col:92> col:92 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2159bc19150 <col:126, col:142> col:142 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x2159bc191c8 <col:154, col:161> col:161 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2159bc19240 <col:181, col:191> col:191 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2159bc195e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:403:108> col:74 wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x2159bc19508 <col:88, col:104> col:104 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x2159bc19688 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsdup. See online help for details." ""
|-FunctionDecl 0x2159bc199c0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:413:135> col:69 wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2159bc19848 <col:84, col:100> col:100 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2159bc198c0 <col:114, col:130> col:130 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x2159bc19a70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicmp. See online help for details." ""
|-FunctionDecl 0x2159bc19e40 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:414:200> col:70 wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x2159bc19c30 <col:106, col:122> col:122 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2159bc19ca8 <col:156, col:172> col:172 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x2159bc19d20 <col:184, col:191> col:191 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2159bc19ef8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnicmp. See online help for details." ""
|-FunctionDecl 0x2159bc1c360 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:415:153> col:60 wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x2159bc1c158 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x2159bc1c1d0 <col:118, col:126> col:126 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x2159bc1c248 <col:137, col:144> col:144 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2159bc1c418 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnset. See online help for details." ""
|-FunctionDecl 0x2159bc1c6b0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:416:90> col:59 wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x2159bc1c5d8 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x2159bc1c758 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsrev. See online help for details." ""
|-FunctionDecl 0x2159bc1ca88 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:417:104> col:59 wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x2159bc1c918 <col:76, col:86> col:86 _Str 'wchar_t *'
| |-ParmVarDecl 0x2159bc1c990 <col:92, col:100> col:100 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x2159bc1cb38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsset. See online help for details." ""
|-FunctionDecl 0x2159bc1cdd0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:418:90> col:59 wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x2159bc1ccf8 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x2159bc1ce78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcslwr. See online help for details." ""
|-FunctionDecl 0x2159bc18128 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:419:90> col:59 wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x2159bc18050 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x2159bc181d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsupr. See online help for details." ""
|-FunctionDecl 0x2159bc18508 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:420:137> col:70 wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2159bc18390 <col:86, col:102> col:102 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2159bc18408 <col:116, col:132> col:132 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x2159bc185b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicoll. See online help for details." ""
|-FunctionDecl 0x2159bc18b88 <.//openssl//file_jk/before\crypto\modes\cbc128.c:18:1, line:67:1> line:18:6 invalid CRYPTO_cbc128_encrypt 'void (const unsigned char *, unsigned char *, size_t, const void *, unsigned char *, int)'
| |-ParmVarDecl 0x2159bc186e0 <col:28, col:49> col:49 used in 'const unsigned char *'
| |-ParmVarDecl 0x2159bc18790 <col:53, col:68> col:68 used out 'unsigned char *'
| |-ParmVarDecl 0x2159bc18808 <line:19:28, col:35> col:35 used len 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2159bc18888 <col:40, col:52> col:52 used key 'const void *'
| |-ParmVarDecl 0x2159bc18990 <line:20:28, col:49> col:42 used ivec 'unsigned char *':'unsigned char *'
| |-ParmVarDecl 0x2159bc18a10 <col:52, col:63> col:63 invalid block 'int'
| `-CompoundStmt 0x2159bc22fe0 <line:21:1, line:67:1>
|   |-DeclStmt 0x2159bc18ce8 <line:22:5, col:13>
|   | `-VarDecl 0x2159bc18c80 <col:5, col:12> col:12 used n 'size_t':'unsigned long long'
|   |-DeclStmt 0x2159bc18de8 <line:23:5, col:35>
|   | `-VarDecl 0x2159bc18d18 <col:5, col:31> col:26 used iv 'const unsigned char *' cinit
|   |   `-ImplicitCastExpr 0x2159bc18dd0 <col:31> 'const unsigned char *' <NoOp>
|   |     `-ImplicitCastExpr 0x2159bc18db8 <col:31> 'unsigned char *':'unsigned char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x2159bc18d80 <col:31> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x2159bc18990 'ivec' 'unsigned char *':'unsigned char *'
|   |-IfStmt 0x2159bc18ec0 <line:25:5, line:26:9>
|   | |-BinaryOperator 0x2159bc18e90 <line:25:9, col:16> 'int' '=='
|   | | |-ImplicitCastExpr 0x2159bc18e60 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2159bc18e00 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x2159bc18808 'len' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x2159bc18e78 <col:16> 'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x2159bc18e38 <col:16> 'int' 0
|   | `-ReturnStmt 0x2159bc18eb0 <line:26:9>
|   |-IfStmt 0x2159bc22350 <line:29:5, line:51:5> has_else
|   | |-BinaryOperator 0x2159bc1f218 <line:15:27, line:30:71> 'int' '&&'
|   | | |-IntegerLiteral 0x2159bc18ed8 <line:15:27> 'int' 0
|   | | `-BinaryOperator 0x2159bc1f1f8 <line:30:9, col:71> 'int' '!='
|   | |   |-BinaryOperator 0x2159bc1f198 <col:9, col:66> 'unsigned long long' '%'
|   | |   | |-ParenExpr 0x2159bc1f148 <col:9, col:49> 'unsigned long long'
|   | |   | | `-BinaryOperator 0x2159bc1f128 <col:10, col:45> 'unsigned long long' '|'
|   | |   | |   |-BinaryOperator 0x2159bc1f098 <col:10, col:31> 'unsigned long long' '|'
|   | |   | |   | |-CStyleCastExpr 0x2159bc18f60 <col:10, col:18> 'size_t':'unsigned long long' <PointerToIntegral>
|   | |   | |   | | `-ImplicitCastExpr 0x2159bc18f48 <col:18> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
|   | |   | |   | |   `-DeclRefExpr 0x2159bc18f00 <col:18> 'const unsigned char *' lvalue ParmVar 0x2159bc186e0 'in' 'const unsigned char *'
|   | |   | |   | `-CStyleCastExpr 0x2159bc1f070 <col:23, col:31> 'size_t':'unsigned long long' <PointerToIntegral>
|   | |   | |   |   `-ImplicitCastExpr 0x2159bc1f058 <col:31> 'unsigned char *' <LValueToRValue> part_of_explicit_cast
|   | |   | |   |     `-DeclRefExpr 0x2159bc1f010 <col:31> 'unsigned char *' lvalue ParmVar 0x2159bc18790 'out' 'unsigned char *'
|   | |   | |   `-CStyleCastExpr 0x2159bc1f100 <col:37, col:45> 'size_t':'unsigned long long' <PointerToIntegral>
|   | |   | |     `-ImplicitCastExpr 0x2159bc1f0e8 <col:45> 'unsigned char *':'unsigned char *' <LValueToRValue> part_of_explicit_cast
|   | |   | |       `-DeclRefExpr 0x2159bc1f0b8 <col:45> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x2159bc18990 'ivec' 'unsigned char *':'unsigned char *'
|   | |   | `-UnaryExprOrTypeTraitExpr 0x2159bc1f178 <col:53, col:66> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|   | |   `-ImplicitCastExpr 0x2159bc1f1e0 <col:71> 'unsigned long long' <IntegralCast>
|   | |     `-IntegerLiteral 0x2159bc1f1b8 <col:71> 'int' 0
|   | |-CompoundStmt 0x2159bc1f9c8 <col:74, line:40:5>
|   | | `-WhileStmt 0x2159bc1f9b0 <line:31:9, line:39:9>
|   | |   |-BinaryOperator 0x2159bc1f2b0 <line:31:16, col:23> 'int' '>='
|   | |   | |-ImplicitCastExpr 0x2159bc1f280 <col:16> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   | | `-DeclRefExpr 0x2159bc1f238 <col:16> 'size_t':'unsigned long long' lvalue ParmVar 0x2159bc18808 'len' 'size_t':'unsigned long long'
|   | |   | `-ImplicitCastExpr 0x2159bc1f298 <col:23> 'unsigned long long' <IntegralCast>
|   | |   |   `-IntegerLiteral 0x2159bc1f258 <col:23> 'int' 16
|   | |   `-CompoundStmt 0x2159bc1f978 <col:27, line:39:9>
|   | |     |-ForStmt 0x2159bc1f6b8 <line:32:13, line:33:38>
|   | |     | |-BinaryOperator 0x2159bc1f348 <line:32:18, col:22> 'size_t':'unsigned long long' '='
|   | |     | | |-DeclRefExpr 0x2159bc1f2d0 <col:18> 'size_t':'unsigned long long' lvalue Var 0x2159bc18c80 'n' 'size_t':'unsigned long long'
|   | |     | | `-ImplicitCastExpr 0x2159bc1f330 <col:22> 'size_t':'unsigned long long' <IntegralCast>
|   | |     | |   `-IntegerLiteral 0x2159bc1f308 <col:22> 'int' 0
|   | |     | |-<<<NULL>>>
|   | |     | |-BinaryOperator 0x2159bc1f3e0 <col:25, col:29> 'int' '<'
|   | |     | | |-ImplicitCastExpr 0x2159bc1f3b0 <col:25> 'size_t':'unsigned long long' <LValueToRValue>
|   | |     | | | `-DeclRefExpr 0x2159bc1f368 <col:25> 'size_t':'unsigned long long' lvalue Var 0x2159bc18c80 'n' 'size_t':'unsigned long long'
|   | |     | | `-ImplicitCastExpr 0x2159bc1f3c8 <col:29> 'unsigned long long' <IntegralCast>
|   | |     | |   `-IntegerLiteral 0x2159bc1f388 <col:29> 'int' 16
|   | |     | |-UnaryOperator 0x2159bc1f420 <col:33, col:35> 'size_t':'unsigned long long' prefix '++'
|   | |     | | `-DeclRefExpr 0x2159bc1f400 <col:35> 'size_t':'unsigned long long' lvalue Var 0x2159bc18c80 'n' 'size_t':'unsigned long long'
|   | |     | `-BinaryOperator 0x2159bc1f698 <line:33:17, col:38> 'unsigned char' '='
|   | |     |   |-ArraySubscriptExpr 0x2159bc1f4a8 <col:17, col:22> 'unsigned char' lvalue
|   | |     |   | |-ImplicitCastExpr 0x2159bc1f478 <col:17> 'unsigned char *' <LValueToRValue>
|   | |     |   | | `-DeclRefExpr 0x2159bc1f438 <col:17> 'unsigned char *' lvalue ParmVar 0x2159bc18790 'out' 'unsigned char *'
|   | |     |   | `-ImplicitCastExpr 0x2159bc1f490 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   | |     |   |   `-DeclRefExpr 0x2159bc1f458 <col:21> 'size_t':'unsigned long long' lvalue Var 0x2159bc18c80 'n' 'size_t':'unsigned long long'
|   | |     |   `-ImplicitCastExpr 0x2159bc1f680 <col:26, col:38> 'unsigned char' <IntegralCast>
|   | |     |     `-BinaryOperator 0x2159bc1f660 <col:26, col:38> 'int' '^'
|   | |     |       |-ImplicitCastExpr 0x2159bc1f618 <col:26, col:30> 'int' <IntegralCast>
|   | |     |       | `-ImplicitCastExpr 0x2159bc1f600 <col:26, col:30> 'unsigned char' <LValueToRValue>
|   | |     |       |   `-ArraySubscriptExpr 0x2159bc1f538 <col:26, col:30> 'const unsigned char' lvalue
|   | |     |       |     |-ImplicitCastExpr 0x2159bc1f508 <col:26> 'const unsigned char *' <LValueToRValue>
|   | |     |       |     | `-DeclRefExpr 0x2159bc1f4c8 <col:26> 'const unsigned char *' lvalue ParmVar 0x2159bc186e0 'in' 'const unsigned char *'
|   | |     |       |     `-ImplicitCastExpr 0x2159bc1f520 <col:29> 'size_t':'unsigned long long' <LValueToRValue>
|   | |     |       |       `-DeclRefExpr 0x2159bc1f4e8 <col:29> 'size_t':'unsigned long long' lvalue Var 0x2159bc18c80 'n' 'size_t':'unsigned long long'
|   | |     |       `-ImplicitCastExpr 0x2159bc1f648 <col:34, col:38> 'int' <IntegralCast>
|   | |     |         `-ImplicitCastExpr 0x2159bc1f630 <col:34, col:38> 'unsigned char' <LValueToRValue>
|   | |     |           `-ArraySubscriptExpr 0x2159bc1f5e0 <col:34, col:38> 'const unsigned char' lvalue
|   | |     |             |-ImplicitCastExpr 0x2159bc1f5b0 <col:34> 'const unsigned char *' <LValueToRValue>
|   | |     |             | `-DeclRefExpr 0x2159bc1f558 <col:34> 'const unsigned char *' lvalue Var 0x2159bc18d18 'iv' 'const unsigned char *'
|   | |     |             `-ImplicitCastExpr 0x2159bc1f5c8 <col:37> 'size_t':'unsigned long long' <LValueToRValue>
|   | |     |               `-DeclRefExpr 0x2159bc1f590 <col:37> 'size_t':'unsigned long long' lvalue Var 0x2159bc18c80 'n' 'size_t':'unsigned long long'
|   | |     |-BinaryOperator 0x2159bc1f7d8 <line:35:13, col:18> 'const unsigned char *' '='
|   | |     | |-DeclRefExpr 0x2159bc1f768 <col:13> 'const unsigned char *' lvalue Var 0x2159bc18d18 'iv' 'const unsigned char *'
|   | |     | `-ImplicitCastExpr 0x2159bc1f7c0 <col:18> 'const unsigned char *' <NoOp>
|   | |     |   `-ImplicitCastExpr 0x2159bc1f7a8 <col:18> 'unsigned char *' <LValueToRValue>
|   | |     |     `-DeclRefExpr 0x2159bc1f788 <col:18> 'unsigned char *' lvalue ParmVar 0x2159bc18790 'out' 'unsigned char *'
|   | |     |-CompoundAssignOperator 0x2159bc1f858 <line:36:13, col:20> 'size_t':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |     | |-DeclRefExpr 0x2159bc1f7f8 <col:13> 'size_t':'unsigned long long' lvalue ParmVar 0x2159bc18808 'len' 'size_t':'unsigned long long'
|   | |     | `-ImplicitCastExpr 0x2159bc1f840 <col:20> 'unsigned long long' <IntegralCast>
|   | |     |   `-IntegerLiteral 0x2159bc1f818 <col:20> 'int' 16
|   | |     |-CompoundAssignOperator 0x2159bc1f8d0 <line:37:13, col:19> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   | |     | |-DeclRefExpr 0x2159bc1f888 <col:13> 'const unsigned char *' lvalue ParmVar 0x2159bc186e0 'in' 'const unsigned char *'
|   | |     | `-IntegerLiteral 0x2159bc1f8a8 <col:19> 'int' 16
|   | |     `-CompoundAssignOperator 0x2159bc1f948 <line:38:13, col:20> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   | |       |-DeclRefExpr 0x2159bc1f900 <col:13> 'unsigned char *' lvalue ParmVar 0x2159bc18790 'out' 'unsigned char *'
|   | |       `-IntegerLiteral 0x2159bc1f920 <col:20> 'int' 16
|   | `-CompoundStmt 0x2159bc22338 <line:40:12, line:51:5>
|   |   `-WhileStmt 0x2159bc22320 <line:41:9, line:50:9>
|   |     |-BinaryOperator 0x2159bc1fa58 <line:41:16, col:23> 'int' '>='
|   |     | |-ImplicitCastExpr 0x2159bc1fa28 <col:16> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x2159bc1f9e0 <col:16> 'size_t':'unsigned long long' lvalue ParmVar 0x2159bc18808 'len' 'size_t':'unsigned long long'
|   |     | `-ImplicitCastExpr 0x2159bc1fa40 <col:23> 'unsigned long long' <IntegralCast>
|   |     |   `-IntegerLiteral 0x2159bc1fa00 <col:23> 'int' 16
|   |     `-CompoundStmt 0x2159bc222e8 <col:27, line:50:9>
|   |       |-ForStmt 0x2159bc22040 <line:42:13, line:44:61>
|   |       | |-BinaryOperator 0x2159bc1fad8 <line:42:18, col:22> 'size_t':'unsigned long long' '='
|   |       | | |-DeclRefExpr 0x2159bc1fa78 <col:18> 'size_t':'unsigned long long' lvalue Var 0x2159bc18c80 'n' 'size_t':'unsigned long long'
|   |       | | `-ImplicitCastExpr 0x2159bc1fac0 <col:22> 'size_t':'unsigned long long' <IntegralCast>
|   |       | |   `-IntegerLiteral 0x2159bc1fa98 <col:22> 'int' 0
|   |       | |-<<<NULL>>>
|   |       | |-BinaryOperator 0x2159bc1fb70 <col:25, col:29> 'int' '<'
|   |       | | |-ImplicitCastExpr 0x2159bc1fb40 <col:25> 'size_t':'unsigned long long' <LValueToRValue>
|   |       | | | `-DeclRefExpr 0x2159bc1faf8 <col:25> 'size_t':'unsigned long long' lvalue Var 0x2159bc18c80 'n' 'size_t':'unsigned long long'
|   |       | | `-ImplicitCastExpr 0x2159bc1fb58 <col:29> 'unsigned long long' <IntegralCast>
|   |       | |   `-IntegerLiteral 0x2159bc1fb18 <col:29> 'int' 16
|   |       | |-CompoundAssignOperator 0x2159bc1fbe0 <col:33, col:51> 'size_t':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |       | | |-DeclRefExpr 0x2159bc1fb90 <col:33> 'size_t':'unsigned long long' lvalue Var 0x2159bc18c80 'n' 'size_t':'unsigned long long'
|   |       | | `-UnaryExprOrTypeTraitExpr 0x2159bc1fbc0 <col:38, col:51> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|   |       | `-BinaryOperator 0x2159bc1ffe8 <line:43:17, line:44:61> 'size_t':'unsigned long long' '='
|   |       |   |-UnaryOperator 0x2159bc1fd40 <line:43:17, col:36> 'size_t':'unsigned long long' lvalue prefix '*' cannot overflow
|   |       |   | `-CStyleCastExpr 0x2159bc1fd18 <col:18, col:36> 'size_t *' <BitCast>
|   |       |   |   `-ParenExpr 0x2159bc1fcf8 <col:28, col:36> 'unsigned char *'
|   |       |   |     `-BinaryOperator 0x2159bc1fc80 <col:29, col:35> 'unsigned char *' '+'
|   |       |   |       |-ImplicitCastExpr 0x2159bc1fc50 <col:29> 'unsigned char *' <LValueToRValue>
|   |       |   |       | `-DeclRefExpr 0x2159bc1fc10 <col:29> 'unsigned char *' lvalue ParmVar 0x2159bc18790 'out' 'unsigned char *'
|   |       |   |       `-ImplicitCastExpr 0x2159bc1fc68 <col:35> 'size_t':'unsigned long long' <LValueToRValue>
|   |       |   |         `-DeclRefExpr 0x2159bc1fc30 <col:35> 'size_t':'unsigned long long' lvalue Var 0x2159bc18c80 'n' 'size_t':'unsigned long long'
|   |       |   `-BinaryOperator 0x2159bc1ffc8 <line:44:21, col:61> 'unsigned long long' '^'
|   |       |     |-ImplicitCastExpr 0x2159bc1ff98 <col:21, col:39> 'size_t':'unsigned long long' <LValueToRValue>
|   |       |     | `-UnaryOperator 0x2159bc1fe60 <col:21, col:39> 'size_t':'unsigned long long' lvalue prefix '*' cannot overflow
|   |       |     |   `-CStyleCastExpr 0x2159bc1fe38 <col:22, col:39> 'size_t *' <BitCast>
|   |       |     |     `-ParenExpr 0x2159bc1fe18 <col:32, col:39> 'const unsigned char *'
|   |       |     |       `-BinaryOperator 0x2159bc1fdc8 <col:33, col:38> 'const unsigned char *' '+'
|   |       |     |         |-ImplicitCastExpr 0x2159bc1fd98 <col:33> 'const unsigned char *' <LValueToRValue>
|   |       |     |         | `-DeclRefExpr 0x2159bc1fd58 <col:33> 'const unsigned char *' lvalue ParmVar 0x2159bc186e0 'in' 'const unsigned char *'
|   |       |     |         `-ImplicitCastExpr 0x2159bc1fdb0 <col:38> 'size_t':'unsigned long long' <LValueToRValue>
|   |       |     |           `-DeclRefExpr 0x2159bc1fd78 <col:38> 'size_t':'unsigned long long' lvalue Var 0x2159bc18c80 'n' 'size_t':'unsigned long long'
|   |       |     `-ImplicitCastExpr 0x2159bc1ffb0 <col:43, col:61> 'size_t':'unsigned long long' <LValueToRValue>
|   |       |       `-UnaryOperator 0x2159bc1ff80 <col:43, col:61> 'size_t':'unsigned long long' lvalue prefix '*' cannot overflow
|   |       |         `-CStyleCastExpr 0x2159bc1ff58 <col:44, col:61> 'size_t *' <BitCast>
|   |       |           `-ParenExpr 0x2159bc1ff38 <col:54, col:61> 'const unsigned char *'
|   |       |             `-BinaryOperator 0x2159bc1fee8 <col:55, col:60> 'const unsigned char *' '+'
|   |       |               |-ImplicitCastExpr 0x2159bc1feb8 <col:55> 'const unsigned char *' <LValueToRValue>
|   |       |               | `-DeclRefExpr 0x2159bc1fe78 <col:55> 'const unsigned char *' lvalue Var 0x2159bc18d18 'iv' 'const unsigned char *'
|   |       |               `-ImplicitCastExpr 0x2159bc1fed0 <col:60> 'size_t':'unsigned long long' <LValueToRValue>
|   |       |                 `-DeclRefExpr 0x2159bc1fe98 <col:60> 'size_t':'unsigned long long' lvalue Var 0x2159bc18c80 'n' 'size_t':'unsigned long long'
|   |       |-BinaryOperator 0x2159bc22148 <line:46:13, col:18> 'const unsigned char *' '='
|   |       | |-DeclRefExpr 0x2159bc220d8 <col:13> 'const unsigned char *' lvalue Var 0x2159bc18d18 'iv' 'const unsigned char *'
|   |       | `-ImplicitCastExpr 0x2159bc22130 <col:18> 'const unsigned char *' <NoOp>
|   |       |   `-ImplicitCastExpr 0x2159bc22118 <col:18> 'unsigned char *' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x2159bc220f8 <col:18> 'unsigned char *' lvalue ParmVar 0x2159bc18790 'out' 'unsigned char *'
|   |       |-CompoundAssignOperator 0x2159bc221c8 <line:47:13, col:20> 'size_t':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |       | |-DeclRefExpr 0x2159bc22168 <col:13> 'size_t':'unsigned long long' lvalue ParmVar 0x2159bc18808 'len' 'size_t':'unsigned long long'
|   |       | `-ImplicitCastExpr 0x2159bc221b0 <col:20> 'unsigned long long' <IntegralCast>
|   |       |   `-IntegerLiteral 0x2159bc22188 <col:20> 'int' 16
|   |       |-CompoundAssignOperator 0x2159bc22240 <line:48:13, col:19> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   |       | |-DeclRefExpr 0x2159bc221f8 <col:13> 'const unsigned char *' lvalue ParmVar 0x2159bc186e0 'in' 'const unsigned char *'
|   |       | `-IntegerLiteral 0x2159bc22218 <col:19> 'int' 16
|   |       `-CompoundAssignOperator 0x2159bc222b8 <line:49:13, col:20> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   |         |-DeclRefExpr 0x2159bc22270 <col:13> 'unsigned char *' lvalue ParmVar 0x2159bc18790 'out' 'unsigned char *'
|   |         `-IntegerLiteral 0x2159bc22290 <col:20> 'int' 16
|   |-WhileStmt 0x2159bc22e20 <line:53:5, line:65:5>
|   | |-ImplicitCastExpr 0x2159bc22398 <line:53:12> 'size_t':'unsigned long long' <LValueToRValue>
|   | | `-DeclRefExpr 0x2159bc22378 <col:12> 'size_t':'unsigned long long' lvalue ParmVar 0x2159bc18808 'len' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x2159bc22dd8 <col:17, line:65:5>
|   |   |-ForStmt 0x2159bc22818 <line:54:9, line:55:34>
|   |   | |-BinaryOperator 0x2159bc22410 <line:54:14, col:18> 'size_t':'unsigned long long' '='
|   |   | | |-DeclRefExpr 0x2159bc223b0 <col:14> 'size_t':'unsigned long long' lvalue Var 0x2159bc18c80 'n' 'size_t':'unsigned long long'
|   |   | | `-ImplicitCastExpr 0x2159bc223f8 <col:18> 'size_t':'unsigned long long' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x2159bc223d0 <col:18> 'int' 0
|   |   | |-<<<NULL>>>
|   |   | |-BinaryOperator 0x2159bc22558 <col:21, col:35> 'int' '&&'
|   |   | | |-BinaryOperator 0x2159bc224a8 <col:21, col:25> 'int' '<'
|   |   | | | |-ImplicitCastExpr 0x2159bc22478 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | | | | `-DeclRefExpr 0x2159bc22430 <col:21> 'size_t':'unsigned long long' lvalue Var 0x2159bc18c80 'n' 'size_t':'unsigned long long'
|   |   | | | `-ImplicitCastExpr 0x2159bc22490 <col:25> 'unsigned long long' <IntegralCast>
|   |   | | |   `-IntegerLiteral 0x2159bc22450 <col:25> 'int' 16
|   |   | | `-BinaryOperator 0x2159bc22538 <col:31, col:35> 'int' '<'
|   |   | |   |-ImplicitCastExpr 0x2159bc22508 <col:31> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | |   | `-DeclRefExpr 0x2159bc224c8 <col:31> 'size_t':'unsigned long long' lvalue Var 0x2159bc18c80 'n' 'size_t':'unsigned long long'
|   |   | |   `-ImplicitCastExpr 0x2159bc22520 <col:35> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x2159bc224e8 <col:35> 'size_t':'unsigned long long' lvalue ParmVar 0x2159bc18808 'len' 'size_t':'unsigned long long'
|   |   | |-UnaryOperator 0x2159bc22598 <col:40, col:42> 'size_t':'unsigned long long' prefix '++'
|   |   | | `-DeclRefExpr 0x2159bc22578 <col:42> 'size_t':'unsigned long long' lvalue Var 0x2159bc18c80 'n' 'size_t':'unsigned long long'
|   |   | `-BinaryOperator 0x2159bc227f8 <line:55:13, col:34> 'unsigned char' '='
|   |   |   |-ArraySubscriptExpr 0x2159bc22620 <col:13, col:18> 'unsigned char' lvalue
|   |   |   | |-ImplicitCastExpr 0x2159bc225f0 <col:13> 'unsigned char *' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x2159bc225b0 <col:13> 'unsigned char *' lvalue ParmVar 0x2159bc18790 'out' 'unsigned char *'
|   |   |   | `-ImplicitCastExpr 0x2159bc22608 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x2159bc225d0 <col:17> 'size_t':'unsigned long long' lvalue Var 0x2159bc18c80 'n' 'size_t':'unsigned long long'
|   |   |   `-ImplicitCastExpr 0x2159bc227e0 <col:22, col:34> 'unsigned char' <IntegralCast>
|   |   |     `-BinaryOperator 0x2159bc227c0 <col:22, col:34> 'int' '^'
|   |   |       |-ImplicitCastExpr 0x2159bc22778 <col:22, col:26> 'int' <IntegralCast>
|   |   |       | `-ImplicitCastExpr 0x2159bc22760 <col:22, col:26> 'unsigned char' <LValueToRValue>
|   |   |       |   `-ArraySubscriptExpr 0x2159bc226b0 <col:22, col:26> 'const unsigned char' lvalue
|   |   |       |     |-ImplicitCastExpr 0x2159bc22680 <col:22> 'const unsigned char *' <LValueToRValue>
|   |   |       |     | `-DeclRefExpr 0x2159bc22640 <col:22> 'const unsigned char *' lvalue ParmVar 0x2159bc186e0 'in' 'const unsigned char *'
|   |   |       |     `-ImplicitCastExpr 0x2159bc22698 <col:25> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |       |       `-DeclRefExpr 0x2159bc22660 <col:25> 'size_t':'unsigned long long' lvalue Var 0x2159bc18c80 'n' 'size_t':'unsigned long long'
|   |   |       `-ImplicitCastExpr 0x2159bc227a8 <col:30, col:34> 'int' <IntegralCast>
|   |   |         `-ImplicitCastExpr 0x2159bc22790 <col:30, col:34> 'unsigned char' <LValueToRValue>
|   |   |           `-ArraySubscriptExpr 0x2159bc22740 <col:30, col:34> 'const unsigned char' lvalue
|   |   |             |-ImplicitCastExpr 0x2159bc22710 <col:30> 'const unsigned char *' <LValueToRValue>
|   |   |             | `-DeclRefExpr 0x2159bc226d0 <col:30> 'const unsigned char *' lvalue Var 0x2159bc18d18 'iv' 'const unsigned char *'
|   |   |             `-ImplicitCastExpr 0x2159bc22728 <col:33> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |               `-DeclRefExpr 0x2159bc226f0 <col:33> 'size_t':'unsigned long long' lvalue Var 0x2159bc18c80 'n' 'size_t':'unsigned long long'
|   |   |-ForStmt 0x2159bc22a78 <line:56:9, line:57:26>
|   |   | |-<<<NULL>>>
|   |   | |-<<<NULL>>>
|   |   | |-BinaryOperator 0x2159bc228c8 <line:56:16, col:20> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x2159bc22898 <col:16> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x2159bc22850 <col:16> 'size_t':'unsigned long long' lvalue Var 0x2159bc18c80 'n' 'size_t':'unsigned long long'
|   |   | | `-ImplicitCastExpr 0x2159bc228b0 <col:20> 'unsigned long long' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x2159bc22870 <col:20> 'int' 16
|   |   | |-UnaryOperator 0x2159bc22908 <col:24, col:26> 'size_t':'unsigned long long' prefix '++'
|   |   | | `-DeclRefExpr 0x2159bc228e8 <col:26> 'size_t':'unsigned long long' lvalue Var 0x2159bc18c80 'n' 'size_t':'unsigned long long'
|   |   | `-BinaryOperator 0x2159bc22a58 <line:57:13, col:26> 'unsigned char' '='
|   |   |   |-ArraySubscriptExpr 0x2159bc22990 <col:13, col:18> 'unsigned char' lvalue
|   |   |   | |-ImplicitCastExpr 0x2159bc22960 <col:13> 'unsigned char *' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x2159bc22920 <col:13> 'unsigned char *' lvalue ParmVar 0x2159bc18790 'out' 'unsigned char *'
|   |   |   | `-ImplicitCastExpr 0x2159bc22978 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x2159bc22940 <col:17> 'size_t':'unsigned long long' lvalue Var 0x2159bc18c80 'n' 'size_t':'unsigned long long'
|   |   |   `-ImplicitCastExpr 0x2159bc22a40 <col:22, col:26> 'unsigned char' <LValueToRValue>
|   |   |     `-ArraySubscriptExpr 0x2159bc22a20 <col:22, col:26> 'const unsigned char' lvalue
|   |   |       |-ImplicitCastExpr 0x2159bc229f0 <col:22> 'const unsigned char *' <LValueToRValue>
|   |   |       | `-DeclRefExpr 0x2159bc229b0 <col:22> 'const unsigned char *' lvalue Var 0x2159bc18d18 'iv' 'const unsigned char *'
|   |   |       `-ImplicitCastExpr 0x2159bc22a08 <col:25> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x2159bc229d0 <col:25> 'size_t':'unsigned long long' lvalue Var 0x2159bc18c80 'n' 'size_t':'unsigned long long'
|   |   |-BinaryOperator 0x2159bc22b80 <line:59:9, col:14> 'const unsigned char *' '='
|   |   | |-DeclRefExpr 0x2159bc22b10 <col:9> 'const unsigned char *' lvalue Var 0x2159bc18d18 'iv' 'const unsigned char *'
|   |   | `-ImplicitCastExpr 0x2159bc22b68 <col:14> 'const unsigned char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x2159bc22b50 <col:14> 'unsigned char *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x2159bc22b30 <col:14> 'unsigned char *' lvalue ParmVar 0x2159bc18790 'out' 'unsigned char *'
|   |   |-IfStmt 0x2159bc22c40 <line:60:9, line:61:13>
|   |   | |-BinaryOperator 0x2159bc22c18 <line:60:13, col:20> 'int' '<='
|   |   | | |-ImplicitCastExpr 0x2159bc22be8 <col:13> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x2159bc22ba0 <col:13> 'size_t':'unsigned long long' lvalue ParmVar 0x2159bc18808 'len' 'size_t':'unsigned long long'
|   |   | | `-ImplicitCastExpr 0x2159bc22c00 <col:20> 'unsigned long long' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x2159bc22bc0 <col:20> 'int' 16
|   |   | `-BreakStmt 0x2159bc22c38 <line:61:13>
|   |   |-CompoundAssignOperator 0x2159bc22cb8 <line:62:9, col:16> 'size_t':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |   | |-DeclRefExpr 0x2159bc22c58 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x2159bc18808 'len' 'size_t':'unsigned long long'
|   |   | `-ImplicitCastExpr 0x2159bc22ca0 <col:16> 'unsigned long long' <IntegralCast>
|   |   |   `-IntegerLiteral 0x2159bc22c78 <col:16> 'int' 16
|   |   |-CompoundAssignOperator 0x2159bc22d30 <line:63:9, col:15> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   |   | |-DeclRefExpr 0x2159bc22ce8 <col:9> 'const unsigned char *' lvalue ParmVar 0x2159bc186e0 'in' 'const unsigned char *'
|   |   | `-IntegerLiteral 0x2159bc22d08 <col:15> 'int' 16
|   |   `-CompoundAssignOperator 0x2159bc22da8 <line:64:9, col:16> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   |     |-DeclRefExpr 0x2159bc22d60 <col:9> 'unsigned char *' lvalue ParmVar 0x2159bc18790 'out' 'unsigned char *'
|   |     `-IntegerLiteral 0x2159bc22d80 <col:16> 'int' 16
|   `-CallExpr 0x2159bc22f30 <line:66:5, col:24> 'void *'
|     |-ImplicitCastExpr 0x2159bc22f18 <col:5> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x2159bc22e38 <col:5> 'void *(void *, const void *, unsigned long long)' Function 0x2159bba9478 'memcpy' 'void *(void *, const void *, unsigned long long)'
|     |-ImplicitCastExpr 0x2159bc22f80 <col:12> 'void *' <BitCast>
|     | `-ImplicitCastExpr 0x2159bc22f68 <col:12> 'unsigned char *':'unsigned char *' <LValueToRValue>
|     |   `-DeclRefExpr 0x2159bc22e58 <col:12> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x2159bc18990 'ivec' 'unsigned char *':'unsigned char *'
|     |-ImplicitCastExpr 0x2159bc22fb0 <col:18> 'const void *' <BitCast>
|     | `-ImplicitCastExpr 0x2159bc22f98 <col:18> 'const unsigned char *' <LValueToRValue>
|     |   `-DeclRefExpr 0x2159bc22e78 <col:18> 'const unsigned char *' lvalue Var 0x2159bc18d18 'iv' 'const unsigned char *'
|     `-ImplicitCastExpr 0x2159bc22fc8 <col:22> 'unsigned long long' <IntegralCast>
|       `-IntegerLiteral 0x2159bc22e98 <col:22> 'int' 16
`-FunctionDecl 0x2159bc203a0 <line:69:1, line:161:1> line:69:6 invalid CRYPTO_cbc128_decrypt 'void (const unsigned char *, unsigned char *, size_t, const void *, unsigned char *, int)'
  |-ParmVarDecl 0x2159bc20020 <col:28, col:49> col:49 used in 'const unsigned char *'
  |-ParmVarDecl 0x2159bc200a0 <col:53, col:68> col:68 used out 'unsigned char *'
  |-ParmVarDecl 0x2159bc20118 <line:70:28, col:35> col:35 used len 'size_t':'unsigned long long'
  |-ParmVarDecl 0x2159bc20198 <col:40, col:52> col:52 used key 'const void *'
  |-ParmVarDecl 0x2159bc20268 <line:71:28, col:49> col:42 used ivec 'unsigned char *':'unsigned char *'
  |-ParmVarDecl 0x2159bc202e8 <col:52, col:63> col:63 invalid block 'int'
  `-CompoundStmt 0x2159bc2b8a8 <line:72:1, line:161:1>
    |-DeclStmt 0x2159bc20500 <line:73:5, col:13>
    | `-VarDecl 0x2159bc20498 <col:5, col:12> col:12 used n 'size_t':'unsigned long long'
    |-DeclStmt 0x2159bc208c8 <line:74:5, line:77:10>
    | |-RecordDecl 0x2159bc20518 <line:74:5, line:77:5> line:74:5 union definition
    | | |-FieldDecl 0x2159bc206d8 <line:75:9, col:37> col:16 referenced t 'size_t [2]'
    | | `-FieldDecl 0x2159bc20798 <line:76:9, col:27> col:23 referenced c 'unsigned char [16]'
    | `-VarDecl 0x2159bc20848 <line:74:5, line:77:7> col:7 used tmp 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\cbc128.c:74:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\cbc128.c:74:5)'
    |-IfStmt 0x2159bc209a0 <line:79:5, line:80:9>
    | |-BinaryOperator 0x2159bc20970 <line:79:9, col:16> 'int' '=='
    | | |-ImplicitCastExpr 0x2159bc20940 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
    | | | `-DeclRefExpr 0x2159bc208e0 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x2159bc20118 'len' 'size_t':'unsigned long long'
    | | `-ImplicitCastExpr 0x2159bc20958 <col:16> 'unsigned long long' <IntegralCast>
    | |   `-IntegerLiteral 0x2159bc20918 <col:16> 'int' 0
    | `-ReturnStmt 0x2159bc20990 <line:80:9>
    |-IfStmt 0x2159bc27af0 <line:83:5, line:142:5> has_else
    | |-BinaryOperator 0x2159bc20a70 <line:83:9, col:15> 'int' '!='
    | | |-ImplicitCastExpr 0x2159bc20a28 <col:9> 'const unsigned char *' <LValueToRValue>
    | | | `-DeclRefExpr 0x2159bc209b8 <col:9> 'const unsigned char *' lvalue ParmVar 0x2159bc20020 'in' 'const unsigned char *'
    | | `-ImplicitCastExpr 0x2159bc20a58 <col:15> 'const unsigned char *' <BitCast>
    | |   `-ImplicitCastExpr 0x2159bc20a40 <col:15> 'unsigned char *' <LValueToRValue>
    | |     `-DeclRefExpr 0x2159bc209f0 <col:15> 'unsigned char *' lvalue ParmVar 0x2159bc200a0 'out' 'unsigned char *'
    | |-CompoundStmt 0x2159bc29f40 <col:20, line:111:5>
    | | |-DeclStmt 0x2159bc20b78 <line:84:9, col:39>
    | | | `-VarDecl 0x2159bc20aa8 <col:9, col:35> col:30 used iv 'const unsigned char *' cinit
    | | |   `-ImplicitCastExpr 0x2159bc20b60 <col:35> 'const unsigned char *' <NoOp>
    | | |     `-ImplicitCastExpr 0x2159bc20b48 <col:35> 'unsigned char *':'unsigned char *' <LValueToRValue>
    | | |       `-DeclRefExpr 0x2159bc20b10 <col:35> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x2159bc20268 'ivec' 'unsigned char *':'unsigned char *'
    | | |-IfStmt 0x2159bc21ee8 <line:86:9, line:109:9> has_else
    | | | |-BinaryOperator 0x2159bc20e18 <line:15:27, line:87:75> 'int' '&&'
    | | | | |-IntegerLiteral 0x2159bc20b90 <line:15:27> 'int' 0
    | | | | `-BinaryOperator 0x2159bc20df8 <line:87:13, col:75> 'int' '!='
    | | | |   |-BinaryOperator 0x2159bc20d98 <col:13, col:70> 'unsigned long long' '%'
    | | | |   | |-ParenExpr 0x2159bc20d48 <col:13, col:53> 'unsigned long long'
    | | | |   | | `-BinaryOperator 0x2159bc20d28 <col:14, col:49> 'unsigned long long' '|'
    | | | |   | |   |-BinaryOperator 0x2159bc20c98 <col:14, col:35> 'unsigned long long' '|'
    | | | |   | |   | |-CStyleCastExpr 0x2159bc20c00 <col:14, col:22> 'size_t':'unsigned long long' <PointerToIntegral>
    | | | |   | |   | | `-ImplicitCastExpr 0x2159bc20be8 <col:22> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
    | | | |   | |   | |   `-DeclRefExpr 0x2159bc20bb8 <col:22> 'const unsigned char *' lvalue ParmVar 0x2159bc20020 'in' 'const unsigned char *'
    | | | |   | |   | `-CStyleCastExpr 0x2159bc20c70 <col:27, col:35> 'size_t':'unsigned long long' <PointerToIntegral>
    | | | |   | |   |   `-ImplicitCastExpr 0x2159bc20c58 <col:35> 'unsigned char *' <LValueToRValue> part_of_explicit_cast
    | | | |   | |   |     `-DeclRefExpr 0x2159bc20c28 <col:35> 'unsigned char *' lvalue ParmVar 0x2159bc200a0 'out' 'unsigned char *'
    | | | |   | |   `-CStyleCastExpr 0x2159bc20d00 <col:41, col:49> 'size_t':'unsigned long long' <PointerToIntegral>
    | | | |   | |     `-ImplicitCastExpr 0x2159bc20ce8 <col:49> 'unsigned char *':'unsigned char *' <LValueToRValue> part_of_explicit_cast
    | | | |   | |       `-DeclRefExpr 0x2159bc20cb8 <col:49> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x2159bc20268 'ivec' 'unsigned char *':'unsigned char *'
    | | | |   | `-UnaryExprOrTypeTraitExpr 0x2159bc20d78 <col:57, col:70> 'unsigned long long' sizeof 'size_t':'unsigned long long'
    | | | |   `-ImplicitCastExpr 0x2159bc20de0 <col:75> 'unsigned long long' <IntegralCast>
    | | | |     `-IntegerLiteral 0x2159bc20db8 <col:75> 'int' 0
    | | | |-CompoundStmt 0x2159bc214f8 <col:78, line:97:9>
    | | | | `-WhileStmt 0x2159bc214e0 <line:88:13, line:96:13>
    | | | |   |-BinaryOperator 0x2159bc20eb0 <line:88:20, col:27> 'int' '>='
    | | | |   | |-ImplicitCastExpr 0x2159bc20e80 <col:20> 'size_t':'unsigned long long' <LValueToRValue>
    | | | |   | | `-DeclRefExpr 0x2159bc20e38 <col:20> 'size_t':'unsigned long long' lvalue ParmVar 0x2159bc20118 'len' 'size_t':'unsigned long long'
    | | | |   | `-ImplicitCastExpr 0x2159bc20e98 <col:27> 'unsigned long long' <IntegralCast>
    | | | |   |   `-IntegerLiteral 0x2159bc20e58 <col:27> 'int' 16
    | | | |   `-CompoundStmt 0x2159bc214a8 <col:31, line:96:13>
    | | | |     |-ForStmt 0x2159bc21278 <line:90:17, line:91:35>
    | | | |     | |-BinaryOperator 0x2159bc20fc0 <line:90:22, col:26> 'size_t':'unsigned long long' '='
    | | | |     | | |-DeclRefExpr 0x2159bc20f48 <col:22> 'size_t':'unsigned long long' lvalue Var 0x2159bc20498 'n' 'size_t':'unsigned long long'
    | | | |     | | `-ImplicitCastExpr 0x2159bc20fa8 <col:26> 'size_t':'unsigned long long' <IntegralCast>
    | | | |     | |   `-IntegerLiteral 0x2159bc20f80 <col:26> 'int' 0
    | | | |     | |-<<<NULL>>>
    | | | |     | |-BinaryOperator 0x2159bc21088 <col:29, col:33> 'int' '<'
    | | | |     | | |-ImplicitCastExpr 0x2159bc21058 <col:29> 'size_t':'unsigned long long' <LValueToRValue>
    | | | |     | | | `-DeclRefExpr 0x2159bc20fe0 <col:29> 'size_t':'unsigned long long' lvalue Var 0x2159bc20498 'n' 'size_t':'unsigned long long'
    | | | |     | | `-ImplicitCastExpr 0x2159bc21070 <col:33> 'unsigned long long' <IntegralCast>
    | | | |     | |   `-IntegerLiteral 0x2159bc21030 <col:33> 'int' 16
    | | | |     | |-UnaryOperator 0x2159bc210c8 <col:37, col:39> 'size_t':'unsigned long long' prefix '++'
    | | | |     | | `-DeclRefExpr 0x2159bc210a8 <col:39> 'size_t':'unsigned long long' lvalue Var 0x2159bc20498 'n' 'size_t':'unsigned long long'
    | | | |     | `-CompoundAssignOperator 0x2159bc21248 <line:91:21, col:35> 'unsigned char' '^=' ComputeLHSTy='int' ComputeResultTy='int'
    | | | |     |   |-ArraySubscriptExpr 0x2159bc21150 <col:21, col:26> 'unsigned char' lvalue
    | | | |     |   | |-ImplicitCastExpr 0x2159bc21120 <col:21> 'unsigned char *' <LValueToRValue>
    | | | |     |   | | `-DeclRefExpr 0x2159bc210e0 <col:21> 'unsigned char *' lvalue ParmVar 0x2159bc200a0 'out' 'unsigned char *'
    | | | |     |   | `-ImplicitCastExpr 0x2159bc21138 <col:25> 'size_t':'unsigned long long' <LValueToRValue>
    | | | |     |   |   `-DeclRefExpr 0x2159bc21100 <col:25> 'size_t':'unsigned long long' lvalue Var 0x2159bc20498 'n' 'size_t':'unsigned long long'
    | | | |     |   `-ImplicitCastExpr 0x2159bc21230 <col:31, col:35> 'int' <IntegralCast>
    | | | |     |     `-ImplicitCastExpr 0x2159bc21218 <col:31, col:35> 'unsigned char' <LValueToRValue>
    | | | |     |       `-ArraySubscriptExpr 0x2159bc211f8 <col:31, col:35> 'const unsigned char' lvalue
    | | | |     |         |-ImplicitCastExpr 0x2159bc211c8 <col:31> 'const unsigned char *' <LValueToRValue>
    | | | |     |         | `-DeclRefExpr 0x2159bc21170 <col:31> 'const unsigned char *' lvalue Var 0x2159bc20aa8 'iv' 'const unsigned char *'
    | | | |     |         `-ImplicitCastExpr 0x2159bc211e0 <col:34> 'size_t':'unsigned long long' <LValueToRValue>
    | | | |     |           `-DeclRefExpr 0x2159bc211a8 <col:34> 'size_t':'unsigned long long' lvalue Var 0x2159bc20498 'n' 'size_t':'unsigned long long'
    | | | |     |-BinaryOperator 0x2159bc21308 <line:92:17, col:22> 'const unsigned char *' '='
    | | | |     | |-DeclRefExpr 0x2159bc212b0 <col:17> 'const unsigned char *' lvalue Var 0x2159bc20aa8 'iv' 'const unsigned char *'
    | | | |     | `-ImplicitCastExpr 0x2159bc212f0 <col:22> 'const unsigned char *' <LValueToRValue>
    | | | |     |   `-DeclRefExpr 0x2159bc212d0 <col:22> 'const unsigned char *' lvalue ParmVar 0x2159bc20020 'in' 'const unsigned char *'
    | | | |     |-CompoundAssignOperator 0x2159bc21388 <line:93:17, col:24> 'size_t':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    | | | |     | |-DeclRefExpr 0x2159bc21328 <col:17> 'size_t':'unsigned long long' lvalue ParmVar 0x2159bc20118 'len' 'size_t':'unsigned long long'
    | | | |     | `-ImplicitCastExpr 0x2159bc21370 <col:24> 'unsigned long long' <IntegralCast>
    | | | |     |   `-IntegerLiteral 0x2159bc21348 <col:24> 'int' 16
    | | | |     |-CompoundAssignOperator 0x2159bc21400 <line:94:17, col:23> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
    | | | |     | |-DeclRefExpr 0x2159bc213b8 <col:17> 'const unsigned char *' lvalue ParmVar 0x2159bc20020 'in' 'const unsigned char *'
    | | | |     | `-IntegerLiteral 0x2159bc213d8 <col:23> 'int' 16
    | | | |     `-CompoundAssignOperator 0x2159bc21478 <line:95:17, col:24> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
    | | | |       |-DeclRefExpr 0x2159bc21430 <col:17> 'unsigned char *' lvalue ParmVar 0x2159bc200a0 'out' 'unsigned char *'
    | | | |       `-IntegerLiteral 0x2159bc21450 <col:24> 'int' 16
    | | | `-IfStmt 0x2159bc21ed0 <line:97:16, line:109:9>
    | | |   |-BinaryOperator 0x2159bc215e0 <line:97:20, col:43> 'int' '=='
    | | |   | |-BinaryOperator 0x2159bc21580 <col:20, col:38> 'unsigned long long' '%'
    | | |   | | |-ImplicitCastExpr 0x2159bc21568 <col:20> 'unsigned long long' <IntegralCast>
    | | |   | | | `-IntegerLiteral 0x2159bc21510 <col:20> 'int' 16
    | | |   | | `-UnaryExprOrTypeTraitExpr 0x2159bc21548 <col:25, col:38> 'unsigned long long' sizeof 'size_t':'unsigned long long'
    | | |   | `-ImplicitCastExpr 0x2159bc215c8 <col:43> 'unsigned long long' <IntegralCast>
    | | |   |   `-IntegerLiteral 0x2159bc215a0 <col:43> 'int' 0
    | | |   `-CompoundStmt 0x2159bc21eb8 <col:46, line:109:9>
    | | |     `-WhileStmt 0x2159bc21ea0 <line:98:13, line:108:13>
    | | |       |-BinaryOperator 0x2159bc21678 <line:98:20, col:27> 'int' '>='
    | | |       | |-ImplicitCastExpr 0x2159bc21648 <col:20> 'size_t':'unsigned long long' <LValueToRValue>
    | | |       | | `-DeclRefExpr 0x2159bc21600 <col:20> 'size_t':'unsigned long long' lvalue ParmVar 0x2159bc20118 'len' 'size_t':'unsigned long long'
    | | |       | `-ImplicitCastExpr 0x2159bc21660 <col:27> 'unsigned long long' <IntegralCast>
    | | |       |   `-IntegerLiteral 0x2159bc21620 <col:27> 'int' 16
    | | |       `-CompoundStmt 0x2159bc21e60 <col:31, line:108:13>
    | | |         |-DeclStmt 0x2159bc21880 <line:99:17, col:68>
    | | |         | |-VarDecl 0x2159bc216a8 <col:17, col:43> col:25 used out_t 'size_t *' cinit
    | | |         | | `-CStyleCastExpr 0x2159bc21758 <col:33, col:43> 'size_t *' <BitCast>
    | | |         | |   `-ImplicitCastExpr 0x2159bc21740 <col:43> 'unsigned char *' <LValueToRValue> part_of_explicit_cast
    | | |         | |     `-DeclRefExpr 0x2159bc21710 <col:43> 'unsigned char *' lvalue ParmVar 0x2159bc200a0 'out' 'unsigned char *'
    | | |         | `-VarDecl 0x2159bc21790 <col:17, col:66> col:49 used iv_t 'size_t *' cinit
    | | |         |   `-CStyleCastExpr 0x2159bc21840 <col:56, col:66> 'size_t *' <BitCast>
    | | |         |     `-ImplicitCastExpr 0x2159bc21828 <col:66> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
    | | |         |       `-DeclRefExpr 0x2159bc217f8 <col:66> 'const unsigned char *' lvalue Var 0x2159bc20aa8 'iv' 'const unsigned char *'
    | | |         |-ForStmt 0x2159bc21c30 <line:102:17, line:103:39>
    | | |         | |-BinaryOperator 0x2159bc21958 <line:102:22, col:26> 'size_t':'unsigned long long' '='
    | | |         | | |-DeclRefExpr 0x2159bc218f8 <col:22> 'size_t':'unsigned long long' lvalue Var 0x2159bc20498 'n' 'size_t':'unsigned long long'
    | | |         | | `-ImplicitCastExpr 0x2159bc21940 <col:26> 'size_t':'unsigned long long' <IntegralCast>
    | | |         | |   `-IntegerLiteral 0x2159bc21918 <col:26> 'int' 0
    | | |         | |-<<<NULL>>>
    | | |         | |-BinaryOperator 0x2159bc21a40 <col:29, col:51> 'int' '<'
    | | |         | | |-ImplicitCastExpr 0x2159bc21a28 <col:29> 'size_t':'unsigned long long' <LValueToRValue>
    | | |         | | | `-DeclRefExpr 0x2159bc21978 <col:29> 'size_t':'unsigned long long' lvalue Var 0x2159bc20498 'n' 'size_t':'unsigned long long'
    | | |         | | `-BinaryOperator 0x2159bc21a08 <col:33, col:51> 'unsigned long long' '/'
    | | |         | |   |-ImplicitCastExpr 0x2159bc219f0 <col:33> 'unsigned long long' <IntegralCast>
    | | |         | |   | `-IntegerLiteral 0x2159bc21998 <col:33> 'int' 16
    | | |         | |   `-UnaryExprOrTypeTraitExpr 0x2159bc219d0 <col:38, col:51> 'unsigned long long' sizeof 'size_t':'unsigned long long'
    | | |         | |-UnaryOperator 0x2159bc21a80 <col:54, col:55> 'size_t':'unsigned long long' postfix '++'
    | | |         | | `-DeclRefExpr 0x2159bc21a60 <col:54> 'size_t':'unsigned long long' lvalue Var 0x2159bc20498 'n' 'size_t':'unsigned long long'
    | | |         | `-CompoundAssignOperator 0x2159bc21c00 <line:103:21, col:39> 'size_t':'unsigned long long' '^=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    | | |         |   |-ArraySubscriptExpr 0x2159bc21b20 <col:21, col:28> 'size_t':'unsigned long long' lvalue
    | | |         |   | |-ImplicitCastExpr 0x2159bc21af0 <col:21> 'size_t *' <LValueToRValue>
    | | |         |   | | `-DeclRefExpr 0x2159bc21a98 <col:21> 'size_t *' lvalue Var 0x2159bc216a8 'out_t' 'size_t *'
    | | |         |   | `-ImplicitCastExpr 0x2159bc21b08 <col:27> 'size_t':'unsigned long long' <LValueToRValue>
    | | |         |   |   `-DeclRefExpr 0x2159bc21ad0 <col:27> 'size_t':'unsigned long long' lvalue Var 0x2159bc20498 'n' 'size_t':'unsigned long long'
    | | |         |   `-ImplicitCastExpr 0x2159bc21be8 <col:33, col:39> 'size_t':'unsigned long long' <LValueToRValue>
    | | |         |     `-ArraySubscriptExpr 0x2159bc21bc8 <col:33, col:39> 'size_t':'unsigned long long' lvalue
    | | |         |       |-ImplicitCastExpr 0x2159bc21b98 <col:33> 'size_t *' <LValueToRValue>
    | | |         |       | `-DeclRefExpr 0x2159bc21b40 <col:33> 'size_t *' lvalue Var 0x2159bc21790 'iv_t' 'size_t *'
    | | |         |       `-ImplicitCastExpr 0x2159bc21bb0 <col:38> 'size_t':'unsigned long long' <LValueToRValue>
    | | |         |         `-DeclRefExpr 0x2159bc21b78 <col:38> 'size_t':'unsigned long long' lvalue Var 0x2159bc20498 'n' 'size_t':'unsigned long long'
    | | |         |-BinaryOperator 0x2159bc21cc0 <line:104:17, col:22> 'const unsigned char *' '='
    | | |         | |-DeclRefExpr 0x2159bc21c68 <col:17> 'const unsigned char *' lvalue Var 0x2159bc20aa8 'iv' 'const unsigned char *'
    | | |         | `-ImplicitCastExpr 0x2159bc21ca8 <col:22> 'const unsigned char *' <LValueToRValue>
    | | |         |   `-DeclRefExpr 0x2159bc21c88 <col:22> 'const unsigned char *' lvalue ParmVar 0x2159bc20020 'in' 'const unsigned char *'
    | | |         |-CompoundAssignOperator 0x2159bc21d40 <line:105:17, col:24> 'size_t':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    | | |         | |-DeclRefExpr 0x2159bc21ce0 <col:17> 'size_t':'unsigned long long' lvalue ParmVar 0x2159bc20118 'len' 'size_t':'unsigned long long'
    | | |         | `-ImplicitCastExpr 0x2159bc21d28 <col:24> 'unsigned long long' <IntegralCast>
    | | |         |   `-IntegerLiteral 0x2159bc21d00 <col:24> 'int' 16
    | | |         |-CompoundAssignOperator 0x2159bc21db8 <line:106:17, col:23> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
    | | |         | |-DeclRefExpr 0x2159bc21d70 <col:17> 'const unsigned char *' lvalue ParmVar 0x2159bc20020 'in' 'const unsigned char *'
    | | |         | `-IntegerLiteral 0x2159bc21d90 <col:23> 'int' 16
    | | |         `-CompoundAssignOperator 0x2159bc21e30 <line:107:17, col:24> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
    | | |           |-DeclRefExpr 0x2159bc21de8 <col:17> 'unsigned char *' lvalue ParmVar 0x2159bc200a0 'out' 'unsigned char *'
    | | |           `-IntegerLiteral 0x2159bc21e08 <col:24> 'int' 16
    | | `-CallExpr 0x2159bc21fe0 <line:110:9, col:28> 'void *'
    | |   |-ImplicitCastExpr 0x2159bc21fc8 <col:9> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
    | |   | `-DeclRefExpr 0x2159bc21f10 <col:9> 'void *(void *, const void *, unsigned long long)' Function 0x2159bba9478 'memcpy' 'void *(void *, const void *, unsigned long long)'
    | |   |-ImplicitCastExpr 0x2159bc29ee0 <col:16> 'void *' <BitCast>
    | |   | `-ImplicitCastExpr 0x2159bc22018 <col:16> 'unsigned char *':'unsigned char *' <LValueToRValue>
    | |   |   `-DeclRefExpr 0x2159bc21f30 <col:16> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x2159bc20268 'ivec' 'unsigned char *':'unsigned char *'
    | |   |-ImplicitCastExpr 0x2159bc29f10 <col:22> 'const void *' <BitCast>
    | |   | `-ImplicitCastExpr 0x2159bc29ef8 <col:22> 'const unsigned char *' <LValueToRValue>
    | |   |   `-DeclRefExpr 0x2159bc21f50 <col:22> 'const unsigned char *' lvalue Var 0x2159bc20aa8 'iv' 'const unsigned char *'
    | |   `-ImplicitCastExpr 0x2159bc29f28 <col:26> 'unsigned long long' <IntegralCast>
    | |     `-IntegerLiteral 0x2159bc21f70 <col:26> 'int' 16
    | `-CompoundStmt 0x2159bc27ad8 <line:111:12, line:142:5>
    |   `-IfStmt 0x2159bc27ab0 <line:112:9, line:141:9> has_else
    |     |-BinaryOperator 0x2159bc2a1f0 <line:15:27, line:113:75> 'int' '&&'
    |     | |-IntegerLiteral 0x2159bc29f68 <line:15:27> 'int' 0
    |     | `-BinaryOperator 0x2159bc2a1d0 <line:113:13, col:75> 'int' '!='
    |     |   |-BinaryOperator 0x2159bc2a170 <col:13, col:70> 'unsigned long long' '%'
    |     |   | |-ParenExpr 0x2159bc2a120 <col:13, col:53> 'unsigned long long'
    |     |   | | `-BinaryOperator 0x2159bc2a100 <col:14, col:49> 'unsigned long long' '|'
    |     |   | |   |-BinaryOperator 0x2159bc2a070 <col:14, col:35> 'unsigned long long' '|'
    |     |   | |   | |-CStyleCastExpr 0x2159bc29fd8 <col:14, col:22> 'size_t':'unsigned long long' <PointerToIntegral>
    |     |   | |   | | `-ImplicitCastExpr 0x2159bc29fc0 <col:22> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
    |     |   | |   | |   `-DeclRefExpr 0x2159bc29f90 <col:22> 'const unsigned char *' lvalue ParmVar 0x2159bc20020 'in' 'const unsigned char *'
    |     |   | |   | `-CStyleCastExpr 0x2159bc2a048 <col:27, col:35> 'size_t':'unsigned long long' <PointerToIntegral>
    |     |   | |   |   `-ImplicitCastExpr 0x2159bc2a030 <col:35> 'unsigned char *' <LValueToRValue> part_of_explicit_cast
    |     |   | |   |     `-DeclRefExpr 0x2159bc2a000 <col:35> 'unsigned char *' lvalue ParmVar 0x2159bc200a0 'out' 'unsigned char *'
    |     |   | |   `-CStyleCastExpr 0x2159bc2a0d8 <col:41, col:49> 'size_t':'unsigned long long' <PointerToIntegral>
    |     |   | |     `-ImplicitCastExpr 0x2159bc2a0c0 <col:49> 'unsigned char *':'unsigned char *' <LValueToRValue> part_of_explicit_cast
    |     |   | |       `-DeclRefExpr 0x2159bc2a090 <col:49> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x2159bc20268 'ivec' 'unsigned char *':'unsigned char *'
    |     |   | `-UnaryExprOrTypeTraitExpr 0x2159bc2a150 <col:57, col:70> 'unsigned long long' sizeof 'size_t':'unsigned long long'
    |     |   `-ImplicitCastExpr 0x2159bc2a1b8 <col:75> 'unsigned long long' <IntegralCast>
    |     |     `-IntegerLiteral 0x2159bc2a190 <col:75> 'int' 0
    |     |-CompoundStmt 0x2159bc2ac38 <col:78, line:126:9>
    |     | |-DeclStmt 0x2159bc2a290 <line:114:13, col:28>
    |     | | `-VarDecl 0x2159bc2a228 <col:13, col:27> col:27 used c 'unsigned char'
    |     | `-WhileStmt 0x2159bc2ac20 <line:115:13, line:125:13>
    |     |   |-BinaryOperator 0x2159bc2a320 <line:115:20, col:27> 'int' '>='
    |     |   | |-ImplicitCastExpr 0x2159bc2a2f0 <col:20> 'size_t':'unsigned long long' <LValueToRValue>
    |     |   | | `-DeclRefExpr 0x2159bc2a2a8 <col:20> 'size_t':'unsigned long long' lvalue ParmVar 0x2159bc20118 'len' 'size_t':'unsigned long long'
    |     |   | `-ImplicitCastExpr 0x2159bc2a308 <col:27> 'unsigned long long' <IntegralCast>
    |     |   |   `-IntegerLiteral 0x2159bc2a2c8 <col:27> 'int' 16
    |     |   `-CompoundStmt 0x2159bc2abf0 <col:31, line:125:13>
    |     |     |-ForStmt 0x2159bc2aa38 <line:117:17, line:121:17>
    |     |     | |-BinaryOperator 0x2159bc2a448 <line:117:22, col:26> 'size_t':'unsigned long long' '='
    |     |     | | |-DeclRefExpr 0x2159bc2a3e8 <col:22> 'size_t':'unsigned long long' lvalue Var 0x2159bc20498 'n' 'size_t':'unsigned long long'
    |     |     | | `-ImplicitCastExpr 0x2159bc2a430 <col:26> 'size_t':'unsigned long long' <IntegralCast>
    |     |     | |   `-IntegerLiteral 0x2159bc2a408 <col:26> 'int' 0
    |     |     | |-<<<NULL>>>
    |     |     | |-BinaryOperator 0x2159bc2a4e0 <col:29, col:33> 'int' '<'
    |     |     | | |-ImplicitCastExpr 0x2159bc2a4b0 <col:29> 'size_t':'unsigned long long' <LValueToRValue>
    |     |     | | | `-DeclRefExpr 0x2159bc2a468 <col:29> 'size_t':'unsigned long long' lvalue Var 0x2159bc20498 'n' 'size_t':'unsigned long long'
    |     |     | | `-ImplicitCastExpr 0x2159bc2a4c8 <col:33> 'unsigned long long' <IntegralCast>
    |     |     | |   `-IntegerLiteral 0x2159bc2a488 <col:33> 'int' 16
    |     |     | |-UnaryOperator 0x2159bc2a520 <col:37, col:39> 'size_t':'unsigned long long' prefix '++'
    |     |     | | `-DeclRefExpr 0x2159bc2a500 <col:39> 'size_t':'unsigned long long' lvalue Var 0x2159bc20498 'n' 'size_t':'unsigned long long'
    |     |     | `-CompoundStmt 0x2159bc2aa10 <col:42, line:121:17>
    |     |     |   |-BinaryOperator 0x2159bc2a618 <line:118:21, col:29> 'unsigned char' '='
    |     |     |   | |-DeclRefExpr 0x2159bc2a538 <col:21> 'unsigned char' lvalue Var 0x2159bc2a228 'c' 'unsigned char'
    |     |     |   | `-ImplicitCastExpr 0x2159bc2a600 <col:25, col:29> 'unsigned char' <LValueToRValue>
    |     |     |   |   `-ArraySubscriptExpr 0x2159bc2a5e0 <col:25, col:29> 'const unsigned char' lvalue
    |     |     |   |     |-ImplicitCastExpr 0x2159bc2a5b0 <col:25> 'const unsigned char *' <LValueToRValue>
    |     |     |   |     | `-DeclRefExpr 0x2159bc2a570 <col:25> 'const unsigned char *' lvalue ParmVar 0x2159bc20020 'in' 'const unsigned char *'
    |     |     |   |     `-ImplicitCastExpr 0x2159bc2a5c8 <col:28> 'size_t':'unsigned long long' <LValueToRValue>
    |     |     |   |       `-DeclRefExpr 0x2159bc2a590 <col:28> 'size_t':'unsigned long long' lvalue Var 0x2159bc20498 'n' 'size_t':'unsigned long long'
    |     |     |   |-BinaryOperator 0x2159bc2a8b0 <line:119:21, col:47> 'unsigned char' '='
    |     |     |   | |-ArraySubscriptExpr 0x2159bc2a6a8 <col:21, col:26> 'unsigned char' lvalue
    |     |     |   | | |-ImplicitCastExpr 0x2159bc2a678 <col:21> 'unsigned char *' <LValueToRValue>
    |     |     |   | | | `-DeclRefExpr 0x2159bc2a638 <col:21> 'unsigned char *' lvalue ParmVar 0x2159bc200a0 'out' 'unsigned char *'
    |     |     |   | | `-ImplicitCastExpr 0x2159bc2a690 <col:25> 'size_t':'unsigned long long' <LValueToRValue>
    |     |     |   | |   `-DeclRefExpr 0x2159bc2a658 <col:25> 'size_t':'unsigned long long' lvalue Var 0x2159bc20498 'n' 'size_t':'unsigned long long'
    |     |     |   | `-ImplicitCastExpr 0x2159bc2a898 <col:30, col:47> 'unsigned char' <IntegralCast>
    |     |     |   |   `-BinaryOperator 0x2159bc2a878 <col:30, col:47> 'int' '^'
    |     |     |   |     |-ImplicitCastExpr 0x2159bc2a830 <col:30, col:37> 'int' <IntegralCast>
    |     |     |   |     | `-ImplicitCastExpr 0x2159bc2a818 <col:30, col:37> 'unsigned char' <LValueToRValue>
    |     |     |   |     |   `-ArraySubscriptExpr 0x2159bc2a768 <col:30, col:37> 'unsigned char' lvalue
    |     |     |   |     |     |-ImplicitCastExpr 0x2159bc2a738 <col:30, col:34> 'unsigned char *' <ArrayToPointerDecay>
    |     |     |   |     |     | `-MemberExpr 0x2159bc2a6e8 <col:30, col:34> 'unsigned char [16]' lvalue .c 0x2159bc20798
    |     |     |   |     |     |   `-DeclRefExpr 0x2159bc2a6c8 <col:30> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\cbc128.c:74:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\cbc128.c:74:5)' lvalue Var 0x2159bc20848 'tmp' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\cbc128.c:74:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\cbc128.c:74:5)'
    |     |     |   |     |     `-ImplicitCastExpr 0x2159bc2a750 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
    |     |     |   |     |       `-DeclRefExpr 0x2159bc2a718 <col:36> 'size_t':'unsigned long long' lvalue Var 0x2159bc20498 'n' 'size_t':'unsigned long long'
    |     |     |   |     `-ImplicitCastExpr 0x2159bc2a860 <col:41, col:47> 'int' <IntegralCast>
    |     |     |   |       `-ImplicitCastExpr 0x2159bc2a848 <col:41, col:47> 'unsigned char' <LValueToRValue>
    |     |     |   |         `-ArraySubscriptExpr 0x2159bc2a7f8 <col:41, col:47> 'unsigned char' lvalue
    |     |     |   |           |-ImplicitCastExpr 0x2159bc2a7c8 <col:41> 'unsigned char *':'unsigned char *' <LValueToRValue>
    |     |     |   |           | `-DeclRefExpr 0x2159bc2a788 <col:41> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x2159bc20268 'ivec' 'unsigned char *':'unsigned char *'
    |     |     |   |           `-ImplicitCastExpr 0x2159bc2a7e0 <col:46> 'size_t':'unsigned long long' <LValueToRValue>
    |     |     |   |             `-DeclRefExpr 0x2159bc2a7a8 <col:46> 'size_t':'unsigned long long' lvalue Var 0x2159bc20498 'n' 'size_t':'unsigned long long'
    |     |     |   `-BinaryOperator 0x2159bc2a9f0 <line:120:21, col:31> 'unsigned char' '='
    |     |     |     |-ArraySubscriptExpr 0x2159bc2a998 <col:21, col:27> 'unsigned char' lvalue
    |     |     |     | |-ImplicitCastExpr 0x2159bc2a968 <col:21> 'unsigned char *':'unsigned char *' <LValueToRValue>
    |     |     |     | | `-DeclRefExpr 0x2159bc2a928 <col:21> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x2159bc20268 'ivec' 'unsigned char *':'unsigned char *'
    |     |     |     | `-ImplicitCastExpr 0x2159bc2a980 <col:26> 'size_t':'unsigned long long' <LValueToRValue>
    |     |     |     |   `-DeclRefExpr 0x2159bc2a948 <col:26> 'size_t':'unsigned long long' lvalue Var 0x2159bc20498 'n' 'size_t':'unsigned long long'
    |     |     |     `-ImplicitCastExpr 0x2159bc2a9d8 <col:31> 'unsigned char' <LValueToRValue>
    |     |     |       `-DeclRefExpr 0x2159bc2a9b8 <col:31> 'unsigned char' lvalue Var 0x2159bc2a228 'c' 'unsigned char'
    |     |     |-CompoundAssignOperator 0x2159bc2aad0 <line:122:17, col:24> 'size_t':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    |     |     | |-DeclRefExpr 0x2159bc2aa70 <col:17> 'size_t':'unsigned long long' lvalue ParmVar 0x2159bc20118 'len' 'size_t':'unsigned long long'
    |     |     | `-ImplicitCastExpr 0x2159bc2aab8 <col:24> 'unsigned long long' <IntegralCast>
    |     |     |   `-IntegerLiteral 0x2159bc2aa90 <col:24> 'int' 16
    |     |     |-CompoundAssignOperator 0x2159bc2ab48 <line:123:17, col:23> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
    |     |     | |-DeclRefExpr 0x2159bc2ab00 <col:17> 'const unsigned char *' lvalue ParmVar 0x2159bc20020 'in' 'const unsigned char *'
    |     |     | `-IntegerLiteral 0x2159bc2ab20 <col:23> 'int' 16
    |     |     `-CompoundAssignOperator 0x2159bc2abc0 <line:124:17, col:24> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
    |     |       |-DeclRefExpr 0x2159bc2ab78 <col:17> 'unsigned char *' lvalue ParmVar 0x2159bc200a0 'out' 'unsigned char *'
    |     |       `-IntegerLiteral 0x2159bc2ab98 <col:24> 'int' 16
    |     `-IfStmt 0x2159bc27a98 <line:126:16, line:141:9>
    |       |-BinaryOperator 0x2159bc2ad28 <line:126:20, col:43> 'int' '=='
    |       | |-BinaryOperator 0x2159bc2acc8 <col:20, col:38> 'unsigned long long' '%'
    |       | | |-ImplicitCastExpr 0x2159bc2acb0 <col:20> 'unsigned long long' <IntegralCast>
    |       | | | `-IntegerLiteral 0x2159bc2ac58 <col:20> 'int' 16
    |       | | `-UnaryExprOrTypeTraitExpr 0x2159bc2ac90 <col:25, col:38> 'unsigned long long' sizeof 'size_t':'unsigned long long'
    |       | `-ImplicitCastExpr 0x2159bc2ad10 <col:43> 'unsigned long long' <IntegralCast>
    |       |   `-IntegerLiteral 0x2159bc2ace8 <col:43> 'int' 0
    |       `-CompoundStmt 0x2159bc27a80 <col:46, line:141:9>
    |         `-WhileStmt 0x2159bc27a68 <line:127:13, line:140:13>
    |           |-BinaryOperator 0x2159bc2adc0 <line:127:20, col:27> 'int' '>='
    |           | |-ImplicitCastExpr 0x2159bc2ad90 <col:20> 'size_t':'unsigned long long' <LValueToRValue>
    |           | | `-DeclRefExpr 0x2159bc2ad48 <col:20> 'size_t':'unsigned long long' lvalue ParmVar 0x2159bc20118 'len' 'size_t':'unsigned long long'
    |           | `-ImplicitCastExpr 0x2159bc2ada8 <col:27> 'unsigned long long' <IntegralCast>
    |           |   `-IntegerLiteral 0x2159bc2ad68 <col:27> 'int' 16
    |           `-CompoundStmt 0x2159bc27a28 <col:31, line:140:13>
    |             |-DeclStmt 0x2159bc27028 <line:128:17, col:75>
    |             | |-VarDecl 0x2159bc2adf0 <col:17, col:24> col:24 used c 'size_t':'unsigned long long'
    |             | |-VarDecl 0x2159bc2ae68 <col:17, col:46> col:28 used out_t 'size_t *' cinit
    |             | | `-CStyleCastExpr 0x2159bc26ef8 <col:36, col:46> 'size_t *' <BitCast>
    |             | |   `-ImplicitCastExpr 0x2159bc26ee0 <col:46> 'unsigned char *' <LValueToRValue> part_of_explicit_cast
    |             | |     `-DeclRefExpr 0x2159bc26eb0 <col:46> 'unsigned char *' lvalue ParmVar 0x2159bc200a0 'out' 'unsigned char *'
    |             | `-VarDecl 0x2159bc26f30 <col:17, col:71> col:52 used ivec_t 'size_t *' cinit
    |             |   `-CStyleCastExpr 0x2159bc26fe0 <col:61, col:71> 'size_t *' <BitCast>
    |             |     `-ImplicitCastExpr 0x2159bc26fc8 <col:71> 'unsigned char *':'unsigned char *' <LValueToRValue> part_of_explicit_cast
    |             |       `-DeclRefExpr 0x2159bc26f98 <col:71> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x2159bc20268 'ivec' 'unsigned char *':'unsigned char *'
    |             |-DeclStmt 0x2159bc27180 <line:129:17, col:56>
    |             | `-VarDecl 0x2159bc270a8 <col:17, col:54> col:31 used in_t 'const size_t *' cinit
    |             |   `-CStyleCastExpr 0x2159bc27158 <col:38, col:54> 'const size_t *' <BitCast>
    |             |     `-ImplicitCastExpr 0x2159bc27140 <col:54> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
    |             |       `-DeclRefExpr 0x2159bc27110 <col:54> 'const unsigned char *' lvalue ParmVar 0x2159bc20020 'in' 'const unsigned char *'
    |             |-ForStmt 0x2159bc27870 <line:132:17, line:136:17>
    |             | |-BinaryOperator 0x2159bc27288 <line:132:22, col:26> 'size_t':'unsigned long long' '='
    |             | | |-DeclRefExpr 0x2159bc27228 <col:22> 'size_t':'unsigned long long' lvalue Var 0x2159bc20498 'n' 'size_t':'unsigned long long'
    |             | | `-ImplicitCastExpr 0x2159bc27270 <col:26> 'size_t':'unsigned long long' <IntegralCast>
    |             | |   `-IntegerLiteral 0x2159bc27248 <col:26> 'int' 0
    |             | |-<<<NULL>>>
    |             | |-BinaryOperator 0x2159bc27370 <col:29, col:51> 'int' '<'
    |             | | |-ImplicitCastExpr 0x2159bc27358 <col:29> 'size_t':'unsigned long long' <LValueToRValue>
    |             | | | `-DeclRefExpr 0x2159bc272a8 <col:29> 'size_t':'unsigned long long' lvalue Var 0x2159bc20498 'n' 'size_t':'unsigned long long'
    |             | | `-BinaryOperator 0x2159bc27338 <col:33, col:51> 'unsigned long long' '/'
    |             | |   |-ImplicitCastExpr 0x2159bc27320 <col:33> 'unsigned long long' <IntegralCast>
    |             | |   | `-IntegerLiteral 0x2159bc272c8 <col:33> 'int' 16
    |             | |   `-UnaryExprOrTypeTraitExpr 0x2159bc27300 <col:38, col:51> 'unsigned long long' sizeof 'size_t':'unsigned long long'
    |             | |-UnaryOperator 0x2159bc273b0 <col:54, col:55> 'size_t':'unsigned long long' postfix '++'
    |             | | `-DeclRefExpr 0x2159bc27390 <col:54> 'size_t':'unsigned long long' lvalue Var 0x2159bc20498 'n' 'size_t':'unsigned long long'
    |             | `-CompoundStmt 0x2159bc27848 <col:59, line:136:17>
    |             |   |-BinaryOperator 0x2159bc274c0 <line:133:21, col:31> 'size_t':'unsigned long long' '='
    |             |   | |-DeclRefExpr 0x2159bc273c8 <col:21> 'size_t':'unsigned long long' lvalue Var 0x2159bc2adf0 'c' 'size_t':'unsigned long long'
    |             |   | `-ImplicitCastExpr 0x2159bc274a8 <col:25, col:31> 'size_t':'unsigned long long' <LValueToRValue>
    |             |   |   `-ArraySubscriptExpr 0x2159bc27488 <col:25, col:31> 'const size_t':'const unsigned long long' lvalue
    |             |   |     |-ImplicitCastExpr 0x2159bc27458 <col:25> 'const size_t *' <LValueToRValue>
    |             |   |     | `-DeclRefExpr 0x2159bc27400 <col:25> 'const size_t *' lvalue Var 0x2159bc270a8 'in_t' 'const size_t *'
    |             |   |     `-ImplicitCastExpr 0x2159bc27470 <col:30> 'size_t':'unsigned long long' <LValueToRValue>
    |             |   |       `-DeclRefExpr 0x2159bc27438 <col:30> 'size_t':'unsigned long long' lvalue Var 0x2159bc20498 'n' 'size_t':'unsigned long long'
    |             |   |-BinaryOperator 0x2159bc27740 <line:134:21, col:51> 'size_t':'unsigned long long' '='
    |             |   | |-ArraySubscriptExpr 0x2159bc27568 <col:21, col:28> 'size_t':'unsigned long long' lvalue
    |             |   | | |-ImplicitCastExpr 0x2159bc27538 <col:21> 'size_t *' <LValueToRValue>
    |             |   | | | `-DeclRefExpr 0x2159bc274e0 <col:21> 'size_t *' lvalue Var 0x2159bc2ae68 'out_t' 'size_t *'
    |             |   | | `-ImplicitCastExpr 0x2159bc27550 <col:27> 'size_t':'unsigned long long' <LValueToRValue>
    |             |   | |   `-DeclRefExpr 0x2159bc27518 <col:27> 'size_t':'unsigned long long' lvalue Var 0x2159bc20498 'n' 'size_t':'unsigned long long'
    |             |   | `-BinaryOperator 0x2159bc27720 <col:32, col:51> 'unsigned long long' '^'
    |             |   |   |-ImplicitCastExpr 0x2159bc276f0 <col:32, col:39> 'size_t':'unsigned long long' <LValueToRValue>
    |             |   |   | `-ArraySubscriptExpr 0x2159bc27628 <col:32, col:39> 'size_t':'unsigned long long' lvalue
    |             |   |   |   |-ImplicitCastExpr 0x2159bc275f8 <col:32, col:36> 'size_t *' <ArrayToPointerDecay>
    |             |   |   |   | `-MemberExpr 0x2159bc275a8 <col:32, col:36> 'size_t [2]' lvalue .t 0x2159bc206d8
    |             |   |   |   |   `-DeclRefExpr 0x2159bc27588 <col:32> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\cbc128.c:74:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\cbc128.c:74:5)' lvalue Var 0x2159bc20848 'tmp' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\cbc128.c:74:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\cbc128.c:74:5)'
    |             |   |   |   `-ImplicitCastExpr 0x2159bc27610 <col:38> 'size_t':'unsigned long long' <LValueToRValue>
    |             |   |   |     `-DeclRefExpr 0x2159bc275d8 <col:38> 'size_t':'unsigned long long' lvalue Var 0x2159bc20498 'n' 'size_t':'unsigned long long'
    |             |   |   `-ImplicitCastExpr 0x2159bc27708 <col:43, col:51> 'size_t':'unsigned long long' <LValueToRValue>
    |             |   |     `-ArraySubscriptExpr 0x2159bc276d0 <col:43, col:51> 'size_t':'unsigned long long' lvalue
    |             |   |       |-ImplicitCastExpr 0x2159bc276a0 <col:43> 'size_t *' <LValueToRValue>
    |             |   |       | `-DeclRefExpr 0x2159bc27648 <col:43> 'size_t *' lvalue Var 0x2159bc26f30 'ivec_t' 'size_t *'
    |             |   |       `-ImplicitCastExpr 0x2159bc276b8 <col:50> 'size_t':'unsigned long long' <LValueToRValue>
    |             |   |         `-DeclRefExpr 0x2159bc27680 <col:50> 'size_t':'unsigned long long' lvalue Var 0x2159bc20498 'n' 'size_t':'unsigned long long'
    |             |   `-BinaryOperator 0x2159bc27828 <line:135:21, col:33> 'size_t':'unsigned long long' '='
    |             |     |-ArraySubscriptExpr 0x2159bc277d0 <col:21, col:29> 'size_t':'unsigned long long' lvalue
    |             |     | |-ImplicitCastExpr 0x2159bc277a0 <col:21> 'size_t *' <LValueToRValue>
    |             |     | | `-DeclRefExpr 0x2159bc27760 <col:21> 'size_t *' lvalue Var 0x2159bc26f30 'ivec_t' 'size_t *'
    |             |     | `-ImplicitCastExpr 0x2159bc277b8 <col:28> 'size_t':'unsigned long long' <LValueToRValue>
    |             |     |   `-DeclRefExpr 0x2159bc27780 <col:28> 'size_t':'unsigned long long' lvalue Var 0x2159bc20498 'n' 'size_t':'unsigned long long'
    |             |     `-ImplicitCastExpr 0x2159bc27810 <col:33> 'size_t':'unsigned long long' <LValueToRValue>
    |             |       `-DeclRefExpr 0x2159bc277f0 <col:33> 'size_t':'unsigned long long' lvalue Var 0x2159bc2adf0 'c' 'size_t':'unsigned long long'
    |             |-CompoundAssignOperator 0x2159bc27908 <line:137:17, col:24> 'size_t':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    |             | |-DeclRefExpr 0x2159bc278a8 <col:17> 'size_t':'unsigned long long' lvalue ParmVar 0x2159bc20118 'len' 'size_t':'unsigned long long'
    |             | `-ImplicitCastExpr 0x2159bc278f0 <col:24> 'unsigned long long' <IntegralCast>
    |             |   `-IntegerLiteral 0x2159bc278c8 <col:24> 'int' 16
    |             |-CompoundAssignOperator 0x2159bc27980 <line:138:17, col:23> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
    |             | |-DeclRefExpr 0x2159bc27938 <col:17> 'const unsigned char *' lvalue ParmVar 0x2159bc20020 'in' 'const unsigned char *'
    |             | `-IntegerLiteral 0x2159bc27958 <col:23> 'int' 16
    |             `-CompoundAssignOperator 0x2159bc279f8 <line:139:17, col:24> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
    |               |-DeclRefExpr 0x2159bc279b0 <col:17> 'unsigned char *' lvalue ParmVar 0x2159bc200a0 'out' 'unsigned char *'
    |               `-IntegerLiteral 0x2159bc279d0 <col:24> 'int' 16
    `-WhileStmt 0x2159bc2b890 <line:144:5, line:160:5>
      |-ImplicitCastExpr 0x2159bc27b38 <line:144:12> 'size_t':'unsigned long long' <LValueToRValue>
      | `-DeclRefExpr 0x2159bc27b18 <col:12> 'size_t':'unsigned long long' lvalue ParmVar 0x2159bc20118 'len' 'size_t':'unsigned long long'
      `-CompoundStmt 0x2159bc2b850 <col:17, line:160:5>
        |-DeclStmt 0x2159bc27bd0 <line:145:9, col:24>
        | `-VarDecl 0x2159bc27b68 <col:9, col:23> col:23 used c 'unsigned char'
        |-ForStmt 0x2159bc2b360 <line:147:9, line:151:9>
        | |-BinaryOperator 0x2159bc27cd8 <line:147:14, col:18> 'size_t':'unsigned long long' '='
        | | |-DeclRefExpr 0x2159bc27c78 <col:14> 'size_t':'unsigned long long' lvalue Var 0x2159bc20498 'n' 'size_t':'unsigned long long'
        | | `-ImplicitCastExpr 0x2159bc27cc0 <col:18> 'size_t':'unsigned long long' <IntegralCast>
        | |   `-IntegerLiteral 0x2159bc27c98 <col:18> 'int' 0
        | |-<<<NULL>>>
        | |-BinaryOperator 0x2159bc27e20 <col:21, col:35> 'int' '&&'
        | | |-BinaryOperator 0x2159bc27d70 <col:21, col:25> 'int' '<'
        | | | |-ImplicitCastExpr 0x2159bc27d40 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
        | | | | `-DeclRefExpr 0x2159bc27cf8 <col:21> 'size_t':'unsigned long long' lvalue Var 0x2159bc20498 'n' 'size_t':'unsigned long long'
        | | | `-ImplicitCastExpr 0x2159bc27d58 <col:25> 'unsigned long long' <IntegralCast>
        | | |   `-IntegerLiteral 0x2159bc27d18 <col:25> 'int' 16
        | | `-BinaryOperator 0x2159bc27e00 <col:31, col:35> 'int' '<'
        | |   |-ImplicitCastExpr 0x2159bc27dd0 <col:31> 'size_t':'unsigned long long' <LValueToRValue>
        | |   | `-DeclRefExpr 0x2159bc27d90 <col:31> 'size_t':'unsigned long long' lvalue Var 0x2159bc20498 'n' 'size_t':'unsigned long long'
        | |   `-ImplicitCastExpr 0x2159bc27de8 <col:35> 'size_t':'unsigned long long' <LValueToRValue>
        | |     `-DeclRefExpr 0x2159bc27db0 <col:35> 'size_t':'unsigned long long' lvalue ParmVar 0x2159bc20118 'len' 'size_t':'unsigned long long'
        | |-UnaryOperator 0x2159bc27e60 <col:40, col:42> 'size_t':'unsigned long long' prefix '++'
        | | `-DeclRefExpr 0x2159bc27e40 <col:42> 'size_t':'unsigned long long' lvalue Var 0x2159bc20498 'n' 'size_t':'unsigned long long'
        | `-CompoundStmt 0x2159bc2b338 <col:45, line:151:9>
        |   |-BinaryOperator 0x2159bc2af98 <line:148:13, col:21> 'unsigned char' '='
        |   | |-DeclRefExpr 0x2159bc27e78 <col:13> 'unsigned char' lvalue Var 0x2159bc27b68 'c' 'unsigned char'
        |   | `-ImplicitCastExpr 0x2159bc2af80 <col:17, col:21> 'unsigned char' <LValueToRValue>
        |   |   `-ArraySubscriptExpr 0x2159bc2af60 <col:17, col:21> 'const unsigned char' lvalue
        |   |     |-ImplicitCastExpr 0x2159bc2af30 <col:17> 'const unsigned char *' <LValueToRValue>
        |   |     | `-DeclRefExpr 0x2159bc2aef0 <col:17> 'const unsigned char *' lvalue ParmVar 0x2159bc20020 'in' 'const unsigned char *'
        |   |     `-ImplicitCastExpr 0x2159bc2af48 <col:20> 'size_t':'unsigned long long' <LValueToRValue>
        |   |       `-DeclRefExpr 0x2159bc2af10 <col:20> 'size_t':'unsigned long long' lvalue Var 0x2159bc20498 'n' 'size_t':'unsigned long long'
        |   |-BinaryOperator 0x2159bc2b230 <line:149:13, col:39> 'unsigned char' '='
        |   | |-ArraySubscriptExpr 0x2159bc2b028 <col:13, col:18> 'unsigned char' lvalue
        |   | | |-ImplicitCastExpr 0x2159bc2aff8 <col:13> 'unsigned char *' <LValueToRValue>
        |   | | | `-DeclRefExpr 0x2159bc2afb8 <col:13> 'unsigned char *' lvalue ParmVar 0x2159bc200a0 'out' 'unsigned char *'
        |   | | `-ImplicitCastExpr 0x2159bc2b010 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
        |   | |   `-DeclRefExpr 0x2159bc2afd8 <col:17> 'size_t':'unsigned long long' lvalue Var 0x2159bc20498 'n' 'size_t':'unsigned long long'
        |   | `-ImplicitCastExpr 0x2159bc2b218 <col:22, col:39> 'unsigned char' <IntegralCast>
        |   |   `-BinaryOperator 0x2159bc2b1f8 <col:22, col:39> 'int' '^'
        |   |     |-ImplicitCastExpr 0x2159bc2b1b0 <col:22, col:29> 'int' <IntegralCast>
        |   |     | `-ImplicitCastExpr 0x2159bc2b198 <col:22, col:29> 'unsigned char' <LValueToRValue>
        |   |     |   `-ArraySubscriptExpr 0x2159bc2b0e8 <col:22, col:29> 'unsigned char' lvalue
        |   |     |     |-ImplicitCastExpr 0x2159bc2b0b8 <col:22, col:26> 'unsigned char *' <ArrayToPointerDecay>
        |   |     |     | `-MemberExpr 0x2159bc2b068 <col:22, col:26> 'unsigned char [16]' lvalue .c 0x2159bc20798
        |   |     |     |   `-DeclRefExpr 0x2159bc2b048 <col:22> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\cbc128.c:74:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\cbc128.c:74:5)' lvalue Var 0x2159bc20848 'tmp' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\cbc128.c:74:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\cbc128.c:74:5)'
        |   |     |     `-ImplicitCastExpr 0x2159bc2b0d0 <col:28> 'size_t':'unsigned long long' <LValueToRValue>
        |   |     |       `-DeclRefExpr 0x2159bc2b098 <col:28> 'size_t':'unsigned long long' lvalue Var 0x2159bc20498 'n' 'size_t':'unsigned long long'
        |   |     `-ImplicitCastExpr 0x2159bc2b1e0 <col:33, col:39> 'int' <IntegralCast>
        |   |       `-ImplicitCastExpr 0x2159bc2b1c8 <col:33, col:39> 'unsigned char' <LValueToRValue>
        |   |         `-ArraySubscriptExpr 0x2159bc2b178 <col:33, col:39> 'unsigned char' lvalue
        |   |           |-ImplicitCastExpr 0x2159bc2b148 <col:33> 'unsigned char *':'unsigned char *' <LValueToRValue>
        |   |           | `-DeclRefExpr 0x2159bc2b108 <col:33> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x2159bc20268 'ivec' 'unsigned char *':'unsigned char *'
        |   |           `-ImplicitCastExpr 0x2159bc2b160 <col:38> 'size_t':'unsigned long long' <LValueToRValue>
        |   |             `-DeclRefExpr 0x2159bc2b128 <col:38> 'size_t':'unsigned long long' lvalue Var 0x2159bc20498 'n' 'size_t':'unsigned long long'
        |   `-BinaryOperator 0x2159bc2b318 <line:150:13, col:23> 'unsigned char' '='
        |     |-ArraySubscriptExpr 0x2159bc2b2c0 <col:13, col:19> 'unsigned char' lvalue
        |     | |-ImplicitCastExpr 0x2159bc2b290 <col:13> 'unsigned char *':'unsigned char *' <LValueToRValue>
        |     | | `-DeclRefExpr 0x2159bc2b250 <col:13> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x2159bc20268 'ivec' 'unsigned char *':'unsigned char *'
        |     | `-ImplicitCastExpr 0x2159bc2b2a8 <col:18> 'size_t':'unsigned long long' <LValueToRValue>
        |     |   `-DeclRefExpr 0x2159bc2b270 <col:18> 'size_t':'unsigned long long' lvalue Var 0x2159bc20498 'n' 'size_t':'unsigned long long'
        |     `-ImplicitCastExpr 0x2159bc2b300 <col:23> 'unsigned char' <LValueToRValue>
        |       `-DeclRefExpr 0x2159bc2b2e0 <col:23> 'unsigned char' lvalue Var 0x2159bc27b68 'c' 'unsigned char'
        |-IfStmt 0x2159bc2b6b8 <line:152:9, line:156:9>
        | |-BinaryOperator 0x2159bc2b410 <line:152:13, col:20> 'int' '<='
        | | |-ImplicitCastExpr 0x2159bc2b3e0 <col:13> 'size_t':'unsigned long long' <LValueToRValue>
        | | | `-DeclRefExpr 0x2159bc2b398 <col:13> 'size_t':'unsigned long long' lvalue ParmVar 0x2159bc20118 'len' 'size_t':'unsigned long long'
        | | `-ImplicitCastExpr 0x2159bc2b3f8 <col:20> 'unsigned long long' <IntegralCast>
        | |   `-IntegerLiteral 0x2159bc2b3b8 <col:20> 'int' 16
        | `-CompoundStmt 0x2159bc2b698 <col:24, line:156:9>
        |   |-ForStmt 0x2159bc2b658 <line:153:13, line:154:31>
        |   | |-<<<NULL>>>
        |   | |-<<<NULL>>>
        |   | |-BinaryOperator 0x2159bc2b4a8 <line:153:20, col:24> 'int' '<'
        |   | | |-ImplicitCastExpr 0x2159bc2b478 <col:20> 'size_t':'unsigned long long' <LValueToRValue>
        |   | | | `-DeclRefExpr 0x2159bc2b430 <col:20> 'size_t':'unsigned long long' lvalue Var 0x2159bc20498 'n' 'size_t':'unsigned long long'
        |   | | `-ImplicitCastExpr 0x2159bc2b490 <col:24> 'unsigned long long' <IntegralCast>
        |   | |   `-IntegerLiteral 0x2159bc2b450 <col:24> 'int' 16
        |   | |-UnaryOperator 0x2159bc2b4e8 <col:28, col:30> 'size_t':'unsigned long long' prefix '++'
        |   | | `-DeclRefExpr 0x2159bc2b4c8 <col:30> 'size_t':'unsigned long long' lvalue Var 0x2159bc20498 'n' 'size_t':'unsigned long long'
        |   | `-BinaryOperator 0x2159bc2b638 <line:154:17, col:31> 'unsigned char' '='
        |   |   |-ArraySubscriptExpr 0x2159bc2b570 <col:17, col:23> 'unsigned char' lvalue
        |   |   | |-ImplicitCastExpr 0x2159bc2b540 <col:17> 'unsigned char *':'unsigned char *' <LValueToRValue>
        |   |   | | `-DeclRefExpr 0x2159bc2b500 <col:17> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x2159bc20268 'ivec' 'unsigned char *':'unsigned char *'
        |   |   | `-ImplicitCastExpr 0x2159bc2b558 <col:22> 'size_t':'unsigned long long' <LValueToRValue>
        |   |   |   `-DeclRefExpr 0x2159bc2b520 <col:22> 'size_t':'unsigned long long' lvalue Var 0x2159bc20498 'n' 'size_t':'unsigned long long'
        |   |   `-ImplicitCastExpr 0x2159bc2b620 <col:27, col:31> 'unsigned char' <LValueToRValue>
        |   |     `-ArraySubscriptExpr 0x2159bc2b600 <col:27, col:31> 'const unsigned char' lvalue
        |   |       |-ImplicitCastExpr 0x2159bc2b5d0 <col:27> 'const unsigned char *' <LValueToRValue>
        |   |       | `-DeclRefExpr 0x2159bc2b590 <col:27> 'const unsigned char *' lvalue ParmVar 0x2159bc20020 'in' 'const unsigned char *'
        |   |       `-ImplicitCastExpr 0x2159bc2b5e8 <col:30> 'size_t':'unsigned long long' <LValueToRValue>
        |   |         `-DeclRefExpr 0x2159bc2b5b0 <col:30> 'size_t':'unsigned long long' lvalue Var 0x2159bc20498 'n' 'size_t':'unsigned long long'
        |   `-BreakStmt 0x2159bc2b690 <line:155:13>
        |-CompoundAssignOperator 0x2159bc2b730 <line:157:9, col:16> 'size_t':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
        | |-DeclRefExpr 0x2159bc2b6d0 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x2159bc20118 'len' 'size_t':'unsigned long long'
        | `-ImplicitCastExpr 0x2159bc2b718 <col:16> 'unsigned long long' <IntegralCast>
        |   `-IntegerLiteral 0x2159bc2b6f0 <col:16> 'int' 16
        |-CompoundAssignOperator 0x2159bc2b7a8 <line:158:9, col:15> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
        | |-DeclRefExpr 0x2159bc2b760 <col:9> 'const unsigned char *' lvalue ParmVar 0x2159bc20020 'in' 'const unsigned char *'
        | `-IntegerLiteral 0x2159bc2b780 <col:15> 'int' 16
        `-CompoundAssignOperator 0x2159bc2b820 <line:159:9, col:16> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
          |-DeclRefExpr 0x2159bc2b7d8 <col:9> 'unsigned char *' lvalue ParmVar 0x2159bc200a0 'out' 'unsigned char *'
          `-IntegerLiteral 0x2159bc2b7f8 <col:16> 'int' 16
