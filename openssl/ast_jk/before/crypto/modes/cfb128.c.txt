TranslationUnitDecl 0x1cc62f9e4a8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1cc62f9ed40 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1cc62f9ea40 '__int128'
|-TypedefDecl 0x1cc62f9edb0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1cc62f9ea60 'unsigned __int128'
|-TypedefDecl 0x1cc62f9f0e8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1cc62f9eea0 'struct __NSConstantString_tag'
|   `-Record 0x1cc62f9ee08 '__NSConstantString_tag'
|-TypedefDecl 0x1cc62f9f158 <<invalid sloc>> <invalid sloc> implicit referenced size_t 'unsigned long long'
| `-BuiltinType 0x1cc62f9e680 'unsigned long long'
|-TypedefDecl 0x1cc62f9f1f0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1cc62f9f1b0 'char *'
|   `-BuiltinType 0x1cc62f9e540 'char'
|-TypedefDecl 0x1cc62f9f260 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1cc62f9f1b0 'char *'
|   `-BuiltinType 0x1cc62f9e540 'char'
|-TypedefDecl 0x1cc62f9f2d0 <.//openssl//file_jk/before\crypto\modes/modes_lcl.h:13:1, col:17> col:17 i64 'long long'
| `-BuiltinType 0x1cc62f9e5e0 'long long'
|-TypedefDecl 0x1cc62f9f340 <line:14:1, col:26> col:26 referenced u64 'unsigned long long'
| `-BuiltinType 0x1cc62f9e680 'unsigned long long'
|-TypedefDecl 0x1cc62f9f3b0 <line:26:1, col:22> col:22 referenced u32 'unsigned int'
| `-BuiltinType 0x1cc62f9e640 'unsigned int'
|-TypedefDecl 0x1cc62f9f420 <line:27:1, col:23> col:23 referenced u8 'unsigned char'
| `-BuiltinType 0x1cc62f9e600 'unsigned char'
|-RecordDecl 0x1cc6485fa70 <line:94:32, line:96:1> line:94:32 struct definition
| |-FieldDecl 0x1cc6485fb60 <line:95:5, col:9> col:9 hi 'u64':'unsigned long long'
| `-FieldDecl 0x1cc6485fbc8 <col:5, col:13> col:13 lo 'u64':'unsigned long long'
|-TypedefDecl 0x1cc6485fc78 <line:94:24, line:96:3> col:3 referenced u128 'struct u128':'u128'
| `-ElaboratedType 0x1cc6485fc20 'struct u128' sugar
|   `-RecordType 0x1cc6485fb10 'u128'
|     `-Record 0x1cc6485fa70 ''
|-RecordDecl 0x1cc6485fce8 <line:107:1, line:130:1> line:107:8 invalid struct gcm128_context definition
| |-RecordDecl 0x1cc6485fda0 <line:109:5, line:114:5> line:109:5 union definition
| | |-FieldDecl 0x1cc6485ff38 <line:110:9, col:16> col:13 u 'u64 [2]'
| | |-FieldDecl 0x1cc64860088 <line:111:9, col:16> col:13 d 'u32 [4]'
| | |-FieldDecl 0x1cc648601d8 <line:112:9, col:16> col:12 c 'u8 [16]'
| | `-FieldDecl 0x1cc64860358 <line:113:9, col:37> col:16 t 'size_t [2]'
| |-FieldDecl 0x1cc64860408 <line:109:5, line:114:7> col:7 Yi 'union (anonymous union at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x1cc64860480 <line:109:5, line:114:11> col:11 EKi 'union (anonymous union at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x1cc648604f8 <line:109:5, line:114:16> col:16 EK0 'union (anonymous union at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x1cc64860570 <line:109:5, line:114:21> col:21 len 'union (anonymous union at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x1cc648605e8 <line:109:5, line:114:26> col:26 Xi 'union (anonymous union at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x1cc64860660 <line:109:5, line:114:30> col:30 H 'union (anonymous union at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x1cc64860818 <line:122:5, col:19> col:10 Htable 'u128 [16]'
| |-FieldDecl 0x1cc6485ccb8 <line:123:5, col:52> col:12 gmult 'void (*)(u64 *, const u128 *)'
| |-FieldDecl 0x1cc6485d1c8 <line:124:5, line:125:30> line:124:12 ghash 'void (*)(u64 *, const u128 *, const u8 *, size_t)'
| |-FieldDecl 0x1cc6485d238 <line:127:5, col:18> col:18 mres 'unsigned int'
| |-FieldDecl 0x1cc6485d2a8 <col:5, col:24> col:24 ares 'unsigned int'
| |-FieldDecl 0x1cc6485d318 <line:128:5, col:16> col:16 invalid block 'int'
| `-FieldDecl 0x1cc6485d388 <line:129:5, col:11> col:11 key 'void *'
|-RecordDecl 0x1cc6485d448 <line:132:1, line:135:1> line:132:8 invalid struct xts128_context definition
| |-FieldDecl 0x1cc6485d518 <line:133:5, col:11> col:11 key1 'void *'
| |-FieldDecl 0x1cc6485d588 <col:5, col:18> col:18 key2 'void *'
| |-FieldDecl 0x1cc6485d5f8 <line:134:5, col:16> col:16 invalid block1 'int'
| `-FieldDecl 0x1cc6485d668 <col:5, col:24> col:24 invalid block2 'int'
|-RecordDecl 0x1cc6485d6c0 <line:137:1, line:145:1> line:137:8 invalid struct ccm128_context definition
| |-RecordDecl 0x1cc6485d780 <line:138:5, line:141:5> line:138:5 union definition
| | |-FieldDecl 0x1cc6485d8a0 <line:139:9, col:16> col:13 u 'u64 [2]'
| | `-FieldDecl 0x1cc6485d958 <line:140:9, col:16> col:12 c 'u8 [16]'
| |-FieldDecl 0x1cc6485da50 <line:138:5, line:141:7> col:7 nonce 'union (anonymous union at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:138:5)':'union ccm128_context::(anonymous at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:138:5)'
| |-FieldDecl 0x1cc6485dac8 <line:138:5, line:141:14> col:14 cmac 'union (anonymous union at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:138:5)':'union ccm128_context::(anonymous at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:138:5)'
| |-FieldDecl 0x1cc6485db30 <line:142:5, col:9> col:9 blocks 'u64':'unsigned long long'
| |-FieldDecl 0x1cc6485dba0 <line:143:5, col:16> col:16 invalid block 'int'
| `-FieldDecl 0x1cc6485dc10 <line:144:5, col:11> col:11 key 'void *'
|-RecordDecl 0x1cc6485dcc0 <line:149:9, line:152:1> line:149:9 union definition
| |-FieldDecl 0x1cc6485dde0 <line:150:5, col:12> col:9 a 'u64 [2]'
| `-FieldDecl 0x1cc6485dea0 <line:151:5, col:23> col:19 c 'unsigned char [16]'
|-TypedefDecl 0x1cc6485df58 <line:149:1, line:152:3> col:3 referenced OCB_BLOCK 'union OCB_BLOCK':'OCB_BLOCK'
| `-ElaboratedType 0x1cc6485df00 'union OCB_BLOCK' sugar
|   `-RecordType 0x1cc6485dd60 'OCB_BLOCK'
|     `-Record 0x1cc6485dcc0 ''
|-RecordDecl 0x1cc6485dfc8 <line:163:1, line:185:1> line:163:8 invalid struct ocb128_context definition
| |-FieldDecl 0x1cc6485e098 <line:165:5, col:16> col:16 invalid encrypt 'int'
| |-FieldDecl 0x1cc6485e108 <line:166:5, col:16> col:16 invalid decrypt 'int'
| |-FieldDecl 0x1cc6485e178 <line:167:5, col:11> col:11 keyenc 'void *'
| |-FieldDecl 0x1cc6485e1e8 <line:168:5, col:11> col:11 keydec 'void *'
| |-FieldDecl 0x1cc6485e258 <line:169:5, col:14> col:14 invalid stream 'int'
| |-FieldDecl 0x1cc6485e2c0 <line:171:5, col:12> col:12 l_index 'size_t':'unsigned long long'
| |-FieldDecl 0x1cc6485e328 <line:172:5, col:12> col:12 max_l_index 'size_t':'unsigned long long'
| |-FieldDecl 0x1cc6485e3b0 <line:173:5, col:15> col:15 l_star 'OCB_BLOCK':'OCB_BLOCK'
| |-FieldDecl 0x1cc6485e418 <line:174:5, col:15> col:15 l_dollar 'OCB_BLOCK':'OCB_BLOCK'
| |-FieldDecl 0x1cc6485e4d8 <line:175:5, col:16> col:16 l 'OCB_BLOCK *'
| |-RecordDecl 0x1cc6485e530 <line:177:5, line:184:5> line:177:5 struct definition
| | |-FieldDecl 0x1cc6485e600 <line:178:9, col:13> col:13 blocks_hashed 'u64':'unsigned long long'
| | |-FieldDecl 0x1cc6485e668 <line:179:9, col:13> col:13 blocks_processed 'u64':'unsigned long long'
| | |-FieldDecl 0x1cc6485e6d0 <line:180:9, col:19> col:19 offset_aad 'OCB_BLOCK':'OCB_BLOCK'
| | |-FieldDecl 0x1cc6485e738 <line:181:9, col:19> col:19 sum 'OCB_BLOCK':'OCB_BLOCK'
| | |-FieldDecl 0x1cc6485e7a0 <line:182:9, col:19> col:19 offset 'OCB_BLOCK':'OCB_BLOCK'
| | `-FieldDecl 0x1cc6485e808 <line:183:9, col:19> col:19 checksum 'OCB_BLOCK':'OCB_BLOCK'
| `-FieldDecl 0x1cc6485e8b8 <line:177:5, line:184:7> col:7 sess 'struct (anonymous struct at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:177:5)':'struct ocb128_context::(anonymous at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:177:5)'
|-TypedefDecl 0x1cc6485e978 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x1cc62f9e680 'unsigned long long'
|-TypedefDecl 0x1cc6485e9e8 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x1cc62f9f1b0 'char *'
|   `-BuiltinType 0x1cc62f9e540 'char'
|-FunctionDecl 0x1cc649df910 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1cc649df9b0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x1cc649dfa20 <col:21> Implicit
|-FunctionDecl 0x1cc649dfa78 prev 0x1cc649df910 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1cc649df7a8 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x1cc649dfb68 <col:21> Inherited Implicit
|-TypedefDecl 0x1cc649dfba8 prev 0x1cc62f9f158 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x1cc62f9e680 'unsigned long long'
|-TypedefDecl 0x1cc649dfc50 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x1cc649dfc20 'size_t' sugar
|   |-Typedef 0x1cc649dfba8 'size_t'
|   `-BuiltinType 0x1cc62f9e680 'unsigned long long'
|-TypedefDecl 0x1cc649dfcc0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x1cc62f9e5e0 'long long'
|-TypedefDecl 0x1cc649dfd30 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x1cc62f9e5e0 'long long'
|-TypedefDecl 0x1cc649dfda0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x1cc62f9e620 'unsigned short'
|-TypedefDecl 0x1cc649dfe10 <line:541:1, col:24> col:24 wint_t 'unsigned short'
| `-BuiltinType 0x1cc62f9e620 'unsigned short'
|-TypedefDecl 0x1cc649dfe80 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x1cc62f9e620 'unsigned short'
|-TypedefDecl 0x1cc649dfef0 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x1cc62f9e5a0 'int'
|-TypedefDecl 0x1cc649dff60 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x1cc62f9e5c0 'long'
|-TypedefDecl 0x1cc649dffd0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x1cc62f9e5e0 'long long'
|-TypedefDecl 0x1cc649e0060 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x1cc649e0030 '__time64_t' sugar
|   |-Typedef 0x1cc649dffd0 '__time64_t'
|   `-BuiltinType 0x1cc62f9e5e0 'long long'
|-FunctionDecl 0x1cc649e01d8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x1cc649e03f8 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x1cc649e6a20 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x1cc649e0538 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x1cc649e05b0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x1cc649e0628 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x1cc649e06a8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x1cc649e67c0 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x1cc649e6b00 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x1cc649e6bc0 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x1cc649e6d30 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x1cc649e6ce0 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x1cc649e6c80 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x1cc649e6ba0 'struct threadlocaleinfostruct'
|       `-Record 0x1cc649f4870 'threadlocaleinfostruct'
|-TypedefDecl 0x1cc649e6e40 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x1cc649e6df0 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x1cc649e6d90 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x1cc649e6c60 'struct threadmbcinfostruct'
|       `-Record 0x1cc649e6bc0 'threadmbcinfostruct'
|-RecordDecl 0x1cc649e6e98 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x1cc649e6f50 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x1cc649e7010 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1cc649e70a0 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x1cc649e7130 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x1cc649e71e8 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x1cc649e7190 'struct localeinfo_struct' sugar
|   `-RecordType 0x1cc649e6ff0 'struct localeinfo_struct'
|     `-Record 0x1cc649e6f50 'localeinfo_struct'
|-TypedefDecl 0x1cc649e72c0 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x1cc649e7270 'struct localeinfo_struct *'
|   `-ElaboratedType 0x1cc649e7190 'struct localeinfo_struct' sugar
|     `-RecordType 0x1cc649e6ff0 'struct localeinfo_struct'
|       `-Record 0x1cc649e6f50 'localeinfo_struct'
|-RecordDecl 0x1cc649e7338 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x1cc649e73f0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1cc649e7468 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x1cc649e7528 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x1cc649e75c0 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x1cc649e7630 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x1cc649e76e8 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x1cc649e7690 'struct localerefcount' sugar
|   `-RecordType 0x1cc649e73d0 'struct localerefcount'
|     `-Record 0x1cc649e7338 'localerefcount'
|-RecordDecl 0x1cc649f4870 prev 0x1cc649e6b00 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x1cc649f48f0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1cc649f4968 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x1cc649f49d8 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x1cc649f4a48 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x1cc649f4ab8 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x1cc649f4c78 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x1cc649f4ce8 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x1cc649f4d58 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x1cc649f4dc8 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x1cc649f4e38 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x1cc649f4ea8 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x1cc649f4f00 parent 0x1cc62f9e4a8 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x1cc649f5090 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x1cc649f5100 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x1cc649f5170 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x1cc649f51e0 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x1cc649f5250 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x1cc649f52c0 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x1cc649f53d0 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x1cc649f5508 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x1cc649f55b8 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x1cc649f5560 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x1cc649e6ba0 'struct threadlocaleinfostruct'
|     `-Record 0x1cc649f4870 'threadlocaleinfostruct'
|-FunctionDecl 0x1cc649ed990 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:47:9, col:142> col:25 _memccpy 'void *(void *, const void *, int, size_t) __attribute__((cdecl))':'void *(void *, const void *, int, size_t)'
| |-ParmVarDecl 0x1cc649f5640 <col:69, col:76> col:76 _Dst 'void *'
| |-ParmVarDecl 0x1cc649f56f0 <col:87, col:100> col:100 _Src 'const void *'
| |-ParmVarDecl 0x1cc649f5770 <col:111, col:115> col:115 _Val 'int'
| `-ParmVarDecl 0x1cc649f57e8 <col:126, col:133> col:133 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1cc649edd58 <line:48:54> col:54 implicit memchr 'void *(const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1cc649eddf8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1cc649ede60 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1cc649edec8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1cc649edf48 prev 0x1cc649edd58 <col:38, col:150> col:54 memchr 'void *(const void *, int, unsigned long long)'
| |-ParmVarDecl 0x1cc649eda80 <col:94, col:107> col:107 _Buf 'const void *'
| |-ParmVarDecl 0x1cc649edb00 <col:119, col:123> col:123 _Val 'int'
| `-ParmVarDecl 0x1cc649edb78 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1cc649ee308 <line:49:24, col:162> col:40 _memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x1cc649ee030 <col:77, col:90> col:90 _Buf1 'const void *'
| |-ParmVarDecl 0x1cc649ee0b0 <col:125, col:138> col:138 _Buf2 'const void *'
| `-ParmVarDecl 0x1cc649ee128 <col:150, col:157> col:157 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1cc649fb8e0 <line:50:24, col:192> col:40 _memicmp_l 'int (const void *, const void *, size_t, _locale_t) __attribute__((cdecl))':'int (const void *, const void *, size_t, _locale_t)'
| |-ParmVarDecl 0x1cc649ee3f0 <col:79, col:92> col:92 _Buf1 'const void *'
| |-ParmVarDecl 0x1cc649ee470 <col:127, col:140> col:140 _Buf2 'const void *'
| |-ParmVarDecl 0x1cc649ee4e8 <col:152, col:159> col:159 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1cc649ee580 <col:175, col:185> col:185 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1cc649fbbe8 <line:51:32> col:32 implicit memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1cc649fbc88 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1cc649fbcf0 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1cc649fbd58 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1cc649fbdd8 prev 0x1cc649fbbe8 <col:16, col:144> col:32 memcmp 'int (const void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x1cc649fb9d0 <col:63, col:76> col:76 _Buf1 'const void *'
| |-ParmVarDecl 0x1cc649fba50 <col:107, col:120> col:120 _Buf2 'const void *'
| `-ParmVarDecl 0x1cc649fbac8 <col:132, col:139> col:139 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1cc649fc198 <line:55:17> col:17 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1cc649fc238 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1cc649fc2a0 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1cc649fc308 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1cc649fc388 prev 0x1cc649fc198 <col:1, col:127> col:17 used memcpy 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x1cc649fbec0 <col:54, col:61> col:61 _Dst 'void *'
| |-ParmVarDecl 0x1cc649fbf40 <col:91, col:104> col:104 _Src 'const void *'
| `-ParmVarDecl 0x1cc649fbfb8 <col:115, col:122> col:122 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1cc649fc828 <line:57:9, col:191> col:26 memcpy_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x1cc649fc498 <col:82, col:89> col:89 _Dst 'void *'
| |-ParmVarDecl 0x1cc649fc530 <col:100, col:108> col:108 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1cc649fc5b0 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x1cc649fc628 <col:174, col:182> col:182 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1cc649fcc18 <line:94:25> col:25 implicit memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1cc649fccb8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1cc649fcd20 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1cc649fcd88 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1cc649fce08 prev 0x1cc649fcc18 <col:9, col:107> col:25 memset 'void *(void *, int, unsigned long long)'
| |-ParmVarDecl 0x1cc649fc940 <col:62, col:69> col:69 _Dst 'void *'
| |-ParmVarDecl 0x1cc649fc9c0 <col:80, col:84> col:84 _Val 'int'
| `-ParmVarDecl 0x1cc649fca38 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1cc649fd288 <line:98:57> col:57 implicit memccpy 'void *(void *, const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1cc649fd328 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1cc649fd390 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1cc649fd3f8 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1cc649fd460 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1cc649fd4e8 prev 0x1cc649fd288 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:98:187> col:57 memccpy 'void *(void *, const void *, int, unsigned long long)'
| |-ParmVarDecl 0x1cc649fcfd0 <col:95, col:102> col:102 _Dst 'void *'
| |-ParmVarDecl 0x1cc649fd050 <col:136, col:149> col:149 _Src 'const void *'
| |-ParmVarDecl 0x1cc649fd0d0 <col:160, col:164> col:164 _Val 'int'
| |-ParmVarDecl 0x1cc649fd148 <col:175, col:182> col:182 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1cc649fd5a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memccpy. See online help for details." ""
|-FunctionDecl 0x1cc649f5920 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:99:190> col:69 memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x1cc649fd770 <col:105, col:118> col:118 _Buf1 'const void *'
| |-ParmVarDecl 0x1cc649fd7f0 <col:153, col:166> col:166 _Buf2 'const void *'
| |-ParmVarDecl 0x1cc649fd868 <col:178, col:185> col:185 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1cc649f59d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memicmp. See online help for details." ""
|-FunctionDecl 0x1cc649f5dd0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:105:40, col:144> col:56 _strset_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x1cc649f5b00 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x1cc649f5b78 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1cc649f5bf8 <col:134, col:138> col:138 _Value 'int'
|-FunctionDecl 0x1cc649f61a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:107:88 _strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x1cc649f5fb0 <col:108, col:114> col:114 _Dest 'char *'
| |-ParmVarDecl 0x1cc649f6030 <col:126, col:131> col:131 _Value 'int'
| `-DeprecatedAttr 0x1cc649f6250 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1cc649f6660 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:109:40, col:158> col:56 strcpy_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x1cc649f6398 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x1cc649f6410 <col:112, col:120> col:120 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1cc649f6490 <col:141, col:154> col:154 _Src 'const char *'
|-FunctionDecl 0x1cc649f7a90 <line:112:88> col:88 implicit strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1cc649f7b30 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x1cc649f7b98 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1cc649f7c10 prev 0x1cc649f7a90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:112:88 strcpy 'char *(char *, const char *)'
| |-ParmVarDecl 0x1cc649f78a0 <col:142, col:148> col:148 _Dest 'char *'
| |-ParmVarDecl 0x1cc649f7920 <col:162, col:176> col:176 _Source 'const char *'
| `-DeprecatedAttr 0x1cc649f7cc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1cc649f8018 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:114:40, col:161> col:56 strcat_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x1cc649f7e08 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x1cc649f7e80 <col:115, col:123> col:123 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1cc649f7f00 <col:144, col:157> col:157 _Src 'const char *'
|-FunctionDecl 0x1cc649f8340 <line:118:88> col:88 implicit strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1cc649f83e0 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x1cc649f8448 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1cc649f84c0 prev 0x1cc649f8340 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:118:88 strcat 'char *(char *, const char *)'
| |-ParmVarDecl 0x1cc649f81c0 <col:170, col:176> col:176 _Dest 'char *'
| |-ParmVarDecl 0x1cc649f8240 <col:190, col:204> col:204 _Source 'const char *'
| `-DeprecatedAttr 0x1cc649f8570 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1cc649f6890 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:120:32> col:32 implicit strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x1cc649f6930 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1cc649f6998 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1cc649f6a10 prev 0x1cc649f6890 <col:16, col:91> col:32 strcmp 'int (const char *, const char *)'
| |-ParmVarDecl 0x1cc649f86b8 <col:46, col:59> col:59 _Str1 'const char *'
| `-ParmVarDecl 0x1cc649f8738 <col:73, col:86> col:86 _Str2 'const char *'
|-FunctionDecl 0x1cc649f6c60 <line:121:32> col:32 implicit strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x1cc649f6d00 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1cc649f6d70 prev 0x1cc649f6c60 <col:16, col:63> col:32 strlen 'unsigned long long (const char *)'
| `-ParmVarDecl 0x1cc649f6af0 <col:46, col:59> col:59 _Str 'const char *'
|-FunctionDecl 0x1cc649f7068 <line:125:1, col:92> col:17 used strnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x1cc649f6e48 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x1cc649f6ec0 <col:76, col:83> col:83 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1cc649f72b8 <line:127:16, line:133:1> line:130:19 strnlen_s 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' static inline
| |-ParmVarDecl 0x1cc649f7148 <col:56, col:69> col:69 used _Str 'const char *'
| |-ParmVarDecl 0x1cc649f71c0 <col:80, col:87> col:87 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x1cc649f75e8 <line:131:1, line:133:1>
|   `-ReturnStmt 0x1cc649f75d8 <line:132:5, col:51>
|     `-ConditionalOperator 0x1cc649f75a8 <col:12, col:51> 'unsigned long long'
|       |-ParenExpr 0x1cc649f7418 <col:12, col:20> 'int'
|       | `-BinaryOperator 0x1cc649f73f8 <col:13, col:19> 'int' '=='
|       |   |-ImplicitCastExpr 0x1cc649f73c8 <col:13> 'const char *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x1cc649f7380 <col:13> 'const char *' lvalue ParmVar 0x1cc649f7148 '_Str' 'const char *'
|       |   `-ImplicitCastExpr 0x1cc649f73e0 <col:19> 'const char *' <NullToPointer>
|       |     `-IntegerLiteral 0x1cc649f73a0 <col:19> 'int' 0
|       |-ImplicitCastExpr 0x1cc649f7590 <col:24> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x1cc649f7438 <col:24> 'int' 0
|       `-CallExpr 0x1cc649f7530 <col:28, col:51> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x1cc649f7518 <col:28> 'size_t (*)(const char *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x1cc649f7460 <col:28> 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' Function 0x1cc649f7068 'strnlen' 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
|         |-ImplicitCastExpr 0x1cc649f7560 <col:36> 'const char *' <LValueToRValue>
|         | `-DeclRefExpr 0x1cc649f7480 <col:36> 'const char *' lvalue ParmVar 0x1cc649f7148 '_Str' 'const char *'
|         `-ImplicitCastExpr 0x1cc649f7578 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x1cc649f74a0 <col:42> 'size_t':'unsigned long long' lvalue ParmVar 0x1cc649f71c0 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x1cc649f88f8 <line:136:28, col:209> col:44 memmove_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x1cc649f7618 <col:100, col:107> col:107 _Dst 'void *'
| |-ParmVarDecl 0x1cc649f7690 <col:118, col:126> col:126 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1cc649f7710 <col:168, col:181> col:181 _Src 'const void *'
| `-ParmVarDecl 0x1cc649f7788 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1cc649f8c00 <line:139:67> col:67 implicit memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1cc649f8ca0 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1cc649f8d08 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1cc649f8d70 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1cc649f8df0 prev 0x1cc649f8c00 <col:51, col:186> col:67 memmove 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x1cc649f89e8 <col:109, col:116> col:116 _Dst 'void *'
| |-ParmVarDecl 0x1cc649f8a68 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x1cc649f8ae0 <col:174, col:181> col:181 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1cc649f9028 <line:146:24, col:76> col:40 _strdup 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| `-ParmVarDecl 0x1cc649f8ed8 <col:59, col:72> col:72 _Src 'const char *'
|-FunctionDecl 0x1cc649f92f0 <line:152:54> col:54 implicit strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x1cc649f9390 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1cc649f93f8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1cc649f9470 prev 0x1cc649f92f0 <col:38, col:100> col:54 strchr 'char *(const char *, int)'
| |-ParmVarDecl 0x1cc649f9100 <col:68, col:81> col:81 _Str 'const char *'
| `-ParmVarDecl 0x1cc649f9180 <col:92, col:96> col:96 _Val 'int'
|-FunctionDecl 0x1cc649f96d0 <line:153:24, col:103> col:40 _stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1cc649f9550 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x1cc649f95d0 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x1cc649f9940 <line:154:24, col:103> col:40 _strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1cc649f97b0 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x1cc649f9830 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x1cc649f9cf8 <line:155:24, col:133> col:40 _stricmp_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x1cc649f9a20 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x1cc649f9aa0 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x1cc649f9b18 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1cc649f9f60 <line:156:24, col:103> col:40 strcoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1cc649f9de0 <col:56, col:69> col:69 _Str1 'const char *'
| `-ParmVarDecl 0x1cc649f9e60 <col:84, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x1cc649fa258 <line:157:24, col:133> col:40 _strcoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x1cc649fa040 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x1cc649fa0c0 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x1cc649fa138 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1cc649fa4c0 <line:158:24, col:104> col:40 _stricoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1cc649fa340 <col:58, col:71> col:71 _Str1 'const char *'
| `-ParmVarDecl 0x1cc649fa3c0 <col:86, col:99> col:99 _Str2 'const char *'
|-FunctionDecl 0x1cc649fa7b8 <line:159:24, col:134> col:40 _stricoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x1cc649fa5a0 <col:60, col:73> col:73 _Str1 'const char *'
| |-ParmVarDecl 0x1cc649fa620 <col:88, col:101> col:101 _Str2 'const char *'
| `-ParmVarDecl 0x1cc649fa698 <col:117, col:127> col:127 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1cc649b85e8 <line:160:24, col:167> col:40 _strncoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1cc649b8310 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1cc649b8390 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x1cc649b8408 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1cc649b8a50 <line:161:24, col:195> col:40 _strncoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1cc649b86d0 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1cc649b8750 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x1cc649b87c8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1cc649b8840 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1cc649b8d58 <line:162:24, col:167> col:40 _strnicoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1cc649b8b40 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1cc649b8bc0 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x1cc649b8c38 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1cc649b90f0 <line:163:24, col:196> col:40 _strnicoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1cc649b8e40 <col:80, col:93> col:93 _Str1 'const char *'
| |-ParmVarDecl 0x1cc649b8ec0 <col:127, col:140> col:140 _Str2 'const char *'
| |-ParmVarDecl 0x1cc649b8f38 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1cc649b8fb0 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1cc64a58038 <line:164:40> col:40 implicit strcspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x1cc64a580d8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1cc64a58140 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1cc64a581b8 prev 0x1cc64a58038 <col:24, col:104> col:40 strcspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x1cc649b91e0 <col:56, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x1cc649b9260 <col:83, col:96> col:96 _Control 'const char *'
|-FunctionDecl 0x1cc64a58470 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:165:118> col:77 _strerror 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x1cc64a58390 <col:98, col:111> col:111 _ErrMsg 'const char *'
| `-DeprecatedAttr 0x1cc64a58518 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1cc64a588f0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:166:28, col:155> col:44 _strerror_s 'errno_t (char *, size_t, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *)'
| |-ParmVarDecl 0x1cc64a58660 <col:85, col:92> col:92 _Buf 'char *'
| |-ParmVarDecl 0x1cc64a586d8 <col:103, col:110> col:110 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1cc64a58758 <col:135, col:148> col:148 _ErrMsg 'const char *'
|-FunctionDecl 0x1cc64a58c08 <line:168:76> col:76 implicit strerror 'char *(int)' extern
| `-ParmVarDecl 0x1cc64a58ca8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1cc64a58d18 prev 0x1cc64a58c08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:168:93> col:76 strerror 'char *(int)'
| |-ParmVarDecl 0x1cc64a58ad0 <col:90> col:93 'int'
| `-DeprecatedAttr 0x1cc64a58dc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1cc64a520e0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:170:28, col:139> col:44 strerror_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x1cc64a51ed0 <col:84, col:91> col:91 _Buf 'char *'
| |-ParmVarDecl 0x1cc64a51f48 <col:102, col:109> col:109 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1cc64a51fc8 <col:128, col:132> col:132 _ErrNum 'int'
|-FunctionDecl 0x1cc64a523e8 <line:173:28, col:109> col:44 _strlwr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x1cc64a521c8 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x1cc64a52240 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1cc64a526d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:175:79 _strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1cc64a52588 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x1cc64a52780 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1cc64a52b90 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:176:28, col:139> col:44 _strlwr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1cc64a528c8 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x1cc64a52940 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1cc64a529b8 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1cc64a55fb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:178:82 _strlwr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x1cc64a52d38 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x1cc64a52db0 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1cc64a56060 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1cc64a56518 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:180:40, col:206> col:56 strncat_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x1cc64a561a8 <col:98, col:105> col:105 _Dst 'char *'
| |-ParmVarDecl 0x1cc64a56220 <col:116, col:124> col:124 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1cc64a562a0 <col:165, col:178> col:178 _Src 'const char *'
| `-ParmVarDecl 0x1cc64a56318 <col:189, col:197> col:197 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1cc64a56998 <line:186:83> col:83 implicit strncat 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1cc64a56a38 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1cc64a56aa0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1cc64a56b08 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1cc64a56b88 prev 0x1cc64a56998 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:186:83 strncat 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1cc64a566c8 <col:161, col:167> col:167 _Dest 'char *'
| |-ParmVarDecl 0x1cc64a56748 <col:198, col:212> col:212 _Source 'const char *'
| |-ParmVarDecl 0x1cc64a567c0 <col:226, col:234> col:234 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1cc64a56c40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1cc64a50f60 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:188:40> col:40 implicit strncmp 'int (const char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1cc64a51000 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1cc64a51068 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1cc64a510d0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1cc64a51150 prev 0x1cc64a50f60 <col:24, col:163> col:40 strncmp 'int (const char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1cc64a56d88 <col:75, col:88> col:88 _Str1 'const char *'
| |-ParmVarDecl 0x1cc64a56e08 <col:122, col:135> col:135 _Str2 'const char *'
| `-ParmVarDecl 0x1cc64a56e80 <col:147, col:154> col:154 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1cc64a51450 <line:189:24, col:165> col:40 _strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1cc64a51238 <col:77, col:90> col:90 _Str1 'const char *'
| |-ParmVarDecl 0x1cc64a512b8 <col:124, col:137> col:137 _Str2 'const char *'
| `-ParmVarDecl 0x1cc64a51330 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1cc64a517e8 <line:190:24, col:195> col:40 _strnicmp_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1cc64a51538 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1cc64a515b8 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x1cc64a51630 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1cc64a516a8 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1cc64a51b80 <line:192:40, col:203> col:56 strncpy_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x1cc64a518d8 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x1cc64a51950 <col:113, col:121> col:121 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1cc64a519d0 <col:162, col:175> col:175 _Src 'const char *'
| `-ParmVarDecl 0x1cc64a51a48 <col:186, col:194> col:194 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1cc64a52f68 <line:195:83> col:83 implicit strncpy 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1cc64a53008 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1cc64a53070 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1cc64a530d8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1cc64a53158 prev 0x1cc64a52f68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:195:83 strncpy 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1cc64a51d30 <col:167, col:173> col:173 _Dest 'char *'
| |-ParmVarDecl 0x1cc64a51db0 <col:204, col:218> col:218 _Source 'const char *'
| |-ParmVarDecl 0x1cc64a51e28 <col:232, col:240> col:240 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1cc64a53210 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1cc64a536c8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:196:40, col:174> col:56 _strnset_s 'errno_t (char *, size_t, int, size_t) __attribute__((cdecl))':'errno_t (char *, size_t, int, size_t)'
| |-ParmVarDecl 0x1cc64a53358 <col:99, col:106> col:106 _Str 'char *'
| |-ParmVarDecl 0x1cc64a533d0 <col:117, col:124> col:124 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1cc64a53450 <col:143, col:147> col:147 _Val 'int'
| `-ParmVarDecl 0x1cc64a534c8 <col:158, col:165> col:165 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1cc64a53b48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:198:83 _strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x1cc64a53878 <col:163, col:169> col:169 _Dest 'char *'
| |-ParmVarDecl 0x1cc64a538f8 <col:181, col:186> col:186 _Val 'int'
| |-ParmVarDecl 0x1cc64a53970 <col:197, col:205> col:205 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1cc64a53c00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1cc64a54f70 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:199:54> col:54 implicit strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x1cc64a55010 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1cc64a55078 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1cc64a550f0 prev 0x1cc64a54f70 <col:38, col:116> col:54 strpbrk 'char *(const char *, const char *)'
| |-ParmVarDecl 0x1cc64a53d48 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x1cc64a53dc8 <col:95, col:108> col:108 _Control 'const char *'
|-FunctionDecl 0x1cc64a55350 <line:200:54> col:54 implicit strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x1cc64a553f0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1cc64a55458 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1cc64a554d0 prev 0x1cc64a55350 <col:38, col:100> col:54 strrchr 'char *(const char *, int)'
| |-ParmVarDecl 0x1cc64a551d0 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x1cc64a55250 <col:93, col:97> col:97 _Ch 'int'
|-FunctionDecl 0x1cc64a55690 <line:201:9, col:54> col:25 _strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| `-ParmVarDecl 0x1cc64a555b0 <col:43, col:50> col:50 _Str 'char *'
|-FunctionDecl 0x1cc64a558e0 <line:202:40> col:40 implicit strspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x1cc64a55980 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1cc64a559e8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1cc64a55a60 prev 0x1cc64a558e0 <col:24, col:101> col:40 strspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x1cc64a55768 <col:54, col:67> col:67 _Str 'const char *'
| `-ParmVarDecl 0x1cc64a557e8 <col:80, col:93> col:93 _Control 'const char *'
|-FunctionDecl 0x1cc64a55cc0 <line:203:70> col:70 implicit strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x1cc64a55d60 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1cc64a55dc8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1cc64a55e40 prev 0x1cc64a55cc0 <col:54, col:130> col:70 strstr 'char *(const char *, const char *)'
| |-ParmVarDecl 0x1cc64a55b40 <col:84, col:97> col:97 _Str 'const char *'
| `-ParmVarDecl 0x1cc64a55bc0 <col:110, col:123> col:123 _SubStr 'const char *'
|-FunctionDecl 0x1cc64a57190 <line:204:74> col:74 implicit strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1cc64a57230 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x1cc64a57298 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1cc64a57310 prev 0x1cc64a57190 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:204:134> col:74 strtok 'char *(char *, const char *)'
| |-ParmVarDecl 0x1cc64a57010 <col:95, col:102> col:102 _Str 'char *'
| |-ParmVarDecl 0x1cc64a57090 <col:115, col:128> col:128 _Delim 'const char *'
| `-DeprecatedAttr 0x1cc64a573c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1cc64a577a8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:206:36, col:162> col:52 strtok_s 'char *(char *, const char *, char **) __attribute__((cdecl))':'char *(char *, const char *, char **)'
| |-ParmVarDecl 0x1cc64a57508 <col:75, col:82> col:82 _Str 'char *'
| |-ParmVarDecl 0x1cc64a57588 <col:95, col:108> col:108 _Delim 'const char *'
| `-ParmVarDecl 0x1cc64a57608 <col:146, col:154> col:154 _Context 'char **'
|-FunctionDecl 0x1cc64a57a00 <line:208:28, col:109> col:44 _strupr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x1cc64a57890 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x1cc64a57908 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1cc64a57c80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:210:79 _strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1cc64a57ba0 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x1cc64a57d28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1cc64a5a0e0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:211:28, col:130> col:44 _strupr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1cc64a57e70 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x1cc64a59f50 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1cc64a59fc8 <col:113, col:123> col:123 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1cc64a5a400 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:213:82 _strupr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x1cc64a5a288 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x1cc64a5a300 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1cc64a5a4b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1cc64a5a8c0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:214:44> col:44 implicit strxfrm 'unsigned long long (char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1cc64a5a960 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1cc64a5a9c8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1cc64a5aa30 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1cc64a5aab0 prev 0x1cc64a5a8c0 <col:28, col:155> col:44 strxfrm 'unsigned long long (char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1cc64a5a5f8 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x1cc64a5a678 <col:115, col:128> col:128 _Src 'const char *'
| `-ParmVarDecl 0x1cc64a5a6f0 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1cc64a58f40 <line:215:28, col:185> col:44 _strxfrm_l 'size_t (char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1cc64a5ab98 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x1cc64a5ac18 <col:117, col:130> col:130 _Src 'const char *'
| |-ParmVarDecl 0x1cc64a5ac90 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1cc64a5ad08 <col:168, col:178> col:178 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1cc64a591f0 <line:245:71> col:71 implicit strdup 'char *(const char *)' extern
| `-ParmVarDecl 0x1cc64a59290 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1cc64a59300 prev 0x1cc64a591f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:245:106> col:71 strdup 'char *(const char *)'
| |-ParmVarDecl 0x1cc64a59110 <col:89, col:102> col:102 _Src 'const char *'
| `-DeprecatedAttr 0x1cc64a593a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strdup. See online help for details." ""
|-FunctionDecl 0x1cc64a596f0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:252:129> col:69 strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1cc64a59570 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x1cc64a595f0 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x1cc64a597a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strcmpi. See online help for details." ""
|-FunctionDecl 0x1cc64a59ae8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:253:129> col:69 stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1cc64a59968 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x1cc64a599e8 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x1cc64a59b98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details." ""
|-FunctionDecl 0x1cc64a59e40 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:254:84> col:56 strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1cc64a59d60 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x1cc64a59ee8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strlwr. See online help for details." ""
|-FunctionDecl 0x1cc64a5b338 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:255:193> col:70 strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1cc64a5b120 <col:106, col:119> col:119 _Str1 'const char *'
| |-ParmVarDecl 0x1cc64a5b1a0 <col:153, col:166> col:166 _Str 'const char *'
| |-ParmVarDecl 0x1cc64a5b218 <col:177, col:184> col:184 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1cc64a5b3f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnicmp. See online help for details." ""
|-FunctionDecl 0x1cc64a5b7d0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:256:143> col:57 strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x1cc64a5b5b8 <col:94, col:101> col:101 _Str 'char *'
| |-ParmVarDecl 0x1cc64a5b638 <col:112, col:116> col:116 _Val 'int'
| |-ParmVarDecl 0x1cc64a5b6b0 <col:127, col:134> col:134 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1cc64a5b888 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnset. See online help for details." ""
|-FunctionDecl 0x1cc64a5bb30 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:257:84> col:56 strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1cc64a5ba50 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x1cc64a5bbd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strrev. See online help for details." ""
|-FunctionDecl 0x1cc64a53ef0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:258:99> col:56 strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x1cc64a5bda0 <col:73, col:80> col:80 _Str 'char *'
| |-ParmVarDecl 0x1cc64a5be20 <col:91, col:95> col:95 _Val 'int'
| `-DeprecatedAttr 0x1cc64a53fa0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strset. See online help for details." ""
|-FunctionDecl 0x1cc64a54248 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:259:84> col:56 strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1cc64a54168 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x1cc64a542f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strupr. See online help for details." ""
|-FunctionDecl 0x1cc64a54580 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:273:24, col:77> col:42 _wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| `-ParmVarDecl 0x1cc64a54410 <col:57, col:73> col:73 _Str 'const wchar_t *'
|-FunctionDecl 0x1cc64a54910 <line:280:40, col:167> col:56 wcscat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x1cc64a54650 <col:97, col:107> col:107 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1cc64a546c8 <col:118, col:126> col:126 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1cc64a54740 <col:147, col:163> col:163 _Src 'const wchar_t *'
|-FunctionDecl 0x1cc64a54cc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:284:82 wcscat 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1cc64a54ab0 <col:164, col:173> col:173 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1cc64a54b28 <col:187, col:204> col:204 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x1cc64a54d78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1cc64a5d198 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:288:41> col:41 implicit wcschr 'unsigned short *(const unsigned short *, unsigned short)' extern
| |-ParmVarDecl 0x1cc64a5d238 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x1cc64a5d2a0 <<invalid sloc>> <invalid sloc> 'unsigned short'
|-FunctionDecl 0x1cc64a5d318 prev 0x1cc64a5d198 <col:23, col:88> col:41 wcschr 'unsigned short *(const unsigned short *, unsigned short)'
| |-ParmVarDecl 0x1cc64a5cf80 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1cc64a5cff8 <col:77, col:85> col:85 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1cc64a5d610 <line:289:36> col:36 implicit wcscmp 'int (const unsigned short *, const unsigned short *)' extern
| |-ParmVarDecl 0x1cc64a5d6b0 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x1cc64a5d718 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x1cc64a5d790 prev 0x1cc64a5d610 <col:24, col:101> col:36 wcscmp 'int (const unsigned short *, const unsigned short *)'
| |-ParmVarDecl 0x1cc64a5d3f0 <col:50, col:66> col:66 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1cc64a5d468 <col:80, col:96> col:96 _Str2 'const wchar_t *'
|-FunctionDecl 0x1cc64a5da70 <line:291:40, col:164> col:56 wcscpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x1cc64a5d868 <col:94, col:104> col:104 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1cc64a5d8e0 <col:115, col:123> col:123 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1cc64a5d958 <col:144, col:160> col:160 _Src 'const wchar_t *'
|-FunctionDecl 0x1cc64a5dd80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:294:82 wcscpy 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1cc64a5dc10 <col:136, col:145> col:145 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1cc64a5dc88 <col:159, col:176> col:176 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x1cc64a5de30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1cc64a5c188 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:295:24, col:107> col:39 wcscspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1cc64a5bf70 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1cc64a5bfe8 <col:83, col:99> col:99 _Control 'const wchar_t *'
|-FunctionDecl 0x1cc64a5c3d0 <line:296:39> col:39 implicit wcslen 'unsigned long long (const unsigned short *)' extern
| `-ParmVarDecl 0x1cc64a5c470 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x1cc64a5c4e0 prev 0x1cc64a5c3d0 <col:24, col:73> col:39 wcslen 'unsigned long long (const unsigned short *)'
| `-ParmVarDecl 0x1cc64a5c260 <col:53, col:69> col:69 _Str 'const wchar_t *'
|-FunctionDecl 0x1cc64a5c7c8 <line:300:1, col:94> col:16 used wcsnlen 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
| |-ParmVarDecl 0x1cc64a5c5b0 <col:51, col:67> col:67 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1cc64a5c628 <col:78, col:85> col:85 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1cc64a5ca10 <line:302:16, line:308:1> line:305:18 wcsnlen_s 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' static inline
| |-ParmVarDecl 0x1cc64a5c8a0 <col:55, col:71> col:71 used _Src 'const wchar_t *'
| |-ParmVarDecl 0x1cc64a5c918 <col:82, col:89> col:89 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x1cc64a5cda8 <line:306:1, line:308:1>
|   `-ReturnStmt 0x1cc64a5cd98 <line:307:5, col:56>
|     `-ConditionalOperator 0x1cc64a5cd68 <col:12, col:56> 'unsigned long long'
|       |-ParenExpr 0x1cc64a5cbd0 <col:12, col:25> 'int'
|       | `-BinaryOperator 0x1cc64a5cbb0 <col:13, line:36:27> 'int' '=='
|       |   |-ImplicitCastExpr 0x1cc64a5cb80 <line:307:13> 'const wchar_t *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x1cc64a5cad8 <col:13> 'const wchar_t *' lvalue ParmVar 0x1cc64a5c8a0 '_Src' 'const wchar_t *'
|       |   `-ImplicitCastExpr 0x1cc64a5cb98 <line:36:17, col:27> 'const wchar_t *' <BitCast>
|       |     `-ParenExpr 0x1cc64a5cb60 <col:17, col:27> 'void *'
|       |       `-CStyleCastExpr 0x1cc64a5cb38 <col:18, col:26> 'void *' <NullToPointer>
|       |         `-IntegerLiteral 0x1cc64a5caf8 <col:26> 'int' 0
|       |-ImplicitCastExpr 0x1cc64a5cd50 <line:307:29> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x1cc64a5cbf0 <col:29> 'int' 0
|       `-CallExpr 0x1cc64a5ccf0 <col:33, col:56> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x1cc64a5ccd8 <col:33> 'size_t (*)(const wchar_t *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x1cc64a5cc18 <col:33> 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' Function 0x1cc64a5c7c8 'wcsnlen' 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
|         |-ImplicitCastExpr 0x1cc64a5cd20 <col:41> 'const wchar_t *' <LValueToRValue>
|         | `-DeclRefExpr 0x1cc64a5cc38 <col:41> 'const wchar_t *' lvalue ParmVar 0x1cc64a5c8a0 '_Src' 'const wchar_t *'
|         `-ImplicitCastExpr 0x1cc64a5cd38 <col:47> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x1cc64a5cc58 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x1cc64a5c918 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x1cc64a601b8 <line:311:40, col:212> col:56 wcsncat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x1cc64a5cdd0 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1cc64a5ce48 <col:119, col:127> col:127 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1cc64a5cec0 <col:168, col:184> col:184 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1cc64a5ffb0 <col:195, col:203> col:203 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1cc64a60620 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:316:86 wcsncat 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1cc64a60360 <col:167, col:176> col:176 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1cc64a603d8 <col:207, col:224> col:224 _Source 'const wchar_t *'
| |-ParmVarDecl 0x1cc64a60450 <col:238, col:246> col:246 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1cc64a606d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1cc64a60ae8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:318:36> col:36 implicit wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)' extern
| |-ParmVarDecl 0x1cc64a60b88 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| |-ParmVarDecl 0x1cc64a60bf0 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x1cc64a60c58 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1cc64a60cd8 prev 0x1cc64a60ae8 <col:24, col:165> col:36 wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)'
| |-ParmVarDecl 0x1cc64a60818 <col:71, col:87> col:87 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1cc64a60890 <col:121, col:137> col:137 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1cc64a60908 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1cc64a61078 <line:320:40, col:209> col:56 wcsncpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x1cc64a60db8 <col:95, col:105> col:105 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1cc64a60e30 <col:116, col:124> col:124 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1cc64a60ea8 <col:165, col:181> col:181 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1cc64a60f20 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1cc64a61428 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:323:86 wcsncpy 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1cc64a61220 <col:179, col:188> col:188 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1cc64a61298 <col:219, col:236> col:236 _Source 'const wchar_t *'
| |-ParmVarDecl 0x1cc64a61310 <col:250, col:258> col:258 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1cc64a614e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1cc64a61838 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:324:38, col:124> col:56 wcspbrk 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1cc64a61620 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1cc64a61698 <col:100, col:116> col:116 _Control 'const wchar_t *'
|-FunctionDecl 0x1cc64a61a80 <line:325:38, col:109> col:56 wcsrchr 'wchar_t *(const wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(const wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1cc64a61910 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1cc64a61988 <col:98, col:106> col:106 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1cc64a61cc8 <line:326:24, col:106> col:39 wcsspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1cc64a61b58 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1cc64a61bd0 <col:82, col:98> col:98 _Control 'const wchar_t *'
|-FunctionDecl 0x1cc64a61f10 <line:329:23, col:107> col:41 wcsstr 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1cc64a61da0 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1cc64a61e18 <col:84, col:100> col:100 _SubStr 'const wchar_t *'
|-FunctionDecl 0x1cc64a64248 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:330:142> col:76 wcstok 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1cc64a640d8 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x1cc64a64150 <col:120, col:136> col:136 _Delim 'const wchar_t *'
| `-DeprecatedAttr 0x1cc64a642f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1cc64a64760 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:332:36, col:173> col:54 wcstok_s 'wchar_t *(wchar_t *, const wchar_t *, wchar_t **) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x1cc64a64438 <col:77, col:87> col:87 _Str 'wchar_t *'
| |-ParmVarDecl 0x1cc64a644b0 <col:100, col:116> col:116 _Delim 'const wchar_t *'
| `-ParmVarDecl 0x1cc64a64590 <col:154, col:165> col:165 _Context 'wchar_t **'
|-FunctionDecl 0x1cc64a64a80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:334:105> col:79 _wcserror 'wchar_t *(int) __attribute__((cdecl))':'wchar_t *(int)'
| |-ParmVarDecl 0x1cc64a64908 <col:94, col:98> col:98 _ErrNum 'int'
| `-DeprecatedAttr 0x1cc64a64b28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1cc64a64f30 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:335:28, col:147> col:44 _wcserror_s 'errno_t (wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, int)'
| |-ParmVarDecl 0x1cc64a64c68 <col:89, col:99> col:99 _Buf 'wchar_t *'
| |-ParmVarDecl 0x1cc64a64ce0 <col:110, col:117> col:117 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1cc64a64d60 <col:136, col:140> col:140 _ErrNum 'int'
|-FunctionDecl 0x1cc64a5f1a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:337:122> col:80 __wcserror 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x1cc64a5f0c8 <col:102, col:118> col:118 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x1cc64a5f248 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1cc64a5f610 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:338:28, col:165> col:44 __wcserror_s 'errno_t (wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x1cc64a5f388 <col:90, col:100> col:100 _Buffer 'wchar_t *'
| |-ParmVarDecl 0x1cc64a5f400 <col:114, col:121> col:121 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1cc64a5f478 <col:142, col:158> col:158 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x1cc64a5f868 <line:341:24, col:103> col:36 _wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1cc64a5f6f0 <col:52, col:68> col:68 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1cc64a5f768 <col:82, col:98> col:98 _Str2 'const wchar_t *'
|-FunctionDecl 0x1cc64a5fc08 <line:342:24, col:133> col:36 _wcsicmp_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1cc64a5f940 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1cc64a5f9b8 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1cc64a5fa30 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1cc64a5fef8 <line:343:24, col:167> col:36 _wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1cc64a5fce8 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1cc64a5fd60 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1cc64a5fdd8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1cc64a63390 <line:344:24, col:197> col:36 _wcsnicmp_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1cc64a63020 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1cc64a63098 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1cc64a63110 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1cc64a63188 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1cc64a637e8 <line:345:40, col:181> col:56 _wcsnset_s 'errno_t (wchar_t *, size_t, wchar_t, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t, size_t)'
| |-ParmVarDecl 0x1cc64a63478 <col:99, col:109> col:109 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1cc64a634f0 <col:120, col:127> col:127 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1cc64a63568 <col:146, col:154> col:154 _Val 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1cc64a635e0 <col:165, col:172> col:172 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1cc64a63c50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:347:86 _wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x1cc64a63990 <col:172, col:181> col:181 _Str 'wchar_t *'
| |-ParmVarDecl 0x1cc64a63a08 <col:187, col:196> col:196 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x1cc64a63a80 <col:207, col:215> col:215 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1cc64a63d08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1cc64a65000 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:348:9, col:59> col:27 _wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| `-ParmVarDecl 0x1cc64a63e48 <col:45, col:55> col:55 _Str 'wchar_t *'
|-FunctionDecl 0x1cc64a65390 <line:349:40, col:159> col:56 _wcsset_s 'errno_t (wchar_t *, size_t, wchar_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t)'
| |-ParmVarDecl 0x1cc64a650d0 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1cc64a65148 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1cc64a651c0 <col:145, col:153> col:153 _Value 'wchar_t':'unsigned short'
|-FunctionDecl 0x1cc64a65748 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:351:85 _wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1cc64a65530 <col:150, col:159> col:159 _Str 'wchar_t *'
| |-ParmVarDecl 0x1cc64a655a8 <col:165, col:174> col:174 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x1cc64a657f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1cc64a65b58 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:353:28, col:126> col:44 _wcslwr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1cc64a65938 <col:86, col:96> col:96 _Str 'wchar_t *'
| `-ParmVarDecl 0x1cc64a659b0 <col:107, col:114> col:114 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1cc64a65dc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:355:82 _wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1cc64a65cf0 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x1cc64a65e70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1cc64a5e250 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:356:28, col:156> col:44 _wcslwr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1cc64a5df90 <col:88, col:98> col:98 _Str 'wchar_t *'
| |-ParmVarDecl 0x1cc64a5e008 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1cc64a5e080 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1cc64a5e608 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:358:85 _wcslwr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1cc64a5e3f0 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x1cc64a5e468 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1cc64a5e6b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1cc64a5e968 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:359:28, col:112> col:44 _wcsupr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1cc64a5e7f8 <col:79, col:89> col:89 _Str 'wchar_t *'
| `-ParmVarDecl 0x1cc64a5e870 <col:100, col:107> col:107 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1cc64a5ebd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:361:82 _wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1cc64a5eb00 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x1cc64a5ec80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1cc64a68070 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:362:28, col:142> col:44 _wcsupr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1cc64a5edc0 <col:81, col:91> col:91 _Str 'wchar_t *'
| |-ParmVarDecl 0x1cc64a5ee38 <col:102, col:109> col:109 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1cc64a5eeb0 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1cc64a68380 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:364:85 _wcsupr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1cc64a68210 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x1cc64a68288 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1cc64a68430 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1cc64a68830 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:365:28, col:159> col:43 wcsxfrm 'size_t (wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1cc64a68570 <col:93, col:103> col:103 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1cc64a685e8 <col:116, col:132> col:132 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1cc64a68660 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1cc64a68c78 <line:366:28, col:189> col:43 _wcsxfrm_l 'size_t (wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1cc64a68910 <col:96, col:106> col:106 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1cc64a68988 <col:119, col:134> col:134 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1cc64a68a00 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1cc64a68a78 <col:172, col:182> col:182 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1cc64a68ed8 <line:367:24, col:102> col:36 wcscoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1cc64a68d60 <col:51, col:67> col:67 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1cc64a68dd8 <col:81, col:97> col:97 _Str2 'const wchar_t *'
|-FunctionDecl 0x1cc64a691d8 <line:368:24, col:133> col:36 _wcscoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1cc64a68fb0 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1cc64a69040 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1cc64a690b8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1cc64a69430 <line:369:24, col:104> col:36 _wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1cc64a692b8 <col:53, col:69> col:69 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1cc64a69330 <col:83, col:99> col:99 _Str2 'const wchar_t *'
|-FunctionDecl 0x1cc64a69718 <line:370:24, col:133> col:36 _wcsicoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1cc64a69508 <col:55, col:71> col:71 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1cc64a69580 <col:85, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1cc64a695f8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1cc64a69a08 <line:371:24, col:167> col:36 _wcsncoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1cc64a697f8 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1cc64a69870 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1cc64a698e8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1cc64a69d90 <line:372:24, col:197> col:36 _wcsncoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1cc64a69ae8 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1cc64a69b60 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1cc64a69bd8 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1cc64a69c50 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1cc64a6a098 <line:373:24, col:168> col:36 _wcsnicoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1cc64a69e78 <col:74, col:90> col:90 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1cc64a69ef0 <col:124, col:140> col:140 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1cc64a69f68 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1cc64a6a420 <line:374:24, col:198> col:36 _wcsnicoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1cc64a6a178 <col:76, col:92> col:92 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1cc64a6a1f0 <col:126, col:142> col:142 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1cc64a6a268 <col:154, col:161> col:161 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1cc64a6a2e0 <col:181, col:191> col:191 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1cc64a6a680 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:403:108> col:74 wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x1cc64a6a5a8 <col:88, col:104> col:104 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x1cc64a6a728 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsdup. See online help for details." ""
|-FunctionDecl 0x1cc64a6aa60 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:413:135> col:69 wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1cc64a6a8e8 <col:84, col:100> col:100 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1cc64a6a960 <col:114, col:130> col:130 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x1cc64a6ab10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicmp. See online help for details." ""
|-FunctionDecl 0x1cc64a6aee0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:414:200> col:70 wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1cc64a6acd0 <col:106, col:122> col:122 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1cc64a6ad48 <col:156, col:172> col:172 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1cc64a6adc0 <col:184, col:191> col:191 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1cc64a6af98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnicmp. See online help for details." ""
|-FunctionDecl 0x1cc64a6c3f0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:415:153> col:60 wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x1cc64a6c1e8 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x1cc64a6c260 <col:118, col:126> col:126 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x1cc64a6c2d8 <col:137, col:144> col:144 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1cc64a6c4a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnset. See online help for details." ""
|-FunctionDecl 0x1cc64a6c740 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:416:90> col:59 wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1cc64a6c668 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1cc64a6c7e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsrev. See online help for details." ""
|-FunctionDecl 0x1cc64a6cb18 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:417:104> col:59 wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1cc64a6c9a8 <col:76, col:86> col:86 _Str 'wchar_t *'
| |-ParmVarDecl 0x1cc64a6ca20 <col:92, col:100> col:100 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x1cc64a6cbc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsset. See online help for details." ""
|-FunctionDecl 0x1cc64a6ce60 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:418:90> col:59 wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1cc64a6cd88 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1cc64a6cf08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcslwr. See online help for details." ""
|-FunctionDecl 0x1cc64a671a8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:419:90> col:59 wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1cc64a670d0 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1cc64a67250 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsupr. See online help for details." ""
|-FunctionDecl 0x1cc64a67588 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:420:137> col:70 wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1cc64a67410 <col:86, col:102> col:102 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1cc64a67488 <col:116, col:132> col:132 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x1cc64a67638 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicoll. See online help for details." ""
|-FunctionDecl 0x1cc64a67d38 <.//openssl//file_jk/before\crypto\modes\cfb128.c:19:1, line:131:1> line:19:6 invalid CRYPTO_cfb128_encrypt 'void (const unsigned char *, unsigned char *, size_t, const void *, unsigned char *, int *, int, int)'
| |-ParmVarDecl 0x1cc64a67760 <col:28, col:49> col:49 used in 'const unsigned char *'
| |-ParmVarDecl 0x1cc64a67810 <col:53, col:68> col:68 used out 'unsigned char *'
| |-ParmVarDecl 0x1cc64a67888 <line:20:28, col:35> col:35 used len 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1cc64a67908 <col:40, col:52> col:52 used key 'const void *'
| |-ParmVarDecl 0x1cc64a67a10 <line:21:28, col:49> col:42 used ivec 'unsigned char *':'unsigned char *'
| |-ParmVarDecl 0x1cc64a67a90 <col:52, col:57> col:57 used num 'int *'
| |-ParmVarDecl 0x1cc64a67b10 <line:22:28, col:32> col:32 used enc 'int'
| |-ParmVarDecl 0x1cc64a67b90 <col:37, col:48> col:48 invalid block 'int'
| `-CompoundStmt 0x1cc64a6fea0 <line:23:1, line:131:1>
|   |-DeclStmt 0x1cc64a67eb0 <line:24:5, col:19>
|   | `-VarDecl 0x1cc64a67e48 <col:5, col:18> col:18 used n 'unsigned int'
|   |-DeclStmt 0x1cc64a67f80 <line:25:5, col:17>
|   | `-VarDecl 0x1cc64a67ed8 <col:5, col:16> col:12 used l 'size_t':'unsigned long long' cinit
|   |   `-ImplicitCastExpr 0x1cc64a67f68 <col:16> 'size_t':'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x1cc64a67f40 <col:16> 'int' 0
|   |-BinaryOperator 0x1cc64a6d0f8 <line:27:5, col:10> 'unsigned int' '='
|   | |-DeclRefExpr 0x1cc64a67f98 <col:5> 'unsigned int' lvalue Var 0x1cc64a67e48 'n' 'unsigned int'
|   | `-ImplicitCastExpr 0x1cc64a6d0e0 <col:9, col:10> 'unsigned int' <IntegralCast>
|   |   `-ImplicitCastExpr 0x1cc64a6d0c8 <col:9, col:10> 'int' <LValueToRValue>
|   |     `-UnaryOperator 0x1cc64a6d0b0 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
|   |       `-ImplicitCastExpr 0x1cc64a6d098 <col:10> 'int *' <LValueToRValue>
|   |         `-DeclRefExpr 0x1cc64a67ff8 <col:10> 'int *' lvalue ParmVar 0x1cc64a67a90 'num' 'int *'
|   `-IfStmt 0x1cc64a6fe78 <line:29:5, line:130:5> has_else
|     |-ImplicitCastExpr 0x1cc64a6d150 <line:29:9> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x1cc64a6d118 <col:9> 'int' lvalue ParmVar 0x1cc64a67b10 'enc' 'int'
|     |-CompoundStmt 0x1cc64a66b08 <col:14, line:76:5>
|     | |-IfStmt 0x1cc64a66460 <line:31:9, line:64:9>
|     | | |-BinaryOperator 0x1cc64a6d238 <line:31:13, col:36> 'int' '=='
|     | | | |-BinaryOperator 0x1cc64a6d1d8 <col:13, col:31> 'unsigned long long' '%'
|     | | | | |-ImplicitCastExpr 0x1cc64a6d1c0 <col:13> 'unsigned long long' <IntegralCast>
|     | | | | | `-IntegerLiteral 0x1cc64a6d168 <col:13> 'int' 16
|     | | | | `-UnaryExprOrTypeTraitExpr 0x1cc64a6d1a0 <col:18, col:31> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|     | | | `-ImplicitCastExpr 0x1cc64a6d220 <col:36> 'unsigned long long' <IntegralCast>
|     | | |   `-IntegerLiteral 0x1cc64a6d1f8 <col:36> 'int' 0
|     | | `-CompoundStmt 0x1cc64a66448 <col:39, line:64:9>
|     | |   `-DoStmt 0x1cc64a66428 <line:32:13, line:63:23>
|     | |     |-CompoundStmt 0x1cc64a663c8 <line:32:16, line:63:13>
|     | |     | |-WhileStmt 0x1cc64a6d6f0 <line:33:17, line:37:17>
|     | |     | | |-BinaryOperator 0x1cc64a6d2e0 <line:33:24, col:29> 'int' '&&'
|     | |     | | | |-ImplicitCastExpr 0x1cc64a6d2b0 <col:24> 'unsigned int' <LValueToRValue>
|     | |     | | | | `-DeclRefExpr 0x1cc64a6d258 <col:24> 'unsigned int' lvalue Var 0x1cc64a67e48 'n' 'unsigned int'
|     | |     | | | `-ImplicitCastExpr 0x1cc64a6d2c8 <col:29> 'size_t':'unsigned long long' <LValueToRValue>
|     | |     | | |   `-DeclRefExpr 0x1cc64a6d278 <col:29> 'size_t':'unsigned long long' lvalue ParmVar 0x1cc64a67888 'len' 'size_t':'unsigned long long'
|     | |     | | `-CompoundStmt 0x1cc64a6d6c8 <col:34, line:37:17>
|     | |     | |   |-BinaryOperator 0x1cc64a6d518 <line:34:21, col:49> 'unsigned char' '='
|     | |     | |   | |-UnaryOperator 0x1cc64a6d370 <col:21, col:28> 'unsigned char' lvalue prefix '*' cannot overflow
|     | |     | |   | | `-ParenExpr 0x1cc64a6d350 <col:22, col:28> 'unsigned char *'
|     | |     | |   | |   `-UnaryOperator 0x1cc64a6d338 <col:23, col:26> 'unsigned char *' postfix '++'
|     | |     | |   | |     `-DeclRefExpr 0x1cc64a6d300 <col:23> 'unsigned char *' lvalue ParmVar 0x1cc64a67810 'out' 'unsigned char *'
|     | |     | |   | `-CompoundAssignOperator 0x1cc64a6d4e8 <col:32, col:49> 'unsigned char' '^=' ComputeLHSTy='int' ComputeResultTy='int'
|     | |     | |   |   |-ArraySubscriptExpr 0x1cc64a6d410 <col:32, col:38> 'unsigned char' lvalue
|     | |     | |   |   | |-ImplicitCastExpr 0x1cc64a6d3e0 <col:32> 'unsigned char *':'unsigned char *' <LValueToRValue>
|     | |     | |   |   | | `-DeclRefExpr 0x1cc64a6d388 <col:32> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x1cc64a67a10 'ivec' 'unsigned char *':'unsigned char *'
|     | |     | |   |   | `-ImplicitCastExpr 0x1cc64a6d3f8 <col:37> 'unsigned int' <LValueToRValue>
|     | |     | |   |   |   `-DeclRefExpr 0x1cc64a6d3c0 <col:37> 'unsigned int' lvalue Var 0x1cc64a67e48 'n' 'unsigned int'
|     | |     | |   |   `-ImplicitCastExpr 0x1cc64a6d4d0 <col:43, col:49> 'int' <IntegralCast>
|     | |     | |   |     `-ImplicitCastExpr 0x1cc64a6d4b8 <col:43, col:49> 'unsigned char' <LValueToRValue>
|     | |     | |   |       `-UnaryOperator 0x1cc64a6d4a0 <col:43, col:49> 'const unsigned char' lvalue prefix '*' cannot overflow
|     | |     | |   |         `-ParenExpr 0x1cc64a6d480 <col:44, col:49> 'const unsigned char *'
|     | |     | |   |           `-UnaryOperator 0x1cc64a6d468 <col:45, col:47> 'const unsigned char *' postfix '++'
|     | |     | |   |             `-DeclRefExpr 0x1cc64a6d430 <col:45> 'const unsigned char *' lvalue ParmVar 0x1cc64a67760 'in' 'const unsigned char *'
|     | |     | |   |-UnaryOperator 0x1cc64a6d558 <line:35:21, col:23> 'size_t':'unsigned long long' prefix '--'
|     | |     | |   | `-DeclRefExpr 0x1cc64a6d538 <col:23> 'size_t':'unsigned long long' lvalue ParmVar 0x1cc64a67888 'len' 'size_t':'unsigned long long'
|     | |     | |   `-BinaryOperator 0x1cc64a6d6a8 <line:36:21, col:35> 'unsigned int' '='
|     | |     | |     |-DeclRefExpr 0x1cc64a6d570 <col:21> 'unsigned int' lvalue Var 0x1cc64a67e48 'n' 'unsigned int'
|     | |     | |     `-BinaryOperator 0x1cc64a6d688 <col:25, col:35> 'unsigned int' '%'
|     | |     | |       |-ParenExpr 0x1cc64a6d628 <col:25, col:31> 'unsigned int'
|     | |     | |       | `-BinaryOperator 0x1cc64a6d608 <col:26, col:30> 'unsigned int' '+'
|     | |     | |       |   |-ImplicitCastExpr 0x1cc64a6d5d8 <col:26> 'unsigned int' <LValueToRValue>
|     | |     | |       |   | `-DeclRefExpr 0x1cc64a6d590 <col:26> 'unsigned int' lvalue Var 0x1cc64a67e48 'n' 'unsigned int'
|     | |     | |       |   `-ImplicitCastExpr 0x1cc64a6d5f0 <col:30> 'unsigned int' <IntegralCast>
|     | |     | |       |     `-IntegerLiteral 0x1cc64a6d5b0 <col:30> 'int' 1
|     | |     | |       `-ImplicitCastExpr 0x1cc64a6d670 <col:35> 'unsigned int' <IntegralCast>
|     | |     | |         `-IntegerLiteral 0x1cc64a6d648 <col:35> 'int' 16
|     | |     | |-WhileStmt 0x1cc64a6dfa8 <line:43:17, line:53:17>
|     | |     | | |-BinaryOperator 0x1cc64a6d780 <line:43:24, col:31> 'int' '>='
|     | |     | | | |-ImplicitCastExpr 0x1cc64a6d750 <col:24> 'size_t':'unsigned long long' <LValueToRValue>
|     | |     | | | | `-DeclRefExpr 0x1cc64a6d708 <col:24> 'size_t':'unsigned long long' lvalue ParmVar 0x1cc64a67888 'len' 'size_t':'unsigned long long'
|     | |     | | | `-ImplicitCastExpr 0x1cc64a6d768 <col:31> 'unsigned long long' <IntegralCast>
|     | |     | | |   `-IntegerLiteral 0x1cc64a6d728 <col:31> 'int' 16
|     | |     | | `-CompoundStmt 0x1cc64a6df70 <col:35, line:53:17>
|     | |     | |   |-ForStmt 0x1cc64a6dd38 <line:45:21, line:48:21>
|     | |     | |   | |-<<<NULL>>>
|     | |     | |   | |-<<<NULL>>>
|     | |     | |   | |-BinaryOperator 0x1cc64a6d890 <line:45:28, col:32> 'int' '<'
|     | |     | |   | | |-ImplicitCastExpr 0x1cc64a6d860 <col:28> 'unsigned int' <LValueToRValue>
|     | |     | |   | | | `-DeclRefExpr 0x1cc64a6d818 <col:28> 'unsigned int' lvalue Var 0x1cc64a67e48 'n' 'unsigned int'
|     | |     | |   | | `-ImplicitCastExpr 0x1cc64a6d878 <col:32> 'unsigned int' <IntegralCast>
|     | |     | |   | |   `-IntegerLiteral 0x1cc64a6d838 <col:32> 'int' 16
|     | |     | |   | |-CompoundAssignOperator 0x1cc64a6d900 <col:36, col:54> 'unsigned int' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|     | |     | |   | | |-DeclRefExpr 0x1cc64a6d8b0 <col:36> 'unsigned int' lvalue Var 0x1cc64a67e48 'n' 'unsigned int'
|     | |     | |   | | `-UnaryExprOrTypeTraitExpr 0x1cc64a6d8e0 <col:41, col:54> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|     | |     | |   | `-CompoundStmt 0x1cc64a6dd20 <col:57, line:48:21>
|     | |     | |   |   `-BinaryOperator 0x1cc64a6dd00 <line:46:25, line:47:72> 'size_t':'unsigned long long' '='
|     | |     | |   |     |-UnaryOperator 0x1cc64a6da60 <line:46:25, col:44> 'size_t':'unsigned long long' lvalue prefix '*' cannot overflow
|     | |     | |   |     | `-CStyleCastExpr 0x1cc64a6da38 <col:26, col:44> 'size_t *' <BitCast>
|     | |     | |   |     |   `-ParenExpr 0x1cc64a6da18 <col:36, col:44> 'unsigned char *'
|     | |     | |   |     |     `-BinaryOperator 0x1cc64a6d9a0 <col:37, col:43> 'unsigned char *' '+'
|     | |     | |   |     |       |-ImplicitCastExpr 0x1cc64a6d970 <col:37> 'unsigned char *' <LValueToRValue>
|     | |     | |   |     |       | `-DeclRefExpr 0x1cc64a6d930 <col:37> 'unsigned char *' lvalue ParmVar 0x1cc64a67810 'out' 'unsigned char *'
|     | |     | |   |     |       `-ImplicitCastExpr 0x1cc64a6d988 <col:43> 'unsigned int' <LValueToRValue>
|     | |     | |   |     |         `-DeclRefExpr 0x1cc64a6d950 <col:43> 'unsigned int' lvalue Var 0x1cc64a67e48 'n' 'unsigned int'
|     | |     | |   |     `-CompoundAssignOperator 0x1cc64a6dcd0 <line:47:29, col:72> 'size_t':'unsigned long long' '^=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|     | |     | |   |       |-UnaryOperator 0x1cc64a6db80 <col:29, col:49> 'size_t':'unsigned long long' lvalue prefix '*' cannot overflow
|     | |     | |   |       | `-CStyleCastExpr 0x1cc64a6db58 <col:30, col:49> 'size_t *' <BitCast>
|     | |     | |   |       |   `-ParenExpr 0x1cc64a6db38 <col:40, col:49> 'unsigned char *':'unsigned char *'
|     | |     | |   |       |     `-BinaryOperator 0x1cc64a6dae8 <col:41, col:48> 'unsigned char *':'unsigned char *' '+'
|     | |     | |   |       |       |-ImplicitCastExpr 0x1cc64a6dab8 <col:41> 'unsigned char *':'unsigned char *' <LValueToRValue>
|     | |     | |   |       |       | `-DeclRefExpr 0x1cc64a6da78 <col:41> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x1cc64a67a10 'ivec' 'unsigned char *':'unsigned char *'
|     | |     | |   |       |       `-ImplicitCastExpr 0x1cc64a6dad0 <col:48> 'unsigned int' <LValueToRValue>
|     | |     | |   |       |         `-DeclRefExpr 0x1cc64a6da98 <col:48> 'unsigned int' lvalue Var 0x1cc64a67e48 'n' 'unsigned int'
|     | |     | |   |       `-ImplicitCastExpr 0x1cc64a6dcb8 <col:54, col:72> 'size_t':'unsigned long long' <LValueToRValue>
|     | |     | |   |         `-UnaryOperator 0x1cc64a6dca0 <col:54, col:72> 'size_t':'unsigned long long' lvalue prefix '*' cannot overflow
|     | |     | |   |           `-CStyleCastExpr 0x1cc64a6dc78 <col:55, col:72> 'size_t *' <BitCast>
|     | |     | |   |             `-ParenExpr 0x1cc64a6dc58 <col:65, col:72> 'const unsigned char *'
|     | |     | |   |               `-BinaryOperator 0x1cc64a6dc08 <col:66, col:71> 'const unsigned char *' '+'
|     | |     | |   |                 |-ImplicitCastExpr 0x1cc64a6dbd8 <col:66> 'const unsigned char *' <LValueToRValue>
|     | |     | |   |                 | `-DeclRefExpr 0x1cc64a6db98 <col:66> 'const unsigned char *' lvalue ParmVar 0x1cc64a67760 'in' 'const unsigned char *'
|     | |     | |   |                 `-ImplicitCastExpr 0x1cc64a6dbf0 <col:71> 'unsigned int' <LValueToRValue>
|     | |     | |   |                   `-DeclRefExpr 0x1cc64a6dbb8 <col:71> 'unsigned int' lvalue Var 0x1cc64a67e48 'n' 'unsigned int'
|     | |     | |   |-CompoundAssignOperator 0x1cc64a6ddd0 <line:49:21, col:28> 'size_t':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|     | |     | |   | |-DeclRefExpr 0x1cc64a6dd70 <col:21> 'size_t':'unsigned long long' lvalue ParmVar 0x1cc64a67888 'len' 'size_t':'unsigned long long'
|     | |     | |   | `-ImplicitCastExpr 0x1cc64a6ddb8 <col:28> 'unsigned long long' <IntegralCast>
|     | |     | |   |   `-IntegerLiteral 0x1cc64a6dd90 <col:28> 'int' 16
|     | |     | |   |-CompoundAssignOperator 0x1cc64a6de48 <line:50:21, col:28> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|     | |     | |   | |-DeclRefExpr 0x1cc64a6de00 <col:21> 'unsigned char *' lvalue ParmVar 0x1cc64a67810 'out' 'unsigned char *'
|     | |     | |   | `-IntegerLiteral 0x1cc64a6de20 <col:28> 'int' 16
|     | |     | |   |-CompoundAssignOperator 0x1cc64a6dec0 <line:51:21, col:27> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|     | |     | |   | |-DeclRefExpr 0x1cc64a6de78 <col:21> 'const unsigned char *' lvalue ParmVar 0x1cc64a67760 'in' 'const unsigned char *'
|     | |     | |   | `-IntegerLiteral 0x1cc64a6de98 <col:27> 'int' 16
|     | |     | |   `-BinaryOperator 0x1cc64a6df50 <line:52:21, col:25> 'unsigned int' '='
|     | |     | |     |-DeclRefExpr 0x1cc64a6def0 <col:21> 'unsigned int' lvalue Var 0x1cc64a67e48 'n' 'unsigned int'
|     | |     | |     `-ImplicitCastExpr 0x1cc64a6df38 <col:25> 'unsigned int' <IntegralCast>
|     | |     | |       `-IntegerLiteral 0x1cc64a6df10 <col:25> 'int' 0
|     | |     | |-IfStmt 0x1cc64a662e0 <line:54:17, line:60:17>
|     | |     | | |-ImplicitCastExpr 0x1cc64a6dfe0 <line:54:21> 'size_t':'unsigned long long' <LValueToRValue>
|     | |     | | | `-DeclRefExpr 0x1cc64a6dfc0 <col:21> 'size_t':'unsigned long long' lvalue ParmVar 0x1cc64a67888 'len' 'size_t':'unsigned long long'
|     | |     | | `-CompoundStmt 0x1cc64a662c8 <col:26, line:60:17>
|     | |     | |   `-WhileStmt 0x1cc64a662b0 <line:56:21, line:59:21>
|     | |     | |     |-UnaryOperator 0x1cc64a66010 <line:56:28, col:31> 'size_t':'unsigned long long' postfix '--'
|     | |     | |     | `-DeclRefExpr 0x1cc64a6e058 <col:28> 'size_t':'unsigned long long' lvalue ParmVar 0x1cc64a67888 'len' 'size_t':'unsigned long long'
|     | |     | |     `-CompoundStmt 0x1cc64a66290 <col:35, line:59:21>
|     | |     | |       |-BinaryOperator 0x1cc64a66238 <line:57:25, col:49> 'unsigned char' '='
|     | |     | |       | |-ArraySubscriptExpr 0x1cc64a66098 <col:25, col:30> 'unsigned char' lvalue
|     | |     | |       | | |-ImplicitCastExpr 0x1cc64a66068 <col:25> 'unsigned char *' <LValueToRValue>
|     | |     | |       | | | `-DeclRefExpr 0x1cc64a66028 <col:25> 'unsigned char *' lvalue ParmVar 0x1cc64a67810 'out' 'unsigned char *'
|     | |     | |       | | `-ImplicitCastExpr 0x1cc64a66080 <col:29> 'unsigned int' <LValueToRValue>
|     | |     | |       | |   `-DeclRefExpr 0x1cc64a66048 <col:29> 'unsigned int' lvalue Var 0x1cc64a67e48 'n' 'unsigned int'
|     | |     | |       | `-CompoundAssignOperator 0x1cc64a66208 <col:34, col:49> 'unsigned char' '^=' ComputeLHSTy='int' ComputeResultTy='int'
|     | |     | |       |   |-ArraySubscriptExpr 0x1cc64a66128 <col:34, col:40> 'unsigned char' lvalue
|     | |     | |       |   | |-ImplicitCastExpr 0x1cc64a660f8 <col:34> 'unsigned char *':'unsigned char *' <LValueToRValue>
|     | |     | |       |   | | `-DeclRefExpr 0x1cc64a660b8 <col:34> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x1cc64a67a10 'ivec' 'unsigned char *':'unsigned char *'
|     | |     | |       |   | `-ImplicitCastExpr 0x1cc64a66110 <col:39> 'unsigned int' <LValueToRValue>
|     | |     | |       |   |   `-DeclRefExpr 0x1cc64a660d8 <col:39> 'unsigned int' lvalue Var 0x1cc64a67e48 'n' 'unsigned int'
|     | |     | |       |   `-ImplicitCastExpr 0x1cc64a661f0 <col:45, col:49> 'int' <IntegralCast>
|     | |     | |       |     `-ImplicitCastExpr 0x1cc64a661d8 <col:45, col:49> 'unsigned char' <LValueToRValue>
|     | |     | |       |       `-ArraySubscriptExpr 0x1cc64a661b8 <col:45, col:49> 'const unsigned char' lvalue
|     | |     | |       |         |-ImplicitCastExpr 0x1cc64a66188 <col:45> 'const unsigned char *' <LValueToRValue>
|     | |     | |       |         | `-DeclRefExpr 0x1cc64a66148 <col:45> 'const unsigned char *' lvalue ParmVar 0x1cc64a67760 'in' 'const unsigned char *'
|     | |     | |       |         `-ImplicitCastExpr 0x1cc64a661a0 <col:48> 'unsigned int' <LValueToRValue>
|     | |     | |       |           `-DeclRefExpr 0x1cc64a66168 <col:48> 'unsigned int' lvalue Var 0x1cc64a67e48 'n' 'unsigned int'
|     | |     | |       `-UnaryOperator 0x1cc64a66278 <line:58:25, col:27> 'unsigned int' prefix '++'
|     | |     | |         `-DeclRefExpr 0x1cc64a66258 <col:27> 'unsigned int' lvalue Var 0x1cc64a67e48 'n' 'unsigned int'
|     | |     | |-BinaryOperator 0x1cc64a66398 <line:61:17, col:24> 'int' '='
|     | |     | | |-UnaryOperator 0x1cc64a66330 <col:17, col:18> 'int' lvalue prefix '*' cannot overflow
|     | |     | | | `-ImplicitCastExpr 0x1cc64a66318 <col:18> 'int *' <LValueToRValue>
|     | |     | | |   `-DeclRefExpr 0x1cc64a662f8 <col:18> 'int *' lvalue ParmVar 0x1cc64a67a90 'num' 'int *'
|     | |     | | `-ImplicitCastExpr 0x1cc64a66380 <col:24> 'int' <IntegralCast>
|     | |     | |   `-ImplicitCastExpr 0x1cc64a66368 <col:24> 'unsigned int' <LValueToRValue>
|     | |     | |     `-DeclRefExpr 0x1cc64a66348 <col:24> 'unsigned int' lvalue Var 0x1cc64a67e48 'n' 'unsigned int'
|     | |     | `-ReturnStmt 0x1cc64a663b8 <line:62:17>
|     | |     `-IntegerLiteral 0x1cc64a66400 <line:63:22> 'int' 0
|     | |-WhileStmt 0x1cc64a66a30 <line:67:9, line:74:9>
|     | | |-BinaryOperator 0x1cc64a66500 <line:67:16, col:20> 'int' '<'
|     | | | |-ImplicitCastExpr 0x1cc64a664d0 <col:16> 'size_t':'unsigned long long' <LValueToRValue>
|     | | | | `-DeclRefExpr 0x1cc64a66478 <col:16> 'size_t':'unsigned long long' lvalue Var 0x1cc64a67ed8 'l' 'size_t':'unsigned long long'
|     | | | `-ImplicitCastExpr 0x1cc64a664e8 <col:20> 'size_t':'unsigned long long' <LValueToRValue>
|     | | |   `-DeclRefExpr 0x1cc64a664b0 <col:20> 'size_t':'unsigned long long' lvalue ParmVar 0x1cc64a67888 'len' 'size_t':'unsigned long long'
|     | | `-CompoundStmt 0x1cc64a66a00 <col:25, line:74:9>
|     | |   |-IfStmt 0x1cc64a66628 <line:68:13, line:70:13>
|     | |   | |-BinaryOperator 0x1cc64a66598 <line:68:17, col:22> 'int' '=='
|     | |   | | |-ImplicitCastExpr 0x1cc64a66568 <col:17> 'unsigned int' <LValueToRValue>
|     | |   | | | `-DeclRefExpr 0x1cc64a66520 <col:17> 'unsigned int' lvalue Var 0x1cc64a67e48 'n' 'unsigned int'
|     | |   | | `-ImplicitCastExpr 0x1cc64a66580 <col:22> 'unsigned int' <IntegralCast>
|     | |   | |   `-IntegerLiteral 0x1cc64a66540 <col:22> 'int' 0
|     | |   | `-CompoundStmt 0x1cc64a66618 <col:25, line:70:13>
|     | |   |-BinaryOperator 0x1cc64a66850 <line:71:13, col:37> 'unsigned char' '='
|     | |   | |-ArraySubscriptExpr 0x1cc64a666b0 <col:13, col:18> 'unsigned char' lvalue
|     | |   | | |-ImplicitCastExpr 0x1cc64a66680 <col:13> 'unsigned char *' <LValueToRValue>
|     | |   | | | `-DeclRefExpr 0x1cc64a66640 <col:13> 'unsigned char *' lvalue ParmVar 0x1cc64a67810 'out' 'unsigned char *'
|     | |   | | `-ImplicitCastExpr 0x1cc64a66698 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|     | |   | |   `-DeclRefExpr 0x1cc64a66660 <col:17> 'size_t':'unsigned long long' lvalue Var 0x1cc64a67ed8 'l' 'size_t':'unsigned long long'
|     | |   | `-CompoundAssignOperator 0x1cc64a66820 <col:22, col:37> 'unsigned char' '^=' ComputeLHSTy='int' ComputeResultTy='int'
|     | |   |   |-ArraySubscriptExpr 0x1cc64a66740 <col:22, col:28> 'unsigned char' lvalue
|     | |   |   | |-ImplicitCastExpr 0x1cc64a66710 <col:22> 'unsigned char *':'unsigned char *' <LValueToRValue>
|     | |   |   | | `-DeclRefExpr 0x1cc64a666d0 <col:22> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x1cc64a67a10 'ivec' 'unsigned char *':'unsigned char *'
|     | |   |   | `-ImplicitCastExpr 0x1cc64a66728 <col:27> 'unsigned int' <LValueToRValue>
|     | |   |   |   `-DeclRefExpr 0x1cc64a666f0 <col:27> 'unsigned int' lvalue Var 0x1cc64a67e48 'n' 'unsigned int'
|     | |   |   `-ImplicitCastExpr 0x1cc64a66808 <col:33, col:37> 'int' <IntegralCast>
|     | |   |     `-ImplicitCastExpr 0x1cc64a667f0 <col:33, col:37> 'unsigned char' <LValueToRValue>
|     | |   |       `-ArraySubscriptExpr 0x1cc64a667d0 <col:33, col:37> 'const unsigned char' lvalue
|     | |   |         |-ImplicitCastExpr 0x1cc64a667a0 <col:33> 'const unsigned char *' <LValueToRValue>
|     | |   |         | `-DeclRefExpr 0x1cc64a66760 <col:33> 'const unsigned char *' lvalue ParmVar 0x1cc64a67760 'in' 'const unsigned char *'
|     | |   |         `-ImplicitCastExpr 0x1cc64a667b8 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|     | |   |           `-DeclRefExpr 0x1cc64a66780 <col:36> 'size_t':'unsigned long long' lvalue Var 0x1cc64a67ed8 'l' 'size_t':'unsigned long long'
|     | |   |-UnaryOperator 0x1cc64a66890 <line:72:13, col:15> 'size_t':'unsigned long long' prefix '++'
|     | |   | `-DeclRefExpr 0x1cc64a66870 <col:15> 'size_t':'unsigned long long' lvalue Var 0x1cc64a67ed8 'l' 'size_t':'unsigned long long'
|     | |   `-BinaryOperator 0x1cc64a669e0 <line:73:13, col:27> 'unsigned int' '='
|     | |     |-DeclRefExpr 0x1cc64a668a8 <col:13> 'unsigned int' lvalue Var 0x1cc64a67e48 'n' 'unsigned int'
|     | |     `-BinaryOperator 0x1cc64a669c0 <col:17, col:27> 'unsigned int' '%'
|     | |       |-ParenExpr 0x1cc64a66960 <col:17, col:23> 'unsigned int'
|     | |       | `-BinaryOperator 0x1cc64a66940 <col:18, col:22> 'unsigned int' '+'
|     | |       |   |-ImplicitCastExpr 0x1cc64a66910 <col:18> 'unsigned int' <LValueToRValue>
|     | |       |   | `-DeclRefExpr 0x1cc64a668c8 <col:18> 'unsigned int' lvalue Var 0x1cc64a67e48 'n' 'unsigned int'
|     | |       |   `-ImplicitCastExpr 0x1cc64a66928 <col:22> 'unsigned int' <IntegralCast>
|     | |       |     `-IntegerLiteral 0x1cc64a668e8 <col:22> 'int' 1
|     | |       `-ImplicitCastExpr 0x1cc64a669a8 <col:27> 'unsigned int' <IntegralCast>
|     | |         `-IntegerLiteral 0x1cc64a66980 <col:27> 'int' 16
|     | `-BinaryOperator 0x1cc64a66ae8 <line:75:9, col:16> 'int' '='
|     |   |-UnaryOperator 0x1cc64a66a80 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
|     |   | `-ImplicitCastExpr 0x1cc64a66a68 <col:10> 'int *' <LValueToRValue>
|     |   |   `-DeclRefExpr 0x1cc64a66a48 <col:10> 'int *' lvalue ParmVar 0x1cc64a67a90 'num' 'int *'
|     |   `-ImplicitCastExpr 0x1cc64a66ad0 <col:16> 'int' <IntegralCast>
|     |     `-ImplicitCastExpr 0x1cc64a66ab8 <col:16> 'unsigned int' <LValueToRValue>
|     |       `-DeclRefExpr 0x1cc64a66a98 <col:16> 'unsigned int' lvalue Var 0x1cc64a67e48 'n' 'unsigned int'
|     `-CompoundStmt 0x1cc64a6fe50 <line:76:12, line:130:5>
|       |-IfStmt 0x1cc64a6f580 <line:78:9, line:116:9>
|       | |-BinaryOperator 0x1cc64a66c00 <line:78:13, col:36> 'int' '=='
|       | | |-BinaryOperator 0x1cc64a66ba0 <col:13, col:31> 'unsigned long long' '%'
|       | | | |-ImplicitCastExpr 0x1cc64a66b88 <col:13> 'unsigned long long' <IntegralCast>
|       | | | | `-IntegerLiteral 0x1cc64a66b30 <col:13> 'int' 16
|       | | | `-UnaryExprOrTypeTraitExpr 0x1cc64a66b68 <col:18, col:31> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|       | | `-ImplicitCastExpr 0x1cc64a66be8 <col:36> 'unsigned long long' <IntegralCast>
|       | |   `-IntegerLiteral 0x1cc64a66bc0 <col:36> 'int' 0
|       | `-CompoundStmt 0x1cc64a6f568 <col:39, line:116:9>
|       |   `-DoStmt 0x1cc64a6f548 <line:79:13, line:115:23>
|       |     |-CompoundStmt 0x1cc64a6f4e8 <line:79:16, line:115:13>
|       |     | |-WhileStmt 0x1cc64a6e320 <line:80:17, line:86:17>
|       |     | | |-BinaryOperator 0x1cc64a66c90 <line:80:24, col:29> 'int' '&&'
|       |     | | | |-ImplicitCastExpr 0x1cc64a66c60 <col:24> 'unsigned int' <LValueToRValue>
|       |     | | | | `-DeclRefExpr 0x1cc64a66c20 <col:24> 'unsigned int' lvalue Var 0x1cc64a67e48 'n' 'unsigned int'
|       |     | | | `-ImplicitCastExpr 0x1cc64a66c78 <col:29> 'size_t':'unsigned long long' <LValueToRValue>
|       |     | | |   `-DeclRefExpr 0x1cc64a66c40 <col:29> 'size_t':'unsigned long long' lvalue ParmVar 0x1cc64a67888 'len' 'size_t':'unsigned long long'
|       |     | | `-CompoundStmt 0x1cc64a6e2e8 <col:34, line:86:17>
|       |     | |   |-DeclStmt 0x1cc64a66d30 <line:81:21, col:36>
|       |     | |   | `-VarDecl 0x1cc64a66cc8 <col:21, col:35> col:35 used c 'unsigned char'
|       |     | |   |-BinaryOperator 0x1cc64a66fc8 <line:82:21, col:54> 'unsigned char' '='
|       |     | |   | |-UnaryOperator 0x1cc64a66da0 <col:21, col:28> 'unsigned char' lvalue prefix '*' cannot overflow
|       |     | |   | | `-ParenExpr 0x1cc64a66d80 <col:22, col:28> 'unsigned char *'
|       |     | |   | |   `-UnaryOperator 0x1cc64a66d68 <col:23, col:26> 'unsigned char *' postfix '++'
|       |     | |   | |     `-DeclRefExpr 0x1cc64a66d48 <col:23> 'unsigned char *' lvalue ParmVar 0x1cc64a67810 'out' 'unsigned char *'
|       |     | |   | `-ImplicitCastExpr 0x1cc64a66fb0 <col:32, col:54> 'unsigned char' <IntegralCast>
|       |     | |   |   `-BinaryOperator 0x1cc64a66f90 <col:32, col:54> 'int' '^'
|       |     | |   |     |-ImplicitCastExpr 0x1cc64a66f60 <col:32, col:38> 'int' <IntegralCast>
|       |     | |   |     | `-ImplicitCastExpr 0x1cc64a66f48 <col:32, col:38> 'unsigned char' <LValueToRValue>
|       |     | |   |     |   `-ArraySubscriptExpr 0x1cc64a66e28 <col:32, col:38> 'unsigned char' lvalue
|       |     | |   |     |     |-ImplicitCastExpr 0x1cc64a66df8 <col:32> 'unsigned char *':'unsigned char *' <LValueToRValue>
|       |     | |   |     |     | `-DeclRefExpr 0x1cc64a66db8 <col:32> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x1cc64a67a10 'ivec' 'unsigned char *':'unsigned char *'
|       |     | |   |     |     `-ImplicitCastExpr 0x1cc64a66e10 <col:37> 'unsigned int' <LValueToRValue>
|       |     | |   |     |       `-DeclRefExpr 0x1cc64a66dd8 <col:37> 'unsigned int' lvalue Var 0x1cc64a67e48 'n' 'unsigned int'
|       |     | |   |     `-ImplicitCastExpr 0x1cc64a66f78 <col:42, col:54> 'int' <IntegralCast>
|       |     | |   |       `-ParenExpr 0x1cc64a66f28 <col:42, col:54> 'unsigned char'
|       |     | |   |         `-BinaryOperator 0x1cc64a66f08 <col:43, col:53> 'unsigned char' '='
|       |     | |   |           |-DeclRefExpr 0x1cc64a66e48 <col:43> 'unsigned char' lvalue Var 0x1cc64a66cc8 'c' 'unsigned char'
|       |     | |   |           `-ImplicitCastExpr 0x1cc64a66ef0 <col:47, col:53> 'unsigned char' <LValueToRValue>
|       |     | |   |             `-UnaryOperator 0x1cc64a66ed8 <col:47, col:53> 'const unsigned char' lvalue prefix '*' cannot overflow
|       |     | |   |               `-ParenExpr 0x1cc64a66eb8 <col:48, col:53> 'const unsigned char *'
|       |     | |   |                 `-UnaryOperator 0x1cc64a66ea0 <col:49, col:51> 'const unsigned char *' postfix '++'
|       |     | |   |                   `-DeclRefExpr 0x1cc64a66e80 <col:49> 'const unsigned char *' lvalue ParmVar 0x1cc64a67760 'in' 'const unsigned char *'
|       |     | |   |-BinaryOperator 0x1cc64a6e138 <line:83:21, col:31> 'unsigned char' '='
|       |     | |   | |-ArraySubscriptExpr 0x1cc64a6e0e0 <col:21, col:27> 'unsigned char' lvalue
|       |     | |   | | |-ImplicitCastExpr 0x1cc64a6e0b0 <col:21> 'unsigned char *':'unsigned char *' <LValueToRValue>
|       |     | |   | | | `-DeclRefExpr 0x1cc64a66fe8 <col:21> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x1cc64a67a10 'ivec' 'unsigned char *':'unsigned char *'
|       |     | |   | | `-ImplicitCastExpr 0x1cc64a6e0c8 <col:26> 'unsigned int' <LValueToRValue>
|       |     | |   | |   `-DeclRefExpr 0x1cc64a6e090 <col:26> 'unsigned int' lvalue Var 0x1cc64a67e48 'n' 'unsigned int'
|       |     | |   | `-ImplicitCastExpr 0x1cc64a6e120 <col:31> 'unsigned char' <LValueToRValue>
|       |     | |   |   `-DeclRefExpr 0x1cc64a6e100 <col:31> 'unsigned char' lvalue Var 0x1cc64a66cc8 'c' 'unsigned char'
|       |     | |   |-UnaryOperator 0x1cc64a6e178 <line:84:21, col:23> 'size_t':'unsigned long long' prefix '--'
|       |     | |   | `-DeclRefExpr 0x1cc64a6e158 <col:23> 'size_t':'unsigned long long' lvalue ParmVar 0x1cc64a67888 'len' 'size_t':'unsigned long long'
|       |     | |   `-BinaryOperator 0x1cc64a6e2c8 <line:85:21, col:35> 'unsigned int' '='
|       |     | |     |-DeclRefExpr 0x1cc64a6e190 <col:21> 'unsigned int' lvalue Var 0x1cc64a67e48 'n' 'unsigned int'
|       |     | |     `-BinaryOperator 0x1cc64a6e2a8 <col:25, col:35> 'unsigned int' '%'
|       |     | |       |-ParenExpr 0x1cc64a6e248 <col:25, col:31> 'unsigned int'
|       |     | |       | `-BinaryOperator 0x1cc64a6e228 <col:26, col:30> 'unsigned int' '+'
|       |     | |       |   |-ImplicitCastExpr 0x1cc64a6e1f8 <col:26> 'unsigned int' <LValueToRValue>
|       |     | |       |   | `-DeclRefExpr 0x1cc64a6e1b0 <col:26> 'unsigned int' lvalue Var 0x1cc64a67e48 'n' 'unsigned int'
|       |     | |       |   `-ImplicitCastExpr 0x1cc64a6e210 <col:30> 'unsigned int' <IntegralCast>
|       |     | |       |     `-IntegerLiteral 0x1cc64a6e1d0 <col:30> 'int' 1
|       |     | |       `-ImplicitCastExpr 0x1cc64a6e290 <col:35> 'unsigned int' <IntegralCast>
|       |     | |         `-IntegerLiteral 0x1cc64a6e268 <col:35> 'int' 16
|       |     | |-WhileStmt 0x1cc64a6ee08 <line:92:17, line:103:17>
|       |     | | |-BinaryOperator 0x1cc64a6e3b0 <line:92:24, col:31> 'int' '>='
|       |     | | | |-ImplicitCastExpr 0x1cc64a6e380 <col:24> 'size_t':'unsigned long long' <LValueToRValue>
|       |     | | | | `-DeclRefExpr 0x1cc64a6e338 <col:24> 'size_t':'unsigned long long' lvalue ParmVar 0x1cc64a67888 'len' 'size_t':'unsigned long long'
|       |     | | | `-ImplicitCastExpr 0x1cc64a6e398 <col:31> 'unsigned long long' <IntegralCast>
|       |     | | |   `-IntegerLiteral 0x1cc64a6e358 <col:31> 'int' 16
|       |     | | `-CompoundStmt 0x1cc64a6edd0 <col:35, line:103:17>
|       |     | |   |-ForStmt 0x1cc64a6eb98 <line:94:21, line:98:21>
|       |     | |   | |-<<<NULL>>>
|       |     | |   | |-<<<NULL>>>
|       |     | |   | |-BinaryOperator 0x1cc64a6e4a8 <line:94:28, col:32> 'int' '<'
|       |     | |   | | |-ImplicitCastExpr 0x1cc64a6e478 <col:28> 'unsigned int' <LValueToRValue>
|       |     | |   | | | `-DeclRefExpr 0x1cc64a6e430 <col:28> 'unsigned int' lvalue Var 0x1cc64a67e48 'n' 'unsigned int'
|       |     | |   | | `-ImplicitCastExpr 0x1cc64a6e490 <col:32> 'unsigned int' <IntegralCast>
|       |     | |   | |   `-IntegerLiteral 0x1cc64a6e450 <col:32> 'int' 16
|       |     | |   | |-CompoundAssignOperator 0x1cc64a6e518 <col:36, col:54> 'unsigned int' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|       |     | |   | | |-DeclRefExpr 0x1cc64a6e4c8 <col:36> 'unsigned int' lvalue Var 0x1cc64a67e48 'n' 'unsigned int'
|       |     | |   | | `-UnaryExprOrTypeTraitExpr 0x1cc64a6e4f8 <col:41, col:54> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|       |     | |   | `-CompoundStmt 0x1cc64a6eb70 <col:57, line:98:21>
|       |     | |   |   |-DeclStmt 0x1cc64a6e6f8 <line:95:25, col:55>
|       |     | |   |   | `-VarDecl 0x1cc64a6e558 <col:25, col:54> col:32 used t 'size_t':'unsigned long long' cinit
|       |     | |   |   |   `-ImplicitCastExpr 0x1cc64a6e6e0 <col:36, col:54> 'size_t':'unsigned long long' <LValueToRValue>
|       |     | |   |   |     `-UnaryOperator 0x1cc64a6e6c8 <col:36, col:54> 'size_t':'unsigned long long' lvalue prefix '*' cannot overflow
|       |     | |   |   |       `-CStyleCastExpr 0x1cc64a6e6a0 <col:37, col:54> 'size_t *' <BitCast>
|       |     | |   |   |         `-ParenExpr 0x1cc64a6e680 <col:47, col:54> 'const unsigned char *'
|       |     | |   |   |           `-BinaryOperator 0x1cc64a6e630 <col:48, col:53> 'const unsigned char *' '+'
|       |     | |   |   |             |-ImplicitCastExpr 0x1cc64a6e600 <col:48> 'const unsigned char *' <LValueToRValue>
|       |     | |   |   |             | `-DeclRefExpr 0x1cc64a6e5c0 <col:48> 'const unsigned char *' lvalue ParmVar 0x1cc64a67760 'in' 'const unsigned char *'
|       |     | |   |   |             `-ImplicitCastExpr 0x1cc64a6e618 <col:53> 'unsigned int' <LValueToRValue>
|       |     | |   |   |               `-DeclRefExpr 0x1cc64a6e5e0 <col:53> 'unsigned int' lvalue Var 0x1cc64a67e48 'n' 'unsigned int'
|       |     | |   |   |-BinaryOperator 0x1cc64a6e9d8 <line:96:25, col:72> 'size_t':'unsigned long long' '='
|       |     | |   |   | |-UnaryOperator 0x1cc64a6e818 <col:25, col:44> 'size_t':'unsigned long long' lvalue prefix '*' cannot overflow
|       |     | |   |   | | `-CStyleCastExpr 0x1cc64a6e7f0 <col:26, col:44> 'size_t *' <BitCast>
|       |     | |   |   | |   `-ParenExpr 0x1cc64a6e7d0 <col:36, col:44> 'unsigned char *'
|       |     | |   |   | |     `-BinaryOperator 0x1cc64a6e780 <col:37, col:43> 'unsigned char *' '+'
|       |     | |   |   | |       |-ImplicitCastExpr 0x1cc64a6e750 <col:37> 'unsigned char *' <LValueToRValue>
|       |     | |   |   | |       | `-DeclRefExpr 0x1cc64a6e710 <col:37> 'unsigned char *' lvalue ParmVar 0x1cc64a67810 'out' 'unsigned char *'
|       |     | |   |   | |       `-ImplicitCastExpr 0x1cc64a6e768 <col:43> 'unsigned int' <LValueToRValue>
|       |     | |   |   | |         `-DeclRefExpr 0x1cc64a6e730 <col:43> 'unsigned int' lvalue Var 0x1cc64a67e48 'n' 'unsigned int'
|       |     | |   |   | `-BinaryOperator 0x1cc64a6e9b8 <col:48, col:72> 'unsigned long long' '^'
|       |     | |   |   |   |-ImplicitCastExpr 0x1cc64a6e988 <col:48, col:68> 'size_t':'unsigned long long' <LValueToRValue>
|       |     | |   |   |   | `-UnaryOperator 0x1cc64a6e938 <col:48, col:68> 'size_t':'unsigned long long' lvalue prefix '*' cannot overflow
|       |     | |   |   |   |   `-CStyleCastExpr 0x1cc64a6e910 <col:49, col:68> 'size_t *' <BitCast>
|       |     | |   |   |   |     `-ParenExpr 0x1cc64a6e8f0 <col:59, col:68> 'unsigned char *':'unsigned char *'
|       |     | |   |   |   |       `-BinaryOperator 0x1cc64a6e8a0 <col:60, col:67> 'unsigned char *':'unsigned char *' '+'
|       |     | |   |   |   |         |-ImplicitCastExpr 0x1cc64a6e870 <col:60> 'unsigned char *':'unsigned char *' <LValueToRValue>
|       |     | |   |   |   |         | `-DeclRefExpr 0x1cc64a6e830 <col:60> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x1cc64a67a10 'ivec' 'unsigned char *':'unsigned char *'
|       |     | |   |   |   |         `-ImplicitCastExpr 0x1cc64a6e888 <col:67> 'unsigned int' <LValueToRValue>
|       |     | |   |   |   |           `-DeclRefExpr 0x1cc64a6e850 <col:67> 'unsigned int' lvalue Var 0x1cc64a67e48 'n' 'unsigned int'
|       |     | |   |   |   `-ImplicitCastExpr 0x1cc64a6e9a0 <col:72> 'size_t':'unsigned long long' <LValueToRValue>
|       |     | |   |   |     `-DeclRefExpr 0x1cc64a6e950 <col:72> 'size_t':'unsigned long long' lvalue Var 0x1cc64a6e558 't' 'size_t':'unsigned long long'
|       |     | |   |   `-BinaryOperator 0x1cc64a6eb50 <line:97:25, col:49> 'size_t':'unsigned long long' '='
|       |     | |   |     |-UnaryOperator 0x1cc64a6eb00 <col:25, col:45> 'size_t':'unsigned long long' lvalue prefix '*' cannot overflow
|       |     | |   |     | `-CStyleCastExpr 0x1cc64a6ead8 <col:26, col:45> 'size_t *' <BitCast>
|       |     | |   |     |   `-ParenExpr 0x1cc64a6eab8 <col:36, col:45> 'unsigned char *':'unsigned char *'
|       |     | |   |     |     `-BinaryOperator 0x1cc64a6ea68 <col:37, col:44> 'unsigned char *':'unsigned char *' '+'
|       |     | |   |     |       |-ImplicitCastExpr 0x1cc64a6ea38 <col:37> 'unsigned char *':'unsigned char *' <LValueToRValue>
|       |     | |   |     |       | `-DeclRefExpr 0x1cc64a6e9f8 <col:37> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x1cc64a67a10 'ivec' 'unsigned char *':'unsigned char *'
|       |     | |   |     |       `-ImplicitCastExpr 0x1cc64a6ea50 <col:44> 'unsigned int' <LValueToRValue>
|       |     | |   |     |         `-DeclRefExpr 0x1cc64a6ea18 <col:44> 'unsigned int' lvalue Var 0x1cc64a67e48 'n' 'unsigned int'
|       |     | |   |     `-ImplicitCastExpr 0x1cc64a6eb38 <col:49> 'size_t':'unsigned long long' <LValueToRValue>
|       |     | |   |       `-DeclRefExpr 0x1cc64a6eb18 <col:49> 'size_t':'unsigned long long' lvalue Var 0x1cc64a6e558 't' 'size_t':'unsigned long long'
|       |     | |   |-CompoundAssignOperator 0x1cc64a6ec30 <line:99:21, col:28> 'size_t':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|       |     | |   | |-DeclRefExpr 0x1cc64a6ebd0 <col:21> 'size_t':'unsigned long long' lvalue ParmVar 0x1cc64a67888 'len' 'size_t':'unsigned long long'
|       |     | |   | `-ImplicitCastExpr 0x1cc64a6ec18 <col:28> 'unsigned long long' <IntegralCast>
|       |     | |   |   `-IntegerLiteral 0x1cc64a6ebf0 <col:28> 'int' 16
|       |     | |   |-CompoundAssignOperator 0x1cc64a6eca8 <line:100:21, col:28> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|       |     | |   | |-DeclRefExpr 0x1cc64a6ec60 <col:21> 'unsigned char *' lvalue ParmVar 0x1cc64a67810 'out' 'unsigned char *'
|       |     | |   | `-IntegerLiteral 0x1cc64a6ec80 <col:28> 'int' 16
|       |     | |   |-CompoundAssignOperator 0x1cc64a6ed20 <line:101:21, col:27> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|       |     | |   | |-DeclRefExpr 0x1cc64a6ecd8 <col:21> 'const unsigned char *' lvalue ParmVar 0x1cc64a67760 'in' 'const unsigned char *'
|       |     | |   | `-IntegerLiteral 0x1cc64a6ecf8 <col:27> 'int' 16
|       |     | |   `-BinaryOperator 0x1cc64a6edb0 <line:102:21, col:25> 'unsigned int' '='
|       |     | |     |-DeclRefExpr 0x1cc64a6ed50 <col:21> 'unsigned int' lvalue Var 0x1cc64a67e48 'n' 'unsigned int'
|       |     | |     `-ImplicitCastExpr 0x1cc64a6ed98 <col:25> 'unsigned int' <IntegralCast>
|       |     | |       `-IntegerLiteral 0x1cc64a6ed70 <col:25> 'int' 0
|       |     | |-IfStmt 0x1cc64a6f400 <line:104:17, line:112:17>
|       |     | | |-ImplicitCastExpr 0x1cc64a6ee40 <line:104:21> 'size_t':'unsigned long long' <LValueToRValue>
|       |     | | | `-DeclRefExpr 0x1cc64a6ee20 <col:21> 'size_t':'unsigned long long' lvalue ParmVar 0x1cc64a67888 'len' 'size_t':'unsigned long long'
|       |     | | `-CompoundStmt 0x1cc64a6f3e8 <col:26, line:112:17>
|       |     | |   `-WhileStmt 0x1cc64a6f3d0 <line:106:21, line:111:21>
|       |     | |     |-UnaryOperator 0x1cc64a6eed8 <line:106:28, col:31> 'size_t':'unsigned long long' postfix '--'
|       |     | |     | `-DeclRefExpr 0x1cc64a6eeb8 <col:28> 'size_t':'unsigned long long' lvalue ParmVar 0x1cc64a67888 'len' 'size_t':'unsigned long long'
|       |     | |     `-CompoundStmt 0x1cc64a6f3a0 <col:35, line:111:21>
|       |     | |       |-DeclStmt 0x1cc64a6ef70 <line:107:25, col:40>
|       |     | |       | `-VarDecl 0x1cc64a6ef08 <col:25, col:39> col:39 used c 'unsigned char'
|       |     | |       |-BinaryOperator 0x1cc64a6f260 <line:108:25, col:54> 'unsigned char' '='
|       |     | |       | |-ArraySubscriptExpr 0x1cc64a6eff8 <col:25, col:30> 'unsigned char' lvalue
|       |     | |       | | |-ImplicitCastExpr 0x1cc64a6efc8 <col:25> 'unsigned char *' <LValueToRValue>
|       |     | |       | | | `-DeclRefExpr 0x1cc64a6ef88 <col:25> 'unsigned char *' lvalue ParmVar 0x1cc64a67810 'out' 'unsigned char *'
|       |     | |       | | `-ImplicitCastExpr 0x1cc64a6efe0 <col:29> 'unsigned int' <LValueToRValue>
|       |     | |       | |   `-DeclRefExpr 0x1cc64a6efa8 <col:29> 'unsigned int' lvalue Var 0x1cc64a67e48 'n' 'unsigned int'
|       |     | |       | `-ImplicitCastExpr 0x1cc64a6f248 <col:34, col:54> 'unsigned char' <IntegralCast>
|       |     | |       |   `-BinaryOperator 0x1cc64a6f228 <col:34, col:54> 'int' '^'
|       |     | |       |     |-ImplicitCastExpr 0x1cc64a6f1f8 <col:34, col:40> 'int' <IntegralCast>
|       |     | |       |     | `-ImplicitCastExpr 0x1cc64a6f1e0 <col:34, col:40> 'unsigned char' <LValueToRValue>
|       |     | |       |     |   `-ArraySubscriptExpr 0x1cc64a6f0a0 <col:34, col:40> 'unsigned char' lvalue
|       |     | |       |     |     |-ImplicitCastExpr 0x1cc64a6f058 <col:34> 'unsigned char *':'unsigned char *' <LValueToRValue>
|       |     | |       |     |     | `-DeclRefExpr 0x1cc64a6f018 <col:34> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x1cc64a67a10 'ivec' 'unsigned char *':'unsigned char *'
|       |     | |       |     |     `-ImplicitCastExpr 0x1cc64a6f070 <col:39> 'unsigned int' <LValueToRValue>
|       |     | |       |     |       `-DeclRefExpr 0x1cc64a6f038 <col:39> 'unsigned int' lvalue Var 0x1cc64a67e48 'n' 'unsigned int'
|       |     | |       |     `-ImplicitCastExpr 0x1cc64a6f210 <col:44, col:54> 'int' <IntegralCast>
|       |     | |       |       `-ParenExpr 0x1cc64a6f1c0 <col:44, col:54> 'unsigned char'
|       |     | |       |         `-BinaryOperator 0x1cc64a6f1a0 <col:45, col:53> 'unsigned char' '='
|       |     | |       |           |-DeclRefExpr 0x1cc64a6f0c0 <col:45> 'unsigned char' lvalue Var 0x1cc64a6ef08 'c' 'unsigned char'
|       |     | |       |           `-ImplicitCastExpr 0x1cc64a6f188 <col:49, col:53> 'unsigned char' <LValueToRValue>
|       |     | |       |             `-ArraySubscriptExpr 0x1cc64a6f168 <col:49, col:53> 'const unsigned char' lvalue
|       |     | |       |               |-ImplicitCastExpr 0x1cc64a6f138 <col:49> 'const unsigned char *' <LValueToRValue>
|       |     | |       |               | `-DeclRefExpr 0x1cc64a6f0f8 <col:49> 'const unsigned char *' lvalue ParmVar 0x1cc64a67760 'in' 'const unsigned char *'
|       |     | |       |               `-ImplicitCastExpr 0x1cc64a6f150 <col:52> 'unsigned int' <LValueToRValue>
|       |     | |       |                 `-DeclRefExpr 0x1cc64a6f118 <col:52> 'unsigned int' lvalue Var 0x1cc64a67e48 'n' 'unsigned int'
|       |     | |       |-BinaryOperator 0x1cc64a6f348 <line:109:25, col:35> 'unsigned char' '='
|       |     | |       | |-ArraySubscriptExpr 0x1cc64a6f2f0 <col:25, col:31> 'unsigned char' lvalue
|       |     | |       | | |-ImplicitCastExpr 0x1cc64a6f2c0 <col:25> 'unsigned char *':'unsigned char *' <LValueToRValue>
|       |     | |       | | | `-DeclRefExpr 0x1cc64a6f280 <col:25> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x1cc64a67a10 'ivec' 'unsigned char *':'unsigned char *'
|       |     | |       | | `-ImplicitCastExpr 0x1cc64a6f2d8 <col:30> 'unsigned int' <LValueToRValue>
|       |     | |       | |   `-DeclRefExpr 0x1cc64a6f2a0 <col:30> 'unsigned int' lvalue Var 0x1cc64a67e48 'n' 'unsigned int'
|       |     | |       | `-ImplicitCastExpr 0x1cc64a6f330 <col:35> 'unsigned char' <LValueToRValue>
|       |     | |       |   `-DeclRefExpr 0x1cc64a6f310 <col:35> 'unsigned char' lvalue Var 0x1cc64a6ef08 'c' 'unsigned char'
|       |     | |       `-UnaryOperator 0x1cc64a6f388 <line:110:25, col:27> 'unsigned int' prefix '++'
|       |     | |         `-DeclRefExpr 0x1cc64a6f368 <col:27> 'unsigned int' lvalue Var 0x1cc64a67e48 'n' 'unsigned int'
|       |     | |-BinaryOperator 0x1cc64a6f4b8 <line:113:17, col:24> 'int' '='
|       |     | | |-UnaryOperator 0x1cc64a6f450 <col:17, col:18> 'int' lvalue prefix '*' cannot overflow
|       |     | | | `-ImplicitCastExpr 0x1cc64a6f438 <col:18> 'int *' <LValueToRValue>
|       |     | | |   `-DeclRefExpr 0x1cc64a6f418 <col:18> 'int *' lvalue ParmVar 0x1cc64a67a90 'num' 'int *'
|       |     | | `-ImplicitCastExpr 0x1cc64a6f4a0 <col:24> 'int' <IntegralCast>
|       |     | |   `-ImplicitCastExpr 0x1cc64a6f488 <col:24> 'unsigned int' <LValueToRValue>
|       |     | |     `-DeclRefExpr 0x1cc64a6f468 <col:24> 'unsigned int' lvalue Var 0x1cc64a67e48 'n' 'unsigned int'
|       |     | `-ReturnStmt 0x1cc64a6f4d8 <line:114:17>
|       |     `-IntegerLiteral 0x1cc64a6f520 <line:115:22> 'int' 0
|       |-WhileStmt 0x1cc64a6fd78 <line:119:9, line:128:9>
|       | |-BinaryOperator 0x1cc64a6f608 <line:119:16, col:20> 'int' '<'
|       | | |-ImplicitCastExpr 0x1cc64a6f5d8 <col:16> 'size_t':'unsigned long long' <LValueToRValue>
|       | | | `-DeclRefExpr 0x1cc64a6f598 <col:16> 'size_t':'unsigned long long' lvalue Var 0x1cc64a67ed8 'l' 'size_t':'unsigned long long'
|       | | `-ImplicitCastExpr 0x1cc64a6f5f0 <col:20> 'size_t':'unsigned long long' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1cc64a6f5b8 <col:20> 'size_t':'unsigned long long' lvalue ParmVar 0x1cc64a67888 'len' 'size_t':'unsigned long long'
|       | `-CompoundStmt 0x1cc64a6fd38 <col:25, line:128:9>
|       |   |-DeclStmt 0x1cc64a6f6a8 <line:120:13, col:28>
|       |   | `-VarDecl 0x1cc64a6f640 <col:13, col:27> col:27 used c 'unsigned char'
|       |   |-IfStmt 0x1cc64a6f7c8 <line:121:13, line:123:13>
|       |   | |-BinaryOperator 0x1cc64a6f738 <line:121:17, col:22> 'int' '=='
|       |   | | |-ImplicitCastExpr 0x1cc64a6f708 <col:17> 'unsigned int' <LValueToRValue>
|       |   | | | `-DeclRefExpr 0x1cc64a6f6c0 <col:17> 'unsigned int' lvalue Var 0x1cc64a67e48 'n' 'unsigned int'
|       |   | | `-ImplicitCastExpr 0x1cc64a6f720 <col:22> 'unsigned int' <IntegralCast>
|       |   | |   `-IntegerLiteral 0x1cc64a6f6e0 <col:22> 'int' 0
|       |   | `-CompoundStmt 0x1cc64a6f7b8 <col:25, line:123:13>
|       |   |-BinaryOperator 0x1cc64a6faa0 <line:124:13, col:42> 'unsigned char' '='
|       |   | |-ArraySubscriptExpr 0x1cc64a6f850 <col:13, col:18> 'unsigned char' lvalue
|       |   | | |-ImplicitCastExpr 0x1cc64a6f820 <col:13> 'unsigned char *' <LValueToRValue>
|       |   | | | `-DeclRefExpr 0x1cc64a6f7e0 <col:13> 'unsigned char *' lvalue ParmVar 0x1cc64a67810 'out' 'unsigned char *'
|       |   | | `-ImplicitCastExpr 0x1cc64a6f838 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|       |   | |   `-DeclRefExpr 0x1cc64a6f800 <col:17> 'size_t':'unsigned long long' lvalue Var 0x1cc64a67ed8 'l' 'size_t':'unsigned long long'
|       |   | `-ImplicitCastExpr 0x1cc64a6fa88 <col:22, col:42> 'unsigned char' <IntegralCast>
|       |   |   `-BinaryOperator 0x1cc64a6fa68 <col:22, col:42> 'int' '^'
|       |   |     |-ImplicitCastExpr 0x1cc64a6fa38 <col:22, col:28> 'int' <IntegralCast>
|       |   |     | `-ImplicitCastExpr 0x1cc64a6fa20 <col:22, col:28> 'unsigned char' <LValueToRValue>
|       |   |     |   `-ArraySubscriptExpr 0x1cc64a6f8e0 <col:22, col:28> 'unsigned char' lvalue
|       |   |     |     |-ImplicitCastExpr 0x1cc64a6f8b0 <col:22> 'unsigned char *':'unsigned char *' <LValueToRValue>
|       |   |     |     | `-DeclRefExpr 0x1cc64a6f870 <col:22> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x1cc64a67a10 'ivec' 'unsigned char *':'unsigned char *'
|       |   |     |     `-ImplicitCastExpr 0x1cc64a6f8c8 <col:27> 'unsigned int' <LValueToRValue>
|       |   |     |       `-DeclRefExpr 0x1cc64a6f890 <col:27> 'unsigned int' lvalue Var 0x1cc64a67e48 'n' 'unsigned int'
|       |   |     `-ImplicitCastExpr 0x1cc64a6fa50 <col:32, col:42> 'int' <IntegralCast>
|       |   |       `-ParenExpr 0x1cc64a6fa00 <col:32, col:42> 'unsigned char'
|       |   |         `-BinaryOperator 0x1cc64a6f9e0 <col:33, col:41> 'unsigned char' '='
|       |   |           |-DeclRefExpr 0x1cc64a6f900 <col:33> 'unsigned char' lvalue Var 0x1cc64a6f640 'c' 'unsigned char'
|       |   |           `-ImplicitCastExpr 0x1cc64a6f9c8 <col:37, col:41> 'unsigned char' <LValueToRValue>
|       |   |             `-ArraySubscriptExpr 0x1cc64a6f9a8 <col:37, col:41> 'const unsigned char' lvalue
|       |   |               |-ImplicitCastExpr 0x1cc64a6f978 <col:37> 'const unsigned char *' <LValueToRValue>
|       |   |               | `-DeclRefExpr 0x1cc64a6f938 <col:37> 'const unsigned char *' lvalue ParmVar 0x1cc64a67760 'in' 'const unsigned char *'
|       |   |               `-ImplicitCastExpr 0x1cc64a6f990 <col:40> 'size_t':'unsigned long long' <LValueToRValue>
|       |   |                 `-DeclRefExpr 0x1cc64a6f958 <col:40> 'size_t':'unsigned long long' lvalue Var 0x1cc64a67ed8 'l' 'size_t':'unsigned long long'
|       |   |-BinaryOperator 0x1cc64a6fb88 <line:125:13, col:23> 'unsigned char' '='
|       |   | |-ArraySubscriptExpr 0x1cc64a6fb30 <col:13, col:19> 'unsigned char' lvalue
|       |   | | |-ImplicitCastExpr 0x1cc64a6fb00 <col:13> 'unsigned char *':'unsigned char *' <LValueToRValue>
|       |   | | | `-DeclRefExpr 0x1cc64a6fac0 <col:13> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x1cc64a67a10 'ivec' 'unsigned char *':'unsigned char *'
|       |   | | `-ImplicitCastExpr 0x1cc64a6fb18 <col:18> 'unsigned int' <LValueToRValue>
|       |   | |   `-DeclRefExpr 0x1cc64a6fae0 <col:18> 'unsigned int' lvalue Var 0x1cc64a67e48 'n' 'unsigned int'
|       |   | `-ImplicitCastExpr 0x1cc64a6fb70 <col:23> 'unsigned char' <LValueToRValue>
|       |   |   `-DeclRefExpr 0x1cc64a6fb50 <col:23> 'unsigned char' lvalue Var 0x1cc64a6f640 'c' 'unsigned char'
|       |   |-UnaryOperator 0x1cc64a6fbc8 <line:126:13, col:15> 'size_t':'unsigned long long' prefix '++'
|       |   | `-DeclRefExpr 0x1cc64a6fba8 <col:15> 'size_t':'unsigned long long' lvalue Var 0x1cc64a67ed8 'l' 'size_t':'unsigned long long'
|       |   `-BinaryOperator 0x1cc64a6fd18 <line:127:13, col:27> 'unsigned int' '='
|       |     |-DeclRefExpr 0x1cc64a6fbe0 <col:13> 'unsigned int' lvalue Var 0x1cc64a67e48 'n' 'unsigned int'
|       |     `-BinaryOperator 0x1cc64a6fcf8 <col:17, col:27> 'unsigned int' '%'
|       |       |-ParenExpr 0x1cc64a6fc98 <col:17, col:23> 'unsigned int'
|       |       | `-BinaryOperator 0x1cc64a6fc78 <col:18, col:22> 'unsigned int' '+'
|       |       |   |-ImplicitCastExpr 0x1cc64a6fc48 <col:18> 'unsigned int' <LValueToRValue>
|       |       |   | `-DeclRefExpr 0x1cc64a6fc00 <col:18> 'unsigned int' lvalue Var 0x1cc64a67e48 'n' 'unsigned int'
|       |       |   `-ImplicitCastExpr 0x1cc64a6fc60 <col:22> 'unsigned int' <IntegralCast>
|       |       |     `-IntegerLiteral 0x1cc64a6fc20 <col:22> 'int' 1
|       |       `-ImplicitCastExpr 0x1cc64a6fce0 <col:27> 'unsigned int' <IntegralCast>
|       |         `-IntegerLiteral 0x1cc64a6fcb8 <col:27> 'int' 16
|       `-BinaryOperator 0x1cc64a6fe30 <line:129:9, col:16> 'int' '='
|         |-UnaryOperator 0x1cc64a6fdc8 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
|         | `-ImplicitCastExpr 0x1cc64a6fdb0 <col:10> 'int *' <LValueToRValue>
|         |   `-DeclRefExpr 0x1cc64a6fd90 <col:10> 'int *' lvalue ParmVar 0x1cc64a67a90 'num' 'int *'
|         `-ImplicitCastExpr 0x1cc64a6fe18 <col:16> 'int' <IntegralCast>
|           `-ImplicitCastExpr 0x1cc64a6fe00 <col:16> 'unsigned int' <LValueToRValue>
|             `-DeclRefExpr 0x1cc64a6fde0 <col:16> 'unsigned int' lvalue Var 0x1cc64a67e48 'n' 'unsigned int'
|-FunctionDecl 0x1cc64a73258 <line:137:1, line:170:1> line:137:13 invalid cfbr_encrypt_block 'void (const unsigned char *, unsigned char *, int, const void *, unsigned char *, int, int)' static
| |-ParmVarDecl 0x1cc64a6fee8 <col:32, col:53> col:53 used in 'const unsigned char *'
| |-ParmVarDecl 0x1cc64a6ff68 <col:57, col:72> col:72 used out 'unsigned char *'
| |-ParmVarDecl 0x1cc64a6ffe8 <line:138:32, col:36> col:36 used nbits 'int'
| |-ParmVarDecl 0x1cc64a72f00 <col:43, col:55> col:55 used key 'const void *'
| |-ParmVarDecl 0x1cc64a72fd0 <line:139:32, col:53> col:46 used ivec 'unsigned char *':'unsigned char *'
| |-ParmVarDecl 0x1cc64a73050 <col:56, col:60> col:60 used enc 'int'
| |-ParmVarDecl 0x1cc64a730d0 <line:140:32, col:43> col:43 invalid block 'int'
| `-CompoundStmt 0x1cc64a76058 <line:141:1, line:170:1>
|   |-DeclStmt 0x1cc64a734e8 <line:142:5, col:20>
|   | |-VarDecl 0x1cc64a73360 <col:5, col:9> col:9 used n 'int'
|   | |-VarDecl 0x1cc64a733e0 <col:5, col:12> col:12 used rem 'int'
|   | `-VarDecl 0x1cc64a73460 <col:5, col:17> col:17 used num 'int'
|   |-DeclStmt 0x1cc64a73698 <line:143:5, col:35>
|   | `-VarDecl 0x1cc64a73630 <col:5, col:34> col:19 used ovec 'unsigned char [33]'
|   |-IfStmt 0x1cc64a737f8 <line:146:5, line:147:9>
|   | |-BinaryOperator 0x1cc64a737c8 <line:146:9, col:31> 'int' '||'
|   | | |-BinaryOperator 0x1cc64a73728 <col:9, col:18> 'int' '<='
|   | | | |-ImplicitCastExpr 0x1cc64a73710 <col:9> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1cc64a736b0 <col:9> 'int' lvalue ParmVar 0x1cc64a6ffe8 'nbits' 'int'
|   | | | `-IntegerLiteral 0x1cc64a736e8 <col:18> 'int' 0
|   | | `-BinaryOperator 0x1cc64a737a8 <col:23, col:31> 'int' '>'
|   | |   |-ImplicitCastExpr 0x1cc64a73790 <col:23> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x1cc64a73748 <col:23> 'int' lvalue ParmVar 0x1cc64a6ffe8 'nbits' 'int'
|   | |   `-IntegerLiteral 0x1cc64a73768 <col:31> 'int' 128
|   | `-ReturnStmt 0x1cc64a737e8 <line:147:9>
|   |-CallExpr 0x1cc64a73940 <line:150:5, col:26> 'void *'
|   | |-ImplicitCastExpr 0x1cc64a73928 <col:5> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1cc64a73810 <col:5> 'void *(void *, const void *, unsigned long long)' Function 0x1cc649fc388 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   | |-ImplicitCastExpr 0x1cc64a73990 <col:12> 'void *' <BitCast>
|   | | `-ImplicitCastExpr 0x1cc64a73978 <col:12> 'unsigned char *' <ArrayToPointerDecay>
|   | |   `-DeclRefExpr 0x1cc64a73830 <col:12> 'unsigned char [33]' lvalue Var 0x1cc64a73630 'ovec' 'unsigned char [33]'
|   | |-ImplicitCastExpr 0x1cc64a739c0 <col:18> 'const void *' <BitCast>
|   | | `-ImplicitCastExpr 0x1cc64a739a8 <col:18> 'unsigned char *':'unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1cc64a73868 <col:18> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x1cc64a72fd0 'ivec' 'unsigned char *':'unsigned char *'
|   | `-ImplicitCastExpr 0x1cc64a739d8 <col:24> 'unsigned long long' <IntegralCast>
|   |   `-IntegerLiteral 0x1cc64a738a0 <col:24> 'int' 16
|   |-BinaryOperator 0x1cc64a73b88 <line:153:5, col:25> 'int' '='
|   | |-DeclRefExpr 0x1cc64a73a68 <col:5> 'int' lvalue Var 0x1cc64a73460 'num' 'int'
|   | `-BinaryOperator 0x1cc64a73b68 <col:11, col:25> 'int' '/'
|   |   |-ParenExpr 0x1cc64a73b20 <col:11, col:21> 'int'
|   |   | `-BinaryOperator 0x1cc64a73b00 <col:12, col:20> 'int' '+'
|   |   |   |-ImplicitCastExpr 0x1cc64a73ae8 <col:12> 'int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x1cc64a73aa0 <col:12> 'int' lvalue ParmVar 0x1cc64a6ffe8 'nbits' 'int'
|   |   |   `-IntegerLiteral 0x1cc64a73ac0 <col:20> 'int' 7
|   |   `-IntegerLiteral 0x1cc64a73b40 <col:25> 'int' 8
|   |-IfStmt 0x1cc64a75638 <line:154:5, line:159:53> has_else
|   | |-ImplicitCastExpr 0x1cc64a73be0 <line:154:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1cc64a73ba8 <col:9> 'int' lvalue ParmVar 0x1cc64a73050 'enc' 'int'
|   | |-ForStmt 0x1cc64a75118 <line:155:9, line:156:53>
|   | | |-BinaryOperator 0x1cc64a73c58 <line:155:14, col:18> 'int' '='
|   | | | |-DeclRefExpr 0x1cc64a73bf8 <col:14> 'int' lvalue Var 0x1cc64a73360 'n' 'int'
|   | | | `-IntegerLiteral 0x1cc64a73c30 <col:18> 'int' 0
|   | | |-<<<NULL>>>
|   | | |-BinaryOperator 0x1cc64a73ce8 <col:21, col:25> 'int' '<'
|   | | | |-ImplicitCastExpr 0x1cc64a73cb8 <col:21> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1cc64a73c78 <col:21> 'int' lvalue Var 0x1cc64a73360 'n' 'int'
|   | | | `-ImplicitCastExpr 0x1cc64a73cd0 <col:25> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1cc64a73c98 <col:25> 'int' lvalue Var 0x1cc64a73460 'num' 'int'
|   | | |-UnaryOperator 0x1cc64a73d28 <col:30, col:32> 'int' prefix '++'
|   | | | `-DeclRefExpr 0x1cc64a73d08 <col:32> 'int' lvalue Var 0x1cc64a73360 'n' 'int'
|   | | `-BinaryOperator 0x1cc64a750f8 <line:156:13, col:53> 'unsigned char' '='
|   | |   |-ArraySubscriptExpr 0x1cc64a73dc8 <col:13, col:18> 'unsigned char' lvalue
|   | |   | |-ImplicitCastExpr 0x1cc64a73d98 <col:13> 'unsigned char *' <LValueToRValue>
|   | |   | | `-DeclRefExpr 0x1cc64a73d40 <col:13> 'unsigned char *' lvalue ParmVar 0x1cc64a6ff68 'out' 'unsigned char *'
|   | |   | `-ImplicitCastExpr 0x1cc64a73db0 <col:17> 'int' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x1cc64a73d78 <col:17> 'int' lvalue Var 0x1cc64a73360 'n' 'int'
|   | |   `-ParenExpr 0x1cc64a750d8 <col:22, col:53> 'unsigned char'
|   | |     `-BinaryOperator 0x1cc64a750b8 <col:23, col:52> 'unsigned char' '='
|   | |       |-ArraySubscriptExpr 0x1cc64a73ea0 <col:23, col:34> 'unsigned char' lvalue
|   | |       | |-ImplicitCastExpr 0x1cc64a73e88 <col:23> 'unsigned char *' <ArrayToPointerDecay>
|   | |       | | `-DeclRefExpr 0x1cc64a73de8 <col:23> 'unsigned char [33]' lvalue Var 0x1cc64a73630 'ovec' 'unsigned char [33]'
|   | |       | `-BinaryOperator 0x1cc64a73e68 <col:28, col:33> 'int' '+'
|   | |       |   |-IntegerLiteral 0x1cc64a73e08 <col:28> 'int' 16
|   | |       |   `-ImplicitCastExpr 0x1cc64a73e50 <col:33> 'int' <LValueToRValue>
|   | |       |     `-DeclRefExpr 0x1cc64a73e30 <col:33> 'int' lvalue Var 0x1cc64a73360 'n' 'int'
|   | |       `-ImplicitCastExpr 0x1cc64a750a0 <col:38, col:52> 'unsigned char' <IntegralCast>
|   | |         `-BinaryOperator 0x1cc64a75080 <col:38, col:52> 'int' '^'
|   | |           |-ImplicitCastExpr 0x1cc64a75038 <col:38, col:42> 'int' <IntegralCast>
|   | |           | `-ImplicitCastExpr 0x1cc64a75020 <col:38, col:42> 'unsigned char' <LValueToRValue>
|   | |           |   `-ArraySubscriptExpr 0x1cc64a74f70 <col:38, col:42> 'const unsigned char' lvalue
|   | |           |     |-ImplicitCastExpr 0x1cc64a74f40 <col:38> 'const unsigned char *' <LValueToRValue>
|   | |           |     | `-DeclRefExpr 0x1cc64a73ec0 <col:38> 'const unsigned char *' lvalue ParmVar 0x1cc64a6fee8 'in' 'const unsigned char *'
|   | |           |     `-ImplicitCastExpr 0x1cc64a74f58 <col:41> 'int' <LValueToRValue>
|   | |           |       `-DeclRefExpr 0x1cc64a74f20 <col:41> 'int' lvalue Var 0x1cc64a73360 'n' 'int'
|   | |           `-ImplicitCastExpr 0x1cc64a75068 <col:46, col:52> 'int' <IntegralCast>
|   | |             `-ImplicitCastExpr 0x1cc64a75050 <col:46, col:52> 'unsigned char' <LValueToRValue>
|   | |               `-ArraySubscriptExpr 0x1cc64a75000 <col:46, col:52> 'unsigned char' lvalue
|   | |                 |-ImplicitCastExpr 0x1cc64a74fd0 <col:46> 'unsigned char *':'unsigned char *' <LValueToRValue>
|   | |                 | `-DeclRefExpr 0x1cc64a74f90 <col:46> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x1cc64a72fd0 'ivec' 'unsigned char *':'unsigned char *'
|   | |                 `-ImplicitCastExpr 0x1cc64a74fe8 <col:51> 'int' <LValueToRValue>
|   | |                   `-DeclRefExpr 0x1cc64a74fb0 <col:51> 'int' lvalue Var 0x1cc64a73360 'n' 'int'
|   | `-ForStmt 0x1cc64a75600 <line:158:9, line:159:53>
|   |   |-BinaryOperator 0x1cc64a75198 <line:158:14, col:18> 'int' '='
|   |   | |-DeclRefExpr 0x1cc64a75150 <col:14> 'int' lvalue Var 0x1cc64a73360 'n' 'int'
|   |   | `-IntegerLiteral 0x1cc64a75170 <col:18> 'int' 0
|   |   |-<<<NULL>>>
|   |   |-BinaryOperator 0x1cc64a75228 <col:21, col:25> 'int' '<'
|   |   | |-ImplicitCastExpr 0x1cc64a751f8 <col:21> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1cc64a751b8 <col:21> 'int' lvalue Var 0x1cc64a73360 'n' 'int'
|   |   | `-ImplicitCastExpr 0x1cc64a75210 <col:25> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1cc64a751d8 <col:25> 'int' lvalue Var 0x1cc64a73460 'num' 'int'
|   |   |-UnaryOperator 0x1cc64a75268 <col:30, col:32> 'int' prefix '++'
|   |   | `-DeclRefExpr 0x1cc64a75248 <col:32> 'int' lvalue Var 0x1cc64a73360 'n' 'int'
|   |   `-BinaryOperator 0x1cc64a755e0 <line:159:13, col:53> 'unsigned char' '='
|   |     |-ArraySubscriptExpr 0x1cc64a752f0 <col:13, col:18> 'unsigned char' lvalue
|   |     | |-ImplicitCastExpr 0x1cc64a752c0 <col:13> 'unsigned char *' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1cc64a75280 <col:13> 'unsigned char *' lvalue ParmVar 0x1cc64a6ff68 'out' 'unsigned char *'
|   |     | `-ImplicitCastExpr 0x1cc64a752d8 <col:17> 'int' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x1cc64a752a0 <col:17> 'int' lvalue Var 0x1cc64a73360 'n' 'int'
|   |     `-ImplicitCastExpr 0x1cc64a755c8 <col:22, col:53> 'unsigned char' <IntegralCast>
|   |       `-BinaryOperator 0x1cc64a755a8 <col:22, col:53> 'int' '^'
|   |         |-ImplicitCastExpr 0x1cc64a75560 <col:22, col:43> 'int' <IntegralCast>
|   |         | `-ParenExpr 0x1cc64a754b0 <col:22, col:43> 'unsigned char'
|   |         |   `-BinaryOperator 0x1cc64a75490 <col:23, col:42> 'unsigned char' '='
|   |         |     |-ArraySubscriptExpr 0x1cc64a753c8 <col:23, col:34> 'unsigned char' lvalue
|   |         |     | |-ImplicitCastExpr 0x1cc64a753b0 <col:23> 'unsigned char *' <ArrayToPointerDecay>
|   |         |     | | `-DeclRefExpr 0x1cc64a75310 <col:23> 'unsigned char [33]' lvalue Var 0x1cc64a73630 'ovec' 'unsigned char [33]'
|   |         |     | `-BinaryOperator 0x1cc64a75390 <col:28, col:33> 'int' '+'
|   |         |     |   |-IntegerLiteral 0x1cc64a75330 <col:28> 'int' 16
|   |         |     |   `-ImplicitCastExpr 0x1cc64a75378 <col:33> 'int' <LValueToRValue>
|   |         |     |     `-DeclRefExpr 0x1cc64a75358 <col:33> 'int' lvalue Var 0x1cc64a73360 'n' 'int'
|   |         |     `-ImplicitCastExpr 0x1cc64a75478 <col:38, col:42> 'unsigned char' <LValueToRValue>
|   |         |       `-ArraySubscriptExpr 0x1cc64a75458 <col:38, col:42> 'const unsigned char' lvalue
|   |         |         |-ImplicitCastExpr 0x1cc64a75428 <col:38> 'const unsigned char *' <LValueToRValue>
|   |         |         | `-DeclRefExpr 0x1cc64a753e8 <col:38> 'const unsigned char *' lvalue ParmVar 0x1cc64a6fee8 'in' 'const unsigned char *'
|   |         |         `-ImplicitCastExpr 0x1cc64a75440 <col:41> 'int' <LValueToRValue>
|   |         |           `-DeclRefExpr 0x1cc64a75408 <col:41> 'int' lvalue Var 0x1cc64a73360 'n' 'int'
|   |         `-ImplicitCastExpr 0x1cc64a75590 <col:47, col:53> 'int' <IntegralCast>
|   |           `-ImplicitCastExpr 0x1cc64a75578 <col:47, col:53> 'unsigned char' <LValueToRValue>
|   |             `-ArraySubscriptExpr 0x1cc64a75540 <col:47, col:53> 'unsigned char' lvalue
|   |               |-ImplicitCastExpr 0x1cc64a75510 <col:47> 'unsigned char *':'unsigned char *' <LValueToRValue>
|   |               | `-DeclRefExpr 0x1cc64a754d0 <col:47> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x1cc64a72fd0 'ivec' 'unsigned char *':'unsigned char *'
|   |               `-ImplicitCastExpr 0x1cc64a75528 <col:52> 'int' <LValueToRValue>
|   |                 `-DeclRefExpr 0x1cc64a754f0 <col:52> 'int' lvalue Var 0x1cc64a73360 'n' 'int'
|   |-BinaryOperator 0x1cc64a75718 <line:161:5, col:19> 'int' '='
|   | |-DeclRefExpr 0x1cc64a75660 <col:5> 'int' lvalue Var 0x1cc64a733e0 'rem' 'int'
|   | `-BinaryOperator 0x1cc64a756f8 <col:11, col:19> 'int' '%'
|   |   |-ImplicitCastExpr 0x1cc64a756e0 <col:11> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1cc64a75698 <col:11> 'int' lvalue ParmVar 0x1cc64a6ffe8 'nbits' 'int'
|   |   `-IntegerLiteral 0x1cc64a756b8 <col:19> 'int' 8
|   |-BinaryOperator 0x1cc64a757d8 <line:162:5, col:19> 'int' '='
|   | |-DeclRefExpr 0x1cc64a75738 <col:5> 'int' lvalue Var 0x1cc64a73460 'num' 'int'
|   | `-BinaryOperator 0x1cc64a757b8 <col:11, col:19> 'int' '/'
|   |   |-ImplicitCastExpr 0x1cc64a757a0 <col:11> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1cc64a75758 <col:11> 'int' lvalue ParmVar 0x1cc64a6ffe8 'nbits' 'int'
|   |   `-IntegerLiteral 0x1cc64a75778 <col:19> 'int' 8
|   `-IfStmt 0x1cc64a76030 <line:163:5, line:167:75> has_else
|     |-BinaryOperator 0x1cc64a75858 <line:163:9, col:16> 'int' '=='
|     | |-ImplicitCastExpr 0x1cc64a75840 <col:9> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x1cc64a757f8 <col:9> 'int' lvalue Var 0x1cc64a733e0 'rem' 'int'
|     | `-IntegerLiteral 0x1cc64a75818 <col:16> 'int' 0
|     |-CallExpr 0x1cc64a759a0 <line:164:9, col:36> 'void *'
|     | |-ImplicitCastExpr 0x1cc64a75988 <col:9> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|     | | `-DeclRefExpr 0x1cc64a75878 <col:9> 'void *(void *, const void *, unsigned long long)' Function 0x1cc649fc388 'memcpy' 'void *(void *, const void *, unsigned long long)'
|     | |-ImplicitCastExpr 0x1cc64a759f0 <col:16> 'void *' <BitCast>
|     | | `-ImplicitCastExpr 0x1cc64a759d8 <col:16> 'unsigned char *':'unsigned char *' <LValueToRValue>
|     | |   `-DeclRefExpr 0x1cc64a75898 <col:16> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x1cc64a72fd0 'ivec' 'unsigned char *':'unsigned char *'
|     | |-ImplicitCastExpr 0x1cc64a75a08 <col:22, col:29> 'const void *' <BitCast>
|     | | `-BinaryOperator 0x1cc64a75928 <col:22, col:29> 'unsigned char *' '+'
|     | |   |-ImplicitCastExpr 0x1cc64a758f8 <col:22> 'unsigned char *' <ArrayToPointerDecay>
|     | |   | `-DeclRefExpr 0x1cc64a758b8 <col:22> 'unsigned char [33]' lvalue Var 0x1cc64a73630 'ovec' 'unsigned char [33]'
|     | |   `-ImplicitCastExpr 0x1cc64a75910 <col:29> 'int' <LValueToRValue>
|     | |     `-DeclRefExpr 0x1cc64a758d8 <col:29> 'int' lvalue Var 0x1cc64a73460 'num' 'int'
|     | `-ImplicitCastExpr 0x1cc64a75a20 <col:34> 'unsigned long long' <IntegralCast>
|     |   `-IntegerLiteral 0x1cc64a75948 <col:34> 'int' 16
|     `-ForStmt 0x1cc64a75ff8 <line:166:9, line:167:75>
|       |-BinaryOperator 0x1cc64a75a80 <line:166:14, col:18> 'int' '='
|       | |-DeclRefExpr 0x1cc64a75a38 <col:14> 'int' lvalue Var 0x1cc64a73360 'n' 'int'
|       | `-IntegerLiteral 0x1cc64a75a58 <col:18> 'int' 0
|       |-<<<NULL>>>
|       |-BinaryOperator 0x1cc64a75b00 <col:21, col:25> 'int' '<'
|       | |-ImplicitCastExpr 0x1cc64a75ae8 <col:21> 'int' <LValueToRValue>
|       | | `-DeclRefExpr 0x1cc64a75aa0 <col:21> 'int' lvalue Var 0x1cc64a73360 'n' 'int'
|       | `-IntegerLiteral 0x1cc64a75ac0 <col:25> 'int' 16
|       |-UnaryOperator 0x1cc64a75b40 <col:29, col:31> 'int' prefix '++'
|       | `-DeclRefExpr 0x1cc64a75b20 <col:31> 'int' lvalue Var 0x1cc64a73360 'n' 'int'
|       `-BinaryOperator 0x1cc64a75fd8 <line:167:13, col:75> 'unsigned char' '='
|         |-ArraySubscriptExpr 0x1cc64a75bc8 <col:13, col:19> 'unsigned char' lvalue
|         | |-ImplicitCastExpr 0x1cc64a75b98 <col:13> 'unsigned char *':'unsigned char *' <LValueToRValue>
|         | | `-DeclRefExpr 0x1cc64a75b58 <col:13> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x1cc64a72fd0 'ivec' 'unsigned char *':'unsigned char *'
|         | `-ImplicitCastExpr 0x1cc64a75bb0 <col:18> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x1cc64a75b78 <col:18> 'int' lvalue Var 0x1cc64a73360 'n' 'int'
|         `-ImplicitCastExpr 0x1cc64a75fc0 <col:23, col:75> 'unsigned char' <IntegralCast>
|           `-BinaryOperator 0x1cc64a75fa0 <col:23, col:75> 'int' '|'
|             |-BinaryOperator 0x1cc64a75d38 <col:23, col:40> 'int' '<<'
|             | |-ImplicitCastExpr 0x1cc64a75d08 <col:23, col:35> 'int' <IntegralCast>
|             | | `-ImplicitCastExpr 0x1cc64a75cf0 <col:23, col:35> 'unsigned char' <LValueToRValue>
|             | |   `-ArraySubscriptExpr 0x1cc64a75cb0 <col:23, col:35> 'unsigned char' lvalue
|             | |     |-ImplicitCastExpr 0x1cc64a75c98 <col:23> 'unsigned char *' <ArrayToPointerDecay>
|             | |     | `-DeclRefExpr 0x1cc64a75be8 <col:23> 'unsigned char [33]' lvalue Var 0x1cc64a73630 'ovec' 'unsigned char [33]'
|             | |     `-BinaryOperator 0x1cc64a75c78 <col:28, col:32> 'int' '+'
|             | |       |-ImplicitCastExpr 0x1cc64a75c48 <col:28> 'int' <LValueToRValue>
|             | |       | `-DeclRefExpr 0x1cc64a75c08 <col:28> 'int' lvalue Var 0x1cc64a73360 'n' 'int'
|             | |       `-ImplicitCastExpr 0x1cc64a75c60 <col:32> 'int' <LValueToRValue>
|             | |         `-DeclRefExpr 0x1cc64a75c28 <col:32> 'int' lvalue Var 0x1cc64a73460 'num' 'int'
|             | `-ImplicitCastExpr 0x1cc64a75d20 <col:40> 'int' <LValueToRValue>
|             |   `-DeclRefExpr 0x1cc64a75cd0 <col:40> 'int' lvalue Var 0x1cc64a733e0 'rem' 'int'
|             `-BinaryOperator 0x1cc64a75f80 <col:46, col:75> 'int' '>>'
|               |-ImplicitCastExpr 0x1cc64a75f68 <col:46, col:62> 'int' <IntegralCast>
|               | `-ImplicitCastExpr 0x1cc64a75f50 <col:46, col:62> 'unsigned char' <LValueToRValue>
|               |   `-ArraySubscriptExpr 0x1cc64a75e68 <col:46, col:62> 'unsigned char' lvalue
|               |     |-ImplicitCastExpr 0x1cc64a75e50 <col:46> 'unsigned char *' <ArrayToPointerDecay>
|               |     | `-DeclRefExpr 0x1cc64a75d58 <col:46> 'unsigned char [33]' lvalue Var 0x1cc64a73630 'ovec' 'unsigned char [33]'
|               |     `-BinaryOperator 0x1cc64a75e30 <col:51, col:61> 'int' '+'
|               |       |-BinaryOperator 0x1cc64a75de8 <col:51, col:55> 'int' '+'
|               |       | |-ImplicitCastExpr 0x1cc64a75db8 <col:51> 'int' <LValueToRValue>
|               |       | | `-DeclRefExpr 0x1cc64a75d78 <col:51> 'int' lvalue Var 0x1cc64a73360 'n' 'int'
|               |       | `-ImplicitCastExpr 0x1cc64a75dd0 <col:55> 'int' <LValueToRValue>
|               |       |   `-DeclRefExpr 0x1cc64a75d98 <col:55> 'int' lvalue Var 0x1cc64a73460 'num' 'int'
|               |       `-IntegerLiteral 0x1cc64a75e08 <col:61> 'int' 1
|               `-ParenExpr 0x1cc64a75f30 <col:67, col:75> 'int'
|                 `-BinaryOperator 0x1cc64a75ee8 <col:68, col:72> 'int' '-'
|                   |-IntegerLiteral 0x1cc64a75e88 <col:68> 'int' 8
|                   `-ImplicitCastExpr 0x1cc64a75ed0 <col:72> 'int' <LValueToRValue>
|                     `-DeclRefExpr 0x1cc64a75eb0 <col:72> 'int' lvalue Var 0x1cc64a733e0 'rem' 'int'
|-FunctionDecl 0x1cc64a76558 <line:173:1, line:187:1> line:173:6 invalid CRYPTO_cfb128_1_encrypt 'void (const unsigned char *, unsigned char *, size_t, const void *, unsigned char *, int *, int, int)'
| |-ParmVarDecl 0x1cc64a760c8 <col:30, col:51> col:51 used in 'const unsigned char *'
| |-ParmVarDecl 0x1cc64a76148 <col:55, col:70> col:70 used out 'unsigned char *'
| |-ParmVarDecl 0x1cc64a761c0 <line:174:30, col:37> col:37 used bits 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1cc64a76240 <col:43, col:55> col:55 used key 'const void *'
| |-ParmVarDecl 0x1cc64a76310 <line:175:30, col:51> col:44 used ivec 'unsigned char *':'unsigned char *'
| |-ParmVarDecl 0x1cc64a76390 <col:54, col:59> col:59 num 'int *'
| |-ParmVarDecl 0x1cc64a76410 <line:176:30, col:34> col:34 used enc 'int'
| |-ParmVarDecl 0x1cc64a76490 <col:39, col:50> col:50 invalid block 'int'
| `-CompoundStmt 0x1cc64a72718 <line:177:1, line:187:1>
|   |-DeclStmt 0x1cc64a766c8 <line:178:5, col:13>
|   | `-VarDecl 0x1cc64a76660 <col:5, col:12> col:12 used n 'size_t':'unsigned long long'
|   |-DeclStmt 0x1cc64a768d0 <line:179:5, col:29>
|   | |-VarDecl 0x1cc64a76780 <col:5, col:22> col:19 used c 'unsigned char [1]'
|   | `-VarDecl 0x1cc64a76850 <col:5, col:28> col:25 used d 'unsigned char [1]'
|   `-ForStmt 0x1cc64a726e0 <line:181:5, line:186:5>
|     |-BinaryOperator 0x1cc64a76960 <line:181:10, col:14> 'size_t':'unsigned long long' '='
|     | |-DeclRefExpr 0x1cc64a768e8 <col:10> 'size_t':'unsigned long long' lvalue Var 0x1cc64a76660 'n' 'size_t':'unsigned long long'
|     | `-ImplicitCastExpr 0x1cc64a76948 <col:14> 'size_t':'unsigned long long' <IntegralCast>
|     |   `-IntegerLiteral 0x1cc64a76920 <col:14> 'int' 0
|     |-<<<NULL>>>
|     |-BinaryOperator 0x1cc64a76a08 <col:17, col:21> 'int' '<'
|     | |-ImplicitCastExpr 0x1cc64a769d8 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|     | | `-DeclRefExpr 0x1cc64a76980 <col:17> 'size_t':'unsigned long long' lvalue Var 0x1cc64a76660 'n' 'size_t':'unsigned long long'
|     | `-ImplicitCastExpr 0x1cc64a769f0 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|     |   `-DeclRefExpr 0x1cc64a769a0 <col:21> 'size_t':'unsigned long long' lvalue ParmVar 0x1cc64a761c0 'bits' 'size_t':'unsigned long long'
|     |-UnaryOperator 0x1cc64a76a48 <col:27, col:29> 'size_t':'unsigned long long' prefix '++'
|     | `-DeclRefExpr 0x1cc64a76a28 <col:29> 'size_t':'unsigned long long' lvalue Var 0x1cc64a76660 'n' 'size_t':'unsigned long long'
|     `-CompoundStmt 0x1cc64a726c0 <col:32, line:186:5>
|       |-BinaryOperator 0x1cc64a76e88 <line:182:9, col:58> 'unsigned char' '='
|       | |-ArraySubscriptExpr 0x1cc64a76ad8 <col:9, col:12> 'unsigned char' lvalue
|       | | |-ImplicitCastExpr 0x1cc64a76ac0 <col:9> 'unsigned char *' <ArrayToPointerDecay>
|       | | | `-DeclRefExpr 0x1cc64a76a60 <col:9> 'unsigned char [1]' lvalue Var 0x1cc64a76780 'c' 'unsigned char [1]'
|       | | `-IntegerLiteral 0x1cc64a76a98 <col:11> 'int' 0
|       | `-ImplicitCastExpr 0x1cc64a76e70 <col:16, col:58> 'unsigned char' <IntegralCast>
|       |   `-ConditionalOperator 0x1cc64a76e40 <col:16, col:58> 'int'
|       |     |-ParenExpr 0x1cc64a76dd0 <col:16, col:47> 'int'
|       |     | `-BinaryOperator 0x1cc64a76db0 <col:17, col:46> 'int' '&'
|       |     |   |-ImplicitCastExpr 0x1cc64a76d98 <col:17, col:25> 'int' <IntegralCast>
|       |     |   | `-ImplicitCastExpr 0x1cc64a76d80 <col:17, col:25> 'unsigned char' <LValueToRValue>
|       |     |   |   `-ArraySubscriptExpr 0x1cc64a76be0 <col:17, col:25> 'const unsigned char' lvalue
|       |     |   |     |-ImplicitCastExpr 0x1cc64a76bc8 <col:17> 'const unsigned char *' <LValueToRValue>
|       |     |   |     | `-DeclRefExpr 0x1cc64a76af8 <col:17> 'const unsigned char *' lvalue ParmVar 0x1cc64a760c8 'in' 'const unsigned char *'
|       |     |   |     `-BinaryOperator 0x1cc64a76ba8 <col:20, col:24> 'unsigned long long' '/'
|       |     |   |       |-ImplicitCastExpr 0x1cc64a76b78 <col:20> 'size_t':'unsigned long long' <LValueToRValue>
|       |     |   |       | `-DeclRefExpr 0x1cc64a76b30 <col:20> 'size_t':'unsigned long long' lvalue Var 0x1cc64a76660 'n' 'size_t':'unsigned long long'
|       |     |   |       `-ImplicitCastExpr 0x1cc64a76b90 <col:24> 'unsigned long long' <IntegralCast>
|       |     |   |         `-IntegerLiteral 0x1cc64a76b50 <col:24> 'int' 8
|       |     |   `-ParenExpr 0x1cc64a76d60 <col:29, col:46> 'int'
|       |     |     `-BinaryOperator 0x1cc64a76d40 <col:30, col:45> 'int' '<<'
|       |     |       |-IntegerLiteral 0x1cc64a76c00 <col:30> 'int' 1
|       |     |       `-ParenExpr 0x1cc64a76d20 <col:35, col:45> 'unsigned long long'
|       |     |         `-BinaryOperator 0x1cc64a76d00 <col:36, col:44> 'unsigned long long' '-'
|       |     |           |-ImplicitCastExpr 0x1cc64a76ce8 <col:36> 'unsigned long long' <IntegralCast>
|       |     |           | `-IntegerLiteral 0x1cc64a76c28 <col:36> 'int' 7
|       |     |           `-BinaryOperator 0x1cc64a76cc8 <col:40, col:44> 'unsigned long long' '%'
|       |     |             |-ImplicitCastExpr 0x1cc64a76c98 <col:40> 'size_t':'unsigned long long' <LValueToRValue>
|       |     |             | `-DeclRefExpr 0x1cc64a76c50 <col:40> 'size_t':'unsigned long long' lvalue Var 0x1cc64a76660 'n' 'size_t':'unsigned long long'
|       |     |             `-ImplicitCastExpr 0x1cc64a76cb0 <col:44> 'unsigned long long' <IntegralCast>
|       |     |               `-IntegerLiteral 0x1cc64a76c70 <col:44> 'int' 8
|       |     |-IntegerLiteral 0x1cc64a76df0 <col:51> 'int' 128
|       |     `-IntegerLiteral 0x1cc64a76e18 <col:58> 'int' 0
|       `-BinaryOperator 0x1cc64a726a0 <line:184:9, line:185:52> 'unsigned char' '='
|         |-ArraySubscriptExpr 0x1cc64a72080 <line:184:9, col:18> 'unsigned char' lvalue
|         | |-ImplicitCastExpr 0x1cc64a72068 <col:9> 'unsigned char *' <LValueToRValue>
|         | | `-DeclRefExpr 0x1cc64a71f98 <col:9> 'unsigned char *' lvalue ParmVar 0x1cc64a76148 'out' 'unsigned char *'
|         | `-BinaryOperator 0x1cc64a72048 <col:13, col:17> 'unsigned long long' '/'
|         |   |-ImplicitCastExpr 0x1cc64a72018 <col:13> 'size_t':'unsigned long long' <LValueToRValue>
|         |   | `-DeclRefExpr 0x1cc64a71fd0 <col:13> 'size_t':'unsigned long long' lvalue Var 0x1cc64a76660 'n' 'size_t':'unsigned long long'
|         |   `-ImplicitCastExpr 0x1cc64a72030 <col:17> 'unsigned long long' <IntegralCast>
|         |     `-IntegerLiteral 0x1cc64a71ff0 <col:17> 'int' 8
|         `-ImplicitCastExpr 0x1cc64a72688 <col:22, line:185:52> 'unsigned char' <IntegralCast>
|           `-BinaryOperator 0x1cc64a72668 <line:184:22, line:185:52> 'int' '|'
|             |-ParenExpr 0x1cc64a723d8 <line:184:22, col:69> 'int'
|             | `-BinaryOperator 0x1cc64a723b8 <col:23, col:68> 'int' '&'
|             |   |-ImplicitCastExpr 0x1cc64a723a0 <col:23, col:32> 'int' <IntegralCast>
|             |   | `-ImplicitCastExpr 0x1cc64a72388 <col:23, col:32> 'unsigned char' <LValueToRValue>
|             |   |   `-ArraySubscriptExpr 0x1cc64a72170 <col:23, col:32> 'unsigned char' lvalue
|             |   |     |-ImplicitCastExpr 0x1cc64a72158 <col:23> 'unsigned char *' <LValueToRValue>
|             |   |     | `-DeclRefExpr 0x1cc64a720a0 <col:23> 'unsigned char *' lvalue ParmVar 0x1cc64a76148 'out' 'unsigned char *'
|             |   |     `-BinaryOperator 0x1cc64a72138 <col:27, col:31> 'unsigned long long' '/'
|             |   |       |-ImplicitCastExpr 0x1cc64a72108 <col:27> 'size_t':'unsigned long long' <LValueToRValue>
|             |   |       | `-DeclRefExpr 0x1cc64a720c0 <col:27> 'size_t':'unsigned long long' lvalue Var 0x1cc64a76660 'n' 'size_t':'unsigned long long'
|             |   |       `-ImplicitCastExpr 0x1cc64a72120 <col:31> 'unsigned long long' <IntegralCast>
|             |   |         `-IntegerLiteral 0x1cc64a720e0 <col:31> 'int' 8
|             |   `-UnaryOperator 0x1cc64a72370 <col:36, col:68> 'int' prefix '~' cannot overflow
|             |     `-ParenExpr 0x1cc64a72350 <col:37, col:68> 'int'
|             |       `-BinaryOperator 0x1cc64a72330 <col:38, col:67> 'int' '<<'
|             |         |-IntegerLiteral 0x1cc64a72190 <col:38> 'int' 1
|             |         `-CStyleCastExpr 0x1cc64a72308 <col:43, col:67> 'unsigned int' <IntegralCast>
|             |           `-ParenExpr 0x1cc64a722e8 <col:57, col:67> 'unsigned long long'
|             |             `-BinaryOperator 0x1cc64a72290 <col:58, col:66> 'unsigned long long' '-'
|             |               |-ImplicitCastExpr 0x1cc64a72278 <col:58> 'unsigned long long' <IntegralCast>
|             |               | `-IntegerLiteral 0x1cc64a721b8 <col:58> 'int' 7
|             |               `-BinaryOperator 0x1cc64a72258 <col:62, col:66> 'unsigned long long' '%'
|             |                 |-ImplicitCastExpr 0x1cc64a72228 <col:62> 'size_t':'unsigned long long' <LValueToRValue>
|             |                 | `-DeclRefExpr 0x1cc64a721e0 <col:62> 'size_t':'unsigned long long' lvalue Var 0x1cc64a76660 'n' 'size_t':'unsigned long long'
|             |                 `-ImplicitCastExpr 0x1cc64a72240 <col:66> 'unsigned long long' <IntegralCast>
|             |                   `-IntegerLiteral 0x1cc64a72200 <col:66> 'int' 8
|             `-ParenExpr 0x1cc64a72648 <line:185:13, col:52> 'int'
|               `-BinaryOperator 0x1cc64a72628 <col:14, col:51> 'int' '>>'
|                 |-ParenExpr 0x1cc64a724f0 <col:14, col:26> 'int'
|                 | `-BinaryOperator 0x1cc64a724d0 <col:15, col:22> 'int' '&'
|                 |   |-ImplicitCastExpr 0x1cc64a724b8 <col:15, col:18> 'int' <IntegralCast>
|                 |   | `-ImplicitCastExpr 0x1cc64a724a0 <col:15, col:18> 'unsigned char' <LValueToRValue>
|                 |   |   `-ArraySubscriptExpr 0x1cc64a72458 <col:15, col:18> 'unsigned char' lvalue
|                 |   |     |-ImplicitCastExpr 0x1cc64a72440 <col:15> 'unsigned char *' <ArrayToPointerDecay>
|                 |   |     | `-DeclRefExpr 0x1cc64a723f8 <col:15> 'unsigned char [1]' lvalue Var 0x1cc64a76850 'd' 'unsigned char [1]'
|                 |   |     `-IntegerLiteral 0x1cc64a72418 <col:17> 'int' 0
|                 |   `-IntegerLiteral 0x1cc64a72478 <col:22> 'int' 128
|                 `-CStyleCastExpr 0x1cc64a72600 <col:31, col:51> 'unsigned int' <IntegralCast>
|                   `-ParenExpr 0x1cc64a725e0 <col:45, col:51> 'unsigned long long'
|                     `-BinaryOperator 0x1cc64a72588 <col:46, col:50> 'unsigned long long' '%'
|                       |-ImplicitCastExpr 0x1cc64a72558 <col:46> 'size_t':'unsigned long long' <LValueToRValue>
|                       | `-DeclRefExpr 0x1cc64a72510 <col:46> 'size_t':'unsigned long long' lvalue Var 0x1cc64a76660 'n' 'size_t':'unsigned long long'
|                       `-ImplicitCastExpr 0x1cc64a72570 <col:50> 'unsigned long long' <IntegralCast>
|                         `-IntegerLiteral 0x1cc64a72530 <col:50> 'int' 8
`-FunctionDecl 0x1cc64a72c00 <line:189:1, line:198:1> line:189:6 invalid CRYPTO_cfb128_8_encrypt 'void (const unsigned char *, unsigned char *, size_t, const void *, unsigned char *, int *, int, int)'
  |-ParmVarDecl 0x1cc64a72770 <col:30, col:51> col:51 used in 'const unsigned char *'
  |-ParmVarDecl 0x1cc64a727f0 <col:55, col:70> col:70 used out 'unsigned char *'
  |-ParmVarDecl 0x1cc64a72868 <line:190:30, col:37> col:37 used length 'size_t':'unsigned long long'
  |-ParmVarDecl 0x1cc64a728e8 <col:45, col:57> col:57 used key 'const void *'
  |-ParmVarDecl 0x1cc64a729b8 <line:191:30, col:51> col:44 used ivec 'unsigned char *':'unsigned char *'
  |-ParmVarDecl 0x1cc64a72a38 <col:54, col:59> col:59 num 'int *'
  |-ParmVarDecl 0x1cc64a72ab8 <line:192:30, col:34> col:34 used enc 'int'
  |-ParmVarDecl 0x1cc64a72b38 <col:39, col:50> col:50 invalid block 'int'
  `-CompoundStmt 0x1cc64a771a8 <line:193:1, line:198:1>
    `-DeclStmt 0x1cc64a72d70 <line:194:5, col:13>
      `-VarDecl 0x1cc64a72d08 <col:5, col:12> col:12 used n 'size_t':'unsigned long long'
