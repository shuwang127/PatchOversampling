TranslationUnitDecl 0x1ccd487f4d8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1ccd487fd70 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1ccd487fa70 '__int128'
|-TypedefDecl 0x1ccd487fde0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1ccd487fa90 'unsigned __int128'
|-TypedefDecl 0x1ccd4880118 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1ccd487fed0 'struct __NSConstantString_tag'
|   `-Record 0x1ccd487fe38 '__NSConstantString_tag'
|-TypedefDecl 0x1ccd4880188 <<invalid sloc>> <invalid sloc> implicit referenced size_t 'unsigned long long'
| `-BuiltinType 0x1ccd487f6b0 'unsigned long long'
|-TypedefDecl 0x1ccd4880220 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1ccd48801e0 'char *'
|   `-BuiltinType 0x1ccd487f570 'char'
|-TypedefDecl 0x1ccd4880290 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1ccd48801e0 'char *'
|   `-BuiltinType 0x1ccd487f570 'char'
|-TypedefDecl 0x1ccd4880300 <.//openssl//file_jk/before\crypto\modes/modes_lcl.h:13:1, col:17> col:17 i64 'long long'
| `-BuiltinType 0x1ccd487f610 'long long'
|-TypedefDecl 0x1ccd4880370 <line:14:1, col:26> col:26 referenced u64 'unsigned long long'
| `-BuiltinType 0x1ccd487f6b0 'unsigned long long'
|-TypedefDecl 0x1ccd48803e0 <line:26:1, col:22> col:22 referenced u32 'unsigned int'
| `-BuiltinType 0x1ccd487f670 'unsigned int'
|-TypedefDecl 0x1ccd4880450 <line:27:1, col:23> col:23 referenced u8 'unsigned char'
| `-BuiltinType 0x1ccd487f630 'unsigned char'
|-RecordDecl 0x1ccd62ebb10 <line:94:32, line:96:1> line:94:32 struct definition
| |-FieldDecl 0x1ccd62ebc00 <line:95:5, col:9> col:9 hi 'u64':'unsigned long long'
| `-FieldDecl 0x1ccd62ebc68 <col:5, col:13> col:13 lo 'u64':'unsigned long long'
|-TypedefDecl 0x1ccd62ebd18 <line:94:24, line:96:3> col:3 referenced u128 'struct u128':'u128'
| `-ElaboratedType 0x1ccd62ebcc0 'struct u128' sugar
|   `-RecordType 0x1ccd62ebbb0 'u128'
|     `-Record 0x1ccd62ebb10 ''
|-RecordDecl 0x1ccd62ebd88 <line:107:1, line:130:1> line:107:8 invalid struct gcm128_context definition
| |-RecordDecl 0x1ccd62ebe40 <line:109:5, line:114:5> line:109:5 union definition
| | |-FieldDecl 0x1ccd62ebfd8 <line:110:9, col:16> col:13 u 'u64 [2]'
| | |-FieldDecl 0x1ccd62ec128 <line:111:9, col:16> col:13 d 'u32 [4]'
| | |-FieldDecl 0x1ccd62ec278 <line:112:9, col:16> col:12 c 'u8 [16]'
| | `-FieldDecl 0x1ccd62ec3f8 <line:113:9, col:37> col:16 t 'size_t [2]'
| |-FieldDecl 0x1ccd62ec4a8 <line:109:5, line:114:7> col:7 Yi 'union (anonymous union at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x1ccd62ec520 <line:109:5, line:114:11> col:11 EKi 'union (anonymous union at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x1ccd62ec598 <line:109:5, line:114:16> col:16 EK0 'union (anonymous union at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x1ccd62ec610 <line:109:5, line:114:21> col:21 len 'union (anonymous union at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x1ccd62ec688 <line:109:5, line:114:26> col:26 Xi 'union (anonymous union at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x1ccd62ec700 <line:109:5, line:114:30> col:30 H 'union (anonymous union at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x1ccd62ec8b8 <line:122:5, col:19> col:10 Htable 'u128 [16]'
| |-FieldDecl 0x1ccd62ead78 <line:123:5, col:52> col:12 gmult 'void (*)(u64 *, const u128 *)'
| |-FieldDecl 0x1ccd62eb288 <line:124:5, line:125:30> line:124:12 ghash 'void (*)(u64 *, const u128 *, const u8 *, size_t)'
| |-FieldDecl 0x1ccd62eb2f8 <line:127:5, col:18> col:18 mres 'unsigned int'
| |-FieldDecl 0x1ccd62eb368 <col:5, col:24> col:24 ares 'unsigned int'
| |-FieldDecl 0x1ccd62eb3d8 <line:128:5, col:16> col:16 invalid block 'int'
| `-FieldDecl 0x1ccd62eb448 <line:129:5, col:11> col:11 key 'void *'
|-RecordDecl 0x1ccd62eb508 <line:132:1, line:135:1> line:132:8 invalid struct xts128_context definition
| |-FieldDecl 0x1ccd62eb5d8 <line:133:5, col:11> col:11 key1 'void *'
| |-FieldDecl 0x1ccd62eb648 <col:5, col:18> col:18 key2 'void *'
| |-FieldDecl 0x1ccd62eb6b8 <line:134:5, col:16> col:16 invalid block1 'int'
| `-FieldDecl 0x1ccd62eb728 <col:5, col:24> col:24 invalid block2 'int'
|-RecordDecl 0x1ccd62eb780 <line:137:1, line:145:1> line:137:8 invalid struct ccm128_context definition
| |-RecordDecl 0x1ccd62eb840 <line:138:5, line:141:5> line:138:5 union definition
| | |-FieldDecl 0x1ccd62eb960 <line:139:9, col:16> col:13 u 'u64 [2]'
| | `-FieldDecl 0x1ccd62eba18 <line:140:9, col:16> col:12 c 'u8 [16]'
| |-FieldDecl 0x1ccd62ecb20 <line:138:5, line:141:7> col:7 nonce 'union (anonymous union at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:138:5)':'union ccm128_context::(anonymous at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:138:5)'
| |-FieldDecl 0x1ccd62ecb98 <line:138:5, line:141:14> col:14 cmac 'union (anonymous union at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:138:5)':'union ccm128_context::(anonymous at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:138:5)'
| |-FieldDecl 0x1ccd62ecc00 <line:142:5, col:9> col:9 blocks 'u64':'unsigned long long'
| |-FieldDecl 0x1ccd62ecc70 <line:143:5, col:16> col:16 invalid block 'int'
| `-FieldDecl 0x1ccd62ecce0 <line:144:5, col:11> col:11 key 'void *'
|-RecordDecl 0x1ccd62ecd90 <line:149:9, line:152:1> line:149:9 union definition
| |-FieldDecl 0x1ccd62eceb0 <line:150:5, col:12> col:9 a 'u64 [2]'
| `-FieldDecl 0x1ccd62ecf70 <line:151:5, col:23> col:19 c 'unsigned char [16]'
|-TypedefDecl 0x1ccd62ed028 <line:149:1, line:152:3> col:3 referenced OCB_BLOCK 'union OCB_BLOCK':'OCB_BLOCK'
| `-ElaboratedType 0x1ccd62ecfd0 'union OCB_BLOCK' sugar
|   `-RecordType 0x1ccd62ece30 'OCB_BLOCK'
|     `-Record 0x1ccd62ecd90 ''
|-RecordDecl 0x1ccd62ed098 <line:163:1, line:185:1> line:163:8 invalid struct ocb128_context definition
| |-FieldDecl 0x1ccd62ed168 <line:165:5, col:16> col:16 invalid encrypt 'int'
| |-FieldDecl 0x1ccd62ed1d8 <line:166:5, col:16> col:16 invalid decrypt 'int'
| |-FieldDecl 0x1ccd62ed248 <line:167:5, col:11> col:11 keyenc 'void *'
| |-FieldDecl 0x1ccd62ed2b8 <line:168:5, col:11> col:11 keydec 'void *'
| |-FieldDecl 0x1ccd62ed328 <line:169:5, col:14> col:14 invalid stream 'int'
| |-FieldDecl 0x1ccd62ed390 <line:171:5, col:12> col:12 l_index 'size_t':'unsigned long long'
| |-FieldDecl 0x1ccd62ed3f8 <line:172:5, col:12> col:12 max_l_index 'size_t':'unsigned long long'
| |-FieldDecl 0x1ccd62ed480 <line:173:5, col:15> col:15 l_star 'OCB_BLOCK':'OCB_BLOCK'
| |-FieldDecl 0x1ccd62ed4e8 <line:174:5, col:15> col:15 l_dollar 'OCB_BLOCK':'OCB_BLOCK'
| |-FieldDecl 0x1ccd62ed5a8 <line:175:5, col:16> col:16 l 'OCB_BLOCK *'
| |-RecordDecl 0x1ccd62ed600 <line:177:5, line:184:5> line:177:5 struct definition
| | |-FieldDecl 0x1ccd62ed6d0 <line:178:9, col:13> col:13 blocks_hashed 'u64':'unsigned long long'
| | |-FieldDecl 0x1ccd62ed738 <line:179:9, col:13> col:13 blocks_processed 'u64':'unsigned long long'
| | |-FieldDecl 0x1ccd62ed7a0 <line:180:9, col:19> col:19 offset_aad 'OCB_BLOCK':'OCB_BLOCK'
| | |-FieldDecl 0x1ccd62ed808 <line:181:9, col:19> col:19 sum 'OCB_BLOCK':'OCB_BLOCK'
| | |-FieldDecl 0x1ccd62ed870 <line:182:9, col:19> col:19 offset 'OCB_BLOCK':'OCB_BLOCK'
| | `-FieldDecl 0x1ccd62ed8d8 <line:183:9, col:19> col:19 checksum 'OCB_BLOCK':'OCB_BLOCK'
| `-FieldDecl 0x1ccd62ed988 <line:177:5, line:184:7> col:7 sess 'struct (anonymous struct at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:177:5)':'struct ocb128_context::(anonymous at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:177:5)'
|-TypedefDecl 0x1ccd62eda48 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x1ccd487f6b0 'unsigned long long'
|-TypedefDecl 0x1ccd62edab8 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x1ccd48801e0 'char *'
|   `-BuiltinType 0x1ccd487f570 'char'
|-FunctionDecl 0x1ccd63eea70 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1ccd63eeb10 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x1ccd63eeb80 <col:21> Implicit
|-FunctionDecl 0x1ccd63eebd8 prev 0x1ccd63eea70 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1ccd63ee908 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x1ccd63eecc8 <col:21> Inherited Implicit
|-TypedefDecl 0x1ccd63eed08 prev 0x1ccd4880188 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x1ccd487f6b0 'unsigned long long'
|-TypedefDecl 0x1ccd63eedb0 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x1ccd63eed80 'size_t' sugar
|   |-Typedef 0x1ccd63eed08 'size_t'
|   `-BuiltinType 0x1ccd487f6b0 'unsigned long long'
|-TypedefDecl 0x1ccd63eee20 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x1ccd487f610 'long long'
|-TypedefDecl 0x1ccd63eee90 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x1ccd487f610 'long long'
|-TypedefDecl 0x1ccd63eef00 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x1ccd487f650 'unsigned short'
|-TypedefDecl 0x1ccd63eef70 <line:541:1, col:24> col:24 wint_t 'unsigned short'
| `-BuiltinType 0x1ccd487f650 'unsigned short'
|-TypedefDecl 0x1ccd63eefe0 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x1ccd487f650 'unsigned short'
|-TypedefDecl 0x1ccd63ef050 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x1ccd487f5d0 'int'
|-TypedefDecl 0x1ccd63ef0c0 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x1ccd487f5f0 'long'
|-TypedefDecl 0x1ccd63ef130 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x1ccd487f610 'long long'
|-TypedefDecl 0x1ccd63ef1c0 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x1ccd63ef190 '__time64_t' sugar
|   |-Typedef 0x1ccd63ef130 '__time64_t'
|   `-BuiltinType 0x1ccd487f610 'long long'
|-FunctionDecl 0x1ccd63ef338 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x1ccd63ef558 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x1ccd63f5b80 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x1ccd63ef698 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x1ccd63ef710 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x1ccd63ef788 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x1ccd63ef808 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x1ccd63f5920 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x1ccd63f5c60 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x1ccd63f5d20 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x1ccd63f5e90 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x1ccd63f5e40 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x1ccd63f5de0 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x1ccd63f5d00 'struct threadlocaleinfostruct'
|       `-Record 0x1ccd64039d0 'threadlocaleinfostruct'
|-TypedefDecl 0x1ccd63f5fa0 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x1ccd63f5f50 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x1ccd63f5ef0 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x1ccd63f5dc0 'struct threadmbcinfostruct'
|       `-Record 0x1ccd63f5d20 'threadmbcinfostruct'
|-RecordDecl 0x1ccd63f5ff8 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x1ccd63f60b0 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x1ccd63f6170 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1ccd63f6200 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x1ccd63f6290 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x1ccd63f6348 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x1ccd63f62f0 'struct localeinfo_struct' sugar
|   `-RecordType 0x1ccd63f6150 'struct localeinfo_struct'
|     `-Record 0x1ccd63f60b0 'localeinfo_struct'
|-TypedefDecl 0x1ccd63f6420 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x1ccd63f63d0 'struct localeinfo_struct *'
|   `-ElaboratedType 0x1ccd63f62f0 'struct localeinfo_struct' sugar
|     `-RecordType 0x1ccd63f6150 'struct localeinfo_struct'
|       `-Record 0x1ccd63f60b0 'localeinfo_struct'
|-RecordDecl 0x1ccd63f6498 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x1ccd63f6550 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1ccd63f65c8 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x1ccd63f6688 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x1ccd63f6720 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x1ccd63f6790 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x1ccd63f6848 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x1ccd63f67f0 'struct localerefcount' sugar
|   `-RecordType 0x1ccd63f6530 'struct localerefcount'
|     `-Record 0x1ccd63f6498 'localerefcount'
|-RecordDecl 0x1ccd64039d0 prev 0x1ccd63f5c60 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x1ccd6403a50 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1ccd6403ac8 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x1ccd6403b38 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x1ccd6403ba8 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x1ccd6403c18 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x1ccd6403dd8 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x1ccd6403e48 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x1ccd6403eb8 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x1ccd6403f28 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x1ccd6403f98 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x1ccd6404008 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x1ccd6404060 parent 0x1ccd487f4d8 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x1ccd64041f0 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x1ccd6404260 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x1ccd64042d0 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x1ccd6404340 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x1ccd64043b0 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x1ccd6404420 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x1ccd6404530 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x1ccd6404668 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x1ccd6404718 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x1ccd64046c0 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x1ccd63f5d00 'struct threadlocaleinfostruct'
|     `-Record 0x1ccd64039d0 'threadlocaleinfostruct'
|-FunctionDecl 0x1ccd63fcaf0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:47:9, col:142> col:25 _memccpy 'void *(void *, const void *, int, size_t) __attribute__((cdecl))':'void *(void *, const void *, int, size_t)'
| |-ParmVarDecl 0x1ccd64047a0 <col:69, col:76> col:76 _Dst 'void *'
| |-ParmVarDecl 0x1ccd6404850 <col:87, col:100> col:100 _Src 'const void *'
| |-ParmVarDecl 0x1ccd64048d0 <col:111, col:115> col:115 _Val 'int'
| `-ParmVarDecl 0x1ccd6404948 <col:126, col:133> col:133 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1ccd63fceb8 <line:48:54> col:54 implicit memchr 'void *(const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1ccd63fcf58 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1ccd63fcfc0 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1ccd63fd028 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1ccd63fd0a8 prev 0x1ccd63fceb8 <col:38, col:150> col:54 memchr 'void *(const void *, int, unsigned long long)'
| |-ParmVarDecl 0x1ccd63fcbe0 <col:94, col:107> col:107 _Buf 'const void *'
| |-ParmVarDecl 0x1ccd63fcc60 <col:119, col:123> col:123 _Val 'int'
| `-ParmVarDecl 0x1ccd63fccd8 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1ccd63fd468 <line:49:24, col:162> col:40 _memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x1ccd63fd190 <col:77, col:90> col:90 _Buf1 'const void *'
| |-ParmVarDecl 0x1ccd63fd210 <col:125, col:138> col:138 _Buf2 'const void *'
| `-ParmVarDecl 0x1ccd63fd288 <col:150, col:157> col:157 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1ccd64049e0 <line:50:24, col:192> col:40 _memicmp_l 'int (const void *, const void *, size_t, _locale_t) __attribute__((cdecl))':'int (const void *, const void *, size_t, _locale_t)'
| |-ParmVarDecl 0x1ccd63fd550 <col:79, col:92> col:92 _Buf1 'const void *'
| |-ParmVarDecl 0x1ccd63fd5d0 <col:127, col:140> col:140 _Buf2 'const void *'
| |-ParmVarDecl 0x1ccd63fd648 <col:152, col:159> col:159 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ccd63fd6e0 <col:175, col:185> col:185 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ccd6404ce8 <line:51:32> col:32 implicit memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1ccd6404d88 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1ccd6404df0 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1ccd6404e58 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1ccd6404ed8 prev 0x1ccd6404ce8 <col:16, col:144> col:32 memcmp 'int (const void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x1ccd6404ad0 <col:63, col:76> col:76 _Buf1 'const void *'
| |-ParmVarDecl 0x1ccd6404b50 <col:107, col:120> col:120 _Buf2 'const void *'
| `-ParmVarDecl 0x1ccd6404bc8 <col:132, col:139> col:139 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1ccd6405298 <line:55:17> col:17 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1ccd6405338 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1ccd64053a0 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1ccd6405408 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1ccd6405488 prev 0x1ccd6405298 <col:1, col:127> col:17 used memcpy 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x1ccd6404fc0 <col:54, col:61> col:61 _Dst 'void *'
| |-ParmVarDecl 0x1ccd6405040 <col:91, col:104> col:104 _Src 'const void *'
| `-ParmVarDecl 0x1ccd64050b8 <col:115, col:122> col:122 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1ccd6405928 <line:57:9, col:191> col:26 memcpy_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x1ccd6405598 <col:82, col:89> col:89 _Dst 'void *'
| |-ParmVarDecl 0x1ccd6405630 <col:100, col:108> col:108 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1ccd64056b0 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x1ccd6405728 <col:174, col:182> col:182 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1ccd63fdc98 <line:94:25> col:25 implicit memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1ccd63fdd38 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1ccd63fdda0 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1ccd63fde08 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1ccd63fde88 prev 0x1ccd63fdc98 <col:9, col:107> col:25 memset 'void *(void *, int, unsigned long long)'
| |-ParmVarDecl 0x1ccd63fd9c0 <col:62, col:69> col:69 _Dst 'void *'
| |-ParmVarDecl 0x1ccd63fda40 <col:80, col:84> col:84 _Val 'int'
| `-ParmVarDecl 0x1ccd63fdab8 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1ccd63fe308 <line:98:57> col:57 implicit memccpy 'void *(void *, const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1ccd63fe3a8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1ccd63fe410 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1ccd63fe478 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1ccd63fe4e0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1ccd63fe568 prev 0x1ccd63fe308 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:98:187> col:57 memccpy 'void *(void *, const void *, int, unsigned long long)'
| |-ParmVarDecl 0x1ccd63fe050 <col:95, col:102> col:102 _Dst 'void *'
| |-ParmVarDecl 0x1ccd63fe0d0 <col:136, col:149> col:149 _Src 'const void *'
| |-ParmVarDecl 0x1ccd63fe150 <col:160, col:164> col:164 _Val 'int'
| |-ParmVarDecl 0x1ccd63fe1c8 <col:175, col:182> col:182 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1ccd63fe628 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memccpy. See online help for details." ""
|-FunctionDecl 0x1ccd63fea20 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:99:190> col:69 memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x1ccd63fe7f0 <col:105, col:118> col:118 _Buf1 'const void *'
| |-ParmVarDecl 0x1ccd63fe870 <col:153, col:166> col:166 _Buf2 'const void *'
| |-ParmVarDecl 0x1ccd63fe8e8 <col:178, col:185> col:185 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1ccd63fead8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memicmp. See online help for details." ""
|-FunctionDecl 0x1ccd63feed0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:105:40, col:144> col:56 _strset_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x1ccd63fec00 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x1ccd63fec78 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ccd63fecf8 <col:134, col:138> col:138 _Value 'int'
|-FunctionDecl 0x1ccd63ff2a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:107:88 _strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x1ccd63ff0b0 <col:108, col:114> col:114 _Dest 'char *'
| |-ParmVarDecl 0x1ccd63ff130 <col:126, col:131> col:131 _Value 'int'
| `-DeprecatedAttr 0x1ccd63ff350 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ccd63ff760 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:109:40, col:158> col:56 strcpy_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x1ccd63ff498 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x1ccd63ff510 <col:112, col:120> col:120 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1ccd63ff590 <col:141, col:154> col:154 _Src 'const char *'
|-FunctionDecl 0x1ccd63ffb80 <line:112:88> col:88 implicit strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1ccd63ffc20 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x1ccd63ffc88 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1ccd63ffd00 prev 0x1ccd63ffb80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:112:88 strcpy 'char *(char *, const char *)'
| |-ParmVarDecl 0x1ccd63ff990 <col:142, col:148> col:148 _Dest 'char *'
| |-ParmVarDecl 0x1ccd63ffa10 <col:162, col:176> col:176 _Source 'const char *'
| `-DeprecatedAttr 0x1ccd63ffdb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ccd6400108 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:114:40, col:161> col:56 strcat_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x1ccd63ffef8 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x1ccd63fff70 <col:115, col:123> col:123 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1ccd63ffff0 <col:144, col:157> col:157 _Src 'const char *'
|-FunctionDecl 0x1ccd6400430 <line:118:88> col:88 implicit strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1ccd64004d0 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x1ccd6400538 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1ccd64005b0 prev 0x1ccd6400430 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:118:88 strcat 'char *(char *, const char *)'
| |-ParmVarDecl 0x1ccd64002b0 <col:170, col:176> col:176 _Dest 'char *'
| |-ParmVarDecl 0x1ccd6400330 <col:190, col:204> col:204 _Source 'const char *'
| `-DeprecatedAttr 0x1ccd6400660 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ccd6406a00 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:120:32> col:32 implicit strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x1ccd6406aa0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1ccd6406b08 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1ccd6406b80 prev 0x1ccd6406a00 <col:16, col:91> col:32 strcmp 'int (const char *, const char *)'
| |-ParmVarDecl 0x1ccd64007a8 <col:46, col:59> col:59 _Str1 'const char *'
| `-ParmVarDecl 0x1ccd6400828 <col:73, col:86> col:86 _Str2 'const char *'
|-FunctionDecl 0x1ccd6406dd0 <line:121:32> col:32 implicit strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x1ccd6406e70 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1ccd6406ee0 prev 0x1ccd6406dd0 <col:16, col:63> col:32 strlen 'unsigned long long (const char *)'
| `-ParmVarDecl 0x1ccd6406c60 <col:46, col:59> col:59 _Str 'const char *'
|-FunctionDecl 0x1ccd64071d8 <line:125:1, col:92> col:17 used strnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x1ccd6406fb8 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x1ccd6407030 <col:76, col:83> col:83 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1ccd6407428 <line:127:16, line:133:1> line:130:19 strnlen_s 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' static inline
| |-ParmVarDecl 0x1ccd64072b8 <col:56, col:69> col:69 used _Str 'const char *'
| |-ParmVarDecl 0x1ccd6407330 <col:80, col:87> col:87 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x1ccd6407758 <line:131:1, line:133:1>
|   `-ReturnStmt 0x1ccd6407748 <line:132:5, col:51>
|     `-ConditionalOperator 0x1ccd6407718 <col:12, col:51> 'unsigned long long'
|       |-ParenExpr 0x1ccd6407588 <col:12, col:20> 'int'
|       | `-BinaryOperator 0x1ccd6407568 <col:13, col:19> 'int' '=='
|       |   |-ImplicitCastExpr 0x1ccd6407538 <col:13> 'const char *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x1ccd64074f0 <col:13> 'const char *' lvalue ParmVar 0x1ccd64072b8 '_Str' 'const char *'
|       |   `-ImplicitCastExpr 0x1ccd6407550 <col:19> 'const char *' <NullToPointer>
|       |     `-IntegerLiteral 0x1ccd6407510 <col:19> 'int' 0
|       |-ImplicitCastExpr 0x1ccd6407700 <col:24> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x1ccd64075a8 <col:24> 'int' 0
|       `-CallExpr 0x1ccd64076a0 <col:28, col:51> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x1ccd6407688 <col:28> 'size_t (*)(const char *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x1ccd64075d0 <col:28> 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' Function 0x1ccd64071d8 'strnlen' 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
|         |-ImplicitCastExpr 0x1ccd64076d0 <col:36> 'const char *' <LValueToRValue>
|         | `-DeclRefExpr 0x1ccd64075f0 <col:36> 'const char *' lvalue ParmVar 0x1ccd64072b8 '_Str' 'const char *'
|         `-ImplicitCastExpr 0x1ccd64076e8 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x1ccd6407610 <col:42> 'size_t':'unsigned long long' lvalue ParmVar 0x1ccd6407330 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x1ccd6408a68 <line:136:28, col:209> col:44 memmove_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x1ccd6407788 <col:100, col:107> col:107 _Dst 'void *'
| |-ParmVarDecl 0x1ccd6407800 <col:118, col:126> col:126 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1ccd6407880 <col:168, col:181> col:181 _Src 'const void *'
| `-ParmVarDecl 0x1ccd64078f8 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1ccd6408d70 <line:139:67> col:67 implicit memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1ccd6408e10 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1ccd6408e78 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1ccd6408ee0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1ccd6408f60 prev 0x1ccd6408d70 <col:51, col:186> col:67 memmove 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x1ccd6408b58 <col:109, col:116> col:116 _Dst 'void *'
| |-ParmVarDecl 0x1ccd6408bd8 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x1ccd6408c50 <col:174, col:181> col:181 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1ccd6409198 <line:146:24, col:76> col:40 _strdup 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| `-ParmVarDecl 0x1ccd6409048 <col:59, col:72> col:72 _Src 'const char *'
|-FunctionDecl 0x1ccd6409460 <line:152:54> col:54 implicit strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x1ccd6409500 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1ccd6409568 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1ccd64095e0 prev 0x1ccd6409460 <col:38, col:100> col:54 strchr 'char *(const char *, int)'
| |-ParmVarDecl 0x1ccd6409270 <col:68, col:81> col:81 _Str 'const char *'
| `-ParmVarDecl 0x1ccd64092f0 <col:92, col:96> col:96 _Val 'int'
|-FunctionDecl 0x1ccd6409840 <line:153:24, col:103> col:40 _stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1ccd64096c0 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x1ccd6409740 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x1ccd6407a90 <line:154:24, col:103> col:40 _strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1ccd6409920 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x1ccd64099a0 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x1ccd6407e48 <line:155:24, col:133> col:40 _stricmp_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x1ccd6407b70 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x1ccd6407bf0 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x1ccd6407c68 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ccd64080b0 <line:156:24, col:103> col:40 strcoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1ccd6407f30 <col:56, col:69> col:69 _Str1 'const char *'
| `-ParmVarDecl 0x1ccd6407fb0 <col:84, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x1ccd64083a8 <line:157:24, col:133> col:40 _strcoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x1ccd6408190 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x1ccd6408210 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x1ccd6408288 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ccd6408610 <line:158:24, col:104> col:40 _stricoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1ccd6408490 <col:58, col:71> col:71 _Str1 'const char *'
| `-ParmVarDecl 0x1ccd6408510 <col:86, col:99> col:99 _Str2 'const char *'
|-FunctionDecl 0x1ccd6408908 <line:159:24, col:134> col:40 _stricoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x1ccd64086f0 <col:60, col:73> col:73 _Str1 'const char *'
| |-ParmVarDecl 0x1ccd6408770 <col:88, col:101> col:101 _Str2 'const char *'
| `-ParmVarDecl 0x1ccd64087e8 <col:117, col:127> col:127 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ccd63c1578 <line:160:24, col:167> col:40 _strncoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1ccd63c12a0 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1ccd63c1320 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x1ccd63c1398 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1ccd63c19e0 <line:161:24, col:195> col:40 _strncoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1ccd63c1660 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1ccd63c16e0 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x1ccd63c1758 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ccd63c17d0 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ccd63c1ce8 <line:162:24, col:167> col:40 _strnicoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1ccd63c1ad0 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1ccd63c1b50 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x1ccd63c1bc8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1ccd63c2080 <line:163:24, col:196> col:40 _strnicoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1ccd63c1dd0 <col:80, col:93> col:93 _Str1 'const char *'
| |-ParmVarDecl 0x1ccd63c1e50 <col:127, col:140> col:140 _Str2 'const char *'
| |-ParmVarDecl 0x1ccd63c1ec8 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ccd63c1f40 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ccd6462068 <line:164:40> col:40 implicit strcspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x1ccd6462108 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1ccd6462170 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1ccd64621e8 prev 0x1ccd6462068 <col:24, col:104> col:40 strcspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x1ccd63c2170 <col:56, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x1ccd63c21f0 <col:83, col:96> col:96 _Control 'const char *'
|-FunctionDecl 0x1ccd64624a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:165:118> col:77 _strerror 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x1ccd64623c0 <col:98, col:111> col:111 _ErrMsg 'const char *'
| `-DeprecatedAttr 0x1ccd6462548 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ccd6462920 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:166:28, col:155> col:44 _strerror_s 'errno_t (char *, size_t, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *)'
| |-ParmVarDecl 0x1ccd6462690 <col:85, col:92> col:92 _Buf 'char *'
| |-ParmVarDecl 0x1ccd6462708 <col:103, col:110> col:110 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ccd6462788 <col:135, col:148> col:148 _ErrMsg 'const char *'
|-FunctionDecl 0x1ccd6462c38 <line:168:76> col:76 implicit strerror 'char *(int)' extern
| `-ParmVarDecl 0x1ccd6462cd8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1ccd6462d48 prev 0x1ccd6462c38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:168:93> col:76 strerror 'char *(int)'
| |-ParmVarDecl 0x1ccd6462b00 <col:90> col:93 'int'
| `-DeprecatedAttr 0x1ccd6462df0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ccd6463180 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:170:28, col:139> col:44 strerror_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x1ccd6462f70 <col:84, col:91> col:91 _Buf 'char *'
| |-ParmVarDecl 0x1ccd6462fe8 <col:102, col:109> col:109 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ccd6463068 <col:128, col:132> col:132 _ErrNum 'int'
|-FunctionDecl 0x1ccd6463488 <line:173:28, col:109> col:44 _strlwr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x1ccd6463268 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x1ccd64632e0 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1ccd6463778 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:175:79 _strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1ccd6463628 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x1ccd6463820 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ccd6463c30 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:176:28, col:139> col:44 _strlwr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1ccd6463968 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x1ccd64639e0 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ccd6463a58 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ccd6464020 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:178:82 _strlwr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x1ccd6463dd8 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x1ccd6463e50 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ccd64640d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ccd6464588 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:180:40, col:206> col:56 strncat_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x1ccd6464218 <col:98, col:105> col:105 _Dst 'char *'
| |-ParmVarDecl 0x1ccd6464290 <col:116, col:124> col:124 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1ccd6464310 <col:165, col:178> col:178 _Src 'const char *'
| `-ParmVarDecl 0x1ccd6464388 <col:189, col:197> col:197 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1ccd6464a08 <line:186:83> col:83 implicit strncat 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1ccd6464aa8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1ccd6464b10 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1ccd6464b78 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1ccd6464bf8 prev 0x1ccd6464a08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:186:83 strncat 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1ccd6464738 <col:161, col:167> col:167 _Dest 'char *'
| |-ParmVarDecl 0x1ccd64647b8 <col:198, col:212> col:212 _Source 'const char *'
| |-ParmVarDecl 0x1ccd6464830 <col:226, col:234> col:234 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1ccd6464cb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ccd6466040 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:188:40> col:40 implicit strncmp 'int (const char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1ccd64660e0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1ccd6466148 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1ccd64661b0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1ccd6466230 prev 0x1ccd6466040 <col:24, col:163> col:40 strncmp 'int (const char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1ccd6464df8 <col:75, col:88> col:88 _Str1 'const char *'
| |-ParmVarDecl 0x1ccd6464e78 <col:122, col:135> col:135 _Str2 'const char *'
| `-ParmVarDecl 0x1ccd6464ef0 <col:147, col:154> col:154 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1ccd6466530 <line:189:24, col:165> col:40 _strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1ccd6466318 <col:77, col:90> col:90 _Str1 'const char *'
| |-ParmVarDecl 0x1ccd6466398 <col:124, col:137> col:137 _Str2 'const char *'
| `-ParmVarDecl 0x1ccd6466410 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1ccd64668c8 <line:190:24, col:195> col:40 _strnicmp_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1ccd6466618 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1ccd6466698 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x1ccd6466710 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ccd6466788 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ccd6466c60 <line:192:40, col:203> col:56 strncpy_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x1ccd64669b8 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x1ccd6466a30 <col:113, col:121> col:121 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1ccd6466ab0 <col:162, col:175> col:175 _Src 'const char *'
| `-ParmVarDecl 0x1ccd6466b28 <col:186, col:194> col:194 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1ccd645ffc8 <line:195:83> col:83 implicit strncpy 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1ccd6460068 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1ccd64600d0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1ccd6460138 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1ccd64601b8 prev 0x1ccd645ffc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:195:83 strncpy 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1ccd6466e10 <col:167, col:173> col:173 _Dest 'char *'
| |-ParmVarDecl 0x1ccd6466e90 <col:204, col:218> col:218 _Source 'const char *'
| |-ParmVarDecl 0x1ccd6466f08 <col:232, col:240> col:240 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1ccd6460270 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ccd6460728 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:196:40, col:174> col:56 _strnset_s 'errno_t (char *, size_t, int, size_t) __attribute__((cdecl))':'errno_t (char *, size_t, int, size_t)'
| |-ParmVarDecl 0x1ccd64603b8 <col:99, col:106> col:106 _Str 'char *'
| |-ParmVarDecl 0x1ccd6460430 <col:117, col:124> col:124 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ccd64604b0 <col:143, col:147> col:147 _Val 'int'
| `-ParmVarDecl 0x1ccd6460528 <col:158, col:165> col:165 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1ccd6460ba8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:198:83 _strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x1ccd64608d8 <col:163, col:169> col:169 _Dest 'char *'
| |-ParmVarDecl 0x1ccd6460958 <col:181, col:186> col:186 _Val 'int'
| |-ParmVarDecl 0x1ccd64609d0 <col:197, col:205> col:205 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1ccd6460c60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ccd6465000 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:199:54> col:54 implicit strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x1ccd64650a0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1ccd6465108 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1ccd6465180 prev 0x1ccd6465000 <col:38, col:116> col:54 strpbrk 'char *(const char *, const char *)'
| |-ParmVarDecl 0x1ccd6460da8 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x1ccd6460e28 <col:95, col:108> col:108 _Control 'const char *'
|-FunctionDecl 0x1ccd64653e0 <line:200:54> col:54 implicit strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x1ccd6465480 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1ccd64654e8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1ccd6465560 prev 0x1ccd64653e0 <col:38, col:100> col:54 strrchr 'char *(const char *, int)'
| |-ParmVarDecl 0x1ccd6465260 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x1ccd64652e0 <col:93, col:97> col:97 _Ch 'int'
|-FunctionDecl 0x1ccd6465720 <line:201:9, col:54> col:25 _strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| `-ParmVarDecl 0x1ccd6465640 <col:43, col:50> col:50 _Str 'char *'
|-FunctionDecl 0x1ccd6465970 <line:202:40> col:40 implicit strspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x1ccd6465a10 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1ccd6465a78 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1ccd6465af0 prev 0x1ccd6465970 <col:24, col:101> col:40 strspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x1ccd64657f8 <col:54, col:67> col:67 _Str 'const char *'
| `-ParmVarDecl 0x1ccd6465878 <col:80, col:93> col:93 _Control 'const char *'
|-FunctionDecl 0x1ccd6465d50 <line:203:70> col:70 implicit strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x1ccd6465df0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1ccd6465e58 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1ccd6465ed0 prev 0x1ccd6465d50 <col:54, col:130> col:70 strstr 'char *(const char *, const char *)'
| |-ParmVarDecl 0x1ccd6465bd0 <col:84, col:97> col:97 _Str 'const char *'
| `-ParmVarDecl 0x1ccd6465c50 <col:110, col:123> col:123 _SubStr 'const char *'
|-FunctionDecl 0x1ccd645f1a0 <line:204:74> col:74 implicit strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1ccd645f240 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x1ccd645f2a8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1ccd645f320 prev 0x1ccd645f1a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:204:134> col:74 strtok 'char *(char *, const char *)'
| |-ParmVarDecl 0x1ccd645f020 <col:95, col:102> col:102 _Str 'char *'
| |-ParmVarDecl 0x1ccd645f0a0 <col:115, col:128> col:128 _Delim 'const char *'
| `-DeprecatedAttr 0x1ccd645f3d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ccd645f7b8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:206:36, col:162> col:52 strtok_s 'char *(char *, const char *, char **) __attribute__((cdecl))':'char *(char *, const char *, char **)'
| |-ParmVarDecl 0x1ccd645f518 <col:75, col:82> col:82 _Str 'char *'
| |-ParmVarDecl 0x1ccd645f598 <col:95, col:108> col:108 _Delim 'const char *'
| `-ParmVarDecl 0x1ccd645f618 <col:146, col:154> col:154 _Context 'char **'
|-FunctionDecl 0x1ccd645fa10 <line:208:28, col:109> col:44 _strupr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x1ccd645f8a0 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x1ccd645f918 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1ccd645fc90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:210:79 _strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1ccd645fbb0 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x1ccd645fd38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ccd6467140 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:211:28, col:130> col:44 _strupr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1ccd645fe80 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x1ccd6466fb0 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ccd6467028 <col:113, col:123> col:123 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ccd6467460 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:213:82 _strupr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x1ccd64672e8 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x1ccd6467360 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ccd6467510 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ccd6467920 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:214:44> col:44 implicit strxfrm 'unsigned long long (char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1ccd64679c0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1ccd6467a28 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1ccd6467a90 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1ccd6467b10 prev 0x1ccd6467920 <col:28, col:155> col:44 strxfrm 'unsigned long long (char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1ccd6467658 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x1ccd64676d8 <col:115, col:128> col:128 _Src 'const char *'
| `-ParmVarDecl 0x1ccd6467750 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1ccd6467fc0 <line:215:28, col:185> col:44 _strxfrm_l 'size_t (char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1ccd6467bf8 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x1ccd6467c78 <col:117, col:130> col:130 _Src 'const char *'
| |-ParmVarDecl 0x1ccd6467cf0 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ccd6467d68 <col:168, col:178> col:178 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ccd6468270 <line:245:71> col:71 implicit strdup 'char *(const char *)' extern
| `-ParmVarDecl 0x1ccd6468310 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1ccd6468380 prev 0x1ccd6468270 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:245:106> col:71 strdup 'char *(const char *)'
| |-ParmVarDecl 0x1ccd6468190 <col:89, col:102> col:102 _Src 'const char *'
| `-DeprecatedAttr 0x1ccd6468428 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strdup. See online help for details." ""
|-FunctionDecl 0x1ccd6468770 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:252:129> col:69 strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1ccd64685f0 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x1ccd6468670 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x1ccd6468820 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strcmpi. See online help for details." ""
|-FunctionDecl 0x1ccd6468b68 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:253:129> col:69 stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1ccd64689e8 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x1ccd6468a68 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x1ccd6468c18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details." ""
|-FunctionDecl 0x1ccd6468ec0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:254:84> col:56 strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1ccd6468de0 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x1ccd6468f68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strlwr. See online help for details." ""
|-FunctionDecl 0x1ccd6461328 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:255:193> col:70 strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1ccd6461110 <col:106, col:119> col:119 _Str1 'const char *'
| |-ParmVarDecl 0x1ccd6461190 <col:153, col:166> col:166 _Str 'const char *'
| |-ParmVarDecl 0x1ccd6461208 <col:177, col:184> col:184 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1ccd64613e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnicmp. See online help for details." ""
|-FunctionDecl 0x1ccd64617c0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:256:143> col:57 strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x1ccd64615a8 <col:94, col:101> col:101 _Str 'char *'
| |-ParmVarDecl 0x1ccd6461628 <col:112, col:116> col:116 _Val 'int'
| |-ParmVarDecl 0x1ccd64616a0 <col:127, col:134> col:134 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1ccd6461878 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnset. See online help for details." ""
|-FunctionDecl 0x1ccd6461b20 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:257:84> col:56 strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1ccd6461a40 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x1ccd6461bc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strrev. See online help for details." ""
|-FunctionDecl 0x1ccd646e020 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:258:99> col:56 strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x1ccd6461d90 <col:73, col:80> col:80 _Str 'char *'
| |-ParmVarDecl 0x1ccd6461e10 <col:91, col:95> col:95 _Val 'int'
| `-DeprecatedAttr 0x1ccd646e0d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strset. See online help for details." ""
|-FunctionDecl 0x1ccd646e378 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:259:84> col:56 strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1ccd646e298 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x1ccd646e420 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strupr. See online help for details." ""
|-FunctionDecl 0x1ccd646e6b0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:273:24, col:77> col:42 _wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| `-ParmVarDecl 0x1ccd646e540 <col:57, col:73> col:73 _Str 'const wchar_t *'
|-FunctionDecl 0x1ccd646ea40 <line:280:40, col:167> col:56 wcscat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x1ccd646e780 <col:97, col:107> col:107 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1ccd646e7f8 <col:118, col:126> col:126 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1ccd646e870 <col:147, col:163> col:163 _Src 'const wchar_t *'
|-FunctionDecl 0x1ccd646edf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:284:82 wcscat 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1ccd646ebe0 <col:164, col:173> col:173 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1ccd646ec58 <col:187, col:204> col:204 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x1ccd646eea8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ccd6470258 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:288:41> col:41 implicit wcschr 'unsigned short *(const unsigned short *, unsigned short)' extern
| |-ParmVarDecl 0x1ccd64702f8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x1ccd6470360 <<invalid sloc>> <invalid sloc> 'unsigned short'
|-FunctionDecl 0x1ccd64703d8 prev 0x1ccd6470258 <col:23, col:88> col:41 wcschr 'unsigned short *(const unsigned short *, unsigned short)'
| |-ParmVarDecl 0x1ccd6470040 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1ccd64700b8 <col:77, col:85> col:85 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1ccd64706d0 <line:289:36> col:36 implicit wcscmp 'int (const unsigned short *, const unsigned short *)' extern
| |-ParmVarDecl 0x1ccd6470770 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x1ccd64707d8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x1ccd6470850 prev 0x1ccd64706d0 <col:24, col:101> col:36 wcscmp 'int (const unsigned short *, const unsigned short *)'
| |-ParmVarDecl 0x1ccd64704b0 <col:50, col:66> col:66 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1ccd6470528 <col:80, col:96> col:96 _Str2 'const wchar_t *'
|-FunctionDecl 0x1ccd6470b30 <line:291:40, col:164> col:56 wcscpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x1ccd6470928 <col:94, col:104> col:104 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1ccd64709a0 <col:115, col:123> col:123 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1ccd6470a18 <col:144, col:160> col:160 _Src 'const wchar_t *'
|-FunctionDecl 0x1ccd6470e40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:294:82 wcscpy 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1ccd6470cd0 <col:136, col:145> col:145 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1ccd6470d48 <col:159, col:176> col:176 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x1ccd6470ef0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ccd646a1f8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:295:24, col:107> col:39 wcscspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1ccd6469fe0 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1ccd646a058 <col:83, col:99> col:99 _Control 'const wchar_t *'
|-FunctionDecl 0x1ccd646a440 <line:296:39> col:39 implicit wcslen 'unsigned long long (const unsigned short *)' extern
| `-ParmVarDecl 0x1ccd646a4e0 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x1ccd646a550 prev 0x1ccd646a440 <col:24, col:73> col:39 wcslen 'unsigned long long (const unsigned short *)'
| `-ParmVarDecl 0x1ccd646a2d0 <col:53, col:69> col:69 _Str 'const wchar_t *'
|-FunctionDecl 0x1ccd646a838 <line:300:1, col:94> col:16 used wcsnlen 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
| |-ParmVarDecl 0x1ccd646a620 <col:51, col:67> col:67 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1ccd646a698 <col:78, col:85> col:85 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1ccd646aa80 <line:302:16, line:308:1> line:305:18 wcsnlen_s 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' static inline
| |-ParmVarDecl 0x1ccd646a910 <col:55, col:71> col:71 used _Src 'const wchar_t *'
| |-ParmVarDecl 0x1ccd646a988 <col:82, col:89> col:89 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x1ccd646ae18 <line:306:1, line:308:1>
|   `-ReturnStmt 0x1ccd646ae08 <line:307:5, col:56>
|     `-ConditionalOperator 0x1ccd646add8 <col:12, col:56> 'unsigned long long'
|       |-ParenExpr 0x1ccd646ac40 <col:12, col:25> 'int'
|       | `-BinaryOperator 0x1ccd646ac20 <col:13, line:36:27> 'int' '=='
|       |   |-ImplicitCastExpr 0x1ccd646abf0 <line:307:13> 'const wchar_t *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x1ccd646ab48 <col:13> 'const wchar_t *' lvalue ParmVar 0x1ccd646a910 '_Src' 'const wchar_t *'
|       |   `-ImplicitCastExpr 0x1ccd646ac08 <line:36:17, col:27> 'const wchar_t *' <BitCast>
|       |     `-ParenExpr 0x1ccd646abd0 <col:17, col:27> 'void *'
|       |       `-CStyleCastExpr 0x1ccd646aba8 <col:18, col:26> 'void *' <NullToPointer>
|       |         `-IntegerLiteral 0x1ccd646ab68 <col:26> 'int' 0
|       |-ImplicitCastExpr 0x1ccd646adc0 <line:307:29> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x1ccd646ac60 <col:29> 'int' 0
|       `-CallExpr 0x1ccd646ad60 <col:33, col:56> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x1ccd646ad48 <col:33> 'size_t (*)(const wchar_t *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x1ccd646ac88 <col:33> 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' Function 0x1ccd646a838 'wcsnlen' 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
|         |-ImplicitCastExpr 0x1ccd646ad90 <col:41> 'const wchar_t *' <LValueToRValue>
|         | `-DeclRefExpr 0x1ccd646aca8 <col:41> 'const wchar_t *' lvalue ParmVar 0x1ccd646a910 '_Src' 'const wchar_t *'
|         `-ImplicitCastExpr 0x1ccd646ada8 <col:47> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x1ccd646acc8 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x1ccd646a988 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x1ccd64691d8 <line:311:40, col:212> col:56 wcsncat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x1ccd646ae40 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1ccd646aeb8 <col:119, col:127> col:127 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1ccd646af30 <col:168, col:184> col:184 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1ccd6468fd0 <col:195, col:203> col:203 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1ccd6469640 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:316:86 wcsncat 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1ccd6469380 <col:167, col:176> col:176 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1ccd64693f8 <col:207, col:224> col:224 _Source 'const wchar_t *'
| |-ParmVarDecl 0x1ccd6469470 <col:238, col:246> col:246 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1ccd64696f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ccd6469b08 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:318:36> col:36 implicit wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)' extern
| |-ParmVarDecl 0x1ccd6469ba8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| |-ParmVarDecl 0x1ccd6469c10 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x1ccd6469c78 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1ccd6469cf8 prev 0x1ccd6469b08 <col:24, col:165> col:36 wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)'
| |-ParmVarDecl 0x1ccd6469838 <col:71, col:87> col:87 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1ccd64698b0 <col:121, col:137> col:137 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1ccd6469928 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1ccd646f0e8 <line:320:40, col:209> col:56 wcsncpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x1ccd6469dd8 <col:95, col:105> col:105 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1ccd6469e50 <col:116, col:124> col:124 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1ccd6469ec8 <col:165, col:181> col:181 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1ccd6469f40 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1ccd646f498 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:323:86 wcsncpy 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1ccd646f290 <col:179, col:188> col:188 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1ccd646f308 <col:219, col:236> col:236 _Source 'const wchar_t *'
| |-ParmVarDecl 0x1ccd646f380 <col:250, col:258> col:258 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1ccd646f550 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ccd646f8a8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:324:38, col:124> col:56 wcspbrk 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1ccd646f690 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1ccd646f708 <col:100, col:116> col:116 _Control 'const wchar_t *'
|-FunctionDecl 0x1ccd646faf0 <line:325:38, col:109> col:56 wcsrchr 'wchar_t *(const wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(const wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1ccd646f980 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1ccd646f9f8 <col:98, col:106> col:106 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1ccd646fd38 <line:326:24, col:106> col:39 wcsspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1ccd646fbc8 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1ccd646fc40 <col:82, col:98> col:98 _Control 'const wchar_t *'
|-FunctionDecl 0x1ccd646ff80 <line:329:23, col:107> col:41 wcsstr 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1ccd646fe10 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1ccd646fe88 <col:84, col:100> col:100 _SubStr 'const wchar_t *'
|-FunctionDecl 0x1ccd646c258 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:330:142> col:76 wcstok 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1ccd646c0e8 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x1ccd646c160 <col:120, col:136> col:136 _Delim 'const wchar_t *'
| `-DeprecatedAttr 0x1ccd646c308 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ccd646c770 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:332:36, col:173> col:54 wcstok_s 'wchar_t *(wchar_t *, const wchar_t *, wchar_t **) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x1ccd646c448 <col:77, col:87> col:87 _Str 'wchar_t *'
| |-ParmVarDecl 0x1ccd646c4c0 <col:100, col:116> col:116 _Delim 'const wchar_t *'
| `-ParmVarDecl 0x1ccd646c5a0 <col:154, col:165> col:165 _Context 'wchar_t **'
|-FunctionDecl 0x1ccd646ca90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:334:105> col:79 _wcserror 'wchar_t *(int) __attribute__((cdecl))':'wchar_t *(int)'
| |-ParmVarDecl 0x1ccd646c918 <col:94, col:98> col:98 _ErrNum 'int'
| `-DeprecatedAttr 0x1ccd646cb38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ccd646cf40 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:335:28, col:147> col:44 _wcserror_s 'errno_t (wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, int)'
| |-ParmVarDecl 0x1ccd646cc78 <col:89, col:99> col:99 _Buf 'wchar_t *'
| |-ParmVarDecl 0x1ccd646ccf0 <col:110, col:117> col:117 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ccd646cd70 <col:136, col:140> col:140 _ErrNum 'int'
|-FunctionDecl 0x1ccd646d210 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:337:122> col:80 __wcserror 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x1ccd646d138 <col:102, col:118> col:118 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x1ccd646d2b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ccd646d680 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:338:28, col:165> col:44 __wcserror_s 'errno_t (wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x1ccd646d3f8 <col:90, col:100> col:100 _Buffer 'wchar_t *'
| |-ParmVarDecl 0x1ccd646d470 <col:114, col:121> col:121 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ccd646d4e8 <col:142, col:158> col:158 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x1ccd646d8d8 <line:341:24, col:103> col:36 _wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1ccd646d760 <col:52, col:68> col:68 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1ccd646d7d8 <col:82, col:98> col:98 _Str2 'const wchar_t *'
|-FunctionDecl 0x1ccd646dc78 <line:342:24, col:133> col:36 _wcsicmp_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1ccd646d9b0 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1ccd646da28 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1ccd646daa0 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ccd646df68 <line:343:24, col:167> col:36 _wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1ccd646dd58 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1ccd646ddd0 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1ccd646de48 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1ccd6472410 <line:344:24, col:197> col:36 _wcsnicmp_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1ccd64720a0 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1ccd6472118 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1ccd6472190 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ccd6472208 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ccd6472868 <line:345:40, col:181> col:56 _wcsnset_s 'errno_t (wchar_t *, size_t, wchar_t, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t, size_t)'
| |-ParmVarDecl 0x1ccd64724f8 <col:99, col:109> col:109 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1ccd6472570 <col:120, col:127> col:127 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ccd64725e8 <col:146, col:154> col:154 _Val 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1ccd6472660 <col:165, col:172> col:172 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1ccd6472cd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:347:86 _wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x1ccd6472a10 <col:172, col:181> col:181 _Str 'wchar_t *'
| |-ParmVarDecl 0x1ccd6472a88 <col:187, col:196> col:196 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x1ccd6472b00 <col:207, col:215> col:215 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1ccd6472d88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ccd646aff0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:348:9, col:59> col:27 _wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| `-ParmVarDecl 0x1ccd6472ec8 <col:45, col:55> col:55 _Str 'wchar_t *'
|-FunctionDecl 0x1ccd646b380 <line:349:40, col:159> col:56 _wcsset_s 'errno_t (wchar_t *, size_t, wchar_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t)'
| |-ParmVarDecl 0x1ccd646b0c0 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1ccd646b138 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ccd646b1b0 <col:145, col:153> col:153 _Value 'wchar_t':'unsigned short'
|-FunctionDecl 0x1ccd646b738 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:351:85 _wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1ccd646b520 <col:150, col:159> col:159 _Str 'wchar_t *'
| |-ParmVarDecl 0x1ccd646b598 <col:165, col:174> col:174 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x1ccd646b7e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ccd646bb48 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:353:28, col:126> col:44 _wcslwr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1ccd646b928 <col:86, col:96> col:96 _Str 'wchar_t *'
| `-ParmVarDecl 0x1ccd646b9a0 <col:107, col:114> col:114 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1ccd646bdb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:355:82 _wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1ccd646bce0 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x1ccd646be60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ccd6474340 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:356:28, col:156> col:44 _wcslwr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1ccd6474080 <col:88, col:98> col:98 _Str 'wchar_t *'
| |-ParmVarDecl 0x1ccd64740f8 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ccd6474170 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ccd64746f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:358:85 _wcslwr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1ccd64744e0 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x1ccd6474558 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ccd64747a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ccd6474a58 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:359:28, col:112> col:44 _wcsupr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1ccd64748e8 <col:79, col:89> col:89 _Str 'wchar_t *'
| `-ParmVarDecl 0x1ccd6474960 <col:100, col:107> col:107 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1ccd6474cc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:361:82 _wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1ccd6474bf0 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x1ccd6474d70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ccd64770f0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:362:28, col:142> col:44 _wcsupr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1ccd6474eb0 <col:81, col:91> col:91 _Str 'wchar_t *'
| |-ParmVarDecl 0x1ccd6474f28 <col:102, col:109> col:109 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ccd6474fa0 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ccd6477400 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:364:85 _wcsupr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1ccd6477290 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x1ccd6477308 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ccd64774b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ccd64778b0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:365:28, col:159> col:43 wcsxfrm 'size_t (wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1ccd64775f0 <col:93, col:103> col:103 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1ccd6477668 <col:116, col:132> col:132 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1ccd64776e0 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1ccd6477cf8 <line:366:28, col:189> col:43 _wcsxfrm_l 'size_t (wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1ccd6477990 <col:96, col:106> col:106 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1ccd6477a08 <col:119, col:134> col:134 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1ccd6477a80 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ccd6477af8 <col:172, col:182> col:182 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ccd6477f58 <line:367:24, col:102> col:36 wcscoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1ccd6477de0 <col:51, col:67> col:67 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1ccd6477e58 <col:81, col:97> col:97 _Str2 'const wchar_t *'
|-FunctionDecl 0x1ccd6475228 <line:368:24, col:133> col:36 _wcscoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1ccd6478030 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1ccd6475090 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1ccd6475108 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ccd6475480 <line:369:24, col:104> col:36 _wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1ccd6475308 <col:53, col:69> col:69 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1ccd6475380 <col:83, col:99> col:99 _Str2 'const wchar_t *'
|-FunctionDecl 0x1ccd6475768 <line:370:24, col:133> col:36 _wcsicoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1ccd6475558 <col:55, col:71> col:71 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1ccd64755d0 <col:85, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1ccd6475648 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ccd6475a58 <line:371:24, col:167> col:36 _wcsncoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1ccd6475848 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1ccd64758c0 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1ccd6475938 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1ccd6475de0 <line:372:24, col:197> col:36 _wcsncoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1ccd6475b38 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1ccd6475bb0 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1ccd6475c28 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ccd6475ca0 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ccd64760e8 <line:373:24, col:168> col:36 _wcsnicoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1ccd6475ec8 <col:74, col:90> col:90 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1ccd6475f40 <col:124, col:140> col:140 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1ccd6475fb8 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1ccd6476470 <line:374:24, col:198> col:36 _wcsnicoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1ccd64761c8 <col:76, col:92> col:92 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1ccd6476240 <col:126, col:142> col:142 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1ccd64762b8 <col:154, col:161> col:161 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ccd6476330 <col:181, col:191> col:191 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ccd64766d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:403:108> col:74 wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x1ccd64765f8 <col:88, col:104> col:104 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x1ccd6476778 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsdup. See online help for details." ""
|-FunctionDecl 0x1ccd6476ab0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:413:135> col:69 wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1ccd6476938 <col:84, col:100> col:100 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1ccd64769b0 <col:114, col:130> col:130 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x1ccd6476b60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicmp. See online help for details." ""
|-FunctionDecl 0x1ccd6476f30 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:414:200> col:70 wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1ccd6476d20 <col:106, col:122> col:122 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1ccd6476d98 <col:156, col:172> col:172 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1ccd6476e10 <col:184, col:191> col:191 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1ccd6476fe8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnicmp. See online help for details." ""
|-FunctionDecl 0x1ccd6479450 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:415:153> col:60 wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x1ccd6479248 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x1ccd64792c0 <col:118, col:126> col:126 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x1ccd6479338 <col:137, col:144> col:144 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1ccd6479508 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnset. See online help for details." ""
|-FunctionDecl 0x1ccd64797a0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:416:90> col:59 wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1ccd64796c8 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1ccd6479848 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsrev. See online help for details." ""
|-FunctionDecl 0x1ccd6479b78 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:417:104> col:59 wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1ccd6479a08 <col:76, col:86> col:86 _Str 'wchar_t *'
| |-ParmVarDecl 0x1ccd6479a80 <col:92, col:100> col:100 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x1ccd6479c28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsset. See online help for details." ""
|-FunctionDecl 0x1ccd6479ec0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:418:90> col:59 wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1ccd6479de8 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1ccd6479f68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcslwr. See online help for details." ""
|-FunctionDecl 0x1ccd647a268 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:419:90> col:59 wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1ccd647a190 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1ccd647a310 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsupr. See online help for details." ""
|-FunctionDecl 0x1ccd647a648 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:420:137> col:70 wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1ccd647a4d0 <col:86, col:102> col:102 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1ccd647a548 <col:116, col:132> col:132 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x1ccd647a6f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicoll. See online help for details." ""
|-FunctionDecl 0x1ccd647adf8 <.//openssl//file_jk/before\crypto\modes\cfb128.c:19:1, line:131:1> line:19:6 invalid CRYPTO_cfb128_encrypt 'void (const unsigned char *, unsigned char *, size_t, const void *, unsigned char *, int *, int, int)'
| |-ParmVarDecl 0x1ccd647a820 <col:28, col:49> col:49 used in 'const unsigned char *'
| |-ParmVarDecl 0x1ccd647a8d0 <col:53, col:68> col:68 used out 'unsigned char *'
| |-ParmVarDecl 0x1ccd647a948 <line:20:28, col:35> col:35 used len 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ccd647a9c8 <col:40, col:52> col:52 used key 'const void *'
| |-ParmVarDecl 0x1ccd647aad0 <line:21:28, col:49> col:42 used ivec 'unsigned char *':'unsigned char *'
| |-ParmVarDecl 0x1ccd647ab50 <col:52, col:57> col:57 used num 'int *'
| |-ParmVarDecl 0x1ccd647abd0 <line:22:28, col:32> col:32 used enc 'int'
| |-ParmVarDecl 0x1ccd647ac50 <col:37, col:48> col:48 invalid block 'int'
| `-CompoundStmt 0x1ccd647df10 <line:23:1, line:131:1>
|   |-DeclStmt 0x1ccd647af70 <line:24:5, col:19>
|   | `-VarDecl 0x1ccd647af08 <col:5, col:18> col:18 used n 'unsigned int'
|   |-DeclStmt 0x1ccd647b040 <line:25:5, col:17>
|   | `-VarDecl 0x1ccd647af98 <col:5, col:16> col:12 used l 'size_t':'unsigned long long' cinit
|   |   `-ImplicitCastExpr 0x1ccd647b028 <col:16> 'size_t':'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x1ccd647b000 <col:16> 'int' 0
|   |-BinaryOperator 0x1ccd64730e8 <line:27:5, col:10> 'unsigned int' '='
|   | |-DeclRefExpr 0x1ccd647b058 <col:5> 'unsigned int' lvalue Var 0x1ccd647af08 'n' 'unsigned int'
|   | `-ImplicitCastExpr 0x1ccd64730d0 <col:9, col:10> 'unsigned int' <IntegralCast>
|   |   `-ImplicitCastExpr 0x1ccd64730b8 <col:9, col:10> 'int' <LValueToRValue>
|   |     `-UnaryOperator 0x1ccd64730a0 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
|   |       `-ImplicitCastExpr 0x1ccd6473088 <col:10> 'int *' <LValueToRValue>
|   |         `-DeclRefExpr 0x1ccd647b0b8 <col:10> 'int *' lvalue ParmVar 0x1ccd647ab50 'num' 'int *'
|   `-IfStmt 0x1ccd647dee8 <line:29:5, line:130:5> has_else
|     |-ImplicitCastExpr 0x1ccd6473140 <line:29:9> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x1ccd6473108 <col:9> 'int' lvalue ParmVar 0x1ccd647abd0 'enc' 'int'
|     |-CompoundStmt 0x1ccd647bbe8 <col:14, line:76:5>
|     | |-IfStmt 0x1ccd647b540 <line:31:9, line:64:9>
|     | | |-BinaryOperator 0x1ccd6473228 <line:31:13, col:36> 'int' '=='
|     | | | |-BinaryOperator 0x1ccd64731c8 <col:13, col:31> 'unsigned long long' '%'
|     | | | | |-ImplicitCastExpr 0x1ccd64731b0 <col:13> 'unsigned long long' <IntegralCast>
|     | | | | | `-IntegerLiteral 0x1ccd6473158 <col:13> 'int' 16
|     | | | | `-UnaryExprOrTypeTraitExpr 0x1ccd6473190 <col:18, col:31> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|     | | | `-ImplicitCastExpr 0x1ccd6473210 <col:36> 'unsigned long long' <IntegralCast>
|     | | |   `-IntegerLiteral 0x1ccd64731e8 <col:36> 'int' 0
|     | | `-CompoundStmt 0x1ccd647b528 <col:39, line:64:9>
|     | |   `-DoStmt 0x1ccd647b508 <line:32:13, line:63:23>
|     | |     |-CompoundStmt 0x1ccd647b4a8 <line:32:16, line:63:13>
|     | |     | |-WhileStmt 0x1ccd64736e0 <line:33:17, line:37:17>
|     | |     | | |-BinaryOperator 0x1ccd64732d0 <line:33:24, col:29> 'int' '&&'
|     | |     | | | |-ImplicitCastExpr 0x1ccd64732a0 <col:24> 'unsigned int' <LValueToRValue>
|     | |     | | | | `-DeclRefExpr 0x1ccd6473248 <col:24> 'unsigned int' lvalue Var 0x1ccd647af08 'n' 'unsigned int'
|     | |     | | | `-ImplicitCastExpr 0x1ccd64732b8 <col:29> 'size_t':'unsigned long long' <LValueToRValue>
|     | |     | | |   `-DeclRefExpr 0x1ccd6473268 <col:29> 'size_t':'unsigned long long' lvalue ParmVar 0x1ccd647a948 'len' 'size_t':'unsigned long long'
|     | |     | | `-CompoundStmt 0x1ccd64736b8 <col:34, line:37:17>
|     | |     | |   |-BinaryOperator 0x1ccd6473508 <line:34:21, col:49> 'unsigned char' '='
|     | |     | |   | |-UnaryOperator 0x1ccd6473360 <col:21, col:28> 'unsigned char' lvalue prefix '*' cannot overflow
|     | |     | |   | | `-ParenExpr 0x1ccd6473340 <col:22, col:28> 'unsigned char *'
|     | |     | |   | |   `-UnaryOperator 0x1ccd6473328 <col:23, col:26> 'unsigned char *' postfix '++'
|     | |     | |   | |     `-DeclRefExpr 0x1ccd64732f0 <col:23> 'unsigned char *' lvalue ParmVar 0x1ccd647a8d0 'out' 'unsigned char *'
|     | |     | |   | `-CompoundAssignOperator 0x1ccd64734d8 <col:32, col:49> 'unsigned char' '^=' ComputeLHSTy='int' ComputeResultTy='int'
|     | |     | |   |   |-ArraySubscriptExpr 0x1ccd6473400 <col:32, col:38> 'unsigned char' lvalue
|     | |     | |   |   | |-ImplicitCastExpr 0x1ccd64733d0 <col:32> 'unsigned char *':'unsigned char *' <LValueToRValue>
|     | |     | |   |   | | `-DeclRefExpr 0x1ccd6473378 <col:32> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x1ccd647aad0 'ivec' 'unsigned char *':'unsigned char *'
|     | |     | |   |   | `-ImplicitCastExpr 0x1ccd64733e8 <col:37> 'unsigned int' <LValueToRValue>
|     | |     | |   |   |   `-DeclRefExpr 0x1ccd64733b0 <col:37> 'unsigned int' lvalue Var 0x1ccd647af08 'n' 'unsigned int'
|     | |     | |   |   `-ImplicitCastExpr 0x1ccd64734c0 <col:43, col:49> 'int' <IntegralCast>
|     | |     | |   |     `-ImplicitCastExpr 0x1ccd64734a8 <col:43, col:49> 'unsigned char' <LValueToRValue>
|     | |     | |   |       `-UnaryOperator 0x1ccd6473490 <col:43, col:49> 'const unsigned char' lvalue prefix '*' cannot overflow
|     | |     | |   |         `-ParenExpr 0x1ccd6473470 <col:44, col:49> 'const unsigned char *'
|     | |     | |   |           `-UnaryOperator 0x1ccd6473458 <col:45, col:47> 'const unsigned char *' postfix '++'
|     | |     | |   |             `-DeclRefExpr 0x1ccd6473420 <col:45> 'const unsigned char *' lvalue ParmVar 0x1ccd647a820 'in' 'const unsigned char *'
|     | |     | |   |-UnaryOperator 0x1ccd6473548 <line:35:21, col:23> 'size_t':'unsigned long long' prefix '--'
|     | |     | |   | `-DeclRefExpr 0x1ccd6473528 <col:23> 'size_t':'unsigned long long' lvalue ParmVar 0x1ccd647a948 'len' 'size_t':'unsigned long long'
|     | |     | |   `-BinaryOperator 0x1ccd6473698 <line:36:21, col:35> 'unsigned int' '='
|     | |     | |     |-DeclRefExpr 0x1ccd6473560 <col:21> 'unsigned int' lvalue Var 0x1ccd647af08 'n' 'unsigned int'
|     | |     | |     `-BinaryOperator 0x1ccd6473678 <col:25, col:35> 'unsigned int' '%'
|     | |     | |       |-ParenExpr 0x1ccd6473618 <col:25, col:31> 'unsigned int'
|     | |     | |       | `-BinaryOperator 0x1ccd64735f8 <col:26, col:30> 'unsigned int' '+'
|     | |     | |       |   |-ImplicitCastExpr 0x1ccd64735c8 <col:26> 'unsigned int' <LValueToRValue>
|     | |     | |       |   | `-DeclRefExpr 0x1ccd6473580 <col:26> 'unsigned int' lvalue Var 0x1ccd647af08 'n' 'unsigned int'
|     | |     | |       |   `-ImplicitCastExpr 0x1ccd64735e0 <col:30> 'unsigned int' <IntegralCast>
|     | |     | |       |     `-IntegerLiteral 0x1ccd64735a0 <col:30> 'int' 1
|     | |     | |       `-ImplicitCastExpr 0x1ccd6473660 <col:35> 'unsigned int' <IntegralCast>
|     | |     | |         `-IntegerLiteral 0x1ccd6473638 <col:35> 'int' 16
|     | |     | |-WhileStmt 0x1ccd6473f98 <line:43:17, line:53:17>
|     | |     | | |-BinaryOperator 0x1ccd6473770 <line:43:24, col:31> 'int' '>='
|     | |     | | | |-ImplicitCastExpr 0x1ccd6473740 <col:24> 'size_t':'unsigned long long' <LValueToRValue>
|     | |     | | | | `-DeclRefExpr 0x1ccd64736f8 <col:24> 'size_t':'unsigned long long' lvalue ParmVar 0x1ccd647a948 'len' 'size_t':'unsigned long long'
|     | |     | | | `-ImplicitCastExpr 0x1ccd6473758 <col:31> 'unsigned long long' <IntegralCast>
|     | |     | | |   `-IntegerLiteral 0x1ccd6473718 <col:31> 'int' 16
|     | |     | | `-CompoundStmt 0x1ccd6473f60 <col:35, line:53:17>
|     | |     | |   |-ForStmt 0x1ccd6473d28 <line:45:21, line:48:21>
|     | |     | |   | |-<<<NULL>>>
|     | |     | |   | |-<<<NULL>>>
|     | |     | |   | |-BinaryOperator 0x1ccd6473880 <line:45:28, col:32> 'int' '<'
|     | |     | |   | | |-ImplicitCastExpr 0x1ccd6473850 <col:28> 'unsigned int' <LValueToRValue>
|     | |     | |   | | | `-DeclRefExpr 0x1ccd6473808 <col:28> 'unsigned int' lvalue Var 0x1ccd647af08 'n' 'unsigned int'
|     | |     | |   | | `-ImplicitCastExpr 0x1ccd6473868 <col:32> 'unsigned int' <IntegralCast>
|     | |     | |   | |   `-IntegerLiteral 0x1ccd6473828 <col:32> 'int' 16
|     | |     | |   | |-CompoundAssignOperator 0x1ccd64738f0 <col:36, col:54> 'unsigned int' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|     | |     | |   | | |-DeclRefExpr 0x1ccd64738a0 <col:36> 'unsigned int' lvalue Var 0x1ccd647af08 'n' 'unsigned int'
|     | |     | |   | | `-UnaryExprOrTypeTraitExpr 0x1ccd64738d0 <col:41, col:54> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|     | |     | |   | `-CompoundStmt 0x1ccd6473d10 <col:57, line:48:21>
|     | |     | |   |   `-BinaryOperator 0x1ccd6473cf0 <line:46:25, line:47:72> 'size_t':'unsigned long long' '='
|     | |     | |   |     |-UnaryOperator 0x1ccd6473a50 <line:46:25, col:44> 'size_t':'unsigned long long' lvalue prefix '*' cannot overflow
|     | |     | |   |     | `-CStyleCastExpr 0x1ccd6473a28 <col:26, col:44> 'size_t *' <BitCast>
|     | |     | |   |     |   `-ParenExpr 0x1ccd6473a08 <col:36, col:44> 'unsigned char *'
|     | |     | |   |     |     `-BinaryOperator 0x1ccd6473990 <col:37, col:43> 'unsigned char *' '+'
|     | |     | |   |     |       |-ImplicitCastExpr 0x1ccd6473960 <col:37> 'unsigned char *' <LValueToRValue>
|     | |     | |   |     |       | `-DeclRefExpr 0x1ccd6473920 <col:37> 'unsigned char *' lvalue ParmVar 0x1ccd647a8d0 'out' 'unsigned char *'
|     | |     | |   |     |       `-ImplicitCastExpr 0x1ccd6473978 <col:43> 'unsigned int' <LValueToRValue>
|     | |     | |   |     |         `-DeclRefExpr 0x1ccd6473940 <col:43> 'unsigned int' lvalue Var 0x1ccd647af08 'n' 'unsigned int'
|     | |     | |   |     `-CompoundAssignOperator 0x1ccd6473cc0 <line:47:29, col:72> 'size_t':'unsigned long long' '^=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|     | |     | |   |       |-UnaryOperator 0x1ccd6473b70 <col:29, col:49> 'size_t':'unsigned long long' lvalue prefix '*' cannot overflow
|     | |     | |   |       | `-CStyleCastExpr 0x1ccd6473b48 <col:30, col:49> 'size_t *' <BitCast>
|     | |     | |   |       |   `-ParenExpr 0x1ccd6473b28 <col:40, col:49> 'unsigned char *':'unsigned char *'
|     | |     | |   |       |     `-BinaryOperator 0x1ccd6473ad8 <col:41, col:48> 'unsigned char *':'unsigned char *' '+'
|     | |     | |   |       |       |-ImplicitCastExpr 0x1ccd6473aa8 <col:41> 'unsigned char *':'unsigned char *' <LValueToRValue>
|     | |     | |   |       |       | `-DeclRefExpr 0x1ccd6473a68 <col:41> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x1ccd647aad0 'ivec' 'unsigned char *':'unsigned char *'
|     | |     | |   |       |       `-ImplicitCastExpr 0x1ccd6473ac0 <col:48> 'unsigned int' <LValueToRValue>
|     | |     | |   |       |         `-DeclRefExpr 0x1ccd6473a88 <col:48> 'unsigned int' lvalue Var 0x1ccd647af08 'n' 'unsigned int'
|     | |     | |   |       `-ImplicitCastExpr 0x1ccd6473ca8 <col:54, col:72> 'size_t':'unsigned long long' <LValueToRValue>
|     | |     | |   |         `-UnaryOperator 0x1ccd6473c90 <col:54, col:72> 'size_t':'unsigned long long' lvalue prefix '*' cannot overflow
|     | |     | |   |           `-CStyleCastExpr 0x1ccd6473c68 <col:55, col:72> 'size_t *' <BitCast>
|     | |     | |   |             `-ParenExpr 0x1ccd6473c48 <col:65, col:72> 'const unsigned char *'
|     | |     | |   |               `-BinaryOperator 0x1ccd6473bf8 <col:66, col:71> 'const unsigned char *' '+'
|     | |     | |   |                 |-ImplicitCastExpr 0x1ccd6473bc8 <col:66> 'const unsigned char *' <LValueToRValue>
|     | |     | |   |                 | `-DeclRefExpr 0x1ccd6473b88 <col:66> 'const unsigned char *' lvalue ParmVar 0x1ccd647a820 'in' 'const unsigned char *'
|     | |     | |   |                 `-ImplicitCastExpr 0x1ccd6473be0 <col:71> 'unsigned int' <LValueToRValue>
|     | |     | |   |                   `-DeclRefExpr 0x1ccd6473ba8 <col:71> 'unsigned int' lvalue Var 0x1ccd647af08 'n' 'unsigned int'
|     | |     | |   |-CompoundAssignOperator 0x1ccd6473dc0 <line:49:21, col:28> 'size_t':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|     | |     | |   | |-DeclRefExpr 0x1ccd6473d60 <col:21> 'size_t':'unsigned long long' lvalue ParmVar 0x1ccd647a948 'len' 'size_t':'unsigned long long'
|     | |     | |   | `-ImplicitCastExpr 0x1ccd6473da8 <col:28> 'unsigned long long' <IntegralCast>
|     | |     | |   |   `-IntegerLiteral 0x1ccd6473d80 <col:28> 'int' 16
|     | |     | |   |-CompoundAssignOperator 0x1ccd6473e38 <line:50:21, col:28> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|     | |     | |   | |-DeclRefExpr 0x1ccd6473df0 <col:21> 'unsigned char *' lvalue ParmVar 0x1ccd647a8d0 'out' 'unsigned char *'
|     | |     | |   | `-IntegerLiteral 0x1ccd6473e10 <col:28> 'int' 16
|     | |     | |   |-CompoundAssignOperator 0x1ccd6473eb0 <line:51:21, col:27> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|     | |     | |   | |-DeclRefExpr 0x1ccd6473e68 <col:21> 'const unsigned char *' lvalue ParmVar 0x1ccd647a820 'in' 'const unsigned char *'
|     | |     | |   | `-IntegerLiteral 0x1ccd6473e88 <col:27> 'int' 16
|     | |     | |   `-BinaryOperator 0x1ccd6473f40 <line:52:21, col:25> 'unsigned int' '='
|     | |     | |     |-DeclRefExpr 0x1ccd6473ee0 <col:21> 'unsigned int' lvalue Var 0x1ccd647af08 'n' 'unsigned int'
|     | |     | |     `-ImplicitCastExpr 0x1ccd6473f28 <col:25> 'unsigned int' <IntegralCast>
|     | |     | |       `-IntegerLiteral 0x1ccd6473f00 <col:25> 'int' 0
|     | |     | |-IfStmt 0x1ccd647b3c0 <line:54:17, line:60:17>
|     | |     | | |-ImplicitCastExpr 0x1ccd6473fd0 <line:54:21> 'size_t':'unsigned long long' <LValueToRValue>
|     | |     | | | `-DeclRefExpr 0x1ccd6473fb0 <col:21> 'size_t':'unsigned long long' lvalue ParmVar 0x1ccd647a948 'len' 'size_t':'unsigned long long'
|     | |     | | `-CompoundStmt 0x1ccd647b3a8 <col:26, line:60:17>
|     | |     | |   `-WhileStmt 0x1ccd647b390 <line:56:21, line:59:21>
|     | |     | |     |-UnaryOperator 0x1ccd647b0f0 <line:56:28, col:31> 'size_t':'unsigned long long' postfix '--'
|     | |     | |     | `-DeclRefExpr 0x1ccd6474048 <col:28> 'size_t':'unsigned long long' lvalue ParmVar 0x1ccd647a948 'len' 'size_t':'unsigned long long'
|     | |     | |     `-CompoundStmt 0x1ccd647b370 <col:35, line:59:21>
|     | |     | |       |-BinaryOperator 0x1ccd647b318 <line:57:25, col:49> 'unsigned char' '='
|     | |     | |       | |-ArraySubscriptExpr 0x1ccd647b178 <col:25, col:30> 'unsigned char' lvalue
|     | |     | |       | | |-ImplicitCastExpr 0x1ccd647b148 <col:25> 'unsigned char *' <LValueToRValue>
|     | |     | |       | | | `-DeclRefExpr 0x1ccd647b108 <col:25> 'unsigned char *' lvalue ParmVar 0x1ccd647a8d0 'out' 'unsigned char *'
|     | |     | |       | | `-ImplicitCastExpr 0x1ccd647b160 <col:29> 'unsigned int' <LValueToRValue>
|     | |     | |       | |   `-DeclRefExpr 0x1ccd647b128 <col:29> 'unsigned int' lvalue Var 0x1ccd647af08 'n' 'unsigned int'
|     | |     | |       | `-CompoundAssignOperator 0x1ccd647b2e8 <col:34, col:49> 'unsigned char' '^=' ComputeLHSTy='int' ComputeResultTy='int'
|     | |     | |       |   |-ArraySubscriptExpr 0x1ccd647b208 <col:34, col:40> 'unsigned char' lvalue
|     | |     | |       |   | |-ImplicitCastExpr 0x1ccd647b1d8 <col:34> 'unsigned char *':'unsigned char *' <LValueToRValue>
|     | |     | |       |   | | `-DeclRefExpr 0x1ccd647b198 <col:34> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x1ccd647aad0 'ivec' 'unsigned char *':'unsigned char *'
|     | |     | |       |   | `-ImplicitCastExpr 0x1ccd647b1f0 <col:39> 'unsigned int' <LValueToRValue>
|     | |     | |       |   |   `-DeclRefExpr 0x1ccd647b1b8 <col:39> 'unsigned int' lvalue Var 0x1ccd647af08 'n' 'unsigned int'
|     | |     | |       |   `-ImplicitCastExpr 0x1ccd647b2d0 <col:45, col:49> 'int' <IntegralCast>
|     | |     | |       |     `-ImplicitCastExpr 0x1ccd647b2b8 <col:45, col:49> 'unsigned char' <LValueToRValue>
|     | |     | |       |       `-ArraySubscriptExpr 0x1ccd647b298 <col:45, col:49> 'const unsigned char' lvalue
|     | |     | |       |         |-ImplicitCastExpr 0x1ccd647b268 <col:45> 'const unsigned char *' <LValueToRValue>
|     | |     | |       |         | `-DeclRefExpr 0x1ccd647b228 <col:45> 'const unsigned char *' lvalue ParmVar 0x1ccd647a820 'in' 'const unsigned char *'
|     | |     | |       |         `-ImplicitCastExpr 0x1ccd647b280 <col:48> 'unsigned int' <LValueToRValue>
|     | |     | |       |           `-DeclRefExpr 0x1ccd647b248 <col:48> 'unsigned int' lvalue Var 0x1ccd647af08 'n' 'unsigned int'
|     | |     | |       `-UnaryOperator 0x1ccd647b358 <line:58:25, col:27> 'unsigned int' prefix '++'
|     | |     | |         `-DeclRefExpr 0x1ccd647b338 <col:27> 'unsigned int' lvalue Var 0x1ccd647af08 'n' 'unsigned int'
|     | |     | |-BinaryOperator 0x1ccd647b478 <line:61:17, col:24> 'int' '='
|     | |     | | |-UnaryOperator 0x1ccd647b410 <col:17, col:18> 'int' lvalue prefix '*' cannot overflow
|     | |     | | | `-ImplicitCastExpr 0x1ccd647b3f8 <col:18> 'int *' <LValueToRValue>
|     | |     | | |   `-DeclRefExpr 0x1ccd647b3d8 <col:18> 'int *' lvalue ParmVar 0x1ccd647ab50 'num' 'int *'
|     | |     | | `-ImplicitCastExpr 0x1ccd647b460 <col:24> 'int' <IntegralCast>
|     | |     | |   `-ImplicitCastExpr 0x1ccd647b448 <col:24> 'unsigned int' <LValueToRValue>
|     | |     | |     `-DeclRefExpr 0x1ccd647b428 <col:24> 'unsigned int' lvalue Var 0x1ccd647af08 'n' 'unsigned int'
|     | |     | `-ReturnStmt 0x1ccd647b498 <line:62:17>
|     | |     `-IntegerLiteral 0x1ccd647b4e0 <line:63:22> 'int' 0
|     | |-WhileStmt 0x1ccd647bb10 <line:67:9, line:74:9>
|     | | |-BinaryOperator 0x1ccd647b5e0 <line:67:16, col:20> 'int' '<'
|     | | | |-ImplicitCastExpr 0x1ccd647b5b0 <col:16> 'size_t':'unsigned long long' <LValueToRValue>
|     | | | | `-DeclRefExpr 0x1ccd647b558 <col:16> 'size_t':'unsigned long long' lvalue Var 0x1ccd647af98 'l' 'size_t':'unsigned long long'
|     | | | `-ImplicitCastExpr 0x1ccd647b5c8 <col:20> 'size_t':'unsigned long long' <LValueToRValue>
|     | | |   `-DeclRefExpr 0x1ccd647b590 <col:20> 'size_t':'unsigned long long' lvalue ParmVar 0x1ccd647a948 'len' 'size_t':'unsigned long long'
|     | | `-CompoundStmt 0x1ccd647bae0 <col:25, line:74:9>
|     | |   |-IfStmt 0x1ccd647b708 <line:68:13, line:70:13>
|     | |   | |-BinaryOperator 0x1ccd647b678 <line:68:17, col:22> 'int' '=='
|     | |   | | |-ImplicitCastExpr 0x1ccd647b648 <col:17> 'unsigned int' <LValueToRValue>
|     | |   | | | `-DeclRefExpr 0x1ccd647b600 <col:17> 'unsigned int' lvalue Var 0x1ccd647af08 'n' 'unsigned int'
|     | |   | | `-ImplicitCastExpr 0x1ccd647b660 <col:22> 'unsigned int' <IntegralCast>
|     | |   | |   `-IntegerLiteral 0x1ccd647b620 <col:22> 'int' 0
|     | |   | `-CompoundStmt 0x1ccd647b6f8 <col:25, line:70:13>
|     | |   |-BinaryOperator 0x1ccd647b930 <line:71:13, col:37> 'unsigned char' '='
|     | |   | |-ArraySubscriptExpr 0x1ccd647b790 <col:13, col:18> 'unsigned char' lvalue
|     | |   | | |-ImplicitCastExpr 0x1ccd647b760 <col:13> 'unsigned char *' <LValueToRValue>
|     | |   | | | `-DeclRefExpr 0x1ccd647b720 <col:13> 'unsigned char *' lvalue ParmVar 0x1ccd647a8d0 'out' 'unsigned char *'
|     | |   | | `-ImplicitCastExpr 0x1ccd647b778 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|     | |   | |   `-DeclRefExpr 0x1ccd647b740 <col:17> 'size_t':'unsigned long long' lvalue Var 0x1ccd647af98 'l' 'size_t':'unsigned long long'
|     | |   | `-CompoundAssignOperator 0x1ccd647b900 <col:22, col:37> 'unsigned char' '^=' ComputeLHSTy='int' ComputeResultTy='int'
|     | |   |   |-ArraySubscriptExpr 0x1ccd647b820 <col:22, col:28> 'unsigned char' lvalue
|     | |   |   | |-ImplicitCastExpr 0x1ccd647b7f0 <col:22> 'unsigned char *':'unsigned char *' <LValueToRValue>
|     | |   |   | | `-DeclRefExpr 0x1ccd647b7b0 <col:22> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x1ccd647aad0 'ivec' 'unsigned char *':'unsigned char *'
|     | |   |   | `-ImplicitCastExpr 0x1ccd647b808 <col:27> 'unsigned int' <LValueToRValue>
|     | |   |   |   `-DeclRefExpr 0x1ccd647b7d0 <col:27> 'unsigned int' lvalue Var 0x1ccd647af08 'n' 'unsigned int'
|     | |   |   `-ImplicitCastExpr 0x1ccd647b8e8 <col:33, col:37> 'int' <IntegralCast>
|     | |   |     `-ImplicitCastExpr 0x1ccd647b8d0 <col:33, col:37> 'unsigned char' <LValueToRValue>
|     | |   |       `-ArraySubscriptExpr 0x1ccd647b8b0 <col:33, col:37> 'const unsigned char' lvalue
|     | |   |         |-ImplicitCastExpr 0x1ccd647b880 <col:33> 'const unsigned char *' <LValueToRValue>
|     | |   |         | `-DeclRefExpr 0x1ccd647b840 <col:33> 'const unsigned char *' lvalue ParmVar 0x1ccd647a820 'in' 'const unsigned char *'
|     | |   |         `-ImplicitCastExpr 0x1ccd647b898 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|     | |   |           `-DeclRefExpr 0x1ccd647b860 <col:36> 'size_t':'unsigned long long' lvalue Var 0x1ccd647af98 'l' 'size_t':'unsigned long long'
|     | |   |-UnaryOperator 0x1ccd647b970 <line:72:13, col:15> 'size_t':'unsigned long long' prefix '++'
|     | |   | `-DeclRefExpr 0x1ccd647b950 <col:15> 'size_t':'unsigned long long' lvalue Var 0x1ccd647af98 'l' 'size_t':'unsigned long long'
|     | |   `-BinaryOperator 0x1ccd647bac0 <line:73:13, col:27> 'unsigned int' '='
|     | |     |-DeclRefExpr 0x1ccd647b988 <col:13> 'unsigned int' lvalue Var 0x1ccd647af08 'n' 'unsigned int'
|     | |     `-BinaryOperator 0x1ccd647baa0 <col:17, col:27> 'unsigned int' '%'
|     | |       |-ParenExpr 0x1ccd647ba40 <col:17, col:23> 'unsigned int'
|     | |       | `-BinaryOperator 0x1ccd647ba20 <col:18, col:22> 'unsigned int' '+'
|     | |       |   |-ImplicitCastExpr 0x1ccd647b9f0 <col:18> 'unsigned int' <LValueToRValue>
|     | |       |   | `-DeclRefExpr 0x1ccd647b9a8 <col:18> 'unsigned int' lvalue Var 0x1ccd647af08 'n' 'unsigned int'
|     | |       |   `-ImplicitCastExpr 0x1ccd647ba08 <col:22> 'unsigned int' <IntegralCast>
|     | |       |     `-IntegerLiteral 0x1ccd647b9c8 <col:22> 'int' 1
|     | |       `-ImplicitCastExpr 0x1ccd647ba88 <col:27> 'unsigned int' <IntegralCast>
|     | |         `-IntegerLiteral 0x1ccd647ba60 <col:27> 'int' 16
|     | `-BinaryOperator 0x1ccd647bbc8 <line:75:9, col:16> 'int' '='
|     |   |-UnaryOperator 0x1ccd647bb60 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
|     |   | `-ImplicitCastExpr 0x1ccd647bb48 <col:10> 'int *' <LValueToRValue>
|     |   |   `-DeclRefExpr 0x1ccd647bb28 <col:10> 'int *' lvalue ParmVar 0x1ccd647ab50 'num' 'int *'
|     |   `-ImplicitCastExpr 0x1ccd647bbb0 <col:16> 'int' <IntegralCast>
|     |     `-ImplicitCastExpr 0x1ccd647bb98 <col:16> 'unsigned int' <LValueToRValue>
|     |       `-DeclRefExpr 0x1ccd647bb78 <col:16> 'unsigned int' lvalue Var 0x1ccd647af08 'n' 'unsigned int'
|     `-CompoundStmt 0x1ccd647dec0 <line:76:12, line:130:5>
|       |-IfStmt 0x1ccd647d5f0 <line:78:9, line:116:9>
|       | |-BinaryOperator 0x1ccd647bce0 <line:78:13, col:36> 'int' '=='
|       | | |-BinaryOperator 0x1ccd647bc80 <col:13, col:31> 'unsigned long long' '%'
|       | | | |-ImplicitCastExpr 0x1ccd647bc68 <col:13> 'unsigned long long' <IntegralCast>
|       | | | | `-IntegerLiteral 0x1ccd647bc10 <col:13> 'int' 16
|       | | | `-UnaryExprOrTypeTraitExpr 0x1ccd647bc48 <col:18, col:31> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|       | | `-ImplicitCastExpr 0x1ccd647bcc8 <col:36> 'unsigned long long' <IntegralCast>
|       | |   `-IntegerLiteral 0x1ccd647bca0 <col:36> 'int' 0
|       | `-CompoundStmt 0x1ccd647d5d8 <col:39, line:116:9>
|       |   `-DoStmt 0x1ccd647d5b8 <line:79:13, line:115:23>
|       |     |-CompoundStmt 0x1ccd647d558 <line:79:16, line:115:13>
|       |     | |-WhileStmt 0x1ccd647c390 <line:80:17, line:86:17>
|       |     | | |-BinaryOperator 0x1ccd647bd70 <line:80:24, col:29> 'int' '&&'
|       |     | | | |-ImplicitCastExpr 0x1ccd647bd40 <col:24> 'unsigned int' <LValueToRValue>
|       |     | | | | `-DeclRefExpr 0x1ccd647bd00 <col:24> 'unsigned int' lvalue Var 0x1ccd647af08 'n' 'unsigned int'
|       |     | | | `-ImplicitCastExpr 0x1ccd647bd58 <col:29> 'size_t':'unsigned long long' <LValueToRValue>
|       |     | | |   `-DeclRefExpr 0x1ccd647bd20 <col:29> 'size_t':'unsigned long long' lvalue ParmVar 0x1ccd647a948 'len' 'size_t':'unsigned long long'
|       |     | | `-CompoundStmt 0x1ccd647c358 <col:34, line:86:17>
|       |     | |   |-DeclStmt 0x1ccd647be10 <line:81:21, col:36>
|       |     | |   | `-VarDecl 0x1ccd647bda8 <col:21, col:35> col:35 used c 'unsigned char'
|       |     | |   |-BinaryOperator 0x1ccd647c0a8 <line:82:21, col:54> 'unsigned char' '='
|       |     | |   | |-UnaryOperator 0x1ccd647be80 <col:21, col:28> 'unsigned char' lvalue prefix '*' cannot overflow
|       |     | |   | | `-ParenExpr 0x1ccd647be60 <col:22, col:28> 'unsigned char *'
|       |     | |   | |   `-UnaryOperator 0x1ccd647be48 <col:23, col:26> 'unsigned char *' postfix '++'
|       |     | |   | |     `-DeclRefExpr 0x1ccd647be28 <col:23> 'unsigned char *' lvalue ParmVar 0x1ccd647a8d0 'out' 'unsigned char *'
|       |     | |   | `-ImplicitCastExpr 0x1ccd647c090 <col:32, col:54> 'unsigned char' <IntegralCast>
|       |     | |   |   `-BinaryOperator 0x1ccd647c070 <col:32, col:54> 'int' '^'
|       |     | |   |     |-ImplicitCastExpr 0x1ccd647c040 <col:32, col:38> 'int' <IntegralCast>
|       |     | |   |     | `-ImplicitCastExpr 0x1ccd647c028 <col:32, col:38> 'unsigned char' <LValueToRValue>
|       |     | |   |     |   `-ArraySubscriptExpr 0x1ccd647bf08 <col:32, col:38> 'unsigned char' lvalue
|       |     | |   |     |     |-ImplicitCastExpr 0x1ccd647bed8 <col:32> 'unsigned char *':'unsigned char *' <LValueToRValue>
|       |     | |   |     |     | `-DeclRefExpr 0x1ccd647be98 <col:32> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x1ccd647aad0 'ivec' 'unsigned char *':'unsigned char *'
|       |     | |   |     |     `-ImplicitCastExpr 0x1ccd647bef0 <col:37> 'unsigned int' <LValueToRValue>
|       |     | |   |     |       `-DeclRefExpr 0x1ccd647beb8 <col:37> 'unsigned int' lvalue Var 0x1ccd647af08 'n' 'unsigned int'
|       |     | |   |     `-ImplicitCastExpr 0x1ccd647c058 <col:42, col:54> 'int' <IntegralCast>
|       |     | |   |       `-ParenExpr 0x1ccd647c008 <col:42, col:54> 'unsigned char'
|       |     | |   |         `-BinaryOperator 0x1ccd647bfe8 <col:43, col:53> 'unsigned char' '='
|       |     | |   |           |-DeclRefExpr 0x1ccd647bf28 <col:43> 'unsigned char' lvalue Var 0x1ccd647bda8 'c' 'unsigned char'
|       |     | |   |           `-ImplicitCastExpr 0x1ccd647bfd0 <col:47, col:53> 'unsigned char' <LValueToRValue>
|       |     | |   |             `-UnaryOperator 0x1ccd647bfb8 <col:47, col:53> 'const unsigned char' lvalue prefix '*' cannot overflow
|       |     | |   |               `-ParenExpr 0x1ccd647bf98 <col:48, col:53> 'const unsigned char *'
|       |     | |   |                 `-UnaryOperator 0x1ccd647bf80 <col:49, col:51> 'const unsigned char *' postfix '++'
|       |     | |   |                   `-DeclRefExpr 0x1ccd647bf60 <col:49> 'const unsigned char *' lvalue ParmVar 0x1ccd647a820 'in' 'const unsigned char *'
|       |     | |   |-BinaryOperator 0x1ccd647c1a8 <line:83:21, col:31> 'unsigned char' '='
|       |     | |   | |-ArraySubscriptExpr 0x1ccd647c150 <col:21, col:27> 'unsigned char' lvalue
|       |     | |   | | |-ImplicitCastExpr 0x1ccd647c120 <col:21> 'unsigned char *':'unsigned char *' <LValueToRValue>
|       |     | |   | | | `-DeclRefExpr 0x1ccd647c0c8 <col:21> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x1ccd647aad0 'ivec' 'unsigned char *':'unsigned char *'
|       |     | |   | | `-ImplicitCastExpr 0x1ccd647c138 <col:26> 'unsigned int' <LValueToRValue>
|       |     | |   | |   `-DeclRefExpr 0x1ccd647c100 <col:26> 'unsigned int' lvalue Var 0x1ccd647af08 'n' 'unsigned int'
|       |     | |   | `-ImplicitCastExpr 0x1ccd647c190 <col:31> 'unsigned char' <LValueToRValue>
|       |     | |   |   `-DeclRefExpr 0x1ccd647c170 <col:31> 'unsigned char' lvalue Var 0x1ccd647bda8 'c' 'unsigned char'
|       |     | |   |-UnaryOperator 0x1ccd647c1e8 <line:84:21, col:23> 'size_t':'unsigned long long' prefix '--'
|       |     | |   | `-DeclRefExpr 0x1ccd647c1c8 <col:23> 'size_t':'unsigned long long' lvalue ParmVar 0x1ccd647a948 'len' 'size_t':'unsigned long long'
|       |     | |   `-BinaryOperator 0x1ccd647c338 <line:85:21, col:35> 'unsigned int' '='
|       |     | |     |-DeclRefExpr 0x1ccd647c200 <col:21> 'unsigned int' lvalue Var 0x1ccd647af08 'n' 'unsigned int'
|       |     | |     `-BinaryOperator 0x1ccd647c318 <col:25, col:35> 'unsigned int' '%'
|       |     | |       |-ParenExpr 0x1ccd647c2b8 <col:25, col:31> 'unsigned int'
|       |     | |       | `-BinaryOperator 0x1ccd647c298 <col:26, col:30> 'unsigned int' '+'
|       |     | |       |   |-ImplicitCastExpr 0x1ccd647c268 <col:26> 'unsigned int' <LValueToRValue>
|       |     | |       |   | `-DeclRefExpr 0x1ccd647c220 <col:26> 'unsigned int' lvalue Var 0x1ccd647af08 'n' 'unsigned int'
|       |     | |       |   `-ImplicitCastExpr 0x1ccd647c280 <col:30> 'unsigned int' <IntegralCast>
|       |     | |       |     `-IntegerLiteral 0x1ccd647c240 <col:30> 'int' 1
|       |     | |       `-ImplicitCastExpr 0x1ccd647c300 <col:35> 'unsigned int' <IntegralCast>
|       |     | |         `-IntegerLiteral 0x1ccd647c2d8 <col:35> 'int' 16
|       |     | |-WhileStmt 0x1ccd647ce78 <line:92:17, line:103:17>
|       |     | | |-BinaryOperator 0x1ccd647c420 <line:92:24, col:31> 'int' '>='
|       |     | | | |-ImplicitCastExpr 0x1ccd647c3f0 <col:24> 'size_t':'unsigned long long' <LValueToRValue>
|       |     | | | | `-DeclRefExpr 0x1ccd647c3a8 <col:24> 'size_t':'unsigned long long' lvalue ParmVar 0x1ccd647a948 'len' 'size_t':'unsigned long long'
|       |     | | | `-ImplicitCastExpr 0x1ccd647c408 <col:31> 'unsigned long long' <IntegralCast>
|       |     | | |   `-IntegerLiteral 0x1ccd647c3c8 <col:31> 'int' 16
|       |     | | `-CompoundStmt 0x1ccd647ce40 <col:35, line:103:17>
|       |     | |   |-ForStmt 0x1ccd647cc08 <line:94:21, line:98:21>
|       |     | |   | |-<<<NULL>>>
|       |     | |   | |-<<<NULL>>>
|       |     | |   | |-BinaryOperator 0x1ccd647c518 <line:94:28, col:32> 'int' '<'
|       |     | |   | | |-ImplicitCastExpr 0x1ccd647c4e8 <col:28> 'unsigned int' <LValueToRValue>
|       |     | |   | | | `-DeclRefExpr 0x1ccd647c4a0 <col:28> 'unsigned int' lvalue Var 0x1ccd647af08 'n' 'unsigned int'
|       |     | |   | | `-ImplicitCastExpr 0x1ccd647c500 <col:32> 'unsigned int' <IntegralCast>
|       |     | |   | |   `-IntegerLiteral 0x1ccd647c4c0 <col:32> 'int' 16
|       |     | |   | |-CompoundAssignOperator 0x1ccd647c588 <col:36, col:54> 'unsigned int' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|       |     | |   | | |-DeclRefExpr 0x1ccd647c538 <col:36> 'unsigned int' lvalue Var 0x1ccd647af08 'n' 'unsigned int'
|       |     | |   | | `-UnaryExprOrTypeTraitExpr 0x1ccd647c568 <col:41, col:54> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|       |     | |   | `-CompoundStmt 0x1ccd647cbe0 <col:57, line:98:21>
|       |     | |   |   |-DeclStmt 0x1ccd647c768 <line:95:25, col:55>
|       |     | |   |   | `-VarDecl 0x1ccd647c5c8 <col:25, col:54> col:32 used t 'size_t':'unsigned long long' cinit
|       |     | |   |   |   `-ImplicitCastExpr 0x1ccd647c750 <col:36, col:54> 'size_t':'unsigned long long' <LValueToRValue>
|       |     | |   |   |     `-UnaryOperator 0x1ccd647c738 <col:36, col:54> 'size_t':'unsigned long long' lvalue prefix '*' cannot overflow
|       |     | |   |   |       `-CStyleCastExpr 0x1ccd647c710 <col:37, col:54> 'size_t *' <BitCast>
|       |     | |   |   |         `-ParenExpr 0x1ccd647c6f0 <col:47, col:54> 'const unsigned char *'
|       |     | |   |   |           `-BinaryOperator 0x1ccd647c6a0 <col:48, col:53> 'const unsigned char *' '+'
|       |     | |   |   |             |-ImplicitCastExpr 0x1ccd647c670 <col:48> 'const unsigned char *' <LValueToRValue>
|       |     | |   |   |             | `-DeclRefExpr 0x1ccd647c630 <col:48> 'const unsigned char *' lvalue ParmVar 0x1ccd647a820 'in' 'const unsigned char *'
|       |     | |   |   |             `-ImplicitCastExpr 0x1ccd647c688 <col:53> 'unsigned int' <LValueToRValue>
|       |     | |   |   |               `-DeclRefExpr 0x1ccd647c650 <col:53> 'unsigned int' lvalue Var 0x1ccd647af08 'n' 'unsigned int'
|       |     | |   |   |-BinaryOperator 0x1ccd647ca48 <line:96:25, col:72> 'size_t':'unsigned long long' '='
|       |     | |   |   | |-UnaryOperator 0x1ccd647c888 <col:25, col:44> 'size_t':'unsigned long long' lvalue prefix '*' cannot overflow
|       |     | |   |   | | `-CStyleCastExpr 0x1ccd647c860 <col:26, col:44> 'size_t *' <BitCast>
|       |     | |   |   | |   `-ParenExpr 0x1ccd647c840 <col:36, col:44> 'unsigned char *'
|       |     | |   |   | |     `-BinaryOperator 0x1ccd647c7f0 <col:37, col:43> 'unsigned char *' '+'
|       |     | |   |   | |       |-ImplicitCastExpr 0x1ccd647c7c0 <col:37> 'unsigned char *' <LValueToRValue>
|       |     | |   |   | |       | `-DeclRefExpr 0x1ccd647c780 <col:37> 'unsigned char *' lvalue ParmVar 0x1ccd647a8d0 'out' 'unsigned char *'
|       |     | |   |   | |       `-ImplicitCastExpr 0x1ccd647c7d8 <col:43> 'unsigned int' <LValueToRValue>
|       |     | |   |   | |         `-DeclRefExpr 0x1ccd647c7a0 <col:43> 'unsigned int' lvalue Var 0x1ccd647af08 'n' 'unsigned int'
|       |     | |   |   | `-BinaryOperator 0x1ccd647ca28 <col:48, col:72> 'unsigned long long' '^'
|       |     | |   |   |   |-ImplicitCastExpr 0x1ccd647c9f8 <col:48, col:68> 'size_t':'unsigned long long' <LValueToRValue>
|       |     | |   |   |   | `-UnaryOperator 0x1ccd647c9a8 <col:48, col:68> 'size_t':'unsigned long long' lvalue prefix '*' cannot overflow
|       |     | |   |   |   |   `-CStyleCastExpr 0x1ccd647c980 <col:49, col:68> 'size_t *' <BitCast>
|       |     | |   |   |   |     `-ParenExpr 0x1ccd647c960 <col:59, col:68> 'unsigned char *':'unsigned char *'
|       |     | |   |   |   |       `-BinaryOperator 0x1ccd647c910 <col:60, col:67> 'unsigned char *':'unsigned char *' '+'
|       |     | |   |   |   |         |-ImplicitCastExpr 0x1ccd647c8e0 <col:60> 'unsigned char *':'unsigned char *' <LValueToRValue>
|       |     | |   |   |   |         | `-DeclRefExpr 0x1ccd647c8a0 <col:60> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x1ccd647aad0 'ivec' 'unsigned char *':'unsigned char *'
|       |     | |   |   |   |         `-ImplicitCastExpr 0x1ccd647c8f8 <col:67> 'unsigned int' <LValueToRValue>
|       |     | |   |   |   |           `-DeclRefExpr 0x1ccd647c8c0 <col:67> 'unsigned int' lvalue Var 0x1ccd647af08 'n' 'unsigned int'
|       |     | |   |   |   `-ImplicitCastExpr 0x1ccd647ca10 <col:72> 'size_t':'unsigned long long' <LValueToRValue>
|       |     | |   |   |     `-DeclRefExpr 0x1ccd647c9c0 <col:72> 'size_t':'unsigned long long' lvalue Var 0x1ccd647c5c8 't' 'size_t':'unsigned long long'
|       |     | |   |   `-BinaryOperator 0x1ccd647cbc0 <line:97:25, col:49> 'size_t':'unsigned long long' '='
|       |     | |   |     |-UnaryOperator 0x1ccd647cb70 <col:25, col:45> 'size_t':'unsigned long long' lvalue prefix '*' cannot overflow
|       |     | |   |     | `-CStyleCastExpr 0x1ccd647cb48 <col:26, col:45> 'size_t *' <BitCast>
|       |     | |   |     |   `-ParenExpr 0x1ccd647cb28 <col:36, col:45> 'unsigned char *':'unsigned char *'
|       |     | |   |     |     `-BinaryOperator 0x1ccd647cad8 <col:37, col:44> 'unsigned char *':'unsigned char *' '+'
|       |     | |   |     |       |-ImplicitCastExpr 0x1ccd647caa8 <col:37> 'unsigned char *':'unsigned char *' <LValueToRValue>
|       |     | |   |     |       | `-DeclRefExpr 0x1ccd647ca68 <col:37> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x1ccd647aad0 'ivec' 'unsigned char *':'unsigned char *'
|       |     | |   |     |       `-ImplicitCastExpr 0x1ccd647cac0 <col:44> 'unsigned int' <LValueToRValue>
|       |     | |   |     |         `-DeclRefExpr 0x1ccd647ca88 <col:44> 'unsigned int' lvalue Var 0x1ccd647af08 'n' 'unsigned int'
|       |     | |   |     `-ImplicitCastExpr 0x1ccd647cba8 <col:49> 'size_t':'unsigned long long' <LValueToRValue>
|       |     | |   |       `-DeclRefExpr 0x1ccd647cb88 <col:49> 'size_t':'unsigned long long' lvalue Var 0x1ccd647c5c8 't' 'size_t':'unsigned long long'
|       |     | |   |-CompoundAssignOperator 0x1ccd647cca0 <line:99:21, col:28> 'size_t':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|       |     | |   | |-DeclRefExpr 0x1ccd647cc40 <col:21> 'size_t':'unsigned long long' lvalue ParmVar 0x1ccd647a948 'len' 'size_t':'unsigned long long'
|       |     | |   | `-ImplicitCastExpr 0x1ccd647cc88 <col:28> 'unsigned long long' <IntegralCast>
|       |     | |   |   `-IntegerLiteral 0x1ccd647cc60 <col:28> 'int' 16
|       |     | |   |-CompoundAssignOperator 0x1ccd647cd18 <line:100:21, col:28> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|       |     | |   | |-DeclRefExpr 0x1ccd647ccd0 <col:21> 'unsigned char *' lvalue ParmVar 0x1ccd647a8d0 'out' 'unsigned char *'
|       |     | |   | `-IntegerLiteral 0x1ccd647ccf0 <col:28> 'int' 16
|       |     | |   |-CompoundAssignOperator 0x1ccd647cd90 <line:101:21, col:27> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|       |     | |   | |-DeclRefExpr 0x1ccd647cd48 <col:21> 'const unsigned char *' lvalue ParmVar 0x1ccd647a820 'in' 'const unsigned char *'
|       |     | |   | `-IntegerLiteral 0x1ccd647cd68 <col:27> 'int' 16
|       |     | |   `-BinaryOperator 0x1ccd647ce20 <line:102:21, col:25> 'unsigned int' '='
|       |     | |     |-DeclRefExpr 0x1ccd647cdc0 <col:21> 'unsigned int' lvalue Var 0x1ccd647af08 'n' 'unsigned int'
|       |     | |     `-ImplicitCastExpr 0x1ccd647ce08 <col:25> 'unsigned int' <IntegralCast>
|       |     | |       `-IntegerLiteral 0x1ccd647cde0 <col:25> 'int' 0
|       |     | |-IfStmt 0x1ccd647d470 <line:104:17, line:112:17>
|       |     | | |-ImplicitCastExpr 0x1ccd647ceb0 <line:104:21> 'size_t':'unsigned long long' <LValueToRValue>
|       |     | | | `-DeclRefExpr 0x1ccd647ce90 <col:21> 'size_t':'unsigned long long' lvalue ParmVar 0x1ccd647a948 'len' 'size_t':'unsigned long long'
|       |     | | `-CompoundStmt 0x1ccd647d458 <col:26, line:112:17>
|       |     | |   `-WhileStmt 0x1ccd647d440 <line:106:21, line:111:21>
|       |     | |     |-UnaryOperator 0x1ccd647cf48 <line:106:28, col:31> 'size_t':'unsigned long long' postfix '--'
|       |     | |     | `-DeclRefExpr 0x1ccd647cf28 <col:28> 'size_t':'unsigned long long' lvalue ParmVar 0x1ccd647a948 'len' 'size_t':'unsigned long long'
|       |     | |     `-CompoundStmt 0x1ccd647d410 <col:35, line:111:21>
|       |     | |       |-DeclStmt 0x1ccd647cfe0 <line:107:25, col:40>
|       |     | |       | `-VarDecl 0x1ccd647cf78 <col:25, col:39> col:39 used c 'unsigned char'
|       |     | |       |-BinaryOperator 0x1ccd647d2d0 <line:108:25, col:54> 'unsigned char' '='
|       |     | |       | |-ArraySubscriptExpr 0x1ccd647d068 <col:25, col:30> 'unsigned char' lvalue
|       |     | |       | | |-ImplicitCastExpr 0x1ccd647d038 <col:25> 'unsigned char *' <LValueToRValue>
|       |     | |       | | | `-DeclRefExpr 0x1ccd647cff8 <col:25> 'unsigned char *' lvalue ParmVar 0x1ccd647a8d0 'out' 'unsigned char *'
|       |     | |       | | `-ImplicitCastExpr 0x1ccd647d050 <col:29> 'unsigned int' <LValueToRValue>
|       |     | |       | |   `-DeclRefExpr 0x1ccd647d018 <col:29> 'unsigned int' lvalue Var 0x1ccd647af08 'n' 'unsigned int'
|       |     | |       | `-ImplicitCastExpr 0x1ccd647d2b8 <col:34, col:54> 'unsigned char' <IntegralCast>
|       |     | |       |   `-BinaryOperator 0x1ccd647d298 <col:34, col:54> 'int' '^'
|       |     | |       |     |-ImplicitCastExpr 0x1ccd647d268 <col:34, col:40> 'int' <IntegralCast>
|       |     | |       |     | `-ImplicitCastExpr 0x1ccd647d250 <col:34, col:40> 'unsigned char' <LValueToRValue>
|       |     | |       |     |   `-ArraySubscriptExpr 0x1ccd647d110 <col:34, col:40> 'unsigned char' lvalue
|       |     | |       |     |     |-ImplicitCastExpr 0x1ccd647d0c8 <col:34> 'unsigned char *':'unsigned char *' <LValueToRValue>
|       |     | |       |     |     | `-DeclRefExpr 0x1ccd647d088 <col:34> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x1ccd647aad0 'ivec' 'unsigned char *':'unsigned char *'
|       |     | |       |     |     `-ImplicitCastExpr 0x1ccd647d0e0 <col:39> 'unsigned int' <LValueToRValue>
|       |     | |       |     |       `-DeclRefExpr 0x1ccd647d0a8 <col:39> 'unsigned int' lvalue Var 0x1ccd647af08 'n' 'unsigned int'
|       |     | |       |     `-ImplicitCastExpr 0x1ccd647d280 <col:44, col:54> 'int' <IntegralCast>
|       |     | |       |       `-ParenExpr 0x1ccd647d230 <col:44, col:54> 'unsigned char'
|       |     | |       |         `-BinaryOperator 0x1ccd647d210 <col:45, col:53> 'unsigned char' '='
|       |     | |       |           |-DeclRefExpr 0x1ccd647d130 <col:45> 'unsigned char' lvalue Var 0x1ccd647cf78 'c' 'unsigned char'
|       |     | |       |           `-ImplicitCastExpr 0x1ccd647d1f8 <col:49, col:53> 'unsigned char' <LValueToRValue>
|       |     | |       |             `-ArraySubscriptExpr 0x1ccd647d1d8 <col:49, col:53> 'const unsigned char' lvalue
|       |     | |       |               |-ImplicitCastExpr 0x1ccd647d1a8 <col:49> 'const unsigned char *' <LValueToRValue>
|       |     | |       |               | `-DeclRefExpr 0x1ccd647d168 <col:49> 'const unsigned char *' lvalue ParmVar 0x1ccd647a820 'in' 'const unsigned char *'
|       |     | |       |               `-ImplicitCastExpr 0x1ccd647d1c0 <col:52> 'unsigned int' <LValueToRValue>
|       |     | |       |                 `-DeclRefExpr 0x1ccd647d188 <col:52> 'unsigned int' lvalue Var 0x1ccd647af08 'n' 'unsigned int'
|       |     | |       |-BinaryOperator 0x1ccd647d3b8 <line:109:25, col:35> 'unsigned char' '='
|       |     | |       | |-ArraySubscriptExpr 0x1ccd647d360 <col:25, col:31> 'unsigned char' lvalue
|       |     | |       | | |-ImplicitCastExpr 0x1ccd647d330 <col:25> 'unsigned char *':'unsigned char *' <LValueToRValue>
|       |     | |       | | | `-DeclRefExpr 0x1ccd647d2f0 <col:25> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x1ccd647aad0 'ivec' 'unsigned char *':'unsigned char *'
|       |     | |       | | `-ImplicitCastExpr 0x1ccd647d348 <col:30> 'unsigned int' <LValueToRValue>
|       |     | |       | |   `-DeclRefExpr 0x1ccd647d310 <col:30> 'unsigned int' lvalue Var 0x1ccd647af08 'n' 'unsigned int'
|       |     | |       | `-ImplicitCastExpr 0x1ccd647d3a0 <col:35> 'unsigned char' <LValueToRValue>
|       |     | |       |   `-DeclRefExpr 0x1ccd647d380 <col:35> 'unsigned char' lvalue Var 0x1ccd647cf78 'c' 'unsigned char'
|       |     | |       `-UnaryOperator 0x1ccd647d3f8 <line:110:25, col:27> 'unsigned int' prefix '++'
|       |     | |         `-DeclRefExpr 0x1ccd647d3d8 <col:27> 'unsigned int' lvalue Var 0x1ccd647af08 'n' 'unsigned int'
|       |     | |-BinaryOperator 0x1ccd647d528 <line:113:17, col:24> 'int' '='
|       |     | | |-UnaryOperator 0x1ccd647d4c0 <col:17, col:18> 'int' lvalue prefix '*' cannot overflow
|       |     | | | `-ImplicitCastExpr 0x1ccd647d4a8 <col:18> 'int *' <LValueToRValue>
|       |     | | |   `-DeclRefExpr 0x1ccd647d488 <col:18> 'int *' lvalue ParmVar 0x1ccd647ab50 'num' 'int *'
|       |     | | `-ImplicitCastExpr 0x1ccd647d510 <col:24> 'int' <IntegralCast>
|       |     | |   `-ImplicitCastExpr 0x1ccd647d4f8 <col:24> 'unsigned int' <LValueToRValue>
|       |     | |     `-DeclRefExpr 0x1ccd647d4d8 <col:24> 'unsigned int' lvalue Var 0x1ccd647af08 'n' 'unsigned int'
|       |     | `-ReturnStmt 0x1ccd647d548 <line:114:17>
|       |     `-IntegerLiteral 0x1ccd647d590 <line:115:22> 'int' 0
|       |-WhileStmt 0x1ccd647dde8 <line:119:9, line:128:9>
|       | |-BinaryOperator 0x1ccd647d678 <line:119:16, col:20> 'int' '<'
|       | | |-ImplicitCastExpr 0x1ccd647d648 <col:16> 'size_t':'unsigned long long' <LValueToRValue>
|       | | | `-DeclRefExpr 0x1ccd647d608 <col:16> 'size_t':'unsigned long long' lvalue Var 0x1ccd647af98 'l' 'size_t':'unsigned long long'
|       | | `-ImplicitCastExpr 0x1ccd647d660 <col:20> 'size_t':'unsigned long long' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1ccd647d628 <col:20> 'size_t':'unsigned long long' lvalue ParmVar 0x1ccd647a948 'len' 'size_t':'unsigned long long'
|       | `-CompoundStmt 0x1ccd647dda8 <col:25, line:128:9>
|       |   |-DeclStmt 0x1ccd647d718 <line:120:13, col:28>
|       |   | `-VarDecl 0x1ccd647d6b0 <col:13, col:27> col:27 used c 'unsigned char'
|       |   |-IfStmt 0x1ccd647d838 <line:121:13, line:123:13>
|       |   | |-BinaryOperator 0x1ccd647d7a8 <line:121:17, col:22> 'int' '=='
|       |   | | |-ImplicitCastExpr 0x1ccd647d778 <col:17> 'unsigned int' <LValueToRValue>
|       |   | | | `-DeclRefExpr 0x1ccd647d730 <col:17> 'unsigned int' lvalue Var 0x1ccd647af08 'n' 'unsigned int'
|       |   | | `-ImplicitCastExpr 0x1ccd647d790 <col:22> 'unsigned int' <IntegralCast>
|       |   | |   `-IntegerLiteral 0x1ccd647d750 <col:22> 'int' 0
|       |   | `-CompoundStmt 0x1ccd647d828 <col:25, line:123:13>
|       |   |-BinaryOperator 0x1ccd647db10 <line:124:13, col:42> 'unsigned char' '='
|       |   | |-ArraySubscriptExpr 0x1ccd647d8c0 <col:13, col:18> 'unsigned char' lvalue
|       |   | | |-ImplicitCastExpr 0x1ccd647d890 <col:13> 'unsigned char *' <LValueToRValue>
|       |   | | | `-DeclRefExpr 0x1ccd647d850 <col:13> 'unsigned char *' lvalue ParmVar 0x1ccd647a8d0 'out' 'unsigned char *'
|       |   | | `-ImplicitCastExpr 0x1ccd647d8a8 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|       |   | |   `-DeclRefExpr 0x1ccd647d870 <col:17> 'size_t':'unsigned long long' lvalue Var 0x1ccd647af98 'l' 'size_t':'unsigned long long'
|       |   | `-ImplicitCastExpr 0x1ccd647daf8 <col:22, col:42> 'unsigned char' <IntegralCast>
|       |   |   `-BinaryOperator 0x1ccd647dad8 <col:22, col:42> 'int' '^'
|       |   |     |-ImplicitCastExpr 0x1ccd647daa8 <col:22, col:28> 'int' <IntegralCast>
|       |   |     | `-ImplicitCastExpr 0x1ccd647da90 <col:22, col:28> 'unsigned char' <LValueToRValue>
|       |   |     |   `-ArraySubscriptExpr 0x1ccd647d950 <col:22, col:28> 'unsigned char' lvalue
|       |   |     |     |-ImplicitCastExpr 0x1ccd647d920 <col:22> 'unsigned char *':'unsigned char *' <LValueToRValue>
|       |   |     |     | `-DeclRefExpr 0x1ccd647d8e0 <col:22> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x1ccd647aad0 'ivec' 'unsigned char *':'unsigned char *'
|       |   |     |     `-ImplicitCastExpr 0x1ccd647d938 <col:27> 'unsigned int' <LValueToRValue>
|       |   |     |       `-DeclRefExpr 0x1ccd647d900 <col:27> 'unsigned int' lvalue Var 0x1ccd647af08 'n' 'unsigned int'
|       |   |     `-ImplicitCastExpr 0x1ccd647dac0 <col:32, col:42> 'int' <IntegralCast>
|       |   |       `-ParenExpr 0x1ccd647da70 <col:32, col:42> 'unsigned char'
|       |   |         `-BinaryOperator 0x1ccd647da50 <col:33, col:41> 'unsigned char' '='
|       |   |           |-DeclRefExpr 0x1ccd647d970 <col:33> 'unsigned char' lvalue Var 0x1ccd647d6b0 'c' 'unsigned char'
|       |   |           `-ImplicitCastExpr 0x1ccd647da38 <col:37, col:41> 'unsigned char' <LValueToRValue>
|       |   |             `-ArraySubscriptExpr 0x1ccd647da18 <col:37, col:41> 'const unsigned char' lvalue
|       |   |               |-ImplicitCastExpr 0x1ccd647d9e8 <col:37> 'const unsigned char *' <LValueToRValue>
|       |   |               | `-DeclRefExpr 0x1ccd647d9a8 <col:37> 'const unsigned char *' lvalue ParmVar 0x1ccd647a820 'in' 'const unsigned char *'
|       |   |               `-ImplicitCastExpr 0x1ccd647da00 <col:40> 'size_t':'unsigned long long' <LValueToRValue>
|       |   |                 `-DeclRefExpr 0x1ccd647d9c8 <col:40> 'size_t':'unsigned long long' lvalue Var 0x1ccd647af98 'l' 'size_t':'unsigned long long'
|       |   |-BinaryOperator 0x1ccd647dbf8 <line:125:13, col:23> 'unsigned char' '='
|       |   | |-ArraySubscriptExpr 0x1ccd647dba0 <col:13, col:19> 'unsigned char' lvalue
|       |   | | |-ImplicitCastExpr 0x1ccd647db70 <col:13> 'unsigned char *':'unsigned char *' <LValueToRValue>
|       |   | | | `-DeclRefExpr 0x1ccd647db30 <col:13> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x1ccd647aad0 'ivec' 'unsigned char *':'unsigned char *'
|       |   | | `-ImplicitCastExpr 0x1ccd647db88 <col:18> 'unsigned int' <LValueToRValue>
|       |   | |   `-DeclRefExpr 0x1ccd647db50 <col:18> 'unsigned int' lvalue Var 0x1ccd647af08 'n' 'unsigned int'
|       |   | `-ImplicitCastExpr 0x1ccd647dbe0 <col:23> 'unsigned char' <LValueToRValue>
|       |   |   `-DeclRefExpr 0x1ccd647dbc0 <col:23> 'unsigned char' lvalue Var 0x1ccd647d6b0 'c' 'unsigned char'
|       |   |-UnaryOperator 0x1ccd647dc38 <line:126:13, col:15> 'size_t':'unsigned long long' prefix '++'
|       |   | `-DeclRefExpr 0x1ccd647dc18 <col:15> 'size_t':'unsigned long long' lvalue Var 0x1ccd647af98 'l' 'size_t':'unsigned long long'
|       |   `-BinaryOperator 0x1ccd647dd88 <line:127:13, col:27> 'unsigned int' '='
|       |     |-DeclRefExpr 0x1ccd647dc50 <col:13> 'unsigned int' lvalue Var 0x1ccd647af08 'n' 'unsigned int'
|       |     `-BinaryOperator 0x1ccd647dd68 <col:17, col:27> 'unsigned int' '%'
|       |       |-ParenExpr 0x1ccd647dd08 <col:17, col:23> 'unsigned int'
|       |       | `-BinaryOperator 0x1ccd647dce8 <col:18, col:22> 'unsigned int' '+'
|       |       |   |-ImplicitCastExpr 0x1ccd647dcb8 <col:18> 'unsigned int' <LValueToRValue>
|       |       |   | `-DeclRefExpr 0x1ccd647dc70 <col:18> 'unsigned int' lvalue Var 0x1ccd647af08 'n' 'unsigned int'
|       |       |   `-ImplicitCastExpr 0x1ccd647dcd0 <col:22> 'unsigned int' <IntegralCast>
|       |       |     `-IntegerLiteral 0x1ccd647dc90 <col:22> 'int' 1
|       |       `-ImplicitCastExpr 0x1ccd647dd50 <col:27> 'unsigned int' <IntegralCast>
|       |         `-IntegerLiteral 0x1ccd647dd28 <col:27> 'int' 16
|       `-BinaryOperator 0x1ccd647dea0 <line:129:9, col:16> 'int' '='
|         |-UnaryOperator 0x1ccd647de38 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
|         | `-ImplicitCastExpr 0x1ccd647de20 <col:10> 'int *' <LValueToRValue>
|         |   `-DeclRefExpr 0x1ccd647de00 <col:10> 'int *' lvalue ParmVar 0x1ccd647ab50 'num' 'int *'
|         `-ImplicitCastExpr 0x1ccd647de88 <col:16> 'int' <IntegralCast>
|           `-ImplicitCastExpr 0x1ccd647de70 <col:16> 'unsigned int' <LValueToRValue>
|             `-DeclRefExpr 0x1ccd647de50 <col:16> 'unsigned int' lvalue Var 0x1ccd647af08 'n' 'unsigned int'
|-FunctionDecl 0x1ccd6486318 <line:137:1, line:170:1> line:137:13 invalid cfbr_encrypt_block 'void (const unsigned char *, unsigned char *, int, const void *, unsigned char *, int, int)' static
| |-ParmVarDecl 0x1ccd647df58 <col:32, col:53> col:53 used in 'const unsigned char *'
| |-ParmVarDecl 0x1ccd647dfd8 <col:57, col:72> col:72 used out 'unsigned char *'
| |-ParmVarDecl 0x1ccd647e058 <line:138:32, col:36> col:36 used nbits 'int'
| |-ParmVarDecl 0x1ccd6485fc0 <col:43, col:55> col:55 used key 'const void *'
| |-ParmVarDecl 0x1ccd6486090 <line:139:32, col:53> col:46 used ivec 'unsigned char *':'unsigned char *'
| |-ParmVarDecl 0x1ccd6486110 <col:56, col:60> col:60 used enc 'int'
| |-ParmVarDecl 0x1ccd6486190 <line:140:32, col:43> col:43 invalid block 'int'
| `-CompoundStmt 0x1ccd64840c8 <line:141:1, line:170:1>
|   |-DeclStmt 0x1ccd64865a8 <line:142:5, col:20>
|   | |-VarDecl 0x1ccd6486420 <col:5, col:9> col:9 used n 'int'
|   | |-VarDecl 0x1ccd64864a0 <col:5, col:12> col:12 used rem 'int'
|   | `-VarDecl 0x1ccd6486520 <col:5, col:17> col:17 used num 'int'
|   |-DeclStmt 0x1ccd6486758 <line:143:5, col:35>
|   | `-VarDecl 0x1ccd64866f0 <col:5, col:34> col:19 used ovec 'unsigned char [33]'
|   |-IfStmt 0x1ccd64868b8 <line:146:5, line:147:9>
|   | |-BinaryOperator 0x1ccd6486888 <line:146:9, col:31> 'int' '||'
|   | | |-BinaryOperator 0x1ccd64867e8 <col:9, col:18> 'int' '<='
|   | | | |-ImplicitCastExpr 0x1ccd64867d0 <col:9> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1ccd6486770 <col:9> 'int' lvalue ParmVar 0x1ccd647e058 'nbits' 'int'
|   | | | `-IntegerLiteral 0x1ccd64867a8 <col:18> 'int' 0
|   | | `-BinaryOperator 0x1ccd6486868 <col:23, col:31> 'int' '>'
|   | |   |-ImplicitCastExpr 0x1ccd6486850 <col:23> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x1ccd6486808 <col:23> 'int' lvalue ParmVar 0x1ccd647e058 'nbits' 'int'
|   | |   `-IntegerLiteral 0x1ccd6486828 <col:31> 'int' 128
|   | `-ReturnStmt 0x1ccd64868a8 <line:147:9>
|   |-CallExpr 0x1ccd6486a00 <line:150:5, col:26> 'void *'
|   | |-ImplicitCastExpr 0x1ccd64869e8 <col:5> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ccd64868d0 <col:5> 'void *(void *, const void *, unsigned long long)' Function 0x1ccd6405488 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   | |-ImplicitCastExpr 0x1ccd6486a50 <col:12> 'void *' <BitCast>
|   | | `-ImplicitCastExpr 0x1ccd6486a38 <col:12> 'unsigned char *' <ArrayToPointerDecay>
|   | |   `-DeclRefExpr 0x1ccd64868f0 <col:12> 'unsigned char [33]' lvalue Var 0x1ccd64866f0 'ovec' 'unsigned char [33]'
|   | |-ImplicitCastExpr 0x1ccd6486a80 <col:18> 'const void *' <BitCast>
|   | | `-ImplicitCastExpr 0x1ccd6486a68 <col:18> 'unsigned char *':'unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1ccd6486928 <col:18> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x1ccd6486090 'ivec' 'unsigned char *':'unsigned char *'
|   | `-ImplicitCastExpr 0x1ccd6486a98 <col:24> 'unsigned long long' <IntegralCast>
|   |   `-IntegerLiteral 0x1ccd6486960 <col:24> 'int' 16
|   |-BinaryOperator 0x1ccd6486c48 <line:153:5, col:25> 'int' '='
|   | |-DeclRefExpr 0x1ccd6486b28 <col:5> 'int' lvalue Var 0x1ccd6486520 'num' 'int'
|   | `-BinaryOperator 0x1ccd6486c28 <col:11, col:25> 'int' '/'
|   |   |-ParenExpr 0x1ccd6486be0 <col:11, col:21> 'int'
|   |   | `-BinaryOperator 0x1ccd6486bc0 <col:12, col:20> 'int' '+'
|   |   |   |-ImplicitCastExpr 0x1ccd6486ba8 <col:12> 'int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x1ccd6486b60 <col:12> 'int' lvalue ParmVar 0x1ccd647e058 'nbits' 'int'
|   |   |   `-IntegerLiteral 0x1ccd6486b80 <col:20> 'int' 7
|   |   `-IntegerLiteral 0x1ccd6486c00 <col:25> 'int' 8
|   |-IfStmt 0x1ccd64856c8 <line:154:5, line:159:53> has_else
|   | |-ImplicitCastExpr 0x1ccd6486ca0 <line:154:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1ccd6486c68 <col:9> 'int' lvalue ParmVar 0x1ccd6486110 'enc' 'int'
|   | |-ForStmt 0x1ccd64851a8 <line:155:9, line:156:53>
|   | | |-BinaryOperator 0x1ccd6486d18 <line:155:14, col:18> 'int' '='
|   | | | |-DeclRefExpr 0x1ccd6486cb8 <col:14> 'int' lvalue Var 0x1ccd6486420 'n' 'int'
|   | | | `-IntegerLiteral 0x1ccd6486cf0 <col:18> 'int' 0
|   | | |-<<<NULL>>>
|   | | |-BinaryOperator 0x1ccd6486da8 <col:21, col:25> 'int' '<'
|   | | | |-ImplicitCastExpr 0x1ccd6486d78 <col:21> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1ccd6486d38 <col:21> 'int' lvalue Var 0x1ccd6486420 'n' 'int'
|   | | | `-ImplicitCastExpr 0x1ccd6486d90 <col:25> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1ccd6486d58 <col:25> 'int' lvalue Var 0x1ccd6486520 'num' 'int'
|   | | |-UnaryOperator 0x1ccd6486de8 <col:30, col:32> 'int' prefix '++'
|   | | | `-DeclRefExpr 0x1ccd6486dc8 <col:32> 'int' lvalue Var 0x1ccd6486420 'n' 'int'
|   | | `-BinaryOperator 0x1ccd6485188 <line:156:13, col:53> 'unsigned char' '='
|   | |   |-ArraySubscriptExpr 0x1ccd6486e88 <col:13, col:18> 'unsigned char' lvalue
|   | |   | |-ImplicitCastExpr 0x1ccd6486e58 <col:13> 'unsigned char *' <LValueToRValue>
|   | |   | | `-DeclRefExpr 0x1ccd6486e00 <col:13> 'unsigned char *' lvalue ParmVar 0x1ccd647dfd8 'out' 'unsigned char *'
|   | |   | `-ImplicitCastExpr 0x1ccd6486e70 <col:17> 'int' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x1ccd6486e38 <col:17> 'int' lvalue Var 0x1ccd6486420 'n' 'int'
|   | |   `-ParenExpr 0x1ccd6485168 <col:22, col:53> 'unsigned char'
|   | |     `-BinaryOperator 0x1ccd6485148 <col:23, col:52> 'unsigned char' '='
|   | |       |-ArraySubscriptExpr 0x1ccd6486f60 <col:23, col:34> 'unsigned char' lvalue
|   | |       | |-ImplicitCastExpr 0x1ccd6486f48 <col:23> 'unsigned char *' <ArrayToPointerDecay>
|   | |       | | `-DeclRefExpr 0x1ccd6486ea8 <col:23> 'unsigned char [33]' lvalue Var 0x1ccd64866f0 'ovec' 'unsigned char [33]'
|   | |       | `-BinaryOperator 0x1ccd6486f28 <col:28, col:33> 'int' '+'
|   | |       |   |-IntegerLiteral 0x1ccd6486ec8 <col:28> 'int' 16
|   | |       |   `-ImplicitCastExpr 0x1ccd6486f10 <col:33> 'int' <LValueToRValue>
|   | |       |     `-DeclRefExpr 0x1ccd6486ef0 <col:33> 'int' lvalue Var 0x1ccd6486420 'n' 'int'
|   | |       `-ImplicitCastExpr 0x1ccd6485130 <col:38, col:52> 'unsigned char' <IntegralCast>
|   | |         `-BinaryOperator 0x1ccd6485110 <col:38, col:52> 'int' '^'
|   | |           |-ImplicitCastExpr 0x1ccd64850c8 <col:38, col:42> 'int' <IntegralCast>
|   | |           | `-ImplicitCastExpr 0x1ccd64850b0 <col:38, col:42> 'unsigned char' <LValueToRValue>
|   | |           |   `-ArraySubscriptExpr 0x1ccd6485000 <col:38, col:42> 'const unsigned char' lvalue
|   | |           |     |-ImplicitCastExpr 0x1ccd6484fd0 <col:38> 'const unsigned char *' <LValueToRValue>
|   | |           |     | `-DeclRefExpr 0x1ccd6486f80 <col:38> 'const unsigned char *' lvalue ParmVar 0x1ccd647df58 'in' 'const unsigned char *'
|   | |           |     `-ImplicitCastExpr 0x1ccd6484fe8 <col:41> 'int' <LValueToRValue>
|   | |           |       `-DeclRefExpr 0x1ccd6484fb0 <col:41> 'int' lvalue Var 0x1ccd6486420 'n' 'int'
|   | |           `-ImplicitCastExpr 0x1ccd64850f8 <col:46, col:52> 'int' <IntegralCast>
|   | |             `-ImplicitCastExpr 0x1ccd64850e0 <col:46, col:52> 'unsigned char' <LValueToRValue>
|   | |               `-ArraySubscriptExpr 0x1ccd6485090 <col:46, col:52> 'unsigned char' lvalue
|   | |                 |-ImplicitCastExpr 0x1ccd6485060 <col:46> 'unsigned char *':'unsigned char *' <LValueToRValue>
|   | |                 | `-DeclRefExpr 0x1ccd6485020 <col:46> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x1ccd6486090 'ivec' 'unsigned char *':'unsigned char *'
|   | |                 `-ImplicitCastExpr 0x1ccd6485078 <col:51> 'int' <LValueToRValue>
|   | |                   `-DeclRefExpr 0x1ccd6485040 <col:51> 'int' lvalue Var 0x1ccd6486420 'n' 'int'
|   | `-ForStmt 0x1ccd6485690 <line:158:9, line:159:53>
|   |   |-BinaryOperator 0x1ccd6485228 <line:158:14, col:18> 'int' '='
|   |   | |-DeclRefExpr 0x1ccd64851e0 <col:14> 'int' lvalue Var 0x1ccd6486420 'n' 'int'
|   |   | `-IntegerLiteral 0x1ccd6485200 <col:18> 'int' 0
|   |   |-<<<NULL>>>
|   |   |-BinaryOperator 0x1ccd64852b8 <col:21, col:25> 'int' '<'
|   |   | |-ImplicitCastExpr 0x1ccd6485288 <col:21> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1ccd6485248 <col:21> 'int' lvalue Var 0x1ccd6486420 'n' 'int'
|   |   | `-ImplicitCastExpr 0x1ccd64852a0 <col:25> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1ccd6485268 <col:25> 'int' lvalue Var 0x1ccd6486520 'num' 'int'
|   |   |-UnaryOperator 0x1ccd64852f8 <col:30, col:32> 'int' prefix '++'
|   |   | `-DeclRefExpr 0x1ccd64852d8 <col:32> 'int' lvalue Var 0x1ccd6486420 'n' 'int'
|   |   `-BinaryOperator 0x1ccd6485670 <line:159:13, col:53> 'unsigned char' '='
|   |     |-ArraySubscriptExpr 0x1ccd6485380 <col:13, col:18> 'unsigned char' lvalue
|   |     | |-ImplicitCastExpr 0x1ccd6485350 <col:13> 'unsigned char *' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1ccd6485310 <col:13> 'unsigned char *' lvalue ParmVar 0x1ccd647dfd8 'out' 'unsigned char *'
|   |     | `-ImplicitCastExpr 0x1ccd6485368 <col:17> 'int' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x1ccd6485330 <col:17> 'int' lvalue Var 0x1ccd6486420 'n' 'int'
|   |     `-ImplicitCastExpr 0x1ccd6485658 <col:22, col:53> 'unsigned char' <IntegralCast>
|   |       `-BinaryOperator 0x1ccd6485638 <col:22, col:53> 'int' '^'
|   |         |-ImplicitCastExpr 0x1ccd64855f0 <col:22, col:43> 'int' <IntegralCast>
|   |         | `-ParenExpr 0x1ccd6485540 <col:22, col:43> 'unsigned char'
|   |         |   `-BinaryOperator 0x1ccd6485520 <col:23, col:42> 'unsigned char' '='
|   |         |     |-ArraySubscriptExpr 0x1ccd6485458 <col:23, col:34> 'unsigned char' lvalue
|   |         |     | |-ImplicitCastExpr 0x1ccd6485440 <col:23> 'unsigned char *' <ArrayToPointerDecay>
|   |         |     | | `-DeclRefExpr 0x1ccd64853a0 <col:23> 'unsigned char [33]' lvalue Var 0x1ccd64866f0 'ovec' 'unsigned char [33]'
|   |         |     | `-BinaryOperator 0x1ccd6485420 <col:28, col:33> 'int' '+'
|   |         |     |   |-IntegerLiteral 0x1ccd64853c0 <col:28> 'int' 16
|   |         |     |   `-ImplicitCastExpr 0x1ccd6485408 <col:33> 'int' <LValueToRValue>
|   |         |     |     `-DeclRefExpr 0x1ccd64853e8 <col:33> 'int' lvalue Var 0x1ccd6486420 'n' 'int'
|   |         |     `-ImplicitCastExpr 0x1ccd6485508 <col:38, col:42> 'unsigned char' <LValueToRValue>
|   |         |       `-ArraySubscriptExpr 0x1ccd64854e8 <col:38, col:42> 'const unsigned char' lvalue
|   |         |         |-ImplicitCastExpr 0x1ccd64854b8 <col:38> 'const unsigned char *' <LValueToRValue>
|   |         |         | `-DeclRefExpr 0x1ccd6485478 <col:38> 'const unsigned char *' lvalue ParmVar 0x1ccd647df58 'in' 'const unsigned char *'
|   |         |         `-ImplicitCastExpr 0x1ccd64854d0 <col:41> 'int' <LValueToRValue>
|   |         |           `-DeclRefExpr 0x1ccd6485498 <col:41> 'int' lvalue Var 0x1ccd6486420 'n' 'int'
|   |         `-ImplicitCastExpr 0x1ccd6485620 <col:47, col:53> 'int' <IntegralCast>
|   |           `-ImplicitCastExpr 0x1ccd6485608 <col:47, col:53> 'unsigned char' <LValueToRValue>
|   |             `-ArraySubscriptExpr 0x1ccd64855d0 <col:47, col:53> 'unsigned char' lvalue
|   |               |-ImplicitCastExpr 0x1ccd64855a0 <col:47> 'unsigned char *':'unsigned char *' <LValueToRValue>
|   |               | `-DeclRefExpr 0x1ccd6485560 <col:47> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x1ccd6486090 'ivec' 'unsigned char *':'unsigned char *'
|   |               `-ImplicitCastExpr 0x1ccd64855b8 <col:52> 'int' <LValueToRValue>
|   |                 `-DeclRefExpr 0x1ccd6485580 <col:52> 'int' lvalue Var 0x1ccd6486420 'n' 'int'
|   |-BinaryOperator 0x1ccd64857a8 <line:161:5, col:19> 'int' '='
|   | |-DeclRefExpr 0x1ccd64856f0 <col:5> 'int' lvalue Var 0x1ccd64864a0 'rem' 'int'
|   | `-BinaryOperator 0x1ccd6485788 <col:11, col:19> 'int' '%'
|   |   |-ImplicitCastExpr 0x1ccd6485770 <col:11> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1ccd6485728 <col:11> 'int' lvalue ParmVar 0x1ccd647e058 'nbits' 'int'
|   |   `-IntegerLiteral 0x1ccd6485748 <col:19> 'int' 8
|   |-BinaryOperator 0x1ccd6485868 <line:162:5, col:19> 'int' '='
|   | |-DeclRefExpr 0x1ccd64857c8 <col:5> 'int' lvalue Var 0x1ccd6486520 'num' 'int'
|   | `-BinaryOperator 0x1ccd6485848 <col:11, col:19> 'int' '/'
|   |   |-ImplicitCastExpr 0x1ccd6485830 <col:11> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1ccd64857e8 <col:11> 'int' lvalue ParmVar 0x1ccd647e058 'nbits' 'int'
|   |   `-IntegerLiteral 0x1ccd6485808 <col:19> 'int' 8
|   `-IfStmt 0x1ccd64840a0 <line:163:5, line:167:75> has_else
|     |-BinaryOperator 0x1ccd64858e8 <line:163:9, col:16> 'int' '=='
|     | |-ImplicitCastExpr 0x1ccd64858d0 <col:9> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x1ccd6485888 <col:9> 'int' lvalue Var 0x1ccd64864a0 'rem' 'int'
|     | `-IntegerLiteral 0x1ccd64858a8 <col:16> 'int' 0
|     |-CallExpr 0x1ccd6485a30 <line:164:9, col:36> 'void *'
|     | |-ImplicitCastExpr 0x1ccd6485a18 <col:9> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|     | | `-DeclRefExpr 0x1ccd6485908 <col:9> 'void *(void *, const void *, unsigned long long)' Function 0x1ccd6405488 'memcpy' 'void *(void *, const void *, unsigned long long)'
|     | |-ImplicitCastExpr 0x1ccd6485a80 <col:16> 'void *' <BitCast>
|     | | `-ImplicitCastExpr 0x1ccd6485a68 <col:16> 'unsigned char *':'unsigned char *' <LValueToRValue>
|     | |   `-DeclRefExpr 0x1ccd6485928 <col:16> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x1ccd6486090 'ivec' 'unsigned char *':'unsigned char *'
|     | |-ImplicitCastExpr 0x1ccd6485a98 <col:22, col:29> 'const void *' <BitCast>
|     | | `-BinaryOperator 0x1ccd64859b8 <col:22, col:29> 'unsigned char *' '+'
|     | |   |-ImplicitCastExpr 0x1ccd6485988 <col:22> 'unsigned char *' <ArrayToPointerDecay>
|     | |   | `-DeclRefExpr 0x1ccd6485948 <col:22> 'unsigned char [33]' lvalue Var 0x1ccd64866f0 'ovec' 'unsigned char [33]'
|     | |   `-ImplicitCastExpr 0x1ccd64859a0 <col:29> 'int' <LValueToRValue>
|     | |     `-DeclRefExpr 0x1ccd6485968 <col:29> 'int' lvalue Var 0x1ccd6486520 'num' 'int'
|     | `-ImplicitCastExpr 0x1ccd6485ab0 <col:34> 'unsigned long long' <IntegralCast>
|     |   `-IntegerLiteral 0x1ccd64859d8 <col:34> 'int' 16
|     `-ForStmt 0x1ccd6484068 <line:166:9, line:167:75>
|       |-BinaryOperator 0x1ccd6485b10 <line:166:14, col:18> 'int' '='
|       | |-DeclRefExpr 0x1ccd6485ac8 <col:14> 'int' lvalue Var 0x1ccd6486420 'n' 'int'
|       | `-IntegerLiteral 0x1ccd6485ae8 <col:18> 'int' 0
|       |-<<<NULL>>>
|       |-BinaryOperator 0x1ccd6485b90 <col:21, col:25> 'int' '<'
|       | |-ImplicitCastExpr 0x1ccd6485b78 <col:21> 'int' <LValueToRValue>
|       | | `-DeclRefExpr 0x1ccd6485b30 <col:21> 'int' lvalue Var 0x1ccd6486420 'n' 'int'
|       | `-IntegerLiteral 0x1ccd6485b50 <col:25> 'int' 16
|       |-UnaryOperator 0x1ccd6485bd0 <col:29, col:31> 'int' prefix '++'
|       | `-DeclRefExpr 0x1ccd6485bb0 <col:31> 'int' lvalue Var 0x1ccd6486420 'n' 'int'
|       `-BinaryOperator 0x1ccd6484048 <line:167:13, col:75> 'unsigned char' '='
|         |-ArraySubscriptExpr 0x1ccd6485c58 <col:13, col:19> 'unsigned char' lvalue
|         | |-ImplicitCastExpr 0x1ccd6485c28 <col:13> 'unsigned char *':'unsigned char *' <LValueToRValue>
|         | | `-DeclRefExpr 0x1ccd6485be8 <col:13> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x1ccd6486090 'ivec' 'unsigned char *':'unsigned char *'
|         | `-ImplicitCastExpr 0x1ccd6485c40 <col:18> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x1ccd6485c08 <col:18> 'int' lvalue Var 0x1ccd6486420 'n' 'int'
|         `-ImplicitCastExpr 0x1ccd6484030 <col:23, col:75> 'unsigned char' <IntegralCast>
|           `-BinaryOperator 0x1ccd6484010 <col:23, col:75> 'int' '|'
|             |-BinaryOperator 0x1ccd6485dc8 <col:23, col:40> 'int' '<<'
|             | |-ImplicitCastExpr 0x1ccd6485d98 <col:23, col:35> 'int' <IntegralCast>
|             | | `-ImplicitCastExpr 0x1ccd6485d80 <col:23, col:35> 'unsigned char' <LValueToRValue>
|             | |   `-ArraySubscriptExpr 0x1ccd6485d40 <col:23, col:35> 'unsigned char' lvalue
|             | |     |-ImplicitCastExpr 0x1ccd6485d28 <col:23> 'unsigned char *' <ArrayToPointerDecay>
|             | |     | `-DeclRefExpr 0x1ccd6485c78 <col:23> 'unsigned char [33]' lvalue Var 0x1ccd64866f0 'ovec' 'unsigned char [33]'
|             | |     `-BinaryOperator 0x1ccd6485d08 <col:28, col:32> 'int' '+'
|             | |       |-ImplicitCastExpr 0x1ccd6485cd8 <col:28> 'int' <LValueToRValue>
|             | |       | `-DeclRefExpr 0x1ccd6485c98 <col:28> 'int' lvalue Var 0x1ccd6486420 'n' 'int'
|             | |       `-ImplicitCastExpr 0x1ccd6485cf0 <col:32> 'int' <LValueToRValue>
|             | |         `-DeclRefExpr 0x1ccd6485cb8 <col:32> 'int' lvalue Var 0x1ccd6486520 'num' 'int'
|             | `-ImplicitCastExpr 0x1ccd6485db0 <col:40> 'int' <LValueToRValue>
|             |   `-DeclRefExpr 0x1ccd6485d60 <col:40> 'int' lvalue Var 0x1ccd64864a0 'rem' 'int'
|             `-BinaryOperator 0x1ccd6483ff0 <col:46, col:75> 'int' '>>'
|               |-ImplicitCastExpr 0x1ccd6483fd8 <col:46, col:62> 'int' <IntegralCast>
|               | `-ImplicitCastExpr 0x1ccd6483fc0 <col:46, col:62> 'unsigned char' <LValueToRValue>
|               |   `-ArraySubscriptExpr 0x1ccd6485ef8 <col:46, col:62> 'unsigned char' lvalue
|               |     |-ImplicitCastExpr 0x1ccd6485ee0 <col:46> 'unsigned char *' <ArrayToPointerDecay>
|               |     | `-DeclRefExpr 0x1ccd6485de8 <col:46> 'unsigned char [33]' lvalue Var 0x1ccd64866f0 'ovec' 'unsigned char [33]'
|               |     `-BinaryOperator 0x1ccd6485ec0 <col:51, col:61> 'int' '+'
|               |       |-BinaryOperator 0x1ccd6485e78 <col:51, col:55> 'int' '+'
|               |       | |-ImplicitCastExpr 0x1ccd6485e48 <col:51> 'int' <LValueToRValue>
|               |       | | `-DeclRefExpr 0x1ccd6485e08 <col:51> 'int' lvalue Var 0x1ccd6486420 'n' 'int'
|               |       | `-ImplicitCastExpr 0x1ccd6485e60 <col:55> 'int' <LValueToRValue>
|               |       |   `-DeclRefExpr 0x1ccd6485e28 <col:55> 'int' lvalue Var 0x1ccd6486520 'num' 'int'
|               |       `-IntegerLiteral 0x1ccd6485e98 <col:61> 'int' 1
|               `-ParenExpr 0x1ccd6483fa0 <col:67, col:75> 'int'
|                 `-BinaryOperator 0x1ccd6485f78 <col:68, col:72> 'int' '-'
|                   |-IntegerLiteral 0x1ccd6485f18 <col:68> 'int' 8
|                   `-ImplicitCastExpr 0x1ccd6485f60 <col:72> 'int' <LValueToRValue>
|                     `-DeclRefExpr 0x1ccd6485f40 <col:72> 'int' lvalue Var 0x1ccd64864a0 'rem' 'int'
|-FunctionDecl 0x1ccd64845c8 <line:173:1, line:187:1> line:173:6 invalid CRYPTO_cfb128_1_encrypt 'void (const unsigned char *, unsigned char *, size_t, const void *, unsigned char *, int *, int, int)'
| |-ParmVarDecl 0x1ccd6484138 <col:30, col:51> col:51 used in 'const unsigned char *'
| |-ParmVarDecl 0x1ccd64841b8 <col:55, col:70> col:70 used out 'unsigned char *'
| |-ParmVarDecl 0x1ccd6484230 <line:174:30, col:37> col:37 used bits 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ccd64842b0 <col:43, col:55> col:55 used key 'const void *'
| |-ParmVarDecl 0x1ccd6484380 <line:175:30, col:51> col:44 used ivec 'unsigned char *':'unsigned char *'
| |-ParmVarDecl 0x1ccd6484400 <col:54, col:59> col:59 num 'int *'
| |-ParmVarDecl 0x1ccd6484480 <line:176:30, col:34> col:34 used enc 'int'
| |-ParmVarDecl 0x1ccd6484500 <col:39, col:50> col:50 invalid block 'int'
| `-CompoundStmt 0x1ccd64877f8 <line:177:1, line:187:1>
|   |-DeclStmt 0x1ccd6484738 <line:178:5, col:13>
|   | `-VarDecl 0x1ccd64846d0 <col:5, col:12> col:12 used n 'size_t':'unsigned long long'
|   |-DeclStmt 0x1ccd6484940 <line:179:5, col:29>
|   | |-VarDecl 0x1ccd64847f0 <col:5, col:22> col:19 used c 'unsigned char [1]'
|   | `-VarDecl 0x1ccd64848c0 <col:5, col:28> col:25 used d 'unsigned char [1]'
|   `-ForStmt 0x1ccd64877c0 <line:181:5, line:186:5>
|     |-BinaryOperator 0x1ccd64849d0 <line:181:10, col:14> 'size_t':'unsigned long long' '='
|     | |-DeclRefExpr 0x1ccd6484958 <col:10> 'size_t':'unsigned long long' lvalue Var 0x1ccd64846d0 'n' 'size_t':'unsigned long long'
|     | `-ImplicitCastExpr 0x1ccd64849b8 <col:14> 'size_t':'unsigned long long' <IntegralCast>
|     |   `-IntegerLiteral 0x1ccd6484990 <col:14> 'int' 0
|     |-<<<NULL>>>
|     |-BinaryOperator 0x1ccd6484a78 <col:17, col:21> 'int' '<'
|     | |-ImplicitCastExpr 0x1ccd6484a48 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|     | | `-DeclRefExpr 0x1ccd64849f0 <col:17> 'size_t':'unsigned long long' lvalue Var 0x1ccd64846d0 'n' 'size_t':'unsigned long long'
|     | `-ImplicitCastExpr 0x1ccd6484a60 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|     |   `-DeclRefExpr 0x1ccd6484a10 <col:21> 'size_t':'unsigned long long' lvalue ParmVar 0x1ccd6484230 'bits' 'size_t':'unsigned long long'
|     |-UnaryOperator 0x1ccd6484ab8 <col:27, col:29> 'size_t':'unsigned long long' prefix '++'
|     | `-DeclRefExpr 0x1ccd6484a98 <col:29> 'size_t':'unsigned long long' lvalue Var 0x1ccd64846d0 'n' 'size_t':'unsigned long long'
|     `-CompoundStmt 0x1ccd64877a0 <col:32, line:186:5>
|       |-BinaryOperator 0x1ccd6484ef8 <line:182:9, col:58> 'unsigned char' '='
|       | |-ArraySubscriptExpr 0x1ccd6484b48 <col:9, col:12> 'unsigned char' lvalue
|       | | |-ImplicitCastExpr 0x1ccd6484b30 <col:9> 'unsigned char *' <ArrayToPointerDecay>
|       | | | `-DeclRefExpr 0x1ccd6484ad0 <col:9> 'unsigned char [1]' lvalue Var 0x1ccd64847f0 'c' 'unsigned char [1]'
|       | | `-IntegerLiteral 0x1ccd6484b08 <col:11> 'int' 0
|       | `-ImplicitCastExpr 0x1ccd6484ee0 <col:16, col:58> 'unsigned char' <IntegralCast>
|       |   `-ConditionalOperator 0x1ccd6484eb0 <col:16, col:58> 'int'
|       |     |-ParenExpr 0x1ccd6484e40 <col:16, col:47> 'int'
|       |     | `-BinaryOperator 0x1ccd6484e20 <col:17, col:46> 'int' '&'
|       |     |   |-ImplicitCastExpr 0x1ccd6484e08 <col:17, col:25> 'int' <IntegralCast>
|       |     |   | `-ImplicitCastExpr 0x1ccd6484df0 <col:17, col:25> 'unsigned char' <LValueToRValue>
|       |     |   |   `-ArraySubscriptExpr 0x1ccd6484c50 <col:17, col:25> 'const unsigned char' lvalue
|       |     |   |     |-ImplicitCastExpr 0x1ccd6484c38 <col:17> 'const unsigned char *' <LValueToRValue>
|       |     |   |     | `-DeclRefExpr 0x1ccd6484b68 <col:17> 'const unsigned char *' lvalue ParmVar 0x1ccd6484138 'in' 'const unsigned char *'
|       |     |   |     `-BinaryOperator 0x1ccd6484c18 <col:20, col:24> 'unsigned long long' '/'
|       |     |   |       |-ImplicitCastExpr 0x1ccd6484be8 <col:20> 'size_t':'unsigned long long' <LValueToRValue>
|       |     |   |       | `-DeclRefExpr 0x1ccd6484ba0 <col:20> 'size_t':'unsigned long long' lvalue Var 0x1ccd64846d0 'n' 'size_t':'unsigned long long'
|       |     |   |       `-ImplicitCastExpr 0x1ccd6484c00 <col:24> 'unsigned long long' <IntegralCast>
|       |     |   |         `-IntegerLiteral 0x1ccd6484bc0 <col:24> 'int' 8
|       |     |   `-ParenExpr 0x1ccd6484dd0 <col:29, col:46> 'int'
|       |     |     `-BinaryOperator 0x1ccd6484db0 <col:30, col:45> 'int' '<<'
|       |     |       |-IntegerLiteral 0x1ccd6484c70 <col:30> 'int' 1
|       |     |       `-ParenExpr 0x1ccd6484d90 <col:35, col:45> 'unsigned long long'
|       |     |         `-BinaryOperator 0x1ccd6484d70 <col:36, col:44> 'unsigned long long' '-'
|       |     |           |-ImplicitCastExpr 0x1ccd6484d58 <col:36> 'unsigned long long' <IntegralCast>
|       |     |           | `-IntegerLiteral 0x1ccd6484c98 <col:36> 'int' 7
|       |     |           `-BinaryOperator 0x1ccd6484d38 <col:40, col:44> 'unsigned long long' '%'
|       |     |             |-ImplicitCastExpr 0x1ccd6484d08 <col:40> 'size_t':'unsigned long long' <LValueToRValue>
|       |     |             | `-DeclRefExpr 0x1ccd6484cc0 <col:40> 'size_t':'unsigned long long' lvalue Var 0x1ccd64846d0 'n' 'size_t':'unsigned long long'
|       |     |             `-ImplicitCastExpr 0x1ccd6484d20 <col:44> 'unsigned long long' <IntegralCast>
|       |     |               `-IntegerLiteral 0x1ccd6484ce0 <col:44> 'int' 8
|       |     |-IntegerLiteral 0x1ccd6484e60 <col:51> 'int' 128
|       |     `-IntegerLiteral 0x1ccd6484e88 <col:58> 'int' 0
|       `-BinaryOperator 0x1ccd6487780 <line:184:9, line:185:52> 'unsigned char' '='
|         |-ArraySubscriptExpr 0x1ccd6487160 <line:184:9, col:18> 'unsigned char' lvalue
|         | |-ImplicitCastExpr 0x1ccd6487148 <col:9> 'unsigned char *' <LValueToRValue>
|         | | `-DeclRefExpr 0x1ccd6487078 <col:9> 'unsigned char *' lvalue ParmVar 0x1ccd64841b8 'out' 'unsigned char *'
|         | `-BinaryOperator 0x1ccd6487128 <col:13, col:17> 'unsigned long long' '/'
|         |   |-ImplicitCastExpr 0x1ccd64870f8 <col:13> 'size_t':'unsigned long long' <LValueToRValue>
|         |   | `-DeclRefExpr 0x1ccd64870b0 <col:13> 'size_t':'unsigned long long' lvalue Var 0x1ccd64846d0 'n' 'size_t':'unsigned long long'
|         |   `-ImplicitCastExpr 0x1ccd6487110 <col:17> 'unsigned long long' <IntegralCast>
|         |     `-IntegerLiteral 0x1ccd64870d0 <col:17> 'int' 8
|         `-ImplicitCastExpr 0x1ccd6487768 <col:22, line:185:52> 'unsigned char' <IntegralCast>
|           `-BinaryOperator 0x1ccd6487748 <line:184:22, line:185:52> 'int' '|'
|             |-ParenExpr 0x1ccd64874b8 <line:184:22, col:69> 'int'
|             | `-BinaryOperator 0x1ccd6487498 <col:23, col:68> 'int' '&'
|             |   |-ImplicitCastExpr 0x1ccd6487480 <col:23, col:32> 'int' <IntegralCast>
|             |   | `-ImplicitCastExpr 0x1ccd6487468 <col:23, col:32> 'unsigned char' <LValueToRValue>
|             |   |   `-ArraySubscriptExpr 0x1ccd6487250 <col:23, col:32> 'unsigned char' lvalue
|             |   |     |-ImplicitCastExpr 0x1ccd6487238 <col:23> 'unsigned char *' <LValueToRValue>
|             |   |     | `-DeclRefExpr 0x1ccd6487180 <col:23> 'unsigned char *' lvalue ParmVar 0x1ccd64841b8 'out' 'unsigned char *'
|             |   |     `-BinaryOperator 0x1ccd6487218 <col:27, col:31> 'unsigned long long' '/'
|             |   |       |-ImplicitCastExpr 0x1ccd64871e8 <col:27> 'size_t':'unsigned long long' <LValueToRValue>
|             |   |       | `-DeclRefExpr 0x1ccd64871a0 <col:27> 'size_t':'unsigned long long' lvalue Var 0x1ccd64846d0 'n' 'size_t':'unsigned long long'
|             |   |       `-ImplicitCastExpr 0x1ccd6487200 <col:31> 'unsigned long long' <IntegralCast>
|             |   |         `-IntegerLiteral 0x1ccd64871c0 <col:31> 'int' 8
|             |   `-UnaryOperator 0x1ccd6487450 <col:36, col:68> 'int' prefix '~' cannot overflow
|             |     `-ParenExpr 0x1ccd6487430 <col:37, col:68> 'int'
|             |       `-BinaryOperator 0x1ccd6487410 <col:38, col:67> 'int' '<<'
|             |         |-IntegerLiteral 0x1ccd6487270 <col:38> 'int' 1
|             |         `-CStyleCastExpr 0x1ccd64873e8 <col:43, col:67> 'unsigned int' <IntegralCast>
|             |           `-ParenExpr 0x1ccd64873c8 <col:57, col:67> 'unsigned long long'
|             |             `-BinaryOperator 0x1ccd6487370 <col:58, col:66> 'unsigned long long' '-'
|             |               |-ImplicitCastExpr 0x1ccd6487358 <col:58> 'unsigned long long' <IntegralCast>
|             |               | `-IntegerLiteral 0x1ccd6487298 <col:58> 'int' 7
|             |               `-BinaryOperator 0x1ccd6487338 <col:62, col:66> 'unsigned long long' '%'
|             |                 |-ImplicitCastExpr 0x1ccd6487308 <col:62> 'size_t':'unsigned long long' <LValueToRValue>
|             |                 | `-DeclRefExpr 0x1ccd64872c0 <col:62> 'size_t':'unsigned long long' lvalue Var 0x1ccd64846d0 'n' 'size_t':'unsigned long long'
|             |                 `-ImplicitCastExpr 0x1ccd6487320 <col:66> 'unsigned long long' <IntegralCast>
|             |                   `-IntegerLiteral 0x1ccd64872e0 <col:66> 'int' 8
|             `-ParenExpr 0x1ccd6487728 <line:185:13, col:52> 'int'
|               `-BinaryOperator 0x1ccd6487708 <col:14, col:51> 'int' '>>'
|                 |-ParenExpr 0x1ccd64875d0 <col:14, col:26> 'int'
|                 | `-BinaryOperator 0x1ccd64875b0 <col:15, col:22> 'int' '&'
|                 |   |-ImplicitCastExpr 0x1ccd6487598 <col:15, col:18> 'int' <IntegralCast>
|                 |   | `-ImplicitCastExpr 0x1ccd6487580 <col:15, col:18> 'unsigned char' <LValueToRValue>
|                 |   |   `-ArraySubscriptExpr 0x1ccd6487538 <col:15, col:18> 'unsigned char' lvalue
|                 |   |     |-ImplicitCastExpr 0x1ccd6487520 <col:15> 'unsigned char *' <ArrayToPointerDecay>
|                 |   |     | `-DeclRefExpr 0x1ccd64874d8 <col:15> 'unsigned char [1]' lvalue Var 0x1ccd64848c0 'd' 'unsigned char [1]'
|                 |   |     `-IntegerLiteral 0x1ccd64874f8 <col:17> 'int' 0
|                 |   `-IntegerLiteral 0x1ccd6487558 <col:22> 'int' 128
|                 `-CStyleCastExpr 0x1ccd64876e0 <col:31, col:51> 'unsigned int' <IntegralCast>
|                   `-ParenExpr 0x1ccd64876c0 <col:45, col:51> 'unsigned long long'
|                     `-BinaryOperator 0x1ccd6487668 <col:46, col:50> 'unsigned long long' '%'
|                       |-ImplicitCastExpr 0x1ccd6487638 <col:46> 'size_t':'unsigned long long' <LValueToRValue>
|                       | `-DeclRefExpr 0x1ccd64875f0 <col:46> 'size_t':'unsigned long long' lvalue Var 0x1ccd64846d0 'n' 'size_t':'unsigned long long'
|                       `-ImplicitCastExpr 0x1ccd6487650 <col:50> 'unsigned long long' <IntegralCast>
|                         `-IntegerLiteral 0x1ccd6487610 <col:50> 'int' 8
`-FunctionDecl 0x1ccd6487ce0 <line:189:1, line:198:1> line:189:6 invalid CRYPTO_cfb128_8_encrypt 'void (const unsigned char *, unsigned char *, size_t, const void *, unsigned char *, int *, int, int)'
  |-ParmVarDecl 0x1ccd6487850 <col:30, col:51> col:51 used in 'const unsigned char *'
  |-ParmVarDecl 0x1ccd64878d0 <col:55, col:70> col:70 used out 'unsigned char *'
  |-ParmVarDecl 0x1ccd6487948 <line:190:30, col:37> col:37 used length 'size_t':'unsigned long long'
  |-ParmVarDecl 0x1ccd64879c8 <col:45, col:57> col:57 used key 'const void *'
  |-ParmVarDecl 0x1ccd6487a98 <line:191:30, col:51> col:44 used ivec 'unsigned char *':'unsigned char *'
  |-ParmVarDecl 0x1ccd6487b18 <col:54, col:59> col:59 num 'int *'
  |-ParmVarDecl 0x1ccd6487b98 <line:192:30, col:34> col:34 used enc 'int'
  |-ParmVarDecl 0x1ccd6487c18 <col:39, col:50> col:50 invalid block 'int'
  `-CompoundStmt 0x1ccd64801c8 <line:193:1, line:198:1>
    `-DeclStmt 0x1ccd6487e50 <line:194:5, col:13>
      `-VarDecl 0x1ccd6487de8 <col:5, col:12> col:12 used n 'size_t':'unsigned long long'
