TranslationUnitDecl 0x24267f5cb38 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x24267f5d3d0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x24267f5d0d0 '__int128'
|-TypedefDecl 0x24267f5d440 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x24267f5d0f0 'unsigned __int128'
|-TypedefDecl 0x24267f5d778 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x24267f5d530 'struct __NSConstantString_tag'
|   `-Record 0x24267f5d498 '__NSConstantString_tag'
|-TypedefDecl 0x24267f5d7e8 <<invalid sloc>> <invalid sloc> implicit referenced size_t 'unsigned long long'
| `-BuiltinType 0x24267f5cd10 'unsigned long long'
|-TypedefDecl 0x24267f5d880 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x24267f5d840 'char *'
|   `-BuiltinType 0x24267f5cbd0 'char'
|-TypedefDecl 0x24267f5d8f0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x24267f5d840 'char *'
|   `-BuiltinType 0x24267f5cbd0 'char'
|-TypedefDecl 0x24267f5d960 <.//openssl//file_jk/before\crypto\modes/modes_lcl.h:13:1, col:17> col:17 i64 'long long'
| `-BuiltinType 0x24267f5cc70 'long long'
|-TypedefDecl 0x24267f5d9d0 <line:14:1, col:26> col:26 referenced u64 'unsigned long long'
| `-BuiltinType 0x24267f5cd10 'unsigned long long'
|-TypedefDecl 0x24267f5da40 <line:26:1, col:22> col:22 referenced u32 'unsigned int'
| `-BuiltinType 0x24267f5ccd0 'unsigned int'
|-TypedefDecl 0x24267f5dab0 <line:27:1, col:23> col:23 referenced u8 'unsigned char'
| `-BuiltinType 0x24267f5cc90 'unsigned char'
|-RecordDecl 0x24269a22f60 <line:94:32, line:96:1> line:94:32 struct definition
| |-FieldDecl 0x24269a23050 <line:95:5, col:9> col:9 hi 'u64':'unsigned long long'
| `-FieldDecl 0x24269a230b8 <col:5, col:13> col:13 lo 'u64':'unsigned long long'
|-TypedefDecl 0x24269a23168 <line:94:24, line:96:3> col:3 referenced u128 'struct u128':'u128'
| `-ElaboratedType 0x24269a23110 'struct u128' sugar
|   `-RecordType 0x24269a23000 'u128'
|     `-Record 0x24269a22f60 ''
|-RecordDecl 0x24269a231d8 <line:107:1, line:130:1> line:107:8 invalid struct gcm128_context definition
| |-RecordDecl 0x24269a23290 <line:109:5, line:114:5> line:109:5 union definition
| | |-FieldDecl 0x24269a23428 <line:110:9, col:16> col:13 u 'u64 [2]'
| | |-FieldDecl 0x24269a23578 <line:111:9, col:16> col:13 d 'u32 [4]'
| | |-FieldDecl 0x24269a236c8 <line:112:9, col:16> col:12 c 'u8 [16]'
| | `-FieldDecl 0x24269a23848 <line:113:9, col:37> col:16 t 'size_t [2]'
| |-FieldDecl 0x24269a238f8 <line:109:5, line:114:7> col:7 Yi 'union (anonymous union at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x24269a23970 <line:109:5, line:114:11> col:11 EKi 'union (anonymous union at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x24269a239e8 <line:109:5, line:114:16> col:16 EK0 'union (anonymous union at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x24269a23a60 <line:109:5, line:114:21> col:21 len 'union (anonymous union at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x24269a23ad8 <line:109:5, line:114:26> col:26 Xi 'union (anonymous union at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x24269a23b50 <line:109:5, line:114:30> col:30 H 'union (anonymous union at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x24269a23d08 <line:122:5, col:19> col:10 Htable 'u128 [16]'
| |-FieldDecl 0x24269a251f8 <line:123:5, col:52> col:12 gmult 'void (*)(u64 *, const u128 *)'
| |-FieldDecl 0x24269a25708 <line:124:5, line:125:30> line:124:12 ghash 'void (*)(u64 *, const u128 *, const u8 *, size_t)'
| |-FieldDecl 0x24269a25778 <line:127:5, col:18> col:18 mres 'unsigned int'
| |-FieldDecl 0x24269a257e8 <col:5, col:24> col:24 ares 'unsigned int'
| |-FieldDecl 0x24269a25858 <line:128:5, col:16> col:16 invalid block 'int'
| `-FieldDecl 0x24269a258c8 <line:129:5, col:11> col:11 key 'void *'
|-RecordDecl 0x24269a25988 <line:132:1, line:135:1> line:132:8 invalid struct xts128_context definition
| |-FieldDecl 0x24269a25a58 <line:133:5, col:11> col:11 key1 'void *'
| |-FieldDecl 0x24269a25ac8 <col:5, col:18> col:18 key2 'void *'
| |-FieldDecl 0x24269a25b38 <line:134:5, col:16> col:16 invalid block1 'int'
| `-FieldDecl 0x24269a25ba8 <col:5, col:24> col:24 invalid block2 'int'
|-RecordDecl 0x24269a25c00 <line:137:1, line:145:1> line:137:8 invalid struct ccm128_context definition
| |-RecordDecl 0x24269a25cc0 <line:138:5, line:141:5> line:138:5 union definition
| | |-FieldDecl 0x24269a25de0 <line:139:9, col:16> col:13 u 'u64 [2]'
| | `-FieldDecl 0x24269a25e98 <line:140:9, col:16> col:12 c 'u8 [16]'
| |-FieldDecl 0x24269a1ff30 <line:138:5, line:141:7> col:7 nonce 'union (anonymous union at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:138:5)':'union ccm128_context::(anonymous at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:138:5)'
| |-FieldDecl 0x24269a1ffa8 <line:138:5, line:141:14> col:14 cmac 'union (anonymous union at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:138:5)':'union ccm128_context::(anonymous at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:138:5)'
| |-FieldDecl 0x24269a20010 <line:142:5, col:9> col:9 blocks 'u64':'unsigned long long'
| |-FieldDecl 0x24269a20080 <line:143:5, col:16> col:16 invalid block 'int'
| `-FieldDecl 0x24269a200f0 <line:144:5, col:11> col:11 key 'void *'
|-RecordDecl 0x24269a201a0 <line:149:9, line:152:1> line:149:9 union definition
| |-FieldDecl 0x24269a202c0 <line:150:5, col:12> col:9 a 'u64 [2]'
| `-FieldDecl 0x24269a20380 <line:151:5, col:23> col:19 c 'unsigned char [16]'
|-TypedefDecl 0x24269a20438 <line:149:1, line:152:3> col:3 referenced OCB_BLOCK 'union OCB_BLOCK':'OCB_BLOCK'
| `-ElaboratedType 0x24269a203e0 'union OCB_BLOCK' sugar
|   `-RecordType 0x24269a20240 'OCB_BLOCK'
|     `-Record 0x24269a201a0 ''
|-RecordDecl 0x24269a204a8 <line:163:1, line:185:1> line:163:8 invalid struct ocb128_context definition
| |-FieldDecl 0x24269a20578 <line:165:5, col:16> col:16 invalid encrypt 'int'
| |-FieldDecl 0x24269a205e8 <line:166:5, col:16> col:16 invalid decrypt 'int'
| |-FieldDecl 0x24269a20658 <line:167:5, col:11> col:11 keyenc 'void *'
| |-FieldDecl 0x24269a206c8 <line:168:5, col:11> col:11 keydec 'void *'
| |-FieldDecl 0x24269a20738 <line:169:5, col:14> col:14 invalid stream 'int'
| |-FieldDecl 0x24269a207a0 <line:171:5, col:12> col:12 l_index 'size_t':'unsigned long long'
| |-FieldDecl 0x24269a20808 <line:172:5, col:12> col:12 max_l_index 'size_t':'unsigned long long'
| |-FieldDecl 0x24269a20890 <line:173:5, col:15> col:15 l_star 'OCB_BLOCK':'OCB_BLOCK'
| |-FieldDecl 0x24269a208f8 <line:174:5, col:15> col:15 l_dollar 'OCB_BLOCK':'OCB_BLOCK'
| |-FieldDecl 0x24269a209b8 <line:175:5, col:16> col:16 l 'OCB_BLOCK *'
| |-RecordDecl 0x24269a20a10 <line:177:5, line:184:5> line:177:5 struct definition
| | |-FieldDecl 0x24269a20ae0 <line:178:9, col:13> col:13 blocks_hashed 'u64':'unsigned long long'
| | |-FieldDecl 0x24269a20b48 <line:179:9, col:13> col:13 blocks_processed 'u64':'unsigned long long'
| | |-FieldDecl 0x24269a20bb0 <line:180:9, col:19> col:19 offset_aad 'OCB_BLOCK':'OCB_BLOCK'
| | |-FieldDecl 0x24269a20c18 <line:181:9, col:19> col:19 sum 'OCB_BLOCK':'OCB_BLOCK'
| | |-FieldDecl 0x24269a20c80 <line:182:9, col:19> col:19 offset 'OCB_BLOCK':'OCB_BLOCK'
| | `-FieldDecl 0x24269a20ce8 <line:183:9, col:19> col:19 checksum 'OCB_BLOCK':'OCB_BLOCK'
| `-FieldDecl 0x24269a20d98 <line:177:5, line:184:7> col:7 sess 'struct (anonymous struct at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:177:5)':'struct ocb128_context::(anonymous at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:177:5)'
|-TypedefDecl 0x24269a20e58 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x24267f5cd10 'unsigned long long'
|-TypedefDecl 0x24269a20ec8 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x24267f5d840 'char *'
|   `-BuiltinType 0x24267f5cbd0 'char'
|-FunctionDecl 0x24269b2aa10 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x24269b2aab0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x24269b2ab20 <col:21> Implicit
|-FunctionDecl 0x24269b2ab78 prev 0x24269b2aa10 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x24269b2a8a8 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x24269b2ac68 <col:21> Inherited Implicit
|-TypedefDecl 0x24269b2aca8 prev 0x24267f5d7e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x24267f5cd10 'unsigned long long'
|-TypedefDecl 0x24269b2ad50 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x24269b2ad20 'size_t' sugar
|   |-Typedef 0x24269b2aca8 'size_t'
|   `-BuiltinType 0x24267f5cd10 'unsigned long long'
|-TypedefDecl 0x24269b2adc0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x24267f5cc70 'long long'
|-TypedefDecl 0x24269b2ae30 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x24267f5cc70 'long long'
|-TypedefDecl 0x24269b2aea0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x24267f5ccb0 'unsigned short'
|-TypedefDecl 0x24269b2af10 <line:541:1, col:24> col:24 wint_t 'unsigned short'
| `-BuiltinType 0x24267f5ccb0 'unsigned short'
|-TypedefDecl 0x24269b2af80 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x24267f5ccb0 'unsigned short'
|-TypedefDecl 0x24269b2aff0 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x24267f5cc30 'int'
|-TypedefDecl 0x24269b2b060 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x24267f5cc50 'long'
|-TypedefDecl 0x24269b2b0d0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x24267f5cc70 'long long'
|-TypedefDecl 0x24269b2b160 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x24269b2b130 '__time64_t' sugar
|   |-Typedef 0x24269b2b0d0 '__time64_t'
|   `-BuiltinType 0x24267f5cc70 'long long'
|-FunctionDecl 0x24269b2b2d8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x24269b2b4f8 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x24269b36b70 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x24269b2b638 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x24269b2b6b0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x24269b2b728 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x24269b2b7a8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x24269b36910 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x24269b36c50 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x24269b36d10 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x24269b36e80 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x24269b36e30 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x24269b36dd0 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x24269b36cf0 'struct threadlocaleinfostruct'
|       `-Record 0x24269b3e960 'threadlocaleinfostruct'
|-TypedefDecl 0x24269b36f90 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x24269b36f40 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x24269b36ee0 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x24269b36db0 'struct threadmbcinfostruct'
|       `-Record 0x24269b36d10 'threadmbcinfostruct'
|-RecordDecl 0x24269b36fe8 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x24269b370a0 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x24269b37160 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x24269b371f0 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x24269b37280 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x24269b37338 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x24269b372e0 'struct localeinfo_struct' sugar
|   `-RecordType 0x24269b37140 'struct localeinfo_struct'
|     `-Record 0x24269b370a0 'localeinfo_struct'
|-TypedefDecl 0x24269b37410 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x24269b373c0 'struct localeinfo_struct *'
|   `-ElaboratedType 0x24269b372e0 'struct localeinfo_struct' sugar
|     `-RecordType 0x24269b37140 'struct localeinfo_struct'
|       `-Record 0x24269b370a0 'localeinfo_struct'
|-RecordDecl 0x24269b37488 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x24269b37540 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x24269b375b8 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x24269b37678 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x24269b37710 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x24269b37780 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x24269b37838 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x24269b377e0 'struct localerefcount' sugar
|   `-RecordType 0x24269b37520 'struct localerefcount'
|     `-Record 0x24269b37488 'localerefcount'
|-RecordDecl 0x24269b3e960 prev 0x24269b36c50 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x24269b3e9e0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x24269b3ea58 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x24269b3eac8 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x24269b3eb38 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x24269b3eba8 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x24269b3ed68 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x24269b3edd8 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x24269b3ee48 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x24269b3eeb8 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x24269b3ef28 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x24269b3ef98 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x24269b3eff0 parent 0x24267f5cb38 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x24269b3f180 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x24269b3f1f0 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x24269b3f260 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x24269b3f2d0 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x24269b3f340 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x24269b3f3b0 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x24269b3f4c0 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x24269b3f5f8 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x24269b3f6a8 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x24269b3f650 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x24269b36cf0 'struct threadlocaleinfostruct'
|     `-Record 0x24269b3e960 'threadlocaleinfostruct'
|-FunctionDecl 0x24269b41b20 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:47:9, col:142> col:25 _memccpy 'void *(void *, const void *, int, size_t) __attribute__((cdecl))':'void *(void *, const void *, int, size_t)'
| |-ParmVarDecl 0x24269b3f730 <col:69, col:76> col:76 _Dst 'void *'
| |-ParmVarDecl 0x24269b3f7e0 <col:87, col:100> col:100 _Src 'const void *'
| |-ParmVarDecl 0x24269b3f860 <col:111, col:115> col:115 _Val 'int'
| `-ParmVarDecl 0x24269b3f8d8 <col:126, col:133> col:133 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x24269b41ee8 <line:48:54> col:54 implicit memchr 'void *(const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x24269b41f88 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x24269b41ff0 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x24269b42058 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x24269b420d8 prev 0x24269b41ee8 <col:38, col:150> col:54 memchr 'void *(const void *, int, unsigned long long)'
| |-ParmVarDecl 0x24269b41c10 <col:94, col:107> col:107 _Buf 'const void *'
| |-ParmVarDecl 0x24269b41c90 <col:119, col:123> col:123 _Val 'int'
| `-ParmVarDecl 0x24269b41d08 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x24269b42498 <line:49:24, col:162> col:40 _memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x24269b421c0 <col:77, col:90> col:90 _Buf1 'const void *'
| |-ParmVarDecl 0x24269b42240 <col:125, col:138> col:138 _Buf2 'const void *'
| `-ParmVarDecl 0x24269b422b8 <col:150, col:157> col:157 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x24269b439b0 <line:50:24, col:192> col:40 _memicmp_l 'int (const void *, const void *, size_t, _locale_t) __attribute__((cdecl))':'int (const void *, const void *, size_t, _locale_t)'
| |-ParmVarDecl 0x24269b42580 <col:79, col:92> col:92 _Buf1 'const void *'
| |-ParmVarDecl 0x24269b42600 <col:127, col:140> col:140 _Buf2 'const void *'
| |-ParmVarDecl 0x24269b42678 <col:152, col:159> col:159 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x24269b42710 <col:175, col:185> col:185 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24269b43cb8 <line:51:32> col:32 implicit memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x24269b43d58 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x24269b43dc0 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x24269b43e28 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x24269b43ea8 prev 0x24269b43cb8 <col:16, col:144> col:32 memcmp 'int (const void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x24269b43aa0 <col:63, col:76> col:76 _Buf1 'const void *'
| |-ParmVarDecl 0x24269b43b20 <col:107, col:120> col:120 _Buf2 'const void *'
| `-ParmVarDecl 0x24269b43b98 <col:132, col:139> col:139 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x24269b44268 <line:55:17> col:17 implicit memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x24269b44308 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x24269b44370 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x24269b443d8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x24269b44458 prev 0x24269b44268 <col:1, col:127> col:17 memcpy 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x24269b43f90 <col:54, col:61> col:61 _Dst 'void *'
| |-ParmVarDecl 0x24269b44010 <col:91, col:104> col:104 _Src 'const void *'
| `-ParmVarDecl 0x24269b44088 <col:115, col:122> col:122 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x24269b448f8 <line:57:9, col:191> col:26 memcpy_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x24269b44568 <col:82, col:89> col:89 _Dst 'void *'
| |-ParmVarDecl 0x24269b44600 <col:100, col:108> col:108 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x24269b44680 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x24269b446f8 <col:174, col:182> col:182 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x24269b3cc68 <line:94:25> col:25 implicit used memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x24269b3cd08 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x24269b3cd70 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x24269b3cdd8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x24269b3ce58 prev 0x24269b3cc68 <col:9, col:107> col:25 used memset 'void *(void *, int, unsigned long long)'
| |-ParmVarDecl 0x24269b3c990 <col:62, col:69> col:69 _Dst 'void *'
| |-ParmVarDecl 0x24269b3ca10 <col:80, col:84> col:84 _Val 'int'
| `-ParmVarDecl 0x24269b3ca88 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x24269b3d2d8 <line:98:57> col:57 implicit memccpy 'void *(void *, const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x24269b3d378 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x24269b3d3e0 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x24269b3d448 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x24269b3d4b0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x24269b3d538 prev 0x24269b3d2d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:98:187> col:57 memccpy 'void *(void *, const void *, int, unsigned long long)'
| |-ParmVarDecl 0x24269b3d020 <col:95, col:102> col:102 _Dst 'void *'
| |-ParmVarDecl 0x24269b3d0a0 <col:136, col:149> col:149 _Src 'const void *'
| |-ParmVarDecl 0x24269b3d120 <col:160, col:164> col:164 _Val 'int'
| |-ParmVarDecl 0x24269b3d198 <col:175, col:182> col:182 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x24269b3d5f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memccpy. See online help for details." ""
|-FunctionDecl 0x24269b40a20 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:99:190> col:69 memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x24269b3d7c0 <col:105, col:118> col:118 _Buf1 'const void *'
| |-ParmVarDecl 0x24269b3d840 <col:153, col:166> col:166 _Buf2 'const void *'
| |-ParmVarDecl 0x24269b3d8b8 <col:178, col:185> col:185 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x24269b40ad8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memicmp. See online help for details." ""
|-FunctionDecl 0x24269b40ed0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:105:40, col:144> col:56 _strset_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x24269b40c00 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x24269b40c78 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| `-ParmVarDecl 0x24269b40cf8 <col:134, col:138> col:138 _Value 'int'
|-FunctionDecl 0x24269b412a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:107:88 _strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x24269b410b0 <col:108, col:114> col:114 _Dest 'char *'
| |-ParmVarDecl 0x24269b41130 <col:126, col:131> col:131 _Value 'int'
| `-DeprecatedAttr 0x24269b41350 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24269b41760 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:109:40, col:158> col:56 strcpy_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x24269b41498 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x24269b41510 <col:112, col:120> col:120 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x24269b41590 <col:141, col:154> col:154 _Src 'const char *'
|-FunctionDecl 0x24269b42b90 <line:112:88> col:88 implicit strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x24269b42c30 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x24269b42c98 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x24269b42d10 prev 0x24269b42b90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:112:88 strcpy 'char *(char *, const char *)'
| |-ParmVarDecl 0x24269b429a0 <col:142, col:148> col:148 _Dest 'char *'
| |-ParmVarDecl 0x24269b42a20 <col:162, col:176> col:176 _Source 'const char *'
| `-DeprecatedAttr 0x24269b42dc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24269b43118 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:114:40, col:161> col:56 strcat_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x24269b42f08 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x24269b42f80 <col:115, col:123> col:123 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x24269b43000 <col:144, col:157> col:157 _Src 'const char *'
|-FunctionDecl 0x24269b43440 <line:118:88> col:88 implicit strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x24269b434e0 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x24269b43548 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x24269b435c0 prev 0x24269b43440 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:118:88 strcat 'char *(char *, const char *)'
| |-ParmVarDecl 0x24269b432c0 <col:170, col:176> col:176 _Dest 'char *'
| |-ParmVarDecl 0x24269b43340 <col:190, col:204> col:204 _Source 'const char *'
| `-DeprecatedAttr 0x24269b43670 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24269b449c0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:120:32> col:32 implicit strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x24269b44a60 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x24269b44ac8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x24269b44b40 prev 0x24269b449c0 <col:16, col:91> col:32 strcmp 'int (const char *, const char *)'
| |-ParmVarDecl 0x24269b437b8 <col:46, col:59> col:59 _Str1 'const char *'
| `-ParmVarDecl 0x24269b43838 <col:73, col:86> col:86 _Str2 'const char *'
|-FunctionDecl 0x24269b44d90 <line:121:32> col:32 implicit strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x24269b44e30 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x24269b44ea0 prev 0x24269b44d90 <col:16, col:63> col:32 strlen 'unsigned long long (const char *)'
| `-ParmVarDecl 0x24269b44c20 <col:46, col:59> col:59 _Str 'const char *'
|-FunctionDecl 0x24269b45198 <line:125:1, col:92> col:17 used strnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x24269b44f78 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x24269b44ff0 <col:76, col:83> col:83 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x24269b453e8 <line:127:16, line:133:1> line:130:19 strnlen_s 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' static inline
| |-ParmVarDecl 0x24269b45278 <col:56, col:69> col:69 used _Str 'const char *'
| |-ParmVarDecl 0x24269b452f0 <col:80, col:87> col:87 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x24269b45718 <line:131:1, line:133:1>
|   `-ReturnStmt 0x24269b45708 <line:132:5, col:51>
|     `-ConditionalOperator 0x24269b456d8 <col:12, col:51> 'unsigned long long'
|       |-ParenExpr 0x24269b45548 <col:12, col:20> 'int'
|       | `-BinaryOperator 0x24269b45528 <col:13, col:19> 'int' '=='
|       |   |-ImplicitCastExpr 0x24269b454f8 <col:13> 'const char *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x24269b454b0 <col:13> 'const char *' lvalue ParmVar 0x24269b45278 '_Str' 'const char *'
|       |   `-ImplicitCastExpr 0x24269b45510 <col:19> 'const char *' <NullToPointer>
|       |     `-IntegerLiteral 0x24269b454d0 <col:19> 'int' 0
|       |-ImplicitCastExpr 0x24269b456c0 <col:24> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x24269b45568 <col:24> 'int' 0
|       `-CallExpr 0x24269b45660 <col:28, col:51> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x24269b45648 <col:28> 'size_t (*)(const char *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x24269b45590 <col:28> 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' Function 0x24269b45198 'strnlen' 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
|         |-ImplicitCastExpr 0x24269b45690 <col:36> 'const char *' <LValueToRValue>
|         | `-DeclRefExpr 0x24269b455b0 <col:36> 'const char *' lvalue ParmVar 0x24269b45278 '_Str' 'const char *'
|         `-ImplicitCastExpr 0x24269b456a8 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x24269b455d0 <col:42> 'size_t':'unsigned long long' lvalue ParmVar 0x24269b452f0 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x24269b45a18 <line:136:28, col:209> col:44 memmove_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x24269b45748 <col:100, col:107> col:107 _Dst 'void *'
| |-ParmVarDecl 0x24269b457c0 <col:118, col:126> col:126 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x24269b45840 <col:168, col:181> col:181 _Src 'const void *'
| `-ParmVarDecl 0x24269b458b8 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x24269b45d20 <line:139:67> col:67 implicit memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x24269b45dc0 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x24269b45e28 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x24269b45e90 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x24269b45f10 prev 0x24269b45d20 <col:51, col:186> col:67 memmove 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x24269b45b08 <col:109, col:116> col:116 _Dst 'void *'
| |-ParmVarDecl 0x24269b45b88 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x24269b45c00 <col:174, col:181> col:181 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x24269b46148 <line:146:24, col:76> col:40 _strdup 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| `-ParmVarDecl 0x24269b45ff8 <col:59, col:72> col:72 _Src 'const char *'
|-FunctionDecl 0x24269b46410 <line:152:54> col:54 implicit strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x24269b464b0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x24269b46518 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x24269b46590 prev 0x24269b46410 <col:38, col:100> col:54 strchr 'char *(const char *, int)'
| |-ParmVarDecl 0x24269b46220 <col:68, col:81> col:81 _Str 'const char *'
| `-ParmVarDecl 0x24269b462a0 <col:92, col:96> col:96 _Val 'int'
|-FunctionDecl 0x24269b467f0 <line:153:24, col:103> col:40 _stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x24269b46670 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x24269b466f0 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x24269b46a60 <line:154:24, col:103> col:40 _strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x24269b468d0 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x24269b46950 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x24269b46e18 <line:155:24, col:133> col:40 _stricmp_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x24269b46b40 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x24269b46bc0 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x24269b46c38 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24269b47080 <line:156:24, col:103> col:40 strcoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x24269b46f00 <col:56, col:69> col:69 _Str1 'const char *'
| `-ParmVarDecl 0x24269b46f80 <col:84, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x24269b47378 <line:157:24, col:133> col:40 _strcoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x24269b47160 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x24269b471e0 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x24269b47258 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24269b475e0 <line:158:24, col:104> col:40 _stricoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x24269b47460 <col:58, col:71> col:71 _Str1 'const char *'
| `-ParmVarDecl 0x24269b474e0 <col:86, col:99> col:99 _Str2 'const char *'
|-FunctionDecl 0x24269b478d8 <line:159:24, col:134> col:40 _stricoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x24269b476c0 <col:60, col:73> col:73 _Str1 'const char *'
| |-ParmVarDecl 0x24269b47740 <col:88, col:101> col:101 _Str2 'const char *'
| `-ParmVarDecl 0x24269b477b8 <col:117, col:127> col:127 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24269b025b8 <line:160:24, col:167> col:40 _strncoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x24269b022e0 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x24269b02360 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x24269b023d8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x24269b02a20 <line:161:24, col:195> col:40 _strncoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x24269b026a0 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x24269b02720 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x24269b02798 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x24269b02810 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24269b02d28 <line:162:24, col:167> col:40 _strnicoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x24269b02b10 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x24269b02b90 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x24269b02c08 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x24269b030c0 <line:163:24, col:196> col:40 _strnicoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x24269b02e10 <col:80, col:93> col:93 _Str1 'const char *'
| |-ParmVarDecl 0x24269b02e90 <col:127, col:140> col:140 _Str2 'const char *'
| |-ParmVarDecl 0x24269b02f08 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x24269b02f80 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24269b98ff8 <line:164:40> col:40 implicit strcspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x24269b99098 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x24269b99100 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x24269b99178 prev 0x24269b98ff8 <col:24, col:104> col:40 strcspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x24269b031b0 <col:56, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x24269b03230 <col:83, col:96> col:96 _Control 'const char *'
|-FunctionDecl 0x24269b99430 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:165:118> col:77 _strerror 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x24269b99350 <col:98, col:111> col:111 _ErrMsg 'const char *'
| `-DeprecatedAttr 0x24269b994d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24269b998b0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:166:28, col:155> col:44 _strerror_s 'errno_t (char *, size_t, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *)'
| |-ParmVarDecl 0x24269b99620 <col:85, col:92> col:92 _Buf 'char *'
| |-ParmVarDecl 0x24269b99698 <col:103, col:110> col:110 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x24269b99718 <col:135, col:148> col:148 _ErrMsg 'const char *'
|-FunctionDecl 0x24269b99bc8 <line:168:76> col:76 implicit strerror 'char *(int)' extern
| `-ParmVarDecl 0x24269b99c68 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x24269b99cd8 prev 0x24269b99bc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:168:93> col:76 strerror 'char *(int)'
| |-ParmVarDecl 0x24269b99a90 <col:90> col:93 'int'
| `-DeprecatedAttr 0x24269b99d80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24269b9a110 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:170:28, col:139> col:44 strerror_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x24269b99f00 <col:84, col:91> col:91 _Buf 'char *'
| |-ParmVarDecl 0x24269b99f78 <col:102, col:109> col:109 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x24269b99ff8 <col:128, col:132> col:132 _ErrNum 'int'
|-FunctionDecl 0x24269b9a418 <line:173:28, col:109> col:44 _strlwr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x24269b9a1f8 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x24269b9a270 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x24269b9a708 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:175:79 _strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x24269b9a5b8 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x24269b9a7b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24269b9abc0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:176:28, col:139> col:44 _strlwr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x24269b9a8f8 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x24269b9a970 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x24269b9a9e8 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24269b97f80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:178:82 _strlwr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x24269b9ad68 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x24269b9ade0 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x24269b98030 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24269b984e8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:180:40, col:206> col:56 strncat_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x24269b98178 <col:98, col:105> col:105 _Dst 'char *'
| |-ParmVarDecl 0x24269b981f0 <col:116, col:124> col:124 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x24269b98270 <col:165, col:178> col:178 _Src 'const char *'
| `-ParmVarDecl 0x24269b982e8 <col:189, col:197> col:197 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x24269b98968 <line:186:83> col:83 implicit strncat 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x24269b98a08 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x24269b98a70 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x24269b98ad8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x24269b98b58 prev 0x24269b98968 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:186:83 strncat 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x24269b98698 <col:161, col:167> col:167 _Dest 'char *'
| |-ParmVarDecl 0x24269b98718 <col:198, col:212> col:212 _Source 'const char *'
| |-ParmVarDecl 0x24269b98790 <col:226, col:234> col:234 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x24269b98c10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24269b9dfe0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:188:40> col:40 implicit strncmp 'int (const char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x24269b9e080 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x24269b9e0e8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x24269b9e150 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x24269b9e1d0 prev 0x24269b9dfe0 <col:24, col:163> col:40 strncmp 'int (const char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x24269b98d58 <col:75, col:88> col:88 _Str1 'const char *'
| |-ParmVarDecl 0x24269b98dd8 <col:122, col:135> col:135 _Str2 'const char *'
| `-ParmVarDecl 0x24269b98e50 <col:147, col:154> col:154 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x24269b9e4d0 <line:189:24, col:165> col:40 _strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x24269b9e2b8 <col:77, col:90> col:90 _Str1 'const char *'
| |-ParmVarDecl 0x24269b9e338 <col:124, col:137> col:137 _Str2 'const char *'
| `-ParmVarDecl 0x24269b9e3b0 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x24269b9e868 <line:190:24, col:195> col:40 _strnicmp_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x24269b9e5b8 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x24269b9e638 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x24269b9e6b0 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x24269b9e728 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24269b9ec00 <line:192:40, col:203> col:56 strncpy_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x24269b9e958 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x24269b9e9d0 <col:113, col:121> col:121 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x24269b9ea50 <col:162, col:175> col:175 _Src 'const char *'
| `-ParmVarDecl 0x24269b9eac8 <col:186, col:194> col:194 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x24269ba2008 <line:195:83> col:83 implicit strncpy 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x24269ba20a8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x24269ba2110 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x24269ba2178 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x24269ba21f8 prev 0x24269ba2008 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:195:83 strncpy 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x24269b9edb0 <col:167, col:173> col:173 _Dest 'char *'
| |-ParmVarDecl 0x24269b9ee30 <col:204, col:218> col:218 _Source 'const char *'
| |-ParmVarDecl 0x24269b9eea8 <col:232, col:240> col:240 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x24269ba22b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24269ba2768 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:196:40, col:174> col:56 _strnset_s 'errno_t (char *, size_t, int, size_t) __attribute__((cdecl))':'errno_t (char *, size_t, int, size_t)'
| |-ParmVarDecl 0x24269ba23f8 <col:99, col:106> col:106 _Str 'char *'
| |-ParmVarDecl 0x24269ba2470 <col:117, col:124> col:124 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x24269ba24f0 <col:143, col:147> col:147 _Val 'int'
| `-ParmVarDecl 0x24269ba2568 <col:158, col:165> col:165 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x24269ba2be8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:198:83 _strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x24269ba2918 <col:163, col:169> col:169 _Dest 'char *'
| |-ParmVarDecl 0x24269ba2998 <col:181, col:186> col:186 _Val 'int'
| |-ParmVarDecl 0x24269ba2a10 <col:197, col:205> col:205 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x24269ba2ca0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24269b9efc0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:199:54> col:54 implicit strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x24269b9f060 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x24269b9f0c8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x24269b9f140 prev 0x24269b9efc0 <col:38, col:116> col:54 strpbrk 'char *(const char *, const char *)'
| |-ParmVarDecl 0x24269ba2de8 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x24269ba2e68 <col:95, col:108> col:108 _Control 'const char *'
|-FunctionDecl 0x24269b9f3a0 <line:200:54> col:54 implicit strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x24269b9f440 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x24269b9f4a8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x24269b9f520 prev 0x24269b9f3a0 <col:38, col:100> col:54 strrchr 'char *(const char *, int)'
| |-ParmVarDecl 0x24269b9f220 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x24269b9f2a0 <col:93, col:97> col:97 _Ch 'int'
|-FunctionDecl 0x24269b9f6e0 <line:201:9, col:54> col:25 _strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| `-ParmVarDecl 0x24269b9f600 <col:43, col:50> col:50 _Str 'char *'
|-FunctionDecl 0x24269b9f930 <line:202:40> col:40 implicit strspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x24269b9f9d0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x24269b9fa38 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x24269b9fab0 prev 0x24269b9f930 <col:24, col:101> col:40 strspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x24269b9f7b8 <col:54, col:67> col:67 _Str 'const char *'
| `-ParmVarDecl 0x24269b9f838 <col:80, col:93> col:93 _Control 'const char *'
|-FunctionDecl 0x24269b9fd10 <line:203:70> col:70 implicit strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x24269b9fdb0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x24269b9fe18 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x24269b9fe90 prev 0x24269b9fd10 <col:54, col:130> col:70 strstr 'char *(const char *, const char *)'
| |-ParmVarDecl 0x24269b9fb90 <col:84, col:97> col:97 _Str 'const char *'
| `-ParmVarDecl 0x24269b9fc10 <col:110, col:123> col:123 _SubStr 'const char *'
|-FunctionDecl 0x24269b9b180 <line:204:74> col:74 implicit strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x24269b9b220 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x24269b9b288 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x24269b9b300 prev 0x24269b9b180 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:204:134> col:74 strtok 'char *(char *, const char *)'
| |-ParmVarDecl 0x24269b9b000 <col:95, col:102> col:102 _Str 'char *'
| |-ParmVarDecl 0x24269b9b080 <col:115, col:128> col:128 _Delim 'const char *'
| `-DeprecatedAttr 0x24269b9b3b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24269b9b798 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:206:36, col:162> col:52 strtok_s 'char *(char *, const char *, char **) __attribute__((cdecl))':'char *(char *, const char *, char **)'
| |-ParmVarDecl 0x24269b9b4f8 <col:75, col:82> col:82 _Str 'char *'
| |-ParmVarDecl 0x24269b9b578 <col:95, col:108> col:108 _Delim 'const char *'
| `-ParmVarDecl 0x24269b9b5f8 <col:146, col:154> col:154 _Context 'char **'
|-FunctionDecl 0x24269b9b9f0 <line:208:28, col:109> col:44 _strupr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x24269b9b880 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x24269b9b8f8 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x24269b9bc70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:210:79 _strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x24269b9bb90 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x24269b9bd18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24269ba3120 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:211:28, col:130> col:44 _strupr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x24269b9be60 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x24269ba2f90 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x24269ba3008 <col:113, col:123> col:123 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24269ba3440 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:213:82 _strupr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x24269ba32c8 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x24269ba3340 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x24269ba34f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24269ba3900 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:214:44> col:44 implicit strxfrm 'unsigned long long (char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x24269ba39a0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x24269ba3a08 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x24269ba3a70 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x24269ba3af0 prev 0x24269ba3900 <col:28, col:155> col:44 strxfrm 'unsigned long long (char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x24269ba3638 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x24269ba36b8 <col:115, col:128> col:128 _Src 'const char *'
| `-ParmVarDecl 0x24269ba3730 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x24269b9bf20 <line:215:28, col:185> col:44 _strxfrm_l 'size_t (char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x24269ba3bd8 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x24269ba3c58 <col:117, col:130> col:130 _Src 'const char *'
| |-ParmVarDecl 0x24269ba3cd0 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x24269ba3d48 <col:168, col:178> col:178 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24269b9c1d0 <line:245:71> col:71 implicit strdup 'char *(const char *)' extern
| `-ParmVarDecl 0x24269b9c270 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x24269b9c2e0 prev 0x24269b9c1d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:245:106> col:71 strdup 'char *(const char *)'
| |-ParmVarDecl 0x24269b9c0f0 <col:89, col:102> col:102 _Src 'const char *'
| `-DeprecatedAttr 0x24269b9c388 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strdup. See online help for details." ""
|-FunctionDecl 0x24269b9c6d0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:252:129> col:69 strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x24269b9c550 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x24269b9c5d0 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x24269b9c780 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strcmpi. See online help for details." ""
|-FunctionDecl 0x24269b9cac8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:253:129> col:69 stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x24269b9c948 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x24269b9c9c8 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x24269b9cb78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details." ""
|-FunctionDecl 0x24269b9ce20 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:254:84> col:56 strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x24269b9cd40 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x24269b9cec8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strlwr. See online help for details." ""
|-FunctionDecl 0x24269ba0338 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:255:193> col:70 strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x24269ba0120 <col:106, col:119> col:119 _Str1 'const char *'
| |-ParmVarDecl 0x24269ba01a0 <col:153, col:166> col:166 _Str 'const char *'
| |-ParmVarDecl 0x24269ba0218 <col:177, col:184> col:184 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x24269ba03f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnicmp. See online help for details." ""
|-FunctionDecl 0x24269ba07d0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:256:143> col:57 strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x24269ba05b8 <col:94, col:101> col:101 _Str 'char *'
| |-ParmVarDecl 0x24269ba0638 <col:112, col:116> col:116 _Val 'int'
| |-ParmVarDecl 0x24269ba06b0 <col:127, col:134> col:134 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x24269ba0888 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnset. See online help for details." ""
|-FunctionDecl 0x24269ba0b30 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:257:84> col:56 strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x24269ba0a50 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x24269ba0bd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strrev. See online help for details." ""
|-FunctionDecl 0x24269ba0f70 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:258:99> col:56 strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x24269ba0da0 <col:73, col:80> col:80 _Str 'char *'
| |-ParmVarDecl 0x24269ba0e20 <col:91, col:95> col:95 _Val 'int'
| `-DeprecatedAttr 0x24269ba1020 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strset. See online help for details." ""
|-FunctionDecl 0x24269ba12c8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:259:84> col:56 strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x24269ba11e8 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x24269ba1370 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strupr. See online help for details." ""
|-FunctionDecl 0x24269ba1600 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:273:24, col:77> col:42 _wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| `-ParmVarDecl 0x24269ba1490 <col:57, col:73> col:73 _Str 'const wchar_t *'
|-FunctionDecl 0x24269ba1990 <line:280:40, col:167> col:56 wcscat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x24269ba16d0 <col:97, col:107> col:107 _Dst 'wchar_t *'
| |-ParmVarDecl 0x24269ba1748 <col:118, col:126> col:126 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x24269ba17c0 <col:147, col:163> col:163 _Src 'const wchar_t *'
|-FunctionDecl 0x24269ba1d48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:284:82 wcscat 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x24269ba1b30 <col:164, col:173> col:173 _Dest 'wchar_t *'
| |-ParmVarDecl 0x24269ba1ba8 <col:187, col:204> col:204 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x24269ba1df8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24269b9d148 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:288:41> col:41 implicit wcschr 'unsigned short *(const unsigned short *, unsigned short)' extern
| |-ParmVarDecl 0x24269b9d1e8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x24269b9d250 <<invalid sloc>> <invalid sloc> 'unsigned short'
|-FunctionDecl 0x24269b9d2c8 prev 0x24269b9d148 <col:23, col:88> col:41 wcschr 'unsigned short *(const unsigned short *, unsigned short)'
| |-ParmVarDecl 0x24269b9cf30 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x24269b9cfa8 <col:77, col:85> col:85 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x24269b9d5c0 <line:289:36> col:36 implicit wcscmp 'int (const unsigned short *, const unsigned short *)' extern
| |-ParmVarDecl 0x24269b9d660 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x24269b9d6c8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x24269b9d740 prev 0x24269b9d5c0 <col:24, col:101> col:36 wcscmp 'int (const unsigned short *, const unsigned short *)'
| |-ParmVarDecl 0x24269b9d3a0 <col:50, col:66> col:66 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x24269b9d418 <col:80, col:96> col:96 _Str2 'const wchar_t *'
|-FunctionDecl 0x24269b9da20 <line:291:40, col:164> col:56 wcscpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x24269b9d818 <col:94, col:104> col:104 _Dst 'wchar_t *'
| |-ParmVarDecl 0x24269b9d890 <col:115, col:123> col:123 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x24269b9d908 <col:144, col:160> col:160 _Src 'const wchar_t *'
|-FunctionDecl 0x24269b9dd30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:294:82 wcscpy 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x24269b9dbc0 <col:136, col:145> col:145 _Dest 'wchar_t *'
| |-ParmVarDecl 0x24269b9dc38 <col:159, col:176> col:176 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x24269b9dde0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24269bab228 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:295:24, col:107> col:39 wcscspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x24269bab010 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x24269bab088 <col:83, col:99> col:99 _Control 'const wchar_t *'
|-FunctionDecl 0x24269bab470 <line:296:39> col:39 implicit wcslen 'unsigned long long (const unsigned short *)' extern
| `-ParmVarDecl 0x24269bab510 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x24269bab580 prev 0x24269bab470 <col:24, col:73> col:39 wcslen 'unsigned long long (const unsigned short *)'
| `-ParmVarDecl 0x24269bab300 <col:53, col:69> col:69 _Str 'const wchar_t *'
|-FunctionDecl 0x24269bab868 <line:300:1, col:94> col:16 used wcsnlen 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
| |-ParmVarDecl 0x24269bab650 <col:51, col:67> col:67 _Src 'const wchar_t *'
| `-ParmVarDecl 0x24269bab6c8 <col:78, col:85> col:85 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x24269babab0 <line:302:16, line:308:1> line:305:18 wcsnlen_s 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' static inline
| |-ParmVarDecl 0x24269bab940 <col:55, col:71> col:71 used _Src 'const wchar_t *'
| |-ParmVarDecl 0x24269bab9b8 <col:82, col:89> col:89 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x24269babe48 <line:306:1, line:308:1>
|   `-ReturnStmt 0x24269babe38 <line:307:5, col:56>
|     `-ConditionalOperator 0x24269babe08 <col:12, col:56> 'unsigned long long'
|       |-ParenExpr 0x24269babc70 <col:12, col:25> 'int'
|       | `-BinaryOperator 0x24269babc50 <col:13, line:36:27> 'int' '=='
|       |   |-ImplicitCastExpr 0x24269babc20 <line:307:13> 'const wchar_t *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x24269babb78 <col:13> 'const wchar_t *' lvalue ParmVar 0x24269bab940 '_Src' 'const wchar_t *'
|       |   `-ImplicitCastExpr 0x24269babc38 <line:36:17, col:27> 'const wchar_t *' <BitCast>
|       |     `-ParenExpr 0x24269babc00 <col:17, col:27> 'void *'
|       |       `-CStyleCastExpr 0x24269babbd8 <col:18, col:26> 'void *' <NullToPointer>
|       |         `-IntegerLiteral 0x24269babb98 <col:26> 'int' 0
|       |-ImplicitCastExpr 0x24269babdf0 <line:307:29> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x24269babc90 <col:29> 'int' 0
|       `-CallExpr 0x24269babd90 <col:33, col:56> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x24269babd78 <col:33> 'size_t (*)(const wchar_t *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x24269babcb8 <col:33> 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' Function 0x24269bab868 'wcsnlen' 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
|         |-ImplicitCastExpr 0x24269babdc0 <col:41> 'const wchar_t *' <LValueToRValue>
|         | `-DeclRefExpr 0x24269babcd8 <col:41> 'const wchar_t *' lvalue ParmVar 0x24269bab940 '_Src' 'const wchar_t *'
|         `-ImplicitCastExpr 0x24269babdd8 <col:47> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x24269babcf8 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x24269bab9b8 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x24269ba41a8 <line:311:40, col:212> col:56 wcsncat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x24269babe70 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x24269babee8 <col:119, col:127> col:127 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x24269babf60 <col:168, col:184> col:184 _Src 'const wchar_t *'
| `-ParmVarDecl 0x24269ba3fa0 <col:195, col:203> col:203 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x24269ba4610 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:316:86 wcsncat 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x24269ba4350 <col:167, col:176> col:176 _Dest 'wchar_t *'
| |-ParmVarDecl 0x24269ba43c8 <col:207, col:224> col:224 _Source 'const wchar_t *'
| |-ParmVarDecl 0x24269ba4440 <col:238, col:246> col:246 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x24269ba46c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24269ba4ad8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:318:36> col:36 implicit wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)' extern
| |-ParmVarDecl 0x24269ba4b78 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| |-ParmVarDecl 0x24269ba4be0 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x24269ba4c48 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x24269ba4cc8 prev 0x24269ba4ad8 <col:24, col:165> col:36 wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)'
| |-ParmVarDecl 0x24269ba4808 <col:71, col:87> col:87 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x24269ba4880 <col:121, col:137> col:137 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x24269ba48f8 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x24269ba8098 <line:320:40, col:209> col:56 wcsncpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x24269ba4da8 <col:95, col:105> col:105 _Dst 'wchar_t *'
| |-ParmVarDecl 0x24269ba4e20 <col:116, col:124> col:124 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x24269ba4e98 <col:165, col:181> col:181 _Src 'const wchar_t *'
| `-ParmVarDecl 0x24269ba4f10 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x24269ba8448 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:323:86 wcsncpy 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x24269ba8240 <col:179, col:188> col:188 _Dest 'wchar_t *'
| |-ParmVarDecl 0x24269ba82b8 <col:219, col:236> col:236 _Source 'const wchar_t *'
| |-ParmVarDecl 0x24269ba8330 <col:250, col:258> col:258 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x24269ba8500 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24269ba8858 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:324:38, col:124> col:56 wcspbrk 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x24269ba8640 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x24269ba86b8 <col:100, col:116> col:116 _Control 'const wchar_t *'
|-FunctionDecl 0x24269ba8aa0 <line:325:38, col:109> col:56 wcsrchr 'wchar_t *(const wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(const wchar_t *, wchar_t)'
| |-ParmVarDecl 0x24269ba8930 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x24269ba89a8 <col:98, col:106> col:106 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x24269ba8ce8 <line:326:24, col:106> col:39 wcsspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x24269ba8b78 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x24269ba8bf0 <col:82, col:98> col:98 _Control 'const wchar_t *'
|-FunctionDecl 0x24269ba8f30 <line:329:23, col:107> col:41 wcsstr 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x24269ba8dc0 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x24269ba8e38 <col:84, col:100> col:100 _SubStr 'const wchar_t *'
|-FunctionDecl 0x24269ba9248 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:330:142> col:76 wcstok 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x24269ba90d8 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x24269ba9150 <col:120, col:136> col:136 _Delim 'const wchar_t *'
| `-DeprecatedAttr 0x24269ba92f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24269ba9760 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:332:36, col:173> col:54 wcstok_s 'wchar_t *(wchar_t *, const wchar_t *, wchar_t **) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x24269ba9438 <col:77, col:87> col:87 _Str 'wchar_t *'
| |-ParmVarDecl 0x24269ba94b0 <col:100, col:116> col:116 _Delim 'const wchar_t *'
| `-ParmVarDecl 0x24269ba9590 <col:154, col:165> col:165 _Context 'wchar_t **'
|-FunctionDecl 0x24269ba9a80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:334:105> col:79 _wcserror 'wchar_t *(int) __attribute__((cdecl))':'wchar_t *(int)'
| |-ParmVarDecl 0x24269ba9908 <col:94, col:98> col:98 _ErrNum 'int'
| `-DeprecatedAttr 0x24269ba9b28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24269ba9f30 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:335:28, col:147> col:44 _wcserror_s 'errno_t (wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, int)'
| |-ParmVarDecl 0x24269ba9c68 <col:89, col:99> col:99 _Buf 'wchar_t *'
| |-ParmVarDecl 0x24269ba9ce0 <col:110, col:117> col:117 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x24269ba9d60 <col:136, col:140> col:140 _ErrNum 'int'
|-FunctionDecl 0x24269baa200 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:337:122> col:80 __wcserror 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x24269baa128 <col:102, col:118> col:118 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x24269baa2a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24269baa670 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:338:28, col:165> col:44 __wcserror_s 'errno_t (wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x24269baa3e8 <col:90, col:100> col:100 _Buffer 'wchar_t *'
| |-ParmVarDecl 0x24269baa460 <col:114, col:121> col:121 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x24269baa4d8 <col:142, col:158> col:158 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x24269baa8c8 <line:341:24, col:103> col:36 _wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x24269baa750 <col:52, col:68> col:68 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x24269baa7c8 <col:82, col:98> col:98 _Str2 'const wchar_t *'
|-FunctionDecl 0x24269baac68 <line:342:24, col:133> col:36 _wcsicmp_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x24269baa9a0 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x24269baaa18 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x24269baaa90 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24269baaf58 <line:343:24, col:167> col:36 _wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x24269baad48 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x24269baadc0 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x24269baae38 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x24269ba7380 <line:344:24, col:197> col:36 _wcsnicmp_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x24269ba7010 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x24269ba7088 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x24269ba7100 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x24269ba7178 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24269ba77d8 <line:345:40, col:181> col:56 _wcsnset_s 'errno_t (wchar_t *, size_t, wchar_t, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t, size_t)'
| |-ParmVarDecl 0x24269ba7468 <col:99, col:109> col:109 _Dst 'wchar_t *'
| |-ParmVarDecl 0x24269ba74e0 <col:120, col:127> col:127 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x24269ba7558 <col:146, col:154> col:154 _Val 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x24269ba75d0 <col:165, col:172> col:172 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x24269ba7c40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:347:86 _wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x24269ba7980 <col:172, col:181> col:181 _Str 'wchar_t *'
| |-ParmVarDecl 0x24269ba79f8 <col:187, col:196> col:196 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x24269ba7a70 <col:207, col:215> col:215 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x24269ba7cf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24269bac020 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:348:9, col:59> col:27 _wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| `-ParmVarDecl 0x24269ba7e38 <col:45, col:55> col:55 _Str 'wchar_t *'
|-FunctionDecl 0x24269bac3b0 <line:349:40, col:159> col:56 _wcsset_s 'errno_t (wchar_t *, size_t, wchar_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t)'
| |-ParmVarDecl 0x24269bac0f0 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x24269bac168 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x24269bac1e0 <col:145, col:153> col:153 _Value 'wchar_t':'unsigned short'
|-FunctionDecl 0x24269bac768 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:351:85 _wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x24269bac550 <col:150, col:159> col:159 _Str 'wchar_t *'
| |-ParmVarDecl 0x24269bac5c8 <col:165, col:174> col:174 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x24269bac818 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24269bacb78 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:353:28, col:126> col:44 _wcslwr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x24269bac958 <col:86, col:96> col:96 _Str 'wchar_t *'
| `-ParmVarDecl 0x24269bac9d0 <col:107, col:114> col:114 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x24269bacde8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:355:82 _wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x24269bacd10 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x24269bace90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24269ba5270 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:356:28, col:156> col:44 _wcslwr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x24269ba4fb0 <col:88, col:98> col:98 _Str 'wchar_t *'
| |-ParmVarDecl 0x24269ba5028 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x24269ba50a0 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24269ba5628 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:358:85 _wcslwr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x24269ba5410 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x24269ba5488 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x24269ba56d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24269ba5988 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:359:28, col:112> col:44 _wcsupr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x24269ba5818 <col:79, col:89> col:89 _Str 'wchar_t *'
| `-ParmVarDecl 0x24269ba5890 <col:100, col:107> col:107 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x24269ba5bf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:361:82 _wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x24269ba5b20 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x24269ba5ca0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24269bb20c0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:362:28, col:142> col:44 _wcsupr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x24269ba5de0 <col:81, col:91> col:91 _Str 'wchar_t *'
| |-ParmVarDecl 0x24269ba5e58 <col:102, col:109> col:109 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x24269ba5ed0 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24269bb23d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:364:85 _wcsupr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x24269bb2260 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x24269bb22d8 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x24269bb2480 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24269bb2880 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:365:28, col:159> col:43 wcsxfrm 'size_t (wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x24269bb25c0 <col:93, col:103> col:103 _Dst 'wchar_t *'
| |-ParmVarDecl 0x24269bb2638 <col:116, col:132> col:132 _Src 'const wchar_t *'
| `-ParmVarDecl 0x24269bb26b0 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x24269bb2cc8 <line:366:28, col:189> col:43 _wcsxfrm_l 'size_t (wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x24269bb2960 <col:96, col:106> col:106 _Dst 'wchar_t *'
| |-ParmVarDecl 0x24269bb29d8 <col:119, col:134> col:134 _Src 'const wchar_t *'
| |-ParmVarDecl 0x24269bb2a50 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x24269bb2ac8 <col:172, col:182> col:182 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24269bb2f28 <line:367:24, col:102> col:36 wcscoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x24269bb2db0 <col:51, col:67> col:67 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x24269bb2e28 <col:81, col:97> col:97 _Str2 'const wchar_t *'
|-FunctionDecl 0x24269baf1e8 <line:368:24, col:133> col:36 _wcscoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x24269bb3000 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x24269baf050 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x24269baf0c8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24269baf440 <line:369:24, col:104> col:36 _wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x24269baf2c8 <col:53, col:69> col:69 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x24269baf340 <col:83, col:99> col:99 _Str2 'const wchar_t *'
|-FunctionDecl 0x24269baf728 <line:370:24, col:133> col:36 _wcsicoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x24269baf518 <col:55, col:71> col:71 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x24269baf590 <col:85, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x24269baf608 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24269bafa18 <line:371:24, col:167> col:36 _wcsncoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x24269baf808 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x24269baf880 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x24269baf8f8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x24269bafda0 <line:372:24, col:197> col:36 _wcsncoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x24269bafaf8 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x24269bafb70 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x24269bafbe8 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x24269bafc60 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24269bb40e8 <line:373:24, col:168> col:36 _wcsnicoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x24269bafe88 <col:74, col:90> col:90 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x24269baff00 <col:124, col:140> col:140 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x24269baff78 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x24269bb4470 <line:374:24, col:198> col:36 _wcsnicoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x24269bb41c8 <col:76, col:92> col:92 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x24269bb4240 <col:126, col:142> col:142 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x24269bb42b8 <col:154, col:161> col:161 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x24269bb4330 <col:181, col:191> col:191 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24269bb46d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:403:108> col:74 wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x24269bb45f8 <col:88, col:104> col:104 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x24269bb4778 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsdup. See online help for details." ""
|-FunctionDecl 0x24269bb4ab0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:413:135> col:69 wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x24269bb4938 <col:84, col:100> col:100 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x24269bb49b0 <col:114, col:130> col:130 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x24269bb4b60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicmp. See online help for details." ""
|-FunctionDecl 0x24269bb4f30 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:414:200> col:70 wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x24269bb4d20 <col:106, col:122> col:122 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x24269bb4d98 <col:156, col:172> col:172 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x24269bb4e10 <col:184, col:191> col:191 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x24269bb4fe8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnicmp. See online help for details." ""
|-FunctionDecl 0x24269bb13f0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:415:153> col:60 wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x24269bb11e8 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x24269bb1260 <col:118, col:126> col:126 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x24269bb12d8 <col:137, col:144> col:144 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x24269bb14a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnset. See online help for details." ""
|-FunctionDecl 0x24269bb1740 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:416:90> col:59 wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x24269bb1668 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x24269bb17e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsrev. See online help for details." ""
|-FunctionDecl 0x24269bb1b18 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:417:104> col:59 wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x24269bb19a8 <col:76, col:86> col:86 _Str 'wchar_t *'
| |-ParmVarDecl 0x24269bb1a20 <col:92, col:100> col:100 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x24269bb1bc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsset. See online help for details." ""
|-FunctionDecl 0x24269bb1e60 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:418:90> col:59 wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x24269bb1d88 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x24269bb1f08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcslwr. See online help for details." ""
|-FunctionDecl 0x24269bad1b8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:419:90> col:59 wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x24269bad0e0 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x24269bad260 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsupr. See online help for details." ""
|-FunctionDecl 0x24269bad598 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:420:137> col:70 wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x24269bad420 <col:86, col:102> col:102 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x24269bad498 <col:116, col:132> col:132 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x24269bad648 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicoll. See online help for details." ""
|-FunctionDecl 0x24269bad878 <.//openssl//file_jk/before\crypto\modes\ctr128.c:20:1, line:30:1> line:20:13 used ctr128_inc 'void (unsigned char *)' static
| |-ParmVarDecl 0x24269bad7a0 <col:24, col:39> col:39 used counter 'unsigned char *'
| `-CompoundStmt 0x24269bade88 <line:21:1, line:30:1>
|   |-DeclStmt 0x24269badac0 <line:22:5, col:22>
|   | |-VarDecl 0x24269bad948 <col:5, col:13> col:9 used n 'u32':'unsigned int' cinit
|   | | `-ImplicitCastExpr 0x24269bad9d8 <col:13> 'u32':'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x24269bad9b0 <col:13> 'int' 16
|   | `-VarDecl 0x24269bada00 <col:5, col:21> col:17 used c 'u32':'unsigned int' cinit
|   |   `-ImplicitCastExpr 0x24269bada90 <col:21> 'u32':'unsigned int' <IntegralCast>
|   |     `-IntegerLiteral 0x24269bada68 <col:21> 'int' 1
|   `-DoStmt 0x24269bade68 <line:24:5, line:29:15>
|     |-CompoundStmt 0x24269bade00 <line:24:8, line:29:5>
|     | |-UnaryOperator 0x24269badb10 <line:25:9, col:11> 'u32':'unsigned int' prefix '--'
|     | | `-DeclRefExpr 0x24269badad8 <col:11> 'u32':'unsigned int' lvalue Var 0x24269bad948 'n' 'u32':'unsigned int'
|     | |-CompoundAssignOperator 0x24269badc20 <line:26:9, col:23> 'u32':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|     | | |-DeclRefExpr 0x24269badb28 <col:9> 'u32':'unsigned int' lvalue Var 0x24269bada00 'c' 'u32':'unsigned int'
|     | | `-ImplicitCastExpr 0x24269badc08 <col:14, col:23> 'unsigned int' <IntegralCast>
|     | |   `-ImplicitCastExpr 0x24269badbf0 <col:14, col:23> 'unsigned char' <LValueToRValue>
|     | |     `-ArraySubscriptExpr 0x24269badbd0 <col:14, col:23> 'unsigned char' lvalue
|     | |       |-ImplicitCastExpr 0x24269badba0 <col:14> 'unsigned char *' <LValueToRValue>
|     | |       | `-DeclRefExpr 0x24269badb60 <col:14> 'unsigned char *' lvalue ParmVar 0x24269bad7a0 'counter' 'unsigned char *'
|     | |       `-ImplicitCastExpr 0x24269badbb8 <col:22> 'u32':'unsigned int' <LValueToRValue>
|     | |         `-DeclRefExpr 0x24269badb80 <col:22> 'u32':'unsigned int' lvalue Var 0x24269bad948 'n' 'u32':'unsigned int'
|     | |-BinaryOperator 0x24269badd50 <line:27:9, col:26> 'unsigned char' '='
|     | | |-ArraySubscriptExpr 0x24269badcc0 <col:9, col:18> 'unsigned char' lvalue
|     | | | |-ImplicitCastExpr 0x24269badc90 <col:9> 'unsigned char *' <LValueToRValue>
|     | | | | `-DeclRefExpr 0x24269badc50 <col:9> 'unsigned char *' lvalue ParmVar 0x24269bad7a0 'counter' 'unsigned char *'
|     | | | `-ImplicitCastExpr 0x24269badca8 <col:17> 'u32':'unsigned int' <LValueToRValue>
|     | | |   `-DeclRefExpr 0x24269badc70 <col:17> 'u32':'unsigned int' lvalue Var 0x24269bad948 'n' 'u32':'unsigned int'
|     | | `-CStyleCastExpr 0x24269badd28 <col:22, col:26> 'u8':'unsigned char' <IntegralCast>
|     | |   `-ImplicitCastExpr 0x24269badd10 <col:26> 'u32':'unsigned int' <LValueToRValue> part_of_explicit_cast
|     | |     `-DeclRefExpr 0x24269badce0 <col:26> 'u32':'unsigned int' lvalue Var 0x24269bada00 'c' 'u32':'unsigned int'
|     | `-CompoundAssignOperator 0x24269baddd0 <line:28:9, col:15> 'u32':'unsigned int' '>>=' ComputeLHSTy='u32':'unsigned int' ComputeResultTy='u32':'unsigned int'
|     |   |-DeclRefExpr 0x24269badd70 <col:9> 'u32':'unsigned int' lvalue Var 0x24269bada00 'c' 'u32':'unsigned int'
|     |   `-IntegerLiteral 0x24269badd90 <col:15> 'int' 8
|     `-ImplicitCastExpr 0x24269bade50 <line:29:14> 'u32':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x24269bade30 <col:14> 'u32':'unsigned int' lvalue Var 0x24269bad948 'n' 'u32':'unsigned int'
|-FunctionDecl 0x24269badf68 <line:33:1, line:57:1> line:33:13 used ctr128_inc_aligned 'void (unsigned char *)' static
| |-ParmVarDecl 0x24269badec0 <col:32, col:47> col:47 used counter 'unsigned char *'
| `-CompoundStmt 0x24269bb5108 <line:34:1, line:57:1>
|   |-DeclStmt 0x24269bb0290 <line:35:5, col:26>
|   | |-VarDecl 0x24269bb0098 <col:5, col:13> col:13 used data 'size_t *'
|   | |-VarDecl 0x24269bb0110 <col:5, col:19> col:19 used c 'size_t':'unsigned long long'
|   | |-VarDecl 0x24269bb0188 <col:5, col:22> col:22 used d 'size_t':'unsigned long long'
|   | `-VarDecl 0x24269bb0200 <col:5, col:25> col:25 used n 'size_t':'unsigned long long'
|   |-DeclStmt 0x24269bb05f8 <line:36:5, line:41:6>
|   | |-RecordDecl 0x24269bb02a8 <line:36:11, line:39:5> line:36:11 union definition
|   | | |-FieldDecl 0x24269bb0378 <line:37:9, col:14> col:14 one 'long'
|   | | `-FieldDecl 0x24269bb03e0 <line:38:9, col:14> col:14 referenced little 'char'
|   | `-VarDecl 0x24269bb0498 <line:36:5, line:41:5> line:39:7 used is_endian 'const union (anonymous union at .//openssl//file_jk/before\crypto\modes\ctr128.c:36:11)':'const union (anonymous at .//openssl//file_jk/before\crypto\modes\ctr128.c:36:11)' cinit
|   |   `-InitListExpr 0x24269bb0580 <col:19, line:41:5> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\ctr128.c:36:11)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\ctr128.c:36:11)' field Field 0x24269bb0378 'one' 'long'
|   |     `-ImplicitCastExpr 0x24269bb05c8 <line:40:9> 'long' <IntegralCast>
|   |       `-IntegerLiteral 0x24269bb0500 <col:9> 'int' 1
|   |-IfStmt 0x24269bb09a0 <line:43:5, line:46:5>
|   | |-BinaryOperator 0x24269bb07e8 <line:43:9, col:67> 'int' '||'
|   | | |-ImplicitCastExpr 0x24269bb07d0 <col:9, col:19> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x24269bb07b8 <col:9, col:19> 'char' <LValueToRValue>
|   | | |   `-MemberExpr 0x24269bb0648 <col:9, col:19> 'const char' lvalue .little 0x24269bb03e0
|   | | |     `-DeclRefExpr 0x24269bb0610 <col:9> 'const union (anonymous union at .//openssl//file_jk/before\crypto\modes\ctr128.c:36:11)':'const union (anonymous at .//openssl//file_jk/before\crypto\modes\ctr128.c:36:11)' lvalue Var 0x24269bb0498 'is_endian' 'const union (anonymous union at .//openssl//file_jk/before\crypto\modes\ctr128.c:36:11)':'const union (anonymous at .//openssl//file_jk/before\crypto\modes\ctr128.c:36:11)'
|   | | `-BinaryOperator 0x24269bb0798 <col:29, col:67> 'int' '!='
|   | |   |-ParenExpr 0x24269bb0738 <col:29, col:62> 'unsigned long long'
|   | |   | `-BinaryOperator 0x24269bb0718 <col:30, col:61> 'unsigned long long' '%'
|   | |   |   |-CStyleCastExpr 0x24269bb06c0 <col:30, col:38> 'size_t':'unsigned long long' <PointerToIntegral>
|   | |   |   | `-ImplicitCastExpr 0x24269bb06a8 <col:38> 'unsigned char *' <LValueToRValue> part_of_explicit_cast
|   | |   |   |   `-DeclRefExpr 0x24269bb0678 <col:38> 'unsigned char *' lvalue ParmVar 0x24269badec0 'counter' 'unsigned char *'
|   | |   |   `-UnaryExprOrTypeTraitExpr 0x24269bb06f8 <col:48, col:61> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|   | |   `-ImplicitCastExpr 0x24269bb0780 <col:67> 'unsigned long long' <IntegralCast>
|   | |     `-IntegerLiteral 0x24269bb0758 <col:67> 'int' 0
|   | `-CompoundStmt 0x24269bb0980 <col:70, line:46:5>
|   |   |-CallExpr 0x24269bb0930 <line:44:9, col:27> 'void'
|   |   | |-ImplicitCastExpr 0x24269bb0918 <col:9> 'void (*)(unsigned char *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x24269bb08a8 <col:9> 'void (unsigned char *)' Function 0x24269bad878 'ctr128_inc' 'void (unsigned char *)'
|   |   | `-ImplicitCastExpr 0x24269bb0958 <col:20> 'unsigned char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x24269bb08c8 <col:20> 'unsigned char *' lvalue ParmVar 0x24269badec0 'counter' 'unsigned char *'
|   |   `-ReturnStmt 0x24269bb0970 <line:45:9>
|   |-BinaryOperator 0x24269bb0a60 <line:48:5, col:22> 'size_t *' '='
|   | |-DeclRefExpr 0x24269bb09b8 <col:5> 'size_t *' lvalue Var 0x24269bb0098 'data' 'size_t *'
|   | `-CStyleCastExpr 0x24269bb0a38 <col:12, col:22> 'size_t *' <BitCast>
|   |   `-ImplicitCastExpr 0x24269bb0a20 <col:22> 'unsigned char *' <LValueToRValue> part_of_explicit_cast
|   |     `-DeclRefExpr 0x24269bb09f0 <col:22> 'unsigned char *' lvalue ParmVar 0x24269badec0 'counter' 'unsigned char *'
|   |-BinaryOperator 0x24269bb0af8 <line:49:5, col:9> 'size_t':'unsigned long long' '='
|   | |-DeclRefExpr 0x24269bb0a80 <col:5> 'size_t':'unsigned long long' lvalue Var 0x24269bb0110 'c' 'size_t':'unsigned long long'
|   | `-ImplicitCastExpr 0x24269bb0ae0 <col:9> 'size_t':'unsigned long long' <IntegralCast>
|   |   `-IntegerLiteral 0x24269bb0ab8 <col:9> 'int' 1
|   |-BinaryOperator 0x24269bb0be0 <line:50:5, col:27> 'size_t':'unsigned long long' '='
|   | |-DeclRefExpr 0x24269bb0b18 <col:5> 'size_t':'unsigned long long' lvalue Var 0x24269bb0200 'n' 'size_t':'unsigned long long'
|   | `-BinaryOperator 0x24269bb0bc0 <col:9, col:27> 'unsigned long long' '/'
|   |   |-ImplicitCastExpr 0x24269bb0ba8 <col:9> 'unsigned long long' <IntegralCast>
|   |   | `-IntegerLiteral 0x24269bb0b50 <col:9> 'int' 16
|   |   `-UnaryExprOrTypeTraitExpr 0x24269bb0b88 <col:14, col:27> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|   `-DoStmt 0x24269bb50e8 <line:51:5, line:56:15>
|     |-CompoundStmt 0x24269bb1038 <line:51:8, line:56:5>
|     | |-UnaryOperator 0x24269bb0c20 <line:52:9, col:11> 'size_t':'unsigned long long' prefix '--'
|     | | `-DeclRefExpr 0x24269bb0c00 <col:11> 'size_t':'unsigned long long' lvalue Var 0x24269bb0200 'n' 'size_t':'unsigned long long'
|     | |-BinaryOperator 0x24269bb0d68 <line:53:9, col:24> 'size_t':'unsigned long long' '='
|     | | |-DeclRefExpr 0x24269bb0c38 <col:9> 'size_t':'unsigned long long' lvalue Var 0x24269bb0188 'd' 'size_t':'unsigned long long'
|     | | `-CompoundAssignOperator 0x24269bb0d38 <col:13, col:24> 'size_t':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|     | |   |-ArraySubscriptExpr 0x24269bb0ce0 <col:13, col:19> 'size_t':'unsigned long long' lvalue
|     | |   | |-ImplicitCastExpr 0x24269bb0cb0 <col:13> 'size_t *' <LValueToRValue>
|     | |   | | `-DeclRefExpr 0x24269bb0c70 <col:13> 'size_t *' lvalue Var 0x24269bb0098 'data' 'size_t *'
|     | |   | `-ImplicitCastExpr 0x24269bb0cc8 <col:18> 'size_t':'unsigned long long' <LValueToRValue>
|     | |   |   `-DeclRefExpr 0x24269bb0c90 <col:18> 'size_t':'unsigned long long' lvalue Var 0x24269bb0200 'n' 'size_t':'unsigned long long'
|     | |   `-ImplicitCastExpr 0x24269bb0d20 <col:24> 'size_t':'unsigned long long' <LValueToRValue>
|     | |     `-DeclRefExpr 0x24269bb0d00 <col:24> 'size_t':'unsigned long long' lvalue Var 0x24269bb0110 'c' 'size_t':'unsigned long long'
|     | `-BinaryOperator 0x24269bb1018 <line:55:9, col:54> 'size_t':'unsigned long long' '='
|     |   |-DeclRefExpr 0x24269bb0d88 <col:9> 'size_t':'unsigned long long' lvalue Var 0x24269bb0110 'c' 'size_t':'unsigned long long'
|     |   `-BinaryOperator 0x24269bb0ff8 <col:13, col:54> 'unsigned long long' '>>'
|     |     |-ParenExpr 0x24269bb0ec8 <col:13, col:26> 'unsigned long long'
|     |     | `-BinaryOperator 0x24269bb0ea8 <col:14, col:25> 'unsigned long long' '&'
|     |     |   |-ParenExpr 0x24269bb0e38 <col:14, col:20> 'unsigned long long'
|     |     |   | `-BinaryOperator 0x24269bb0e18 <col:15, col:19> 'unsigned long long' '-'
|     |     |   |   |-ImplicitCastExpr 0x24269bb0de8 <col:15> 'size_t':'unsigned long long' <LValueToRValue>
|     |     |   |   | `-DeclRefExpr 0x24269bb0da8 <col:15> 'size_t':'unsigned long long' lvalue Var 0x24269bb0188 'd' 'size_t':'unsigned long long'
|     |     |   |   `-ImplicitCastExpr 0x24269bb0e00 <col:19> 'size_t':'unsigned long long' <LValueToRValue>
|     |     |   |     `-DeclRefExpr 0x24269bb0dc8 <col:19> 'size_t':'unsigned long long' lvalue Var 0x24269bb0110 'c' 'size_t':'unsigned long long'
|     |     |   `-UnaryOperator 0x24269bb0e90 <col:24, col:25> 'size_t':'unsigned long long' prefix '~' cannot overflow
|     |     |     `-ImplicitCastExpr 0x24269bb0e78 <col:25> 'size_t':'unsigned long long' <LValueToRValue>
|     |     |       `-DeclRefExpr 0x24269bb0e58 <col:25> 'size_t':'unsigned long long' lvalue Var 0x24269bb0188 'd' 'size_t':'unsigned long long'
|     |     `-ParenExpr 0x24269bb0fd8 <col:31, col:54> 'unsigned long long'
|     |       `-BinaryOperator 0x24269bb0fb8 <col:32, col:53> 'unsigned long long' '-'
|     |         |-BinaryOperator 0x24269bb0f58 <col:32, col:49> 'unsigned long long' '*'
|     |         | |-UnaryExprOrTypeTraitExpr 0x24269bb0ef8 <col:32, col:45> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|     |         | `-ImplicitCastExpr 0x24269bb0f40 <col:49> 'unsigned long long' <IntegralCast>
|     |         |   `-IntegerLiteral 0x24269bb0f18 <col:49> 'int' 8
|     |         `-ImplicitCastExpr 0x24269bb0fa0 <col:53> 'unsigned long long' <IntegralCast>
|     |           `-IntegerLiteral 0x24269bb0f78 <col:53> 'int' 1
|     `-ImplicitCastExpr 0x24269bb50d0 <line:56:14> 'size_t':'unsigned long long' <LValueToRValue>
|       `-DeclRefExpr 0x24269bb50b0 <col:14> 'size_t':'unsigned long long' lvalue Var 0x24269bb0200 'n' 'size_t':'unsigned long long'
|-FunctionDecl 0x24269bb5788 <line:71:1, line:132:1> line:71:6 invalid CRYPTO_ctr128_encrypt 'void (const unsigned char *, unsigned char *, size_t, const void *, unsigned char *, unsigned char *, unsigned int *, int)'
| |-ParmVarDecl 0x24269bb5168 <col:28, col:49> col:49 used in 'const unsigned char *'
| |-ParmVarDecl 0x24269bb51e8 <col:53, col:68> col:68 used out 'unsigned char *'
| |-ParmVarDecl 0x24269bb5260 <line:72:28, col:35> col:35 used len 'size_t':'unsigned long long'
| |-ParmVarDecl 0x24269bb52e0 <col:40, col:52> col:52 used key 'const void *'
| |-ParmVarDecl 0x24269bb53e0 <line:73:28, col:49> col:42 used ivec 'unsigned char *':'unsigned char *'
| |-ParmVarDecl 0x24269bb54b0 <line:74:28, col:55> col:42 used ecount_buf 'unsigned char *':'unsigned char *'
| |-ParmVarDecl 0x24269bb5560 <col:58, col:72> col:72 used num 'unsigned int *'
| |-ParmVarDecl 0x24269bb55e0 <line:75:28, col:39> col:39 invalid block 'int'
| `-CompoundStmt 0x24269bb67b8 <line:76:1, line:132:1>
|   |-DeclStmt 0x24269bb5900 <line:77:5, col:19>
|   | `-VarDecl 0x24269bb5898 <col:5, col:18> col:18 used n 'unsigned int'
|   |-DeclStmt 0x24269bb59d0 <line:78:5, col:17>
|   | `-VarDecl 0x24269bb5928 <col:5, col:16> col:12 used l 'size_t':'unsigned long long' cinit
|   |   `-ImplicitCastExpr 0x24269bb59b8 <col:16> 'size_t':'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x24269bb5990 <col:16> 'int' 0
|   |-BinaryOperator 0x24269bb5aa0 <line:80:5, col:10> 'unsigned int' '='
|   | |-DeclRefExpr 0x24269bb59e8 <col:5> 'unsigned int' lvalue Var 0x24269bb5898 'n' 'unsigned int'
|   | `-ImplicitCastExpr 0x24269bb5a88 <col:9, col:10> 'unsigned int' <LValueToRValue>
|   |   `-UnaryOperator 0x24269bb5a70 <col:9, col:10> 'unsigned int' lvalue prefix '*' cannot overflow
|   |     `-ImplicitCastExpr 0x24269bb5a58 <col:10> 'unsigned int *' <LValueToRValue>
|   |       `-DeclRefExpr 0x24269bb5a20 <col:10> 'unsigned int *' lvalue ParmVar 0x24269bb5560 'num' 'unsigned int *'
|   |-IfStmt 0x24269baefc0 <line:83:5, line:118:5>
|   | |-BinaryOperator 0x24269bb5b90 <line:83:9, col:32> 'int' '=='
|   | | |-BinaryOperator 0x24269bb5b30 <col:9, col:27> 'unsigned long long' '%'
|   | | | |-ImplicitCastExpr 0x24269bb5b18 <col:9> 'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x24269bb5ac0 <col:9> 'int' 16
|   | | | `-UnaryExprOrTypeTraitExpr 0x24269bb5af8 <col:14, col:27> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x24269bb5b78 <col:32> 'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x24269bb5b50 <col:32> 'int' 0
|   | `-CompoundStmt 0x24269baefa8 <col:35, line:118:5>
|   |   `-DoStmt 0x24269baef88 <line:84:9, line:117:19>
|   |     |-CompoundStmt 0x24269baef28 <line:84:12, line:117:9>
|   |     | |-WhileStmt 0x24269bb6080 <line:85:13, line:89:13>
|   |     | | |-BinaryOperator 0x24269bb5c38 <line:85:20, col:25> 'int' '&&'
|   |     | | | |-ImplicitCastExpr 0x24269bb5c08 <col:20> 'unsigned int' <LValueToRValue>
|   |     | | | | `-DeclRefExpr 0x24269bb5bb0 <col:20> 'unsigned int' lvalue Var 0x24269bb5898 'n' 'unsigned int'
|   |     | | | `-ImplicitCastExpr 0x24269bb5c20 <col:25> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x24269bb5bd0 <col:25> 'size_t':'unsigned long long' lvalue ParmVar 0x24269bb5260 'len' 'size_t':'unsigned long long'
|   |     | | `-CompoundStmt 0x24269bb6058 <col:30, line:89:13>
|   |     | |   |-BinaryOperator 0x24269bb5ea8 <line:86:17, col:50> 'unsigned char' '='
|   |     | |   | |-UnaryOperator 0x24269bb5cc8 <col:17, col:24> 'unsigned char' lvalue prefix '*' cannot overflow
|   |     | |   | | `-ParenExpr 0x24269bb5ca8 <col:18, col:24> 'unsigned char *'
|   |     | |   | |   `-UnaryOperator 0x24269bb5c90 <col:19, col:22> 'unsigned char *' postfix '++'
|   |     | |   | |     `-DeclRefExpr 0x24269bb5c58 <col:19> 'unsigned char *' lvalue ParmVar 0x24269bb51e8 'out' 'unsigned char *'
|   |     | |   | `-ImplicitCastExpr 0x24269bb5e90 <col:28, col:50> 'unsigned char' <IntegralCast>
|   |     | |   |   `-BinaryOperator 0x24269bb5e70 <col:28, col:50> 'int' '^'
|   |     | |   |     |-ImplicitCastExpr 0x24269bb5e28 <col:28, col:34> 'int' <IntegralCast>
|   |     | |   |     | `-ImplicitCastExpr 0x24269bb5e10 <col:28, col:34> 'unsigned char' <LValueToRValue>
|   |     | |   |     |   `-UnaryOperator 0x24269bb5d50 <col:28, col:34> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |     | |   |     |     `-ParenExpr 0x24269bb5d30 <col:29, col:34> 'const unsigned char *'
|   |     | |   |     |       `-UnaryOperator 0x24269bb5d18 <col:30, col:32> 'const unsigned char *' postfix '++'
|   |     | |   |     |         `-DeclRefExpr 0x24269bb5ce0 <col:30> 'const unsigned char *' lvalue ParmVar 0x24269bb5168 'in' 'const unsigned char *'
|   |     | |   |     `-ImplicitCastExpr 0x24269bb5e58 <col:38, col:50> 'int' <IntegralCast>
|   |     | |   |       `-ImplicitCastExpr 0x24269bb5e40 <col:38, col:50> 'unsigned char' <LValueToRValue>
|   |     | |   |         `-ArraySubscriptExpr 0x24269bb5df0 <col:38, col:50> 'unsigned char' lvalue
|   |     | |   |           |-ImplicitCastExpr 0x24269bb5dc0 <col:38> 'unsigned char *':'unsigned char *' <LValueToRValue>
|   |     | |   |           | `-DeclRefExpr 0x24269bb5d68 <col:38> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x24269bb54b0 'ecount_buf' 'unsigned char *':'unsigned char *'
|   |     | |   |           `-ImplicitCastExpr 0x24269bb5dd8 <col:49> 'unsigned int' <LValueToRValue>
|   |     | |   |             `-DeclRefExpr 0x24269bb5da0 <col:49> 'unsigned int' lvalue Var 0x24269bb5898 'n' 'unsigned int'
|   |     | |   |-UnaryOperator 0x24269bb5ee8 <line:87:17, col:19> 'size_t':'unsigned long long' prefix '--'
|   |     | |   | `-DeclRefExpr 0x24269bb5ec8 <col:19> 'size_t':'unsigned long long' lvalue ParmVar 0x24269bb5260 'len' 'size_t':'unsigned long long'
|   |     | |   `-BinaryOperator 0x24269bb6038 <line:88:17, col:31> 'unsigned int' '='
|   |     | |     |-DeclRefExpr 0x24269bb5f00 <col:17> 'unsigned int' lvalue Var 0x24269bb5898 'n' 'unsigned int'
|   |     | |     `-BinaryOperator 0x24269bb6018 <col:21, col:31> 'unsigned int' '%'
|   |     | |       |-ParenExpr 0x24269bb5fb8 <col:21, col:27> 'unsigned int'
|   |     | |       | `-BinaryOperator 0x24269bb5f98 <col:22, col:26> 'unsigned int' '+'
|   |     | |       |   |-ImplicitCastExpr 0x24269bb5f68 <col:22> 'unsigned int' <LValueToRValue>
|   |     | |       |   | `-DeclRefExpr 0x24269bb5f20 <col:22> 'unsigned int' lvalue Var 0x24269bb5898 'n' 'unsigned int'
|   |     | |       |   `-ImplicitCastExpr 0x24269bb5f80 <col:26> 'unsigned int' <IntegralCast>
|   |     | |       |     `-IntegerLiteral 0x24269bb5f40 <col:26> 'int' 1
|   |     | |       `-ImplicitCastExpr 0x24269bb6000 <col:31> 'unsigned int' <IntegralCast>
|   |     | |         `-IntegerLiteral 0x24269bb5fd8 <col:31> 'int' 16
|   |     | |-WhileStmt 0x24269bae9e0 <line:96:13, line:106:13>
|   |     | | |-BinaryOperator 0x24269bae0b8 <line:96:20, col:27> 'int' '>='
|   |     | | | |-ImplicitCastExpr 0x24269bae088 <col:20> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | | | | `-DeclRefExpr 0x24269bae040 <col:20> 'size_t':'unsigned long long' lvalue ParmVar 0x24269bb5260 'len' 'size_t':'unsigned long long'
|   |     | | | `-ImplicitCastExpr 0x24269bae0a0 <col:27> 'unsigned long long' <IntegralCast>
|   |     | | |   `-IntegerLiteral 0x24269bae060 <col:27> 'int' 16
|   |     | | `-CompoundStmt 0x24269bae9a0 <col:31, line:106:13>
|   |     | |   |-CallExpr 0x24269bae1c0 <line:98:17, col:40> 'void'
|   |     | |   | |-ImplicitCastExpr 0x24269bae1a8 <col:17> 'void (*)(unsigned char *)' <FunctionToPointerDecay>
|   |     | |   | | `-DeclRefExpr 0x24269bae168 <col:17> 'void (unsigned char *)' Function 0x24269badf68 'ctr128_inc_aligned' 'void (unsigned char *)'
|   |     | |   | `-ImplicitCastExpr 0x24269bae1e8 <col:36> 'unsigned char *':'unsigned char *' <LValueToRValue>
|   |     | |   |   `-DeclRefExpr 0x24269bae188 <col:36> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x24269bb53e0 'ivec' 'unsigned char *':'unsigned char *'
|   |     | |   |-ForStmt 0x24269bae768 <line:99:17, line:101:73>
|   |     | |   | |-BinaryOperator 0x24269bae260 <line:99:22, col:26> 'unsigned int' '='
|   |     | |   | | |-DeclRefExpr 0x24269bae200 <col:22> 'unsigned int' lvalue Var 0x24269bb5898 'n' 'unsigned int'
|   |     | |   | | `-ImplicitCastExpr 0x24269bae248 <col:26> 'unsigned int' <IntegralCast>
|   |     | |   | |   `-IntegerLiteral 0x24269bae220 <col:26> 'int' 0
|   |     | |   | |-<<<NULL>>>
|   |     | |   | |-BinaryOperator 0x24269bae2f8 <col:29, col:33> 'int' '<'
|   |     | |   | | |-ImplicitCastExpr 0x24269bae2c8 <col:29> 'unsigned int' <LValueToRValue>
|   |     | |   | | | `-DeclRefExpr 0x24269bae280 <col:29> 'unsigned int' lvalue Var 0x24269bb5898 'n' 'unsigned int'
|   |     | |   | | `-ImplicitCastExpr 0x24269bae2e0 <col:33> 'unsigned int' <IntegralCast>
|   |     | |   | |   `-IntegerLiteral 0x24269bae2a0 <col:33> 'int' 16
|   |     | |   | |-CompoundAssignOperator 0x24269bae368 <col:37, col:55> 'unsigned int' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |     | |   | | |-DeclRefExpr 0x24269bae318 <col:37> 'unsigned int' lvalue Var 0x24269bb5898 'n' 'unsigned int'
|   |     | |   | | `-UnaryExprOrTypeTraitExpr 0x24269bae348 <col:42, col:55> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|   |     | |   | `-BinaryOperator 0x24269bae748 <line:100:21, line:101:73> 'size_t':'unsigned long long' '='
|   |     | |   |   |-UnaryOperator 0x24269bae4a0 <line:100:21, col:40> 'size_t':'unsigned long long' lvalue prefix '*' cannot overflow
|   |     | |   |   | `-CStyleCastExpr 0x24269bae478 <col:22, col:40> 'size_t *' <BitCast>
|   |     | |   |   |   `-ParenExpr 0x24269bae458 <col:32, col:40> 'unsigned char *'
|   |     | |   |   |     `-BinaryOperator 0x24269bae408 <col:33, col:39> 'unsigned char *' '+'
|   |     | |   |   |       |-ImplicitCastExpr 0x24269bae3d8 <col:33> 'unsigned char *' <LValueToRValue>
|   |     | |   |   |       | `-DeclRefExpr 0x24269bae398 <col:33> 'unsigned char *' lvalue ParmVar 0x24269bb51e8 'out' 'unsigned char *'
|   |     | |   |   |       `-ImplicitCastExpr 0x24269bae3f0 <col:39> 'unsigned int' <LValueToRValue>
|   |     | |   |   |         `-DeclRefExpr 0x24269bae3b8 <col:39> 'unsigned int' lvalue Var 0x24269bb5898 'n' 'unsigned int'
|   |     | |   |   `-BinaryOperator 0x24269bae728 <line:101:25, col:73> 'unsigned long long' '^'
|   |     | |   |     |-ImplicitCastExpr 0x24269bae6f8 <col:25, col:43> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | |   |     | `-UnaryOperator 0x24269bae5c0 <col:25, col:43> 'size_t':'unsigned long long' lvalue prefix '*' cannot overflow
|   |     | |   |     |   `-CStyleCastExpr 0x24269bae598 <col:26, col:43> 'size_t *' <BitCast>
|   |     | |   |     |     `-ParenExpr 0x24269bae578 <col:36, col:43> 'const unsigned char *'
|   |     | |   |     |       `-BinaryOperator 0x24269bae528 <col:37, col:42> 'const unsigned char *' '+'
|   |     | |   |     |         |-ImplicitCastExpr 0x24269bae4f8 <col:37> 'const unsigned char *' <LValueToRValue>
|   |     | |   |     |         | `-DeclRefExpr 0x24269bae4b8 <col:37> 'const unsigned char *' lvalue ParmVar 0x24269bb5168 'in' 'const unsigned char *'
|   |     | |   |     |         `-ImplicitCastExpr 0x24269bae510 <col:42> 'unsigned int' <LValueToRValue>
|   |     | |   |     |           `-DeclRefExpr 0x24269bae4d8 <col:42> 'unsigned int' lvalue Var 0x24269bb5898 'n' 'unsigned int'
|   |     | |   |     `-ImplicitCastExpr 0x24269bae710 <col:47, col:73> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | |   |       `-UnaryOperator 0x24269bae6e0 <col:47, col:73> 'size_t':'unsigned long long' lvalue prefix '*' cannot overflow
|   |     | |   |         `-CStyleCastExpr 0x24269bae6b8 <col:48, col:73> 'size_t *' <BitCast>
|   |     | |   |           `-ParenExpr 0x24269bae698 <col:58, col:73> 'unsigned char *':'unsigned char *'
|   |     | |   |             `-BinaryOperator 0x24269bae648 <col:59, col:72> 'unsigned char *':'unsigned char *' '+'
|   |     | |   |               |-ImplicitCastExpr 0x24269bae618 <col:59> 'unsigned char *':'unsigned char *' <LValueToRValue>
|   |     | |   |               | `-DeclRefExpr 0x24269bae5d8 <col:59> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x24269bb54b0 'ecount_buf' 'unsigned char *':'unsigned char *'
|   |     | |   |               `-ImplicitCastExpr 0x24269bae630 <col:72> 'unsigned int' <LValueToRValue>
|   |     | |   |                 `-DeclRefExpr 0x24269bae5f8 <col:72> 'unsigned int' lvalue Var 0x24269bb5898 'n' 'unsigned int'
|   |     | |   |-CompoundAssignOperator 0x24269bae800 <line:102:17, col:24> 'size_t':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |     | |   | |-DeclRefExpr 0x24269bae7a0 <col:17> 'size_t':'unsigned long long' lvalue ParmVar 0x24269bb5260 'len' 'size_t':'unsigned long long'
|   |     | |   | `-ImplicitCastExpr 0x24269bae7e8 <col:24> 'unsigned long long' <IntegralCast>
|   |     | |   |   `-IntegerLiteral 0x24269bae7c0 <col:24> 'int' 16
|   |     | |   |-CompoundAssignOperator 0x24269bae878 <line:103:17, col:24> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   |     | |   | |-DeclRefExpr 0x24269bae830 <col:17> 'unsigned char *' lvalue ParmVar 0x24269bb51e8 'out' 'unsigned char *'
|   |     | |   | `-IntegerLiteral 0x24269bae850 <col:24> 'int' 16
|   |     | |   |-CompoundAssignOperator 0x24269bae8f0 <line:104:17, col:23> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   |     | |   | |-DeclRefExpr 0x24269bae8a8 <col:17> 'const unsigned char *' lvalue ParmVar 0x24269bb5168 'in' 'const unsigned char *'
|   |     | |   | `-IntegerLiteral 0x24269bae8c8 <col:23> 'int' 16
|   |     | |   `-BinaryOperator 0x24269bae980 <line:105:17, col:21> 'unsigned int' '='
|   |     | |     |-DeclRefExpr 0x24269bae920 <col:17> 'unsigned int' lvalue Var 0x24269bb5898 'n' 'unsigned int'
|   |     | |     `-ImplicitCastExpr 0x24269bae968 <col:21> 'unsigned int' <IntegralCast>
|   |     | |       `-IntegerLiteral 0x24269bae940 <col:21> 'int' 0
|   |     | |-IfStmt 0x24269baee58 <line:107:13, line:114:13>
|   |     | | |-ImplicitCastExpr 0x24269baea18 <line:107:17> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | | | `-DeclRefExpr 0x24269bae9f8 <col:17> 'size_t':'unsigned long long' lvalue ParmVar 0x24269bb5260 'len' 'size_t':'unsigned long long'
|   |     | | `-CompoundStmt 0x24269baee38 <col:22, line:114:13>
|   |     | |   |-CallExpr 0x24269baeae8 <line:109:17, col:40> 'void'
|   |     | |   | |-ImplicitCastExpr 0x24269baead0 <col:17> 'void (*)(unsigned char *)' <FunctionToPointerDecay>
|   |     | |   | | `-DeclRefExpr 0x24269baea90 <col:17> 'void (unsigned char *)' Function 0x24269badf68 'ctr128_inc_aligned' 'void (unsigned char *)'
|   |     | |   | `-ImplicitCastExpr 0x24269baeb10 <col:36> 'unsigned char *':'unsigned char *' <LValueToRValue>
|   |     | |   |   `-DeclRefExpr 0x24269baeab0 <col:36> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x24269bb53e0 'ivec' 'unsigned char *':'unsigned char *'
|   |     | |   `-WhileStmt 0x24269baee20 <line:110:17, line:113:17>
|   |     | |     |-UnaryOperator 0x24269baeb48 <line:110:24, col:27> 'size_t':'unsigned long long' postfix '--'
|   |     | |     | `-DeclRefExpr 0x24269baeb28 <col:24> 'size_t':'unsigned long long' lvalue ParmVar 0x24269bb5260 'len' 'size_t':'unsigned long long'
|   |     | |     `-CompoundStmt 0x24269baee00 <col:31, line:113:17>
|   |     | |       |-BinaryOperator 0x24269baeda8 <line:111:21, col:50> 'unsigned char' '='
|   |     | |       | |-ArraySubscriptExpr 0x24269baebd0 <col:21, col:26> 'unsigned char' lvalue
|   |     | |       | | |-ImplicitCastExpr 0x24269baeba0 <col:21> 'unsigned char *' <LValueToRValue>
|   |     | |       | | | `-DeclRefExpr 0x24269baeb60 <col:21> 'unsigned char *' lvalue ParmVar 0x24269bb51e8 'out' 'unsigned char *'
|   |     | |       | | `-ImplicitCastExpr 0x24269baebb8 <col:25> 'unsigned int' <LValueToRValue>
|   |     | |       | |   `-DeclRefExpr 0x24269baeb80 <col:25> 'unsigned int' lvalue Var 0x24269bb5898 'n' 'unsigned int'
|   |     | |       | `-ImplicitCastExpr 0x24269baed90 <col:30, col:50> 'unsigned char' <IntegralCast>
|   |     | |       |   `-BinaryOperator 0x24269baed70 <col:30, col:50> 'int' '^'
|   |     | |       |     |-ImplicitCastExpr 0x24269baed28 <col:30, col:34> 'int' <IntegralCast>
|   |     | |       |     | `-ImplicitCastExpr 0x24269baed10 <col:30, col:34> 'unsigned char' <LValueToRValue>
|   |     | |       |     |   `-ArraySubscriptExpr 0x24269baec60 <col:30, col:34> 'const unsigned char' lvalue
|   |     | |       |     |     |-ImplicitCastExpr 0x24269baec30 <col:30> 'const unsigned char *' <LValueToRValue>
|   |     | |       |     |     | `-DeclRefExpr 0x24269baebf0 <col:30> 'const unsigned char *' lvalue ParmVar 0x24269bb5168 'in' 'const unsigned char *'
|   |     | |       |     |     `-ImplicitCastExpr 0x24269baec48 <col:33> 'unsigned int' <LValueToRValue>
|   |     | |       |     |       `-DeclRefExpr 0x24269baec10 <col:33> 'unsigned int' lvalue Var 0x24269bb5898 'n' 'unsigned int'
|   |     | |       |     `-ImplicitCastExpr 0x24269baed58 <col:38, col:50> 'int' <IntegralCast>
|   |     | |       |       `-ImplicitCastExpr 0x24269baed40 <col:38, col:50> 'unsigned char' <LValueToRValue>
|   |     | |       |         `-ArraySubscriptExpr 0x24269baecf0 <col:38, col:50> 'unsigned char' lvalue
|   |     | |       |           |-ImplicitCastExpr 0x24269baecc0 <col:38> 'unsigned char *':'unsigned char *' <LValueToRValue>
|   |     | |       |           | `-DeclRefExpr 0x24269baec80 <col:38> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x24269bb54b0 'ecount_buf' 'unsigned char *':'unsigned char *'
|   |     | |       |           `-ImplicitCastExpr 0x24269baecd8 <col:49> 'unsigned int' <LValueToRValue>
|   |     | |       |             `-DeclRefExpr 0x24269baeca0 <col:49> 'unsigned int' lvalue Var 0x24269bb5898 'n' 'unsigned int'
|   |     | |       `-UnaryOperator 0x24269baede8 <line:112:21, col:23> 'unsigned int' prefix '++'
|   |     | |         `-DeclRefExpr 0x24269baedc8 <col:23> 'unsigned int' lvalue Var 0x24269bb5898 'n' 'unsigned int'
|   |     | |-BinaryOperator 0x24269baeef8 <line:115:13, col:20> 'unsigned int' '='
|   |     | | |-UnaryOperator 0x24269baeea8 <col:13, col:14> 'unsigned int' lvalue prefix '*' cannot overflow
|   |     | | | `-ImplicitCastExpr 0x24269baee90 <col:14> 'unsigned int *' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x24269baee70 <col:14> 'unsigned int *' lvalue ParmVar 0x24269bb5560 'num' 'unsigned int *'
|   |     | | `-ImplicitCastExpr 0x24269baeee0 <col:20> 'unsigned int' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x24269baeec0 <col:20> 'unsigned int' lvalue Var 0x24269bb5898 'n' 'unsigned int'
|   |     | `-ReturnStmt 0x24269baef18 <line:116:13>
|   |     `-IntegerLiteral 0x24269baef60 <line:117:18> 'int' 0
|   |-WhileStmt 0x24269bb66f8 <line:121:5, line:129:5>
|   | |-BinaryOperator 0x24269bb60f0 <line:121:12, col:16> 'int' '<'
|   | | |-ImplicitCastExpr 0x24269bb60c0 <col:12> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x24269baefd8 <col:12> 'size_t':'unsigned long long' lvalue Var 0x24269bb5928 'l' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x24269bb60d8 <col:16> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x24269baf010 <col:16> 'size_t':'unsigned long long' lvalue ParmVar 0x24269bb5260 'len' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x24269bb66c8 <col:21, line:129:5>
|   |   |-IfStmt 0x24269bb62b8 <line:122:9, line:125:9>
|   |   | |-BinaryOperator 0x24269bb6188 <line:122:13, col:18> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x24269bb6158 <col:13> 'unsigned int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x24269bb6110 <col:13> 'unsigned int' lvalue Var 0x24269bb5898 'n' 'unsigned int'
|   |   | | `-ImplicitCastExpr 0x24269bb6170 <col:18> 'unsigned int' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x24269bb6130 <col:18> 'int' 0
|   |   | `-CompoundStmt 0x24269bb62a0 <col:21, line:125:9>
|   |   |   `-CallExpr 0x24269bb6260 <line:124:13, col:28> 'void'
|   |   |     |-ImplicitCastExpr 0x24269bb6248 <col:13> 'void (*)(unsigned char *)' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x24269bb6208 <col:13> 'void (unsigned char *)' Function 0x24269bad878 'ctr128_inc' 'void (unsigned char *)'
|   |   |     `-ImplicitCastExpr 0x24269bb6288 <col:24> 'unsigned char *':'unsigned char *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x24269bb6228 <col:24> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x24269bb53e0 'ivec' 'unsigned char *':'unsigned char *'
|   |   |-BinaryOperator 0x24269bb6518 <line:126:9, col:38> 'unsigned char' '='
|   |   | |-ArraySubscriptExpr 0x24269bb6340 <col:9, col:14> 'unsigned char' lvalue
|   |   | | |-ImplicitCastExpr 0x24269bb6310 <col:9> 'unsigned char *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x24269bb62d0 <col:9> 'unsigned char *' lvalue ParmVar 0x24269bb51e8 'out' 'unsigned char *'
|   |   | | `-ImplicitCastExpr 0x24269bb6328 <col:13> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x24269bb62f0 <col:13> 'size_t':'unsigned long long' lvalue Var 0x24269bb5928 'l' 'size_t':'unsigned long long'
|   |   | `-ImplicitCastExpr 0x24269bb6500 <col:18, col:38> 'unsigned char' <IntegralCast>
|   |   |   `-BinaryOperator 0x24269bb64e0 <col:18, col:38> 'int' '^'
|   |   |     |-ImplicitCastExpr 0x24269bb6498 <col:18, col:22> 'int' <IntegralCast>
|   |   |     | `-ImplicitCastExpr 0x24269bb6480 <col:18, col:22> 'unsigned char' <LValueToRValue>
|   |   |     |   `-ArraySubscriptExpr 0x24269bb63d0 <col:18, col:22> 'const unsigned char' lvalue
|   |   |     |     |-ImplicitCastExpr 0x24269bb63a0 <col:18> 'const unsigned char *' <LValueToRValue>
|   |   |     |     | `-DeclRefExpr 0x24269bb6360 <col:18> 'const unsigned char *' lvalue ParmVar 0x24269bb5168 'in' 'const unsigned char *'
|   |   |     |     `-ImplicitCastExpr 0x24269bb63b8 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |     |       `-DeclRefExpr 0x24269bb6380 <col:21> 'size_t':'unsigned long long' lvalue Var 0x24269bb5928 'l' 'size_t':'unsigned long long'
|   |   |     `-ImplicitCastExpr 0x24269bb64c8 <col:26, col:38> 'int' <IntegralCast>
|   |   |       `-ImplicitCastExpr 0x24269bb64b0 <col:26, col:38> 'unsigned char' <LValueToRValue>
|   |   |         `-ArraySubscriptExpr 0x24269bb6460 <col:26, col:38> 'unsigned char' lvalue
|   |   |           |-ImplicitCastExpr 0x24269bb6430 <col:26> 'unsigned char *':'unsigned char *' <LValueToRValue>
|   |   |           | `-DeclRefExpr 0x24269bb63f0 <col:26> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x24269bb54b0 'ecount_buf' 'unsigned char *':'unsigned char *'
|   |   |           `-ImplicitCastExpr 0x24269bb6448 <col:37> 'unsigned int' <LValueToRValue>
|   |   |             `-DeclRefExpr 0x24269bb6410 <col:37> 'unsigned int' lvalue Var 0x24269bb5898 'n' 'unsigned int'
|   |   |-UnaryOperator 0x24269bb6558 <line:127:9, col:11> 'size_t':'unsigned long long' prefix '++'
|   |   | `-DeclRefExpr 0x24269bb6538 <col:11> 'size_t':'unsigned long long' lvalue Var 0x24269bb5928 'l' 'size_t':'unsigned long long'
|   |   `-BinaryOperator 0x24269bb66a8 <line:128:9, col:23> 'unsigned int' '='
|   |     |-DeclRefExpr 0x24269bb6570 <col:9> 'unsigned int' lvalue Var 0x24269bb5898 'n' 'unsigned int'
|   |     `-BinaryOperator 0x24269bb6688 <col:13, col:23> 'unsigned int' '%'
|   |       |-ParenExpr 0x24269bb6628 <col:13, col:19> 'unsigned int'
|   |       | `-BinaryOperator 0x24269bb6608 <col:14, col:18> 'unsigned int' '+'
|   |       |   |-ImplicitCastExpr 0x24269bb65d8 <col:14> 'unsigned int' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x24269bb6590 <col:14> 'unsigned int' lvalue Var 0x24269bb5898 'n' 'unsigned int'
|   |       |   `-ImplicitCastExpr 0x24269bb65f0 <col:18> 'unsigned int' <IntegralCast>
|   |       |     `-IntegerLiteral 0x24269bb65b0 <col:18> 'int' 1
|   |       `-ImplicitCastExpr 0x24269bb6670 <col:23> 'unsigned int' <IntegralCast>
|   |         `-IntegerLiteral 0x24269bb6648 <col:23> 'int' 16
|   `-BinaryOperator 0x24269bb6798 <line:131:5, col:12> 'unsigned int' '='
|     |-UnaryOperator 0x24269bb6748 <col:5, col:6> 'unsigned int' lvalue prefix '*' cannot overflow
|     | `-ImplicitCastExpr 0x24269bb6730 <col:6> 'unsigned int *' <LValueToRValue>
|     |   `-DeclRefExpr 0x24269bb6710 <col:6> 'unsigned int *' lvalue ParmVar 0x24269bb5560 'num' 'unsigned int *'
|     `-ImplicitCastExpr 0x24269bb6780 <col:12> 'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x24269bb6760 <col:12> 'unsigned int' lvalue Var 0x24269bb5898 'n' 'unsigned int'
|-FunctionDecl 0x24269bb68b8 <line:135:1, line:145:1> line:135:13 used ctr96_inc 'void (unsigned char *)' static
| |-ParmVarDecl 0x24269bb6810 <col:23, col:38> col:38 used counter 'unsigned char *'
| `-CompoundStmt 0x24269bb6ec8 <line:136:1, line:145:1>
|   |-DeclStmt 0x24269bb6b00 <line:137:5, col:22>
|   | |-VarDecl 0x24269bb6988 <col:5, col:13> col:9 used n 'u32':'unsigned int' cinit
|   | | `-ImplicitCastExpr 0x24269bb6a18 <col:13> 'u32':'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x24269bb69f0 <col:13> 'int' 12
|   | `-VarDecl 0x24269bb6a40 <col:5, col:21> col:17 used c 'u32':'unsigned int' cinit
|   |   `-ImplicitCastExpr 0x24269bb6ad0 <col:21> 'u32':'unsigned int' <IntegralCast>
|   |     `-IntegerLiteral 0x24269bb6aa8 <col:21> 'int' 1
|   `-DoStmt 0x24269bb6ea8 <line:139:5, line:144:15>
|     |-CompoundStmt 0x24269bb6e40 <line:139:8, line:144:5>
|     | |-UnaryOperator 0x24269bb6b50 <line:140:9, col:11> 'u32':'unsigned int' prefix '--'
|     | | `-DeclRefExpr 0x24269bb6b18 <col:11> 'u32':'unsigned int' lvalue Var 0x24269bb6988 'n' 'u32':'unsigned int'
|     | |-CompoundAssignOperator 0x24269bb6c60 <line:141:9, col:23> 'u32':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|     | | |-DeclRefExpr 0x24269bb6b68 <col:9> 'u32':'unsigned int' lvalue Var 0x24269bb6a40 'c' 'u32':'unsigned int'
|     | | `-ImplicitCastExpr 0x24269bb6c48 <col:14, col:23> 'unsigned int' <IntegralCast>
|     | |   `-ImplicitCastExpr 0x24269bb6c30 <col:14, col:23> 'unsigned char' <LValueToRValue>
|     | |     `-ArraySubscriptExpr 0x24269bb6c10 <col:14, col:23> 'unsigned char' lvalue
|     | |       |-ImplicitCastExpr 0x24269bb6be0 <col:14> 'unsigned char *' <LValueToRValue>
|     | |       | `-DeclRefExpr 0x24269bb6ba0 <col:14> 'unsigned char *' lvalue ParmVar 0x24269bb6810 'counter' 'unsigned char *'
|     | |       `-ImplicitCastExpr 0x24269bb6bf8 <col:22> 'u32':'unsigned int' <LValueToRValue>
|     | |         `-DeclRefExpr 0x24269bb6bc0 <col:22> 'u32':'unsigned int' lvalue Var 0x24269bb6988 'n' 'u32':'unsigned int'
|     | |-BinaryOperator 0x24269bb6d90 <line:142:9, col:26> 'unsigned char' '='
|     | | |-ArraySubscriptExpr 0x24269bb6d00 <col:9, col:18> 'unsigned char' lvalue
|     | | | |-ImplicitCastExpr 0x24269bb6cd0 <col:9> 'unsigned char *' <LValueToRValue>
|     | | | | `-DeclRefExpr 0x24269bb6c90 <col:9> 'unsigned char *' lvalue ParmVar 0x24269bb6810 'counter' 'unsigned char *'
|     | | | `-ImplicitCastExpr 0x24269bb6ce8 <col:17> 'u32':'unsigned int' <LValueToRValue>
|     | | |   `-DeclRefExpr 0x24269bb6cb0 <col:17> 'u32':'unsigned int' lvalue Var 0x24269bb6988 'n' 'u32':'unsigned int'
|     | | `-CStyleCastExpr 0x24269bb6d68 <col:22, col:26> 'u8':'unsigned char' <IntegralCast>
|     | |   `-ImplicitCastExpr 0x24269bb6d50 <col:26> 'u32':'unsigned int' <LValueToRValue> part_of_explicit_cast
|     | |     `-DeclRefExpr 0x24269bb6d20 <col:26> 'u32':'unsigned int' lvalue Var 0x24269bb6a40 'c' 'u32':'unsigned int'
|     | `-CompoundAssignOperator 0x24269bb6e10 <line:143:9, col:15> 'u32':'unsigned int' '>>=' ComputeLHSTy='u32':'unsigned int' ComputeResultTy='u32':'unsigned int'
|     |   |-DeclRefExpr 0x24269bb6db0 <col:9> 'u32':'unsigned int' lvalue Var 0x24269bb6a40 'c' 'u32':'unsigned int'
|     |   `-IntegerLiteral 0x24269bb6dd0 <col:15> 'int' 8
|     `-ImplicitCastExpr 0x24269bb6e90 <line:144:14> 'u32':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x24269bb6e70 <col:14> 'u32':'unsigned int' lvalue Var 0x24269bb6988 'n' 'u32':'unsigned int'
|-FunctionDecl 0x24269bbf2d8 <line:147:1, line:209:1> line:147:6 invalid CRYPTO_ctr128_encrypt_ctr32 'void (const unsigned char *, unsigned char *, size_t, const void *, unsigned char *, unsigned char *, unsigned int *, int)'
| |-ParmVarDecl 0x24269bb6f00 <col:34, col:55> col:55 used in 'const unsigned char *'
| |-ParmVarDecl 0x24269bb6f80 <col:59, col:74> col:74 used out 'unsigned char *'
| |-ParmVarDecl 0x24269bb6ff8 <line:148:34, col:41> col:41 used len 'size_t':'unsigned long long'
| |-ParmVarDecl 0x24269bbef70 <col:46, col:58> col:58 used key 'const void *'
| |-ParmVarDecl 0x24269bbf040 <line:149:34, col:55> col:48 used ivec 'unsigned char *':'unsigned char *'
| |-ParmVarDecl 0x24269bbf110 <line:150:34, col:61> col:48 used ecount_buf 'unsigned char *':'unsigned char *'
| |-ParmVarDecl 0x24269bbf190 <line:151:34, col:48> col:48 used num 'unsigned int *'
| |-ParmVarDecl 0x24269bbf210 <col:53, col:62> col:62 invalid func 'int'
| `-CompoundStmt 0x24269bbc878 <line:152:1, line:209:1>
|   |-DeclStmt 0x24269bbf4e8 <line:153:5, col:26>
|   | |-VarDecl 0x24269bbf3e8 <col:5, col:18> col:18 used n 'unsigned int'
|   | `-VarDecl 0x24269bbf468 <col:5, col:21> col:21 used ctr32 'unsigned int'
|   |-BinaryOperator 0x24269bbf5b8 <line:155:5, col:10> 'unsigned int' '='
|   | |-DeclRefExpr 0x24269bbf500 <col:5> 'unsigned int' lvalue Var 0x24269bbf3e8 'n' 'unsigned int'
|   | `-ImplicitCastExpr 0x24269bbf5a0 <col:9, col:10> 'unsigned int' <LValueToRValue>
|   |   `-UnaryOperator 0x24269bbf588 <col:9, col:10> 'unsigned int' lvalue prefix '*' cannot overflow
|   |     `-ImplicitCastExpr 0x24269bbf570 <col:10> 'unsigned int *' <LValueToRValue>
|   |       `-DeclRefExpr 0x24269bbf538 <col:10> 'unsigned int *' lvalue ParmVar 0x24269bbf190 'num' 'unsigned int *'
|   |-WhileStmt 0x24269bbfaa8 <line:157:5, line:161:5>
|   | |-BinaryOperator 0x24269bbf660 <line:157:12, col:17> 'int' '&&'
|   | | |-ImplicitCastExpr 0x24269bbf630 <col:12> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x24269bbf5d8 <col:12> 'unsigned int' lvalue Var 0x24269bbf3e8 'n' 'unsigned int'
|   | | `-ImplicitCastExpr 0x24269bbf648 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x24269bbf5f8 <col:17> 'size_t':'unsigned long long' lvalue ParmVar 0x24269bb6ff8 'len' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x24269bbfa80 <col:22, line:161:5>
|   |   |-BinaryOperator 0x24269bbf8d0 <line:158:9, col:42> 'unsigned char' '='
|   |   | |-UnaryOperator 0x24269bbf6f0 <col:9, col:16> 'unsigned char' lvalue prefix '*' cannot overflow
|   |   | | `-ParenExpr 0x24269bbf6d0 <col:10, col:16> 'unsigned char *'
|   |   | |   `-UnaryOperator 0x24269bbf6b8 <col:11, col:14> 'unsigned char *' postfix '++'
|   |   | |     `-DeclRefExpr 0x24269bbf680 <col:11> 'unsigned char *' lvalue ParmVar 0x24269bb6f80 'out' 'unsigned char *'
|   |   | `-ImplicitCastExpr 0x24269bbf8b8 <col:20, col:42> 'unsigned char' <IntegralCast>
|   |   |   `-BinaryOperator 0x24269bbf898 <col:20, col:42> 'int' '^'
|   |   |     |-ImplicitCastExpr 0x24269bbf850 <col:20, col:26> 'int' <IntegralCast>
|   |   |     | `-ImplicitCastExpr 0x24269bbf838 <col:20, col:26> 'unsigned char' <LValueToRValue>
|   |   |     |   `-UnaryOperator 0x24269bbf778 <col:20, col:26> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   |     |     `-ParenExpr 0x24269bbf758 <col:21, col:26> 'const unsigned char *'
|   |   |     |       `-UnaryOperator 0x24269bbf740 <col:22, col:24> 'const unsigned char *' postfix '++'
|   |   |     |         `-DeclRefExpr 0x24269bbf708 <col:22> 'const unsigned char *' lvalue ParmVar 0x24269bb6f00 'in' 'const unsigned char *'
|   |   |     `-ImplicitCastExpr 0x24269bbf880 <col:30, col:42> 'int' <IntegralCast>
|   |   |       `-ImplicitCastExpr 0x24269bbf868 <col:30, col:42> 'unsigned char' <LValueToRValue>
|   |   |         `-ArraySubscriptExpr 0x24269bbf818 <col:30, col:42> 'unsigned char' lvalue
|   |   |           |-ImplicitCastExpr 0x24269bbf7e8 <col:30> 'unsigned char *':'unsigned char *' <LValueToRValue>
|   |   |           | `-DeclRefExpr 0x24269bbf790 <col:30> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x24269bbf110 'ecount_buf' 'unsigned char *':'unsigned char *'
|   |   |           `-ImplicitCastExpr 0x24269bbf800 <col:41> 'unsigned int' <LValueToRValue>
|   |   |             `-DeclRefExpr 0x24269bbf7c8 <col:41> 'unsigned int' lvalue Var 0x24269bbf3e8 'n' 'unsigned int'
|   |   |-UnaryOperator 0x24269bbf910 <line:159:9, col:11> 'size_t':'unsigned long long' prefix '--'
|   |   | `-DeclRefExpr 0x24269bbf8f0 <col:11> 'size_t':'unsigned long long' lvalue ParmVar 0x24269bb6ff8 'len' 'size_t':'unsigned long long'
|   |   `-BinaryOperator 0x24269bbfa60 <line:160:9, col:23> 'unsigned int' '='
|   |     |-DeclRefExpr 0x24269bbf928 <col:9> 'unsigned int' lvalue Var 0x24269bbf3e8 'n' 'unsigned int'
|   |     `-BinaryOperator 0x24269bbfa40 <col:13, col:23> 'unsigned int' '%'
|   |       |-ParenExpr 0x24269bbf9e0 <col:13, col:19> 'unsigned int'
|   |       | `-BinaryOperator 0x24269bbf9c0 <col:14, col:18> 'unsigned int' '+'
|   |       |   |-ImplicitCastExpr 0x24269bbf990 <col:14> 'unsigned int' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x24269bbf948 <col:14> 'unsigned int' lvalue Var 0x24269bbf3e8 'n' 'unsigned int'
|   |       |   `-ImplicitCastExpr 0x24269bbf9a8 <col:18> 'unsigned int' <IntegralCast>
|   |       |     `-IntegerLiteral 0x24269bbf968 <col:18> 'int' 1
|   |       `-ImplicitCastExpr 0x24269bbfa28 <col:23> 'unsigned int' <IntegralCast>
|   |         `-IntegerLiteral 0x24269bbfa00 <col:23> 'int' 16
|   |-BinaryOperator 0x24269bbffd8 <line:163:5, .//openssl//file_jk/before\crypto\modes/modes_lcl.h:78:49> 'unsigned int' '='
|   | |-DeclRefExpr 0x24269bbfac0 <.//openssl//file_jk/before\crypto\modes\ctr128.c:163:5> 'unsigned int' lvalue Var 0x24269bbf468 'ctr32' 'unsigned int'
|   | `-ImplicitCastExpr 0x24269bbffc0 <.//openssl//file_jk/before\crypto\modes/modes_lcl.h:78:25, col:49> 'unsigned int' <IntegralCast>
|   |   `-CallExpr 0x24269bbff80 <col:25, col:49> 'unsigned long'
|   |     |-ImplicitCastExpr 0x24269bbff38 <col:25> 'unsigned long (*)(unsigned long)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x24269bbfcc0 <col:25> 'unsigned long (unsigned long)' Function 0x24269bbfb30 '_byteswap_ulong' 'unsigned long (unsigned long)'
|   |     `-ImplicitCastExpr 0x24269bbffa8 <col:41, col:48> 'unsigned long' <IntegralCast>
|   |       `-CStyleCastExpr 0x24269bbfee0 <col:41, col:48> 'u32':'unsigned int' <NoOp>
|   |         `-ImplicitCastExpr 0x24269bbfec8 <col:46, col:48> 'u32':'unsigned int' <LValueToRValue> part_of_explicit_cast
|   |           `-ParenExpr 0x24269bbfea8 <col:46, col:48> 'const u32':'const unsigned int' lvalue
|   |             `-UnaryOperator 0x24269bbfe60 <line:88:33, col:49> 'const u32':'const unsigned int' lvalue prefix '*' cannot overflow
|   |               `-CStyleCastExpr 0x24269bbfe38 <col:34, col:49> 'const u32 *' <BitCast>
|   |                 `-ParenExpr 0x24269bbfe18 <col:47, col:49> 'unsigned char *':'unsigned char *'
|   |                   `-BinaryOperator 0x24269bbfd70 <.//openssl//file_jk/before\crypto\modes\ctr128.c:163:20, col:27> 'unsigned char *':'unsigned char *' '+'
|   |                     |-ImplicitCastExpr 0x24269bbfd58 <col:20> 'unsigned char *':'unsigned char *' <LValueToRValue>
|   |                     | `-DeclRefExpr 0x24269bbfcf8 <col:20> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x24269bbf040 'ivec' 'unsigned char *':'unsigned char *'
|   |                     `-IntegerLiteral 0x24269bbfd30 <col:27> 'int' 12
|   |-WhileStmt 0x24269bc0e58 <line:164:5, line:194:5>
|   | |-BinaryOperator 0x24269bc0070 <line:164:12, col:19> 'int' '>='
|   | | |-ImplicitCastExpr 0x24269bc0040 <col:12> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x24269bbfff8 <col:12> 'size_t':'unsigned long long' lvalue ParmVar 0x24269bb6ff8 'len' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x24269bc0058 <col:19> 'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x24269bc0018 <col:19> 'int' 16
|   | `-CompoundStmt 0x24269bc0df8 <col:23, line:194:5>
|   |   |-DeclStmt 0x24269bc01a0 <line:165:9, col:33>
|   |   | `-VarDecl 0x24269bc00a0 <col:9, col:31> col:16 used blocks 'size_t':'unsigned long long' cinit
|   |   |   `-BinaryOperator 0x24269bc0180 <col:25, col:31> 'unsigned long long' '/'
|   |   |     |-ImplicitCastExpr 0x24269bc0150 <col:25> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x24269bc0108 <col:25> 'size_t':'unsigned long long' lvalue ParmVar 0x24269bb6ff8 'len' 'size_t':'unsigned long long'
|   |   |     `-ImplicitCastExpr 0x24269bc0168 <col:31> 'unsigned long long' <IntegralCast>
|   |   |       `-IntegerLiteral 0x24269bc0128 <col:31> 'int' 16
|   |   |-IfStmt 0x24269bc0460 <line:171:9, line:172:31>
|   |   | |-BinaryOperator 0x24269bc0358 <line:171:13, col:72> 'int' '&&'
|   |   | | |-BinaryOperator 0x24269bc0220 <col:13, col:49> 'int' '>'
|   |   | | | |-UnaryExprOrTypeTraitExpr 0x24269bc01c8 <col:13, col:26> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|   |   | | | `-UnaryExprOrTypeTraitExpr 0x24269bc0200 <col:30, col:49> 'unsigned long long' sizeof 'unsigned int'
|   |   | | `-BinaryOperator 0x24269bc0338 <col:54, col:72> 'int' '>'
|   |   | |   |-ImplicitCastExpr 0x24269bc0308 <col:54> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | |   | `-DeclRefExpr 0x24269bc0240 <col:54> 'size_t':'unsigned long long' lvalue Var 0x24269bc00a0 'blocks' 'size_t':'unsigned long long'
|   |   | |   `-ImplicitCastExpr 0x24269bc0320 <col:63, col:72> 'unsigned long long' <IntegralCast>
|   |   | |     `-ParenExpr 0x24269bc02e8 <col:63, col:72> 'unsigned int'
|   |   | |       `-BinaryOperator 0x24269bc02c8 <col:64, col:70> 'unsigned int' '<<'
|   |   | |         |-IntegerLiteral 0x24269bc0278 <col:64> 'unsigned int' 1
|   |   | |         `-IntegerLiteral 0x24269bc02a0 <col:70> 'int' 28
|   |   | `-BinaryOperator 0x24269bc0440 <line:172:13, col:31> 'size_t':'unsigned long long' '='
|   |   |   |-DeclRefExpr 0x24269bc0378 <col:13> 'size_t':'unsigned long long' lvalue Var 0x24269bc00a0 'blocks' 'size_t':'unsigned long long'
|   |   |   `-ImplicitCastExpr 0x24269bc0428 <col:22, col:31> 'size_t':'unsigned long long' <IntegralCast>
|   |   |     `-ParenExpr 0x24269bc0408 <col:22, col:31> 'unsigned int'
|   |   |       `-BinaryOperator 0x24269bc03e8 <col:23, col:29> 'unsigned int' '<<'
|   |   |         |-IntegerLiteral 0x24269bc0398 <col:23> 'unsigned int' 1
|   |   |         `-IntegerLiteral 0x24269bc03c0 <col:29> 'int' 28
|   |   |-CompoundAssignOperator 0x24269bc0508 <line:179:9, col:23> 'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |   | |-DeclRefExpr 0x24269bc0478 <col:9> 'unsigned int' lvalue Var 0x24269bbf468 'ctr32' 'unsigned int'
|   |   | `-CStyleCastExpr 0x24269bc04e0 <col:18, col:23> 'u32':'unsigned int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x24269bc04c8 <col:23> 'size_t':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   |   |     `-DeclRefExpr 0x24269bc0498 <col:23> 'size_t':'unsigned long long' lvalue Var 0x24269bc00a0 'blocks' 'size_t':'unsigned long long'
|   |   |-IfStmt 0x24269bc0720 <line:180:9, line:183:9>
|   |   | |-BinaryOperator 0x24269bc05c0 <line:180:13, col:21> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x24269bc05a8 <col:13> 'unsigned long long' <IntegralCast>
|   |   | | | `-ImplicitCastExpr 0x24269bc0578 <col:13> 'unsigned int' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x24269bc0538 <col:13> 'unsigned int' lvalue Var 0x24269bbf468 'ctr32' 'unsigned int'
|   |   | | `-ImplicitCastExpr 0x24269bc0590 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x24269bc0558 <col:21> 'size_t':'unsigned long long' lvalue Var 0x24269bc00a0 'blocks' 'size_t':'unsigned long long'
|   |   | `-CompoundStmt 0x24269bc0700 <col:29, line:183:9>
|   |   |   |-CompoundAssignOperator 0x24269bc0650 <line:181:13, col:23> 'size_t':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |   |   | |-DeclRefExpr 0x24269bc05e0 <col:13> 'size_t':'unsigned long long' lvalue Var 0x24269bc00a0 'blocks' 'size_t':'unsigned long long'
|   |   |   | `-ImplicitCastExpr 0x24269bc0638 <col:23> 'unsigned long long' <IntegralCast>
|   |   |   |   `-ImplicitCastExpr 0x24269bc0620 <col:23> 'unsigned int' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x24269bc0600 <col:23> 'unsigned int' lvalue Var 0x24269bbf468 'ctr32' 'unsigned int'
|   |   |   `-BinaryOperator 0x24269bc06e0 <line:182:13, col:21> 'unsigned int' '='
|   |   |     |-DeclRefExpr 0x24269bc0680 <col:13> 'unsigned int' lvalue Var 0x24269bbf468 'ctr32' 'unsigned int'
|   |   |     `-ImplicitCastExpr 0x24269bc06c8 <col:21> 'unsigned int' <IntegralCast>
|   |   |       `-IntegerLiteral 0x24269bc06a0 <col:21> 'int' 0
|   |   |-BinaryOperator 0x24269bc0a68 <.//openssl//file_jk/before\crypto\modes/modes_lcl.h:89:26, line:78:49> 'u32':'unsigned int' '='
|   |   | |-UnaryOperator 0x24269bc0910 <line:89:26, col:36> 'u32':'unsigned int' lvalue prefix '*' cannot overflow
|   |   | | `-CStyleCastExpr 0x24269bc08e8 <col:27, col:36> 'u32 *' <BitCast>
|   |   | |   `-ParenExpr 0x24269bc08c8 <col:34, col:36> 'unsigned char *':'unsigned char *'
|   |   | |     `-BinaryOperator 0x24269bc0850 <.//openssl//file_jk/before\crypto\modes\ctr128.c:186:16, col:23> 'unsigned char *':'unsigned char *' '+'
|   |   | |       |-ImplicitCastExpr 0x24269bc0838 <col:16> 'unsigned char *':'unsigned char *' <LValueToRValue>
|   |   | |       | `-DeclRefExpr 0x24269bc07f0 <col:16> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x24269bbf040 'ivec' 'unsigned char *':'unsigned char *'
|   |   | |       `-IntegerLiteral 0x24269bc0810 <col:23> 'int' 12
|   |   | `-ImplicitCastExpr 0x24269bc0a50 <.//openssl//file_jk/before\crypto\modes/modes_lcl.h:78:25, col:49> 'u32':'unsigned int' <IntegralCast>
|   |   |   `-CallExpr 0x24269bc0a10 <col:25, col:49> 'unsigned long'
|   |   |     |-ImplicitCastExpr 0x24269bc09f8 <col:25> 'unsigned long (*)(unsigned long)' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x24269bc0928 <col:25> 'unsigned long (unsigned long)' Function 0x24269bbfb30 '_byteswap_ulong' 'unsigned long (unsigned long)'
|   |   |     `-ImplicitCastExpr 0x24269bc0a38 <col:41, col:48> 'unsigned long' <IntegralCast>
|   |   |       `-CStyleCastExpr 0x24269bc09d0 <col:41, col:48> 'u32':'unsigned int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x24269bc09b8 <col:46, col:48> 'unsigned int' <LValueToRValue> part_of_explicit_cast
|   |   |           `-ParenExpr 0x24269bc0998 <col:46, col:48> 'unsigned int' lvalue
|   |   |             `-DeclRefExpr 0x24269bc0948 <.//openssl//file_jk/before\crypto\modes\ctr128.c:186:27> 'unsigned int' lvalue Var 0x24269bbf468 'ctr32' 'unsigned int'
|   |   |-IfStmt 0x24269bc0bb8 <line:188:9, line:189:27>
|   |   | |-BinaryOperator 0x24269bc0b00 <line:188:13, col:22> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x24269bc0ad0 <col:13> 'unsigned int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x24269bc0a88 <col:13> 'unsigned int' lvalue Var 0x24269bbf468 'ctr32' 'unsigned int'
|   |   | | `-ImplicitCastExpr 0x24269bc0ae8 <col:22> 'unsigned int' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x24269bc0aa8 <col:22> 'int' 0
|   |   | `-CallExpr 0x24269bc0b78 <line:189:13, col:27> 'void'
|   |   |   |-ImplicitCastExpr 0x24269bc0b60 <col:13> 'void (*)(unsigned char *)' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x24269bc0b20 <col:13> 'void (unsigned char *)' Function 0x24269bb68b8 'ctr96_inc' 'void (unsigned char *)'
|   |   |   `-ImplicitCastExpr 0x24269bc0ba0 <col:23> 'unsigned char *':'unsigned char *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x24269bc0b40 <col:23> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x24269bbf040 'ivec' 'unsigned char *':'unsigned char *'
|   |   |-CompoundAssignOperator 0x24269bc0c30 <line:190:9, col:19> 'size_t':'unsigned long long' '*=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |   | |-DeclRefExpr 0x24269bc0bd0 <col:9> 'size_t':'unsigned long long' lvalue Var 0x24269bc00a0 'blocks' 'size_t':'unsigned long long'
|   |   | `-ImplicitCastExpr 0x24269bc0c18 <col:19> 'unsigned long long' <IntegralCast>
|   |   |   `-IntegerLiteral 0x24269bc0bf0 <col:19> 'int' 16
|   |   |-CompoundAssignOperator 0x24269bc0cb8 <line:191:9, col:16> 'size_t':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |   | |-DeclRefExpr 0x24269bc0c60 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x24269bb6ff8 'len' 'size_t':'unsigned long long'
|   |   | `-ImplicitCastExpr 0x24269bc0ca0 <col:16> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x24269bc0c80 <col:16> 'size_t':'unsigned long long' lvalue Var 0x24269bc00a0 'blocks' 'size_t':'unsigned long long'
|   |   |-CompoundAssignOperator 0x24269bc0d40 <line:192:9, col:16> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   |   | |-DeclRefExpr 0x24269bc0ce8 <col:9> 'unsigned char *' lvalue ParmVar 0x24269bb6f80 'out' 'unsigned char *'
|   |   | `-ImplicitCastExpr 0x24269bc0d28 <col:16> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x24269bc0d08 <col:16> 'size_t':'unsigned long long' lvalue Var 0x24269bc00a0 'blocks' 'size_t':'unsigned long long'
|   |   `-CompoundAssignOperator 0x24269bc0dc8 <line:193:9, col:15> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   |     |-DeclRefExpr 0x24269bc0d70 <col:9> 'const unsigned char *' lvalue ParmVar 0x24269bb6f00 'in' 'const unsigned char *'
|   |     `-ImplicitCastExpr 0x24269bc0db0 <col:15> 'size_t':'unsigned long long' <LValueToRValue>
|   |       `-DeclRefExpr 0x24269bc0d90 <col:15> 'size_t':'unsigned long long' lvalue Var 0x24269bc00a0 'blocks' 'size_t':'unsigned long long'
|   |-IfStmt 0x24269bbc7b8 <line:195:5, line:206:5>
|   | |-ImplicitCastExpr 0x24269bc0e90 <line:195:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | `-DeclRefExpr 0x24269bc0e70 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x24269bb6ff8 'len' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x24269bbc780 <col:14, line:206:5>
|   |   |-CallExpr 0x24269bbbf58 <line:196:9, col:33> 'void *'
|   |   | |-ImplicitCastExpr 0x24269bbbf40 <col:9> 'void *(*)(void *, int, unsigned long long)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x24269bc0ea8 <col:9> 'void *(void *, int, unsigned long long)' Function 0x24269b3ce58 'memset' 'void *(void *, int, unsigned long long)'
|   |   | |-ImplicitCastExpr 0x24269bbbfa8 <col:16> 'void *' <BitCast>
|   |   | | `-ImplicitCastExpr 0x24269bbbf90 <col:16> 'unsigned char *':'unsigned char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x24269bc0ec8 <col:16> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x24269bbf110 'ecount_buf' 'unsigned char *':'unsigned char *'
|   |   | |-IntegerLiteral 0x24269bc0ee8 <col:28> 'int' 0
|   |   | `-ImplicitCastExpr 0x24269bbbfc0 <col:31> 'unsigned long long' <IntegralCast>
|   |   |   `-IntegerLiteral 0x24269bc0f10 <col:31> 'int' 16
|   |   |-UnaryOperator 0x24269bbc0a0 <line:198:9, col:11> 'unsigned int' prefix '++'
|   |   | `-DeclRefExpr 0x24269bbc080 <col:11> 'unsigned int' lvalue Var 0x24269bbf468 'ctr32' 'unsigned int'
|   |   |-BinaryOperator 0x24269bbc308 <.//openssl//file_jk/before\crypto\modes/modes_lcl.h:89:26, line:78:49> 'u32':'unsigned int' '='
|   |   | |-UnaryOperator 0x24269bbc1b0 <line:89:26, col:36> 'u32':'unsigned int' lvalue prefix '*' cannot overflow
|   |   | | `-CStyleCastExpr 0x24269bbc188 <col:27, col:36> 'u32 *' <BitCast>
|   |   | |   `-ParenExpr 0x24269bbc168 <col:34, col:36> 'unsigned char *':'unsigned char *'
|   |   | |     `-BinaryOperator 0x24269bbc118 <.//openssl//file_jk/before\crypto\modes\ctr128.c:199:16, col:23> 'unsigned char *':'unsigned char *' '+'
|   |   | |       |-ImplicitCastExpr 0x24269bbc100 <col:16> 'unsigned char *':'unsigned char *' <LValueToRValue>
|   |   | |       | `-DeclRefExpr 0x24269bbc0b8 <col:16> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x24269bbf040 'ivec' 'unsigned char *':'unsigned char *'
|   |   | |       `-IntegerLiteral 0x24269bbc0d8 <col:23> 'int' 12
|   |   | `-ImplicitCastExpr 0x24269bbc2f0 <.//openssl//file_jk/before\crypto\modes/modes_lcl.h:78:25, col:49> 'u32':'unsigned int' <IntegralCast>
|   |   |   `-CallExpr 0x24269bbc2b0 <col:25, col:49> 'unsigned long'
|   |   |     |-ImplicitCastExpr 0x24269bbc298 <col:25> 'unsigned long (*)(unsigned long)' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x24269bbc1c8 <col:25> 'unsigned long (unsigned long)' Function 0x24269bbfb30 '_byteswap_ulong' 'unsigned long (unsigned long)'
|   |   |     `-ImplicitCastExpr 0x24269bbc2d8 <col:41, col:48> 'unsigned long' <IntegralCast>
|   |   |       `-CStyleCastExpr 0x24269bbc270 <col:41, col:48> 'u32':'unsigned int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x24269bbc258 <col:46, col:48> 'unsigned int' <LValueToRValue> part_of_explicit_cast
|   |   |           `-ParenExpr 0x24269bbc238 <col:46, col:48> 'unsigned int' lvalue
|   |   |             `-DeclRefExpr 0x24269bbc1e8 <.//openssl//file_jk/before\crypto\modes\ctr128.c:199:27> 'unsigned int' lvalue Var 0x24269bbf468 'ctr32' 'unsigned int'
|   |   |-IfStmt 0x24269bbc458 <line:200:9, line:201:27>
|   |   | |-BinaryOperator 0x24269bbc3a0 <line:200:13, col:22> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x24269bbc370 <col:13> 'unsigned int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x24269bbc328 <col:13> 'unsigned int' lvalue Var 0x24269bbf468 'ctr32' 'unsigned int'
|   |   | | `-ImplicitCastExpr 0x24269bbc388 <col:22> 'unsigned int' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x24269bbc348 <col:22> 'int' 0
|   |   | `-CallExpr 0x24269bbc418 <line:201:13, col:27> 'void'
|   |   |   |-ImplicitCastExpr 0x24269bbc400 <col:13> 'void (*)(unsigned char *)' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x24269bbc3c0 <col:13> 'void (unsigned char *)' Function 0x24269bb68b8 'ctr96_inc' 'void (unsigned char *)'
|   |   |   `-ImplicitCastExpr 0x24269bbc440 <col:23> 'unsigned char *':'unsigned char *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x24269bbc3e0 <col:23> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x24269bbf040 'ivec' 'unsigned char *':'unsigned char *'
|   |   `-WhileStmt 0x24269bbc768 <line:202:9, line:205:9>
|   |     |-UnaryOperator 0x24269bbc490 <line:202:16, col:19> 'size_t':'unsigned long long' postfix '--'
|   |     | `-DeclRefExpr 0x24269bbc470 <col:16> 'size_t':'unsigned long long' lvalue ParmVar 0x24269bb6ff8 'len' 'size_t':'unsigned long long'
|   |     `-CompoundStmt 0x24269bbc748 <col:23, line:205:9>
|   |       |-BinaryOperator 0x24269bbc6f0 <line:203:13, col:42> 'unsigned char' '='
|   |       | |-ArraySubscriptExpr 0x24269bbc518 <col:13, col:18> 'unsigned char' lvalue
|   |       | | |-ImplicitCastExpr 0x24269bbc4e8 <col:13> 'unsigned char *' <LValueToRValue>
|   |       | | | `-DeclRefExpr 0x24269bbc4a8 <col:13> 'unsigned char *' lvalue ParmVar 0x24269bb6f80 'out' 'unsigned char *'
|   |       | | `-ImplicitCastExpr 0x24269bbc500 <col:17> 'unsigned int' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x24269bbc4c8 <col:17> 'unsigned int' lvalue Var 0x24269bbf3e8 'n' 'unsigned int'
|   |       | `-ImplicitCastExpr 0x24269bbc6d8 <col:22, col:42> 'unsigned char' <IntegralCast>
|   |       |   `-BinaryOperator 0x24269bbc6b8 <col:22, col:42> 'int' '^'
|   |       |     |-ImplicitCastExpr 0x24269bbc670 <col:22, col:26> 'int' <IntegralCast>
|   |       |     | `-ImplicitCastExpr 0x24269bbc658 <col:22, col:26> 'unsigned char' <LValueToRValue>
|   |       |     |   `-ArraySubscriptExpr 0x24269bbc5a8 <col:22, col:26> 'const unsigned char' lvalue
|   |       |     |     |-ImplicitCastExpr 0x24269bbc578 <col:22> 'const unsigned char *' <LValueToRValue>
|   |       |     |     | `-DeclRefExpr 0x24269bbc538 <col:22> 'const unsigned char *' lvalue ParmVar 0x24269bb6f00 'in' 'const unsigned char *'
|   |       |     |     `-ImplicitCastExpr 0x24269bbc590 <col:25> 'unsigned int' <LValueToRValue>
|   |       |     |       `-DeclRefExpr 0x24269bbc558 <col:25> 'unsigned int' lvalue Var 0x24269bbf3e8 'n' 'unsigned int'
|   |       |     `-ImplicitCastExpr 0x24269bbc6a0 <col:30, col:42> 'int' <IntegralCast>
|   |       |       `-ImplicitCastExpr 0x24269bbc688 <col:30, col:42> 'unsigned char' <LValueToRValue>
|   |       |         `-ArraySubscriptExpr 0x24269bbc638 <col:30, col:42> 'unsigned char' lvalue
|   |       |           |-ImplicitCastExpr 0x24269bbc608 <col:30> 'unsigned char *':'unsigned char *' <LValueToRValue>
|   |       |           | `-DeclRefExpr 0x24269bbc5c8 <col:30> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x24269bbf110 'ecount_buf' 'unsigned char *':'unsigned char *'
|   |       |           `-ImplicitCastExpr 0x24269bbc620 <col:41> 'unsigned int' <LValueToRValue>
|   |       |             `-DeclRefExpr 0x24269bbc5e8 <col:41> 'unsigned int' lvalue Var 0x24269bbf3e8 'n' 'unsigned int'
|   |       `-UnaryOperator 0x24269bbc730 <line:204:13, col:15> 'unsigned int' prefix '++'
|   |         `-DeclRefExpr 0x24269bbc710 <col:15> 'unsigned int' lvalue Var 0x24269bbf3e8 'n' 'unsigned int'
|   `-BinaryOperator 0x24269bbc858 <line:208:5, col:12> 'unsigned int' '='
|     |-UnaryOperator 0x24269bbc808 <col:5, col:6> 'unsigned int' lvalue prefix '*' cannot overflow
|     | `-ImplicitCastExpr 0x24269bbc7f0 <col:6> 'unsigned int *' <LValueToRValue>
|     |   `-DeclRefExpr 0x24269bbc7d0 <col:6> 'unsigned int *' lvalue ParmVar 0x24269bbf190 'num' 'unsigned int *'
|     `-ImplicitCastExpr 0x24269bbc840 <col:12> 'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x24269bbc820 <col:12> 'unsigned int' lvalue Var 0x24269bbf3e8 'n' 'unsigned int'
`-FunctionDecl 0x24269bbfb30 <.//openssl//file_jk/before\crypto\modes/modes_lcl.h:78:25> col:25 implicit used _byteswap_ulong 'unsigned long (unsigned long)' extern
  |-ParmVarDecl 0x24269bbfbd0 <<invalid sloc>> <invalid sloc> 'unsigned long'
  |-NoThrowAttr 0x24269bbfc40 <col:25> Implicit
  `-ConstAttr 0x24269bbfc98 <col:25> Implicit
