TranslationUnitDecl 0x25003893e28 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x250038946c0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x250038943c0 '__int128'
|-TypedefDecl 0x25003894730 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x250038943e0 'unsigned __int128'
|-TypedefDecl 0x25003894a68 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x25003894820 'struct __NSConstantString_tag'
|   `-Record 0x25003894788 '__NSConstantString_tag'
|-TypedefDecl 0x25003894ad8 <<invalid sloc>> <invalid sloc> implicit referenced size_t 'unsigned long long'
| `-BuiltinType 0x25003894000 'unsigned long long'
|-TypedefDecl 0x25003894b70 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x25003894b30 'char *'
|   `-BuiltinType 0x25003893ec0 'char'
|-TypedefDecl 0x25003894be0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x25003894b30 'char *'
|   `-BuiltinType 0x25003893ec0 'char'
|-TypedefDecl 0x25003894c50 <.//openssl//file_jk/before\crypto\modes/modes_lcl.h:13:1, col:17> col:17 i64 'long long'
| `-BuiltinType 0x25003893f60 'long long'
|-TypedefDecl 0x25003894cc0 <line:14:1, col:26> col:26 referenced u64 'unsigned long long'
| `-BuiltinType 0x25003894000 'unsigned long long'
|-TypedefDecl 0x25003894d30 <line:26:1, col:22> col:22 referenced u32 'unsigned int'
| `-BuiltinType 0x25003893fc0 'unsigned int'
|-TypedefDecl 0x25003894da0 <line:27:1, col:23> col:23 referenced u8 'unsigned char'
| `-BuiltinType 0x25003893f80 'unsigned char'
|-RecordDecl 0x250052a6810 <line:94:32, line:96:1> line:94:32 struct definition
| |-FieldDecl 0x250052a6900 <line:95:5, col:9> col:9 hi 'u64':'unsigned long long'
| `-FieldDecl 0x250052a6968 <col:5, col:13> col:13 lo 'u64':'unsigned long long'
|-TypedefDecl 0x250052a6a18 <line:94:24, line:96:3> col:3 referenced u128 'struct u128':'u128'
| `-ElaboratedType 0x250052a69c0 'struct u128' sugar
|   `-RecordType 0x250052a68b0 'u128'
|     `-Record 0x250052a6810 ''
|-RecordDecl 0x250052a6a88 <line:107:1, line:130:1> line:107:8 invalid struct gcm128_context definition
| |-RecordDecl 0x250052a6b40 <line:109:5, line:114:5> line:109:5 union definition
| | |-FieldDecl 0x250052a6cd8 <line:110:9, col:16> col:13 u 'u64 [2]'
| | |-FieldDecl 0x250052a6e28 <line:111:9, col:16> col:13 d 'u32 [4]'
| | |-FieldDecl 0x250052a6f78 <line:112:9, col:16> col:12 c 'u8 [16]'
| | `-FieldDecl 0x250052a70f8 <line:113:9, col:37> col:16 t 'size_t [2]'
| |-FieldDecl 0x250052a71a8 <line:109:5, line:114:7> col:7 Yi 'union (anonymous union at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x250052a7220 <line:109:5, line:114:11> col:11 EKi 'union (anonymous union at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x250052a7298 <line:109:5, line:114:16> col:16 EK0 'union (anonymous union at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x250052a7310 <line:109:5, line:114:21> col:21 len 'union (anonymous union at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x250052a7388 <line:109:5, line:114:26> col:26 Xi 'union (anonymous union at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x250052a7400 <line:109:5, line:114:30> col:30 H 'union (anonymous union at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x250052a75b8 <line:122:5, col:19> col:10 Htable 'u128 [16]'
| |-FieldDecl 0x250052adaf8 <line:123:5, col:52> col:12 gmult 'void (*)(u64 *, const u128 *)'
| |-FieldDecl 0x250052ae008 <line:124:5, line:125:30> line:124:12 ghash 'void (*)(u64 *, const u128 *, const u8 *, size_t)'
| |-FieldDecl 0x250052ae078 <line:127:5, col:18> col:18 mres 'unsigned int'
| |-FieldDecl 0x250052ae0e8 <col:5, col:24> col:24 ares 'unsigned int'
| |-FieldDecl 0x250052ae158 <line:128:5, col:16> col:16 invalid block 'int'
| `-FieldDecl 0x250052ae1c8 <line:129:5, col:11> col:11 key 'void *'
|-RecordDecl 0x250052ae288 <line:132:1, line:135:1> line:132:8 invalid struct xts128_context definition
| |-FieldDecl 0x250052ae358 <line:133:5, col:11> col:11 key1 'void *'
| |-FieldDecl 0x250052ae3c8 <col:5, col:18> col:18 key2 'void *'
| |-FieldDecl 0x250052ae438 <line:134:5, col:16> col:16 invalid block1 'int'
| `-FieldDecl 0x250052ae4a8 <col:5, col:24> col:24 invalid block2 'int'
|-RecordDecl 0x250052ae500 <line:137:1, line:145:1> line:137:8 invalid struct ccm128_context definition
| |-RecordDecl 0x250052ae5c0 <line:138:5, line:141:5> line:138:5 union definition
| | |-FieldDecl 0x250052ae6e0 <line:139:9, col:16> col:13 u 'u64 [2]'
| | `-FieldDecl 0x250052ae798 <line:140:9, col:16> col:12 c 'u8 [16]'
| |-FieldDecl 0x250052ae890 <line:138:5, line:141:7> col:7 nonce 'union (anonymous union at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:138:5)':'union ccm128_context::(anonymous at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:138:5)'
| |-FieldDecl 0x250052ae908 <line:138:5, line:141:14> col:14 cmac 'union (anonymous union at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:138:5)':'union ccm128_context::(anonymous at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:138:5)'
| |-FieldDecl 0x250052ae970 <line:142:5, col:9> col:9 blocks 'u64':'unsigned long long'
| |-FieldDecl 0x250052ae9e0 <line:143:5, col:16> col:16 invalid block 'int'
| `-FieldDecl 0x250052aea50 <line:144:5, col:11> col:11 key 'void *'
|-RecordDecl 0x250052aeb00 <line:149:9, line:152:1> line:149:9 union definition
| |-FieldDecl 0x250052aec20 <line:150:5, col:12> col:9 a 'u64 [2]'
| `-FieldDecl 0x250052aece0 <line:151:5, col:23> col:19 c 'unsigned char [16]'
|-TypedefDecl 0x250052aed98 <line:149:1, line:152:3> col:3 referenced OCB_BLOCK 'union OCB_BLOCK':'OCB_BLOCK'
| `-ElaboratedType 0x250052aed40 'union OCB_BLOCK' sugar
|   `-RecordType 0x250052aeba0 'OCB_BLOCK'
|     `-Record 0x250052aeb00 ''
|-RecordDecl 0x250052aee08 <line:163:1, line:185:1> line:163:8 invalid struct ocb128_context definition
| |-FieldDecl 0x250052aeed8 <line:165:5, col:16> col:16 invalid encrypt 'int'
| |-FieldDecl 0x250052aef48 <line:166:5, col:16> col:16 invalid decrypt 'int'
| |-FieldDecl 0x250052aefb8 <line:167:5, col:11> col:11 keyenc 'void *'
| |-FieldDecl 0x250052af028 <line:168:5, col:11> col:11 keydec 'void *'
| |-FieldDecl 0x250052af098 <line:169:5, col:14> col:14 invalid stream 'int'
| |-FieldDecl 0x250052af100 <line:171:5, col:12> col:12 l_index 'size_t':'unsigned long long'
| |-FieldDecl 0x250052af168 <line:172:5, col:12> col:12 max_l_index 'size_t':'unsigned long long'
| |-FieldDecl 0x250052af1f0 <line:173:5, col:15> col:15 l_star 'OCB_BLOCK':'OCB_BLOCK'
| |-FieldDecl 0x250052af258 <line:174:5, col:15> col:15 l_dollar 'OCB_BLOCK':'OCB_BLOCK'
| |-FieldDecl 0x250052af318 <line:175:5, col:16> col:16 l 'OCB_BLOCK *'
| |-RecordDecl 0x250052af370 <line:177:5, line:184:5> line:177:5 struct definition
| | |-FieldDecl 0x250052af440 <line:178:9, col:13> col:13 blocks_hashed 'u64':'unsigned long long'
| | |-FieldDecl 0x250052af4a8 <line:179:9, col:13> col:13 blocks_processed 'u64':'unsigned long long'
| | |-FieldDecl 0x250052af510 <line:180:9, col:19> col:19 offset_aad 'OCB_BLOCK':'OCB_BLOCK'
| | |-FieldDecl 0x250052af578 <line:181:9, col:19> col:19 sum 'OCB_BLOCK':'OCB_BLOCK'
| | |-FieldDecl 0x250052af5e0 <line:182:9, col:19> col:19 offset 'OCB_BLOCK':'OCB_BLOCK'
| | `-FieldDecl 0x250052af648 <line:183:9, col:19> col:19 checksum 'OCB_BLOCK':'OCB_BLOCK'
| `-FieldDecl 0x250052af6f8 <line:177:5, line:184:7> col:7 sess 'struct (anonymous struct at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:177:5)':'struct ocb128_context::(anonymous at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:177:5)'
|-TypedefDecl 0x250052af7b8 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x25003894000 'unsigned long long'
|-TypedefDecl 0x250052af828 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x25003894b30 'char *'
|   `-BuiltinType 0x25003893ec0 'char'
|-FunctionDecl 0x250053b7ea0 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x250053b7f40 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x250053b7fb0 <col:21> Implicit
|-FunctionDecl 0x250053b8008 prev 0x250053b7ea0 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x250053b7d38 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x250053b80f8 <col:21> Inherited Implicit
|-TypedefDecl 0x250053b8138 prev 0x25003894ad8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x25003894000 'unsigned long long'
|-TypedefDecl 0x250053b81e0 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x250053b81b0 'size_t' sugar
|   |-Typedef 0x250053b8138 'size_t'
|   `-BuiltinType 0x25003894000 'unsigned long long'
|-TypedefDecl 0x250053b8250 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x25003893f60 'long long'
|-TypedefDecl 0x250053b82c0 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x25003893f60 'long long'
|-TypedefDecl 0x250053b8330 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x25003893fa0 'unsigned short'
|-TypedefDecl 0x250053b83a0 <line:541:1, col:24> col:24 wint_t 'unsigned short'
| `-BuiltinType 0x25003893fa0 'unsigned short'
|-TypedefDecl 0x250053b8410 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x25003893fa0 'unsigned short'
|-TypedefDecl 0x250053b8480 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x25003893f20 'int'
|-TypedefDecl 0x250053b84f0 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x25003893f40 'long'
|-TypedefDecl 0x250053b8560 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x25003893f60 'long long'
|-TypedefDecl 0x250053b85f0 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x250053b85c0 '__time64_t' sugar
|   |-Typedef 0x250053b8560 '__time64_t'
|   `-BuiltinType 0x25003893f60 'long long'
|-FunctionDecl 0x250053b8768 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x250053b8988 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x250053b5f20 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x250053b8ac8 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x250053b8b40 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x250053b8bb8 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x250053b8c38 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x250053b5cc0 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x250053b6000 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x250053b60c0 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x250053b6230 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x250053b61e0 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x250053b6180 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x250053b60a0 'struct threadlocaleinfostruct'
|       `-Record 0x250053c7db0 'threadlocaleinfostruct'
|-TypedefDecl 0x250053b6340 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x250053b62f0 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x250053b6290 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x250053b6160 'struct threadmbcinfostruct'
|       `-Record 0x250053b60c0 'threadmbcinfostruct'
|-RecordDecl 0x250053b6398 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x250053b6450 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x250053b6510 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x250053b65a0 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x250053b6630 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x250053b66e8 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x250053b6690 'struct localeinfo_struct' sugar
|   `-RecordType 0x250053b64f0 'struct localeinfo_struct'
|     `-Record 0x250053b6450 'localeinfo_struct'
|-TypedefDecl 0x250053b67c0 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x250053b6770 'struct localeinfo_struct *'
|   `-ElaboratedType 0x250053b6690 'struct localeinfo_struct' sugar
|     `-RecordType 0x250053b64f0 'struct localeinfo_struct'
|       `-Record 0x250053b6450 'localeinfo_struct'
|-RecordDecl 0x250053b6838 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x250053b68f0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x250053b6968 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x250053b6a28 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x250053b6ac0 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x250053b6b30 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x250053b6be8 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x250053b6b90 'struct localerefcount' sugar
|   `-RecordType 0x250053b68d0 'struct localerefcount'
|     `-Record 0x250053b6838 'localerefcount'
|-RecordDecl 0x250053c7db0 prev 0x250053b6000 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x250053c7e30 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x250053c7ea8 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x250053c7f18 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x250053c7f88 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x250053c7ff8 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x250053c81b8 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x250053c8228 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x250053c8298 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x250053c8308 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x250053c8378 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x250053c83e8 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x250053c8440 parent 0x25003893e28 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x250053c85d0 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x250053c8640 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x250053c86b0 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x250053c8720 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x250053c8790 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x250053c8800 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x250053c8910 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x250053c8a48 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x250053c8af8 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x250053c8aa0 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x250053b60a0 'struct threadlocaleinfostruct'
|     `-Record 0x250053c7db0 'threadlocaleinfostruct'
|-FunctionDecl 0x250053c1ee0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:47:9, col:142> col:25 _memccpy 'void *(void *, const void *, int, size_t) __attribute__((cdecl))':'void *(void *, const void *, int, size_t)'
| |-ParmVarDecl 0x250053c8b80 <col:69, col:76> col:76 _Dst 'void *'
| |-ParmVarDecl 0x250053c8c30 <col:87, col:100> col:100 _Src 'const void *'
| |-ParmVarDecl 0x250053c8cb0 <col:111, col:115> col:115 _Val 'int'
| `-ParmVarDecl 0x250053c8d28 <col:126, col:133> col:133 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x250053c22a8 <line:48:54> col:54 implicit memchr 'void *(const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x250053c2348 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x250053c23b0 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x250053c2418 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x250053c2498 prev 0x250053c22a8 <col:38, col:150> col:54 memchr 'void *(const void *, int, unsigned long long)'
| |-ParmVarDecl 0x250053c1fd0 <col:94, col:107> col:107 _Buf 'const void *'
| |-ParmVarDecl 0x250053c2050 <col:119, col:123> col:123 _Val 'int'
| `-ParmVarDecl 0x250053c20c8 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x250053c2858 <line:49:24, col:162> col:40 _memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x250053c2580 <col:77, col:90> col:90 _Buf1 'const void *'
| |-ParmVarDecl 0x250053c2600 <col:125, col:138> col:138 _Buf2 'const void *'
| `-ParmVarDecl 0x250053c2678 <col:150, col:157> col:157 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x250053cade0 <line:50:24, col:192> col:40 _memicmp_l 'int (const void *, const void *, size_t, _locale_t) __attribute__((cdecl))':'int (const void *, const void *, size_t, _locale_t)'
| |-ParmVarDecl 0x250053c2940 <col:79, col:92> col:92 _Buf1 'const void *'
| |-ParmVarDecl 0x250053c29c0 <col:127, col:140> col:140 _Buf2 'const void *'
| |-ParmVarDecl 0x250053c2a38 <col:152, col:159> col:159 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x250053c2ad0 <col:175, col:185> col:185 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x250053cb0e8 <line:51:32> col:32 implicit memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x250053cb188 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x250053cb1f0 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x250053cb258 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x250053cb2d8 prev 0x250053cb0e8 <col:16, col:144> col:32 memcmp 'int (const void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x250053caed0 <col:63, col:76> col:76 _Buf1 'const void *'
| |-ParmVarDecl 0x250053caf50 <col:107, col:120> col:120 _Buf2 'const void *'
| `-ParmVarDecl 0x250053cafc8 <col:132, col:139> col:139 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x250053cb698 <line:55:17> col:17 implicit memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x250053cb738 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x250053cb7a0 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x250053cb808 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x250053cb888 prev 0x250053cb698 <col:1, col:127> col:17 memcpy 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x250053cb3c0 <col:54, col:61> col:61 _Dst 'void *'
| |-ParmVarDecl 0x250053cb440 <col:91, col:104> col:104 _Src 'const void *'
| `-ParmVarDecl 0x250053cb4b8 <col:115, col:122> col:122 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x250053cbd28 <line:57:9, col:191> col:26 memcpy_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x250053cb998 <col:82, col:89> col:89 _Dst 'void *'
| |-ParmVarDecl 0x250053cba30 <col:100, col:108> col:108 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x250053cbab0 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x250053cbb28 <col:174, col:182> col:182 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x250053ca0f8 <line:94:25> col:25 implicit used memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x250053ca198 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x250053ca200 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x250053ca268 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x250053ca2e8 prev 0x250053ca0f8 <col:9, col:107> col:25 used memset 'void *(void *, int, unsigned long long)'
| |-ParmVarDecl 0x250053c9e20 <col:62, col:69> col:69 _Dst 'void *'
| |-ParmVarDecl 0x250053c9ea0 <col:80, col:84> col:84 _Val 'int'
| `-ParmVarDecl 0x250053c9f18 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x250053ca768 <line:98:57> col:57 implicit memccpy 'void *(void *, const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x250053ca808 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x250053ca870 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x250053ca8d8 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x250053ca940 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x250053ca9c8 prev 0x250053ca768 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:98:187> col:57 memccpy 'void *(void *, const void *, int, unsigned long long)'
| |-ParmVarDecl 0x250053ca4b0 <col:95, col:102> col:102 _Dst 'void *'
| |-ParmVarDecl 0x250053ca530 <col:136, col:149> col:149 _Src 'const void *'
| |-ParmVarDecl 0x250053ca5b0 <col:160, col:164> col:164 _Val 'int'
| |-ParmVarDecl 0x250053ca628 <col:175, col:182> col:182 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x250053caa88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memccpy. See online help for details." ""
|-FunctionDecl 0x250053cbe90 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:99:190> col:69 memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x250053cac50 <col:105, col:118> col:118 _Buf1 'const void *'
| |-ParmVarDecl 0x250053cacd0 <col:153, col:166> col:166 _Buf2 'const void *'
| |-ParmVarDecl 0x250053cad48 <col:178, col:185> col:185 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x250053cbf48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memicmp. See online help for details." ""
|-FunctionDecl 0x250053cc340 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:105:40, col:144> col:56 _strset_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x250053cc070 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x250053cc0e8 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| `-ParmVarDecl 0x250053cc168 <col:134, col:138> col:138 _Value 'int'
|-FunctionDecl 0x250053cc710 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:107:88 _strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x250053cc520 <col:108, col:114> col:114 _Dest 'char *'
| |-ParmVarDecl 0x250053cc5a0 <col:126, col:131> col:131 _Value 'int'
| `-DeprecatedAttr 0x250053cc7c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x250053ccbd0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:109:40, col:158> col:56 strcpy_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x250053cc908 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x250053cc980 <col:112, col:120> col:120 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x250053cca00 <col:141, col:154> col:154 _Src 'const char *'
|-FunctionDecl 0x250053ce000 <line:112:88> col:88 implicit strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x250053ce0a0 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x250053ce108 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x250053ce180 prev 0x250053ce000 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:112:88 strcpy 'char *(char *, const char *)'
| |-ParmVarDecl 0x250053cde10 <col:142, col:148> col:148 _Dest 'char *'
| |-ParmVarDecl 0x250053cde90 <col:162, col:176> col:176 _Source 'const char *'
| `-DeprecatedAttr 0x250053ce230 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x250053ce588 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:114:40, col:161> col:56 strcat_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x250053ce378 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x250053ce3f0 <col:115, col:123> col:123 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x250053ce470 <col:144, col:157> col:157 _Src 'const char *'
|-FunctionDecl 0x250053ce8b0 <line:118:88> col:88 implicit strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x250053ce950 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x250053ce9b8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x250053cea30 prev 0x250053ce8b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:118:88 strcat 'char *(char *, const char *)'
| |-ParmVarDecl 0x250053ce730 <col:170, col:176> col:176 _Dest 'char *'
| |-ParmVarDecl 0x250053ce7b0 <col:190, col:204> col:204 _Source 'const char *'
| `-DeprecatedAttr 0x250053ceae0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x250053cce00 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:120:32> col:32 implicit strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x250053ccea0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x250053ccf08 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x250053ccf80 prev 0x250053cce00 <col:16, col:91> col:32 strcmp 'int (const char *, const char *)'
| |-ParmVarDecl 0x250053cec28 <col:46, col:59> col:59 _Str1 'const char *'
| `-ParmVarDecl 0x250053ceca8 <col:73, col:86> col:86 _Str2 'const char *'
|-FunctionDecl 0x250053cd1d0 <line:121:32> col:32 implicit strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x250053cd270 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x250053cd2e0 prev 0x250053cd1d0 <col:16, col:63> col:32 strlen 'unsigned long long (const char *)'
| `-ParmVarDecl 0x250053cd060 <col:46, col:59> col:59 _Str 'const char *'
|-FunctionDecl 0x250053cd5d8 <line:125:1, col:92> col:17 used strnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x250053cd3b8 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x250053cd430 <col:76, col:83> col:83 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x250053cd828 <line:127:16, line:133:1> line:130:19 strnlen_s 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' static inline
| |-ParmVarDecl 0x250053cd6b8 <col:56, col:69> col:69 used _Str 'const char *'
| |-ParmVarDecl 0x250053cd730 <col:80, col:87> col:87 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x250053cdb58 <line:131:1, line:133:1>
|   `-ReturnStmt 0x250053cdb48 <line:132:5, col:51>
|     `-ConditionalOperator 0x250053cdb18 <col:12, col:51> 'unsigned long long'
|       |-ParenExpr 0x250053cd988 <col:12, col:20> 'int'
|       | `-BinaryOperator 0x250053cd968 <col:13, col:19> 'int' '=='
|       |   |-ImplicitCastExpr 0x250053cd938 <col:13> 'const char *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x250053cd8f0 <col:13> 'const char *' lvalue ParmVar 0x250053cd6b8 '_Str' 'const char *'
|       |   `-ImplicitCastExpr 0x250053cd950 <col:19> 'const char *' <NullToPointer>
|       |     `-IntegerLiteral 0x250053cd910 <col:19> 'int' 0
|       |-ImplicitCastExpr 0x250053cdb00 <col:24> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x250053cd9a8 <col:24> 'int' 0
|       `-CallExpr 0x250053cdaa0 <col:28, col:51> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x250053cda88 <col:28> 'size_t (*)(const char *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x250053cd9d0 <col:28> 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' Function 0x250053cd5d8 'strnlen' 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
|         |-ImplicitCastExpr 0x250053cdad0 <col:36> 'const char *' <LValueToRValue>
|         | `-DeclRefExpr 0x250053cd9f0 <col:36> 'const char *' lvalue ParmVar 0x250053cd6b8 '_Str' 'const char *'
|         `-ImplicitCastExpr 0x250053cdae8 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x250053cda10 <col:42> 'size_t':'unsigned long long' lvalue ParmVar 0x250053cd730 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x250053cee68 <line:136:28, col:209> col:44 memmove_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x250053cdb88 <col:100, col:107> col:107 _Dst 'void *'
| |-ParmVarDecl 0x250053cdc00 <col:118, col:126> col:126 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x250053cdc80 <col:168, col:181> col:181 _Src 'const void *'
| `-ParmVarDecl 0x250053cdcf8 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x250053cf170 <line:139:67> col:67 implicit memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x250053cf210 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x250053cf278 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x250053cf2e0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x250053cf360 prev 0x250053cf170 <col:51, col:186> col:67 memmove 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x250053cef58 <col:109, col:116> col:116 _Dst 'void *'
| |-ParmVarDecl 0x250053cefd8 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x250053cf050 <col:174, col:181> col:181 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x250053cf598 <line:146:24, col:76> col:40 _strdup 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| `-ParmVarDecl 0x250053cf448 <col:59, col:72> col:72 _Src 'const char *'
|-FunctionDecl 0x250053cf860 <line:152:54> col:54 implicit strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x250053cf900 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x250053cf968 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x250053cf9e0 prev 0x250053cf860 <col:38, col:100> col:54 strchr 'char *(const char *, int)'
| |-ParmVarDecl 0x250053cf670 <col:68, col:81> col:81 _Str 'const char *'
| `-ParmVarDecl 0x250053cf6f0 <col:92, col:96> col:96 _Val 'int'
|-FunctionDecl 0x250053cfc40 <line:153:24, col:103> col:40 _stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x250053cfac0 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x250053cfb40 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x250053cfeb0 <line:154:24, col:103> col:40 _strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x250053cfd20 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x250053cfda0 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x250053d0268 <line:155:24, col:133> col:40 _stricmp_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x250053cff90 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x250053d0010 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x250053d0088 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x250053d04d0 <line:156:24, col:103> col:40 strcoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x250053d0350 <col:56, col:69> col:69 _Str1 'const char *'
| `-ParmVarDecl 0x250053d03d0 <col:84, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x250053d07c8 <line:157:24, col:133> col:40 _strcoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x250053d05b0 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x250053d0630 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x250053d06a8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x250053d0a30 <line:158:24, col:104> col:40 _stricoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x250053d08b0 <col:58, col:71> col:71 _Str1 'const char *'
| `-ParmVarDecl 0x250053d0930 <col:86, col:99> col:99 _Str2 'const char *'
|-FunctionDecl 0x250053d0d28 <line:159:24, col:134> col:40 _stricoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x250053d0b10 <col:60, col:73> col:73 _Str1 'const char *'
| |-ParmVarDecl 0x250053d0b90 <col:88, col:101> col:101 _Str2 'const char *'
| `-ParmVarDecl 0x250053d0c08 <col:117, col:127> col:127 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2500538a5c8 <line:160:24, col:167> col:40 _strncoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x2500538a2f0 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x2500538a370 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x2500538a3e8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2500538aa30 <line:161:24, col:195> col:40 _strncoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x2500538a6b0 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x2500538a730 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x2500538a7a8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2500538a820 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2500538ad38 <line:162:24, col:167> col:40 _strnicoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x2500538ab20 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x2500538aba0 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x2500538ac18 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2500538b0d0 <line:163:24, col:196> col:40 _strnicoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x2500538ae20 <col:80, col:93> col:93 _Str1 'const char *'
| |-ParmVarDecl 0x2500538aea0 <col:127, col:140> col:140 _Str2 'const char *'
| |-ParmVarDecl 0x2500538af18 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2500538af90 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x25005422078 <line:164:40> col:40 implicit strcspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x25005422118 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x25005422180 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x250054221f8 prev 0x25005422078 <col:24, col:104> col:40 strcspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x2500538b1c0 <col:56, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x2500538b240 <col:83, col:96> col:96 _Control 'const char *'
|-FunctionDecl 0x250054224b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:165:118> col:77 _strerror 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x250054223d0 <col:98, col:111> col:111 _ErrMsg 'const char *'
| `-DeprecatedAttr 0x25005422558 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x25005422930 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:166:28, col:155> col:44 _strerror_s 'errno_t (char *, size_t, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *)'
| |-ParmVarDecl 0x250054226a0 <col:85, col:92> col:92 _Buf 'char *'
| |-ParmVarDecl 0x25005422718 <col:103, col:110> col:110 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x25005422798 <col:135, col:148> col:148 _ErrMsg 'const char *'
|-FunctionDecl 0x25005422c48 <line:168:76> col:76 implicit strerror 'char *(int)' extern
| `-ParmVarDecl 0x25005422ce8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x25005422d58 prev 0x25005422c48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:168:93> col:76 strerror 'char *(int)'
| |-ParmVarDecl 0x25005422b10 <col:90> col:93 'int'
| `-DeprecatedAttr 0x25005422e00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x250054261c0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:170:28, col:139> col:44 strerror_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x25005425fb0 <col:84, col:91> col:91 _Buf 'char *'
| |-ParmVarDecl 0x25005426028 <col:102, col:109> col:109 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x250054260a8 <col:128, col:132> col:132 _ErrNum 'int'
|-FunctionDecl 0x250054264c8 <line:173:28, col:109> col:44 _strlwr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x250054262a8 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x25005426320 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x250054267b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:175:79 _strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x25005426668 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x25005426860 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x25005426c70 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:176:28, col:139> col:44 _strlwr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x250054269a8 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x25005426a20 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x25005426a98 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x25005424030 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:178:82 _strlwr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x25005426e18 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x25005426e90 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x250054240e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x25005424598 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:180:40, col:206> col:56 strncat_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x25005424228 <col:98, col:105> col:105 _Dst 'char *'
| |-ParmVarDecl 0x250054242a0 <col:116, col:124> col:124 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x25005424320 <col:165, col:178> col:178 _Src 'const char *'
| `-ParmVarDecl 0x25005424398 <col:189, col:197> col:197 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x25005424a18 <line:186:83> col:83 implicit strncat 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x25005424ab8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x25005424b20 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x25005424b88 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x25005424c08 prev 0x25005424a18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:186:83 strncat 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x25005424748 <col:161, col:167> col:167 _Dest 'char *'
| |-ParmVarDecl 0x250054247c8 <col:198, col:212> col:212 _Source 'const char *'
| |-ParmVarDecl 0x25005424840 <col:226, col:234> col:234 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x25005424cc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x25005427060 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:188:40> col:40 implicit strncmp 'int (const char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x25005427100 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x25005427168 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x250054271d0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x25005427250 prev 0x25005427060 <col:24, col:163> col:40 strncmp 'int (const char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x25005424e08 <col:75, col:88> col:88 _Str1 'const char *'
| |-ParmVarDecl 0x25005424e88 <col:122, col:135> col:135 _Str2 'const char *'
| `-ParmVarDecl 0x25005424f00 <col:147, col:154> col:154 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x25005427550 <line:189:24, col:165> col:40 _strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x25005427338 <col:77, col:90> col:90 _Str1 'const char *'
| |-ParmVarDecl 0x250054273b8 <col:124, col:137> col:137 _Str2 'const char *'
| `-ParmVarDecl 0x25005427430 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x250054278e8 <line:190:24, col:195> col:40 _strnicmp_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x25005427638 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x250054276b8 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x25005427730 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x250054277a8 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x25005427c80 <line:192:40, col:203> col:56 strncpy_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x250054279d8 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x25005427a50 <col:113, col:121> col:121 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x25005427ad0 <col:162, col:175> col:175 _Src 'const char *'
| `-ParmVarDecl 0x25005427b48 <col:186, col:194> col:194 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x25005425028 <line:195:83> col:83 implicit strncpy 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x250054250c8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x25005425130 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x25005425198 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x25005425218 prev 0x25005425028 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:195:83 strncpy 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x25005427e30 <col:167, col:173> col:173 _Dest 'char *'
| |-ParmVarDecl 0x25005427eb0 <col:204, col:218> col:218 _Source 'const char *'
| |-ParmVarDecl 0x25005427f28 <col:232, col:240> col:240 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x250054252d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x25005425788 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:196:40, col:174> col:56 _strnset_s 'errno_t (char *, size_t, int, size_t) __attribute__((cdecl))':'errno_t (char *, size_t, int, size_t)'
| |-ParmVarDecl 0x25005425418 <col:99, col:106> col:106 _Str 'char *'
| |-ParmVarDecl 0x25005425490 <col:117, col:124> col:124 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x25005425510 <col:143, col:147> col:147 _Val 'int'
| `-ParmVarDecl 0x25005425588 <col:158, col:165> col:165 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x25005425c08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:198:83 _strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x25005425938 <col:163, col:169> col:169 _Dest 'char *'
| |-ParmVarDecl 0x250054259b8 <col:181, col:186> col:186 _Val 'int'
| |-ParmVarDecl 0x25005425a30 <col:197, col:205> col:205 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x25005425cc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2500541ffc0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:199:54> col:54 implicit strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x25005420060 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x250054200c8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x25005420140 prev 0x2500541ffc0 <col:38, col:116> col:54 strpbrk 'char *(const char *, const char *)'
| |-ParmVarDecl 0x25005425e08 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x25005425e88 <col:95, col:108> col:108 _Control 'const char *'
|-FunctionDecl 0x250054203a0 <line:200:54> col:54 implicit strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x25005420440 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x250054204a8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x25005420520 prev 0x250054203a0 <col:38, col:100> col:54 strrchr 'char *(const char *, int)'
| |-ParmVarDecl 0x25005420220 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x250054202a0 <col:93, col:97> col:97 _Ch 'int'
|-FunctionDecl 0x250054206e0 <line:201:9, col:54> col:25 _strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| `-ParmVarDecl 0x25005420600 <col:43, col:50> col:50 _Str 'char *'
|-FunctionDecl 0x25005420930 <line:202:40> col:40 implicit strspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x250054209d0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x25005420a38 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x25005420ab0 prev 0x25005420930 <col:24, col:101> col:40 strspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x250054207b8 <col:54, col:67> col:67 _Str 'const char *'
| `-ParmVarDecl 0x25005420838 <col:80, col:93> col:93 _Control 'const char *'
|-FunctionDecl 0x25005420d10 <line:203:70> col:70 implicit strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x25005420db0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x25005420e18 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x25005420e90 prev 0x25005420d10 <col:54, col:130> col:70 strstr 'char *(const char *, const char *)'
| |-ParmVarDecl 0x25005420b90 <col:84, col:97> col:97 _Str 'const char *'
| `-ParmVarDecl 0x25005420c10 <col:110, col:123> col:123 _SubStr 'const char *'
|-FunctionDecl 0x25005428240 <line:204:74> col:74 implicit strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x250054282e0 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x25005428348 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x250054283c0 prev 0x25005428240 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:204:134> col:74 strtok 'char *(char *, const char *)'
| |-ParmVarDecl 0x250054280c0 <col:95, col:102> col:102 _Str 'char *'
| |-ParmVarDecl 0x25005428140 <col:115, col:128> col:128 _Delim 'const char *'
| `-DeprecatedAttr 0x25005428470 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x25005428858 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:206:36, col:162> col:52 strtok_s 'char *(char *, const char *, char **) __attribute__((cdecl))':'char *(char *, const char *, char **)'
| |-ParmVarDecl 0x250054285b8 <col:75, col:82> col:82 _Str 'char *'
| |-ParmVarDecl 0x25005428638 <col:95, col:108> col:108 _Delim 'const char *'
| `-ParmVarDecl 0x250054286b8 <col:146, col:154> col:154 _Context 'char **'
|-FunctionDecl 0x25005428ab0 <line:208:28, col:109> col:44 _strupr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x25005428940 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x250054289b8 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x25005428d30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:210:79 _strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x25005428c50 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x25005428dd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x250054210f0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:211:28, col:130> col:44 _strupr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x25005428f20 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x25005420f60 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x25005420fd8 <col:113, col:123> col:123 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x25005421410 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:213:82 _strupr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x25005421298 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x25005421310 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x250054214c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x250054218d0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:214:44> col:44 implicit strxfrm 'unsigned long long (char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x25005421970 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x250054219d8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x25005421a40 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x25005421ac0 prev 0x250054218d0 <col:28, col:155> col:44 strxfrm 'unsigned long long (char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x25005421608 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x25005421688 <col:115, col:128> col:128 _Src 'const char *'
| `-ParmVarDecl 0x25005421700 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x25005428fe0 <line:215:28, col:185> col:44 _strxfrm_l 'size_t (char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x25005421ba8 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x25005421c28 <col:117, col:130> col:130 _Src 'const char *'
| |-ParmVarDecl 0x25005421ca0 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x25005421d18 <col:168, col:178> col:178 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x25005429290 <line:245:71> col:71 implicit strdup 'char *(const char *)' extern
| `-ParmVarDecl 0x25005429330 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x250054293a0 prev 0x25005429290 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:245:106> col:71 strdup 'char *(const char *)'
| |-ParmVarDecl 0x250054291b0 <col:89, col:102> col:102 _Src 'const char *'
| `-DeprecatedAttr 0x25005429448 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strdup. See online help for details." ""
|-FunctionDecl 0x25005429790 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:252:129> col:69 strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x25005429610 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x25005429690 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x25005429840 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strcmpi. See online help for details." ""
|-FunctionDecl 0x25005429b88 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:253:129> col:69 stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x25005429a08 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x25005429a88 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x25005429c38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details." ""
|-FunctionDecl 0x25005429ee0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:254:84> col:56 strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x25005429e00 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x25005429f88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strlwr. See online help for details." ""
|-FunctionDecl 0x2500542a3c8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:255:193> col:70 strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x2500542a1b0 <col:106, col:119> col:119 _Str1 'const char *'
| |-ParmVarDecl 0x2500542a230 <col:153, col:166> col:166 _Str 'const char *'
| |-ParmVarDecl 0x2500542a2a8 <col:177, col:184> col:184 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2500542a480 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnicmp. See online help for details." ""
|-FunctionDecl 0x2500542a860 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:256:143> col:57 strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x2500542a648 <col:94, col:101> col:101 _Str 'char *'
| |-ParmVarDecl 0x2500542a6c8 <col:112, col:116> col:116 _Val 'int'
| |-ParmVarDecl 0x2500542a740 <col:127, col:134> col:134 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2500542a918 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnset. See online help for details." ""
|-FunctionDecl 0x2500542abc0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:257:84> col:56 strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x2500542aae0 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x2500542ac68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strrev. See online help for details." ""
|-FunctionDecl 0x25005422f80 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:258:99> col:56 strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x2500542ae30 <col:73, col:80> col:80 _Str 'char *'
| |-ParmVarDecl 0x2500542aeb0 <col:91, col:95> col:95 _Val 'int'
| `-DeprecatedAttr 0x25005423030 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strset. See online help for details." ""
|-FunctionDecl 0x250054232d8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:259:84> col:56 strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x250054231f8 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x25005423380 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strupr. See online help for details." ""
|-FunctionDecl 0x25005423610 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:273:24, col:77> col:42 _wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| `-ParmVarDecl 0x250054234a0 <col:57, col:73> col:73 _Str 'const wchar_t *'
|-FunctionDecl 0x250054239a0 <line:280:40, col:167> col:56 wcscat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x250054236e0 <col:97, col:107> col:107 _Dst 'wchar_t *'
| |-ParmVarDecl 0x25005423758 <col:118, col:126> col:126 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x250054237d0 <col:147, col:163> col:163 _Src 'const wchar_t *'
|-FunctionDecl 0x25005423d58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:284:82 wcscat 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x25005423b40 <col:164, col:173> col:173 _Dest 'wchar_t *'
| |-ParmVarDecl 0x25005423bb8 <col:187, col:204> col:204 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x25005423e08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2500542d238 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:288:41> col:41 implicit wcschr 'unsigned short *(const unsigned short *, unsigned short)' extern
| |-ParmVarDecl 0x2500542d2d8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x2500542d340 <<invalid sloc>> <invalid sloc> 'unsigned short'
|-FunctionDecl 0x2500542d3b8 prev 0x2500542d238 <col:23, col:88> col:41 wcschr 'unsigned short *(const unsigned short *, unsigned short)'
| |-ParmVarDecl 0x2500542d020 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2500542d098 <col:77, col:85> col:85 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x2500542d6b0 <line:289:36> col:36 implicit wcscmp 'int (const unsigned short *, const unsigned short *)' extern
| |-ParmVarDecl 0x2500542d750 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x2500542d7b8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x2500542d830 prev 0x2500542d6b0 <col:24, col:101> col:36 wcscmp 'int (const unsigned short *, const unsigned short *)'
| |-ParmVarDecl 0x2500542d490 <col:50, col:66> col:66 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x2500542d508 <col:80, col:96> col:96 _Str2 'const wchar_t *'
|-FunctionDecl 0x2500542db10 <line:291:40, col:164> col:56 wcscpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x2500542d908 <col:94, col:104> col:104 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2500542d980 <col:115, col:123> col:123 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x2500542d9f8 <col:144, col:160> col:160 _Src 'const wchar_t *'
|-FunctionDecl 0x2500542de20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:294:82 wcscpy 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2500542dcb0 <col:136, col:145> col:145 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2500542dd28 <col:159, col:176> col:176 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x2500542ded0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x25005431278 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:295:24, col:107> col:39 wcscspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x25005431060 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x250054310d8 <col:83, col:99> col:99 _Control 'const wchar_t *'
|-FunctionDecl 0x250054314c0 <line:296:39> col:39 implicit wcslen 'unsigned long long (const unsigned short *)' extern
| `-ParmVarDecl 0x25005431560 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x250054315d0 prev 0x250054314c0 <col:24, col:73> col:39 wcslen 'unsigned long long (const unsigned short *)'
| `-ParmVarDecl 0x25005431350 <col:53, col:69> col:69 _Str 'const wchar_t *'
|-FunctionDecl 0x250054318b8 <line:300:1, col:94> col:16 used wcsnlen 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
| |-ParmVarDecl 0x250054316a0 <col:51, col:67> col:67 _Src 'const wchar_t *'
| `-ParmVarDecl 0x25005431718 <col:78, col:85> col:85 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x25005431b00 <line:302:16, line:308:1> line:305:18 wcsnlen_s 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' static inline
| |-ParmVarDecl 0x25005431990 <col:55, col:71> col:71 used _Src 'const wchar_t *'
| |-ParmVarDecl 0x25005431a08 <col:82, col:89> col:89 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x25005431e98 <line:306:1, line:308:1>
|   `-ReturnStmt 0x25005431e88 <line:307:5, col:56>
|     `-ConditionalOperator 0x25005431e58 <col:12, col:56> 'unsigned long long'
|       |-ParenExpr 0x25005431cc0 <col:12, col:25> 'int'
|       | `-BinaryOperator 0x25005431ca0 <col:13, line:36:27> 'int' '=='
|       |   |-ImplicitCastExpr 0x25005431c70 <line:307:13> 'const wchar_t *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x25005431bc8 <col:13> 'const wchar_t *' lvalue ParmVar 0x25005431990 '_Src' 'const wchar_t *'
|       |   `-ImplicitCastExpr 0x25005431c88 <line:36:17, col:27> 'const wchar_t *' <BitCast>
|       |     `-ParenExpr 0x25005431c50 <col:17, col:27> 'void *'
|       |       `-CStyleCastExpr 0x25005431c28 <col:18, col:26> 'void *' <NullToPointer>
|       |         `-IntegerLiteral 0x25005431be8 <col:26> 'int' 0
|       |-ImplicitCastExpr 0x25005431e40 <line:307:29> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x25005431ce0 <col:29> 'int' 0
|       `-CallExpr 0x25005431de0 <col:33, col:56> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x25005431dc8 <col:33> 'size_t (*)(const wchar_t *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x25005431d08 <col:33> 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' Function 0x250054318b8 'wcsnlen' 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
|         |-ImplicitCastExpr 0x25005431e10 <col:41> 'const wchar_t *' <LValueToRValue>
|         | `-DeclRefExpr 0x25005431d28 <col:41> 'const wchar_t *' lvalue ParmVar 0x25005431990 '_Src' 'const wchar_t *'
|         `-ImplicitCastExpr 0x25005431e28 <col:47> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x25005431d48 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x25005431a08 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x2500542f248 <line:311:40, col:212> col:56 wcsncat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x25005431ec0 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x25005431f38 <col:119, col:127> col:127 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x25005431fb0 <col:168, col:184> col:184 _Src 'const wchar_t *'
| `-ParmVarDecl 0x2500542f040 <col:195, col:203> col:203 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x2500542f6b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:316:86 wcsncat 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x2500542f3f0 <col:167, col:176> col:176 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2500542f468 <col:207, col:224> col:224 _Source 'const wchar_t *'
| |-ParmVarDecl 0x2500542f4e0 <col:238, col:246> col:246 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2500542f768 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2500542fb78 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:318:36> col:36 implicit wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)' extern
| |-ParmVarDecl 0x2500542fc18 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| |-ParmVarDecl 0x2500542fc80 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x2500542fce8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2500542fd68 prev 0x2500542fb78 <col:24, col:165> col:36 wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)'
| |-ParmVarDecl 0x2500542f8a8 <col:71, col:87> col:87 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2500542f920 <col:121, col:137> col:137 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x2500542f998 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x25005432128 <line:320:40, col:209> col:56 wcsncpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x2500542fe48 <col:95, col:105> col:105 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2500542fec0 <col:116, col:124> col:124 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x2500542ff38 <col:165, col:181> col:181 _Src 'const wchar_t *'
| `-ParmVarDecl 0x2500542ffb0 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x250054324d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:323:86 wcsncpy 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x250054322d0 <col:179, col:188> col:188 _Dest 'wchar_t *'
| |-ParmVarDecl 0x25005432348 <col:219, col:236> col:236 _Source 'const wchar_t *'
| |-ParmVarDecl 0x250054323c0 <col:250, col:258> col:258 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x25005432590 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x250054328e8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:324:38, col:124> col:56 wcspbrk 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x250054326d0 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x25005432748 <col:100, col:116> col:116 _Control 'const wchar_t *'
|-FunctionDecl 0x25005432b30 <line:325:38, col:109> col:56 wcsrchr 'wchar_t *(const wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(const wchar_t *, wchar_t)'
| |-ParmVarDecl 0x250054329c0 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x25005432a38 <col:98, col:106> col:106 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x25005432d78 <line:326:24, col:106> col:39 wcsspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x25005432c08 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x25005432c80 <col:82, col:98> col:98 _Control 'const wchar_t *'
|-FunctionDecl 0x25005432fc0 <line:329:23, col:107> col:41 wcsstr 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x25005432e50 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x25005432ec8 <col:84, col:100> col:100 _SubStr 'const wchar_t *'
|-FunctionDecl 0x250054302a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:330:142> col:76 wcstok 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x25005430138 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x250054301b0 <col:120, col:136> col:136 _Delim 'const wchar_t *'
| `-DeprecatedAttr 0x25005430358 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x250054307c0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:332:36, col:173> col:54 wcstok_s 'wchar_t *(wchar_t *, const wchar_t *, wchar_t **) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x25005430498 <col:77, col:87> col:87 _Str 'wchar_t *'
| |-ParmVarDecl 0x25005430510 <col:100, col:116> col:116 _Delim 'const wchar_t *'
| `-ParmVarDecl 0x250054305f0 <col:154, col:165> col:165 _Context 'wchar_t **'
|-FunctionDecl 0x25005430ae0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:334:105> col:79 _wcserror 'wchar_t *(int) __attribute__((cdecl))':'wchar_t *(int)'
| |-ParmVarDecl 0x25005430968 <col:94, col:98> col:98 _ErrNum 'int'
| `-DeprecatedAttr 0x25005430b88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x25005430f90 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:335:28, col:147> col:44 _wcserror_s 'errno_t (wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, int)'
| |-ParmVarDecl 0x25005430cc8 <col:89, col:99> col:99 _Buf 'wchar_t *'
| |-ParmVarDecl 0x25005430d40 <col:110, col:117> col:117 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x25005430dc0 <col:136, col:140> col:140 _ErrNum 'int'
|-FunctionDecl 0x25005433280 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:337:122> col:80 __wcserror 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x250054331a8 <col:102, col:118> col:118 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x25005433328 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x250054336f0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:338:28, col:165> col:44 __wcserror_s 'errno_t (wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x25005433468 <col:90, col:100> col:100 _Buffer 'wchar_t *'
| |-ParmVarDecl 0x250054334e0 <col:114, col:121> col:121 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x25005433558 <col:142, col:158> col:158 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x25005433948 <line:341:24, col:103> col:36 _wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x250054337d0 <col:52, col:68> col:68 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x25005433848 <col:82, col:98> col:98 _Str2 'const wchar_t *'
|-FunctionDecl 0x25005433ce8 <line:342:24, col:133> col:36 _wcsicmp_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x25005433a20 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x25005433a98 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x25005433b10 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x25005433fd8 <line:343:24, col:167> col:36 _wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x25005433dc8 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x25005433e40 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x25005433eb8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2500542c3c0 <line:344:24, col:197> col:36 _wcsnicmp_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x2500542c050 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2500542c0c8 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x2500542c140 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2500542c1b8 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2500542c818 <line:345:40, col:181> col:56 _wcsnset_s 'errno_t (wchar_t *, size_t, wchar_t, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t, size_t)'
| |-ParmVarDecl 0x2500542c4a8 <col:99, col:109> col:109 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2500542c520 <col:120, col:127> col:127 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2500542c598 <col:146, col:154> col:154 _Val 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x2500542c610 <col:165, col:172> col:172 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2500542cc80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:347:86 _wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x2500542c9c0 <col:172, col:181> col:181 _Str 'wchar_t *'
| |-ParmVarDecl 0x2500542ca38 <col:187, col:196> col:196 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x2500542cab0 <col:207, col:215> col:215 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2500542cd38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x250054350a0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:348:9, col:59> col:27 _wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| `-ParmVarDecl 0x2500542ce78 <col:45, col:55> col:55 _Str 'wchar_t *'
|-FunctionDecl 0x25005435430 <line:349:40, col:159> col:56 _wcsset_s 'errno_t (wchar_t *, size_t, wchar_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t)'
| |-ParmVarDecl 0x25005435170 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x250054351e8 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x25005435260 <col:145, col:153> col:153 _Value 'wchar_t':'unsigned short'
|-FunctionDecl 0x250054357e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:351:85 _wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x250054355d0 <col:150, col:159> col:159 _Str 'wchar_t *'
| |-ParmVarDecl 0x25005435648 <col:165, col:174> col:174 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x25005435898 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x25005435bf8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:353:28, col:126> col:44 _wcslwr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x250054359d8 <col:86, col:96> col:96 _Str 'wchar_t *'
| `-ParmVarDecl 0x25005435a50 <col:107, col:114> col:114 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x25005435e68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:355:82 _wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x25005435d90 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x25005435f10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2500542e2f0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:356:28, col:156> col:44 _wcslwr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x2500542e030 <col:88, col:98> col:98 _Str 'wchar_t *'
| |-ParmVarDecl 0x2500542e0a8 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2500542e120 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2500542e6a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:358:85 _wcslwr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x2500542e490 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x2500542e508 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2500542e758 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2500542ea08 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:359:28, col:112> col:44 _wcsupr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x2500542e898 <col:79, col:89> col:89 _Str 'wchar_t *'
| `-ParmVarDecl 0x2500542e910 <col:100, col:107> col:107 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x2500542ec78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:361:82 _wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x2500542eba0 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x2500542ed20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x250054360f0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:362:28, col:142> col:44 _wcsupr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x2500542ee60 <col:81, col:91> col:91 _Str 'wchar_t *'
| |-ParmVarDecl 0x2500542eed8 <col:102, col:109> col:109 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2500542ef50 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x25005436400 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:364:85 _wcsupr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x25005436290 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x25005436308 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x250054364b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x250054368b0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:365:28, col:159> col:43 wcsxfrm 'size_t (wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x250054365f0 <col:93, col:103> col:103 _Dst 'wchar_t *'
| |-ParmVarDecl 0x25005436668 <col:116, col:132> col:132 _Src 'const wchar_t *'
| `-ParmVarDecl 0x250054366e0 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x25005436cf8 <line:366:28, col:189> col:43 _wcsxfrm_l 'size_t (wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x25005436990 <col:96, col:106> col:106 _Dst 'wchar_t *'
| |-ParmVarDecl 0x25005436a08 <col:119, col:134> col:134 _Src 'const wchar_t *'
| |-ParmVarDecl 0x25005436a80 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x25005436af8 <col:172, col:182> col:182 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x25005436f58 <line:367:24, col:102> col:36 wcscoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x25005436de0 <col:51, col:67> col:67 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x25005436e58 <col:81, col:97> col:97 _Str2 'const wchar_t *'
|-FunctionDecl 0x25005434228 <line:368:24, col:133> col:36 _wcscoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x25005437030 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x25005434090 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x25005434108 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x25005434480 <line:369:24, col:104> col:36 _wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x25005434308 <col:53, col:69> col:69 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x25005434380 <col:83, col:99> col:99 _Str2 'const wchar_t *'
|-FunctionDecl 0x25005434768 <line:370:24, col:133> col:36 _wcsicoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x25005434558 <col:55, col:71> col:71 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x250054345d0 <col:85, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x25005434648 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x25005434a58 <line:371:24, col:167> col:36 _wcsncoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x25005434848 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x250054348c0 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x25005434938 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x25005434de0 <line:372:24, col:197> col:36 _wcsncoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x25005434b38 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x25005434bb0 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x25005434c28 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x25005434ca0 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2500543d168 <line:373:24, col:168> col:36 _wcsnicoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x25005434ec8 <col:74, col:90> col:90 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x25005434f40 <col:124, col:140> col:140 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x25005434fb8 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2500543d4f0 <line:374:24, col:198> col:36 _wcsnicoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x2500543d248 <col:76, col:92> col:92 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2500543d2c0 <col:126, col:142> col:142 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x2500543d338 <col:154, col:161> col:161 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2500543d3b0 <col:181, col:191> col:191 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2500543d750 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:403:108> col:74 wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x2500543d678 <col:88, col:104> col:104 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x2500543d7f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsdup. See online help for details." ""
|-FunctionDecl 0x2500543db30 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:413:135> col:69 wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2500543d9b8 <col:84, col:100> col:100 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2500543da30 <col:114, col:130> col:130 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x2500543dbe0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicmp. See online help for details." ""
|-FunctionDecl 0x2500543dfb0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:414:200> col:70 wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x2500543dda0 <col:106, col:122> col:122 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2500543de18 <col:156, col:172> col:172 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x2500543de90 <col:184, col:191> col:191 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2500543e068 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnicmp. See online help for details." ""
|-FunctionDecl 0x2500543b480 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:415:153> col:60 wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x2500543b278 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x2500543b2f0 <col:118, col:126> col:126 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x2500543b368 <col:137, col:144> col:144 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2500543b538 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnset. See online help for details." ""
|-FunctionDecl 0x2500543b7d0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:416:90> col:59 wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x2500543b6f8 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x2500543b878 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsrev. See online help for details." ""
|-FunctionDecl 0x2500543bba8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:417:104> col:59 wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x2500543ba38 <col:76, col:86> col:86 _Str 'wchar_t *'
| |-ParmVarDecl 0x2500543bab0 <col:92, col:100> col:100 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x2500543bc58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsset. See online help for details." ""
|-FunctionDecl 0x2500543bef0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:418:90> col:59 wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x2500543be18 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x2500543bf98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcslwr. See online help for details." ""
|-FunctionDecl 0x25005438258 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:419:90> col:59 wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x25005438180 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x25005438300 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsupr. See online help for details." ""
|-FunctionDecl 0x25005438638 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:420:137> col:70 wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x250054384c0 <col:86, col:102> col:102 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x25005438538 <col:116, col:132> col:132 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x250054386e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicoll. See online help for details." ""
|-FunctionDecl 0x25005438918 <.//openssl//file_jk/before\crypto\modes\ctr128.c:20:1, line:30:1> line:20:13 used ctr128_inc 'void (unsigned char *)' static
| |-ParmVarDecl 0x25005438840 <col:24, col:39> col:39 used counter 'unsigned char *'
| `-CompoundStmt 0x25005438f28 <line:21:1, line:30:1>
|   |-DeclStmt 0x25005438b60 <line:22:5, col:22>
|   | |-VarDecl 0x250054389e8 <col:5, col:13> col:9 used n 'u32':'unsigned int' cinit
|   | | `-ImplicitCastExpr 0x25005438a78 <col:13> 'u32':'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x25005438a50 <col:13> 'int' 16
|   | `-VarDecl 0x25005438aa0 <col:5, col:21> col:17 used c 'u32':'unsigned int' cinit
|   |   `-ImplicitCastExpr 0x25005438b30 <col:21> 'u32':'unsigned int' <IntegralCast>
|   |     `-IntegerLiteral 0x25005438b08 <col:21> 'int' 1
|   `-DoStmt 0x25005438f08 <line:24:5, line:29:15>
|     |-CompoundStmt 0x25005438ea0 <line:24:8, line:29:5>
|     | |-UnaryOperator 0x25005438bb0 <line:25:9, col:11> 'u32':'unsigned int' prefix '--'
|     | | `-DeclRefExpr 0x25005438b78 <col:11> 'u32':'unsigned int' lvalue Var 0x250054389e8 'n' 'u32':'unsigned int'
|     | |-CompoundAssignOperator 0x25005438cc0 <line:26:9, col:23> 'u32':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|     | | |-DeclRefExpr 0x25005438bc8 <col:9> 'u32':'unsigned int' lvalue Var 0x25005438aa0 'c' 'u32':'unsigned int'
|     | | `-ImplicitCastExpr 0x25005438ca8 <col:14, col:23> 'unsigned int' <IntegralCast>
|     | |   `-ImplicitCastExpr 0x25005438c90 <col:14, col:23> 'unsigned char' <LValueToRValue>
|     | |     `-ArraySubscriptExpr 0x25005438c70 <col:14, col:23> 'unsigned char' lvalue
|     | |       |-ImplicitCastExpr 0x25005438c40 <col:14> 'unsigned char *' <LValueToRValue>
|     | |       | `-DeclRefExpr 0x25005438c00 <col:14> 'unsigned char *' lvalue ParmVar 0x25005438840 'counter' 'unsigned char *'
|     | |       `-ImplicitCastExpr 0x25005438c58 <col:22> 'u32':'unsigned int' <LValueToRValue>
|     | |         `-DeclRefExpr 0x25005438c20 <col:22> 'u32':'unsigned int' lvalue Var 0x250054389e8 'n' 'u32':'unsigned int'
|     | |-BinaryOperator 0x25005438df0 <line:27:9, col:26> 'unsigned char' '='
|     | | |-ArraySubscriptExpr 0x25005438d60 <col:9, col:18> 'unsigned char' lvalue
|     | | | |-ImplicitCastExpr 0x25005438d30 <col:9> 'unsigned char *' <LValueToRValue>
|     | | | | `-DeclRefExpr 0x25005438cf0 <col:9> 'unsigned char *' lvalue ParmVar 0x25005438840 'counter' 'unsigned char *'
|     | | | `-ImplicitCastExpr 0x25005438d48 <col:17> 'u32':'unsigned int' <LValueToRValue>
|     | | |   `-DeclRefExpr 0x25005438d10 <col:17> 'u32':'unsigned int' lvalue Var 0x250054389e8 'n' 'u32':'unsigned int'
|     | | `-CStyleCastExpr 0x25005438dc8 <col:22, col:26> 'u8':'unsigned char' <IntegralCast>
|     | |   `-ImplicitCastExpr 0x25005438db0 <col:26> 'u32':'unsigned int' <LValueToRValue> part_of_explicit_cast
|     | |     `-DeclRefExpr 0x25005438d80 <col:26> 'u32':'unsigned int' lvalue Var 0x25005438aa0 'c' 'u32':'unsigned int'
|     | `-CompoundAssignOperator 0x25005438e70 <line:28:9, col:15> 'u32':'unsigned int' '>>=' ComputeLHSTy='u32':'unsigned int' ComputeResultTy='u32':'unsigned int'
|     |   |-DeclRefExpr 0x25005438e10 <col:9> 'u32':'unsigned int' lvalue Var 0x25005438aa0 'c' 'u32':'unsigned int'
|     |   `-IntegerLiteral 0x25005438e30 <col:15> 'int' 8
|     `-ImplicitCastExpr 0x25005438ef0 <line:29:14> 'u32':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x25005438ed0 <col:14> 'u32':'unsigned int' lvalue Var 0x250054389e8 'n' 'u32':'unsigned int'
|-FunctionDecl 0x25005439008 <line:33:1, line:57:1> line:33:13 used ctr128_inc_aligned 'void (unsigned char *)' static
| |-ParmVarDecl 0x25005438f60 <col:32, col:47> col:47 used counter 'unsigned char *'
| `-CompoundStmt 0x25005439138 <line:34:1, line:57:1>
|   |-DeclStmt 0x2500543c340 <line:35:5, col:26>
|   | |-VarDecl 0x2500543c148 <col:5, col:13> col:13 used data 'size_t *'
|   | |-VarDecl 0x2500543c1c0 <col:5, col:19> col:19 used c 'size_t':'unsigned long long'
|   | |-VarDecl 0x2500543c238 <col:5, col:22> col:22 used d 'size_t':'unsigned long long'
|   | `-VarDecl 0x2500543c2b0 <col:5, col:25> col:25 used n 'size_t':'unsigned long long'
|   |-DeclStmt 0x2500543c6a8 <line:36:5, line:41:6>
|   | |-RecordDecl 0x2500543c358 <line:36:11, line:39:5> line:36:11 union definition
|   | | |-FieldDecl 0x2500543c428 <line:37:9, col:14> col:14 one 'long'
|   | | `-FieldDecl 0x2500543c490 <line:38:9, col:14> col:14 referenced little 'char'
|   | `-VarDecl 0x2500543c548 <line:36:5, line:41:5> line:39:7 used is_endian 'const union (anonymous union at .//openssl//file_jk/before\crypto\modes\ctr128.c:36:11)':'const union (anonymous at .//openssl//file_jk/before\crypto\modes\ctr128.c:36:11)' cinit
|   |   `-InitListExpr 0x2500543c630 <col:19, line:41:5> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\ctr128.c:36:11)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\ctr128.c:36:11)' field Field 0x2500543c428 'one' 'long'
|   |     `-ImplicitCastExpr 0x2500543c678 <line:40:9> 'long' <IntegralCast>
|   |       `-IntegerLiteral 0x2500543c5b0 <col:9> 'int' 1
|   |-IfStmt 0x2500543ca50 <line:43:5, line:46:5>
|   | |-BinaryOperator 0x2500543c898 <line:43:9, col:67> 'int' '||'
|   | | |-ImplicitCastExpr 0x2500543c880 <col:9, col:19> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x2500543c868 <col:9, col:19> 'char' <LValueToRValue>
|   | | |   `-MemberExpr 0x2500543c6f8 <col:9, col:19> 'const char' lvalue .little 0x2500543c490
|   | | |     `-DeclRefExpr 0x2500543c6c0 <col:9> 'const union (anonymous union at .//openssl//file_jk/before\crypto\modes\ctr128.c:36:11)':'const union (anonymous at .//openssl//file_jk/before\crypto\modes\ctr128.c:36:11)' lvalue Var 0x2500543c548 'is_endian' 'const union (anonymous union at .//openssl//file_jk/before\crypto\modes\ctr128.c:36:11)':'const union (anonymous at .//openssl//file_jk/before\crypto\modes\ctr128.c:36:11)'
|   | | `-BinaryOperator 0x2500543c848 <col:29, col:67> 'int' '!='
|   | |   |-ParenExpr 0x2500543c7e8 <col:29, col:62> 'unsigned long long'
|   | |   | `-BinaryOperator 0x2500543c7c8 <col:30, col:61> 'unsigned long long' '%'
|   | |   |   |-CStyleCastExpr 0x2500543c770 <col:30, col:38> 'size_t':'unsigned long long' <PointerToIntegral>
|   | |   |   | `-ImplicitCastExpr 0x2500543c758 <col:38> 'unsigned char *' <LValueToRValue> part_of_explicit_cast
|   | |   |   |   `-DeclRefExpr 0x2500543c728 <col:38> 'unsigned char *' lvalue ParmVar 0x25005438f60 'counter' 'unsigned char *'
|   | |   |   `-UnaryExprOrTypeTraitExpr 0x2500543c7a8 <col:48, col:61> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|   | |   `-ImplicitCastExpr 0x2500543c830 <col:67> 'unsigned long long' <IntegralCast>
|   | |     `-IntegerLiteral 0x2500543c808 <col:67> 'int' 0
|   | `-CompoundStmt 0x2500543ca30 <col:70, line:46:5>
|   |   |-CallExpr 0x2500543c9e0 <line:44:9, col:27> 'void'
|   |   | |-ImplicitCastExpr 0x2500543c9c8 <col:9> 'void (*)(unsigned char *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x2500543c958 <col:9> 'void (unsigned char *)' Function 0x25005438918 'ctr128_inc' 'void (unsigned char *)'
|   |   | `-ImplicitCastExpr 0x2500543ca08 <col:20> 'unsigned char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x2500543c978 <col:20> 'unsigned char *' lvalue ParmVar 0x25005438f60 'counter' 'unsigned char *'
|   |   `-ReturnStmt 0x2500543ca20 <line:45:9>
|   |-BinaryOperator 0x2500543cb10 <line:48:5, col:22> 'size_t *' '='
|   | |-DeclRefExpr 0x2500543ca68 <col:5> 'size_t *' lvalue Var 0x2500543c148 'data' 'size_t *'
|   | `-CStyleCastExpr 0x2500543cae8 <col:12, col:22> 'size_t *' <BitCast>
|   |   `-ImplicitCastExpr 0x2500543cad0 <col:22> 'unsigned char *' <LValueToRValue> part_of_explicit_cast
|   |     `-DeclRefExpr 0x2500543caa0 <col:22> 'unsigned char *' lvalue ParmVar 0x25005438f60 'counter' 'unsigned char *'
|   |-BinaryOperator 0x2500543cba8 <line:49:5, col:9> 'size_t':'unsigned long long' '='
|   | |-DeclRefExpr 0x2500543cb30 <col:5> 'size_t':'unsigned long long' lvalue Var 0x2500543c1c0 'c' 'size_t':'unsigned long long'
|   | `-ImplicitCastExpr 0x2500543cb90 <col:9> 'size_t':'unsigned long long' <IntegralCast>
|   |   `-IntegerLiteral 0x2500543cb68 <col:9> 'int' 1
|   |-BinaryOperator 0x2500543cc90 <line:50:5, col:27> 'size_t':'unsigned long long' '='
|   | |-DeclRefExpr 0x2500543cbc8 <col:5> 'size_t':'unsigned long long' lvalue Var 0x2500543c2b0 'n' 'size_t':'unsigned long long'
|   | `-BinaryOperator 0x2500543cc70 <col:9, col:27> 'unsigned long long' '/'
|   |   |-ImplicitCastExpr 0x2500543cc58 <col:9> 'unsigned long long' <IntegralCast>
|   |   | `-IntegerLiteral 0x2500543cc00 <col:9> 'int' 16
|   |   `-UnaryExprOrTypeTraitExpr 0x2500543cc38 <col:14, col:27> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|   `-DoStmt 0x25005439118 <line:51:5, line:56:15>
|     |-CompoundStmt 0x2500543d0e8 <line:51:8, line:56:5>
|     | |-UnaryOperator 0x2500543ccd0 <line:52:9, col:11> 'size_t':'unsigned long long' prefix '--'
|     | | `-DeclRefExpr 0x2500543ccb0 <col:11> 'size_t':'unsigned long long' lvalue Var 0x2500543c2b0 'n' 'size_t':'unsigned long long'
|     | |-BinaryOperator 0x2500543ce18 <line:53:9, col:24> 'size_t':'unsigned long long' '='
|     | | |-DeclRefExpr 0x2500543cce8 <col:9> 'size_t':'unsigned long long' lvalue Var 0x2500543c238 'd' 'size_t':'unsigned long long'
|     | | `-CompoundAssignOperator 0x2500543cde8 <col:13, col:24> 'size_t':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|     | |   |-ArraySubscriptExpr 0x2500543cd90 <col:13, col:19> 'size_t':'unsigned long long' lvalue
|     | |   | |-ImplicitCastExpr 0x2500543cd60 <col:13> 'size_t *' <LValueToRValue>
|     | |   | | `-DeclRefExpr 0x2500543cd20 <col:13> 'size_t *' lvalue Var 0x2500543c148 'data' 'size_t *'
|     | |   | `-ImplicitCastExpr 0x2500543cd78 <col:18> 'size_t':'unsigned long long' <LValueToRValue>
|     | |   |   `-DeclRefExpr 0x2500543cd40 <col:18> 'size_t':'unsigned long long' lvalue Var 0x2500543c2b0 'n' 'size_t':'unsigned long long'
|     | |   `-ImplicitCastExpr 0x2500543cdd0 <col:24> 'size_t':'unsigned long long' <LValueToRValue>
|     | |     `-DeclRefExpr 0x2500543cdb0 <col:24> 'size_t':'unsigned long long' lvalue Var 0x2500543c1c0 'c' 'size_t':'unsigned long long'
|     | `-BinaryOperator 0x2500543d0c8 <line:55:9, col:54> 'size_t':'unsigned long long' '='
|     |   |-DeclRefExpr 0x2500543ce38 <col:9> 'size_t':'unsigned long long' lvalue Var 0x2500543c1c0 'c' 'size_t':'unsigned long long'
|     |   `-BinaryOperator 0x2500543d0a8 <col:13, col:54> 'unsigned long long' '>>'
|     |     |-ParenExpr 0x2500543cf78 <col:13, col:26> 'unsigned long long'
|     |     | `-BinaryOperator 0x2500543cf58 <col:14, col:25> 'unsigned long long' '&'
|     |     |   |-ParenExpr 0x2500543cee8 <col:14, col:20> 'unsigned long long'
|     |     |   | `-BinaryOperator 0x2500543cec8 <col:15, col:19> 'unsigned long long' '-'
|     |     |   |   |-ImplicitCastExpr 0x2500543ce98 <col:15> 'size_t':'unsigned long long' <LValueToRValue>
|     |     |   |   | `-DeclRefExpr 0x2500543ce58 <col:15> 'size_t':'unsigned long long' lvalue Var 0x2500543c238 'd' 'size_t':'unsigned long long'
|     |     |   |   `-ImplicitCastExpr 0x2500543ceb0 <col:19> 'size_t':'unsigned long long' <LValueToRValue>
|     |     |   |     `-DeclRefExpr 0x2500543ce78 <col:19> 'size_t':'unsigned long long' lvalue Var 0x2500543c1c0 'c' 'size_t':'unsigned long long'
|     |     |   `-UnaryOperator 0x2500543cf40 <col:24, col:25> 'size_t':'unsigned long long' prefix '~' cannot overflow
|     |     |     `-ImplicitCastExpr 0x2500543cf28 <col:25> 'size_t':'unsigned long long' <LValueToRValue>
|     |     |       `-DeclRefExpr 0x2500543cf08 <col:25> 'size_t':'unsigned long long' lvalue Var 0x2500543c238 'd' 'size_t':'unsigned long long'
|     |     `-ParenExpr 0x2500543d088 <col:31, col:54> 'unsigned long long'
|     |       `-BinaryOperator 0x2500543d068 <col:32, col:53> 'unsigned long long' '-'
|     |         |-BinaryOperator 0x2500543d008 <col:32, col:49> 'unsigned long long' '*'
|     |         | |-UnaryExprOrTypeTraitExpr 0x2500543cfa8 <col:32, col:45> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|     |         | `-ImplicitCastExpr 0x2500543cff0 <col:49> 'unsigned long long' <IntegralCast>
|     |         |   `-IntegerLiteral 0x2500543cfc8 <col:49> 'int' 8
|     |         `-ImplicitCastExpr 0x2500543d050 <col:53> 'unsigned long long' <IntegralCast>
|     |           `-IntegerLiteral 0x2500543d028 <col:53> 'int' 1
|     `-ImplicitCastExpr 0x25005439100 <line:56:14> 'size_t':'unsigned long long' <LValueToRValue>
|       `-DeclRefExpr 0x250054390e0 <col:14> 'size_t':'unsigned long long' lvalue Var 0x2500543c2b0 'n' 'size_t':'unsigned long long'
|-FunctionDecl 0x250054397b8 <line:71:1, line:132:1> line:71:6 invalid CRYPTO_ctr128_encrypt 'void (const unsigned char *, unsigned char *, size_t, const void *, unsigned char *, unsigned char *, unsigned int *, int)'
| |-ParmVarDecl 0x25005439198 <col:28, col:49> col:49 used in 'const unsigned char *'
| |-ParmVarDecl 0x25005439218 <col:53, col:68> col:68 used out 'unsigned char *'
| |-ParmVarDecl 0x25005439290 <line:72:28, col:35> col:35 used len 'size_t':'unsigned long long'
| |-ParmVarDecl 0x25005439310 <col:40, col:52> col:52 used key 'const void *'
| |-ParmVarDecl 0x25005439410 <line:73:28, col:49> col:42 used ivec 'unsigned char *':'unsigned char *'
| |-ParmVarDecl 0x250054394e0 <line:74:28, col:55> col:42 used ecount_buf 'unsigned char *':'unsigned char *'
| |-ParmVarDecl 0x25005439590 <col:58, col:72> col:72 used num 'unsigned int *'
| |-ParmVarDecl 0x25005439610 <line:75:28, col:39> col:39 invalid block 'int'
| `-CompoundStmt 0x250054377b8 <line:76:1, line:132:1>
|   |-DeclStmt 0x25005439930 <line:77:5, col:19>
|   | `-VarDecl 0x250054398c8 <col:5, col:18> col:18 used n 'unsigned int'
|   |-DeclStmt 0x25005439a00 <line:78:5, col:17>
|   | `-VarDecl 0x25005439958 <col:5, col:16> col:12 used l 'size_t':'unsigned long long' cinit
|   |   `-ImplicitCastExpr 0x250054399e8 <col:16> 'size_t':'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x250054399c0 <col:16> 'int' 0
|   |-BinaryOperator 0x25005439ad0 <line:80:5, col:10> 'unsigned int' '='
|   | |-DeclRefExpr 0x25005439a18 <col:5> 'unsigned int' lvalue Var 0x250054398c8 'n' 'unsigned int'
|   | `-ImplicitCastExpr 0x25005439ab8 <col:9, col:10> 'unsigned int' <LValueToRValue>
|   |   `-UnaryOperator 0x25005439aa0 <col:9, col:10> 'unsigned int' lvalue prefix '*' cannot overflow
|   |     `-ImplicitCastExpr 0x25005439a88 <col:10> 'unsigned int *' <LValueToRValue>
|   |       `-DeclRefExpr 0x25005439a50 <col:10> 'unsigned int *' lvalue ParmVar 0x25005439590 'num' 'unsigned int *'
|   |-IfStmt 0x2500543f0b0 <line:83:5, line:118:5>
|   | |-BinaryOperator 0x25005439bc0 <line:83:9, col:32> 'int' '=='
|   | | |-BinaryOperator 0x25005439b60 <col:9, col:27> 'unsigned long long' '%'
|   | | | |-ImplicitCastExpr 0x25005439b48 <col:9> 'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x25005439af0 <col:9> 'int' 16
|   | | | `-UnaryExprOrTypeTraitExpr 0x25005439b28 <col:14, col:27> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x25005439ba8 <col:32> 'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x25005439b80 <col:32> 'int' 0
|   | `-CompoundStmt 0x2500543f098 <col:35, line:118:5>
|   |   `-DoStmt 0x2500543f078 <line:84:9, line:117:19>
|   |     |-CompoundStmt 0x2500543f018 <line:84:12, line:117:9>
|   |     | |-WhileStmt 0x2500543a0b0 <line:85:13, line:89:13>
|   |     | | |-BinaryOperator 0x25005439c68 <line:85:20, col:25> 'int' '&&'
|   |     | | | |-ImplicitCastExpr 0x25005439c38 <col:20> 'unsigned int' <LValueToRValue>
|   |     | | | | `-DeclRefExpr 0x25005439be0 <col:20> 'unsigned int' lvalue Var 0x250054398c8 'n' 'unsigned int'
|   |     | | | `-ImplicitCastExpr 0x25005439c50 <col:25> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x25005439c00 <col:25> 'size_t':'unsigned long long' lvalue ParmVar 0x25005439290 'len' 'size_t':'unsigned long long'
|   |     | | `-CompoundStmt 0x2500543a088 <col:30, line:89:13>
|   |     | |   |-BinaryOperator 0x25005439ed8 <line:86:17, col:50> 'unsigned char' '='
|   |     | |   | |-UnaryOperator 0x25005439cf8 <col:17, col:24> 'unsigned char' lvalue prefix '*' cannot overflow
|   |     | |   | | `-ParenExpr 0x25005439cd8 <col:18, col:24> 'unsigned char *'
|   |     | |   | |   `-UnaryOperator 0x25005439cc0 <col:19, col:22> 'unsigned char *' postfix '++'
|   |     | |   | |     `-DeclRefExpr 0x25005439c88 <col:19> 'unsigned char *' lvalue ParmVar 0x25005439218 'out' 'unsigned char *'
|   |     | |   | `-ImplicitCastExpr 0x25005439ec0 <col:28, col:50> 'unsigned char' <IntegralCast>
|   |     | |   |   `-BinaryOperator 0x25005439ea0 <col:28, col:50> 'int' '^'
|   |     | |   |     |-ImplicitCastExpr 0x25005439e58 <col:28, col:34> 'int' <IntegralCast>
|   |     | |   |     | `-ImplicitCastExpr 0x25005439e40 <col:28, col:34> 'unsigned char' <LValueToRValue>
|   |     | |   |     |   `-UnaryOperator 0x25005439d80 <col:28, col:34> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |     | |   |     |     `-ParenExpr 0x25005439d60 <col:29, col:34> 'const unsigned char *'
|   |     | |   |     |       `-UnaryOperator 0x25005439d48 <col:30, col:32> 'const unsigned char *' postfix '++'
|   |     | |   |     |         `-DeclRefExpr 0x25005439d10 <col:30> 'const unsigned char *' lvalue ParmVar 0x25005439198 'in' 'const unsigned char *'
|   |     | |   |     `-ImplicitCastExpr 0x25005439e88 <col:38, col:50> 'int' <IntegralCast>
|   |     | |   |       `-ImplicitCastExpr 0x25005439e70 <col:38, col:50> 'unsigned char' <LValueToRValue>
|   |     | |   |         `-ArraySubscriptExpr 0x25005439e20 <col:38, col:50> 'unsigned char' lvalue
|   |     | |   |           |-ImplicitCastExpr 0x25005439df0 <col:38> 'unsigned char *':'unsigned char *' <LValueToRValue>
|   |     | |   |           | `-DeclRefExpr 0x25005439d98 <col:38> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x250054394e0 'ecount_buf' 'unsigned char *':'unsigned char *'
|   |     | |   |           `-ImplicitCastExpr 0x25005439e08 <col:49> 'unsigned int' <LValueToRValue>
|   |     | |   |             `-DeclRefExpr 0x25005439dd0 <col:49> 'unsigned int' lvalue Var 0x250054398c8 'n' 'unsigned int'
|   |     | |   |-UnaryOperator 0x25005439f18 <line:87:17, col:19> 'size_t':'unsigned long long' prefix '--'
|   |     | |   | `-DeclRefExpr 0x25005439ef8 <col:19> 'size_t':'unsigned long long' lvalue ParmVar 0x25005439290 'len' 'size_t':'unsigned long long'
|   |     | |   `-BinaryOperator 0x2500543a068 <line:88:17, col:31> 'unsigned int' '='
|   |     | |     |-DeclRefExpr 0x25005439f30 <col:17> 'unsigned int' lvalue Var 0x250054398c8 'n' 'unsigned int'
|   |     | |     `-BinaryOperator 0x2500543a048 <col:21, col:31> 'unsigned int' '%'
|   |     | |       |-ParenExpr 0x25005439fe8 <col:21, col:27> 'unsigned int'
|   |     | |       | `-BinaryOperator 0x25005439fc8 <col:22, col:26> 'unsigned int' '+'
|   |     | |       |   |-ImplicitCastExpr 0x25005439f98 <col:22> 'unsigned int' <LValueToRValue>
|   |     | |       |   | `-DeclRefExpr 0x25005439f50 <col:22> 'unsigned int' lvalue Var 0x250054398c8 'n' 'unsigned int'
|   |     | |       |   `-ImplicitCastExpr 0x25005439fb0 <col:26> 'unsigned int' <IntegralCast>
|   |     | |       |     `-IntegerLiteral 0x25005439f70 <col:26> 'int' 1
|   |     | |       `-ImplicitCastExpr 0x2500543a030 <col:31> 'unsigned int' <IntegralCast>
|   |     | |         `-IntegerLiteral 0x2500543a008 <col:31> 'int' 16
|   |     | |-WhileStmt 0x2500543ead0 <line:96:13, line:106:13>
|   |     | | |-BinaryOperator 0x2500543e1a8 <line:96:20, col:27> 'int' '>='
|   |     | | | |-ImplicitCastExpr 0x2500543e178 <col:20> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | | | | `-DeclRefExpr 0x2500543e130 <col:20> 'size_t':'unsigned long long' lvalue ParmVar 0x25005439290 'len' 'size_t':'unsigned long long'
|   |     | | | `-ImplicitCastExpr 0x2500543e190 <col:27> 'unsigned long long' <IntegralCast>
|   |     | | |   `-IntegerLiteral 0x2500543e150 <col:27> 'int' 16
|   |     | | `-CompoundStmt 0x2500543ea90 <col:31, line:106:13>
|   |     | |   |-CallExpr 0x2500543e2b0 <line:98:17, col:40> 'void'
|   |     | |   | |-ImplicitCastExpr 0x2500543e298 <col:17> 'void (*)(unsigned char *)' <FunctionToPointerDecay>
|   |     | |   | | `-DeclRefExpr 0x2500543e258 <col:17> 'void (unsigned char *)' Function 0x25005439008 'ctr128_inc_aligned' 'void (unsigned char *)'
|   |     | |   | `-ImplicitCastExpr 0x2500543e2d8 <col:36> 'unsigned char *':'unsigned char *' <LValueToRValue>
|   |     | |   |   `-DeclRefExpr 0x2500543e278 <col:36> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x25005439410 'ivec' 'unsigned char *':'unsigned char *'
|   |     | |   |-ForStmt 0x2500543e858 <line:99:17, line:101:73>
|   |     | |   | |-BinaryOperator 0x2500543e350 <line:99:22, col:26> 'unsigned int' '='
|   |     | |   | | |-DeclRefExpr 0x2500543e2f0 <col:22> 'unsigned int' lvalue Var 0x250054398c8 'n' 'unsigned int'
|   |     | |   | | `-ImplicitCastExpr 0x2500543e338 <col:26> 'unsigned int' <IntegralCast>
|   |     | |   | |   `-IntegerLiteral 0x2500543e310 <col:26> 'int' 0
|   |     | |   | |-<<<NULL>>>
|   |     | |   | |-BinaryOperator 0x2500543e3e8 <col:29, col:33> 'int' '<'
|   |     | |   | | |-ImplicitCastExpr 0x2500543e3b8 <col:29> 'unsigned int' <LValueToRValue>
|   |     | |   | | | `-DeclRefExpr 0x2500543e370 <col:29> 'unsigned int' lvalue Var 0x250054398c8 'n' 'unsigned int'
|   |     | |   | | `-ImplicitCastExpr 0x2500543e3d0 <col:33> 'unsigned int' <IntegralCast>
|   |     | |   | |   `-IntegerLiteral 0x2500543e390 <col:33> 'int' 16
|   |     | |   | |-CompoundAssignOperator 0x2500543e458 <col:37, col:55> 'unsigned int' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |     | |   | | |-DeclRefExpr 0x2500543e408 <col:37> 'unsigned int' lvalue Var 0x250054398c8 'n' 'unsigned int'
|   |     | |   | | `-UnaryExprOrTypeTraitExpr 0x2500543e438 <col:42, col:55> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|   |     | |   | `-BinaryOperator 0x2500543e838 <line:100:21, line:101:73> 'size_t':'unsigned long long' '='
|   |     | |   |   |-UnaryOperator 0x2500543e590 <line:100:21, col:40> 'size_t':'unsigned long long' lvalue prefix '*' cannot overflow
|   |     | |   |   | `-CStyleCastExpr 0x2500543e568 <col:22, col:40> 'size_t *' <BitCast>
|   |     | |   |   |   `-ParenExpr 0x2500543e548 <col:32, col:40> 'unsigned char *'
|   |     | |   |   |     `-BinaryOperator 0x2500543e4f8 <col:33, col:39> 'unsigned char *' '+'
|   |     | |   |   |       |-ImplicitCastExpr 0x2500543e4c8 <col:33> 'unsigned char *' <LValueToRValue>
|   |     | |   |   |       | `-DeclRefExpr 0x2500543e488 <col:33> 'unsigned char *' lvalue ParmVar 0x25005439218 'out' 'unsigned char *'
|   |     | |   |   |       `-ImplicitCastExpr 0x2500543e4e0 <col:39> 'unsigned int' <LValueToRValue>
|   |     | |   |   |         `-DeclRefExpr 0x2500543e4a8 <col:39> 'unsigned int' lvalue Var 0x250054398c8 'n' 'unsigned int'
|   |     | |   |   `-BinaryOperator 0x2500543e818 <line:101:25, col:73> 'unsigned long long' '^'
|   |     | |   |     |-ImplicitCastExpr 0x2500543e7e8 <col:25, col:43> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | |   |     | `-UnaryOperator 0x2500543e6b0 <col:25, col:43> 'size_t':'unsigned long long' lvalue prefix '*' cannot overflow
|   |     | |   |     |   `-CStyleCastExpr 0x2500543e688 <col:26, col:43> 'size_t *' <BitCast>
|   |     | |   |     |     `-ParenExpr 0x2500543e668 <col:36, col:43> 'const unsigned char *'
|   |     | |   |     |       `-BinaryOperator 0x2500543e618 <col:37, col:42> 'const unsigned char *' '+'
|   |     | |   |     |         |-ImplicitCastExpr 0x2500543e5e8 <col:37> 'const unsigned char *' <LValueToRValue>
|   |     | |   |     |         | `-DeclRefExpr 0x2500543e5a8 <col:37> 'const unsigned char *' lvalue ParmVar 0x25005439198 'in' 'const unsigned char *'
|   |     | |   |     |         `-ImplicitCastExpr 0x2500543e600 <col:42> 'unsigned int' <LValueToRValue>
|   |     | |   |     |           `-DeclRefExpr 0x2500543e5c8 <col:42> 'unsigned int' lvalue Var 0x250054398c8 'n' 'unsigned int'
|   |     | |   |     `-ImplicitCastExpr 0x2500543e800 <col:47, col:73> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | |   |       `-UnaryOperator 0x2500543e7d0 <col:47, col:73> 'size_t':'unsigned long long' lvalue prefix '*' cannot overflow
|   |     | |   |         `-CStyleCastExpr 0x2500543e7a8 <col:48, col:73> 'size_t *' <BitCast>
|   |     | |   |           `-ParenExpr 0x2500543e788 <col:58, col:73> 'unsigned char *':'unsigned char *'
|   |     | |   |             `-BinaryOperator 0x2500543e738 <col:59, col:72> 'unsigned char *':'unsigned char *' '+'
|   |     | |   |               |-ImplicitCastExpr 0x2500543e708 <col:59> 'unsigned char *':'unsigned char *' <LValueToRValue>
|   |     | |   |               | `-DeclRefExpr 0x2500543e6c8 <col:59> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x250054394e0 'ecount_buf' 'unsigned char *':'unsigned char *'
|   |     | |   |               `-ImplicitCastExpr 0x2500543e720 <col:72> 'unsigned int' <LValueToRValue>
|   |     | |   |                 `-DeclRefExpr 0x2500543e6e8 <col:72> 'unsigned int' lvalue Var 0x250054398c8 'n' 'unsigned int'
|   |     | |   |-CompoundAssignOperator 0x2500543e8f0 <line:102:17, col:24> 'size_t':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |     | |   | |-DeclRefExpr 0x2500543e890 <col:17> 'size_t':'unsigned long long' lvalue ParmVar 0x25005439290 'len' 'size_t':'unsigned long long'
|   |     | |   | `-ImplicitCastExpr 0x2500543e8d8 <col:24> 'unsigned long long' <IntegralCast>
|   |     | |   |   `-IntegerLiteral 0x2500543e8b0 <col:24> 'int' 16
|   |     | |   |-CompoundAssignOperator 0x2500543e968 <line:103:17, col:24> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   |     | |   | |-DeclRefExpr 0x2500543e920 <col:17> 'unsigned char *' lvalue ParmVar 0x25005439218 'out' 'unsigned char *'
|   |     | |   | `-IntegerLiteral 0x2500543e940 <col:24> 'int' 16
|   |     | |   |-CompoundAssignOperator 0x2500543e9e0 <line:104:17, col:23> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   |     | |   | |-DeclRefExpr 0x2500543e998 <col:17> 'const unsigned char *' lvalue ParmVar 0x25005439198 'in' 'const unsigned char *'
|   |     | |   | `-IntegerLiteral 0x2500543e9b8 <col:23> 'int' 16
|   |     | |   `-BinaryOperator 0x2500543ea70 <line:105:17, col:21> 'unsigned int' '='
|   |     | |     |-DeclRefExpr 0x2500543ea10 <col:17> 'unsigned int' lvalue Var 0x250054398c8 'n' 'unsigned int'
|   |     | |     `-ImplicitCastExpr 0x2500543ea58 <col:21> 'unsigned int' <IntegralCast>
|   |     | |       `-IntegerLiteral 0x2500543ea30 <col:21> 'int' 0
|   |     | |-IfStmt 0x2500543ef48 <line:107:13, line:114:13>
|   |     | | |-ImplicitCastExpr 0x2500543eb08 <line:107:17> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | | | `-DeclRefExpr 0x2500543eae8 <col:17> 'size_t':'unsigned long long' lvalue ParmVar 0x25005439290 'len' 'size_t':'unsigned long long'
|   |     | | `-CompoundStmt 0x2500543ef28 <col:22, line:114:13>
|   |     | |   |-CallExpr 0x2500543ebd8 <line:109:17, col:40> 'void'
|   |     | |   | |-ImplicitCastExpr 0x2500543ebc0 <col:17> 'void (*)(unsigned char *)' <FunctionToPointerDecay>
|   |     | |   | | `-DeclRefExpr 0x2500543eb80 <col:17> 'void (unsigned char *)' Function 0x25005439008 'ctr128_inc_aligned' 'void (unsigned char *)'
|   |     | |   | `-ImplicitCastExpr 0x2500543ec00 <col:36> 'unsigned char *':'unsigned char *' <LValueToRValue>
|   |     | |   |   `-DeclRefExpr 0x2500543eba0 <col:36> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x25005439410 'ivec' 'unsigned char *':'unsigned char *'
|   |     | |   `-WhileStmt 0x2500543ef10 <line:110:17, line:113:17>
|   |     | |     |-UnaryOperator 0x2500543ec38 <line:110:24, col:27> 'size_t':'unsigned long long' postfix '--'
|   |     | |     | `-DeclRefExpr 0x2500543ec18 <col:24> 'size_t':'unsigned long long' lvalue ParmVar 0x25005439290 'len' 'size_t':'unsigned long long'
|   |     | |     `-CompoundStmt 0x2500543eef0 <col:31, line:113:17>
|   |     | |       |-BinaryOperator 0x2500543ee98 <line:111:21, col:50> 'unsigned char' '='
|   |     | |       | |-ArraySubscriptExpr 0x2500543ecc0 <col:21, col:26> 'unsigned char' lvalue
|   |     | |       | | |-ImplicitCastExpr 0x2500543ec90 <col:21> 'unsigned char *' <LValueToRValue>
|   |     | |       | | | `-DeclRefExpr 0x2500543ec50 <col:21> 'unsigned char *' lvalue ParmVar 0x25005439218 'out' 'unsigned char *'
|   |     | |       | | `-ImplicitCastExpr 0x2500543eca8 <col:25> 'unsigned int' <LValueToRValue>
|   |     | |       | |   `-DeclRefExpr 0x2500543ec70 <col:25> 'unsigned int' lvalue Var 0x250054398c8 'n' 'unsigned int'
|   |     | |       | `-ImplicitCastExpr 0x2500543ee80 <col:30, col:50> 'unsigned char' <IntegralCast>
|   |     | |       |   `-BinaryOperator 0x2500543ee60 <col:30, col:50> 'int' '^'
|   |     | |       |     |-ImplicitCastExpr 0x2500543ee18 <col:30, col:34> 'int' <IntegralCast>
|   |     | |       |     | `-ImplicitCastExpr 0x2500543ee00 <col:30, col:34> 'unsigned char' <LValueToRValue>
|   |     | |       |     |   `-ArraySubscriptExpr 0x2500543ed50 <col:30, col:34> 'const unsigned char' lvalue
|   |     | |       |     |     |-ImplicitCastExpr 0x2500543ed20 <col:30> 'const unsigned char *' <LValueToRValue>
|   |     | |       |     |     | `-DeclRefExpr 0x2500543ece0 <col:30> 'const unsigned char *' lvalue ParmVar 0x25005439198 'in' 'const unsigned char *'
|   |     | |       |     |     `-ImplicitCastExpr 0x2500543ed38 <col:33> 'unsigned int' <LValueToRValue>
|   |     | |       |     |       `-DeclRefExpr 0x2500543ed00 <col:33> 'unsigned int' lvalue Var 0x250054398c8 'n' 'unsigned int'
|   |     | |       |     `-ImplicitCastExpr 0x2500543ee48 <col:38, col:50> 'int' <IntegralCast>
|   |     | |       |       `-ImplicitCastExpr 0x2500543ee30 <col:38, col:50> 'unsigned char' <LValueToRValue>
|   |     | |       |         `-ArraySubscriptExpr 0x2500543ede0 <col:38, col:50> 'unsigned char' lvalue
|   |     | |       |           |-ImplicitCastExpr 0x2500543edb0 <col:38> 'unsigned char *':'unsigned char *' <LValueToRValue>
|   |     | |       |           | `-DeclRefExpr 0x2500543ed70 <col:38> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x250054394e0 'ecount_buf' 'unsigned char *':'unsigned char *'
|   |     | |       |           `-ImplicitCastExpr 0x2500543edc8 <col:49> 'unsigned int' <LValueToRValue>
|   |     | |       |             `-DeclRefExpr 0x2500543ed90 <col:49> 'unsigned int' lvalue Var 0x250054398c8 'n' 'unsigned int'
|   |     | |       `-UnaryOperator 0x2500543eed8 <line:112:21, col:23> 'unsigned int' prefix '++'
|   |     | |         `-DeclRefExpr 0x2500543eeb8 <col:23> 'unsigned int' lvalue Var 0x250054398c8 'n' 'unsigned int'
|   |     | |-BinaryOperator 0x2500543efe8 <line:115:13, col:20> 'unsigned int' '='
|   |     | | |-UnaryOperator 0x2500543ef98 <col:13, col:14> 'unsigned int' lvalue prefix '*' cannot overflow
|   |     | | | `-ImplicitCastExpr 0x2500543ef80 <col:14> 'unsigned int *' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x2500543ef60 <col:14> 'unsigned int *' lvalue ParmVar 0x25005439590 'num' 'unsigned int *'
|   |     | | `-ImplicitCastExpr 0x2500543efd0 <col:20> 'unsigned int' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x2500543efb0 <col:20> 'unsigned int' lvalue Var 0x250054398c8 'n' 'unsigned int'
|   |     | `-ReturnStmt 0x2500543f008 <line:116:13>
|   |     `-IntegerLiteral 0x2500543f050 <line:117:18> 'int' 0
|   |-WhileStmt 0x250054376f8 <line:121:5, line:129:5>
|   | |-BinaryOperator 0x250054370f0 <line:121:12, col:16> 'int' '<'
|   | | |-ImplicitCastExpr 0x250054370c0 <col:12> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2500543f0c8 <col:12> 'size_t':'unsigned long long' lvalue Var 0x25005439958 'l' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x250054370d8 <col:16> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2500543f100 <col:16> 'size_t':'unsigned long long' lvalue ParmVar 0x25005439290 'len' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x250054376c8 <col:21, line:129:5>
|   |   |-IfStmt 0x250054372b8 <line:122:9, line:125:9>
|   |   | |-BinaryOperator 0x25005437188 <line:122:13, col:18> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x25005437158 <col:13> 'unsigned int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x25005437110 <col:13> 'unsigned int' lvalue Var 0x250054398c8 'n' 'unsigned int'
|   |   | | `-ImplicitCastExpr 0x25005437170 <col:18> 'unsigned int' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x25005437130 <col:18> 'int' 0
|   |   | `-CompoundStmt 0x250054372a0 <col:21, line:125:9>
|   |   |   `-CallExpr 0x25005437260 <line:124:13, col:28> 'void'
|   |   |     |-ImplicitCastExpr 0x25005437248 <col:13> 'void (*)(unsigned char *)' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x25005437208 <col:13> 'void (unsigned char *)' Function 0x25005438918 'ctr128_inc' 'void (unsigned char *)'
|   |   |     `-ImplicitCastExpr 0x25005437288 <col:24> 'unsigned char *':'unsigned char *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x25005437228 <col:24> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x25005439410 'ivec' 'unsigned char *':'unsigned char *'
|   |   |-BinaryOperator 0x25005437518 <line:126:9, col:38> 'unsigned char' '='
|   |   | |-ArraySubscriptExpr 0x25005437340 <col:9, col:14> 'unsigned char' lvalue
|   |   | | |-ImplicitCastExpr 0x25005437310 <col:9> 'unsigned char *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x250054372d0 <col:9> 'unsigned char *' lvalue ParmVar 0x25005439218 'out' 'unsigned char *'
|   |   | | `-ImplicitCastExpr 0x25005437328 <col:13> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x250054372f0 <col:13> 'size_t':'unsigned long long' lvalue Var 0x25005439958 'l' 'size_t':'unsigned long long'
|   |   | `-ImplicitCastExpr 0x25005437500 <col:18, col:38> 'unsigned char' <IntegralCast>
|   |   |   `-BinaryOperator 0x250054374e0 <col:18, col:38> 'int' '^'
|   |   |     |-ImplicitCastExpr 0x25005437498 <col:18, col:22> 'int' <IntegralCast>
|   |   |     | `-ImplicitCastExpr 0x25005437480 <col:18, col:22> 'unsigned char' <LValueToRValue>
|   |   |     |   `-ArraySubscriptExpr 0x250054373d0 <col:18, col:22> 'const unsigned char' lvalue
|   |   |     |     |-ImplicitCastExpr 0x250054373a0 <col:18> 'const unsigned char *' <LValueToRValue>
|   |   |     |     | `-DeclRefExpr 0x25005437360 <col:18> 'const unsigned char *' lvalue ParmVar 0x25005439198 'in' 'const unsigned char *'
|   |   |     |     `-ImplicitCastExpr 0x250054373b8 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |     |       `-DeclRefExpr 0x25005437380 <col:21> 'size_t':'unsigned long long' lvalue Var 0x25005439958 'l' 'size_t':'unsigned long long'
|   |   |     `-ImplicitCastExpr 0x250054374c8 <col:26, col:38> 'int' <IntegralCast>
|   |   |       `-ImplicitCastExpr 0x250054374b0 <col:26, col:38> 'unsigned char' <LValueToRValue>
|   |   |         `-ArraySubscriptExpr 0x25005437460 <col:26, col:38> 'unsigned char' lvalue
|   |   |           |-ImplicitCastExpr 0x25005437430 <col:26> 'unsigned char *':'unsigned char *' <LValueToRValue>
|   |   |           | `-DeclRefExpr 0x250054373f0 <col:26> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x250054394e0 'ecount_buf' 'unsigned char *':'unsigned char *'
|   |   |           `-ImplicitCastExpr 0x25005437448 <col:37> 'unsigned int' <LValueToRValue>
|   |   |             `-DeclRefExpr 0x25005437410 <col:37> 'unsigned int' lvalue Var 0x250054398c8 'n' 'unsigned int'
|   |   |-UnaryOperator 0x25005437558 <line:127:9, col:11> 'size_t':'unsigned long long' prefix '++'
|   |   | `-DeclRefExpr 0x25005437538 <col:11> 'size_t':'unsigned long long' lvalue Var 0x25005439958 'l' 'size_t':'unsigned long long'
|   |   `-BinaryOperator 0x250054376a8 <line:128:9, col:23> 'unsigned int' '='
|   |     |-DeclRefExpr 0x25005437570 <col:9> 'unsigned int' lvalue Var 0x250054398c8 'n' 'unsigned int'
|   |     `-BinaryOperator 0x25005437688 <col:13, col:23> 'unsigned int' '%'
|   |       |-ParenExpr 0x25005437628 <col:13, col:19> 'unsigned int'
|   |       | `-BinaryOperator 0x25005437608 <col:14, col:18> 'unsigned int' '+'
|   |       |   |-ImplicitCastExpr 0x250054375d8 <col:14> 'unsigned int' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x25005437590 <col:14> 'unsigned int' lvalue Var 0x250054398c8 'n' 'unsigned int'
|   |       |   `-ImplicitCastExpr 0x250054375f0 <col:18> 'unsigned int' <IntegralCast>
|   |       |     `-IntegerLiteral 0x250054375b0 <col:18> 'int' 1
|   |       `-ImplicitCastExpr 0x25005437670 <col:23> 'unsigned int' <IntegralCast>
|   |         `-IntegerLiteral 0x25005437648 <col:23> 'int' 16
|   `-BinaryOperator 0x25005437798 <line:131:5, col:12> 'unsigned int' '='
|     |-UnaryOperator 0x25005437748 <col:5, col:6> 'unsigned int' lvalue prefix '*' cannot overflow
|     | `-ImplicitCastExpr 0x25005437730 <col:6> 'unsigned int *' <LValueToRValue>
|     |   `-DeclRefExpr 0x25005437710 <col:6> 'unsigned int *' lvalue ParmVar 0x25005439590 'num' 'unsigned int *'
|     `-ImplicitCastExpr 0x25005437780 <col:12> 'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x25005437760 <col:12> 'unsigned int' lvalue Var 0x250054398c8 'n' 'unsigned int'
|-FunctionDecl 0x250054378b8 <line:135:1, line:145:1> line:135:13 used ctr96_inc 'void (unsigned char *)' static
| |-ParmVarDecl 0x25005437810 <col:23, col:38> col:38 used counter 'unsigned char *'
| `-CompoundStmt 0x25005437ec8 <line:136:1, line:145:1>
|   |-DeclStmt 0x25005437b00 <line:137:5, col:22>
|   | |-VarDecl 0x25005437988 <col:5, col:13> col:9 used n 'u32':'unsigned int' cinit
|   | | `-ImplicitCastExpr 0x25005437a18 <col:13> 'u32':'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x250054379f0 <col:13> 'int' 12
|   | `-VarDecl 0x25005437a40 <col:5, col:21> col:17 used c 'u32':'unsigned int' cinit
|   |   `-ImplicitCastExpr 0x25005437ad0 <col:21> 'u32':'unsigned int' <IntegralCast>
|   |     `-IntegerLiteral 0x25005437aa8 <col:21> 'int' 1
|   `-DoStmt 0x25005437ea8 <line:139:5, line:144:15>
|     |-CompoundStmt 0x25005437e40 <line:139:8, line:144:5>
|     | |-UnaryOperator 0x25005437b50 <line:140:9, col:11> 'u32':'unsigned int' prefix '--'
|     | | `-DeclRefExpr 0x25005437b18 <col:11> 'u32':'unsigned int' lvalue Var 0x25005437988 'n' 'u32':'unsigned int'
|     | |-CompoundAssignOperator 0x25005437c60 <line:141:9, col:23> 'u32':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|     | | |-DeclRefExpr 0x25005437b68 <col:9> 'u32':'unsigned int' lvalue Var 0x25005437a40 'c' 'u32':'unsigned int'
|     | | `-ImplicitCastExpr 0x25005437c48 <col:14, col:23> 'unsigned int' <IntegralCast>
|     | |   `-ImplicitCastExpr 0x25005437c30 <col:14, col:23> 'unsigned char' <LValueToRValue>
|     | |     `-ArraySubscriptExpr 0x25005437c10 <col:14, col:23> 'unsigned char' lvalue
|     | |       |-ImplicitCastExpr 0x25005437be0 <col:14> 'unsigned char *' <LValueToRValue>
|     | |       | `-DeclRefExpr 0x25005437ba0 <col:14> 'unsigned char *' lvalue ParmVar 0x25005437810 'counter' 'unsigned char *'
|     | |       `-ImplicitCastExpr 0x25005437bf8 <col:22> 'u32':'unsigned int' <LValueToRValue>
|     | |         `-DeclRefExpr 0x25005437bc0 <col:22> 'u32':'unsigned int' lvalue Var 0x25005437988 'n' 'u32':'unsigned int'
|     | |-BinaryOperator 0x25005437d90 <line:142:9, col:26> 'unsigned char' '='
|     | | |-ArraySubscriptExpr 0x25005437d00 <col:9, col:18> 'unsigned char' lvalue
|     | | | |-ImplicitCastExpr 0x25005437cd0 <col:9> 'unsigned char *' <LValueToRValue>
|     | | | | `-DeclRefExpr 0x25005437c90 <col:9> 'unsigned char *' lvalue ParmVar 0x25005437810 'counter' 'unsigned char *'
|     | | | `-ImplicitCastExpr 0x25005437ce8 <col:17> 'u32':'unsigned int' <LValueToRValue>
|     | | |   `-DeclRefExpr 0x25005437cb0 <col:17> 'u32':'unsigned int' lvalue Var 0x25005437988 'n' 'u32':'unsigned int'
|     | | `-CStyleCastExpr 0x25005437d68 <col:22, col:26> 'u8':'unsigned char' <IntegralCast>
|     | |   `-ImplicitCastExpr 0x25005437d50 <col:26> 'u32':'unsigned int' <LValueToRValue> part_of_explicit_cast
|     | |     `-DeclRefExpr 0x25005437d20 <col:26> 'u32':'unsigned int' lvalue Var 0x25005437a40 'c' 'u32':'unsigned int'
|     | `-CompoundAssignOperator 0x25005437e10 <line:143:9, col:15> 'u32':'unsigned int' '>>=' ComputeLHSTy='u32':'unsigned int' ComputeResultTy='u32':'unsigned int'
|     |   |-DeclRefExpr 0x25005437db0 <col:9> 'u32':'unsigned int' lvalue Var 0x25005437a40 'c' 'u32':'unsigned int'
|     |   `-IntegerLiteral 0x25005437dd0 <col:15> 'int' 8
|     `-ImplicitCastExpr 0x25005437e90 <line:144:14> 'u32':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x25005437e70 <col:14> 'u32':'unsigned int' lvalue Var 0x25005437988 'n' 'u32':'unsigned int'
|-FunctionDecl 0x25005445328 <line:147:1, line:209:1> line:147:6 invalid CRYPTO_ctr128_encrypt_ctr32 'void (const unsigned char *, unsigned char *, size_t, const void *, unsigned char *, unsigned char *, unsigned int *, int)'
| |-ParmVarDecl 0x25005437f00 <col:34, col:55> col:55 used in 'const unsigned char *'
| |-ParmVarDecl 0x25005437f80 <col:59, col:74> col:74 used out 'unsigned char *'
| |-ParmVarDecl 0x25005437ff8 <line:148:34, col:41> col:41 used len 'size_t':'unsigned long long'
| |-ParmVarDecl 0x25005444fc0 <col:46, col:58> col:58 used key 'const void *'
| |-ParmVarDecl 0x25005445090 <line:149:34, col:55> col:48 used ivec 'unsigned char *':'unsigned char *'
| |-ParmVarDecl 0x25005445160 <line:150:34, col:61> col:48 used ecount_buf 'unsigned char *':'unsigned char *'
| |-ParmVarDecl 0x250054451e0 <line:151:34, col:48> col:48 used num 'unsigned int *'
| |-ParmVarDecl 0x25005445260 <col:53, col:62> col:62 invalid func 'int'
| `-CompoundStmt 0x25005446908 <line:152:1, line:209:1>
|   |-DeclStmt 0x25005445538 <line:153:5, col:26>
|   | |-VarDecl 0x25005445438 <col:5, col:18> col:18 used n 'unsigned int'
|   | `-VarDecl 0x250054454b8 <col:5, col:21> col:21 used ctr32 'unsigned int'
|   |-BinaryOperator 0x25005445608 <line:155:5, col:10> 'unsigned int' '='
|   | |-DeclRefExpr 0x25005445550 <col:5> 'unsigned int' lvalue Var 0x25005445438 'n' 'unsigned int'
|   | `-ImplicitCastExpr 0x250054455f0 <col:9, col:10> 'unsigned int' <LValueToRValue>
|   |   `-UnaryOperator 0x250054455d8 <col:9, col:10> 'unsigned int' lvalue prefix '*' cannot overflow
|   |     `-ImplicitCastExpr 0x250054455c0 <col:10> 'unsigned int *' <LValueToRValue>
|   |       `-DeclRefExpr 0x25005445588 <col:10> 'unsigned int *' lvalue ParmVar 0x250054451e0 'num' 'unsigned int *'
|   |-WhileStmt 0x25005445af8 <line:157:5, line:161:5>
|   | |-BinaryOperator 0x250054456b0 <line:157:12, col:17> 'int' '&&'
|   | | |-ImplicitCastExpr 0x25005445680 <col:12> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x25005445628 <col:12> 'unsigned int' lvalue Var 0x25005445438 'n' 'unsigned int'
|   | | `-ImplicitCastExpr 0x25005445698 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x25005445648 <col:17> 'size_t':'unsigned long long' lvalue ParmVar 0x25005437ff8 'len' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x25005445ad0 <col:22, line:161:5>
|   |   |-BinaryOperator 0x25005445920 <line:158:9, col:42> 'unsigned char' '='
|   |   | |-UnaryOperator 0x25005445740 <col:9, col:16> 'unsigned char' lvalue prefix '*' cannot overflow
|   |   | | `-ParenExpr 0x25005445720 <col:10, col:16> 'unsigned char *'
|   |   | |   `-UnaryOperator 0x25005445708 <col:11, col:14> 'unsigned char *' postfix '++'
|   |   | |     `-DeclRefExpr 0x250054456d0 <col:11> 'unsigned char *' lvalue ParmVar 0x25005437f80 'out' 'unsigned char *'
|   |   | `-ImplicitCastExpr 0x25005445908 <col:20, col:42> 'unsigned char' <IntegralCast>
|   |   |   `-BinaryOperator 0x250054458e8 <col:20, col:42> 'int' '^'
|   |   |     |-ImplicitCastExpr 0x250054458a0 <col:20, col:26> 'int' <IntegralCast>
|   |   |     | `-ImplicitCastExpr 0x25005445888 <col:20, col:26> 'unsigned char' <LValueToRValue>
|   |   |     |   `-UnaryOperator 0x250054457c8 <col:20, col:26> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   |     |     `-ParenExpr 0x250054457a8 <col:21, col:26> 'const unsigned char *'
|   |   |     |       `-UnaryOperator 0x25005445790 <col:22, col:24> 'const unsigned char *' postfix '++'
|   |   |     |         `-DeclRefExpr 0x25005445758 <col:22> 'const unsigned char *' lvalue ParmVar 0x25005437f00 'in' 'const unsigned char *'
|   |   |     `-ImplicitCastExpr 0x250054458d0 <col:30, col:42> 'int' <IntegralCast>
|   |   |       `-ImplicitCastExpr 0x250054458b8 <col:30, col:42> 'unsigned char' <LValueToRValue>
|   |   |         `-ArraySubscriptExpr 0x25005445868 <col:30, col:42> 'unsigned char' lvalue
|   |   |           |-ImplicitCastExpr 0x25005445838 <col:30> 'unsigned char *':'unsigned char *' <LValueToRValue>
|   |   |           | `-DeclRefExpr 0x250054457e0 <col:30> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x25005445160 'ecount_buf' 'unsigned char *':'unsigned char *'
|   |   |           `-ImplicitCastExpr 0x25005445850 <col:41> 'unsigned int' <LValueToRValue>
|   |   |             `-DeclRefExpr 0x25005445818 <col:41> 'unsigned int' lvalue Var 0x25005445438 'n' 'unsigned int'
|   |   |-UnaryOperator 0x25005445960 <line:159:9, col:11> 'size_t':'unsigned long long' prefix '--'
|   |   | `-DeclRefExpr 0x25005445940 <col:11> 'size_t':'unsigned long long' lvalue ParmVar 0x25005437ff8 'len' 'size_t':'unsigned long long'
|   |   `-BinaryOperator 0x25005445ab0 <line:160:9, col:23> 'unsigned int' '='
|   |     |-DeclRefExpr 0x25005445978 <col:9> 'unsigned int' lvalue Var 0x25005445438 'n' 'unsigned int'
|   |     `-BinaryOperator 0x25005445a90 <col:13, col:23> 'unsigned int' '%'
|   |       |-ParenExpr 0x25005445a30 <col:13, col:19> 'unsigned int'
|   |       | `-BinaryOperator 0x25005445a10 <col:14, col:18> 'unsigned int' '+'
|   |       |   |-ImplicitCastExpr 0x250054459e0 <col:14> 'unsigned int' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x25005445998 <col:14> 'unsigned int' lvalue Var 0x25005445438 'n' 'unsigned int'
|   |       |   `-ImplicitCastExpr 0x250054459f8 <col:18> 'unsigned int' <IntegralCast>
|   |       |     `-IntegerLiteral 0x250054459b8 <col:18> 'int' 1
|   |       `-ImplicitCastExpr 0x25005445a78 <col:23> 'unsigned int' <IntegralCast>
|   |         `-IntegerLiteral 0x25005445a50 <col:23> 'int' 16
|   |-BinaryOperator 0x25005444008 <line:163:5, .//openssl//file_jk/before\crypto\modes/modes_lcl.h:78:49> 'unsigned int' '='
|   | |-DeclRefExpr 0x25005445b10 <.//openssl//file_jk/before\crypto\modes\ctr128.c:163:5> 'unsigned int' lvalue Var 0x250054454b8 'ctr32' 'unsigned int'
|   | `-ImplicitCastExpr 0x25005443ff0 <.//openssl//file_jk/before\crypto\modes/modes_lcl.h:78:25, col:49> 'unsigned int' <IntegralCast>
|   |   `-CallExpr 0x25005443fb0 <col:25, col:49> 'unsigned long'
|   |     |-ImplicitCastExpr 0x25005445f88 <col:25> 'unsigned long (*)(unsigned long)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x25005445d10 <col:25> 'unsigned long (unsigned long)' Function 0x25005445b80 '_byteswap_ulong' 'unsigned long (unsigned long)'
|   |     `-ImplicitCastExpr 0x25005443fd8 <col:41, col:48> 'unsigned long' <IntegralCast>
|   |       `-CStyleCastExpr 0x25005445f30 <col:41, col:48> 'u32':'unsigned int' <NoOp>
|   |         `-ImplicitCastExpr 0x25005445f18 <col:46, col:48> 'u32':'unsigned int' <LValueToRValue> part_of_explicit_cast
|   |           `-ParenExpr 0x25005445ef8 <col:46, col:48> 'const u32':'const unsigned int' lvalue
|   |             `-UnaryOperator 0x25005445eb0 <line:88:33, col:49> 'const u32':'const unsigned int' lvalue prefix '*' cannot overflow
|   |               `-CStyleCastExpr 0x25005445e88 <col:34, col:49> 'const u32 *' <BitCast>
|   |                 `-ParenExpr 0x25005445e68 <col:47, col:49> 'unsigned char *':'unsigned char *'
|   |                   `-BinaryOperator 0x25005445dc0 <.//openssl//file_jk/before\crypto\modes\ctr128.c:163:20, col:27> 'unsigned char *':'unsigned char *' '+'
|   |                     |-ImplicitCastExpr 0x25005445da8 <col:20> 'unsigned char *':'unsigned char *' <LValueToRValue>
|   |                     | `-DeclRefExpr 0x25005445d48 <col:20> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x25005445090 'ivec' 'unsigned char *':'unsigned char *'
|   |                     `-IntegerLiteral 0x25005445d80 <col:27> 'int' 12
|   |-WhileStmt 0x25005444e88 <line:164:5, line:194:5>
|   | |-BinaryOperator 0x250054440a0 <line:164:12, col:19> 'int' '>='
|   | | |-ImplicitCastExpr 0x25005444070 <col:12> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x25005444028 <col:12> 'size_t':'unsigned long long' lvalue ParmVar 0x25005437ff8 'len' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x25005444088 <col:19> 'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x25005444048 <col:19> 'int' 16
|   | `-CompoundStmt 0x25005444e28 <col:23, line:194:5>
|   |   |-DeclStmt 0x250054441d0 <line:165:9, col:33>
|   |   | `-VarDecl 0x250054440d0 <col:9, col:31> col:16 used blocks 'size_t':'unsigned long long' cinit
|   |   |   `-BinaryOperator 0x250054441b0 <col:25, col:31> 'unsigned long long' '/'
|   |   |     |-ImplicitCastExpr 0x25005444180 <col:25> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x25005444138 <col:25> 'size_t':'unsigned long long' lvalue ParmVar 0x25005437ff8 'len' 'size_t':'unsigned long long'
|   |   |     `-ImplicitCastExpr 0x25005444198 <col:31> 'unsigned long long' <IntegralCast>
|   |   |       `-IntegerLiteral 0x25005444158 <col:31> 'int' 16
|   |   |-IfStmt 0x25005444490 <line:171:9, line:172:31>
|   |   | |-BinaryOperator 0x25005444388 <line:171:13, col:72> 'int' '&&'
|   |   | | |-BinaryOperator 0x25005444250 <col:13, col:49> 'int' '>'
|   |   | | | |-UnaryExprOrTypeTraitExpr 0x250054441f8 <col:13, col:26> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|   |   | | | `-UnaryExprOrTypeTraitExpr 0x25005444230 <col:30, col:49> 'unsigned long long' sizeof 'unsigned int'
|   |   | | `-BinaryOperator 0x25005444368 <col:54, col:72> 'int' '>'
|   |   | |   |-ImplicitCastExpr 0x25005444338 <col:54> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | |   | `-DeclRefExpr 0x25005444270 <col:54> 'size_t':'unsigned long long' lvalue Var 0x250054440d0 'blocks' 'size_t':'unsigned long long'
|   |   | |   `-ImplicitCastExpr 0x25005444350 <col:63, col:72> 'unsigned long long' <IntegralCast>
|   |   | |     `-ParenExpr 0x25005444318 <col:63, col:72> 'unsigned int'
|   |   | |       `-BinaryOperator 0x250054442f8 <col:64, col:70> 'unsigned int' '<<'
|   |   | |         |-IntegerLiteral 0x250054442a8 <col:64> 'unsigned int' 1
|   |   | |         `-IntegerLiteral 0x250054442d0 <col:70> 'int' 28
|   |   | `-BinaryOperator 0x25005444470 <line:172:13, col:31> 'size_t':'unsigned long long' '='
|   |   |   |-DeclRefExpr 0x250054443a8 <col:13> 'size_t':'unsigned long long' lvalue Var 0x250054440d0 'blocks' 'size_t':'unsigned long long'
|   |   |   `-ImplicitCastExpr 0x25005444458 <col:22, col:31> 'size_t':'unsigned long long' <IntegralCast>
|   |   |     `-ParenExpr 0x25005444438 <col:22, col:31> 'unsigned int'
|   |   |       `-BinaryOperator 0x25005444418 <col:23, col:29> 'unsigned int' '<<'
|   |   |         |-IntegerLiteral 0x250054443c8 <col:23> 'unsigned int' 1
|   |   |         `-IntegerLiteral 0x250054443f0 <col:29> 'int' 28
|   |   |-CompoundAssignOperator 0x25005444538 <line:179:9, col:23> 'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |   | |-DeclRefExpr 0x250054444a8 <col:9> 'unsigned int' lvalue Var 0x250054454b8 'ctr32' 'unsigned int'
|   |   | `-CStyleCastExpr 0x25005444510 <col:18, col:23> 'u32':'unsigned int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x250054444f8 <col:23> 'size_t':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   |   |     `-DeclRefExpr 0x250054444c8 <col:23> 'size_t':'unsigned long long' lvalue Var 0x250054440d0 'blocks' 'size_t':'unsigned long long'
|   |   |-IfStmt 0x25005444750 <line:180:9, line:183:9>
|   |   | |-BinaryOperator 0x250054445f0 <line:180:13, col:21> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x250054445d8 <col:13> 'unsigned long long' <IntegralCast>
|   |   | | | `-ImplicitCastExpr 0x250054445a8 <col:13> 'unsigned int' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x25005444568 <col:13> 'unsigned int' lvalue Var 0x250054454b8 'ctr32' 'unsigned int'
|   |   | | `-ImplicitCastExpr 0x250054445c0 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x25005444588 <col:21> 'size_t':'unsigned long long' lvalue Var 0x250054440d0 'blocks' 'size_t':'unsigned long long'
|   |   | `-CompoundStmt 0x25005444730 <col:29, line:183:9>
|   |   |   |-CompoundAssignOperator 0x25005444680 <line:181:13, col:23> 'size_t':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |   |   | |-DeclRefExpr 0x25005444610 <col:13> 'size_t':'unsigned long long' lvalue Var 0x250054440d0 'blocks' 'size_t':'unsigned long long'
|   |   |   | `-ImplicitCastExpr 0x25005444668 <col:23> 'unsigned long long' <IntegralCast>
|   |   |   |   `-ImplicitCastExpr 0x25005444650 <col:23> 'unsigned int' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x25005444630 <col:23> 'unsigned int' lvalue Var 0x250054454b8 'ctr32' 'unsigned int'
|   |   |   `-BinaryOperator 0x25005444710 <line:182:13, col:21> 'unsigned int' '='
|   |   |     |-DeclRefExpr 0x250054446b0 <col:13> 'unsigned int' lvalue Var 0x250054454b8 'ctr32' 'unsigned int'
|   |   |     `-ImplicitCastExpr 0x250054446f8 <col:21> 'unsigned int' <IntegralCast>
|   |   |       `-IntegerLiteral 0x250054446d0 <col:21> 'int' 0
|   |   |-BinaryOperator 0x25005444a98 <.//openssl//file_jk/before\crypto\modes/modes_lcl.h:89:26, line:78:49> 'u32':'unsigned int' '='
|   |   | |-UnaryOperator 0x25005444940 <line:89:26, col:36> 'u32':'unsigned int' lvalue prefix '*' cannot overflow
|   |   | | `-CStyleCastExpr 0x25005444918 <col:27, col:36> 'u32 *' <BitCast>
|   |   | |   `-ParenExpr 0x250054448f8 <col:34, col:36> 'unsigned char *':'unsigned char *'
|   |   | |     `-BinaryOperator 0x25005444880 <.//openssl//file_jk/before\crypto\modes\ctr128.c:186:16, col:23> 'unsigned char *':'unsigned char *' '+'
|   |   | |       |-ImplicitCastExpr 0x25005444868 <col:16> 'unsigned char *':'unsigned char *' <LValueToRValue>
|   |   | |       | `-DeclRefExpr 0x25005444820 <col:16> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x25005445090 'ivec' 'unsigned char *':'unsigned char *'
|   |   | |       `-IntegerLiteral 0x25005444840 <col:23> 'int' 12
|   |   | `-ImplicitCastExpr 0x25005444a80 <.//openssl//file_jk/before\crypto\modes/modes_lcl.h:78:25, col:49> 'u32':'unsigned int' <IntegralCast>
|   |   |   `-CallExpr 0x25005444a40 <col:25, col:49> 'unsigned long'
|   |   |     |-ImplicitCastExpr 0x25005444a28 <col:25> 'unsigned long (*)(unsigned long)' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x25005444958 <col:25> 'unsigned long (unsigned long)' Function 0x25005445b80 '_byteswap_ulong' 'unsigned long (unsigned long)'
|   |   |     `-ImplicitCastExpr 0x25005444a68 <col:41, col:48> 'unsigned long' <IntegralCast>
|   |   |       `-CStyleCastExpr 0x25005444a00 <col:41, col:48> 'u32':'unsigned int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x250054449e8 <col:46, col:48> 'unsigned int' <LValueToRValue> part_of_explicit_cast
|   |   |           `-ParenExpr 0x250054449c8 <col:46, col:48> 'unsigned int' lvalue
|   |   |             `-DeclRefExpr 0x25005444978 <.//openssl//file_jk/before\crypto\modes\ctr128.c:186:27> 'unsigned int' lvalue Var 0x250054454b8 'ctr32' 'unsigned int'
|   |   |-IfStmt 0x25005444be8 <line:188:9, line:189:27>
|   |   | |-BinaryOperator 0x25005444b30 <line:188:13, col:22> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x25005444b00 <col:13> 'unsigned int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x25005444ab8 <col:13> 'unsigned int' lvalue Var 0x250054454b8 'ctr32' 'unsigned int'
|   |   | | `-ImplicitCastExpr 0x25005444b18 <col:22> 'unsigned int' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x25005444ad8 <col:22> 'int' 0
|   |   | `-CallExpr 0x25005444ba8 <line:189:13, col:27> 'void'
|   |   |   |-ImplicitCastExpr 0x25005444b90 <col:13> 'void (*)(unsigned char *)' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x25005444b50 <col:13> 'void (unsigned char *)' Function 0x250054378b8 'ctr96_inc' 'void (unsigned char *)'
|   |   |   `-ImplicitCastExpr 0x25005444bd0 <col:23> 'unsigned char *':'unsigned char *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x25005444b70 <col:23> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x25005445090 'ivec' 'unsigned char *':'unsigned char *'
|   |   |-CompoundAssignOperator 0x25005444c60 <line:190:9, col:19> 'size_t':'unsigned long long' '*=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |   | |-DeclRefExpr 0x25005444c00 <col:9> 'size_t':'unsigned long long' lvalue Var 0x250054440d0 'blocks' 'size_t':'unsigned long long'
|   |   | `-ImplicitCastExpr 0x25005444c48 <col:19> 'unsigned long long' <IntegralCast>
|   |   |   `-IntegerLiteral 0x25005444c20 <col:19> 'int' 16
|   |   |-CompoundAssignOperator 0x25005444ce8 <line:191:9, col:16> 'size_t':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |   | |-DeclRefExpr 0x25005444c90 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x25005437ff8 'len' 'size_t':'unsigned long long'
|   |   | `-ImplicitCastExpr 0x25005444cd0 <col:16> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x25005444cb0 <col:16> 'size_t':'unsigned long long' lvalue Var 0x250054440d0 'blocks' 'size_t':'unsigned long long'
|   |   |-CompoundAssignOperator 0x25005444d70 <line:192:9, col:16> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   |   | |-DeclRefExpr 0x25005444d18 <col:9> 'unsigned char *' lvalue ParmVar 0x25005437f80 'out' 'unsigned char *'
|   |   | `-ImplicitCastExpr 0x25005444d58 <col:16> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x25005444d38 <col:16> 'size_t':'unsigned long long' lvalue Var 0x250054440d0 'blocks' 'size_t':'unsigned long long'
|   |   `-CompoundAssignOperator 0x25005444df8 <line:193:9, col:15> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   |     |-DeclRefExpr 0x25005444da0 <col:9> 'const unsigned char *' lvalue ParmVar 0x25005437f00 'in' 'const unsigned char *'
|   |     `-ImplicitCastExpr 0x25005444de0 <col:15> 'size_t':'unsigned long long' <LValueToRValue>
|   |       `-DeclRefExpr 0x25005444dc0 <col:15> 'size_t':'unsigned long long' lvalue Var 0x250054440d0 'blocks' 'size_t':'unsigned long long'
|   |-IfStmt 0x25005446848 <line:195:5, line:206:5>
|   | |-ImplicitCastExpr 0x25005444ec0 <line:195:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | `-DeclRefExpr 0x25005444ea0 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x25005437ff8 'len' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x25005446810 <col:14, line:206:5>
|   |   |-CallExpr 0x25005445fe8 <line:196:9, col:33> 'void *'
|   |   | |-ImplicitCastExpr 0x25005445fd0 <col:9> 'void *(*)(void *, int, unsigned long long)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x25005444ed8 <col:9> 'void *(void *, int, unsigned long long)' Function 0x250053ca2e8 'memset' 'void *(void *, int, unsigned long long)'
|   |   | |-ImplicitCastExpr 0x25005446038 <col:16> 'void *' <BitCast>
|   |   | | `-ImplicitCastExpr 0x25005446020 <col:16> 'unsigned char *':'unsigned char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x25005444ef8 <col:16> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x25005445160 'ecount_buf' 'unsigned char *':'unsigned char *'
|   |   | |-IntegerLiteral 0x25005444f18 <col:28> 'int' 0
|   |   | `-ImplicitCastExpr 0x25005446050 <col:31> 'unsigned long long' <IntegralCast>
|   |   |   `-IntegerLiteral 0x25005444f40 <col:31> 'int' 16
|   |   |-UnaryOperator 0x25005446130 <line:198:9, col:11> 'unsigned int' prefix '++'
|   |   | `-DeclRefExpr 0x25005446110 <col:11> 'unsigned int' lvalue Var 0x250054454b8 'ctr32' 'unsigned int'
|   |   |-BinaryOperator 0x25005446398 <.//openssl//file_jk/before\crypto\modes/modes_lcl.h:89:26, line:78:49> 'u32':'unsigned int' '='
|   |   | |-UnaryOperator 0x25005446240 <line:89:26, col:36> 'u32':'unsigned int' lvalue prefix '*' cannot overflow
|   |   | | `-CStyleCastExpr 0x25005446218 <col:27, col:36> 'u32 *' <BitCast>
|   |   | |   `-ParenExpr 0x250054461f8 <col:34, col:36> 'unsigned char *':'unsigned char *'
|   |   | |     `-BinaryOperator 0x250054461a8 <.//openssl//file_jk/before\crypto\modes\ctr128.c:199:16, col:23> 'unsigned char *':'unsigned char *' '+'
|   |   | |       |-ImplicitCastExpr 0x25005446190 <col:16> 'unsigned char *':'unsigned char *' <LValueToRValue>
|   |   | |       | `-DeclRefExpr 0x25005446148 <col:16> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x25005445090 'ivec' 'unsigned char *':'unsigned char *'
|   |   | |       `-IntegerLiteral 0x25005446168 <col:23> 'int' 12
|   |   | `-ImplicitCastExpr 0x25005446380 <.//openssl//file_jk/before\crypto\modes/modes_lcl.h:78:25, col:49> 'u32':'unsigned int' <IntegralCast>
|   |   |   `-CallExpr 0x25005446340 <col:25, col:49> 'unsigned long'
|   |   |     |-ImplicitCastExpr 0x25005446328 <col:25> 'unsigned long (*)(unsigned long)' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x25005446258 <col:25> 'unsigned long (unsigned long)' Function 0x25005445b80 '_byteswap_ulong' 'unsigned long (unsigned long)'
|   |   |     `-ImplicitCastExpr 0x25005446368 <col:41, col:48> 'unsigned long' <IntegralCast>
|   |   |       `-CStyleCastExpr 0x25005446300 <col:41, col:48> 'u32':'unsigned int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x250054462e8 <col:46, col:48> 'unsigned int' <LValueToRValue> part_of_explicit_cast
|   |   |           `-ParenExpr 0x250054462c8 <col:46, col:48> 'unsigned int' lvalue
|   |   |             `-DeclRefExpr 0x25005446278 <.//openssl//file_jk/before\crypto\modes\ctr128.c:199:27> 'unsigned int' lvalue Var 0x250054454b8 'ctr32' 'unsigned int'
|   |   |-IfStmt 0x250054464e8 <line:200:9, line:201:27>
|   |   | |-BinaryOperator 0x25005446430 <line:200:13, col:22> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x25005446400 <col:13> 'unsigned int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x250054463b8 <col:13> 'unsigned int' lvalue Var 0x250054454b8 'ctr32' 'unsigned int'
|   |   | | `-ImplicitCastExpr 0x25005446418 <col:22> 'unsigned int' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x250054463d8 <col:22> 'int' 0
|   |   | `-CallExpr 0x250054464a8 <line:201:13, col:27> 'void'
|   |   |   |-ImplicitCastExpr 0x25005446490 <col:13> 'void (*)(unsigned char *)' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x25005446450 <col:13> 'void (unsigned char *)' Function 0x250054378b8 'ctr96_inc' 'void (unsigned char *)'
|   |   |   `-ImplicitCastExpr 0x250054464d0 <col:23> 'unsigned char *':'unsigned char *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x25005446470 <col:23> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x25005445090 'ivec' 'unsigned char *':'unsigned char *'
|   |   `-WhileStmt 0x250054467f8 <line:202:9, line:205:9>
|   |     |-UnaryOperator 0x25005446520 <line:202:16, col:19> 'size_t':'unsigned long long' postfix '--'
|   |     | `-DeclRefExpr 0x25005446500 <col:16> 'size_t':'unsigned long long' lvalue ParmVar 0x25005437ff8 'len' 'size_t':'unsigned long long'
|   |     `-CompoundStmt 0x250054467d8 <col:23, line:205:9>
|   |       |-BinaryOperator 0x25005446780 <line:203:13, col:42> 'unsigned char' '='
|   |       | |-ArraySubscriptExpr 0x250054465a8 <col:13, col:18> 'unsigned char' lvalue
|   |       | | |-ImplicitCastExpr 0x25005446578 <col:13> 'unsigned char *' <LValueToRValue>
|   |       | | | `-DeclRefExpr 0x25005446538 <col:13> 'unsigned char *' lvalue ParmVar 0x25005437f80 'out' 'unsigned char *'
|   |       | | `-ImplicitCastExpr 0x25005446590 <col:17> 'unsigned int' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x25005446558 <col:17> 'unsigned int' lvalue Var 0x25005445438 'n' 'unsigned int'
|   |       | `-ImplicitCastExpr 0x25005446768 <col:22, col:42> 'unsigned char' <IntegralCast>
|   |       |   `-BinaryOperator 0x25005446748 <col:22, col:42> 'int' '^'
|   |       |     |-ImplicitCastExpr 0x25005446700 <col:22, col:26> 'int' <IntegralCast>
|   |       |     | `-ImplicitCastExpr 0x250054466e8 <col:22, col:26> 'unsigned char' <LValueToRValue>
|   |       |     |   `-ArraySubscriptExpr 0x25005446638 <col:22, col:26> 'const unsigned char' lvalue
|   |       |     |     |-ImplicitCastExpr 0x25005446608 <col:22> 'const unsigned char *' <LValueToRValue>
|   |       |     |     | `-DeclRefExpr 0x250054465c8 <col:22> 'const unsigned char *' lvalue ParmVar 0x25005437f00 'in' 'const unsigned char *'
|   |       |     |     `-ImplicitCastExpr 0x25005446620 <col:25> 'unsigned int' <LValueToRValue>
|   |       |     |       `-DeclRefExpr 0x250054465e8 <col:25> 'unsigned int' lvalue Var 0x25005445438 'n' 'unsigned int'
|   |       |     `-ImplicitCastExpr 0x25005446730 <col:30, col:42> 'int' <IntegralCast>
|   |       |       `-ImplicitCastExpr 0x25005446718 <col:30, col:42> 'unsigned char' <LValueToRValue>
|   |       |         `-ArraySubscriptExpr 0x250054466c8 <col:30, col:42> 'unsigned char' lvalue
|   |       |           |-ImplicitCastExpr 0x25005446698 <col:30> 'unsigned char *':'unsigned char *' <LValueToRValue>
|   |       |           | `-DeclRefExpr 0x25005446658 <col:30> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x25005445160 'ecount_buf' 'unsigned char *':'unsigned char *'
|   |       |           `-ImplicitCastExpr 0x250054466b0 <col:41> 'unsigned int' <LValueToRValue>
|   |       |             `-DeclRefExpr 0x25005446678 <col:41> 'unsigned int' lvalue Var 0x25005445438 'n' 'unsigned int'
|   |       `-UnaryOperator 0x250054467c0 <line:204:13, col:15> 'unsigned int' prefix '++'
|   |         `-DeclRefExpr 0x250054467a0 <col:15> 'unsigned int' lvalue Var 0x25005445438 'n' 'unsigned int'
|   `-BinaryOperator 0x250054468e8 <line:208:5, col:12> 'unsigned int' '='
|     |-UnaryOperator 0x25005446898 <col:5, col:6> 'unsigned int' lvalue prefix '*' cannot overflow
|     | `-ImplicitCastExpr 0x25005446880 <col:6> 'unsigned int *' <LValueToRValue>
|     |   `-DeclRefExpr 0x25005446860 <col:6> 'unsigned int *' lvalue ParmVar 0x250054451e0 'num' 'unsigned int *'
|     `-ImplicitCastExpr 0x250054468d0 <col:12> 'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x250054468b0 <col:12> 'unsigned int' lvalue Var 0x25005445438 'n' 'unsigned int'
`-FunctionDecl 0x25005445b80 <.//openssl//file_jk/before\crypto\modes/modes_lcl.h:78:25> col:25 implicit used _byteswap_ulong 'unsigned long (unsigned long)' extern
  |-ParmVarDecl 0x25005445c20 <<invalid sloc>> <invalid sloc> 'unsigned long'
  |-NoThrowAttr 0x25005445c90 <col:25> Implicit
  `-ConstAttr 0x25005445ce8 <col:25> Implicit
