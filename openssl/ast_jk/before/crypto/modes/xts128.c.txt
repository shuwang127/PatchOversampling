TranslationUnitDecl 0x1ba21b66858 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1ba21b670f0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1ba21b66df0 '__int128'
|-TypedefDecl 0x1ba21b67160 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1ba21b66e10 'unsigned __int128'
|-TypedefDecl 0x1ba21b67498 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1ba21b67250 'struct __NSConstantString_tag'
|   `-Record 0x1ba21b671b8 '__NSConstantString_tag'
|-TypedefDecl 0x1ba21b67508 <<invalid sloc>> <invalid sloc> implicit referenced size_t 'unsigned long long'
| `-BuiltinType 0x1ba21b66a30 'unsigned long long'
|-TypedefDecl 0x1ba21b675a0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1ba21b67560 'char *'
|   `-BuiltinType 0x1ba21b668f0 'char'
|-TypedefDecl 0x1ba21b67610 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1ba21b67560 'char *'
|   `-BuiltinType 0x1ba21b668f0 'char'
|-TypedefDecl 0x1ba21b67680 <.//openssl//file_jk/before\crypto\modes/modes_lcl.h:13:1, col:17> col:17 i64 'long long'
| `-BuiltinType 0x1ba21b66990 'long long'
|-TypedefDecl 0x1ba21b676f0 <line:14:1, col:26> col:26 referenced u64 'unsigned long long'
| `-BuiltinType 0x1ba21b66a30 'unsigned long long'
|-TypedefDecl 0x1ba21b67760 <line:26:1, col:22> col:22 referenced u32 'unsigned int'
| `-BuiltinType 0x1ba21b669f0 'unsigned int'
|-TypedefDecl 0x1ba21b677d0 <line:27:1, col:23> col:23 referenced u8 'unsigned char'
| `-BuiltinType 0x1ba21b669b0 'unsigned char'
|-RecordDecl 0x1ba23569090 <line:94:32, line:96:1> line:94:32 struct definition
| |-FieldDecl 0x1ba23569180 <line:95:5, col:9> col:9 hi 'u64':'unsigned long long'
| `-FieldDecl 0x1ba235691e8 <col:5, col:13> col:13 lo 'u64':'unsigned long long'
|-TypedefDecl 0x1ba23569298 <line:94:24, line:96:3> col:3 referenced u128 'struct u128':'u128'
| `-ElaboratedType 0x1ba23569240 'struct u128' sugar
|   `-RecordType 0x1ba23569130 'u128'
|     `-Record 0x1ba23569090 ''
|-RecordDecl 0x1ba23569308 <line:107:1, line:130:1> line:107:8 invalid struct gcm128_context definition
| |-RecordDecl 0x1ba235693c0 <line:109:5, line:114:5> line:109:5 union definition
| | |-FieldDecl 0x1ba23569558 <line:110:9, col:16> col:13 u 'u64 [2]'
| | |-FieldDecl 0x1ba235696a8 <line:111:9, col:16> col:13 d 'u32 [4]'
| | |-FieldDecl 0x1ba235697f8 <line:112:9, col:16> col:12 c 'u8 [16]'
| | `-FieldDecl 0x1ba23569978 <line:113:9, col:37> col:16 t 'size_t [2]'
| |-FieldDecl 0x1ba23569a28 <line:109:5, line:114:7> col:7 Yi 'union (anonymous union at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x1ba23569aa0 <line:109:5, line:114:11> col:11 EKi 'union (anonymous union at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x1ba23569b18 <line:109:5, line:114:16> col:16 EK0 'union (anonymous union at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x1ba23569b90 <line:109:5, line:114:21> col:21 len 'union (anonymous union at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x1ba23569c08 <line:109:5, line:114:26> col:26 Xi 'union (anonymous union at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x1ba23569c80 <line:109:5, line:114:30> col:30 H 'union (anonymous union at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x1ba23569e38 <line:122:5, col:19> col:10 Htable 'u128 [16]'
| |-FieldDecl 0x1ba235733a8 <line:123:5, col:52> col:12 gmult 'void (*)(u64 *, const u128 *)'
| |-FieldDecl 0x1ba235738b8 <line:124:5, line:125:30> line:124:12 ghash 'void (*)(u64 *, const u128 *, const u8 *, size_t)'
| |-FieldDecl 0x1ba23573928 <line:127:5, col:18> col:18 mres 'unsigned int'
| |-FieldDecl 0x1ba23573998 <col:5, col:24> col:24 ares 'unsigned int'
| |-FieldDecl 0x1ba23573a08 <line:128:5, col:16> col:16 invalid block 'int'
| `-FieldDecl 0x1ba23573a78 <line:129:5, col:11> col:11 key 'void *'
|-RecordDecl 0x1ba23573b38 <line:132:1, line:135:1> line:132:8 invalid struct xts128_context definition
| |-FieldDecl 0x1ba23573c08 <line:133:5, col:11> col:11 key1 'void *'
| |-FieldDecl 0x1ba23573c78 <col:5, col:18> col:18 key2 'void *'
| |-FieldDecl 0x1ba23573ce8 <line:134:5, col:16> col:16 invalid block1 'int'
| `-FieldDecl 0x1ba23573d58 <col:5, col:24> col:24 invalid block2 'int'
|-RecordDecl 0x1ba23573db0 <line:137:1, line:145:1> line:137:8 invalid struct ccm128_context definition
| |-RecordDecl 0x1ba23573e70 <line:138:5, line:141:5> line:138:5 union definition
| | |-FieldDecl 0x1ba23573f90 <line:139:9, col:16> col:13 u 'u64 [2]'
| | `-FieldDecl 0x1ba23574048 <line:140:9, col:16> col:12 c 'u8 [16]'
| |-FieldDecl 0x1ba23571110 <line:138:5, line:141:7> col:7 nonce 'union (anonymous union at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:138:5)':'union ccm128_context::(anonymous at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:138:5)'
| |-FieldDecl 0x1ba23571188 <line:138:5, line:141:14> col:14 cmac 'union (anonymous union at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:138:5)':'union ccm128_context::(anonymous at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:138:5)'
| |-FieldDecl 0x1ba235711f0 <line:142:5, col:9> col:9 blocks 'u64':'unsigned long long'
| |-FieldDecl 0x1ba23571260 <line:143:5, col:16> col:16 invalid block 'int'
| `-FieldDecl 0x1ba235712d0 <line:144:5, col:11> col:11 key 'void *'
|-RecordDecl 0x1ba23571380 <line:149:9, line:152:1> line:149:9 union definition
| |-FieldDecl 0x1ba235714a0 <line:150:5, col:12> col:9 a 'u64 [2]'
| `-FieldDecl 0x1ba23571560 <line:151:5, col:23> col:19 c 'unsigned char [16]'
|-TypedefDecl 0x1ba23571618 <line:149:1, line:152:3> col:3 referenced OCB_BLOCK 'union OCB_BLOCK':'OCB_BLOCK'
| `-ElaboratedType 0x1ba235715c0 'union OCB_BLOCK' sugar
|   `-RecordType 0x1ba23571420 'OCB_BLOCK'
|     `-Record 0x1ba23571380 ''
|-RecordDecl 0x1ba23571688 <line:163:1, line:185:1> line:163:8 invalid struct ocb128_context definition
| |-FieldDecl 0x1ba23571758 <line:165:5, col:16> col:16 invalid encrypt 'int'
| |-FieldDecl 0x1ba235717c8 <line:166:5, col:16> col:16 invalid decrypt 'int'
| |-FieldDecl 0x1ba23571838 <line:167:5, col:11> col:11 keyenc 'void *'
| |-FieldDecl 0x1ba235718a8 <line:168:5, col:11> col:11 keydec 'void *'
| |-FieldDecl 0x1ba23571918 <line:169:5, col:14> col:14 invalid stream 'int'
| |-FieldDecl 0x1ba23571980 <line:171:5, col:12> col:12 l_index 'size_t':'unsigned long long'
| |-FieldDecl 0x1ba235719e8 <line:172:5, col:12> col:12 max_l_index 'size_t':'unsigned long long'
| |-FieldDecl 0x1ba23571a70 <line:173:5, col:15> col:15 l_star 'OCB_BLOCK':'OCB_BLOCK'
| |-FieldDecl 0x1ba23571ad8 <line:174:5, col:15> col:15 l_dollar 'OCB_BLOCK':'OCB_BLOCK'
| |-FieldDecl 0x1ba23571b98 <line:175:5, col:16> col:16 l 'OCB_BLOCK *'
| |-RecordDecl 0x1ba23571bf0 <line:177:5, line:184:5> line:177:5 struct definition
| | |-FieldDecl 0x1ba23571cc0 <line:178:9, col:13> col:13 blocks_hashed 'u64':'unsigned long long'
| | |-FieldDecl 0x1ba23571d28 <line:179:9, col:13> col:13 blocks_processed 'u64':'unsigned long long'
| | |-FieldDecl 0x1ba23571d90 <line:180:9, col:19> col:19 offset_aad 'OCB_BLOCK':'OCB_BLOCK'
| | |-FieldDecl 0x1ba23571df8 <line:181:9, col:19> col:19 sum 'OCB_BLOCK':'OCB_BLOCK'
| | |-FieldDecl 0x1ba23571e60 <line:182:9, col:19> col:19 offset 'OCB_BLOCK':'OCB_BLOCK'
| | `-FieldDecl 0x1ba23571ec8 <line:183:9, col:19> col:19 checksum 'OCB_BLOCK':'OCB_BLOCK'
| `-FieldDecl 0x1ba23571f78 <line:177:5, line:184:7> col:7 sess 'struct (anonymous struct at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:177:5)':'struct ocb128_context::(anonymous at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:177:5)'
|-TypedefDecl 0x1ba23572038 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x1ba21b66a30 'unsigned long long'
|-TypedefDecl 0x1ba235720a8 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x1ba21b67560 'char *'
|   `-BuiltinType 0x1ba21b668f0 'char'
|-FunctionDecl 0x1ba23676c80 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1ba23676d20 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x1ba23676d90 <col:21> Implicit
|-FunctionDecl 0x1ba23676de8 prev 0x1ba23676c80 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1ba23676b18 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x1ba23676ed8 <col:21> Inherited Implicit
|-TypedefDecl 0x1ba23676f18 prev 0x1ba21b67508 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x1ba21b66a30 'unsigned long long'
|-TypedefDecl 0x1ba23676fc0 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x1ba23676f90 'size_t' sugar
|   |-Typedef 0x1ba23676f18 'size_t'
|   `-BuiltinType 0x1ba21b66a30 'unsigned long long'
|-TypedefDecl 0x1ba23677030 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x1ba21b66990 'long long'
|-TypedefDecl 0x1ba236770a0 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x1ba21b66990 'long long'
|-TypedefDecl 0x1ba23677110 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x1ba21b669d0 'unsigned short'
|-TypedefDecl 0x1ba23677180 <line:541:1, col:24> col:24 wint_t 'unsigned short'
| `-BuiltinType 0x1ba21b669d0 'unsigned short'
|-TypedefDecl 0x1ba236771f0 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x1ba21b669d0 'unsigned short'
|-TypedefDecl 0x1ba23677260 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x1ba21b66950 'int'
|-TypedefDecl 0x1ba236772d0 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x1ba21b66970 'long'
|-TypedefDecl 0x1ba23677340 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x1ba21b66990 'long long'
|-TypedefDecl 0x1ba236773d0 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x1ba236773a0 '__time64_t' sugar
|   |-Typedef 0x1ba23677340 '__time64_t'
|   `-BuiltinType 0x1ba21b66990 'long long'
|-FunctionDecl 0x1ba23677548 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x1ba23677768 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x1ba23680dc0 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x1ba236778a8 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x1ba23677920 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x1ba23677998 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x1ba23677a18 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x1ba23680b60 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x1ba23680ea0 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x1ba23680f60 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x1ba236810d0 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x1ba23681080 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x1ba23681020 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x1ba23680f40 'struct threadlocaleinfostruct'
|       `-Record 0x1ba2368cbf0 'threadlocaleinfostruct'
|-TypedefDecl 0x1ba236811e0 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x1ba23681190 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x1ba23681130 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x1ba23681000 'struct threadmbcinfostruct'
|       `-Record 0x1ba23680f60 'threadmbcinfostruct'
|-RecordDecl 0x1ba23681238 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x1ba236812f0 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x1ba236813b0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1ba23681440 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x1ba236814d0 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x1ba23681588 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x1ba23681530 'struct localeinfo_struct' sugar
|   `-RecordType 0x1ba23681390 'struct localeinfo_struct'
|     `-Record 0x1ba236812f0 'localeinfo_struct'
|-TypedefDecl 0x1ba23681660 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x1ba23681610 'struct localeinfo_struct *'
|   `-ElaboratedType 0x1ba23681530 'struct localeinfo_struct' sugar
|     `-RecordType 0x1ba23681390 'struct localeinfo_struct'
|       `-Record 0x1ba236812f0 'localeinfo_struct'
|-RecordDecl 0x1ba236816d8 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x1ba23681790 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1ba23681808 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x1ba236818c8 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x1ba23681960 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x1ba236819d0 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x1ba23681a88 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x1ba23681a30 'struct localerefcount' sugar
|   `-RecordType 0x1ba23681770 'struct localerefcount'
|     `-Record 0x1ba236816d8 'localerefcount'
|-RecordDecl 0x1ba2368cbf0 prev 0x1ba23680ea0 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x1ba2368cc70 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1ba2368cce8 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x1ba2368cd58 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x1ba2368cdc8 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x1ba2368ce38 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x1ba2368cff8 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x1ba2368d068 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x1ba2368d0d8 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x1ba2368d148 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x1ba2368d1b8 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x1ba2368d228 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x1ba2368d280 parent 0x1ba21b66858 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x1ba2368d410 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x1ba2368d480 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x1ba2368d4f0 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x1ba2368d560 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x1ba2368d5d0 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x1ba2368d640 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x1ba2368d750 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x1ba2368d888 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x1ba2368d938 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x1ba2368d8e0 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x1ba23680f40 'struct threadlocaleinfostruct'
|     `-Record 0x1ba2368cbf0 'threadlocaleinfostruct'
|-FunctionDecl 0x1ba2368bd70 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:47:9, col:142> col:25 _memccpy 'void *(void *, const void *, int, size_t) __attribute__((cdecl))':'void *(void *, const void *, int, size_t)'
| |-ParmVarDecl 0x1ba2368d9c0 <col:69, col:76> col:76 _Dst 'void *'
| |-ParmVarDecl 0x1ba2368da70 <col:87, col:100> col:100 _Src 'const void *'
| |-ParmVarDecl 0x1ba2368daf0 <col:111, col:115> col:115 _Val 'int'
| `-ParmVarDecl 0x1ba2368db68 <col:126, col:133> col:133 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1ba2368c138 <line:48:54> col:54 implicit memchr 'void *(const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1ba2368c1d8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1ba2368c240 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1ba2368c2a8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1ba2368c328 prev 0x1ba2368c138 <col:38, col:150> col:54 memchr 'void *(const void *, int, unsigned long long)'
| |-ParmVarDecl 0x1ba2368be60 <col:94, col:107> col:107 _Buf 'const void *'
| |-ParmVarDecl 0x1ba2368bee0 <col:119, col:123> col:123 _Val 'int'
| `-ParmVarDecl 0x1ba2368bf58 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1ba2368c6e8 <line:49:24, col:162> col:40 _memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x1ba2368c410 <col:77, col:90> col:90 _Buf1 'const void *'
| |-ParmVarDecl 0x1ba2368c490 <col:125, col:138> col:138 _Buf2 'const void *'
| `-ParmVarDecl 0x1ba2368c508 <col:150, col:157> col:157 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1ba23686b90 <line:50:24, col:192> col:40 _memicmp_l 'int (const void *, const void *, size_t, _locale_t) __attribute__((cdecl))':'int (const void *, const void *, size_t, _locale_t)'
| |-ParmVarDecl 0x1ba2368c7d0 <col:79, col:92> col:92 _Buf1 'const void *'
| |-ParmVarDecl 0x1ba2368c850 <col:127, col:140> col:140 _Buf2 'const void *'
| |-ParmVarDecl 0x1ba2368c8c8 <col:152, col:159> col:159 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ba2368c960 <col:175, col:185> col:185 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ba23686e98 <line:51:32> col:32 implicit memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1ba23686f38 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1ba23686fa0 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1ba23687008 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1ba23687088 prev 0x1ba23686e98 <col:16, col:144> col:32 memcmp 'int (const void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x1ba23686c80 <col:63, col:76> col:76 _Buf1 'const void *'
| |-ParmVarDecl 0x1ba23686d00 <col:107, col:120> col:120 _Buf2 'const void *'
| `-ParmVarDecl 0x1ba23686d78 <col:132, col:139> col:139 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1ba23687448 <line:55:17> col:17 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1ba236874e8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1ba23687550 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1ba236875b8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1ba23687638 prev 0x1ba23687448 <col:1, col:127> col:17 used memcpy 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x1ba23687170 <col:54, col:61> col:61 _Dst 'void *'
| |-ParmVarDecl 0x1ba236871f0 <col:91, col:104> col:104 _Src 'const void *'
| `-ParmVarDecl 0x1ba23687268 <col:115, col:122> col:122 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1ba23687ad8 <line:57:9, col:191> col:26 memcpy_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x1ba23687748 <col:82, col:89> col:89 _Dst 'void *'
| |-ParmVarDecl 0x1ba236877e0 <col:100, col:108> col:108 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1ba23687860 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x1ba236878d8 <col:174, col:182> col:182 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1ba23685ea8 <line:94:25> col:25 implicit memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1ba23685f48 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1ba23685fb0 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1ba23686018 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1ba23686098 prev 0x1ba23685ea8 <col:9, col:107> col:25 memset 'void *(void *, int, unsigned long long)'
| |-ParmVarDecl 0x1ba23685bd0 <col:62, col:69> col:69 _Dst 'void *'
| |-ParmVarDecl 0x1ba23685c50 <col:80, col:84> col:84 _Val 'int'
| `-ParmVarDecl 0x1ba23685cc8 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1ba23686518 <line:98:57> col:57 implicit memccpy 'void *(void *, const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1ba236865b8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1ba23686620 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1ba23686688 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1ba236866f0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1ba23686778 prev 0x1ba23686518 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:98:187> col:57 memccpy 'void *(void *, const void *, int, unsigned long long)'
| |-ParmVarDecl 0x1ba23686260 <col:95, col:102> col:102 _Dst 'void *'
| |-ParmVarDecl 0x1ba236862e0 <col:136, col:149> col:149 _Src 'const void *'
| |-ParmVarDecl 0x1ba23686360 <col:160, col:164> col:164 _Val 'int'
| |-ParmVarDecl 0x1ba236863d8 <col:175, col:182> col:182 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1ba23686838 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memccpy. See online help for details." ""
|-FunctionDecl 0x1ba23687c40 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:99:190> col:69 memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x1ba23686a00 <col:105, col:118> col:118 _Buf1 'const void *'
| |-ParmVarDecl 0x1ba23686a80 <col:153, col:166> col:166 _Buf2 'const void *'
| |-ParmVarDecl 0x1ba23686af8 <col:178, col:185> col:185 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1ba23687cf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memicmp. See online help for details." ""
|-FunctionDecl 0x1ba236880f0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:105:40, col:144> col:56 _strset_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x1ba23687e20 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x1ba23687e98 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ba23687f18 <col:134, col:138> col:138 _Value 'int'
|-FunctionDecl 0x1ba236884c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:107:88 _strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x1ba236882d0 <col:108, col:114> col:114 _Dest 'char *'
| |-ParmVarDecl 0x1ba23688350 <col:126, col:131> col:131 _Value 'int'
| `-DeprecatedAttr 0x1ba23688570 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ba23688980 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:109:40, col:158> col:56 strcpy_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x1ba236886b8 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x1ba23688730 <col:112, col:120> col:120 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1ba236887b0 <col:141, col:154> col:154 _Src 'const char *'
|-FunctionDecl 0x1ba23688da0 <line:112:88> col:88 implicit strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1ba23688e40 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x1ba23688ea8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1ba23688f20 prev 0x1ba23688da0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:112:88 strcpy 'char *(char *, const char *)'
| |-ParmVarDecl 0x1ba23688bb0 <col:142, col:148> col:148 _Dest 'char *'
| |-ParmVarDecl 0x1ba23688c30 <col:162, col:176> col:176 _Source 'const char *'
| `-DeprecatedAttr 0x1ba23688fd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ba23689328 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:114:40, col:161> col:56 strcat_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x1ba23689118 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x1ba23689190 <col:115, col:123> col:123 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1ba23689210 <col:144, col:157> col:157 _Src 'const char *'
|-FunctionDecl 0x1ba23689650 <line:118:88> col:88 implicit strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1ba236896f0 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x1ba23689758 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1ba236897d0 prev 0x1ba23689650 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:118:88 strcat 'char *(char *, const char *)'
| |-ParmVarDecl 0x1ba236894d0 <col:170, col:176> col:176 _Dest 'char *'
| |-ParmVarDecl 0x1ba23689550 <col:190, col:204> col:204 _Source 'const char *'
| `-DeprecatedAttr 0x1ba23689880 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ba23689bc0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:120:32> col:32 implicit strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x1ba23689c60 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1ba23689cc8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1ba23689d40 prev 0x1ba23689bc0 <col:16, col:91> col:32 strcmp 'int (const char *, const char *)'
| |-ParmVarDecl 0x1ba236899c8 <col:46, col:59> col:59 _Str1 'const char *'
| `-ParmVarDecl 0x1ba23689a48 <col:73, col:86> col:86 _Str2 'const char *'
|-FunctionDecl 0x1ba23689f90 <line:121:32> col:32 implicit strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x1ba2368a030 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1ba2368a0a0 prev 0x1ba23689f90 <col:16, col:63> col:32 strlen 'unsigned long long (const char *)'
| `-ParmVarDecl 0x1ba23689e20 <col:46, col:59> col:59 _Str 'const char *'
|-FunctionDecl 0x1ba2368a398 <line:125:1, col:92> col:17 used strnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x1ba2368a178 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x1ba2368a1f0 <col:76, col:83> col:83 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1ba2368a5e8 <line:127:16, line:133:1> line:130:19 strnlen_s 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' static inline
| |-ParmVarDecl 0x1ba2368a478 <col:56, col:69> col:69 used _Str 'const char *'
| |-ParmVarDecl 0x1ba2368a4f0 <col:80, col:87> col:87 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x1ba2368a918 <line:131:1, line:133:1>
|   `-ReturnStmt 0x1ba2368a908 <line:132:5, col:51>
|     `-ConditionalOperator 0x1ba2368a8d8 <col:12, col:51> 'unsigned long long'
|       |-ParenExpr 0x1ba2368a748 <col:12, col:20> 'int'
|       | `-BinaryOperator 0x1ba2368a728 <col:13, col:19> 'int' '=='
|       |   |-ImplicitCastExpr 0x1ba2368a6f8 <col:13> 'const char *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x1ba2368a6b0 <col:13> 'const char *' lvalue ParmVar 0x1ba2368a478 '_Str' 'const char *'
|       |   `-ImplicitCastExpr 0x1ba2368a710 <col:19> 'const char *' <NullToPointer>
|       |     `-IntegerLiteral 0x1ba2368a6d0 <col:19> 'int' 0
|       |-ImplicitCastExpr 0x1ba2368a8c0 <col:24> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x1ba2368a768 <col:24> 'int' 0
|       `-CallExpr 0x1ba2368a860 <col:28, col:51> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x1ba2368a848 <col:28> 'size_t (*)(const char *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x1ba2368a790 <col:28> 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' Function 0x1ba2368a398 'strnlen' 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
|         |-ImplicitCastExpr 0x1ba2368a890 <col:36> 'const char *' <LValueToRValue>
|         | `-DeclRefExpr 0x1ba2368a7b0 <col:36> 'const char *' lvalue ParmVar 0x1ba2368a478 '_Str' 'const char *'
|         `-ImplicitCastExpr 0x1ba2368a8a8 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x1ba2368a7d0 <col:42> 'size_t':'unsigned long long' lvalue ParmVar 0x1ba2368a4f0 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x1ba2368ec58 <line:136:28, col:209> col:44 memmove_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x1ba2368a948 <col:100, col:107> col:107 _Dst 'void *'
| |-ParmVarDecl 0x1ba2368a9c0 <col:118, col:126> col:126 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1ba2368aa40 <col:168, col:181> col:181 _Src 'const void *'
| `-ParmVarDecl 0x1ba2368aab8 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1ba2368ef60 <line:139:67> col:67 implicit memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1ba2368f000 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1ba2368f068 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1ba2368f0d0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1ba2368f150 prev 0x1ba2368ef60 <col:51, col:186> col:67 memmove 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x1ba2368ed48 <col:109, col:116> col:116 _Dst 'void *'
| |-ParmVarDecl 0x1ba2368edc8 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x1ba2368ee40 <col:174, col:181> col:181 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1ba2368f388 <line:146:24, col:76> col:40 _strdup 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| `-ParmVarDecl 0x1ba2368f238 <col:59, col:72> col:72 _Src 'const char *'
|-FunctionDecl 0x1ba2368f650 <line:152:54> col:54 implicit strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x1ba2368f6f0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1ba2368f758 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1ba2368f7d0 prev 0x1ba2368f650 <col:38, col:100> col:54 strchr 'char *(const char *, int)'
| |-ParmVarDecl 0x1ba2368f460 <col:68, col:81> col:81 _Str 'const char *'
| `-ParmVarDecl 0x1ba2368f4e0 <col:92, col:96> col:96 _Val 'int'
|-FunctionDecl 0x1ba2368fa30 <line:153:24, col:103> col:40 _stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1ba2368f8b0 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x1ba2368f930 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x1ba2368ac50 <line:154:24, col:103> col:40 _strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1ba2368fb10 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x1ba2368fb90 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x1ba2368b008 <line:155:24, col:133> col:40 _stricmp_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x1ba2368ad30 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x1ba2368adb0 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x1ba2368ae28 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ba2368b270 <line:156:24, col:103> col:40 strcoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1ba2368b0f0 <col:56, col:69> col:69 _Str1 'const char *'
| `-ParmVarDecl 0x1ba2368b170 <col:84, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x1ba2368b568 <line:157:24, col:133> col:40 _strcoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x1ba2368b350 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x1ba2368b3d0 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x1ba2368b448 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ba2368b7d0 <line:158:24, col:104> col:40 _stricoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1ba2368b650 <col:58, col:71> col:71 _Str1 'const char *'
| `-ParmVarDecl 0x1ba2368b6d0 <col:86, col:99> col:99 _Str2 'const char *'
|-FunctionDecl 0x1ba2368bac8 <line:159:24, col:134> col:40 _stricoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x1ba2368b8b0 <col:60, col:73> col:73 _Str1 'const char *'
| |-ParmVarDecl 0x1ba2368b930 <col:88, col:101> col:101 _Str2 'const char *'
| `-ParmVarDecl 0x1ba2368b9a8 <col:117, col:127> col:127 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ba23649a98 <line:160:24, col:167> col:40 _strncoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1ba236497c0 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1ba23649840 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x1ba236498b8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1ba23649f00 <line:161:24, col:195> col:40 _strncoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1ba23649b80 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1ba23649c00 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x1ba23649c78 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ba23649cf0 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ba2364a208 <line:162:24, col:167> col:40 _strnicoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1ba23649ff0 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1ba2364a070 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x1ba2364a0e8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1ba2364a5a0 <line:163:24, col:196> col:40 _strnicoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1ba2364a2f0 <col:80, col:93> col:93 _Str1 'const char *'
| |-ParmVarDecl 0x1ba2364a370 <col:127, col:140> col:140 _Str2 'const char *'
| |-ParmVarDecl 0x1ba2364a3e8 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ba2364a460 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ba236e9fc8 <line:164:40> col:40 implicit strcspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x1ba236ea068 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1ba236ea0d0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1ba236ea148 prev 0x1ba236e9fc8 <col:24, col:104> col:40 strcspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x1ba2364a690 <col:56, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x1ba2364a710 <col:83, col:96> col:96 _Control 'const char *'
|-FunctionDecl 0x1ba236ea400 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:165:118> col:77 _strerror 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x1ba236ea320 <col:98, col:111> col:111 _ErrMsg 'const char *'
| `-DeprecatedAttr 0x1ba236ea4a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ba236ea880 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:166:28, col:155> col:44 _strerror_s 'errno_t (char *, size_t, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *)'
| |-ParmVarDecl 0x1ba236ea5f0 <col:85, col:92> col:92 _Buf 'char *'
| |-ParmVarDecl 0x1ba236ea668 <col:103, col:110> col:110 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ba236ea6e8 <col:135, col:148> col:148 _ErrMsg 'const char *'
|-FunctionDecl 0x1ba236eab98 <line:168:76> col:76 implicit strerror 'char *(int)' extern
| `-ParmVarDecl 0x1ba236eac38 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1ba236eaca8 prev 0x1ba236eab98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:168:93> col:76 strerror 'char *(int)'
| |-ParmVarDecl 0x1ba236eaa60 <col:90> col:93 'int'
| `-DeprecatedAttr 0x1ba236ead50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ba236e3060 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:170:28, col:139> col:44 strerror_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x1ba236e2e50 <col:84, col:91> col:91 _Buf 'char *'
| |-ParmVarDecl 0x1ba236e2ec8 <col:102, col:109> col:109 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ba236e2f48 <col:128, col:132> col:132 _ErrNum 'int'
|-FunctionDecl 0x1ba236e3368 <line:173:28, col:109> col:44 _strlwr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x1ba236e3148 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x1ba236e31c0 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1ba236e3658 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:175:79 _strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1ba236e3508 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x1ba236e3700 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ba236e3b10 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:176:28, col:139> col:44 _strlwr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1ba236e3848 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x1ba236e38c0 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ba236e3938 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ba236e7f40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:178:82 _strlwr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x1ba236e3cb8 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x1ba236e3d30 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ba236e7ff0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ba236e84a8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:180:40, col:206> col:56 strncat_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x1ba236e8138 <col:98, col:105> col:105 _Dst 'char *'
| |-ParmVarDecl 0x1ba236e81b0 <col:116, col:124> col:124 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1ba236e8230 <col:165, col:178> col:178 _Src 'const char *'
| `-ParmVarDecl 0x1ba236e82a8 <col:189, col:197> col:197 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1ba236e8928 <line:186:83> col:83 implicit strncat 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1ba236e89c8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1ba236e8a30 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1ba236e8a98 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1ba236e8b18 prev 0x1ba236e8928 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:186:83 strncat 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1ba236e8658 <col:161, col:167> col:167 _Dest 'char *'
| |-ParmVarDecl 0x1ba236e86d8 <col:198, col:212> col:212 _Source 'const char *'
| |-ParmVarDecl 0x1ba236e8750 <col:226, col:234> col:234 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1ba236e8bd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ba236eaf70 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:188:40> col:40 implicit strncmp 'int (const char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1ba236eb010 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1ba236eb078 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1ba236eb0e0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1ba236eb160 prev 0x1ba236eaf70 <col:24, col:163> col:40 strncmp 'int (const char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1ba236e8d18 <col:75, col:88> col:88 _Str1 'const char *'
| |-ParmVarDecl 0x1ba236e8d98 <col:122, col:135> col:135 _Str2 'const char *'
| `-ParmVarDecl 0x1ba236e8e10 <col:147, col:154> col:154 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1ba236eb460 <line:189:24, col:165> col:40 _strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1ba236eb248 <col:77, col:90> col:90 _Str1 'const char *'
| |-ParmVarDecl 0x1ba236eb2c8 <col:124, col:137> col:137 _Str2 'const char *'
| `-ParmVarDecl 0x1ba236eb340 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1ba236eb7f8 <line:190:24, col:195> col:40 _strnicmp_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1ba236eb548 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1ba236eb5c8 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x1ba236eb640 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ba236eb6b8 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ba236ebb90 <line:192:40, col:203> col:56 strncpy_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x1ba236eb8e8 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x1ba236eb960 <col:113, col:121> col:121 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1ba236eb9e0 <col:162, col:175> col:175 _Src 'const char *'
| `-ParmVarDecl 0x1ba236eba58 <col:186, col:194> col:194 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1ba236e8f38 <line:195:83> col:83 implicit strncpy 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1ba236e8fd8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1ba236e9040 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1ba236e90a8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1ba236e9128 prev 0x1ba236e8f38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:195:83 strncpy 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1ba236ebd40 <col:167, col:173> col:173 _Dest 'char *'
| |-ParmVarDecl 0x1ba236ebdc0 <col:204, col:218> col:218 _Source 'const char *'
| |-ParmVarDecl 0x1ba236ebe38 <col:232, col:240> col:240 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1ba236e91e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ba236e9698 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:196:40, col:174> col:56 _strnset_s 'errno_t (char *, size_t, int, size_t) __attribute__((cdecl))':'errno_t (char *, size_t, int, size_t)'
| |-ParmVarDecl 0x1ba236e9328 <col:99, col:106> col:106 _Str 'char *'
| |-ParmVarDecl 0x1ba236e93a0 <col:117, col:124> col:124 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ba236e9420 <col:143, col:147> col:147 _Val 'int'
| `-ParmVarDecl 0x1ba236e9498 <col:158, col:165> col:165 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1ba236e9b18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:198:83 _strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x1ba236e9848 <col:163, col:169> col:169 _Dest 'char *'
| |-ParmVarDecl 0x1ba236e98c8 <col:181, col:186> col:186 _Val 'int'
| |-ParmVarDecl 0x1ba236e9940 <col:197, col:205> col:205 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1ba236e9bd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ba236e5ef0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:199:54> col:54 implicit strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x1ba236e5f90 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1ba236e5ff8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1ba236e6070 prev 0x1ba236e5ef0 <col:38, col:116> col:54 strpbrk 'char *(const char *, const char *)'
| |-ParmVarDecl 0x1ba236e9d18 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x1ba236e9d98 <col:95, col:108> col:108 _Control 'const char *'
|-FunctionDecl 0x1ba236e62d0 <line:200:54> col:54 implicit strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x1ba236e6370 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1ba236e63d8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1ba236e6450 prev 0x1ba236e62d0 <col:38, col:100> col:54 strrchr 'char *(const char *, int)'
| |-ParmVarDecl 0x1ba236e6150 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x1ba236e61d0 <col:93, col:97> col:97 _Ch 'int'
|-FunctionDecl 0x1ba236e6610 <line:201:9, col:54> col:25 _strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| `-ParmVarDecl 0x1ba236e6530 <col:43, col:50> col:50 _Str 'char *'
|-FunctionDecl 0x1ba236e6860 <line:202:40> col:40 implicit strspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x1ba236e6900 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1ba236e6968 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1ba236e69e0 prev 0x1ba236e6860 <col:24, col:101> col:40 strspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x1ba236e66e8 <col:54, col:67> col:67 _Str 'const char *'
| `-ParmVarDecl 0x1ba236e6768 <col:80, col:93> col:93 _Control 'const char *'
|-FunctionDecl 0x1ba236e6c40 <line:203:70> col:70 implicit strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x1ba236e6ce0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1ba236e6d48 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1ba236e6dc0 prev 0x1ba236e6c40 <col:54, col:130> col:70 strstr 'char *(const char *, const char *)'
| |-ParmVarDecl 0x1ba236e6ac0 <col:84, col:97> col:97 _Str 'const char *'
| `-ParmVarDecl 0x1ba236e6b40 <col:110, col:123> col:123 _SubStr 'const char *'
|-FunctionDecl 0x1ba236e7100 <line:204:74> col:74 implicit strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1ba236e71a0 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x1ba236e7208 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1ba236e7280 prev 0x1ba236e7100 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:204:134> col:74 strtok 'char *(char *, const char *)'
| |-ParmVarDecl 0x1ba236e6f80 <col:95, col:102> col:102 _Str 'char *'
| |-ParmVarDecl 0x1ba236e7000 <col:115, col:128> col:128 _Delim 'const char *'
| `-DeprecatedAttr 0x1ba236e7330 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ba236e7718 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:206:36, col:162> col:52 strtok_s 'char *(char *, const char *, char **) __attribute__((cdecl))':'char *(char *, const char *, char **)'
| |-ParmVarDecl 0x1ba236e7478 <col:75, col:82> col:82 _Str 'char *'
| |-ParmVarDecl 0x1ba236e74f8 <col:95, col:108> col:108 _Delim 'const char *'
| `-ParmVarDecl 0x1ba236e7578 <col:146, col:154> col:154 _Context 'char **'
|-FunctionDecl 0x1ba236e7970 <line:208:28, col:109> col:44 _strupr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x1ba236e7800 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x1ba236e7878 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1ba236e7bf0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:210:79 _strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1ba236e7b10 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x1ba236e7c98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ba236e3ff0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:211:28, col:130> col:44 _strupr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1ba236e7de0 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x1ba236e3e60 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ba236e3ed8 <col:113, col:123> col:123 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ba236e4310 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:213:82 _strupr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x1ba236e4198 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x1ba236e4210 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ba236e43c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ba236e47d0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:214:44> col:44 implicit strxfrm 'unsigned long long (char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1ba236e4870 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1ba236e48d8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1ba236e4940 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1ba236e49c0 prev 0x1ba236e47d0 <col:28, col:155> col:44 strxfrm 'unsigned long long (char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1ba236e4508 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x1ba236e4588 <col:115, col:128> col:128 _Src 'const char *'
| `-ParmVarDecl 0x1ba236e4600 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1ba236ebee0 <line:215:28, col:185> col:44 _strxfrm_l 'size_t (char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1ba236e4aa8 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x1ba236e4b28 <col:117, col:130> col:130 _Src 'const char *'
| |-ParmVarDecl 0x1ba236e4ba0 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ba236e4c18 <col:168, col:178> col:178 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ba236ec190 <line:245:71> col:71 implicit strdup 'char *(const char *)' extern
| `-ParmVarDecl 0x1ba236ec230 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1ba236ec2a0 prev 0x1ba236ec190 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:245:106> col:71 strdup 'char *(const char *)'
| |-ParmVarDecl 0x1ba236ec0b0 <col:89, col:102> col:102 _Src 'const char *'
| `-DeprecatedAttr 0x1ba236ec348 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strdup. See online help for details." ""
|-FunctionDecl 0x1ba236ec690 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:252:129> col:69 strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1ba236ec510 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x1ba236ec590 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x1ba236ec740 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strcmpi. See online help for details." ""
|-FunctionDecl 0x1ba236eca88 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:253:129> col:69 stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1ba236ec908 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x1ba236ec988 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x1ba236ecb38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details." ""
|-FunctionDecl 0x1ba236ecde0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:254:84> col:56 strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1ba236ecd00 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x1ba236ece88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strlwr. See online help for details." ""
|-FunctionDecl 0x1ba236e5248 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:255:193> col:70 strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1ba236e5030 <col:106, col:119> col:119 _Str1 'const char *'
| |-ParmVarDecl 0x1ba236e50b0 <col:153, col:166> col:166 _Str 'const char *'
| |-ParmVarDecl 0x1ba236e5128 <col:177, col:184> col:184 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1ba236e5300 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnicmp. See online help for details." ""
|-FunctionDecl 0x1ba236e56e0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:256:143> col:57 strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x1ba236e54c8 <col:94, col:101> col:101 _Str 'char *'
| |-ParmVarDecl 0x1ba236e5548 <col:112, col:116> col:116 _Val 'int'
| |-ParmVarDecl 0x1ba236e55c0 <col:127, col:134> col:134 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1ba236e5798 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnset. See online help for details." ""
|-FunctionDecl 0x1ba236e5a40 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:257:84> col:56 strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1ba236e5960 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x1ba236e5ae8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strrev. See online help for details." ""
|-FunctionDecl 0x1ba236f0f30 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:258:99> col:56 strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x1ba236e5cb0 <col:73, col:80> col:80 _Str 'char *'
| |-ParmVarDecl 0x1ba236e5d30 <col:91, col:95> col:95 _Val 'int'
| `-DeprecatedAttr 0x1ba236f0fe0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strset. See online help for details." ""
|-FunctionDecl 0x1ba236f1288 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:259:84> col:56 strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1ba236f11a8 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x1ba236f1330 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strupr. See online help for details." ""
|-FunctionDecl 0x1ba236f15c0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:273:24, col:77> col:42 _wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| `-ParmVarDecl 0x1ba236f1450 <col:57, col:73> col:73 _Str 'const wchar_t *'
|-FunctionDecl 0x1ba236f1950 <line:280:40, col:167> col:56 wcscat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x1ba236f1690 <col:97, col:107> col:107 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1ba236f1708 <col:118, col:126> col:126 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1ba236f1780 <col:147, col:163> col:163 _Src 'const wchar_t *'
|-FunctionDecl 0x1ba236f1d08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:284:82 wcscat 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1ba236f1af0 <col:164, col:173> col:173 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1ba236f1b68 <col:187, col:204> col:204 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x1ba236f1db8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ba236ed108 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:288:41> col:41 implicit wcschr 'unsigned short *(const unsigned short *, unsigned short)' extern
| |-ParmVarDecl 0x1ba236ed1a8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x1ba236ed210 <<invalid sloc>> <invalid sloc> 'unsigned short'
|-FunctionDecl 0x1ba236ed288 prev 0x1ba236ed108 <col:23, col:88> col:41 wcschr 'unsigned short *(const unsigned short *, unsigned short)'
| |-ParmVarDecl 0x1ba236ecef0 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1ba236ecf68 <col:77, col:85> col:85 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1ba236ed580 <line:289:36> col:36 implicit wcscmp 'int (const unsigned short *, const unsigned short *)' extern
| |-ParmVarDecl 0x1ba236ed620 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x1ba236ed688 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x1ba236ed700 prev 0x1ba236ed580 <col:24, col:101> col:36 wcscmp 'int (const unsigned short *, const unsigned short *)'
| |-ParmVarDecl 0x1ba236ed360 <col:50, col:66> col:66 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1ba236ed3d8 <col:80, col:96> col:96 _Str2 'const wchar_t *'
|-FunctionDecl 0x1ba236ed9e0 <line:291:40, col:164> col:56 wcscpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x1ba236ed7d8 <col:94, col:104> col:104 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1ba236ed850 <col:115, col:123> col:123 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1ba236ed8c8 <col:144, col:160> col:160 _Src 'const wchar_t *'
|-FunctionDecl 0x1ba236edcf0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:294:82 wcscpy 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1ba236edb80 <col:136, col:145> col:145 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1ba236edbf8 <col:159, col:176> col:176 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x1ba236edda0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ba236ee118 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:295:24, col:107> col:39 wcscspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1ba236edf00 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1ba236edf78 <col:83, col:99> col:99 _Control 'const wchar_t *'
|-FunctionDecl 0x1ba236ee360 <line:296:39> col:39 implicit wcslen 'unsigned long long (const unsigned short *)' extern
| `-ParmVarDecl 0x1ba236ee400 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x1ba236ee470 prev 0x1ba236ee360 <col:24, col:73> col:39 wcslen 'unsigned long long (const unsigned short *)'
| `-ParmVarDecl 0x1ba236ee1f0 <col:53, col:69> col:69 _Str 'const wchar_t *'
|-FunctionDecl 0x1ba236ee758 <line:300:1, col:94> col:16 used wcsnlen 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
| |-ParmVarDecl 0x1ba236ee540 <col:51, col:67> col:67 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1ba236ee5b8 <col:78, col:85> col:85 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1ba236ee9a0 <line:302:16, line:308:1> line:305:18 wcsnlen_s 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' static inline
| |-ParmVarDecl 0x1ba236ee830 <col:55, col:71> col:71 used _Src 'const wchar_t *'
| |-ParmVarDecl 0x1ba236ee8a8 <col:82, col:89> col:89 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x1ba236eed38 <line:306:1, line:308:1>
|   `-ReturnStmt 0x1ba236eed28 <line:307:5, col:56>
|     `-ConditionalOperator 0x1ba236eecf8 <col:12, col:56> 'unsigned long long'
|       |-ParenExpr 0x1ba236eeb60 <col:12, col:25> 'int'
|       | `-BinaryOperator 0x1ba236eeb40 <col:13, line:36:27> 'int' '=='
|       |   |-ImplicitCastExpr 0x1ba236eeb10 <line:307:13> 'const wchar_t *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x1ba236eea68 <col:13> 'const wchar_t *' lvalue ParmVar 0x1ba236ee830 '_Src' 'const wchar_t *'
|       |   `-ImplicitCastExpr 0x1ba236eeb28 <line:36:17, col:27> 'const wchar_t *' <BitCast>
|       |     `-ParenExpr 0x1ba236eeaf0 <col:17, col:27> 'void *'
|       |       `-CStyleCastExpr 0x1ba236eeac8 <col:18, col:26> 'void *' <NullToPointer>
|       |         `-IntegerLiteral 0x1ba236eea88 <col:26> 'int' 0
|       |-ImplicitCastExpr 0x1ba236eece0 <line:307:29> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x1ba236eeb80 <col:29> 'int' 0
|       `-CallExpr 0x1ba236eec80 <col:33, col:56> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x1ba236eec68 <col:33> 'size_t (*)(const wchar_t *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x1ba236eeba8 <col:33> 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' Function 0x1ba236ee758 'wcsnlen' 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
|         |-ImplicitCastExpr 0x1ba236eecb0 <col:41> 'const wchar_t *' <LValueToRValue>
|         | `-DeclRefExpr 0x1ba236eebc8 <col:41> 'const wchar_t *' lvalue ParmVar 0x1ba236ee830 '_Src' 'const wchar_t *'
|         `-ImplicitCastExpr 0x1ba236eecc8 <col:47> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x1ba236eebe8 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x1ba236ee8a8 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x1ba236ef118 <line:311:40, col:212> col:56 wcsncat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x1ba236eed60 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1ba236eedd8 <col:119, col:127> col:127 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1ba236eee50 <col:168, col:184> col:184 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1ba236eef10 <col:195, col:203> col:203 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1ba236ef580 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:316:86 wcsncat 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1ba236ef2c0 <col:167, col:176> col:176 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1ba236ef338 <col:207, col:224> col:224 _Source 'const wchar_t *'
| |-ParmVarDecl 0x1ba236ef3b0 <col:238, col:246> col:246 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1ba236ef638 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ba236efa48 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:318:36> col:36 implicit wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)' extern
| |-ParmVarDecl 0x1ba236efae8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| |-ParmVarDecl 0x1ba236efb50 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x1ba236efbb8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1ba236efc38 prev 0x1ba236efa48 <col:24, col:165> col:36 wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)'
| |-ParmVarDecl 0x1ba236ef778 <col:71, col:87> col:87 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1ba236ef7f0 <col:121, col:137> col:137 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1ba236ef868 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1ba236f7048 <line:320:40, col:209> col:56 wcsncpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x1ba236efd18 <col:95, col:105> col:105 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1ba236efd90 <col:116, col:124> col:124 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1ba236efe08 <col:165, col:181> col:181 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1ba236efe80 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1ba236f73f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:323:86 wcsncpy 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1ba236f71f0 <col:179, col:188> col:188 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1ba236f7268 <col:219, col:236> col:236 _Source 'const wchar_t *'
| |-ParmVarDecl 0x1ba236f72e0 <col:250, col:258> col:258 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1ba236f74b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ba236f7808 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:324:38, col:124> col:56 wcspbrk 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1ba236f75f0 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1ba236f7668 <col:100, col:116> col:116 _Control 'const wchar_t *'
|-FunctionDecl 0x1ba236f7a50 <line:325:38, col:109> col:56 wcsrchr 'wchar_t *(const wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(const wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1ba236f78e0 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1ba236f7958 <col:98, col:106> col:106 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1ba236f7c98 <line:326:24, col:106> col:39 wcsspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1ba236f7b28 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1ba236f7ba0 <col:82, col:98> col:98 _Control 'const wchar_t *'
|-FunctionDecl 0x1ba236f7ee0 <line:329:23, col:107> col:41 wcsstr 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1ba236f7d70 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1ba236f7de8 <col:84, col:100> col:100 _SubStr 'const wchar_t *'
|-FunctionDecl 0x1ba236f31a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:330:142> col:76 wcstok 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1ba236f3038 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x1ba236f30b0 <col:120, col:136> col:136 _Delim 'const wchar_t *'
| `-DeprecatedAttr 0x1ba236f3258 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ba236f36c0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:332:36, col:173> col:54 wcstok_s 'wchar_t *(wchar_t *, const wchar_t *, wchar_t **) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x1ba236f3398 <col:77, col:87> col:87 _Str 'wchar_t *'
| |-ParmVarDecl 0x1ba236f3410 <col:100, col:116> col:116 _Delim 'const wchar_t *'
| `-ParmVarDecl 0x1ba236f34f0 <col:154, col:165> col:165 _Context 'wchar_t **'
|-FunctionDecl 0x1ba236f39e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:334:105> col:79 _wcserror 'wchar_t *(int) __attribute__((cdecl))':'wchar_t *(int)'
| |-ParmVarDecl 0x1ba236f3868 <col:94, col:98> col:98 _ErrNum 'int'
| `-DeprecatedAttr 0x1ba236f3a88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ba236f3e90 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:335:28, col:147> col:44 _wcserror_s 'errno_t (wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, int)'
| |-ParmVarDecl 0x1ba236f3bc8 <col:89, col:99> col:99 _Buf 'wchar_t *'
| |-ParmVarDecl 0x1ba236f3c40 <col:110, col:117> col:117 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ba236f3cc0 <col:136, col:140> col:140 _ErrNum 'int'
|-FunctionDecl 0x1ba236f0120 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:337:122> col:80 __wcserror 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x1ba236f0048 <col:102, col:118> col:118 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x1ba236f01c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ba236f0590 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:338:28, col:165> col:44 __wcserror_s 'errno_t (wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x1ba236f0308 <col:90, col:100> col:100 _Buffer 'wchar_t *'
| |-ParmVarDecl 0x1ba236f0380 <col:114, col:121> col:121 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ba236f03f8 <col:142, col:158> col:158 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x1ba236f07e8 <line:341:24, col:103> col:36 _wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1ba236f0670 <col:52, col:68> col:68 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1ba236f06e8 <col:82, col:98> col:98 _Str2 'const wchar_t *'
|-FunctionDecl 0x1ba236f0b88 <line:342:24, col:133> col:36 _wcsicmp_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1ba236f08c0 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1ba236f0938 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1ba236f09b0 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ba236f0e78 <line:343:24, col:167> col:36 _wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1ba236f0c68 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1ba236f0ce0 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1ba236f0d58 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1ba236fb380 <line:344:24, col:197> col:36 _wcsnicmp_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1ba236fb010 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1ba236fb088 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1ba236fb100 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ba236fb178 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ba236fb7d8 <line:345:40, col:181> col:56 _wcsnset_s 'errno_t (wchar_t *, size_t, wchar_t, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t, size_t)'
| |-ParmVarDecl 0x1ba236fb468 <col:99, col:109> col:109 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1ba236fb4e0 <col:120, col:127> col:127 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ba236fb558 <col:146, col:154> col:154 _Val 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1ba236fb5d0 <col:165, col:172> col:172 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1ba236fbc40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:347:86 _wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x1ba236fb980 <col:172, col:181> col:181 _Str 'wchar_t *'
| |-ParmVarDecl 0x1ba236fb9f8 <col:187, col:196> col:196 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x1ba236fba70 <col:207, col:215> col:215 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1ba236fbcf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ba236f5f80 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:348:9, col:59> col:27 _wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| `-ParmVarDecl 0x1ba236fbe38 <col:45, col:55> col:55 _Str 'wchar_t *'
|-FunctionDecl 0x1ba236f6310 <line:349:40, col:159> col:56 _wcsset_s 'errno_t (wchar_t *, size_t, wchar_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t)'
| |-ParmVarDecl 0x1ba236f6050 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1ba236f60c8 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ba236f6140 <col:145, col:153> col:153 _Value 'wchar_t':'unsigned short'
|-FunctionDecl 0x1ba236f66c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:351:85 _wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1ba236f64b0 <col:150, col:159> col:159 _Str 'wchar_t *'
| |-ParmVarDecl 0x1ba236f6528 <col:165, col:174> col:174 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x1ba236f6778 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ba236f6ad8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:353:28, col:126> col:44 _wcslwr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1ba236f68b8 <col:86, col:96> col:96 _Str 'wchar_t *'
| `-ParmVarDecl 0x1ba236f6930 <col:107, col:114> col:114 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1ba236f6d48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:355:82 _wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1ba236f6c70 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x1ba236f6df0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ba236f4220 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:356:28, col:156> col:44 _wcslwr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1ba236f3f60 <col:88, col:98> col:98 _Str 'wchar_t *'
| |-ParmVarDecl 0x1ba236f3fd8 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ba236f4050 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ba236f45d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:358:85 _wcslwr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1ba236f43c0 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x1ba236f4438 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ba236f4688 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ba236f4938 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:359:28, col:112> col:44 _wcsupr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1ba236f47c8 <col:79, col:89> col:89 _Str 'wchar_t *'
| `-ParmVarDecl 0x1ba236f4840 <col:100, col:107> col:107 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1ba236f4ba8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:361:82 _wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1ba236f4ad0 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x1ba236f4c50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ba236fc020 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:362:28, col:142> col:44 _wcsupr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1ba236f4d90 <col:81, col:91> col:91 _Str 'wchar_t *'
| |-ParmVarDecl 0x1ba236f4e08 <col:102, col:109> col:109 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ba236f4e80 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ba236fc330 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:364:85 _wcsupr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1ba236fc1c0 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x1ba236fc238 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ba236fc3e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ba236fc7e0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:365:28, col:159> col:43 wcsxfrm 'size_t (wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1ba236fc520 <col:93, col:103> col:103 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1ba236fc598 <col:116, col:132> col:132 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1ba236fc610 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1ba236fcc28 <line:366:28, col:189> col:43 _wcsxfrm_l 'size_t (wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1ba236fc8c0 <col:96, col:106> col:106 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1ba236fc938 <col:119, col:134> col:134 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1ba236fc9b0 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ba236fca28 <col:172, col:182> col:182 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ba236fce88 <line:367:24, col:102> col:36 wcscoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1ba236fcd10 <col:51, col:67> col:67 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1ba236fcd88 <col:81, col:97> col:97 _Str2 'const wchar_t *'
|-FunctionDecl 0x1ba236f8138 <line:368:24, col:133> col:36 _wcscoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1ba236fcf60 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1ba236f7fa0 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1ba236f8018 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ba236f8390 <line:369:24, col:104> col:36 _wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1ba236f8218 <col:53, col:69> col:69 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1ba236f8290 <col:83, col:99> col:99 _Str2 'const wchar_t *'
|-FunctionDecl 0x1ba236f8678 <line:370:24, col:133> col:36 _wcsicoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1ba236f8468 <col:55, col:71> col:71 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1ba236f84e0 <col:85, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1ba236f8558 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ba236f8968 <line:371:24, col:167> col:36 _wcsncoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1ba236f8758 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1ba236f87d0 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1ba236f8848 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1ba236f8cf0 <line:372:24, col:197> col:36 _wcsncoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1ba236f8a48 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1ba236f8ac0 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1ba236f8b38 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ba236f8bb0 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ba236f8ff8 <line:373:24, col:168> col:36 _wcsnicoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1ba236f8dd8 <col:74, col:90> col:90 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1ba236f8e50 <col:124, col:140> col:140 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1ba236f8ec8 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1ba236f9380 <line:374:24, col:198> col:36 _wcsnicoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1ba236f90d8 <col:76, col:92> col:92 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1ba236f9150 <col:126, col:142> col:142 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1ba236f91c8 <col:154, col:161> col:161 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ba236f9240 <col:181, col:191> col:191 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ba236f95e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:403:108> col:74 wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x1ba236f9508 <col:88, col:104> col:104 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x1ba236f9688 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsdup. See online help for details." ""
|-FunctionDecl 0x1ba236f99c0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:413:135> col:69 wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1ba236f9848 <col:84, col:100> col:100 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1ba236f98c0 <col:114, col:130> col:130 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x1ba236f9a70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicmp. See online help for details." ""
|-FunctionDecl 0x1ba236f9e40 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:414:200> col:70 wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1ba236f9c30 <col:106, col:122> col:122 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1ba236f9ca8 <col:156, col:172> col:172 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1ba236f9d20 <col:184, col:191> col:191 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1ba236f9ef8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnicmp. See online help for details." ""
|-FunctionDecl 0x1ba237003a0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:415:153> col:60 wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x1ba23700198 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x1ba23700210 <col:118, col:126> col:126 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x1ba23700288 <col:137, col:144> col:144 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1ba23700458 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnset. See online help for details." ""
|-FunctionDecl 0x1ba237006f0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:416:90> col:59 wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1ba23700618 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1ba23700798 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsrev. See online help for details." ""
|-FunctionDecl 0x1ba23700ac8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:417:104> col:59 wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1ba23700958 <col:76, col:86> col:86 _Str 'wchar_t *'
| |-ParmVarDecl 0x1ba237009d0 <col:92, col:100> col:100 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x1ba23700b78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsset. See online help for details." ""
|-FunctionDecl 0x1ba23700e10 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:418:90> col:59 wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1ba23700d38 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1ba23700eb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcslwr. See online help for details." ""
|-FunctionDecl 0x1ba237011b8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:419:90> col:59 wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1ba237010e0 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1ba23701260 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsupr. See online help for details." ""
|-FunctionDecl 0x1ba23701598 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:420:137> col:70 wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1ba23701420 <col:86, col:102> col:102 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1ba23701498 <col:116, col:132> col:132 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x1ba23701648 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicoll. See online help for details." ""
`-FunctionDecl 0x1ba23701c50 <.//openssl//file_jk/before\crypto\modes\xts128.c:14:1, line:157:1> line:14:5 invalid CRYPTO_xts128_encrypt 'int (const int *, const unsigned char *, const unsigned char *, unsigned char *, size_t, int)'
  |-ParmVarDecl 0x1ba23701770 <col:27, col:49> col:49 invalid ctx 'const int *'
  |-ParmVarDecl 0x1ba237018b0 <line:15:27, col:52> col:47 used iv 'const unsigned char *':'const unsigned char *'
  |-ParmVarDecl 0x1ba23701930 <line:16:27, col:48> col:48 used inp 'const unsigned char *'
  |-ParmVarDecl 0x1ba237019e0 <col:53, col:68> col:68 used out 'unsigned char *'
  |-ParmVarDecl 0x1ba23701a58 <line:17:27, col:34> col:34 used len 'size_t':'unsigned long long'
  |-ParmVarDecl 0x1ba23701ad8 <col:39, col:43> col:43 used enc 'int'
  `-CompoundStmt 0x1ba2370b010 <line:18:1, line:157:1>
    |-DeclStmt 0x1ba236fa038 <line:19:5, line:24:6>
    | |-RecordDecl 0x1ba23701d38 <line:19:11, line:22:5> line:19:11 union definition
    | | |-FieldDecl 0x1ba23701e08 <line:20:9, col:14> col:14 one 'long'
    | | `-FieldDecl 0x1ba23701e70 <line:21:9, col:14> col:14 referenced little 'char'
    | `-VarDecl 0x1ba23701f28 <line:19:5, line:24:5> line:22:7 used is_endian 'const union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:19:11)':'const union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:19:11)' cinit
    |   `-InitListExpr 0x1ba236f9fc0 <col:19, line:24:5> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:19:11)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:19:11)' field Field 0x1ba23701e08 'one' 'long'
    |     `-ImplicitCastExpr 0x1ba236fa008 <line:23:9> 'long' <IntegralCast>
    |       `-IntegerLiteral 0x1ba23701f90 <col:9> 'int' 1
    |-DeclStmt 0x1ba236fa4a8 <line:25:5, line:29:21>
    | |-RecordDecl 0x1ba236fa050 <line:25:5, line:29:5> line:25:5 union definition
    | | |-FieldDecl 0x1ba236fa170 <line:26:9, col:16> col:13 referenced u 'u64 [2]'
    | | |-FieldDecl 0x1ba236fa228 <line:27:9, col:16> col:13 referenced d 'u32 [4]'
    | | `-FieldDecl 0x1ba236fa2e0 <line:28:9, col:16> col:12 referenced c 'u8 [16]'
    | |-VarDecl 0x1ba236fa398 <line:25:5, line:29:7> col:7 used tweak 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    | `-VarDecl 0x1ba236fa420 <line:25:5, line:29:14> col:14 used scratch 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    |-DeclStmt 0x1ba236fa540 <line:30:5, col:19>
    | `-VarDecl 0x1ba236fa4d8 <col:5, col:18> col:18 used i 'unsigned int'
    |-IfStmt 0x1ba236fa658 <line:32:5, line:33:17>
    | |-BinaryOperator 0x1ba236fa5e8 <line:32:9, col:15> 'int' '<'
    | | |-ImplicitCastExpr 0x1ba236fa5b8 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
    | | | `-DeclRefExpr 0x1ba236fa558 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x1ba23701a58 'len' 'size_t':'unsigned long long'
    | | `-ImplicitCastExpr 0x1ba236fa5d0 <col:15> 'unsigned long long' <IntegralCast>
    | |   `-IntegerLiteral 0x1ba236fa590 <col:15> 'int' 16
    | `-ReturnStmt 0x1ba236fa648 <line:33:9, col:17>
    |   `-UnaryOperator 0x1ba236fa630 <col:16, col:17> 'int' prefix '-'
    |     `-IntegerLiteral 0x1ba236fa608 <col:17> 'int' 1
    |-CallExpr 0x1ba236fa800 <line:35:5, col:27> 'void *'
    | |-ImplicitCastExpr 0x1ba236fa7e8 <col:5> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x1ba236fa670 <col:5> 'void *(void *, const void *, unsigned long long)' Function 0x1ba23687638 'memcpy' 'void *(void *, const void *, unsigned long long)'
    | |-ImplicitCastExpr 0x1ba236fa850 <col:12, col:18> 'void *' <BitCast>
    | | `-ImplicitCastExpr 0x1ba236fa838 <col:12, col:18> 'u8 *' <ArrayToPointerDecay>
    | |   `-MemberExpr 0x1ba236fa6c8 <col:12, col:18> 'u8 [16]' lvalue .c 0x1ba236fa2e0
    | |     `-DeclRefExpr 0x1ba236fa690 <col:12> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1ba236fa398 'tweak' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    | |-ImplicitCastExpr 0x1ba236fa880 <col:21> 'const void *' <BitCast>
    | | `-ImplicitCastExpr 0x1ba236fa868 <col:21> 'const unsigned char *':'const unsigned char *' <LValueToRValue>
    | |   `-DeclRefExpr 0x1ba236fa6f8 <col:21> 'const unsigned char *':'const unsigned char *' lvalue ParmVar 0x1ba237018b0 'iv' 'const unsigned char *':'const unsigned char *'
    | `-ImplicitCastExpr 0x1ba236fa898 <col:25> 'unsigned long long' <IntegralCast>
    |   `-IntegerLiteral 0x1ba236fa730 <col:25> 'int' 16
    |-IfStmt 0x1ba236fab80 <line:39:5, line:40:16>
    | |-BinaryOperator 0x1ba236faad0 <line:39:9, col:26> 'int' '&&'
    | | |-UnaryOperator 0x1ba236faa00 <col:9, col:10> 'int' prefix '!' cannot overflow
    | | | `-ImplicitCastExpr 0x1ba236fa9e8 <col:10> 'int' <LValueToRValue>
    | | |   `-DeclRefExpr 0x1ba236fa9b0 <col:10> 'int' lvalue ParmVar 0x1ba23701ad8 'enc' 'int'
    | | `-ParenExpr 0x1ba236faab0 <col:17, col:26> 'unsigned long long'
    | |   `-BinaryOperator 0x1ba236faa90 <col:18, col:24> 'unsigned long long' '%'
    | |     |-ImplicitCastExpr 0x1ba236faa60 <col:18> 'size_t':'unsigned long long' <LValueToRValue>
    | |     | `-DeclRefExpr 0x1ba236faa18 <col:18> 'size_t':'unsigned long long' lvalue ParmVar 0x1ba23701a58 'len' 'size_t':'unsigned long long'
    | |     `-ImplicitCastExpr 0x1ba236faa78 <col:24> 'unsigned long long' <IntegralCast>
    | |       `-IntegerLiteral 0x1ba236faa38 <col:24> 'int' 16
    | `-CompoundAssignOperator 0x1ba236fab50 <line:40:9, col:16> 'size_t':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    |   |-DeclRefExpr 0x1ba236faaf0 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x1ba23701a58 'len' 'size_t':'unsigned long long'
    |   `-ImplicitCastExpr 0x1ba236fab38 <col:16> 'unsigned long long' <IntegralCast>
    |     `-IntegerLiteral 0x1ba236fab10 <col:16> 'int' 16
    |-WhileStmt 0x1ba236fefd0 <line:42:5, line:87:5>
    | |-BinaryOperator 0x1ba236fac10 <line:42:12, col:19> 'int' '>='
    | | |-ImplicitCastExpr 0x1ba236fabe0 <col:12> 'size_t':'unsigned long long' <LValueToRValue>
    | | | `-DeclRefExpr 0x1ba236fab98 <col:12> 'size_t':'unsigned long long' lvalue ParmVar 0x1ba23701a58 'len' 'size_t':'unsigned long long'
    | | `-ImplicitCastExpr 0x1ba236fabf8 <col:19> 'unsigned long long' <IntegralCast>
    | |   `-IntegerLiteral 0x1ba236fabb8 <col:19> 'int' 16
    | `-CompoundStmt 0x1ba236fef78 <col:23, line:87:5>
    |   |-BinaryOperator 0x1ba236faee8 <line:48:9, col:51> 'u64':'unsigned long long' '='
    |   | |-ArraySubscriptExpr 0x1ba236facd8 <col:9, col:20> 'u64':'unsigned long long' lvalue
    |   | | |-ImplicitCastExpr 0x1ba236facc0 <col:9, col:17> 'u64 *' <ArrayToPointerDecay>
    |   | | | `-MemberExpr 0x1ba236fac68 <col:9, col:17> 'u64 [2]' lvalue .u 0x1ba236fa170
    |   | | |   `-DeclRefExpr 0x1ba236fac30 <col:9> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1ba236fa420 'scratch' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    |   | | `-IntegerLiteral 0x1ba236fac98 <col:19> 'int' 0
    |   | `-BinaryOperator 0x1ba236faec8 <col:24, col:51> 'unsigned long long' '^'
    |   |   |-ImplicitCastExpr 0x1ba236fae98 <col:24, col:38> 'u64':'unsigned long long' <LValueToRValue>
    |   |   | `-ArraySubscriptExpr 0x1ba236fadc8 <col:24, col:38> 'u64':'unsigned long long' lvalue
    |   |   |   |-ParenExpr 0x1ba236fad80 <col:24, col:35> 'u64 *'
    |   |   |   | `-CStyleCastExpr 0x1ba236fad58 <col:25, col:32> 'u64 *' <BitCast>
    |   |   |   |   `-ImplicitCastExpr 0x1ba236fad40 <col:32> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
    |   |   |   |     `-DeclRefExpr 0x1ba236facf8 <col:32> 'const unsigned char *' lvalue ParmVar 0x1ba23701930 'inp' 'const unsigned char *'
    |   |   |   `-IntegerLiteral 0x1ba236fada0 <col:37> 'int' 0
    |   |   `-ImplicitCastExpr 0x1ba236faeb0 <col:42, col:51> 'u64':'unsigned long long' <LValueToRValue>
    |   |     `-ArraySubscriptExpr 0x1ba236fae78 <col:42, col:51> 'u64':'unsigned long long' lvalue
    |   |       |-ImplicitCastExpr 0x1ba236fae60 <col:42, col:48> 'u64 *' <ArrayToPointerDecay>
    |   |       | `-MemberExpr 0x1ba236fae08 <col:42, col:48> 'u64 [2]' lvalue .u 0x1ba236fa170
    |   |       |   `-DeclRefExpr 0x1ba236fade8 <col:42> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1ba236fa398 'tweak' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    |   |       `-IntegerLiteral 0x1ba236fae38 <col:50> 'int' 0
    |   |-BinaryOperator 0x1ba236fd1c8 <line:49:9, col:51> 'u64':'unsigned long long' '='
    |   | |-ArraySubscriptExpr 0x1ba236faf98 <col:9, col:20> 'u64':'unsigned long long' lvalue
    |   | | |-ImplicitCastExpr 0x1ba236faf80 <col:9, col:17> 'u64 *' <ArrayToPointerDecay>
    |   | | | `-MemberExpr 0x1ba236faf28 <col:9, col:17> 'u64 [2]' lvalue .u 0x1ba236fa170
    |   | | |   `-DeclRefExpr 0x1ba236faf08 <col:9> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1ba236fa420 'scratch' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    |   | | `-IntegerLiteral 0x1ba236faf58 <col:19> 'int' 1
    |   | `-BinaryOperator 0x1ba236fd1a8 <col:24, col:51> 'unsigned long long' '^'
    |   |   |-ImplicitCastExpr 0x1ba236fd178 <col:24, col:38> 'u64':'unsigned long long' <LValueToRValue>
    |   |   | `-ArraySubscriptExpr 0x1ba236fd0a8 <col:24, col:38> 'u64':'unsigned long long' lvalue
    |   |   |   |-ParenExpr 0x1ba236fd060 <col:24, col:35> 'u64 *'
    |   |   |   | `-CStyleCastExpr 0x1ba236fd038 <col:25, col:32> 'u64 *' <BitCast>
    |   |   |   |   `-ImplicitCastExpr 0x1ba236fd020 <col:32> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
    |   |   |   |     `-DeclRefExpr 0x1ba236fcff0 <col:32> 'const unsigned char *' lvalue ParmVar 0x1ba23701930 'inp' 'const unsigned char *'
    |   |   |   `-IntegerLiteral 0x1ba236fd080 <col:37> 'int' 1
    |   |   `-ImplicitCastExpr 0x1ba236fd190 <col:42, col:51> 'u64':'unsigned long long' <LValueToRValue>
    |   |     `-ArraySubscriptExpr 0x1ba236fd158 <col:42, col:51> 'u64':'unsigned long long' lvalue
    |   |       |-ImplicitCastExpr 0x1ba236fd140 <col:42, col:48> 'u64 *' <ArrayToPointerDecay>
    |   |       | `-MemberExpr 0x1ba236fd0e8 <col:42, col:48> 'u64 [2]' lvalue .u 0x1ba236fa170
    |   |       |   `-DeclRefExpr 0x1ba236fd0c8 <col:42> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1ba236fa398 'tweak' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    |   |       `-IntegerLiteral 0x1ba236fd118 <col:50> 'int' 1
    |   |-BinaryOperator 0x1ba236fd520 <line:57:9, col:52> 'u64':'unsigned long long' '='
    |   | |-ArraySubscriptExpr 0x1ba236fd358 <col:9, col:23> 'u64':'unsigned long long' lvalue
    |   | | |-ParenExpr 0x1ba236fd310 <col:9, col:20> 'u64 *'
    |   | | | `-CStyleCastExpr 0x1ba236fd2e8 <col:10, col:17> 'u64 *' <BitCast>
    |   | | |   `-ImplicitCastExpr 0x1ba236fd2d0 <col:17> 'unsigned char *' <LValueToRValue> part_of_explicit_cast
    |   | | |     `-DeclRefExpr 0x1ba236fd288 <col:17> 'unsigned char *' lvalue ParmVar 0x1ba237019e0 'out' 'unsigned char *'
    |   | | `-IntegerLiteral 0x1ba236fd330 <col:22> 'int' 0
    |   | `-CompoundAssignOperator 0x1ba236fd4f0 <col:27, col:52> 'u64':'unsigned long long' '^=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    |   |   |-ArraySubscriptExpr 0x1ba236fd408 <col:27, col:38> 'u64':'unsigned long long' lvalue
    |   |   | |-ImplicitCastExpr 0x1ba236fd3f0 <col:27, col:35> 'u64 *' <ArrayToPointerDecay>
    |   |   | | `-MemberExpr 0x1ba236fd398 <col:27, col:35> 'u64 [2]' lvalue .u 0x1ba236fa170
    |   |   | |   `-DeclRefExpr 0x1ba236fd378 <col:27> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1ba236fa420 'scratch' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    |   |   | `-IntegerLiteral 0x1ba236fd3c8 <col:37> 'int' 0
    |   |   `-ImplicitCastExpr 0x1ba236fd4d8 <col:43, col:52> 'u64':'unsigned long long' <LValueToRValue>
    |   |     `-ArraySubscriptExpr 0x1ba236fd4b8 <col:43, col:52> 'u64':'unsigned long long' lvalue
    |   |       |-ImplicitCastExpr 0x1ba236fd4a0 <col:43, col:49> 'u64 *' <ArrayToPointerDecay>
    |   |       | `-MemberExpr 0x1ba236fd448 <col:43, col:49> 'u64 [2]' lvalue .u 0x1ba236fa170
    |   |       |   `-DeclRefExpr 0x1ba236fd428 <col:43> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1ba236fa398 'tweak' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    |   |       `-IntegerLiteral 0x1ba236fd478 <col:51> 'int' 0
    |   |-BinaryOperator 0x1ba236fd7c0 <line:58:9, col:52> 'u64':'unsigned long long' '='
    |   | |-ArraySubscriptExpr 0x1ba236fd5f8 <col:9, col:23> 'u64':'unsigned long long' lvalue
    |   | | |-ParenExpr 0x1ba236fd5b0 <col:9, col:20> 'u64 *'
    |   | | | `-CStyleCastExpr 0x1ba236fd588 <col:10, col:17> 'u64 *' <BitCast>
    |   | | |   `-ImplicitCastExpr 0x1ba236fd570 <col:17> 'unsigned char *' <LValueToRValue> part_of_explicit_cast
    |   | | |     `-DeclRefExpr 0x1ba236fd540 <col:17> 'unsigned char *' lvalue ParmVar 0x1ba237019e0 'out' 'unsigned char *'
    |   | | `-IntegerLiteral 0x1ba236fd5d0 <col:22> 'int' 1
    |   | `-CompoundAssignOperator 0x1ba236fd790 <col:27, col:52> 'u64':'unsigned long long' '^=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    |   |   |-ArraySubscriptExpr 0x1ba236fd6a8 <col:27, col:38> 'u64':'unsigned long long' lvalue
    |   |   | |-ImplicitCastExpr 0x1ba236fd690 <col:27, col:35> 'u64 *' <ArrayToPointerDecay>
    |   |   | | `-MemberExpr 0x1ba236fd638 <col:27, col:35> 'u64 [2]' lvalue .u 0x1ba236fa170
    |   |   | |   `-DeclRefExpr 0x1ba236fd618 <col:27> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1ba236fa420 'scratch' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    |   |   | `-IntegerLiteral 0x1ba236fd668 <col:37> 'int' 1
    |   |   `-ImplicitCastExpr 0x1ba236fd778 <col:43, col:52> 'u64':'unsigned long long' <LValueToRValue>
    |   |     `-ArraySubscriptExpr 0x1ba236fd758 <col:43, col:52> 'u64':'unsigned long long' lvalue
    |   |       |-ImplicitCastExpr 0x1ba236fd740 <col:43, col:49> 'u64 *' <ArrayToPointerDecay>
    |   |       | `-MemberExpr 0x1ba236fd6e8 <col:43, col:49> 'u64 [2]' lvalue .u 0x1ba236fa170
    |   |       |   `-DeclRefExpr 0x1ba236fd6c8 <col:43> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1ba236fa398 'tweak' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    |   |       `-IntegerLiteral 0x1ba236fd718 <col:51> 'int' 1
    |   |-CompoundAssignOperator 0x1ba236fd828 <line:60:9, col:16> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
    |   | |-DeclRefExpr 0x1ba236fd7e0 <col:9> 'const unsigned char *' lvalue ParmVar 0x1ba23701930 'inp' 'const unsigned char *'
    |   | `-IntegerLiteral 0x1ba236fd800 <col:16> 'int' 16
    |   |-CompoundAssignOperator 0x1ba236fd8a0 <line:61:9, col:16> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
    |   | |-DeclRefExpr 0x1ba236fd858 <col:9> 'unsigned char *' lvalue ParmVar 0x1ba237019e0 'out' 'unsigned char *'
    |   | `-IntegerLiteral 0x1ba236fd878 <col:16> 'int' 16
    |   |-CompoundAssignOperator 0x1ba236fd930 <line:62:9, col:16> 'size_t':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    |   | |-DeclRefExpr 0x1ba236fd8d0 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x1ba23701a58 'len' 'size_t':'unsigned long long'
    |   | `-ImplicitCastExpr 0x1ba236fd918 <col:16> 'unsigned long long' <IntegralCast>
    |   |   `-IntegerLiteral 0x1ba236fd8f0 <col:16> 'int' 16
    |   |-IfStmt 0x1ba236fda30 <line:64:9, line:65:20>
    |   | |-BinaryOperator 0x1ba236fd9d8 <line:64:13, col:20> 'int' '=='
    |   | | |-ImplicitCastExpr 0x1ba236fd9a8 <col:13> 'size_t':'unsigned long long' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x1ba236fd960 <col:13> 'size_t':'unsigned long long' lvalue ParmVar 0x1ba23701a58 'len' 'size_t':'unsigned long long'
    |   | | `-ImplicitCastExpr 0x1ba236fd9c0 <col:20> 'unsigned long long' <IntegralCast>
    |   | |   `-IntegerLiteral 0x1ba236fd980 <col:20> 'int' 0
    |   | `-ReturnStmt 0x1ba236fda20 <line:65:13, col:20>
    |   |   `-IntegerLiteral 0x1ba236fd9f8 <col:20> 'int' 0
    |   `-IfStmt 0x1ba236fef50 <line:67:9, line:86:9> has_else
    |     |-ImplicitCastExpr 0x1ba236fdab0 <line:67:13, col:23> 'char' <LValueToRValue>
    |     | `-MemberExpr 0x1ba236fda80 <col:13, col:23> 'const char' lvalue .little 0x1ba23701e70
    |     |   `-DeclRefExpr 0x1ba236fda48 <col:13> 'const union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:19:11)':'const union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:19:11)' lvalue Var 0x1ba23701f28 'is_endian' 'const union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:19:11)':'const union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:19:11)'
    |     |-CompoundStmt 0x1ba236fe580 <col:31, line:74:9>
    |     | |-DeclStmt 0x1ba236fdbe0 <line:68:13, col:36>
    |     | | |-VarDecl 0x1ba236fdae0 <col:13, col:26> col:26 used carry 'unsigned int'
    |     | | `-VarDecl 0x1ba236fdb60 <col:13, col:33> col:33 used res 'unsigned int'
    |     | |-BinaryOperator 0x1ba236fde78 <line:70:13, col:50> 'unsigned int' '='
    |     | | |-DeclRefExpr 0x1ba236fdbf8 <col:13> 'unsigned int' lvalue Var 0x1ba236fdb60 'res' 'unsigned int'
    |     | | `-ImplicitCastExpr 0x1ba236fde60 <col:19, col:50> 'unsigned int' <IntegralCast>
    |     | |   `-BinaryOperator 0x1ba236fde40 <col:19, col:50> 'int' '&'
    |     | |     |-IntegerLiteral 0x1ba236fdc30 <col:19> 'int' 135
    |     | |     `-ParenExpr 0x1ba236fde20 <col:26, col:50> 'int'
    |     | |       `-BinaryOperator 0x1ba236fde00 <col:27, col:48> 'int' '>>'
    |     | |         |-ParenExpr 0x1ba236fddb8 <col:27, col:43> 'int'
    |     | |         | `-CStyleCastExpr 0x1ba236fdd90 <col:28, col:42> 'int' <IntegralCast>
    |     | |         |   `-ImplicitCastExpr 0x1ba236fdd78 <col:33, col:42> 'u32':'unsigned int' <LValueToRValue> part_of_explicit_cast
    |     | |         |     `-ArraySubscriptExpr 0x1ba236fdd40 <col:33, col:42> 'u32':'unsigned int' lvalue
    |     | |         |       |-ImplicitCastExpr 0x1ba236fdd28 <col:33, col:39> 'u32 *' <ArrayToPointerDecay>
    |     | |         |       | `-MemberExpr 0x1ba236fdc78 <col:33, col:39> 'u32 [4]' lvalue .d 0x1ba236fa228
    |     | |         |       |   `-DeclRefExpr 0x1ba236fdc58 <col:33> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1ba236fa398 'tweak' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    |     | |         |       `-IntegerLiteral 0x1ba236fdca8 <col:41> 'int' 3
    |     | |         `-IntegerLiteral 0x1ba236fddd8 <col:48> 'int' 31
    |     | |-BinaryOperator 0x1ba236fe080 <line:71:13, col:52> 'unsigned int' '='
    |     | | |-DeclRefExpr 0x1ba236fde98 <col:13> 'unsigned int' lvalue Var 0x1ba236fdae0 'carry' 'unsigned int'
    |     | | `-CStyleCastExpr 0x1ba236fe058 <col:21, col:52> 'unsigned int' <IntegralCast>
    |     | |   `-ParenExpr 0x1ba236fe038 <col:35, col:52> 'u64':'unsigned long long'
    |     | |     `-BinaryOperator 0x1ba236fdfc0 <col:36, col:50> 'u64':'unsigned long long' '>>'
    |     | |       |-ImplicitCastExpr 0x1ba236fdfa8 <col:36, col:45> 'u64':'unsigned long long' <LValueToRValue>
    |     | |       | `-ArraySubscriptExpr 0x1ba236fdf60 <col:36, col:45> 'u64':'unsigned long long' lvalue
    |     | |       |   |-ImplicitCastExpr 0x1ba236fdf48 <col:36, col:42> 'u64 *' <ArrayToPointerDecay>
    |     | |       |   | `-MemberExpr 0x1ba236fdef0 <col:36, col:42> 'u64 [2]' lvalue .u 0x1ba236fa170
    |     | |       |   |   `-DeclRefExpr 0x1ba236fded0 <col:36> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1ba236fa398 'tweak' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    |     | |       |   `-IntegerLiteral 0x1ba236fdf20 <col:44> 'int' 0
    |     | |       `-IntegerLiteral 0x1ba236fdf80 <col:50> 'int' 63
    |     | |-BinaryOperator 0x1ba236fe2f0 <line:72:13, col:46> 'u64':'unsigned long long' '='
    |     | | |-ArraySubscriptExpr 0x1ba236fe130 <col:13, col:22> 'u64':'unsigned long long' lvalue
    |     | | | |-ImplicitCastExpr 0x1ba236fe118 <col:13, col:19> 'u64 *' <ArrayToPointerDecay>
    |     | | | | `-MemberExpr 0x1ba236fe0c0 <col:13, col:19> 'u64 [2]' lvalue .u 0x1ba236fa170
    |     | | | |   `-DeclRefExpr 0x1ba236fe0a0 <col:13> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1ba236fa398 'tweak' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    |     | | | `-IntegerLiteral 0x1ba236fe0f0 <col:21> 'int' 0
    |     | | `-BinaryOperator 0x1ba236fe2d0 <col:26, col:46> 'unsigned long long' '^'
    |     | |   |-ParenExpr 0x1ba236fe260 <col:26, col:42> 'u64':'unsigned long long'
    |     | |   | `-BinaryOperator 0x1ba236fe240 <col:27, col:41> 'u64':'unsigned long long' '<<'
    |     | |   |   |-ImplicitCastExpr 0x1ba236fe228 <col:27, col:36> 'u64':'unsigned long long' <LValueToRValue>
    |     | |   |   | `-ArraySubscriptExpr 0x1ba236fe1e0 <col:27, col:36> 'u64':'unsigned long long' lvalue
    |     | |   |   |   |-ImplicitCastExpr 0x1ba236fe1c8 <col:27, col:33> 'u64 *' <ArrayToPointerDecay>
    |     | |   |   |   | `-MemberExpr 0x1ba236fe170 <col:27, col:33> 'u64 [2]' lvalue .u 0x1ba236fa170
    |     | |   |   |   |   `-DeclRefExpr 0x1ba236fe150 <col:27> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1ba236fa398 'tweak' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    |     | |   |   |   `-IntegerLiteral 0x1ba236fe1a0 <col:35> 'int' 0
    |     | |   |   `-IntegerLiteral 0x1ba236fe200 <col:41> 'int' 1
    |     | |   `-ImplicitCastExpr 0x1ba236fe2b8 <col:46> 'unsigned long long' <IntegralCast>
    |     | |     `-ImplicitCastExpr 0x1ba236fe2a0 <col:46> 'unsigned int' <LValueToRValue>
    |     | |       `-DeclRefExpr 0x1ba236fe280 <col:46> 'unsigned int' lvalue Var 0x1ba236fdb60 'res' 'unsigned int'
    |     | `-BinaryOperator 0x1ba236fe560 <line:73:13, col:46> 'u64':'unsigned long long' '='
    |     |   |-ArraySubscriptExpr 0x1ba236fe3a0 <col:13, col:22> 'u64':'unsigned long long' lvalue
    |     |   | |-ImplicitCastExpr 0x1ba236fe388 <col:13, col:19> 'u64 *' <ArrayToPointerDecay>
    |     |   | | `-MemberExpr 0x1ba236fe330 <col:13, col:19> 'u64 [2]' lvalue .u 0x1ba236fa170
    |     |   | |   `-DeclRefExpr 0x1ba236fe310 <col:13> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1ba236fa398 'tweak' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    |     |   | `-IntegerLiteral 0x1ba236fe360 <col:21> 'int' 1
    |     |   `-BinaryOperator 0x1ba236fe540 <col:26, col:46> 'unsigned long long' '|'
    |     |     |-ParenExpr 0x1ba236fe4d0 <col:26, col:42> 'u64':'unsigned long long'
    |     |     | `-BinaryOperator 0x1ba236fe4b0 <col:27, col:41> 'u64':'unsigned long long' '<<'
    |     |     |   |-ImplicitCastExpr 0x1ba236fe498 <col:27, col:36> 'u64':'unsigned long long' <LValueToRValue>
    |     |     |   | `-ArraySubscriptExpr 0x1ba236fe450 <col:27, col:36> 'u64':'unsigned long long' lvalue
    |     |     |   |   |-ImplicitCastExpr 0x1ba236fe438 <col:27, col:33> 'u64 *' <ArrayToPointerDecay>
    |     |     |   |   | `-MemberExpr 0x1ba236fe3e0 <col:27, col:33> 'u64 [2]' lvalue .u 0x1ba236fa170
    |     |     |   |   |   `-DeclRefExpr 0x1ba236fe3c0 <col:27> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1ba236fa398 'tweak' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    |     |     |   |   `-IntegerLiteral 0x1ba236fe410 <col:35> 'int' 1
    |     |     |   `-IntegerLiteral 0x1ba236fe470 <col:41> 'int' 1
    |     |     `-ImplicitCastExpr 0x1ba236fe528 <col:46> 'unsigned long long' <IntegralCast>
    |     |       `-ImplicitCastExpr 0x1ba236fe510 <col:46> 'unsigned int' <LValueToRValue>
    |     |         `-DeclRefExpr 0x1ba236fe4f0 <col:46> 'unsigned int' lvalue Var 0x1ba236fdae0 'carry' 'unsigned int'
    |     `-CompoundStmt 0x1ba236fef28 <line:74:16, line:86:9>
    |       |-DeclStmt 0x1ba236fe630 <line:75:13, col:21>
    |       | `-VarDecl 0x1ba236fe5c8 <col:13, col:20> col:20 used c 'size_t':'unsigned long long'
    |       |-ForStmt 0x1ba236fec68 <line:77:13, line:84:13>
    |       | |-BinaryOperator 0x1ba236fe778 <line:77:18, col:29> 'unsigned int' ','
    |       | | |-BinaryOperator 0x1ba236fe6c0 <col:18, col:22> 'size_t':'unsigned long long' '='
    |       | | | |-DeclRefExpr 0x1ba236fe648 <col:18> 'size_t':'unsigned long long' lvalue Var 0x1ba236fe5c8 'c' 'size_t':'unsigned long long'
    |       | | | `-ImplicitCastExpr 0x1ba236fe6a8 <col:22> 'size_t':'unsigned long long' <IntegralCast>
    |       | | |   `-IntegerLiteral 0x1ba236fe680 <col:22> 'int' 0
    |       | | `-BinaryOperator 0x1ba236fe758 <col:25, col:29> 'unsigned int' '='
    |       | |   |-DeclRefExpr 0x1ba236fe6e0 <col:25> 'unsigned int' lvalue Var 0x1ba236fa4d8 'i' 'unsigned int'
    |       | |   `-ImplicitCastExpr 0x1ba236fe740 <col:29> 'unsigned int' <IntegralCast>
    |       | |     `-IntegerLiteral 0x1ba236fe718 <col:29> 'int' 0
    |       | |-<<<NULL>>>
    |       | |-BinaryOperator 0x1ba236fe810 <col:32, col:36> 'int' '<'
    |       | | |-ImplicitCastExpr 0x1ba236fe7e0 <col:32> 'unsigned int' <LValueToRValue>
    |       | | | `-DeclRefExpr 0x1ba236fe798 <col:32> 'unsigned int' lvalue Var 0x1ba236fa4d8 'i' 'unsigned int'
    |       | | `-ImplicitCastExpr 0x1ba236fe7f8 <col:36> 'unsigned int' <IntegralCast>
    |       | |   `-IntegerLiteral 0x1ba236fe7b8 <col:36> 'int' 16
    |       | |-UnaryOperator 0x1ba236fe850 <col:40, col:42> 'unsigned int' prefix '++'
    |       | | `-DeclRefExpr 0x1ba236fe830 <col:42> 'unsigned int' lvalue Var 0x1ba236fa4d8 'i' 'unsigned int'
    |       | `-CompoundStmt 0x1ba236fec40 <col:45, line:84:13>
    |       |   |-CompoundAssignOperator 0x1ba236fea00 <line:81:17, col:46> 'size_t':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    |       |   | |-DeclRefExpr 0x1ba236fe868 <col:17> 'size_t':'unsigned long long' lvalue Var 0x1ba236fe5c8 'c' 'size_t':'unsigned long long'
    |       |   | `-BinaryOperator 0x1ba236fe9e0 <col:22, col:46> 'size_t':'unsigned long long' '<<'
    |       |   |   |-ParenExpr 0x1ba236fe998 <col:22, col:41> 'size_t':'unsigned long long'
    |       |   |   | `-CStyleCastExpr 0x1ba236fe970 <col:23, col:40> 'size_t':'unsigned long long' <IntegralCast>
    |       |   |   |   `-ImplicitCastExpr 0x1ba236fe958 <col:31, col:40> 'u8':'unsigned char' <LValueToRValue> part_of_explicit_cast
    |       |   |   |     `-ArraySubscriptExpr 0x1ba236fe928 <col:31, col:40> 'u8':'unsigned char' lvalue
    |       |   |   |       |-ImplicitCastExpr 0x1ba236fe8f8 <col:31, col:37> 'u8 *' <ArrayToPointerDecay>
    |       |   |   |       | `-MemberExpr 0x1ba236fe8a8 <col:31, col:37> 'u8 [16]' lvalue .c 0x1ba236fa2e0
    |       |   |   |       |   `-DeclRefExpr 0x1ba236fe888 <col:31> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1ba236fa398 'tweak' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    |       |   |   |       `-ImplicitCastExpr 0x1ba236fe910 <col:39> 'unsigned int' <LValueToRValue>
    |       |   |   |         `-DeclRefExpr 0x1ba236fe8d8 <col:39> 'unsigned int' lvalue Var 0x1ba236fa4d8 'i' 'unsigned int'
    |       |   |   `-IntegerLiteral 0x1ba236fe9b8 <col:46> 'int' 1
    |       |   |-BinaryOperator 0x1ba236feb60 <line:82:17, col:34> 'u8':'unsigned char' '='
    |       |   | |-ArraySubscriptExpr 0x1ba236fead0 <col:17, col:26> 'u8':'unsigned char' lvalue
    |       |   | | |-ImplicitCastExpr 0x1ba236feaa0 <col:17, col:23> 'u8 *' <ArrayToPointerDecay>
    |       |   | | | `-MemberExpr 0x1ba236fea50 <col:17, col:23> 'u8 [16]' lvalue .c 0x1ba236fa2e0
    |       |   | | |   `-DeclRefExpr 0x1ba236fea30 <col:17> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1ba236fa398 'tweak' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    |       |   | | `-ImplicitCastExpr 0x1ba236feab8 <col:25> 'unsigned int' <LValueToRValue>
    |       |   | |   `-DeclRefExpr 0x1ba236fea80 <col:25> 'unsigned int' lvalue Var 0x1ba236fa4d8 'i' 'unsigned int'
    |       |   | `-CStyleCastExpr 0x1ba236feb38 <col:30, col:34> 'u8':'unsigned char' <IntegralCast>
    |       |   |   `-ImplicitCastExpr 0x1ba236feb20 <col:34> 'size_t':'unsigned long long' <LValueToRValue> part_of_explicit_cast
    |       |   |     `-DeclRefExpr 0x1ba236feaf0 <col:34> 'size_t':'unsigned long long' lvalue Var 0x1ba236fe5c8 'c' 'size_t':'unsigned long long'
    |       |   `-BinaryOperator 0x1ba236fec20 <line:83:17, col:26> 'size_t':'unsigned long long' '='
    |       |     |-DeclRefExpr 0x1ba236feb80 <col:17> 'size_t':'unsigned long long' lvalue Var 0x1ba236fe5c8 'c' 'size_t':'unsigned long long'
    |       |     `-BinaryOperator 0x1ba236fec00 <col:21, col:26> 'size_t':'unsigned long long' '>>'
    |       |       |-ImplicitCastExpr 0x1ba236febe8 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
    |       |       | `-DeclRefExpr 0x1ba236feba0 <col:21> 'size_t':'unsigned long long' lvalue Var 0x1ba236fe5c8 'c' 'size_t':'unsigned long long'
    |       |       `-IntegerLiteral 0x1ba236febc0 <col:26> 'int' 8
    |       `-CompoundAssignOperator 0x1ba236feef8 <line:85:13, col:46> 'u8':'unsigned char' '^=' ComputeLHSTy='int' ComputeResultTy='int'
    |         |-ArraySubscriptExpr 0x1ba236fed30 <col:13, col:22> 'u8':'unsigned char' lvalue
    |         | |-ImplicitCastExpr 0x1ba236fed18 <col:13, col:19> 'u8 *' <ArrayToPointerDecay>
    |         | | `-MemberExpr 0x1ba236fecc0 <col:13, col:19> 'u8 [16]' lvalue .c 0x1ba236fa2e0
    |         | |   `-DeclRefExpr 0x1ba236feca0 <col:13> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1ba236fa398 'tweak' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    |         | `-IntegerLiteral 0x1ba236fecf0 <col:21> 'int' 0
    |         `-ImplicitCastExpr 0x1ba236feee0 <col:27, col:46> 'int' <IntegralCast>
    |           `-CStyleCastExpr 0x1ba236feeb8 <col:27, col:46> 'u8':'unsigned char' <IntegralCast>
    |             `-ParenExpr 0x1ba236fee98 <col:31, col:46> 'unsigned long long'
    |               `-BinaryOperator 0x1ba236fee48 <col:32, col:45> 'unsigned long long' '&'
    |                 |-ImplicitCastExpr 0x1ba236fee30 <col:32> 'unsigned long long' <IntegralCast>
    |                 | `-IntegerLiteral 0x1ba236fed50 <col:32> 'int' 135
    |                 `-ParenExpr 0x1ba236fee10 <col:39, col:45> 'unsigned long long'
    |                   `-BinaryOperator 0x1ba236fedf0 <col:40, col:44> 'unsigned long long' '-'
    |                     |-ImplicitCastExpr 0x1ba236fedd8 <col:40> 'unsigned long long' <IntegralCast>
    |                     | `-IntegerLiteral 0x1ba236fed78 <col:40> 'int' 0
    |                     `-ImplicitCastExpr 0x1ba236fedc0 <col:44> 'size_t':'unsigned long long' <LValueToRValue>
    |                       `-DeclRefExpr 0x1ba236feda0 <col:44> 'size_t':'unsigned long long' lvalue Var 0x1ba236fe5c8 'c' 'size_t':'unsigned long long'
    |-IfStmt 0x1ba2370afb0 <line:88:5, line:154:5> has_else
    | |-ImplicitCastExpr 0x1ba236ff030 <line:88:9> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x1ba236ff010 <col:9> 'int' lvalue ParmVar 0x1ba23701ad8 'enc' 'int'
    | |-CompoundStmt 0x1ba236fff18 <col:14, line:100:5>
    | | |-ForStmt 0x1ba236ff5c0 <line:89:9, line:93:9>
    | | | |-BinaryOperator 0x1ba236ff0a8 <line:89:14, col:18> 'unsigned int' '='
    | | | | |-DeclRefExpr 0x1ba236ff048 <col:14> 'unsigned int' lvalue Var 0x1ba236fa4d8 'i' 'unsigned int'
    | | | | `-ImplicitCastExpr 0x1ba236ff090 <col:18> 'unsigned int' <IntegralCast>
    | | | |   `-IntegerLiteral 0x1ba236ff068 <col:18> 'int' 0
    | | | |-<<<NULL>>>
    | | | |-BinaryOperator 0x1ba236ff150 <col:21, col:25> 'int' '<'
    | | | | |-ImplicitCastExpr 0x1ba236ff138 <col:21> 'unsigned long long' <IntegralCast>
    | | | | | `-ImplicitCastExpr 0x1ba236ff108 <col:21> 'unsigned int' <LValueToRValue>
    | | | | |   `-DeclRefExpr 0x1ba236ff0c8 <col:21> 'unsigned int' lvalue Var 0x1ba236fa4d8 'i' 'unsigned int'
    | | | | `-ImplicitCastExpr 0x1ba236ff120 <col:25> 'size_t':'unsigned long long' <LValueToRValue>
    | | | |   `-DeclRefExpr 0x1ba236ff0e8 <col:25> 'size_t':'unsigned long long' lvalue ParmVar 0x1ba23701a58 'len' 'size_t':'unsigned long long'
    | | | |-UnaryOperator 0x1ba236ff190 <col:30, col:32> 'unsigned int' prefix '++'
    | | | | `-DeclRefExpr 0x1ba236ff170 <col:32> 'unsigned int' lvalue Var 0x1ba236fa4d8 'i' 'unsigned int'
    | | | `-CompoundStmt 0x1ba236ff598 <col:35, line:93:9>
    | | |   |-DeclStmt 0x1ba236ff2c8 <line:90:13, col:26>
    | | |   | `-VarDecl 0x1ba236ff1b8 <col:13, col:25> col:16 used c 'u8':'unsigned char' cinit
    | | |   |   `-ImplicitCastExpr 0x1ba236ff2b0 <col:20, col:25> 'unsigned char' <LValueToRValue>
    | | |   |     `-ArraySubscriptExpr 0x1ba236ff290 <col:20, col:25> 'const unsigned char' lvalue
    | | |   |       |-ImplicitCastExpr 0x1ba236ff260 <col:20> 'const unsigned char *' <LValueToRValue>
    | | |   |       | `-DeclRefExpr 0x1ba236ff220 <col:20> 'const unsigned char *' lvalue ParmVar 0x1ba23701930 'inp' 'const unsigned char *'
    | | |   |       `-ImplicitCastExpr 0x1ba236ff278 <col:24> 'unsigned int' <LValueToRValue>
    | | |   |         `-DeclRefExpr 0x1ba236ff240 <col:24> 'unsigned int' lvalue Var 0x1ba236fa4d8 'i' 'unsigned int'
    | | |   |-BinaryOperator 0x1ba236ff448 <line:91:13, col:33> 'unsigned char' '='
    | | |   | |-ArraySubscriptExpr 0x1ba236ff350 <col:13, col:18> 'unsigned char' lvalue
    | | |   | | |-ImplicitCastExpr 0x1ba236ff320 <col:13> 'unsigned char *' <LValueToRValue>
    | | |   | | | `-DeclRefExpr 0x1ba236ff2e0 <col:13> 'unsigned char *' lvalue ParmVar 0x1ba237019e0 'out' 'unsigned char *'
    | | |   | | `-ImplicitCastExpr 0x1ba236ff338 <col:17> 'unsigned int' <LValueToRValue>
    | | |   | |   `-DeclRefExpr 0x1ba236ff300 <col:17> 'unsigned int' lvalue Var 0x1ba236fa4d8 'i' 'unsigned int'
    | | |   | `-ImplicitCastExpr 0x1ba236ff430 <col:22, col:33> 'u8':'unsigned char' <LValueToRValue>
    | | |   |   `-ArraySubscriptExpr 0x1ba236ff410 <col:22, col:33> 'u8':'unsigned char' lvalue
    | | |   |     |-ImplicitCastExpr 0x1ba236ff3e0 <col:22, col:30> 'u8 *' <ArrayToPointerDecay>
    | | |   |     | `-MemberExpr 0x1ba236ff390 <col:22, col:30> 'u8 [16]' lvalue .c 0x1ba236fa2e0
    | | |   |     |   `-DeclRefExpr 0x1ba236ff370 <col:22> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1ba236fa420 'scratch' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    | | |   |     `-ImplicitCastExpr 0x1ba236ff3f8 <col:32> 'unsigned int' <LValueToRValue>
    | | |   |       `-DeclRefExpr 0x1ba236ff3c0 <col:32> 'unsigned int' lvalue Var 0x1ba236fa4d8 'i' 'unsigned int'
    | | |   `-BinaryOperator 0x1ba236ff578 <line:92:13, col:28> 'u8':'unsigned char' '='
    | | |     |-ArraySubscriptExpr 0x1ba236ff508 <col:13, col:24> 'u8':'unsigned char' lvalue
    | | |     | |-ImplicitCastExpr 0x1ba236ff4d8 <col:13, col:21> 'u8 *' <ArrayToPointerDecay>
    | | |     | | `-MemberExpr 0x1ba236ff488 <col:13, col:21> 'u8 [16]' lvalue .c 0x1ba236fa2e0
    | | |     | |   `-DeclRefExpr 0x1ba236ff468 <col:13> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1ba236fa420 'scratch' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    | | |     | `-ImplicitCastExpr 0x1ba236ff4f0 <col:23> 'unsigned int' <LValueToRValue>
    | | |     |   `-DeclRefExpr 0x1ba236ff4b8 <col:23> 'unsigned int' lvalue Var 0x1ba236fa4d8 'i' 'unsigned int'
    | | |     `-ImplicitCastExpr 0x1ba236ff560 <col:28> 'u8':'unsigned char' <LValueToRValue>
    | | |       `-DeclRefExpr 0x1ba236ff528 <col:28> 'u8':'unsigned char' lvalue Var 0x1ba236ff1b8 'c' 'u8':'unsigned char'
    | | |-CompoundAssignOperator 0x1ba236ff770 <line:94:9, col:34> 'u64':'unsigned long long' '^=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    | | | |-ArraySubscriptExpr 0x1ba236ff688 <col:9, col:20> 'u64':'unsigned long long' lvalue
    | | | | |-ImplicitCastExpr 0x1ba236ff670 <col:9, col:17> 'u64 *' <ArrayToPointerDecay>
    | | | | | `-MemberExpr 0x1ba236ff618 <col:9, col:17> 'u64 [2]' lvalue .u 0x1ba236fa170
    | | | | |   `-DeclRefExpr 0x1ba236ff5f8 <col:9> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1ba236fa420 'scratch' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    | | | | `-IntegerLiteral 0x1ba236ff648 <col:19> 'int' 0
    | | | `-ImplicitCastExpr 0x1ba236ff758 <col:25, col:34> 'u64':'unsigned long long' <LValueToRValue>
    | | |   `-ArraySubscriptExpr 0x1ba236ff738 <col:25, col:34> 'u64':'unsigned long long' lvalue
    | | |     |-ImplicitCastExpr 0x1ba236ff720 <col:25, col:31> 'u64 *' <ArrayToPointerDecay>
    | | |     | `-MemberExpr 0x1ba236ff6c8 <col:25, col:31> 'u64 [2]' lvalue .u 0x1ba236fa170
    | | |     |   `-DeclRefExpr 0x1ba236ff6a8 <col:25> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1ba236fa398 'tweak' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    | | |     `-IntegerLiteral 0x1ba236ff6f8 <col:33> 'int' 0
    | | |-CompoundAssignOperator 0x1ba236ff918 <line:95:9, col:34> 'u64':'unsigned long long' '^=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    | | | |-ArraySubscriptExpr 0x1ba236ff830 <col:9, col:20> 'u64':'unsigned long long' lvalue
    | | | | |-ImplicitCastExpr 0x1ba236ff818 <col:9, col:17> 'u64 *' <ArrayToPointerDecay>
    | | | | | `-MemberExpr 0x1ba236ff7c0 <col:9, col:17> 'u64 [2]' lvalue .u 0x1ba236fa170
    | | | | |   `-DeclRefExpr 0x1ba236ff7a0 <col:9> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1ba236fa420 'scratch' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    | | | | `-IntegerLiteral 0x1ba236ff7f0 <col:19> 'int' 1
    | | | `-ImplicitCastExpr 0x1ba236ff900 <col:25, col:34> 'u64':'unsigned long long' <LValueToRValue>
    | | |   `-ArraySubscriptExpr 0x1ba236ff8e0 <col:25, col:34> 'u64':'unsigned long long' lvalue
    | | |     |-ImplicitCastExpr 0x1ba236ff8c8 <col:25, col:31> 'u64 *' <ArrayToPointerDecay>
    | | |     | `-MemberExpr 0x1ba236ff870 <col:25, col:31> 'u64 [2]' lvalue .u 0x1ba236fa170
    | | |     |   `-DeclRefExpr 0x1ba236ff850 <col:25> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1ba236fa398 'tweak' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    | | |     `-IntegerLiteral 0x1ba236ff8a0 <col:33> 'int' 1
    | | |-CompoundAssignOperator 0x1ba236ffb60 <line:97:9, col:34> 'u64':'unsigned long long' '^=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    | | | |-ArraySubscriptExpr 0x1ba236ffa78 <col:9, col:20> 'u64':'unsigned long long' lvalue
    | | | | |-ImplicitCastExpr 0x1ba236ffa60 <col:9, col:17> 'u64 *' <ArrayToPointerDecay>
    | | | | | `-MemberExpr 0x1ba236ffa08 <col:9, col:17> 'u64 [2]' lvalue .u 0x1ba236fa170
    | | | | |   `-DeclRefExpr 0x1ba236ff9e8 <col:9> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1ba236fa420 'scratch' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    | | | | `-IntegerLiteral 0x1ba236ffa38 <col:19> 'int' 0
    | | | `-ImplicitCastExpr 0x1ba236ffb48 <col:25, col:34> 'u64':'unsigned long long' <LValueToRValue>
    | | |   `-ArraySubscriptExpr 0x1ba236ffb28 <col:25, col:34> 'u64':'unsigned long long' lvalue
    | | |     |-ImplicitCastExpr 0x1ba236ffb10 <col:25, col:31> 'u64 *' <ArrayToPointerDecay>
    | | |     | `-MemberExpr 0x1ba236ffab8 <col:25, col:31> 'u64 [2]' lvalue .u 0x1ba236fa170
    | | |     |   `-DeclRefExpr 0x1ba236ffa98 <col:25> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1ba236fa398 'tweak' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    | | |     `-IntegerLiteral 0x1ba236ffae8 <col:33> 'int' 0
    | | |-CompoundAssignOperator 0x1ba236ffd08 <line:98:9, col:34> 'u64':'unsigned long long' '^=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    | | | |-ArraySubscriptExpr 0x1ba236ffc20 <col:9, col:20> 'u64':'unsigned long long' lvalue
    | | | | |-ImplicitCastExpr 0x1ba236ffc08 <col:9, col:17> 'u64 *' <ArrayToPointerDecay>
    | | | | | `-MemberExpr 0x1ba236ffbb0 <col:9, col:17> 'u64 [2]' lvalue .u 0x1ba236fa170
    | | | | |   `-DeclRefExpr 0x1ba236ffb90 <col:9> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1ba236fa420 'scratch' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    | | | | `-IntegerLiteral 0x1ba236ffbe0 <col:19> 'int' 1
    | | | `-ImplicitCastExpr 0x1ba236ffcf0 <col:25, col:34> 'u64':'unsigned long long' <LValueToRValue>
    | | |   `-ArraySubscriptExpr 0x1ba236ffcd0 <col:25, col:34> 'u64':'unsigned long long' lvalue
    | | |     |-ImplicitCastExpr 0x1ba236ffcb8 <col:25, col:31> 'u64 *' <ArrayToPointerDecay>
    | | |     | `-MemberExpr 0x1ba236ffc60 <col:25, col:31> 'u64 [2]' lvalue .u 0x1ba236fa170
    | | |     |   `-DeclRefExpr 0x1ba236ffc40 <col:25> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1ba236fa398 'tweak' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    | | |     `-IntegerLiteral 0x1ba236ffc90 <col:33> 'int' 1
    | | `-CallExpr 0x1ba236ffe80 <line:99:9, col:39> 'void *'
    | |   |-ImplicitCastExpr 0x1ba236ffe68 <col:9> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
    | |   | `-DeclRefExpr 0x1ba236ffd38 <col:9> 'void *(void *, const void *, unsigned long long)' Function 0x1ba23687638 'memcpy' 'void *(void *, const void *, unsigned long long)'
    | |   |-ImplicitCastExpr 0x1ba236ffeb8 <col:16, col:22> 'void *' <BitCast>
    | |   | `-BinaryOperator 0x1ba236ffdb8 <col:16, col:22> 'unsigned char *' '-'
    | |   |   |-ImplicitCastExpr 0x1ba236ffda0 <col:16> 'unsigned char *' <LValueToRValue>
    | |   |   | `-DeclRefExpr 0x1ba236ffd58 <col:16> 'unsigned char *' lvalue ParmVar 0x1ba237019e0 'out' 'unsigned char *'
    | |   |   `-IntegerLiteral 0x1ba236ffd78 <col:22> 'int' 16
    | |   |-ImplicitCastExpr 0x1ba236ffee8 <col:26, col:34> 'const void *' <BitCast>
    | |   | `-ImplicitCastExpr 0x1ba236ffed0 <col:26, col:34> 'u8 *' <ArrayToPointerDecay>
    | |   |   `-MemberExpr 0x1ba236ffdf8 <col:26, col:34> 'u8 [16]' lvalue .c 0x1ba236fa2e0
    | |   |     `-DeclRefExpr 0x1ba236ffdd8 <col:26> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1ba236fa420 'scratch' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    | |   `-ImplicitCastExpr 0x1ba236fff00 <col:37> 'unsigned long long' <IntegralCast>
    | |     `-IntegerLiteral 0x1ba236ffe28 <col:37> 'int' 16
    | `-CompoundStmt 0x1ba2370af48 <line:100:12, line:154:5>
    |   |-DeclStmt 0x1ba237040c8 <line:101:9, line:104:17>
    |   | |-RecordDecl 0x1ba236fff58 <line:101:9, line:104:9> line:101:9 union definition
    |   | | |-FieldDecl 0x1ba23703ee0 <line:102:13, col:20> col:17 referenced u 'u64 [2]'
    |   | | `-FieldDecl 0x1ba23703f98 <line:103:13, col:20> col:16 referenced c 'u8 [16]'
    |   | `-VarDecl 0x1ba23704048 <line:101:9, line:104:11> col:11 used tweak1 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:101:9)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:101:9)'
    |   |-IfStmt 0x1ba23709610 <line:106:9, line:125:9> has_else
    |   | |-ImplicitCastExpr 0x1ba23704130 <line:106:13, col:23> 'char' <LValueToRValue>
    |   | | `-MemberExpr 0x1ba23704100 <col:13, col:23> 'const char' lvalue .little 0x1ba23701e70
    |   | |   `-DeclRefExpr 0x1ba237040e0 <col:13> 'const union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:19:11)':'const union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:19:11)' lvalue Var 0x1ba23701f28 'is_endian' 'const union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:19:11)':'const union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:19:11)'
    |   | |-CompoundStmt 0x1ba23704bf8 <col:31, line:113:9>
    |   | | |-DeclStmt 0x1ba23704260 <line:107:13, col:36>
    |   | | | |-VarDecl 0x1ba23704160 <col:13, col:26> col:26 used carry 'unsigned int'
    |   | | | `-VarDecl 0x1ba237041e0 <col:13, col:33> col:33 used res 'unsigned int'
    |   | | |-BinaryOperator 0x1ba237044a0 <line:109:13, col:50> 'unsigned int' '='
    |   | | | |-DeclRefExpr 0x1ba23704278 <col:13> 'unsigned int' lvalue Var 0x1ba237041e0 'res' 'unsigned int'
    |   | | | `-ImplicitCastExpr 0x1ba23704488 <col:19, col:50> 'unsigned int' <IntegralCast>
    |   | | |   `-BinaryOperator 0x1ba23704468 <col:19, col:50> 'int' '&'
    |   | | |     |-IntegerLiteral 0x1ba237042b0 <col:19> 'int' 135
    |   | | |     `-ParenExpr 0x1ba23704448 <col:26, col:50> 'int'
    |   | | |       `-BinaryOperator 0x1ba23704428 <col:27, col:48> 'int' '>>'
    |   | | |         |-ParenExpr 0x1ba237043e0 <col:27, col:43> 'int'
    |   | | |         | `-CStyleCastExpr 0x1ba237043b8 <col:28, col:42> 'int' <IntegralCast>
    |   | | |         |   `-ImplicitCastExpr 0x1ba237043a0 <col:33, col:42> 'u32':'unsigned int' <LValueToRValue> part_of_explicit_cast
    |   | | |         |     `-ArraySubscriptExpr 0x1ba23704368 <col:33, col:42> 'u32':'unsigned int' lvalue
    |   | | |         |       |-ImplicitCastExpr 0x1ba23704350 <col:33, col:39> 'u32 *' <ArrayToPointerDecay>
    |   | | |         |       | `-MemberExpr 0x1ba237042f8 <col:33, col:39> 'u32 [4]' lvalue .d 0x1ba236fa228
    |   | | |         |       |   `-DeclRefExpr 0x1ba237042d8 <col:33> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1ba236fa398 'tweak' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    |   | | |         |       `-IntegerLiteral 0x1ba23704328 <col:41> 'int' 3
    |   | | |         `-IntegerLiteral 0x1ba23704400 <col:48> 'int' 31
    |   | | |-BinaryOperator 0x1ba23704688 <line:110:13, col:52> 'unsigned int' '='
    |   | | | |-DeclRefExpr 0x1ba237044c0 <col:13> 'unsigned int' lvalue Var 0x1ba23704160 'carry' 'unsigned int'
    |   | | | `-CStyleCastExpr 0x1ba23704660 <col:21, col:52> 'unsigned int' <IntegralCast>
    |   | | |   `-ParenExpr 0x1ba23704640 <col:35, col:52> 'u64':'unsigned long long'
    |   | | |     `-BinaryOperator 0x1ba237045e8 <col:36, col:50> 'u64':'unsigned long long' '>>'
    |   | | |       |-ImplicitCastExpr 0x1ba237045d0 <col:36, col:45> 'u64':'unsigned long long' <LValueToRValue>
    |   | | |       | `-ArraySubscriptExpr 0x1ba23704588 <col:36, col:45> 'u64':'unsigned long long' lvalue
    |   | | |       |   |-ImplicitCastExpr 0x1ba23704570 <col:36, col:42> 'u64 *' <ArrayToPointerDecay>
    |   | | |       |   | `-MemberExpr 0x1ba23704518 <col:36, col:42> 'u64 [2]' lvalue .u 0x1ba236fa170
    |   | | |       |   |   `-DeclRefExpr 0x1ba237044f8 <col:36> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1ba236fa398 'tweak' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    |   | | |       |   `-IntegerLiteral 0x1ba23704548 <col:44> 'int' 0
    |   | | |       `-IntegerLiteral 0x1ba237045a8 <col:50> 'int' 63
    |   | | |-BinaryOperator 0x1ba23704910 <line:111:13, col:47> 'u64':'unsigned long long' '='
    |   | | | |-ArraySubscriptExpr 0x1ba23704750 <col:13, col:23> 'u64':'unsigned long long' lvalue
    |   | | | | |-ImplicitCastExpr 0x1ba23704738 <col:13, col:20> 'u64 *' <ArrayToPointerDecay>
    |   | | | | | `-MemberExpr 0x1ba237046e0 <col:13, col:20> 'u64 [2]' lvalue .u 0x1ba23703ee0
    |   | | | | |   `-DeclRefExpr 0x1ba237046a8 <col:13> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:101:9)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:101:9)' lvalue Var 0x1ba23704048 'tweak1' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:101:9)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:101:9)'
    |   | | | | `-IntegerLiteral 0x1ba23704710 <col:22> 'int' 0
    |   | | | `-BinaryOperator 0x1ba237048f0 <col:27, col:47> 'unsigned long long' '^'
    |   | | |   |-ParenExpr 0x1ba23704880 <col:27, col:43> 'u64':'unsigned long long'
    |   | | |   | `-BinaryOperator 0x1ba23704860 <col:28, col:42> 'u64':'unsigned long long' '<<'
    |   | | |   |   |-ImplicitCastExpr 0x1ba23704848 <col:28, col:37> 'u64':'unsigned long long' <LValueToRValue>
    |   | | |   |   | `-ArraySubscriptExpr 0x1ba23704800 <col:28, col:37> 'u64':'unsigned long long' lvalue
    |   | | |   |   |   |-ImplicitCastExpr 0x1ba237047e8 <col:28, col:34> 'u64 *' <ArrayToPointerDecay>
    |   | | |   |   |   | `-MemberExpr 0x1ba23704790 <col:28, col:34> 'u64 [2]' lvalue .u 0x1ba236fa170
    |   | | |   |   |   |   `-DeclRefExpr 0x1ba23704770 <col:28> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1ba236fa398 'tweak' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    |   | | |   |   |   `-IntegerLiteral 0x1ba237047c0 <col:36> 'int' 0
    |   | | |   |   `-IntegerLiteral 0x1ba23704820 <col:42> 'int' 1
    |   | | |   `-ImplicitCastExpr 0x1ba237048d8 <col:47> 'unsigned long long' <IntegralCast>
    |   | | |     `-ImplicitCastExpr 0x1ba237048c0 <col:47> 'unsigned int' <LValueToRValue>
    |   | | |       `-DeclRefExpr 0x1ba237048a0 <col:47> 'unsigned int' lvalue Var 0x1ba237041e0 'res' 'unsigned int'
    |   | | `-BinaryOperator 0x1ba23704bd8 <line:112:13, col:47> 'u64':'unsigned long long' '='
    |   | |   |-ArraySubscriptExpr 0x1ba23704a18 <col:13, col:23> 'u64':'unsigned long long' lvalue
    |   | |   | |-ImplicitCastExpr 0x1ba23704a00 <col:13, col:20> 'u64 *' <ArrayToPointerDecay>
    |   | |   | | `-MemberExpr 0x1ba237049a8 <col:13, col:20> 'u64 [2]' lvalue .u 0x1ba23703ee0
    |   | |   | |   `-DeclRefExpr 0x1ba23704988 <col:13> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:101:9)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:101:9)' lvalue Var 0x1ba23704048 'tweak1' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:101:9)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:101:9)'
    |   | |   | `-IntegerLiteral 0x1ba237049d8 <col:22> 'int' 1
    |   | |   `-BinaryOperator 0x1ba23704bb8 <col:27, col:47> 'unsigned long long' '|'
    |   | |     |-ParenExpr 0x1ba23704b48 <col:27, col:43> 'u64':'unsigned long long'
    |   | |     | `-BinaryOperator 0x1ba23704b28 <col:28, col:42> 'u64':'unsigned long long' '<<'
    |   | |     |   |-ImplicitCastExpr 0x1ba23704b10 <col:28, col:37> 'u64':'unsigned long long' <LValueToRValue>
    |   | |     |   | `-ArraySubscriptExpr 0x1ba23704ac8 <col:28, col:37> 'u64':'unsigned long long' lvalue
    |   | |     |   |   |-ImplicitCastExpr 0x1ba23704ab0 <col:28, col:34> 'u64 *' <ArrayToPointerDecay>
    |   | |     |   |   | `-MemberExpr 0x1ba23704a58 <col:28, col:34> 'u64 [2]' lvalue .u 0x1ba236fa170
    |   | |     |   |   |   `-DeclRefExpr 0x1ba23704a38 <col:28> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1ba236fa398 'tweak' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    |   | |     |   |   `-IntegerLiteral 0x1ba23704a88 <col:36> 'int' 1
    |   | |     |   `-IntegerLiteral 0x1ba23704ae8 <col:42> 'int' 1
    |   | |     `-ImplicitCastExpr 0x1ba23704ba0 <col:47> 'unsigned long long' <IntegralCast>
    |   | |       `-ImplicitCastExpr 0x1ba23704b88 <col:47> 'unsigned int' <LValueToRValue>
    |   | |         `-DeclRefExpr 0x1ba23704b68 <col:47> 'unsigned int' lvalue Var 0x1ba23704160 'carry' 'unsigned int'
    |   | `-CompoundStmt 0x1ba237095e8 <line:113:16, line:125:9>
    |   |   |-DeclStmt 0x1ba23704ca8 <line:114:13, col:21>
    |   |   | `-VarDecl 0x1ba23704c40 <col:13, col:20> col:20 used c 'size_t':'unsigned long long'
    |   |   |-ForStmt 0x1ba23709328 <line:116:13, line:123:13>
    |   |   | |-BinaryOperator 0x1ba23704dd8 <line:116:18, col:29> 'unsigned int' ','
    |   |   | | |-BinaryOperator 0x1ba23704d38 <col:18, col:22> 'size_t':'unsigned long long' '='
    |   |   | | | |-DeclRefExpr 0x1ba23704cc0 <col:18> 'size_t':'unsigned long long' lvalue Var 0x1ba23704c40 'c' 'size_t':'unsigned long long'
    |   |   | | | `-ImplicitCastExpr 0x1ba23704d20 <col:22> 'size_t':'unsigned long long' <IntegralCast>
    |   |   | | |   `-IntegerLiteral 0x1ba23704cf8 <col:22> 'int' 0
    |   |   | | `-BinaryOperator 0x1ba23704db8 <col:25, col:29> 'unsigned int' '='
    |   |   | |   |-DeclRefExpr 0x1ba23704d58 <col:25> 'unsigned int' lvalue Var 0x1ba236fa4d8 'i' 'unsigned int'
    |   |   | |   `-ImplicitCastExpr 0x1ba23704da0 <col:29> 'unsigned int' <IntegralCast>
    |   |   | |     `-IntegerLiteral 0x1ba23704d78 <col:29> 'int' 0
    |   |   | |-<<<NULL>>>
    |   |   | |-BinaryOperator 0x1ba23708ed0 <col:32, col:36> 'int' '<'
    |   |   | | |-ImplicitCastExpr 0x1ba23704e40 <col:32> 'unsigned int' <LValueToRValue>
    |   |   | | | `-DeclRefExpr 0x1ba23704df8 <col:32> 'unsigned int' lvalue Var 0x1ba236fa4d8 'i' 'unsigned int'
    |   |   | | `-ImplicitCastExpr 0x1ba23704e58 <col:36> 'unsigned int' <IntegralCast>
    |   |   | |   `-IntegerLiteral 0x1ba23704e18 <col:36> 'int' 16
    |   |   | |-UnaryOperator 0x1ba23708f10 <col:40, col:42> 'unsigned int' prefix '++'
    |   |   | | `-DeclRefExpr 0x1ba23708ef0 <col:42> 'unsigned int' lvalue Var 0x1ba236fa4d8 'i' 'unsigned int'
    |   |   | `-CompoundStmt 0x1ba23709300 <col:45, line:123:13>
    |   |   |   |-CompoundAssignOperator 0x1ba237090c0 <line:120:17, col:46> 'size_t':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    |   |   |   | |-DeclRefExpr 0x1ba23708f28 <col:17> 'size_t':'unsigned long long' lvalue Var 0x1ba23704c40 'c' 'size_t':'unsigned long long'
    |   |   |   | `-BinaryOperator 0x1ba237090a0 <col:22, col:46> 'size_t':'unsigned long long' '<<'
    |   |   |   |   |-ParenExpr 0x1ba23709058 <col:22, col:41> 'size_t':'unsigned long long'
    |   |   |   |   | `-CStyleCastExpr 0x1ba23709030 <col:23, col:40> 'size_t':'unsigned long long' <IntegralCast>
    |   |   |   |   |   `-ImplicitCastExpr 0x1ba23709018 <col:31, col:40> 'u8':'unsigned char' <LValueToRValue> part_of_explicit_cast
    |   |   |   |   |     `-ArraySubscriptExpr 0x1ba23708fe8 <col:31, col:40> 'u8':'unsigned char' lvalue
    |   |   |   |   |       |-ImplicitCastExpr 0x1ba23708fb8 <col:31, col:37> 'u8 *' <ArrayToPointerDecay>
    |   |   |   |   |       | `-MemberExpr 0x1ba23708f68 <col:31, col:37> 'u8 [16]' lvalue .c 0x1ba236fa2e0
    |   |   |   |   |       |   `-DeclRefExpr 0x1ba23708f48 <col:31> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1ba236fa398 'tweak' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    |   |   |   |   |       `-ImplicitCastExpr 0x1ba23708fd0 <col:39> 'unsigned int' <LValueToRValue>
    |   |   |   |   |         `-DeclRefExpr 0x1ba23708f98 <col:39> 'unsigned int' lvalue Var 0x1ba236fa4d8 'i' 'unsigned int'
    |   |   |   |   `-IntegerLiteral 0x1ba23709078 <col:46> 'int' 1
    |   |   |   |-BinaryOperator 0x1ba23709220 <line:121:17, col:35> 'u8':'unsigned char' '='
    |   |   |   | |-ArraySubscriptExpr 0x1ba23709190 <col:17, col:27> 'u8':'unsigned char' lvalue
    |   |   |   | | |-ImplicitCastExpr 0x1ba23709160 <col:17, col:24> 'u8 *' <ArrayToPointerDecay>
    |   |   |   | | | `-MemberExpr 0x1ba23709110 <col:17, col:24> 'u8 [16]' lvalue .c 0x1ba23703f98
    |   |   |   | | |   `-DeclRefExpr 0x1ba237090f0 <col:17> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:101:9)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:101:9)' lvalue Var 0x1ba23704048 'tweak1' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:101:9)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:101:9)'
    |   |   |   | | `-ImplicitCastExpr 0x1ba23709178 <col:26> 'unsigned int' <LValueToRValue>
    |   |   |   | |   `-DeclRefExpr 0x1ba23709140 <col:26> 'unsigned int' lvalue Var 0x1ba236fa4d8 'i' 'unsigned int'
    |   |   |   | `-CStyleCastExpr 0x1ba237091f8 <col:31, col:35> 'u8':'unsigned char' <IntegralCast>
    |   |   |   |   `-ImplicitCastExpr 0x1ba237091e0 <col:35> 'size_t':'unsigned long long' <LValueToRValue> part_of_explicit_cast
    |   |   |   |     `-DeclRefExpr 0x1ba237091b0 <col:35> 'size_t':'unsigned long long' lvalue Var 0x1ba23704c40 'c' 'size_t':'unsigned long long'
    |   |   |   `-BinaryOperator 0x1ba237092e0 <line:122:17, col:26> 'size_t':'unsigned long long' '='
    |   |   |     |-DeclRefExpr 0x1ba23709240 <col:17> 'size_t':'unsigned long long' lvalue Var 0x1ba23704c40 'c' 'size_t':'unsigned long long'
    |   |   |     `-BinaryOperator 0x1ba237092c0 <col:21, col:26> 'size_t':'unsigned long long' '>>'
    |   |   |       |-ImplicitCastExpr 0x1ba237092a8 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
    |   |   |       | `-DeclRefExpr 0x1ba23709260 <col:21> 'size_t':'unsigned long long' lvalue Var 0x1ba23704c40 'c' 'size_t':'unsigned long long'
    |   |   |       `-IntegerLiteral 0x1ba23709280 <col:26> 'int' 8
    |   |   `-CompoundAssignOperator 0x1ba237095b8 <line:124:13, col:47> 'u8':'unsigned char' '^=' ComputeLHSTy='int' ComputeResultTy='int'
    |   |     |-ArraySubscriptExpr 0x1ba237093f0 <col:13, col:23> 'u8':'unsigned char' lvalue
    |   |     | |-ImplicitCastExpr 0x1ba237093d8 <col:13, col:20> 'u8 *' <ArrayToPointerDecay>
    |   |     | | `-MemberExpr 0x1ba23709380 <col:13, col:20> 'u8 [16]' lvalue .c 0x1ba23703f98
    |   |     | |   `-DeclRefExpr 0x1ba23709360 <col:13> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:101:9)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:101:9)' lvalue Var 0x1ba23704048 'tweak1' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:101:9)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:101:9)'
    |   |     | `-IntegerLiteral 0x1ba237093b0 <col:22> 'int' 0
    |   |     `-ImplicitCastExpr 0x1ba237095a0 <col:28, col:47> 'int' <IntegralCast>
    |   |       `-CStyleCastExpr 0x1ba23709578 <col:28, col:47> 'u8':'unsigned char' <IntegralCast>
    |   |         `-ParenExpr 0x1ba23709558 <col:32, col:47> 'unsigned long long'
    |   |           `-BinaryOperator 0x1ba23709508 <col:33, col:46> 'unsigned long long' '&'
    |   |             |-ImplicitCastExpr 0x1ba237094f0 <col:33> 'unsigned long long' <IntegralCast>
    |   |             | `-IntegerLiteral 0x1ba23709410 <col:33> 'int' 135
    |   |             `-ParenExpr 0x1ba237094d0 <col:40, col:46> 'unsigned long long'
    |   |               `-BinaryOperator 0x1ba237094b0 <col:41, col:45> 'unsigned long long' '-'
    |   |                 |-ImplicitCastExpr 0x1ba23709498 <col:41> 'unsigned long long' <IntegralCast>
    |   |                 | `-IntegerLiteral 0x1ba23709438 <col:41> 'int' 0
    |   |                 `-ImplicitCastExpr 0x1ba23709480 <col:45> 'size_t':'unsigned long long' <LValueToRValue>
    |   |                   `-DeclRefExpr 0x1ba23709460 <col:45> 'size_t':'unsigned long long' lvalue Var 0x1ba23704c40 'c' 'size_t':'unsigned long long'
    |   |-BinaryOperator 0x1ba237098c0 <line:131:9, col:52> 'u64':'unsigned long long' '='
    |   | |-ArraySubscriptExpr 0x1ba237096c8 <col:9, col:20> 'u64':'unsigned long long' lvalue
    |   | | |-ImplicitCastExpr 0x1ba237096b0 <col:9, col:17> 'u64 *' <ArrayToPointerDecay>
    |   | | | `-MemberExpr 0x1ba23709658 <col:9, col:17> 'u64 [2]' lvalue .u 0x1ba236fa170
    |   | | |   `-DeclRefExpr 0x1ba23709638 <col:9> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1ba236fa420 'scratch' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    |   | | `-IntegerLiteral 0x1ba23709688 <col:19> 'int' 0
    |   | `-BinaryOperator 0x1ba237098a0 <col:24, col:52> 'unsigned long long' '^'
    |   |   |-ImplicitCastExpr 0x1ba23709870 <col:24, col:38> 'u64':'unsigned long long' <LValueToRValue>
    |   |   | `-ArraySubscriptExpr 0x1ba237097a0 <col:24, col:38> 'u64':'unsigned long long' lvalue
    |   |   |   |-ParenExpr 0x1ba23709758 <col:24, col:35> 'u64 *'
    |   |   |   | `-CStyleCastExpr 0x1ba23709730 <col:25, col:32> 'u64 *' <BitCast>
    |   |   |   |   `-ImplicitCastExpr 0x1ba23709718 <col:32> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
    |   |   |   |     `-DeclRefExpr 0x1ba237096e8 <col:32> 'const unsigned char *' lvalue ParmVar 0x1ba23701930 'inp' 'const unsigned char *'
    |   |   |   `-IntegerLiteral 0x1ba23709778 <col:37> 'int' 0
    |   |   `-ImplicitCastExpr 0x1ba23709888 <col:42, col:52> 'u64':'unsigned long long' <LValueToRValue>
    |   |     `-ArraySubscriptExpr 0x1ba23709850 <col:42, col:52> 'u64':'unsigned long long' lvalue
    |   |       |-ImplicitCastExpr 0x1ba23709838 <col:42, col:49> 'u64 *' <ArrayToPointerDecay>
    |   |       | `-MemberExpr 0x1ba237097e0 <col:42, col:49> 'u64 [2]' lvalue .u 0x1ba23703ee0
    |   |       |   `-DeclRefExpr 0x1ba237097c0 <col:42> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:101:9)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:101:9)' lvalue Var 0x1ba23704048 'tweak1' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:101:9)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:101:9)'
    |   |       `-IntegerLiteral 0x1ba23709810 <col:51> 'int' 0
    |   |-BinaryOperator 0x1ba23709b68 <line:132:9, col:52> 'u64':'unsigned long long' '='
    |   | |-ArraySubscriptExpr 0x1ba23709970 <col:9, col:20> 'u64':'unsigned long long' lvalue
    |   | | |-ImplicitCastExpr 0x1ba23709958 <col:9, col:17> 'u64 *' <ArrayToPointerDecay>
    |   | | | `-MemberExpr 0x1ba23709900 <col:9, col:17> 'u64 [2]' lvalue .u 0x1ba236fa170
    |   | | |   `-DeclRefExpr 0x1ba237098e0 <col:9> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1ba236fa420 'scratch' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    |   | | `-IntegerLiteral 0x1ba23709930 <col:19> 'int' 1
    |   | `-BinaryOperator 0x1ba23709b48 <col:24, col:52> 'unsigned long long' '^'
    |   |   |-ImplicitCastExpr 0x1ba23709b18 <col:24, col:38> 'u64':'unsigned long long' <LValueToRValue>
    |   |   | `-ArraySubscriptExpr 0x1ba23709a48 <col:24, col:38> 'u64':'unsigned long long' lvalue
    |   |   |   |-ParenExpr 0x1ba23709a00 <col:24, col:35> 'u64 *'
    |   |   |   | `-CStyleCastExpr 0x1ba237099d8 <col:25, col:32> 'u64 *' <BitCast>
    |   |   |   |   `-ImplicitCastExpr 0x1ba237099c0 <col:32> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
    |   |   |   |     `-DeclRefExpr 0x1ba23709990 <col:32> 'const unsigned char *' lvalue ParmVar 0x1ba23701930 'inp' 'const unsigned char *'
    |   |   |   `-IntegerLiteral 0x1ba23709a20 <col:37> 'int' 1
    |   |   `-ImplicitCastExpr 0x1ba23709b30 <col:42, col:52> 'u64':'unsigned long long' <LValueToRValue>
    |   |     `-ArraySubscriptExpr 0x1ba23709af8 <col:42, col:52> 'u64':'unsigned long long' lvalue
    |   |       |-ImplicitCastExpr 0x1ba23709ae0 <col:42, col:49> 'u64 *' <ArrayToPointerDecay>
    |   |       | `-MemberExpr 0x1ba23709a88 <col:42, col:49> 'u64 [2]' lvalue .u 0x1ba23703ee0
    |   |       |   `-DeclRefExpr 0x1ba23709a68 <col:42> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:101:9)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:101:9)' lvalue Var 0x1ba23704048 'tweak1' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:101:9)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:101:9)'
    |   |       `-IntegerLiteral 0x1ba23709ab8 <col:51> 'int' 1
    |   |-CompoundAssignOperator 0x1ba23709da0 <line:135:9, col:35> 'u64':'unsigned long long' '^=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    |   | |-ArraySubscriptExpr 0x1ba23709cb8 <col:9, col:20> 'u64':'unsigned long long' lvalue
    |   | | |-ImplicitCastExpr 0x1ba23709ca0 <col:9, col:17> 'u64 *' <ArrayToPointerDecay>
    |   | | | `-MemberExpr 0x1ba23709c48 <col:9, col:17> 'u64 [2]' lvalue .u 0x1ba236fa170
    |   | | |   `-DeclRefExpr 0x1ba23709c28 <col:9> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1ba236fa420 'scratch' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    |   | | `-IntegerLiteral 0x1ba23709c78 <col:19> 'int' 0
    |   | `-ImplicitCastExpr 0x1ba23709d88 <col:25, col:35> 'u64':'unsigned long long' <LValueToRValue>
    |   |   `-ArraySubscriptExpr 0x1ba23709d68 <col:25, col:35> 'u64':'unsigned long long' lvalue
    |   |     |-ImplicitCastExpr 0x1ba23709d50 <col:25, col:32> 'u64 *' <ArrayToPointerDecay>
    |   |     | `-MemberExpr 0x1ba23709cf8 <col:25, col:32> 'u64 [2]' lvalue .u 0x1ba23703ee0
    |   |     |   `-DeclRefExpr 0x1ba23709cd8 <col:25> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:101:9)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:101:9)' lvalue Var 0x1ba23704048 'tweak1' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:101:9)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:101:9)'
    |   |     `-IntegerLiteral 0x1ba23709d28 <col:34> 'int' 0
    |   |-CompoundAssignOperator 0x1ba23705f18 <line:136:9, col:35> 'u64':'unsigned long long' '^=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    |   | |-ArraySubscriptExpr 0x1ba23709e60 <col:9, col:20> 'u64':'unsigned long long' lvalue
    |   | | |-ImplicitCastExpr 0x1ba23709e48 <col:9, col:17> 'u64 *' <ArrayToPointerDecay>
    |   | | | `-MemberExpr 0x1ba23709df0 <col:9, col:17> 'u64 [2]' lvalue .u 0x1ba236fa170
    |   | | |   `-DeclRefExpr 0x1ba23709dd0 <col:9> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1ba236fa420 'scratch' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    |   | | `-IntegerLiteral 0x1ba23709e20 <col:19> 'int' 1
    |   | `-ImplicitCastExpr 0x1ba23705f00 <col:25, col:35> 'u64':'unsigned long long' <LValueToRValue>
    |   |   `-ArraySubscriptExpr 0x1ba23705ee0 <col:25, col:35> 'u64':'unsigned long long' lvalue
    |   |     |-ImplicitCastExpr 0x1ba23705ec8 <col:25, col:32> 'u64 *' <ArrayToPointerDecay>
    |   |     | `-MemberExpr 0x1ba23709ea0 <col:25, col:32> 'u64 [2]' lvalue .u 0x1ba23703ee0
    |   |     |   `-DeclRefExpr 0x1ba23709e80 <col:25> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:101:9)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:101:9)' lvalue Var 0x1ba23704048 'tweak1' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:101:9)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:101:9)'
    |   |     `-IntegerLiteral 0x1ba23705ea0 <col:34> 'int' 1
    |   |-ForStmt 0x1ba23706580 <line:138:9, line:142:9>
    |   | |-BinaryOperator 0x1ba23705fa8 <line:138:14, col:18> 'unsigned int' '='
    |   | | |-DeclRefExpr 0x1ba23705f48 <col:14> 'unsigned int' lvalue Var 0x1ba236fa4d8 'i' 'unsigned int'
    |   | | `-ImplicitCastExpr 0x1ba23705f90 <col:18> 'unsigned int' <IntegralCast>
    |   | |   `-IntegerLiteral 0x1ba23705f68 <col:18> 'int' 0
    |   | |-<<<NULL>>>
    |   | |-BinaryOperator 0x1ba23706050 <col:21, col:25> 'int' '<'
    |   | | |-ImplicitCastExpr 0x1ba23706038 <col:21> 'unsigned long long' <IntegralCast>
    |   | | | `-ImplicitCastExpr 0x1ba23706008 <col:21> 'unsigned int' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x1ba23705fc8 <col:21> 'unsigned int' lvalue Var 0x1ba236fa4d8 'i' 'unsigned int'
    |   | | `-ImplicitCastExpr 0x1ba23706020 <col:25> 'size_t':'unsigned long long' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x1ba23705fe8 <col:25> 'size_t':'unsigned long long' lvalue ParmVar 0x1ba23701a58 'len' 'size_t':'unsigned long long'
    |   | |-UnaryOperator 0x1ba23706090 <col:30, col:32> 'unsigned int' prefix '++'
    |   | | `-DeclRefExpr 0x1ba23706070 <col:32> 'unsigned int' lvalue Var 0x1ba236fa4d8 'i' 'unsigned int'
    |   | `-CompoundStmt 0x1ba23706558 <col:35, line:142:9>
    |   |   |-DeclStmt 0x1ba23706228 <line:139:13, col:31>
    |   |   | `-VarDecl 0x1ba237060b8 <col:13, col:30> col:16 used c 'u8':'unsigned char' cinit
    |   |   |   `-ImplicitCastExpr 0x1ba23706210 <col:20, col:30> 'unsigned char' <LValueToRValue>
    |   |   |     `-ArraySubscriptExpr 0x1ba237061f0 <col:20, col:30> 'const unsigned char' lvalue
    |   |   |       |-ImplicitCastExpr 0x1ba237061d8 <col:20> 'const unsigned char *' <LValueToRValue>
    |   |   |       | `-DeclRefExpr 0x1ba23706120 <col:20> 'const unsigned char *' lvalue ParmVar 0x1ba23701930 'inp' 'const unsigned char *'
    |   |   |       `-BinaryOperator 0x1ba237061b8 <col:24, col:29> 'unsigned int' '+'
    |   |   |         |-ImplicitCastExpr 0x1ba237061a0 <col:24> 'unsigned int' <IntegralCast>
    |   |   |         | `-IntegerLiteral 0x1ba23706140 <col:24> 'int' 16
    |   |   |         `-ImplicitCastExpr 0x1ba23706188 <col:29> 'unsigned int' <LValueToRValue>
    |   |   |           `-DeclRefExpr 0x1ba23706168 <col:29> 'unsigned int' lvalue Var 0x1ba236fa4d8 'i' 'unsigned int'
    |   |   |-BinaryOperator 0x1ba23706408 <line:140:13, col:38> 'unsigned char' '='
    |   |   | |-ArraySubscriptExpr 0x1ba23706310 <col:13, col:23> 'unsigned char' lvalue
    |   |   | | |-ImplicitCastExpr 0x1ba237062f8 <col:13> 'unsigned char *' <LValueToRValue>
    |   |   | | | `-DeclRefExpr 0x1ba23706240 <col:13> 'unsigned char *' lvalue ParmVar 0x1ba237019e0 'out' 'unsigned char *'
    |   |   | | `-BinaryOperator 0x1ba237062d8 <col:17, col:22> 'unsigned int' '+'
    |   |   | |   |-ImplicitCastExpr 0x1ba237062c0 <col:17> 'unsigned int' <IntegralCast>
    |   |   | |   | `-IntegerLiteral 0x1ba23706260 <col:17> 'int' 16
    |   |   | |   `-ImplicitCastExpr 0x1ba237062a8 <col:22> 'unsigned int' <LValueToRValue>
    |   |   | |     `-DeclRefExpr 0x1ba23706288 <col:22> 'unsigned int' lvalue Var 0x1ba236fa4d8 'i' 'unsigned int'
    |   |   | `-ImplicitCastExpr 0x1ba237063f0 <col:27, col:38> 'u8':'unsigned char' <LValueToRValue>
    |   |   |   `-ArraySubscriptExpr 0x1ba237063d0 <col:27, col:38> 'u8':'unsigned char' lvalue
    |   |   |     |-ImplicitCastExpr 0x1ba237063a0 <col:27, col:35> 'u8 *' <ArrayToPointerDecay>
    |   |   |     | `-MemberExpr 0x1ba23706350 <col:27, col:35> 'u8 [16]' lvalue .c 0x1ba236fa2e0
    |   |   |     |   `-DeclRefExpr 0x1ba23706330 <col:27> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1ba236fa420 'scratch' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    |   |   |     `-ImplicitCastExpr 0x1ba237063b8 <col:37> 'unsigned int' <LValueToRValue>
    |   |   |       `-DeclRefExpr 0x1ba23706380 <col:37> 'unsigned int' lvalue Var 0x1ba236fa4d8 'i' 'unsigned int'
    |   |   `-BinaryOperator 0x1ba23706538 <line:141:13, col:28> 'u8':'unsigned char' '='
    |   |     |-ArraySubscriptExpr 0x1ba237064c8 <col:13, col:24> 'u8':'unsigned char' lvalue
    |   |     | |-ImplicitCastExpr 0x1ba23706498 <col:13, col:21> 'u8 *' <ArrayToPointerDecay>
    |   |     | | `-MemberExpr 0x1ba23706448 <col:13, col:21> 'u8 [16]' lvalue .c 0x1ba236fa2e0
    |   |     | |   `-DeclRefExpr 0x1ba23706428 <col:13> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1ba236fa420 'scratch' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    |   |     | `-ImplicitCastExpr 0x1ba237064b0 <col:23> 'unsigned int' <LValueToRValue>
    |   |     |   `-DeclRefExpr 0x1ba23706478 <col:23> 'unsigned int' lvalue Var 0x1ba236fa4d8 'i' 'unsigned int'
    |   |     `-ImplicitCastExpr 0x1ba23706520 <col:28> 'u8':'unsigned char' <LValueToRValue>
    |   |       `-DeclRefExpr 0x1ba237064e8 <col:28> 'u8':'unsigned char' lvalue Var 0x1ba237060b8 'c' 'u8':'unsigned char'
    |   |-CompoundAssignOperator 0x1ba23706730 <line:143:9, col:34> 'u64':'unsigned long long' '^=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    |   | |-ArraySubscriptExpr 0x1ba23706648 <col:9, col:20> 'u64':'unsigned long long' lvalue
    |   | | |-ImplicitCastExpr 0x1ba23706630 <col:9, col:17> 'u64 *' <ArrayToPointerDecay>
    |   | | | `-MemberExpr 0x1ba237065d8 <col:9, col:17> 'u64 [2]' lvalue .u 0x1ba236fa170
    |   | | |   `-DeclRefExpr 0x1ba237065b8 <col:9> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1ba236fa420 'scratch' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    |   | | `-IntegerLiteral 0x1ba23706608 <col:19> 'int' 0
    |   | `-ImplicitCastExpr 0x1ba23706718 <col:25, col:34> 'u64':'unsigned long long' <LValueToRValue>
    |   |   `-ArraySubscriptExpr 0x1ba237066f8 <col:25, col:34> 'u64':'unsigned long long' lvalue
    |   |     |-ImplicitCastExpr 0x1ba237066e0 <col:25, col:31> 'u64 *' <ArrayToPointerDecay>
    |   |     | `-MemberExpr 0x1ba23706688 <col:25, col:31> 'u64 [2]' lvalue .u 0x1ba236fa170
    |   |     |   `-DeclRefExpr 0x1ba23706668 <col:25> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1ba236fa398 'tweak' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    |   |     `-IntegerLiteral 0x1ba237066b8 <col:33> 'int' 0
    |   |-CompoundAssignOperator 0x1ba237068d8 <line:144:9, col:34> 'u64':'unsigned long long' '^=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    |   | |-ArraySubscriptExpr 0x1ba237067f0 <col:9, col:20> 'u64':'unsigned long long' lvalue
    |   | | |-ImplicitCastExpr 0x1ba237067d8 <col:9, col:17> 'u64 *' <ArrayToPointerDecay>
    |   | | | `-MemberExpr 0x1ba23706780 <col:9, col:17> 'u64 [2]' lvalue .u 0x1ba236fa170
    |   | | |   `-DeclRefExpr 0x1ba23706760 <col:9> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1ba236fa420 'scratch' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    |   | | `-IntegerLiteral 0x1ba237067b0 <col:19> 'int' 1
    |   | `-ImplicitCastExpr 0x1ba237068c0 <col:25, col:34> 'u64':'unsigned long long' <LValueToRValue>
    |   |   `-ArraySubscriptExpr 0x1ba237068a0 <col:25, col:34> 'u64':'unsigned long long' lvalue
    |   |     |-ImplicitCastExpr 0x1ba23706888 <col:25, col:31> 'u64 *' <ArrayToPointerDecay>
    |   |     | `-MemberExpr 0x1ba23706830 <col:25, col:31> 'u64 [2]' lvalue .u 0x1ba236fa170
    |   |     |   `-DeclRefExpr 0x1ba23706810 <col:25> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1ba236fa398 'tweak' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    |   |     `-IntegerLiteral 0x1ba23706860 <col:33> 'int' 1
    |   |-BinaryOperator 0x1ba23706c30 <line:151:9, col:51> 'u64':'unsigned long long' '='
    |   | |-ArraySubscriptExpr 0x1ba23706a60 <col:9, col:23> 'u64':'unsigned long long' lvalue
    |   | | |-ParenExpr 0x1ba23706a18 <col:9, col:20> 'u64 *'
    |   | | | `-CStyleCastExpr 0x1ba237069f0 <col:10, col:17> 'u64 *' <BitCast>
    |   | | |   `-ImplicitCastExpr 0x1ba237069d8 <col:17> 'unsigned char *' <LValueToRValue> part_of_explicit_cast
    |   | | |     `-DeclRefExpr 0x1ba237069a8 <col:17> 'unsigned char *' lvalue ParmVar 0x1ba237019e0 'out' 'unsigned char *'
    |   | | `-IntegerLiteral 0x1ba23706a38 <col:22> 'int' 0
    |   | `-BinaryOperator 0x1ba23706c10 <col:27, col:51> 'unsigned long long' '^'
    |   |   |-ImplicitCastExpr 0x1ba23706be0 <col:27, col:38> 'u64':'unsigned long long' <LValueToRValue>
    |   |   | `-ArraySubscriptExpr 0x1ba23706b10 <col:27, col:38> 'u64':'unsigned long long' lvalue
    |   |   |   |-ImplicitCastExpr 0x1ba23706af8 <col:27, col:35> 'u64 *' <ArrayToPointerDecay>
    |   |   |   | `-MemberExpr 0x1ba23706aa0 <col:27, col:35> 'u64 [2]' lvalue .u 0x1ba236fa170
    |   |   |   |   `-DeclRefExpr 0x1ba23706a80 <col:27> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1ba236fa420 'scratch' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    |   |   |   `-IntegerLiteral 0x1ba23706ad0 <col:37> 'int' 0
    |   |   `-ImplicitCastExpr 0x1ba23706bf8 <col:42, col:51> 'u64':'unsigned long long' <LValueToRValue>
    |   |     `-ArraySubscriptExpr 0x1ba23706bc0 <col:42, col:51> 'u64':'unsigned long long' lvalue
    |   |       |-ImplicitCastExpr 0x1ba23706ba8 <col:42, col:48> 'u64 *' <ArrayToPointerDecay>
    |   |       | `-MemberExpr 0x1ba23706b50 <col:42, col:48> 'u64 [2]' lvalue .u 0x1ba236fa170
    |   |       |   `-DeclRefExpr 0x1ba23706b30 <col:42> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1ba236fa398 'tweak' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    |   |       `-IntegerLiteral 0x1ba23706b80 <col:50> 'int' 0
    |   `-BinaryOperator 0x1ba2370af28 <line:152:9, col:51> 'u64':'unsigned long long' '='
    |     |-ArraySubscriptExpr 0x1ba23706d08 <col:9, col:23> 'u64':'unsigned long long' lvalue
    |     | |-ParenExpr 0x1ba23706cc0 <col:9, col:20> 'u64 *'
    |     | | `-CStyleCastExpr 0x1ba23706c98 <col:10, col:17> 'u64 *' <BitCast>
    |     | |   `-ImplicitCastExpr 0x1ba23706c80 <col:17> 'unsigned char *' <LValueToRValue> part_of_explicit_cast
    |     | |     `-DeclRefExpr 0x1ba23706c50 <col:17> 'unsigned char *' lvalue ParmVar 0x1ba237019e0 'out' 'unsigned char *'
    |     | `-IntegerLiteral 0x1ba23706ce0 <col:22> 'int' 1
    |     `-BinaryOperator 0x1ba2370af08 <col:27, col:51> 'unsigned long long' '^'
    |       |-ImplicitCastExpr 0x1ba23706e88 <col:27, col:38> 'u64':'unsigned long long' <LValueToRValue>
    |       | `-ArraySubscriptExpr 0x1ba23706db8 <col:27, col:38> 'u64':'unsigned long long' lvalue
    |       |   |-ImplicitCastExpr 0x1ba23706da0 <col:27, col:35> 'u64 *' <ArrayToPointerDecay>
    |       |   | `-MemberExpr 0x1ba23706d48 <col:27, col:35> 'u64 [2]' lvalue .u 0x1ba236fa170
    |       |   |   `-DeclRefExpr 0x1ba23706d28 <col:27> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1ba236fa420 'scratch' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    |       |   `-IntegerLiteral 0x1ba23706d78 <col:37> 'int' 1
    |       `-ImplicitCastExpr 0x1ba2370aef0 <col:42, col:51> 'u64':'unsigned long long' <LValueToRValue>
    |         `-ArraySubscriptExpr 0x1ba23706e68 <col:42, col:51> 'u64':'unsigned long long' lvalue
    |           |-ImplicitCastExpr 0x1ba23706e50 <col:42, col:48> 'u64 *' <ArrayToPointerDecay>
    |           | `-MemberExpr 0x1ba23706df8 <col:42, col:48> 'u64 [2]' lvalue .u 0x1ba236fa170
    |           |   `-DeclRefExpr 0x1ba23706dd8 <col:42> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1ba236fa398 'tweak' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    |           `-IntegerLiteral 0x1ba23706e28 <col:50> 'int' 1
    `-ReturnStmt 0x1ba2370b000 <line:156:5, col:12>
      `-IntegerLiteral 0x1ba2370afd8 <col:12> 'int' 0
