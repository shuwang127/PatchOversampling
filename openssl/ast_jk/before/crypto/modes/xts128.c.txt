TranslationUnitDecl 0x1852b341068 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1852b341900 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1852b341600 '__int128'
|-TypedefDecl 0x1852b341970 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1852b341620 'unsigned __int128'
|-TypedefDecl 0x1852b341ca8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1852b341a60 'struct __NSConstantString_tag'
|   `-Record 0x1852b3419c8 '__NSConstantString_tag'
|-TypedefDecl 0x1852b341d18 <<invalid sloc>> <invalid sloc> implicit referenced size_t 'unsigned long long'
| `-BuiltinType 0x1852b341240 'unsigned long long'
|-TypedefDecl 0x1852b341db0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1852b341d70 'char *'
|   `-BuiltinType 0x1852b341100 'char'
|-TypedefDecl 0x1852b341e20 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1852b341d70 'char *'
|   `-BuiltinType 0x1852b341100 'char'
|-TypedefDecl 0x1852b341e90 <.//openssl//file_jk/before\crypto\modes/modes_lcl.h:13:1, col:17> col:17 i64 'long long'
| `-BuiltinType 0x1852b3411a0 'long long'
|-TypedefDecl 0x1852b341f00 <line:14:1, col:26> col:26 referenced u64 'unsigned long long'
| `-BuiltinType 0x1852b341240 'unsigned long long'
|-TypedefDecl 0x1852b341f70 <line:26:1, col:22> col:22 referenced u32 'unsigned int'
| `-BuiltinType 0x1852b341200 'unsigned int'
|-TypedefDecl 0x1852b341fe0 <line:27:1, col:23> col:23 referenced u8 'unsigned char'
| `-BuiltinType 0x1852b3411c0 'unsigned char'
|-RecordDecl 0x1852cc9dde0 <line:94:32, line:96:1> line:94:32 struct definition
| |-FieldDecl 0x1852cc9ded0 <line:95:5, col:9> col:9 hi 'u64':'unsigned long long'
| `-FieldDecl 0x1852cc9df38 <col:5, col:13> col:13 lo 'u64':'unsigned long long'
|-TypedefDecl 0x1852cc9dfe8 <line:94:24, line:96:3> col:3 referenced u128 'struct u128':'u128'
| `-ElaboratedType 0x1852cc9df90 'struct u128' sugar
|   `-RecordType 0x1852cc9de80 'u128'
|     `-Record 0x1852cc9dde0 ''
|-RecordDecl 0x1852cc9e058 <line:107:1, line:130:1> line:107:8 invalid struct gcm128_context definition
| |-RecordDecl 0x1852cc9e110 <line:109:5, line:114:5> line:109:5 union definition
| | |-FieldDecl 0x1852cc9e2a8 <line:110:9, col:16> col:13 u 'u64 [2]'
| | |-FieldDecl 0x1852cc9e3f8 <line:111:9, col:16> col:13 d 'u32 [4]'
| | |-FieldDecl 0x1852cc9e548 <line:112:9, col:16> col:12 c 'u8 [16]'
| | `-FieldDecl 0x1852cc9e6c8 <line:113:9, col:37> col:16 t 'size_t [2]'
| |-FieldDecl 0x1852cc9e778 <line:109:5, line:114:7> col:7 Yi 'union (anonymous union at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x1852cc9e7f0 <line:109:5, line:114:11> col:11 EKi 'union (anonymous union at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x1852cc9e868 <line:109:5, line:114:16> col:16 EK0 'union (anonymous union at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x1852cc9e8e0 <line:109:5, line:114:21> col:21 len 'union (anonymous union at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x1852cc9e958 <line:109:5, line:114:26> col:26 Xi 'union (anonymous union at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x1852cc9e9d0 <line:109:5, line:114:30> col:30 H 'union (anonymous union at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x1852cc9eb88 <line:122:5, col:19> col:10 Htable 'u128 [16]'
| |-FieldDecl 0x1852cca0078 <line:123:5, col:52> col:12 gmult 'void (*)(u64 *, const u128 *)'
| |-FieldDecl 0x1852cca0588 <line:124:5, line:125:30> line:124:12 ghash 'void (*)(u64 *, const u128 *, const u8 *, size_t)'
| |-FieldDecl 0x1852cca05f8 <line:127:5, col:18> col:18 mres 'unsigned int'
| |-FieldDecl 0x1852cca0668 <col:5, col:24> col:24 ares 'unsigned int'
| |-FieldDecl 0x1852cca06d8 <line:128:5, col:16> col:16 invalid block 'int'
| `-FieldDecl 0x1852cca0748 <line:129:5, col:11> col:11 key 'void *'
|-RecordDecl 0x1852cca0808 <line:132:1, line:135:1> line:132:8 invalid struct xts128_context definition
| |-FieldDecl 0x1852cca08d8 <line:133:5, col:11> col:11 key1 'void *'
| |-FieldDecl 0x1852cca0948 <col:5, col:18> col:18 key2 'void *'
| |-FieldDecl 0x1852cca09b8 <line:134:5, col:16> col:16 invalid block1 'int'
| `-FieldDecl 0x1852cca0a28 <col:5, col:24> col:24 invalid block2 'int'
|-RecordDecl 0x1852cca0a80 <line:137:1, line:145:1> line:137:8 invalid struct ccm128_context definition
| |-RecordDecl 0x1852cca0b40 <line:138:5, line:141:5> line:138:5 union definition
| | |-FieldDecl 0x1852cca0c60 <line:139:9, col:16> col:13 u 'u64 [2]'
| | `-FieldDecl 0x1852cca0d18 <line:140:9, col:16> col:12 c 'u8 [16]'
| |-FieldDecl 0x1852cc99da0 <line:138:5, line:141:7> col:7 nonce 'union (anonymous union at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:138:5)':'union ccm128_context::(anonymous at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:138:5)'
| |-FieldDecl 0x1852cc99e18 <line:138:5, line:141:14> col:14 cmac 'union (anonymous union at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:138:5)':'union ccm128_context::(anonymous at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:138:5)'
| |-FieldDecl 0x1852cc99e80 <line:142:5, col:9> col:9 blocks 'u64':'unsigned long long'
| |-FieldDecl 0x1852cc99ef0 <line:143:5, col:16> col:16 invalid block 'int'
| `-FieldDecl 0x1852cc99f60 <line:144:5, col:11> col:11 key 'void *'
|-RecordDecl 0x1852cc9a010 <line:149:9, line:152:1> line:149:9 union definition
| |-FieldDecl 0x1852cc9a130 <line:150:5, col:12> col:9 a 'u64 [2]'
| `-FieldDecl 0x1852cc9a1f0 <line:151:5, col:23> col:19 c 'unsigned char [16]'
|-TypedefDecl 0x1852cc9a2a8 <line:149:1, line:152:3> col:3 referenced OCB_BLOCK 'union OCB_BLOCK':'OCB_BLOCK'
| `-ElaboratedType 0x1852cc9a250 'union OCB_BLOCK' sugar
|   `-RecordType 0x1852cc9a0b0 'OCB_BLOCK'
|     `-Record 0x1852cc9a010 ''
|-RecordDecl 0x1852cc9a318 <line:163:1, line:185:1> line:163:8 invalid struct ocb128_context definition
| |-FieldDecl 0x1852cc9a3e8 <line:165:5, col:16> col:16 invalid encrypt 'int'
| |-FieldDecl 0x1852cc9a458 <line:166:5, col:16> col:16 invalid decrypt 'int'
| |-FieldDecl 0x1852cc9a4c8 <line:167:5, col:11> col:11 keyenc 'void *'
| |-FieldDecl 0x1852cc9a538 <line:168:5, col:11> col:11 keydec 'void *'
| |-FieldDecl 0x1852cc9a5a8 <line:169:5, col:14> col:14 invalid stream 'int'
| |-FieldDecl 0x1852cc9a610 <line:171:5, col:12> col:12 l_index 'size_t':'unsigned long long'
| |-FieldDecl 0x1852cc9a678 <line:172:5, col:12> col:12 max_l_index 'size_t':'unsigned long long'
| |-FieldDecl 0x1852cc9a700 <line:173:5, col:15> col:15 l_star 'OCB_BLOCK':'OCB_BLOCK'
| |-FieldDecl 0x1852cc9a768 <line:174:5, col:15> col:15 l_dollar 'OCB_BLOCK':'OCB_BLOCK'
| |-FieldDecl 0x1852cc9a828 <line:175:5, col:16> col:16 l 'OCB_BLOCK *'
| |-RecordDecl 0x1852cc9a880 <line:177:5, line:184:5> line:177:5 struct definition
| | |-FieldDecl 0x1852cc9a950 <line:178:9, col:13> col:13 blocks_hashed 'u64':'unsigned long long'
| | |-FieldDecl 0x1852cc9a9b8 <line:179:9, col:13> col:13 blocks_processed 'u64':'unsigned long long'
| | |-FieldDecl 0x1852cc9aa20 <line:180:9, col:19> col:19 offset_aad 'OCB_BLOCK':'OCB_BLOCK'
| | |-FieldDecl 0x1852cc9aa88 <line:181:9, col:19> col:19 sum 'OCB_BLOCK':'OCB_BLOCK'
| | |-FieldDecl 0x1852cc9aaf0 <line:182:9, col:19> col:19 offset 'OCB_BLOCK':'OCB_BLOCK'
| | `-FieldDecl 0x1852cc9ab58 <line:183:9, col:19> col:19 checksum 'OCB_BLOCK':'OCB_BLOCK'
| `-FieldDecl 0x1852cc9ac08 <line:177:5, line:184:7> col:7 sess 'struct (anonymous struct at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:177:5)':'struct ocb128_context::(anonymous at .//openssl//file_jk/before\crypto\modes/modes_lcl.h:177:5)'
|-TypedefDecl 0x1852cc9acc8 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x1852b341240 'unsigned long long'
|-TypedefDecl 0x1852cc9ad38 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x1852b341d70 'char *'
|   `-BuiltinType 0x1852b341100 'char'
|-FunctionDecl 0x1852ce63950 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1852ce639f0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x1852ce63a60 <col:21> Implicit
|-FunctionDecl 0x1852ce63ab8 prev 0x1852ce63950 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1852ce637e8 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x1852ce63ba8 <col:21> Inherited Implicit
|-TypedefDecl 0x1852ce63be8 prev 0x1852b341d18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x1852b341240 'unsigned long long'
|-TypedefDecl 0x1852ce63c90 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x1852ce63c60 'size_t' sugar
|   |-Typedef 0x1852ce63be8 'size_t'
|   `-BuiltinType 0x1852b341240 'unsigned long long'
|-TypedefDecl 0x1852ce63d00 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x1852b3411a0 'long long'
|-TypedefDecl 0x1852ce63d70 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x1852b3411a0 'long long'
|-TypedefDecl 0x1852ce63de0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x1852b3411e0 'unsigned short'
|-TypedefDecl 0x1852ce63e50 <line:541:1, col:24> col:24 wint_t 'unsigned short'
| `-BuiltinType 0x1852b3411e0 'unsigned short'
|-TypedefDecl 0x1852ce63ec0 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x1852b3411e0 'unsigned short'
|-TypedefDecl 0x1852ce63f30 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x1852b341160 'int'
|-TypedefDecl 0x1852ce63fa0 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x1852b341180 'long'
|-TypedefDecl 0x1852ce64010 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x1852b3411a0 'long long'
|-TypedefDecl 0x1852ce640a0 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x1852ce64070 '__time64_t' sugar
|   |-Typedef 0x1852ce64010 '__time64_t'
|   `-BuiltinType 0x1852b3411a0 'long long'
|-FunctionDecl 0x1852ce64218 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x1852ce64438 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x1852ce609c0 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x1852ce64578 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x1852ce645f0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x1852ce64668 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x1852ce646e8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x1852ce60760 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x1852ce60aa0 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x1852ce60b60 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x1852ce60cd0 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x1852ce60c80 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x1852ce60c20 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x1852ce60b40 'struct threadlocaleinfostruct'
|       `-Record 0x1852ce6d800 'threadlocaleinfostruct'
|-TypedefDecl 0x1852ce60de0 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x1852ce60d90 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x1852ce60d30 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x1852ce60c00 'struct threadmbcinfostruct'
|       `-Record 0x1852ce60b60 'threadmbcinfostruct'
|-RecordDecl 0x1852ce60e38 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x1852ce60ef0 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x1852ce60fb0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1852ce61040 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x1852ce610d0 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x1852ce61188 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x1852ce61130 'struct localeinfo_struct' sugar
|   `-RecordType 0x1852ce60f90 'struct localeinfo_struct'
|     `-Record 0x1852ce60ef0 'localeinfo_struct'
|-TypedefDecl 0x1852ce61260 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x1852ce61210 'struct localeinfo_struct *'
|   `-ElaboratedType 0x1852ce61130 'struct localeinfo_struct' sugar
|     `-RecordType 0x1852ce60f90 'struct localeinfo_struct'
|       `-Record 0x1852ce60ef0 'localeinfo_struct'
|-RecordDecl 0x1852ce612d8 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x1852ce61390 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1852ce61408 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x1852ce614c8 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x1852ce61560 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x1852ce615d0 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x1852ce61688 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x1852ce61630 'struct localerefcount' sugar
|   `-RecordType 0x1852ce61370 'struct localerefcount'
|     `-Record 0x1852ce612d8 'localerefcount'
|-RecordDecl 0x1852ce6d800 prev 0x1852ce60aa0 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x1852ce6d880 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1852ce6d8f8 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x1852ce6d968 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x1852ce6d9d8 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x1852ce6da48 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x1852ce6dc08 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x1852ce6dc78 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x1852ce6dce8 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x1852ce6dd58 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x1852ce6ddc8 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x1852ce6de38 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x1852ce6de90 parent 0x1852b341068 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x1852ce6e020 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x1852ce6e090 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x1852ce6e100 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x1852ce6e170 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x1852ce6e1e0 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x1852ce6e250 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x1852ce6e360 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x1852ce6e498 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x1852ce6e548 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x1852ce6e4f0 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x1852ce60b40 'struct threadlocaleinfostruct'
|     `-Record 0x1852ce6d800 'threadlocaleinfostruct'
|-FunctionDecl 0x1852ce739f0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:47:9, col:142> col:25 _memccpy 'void *(void *, const void *, int, size_t) __attribute__((cdecl))':'void *(void *, const void *, int, size_t)'
| |-ParmVarDecl 0x1852ce6e5d0 <col:69, col:76> col:76 _Dst 'void *'
| |-ParmVarDecl 0x1852ce6e680 <col:87, col:100> col:100 _Src 'const void *'
| |-ParmVarDecl 0x1852ce6e700 <col:111, col:115> col:115 _Val 'int'
| `-ParmVarDecl 0x1852ce6e778 <col:126, col:133> col:133 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1852ce73db8 <line:48:54> col:54 implicit memchr 'void *(const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1852ce73e58 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1852ce73ec0 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1852ce73f28 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1852ce73fa8 prev 0x1852ce73db8 <col:38, col:150> col:54 memchr 'void *(const void *, int, unsigned long long)'
| |-ParmVarDecl 0x1852ce73ae0 <col:94, col:107> col:107 _Buf 'const void *'
| |-ParmVarDecl 0x1852ce73b60 <col:119, col:123> col:123 _Val 'int'
| `-ParmVarDecl 0x1852ce73bd8 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1852ce74368 <line:49:24, col:162> col:40 _memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x1852ce74090 <col:77, col:90> col:90 _Buf1 'const void *'
| |-ParmVarDecl 0x1852ce74110 <col:125, col:138> col:138 _Buf2 'const void *'
| `-ParmVarDecl 0x1852ce74188 <col:150, col:157> col:157 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1852ce778a0 <line:50:24, col:192> col:40 _memicmp_l 'int (const void *, const void *, size_t, _locale_t) __attribute__((cdecl))':'int (const void *, const void *, size_t, _locale_t)'
| |-ParmVarDecl 0x1852ce74450 <col:79, col:92> col:92 _Buf1 'const void *'
| |-ParmVarDecl 0x1852ce744d0 <col:127, col:140> col:140 _Buf2 'const void *'
| |-ParmVarDecl 0x1852ce74548 <col:152, col:159> col:159 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1852ce745e0 <col:175, col:185> col:185 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1852ce77ba8 <line:51:32> col:32 implicit memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1852ce77c48 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1852ce77cb0 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1852ce77d18 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1852ce77d98 prev 0x1852ce77ba8 <col:16, col:144> col:32 memcmp 'int (const void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x1852ce77990 <col:63, col:76> col:76 _Buf1 'const void *'
| |-ParmVarDecl 0x1852ce77a10 <col:107, col:120> col:120 _Buf2 'const void *'
| `-ParmVarDecl 0x1852ce77a88 <col:132, col:139> col:139 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1852ce78158 <line:55:17> col:17 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1852ce781f8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1852ce78260 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1852ce782c8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1852ce78348 prev 0x1852ce78158 <col:1, col:127> col:17 used memcpy 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x1852ce77e80 <col:54, col:61> col:61 _Dst 'void *'
| |-ParmVarDecl 0x1852ce77f00 <col:91, col:104> col:104 _Src 'const void *'
| `-ParmVarDecl 0x1852ce77f78 <col:115, col:122> col:122 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1852ce787e8 <line:57:9, col:191> col:26 memcpy_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x1852ce78458 <col:82, col:89> col:89 _Dst 'void *'
| |-ParmVarDecl 0x1852ce784f0 <col:100, col:108> col:108 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1852ce78570 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x1852ce785e8 <col:174, col:182> col:182 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1852ce76bb8 <line:94:25> col:25 implicit memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1852ce76c58 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1852ce76cc0 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1852ce76d28 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1852ce76da8 prev 0x1852ce76bb8 <col:9, col:107> col:25 memset 'void *(void *, int, unsigned long long)'
| |-ParmVarDecl 0x1852ce768e0 <col:62, col:69> col:69 _Dst 'void *'
| |-ParmVarDecl 0x1852ce76960 <col:80, col:84> col:84 _Val 'int'
| `-ParmVarDecl 0x1852ce769d8 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1852ce77228 <line:98:57> col:57 implicit memccpy 'void *(void *, const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1852ce772c8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1852ce77330 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1852ce77398 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1852ce77400 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1852ce77488 prev 0x1852ce77228 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:98:187> col:57 memccpy 'void *(void *, const void *, int, unsigned long long)'
| |-ParmVarDecl 0x1852ce76f70 <col:95, col:102> col:102 _Dst 'void *'
| |-ParmVarDecl 0x1852ce76ff0 <col:136, col:149> col:149 _Src 'const void *'
| |-ParmVarDecl 0x1852ce77070 <col:160, col:164> col:164 _Val 'int'
| |-ParmVarDecl 0x1852ce770e8 <col:175, col:182> col:182 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1852ce77548 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memccpy. See online help for details." ""
|-FunctionDecl 0x1852ce78950 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:99:190> col:69 memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x1852ce77710 <col:105, col:118> col:118 _Buf1 'const void *'
| |-ParmVarDecl 0x1852ce77790 <col:153, col:166> col:166 _Buf2 'const void *'
| |-ParmVarDecl 0x1852ce77808 <col:178, col:185> col:185 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1852ce78a08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memicmp. See online help for details." ""
|-FunctionDecl 0x1852ce78e00 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:105:40, col:144> col:56 _strset_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x1852ce78b30 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x1852ce78ba8 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1852ce78c28 <col:134, col:138> col:138 _Value 'int'
|-FunctionDecl 0x1852ce791d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:107:88 _strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x1852ce78fe0 <col:108, col:114> col:114 _Dest 'char *'
| |-ParmVarDecl 0x1852ce79060 <col:126, col:131> col:131 _Value 'int'
| `-DeprecatedAttr 0x1852ce79280 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1852ce79690 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:109:40, col:158> col:56 strcpy_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x1852ce793c8 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x1852ce79440 <col:112, col:120> col:120 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1852ce794c0 <col:141, col:154> col:154 _Src 'const char *'
|-FunctionDecl 0x1852ce75a70 <line:112:88> col:88 implicit strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1852ce75b10 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x1852ce75b78 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1852ce75bf0 prev 0x1852ce75a70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:112:88 strcpy 'char *(char *, const char *)'
| |-ParmVarDecl 0x1852ce75880 <col:142, col:148> col:148 _Dest 'char *'
| |-ParmVarDecl 0x1852ce75900 <col:162, col:176> col:176 _Source 'const char *'
| `-DeprecatedAttr 0x1852ce75ca0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1852ce75ff8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:114:40, col:161> col:56 strcat_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x1852ce75de8 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x1852ce75e60 <col:115, col:123> col:123 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1852ce75ee0 <col:144, col:157> col:157 _Src 'const char *'
|-FunctionDecl 0x1852ce76320 <line:118:88> col:88 implicit strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1852ce763c0 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x1852ce76428 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1852ce764a0 prev 0x1852ce76320 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:118:88 strcat 'char *(char *, const char *)'
| |-ParmVarDecl 0x1852ce761a0 <col:170, col:176> col:176 _Dest 'char *'
| |-ParmVarDecl 0x1852ce76220 <col:190, col:204> col:204 _Source 'const char *'
| `-DeprecatedAttr 0x1852ce76550 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1852ce72850 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:120:32> col:32 implicit strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x1852ce728f0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1852ce72958 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1852ce729d0 prev 0x1852ce72850 <col:16, col:91> col:32 strcmp 'int (const char *, const char *)'
| |-ParmVarDecl 0x1852ce76698 <col:46, col:59> col:59 _Str1 'const char *'
| `-ParmVarDecl 0x1852ce76718 <col:73, col:86> col:86 _Str2 'const char *'
|-FunctionDecl 0x1852ce72c20 <line:121:32> col:32 implicit strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x1852ce72cc0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1852ce72d30 prev 0x1852ce72c20 <col:16, col:63> col:32 strlen 'unsigned long long (const char *)'
| `-ParmVarDecl 0x1852ce72ab0 <col:46, col:59> col:59 _Str 'const char *'
|-FunctionDecl 0x1852ce73028 <line:125:1, col:92> col:17 used strnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x1852ce72e08 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x1852ce72e80 <col:76, col:83> col:83 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1852ce73278 <line:127:16, line:133:1> line:130:19 strnlen_s 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' static inline
| |-ParmVarDecl 0x1852ce73108 <col:56, col:69> col:69 used _Str 'const char *'
| |-ParmVarDecl 0x1852ce73180 <col:80, col:87> col:87 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x1852ce735a8 <line:131:1, line:133:1>
|   `-ReturnStmt 0x1852ce73598 <line:132:5, col:51>
|     `-ConditionalOperator 0x1852ce73568 <col:12, col:51> 'unsigned long long'
|       |-ParenExpr 0x1852ce733d8 <col:12, col:20> 'int'
|       | `-BinaryOperator 0x1852ce733b8 <col:13, col:19> 'int' '=='
|       |   |-ImplicitCastExpr 0x1852ce73388 <col:13> 'const char *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x1852ce73340 <col:13> 'const char *' lvalue ParmVar 0x1852ce73108 '_Str' 'const char *'
|       |   `-ImplicitCastExpr 0x1852ce733a0 <col:19> 'const char *' <NullToPointer>
|       |     `-IntegerLiteral 0x1852ce73360 <col:19> 'int' 0
|       |-ImplicitCastExpr 0x1852ce73550 <col:24> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x1852ce733f8 <col:24> 'int' 0
|       `-CallExpr 0x1852ce734f0 <col:28, col:51> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x1852ce734d8 <col:28> 'size_t (*)(const char *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x1852ce73420 <col:28> 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' Function 0x1852ce73028 'strnlen' 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
|         |-ImplicitCastExpr 0x1852ce73520 <col:36> 'const char *' <LValueToRValue>
|         | `-DeclRefExpr 0x1852ce73440 <col:36> 'const char *' lvalue ParmVar 0x1852ce73108 '_Str' 'const char *'
|         `-ImplicitCastExpr 0x1852ce73538 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x1852ce73460 <col:42> 'size_t':'unsigned long long' lvalue ParmVar 0x1852ce73180 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x1852ce79908 <line:136:28, col:209> col:44 memmove_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x1852ce735d8 <col:100, col:107> col:107 _Dst 'void *'
| |-ParmVarDecl 0x1852ce73650 <col:118, col:126> col:126 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1852ce736d0 <col:168, col:181> col:181 _Src 'const void *'
| `-ParmVarDecl 0x1852ce73748 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1852ce79c10 <line:139:67> col:67 implicit memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1852ce79cb0 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1852ce79d18 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1852ce79d80 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1852ce79e00 prev 0x1852ce79c10 <col:51, col:186> col:67 memmove 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x1852ce799f8 <col:109, col:116> col:116 _Dst 'void *'
| |-ParmVarDecl 0x1852ce79a78 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x1852ce79af0 <col:174, col:181> col:181 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1852ce7a038 <line:146:24, col:76> col:40 _strdup 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| `-ParmVarDecl 0x1852ce79ee8 <col:59, col:72> col:72 _Src 'const char *'
|-FunctionDecl 0x1852ce7a300 <line:152:54> col:54 implicit strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x1852ce7a3a0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1852ce7a408 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1852ce7a480 prev 0x1852ce7a300 <col:38, col:100> col:54 strchr 'char *(const char *, int)'
| |-ParmVarDecl 0x1852ce7a110 <col:68, col:81> col:81 _Str 'const char *'
| `-ParmVarDecl 0x1852ce7a190 <col:92, col:96> col:96 _Val 'int'
|-FunctionDecl 0x1852ce7a6e0 <line:153:24, col:103> col:40 _stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1852ce7a560 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x1852ce7a5e0 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x1852ce7a950 <line:154:24, col:103> col:40 _strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1852ce7a7c0 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x1852ce7a840 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x1852ce7ad08 <line:155:24, col:133> col:40 _stricmp_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x1852ce7aa30 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x1852ce7aab0 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x1852ce7ab28 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1852ce7af70 <line:156:24, col:103> col:40 strcoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1852ce7adf0 <col:56, col:69> col:69 _Str1 'const char *'
| `-ParmVarDecl 0x1852ce7ae70 <col:84, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x1852ce7b268 <line:157:24, col:133> col:40 _strcoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x1852ce7b050 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x1852ce7b0d0 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x1852ce7b148 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1852ce7b4d0 <line:158:24, col:104> col:40 _stricoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1852ce7b350 <col:58, col:71> col:71 _Str1 'const char *'
| `-ParmVarDecl 0x1852ce7b3d0 <col:86, col:99> col:99 _Str2 'const char *'
|-FunctionDecl 0x1852ce7b7c8 <line:159:24, col:134> col:40 _stricoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x1852ce7b5b0 <col:60, col:73> col:73 _Str1 'const char *'
| |-ParmVarDecl 0x1852ce7b630 <col:88, col:101> col:101 _Str2 'const char *'
| `-ParmVarDecl 0x1852ce7b6a8 <col:117, col:127> col:127 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1852ce35a88 <line:160:24, col:167> col:40 _strncoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1852ce357b0 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1852ce35830 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x1852ce358a8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1852ce35ef0 <line:161:24, col:195> col:40 _strncoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1852ce35b70 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1852ce35bf0 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x1852ce35c68 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1852ce35ce0 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1852ce361f8 <line:162:24, col:167> col:40 _strnicoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1852ce35fe0 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1852ce36060 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x1852ce360d8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1852ce36590 <line:163:24, col:196> col:40 _strnicoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1852ce362e0 <col:80, col:93> col:93 _Str1 'const char *'
| |-ParmVarDecl 0x1852ce36360 <col:127, col:140> col:140 _Str2 'const char *'
| |-ParmVarDecl 0x1852ce363d8 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1852ce36450 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1852ced5018 <line:164:40> col:40 implicit strcspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x1852ced50b8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1852ced5120 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1852ced5198 prev 0x1852ced5018 <col:24, col:104> col:40 strcspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x1852ce36680 <col:56, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x1852ce36700 <col:83, col:96> col:96 _Control 'const char *'
|-FunctionDecl 0x1852ced5450 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:165:118> col:77 _strerror 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x1852ced5370 <col:98, col:111> col:111 _ErrMsg 'const char *'
| `-DeprecatedAttr 0x1852ced54f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1852ced58d0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:166:28, col:155> col:44 _strerror_s 'errno_t (char *, size_t, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *)'
| |-ParmVarDecl 0x1852ced5640 <col:85, col:92> col:92 _Buf 'char *'
| |-ParmVarDecl 0x1852ced56b8 <col:103, col:110> col:110 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1852ced5738 <col:135, col:148> col:148 _ErrMsg 'const char *'
|-FunctionDecl 0x1852ced5be8 <line:168:76> col:76 implicit strerror 'char *(int)' extern
| `-ParmVarDecl 0x1852ced5c88 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1852ced5cf8 prev 0x1852ced5be8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:168:93> col:76 strerror 'char *(int)'
| |-ParmVarDecl 0x1852ced5ab0 <col:90> col:93 'int'
| `-DeprecatedAttr 0x1852ced5da0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1852ced4110 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:170:28, col:139> col:44 strerror_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x1852ced3f00 <col:84, col:91> col:91 _Buf 'char *'
| |-ParmVarDecl 0x1852ced3f78 <col:102, col:109> col:109 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1852ced3ff8 <col:128, col:132> col:132 _ErrNum 'int'
|-FunctionDecl 0x1852ced4418 <line:173:28, col:109> col:44 _strlwr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x1852ced41f8 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x1852ced4270 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1852ced4708 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:175:79 _strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1852ced45b8 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x1852ced47b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1852ced4bc0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:176:28, col:139> col:44 _strlwr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1852ced48f8 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x1852ced4970 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1852ced49e8 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1852ced2f90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:178:82 _strlwr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x1852ced4d68 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x1852ced4de0 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1852ced3040 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1852ced34f8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:180:40, col:206> col:56 strncat_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x1852ced3188 <col:98, col:105> col:105 _Dst 'char *'
| |-ParmVarDecl 0x1852ced3200 <col:116, col:124> col:124 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1852ced3280 <col:165, col:178> col:178 _Src 'const char *'
| `-ParmVarDecl 0x1852ced32f8 <col:189, col:197> col:197 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1852ced3978 <line:186:83> col:83 implicit strncat 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1852ced3a18 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1852ced3a80 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1852ced3ae8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1852ced3b68 prev 0x1852ced3978 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:186:83 strncat 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1852ced36a8 <col:161, col:167> col:167 _Dest 'char *'
| |-ParmVarDecl 0x1852ced3728 <col:198, col:212> col:212 _Source 'const char *'
| |-ParmVarDecl 0x1852ced37a0 <col:226, col:234> col:234 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1852ced3c20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1852cecdf40 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:188:40> col:40 implicit strncmp 'int (const char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1852cecdfe0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1852cece048 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1852cece0b0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1852cece130 prev 0x1852cecdf40 <col:24, col:163> col:40 strncmp 'int (const char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1852ced3d68 <col:75, col:88> col:88 _Str1 'const char *'
| |-ParmVarDecl 0x1852ced3de8 <col:122, col:135> col:135 _Str2 'const char *'
| `-ParmVarDecl 0x1852ced3e60 <col:147, col:154> col:154 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1852cece430 <line:189:24, col:165> col:40 _strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1852cece218 <col:77, col:90> col:90 _Str1 'const char *'
| |-ParmVarDecl 0x1852cece298 <col:124, col:137> col:137 _Str2 'const char *'
| `-ParmVarDecl 0x1852cece310 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1852cece7c8 <line:190:24, col:195> col:40 _strnicmp_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1852cece518 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1852cece598 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x1852cece610 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1852cece688 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1852ceceb60 <line:192:40, col:203> col:56 strncpy_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x1852cece8b8 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x1852cece930 <col:113, col:121> col:121 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1852cece9b0 <col:162, col:175> col:175 _Src 'const char *'
| `-ParmVarDecl 0x1852cecea28 <col:186, col:194> col:194 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1852ced1f68 <line:195:83> col:83 implicit strncpy 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1852ced2008 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1852ced2070 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1852ced20d8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1852ced2158 prev 0x1852ced1f68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:195:83 strncpy 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1852ceced10 <col:167, col:173> col:173 _Dest 'char *'
| |-ParmVarDecl 0x1852ceced90 <col:204, col:218> col:218 _Source 'const char *'
| |-ParmVarDecl 0x1852cecee08 <col:232, col:240> col:240 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1852ced2210 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1852ced26c8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:196:40, col:174> col:56 _strnset_s 'errno_t (char *, size_t, int, size_t) __attribute__((cdecl))':'errno_t (char *, size_t, int, size_t)'
| |-ParmVarDecl 0x1852ced2358 <col:99, col:106> col:106 _Str 'char *'
| |-ParmVarDecl 0x1852ced23d0 <col:117, col:124> col:124 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1852ced2450 <col:143, col:147> col:147 _Val 'int'
| `-ParmVarDecl 0x1852ced24c8 <col:158, col:165> col:165 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1852ced2b48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:198:83 _strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x1852ced2878 <col:163, col:169> col:169 _Dest 'char *'
| |-ParmVarDecl 0x1852ced28f8 <col:181, col:186> col:186 _Val 'int'
| |-ParmVarDecl 0x1852ced2970 <col:197, col:205> col:205 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1852ced2c00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1852ced5f90 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:199:54> col:54 implicit strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x1852ced6030 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1852ced6098 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1852ced6110 prev 0x1852ced5f90 <col:38, col:116> col:54 strpbrk 'char *(const char *, const char *)'
| |-ParmVarDecl 0x1852ced2d48 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x1852ced2dc8 <col:95, col:108> col:108 _Control 'const char *'
|-FunctionDecl 0x1852ced6370 <line:200:54> col:54 implicit strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x1852ced6410 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1852ced6478 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1852ced64f0 prev 0x1852ced6370 <col:38, col:100> col:54 strrchr 'char *(const char *, int)'
| |-ParmVarDecl 0x1852ced61f0 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x1852ced6270 <col:93, col:97> col:97 _Ch 'int'
|-FunctionDecl 0x1852ced66b0 <line:201:9, col:54> col:25 _strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| `-ParmVarDecl 0x1852ced65d0 <col:43, col:50> col:50 _Str 'char *'
|-FunctionDecl 0x1852ced6900 <line:202:40> col:40 implicit strspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x1852ced69a0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1852ced6a08 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1852ced6a80 prev 0x1852ced6900 <col:24, col:101> col:40 strspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x1852ced6788 <col:54, col:67> col:67 _Str 'const char *'
| `-ParmVarDecl 0x1852ced6808 <col:80, col:93> col:93 _Control 'const char *'
|-FunctionDecl 0x1852ced6ce0 <line:203:70> col:70 implicit strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x1852ced6d80 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1852ced6de8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1852ced6e60 prev 0x1852ced6ce0 <col:54, col:130> col:70 strstr 'char *(const char *, const char *)'
| |-ParmVarDecl 0x1852ced6b60 <col:84, col:97> col:97 _Str 'const char *'
| `-ParmVarDecl 0x1852ced6be0 <col:110, col:123> col:123 _SubStr 'const char *'
|-FunctionDecl 0x1852ced0130 <line:204:74> col:74 implicit strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1852ced01d0 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x1852ced0238 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1852ced02b0 prev 0x1852ced0130 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:204:134> col:74 strtok 'char *(char *, const char *)'
| |-ParmVarDecl 0x1852cecffb0 <col:95, col:102> col:102 _Str 'char *'
| |-ParmVarDecl 0x1852ced0030 <col:115, col:128> col:128 _Delim 'const char *'
| `-DeprecatedAttr 0x1852ced0360 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1852ced0748 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:206:36, col:162> col:52 strtok_s 'char *(char *, const char *, char **) __attribute__((cdecl))':'char *(char *, const char *, char **)'
| |-ParmVarDecl 0x1852ced04a8 <col:75, col:82> col:82 _Str 'char *'
| |-ParmVarDecl 0x1852ced0528 <col:95, col:108> col:108 _Delim 'const char *'
| `-ParmVarDecl 0x1852ced05a8 <col:146, col:154> col:154 _Context 'char **'
|-FunctionDecl 0x1852ced09a0 <line:208:28, col:109> col:44 _strupr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x1852ced0830 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x1852ced08a8 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1852ced0c20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:210:79 _strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1852ced0b40 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x1852ced0cc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1852ced1060 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:211:28, col:130> col:44 _strupr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1852ced0e10 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x1852ced0ed0 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1852ced0f48 <col:113, col:123> col:123 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1852ced1380 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:213:82 _strupr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x1852ced1208 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x1852ced1280 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1852ced1430 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1852ced1840 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:214:44> col:44 implicit strxfrm 'unsigned long long (char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1852ced18e0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1852ced1948 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1852ced19b0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1852ced1a30 prev 0x1852ced1840 <col:28, col:155> col:44 strxfrm 'unsigned long long (char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1852ced1578 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x1852ced15f8 <col:115, col:128> col:128 _Src 'const char *'
| `-ParmVarDecl 0x1852ced1670 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1852ceceeb0 <line:215:28, col:185> col:44 _strxfrm_l 'size_t (char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1852ced1b18 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x1852ced1b98 <col:117, col:130> col:130 _Src 'const char *'
| |-ParmVarDecl 0x1852ced1c10 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1852ced1c88 <col:168, col:178> col:178 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1852cecf160 <line:245:71> col:71 implicit strdup 'char *(const char *)' extern
| `-ParmVarDecl 0x1852cecf200 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1852cecf270 prev 0x1852cecf160 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:245:106> col:71 strdup 'char *(const char *)'
| |-ParmVarDecl 0x1852cecf080 <col:89, col:102> col:102 _Src 'const char *'
| `-DeprecatedAttr 0x1852cecf318 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strdup. See online help for details." ""
|-FunctionDecl 0x1852cecf660 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:252:129> col:69 strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1852cecf4e0 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x1852cecf560 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x1852cecf710 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strcmpi. See online help for details." ""
|-FunctionDecl 0x1852cecfa58 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:253:129> col:69 stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1852cecf8d8 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x1852cecf958 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x1852cecfb08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details." ""
|-FunctionDecl 0x1852cecfdb0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:254:84> col:56 strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1852cecfcd0 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x1852cecfe58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strlwr. See online help for details." ""
|-FunctionDecl 0x1852cedd368 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:255:193> col:70 strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1852cedd150 <col:106, col:119> col:119 _Str1 'const char *'
| |-ParmVarDecl 0x1852cedd1d0 <col:153, col:166> col:166 _Str 'const char *'
| |-ParmVarDecl 0x1852cedd248 <col:177, col:184> col:184 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1852cedd420 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnicmp. See online help for details." ""
|-FunctionDecl 0x1852cedd800 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:256:143> col:57 strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x1852cedd5e8 <col:94, col:101> col:101 _Str 'char *'
| |-ParmVarDecl 0x1852cedd668 <col:112, col:116> col:116 _Val 'int'
| |-ParmVarDecl 0x1852cedd6e0 <col:127, col:134> col:134 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1852cedd8b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnset. See online help for details." ""
|-FunctionDecl 0x1852ceddb60 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:257:84> col:56 strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1852cedda80 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x1852ceddc08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strrev. See online help for details." ""
|-FunctionDecl 0x1852ced7f40 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:258:99> col:56 strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x1852cedddd0 <col:73, col:80> col:80 _Str 'char *'
| |-ParmVarDecl 0x1852cedde50 <col:91, col:95> col:95 _Val 'int'
| `-DeprecatedAttr 0x1852ced7ff0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strset. See online help for details." ""
|-FunctionDecl 0x1852ced8298 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:259:84> col:56 strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1852ced81b8 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x1852ced8340 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strupr. See online help for details." ""
|-FunctionDecl 0x1852ced85d0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:273:24, col:77> col:42 _wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| `-ParmVarDecl 0x1852ced8460 <col:57, col:73> col:73 _Str 'const wchar_t *'
|-FunctionDecl 0x1852ced8960 <line:280:40, col:167> col:56 wcscat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x1852ced86a0 <col:97, col:107> col:107 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1852ced8718 <col:118, col:126> col:126 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1852ced8790 <col:147, col:163> col:163 _Src 'const wchar_t *'
|-FunctionDecl 0x1852ced8d18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:284:82 wcscat 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1852ced8b00 <col:164, col:173> col:173 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1852ced8b78 <col:187, col:204> col:204 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x1852ced8dc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1852ced7148 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:288:41> col:41 implicit wcschr 'unsigned short *(const unsigned short *, unsigned short)' extern
| |-ParmVarDecl 0x1852ced71e8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x1852ced7250 <<invalid sloc>> <invalid sloc> 'unsigned short'
|-FunctionDecl 0x1852ced72c8 prev 0x1852ced7148 <col:23, col:88> col:41 wcschr 'unsigned short *(const unsigned short *, unsigned short)'
| |-ParmVarDecl 0x1852ced6f30 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1852ced6fa8 <col:77, col:85> col:85 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1852ced75c0 <line:289:36> col:36 implicit wcscmp 'int (const unsigned short *, const unsigned short *)' extern
| |-ParmVarDecl 0x1852ced7660 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x1852ced76c8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x1852ced7740 prev 0x1852ced75c0 <col:24, col:101> col:36 wcscmp 'int (const unsigned short *, const unsigned short *)'
| |-ParmVarDecl 0x1852ced73a0 <col:50, col:66> col:66 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1852ced7418 <col:80, col:96> col:96 _Str2 'const wchar_t *'
|-FunctionDecl 0x1852ced7a20 <line:291:40, col:164> col:56 wcscpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x1852ced7818 <col:94, col:104> col:104 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1852ced7890 <col:115, col:123> col:123 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1852ced7908 <col:144, col:160> col:160 _Src 'const wchar_t *'
|-FunctionDecl 0x1852ced7d30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:294:82 wcscpy 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1852ced7bc0 <col:136, col:145> col:145 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1852ced7c38 <col:159, col:176> col:176 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x1852ced7de0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1852cede1b8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:295:24, col:107> col:39 wcscspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1852ceddfa0 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1852cede018 <col:83, col:99> col:99 _Control 'const wchar_t *'
|-FunctionDecl 0x1852cede400 <line:296:39> col:39 implicit wcslen 'unsigned long long (const unsigned short *)' extern
| `-ParmVarDecl 0x1852cede4a0 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x1852cede510 prev 0x1852cede400 <col:24, col:73> col:39 wcslen 'unsigned long long (const unsigned short *)'
| `-ParmVarDecl 0x1852cede290 <col:53, col:69> col:69 _Str 'const wchar_t *'
|-FunctionDecl 0x1852cede7f8 <line:300:1, col:94> col:16 used wcsnlen 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
| |-ParmVarDecl 0x1852cede5e0 <col:51, col:67> col:67 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1852cede658 <col:78, col:85> col:85 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1852cedea40 <line:302:16, line:308:1> line:305:18 wcsnlen_s 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' static inline
| |-ParmVarDecl 0x1852cede8d0 <col:55, col:71> col:71 used _Src 'const wchar_t *'
| |-ParmVarDecl 0x1852cede948 <col:82, col:89> col:89 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x1852cededd8 <line:306:1, line:308:1>
|   `-ReturnStmt 0x1852cededc8 <line:307:5, col:56>
|     `-ConditionalOperator 0x1852ceded98 <col:12, col:56> 'unsigned long long'
|       |-ParenExpr 0x1852cedec00 <col:12, col:25> 'int'
|       | `-BinaryOperator 0x1852cedebe0 <col:13, line:36:27> 'int' '=='
|       |   |-ImplicitCastExpr 0x1852cedebb0 <line:307:13> 'const wchar_t *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x1852cedeb08 <col:13> 'const wchar_t *' lvalue ParmVar 0x1852cede8d0 '_Src' 'const wchar_t *'
|       |   `-ImplicitCastExpr 0x1852cedebc8 <line:36:17, col:27> 'const wchar_t *' <BitCast>
|       |     `-ParenExpr 0x1852cedeb90 <col:17, col:27> 'void *'
|       |       `-CStyleCastExpr 0x1852cedeb68 <col:18, col:26> 'void *' <NullToPointer>
|       |         `-IntegerLiteral 0x1852cedeb28 <col:26> 'int' 0
|       |-ImplicitCastExpr 0x1852ceded80 <line:307:29> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x1852cedec20 <col:29> 'int' 0
|       `-CallExpr 0x1852ceded20 <col:33, col:56> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x1852ceded08 <col:33> 'size_t (*)(const wchar_t *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x1852cedec48 <col:33> 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' Function 0x1852cede7f8 'wcsnlen' 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
|         |-ImplicitCastExpr 0x1852ceded50 <col:41> 'const wchar_t *' <LValueToRValue>
|         | `-DeclRefExpr 0x1852cedec68 <col:41> 'const wchar_t *' lvalue ParmVar 0x1852cede8d0 '_Src' 'const wchar_t *'
|         `-ImplicitCastExpr 0x1852ceded68 <col:47> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x1852cedec88 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x1852cede948 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x1852cee01c8 <line:311:40, col:212> col:56 wcsncat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x1852cedee00 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1852cedee78 <col:119, col:127> col:127 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1852cedeef0 <col:168, col:184> col:184 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1852cedffc0 <col:195, col:203> col:203 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1852cee0630 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:316:86 wcsncat 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1852cee0370 <col:167, col:176> col:176 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1852cee03e8 <col:207, col:224> col:224 _Source 'const wchar_t *'
| |-ParmVarDecl 0x1852cee0460 <col:238, col:246> col:246 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1852cee06e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1852cee0af8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:318:36> col:36 implicit wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)' extern
| |-ParmVarDecl 0x1852cee0b98 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| |-ParmVarDecl 0x1852cee0c00 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x1852cee0c68 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1852cee0ce8 prev 0x1852cee0af8 <col:24, col:165> col:36 wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)'
| |-ParmVarDecl 0x1852cee0828 <col:71, col:87> col:87 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1852cee08a0 <col:121, col:137> col:137 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1852cee0918 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1852cedf068 <line:320:40, col:209> col:56 wcsncpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x1852cee0dc8 <col:95, col:105> col:105 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1852cee0e40 <col:116, col:124> col:124 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1852cee0eb8 <col:165, col:181> col:181 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1852cee0f30 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1852cedf418 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:323:86 wcsncpy 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1852cedf210 <col:179, col:188> col:188 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1852cedf288 <col:219, col:236> col:236 _Source 'const wchar_t *'
| |-ParmVarDecl 0x1852cedf300 <col:250, col:258> col:258 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1852cedf4d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1852cedf828 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:324:38, col:124> col:56 wcspbrk 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1852cedf610 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1852cedf688 <col:100, col:116> col:116 _Control 'const wchar_t *'
|-FunctionDecl 0x1852cedfa70 <line:325:38, col:109> col:56 wcsrchr 'wchar_t *(const wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(const wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1852cedf900 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1852cedf978 <col:98, col:106> col:106 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1852cedfcb8 <line:326:24, col:106> col:39 wcsspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1852cedfb48 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1852cedfbc0 <col:82, col:98> col:98 _Control 'const wchar_t *'
|-FunctionDecl 0x1852cedff00 <line:329:23, col:107> col:41 wcsstr 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1852cedfd90 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1852cedfe08 <col:84, col:100> col:100 _SubStr 'const wchar_t *'
|-FunctionDecl 0x1852cedc1d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:330:142> col:76 wcstok 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1852cedc068 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x1852cedc0e0 <col:120, col:136> col:136 _Delim 'const wchar_t *'
| `-DeprecatedAttr 0x1852cedc288 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1852cedc6f0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:332:36, col:173> col:54 wcstok_s 'wchar_t *(wchar_t *, const wchar_t *, wchar_t **) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x1852cedc3c8 <col:77, col:87> col:87 _Str 'wchar_t *'
| |-ParmVarDecl 0x1852cedc440 <col:100, col:116> col:116 _Delim 'const wchar_t *'
| `-ParmVarDecl 0x1852cedc520 <col:154, col:165> col:165 _Context 'wchar_t **'
|-FunctionDecl 0x1852cedca10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:334:105> col:79 _wcserror 'wchar_t *(int) __attribute__((cdecl))':'wchar_t *(int)'
| |-ParmVarDecl 0x1852cedc898 <col:94, col:98> col:98 _ErrNum 'int'
| `-DeprecatedAttr 0x1852cedcab8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1852cedcec0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:335:28, col:147> col:44 _wcserror_s 'errno_t (wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, int)'
| |-ParmVarDecl 0x1852cedcbf8 <col:89, col:99> col:99 _Buf 'wchar_t *'
| |-ParmVarDecl 0x1852cedcc70 <col:110, col:117> col:117 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1852cedccf0 <col:136, col:140> col:140 _ErrNum 'int'
|-FunctionDecl 0x1852ced9150 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:337:122> col:80 __wcserror 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x1852ced9078 <col:102, col:118> col:118 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x1852ced91f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1852ced95c0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:338:28, col:165> col:44 __wcserror_s 'errno_t (wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x1852ced9338 <col:90, col:100> col:100 _Buffer 'wchar_t *'
| |-ParmVarDecl 0x1852ced93b0 <col:114, col:121> col:121 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1852ced9428 <col:142, col:158> col:158 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x1852ced9818 <line:341:24, col:103> col:36 _wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1852ced96a0 <col:52, col:68> col:68 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1852ced9718 <col:82, col:98> col:98 _Str2 'const wchar_t *'
|-FunctionDecl 0x1852ced9bb8 <line:342:24, col:133> col:36 _wcsicmp_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1852ced98f0 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1852ced9968 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1852ced99e0 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1852ced9ea8 <line:343:24, col:167> col:36 _wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1852ced9c98 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1852ced9d10 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1852ced9d88 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1852cee1380 <line:344:24, col:197> col:36 _wcsnicmp_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1852cee1010 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1852cee1088 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1852cee1100 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1852cee1178 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1852cee17d8 <line:345:40, col:181> col:56 _wcsnset_s 'errno_t (wchar_t *, size_t, wchar_t, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t, size_t)'
| |-ParmVarDecl 0x1852cee1468 <col:99, col:109> col:109 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1852cee14e0 <col:120, col:127> col:127 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1852cee1558 <col:146, col:154> col:154 _Val 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1852cee15d0 <col:165, col:172> col:172 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1852cee1c40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:347:86 _wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x1852cee1980 <col:172, col:181> col:181 _Str 'wchar_t *'
| |-ParmVarDecl 0x1852cee19f8 <col:187, col:196> col:196 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x1852cee1a70 <col:207, col:215> col:215 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1852cee1cf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1852cee1fe0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:348:9, col:59> col:27 _wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| `-ParmVarDecl 0x1852cee1e38 <col:45, col:55> col:55 _Str 'wchar_t *'
|-FunctionDecl 0x1852cee2370 <line:349:40, col:159> col:56 _wcsset_s 'errno_t (wchar_t *, size_t, wchar_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t)'
| |-ParmVarDecl 0x1852cee20b0 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1852cee2128 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1852cee21a0 <col:145, col:153> col:153 _Value 'wchar_t':'unsigned short'
|-FunctionDecl 0x1852cee2728 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:351:85 _wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1852cee2510 <col:150, col:159> col:159 _Str 'wchar_t *'
| |-ParmVarDecl 0x1852cee2588 <col:165, col:174> col:174 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x1852cee27d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1852cee2b38 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:353:28, col:126> col:44 _wcslwr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1852cee2918 <col:86, col:96> col:96 _Str 'wchar_t *'
| `-ParmVarDecl 0x1852cee2990 <col:107, col:114> col:114 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1852cee2da8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:355:82 _wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1852cee2cd0 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x1852cee2e50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1852cedb230 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:356:28, col:156> col:44 _wcslwr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1852cedaf70 <col:88, col:98> col:98 _Str 'wchar_t *'
| |-ParmVarDecl 0x1852cedafe8 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1852cedb060 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1852cedb5e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:358:85 _wcslwr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1852cedb3d0 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x1852cedb448 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1852cedb698 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1852cedb948 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:359:28, col:112> col:44 _wcsupr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1852cedb7d8 <col:79, col:89> col:89 _Str 'wchar_t *'
| `-ParmVarDecl 0x1852cedb850 <col:100, col:107> col:107 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1852cedbbb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:361:82 _wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1852cedbae0 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x1852cedbc60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1852cee5050 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:362:28, col:142> col:44 _wcsupr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1852cedbda0 <col:81, col:91> col:91 _Str 'wchar_t *'
| |-ParmVarDecl 0x1852cedbe18 <col:102, col:109> col:109 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1852cedbe90 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1852cee5360 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:364:85 _wcsupr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1852cee51f0 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x1852cee5268 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1852cee5410 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1852cee5810 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:365:28, col:159> col:43 wcsxfrm 'size_t (wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1852cee5550 <col:93, col:103> col:103 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1852cee55c8 <col:116, col:132> col:132 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1852cee5640 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1852cee5c58 <line:366:28, col:189> col:43 _wcsxfrm_l 'size_t (wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1852cee58f0 <col:96, col:106> col:106 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1852cee5968 <col:119, col:134> col:134 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1852cee59e0 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1852cee5a58 <col:172, col:182> col:182 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1852cee5eb8 <line:367:24, col:102> col:36 wcscoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1852cee5d40 <col:51, col:67> col:67 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1852cee5db8 <col:81, col:97> col:97 _Str2 'const wchar_t *'
|-FunctionDecl 0x1852cee3188 <line:368:24, col:133> col:36 _wcscoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1852cee5f90 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1852cee2ff0 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1852cee3068 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1852cee33e0 <line:369:24, col:104> col:36 _wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1852cee3268 <col:53, col:69> col:69 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1852cee32e0 <col:83, col:99> col:99 _Str2 'const wchar_t *'
|-FunctionDecl 0x1852cee36c8 <line:370:24, col:133> col:36 _wcsicoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1852cee34b8 <col:55, col:71> col:71 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1852cee3530 <col:85, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1852cee35a8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1852cee39b8 <line:371:24, col:167> col:36 _wcsncoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1852cee37a8 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1852cee3820 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1852cee3898 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1852cee3d40 <line:372:24, col:197> col:36 _wcsncoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1852cee3a98 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1852cee3b10 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1852cee3b88 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1852cee3c00 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1852ceeb0b8 <line:373:24, col:168> col:36 _wcsnicoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1852cee3e28 <col:74, col:90> col:90 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1852cee3ea0 <col:124, col:140> col:140 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1852cee3f18 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1852ceeb440 <line:374:24, col:198> col:36 _wcsnicoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1852ceeb198 <col:76, col:92> col:92 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1852ceeb210 <col:126, col:142> col:142 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1852ceeb288 <col:154, col:161> col:161 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1852ceeb300 <col:181, col:191> col:191 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1852ceeb6a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:403:108> col:74 wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x1852ceeb5c8 <col:88, col:104> col:104 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x1852ceeb748 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsdup. See online help for details." ""
|-FunctionDecl 0x1852ceeba80 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:413:135> col:69 wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1852ceeb908 <col:84, col:100> col:100 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1852ceeb980 <col:114, col:130> col:130 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x1852ceebb30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicmp. See online help for details." ""
|-FunctionDecl 0x1852ceebf00 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:414:200> col:70 wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1852ceebcf0 <col:106, col:122> col:122 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1852ceebd68 <col:156, col:172> col:172 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1852ceebde0 <col:184, col:191> col:191 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1852ceebfb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnicmp. See online help for details." ""
|-FunctionDecl 0x1852cee83c0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:415:153> col:60 wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x1852cee81b8 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x1852cee8230 <col:118, col:126> col:126 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x1852cee82a8 <col:137, col:144> col:144 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1852cee8478 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnset. See online help for details." ""
|-FunctionDecl 0x1852cee8710 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:416:90> col:59 wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1852cee8638 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1852cee87b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsrev. See online help for details." ""
|-FunctionDecl 0x1852cee8ae8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:417:104> col:59 wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1852cee8978 <col:76, col:86> col:86 _Str 'wchar_t *'
| |-ParmVarDecl 0x1852cee89f0 <col:92, col:100> col:100 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x1852cee8b98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsset. See online help for details." ""
|-FunctionDecl 0x1852cee8e30 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:418:90> col:59 wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1852cee8d58 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1852cee8ed8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcslwr. See online help for details." ""
|-FunctionDecl 0x1852cee61a8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:419:90> col:59 wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1852cee60d0 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1852cee6250 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsupr. See online help for details." ""
|-FunctionDecl 0x1852cee6588 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:420:137> col:70 wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1852cee6410 <col:86, col:102> col:102 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1852cee6488 <col:116, col:132> col:132 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x1852cee6638 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicoll. See online help for details." ""
`-FunctionDecl 0x1852cee6c40 <.//openssl//file_jk/before\crypto\modes\xts128.c:14:1, line:157:1> line:14:5 invalid CRYPTO_xts128_encrypt 'int (const int *, const unsigned char *, const unsigned char *, unsigned char *, size_t, int)'
  |-ParmVarDecl 0x1852cee6760 <col:27, col:49> col:49 invalid ctx 'const int *'
  |-ParmVarDecl 0x1852cee68a0 <line:15:27, col:52> col:47 used iv 'const unsigned char *':'const unsigned char *'
  |-ParmVarDecl 0x1852cee6920 <line:16:27, col:48> col:48 used inp 'const unsigned char *'
  |-ParmVarDecl 0x1852cee69d0 <col:53, col:68> col:68 used out 'unsigned char *'
  |-ParmVarDecl 0x1852cee6a48 <line:17:27, col:34> col:34 used len 'size_t':'unsigned long long'
  |-ParmVarDecl 0x1852cee6ac8 <col:39, col:43> col:43 used enc 'int'
  `-CompoundStmt 0x1852cef3030 <line:18:1, line:157:1>
    |-DeclStmt 0x1852cee90c8 <line:19:5, line:24:6>
    | |-RecordDecl 0x1852cee6d28 <line:19:11, line:22:5> line:19:11 union definition
    | | |-FieldDecl 0x1852cee6df8 <line:20:9, col:14> col:14 one 'long'
    | | `-FieldDecl 0x1852cee6e60 <line:21:9, col:14> col:14 referenced little 'char'
    | `-VarDecl 0x1852cee6f18 <line:19:5, line:24:5> line:22:7 used is_endian 'const union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:19:11)':'const union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:19:11)' cinit
    |   `-InitListExpr 0x1852cee9050 <col:19, line:24:5> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:19:11)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:19:11)' field Field 0x1852cee6df8 'one' 'long'
    |     `-ImplicitCastExpr 0x1852cee9098 <line:23:9> 'long' <IntegralCast>
    |       `-IntegerLiteral 0x1852cee6f80 <col:9> 'int' 1
    |-DeclStmt 0x1852cee9538 <line:25:5, line:29:21>
    | |-RecordDecl 0x1852cee90e0 <line:25:5, line:29:5> line:25:5 union definition
    | | |-FieldDecl 0x1852cee9200 <line:26:9, col:16> col:13 referenced u 'u64 [2]'
    | | |-FieldDecl 0x1852cee92b8 <line:27:9, col:16> col:13 referenced d 'u32 [4]'
    | | `-FieldDecl 0x1852cee9370 <line:28:9, col:16> col:12 referenced c 'u8 [16]'
    | |-VarDecl 0x1852cee9428 <line:25:5, line:29:7> col:7 used tweak 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    | `-VarDecl 0x1852cee94b0 <line:25:5, line:29:14> col:14 used scratch 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    |-DeclStmt 0x1852cee95d0 <line:30:5, col:19>
    | `-VarDecl 0x1852cee9568 <col:5, col:18> col:18 used i 'unsigned int'
    |-IfStmt 0x1852cee96e8 <line:32:5, line:33:17>
    | |-BinaryOperator 0x1852cee9678 <line:32:9, col:15> 'int' '<'
    | | |-ImplicitCastExpr 0x1852cee9648 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
    | | | `-DeclRefExpr 0x1852cee95e8 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x1852cee6a48 'len' 'size_t':'unsigned long long'
    | | `-ImplicitCastExpr 0x1852cee9660 <col:15> 'unsigned long long' <IntegralCast>
    | |   `-IntegerLiteral 0x1852cee9620 <col:15> 'int' 16
    | `-ReturnStmt 0x1852cee96d8 <line:33:9, col:17>
    |   `-UnaryOperator 0x1852cee96c0 <col:16, col:17> 'int' prefix '-'
    |     `-IntegerLiteral 0x1852cee9698 <col:17> 'int' 1
    |-CallExpr 0x1852cee9890 <line:35:5, col:27> 'void *'
    | |-ImplicitCastExpr 0x1852cee9878 <col:5> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x1852cee9700 <col:5> 'void *(void *, const void *, unsigned long long)' Function 0x1852ce78348 'memcpy' 'void *(void *, const void *, unsigned long long)'
    | |-ImplicitCastExpr 0x1852cee98e0 <col:12, col:18> 'void *' <BitCast>
    | | `-ImplicitCastExpr 0x1852cee98c8 <col:12, col:18> 'u8 *' <ArrayToPointerDecay>
    | |   `-MemberExpr 0x1852cee9758 <col:12, col:18> 'u8 [16]' lvalue .c 0x1852cee9370
    | |     `-DeclRefExpr 0x1852cee9720 <col:12> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1852cee9428 'tweak' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    | |-ImplicitCastExpr 0x1852cee9910 <col:21> 'const void *' <BitCast>
    | | `-ImplicitCastExpr 0x1852cee98f8 <col:21> 'const unsigned char *':'const unsigned char *' <LValueToRValue>
    | |   `-DeclRefExpr 0x1852cee9788 <col:21> 'const unsigned char *':'const unsigned char *' lvalue ParmVar 0x1852cee68a0 'iv' 'const unsigned char *':'const unsigned char *'
    | `-ImplicitCastExpr 0x1852cee9928 <col:25> 'unsigned long long' <IntegralCast>
    |   `-IntegerLiteral 0x1852cee97c0 <col:25> 'int' 16
    |-IfStmt 0x1852cee9c10 <line:39:5, line:40:16>
    | |-BinaryOperator 0x1852cee9b60 <line:39:9, col:26> 'int' '&&'
    | | |-UnaryOperator 0x1852cee9a90 <col:9, col:10> 'int' prefix '!' cannot overflow
    | | | `-ImplicitCastExpr 0x1852cee9a78 <col:10> 'int' <LValueToRValue>
    | | |   `-DeclRefExpr 0x1852cee9a40 <col:10> 'int' lvalue ParmVar 0x1852cee6ac8 'enc' 'int'
    | | `-ParenExpr 0x1852cee9b40 <col:17, col:26> 'unsigned long long'
    | |   `-BinaryOperator 0x1852cee9b20 <col:18, col:24> 'unsigned long long' '%'
    | |     |-ImplicitCastExpr 0x1852cee9af0 <col:18> 'size_t':'unsigned long long' <LValueToRValue>
    | |     | `-DeclRefExpr 0x1852cee9aa8 <col:18> 'size_t':'unsigned long long' lvalue ParmVar 0x1852cee6a48 'len' 'size_t':'unsigned long long'
    | |     `-ImplicitCastExpr 0x1852cee9b08 <col:24> 'unsigned long long' <IntegralCast>
    | |       `-IntegerLiteral 0x1852cee9ac8 <col:24> 'int' 16
    | `-CompoundAssignOperator 0x1852cee9be0 <line:40:9, col:16> 'size_t':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    |   |-DeclRefExpr 0x1852cee9b80 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x1852cee6a48 'len' 'size_t':'unsigned long long'
    |   `-ImplicitCastExpr 0x1852cee9bc8 <col:16> 'unsigned long long' <IntegralCast>
    |     `-IntegerLiteral 0x1852cee9ba0 <col:16> 'int' 16
    |-WhileStmt 0x1852cee4fd0 <line:42:5, line:87:5>
    | |-BinaryOperator 0x1852cee9ca0 <line:42:12, col:19> 'int' '>='
    | | |-ImplicitCastExpr 0x1852cee9c70 <col:12> 'size_t':'unsigned long long' <LValueToRValue>
    | | | `-DeclRefExpr 0x1852cee9c28 <col:12> 'size_t':'unsigned long long' lvalue ParmVar 0x1852cee6a48 'len' 'size_t':'unsigned long long'
    | | `-ImplicitCastExpr 0x1852cee9c88 <col:19> 'unsigned long long' <IntegralCast>
    | |   `-IntegerLiteral 0x1852cee9c48 <col:19> 'int' 16
    | `-CompoundStmt 0x1852cee4f78 <col:23, line:87:5>
    |   |-BinaryOperator 0x1852cee9f78 <line:48:9, col:51> 'u64':'unsigned long long' '='
    |   | |-ArraySubscriptExpr 0x1852cee9d68 <col:9, col:20> 'u64':'unsigned long long' lvalue
    |   | | |-ImplicitCastExpr 0x1852cee9d50 <col:9, col:17> 'u64 *' <ArrayToPointerDecay>
    |   | | | `-MemberExpr 0x1852cee9cf8 <col:9, col:17> 'u64 [2]' lvalue .u 0x1852cee9200
    |   | | |   `-DeclRefExpr 0x1852cee9cc0 <col:9> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1852cee94b0 'scratch' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    |   | | `-IntegerLiteral 0x1852cee9d28 <col:19> 'int' 0
    |   | `-BinaryOperator 0x1852cee9f58 <col:24, col:51> 'unsigned long long' '^'
    |   |   |-ImplicitCastExpr 0x1852cee9f28 <col:24, col:38> 'u64':'unsigned long long' <LValueToRValue>
    |   |   | `-ArraySubscriptExpr 0x1852cee9e58 <col:24, col:38> 'u64':'unsigned long long' lvalue
    |   |   |   |-ParenExpr 0x1852cee9e10 <col:24, col:35> 'u64 *'
    |   |   |   | `-CStyleCastExpr 0x1852cee9de8 <col:25, col:32> 'u64 *' <BitCast>
    |   |   |   |   `-ImplicitCastExpr 0x1852cee9dd0 <col:32> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
    |   |   |   |     `-DeclRefExpr 0x1852cee9d88 <col:32> 'const unsigned char *' lvalue ParmVar 0x1852cee6920 'inp' 'const unsigned char *'
    |   |   |   `-IntegerLiteral 0x1852cee9e30 <col:37> 'int' 0
    |   |   `-ImplicitCastExpr 0x1852cee9f40 <col:42, col:51> 'u64':'unsigned long long' <LValueToRValue>
    |   |     `-ArraySubscriptExpr 0x1852cee9f08 <col:42, col:51> 'u64':'unsigned long long' lvalue
    |   |       |-ImplicitCastExpr 0x1852cee9ef0 <col:42, col:48> 'u64 *' <ArrayToPointerDecay>
    |   |       | `-MemberExpr 0x1852cee9e98 <col:42, col:48> 'u64 [2]' lvalue .u 0x1852cee9200
    |   |       |   `-DeclRefExpr 0x1852cee9e78 <col:42> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1852cee9428 'tweak' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    |   |       `-IntegerLiteral 0x1852cee9ec8 <col:50> 'int' 0
    |   |-BinaryOperator 0x1852ceea238 <line:49:9, col:51> 'u64':'unsigned long long' '='
    |   | |-ArraySubscriptExpr 0x1852ceea028 <col:9, col:20> 'u64':'unsigned long long' lvalue
    |   | | |-ImplicitCastExpr 0x1852ceea010 <col:9, col:17> 'u64 *' <ArrayToPointerDecay>
    |   | | | `-MemberExpr 0x1852cee9fb8 <col:9, col:17> 'u64 [2]' lvalue .u 0x1852cee9200
    |   | | |   `-DeclRefExpr 0x1852cee9f98 <col:9> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1852cee94b0 'scratch' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    |   | | `-IntegerLiteral 0x1852cee9fe8 <col:19> 'int' 1
    |   | `-BinaryOperator 0x1852ceea218 <col:24, col:51> 'unsigned long long' '^'
    |   |   |-ImplicitCastExpr 0x1852ceea1e8 <col:24, col:38> 'u64':'unsigned long long' <LValueToRValue>
    |   |   | `-ArraySubscriptExpr 0x1852ceea118 <col:24, col:38> 'u64':'unsigned long long' lvalue
    |   |   |   |-ParenExpr 0x1852ceea0d0 <col:24, col:35> 'u64 *'
    |   |   |   | `-CStyleCastExpr 0x1852ceea0a8 <col:25, col:32> 'u64 *' <BitCast>
    |   |   |   |   `-ImplicitCastExpr 0x1852ceea090 <col:32> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
    |   |   |   |     `-DeclRefExpr 0x1852ceea060 <col:32> 'const unsigned char *' lvalue ParmVar 0x1852cee6920 'inp' 'const unsigned char *'
    |   |   |   `-IntegerLiteral 0x1852ceea0f0 <col:37> 'int' 1
    |   |   `-ImplicitCastExpr 0x1852ceea200 <col:42, col:51> 'u64':'unsigned long long' <LValueToRValue>
    |   |     `-ArraySubscriptExpr 0x1852ceea1c8 <col:42, col:51> 'u64':'unsigned long long' lvalue
    |   |       |-ImplicitCastExpr 0x1852ceea1b0 <col:42, col:48> 'u64 *' <ArrayToPointerDecay>
    |   |       | `-MemberExpr 0x1852ceea158 <col:42, col:48> 'u64 [2]' lvalue .u 0x1852cee9200
    |   |       |   `-DeclRefExpr 0x1852ceea138 <col:42> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1852cee9428 'tweak' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    |   |       `-IntegerLiteral 0x1852ceea188 <col:50> 'int' 1
    |   |-BinaryOperator 0x1852ceea590 <line:57:9, col:52> 'u64':'unsigned long long' '='
    |   | |-ArraySubscriptExpr 0x1852ceea3c8 <col:9, col:23> 'u64':'unsigned long long' lvalue
    |   | | |-ParenExpr 0x1852ceea380 <col:9, col:20> 'u64 *'
    |   | | | `-CStyleCastExpr 0x1852ceea358 <col:10, col:17> 'u64 *' <BitCast>
    |   | | |   `-ImplicitCastExpr 0x1852ceea340 <col:17> 'unsigned char *' <LValueToRValue> part_of_explicit_cast
    |   | | |     `-DeclRefExpr 0x1852ceea2f8 <col:17> 'unsigned char *' lvalue ParmVar 0x1852cee69d0 'out' 'unsigned char *'
    |   | | `-IntegerLiteral 0x1852ceea3a0 <col:22> 'int' 0
    |   | `-CompoundAssignOperator 0x1852ceea560 <col:27, col:52> 'u64':'unsigned long long' '^=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    |   |   |-ArraySubscriptExpr 0x1852ceea478 <col:27, col:38> 'u64':'unsigned long long' lvalue
    |   |   | |-ImplicitCastExpr 0x1852ceea460 <col:27, col:35> 'u64 *' <ArrayToPointerDecay>
    |   |   | | `-MemberExpr 0x1852ceea408 <col:27, col:35> 'u64 [2]' lvalue .u 0x1852cee9200
    |   |   | |   `-DeclRefExpr 0x1852ceea3e8 <col:27> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1852cee94b0 'scratch' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    |   |   | `-IntegerLiteral 0x1852ceea438 <col:37> 'int' 0
    |   |   `-ImplicitCastExpr 0x1852ceea548 <col:43, col:52> 'u64':'unsigned long long' <LValueToRValue>
    |   |     `-ArraySubscriptExpr 0x1852ceea528 <col:43, col:52> 'u64':'unsigned long long' lvalue
    |   |       |-ImplicitCastExpr 0x1852ceea510 <col:43, col:49> 'u64 *' <ArrayToPointerDecay>
    |   |       | `-MemberExpr 0x1852ceea4b8 <col:43, col:49> 'u64 [2]' lvalue .u 0x1852cee9200
    |   |       |   `-DeclRefExpr 0x1852ceea498 <col:43> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1852cee9428 'tweak' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    |   |       `-IntegerLiteral 0x1852ceea4e8 <col:51> 'int' 0
    |   |-BinaryOperator 0x1852ceea830 <line:58:9, col:52> 'u64':'unsigned long long' '='
    |   | |-ArraySubscriptExpr 0x1852ceea668 <col:9, col:23> 'u64':'unsigned long long' lvalue
    |   | | |-ParenExpr 0x1852ceea620 <col:9, col:20> 'u64 *'
    |   | | | `-CStyleCastExpr 0x1852ceea5f8 <col:10, col:17> 'u64 *' <BitCast>
    |   | | |   `-ImplicitCastExpr 0x1852ceea5e0 <col:17> 'unsigned char *' <LValueToRValue> part_of_explicit_cast
    |   | | |     `-DeclRefExpr 0x1852ceea5b0 <col:17> 'unsigned char *' lvalue ParmVar 0x1852cee69d0 'out' 'unsigned char *'
    |   | | `-IntegerLiteral 0x1852ceea640 <col:22> 'int' 1
    |   | `-CompoundAssignOperator 0x1852ceea800 <col:27, col:52> 'u64':'unsigned long long' '^=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    |   |   |-ArraySubscriptExpr 0x1852ceea718 <col:27, col:38> 'u64':'unsigned long long' lvalue
    |   |   | |-ImplicitCastExpr 0x1852ceea700 <col:27, col:35> 'u64 *' <ArrayToPointerDecay>
    |   |   | | `-MemberExpr 0x1852ceea6a8 <col:27, col:35> 'u64 [2]' lvalue .u 0x1852cee9200
    |   |   | |   `-DeclRefExpr 0x1852ceea688 <col:27> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1852cee94b0 'scratch' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    |   |   | `-IntegerLiteral 0x1852ceea6d8 <col:37> 'int' 1
    |   |   `-ImplicitCastExpr 0x1852ceea7e8 <col:43, col:52> 'u64':'unsigned long long' <LValueToRValue>
    |   |     `-ArraySubscriptExpr 0x1852ceea7c8 <col:43, col:52> 'u64':'unsigned long long' lvalue
    |   |       |-ImplicitCastExpr 0x1852ceea7b0 <col:43, col:49> 'u64 *' <ArrayToPointerDecay>
    |   |       | `-MemberExpr 0x1852ceea758 <col:43, col:49> 'u64 [2]' lvalue .u 0x1852cee9200
    |   |       |   `-DeclRefExpr 0x1852ceea738 <col:43> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1852cee9428 'tweak' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    |   |       `-IntegerLiteral 0x1852ceea788 <col:51> 'int' 1
    |   |-CompoundAssignOperator 0x1852ceea898 <line:60:9, col:16> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
    |   | |-DeclRefExpr 0x1852ceea850 <col:9> 'const unsigned char *' lvalue ParmVar 0x1852cee6920 'inp' 'const unsigned char *'
    |   | `-IntegerLiteral 0x1852ceea870 <col:16> 'int' 16
    |   |-CompoundAssignOperator 0x1852ceea910 <line:61:9, col:16> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
    |   | |-DeclRefExpr 0x1852ceea8c8 <col:9> 'unsigned char *' lvalue ParmVar 0x1852cee69d0 'out' 'unsigned char *'
    |   | `-IntegerLiteral 0x1852ceea8e8 <col:16> 'int' 16
    |   |-CompoundAssignOperator 0x1852ceea9a0 <line:62:9, col:16> 'size_t':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    |   | |-DeclRefExpr 0x1852ceea940 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x1852cee6a48 'len' 'size_t':'unsigned long long'
    |   | `-ImplicitCastExpr 0x1852ceea988 <col:16> 'unsigned long long' <IntegralCast>
    |   |   `-IntegerLiteral 0x1852ceea960 <col:16> 'int' 16
    |   |-IfStmt 0x1852ceeaaa0 <line:64:9, line:65:20>
    |   | |-BinaryOperator 0x1852ceeaa48 <line:64:13, col:20> 'int' '=='
    |   | | |-ImplicitCastExpr 0x1852ceeaa18 <col:13> 'size_t':'unsigned long long' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x1852ceea9d0 <col:13> 'size_t':'unsigned long long' lvalue ParmVar 0x1852cee6a48 'len' 'size_t':'unsigned long long'
    |   | | `-ImplicitCastExpr 0x1852ceeaa30 <col:20> 'unsigned long long' <IntegralCast>
    |   | |   `-IntegerLiteral 0x1852ceea9f0 <col:20> 'int' 0
    |   | `-ReturnStmt 0x1852ceeaa90 <line:65:13, col:20>
    |   |   `-IntegerLiteral 0x1852ceeaa68 <col:20> 'int' 0
    |   `-IfStmt 0x1852cee4f50 <line:67:9, line:86:9> has_else
    |     |-ImplicitCastExpr 0x1852ceeab20 <line:67:13, col:23> 'char' <LValueToRValue>
    |     | `-MemberExpr 0x1852ceeaaf0 <col:13, col:23> 'const char' lvalue .little 0x1852cee6e60
    |     |   `-DeclRefExpr 0x1852ceeaab8 <col:13> 'const union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:19:11)':'const union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:19:11)' lvalue Var 0x1852cee6f18 'is_endian' 'const union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:19:11)':'const union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:19:11)'
    |     |-CompoundStmt 0x1852cee4580 <col:31, line:74:9>
    |     | |-DeclStmt 0x1852ceeac50 <line:68:13, col:36>
    |     | | |-VarDecl 0x1852ceeab50 <col:13, col:26> col:26 used carry 'unsigned int'
    |     | | `-VarDecl 0x1852ceeabd0 <col:13, col:33> col:33 used res 'unsigned int'
    |     | |-BinaryOperator 0x1852ceeaee8 <line:70:13, col:50> 'unsigned int' '='
    |     | | |-DeclRefExpr 0x1852ceeac68 <col:13> 'unsigned int' lvalue Var 0x1852ceeabd0 'res' 'unsigned int'
    |     | | `-ImplicitCastExpr 0x1852ceeaed0 <col:19, col:50> 'unsigned int' <IntegralCast>
    |     | |   `-BinaryOperator 0x1852ceeaeb0 <col:19, col:50> 'int' '&'
    |     | |     |-IntegerLiteral 0x1852ceeaca0 <col:19> 'int' 135
    |     | |     `-ParenExpr 0x1852ceeae90 <col:26, col:50> 'int'
    |     | |       `-BinaryOperator 0x1852ceeae70 <col:27, col:48> 'int' '>>'
    |     | |         |-ParenExpr 0x1852ceeae28 <col:27, col:43> 'int'
    |     | |         | `-CStyleCastExpr 0x1852ceeae00 <col:28, col:42> 'int' <IntegralCast>
    |     | |         |   `-ImplicitCastExpr 0x1852ceeade8 <col:33, col:42> 'u32':'unsigned int' <LValueToRValue> part_of_explicit_cast
    |     | |         |     `-ArraySubscriptExpr 0x1852ceeadb0 <col:33, col:42> 'u32':'unsigned int' lvalue
    |     | |         |       |-ImplicitCastExpr 0x1852ceead98 <col:33, col:39> 'u32 *' <ArrayToPointerDecay>
    |     | |         |       | `-MemberExpr 0x1852ceeace8 <col:33, col:39> 'u32 [4]' lvalue .d 0x1852cee92b8
    |     | |         |       |   `-DeclRefExpr 0x1852ceeacc8 <col:33> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1852cee9428 'tweak' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    |     | |         |       `-IntegerLiteral 0x1852ceead18 <col:41> 'int' 3
    |     | |         `-IntegerLiteral 0x1852ceeae48 <col:48> 'int' 31
    |     | |-BinaryOperator 0x1852cee4080 <line:71:13, col:52> 'unsigned int' '='
    |     | | |-DeclRefExpr 0x1852ceeaf08 <col:13> 'unsigned int' lvalue Var 0x1852ceeab50 'carry' 'unsigned int'
    |     | | `-CStyleCastExpr 0x1852cee4058 <col:21, col:52> 'unsigned int' <IntegralCast>
    |     | |   `-ParenExpr 0x1852cee4038 <col:35, col:52> 'u64':'unsigned long long'
    |     | |     `-BinaryOperator 0x1852ceeb030 <col:36, col:50> 'u64':'unsigned long long' '>>'
    |     | |       |-ImplicitCastExpr 0x1852ceeb018 <col:36, col:45> 'u64':'unsigned long long' <LValueToRValue>
    |     | |       | `-ArraySubscriptExpr 0x1852ceeafd0 <col:36, col:45> 'u64':'unsigned long long' lvalue
    |     | |       |   |-ImplicitCastExpr 0x1852ceeafb8 <col:36, col:42> 'u64 *' <ArrayToPointerDecay>
    |     | |       |   | `-MemberExpr 0x1852ceeaf60 <col:36, col:42> 'u64 [2]' lvalue .u 0x1852cee9200
    |     | |       |   |   `-DeclRefExpr 0x1852ceeaf40 <col:36> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1852cee9428 'tweak' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    |     | |       |   `-IntegerLiteral 0x1852ceeaf90 <col:44> 'int' 0
    |     | |       `-IntegerLiteral 0x1852ceeaff0 <col:50> 'int' 63
    |     | |-BinaryOperator 0x1852cee42f0 <line:72:13, col:46> 'u64':'unsigned long long' '='
    |     | | |-ArraySubscriptExpr 0x1852cee4130 <col:13, col:22> 'u64':'unsigned long long' lvalue
    |     | | | |-ImplicitCastExpr 0x1852cee4118 <col:13, col:19> 'u64 *' <ArrayToPointerDecay>
    |     | | | | `-MemberExpr 0x1852cee40c0 <col:13, col:19> 'u64 [2]' lvalue .u 0x1852cee9200
    |     | | | |   `-DeclRefExpr 0x1852cee40a0 <col:13> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1852cee9428 'tweak' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    |     | | | `-IntegerLiteral 0x1852cee40f0 <col:21> 'int' 0
    |     | | `-BinaryOperator 0x1852cee42d0 <col:26, col:46> 'unsigned long long' '^'
    |     | |   |-ParenExpr 0x1852cee4260 <col:26, col:42> 'u64':'unsigned long long'
    |     | |   | `-BinaryOperator 0x1852cee4240 <col:27, col:41> 'u64':'unsigned long long' '<<'
    |     | |   |   |-ImplicitCastExpr 0x1852cee4228 <col:27, col:36> 'u64':'unsigned long long' <LValueToRValue>
    |     | |   |   | `-ArraySubscriptExpr 0x1852cee41e0 <col:27, col:36> 'u64':'unsigned long long' lvalue
    |     | |   |   |   |-ImplicitCastExpr 0x1852cee41c8 <col:27, col:33> 'u64 *' <ArrayToPointerDecay>
    |     | |   |   |   | `-MemberExpr 0x1852cee4170 <col:27, col:33> 'u64 [2]' lvalue .u 0x1852cee9200
    |     | |   |   |   |   `-DeclRefExpr 0x1852cee4150 <col:27> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1852cee9428 'tweak' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    |     | |   |   |   `-IntegerLiteral 0x1852cee41a0 <col:35> 'int' 0
    |     | |   |   `-IntegerLiteral 0x1852cee4200 <col:41> 'int' 1
    |     | |   `-ImplicitCastExpr 0x1852cee42b8 <col:46> 'unsigned long long' <IntegralCast>
    |     | |     `-ImplicitCastExpr 0x1852cee42a0 <col:46> 'unsigned int' <LValueToRValue>
    |     | |       `-DeclRefExpr 0x1852cee4280 <col:46> 'unsigned int' lvalue Var 0x1852ceeabd0 'res' 'unsigned int'
    |     | `-BinaryOperator 0x1852cee4560 <line:73:13, col:46> 'u64':'unsigned long long' '='
    |     |   |-ArraySubscriptExpr 0x1852cee43a0 <col:13, col:22> 'u64':'unsigned long long' lvalue
    |     |   | |-ImplicitCastExpr 0x1852cee4388 <col:13, col:19> 'u64 *' <ArrayToPointerDecay>
    |     |   | | `-MemberExpr 0x1852cee4330 <col:13, col:19> 'u64 [2]' lvalue .u 0x1852cee9200
    |     |   | |   `-DeclRefExpr 0x1852cee4310 <col:13> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1852cee9428 'tweak' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    |     |   | `-IntegerLiteral 0x1852cee4360 <col:21> 'int' 1
    |     |   `-BinaryOperator 0x1852cee4540 <col:26, col:46> 'unsigned long long' '|'
    |     |     |-ParenExpr 0x1852cee44d0 <col:26, col:42> 'u64':'unsigned long long'
    |     |     | `-BinaryOperator 0x1852cee44b0 <col:27, col:41> 'u64':'unsigned long long' '<<'
    |     |     |   |-ImplicitCastExpr 0x1852cee4498 <col:27, col:36> 'u64':'unsigned long long' <LValueToRValue>
    |     |     |   | `-ArraySubscriptExpr 0x1852cee4450 <col:27, col:36> 'u64':'unsigned long long' lvalue
    |     |     |   |   |-ImplicitCastExpr 0x1852cee4438 <col:27, col:33> 'u64 *' <ArrayToPointerDecay>
    |     |     |   |   | `-MemberExpr 0x1852cee43e0 <col:27, col:33> 'u64 [2]' lvalue .u 0x1852cee9200
    |     |     |   |   |   `-DeclRefExpr 0x1852cee43c0 <col:27> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1852cee9428 'tweak' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    |     |     |   |   `-IntegerLiteral 0x1852cee4410 <col:35> 'int' 1
    |     |     |   `-IntegerLiteral 0x1852cee4470 <col:41> 'int' 1
    |     |     `-ImplicitCastExpr 0x1852cee4528 <col:46> 'unsigned long long' <IntegralCast>
    |     |       `-ImplicitCastExpr 0x1852cee4510 <col:46> 'unsigned int' <LValueToRValue>
    |     |         `-DeclRefExpr 0x1852cee44f0 <col:46> 'unsigned int' lvalue Var 0x1852ceeab50 'carry' 'unsigned int'
    |     `-CompoundStmt 0x1852cee4f28 <line:74:16, line:86:9>
    |       |-DeclStmt 0x1852cee4630 <line:75:13, col:21>
    |       | `-VarDecl 0x1852cee45c8 <col:13, col:20> col:20 used c 'size_t':'unsigned long long'
    |       |-ForStmt 0x1852cee4c68 <line:77:13, line:84:13>
    |       | |-BinaryOperator 0x1852cee4778 <line:77:18, col:29> 'unsigned int' ','
    |       | | |-BinaryOperator 0x1852cee46c0 <col:18, col:22> 'size_t':'unsigned long long' '='
    |       | | | |-DeclRefExpr 0x1852cee4648 <col:18> 'size_t':'unsigned long long' lvalue Var 0x1852cee45c8 'c' 'size_t':'unsigned long long'
    |       | | | `-ImplicitCastExpr 0x1852cee46a8 <col:22> 'size_t':'unsigned long long' <IntegralCast>
    |       | | |   `-IntegerLiteral 0x1852cee4680 <col:22> 'int' 0
    |       | | `-BinaryOperator 0x1852cee4758 <col:25, col:29> 'unsigned int' '='
    |       | |   |-DeclRefExpr 0x1852cee46e0 <col:25> 'unsigned int' lvalue Var 0x1852cee9568 'i' 'unsigned int'
    |       | |   `-ImplicitCastExpr 0x1852cee4740 <col:29> 'unsigned int' <IntegralCast>
    |       | |     `-IntegerLiteral 0x1852cee4718 <col:29> 'int' 0
    |       | |-<<<NULL>>>
    |       | |-BinaryOperator 0x1852cee4810 <col:32, col:36> 'int' '<'
    |       | | |-ImplicitCastExpr 0x1852cee47e0 <col:32> 'unsigned int' <LValueToRValue>
    |       | | | `-DeclRefExpr 0x1852cee4798 <col:32> 'unsigned int' lvalue Var 0x1852cee9568 'i' 'unsigned int'
    |       | | `-ImplicitCastExpr 0x1852cee47f8 <col:36> 'unsigned int' <IntegralCast>
    |       | |   `-IntegerLiteral 0x1852cee47b8 <col:36> 'int' 16
    |       | |-UnaryOperator 0x1852cee4850 <col:40, col:42> 'unsigned int' prefix '++'
    |       | | `-DeclRefExpr 0x1852cee4830 <col:42> 'unsigned int' lvalue Var 0x1852cee9568 'i' 'unsigned int'
    |       | `-CompoundStmt 0x1852cee4c40 <col:45, line:84:13>
    |       |   |-CompoundAssignOperator 0x1852cee4a00 <line:81:17, col:46> 'size_t':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    |       |   | |-DeclRefExpr 0x1852cee4868 <col:17> 'size_t':'unsigned long long' lvalue Var 0x1852cee45c8 'c' 'size_t':'unsigned long long'
    |       |   | `-BinaryOperator 0x1852cee49e0 <col:22, col:46> 'size_t':'unsigned long long' '<<'
    |       |   |   |-ParenExpr 0x1852cee4998 <col:22, col:41> 'size_t':'unsigned long long'
    |       |   |   | `-CStyleCastExpr 0x1852cee4970 <col:23, col:40> 'size_t':'unsigned long long' <IntegralCast>
    |       |   |   |   `-ImplicitCastExpr 0x1852cee4958 <col:31, col:40> 'u8':'unsigned char' <LValueToRValue> part_of_explicit_cast
    |       |   |   |     `-ArraySubscriptExpr 0x1852cee4928 <col:31, col:40> 'u8':'unsigned char' lvalue
    |       |   |   |       |-ImplicitCastExpr 0x1852cee48f8 <col:31, col:37> 'u8 *' <ArrayToPointerDecay>
    |       |   |   |       | `-MemberExpr 0x1852cee48a8 <col:31, col:37> 'u8 [16]' lvalue .c 0x1852cee9370
    |       |   |   |       |   `-DeclRefExpr 0x1852cee4888 <col:31> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1852cee9428 'tweak' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    |       |   |   |       `-ImplicitCastExpr 0x1852cee4910 <col:39> 'unsigned int' <LValueToRValue>
    |       |   |   |         `-DeclRefExpr 0x1852cee48d8 <col:39> 'unsigned int' lvalue Var 0x1852cee9568 'i' 'unsigned int'
    |       |   |   `-IntegerLiteral 0x1852cee49b8 <col:46> 'int' 1
    |       |   |-BinaryOperator 0x1852cee4b60 <line:82:17, col:34> 'u8':'unsigned char' '='
    |       |   | |-ArraySubscriptExpr 0x1852cee4ad0 <col:17, col:26> 'u8':'unsigned char' lvalue
    |       |   | | |-ImplicitCastExpr 0x1852cee4aa0 <col:17, col:23> 'u8 *' <ArrayToPointerDecay>
    |       |   | | | `-MemberExpr 0x1852cee4a50 <col:17, col:23> 'u8 [16]' lvalue .c 0x1852cee9370
    |       |   | | |   `-DeclRefExpr 0x1852cee4a30 <col:17> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1852cee9428 'tweak' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    |       |   | | `-ImplicitCastExpr 0x1852cee4ab8 <col:25> 'unsigned int' <LValueToRValue>
    |       |   | |   `-DeclRefExpr 0x1852cee4a80 <col:25> 'unsigned int' lvalue Var 0x1852cee9568 'i' 'unsigned int'
    |       |   | `-CStyleCastExpr 0x1852cee4b38 <col:30, col:34> 'u8':'unsigned char' <IntegralCast>
    |       |   |   `-ImplicitCastExpr 0x1852cee4b20 <col:34> 'size_t':'unsigned long long' <LValueToRValue> part_of_explicit_cast
    |       |   |     `-DeclRefExpr 0x1852cee4af0 <col:34> 'size_t':'unsigned long long' lvalue Var 0x1852cee45c8 'c' 'size_t':'unsigned long long'
    |       |   `-BinaryOperator 0x1852cee4c20 <line:83:17, col:26> 'size_t':'unsigned long long' '='
    |       |     |-DeclRefExpr 0x1852cee4b80 <col:17> 'size_t':'unsigned long long' lvalue Var 0x1852cee45c8 'c' 'size_t':'unsigned long long'
    |       |     `-BinaryOperator 0x1852cee4c00 <col:21, col:26> 'size_t':'unsigned long long' '>>'
    |       |       |-ImplicitCastExpr 0x1852cee4be8 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
    |       |       | `-DeclRefExpr 0x1852cee4ba0 <col:21> 'size_t':'unsigned long long' lvalue Var 0x1852cee45c8 'c' 'size_t':'unsigned long long'
    |       |       `-IntegerLiteral 0x1852cee4bc0 <col:26> 'int' 8
    |       `-CompoundAssignOperator 0x1852cee4ef8 <line:85:13, col:46> 'u8':'unsigned char' '^=' ComputeLHSTy='int' ComputeResultTy='int'
    |         |-ArraySubscriptExpr 0x1852cee4d30 <col:13, col:22> 'u8':'unsigned char' lvalue
    |         | |-ImplicitCastExpr 0x1852cee4d18 <col:13, col:19> 'u8 *' <ArrayToPointerDecay>
    |         | | `-MemberExpr 0x1852cee4cc0 <col:13, col:19> 'u8 [16]' lvalue .c 0x1852cee9370
    |         | |   `-DeclRefExpr 0x1852cee4ca0 <col:13> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1852cee9428 'tweak' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    |         | `-IntegerLiteral 0x1852cee4cf0 <col:21> 'int' 0
    |         `-ImplicitCastExpr 0x1852cee4ee0 <col:27, col:46> 'int' <IntegralCast>
    |           `-CStyleCastExpr 0x1852cee4eb8 <col:27, col:46> 'u8':'unsigned char' <IntegralCast>
    |             `-ParenExpr 0x1852cee4e98 <col:31, col:46> 'unsigned long long'
    |               `-BinaryOperator 0x1852cee4e48 <col:32, col:45> 'unsigned long long' '&'
    |                 |-ImplicitCastExpr 0x1852cee4e30 <col:32> 'unsigned long long' <IntegralCast>
    |                 | `-IntegerLiteral 0x1852cee4d50 <col:32> 'int' 135
    |                 `-ParenExpr 0x1852cee4e10 <col:39, col:45> 'unsigned long long'
    |                   `-BinaryOperator 0x1852cee4df0 <col:40, col:44> 'unsigned long long' '-'
    |                     |-ImplicitCastExpr 0x1852cee4dd8 <col:40> 'unsigned long long' <IntegralCast>
    |                     | `-IntegerLiteral 0x1852cee4d78 <col:40> 'int' 0
    |                     `-ImplicitCastExpr 0x1852cee4dc0 <col:44> 'size_t':'unsigned long long' <LValueToRValue>
    |                       `-DeclRefExpr 0x1852cee4da0 <col:44> 'size_t':'unsigned long long' lvalue Var 0x1852cee45c8 'c' 'size_t':'unsigned long long'
    |-IfStmt 0x1852cef2fd0 <line:88:5, line:154:5> has_else
    | |-ImplicitCastExpr 0x1852ceec0a0 <line:88:9> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x1852ceec080 <col:9> 'int' lvalue ParmVar 0x1852cee6ac8 'enc' 'int'
    | |-CompoundStmt 0x1852ceecf88 <col:14, line:100:5>
    | | |-ForStmt 0x1852ceec630 <line:89:9, line:93:9>
    | | | |-BinaryOperator 0x1852ceec118 <line:89:14, col:18> 'unsigned int' '='
    | | | | |-DeclRefExpr 0x1852ceec0b8 <col:14> 'unsigned int' lvalue Var 0x1852cee9568 'i' 'unsigned int'
    | | | | `-ImplicitCastExpr 0x1852ceec100 <col:18> 'unsigned int' <IntegralCast>
    | | | |   `-IntegerLiteral 0x1852ceec0d8 <col:18> 'int' 0
    | | | |-<<<NULL>>>
    | | | |-BinaryOperator 0x1852ceec1c0 <col:21, col:25> 'int' '<'
    | | | | |-ImplicitCastExpr 0x1852ceec1a8 <col:21> 'unsigned long long' <IntegralCast>
    | | | | | `-ImplicitCastExpr 0x1852ceec178 <col:21> 'unsigned int' <LValueToRValue>
    | | | | |   `-DeclRefExpr 0x1852ceec138 <col:21> 'unsigned int' lvalue Var 0x1852cee9568 'i' 'unsigned int'
    | | | | `-ImplicitCastExpr 0x1852ceec190 <col:25> 'size_t':'unsigned long long' <LValueToRValue>
    | | | |   `-DeclRefExpr 0x1852ceec158 <col:25> 'size_t':'unsigned long long' lvalue ParmVar 0x1852cee6a48 'len' 'size_t':'unsigned long long'
    | | | |-UnaryOperator 0x1852ceec200 <col:30, col:32> 'unsigned int' prefix '++'
    | | | | `-DeclRefExpr 0x1852ceec1e0 <col:32> 'unsigned int' lvalue Var 0x1852cee9568 'i' 'unsigned int'
    | | | `-CompoundStmt 0x1852ceec608 <col:35, line:93:9>
    | | |   |-DeclStmt 0x1852ceec338 <line:90:13, col:26>
    | | |   | `-VarDecl 0x1852ceec228 <col:13, col:25> col:16 used c 'u8':'unsigned char' cinit
    | | |   |   `-ImplicitCastExpr 0x1852ceec320 <col:20, col:25> 'unsigned char' <LValueToRValue>
    | | |   |     `-ArraySubscriptExpr 0x1852ceec300 <col:20, col:25> 'const unsigned char' lvalue
    | | |   |       |-ImplicitCastExpr 0x1852ceec2d0 <col:20> 'const unsigned char *' <LValueToRValue>
    | | |   |       | `-DeclRefExpr 0x1852ceec290 <col:20> 'const unsigned char *' lvalue ParmVar 0x1852cee6920 'inp' 'const unsigned char *'
    | | |   |       `-ImplicitCastExpr 0x1852ceec2e8 <col:24> 'unsigned int' <LValueToRValue>
    | | |   |         `-DeclRefExpr 0x1852ceec2b0 <col:24> 'unsigned int' lvalue Var 0x1852cee9568 'i' 'unsigned int'
    | | |   |-BinaryOperator 0x1852ceec4b8 <line:91:13, col:33> 'unsigned char' '='
    | | |   | |-ArraySubscriptExpr 0x1852ceec3c0 <col:13, col:18> 'unsigned char' lvalue
    | | |   | | |-ImplicitCastExpr 0x1852ceec390 <col:13> 'unsigned char *' <LValueToRValue>
    | | |   | | | `-DeclRefExpr 0x1852ceec350 <col:13> 'unsigned char *' lvalue ParmVar 0x1852cee69d0 'out' 'unsigned char *'
    | | |   | | `-ImplicitCastExpr 0x1852ceec3a8 <col:17> 'unsigned int' <LValueToRValue>
    | | |   | |   `-DeclRefExpr 0x1852ceec370 <col:17> 'unsigned int' lvalue Var 0x1852cee9568 'i' 'unsigned int'
    | | |   | `-ImplicitCastExpr 0x1852ceec4a0 <col:22, col:33> 'u8':'unsigned char' <LValueToRValue>
    | | |   |   `-ArraySubscriptExpr 0x1852ceec480 <col:22, col:33> 'u8':'unsigned char' lvalue
    | | |   |     |-ImplicitCastExpr 0x1852ceec450 <col:22, col:30> 'u8 *' <ArrayToPointerDecay>
    | | |   |     | `-MemberExpr 0x1852ceec400 <col:22, col:30> 'u8 [16]' lvalue .c 0x1852cee9370
    | | |   |     |   `-DeclRefExpr 0x1852ceec3e0 <col:22> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1852cee94b0 'scratch' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    | | |   |     `-ImplicitCastExpr 0x1852ceec468 <col:32> 'unsigned int' <LValueToRValue>
    | | |   |       `-DeclRefExpr 0x1852ceec430 <col:32> 'unsigned int' lvalue Var 0x1852cee9568 'i' 'unsigned int'
    | | |   `-BinaryOperator 0x1852ceec5e8 <line:92:13, col:28> 'u8':'unsigned char' '='
    | | |     |-ArraySubscriptExpr 0x1852ceec578 <col:13, col:24> 'u8':'unsigned char' lvalue
    | | |     | |-ImplicitCastExpr 0x1852ceec548 <col:13, col:21> 'u8 *' <ArrayToPointerDecay>
    | | |     | | `-MemberExpr 0x1852ceec4f8 <col:13, col:21> 'u8 [16]' lvalue .c 0x1852cee9370
    | | |     | |   `-DeclRefExpr 0x1852ceec4d8 <col:13> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1852cee94b0 'scratch' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    | | |     | `-ImplicitCastExpr 0x1852ceec560 <col:23> 'unsigned int' <LValueToRValue>
    | | |     |   `-DeclRefExpr 0x1852ceec528 <col:23> 'unsigned int' lvalue Var 0x1852cee9568 'i' 'unsigned int'
    | | |     `-ImplicitCastExpr 0x1852ceec5d0 <col:28> 'u8':'unsigned char' <LValueToRValue>
    | | |       `-DeclRefExpr 0x1852ceec598 <col:28> 'u8':'unsigned char' lvalue Var 0x1852ceec228 'c' 'u8':'unsigned char'
    | | |-CompoundAssignOperator 0x1852ceec7e0 <line:94:9, col:34> 'u64':'unsigned long long' '^=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    | | | |-ArraySubscriptExpr 0x1852ceec6f8 <col:9, col:20> 'u64':'unsigned long long' lvalue
    | | | | |-ImplicitCastExpr 0x1852ceec6e0 <col:9, col:17> 'u64 *' <ArrayToPointerDecay>
    | | | | | `-MemberExpr 0x1852ceec688 <col:9, col:17> 'u64 [2]' lvalue .u 0x1852cee9200
    | | | | |   `-DeclRefExpr 0x1852ceec668 <col:9> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1852cee94b0 'scratch' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    | | | | `-IntegerLiteral 0x1852ceec6b8 <col:19> 'int' 0
    | | | `-ImplicitCastExpr 0x1852ceec7c8 <col:25, col:34> 'u64':'unsigned long long' <LValueToRValue>
    | | |   `-ArraySubscriptExpr 0x1852ceec7a8 <col:25, col:34> 'u64':'unsigned long long' lvalue
    | | |     |-ImplicitCastExpr 0x1852ceec790 <col:25, col:31> 'u64 *' <ArrayToPointerDecay>
    | | |     | `-MemberExpr 0x1852ceec738 <col:25, col:31> 'u64 [2]' lvalue .u 0x1852cee9200
    | | |     |   `-DeclRefExpr 0x1852ceec718 <col:25> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1852cee9428 'tweak' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    | | |     `-IntegerLiteral 0x1852ceec768 <col:33> 'int' 0
    | | |-CompoundAssignOperator 0x1852ceec988 <line:95:9, col:34> 'u64':'unsigned long long' '^=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    | | | |-ArraySubscriptExpr 0x1852ceec8a0 <col:9, col:20> 'u64':'unsigned long long' lvalue
    | | | | |-ImplicitCastExpr 0x1852ceec888 <col:9, col:17> 'u64 *' <ArrayToPointerDecay>
    | | | | | `-MemberExpr 0x1852ceec830 <col:9, col:17> 'u64 [2]' lvalue .u 0x1852cee9200
    | | | | |   `-DeclRefExpr 0x1852ceec810 <col:9> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1852cee94b0 'scratch' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    | | | | `-IntegerLiteral 0x1852ceec860 <col:19> 'int' 1
    | | | `-ImplicitCastExpr 0x1852ceec970 <col:25, col:34> 'u64':'unsigned long long' <LValueToRValue>
    | | |   `-ArraySubscriptExpr 0x1852ceec950 <col:25, col:34> 'u64':'unsigned long long' lvalue
    | | |     |-ImplicitCastExpr 0x1852ceec938 <col:25, col:31> 'u64 *' <ArrayToPointerDecay>
    | | |     | `-MemberExpr 0x1852ceec8e0 <col:25, col:31> 'u64 [2]' lvalue .u 0x1852cee9200
    | | |     |   `-DeclRefExpr 0x1852ceec8c0 <col:25> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1852cee9428 'tweak' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    | | |     `-IntegerLiteral 0x1852ceec910 <col:33> 'int' 1
    | | |-CompoundAssignOperator 0x1852ceecbd0 <line:97:9, col:34> 'u64':'unsigned long long' '^=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    | | | |-ArraySubscriptExpr 0x1852ceecae8 <col:9, col:20> 'u64':'unsigned long long' lvalue
    | | | | |-ImplicitCastExpr 0x1852ceecad0 <col:9, col:17> 'u64 *' <ArrayToPointerDecay>
    | | | | | `-MemberExpr 0x1852ceeca78 <col:9, col:17> 'u64 [2]' lvalue .u 0x1852cee9200
    | | | | |   `-DeclRefExpr 0x1852ceeca58 <col:9> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1852cee94b0 'scratch' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    | | | | `-IntegerLiteral 0x1852ceecaa8 <col:19> 'int' 0
    | | | `-ImplicitCastExpr 0x1852ceecbb8 <col:25, col:34> 'u64':'unsigned long long' <LValueToRValue>
    | | |   `-ArraySubscriptExpr 0x1852ceecb98 <col:25, col:34> 'u64':'unsigned long long' lvalue
    | | |     |-ImplicitCastExpr 0x1852ceecb80 <col:25, col:31> 'u64 *' <ArrayToPointerDecay>
    | | |     | `-MemberExpr 0x1852ceecb28 <col:25, col:31> 'u64 [2]' lvalue .u 0x1852cee9200
    | | |     |   `-DeclRefExpr 0x1852ceecb08 <col:25> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1852cee9428 'tweak' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    | | |     `-IntegerLiteral 0x1852ceecb58 <col:33> 'int' 0
    | | |-CompoundAssignOperator 0x1852ceecd78 <line:98:9, col:34> 'u64':'unsigned long long' '^=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    | | | |-ArraySubscriptExpr 0x1852ceecc90 <col:9, col:20> 'u64':'unsigned long long' lvalue
    | | | | |-ImplicitCastExpr 0x1852ceecc78 <col:9, col:17> 'u64 *' <ArrayToPointerDecay>
    | | | | | `-MemberExpr 0x1852ceecc20 <col:9, col:17> 'u64 [2]' lvalue .u 0x1852cee9200
    | | | | |   `-DeclRefExpr 0x1852ceecc00 <col:9> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1852cee94b0 'scratch' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    | | | | `-IntegerLiteral 0x1852ceecc50 <col:19> 'int' 1
    | | | `-ImplicitCastExpr 0x1852ceecd60 <col:25, col:34> 'u64':'unsigned long long' <LValueToRValue>
    | | |   `-ArraySubscriptExpr 0x1852ceecd40 <col:25, col:34> 'u64':'unsigned long long' lvalue
    | | |     |-ImplicitCastExpr 0x1852ceecd28 <col:25, col:31> 'u64 *' <ArrayToPointerDecay>
    | | |     | `-MemberExpr 0x1852ceeccd0 <col:25, col:31> 'u64 [2]' lvalue .u 0x1852cee9200
    | | |     |   `-DeclRefExpr 0x1852ceeccb0 <col:25> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1852cee9428 'tweak' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    | | |     `-IntegerLiteral 0x1852ceecd00 <col:33> 'int' 1
    | | `-CallExpr 0x1852ceecef0 <line:99:9, col:39> 'void *'
    | |   |-ImplicitCastExpr 0x1852ceeced8 <col:9> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
    | |   | `-DeclRefExpr 0x1852ceecda8 <col:9> 'void *(void *, const void *, unsigned long long)' Function 0x1852ce78348 'memcpy' 'void *(void *, const void *, unsigned long long)'
    | |   |-ImplicitCastExpr 0x1852ceecf28 <col:16, col:22> 'void *' <BitCast>
    | |   | `-BinaryOperator 0x1852ceece28 <col:16, col:22> 'unsigned char *' '-'
    | |   |   |-ImplicitCastExpr 0x1852ceece10 <col:16> 'unsigned char *' <LValueToRValue>
    | |   |   | `-DeclRefExpr 0x1852ceecdc8 <col:16> 'unsigned char *' lvalue ParmVar 0x1852cee69d0 'out' 'unsigned char *'
    | |   |   `-IntegerLiteral 0x1852ceecde8 <col:22> 'int' 16
    | |   |-ImplicitCastExpr 0x1852ceecf58 <col:26, col:34> 'const void *' <BitCast>
    | |   | `-ImplicitCastExpr 0x1852ceecf40 <col:26, col:34> 'u8 *' <ArrayToPointerDecay>
    | |   |   `-MemberExpr 0x1852ceece68 <col:26, col:34> 'u8 [16]' lvalue .c 0x1852cee9370
    | |   |     `-DeclRefExpr 0x1852ceece48 <col:26> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1852cee94b0 'scratch' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    | |   `-ImplicitCastExpr 0x1852ceecf70 <col:37> 'unsigned long long' <IntegralCast>
    | |     `-IntegerLiteral 0x1852ceece98 <col:37> 'int' 16
    | `-CompoundStmt 0x1852cef2f68 <line:100:12, line:154:5>
    |   |-DeclStmt 0x1852cef2148 <line:101:9, line:104:17>
    |   | |-RecordDecl 0x1852ceecfc8 <line:101:9, line:104:9> line:101:9 union definition
    |   | | |-FieldDecl 0x1852cef1f60 <line:102:13, col:20> col:17 referenced u 'u64 [2]'
    |   | | `-FieldDecl 0x1852cef2018 <line:103:13, col:20> col:16 referenced c 'u8 [16]'
    |   | `-VarDecl 0x1852cef20c8 <line:101:9, line:104:11> col:11 used tweak1 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:101:9)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:101:9)'
    |   |-IfStmt 0x1852cef4660 <line:106:9, line:125:9> has_else
    |   | |-ImplicitCastExpr 0x1852cef21b0 <line:106:13, col:23> 'char' <LValueToRValue>
    |   | | `-MemberExpr 0x1852cef2180 <col:13, col:23> 'const char' lvalue .little 0x1852cee6e60
    |   | |   `-DeclRefExpr 0x1852cef2160 <col:13> 'const union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:19:11)':'const union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:19:11)' lvalue Var 0x1852cee6f18 'is_endian' 'const union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:19:11)':'const union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:19:11)'
    |   | |-CompoundStmt 0x1852cef2c78 <col:31, line:113:9>
    |   | | |-DeclStmt 0x1852cef22e0 <line:107:13, col:36>
    |   | | | |-VarDecl 0x1852cef21e0 <col:13, col:26> col:26 used carry 'unsigned int'
    |   | | | `-VarDecl 0x1852cef2260 <col:13, col:33> col:33 used res 'unsigned int'
    |   | | |-BinaryOperator 0x1852cef2520 <line:109:13, col:50> 'unsigned int' '='
    |   | | | |-DeclRefExpr 0x1852cef22f8 <col:13> 'unsigned int' lvalue Var 0x1852cef2260 'res' 'unsigned int'
    |   | | | `-ImplicitCastExpr 0x1852cef2508 <col:19, col:50> 'unsigned int' <IntegralCast>
    |   | | |   `-BinaryOperator 0x1852cef24e8 <col:19, col:50> 'int' '&'
    |   | | |     |-IntegerLiteral 0x1852cef2330 <col:19> 'int' 135
    |   | | |     `-ParenExpr 0x1852cef24c8 <col:26, col:50> 'int'
    |   | | |       `-BinaryOperator 0x1852cef24a8 <col:27, col:48> 'int' '>>'
    |   | | |         |-ParenExpr 0x1852cef2460 <col:27, col:43> 'int'
    |   | | |         | `-CStyleCastExpr 0x1852cef2438 <col:28, col:42> 'int' <IntegralCast>
    |   | | |         |   `-ImplicitCastExpr 0x1852cef2420 <col:33, col:42> 'u32':'unsigned int' <LValueToRValue> part_of_explicit_cast
    |   | | |         |     `-ArraySubscriptExpr 0x1852cef23e8 <col:33, col:42> 'u32':'unsigned int' lvalue
    |   | | |         |       |-ImplicitCastExpr 0x1852cef23d0 <col:33, col:39> 'u32 *' <ArrayToPointerDecay>
    |   | | |         |       | `-MemberExpr 0x1852cef2378 <col:33, col:39> 'u32 [4]' lvalue .d 0x1852cee92b8
    |   | | |         |       |   `-DeclRefExpr 0x1852cef2358 <col:33> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1852cee9428 'tweak' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    |   | | |         |       `-IntegerLiteral 0x1852cef23a8 <col:41> 'int' 3
    |   | | |         `-IntegerLiteral 0x1852cef2480 <col:48> 'int' 31
    |   | | |-BinaryOperator 0x1852cef2708 <line:110:13, col:52> 'unsigned int' '='
    |   | | | |-DeclRefExpr 0x1852cef2540 <col:13> 'unsigned int' lvalue Var 0x1852cef21e0 'carry' 'unsigned int'
    |   | | | `-CStyleCastExpr 0x1852cef26e0 <col:21, col:52> 'unsigned int' <IntegralCast>
    |   | | |   `-ParenExpr 0x1852cef26c0 <col:35, col:52> 'u64':'unsigned long long'
    |   | | |     `-BinaryOperator 0x1852cef2668 <col:36, col:50> 'u64':'unsigned long long' '>>'
    |   | | |       |-ImplicitCastExpr 0x1852cef2650 <col:36, col:45> 'u64':'unsigned long long' <LValueToRValue>
    |   | | |       | `-ArraySubscriptExpr 0x1852cef2608 <col:36, col:45> 'u64':'unsigned long long' lvalue
    |   | | |       |   |-ImplicitCastExpr 0x1852cef25f0 <col:36, col:42> 'u64 *' <ArrayToPointerDecay>
    |   | | |       |   | `-MemberExpr 0x1852cef2598 <col:36, col:42> 'u64 [2]' lvalue .u 0x1852cee9200
    |   | | |       |   |   `-DeclRefExpr 0x1852cef2578 <col:36> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1852cee9428 'tweak' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    |   | | |       |   `-IntegerLiteral 0x1852cef25c8 <col:44> 'int' 0
    |   | | |       `-IntegerLiteral 0x1852cef2628 <col:50> 'int' 63
    |   | | |-BinaryOperator 0x1852cef2990 <line:111:13, col:47> 'u64':'unsigned long long' '='
    |   | | | |-ArraySubscriptExpr 0x1852cef27d0 <col:13, col:23> 'u64':'unsigned long long' lvalue
    |   | | | | |-ImplicitCastExpr 0x1852cef27b8 <col:13, col:20> 'u64 *' <ArrayToPointerDecay>
    |   | | | | | `-MemberExpr 0x1852cef2760 <col:13, col:20> 'u64 [2]' lvalue .u 0x1852cef1f60
    |   | | | | |   `-DeclRefExpr 0x1852cef2728 <col:13> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:101:9)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:101:9)' lvalue Var 0x1852cef20c8 'tweak1' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:101:9)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:101:9)'
    |   | | | | `-IntegerLiteral 0x1852cef2790 <col:22> 'int' 0
    |   | | | `-BinaryOperator 0x1852cef2970 <col:27, col:47> 'unsigned long long' '^'
    |   | | |   |-ParenExpr 0x1852cef2900 <col:27, col:43> 'u64':'unsigned long long'
    |   | | |   | `-BinaryOperator 0x1852cef28e0 <col:28, col:42> 'u64':'unsigned long long' '<<'
    |   | | |   |   |-ImplicitCastExpr 0x1852cef28c8 <col:28, col:37> 'u64':'unsigned long long' <LValueToRValue>
    |   | | |   |   | `-ArraySubscriptExpr 0x1852cef2880 <col:28, col:37> 'u64':'unsigned long long' lvalue
    |   | | |   |   |   |-ImplicitCastExpr 0x1852cef2868 <col:28, col:34> 'u64 *' <ArrayToPointerDecay>
    |   | | |   |   |   | `-MemberExpr 0x1852cef2810 <col:28, col:34> 'u64 [2]' lvalue .u 0x1852cee9200
    |   | | |   |   |   |   `-DeclRefExpr 0x1852cef27f0 <col:28> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1852cee9428 'tweak' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    |   | | |   |   |   `-IntegerLiteral 0x1852cef2840 <col:36> 'int' 0
    |   | | |   |   `-IntegerLiteral 0x1852cef28a0 <col:42> 'int' 1
    |   | | |   `-ImplicitCastExpr 0x1852cef2958 <col:47> 'unsigned long long' <IntegralCast>
    |   | | |     `-ImplicitCastExpr 0x1852cef2940 <col:47> 'unsigned int' <LValueToRValue>
    |   | | |       `-DeclRefExpr 0x1852cef2920 <col:47> 'unsigned int' lvalue Var 0x1852cef2260 'res' 'unsigned int'
    |   | | `-BinaryOperator 0x1852cef2c58 <line:112:13, col:47> 'u64':'unsigned long long' '='
    |   | |   |-ArraySubscriptExpr 0x1852cef2a98 <col:13, col:23> 'u64':'unsigned long long' lvalue
    |   | |   | |-ImplicitCastExpr 0x1852cef2a80 <col:13, col:20> 'u64 *' <ArrayToPointerDecay>
    |   | |   | | `-MemberExpr 0x1852cef2a28 <col:13, col:20> 'u64 [2]' lvalue .u 0x1852cef1f60
    |   | |   | |   `-DeclRefExpr 0x1852cef2a08 <col:13> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:101:9)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:101:9)' lvalue Var 0x1852cef20c8 'tweak1' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:101:9)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:101:9)'
    |   | |   | `-IntegerLiteral 0x1852cef2a58 <col:22> 'int' 1
    |   | |   `-BinaryOperator 0x1852cef2c38 <col:27, col:47> 'unsigned long long' '|'
    |   | |     |-ParenExpr 0x1852cef2bc8 <col:27, col:43> 'u64':'unsigned long long'
    |   | |     | `-BinaryOperator 0x1852cef2ba8 <col:28, col:42> 'u64':'unsigned long long' '<<'
    |   | |     |   |-ImplicitCastExpr 0x1852cef2b90 <col:28, col:37> 'u64':'unsigned long long' <LValueToRValue>
    |   | |     |   | `-ArraySubscriptExpr 0x1852cef2b48 <col:28, col:37> 'u64':'unsigned long long' lvalue
    |   | |     |   |   |-ImplicitCastExpr 0x1852cef2b30 <col:28, col:34> 'u64 *' <ArrayToPointerDecay>
    |   | |     |   |   | `-MemberExpr 0x1852cef2ad8 <col:28, col:34> 'u64 [2]' lvalue .u 0x1852cee9200
    |   | |     |   |   |   `-DeclRefExpr 0x1852cef2ab8 <col:28> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1852cee9428 'tweak' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    |   | |     |   |   `-IntegerLiteral 0x1852cef2b08 <col:36> 'int' 1
    |   | |     |   `-IntegerLiteral 0x1852cef2b68 <col:42> 'int' 1
    |   | |     `-ImplicitCastExpr 0x1852cef2c20 <col:47> 'unsigned long long' <IntegralCast>
    |   | |       `-ImplicitCastExpr 0x1852cef2c08 <col:47> 'unsigned int' <LValueToRValue>
    |   | |         `-DeclRefExpr 0x1852cef2be8 <col:47> 'unsigned int' lvalue Var 0x1852cef21e0 'carry' 'unsigned int'
    |   | `-CompoundStmt 0x1852cef4638 <line:113:16, line:125:9>
    |   |   |-DeclStmt 0x1852cef2d28 <line:114:13, col:21>
    |   |   | `-VarDecl 0x1852cef2cc0 <col:13, col:20> col:20 used c 'size_t':'unsigned long long'
    |   |   |-ForStmt 0x1852cef4378 <line:116:13, line:123:13>
    |   |   | |-BinaryOperator 0x1852cef2e58 <line:116:18, col:29> 'unsigned int' ','
    |   |   | | |-BinaryOperator 0x1852cef2db8 <col:18, col:22> 'size_t':'unsigned long long' '='
    |   |   | | | |-DeclRefExpr 0x1852cef2d40 <col:18> 'size_t':'unsigned long long' lvalue Var 0x1852cef2cc0 'c' 'size_t':'unsigned long long'
    |   |   | | | `-ImplicitCastExpr 0x1852cef2da0 <col:22> 'size_t':'unsigned long long' <IntegralCast>
    |   |   | | |   `-IntegerLiteral 0x1852cef2d78 <col:22> 'int' 0
    |   |   | | `-BinaryOperator 0x1852cef2e38 <col:25, col:29> 'unsigned int' '='
    |   |   | |   |-DeclRefExpr 0x1852cef2dd8 <col:25> 'unsigned int' lvalue Var 0x1852cee9568 'i' 'unsigned int'
    |   |   | |   `-ImplicitCastExpr 0x1852cef2e20 <col:29> 'unsigned int' <IntegralCast>
    |   |   | |     `-IntegerLiteral 0x1852cef2df8 <col:29> 'int' 0
    |   |   | |-<<<NULL>>>
    |   |   | |-BinaryOperator 0x1852cef3f20 <col:32, col:36> 'int' '<'
    |   |   | | |-ImplicitCastExpr 0x1852cef2ec0 <col:32> 'unsigned int' <LValueToRValue>
    |   |   | | | `-DeclRefExpr 0x1852cef2e78 <col:32> 'unsigned int' lvalue Var 0x1852cee9568 'i' 'unsigned int'
    |   |   | | `-ImplicitCastExpr 0x1852cef2ed8 <col:36> 'unsigned int' <IntegralCast>
    |   |   | |   `-IntegerLiteral 0x1852cef2e98 <col:36> 'int' 16
    |   |   | |-UnaryOperator 0x1852cef3f60 <col:40, col:42> 'unsigned int' prefix '++'
    |   |   | | `-DeclRefExpr 0x1852cef3f40 <col:42> 'unsigned int' lvalue Var 0x1852cee9568 'i' 'unsigned int'
    |   |   | `-CompoundStmt 0x1852cef4350 <col:45, line:123:13>
    |   |   |   |-CompoundAssignOperator 0x1852cef4110 <line:120:17, col:46> 'size_t':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    |   |   |   | |-DeclRefExpr 0x1852cef3f78 <col:17> 'size_t':'unsigned long long' lvalue Var 0x1852cef2cc0 'c' 'size_t':'unsigned long long'
    |   |   |   | `-BinaryOperator 0x1852cef40f0 <col:22, col:46> 'size_t':'unsigned long long' '<<'
    |   |   |   |   |-ParenExpr 0x1852cef40a8 <col:22, col:41> 'size_t':'unsigned long long'
    |   |   |   |   | `-CStyleCastExpr 0x1852cef4080 <col:23, col:40> 'size_t':'unsigned long long' <IntegralCast>
    |   |   |   |   |   `-ImplicitCastExpr 0x1852cef4068 <col:31, col:40> 'u8':'unsigned char' <LValueToRValue> part_of_explicit_cast
    |   |   |   |   |     `-ArraySubscriptExpr 0x1852cef4038 <col:31, col:40> 'u8':'unsigned char' lvalue
    |   |   |   |   |       |-ImplicitCastExpr 0x1852cef4008 <col:31, col:37> 'u8 *' <ArrayToPointerDecay>
    |   |   |   |   |       | `-MemberExpr 0x1852cef3fb8 <col:31, col:37> 'u8 [16]' lvalue .c 0x1852cee9370
    |   |   |   |   |       |   `-DeclRefExpr 0x1852cef3f98 <col:31> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1852cee9428 'tweak' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    |   |   |   |   |       `-ImplicitCastExpr 0x1852cef4020 <col:39> 'unsigned int' <LValueToRValue>
    |   |   |   |   |         `-DeclRefExpr 0x1852cef3fe8 <col:39> 'unsigned int' lvalue Var 0x1852cee9568 'i' 'unsigned int'
    |   |   |   |   `-IntegerLiteral 0x1852cef40c8 <col:46> 'int' 1
    |   |   |   |-BinaryOperator 0x1852cef4270 <line:121:17, col:35> 'u8':'unsigned char' '='
    |   |   |   | |-ArraySubscriptExpr 0x1852cef41e0 <col:17, col:27> 'u8':'unsigned char' lvalue
    |   |   |   | | |-ImplicitCastExpr 0x1852cef41b0 <col:17, col:24> 'u8 *' <ArrayToPointerDecay>
    |   |   |   | | | `-MemberExpr 0x1852cef4160 <col:17, col:24> 'u8 [16]' lvalue .c 0x1852cef2018
    |   |   |   | | |   `-DeclRefExpr 0x1852cef4140 <col:17> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:101:9)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:101:9)' lvalue Var 0x1852cef20c8 'tweak1' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:101:9)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:101:9)'
    |   |   |   | | `-ImplicitCastExpr 0x1852cef41c8 <col:26> 'unsigned int' <LValueToRValue>
    |   |   |   | |   `-DeclRefExpr 0x1852cef4190 <col:26> 'unsigned int' lvalue Var 0x1852cee9568 'i' 'unsigned int'
    |   |   |   | `-CStyleCastExpr 0x1852cef4248 <col:31, col:35> 'u8':'unsigned char' <IntegralCast>
    |   |   |   |   `-ImplicitCastExpr 0x1852cef4230 <col:35> 'size_t':'unsigned long long' <LValueToRValue> part_of_explicit_cast
    |   |   |   |     `-DeclRefExpr 0x1852cef4200 <col:35> 'size_t':'unsigned long long' lvalue Var 0x1852cef2cc0 'c' 'size_t':'unsigned long long'
    |   |   |   `-BinaryOperator 0x1852cef4330 <line:122:17, col:26> 'size_t':'unsigned long long' '='
    |   |   |     |-DeclRefExpr 0x1852cef4290 <col:17> 'size_t':'unsigned long long' lvalue Var 0x1852cef2cc0 'c' 'size_t':'unsigned long long'
    |   |   |     `-BinaryOperator 0x1852cef4310 <col:21, col:26> 'size_t':'unsigned long long' '>>'
    |   |   |       |-ImplicitCastExpr 0x1852cef42f8 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
    |   |   |       | `-DeclRefExpr 0x1852cef42b0 <col:21> 'size_t':'unsigned long long' lvalue Var 0x1852cef2cc0 'c' 'size_t':'unsigned long long'
    |   |   |       `-IntegerLiteral 0x1852cef42d0 <col:26> 'int' 8
    |   |   `-CompoundAssignOperator 0x1852cef4608 <line:124:13, col:47> 'u8':'unsigned char' '^=' ComputeLHSTy='int' ComputeResultTy='int'
    |   |     |-ArraySubscriptExpr 0x1852cef4440 <col:13, col:23> 'u8':'unsigned char' lvalue
    |   |     | |-ImplicitCastExpr 0x1852cef4428 <col:13, col:20> 'u8 *' <ArrayToPointerDecay>
    |   |     | | `-MemberExpr 0x1852cef43d0 <col:13, col:20> 'u8 [16]' lvalue .c 0x1852cef2018
    |   |     | |   `-DeclRefExpr 0x1852cef43b0 <col:13> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:101:9)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:101:9)' lvalue Var 0x1852cef20c8 'tweak1' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:101:9)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:101:9)'
    |   |     | `-IntegerLiteral 0x1852cef4400 <col:22> 'int' 0
    |   |     `-ImplicitCastExpr 0x1852cef45f0 <col:28, col:47> 'int' <IntegralCast>
    |   |       `-CStyleCastExpr 0x1852cef45c8 <col:28, col:47> 'u8':'unsigned char' <IntegralCast>
    |   |         `-ParenExpr 0x1852cef45a8 <col:32, col:47> 'unsigned long long'
    |   |           `-BinaryOperator 0x1852cef4558 <col:33, col:46> 'unsigned long long' '&'
    |   |             |-ImplicitCastExpr 0x1852cef4540 <col:33> 'unsigned long long' <IntegralCast>
    |   |             | `-IntegerLiteral 0x1852cef4460 <col:33> 'int' 135
    |   |             `-ParenExpr 0x1852cef4520 <col:40, col:46> 'unsigned long long'
    |   |               `-BinaryOperator 0x1852cef4500 <col:41, col:45> 'unsigned long long' '-'
    |   |                 |-ImplicitCastExpr 0x1852cef44e8 <col:41> 'unsigned long long' <IntegralCast>
    |   |                 | `-IntegerLiteral 0x1852cef4488 <col:41> 'int' 0
    |   |                 `-ImplicitCastExpr 0x1852cef44d0 <col:45> 'size_t':'unsigned long long' <LValueToRValue>
    |   |                   `-DeclRefExpr 0x1852cef44b0 <col:45> 'size_t':'unsigned long long' lvalue Var 0x1852cef2cc0 'c' 'size_t':'unsigned long long'
    |   |-BinaryOperator 0x1852cef4910 <line:131:9, col:52> 'u64':'unsigned long long' '='
    |   | |-ArraySubscriptExpr 0x1852cef4718 <col:9, col:20> 'u64':'unsigned long long' lvalue
    |   | | |-ImplicitCastExpr 0x1852cef4700 <col:9, col:17> 'u64 *' <ArrayToPointerDecay>
    |   | | | `-MemberExpr 0x1852cef46a8 <col:9, col:17> 'u64 [2]' lvalue .u 0x1852cee9200
    |   | | |   `-DeclRefExpr 0x1852cef4688 <col:9> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1852cee94b0 'scratch' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    |   | | `-IntegerLiteral 0x1852cef46d8 <col:19> 'int' 0
    |   | `-BinaryOperator 0x1852cef48f0 <col:24, col:52> 'unsigned long long' '^'
    |   |   |-ImplicitCastExpr 0x1852cef48c0 <col:24, col:38> 'u64':'unsigned long long' <LValueToRValue>
    |   |   | `-ArraySubscriptExpr 0x1852cef47f0 <col:24, col:38> 'u64':'unsigned long long' lvalue
    |   |   |   |-ParenExpr 0x1852cef47a8 <col:24, col:35> 'u64 *'
    |   |   |   | `-CStyleCastExpr 0x1852cef4780 <col:25, col:32> 'u64 *' <BitCast>
    |   |   |   |   `-ImplicitCastExpr 0x1852cef4768 <col:32> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
    |   |   |   |     `-DeclRefExpr 0x1852cef4738 <col:32> 'const unsigned char *' lvalue ParmVar 0x1852cee6920 'inp' 'const unsigned char *'
    |   |   |   `-IntegerLiteral 0x1852cef47c8 <col:37> 'int' 0
    |   |   `-ImplicitCastExpr 0x1852cef48d8 <col:42, col:52> 'u64':'unsigned long long' <LValueToRValue>
    |   |     `-ArraySubscriptExpr 0x1852cef48a0 <col:42, col:52> 'u64':'unsigned long long' lvalue
    |   |       |-ImplicitCastExpr 0x1852cef4888 <col:42, col:49> 'u64 *' <ArrayToPointerDecay>
    |   |       | `-MemberExpr 0x1852cef4830 <col:42, col:49> 'u64 [2]' lvalue .u 0x1852cef1f60
    |   |       |   `-DeclRefExpr 0x1852cef4810 <col:42> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:101:9)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:101:9)' lvalue Var 0x1852cef20c8 'tweak1' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:101:9)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:101:9)'
    |   |       `-IntegerLiteral 0x1852cef4860 <col:51> 'int' 0
    |   |-BinaryOperator 0x1852cef4bb8 <line:132:9, col:52> 'u64':'unsigned long long' '='
    |   | |-ArraySubscriptExpr 0x1852cef49c0 <col:9, col:20> 'u64':'unsigned long long' lvalue
    |   | | |-ImplicitCastExpr 0x1852cef49a8 <col:9, col:17> 'u64 *' <ArrayToPointerDecay>
    |   | | | `-MemberExpr 0x1852cef4950 <col:9, col:17> 'u64 [2]' lvalue .u 0x1852cee9200
    |   | | |   `-DeclRefExpr 0x1852cef4930 <col:9> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1852cee94b0 'scratch' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    |   | | `-IntegerLiteral 0x1852cef4980 <col:19> 'int' 1
    |   | `-BinaryOperator 0x1852cef4b98 <col:24, col:52> 'unsigned long long' '^'
    |   |   |-ImplicitCastExpr 0x1852cef4b68 <col:24, col:38> 'u64':'unsigned long long' <LValueToRValue>
    |   |   | `-ArraySubscriptExpr 0x1852cef4a98 <col:24, col:38> 'u64':'unsigned long long' lvalue
    |   |   |   |-ParenExpr 0x1852cef4a50 <col:24, col:35> 'u64 *'
    |   |   |   | `-CStyleCastExpr 0x1852cef4a28 <col:25, col:32> 'u64 *' <BitCast>
    |   |   |   |   `-ImplicitCastExpr 0x1852cef4a10 <col:32> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
    |   |   |   |     `-DeclRefExpr 0x1852cef49e0 <col:32> 'const unsigned char *' lvalue ParmVar 0x1852cee6920 'inp' 'const unsigned char *'
    |   |   |   `-IntegerLiteral 0x1852cef4a70 <col:37> 'int' 1
    |   |   `-ImplicitCastExpr 0x1852cef4b80 <col:42, col:52> 'u64':'unsigned long long' <LValueToRValue>
    |   |     `-ArraySubscriptExpr 0x1852cef4b48 <col:42, col:52> 'u64':'unsigned long long' lvalue
    |   |       |-ImplicitCastExpr 0x1852cef4b30 <col:42, col:49> 'u64 *' <ArrayToPointerDecay>
    |   |       | `-MemberExpr 0x1852cef4ad8 <col:42, col:49> 'u64 [2]' lvalue .u 0x1852cef1f60
    |   |       |   `-DeclRefExpr 0x1852cef4ab8 <col:42> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:101:9)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:101:9)' lvalue Var 0x1852cef20c8 'tweak1' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:101:9)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:101:9)'
    |   |       `-IntegerLiteral 0x1852cef4b08 <col:51> 'int' 1
    |   |-CompoundAssignOperator 0x1852cef4df0 <line:135:9, col:35> 'u64':'unsigned long long' '^=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    |   | |-ArraySubscriptExpr 0x1852cef4d08 <col:9, col:20> 'u64':'unsigned long long' lvalue
    |   | | |-ImplicitCastExpr 0x1852cef4cf0 <col:9, col:17> 'u64 *' <ArrayToPointerDecay>
    |   | | | `-MemberExpr 0x1852cef4c98 <col:9, col:17> 'u64 [2]' lvalue .u 0x1852cee9200
    |   | | |   `-DeclRefExpr 0x1852cef4c78 <col:9> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1852cee94b0 'scratch' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    |   | | `-IntegerLiteral 0x1852cef4cc8 <col:19> 'int' 0
    |   | `-ImplicitCastExpr 0x1852cef4dd8 <col:25, col:35> 'u64':'unsigned long long' <LValueToRValue>
    |   |   `-ArraySubscriptExpr 0x1852cef4db8 <col:25, col:35> 'u64':'unsigned long long' lvalue
    |   |     |-ImplicitCastExpr 0x1852cef4da0 <col:25, col:32> 'u64 *' <ArrayToPointerDecay>
    |   |     | `-MemberExpr 0x1852cef4d48 <col:25, col:32> 'u64 [2]' lvalue .u 0x1852cef1f60
    |   |     |   `-DeclRefExpr 0x1852cef4d28 <col:25> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:101:9)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:101:9)' lvalue Var 0x1852cef20c8 'tweak1' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:101:9)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:101:9)'
    |   |     `-IntegerLiteral 0x1852cef4d78 <col:34> 'int' 0
    |   |-CompoundAssignOperator 0x1852cef4fa8 <line:136:9, col:35> 'u64':'unsigned long long' '^=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    |   | |-ArraySubscriptExpr 0x1852cef4eb0 <col:9, col:20> 'u64':'unsigned long long' lvalue
    |   | | |-ImplicitCastExpr 0x1852cef4e98 <col:9, col:17> 'u64 *' <ArrayToPointerDecay>
    |   | | | `-MemberExpr 0x1852cef4e40 <col:9, col:17> 'u64 [2]' lvalue .u 0x1852cee9200
    |   | | |   `-DeclRefExpr 0x1852cef4e20 <col:9> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1852cee94b0 'scratch' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    |   | | `-IntegerLiteral 0x1852cef4e70 <col:19> 'int' 1
    |   | `-ImplicitCastExpr 0x1852cef4f90 <col:25, col:35> 'u64':'unsigned long long' <LValueToRValue>
    |   |   `-ArraySubscriptExpr 0x1852cef4f70 <col:25, col:35> 'u64':'unsigned long long' lvalue
    |   |     |-ImplicitCastExpr 0x1852cef4f58 <col:25, col:32> 'u64 *' <ArrayToPointerDecay>
    |   |     | `-MemberExpr 0x1852cef4ef0 <col:25, col:32> 'u64 [2]' lvalue .u 0x1852cef1f60
    |   |     |   `-DeclRefExpr 0x1852cef4ed0 <col:25> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:101:9)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:101:9)' lvalue Var 0x1852cef20c8 'tweak1' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:101:9)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:101:9)'
    |   |     `-IntegerLiteral 0x1852cef4f30 <col:34> 'int' 1
    |   |-ForStmt 0x1852cef5610 <line:138:9, line:142:9>
    |   | |-BinaryOperator 0x1852cef5038 <line:138:14, col:18> 'unsigned int' '='
    |   | | |-DeclRefExpr 0x1852cef4fd8 <col:14> 'unsigned int' lvalue Var 0x1852cee9568 'i' 'unsigned int'
    |   | | `-ImplicitCastExpr 0x1852cef5020 <col:18> 'unsigned int' <IntegralCast>
    |   | |   `-IntegerLiteral 0x1852cef4ff8 <col:18> 'int' 0
    |   | |-<<<NULL>>>
    |   | |-BinaryOperator 0x1852cef50e0 <col:21, col:25> 'int' '<'
    |   | | |-ImplicitCastExpr 0x1852cef50c8 <col:21> 'unsigned long long' <IntegralCast>
    |   | | | `-ImplicitCastExpr 0x1852cef5098 <col:21> 'unsigned int' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x1852cef5058 <col:21> 'unsigned int' lvalue Var 0x1852cee9568 'i' 'unsigned int'
    |   | | `-ImplicitCastExpr 0x1852cef50b0 <col:25> 'size_t':'unsigned long long' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x1852cef5078 <col:25> 'size_t':'unsigned long long' lvalue ParmVar 0x1852cee6a48 'len' 'size_t':'unsigned long long'
    |   | |-UnaryOperator 0x1852cef5120 <col:30, col:32> 'unsigned int' prefix '++'
    |   | | `-DeclRefExpr 0x1852cef5100 <col:32> 'unsigned int' lvalue Var 0x1852cee9568 'i' 'unsigned int'
    |   | `-CompoundStmt 0x1852cef55e8 <col:35, line:142:9>
    |   |   |-DeclStmt 0x1852cef52b8 <line:139:13, col:31>
    |   |   | `-VarDecl 0x1852cef5148 <col:13, col:30> col:16 used c 'u8':'unsigned char' cinit
    |   |   |   `-ImplicitCastExpr 0x1852cef52a0 <col:20, col:30> 'unsigned char' <LValueToRValue>
    |   |   |     `-ArraySubscriptExpr 0x1852cef5280 <col:20, col:30> 'const unsigned char' lvalue
    |   |   |       |-ImplicitCastExpr 0x1852cef5268 <col:20> 'const unsigned char *' <LValueToRValue>
    |   |   |       | `-DeclRefExpr 0x1852cef51b0 <col:20> 'const unsigned char *' lvalue ParmVar 0x1852cee6920 'inp' 'const unsigned char *'
    |   |   |       `-BinaryOperator 0x1852cef5248 <col:24, col:29> 'unsigned int' '+'
    |   |   |         |-ImplicitCastExpr 0x1852cef5230 <col:24> 'unsigned int' <IntegralCast>
    |   |   |         | `-IntegerLiteral 0x1852cef51d0 <col:24> 'int' 16
    |   |   |         `-ImplicitCastExpr 0x1852cef5218 <col:29> 'unsigned int' <LValueToRValue>
    |   |   |           `-DeclRefExpr 0x1852cef51f8 <col:29> 'unsigned int' lvalue Var 0x1852cee9568 'i' 'unsigned int'
    |   |   |-BinaryOperator 0x1852cef5498 <line:140:13, col:38> 'unsigned char' '='
    |   |   | |-ArraySubscriptExpr 0x1852cef53a0 <col:13, col:23> 'unsigned char' lvalue
    |   |   | | |-ImplicitCastExpr 0x1852cef5388 <col:13> 'unsigned char *' <LValueToRValue>
    |   |   | | | `-DeclRefExpr 0x1852cef52d0 <col:13> 'unsigned char *' lvalue ParmVar 0x1852cee69d0 'out' 'unsigned char *'
    |   |   | | `-BinaryOperator 0x1852cef5368 <col:17, col:22> 'unsigned int' '+'
    |   |   | |   |-ImplicitCastExpr 0x1852cef5350 <col:17> 'unsigned int' <IntegralCast>
    |   |   | |   | `-IntegerLiteral 0x1852cef52f0 <col:17> 'int' 16
    |   |   | |   `-ImplicitCastExpr 0x1852cef5338 <col:22> 'unsigned int' <LValueToRValue>
    |   |   | |     `-DeclRefExpr 0x1852cef5318 <col:22> 'unsigned int' lvalue Var 0x1852cee9568 'i' 'unsigned int'
    |   |   | `-ImplicitCastExpr 0x1852cef5480 <col:27, col:38> 'u8':'unsigned char' <LValueToRValue>
    |   |   |   `-ArraySubscriptExpr 0x1852cef5460 <col:27, col:38> 'u8':'unsigned char' lvalue
    |   |   |     |-ImplicitCastExpr 0x1852cef5430 <col:27, col:35> 'u8 *' <ArrayToPointerDecay>
    |   |   |     | `-MemberExpr 0x1852cef53e0 <col:27, col:35> 'u8 [16]' lvalue .c 0x1852cee9370
    |   |   |     |   `-DeclRefExpr 0x1852cef53c0 <col:27> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1852cee94b0 'scratch' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    |   |   |     `-ImplicitCastExpr 0x1852cef5448 <col:37> 'unsigned int' <LValueToRValue>
    |   |   |       `-DeclRefExpr 0x1852cef5410 <col:37> 'unsigned int' lvalue Var 0x1852cee9568 'i' 'unsigned int'
    |   |   `-BinaryOperator 0x1852cef55c8 <line:141:13, col:28> 'u8':'unsigned char' '='
    |   |     |-ArraySubscriptExpr 0x1852cef5558 <col:13, col:24> 'u8':'unsigned char' lvalue
    |   |     | |-ImplicitCastExpr 0x1852cef5528 <col:13, col:21> 'u8 *' <ArrayToPointerDecay>
    |   |     | | `-MemberExpr 0x1852cef54d8 <col:13, col:21> 'u8 [16]' lvalue .c 0x1852cee9370
    |   |     | |   `-DeclRefExpr 0x1852cef54b8 <col:13> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1852cee94b0 'scratch' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    |   |     | `-ImplicitCastExpr 0x1852cef5540 <col:23> 'unsigned int' <LValueToRValue>
    |   |     |   `-DeclRefExpr 0x1852cef5508 <col:23> 'unsigned int' lvalue Var 0x1852cee9568 'i' 'unsigned int'
    |   |     `-ImplicitCastExpr 0x1852cef55b0 <col:28> 'u8':'unsigned char' <LValueToRValue>
    |   |       `-DeclRefExpr 0x1852cef5578 <col:28> 'u8':'unsigned char' lvalue Var 0x1852cef5148 'c' 'u8':'unsigned char'
    |   |-CompoundAssignOperator 0x1852cef57c0 <line:143:9, col:34> 'u64':'unsigned long long' '^=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    |   | |-ArraySubscriptExpr 0x1852cef56d8 <col:9, col:20> 'u64':'unsigned long long' lvalue
    |   | | |-ImplicitCastExpr 0x1852cef56c0 <col:9, col:17> 'u64 *' <ArrayToPointerDecay>
    |   | | | `-MemberExpr 0x1852cef5668 <col:9, col:17> 'u64 [2]' lvalue .u 0x1852cee9200
    |   | | |   `-DeclRefExpr 0x1852cef5648 <col:9> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1852cee94b0 'scratch' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    |   | | `-IntegerLiteral 0x1852cef5698 <col:19> 'int' 0
    |   | `-ImplicitCastExpr 0x1852cef57a8 <col:25, col:34> 'u64':'unsigned long long' <LValueToRValue>
    |   |   `-ArraySubscriptExpr 0x1852cef5788 <col:25, col:34> 'u64':'unsigned long long' lvalue
    |   |     |-ImplicitCastExpr 0x1852cef5770 <col:25, col:31> 'u64 *' <ArrayToPointerDecay>
    |   |     | `-MemberExpr 0x1852cef5718 <col:25, col:31> 'u64 [2]' lvalue .u 0x1852cee9200
    |   |     |   `-DeclRefExpr 0x1852cef56f8 <col:25> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1852cee9428 'tweak' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    |   |     `-IntegerLiteral 0x1852cef5748 <col:33> 'int' 0
    |   |-CompoundAssignOperator 0x1852cef5968 <line:144:9, col:34> 'u64':'unsigned long long' '^=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    |   | |-ArraySubscriptExpr 0x1852cef5880 <col:9, col:20> 'u64':'unsigned long long' lvalue
    |   | | |-ImplicitCastExpr 0x1852cef5868 <col:9, col:17> 'u64 *' <ArrayToPointerDecay>
    |   | | | `-MemberExpr 0x1852cef5810 <col:9, col:17> 'u64 [2]' lvalue .u 0x1852cee9200
    |   | | |   `-DeclRefExpr 0x1852cef57f0 <col:9> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1852cee94b0 'scratch' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    |   | | `-IntegerLiteral 0x1852cef5840 <col:19> 'int' 1
    |   | `-ImplicitCastExpr 0x1852cef5950 <col:25, col:34> 'u64':'unsigned long long' <LValueToRValue>
    |   |   `-ArraySubscriptExpr 0x1852cef5930 <col:25, col:34> 'u64':'unsigned long long' lvalue
    |   |     |-ImplicitCastExpr 0x1852cef5918 <col:25, col:31> 'u64 *' <ArrayToPointerDecay>
    |   |     | `-MemberExpr 0x1852cef58c0 <col:25, col:31> 'u64 [2]' lvalue .u 0x1852cee9200
    |   |     |   `-DeclRefExpr 0x1852cef58a0 <col:25> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1852cee9428 'tweak' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    |   |     `-IntegerLiteral 0x1852cef58f0 <col:33> 'int' 1
    |   |-BinaryOperator 0x1852cef5cc0 <line:151:9, col:51> 'u64':'unsigned long long' '='
    |   | |-ArraySubscriptExpr 0x1852cef5af0 <col:9, col:23> 'u64':'unsigned long long' lvalue
    |   | | |-ParenExpr 0x1852cef5aa8 <col:9, col:20> 'u64 *'
    |   | | | `-CStyleCastExpr 0x1852cef5a80 <col:10, col:17> 'u64 *' <BitCast>
    |   | | |   `-ImplicitCastExpr 0x1852cef5a68 <col:17> 'unsigned char *' <LValueToRValue> part_of_explicit_cast
    |   | | |     `-DeclRefExpr 0x1852cef5a38 <col:17> 'unsigned char *' lvalue ParmVar 0x1852cee69d0 'out' 'unsigned char *'
    |   | | `-IntegerLiteral 0x1852cef5ac8 <col:22> 'int' 0
    |   | `-BinaryOperator 0x1852cef5ca0 <col:27, col:51> 'unsigned long long' '^'
    |   |   |-ImplicitCastExpr 0x1852cef5c70 <col:27, col:38> 'u64':'unsigned long long' <LValueToRValue>
    |   |   | `-ArraySubscriptExpr 0x1852cef5ba0 <col:27, col:38> 'u64':'unsigned long long' lvalue
    |   |   |   |-ImplicitCastExpr 0x1852cef5b88 <col:27, col:35> 'u64 *' <ArrayToPointerDecay>
    |   |   |   | `-MemberExpr 0x1852cef5b30 <col:27, col:35> 'u64 [2]' lvalue .u 0x1852cee9200
    |   |   |   |   `-DeclRefExpr 0x1852cef5b10 <col:27> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1852cee94b0 'scratch' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    |   |   |   `-IntegerLiteral 0x1852cef5b60 <col:37> 'int' 0
    |   |   `-ImplicitCastExpr 0x1852cef5c88 <col:42, col:51> 'u64':'unsigned long long' <LValueToRValue>
    |   |     `-ArraySubscriptExpr 0x1852cef5c50 <col:42, col:51> 'u64':'unsigned long long' lvalue
    |   |       |-ImplicitCastExpr 0x1852cef5c38 <col:42, col:48> 'u64 *' <ArrayToPointerDecay>
    |   |       | `-MemberExpr 0x1852cef5be0 <col:42, col:48> 'u64 [2]' lvalue .u 0x1852cee9200
    |   |       |   `-DeclRefExpr 0x1852cef5bc0 <col:42> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1852cee9428 'tweak' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    |   |       `-IntegerLiteral 0x1852cef5c10 <col:50> 'int' 0
    |   `-BinaryOperator 0x1852cef2f48 <line:152:9, col:51> 'u64':'unsigned long long' '='
    |     |-ArraySubscriptExpr 0x1852cef5d98 <col:9, col:23> 'u64':'unsigned long long' lvalue
    |     | |-ParenExpr 0x1852cef5d50 <col:9, col:20> 'u64 *'
    |     | | `-CStyleCastExpr 0x1852cef5d28 <col:10, col:17> 'u64 *' <BitCast>
    |     | |   `-ImplicitCastExpr 0x1852cef5d10 <col:17> 'unsigned char *' <LValueToRValue> part_of_explicit_cast
    |     | |     `-DeclRefExpr 0x1852cef5ce0 <col:17> 'unsigned char *' lvalue ParmVar 0x1852cee69d0 'out' 'unsigned char *'
    |     | `-IntegerLiteral 0x1852cef5d70 <col:22> 'int' 1
    |     `-BinaryOperator 0x1852cef2f28 <col:27, col:51> 'unsigned long long' '^'
    |       |-ImplicitCastExpr 0x1852cef5f18 <col:27, col:38> 'u64':'unsigned long long' <LValueToRValue>
    |       | `-ArraySubscriptExpr 0x1852cef5e48 <col:27, col:38> 'u64':'unsigned long long' lvalue
    |       |   |-ImplicitCastExpr 0x1852cef5e30 <col:27, col:35> 'u64 *' <ArrayToPointerDecay>
    |       |   | `-MemberExpr 0x1852cef5dd8 <col:27, col:35> 'u64 [2]' lvalue .u 0x1852cee9200
    |       |   |   `-DeclRefExpr 0x1852cef5db8 <col:27> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1852cee94b0 'scratch' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    |       |   `-IntegerLiteral 0x1852cef5e08 <col:37> 'int' 1
    |       `-ImplicitCastExpr 0x1852cef2f10 <col:42, col:51> 'u64':'unsigned long long' <LValueToRValue>
    |         `-ArraySubscriptExpr 0x1852cef5ef8 <col:42, col:51> 'u64':'unsigned long long' lvalue
    |           |-ImplicitCastExpr 0x1852cef5ee0 <col:42, col:48> 'u64 *' <ArrayToPointerDecay>
    |           | `-MemberExpr 0x1852cef5e88 <col:42, col:48> 'u64 [2]' lvalue .u 0x1852cee9200
    |           |   `-DeclRefExpr 0x1852cef5e68 <col:42> 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)' lvalue Var 0x1852cee9428 'tweak' 'union (anonymous union at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/before\crypto\modes\xts128.c:25:5)'
    |           `-IntegerLiteral 0x1852cef5eb8 <col:50> 'int' 1
    `-ReturnStmt 0x1852cef3020 <line:156:5, col:12>
      `-IntegerLiteral 0x1852cef2ff8 <col:12> 'int' 0
