TranslationUnitDecl 0x1f669310fb8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1f669311850 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1f669311550 '__int128'
|-TypedefDecl 0x1f6693118c0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1f669311570 'unsigned __int128'
|-TypedefDecl 0x1f669311bf8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1f6693119b0 'struct __NSConstantString_tag'
|   `-Record 0x1f669311918 '__NSConstantString_tag'
|-TypedefDecl 0x1f669311c68 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x1f669311190 'unsigned long long'
|-TypedefDecl 0x1f669311d00 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1f669311cc0 'char *'
|   `-BuiltinType 0x1f669311050 'char'
|-TypedefDecl 0x1f669311d70 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1f669311cc0 'char *'
|   `-BuiltinType 0x1f669311050 'char'
|-TypedefDecl 0x1f669311e30 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x1f669311190 'unsigned long long'
|-TypedefDecl 0x1f669311ea0 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x1f669311cc0 'char *'
|   `-BuiltinType 0x1f669311050 'char'
|-FunctionDecl 0x1f66ae19400 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1f66ae194a0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x1f66ae19510 <col:21> Implicit
|-FunctionDecl 0x1f66ae19568 prev 0x1f66ae19400 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1f66ae19290 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x1f66ae19658 <col:21> Inherited Implicit
|-TypedefDecl 0x1f66ae19698 prev 0x1f669311c68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x1f669311190 'unsigned long long'
|-TypedefDecl 0x1f66ae19740 <line:503:1, col:16> col:16 rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x1f66ae19710 'size_t' sugar
|   |-Typedef 0x1f66ae19698 'size_t'
|   `-BuiltinType 0x1f669311190 'unsigned long long'
|-TypedefDecl 0x1f66ae197b0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x1f6693110f0 'long long'
|-TypedefDecl 0x1f66ae19820 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x1f6693110f0 'long long'
|-TypedefDecl 0x1f66ae19890 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x1f669311130 'unsigned short'
|-TypedefDecl 0x1f66ae19900 <line:541:1, col:24> col:24 referenced wint_t 'unsigned short'
| `-BuiltinType 0x1f669311130 'unsigned short'
|-TypedefDecl 0x1f66ae19970 <line:542:1, col:24> col:24 referenced wctype_t 'unsigned short'
| `-BuiltinType 0x1f669311130 'unsigned short'
|-TypedefDecl 0x1f66ae199e0 <line:563:1, col:13> col:13 errno_t 'int'
| `-BuiltinType 0x1f6693110b0 'int'
|-TypedefDecl 0x1f66ae19a50 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x1f6693110d0 'long'
|-TypedefDecl 0x1f66ae19ac0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x1f6693110f0 'long long'
|-TypedefDecl 0x1f66ae19b50 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x1f66ae19b20 '__time64_t' sugar
|   |-Typedef 0x1f66ae19ac0 '__time64_t'
|   `-BuiltinType 0x1f6693110f0 'long long'
|-FunctionDecl 0x1f66ae19cc8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x1f66ae19ee8 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x1f66ae50da0 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x1f66ae1a028 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x1f66ae1a0a0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x1f66ae1a118 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x1f66ae1a198 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x1f66ae50b40 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x1f66ae50e80 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x1f66ae50f40 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x1f66ae510b0 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x1f66ae51060 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x1f66ae51000 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x1f66ae50f20 'struct threadlocaleinfostruct'
|       `-Record 0x1f66ae5cc00 'threadlocaleinfostruct'
|-TypedefDecl 0x1f66ae511c0 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x1f66ae51170 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x1f66ae51110 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x1f66ae50fe0 'struct threadmbcinfostruct'
|       `-Record 0x1f66ae50f40 'threadmbcinfostruct'
|-RecordDecl 0x1f66ae51218 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x1f66ae512d0 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x1f66ae51390 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1f66ae51420 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x1f66ae514b0 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x1f66ae51568 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x1f66ae51510 'struct localeinfo_struct' sugar
|   `-RecordType 0x1f66ae51370 'struct localeinfo_struct'
|     `-Record 0x1f66ae512d0 'localeinfo_struct'
|-TypedefDecl 0x1f66ae51640 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x1f66ae515f0 'struct localeinfo_struct *'
|   `-ElaboratedType 0x1f66ae51510 'struct localeinfo_struct' sugar
|     `-RecordType 0x1f66ae51370 'struct localeinfo_struct'
|       `-Record 0x1f66ae512d0 'localeinfo_struct'
|-RecordDecl 0x1f66ae516b8 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x1f66ae51770 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1f66ae517e8 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x1f66ae518a8 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x1f66ae51940 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x1f66ae519b0 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x1f66ae51a68 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x1f66ae51a10 'struct localerefcount' sugar
|   `-RecordType 0x1f66ae51750 'struct localerefcount'
|     `-Record 0x1f66ae516b8 'localerefcount'
|-RecordDecl 0x1f66ae5cc00 prev 0x1f66ae50e80 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x1f66ae5cc80 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1f66ae5ccf8 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x1f66ae5cd68 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x1f66ae5cdd8 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x1f66ae5ce48 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x1f66ae5d008 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x1f66ae5d078 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x1f66ae5d0e8 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x1f66ae5d158 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x1f66ae5d1c8 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x1f66ae5d238 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x1f66ae5d290 parent 0x1f669310fb8 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x1f66ae5d420 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x1f66ae5d490 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x1f66ae5d500 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x1f66ae5d570 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x1f66ae5d610 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x1f66ae5d680 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x1f66ae5d790 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x1f66ae5d8c8 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x1f66ae5d978 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x1f66ae5d920 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x1f66ae50f20 'struct threadlocaleinfostruct'
|     `-Record 0x1f66ae5cc00 'threadlocaleinfostruct'
|-FunctionDecl 0x1f66ae5db10 <D:\Microsoft Visual Studio 12.0\VC\include\ctype.h:49:9, col:58> col:40 __pctype_func 'const unsigned short *(void) __attribute__((cdecl))':'const unsigned short *(void)'
|-VarDecl 0x1f66ae5fc30 <line:51:9, col:38> col:38 _pctype 'const unsigned short *' extern
|-VarDecl 0x1f66ae5fd30 <line:62:9, col:45> col:37 _wctype 'const unsigned short []' extern
|-FunctionDecl 0x1f66ae5ff28 <line:73:9, col:53> col:34 __pwctype_func 'const wctype_t *(void) __attribute__((cdecl))':'const wctype_t *(void)'
|-VarDecl 0x1f66ae5fff0 <line:75:9, col:32> col:32 _pwctype 'const wctype_t *' extern
|-FunctionDecl 0x1f66ae60270 <line:119:24, col:72> col:36 _isctype 'int (int, int) __attribute__((cdecl))':'int (int, int)'
| |-ParmVarDecl 0x1f66ae60088 <col:50, col:54> col:54 _C 'int'
| `-ParmVarDecl 0x1f66ae60108 <col:63, col:67> col:67 _Type 'int'
|-FunctionDecl 0x1f66ae60648 <line:120:24, col:102> col:36 _isctype_l 'int (int, int, _locale_t) __attribute__((cdecl))':'int (int, int, _locale_t)'
| |-ParmVarDecl 0x1f66ae60350 <col:52, col:56> col:56 _C 'int'
| |-ParmVarDecl 0x1f66ae603d0 <col:65, col:69> col:69 _Type 'int'
| `-ParmVarDecl 0x1f66ae60470 <col:85, col:95> col:95 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f66ae60878 <line:121:55> col:55 implicit isalpha 'int (int)' extern
| |-ParmVarDecl 0x1f66ae60918 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1f66ae60988 <col:55> Implicit
| `-PureAttr 0x1f66ae609e0 <col:55> Implicit
|-FunctionDecl 0x1f66ae60a08 prev 0x1f66ae60878 <col:43, col:74> col:55 isalpha 'int (int)'
| |-ParmVarDecl 0x1f66ae60730 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x1f66ae60af8 <col:55> Inherited Implicit
| `-PureAttr 0x1f66ae60b20 <col:55> Inherited Implicit
|-FunctionDecl 0x1f66ae62e10 <line:122:24, col:86> col:36 _isalpha_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1f66ae60b60 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1f66ae62c60 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f66ae62fd0 <line:123:55> col:55 implicit isupper 'int (int)' extern
| |-ParmVarDecl 0x1f66ae63070 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1f66ae630e0 <col:55> Implicit
| `-PureAttr 0x1f66ae63138 <col:55> Implicit
|-FunctionDecl 0x1f66ae63160 prev 0x1f66ae62fd0 <col:43, col:74> col:55 isupper 'int (int)'
| |-ParmVarDecl 0x1f66ae62ef0 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x1f66ae63250 <col:55> Inherited Implicit
| `-PureAttr 0x1f66ae63278 <col:55> Inherited Implicit
|-FunctionDecl 0x1f66ae63430 <line:124:24, col:86> col:36 _isupper_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1f66ae632b8 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1f66ae63330 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f66ae635f0 <line:125:55> col:55 implicit islower 'int (int)' extern
| |-ParmVarDecl 0x1f66ae63690 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1f66ae63700 <col:55> Implicit
| `-PureAttr 0x1f66ae63758 <col:55> Implicit
|-FunctionDecl 0x1f66ae63780 prev 0x1f66ae635f0 <col:43, col:74> col:55 islower 'int (int)'
| |-ParmVarDecl 0x1f66ae63510 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x1f66ae63870 <col:55> Inherited Implicit
| `-PureAttr 0x1f66ae63898 <col:55> Inherited Implicit
|-FunctionDecl 0x1f66ae63a50 <line:126:24, col:86> col:36 _islower_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1f66ae638d8 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1f66ae63950 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f66ae5bbf0 <line:127:55> col:55 implicit isdigit 'int (int)' extern
| |-ParmVarDecl 0x1f66ae5bc90 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1f66ae5bd00 <col:55> Implicit
| `-PureAttr 0x1f66ae5bd58 <col:55> Implicit
|-FunctionDecl 0x1f66ae5bd80 prev 0x1f66ae5bbf0 <col:43, col:74> col:55 isdigit 'int (int)'
| |-ParmVarDecl 0x1f66ae63b30 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x1f66ae5be70 <col:55> Inherited Implicit
| `-PureAttr 0x1f66ae5be98 <col:55> Inherited Implicit
|-FunctionDecl 0x1f66ae5c050 <line:128:24, col:86> col:36 _isdigit_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1f66ae5bed8 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1f66ae5bf50 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f66ae5c210 <line:129:36> col:36 implicit isxdigit 'int (int)' extern
| |-ParmVarDecl 0x1f66ae5c2b0 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1f66ae5c320 <col:36> Implicit
| `-PureAttr 0x1f66ae5c378 <col:36> Implicit
|-FunctionDecl 0x1f66ae5c3a0 prev 0x1f66ae5c210 <col:24, col:56> col:36 isxdigit 'int (int)'
| |-ParmVarDecl 0x1f66ae5c130 <col:50, col:54> col:54 _C 'int'
| |-NoThrowAttr 0x1f66ae5c490 <col:36> Inherited Implicit
| `-PureAttr 0x1f66ae5c4b8 <col:36> Inherited Implicit
|-FunctionDecl 0x1f66ae5c670 <line:130:24, col:87> col:36 _isxdigit_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1f66ae5c4f8 <col:53, col:57> col:57 _C 'int'
| `-ParmVarDecl 0x1f66ae5c570 <col:70, col:80> col:80 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f66ae5c830 <line:131:55> col:55 implicit isspace 'int (int)' extern
| |-ParmVarDecl 0x1f66ae5c8d0 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1f66ae5c940 <col:55> Implicit
| `-PureAttr 0x1f66ae5c998 <col:55> Implicit
|-FunctionDecl 0x1f66ae5c9c0 prev 0x1f66ae5c830 <col:43, col:74> col:55 isspace 'int (int)'
| |-ParmVarDecl 0x1f66ae5c750 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x1f66ae5cab0 <col:55> Inherited Implicit
| `-PureAttr 0x1f66ae5cad8 <col:55> Inherited Implicit
|-FunctionDecl 0x1f66ae63d70 <line:132:24, col:86> col:36 _isspace_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1f66ae5cb18 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1f66ae63c70 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f66ae63f30 <line:133:36> col:36 implicit ispunct 'int (int)' extern
| |-ParmVarDecl 0x1f66ae63fd0 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1f66ae64040 <col:36> Implicit
| `-PureAttr 0x1f66ae64098 <col:36> Implicit
|-FunctionDecl 0x1f66ae640c0 prev 0x1f66ae63f30 <col:24, col:55> col:36 ispunct 'int (int)'
| |-ParmVarDecl 0x1f66ae63e50 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x1f66ae641b0 <col:36> Inherited Implicit
| `-PureAttr 0x1f66ae641d8 <col:36> Inherited Implicit
|-FunctionDecl 0x1f66ae64390 <line:134:24, col:86> col:36 _ispunct_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1f66ae64218 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1f66ae64290 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f66ae64550 <line:135:36> col:36 implicit isblank 'int (int)' extern
| |-ParmVarDecl 0x1f66ae645f0 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1f66ae64660 <col:36> Implicit
| `-PureAttr 0x1f66ae646b8 <col:36> Implicit
|-FunctionDecl 0x1f66ae646e0 prev 0x1f66ae64550 <col:24, col:55> col:36 isblank 'int (int)'
| |-ParmVarDecl 0x1f66ae64470 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x1f66ae647d0 <col:36> Inherited Implicit
| `-PureAttr 0x1f66ae647f8 <col:36> Inherited Implicit
|-FunctionDecl 0x1f66ae649b0 <line:136:24, col:86> col:36 _isblank_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1f66ae64838 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1f66ae648b0 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f66ae64b70 <line:137:55> col:55 implicit isalnum 'int (int)' extern
| |-ParmVarDecl 0x1f66ae66ca0 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1f66ae66d10 <col:55> Implicit
| `-PureAttr 0x1f66ae66d68 <col:55> Implicit
|-FunctionDecl 0x1f66ae66d90 prev 0x1f66ae64b70 <col:43, col:74> col:55 isalnum 'int (int)'
| |-ParmVarDecl 0x1f66ae64a90 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x1f66ae66e80 <col:55> Inherited Implicit
| `-PureAttr 0x1f66ae66ea8 <col:55> Inherited Implicit
|-FunctionDecl 0x1f66ae67060 <line:138:24, col:86> col:36 _isalnum_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1f66ae66ee8 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1f66ae66f60 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f66ae67220 <line:139:36> col:36 implicit isprint 'int (int)' extern
| |-ParmVarDecl 0x1f66ae672c0 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1f66ae67330 <col:36> Implicit
| `-PureAttr 0x1f66ae67388 <col:36> Implicit
|-FunctionDecl 0x1f66ae673b0 prev 0x1f66ae67220 <col:24, col:55> col:36 isprint 'int (int)'
| |-ParmVarDecl 0x1f66ae67140 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x1f66ae674a0 <col:36> Inherited Implicit
| `-PureAttr 0x1f66ae674c8 <col:36> Inherited Implicit
|-FunctionDecl 0x1f66ae67680 <line:140:24, col:86> col:36 _isprint_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1f66ae67508 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1f66ae67580 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f66ae67840 <line:141:36> col:36 implicit isgraph 'int (int)' extern
| |-ParmVarDecl 0x1f66ae678e0 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1f66ae67950 <col:36> Implicit
| `-PureAttr 0x1f66ae679a8 <col:36> Implicit
|-FunctionDecl 0x1f66ae679d0 prev 0x1f66ae67840 <col:24, col:55> col:36 isgraph 'int (int)'
| |-ParmVarDecl 0x1f66ae67760 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x1f66ae67ac0 <col:36> Inherited Implicit
| `-PureAttr 0x1f66ae67ae8 <col:36> Inherited Implicit
|-FunctionDecl 0x1f66ae65c90 <line:142:24, col:86> col:36 _isgraph_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1f66ae67b28 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1f66ae67ba0 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f66ae65e50 <line:143:36> col:36 implicit iscntrl 'int (int)' extern
| |-ParmVarDecl 0x1f66ae65ef0 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1f66ae65f60 <col:36> Implicit
| `-PureAttr 0x1f66ae65fb8 <col:36> Implicit
|-FunctionDecl 0x1f66ae65fe0 prev 0x1f66ae65e50 <col:24, col:55> col:36 iscntrl 'int (int)'
| |-ParmVarDecl 0x1f66ae65d70 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x1f66ae660d0 <col:36> Inherited Implicit
| `-PureAttr 0x1f66ae660f8 <col:36> Inherited Implicit
|-FunctionDecl 0x1f66ae662b0 <line:144:24, col:86> col:36 _iscntrl_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1f66ae66138 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1f66ae661b0 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f66ae66470 <line:145:55> col:55 implicit toupper 'int (int)' extern
| |-ParmVarDecl 0x1f66ae66510 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1f66ae66580 <col:55> Implicit
| `-PureAttr 0x1f66ae665d8 <col:55> Implicit
|-FunctionDecl 0x1f66ae66600 prev 0x1f66ae66470 <col:43, col:74> col:55 toupper 'int (int)'
| |-ParmVarDecl 0x1f66ae66390 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x1f66ae666f0 <col:55> Inherited Implicit
| `-PureAttr 0x1f66ae66718 <col:55> Inherited Implicit
|-FunctionDecl 0x1f66ae66838 <line:146:55> col:55 implicit tolower 'int (int)' extern
| |-ParmVarDecl 0x1f66ae668d8 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1f66ae66948 <col:55> Implicit
| `-PureAttr 0x1f66ae669a0 <col:55> Implicit
|-FunctionDecl 0x1f66ae669c8 prev 0x1f66ae66838 <col:43, col:74> col:55 tolower 'int (int)'
| |-ParmVarDecl 0x1f66ae66758 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x1f66ae66ab8 <col:55> Inherited Implicit
| `-PureAttr 0x1f66ae66ae0 <col:55> Inherited Implicit
|-FunctionDecl 0x1f66ae67cb0 <line:147:43, col:75> col:55 _tolower 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1f66ae66b20 <col:69, col:73> col:73 _C 'int'
|-FunctionDecl 0x1f66ae67f00 <line:148:24, col:86> col:36 _tolower_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1f66ae67d88 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1f66ae67e00 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f66ae680c0 <line:149:43, col:75> col:55 _toupper 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1f66ae67fe0 <col:69, col:73> col:73 _C 'int'
|-FunctionDecl 0x1f66ae68310 <line:150:24, col:86> col:36 _toupper_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1f66ae68198 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1f66ae68210 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f66ae684d0 <line:151:24, col:57> col:36 __isascii 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1f66ae683f0 <col:51, col:55> col:55 _C 'int'
|-FunctionDecl 0x1f66ae68688 <line:152:24, col:57> col:36 __toascii 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1f66ae685a8 <col:51, col:55> col:55 _C 'int'
|-FunctionDecl 0x1f66ae68840 <line:153:24, col:57> col:36 __iscsymf 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1f66ae68760 <col:51, col:55> col:55 _C 'int'
|-FunctionDecl 0x1f66ae689f8 <line:154:24, col:56> col:36 __iscsym 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1f66ae68918 <col:50, col:54> col:54 _C 'int'
|-FunctionDecl 0x1f66ae6bcf0 <line:164:24, col:59> col:36 iswalpha 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1f66ae68af0 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1f66ae6bfe0 <line:165:24, col:90> col:36 _iswalpha_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1f66ae6bdc0 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1f66ae6be38 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f66ae6c198 <line:166:24, col:59> col:36 iswupper 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1f66ae6c0b8 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1f66ae6c3e0 <line:167:24, col:90> col:36 _iswupper_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1f66ae6c268 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1f66ae6c2e0 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f66ae6c598 <line:168:24, col:59> col:36 iswlower 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1f66ae6c4b8 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1f66ae6c7e0 <line:169:24, col:90> col:36 _iswlower_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1f66ae6c668 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1f66ae6c6e0 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f66ae6c998 <line:170:24, col:59> col:36 iswdigit 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1f66ae6c8b8 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1f66ae6cbe0 <line:171:24, col:90> col:36 _iswdigit_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1f66ae6ca68 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1f66ae6cae0 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f66ae68da0 <line:172:24, col:60> col:36 iswxdigit 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1f66ae68cc0 <col:51, col:58> col:58 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1f66ae68fe8 <line:173:24, col:91> col:36 _iswxdigit_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1f66ae68e70 <col:54, col:61> col:61 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1f66ae68ee8 <col:74, col:84> col:84 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f66ae691a0 <line:174:24, col:59> col:36 iswspace 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1f66ae690c0 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1f66ae693e8 <line:175:24, col:90> col:36 _iswspace_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1f66ae69270 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1f66ae692e8 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f66ae695a0 <line:176:24, col:59> col:36 iswpunct 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1f66ae694c0 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1f66ae697e8 <line:177:24, col:90> col:36 _iswpunct_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1f66ae69670 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1f66ae696e8 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f66ae699a0 <line:178:24, col:59> col:36 iswblank 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1f66ae698c0 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1f66ae69be8 <line:179:24, col:90> col:36 _iswblank_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1f66ae69a70 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1f66ae69ae8 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f66ae69db0 <line:180:24, col:59> col:36 iswalnum 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1f66ae69cd0 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1f66ae69ff8 <line:181:24, col:90> col:36 _iswalnum_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1f66ae69e80 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1f66ae69ef8 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f66ae6a1b0 <line:182:24, col:59> col:36 iswprint 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1f66ae6a0d0 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1f66ae6a3f8 <line:183:24, col:90> col:36 _iswprint_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1f66ae6a280 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1f66ae6a2f8 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f66ae6a5b0 <line:184:24, col:59> col:36 iswgraph 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1f66ae6a4d0 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1f66ae6a7f8 <line:185:24, col:90> col:36 _iswgraph_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1f66ae6a680 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1f66ae6a6f8 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f66ae6a9b0 <line:186:24, col:59> col:36 iswcntrl 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1f66ae6a8d0 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1f66ae6abf8 <line:187:24, col:90> col:36 _iswcntrl_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1f66ae6aa80 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1f66ae6aaf8 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f66ae6adc0 <line:188:24, col:59> col:36 iswascii 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1f66ae6ace0 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1f66ae6b000 <line:190:24, col:62> col:39 towupper 'wint_t (wint_t) __attribute__((cdecl))':'wint_t (wint_t)'
| `-ParmVarDecl 0x1f66ae6ae90 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1f66ae6b2e8 <line:191:24, col:93> col:39 _towupper_l 'wint_t (wint_t, _locale_t) __attribute__((cdecl))':'wint_t (wint_t, _locale_t)'
| |-ParmVarDecl 0x1f66ae6b0d0 <col:56, col:63> col:63 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1f66ae6b148 <col:76, col:86> col:86 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f66ae6b498 <line:192:24, col:62> col:39 towlower 'wint_t (wint_t) __attribute__((cdecl))':'wint_t (wint_t)'
| `-ParmVarDecl 0x1f66ae6b3c0 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1f66ae6b6d8 <line:193:24, col:93> col:39 _towlower_l 'wint_t (wint_t, _locale_t) __attribute__((cdecl))':'wint_t (wint_t, _locale_t)'
| |-ParmVarDecl 0x1f66ae6b568 <col:56, col:63> col:63 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1f66ae6b5e0 <col:76, col:86> col:86 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f66ae6b9d0 <line:194:24, col:80> col:36 iswctype 'int (wint_t, wctype_t) __attribute__((cdecl))':'int (wint_t, wctype_t)'
| |-ParmVarDecl 0x1f66ae6b7b0 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1f66ae6b828 <col:66, col:75> col:75 _Type 'wctype_t':'unsigned short'
|-FunctionDecl 0x1f66ae64d28 <line:195:24, col:111> col:36 _iswctype_l 'int (wint_t, wctype_t, _locale_t) __attribute__((cdecl))':'int (wint_t, wctype_t, _locale_t)'
| |-ParmVarDecl 0x1f66ae6baa8 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| |-ParmVarDecl 0x1f66ae6bb20 <col:69, col:78> col:78 _Type 'wctype_t':'unsigned short'
| `-ParmVarDecl 0x1f66ae6bb98 <col:94, col:104> col:104 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f66ae64ee8 <line:197:24, col:61> col:36 __iswcsymf 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1f66ae64e08 <col:52, col:59> col:59 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1f66ae65130 <line:198:24, col:90> col:36 _iswcsymf_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1f66ae64fb8 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1f66ae65030 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f66ae652e8 <line:199:24, col:60> col:36 __iswcsym 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1f66ae65208 <col:51, col:58> col:58 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1f66ae65530 <line:200:24, col:89> col:36 _iswcsym_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1f66ae653b8 <col:52, col:59> col:59 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1f66ae65430 <col:72, col:82> col:82 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f66ae656f0 <line:203:24, col:58> col:36 isleadbyte 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1f66ae65610 <col:52, col:56> col:56 _C 'int'
|-FunctionDecl 0x1f66ae65940 <line:204:24, col:89> col:36 _isleadbyte_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1f66ae657c8 <col:55, col:59> col:59 _C 'int'
| `-ParmVarDecl 0x1f66ae65840 <col:72, col:82> col:82 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f66ae6cd40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\ctype.h:205:90> col:45 is_wctype 'int (wint_t, wctype_t) __attribute__((cdecl))':'int (wint_t, wctype_t)'
| |-ParmVarDecl 0x1f66ae65b18 <col:60, col:67> col:67 _C 'wint_t':'unsigned short'
| |-ParmVarDecl 0x1f66ae65b90 <col:76, col:85> col:85 _Type 'wctype_t':'unsigned short'
| `-DeprecatedAttr 0x1f66ae6cdf0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using iswctype instead. See online help for details." ""
|-VarDecl 0x1f66ae6cf38 <D:\Microsoft Visual Studio 12.0\VC\include\ctype.h:235:9, col:20> col:20 __mb_cur_max 'int' extern
|-FunctionDecl 0x1f66ae6d0e0 <line:239:9, col:44> col:21 ___mb_cur_max_func 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1f66ae6d308 <line:240:9, col:51> col:21 ___mb_cur_max_l_func 'int (_locale_t) __attribute__((cdecl))':'int (_locale_t)'
| `-ParmVarDecl 0x1f66ae6d1a8 <col:42> col:51 '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f66ae6d680 <.//openssl//file_jk/before\crypto\o_str.c:17:1, line:26:1> line:17:5 OPENSSL_memcmp 'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x1f66ae6d410 <col:20, col:32> col:32 used v1 'const void *'
| |-ParmVarDecl 0x1f66ae6d490 <col:36, col:48> col:48 used v2 'const void *'
| |-ParmVarDecl 0x1f66ae6d508 <col:52, col:59> col:59 used n 'size_t':'unsigned long long'
| `-CompoundStmt 0x1f66aec3c68 <line:18:1, line:26:1>
|   |-DeclStmt 0x1f66ae6d908 <line:19:5, col:43>
|   | |-VarDecl 0x1f66ae6d768 <col:5, col:31> col:26 used c1 'const unsigned char *' cinit
|   | | `-ImplicitCastExpr 0x1f66ae6d808 <col:31> 'const unsigned char *' <BitCast>
|   | |   `-ImplicitCastExpr 0x1f66ae6d7f0 <col:31> 'const void *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x1f66ae6d7d0 <col:31> 'const void *' lvalue ParmVar 0x1f66ae6d410 'v1' 'const void *'
|   | `-VarDecl 0x1f66ae6d838 <col:5, col:41> col:36 used c2 'const unsigned char *' cinit
|   |   `-ImplicitCastExpr 0x1f66ae6d8d8 <col:41> 'const unsigned char *' <BitCast>
|   |     `-ImplicitCastExpr 0x1f66ae6d8c0 <col:41> 'const void *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1f66ae6d8a0 <col:41> 'const void *' lvalue ParmVar 0x1f66ae6d490 'v2' 'const void *'
|   |-DeclStmt 0x1f66ae6d9c8 <line:20:5, col:16>
|   | `-VarDecl 0x1f66ae6d938 <col:5, col:15> col:9 used ret 'int' cinit
|   |   `-IntegerLiteral 0x1f66ae6d9a0 <col:15> 'int' 0
|   |-WhileStmt 0x1f66aec3c08 <line:22:5, line:23:22>
|   | |-BinaryOperator 0x1f66ae6dc28 <line:22:12, col:38> 'int' '&&'
|   | | |-ImplicitCastExpr 0x1f66ae6dc10 <col:12> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1f66ae6d9e0 <col:12> 'size_t':'unsigned long long' lvalue ParmVar 0x1f66ae6d508 'n' 'size_t':'unsigned long long'
|   | | `-BinaryOperator 0x1f66ae6dbf0 <col:17, col:38> 'int' '=='
|   | |   |-ParenExpr 0x1f66ae6dba8 <col:17, col:33> 'int'
|   | |   | `-BinaryOperator 0x1f66ae6db88 <col:18, col:31> 'int' '='
|   | |   |   |-DeclRefExpr 0x1f66ae6da00 <col:18> 'int' lvalue Var 0x1f66ae6d938 'ret' 'int'
|   | |   |   `-BinaryOperator 0x1f66ae6db68 <col:24, col:31> 'int' '-'
|   | |   |     |-ImplicitCastExpr 0x1f66ae6db20 <col:24, col:25> 'int' <IntegralCast>
|   | |   |     | `-ImplicitCastExpr 0x1f66ae6db08 <col:24, col:25> 'unsigned char' <LValueToRValue>
|   | |   |     |   `-UnaryOperator 0x1f66ae6da88 <col:24, col:25> 'const unsigned char' lvalue prefix '*' cannot overflow
|   | |   |     |     `-ImplicitCastExpr 0x1f66ae6da70 <col:25> 'const unsigned char *' <LValueToRValue>
|   | |   |     |       `-DeclRefExpr 0x1f66ae6da38 <col:25> 'const unsigned char *' lvalue Var 0x1f66ae6d768 'c1' 'const unsigned char *'
|   | |   |     `-ImplicitCastExpr 0x1f66ae6db50 <col:30, col:31> 'int' <IntegralCast>
|   | |   |       `-ImplicitCastExpr 0x1f66ae6db38 <col:30, col:31> 'unsigned char' <LValueToRValue>
|   | |   |         `-UnaryOperator 0x1f66ae6daf0 <col:30, col:31> 'const unsigned char' lvalue prefix '*' cannot overflow
|   | |   |           `-ImplicitCastExpr 0x1f66ae6dad8 <col:31> 'const unsigned char *' <LValueToRValue>
|   | |   |             `-DeclRefExpr 0x1f66ae6daa0 <col:31> 'const unsigned char *' lvalue Var 0x1f66ae6d838 'c2' 'const unsigned char *'
|   | |   `-IntegerLiteral 0x1f66ae6dbc8 <col:38> 'int' 0
|   | `-BinaryOperator 0x1f66aec3be8 <line:23:9, col:22> 'const unsigned char *' ','
|   |   |-BinaryOperator 0x1f66ae6dcb8 <col:9, col:16> 'const unsigned char *' ','
|   |   | |-UnaryOperator 0x1f66ae6dc68 <col:9, col:10> 'size_t':'unsigned long long' postfix '--'
|   |   | | `-DeclRefExpr 0x1f66ae6dc48 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x1f66ae6d508 'n' 'size_t':'unsigned long long'
|   |   | `-UnaryOperator 0x1f66ae6dca0 <col:14, col:16> 'const unsigned char *' postfix '++'
|   |   |   `-DeclRefExpr 0x1f66ae6dc80 <col:14> 'const unsigned char *' lvalue Var 0x1f66ae6d768 'c1' 'const unsigned char *'
|   |   `-UnaryOperator 0x1f66aec3bd0 <col:20, col:22> 'const unsigned char *' postfix '++'
|   |     `-DeclRefExpr 0x1f66ae6dcd8 <col:20> 'const unsigned char *' lvalue Var 0x1f66ae6d838 'c2' 'const unsigned char *'
|   `-ReturnStmt 0x1f66aec3c58 <line:25:5, col:12>
|     `-ImplicitCastExpr 0x1f66aec3c40 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1f66aec3c20 <col:12> 'int' lvalue Var 0x1f66ae6d938 'ret' 'int'
|-FunctionDecl 0x1f66aec3ee0 <line:28:1, line:40:1> line:28:7 CRYPTO_strdup 'char *(const char *, const char *, int)'
| |-ParmVarDecl 0x1f66aec3cb0 <col:21, col:33> col:33 used str 'const char *'
| |-ParmVarDecl 0x1f66aec3d30 <col:38, col:50> col:50 used file 'const char *'
| |-ParmVarDecl 0x1f66aec3db0 <col:56, col:60> col:60 used line 'int'
| `-CompoundStmt 0x1f66aec4b58 <line:29:1, line:40:1>
|   |-DeclStmt 0x1f66aec4030 <line:30:5, col:14>
|   | `-VarDecl 0x1f66aec3fc8 <col:5, col:11> col:11 used ret 'char *'
|   |-DeclStmt 0x1f66aec40c0 <line:31:5, col:16>
|   | `-VarDecl 0x1f66aec4058 <col:5, col:12> col:12 used size 'size_t':'unsigned long long'
|   |-BinaryOperator 0x1f66aec43c0 <line:35:5, col:26> 'size_t':'unsigned long long' '='
|   | |-DeclRefExpr 0x1f66aec40f8 <col:5> 'size_t':'unsigned long long' lvalue Var 0x1f66aec4058 'size' 'size_t':'unsigned long long'
|   | `-BinaryOperator 0x1f66aec43a0 <col:12, col:26> 'unsigned long long' '+'
|   |   |-CallExpr 0x1f66aec4320 <col:12, col:22> 'unsigned long long'
|   |   | |-ImplicitCastExpr 0x1f66aec4308 <col:12> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1f66aec4270 <col:12> 'unsigned long long (const char *)' Function 0x1f66aec4160 'strlen' 'unsigned long long (const char *)'
|   |   | `-ImplicitCastExpr 0x1f66aec4348 <col:19> 'const char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1f66aec42a8 <col:19> 'const char *' lvalue ParmVar 0x1f66aec3cb0 'str' 'const char *'
|   |   `-ImplicitCastExpr 0x1f66aec4388 <col:26> 'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x1f66aec4360 <col:26> 'int' 1
|   |-BinaryOperator 0x1f66aec4698 <line:36:5, col:41> 'char *' '='
|   | |-DeclRefExpr 0x1f66aec43e0 <col:5> 'char *' lvalue Var 0x1f66aec3fc8 'ret' 'char *'
|   | `-ImplicitCastExpr 0x1f66aec4680 <col:11, col:41> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x1f66aec4600 <col:11, col:41> 'int'
|   |     |-ImplicitCastExpr 0x1f66aec45e8 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1f66aec4538 <col:11> 'int ()' Function 0x1f66aec4470 'CRYPTO_malloc' 'int ()'
|   |     |-ImplicitCastExpr 0x1f66aec4638 <col:25> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1f66aec4558 <col:25> 'size_t':'unsigned long long' lvalue Var 0x1f66aec4058 'size' 'size_t':'unsigned long long'
|   |     |-ImplicitCastExpr 0x1f66aec4650 <col:31> 'const char *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1f66aec4578 <col:31> 'const char *' lvalue ParmVar 0x1f66aec3d30 'file' 'const char *'
|   |     `-ImplicitCastExpr 0x1f66aec4668 <col:37> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x1f66aec4598 <col:37> 'int' lvalue ParmVar 0x1f66aec3db0 'line' 'int'
|   |-IfStmt 0x1f66aec4af8 <line:37:5, line:38:30>
|   | |-OpaqueValueExpr 0x1f66aec4ae0 <<invalid sloc>> '_Bool'
|   | `-CallExpr 0x1f66aec4a30 <col:9, col:30> 'void *'
|   |   |-ImplicitCastExpr 0x1f66aec4a18 <col:9> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1f66aec4910 <col:9> 'void *(void *, const void *, unsigned long long)' Function 0x1f66aec4720 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   |   |-ImplicitCastExpr 0x1f66aec4a80 <col:16> 'void *' <BitCast>
|   |   | `-ImplicitCastExpr 0x1f66aec4a68 <col:16> 'char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1f66aec4948 <col:16> 'char *' lvalue Var 0x1f66aec3fc8 'ret' 'char *'
|   |   |-ImplicitCastExpr 0x1f66aec4ab0 <col:21> 'const void *' <BitCast>
|   |   | `-ImplicitCastExpr 0x1f66aec4a98 <col:21> 'const char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1f66aec4968 <col:21> 'const char *' lvalue ParmVar 0x1f66aec3cb0 'str' 'const char *'
|   |   `-ImplicitCastExpr 0x1f66aec4ac8 <col:26> 'size_t':'unsigned long long' <LValueToRValue>
|   |     `-DeclRefExpr 0x1f66aec4988 <col:26> 'size_t':'unsigned long long' lvalue Var 0x1f66aec4058 'size' 'size_t':'unsigned long long'
|   `-ReturnStmt 0x1f66aec4b48 <line:39:5, col:12>
|     `-ImplicitCastExpr 0x1f66aec4b30 <col:12> 'char *' <LValueToRValue>
|       `-DeclRefExpr 0x1f66aec4b10 <col:12> 'char *' lvalue Var 0x1f66aec3fc8 'ret' 'char *'
|-FunctionDecl 0x1f66aec4160 <line:35:12> col:12 implicit used strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x1f66aec4200 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1f66aec4720 <line:38:9> col:9 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1f66aec47c0 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1f66aec4828 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1f66aec4890 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1f66aec4f00 <line:42:1, line:58:1> line:42:7 CRYPTO_strndup 'char *(const char *, size_t, const char *, int)'
| |-ParmVarDecl 0x1f66aec4be0 <col:22, col:34> col:34 used str 'const char *'
| |-ParmVarDecl 0x1f66aec4c58 <col:39, col:46> col:46 used s 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f66aec4cd8 <col:49, col:61> col:61 used file 'const char *'
| |-ParmVarDecl 0x1f66aec4d58 <col:67, col:71> col:71 used line 'int'
| `-CompoundStmt 0x1f66aec5868 <line:43:1, line:58:1>
|   |-DeclStmt 0x1f66aec5050 <line:44:5, col:18>
|   | `-VarDecl 0x1f66aec4fe8 <col:5, col:12> col:12 used maxlen 'size_t':'unsigned long long'
|   |-DeclStmt 0x1f66aec50e8 <line:45:5, col:14>
|   | `-VarDecl 0x1f66aec5080 <col:5, col:11> col:11 used ret 'char *'
|   |-BinaryOperator 0x1f66aec5338 <line:50:5, col:36> 'size_t':'unsigned long long' '='
|   | |-DeclRefExpr 0x1f66aec5120 <col:5> 'size_t':'unsigned long long' lvalue Var 0x1f66aec4fe8 'maxlen' 'size_t':'unsigned long long'
|   | `-ImplicitCastExpr 0x1f66aec5320 <col:14, col:36> 'size_t':'unsigned long long' <IntegralCast>
|   |   `-CallExpr 0x1f66aec52c0 <col:14, col:36> 'int'
|   |     |-ImplicitCastExpr 0x1f66aec52a8 <col:14> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1f66aec5248 <col:14> 'int ()' Function 0x1f66aec5180 'OPENSSL_strnlen' 'int ()'
|   |     |-ImplicitCastExpr 0x1f66aec52f0 <col:30> 'const char *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1f66aec5268 <col:30> 'const char *' lvalue ParmVar 0x1f66aec4be0 'str' 'const char *'
|   |     `-ImplicitCastExpr 0x1f66aec5308 <col:35> 'size_t':'unsigned long long' <LValueToRValue>
|   |       `-DeclRefExpr 0x1f66aec5288 <col:35> 'size_t':'unsigned long long' lvalue ParmVar 0x1f66aec4c58 's' 'size_t':'unsigned long long'
|   |-BinaryOperator 0x1f66aec5520 <line:52:5, col:47> 'char *' '='
|   | |-DeclRefExpr 0x1f66aec5358 <col:5> 'char *' lvalue Var 0x1f66aec5080 'ret' 'char *'
|   | `-ImplicitCastExpr 0x1f66aec5508 <col:11, col:47> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x1f66aec54a0 <col:11, col:47> 'int'
|   |     |-ImplicitCastExpr 0x1f66aec5488 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1f66aec5390 <col:11> 'int ()' Function 0x1f66aec4470 'CRYPTO_malloc' 'int ()'
|   |     |-BinaryOperator 0x1f66aec5428 <col:25, col:34> 'unsigned long long' '+'
|   |     | |-ImplicitCastExpr 0x1f66aec53f8 <col:25> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1f66aec53b0 <col:25> 'size_t':'unsigned long long' lvalue Var 0x1f66aec4fe8 'maxlen' 'size_t':'unsigned long long'
|   |     | `-ImplicitCastExpr 0x1f66aec5410 <col:34> 'unsigned long long' <IntegralCast>
|   |     |   `-IntegerLiteral 0x1f66aec53d0 <col:34> 'int' 1
|   |     |-ImplicitCastExpr 0x1f66aec54d8 <col:37> 'const char *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1f66aec5448 <col:37> 'const char *' lvalue ParmVar 0x1f66aec4cd8 'file' 'const char *'
|   |     `-ImplicitCastExpr 0x1f66aec54f0 <col:43> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x1f66aec5468 <col:43> 'int' lvalue ParmVar 0x1f66aec4d58 'line' 'int'
|   |-IfStmt 0x1f66aec5808 <line:53:5, line:56:5>
|   | |-ImplicitCastExpr 0x1f66aec5560 <line:53:9> 'char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1f66aec5540 <col:9> 'char *' lvalue Var 0x1f66aec5080 'ret' 'char *'
|   | `-CompoundStmt 0x1f66aec57e8 <col:14, line:56:5>
|   |   |-CallExpr 0x1f66aec5658 <line:54:9, col:32> 'void *'
|   |   | |-ImplicitCastExpr 0x1f66aec5640 <col:9> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1f66aec5578 <col:9> 'void *(void *, const void *, unsigned long long)' Function 0x1f66aec4720 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   |   | |-ImplicitCastExpr 0x1f66aec56a8 <col:16> 'void *' <BitCast>
|   |   | | `-ImplicitCastExpr 0x1f66aec5690 <col:16> 'char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1f66aec5598 <col:16> 'char *' lvalue Var 0x1f66aec5080 'ret' 'char *'
|   |   | |-ImplicitCastExpr 0x1f66aec56d8 <col:21> 'const void *' <BitCast>
|   |   | | `-ImplicitCastExpr 0x1f66aec56c0 <col:21> 'const char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1f66aec55b8 <col:21> 'const char *' lvalue ParmVar 0x1f66aec4be0 'str' 'const char *'
|   |   | `-ImplicitCastExpr 0x1f66aec56f0 <col:26> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1f66aec55d8 <col:26> 'size_t':'unsigned long long' lvalue Var 0x1f66aec4fe8 'maxlen' 'size_t':'unsigned long long'
|   |   `-BinaryOperator 0x1f66aec57c8 <line:55:9, col:23> 'char' '='
|   |     |-ArraySubscriptExpr 0x1f66aec5778 <col:9, col:19> 'char' lvalue
|   |     | |-ImplicitCastExpr 0x1f66aec5748 <col:9> 'char *' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1f66aec5708 <col:9> 'char *' lvalue Var 0x1f66aec5080 'ret' 'char *'
|   |     | `-ImplicitCastExpr 0x1f66aec5760 <col:13> 'size_t':'unsigned long long' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x1f66aec5728 <col:13> 'size_t':'unsigned long long' lvalue Var 0x1f66aec4fe8 'maxlen' 'size_t':'unsigned long long'
|   |     `-ImplicitCastExpr 0x1f66aec57b0 <col:23> 'char' <IntegralCast>
|   |       `-CharacterLiteral 0x1f66aec5798 <col:23> 'int' 0
|   `-ReturnStmt 0x1f66aec5858 <line:57:5, col:12>
|     `-ImplicitCastExpr 0x1f66aec5840 <col:12> 'char *' <LValueToRValue>
|       `-DeclRefExpr 0x1f66aec5820 <col:12> 'char *' lvalue Var 0x1f66aec5080 'ret' 'char *'
|-FunctionDecl 0x1f66aec6c00 <line:60:1, line:73:1> line:60:7 CRYPTO_memdup 'void *(const void *, size_t, const char *, int)'
| |-ParmVarDecl 0x1f66aec58c0 <col:21, col:33> col:33 used data 'const void *'
| |-ParmVarDecl 0x1f66aec5938 <col:39, col:46> col:46 used siz 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f66aec59b8 <col:51, col:63> col:63 used file 'const char *'
| |-ParmVarDecl 0x1f66aec5a38 <col:69, col:73> col:73 used line 'int'
| `-CompoundStmt 0x1f66aec7290 <line:61:1, line:73:1>
|   |-DeclStmt 0x1f66aec6d58 <line:62:5, col:14>
|   | `-VarDecl 0x1f66aec6cf0 <col:5, col:11> col:11 used ret 'void *'
|   |-BinaryOperator 0x1f66aec6f90 <line:67:5, col:40> 'void *' '='
|   | |-DeclRefExpr 0x1f66aec6e28 <col:5> 'void *' lvalue Var 0x1f66aec6cf0 'ret' 'void *'
|   | `-ImplicitCastExpr 0x1f66aec6f78 <col:11, col:40> 'void *' <IntegralToPointer>
|   |   `-CallExpr 0x1f66aec6ef8 <col:11, col:40> 'int'
|   |     |-ImplicitCastExpr 0x1f66aec6ee0 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1f66aec6e60 <col:11> 'int ()' Function 0x1f66aec4470 'CRYPTO_malloc' 'int ()'
|   |     |-ImplicitCastExpr 0x1f66aec6f30 <col:25> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1f66aec6e80 <col:25> 'size_t':'unsigned long long' lvalue ParmVar 0x1f66aec5938 'siz' 'size_t':'unsigned long long'
|   |     |-ImplicitCastExpr 0x1f66aec6f48 <col:30> 'const char *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1f66aec6ea0 <col:30> 'const char *' lvalue ParmVar 0x1f66aec59b8 'file' 'const char *'
|   |     `-ImplicitCastExpr 0x1f66aec6f60 <col:36> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x1f66aec6ec0 <col:36> 'int' lvalue ParmVar 0x1f66aec5a38 'line' 'int'
|   |-IfStmt 0x1f66aec7108 <line:68:5, line:71:5>
|   | |-OpaqueValueExpr 0x1f66aec70f0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1f66aec70e0 <line:68:22, line:71:5>
|   `-ReturnStmt 0x1f66aec7280 <line:72:5, col:33>
|     `-CallExpr 0x1f66aec7200 <col:12, col:33> 'void *'
|       |-ImplicitCastExpr 0x1f66aec71e8 <col:12> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1f66aec7120 <col:12> 'void *(void *, const void *, unsigned long long)' Function 0x1f66aec4720 'memcpy' 'void *(void *, const void *, unsigned long long)'
|       |-ImplicitCastExpr 0x1f66aec7238 <col:19> 'void *' <LValueToRValue>
|       | `-DeclRefExpr 0x1f66aec7140 <col:19> 'void *' lvalue Var 0x1f66aec6cf0 'ret' 'void *'
|       |-ImplicitCastExpr 0x1f66aec7250 <col:24> 'const void *' <LValueToRValue>
|       | `-DeclRefExpr 0x1f66aec7160 <col:24> 'const void *' lvalue ParmVar 0x1f66aec58c0 'data' 'const void *'
|       `-ImplicitCastExpr 0x1f66aec7268 <col:30> 'size_t':'unsigned long long' <LValueToRValue>
|         `-DeclRefExpr 0x1f66aec7180 <col:30> 'size_t':'unsigned long long' lvalue ParmVar 0x1f66aec5938 'siz' 'size_t':'unsigned long long'
|-FunctionDecl 0x1f66aec7498 <line:75:1, line:82:1> line:75:8 invalid OPENSSL_strnlen 'size_t (const char *, size_t)'
| |-ParmVarDecl 0x1f66aec72d8 <col:24, col:36> col:36 used str 'const char *'
| |-ParmVarDecl 0x1f66aec7350 <col:41, col:48> col:48 used maxlen 'size_t':'unsigned long long'
| `-CompoundStmt 0x1f66aec7950 <line:76:1, line:82:1>
|   |-DeclStmt 0x1f66aec75e0 <line:77:5, col:18>
|   | `-VarDecl 0x1f66aec7578 <col:5, col:17> col:17 used p 'const char *'
|   |-ForStmt 0x1f66aec7860 <line:79:5, col:53>
|   | |-BinaryOperator 0x1f66aec7668 <col:10, col:14> 'const char *' '='
|   | | |-DeclRefExpr 0x1f66aec75f8 <col:10> 'const char *' lvalue Var 0x1f66aec7578 'p' 'const char *'
|   | | `-ImplicitCastExpr 0x1f66aec7650 <col:14> 'const char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1f66aec7630 <col:14> 'const char *' lvalue ParmVar 0x1f66aec72d8 'str' 'const char *'
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1f66aec7800 <col:19, col:42> 'int' '&&'
|   | | |-BinaryOperator 0x1f66aec7700 <col:19, col:31> 'int' '!='
|   | | | |-UnaryOperator 0x1f66aec76a8 <col:19, col:25> 'size_t':'unsigned long long' postfix '--'
|   | | | | `-DeclRefExpr 0x1f66aec7688 <col:19> 'size_t':'unsigned long long' lvalue ParmVar 0x1f66aec7350 'maxlen' 'size_t':'unsigned long long'
|   | | | `-ImplicitCastExpr 0x1f66aec76e8 <col:31> 'unsigned long long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x1f66aec76c0 <col:31> 'int' 0
|   | | `-BinaryOperator 0x1f66aec77e0 <col:36, col:42> 'int' '!='
|   | |   |-ImplicitCastExpr 0x1f66aec77c8 <col:36, col:37> 'int' <IntegralCast>
|   | |   | `-ImplicitCastExpr 0x1f66aec77b0 <col:36, col:37> 'char' <LValueToRValue>
|   | |   |   `-UnaryOperator 0x1f66aec7780 <col:36, col:37> 'const char' lvalue prefix '*' cannot overflow
|   | |   |     `-ImplicitCastExpr 0x1f66aec7768 <col:37> 'const char *' <LValueToRValue>
|   | |   |       `-DeclRefExpr 0x1f66aec7748 <col:37> 'const char *' lvalue Var 0x1f66aec7578 'p' 'const char *'
|   | |   `-CharacterLiteral 0x1f66aec7798 <col:42> 'int' 0
|   | |-UnaryOperator 0x1f66aec7840 <col:48, col:50> 'const char *' prefix '++'
|   | | `-DeclRefExpr 0x1f66aec7820 <col:50> 'const char *' lvalue Var 0x1f66aec7578 'p' 'const char *'
|   | `-NullStmt 0x1f66aec7858 <col:53>
|   `-ReturnStmt 0x1f66aec7940 <line:81:5, col:16>
|     `-ImplicitCastExpr 0x1f66aec7928 <col:12, col:16> 'size_t':'unsigned long long' <IntegralCast>
|       `-BinaryOperator 0x1f66aec7908 <col:12, col:16> 'long long' '-'
|         |-ImplicitCastExpr 0x1f66aec78d8 <col:12> 'const char *' <LValueToRValue>
|         | `-DeclRefExpr 0x1f66aec7898 <col:12> 'const char *' lvalue Var 0x1f66aec7578 'p' 'const char *'
|         `-ImplicitCastExpr 0x1f66aec78f0 <col:16> 'const char *' <LValueToRValue>
|           `-DeclRefExpr 0x1f66aec78b8 <col:16> 'const char *' lvalue ParmVar 0x1f66aec72d8 'str' 'const char *'
|-FunctionDecl 0x1f66aec1bb0 <line:84:1, line:94:1> line:84:8 used OPENSSL_strlcpy 'size_t (char *, const char *, size_t)'
| |-ParmVarDecl 0x1f66aec7990 <col:24, col:30> col:30 used dst 'char *'
| |-ParmVarDecl 0x1f66aec7a10 <col:35, col:47> col:47 used src 'const char *'
| |-ParmVarDecl 0x1f66aec7a88 <col:52, col:59> col:59 used size 'size_t':'unsigned long long'
| `-CompoundStmt 0x1f66aec2248 <line:85:1, line:94:1>
|   |-DeclStmt 0x1f66aec1d38 <line:86:5, col:17>
|   | `-VarDecl 0x1f66aec1c90 <col:5, col:16> col:12 used l 'size_t':'unsigned long long' cinit
|   |   `-ImplicitCastExpr 0x1f66aec1d20 <col:16> 'size_t':'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x1f66aec1cf8 <col:16> 'int' 0
|   |-ForStmt 0x1f66aec2008 <line:87:5, line:90:5>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1f66aec1e68 <line:87:12, col:25> 'int' '&&'
|   | | |-BinaryOperator 0x1f66aec1dc8 <col:12, col:19> 'int' '>'
|   | | | |-ImplicitCastExpr 0x1f66aec1d98 <col:12> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1f66aec1d50 <col:12> 'size_t':'unsigned long long' lvalue ParmVar 0x1f66aec7a88 'size' 'size_t':'unsigned long long'
|   | | | `-ImplicitCastExpr 0x1f66aec1db0 <col:19> 'unsigned long long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x1f66aec1d70 <col:19> 'int' 1
|   | | `-ImplicitCastExpr 0x1f66aec1e50 <col:24, col:25> 'int' <IntegralCast>
|   | |   `-ImplicitCastExpr 0x1f66aec1e38 <col:24, col:25> 'char' <LValueToRValue>
|   | |     `-UnaryOperator 0x1f66aec1e20 <col:24, col:25> 'const char' lvalue prefix '*' cannot overflow
|   | |       `-ImplicitCastExpr 0x1f66aec1e08 <col:25> 'const char *' <LValueToRValue>
|   | |         `-DeclRefExpr 0x1f66aec1de8 <col:25> 'const char *' lvalue ParmVar 0x1f66aec7a10 'src' 'const char *'
|   | |-UnaryOperator 0x1f66aec1ea8 <col:30, col:34> 'size_t':'unsigned long long' postfix '--'
|   | | `-DeclRefExpr 0x1f66aec1e88 <col:30> 'size_t':'unsigned long long' lvalue ParmVar 0x1f66aec7a88 'size' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x1f66aec1fe8 <col:38, line:90:5>
|   |   |-BinaryOperator 0x1f66aec1f78 <line:88:9, col:22> 'char' '='
|   |   | |-UnaryOperator 0x1f66aec1ef8 <col:9, col:13> 'char' lvalue prefix '*' cannot overflow
|   |   | | `-UnaryOperator 0x1f66aec1ee0 <col:10, col:13> 'char *' postfix '++'
|   |   | |   `-DeclRefExpr 0x1f66aec1ec0 <col:10> 'char *' lvalue ParmVar 0x1f66aec7990 'dst' 'char *'
|   |   | `-ImplicitCastExpr 0x1f66aec1f60 <col:18, col:22> 'char' <LValueToRValue>
|   |   |   `-UnaryOperator 0x1f66aec1f48 <col:18, col:22> 'const char' lvalue prefix '*' cannot overflow
|   |   |     `-UnaryOperator 0x1f66aec1f30 <col:19, col:22> 'const char *' postfix '++'
|   |   |       `-DeclRefExpr 0x1f66aec1f10 <col:19> 'const char *' lvalue ParmVar 0x1f66aec7a10 'src' 'const char *'
|   |   `-UnaryOperator 0x1f66aec1fd0 <line:89:9, col:10> 'size_t':'unsigned long long' postfix '++'
|   |     `-DeclRefExpr 0x1f66aec1f98 <col:9> 'size_t':'unsigned long long' lvalue Var 0x1f66aec1c90 'l' 'size_t':'unsigned long long'
|   |-IfStmt 0x1f66aec2118 <line:91:5, line:92:16>
|   | |-ImplicitCastExpr 0x1f66aec2060 <line:91:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | `-DeclRefExpr 0x1f66aec2040 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x1f66aec7a88 'size' 'size_t':'unsigned long long'
|   | `-BinaryOperator 0x1f66aec20f8 <line:92:9, col:16> 'char' '='
|   |   |-UnaryOperator 0x1f66aec20b0 <col:9, col:10> 'char' lvalue prefix '*' cannot overflow
|   |   | `-ImplicitCastExpr 0x1f66aec2098 <col:10> 'char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1f66aec2078 <col:10> 'char *' lvalue ParmVar 0x1f66aec7990 'dst' 'char *'
|   |   `-ImplicitCastExpr 0x1f66aec20e0 <col:16> 'char' <IntegralCast>
|   |     `-CharacterLiteral 0x1f66aec20c8 <col:16> 'int' 0
|   `-ReturnStmt 0x1f66aec2238 <line:93:5, col:26>
|     `-BinaryOperator 0x1f66aec2218 <col:12, col:26> 'unsigned long long' '+'
|       |-ImplicitCastExpr 0x1f66aec2200 <col:12> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x1f66aec2130 <col:12> 'size_t':'unsigned long long' lvalue Var 0x1f66aec1c90 'l' 'size_t':'unsigned long long'
|       `-CallExpr 0x1f66aec21c0 <col:16, col:26> 'unsigned long long'
|         |-ImplicitCastExpr 0x1f66aec21a8 <col:16> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x1f66aec2150 <col:16> 'unsigned long long (const char *)' Function 0x1f66aec4160 'strlen' 'unsigned long long (const char *)'
|         `-ImplicitCastExpr 0x1f66aec21e8 <col:23> 'const char *' <LValueToRValue>
|           `-DeclRefExpr 0x1f66aec2170 <col:23> 'const char *' lvalue ParmVar 0x1f66aec7a10 'src' 'const char *'
|-FunctionDecl 0x1f66aec2470 <line:96:1, line:102:1> line:96:8 OPENSSL_strlcat 'size_t (char *, const char *, size_t)'
| |-ParmVarDecl 0x1f66aec2290 <col:24, col:30> col:30 used dst 'char *'
| |-ParmVarDecl 0x1f66aec2310 <col:35, col:47> col:47 used src 'const char *'
| |-ParmVarDecl 0x1f66aec2388 <col:52, col:59> col:59 used size 'size_t':'unsigned long long'
| `-CompoundStmt 0x1f66aec2a38 <line:97:1, line:102:1>
|   |-DeclStmt 0x1f66aec25f8 <line:98:5, col:17>
|   | `-VarDecl 0x1f66aec2550 <col:5, col:16> col:12 used l 'size_t':'unsigned long long' cinit
|   |   `-ImplicitCastExpr 0x1f66aec25e0 <col:16> 'size_t':'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x1f66aec25b8 <col:16> 'int' 0
|   |-ForStmt 0x1f66aec2828 <line:99:5, line:100:10>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1f66aec2728 <line:99:12, col:25> 'int' '&&'
|   | | |-BinaryOperator 0x1f66aec2688 <col:12, col:19> 'int' '>'
|   | | | |-ImplicitCastExpr 0x1f66aec2658 <col:12> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1f66aec2610 <col:12> 'size_t':'unsigned long long' lvalue ParmVar 0x1f66aec2388 'size' 'size_t':'unsigned long long'
|   | | | `-ImplicitCastExpr 0x1f66aec2670 <col:19> 'unsigned long long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x1f66aec2630 <col:19> 'int' 0
|   | | `-ImplicitCastExpr 0x1f66aec2710 <col:24, col:25> 'int' <IntegralCast>
|   | |   `-ImplicitCastExpr 0x1f66aec26f8 <col:24, col:25> 'char' <LValueToRValue>
|   | |     `-UnaryOperator 0x1f66aec26e0 <col:24, col:25> 'char' lvalue prefix '*' cannot overflow
|   | |       `-ImplicitCastExpr 0x1f66aec26c8 <col:25> 'char *' <LValueToRValue>
|   | |         `-DeclRefExpr 0x1f66aec26a8 <col:25> 'char *' lvalue ParmVar 0x1f66aec2290 'dst' 'char *'
|   | |-BinaryOperator 0x1f66aec27b8 <col:30, col:41> 'char *' ','
|   | | |-UnaryOperator 0x1f66aec2768 <col:30, col:34> 'size_t':'unsigned long long' postfix '--'
|   | | | `-DeclRefExpr 0x1f66aec2748 <col:30> 'size_t':'unsigned long long' lvalue ParmVar 0x1f66aec2388 'size' 'size_t':'unsigned long long'
|   | | `-UnaryOperator 0x1f66aec27a0 <col:38, col:41> 'char *' postfix '++'
|   | |   `-DeclRefExpr 0x1f66aec2780 <col:38> 'char *' lvalue ParmVar 0x1f66aec2290 'dst' 'char *'
|   | `-UnaryOperator 0x1f66aec2810 <line:100:9, col:10> 'size_t':'unsigned long long' postfix '++'
|   |   `-DeclRefExpr 0x1f66aec27d8 <col:9> 'size_t':'unsigned long long' lvalue Var 0x1f66aec2550 'l' 'size_t':'unsigned long long'
|   `-ReturnStmt 0x1f66aec2a28 <line:101:5, col:46>
|     `-BinaryOperator 0x1f66aec2a08 <col:12, col:46> 'unsigned long long' '+'
|       |-ImplicitCastExpr 0x1f66aec29f0 <col:12> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x1f66aec2860 <col:12> 'size_t':'unsigned long long' lvalue Var 0x1f66aec2550 'l' 'size_t':'unsigned long long'
|       `-CallExpr 0x1f66aec2970 <col:16, col:46> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x1f66aec2958 <col:16> 'size_t (*)(char *, const char *, size_t)' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x1f66aec2880 <col:16> 'size_t (char *, const char *, size_t)' Function 0x1f66aec1bb0 'OPENSSL_strlcpy' 'size_t (char *, const char *, size_t)'
|         |-ImplicitCastExpr 0x1f66aec29a8 <col:32> 'char *' <LValueToRValue>
|         | `-DeclRefExpr 0x1f66aec28a0 <col:32> 'char *' lvalue ParmVar 0x1f66aec2290 'dst' 'char *'
|         |-ImplicitCastExpr 0x1f66aec29c0 <col:37> 'const char *' <LValueToRValue>
|         | `-DeclRefExpr 0x1f66aec28c0 <col:37> 'const char *' lvalue ParmVar 0x1f66aec2310 'src' 'const char *'
|         `-ImplicitCastExpr 0x1f66aec29d8 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x1f66aec28e0 <col:42> 'size_t':'unsigned long long' lvalue ParmVar 0x1f66aec2388 'size' 'size_t':'unsigned long long'
|-FunctionDecl 0x1f66aecac40 <line:104:1, line:145:1> line:104:5 used OPENSSL_hexchar2int 'int (unsigned char)'
| |-ParmVarDecl 0x1f66aec2a78 <col:25, col:39> col:39 used c 'unsigned char'
| `-CompoundStmt 0x1f66aecb960 <line:105:1, line:145:1>
|   |-SwitchStmt 0x1f66aecad50 <line:110:5, line:143:5>
|   | |-ImplicitCastExpr 0x1f66aecad38 <line:110:13> 'int' <IntegralCast>
|   | | `-ImplicitCastExpr 0x1f66aecad20 <col:13> 'unsigned char' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1f66aecad00 <col:13> 'unsigned char' lvalue ParmVar 0x1f66aec2a78 'c' 'unsigned char'
|   | `-CompoundStmt 0x1f66aecb880 <col:16, line:143:5>
|   |   |-CaseStmt 0x1f66aecada0 <line:111:5, line:112:16>
|   |   | |-ConstantExpr 0x1f66aecad88 <line:111:10> 'int'
|   |   | | `-CharacterLiteral 0x1f66aecad70 <col:10> 'int' 48
|   |   | `-ReturnStmt 0x1f66aecadf0 <line:112:9, col:16>
|   |   |   `-IntegerLiteral 0x1f66aecadc8 <col:16> 'int' 0
|   |   |-CaseStmt 0x1f66aecae30 <line:113:5, line:114:16>
|   |   | |-ConstantExpr 0x1f66aecae18 <line:113:10> 'int'
|   |   | | `-CharacterLiteral 0x1f66aecae00 <col:10> 'int' 49
|   |   | `-ReturnStmt 0x1f66aecae80 <line:114:9, col:16>
|   |   |   `-IntegerLiteral 0x1f66aecae58 <col:16> 'int' 1
|   |   |-CaseStmt 0x1f66aecaec0 <line:115:5, line:116:16>
|   |   | |-ConstantExpr 0x1f66aecaea8 <line:115:10> 'int'
|   |   | | `-CharacterLiteral 0x1f66aecae90 <col:10> 'int' 50
|   |   | `-ReturnStmt 0x1f66aecaf10 <line:116:9, col:16>
|   |   |   `-IntegerLiteral 0x1f66aecaee8 <col:16> 'int' 2
|   |   |-CaseStmt 0x1f66aecaf50 <line:117:5, line:118:16>
|   |   | |-ConstantExpr 0x1f66aecaf38 <line:117:10> 'int'
|   |   | | `-CharacterLiteral 0x1f66aecaf20 <col:10> 'int' 51
|   |   | `-ReturnStmt 0x1f66aecafa0 <line:118:9, col:16>
|   |   |   `-IntegerLiteral 0x1f66aecaf78 <col:16> 'int' 3
|   |   |-CaseStmt 0x1f66aecafe0 <line:119:5, line:120:18>
|   |   | |-ConstantExpr 0x1f66aecafc8 <line:119:10> 'int'
|   |   | | `-CharacterLiteral 0x1f66aecafb0 <col:10> 'int' 52
|   |   | `-ReturnStmt 0x1f66aecb030 <line:120:11, col:18>
|   |   |   `-IntegerLiteral 0x1f66aecb008 <col:18> 'int' 4
|   |   |-CaseStmt 0x1f66aecb070 <line:121:5, line:122:18>
|   |   | |-ConstantExpr 0x1f66aecb058 <line:121:10> 'int'
|   |   | | `-CharacterLiteral 0x1f66aecb040 <col:10> 'int' 53
|   |   | `-ReturnStmt 0x1f66aecb0c0 <line:122:11, col:18>
|   |   |   `-IntegerLiteral 0x1f66aecb098 <col:18> 'int' 5
|   |   |-CaseStmt 0x1f66aecb100 <line:123:5, line:124:18>
|   |   | |-ConstantExpr 0x1f66aecb0e8 <line:123:10> 'int'
|   |   | | `-CharacterLiteral 0x1f66aecb0d0 <col:10> 'int' 54
|   |   | `-ReturnStmt 0x1f66aecb150 <line:124:11, col:18>
|   |   |   `-IntegerLiteral 0x1f66aecb128 <col:18> 'int' 6
|   |   |-CaseStmt 0x1f66aecb190 <line:125:5, line:126:18>
|   |   | |-ConstantExpr 0x1f66aecb178 <line:125:10> 'int'
|   |   | | `-CharacterLiteral 0x1f66aecb160 <col:10> 'int' 55
|   |   | `-ReturnStmt 0x1f66aecb1e0 <line:126:11, col:18>
|   |   |   `-IntegerLiteral 0x1f66aecb1b8 <col:18> 'int' 7
|   |   |-CaseStmt 0x1f66aecb220 <line:127:5, line:128:18>
|   |   | |-ConstantExpr 0x1f66aecb208 <line:127:10> 'int'
|   |   | | `-CharacterLiteral 0x1f66aecb1f0 <col:10> 'int' 56
|   |   | `-ReturnStmt 0x1f66aecb270 <line:128:11, col:18>
|   |   |   `-IntegerLiteral 0x1f66aecb248 <col:18> 'int' 8
|   |   |-CaseStmt 0x1f66aecb2b0 <line:129:5, line:130:18>
|   |   | |-ConstantExpr 0x1f66aecb298 <line:129:10> 'int'
|   |   | | `-CharacterLiteral 0x1f66aecb280 <col:10> 'int' 57
|   |   | `-ReturnStmt 0x1f66aecb300 <line:130:11, col:18>
|   |   |   `-IntegerLiteral 0x1f66aecb2d8 <col:18> 'int' 9
|   |   |-CaseStmt 0x1f66aecb340 <line:131:5, line:132:18>
|   |   | |-ConstantExpr 0x1f66aecb328 <line:131:10> 'int'
|   |   | | `-CharacterLiteral 0x1f66aecb310 <col:10> 'int' 97
|   |   | `-CaseStmt 0x1f66aecb398 <col:15, line:132:18>
|   |   |   |-ConstantExpr 0x1f66aecb380 <line:131:20> 'int'
|   |   |   | `-CharacterLiteral 0x1f66aecb368 <col:20> 'int' 65
|   |   |   `-ReturnStmt 0x1f66aecb3e8 <line:132:11, col:18>
|   |   |     `-IntegerLiteral 0x1f66aecb3c0 <col:18> 'int' 10
|   |   |-CaseStmt 0x1f66aecb428 <line:133:5, line:134:18>
|   |   | |-ConstantExpr 0x1f66aecb410 <line:133:10> 'int'
|   |   | | `-CharacterLiteral 0x1f66aecb3f8 <col:10> 'int' 98
|   |   | `-CaseStmt 0x1f66aecb480 <col:15, line:134:18>
|   |   |   |-ConstantExpr 0x1f66aecb468 <line:133:20> 'int'
|   |   |   | `-CharacterLiteral 0x1f66aecb450 <col:20> 'int' 66
|   |   |   `-ReturnStmt 0x1f66aecb4d0 <line:134:11, col:18>
|   |   |     `-IntegerLiteral 0x1f66aecb4a8 <col:18> 'int' 11
|   |   |-CaseStmt 0x1f66aecb510 <line:135:5, line:136:18>
|   |   | |-ConstantExpr 0x1f66aecb4f8 <line:135:10> 'int'
|   |   | | `-CharacterLiteral 0x1f66aecb4e0 <col:10> 'int' 99
|   |   | `-CaseStmt 0x1f66aecb568 <col:15, line:136:18>
|   |   |   |-ConstantExpr 0x1f66aecb550 <line:135:20> 'int'
|   |   |   | `-CharacterLiteral 0x1f66aecb538 <col:20> 'int' 67
|   |   |   `-ReturnStmt 0x1f66aecb5b8 <line:136:11, col:18>
|   |   |     `-IntegerLiteral 0x1f66aecb590 <col:18> 'int' 12
|   |   |-CaseStmt 0x1f66aecb5f8 <line:137:5, line:138:18>
|   |   | |-ConstantExpr 0x1f66aecb5e0 <line:137:10> 'int'
|   |   | | `-CharacterLiteral 0x1f66aecb5c8 <col:10> 'int' 100
|   |   | `-CaseStmt 0x1f66aecb650 <col:15, line:138:18>
|   |   |   |-ConstantExpr 0x1f66aecb638 <line:137:20> 'int'
|   |   |   | `-CharacterLiteral 0x1f66aecb620 <col:20> 'int' 68
|   |   |   `-ReturnStmt 0x1f66aecb6a0 <line:138:11, col:18>
|   |   |     `-IntegerLiteral 0x1f66aecb678 <col:18> 'int' 13
|   |   |-CaseStmt 0x1f66aecb6e0 <line:139:5, line:140:18>
|   |   | |-ConstantExpr 0x1f66aecb6c8 <line:139:10> 'int'
|   |   | | `-CharacterLiteral 0x1f66aecb6b0 <col:10> 'int' 101
|   |   | `-CaseStmt 0x1f66aecb738 <col:15, line:140:18>
|   |   |   |-ConstantExpr 0x1f66aecb720 <line:139:20> 'int'
|   |   |   | `-CharacterLiteral 0x1f66aecb708 <col:20> 'int' 69
|   |   |   `-ReturnStmt 0x1f66aecb788 <line:140:11, col:18>
|   |   |     `-IntegerLiteral 0x1f66aecb760 <col:18> 'int' 14
|   |   `-CaseStmt 0x1f66aecb7c8 <line:141:5, line:142:18>
|   |     |-ConstantExpr 0x1f66aecb7b0 <line:141:10> 'int'
|   |     | `-CharacterLiteral 0x1f66aecb798 <col:10> 'int' 102
|   |     `-CaseStmt 0x1f66aecb820 <col:15, line:142:18>
|   |       |-ConstantExpr 0x1f66aecb808 <line:141:20> 'int'
|   |       | `-CharacterLiteral 0x1f66aecb7f0 <col:20> 'int' 70
|   |       `-ReturnStmt 0x1f66aecb870 <line:142:11, col:18>
|   |         `-IntegerLiteral 0x1f66aecb848 <col:18> 'int' 15
|   `-ReturnStmt 0x1f66aecb950 <line:144:5, col:13>
|     `-UnaryOperator 0x1f66aecb938 <col:12, col:13> 'int' prefix '-'
|       `-IntegerLiteral 0x1f66aecb910 <col:13> 'int' 1
|-FunctionDecl 0x1f66aecbb80 <line:150:1, line:187:1> line:150:16 OPENSSL_hexstr2buf 'unsigned char *(const char *, long *)'
| |-ParmVarDecl 0x1f66aecb998 <col:35, col:47> col:47 used str 'const char *'
| |-ParmVarDecl 0x1f66aecba40 <col:52, col:58> col:58 used len 'long *'
| `-CompoundStmt 0x1f66aecd378 <line:151:1, line:187:1>
|   |-DeclStmt 0x1f66aecbd80 <line:152:5, col:30>
|   | |-VarDecl 0x1f66aecbc80 <col:5, col:20> col:20 used hexbuf 'unsigned char *'
|   | `-VarDecl 0x1f66aecbd00 <col:5, col:29> col:29 used q 'unsigned char *'
|   |-DeclStmt 0x1f66aecbeb0 <line:153:5, col:25>
|   | |-VarDecl 0x1f66aecbdb0 <col:5, col:19> col:19 used ch 'unsigned char'
|   | `-VarDecl 0x1f66aecbe30 <col:5, col:23> col:23 used cl 'unsigned char'
|   |-DeclStmt 0x1f66aecbfe0 <line:154:5, col:17>
|   | |-VarDecl 0x1f66aecbee0 <col:5, col:9> col:9 used chi 'int'
|   | `-VarDecl 0x1f66aecbf60 <col:5, col:14> col:14 used cli 'int'
|   |-DeclStmt 0x1f66aecc078 <line:155:5, col:27>
|   | `-VarDecl 0x1f66aecc010 <col:5, col:26> col:26 used p 'const unsigned char *'
|   |-DeclStmt 0x1f66aecc108 <line:156:5, col:13>
|   | `-VarDecl 0x1f66aecc0a0 <col:5, col:12> col:12 used s 'size_t':'unsigned long long'
|   |-BinaryOperator 0x1f66aecc208 <line:158:5, col:19> 'size_t':'unsigned long long' '='
|   | |-DeclRefExpr 0x1f66aecc120 <col:5> 'size_t':'unsigned long long' lvalue Var 0x1f66aecc0a0 's' 'size_t':'unsigned long long'
|   | `-CallExpr 0x1f66aecc1c8 <col:9, col:19> 'unsigned long long'
|   |   |-ImplicitCastExpr 0x1f66aecc1b0 <col:9> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1f66aecc158 <col:9> 'unsigned long long (const char *)' Function 0x1f66aec4160 'strlen' 'unsigned long long (const char *)'
|   |   `-ImplicitCastExpr 0x1f66aecc1f0 <col:16> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1f66aecc178 <col:16> 'const char *' lvalue ParmVar 0x1f66aecb998 'str' 'const char *'
|   |-IfStmt 0x1f66aecc4d0 <line:159:5, line:162:5>
|   | |-OpaqueValueExpr 0x1f66aecc4b8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1f66aecc4a8 <line:159:52, line:162:5>
|   |-ForStmt 0x1f66aecd190 <line:163:5, line:182:5>
|   | |-BinaryOperator 0x1f66aecc648 <line:163:10, col:46> 'unsigned char *' ','
|   | | |-BinaryOperator 0x1f66aecc598 <col:10, col:37> 'const unsigned char *' '='
|   | | | |-DeclRefExpr 0x1f66aecc4e8 <col:10> 'const unsigned char *' lvalue Var 0x1f66aecc010 'p' 'const unsigned char *'
|   | | | `-CStyleCastExpr 0x1f66aecc570 <col:14, col:37> 'const unsigned char *' <BitCast>
|   | | |   `-ImplicitCastExpr 0x1f66aecc558 <col:37> 'const char *' <LValueToRValue> part_of_explicit_cast
|   | | |     `-DeclRefExpr 0x1f66aecc520 <col:37> 'const char *' lvalue ParmVar 0x1f66aecb998 'str' 'const char *'
|   | | `-BinaryOperator 0x1f66aecc628 <col:42, col:46> 'unsigned char *' '='
|   | |   |-DeclRefExpr 0x1f66aecc5b8 <col:42> 'unsigned char *' lvalue Var 0x1f66aecbd00 'q' 'unsigned char *'
|   | |   `-ImplicitCastExpr 0x1f66aecc610 <col:46> 'unsigned char *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x1f66aecc5f0 <col:46> 'unsigned char *' lvalue Var 0x1f66aecbc80 'hexbuf' 'unsigned char *'
|   | |-<<<NULL>>>
|   | |-ImplicitCastExpr 0x1f66aecc6b8 <col:54, col:55> 'unsigned char' <LValueToRValue>
|   | | `-UnaryOperator 0x1f66aecc6a0 <col:54, col:55> 'const unsigned char' lvalue prefix '*' cannot overflow
|   | |   `-ImplicitCastExpr 0x1f66aecc688 <col:55> 'const unsigned char *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x1f66aecc668 <col:55> 'const unsigned char *' lvalue Var 0x1f66aecc010 'p' 'const unsigned char *'
|   | |-<<<NULL>>>
|   | `-CompoundStmt 0x1f66aecd140 <col:60, line:182:5>
|   |   |-BinaryOperator 0x1f66aecc770 <line:164:9, col:16> 'unsigned char' '='
|   |   | |-DeclRefExpr 0x1f66aecc6d0 <col:9> 'unsigned char' lvalue Var 0x1f66aecbdb0 'ch' 'unsigned char'
|   |   | `-ImplicitCastExpr 0x1f66aecc758 <col:14, col:16> 'unsigned char' <LValueToRValue>
|   |   |   `-UnaryOperator 0x1f66aecc740 <col:14, col:16> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   |     `-UnaryOperator 0x1f66aecc728 <col:15, col:16> 'const unsigned char *' postfix '++'
|   |   |       `-DeclRefExpr 0x1f66aecc708 <col:15> 'const unsigned char *' lvalue Var 0x1f66aecc010 'p' 'const unsigned char *'
|   |   |-IfStmt 0x1f66aecc820 <line:165:9, line:166:13>
|   |   | |-BinaryOperator 0x1f66aecc7f8 <line:165:13, col:19> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x1f66aecc7e0 <col:13> 'int' <IntegralCast>
|   |   | | | `-ImplicitCastExpr 0x1f66aecc7c8 <col:13> 'unsigned char' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x1f66aecc790 <col:13> 'unsigned char' lvalue Var 0x1f66aecbdb0 'ch' 'unsigned char'
|   |   | | `-CharacterLiteral 0x1f66aecc7b0 <col:19> 'int' 58
|   |   | `-ContinueStmt 0x1f66aecc818 <line:166:13>
|   |   |-BinaryOperator 0x1f66aecc8d8 <line:167:9, col:16> 'unsigned char' '='
|   |   | |-DeclRefExpr 0x1f66aecc838 <col:9> 'unsigned char' lvalue Var 0x1f66aecbe30 'cl' 'unsigned char'
|   |   | `-ImplicitCastExpr 0x1f66aecc8c0 <col:14, col:16> 'unsigned char' <LValueToRValue>
|   |   |   `-UnaryOperator 0x1f66aecc8a8 <col:14, col:16> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   |     `-UnaryOperator 0x1f66aecc890 <col:15, col:16> 'const unsigned char *' postfix '++'
|   |   |       `-DeclRefExpr 0x1f66aecc870 <col:15> 'const unsigned char *' lvalue Var 0x1f66aecc010 'p' 'const unsigned char *'
|   |   |-IfStmt 0x1f66aeccb08 <line:168:9, line:173:9>
|   |   | |-UnaryOperator 0x1f66aecc930 <line:168:13, col:14> 'int' prefix '!' cannot overflow
|   |   | | `-ImplicitCastExpr 0x1f66aecc918 <col:14> 'unsigned char' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1f66aecc8f8 <col:14> 'unsigned char' lvalue Var 0x1f66aecbe30 'cl' 'unsigned char'
|   |   | `-CompoundStmt 0x1f66aeccaf0 <col:18, line:173:9>
|   |   |   `-CallExpr 0x1f66aeccab0 <line:171:13, col:32> 'int'
|   |   |     |-ImplicitCastExpr 0x1f66aecca98 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x1f66aecca58 <col:13> 'int ()' Function 0x1f66aecc990 'OPENSSL_free' 'int ()'
|   |   |     `-ImplicitCastExpr 0x1f66aeccad8 <col:26> 'unsigned char *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x1f66aecca78 <col:26> 'unsigned char *' lvalue Var 0x1f66aecbc80 'hexbuf' 'unsigned char *'
|   |   |-BinaryOperator 0x1f66aeccc20 <line:174:9, col:37> 'int' '='
|   |   | |-DeclRefExpr 0x1f66aeccb20 <col:9> 'int' lvalue Var 0x1f66aecbf60 'cli' 'int'
|   |   | `-CallExpr 0x1f66aeccbe0 <col:15, col:37> 'int'
|   |   |   |-ImplicitCastExpr 0x1f66aeccbc8 <col:15> 'int (*)(unsigned char)' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x1f66aeccb58 <col:15> 'int (unsigned char)' Function 0x1f66aecac40 'OPENSSL_hexchar2int' 'int (unsigned char)'
|   |   |   `-ImplicitCastExpr 0x1f66aeccc08 <col:35> 'unsigned char' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1f66aeccb78 <col:35> 'unsigned char' lvalue Var 0x1f66aecbe30 'cl' 'unsigned char'
|   |   |-BinaryOperator 0x1f66aeccd30 <line:175:9, col:37> 'int' '='
|   |   | |-DeclRefExpr 0x1f66aeccc60 <col:9> 'int' lvalue Var 0x1f66aecbee0 'chi' 'int'
|   |   | `-CallExpr 0x1f66aecccf0 <col:15, col:37> 'int'
|   |   |   |-ImplicitCastExpr 0x1f66aecccd8 <col:15> 'int (*)(unsigned char)' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x1f66aeccc98 <col:15> 'int (unsigned char)' Function 0x1f66aecac40 'OPENSSL_hexchar2int' 'int (unsigned char)'
|   |   |   `-ImplicitCastExpr 0x1f66aeccd18 <col:35> 'unsigned char' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1f66aecccb8 <col:35> 'unsigned char' lvalue Var 0x1f66aecbdb0 'ch' 'unsigned char'
|   |   |-IfStmt 0x1f66aeccf40 <line:176:9, line:180:9>
|   |   | |-BinaryOperator 0x1f66aecce50 <line:176:13, col:30> 'int' '||'
|   |   | | |-BinaryOperator 0x1f66aeccdb0 <col:13, col:19> 'int' '<'
|   |   | | | |-ImplicitCastExpr 0x1f66aeccd98 <col:13> 'int' <LValueToRValue>
|   |   | | | | `-DeclRefExpr 0x1f66aeccd50 <col:13> 'int' lvalue Var 0x1f66aecbf60 'cli' 'int'
|   |   | | | `-IntegerLiteral 0x1f66aeccd70 <col:19> 'int' 0
|   |   | | `-BinaryOperator 0x1f66aecce30 <col:24, col:30> 'int' '<'
|   |   | |   |-ImplicitCastExpr 0x1f66aecce18 <col:24> 'int' <LValueToRValue>
|   |   | |   | `-DeclRefExpr 0x1f66aeccdd0 <col:24> 'int' lvalue Var 0x1f66aecbee0 'chi' 'int'
|   |   | |   `-IntegerLiteral 0x1f66aeccdf0 <col:30> 'int' 0
|   |   | `-CompoundStmt 0x1f66aeccf28 <col:33, line:180:9>
|   |   |   `-CallExpr 0x1f66aeccec8 <line:177:13, col:32> 'int'
|   |   |     |-ImplicitCastExpr 0x1f66aecceb0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x1f66aecce70 <col:13> 'int ()' Function 0x1f66aecc990 'OPENSSL_free' 'int ()'
|   |   |     `-ImplicitCastExpr 0x1f66aeccef0 <col:26> 'unsigned char *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x1f66aecce90 <col:26> 'unsigned char *' lvalue Var 0x1f66aecbc80 'hexbuf' 'unsigned char *'
|   |   `-BinaryOperator 0x1f66aecd120 <line:181:9, col:48> 'unsigned char' '='
|   |     |-UnaryOperator 0x1f66aeccf90 <col:9, col:11> 'unsigned char' lvalue prefix '*' cannot overflow
|   |     | `-UnaryOperator 0x1f66aeccf78 <col:10, col:11> 'unsigned char *' postfix '++'
|   |     |   `-DeclRefExpr 0x1f66aeccf58 <col:10> 'unsigned char *' lvalue Var 0x1f66aecbd00 'q' 'unsigned char *'
|   |     `-CStyleCastExpr 0x1f66aecd0f8 <col:16, col:48> 'unsigned char' <IntegralCast>
|   |       `-ParenExpr 0x1f66aecd0d8 <col:31, col:48> 'int'
|   |         `-BinaryOperator 0x1f66aecd080 <col:32, col:45> 'int' '|'
|   |           |-ParenExpr 0x1f66aecd028 <col:32, col:41> 'int'
|   |           | `-BinaryOperator 0x1f66aecd008 <col:33, col:40> 'int' '<<'
|   |           |   |-ImplicitCastExpr 0x1f66aeccff0 <col:33> 'int' <LValueToRValue>
|   |           |   | `-DeclRefExpr 0x1f66aeccfa8 <col:33> 'int' lvalue Var 0x1f66aecbee0 'chi' 'int'
|   |           |   `-IntegerLiteral 0x1f66aeccfc8 <col:40> 'int' 4
|   |           `-ImplicitCastExpr 0x1f66aecd068 <col:45> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x1f66aecd048 <col:45> 'int' lvalue Var 0x1f66aecbf60 'cli' 'int'
|   |-IfStmt 0x1f66aecd318 <line:184:5, line:185:20>
|   | |-ImplicitCastExpr 0x1f66aecd1e8 <line:184:9> 'long *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1f66aecd1c8 <col:9> 'long *' lvalue ParmVar 0x1f66aecba40 'len' 'long *'
|   | `-BinaryOperator 0x1f66aecd2f8 <line:185:9, col:20> 'long' '='
|   |   |-UnaryOperator 0x1f66aecd238 <col:9, col:10> 'long' lvalue prefix '*' cannot overflow
|   |   | `-ImplicitCastExpr 0x1f66aecd220 <col:10> 'long *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1f66aecd200 <col:10> 'long *' lvalue ParmVar 0x1f66aecba40 'len' 'long *'
|   |   `-ImplicitCastExpr 0x1f66aecd2e0 <col:16, col:20> 'long' <IntegralCast>
|   |     `-BinaryOperator 0x1f66aecd2c0 <col:16, col:20> 'long long' '-'
|   |       |-ImplicitCastExpr 0x1f66aecd290 <col:16> 'unsigned char *' <LValueToRValue>
|   |       | `-DeclRefExpr 0x1f66aecd250 <col:16> 'unsigned char *' lvalue Var 0x1f66aecbd00 'q' 'unsigned char *'
|   |       `-ImplicitCastExpr 0x1f66aecd2a8 <col:20> 'unsigned char *' <LValueToRValue>
|   |         `-DeclRefExpr 0x1f66aecd270 <col:20> 'unsigned char *' lvalue Var 0x1f66aecbc80 'hexbuf' 'unsigned char *'
|   `-ReturnStmt 0x1f66aecd368 <line:186:5, col:12>
|     `-ImplicitCastExpr 0x1f66aecd350 <col:12> 'unsigned char *' <LValueToRValue>
|       `-DeclRefExpr 0x1f66aecd330 <col:12> 'unsigned char *' lvalue Var 0x1f66aecbc80 'hexbuf' 'unsigned char *'
|-FunctionDecl 0x1f66aecd580 <line:194:1, line:222:1> line:194:7 OPENSSL_buf2hexstr 'char *(const unsigned char *, long)'
| |-ParmVarDecl 0x1f66aecd3f0 <col:26, col:47> col:47 used buffer 'const unsigned char *'
| |-ParmVarDecl 0x1f66aecd470 <col:55, col:60> col:60 used len 'long'
| `-CompoundStmt 0x1f66aece7b8 <line:195:1, line:222:1>
|   |-DeclStmt 0x1f66aecd7c8 <line:196:5, col:52>
|   | `-VarDecl 0x1f66aecd6c8 <col:5, col:34> col:23 used hexdig 'const char [17]' static cinit
|   |   `-StringLiteral 0x1f66aecd768 <col:34> 'const char [17]' "0123456789ABCDEF"
|   |-DeclStmt 0x1f66aecd8f8 <line:197:5, col:18>
|   | |-VarDecl 0x1f66aecd7f8 <col:5, col:11> col:11 used tmp 'char *'
|   | `-VarDecl 0x1f66aecd878 <col:5, col:17> col:17 used q 'char *'
|   |-DeclStmt 0x1f66aecd990 <line:198:5, col:27>
|   | `-VarDecl 0x1f66aecd928 <col:5, col:26> col:26 used p 'const unsigned char *'
|   |-DeclStmt 0x1f66aecda28 <line:199:5, col:10>
|   | `-VarDecl 0x1f66aecd9c0 <col:5, col:9> col:9 used i 'int'
|   |-IfStmt 0x1f66aecdcb0 <line:201:5, line:204:5>
|   | |-BinaryOperator 0x1f66aecdab8 <line:201:9, col:16> 'int' '=='
|   | | |-ImplicitCastExpr 0x1f66aecda88 <col:9> 'long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1f66aecda40 <col:9> 'long' lvalue ParmVar 0x1f66aecd470 'len' 'long'
|   | | `-ImplicitCastExpr 0x1f66aecdaa0 <col:16> 'long' <IntegralCast>
|   | |   `-IntegerLiteral 0x1f66aecda60 <col:16> 'int' 0
|   | `-CompoundStmt 0x1f66aecdc98 <line:202:5, line:204:5>
|   |   `-ReturnStmt 0x1f66aecdc88 <line:203:9, col:32>
|   |     `-ImplicitCastExpr 0x1f66aecdc70 <col:16, col:32> 'char *' <IntegralToPointer>
|   |       `-CallExpr 0x1f66aecdc28 <col:16, col:32> 'int'
|   |         |-ImplicitCastExpr 0x1f66aecdc10 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   |         | `-DeclRefExpr 0x1f66aecdbc8 <col:16> 'int ()' Function 0x1f66aecdb00 'OPENSSL_zalloc' 'int ()'
|   |         `-IntegerLiteral 0x1f66aecdbe8 <col:31> 'int' 1
|   |-IfStmt 0x1f66aecde98 <line:206:5, line:209:5>
|   | |-OpaqueValueExpr 0x1f66aecde80 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1f66aecde70 <line:206:50, line:209:5>
|   |-BinaryOperator 0x1f66aecdf20 <line:210:5, col:9> 'char *' '='
|   | |-DeclRefExpr 0x1f66aecdeb0 <col:5> 'char *' lvalue Var 0x1f66aecd878 'q' 'char *'
|   | `-ImplicitCastExpr 0x1f66aecdf08 <col:9> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1f66aecdee8 <col:9> 'char *' lvalue Var 0x1f66aecd7f8 'tmp' 'char *'
|   |-ForStmt 0x1f66aece640 <line:211:5, line:215:5>
|   | |-BinaryOperator 0x1f66aece050 <line:211:10, col:21> 'const unsigned char *' ','
|   | | |-BinaryOperator 0x1f66aecdfa0 <col:10, col:14> 'int' '='
|   | | | |-DeclRefExpr 0x1f66aecdf40 <col:10> 'int' lvalue Var 0x1f66aecd9c0 'i' 'int'
|   | | | `-IntegerLiteral 0x1f66aecdf78 <col:14> 'int' 0
|   | | `-BinaryOperator 0x1f66aece030 <col:17, col:21> 'const unsigned char *' '='
|   | |   |-DeclRefExpr 0x1f66aecdfc0 <col:17> 'const unsigned char *' lvalue Var 0x1f66aecd928 'p' 'const unsigned char *'
|   | |   `-ImplicitCastExpr 0x1f66aece018 <col:21> 'const unsigned char *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x1f66aecdff8 <col:21> 'const unsigned char *' lvalue ParmVar 0x1f66aecd3f0 'buffer' 'const unsigned char *'
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1f66aece0f8 <col:29, col:33> 'int' '<'
|   | | |-ImplicitCastExpr 0x1f66aece0e0 <col:29> 'long' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x1f66aece0b0 <col:29> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1f66aece070 <col:29> 'int' lvalue Var 0x1f66aecd9c0 'i' 'int'
|   | | `-ImplicitCastExpr 0x1f66aece0c8 <col:33> 'long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1f66aece090 <col:33> 'long' lvalue ParmVar 0x1f66aecd470 'len' 'long'
|   | |-BinaryOperator 0x1f66aece188 <col:38, col:44> 'const unsigned char *' ','
|   | | |-UnaryOperator 0x1f66aece138 <col:38, col:39> 'int' postfix '++'
|   | | | `-DeclRefExpr 0x1f66aece118 <col:38> 'int' lvalue Var 0x1f66aecd9c0 'i' 'int'
|   | | `-UnaryOperator 0x1f66aece170 <col:43, col:44> 'const unsigned char *' postfix '++'
|   | |   `-DeclRefExpr 0x1f66aece150 <col:43> 'const unsigned char *' lvalue Var 0x1f66aecd928 'p' 'const unsigned char *'
|   | `-CompoundStmt 0x1f66aece618 <col:48, line:215:5>
|   |   |-BinaryOperator 0x1f66aece3b0 <line:212:9, col:38> 'char' '='
|   |   | |-UnaryOperator 0x1f66aece1e0 <col:9, col:11> 'char' lvalue prefix '*' cannot overflow
|   |   | | `-UnaryOperator 0x1f66aece1c8 <col:10, col:11> 'char *' postfix '++'
|   |   | |   `-DeclRefExpr 0x1f66aece1a8 <col:10> 'char *' lvalue Var 0x1f66aecd878 'q' 'char *'
|   |   | `-ImplicitCastExpr 0x1f66aece398 <col:16, col:38> 'char' <LValueToRValue>
|   |   |   `-ArraySubscriptExpr 0x1f66aece378 <col:16, col:38> 'const char' lvalue
|   |   |     |-ImplicitCastExpr 0x1f66aece360 <col:16> 'const char *' <ArrayToPointerDecay>
|   |   |     | `-DeclRefExpr 0x1f66aece1f8 <col:16> 'const char [17]' lvalue Var 0x1f66aecd6c8 'hexdig' 'const char [17]'
|   |   |     `-BinaryOperator 0x1f66aece340 <col:23, col:35> 'int' '&'
|   |   |       |-ParenExpr 0x1f66aece2f8 <col:23, col:31> 'int'
|   |   |       | `-BinaryOperator 0x1f66aece2d8 <col:24, col:30> 'int' '>>'
|   |   |       |   |-ImplicitCastExpr 0x1f66aece2c0 <col:24, col:25> 'int' <IntegralCast>
|   |   |       |   | `-ImplicitCastExpr 0x1f66aece2a8 <col:24, col:25> 'unsigned char' <LValueToRValue>
|   |   |       |   |   `-UnaryOperator 0x1f66aece268 <col:24, col:25> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   |       |   |     `-ImplicitCastExpr 0x1f66aece250 <col:25> 'const unsigned char *' <LValueToRValue>
|   |   |       |   |       `-DeclRefExpr 0x1f66aece230 <col:25> 'const unsigned char *' lvalue Var 0x1f66aecd928 'p' 'const unsigned char *'
|   |   |       |   `-IntegerLiteral 0x1f66aece280 <col:30> 'int' 4
|   |   |       `-IntegerLiteral 0x1f66aece318 <col:35> 'int' 15
|   |   |-BinaryOperator 0x1f66aece558 <line:213:9, col:31> 'char' '='
|   |   | |-UnaryOperator 0x1f66aece408 <col:9, col:11> 'char' lvalue prefix '*' cannot overflow
|   |   | | `-UnaryOperator 0x1f66aece3f0 <col:10, col:11> 'char *' postfix '++'
|   |   | |   `-DeclRefExpr 0x1f66aece3d0 <col:10> 'char *' lvalue Var 0x1f66aecd878 'q' 'char *'
|   |   | `-ImplicitCastExpr 0x1f66aece540 <col:16, col:31> 'char' <LValueToRValue>
|   |   |   `-ArraySubscriptExpr 0x1f66aece520 <col:16, col:31> 'const char' lvalue
|   |   |     |-ImplicitCastExpr 0x1f66aece508 <col:16> 'const char *' <ArrayToPointerDecay>
|   |   |     | `-DeclRefExpr 0x1f66aece420 <col:16> 'const char [17]' lvalue Var 0x1f66aecd6c8 'hexdig' 'const char [17]'
|   |   |     `-BinaryOperator 0x1f66aece4e8 <col:23, col:28> 'int' '&'
|   |   |       |-ImplicitCastExpr 0x1f66aece4d0 <col:23, col:24> 'int' <IntegralCast>
|   |   |       | `-ImplicitCastExpr 0x1f66aece4b8 <col:23, col:24> 'unsigned char' <LValueToRValue>
|   |   |       |   `-UnaryOperator 0x1f66aece478 <col:23, col:24> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   |       |     `-ImplicitCastExpr 0x1f66aece460 <col:24> 'const unsigned char *' <LValueToRValue>
|   |   |       |       `-DeclRefExpr 0x1f66aece440 <col:24> 'const unsigned char *' lvalue Var 0x1f66aecd928 'p' 'const unsigned char *'
|   |   |       `-IntegerLiteral 0x1f66aece490 <col:28> 'int' 15
|   |   `-BinaryOperator 0x1f66aece5f8 <line:214:9, col:16> 'char' '='
|   |     |-UnaryOperator 0x1f66aece5b0 <col:9, col:11> 'char' lvalue prefix '*' cannot overflow
|   |     | `-UnaryOperator 0x1f66aece598 <col:10, col:11> 'char *' postfix '++'
|   |     |   `-DeclRefExpr 0x1f66aece578 <col:10> 'char *' lvalue Var 0x1f66aecd878 'q' 'char *'
|   |     `-ImplicitCastExpr 0x1f66aece5e0 <col:16> 'char' <IntegralCast>
|   |       `-CharacterLiteral 0x1f66aece5c8 <col:16> 'int' 58
|   |-BinaryOperator 0x1f66aece750 <line:216:5, col:13> 'char' '='
|   | |-ArraySubscriptExpr 0x1f66aece6f0 <col:5, col:9> 'char' lvalue
|   | | |-ImplicitCastExpr 0x1f66aece6d8 <col:5> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1f66aece678 <col:5> 'char *' lvalue Var 0x1f66aecd878 'q' 'char *'
|   | | `-UnaryOperator 0x1f66aece6c0 <col:7, col:8> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x1f66aece698 <col:8> 'int' 1
|   | `-ImplicitCastExpr 0x1f66aece738 <col:13> 'char' <IntegralCast>
|   |   `-IntegerLiteral 0x1f66aece710 <col:13> 'int' 0
|   `-ReturnStmt 0x1f66aece7a8 <line:221:5, col:12>
|     `-ImplicitCastExpr 0x1f66aece790 <col:12> 'char *' <LValueToRValue>
|       `-DeclRefExpr 0x1f66aece770 <col:12> 'char *' lvalue Var 0x1f66aecd7f8 'tmp' 'char *'
`-FunctionDecl 0x1f66aeceaa0 <line:224:1, line:251:1> line:224:5 openssl_strerror_r 'int (int, char *, size_t)'
  |-ParmVarDecl 0x1f66aece830 <col:24, col:28> col:28 used errnum 'int'
  |-ParmVarDecl 0x1f66aece8b0 <col:36, col:42> col:42 used buf 'char *'
  |-ParmVarDecl 0x1f66aece928 <col:47, col:54> col:54 used buflen 'size_t':'unsigned long long'
  `-CompoundStmt 0x1f66aec9d70 <line:225:1, line:251:1>
    `-ReturnStmt 0x1f66aec9d60 <line:227:5, col:43>
      `-UnaryOperator 0x1f66aec9d48 <col:12, col:43> 'int' prefix '!' cannot overflow
        `-CallExpr 0x1f66aec9cc8 <col:13, col:43> 'int'
          |-ImplicitCastExpr 0x1f66aec9cb0 <col:13> 'int (*)()' <FunctionToPointerDecay>
          | `-DeclRefExpr 0x1f66aec9c30 <col:13> 'int ()' Function 0x1f66aeceb98 'strerror_s' 'int ()'
          |-ImplicitCastExpr 0x1f66aec9d00 <col:24> 'char *' <LValueToRValue>
          | `-DeclRefExpr 0x1f66aec9c50 <col:24> 'char *' lvalue ParmVar 0x1f66aece8b0 'buf' 'char *'
          |-ImplicitCastExpr 0x1f66aec9d18 <col:29> 'size_t':'unsigned long long' <LValueToRValue>
          | `-DeclRefExpr 0x1f66aec9c70 <col:29> 'size_t':'unsigned long long' lvalue ParmVar 0x1f66aece928 'buflen' 'size_t':'unsigned long long'
          `-ImplicitCastExpr 0x1f66aec9d30 <col:37> 'int' <LValueToRValue>
            `-DeclRefExpr 0x1f66aec9c90 <col:37> 'int' lvalue ParmVar 0x1f66aece830 'errnum' 'int'
