TranslationUnitDecl 0x206947c85c8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x206947c8e60 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x206947c8b60 '__int128'
|-TypedefDecl 0x206947c8ed0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x206947c8b80 'unsigned __int128'
|-TypedefDecl 0x206947c9208 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x206947c8fc0 'struct __NSConstantString_tag'
|   `-Record 0x206947c8f28 '__NSConstantString_tag'
|-TypedefDecl 0x206947c9278 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x206947c87a0 'unsigned long long'
|-TypedefDecl 0x206947c9310 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x206947c92d0 'char *'
|   `-BuiltinType 0x206947c8660 'char'
|-TypedefDecl 0x206947c9380 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x206947c92d0 'char *'
|   `-BuiltinType 0x206947c8660 'char'
|-TypedefDecl 0x206947c9440 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x206947c87a0 'unsigned long long'
|-TypedefDecl 0x206947c94b0 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x206947c92d0 'char *'
|   `-BuiltinType 0x206947c8660 'char'
|-FunctionDecl 0x2069610c3b0 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x2069610c450 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x2069610c4c0 <col:21> Implicit
|-FunctionDecl 0x2069610c518 prev 0x2069610c3b0 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x2069610c240 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x2069610c608 <col:21> Inherited Implicit
|-TypedefDecl 0x2069610c648 prev 0x206947c9278 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x206947c87a0 'unsigned long long'
|-TypedefDecl 0x2069610c6f0 <line:503:1, col:16> col:16 rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x2069610c6c0 'size_t' sugar
|   |-Typedef 0x2069610c648 'size_t'
|   `-BuiltinType 0x206947c87a0 'unsigned long long'
|-TypedefDecl 0x2069610c760 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x206947c8700 'long long'
|-TypedefDecl 0x2069610c7d0 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x206947c8700 'long long'
|-TypedefDecl 0x2069610c840 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x206947c8740 'unsigned short'
|-TypedefDecl 0x2069610c8b0 <line:541:1, col:24> col:24 referenced wint_t 'unsigned short'
| `-BuiltinType 0x206947c8740 'unsigned short'
|-TypedefDecl 0x2069610c920 <line:542:1, col:24> col:24 referenced wctype_t 'unsigned short'
| `-BuiltinType 0x206947c8740 'unsigned short'
|-TypedefDecl 0x2069610c990 <line:563:1, col:13> col:13 errno_t 'int'
| `-BuiltinType 0x206947c86c0 'int'
|-TypedefDecl 0x2069610ca00 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x206947c86e0 'long'
|-TypedefDecl 0x2069610ca70 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x206947c8700 'long long'
|-TypedefDecl 0x2069610cb00 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x2069610cad0 '__time64_t' sugar
|   |-Typedef 0x2069610ca70 '__time64_t'
|   `-BuiltinType 0x206947c8700 'long long'
|-FunctionDecl 0x2069610cc78 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x2069610ce98 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x2069614c520 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x2069610cfd8 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x2069610d050 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x2069610d0c8 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x2069610d148 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x2069614c2c0 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x2069614c600 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x2069614c6c0 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x2069614c830 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x2069614c7e0 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x2069614c780 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x2069614c6a0 'struct threadlocaleinfostruct'
|       `-Record 0x20696159390 'threadlocaleinfostruct'
|-TypedefDecl 0x2069614c940 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x2069614c8f0 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x2069614c890 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x2069614c760 'struct threadmbcinfostruct'
|       `-Record 0x2069614c6c0 'threadmbcinfostruct'
|-RecordDecl 0x2069614c998 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x2069614ca50 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x2069614cb10 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2069614cba0 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x2069614cc30 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x2069614cce8 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x2069614cc90 'struct localeinfo_struct' sugar
|   `-RecordType 0x2069614caf0 'struct localeinfo_struct'
|     `-Record 0x2069614ca50 'localeinfo_struct'
|-TypedefDecl 0x2069614cdc0 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x2069614cd70 'struct localeinfo_struct *'
|   `-ElaboratedType 0x2069614cc90 'struct localeinfo_struct' sugar
|     `-RecordType 0x2069614caf0 'struct localeinfo_struct'
|       `-Record 0x2069614ca50 'localeinfo_struct'
|-RecordDecl 0x2069614ce38 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x2069614cef0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2069614cf68 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x2069614d028 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x2069614d0c0 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x2069614d130 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x2069614d1e8 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x2069614d190 'struct localerefcount' sugar
|   `-RecordType 0x2069614ced0 'struct localerefcount'
|     `-Record 0x2069614ce38 'localerefcount'
|-RecordDecl 0x20696159390 prev 0x2069614c600 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x20696159410 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x20696159488 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x206961594f8 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x20696159568 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x206961595d8 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x20696159798 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x20696159808 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x20696159878 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x206961598e8 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x20696159958 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x206961599c8 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x20696159a20 parent 0x206947c85c8 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x20696159bb0 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x20696159c20 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x20696159c90 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x20696159d00 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x20696159da0 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x20696159e10 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x20696159f20 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x2069615a058 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x2069615a108 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x2069615a0b0 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x2069614c6a0 'struct threadlocaleinfostruct'
|     `-Record 0x20696159390 'threadlocaleinfostruct'
|-FunctionDecl 0x2069615a2a0 <D:\Microsoft Visual Studio 12.0\VC\include\ctype.h:49:9, col:58> col:40 __pctype_func 'const unsigned short *(void) __attribute__((cdecl))':'const unsigned short *(void)'
|-VarDecl 0x20696157370 <line:51:9, col:38> col:38 _pctype 'const unsigned short *' extern
|-VarDecl 0x20696157470 <line:62:9, col:45> col:37 _wctype 'const unsigned short []' extern
|-FunctionDecl 0x20696157668 <line:73:9, col:53> col:34 __pwctype_func 'const wctype_t *(void) __attribute__((cdecl))':'const wctype_t *(void)'
|-VarDecl 0x20696157730 <line:75:9, col:32> col:32 _pwctype 'const wctype_t *' extern
|-FunctionDecl 0x206961579b0 <line:119:24, col:72> col:36 _isctype 'int (int, int) __attribute__((cdecl))':'int (int, int)'
| |-ParmVarDecl 0x206961577c8 <col:50, col:54> col:54 _C 'int'
| `-ParmVarDecl 0x20696157848 <col:63, col:67> col:67 _Type 'int'
|-FunctionDecl 0x20696157d88 <line:120:24, col:102> col:36 _isctype_l 'int (int, int, _locale_t) __attribute__((cdecl))':'int (int, int, _locale_t)'
| |-ParmVarDecl 0x20696157a90 <col:52, col:56> col:56 _C 'int'
| |-ParmVarDecl 0x20696157b10 <col:65, col:69> col:69 _Type 'int'
| `-ParmVarDecl 0x20696157bb0 <col:85, col:95> col:95 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20696157fb8 <line:121:55> col:55 implicit isalpha 'int (int)' extern
| |-ParmVarDecl 0x20696158058 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x206961580c8 <col:55> Implicit
| `-PureAttr 0x20696158120 <col:55> Implicit
|-FunctionDecl 0x20696158148 prev 0x20696157fb8 <col:43, col:74> col:55 isalpha 'int (int)'
| |-ParmVarDecl 0x20696157e70 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x20696158238 <col:55> Inherited Implicit
| `-PureAttr 0x20696158260 <col:55> Inherited Implicit
|-FunctionDecl 0x2069615a550 <line:122:24, col:86> col:36 _isalpha_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x206961582a0 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x2069615a3a0 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2069615a710 <line:123:55> col:55 implicit isupper 'int (int)' extern
| |-ParmVarDecl 0x2069615a7b0 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x2069615a820 <col:55> Implicit
| `-PureAttr 0x2069615a878 <col:55> Implicit
|-FunctionDecl 0x2069615a8a0 prev 0x2069615a710 <col:43, col:74> col:55 isupper 'int (int)'
| |-ParmVarDecl 0x2069615a630 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x2069615a990 <col:55> Inherited Implicit
| `-PureAttr 0x2069615a9b8 <col:55> Inherited Implicit
|-FunctionDecl 0x2069615ab70 <line:124:24, col:86> col:36 _isupper_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x2069615a9f8 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x2069615aa70 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2069615ad30 <line:125:55> col:55 implicit islower 'int (int)' extern
| |-ParmVarDecl 0x2069615add0 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x2069615ae40 <col:55> Implicit
| `-PureAttr 0x2069615ae98 <col:55> Implicit
|-FunctionDecl 0x2069615aec0 prev 0x2069615ad30 <col:43, col:74> col:55 islower 'int (int)'
| |-ParmVarDecl 0x2069615ac50 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x2069615afb0 <col:55> Inherited Implicit
| `-PureAttr 0x2069615afd8 <col:55> Inherited Implicit
|-FunctionDecl 0x2069615b190 <line:126:24, col:86> col:36 _islower_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x2069615b018 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x2069615b090 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20696158380 <line:127:55> col:55 implicit isdigit 'int (int)' extern
| |-ParmVarDecl 0x20696158420 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x20696158490 <col:55> Implicit
| `-PureAttr 0x206961584e8 <col:55> Implicit
|-FunctionDecl 0x20696158510 prev 0x20696158380 <col:43, col:74> col:55 isdigit 'int (int)'
| |-ParmVarDecl 0x2069615b270 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x20696158600 <col:55> Inherited Implicit
| `-PureAttr 0x20696158628 <col:55> Inherited Implicit
|-FunctionDecl 0x206961587e0 <line:128:24, col:86> col:36 _isdigit_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x20696158668 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x206961586e0 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x206961589a0 <line:129:36> col:36 implicit isxdigit 'int (int)' extern
| |-ParmVarDecl 0x20696158a40 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x20696158ab0 <col:36> Implicit
| `-PureAttr 0x20696158b08 <col:36> Implicit
|-FunctionDecl 0x20696158b30 prev 0x206961589a0 <col:24, col:56> col:36 isxdigit 'int (int)'
| |-ParmVarDecl 0x206961588c0 <col:50, col:54> col:54 _C 'int'
| |-NoThrowAttr 0x20696158c20 <col:36> Inherited Implicit
| `-PureAttr 0x20696158c48 <col:36> Inherited Implicit
|-FunctionDecl 0x20696158e00 <line:130:24, col:87> col:36 _isxdigit_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x20696158c88 <col:53, col:57> col:57 _C 'int'
| `-ParmVarDecl 0x20696158d00 <col:70, col:80> col:80 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20696158fc0 <line:131:55> col:55 implicit isspace 'int (int)' extern
| |-ParmVarDecl 0x20696159060 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x206961590d0 <col:55> Implicit
| `-PureAttr 0x20696159128 <col:55> Implicit
|-FunctionDecl 0x20696159150 prev 0x20696158fc0 <col:43, col:74> col:55 isspace 'int (int)'
| |-ParmVarDecl 0x20696158ee0 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x20696159240 <col:55> Inherited Implicit
| `-PureAttr 0x20696159268 <col:55> Inherited Implicit
|-FunctionDecl 0x2069615c4c0 <line:132:24, col:86> col:36 _isspace_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x206961592a8 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x2069615c3c0 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2069615c680 <line:133:36> col:36 implicit ispunct 'int (int)' extern
| |-ParmVarDecl 0x2069615c720 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x2069615c790 <col:36> Implicit
| `-PureAttr 0x2069615c7e8 <col:36> Implicit
|-FunctionDecl 0x2069615c810 prev 0x2069615c680 <col:24, col:55> col:36 ispunct 'int (int)'
| |-ParmVarDecl 0x2069615c5a0 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x2069615c900 <col:36> Inherited Implicit
| `-PureAttr 0x2069615c928 <col:36> Inherited Implicit
|-FunctionDecl 0x2069615cae0 <line:134:24, col:86> col:36 _ispunct_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x2069615c968 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x2069615c9e0 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2069615cca0 <line:135:36> col:36 implicit isblank 'int (int)' extern
| |-ParmVarDecl 0x2069615cd40 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x2069615cdb0 <col:36> Implicit
| `-PureAttr 0x2069615ce08 <col:36> Implicit
|-FunctionDecl 0x2069615ce30 prev 0x2069615cca0 <col:24, col:55> col:36 isblank 'int (int)'
| |-ParmVarDecl 0x2069615cbc0 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x2069615cf20 <col:36> Inherited Implicit
| `-PureAttr 0x2069615cf48 <col:36> Inherited Implicit
|-FunctionDecl 0x2069615d100 <line:136:24, col:86> col:36 _isblank_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x2069615cf88 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x2069615d000 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2069615d2c0 <line:137:55> col:55 implicit isalnum 'int (int)' extern
| |-ParmVarDecl 0x20696156360 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x206961563d0 <col:55> Implicit
| `-PureAttr 0x20696156428 <col:55> Implicit
|-FunctionDecl 0x20696156450 prev 0x2069615d2c0 <col:43, col:74> col:55 isalnum 'int (int)'
| |-ParmVarDecl 0x2069615d1e0 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x20696156540 <col:55> Inherited Implicit
| `-PureAttr 0x20696156568 <col:55> Inherited Implicit
|-FunctionDecl 0x20696156720 <line:138:24, col:86> col:36 _isalnum_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x206961565a8 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x20696156620 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x206961568e0 <line:139:36> col:36 implicit isprint 'int (int)' extern
| |-ParmVarDecl 0x20696156980 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x206961569f0 <col:36> Implicit
| `-PureAttr 0x20696156a48 <col:36> Implicit
|-FunctionDecl 0x20696156a70 prev 0x206961568e0 <col:24, col:55> col:36 isprint 'int (int)'
| |-ParmVarDecl 0x20696156800 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x20696156b60 <col:36> Inherited Implicit
| `-PureAttr 0x20696156b88 <col:36> Inherited Implicit
|-FunctionDecl 0x20696156d40 <line:140:24, col:86> col:36 _isprint_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x20696156bc8 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x20696156c40 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20696156f00 <line:141:36> col:36 implicit isgraph 'int (int)' extern
| |-ParmVarDecl 0x20696156fa0 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x20696157010 <col:36> Implicit
| `-PureAttr 0x20696157068 <col:36> Implicit
|-FunctionDecl 0x20696157090 prev 0x20696156f00 <col:24, col:55> col:36 isgraph 'int (int)'
| |-ParmVarDecl 0x20696156e20 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x20696157180 <col:36> Inherited Implicit
| `-PureAttr 0x206961571a8 <col:36> Inherited Implicit
|-FunctionDecl 0x20696163430 <line:142:24, col:86> col:36 _isgraph_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x206961571e8 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x20696157260 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x206961635f0 <line:143:36> col:36 implicit iscntrl 'int (int)' extern
| |-ParmVarDecl 0x20696163690 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x20696163700 <col:36> Implicit
| `-PureAttr 0x20696163758 <col:36> Implicit
|-FunctionDecl 0x20696163780 prev 0x206961635f0 <col:24, col:55> col:36 iscntrl 'int (int)'
| |-ParmVarDecl 0x20696163510 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x20696163870 <col:36> Inherited Implicit
| `-PureAttr 0x20696163898 <col:36> Inherited Implicit
|-FunctionDecl 0x20696163a50 <line:144:24, col:86> col:36 _iscntrl_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x206961638d8 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x20696163950 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20696163c10 <line:145:55> col:55 implicit toupper 'int (int)' extern
| |-ParmVarDecl 0x20696163cb0 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x20696163d20 <col:55> Implicit
| `-PureAttr 0x20696163d78 <col:55> Implicit
|-FunctionDecl 0x20696163da0 prev 0x20696163c10 <col:43, col:74> col:55 toupper 'int (int)'
| |-ParmVarDecl 0x20696163b30 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x20696163e90 <col:55> Inherited Implicit
| `-PureAttr 0x20696163eb8 <col:55> Inherited Implicit
|-FunctionDecl 0x20696163fd8 <line:146:55> col:55 implicit tolower 'int (int)' extern
| |-ParmVarDecl 0x20696164078 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x206961640e8 <col:55> Implicit
| `-PureAttr 0x20696164140 <col:55> Implicit
|-FunctionDecl 0x20696164168 prev 0x20696163fd8 <col:43, col:74> col:55 tolower 'int (int)'
| |-ParmVarDecl 0x20696163ef8 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x20696164258 <col:55> Inherited Implicit
| `-PureAttr 0x20696164280 <col:55> Inherited Implicit
|-FunctionDecl 0x20696161410 <line:147:43, col:75> col:55 _tolower 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x206961642c0 <col:69, col:73> col:73 _C 'int'
|-FunctionDecl 0x20696161660 <line:148:24, col:86> col:36 _tolower_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x206961614e8 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x20696161560 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20696161820 <line:149:43, col:75> col:55 _toupper 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x20696161740 <col:69, col:73> col:73 _C 'int'
|-FunctionDecl 0x20696161a70 <line:150:24, col:86> col:36 _toupper_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x206961618f8 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x20696161970 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20696161c30 <line:151:24, col:57> col:36 __isascii 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x20696161b50 <col:51, col:55> col:55 _C 'int'
|-FunctionDecl 0x20696161de8 <line:152:24, col:57> col:36 __toascii 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x20696161d08 <col:51, col:55> col:55 _C 'int'
|-FunctionDecl 0x20696161fa0 <line:153:24, col:57> col:36 __iscsymf 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x20696161ec0 <col:51, col:55> col:55 _C 'int'
|-FunctionDecl 0x20696162158 <line:154:24, col:56> col:36 __iscsym 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x20696162078 <col:50, col:54> col:54 _C 'int'
|-FunctionDecl 0x20696160400 <line:164:24, col:59> col:36 iswalpha 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x20696162250 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x206961606f0 <line:165:24, col:90> col:36 _iswalpha_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x206961604d0 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x20696160548 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x206961608a8 <line:166:24, col:59> col:36 iswupper 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x206961607c8 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x20696160af0 <line:167:24, col:90> col:36 _iswupper_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x20696160978 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x206961609f0 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20696160ca8 <line:168:24, col:59> col:36 iswlower 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x20696160bc8 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x20696160ef0 <line:169:24, col:90> col:36 _iswlower_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x20696160d78 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x20696160df0 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x206961610a8 <line:170:24, col:59> col:36 iswdigit 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x20696160fc8 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x206961612f0 <line:171:24, col:90> col:36 _iswdigit_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x20696161178 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x206961611f0 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2069615f4d0 <line:172:24, col:60> col:36 iswxdigit 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x2069615f3f0 <col:51, col:58> col:58 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x2069615f718 <line:173:24, col:91> col:36 _iswxdigit_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x2069615f5a0 <col:54, col:61> col:61 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x2069615f618 <col:74, col:84> col:84 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2069615f8d0 <line:174:24, col:59> col:36 iswspace 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x2069615f7f0 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x2069615fb18 <line:175:24, col:90> col:36 _iswspace_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x2069615f9a0 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x2069615fa18 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2069615fcd0 <line:176:24, col:59> col:36 iswpunct 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x2069615fbf0 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x2069615ff18 <line:177:24, col:90> col:36 _iswpunct_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x2069615fda0 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x2069615fe18 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x206961600d0 <line:178:24, col:59> col:36 iswblank 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x2069615fff0 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x20696160318 <line:179:24, col:90> col:36 _iswblank_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x206961601a0 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x20696160218 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20696165530 <line:180:24, col:59> col:36 iswalnum 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x20696165450 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x20696165778 <line:181:24, col:90> col:36 _iswalnum_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x20696165600 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x20696165678 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20696165930 <line:182:24, col:59> col:36 iswprint 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x20696165850 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x20696165b78 <line:183:24, col:90> col:36 _iswprint_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x20696165a00 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x20696165a78 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20696165d30 <line:184:24, col:59> col:36 iswgraph 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x20696165c50 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x20696165f78 <line:185:24, col:90> col:36 _iswgraph_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x20696165e00 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x20696165e78 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20696166130 <line:186:24, col:59> col:36 iswcntrl 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x20696166050 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x20696166378 <line:187:24, col:90> col:36 _iswcntrl_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x20696166200 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x20696166278 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20696164520 <line:188:24, col:59> col:36 iswascii 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x20696164440 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x20696164760 <line:190:24, col:62> col:39 towupper 'wint_t (wint_t) __attribute__((cdecl))':'wint_t (wint_t)'
| `-ParmVarDecl 0x206961645f0 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x20696164a48 <line:191:24, col:93> col:39 _towupper_l 'wint_t (wint_t, _locale_t) __attribute__((cdecl))':'wint_t (wint_t, _locale_t)'
| |-ParmVarDecl 0x20696164830 <col:56, col:63> col:63 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x206961648a8 <col:76, col:86> col:86 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20696164bf8 <line:192:24, col:62> col:39 towlower 'wint_t (wint_t) __attribute__((cdecl))':'wint_t (wint_t)'
| `-ParmVarDecl 0x20696164b20 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x20696164e38 <line:193:24, col:93> col:39 _towlower_l 'wint_t (wint_t, _locale_t) __attribute__((cdecl))':'wint_t (wint_t, _locale_t)'
| |-ParmVarDecl 0x20696164cc8 <col:56, col:63> col:63 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x20696164d40 <col:76, col:86> col:86 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20696165130 <line:194:24, col:80> col:36 iswctype 'int (wint_t, wctype_t) __attribute__((cdecl))':'int (wint_t, wctype_t)'
| |-ParmVarDecl 0x20696164f10 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x20696164f88 <col:66, col:75> col:75 _Type 'wctype_t':'unsigned short'
|-FunctionDecl 0x206961624c8 <line:195:24, col:111> col:36 _iswctype_l 'int (wint_t, wctype_t, _locale_t) __attribute__((cdecl))':'int (wint_t, wctype_t, _locale_t)'
| |-ParmVarDecl 0x20696165208 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| |-ParmVarDecl 0x20696165280 <col:69, col:78> col:78 _Type 'wctype_t':'unsigned short'
| `-ParmVarDecl 0x206961652f8 <col:94, col:104> col:104 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20696162688 <line:197:24, col:61> col:36 __iswcsymf 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x206961625a8 <col:52, col:59> col:59 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x206961628d0 <line:198:24, col:90> col:36 _iswcsymf_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x20696162758 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x206961627d0 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20696162a88 <line:199:24, col:60> col:36 __iswcsym 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x206961629a8 <col:51, col:58> col:58 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x20696162cd0 <line:200:24, col:89> col:36 _iswcsym_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x20696162b58 <col:52, col:59> col:59 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x20696162bd0 <col:72, col:82> col:82 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20696162e90 <line:203:24, col:58> col:36 isleadbyte 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x20696162db0 <col:52, col:56> col:56 _C 'int'
|-FunctionDecl 0x206961630e0 <line:204:24, col:89> col:36 _isleadbyte_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x20696162f68 <col:55, col:59> col:59 _C 'int'
| `-ParmVarDecl 0x20696162fe0 <col:72, col:82> col:82 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2069615e420 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\ctype.h:205:90> col:45 is_wctype 'int (wint_t, wctype_t) __attribute__((cdecl))':'int (wint_t, wctype_t)'
| |-ParmVarDecl 0x206961632b8 <col:60, col:67> col:67 _C 'wint_t':'unsigned short'
| |-ParmVarDecl 0x20696163330 <col:76, col:85> col:85 _Type 'wctype_t':'unsigned short'
| `-DeprecatedAttr 0x2069615e4d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using iswctype instead. See online help for details." ""
|-VarDecl 0x2069615e618 <D:\Microsoft Visual Studio 12.0\VC\include\ctype.h:235:9, col:20> col:20 __mb_cur_max 'int' extern
|-FunctionDecl 0x2069615e7c0 <line:239:9, col:44> col:21 ___mb_cur_max_func 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2069615e9e8 <line:240:9, col:51> col:21 ___mb_cur_max_l_func 'int (_locale_t) __attribute__((cdecl))':'int (_locale_t)'
| `-ParmVarDecl 0x2069615e888 <col:42> col:51 '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2069615ed60 <.//openssl//file_jk/before\crypto\o_str.c:17:1, line:26:1> line:17:5 OPENSSL_memcmp 'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x2069615eaf0 <col:20, col:32> col:32 used v1 'const void *'
| |-ParmVarDecl 0x2069615eb70 <col:36, col:48> col:48 used v2 'const void *'
| |-ParmVarDecl 0x2069615ebe8 <col:52, col:59> col:59 used n 'size_t':'unsigned long long'
| `-CompoundStmt 0x206961c0f18 <line:18:1, line:26:1>
|   |-DeclStmt 0x2069615efe8 <line:19:5, col:43>
|   | |-VarDecl 0x2069615ee48 <col:5, col:31> col:26 used c1 'const unsigned char *' cinit
|   | | `-ImplicitCastExpr 0x2069615eee8 <col:31> 'const unsigned char *' <BitCast>
|   | |   `-ImplicitCastExpr 0x2069615eed0 <col:31> 'const void *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x2069615eeb0 <col:31> 'const void *' lvalue ParmVar 0x2069615eaf0 'v1' 'const void *'
|   | `-VarDecl 0x2069615ef18 <col:5, col:41> col:36 used c2 'const unsigned char *' cinit
|   |   `-ImplicitCastExpr 0x2069615efb8 <col:41> 'const unsigned char *' <BitCast>
|   |     `-ImplicitCastExpr 0x2069615efa0 <col:41> 'const void *' <LValueToRValue>
|   |       `-DeclRefExpr 0x2069615ef80 <col:41> 'const void *' lvalue ParmVar 0x2069615eb70 'v2' 'const void *'
|   |-DeclStmt 0x2069615f0a8 <line:20:5, col:16>
|   | `-VarDecl 0x2069615f018 <col:5, col:15> col:9 used ret 'int' cinit
|   |   `-IntegerLiteral 0x2069615f080 <col:15> 'int' 0
|   |-WhileStmt 0x206961c0eb8 <line:22:5, line:23:22>
|   | |-BinaryOperator 0x2069615f308 <line:22:12, col:38> 'int' '&&'
|   | | |-ImplicitCastExpr 0x2069615f2f0 <col:12> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2069615f0c0 <col:12> 'size_t':'unsigned long long' lvalue ParmVar 0x2069615ebe8 'n' 'size_t':'unsigned long long'
|   | | `-BinaryOperator 0x2069615f2d0 <col:17, col:38> 'int' '=='
|   | |   |-ParenExpr 0x2069615f288 <col:17, col:33> 'int'
|   | |   | `-BinaryOperator 0x2069615f268 <col:18, col:31> 'int' '='
|   | |   |   |-DeclRefExpr 0x2069615f0e0 <col:18> 'int' lvalue Var 0x2069615f018 'ret' 'int'
|   | |   |   `-BinaryOperator 0x2069615f248 <col:24, col:31> 'int' '-'
|   | |   |     |-ImplicitCastExpr 0x2069615f200 <col:24, col:25> 'int' <IntegralCast>
|   | |   |     | `-ImplicitCastExpr 0x2069615f1e8 <col:24, col:25> 'unsigned char' <LValueToRValue>
|   | |   |     |   `-UnaryOperator 0x2069615f168 <col:24, col:25> 'const unsigned char' lvalue prefix '*' cannot overflow
|   | |   |     |     `-ImplicitCastExpr 0x2069615f150 <col:25> 'const unsigned char *' <LValueToRValue>
|   | |   |     |       `-DeclRefExpr 0x2069615f118 <col:25> 'const unsigned char *' lvalue Var 0x2069615ee48 'c1' 'const unsigned char *'
|   | |   |     `-ImplicitCastExpr 0x2069615f230 <col:30, col:31> 'int' <IntegralCast>
|   | |   |       `-ImplicitCastExpr 0x2069615f218 <col:30, col:31> 'unsigned char' <LValueToRValue>
|   | |   |         `-UnaryOperator 0x2069615f1d0 <col:30, col:31> 'const unsigned char' lvalue prefix '*' cannot overflow
|   | |   |           `-ImplicitCastExpr 0x2069615f1b8 <col:31> 'const unsigned char *' <LValueToRValue>
|   | |   |             `-DeclRefExpr 0x2069615f180 <col:31> 'const unsigned char *' lvalue Var 0x2069615ef18 'c2' 'const unsigned char *'
|   | |   `-IntegerLiteral 0x2069615f2a8 <col:38> 'int' 0
|   | `-BinaryOperator 0x206961c0e98 <line:23:9, col:22> 'const unsigned char *' ','
|   |   |-BinaryOperator 0x2069615f398 <col:9, col:16> 'const unsigned char *' ','
|   |   | |-UnaryOperator 0x2069615f348 <col:9, col:10> 'size_t':'unsigned long long' postfix '--'
|   |   | | `-DeclRefExpr 0x2069615f328 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x2069615ebe8 'n' 'size_t':'unsigned long long'
|   |   | `-UnaryOperator 0x2069615f380 <col:14, col:16> 'const unsigned char *' postfix '++'
|   |   |   `-DeclRefExpr 0x2069615f360 <col:14> 'const unsigned char *' lvalue Var 0x2069615ee48 'c1' 'const unsigned char *'
|   |   `-UnaryOperator 0x206961c0e80 <col:20, col:22> 'const unsigned char *' postfix '++'
|   |     `-DeclRefExpr 0x2069615f3b8 <col:20> 'const unsigned char *' lvalue Var 0x2069615ef18 'c2' 'const unsigned char *'
|   `-ReturnStmt 0x206961c0f08 <line:25:5, col:12>
|     `-ImplicitCastExpr 0x206961c0ef0 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x206961c0ed0 <col:12> 'int' lvalue Var 0x2069615f018 'ret' 'int'
|-FunctionDecl 0x206961c1190 <line:28:1, line:40:1> line:28:7 CRYPTO_strdup 'char *(const char *, const char *, int)'
| |-ParmVarDecl 0x206961c0f60 <col:21, col:33> col:33 used str 'const char *'
| |-ParmVarDecl 0x206961c0fe0 <col:38, col:50> col:50 used file 'const char *'
| |-ParmVarDecl 0x206961c1060 <col:56, col:60> col:60 used line 'int'
| `-CompoundStmt 0x206961c1e08 <line:29:1, line:40:1>
|   |-DeclStmt 0x206961c12e0 <line:30:5, col:14>
|   | `-VarDecl 0x206961c1278 <col:5, col:11> col:11 used ret 'char *'
|   |-DeclStmt 0x206961c1370 <line:31:5, col:16>
|   | `-VarDecl 0x206961c1308 <col:5, col:12> col:12 used size 'size_t':'unsigned long long'
|   |-BinaryOperator 0x206961c1670 <line:35:5, col:26> 'size_t':'unsigned long long' '='
|   | |-DeclRefExpr 0x206961c13a8 <col:5> 'size_t':'unsigned long long' lvalue Var 0x206961c1308 'size' 'size_t':'unsigned long long'
|   | `-BinaryOperator 0x206961c1650 <col:12, col:26> 'unsigned long long' '+'
|   |   |-CallExpr 0x206961c15d0 <col:12, col:22> 'unsigned long long'
|   |   | |-ImplicitCastExpr 0x206961c15b8 <col:12> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x206961c1520 <col:12> 'unsigned long long (const char *)' Function 0x206961c1410 'strlen' 'unsigned long long (const char *)'
|   |   | `-ImplicitCastExpr 0x206961c15f8 <col:19> 'const char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x206961c1558 <col:19> 'const char *' lvalue ParmVar 0x206961c0f60 'str' 'const char *'
|   |   `-ImplicitCastExpr 0x206961c1638 <col:26> 'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x206961c1610 <col:26> 'int' 1
|   |-BinaryOperator 0x206961c1948 <line:36:5, col:41> 'char *' '='
|   | |-DeclRefExpr 0x206961c1690 <col:5> 'char *' lvalue Var 0x206961c1278 'ret' 'char *'
|   | `-ImplicitCastExpr 0x206961c1930 <col:11, col:41> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x206961c18b0 <col:11, col:41> 'int'
|   |     |-ImplicitCastExpr 0x206961c1898 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x206961c17e8 <col:11> 'int ()' Function 0x206961c1720 'CRYPTO_malloc' 'int ()'
|   |     |-ImplicitCastExpr 0x206961c18e8 <col:25> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x206961c1808 <col:25> 'size_t':'unsigned long long' lvalue Var 0x206961c1308 'size' 'size_t':'unsigned long long'
|   |     |-ImplicitCastExpr 0x206961c1900 <col:31> 'const char *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x206961c1828 <col:31> 'const char *' lvalue ParmVar 0x206961c0fe0 'file' 'const char *'
|   |     `-ImplicitCastExpr 0x206961c1918 <col:37> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x206961c1848 <col:37> 'int' lvalue ParmVar 0x206961c1060 'line' 'int'
|   |-IfStmt 0x206961c1da8 <line:37:5, line:38:30>
|   | |-OpaqueValueExpr 0x206961c1d90 <<invalid sloc>> '_Bool'
|   | `-CallExpr 0x206961c1ce0 <col:9, col:30> 'void *'
|   |   |-ImplicitCastExpr 0x206961c1cc8 <col:9> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x206961c1bc0 <col:9> 'void *(void *, const void *, unsigned long long)' Function 0x206961c19d0 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   |   |-ImplicitCastExpr 0x206961c1d30 <col:16> 'void *' <BitCast>
|   |   | `-ImplicitCastExpr 0x206961c1d18 <col:16> 'char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x206961c1bf8 <col:16> 'char *' lvalue Var 0x206961c1278 'ret' 'char *'
|   |   |-ImplicitCastExpr 0x206961c1d60 <col:21> 'const void *' <BitCast>
|   |   | `-ImplicitCastExpr 0x206961c1d48 <col:21> 'const char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x206961c1c18 <col:21> 'const char *' lvalue ParmVar 0x206961c0f60 'str' 'const char *'
|   |   `-ImplicitCastExpr 0x206961c1d78 <col:26> 'size_t':'unsigned long long' <LValueToRValue>
|   |     `-DeclRefExpr 0x206961c1c38 <col:26> 'size_t':'unsigned long long' lvalue Var 0x206961c1308 'size' 'size_t':'unsigned long long'
|   `-ReturnStmt 0x206961c1df8 <line:39:5, col:12>
|     `-ImplicitCastExpr 0x206961c1de0 <col:12> 'char *' <LValueToRValue>
|       `-DeclRefExpr 0x206961c1dc0 <col:12> 'char *' lvalue Var 0x206961c1278 'ret' 'char *'
|-FunctionDecl 0x206961c1410 <line:35:12> col:12 implicit used strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x206961c14b0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x206961c19d0 <line:38:9> col:9 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x206961c1a70 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x206961c1ad8 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x206961c1b40 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x206961bf180 <line:42:1, line:58:1> line:42:7 CRYPTO_strndup 'char *(const char *, size_t, const char *, int)'
| |-ParmVarDecl 0x206961bee60 <col:22, col:34> col:34 used str 'const char *'
| |-ParmVarDecl 0x206961beed8 <col:39, col:46> col:46 used s 'size_t':'unsigned long long'
| |-ParmVarDecl 0x206961bef58 <col:49, col:61> col:61 used file 'const char *'
| |-ParmVarDecl 0x206961befd8 <col:67, col:71> col:71 used line 'int'
| `-CompoundStmt 0x206961bfae8 <line:43:1, line:58:1>
|   |-DeclStmt 0x206961bf2d0 <line:44:5, col:18>
|   | `-VarDecl 0x206961bf268 <col:5, col:12> col:12 used maxlen 'size_t':'unsigned long long'
|   |-DeclStmt 0x206961bf368 <line:45:5, col:14>
|   | `-VarDecl 0x206961bf300 <col:5, col:11> col:11 used ret 'char *'
|   |-BinaryOperator 0x206961bf5b8 <line:50:5, col:36> 'size_t':'unsigned long long' '='
|   | |-DeclRefExpr 0x206961bf3a0 <col:5> 'size_t':'unsigned long long' lvalue Var 0x206961bf268 'maxlen' 'size_t':'unsigned long long'
|   | `-ImplicitCastExpr 0x206961bf5a0 <col:14, col:36> 'size_t':'unsigned long long' <IntegralCast>
|   |   `-CallExpr 0x206961bf540 <col:14, col:36> 'int'
|   |     |-ImplicitCastExpr 0x206961bf528 <col:14> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x206961bf4c8 <col:14> 'int ()' Function 0x206961bf400 'OPENSSL_strnlen' 'int ()'
|   |     |-ImplicitCastExpr 0x206961bf570 <col:30> 'const char *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x206961bf4e8 <col:30> 'const char *' lvalue ParmVar 0x206961bee60 'str' 'const char *'
|   |     `-ImplicitCastExpr 0x206961bf588 <col:35> 'size_t':'unsigned long long' <LValueToRValue>
|   |       `-DeclRefExpr 0x206961bf508 <col:35> 'size_t':'unsigned long long' lvalue ParmVar 0x206961beed8 's' 'size_t':'unsigned long long'
|   |-BinaryOperator 0x206961bf7a0 <line:52:5, col:47> 'char *' '='
|   | |-DeclRefExpr 0x206961bf5d8 <col:5> 'char *' lvalue Var 0x206961bf300 'ret' 'char *'
|   | `-ImplicitCastExpr 0x206961bf788 <col:11, col:47> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x206961bf720 <col:11, col:47> 'int'
|   |     |-ImplicitCastExpr 0x206961bf708 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x206961bf610 <col:11> 'int ()' Function 0x206961c1720 'CRYPTO_malloc' 'int ()'
|   |     |-BinaryOperator 0x206961bf6a8 <col:25, col:34> 'unsigned long long' '+'
|   |     | |-ImplicitCastExpr 0x206961bf678 <col:25> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x206961bf630 <col:25> 'size_t':'unsigned long long' lvalue Var 0x206961bf268 'maxlen' 'size_t':'unsigned long long'
|   |     | `-ImplicitCastExpr 0x206961bf690 <col:34> 'unsigned long long' <IntegralCast>
|   |     |   `-IntegerLiteral 0x206961bf650 <col:34> 'int' 1
|   |     |-ImplicitCastExpr 0x206961bf758 <col:37> 'const char *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x206961bf6c8 <col:37> 'const char *' lvalue ParmVar 0x206961bef58 'file' 'const char *'
|   |     `-ImplicitCastExpr 0x206961bf770 <col:43> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x206961bf6e8 <col:43> 'int' lvalue ParmVar 0x206961befd8 'line' 'int'
|   |-IfStmt 0x206961bfa88 <line:53:5, line:56:5>
|   | |-ImplicitCastExpr 0x206961bf7e0 <line:53:9> 'char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x206961bf7c0 <col:9> 'char *' lvalue Var 0x206961bf300 'ret' 'char *'
|   | `-CompoundStmt 0x206961bfa68 <col:14, line:56:5>
|   |   |-CallExpr 0x206961bf8d8 <line:54:9, col:32> 'void *'
|   |   | |-ImplicitCastExpr 0x206961bf8c0 <col:9> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x206961bf7f8 <col:9> 'void *(void *, const void *, unsigned long long)' Function 0x206961c19d0 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   |   | |-ImplicitCastExpr 0x206961bf928 <col:16> 'void *' <BitCast>
|   |   | | `-ImplicitCastExpr 0x206961bf910 <col:16> 'char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x206961bf818 <col:16> 'char *' lvalue Var 0x206961bf300 'ret' 'char *'
|   |   | |-ImplicitCastExpr 0x206961bf958 <col:21> 'const void *' <BitCast>
|   |   | | `-ImplicitCastExpr 0x206961bf940 <col:21> 'const char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x206961bf838 <col:21> 'const char *' lvalue ParmVar 0x206961bee60 'str' 'const char *'
|   |   | `-ImplicitCastExpr 0x206961bf970 <col:26> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x206961bf858 <col:26> 'size_t':'unsigned long long' lvalue Var 0x206961bf268 'maxlen' 'size_t':'unsigned long long'
|   |   `-BinaryOperator 0x206961bfa48 <line:55:9, col:23> 'char' '='
|   |     |-ArraySubscriptExpr 0x206961bf9f8 <col:9, col:19> 'char' lvalue
|   |     | |-ImplicitCastExpr 0x206961bf9c8 <col:9> 'char *' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x206961bf988 <col:9> 'char *' lvalue Var 0x206961bf300 'ret' 'char *'
|   |     | `-ImplicitCastExpr 0x206961bf9e0 <col:13> 'size_t':'unsigned long long' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x206961bf9a8 <col:13> 'size_t':'unsigned long long' lvalue Var 0x206961bf268 'maxlen' 'size_t':'unsigned long long'
|   |     `-ImplicitCastExpr 0x206961bfa30 <col:23> 'char' <IntegralCast>
|   |       `-CharacterLiteral 0x206961bfa18 <col:23> 'int' 0
|   `-ReturnStmt 0x206961bfad8 <line:57:5, col:12>
|     `-ImplicitCastExpr 0x206961bfac0 <col:12> 'char *' <LValueToRValue>
|       `-DeclRefExpr 0x206961bfaa0 <col:12> 'char *' lvalue Var 0x206961bf300 'ret' 'char *'
|-FunctionDecl 0x206961bde50 <line:60:1, line:73:1> line:60:7 CRYPTO_memdup 'void *(const void *, size_t, const char *, int)'
| |-ParmVarDecl 0x206961bfb40 <col:21, col:33> col:33 used data 'const void *'
| |-ParmVarDecl 0x206961bfbb8 <col:39, col:46> col:46 used siz 'size_t':'unsigned long long'
| |-ParmVarDecl 0x206961bfc38 <col:51, col:63> col:63 used file 'const char *'
| |-ParmVarDecl 0x206961bfcb8 <col:69, col:73> col:73 used line 'int'
| `-CompoundStmt 0x206961be4e0 <line:61:1, line:73:1>
|   |-DeclStmt 0x206961bdfa8 <line:62:5, col:14>
|   | `-VarDecl 0x206961bdf40 <col:5, col:11> col:11 used ret 'void *'
|   |-BinaryOperator 0x206961be1e0 <line:67:5, col:40> 'void *' '='
|   | |-DeclRefExpr 0x206961be078 <col:5> 'void *' lvalue Var 0x206961bdf40 'ret' 'void *'
|   | `-ImplicitCastExpr 0x206961be1c8 <col:11, col:40> 'void *' <IntegralToPointer>
|   |   `-CallExpr 0x206961be148 <col:11, col:40> 'int'
|   |     |-ImplicitCastExpr 0x206961be130 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x206961be0b0 <col:11> 'int ()' Function 0x206961c1720 'CRYPTO_malloc' 'int ()'
|   |     |-ImplicitCastExpr 0x206961be180 <col:25> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x206961be0d0 <col:25> 'size_t':'unsigned long long' lvalue ParmVar 0x206961bfbb8 'siz' 'size_t':'unsigned long long'
|   |     |-ImplicitCastExpr 0x206961be198 <col:30> 'const char *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x206961be0f0 <col:30> 'const char *' lvalue ParmVar 0x206961bfc38 'file' 'const char *'
|   |     `-ImplicitCastExpr 0x206961be1b0 <col:36> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x206961be110 <col:36> 'int' lvalue ParmVar 0x206961bfcb8 'line' 'int'
|   |-IfStmt 0x206961be358 <line:68:5, line:71:5>
|   | |-OpaqueValueExpr 0x206961be340 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x206961be330 <line:68:22, line:71:5>
|   `-ReturnStmt 0x206961be4d0 <line:72:5, col:33>
|     `-CallExpr 0x206961be450 <col:12, col:33> 'void *'
|       |-ImplicitCastExpr 0x206961be438 <col:12> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x206961be370 <col:12> 'void *(void *, const void *, unsigned long long)' Function 0x206961c19d0 'memcpy' 'void *(void *, const void *, unsigned long long)'
|       |-ImplicitCastExpr 0x206961be488 <col:19> 'void *' <LValueToRValue>
|       | `-DeclRefExpr 0x206961be390 <col:19> 'void *' lvalue Var 0x206961bdf40 'ret' 'void *'
|       |-ImplicitCastExpr 0x206961be4a0 <col:24> 'const void *' <LValueToRValue>
|       | `-DeclRefExpr 0x206961be3b0 <col:24> 'const void *' lvalue ParmVar 0x206961bfb40 'data' 'const void *'
|       `-ImplicitCastExpr 0x206961be4b8 <col:30> 'size_t':'unsigned long long' <LValueToRValue>
|         `-DeclRefExpr 0x206961be3d0 <col:30> 'size_t':'unsigned long long' lvalue ParmVar 0x206961bfbb8 'siz' 'size_t':'unsigned long long'
|-FunctionDecl 0x206961be6e8 <line:75:1, line:82:1> line:75:8 invalid OPENSSL_strnlen 'size_t (const char *, size_t)'
| |-ParmVarDecl 0x206961be528 <col:24, col:36> col:36 used str 'const char *'
| |-ParmVarDecl 0x206961be5a0 <col:41, col:48> col:48 used maxlen 'size_t':'unsigned long long'
| `-CompoundStmt 0x206961beba0 <line:76:1, line:82:1>
|   |-DeclStmt 0x206961be830 <line:77:5, col:18>
|   | `-VarDecl 0x206961be7c8 <col:5, col:17> col:17 used p 'const char *'
|   |-ForStmt 0x206961beab0 <line:79:5, col:53>
|   | |-BinaryOperator 0x206961be8b8 <col:10, col:14> 'const char *' '='
|   | | |-DeclRefExpr 0x206961be848 <col:10> 'const char *' lvalue Var 0x206961be7c8 'p' 'const char *'
|   | | `-ImplicitCastExpr 0x206961be8a0 <col:14> 'const char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x206961be880 <col:14> 'const char *' lvalue ParmVar 0x206961be528 'str' 'const char *'
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x206961bea50 <col:19, col:42> 'int' '&&'
|   | | |-BinaryOperator 0x206961be950 <col:19, col:31> 'int' '!='
|   | | | |-UnaryOperator 0x206961be8f8 <col:19, col:25> 'size_t':'unsigned long long' postfix '--'
|   | | | | `-DeclRefExpr 0x206961be8d8 <col:19> 'size_t':'unsigned long long' lvalue ParmVar 0x206961be5a0 'maxlen' 'size_t':'unsigned long long'
|   | | | `-ImplicitCastExpr 0x206961be938 <col:31> 'unsigned long long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x206961be910 <col:31> 'int' 0
|   | | `-BinaryOperator 0x206961bea30 <col:36, col:42> 'int' '!='
|   | |   |-ImplicitCastExpr 0x206961bea18 <col:36, col:37> 'int' <IntegralCast>
|   | |   | `-ImplicitCastExpr 0x206961bea00 <col:36, col:37> 'char' <LValueToRValue>
|   | |   |   `-UnaryOperator 0x206961be9d0 <col:36, col:37> 'const char' lvalue prefix '*' cannot overflow
|   | |   |     `-ImplicitCastExpr 0x206961be9b8 <col:37> 'const char *' <LValueToRValue>
|   | |   |       `-DeclRefExpr 0x206961be998 <col:37> 'const char *' lvalue Var 0x206961be7c8 'p' 'const char *'
|   | |   `-CharacterLiteral 0x206961be9e8 <col:42> 'int' 0
|   | |-UnaryOperator 0x206961bea90 <col:48, col:50> 'const char *' prefix '++'
|   | | `-DeclRefExpr 0x206961bea70 <col:50> 'const char *' lvalue Var 0x206961be7c8 'p' 'const char *'
|   | `-NullStmt 0x206961beaa8 <col:53>
|   `-ReturnStmt 0x206961beb90 <line:81:5, col:16>
|     `-ImplicitCastExpr 0x206961beb78 <col:12, col:16> 'size_t':'unsigned long long' <IntegralCast>
|       `-BinaryOperator 0x206961beb58 <col:12, col:16> 'long long' '-'
|         |-ImplicitCastExpr 0x206961beb28 <col:12> 'const char *' <LValueToRValue>
|         | `-DeclRefExpr 0x206961beae8 <col:12> 'const char *' lvalue Var 0x206961be7c8 'p' 'const char *'
|         `-ImplicitCastExpr 0x206961beb40 <col:16> 'const char *' <LValueToRValue>
|           `-DeclRefExpr 0x206961beb08 <col:16> 'const char *' lvalue ParmVar 0x206961be528 'str' 'const char *'
|-FunctionDecl 0x206961b9e10 <line:84:1, line:94:1> line:84:8 used OPENSSL_strlcpy 'size_t (char *, const char *, size_t)'
| |-ParmVarDecl 0x206961bebe0 <col:24, col:30> col:30 used dst 'char *'
| |-ParmVarDecl 0x206961bec60 <col:35, col:47> col:47 used src 'const char *'
| |-ParmVarDecl 0x206961becd8 <col:52, col:59> col:59 used size 'size_t':'unsigned long long'
| `-CompoundStmt 0x206961ba4a8 <line:85:1, line:94:1>
|   |-DeclStmt 0x206961b9f98 <line:86:5, col:17>
|   | `-VarDecl 0x206961b9ef0 <col:5, col:16> col:12 used l 'size_t':'unsigned long long' cinit
|   |   `-ImplicitCastExpr 0x206961b9f80 <col:16> 'size_t':'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x206961b9f58 <col:16> 'int' 0
|   |-ForStmt 0x206961ba268 <line:87:5, line:90:5>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x206961ba0c8 <line:87:12, col:25> 'int' '&&'
|   | | |-BinaryOperator 0x206961ba028 <col:12, col:19> 'int' '>'
|   | | | |-ImplicitCastExpr 0x206961b9ff8 <col:12> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x206961b9fb0 <col:12> 'size_t':'unsigned long long' lvalue ParmVar 0x206961becd8 'size' 'size_t':'unsigned long long'
|   | | | `-ImplicitCastExpr 0x206961ba010 <col:19> 'unsigned long long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x206961b9fd0 <col:19> 'int' 1
|   | | `-ImplicitCastExpr 0x206961ba0b0 <col:24, col:25> 'int' <IntegralCast>
|   | |   `-ImplicitCastExpr 0x206961ba098 <col:24, col:25> 'char' <LValueToRValue>
|   | |     `-UnaryOperator 0x206961ba080 <col:24, col:25> 'const char' lvalue prefix '*' cannot overflow
|   | |       `-ImplicitCastExpr 0x206961ba068 <col:25> 'const char *' <LValueToRValue>
|   | |         `-DeclRefExpr 0x206961ba048 <col:25> 'const char *' lvalue ParmVar 0x206961bec60 'src' 'const char *'
|   | |-UnaryOperator 0x206961ba108 <col:30, col:34> 'size_t':'unsigned long long' postfix '--'
|   | | `-DeclRefExpr 0x206961ba0e8 <col:30> 'size_t':'unsigned long long' lvalue ParmVar 0x206961becd8 'size' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x206961ba248 <col:38, line:90:5>
|   |   |-BinaryOperator 0x206961ba1d8 <line:88:9, col:22> 'char' '='
|   |   | |-UnaryOperator 0x206961ba158 <col:9, col:13> 'char' lvalue prefix '*' cannot overflow
|   |   | | `-UnaryOperator 0x206961ba140 <col:10, col:13> 'char *' postfix '++'
|   |   | |   `-DeclRefExpr 0x206961ba120 <col:10> 'char *' lvalue ParmVar 0x206961bebe0 'dst' 'char *'
|   |   | `-ImplicitCastExpr 0x206961ba1c0 <col:18, col:22> 'char' <LValueToRValue>
|   |   |   `-UnaryOperator 0x206961ba1a8 <col:18, col:22> 'const char' lvalue prefix '*' cannot overflow
|   |   |     `-UnaryOperator 0x206961ba190 <col:19, col:22> 'const char *' postfix '++'
|   |   |       `-DeclRefExpr 0x206961ba170 <col:19> 'const char *' lvalue ParmVar 0x206961bec60 'src' 'const char *'
|   |   `-UnaryOperator 0x206961ba230 <line:89:9, col:10> 'size_t':'unsigned long long' postfix '++'
|   |     `-DeclRefExpr 0x206961ba1f8 <col:9> 'size_t':'unsigned long long' lvalue Var 0x206961b9ef0 'l' 'size_t':'unsigned long long'
|   |-IfStmt 0x206961ba378 <line:91:5, line:92:16>
|   | |-ImplicitCastExpr 0x206961ba2c0 <line:91:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | `-DeclRefExpr 0x206961ba2a0 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x206961becd8 'size' 'size_t':'unsigned long long'
|   | `-BinaryOperator 0x206961ba358 <line:92:9, col:16> 'char' '='
|   |   |-UnaryOperator 0x206961ba310 <col:9, col:10> 'char' lvalue prefix '*' cannot overflow
|   |   | `-ImplicitCastExpr 0x206961ba2f8 <col:10> 'char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x206961ba2d8 <col:10> 'char *' lvalue ParmVar 0x206961bebe0 'dst' 'char *'
|   |   `-ImplicitCastExpr 0x206961ba340 <col:16> 'char' <IntegralCast>
|   |     `-CharacterLiteral 0x206961ba328 <col:16> 'int' 0
|   `-ReturnStmt 0x206961ba498 <line:93:5, col:26>
|     `-BinaryOperator 0x206961ba478 <col:12, col:26> 'unsigned long long' '+'
|       |-ImplicitCastExpr 0x206961ba460 <col:12> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x206961ba390 <col:12> 'size_t':'unsigned long long' lvalue Var 0x206961b9ef0 'l' 'size_t':'unsigned long long'
|       `-CallExpr 0x206961ba420 <col:16, col:26> 'unsigned long long'
|         |-ImplicitCastExpr 0x206961ba408 <col:16> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x206961ba3b0 <col:16> 'unsigned long long (const char *)' Function 0x206961c1410 'strlen' 'unsigned long long (const char *)'
|         `-ImplicitCastExpr 0x206961ba448 <col:23> 'const char *' <LValueToRValue>
|           `-DeclRefExpr 0x206961ba3d0 <col:23> 'const char *' lvalue ParmVar 0x206961bec60 'src' 'const char *'
|-FunctionDecl 0x206961ba6d0 <line:96:1, line:102:1> line:96:8 OPENSSL_strlcat 'size_t (char *, const char *, size_t)'
| |-ParmVarDecl 0x206961ba4f0 <col:24, col:30> col:30 used dst 'char *'
| |-ParmVarDecl 0x206961ba570 <col:35, col:47> col:47 used src 'const char *'
| |-ParmVarDecl 0x206961ba5e8 <col:52, col:59> col:59 used size 'size_t':'unsigned long long'
| `-CompoundStmt 0x206961bac98 <line:97:1, line:102:1>
|   |-DeclStmt 0x206961ba858 <line:98:5, col:17>
|   | `-VarDecl 0x206961ba7b0 <col:5, col:16> col:12 used l 'size_t':'unsigned long long' cinit
|   |   `-ImplicitCastExpr 0x206961ba840 <col:16> 'size_t':'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x206961ba818 <col:16> 'int' 0
|   |-ForStmt 0x206961baa88 <line:99:5, line:100:10>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x206961ba988 <line:99:12, col:25> 'int' '&&'
|   | | |-BinaryOperator 0x206961ba8e8 <col:12, col:19> 'int' '>'
|   | | | |-ImplicitCastExpr 0x206961ba8b8 <col:12> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x206961ba870 <col:12> 'size_t':'unsigned long long' lvalue ParmVar 0x206961ba5e8 'size' 'size_t':'unsigned long long'
|   | | | `-ImplicitCastExpr 0x206961ba8d0 <col:19> 'unsigned long long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x206961ba890 <col:19> 'int' 0
|   | | `-ImplicitCastExpr 0x206961ba970 <col:24, col:25> 'int' <IntegralCast>
|   | |   `-ImplicitCastExpr 0x206961ba958 <col:24, col:25> 'char' <LValueToRValue>
|   | |     `-UnaryOperator 0x206961ba940 <col:24, col:25> 'char' lvalue prefix '*' cannot overflow
|   | |       `-ImplicitCastExpr 0x206961ba928 <col:25> 'char *' <LValueToRValue>
|   | |         `-DeclRefExpr 0x206961ba908 <col:25> 'char *' lvalue ParmVar 0x206961ba4f0 'dst' 'char *'
|   | |-BinaryOperator 0x206961baa18 <col:30, col:41> 'char *' ','
|   | | |-UnaryOperator 0x206961ba9c8 <col:30, col:34> 'size_t':'unsigned long long' postfix '--'
|   | | | `-DeclRefExpr 0x206961ba9a8 <col:30> 'size_t':'unsigned long long' lvalue ParmVar 0x206961ba5e8 'size' 'size_t':'unsigned long long'
|   | | `-UnaryOperator 0x206961baa00 <col:38, col:41> 'char *' postfix '++'
|   | |   `-DeclRefExpr 0x206961ba9e0 <col:38> 'char *' lvalue ParmVar 0x206961ba4f0 'dst' 'char *'
|   | `-UnaryOperator 0x206961baa70 <line:100:9, col:10> 'size_t':'unsigned long long' postfix '++'
|   |   `-DeclRefExpr 0x206961baa38 <col:9> 'size_t':'unsigned long long' lvalue Var 0x206961ba7b0 'l' 'size_t':'unsigned long long'
|   `-ReturnStmt 0x206961bac88 <line:101:5, col:46>
|     `-BinaryOperator 0x206961bac68 <col:12, col:46> 'unsigned long long' '+'
|       |-ImplicitCastExpr 0x206961bac50 <col:12> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x206961baac0 <col:12> 'size_t':'unsigned long long' lvalue Var 0x206961ba7b0 'l' 'size_t':'unsigned long long'
|       `-CallExpr 0x206961babd0 <col:16, col:46> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x206961babb8 <col:16> 'size_t (*)(char *, const char *, size_t)' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x206961baae0 <col:16> 'size_t (char *, const char *, size_t)' Function 0x206961b9e10 'OPENSSL_strlcpy' 'size_t (char *, const char *, size_t)'
|         |-ImplicitCastExpr 0x206961bac08 <col:32> 'char *' <LValueToRValue>
|         | `-DeclRefExpr 0x206961bab00 <col:32> 'char *' lvalue ParmVar 0x206961ba4f0 'dst' 'char *'
|         |-ImplicitCastExpr 0x206961bac20 <col:37> 'const char *' <LValueToRValue>
|         | `-DeclRefExpr 0x206961bab20 <col:37> 'const char *' lvalue ParmVar 0x206961ba570 'src' 'const char *'
|         `-ImplicitCastExpr 0x206961bac38 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x206961bab40 <col:42> 'size_t':'unsigned long long' lvalue ParmVar 0x206961ba5e8 'size' 'size_t':'unsigned long long'
|-FunctionDecl 0x206961c1e90 <line:104:1, line:145:1> line:104:5 used OPENSSL_hexchar2int 'int (unsigned char)'
| |-ParmVarDecl 0x206961bacd8 <col:25, col:39> col:39 used c 'unsigned char'
| `-CompoundStmt 0x206961c2bb0 <line:105:1, line:145:1>
|   |-SwitchStmt 0x206961c1fa0 <line:110:5, line:143:5>
|   | |-ImplicitCastExpr 0x206961c1f88 <line:110:13> 'int' <IntegralCast>
|   | | `-ImplicitCastExpr 0x206961c1f70 <col:13> 'unsigned char' <LValueToRValue>
|   | |   `-DeclRefExpr 0x206961c1f50 <col:13> 'unsigned char' lvalue ParmVar 0x206961bacd8 'c' 'unsigned char'
|   | `-CompoundStmt 0x206961c2ad0 <col:16, line:143:5>
|   |   |-CaseStmt 0x206961c1ff0 <line:111:5, line:112:16>
|   |   | |-ConstantExpr 0x206961c1fd8 <line:111:10> 'int'
|   |   | | `-CharacterLiteral 0x206961c1fc0 <col:10> 'int' 48
|   |   | `-ReturnStmt 0x206961c2040 <line:112:9, col:16>
|   |   |   `-IntegerLiteral 0x206961c2018 <col:16> 'int' 0
|   |   |-CaseStmt 0x206961c2080 <line:113:5, line:114:16>
|   |   | |-ConstantExpr 0x206961c2068 <line:113:10> 'int'
|   |   | | `-CharacterLiteral 0x206961c2050 <col:10> 'int' 49
|   |   | `-ReturnStmt 0x206961c20d0 <line:114:9, col:16>
|   |   |   `-IntegerLiteral 0x206961c20a8 <col:16> 'int' 1
|   |   |-CaseStmt 0x206961c2110 <line:115:5, line:116:16>
|   |   | |-ConstantExpr 0x206961c20f8 <line:115:10> 'int'
|   |   | | `-CharacterLiteral 0x206961c20e0 <col:10> 'int' 50
|   |   | `-ReturnStmt 0x206961c2160 <line:116:9, col:16>
|   |   |   `-IntegerLiteral 0x206961c2138 <col:16> 'int' 2
|   |   |-CaseStmt 0x206961c21a0 <line:117:5, line:118:16>
|   |   | |-ConstantExpr 0x206961c2188 <line:117:10> 'int'
|   |   | | `-CharacterLiteral 0x206961c2170 <col:10> 'int' 51
|   |   | `-ReturnStmt 0x206961c21f0 <line:118:9, col:16>
|   |   |   `-IntegerLiteral 0x206961c21c8 <col:16> 'int' 3
|   |   |-CaseStmt 0x206961c2230 <line:119:5, line:120:18>
|   |   | |-ConstantExpr 0x206961c2218 <line:119:10> 'int'
|   |   | | `-CharacterLiteral 0x206961c2200 <col:10> 'int' 52
|   |   | `-ReturnStmt 0x206961c2280 <line:120:11, col:18>
|   |   |   `-IntegerLiteral 0x206961c2258 <col:18> 'int' 4
|   |   |-CaseStmt 0x206961c22c0 <line:121:5, line:122:18>
|   |   | |-ConstantExpr 0x206961c22a8 <line:121:10> 'int'
|   |   | | `-CharacterLiteral 0x206961c2290 <col:10> 'int' 53
|   |   | `-ReturnStmt 0x206961c2310 <line:122:11, col:18>
|   |   |   `-IntegerLiteral 0x206961c22e8 <col:18> 'int' 5
|   |   |-CaseStmt 0x206961c2350 <line:123:5, line:124:18>
|   |   | |-ConstantExpr 0x206961c2338 <line:123:10> 'int'
|   |   | | `-CharacterLiteral 0x206961c2320 <col:10> 'int' 54
|   |   | `-ReturnStmt 0x206961c23a0 <line:124:11, col:18>
|   |   |   `-IntegerLiteral 0x206961c2378 <col:18> 'int' 6
|   |   |-CaseStmt 0x206961c23e0 <line:125:5, line:126:18>
|   |   | |-ConstantExpr 0x206961c23c8 <line:125:10> 'int'
|   |   | | `-CharacterLiteral 0x206961c23b0 <col:10> 'int' 55
|   |   | `-ReturnStmt 0x206961c2430 <line:126:11, col:18>
|   |   |   `-IntegerLiteral 0x206961c2408 <col:18> 'int' 7
|   |   |-CaseStmt 0x206961c2470 <line:127:5, line:128:18>
|   |   | |-ConstantExpr 0x206961c2458 <line:127:10> 'int'
|   |   | | `-CharacterLiteral 0x206961c2440 <col:10> 'int' 56
|   |   | `-ReturnStmt 0x206961c24c0 <line:128:11, col:18>
|   |   |   `-IntegerLiteral 0x206961c2498 <col:18> 'int' 8
|   |   |-CaseStmt 0x206961c2500 <line:129:5, line:130:18>
|   |   | |-ConstantExpr 0x206961c24e8 <line:129:10> 'int'
|   |   | | `-CharacterLiteral 0x206961c24d0 <col:10> 'int' 57
|   |   | `-ReturnStmt 0x206961c2550 <line:130:11, col:18>
|   |   |   `-IntegerLiteral 0x206961c2528 <col:18> 'int' 9
|   |   |-CaseStmt 0x206961c2590 <line:131:5, line:132:18>
|   |   | |-ConstantExpr 0x206961c2578 <line:131:10> 'int'
|   |   | | `-CharacterLiteral 0x206961c2560 <col:10> 'int' 97
|   |   | `-CaseStmt 0x206961c25e8 <col:15, line:132:18>
|   |   |   |-ConstantExpr 0x206961c25d0 <line:131:20> 'int'
|   |   |   | `-CharacterLiteral 0x206961c25b8 <col:20> 'int' 65
|   |   |   `-ReturnStmt 0x206961c2638 <line:132:11, col:18>
|   |   |     `-IntegerLiteral 0x206961c2610 <col:18> 'int' 10
|   |   |-CaseStmt 0x206961c2678 <line:133:5, line:134:18>
|   |   | |-ConstantExpr 0x206961c2660 <line:133:10> 'int'
|   |   | | `-CharacterLiteral 0x206961c2648 <col:10> 'int' 98
|   |   | `-CaseStmt 0x206961c26d0 <col:15, line:134:18>
|   |   |   |-ConstantExpr 0x206961c26b8 <line:133:20> 'int'
|   |   |   | `-CharacterLiteral 0x206961c26a0 <col:20> 'int' 66
|   |   |   `-ReturnStmt 0x206961c2720 <line:134:11, col:18>
|   |   |     `-IntegerLiteral 0x206961c26f8 <col:18> 'int' 11
|   |   |-CaseStmt 0x206961c2760 <line:135:5, line:136:18>
|   |   | |-ConstantExpr 0x206961c2748 <line:135:10> 'int'
|   |   | | `-CharacterLiteral 0x206961c2730 <col:10> 'int' 99
|   |   | `-CaseStmt 0x206961c27b8 <col:15, line:136:18>
|   |   |   |-ConstantExpr 0x206961c27a0 <line:135:20> 'int'
|   |   |   | `-CharacterLiteral 0x206961c2788 <col:20> 'int' 67
|   |   |   `-ReturnStmt 0x206961c2808 <line:136:11, col:18>
|   |   |     `-IntegerLiteral 0x206961c27e0 <col:18> 'int' 12
|   |   |-CaseStmt 0x206961c2848 <line:137:5, line:138:18>
|   |   | |-ConstantExpr 0x206961c2830 <line:137:10> 'int'
|   |   | | `-CharacterLiteral 0x206961c2818 <col:10> 'int' 100
|   |   | `-CaseStmt 0x206961c28a0 <col:15, line:138:18>
|   |   |   |-ConstantExpr 0x206961c2888 <line:137:20> 'int'
|   |   |   | `-CharacterLiteral 0x206961c2870 <col:20> 'int' 68
|   |   |   `-ReturnStmt 0x206961c28f0 <line:138:11, col:18>
|   |   |     `-IntegerLiteral 0x206961c28c8 <col:18> 'int' 13
|   |   |-CaseStmt 0x206961c2930 <line:139:5, line:140:18>
|   |   | |-ConstantExpr 0x206961c2918 <line:139:10> 'int'
|   |   | | `-CharacterLiteral 0x206961c2900 <col:10> 'int' 101
|   |   | `-CaseStmt 0x206961c2988 <col:15, line:140:18>
|   |   |   |-ConstantExpr 0x206961c2970 <line:139:20> 'int'
|   |   |   | `-CharacterLiteral 0x206961c2958 <col:20> 'int' 69
|   |   |   `-ReturnStmt 0x206961c29d8 <line:140:11, col:18>
|   |   |     `-IntegerLiteral 0x206961c29b0 <col:18> 'int' 14
|   |   `-CaseStmt 0x206961c2a18 <line:141:5, line:142:18>
|   |     |-ConstantExpr 0x206961c2a00 <line:141:10> 'int'
|   |     | `-CharacterLiteral 0x206961c29e8 <col:10> 'int' 102
|   |     `-CaseStmt 0x206961c2a70 <col:15, line:142:18>
|   |       |-ConstantExpr 0x206961c2a58 <line:141:20> 'int'
|   |       | `-CharacterLiteral 0x206961c2a40 <col:20> 'int' 70
|   |       `-ReturnStmt 0x206961c2ac0 <line:142:11, col:18>
|   |         `-IntegerLiteral 0x206961c2a98 <col:18> 'int' 15
|   `-ReturnStmt 0x206961c2ba0 <line:144:5, col:13>
|     `-UnaryOperator 0x206961c2b88 <col:12, col:13> 'int' prefix '-'
|       `-IntegerLiteral 0x206961c2b60 <col:13> 'int' 1
|-FunctionDecl 0x206961c2dd0 <line:150:1, line:187:1> line:150:16 OPENSSL_hexstr2buf 'unsigned char *(const char *, long *)'
| |-ParmVarDecl 0x206961c2be8 <col:35, col:47> col:47 used str 'const char *'
| |-ParmVarDecl 0x206961c2c90 <col:52, col:58> col:58 used len 'long *'
| `-CompoundStmt 0x206961bc548 <line:151:1, line:187:1>
|   |-DeclStmt 0x206961baf50 <line:152:5, col:30>
|   | |-VarDecl 0x206961bae50 <col:5, col:20> col:20 used hexbuf 'unsigned char *'
|   | `-VarDecl 0x206961baed0 <col:5, col:29> col:29 used q 'unsigned char *'
|   |-DeclStmt 0x206961bb080 <line:153:5, col:25>
|   | |-VarDecl 0x206961baf80 <col:5, col:19> col:19 used ch 'unsigned char'
|   | `-VarDecl 0x206961bb000 <col:5, col:23> col:23 used cl 'unsigned char'
|   |-DeclStmt 0x206961bb1b0 <line:154:5, col:17>
|   | |-VarDecl 0x206961bb0b0 <col:5, col:9> col:9 used chi 'int'
|   | `-VarDecl 0x206961bb130 <col:5, col:14> col:14 used cli 'int'
|   |-DeclStmt 0x206961bb248 <line:155:5, col:27>
|   | `-VarDecl 0x206961bb1e0 <col:5, col:26> col:26 used p 'const unsigned char *'
|   |-DeclStmt 0x206961bb2d8 <line:156:5, col:13>
|   | `-VarDecl 0x206961bb270 <col:5, col:12> col:12 used s 'size_t':'unsigned long long'
|   |-BinaryOperator 0x206961bb3d8 <line:158:5, col:19> 'size_t':'unsigned long long' '='
|   | |-DeclRefExpr 0x206961bb2f0 <col:5> 'size_t':'unsigned long long' lvalue Var 0x206961bb270 's' 'size_t':'unsigned long long'
|   | `-CallExpr 0x206961bb398 <col:9, col:19> 'unsigned long long'
|   |   |-ImplicitCastExpr 0x206961bb380 <col:9> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x206961bb328 <col:9> 'unsigned long long (const char *)' Function 0x206961c1410 'strlen' 'unsigned long long (const char *)'
|   |   `-ImplicitCastExpr 0x206961bb3c0 <col:16> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x206961bb348 <col:16> 'const char *' lvalue ParmVar 0x206961c2be8 'str' 'const char *'
|   |-IfStmt 0x206961bb6a0 <line:159:5, line:162:5>
|   | |-OpaqueValueExpr 0x206961bb688 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x206961bb678 <line:159:52, line:162:5>
|   |-ForStmt 0x206961bc360 <line:163:5, line:182:5>
|   | |-BinaryOperator 0x206961bb818 <line:163:10, col:46> 'unsigned char *' ','
|   | | |-BinaryOperator 0x206961bb768 <col:10, col:37> 'const unsigned char *' '='
|   | | | |-DeclRefExpr 0x206961bb6b8 <col:10> 'const unsigned char *' lvalue Var 0x206961bb1e0 'p' 'const unsigned char *'
|   | | | `-CStyleCastExpr 0x206961bb740 <col:14, col:37> 'const unsigned char *' <BitCast>
|   | | |   `-ImplicitCastExpr 0x206961bb728 <col:37> 'const char *' <LValueToRValue> part_of_explicit_cast
|   | | |     `-DeclRefExpr 0x206961bb6f0 <col:37> 'const char *' lvalue ParmVar 0x206961c2be8 'str' 'const char *'
|   | | `-BinaryOperator 0x206961bb7f8 <col:42, col:46> 'unsigned char *' '='
|   | |   |-DeclRefExpr 0x206961bb788 <col:42> 'unsigned char *' lvalue Var 0x206961baed0 'q' 'unsigned char *'
|   | |   `-ImplicitCastExpr 0x206961bb7e0 <col:46> 'unsigned char *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x206961bb7c0 <col:46> 'unsigned char *' lvalue Var 0x206961bae50 'hexbuf' 'unsigned char *'
|   | |-<<<NULL>>>
|   | |-ImplicitCastExpr 0x206961bb888 <col:54, col:55> 'unsigned char' <LValueToRValue>
|   | | `-UnaryOperator 0x206961bb870 <col:54, col:55> 'const unsigned char' lvalue prefix '*' cannot overflow
|   | |   `-ImplicitCastExpr 0x206961bb858 <col:55> 'const unsigned char *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x206961bb838 <col:55> 'const unsigned char *' lvalue Var 0x206961bb1e0 'p' 'const unsigned char *'
|   | |-<<<NULL>>>
|   | `-CompoundStmt 0x206961bc310 <col:60, line:182:5>
|   |   |-BinaryOperator 0x206961bb940 <line:164:9, col:16> 'unsigned char' '='
|   |   | |-DeclRefExpr 0x206961bb8a0 <col:9> 'unsigned char' lvalue Var 0x206961baf80 'ch' 'unsigned char'
|   |   | `-ImplicitCastExpr 0x206961bb928 <col:14, col:16> 'unsigned char' <LValueToRValue>
|   |   |   `-UnaryOperator 0x206961bb910 <col:14, col:16> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   |     `-UnaryOperator 0x206961bb8f8 <col:15, col:16> 'const unsigned char *' postfix '++'
|   |   |       `-DeclRefExpr 0x206961bb8d8 <col:15> 'const unsigned char *' lvalue Var 0x206961bb1e0 'p' 'const unsigned char *'
|   |   |-IfStmt 0x206961bb9f0 <line:165:9, line:166:13>
|   |   | |-BinaryOperator 0x206961bb9c8 <line:165:13, col:19> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x206961bb9b0 <col:13> 'int' <IntegralCast>
|   |   | | | `-ImplicitCastExpr 0x206961bb998 <col:13> 'unsigned char' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x206961bb960 <col:13> 'unsigned char' lvalue Var 0x206961baf80 'ch' 'unsigned char'
|   |   | | `-CharacterLiteral 0x206961bb980 <col:19> 'int' 58
|   |   | `-ContinueStmt 0x206961bb9e8 <line:166:13>
|   |   |-BinaryOperator 0x206961bbaa8 <line:167:9, col:16> 'unsigned char' '='
|   |   | |-DeclRefExpr 0x206961bba08 <col:9> 'unsigned char' lvalue Var 0x206961bb000 'cl' 'unsigned char'
|   |   | `-ImplicitCastExpr 0x206961bba90 <col:14, col:16> 'unsigned char' <LValueToRValue>
|   |   |   `-UnaryOperator 0x206961bba78 <col:14, col:16> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   |     `-UnaryOperator 0x206961bba60 <col:15, col:16> 'const unsigned char *' postfix '++'
|   |   |       `-DeclRefExpr 0x206961bba40 <col:15> 'const unsigned char *' lvalue Var 0x206961bb1e0 'p' 'const unsigned char *'
|   |   |-IfStmt 0x206961bbcd8 <line:168:9, line:173:9>
|   |   | |-UnaryOperator 0x206961bbb00 <line:168:13, col:14> 'int' prefix '!' cannot overflow
|   |   | | `-ImplicitCastExpr 0x206961bbae8 <col:14> 'unsigned char' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x206961bbac8 <col:14> 'unsigned char' lvalue Var 0x206961bb000 'cl' 'unsigned char'
|   |   | `-CompoundStmt 0x206961bbcc0 <col:18, line:173:9>
|   |   |   `-CallExpr 0x206961bbc80 <line:171:13, col:32> 'int'
|   |   |     |-ImplicitCastExpr 0x206961bbc68 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x206961bbc28 <col:13> 'int ()' Function 0x206961bbb60 'OPENSSL_free' 'int ()'
|   |   |     `-ImplicitCastExpr 0x206961bbca8 <col:26> 'unsigned char *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x206961bbc48 <col:26> 'unsigned char *' lvalue Var 0x206961bae50 'hexbuf' 'unsigned char *'
|   |   |-BinaryOperator 0x206961bbdf0 <line:174:9, col:37> 'int' '='
|   |   | |-DeclRefExpr 0x206961bbcf0 <col:9> 'int' lvalue Var 0x206961bb130 'cli' 'int'
|   |   | `-CallExpr 0x206961bbdb0 <col:15, col:37> 'int'
|   |   |   |-ImplicitCastExpr 0x206961bbd98 <col:15> 'int (*)(unsigned char)' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x206961bbd28 <col:15> 'int (unsigned char)' Function 0x206961c1e90 'OPENSSL_hexchar2int' 'int (unsigned char)'
|   |   |   `-ImplicitCastExpr 0x206961bbdd8 <col:35> 'unsigned char' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x206961bbd48 <col:35> 'unsigned char' lvalue Var 0x206961bb000 'cl' 'unsigned char'
|   |   |-BinaryOperator 0x206961bbf00 <line:175:9, col:37> 'int' '='
|   |   | |-DeclRefExpr 0x206961bbe30 <col:9> 'int' lvalue Var 0x206961bb0b0 'chi' 'int'
|   |   | `-CallExpr 0x206961bbec0 <col:15, col:37> 'int'
|   |   |   |-ImplicitCastExpr 0x206961bbea8 <col:15> 'int (*)(unsigned char)' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x206961bbe68 <col:15> 'int (unsigned char)' Function 0x206961c1e90 'OPENSSL_hexchar2int' 'int (unsigned char)'
|   |   |   `-ImplicitCastExpr 0x206961bbee8 <col:35> 'unsigned char' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x206961bbe88 <col:35> 'unsigned char' lvalue Var 0x206961baf80 'ch' 'unsigned char'
|   |   |-IfStmt 0x206961bc110 <line:176:9, line:180:9>
|   |   | |-BinaryOperator 0x206961bc020 <line:176:13, col:30> 'int' '||'
|   |   | | |-BinaryOperator 0x206961bbf80 <col:13, col:19> 'int' '<'
|   |   | | | |-ImplicitCastExpr 0x206961bbf68 <col:13> 'int' <LValueToRValue>
|   |   | | | | `-DeclRefExpr 0x206961bbf20 <col:13> 'int' lvalue Var 0x206961bb130 'cli' 'int'
|   |   | | | `-IntegerLiteral 0x206961bbf40 <col:19> 'int' 0
|   |   | | `-BinaryOperator 0x206961bc000 <col:24, col:30> 'int' '<'
|   |   | |   |-ImplicitCastExpr 0x206961bbfe8 <col:24> 'int' <LValueToRValue>
|   |   | |   | `-DeclRefExpr 0x206961bbfa0 <col:24> 'int' lvalue Var 0x206961bb0b0 'chi' 'int'
|   |   | |   `-IntegerLiteral 0x206961bbfc0 <col:30> 'int' 0
|   |   | `-CompoundStmt 0x206961bc0f8 <col:33, line:180:9>
|   |   |   `-CallExpr 0x206961bc098 <line:177:13, col:32> 'int'
|   |   |     |-ImplicitCastExpr 0x206961bc080 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x206961bc040 <col:13> 'int ()' Function 0x206961bbb60 'OPENSSL_free' 'int ()'
|   |   |     `-ImplicitCastExpr 0x206961bc0c0 <col:26> 'unsigned char *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x206961bc060 <col:26> 'unsigned char *' lvalue Var 0x206961bae50 'hexbuf' 'unsigned char *'
|   |   `-BinaryOperator 0x206961bc2f0 <line:181:9, col:48> 'unsigned char' '='
|   |     |-UnaryOperator 0x206961bc160 <col:9, col:11> 'unsigned char' lvalue prefix '*' cannot overflow
|   |     | `-UnaryOperator 0x206961bc148 <col:10, col:11> 'unsigned char *' postfix '++'
|   |     |   `-DeclRefExpr 0x206961bc128 <col:10> 'unsigned char *' lvalue Var 0x206961baed0 'q' 'unsigned char *'
|   |     `-CStyleCastExpr 0x206961bc2c8 <col:16, col:48> 'unsigned char' <IntegralCast>
|   |       `-ParenExpr 0x206961bc2a8 <col:31, col:48> 'int'
|   |         `-BinaryOperator 0x206961bc250 <col:32, col:45> 'int' '|'
|   |           |-ParenExpr 0x206961bc1f8 <col:32, col:41> 'int'
|   |           | `-BinaryOperator 0x206961bc1d8 <col:33, col:40> 'int' '<<'
|   |           |   |-ImplicitCastExpr 0x206961bc1c0 <col:33> 'int' <LValueToRValue>
|   |           |   | `-DeclRefExpr 0x206961bc178 <col:33> 'int' lvalue Var 0x206961bb0b0 'chi' 'int'
|   |           |   `-IntegerLiteral 0x206961bc198 <col:40> 'int' 4
|   |           `-ImplicitCastExpr 0x206961bc238 <col:45> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x206961bc218 <col:45> 'int' lvalue Var 0x206961bb130 'cli' 'int'
|   |-IfStmt 0x206961bc4e8 <line:184:5, line:185:20>
|   | |-ImplicitCastExpr 0x206961bc3b8 <line:184:9> 'long *' <LValueToRValue>
|   | | `-DeclRefExpr 0x206961bc398 <col:9> 'long *' lvalue ParmVar 0x206961c2c90 'len' 'long *'
|   | `-BinaryOperator 0x206961bc4c8 <line:185:9, col:20> 'long' '='
|   |   |-UnaryOperator 0x206961bc408 <col:9, col:10> 'long' lvalue prefix '*' cannot overflow
|   |   | `-ImplicitCastExpr 0x206961bc3f0 <col:10> 'long *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x206961bc3d0 <col:10> 'long *' lvalue ParmVar 0x206961c2c90 'len' 'long *'
|   |   `-ImplicitCastExpr 0x206961bc4b0 <col:16, col:20> 'long' <IntegralCast>
|   |     `-BinaryOperator 0x206961bc490 <col:16, col:20> 'long long' '-'
|   |       |-ImplicitCastExpr 0x206961bc460 <col:16> 'unsigned char *' <LValueToRValue>
|   |       | `-DeclRefExpr 0x206961bc420 <col:16> 'unsigned char *' lvalue Var 0x206961baed0 'q' 'unsigned char *'
|   |       `-ImplicitCastExpr 0x206961bc478 <col:20> 'unsigned char *' <LValueToRValue>
|   |         `-DeclRefExpr 0x206961bc440 <col:20> 'unsigned char *' lvalue Var 0x206961bae50 'hexbuf' 'unsigned char *'
|   `-ReturnStmt 0x206961bc538 <line:186:5, col:12>
|     `-ImplicitCastExpr 0x206961bc520 <col:12> 'unsigned char *' <LValueToRValue>
|       `-DeclRefExpr 0x206961bc500 <col:12> 'unsigned char *' lvalue Var 0x206961bae50 'hexbuf' 'unsigned char *'
|-FunctionDecl 0x206961bc750 <line:194:1, line:222:1> line:194:7 OPENSSL_buf2hexstr 'char *(const unsigned char *, long)'
| |-ParmVarDecl 0x206961bc5c0 <col:26, col:47> col:47 used buffer 'const unsigned char *'
| |-ParmVarDecl 0x206961bc640 <col:55, col:60> col:60 used len 'long'
| `-CompoundStmt 0x206961c8a38 <line:195:1, line:222:1>
|   |-DeclStmt 0x206961bc998 <line:196:5, col:52>
|   | `-VarDecl 0x206961bc898 <col:5, col:34> col:23 used hexdig 'const char [17]' static cinit
|   |   `-StringLiteral 0x206961bc938 <col:34> 'const char [17]' "0123456789ABCDEF"
|   |-DeclStmt 0x206961bcac8 <line:197:5, col:18>
|   | |-VarDecl 0x206961bc9c8 <col:5, col:11> col:11 used tmp 'char *'
|   | `-VarDecl 0x206961bca48 <col:5, col:17> col:17 used q 'char *'
|   |-DeclStmt 0x206961bcb60 <line:198:5, col:27>
|   | `-VarDecl 0x206961bcaf8 <col:5, col:26> col:26 used p 'const unsigned char *'
|   |-DeclStmt 0x206961bcbf8 <line:199:5, col:10>
|   | `-VarDecl 0x206961bcb90 <col:5, col:9> col:9 used i 'int'
|   |-IfStmt 0x206961c7f30 <line:201:5, line:204:5>
|   | |-BinaryOperator 0x206961bcc88 <line:201:9, col:16> 'int' '=='
|   | | |-ImplicitCastExpr 0x206961bcc58 <col:9> 'long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x206961bcc10 <col:9> 'long' lvalue ParmVar 0x206961bc640 'len' 'long'
|   | | `-ImplicitCastExpr 0x206961bcc70 <col:16> 'long' <IntegralCast>
|   | |   `-IntegerLiteral 0x206961bcc30 <col:16> 'int' 0
|   | `-CompoundStmt 0x206961c7f18 <line:202:5, line:204:5>
|   |   `-ReturnStmt 0x206961c7f08 <line:203:9, col:32>
|   |     `-ImplicitCastExpr 0x206961c7ef0 <col:16, col:32> 'char *' <IntegralToPointer>
|   |       `-CallExpr 0x206961bcdf8 <col:16, col:32> 'int'
|   |         |-ImplicitCastExpr 0x206961bcde0 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   |         | `-DeclRefExpr 0x206961bcd98 <col:16> 'int ()' Function 0x206961bccd0 'OPENSSL_zalloc' 'int ()'
|   |         `-IntegerLiteral 0x206961bcdb8 <col:31> 'int' 1
|   |-IfStmt 0x206961c8118 <line:206:5, line:209:5>
|   | |-OpaqueValueExpr 0x206961c8100 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x206961c80f0 <line:206:50, line:209:5>
|   |-BinaryOperator 0x206961c81a0 <line:210:5, col:9> 'char *' '='
|   | |-DeclRefExpr 0x206961c8130 <col:5> 'char *' lvalue Var 0x206961bca48 'q' 'char *'
|   | `-ImplicitCastExpr 0x206961c8188 <col:9> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x206961c8168 <col:9> 'char *' lvalue Var 0x206961bc9c8 'tmp' 'char *'
|   |-ForStmt 0x206961c88c0 <line:211:5, line:215:5>
|   | |-BinaryOperator 0x206961c82d0 <line:211:10, col:21> 'const unsigned char *' ','
|   | | |-BinaryOperator 0x206961c8220 <col:10, col:14> 'int' '='
|   | | | |-DeclRefExpr 0x206961c81c0 <col:10> 'int' lvalue Var 0x206961bcb90 'i' 'int'
|   | | | `-IntegerLiteral 0x206961c81f8 <col:14> 'int' 0
|   | | `-BinaryOperator 0x206961c82b0 <col:17, col:21> 'const unsigned char *' '='
|   | |   |-DeclRefExpr 0x206961c8240 <col:17> 'const unsigned char *' lvalue Var 0x206961bcaf8 'p' 'const unsigned char *'
|   | |   `-ImplicitCastExpr 0x206961c8298 <col:21> 'const unsigned char *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x206961c8278 <col:21> 'const unsigned char *' lvalue ParmVar 0x206961bc5c0 'buffer' 'const unsigned char *'
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x206961c8378 <col:29, col:33> 'int' '<'
|   | | |-ImplicitCastExpr 0x206961c8360 <col:29> 'long' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x206961c8330 <col:29> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x206961c82f0 <col:29> 'int' lvalue Var 0x206961bcb90 'i' 'int'
|   | | `-ImplicitCastExpr 0x206961c8348 <col:33> 'long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x206961c8310 <col:33> 'long' lvalue ParmVar 0x206961bc640 'len' 'long'
|   | |-BinaryOperator 0x206961c8408 <col:38, col:44> 'const unsigned char *' ','
|   | | |-UnaryOperator 0x206961c83b8 <col:38, col:39> 'int' postfix '++'
|   | | | `-DeclRefExpr 0x206961c8398 <col:38> 'int' lvalue Var 0x206961bcb90 'i' 'int'
|   | | `-UnaryOperator 0x206961c83f0 <col:43, col:44> 'const unsigned char *' postfix '++'
|   | |   `-DeclRefExpr 0x206961c83d0 <col:43> 'const unsigned char *' lvalue Var 0x206961bcaf8 'p' 'const unsigned char *'
|   | `-CompoundStmt 0x206961c8898 <col:48, line:215:5>
|   |   |-BinaryOperator 0x206961c8630 <line:212:9, col:38> 'char' '='
|   |   | |-UnaryOperator 0x206961c8460 <col:9, col:11> 'char' lvalue prefix '*' cannot overflow
|   |   | | `-UnaryOperator 0x206961c8448 <col:10, col:11> 'char *' postfix '++'
|   |   | |   `-DeclRefExpr 0x206961c8428 <col:10> 'char *' lvalue Var 0x206961bca48 'q' 'char *'
|   |   | `-ImplicitCastExpr 0x206961c8618 <col:16, col:38> 'char' <LValueToRValue>
|   |   |   `-ArraySubscriptExpr 0x206961c85f8 <col:16, col:38> 'const char' lvalue
|   |   |     |-ImplicitCastExpr 0x206961c85e0 <col:16> 'const char *' <ArrayToPointerDecay>
|   |   |     | `-DeclRefExpr 0x206961c8478 <col:16> 'const char [17]' lvalue Var 0x206961bc898 'hexdig' 'const char [17]'
|   |   |     `-BinaryOperator 0x206961c85c0 <col:23, col:35> 'int' '&'
|   |   |       |-ParenExpr 0x206961c8578 <col:23, col:31> 'int'
|   |   |       | `-BinaryOperator 0x206961c8558 <col:24, col:30> 'int' '>>'
|   |   |       |   |-ImplicitCastExpr 0x206961c8540 <col:24, col:25> 'int' <IntegralCast>
|   |   |       |   | `-ImplicitCastExpr 0x206961c8528 <col:24, col:25> 'unsigned char' <LValueToRValue>
|   |   |       |   |   `-UnaryOperator 0x206961c84e8 <col:24, col:25> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   |       |   |     `-ImplicitCastExpr 0x206961c84d0 <col:25> 'const unsigned char *' <LValueToRValue>
|   |   |       |   |       `-DeclRefExpr 0x206961c84b0 <col:25> 'const unsigned char *' lvalue Var 0x206961bcaf8 'p' 'const unsigned char *'
|   |   |       |   `-IntegerLiteral 0x206961c8500 <col:30> 'int' 4
|   |   |       `-IntegerLiteral 0x206961c8598 <col:35> 'int' 15
|   |   |-BinaryOperator 0x206961c87d8 <line:213:9, col:31> 'char' '='
|   |   | |-UnaryOperator 0x206961c8688 <col:9, col:11> 'char' lvalue prefix '*' cannot overflow
|   |   | | `-UnaryOperator 0x206961c8670 <col:10, col:11> 'char *' postfix '++'
|   |   | |   `-DeclRefExpr 0x206961c8650 <col:10> 'char *' lvalue Var 0x206961bca48 'q' 'char *'
|   |   | `-ImplicitCastExpr 0x206961c87c0 <col:16, col:31> 'char' <LValueToRValue>
|   |   |   `-ArraySubscriptExpr 0x206961c87a0 <col:16, col:31> 'const char' lvalue
|   |   |     |-ImplicitCastExpr 0x206961c8788 <col:16> 'const char *' <ArrayToPointerDecay>
|   |   |     | `-DeclRefExpr 0x206961c86a0 <col:16> 'const char [17]' lvalue Var 0x206961bc898 'hexdig' 'const char [17]'
|   |   |     `-BinaryOperator 0x206961c8768 <col:23, col:28> 'int' '&'
|   |   |       |-ImplicitCastExpr 0x206961c8750 <col:23, col:24> 'int' <IntegralCast>
|   |   |       | `-ImplicitCastExpr 0x206961c8738 <col:23, col:24> 'unsigned char' <LValueToRValue>
|   |   |       |   `-UnaryOperator 0x206961c86f8 <col:23, col:24> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   |       |     `-ImplicitCastExpr 0x206961c86e0 <col:24> 'const unsigned char *' <LValueToRValue>
|   |   |       |       `-DeclRefExpr 0x206961c86c0 <col:24> 'const unsigned char *' lvalue Var 0x206961bcaf8 'p' 'const unsigned char *'
|   |   |       `-IntegerLiteral 0x206961c8710 <col:28> 'int' 15
|   |   `-BinaryOperator 0x206961c8878 <line:214:9, col:16> 'char' '='
|   |     |-UnaryOperator 0x206961c8830 <col:9, col:11> 'char' lvalue prefix '*' cannot overflow
|   |     | `-UnaryOperator 0x206961c8818 <col:10, col:11> 'char *' postfix '++'
|   |     |   `-DeclRefExpr 0x206961c87f8 <col:10> 'char *' lvalue Var 0x206961bca48 'q' 'char *'
|   |     `-ImplicitCastExpr 0x206961c8860 <col:16> 'char' <IntegralCast>
|   |       `-CharacterLiteral 0x206961c8848 <col:16> 'int' 58
|   |-BinaryOperator 0x206961c89d0 <line:216:5, col:13> 'char' '='
|   | |-ArraySubscriptExpr 0x206961c8970 <col:5, col:9> 'char' lvalue
|   | | |-ImplicitCastExpr 0x206961c8958 <col:5> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x206961c88f8 <col:5> 'char *' lvalue Var 0x206961bca48 'q' 'char *'
|   | | `-UnaryOperator 0x206961c8940 <col:7, col:8> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x206961c8918 <col:8> 'int' 1
|   | `-ImplicitCastExpr 0x206961c89b8 <col:13> 'char' <IntegralCast>
|   |   `-IntegerLiteral 0x206961c8990 <col:13> 'int' 0
|   `-ReturnStmt 0x206961c8a28 <line:221:5, col:12>
|     `-ImplicitCastExpr 0x206961c8a10 <col:12> 'char *' <LValueToRValue>
|       `-DeclRefExpr 0x206961c89f0 <col:12> 'char *' lvalue Var 0x206961bc9c8 'tmp' 'char *'
`-FunctionDecl 0x206961c8d20 <line:224:1, line:251:1> line:224:5 openssl_strerror_r 'int (int, char *, size_t)'
  |-ParmVarDecl 0x206961c8ab0 <col:24, col:28> col:28 used errnum 'int'
  |-ParmVarDecl 0x206961c8b30 <col:36, col:42> col:42 used buf 'char *'
  |-ParmVarDecl 0x206961c8ba8 <col:47, col:54> col:54 used buflen 'size_t':'unsigned long long'
  `-CompoundStmt 0x206961c9040 <line:225:1, line:251:1>
    `-ReturnStmt 0x206961c9030 <line:227:5, col:43>
      `-UnaryOperator 0x206961c9018 <col:12, col:43> 'int' prefix '!' cannot overflow
        `-CallExpr 0x206961c8f98 <col:13, col:43> 'int'
          |-ImplicitCastExpr 0x206961c8f80 <col:13> 'int (*)()' <FunctionToPointerDecay>
          | `-DeclRefExpr 0x206961c8f00 <col:13> 'int ()' Function 0x206961c8e18 'strerror_s' 'int ()'
          |-ImplicitCastExpr 0x206961c8fd0 <col:24> 'char *' <LValueToRValue>
          | `-DeclRefExpr 0x206961c8f20 <col:24> 'char *' lvalue ParmVar 0x206961c8b30 'buf' 'char *'
          |-ImplicitCastExpr 0x206961c8fe8 <col:29> 'size_t':'unsigned long long' <LValueToRValue>
          | `-DeclRefExpr 0x206961c8f40 <col:29> 'size_t':'unsigned long long' lvalue ParmVar 0x206961c8ba8 'buflen' 'size_t':'unsigned long long'
          `-ImplicitCastExpr 0x206961c9000 <col:37> 'int' <LValueToRValue>
            `-DeclRefExpr 0x206961c8f60 <col:37> 'int' lvalue ParmVar 0x206961c8ab0 'errnum' 'int'
