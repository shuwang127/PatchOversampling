TranslationUnitDecl 0x296902e9de8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x296902ea680 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x296902ea380 '__int128'
|-TypedefDecl 0x296902ea6f0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x296902ea3a0 'unsigned __int128'
|-TypedefDecl 0x296902eaa28 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x296902ea7e0 'struct __NSConstantString_tag'
|   `-Record 0x296902ea748 '__NSConstantString_tag'
|-TypedefDecl 0x296902eaa98 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x296902e9fc0 'unsigned long long'
|-TypedefDecl 0x296902eab30 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x296902eaaf0 'char *'
|   `-BuiltinType 0x296902e9e80 'char'
|-TypedefDecl 0x296902eaba0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x296902eaaf0 'char *'
|   `-BuiltinType 0x296902e9e80 'char'
|-TypedefDecl 0x296902eac60 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x296902e9fc0 'unsigned long long'
|-TypedefDecl 0x296902eacd0 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x296902eaaf0 'char *'
|   `-BuiltinType 0x296902e9e80 'char'
|-FunctionDecl 0x29691d27430 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x29691d274d0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x29691d27540 <col:21> Implicit
|-FunctionDecl 0x29691d27598 prev 0x29691d27430 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x29691d272c0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x29691d27688 <col:21> Inherited Implicit
|-TypedefDecl 0x29691d276c8 prev 0x296902eaa98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x296902e9fc0 'unsigned long long'
|-TypedefDecl 0x29691d27770 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x29691d27740 'size_t' sugar
|   |-Typedef 0x29691d276c8 'size_t'
|   `-BuiltinType 0x296902e9fc0 'unsigned long long'
|-TypedefDecl 0x29691d277e0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x296902e9f20 'long long'
|-TypedefDecl 0x29691d27850 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x296902e9f20 'long long'
|-TypedefDecl 0x29691d278c0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x296902e9f60 'unsigned short'
|-TypedefDecl 0x29691d27930 <line:541:1, col:24> col:24 wint_t 'unsigned short'
| `-BuiltinType 0x296902e9f60 'unsigned short'
|-TypedefDecl 0x29691d279a0 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x296902e9f60 'unsigned short'
|-TypedefDecl 0x29691d27a10 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x296902e9ee0 'int'
|-TypedefDecl 0x29691d27a80 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x296902e9f00 'long'
|-TypedefDecl 0x29691d27af0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x296902e9f20 'long long'
|-TypedefDecl 0x29691d27b80 <line:580:1, col:20> col:20 referenced time_t '__time64_t':'long long'
| `-TypedefType 0x29691d27b50 '__time64_t' sugar
|   |-Typedef 0x29691d27af0 '__time64_t'
|   `-BuiltinType 0x296902e9f20 'long long'
|-FunctionDecl 0x29691d27cf8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x29691d27f18 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x29691d5cf30 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x29691d28058 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x29691d280d0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x29691d28148 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x29691d281c8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x29691d5ccd0 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x29691d5d010 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x29691d5d0d0 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x29691d5d240 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x29691d5d1f0 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x29691d5d190 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x29691d5d0b0 'struct threadlocaleinfostruct'
|       `-Record 0x29691d65d60 'threadlocaleinfostruct'
|-TypedefDecl 0x29691d5d350 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x29691d5d300 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x29691d5d2a0 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x29691d5d170 'struct threadmbcinfostruct'
|       `-Record 0x29691d5d0d0 'threadmbcinfostruct'
|-RecordDecl 0x29691d5d3a8 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x29691d5d460 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x29691d5d520 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x29691d5d5b0 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x29691d5d640 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x29691d5d6f8 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x29691d5d6a0 'struct localeinfo_struct' sugar
|   `-RecordType 0x29691d5d500 'struct localeinfo_struct'
|     `-Record 0x29691d5d460 'localeinfo_struct'
|-TypedefDecl 0x29691d5d7d0 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x29691d5d780 'struct localeinfo_struct *'
|   `-ElaboratedType 0x29691d5d6a0 'struct localeinfo_struct' sugar
|     `-RecordType 0x29691d5d500 'struct localeinfo_struct'
|       `-Record 0x29691d5d460 'localeinfo_struct'
|-RecordDecl 0x29691d5d848 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x29691d5d900 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x29691d5d978 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x29691d5da38 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x29691d5dad0 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x29691d5db40 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x29691d5dbf8 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x29691d5dba0 'struct localerefcount' sugar
|   `-RecordType 0x29691d5d8e0 'struct localerefcount'
|     `-Record 0x29691d5d848 'localerefcount'
|-RecordDecl 0x29691d65d60 prev 0x29691d5d010 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x29691d65de0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x29691d65e58 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x29691d65ec8 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x29691d65f38 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x29691d65fa8 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x29691d66168 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x29691d661d8 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x29691d66248 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x29691d662b8 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x29691d66328 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x29691d66398 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x29691d663f0 parent 0x296902e9de8 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x29691d66580 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x29691d665f0 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x29691d66660 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x29691d666d0 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x29691d66770 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x29691d667e0 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x29691d668f0 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x29691d66a28 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x29691d66ad8 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x29691d66a80 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x29691d5d0b0 'struct threadlocaleinfostruct'
|     `-Record 0x29691d65d60 'threadlocaleinfostruct'
|-FunctionDecl 0x29691d69fb0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:47:9, col:142> col:25 _memccpy 'void *(void *, const void *, int, size_t) __attribute__((cdecl))':'void *(void *, const void *, int, size_t)'
| |-ParmVarDecl 0x29691d66b60 <col:69, col:76> col:76 _Dst 'void *'
| |-ParmVarDecl 0x29691d66c10 <col:87, col:100> col:100 _Src 'const void *'
| |-ParmVarDecl 0x29691d66c90 <col:111, col:115> col:115 _Val 'int'
| `-ParmVarDecl 0x29691d69da0 <col:126, col:133> col:133 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x29691d6a378 <line:48:54> col:54 implicit memchr 'void *(const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x29691d6a418 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x29691d6a480 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x29691d6a4e8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x29691d6a568 prev 0x29691d6a378 <col:38, col:150> col:54 memchr 'void *(const void *, int, unsigned long long)'
| |-ParmVarDecl 0x29691d6a0a0 <col:94, col:107> col:107 _Buf 'const void *'
| |-ParmVarDecl 0x29691d6a120 <col:119, col:123> col:123 _Val 'int'
| `-ParmVarDecl 0x29691d6a198 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x29691d6a928 <line:49:24, col:162> col:40 _memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x29691d6a650 <col:77, col:90> col:90 _Buf1 'const void *'
| |-ParmVarDecl 0x29691d6a6d0 <col:125, col:138> col:138 _Buf2 'const void *'
| `-ParmVarDecl 0x29691d6a748 <col:150, col:157> col:157 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x29691d6ee40 <line:50:24, col:192> col:40 _memicmp_l 'int (const void *, const void *, size_t, _locale_t) __attribute__((cdecl))':'int (const void *, const void *, size_t, _locale_t)'
| |-ParmVarDecl 0x29691d6aa10 <col:79, col:92> col:92 _Buf1 'const void *'
| |-ParmVarDecl 0x29691d6aa90 <col:127, col:140> col:140 _Buf2 'const void *'
| |-ParmVarDecl 0x29691d6ab08 <col:152, col:159> col:159 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x29691d6aba0 <col:175, col:185> col:185 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x29691d6f148 <line:51:32> col:32 implicit memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x29691d6f1e8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x29691d6f250 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x29691d6f2b8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x29691d6f338 prev 0x29691d6f148 <col:16, col:144> col:32 memcmp 'int (const void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x29691d6ef30 <col:63, col:76> col:76 _Buf1 'const void *'
| |-ParmVarDecl 0x29691d6efb0 <col:107, col:120> col:120 _Buf2 'const void *'
| `-ParmVarDecl 0x29691d6f028 <col:132, col:139> col:139 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x29691d6f6f8 <line:55:17> col:17 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x29691d6f798 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x29691d6f800 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x29691d6f868 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x29691d6f8e8 prev 0x29691d6f6f8 <col:1, col:127> col:17 used memcpy 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x29691d6f420 <col:54, col:61> col:61 _Dst 'void *'
| |-ParmVarDecl 0x29691d6f4a0 <col:91, col:104> col:104 _Src 'const void *'
| `-ParmVarDecl 0x29691d6f518 <col:115, col:122> col:122 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x29691d68d90 <line:57:9, col:191> col:26 memcpy_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x29691d6f9f8 <col:82, col:89> col:89 _Dst 'void *'
| |-ParmVarDecl 0x29691d6fa90 <col:100, col:108> col:108 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x29691d6fb10 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x29691d6fb88 <col:174, col:182> col:182 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x29691d69158 <line:94:25> col:25 implicit memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x29691d691f8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x29691d69260 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x29691d692c8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x29691d69348 prev 0x29691d69158 <col:9, col:107> col:25 memset 'void *(void *, int, unsigned long long)'
| |-ParmVarDecl 0x29691d68e80 <col:62, col:69> col:69 _Dst 'void *'
| |-ParmVarDecl 0x29691d68f00 <col:80, col:84> col:84 _Val 'int'
| `-ParmVarDecl 0x29691d68f78 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x29691d697c8 <line:98:57> col:57 implicit memccpy 'void *(void *, const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x29691d69868 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x29691d698d0 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x29691d69938 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x29691d699a0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x29691d69a28 prev 0x29691d697c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:98:187> col:57 memccpy 'void *(void *, const void *, int, unsigned long long)'
| |-ParmVarDecl 0x29691d69510 <col:95, col:102> col:102 _Dst 'void *'
| |-ParmVarDecl 0x29691d69590 <col:136, col:149> col:149 _Src 'const void *'
| |-ParmVarDecl 0x29691d69610 <col:160, col:164> col:164 _Val 'int'
| |-ParmVarDecl 0x29691d69688 <col:175, col:182> col:182 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x29691d69ae8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memccpy. See online help for details." ""
|-FunctionDecl 0x29691d6df78 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:99:190> col:69 memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x29691d69cb0 <col:105, col:118> col:118 _Buf1 'const void *'
| |-ParmVarDecl 0x29691d6dde0 <col:153, col:166> col:166 _Buf2 'const void *'
| |-ParmVarDecl 0x29691d6de58 <col:178, col:185> col:185 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x29691d6e030 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memicmp. See online help for details." ""
|-FunctionDecl 0x29691d6e420 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:105:40, col:144> col:56 _strset_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x29691d6e158 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x29691d6e1d0 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| `-ParmVarDecl 0x29691d6e250 <col:134, col:138> col:138 _Value 'int'
|-FunctionDecl 0x29691d6e7f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:107:88 _strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x29691d6e600 <col:108, col:114> col:114 _Dest 'char *'
| |-ParmVarDecl 0x29691d6e680 <col:126, col:131> col:131 _Value 'int'
| `-DeprecatedAttr 0x29691d6e8a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x29691d6ecb0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:109:40, col:158> col:56 strcpy_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x29691d6e9e8 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x29691d6ea60 <col:112, col:120> col:120 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x29691d6eae0 <col:141, col:154> col:154 _Src 'const char *'
|-FunctionDecl 0x29691d68040 <line:112:88> col:88 implicit strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x29691d680e0 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x29691d68148 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x29691d681c0 prev 0x29691d68040 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:112:88 strcpy 'char *(char *, const char *)'
| |-ParmVarDecl 0x29691d67e58 <col:142, col:148> col:148 _Dest 'char *'
| |-ParmVarDecl 0x29691d67ed8 <col:162, col:176> col:176 _Source 'const char *'
| `-DeprecatedAttr 0x29691d68270 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x29691d685c8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:114:40, col:161> col:56 strcat_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x29691d683b8 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x29691d68430 <col:115, col:123> col:123 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x29691d684b0 <col:144, col:157> col:157 _Src 'const char *'
|-FunctionDecl 0x29691d688f0 <line:118:88> col:88 implicit strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x29691d68990 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x29691d689f8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x29691d68a70 prev 0x29691d688f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:118:88 strcat 'char *(char *, const char *)'
| |-ParmVarDecl 0x29691d68770 <col:170, col:176> col:176 _Dest 'char *'
| |-ParmVarDecl 0x29691d687f0 <col:190, col:204> col:204 _Source 'const char *'
| `-DeprecatedAttr 0x29691d68b20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x29691d70ee0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:120:32> col:32 implicit strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x29691d70f80 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x29691d70fe8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x29691d71060 prev 0x29691d70ee0 <col:16, col:91> col:32 strcmp 'int (const char *, const char *)'
| |-ParmVarDecl 0x29691d68c68 <col:46, col:59> col:59 _Str1 'const char *'
| `-ParmVarDecl 0x29691d68ce8 <col:73, col:86> col:86 _Str2 'const char *'
|-FunctionDecl 0x29691d712b0 <line:121:32> col:32 implicit strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x29691d71350 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x29691d713c0 prev 0x29691d712b0 <col:16, col:63> col:32 strlen 'unsigned long long (const char *)'
| `-ParmVarDecl 0x29691d71140 <col:46, col:59> col:59 _Str 'const char *'
|-FunctionDecl 0x29691d716b8 <line:125:1, col:92> col:17 used strnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x29691d71498 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x29691d71510 <col:76, col:83> col:83 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x29691d71908 <line:127:16, line:133:1> line:130:19 strnlen_s 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' static inline
| |-ParmVarDecl 0x29691d71798 <col:56, col:69> col:69 used _Str 'const char *'
| |-ParmVarDecl 0x29691d71810 <col:80, col:87> col:87 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x29691d71c38 <line:131:1, line:133:1>
|   `-ReturnStmt 0x29691d71c28 <line:132:5, col:51>
|     `-ConditionalOperator 0x29691d71bf8 <col:12, col:51> 'unsigned long long'
|       |-ParenExpr 0x29691d71a68 <col:12, col:20> 'int'
|       | `-BinaryOperator 0x29691d71a48 <col:13, col:19> 'int' '=='
|       |   |-ImplicitCastExpr 0x29691d71a18 <col:13> 'const char *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x29691d719d0 <col:13> 'const char *' lvalue ParmVar 0x29691d71798 '_Str' 'const char *'
|       |   `-ImplicitCastExpr 0x29691d71a30 <col:19> 'const char *' <NullToPointer>
|       |     `-IntegerLiteral 0x29691d719f0 <col:19> 'int' 0
|       |-ImplicitCastExpr 0x29691d71be0 <col:24> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x29691d71a88 <col:24> 'int' 0
|       `-CallExpr 0x29691d71b80 <col:28, col:51> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x29691d71b68 <col:28> 'size_t (*)(const char *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x29691d71ab0 <col:28> 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' Function 0x29691d716b8 'strnlen' 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
|         |-ImplicitCastExpr 0x29691d71bb0 <col:36> 'const char *' <LValueToRValue>
|         | `-DeclRefExpr 0x29691d71ad0 <col:36> 'const char *' lvalue ParmVar 0x29691d71798 '_Str' 'const char *'
|         `-ImplicitCastExpr 0x29691d71bc8 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x29691d71af0 <col:42> 'size_t':'unsigned long long' lvalue ParmVar 0x29691d71810 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x29691d71f58 <line:136:28, col:209> col:44 memmove_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x29691d71c68 <col:100, col:107> col:107 _Dst 'void *'
| |-ParmVarDecl 0x29691d71ce0 <col:118, col:126> col:126 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x29691d71d60 <col:168, col:181> col:181 _Src 'const void *'
| `-ParmVarDecl 0x29691d71e20 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x29691d72260 <line:139:67> col:67 implicit memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x29691d72300 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x29691d72368 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x29691d723d0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x29691d72450 prev 0x29691d72260 <col:51, col:186> col:67 memmove 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x29691d72048 <col:109, col:116> col:116 _Dst 'void *'
| |-ParmVarDecl 0x29691d720c8 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x29691d72140 <col:174, col:181> col:181 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x29691d72688 <line:146:24, col:76> col:40 _strdup 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| `-ParmVarDecl 0x29691d72538 <col:59, col:72> col:72 _Src 'const char *'
|-FunctionDecl 0x29691d72950 <line:152:54> col:54 implicit strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x29691d729f0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x29691d72a58 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x29691d72ad0 prev 0x29691d72950 <col:38, col:100> col:54 strchr 'char *(const char *, int)'
| |-ParmVarDecl 0x29691d72760 <col:68, col:81> col:81 _Str 'const char *'
| `-ParmVarDecl 0x29691d727e0 <col:92, col:96> col:96 _Val 'int'
|-FunctionDecl 0x29691d72d30 <line:153:24, col:103> col:40 _stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x29691d72bb0 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x29691d72c30 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x29691d6af30 <line:154:24, col:103> col:40 _strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x29691d6adb0 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x29691d6ae30 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x29691d6b2e8 <line:155:24, col:133> col:40 _stricmp_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x29691d6b010 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x29691d6b090 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x29691d6b108 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x29691d6b550 <line:156:24, col:103> col:40 strcoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x29691d6b3d0 <col:56, col:69> col:69 _Str1 'const char *'
| `-ParmVarDecl 0x29691d6b450 <col:84, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x29691d6b848 <line:157:24, col:133> col:40 _strcoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x29691d6b630 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x29691d6b6b0 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x29691d6b728 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x29691d6bab0 <line:158:24, col:104> col:40 _stricoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x29691d6b930 <col:58, col:71> col:71 _Str1 'const char *'
| `-ParmVarDecl 0x29691d6b9b0 <col:86, col:99> col:99 _Str2 'const char *'
|-FunctionDecl 0x29691d6bdc0 <line:159:24, col:134> col:40 _stricoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x29691d6bb90 <col:60, col:73> col:73 _Str1 'const char *'
| |-ParmVarDecl 0x29691d6bc10 <col:88, col:101> col:101 _Str2 'const char *'
| `-ParmVarDecl 0x29691d6bc88 <col:117, col:127> col:127 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x29691d6c178 <line:160:24, col:167> col:40 _strncoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x29691d6bea8 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x29691d6bf28 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x29691d6bfa0 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x29691d6c5e0 <line:161:24, col:195> col:40 _strncoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x29691d6c260 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x29691d6c2e0 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x29691d6c358 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x29691d6c3d0 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x29691d6c8e8 <line:162:24, col:167> col:40 _strnicoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x29691d6c6d0 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x29691d6c750 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x29691d6c7c8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x29691d6cc80 <line:163:24, col:196> col:40 _strnicoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x29691d6c9d0 <col:80, col:93> col:93 _Str1 'const char *'
| |-ParmVarDecl 0x29691d6ca50 <col:127, col:140> col:140 _Str2 'const char *'
| |-ParmVarDecl 0x29691d6cac8 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x29691d6cb40 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x29691d780a8 <line:164:40> col:40 implicit strcspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x29691d78148 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x29691d781b0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x29691d78228 prev 0x29691d780a8 <col:24, col:104> col:40 strcspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x29691d77e80 <col:56, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x29691d77f00 <col:83, col:96> col:96 _Control 'const char *'
|-FunctionDecl 0x29691d784e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:165:118> col:77 _strerror 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x29691d78400 <col:98, col:111> col:111 _ErrMsg 'const char *'
| `-DeprecatedAttr 0x29691d78588 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x29691d78960 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:166:28, col:155> col:44 _strerror_s 'errno_t (char *, size_t, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *)'
| |-ParmVarDecl 0x29691d786d0 <col:85, col:92> col:92 _Buf 'char *'
| |-ParmVarDecl 0x29691d78748 <col:103, col:110> col:110 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x29691d787c8 <col:135, col:148> col:148 _ErrMsg 'const char *'
|-FunctionDecl 0x29691d78c78 <line:168:76> col:76 implicit strerror 'char *(int)' extern
| `-ParmVarDecl 0x29691d78d18 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x29691d78d88 prev 0x29691d78c78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:168:93> col:76 strerror 'char *(int)'
| |-ParmVarDecl 0x29691d78b40 <col:90> col:93 'int'
| `-DeprecatedAttr 0x29691d78e30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x29691d73140 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:170:28, col:139> col:44 strerror_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x29691d72f30 <col:84, col:91> col:91 _Buf 'char *'
| |-ParmVarDecl 0x29691d72fa8 <col:102, col:109> col:109 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x29691d73028 <col:128, col:132> col:132 _ErrNum 'int'
|-FunctionDecl 0x29691d73448 <line:173:28, col:109> col:44 _strlwr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x29691d73228 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x29691d732a0 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x29691d73738 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:175:79 _strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x29691d735e8 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x29691d737e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x29691d73bf0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:176:28, col:139> col:44 _strlwr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x29691d73928 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x29691d739a0 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x29691d73a18 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x29691d73ff0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:178:82 _strlwr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x29691d73d98 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x29691d73e40 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x29691d740a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x29691d74558 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:180:40, col:206> col:56 strncat_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x29691d741e8 <col:98, col:105> col:105 _Dst 'char *'
| |-ParmVarDecl 0x29691d74260 <col:116, col:124> col:124 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x29691d742e0 <col:165, col:178> col:178 _Src 'const char *'
| `-ParmVarDecl 0x29691d74358 <col:189, col:197> col:197 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x29691d749d8 <line:186:83> col:83 implicit strncat 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x29691d74a78 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x29691d74ae0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x29691d74b48 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x29691d74bc8 prev 0x29691d749d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:186:83 strncat 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x29691d74708 <col:161, col:167> col:167 _Dest 'char *'
| |-ParmVarDecl 0x29691d74788 <col:198, col:212> col:212 _Source 'const char *'
| |-ParmVarDecl 0x29691d74800 <col:226, col:234> col:234 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x29691d74c80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x29691d75000 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:188:40> col:40 implicit strncmp 'int (const char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x29691d750a0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x29691d75108 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x29691d75170 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x29691d751f0 prev 0x29691d75000 <col:24, col:163> col:40 strncmp 'int (const char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x29691d74dc8 <col:75, col:88> col:88 _Str1 'const char *'
| |-ParmVarDecl 0x29691d74e68 <col:122, col:135> col:135 _Str2 'const char *'
| `-ParmVarDecl 0x29691d74ee0 <col:147, col:154> col:154 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x29691d754f0 <line:189:24, col:165> col:40 _strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x29691d752d8 <col:77, col:90> col:90 _Str1 'const char *'
| |-ParmVarDecl 0x29691d75358 <col:124, col:137> col:137 _Str2 'const char *'
| `-ParmVarDecl 0x29691d753d0 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x29691d75888 <line:190:24, col:195> col:40 _strnicmp_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x29691d755d8 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x29691d75658 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x29691d756d0 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x29691d75748 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x29691d75c20 <line:192:40, col:203> col:56 strncpy_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x29691d75978 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x29691d759f0 <col:113, col:121> col:121 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x29691d75a70 <col:162, col:175> col:175 _Src 'const char *'
| `-ParmVarDecl 0x29691d75ae8 <col:186, col:194> col:194 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x29691d75ff8 <line:195:83> col:83 implicit strncpy 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x29691d76098 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x29691d76100 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x29691d76168 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x29691d761e8 prev 0x29691d75ff8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:195:83 strncpy 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x29691d75dd0 <col:167, col:173> col:173 _Dest 'char *'
| |-ParmVarDecl 0x29691d75e60 <col:204, col:218> col:218 _Source 'const char *'
| |-ParmVarDecl 0x29691d75ed8 <col:232, col:240> col:240 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x29691d762a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x29691d76758 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:196:40, col:174> col:56 _strnset_s 'errno_t (char *, size_t, int, size_t) __attribute__((cdecl))':'errno_t (char *, size_t, int, size_t)'
| |-ParmVarDecl 0x29691d763e8 <col:99, col:106> col:106 _Str 'char *'
| |-ParmVarDecl 0x29691d76460 <col:117, col:124> col:124 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x29691d764e0 <col:143, col:147> col:147 _Val 'int'
| `-ParmVarDecl 0x29691d76558 <col:158, col:165> col:165 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x29691d76bd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:198:83 _strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x29691d76908 <col:163, col:169> col:169 _Dest 'char *'
| |-ParmVarDecl 0x29691d76988 <col:181, col:186> col:186 _Val 'int'
| |-ParmVarDecl 0x29691d76a00 <col:197, col:205> col:205 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x29691d76c90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x29691d76fe0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:199:54> col:54 implicit strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x29691d77080 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x29691d770e8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x29691d77160 prev 0x29691d76fe0 <col:38, col:116> col:54 strpbrk 'char *(const char *, const char *)'
| |-ParmVarDecl 0x29691d76dd8 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x29691d76e70 <col:95, col:108> col:108 _Control 'const char *'
|-FunctionDecl 0x29691d773c0 <line:200:54> col:54 implicit strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x29691d77460 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x29691d774c8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x29691d77540 prev 0x29691d773c0 <col:38, col:100> col:54 strrchr 'char *(const char *, int)'
| |-ParmVarDecl 0x29691d77240 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x29691d772c0 <col:93, col:97> col:97 _Ch 'int'
|-FunctionDecl 0x29691d77700 <line:201:9, col:54> col:25 _strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| `-ParmVarDecl 0x29691d77620 <col:43, col:50> col:50 _Str 'char *'
|-FunctionDecl 0x29691d77950 <line:202:40> col:40 implicit strspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x29691d779f0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x29691d77a58 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x29691d77ad0 prev 0x29691d77950 <col:24, col:101> col:40 strspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x29691d777d8 <col:54, col:67> col:67 _Str 'const char *'
| `-ParmVarDecl 0x29691d77858 <col:80, col:93> col:93 _Control 'const char *'
|-FunctionDecl 0x29691d77d30 <line:203:70> col:70 implicit strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x29691d77dd0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x29691deef70 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x29691deefe8 prev 0x29691d77d30 <col:54, col:130> col:70 strstr 'char *(const char *, const char *)'
| |-ParmVarDecl 0x29691d77bb0 <col:84, col:97> col:97 _Str 'const char *'
| `-ParmVarDecl 0x29691d77c30 <col:110, col:123> col:123 _SubStr 'const char *'
|-FunctionDecl 0x29691def308 <line:204:74> col:74 implicit strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x29691def3a8 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x29691def410 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x29691def488 prev 0x29691def308 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:204:134> col:74 strtok 'char *(char *, const char *)'
| |-ParmVarDecl 0x29691def188 <col:95, col:102> col:102 _Str 'char *'
| |-ParmVarDecl 0x29691def208 <col:115, col:128> col:128 _Delim 'const char *'
| `-DeprecatedAttr 0x29691def538 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x29691def918 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:206:36, col:162> col:52 strtok_s 'char *(char *, const char *, char **) __attribute__((cdecl))':'char *(char *, const char *, char **)'
| |-ParmVarDecl 0x29691def680 <col:75, col:82> col:82 _Str 'char *'
| |-ParmVarDecl 0x29691def700 <col:95, col:108> col:108 _Delim 'const char *'
| `-ParmVarDecl 0x29691def780 <col:146, col:154> col:154 _Context 'char **'
|-FunctionDecl 0x29691defb70 <line:208:28, col:109> col:44 _strupr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x29691defa00 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x29691defa78 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x29691defdf0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:210:79 _strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x29691defd10 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x29691defe98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x29691dec248 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:211:28, col:130> col:44 _strupr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x29691dec040 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x29691dec0b8 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x29691dec130 <col:113, col:123> col:123 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x29691dec568 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:213:82 _strupr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x29691dec3f0 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x29691dec468 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x29691dec618 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x29691deca30 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:214:44> col:44 implicit strxfrm 'unsigned long long (char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x29691decad0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x29691decb38 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x29691decba0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x29691decc20 prev 0x29691deca30 <col:28, col:155> col:44 strxfrm 'unsigned long long (char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x29691dec760 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x29691dec7e0 <col:115, col:128> col:128 _Src 'const char *'
| `-ParmVarDecl 0x29691dec858 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x29691deb068 <line:215:28, col:185> col:44 _strxfrm_l 'size_t (char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x29691decd08 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x29691decd88 <col:117, col:130> col:130 _Src 'const char *'
| |-ParmVarDecl 0x29691dece00 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x29691dece78 <col:168, col:178> col:178 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x29691deb310 <line:245:71> col:71 implicit strdup 'char *(const char *)' extern
| `-ParmVarDecl 0x29691deb3b0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x29691deb420 prev 0x29691deb310 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:245:106> col:71 strdup 'char *(const char *)'
| |-ParmVarDecl 0x29691deb230 <col:89, col:102> col:102 _Src 'const char *'
| `-DeprecatedAttr 0x29691deb4c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strdup. See online help for details." ""
|-FunctionDecl 0x29691deb810 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:252:129> col:69 strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x29691deb690 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x29691deb710 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x29691deb8c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strcmpi. See online help for details." ""
|-FunctionDecl 0x29691debc08 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:253:129> col:69 stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x29691deba88 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x29691debb08 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x29691debcb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details." ""
|-FunctionDecl 0x29691deffb8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:254:84> col:56 strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x29691debe80 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x29691df0060 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strlwr. See online help for details." ""
|-FunctionDecl 0x29691df0478 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:255:193> col:70 strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x29691df0260 <col:106, col:119> col:119 _Str1 'const char *'
| |-ParmVarDecl 0x29691df02e0 <col:153, col:166> col:166 _Str 'const char *'
| |-ParmVarDecl 0x29691df0358 <col:177, col:184> col:184 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x29691df0530 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnicmp. See online help for details." ""
|-FunctionDecl 0x29691df0910 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:256:143> col:57 strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x29691df06f8 <col:94, col:101> col:101 _Str 'char *'
| |-ParmVarDecl 0x29691df0778 <col:112, col:116> col:116 _Val 'int'
| |-ParmVarDecl 0x29691df07f0 <col:127, col:134> col:134 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x29691df09c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnset. See online help for details." ""
|-FunctionDecl 0x29691df0c70 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:257:84> col:56 strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x29691df0b90 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x29691df0d18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strrev. See online help for details." ""
|-FunctionDecl 0x29691df40c0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:258:99> col:56 strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x29691df0ee0 <col:73, col:80> col:80 _Str 'char *'
| |-ParmVarDecl 0x29691df3fc0 <col:91, col:95> col:95 _Val 'int'
| `-DeprecatedAttr 0x29691df4170 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strset. See online help for details." ""
|-FunctionDecl 0x29691df4418 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:259:84> col:56 strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x29691df4338 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x29691df44c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strupr. See online help for details." ""
|-FunctionDecl 0x29691df4750 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:273:24, col:77> col:42 _wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| `-ParmVarDecl 0x29691df45e0 <col:57, col:73> col:73 _Str 'const wchar_t *'
|-FunctionDecl 0x29691df4ae0 <line:280:40, col:167> col:56 wcscat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x29691df4820 <col:97, col:107> col:107 _Dst 'wchar_t *'
| |-ParmVarDecl 0x29691df4898 <col:118, col:126> col:126 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x29691df4910 <col:147, col:163> col:163 _Src 'const wchar_t *'
|-FunctionDecl 0x29691df4e98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:284:82 wcscat 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x29691df4c80 <col:164, col:173> col:173 _Dest 'wchar_t *'
| |-ParmVarDecl 0x29691df4cf8 <col:187, col:204> col:204 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x29691df4f48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x29691dee278 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:288:41> col:41 implicit wcschr 'unsigned short *(const unsigned short *, unsigned short)' extern
| |-ParmVarDecl 0x29691dee318 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x29691dee380 <<invalid sloc>> <invalid sloc> 'unsigned short'
|-FunctionDecl 0x29691dee3f8 prev 0x29691dee278 <col:23, col:88> col:41 wcschr 'unsigned short *(const unsigned short *, unsigned short)'
| |-ParmVarDecl 0x29691dee058 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x29691dee0d0 <col:77, col:85> col:85 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x29691dee6f0 <line:289:36> col:36 implicit wcscmp 'int (const unsigned short *, const unsigned short *)' extern
| |-ParmVarDecl 0x29691dee790 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x29691dee7f8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x29691dee870 prev 0x29691dee6f0 <col:24, col:101> col:36 wcscmp 'int (const unsigned short *, const unsigned short *)'
| |-ParmVarDecl 0x29691dee4d0 <col:50, col:66> col:66 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x29691dee548 <col:80, col:96> col:96 _Str2 'const wchar_t *'
|-FunctionDecl 0x29691deeb50 <line:291:40, col:164> col:56 wcscpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x29691dee948 <col:94, col:104> col:104 _Dst 'wchar_t *'
| |-ParmVarDecl 0x29691dee9c0 <col:115, col:123> col:123 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x29691deea38 <col:144, col:160> col:160 _Src 'const wchar_t *'
|-FunctionDecl 0x29691deee60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:294:82 wcscpy 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x29691deecf0 <col:136, col:145> col:145 _Dest 'wchar_t *'
| |-ParmVarDecl 0x29691deed68 <col:159, col:176> col:176 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x29691deef10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x29691ded268 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:295:24, col:107> col:39 wcscspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x29691ded048 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x29691ded0c0 <col:83, col:99> col:99 _Control 'const wchar_t *'
|-FunctionDecl 0x29691ded4b0 <line:296:39> col:39 implicit wcslen 'unsigned long long (const unsigned short *)' extern
| `-ParmVarDecl 0x29691ded550 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x29691ded5c0 prev 0x29691ded4b0 <col:24, col:73> col:39 wcslen 'unsigned long long (const unsigned short *)'
| `-ParmVarDecl 0x29691ded340 <col:53, col:69> col:69 _Str 'const wchar_t *'
|-FunctionDecl 0x29691ded8a8 <line:300:1, col:94> col:16 used wcsnlen 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
| |-ParmVarDecl 0x29691ded690 <col:51, col:67> col:67 _Src 'const wchar_t *'
| `-ParmVarDecl 0x29691ded708 <col:78, col:85> col:85 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x29691dedaf0 <line:302:16, line:308:1> line:305:18 wcsnlen_s 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' static inline
| |-ParmVarDecl 0x29691ded980 <col:55, col:71> col:71 used _Src 'const wchar_t *'
| |-ParmVarDecl 0x29691ded9f8 <col:82, col:89> col:89 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x29691dede88 <line:306:1, line:308:1>
|   `-ReturnStmt 0x29691dede78 <line:307:5, col:56>
|     `-ConditionalOperator 0x29691dede48 <col:12, col:56> 'unsigned long long'
|       |-ParenExpr 0x29691dedcb0 <col:12, col:25> 'int'
|       | `-BinaryOperator 0x29691dedc90 <col:13, line:36:27> 'int' '=='
|       |   |-ImplicitCastExpr 0x29691dedc60 <line:307:13> 'const wchar_t *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x29691dedbb8 <col:13> 'const wchar_t *' lvalue ParmVar 0x29691ded980 '_Src' 'const wchar_t *'
|       |   `-ImplicitCastExpr 0x29691dedc78 <line:36:17, col:27> 'const wchar_t *' <BitCast>
|       |     `-ParenExpr 0x29691dedc40 <col:17, col:27> 'void *'
|       |       `-CStyleCastExpr 0x29691dedc18 <col:18, col:26> 'void *' <NullToPointer>
|       |         `-IntegerLiteral 0x29691dedbd8 <col:26> 'int' 0
|       |-ImplicitCastExpr 0x29691dede30 <line:307:29> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x29691dedcd0 <col:29> 'int' 0
|       `-CallExpr 0x29691deddd0 <col:33, col:56> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x29691deddb8 <col:33> 'size_t (*)(const wchar_t *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x29691dedcf8 <col:33> 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' Function 0x29691ded8a8 'wcsnlen' 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
|         |-ImplicitCastExpr 0x29691dede00 <col:41> 'const wchar_t *' <LValueToRValue>
|         | `-DeclRefExpr 0x29691dedd18 <col:41> 'const wchar_t *' lvalue ParmVar 0x29691ded980 '_Src' 'const wchar_t *'
|         `-ImplicitCastExpr 0x29691dede18 <col:47> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x29691dedd38 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x29691ded9f8 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x29691df32a8 <line:311:40, col:212> col:56 wcsncat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x29691dedeb0 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x29691df2fb0 <col:119, col:127> col:127 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x29691df3028 <col:168, col:184> col:184 _Src 'const wchar_t *'
| `-ParmVarDecl 0x29691df30a0 <col:195, col:203> col:203 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x29691df3710 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:316:86 wcsncat 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x29691df3450 <col:167, col:176> col:176 _Dest 'wchar_t *'
| |-ParmVarDecl 0x29691df34c8 <col:207, col:224> col:224 _Source 'const wchar_t *'
| |-ParmVarDecl 0x29691df3540 <col:238, col:246> col:246 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x29691df37c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x29691df3bd8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:318:36> col:36 implicit wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)' extern
| |-ParmVarDecl 0x29691df3c78 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| |-ParmVarDecl 0x29691df3ce0 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x29691df3d48 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x29691df3dc8 prev 0x29691df3bd8 <col:24, col:165> col:36 wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)'
| |-ParmVarDecl 0x29691df3908 <col:71, col:87> col:87 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x29691df3980 <col:121, col:137> col:137 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x29691df39f8 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x29691df5180 <line:320:40, col:209> col:56 wcsncpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x29691df3ea8 <col:95, col:105> col:105 _Dst 'wchar_t *'
| |-ParmVarDecl 0x29691df3f20 <col:116, col:124> col:124 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x29691df4fd0 <col:165, col:181> col:181 _Src 'const wchar_t *'
| `-ParmVarDecl 0x29691df5048 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x29691df5530 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:323:86 wcsncpy 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x29691df5328 <col:179, col:188> col:188 _Dest 'wchar_t *'
| |-ParmVarDecl 0x29691df53a0 <col:219, col:236> col:236 _Source 'const wchar_t *'
| |-ParmVarDecl 0x29691df5418 <col:250, col:258> col:258 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x29691df55e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x29691df5948 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:324:38, col:124> col:56 wcspbrk 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x29691df5728 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x29691df57a0 <col:100, col:116> col:116 _Control 'const wchar_t *'
|-FunctionDecl 0x29691df5b90 <line:325:38, col:109> col:56 wcsrchr 'wchar_t *(const wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(const wchar_t *, wchar_t)'
| |-ParmVarDecl 0x29691df5a20 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x29691df5a98 <col:98, col:106> col:106 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x29691df5dd8 <line:326:24, col:106> col:39 wcsspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x29691df5c68 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x29691df5ce0 <col:82, col:98> col:98 _Control 'const wchar_t *'
|-FunctionDecl 0x29691df6040 <line:329:23, col:107> col:41 wcsstr 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x29691df5eb0 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x29691df5f28 <col:84, col:100> col:100 _SubStr 'const wchar_t *'
|-FunctionDecl 0x29691df6348 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:330:142> col:76 wcstok 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x29691df61d8 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x29691df6250 <col:120, col:136> col:136 _Delim 'const wchar_t *'
| `-DeprecatedAttr 0x29691df63f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x29691df6860 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:332:36, col:173> col:54 wcstok_s 'wchar_t *(wchar_t *, const wchar_t *, wchar_t **) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x29691df6538 <col:77, col:87> col:87 _Str 'wchar_t *'
| |-ParmVarDecl 0x29691df65b0 <col:100, col:116> col:116 _Delim 'const wchar_t *'
| `-ParmVarDecl 0x29691df6690 <col:154, col:165> col:165 _Context 'wchar_t **'
|-FunctionDecl 0x29691df6b80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:334:105> col:79 _wcserror 'wchar_t *(int) __attribute__((cdecl))':'wchar_t *(int)'
| |-ParmVarDecl 0x29691df6a08 <col:94, col:98> col:98 _ErrNum 'int'
| `-DeprecatedAttr 0x29691df6c28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x29691df2010 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:335:28, col:147> col:44 _wcserror_s 'errno_t (wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, int)'
| |-ParmVarDecl 0x29691df6d68 <col:89, col:99> col:99 _Buf 'wchar_t *'
| |-ParmVarDecl 0x29691df6de0 <col:110, col:117> col:117 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x29691df6e60 <col:136, col:140> col:140 _ErrNum 'int'
|-FunctionDecl 0x29691df22c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:337:122> col:80 __wcserror 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x29691df21e8 <col:102, col:118> col:118 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x29691df2368 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x29691df2730 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:338:28, col:165> col:44 __wcserror_s 'errno_t (wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x29691df24a8 <col:90, col:100> col:100 _Buffer 'wchar_t *'
| |-ParmVarDecl 0x29691df2520 <col:114, col:121> col:121 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x29691df2598 <col:142, col:158> col:158 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x29691df2988 <line:341:24, col:103> col:36 _wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x29691df2810 <col:52, col:68> col:68 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x29691df2888 <col:82, col:98> col:98 _Str2 'const wchar_t *'
|-FunctionDecl 0x29691df2d28 <line:342:24, col:133> col:36 _wcsicmp_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x29691df2a60 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x29691df2ad8 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x29691df2b50 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x29691df1018 <line:343:24, col:167> col:36 _wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x29691df2e08 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x29691df2e80 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x29691df2ef8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x29691df1470 <line:344:24, col:197> col:36 _wcsnicmp_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x29691df10f8 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x29691df1170 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x29691df11e8 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x29691df1260 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x29691df18c8 <line:345:40, col:181> col:56 _wcsnset_s 'errno_t (wchar_t *, size_t, wchar_t, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t, size_t)'
| |-ParmVarDecl 0x29691df1558 <col:99, col:109> col:109 _Dst 'wchar_t *'
| |-ParmVarDecl 0x29691df15d0 <col:120, col:127> col:127 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x29691df1648 <col:146, col:154> col:154 _Val 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x29691df16c0 <col:165, col:172> col:172 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x29691df1d30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:347:86 _wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x29691df1a70 <col:172, col:181> col:181 _Str 'wchar_t *'
| |-ParmVarDecl 0x29691df1ae8 <col:187, col:196> col:196 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x29691df1b60 <col:207, col:215> col:215 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x29691df1de8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x29691e00190 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:348:9, col:59> col:27 _wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| `-ParmVarDecl 0x29691df1f28 <col:45, col:55> col:55 _Str 'wchar_t *'
|-FunctionDecl 0x29691e00520 <line:349:40, col:159> col:56 _wcsset_s 'errno_t (wchar_t *, size_t, wchar_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t)'
| |-ParmVarDecl 0x29691e00260 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x29691e002d8 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x29691e00350 <col:145, col:153> col:153 _Value 'wchar_t':'unsigned short'
|-FunctionDecl 0x29691e008d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:351:85 _wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x29691e006c0 <col:150, col:159> col:159 _Str 'wchar_t *'
| |-ParmVarDecl 0x29691e00738 <col:165, col:174> col:174 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x29691e00988 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x29691e00ce8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:353:28, col:126> col:44 _wcslwr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x29691e00ac8 <col:86, col:96> col:96 _Str 'wchar_t *'
| `-ParmVarDecl 0x29691e00b40 <col:107, col:114> col:114 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x29691e00f58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:355:82 _wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x29691e00e80 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x29691e01000 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x29691dfb3f0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:356:28, col:156> col:44 _wcslwr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x29691dfb128 <col:88, col:98> col:98 _Str 'wchar_t *'
| |-ParmVarDecl 0x29691dfb1a0 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x29691dfb218 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x29691dfb7a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:358:85 _wcslwr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x29691dfb590 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x29691dfb608 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x29691dfb858 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x29691dfbb08 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:359:28, col:112> col:44 _wcsupr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x29691dfb998 <col:79, col:89> col:89 _Str 'wchar_t *'
| `-ParmVarDecl 0x29691dfba10 <col:100, col:107> col:107 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x29691dfbd78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:361:82 _wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x29691dfbca0 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x29691dfbe20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x29691dfc1d0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:362:28, col:142> col:44 _wcsupr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x29691dfbf60 <col:81, col:91> col:91 _Str 'wchar_t *'
| |-ParmVarDecl 0x29691dfc040 <col:102, col:109> col:109 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x29691dfc0b8 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x29691dfc4e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:364:85 _wcsupr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x29691dfc370 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x29691dfc3e8 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x29691dfc590 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x29691dfc990 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:365:28, col:159> col:43 wcsxfrm 'size_t (wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x29691dfc6d0 <col:93, col:103> col:103 _Dst 'wchar_t *'
| |-ParmVarDecl 0x29691dfc748 <col:116, col:132> col:132 _Src 'const wchar_t *'
| `-ParmVarDecl 0x29691dfc7c0 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x29691dfcdd8 <line:366:28, col:189> col:43 _wcsxfrm_l 'size_t (wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x29691dfca70 <col:96, col:106> col:106 _Dst 'wchar_t *'
| |-ParmVarDecl 0x29691dfcae8 <col:119, col:134> col:134 _Src 'const wchar_t *'
| |-ParmVarDecl 0x29691dfcb60 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x29691dfcbd8 <col:172, col:182> col:182 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x29691dfd050 <line:367:24, col:102> col:36 wcscoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x29691dfcec0 <col:51, col:67> col:67 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x29691dfcf38 <col:81, col:97> col:97 _Str2 'const wchar_t *'
|-FunctionDecl 0x29691dfd338 <line:368:24, col:133> col:36 _wcscoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x29691dfd128 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x29691dfd1a0 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x29691dfd218 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x29691dfd590 <line:369:24, col:104> col:36 _wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x29691dfd418 <col:53, col:69> col:69 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x29691dfd490 <col:83, col:99> col:99 _Str2 'const wchar_t *'
|-FunctionDecl 0x29691dfd878 <line:370:24, col:133> col:36 _wcsicoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x29691dfd668 <col:55, col:71> col:71 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x29691dfd6e0 <col:85, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x29691dfd758 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x29691dfdb68 <line:371:24, col:167> col:36 _wcsncoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x29691dfd958 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x29691dfd9d0 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x29691dfda48 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x29691dfdef0 <line:372:24, col:197> col:36 _wcsncoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x29691dfdc48 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x29691dfdcc0 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x29691dfdd38 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x29691dfddb0 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x29691df91a8 <line:373:24, col:168> col:36 _wcsnicoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x29691dfdfd8 <col:74, col:90> col:90 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x29691df9010 <col:124, col:140> col:140 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x29691df9088 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x29691df9530 <line:374:24, col:198> col:36 _wcsnicoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x29691df9288 <col:76, col:92> col:92 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x29691df9300 <col:126, col:142> col:142 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x29691df9378 <col:154, col:161> col:161 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x29691df93f0 <col:181, col:191> col:191 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x29691df9790 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:403:108> col:74 wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x29691df96b8 <col:88, col:104> col:104 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x29691df9838 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsdup. See online help for details." ""
|-FunctionDecl 0x29691df9b70 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:413:135> col:69 wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x29691df99f8 <col:84, col:100> col:100 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x29691df9a70 <col:114, col:130> col:130 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x29691df9c20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicmp. See online help for details." ""
|-FunctionDecl 0x29691e01090 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:414:200> col:70 wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x29691df9de0 <col:106, col:122> col:122 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x29691df9e58 <col:156, col:172> col:172 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x29691df9ed0 <col:184, col:191> col:191 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x29691e01148 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnicmp. See online help for details." ""
|-FunctionDecl 0x29691e01510 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:415:153> col:60 wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x29691e01308 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x29691e01380 <col:118, col:126> col:126 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x29691e013f8 <col:137, col:144> col:144 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x29691e015c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnset. See online help for details." ""
|-FunctionDecl 0x29691e01860 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:416:90> col:59 wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x29691e01788 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x29691e01908 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsrev. See online help for details." ""
|-FunctionDecl 0x29691e01c38 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:417:104> col:59 wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x29691e01ac8 <col:76, col:86> col:86 _Str 'wchar_t *'
| |-ParmVarDecl 0x29691e01b40 <col:92, col:100> col:100 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x29691e01ce8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsset. See online help for details." ""
|-FunctionDecl 0x29691e01f80 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:418:90> col:59 wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x29691e01ea8 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x29691e02028 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcslwr. See online help for details." ""
|-FunctionDecl 0x29691e03300 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:419:90> col:59 wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x29691e03228 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x29691e033a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsupr. See online help for details." ""
|-FunctionDecl 0x29691e036e0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:420:137> col:70 wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x29691e03568 <col:86, col:102> col:102 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x29691e035e0 <col:116, col:132> col:132 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x29691e03790 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicoll. See online help for details." ""
|-RecordDecl 0x29691e038a0 <.//openssl//file_jk/before\crypto\o_time.c:14:1, col:8> col:8 struct tm
|-FunctionDecl 0x29691e03cd0 <col:1, line:57:1> line:14:12 OPENSSL_gmtime 'struct tm *(const time_t *, struct tm *)'
| |-ParmVarDecl 0x29691e039e8 <col:27, col:41> col:41 used timer 'const time_t *'
| |-ParmVarDecl 0x29691e03b00 <col:48, col:59> col:59 used result 'struct tm *'
| `-CompoundStmt 0x29691dff400 <line:15:1, line:57:1>
|   |-DeclStmt 0x29691e03ec8 <line:16:5, col:25>
|   | `-VarDecl 0x29691e03dc0 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/before\crypto\o_time.c:16:16 used ts 'struct tm *' cinit
|   |   `-ImplicitCastExpr 0x29691e03eb0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'struct tm *' <NullToPointer>
|   |     `-ParenExpr 0x29691e03e90 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x29691e03e68 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x29691e03e28 <col:26> 'int' 0
|   |-BinaryOperator 0x29691dff0e0 <.//openssl//file_jk/before\crypto\o_time.c:49:5, col:22> 'struct tm *' '='
|   | |-DeclRefExpr 0x29691e03ee0 <col:5> 'struct tm *' lvalue Var 0x29691e03dc0 'ts' 'struct tm *'
|   | `-ImplicitCastExpr 0x29691dff0c8 <col:10, col:22> 'struct tm *' <IntegralToPointer>
|   |   `-CallExpr 0x29691dff088 <col:10, col:22> 'int'
|   |     |-ImplicitCastExpr 0x29691dff070 <col:10> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x29691e04038 <col:10> 'int ()' Function 0x29691e03f70 'gmtime' 'int ()'
|   |     `-ImplicitCastExpr 0x29691dff0b0 <col:17> 'const time_t *' <LValueToRValue>
|   |       `-DeclRefExpr 0x29691e04058 <col:17> 'const time_t *' lvalue ParmVar 0x29691e039e8 'timer' 'const time_t *'
|   |-IfStmt 0x29691dff2a8 <line:50:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|   | |-BinaryOperator 0x29691dff1d8 <.//openssl//file_jk/before\crypto\o_time.c:50:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x29691dff1a8 <.//openssl//file_jk/before\crypto\o_time.c:50:9> 'struct tm *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x29691dff100 <col:9> 'struct tm *' lvalue Var 0x29691e03dc0 'ts' 'struct tm *'
|   | | `-ImplicitCastExpr 0x29691dff1c0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'struct tm *' <BitCast>
|   | |   `-ParenExpr 0x29691dff188 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x29691dff160 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x29691dff120 <col:26> 'int' 0
|   | `-ReturnStmt 0x29691dff298 <.//openssl//file_jk/before\crypto\o_time.c:51:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|   |   `-ImplicitCastExpr 0x29691dff280 <col:17, col:27> 'struct tm *' <NullToPointer>
|   |     `-ParenExpr 0x29691dff260 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x29691dff238 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x29691dff1f8 <col:26> 'int' 0
|   |-BinaryOperator 0x29691dff398 <.//openssl//file_jk/before\crypto\o_time.c:54:5, col:10> 'struct tm *' '='
|   | |-DeclRefExpr 0x29691dff340 <col:5> 'struct tm *' lvalue Var 0x29691e03dc0 'ts' 'struct tm *'
|   | `-ImplicitCastExpr 0x29691dff380 <col:10> 'struct tm *' <LValueToRValue>
|   |   `-DeclRefExpr 0x29691dff360 <col:10> 'struct tm *' lvalue ParmVar 0x29691e03b00 'result' 'struct tm *'
|   `-ReturnStmt 0x29691dff3f0 <line:56:5, col:12>
|     `-ImplicitCastExpr 0x29691dff3d8 <col:12> 'struct tm *' <LValueToRValue>
|       `-DeclRefExpr 0x29691dff3b8 <col:12> 'struct tm *' lvalue Var 0x29691e03dc0 'ts' 'struct tm *'
|-FunctionDecl 0x29691dff680 <line:67:1, col:47> col:13 used date_to_julian 'long (int, int, int)' static
| |-ParmVarDecl 0x29691dff450 <col:28, col:32> col:32 y 'int'
| |-ParmVarDecl 0x29691dff4d0 <col:35, col:39> col:39 m 'int'
| `-ParmVarDecl 0x29691dff550 <col:42, col:46> col:46 d 'int'
|-FunctionDecl 0x29691dffa38 <line:68:1, col:59> col:13 used julian_to_date 'void (long, int *, int *, int *)' static
| |-ParmVarDecl 0x29691dff768 <col:28, col:33> col:33 jd 'long'
| |-ParmVarDecl 0x29691dff7e8 <col:37, col:42> col:42 y 'int *'
| |-ParmVarDecl 0x29691dff868 <col:45, col:50> col:50 m 'int *'
| `-ParmVarDecl 0x29691dff8e8 <col:53, col:58> col:58 d 'int *'
|-FunctionDecl 0x29691dfff90 <line:69:1, line:70:44> line:69:12 used julian_adj 'int (const struct tm *, int, long, long *, int *)' static
| |-ParmVarDecl 0x29691dffb90 <col:23, col:40> col:40 tm 'const struct tm *'
| |-ParmVarDecl 0x29691dffc10 <col:44, col:48> col:48 off_day 'int'
| |-ParmVarDecl 0x29691dffc90 <col:57, col:62> col:62 offset_sec 'long'
| |-ParmVarDecl 0x29691dffd40 <line:70:23, col:29> col:29 pday 'long *'
| `-ParmVarDecl 0x29691dffdc0 <col:35, col:40> col:40 psec 'int *'
|-FunctionDecl 0x29691e02340 <line:72:1, line:100:1> line:72:5 OPENSSL_gmtime_adj 'int (struct tm *, int, long)'
| |-ParmVarDecl 0x29691e020c8 <col:24, col:35> col:35 used tm 'struct tm *'
| |-ParmVarDecl 0x29691e02148 <col:39, col:43> col:43 used off_day 'int'
| |-ParmVarDecl 0x29691e021c8 <col:52, col:57> col:57 used offset_sec 'long'
| `-CompoundStmt 0x29691e04178 <line:73:1, line:100:1>
|   |-DeclStmt 0x29691e02638 <line:74:5, col:50>
|   | |-VarDecl 0x29691e02428 <col:5, col:9> col:9 used time_sec 'int'
|   | |-VarDecl 0x29691e024a8 <col:5, col:19> col:19 used time_year 'int'
|   | |-VarDecl 0x29691e02528 <col:5, col:30> col:30 used time_month 'int'
|   | `-VarDecl 0x29691e025a8 <col:5, col:42> col:42 used time_day 'int'
|   |-DeclStmt 0x29691e026d0 <line:75:5, col:17>
|   | `-VarDecl 0x29691e02668 <col:5, col:10> col:10 used time_jd 'long'
|   |-IfStmt 0x29691e02978 <line:78:5, line:79:16>
|   | |-UnaryOperator 0x29691e02928 <line:78:9, col:65> 'int' prefix '!' cannot overflow
|   | | `-CallExpr 0x29691e02880 <col:10, col:65> 'int'
|   | |   |-ImplicitCastExpr 0x29691e02868 <col:10> 'int (*)(const struct tm *, int, long, long *, int *)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x29691e026e8 <col:10> 'int (const struct tm *, int, long, long *, int *)' Function 0x29691dfff90 'julian_adj' 'int (const struct tm *, int, long, long *, int *)'
|   | |   |-ImplicitCastExpr 0x29691e028e0 <col:21> 'const struct tm *' <NoOp>
|   | |   | `-ImplicitCastExpr 0x29691e028c8 <col:21> 'struct tm *' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x29691e02708 <col:21> 'struct tm *' lvalue ParmVar 0x29691e020c8 'tm' 'struct tm *'
|   | |   |-ImplicitCastExpr 0x29691e028f8 <col:25> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x29691e02728 <col:25> 'int' lvalue ParmVar 0x29691e02148 'off_day' 'int'
|   | |   |-ImplicitCastExpr 0x29691e02910 <col:34> 'long' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x29691e02748 <col:34> 'long' lvalue ParmVar 0x29691e021c8 'offset_sec' 'long'
|   | |   |-UnaryOperator 0x29691e027a0 <col:46, col:47> 'long *' prefix '&' cannot overflow
|   | |   | `-DeclRefExpr 0x29691e02768 <col:47> 'long' lvalue Var 0x29691e02668 'time_jd' 'long'
|   | |   `-UnaryOperator 0x29691e027f0 <col:56, col:57> 'int *' prefix '&' cannot overflow
|   | |     `-DeclRefExpr 0x29691e027b8 <col:57> 'int' lvalue Var 0x29691e02428 'time_sec' 'int'
|   | `-ReturnStmt 0x29691e02968 <line:79:9, col:16>
|   |   `-IntegerLiteral 0x29691e02940 <col:16> 'int' 0
|   |-CallExpr 0x29691e02b00 <line:83:5, col:63> 'void'
|   | |-ImplicitCastExpr 0x29691e02ae8 <col:5> 'void (*)(long, int *, int *, int *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x29691e02990 <col:5> 'void (long, int *, int *, int *)' Function 0x29691dffa38 'julian_to_date' 'void (long, int *, int *, int *)'
|   | |-ImplicitCastExpr 0x29691e02b40 <col:20> 'long' <LValueToRValue>
|   | | `-DeclRefExpr 0x29691e029b0 <col:20> 'long' lvalue Var 0x29691e02668 'time_jd' 'long'
|   | |-UnaryOperator 0x29691e02a08 <col:29, col:30> 'int *' prefix '&' cannot overflow
|   | | `-DeclRefExpr 0x29691e029d0 <col:30> 'int' lvalue Var 0x29691e024a8 'time_year' 'int'
|   | |-UnaryOperator 0x29691e02a58 <col:41, col:42> 'int *' prefix '&' cannot overflow
|   | | `-DeclRefExpr 0x29691e02a20 <col:42> 'int' lvalue Var 0x29691e02528 'time_month' 'int'
|   | `-UnaryOperator 0x29691e02aa8 <col:54, col:55> 'int *' prefix '&' cannot overflow
|   |   `-DeclRefExpr 0x29691e02a70 <col:55> 'int' lvalue Var 0x29691e025a8 'time_day' 'int'
|   |-IfStmt 0x29691e02cb0 <line:85:5, line:86:16>
|   | |-BinaryOperator 0x29691e02c58 <line:85:9, col:41> 'int' '||'
|   | | |-BinaryOperator 0x29691e02bb8 <col:9, col:21> 'int' '<'
|   | | | |-ImplicitCastExpr 0x29691e02ba0 <col:9> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x29691e02b58 <col:9> 'int' lvalue Var 0x29691e024a8 'time_year' 'int'
|   | | | `-IntegerLiteral 0x29691e02b78 <col:21> 'int' 1900
|   | | `-BinaryOperator 0x29691e02c38 <col:29, col:41> 'int' '>'
|   | |   |-ImplicitCastExpr 0x29691e02c20 <col:29> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x29691e02bd8 <col:29> 'int' lvalue Var 0x29691e024a8 'time_year' 'int'
|   | |   `-IntegerLiteral 0x29691e02bf8 <col:41> 'int' 9999
|   | `-ReturnStmt 0x29691e02ca0 <line:86:9, col:16>
|   |   `-IntegerLiteral 0x29691e02c78 <col:16> 'int' 0
|   `-ReturnStmt 0x29691e04168 <line:98:5, col:12>
|     `-IntegerLiteral 0x29691e04140 <col:12> 'int' 1
|-FunctionDecl 0x29691e04520 <line:102:1, line:130:1> line:102:5 OPENSSL_gmtime_diff 'int (int *, int *, const struct tm *, const struct tm *)'
| |-ParmVarDecl 0x29691e041d0 <col:25, col:30> col:30 used pday 'int *'
| |-ParmVarDecl 0x29691e04250 <col:36, col:41> col:41 used psec 'int *'
| |-ParmVarDecl 0x29691e042e0 <line:103:25, col:42> col:42 used from 'const struct tm *'
| |-ParmVarDecl 0x29691e04370 <col:48, col:65> col:65 used to 'const struct tm *'
| `-CompoundStmt 0x29691dfe730 <line:104:1, line:130:1>
|   |-DeclStmt 0x29691e04798 <line:105:5, col:35>
|   | |-VarDecl 0x29691e04610 <col:5, col:9> col:9 used from_sec 'int'
|   | |-VarDecl 0x29691e04690 <col:5, col:19> col:19 used to_sec 'int'
|   | `-VarDecl 0x29691e04710 <col:5, col:27> col:27 used diff_sec 'int'
|   |-DeclStmt 0x29691e04950 <line:106:5, col:34>
|   | |-VarDecl 0x29691e047c8 <col:5, col:10> col:10 used from_jd 'long'
|   | |-VarDecl 0x29691e04848 <col:5, col:19> col:19 used to_jd 'long'
|   | `-VarDecl 0x29691e048c8 <col:5, col:26> col:26 used diff_day 'long'
|   |-IfStmt 0x29691e04b78 <line:107:5, line:108:16>
|   | |-UnaryOperator 0x29691e04b28 <line:107:9, col:52> 'int' prefix '!' cannot overflow
|   | | `-CallExpr 0x29691e04ab0 <col:10, col:52> 'int'
|   | |   |-ImplicitCastExpr 0x29691e04a98 <col:10> 'int (*)(const struct tm *, int, long, long *, int *)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x29691e04968 <col:10> 'int (const struct tm *, int, long, long *, int *)' Function 0x29691dfff90 'julian_adj' 'int (const struct tm *, int, long, long *, int *)'
|   | |   |-ImplicitCastExpr 0x29691e04af8 <col:21> 'const struct tm *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x29691e04988 <col:21> 'const struct tm *' lvalue ParmVar 0x29691e042e0 'from' 'const struct tm *'
|   | |   |-IntegerLiteral 0x29691e049a8 <col:27> 'int' 0
|   | |   |-ImplicitCastExpr 0x29691e04b10 <col:30> 'long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x29691e049d0 <col:30> 'int' 0
|   | |   |-UnaryOperator 0x29691e04a30 <col:33, col:34> 'long *' prefix '&' cannot overflow
|   | |   | `-DeclRefExpr 0x29691e049f8 <col:34> 'long' lvalue Var 0x29691e047c8 'from_jd' 'long'
|   | |   `-UnaryOperator 0x29691e04a80 <col:43, col:44> 'int *' prefix '&' cannot overflow
|   | |     `-DeclRefExpr 0x29691e04a48 <col:44> 'int' lvalue Var 0x29691e04610 'from_sec' 'int'
|   | `-ReturnStmt 0x29691e04b68 <line:108:9, col:16>
|   |   `-IntegerLiteral 0x29691e04b40 <col:16> 'int' 0
|   |-IfStmt 0x29691e04da0 <line:109:5, line:110:16>
|   | |-UnaryOperator 0x29691e04d50 <line:109:9, col:46> 'int' prefix '!' cannot overflow
|   | | `-CallExpr 0x29691e04cd8 <col:10, col:46> 'int'
|   | |   |-ImplicitCastExpr 0x29691e04cc0 <col:10> 'int (*)(const struct tm *, int, long, long *, int *)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x29691e04b90 <col:10> 'int (const struct tm *, int, long, long *, int *)' Function 0x29691dfff90 'julian_adj' 'int (const struct tm *, int, long, long *, int *)'
|   | |   |-ImplicitCastExpr 0x29691e04d20 <col:21> 'const struct tm *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x29691e04bb0 <col:21> 'const struct tm *' lvalue ParmVar 0x29691e04370 'to' 'const struct tm *'
|   | |   |-IntegerLiteral 0x29691e04bd0 <col:25> 'int' 0
|   | |   |-ImplicitCastExpr 0x29691e04d38 <col:28> 'long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x29691e04bf8 <col:28> 'int' 0
|   | |   |-UnaryOperator 0x29691e04c58 <col:31, col:32> 'long *' prefix '&' cannot overflow
|   | |   | `-DeclRefExpr 0x29691e04c20 <col:32> 'long' lvalue Var 0x29691e04848 'to_jd' 'long'
|   | |   `-UnaryOperator 0x29691e04ca8 <col:39, col:40> 'int *' prefix '&' cannot overflow
|   | |     `-DeclRefExpr 0x29691e04c70 <col:40> 'int' lvalue Var 0x29691e04690 'to_sec' 'int'
|   | `-ReturnStmt 0x29691e04d90 <line:110:9, col:16>
|   |   `-IntegerLiteral 0x29691e04d68 <col:16> 'int' 0
|   |-BinaryOperator 0x29691e04e80 <line:111:5, col:24> 'long' '='
|   | |-DeclRefExpr 0x29691e04db8 <col:5> 'long' lvalue Var 0x29691e048c8 'diff_day' 'long'
|   | `-BinaryOperator 0x29691e04e60 <col:16, col:24> 'long' '-'
|   |   |-ImplicitCastExpr 0x29691e04e30 <col:16> 'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x29691e04df0 <col:16> 'long' lvalue Var 0x29691e04848 'to_jd' 'long'
|   |   `-ImplicitCastExpr 0x29691e04e48 <col:24> 'long' <LValueToRValue>
|   |     `-DeclRefExpr 0x29691e04e10 <col:24> 'long' lvalue Var 0x29691e047c8 'from_jd' 'long'
|   |-BinaryOperator 0x29691e04f68 <line:112:5, col:25> 'int' '='
|   | |-DeclRefExpr 0x29691e04ea0 <col:5> 'int' lvalue Var 0x29691e04710 'diff_sec' 'int'
|   | `-BinaryOperator 0x29691e04f48 <col:16, col:25> 'int' '-'
|   |   |-ImplicitCastExpr 0x29691e04f18 <col:16> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x29691e04ed8 <col:16> 'int' lvalue Var 0x29691e04690 'to_sec' 'int'
|   |   `-ImplicitCastExpr 0x29691e04f30 <col:25> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x29691e04ef8 <col:25> 'int' lvalue Var 0x29691e04610 'from_sec' 'int'
|   |-IfStmt 0x29691dfe1e0 <line:114:5, line:117:5>
|   | |-BinaryOperator 0x29691e050a0 <line:114:9, col:36> 'int' '&&'
|   | | |-BinaryOperator 0x29691e05000 <col:9, col:20> 'int' '>'
|   | | | |-ImplicitCastExpr 0x29691e04fd0 <col:9> 'long' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x29691e04f88 <col:9> 'long' lvalue Var 0x29691e048c8 'diff_day' 'long'
|   | | | `-ImplicitCastExpr 0x29691e04fe8 <col:20> 'long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x29691e04fa8 <col:20> 'int' 0
|   | | `-BinaryOperator 0x29691e05080 <col:25, col:36> 'int' '<'
|   | |   |-ImplicitCastExpr 0x29691e05068 <col:25> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x29691e05020 <col:25> 'int' lvalue Var 0x29691e04710 'diff_sec' 'int'
|   | |   `-IntegerLiteral 0x29691e05040 <col:36> 'int' 0
|   | `-CompoundStmt 0x29691dfe1c0 <col:39, line:117:5>
|   |   |-UnaryOperator 0x29691dfe080 <line:115:9, col:17> 'long' postfix '--'
|   |   | `-DeclRefExpr 0x29691dfe060 <col:9> 'long' lvalue Var 0x29691e048c8 'diff_day' 'long'
|   |   `-CompoundAssignOperator 0x29691dfe190 <line:116:9, line:65:35> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     |-DeclRefExpr 0x29691dfe098 <line:116:9> 'int' lvalue Var 0x29691e04710 'diff_sec' 'int'
|   |     `-ParenExpr 0x29691dfe170 <line:65:22, col:35> 'int'
|   |       `-BinaryOperator 0x29691dfe150 <col:23, col:33> 'int' '*'
|   |         |-BinaryOperator 0x29691dfe108 <col:23, col:28> 'int' '*'
|   |         | |-IntegerLiteral 0x29691dfe0b8 <col:23> 'int' 24
|   |         | `-IntegerLiteral 0x29691dfe0e0 <col:28> 'int' 60
|   |         `-IntegerLiteral 0x29691dfe128 <col:33> 'int' 60
|   |-IfStmt 0x29691dfe4b0 <line:118:5, line:121:5>
|   | |-BinaryOperator 0x29691dfe310 <line:118:9, col:36> 'int' '&&'
|   | | |-BinaryOperator 0x29691dfe270 <col:9, col:20> 'int' '<'
|   | | | |-ImplicitCastExpr 0x29691dfe240 <col:9> 'long' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x29691dfe1f8 <col:9> 'long' lvalue Var 0x29691e048c8 'diff_day' 'long'
|   | | | `-ImplicitCastExpr 0x29691dfe258 <col:20> 'long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x29691dfe218 <col:20> 'int' 0
|   | | `-BinaryOperator 0x29691dfe2f0 <col:25, col:36> 'int' '>'
|   | |   |-ImplicitCastExpr 0x29691dfe2d8 <col:25> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x29691dfe290 <col:25> 'int' lvalue Var 0x29691e04710 'diff_sec' 'int'
|   | |   `-IntegerLiteral 0x29691dfe2b0 <col:36> 'int' 0
|   | `-CompoundStmt 0x29691dfe490 <col:39, line:121:5>
|   |   |-UnaryOperator 0x29691dfe350 <line:119:9, col:17> 'long' postfix '++'
|   |   | `-DeclRefExpr 0x29691dfe330 <col:9> 'long' lvalue Var 0x29691e048c8 'diff_day' 'long'
|   |   `-CompoundAssignOperator 0x29691dfe460 <line:120:9, line:65:35> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     |-DeclRefExpr 0x29691dfe368 <line:120:9> 'int' lvalue Var 0x29691e04710 'diff_sec' 'int'
|   |     `-ParenExpr 0x29691dfe440 <line:65:22, col:35> 'int'
|   |       `-BinaryOperator 0x29691dfe420 <col:23, col:33> 'int' '*'
|   |         |-BinaryOperator 0x29691dfe3d8 <col:23, col:28> 'int' '*'
|   |         | |-IntegerLiteral 0x29691dfe388 <col:23> 'int' 24
|   |         | `-IntegerLiteral 0x29691dfe3b0 <col:28> 'int' 60
|   |         `-IntegerLiteral 0x29691dfe3f8 <col:33> 'int' 60
|   |-IfStmt 0x29691dfe5e8 <line:123:5, line:124:22>
|   | |-ImplicitCastExpr 0x29691dfe4e8 <line:123:9> 'int *' <LValueToRValue>
|   | | `-DeclRefExpr 0x29691dfe4c8 <col:9> 'int *' lvalue ParmVar 0x29691e041d0 'pday' 'int *'
|   | `-BinaryOperator 0x29691dfe5c8 <line:124:9, col:22> 'int' '='
|   |   |-UnaryOperator 0x29691dfe538 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
|   |   | `-ImplicitCastExpr 0x29691dfe520 <col:10> 'int *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x29691dfe500 <col:10> 'int *' lvalue ParmVar 0x29691e041d0 'pday' 'int *'
|   |   `-CStyleCastExpr 0x29691dfe5a0 <col:17, col:22> 'int' <IntegralCast>
|   |     `-ImplicitCastExpr 0x29691dfe588 <col:22> 'long' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0x29691dfe550 <col:22> 'long' lvalue Var 0x29691e048c8 'diff_day' 'long'
|   |-IfStmt 0x29691dfe6e0 <line:125:5, line:126:17>
|   | |-ImplicitCastExpr 0x29691dfe620 <line:125:9> 'int *' <LValueToRValue>
|   | | `-DeclRefExpr 0x29691dfe600 <col:9> 'int *' lvalue ParmVar 0x29691e04250 'psec' 'int *'
|   | `-BinaryOperator 0x29691dfe6c0 <line:126:9, col:17> 'int' '='
|   |   |-UnaryOperator 0x29691dfe670 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
|   |   | `-ImplicitCastExpr 0x29691dfe658 <col:10> 'int *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x29691dfe638 <col:10> 'int *' lvalue ParmVar 0x29691e04250 'psec' 'int *'
|   |   `-ImplicitCastExpr 0x29691dfe6a8 <col:17> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x29691dfe688 <col:17> 'int' lvalue Var 0x29691e04710 'diff_sec' 'int'
|   `-ReturnStmt 0x29691dfe720 <line:128:5, col:12>
|     `-IntegerLiteral 0x29691dfe6f8 <col:12> 'int' 1
|-FunctionDecl 0x29691dfeaf0 prev 0x29691dfff90 <line:133:1, line:174:1> line:133:12 used julian_adj 'int (const struct tm *, int, long, long *, int *)' static
| |-ParmVarDecl 0x29691dfe7c0 <col:23, col:40> col:40 used tm 'const struct tm *'
| |-ParmVarDecl 0x29691dfe840 <col:44, col:48> col:48 used off_day 'int'
| |-ParmVarDecl 0x29691dfe8c0 <col:57, col:62> col:62 used offset_sec 'long'
| |-ParmVarDecl 0x29691dfe940 <line:134:23, col:29> col:29 used pday 'long *'
| |-ParmVarDecl 0x29691dfe9c0 <col:35, col:40> col:40 used psec 'int *'
| `-CompoundStmt 0x29691e070f0 <line:135:1, line:174:1>
|   |-DeclStmt 0x29691dfecd0 <line:136:5, col:31>
|   | |-VarDecl 0x29691dfebd0 <col:5, col:9> col:9 used offset_hms 'int'
|   | `-VarDecl 0x29691dfec50 <col:5, col:21> col:21 used offset_day 'int'
|   |-DeclStmt 0x29691dfed68 <line:137:5, col:17>
|   | `-VarDecl 0x29691dfed00 <col:5, col:10> col:10 used time_jd 'long'
|   |-DeclStmt 0x29691dfef20 <line:138:5, col:40>
|   | |-VarDecl 0x29691dfed98 <col:5, col:9> col:9 used time_year 'int'
|   | |-VarDecl 0x29691dfee18 <col:5, col:20> col:20 used time_month 'int'
|   | `-VarDecl 0x29691dfee98 <col:5, col:32> col:32 used time_day 'int'
|   |-BinaryOperator 0x29691e06168 <line:140:5, line:65:35> 'int' '='
|   | |-DeclRefExpr 0x29691dfef38 <line:140:5> 'int' lvalue Var 0x29691dfec50 'offset_day' 'int'
|   | `-ImplicitCastExpr 0x29691e06150 <col:18, line:65:35> 'int' <IntegralCast>
|   |   `-BinaryOperator 0x29691e06130 <line:140:18, line:65:35> 'long' '/'
|   |     |-ImplicitCastExpr 0x29691e06100 <line:140:18> 'long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x29691dfef70 <col:18> 'long' lvalue ParmVar 0x29691dfe8c0 'offset_sec' 'long'
|   |     `-ImplicitCastExpr 0x29691e06118 <line:65:22, col:35> 'long' <IntegralCast>
|   |       `-ParenExpr 0x29691e060e0 <col:22, col:35> 'int'
|   |         `-BinaryOperator 0x29691dff028 <col:23, col:33> 'int' '*'
|   |           |-BinaryOperator 0x29691dfefe0 <col:23, col:28> 'int' '*'
|   |           | |-IntegerLiteral 0x29691dfef90 <col:23> 'int' 24
|   |           | `-IntegerLiteral 0x29691dfefb8 <col:28> 'int' 60
|   |           `-IntegerLiteral 0x29691dff000 <col:33> 'int' 60
|   |-BinaryOperator 0x29691e06398 <line:142:5, col:57> 'int' '='
|   | |-DeclRefExpr 0x29691e06188 <col:5> 'int' lvalue Var 0x29691dfebd0 'offset_hms' 'int'
|   | `-ImplicitCastExpr 0x29691e06380 <col:18, col:57> 'int' <IntegralCast>
|   |   `-BinaryOperator 0x29691e06360 <col:18, col:57> 'long' '-'
|   |     |-ImplicitCastExpr 0x29691e06330 <col:18> 'long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x29691e061c0 <col:18> 'long' lvalue ParmVar 0x29691dfe8c0 'offset_sec' 'long'
|   |     `-ImplicitCastExpr 0x29691e06348 <col:31, col:57> 'long' <IntegralCast>
|   |       `-ParenExpr 0x29691e06310 <col:31, col:57> 'int'
|   |         `-BinaryOperator 0x29691e062f0 <col:32, line:65:35> 'int' '*'
|   |           |-ImplicitCastExpr 0x29691e062d8 <line:142:32> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x29691e061e0 <col:32> 'int' lvalue Var 0x29691dfec50 'offset_day' 'int'
|   |           `-ParenExpr 0x29691e062b8 <line:65:22, col:35> 'int'
|   |             `-BinaryOperator 0x29691e06298 <col:23, col:33> 'int' '*'
|   |               |-BinaryOperator 0x29691e06250 <col:23, col:28> 'int' '*'
|   |               | |-IntegerLiteral 0x29691e06200 <col:23> 'int' 24
|   |               | `-IntegerLiteral 0x29691e06228 <col:28> 'int' 60
|   |               `-IntegerLiteral 0x29691e06270 <col:33> 'int' 60
|   |-CompoundAssignOperator 0x29691e06410 <line:143:5, col:19> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-DeclRefExpr 0x29691e063b8 <col:5> 'int' lvalue Var 0x29691dfec50 'offset_day' 'int'
|   | `-ImplicitCastExpr 0x29691e063f8 <col:19> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x29691e063d8 <col:19> 'int' lvalue ParmVar 0x29691dfe840 'off_day' 'int'
|   |-IfStmt 0x29691e06a20 <line:147:5, line:153:5> has_else
|   | |-BinaryOperator 0x29691e06668 <line:147:9, line:65:35> 'int' '>='
|   | | |-ImplicitCastExpr 0x29691e06650 <line:147:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x29691e06558 <col:9> 'int' lvalue Var 0x29691dfebd0 'offset_hms' 'int'
|   | | `-ParenExpr 0x29691e06630 <line:65:22, col:35> 'int'
|   | |   `-BinaryOperator 0x29691e06610 <col:23, col:33> 'int' '*'
|   | |     |-BinaryOperator 0x29691e065c8 <col:23, col:28> 'int' '*'
|   | |     | |-IntegerLiteral 0x29691e06578 <col:23> 'int' 24
|   | |     | `-IntegerLiteral 0x29691e065a0 <col:28> 'int' 60
|   | |     `-IntegerLiteral 0x29691e065e8 <col:33> 'int' 60
|   | |-CompoundStmt 0x29691e067e8 <line:147:37, line:150:5>
|   | | |-UnaryOperator 0x29691e066a8 <line:148:9, col:19> 'int' postfix '++'
|   | | | `-DeclRefExpr 0x29691e06688 <col:9> 'int' lvalue Var 0x29691dfec50 'offset_day' 'int'
|   | | `-CompoundAssignOperator 0x29691e067b8 <line:149:9, line:65:35> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |   |-DeclRefExpr 0x29691e066c0 <line:149:9> 'int' lvalue Var 0x29691dfebd0 'offset_hms' 'int'
|   | |   `-ParenExpr 0x29691e06798 <line:65:22, col:35> 'int'
|   | |     `-BinaryOperator 0x29691e06778 <col:23, col:33> 'int' '*'
|   | |       |-BinaryOperator 0x29691e06730 <col:23, col:28> 'int' '*'
|   | |       | |-IntegerLiteral 0x29691e066e0 <col:23> 'int' 24
|   | |       | `-IntegerLiteral 0x29691e06708 <col:28> 'int' 60
|   | |       `-IntegerLiteral 0x29691e06750 <col:33> 'int' 60
|   | `-IfStmt 0x29691e06a08 <line:150:12, line:153:5>
|   |   |-BinaryOperator 0x29691e06868 <line:150:16, col:29> 'int' '<'
|   |   | |-ImplicitCastExpr 0x29691e06850 <col:16> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x29691e06808 <col:16> 'int' lvalue Var 0x29691dfebd0 'offset_hms' 'int'
|   |   | `-IntegerLiteral 0x29691e06828 <col:29> 'int' 0
|   |   `-CompoundStmt 0x29691e069e8 <col:32, line:153:5>
|   |     |-UnaryOperator 0x29691e068a8 <line:151:9, col:19> 'int' postfix '--'
|   |     | `-DeclRefExpr 0x29691e06888 <col:9> 'int' lvalue Var 0x29691dfec50 'offset_day' 'int'
|   |     `-CompoundAssignOperator 0x29691e069b8 <line:152:9, line:65:35> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |       |-DeclRefExpr 0x29691e068c0 <line:152:9> 'int' lvalue Var 0x29691dfebd0 'offset_hms' 'int'
|   |       `-ParenExpr 0x29691e06998 <line:65:22, col:35> 'int'
|   |         `-BinaryOperator 0x29691e06978 <col:23, col:33> 'int' '*'
|   |           |-BinaryOperator 0x29691e06930 <col:23, col:28> 'int' '*'
|   |           | |-IntegerLiteral 0x29691e068e0 <col:23> 'int' 24
|   |           | `-IntegerLiteral 0x29691e06908 <col:28> 'int' 60
|   |           `-IntegerLiteral 0x29691e06950 <col:33> 'int' 60
|   |-BinaryOperator 0x29691e06d60 <line:163:5, col:61> 'long' '='
|   | |-DeclRefExpr 0x29691e06be8 <col:5> 'long' lvalue Var 0x29691dfed00 'time_jd' 'long'
|   | `-CallExpr 0x29691e06ce0 <col:15, col:61> 'long'
|   |   |-ImplicitCastExpr 0x29691e06cc8 <col:15> 'long (*)(int, int, int)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x29691e06c20 <col:15> 'long (int, int, int)' Function 0x29691dff680 'date_to_julian' 'long (int, int, int)'
|   |   |-ImplicitCastExpr 0x29691e06d18 <col:30> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x29691e06c40 <col:30> 'int' lvalue Var 0x29691dfed98 'time_year' 'int'
|   |   |-ImplicitCastExpr 0x29691e06d30 <col:41> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x29691e06c60 <col:41> 'int' lvalue Var 0x29691dfee18 'time_month' 'int'
|   |   `-ImplicitCastExpr 0x29691e06d48 <col:53> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x29691e06c80 <col:53> 'int' lvalue Var 0x29691dfee98 'time_day' 'int'
|   |-CompoundAssignOperator 0x29691e06df0 <line:166:5, col:16> 'long' '+=' ComputeLHSTy='long' ComputeResultTy='long'
|   | |-DeclRefExpr 0x29691e06d80 <col:5> 'long' lvalue Var 0x29691dfed00 'time_jd' 'long'
|   | `-ImplicitCastExpr 0x29691e06dd8 <col:16> 'long' <IntegralCast>
|   |   `-ImplicitCastExpr 0x29691e06dc0 <col:16> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x29691e06da0 <col:16> 'int' lvalue Var 0x29691dfec50 'offset_day' 'int'
|   |-IfStmt 0x29691e06ef0 <line:168:5, line:169:16>
|   | |-BinaryOperator 0x29691e06e98 <line:168:9, col:19> 'int' '<'
|   | | |-ImplicitCastExpr 0x29691e06e68 <col:9> 'long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x29691e06e20 <col:9> 'long' lvalue Var 0x29691dfed00 'time_jd' 'long'
|   | | `-ImplicitCastExpr 0x29691e06e80 <col:19> 'long' <IntegralCast>
|   | |   `-IntegerLiteral 0x29691e06e40 <col:19> 'int' 0
|   | `-ReturnStmt 0x29691e06ee0 <line:169:9, col:16>
|   |   `-IntegerLiteral 0x29691e06eb8 <col:16> 'int' 0
|   |-BinaryOperator 0x29691e06f90 <line:171:5, col:13> 'long' '='
|   | |-UnaryOperator 0x29691e06f40 <col:5, col:6> 'long' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x29691e06f28 <col:6> 'long *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x29691e06f08 <col:6> 'long *' lvalue ParmVar 0x29691dfe940 'pday' 'long *'
|   | `-ImplicitCastExpr 0x29691e06f78 <col:13> 'long' <LValueToRValue>
|   |   `-DeclRefExpr 0x29691e06f58 <col:13> 'long' lvalue Var 0x29691dfed00 'time_jd' 'long'
|   |-BinaryOperator 0x29691e07038 <line:172:5, col:13> 'int' '='
|   | |-UnaryOperator 0x29691e06fe8 <col:5, col:6> 'int' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x29691e06fd0 <col:6> 'int *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x29691e06fb0 <col:6> 'int *' lvalue ParmVar 0x29691dfe9c0 'psec' 'int *'
|   | `-ImplicitCastExpr 0x29691e07020 <col:13> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x29691e07000 <col:13> 'int' lvalue Var 0x29691dfebd0 'offset_hms' 'int'
|   `-ReturnStmt 0x29691e07080 <line:173:5, col:12>
|     `-IntegerLiteral 0x29691e07058 <col:12> 'int' 1
|-FunctionDecl 0x29691e07370 prev 0x29691dff680 <line:179:1, line:184:1> line:179:13 used date_to_julian 'long (int, int, int)' static
| |-ParmVarDecl 0x29691e07180 <col:28, col:32> col:32 used y 'int'
| |-ParmVarDecl 0x29691e07200 <col:35, col:39> col:39 used m 'int'
| |-ParmVarDecl 0x29691e07280 <col:42, col:46> col:46 used d 'int'
| `-CompoundStmt 0x29691e07d08 <line:180:1, line:184:1>
|   `-ReturnStmt 0x29691e07cf8 <line:181:5, line:183:60>
|     `-ImplicitCastExpr 0x29691e07ce0 <line:181:12, line:183:60> 'long' <IntegralCast>
|       `-BinaryOperator 0x29691e07cc0 <line:181:12, line:183:60> 'int' '-'
|         |-BinaryOperator 0x29691e07c78 <line:181:12, line:183:56> 'int' '+'
|         | |-BinaryOperator 0x29691e07c20 <line:181:12, line:183:52> 'int' '-'
|         | | |-BinaryOperator 0x29691e07940 <line:181:12, line:182:50> 'int' '+'
|         | | | |-BinaryOperator 0x29691e07660 <line:181:12, col:50> 'int' '/'
|         | | | | |-ParenExpr 0x29691e07618 <col:12, col:46> 'int'
|         | | | | | `-BinaryOperator 0x29691e075f8 <col:13, col:45> 'int' '*'
|         | | | | |   |-IntegerLiteral 0x29691e07428 <col:13> 'int' 1461
|         | | | | |   `-ParenExpr 0x29691e075d8 <col:20, col:45> 'int'
|         | | | | |     `-BinaryOperator 0x29691e075b8 <col:21, col:43> 'int' '+'
|         | | | | |       |-BinaryOperator 0x29691e074b0 <col:21, col:25> 'int' '+'
|         | | | | |       | |-ImplicitCastExpr 0x29691e07498 <col:21> 'int' <LValueToRValue>
|         | | | | |       | | `-DeclRefExpr 0x29691e07450 <col:21> 'int' lvalue ParmVar 0x29691e07180 'y' 'int'
|         | | | | |       | `-IntegerLiteral 0x29691e07470 <col:25> 'int' 4800
|         | | | | |       `-BinaryOperator 0x29691e07598 <col:32, col:43> 'int' '/'
|         | | | | |         |-ParenExpr 0x29691e07550 <col:32, col:39> 'int'
|         | | | | |         | `-BinaryOperator 0x29691e07530 <col:33, col:37> 'int' '-'
|         | | | | |         |   |-ImplicitCastExpr 0x29691e07518 <col:33> 'int' <LValueToRValue>
|         | | | | |         |   | `-DeclRefExpr 0x29691e074d0 <col:33> 'int' lvalue ParmVar 0x29691e07200 'm' 'int'
|         | | | | |         |   `-IntegerLiteral 0x29691e074f0 <col:37> 'int' 14
|         | | | | |         `-IntegerLiteral 0x29691e07570 <col:43> 'int' 12
|         | | | | `-IntegerLiteral 0x29691e07638 <col:50> 'int' 4
|         | | | `-BinaryOperator 0x29691e07920 <line:182:9, col:50> 'int' '/'
|         | | |   |-ParenExpr 0x29691e078d8 <col:9, col:46> 'int'
|         | | |   | `-BinaryOperator 0x29691e078b8 <col:10, col:45> 'int' '*'
|         | | |   |   |-IntegerLiteral 0x29691e07680 <col:10> 'int' 367
|         | | |   |   `-ParenExpr 0x29691e07898 <col:16, col:45> 'int'
|         | | |   |     `-BinaryOperator 0x29691e07878 <col:17, col:44> 'int' '-'
|         | | |   |       |-BinaryOperator 0x29691e07708 <col:17, col:21> 'int' '-'
|         | | |   |       | |-ImplicitCastExpr 0x29691e076f0 <col:17> 'int' <LValueToRValue>
|         | | |   |       | | `-DeclRefExpr 0x29691e076a8 <col:17> 'int' lvalue ParmVar 0x29691e07200 'm' 'int'
|         | | |   |       | `-IntegerLiteral 0x29691e076c8 <col:21> 'int' 2
|         | | |   |       `-BinaryOperator 0x29691e07858 <col:25, col:44> 'int' '*'
|         | | |   |         |-IntegerLiteral 0x29691e07728 <col:25> 'int' 12
|         | | |   |         `-ParenExpr 0x29691e07838 <col:30, col:44> 'int'
|         | | |   |           `-BinaryOperator 0x29691e07818 <col:31, col:42> 'int' '/'
|         | | |   |             |-ParenExpr 0x29691e077d0 <col:31, col:38> 'int'
|         | | |   |             | `-BinaryOperator 0x29691e077b0 <col:32, col:36> 'int' '-'
|         | | |   |             |   |-ImplicitCastExpr 0x29691e07798 <col:32> 'int' <LValueToRValue>
|         | | |   |             |   | `-DeclRefExpr 0x29691e07750 <col:32> 'int' lvalue ParmVar 0x29691e07200 'm' 'int'
|         | | |   |             |   `-IntegerLiteral 0x29691e07770 <col:36> 'int' 14
|         | | |   |             `-IntegerLiteral 0x29691e077f0 <col:42> 'int' 12
|         | | |   `-IntegerLiteral 0x29691e078f8 <col:50> 'int' 12
|         | | `-BinaryOperator 0x29691e07c00 <line:183:9, col:52> 'int' '/'
|         | |   |-ParenExpr 0x29691e07bb8 <col:9, col:48> 'int'
|         | |   | `-BinaryOperator 0x29691e07b98 <col:10, col:47> 'int' '*'
|         | |   |   |-IntegerLiteral 0x29691e07960 <col:10> 'int' 3
|         | |   |   `-ParenExpr 0x29691e07b78 <col:14, col:47> 'int'
|         | |   |     `-BinaryOperator 0x29691e07b58 <col:15, col:44> 'int' '/'
|         | |   |       |-ParenExpr 0x29691e07b10 <col:15, col:40> 'int'
|         | |   |       | `-BinaryOperator 0x29691e07af0 <col:16, col:38> 'int' '+'
|         | |   |       |   |-BinaryOperator 0x29691e079e8 <col:16, col:20> 'int' '+'
|         | |   |       |   | |-ImplicitCastExpr 0x29691e079d0 <col:16> 'int' <LValueToRValue>
|         | |   |       |   | | `-DeclRefExpr 0x29691e07988 <col:16> 'int' lvalue ParmVar 0x29691e07180 'y' 'int'
|         | |   |       |   | `-IntegerLiteral 0x29691e079a8 <col:20> 'int' 4900
|         | |   |       |   `-BinaryOperator 0x29691e07ad0 <col:27, col:38> 'int' '/'
|         | |   |       |     |-ParenExpr 0x29691e07a88 <col:27, col:34> 'int'
|         | |   |       |     | `-BinaryOperator 0x29691e07a68 <col:28, col:32> 'int' '-'
|         | |   |       |     |   |-ImplicitCastExpr 0x29691e07a50 <col:28> 'int' <LValueToRValue>
|         | |   |       |     |   | `-DeclRefExpr 0x29691e07a08 <col:28> 'int' lvalue ParmVar 0x29691e07200 'm' 'int'
|         | |   |       |     |   `-IntegerLiteral 0x29691e07a28 <col:32> 'int' 14
|         | |   |       |     `-IntegerLiteral 0x29691e07aa8 <col:38> 'int' 12
|         | |   |       `-IntegerLiteral 0x29691e07b30 <col:44> 'int' 100
|         | |   `-IntegerLiteral 0x29691e07bd8 <col:52> 'int' 4
|         | `-ImplicitCastExpr 0x29691e07c60 <col:56> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x29691e07c40 <col:56> 'int' lvalue ParmVar 0x29691e07280 'd' 'int'
|         `-IntegerLiteral 0x29691e07c98 <col:60> 'int' 32075
`-FunctionDecl 0x29691e07fc0 prev 0x29691dffa38 <line:186:1, line:200:1> line:186:13 used julian_to_date 'void (long, int *, int *, int *)' static
  |-ParmVarDecl 0x29691e07d38 <col:28, col:33> col:33 used jd 'long'
  |-ParmVarDecl 0x29691e07db8 <col:37, col:42> col:42 used y 'int *'
  |-ParmVarDecl 0x29691e07e38 <col:45, col:50> col:50 used m 'int *'
  |-ParmVarDecl 0x29691e07eb8 <col:53, col:58> col:58 used d 'int *'
  `-CompoundStmt 0x29691e093d8 <line:187:1, line:200:1>
    |-DeclStmt 0x29691e08200 <line:188:5, col:24>
    | `-VarDecl 0x29691e08100 <col:5, col:19> col:10 used L 'long' cinit
    |   `-BinaryOperator 0x29691e081e0 <col:14, col:19> 'long' '+'
    |     |-ImplicitCastExpr 0x29691e081b0 <col:14> 'long' <LValueToRValue>
    |     | `-DeclRefExpr 0x29691e08168 <col:14> 'long' lvalue ParmVar 0x29691e07d38 'jd' 'long'
    |     `-ImplicitCastExpr 0x29691e081c8 <col:19> 'long' <IntegralCast>
    |       `-IntegerLiteral 0x29691e08188 <col:19> 'int' 68569
    |-DeclStmt 0x29691e083c8 <line:189:5, col:30>
    | `-VarDecl 0x29691e08230 <col:5, col:24> col:10 used n 'long' cinit
    |   `-BinaryOperator 0x29691e083a8 <col:14, col:24> 'long' '/'
    |     |-ParenExpr 0x29691e08348 <col:14, col:20> 'long'
    |     | `-BinaryOperator 0x29691e08328 <col:15, col:19> 'long' '*'
    |     |   |-ImplicitCastExpr 0x29691e08310 <col:15> 'long' <IntegralCast>
    |     |   | `-IntegerLiteral 0x29691e08298 <col:15> 'int' 4
    |     |   `-ImplicitCastExpr 0x29691e082f8 <col:19> 'long' <LValueToRValue>
    |     |     `-DeclRefExpr 0x29691e082c0 <col:19> 'long' lvalue Var 0x29691e08100 'L' 'long'
    |     `-ImplicitCastExpr 0x29691e08390 <col:24> 'long' <IntegralCast>
    |       `-IntegerLiteral 0x29691e08368 <col:24> 'int' 146097
    |-DeclStmt 0x29691e084f8 <line:190:5, col:14>
    | |-VarDecl 0x29691e083f8 <col:5, col:10> col:10 used i 'long'
    | `-VarDecl 0x29691e08478 <col:5, col:13> col:13 used j 'long'
    |-BinaryOperator 0x29691e08718 <line:192:5, col:32> 'long' '='
    | |-DeclRefExpr 0x29691e08510 <col:5> 'long' lvalue Var 0x29691e08100 'L' 'long'
    | `-BinaryOperator 0x29691e086f8 <col:9, col:32> 'long' '-'
    |   |-ImplicitCastExpr 0x29691e086e0 <col:9> 'long' <LValueToRValue>
    |   | `-DeclRefExpr 0x29691e08530 <col:9> 'long' lvalue Var 0x29691e08100 'L' 'long'
    |   `-BinaryOperator 0x29691e086c0 <col:13, col:32> 'long' '/'
    |     |-ParenExpr 0x29691e08660 <col:13, col:28> 'long'
    |     | `-BinaryOperator 0x29691e08640 <col:14, col:27> 'long' '+'
    |     |   |-BinaryOperator 0x29691e085e0 <col:14, col:23> 'long' '*'
    |     |   | |-ImplicitCastExpr 0x29691e085c8 <col:14> 'long' <IntegralCast>
    |     |   | | `-IntegerLiteral 0x29691e08550 <col:14> 'int' 146097
    |     |   | `-ImplicitCastExpr 0x29691e085b0 <col:23> 'long' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x29691e08578 <col:23> 'long' lvalue Var 0x29691e08230 'n' 'long'
    |     |   `-ImplicitCastExpr 0x29691e08628 <col:27> 'long' <IntegralCast>
    |     |     `-IntegerLiteral 0x29691e08600 <col:27> 'int' 3
    |     `-ImplicitCastExpr 0x29691e086a8 <col:32> 'long' <IntegralCast>
    |       `-IntegerLiteral 0x29691e08680 <col:32> 'int' 4
    |-BinaryOperator 0x29691e08908 <line:193:5, col:28> 'long' '='
    | |-DeclRefExpr 0x29691e08738 <col:5> 'long' lvalue Var 0x29691e083f8 'i' 'long'
    | `-BinaryOperator 0x29691e088e8 <col:9, col:28> 'long' '/'
    |   |-ParenExpr 0x29691e08888 <col:9, col:24> 'long'
    |   | `-BinaryOperator 0x29691e08868 <col:10, col:23> 'long' '*'
    |   |   |-ImplicitCastExpr 0x29691e08850 <col:10> 'long' <IntegralCast>
    |   |   | `-IntegerLiteral 0x29691e08770 <col:10> 'int' 4000
    |   |   `-ParenExpr 0x29691e08830 <col:17, col:23> 'long'
    |   |     `-BinaryOperator 0x29691e08810 <col:18, col:22> 'long' '+'
    |   |       |-ImplicitCastExpr 0x29691e087e0 <col:18> 'long' <LValueToRValue>
    |   |       | `-DeclRefExpr 0x29691e08798 <col:18> 'long' lvalue Var 0x29691e08100 'L' 'long'
    |   |       `-ImplicitCastExpr 0x29691e087f8 <col:22> 'long' <IntegralCast>
    |   |         `-IntegerLiteral 0x29691e087b8 <col:22> 'int' 1
    |   `-ImplicitCastExpr 0x29691e088d0 <col:28> 'long' <IntegralCast>
    |     `-IntegerLiteral 0x29691e088a8 <col:28> 'int' 1461001
    |-BinaryOperator 0x29691e08b18 <line:194:5, col:30> 'long' '='
    | |-DeclRefExpr 0x29691e08928 <col:5> 'long' lvalue Var 0x29691e08100 'L' 'long'
    | `-BinaryOperator 0x29691e08af8 <col:9, col:30> 'long' '+'
    |   |-BinaryOperator 0x29691e08a98 <col:9, col:26> 'long' '-'
    |   | |-ImplicitCastExpr 0x29691e08a80 <col:9> 'long' <LValueToRValue>
    |   | | `-DeclRefExpr 0x29691e08948 <col:9> 'long' lvalue Var 0x29691e08100 'L' 'long'
    |   | `-BinaryOperator 0x29691e08a60 <col:13, col:26> 'long' '/'
    |   |   |-ParenExpr 0x29691e08a00 <col:13, col:22> 'long'
    |   |   | `-BinaryOperator 0x29691e089e0 <col:14, col:21> 'long' '*'
    |   |   |   |-ImplicitCastExpr 0x29691e089c8 <col:14> 'long' <IntegralCast>
    |   |   |   | `-IntegerLiteral 0x29691e08968 <col:14> 'int' 1461
    |   |   |   `-ImplicitCastExpr 0x29691e089b0 <col:21> 'long' <LValueToRValue>
    |   |   |     `-DeclRefExpr 0x29691e08990 <col:21> 'long' lvalue Var 0x29691e083f8 'i' 'long'
    |   |   `-ImplicitCastExpr 0x29691e08a48 <col:26> 'long' <IntegralCast>
    |   |     `-IntegerLiteral 0x29691e08a20 <col:26> 'int' 4
    |   `-ImplicitCastExpr 0x29691e08ae0 <col:30> 'long' <IntegralCast>
    |     `-IntegerLiteral 0x29691e08ab8 <col:30> 'int' 31
    |-BinaryOperator 0x29691e08c88 <line:195:5, col:20> 'long' '='
    | |-DeclRefExpr 0x29691e08b38 <col:5> 'long' lvalue Var 0x29691e08478 'j' 'long'
    | `-BinaryOperator 0x29691e08c68 <col:9, col:20> 'long' '/'
    |   |-ParenExpr 0x29691e08c08 <col:9, col:16> 'long'
    |   | `-BinaryOperator 0x29691e08be8 <col:10, col:15> 'long' '*'
    |   |   |-ImplicitCastExpr 0x29691e08bd0 <col:10> 'long' <IntegralCast>
    |   |   | `-IntegerLiteral 0x29691e08b70 <col:10> 'int' 80
    |   |   `-ImplicitCastExpr 0x29691e08bb8 <col:15> 'long' <LValueToRValue>
    |   |     `-DeclRefExpr 0x29691e08b98 <col:15> 'long' lvalue Var 0x29691e08100 'L' 'long'
    |   `-ImplicitCastExpr 0x29691e08c50 <col:20> 'long' <IntegralCast>
    |     `-IntegerLiteral 0x29691e08c28 <col:20> 'int' 2447
    |-BinaryOperator 0x29691e08e80 <line:196:5, col:27> 'int' '='
    | |-UnaryOperator 0x29691e08ce0 <col:5, col:6> 'int' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x29691e08cc8 <col:6> 'int *' <LValueToRValue>
    | |   `-DeclRefExpr 0x29691e08ca8 <col:6> 'int *' lvalue ParmVar 0x29691e07eb8 'd' 'int *'
    | `-ImplicitCastExpr 0x29691e08e68 <col:10, col:27> 'int' <IntegralCast>
    |   `-BinaryOperator 0x29691e08e48 <col:10, col:27> 'long' '-'
    |     |-ImplicitCastExpr 0x29691e08e30 <col:10> 'long' <LValueToRValue>
    |     | `-DeclRefExpr 0x29691e08cf8 <col:10> 'long' lvalue Var 0x29691e08100 'L' 'long'
    |     `-BinaryOperator 0x29691e08e10 <col:14, col:27> 'long' '/'
    |       |-ParenExpr 0x29691e08db0 <col:14, col:23> 'long'
    |       | `-BinaryOperator 0x29691e08d90 <col:15, col:22> 'long' '*'
    |       |   |-ImplicitCastExpr 0x29691e08d78 <col:15> 'long' <IntegralCast>
    |       |   | `-IntegerLiteral 0x29691e08d18 <col:15> 'int' 2447
    |       |   `-ImplicitCastExpr 0x29691e08d60 <col:22> 'long' <LValueToRValue>
    |       |     `-DeclRefExpr 0x29691e08d40 <col:22> 'long' lvalue Var 0x29691e08478 'j' 'long'
    |       `-ImplicitCastExpr 0x29691e08df8 <col:27> 'long' <IntegralCast>
    |         `-IntegerLiteral 0x29691e08dd0 <col:27> 'int' 80
    |-BinaryOperator 0x29691e08f58 <line:197:5, col:13> 'long' '='
    | |-DeclRefExpr 0x29691e08ea0 <col:5> 'long' lvalue Var 0x29691e08100 'L' 'long'
    | `-BinaryOperator 0x29691e08f38 <col:9, col:13> 'long' '/'
    |   |-ImplicitCastExpr 0x29691e08f08 <col:9> 'long' <LValueToRValue>
    |   | `-DeclRefExpr 0x29691e08ec0 <col:9> 'long' lvalue Var 0x29691e08478 'j' 'long'
    |   `-ImplicitCastExpr 0x29691e08f20 <col:13> 'long' <IntegralCast>
    |     `-IntegerLiteral 0x29691e08ee0 <col:13> 'int' 11
    |-BinaryOperator 0x29691e09168 <line:198:5, col:25> 'int' '='
    | |-UnaryOperator 0x29691e08fb0 <col:5, col:6> 'int' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x29691e08f98 <col:6> 'int *' <LValueToRValue>
    | |   `-DeclRefExpr 0x29691e08f78 <col:6> 'int *' lvalue ParmVar 0x29691e07e38 'm' 'int *'
    | `-ImplicitCastExpr 0x29691e09150 <col:10, col:25> 'int' <IntegralCast>
    |   `-BinaryOperator 0x29691e09130 <col:10, col:25> 'long' '-'
    |     |-BinaryOperator 0x29691e09040 <col:10, col:14> 'long' '+'
    |     | |-ImplicitCastExpr 0x29691e09010 <col:10> 'long' <LValueToRValue>
    |     | | `-DeclRefExpr 0x29691e08fc8 <col:10> 'long' lvalue Var 0x29691e08478 'j' 'long'
    |     | `-ImplicitCastExpr 0x29691e09028 <col:14> 'long' <IntegralCast>
    |     |   `-IntegerLiteral 0x29691e08fe8 <col:14> 'int' 2
    |     `-ParenExpr 0x29691e09110 <col:18, col:25> 'long'
    |       `-BinaryOperator 0x29691e090d8 <col:19, col:24> 'long' '*'
    |         |-ImplicitCastExpr 0x29691e090c0 <col:19> 'long' <IntegralCast>
    |         | `-IntegerLiteral 0x29691e09060 <col:19> 'int' 12
    |         `-ImplicitCastExpr 0x29691e090a8 <col:24> 'long' <LValueToRValue>
    |           `-DeclRefExpr 0x29691e09088 <col:24> 'long' lvalue Var 0x29691e08100 'L' 'long'
    `-BinaryOperator 0x29691e093b8 <line:199:5, col:31> 'int' '='
      |-UnaryOperator 0x29691e091c0 <col:5, col:6> 'int' lvalue prefix '*' cannot overflow
      | `-ImplicitCastExpr 0x29691e091a8 <col:6> 'int *' <LValueToRValue>
      |   `-DeclRefExpr 0x29691e09188 <col:6> 'int *' lvalue ParmVar 0x29691e07db8 'y' 'int *'
      `-ImplicitCastExpr 0x29691e093a0 <col:10, col:31> 'int' <IntegralCast>
        `-BinaryOperator 0x29691e09380 <col:10, col:31> 'long' '+'
          |-BinaryOperator 0x29691e09328 <col:10, col:27> 'long' '+'
          | |-BinaryOperator 0x29691e092d0 <col:10, col:23> 'long' '*'
          | | |-ImplicitCastExpr 0x29691e092b8 <col:10> 'long' <IntegralCast>
          | | | `-IntegerLiteral 0x29691e091d8 <col:10> 'int' 100
          | | `-ParenExpr 0x29691e09298 <col:16, col:23> 'long'
          | |   `-BinaryOperator 0x29691e09278 <col:17, col:21> 'long' '-'
          | |     |-ImplicitCastExpr 0x29691e09248 <col:17> 'long' <LValueToRValue>
          | |     | `-DeclRefExpr 0x29691e09200 <col:17> 'long' lvalue Var 0x29691e08230 'n' 'long'
          | |     `-ImplicitCastExpr 0x29691e09260 <col:21> 'long' <IntegralCast>
          | |       `-IntegerLiteral 0x29691e09220 <col:21> 'int' 49
          | `-ImplicitCastExpr 0x29691e09310 <col:27> 'long' <LValueToRValue>
          |   `-DeclRefExpr 0x29691e092f0 <col:27> 'long' lvalue Var 0x29691e083f8 'i' 'long'
          `-ImplicitCastExpr 0x29691e09368 <col:31> 'long' <LValueToRValue>
            `-DeclRefExpr 0x29691e09348 <col:31> 'long' lvalue Var 0x29691e08100 'L' 'long'
