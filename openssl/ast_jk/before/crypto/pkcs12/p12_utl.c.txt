TranslationUnitDecl 0x25a0b363fa8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x25a0b364840 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x25a0b364540 '__int128'
|-TypedefDecl 0x25a0b3648b0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x25a0b364560 'unsigned __int128'
|-TypedefDecl 0x25a0b364be8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x25a0b3649a0 'struct __NSConstantString_tag'
|   `-Record 0x25a0b364908 '__NSConstantString_tag'
|-TypedefDecl 0x25a0b364c58 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x25a0b364180 'unsigned long long'
|-TypedefDecl 0x25a0b364cf0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x25a0b364cb0 'char *'
|   `-BuiltinType 0x25a0b364040 'char'
|-TypedefDecl 0x25a0b364d60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x25a0b364cb0 'char *'
|   `-BuiltinType 0x25a0b364040 'char'
|-TypedefDecl 0x25a0b364e20 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x25a0b364180 'unsigned long long'
|-TypedefDecl 0x25a0b364e90 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x25a0b364cb0 'char *'
|   `-BuiltinType 0x25a0b364040 'char'
|-FunctionDecl 0x25a0cf02450 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x25a0cf024f0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x25a0cf02560 <col:21> Implicit
|-FunctionDecl 0x25a0cf025b8 prev 0x25a0cf02450 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x25a0cf022e0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x25a0cf026a8 <col:21> Inherited Implicit
|-TypedefDecl 0x25a0cf026e8 prev 0x25a0b364c58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x25a0b364180 'unsigned long long'
|-TypedefDecl 0x25a0cf02790 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x25a0cf02760 'size_t' sugar
|   |-Typedef 0x25a0cf026e8 'size_t'
|   `-BuiltinType 0x25a0b364180 'unsigned long long'
|-TypedefDecl 0x25a0cf02800 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x25a0b3640e0 'long long'
|-TypedefDecl 0x25a0cf02870 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x25a0b3640e0 'long long'
|-TypedefDecl 0x25a0cf028e0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x25a0b364120 'unsigned short'
|-TypedefDecl 0x25a0cf02950 <line:541:1, col:24> col:24 referenced wint_t 'unsigned short'
| `-BuiltinType 0x25a0b364120 'unsigned short'
|-TypedefDecl 0x25a0cf029c0 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x25a0b364120 'unsigned short'
|-TypedefDecl 0x25a0cf02a30 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x25a0b3640a0 'int'
|-TypedefDecl 0x25a0cf02aa0 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x25a0b3640c0 'long'
|-TypedefDecl 0x25a0cf02b10 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x25a0b3640e0 'long long'
|-TypedefDecl 0x25a0cf02ba0 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x25a0cf02b70 '__time64_t' sugar
|   |-Typedef 0x25a0cf02b10 '__time64_t'
|   `-BuiltinType 0x25a0b3640e0 'long long'
|-FunctionDecl 0x25a0cf02d18 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x25a0cf02f38 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x25a0cf3b360 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x25a0cf03078 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x25a0cf030f0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x25a0cf03168 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x25a0cf031e8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x25a0cf3b100 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x25a0cf3b440 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x25a0cf3b500 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x25a0cf3b670 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x25a0cf3b620 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x25a0cf3b5c0 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x25a0cf3b4e0 'struct threadlocaleinfostruct'
|       `-Record 0x25a0cf461b0 'threadlocaleinfostruct'
|-TypedefDecl 0x25a0cf3b780 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x25a0cf3b730 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x25a0cf3b6d0 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x25a0cf3b5a0 'struct threadmbcinfostruct'
|       `-Record 0x25a0cf3b500 'threadmbcinfostruct'
|-RecordDecl 0x25a0cf3b7d8 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x25a0cf3b890 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x25a0cf3b950 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x25a0cf3b9e0 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x25a0cf3ba70 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x25a0cf3bb28 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x25a0cf3bad0 'struct localeinfo_struct' sugar
|   `-RecordType 0x25a0cf3b930 'struct localeinfo_struct'
|     `-Record 0x25a0cf3b890 'localeinfo_struct'
|-TypedefDecl 0x25a0cf3bc00 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x25a0cf3bbb0 'struct localeinfo_struct *'
|   `-ElaboratedType 0x25a0cf3bad0 'struct localeinfo_struct' sugar
|     `-RecordType 0x25a0cf3b930 'struct localeinfo_struct'
|       `-Record 0x25a0cf3b890 'localeinfo_struct'
|-RecordDecl 0x25a0cf3bc78 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x25a0cf3bd30 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x25a0cf3bda8 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x25a0cf3be68 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x25a0cf3bf00 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x25a0cf3bf70 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x25a0cf3c028 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x25a0cf3bfd0 'struct localerefcount' sugar
|   `-RecordType 0x25a0cf3bd10 'struct localerefcount'
|     `-Record 0x25a0cf3bc78 'localerefcount'
|-RecordDecl 0x25a0cf461b0 prev 0x25a0cf3b440 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x25a0cf46230 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x25a0cf462a8 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x25a0cf46318 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x25a0cf46388 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x25a0cf463f8 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x25a0cf465b8 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x25a0cf46628 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x25a0cf46698 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x25a0cf46708 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x25a0cf46778 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x25a0cf467e8 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x25a0cf46840 parent 0x25a0b363fa8 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x25a0cf469d0 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x25a0cf46a40 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x25a0cf46ab0 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x25a0cf46b20 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x25a0cf46bc0 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x25a0cf46c30 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x25a0cf46d40 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x25a0cf46e78 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x25a0cf46f28 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x25a0cf46ed0 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x25a0cf3b4e0 'struct threadlocaleinfostruct'
|     `-Record 0x25a0cf461b0 'threadlocaleinfostruct'
|-RecordDecl 0x25a0cf46fc0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:63:1, line:72:9> line:63:8 struct _iobuf definition
| |-MaxFieldAlignmentAttr 0x25a0cf47080 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x25a0cf470f8 <line:64:9, col:15> col:15 _ptr 'char *'
| |-FieldDecl 0x25a0cf42170 <line:65:9, col:15> col:15 _cnt 'int'
| |-FieldDecl 0x25a0cf421e0 <line:66:9, col:15> col:15 _base 'char *'
| |-FieldDecl 0x25a0cf42250 <line:67:9, col:15> col:15 _flag 'int'
| |-FieldDecl 0x25a0cf422c0 <line:68:9, col:15> col:15 _file 'int'
| |-FieldDecl 0x25a0cf42330 <line:69:9, col:15> col:15 _charbuf 'int'
| |-FieldDecl 0x25a0cf423a0 <line:70:9, col:15> col:15 _bufsiz 'int'
| `-FieldDecl 0x25a0cf42410 <line:71:9, col:15> col:15 _tmpfname 'char *'
|-TypedefDecl 0x25a0cf424c0 <line:73:1, col:23> col:23 referenced FILE 'struct _iobuf':'struct _iobuf'
| `-ElaboratedType 0x25a0cf42470 'struct _iobuf' sugar
|   `-RecordType 0x25a0cf47060 'struct _iobuf'
|     `-Record 0x25a0cf46fc0 '_iobuf'
|-FunctionDecl 0x25a0cf426f8 <line:137:9, col:39> col:24 __iob_func 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|-TypedefDecl 0x25a0cf427c8 <line:144:1, col:17> col:17 referenced fpos_t 'long long'
| `-BuiltinType 0x25a0b3640e0 'long long'
|-FunctionDecl 0x25a0cf429a8 <line:175:24, col:65> col:36 _filbuf 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x25a0cf42830 <col:52, col:59> col:59 _File 'FILE *'
|-FunctionDecl 0x25a0cf42ca0 <line:176:28, col:82> col:40 _flsbuf 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x25a0cf42a80 <col:53, col:57> col:57 _Ch 'int'
| `-ParmVarDecl 0x25a0cf42af8 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x25a0cf43050 <line:178:24, col:121> col:39 _fsopen 'FILE *(const char *, const char *, int) __attribute__((cdecl))':'FILE *(const char *, const char *, int)'
| |-ParmVarDecl 0x25a0cf42d80 <col:54, col:67> col:67 _Filename 'const char *'
| |-ParmVarDecl 0x25a0cf42e00 <col:85, col:98> col:98 _Mode 'const char *'
| `-ParmVarDecl 0x25a0cf42e80 <col:110, col:114> col:114 _ShFlag 'int'
|-FunctionDecl 0x25a0cf4e3a0 <line:180:9, col:51> col:22 clearerr 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x25a0cf4e230 <col:39, col:46> col:46 _File 'FILE *'
|-FunctionDecl 0x25a0cf4e5d0 <line:182:28, col:76> col:44 clearerr_s 'errno_t (FILE *) __attribute__((cdecl))':'errno_t (FILE *)'
| `-ParmVarDecl 0x25a0cf4e490 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x25a0cf4e780 <line:184:28, col:67> col:40 fclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x25a0cf4e6a0 <col:55, col:62> col:62 _File 'FILE *'
|-FunctionDecl 0x25a0cf4e970 <line:185:28, col:55> col:40 _fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x25a0cf4ec68 <line:187:24, col:94> col:39 _fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x25a0cf4ea40 <col:52, col:56> col:56 _FileHandle 'int'
| `-ParmVarDecl 0x25a0cf4eac0 <col:76, col:89> col:89 _Mode 'const char *'
|-FunctionDecl 0x25a0cf4ee20 <line:189:24, col:58> col:36 feof 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x25a0cf4ed40 <col:46, col:53> col:53 _File 'FILE *'
|-FunctionDecl 0x25a0cf4efd0 <line:190:24, col:60> col:36 ferror 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x25a0cf4eef0 <col:48, col:55> col:55 _File 'FILE *'
|-FunctionDecl 0x25a0cf4f180 <line:191:28, col:71> col:40 fflush 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x25a0cf4f0a0 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x25a0cf4b308 <line:192:28, col:66> col:40 fgetc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x25a0cf4b228 <col:54, col:61> col:61 _File 'FILE *'
|-FunctionDecl 0x25a0cf4b498 <line:193:28, col:54> col:40 _fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x25a0cf4b800 <line:194:28, col:90> col:40 fgetpos 'int (FILE *, fpos_t *) __attribute__((cdecl))':'int (FILE *, fpos_t *)'
| |-ParmVarDecl 0x25a0cf4b560 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x25a0cf4b658 <col:77, col:86> col:86 _Pos 'fpos_t *'
|-FunctionDecl 0x25a0cf4bbb8 <line:195:28, col:128> col:43 fgets 'char *(char *, int, FILE *) __attribute__((cdecl))':'char *(char *, int, FILE *)'
| |-ParmVarDecl 0x25a0cf4b8e0 <col:75, col:82> col:82 _Buf 'char *'
| |-ParmVarDecl 0x25a0cf4b960 <col:93, col:97> col:97 _MaxCount 'int'
| `-ParmVarDecl 0x25a0cf4b9d8 <col:116, col:123> col:123 _File 'FILE *'
|-FunctionDecl 0x25a0cf4bd78 <line:197:24, col:61> col:36 _fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x25a0cf4bc98 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x25a0cf4c040 <line:204:24, col:117> col:39 _tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x25a0cf4be50 <col:59, col:72> col:72 _DirName 'const char *'
| `-ParmVarDecl 0x25a0cf4bed0 <col:93, col:106> col:106 _FilePrefix 'const char *'
|-FunctionDecl 0x25a0cf4c210 <line:210:28, col:54> col:40 _flushall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x25a0cf4c608 <line:211:72> col:72 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x25a0cf4c6a8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x25a0cf4c710 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x25a0cf4c788 prev 0x25a0cf4c608 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:211:134> col:72 fopen 'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x25a0cf4c3e0 <col:85, col:98> col:98 _Filename 'const char *'
| |-ParmVarDecl 0x25a0cf4c460 <col:116, col:129> col:129 _Mode 'const char *'
| `-DeprecatedAttr 0x25a0cf4c838 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x25a0cf4ccb0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:213:28, col:149> col:44 fopen_s 'errno_t (FILE **, const char *, const char *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *)'
| |-ParmVarDecl 0x25a0cf4c9e0 <col:78, col:86> col:86 _File 'FILE **'
| |-ParmVarDecl 0x25a0cf4ca60 <col:100, col:113> col:113 _Filename 'const char *'
| `-ParmVarDecl 0x25a0cf4cae0 <col:131, col:144> col:144 _Mode 'const char *'
|-FunctionDecl 0x25a0cf4cfd0 <line:215:40> col:40 implicit fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x25a0cf4d070 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x25a0cf4d0d8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x25a0cf4d150 <col:40> Implicit printf 2 3
|-FunctionDecl 0x25a0cf471c0 prev 0x25a0cf4cfd0 <col:28, col:125> col:40 fprintf 'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x25a0cf4cd90 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x25a0cf4ce10 <col:100, col:113> col:113 _Format 'const char *'
| `-FormatAttr 0x25a0cf472b8 <col:40> Inherited printf 2 3
|-FunctionDecl 0x25a0cf47480 <line:217:28, col:127> col:40 fprintf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x25a0cf47300 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x25a0cf47380 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x25a0cf476d8 <line:219:28, col:80> col:40 fputc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x25a0cf47560 <col:51, col:55> col:55 _Ch 'int'
| `-ParmVarDecl 0x25a0cf475d8 <col:68, col:75> col:75 _File 'FILE *'
|-FunctionDecl 0x25a0cf47908 <line:220:28, col:62> col:40 _fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x25a0cf477b8 <col:55, col:59> col:59 _Ch 'int'
|-FunctionDecl 0x25a0cf47c00 <line:221:28, col:92> col:40 fputs 'int (const char *, FILE *) __attribute__((cdecl))':'int (const char *, FILE *)'
| |-ParmVarDecl 0x25a0cf479e0 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x25a0cf47a58 <col:80, col:87> col:87 _File 'FILE *'
|-FunctionDecl 0x25a0cf48098 <line:222:43> col:43 implicit fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x25a0cf48138 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x25a0cf4f240 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x25a0cf4f2a8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x25a0cf4f310 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x25a0cf4f398 prev 0x25a0cf48098 <col:28, col:171> col:43 fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x25a0cf47ce0 <col:89, col:96> col:96 _DstBuf 'void *'
| |-ParmVarDecl 0x25a0cf47d58 <col:110, col:117> col:117 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x25a0cf47dd0 <col:136, col:143> col:143 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x25a0cf47e48 <col:159, col:166> col:166 _File 'FILE *'
|-FunctionDecl 0x25a0cf4f8a0 <line:224:28, col:195> col:43 fread_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x25a0cf4f488 <col:91, col:98> col:98 _DstBuf 'void *'
| |-ParmVarDecl 0x25a0cf4f500 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x25a0cf4f578 <col:134, col:141> col:141 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x25a0cf4f5f0 <col:160, col:167> col:167 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x25a0cf4f668 <col:183, col:190> col:190 _File 'FILE *'
|-FunctionDecl 0x25a0cf4fd60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:226:160> col:74 freopen 'FILE *(const char *, const char *, FILE *) __attribute__((cdecl))':'FILE *(const char *, const char *, FILE *)'
| |-ParmVarDecl 0x25a0cf4fa90 <col:89, col:102> col:102 _Filename 'const char *'
| |-ParmVarDecl 0x25a0cf4fb10 <col:120, col:133> col:133 _Mode 'const char *'
| |-ParmVarDecl 0x25a0cf4fb88 <col:148, col:155> col:155 _File 'FILE *'
| `-DeprecatedAttr 0x25a0cf4fe18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using freopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x25a0cf48278 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:228:28, col:176> col:44 freopen_s 'errno_t (FILE **, const char *, const char *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *, FILE *)'
| |-ParmVarDecl 0x25a0cf4ff60 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x25a0cf4ffe0 <col:102, col:115> col:115 _Filename 'const char *'
| |-ParmVarDecl 0x25a0cf50060 <col:133, col:146> col:146 _Mode 'const char *'
| `-ParmVarDecl 0x25a0cf500d8 <col:161, col:168> col:168 _OldFile 'FILE *'
|-FunctionDecl 0x25a0cf48620 <line:230:70> col:70 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x25a0cf486c0 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x25a0cf48728 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x25a0cf487a0 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x25a0cf48808 prev 0x25a0cf48620 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:230:153> col:70 fscanf 'int (FILE *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x25a0cf48458 <col:85, col:92> col:92 _File 'FILE *'
| |-ParmVarDecl 0x25a0cf484d8 <col:128, col:141> col:141 _Format 'const char *'
| |-FormatAttr 0x25a0cf489e8 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x25a0cf488b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x25a0cf48e28 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:231:201> col:77 _fscanf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x25a0cf48b28 <col:95, col:102> col:102 _File 'FILE *'
| |-ParmVarDecl 0x25a0cf48ba8 <col:148, col:161> col:161 _Format 'const char *'
| |-ParmVarDecl 0x25a0cf48c40 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x25a0cf48ee0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x25a0cf50250 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:235:28, col:127> col:40 fscanf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x25a0cf49020 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x25a0cf490a0 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x25a0cf50540 <line:237:28, col:168> col:40 _fscanf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x25a0cf50328 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x25a0cf503a8 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x25a0cf50420 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x25a0cf508a0 <line:239:28, col:94> col:40 fsetpos 'int (FILE *, const fpos_t *) __attribute__((cdecl))':'int (FILE *, const fpos_t *)'
| |-ParmVarDecl 0x25a0cf50620 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x25a0cf506f8 <col:75, col:90> col:90 _Pos 'const fpos_t *'
|-FunctionDecl 0x25a0cf50c58 <line:240:28, col:103> col:40 fseek 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x25a0cf50978 <col:54, col:61> col:61 _File 'FILE *'
| |-ParmVarDecl 0x25a0cf509f8 <col:73, col:78> col:78 _Offset 'long'
| `-ParmVarDecl 0x25a0cf50a78 <col:92, col:96> col:96 _Origin 'int'
|-FunctionDecl 0x25a0cf50eb8 <line:241:24, col:63> col:37 ftell 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x25a0cf50d38 <col:51, col:58> col:58 _File 'FILE *'
|-FunctionDecl 0x25a0cf49228 <line:243:28, col:110> col:40 _fseeki64 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x25a0cf50f88 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x25a0cf51008 <col:77, col:85> col:85 _Offset 'long long'
| `-ParmVarDecl 0x25a0cf51088 <col:99, col:103> col:103 _Origin 'int'
|-FunctionDecl 0x25a0cf49488 <line:244:24, col:70> col:40 _ftelli64 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x25a0cf49308 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x25a0cf49948 <line:246:43> col:43 implicit fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x25a0cf499e8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x25a0cf49a50 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x25a0cf49ab8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x25a0cf49b20 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x25a0cf49ba8 prev 0x25a0cf49948 <col:28, col:159> col:43 fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x25a0cf49590 <col:81, col:94> col:94 _Str 'const void *'
| |-ParmVarDecl 0x25a0cf49608 <col:105, col:112> col:112 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x25a0cf49680 <col:124, col:131> col:131 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x25a0cf496f8 <col:147, col:154> col:154 _File 'FILE *'
|-FunctionDecl 0x25a0cf49d70 <line:247:24, col:61> col:36 getc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x25a0cf49c90 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x25a0cf49f00 <line:248:24, col:48> col:36 getchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x25a0cf4a088 <line:249:24, col:53> col:36 _getmaxstdio 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x25a0cf52430 <line:251:9, col:84> col:24 gets_s 'char *(char *, rsize_t) __attribute__((cdecl))':'char *(char *, rsize_t)'
| |-ParmVarDecl 0x25a0cf4a158 <col:53, col:60> col:60 _Buf 'char *'
| `-ParmVarDecl 0x25a0cf52280 <col:71, col:79> col:79 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x25a0cf52758 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:254:80 gets 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x25a0cf52610 <col:139, col:145> col:145 _Buffer 'char *'
| `-DeprecatedAttr 0x25a0cf52800 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x25a0cf52a20 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:255:16, col:54> col:28 _getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x25a0cf52940 <col:42, col:49> col:49 _File 'FILE *'
|-FunctionDecl 0x25a0cf52c40 <line:258:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x25a0cf52af8 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x25a0cf52df0 <line:261:28, col:68> col:40 _pclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x25a0cf52d10 <col:56, col:63> col:63 _File 'FILE *'
|-FunctionDecl 0x25a0cf53040 <line:262:24, col:101> col:39 _popen 'FILE *(const char *, const char *) __attribute__((cdecl))':'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x25a0cf52ec8 <col:53, col:66> col:66 _Command 'const char *'
| `-ParmVarDecl 0x25a0cf52f48 <col:83, col:96> col:96 _Mode 'const char *'
|-FunctionDecl 0x25a0cf53280 <line:264:40> col:40 implicit printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x25a0cf53320 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x25a0cf53390 <col:40> Implicit printf 1 2
|-FunctionDecl 0x25a0cf533f8 prev 0x25a0cf53280 <col:28, col:102> col:40 printf 'int (const char *, ...)'
| |-ParmVarDecl 0x25a0cf53120 <col:77, col:90> col:90 _Format 'const char *'
| `-FormatAttr 0x25a0cf534e8 <col:40> Inherited printf 1 2
|-FunctionDecl 0x25a0cf53618 <line:266:28, col:104> col:40 printf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x25a0cf53538 <col:79, col:92> col:92 _Format 'const char *'
|-FunctionDecl 0x25a0cf53868 <line:268:28, col:79> col:40 putc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x25a0cf536f0 <col:50, col:54> col:54 _Ch 'int'
| `-ParmVarDecl 0x25a0cf53768 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x25a0cf53a28 <line:269:28, col:60> col:40 putchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x25a0cf53948 <col:53, col:57> col:57 _Ch 'int'
|-FunctionDecl 0x25a0cf53c48 <line:270:28, col:69> col:40 puts 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x25a0cf53b00 <col:52, col:65> col:65 _Str 'const char *'
|-FunctionDecl 0x25a0cf53e98 <line:271:28, col:82> col:40 _putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x25a0cf53d20 <col:51, col:55> col:55 _Word 'int'
| `-ParmVarDecl 0x25a0cf53d98 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x25a0cf54058 <line:274:9, col:57> col:21 remove 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x25a0cf53f78 <col:35, col:48> col:48 _Filename 'const char *'
|-FunctionDecl 0x25a0cfa5020 <line:275:24, col:109> col:36 rename 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x25a0cf54130 <col:50, col:63> col:63 _OldFilename 'const char *'
| `-ParmVarDecl 0x25a0cf541b0 <col:84, col:97> col:97 _NewFilename 'const char *'
|-FunctionDecl 0x25a0cfa51e0 <line:276:9, col:58> col:21 _unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x25a0cfa5100 <col:36, col:49> col:49 _Filename 'const char *'
|-FunctionDecl 0x25a0cfa5470 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:278:89> col:53 unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x25a0cfa5390 <col:67, col:80> col:80 _Filename 'const char *'
| `-DeprecatedAttr 0x25a0cfa5518 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _unlink. See online help for details." ""
|-FunctionDecl 0x25a0cfa5710 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:281:9, col:49> col:22 rewind 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x25a0cfa5638 <col:37, col:44> col:44 _File 'FILE *'
|-FunctionDecl 0x25a0cfa58a0 <line:282:28, col:51> col:40 _rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x25a0cfa5b48 <line:283:69> col:69 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x25a0cfa5be8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x25a0cfa5c58 <col:69> Implicit scanf 1 2
|-FunctionDecl 0x25a0cfa5cc0 prev 0x25a0cfa5b48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:283:129> col:69 scanf 'int (const char *restrict, ...)'
| |-ParmVarDecl 0x25a0cfa5a30 <col:104, col:117> col:117 _Format 'const char *'
| |-FormatAttr 0x25a0cfa5e98 <col:69> Inherited scanf 1 2
| `-DeprecatedAttr 0x25a0cfa5d68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x25a0cfa6270 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:284:177> col:76 _scanf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x25a0cfa6038 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x25a0cfa60b0 <col:155, col:165> col:165 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x25a0cfa6320 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _scanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x25a0cfa6548 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:288:40, col:116> col:52 scanf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x25a0cfa6468 <col:91, col:104> col:104 _Format 'const char *'
|-FunctionDecl 0x25a0cfa6798 <line:290:40, col:157> col:52 _scanf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x25a0cfa6620 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x25a0cfa6698 <col:135, col:145> col:145 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x25a0cfa6b58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:292:150> col:55 setbuf 'void (FILE *, char *) __attribute__((cdecl))':'void (FILE *, char *)'
| |-ParmVarDecl 0x25a0cfa6930 <col:70, col:77> col:77 _File 'FILE *'
| |-ParmVarDecl 0x25a0cfa69b0 <col:136, col:143> col:143 _Buffer 'char *'
| `-DeprecatedAttr 0x25a0cfa6c08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using setvbuf instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x25a0cfa6e30 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:293:28, col:66> col:40 _setmaxstdio 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x25a0cfa6d50 <col:58, col:62> col:62 _Max 'int'
|-FunctionDecl 0x25a0cfa3078 <line:294:28, col:93> col:49 _set_output_format 'unsigned int (unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int)'
| `-ParmVarDecl 0x25a0cfa2f30 <col:73, col:86> col:86 _Format 'unsigned int'
|-FunctionDecl 0x25a0cfa3260 <line:295:28, col:72> col:49 _get_output_format 'unsigned int (void) __attribute__((cdecl))':'unsigned int (void)'
|-FunctionDecl 0x25a0cfa36b0 <line:296:28, col:145> col:40 setvbuf 'int (FILE *, char *, int, size_t) __attribute__((cdecl))':'int (FILE *, char *, int, size_t)'
| |-ParmVarDecl 0x25a0cfa3328 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x25a0cfa33a8 <col:99, col:106> col:106 _Buf 'char *'
| |-ParmVarDecl 0x25a0cfa3428 <col:117, col:121> col:121 _Mode 'int'
| `-ParmVarDecl 0x25a0cfa34a0 <col:133, col:140> col:140 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x25a0cfa3b30 <line:297:40, col:213> col:52 _snprintf_s 'int (char *, size_t, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, ...)'
| |-ParmVarDecl 0x25a0cfa37a0 <col:93, col:100> col:100 _DstBuf 'char *'
| |-ParmVarDecl 0x25a0cfa3818 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x25a0cfa3890 <col:140, col:147> col:147 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x25a0cfa3910 <col:188, col:201> col:201 _Format 'const char *'
|-FunctionDecl 0x25a0cf9eef0 <line:300:40, col:188> col:52 sprintf_s 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x25a0cfa3c20 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x25a0cfa3c98 <col:112, col:119> col:119 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x25a0cfa3d18 <col:163, col:176> col:176 _Format 'const char *'
|-FunctionDecl 0x25a0cf9f0b8 <line:303:24, col:101> col:36 _scprintf 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x25a0cf9efd8 <col:76, col:89> col:89 _Format 'const char *'
|-FunctionDecl 0x25a0cf9f490 <line:304:70> col:70 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x25a0cf9f530 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x25a0cf9f598 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x25a0cf9f610 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x25a0cf9f678 prev 0x25a0cf9f490 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:304:157> col:70 sscanf 'int (const char *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x25a0cf9f250 <col:84, col:97> col:97 _Src 'const char *'
| |-ParmVarDecl 0x25a0cf9f2d0 <col:132, col:145> col:145 _Format 'const char *'
| |-FormatAttr 0x25a0cf9f858 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x25a0cf9f728 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x25a0cf9fc48 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:305:205> col:77 _sscanf_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x25a0cf9f968 <col:94, col:107> col:107 _Src 'const char *'
| |-ParmVarDecl 0x25a0cf9f9e8 <col:152, col:165> col:165 _Format 'const char *'
| |-ParmVarDecl 0x25a0cf9fa60 <col:183, col:193> col:193 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x25a0cf9fd00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x25a0cfa4040 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:309:40, col:143> col:52 sscanf_s 'int (const char *, const char *, ...) __attribute__((cdecl))':'int (const char *, const char *, ...)'
| |-ParmVarDecl 0x25a0cf9fe48 <col:68, col:81> col:81 _Src 'const char *'
| `-ParmVarDecl 0x25a0cfa3f40 <col:118, col:131> col:131 _Format 'const char *'
|-FunctionDecl 0x25a0cfa4338 <line:311:40, col:184> col:52 _sscanf_s_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x25a0cfa4120 <col:71, col:84> col:84 _Src 'const char *'
| |-ParmVarDecl 0x25a0cfa41a0 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x25a0cfa4218 <col:162, col:172> col:172 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x25a0cfa47c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:312:217> col:76 _snscanf 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x25a0cfa44e0 <col:121, col:134> col:134 _Src 'const char *'
| |-ParmVarDecl 0x25a0cfa4558 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x25a0cfa45d8 <col:192, col:205> col:205 _Format 'const char *'
| `-DeprecatedAttr 0x25a0cfa4880 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x25a0cfa4e50 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:313:259> col:78 _snscanf_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x25a0cfa4ac0 <col:125, col:138> col:138 _Src 'const char *'
| |-ParmVarDecl 0x25a0cfa4b38 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x25a0cfa4bb8 <col:206, col:219> col:219 _Format 'const char *'
| |-ParmVarDecl 0x25a0cfa4c30 <col:237, col:247> col:247 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x25a0cfa0f10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x25a0cfa1270 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:314:40, col:197> col:52 _snscanf_s 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x25a0cfa1058 <col:99, col:112> col:112 _Src 'const char *'
| |-ParmVarDecl 0x25a0cfa10d0 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x25a0cfa1150 <col:172, col:185> col:185 _Format 'const char *'
|-FunctionDecl 0x25a0cfa1608 <line:315:40, col:237> col:52 _snscanf_s_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x25a0cfa1358 <col:101, col:114> col:114 _Src 'const char *'
| |-ParmVarDecl 0x25a0cfa13d0 <col:125, col:132> col:132 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x25a0cfa1450 <col:184, col:197> col:197 _Format 'const char *'
| `-ParmVarDecl 0x25a0cfa14c8 <col:215, col:225> col:225 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x25a0cfa1868 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:317:86> col:74 tmpfile 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
| `-DeprecatedAttr 0x25a0cfa1908 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpfile_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x25a0cfa1bc0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:319:28, col:96> col:44 tmpfile_s 'errno_t (FILE **) __attribute__((cdecl))':'errno_t (FILE **)'
| `-ParmVarDecl 0x25a0cfa1a50 <col:83, col:91> col:91 _File 'FILE **'
|-FunctionDecl 0x25a0cfa1f20 <line:320:28, col:106> col:44 tmpnam_s 'errno_t (char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t)'
| |-ParmVarDecl 0x25a0cfa1c98 <col:75, col:82> col:82 _Buf 'char *'
| `-ParmVarDecl 0x25a0cfa1d10 <col:93, col:101> col:101 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x25a0cfa21a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:323:79 tmpnam 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x25a0cfa20c0 <col:113, col:119> col:119 _Buffer 'char *'
| `-DeprecatedAttr 0x25a0cfa2248 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x25a0cfa2508 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:324:28, col:81> col:40 ungetc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x25a0cfa2390 <col:52, col:56> col:56 _Ch 'int'
| `-ParmVarDecl 0x25a0cfa2408 <col:69, col:76> col:76 _File 'FILE *'
|-FunctionDecl 0x25a0cfa2920 <line:325:40> col:40 implicit vfprintf 'int (FILE *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x25a0cfa29c0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x25a0cfa2a28 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x25a0cfa2a90 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x25a0cfa2b10 <col:40> Implicit printf 2 0
|-FunctionDecl 0x25a0cfa2b78 prev 0x25a0cfa2920 <col:28, col:139> col:40 vfprintf 'int (FILE *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x25a0cfa25e0 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x25a0cfa2660 <col:101, col:114> col:114 _Format 'const char *'
| |-ParmVarDecl 0x25a0cfa26d8 <col:123, col:131> col:131 _ArgList 'va_list':'char *'
| `-FormatAttr 0x25a0cfa2c78 <col:40> Inherited printf 2 0
|-FunctionDecl 0x25a0cfa6f70 <line:326:40> col:40 implicit vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x25a0cfa7010 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x25a0cfa7078 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x25a0cfa70e0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x25a0cfa7160 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x25a0cfa71c8 prev 0x25a0cfa6f70 <col:28, col:138> col:40 vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x25a0cfa2cc0 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x25a0cfa2d40 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x25a0cfa2db8 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x25a0cfa72c8 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x25a0cfa7528 <line:328:28, col:141> col:40 vfprintf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x25a0cfa7310 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x25a0cfa7390 <col:103, col:116> col:116 _Format 'const char *'
| `-ParmVarDecl 0x25a0cfa7408 <col:125, col:133> col:133 _ArgList 'va_list':'char *'
|-FunctionDecl 0x25a0cfa7820 <line:329:28, col:140> col:40 vfscanf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x25a0cfa7608 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x25a0cfa7688 <col:102, col:115> col:115 _Format 'const char *'
| `-ParmVarDecl 0x25a0cfa7700 <col:124, col:132> col:132 _ArgList 'va_list':'char *'
|-FunctionDecl 0x25a0cfa7b68 <line:331:40> col:40 implicit vprintf 'int (const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x25a0cfa7c08 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x25a0cfa7c70 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x25a0cfa7ce8 <col:40> Implicit printf 1 0
|-FunctionDecl 0x25a0cfa7d50 prev 0x25a0cfa7b68 <col:28, col:116> col:40 vprintf 'int (const char *, __builtin_va_list)'
| |-ParmVarDecl 0x25a0cfa7908 <col:78, col:91> col:91 _Format 'const char *'
| |-ParmVarDecl 0x25a0cfa7980 <col:100, col:108> col:108 _ArgList 'va_list':'char *'
| `-FormatAttr 0x25a0cfa7e48 <col:40> Inherited printf 1 0
|-FunctionDecl 0x25a0cfa0038 <line:332:40> col:40 implicit vscanf 'int (const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x25a0cfa00d8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x25a0cfa0140 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x25a0cfa01b8 <col:40> Implicit scanf 1 0
|-FunctionDecl 0x25a0cfa0220 prev 0x25a0cfa0038 <col:28, col:115> col:40 vscanf 'int (const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x25a0cfa7e98 <col:77, col:90> col:90 _Format 'const char *'
| |-ParmVarDecl 0x25a0cf9ff00 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
| `-FormatAttr 0x25a0cfa0318 <col:40> Inherited scanf 1 0
|-FunctionDecl 0x25a0cfa04e0 <line:334:28, col:118> col:40 vprintf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x25a0cfa0368 <col:80, col:93> col:93 _Format 'const char *'
| `-ParmVarDecl 0x25a0cfa03e0 <col:102, col:110> col:110 _ArgList 'va_list':'char *'
|-FunctionDecl 0x25a0cfa0738 <line:335:28, col:117> col:40 vscanf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x25a0cfa05c0 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x25a0cfa0638 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x25a0cfa0c98 <line:337:77> col:77 implicit vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x25a0cfa0d38 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x25a0cfa0da0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x25a0cfa0e08 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x25a0cfa0e70 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x25a0cfacfd0 <col:77> Implicit printf 3 0
|-FunctionDecl 0x25a0cfad038 prev 0x25a0cfa0c98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:337:218> col:77 vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x25a0cfa08d8 <col:111, col:118> col:118 _DstBuf 'char *'
| |-ParmVarDecl 0x25a0cfa0950 <col:132, col:139> col:139 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x25a0cfa09d0 <col:180, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x25a0cfa0a48 <col:202, col:210> col:210 _ArgList 'va_list':'char *'
| |-FormatAttr 0x25a0cfad228 <col:77> Inherited printf 3 0
| `-DeprecatedAttr 0x25a0cfad0f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x25a0cfad698 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:339:28, col:206> col:40 vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x25a0cfad278 <col:77, col:84> col:84 _DstBuf 'char *'
| |-ParmVarDecl 0x25a0cfad2f0 <col:98, col:105> col:105 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x25a0cfad368 <col:120, col:127> col:127 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x25a0cfad3e8 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x25a0cfad460 <col:190, col:198> col:198 _ArgList 'va_list':'char *'
|-FunctionDecl 0x25a0cfadad8 <line:342:40, col:227> col:52 _vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x25a0cfad790 <col:94, col:101> col:101 _DstBuf 'char *'
| |-ParmVarDecl 0x25a0cfad808 <col:115, col:122> col:122 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x25a0cfad880 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x25a0cfad900 <col:189, col:202> col:202 _Format 'const char *'
| `-ParmVarDecl 0x25a0cfad978 <col:211, col:219> col:219 _ArgList 'va_list':'char *'
|-FunctionDecl 0x25a0cfadea8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:89 _snprintf 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x25a0cfadc90 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x25a0cfadd08 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x25a0cfadd88 <col:246, col:260> col:260 _Format 'const char *'
| `-DeprecatedAttr 0x25a0cfadf60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x25a0cfaa410 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:100 _vsnprintf 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x25a0cfaa160 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x25a0cfaa1d8 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x25a0cfaa258 <col:246, col:260> col:260 _Format 'const char *'
| |-ParmVarDecl 0x25a0cfaa2d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x25a0cfaa4d0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x25a0cfaa8c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:349:21, col:183> col:33 vsprintf_s 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x25a0cfaa618 <col:73, col:80> col:80 _DstBuf 'char *'
| |-ParmVarDecl 0x25a0cfaa690 <col:94, col:101> col:101 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x25a0cfaa710 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x25a0cfaa788 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x25a0cfaac88 <line:351:40, col:149> col:52 vsscanf_s 'int (const char *, const char *, va_list) __attribute__((cdecl))':'int (const char *, const char *, va_list)'
| |-ParmVarDecl 0x25a0cfaa9b8 <col:62, col:75> col:75 _Src 'const char *'
| |-ParmVarDecl 0x25a0cfaaa38 <col:111, col:124> col:124 _Format 'const char *'
| `-ParmVarDecl 0x25a0cfaaab0 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x25a0cfae080 <line:356:85> col:85 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x25a0cfae120 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x25a0cfae188 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x25a0cfae200 <col:85> Implicit printf 2 3
|-FunctionDecl 0x25a0cfae268 prev 0x25a0cfae080 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:85 sprintf 'int (char *, const char *, ...)'
| |-ParmVarDecl 0x25a0cfaae30 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x25a0cfaaeb0 <col:171, col:185> col:185 _Format 'const char *'
| |-FormatAttr 0x25a0cfae448 <col:85> Inherited printf 2 3
| `-DeprecatedAttr 0x25a0cfae318 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x25a0cfae870 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> col:94 implicit vsprintf 'int (char *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x25a0cfae910 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x25a0cfae978 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x25a0cfae9e0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x25a0cfaea60 <col:94> Implicit printf 2 0
|-FunctionDecl 0x25a0cfaeac8 prev 0x25a0cfae870 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94 vsprintf 'int (char *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x25a0cfae558 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x25a0cfae5d8 <col:171, col:185> col:185 _Format 'const char *'
| |-ParmVarDecl 0x25a0cfae650 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-FormatAttr 0x25a0cfaecb0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> Inherited printf 2 0
| `-DeprecatedAttr 0x25a0cfaeb80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x25a0cfaeff0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:357:40> col:40 implicit vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x25a0cfaf090 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x25a0cfaf0f8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x25a0cfaf160 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x25a0cfaf1e0 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x25a0cfaf248 prev 0x25a0cfaeff0 <col:28, col:138> col:40 vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x25a0cfaed00 <col:48, col:61> col:61 _srcBuf 'const char *'
| |-ParmVarDecl 0x25a0cfaed80 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x25a0cfaedf8 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x25a0cfaf348 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x25a0cfaf510 <line:359:24, col:115> col:36 _vscprintf 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x25a0cfaf398 <col:77, col:90> col:90 _Format 'const char *'
| `-ParmVarDecl 0x25a0cfaf410 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
|-FunctionDecl 0x25a0cfaf808 <line:360:28, col:170> col:40 _snprintf_c 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x25a0cfaf5f0 <col:76, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x25a0cfaf668 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x25a0cfaf6e8 <col:145, col:158> col:158 _Format 'const char *'
|-FunctionDecl 0x25a0cfafba0 <line:361:28, col:183> col:40 _vsnprintf_c 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x25a0cfaf8f0 <col:77, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x25a0cfaf968 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x25a0cfaf9e8 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x25a0cfafa60 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x25a0cfafe08 <line:363:28, col:128> col:40 _fprintf_p 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x25a0cfafc88 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x25a0cfafd08 <col:103, col:116> col:116 _Format 'const char *'
|-FunctionDecl 0x25a0cfa8f90 <line:364:28, col:105> col:40 _printf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x25a0cfafee8 <col:80, col:93> col:93 _Format 'const char *'
|-FunctionDecl 0x25a0cfa9280 <line:365:28, col:168> col:40 _sprintf_p 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x25a0cfa9068 <col:77, col:84> col:84 _Dst 'char *'
| |-ParmVarDecl 0x25a0cfa90e0 <col:95, col:102> col:102 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x25a0cfa9160 <col:143, col:156> col:156 _Format 'const char *'
|-FunctionDecl 0x25a0cfa9578 <line:366:28, col:142> col:40 _vfprintf_p 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x25a0cfa9360 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x25a0cfa93e0 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x25a0cfa9458 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x25a0cfa97d8 <line:367:28, col:119> col:40 _vprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x25a0cfa9660 <col:81, col:94> col:94 _Format 'const char *'
| `-ParmVarDecl 0x25a0cfa96d8 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x25a0cfa9b68 <line:368:28, col:182> col:40 _vsprintf_p 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x25a0cfa98b8 <col:78, col:85> col:85 _Dst 'char *'
| |-ParmVarDecl 0x25a0cfa9930 <col:96, col:103> col:103 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x25a0cfa99b0 <col:144, col:157> col:157 _Format 'const char *'
| `-ParmVarDecl 0x25a0cfa9a28 <col:166, col:174> col:174 _ArgList 'va_list':'char *'
|-FunctionDecl 0x25a0cfa9d38 <line:369:24, col:103> col:36 _scprintf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x25a0cfa9c58 <col:78, col:91> col:91 _Format 'const char *'
|-FunctionDecl 0x25a0cfaafb0 <line:370:24, col:117> col:36 _vscprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x25a0cfa9e10 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x25a0cfa9e88 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x25a0cfab170 <line:371:9, col:61> col:21 _set_printf_count_output 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x25a0cfab090 <col:51, col:55> col:55 _Value 'int'
|-FunctionDecl 0x25a0cfab300 <line:372:9, col:50> col:21 _get_printf_count_output 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x25a0cfab548 <line:374:28, col:143> col:40 _printf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x25a0cfab3d0 <col:90, col:103> col:103 _Format 'const char *'
| `-ParmVarDecl 0x25a0cfab448 <col:121, col:131> col:131 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x25a0cfab7a0 <line:375:28, col:145> col:40 _printf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x25a0cfab628 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x25a0cfab6a0 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x25a0cfab9f8 <line:376:28, col:145> col:40 _printf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x25a0cfab880 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x25a0cfab8f8 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x25a0cfabda8 <line:377:28, col:157> col:40 _vprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x25a0cfabad8 <col:91, col:104> col:104 _Format 'const char *'
| |-ParmVarDecl 0x25a0cfabb50 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x25a0cfabbc8 <col:141, col:149> col:149 _ArgList 'va_list':'char *'
|-FunctionDecl 0x25a0cfa80a0 <line:378:28, col:159> col:40 _vprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x25a0cfabe90 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x25a0cfabf08 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x25a0cfa7f80 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x25a0cfa8398 <line:379:28, col:159> col:40 _vprintf_s_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x25a0cfa8188 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x25a0cfa8200 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x25a0cfa8278 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x25a0cfa8690 <line:381:28, col:166> col:40 _fprintf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x25a0cfa8478 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x25a0cfa84f8 <col:113, col:126> col:126 _Format 'const char *'
| `-ParmVarDecl 0x25a0cfa8570 <col:144, col:154> col:154 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x25a0cfa8988 <line:382:28, col:168> col:40 _fprintf_p_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x25a0cfa8770 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x25a0cfa87f0 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x25a0cfa8868 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x25a0cfa8c80 <line:383:28, col:168> col:40 _fprintf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x25a0cfa8a68 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x25a0cfa8ae8 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x25a0cfa8b60 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x25a0cfb41a0 <line:384:28, col:147> col:40 _vfprintf_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x25a0cfa8d60 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x25a0cfa8de0 <col:81, col:94> col:94 _Format 'const char *'
| |-ParmVarDecl 0x25a0cfa8e58 <col:112, col:122> col:122 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x25a0cfa8ed0 <col:131, col:139> col:139 _ArgList 'va_list':'char *'
|-FunctionDecl 0x25a0cfb4538 <line:385:28, col:149> col:40 _vfprintf_p_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x25a0cfb4288 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x25a0cfb4308 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x25a0cfb4380 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x25a0cfb43f8 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x25a0cfb48d0 <line:386:28, col:149> col:40 _vfprintf_s_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x25a0cfb4620 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x25a0cfb46a0 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x25a0cfb4718 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x25a0cfb4790 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x25a0cfb4d68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:388:221> col:78 _sprintf_l 'int (char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x25a0cfb4a80 <col:112, col:119> col:119 _DstBuf 'char *'
| |-ParmVarDecl 0x25a0cfb4b00 <col:168, col:181> col:181 _Format 'const char *'
| |-ParmVarDecl 0x25a0cfb4b78 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x25a0cfb4e20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x25a0cfb7380 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:389:28, col:211> col:40 _sprintf_p_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x25a0cfb4f68 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x25a0cfb7070 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x25a0cfb70f0 <col:158, col:171> col:171 _Format 'const char *'
| `-ParmVarDecl 0x25a0cfb7168 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x25a0cfb7720 <line:390:40, col:221> col:52 _sprintf_s_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x25a0cfb7470 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x25a0cfb74e8 <col:111, col:118> col:118 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x25a0cfb7568 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x25a0cfb75e0 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x25a0cfb7c70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:391:195> col:79 _vsprintf_l 'int (char *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x25a0cfb7910 <col:114, col:121> col:121 _DstBuf 'char *'
| |-ParmVarDecl 0x25a0cfb7990 <col:137, col:150> col:150 _Format 'const char *'
| |-ParmVarDecl 0x25a0cfb7a08 <col:168> col:177 '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x25a0cfb7a80 <col:179, col:187> col:187 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x25a0cfb7d30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x25a0cfb5288 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:392:28, col:225> col:40 _vsprintf_p_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x25a0cfb7e78 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x25a0cfb7ef0 <col:101, col:108> col:108 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x25a0cfb7f70 <col:159, col:171> col:171 _Format 'const char *'
| |-ParmVarDecl 0x25a0cfb7fe8 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x25a0cfb5050 <col:209, col:217> col:217 _ArgList 'va_list':'char *'
|-FunctionDecl 0x25a0cfb56c8 <line:393:40, col:235> col:52 _vsprintf_s_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x25a0cfb5380 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x25a0cfb53f8 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x25a0cfb5478 <col:169, col:182> col:182 _Format 'const char *'
| |-ParmVarDecl 0x25a0cfb54f0 <col:200, col:210> col:210 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x25a0cfb5568 <col:219, col:227> col:227 _ArgList 'va_list':'char *'
|-FunctionDecl 0x25a0cfb5938 <line:395:28, col:145> col:40 _scprintf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x25a0cfb57c0 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x25a0cfb5838 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x25a0cfb5b90 <line:396:28, col:147> col:40 _scprintf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x25a0cfb5a18 <col:94, col:107> col:107 _Format 'const char *'
| `-ParmVarDecl 0x25a0cfb5a90 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x25a0cfb5e80 <line:397:28, col:159> col:40 _vscprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x25a0cfb5c70 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x25a0cfb5ce8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x25a0cfb5d60 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x25a0cfb0130 <line:398:28, col:161> col:40 _vscprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x25a0cfb5f68 <col:95, col:108> col:108 _Format 'const char *'
| |-ParmVarDecl 0x25a0cfb5fe0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x25a0cfb0010 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x25a0cfb0588 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:400:247> col:79 _snprintf_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x25a0cfb02d8 <col:115, col:122> col:122 _DstBuf 'char *'
| |-ParmVarDecl 0x25a0cfb0350 <col:136, col:143> col:143 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x25a0cfb03d0 <col:194, col:207> col:207 _Format 'const char *'
| |-ParmVarDecl 0x25a0cfb0448 <col:225, col:235> col:235 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x25a0cfb0648 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x25a0cfb0a40 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:401:28, col:210> col:40 _snprintf_c_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x25a0cfb0790 <col:78, col:85> col:85 _DstBuf 'char *'
| |-ParmVarDecl 0x25a0cfb0808 <col:99, col:106> col:106 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x25a0cfb0888 <col:157, col:170> col:170 _Format 'const char *'
| `-ParmVarDecl 0x25a0cfb0900 <col:188, col:198> col:198 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x25a0cfb2020 <line:402:40, col:245> col:52 _snprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x25a0cfb0b30 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x25a0cfb0ba8 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x25a0cfb0c20 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x25a0cfb0ca0 <col:192, col:205> col:205 _Format 'const char *'
| `-ParmVarDecl 0x25a0cfb0d18 <col:223, col:233> col:233 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x25a0cfb2560 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:403:262> col:80 _vsnprintf_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x25a0cfb2218 <col:117, col:124> col:124 _DstBuf 'char *'
| |-ParmVarDecl 0x25a0cfb2290 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x25a0cfb2310 <col:196, col:209> col:209 _Format 'const char *'
| |-ParmVarDecl 0x25a0cfb2388 <col:227, col:237> col:237 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x25a0cfb2400 <col:246, col:254> col:254 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x25a0cfb2628 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x25a0cfb2aa8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:404:28, col:176> col:40 _vsnprintf_c_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x25a0cfb2778 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x25a0cfb27f0 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x25a0cfb2870 <col:118, col:129> col:130 'const char *'
| |-ParmVarDecl 0x25a0cfb28e8 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x25a0cfb2960 <col:160, col:168> col:168 _ArgList 'va_list':'char *'
|-FunctionDecl 0x25a0cfb3090 <line:405:28, col:245> col:40 _vsnprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x25a0cfb2ba0 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x25a0cfb2c18 <col:101, col:108> col:108 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x25a0cfb2c90 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x25a0cfb2d10 <col:181, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x25a0cfb2d88 <col:210, col:220> col:220 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x25a0cfb2e00 <col:229, col:237> col:237 _ArgList 'va_list':'char *'
|-FunctionDecl 0x25a0cfb3450 <line:415:24, col:128> col:39 _wfsopen 'FILE *(const wchar_t *, const wchar_t *, int) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, int)'
| |-ParmVarDecl 0x25a0cfb3188 <col:55, col:71> col:71 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x25a0cfb3200 <col:89, col:105> col:105 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x25a0cfb3280 <col:117, col:121> col:121 _ShFlag 'int'
|-FunctionDecl 0x25a0cfb36c0 <line:417:28, col:70> col:43 fgetwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x25a0cfb3550 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x25a0cfb38d8 <line:418:28, col:58> col:43 _fgetwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x25a0cfb3bb8 <line:419:28, col:88> col:43 fputwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x25a0cfb39a0 <col:55, col:63> col:63 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x25a0cfb3a18 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x25a0cfb3e00 <line:420:28, col:70> col:43 _fputwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x25a0cfb3c90 <col:59, col:67> col:67 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x25a0cfb6060 <line:421:24, col:65> col:39 getwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x25a0cfb3ed0 <col:53, col:60> col:60 _File 'FILE *'
|-FunctionDecl 0x25a0cfb61e8 <line:422:24, col:52> col:39 getwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x25a0cfb6420 <line:423:28, col:87> col:43 putwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x25a0cfb62b0 <col:54, col:62> col:62 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x25a0cfb6328 <col:75, col:82> col:82 _File 'FILE *'
|-FunctionDecl 0x25a0cfb65d0 <line:424:28, col:68> col:43 putwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x25a0cfb64f8 <col:57, col:65> col:65 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x25a0cfb6878 <line:425:28, col:88> col:43 ungetwc 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x25a0cfb66a0 <col:56, col:63> col:63 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x25a0cfb6718 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x25a0cfb6c20 <line:427:28, col:141> col:46 fgetws 'wchar_t *(wchar_t *, int, FILE *) __attribute__((cdecl))':'wchar_t *(wchar_t *, int, FILE *)'
| |-ParmVarDecl 0x25a0cfb6950 <col:82, col:92> col:92 _Dst 'wchar_t *'
| |-ParmVarDecl 0x25a0cfb69d0 <col:103, col:107> col:107 _SizeInWords 'int'
| `-ParmVarDecl 0x25a0cfb6a48 <col:129, col:136> col:136 _File 'FILE *'
|-FunctionDecl 0x25a0cfb6f20 <line:428:28, col:96> col:40 fputws 'int (const wchar_t *, FILE *) __attribute__((cdecl))':'int (const wchar_t *, FILE *)'
| |-ParmVarDecl 0x25a0cfb6d00 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x25a0cfb6d78 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x25a0cfbc278 <line:429:28, col:124> col:46 _getws_s 'wchar_t *(wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, size_t)'
| |-ParmVarDecl 0x25a0cfb6ff8 <col:84, col:94> col:94 _Str 'wchar_t *'
| `-ParmVarDecl 0x25a0cfbc0d0 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x25a0cfbc580 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:431:83 _getws 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x25a0cfbc410 <col:115, col:124> col:124 _String 'wchar_t *'
| `-DeprecatedAttr 0x25a0cfbc628 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _getws_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x25a0cfbc8e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:432:28, col:74> col:40 _putws 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x25a0cfbc768 <col:54, col:70> col:70 _Str 'const wchar_t *'
|-FunctionDecl 0x25a0cfbcbf0 <line:434:28, col:129> col:40 fwprintf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x25a0cfbc9b8 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x25a0cfbca30 <col:101, col:117> col:117 _Format 'const wchar_t *'
|-FunctionDecl 0x25a0cfbce40 <line:436:28, col:131> col:40 fwprintf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x25a0cfbccc8 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x25a0cfbcd40 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x25a0cfba0a0 <line:438:28, col:106> col:40 wprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x25a0cfbcf18 <col:78, col:94> col:94 _Format 'const wchar_t *'
|-FunctionDecl 0x25a0cfba250 <line:440:28, col:108> col:40 wprintf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x25a0cfba170 <col:80, col:96> col:96 _Format 'const wchar_t *'
|-FunctionDecl 0x25a0cfba400 <line:442:24, col:105> col:36 _scwprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x25a0cfba320 <col:77, col:93> col:93 _Format 'const wchar_t *'
|-FunctionDecl 0x25a0cfba798 <line:443:28, col:143> col:40 vfwprintf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x25a0cfba4d0 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x25a0cfba548 <col:102, col:118> col:118 _Format 'const wchar_t *'
| `-ParmVarDecl 0x25a0cfba5c0 <col:127, col:135> col:135 _ArgList 'va_list':'char *'
|-FunctionDecl 0x25a0cfbaa88 <line:444:28, col:142> col:40 vfwscanf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x25a0cfba878 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x25a0cfba8f0 <col:101, col:117> col:117 _Format 'const wchar_t *'
| `-ParmVarDecl 0x25a0cfba968 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x25a0cfbad78 <line:446:28, col:145> col:40 vfwprintf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x25a0cfbab68 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x25a0cfbabe0 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x25a0cfbac58 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x25a0cfbb0b0 <line:447:28, col:144> col:40 vfwscanf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x25a0cfbae58 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x25a0cfbaed0 <col:103, col:119> col:119 _Format 'const wchar_t *'
| `-ParmVarDecl 0x25a0cfbaf48 <col:128, col:136> col:136 _ArgList 'va_list':'char *'
|-FunctionDecl 0x25a0cfbb3b0 <line:449:28, col:120> col:40 vwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x25a0cfbb190 <col:79, col:95> col:95 _Format 'const wchar_t *'
| `-ParmVarDecl 0x25a0cfbb208 <col:104, col:112> col:112 _ArgList 'va_list':'char *'
|-FunctionDecl 0x25a0cfbb600 <line:450:28, col:119> col:40 vwscanf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x25a0cfbb488 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x25a0cfbb500 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x25a0cfbb850 <line:452:28, col:122> col:40 vwprintf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x25a0cfbb6d8 <col:81, col:97> col:97 _Format 'const wchar_t *'
| `-ParmVarDecl 0x25a0cfbb750 <col:106, col:114> col:114 _ArgList 'va_list':'char *'
|-FunctionDecl 0x25a0cfbbaa0 <line:453:28, col:121> col:40 vwscanf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x25a0cfbb928 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x25a0cfbb9a0 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x25a0cfbbe58 <line:457:21, col:173> col:33 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x25a0cfbbb78 <col:73, col:83> col:83 _Dst 'wchar_t *'
| |-ParmVarDecl 0x25a0cfbbbf0 <col:94, col:101> col:101 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x25a0cfbbc68 <col:145, col:161> col:161 _Format 'const wchar_t *'
|-FunctionDecl 0x25a0cfbd2e0 <line:461:21, col:187> col:33 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x25a0cfbbf38 <col:74, col:84> col:84 _Dst 'wchar_t *'
| |-ParmVarDecl 0x25a0cfbbfb0 <col:95, col:102> col:102 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x25a0cfbc028 <col:146, col:162> col:162 _Format 'const wchar_t *'
| `-ParmVarDecl 0x25a0cfbd0d0 <col:171, col:179> col:179 _ArgList 'va_list':'char *'
|-FunctionDecl 0x25a0cfbd698 <line:462:40, col:156> col:52 vswscanf_s 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x25a0cfbd3c8 <col:63, col:79> col:79 _Src 'const wchar_t *'
| |-ParmVarDecl 0x25a0cfbd440 <col:115, col:131> col:131 _Format 'const wchar_t *'
| `-ParmVarDecl 0x25a0cfbd4b8 <col:140, col:148> col:148 _ArgList 'va_list':'char *'
|-FunctionDecl 0x25a0cfbd988 <line:466:28, col:145> col:40 vswscanf 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x25a0cfbd778 <col:49, col:65> col:65 _srcBuf 'const wchar_t *'
| |-ParmVarDecl 0x25a0cfbd7f0 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x25a0cfbd868 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x25a0cfbdc78 <line:468:28, col:184> col:40 _swprintf_c 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x25a0cfbda68 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x25a0cfbdae0 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x25a0cfbdb58 <col:156, col:172> col:172 _Format 'const wchar_t *'
|-FunctionDecl 0x25a0cfbe000 <line:469:28, col:198> col:40 _vswprintf_c 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x25a0cfbdd58 <col:82, col:92> col:92 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x25a0cfbddd0 <col:106, col:113> col:113 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x25a0cfbde48 <col:157, col:173> col:173 _Format 'const wchar_t *'
| `-ParmVarDecl 0x25a0cfbdec0 <col:182, col:190> col:190 _ArgList 'va_list':'char *'
|-FunctionDecl 0x25a0cfb8430 <line:471:40, col:220> col:52 _snwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x25a0cfb80a8 <col:94, col:104> col:104 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x25a0cfb8120 <col:118, col:125> col:125 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x25a0cfb8198 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x25a0cfb8210 <col:192, col:208> col:208 _Format 'const wchar_t *'
|-FunctionDecl 0x25a0cfb8938 <line:473:40, col:234> col:52 _vsnwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x25a0cfb8518 <col:95, col:105> col:105 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x25a0cfb8590 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x25a0cfb8608 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x25a0cfb8680 <col:193, col:209> col:209 _Format 'const wchar_t *'
| `-ParmVarDecl 0x25a0cfb86f8 <col:218, col:226> col:226 _ArgList 'va_list':'char *'
|-FunctionDecl 0x25a0cfb8cf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:89 _snwprintf 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x25a0cfb8ae8 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x25a0cfb8b60 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x25a0cfb8bd8 <col:254, col:271> col:271 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x25a0cfb8db0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x25a0cfb92c0 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:101 _vsnwprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x25a0cfb8fb0 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x25a0cfb9090 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x25a0cfb9108 <col:254, col:271> col:271 _Format 'const wchar_t *'
| |-ParmVarDecl 0x25a0cfb9180 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x25a0cfb9380 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x25a0cfb9638 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:480:28, col:132> col:40 _fwprintf_p 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x25a0cfb94c0 <col:60, col:67> col:67 _File 'FILE *'
| `-ParmVarDecl 0x25a0cfb9538 <col:104, col:120> col:120 _Format 'const wchar_t *'
|-FunctionDecl 0x25a0cfb97f0 <line:481:28, col:109> col:40 _wprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x25a0cfb9710 <col:81, col:97> col:97 _Format 'const wchar_t *'
|-FunctionDecl 0x25a0cfb9ad0 <line:482:28, col:146> col:40 _vfwprintf_p 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x25a0cfb98c0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x25a0cfb9938 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x25a0cfb99b0 <col:130, col:138> col:138 _ArgList 'va_list':'char *'
|-FunctionDecl 0x25a0cfb9d28 <line:483:28, col:123> col:40 _vwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x25a0cfb9bb0 <col:82, col:98> col:98 _Format 'const wchar_t *'
| `-ParmVarDecl 0x25a0cfb9c28 <col:107, col:115> col:115 _ArgList 'va_list':'char *'
|-FunctionDecl 0x25a0cfc1f40 <line:484:28, col:178> col:40 _swprintf_p 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x25a0cfb9e00 <col:78, col:88> col:88 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x25a0cfb9e78 <col:102, col:109> col:109 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x25a0cfb9ef0 <col:150, col:166> col:166 _Format 'const wchar_t *'
|-FunctionDecl 0x25a0cfc22c8 <line:485:28, col:192> col:40 _vswprintf_p 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x25a0cfc2020 <col:79, col:89> col:89 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x25a0cfc2098 <col:103, col:110> col:110 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x25a0cfc2110 <col:151, col:167> col:167 _Format 'const wchar_t *'
| `-ParmVarDecl 0x25a0cfc2188 <col:176, col:184> col:184 _ArgList 'va_list':'char *'
|-FunctionDecl 0x25a0cfc2490 <line:486:24, col:107> col:36 _scwprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x25a0cfc23b0 <col:79, col:95> col:95 _Format 'const wchar_t *'
|-FunctionDecl 0x25a0cfc26d8 <line:487:24, col:121> col:36 _vscwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x25a0cfc2560 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x25a0cfc25d8 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x25a0cfc29e0 <line:489:28, col:147> col:40 _wprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x25a0cfc27b0 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x25a0cfc2828 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x25a0cfc2c30 <line:490:28, col:149> col:40 _wprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x25a0cfc2ab8 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x25a0cfc2b30 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x25a0cfc2e80 <line:491:28, col:149> col:40 _wprintf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x25a0cfc2d08 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x25a0cfc2d80 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x25a0cfc6278 <line:492:28, col:161> col:40 _vwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x25a0cfc5fa8 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x25a0cfc6020 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x25a0cfc6098 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x25a0cfc6568 <line:493:28, col:163> col:40 _vwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x25a0cfc6358 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x25a0cfc63d0 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x25a0cfc6448 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x25a0cfc6858 <line:494:28, col:163> col:40 _vwprintf_s_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x25a0cfc6648 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x25a0cfc66c0 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x25a0cfc6738 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x25a0cfc6c18 <line:496:28, col:170> col:40 _fwprintf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x25a0cfc6938 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x25a0cfc69b0 <col:114, col:130> col:130 _Format 'const wchar_t *'
| `-ParmVarDecl 0x25a0cfc6a28 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x25a0cfc2f50 <line:497:28, col:172> col:40 _fwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x25a0cfc6cf8 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x25a0cfc6d70 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x25a0cfc6de8 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x25a0cfc3240 <line:498:28, col:172> col:40 _fwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x25a0cfc3030 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x25a0cfc30a8 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x25a0cfc3120 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x25a0cfc3690 <line:499:28, col:184> col:40 _vfwprintf_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x25a0cfc3320 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x25a0cfc3398 <col:115, col:131> col:131 _Format 'const wchar_t *'
| |-ParmVarDecl 0x25a0cfc3410 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x25a0cfc3488 <col:168, col:176> col:176 _ArgList 'va_list':'char *'
|-FunctionDecl 0x25a0cfc3a20 <line:500:28, col:186> col:40 _vfwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x25a0cfc3778 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x25a0cfc37f0 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x25a0cfc3868 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x25a0cfc38e0 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x25a0cfc3db0 <line:501:28, col:186> col:40 _vfwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x25a0cfc3b08 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x25a0cfc3b80 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x25a0cfc3bf8 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x25a0cfc3c70 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x25a0cfc4270 <line:503:28, col:218> col:40 _swprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x25a0cfc3e98 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x25a0cfc3f60 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x25a0cfc3fd8 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x25a0cfc4050 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x25a0cfc4600 <line:504:28, col:218> col:40 _swprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x25a0cfc4358 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x25a0cfc43d0 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x25a0cfc4448 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x25a0cfc44c0 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x25a0cfc4990 <line:505:40, col:228> col:52 _swprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x25a0cfc46e8 <col:91, col:101> col:101 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x25a0cfc4760 <col:115, col:122> col:122 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x25a0cfc47d8 <col:172, col:188> col:188 _Format 'const wchar_t *'
| `-ParmVarDecl 0x25a0cfc4850 <col:206, col:216> col:216 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x25a0cfc4e98 <line:506:28, col:232> col:40 used _vswprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x25a0cfc4a78 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x25a0cfc4af0 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x25a0cfc4b68 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x25a0cfc4be0 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x25a0cfc4c58 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x25a0cfc52d8 <line:507:28, col:232> col:40 _vswprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x25a0cfc4f98 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x25a0cfc5010 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x25a0cfc5088 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x25a0cfc5100 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x25a0cfc5178 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x25a0cfc5708 <line:508:40, col:242> col:52 _vswprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x25a0cfc53c8 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x25a0cfc5440 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x25a0cfc54b8 <col:173, col:189> col:189 _Format 'const wchar_t *'
| |-ParmVarDecl 0x25a0cfc5530 <col:207, col:217> col:217 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x25a0cfc55a8 <col:226, col:234> col:234 _ArgList 'va_list':'char *'
|-FunctionDecl 0x25a0cfc5970 <line:510:24, col:145> col:36 _scwprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x25a0cfc57f8 <col:89, col:105> col:105 _Format 'const wchar_t *'
| `-ParmVarDecl 0x25a0cfc5870 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x25a0cfc5bc0 <line:511:24, col:147> col:36 _scwprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x25a0cfc5a48 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x25a0cfc5ac0 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x25a0cfc5ea8 <line:512:24, col:161> col:36 _vscwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x25a0cfc5c98 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x25a0cfc5d10 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x25a0cfc5d88 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x25a0cfc7328 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:514:255> col:80 _snwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x25a0cfc7080 <col:117, col:127> col:127 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x25a0cfc70f8 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x25a0cfc7170 <col:199, col:215> col:215 _Format 'const wchar_t *'
| |-ParmVarDecl 0x25a0cfc71e8 <col:233, col:243> col:243 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x25a0cfc73e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x25a0cfc7958 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:515:40, col:252> col:52 _snwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x25a0cfc7530 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x25a0cfc75a8 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x25a0cfc7620 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x25a0cfc7698 <col:196, col:212> col:212 _Format 'const wchar_t *'
| `-ParmVarDecl 0x25a0cfc7710 <col:230, col:240> col:240 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x25a0cfc7e90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:516:270> col:81 _vsnwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x25a0cfc7b50 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x25a0cfc7bc8 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x25a0cfc7c40 <col:201, col:217> col:217 _Format 'const wchar_t *'
| |-ParmVarDecl 0x25a0cfc7cb8 <col:235, col:245> col:245 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x25a0cfc7d30 <col:254, col:262> col:262 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x25a0cfc7fa0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x25a0cfc85b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:517:40, col:266> col:52 _vsnwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x25a0cfc80e8 <col:93, col:103> col:103 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x25a0cfc8160 <col:117, col:124> col:124 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x25a0cfc81d8 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x25a0cfc8250 <col:197, col:213> col:213 _Format 'const wchar_t *'
| |-ParmVarDecl 0x25a0cfc82c8 <col:231, col:241> col:241 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x25a0cfc8340 <col:250, col:258> col:258 _ArgList 'va_list':'char *'
|-FunctionDecl 0x25a0cfc8ab0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:110 _swprintf 'int (wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x25a0cfc8878 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x25a0cfc88f0 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-DeprecatedAttr 0x25a0cfc8b60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x25a0cfc8c78 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x25a0cfc1198 <col:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:134 _vswprintf 'int (wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x25a0cfc8f30 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x25a0cfc0f40 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-ParmVarDecl 0x25a0cfc0fb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x25a0cfc1250 <line:275:47, col:63> "This function or variable may be unsafe. Consider using vswprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x25a0cfc1368 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x25a0cfc1908 <col:36, line:1961:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:110 __swprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x25a0cfc1628 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x25a0cfc16a0 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x25a0cfc1718 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-DeprecatedAttr 0x25a0cfc19c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __swprintf_l_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x25a0cfc1ae0 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x25a0cfcc1f0 <col:36, line:1962:166> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:124 __vswprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x25a0cfc1da0 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x25a0cfc1e18 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x25a0cfc1e90 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x25a0cfcbfe0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1962:153, col:161> col:161 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x25a0cfcc2b0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vswprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x25a0cfcc3d0 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x25a0cfcc6d8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:36:1, line:44:1> line:36:21 swprintf 'int (wchar_t *, size_t, const wchar_t *, ...)' static inline
| |-ParmVarDecl 0x25a0cfcc4f8 <col:53, col:63> col:63 used _String 'wchar_t *'
| |-ParmVarDecl 0x25a0cfcc570 <col:72, col:79> col:79 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x25a0cfcc5e8 <col:117, col:133> col:133 used _Format 'const wchar_t *'
| `-CompoundStmt 0x25a0cfd02c0 <line:37:1, line:44:1>
|   |-DeclStmt 0x25a0cfcc820 <line:38:5, col:21>
|   | `-VarDecl 0x25a0cfcc7b8 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x25a0cfcc8b8 <line:39:5, col:13>
|   | `-VarDecl 0x25a0cfcc850 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x25a0cfccc10 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x25a0cfccbf8 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x25a0cfccb10 <col:34> '<builtin fn type>' Function 0x25a0cfcc9a8 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x25a0cfccb48 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:40:19> 'va_list':'char *' lvalue Var 0x25a0cfcc7b8 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x25a0cfccb80 <col:29> 'const wchar_t *' lvalue ParmVar 0x25a0cfcc5e8 '_Format' 'const wchar_t *'
|   |-BinaryOperator 0x25a0cfcced0 <line:41:5, col:67> 'int' '='
|   | |-DeclRefExpr 0x25a0cfccc40 <col:5> 'int' lvalue Var 0x25a0cfcc850 '_Ret' 'int'
|   | `-CallExpr 0x25a0cfcce10 <col:12, col:67> 'int'
|   |   |-ImplicitCastExpr 0x25a0cfccdf8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x25a0cfccc78 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x25a0cfc4e98 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x25a0cfcce58 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x25a0cfccc98 <col:27> 'wchar_t *' lvalue ParmVar 0x25a0cfcc4f8 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x25a0cfcce70 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x25a0cfcccb8 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x25a0cfcc570 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x25a0cfcce88 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x25a0cfcccd8 <col:44> 'const wchar_t *' lvalue ParmVar 0x25a0cfcc5e8 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x25a0cfccea0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|   |   | `-ParenExpr 0x25a0cfccd60 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x25a0cfccd38 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x25a0cfcccf8 <col:26> 'int' 0
|   |   `-ImplicitCastExpr 0x25a0cfcceb8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:41:59> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x25a0cfccd80 <col:59> 'va_list':'char *' lvalue Var 0x25a0cfcc7b8 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x25a0cfd0250 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x25a0cfd0238 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x25a0cfd0188 <col:34> '<builtin fn type>' Function 0x25a0cfd0020 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x25a0cfd01c0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:42:17> 'va_list':'char *' lvalue Var 0x25a0cfcc7b8 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x25a0cfd02b0 <line:43:5, col:12>
|     `-ImplicitCastExpr 0x25a0cfd0298 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x25a0cfd0278 <col:12> 'int' lvalue Var 0x25a0cfcc850 '_Ret' 'int'
|-FunctionDecl 0x25a0cfcc9a8 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34> col:34 implicit used __builtin_va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x25a0cfcca48 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x25a0cfccab8 <col:34> Implicit
|-FunctionDecl 0x25a0cfd0020 <line:27:34> col:34 implicit used __builtin_va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x25a0cfd00c0 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x25a0cfd0130 <col:34> Implicit
|-FunctionDecl 0x25a0cfd05b8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:49:1, line:52:1> line:49:31 vswprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)' static inline
| |-ParmVarDecl 0x25a0cfd0310 <col:64, col:74> col:74 used _String 'wchar_t *'
| |-ParmVarDecl 0x25a0cfd0388 <col:83, col:90> col:90 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x25a0cfd0400 <col:138, col:154> col:154 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x25a0cfd0478 <col:163, col:171> col:171 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x25a0cfd08a0 <line:50:1, line:52:1>
|   `-ReturnStmt 0x25a0cfd0890 <line:51:5, col:62>
|     `-CallExpr 0x25a0cfd07d0 <col:12, col:62> 'int'
|       |-ImplicitCastExpr 0x25a0cfd07b8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x25a0cfd0690 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x25a0cfc4e98 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x25a0cfd0818 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x25a0cfd06b0 <col:27> 'wchar_t *' lvalue ParmVar 0x25a0cfd0310 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x25a0cfd0830 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x25a0cfd06d0 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x25a0cfd0388 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x25a0cfd0848 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x25a0cfd06f0 <col:44> 'const wchar_t *' lvalue ParmVar 0x25a0cfd0400 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x25a0cfd0860 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|       | `-ParenExpr 0x25a0cfd0778 <col:17, col:27> 'void *'
|       |   `-CStyleCastExpr 0x25a0cfd0750 <col:18, col:26> 'void *' <NullToPointer>
|       |     `-IntegerLiteral 0x25a0cfd0710 <col:26> 'int' 0
|       `-ImplicitCastExpr 0x25a0cfd0878 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:51:59> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x25a0cfd0798 <col:59> 'va_list':'char *' lvalue ParmVar 0x25a0cfd0478 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x25a0cfd0b40 <line:60:1, line:68:1> line:60:21 _swprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)' static inline
| |-ParmVarDecl 0x25a0cfd08c8 <col:56, col:66> col:66 used _String 'wchar_t *'
| |-ParmVarDecl 0x25a0cfd0940 <col:75, col:82> col:82 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x25a0cfd09b8 <col:130, col:146> col:146 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x25a0cfd0a30 <col:155, col:165> col:165 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| `-CompoundStmt 0x25a0cfcd098 <line:61:1, line:68:1>
|   |-DeclStmt 0x25a0cfd0c90 <line:62:5, col:21>
|   | `-VarDecl 0x25a0cfd0c28 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x25a0cfd0d28 <line:63:5, col:13>
|   | `-VarDecl 0x25a0cfd0cc0 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x25a0cfd0dd0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x25a0cfd0db8 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x25a0cfd0d40 <col:34> '<builtin fn type>' Function 0x25a0cfcc9a8 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x25a0cfd0d60 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:64:19> 'va_list':'char *' lvalue Var 0x25a0cfd0c28 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x25a0cfd0d98 <col:29> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x25a0cfd0a30 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |-BinaryOperator 0x25a0cfd0fd0 <line:65:5, col:72> 'int' '='
|   | |-DeclRefExpr 0x25a0cfd0e00 <col:5> 'int' lvalue Var 0x25a0cfd0cc0 '_Ret' 'int'
|   | `-CallExpr 0x25a0cfd0f10 <col:12, col:72> 'int'
|   |   |-ImplicitCastExpr 0x25a0cfd0ef8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x25a0cfd0e38 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x25a0cfc4e98 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x25a0cfd0f58 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x25a0cfd0e58 <col:27> 'wchar_t *' lvalue ParmVar 0x25a0cfd08c8 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x25a0cfd0f70 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x25a0cfd0e78 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x25a0cfd0940 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x25a0cfd0f88 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x25a0cfd0e98 <col:44> 'const wchar_t *' lvalue ParmVar 0x25a0cfd09b8 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x25a0cfd0fa0 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x25a0cfd0eb8 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x25a0cfd0a30 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |   `-ImplicitCastExpr 0x25a0cfd0fb8 <col:64> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x25a0cfd0ed8 <col:64> 'va_list':'char *' lvalue Var 0x25a0cfd0c28 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x25a0cfcd028 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x25a0cfcd010 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x25a0cfd0ff0 <col:34> '<builtin fn type>' Function 0x25a0cfd0020 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x25a0cfccff0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:66:17> 'va_list':'char *' lvalue Var 0x25a0cfd0c28 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x25a0cfcd088 <line:67:5, col:12>
|     `-ImplicitCastExpr 0x25a0cfcd070 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x25a0cfcd050 <col:12> 'int' lvalue Var 0x25a0cfd0cc0 '_Ret' 'int'
|-FunctionDecl 0x25a0cfcd428 <line:73:1, line:76:1> line:73:31 _vswprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' static inline
| |-ParmVarDecl 0x25a0cfcd0e8 <col:67, col:77> col:77 used _String 'wchar_t *'
| |-ParmVarDecl 0x25a0cfcd160 <col:86, col:93> col:93 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x25a0cfcd1d8 <col:141, col:157> col:157 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x25a0cfcd250 <col:166, col:176> col:176 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x25a0cfcd2c8 <col:187, col:195> col:195 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x25a0cfcd6b0 <line:74:1, line:76:1>
|   `-ReturnStmt 0x25a0cfcd6a0 <line:75:5, col:67>
|     `-CallExpr 0x25a0cfcd5e0 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x25a0cfcd5c8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x25a0cfcd508 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x25a0cfc4e98 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x25a0cfcd628 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x25a0cfcd528 <col:27> 'wchar_t *' lvalue ParmVar 0x25a0cfcd0e8 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x25a0cfcd640 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x25a0cfcd548 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x25a0cfcd160 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x25a0cfcd658 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x25a0cfcd568 <col:44> 'const wchar_t *' lvalue ParmVar 0x25a0cfcd1d8 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x25a0cfcd670 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|       | `-DeclRefExpr 0x25a0cfcd588 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x25a0cfcd250 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|       `-ImplicitCastExpr 0x25a0cfcd688 <col:64> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x25a0cfcd5a8 <col:64> 'va_list':'char *' lvalue ParmVar 0x25a0cfcd2c8 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x25a0cfcd8f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:555:24, col:129> col:42 _wtempnam 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x25a0cfcd6d8 <col:63, col:79> col:79 _Directory 'const wchar_t *'
| `-ParmVarDecl 0x25a0cfcd750 <col:102, col:118> col:118 _FilePrefix 'const wchar_t *'
|-FunctionDecl 0x25a0cfcdb48 <line:561:24, col:119> col:36 _vscwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x25a0cfcd9d0 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x25a0cfcda48 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x25a0cfcde30 <line:562:24, col:159> col:36 _vscwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x25a0cfcdc20 <col:90, col:106> col:106 _Format 'const wchar_t *'
| |-ParmVarDecl 0x25a0cfcdc98 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x25a0cfcdd10 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x25a0cfcb148 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:563:158> col:71 fwscanf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x25a0cfcafd0 <col:87, col:94> col:94 _File 'FILE *'
| |-ParmVarDecl 0x25a0cfcb048 <col:130, col:146> col:146 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x25a0cfcb1f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x25a0cfcb608 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:564:206> col:78 _fwscanf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x25a0cfcb3f8 <col:97, col:104> col:104 _File 'FILE *'
| |-ParmVarDecl 0x25a0cfcb470 <col:150, col:166> col:166 _Format 'const wchar_t *'
| |-ParmVarDecl 0x25a0cfcb4e8 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x25a0cfcb6c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x25a0cfcb978 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:568:28, col:131> col:40 fwscanf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x25a0cfcb800 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x25a0cfcb878 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x25a0cfcbc60 <line:570:28, col:172> col:40 _fwscanf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x25a0cfcba50 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x25a0cfcbac8 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x25a0cfcbb40 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x25a0cfcf080 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:571:165> col:71 swscanf 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x25a0cfcbe00 <col:86, col:102> col:102 _Src 'const wchar_t *'
| |-ParmVarDecl 0x25a0cfcbe78 <col:137, col:153> col:153 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x25a0cfcf130 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using swscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x25a0cfcf608 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:572:213> col:78 _swscanf_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x25a0cfcf330 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x25a0cfcf3a8 <col:157, col:173> col:173 _Format 'const wchar_t *'
| |-ParmVarDecl 0x25a0cfcf420 <col:191, col:201> col:201 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x25a0cfcf6c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x25a0cfcf978 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:574:40, col:149> col:52 swscanf_s 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x25a0cfcf800 <col:69, col:84> col:84 _Src 'const wchar_t *'
| `-ParmVarDecl 0x25a0cfcf878 <col:121, col:137> col:137 _Format 'const wchar_t *'
|-FunctionDecl 0x25a0cfcfc60 <line:576:40, col:191> col:52 _swscanf_s_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x25a0cfcfa50 <col:72, col:88> col:88 _Src 'const wchar_t *'
| |-ParmVarDecl 0x25a0cfcfac8 <col:135, col:151> col:151 _Format 'const wchar_t *'
| `-ParmVarDecl 0x25a0cfcfb40 <col:169, col:179> col:179 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x25a0cfc9098 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:577:219> col:77 _snwscanf 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x25a0cfcfe00 <col:117, col:133> col:133 _Src 'const wchar_t *'
| |-ParmVarDecl 0x25a0cfcfe78 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x25a0cfcfef0 <col:191, col:207> col:207 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x25a0cfc9150 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x25a0cfc96d0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:578:261> col:79 _snwscanf_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x25a0cfc9350 <col:121, col:137> col:137 _Src 'const wchar_t *'
| |-ParmVarDecl 0x25a0cfc93c8 <col:148, col:155> col:155 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x25a0cfc9440 <col:205, col:221> col:221 _Format 'const wchar_t *'
| |-ParmVarDecl 0x25a0cfc94b8 <col:239, col:249> col:249 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x25a0cfc9790 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x25a0cfc9ae0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:579:40, col:198> col:52 _snwscanf_s 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x25a0cfc98d0 <col:94, col:110> col:110 _Src 'const wchar_t *'
| |-ParmVarDecl 0x25a0cfc9948 <col:121, col:128> col:128 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x25a0cfc99c0 <col:170, col:186> col:186 _Format 'const wchar_t *'
|-FunctionDecl 0x25a0cfc9e68 <line:580:40, col:238> col:52 _snwscanf_s_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x25a0cfc9bc0 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x25a0cfc9c38 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x25a0cfc9cb0 <col:182, col:198> col:198 _Format 'const wchar_t *'
| `-ParmVarDecl 0x25a0cfc9d28 <col:216, col:226> col:226 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x25a0cfce1b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:581:134> col:70 wscanf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| |-ParmVarDecl 0x25a0cfce0d0 <col:106, col:122> col:122 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x25a0cfce258 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x25a0cfce5d0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:582:182> col:77 _wscanf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x25a0cfce458 <col:126, col:142> col:142 _Format 'const wchar_t *'
| |-ParmVarDecl 0x25a0cfce4d0 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x25a0cfce680 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x25a0cfce8a0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:584:40, col:120> col:52 wscanf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x25a0cfce7c0 <col:92, col:108> col:108 _Format 'const wchar_t *'
|-FunctionDecl 0x25a0cfceae8 <line:586:40, col:161> col:52 _wscanf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x25a0cfce970 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x25a0cfce9e8 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x25a0cfcede8 <line:589:24, col:99> col:39 _wfdopen 'FILE *(int, const wchar_t *) __attribute__((cdecl))':'FILE *(int, const wchar_t *)'
| |-ParmVarDecl 0x25a0cfcebc8 <col:53, col:57> col:57 _FileHandle 'int'
| `-ParmVarDecl 0x25a0cfcec40 <col:78, col:94> col:94 _Mode 'const wchar_t *'
|-FunctionDecl 0x25a0cfd4208 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:590:144> col:74 _wfopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x25a0cfcef80 <col:89, col:105> col:105 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x25a0cfd4060 <col:123, col:139> col:139 _Mode 'const wchar_t *'
| `-DeprecatedAttr 0x25a0cfd42b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x25a0cfd46c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:591:28, col:157> col:44 _wfopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x25a0cfd4400 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x25a0cfd4478 <col:102, col:118> col:118 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x25a0cfd44f0 <col:136, col:152> col:152 _Mode 'const wchar_t *'
|-FunctionDecl 0x25a0cfd4b20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:592:173> col:76 _wfreopen 'FILE *(const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x25a0cfd4860 <col:93, col:109> col:109 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x25a0cfd48d8 <col:127, col:143> col:143 _Mode 'const wchar_t *'
| |-ParmVarDecl 0x25a0cfd4950 <col:158, col:165> col:165 _OldFile 'FILE *'
| `-DeprecatedAttr 0x25a0cfd4bd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfreopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x25a0cfd50b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:593:28, col:184> col:44 _wfreopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x25a0cfd4d20 <col:82, col:90> col:90 _File 'FILE **'
| |-ParmVarDecl 0x25a0cfd4d98 <col:104, col:120> col:120 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x25a0cfd4e10 <col:138, col:154> col:154 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x25a0cfd4e88 <col:169, col:176> col:176 _OldFile 'FILE *'
|-FunctionDecl 0x25a0cfd5310 <line:597:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x25a0cfd51a0 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x25a0cfd5550 <line:600:24, col:107> col:39 _wpopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x25a0cfd53e0 <col:54, col:69> col:69 _Command 'const wchar_t *'
| `-ParmVarDecl 0x25a0cfd5458 <col:86, col:102> col:102 _Mode 'const wchar_t *'
|-FunctionDecl 0x25a0cfd5708 <line:602:9, col:62> col:21 _wremove 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x25a0cfd5628 <col:37, col:53> col:53 _Filename 'const wchar_t *'
|-FunctionDecl 0x25a0cfd59f8 <line:603:28, col:127> col:44 _wtmpnam_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x25a0cfd57d8 <col:84, col:94> col:94 _DstBuf 'wchar_t *'
| `-ParmVarDecl 0x25a0cfd5850 <col:108, col:115> col:115 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x25a0cfd5c68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:605:82 _wtmpnam 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x25a0cfd5b90 <col:118, col:127> col:127 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x25a0cfd5d10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wtmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x25a0cfd5f28 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:607:28, col:78> col:43 _fgetwc_nolock 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x25a0cfd5e50 <col:66, col:73> col:73 _File 'FILE *'
|-FunctionDecl 0x25a0cfd6178 <line:608:28, col:96> col:43 _fputwc_nolock 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x25a0cfd5ff8 <col:63, col:71> col:71 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x25a0cfd6080 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x25a0cfd63c0 <line:609:28, col:96> col:43 _ungetwc_nolock 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x25a0cfd6250 <col:64, col:71> col:71 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x25a0cfd62c8 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x25a0cfd6570 <line:670:9, col:53> col:22 _lock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x25a0cfd6498 <col:41, col:48> col:48 _File 'FILE *'
|-FunctionDecl 0x25a0cfd6718 <line:671:9, col:55> col:22 _unlock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x25a0cfd6640 <col:43, col:50> col:50 _File 'FILE *'
|-FunctionDecl 0x25a0cfd68c8 <line:673:28, col:75> col:40 _fclose_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x25a0cfd67e8 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x25a0cfd6a78 <line:674:28, col:79> col:40 _fflush_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x25a0cfd6998 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x25a0cfd6df0 <line:675:28, col:179> col:43 _fread_nolock 'size_t (void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x25a0cfd6b50 <col:97, col:104> col:104 _DstBuf 'void *'
| |-ParmVarDecl 0x25a0cfd6bc8 <col:118, col:125> col:125 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x25a0cfd6c40 <col:144, col:151> col:151 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x25a0cfd6cb8 <col:167, col:174> col:174 _File 'FILE *'
|-FunctionDecl 0x25a0cfd1200 <line:676:28, col:203> col:43 _fread_nolock_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x25a0cfd6ee0 <col:99, col:106> col:106 _DstBuf 'void *'
| |-ParmVarDecl 0x25a0cfd6f58 <col:120, col:127> col:127 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x25a0cfd6fd0 <col:142, col:149> col:149 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x25a0cfd1030 <col:168, col:175> col:175 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x25a0cfd10a8 <col:191, col:198> col:198 _File 'FILE *'
|-FunctionDecl 0x25a0cfd1510 <line:677:28, col:111> col:40 _fseek_nolock 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x25a0cfd12f0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x25a0cfd1370 <col:81, col:86> col:86 _Offset 'long'
| `-ParmVarDecl 0x25a0cfd13f0 <col:100, col:104> col:104 _Origin 'int'
|-FunctionDecl 0x25a0cfd16d0 <line:678:24, col:71> col:37 _ftell_nolock 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x25a0cfd15f0 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x25a0cfd19c0 <line:679:28, col:117> col:40 _fseeki64_nolock 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x25a0cfd17a0 <col:65, col:72> col:72 _File 'FILE *'
| |-ParmVarDecl 0x25a0cfd1820 <col:84, col:92> col:92 _Offset 'long long'
| `-ParmVarDecl 0x25a0cfd18a0 <col:106, col:110> col:110 _Origin 'int'
|-FunctionDecl 0x25a0cfd1b80 <line:680:24, col:77> col:40 _ftelli64_nolock 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x25a0cfd1aa0 <col:65, col:72> col:72 _File 'FILE *'
|-FunctionDecl 0x25a0cfd1ef8 <line:681:28, col:170> col:43 _fwrite_nolock 'size_t (const void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (const void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x25a0cfd1c58 <col:89, col:102> col:102 _DstBuf 'const void *'
| |-ParmVarDecl 0x25a0cfd1cd0 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x25a0cfd1d48 <col:135, col:142> col:142 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x25a0cfd1dc0 <col:158, col:165> col:165 _File 'FILE *'
|-FunctionDecl 0x25a0cfd21b8 <line:682:28, col:89> col:40 _ungetc_nolock 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x25a0cfd2040 <col:60, col:64> col:64 _Ch 'int'
| `-ParmVarDecl 0x25a0cfd20b8 <col:77, col:84> col:84 _File 'FILE *'
|-FunctionDecl 0x25a0cfd24f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:709:136> col:57 tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x25a0cfd2370 <col:76, col:89> col:89 _Directory 'const char *'
| |-ParmVarDecl 0x25a0cfd23f0 <col:112, col:125> col:125 _FilePrefix 'const char *'
| `-DeprecatedAttr 0x25a0cfd25a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tempnam. See online help for details." ""
|-FunctionDecl 0x25a0cfd2858 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:715:89> col:75 fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x25a0cfd28f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcloseall. See online help for details." ""
|-FunctionDecl 0x25a0cfd2c38 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:716:127> col:71 fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x25a0cfd2ac0 <col:83, col:87> col:87 _FileHandle 'int'
| |-ParmVarDecl 0x25a0cfd2b40 <col:107, col:120> col:120 _Format 'const char *'
| `-DeprecatedAttr 0x25a0cfd2ce8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fdopen. See online help for details." ""
|-FunctionDecl 0x25a0cfd90b0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:717:87> col:74 fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x25a0cfd9150 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fgetchar. See online help for details." ""
|-FunctionDecl 0x25a0cfd93f0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:718:92> col:68 fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x25a0cfd9310 <col:80, col:87> col:87 _File 'FILE *'
| `-DeprecatedAttr 0x25a0cfd9498 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fileno. See online help for details." ""
|-FunctionDecl 0x25a0cfd9718 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:719:87> col:74 flushall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x25a0cfd97b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _flushall. See online help for details." ""
|-FunctionDecl 0x25a0cfd9a60 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:720:95> col:74 fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| |-ParmVarDecl 0x25a0cfd9980 <col:88, col:92> col:92 _Ch 'int'
| `-DeprecatedAttr 0x25a0cfd9b08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fputchar. See online help for details." ""
|-FunctionDecl 0x25a0cfd9de8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:721:91> col:66 getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x25a0cfd9d08 <col:79, col:86> col:86 _File 'FILE *'
| `-DeprecatedAttr 0x25a0cfd9e90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _getw. See online help for details." ""
|-FunctionDecl 0x25a0cfda238 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:722:109> col:70 putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x25a0cfda0c0 <col:80, col:84> col:84 _Ch 'int'
| |-ParmVarDecl 0x25a0cfda138 <col:97, col:104> col:104 _File 'FILE *'
| `-DeprecatedAttr 0x25a0cfda2e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putw. See online help for details." ""
|-FunctionDecl 0x25a0cfda5a8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:723:77> col:67 rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x25a0cfda648 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _rmtmp. See online help for details." ""
|-FunctionDecl 0x25a0cfdaab0 <.//openssl//file_jk/before\crypto\pkcs12\p12_utl.c:16:1, line:39:1> line:16:16 used OPENSSL_asc2uni 'unsigned char *(const char *, int, unsigned char **, int *)'
| |-ParmVarDecl 0x25a0cfda770 <col:32, col:44> col:44 used asc 'const char *'
| |-ParmVarDecl 0x25a0cfda7f0 <col:49, col:53> col:53 used asclen 'int'
| |-ParmVarDecl 0x25a0cfda8d8 <line:17:32, col:48> col:48 used uni 'unsigned char **'
| |-ParmVarDecl 0x25a0cfda958 <col:53, col:58> col:58 used unilen 'int *'
| `-CompoundStmt 0x25a0cfd3f10 <line:18:1, line:39:1>
|   |-DeclStmt 0x25a0cfdaca0 <line:19:5, col:16>
|   | |-VarDecl 0x25a0cfdaba0 <col:5, col:9> col:9 used ulen 'int'
|   | `-VarDecl 0x25a0cfdac20 <col:5, col:15> col:15 used i 'int'
|   |-DeclStmt 0x25a0cfdad38 <line:20:5, col:26>
|   | `-VarDecl 0x25a0cfdacd0 <col:5, col:20> col:20 used unitmp 'unsigned char *'
|   |-IfStmt 0x25a0cfdb078 <line:22:5, line:23:28>
|   | |-BinaryOperator 0x25a0cfdadc8 <line:22:9, col:20> 'int' '=='
|   | | |-ImplicitCastExpr 0x25a0cfdadb0 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x25a0cfdad50 <col:9> 'int' lvalue ParmVar 0x25a0cfda7f0 'asclen' 'int'
|   | | `-UnaryOperator 0x25a0cfdad98 <col:19, col:20> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x25a0cfdad70 <col:20> 'int' 1
|   | `-BinaryOperator 0x25a0cfdb058 <line:23:9, col:28> 'int' '='
|   |   |-DeclRefExpr 0x25a0cfdade8 <col:9> 'int' lvalue ParmVar 0x25a0cfda7f0 'asclen' 'int'
|   |   `-ImplicitCastExpr 0x25a0cfdb040 <col:18, col:28> 'int' <IntegralCast>
|   |     `-CallExpr 0x25a0cfdb000 <col:18, col:28> 'unsigned long long'
|   |       |-ImplicitCastExpr 0x25a0cfdafe8 <col:18> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x25a0cfdaf50 <col:18> 'unsigned long long (const char *)' Function 0x25a0cfdae40 'strlen' 'unsigned long long (const char *)'
|   |       `-ImplicitCastExpr 0x25a0cfdb028 <col:25> 'const char *' <LValueToRValue>
|   |         `-DeclRefExpr 0x25a0cfdaf88 <col:25> 'const char *' lvalue ParmVar 0x25a0cfda770 'asc' 'const char *'
|   |-BinaryOperator 0x25a0cfd3130 <line:24:5, col:25> 'int' '='
|   | |-DeclRefExpr 0x25a0cfdb090 <col:5> 'int' lvalue Var 0x25a0cfdaba0 'ulen' 'int'
|   | `-BinaryOperator 0x25a0cfd3110 <col:12, col:25> 'int' '+'
|   |   |-BinaryOperator 0x25a0cfd30c8 <col:12, col:21> 'int' '*'
|   |   | |-ImplicitCastExpr 0x25a0cfd30b0 <col:12> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x25a0cfd3068 <col:12> 'int' lvalue ParmVar 0x25a0cfda7f0 'asclen' 'int'
|   |   | `-IntegerLiteral 0x25a0cfd3088 <col:21> 'int' 2
|   |   `-IntegerLiteral 0x25a0cfd30e8 <col:25> 'int' 2
|   |-IfStmt 0x25a0cfd3538 <line:25:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   | |-BinaryOperator 0x25a0cfd3468 <.//openssl//file_jk/before\crypto\pkcs12\p12_utl.c:25:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ParenExpr 0x25a0cfd33a8 <.//openssl//file_jk/before\crypto\pkcs12\p12_utl.c:25:9, col:39> 'unsigned char *'
|   | | | `-BinaryOperator 0x25a0cfd3388 <col:10, col:38> 'unsigned char *' '='
|   | | |   |-DeclRefExpr 0x25a0cfd3150 <col:10> 'unsigned char *' lvalue Var 0x25a0cfdacd0 'unitmp' 'unsigned char *'
|   | | |   `-ImplicitCastExpr 0x25a0cfd3370 <col:19, col:38> 'unsigned char *' <IntegralToPointer>
|   | | |     `-CallExpr 0x25a0cfd3330 <col:19, col:38> 'int'
|   | | |       |-ImplicitCastExpr 0x25a0cfd3318 <col:19> 'int (*)()' <FunctionToPointerDecay>
|   | | |       | `-DeclRefExpr 0x25a0cfd32a8 <col:19> 'int ()' Function 0x25a0cfd31e0 'OPENSSL_malloc' 'int ()'
|   | | |       `-ImplicitCastExpr 0x25a0cfd3358 <col:34> 'int' <LValueToRValue>
|   | | |         `-DeclRefExpr 0x25a0cfd32c8 <col:34> 'int' lvalue Var 0x25a0cfdaba0 'ulen' 'int'
|   | | `-ImplicitCastExpr 0x25a0cfd3450 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <BitCast>
|   | |   `-ParenExpr 0x25a0cfd3430 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x25a0cfd3408 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x25a0cfd33c8 <col:26> 'int' 0
|   | `-ReturnStmt 0x25a0cfd3528 <.//openssl//file_jk/before\crypto\pkcs12\p12_utl.c:26:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |   `-ImplicitCastExpr 0x25a0cfd3510 <col:17, col:27> 'unsigned char *' <NullToPointer>
|   |     `-ParenExpr 0x25a0cfd34f0 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x25a0cfd34c8 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x25a0cfd3488 <col:26> 'int' 0
|   |-ForStmt 0x25a0cfd3a30 <.//openssl//file_jk/before\crypto\pkcs12\p12_utl.c:27:5, line:30:5>
|   | |-BinaryOperator 0x25a0cfd35b0 <line:27:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x25a0cfd3550 <col:10> 'int' lvalue Var 0x25a0cfdac20 'i' 'int'
|   | | `-IntegerLiteral 0x25a0cfd3588 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x25a0cfd3688 <col:17, col:28> 'int' '<'
|   | | |-ImplicitCastExpr 0x25a0cfd3670 <col:17> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x25a0cfd35d0 <col:17> 'int' lvalue Var 0x25a0cfdac20 'i' 'int'
|   | | `-BinaryOperator 0x25a0cfd3650 <col:21, col:28> 'int' '-'
|   | |   |-ImplicitCastExpr 0x25a0cfd3638 <col:21> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x25a0cfd35f0 <col:21> 'int' lvalue Var 0x25a0cfdaba0 'ulen' 'int'
|   | |   `-IntegerLiteral 0x25a0cfd3610 <col:28> 'int' 2
|   | |-CompoundAssignOperator 0x25a0cfd36f0 <col:31, col:36> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | | |-DeclRefExpr 0x25a0cfd36a8 <col:31> 'int' lvalue Var 0x25a0cfdac20 'i' 'int'
|   | | `-IntegerLiteral 0x25a0cfd36c8 <col:36> 'int' 2
|   | `-CompoundStmt 0x25a0cfd3a10 <col:39, line:30:5>
|   |   |-BinaryOperator 0x25a0cfd37f0 <line:28:9, col:21> 'unsigned char' '='
|   |   | |-ArraySubscriptExpr 0x25a0cfd3790 <col:9, col:17> 'unsigned char' lvalue
|   |   | | |-ImplicitCastExpr 0x25a0cfd3760 <col:9> 'unsigned char *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x25a0cfd3720 <col:9> 'unsigned char *' lvalue Var 0x25a0cfdacd0 'unitmp' 'unsigned char *'
|   |   | | `-ImplicitCastExpr 0x25a0cfd3778 <col:16> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x25a0cfd3740 <col:16> 'int' lvalue Var 0x25a0cfdac20 'i' 'int'
|   |   | `-ImplicitCastExpr 0x25a0cfd37d8 <col:21> 'unsigned char' <IntegralCast>
|   |   |   `-IntegerLiteral 0x25a0cfd37b0 <col:21> 'int' 0
|   |   `-BinaryOperator 0x25a0cfd39f0 <line:29:9, col:35> 'unsigned char' '='
|   |     |-ArraySubscriptExpr 0x25a0cfd38c8 <col:9, col:21> 'unsigned char' lvalue
|   |     | |-ImplicitCastExpr 0x25a0cfd38b0 <col:9> 'unsigned char *' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x25a0cfd3810 <col:9> 'unsigned char *' lvalue Var 0x25a0cfdacd0 'unitmp' 'unsigned char *'
|   |     | `-BinaryOperator 0x25a0cfd3890 <col:16, col:20> 'int' '+'
|   |     |   |-ImplicitCastExpr 0x25a0cfd3878 <col:16> 'int' <LValueToRValue>
|   |     |   | `-DeclRefExpr 0x25a0cfd3830 <col:16> 'int' lvalue Var 0x25a0cfdac20 'i' 'int'
|   |     |   `-IntegerLiteral 0x25a0cfd3850 <col:20> 'int' 1
|   |     `-ImplicitCastExpr 0x25a0cfd39d8 <col:25, col:35> 'unsigned char' <IntegralCast>
|   |       `-ImplicitCastExpr 0x25a0cfd39c0 <col:25, col:35> 'char' <LValueToRValue>
|   |         `-ArraySubscriptExpr 0x25a0cfd39a0 <col:25, col:35> 'const char' lvalue
|   |           |-ImplicitCastExpr 0x25a0cfd3988 <col:25> 'const char *' <LValueToRValue>
|   |           | `-DeclRefExpr 0x25a0cfd38e8 <col:25> 'const char *' lvalue ParmVar 0x25a0cfda770 'asc' 'const char *'
|   |           `-BinaryOperator 0x25a0cfd3968 <col:29, col:34> 'int' '>>'
|   |             |-ImplicitCastExpr 0x25a0cfd3950 <col:29> 'int' <LValueToRValue>
|   |             | `-DeclRefExpr 0x25a0cfd3908 <col:29> 'int' lvalue Var 0x25a0cfdac20 'i' 'int'
|   |             `-IntegerLiteral 0x25a0cfd3928 <col:34> 'int' 1
|   |-BinaryOperator 0x25a0cfd3b80 <line:32:5, col:24> 'unsigned char' '='
|   | |-ArraySubscriptExpr 0x25a0cfd3b20 <col:5, col:20> 'unsigned char' lvalue
|   | | |-ImplicitCastExpr 0x25a0cfd3b08 <col:5> 'unsigned char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x25a0cfd3a68 <col:5> 'unsigned char *' lvalue Var 0x25a0cfdacd0 'unitmp' 'unsigned char *'
|   | | `-BinaryOperator 0x25a0cfd3ae8 <col:12, col:19> 'int' '-'
|   | |   |-ImplicitCastExpr 0x25a0cfd3ad0 <col:12> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x25a0cfd3a88 <col:12> 'int' lvalue Var 0x25a0cfdaba0 'ulen' 'int'
|   | |   `-IntegerLiteral 0x25a0cfd3aa8 <col:19> 'int' 2
|   | `-ImplicitCastExpr 0x25a0cfd3b68 <col:24> 'unsigned char' <IntegralCast>
|   |   `-IntegerLiteral 0x25a0cfd3b40 <col:24> 'int' 0
|   |-BinaryOperator 0x25a0cfd3cb8 <line:33:5, col:24> 'unsigned char' '='
|   | |-ArraySubscriptExpr 0x25a0cfd3c58 <col:5, col:20> 'unsigned char' lvalue
|   | | |-ImplicitCastExpr 0x25a0cfd3c40 <col:5> 'unsigned char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x25a0cfd3ba0 <col:5> 'unsigned char *' lvalue Var 0x25a0cfdacd0 'unitmp' 'unsigned char *'
|   | | `-BinaryOperator 0x25a0cfd3c20 <col:12, col:19> 'int' '-'
|   | |   |-ImplicitCastExpr 0x25a0cfd3c08 <col:12> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x25a0cfd3bc0 <col:12> 'int' lvalue Var 0x25a0cfdaba0 'ulen' 'int'
|   | |   `-IntegerLiteral 0x25a0cfd3be0 <col:19> 'int' 1
|   | `-ImplicitCastExpr 0x25a0cfd3ca0 <col:24> 'unsigned char' <IntegralCast>
|   |   `-IntegerLiteral 0x25a0cfd3c78 <col:24> 'int' 0
|   |-IfStmt 0x25a0cfd3db8 <line:34:5, line:35:19>
|   | |-ImplicitCastExpr 0x25a0cfd3cf8 <line:34:9> 'int *' <LValueToRValue>
|   | | `-DeclRefExpr 0x25a0cfd3cd8 <col:9> 'int *' lvalue ParmVar 0x25a0cfda958 'unilen' 'int *'
|   | `-BinaryOperator 0x25a0cfd3d98 <line:35:9, col:19> 'int' '='
|   |   |-UnaryOperator 0x25a0cfd3d48 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
|   |   | `-ImplicitCastExpr 0x25a0cfd3d30 <col:10> 'int *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x25a0cfd3d10 <col:10> 'int *' lvalue ParmVar 0x25a0cfda958 'unilen' 'int *'
|   |   `-ImplicitCastExpr 0x25a0cfd3d80 <col:19> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x25a0cfd3d60 <col:19> 'int' lvalue Var 0x25a0cfdaba0 'ulen' 'int'
|   |-IfStmt 0x25a0cfd3eb0 <line:36:5, line:37:16>
|   | |-ImplicitCastExpr 0x25a0cfd3df0 <line:36:9> 'unsigned char **' <LValueToRValue>
|   | | `-DeclRefExpr 0x25a0cfd3dd0 <col:9> 'unsigned char **' lvalue ParmVar 0x25a0cfda8d8 'uni' 'unsigned char **'
|   | `-BinaryOperator 0x25a0cfd3e90 <line:37:9, col:16> 'unsigned char *' '='
|   |   |-UnaryOperator 0x25a0cfd3e40 <col:9, col:10> 'unsigned char *' lvalue prefix '*' cannot overflow
|   |   | `-ImplicitCastExpr 0x25a0cfd3e28 <col:10> 'unsigned char **' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x25a0cfd3e08 <col:10> 'unsigned char **' lvalue ParmVar 0x25a0cfda8d8 'uni' 'unsigned char **'
|   |   `-ImplicitCastExpr 0x25a0cfd3e78 <col:16> 'unsigned char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x25a0cfd3e58 <col:16> 'unsigned char *' lvalue Var 0x25a0cfdacd0 'unitmp' 'unsigned char *'
|   `-ReturnStmt 0x25a0cfd3f00 <line:38:5, col:12>
|     `-ImplicitCastExpr 0x25a0cfd3ee8 <col:12> 'unsigned char *' <LValueToRValue>
|       `-DeclRefExpr 0x25a0cfd3ec8 <col:12> 'unsigned char *' lvalue Var 0x25a0cfdacd0 'unitmp' 'unsigned char *'
|-FunctionDecl 0x25a0cfdae40 <line:23:18> col:18 implicit used strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x25a0cfdaee0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x25a0cfdb1e0 <line:41:1, line:59:1> line:41:7 used OPENSSL_uni2asc 'char *(const unsigned char *, int)'
| |-ParmVarDecl 0x25a0cfd3f90 <col:23, col:44> col:44 used uni 'const unsigned char *'
| |-ParmVarDecl 0x25a0cfdb0d0 <col:49, col:53> col:53 used unilen 'int'
| `-CompoundStmt 0x25a0cfdc038 <line:42:1, line:59:1>
|   |-DeclStmt 0x25a0cfdb3c0 <line:43:5, col:18>
|   | |-VarDecl 0x25a0cfdb2c0 <col:5, col:9> col:9 used asclen 'int'
|   | `-VarDecl 0x25a0cfdb340 <col:5, col:17> col:17 used i 'int'
|   |-DeclStmt 0x25a0cfdb458 <line:44:5, col:17>
|   | `-VarDecl 0x25a0cfdb3f0 <col:5, col:11> col:11 used asctmp 'char *'
|   |-IfStmt 0x25a0cfdb5a0 <line:46:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   | |-BinaryOperator 0x25a0cfdb4d0 <.//openssl//file_jk/before\crypto\pkcs12\p12_utl.c:46:9, col:18> 'int' '&'
|   | | |-ImplicitCastExpr 0x25a0cfdb4b8 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x25a0cfdb470 <col:9> 'int' lvalue ParmVar 0x25a0cfdb0d0 'unilen' 'int'
|   | | `-IntegerLiteral 0x25a0cfdb490 <col:18> 'int' 1
|   | `-ReturnStmt 0x25a0cfdb590 <line:47:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |   `-ImplicitCastExpr 0x25a0cfdb578 <col:17, col:27> 'char *' <NullToPointer>
|   |     `-ParenExpr 0x25a0cfdb558 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x25a0cfdb530 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x25a0cfdb4f0 <col:26> 'int' 0
|   |-BinaryOperator 0x25a0cfdb670 <.//openssl//file_jk/before\crypto\pkcs12\p12_utl.c:48:5, col:23> 'int' '='
|   | |-DeclRefExpr 0x25a0cfdb5b8 <col:5> 'int' lvalue Var 0x25a0cfdb2c0 'asclen' 'int'
|   | `-BinaryOperator 0x25a0cfdb650 <col:14, col:23> 'int' '/'
|   |   |-ImplicitCastExpr 0x25a0cfdb638 <col:14> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x25a0cfdb5f0 <col:14> 'int' lvalue ParmVar 0x25a0cfdb0d0 'unilen' 'int'
|   |   `-IntegerLiteral 0x25a0cfdb610 <col:23> 'int' 2
|   |-IfStmt 0x25a0cfdb840 <line:50:5, line:51:15>
|   | |-BinaryOperator 0x25a0cfdb7e8 <line:50:9, col:34> 'int' '||'
|   | | |-UnaryOperator 0x25a0cfdb6c8 <col:9, col:10> 'int' prefix '!' cannot overflow
|   | | | `-ImplicitCastExpr 0x25a0cfdb6b0 <col:10> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x25a0cfdb690 <col:10> 'int' lvalue ParmVar 0x25a0cfdb0d0 'unilen' 'int'
|   | | `-ImplicitCastExpr 0x25a0cfdb7d0 <col:20, col:34> 'int' <IntegralCast>
|   | |   `-ImplicitCastExpr 0x25a0cfdb7b8 <col:20, col:34> 'unsigned char' <LValueToRValue>
|   | |     `-ArraySubscriptExpr 0x25a0cfdb798 <col:20, col:34> 'const unsigned char' lvalue
|   | |       |-ImplicitCastExpr 0x25a0cfdb780 <col:20> 'const unsigned char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x25a0cfdb6e0 <col:20> 'const unsigned char *' lvalue ParmVar 0x25a0cfd3f90 'uni' 'const unsigned char *'
|   | |       `-BinaryOperator 0x25a0cfdb760 <col:24, col:33> 'int' '-'
|   | |         |-ImplicitCastExpr 0x25a0cfdb748 <col:24> 'int' <LValueToRValue>
|   | |         | `-DeclRefExpr 0x25a0cfdb700 <col:24> 'int' lvalue ParmVar 0x25a0cfdb0d0 'unilen' 'int'
|   | |         `-IntegerLiteral 0x25a0cfdb720 <col:33> 'int' 1
|   | `-UnaryOperator 0x25a0cfdb828 <line:51:9, col:15> 'int' postfix '++'
|   |   `-DeclRefExpr 0x25a0cfdb808 <col:9> 'int' lvalue Var 0x25a0cfdb2c0 'asclen' 'int'
|   |-UnaryOperator 0x25a0cfdb878 <line:52:5, col:8> 'const unsigned char *' postfix '++'
|   | `-DeclRefExpr 0x25a0cfdb858 <col:5> 'const unsigned char *' lvalue ParmVar 0x25a0cfd3f90 'uni' 'const unsigned char *'
|   |-IfStmt 0x25a0cfdbb28 <line:53:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   | |-BinaryOperator 0x25a0cfdba58 <.//openssl//file_jk/before\crypto\pkcs12\p12_utl.c:53:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ParenExpr 0x25a0cfdb998 <.//openssl//file_jk/before\crypto\pkcs12\p12_utl.c:53:9, col:41> 'char *'
|   | | | `-BinaryOperator 0x25a0cfdb978 <col:10, col:40> 'char *' '='
|   | | |   |-DeclRefExpr 0x25a0cfdb890 <col:10> 'char *' lvalue Var 0x25a0cfdb3f0 'asctmp' 'char *'
|   | | |   `-ImplicitCastExpr 0x25a0cfdb960 <col:19, col:40> 'char *' <IntegralToPointer>
|   | | |     `-CallExpr 0x25a0cfdb920 <col:19, col:40> 'int'
|   | | |       |-ImplicitCastExpr 0x25a0cfdb908 <col:19> 'int (*)()' <FunctionToPointerDecay>
|   | | |       | `-DeclRefExpr 0x25a0cfdb8c8 <col:19> 'int ()' Function 0x25a0cfd31e0 'OPENSSL_malloc' 'int ()'
|   | | |       `-ImplicitCastExpr 0x25a0cfdb948 <col:34> 'int' <LValueToRValue>
|   | | |         `-DeclRefExpr 0x25a0cfdb8e8 <col:34> 'int' lvalue Var 0x25a0cfdb2c0 'asclen' 'int'
|   | | `-ImplicitCastExpr 0x25a0cfdba40 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x25a0cfdba20 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x25a0cfdb9f8 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x25a0cfdb9b8 <col:26> 'int' 0
|   | `-ReturnStmt 0x25a0cfdbb18 <.//openssl//file_jk/before\crypto\pkcs12\p12_utl.c:54:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |   `-ImplicitCastExpr 0x25a0cfdbb00 <col:17, col:27> 'char *' <NullToPointer>
|   |     `-ParenExpr 0x25a0cfdbae0 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x25a0cfdbab8 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x25a0cfdba78 <col:26> 'int' 0
|   |-ForStmt 0x25a0cfdbe80 <.//openssl//file_jk/before\crypto\pkcs12\p12_utl.c:55:5, line:56:31>
|   | |-BinaryOperator 0x25a0cfdbba0 <line:55:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x25a0cfdbb40 <col:10> 'int' lvalue Var 0x25a0cfdb340 'i' 'int'
|   | | `-IntegerLiteral 0x25a0cfdbb78 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x25a0cfdbc30 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x25a0cfdbc00 <col:17> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x25a0cfdbbc0 <col:17> 'int' lvalue Var 0x25a0cfdb340 'i' 'int'
|   | | `-ImplicitCastExpr 0x25a0cfdbc18 <col:21> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x25a0cfdbbe0 <col:21> 'int' lvalue ParmVar 0x25a0cfdb0d0 'unilen' 'int'
|   | |-CompoundAssignOperator 0x25a0cfdbc98 <col:29, col:34> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | | |-DeclRefExpr 0x25a0cfdbc50 <col:29> 'int' lvalue Var 0x25a0cfdb340 'i' 'int'
|   | | `-IntegerLiteral 0x25a0cfdbc70 <col:34> 'int' 2
|   | `-BinaryOperator 0x25a0cfdbe60 <line:56:9, col:31> 'char' '='
|   |   |-ArraySubscriptExpr 0x25a0cfdbd80 <col:9, col:22> 'char' lvalue
|   |   | |-ImplicitCastExpr 0x25a0cfdbd68 <col:9> 'char *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x25a0cfdbcc8 <col:9> 'char *' lvalue Var 0x25a0cfdb3f0 'asctmp' 'char *'
|   |   | `-BinaryOperator 0x25a0cfdbd48 <col:16, col:21> 'int' '>>'
|   |   |   |-ImplicitCastExpr 0x25a0cfdbd30 <col:16> 'int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x25a0cfdbce8 <col:16> 'int' lvalue Var 0x25a0cfdb340 'i' 'int'
|   |   |   `-IntegerLiteral 0x25a0cfdbd08 <col:21> 'int' 1
|   |   `-ImplicitCastExpr 0x25a0cfdbe48 <col:26, col:31> 'char' <IntegralCast>
|   |     `-ImplicitCastExpr 0x25a0cfdbe30 <col:26, col:31> 'unsigned char' <LValueToRValue>
|   |       `-ArraySubscriptExpr 0x25a0cfdbe10 <col:26, col:31> 'const unsigned char' lvalue
|   |         |-ImplicitCastExpr 0x25a0cfdbde0 <col:26> 'const unsigned char *' <LValueToRValue>
|   |         | `-DeclRefExpr 0x25a0cfdbda0 <col:26> 'const unsigned char *' lvalue ParmVar 0x25a0cfd3f90 'uni' 'const unsigned char *'
|   |         `-ImplicitCastExpr 0x25a0cfdbdf8 <col:30> 'int' <LValueToRValue>
|   |           `-DeclRefExpr 0x25a0cfdbdc0 <col:30> 'int' lvalue Var 0x25a0cfdb340 'i' 'int'
|   |-BinaryOperator 0x25a0cfdbfd0 <line:57:5, col:26> 'char' '='
|   | |-ArraySubscriptExpr 0x25a0cfdbf70 <col:5, col:22> 'char' lvalue
|   | | |-ImplicitCastExpr 0x25a0cfdbf58 <col:5> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x25a0cfdbeb8 <col:5> 'char *' lvalue Var 0x25a0cfdb3f0 'asctmp' 'char *'
|   | | `-BinaryOperator 0x25a0cfdbf38 <col:12, col:21> 'int' '-'
|   | |   |-ImplicitCastExpr 0x25a0cfdbf20 <col:12> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x25a0cfdbed8 <col:12> 'int' lvalue Var 0x25a0cfdb2c0 'asclen' 'int'
|   | |   `-IntegerLiteral 0x25a0cfdbef8 <col:21> 'int' 1
|   | `-ImplicitCastExpr 0x25a0cfdbfb8 <col:26> 'char' <IntegralCast>
|   |   `-IntegerLiteral 0x25a0cfdbf90 <col:26> 'int' 0
|   `-ReturnStmt 0x25a0cfdc028 <line:58:5, col:12>
|     `-ImplicitCastExpr 0x25a0cfdc010 <col:12> 'char *' <LValueToRValue>
|       `-DeclRefExpr 0x25a0cfdbff0 <col:12> 'char *' lvalue Var 0x25a0cfdb3f0 'asctmp' 'char *'
|-FunctionDecl 0x25a0cfde398 <line:70:1, line:142:1> line:70:16 OPENSSL_utf82uni 'unsigned char *(const char *, int, unsigned char **, int *)'
| |-ParmVarDecl 0x25a0cfde100 <col:33, col:45> col:45 used asc 'const char *'
| |-ParmVarDecl 0x25a0cfde180 <col:50, col:54> col:54 used asclen 'int'
| |-ParmVarDecl 0x25a0cfde208 <line:71:33, col:49> col:49 used uni 'unsigned char **'
| |-ParmVarDecl 0x25a0cfde288 <col:54, col:59> col:59 used unilen 'int *'
| `-CompoundStmt 0x25a0cfddee8 <line:72:1, line:142:1>
|   |-DeclStmt 0x25a0cfde610 <line:73:5, col:19>
|   | |-VarDecl 0x25a0cfde488 <col:5, col:9> col:9 used ulen 'int'
|   | |-VarDecl 0x25a0cfde508 <col:5, col:15> col:15 used i 'int'
|   | `-VarDecl 0x25a0cfde588 <col:5, col:18> col:18 used j 'int'
|   |-DeclStmt 0x25a0cfde740 <line:74:5, col:32>
|   | |-VarDecl 0x25a0cfde640 <col:5, col:20> col:20 used unitmp 'unsigned char *'
|   | `-VarDecl 0x25a0cfde6c0 <col:5, col:29> col:29 used ret 'unsigned char *'
|   |-DeclStmt 0x25a0cfde818 <line:75:5, col:31>
|   | `-VarDecl 0x25a0cfde770 <col:5, col:30> col:19 used utf32chr 'unsigned long' cinit
|   |   `-ImplicitCastExpr 0x25a0cfde800 <col:30> 'unsigned long' <IntegralCast>
|   |     `-IntegerLiteral 0x25a0cfde7d8 <col:30> 'int' 0
|   |-IfStmt 0x25a0cfde9d0 <line:77:5, line:78:28>
|   | |-BinaryOperator 0x25a0cfde8a8 <line:77:9, col:20> 'int' '=='
|   | | |-ImplicitCastExpr 0x25a0cfde890 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x25a0cfde830 <col:9> 'int' lvalue ParmVar 0x25a0cfde180 'asclen' 'int'
|   | | `-UnaryOperator 0x25a0cfde878 <col:19, col:20> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x25a0cfde850 <col:20> 'int' 1
|   | `-BinaryOperator 0x25a0cfde9b0 <line:78:9, col:28> 'int' '='
|   |   |-DeclRefExpr 0x25a0cfde8c8 <col:9> 'int' lvalue ParmVar 0x25a0cfde180 'asclen' 'int'
|   |   `-ImplicitCastExpr 0x25a0cfde998 <col:18, col:28> 'int' <IntegralCast>
|   |     `-CallExpr 0x25a0cfde958 <col:18, col:28> 'unsigned long long'
|   |       |-ImplicitCastExpr 0x25a0cfde940 <col:18> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x25a0cfde8e8 <col:18> 'unsigned long long (const char *)' Function 0x25a0cfdae40 'strlen' 'unsigned long long (const char *)'
|   |       `-ImplicitCastExpr 0x25a0cfde980 <col:25> 'const char *' <LValueToRValue>
|   |         `-DeclRefExpr 0x25a0cfde908 <col:25> 'const char *' lvalue ParmVar 0x25a0cfde100 'asc' 'const char *'
|   |-ForStmt 0x25a0cfdc548 <line:80:5, line:109:5>
|   | |-BinaryOperator 0x25a0cfdeae8 <line:80:10, col:24> 'int' ','
|   | | |-BinaryOperator 0x25a0cfdea48 <col:10, col:17> 'int' '='
|   | | | |-DeclRefExpr 0x25a0cfde9e8 <col:10> 'int' lvalue Var 0x25a0cfde488 'ulen' 'int'
|   | | | `-IntegerLiteral 0x25a0cfdea20 <col:17> 'int' 0
|   | | `-BinaryOperator 0x25a0cfdeac8 <col:20, col:24> 'int' '='
|   | |   |-DeclRefExpr 0x25a0cfdea68 <col:20> 'int' lvalue Var 0x25a0cfde508 'i' 'int'
|   | |   `-IntegerLiteral 0x25a0cfdeaa0 <col:24> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x25a0cfdeb78 <col:27, col:31> 'int' '<'
|   | | |-ImplicitCastExpr 0x25a0cfdeb48 <col:27> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x25a0cfdeb08 <col:27> 'int' lvalue Var 0x25a0cfde508 'i' 'int'
|   | | `-ImplicitCastExpr 0x25a0cfdeb60 <col:31> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x25a0cfdeb28 <col:31> 'int' lvalue ParmVar 0x25a0cfde180 'asclen' 'int'
|   | |-CompoundAssignOperator 0x25a0cfdec08 <col:39, col:44> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | | |-DeclRefExpr 0x25a0cfdeb98 <col:39> 'int' lvalue Var 0x25a0cfde508 'i' 'int'
|   | | `-ImplicitCastExpr 0x25a0cfdebf0 <col:44> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x25a0cfdebb8 <col:44> 'int' lvalue Var 0x25a0cfde588 'j' 'int'
|   | `-CompoundStmt 0x25a0cfdc518 <col:47, line:109:5>
|   |   |-BinaryOperator 0x25a0cfdef90 <line:81:9, col:72> 'int' '='
|   |   | |-DeclRefExpr 0x25a0cfdec38 <col:9> 'int' lvalue Var 0x25a0cfde588 'j' 'int'
|   |   | `-CallExpr 0x25a0cfdef58 <col:13, col:72> 'int'
|   |   |   |-ImplicitCastExpr 0x25a0cfdef40 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x25a0cfded48 <col:13> 'int ()' Function 0x25a0cfdec80 'UTF8_getc' 'int ()'
|   |   |   |-BinaryOperator 0x25a0cfdee18 <col:23, col:50> 'const unsigned char *' '+'
|   |   |   | |-CStyleCastExpr 0x25a0cfdedb8 <col:23, col:46> 'const unsigned char *' <BitCast>
|   |   |   | | `-ImplicitCastExpr 0x25a0cfdeda0 <col:46> 'const char *' <LValueToRValue> part_of_explicit_cast
|   |   |   | |   `-DeclRefExpr 0x25a0cfded68 <col:46> 'const char *' lvalue ParmVar 0x25a0cfde100 'asc' 'const char *'
|   |   |   | `-ImplicitCastExpr 0x25a0cfdee00 <col:50> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x25a0cfdede0 <col:50> 'int' lvalue Var 0x25a0cfde508 'i' 'int'
|   |   |   |-BinaryOperator 0x25a0cfdeea8 <col:53, col:60> 'int' '-'
|   |   |   | |-ImplicitCastExpr 0x25a0cfdee78 <col:53> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x25a0cfdee38 <col:53> 'int' lvalue ParmVar 0x25a0cfde180 'asclen' 'int'
|   |   |   | `-ImplicitCastExpr 0x25a0cfdee90 <col:60> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x25a0cfdee58 <col:60> 'int' lvalue Var 0x25a0cfde508 'i' 'int'
|   |   |   `-UnaryOperator 0x25a0cfdef28 <col:63, col:64> 'unsigned long *' prefix '&' cannot overflow
|   |   |     `-DeclRefExpr 0x25a0cfdeec8 <col:64> 'unsigned long' lvalue Var 0x25a0cfde770 'utf32chr' 'unsigned long'
|   |   |-IfStmt 0x25a0cfdc1a8 <line:99:9, line:100:53>
|   |   | |-BinaryOperator 0x25a0cfdf010 <line:99:13, col:17> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x25a0cfdeff8 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x25a0cfdefb0 <col:13> 'int' lvalue Var 0x25a0cfde588 'j' 'int'
|   |   | | `-IntegerLiteral 0x25a0cfdefd0 <col:17> 'int' 0
|   |   | `-ReturnStmt 0x25a0cfdc198 <line:100:6, col:53>
|   |   |   `-CallExpr 0x25a0cfdc0f8 <col:13, col:53> 'unsigned char *'
|   |   |     |-ImplicitCastExpr 0x25a0cfdc0e0 <col:13> 'unsigned char *(*)(const char *, int, unsigned char **, int *)' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x25a0cfdf030 <col:13> 'unsigned char *(const char *, int, unsigned char **, int *)' Function 0x25a0cfdaab0 'OPENSSL_asc2uni' 'unsigned char *(const char *, int, unsigned char **, int *)'
|   |   |     |-ImplicitCastExpr 0x25a0cfdc138 <col:29> 'const char *' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x25a0cfdf050 <col:29> 'const char *' lvalue ParmVar 0x25a0cfde100 'asc' 'const char *'
|   |   |     |-ImplicitCastExpr 0x25a0cfdc150 <col:34> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x25a0cfdf070 <col:34> 'int' lvalue ParmVar 0x25a0cfde180 'asclen' 'int'
|   |   |     |-ImplicitCastExpr 0x25a0cfdc168 <col:42> 'unsigned char **' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x25a0cfdf090 <col:42> 'unsigned char **' lvalue ParmVar 0x25a0cfde208 'uni' 'unsigned char **'
|   |   |     `-ImplicitCastExpr 0x25a0cfdc180 <col:47> 'int *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x25a0cfdf0b0 <col:47> 'int *' lvalue ParmVar 0x25a0cfde288 'unilen' 'int *'
|   |   |-IfStmt 0x25a0cfdc308 <line:102:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |   | |-BinaryOperator 0x25a0cfdc238 <.//openssl//file_jk/before\crypto\pkcs12\p12_utl.c:102:13, col:24> 'int' '>'
|   |   | | |-ImplicitCastExpr 0x25a0cfdc208 <col:13> 'unsigned long' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x25a0cfdc1c0 <col:13> 'unsigned long' lvalue Var 0x25a0cfde770 'utf32chr' 'unsigned long'
|   |   | | `-ImplicitCastExpr 0x25a0cfdc220 <col:24> 'unsigned long' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x25a0cfdc1e0 <col:24> 'int' 1114111
|   |   | `-ReturnStmt 0x25a0cfdc2f8 <line:103:6, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |   |   `-ImplicitCastExpr 0x25a0cfdc2e0 <col:17, col:27> 'unsigned char *' <NullToPointer>
|   |   |     `-ParenExpr 0x25a0cfdc2c0 <col:17, col:27> 'void *'
|   |   |       `-CStyleCastExpr 0x25a0cfdc298 <col:18, col:26> 'void *' <NullToPointer>
|   |   |         `-IntegerLiteral 0x25a0cfdc258 <col:26> 'int' 0
|   |   `-IfStmt 0x25a0cfdc4f0 <.//openssl//file_jk/before\crypto\pkcs12\p12_utl.c:105:9, line:108:21> has_else
|   |     |-BinaryOperator 0x25a0cfdc398 <line:105:13, col:25> 'int' '>='
|   |     | |-ImplicitCastExpr 0x25a0cfdc368 <col:13> 'unsigned long' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x25a0cfdc320 <col:13> 'unsigned long' lvalue Var 0x25a0cfde770 'utf32chr' 'unsigned long'
|   |     | `-ImplicitCastExpr 0x25a0cfdc380 <col:25> 'unsigned long' <IntegralCast>
|   |     |   `-IntegerLiteral 0x25a0cfdc340 <col:25> 'int' 65536
|   |     |-CompoundAssignOperator 0x25a0cfdc448 <line:106:13, col:23> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     | |-DeclRefExpr 0x25a0cfdc3b8 <col:13> 'int' lvalue Var 0x25a0cfde488 'ulen' 'int'
|   |     | `-BinaryOperator 0x25a0cfdc428 <col:21, col:23> 'int' '*'
|   |     |   |-IntegerLiteral 0x25a0cfdc3d8 <col:21> 'int' 2
|   |     |   `-IntegerLiteral 0x25a0cfdc400 <col:23> 'int' 2
|   |     `-CompoundAssignOperator 0x25a0cfdc4c0 <line:108:13, col:21> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |       |-DeclRefExpr 0x25a0cfdc478 <col:13> 'int' lvalue Var 0x25a0cfde488 'ulen' 'int'
|   |       `-IntegerLiteral 0x25a0cfdc498 <col:21> 'int' 2
|   |-CompoundAssignOperator 0x25a0cfdc5c8 <line:111:5, col:13> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-DeclRefExpr 0x25a0cfdc580 <col:5> 'int' lvalue Var 0x25a0cfde488 'ulen' 'int'
|   | `-IntegerLiteral 0x25a0cfdc5a0 <col:13> 'int' 2
|   |-IfStmt 0x25a0cfdc890 <line:113:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   | |-BinaryOperator 0x25a0cfdc7c0 <.//openssl//file_jk/before\crypto\pkcs12\p12_utl.c:113:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ParenExpr 0x25a0cfdc700 <.//openssl//file_jk/before\crypto\pkcs12\p12_utl.c:113:9, col:36> 'unsigned char *'
|   | | | `-BinaryOperator 0x25a0cfdc6e0 <col:10, col:35> 'unsigned char *' '='
|   | | |   |-DeclRefExpr 0x25a0cfdc5f8 <col:10> 'unsigned char *' lvalue Var 0x25a0cfde6c0 'ret' 'unsigned char *'
|   | | |   `-ImplicitCastExpr 0x25a0cfdc6c8 <col:16, col:35> 'unsigned char *' <IntegralToPointer>
|   | | |     `-CallExpr 0x25a0cfdc688 <col:16, col:35> 'int'
|   | | |       |-ImplicitCastExpr 0x25a0cfdc670 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   | | |       | `-DeclRefExpr 0x25a0cfdc630 <col:16> 'int ()' Function 0x25a0cfd31e0 'OPENSSL_malloc' 'int ()'
|   | | |       `-ImplicitCastExpr 0x25a0cfdc6b0 <col:31> 'int' <LValueToRValue>
|   | | |         `-DeclRefExpr 0x25a0cfdc650 <col:31> 'int' lvalue Var 0x25a0cfde488 'ulen' 'int'
|   | | `-ImplicitCastExpr 0x25a0cfdc7a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <BitCast>
|   | |   `-ParenExpr 0x25a0cfdc788 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x25a0cfdc760 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x25a0cfdc720 <col:26> 'int' 0
|   | `-ReturnStmt 0x25a0cfdc880 <.//openssl//file_jk/before\crypto\pkcs12\p12_utl.c:114:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |   `-ImplicitCastExpr 0x25a0cfdc868 <col:17, col:27> 'unsigned char *' <NullToPointer>
|   |     `-ParenExpr 0x25a0cfdc848 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x25a0cfdc820 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x25a0cfdc7e0 <col:26> 'int' 0
|   |-ForStmt 0x25a0cfddb18 <.//openssl//file_jk/before\crypto\pkcs12\p12_utl.c:117:5, line:133:5>
|   | |-BinaryOperator 0x25a0cfdc9a0 <line:117:10, col:28> 'int' ','
|   | | |-BinaryOperator 0x25a0cfdc918 <col:10, col:19> 'unsigned char *' '='
|   | | | |-DeclRefExpr 0x25a0cfdc8a8 <col:10> 'unsigned char *' lvalue Var 0x25a0cfde640 'unitmp' 'unsigned char *'
|   | | | `-ImplicitCastExpr 0x25a0cfdc900 <col:19> 'unsigned char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x25a0cfdc8e0 <col:19> 'unsigned char *' lvalue Var 0x25a0cfde6c0 'ret' 'unsigned char *'
|   | | `-BinaryOperator 0x25a0cfdc980 <col:24, col:28> 'int' '='
|   | |   |-DeclRefExpr 0x25a0cfdc938 <col:24> 'int' lvalue Var 0x25a0cfde508 'i' 'int'
|   | |   `-IntegerLiteral 0x25a0cfdc958 <col:28> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x25a0cfdca30 <col:31, col:35> 'int' '<'
|   | | |-ImplicitCastExpr 0x25a0cfdca00 <col:31> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x25a0cfdc9c0 <col:31> 'int' lvalue Var 0x25a0cfde508 'i' 'int'
|   | | `-ImplicitCastExpr 0x25a0cfdca18 <col:35> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x25a0cfdc9e0 <col:35> 'int' lvalue ParmVar 0x25a0cfde180 'asclen' 'int'
|   | |-CompoundAssignOperator 0x25a0cfdcaa8 <col:43, col:48> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | | |-DeclRefExpr 0x25a0cfdca50 <col:43> 'int' lvalue Var 0x25a0cfde508 'i' 'int'
|   | | `-ImplicitCastExpr 0x25a0cfdca90 <col:48> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x25a0cfdca70 <col:48> 'int' lvalue Var 0x25a0cfde588 'j' 'int'
|   | `-CompoundStmt 0x25a0cfddaf8 <col:51, line:133:5>
|   |   |-BinaryOperator 0x25a0cfdcd00 <line:118:9, col:72> 'int' '='
|   |   | |-DeclRefExpr 0x25a0cfdcad8 <col:9> 'int' lvalue Var 0x25a0cfde588 'j' 'int'
|   |   | `-CallExpr 0x25a0cfdccc8 <col:13, col:72> 'int'
|   |   |   |-ImplicitCastExpr 0x25a0cfdccb0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x25a0cfdcaf8 <col:13> 'int ()' Function 0x25a0cfdec80 'UTF8_getc' 'int ()'
|   |   |   |-BinaryOperator 0x25a0cfdcbc8 <col:23, col:50> 'const unsigned char *' '+'
|   |   |   | |-CStyleCastExpr 0x25a0cfdcb68 <col:23, col:46> 'const unsigned char *' <BitCast>
|   |   |   | | `-ImplicitCastExpr 0x25a0cfdcb50 <col:46> 'const char *' <LValueToRValue> part_of_explicit_cast
|   |   |   | |   `-DeclRefExpr 0x25a0cfdcb18 <col:46> 'const char *' lvalue ParmVar 0x25a0cfde100 'asc' 'const char *'
|   |   |   | `-ImplicitCastExpr 0x25a0cfdcbb0 <col:50> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x25a0cfdcb90 <col:50> 'int' lvalue Var 0x25a0cfde508 'i' 'int'
|   |   |   |-BinaryOperator 0x25a0cfdcc58 <col:53, col:60> 'int' '-'
|   |   |   | |-ImplicitCastExpr 0x25a0cfdcc28 <col:53> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x25a0cfdcbe8 <col:53> 'int' lvalue ParmVar 0x25a0cfde180 'asclen' 'int'
|   |   |   | `-ImplicitCastExpr 0x25a0cfdcc40 <col:60> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x25a0cfdcc08 <col:60> 'int' lvalue Var 0x25a0cfde508 'i' 'int'
|   |   |   `-UnaryOperator 0x25a0cfdcc98 <col:63, col:64> 'unsigned long *' prefix '&' cannot overflow
|   |   |     `-DeclRefExpr 0x25a0cfdcc78 <col:64> 'unsigned long' lvalue Var 0x25a0cfde770 'utf32chr' 'unsigned long'
|   |   `-IfStmt 0x25a0cfddad0 <line:119:9, line:132:9> has_else
|   |     |-BinaryOperator 0x25a0cfdcd98 <line:119:13, col:25> 'int' '>='
|   |     | |-ImplicitCastExpr 0x25a0cfdcd68 <col:13> 'unsigned long' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x25a0cfdcd20 <col:13> 'unsigned long' lvalue Var 0x25a0cfde770 'utf32chr' 'unsigned long'
|   |     | `-ImplicitCastExpr 0x25a0cfdcd80 <col:25> 'unsigned long' <IntegralCast>
|   |     |   `-IntegerLiteral 0x25a0cfdcd40 <col:25> 'int' 65536
|   |     |-CompoundStmt 0x25a0cfdd7c8 <col:34, line:129:9>
|   |     | |-DeclStmt 0x25a0cfdced0 <line:120:13, col:32>
|   |     | | |-VarDecl 0x25a0cfdcdd0 <col:13, col:26> col:26 used hi 'unsigned int'
|   |     | | `-VarDecl 0x25a0cfdce50 <col:13, col:30> col:30 used lo 'unsigned int'
|   |     | |-CompoundAssignOperator 0x25a0cfdcf48 <line:122:13, col:25> 'unsigned long' '-=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |     | | |-DeclRefExpr 0x25a0cfdcee8 <col:13> 'unsigned long' lvalue Var 0x25a0cfde770 'utf32chr' 'unsigned long'
|   |     | | `-ImplicitCastExpr 0x25a0cfdcf30 <col:25> 'unsigned long' <IntegralCast>
|   |     | |   `-IntegerLiteral 0x25a0cfdcf08 <col:25> 'int' 65536
|   |     | |-BinaryOperator 0x25a0cfdd0f0 <line:123:13, col:40> 'unsigned int' '='
|   |     | | |-DeclRefExpr 0x25a0cfdcf78 <col:13> 'unsigned int' lvalue Var 0x25a0cfdcdd0 'hi' 'unsigned int'
|   |     | | `-ImplicitCastExpr 0x25a0cfdd0b0 <col:18, col:40> 'unsigned int' <IntegralCast>
|   |     | |   `-BinaryOperator 0x25a0cfdd090 <col:18, col:40> 'unsigned long' '+'
|   |     | |     |-ImplicitCastExpr 0x25a0cfdd078 <col:18> 'unsigned long' <IntegralCast>
|   |     | |     | `-IntegerLiteral 0x25a0cfdcfb0 <col:18> 'int' 55296
|   |     | |     `-ParenExpr 0x25a0cfdd058 <col:27, col:40> 'unsigned long'
|   |     | |       `-BinaryOperator 0x25a0cfdd038 <col:28, col:38> 'unsigned long' '>>'
|   |     | |         |-ImplicitCastExpr 0x25a0cfdd020 <col:28> 'unsigned long' <LValueToRValue>
|   |     | |         | `-DeclRefExpr 0x25a0cfdcfd8 <col:28> 'unsigned long' lvalue Var 0x25a0cfde770 'utf32chr' 'unsigned long'
|   |     | |         `-IntegerLiteral 0x25a0cfdcff8 <col:38> 'int' 10
|   |     | |-BinaryOperator 0x25a0cfdd278 <line:124:13, col:42> 'unsigned int' '='
|   |     | | |-DeclRefExpr 0x25a0cfdd110 <col:13> 'unsigned int' lvalue Var 0x25a0cfdce50 'lo' 'unsigned int'
|   |     | | `-ImplicitCastExpr 0x25a0cfdd260 <col:18, col:42> 'unsigned int' <IntegralCast>
|   |     | |   `-BinaryOperator 0x25a0cfdd240 <col:18, col:42> 'unsigned long' '+'
|   |     | |     |-ImplicitCastExpr 0x25a0cfdd228 <col:18> 'unsigned long' <IntegralCast>
|   |     | |     | `-IntegerLiteral 0x25a0cfdd148 <col:18> 'int' 56320
|   |     | |     `-ParenExpr 0x25a0cfdd208 <col:27, col:42> 'unsigned long'
|   |     | |       `-BinaryOperator 0x25a0cfdd1e8 <col:28, col:37> 'unsigned long' '&'
|   |     | |         |-ImplicitCastExpr 0x25a0cfdd1b8 <col:28> 'unsigned long' <LValueToRValue>
|   |     | |         | `-DeclRefExpr 0x25a0cfdd170 <col:28> 'unsigned long' lvalue Var 0x25a0cfde770 'utf32chr' 'unsigned long'
|   |     | |         `-ImplicitCastExpr 0x25a0cfdd1d0 <col:37> 'unsigned long' <IntegralCast>
|   |     | |           `-IntegerLiteral 0x25a0cfdd190 <col:37> 'int' 1023
|   |     | |-BinaryOperator 0x25a0cfdd3e8 <line:125:13, col:46> 'unsigned char' '='
|   |     | | |-UnaryOperator 0x25a0cfdd2d0 <col:13, col:20> 'unsigned char' lvalue prefix '*' cannot overflow
|   |     | | | `-UnaryOperator 0x25a0cfdd2b8 <col:14, col:20> 'unsigned char *' postfix '++'
|   |     | | |   `-DeclRefExpr 0x25a0cfdd298 <col:14> 'unsigned char *' lvalue Var 0x25a0cfde640 'unitmp' 'unsigned char *'
|   |     | | `-CStyleCastExpr 0x25a0cfdd3c0 <col:25, col:46> 'unsigned char' <IntegralCast>
|   |     | |   `-ParenExpr 0x25a0cfdd3a0 <col:40, col:46> 'unsigned int'
|   |     | |     `-BinaryOperator 0x25a0cfdd348 <col:41, col:45> 'unsigned int' '>>'
|   |     | |       |-ImplicitCastExpr 0x25a0cfdd330 <col:41> 'unsigned int' <LValueToRValue>
|   |     | |       | `-DeclRefExpr 0x25a0cfdd2e8 <col:41> 'unsigned int' lvalue Var 0x25a0cfdcdd0 'hi' 'unsigned int'
|   |     | |       `-IntegerLiteral 0x25a0cfdd308 <col:45> 'int' 8
|   |     | |-BinaryOperator 0x25a0cfdd510 <line:126:13, col:43> 'unsigned char' '='
|   |     | | |-UnaryOperator 0x25a0cfdd440 <col:13, col:20> 'unsigned char' lvalue prefix '*' cannot overflow
|   |     | | | `-UnaryOperator 0x25a0cfdd428 <col:14, col:20> 'unsigned char *' postfix '++'
|   |     | | |   `-DeclRefExpr 0x25a0cfdd408 <col:14> 'unsigned char *' lvalue Var 0x25a0cfde640 'unitmp' 'unsigned char *'
|   |     | | `-CStyleCastExpr 0x25a0cfdd4e8 <col:25, col:43> 'unsigned char' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x25a0cfdd4d0 <col:40, col:43> 'unsigned int' <LValueToRValue> part_of_explicit_cast
|   |     | |     `-ParenExpr 0x25a0cfdd4b0 <col:40, col:43> 'unsigned int' lvalue
|   |     | |       `-DeclRefExpr 0x25a0cfdd458 <col:41> 'unsigned int' lvalue Var 0x25a0cfdcdd0 'hi' 'unsigned int'
|   |     | |-BinaryOperator 0x25a0cfdd680 <line:127:13, col:46> 'unsigned char' '='
|   |     | | |-UnaryOperator 0x25a0cfdd568 <col:13, col:20> 'unsigned char' lvalue prefix '*' cannot overflow
|   |     | | | `-UnaryOperator 0x25a0cfdd550 <col:14, col:20> 'unsigned char *' postfix '++'
|   |     | | |   `-DeclRefExpr 0x25a0cfdd530 <col:14> 'unsigned char *' lvalue Var 0x25a0cfde640 'unitmp' 'unsigned char *'
|   |     | | `-CStyleCastExpr 0x25a0cfdd658 <col:25, col:46> 'unsigned char' <IntegralCast>
|   |     | |   `-ParenExpr 0x25a0cfdd638 <col:40, col:46> 'unsigned int'
|   |     | |     `-BinaryOperator 0x25a0cfdd5e0 <col:41, col:45> 'unsigned int' '>>'
|   |     | |       |-ImplicitCastExpr 0x25a0cfdd5c8 <col:41> 'unsigned int' <LValueToRValue>
|   |     | |       | `-DeclRefExpr 0x25a0cfdd580 <col:41> 'unsigned int' lvalue Var 0x25a0cfdce50 'lo' 'unsigned int'
|   |     | |       `-IntegerLiteral 0x25a0cfdd5a0 <col:45> 'int' 8
|   |     | `-BinaryOperator 0x25a0cfdd7a8 <line:128:13, col:43> 'unsigned char' '='
|   |     |   |-UnaryOperator 0x25a0cfdd6d8 <col:13, col:20> 'unsigned char' lvalue prefix '*' cannot overflow
|   |     |   | `-UnaryOperator 0x25a0cfdd6c0 <col:14, col:20> 'unsigned char *' postfix '++'
|   |     |   |   `-DeclRefExpr 0x25a0cfdd6a0 <col:14> 'unsigned char *' lvalue Var 0x25a0cfde640 'unitmp' 'unsigned char *'
|   |     |   `-CStyleCastExpr 0x25a0cfdd780 <col:25, col:43> 'unsigned char' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x25a0cfdd768 <col:40, col:43> 'unsigned int' <LValueToRValue> part_of_explicit_cast
|   |     |       `-ParenExpr 0x25a0cfdd748 <col:40, col:43> 'unsigned int' lvalue
|   |     |         `-DeclRefExpr 0x25a0cfdd6f0 <col:41> 'unsigned int' lvalue Var 0x25a0cfdce50 'lo' 'unsigned int'
|   |     `-CompoundStmt 0x25a0cfddab0 <line:129:16, line:132:9>
|   |       |-BinaryOperator 0x25a0cfdd968 <line:130:13, col:52> 'unsigned char' '='
|   |       | |-UnaryOperator 0x25a0cfdd850 <col:13, col:20> 'unsigned char' lvalue prefix '*' cannot overflow
|   |       | | `-UnaryOperator 0x25a0cfdd838 <col:14, col:20> 'unsigned char *' postfix '++'
|   |       | |   `-DeclRefExpr 0x25a0cfdd818 <col:14> 'unsigned char *' lvalue Var 0x25a0cfde640 'unitmp' 'unsigned char *'
|   |       | `-CStyleCastExpr 0x25a0cfdd940 <col:25, col:52> 'unsigned char' <IntegralCast>
|   |       |   `-ParenExpr 0x25a0cfdd920 <col:40, col:52> 'unsigned long'
|   |       |     `-BinaryOperator 0x25a0cfdd8c8 <col:41, col:51> 'unsigned long' '>>'
|   |       |       |-ImplicitCastExpr 0x25a0cfdd8b0 <col:41> 'unsigned long' <LValueToRValue>
|   |       |       | `-DeclRefExpr 0x25a0cfdd868 <col:41> 'unsigned long' lvalue Var 0x25a0cfde770 'utf32chr' 'unsigned long'
|   |       |       `-IntegerLiteral 0x25a0cfdd888 <col:51> 'int' 8
|   |       `-BinaryOperator 0x25a0cfdda90 <line:131:13, col:49> 'unsigned char' '='
|   |         |-UnaryOperator 0x25a0cfdd9c0 <col:13, col:20> 'unsigned char' lvalue prefix '*' cannot overflow
|   |         | `-UnaryOperator 0x25a0cfdd9a8 <col:14, col:20> 'unsigned char *' postfix '++'
|   |         |   `-DeclRefExpr 0x25a0cfdd988 <col:14> 'unsigned char *' lvalue Var 0x25a0cfde640 'unitmp' 'unsigned char *'
|   |         `-CStyleCastExpr 0x25a0cfdda68 <col:25, col:49> 'unsigned char' <IntegralCast>
|   |           `-ImplicitCastExpr 0x25a0cfdda50 <col:40, col:49> 'unsigned long' <LValueToRValue> part_of_explicit_cast
|   |             `-ParenExpr 0x25a0cfdda30 <col:40, col:49> 'unsigned long' lvalue
|   |               `-DeclRefExpr 0x25a0cfdd9d8 <col:41> 'unsigned long' lvalue Var 0x25a0cfde770 'utf32chr' 'unsigned long'
|   |-BinaryOperator 0x25a0cfddbe0 <line:135:5, col:17> 'unsigned char' '='
|   | |-UnaryOperator 0x25a0cfddb88 <col:5, col:12> 'unsigned char' lvalue prefix '*' cannot overflow
|   | | `-UnaryOperator 0x25a0cfddb70 <col:6, col:12> 'unsigned char *' postfix '++'
|   | |   `-DeclRefExpr 0x25a0cfddb50 <col:6> 'unsigned char *' lvalue Var 0x25a0cfde640 'unitmp' 'unsigned char *'
|   | `-ImplicitCastExpr 0x25a0cfddbc8 <col:17> 'unsigned char' <IntegralCast>
|   |   `-IntegerLiteral 0x25a0cfddba0 <col:17> 'int' 0
|   |-BinaryOperator 0x25a0cfddc90 <line:136:5, col:17> 'unsigned char' '='
|   | |-UnaryOperator 0x25a0cfddc38 <col:5, col:12> 'unsigned char' lvalue prefix '*' cannot overflow
|   | | `-UnaryOperator 0x25a0cfddc20 <col:6, col:12> 'unsigned char *' postfix '++'
|   | |   `-DeclRefExpr 0x25a0cfddc00 <col:6> 'unsigned char *' lvalue Var 0x25a0cfde640 'unitmp' 'unsigned char *'
|   | `-ImplicitCastExpr 0x25a0cfddc78 <col:17> 'unsigned char' <IntegralCast>
|   |   `-IntegerLiteral 0x25a0cfddc50 <col:17> 'int' 0
|   |-IfStmt 0x25a0cfddd90 <line:137:5, line:138:19>
|   | |-ImplicitCastExpr 0x25a0cfddcd0 <line:137:9> 'int *' <LValueToRValue>
|   | | `-DeclRefExpr 0x25a0cfddcb0 <col:9> 'int *' lvalue ParmVar 0x25a0cfde288 'unilen' 'int *'
|   | `-BinaryOperator 0x25a0cfddd70 <line:138:9, col:19> 'int' '='
|   |   |-UnaryOperator 0x25a0cfddd20 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
|   |   | `-ImplicitCastExpr 0x25a0cfddd08 <col:10> 'int *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x25a0cfddce8 <col:10> 'int *' lvalue ParmVar 0x25a0cfde288 'unilen' 'int *'
|   |   `-ImplicitCastExpr 0x25a0cfddd58 <col:19> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x25a0cfddd38 <col:19> 'int' lvalue Var 0x25a0cfde488 'ulen' 'int'
|   |-IfStmt 0x25a0cfdde88 <line:139:5, line:140:16>
|   | |-ImplicitCastExpr 0x25a0cfdddc8 <line:139:9> 'unsigned char **' <LValueToRValue>
|   | | `-DeclRefExpr 0x25a0cfddda8 <col:9> 'unsigned char **' lvalue ParmVar 0x25a0cfde208 'uni' 'unsigned char **'
|   | `-BinaryOperator 0x25a0cfdde68 <line:140:9, col:16> 'unsigned char *' '='
|   |   |-UnaryOperator 0x25a0cfdde18 <col:9, col:10> 'unsigned char *' lvalue prefix '*' cannot overflow
|   |   | `-ImplicitCastExpr 0x25a0cfdde00 <col:10> 'unsigned char **' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x25a0cfddde0 <col:10> 'unsigned char **' lvalue ParmVar 0x25a0cfde208 'uni' 'unsigned char **'
|   |   `-ImplicitCastExpr 0x25a0cfdde50 <col:16> 'unsigned char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x25a0cfdde30 <col:16> 'unsigned char *' lvalue Var 0x25a0cfde6c0 'ret' 'unsigned char *'
|   `-ReturnStmt 0x25a0cfdded8 <line:141:5, col:12>
|     `-ImplicitCastExpr 0x25a0cfddec0 <col:12> 'unsigned char *' <LValueToRValue>
|       `-DeclRefExpr 0x25a0cfddea0 <col:12> 'unsigned char *' lvalue Var 0x25a0cfde6c0 'ret' 'unsigned char *'
|-FunctionDecl 0x25a0cfe5050 <line:144:1, line:169:1> line:144:12 used bmp_to_utf8 'int (char *, const unsigned char *, int)' static
| |-ParmVarDecl 0x25a0cfddf78 <col:24, col:30> col:30 used str 'char *'
| |-ParmVarDecl 0x25a0cfddff8 <col:35, col:56> col:56 used utf16 'const unsigned char *'
| |-ParmVarDecl 0x25a0cfde078 <col:63, col:67> col:67 used len 'int'
| `-CompoundStmt 0x25a0cfe6328 <line:145:1, line:169:1>
|   |-DeclStmt 0x25a0cfe51a0 <line:146:5, col:27>
|   | `-VarDecl 0x25a0cfe5138 <col:5, col:19> col:19 used utf32chr 'unsigned long'
|   |-IfStmt 0x25a0cfe5270 <line:148:5, col:26>
|   | |-BinaryOperator 0x25a0cfe5218 <col:9, col:16> 'int' '=='
|   | | |-ImplicitCastExpr 0x25a0cfe5200 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x25a0cfe51b8 <col:9> 'int' lvalue ParmVar 0x25a0cfde078 'len' 'int'
|   | | `-IntegerLiteral 0x25a0cfe51d8 <col:16> 'int' 0
|   | `-ReturnStmt 0x25a0cfe5260 <col:19, col:26>
|   |   `-IntegerLiteral 0x25a0cfe5238 <col:26> 'int' 0
|   |-IfStmt 0x25a0cfe5358 <line:150:5, col:26>
|   | |-BinaryOperator 0x25a0cfe52e8 <col:9, col:15> 'int' '<'
|   | | |-ImplicitCastExpr 0x25a0cfe52d0 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x25a0cfe5288 <col:9> 'int' lvalue ParmVar 0x25a0cfde078 'len' 'int'
|   | | `-IntegerLiteral 0x25a0cfe52a8 <col:15> 'int' 2
|   | `-ReturnStmt 0x25a0cfe5348 <col:18, col:26>
|   |   `-UnaryOperator 0x25a0cfe5330 <col:25, col:26> 'int' prefix '-'
|   |     `-IntegerLiteral 0x25a0cfe5308 <col:26> 'int' 1
|   |-BinaryOperator 0x25a0cfe55a8 <line:153:5, col:39> 'unsigned long' '='
|   | |-DeclRefExpr 0x25a0cfe5370 <col:5> 'unsigned long' lvalue Var 0x25a0cfe5138 'utf32chr' 'unsigned long'
|   | `-ImplicitCastExpr 0x25a0cfe5590 <col:16, col:39> 'unsigned long' <IntegralCast>
|   |   `-BinaryOperator 0x25a0cfe5570 <col:16, col:39> 'int' '|'
|   |     |-ParenExpr 0x25a0cfe54a0 <col:16, col:28> 'int'
|   |     | `-BinaryOperator 0x25a0cfe5480 <col:17, col:27> 'int' '<<'
|   |     |   |-ImplicitCastExpr 0x25a0cfe5468 <col:17, col:24> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x25a0cfe5450 <col:17, col:24> 'unsigned char' <LValueToRValue>
|   |     |   |   `-ArraySubscriptExpr 0x25a0cfe5408 <col:17, col:24> 'const unsigned char' lvalue
|   |     |   |     |-ImplicitCastExpr 0x25a0cfe53f0 <col:17> 'const unsigned char *' <LValueToRValue>
|   |     |   |     | `-DeclRefExpr 0x25a0cfe53a8 <col:17> 'const unsigned char *' lvalue ParmVar 0x25a0cfddff8 'utf16' 'const unsigned char *'
|   |     |   |     `-IntegerLiteral 0x25a0cfe53c8 <col:23> 'int' 0
|   |     |   `-IntegerLiteral 0x25a0cfe5428 <col:27> 'int' 8
|   |     `-ImplicitCastExpr 0x25a0cfe5558 <col:32, col:39> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x25a0cfe5540 <col:32, col:39> 'unsigned char' <LValueToRValue>
|   |         `-ArraySubscriptExpr 0x25a0cfe5520 <col:32, col:39> 'const unsigned char' lvalue
|   |           |-ImplicitCastExpr 0x25a0cfe5508 <col:32> 'const unsigned char *' <LValueToRValue>
|   |           | `-DeclRefExpr 0x25a0cfe54c0 <col:32> 'const unsigned char *' lvalue ParmVar 0x25a0cfddff8 'utf16' 'const unsigned char *'
|   |           `-IntegerLiteral 0x25a0cfe54e0 <col:38> 'int' 1
|   |-IfStmt 0x25a0cfe5fe0 <line:155:5, line:166:5>
|   | |-BinaryOperator 0x25a0cfe56f8 <line:155:9, col:42> 'int' '&&'
|   | | |-BinaryOperator 0x25a0cfe5640 <col:9, col:21> 'int' '>='
|   | | | |-ImplicitCastExpr 0x25a0cfe5610 <col:9> 'unsigned long' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x25a0cfe55c8 <col:9> 'unsigned long' lvalue Var 0x25a0cfe5138 'utf32chr' 'unsigned long'
|   | | | `-ImplicitCastExpr 0x25a0cfe5628 <col:21> 'unsigned long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x25a0cfe55e8 <col:21> 'int' 55296
|   | | `-BinaryOperator 0x25a0cfe56d8 <col:31, col:42> 'int' '<'
|   | |   |-ImplicitCastExpr 0x25a0cfe56a8 <col:31> 'unsigned long' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x25a0cfe5660 <col:31> 'unsigned long' lvalue Var 0x25a0cfe5138 'utf32chr' 'unsigned long'
|   | |   `-ImplicitCastExpr 0x25a0cfe56c0 <col:42> 'unsigned long' <IntegralCast>
|   | |     `-IntegerLiteral 0x25a0cfe5680 <col:42> 'int' 57344
|   | `-CompoundStmt 0x25a0cfe5f90 <col:50, line:166:5>
|   |   |-DeclStmt 0x25a0cfe5798 <line:156:9, col:24>
|   |   | `-VarDecl 0x25a0cfe5730 <col:9, col:22> col:22 used lo 'unsigned int'
|   |   |-IfStmt 0x25a0cfe5880 <line:158:9, col:30>
|   |   | |-BinaryOperator 0x25a0cfe5810 <col:13, col:19> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x25a0cfe57f8 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x25a0cfe57b0 <col:13> 'int' lvalue ParmVar 0x25a0cfde078 'len' 'int'
|   |   | | `-IntegerLiteral 0x25a0cfe57d0 <col:19> 'int' 4
|   |   | `-ReturnStmt 0x25a0cfe5870 <col:22, col:30>
|   |   |   `-UnaryOperator 0x25a0cfe5858 <col:29, col:30> 'int' prefix '-'
|   |   |     `-IntegerLiteral 0x25a0cfe5830 <col:30> 'int' 1
|   |   |-CompoundAssignOperator 0x25a0cfe58f8 <line:160:9, col:21> 'unsigned long' '-=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |   | |-DeclRefExpr 0x25a0cfe5898 <col:9> 'unsigned long' lvalue Var 0x25a0cfe5138 'utf32chr' 'unsigned long'
|   |   | `-ImplicitCastExpr 0x25a0cfe58e0 <col:21> 'unsigned long' <IntegralCast>
|   |   |   `-IntegerLiteral 0x25a0cfe58b8 <col:21> 'int' 55296
|   |   |-CompoundAssignOperator 0x25a0cfe5988 <line:161:9, col:22> 'unsigned long' '<<=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |   | |-DeclRefExpr 0x25a0cfe5928 <col:9> 'unsigned long' lvalue Var 0x25a0cfe5138 'utf32chr' 'unsigned long'
|   |   | `-IntegerLiteral 0x25a0cfe5948 <col:22> 'int' 10
|   |   |-BinaryOperator 0x25a0cfe5bf0 <line:162:9, col:37> 'unsigned int' '='
|   |   | |-DeclRefExpr 0x25a0cfe59b8 <col:9> 'unsigned int' lvalue Var 0x25a0cfe5730 'lo' 'unsigned int'
|   |   | `-ImplicitCastExpr 0x25a0cfe5bd8 <col:14, col:37> 'unsigned int' <IntegralCast>
|   |   |   `-BinaryOperator 0x25a0cfe5bb8 <col:14, col:37> 'int' '|'
|   |   |     |-ParenExpr 0x25a0cfe5ae8 <col:14, col:26> 'int'
|   |   |     | `-BinaryOperator 0x25a0cfe5ac8 <col:15, col:25> 'int' '<<'
|   |   |     |   |-ImplicitCastExpr 0x25a0cfe5ab0 <col:15, col:22> 'int' <IntegralCast>
|   |   |     |   | `-ImplicitCastExpr 0x25a0cfe5a98 <col:15, col:22> 'unsigned char' <LValueToRValue>
|   |   |     |   |   `-ArraySubscriptExpr 0x25a0cfe5a50 <col:15, col:22> 'const unsigned char' lvalue
|   |   |     |   |     |-ImplicitCastExpr 0x25a0cfe5a38 <col:15> 'const unsigned char *' <LValueToRValue>
|   |   |     |   |     | `-DeclRefExpr 0x25a0cfe59f0 <col:15> 'const unsigned char *' lvalue ParmVar 0x25a0cfddff8 'utf16' 'const unsigned char *'
|   |   |     |   |     `-IntegerLiteral 0x25a0cfe5a10 <col:21> 'int' 2
|   |   |     |   `-IntegerLiteral 0x25a0cfe5a70 <col:25> 'int' 8
|   |   |     `-ImplicitCastExpr 0x25a0cfe5ba0 <col:30, col:37> 'int' <IntegralCast>
|   |   |       `-ImplicitCastExpr 0x25a0cfe5b88 <col:30, col:37> 'unsigned char' <LValueToRValue>
|   |   |         `-ArraySubscriptExpr 0x25a0cfe5b68 <col:30, col:37> 'const unsigned char' lvalue
|   |   |           |-ImplicitCastExpr 0x25a0cfe5b50 <col:30> 'const unsigned char *' <LValueToRValue>
|   |   |           | `-DeclRefExpr 0x25a0cfe5b08 <col:30> 'const unsigned char *' lvalue ParmVar 0x25a0cfddff8 'utf16' 'const unsigned char *'
|   |   |           `-IntegerLiteral 0x25a0cfe5b28 <col:36> 'int' 3
|   |   |-IfStmt 0x25a0cfe5db0 <line:163:9, col:50>
|   |   | |-BinaryOperator 0x25a0cfe5d40 <col:13, col:34> 'int' '||'
|   |   | | |-BinaryOperator 0x25a0cfe5c88 <col:13, col:18> 'int' '<'
|   |   | | | |-ImplicitCastExpr 0x25a0cfe5c58 <col:13> 'unsigned int' <LValueToRValue>
|   |   | | | | `-DeclRefExpr 0x25a0cfe5c10 <col:13> 'unsigned int' lvalue Var 0x25a0cfe5730 'lo' 'unsigned int'
|   |   | | | `-ImplicitCastExpr 0x25a0cfe5c70 <col:18> 'unsigned int' <IntegralCast>
|   |   | | |   `-IntegerLiteral 0x25a0cfe5c30 <col:18> 'int' 56320
|   |   | | `-BinaryOperator 0x25a0cfe5d20 <col:28, col:34> 'int' '>='
|   |   | |   |-ImplicitCastExpr 0x25a0cfe5cf0 <col:28> 'unsigned int' <LValueToRValue>
|   |   | |   | `-DeclRefExpr 0x25a0cfe5ca8 <col:28> 'unsigned int' lvalue Var 0x25a0cfe5730 'lo' 'unsigned int'
|   |   | |   `-ImplicitCastExpr 0x25a0cfe5d08 <col:34> 'unsigned int' <IntegralCast>
|   |   | |     `-IntegerLiteral 0x25a0cfe5cc8 <col:34> 'int' 57344
|   |   | `-ReturnStmt 0x25a0cfe5da0 <col:42, col:50>
|   |   |   `-UnaryOperator 0x25a0cfe5d88 <col:49, col:50> 'int' prefix '-'
|   |   |     `-IntegerLiteral 0x25a0cfe5d60 <col:50> 'int' 1
|   |   |-CompoundAssignOperator 0x25a0cfe5e98 <line:164:9, col:24> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |   | |-DeclRefExpr 0x25a0cfe5dc8 <col:9> 'unsigned long' lvalue Var 0x25a0cfe5138 'utf32chr' 'unsigned long'
|   |   | `-ImplicitCastExpr 0x25a0cfe5e80 <col:21, col:24> 'unsigned long' <IntegralCast>
|   |   |   `-BinaryOperator 0x25a0cfe5e60 <col:21, col:24> 'unsigned int' '-'
|   |   |     |-ImplicitCastExpr 0x25a0cfe5e30 <col:21> 'unsigned int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x25a0cfe5de8 <col:21> 'unsigned int' lvalue Var 0x25a0cfe5730 'lo' 'unsigned int'
|   |   |     `-ImplicitCastExpr 0x25a0cfe5e48 <col:24> 'unsigned int' <IntegralCast>
|   |   |       `-IntegerLiteral 0x25a0cfe5e08 <col:24> 'int' 56320
|   |   `-CompoundAssignOperator 0x25a0cfe5f28 <line:165:9, col:21> 'unsigned long' '+=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |     |-DeclRefExpr 0x25a0cfe5ec8 <col:9> 'unsigned long' lvalue Var 0x25a0cfe5138 'utf32chr' 'unsigned long'
|   |     `-ImplicitCastExpr 0x25a0cfe5f10 <col:21> 'unsigned long' <IntegralCast>
|   |       `-IntegerLiteral 0x25a0cfe5ee8 <col:21> 'int' 65536
|   `-ReturnStmt 0x25a0cfe6318 <line:168:5, col:71>
|     `-CallExpr 0x25a0cfe62c8 <col:12, col:71> 'int'
|       |-ImplicitCastExpr 0x25a0cfe62b0 <col:12> 'int (*)()' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x25a0cfe60e8 <col:12> 'int ()' Function 0x25a0cfe6020 'UTF8_putc' 'int ()'
|       |-CStyleCastExpr 0x25a0cfe6158 <col:22, col:39> 'unsigned char *' <BitCast>
|       | `-ImplicitCastExpr 0x25a0cfe6140 <col:39> 'char *' <LValueToRValue> part_of_explicit_cast
|       |   `-DeclRefExpr 0x25a0cfe6108 <col:39> 'char *' lvalue ParmVar 0x25a0cfddf78 'str' 'char *'
|       |-ConditionalOperator 0x25a0cfe6260 <col:44, col:58> 'int'
|       | |-BinaryOperator 0x25a0cfe61e0 <col:44, col:50> 'int' '>'
|       | | |-ImplicitCastExpr 0x25a0cfe61c8 <col:44> 'int' <LValueToRValue>
|       | | | `-DeclRefExpr 0x25a0cfe6180 <col:44> 'int' lvalue ParmVar 0x25a0cfde078 'len' 'int'
|       | | `-IntegerLiteral 0x25a0cfe61a0 <col:50> 'int' 4
|       | |-IntegerLiteral 0x25a0cfe6200 <col:54> 'int' 4
|       | `-ImplicitCastExpr 0x25a0cfe6248 <col:58> 'int' <LValueToRValue>
|       |   `-DeclRefExpr 0x25a0cfe6228 <col:58> 'int' lvalue ParmVar 0x25a0cfde078 'len' 'int'
|       `-ImplicitCastExpr 0x25a0cfe6300 <col:63> 'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x25a0cfe6290 <col:63> 'unsigned long' lvalue Var 0x25a0cfe5138 'utf32chr' 'unsigned long'
|-FunctionDecl 0x25a0cfe64d0 <line:171:1, line:213:1> line:171:7 OPENSSL_uni2utf8 'char *(const unsigned char *, int)'
| |-ParmVarDecl 0x25a0cfe6380 <col:24, col:45> col:45 used uni 'const unsigned char *'
| |-ParmVarDecl 0x25a0cfe6400 <col:50, col:54> col:54 used unilen 'int'
| `-CompoundStmt 0x25a0cfe21c0 <line:172:1, line:213:1>
|   |-DeclStmt 0x25a0cfe6738 <line:173:5, col:21>
|   | |-VarDecl 0x25a0cfe65b0 <col:5, col:9> col:9 used asclen 'int'
|   | |-VarDecl 0x25a0cfe6630 <col:5, col:17> col:17 used i 'int'
|   | `-VarDecl 0x25a0cfe66b0 <col:5, col:20> col:20 used j 'int'
|   |-DeclStmt 0x25a0cfe67d0 <line:174:5, col:17>
|   | `-VarDecl 0x25a0cfe6768 <col:5, col:11> col:11 used asctmp 'char *'
|   |-IfStmt 0x25a0cfe6918 <line:177:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   | |-BinaryOperator 0x25a0cfe6848 <.//openssl//file_jk/before\crypto\pkcs12\p12_utl.c:177:9, col:18> 'int' '&'
|   | | |-ImplicitCastExpr 0x25a0cfe6830 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x25a0cfe67e8 <col:9> 'int' lvalue ParmVar 0x25a0cfe6400 'unilen' 'int'
|   | | `-IntegerLiteral 0x25a0cfe6808 <col:18> 'int' 1
|   | `-ReturnStmt 0x25a0cfe6908 <line:178:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |   `-ImplicitCastExpr 0x25a0cfe68f0 <col:17, col:27> 'char *' <NullToPointer>
|   |     `-ParenExpr 0x25a0cfe68d0 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x25a0cfe68a8 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x25a0cfe6868 <col:26> 'int' 0
|   |-ForStmt 0x25a0cfe3168 <.//openssl//file_jk/before\crypto\pkcs12\p12_utl.c:180:5, line:191:5>
|   | |-BinaryOperator 0x25a0cfe6a30 <line:180:10, col:26> 'int' ','
|   | | |-BinaryOperator 0x25a0cfe6990 <col:10, col:19> 'int' '='
|   | | | |-DeclRefExpr 0x25a0cfe6930 <col:10> 'int' lvalue Var 0x25a0cfe65b0 'asclen' 'int'
|   | | | `-IntegerLiteral 0x25a0cfe6968 <col:19> 'int' 0
|   | | `-BinaryOperator 0x25a0cfe6a10 <col:22, col:26> 'int' '='
|   | |   |-DeclRefExpr 0x25a0cfe69b0 <col:22> 'int' lvalue Var 0x25a0cfe6630 'i' 'int'
|   | |   `-IntegerLiteral 0x25a0cfe69e8 <col:26> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x25a0cfe6ac0 <col:29, col:33> 'int' '<'
|   | | |-ImplicitCastExpr 0x25a0cfe6a90 <col:29> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x25a0cfe6a50 <col:29> 'int' lvalue Var 0x25a0cfe6630 'i' 'int'
|   | | `-ImplicitCastExpr 0x25a0cfe6aa8 <col:33> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x25a0cfe6a70 <col:33> 'int' lvalue ParmVar 0x25a0cfe6400 'unilen' 'int'
|   | |-<<<NULL>>>
|   | `-CompoundStmt 0x25a0cfe3138 <col:43, line:191:5>
|   |   |-BinaryOperator 0x25a0cfe6d70 <line:181:9, col:46> 'int' '='
|   |   | |-DeclRefExpr 0x25a0cfe6ae0 <col:9> 'int' lvalue Var 0x25a0cfe66b0 'j' 'int'
|   |   | `-CallExpr 0x25a0cfe6d20 <col:13, col:46> 'int'
|   |   |   |-ImplicitCastExpr 0x25a0cfe6d08 <col:13> 'int (*)(char *, const unsigned char *, int)' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x25a0cfe6b18 <col:13> 'int (char *, const unsigned char *, int)' Function 0x25a0cfe5050 'bmp_to_utf8' 'int (char *, const unsigned char *, int)'
|   |   |   |-ImplicitCastExpr 0x25a0cfe6d58 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   |   |   | `-ParenExpr 0x25a0cfe6ba0 <col:17, col:27> 'void *'
|   |   |   |   `-CStyleCastExpr 0x25a0cfe6b78 <col:18, col:26> 'void *' <NullToPointer>
|   |   |   |     `-IntegerLiteral 0x25a0cfe6b38 <col:26> 'int' 0
|   |   |   |-BinaryOperator 0x25a0cfe6c30 <.//openssl//file_jk/before\crypto\pkcs12\p12_utl.c:181:31, col:35> 'const unsigned char *' '+'
|   |   |   | |-ImplicitCastExpr 0x25a0cfe6c00 <col:31> 'const unsigned char *' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x25a0cfe6bc0 <col:31> 'const unsigned char *' lvalue ParmVar 0x25a0cfe6380 'uni' 'const unsigned char *'
|   |   |   | `-ImplicitCastExpr 0x25a0cfe6c18 <col:35> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x25a0cfe6be0 <col:35> 'int' lvalue Var 0x25a0cfe6630 'i' 'int'
|   |   |   `-BinaryOperator 0x25a0cfe6cc0 <col:38, col:45> 'int' '-'
|   |   |     |-ImplicitCastExpr 0x25a0cfe6c90 <col:38> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x25a0cfe6c50 <col:38> 'int' lvalue ParmVar 0x25a0cfe6400 'unilen' 'int'
|   |   |     `-ImplicitCastExpr 0x25a0cfe6ca8 <col:45> 'int' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x25a0cfe6c70 <col:45> 'int' lvalue Var 0x25a0cfe6630 'i' 'int'
|   |   |-IfStmt 0x25a0cfe6f20 <line:187:9, col:54>
|   |   | |-BinaryOperator 0x25a0cfe6df0 <col:13, col:17> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x25a0cfe6dd8 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x25a0cfe6d90 <col:13> 'int' lvalue Var 0x25a0cfe66b0 'j' 'int'
|   |   | | `-IntegerLiteral 0x25a0cfe6db0 <col:17> 'int' 0
|   |   | `-ReturnStmt 0x25a0cfe6f10 <col:20, col:54>
|   |   |   `-CallExpr 0x25a0cfe6eb0 <col:27, col:54> 'char *'
|   |   |     |-ImplicitCastExpr 0x25a0cfe6e98 <col:27> 'char *(*)(const unsigned char *, int)' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x25a0cfe6e10 <col:27> 'char *(const unsigned char *, int)' Function 0x25a0cfdb1e0 'OPENSSL_uni2asc' 'char *(const unsigned char *, int)'
|   |   |     |-ImplicitCastExpr 0x25a0cfe6ee0 <col:43> 'const unsigned char *' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x25a0cfe6e30 <col:43> 'const unsigned char *' lvalue ParmVar 0x25a0cfe6380 'uni' 'const unsigned char *'
|   |   |     `-ImplicitCastExpr 0x25a0cfe6ef8 <col:48> 'int' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x25a0cfe6e50 <col:48> 'int' lvalue ParmVar 0x25a0cfe6400 'unilen' 'int'
|   |   |-IfStmt 0x25a0cfe3088 <line:188:9, line:189:26> has_else
|   |   | |-BinaryOperator 0x25a0cfe2f78 <line:188:13, col:18> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x25a0cfe2f60 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x25a0cfe6f38 <col:13> 'int' lvalue Var 0x25a0cfe66b0 'j' 'int'
|   |   | | `-IntegerLiteral 0x25a0cfe6f58 <col:18> 'int' 4
|   |   | |-CompoundAssignOperator 0x25a0cfe2fe0 <col:21, col:26> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | | |-DeclRefExpr 0x25a0cfe2f98 <col:21> 'int' lvalue Var 0x25a0cfe6630 'i' 'int'
|   |   | | `-IntegerLiteral 0x25a0cfe2fb8 <col:26> 'int' 4
|   |   | `-CompoundAssignOperator 0x25a0cfe3058 <line:189:21, col:26> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |   |-DeclRefExpr 0x25a0cfe3010 <col:21> 'int' lvalue Var 0x25a0cfe6630 'i' 'int'
|   |   |   `-IntegerLiteral 0x25a0cfe3030 <col:26> 'int' 2
|   |   `-CompoundAssignOperator 0x25a0cfe3108 <line:190:9, col:19> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     |-DeclRefExpr 0x25a0cfe30b0 <col:9> 'int' lvalue Var 0x25a0cfe65b0 'asclen' 'int'
|   |     `-ImplicitCastExpr 0x25a0cfe30f0 <col:19> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x25a0cfe30d0 <col:19> 'int' lvalue Var 0x25a0cfe66b0 'j' 'int'
|   |-IfStmt 0x25a0cfe3498 <line:194:5, line:195:15>
|   | |-BinaryOperator 0x25a0cfe3440 <line:194:9, col:51> 'int' '||'
|   | | |-UnaryOperator 0x25a0cfe31d8 <col:9, col:10> 'int' prefix '!' cannot overflow
|   | | | `-ImplicitCastExpr 0x25a0cfe31c0 <col:10> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x25a0cfe31a0 <col:10> 'int' lvalue ParmVar 0x25a0cfe6400 'unilen' 'int'
|   | | `-ParenExpr 0x25a0cfe3420 <col:20, col:51> 'int'
|   | |   `-BinaryOperator 0x25a0cfe3400 <col:21, col:50> 'int' '||'
|   | |     |-ImplicitCastExpr 0x25a0cfe33b8 <col:21, col:33> 'int' <IntegralCast>
|   | |     | `-ImplicitCastExpr 0x25a0cfe33a0 <col:21, col:33> 'unsigned char' <LValueToRValue>
|   | |     |   `-ArraySubscriptExpr 0x25a0cfe32a8 <col:21, col:33> 'const unsigned char' lvalue
|   | |     |     |-ImplicitCastExpr 0x25a0cfe3290 <col:21> 'const unsigned char *' <LValueToRValue>
|   | |     |     | `-DeclRefExpr 0x25a0cfe31f0 <col:21> 'const unsigned char *' lvalue ParmVar 0x25a0cfe6380 'uni' 'const unsigned char *'
|   | |     |     `-BinaryOperator 0x25a0cfe3270 <col:25, col:32> 'int' '-'
|   | |     |       |-ImplicitCastExpr 0x25a0cfe3258 <col:25> 'int' <LValueToRValue>
|   | |     |       | `-DeclRefExpr 0x25a0cfe3210 <col:25> 'int' lvalue ParmVar 0x25a0cfe6400 'unilen' 'int'
|   | |     |       `-IntegerLiteral 0x25a0cfe3230 <col:32> 'int' 2
|   | |     `-ImplicitCastExpr 0x25a0cfe33e8 <col:36, col:50> 'int' <IntegralCast>
|   | |       `-ImplicitCastExpr 0x25a0cfe33d0 <col:36, col:50> 'unsigned char' <LValueToRValue>
|   | |         `-ArraySubscriptExpr 0x25a0cfe3380 <col:36, col:50> 'const unsigned char' lvalue
|   | |           |-ImplicitCastExpr 0x25a0cfe3368 <col:36> 'const unsigned char *' <LValueToRValue>
|   | |           | `-DeclRefExpr 0x25a0cfe32c8 <col:36> 'const unsigned char *' lvalue ParmVar 0x25a0cfe6380 'uni' 'const unsigned char *'
|   | |           `-BinaryOperator 0x25a0cfe3348 <col:40, col:49> 'int' '-'
|   | |             |-ImplicitCastExpr 0x25a0cfe3330 <col:40> 'int' <LValueToRValue>
|   | |             | `-DeclRefExpr 0x25a0cfe32e8 <col:40> 'int' lvalue ParmVar 0x25a0cfe6400 'unilen' 'int'
|   | |             `-IntegerLiteral 0x25a0cfe3308 <col:49> 'int' 1
|   | `-UnaryOperator 0x25a0cfe3480 <line:195:9, col:15> 'int' postfix '++'
|   |   `-DeclRefExpr 0x25a0cfe3460 <col:9> 'int' lvalue Var 0x25a0cfe65b0 'asclen' 'int'
|   |-IfStmt 0x25a0cfe3748 <line:197:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   | |-BinaryOperator 0x25a0cfe3678 <.//openssl//file_jk/before\crypto\pkcs12\p12_utl.c:197:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ParenExpr 0x25a0cfe35b8 <.//openssl//file_jk/before\crypto\pkcs12\p12_utl.c:197:9, col:41> 'char *'
|   | | | `-BinaryOperator 0x25a0cfe3598 <col:10, col:40> 'char *' '='
|   | | |   |-DeclRefExpr 0x25a0cfe34b0 <col:10> 'char *' lvalue Var 0x25a0cfe6768 'asctmp' 'char *'
|   | | |   `-ImplicitCastExpr 0x25a0cfe3580 <col:19, col:40> 'char *' <IntegralToPointer>
|   | | |     `-CallExpr 0x25a0cfe3540 <col:19, col:40> 'int'
|   | | |       |-ImplicitCastExpr 0x25a0cfe3528 <col:19> 'int (*)()' <FunctionToPointerDecay>
|   | | |       | `-DeclRefExpr 0x25a0cfe34e8 <col:19> 'int ()' Function 0x25a0cfd31e0 'OPENSSL_malloc' 'int ()'
|   | | |       `-ImplicitCastExpr 0x25a0cfe3568 <col:34> 'int' <LValueToRValue>
|   | | |         `-DeclRefExpr 0x25a0cfe3508 <col:34> 'int' lvalue Var 0x25a0cfe65b0 'asclen' 'int'
|   | | `-ImplicitCastExpr 0x25a0cfe3660 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x25a0cfe3640 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x25a0cfe3618 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x25a0cfe35d8 <col:26> 'int' 0
|   | `-ReturnStmt 0x25a0cfe3738 <.//openssl//file_jk/before\crypto\pkcs12\p12_utl.c:198:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |   `-ImplicitCastExpr 0x25a0cfe3720 <col:17, col:27> 'char *' <NullToPointer>
|   |     `-ParenExpr 0x25a0cfe3700 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x25a0cfe36d8 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x25a0cfe3698 <col:26> 'int' 0
|   |-ForStmt 0x25a0cfe3d88 <.//openssl//file_jk/before\crypto\pkcs12\p12_utl.c:201:5, line:206:5>
|   | |-BinaryOperator 0x25a0cfe3830 <line:201:10, col:26> 'int' ','
|   | | |-BinaryOperator 0x25a0cfe37a8 <col:10, col:19> 'int' '='
|   | | | |-DeclRefExpr 0x25a0cfe3760 <col:10> 'int' lvalue Var 0x25a0cfe65b0 'asclen' 'int'
|   | | | `-IntegerLiteral 0x25a0cfe3780 <col:19> 'int' 0
|   | | `-BinaryOperator 0x25a0cfe3810 <col:22, col:26> 'int' '='
|   | |   |-DeclRefExpr 0x25a0cfe37c8 <col:22> 'int' lvalue Var 0x25a0cfe6630 'i' 'int'
|   | |   `-IntegerLiteral 0x25a0cfe37e8 <col:26> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x25a0cfe38c0 <col:29, col:33> 'int' '<'
|   | | |-ImplicitCastExpr 0x25a0cfe3890 <col:29> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x25a0cfe3850 <col:29> 'int' lvalue Var 0x25a0cfe6630 'i' 'int'
|   | | `-ImplicitCastExpr 0x25a0cfe38a8 <col:33> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x25a0cfe3870 <col:33> 'int' lvalue ParmVar 0x25a0cfe6400 'unilen' 'int'
|   | |-<<<NULL>>>
|   | `-CompoundStmt 0x25a0cfe3d60 <col:43, line:206:5>
|   |   |-BinaryOperator 0x25a0cfe3b20 <line:202:9, col:55> 'int' '='
|   |   | |-DeclRefExpr 0x25a0cfe38e0 <col:9> 'int' lvalue Var 0x25a0cfe66b0 'j' 'int'
|   |   | `-CallExpr 0x25a0cfe3ae8 <col:13, col:55> 'int'
|   |   |   |-ImplicitCastExpr 0x25a0cfe3ad0 <col:13> 'int (*)(char *, const unsigned char *, int)' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x25a0cfe3900 <col:13> 'int (char *, const unsigned char *, int)' Function 0x25a0cfe5050 'bmp_to_utf8' 'int (char *, const unsigned char *, int)'
|   |   |   |-BinaryOperator 0x25a0cfe3990 <col:25, col:32> 'char *' '+'
|   |   |   | |-ImplicitCastExpr 0x25a0cfe3960 <col:25> 'char *' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x25a0cfe3920 <col:25> 'char *' lvalue Var 0x25a0cfe6768 'asctmp' 'char *'
|   |   |   | `-ImplicitCastExpr 0x25a0cfe3978 <col:32> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x25a0cfe3940 <col:32> 'int' lvalue Var 0x25a0cfe65b0 'asclen' 'int'
|   |   |   |-BinaryOperator 0x25a0cfe3a20 <col:40, col:44> 'const unsigned char *' '+'
|   |   |   | |-ImplicitCastExpr 0x25a0cfe39f0 <col:40> 'const unsigned char *' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x25a0cfe39b0 <col:40> 'const unsigned char *' lvalue ParmVar 0x25a0cfe6380 'uni' 'const unsigned char *'
|   |   |   | `-ImplicitCastExpr 0x25a0cfe3a08 <col:44> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x25a0cfe39d0 <col:44> 'int' lvalue Var 0x25a0cfe6630 'i' 'int'
|   |   |   `-BinaryOperator 0x25a0cfe3ab0 <col:47, col:54> 'int' '-'
|   |   |     |-ImplicitCastExpr 0x25a0cfe3a80 <col:47> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x25a0cfe3a40 <col:47> 'int' lvalue ParmVar 0x25a0cfe6400 'unilen' 'int'
|   |   |     `-ImplicitCastExpr 0x25a0cfe3a98 <col:54> 'int' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x25a0cfe3a60 <col:54> 'int' lvalue Var 0x25a0cfe6630 'i' 'int'
|   |   |-IfStmt 0x25a0cfe3cb0 <line:203:9, line:204:26> has_else
|   |   | |-BinaryOperator 0x25a0cfe3ba0 <line:203:13, col:18> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x25a0cfe3b88 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x25a0cfe3b40 <col:13> 'int' lvalue Var 0x25a0cfe66b0 'j' 'int'
|   |   | | `-IntegerLiteral 0x25a0cfe3b60 <col:18> 'int' 4
|   |   | |-CompoundAssignOperator 0x25a0cfe3c08 <col:21, col:26> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | | |-DeclRefExpr 0x25a0cfe3bc0 <col:21> 'int' lvalue Var 0x25a0cfe6630 'i' 'int'
|   |   | | `-IntegerLiteral 0x25a0cfe3be0 <col:26> 'int' 4
|   |   | `-CompoundAssignOperator 0x25a0cfe3c80 <line:204:21, col:26> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |   |-DeclRefExpr 0x25a0cfe3c38 <col:21> 'int' lvalue Var 0x25a0cfe6630 'i' 'int'
|   |   |   `-IntegerLiteral 0x25a0cfe3c58 <col:26> 'int' 2
|   |   `-CompoundAssignOperator 0x25a0cfe3d30 <line:205:9, col:19> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     |-DeclRefExpr 0x25a0cfe3cd8 <col:9> 'int' lvalue Var 0x25a0cfe65b0 'asclen' 'int'
|   |     `-ImplicitCastExpr 0x25a0cfe3d18 <col:19> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x25a0cfe3cf8 <col:19> 'int' lvalue Var 0x25a0cfe66b0 'j' 'int'
|   |-IfStmt 0x25a0cfe2160 <line:209:5, line:210:26>
|   | |-BinaryOperator 0x25a0cfe2060 <line:209:9, col:51> 'int' '||'
|   | | |-UnaryOperator 0x25a0cfe3df8 <col:9, col:10> 'int' prefix '!' cannot overflow
|   | | | `-ImplicitCastExpr 0x25a0cfe3de0 <col:10> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x25a0cfe3dc0 <col:10> 'int' lvalue ParmVar 0x25a0cfe6400 'unilen' 'int'
|   | | `-ParenExpr 0x25a0cfe2040 <col:20, col:51> 'int'
|   | |   `-BinaryOperator 0x25a0cfe2020 <col:21, col:50> 'int' '||'
|   | |     |-ImplicitCastExpr 0x25a0cfe1fd8 <col:21, col:33> 'int' <IntegralCast>
|   | |     | `-ImplicitCastExpr 0x25a0cfe1fc0 <col:21, col:33> 'unsigned char' <LValueToRValue>
|   | |     |   `-ArraySubscriptExpr 0x25a0cfe3ec8 <col:21, col:33> 'const unsigned char' lvalue
|   | |     |     |-ImplicitCastExpr 0x25a0cfe3eb0 <col:21> 'const unsigned char *' <LValueToRValue>
|   | |     |     | `-DeclRefExpr 0x25a0cfe3e10 <col:21> 'const unsigned char *' lvalue ParmVar 0x25a0cfe6380 'uni' 'const unsigned char *'
|   | |     |     `-BinaryOperator 0x25a0cfe3e90 <col:25, col:32> 'int' '-'
|   | |     |       |-ImplicitCastExpr 0x25a0cfe3e78 <col:25> 'int' <LValueToRValue>
|   | |     |       | `-DeclRefExpr 0x25a0cfe3e30 <col:25> 'int' lvalue ParmVar 0x25a0cfe6400 'unilen' 'int'
|   | |     |       `-IntegerLiteral 0x25a0cfe3e50 <col:32> 'int' 2
|   | |     `-ImplicitCastExpr 0x25a0cfe2008 <col:36, col:50> 'int' <IntegralCast>
|   | |       `-ImplicitCastExpr 0x25a0cfe1ff0 <col:36, col:50> 'unsigned char' <LValueToRValue>
|   | |         `-ArraySubscriptExpr 0x25a0cfe1fa0 <col:36, col:50> 'const unsigned char' lvalue
|   | |           |-ImplicitCastExpr 0x25a0cfe1f88 <col:36> 'const unsigned char *' <LValueToRValue>
|   | |           | `-DeclRefExpr 0x25a0cfe3ee8 <col:36> 'const unsigned char *' lvalue ParmVar 0x25a0cfe6380 'uni' 'const unsigned char *'
|   | |           `-BinaryOperator 0x25a0cfe1f68 <col:40, col:49> 'int' '-'
|   | |             |-ImplicitCastExpr 0x25a0cfe1f50 <col:40> 'int' <LValueToRValue>
|   | |             | `-DeclRefExpr 0x25a0cfe3f08 <col:40> 'int' lvalue ParmVar 0x25a0cfe6400 'unilen' 'int'
|   | |             `-IntegerLiteral 0x25a0cfe3f28 <col:49> 'int' 1
|   | `-BinaryOperator 0x25a0cfe2140 <line:210:9, col:26> 'char' '='
|   |   |-ArraySubscriptExpr 0x25a0cfe20f0 <col:9, col:22> 'char' lvalue
|   |   | |-ImplicitCastExpr 0x25a0cfe20c0 <col:9> 'char *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x25a0cfe2080 <col:9> 'char *' lvalue Var 0x25a0cfe6768 'asctmp' 'char *'
|   |   | `-ImplicitCastExpr 0x25a0cfe20d8 <col:16> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x25a0cfe20a0 <col:16> 'int' lvalue Var 0x25a0cfe65b0 'asclen' 'int'
|   |   `-ImplicitCastExpr 0x25a0cfe2128 <col:26> 'char' <IntegralCast>
|   |     `-CharacterLiteral 0x25a0cfe2110 <col:26> 'int' 0
|   `-ReturnStmt 0x25a0cfe21b0 <line:212:5, col:12>
|     `-ImplicitCastExpr 0x25a0cfe2198 <col:12> 'char *' <LValueToRValue>
|       `-DeclRefExpr 0x25a0cfe2178 <col:12> 'char *' lvalue Var 0x25a0cfe6768 'asctmp' 'char *'
|-FunctionDecl 0x25a0cfe2390 <line:215:1, line:218:1> line:215:5 invalid i2d_PKCS12_bio 'int (int *, int *)'
| |-ParmVarDecl 0x25a0cfe2230 <col:20, col:25> col:25 invalid bp 'int *'
| |-ParmVarDecl 0x25a0cfe22b0 <col:29, col:37> col:37 invalid p12 'int *'
| `-CompoundStmt 0x25a0cfe2678 <line:216:1, line:218:1>
|-FunctionDecl 0x25a0cfe2830 <line:221:1, line:224:1> line:221:5 invalid i2d_PKCS12_fp 'int (FILE *, int *)'
| |-ParmVarDecl 0x25a0cfe2698 <col:19, col:25> col:25 used fp 'FILE *'
| |-ParmVarDecl 0x25a0cfe2718 <col:29, col:37> col:37 invalid p12 'int *'
| `-CompoundStmt 0x25a0cfe2a60 <line:222:1, line:224:1>
|-FunctionDecl 0x25a0cfe2c10 <line:227:1, line:230:1> line:227:9 invalid d2i_PKCS12_bio 'int *(int *, int **)'
| |-ParmVarDecl 0x25a0cfe2a88 <col:24, col:29> col:29 invalid bp 'int *'
| |-ParmVarDecl 0x25a0cfe2b38 <col:33, col:42> col:42 invalid p12 'int **'
| `-CompoundStmt 0x25a0cfe2e08 <line:228:1, line:230:1>
`-FunctionDecl 0x25a0cfe0ff0 <line:233:1, line:236:1> line:233:9 invalid d2i_PKCS12_fp 'int *(FILE *, int **)'
  |-ParmVarDecl 0x25a0cfe2e28 <col:23, col:29> col:29 used fp 'FILE *'
  |-ParmVarDecl 0x25a0cfe2eb0 <col:33, col:42> col:42 invalid p12 'int **'
  `-CompoundStmt 0x25a0cfe1220 <line:234:1, line:236:1>
