TranslationUnitDecl 0x212fef43278 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x212fef43b10 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x212fef43810 '__int128'
|-TypedefDecl 0x212fef43b80 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x212fef43830 'unsigned __int128'
|-TypedefDecl 0x212fef43eb8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x212fef43c70 'struct __NSConstantString_tag'
|   `-Record 0x212fef43bd8 '__NSConstantString_tag'
|-TypedefDecl 0x212fef43f28 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x212fef43450 'unsigned long long'
|-TypedefDecl 0x212fef43fc0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x212fef43f80 'char *'
|   `-BuiltinType 0x212fef43310 'char'
|-TypedefDecl 0x212fef44030 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x212fef43f80 'char *'
|   `-BuiltinType 0x212fef43310 'char'
|-TypedefDecl 0x212fef440f0 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x212fef43450 'unsigned long long'
|-TypedefDecl 0x212fef44160 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x212fef43f80 'char *'
|   `-BuiltinType 0x212fef43310 'char'
|-FunctionDecl 0x212ff626460 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x212ff626500 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x212ff626570 <col:21> Implicit
|-FunctionDecl 0x212ff6265c8 prev 0x212ff626460 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x212ff6262f0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x212ff6266b8 <col:21> Inherited Implicit
|-TypedefDecl 0x212ff6266f8 prev 0x212fef43f28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x212fef43450 'unsigned long long'
|-TypedefDecl 0x212ff6267a0 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x212ff626770 'size_t' sugar
|   |-Typedef 0x212ff6266f8 'size_t'
|   `-BuiltinType 0x212fef43450 'unsigned long long'
|-TypedefDecl 0x212ff626810 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x212fef433b0 'long long'
|-TypedefDecl 0x212ff626880 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x212fef433b0 'long long'
|-TypedefDecl 0x212ff6268f0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x212fef433f0 'unsigned short'
|-TypedefDecl 0x212ff626960 <line:541:1, col:24> col:24 wint_t 'unsigned short'
| `-BuiltinType 0x212fef433f0 'unsigned short'
|-TypedefDecl 0x212ff6269d0 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x212fef433f0 'unsigned short'
|-TypedefDecl 0x212ff626a40 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x212fef43370 'int'
|-TypedefDecl 0x212ff626ab0 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x212fef43390 'long'
|-TypedefDecl 0x212ff626b20 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x212fef433b0 'long long'
|-TypedefDecl 0x212ff626bb0 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x212ff626b80 '__time64_t' sugar
|   |-Typedef 0x212ff626b20 '__time64_t'
|   `-BuiltinType 0x212fef433b0 'long long'
|-FunctionDecl 0x212ff626d28 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x212ff626f48 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x212ff65af70 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x212ff627088 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x212ff627100 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x212ff627178 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x212ff6271f8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x212ff65ad10 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x212ff65b050 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x212ff65b110 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x212ff65b280 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x212ff65b230 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x212ff65b1d0 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x212ff65b0f0 'struct threadlocaleinfostruct'
|       `-Record 0x212ff668df0 'threadlocaleinfostruct'
|-TypedefDecl 0x212ff65b390 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x212ff65b340 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x212ff65b2e0 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x212ff65b1b0 'struct threadmbcinfostruct'
|       `-Record 0x212ff65b110 'threadmbcinfostruct'
|-RecordDecl 0x212ff65b3e8 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x212ff65b4a0 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x212ff65b560 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x212ff65b5f0 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x212ff65b680 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x212ff65b738 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x212ff65b6e0 'struct localeinfo_struct' sugar
|   `-RecordType 0x212ff65b540 'struct localeinfo_struct'
|     `-Record 0x212ff65b4a0 'localeinfo_struct'
|-TypedefDecl 0x212ff65b810 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x212ff65b7c0 'struct localeinfo_struct *'
|   `-ElaboratedType 0x212ff65b6e0 'struct localeinfo_struct' sugar
|     `-RecordType 0x212ff65b540 'struct localeinfo_struct'
|       `-Record 0x212ff65b4a0 'localeinfo_struct'
|-RecordDecl 0x212ff65b888 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x212ff65b940 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x212ff65b9b8 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x212ff65ba78 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x212ff65bb10 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x212ff65bb80 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x212ff65bc38 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x212ff65bbe0 'struct localerefcount' sugar
|   `-RecordType 0x212ff65b920 'struct localerefcount'
|     `-Record 0x212ff65b888 'localerefcount'
|-RecordDecl 0x212ff668df0 prev 0x212ff65b050 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x212ff668e70 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x212ff668ee8 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x212ff668f58 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x212ff668fc8 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x212ff669038 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x212ff6691f8 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x212ff669268 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x212ff6692d8 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x212ff669348 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x212ff6693b8 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x212ff669428 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x212ff669480 parent 0x212fef43278 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x212ff669610 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x212ff669680 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x212ff6696f0 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x212ff669760 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x212ff669800 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x212ff669870 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x212ff669980 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x212ff669ab8 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x212ff669b68 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x212ff669b10 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x212ff65b0f0 'struct threadlocaleinfostruct'
|     `-Record 0x212ff668df0 'threadlocaleinfostruct'
|-TypedefDecl 0x212ff664db0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:52:1, col:24> col:24 referenced _onexit_t 'int (*)(void) __attribute__((cdecl))'
| `-PointerType 0x212ff669d60 'int (*)(void) __attribute__((cdecl))'
|   `-AttributedType 0x212ff669d00 'int (void) __attribute__((cdecl))' sugar
|     |-ParenType 0x212ff669cb0 'int (void)' sugar
|     | `-FunctionProtoType 0x212ff669c80 'int (void)' cdecl
|     |   `-BuiltinType 0x212fef43370 'int'
|     `-ParenType 0x212ff669cb0 'int (void)' sugar
|       `-FunctionProtoType 0x212ff669c80 'int (void)' cdecl
|         `-BuiltinType 0x212fef43370 'int'
|-RecordDecl 0x212ff664e08 <line:75:9, line:78:1> line:75:16 struct _div_t definition
| |-MaxFieldAlignmentAttr 0x212ff664ec0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x212ff664f38 <line:76:9, col:13> col:13 quot 'int'
| `-FieldDecl 0x212ff664fa8 <line:77:9, col:13> col:13 rem 'int'
|-TypedefDecl 0x212ff665058 <line:75:1, line:78:3> col:3 referenced div_t 'struct _div_t':'struct _div_t'
| `-ElaboratedType 0x212ff665000 'struct _div_t' sugar
|   `-RecordType 0x212ff664ea0 'struct _div_t'
|     `-Record 0x212ff664e08 '_div_t'
|-RecordDecl 0x212ff6650c8 <line:80:9, line:83:1> line:80:16 struct _ldiv_t definition
| |-MaxFieldAlignmentAttr 0x212ff665180 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x212ff6651f8 <line:81:9, col:14> col:14 quot 'long'
| `-FieldDecl 0x212ff665268 <line:82:9, col:14> col:14 rem 'long'
|-TypedefDecl 0x212ff665318 <line:80:1, line:83:3> col:3 referenced ldiv_t 'struct _ldiv_t':'struct _ldiv_t'
| `-ElaboratedType 0x212ff6652c0 'struct _ldiv_t' sugar
|   `-RecordType 0x212ff665160 'struct _ldiv_t'
|     `-Record 0x212ff6650c8 '_ldiv_t'
|-RecordDecl 0x212ff665388 <line:85:9, line:88:1> line:85:16 struct _lldiv_t definition
| |-MaxFieldAlignmentAttr 0x212ff665440 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x212ff6654b8 <line:86:9, col:19> col:19 quot 'long long'
| `-FieldDecl 0x212ff665528 <line:87:9, col:19> col:19 rem 'long long'
|-TypedefDecl 0x212ff6655d8 <line:85:1, line:88:3> col:3 referenced lldiv_t 'struct _lldiv_t':'struct _lldiv_t'
| `-ElaboratedType 0x212ff665580 'struct _lldiv_t' sugar
|   `-RecordType 0x212ff665420 'struct _lldiv_t'
|     `-Record 0x212ff665388 '_lldiv_t'
|-RecordDecl 0x212ff665670 <line:103:9, line:105:1> line:103:9 struct definition
| |-MaxFieldAlignmentAttr 0x212ff665730 <<invalid sloc>> Implicit 32
| `-FieldDecl 0x212ff665830 <line:104:5, col:24> col:19 ld 'unsigned char [10]'
|-TypedefDecl 0x212ff6658e8 <line:103:1, line:105:3> col:3 referenced _LDOUBLE 'struct _LDOUBLE':'_LDOUBLE'
| `-ElaboratedType 0x212ff665890 'struct _LDOUBLE' sugar
|   `-RecordType 0x212ff665710 '_LDOUBLE'
|     `-Record 0x212ff665670 ''
|-RecordDecl 0x212ff665958 <line:122:9, line:124:1> line:122:9 struct definition
| `-FieldDecl 0x212ff665a28 <line:123:9, col:16> col:16 x 'double'
|-TypedefDecl 0x212ff665ad8 <line:122:1, line:124:3> col:3 referenced _CRT_DOUBLE 'struct _CRT_DOUBLE':'_CRT_DOUBLE'
| `-ElaboratedType 0x212ff665a80 'struct _CRT_DOUBLE' sugar
|   `-RecordType 0x212ff6659f0 '_CRT_DOUBLE'
|     `-Record 0x212ff665958 ''
|-RecordDecl 0x212ff665b48 <line:126:9, line:128:1> line:126:9 struct definition
| `-FieldDecl 0x212ff665c18 <line:127:5, col:11> col:11 f 'float'
|-TypedefDecl 0x212ff665cc8 <line:126:1, line:128:3> col:3 referenced _CRT_FLOAT 'struct _CRT_FLOAT':'_CRT_FLOAT'
| `-ElaboratedType 0x212ff665c70 'struct _CRT_FLOAT' sugar
|   `-RecordType 0x212ff665be0 '_CRT_FLOAT'
|     `-Record 0x212ff665b48 ''
|-RecordDecl 0x212ff66ce30 <line:134:9, line:139:1> line:134:9 struct definition
| `-FieldDecl 0x212ff66cf08 <line:138:9, col:21> col:21 x 'long double'
|-TypedefDecl 0x212ff66cfb8 <line:134:1, line:139:3> col:3 _LONGDOUBLE 'struct _LONGDOUBLE':'_LONGDOUBLE'
| `-ElaboratedType 0x212ff66cf60 'struct _LONGDOUBLE' sugar
|   `-RecordType 0x212ff66ced0 '_LONGDOUBLE'
|     `-Record 0x212ff66ce30 ''
|-RecordDecl 0x212ff66d050 <line:144:9, line:146:1> line:144:9 struct definition
| |-MaxFieldAlignmentAttr 0x212ff66d110 <<invalid sloc>> Implicit 32
| `-FieldDecl 0x212ff66d210 <line:145:5, col:26> col:19 ld12 'unsigned char [12]'
|-TypedefDecl 0x212ff66d2c8 <line:144:1, line:146:3> col:3 _LDBL12 'struct _LDBL12':'_LDBL12'
| `-ElaboratedType 0x212ff66d270 'struct _LDBL12' sugar
|   `-RecordType 0x212ff66d0f0 '_LDBL12'
|     `-Record 0x212ff66d050 ''
|-VarDecl 0x212ff66d350 <line:170:9, col:20> col:20 __mb_cur_max 'int' extern
|-FunctionDecl 0x212ff66d4d0 <line:175:9, col:44> col:21 ___mb_cur_max_func 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x212ff66d728 <line:176:9, col:51> col:21 ___mb_cur_max_l_func 'int (_locale_t) __attribute__((cdecl))':'int (_locale_t)'
| `-ParmVarDecl 0x212ff66d5c0 <col:42> col:51 '_locale_t':'struct localeinfo_struct *'
|-TypedefDecl 0x212ff66d970 <line:215:1, col:24> col:24 referenced _purecall_handler 'void (*)(void) __attribute__((cdecl))'
| `-PointerType 0x212ff66d910 'void (*)(void) __attribute__((cdecl))'
|   `-AttributedType 0x212ff66d8b0 'void (void) __attribute__((cdecl))' sugar
|     |-ParenType 0x212ff66d860 'void (void)' sugar
|     | `-FunctionProtoType 0x212ff626c80 'void (void)' cdecl
|     |   `-BuiltinType 0x212fef432d0 'void'
|     `-ParenType 0x212ff66d860 'void (void)' sugar
|       `-FunctionProtoType 0x212ff626c80 'void (void)' cdecl
|         `-BuiltinType 0x212fef432d0 'void'
|-FunctionDecl 0x212ff66db70 <line:218:9, col:92> col:35 _set_purecall_handler '_purecall_handler (_purecall_handler) __attribute__((cdecl))':'_purecall_handler (_purecall_handler)'
| `-ParmVarDecl 0x212ff66da00 <col:66, col:84> col:84 _Handler '_purecall_handler':'void (*)(void) __attribute__((cdecl))'
|-FunctionDecl 0x212ff66dd88 <line:219:9, col:61> col:35 _get_purecall_handler '_purecall_handler (void) __attribute__((cdecl))':'_purecall_handler (void)'
|-TypedefDecl 0x212ff66e1f8 <line:235:1, col:24> col:24 referenced _invalid_parameter_handler 'void (*)(const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((cdecl))'
| `-PointerType 0x212ff66e170 'void (*)(const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((cdecl))'
|   `-AttributedType 0x212ff66e110 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((cdecl))' sugar
|     |-ParenType 0x212ff66e0c0 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t)' sugar
|     | `-FunctionProtoType 0x212ff65add0 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t)' cdecl
|     |   |-BuiltinType 0x212fef432d0 'void'
|     |   |-PointerType 0x212ff627050 'const wchar_t *'
|     |   | `-QualType 0x212ff627001 'const wchar_t' const
|     |   |   `-TypedefType 0x212ff627000 'wchar_t' sugar
|     |   |     |-Typedef 0x212ff6268f0 'wchar_t'
|     |   |     `-BuiltinType 0x212fef433f0 'unsigned short'
|     |   |-PointerType 0x212ff627050 'const wchar_t *'
|     |   | `-QualType 0x212ff627001 'const wchar_t' const
|     |   |   `-TypedefType 0x212ff627000 'wchar_t' sugar
|     |   |     |-Typedef 0x212ff6268f0 'wchar_t'
|     |   |     `-BuiltinType 0x212fef433f0 'unsigned short'
|     |   |-PointerType 0x212ff627050 'const wchar_t *'
|     |   | `-QualType 0x212ff627001 'const wchar_t' const
|     |   |   `-TypedefType 0x212ff627000 'wchar_t' sugar
|     |   |     |-Typedef 0x212ff6268f0 'wchar_t'
|     |   |     `-BuiltinType 0x212fef433f0 'unsigned short'
|     |   |-BuiltinType 0x212fef43410 'unsigned int'
|     |   `-TypedefType 0x212ff627260 'uintptr_t' sugar
|     |     |-Typedef 0x212fef440f0 'uintptr_t'
|     |     `-BuiltinType 0x212fef43450 'unsigned long long'
|     `-ParenType 0x212ff66e0c0 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t)' sugar
|       `-FunctionProtoType 0x212ff65add0 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t)' cdecl
|         |-BuiltinType 0x212fef432d0 'void'
|         |-PointerType 0x212ff627050 'const wchar_t *'
|         | `-QualType 0x212ff627001 'const wchar_t' const
|         |   `-TypedefType 0x212ff627000 'wchar_t' sugar
|         |     |-Typedef 0x212ff6268f0 'wchar_t'
|         |     `-BuiltinType 0x212fef433f0 'unsigned short'
|         |-PointerType 0x212ff627050 'const wchar_t *'
|         | `-QualType 0x212ff627001 'const wchar_t' const
|         |   `-TypedefType 0x212ff627000 'wchar_t' sugar
|         |     |-Typedef 0x212ff6268f0 'wchar_t'
|         |     `-BuiltinType 0x212fef433f0 'unsigned short'
|         |-PointerType 0x212ff627050 'const wchar_t *'
|         | `-QualType 0x212ff627001 'const wchar_t' const
|         |   `-TypedefType 0x212ff627000 'wchar_t' sugar
|         |     |-Typedef 0x212ff6268f0 'wchar_t'
|         |     `-BuiltinType 0x212fef433f0 'unsigned short'
|         |-BuiltinType 0x212fef43410 'unsigned int'
|         `-TypedefType 0x212ff627260 'uintptr_t' sugar
|           |-Typedef 0x212fef440f0 'uintptr_t'
|           `-BuiltinType 0x212fef43450 'unsigned long long'
|-FunctionDecl 0x212ff66e3f0 <line:238:9, col:119> col:44 _set_invalid_parameter_handler '_invalid_parameter_handler (_invalid_parameter_handler) __attribute__((cdecl))':'_invalid_parameter_handler (_invalid_parameter_handler)'
| `-ParmVarDecl 0x212ff66e280 <col:84, col:111> col:111 _Handler '_invalid_parameter_handler':'void (*)(const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((cdecl))'
|-FunctionDecl 0x212ff66e608 <line:239:9, col:79> col:44 _get_invalid_parameter_handler '_invalid_parameter_handler (void) __attribute__((cdecl))':'_invalid_parameter_handler (void)'
|-FunctionDecl 0x212ff66e7f0 <line:245:9, col:41> col:30 _errno 'int *(void) __attribute__((cdecl))':'int *(void)' extern
|-FunctionDecl 0x212ff66ea60 <line:248:1, col:43> col:17 _set_errno 'errno_t (int) __attribute__((cdecl))':'errno_t (int)'
| `-ParmVarDecl 0x212ff66e8e8 <col:33, col:37> col:37 _Value 'int'
|-FunctionDecl 0x212ff66ecb0 <line:249:1, col:46> col:17 _get_errno 'errno_t (int *) __attribute__((cdecl))':'errno_t (int *)'
| `-ParmVarDecl 0x212ff66eb38 <col:34, col:40> col:40 _Value 'int *'
|-FunctionDecl 0x212ff66ef00 <line:252:9, col:48> col:33 __doserrno 'unsigned long *(void) __attribute__((cdecl))':'unsigned long *(void)'
|-FunctionDecl 0x212ff66f140 <line:255:1, col:56> col:17 _set_doserrno 'errno_t (unsigned long) __attribute__((cdecl))':'errno_t (unsigned long)'
| `-ParmVarDecl 0x212ff66efd0 <col:36, col:50> col:50 _Value 'unsigned long'
|-FunctionDecl 0x212ff66f390 <line:256:1, col:59> col:17 _get_doserrno 'errno_t (unsigned long *) __attribute__((cdecl))':'errno_t (unsigned long *)'
| `-ParmVarDecl 0x212ff66f218 <col:37, col:53> col:53 _Value 'unsigned long *'
|-FunctionDecl 0x212ff66f670 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:259:77> col:59 __sys_errlist 'char **(void) __attribute__((cdecl))':'char **(void)'
| `-DeprecatedAttr 0x212ff66f710 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x212ff66f9d0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:262:72> col:57 __sys_nerr 'int *(void) __attribute__((cdecl))':'int *(void)'
| `-DeprecatedAttr 0x212ff66fa70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-VarDecl 0x212ff66fbb8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:288:9, col:20> col:20 __argc 'int' extern
|-VarDecl 0x212ff66fc50 <line:289:9, col:24> col:24 __argv 'char **' extern
|-VarDecl 0x212ff66fd40 <line:290:9, col:27> col:27 __wargv 'wchar_t **' extern
|-VarDecl 0x212ff66fdd8 <line:306:9, col:24> col:24 _environ 'char **' extern
|-VarDecl 0x212ff670ea0 <line:307:9, col:27> col:27 _wenviron 'wchar_t **' extern
|-VarDecl 0x212ff671030 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:311:68> col:68 _pgmptr 'char *' extern
| `-DeprecatedAttr 0x212ff671098 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_pgmptr instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-VarDecl 0x212ff6712d8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:312:72> col:72 _wpgmptr 'wchar_t *' extern
| `-DeprecatedAttr 0x212ff671340 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_wpgmptr instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x212ff671600 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:339:1, col:61> col:17 _get_pgmptr 'errno_t (char **) __attribute__((cdecl))':'errno_t (char **)'
| `-ParmVarDecl 0x212ff671488 <col:47, col:55> col:55 _Value 'char **'
|-FunctionDecl 0x212ff671850 <line:340:1, col:65> col:17 _get_wpgmptr 'errno_t (wchar_t **) __attribute__((cdecl))':'errno_t (wchar_t **)'
| `-ParmVarDecl 0x212ff6716d8 <col:48, col:59> col:59 _Value 'wchar_t **'
|-VarDecl 0x212ff671a20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:346:64> col:64 _fmode 'int' extern
| `-DeprecatedAttr 0x212ff671a88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_fmode instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x212ff671ca8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:353:9, col:50> col:25 _set_fmode 'errno_t (int) __attribute__((cdecl))':'errno_t (int)'
| `-ParmVarDecl 0x212ff671bd0 <col:41, col:45> col:45 _Mode 'int'
|-FunctionDecl 0x212ff671e80 <line:354:9, col:54> col:25 _get_fmode 'errno_t (int *) __attribute__((cdecl))':'errno_t (int *)'
| `-ParmVarDecl 0x212ff671d80 <col:42, col:48> col:48 _PMode 'int *'
|-FunctionDecl 0x212ff6720d0 <line:376:43> col:43 implicit exit 'void (int) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x212ff672170 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x212ff6721e0 prev 0x212ff6720d0 <col:9, col:62> col:43 exit 'void (int) __attribute__((noreturn))'
| `-ParmVarDecl 0x212ff671f58 <col:53, col:57> col:57 _Code 'int'
|-FunctionDecl 0x212ff672390 <line:378:43> col:43 implicit _exit 'void (int) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x212ff672430 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x212ff6724a0 prev 0x212ff672390 <col:9, col:63> col:43 _exit 'void (int) __attribute__((noreturn))'
| `-ParmVarDecl 0x212ff6722b8 <col:54, col:58> col:58 _Code 'int'
|-FunctionDecl 0x212ff672628 <line:379:43> col:43 implicit abort 'void (void) __attribute__((noreturn))' extern
|-FunctionDecl 0x212ff6726c8 prev 0x212ff672628 <col:9, col:53> col:43 abort 'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x212ff672980 <line:382:9, col:99> col:30 _set_abort_behavior 'unsigned int (unsigned int, unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int, unsigned int)'
| |-ParmVarDecl 0x212ff672798 <col:55, col:68> col:68 _Flags 'unsigned int'
| `-ParmVarDecl 0x212ff672818 <col:81, col:94> col:94 _Mask 'unsigned int'
|-FunctionDecl 0x212ff672b78 <line:384:19> col:19 implicit abs 'int (int)' extern
| |-ParmVarDecl 0x212ff672c18 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x212ff672c88 <col:19> Implicit
| `-ConstAttr 0x212ff672ce0 <col:19> Implicit
|-FunctionDecl 0x212ff672d08 prev 0x212ff672b78 <col:1, col:34> col:19 abs 'int (int)'
| |-ParmVarDecl 0x212ff672a60 <col:28, col:32> col:32 _X 'int'
| |-NoThrowAttr 0x212ff672df8 <col:19> Inherited Implicit
| `-ConstAttr 0x212ff672e20 <col:19> Inherited Implicit
|-FunctionDecl 0x212ff672fd8 <line:385:19> col:19 implicit labs 'long (long)' extern
| |-ParmVarDecl 0x212ff673078 <<invalid sloc>> <invalid sloc> 'long'
| |-NoThrowAttr 0x212ff6730e8 <col:19> Implicit
| `-ConstAttr 0x212ff673140 <col:19> Implicit
|-FunctionDecl 0x212ff673168 prev 0x212ff672fd8 <col:1, col:36> col:19 labs 'long (long)'
| |-ParmVarDecl 0x212ff672e90 <col:29, col:34> col:34 _X 'long'
| |-NoThrowAttr 0x212ff673258 <col:19> Inherited Implicit
| `-ConstAttr 0x212ff673280 <col:19> Inherited Implicit
|-FunctionDecl 0x212ff673408 <line:386:19> col:19 implicit llabs 'long long (long long)' extern
| |-ParmVarDecl 0x212ff6734a8 <<invalid sloc>> <invalid sloc> 'long long'
| |-NoThrowAttr 0x212ff673518 <col:19> Implicit
| `-ConstAttr 0x212ff673570 <col:19> Implicit
|-FunctionDecl 0x212ff673598 prev 0x212ff673408 <col:1, col:42> col:19 llabs 'long long (long long)'
| |-ParmVarDecl 0x212ff6732c0 <col:30, col:40> col:40 _X 'long long'
| |-NoThrowAttr 0x212ff673688 <col:19> Inherited Implicit
| `-ConstAttr 0x212ff6736b0 <col:19> Inherited Implicit
|-FunctionDecl 0x212ff6737b8 <line:388:9, col:42> col:28 _abs64 'long long (long long) __attribute__((cdecl))':'long long (long long)'
| `-ParmVarDecl 0x212ff6736f0 <col:35> col:42 'long long'
|-FunctionDecl 0x212ff673ab8 <line:426:9, col:53> col:24 atexit 'int (void (*)(void) __attribute__((cdecl))) __attribute__((cdecl))':'int (void (*)(void) __attribute__((cdecl)))'
| `-ParmVarDecl 0x212ff673950 <col:31, col:45> col:46 'void (*)(void) __attribute__((cdecl))'
|-FunctionDecl 0x212ff673cd8 <line:428:24, col:71> col:40 atof 'double (const char *) __attribute__((cdecl))':'double (const char *)'
| `-ParmVarDecl 0x212ff673b90 <col:52, col:64> col:64 _String 'const char *'
|-FunctionDecl 0x212ff673fe0 <line:429:24, col:102> col:40 _atof_l 'double (const char *, _locale_t) __attribute__((cdecl))':'double (const char *, _locale_t)'
| |-ParmVarDecl 0x212ff673db0 <col:55, col:67> col:67 _String 'const char *'
| `-ParmVarDecl 0x212ff673e28 <col:85, col:95> col:95 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x212ff674208 <line:430:43, col:86> col:58 atoi 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x212ff6740c0 <col:70, col:82> col:82 _Str 'const char *'
|-FunctionDecl 0x212ff674500 <line:431:24, col:98> col:39 _atoi_l 'int (const char *, _locale_t) __attribute__((cdecl))':'int (const char *, _locale_t)'
| |-ParmVarDecl 0x212ff6742e0 <col:54, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x212ff674358 <col:81, col:91> col:91 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x212ff674728 <line:432:24, col:67> col:39 atol 'long (const char *) __attribute__((cdecl))':'long (const char *)'
| `-ParmVarDecl 0x212ff6745e0 <col:51, col:63> col:63 _Str 'const char *'
|-FunctionDecl 0x212ff674a20 <line:433:24, col:98> col:39 _atol_l 'long (const char *, _locale_t) __attribute__((cdecl))':'long (const char *, _locale_t)'
| |-ParmVarDecl 0x212ff674800 <col:54, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x212ff674878 <col:81, col:91> col:91 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x212ff674c48 <line:434:24, col:71> col:42 atoll 'long long (const char *) __attribute__((cdecl))':'long long (const char *)'
| `-ParmVarDecl 0x212ff674b00 <col:55, col:67> col:67 _Str 'const char *'
|-FunctionDecl 0x212ff6a5620 <line:435:24, col:102> col:42 _atoll_l 'long long (const char *, _locale_t) __attribute__((cdecl))':'long long (const char *, _locale_t)'
| |-ParmVarDecl 0x212ff674d20 <col:58, col:70> col:70 _Str 'const char *'
| `-ParmVarDecl 0x212ff674d98 <col:85, col:95> col:95 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x212ff6a5f10 <line:439:24, line:441:97> line:439:39 bsearch_s 'void *(const void *, const void *, rsize_t, rsize_t, int (*)(void *, const void *, const void *) __attribute__((cdecl)), void *) __attribute__((cdecl))':'void *(const void *, const void *, rsize_t, rsize_t, int (*)(void *, const void *, const void *) __attribute__((cdecl)), void *)'
| |-ParmVarDecl 0x212ff6a5730 <col:54, col:67> col:67 _Key 'const void *'
| |-ParmVarDecl 0x212ff6a57b0 <col:124, col:137> col:137 _Base 'const void *'
| |-ParmVarDecl 0x212ff6a5850 <line:440:14, col:22> col:22 _NumOfElements 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x212ff6a58c8 <col:43, col:51> col:51 _SizeOfElements 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x212ff6a5c20 <line:441:14, col:29> col:29 _PtFuncCompare 'int (*)(void *, const void *, const void *) __attribute__((cdecl))'
| `-ParmVarDecl 0x212ff6a5ca0 <col:82, col:89> col:89 _Context 'void *'
|-FunctionDecl 0x212ff6a86d8 <line:443:24, line:445:72> line:443:39 bsearch 'void *(const void *, const void *, size_t, size_t, int (*)(const void *, const void *) __attribute__((cdecl))) __attribute__((cdecl))':'void *(const void *, const void *, size_t, size_t, int (*)(const void *, const void *) __attribute__((cdecl)))'
| |-ParmVarDecl 0x212ff6a6010 <col:52, col:65> col:65 _Key 'const void *'
| |-ParmVarDecl 0x212ff6a6090 <col:122, col:135> col:135 _Base 'const void *'
| |-ParmVarDecl 0x212ff6a6108 <line:444:14, col:21> col:21 _NumOfElements 'size_t':'unsigned long long'
| |-ParmVarDecl 0x212ff6a6180 <col:42, col:49> col:49 _SizeOfElements 'size_t':'unsigned long long'
| `-ParmVarDecl 0x212ff6a6458 <line:445:14, col:29> col:29 _PtFuncCompare 'int (*)(const void *, const void *) __attribute__((cdecl))'
|-FunctionDecl 0x212ff6a8de0 <line:448:9, line:450:96> line:448:22 qsort_s 'void (void *, rsize_t, rsize_t, int (*)(void *, const void *, const void *) __attribute__((cdecl)), void *) __attribute__((cdecl))':'void (void *, rsize_t, rsize_t, int (*)(void *, const void *, const void *) __attribute__((cdecl)), void *)'
| |-ParmVarDecl 0x212ff6a87d0 <col:85, col:92> col:92 _Base 'void *'
| |-ParmVarDecl 0x212ff6a8848 <line:449:14, col:22> col:22 _NumOfElements 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x212ff6a88c0 <col:43, col:51> col:51 _SizeOfElements 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x212ff6a8b28 <line:450:14, col:29> col:29 _PtFuncCompare 'int (*)(void *, const void *, const void *) __attribute__((cdecl))'
| `-ParmVarDecl 0x212ff6a8ba8 <col:82, col:88> col:88 _Context 'void *'
|-FunctionDecl 0x212ff6a93a8 <line:452:9, line:454:72> line:452:22 qsort 'void (void *, size_t, size_t, int (*)(const void *, const void *) __attribute__((cdecl))) __attribute__((cdecl))':'void (void *, size_t, size_t, int (*)(const void *, const void *) __attribute__((cdecl)))'
| |-ParmVarDecl 0x212ff6a8ed8 <col:84, col:91> col:91 _Base 'void *'
| |-ParmVarDecl 0x212ff6a8f50 <line:453:14, col:21> col:21 _NumOfElements 'size_t':'unsigned long long'
| |-ParmVarDecl 0x212ff6a8fc8 <col:42, col:49> col:49 _SizeOfElements 'size_t':'unsigned long long'
| `-ParmVarDecl 0x212ff6a91a8 <line:454:14, col:29> col:29 _PtFuncCompare 'int (*)(const void *, const void *) __attribute__((cdecl))'
|-FunctionDecl 0x212ff6a95f8 <line:456:47> col:47 implicit _byteswap_ushort 'unsigned short (unsigned short)' extern
| |-ParmVarDecl 0x212ff6a9698 <<invalid sloc>> <invalid sloc> 'unsigned short'
| |-NoThrowAttr 0x212ff6a9708 <col:47> Implicit
| `-ConstAttr 0x212ff6a9760 <col:47> Implicit
|-FunctionDecl 0x212ff6a9788 prev 0x212ff6a95f8 <col:24, col:90> col:47 _byteswap_ushort 'unsigned short (unsigned short)'
| |-ParmVarDecl 0x212ff6a9498 <col:69, col:84> col:84 _Short 'unsigned short'
| |-NoThrowAttr 0x212ff6a9878 <col:47> Inherited Implicit
| `-ConstAttr 0x212ff6a98a0 <col:47> Inherited Implicit
|-FunctionDecl 0x212ff6a9a28 <line:457:47> col:47 implicit _byteswap_ulong 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x212ff6a9ac8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x212ff6a9b38 <col:47> Implicit
| `-ConstAttr 0x212ff6a9b90 <col:47> Implicit
|-FunctionDecl 0x212ff6a9bb8 prev 0x212ff6a9a28 <col:24, col:88> col:47 _byteswap_ulong 'unsigned long (unsigned long)'
| |-ParmVarDecl 0x212ff6a98e0 <col:69, col:83> col:83 _Long 'unsigned long'
| |-NoThrowAttr 0x212ff6a9ca8 <col:47> Inherited Implicit
| `-ConstAttr 0x212ff6a9cd0 <col:47> Inherited Implicit
|-FunctionDecl 0x212ff6a9e58 <line:458:49> col:49 implicit _byteswap_uint64 'unsigned long long (unsigned long long)' extern
| |-ParmVarDecl 0x212ff6a9ef8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-NoThrowAttr 0x212ff6a9f68 <col:49> Implicit
| `-ConstAttr 0x212ff6a9fc0 <col:49> Implicit
|-FunctionDecl 0x212ff6a9fe8 prev 0x212ff6a9e58 <col:24, col:94> col:49 _byteswap_uint64 'unsigned long long (unsigned long long)'
| |-ParmVarDecl 0x212ff6a9d10 <col:71, col:88> col:88 _Int64 'unsigned long long'
| |-NoThrowAttr 0x212ff6aa0d8 <col:49> Inherited Implicit
| `-ConstAttr 0x212ff6aa100 <col:49> Inherited Implicit
|-FunctionDecl 0x212ff6aa388 <line:459:24, col:85> col:39 div 'div_t (int, int) __attribute__((cdecl))':'div_t (int, int)'
| |-ParmVarDecl 0x212ff6aa168 <col:48, col:52> col:52 _Numerator 'int'
| `-ParmVarDecl 0x212ff6aa1e8 <col:69, col:73> col:73 _Denominator 'int'
|-FunctionDecl 0x212ff6a66a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:462:109> col:74 getenv 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x212ff6a6560 <col:88, col:101> col:101 _VarName 'const char *'
| `-DeprecatedAttr 0x212ff6a6750 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _dupenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x212ff6a6c68 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:464:28, col:177> col:44 getenv_s 'errno_t (size_t *, char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (size_t *, char *, rsize_t, const char *)'
| |-ParmVarDecl 0x212ff6a68e8 <col:59, col:68> col:68 _ReturnSize 'size_t *'
| |-ParmVarDecl 0x212ff6a6968 <col:110, col:117> col:117 _DstBuf 'char *'
| |-ParmVarDecl 0x212ff6a69e0 <col:131, col:139> col:139 _DstSize 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x212ff6a6a60 <col:156, col:169> col:169 _VarName 'const char *'
|-FunctionDecl 0x212ff6a7020 <line:472:28, col:212> col:44 _dupenv_s 'errno_t (char **, size_t *, const char *) __attribute__((cdecl))':'errno_t (char **, size_t *, const char *)'
| |-ParmVarDecl 0x212ff6a6d58 <col:127, col:134> col:134 _PBuffer 'char **'
| |-ParmVarDecl 0x212ff6a6dd0 <col:154, col:163> col:163 _PBufferSizeInBytes 'size_t *'
| `-ParmVarDecl 0x212ff6a6e50 <col:191, col:204> col:204 _VarName 'const char *'
|-FunctionDecl 0x212ff6a7488 <line:479:28, col:141> col:44 _itoa_s 'errno_t (int, char *, size_t, int) __attribute__((cdecl))':'errno_t (int, char *, size_t, int)'
| |-ParmVarDecl 0x212ff6a7108 <col:57, col:61> col:61 _Value 'int'
| |-ParmVarDecl 0x212ff6a7188 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x212ff6a7200 <col:112, col:119> col:119 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x212ff6a7280 <col:131, col:135> col:135 _Radix 'int'
|-FunctionDecl 0x212ff6a7918 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:481:79 _itoa 'char *(int, char *, int) __attribute__((cdecl))':'char *(int, char *, int)'
| |-ParmVarDecl 0x212ff6a7680 <col:91, col:96> col:96 _Value 'int'
| |-ParmVarDecl 0x212ff6a7700 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x212ff6a7780 <col:146, col:151> col:151 _Radix 'int'
| `-DeprecatedAttr 0x212ff6a79d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _itoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x212ff6a7e98 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:482:28, col:145> col:44 _i64toa_s 'errno_t (long long, char *, size_t, int) __attribute__((cdecl))':'errno_t (long long, char *, size_t, int)'
| |-ParmVarDecl 0x212ff6a7b18 <col:59, col:67> col:67 _Val 'long long'
| |-ParmVarDecl 0x212ff6a7b98 <col:95, col:102> col:102 _DstBuf 'char *'
| |-ParmVarDecl 0x212ff6a7c10 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x212ff6a7c90 <col:135, col:139> col:139 _Radix 'int'
|-FunctionDecl 0x212ff6a82e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:483:140> col:59 _i64toa 'char *(long long, char *, int) __attribute__((cdecl))':'char *(long long, char *, int)'
| |-ParmVarDecl 0x212ff6a8048 <col:72, col:80> col:80 _Val 'long long'
| |-ParmVarDecl 0x212ff6a80c8 <col:109, col:116> col:116 _DstBuf 'char *'
| |-ParmVarDecl 0x212ff6a8148 <col:130, col:134> col:134 _Radix 'int'
| `-DeprecatedAttr 0x212ff6a83a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _i64toa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x212ff6b08f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:484:28, col:155> col:44 _ui64toa_s 'errno_t (unsigned long long, char *, size_t, int) __attribute__((cdecl))':'errno_t (unsigned long long, char *, size_t, int)'
| |-ParmVarDecl 0x212ff6a84e8 <col:60, col:77> col:77 _Val 'unsigned long long'
| |-ParmVarDecl 0x212ff6b0600 <col:105, col:112> col:112 _DstBuf 'char *'
| |-ParmVarDecl 0x212ff6b0678 <col:126, col:133> col:133 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x212ff6b06f8 <col:145, col:149> col:149 _Radix 'int'
|-FunctionDecl 0x212ff6b0d48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:485:151> col:60 _ui64toa 'char *(unsigned long long, char *, int) __attribute__((cdecl))':'char *(unsigned long long, char *, int)'
| |-ParmVarDecl 0x212ff6b0aa8 <col:74, col:91> col:91 _Val 'unsigned long long'
| |-ParmVarDecl 0x212ff6b0b28 <col:120, col:127> col:127 _DstBuf 'char *'
| |-ParmVarDecl 0x212ff6b0ba8 <col:141, col:145> col:145 _Radix 'int'
| `-DeprecatedAttr 0x212ff6b0e00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ui64toa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x212ff6b1028 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:486:24, col:75> col:40 _atoi64 'long long (const char *) __attribute__((cdecl))':'long long (const char *)'
| `-ParmVarDecl 0x212ff6b0f48 <col:55, col:68> col:68 _String 'const char *'
|-FunctionDecl 0x212ff6b1278 <line:487:24, col:105> col:40 _atoi64_l 'long long (const char *, _locale_t) __attribute__((cdecl))':'long long (const char *, _locale_t)'
| |-ParmVarDecl 0x212ff6b1100 <col:57, col:70> col:70 _String 'const char *'
| `-ParmVarDecl 0x212ff6b1178 <col:88, col:98> col:98 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x212ff6ac5c0 <line:488:24, col:136> col:40 _strtoi64 'long long (const char *, char **, int) __attribute__((cdecl))':'long long (const char *, char **, int)'
| |-ParmVarDecl 0x212ff6b1358 <col:57, col:70> col:70 _String 'const char *'
| |-ParmVarDecl 0x212ff6b13d8 <col:104, col:112> col:112 _EndPtr 'char **'
| `-ParmVarDecl 0x212ff6b1458 <col:126, col:130> col:130 _Radix 'int'
|-FunctionDecl 0x212ff6aca30 <line:489:24, col:166> col:40 _strtoi64_l 'long long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'long long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x212ff6ac6a8 <col:59, col:72> col:72 _String 'const char *'
| |-ParmVarDecl 0x212ff6ac728 <col:106, col:114> col:114 _EndPtr 'char **'
| |-ParmVarDecl 0x212ff6ac7a8 <col:128, col:132> col:132 _Radix 'int'
| `-ParmVarDecl 0x212ff6ac820 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x212ff6acdb8 <line:490:24, col:146> col:49 _strtoui64 'unsigned long long (const char *, char **, int) __attribute__((cdecl))':'unsigned long long (const char *, char **, int)'
| |-ParmVarDecl 0x212ff6acb20 <col:67, col:80> col:80 _String 'const char *'
| |-ParmVarDecl 0x212ff6acba0 <col:114, col:122> col:122 _EndPtr 'char **'
| `-ParmVarDecl 0x212ff6acc20 <col:136, col:140> col:140 _Radix 'int'
|-FunctionDecl 0x212ff6ad220 <line:491:24, col:177> col:49 _strtoui64_l 'unsigned long long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'unsigned long long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x212ff6acea0 <col:69, col:82> col:82 _String 'const char *'
| |-ParmVarDecl 0x212ff6acf20 <col:116, col:124> col:124 _EndPtr 'char **'
| |-ParmVarDecl 0x212ff6acfa0 <col:138, col:143> col:143 _Radix 'int'
| `-ParmVarDecl 0x212ff6ad018 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x212ff6b1610 <line:492:24, col:88> col:39 ldiv 'ldiv_t (long, long) __attribute__((cdecl))':'ldiv_t (long, long)'
| |-ParmVarDecl 0x212ff6ad338 <col:49, col:54> col:54 _Numerator 'long'
| `-ParmVarDecl 0x212ff6ad3b8 <col:71, col:76> col:76 _Denominator 'long'
|-FunctionDecl 0x212ff6b1938 <line:493:24, col:100> col:40 lldiv 'lldiv_t (long long, long long) __attribute__((cdecl))':'lldiv_t (long long, long long)'
| |-ParmVarDecl 0x212ff6b1718 <col:51, col:61> col:61 _Numerator 'long long'
| `-ParmVarDecl 0x212ff6b1798 <col:78, col:88> col:88 _Denominator 'long long'
|-FunctionDecl 0x212ff6b1d98 <line:515:28, col:140> col:44 _ltoa_s 'errno_t (long, char *, size_t, int) __attribute__((cdecl))':'errno_t (long, char *, size_t, int)'
| |-ParmVarDecl 0x212ff6b1a18 <col:57, col:62> col:62 _Val 'long'
| |-ParmVarDecl 0x212ff6b1a98 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x212ff6b1b10 <col:111, col:118> col:118 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x212ff6b1b90 <col:130, col:134> col:134 _Radix 'int'
|-FunctionDecl 0x212ff6b21e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:517:79 _ltoa 'char *(long, char *, int) __attribute__((cdecl))':'char *(long, char *, int)'
| |-ParmVarDecl 0x212ff6b1f48 <col:91, col:97> col:97 _Value 'long'
| |-ParmVarDecl 0x212ff6b1fc8 <col:129, col:135> col:135 _Dest 'char *'
| |-ParmVarDecl 0x212ff6b2048 <col:147, col:152> col:152 _Radix 'int'
| `-DeprecatedAttr 0x212ff6b22a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ltoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x212ff6aa5a0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:518:24, col:128> col:39 mblen 'int (const char *, size_t) __attribute__((cdecl))':'int (const char *, size_t)'
| |-ParmVarDecl 0x212ff6b23e8 <col:89, col:102> col:102 _Ch 'const char *'
| `-ParmVarDecl 0x212ff6b2460 <col:112, col:119> col:119 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x212ff6aa948 <line:519:24, col:159> col:39 _mblen_l 'int (const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x212ff6aa680 <col:92, col:105> col:105 _Ch 'const char *'
| |-ParmVarDecl 0x212ff6aa6f8 <col:115, col:122> col:122 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x212ff6aa770 <col:142, col:152> col:152 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x212ff6aaba0 <line:520:24, col:73> col:39 _mbstrlen 'size_t (const char *) __attribute__((cdecl))':'size_t (const char *)'
| `-ParmVarDecl 0x212ff6aaa30 <col:56, col:69> col:69 _Str 'const char *'
|-FunctionDecl 0x212ff6aae98 <line:521:24, col:102> col:39 _mbstrlen_l 'size_t (const char *, _locale_t) __attribute__((cdecl))':'size_t (const char *, _locale_t)'
| |-ParmVarDecl 0x212ff6aac78 <col:58, col:70> col:70 _Str 'const char *'
| `-ParmVarDecl 0x212ff6aacf0 <col:85, col:95> col:95 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x212ff6ab198 <line:522:24, col:96> col:39 _mbstrnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x212ff6aaf78 <col:57, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x212ff6aaff0 <col:80, col:87> col:87 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x212ff6af5f0 <line:523:24, col:126> col:39 _mbstrnlen_l 'size_t (const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x212ff6ab278 <col:59, col:71> col:71 _Str 'const char *'
| |-ParmVarDecl 0x212ff6ab2f0 <col:82, col:89> col:89 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x212ff6ab368 <col:109, col:119> col:119 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x212ff6af9a8 <line:524:9, col:170> col:24 mbtowc 'int (wchar_t *, const char *, size_t) __attribute__((cdecl))':'int (wchar_t *, const char *, size_t)'
| |-ParmVarDecl 0x212ff6af6d0 <col:54, col:64> col:64 _DstCh 'wchar_t *'
| |-ParmVarDecl 0x212ff6af750 <col:122, col:135> col:135 _SrcCh 'const char *'
| `-ParmVarDecl 0x212ff6af7c8 <col:148, col:155> col:155 _SrcSizeInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x212ff6afe00 <line:525:9, col:201> col:24 _mbtowc_l 'int (wchar_t *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (wchar_t *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x212ff6afa88 <col:57, col:67> col:67 _DstCh 'wchar_t *'
| |-ParmVarDecl 0x212ff6afb08 <col:125, col:138> col:138 _SrcCh 'const char *'
| |-ParmVarDecl 0x212ff6afb80 <col:151, col:158> col:158 _SrcSizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x212ff6afbf8 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x212ff6b0300 <line:526:28, col:271> col:44 mbstowcs_s 'errno_t (size_t *, wchar_t *, size_t, const char *, size_t) __attribute__((cdecl))':'errno_t (size_t *, wchar_t *, size_t, const char *, size_t)'
| |-ParmVarDecl 0x212ff6afee8 <col:65, col:74> col:74 _PtNumOfCharConverted 'size_t *'
| |-ParmVarDecl 0x212ff6aff60 <col:155, col:165> col:165 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x212ff6affd8 <col:179, col:186> col:186 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x212ff6b0058 <col:227, col:240> col:240 _SrcBuf 'const char *'
| `-ParmVarDecl 0x212ff6b00d0 <col:254, col:261> col:261 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x212ff6ae7b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2007:144> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:528:56 mbstowcs 'size_t (wchar_t *, const char *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const char *, size_t)'
| |-ParmVarDecl 0x212ff6b04b0 <col:97, col:106> col:106 _Dest 'wchar_t *'
| |-ParmVarDecl 0x212ff6b0530 <col:120, col:134> col:134 _Source 'const char *'
| |-ParmVarDecl 0x212ff6ae5e0 <col:148, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x212ff6ae868 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using mbstowcs_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x212ff6aee68 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:530:28, col:301> col:44 _mbstowcs_s_l 'errno_t (size_t *, wchar_t *, size_t, const char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (size_t *, wchar_t *, size_t, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x212ff6ae9a8 <col:68, col:77> col:77 _PtNumOfCharConverted 'size_t *'
| |-ParmVarDecl 0x212ff6aea20 <col:158, col:168> col:168 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x212ff6aea98 <col:182, col:189> col:189 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x212ff6aeb18 <col:230, col:243> col:243 _SrcBuf 'const char *'
| |-ParmVarDecl 0x212ff6aeb90 <col:257, col:264> col:264 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x212ff6aec08 <col:284, col:294> col:294 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x212ff6af3c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2010:160> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:532:59 _mbstowcs_l 'size_t (wchar_t *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x212ff6af058 <col:149, col:158> col:158 _Dest 'wchar_t *'
| |-ParmVarDecl 0x212ff6af0d8 <col:172, col:186> col:186 _Source 'const char *'
| |-ParmVarDecl 0x212ff6af150 <col:200, col:208> col:208 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x212ff6af1c8 <col:228, col:239> col:239 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x212ff6af488 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _mbstowcs_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x212ff6b26e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:534:24, col:48> col:39 rand 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x212ff6b2890 <line:539:28, col:73> col:43 _set_error_mode 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x212ff6b27b0 <col:64, col:68> col:68 _Mode 'int'
|-FunctionDecl 0x212ff6b2ab0 <line:541:9, col:53> col:24 srand 'void (unsigned int) __attribute__((cdecl))':'void (unsigned int)'
| `-ParmVarDecl 0x212ff6b2968 <col:35, col:48> col:48 _Seed 'unsigned int'
|-FunctionDecl 0x212ff6b2d70 <line:542:39> col:39 implicit strtod 'double (const char *, char **)' extern
| |-ParmVarDecl 0x212ff6b2e10 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x212ff6b2e78 <<invalid sloc>> <invalid sloc> 'char **'
|-FunctionDecl 0x212ff6b2ef0 prev 0x212ff6b2d70 <col:24, col:112> col:39 strtod 'double (const char *, char **)'
| |-ParmVarDecl 0x212ff6b2b88 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x212ff6b2c08 <col:97, col:105> col:105 _EndPtr 'char **'
|-FunctionDecl 0x212ff6b32a8 <line:543:24, col:143> col:39 _strtod_l 'double (const char *, char **, _locale_t) __attribute__((cdecl))':'double (const char *, char **, _locale_t)'
| |-ParmVarDecl 0x212ff6b2fd0 <col:56, col:69> col:69 _Str 'const char *'
| |-ParmVarDecl 0x212ff6b3050 <col:100, col:108> col:108 _EndPtr 'char **'
| `-ParmVarDecl 0x212ff6b30c8 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x212ff6b3678 <line:544:39> col:39 implicit strtol 'long (const char *, char **, int)' extern
| |-ParmVarDecl 0x212ff6b3718 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x212ff6b3780 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x212ff6b37e8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x212ff6b3868 prev 0x212ff6b3678 <col:24, col:130> col:39 strtol 'long (const char *, char **, int)'
| |-ParmVarDecl 0x212ff6b3390 <col:53, col:66> col:66 _Str 'const char *'
| |-ParmVarDecl 0x212ff6b3410 <col:97, col:105> col:105 _EndPtr 'char **'
| `-ParmVarDecl 0x212ff6b3490 <col:119, col:123> col:123 _Radix 'int'
|-FunctionDecl 0x212ff6b3cd0 <line:545:24, col:158> col:39 _strtol_l 'long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x212ff6b3950 <col:56, col:68> col:68 _Str 'const char *'
| |-ParmVarDecl 0x212ff6b39d0 <col:99, col:106> col:106 _EndPtr 'char **'
| |-ParmVarDecl 0x212ff6b3a50 <col:120, col:124> col:124 _Radix 'int'
| `-ParmVarDecl 0x212ff6b3ac8 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x212ff6b3fe0 <line:546:43> col:43 implicit strtoll 'long long (const char *, char **, int)' extern
| |-ParmVarDecl 0x212ff6b4080 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x212ff6b40e8 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x212ff6b4150 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x212ff6b41d0 prev 0x212ff6b3fe0 <col:24, col:135> col:43 strtoll 'long long (const char *, char **, int)'
| |-ParmVarDecl 0x212ff6b3dc0 <col:58, col:71> col:71 _Str 'const char *'
| |-ParmVarDecl 0x212ff6b3e40 <col:102, col:110> col:110 _EndPtr 'char **'
| `-ParmVarDecl 0x212ff6b3ec0 <col:124, col:128> col:128 _Radix 'int'
|-FunctionDecl 0x212ff6b4570 <line:547:24, col:166> col:43 _strtoll_l 'long long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'long long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x212ff6b42b8 <col:61, col:74> col:74 _Str 'const char *'
| |-ParmVarDecl 0x212ff6b4338 <col:105, col:113> col:113 _EndPtr 'char **'
| |-ParmVarDecl 0x212ff6b43b8 <col:127, col:131> col:131 _Radix 'int'
| `-ParmVarDecl 0x212ff6b4430 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x212ff6b4908 <line:548:46> col:46 implicit strtoul 'unsigned long (const char *, char **, int)' extern
| |-ParmVarDecl 0x212ff6b49a8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x212ff6b4a10 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x212ff6b4a78 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x212ff6b4af8 prev 0x212ff6b4908 <col:24, col:137> col:46 strtoul 'unsigned long (const char *, char **, int)'
| |-ParmVarDecl 0x212ff6b4670 <col:61, col:74> col:74 _Str 'const char *'
| |-ParmVarDecl 0x212ff6b46f0 <col:105, col:113> col:113 _EndPtr 'char **'
| `-ParmVarDecl 0x212ff6b4770 <col:127, col:131> col:131 _Radix 'int'
|-FunctionDecl 0x212ff6b4f60 <line:549:24, col:160> col:46 _strtoul_l 'unsigned long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'unsigned long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x212ff6b4be0 <col:57, col:70> col:70 _Str 'const char *'
| |-ParmVarDecl 0x212ff6b4c60 <col:101, col:108> col:108 _EndPtr 'char **'
| |-ParmVarDecl 0x212ff6b4ce0 <col:122, col:126> col:126 _Radix 'int'
| `-ParmVarDecl 0x212ff6b4d58 <col:143, col:153> col:153 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x212ff6b5270 <line:550:51> col:51 implicit strtoull 'unsigned long long (const char *, char **, int)' extern
| |-ParmVarDecl 0x212ff6b5310 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x212ff6b5378 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x212ff6b53e0 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x212ff6b5460 prev 0x212ff6b5270 <col:24, col:143> col:51 strtoull 'unsigned long long (const char *, char **, int)'
| |-ParmVarDecl 0x212ff6b5050 <col:67, col:80> col:80 _Str 'const char *'
| |-ParmVarDecl 0x212ff6b50d0 <col:111, col:119> col:119 _EndPtr 'char **'
| `-ParmVarDecl 0x212ff6b5150 <col:133, col:137> col:137 _Radix 'int'
|-FunctionDecl 0x212ff6ad7a0 <line:551:24, col:174> col:51 _strtoull_l 'unsigned long long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'unsigned long long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x212ff6b5548 <col:70, col:83> col:83 _Str 'const char *'
| |-ParmVarDecl 0x212ff6b55c8 <col:114, col:122> col:122 _EndPtr 'char **'
| |-ParmVarDecl 0x212ff6ad5e8 <col:136, col:140> col:140 _Radix 'int'
| `-ParmVarDecl 0x212ff6ad660 <col:157, col:167> col:167 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x212ff6ada80 <line:552:44> col:44 implicit strtold 'long double (const char *, char **)' extern
| |-ParmVarDecl 0x212ff6adb20 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x212ff6adb88 <<invalid sloc>> <invalid sloc> 'char **'
|-FunctionDecl 0x212ff6adc00 prev 0x212ff6ada80 <col:24, col:118> col:44 strtold 'long double (const char *, char **)'
| |-ParmVarDecl 0x212ff6ad890 <col:59, col:72> col:72 _Str 'const char *'
| `-ParmVarDecl 0x212ff6ad910 <col:103, col:111> col:111 _EndPtr 'char **'
|-FunctionDecl 0x212ff6adfb8 <line:553:24, col:149> col:44 _strtold_l 'long double (const char *, char **, _locale_t) __attribute__((cdecl))':'long double (const char *, char **, _locale_t)'
| |-ParmVarDecl 0x212ff6adce0 <col:62, col:75> col:75 _Str 'const char *'
| |-ParmVarDecl 0x212ff6add60 <col:106, col:114> col:114 _EndPtr 'char **'
| `-ParmVarDecl 0x212ff6addd8 <col:132, col:142> col:142 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x212ff6ae290 <line:554:38> col:38 implicit strtof 'float (const char *, char **)' extern
| |-ParmVarDecl 0x212ff6ae330 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x212ff6ae398 <<invalid sloc>> <invalid sloc> 'char **'
|-FunctionDecl 0x212ff6ae410 prev 0x212ff6ae290 <col:24, col:111> col:38 strtof 'float (const char *, char **)'
| |-ParmVarDecl 0x212ff6ae0a0 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x212ff6ae120 <col:96, col:104> col:104 _EndPtr 'char **'
|-FunctionDecl 0x212ff6b98e8 <line:555:24, col:142> col:38 _strtof_l 'float (const char *, char **, _locale_t) __attribute__((cdecl))':'float (const char *, char **, _locale_t)'
| |-ParmVarDecl 0x212ff6ae4f0 <col:55, col:68> col:68 _Str 'const char *'
| |-ParmVarDecl 0x212ff6b9690 <col:99, col:107> col:107 _EndPtr 'char **'
| `-ParmVarDecl 0x212ff6b9708 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x212ff6b9ab0 <line:560:9, col:60> col:21 system 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x212ff6b99d0 <col:39, col:52> col:52 _Command 'const char *'
|-FunctionDecl 0x212ff6b9f08 <line:564:28, col:150> col:44 _ultoa_s 'errno_t (unsigned long, char *, size_t, int) __attribute__((cdecl))':'errno_t (unsigned long, char *, size_t, int)'
| |-ParmVarDecl 0x212ff6b9b88 <col:58, col:72> col:72 _Val 'unsigned long'
| |-ParmVarDecl 0x212ff6b9c08 <col:100, col:107> col:107 _DstBuf 'char *'
| |-ParmVarDecl 0x212ff6b9c80 <col:121, col:128> col:128 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x212ff6b9d00 <col:140, col:144> col:144 _Radix 'int'
|-FunctionDecl 0x212ff6ba358 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:566:79 _ultoa 'char *(unsigned long, char *, int) __attribute__((cdecl))':'char *(unsigned long, char *, int)'
| |-ParmVarDecl 0x212ff6ba0b8 <col:92, col:107> col:107 _Value 'unsigned long'
| |-ParmVarDecl 0x212ff6ba138 <col:139, col:145> col:145 _Dest 'char *'
| |-ParmVarDecl 0x212ff6ba1b8 <col:157, col:162> col:162 _Radix 'int'
| `-DeprecatedAttr 0x212ff6ba410 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ultoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x212ff6ba850 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:567:127> col:58 wctomb 'int (char *, wchar_t) __attribute__((cdecl))':'int (char *, wchar_t)'
| |-ParmVarDecl 0x212ff6ba618 <col:96, col:103> col:103 _MbCh 'char *'
| |-ParmVarDecl 0x212ff6ba6a0 <col:115, col:123> col:123 _WCh 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x212ff6ba900 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wctomb_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x212ff6badd8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:568:155> col:61 _wctomb_l 'int (char *, wchar_t, _locale_t) __attribute__((cdecl))':'int (char *, wchar_t, _locale_t)'
| |-ParmVarDecl 0x212ff6bab08 <col:96, col:103> col:103 _MbCh 'char *'
| |-ParmVarDecl 0x212ff6bab80 <col:115, col:123> col:123 _WCh 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x212ff6babf8 <col:138, col:148> col:148 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x212ff6bae90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wctomb_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x212ff6bb348 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:570:28, col:200> col:44 wctomb_s 'errno_t (int *, char *, rsize_t, wchar_t) __attribute__((cdecl))':'errno_t (int *, char *, rsize_t, wchar_t)'
| |-ParmVarDecl 0x212ff6bafd8 <col:63, col:69> col:69 _SizeConverted 'int *'
| |-ParmVarDecl 0x212ff6bb058 <col:142, col:149> col:149 _MbCh 'char *'
| |-ParmVarDecl 0x212ff6bb0d0 <col:161, col:169> col:169 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x212ff6bb148 <col:188, col:196> col:196 _WCh 'wchar_t':'unsigned short'
|-FunctionDecl 0x212ff6b8830 <line:572:28, col:206> col:44 _wctomb_s_l 'errno_t (int *, char *, size_t, wchar_t, _locale_t) __attribute__((cdecl))':'errno_t (int *, char *, size_t, wchar_t, _locale_t)'
| |-ParmVarDecl 0x212ff6bb438 <col:66, col:72> col:72 _SizeConverted 'int *'
| |-ParmVarDecl 0x212ff6bb4b8 <col:121, col:128> col:128 _MbCh 'char *'
| |-ParmVarDecl 0x212ff6bb530 <col:140, col:147> col:147 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x212ff6bb5a8 <col:166, col:174> col:174 _WCh 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x212ff6bb620 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x212ff6b8d40 <line:573:28, col:263> col:44 wcstombs_s 'errno_t (size_t *, char *, size_t, const wchar_t *, size_t) __attribute__((cdecl))':'errno_t (size_t *, char *, size_t, const wchar_t *, size_t)'
| |-ParmVarDecl 0x212ff6b8920 <col:65, col:74> col:74 _PtNumOfCharConverted 'size_t *'
| |-ParmVarDecl 0x212ff6b89a0 <col:164, col:171> col:171 _Dst 'char *'
| |-ParmVarDecl 0x212ff6b8a18 <col:182, col:189> col:189 _DstSizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x212ff6b8a90 <col:213, col:229> col:229 _Src 'const wchar_t *'
| `-ParmVarDecl 0x212ff6b8b08 <col:240, col:247> col:247 _MaxCountInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x212ff6b91c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2007:144> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:575:56 wcstombs 'size_t (char *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (char *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x212ff6b8ef8 <col:97, col:103> col:103 _Dest 'char *'
| |-ParmVarDecl 0x212ff6b8f70 <col:117, col:134> col:134 _Source 'const wchar_t *'
| |-ParmVarDecl 0x212ff6b8fe8 <col:148, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x212ff6b9278 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstombs_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x212ff6bb8a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:576:28, col:294> col:44 _wcstombs_s_l 'errno_t (size_t *, char *, size_t, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (size_t *, char *, size_t, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x212ff6b93b8 <col:68, col:77> col:77 _PtNumOfCharConverted 'size_t *'
| |-ParmVarDecl 0x212ff6b9438 <col:167, col:174> col:174 _Dst 'char *'
| |-ParmVarDecl 0x212ff6b94b0 <col:185, col:192> col:192 _DstSizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x212ff6b9528 <col:216, col:232> col:232 _Src 'const wchar_t *'
| |-ParmVarDecl 0x212ff6b95a0 <col:243, col:250> col:250 _MaxCountInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x212ff6b9618 <col:277, col:287> col:287 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x212ff6bbdd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2010:160> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:578:59 _wcstombs_l 'size_t (char *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x212ff6bba68 <col:146, col:152> col:152 _Dest 'char *'
| |-ParmVarDecl 0x212ff6bbae0 <col:166, col:183> col:183 _Source 'const wchar_t *'
| |-ParmVarDecl 0x212ff6bbb58 <col:197, col:205> col:205 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x212ff6bbbd0 <col:225, col:236> col:236 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x212ff6bbe98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcstombs_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x212ff6bc200 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:640:142> col:142 implicit calloc 'void *(unsigned long long, unsigned long long)' extern
| |-ParmVarDecl 0x212ff6bc2a0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x212ff6bc308 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x212ff6bc380 prev 0x212ff6bc200 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:640:224> col:142 calloc 'void *(unsigned long long, unsigned long long)'
| |-ParmVarDecl 0x212ff6bbfd8 <col:173, col:180> col:180 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x212ff6bc050 <col:212, col:219> col:219 _Size 'size_t':'unsigned long long'
| |-NoAliasAttr 0x212ff6bc430 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x212ff6bc488 <line:615:33> restrict
|-FunctionDecl 0x212ff6b6660 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:641:182> col:132 free 'void (void *) __attribute__((cdecl))':'void (void *)'
| |-ParmVarDecl 0x212ff6bc4e0 <col:168, col:175> col:175 _Memory 'void *'
| `-NoAliasAttr 0x212ff6b6708 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
|-FunctionDecl 0x212ff6b6908 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:642:161> col:161 implicit malloc 'void *(unsigned long long)' extern
| `-ParmVarDecl 0x212ff6b69a8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x212ff6b6a18 prev 0x212ff6b6908 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:642:204> col:161 malloc 'void *(unsigned long long)'
| |-ParmVarDecl 0x212ff6b6788 <col:192, col:199> col:199 _Size 'size_t':'unsigned long long'
| |-NoAliasAttr 0x212ff6b6ac0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x212ff6b6b18 <line:615:33> restrict
|-FunctionDecl 0x212ff6b6d90 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:644:142> col:142 implicit realloc 'void *(void *, unsigned long long)' extern
| |-ParmVarDecl 0x212ff6b6e30 <<invalid sloc>> <invalid sloc> 'void *'
| `-ParmVarDecl 0x212ff6b6e98 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x212ff6b6f10 prev 0x212ff6b6d90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:644:236> col:142 realloc 'void *(void *, unsigned long long)'
| |-ParmVarDecl 0x212ff6b6b70 <col:181, col:188> col:188 _Memory 'void *'
| |-ParmVarDecl 0x212ff6b6be8 <col:221, col:228> col:228 _NewSize 'size_t':'unsigned long long'
| |-NoAliasAttr 0x212ff6b6fc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x212ff6b7018 <line:615:33> restrict
|-FunctionDecl 0x212ff6b7338 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:646:274> col:142 _recalloc 'void *(void *, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t)'
| |-ParmVarDecl 0x212ff6b7070 <col:183, col:190> col:190 _Memory 'void *'
| |-ParmVarDecl 0x212ff6b70e8 <col:223, col:230> col:230 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x212ff6b7160 <col:262, col:269> col:269 _Size 'size_t':'unsigned long long'
| |-NoAliasAttr 0x212ff6b73f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x212ff6b7448 <line:615:33> restrict
|-FunctionDecl 0x212ff6b7578 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:647:191> col:132 _aligned_free 'void (void *) __attribute__((cdecl))':'void (void *)'
| |-ParmVarDecl 0x212ff6b74a0 <col:177, col:184> col:184 _Memory 'void *'
| `-NoAliasAttr 0x212ff6b7620 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
|-FunctionDecl 0x212ff6bd8a0 <col:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:648:218> col:142 _aligned_malloc 'void *(size_t, size_t) __attribute__((cdecl))':'void *(size_t, size_t)'
| |-ParmVarDecl 0x212ff6bd728 <col:182, col:189> col:189 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x212ff6bd7a0 <col:201, col:208> col:208 _Alignment 'size_t':'unsigned long long'
| |-NoAliasAttr 0x212ff6bd950 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x212ff6bd9a8 <line:615:33> restrict
|-FunctionDecl 0x212ff6bdcc8 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:649:246> col:142 _aligned_offset_malloc 'void *(size_t, size_t, size_t) __attribute__((cdecl))':'void *(size_t, size_t, size_t)'
| |-ParmVarDecl 0x212ff6bd9f8 <col:189, col:196> col:196 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x212ff6bda70 <col:208, col:215> col:215 _Alignment 'size_t':'unsigned long long'
| |-ParmVarDecl 0x212ff6bdae8 <col:232, col:239> col:239 _Offset 'size_t':'unsigned long long'
| |-NoAliasAttr 0x212ff6bdd80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x212ff6bddd8 <line:615:33> restrict
|-FunctionDecl 0x212ff6be040 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:651:272> col:145 _aligned_realloc 'void *(void *, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t)'
| |-ParmVarDecl 0x212ff6bde30 <col:193, col:200> col:200 _Memory 'void *'
| |-ParmVarDecl 0x212ff6bdea8 <col:233, col:240> col:240 _NewSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x212ff6bdf20 <col:255, col:262> col:262 _Alignment 'size_t':'unsigned long long'
| |-NoAliasAttr 0x212ff6be0f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x212ff6be150 <line:615:33> restrict
|-FunctionDecl 0x212ff6be520 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:653:306> col:142 _aligned_recalloc 'void *(void *, size_t, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t, size_t)'
| |-ParmVarDecl 0x212ff6be1a8 <col:191, col:198> col:198 _Memory 'void *'
| |-ParmVarDecl 0x212ff6be220 <col:231, col:238> col:238 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x212ff6be298 <col:270, col:277> col:277 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x212ff6be310 <col:289, col:296> col:296 _Alignment 'size_t':'unsigned long long'
| |-NoAliasAttr 0x212ff6be5e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x212ff6be638 <line:615:33> restrict
|-FunctionDecl 0x212ff6be988 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:655:300> col:145 _aligned_offset_realloc 'void *(void *, size_t, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t, size_t)'
| |-ParmVarDecl 0x212ff6be6e0 <col:200, col:207> col:207 _Memory 'void *'
| |-ParmVarDecl 0x212ff6be758 <col:240, col:247> col:247 _NewSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x212ff6be7d0 <col:262, col:269> col:269 _Alignment 'size_t':'unsigned long long'
| |-ParmVarDecl 0x212ff6be848 <col:286, col:293> col:293 _Offset 'size_t':'unsigned long long'
| |-NoAliasAttr 0x212ff6bea48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x212ff6beaa0 <line:615:33> restrict
|-FunctionDecl 0x212ff6bef18 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:657:334> col:142 _aligned_offset_recalloc 'void *(void *, size_t, size_t, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t, size_t, size_t)'
| |-ParmVarDecl 0x212ff6beaf8 <col:198, col:205> col:205 _Memory 'void *'
| |-ParmVarDecl 0x212ff6beb70 <col:238, col:245> col:245 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x212ff6bebe8 <col:277, col:284> col:284 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x212ff6bec60 <col:296, col:303> col:303 _Alignment 'size_t':'unsigned long long'
| |-ParmVarDecl 0x212ff6becd8 <col:320, col:327> col:327 _Offset 'size_t':'unsigned long long'
| |-NoAliasAttr 0x212ff6befe0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x212ff6bf038 <line:615:33> restrict
|-FunctionDecl 0x212ff6bf350 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:658:73, col:176> col:88 _aligned_msize 'size_t (void *, size_t, size_t) __attribute__((cdecl))':'size_t (void *, size_t, size_t)'
| |-ParmVarDecl 0x212ff6bf090 <col:117, col:124> col:124 _Memory 'void *'
| |-ParmVarDecl 0x212ff6bf108 <col:138, col:145> col:145 _Alignment 'size_t':'unsigned long long'
| `-ParmVarDecl 0x212ff6bf180 <col:162, col:169> col:169 _Offset 'size_t':'unsigned long long'
|-FunctionDecl 0x212ff6b7758 <line:685:28, col:157> col:44 _itow_s 'errno_t (int, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (int, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x212ff6bf438 <col:58, col:62> col:62 _Val 'int'
| |-ParmVarDecl 0x212ff6bf4b0 <col:97, col:107> col:107 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x212ff6bf528 <col:121, col:128> col:128 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x212ff6bf5a8 <col:147, col:151> col:151 _Radix 'int'
|-FunctionDecl 0x212ff6b7bd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:687:82 _itow 'wchar_t *(int, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(int, wchar_t *, int)'
| |-ParmVarDecl 0x212ff6b7908 <col:94, col:99> col:99 _Value 'int'
| |-ParmVarDecl 0x212ff6b7980 <col:131, col:140> col:140 _Dest 'wchar_t *'
| |-ParmVarDecl 0x212ff6b7a00 <col:152, col:157> col:157 _Radix 'int'
| `-DeprecatedAttr 0x212ff6b7c88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _itow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x212ff6b8148 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:688:28, col:158> col:44 _ltow_s 'errno_t (long, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (long, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x212ff6b7dd0 <col:58, col:63> col:63 _Val 'long'
| |-ParmVarDecl 0x212ff6b7e48 <col:98, col:108> col:108 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x212ff6b7ec0 <col:122, col:129> col:129 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x212ff6b7f40 <col:148, col:152> col:152 _Radix 'int'
|-FunctionDecl 0x212ff6b85c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:690:82 _ltow 'wchar_t *(long, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(long, wchar_t *, int)'
| |-ParmVarDecl 0x212ff6b82f8 <col:94, col:100> col:100 _Value 'long'
| |-ParmVarDecl 0x212ff6b8370 <col:132, col:141> col:141 _Dest 'wchar_t *'
| |-ParmVarDecl 0x212ff6b83f0 <col:153, col:158> col:158 _Radix 'int'
| `-DeprecatedAttr 0x212ff6c1728 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ltow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x212ff6c1be8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:691:28, col:168> col:44 _ultow_s 'errno_t (unsigned long, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (unsigned long, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x212ff6c1870 <col:59, col:73> col:73 _Val 'unsigned long'
| |-ParmVarDecl 0x212ff6c18e8 <col:108, col:118> col:118 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x212ff6c1960 <col:132, col:139> col:139 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x212ff6c19e0 <col:158, col:162> col:162 _Radix 'int'
|-FunctionDecl 0x212ff6c2060 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:693:82 _ultow 'wchar_t *(unsigned long, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(unsigned long, wchar_t *, int)'
| |-ParmVarDecl 0x212ff6c1d98 <col:95, col:110> col:110 _Value 'unsigned long'
| |-ParmVarDecl 0x212ff6c1e10 <col:142, col:151> col:151 _Dest 'wchar_t *'
| |-ParmVarDecl 0x212ff6c1e90 <col:163, col:168> col:168 _Radix 'int'
| `-DeprecatedAttr 0x212ff6c2118 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ultow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x212ff6c2480 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:694:24, col:118> col:39 wcstod 'double (const wchar_t *, wchar_t **) __attribute__((cdecl))':'double (const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x212ff6c2258 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x212ff6c22d8 <col:100, col:111> col:111 _EndPtr 'wchar_t **'
|-FunctionDecl 0x212ff6c3858 <line:695:24, col:148> col:39 _wcstod_l 'double (const wchar_t *, wchar_t **, _locale_t) __attribute__((cdecl))':'double (const wchar_t *, wchar_t **, _locale_t)'
| |-ParmVarDecl 0x212ff6c2558 <col:56, col:71> col:71 _Str 'const wchar_t *'
| |-ParmVarDecl 0x212ff6c25d8 <col:102, col:113> col:113 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x212ff6c2650 <col:131, col:141> col:141 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x212ff6c3c18 <line:696:24, col:129> col:39 wcstol 'long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x212ff6c3938 <col:53, col:68> col:68 _Str 'const wchar_t *'
| |-ParmVarDecl 0x212ff6c39b8 <col:99, col:110> col:110 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x212ff6c3a38 <col:119, col:123> col:123 _Radix 'int'
|-FunctionDecl 0x212ff6c4080 <line:697:24, col:159> col:39 _wcstol_l 'long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x212ff6c3cf8 <col:56, col:71> col:71 _Str 'const wchar_t *'
| |-ParmVarDecl 0x212ff6c3d78 <col:102, col:112> col:112 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x212ff6c3df8 <col:121, col:125> col:125 _Radix 'int'
| `-ParmVarDecl 0x212ff6c3e70 <col:142, col:152> col:152 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x212ff6c4448 <line:698:24, col:133> col:43 wcstoll 'long long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'long long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x212ff6c4168 <col:58, col:73> col:73 _Str 'const wchar_t *'
| |-ParmVarDecl 0x212ff6c41e8 <col:104, col:114> col:114 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x212ff6c4268 <col:123, col:127> col:127 _Radix 'int'
|-FunctionDecl 0x212ff6bf880 <line:699:24, col:164> col:43 _wcstoll_l 'long long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'long long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x212ff6c4528 <col:61, col:76> col:76 _Str 'const wchar_t *'
| |-ParmVarDecl 0x212ff6c45a8 <col:107, col:117> col:117 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x212ff6c4628 <col:126, col:130> col:130 _Radix 'int'
| `-ParmVarDecl 0x212ff6c46a0 <col:147, col:157> col:157 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x212ff6bfc48 <line:700:24, col:137> col:46 wcstoul 'unsigned long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'unsigned long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x212ff6bf968 <col:61, col:76> col:76 _Str 'const wchar_t *'
| |-ParmVarDecl 0x212ff6bf9e8 <col:107, col:118> col:118 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x212ff6bfa68 <col:127, col:131> col:131 _Radix 'int'
|-FunctionDecl 0x212ff6c00b0 <line:701:24, col:167> col:46 _wcstoul_l 'unsigned long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'unsigned long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x212ff6bfd28 <col:64, col:79> col:79 _Str 'const wchar_t *'
| |-ParmVarDecl 0x212ff6bfda8 <col:110, col:120> col:120 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x212ff6bfe28 <col:129, col:133> col:133 _Radix 'int'
| `-ParmVarDecl 0x212ff6bfea0 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x212ff6c0478 <line:702:24, col:143> col:51 wcstoull 'unsigned long long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'unsigned long long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x212ff6c0198 <col:67, col:82> col:82 _Str 'const wchar_t *'
| |-ParmVarDecl 0x212ff6c0218 <col:113, col:124> col:124 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x212ff6c0298 <col:133, col:137> col:137 _Radix 'int'
|-FunctionDecl 0x212ff6c2930 <line:703:24, col:174> col:51 _wcstoull_l 'unsigned long long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'unsigned long long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x212ff6c0558 <col:70, col:85> col:85 _Str 'const wchar_t *'
| |-ParmVarDecl 0x212ff6c05d8 <col:116, col:127> col:127 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x212ff6c0658 <col:136, col:140> col:140 _Radix 'int'
| `-ParmVarDecl 0x212ff6c2720 <col:157, col:167> col:167 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x212ff6c2c40 <line:704:24, col:124> col:44 wcstold 'long double (const wchar_t *, wchar_t **) __attribute__((cdecl))':'long double (const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x212ff6c2a18 <col:59, col:75> col:75 _Str 'const wchar_t *'
| `-ParmVarDecl 0x212ff6c2a98 <col:106, col:117> col:117 _EndPtr 'wchar_t **'
|-FunctionDecl 0x212ff6c2fe8 <line:705:24, col:155> col:44 _wcstold_l 'long double (const wchar_t *, wchar_t **, _locale_t) __attribute__((cdecl))':'long double (const wchar_t *, wchar_t **, _locale_t)'
| |-ParmVarDecl 0x212ff6c2d18 <col:62, col:78> col:78 _Str 'const wchar_t *'
| |-ParmVarDecl 0x212ff6c2d98 <col:109, col:120> col:120 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x212ff6c2e10 <col:138, col:148> col:148 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x212ff6c32f0 <line:706:24, col:117> col:38 wcstof 'float (const wchar_t *, wchar_t **) __attribute__((cdecl))':'float (const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x212ff6c30c8 <col:52, col:68> col:68 _Str 'const wchar_t *'
| `-ParmVarDecl 0x212ff6c3148 <col:99, col:110> col:110 _EndPtr 'wchar_t **'
|-FunctionDecl 0x212ff6c0700 <line:707:24, col:148> col:38 _wcstof_l 'float (const wchar_t *, wchar_t **, _locale_t) __attribute__((cdecl))':'float (const wchar_t *, wchar_t **, _locale_t)'
| |-ParmVarDecl 0x212ff6c33c8 <col:55, col:71> col:71 _Str 'const wchar_t *'
| |-ParmVarDecl 0x212ff6c3448 <col:102, col:113> col:113 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x212ff6c34c0 <col:131, col:141> col:141 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x212ff6c0a10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:711:118> col:78 _wgetenv 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x212ff6c08a0 <col:94, col:110> col:110 _VarName 'const wchar_t *'
| `-DeprecatedAttr 0x212ff6c0ab8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wdupenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x212ff6c0f68 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:712:28, col:198> col:44 _wgetenv_s 'errno_t (size_t *, wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (size_t *, wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x212ff6c0bf8 <col:61, col:70> col:70 _ReturnSize 'size_t *'
| |-ParmVarDecl 0x212ff6c0c70 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x212ff6c0ce8 <col:143, col:150> col:150 _DstSizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x212ff6c0d60 <col:174, col:190> col:190 _VarName 'const wchar_t *'
|-FunctionDecl 0x212ff6c1320 <line:720:28, col:214> col:44 _wdupenv_s 'errno_t (wchar_t **, size_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t **, size_t *, const wchar_t *)'
| |-ParmVarDecl 0x212ff6c1058 <col:127, col:137> col:137 _Buffer 'wchar_t **'
| |-ParmVarDecl 0x212ff6c10d0 <col:156, col:164> col:164 _BufferSizeInWords 'size_t *'
| `-ParmVarDecl 0x212ff6c1148 <col:191, col:206> col:206 _VarName 'const wchar_t *'
|-FunctionDecl 0x212ff6c1578 <line:728:9, col:65> col:21 _wsystem 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x212ff6c1400 <col:41, col:57> col:57 _Command 'const wchar_t *'
|-FunctionDecl 0x212ff6d5108 <line:733:24, col:71> col:39 _wtof 'double (const wchar_t *) __attribute__((cdecl))':'double (const wchar_t *)'
| `-ParmVarDecl 0x212ff6c1648 <col:52, col:67> col:67 _Str 'const wchar_t *'
|-FunctionDecl 0x212ff6d5400 <line:734:24, col:101> col:39 _wtof_l 'double (const wchar_t *, _locale_t) __attribute__((cdecl))':'double (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x212ff6d51d8 <col:54, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x212ff6d5250 <col:84, col:94> col:94 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x212ff6d55b8 <line:735:24, col:68> col:36 _wtoi 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x212ff6d54d8 <col:49, col:64> col:64 _Str 'const wchar_t *'
|-FunctionDecl 0x212ff6d58b0 <line:736:24, col:98> col:36 _wtoi_l 'int (const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x212ff6d5688 <col:51, col:66> col:66 _Str 'const wchar_t *'
| `-ParmVarDecl 0x212ff6d5700 <col:81, col:91> col:91 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x212ff6d5b08 <line:737:24, col:69> col:37 _wtol 'long (const wchar_t *) __attribute__((cdecl))':'long (const wchar_t *)'
| `-ParmVarDecl 0x212ff6d5988 <col:50, col:65> col:65 _Str 'const wchar_t *'
|-FunctionDecl 0x212ff6d5e00 <line:738:24, col:99> col:37 _wtol_l 'long (const wchar_t *, _locale_t) __attribute__((cdecl))':'long (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x212ff6d5bd8 <col:52, col:67> col:67 _Str 'const wchar_t *'
| `-ParmVarDecl 0x212ff6d5c50 <col:82, col:92> col:92 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x212ff6d6088 <line:739:24, col:75> col:42 _wtoll 'long long (const wchar_t *) __attribute__((cdecl))':'long long (const wchar_t *)'
| `-ParmVarDecl 0x212ff6d5ed8 <col:56, col:71> col:71 _Str 'const wchar_t *'
|-FunctionDecl 0x212ff6d6380 <line:740:24, col:105> col:42 _wtoll_l 'long long (const wchar_t *, _locale_t) __attribute__((cdecl))':'long long (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x212ff6d6158 <col:58, col:73> col:73 _Str 'const wchar_t *'
| `-ParmVarDecl 0x212ff6d61d0 <col:88, col:98> col:98 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x212ff6d67d8 <line:742:28, col:162> col:44 _i64tow_s 'errno_t (long long, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (long long, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x212ff6d6460 <col:59, col:67> col:67 _Val 'long long'
| |-ParmVarDecl 0x212ff6d64d8 <col:102, col:112> col:112 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x212ff6d6550 <col:126, col:133> col:133 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x212ff6d65d0 <col:152, col:156> col:156 _Radix 'int'
|-FunctionDecl 0x212ff6d6c50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:743:146> col:62 _i64tow 'wchar_t *(long long, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(long long, wchar_t *, int)'
| |-ParmVarDecl 0x212ff6d6988 <col:75, col:83> col:83 _Val 'long long'
| |-ParmVarDecl 0x212ff6d6a00 <col:112, col:122> col:122 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x212ff6d6a80 <col:136, col:140> col:140 _Radix 'int'
| `-DeprecatedAttr 0x212ff6d6d08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _i64tow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x212ff6d81f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:744:28, col:172> col:44 _ui64tow_s 'errno_t (unsigned long long, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (unsigned long long, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x212ff6d6e50 <col:60, col:77> col:77 _Val 'unsigned long long'
| |-ParmVarDecl 0x212ff6d6ec8 <col:112, col:122> col:122 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x212ff6d6f40 <col:136, col:143> col:143 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x212ff6d6fc0 <col:162, col:166> col:166 _Radix 'int'
|-FunctionDecl 0x212ff6d8670 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:745:157> col:63 _ui64tow 'wchar_t *(unsigned long long, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(unsigned long long, wchar_t *, int)'
| |-ParmVarDecl 0x212ff6d83a8 <col:77, col:94> col:94 _Val 'unsigned long long'
| |-ParmVarDecl 0x212ff6d8420 <col:123, col:133> col:133 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x212ff6d84a0 <col:147, col:151> col:151 _Radix 'int'
| `-DeprecatedAttr 0x212ff6d8728 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ui64tow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x212ff6d8948 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:746:24, col:76> col:42 _wtoi64 'long long (const wchar_t *) __attribute__((cdecl))':'long long (const wchar_t *)'
| `-ParmVarDecl 0x212ff6d8868 <col:57, col:72> col:72 _Str 'const wchar_t *'
|-FunctionDecl 0x212ff6d8b90 <line:747:24, col:106> col:42 _wtoi64_l 'long long (const wchar_t *, _locale_t) __attribute__((cdecl))':'long long (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x212ff6d8a18 <col:59, col:74> col:74 _Str 'const wchar_t *'
| `-ParmVarDecl 0x212ff6d8a90 <col:89, col:99> col:99 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x212ff6d8e88 <line:748:24, col:141> col:42 _wcstoi64 'long long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'long long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x212ff6d8c68 <col:59, col:75> col:75 _Str 'const wchar_t *'
| |-ParmVarDecl 0x212ff6d8ce8 <col:106, col:117> col:117 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x212ff6d8d68 <col:131, col:135> col:135 _Radix 'int'
|-FunctionDecl 0x212ff6d31d8 <line:749:24, col:171> col:42 _wcstoi64_l 'long long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'long long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x212ff6d8f68 <col:61, col:77> col:77 _Str 'const wchar_t *'
| |-ParmVarDecl 0x212ff6d8fe8 <col:108, col:119> col:119 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x212ff6d3020 <col:133, col:137> col:137 _Radix 'int'
| `-ParmVarDecl 0x212ff6d3098 <col:154, col:164> col:164 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x212ff6d34e0 <line:750:24, col:150> col:50 _wcstoui64 'unsigned long long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'unsigned long long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x212ff6d32c0 <col:68, col:84> col:84 _Str 'const wchar_t *'
| |-ParmVarDecl 0x212ff6d3340 <col:115, col:126> col:126 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x212ff6d33c0 <col:140, col:144> col:144 _Radix 'int'
|-FunctionDecl 0x212ff6d3878 <line:751:24, col:180> col:50 _wcstoui64_l 'unsigned long long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'unsigned long long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x212ff6d35c0 <col:70, col:85> col:85 _Str 'const wchar_t *'
| |-ParmVarDecl 0x212ff6d3640 <col:117, col:128> col:128 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x212ff6d36c0 <col:142, col:146> col:146 _Radix 'int'
| `-ParmVarDecl 0x212ff6d3738 <col:163, col:173> col:173 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x212ff6d3c38 <line:770:24, col:151> col:39 _fullpath 'char *(char *, const char *, size_t) __attribute__((cdecl))':'char *(char *, const char *, size_t)'
| |-ParmVarDecl 0x212ff6d3968 <col:82, col:89> col:89 _FullPath 'char *'
| |-ParmVarDecl 0x212ff6d39e8 <col:107, col:120> col:120 _Path 'const char *'
| `-ParmVarDecl 0x212ff6d3a60 <col:132, col:139> col:139 _SizeInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x212ff6d11e8 <line:778:28, col:189> col:44 _ecvt_s 'errno_t (char *, size_t, double, int, int *, int *) __attribute__((cdecl))':'errno_t (char *, size_t, double, int, int *, int *)'
| |-ParmVarDecl 0x212ff6d3d20 <col:74, col:81> col:81 _DstBuf 'char *'
| |-ParmVarDecl 0x212ff6d3d98 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x212ff6d3e18 <col:114, col:121> col:121 _Val 'double'
| |-ParmVarDecl 0x212ff6d3e98 <col:132, col:136> col:136 _NumOfDights 'int'
| |-ParmVarDecl 0x212ff6d3f18 <col:156, col:162> col:162 _PtDec 'int *'
| `-ParmVarDecl 0x212ff6d3f98 <col:176, col:182> col:182 _PtSign 'int *'
|-FunctionDecl 0x212ff6d16e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:780:158> col:72 _ecvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x212ff6d13a8 <col:83, col:90> col:90 _Val 'double'
| |-ParmVarDecl 0x212ff6d1428 <col:101, col:105> col:105 _NumOfDigits 'int'
| |-ParmVarDecl 0x212ff6d14a8 <col:125, col:131> col:131 _PtDec 'int *'
| |-ParmVarDecl 0x212ff6d1528 <col:145, col:151> col:151 _PtSign 'int *'
| `-DeprecatedAttr 0x212ff6d17a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ecvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x212ff6d1cd8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:781:28, col:186> col:44 _fcvt_s 'errno_t (char *, size_t, double, int, int *, int *) __attribute__((cdecl))':'errno_t (char *, size_t, double, int, int *, int *)'
| |-ParmVarDecl 0x212ff6d18e8 <col:74, col:81> col:81 _DstBuf 'char *'
| |-ParmVarDecl 0x212ff6d1960 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x212ff6d19e0 <col:114, col:121> col:121 _Val 'double'
| |-ParmVarDecl 0x212ff6d1a60 <col:132, col:136> col:136 _NumOfDec 'int'
| |-ParmVarDecl 0x212ff6d1ae0 <col:153, col:159> col:159 _PtDec 'int *'
| `-ParmVarDecl 0x212ff6d1b60 <col:173, col:179> col:179 _PtSign 'int *'
|-FunctionDecl 0x212ff6d91d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:783:155> col:72 _fcvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x212ff6d1e98 <col:83, col:90> col:90 _Val 'double'
| |-ParmVarDecl 0x212ff6d1f18 <col:101, col:105> col:105 _NumOfDec 'int'
| |-ParmVarDecl 0x212ff6d1f98 <col:122, col:128> col:128 _PtDec 'int *'
| |-ParmVarDecl 0x212ff6d9098 <col:142, col:148> col:148 _PtSign 'int *'
| `-DeprecatedAttr 0x212ff6d9298 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fcvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x212ff6d9758 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:784:9, col:129> col:25 _gcvt_s 'errno_t (char *, size_t, double, int) __attribute__((cdecl))':'errno_t (char *, size_t, double, int)'
| |-ParmVarDecl 0x212ff6d93e0 <col:55, col:62> col:62 _DstBuf 'char *'
| |-ParmVarDecl 0x212ff6d9458 <col:76, col:83> col:83 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x212ff6d94d8 <col:95, col:102> col:102 _Val 'double'
| `-ParmVarDecl 0x212ff6d9558 <col:113, col:117> col:117 _NumOfDigits 'int'
|-FunctionDecl 0x212ff6d9ba8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:786:141> col:57 _gcvt 'char *(double, int, char *) __attribute__((cdecl))':'char *(double, int, char *)'
| |-ParmVarDecl 0x212ff6d9908 <col:68, col:75> col:75 _Val 'double'
| |-ParmVarDecl 0x212ff6d9988 <col:86, col:90> col:90 _NumOfDigits 'int'
| |-ParmVarDecl 0x212ff6d9a08 <col:127, col:134> col:134 _DstBuf 'char *'
| `-DeprecatedAttr 0x212ff6d9c60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _gcvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x212ff6d2010 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:788:24, col:91> col:36 _atodbl 'int (_CRT_DOUBLE *, char *) __attribute__((cdecl))':'int (_CRT_DOUBLE *, char *)'
| |-ParmVarDecl 0x212ff6d9e18 <col:50, col:64> col:64 _Result '_CRT_DOUBLE *'
| `-ParmVarDecl 0x212ff6d9e98 <col:80, col:87> col:87 _Str 'char *'
|-FunctionDecl 0x212ff6d2390 <line:789:24, col:89> col:36 _atoldbl 'int (_LDOUBLE *, char *) __attribute__((cdecl))':'int (_LDOUBLE *, char *)'
| |-ParmVarDecl 0x212ff6d2168 <col:51, col:62> col:62 _Result '_LDOUBLE *'
| `-ParmVarDecl 0x212ff6d21e8 <col:78, col:85> col:85 _Str 'char *'
|-FunctionDecl 0x212ff6d2710 <line:790:24, col:96> col:36 _atoflt 'int (_CRT_FLOAT *, const char *) __attribute__((cdecl))':'int (_CRT_FLOAT *, const char *)'
| |-ParmVarDecl 0x212ff6d24e8 <col:50, col:63> col:63 _Result '_CRT_FLOAT *'
| `-ParmVarDecl 0x212ff6d2568 <col:79, col:92> col:92 _Str 'const char *'
|-FunctionDecl 0x212ff6d2ab8 <line:791:24, col:121> col:36 _atodbl_l 'int (_CRT_DOUBLE *, char *, _locale_t) __attribute__((cdecl))':'int (_CRT_DOUBLE *, char *, _locale_t)'
| |-ParmVarDecl 0x212ff6d27e8 <col:52, col:66> col:66 _Result '_CRT_DOUBLE *'
| |-ParmVarDecl 0x212ff6d2868 <col:82, col:89> col:89 _Str 'char *'
| `-ParmVarDecl 0x212ff6d28e0 <col:104, col:114> col:114 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x212ff6d2e68 <line:792:24, col:119> col:36 _atoldbl_l 'int (_LDOUBLE *, char *, _locale_t) __attribute__((cdecl))':'int (_LDOUBLE *, char *, _locale_t)'
| |-ParmVarDecl 0x212ff6d2b98 <col:53, col:64> col:64 _Result '_LDOUBLE *'
| |-ParmVarDecl 0x212ff6d2c18 <col:80, col:87> col:87 _Str 'char *'
| `-ParmVarDecl 0x212ff6d2c90 <col:102, col:112> col:112 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x212ff6db2f8 <line:793:24, col:126> col:36 _atoflt_l 'int (_CRT_FLOAT *, const char *, _locale_t) __attribute__((cdecl))':'int (_CRT_FLOAT *, const char *, _locale_t)'
| |-ParmVarDecl 0x212ff6d2f48 <col:52, col:65> col:65 _Result '_CRT_FLOAT *'
| |-ParmVarDecl 0x212ff6db0a0 <col:81, col:94> col:94 _Str 'const char *'
| `-ParmVarDecl 0x212ff6db118 <col:109, col:119> col:119 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x212ff6db5d0 <line:794:46> col:46 implicit _lrotl 'unsigned long (unsigned long, int)' extern
| |-ParmVarDecl 0x212ff6db670 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0x212ff6db6d8 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x212ff6db750 <col:46> Implicit
|-FunctionDecl 0x212ff6db7a8 prev 0x212ff6db5d0 <col:24, col:93> col:46 _lrotl 'unsigned long (unsigned long, int)'
| |-ParmVarDecl 0x212ff6db3e0 <col:58, col:72> col:72 _Val 'unsigned long'
| |-ParmVarDecl 0x212ff6db460 <col:83, col:87> col:87 _Shift 'int'
| `-NoThrowAttr 0x212ff6db8a0 <col:46> Inherited Implicit
|-FunctionDecl 0x212ff6dba60 <line:795:46> col:46 implicit _lrotr 'unsigned long (unsigned long, int)' extern
| |-ParmVarDecl 0x212ff6dbb00 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0x212ff6dbb68 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x212ff6dbbe0 <col:46> Implicit
|-FunctionDecl 0x212ff6dbc38 prev 0x212ff6dba60 <col:24, col:93> col:46 _lrotr 'unsigned long (unsigned long, int)'
| |-ParmVarDecl 0x212ff6db8e0 <col:58, col:72> col:72 _Val 'unsigned long'
| |-ParmVarDecl 0x212ff6db960 <col:83, col:87> col:87 _Shift 'int'
| `-NoThrowAttr 0x212ff6dbd30 <col:46> Inherited Implicit
|-FunctionDecl 0x212ff6d41e8 <line:796:40, line:797:37> line:796:58 _makepath_s 'errno_t (char *, size_t, const char *, const char *, const char *, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *, const char *, const char *, const char *)'
| |-ParmVarDecl 0x212ff6dbd70 <col:99, col:106> col:106 _PathResult 'char *'
| |-ParmVarDecl 0x212ff6dbde8 <col:124, col:131> col:131 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x212ff6dbe68 <col:156, col:169> col:169 _Drive 'const char *'
| |-ParmVarDecl 0x212ff6dbee8 <col:188, col:201> col:201 _Dir 'const char *'
| |-ParmVarDecl 0x212ff6dbf68 <col:218, col:231> col:231 _Filename 'const char *'
| `-ParmVarDecl 0x212ff6dbfe8 <line:797:20, col:33> col:33 _Ext 'const char *'
|-FunctionDecl 0x212ff6d4790 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1948:181> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:799:78 _makepath 'void (char *, const char *, const char *, const char *, const char *) __attribute__((cdecl))':'void (char *, const char *, const char *, const char *, const char *)'
| |-ParmVarDecl 0x212ff6d43a8 <col:113, col:119> col:119 _Path 'char *'
| |-ParmVarDecl 0x212ff6d4428 <col:137, col:151> col:151 _Drive 'const char *'
| |-ParmVarDecl 0x212ff6d44a8 <col:170, col:184> col:184 _Dir 'const char *'
| |-ParmVarDecl 0x212ff6d4528 <col:201, col:215> col:215 _Filename 'const char *'
| |-ParmVarDecl 0x212ff6d45a8 <col:237, col:251> col:251 _Ext 'const char *'
| `-DeprecatedAttr 0x212ff6d4858 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _makepath_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x212ff6d4b30 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:826:9, col:59> col:27 _onexit '_onexit_t (_onexit_t) __attribute__((cdecl))':'_onexit_t (_onexit_t)'
| `-ParmVarDecl 0x212ff6d49c0 <col:44, col:54> col:54 _Func '_onexit_t':'int (*)(void) __attribute__((cdecl))'
|-FunctionDecl 0x212ff6d4d50 <line:831:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x212ff6d4c08 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x212ff6d4f08 <line:838:24, col:77> col:39 _putenv 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x212ff6d4e28 <col:54, col:67> col:67 _EnvString 'const char *'
|-FunctionDecl 0x212ff6e3348 <line:839:28, col:107> col:44 _putenv_s 'errno_t (const char *, const char *) __attribute__((cdecl))':'errno_t (const char *, const char *)'
| |-ParmVarDecl 0x212ff6e3120 <col:61, col:74> col:74 _Name 'const char *'
| `-ParmVarDecl 0x212ff6e31a0 <col:88, col:101> col:101 _Value 'const char *'
|-FunctionDecl 0x212ff6e3610 <line:842:30> col:30 implicit _rotl 'unsigned int (unsigned int, int)' extern
| |-ParmVarDecl 0x212ff6e36b0 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-ParmVarDecl 0x212ff6e3718 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x212ff6e3790 <col:30> Implicit
|-FunctionDecl 0x212ff6e37e8 prev 0x212ff6e3610 <col:9, col:75> col:30 _rotl 'unsigned int (unsigned int, int)'
| |-ParmVarDecl 0x212ff6e3428 <col:41, col:54> col:54 _Val 'unsigned int'
| |-ParmVarDecl 0x212ff6e34a8 <col:65, col:69> col:69 _Shift 'int'
| `-NoThrowAttr 0x212ff6e38e0 <col:30> Inherited Implicit
|-FunctionDecl 0x212ff6e3b10 <line:843:34> col:34 implicit _rotl64 'unsigned long long (unsigned long long, int)' extern
| |-ParmVarDecl 0x212ff6e3bb0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x212ff6e3c18 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x212ff6e3c90 <col:34> Implicit
|-FunctionDecl 0x212ff6e3ce8 prev 0x212ff6e3b10 <col:9, col:85> col:34 _rotl64 'unsigned long long (unsigned long long, int)'
| |-ParmVarDecl 0x212ff6e3920 <col:47, col:64> col:64 _Val 'unsigned long long'
| |-ParmVarDecl 0x212ff6e39a0 <col:75, col:79> col:79 _Shift 'int'
| `-NoThrowAttr 0x212ff6e3de0 <col:34> Inherited Implicit
|-FunctionDecl 0x212ff6e3fa0 <line:844:30> col:30 implicit _rotr 'unsigned int (unsigned int, int)' extern
| |-ParmVarDecl 0x212ff6e4040 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-ParmVarDecl 0x212ff6e40a8 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x212ff6dd0c0 <col:30> Implicit
|-FunctionDecl 0x212ff6dd118 prev 0x212ff6e3fa0 <col:9, col:75> col:30 _rotr 'unsigned int (unsigned int, int)'
| |-ParmVarDecl 0x212ff6e3e20 <col:41, col:54> col:54 _Val 'unsigned int'
| |-ParmVarDecl 0x212ff6e3ea0 <col:65, col:69> col:69 _Shift 'int'
| `-NoThrowAttr 0x212ff6dd210 <col:30> Inherited Implicit
|-FunctionDecl 0x212ff6dd3d0 <line:845:34> col:34 implicit _rotr64 'unsigned long long (unsigned long long, int)' extern
| |-ParmVarDecl 0x212ff6dd470 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x212ff6dd4d8 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x212ff6dd550 <col:34> Implicit
|-FunctionDecl 0x212ff6dd5a8 prev 0x212ff6dd3d0 <col:9, col:85> col:34 _rotr64 'unsigned long long (unsigned long long, int)'
| |-ParmVarDecl 0x212ff6dd250 <col:47, col:64> col:64 _Val 'unsigned long long'
| |-ParmVarDecl 0x212ff6dd2d0 <col:75, col:79> col:79 _Shift 'int'
| `-NoThrowAttr 0x212ff6dd6a0 <col:34> Inherited Implicit
|-FunctionDecl 0x212ff6dda58 <line:849:9, col:171> col:25 _searchenv_s 'errno_t (const char *, const char *, char *, size_t) __attribute__((cdecl))':'errno_t (const char *, const char *, char *, size_t)'
| |-ParmVarDecl 0x212ff6dd6e0 <col:45, col:58> col:58 _Filename 'const char *'
| |-ParmVarDecl 0x212ff6dd760 <col:76, col:89> col:89 _EnvVar 'const char *'
| |-ParmVarDecl 0x212ff6dd7e0 <col:127, col:134> col:134 _ResultPath 'char *'
| `-ParmVarDecl 0x212ff6dd858 <col:152, col:159> col:159 _SizeInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x212ff6ddea0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1954:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:851:78 _searchenv 'void (const char *, const char *, char *) __attribute__((cdecl))':'void (const char *, const char *, char *)'
| |-ParmVarDecl 0x212ff6ddc08 <col:97, col:111> col:111 _Filename 'const char *'
| |-ParmVarDecl 0x212ff6ddc88 <col:129, col:143> col:143 _EnvVar 'const char *'
| |-ParmVarDecl 0x212ff6ddd08 <col:176, col:182> col:182 _ResultPath 'char *'
| `-DeprecatedAttr 0x212ff6ddf58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _searchenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x212ff6dc570 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:854:261> col:62 _splitpath 'void (const char *, char *, char *, char *, char *) __attribute__((cdecl))':'void (const char *, char *, char *, char *, char *)'
| |-ParmVarDecl 0x212ff6dc188 <col:80, col:93> col:93 _FullPath 'const char *'
| |-ParmVarDecl 0x212ff6dc208 <col:129, col:136> col:136 _Drive 'char *'
| |-ParmVarDecl 0x212ff6dc288 <col:169, col:176> col:176 _Dir 'char *'
| |-ParmVarDecl 0x212ff6dc308 <col:207, col:214> col:214 _Filename 'char *'
| |-ParmVarDecl 0x212ff6dc388 <col:250, col:257> col:257 _Ext 'char *'
| `-DeprecatedAttr 0x212ff6dc638 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _splitpath_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x212ff6dce50 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:855:40, line:859:79> line:855:57 _splitpath_s 'errno_t (const char *, char *, size_t, char *, size_t, char *, size_t, char *, size_t) __attribute__((cdecl))':'errno_t (const char *, char *, size_t, char *, size_t, char *, size_t, char *, size_t)'
| |-ParmVarDecl 0x212ff6dc780 <col:77, col:90> col:90 _FullPath 'const char *'
| |-ParmVarDecl 0x212ff6dc800 <line:856:48, col:55> col:55 _Drive 'char *'
| |-ParmVarDecl 0x212ff6dc878 <col:68, col:75> col:75 _DriveSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x212ff6dc8f8 <line:857:46, col:53> col:53 _Dir 'char *'
| |-ParmVarDecl 0x212ff6dc970 <col:64, col:71> col:71 _DirSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x212ff6dc9f0 <line:858:51, col:58> col:58 _Filename 'char *'
| |-ParmVarDecl 0x212ff6dca68 <col:74, col:81> col:81 _FilenameSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x212ff6dcae8 <line:859:46, col:53> col:53 _Ext 'char *'
| `-ParmVarDecl 0x212ff6dcb60 <col:64, col:71> col:71 _ExtSize 'size_t':'unsigned long long'
|-FunctionDecl 0x212ff6e1290 <line:862:9, col:204> col:24 _swab 'void (char *, char *, int) __attribute__((cdecl))':'void (char *, char *, int)'
| |-ParmVarDecl 0x212ff6dcf68 <col:95, col:102> col:102 _Buf1 'char *'
| |-ParmVarDecl 0x212ff6dcfe8 <col:174, col:181> col:181 _Buf2 'char *'
| `-ParmVarDecl 0x212ff6e1100 <col:188, col:192> col:192 _SizeInBytes 'int'
|-FunctionDecl 0x212ff6e1630 <line:873:24, col:161> col:42 _wfullpath 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x212ff6e1370 <col:86, col:96> col:96 _FullPath 'wchar_t *'
| |-ParmVarDecl 0x212ff6e13e8 <col:114, col:130> col:130 _Path 'const wchar_t *'
| `-ParmVarDecl 0x212ff6e1460 <col:142, col:149> col:149 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x212ff6e1bc8 <line:879:40, line:880:40> line:879:56 _wmakepath_s 'errno_t (wchar_t *, size_t, const wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x212ff6e1710 <col:91, col:101> col:101 _PathResult 'wchar_t *'
| |-ParmVarDecl 0x212ff6e1788 <col:119, col:126> col:126 _SIZE 'size_t':'unsigned long long'
| |-ParmVarDecl 0x212ff6e1800 <col:144, col:160> col:160 _Drive 'const wchar_t *'
| |-ParmVarDecl 0x212ff6e1878 <col:179, col:195> col:195 _Dir 'const wchar_t *'
| |-ParmVarDecl 0x212ff6e18f0 <col:212, col:228> col:228 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x212ff6e1968 <line:880:20, col:36> col:36 _Ext 'const wchar_t *'
|-FunctionDecl 0x212ff6e21c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1948:181> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:882:78 _wmakepath 'void (wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'void (wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x212ff6e1d80 <col:114, col:123> col:123 _ResultPath 'wchar_t *'
| |-ParmVarDecl 0x212ff6e1df8 <col:147, col:164> col:164 _Drive 'const wchar_t *'
| |-ParmVarDecl 0x212ff6e1e70 <col:183, col:200> col:200 _Dir 'const wchar_t *'
| |-ParmVarDecl 0x212ff6e1ee8 <col:217, col:234> col:234 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x212ff6e1f60 <col:256, col:273> col:273 _Ext 'const wchar_t *'
| `-DeprecatedAttr 0x212ff6e2288 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wmakepath_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x212ff6e2540 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:885:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x212ff6e23c8 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x212ff6e26f0 <line:889:24, col:81> col:39 _wputenv 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x212ff6e2610 <col:55, col:71> col:71 _EnvString 'const wchar_t *'
|-FunctionDecl 0x212ff6e29d8 <line:890:28, col:114> col:44 _wputenv_s 'errno_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x212ff6e27c0 <col:62, col:78> col:78 _Name 'const wchar_t *'
| `-ParmVarDecl 0x212ff6e2838 <col:92, col:108> col:108 _Value 'const wchar_t *'
|-FunctionDecl 0x212ff6e2e18 <line:891:9, col:181> col:25 _wsearchenv_s 'errno_t (const wchar_t *, const wchar_t *, wchar_t *, size_t) __attribute__((cdecl))':'errno_t (const wchar_t *, const wchar_t *, wchar_t *, size_t)'
| |-ParmVarDecl 0x212ff6e2ab0 <col:46, col:62> col:62 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x212ff6e2b28 <col:80, col:96> col:96 _EnvVar 'const wchar_t *'
| |-ParmVarDecl 0x212ff6e2ba0 <col:134, col:144> col:144 _ResultPath 'wchar_t *'
| `-ParmVarDecl 0x212ff6e2c18 <col:162, col:169> col:169 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x212ff6e4300 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1954:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:893:78 _wsearchenv 'void (const wchar_t *, const wchar_t *, wchar_t *) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, wchar_t *)'
| |-ParmVarDecl 0x212ff6e2fc0 <col:98, col:115> col:115 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x212ff6e3038 <col:133, col:150> col:150 _EnvVar 'const wchar_t *'
| |-ParmVarDecl 0x212ff6e4130 <col:183, col:192> col:192 _ResultPath 'wchar_t *'
| `-DeprecatedAttr 0x212ff6e43b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wsearchenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x212ff6e49d0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:896:278> col:63 _wsplitpath 'void (const wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *) __attribute__((cdecl))':'void (const wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *)'
| |-ParmVarDecl 0x212ff6e45b8 <col:82, col:98> col:98 _FullPath 'const wchar_t *'
| |-ParmVarDecl 0x212ff6e4630 <col:134, col:144> col:144 _Drive 'wchar_t *'
| |-ParmVarDecl 0x212ff6e46a8 <col:177, col:187> col:187 _Dir 'wchar_t *'
| |-ParmVarDecl 0x212ff6e4720 <col:218, col:228> col:228 _Filename 'wchar_t *'
| |-ParmVarDecl 0x212ff6e4798 <col:264, col:274> col:274 _Ext 'wchar_t *'
| `-DeprecatedAttr 0x212ff6e4a98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wsplitpath_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x212ff6e52f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:897:21, line:901:82> line:897:37 _wsplitpath_s 'errno_t (const wchar_t *, wchar_t *, size_t, wchar_t *, size_t, wchar_t *, size_t, wchar_t *, size_t) __attribute__((cdecl))':'errno_t (const wchar_t *, wchar_t *, size_t, wchar_t *, size_t, wchar_t *, size_t, wchar_t *, size_t)'
| |-ParmVarDecl 0x212ff6e4bd8 <col:58, col:74> col:74 _FullPath 'const wchar_t *'
| |-ParmVarDecl 0x212ff6e4c50 <line:898:48, col:58> col:58 _Drive 'wchar_t *'
| |-ParmVarDecl 0x212ff6e4cc8 <col:71, col:78> col:78 _DriveSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x212ff6e4d40 <line:899:46, col:56> col:56 _Dir 'wchar_t *'
| |-ParmVarDecl 0x212ff6e4db8 <col:67, col:74> col:74 _DirSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x212ff6e4e30 <line:900:51, col:61> col:61 _Filename 'wchar_t *'
| |-ParmVarDecl 0x212ff6e4ea8 <col:77, col:84> col:84 _FilenameSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x212ff6e4f20 <line:901:46, col:56> col:56 _Ext 'wchar_t *'
| `-ParmVarDecl 0x212ff6e4f98 <col:67, col:74> col:74 _ExtSize 'size_t':'unsigned long long'
|-FunctionDecl 0x212ff6e5610 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:909:78> col:50 _seterrormode 'void (int) __attribute__((cdecl))':'void (int)'
| |-ParmVarDecl 0x212ff6e5508 <col:69, col:73> col:73 _Mode 'int'
| `-DeprecatedAttr 0x212ff6e56b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using SetErrorMode instead. See online help for details." ""
|-FunctionDecl 0x212ff6e5aa8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:910:97> col:42 _beep 'void (unsigned int, unsigned int) __attribute__((cdecl))':'void (unsigned int, unsigned int)'
| |-ParmVarDecl 0x212ff6e58c8 <col:53, col:62> col:62 _Frequency 'unsigned int'
| |-ParmVarDecl 0x212ff6e5948 <col:79, col:88> col:88 _Duration 'unsigned int'
| `-DeprecatedAttr 0x212ff6e5b58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using Beep instead. See online help for details." ""
|-FunctionDecl 0x212ff6e5ea0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:911:78> col:43 _sleep 'void (unsigned long) __attribute__((cdecl))':'void (unsigned long)'
| |-ParmVarDecl 0x212ff6e5d60 <col:55, col:69> col:69 _Duration 'unsigned long'
| `-DeprecatedAttr 0x212ff6e5f48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using Sleep instead. See online help for details." ""
|-FunctionDecl 0x212ff6de508 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:934:187> col:102 ecvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x212ff6de248 <col:112, col:119> col:119 _Val 'double'
| |-ParmVarDecl 0x212ff6de2c8 <col:130, col:134> col:134 _NumOfDigits 'int'
| |-ParmVarDecl 0x212ff6de348 <col:154, col:160> col:160 _PtDec 'int *'
| |-ParmVarDecl 0x212ff6de3c8 <col:174, col:180> col:180 _PtSign 'int *'
| |-DeprecatedAttr 0x212ff6de5c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _ecvt. See online help for details." ""
| `-DeprecatedAttr 0x212ff6de6c0 <col:47, col:63> "This function or variable may be unsafe. Consider using _ecvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x212ff6debf8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:935:184> col:102 fcvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x212ff6de938 <col:112, col:119> col:119 _Val 'double'
| |-ParmVarDecl 0x212ff6de9b8 <col:130, col:134> col:134 _NumOfDec 'int'
| |-ParmVarDecl 0x212ff6dea38 <col:151, col:157> col:157 _PtDec 'int *'
| |-ParmVarDecl 0x212ff6deab8 <col:171, col:177> col:177 _PtSign 'int *'
| |-DeprecatedAttr 0x212ff6decb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcvt. See online help for details." ""
| `-DeprecatedAttr 0x212ff6dedb0 <col:47, col:63> "This function or variable may be unsafe. Consider using _fcvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x212ff6e62f0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:936:179> col:96 gcvt 'char *(double, int, char *) __attribute__((cdecl))':'char *(double, int, char *)'
| |-ParmVarDecl 0x212ff6df028 <col:106, col:113> col:113 _Val 'double'
| |-ParmVarDecl 0x212ff6e6150 <col:124, col:128> col:128 _NumOfDigits 'int'
| |-ParmVarDecl 0x212ff6e61d0 <col:165, col:172> col:172 _DstBuf 'char *'
| |-DeprecatedAttr 0x212ff6e63a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _gcvt. See online help for details." ""
| `-DeprecatedAttr 0x212ff6e64a0 <col:47, col:63> "This function or variable may be unsafe. Consider using _fcvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x212ff6e6938 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:937:170> col:96 itoa 'char *(int, char *, int) __attribute__((cdecl))':'char *(int, char *, int)'
| |-ParmVarDecl 0x212ff6e6718 <col:106, col:110> col:110 _Val 'int'
| |-ParmVarDecl 0x212ff6e6798 <col:139, col:146> col:146 _DstBuf 'char *'
| |-ParmVarDecl 0x212ff6e6818 <col:160, col:164> col:164 _Radix 'int'
| |-DeprecatedAttr 0x212ff6e69f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _itoa. See online help for details." ""
| `-DeprecatedAttr 0x212ff6e6ae8 <col:47, col:63> "This function or variable may be unsafe. Consider using _itoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x212ff6e6f80 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:938:171> col:96 ltoa 'char *(long, char *, int) __attribute__((cdecl))':'char *(long, char *, int)'
| |-ParmVarDecl 0x212ff6e6d60 <col:106, col:111> col:111 _Val 'long'
| |-ParmVarDecl 0x212ff6e6de0 <col:140, col:147> col:147 _DstBuf 'char *'
| |-ParmVarDecl 0x212ff6e6e60 <col:161, col:165> col:165 _Radix 'int'
| |-DeprecatedAttr 0x212ff6e7038 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _ltoa. See online help for details." ""
| `-DeprecatedAttr 0x212ff6e00f0 <col:47, col:63> "This function or variable may be unsafe. Consider using _ltoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x212ff6e03c0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:941:108> col:71 putenv 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x212ff6e02e0 <col:85, col:98> col:98 _EnvString 'const char *'
| `-DeprecatedAttr 0x212ff6e0468 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putenv. See online help for details." ""
|-FunctionDecl 0x212ff6e0848 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:944:245> col:128 swab 'void (char *, char *, int) __attribute__((cdecl))':'void (char *, char *, int)'
| |-ParmVarDecl 0x212ff6e0630 <col:165, col:172> col:172 _Buf1 'char *'
| |-ParmVarDecl 0x212ff6e06b0 <col:210, col:217> col:217 _Buf2 'char *'
| |-ParmVarDecl 0x212ff6e0730 <col:229, col:233> col:233 _SizeInBytes 'int'
| `-DeprecatedAttr 0x212ff6e0900 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _swab. See online help for details." ""
|-FunctionDecl 0x212ff6e0de0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:945:181> col:96 ultoa 'char *(unsigned long, char *, int) __attribute__((cdecl))':'char *(unsigned long, char *, int)'
| |-ParmVarDecl 0x212ff6e0bc0 <col:107, col:121> col:121 _Val 'unsigned long'
| |-ParmVarDecl 0x212ff6e0c40 <col:150, col:157> col:157 _Dstbuf 'char *'
| |-ParmVarDecl 0x212ff6e0cc0 <col:171, col:175> col:175 _Radix 'int'
| |-DeprecatedAttr 0x212ff6e0e98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _ultoa. See online help for details." ""
| `-DeprecatedAttr 0x212ff6e0f90 <col:47, col:63> "This function or variable may be unsafe. Consider using _ultoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x212ff6df1b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:64:18, line:947:48> col:18 onexit '_onexit_t (_onexit_t) __attribute__((cdecl))':'_onexit_t (_onexit_t)'
| `-ParmVarDecl 0x212ff6df0e0 <line:64:18, line:947:43> col:43 _Func '_onexit_t':'int (*)(void) __attribute__((cdecl))'
|-TypedefDecl 0x212ff6df290 <.//openssl//file_jk/before\crypto\poly1305\poly1305_ieee754.c:55:1, col:23> col:23 u8 'unsigned char'
| `-BuiltinType 0x212fef433d0 'unsigned char'
|-TypedefDecl 0x212ff6df300 <line:56:1, col:22> col:22 referenced u32 'unsigned int'
| `-BuiltinType 0x212fef43410 'unsigned int'
|-TypedefDecl 0x212ff6df370 <line:57:1, col:28> col:28 referenced u64 'unsigned long long'
| `-BuiltinType 0x212fef43450 'unsigned long long'
|-RecordDecl 0x212ff6df3c8 <line:58:9, col:34> col:9 union definition
| |-FieldDecl 0x212ff6df498 <col:17, col:24> col:24 referenced d 'double'
| `-FieldDecl 0x212ff6df520 <col:27, col:31> col:31 referenced u 'u64':'unsigned long long'
|-TypedefDecl 0x212ff6df5d8 <col:1, col:36> col:36 referenced elem64 'union elem64':'elem64'
| `-ElaboratedType 0x212ff6df580 'union elem64' sugar
|   `-RecordType 0x212ff6df460 'elem64'
|     `-Record 0x212ff6df3c8 ''
|-RecordDecl 0x212ff6df648 <line:89:9, line:93:1> line:89:9 struct definition
| |-FieldDecl 0x212ff6df858 <line:90:5, col:15> col:12 referenced h 'elem64 [4]'
| |-FieldDecl 0x212ff6df950 <line:91:5, col:15> col:12 referenced r 'double [8]'
| `-FieldDecl 0x212ff6dfa50 <line:92:5, col:15> col:12 referenced s 'double [6]'
|-TypedefDecl 0x212ff6dfb08 <line:89:1, line:93:3> col:3 referenced poly1305_internal 'struct poly1305_internal':'poly1305_internal'
| `-ElaboratedType 0x212ff6dfab0 'struct poly1305_internal' sugar
|   `-RecordType 0x212ff6df6e0 'poly1305_internal'
|     `-Record 0x212ff6df648 ''
|-VarDecl 0x212ff6dfbb0 <line:97:1, col:26> col:18 used mxcsr 'const u32':'const unsigned int' static cinit
| `-ImplicitCastExpr 0x212ff6dfc58 <col:26> 'u32':'unsigned int' <IntegralCast>
|   `-IntegerLiteral 0x212ff6dfc18 <col:26> 'int' 32640
|-FunctionDecl 0x212ff6dff50 <line:108:1, line:213:1> line:108:5 poly1305_init 'int (void *, const unsigned char *)'
| |-ParmVarDecl 0x212ff6dfc88 <col:19, col:25> col:25 used ctx 'void *'
| |-ParmVarDecl 0x212ff6dfe00 <col:30, col:56> col:50 used key 'const unsigned char *':'const unsigned char *'
| `-CompoundStmt 0x212ff765670 <line:109:1, line:213:1>
|   |-DeclStmt 0x212ff6ea268 <line:110:5, col:54>
|   | `-VarDecl 0x212ff6ea190 <col:5, col:51> col:24 used st 'poly1305_internal *' cinit
|   |   `-CStyleCastExpr 0x212ff6ea240 <col:29, col:51> 'poly1305_internal *' <BitCast>
|   |     `-ImplicitCastExpr 0x212ff6ea228 <col:51> 'void *' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0x212ff6ea1f8 <col:51> 'void *' lvalue ParmVar 0x212ff6dfc88 'ctx' 'void *'
|   |-DeclStmt 0x212ff6ea488 <line:111:5, col:26>
|   | |-VarDecl 0x212ff6ea290 <col:5, col:12> col:12 used r0 'elem64':'elem64'
|   | |-VarDecl 0x212ff6ea308 <col:5, col:16> col:16 used r1 'elem64':'elem64'
|   | |-VarDecl 0x212ff6ea380 <col:5, col:20> col:20 used r2 'elem64':'elem64'
|   | `-VarDecl 0x212ff6ea3f8 <col:5, col:24> col:24 used r3 'elem64':'elem64'
|   |-BinaryOperator 0x212ff6ea788 <line:120:5, line:67:35> 'u64':'unsigned long long' '='
|   | |-MemberExpr 0x212ff6ea5e0 <line:120:5, col:14> 'u64':'unsigned long long' lvalue .u 0x212ff6df520
|   | | `-ArraySubscriptExpr 0x212ff6ea5c0 <col:5, col:12> 'elem64':'elem64' lvalue
|   | |   |-ImplicitCastExpr 0x212ff6ea5a8 <col:5, col:9> 'elem64 *' <ArrayToPointerDecay>
|   | |   | `-MemberExpr 0x212ff6ea4f0 <col:5, col:9> 'elem64 [4]' lvalue ->h 0x212ff6df858
|   | |   |   `-ImplicitCastExpr 0x212ff6ea4d8 <col:5> 'poly1305_internal *' <LValueToRValue>
|   | |   |     `-DeclRefExpr 0x212ff6ea4a0 <col:5> 'poly1305_internal *' lvalue Var 0x212ff6ea190 'st' 'poly1305_internal *'
|   | |   `-IntegerLiteral 0x212ff6ea520 <col:11> 'int' 0
|   | `-ParenExpr 0x212ff6ea768 <line:67:17, col:35> 'unsigned long long'
|   |   `-BinaryOperator 0x212ff6ea748 <col:18, col:33> 'unsigned long long' '<<'
|   |     |-ParenExpr 0x212ff6ea700 <col:18, col:30> 'unsigned long long'
|   |     | `-BinaryOperator 0x212ff6ea6e0 <col:19, col:29> 'unsigned long long' '+'
|   |     |   |-IntegerLiteral 0x212ff6ea610 <col:19> 'unsigned long long' 1023
|   |     |   `-ImplicitCastExpr 0x212ff6ea6c8 <col:27, col:29> 'unsigned long long' <IntegralCast>
|   |     |     `-ParenExpr 0x212ff6ea6a8 <col:27, col:29> 'int'
|   |     |       `-BinaryOperator 0x212ff6ea688 <line:120:22, col:25> 'int' '+'
|   |     |         |-IntegerLiteral 0x212ff6ea638 <col:22> 'int' 52
|   |     |         `-IntegerLiteral 0x212ff6ea660 <col:25> 'int' 0
|   |     `-IntegerLiteral 0x212ff6ea720 <line:67:33> 'int' 52
|   |-BinaryOperator 0x212ff6eaa18 <line:121:5, line:67:35> 'u64':'unsigned long long' '='
|   | |-MemberExpr 0x212ff6ea870 <line:121:5, col:14> 'u64':'unsigned long long' lvalue .u 0x212ff6df520
|   | | `-ArraySubscriptExpr 0x212ff6ea850 <col:5, col:12> 'elem64':'elem64' lvalue
|   | |   |-ImplicitCastExpr 0x212ff6ea838 <col:5, col:9> 'elem64 *' <ArrayToPointerDecay>
|   | |   | `-MemberExpr 0x212ff6ea7e0 <col:5, col:9> 'elem64 [4]' lvalue ->h 0x212ff6df858
|   | |   |   `-ImplicitCastExpr 0x212ff6ea7c8 <col:5> 'poly1305_internal *' <LValueToRValue>
|   | |   |     `-DeclRefExpr 0x212ff6ea7a8 <col:5> 'poly1305_internal *' lvalue Var 0x212ff6ea190 'st' 'poly1305_internal *'
|   | |   `-IntegerLiteral 0x212ff6ea810 <col:11> 'int' 1
|   | `-ParenExpr 0x212ff6ea9f8 <line:67:17, col:35> 'unsigned long long'
|   |   `-BinaryOperator 0x212ff6ea9d8 <col:18, col:33> 'unsigned long long' '<<'
|   |     |-ParenExpr 0x212ff6ea990 <col:18, col:30> 'unsigned long long'
|   |     | `-BinaryOperator 0x212ff6ea970 <col:19, col:29> 'unsigned long long' '+'
|   |     |   |-IntegerLiteral 0x212ff6ea8a0 <col:19> 'unsigned long long' 1023
|   |     |   `-ImplicitCastExpr 0x212ff6ea958 <col:27, col:29> 'unsigned long long' <IntegralCast>
|   |     |     `-ParenExpr 0x212ff6ea938 <col:27, col:29> 'int'
|   |     |       `-BinaryOperator 0x212ff6ea918 <line:121:22, col:25> 'int' '+'
|   |     |         |-IntegerLiteral 0x212ff6ea8c8 <col:22> 'int' 52
|   |     |         `-IntegerLiteral 0x212ff6ea8f0 <col:25> 'int' 32
|   |     `-IntegerLiteral 0x212ff6ea9b0 <line:67:33> 'int' 52
|   |-BinaryOperator 0x212ff6eaca8 <line:122:5, line:67:35> 'u64':'unsigned long long' '='
|   | |-MemberExpr 0x212ff6eab00 <line:122:5, col:14> 'u64':'unsigned long long' lvalue .u 0x212ff6df520
|   | | `-ArraySubscriptExpr 0x212ff6eaae0 <col:5, col:12> 'elem64':'elem64' lvalue
|   | |   |-ImplicitCastExpr 0x212ff6eaac8 <col:5, col:9> 'elem64 *' <ArrayToPointerDecay>
|   | |   | `-MemberExpr 0x212ff6eaa70 <col:5, col:9> 'elem64 [4]' lvalue ->h 0x212ff6df858
|   | |   |   `-ImplicitCastExpr 0x212ff6eaa58 <col:5> 'poly1305_internal *' <LValueToRValue>
|   | |   |     `-DeclRefExpr 0x212ff6eaa38 <col:5> 'poly1305_internal *' lvalue Var 0x212ff6ea190 'st' 'poly1305_internal *'
|   | |   `-IntegerLiteral 0x212ff6eaaa0 <col:11> 'int' 2
|   | `-ParenExpr 0x212ff6eac88 <line:67:17, col:35> 'unsigned long long'
|   |   `-BinaryOperator 0x212ff6eac68 <col:18, col:33> 'unsigned long long' '<<'
|   |     |-ParenExpr 0x212ff6eac20 <col:18, col:30> 'unsigned long long'
|   |     | `-BinaryOperator 0x212ff6eac00 <col:19, col:29> 'unsigned long long' '+'
|   |     |   |-IntegerLiteral 0x212ff6eab30 <col:19> 'unsigned long long' 1023
|   |     |   `-ImplicitCastExpr 0x212ff6eabe8 <col:27, col:29> 'unsigned long long' <IntegralCast>
|   |     |     `-ParenExpr 0x212ff6eabc8 <col:27, col:29> 'int'
|   |     |       `-BinaryOperator 0x212ff6eaba8 <line:122:22, col:25> 'int' '+'
|   |     |         |-IntegerLiteral 0x212ff6eab58 <col:22> 'int' 52
|   |     |         `-IntegerLiteral 0x212ff6eab80 <col:25> 'int' 64
|   |     `-IntegerLiteral 0x212ff6eac40 <line:67:33> 'int' 52
|   |-BinaryOperator 0x212ff6eaf38 <line:123:5, line:67:35> 'u64':'unsigned long long' '='
|   | |-MemberExpr 0x212ff6ead90 <line:123:5, col:14> 'u64':'unsigned long long' lvalue .u 0x212ff6df520
|   | | `-ArraySubscriptExpr 0x212ff6ead70 <col:5, col:12> 'elem64':'elem64' lvalue
|   | |   |-ImplicitCastExpr 0x212ff6ead58 <col:5, col:9> 'elem64 *' <ArrayToPointerDecay>
|   | |   | `-MemberExpr 0x212ff6ead00 <col:5, col:9> 'elem64 [4]' lvalue ->h 0x212ff6df858
|   | |   |   `-ImplicitCastExpr 0x212ff6eace8 <col:5> 'poly1305_internal *' <LValueToRValue>
|   | |   |     `-DeclRefExpr 0x212ff6eacc8 <col:5> 'poly1305_internal *' lvalue Var 0x212ff6ea190 'st' 'poly1305_internal *'
|   | |   `-IntegerLiteral 0x212ff6ead30 <col:11> 'int' 3
|   | `-ParenExpr 0x212ff6eaf18 <line:67:17, col:35> 'unsigned long long'
|   |   `-BinaryOperator 0x212ff6eaef8 <col:18, col:33> 'unsigned long long' '<<'
|   |     |-ParenExpr 0x212ff6eaeb0 <col:18, col:30> 'unsigned long long'
|   |     | `-BinaryOperator 0x212ff6eae90 <col:19, col:29> 'unsigned long long' '+'
|   |     |   |-IntegerLiteral 0x212ff6eadc0 <col:19> 'unsigned long long' 1023
|   |     |   `-ImplicitCastExpr 0x212ff6eae78 <col:27, col:29> 'unsigned long long' <IntegralCast>
|   |     |     `-ParenExpr 0x212ff6eae58 <col:27, col:29> 'int'
|   |     |       `-BinaryOperator 0x212ff6eae38 <line:123:22, col:25> 'int' '+'
|   |     |         |-IntegerLiteral 0x212ff6eade8 <col:22> 'int' 52
|   |     |         `-IntegerLiteral 0x212ff6eae10 <col:25> 'int' 96
|   |     `-IntegerLiteral 0x212ff6eaed0 <line:67:33> 'int' 52
|   |-IfStmt 0x212ff765620 <line:126:5, line:210:5>
|   | |-ImplicitCastExpr 0x212ff6eaf78 <line:126:9> 'const unsigned char *':'const unsigned char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x212ff6eaf58 <col:9> 'const unsigned char *':'const unsigned char *' lvalue ParmVar 0x212ff6dfe00 'key' 'const unsigned char *':'const unsigned char *'
|   | `-CompoundStmt 0x212ff765528 <col:14, line:210:5>
|   |   |-DeclStmt 0x212ff6eb008 <line:131:9, col:23>
|   |   | `-VarDecl 0x212ff6eafa0 <col:9, col:13> col:13 used mxcsr_orig 'u32':'unsigned int'
|   |   |-GCCAsmStmt 0x212ff6eb110 <line:133:9, col:52>
|   |   | `-DeclRefExpr 0x212ff6eb0d8 <col:41> 'u32':'unsigned int' lvalue Var 0x212ff6eafa0 'mxcsr_orig' 'u32':'unsigned int'
|   |   |-GCCAsmStmt 0x212ff6ec258 <line:134:9, col:47>
|   |   | `-DeclRefExpr 0x212ff6ec238 <col:41> 'const u32':'const unsigned int' lvalue Var 0x212ff6dfbb0 'mxcsr' 'const u32':'const unsigned int'
|   |   |-BinaryOperator 0x212ff6ec718 <line:153:9, col:60> 'u64':'unsigned long long' '='
|   |   | |-MemberExpr 0x212ff6ec300 <col:9, col:12> 'u64':'unsigned long long' lvalue .u 0x212ff6df520
|   |   | | `-DeclRefExpr 0x212ff6ec2c8 <col:9> 'elem64':'elem64' lvalue Var 0x212ff6ea290 'r0' 'elem64':'elem64'
|   |   | `-BinaryOperator 0x212ff6ec6f8 <line:67:17, line:153:60> 'unsigned long long' '|'
|   |   |   |-ParenExpr 0x212ff6ec488 <line:67:17, col:35> 'unsigned long long'
|   |   |   | `-BinaryOperator 0x212ff6ec468 <col:18, col:33> 'unsigned long long' '<<'
|   |   |   |   |-ParenExpr 0x212ff6ec420 <col:18, col:30> 'unsigned long long'
|   |   |   |   | `-BinaryOperator 0x212ff6ec400 <col:19, col:29> 'unsigned long long' '+'
|   |   |   |   |   |-IntegerLiteral 0x212ff6ec330 <col:19> 'unsigned long long' 1023
|   |   |   |   |   `-ImplicitCastExpr 0x212ff6ec3e8 <col:27, col:29> 'unsigned long long' <IntegralCast>
|   |   |   |   |     `-ParenExpr 0x212ff6ec3c8 <col:27, col:29> 'int'
|   |   |   |   |       `-BinaryOperator 0x212ff6ec3a8 <line:153:20, col:23> 'int' '+'
|   |   |   |   |         |-IntegerLiteral 0x212ff6ec358 <col:20> 'int' 52
|   |   |   |   |         `-IntegerLiteral 0x212ff6ec380 <col:23> 'int' 0
|   |   |   |   `-IntegerLiteral 0x212ff6ec440 <line:67:33> 'int' 52
|   |   |   `-ImplicitCastExpr 0x212ff6ec6e0 <line:153:29, col:60> 'unsigned long long' <IntegralCast>
|   |   |     `-ParenExpr 0x212ff6ec6c0 <col:29, col:60> 'unsigned int'
|   |   |       `-BinaryOperator 0x212ff6ec6a0 <line:70:21, line:153:50> 'unsigned int' '&'
|   |   |         |-ImplicitCastExpr 0x212ff6ec670 <line:70:21, col:39> 'u32':'unsigned int' <LValueToRValue>
|   |   |         | `-ParenExpr 0x212ff6ec628 <col:21, col:39> 'const u32':'const unsigned int' lvalue
|   |   |         |   `-UnaryOperator 0x212ff6ec610 <col:22, col:38> 'const u32':'const unsigned int' lvalue prefix '*' cannot overflow
|   |   |         |     `-CStyleCastExpr 0x212ff6ec5e8 <col:23, col:38> 'const u32 *' <BitCast>
|   |   |         |       `-ParenExpr 0x212ff6ec5c8 <col:36, col:38> 'const unsigned char *'
|   |   |         |         `-UnaryOperator 0x212ff6ec528 <line:153:38, col:44> 'const unsigned char *' prefix '&' cannot overflow
|   |   |         |           `-ArraySubscriptExpr 0x212ff6ec508 <col:39, col:44> 'const unsigned char' lvalue
|   |   |         |             |-ImplicitCastExpr 0x212ff6ec4f0 <col:39> 'const unsigned char *':'const unsigned char *' <LValueToRValue>
|   |   |         |             | `-DeclRefExpr 0x212ff6ec4a8 <col:39> 'const unsigned char *':'const unsigned char *' lvalue ParmVar 0x212ff6dfe00 'key' 'const unsigned char *':'const unsigned char *'
|   |   |         |             `-IntegerLiteral 0x212ff6ec4c8 <col:43> 'int' 0
|   |   |         `-ImplicitCastExpr 0x212ff6ec688 <col:50> 'unsigned int' <IntegralCast>
|   |   |           `-IntegerLiteral 0x212ff6ec648 <col:50> 'int' 268435455
|   |   |-BinaryOperator 0x212ff6ecb30 <line:154:9, col:60> 'u64':'unsigned long long' '='
|   |   | |-MemberExpr 0x212ff6ec770 <col:9, col:12> 'u64':'unsigned long long' lvalue .u 0x212ff6df520
|   |   | | `-DeclRefExpr 0x212ff6ec738 <col:9> 'elem64':'elem64' lvalue Var 0x212ff6ea308 'r1' 'elem64':'elem64'
|   |   | `-BinaryOperator 0x212ff6ecb10 <line:67:17, line:154:60> 'unsigned long long' '|'
|   |   |   |-ParenExpr 0x212ff6ec8f8 <line:67:17, col:35> 'unsigned long long'
|   |   |   | `-BinaryOperator 0x212ff6ec8d8 <col:18, col:33> 'unsigned long long' '<<'
|   |   |   |   |-ParenExpr 0x212ff6ec890 <col:18, col:30> 'unsigned long long'
|   |   |   |   | `-BinaryOperator 0x212ff6ec870 <col:19, col:29> 'unsigned long long' '+'
|   |   |   |   |   |-IntegerLiteral 0x212ff6ec7a0 <col:19> 'unsigned long long' 1023
|   |   |   |   |   `-ImplicitCastExpr 0x212ff6ec858 <col:27, col:29> 'unsigned long long' <IntegralCast>
|   |   |   |   |     `-ParenExpr 0x212ff6ec838 <col:27, col:29> 'int'
|   |   |   |   |       `-BinaryOperator 0x212ff6ec818 <line:154:20, col:23> 'int' '+'
|   |   |   |   |         |-IntegerLiteral 0x212ff6ec7c8 <col:20> 'int' 52
|   |   |   |   |         `-IntegerLiteral 0x212ff6ec7f0 <col:23> 'int' 32
|   |   |   |   `-IntegerLiteral 0x212ff6ec8b0 <line:67:33> 'int' 52
|   |   |   `-ImplicitCastExpr 0x212ff6ecaf8 <line:154:29, col:60> 'unsigned long long' <IntegralCast>
|   |   |     `-ParenExpr 0x212ff6ecad8 <col:29, col:60> 'unsigned int'
|   |   |       `-BinaryOperator 0x212ff6ecab8 <line:70:21, line:154:50> 'unsigned int' '&'
|   |   |         |-ImplicitCastExpr 0x212ff6eca88 <line:70:21, col:39> 'u32':'unsigned int' <LValueToRValue>
|   |   |         | `-ParenExpr 0x212ff6eca40 <col:21, col:39> 'const u32':'const unsigned int' lvalue
|   |   |         |   `-UnaryOperator 0x212ff6eca28 <col:22, col:38> 'const u32':'const unsigned int' lvalue prefix '*' cannot overflow
|   |   |         |     `-CStyleCastExpr 0x212ff6eca00 <col:23, col:38> 'const u32 *' <BitCast>
|   |   |         |       `-ParenExpr 0x212ff6ec9e0 <col:36, col:38> 'const unsigned char *'
|   |   |         |         `-UnaryOperator 0x212ff6ec998 <line:154:38, col:44> 'const unsigned char *' prefix '&' cannot overflow
|   |   |         |           `-ArraySubscriptExpr 0x212ff6ec978 <col:39, col:44> 'const unsigned char' lvalue
|   |   |         |             |-ImplicitCastExpr 0x212ff6ec960 <col:39> 'const unsigned char *':'const unsigned char *' <LValueToRValue>
|   |   |         |             | `-DeclRefExpr 0x212ff6ec918 <col:39> 'const unsigned char *':'const unsigned char *' lvalue ParmVar 0x212ff6dfe00 'key' 'const unsigned char *':'const unsigned char *'
|   |   |         |             `-IntegerLiteral 0x212ff6ec938 <col:43> 'int' 4
|   |   |         `-ImplicitCastExpr 0x212ff6ecaa0 <col:50> 'unsigned int' <IntegralCast>
|   |   |           `-IntegerLiteral 0x212ff6eca60 <col:50> 'int' 268435452
|   |   |-BinaryOperator 0x212ff6ecf48 <line:155:9, col:60> 'u64':'unsigned long long' '='
|   |   | |-MemberExpr 0x212ff6ecb88 <col:9, col:12> 'u64':'unsigned long long' lvalue .u 0x212ff6df520
|   |   | | `-DeclRefExpr 0x212ff6ecb50 <col:9> 'elem64':'elem64' lvalue Var 0x212ff6ea380 'r2' 'elem64':'elem64'
|   |   | `-BinaryOperator 0x212ff6ecf28 <line:67:17, line:155:60> 'unsigned long long' '|'
|   |   |   |-ParenExpr 0x212ff6ecd10 <line:67:17, col:35> 'unsigned long long'
|   |   |   | `-BinaryOperator 0x212ff6eccf0 <col:18, col:33> 'unsigned long long' '<<'
|   |   |   |   |-ParenExpr 0x212ff6ecca8 <col:18, col:30> 'unsigned long long'
|   |   |   |   | `-BinaryOperator 0x212ff6ecc88 <col:19, col:29> 'unsigned long long' '+'
|   |   |   |   |   |-IntegerLiteral 0x212ff6ecbb8 <col:19> 'unsigned long long' 1023
|   |   |   |   |   `-ImplicitCastExpr 0x212ff6ecc70 <col:27, col:29> 'unsigned long long' <IntegralCast>
|   |   |   |   |     `-ParenExpr 0x212ff6ecc50 <col:27, col:29> 'int'
|   |   |   |   |       `-BinaryOperator 0x212ff6ecc30 <line:155:20, col:23> 'int' '+'
|   |   |   |   |         |-IntegerLiteral 0x212ff6ecbe0 <col:20> 'int' 52
|   |   |   |   |         `-IntegerLiteral 0x212ff6ecc08 <col:23> 'int' 64
|   |   |   |   `-IntegerLiteral 0x212ff6eccc8 <line:67:33> 'int' 52
|   |   |   `-ImplicitCastExpr 0x212ff6ecf10 <line:155:29, col:60> 'unsigned long long' <IntegralCast>
|   |   |     `-ParenExpr 0x212ff6ecef0 <col:29, col:60> 'unsigned int'
|   |   |       `-BinaryOperator 0x212ff6eced0 <line:70:21, line:155:50> 'unsigned int' '&'
|   |   |         |-ImplicitCastExpr 0x212ff6ecea0 <line:70:21, col:39> 'u32':'unsigned int' <LValueToRValue>
|   |   |         | `-ParenExpr 0x212ff6ece58 <col:21, col:39> 'const u32':'const unsigned int' lvalue
|   |   |         |   `-UnaryOperator 0x212ff6ece40 <col:22, col:38> 'const u32':'const unsigned int' lvalue prefix '*' cannot overflow
|   |   |         |     `-CStyleCastExpr 0x212ff6ece18 <col:23, col:38> 'const u32 *' <BitCast>
|   |   |         |       `-ParenExpr 0x212ff6ecdf8 <col:36, col:38> 'const unsigned char *'
|   |   |         |         `-UnaryOperator 0x212ff6ecdb0 <line:155:38, col:44> 'const unsigned char *' prefix '&' cannot overflow
|   |   |         |           `-ArraySubscriptExpr 0x212ff6ecd90 <col:39, col:44> 'const unsigned char' lvalue
|   |   |         |             |-ImplicitCastExpr 0x212ff6ecd78 <col:39> 'const unsigned char *':'const unsigned char *' <LValueToRValue>
|   |   |         |             | `-DeclRefExpr 0x212ff6ecd30 <col:39> 'const unsigned char *':'const unsigned char *' lvalue ParmVar 0x212ff6dfe00 'key' 'const unsigned char *':'const unsigned char *'
|   |   |         |             `-IntegerLiteral 0x212ff6ecd50 <col:43> 'int' 8
|   |   |         `-ImplicitCastExpr 0x212ff6eceb8 <col:50> 'unsigned int' <IntegralCast>
|   |   |           `-IntegerLiteral 0x212ff6ece78 <col:50> 'int' 268435452
|   |   |-BinaryOperator 0x212ff6ed378 <line:156:9, col:60> 'u64':'unsigned long long' '='
|   |   | |-MemberExpr 0x212ff6ecfa0 <col:9, col:12> 'u64':'unsigned long long' lvalue .u 0x212ff6df520
|   |   | | `-DeclRefExpr 0x212ff6ecf68 <col:9> 'elem64':'elem64' lvalue Var 0x212ff6ea3f8 'r3' 'elem64':'elem64'
|   |   | `-BinaryOperator 0x212ff6ed358 <line:67:17, line:156:60> 'unsigned long long' '|'
|   |   |   |-ParenExpr 0x212ff6ed128 <line:67:17, col:35> 'unsigned long long'
|   |   |   | `-BinaryOperator 0x212ff6ed108 <col:18, col:33> 'unsigned long long' '<<'
|   |   |   |   |-ParenExpr 0x212ff6ed0c0 <col:18, col:30> 'unsigned long long'
|   |   |   |   | `-BinaryOperator 0x212ff6ed0a0 <col:19, col:29> 'unsigned long long' '+'
|   |   |   |   |   |-IntegerLiteral 0x212ff6ecfd0 <col:19> 'unsigned long long' 1023
|   |   |   |   |   `-ImplicitCastExpr 0x212ff6ed088 <col:27, col:29> 'unsigned long long' <IntegralCast>
|   |   |   |   |     `-ParenExpr 0x212ff6ed068 <col:27, col:29> 'int'
|   |   |   |   |       `-BinaryOperator 0x212ff6ed048 <line:156:20, col:23> 'int' '+'
|   |   |   |   |         |-IntegerLiteral 0x212ff6ecff8 <col:20> 'int' 52
|   |   |   |   |         `-IntegerLiteral 0x212ff6ed020 <col:23> 'int' 96
|   |   |   |   `-IntegerLiteral 0x212ff6ed0e0 <line:67:33> 'int' 52
|   |   |   `-ImplicitCastExpr 0x212ff6ed340 <line:156:29, col:60> 'unsigned long long' <IntegralCast>
|   |   |     `-ParenExpr 0x212ff6ed320 <col:29, col:60> 'unsigned int'
|   |   |       `-BinaryOperator 0x212ff6ed300 <line:70:21, line:156:50> 'unsigned int' '&'
|   |   |         |-ImplicitCastExpr 0x212ff6ed2d0 <line:70:21, col:39> 'u32':'unsigned int' <LValueToRValue>
|   |   |         | `-ParenExpr 0x212ff6ed288 <col:21, col:39> 'const u32':'const unsigned int' lvalue
|   |   |         |   `-UnaryOperator 0x212ff6ed270 <col:22, col:38> 'const u32':'const unsigned int' lvalue prefix '*' cannot overflow
|   |   |         |     `-CStyleCastExpr 0x212ff6ed248 <col:23, col:38> 'const u32 *' <BitCast>
|   |   |         |       `-ParenExpr 0x212ff6ed228 <col:36, col:38> 'const unsigned char *'
|   |   |         |         `-UnaryOperator 0x212ff6ed1e0 <line:156:38, col:45> 'const unsigned char *' prefix '&' cannot overflow
|   |   |         |           `-ArraySubscriptExpr 0x212ff6ed1c0 <col:39, col:45> 'const unsigned char' lvalue
|   |   |         |             |-ImplicitCastExpr 0x212ff6ed190 <col:39> 'const unsigned char *':'const unsigned char *' <LValueToRValue>
|   |   |         |             | `-DeclRefExpr 0x212ff6ed148 <col:39> 'const unsigned char *':'const unsigned char *' lvalue ParmVar 0x212ff6dfe00 'key' 'const unsigned char *':'const unsigned char *'
|   |   |         |             `-IntegerLiteral 0x212ff6ed168 <col:43> 'int' 12
|   |   |         `-ImplicitCastExpr 0x212ff6ed2e8 <col:50> 'unsigned int' <IntegralCast>
|   |   |           `-IntegerLiteral 0x212ff6ed2a8 <col:50> 'int' 268435452
|   |   |-BinaryOperator 0x212ff6ed798 <line:158:9, line:60:37> 'double' '='
|   |   | |-ArraySubscriptExpr 0x212ff6ed470 <line:158:9, col:16> 'double' lvalue
|   |   | | |-ImplicitCastExpr 0x212ff6ed458 <col:9, col:13> 'double *' <ArrayToPointerDecay>
|   |   | | | `-MemberExpr 0x212ff6ed3d0 <col:9, col:13> 'double [8]' lvalue ->r 0x212ff6df950
|   |   | | |   `-ImplicitCastExpr 0x212ff6ed3b8 <col:9> 'poly1305_internal *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x212ff6ed398 <col:9> 'poly1305_internal *' lvalue Var 0x212ff6ea190 'st' 'poly1305_internal *'
|   |   | | `-IntegerLiteral 0x212ff6ed400 <col:15> 'int' 0
|   |   | `-BinaryOperator 0x212ff6ed778 <col:20, line:60:37> 'double' '-'
|   |   |   |-ImplicitCastExpr 0x212ff6ed760 <line:158:20, col:23> 'double' <LValueToRValue>
|   |   |   | `-MemberExpr 0x212ff6ed4b0 <col:20, col:23> 'double' lvalue .d 0x212ff6df498
|   |   |   |   `-DeclRefExpr 0x212ff6ed490 <col:20> 'elem64':'elem64' lvalue Var 0x212ff6ea290 'r0' 'elem64':'elem64'
|   |   |   `-BinaryOperator 0x212ff6ed740 <line:60:17, col:37> 'double' '*'
|   |   |     |-ParenExpr 0x212ff6ed5f0 <col:17, col:37> 'double'
|   |   |     | `-CStyleCastExpr 0x212ff6ed5c8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     |   `-ParenExpr 0x212ff6ed5a8 <col:26, col:36> 'unsigned long long'
|   |   |     |     `-BinaryOperator 0x212ff6ed550 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     |       |-IntegerLiteral 0x212ff6ed4e0 <col:27> 'unsigned long long' 1
|   |   |     |       `-ParenExpr 0x212ff6ed530 <col:33, col:35> 'int'
|   |   |     |         `-IntegerLiteral 0x212ff6ed508 <line:158:31> 'int' 52
|   |   |     `-ParenExpr 0x212ff6ed720 <line:60:17, col:37> 'double'
|   |   |       `-CStyleCastExpr 0x212ff6ed6f8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         `-ParenExpr 0x212ff6ed6d8 <col:26, col:36> 'unsigned long long'
|   |   |           `-BinaryOperator 0x212ff6ed680 <col:27, col:35> 'unsigned long long' '<<'
|   |   |             |-IntegerLiteral 0x212ff6ed610 <col:27> 'unsigned long long' 1
|   |   |             `-ParenExpr 0x212ff6ed660 <col:33, col:35> 'int'
|   |   |               `-IntegerLiteral 0x212ff6ed638 <line:61:19> 'int' 0
|   |   |-BinaryOperator 0x212ff6edb88 <line:159:9, line:60:37> 'double' '='
|   |   | |-ArraySubscriptExpr 0x212ff6ed860 <line:159:9, col:16> 'double' lvalue
|   |   | | |-ImplicitCastExpr 0x212ff6ed848 <col:9, col:13> 'double *' <ArrayToPointerDecay>
|   |   | | | `-MemberExpr 0x212ff6ed7f0 <col:9, col:13> 'double [8]' lvalue ->r 0x212ff6df950
|   |   | | |   `-ImplicitCastExpr 0x212ff6ed7d8 <col:9> 'poly1305_internal *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x212ff6ed7b8 <col:9> 'poly1305_internal *' lvalue Var 0x212ff6ea190 'st' 'poly1305_internal *'
|   |   | | `-IntegerLiteral 0x212ff6ed820 <col:15> 'int' 2
|   |   | `-BinaryOperator 0x212ff6edb68 <col:20, line:60:37> 'double' '-'
|   |   |   |-ImplicitCastExpr 0x212ff6edb50 <line:159:20, col:23> 'double' <LValueToRValue>
|   |   |   | `-MemberExpr 0x212ff6ed8a0 <col:20, col:23> 'double' lvalue .d 0x212ff6df498
|   |   |   |   `-DeclRefExpr 0x212ff6ed880 <col:20> 'elem64':'elem64' lvalue Var 0x212ff6ea308 'r1' 'elem64':'elem64'
|   |   |   `-BinaryOperator 0x212ff6edb30 <line:60:17, col:37> 'double' '*'
|   |   |     |-ParenExpr 0x212ff6ed9e0 <col:17, col:37> 'double'
|   |   |     | `-CStyleCastExpr 0x212ff6ed9b8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     |   `-ParenExpr 0x212ff6ed998 <col:26, col:36> 'unsigned long long'
|   |   |     |     `-BinaryOperator 0x212ff6ed940 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     |       |-IntegerLiteral 0x212ff6ed8d0 <col:27> 'unsigned long long' 1
|   |   |     |       `-ParenExpr 0x212ff6ed920 <col:33, col:35> 'int'
|   |   |     |         `-IntegerLiteral 0x212ff6ed8f8 <line:159:31> 'int' 52
|   |   |     `-ParenExpr 0x212ff6edb10 <line:60:17, col:37> 'double'
|   |   |       `-CStyleCastExpr 0x212ff6edae8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         `-ParenExpr 0x212ff6edac8 <col:26, col:36> 'unsigned long long'
|   |   |           `-BinaryOperator 0x212ff6eda70 <col:27, col:35> 'unsigned long long' '<<'
|   |   |             |-IntegerLiteral 0x212ff6eda00 <col:27> 'unsigned long long' 1
|   |   |             `-ParenExpr 0x212ff6eda50 <col:33, col:35> 'int'
|   |   |               `-IntegerLiteral 0x212ff6eda28 <line:62:20> 'int' 32
|   |   |-BinaryOperator 0x212ff6ee0e8 <line:160:9, line:63:30> 'double' '='
|   |   | |-ArraySubscriptExpr 0x212ff6edc50 <line:160:9, col:16> 'double' lvalue
|   |   | | |-ImplicitCastExpr 0x212ff6edc38 <col:9, col:13> 'double *' <ArrayToPointerDecay>
|   |   | | | `-MemberExpr 0x212ff6edbe0 <col:9, col:13> 'double [8]' lvalue ->r 0x212ff6df950
|   |   | | |   `-ImplicitCastExpr 0x212ff6edbc8 <col:9> 'poly1305_internal *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x212ff6edba8 <col:9> 'poly1305_internal *' lvalue Var 0x212ff6ea190 'st' 'poly1305_internal *'
|   |   | | `-IntegerLiteral 0x212ff6edc10 <col:15> 'int' 4
|   |   | `-BinaryOperator 0x212ff6ee0c8 <col:20, line:63:30> 'double' '-'
|   |   |   |-ImplicitCastExpr 0x212ff6ee0b0 <line:160:20, col:23> 'double' <LValueToRValue>
|   |   |   | `-MemberExpr 0x212ff6edc90 <col:20, col:23> 'double' lvalue .d 0x212ff6df498
|   |   |   |   `-DeclRefExpr 0x212ff6edc70 <col:20> 'elem64':'elem64' lvalue Var 0x212ff6ea380 'r2' 'elem64':'elem64'
|   |   |   `-BinaryOperator 0x212ff6ee090 <line:60:17, line:63:30> 'double' '*'
|   |   |     |-ParenExpr 0x212ff6eddd0 <line:60:17, col:37> 'double'
|   |   |     | `-CStyleCastExpr 0x212ff6edda8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     |   `-ParenExpr 0x212ff6edd88 <col:26, col:36> 'unsigned long long'
|   |   |     |     `-BinaryOperator 0x212ff6edd30 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     |       |-IntegerLiteral 0x212ff6edcc0 <col:27> 'unsigned long long' 1
|   |   |     |       `-ParenExpr 0x212ff6edd10 <col:33, col:35> 'int'
|   |   |     |         `-IntegerLiteral 0x212ff6edce8 <line:160:31> 'int' 52
|   |   |     `-ParenExpr 0x212ff6ee070 <line:63:16, col:30> 'double'
|   |   |       `-BinaryOperator 0x212ff6ee050 <line:60:17, col:37> 'double' '*'
|   |   |         |-ParenExpr 0x212ff6edf00 <col:17, col:37> 'double'
|   |   |         | `-CStyleCastExpr 0x212ff6eded8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         |   `-ParenExpr 0x212ff6edeb8 <col:26, col:36> 'unsigned long long'
|   |   |         |     `-BinaryOperator 0x212ff6ede60 <col:27, col:35> 'unsigned long long' '<<'
|   |   |         |       |-IntegerLiteral 0x212ff6eddf0 <col:27> 'unsigned long long' 1
|   |   |         |       `-ParenExpr 0x212ff6ede40 <col:33, col:35> 'int'
|   |   |         |         `-IntegerLiteral 0x212ff6ede18 <line:62:20> 'int' 32
|   |   |         `-ParenExpr 0x212ff6ee030 <line:60:17, col:37> 'double'
|   |   |           `-CStyleCastExpr 0x212ff6ee008 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |             `-ParenExpr 0x212ff6edfe8 <col:26, col:36> 'unsigned long long'
|   |   |               `-BinaryOperator 0x212ff6edf90 <col:27, col:35> 'unsigned long long' '<<'
|   |   |                 |-IntegerLiteral 0x212ff6edf20 <col:27> 'unsigned long long' 1
|   |   |                 `-ParenExpr 0x212ff6edf70 <col:33, col:35> 'int'
|   |   |                   `-IntegerLiteral 0x212ff6edf48 <line:63:27> 'int' 32
|   |   |-BinaryOperator 0x212ff6ee7d8 <line:161:9, line:64:30> 'double' '='
|   |   | |-ArraySubscriptExpr 0x212ff6ee1d0 <line:161:9, col:16> 'double' lvalue
|   |   | | |-ImplicitCastExpr 0x212ff6ee198 <col:9, col:13> 'double *' <ArrayToPointerDecay>
|   |   | | | `-MemberExpr 0x212ff6ee140 <col:9, col:13> 'double [8]' lvalue ->r 0x212ff6df950
|   |   | | |   `-ImplicitCastExpr 0x212ff6ee128 <col:9> 'poly1305_internal *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x212ff6ee108 <col:9> 'poly1305_internal *' lvalue Var 0x212ff6ea190 'st' 'poly1305_internal *'
|   |   | | `-IntegerLiteral 0x212ff6ee170 <col:15> 'int' 6
|   |   | `-BinaryOperator 0x212ff6ee7b8 <col:20, line:64:30> 'double' '-'
|   |   |   |-ImplicitCastExpr 0x212ff6ee7a0 <line:161:20, col:23> 'double' <LValueToRValue>
|   |   |   | `-MemberExpr 0x212ff6ee210 <col:20, col:23> 'double' lvalue .d 0x212ff6df498
|   |   |   |   `-DeclRefExpr 0x212ff6ee1f0 <col:20> 'elem64':'elem64' lvalue Var 0x212ff6ea3f8 'r3' 'elem64':'elem64'
|   |   |   `-BinaryOperator 0x212ff6ee780 <line:60:17, line:64:30> 'double' '*'
|   |   |     |-ParenExpr 0x212ff6ee350 <line:60:17, col:37> 'double'
|   |   |     | `-CStyleCastExpr 0x212ff6ee328 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     |   `-ParenExpr 0x212ff6ee308 <col:26, col:36> 'unsigned long long'
|   |   |     |     `-BinaryOperator 0x212ff6ee2b0 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     |       |-IntegerLiteral 0x212ff6ee240 <col:27> 'unsigned long long' 1
|   |   |     |       `-ParenExpr 0x212ff6ee290 <col:33, col:35> 'int'
|   |   |     |         `-IntegerLiteral 0x212ff6ee268 <line:161:31> 'int' 52
|   |   |     `-ParenExpr 0x212ff6ee760 <line:64:16, col:30> 'double'
|   |   |       `-BinaryOperator 0x212ff6ee740 <line:63:16, line:60:37> 'double' '*'
|   |   |         |-ParenExpr 0x212ff6ee5f0 <line:63:16, col:30> 'double'
|   |   |         | `-BinaryOperator 0x212ff6ee5d0 <line:60:17, col:37> 'double' '*'
|   |   |         |   |-ParenExpr 0x212ff6ee480 <col:17, col:37> 'double'
|   |   |         |   | `-CStyleCastExpr 0x212ff6ee458 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         |   |   `-ParenExpr 0x212ff6ee438 <col:26, col:36> 'unsigned long long'
|   |   |         |   |     `-BinaryOperator 0x212ff6ee3e0 <col:27, col:35> 'unsigned long long' '<<'
|   |   |         |   |       |-IntegerLiteral 0x212ff6ee370 <col:27> 'unsigned long long' 1
|   |   |         |   |       `-ParenExpr 0x212ff6ee3c0 <col:33, col:35> 'int'
|   |   |         |   |         `-IntegerLiteral 0x212ff6ee398 <line:62:20> 'int' 32
|   |   |         |   `-ParenExpr 0x212ff6ee5b0 <line:60:17, col:37> 'double'
|   |   |         |     `-CStyleCastExpr 0x212ff6ee588 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         |       `-ParenExpr 0x212ff6ee568 <col:26, col:36> 'unsigned long long'
|   |   |         |         `-BinaryOperator 0x212ff6ee510 <col:27, col:35> 'unsigned long long' '<<'
|   |   |         |           |-IntegerLiteral 0x212ff6ee4a0 <col:27> 'unsigned long long' 1
|   |   |         |           `-ParenExpr 0x212ff6ee4f0 <col:33, col:35> 'int'
|   |   |         |             `-IntegerLiteral 0x212ff6ee4c8 <line:63:27> 'int' 32
|   |   |         `-ParenExpr 0x212ff6ee720 <line:60:17, col:37> 'double'
|   |   |           `-CStyleCastExpr 0x212ff6ee6f8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |             `-ParenExpr 0x212ff6ee6d8 <col:26, col:36> 'unsigned long long'
|   |   |               `-BinaryOperator 0x212ff6ee680 <col:27, col:35> 'unsigned long long' '<<'
|   |   |                 |-IntegerLiteral 0x212ff6ee610 <col:27> 'unsigned long long' 1
|   |   |                 `-ParenExpr 0x212ff6ee660 <col:33, col:35> 'int'
|   |   |                   `-IntegerLiteral 0x212ff6ee638 <line:64:27> 'int' 32
|   |   |-BinaryOperator 0x212ff6eefa8 <line:163:9, col:42> 'double' '='
|   |   | |-ArraySubscriptExpr 0x212ff6ee8a0 <col:9, col:16> 'double' lvalue
|   |   | | |-ImplicitCastExpr 0x212ff6ee888 <col:9, col:13> 'double *' <ArrayToPointerDecay>
|   |   | | | `-MemberExpr 0x212ff6ee830 <col:9, col:13> 'double [6]' lvalue ->s 0x212ff6dfa50
|   |   | | |   `-ImplicitCastExpr 0x212ff6ee818 <col:9> 'poly1305_internal *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x212ff6ee7f8 <col:9> 'poly1305_internal *' lvalue Var 0x212ff6ea190 'st' 'poly1305_internal *'
|   |   | | `-IntegerLiteral 0x212ff6ee860 <col:15> 'int' 0
|   |   | `-BinaryOperator 0x212ff6eef88 <col:20, col:42> 'double' '*'
|   |   |   |-ImplicitCastExpr 0x212ff6eef70 <col:20, col:27> 'double' <LValueToRValue>
|   |   |   | `-ArraySubscriptExpr 0x212ff6ee968 <col:20, col:27> 'double' lvalue
|   |   |   |   |-ImplicitCastExpr 0x212ff6ee950 <col:20, col:24> 'double *' <ArrayToPointerDecay>
|   |   |   |   | `-MemberExpr 0x212ff6ee8f8 <col:20, col:24> 'double [8]' lvalue ->r 0x212ff6df950
|   |   |   |   |   `-ImplicitCastExpr 0x212ff6ee8e0 <col:20> 'poly1305_internal *' <LValueToRValue>
|   |   |   |   |     `-DeclRefExpr 0x212ff6ee8c0 <col:20> 'poly1305_internal *' lvalue Var 0x212ff6ea190 'st' 'poly1305_internal *'
|   |   |   |   `-IntegerLiteral 0x212ff6ee928 <col:26> 'int' 2
|   |   |   `-ParenExpr 0x212ff6eef50 <col:31, col:42> 'double'
|   |   |     `-BinaryOperator 0x212ff6eef30 <col:32, line:65:31> 'double' '/'
|   |   |       |-FloatingLiteral 0x212ff6ee988 <line:163:32> 'double' 5.000000e+00
|   |   |       `-ParenExpr 0x212ff6eef10 <line:65:17, col:31> 'double'
|   |   |         `-BinaryOperator 0x212ff6eeef0 <line:64:16, line:60:37> 'double' '*'
|   |   |           |-ParenExpr 0x212ff6eeda0 <line:64:16, col:30> 'double'
|   |   |           | `-BinaryOperator 0x212ff6eed80 <line:63:16, line:60:37> 'double' '*'
|   |   |           |   |-ParenExpr 0x212ff6eec30 <line:63:16, col:30> 'double'
|   |   |           |   | `-BinaryOperator 0x212ff6eec10 <line:60:17, col:37> 'double' '*'
|   |   |           |   |   |-ParenExpr 0x212ff6eeac0 <col:17, col:37> 'double'
|   |   |           |   |   | `-CStyleCastExpr 0x212ff6eea98 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |           |   |   |   `-ParenExpr 0x212ff6eea78 <col:26, col:36> 'unsigned long long'
|   |   |           |   |   |     `-BinaryOperator 0x212ff6eea20 <col:27, col:35> 'unsigned long long' '<<'
|   |   |           |   |   |       |-IntegerLiteral 0x212ff6ee9b0 <col:27> 'unsigned long long' 1
|   |   |           |   |   |       `-ParenExpr 0x212ff6eea00 <col:33, col:35> 'int'
|   |   |           |   |   |         `-IntegerLiteral 0x212ff6ee9d8 <line:62:20> 'int' 32
|   |   |           |   |   `-ParenExpr 0x212ff6eebf0 <line:60:17, col:37> 'double'
|   |   |           |   |     `-CStyleCastExpr 0x212ff6eebc8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |           |   |       `-ParenExpr 0x212ff6eeba8 <col:26, col:36> 'unsigned long long'
|   |   |           |   |         `-BinaryOperator 0x212ff6eeb50 <col:27, col:35> 'unsigned long long' '<<'
|   |   |           |   |           |-IntegerLiteral 0x212ff6eeae0 <col:27> 'unsigned long long' 1
|   |   |           |   |           `-ParenExpr 0x212ff6eeb30 <col:33, col:35> 'int'
|   |   |           |   |             `-IntegerLiteral 0x212ff6eeb08 <line:63:27> 'int' 32
|   |   |           |   `-ParenExpr 0x212ff6eed60 <line:60:17, col:37> 'double'
|   |   |           |     `-CStyleCastExpr 0x212ff6eed38 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |           |       `-ParenExpr 0x212ff6eed18 <col:26, col:36> 'unsigned long long'
|   |   |           |         `-BinaryOperator 0x212ff6eecc0 <col:27, col:35> 'unsigned long long' '<<'
|   |   |           |           |-IntegerLiteral 0x212ff6eec50 <col:27> 'unsigned long long' 1
|   |   |           |           `-ParenExpr 0x212ff6eeca0 <col:33, col:35> 'int'
|   |   |           |             `-IntegerLiteral 0x212ff6eec78 <line:64:27> 'int' 32
|   |   |           `-ParenExpr 0x212ff6eeed0 <line:60:17, col:37> 'double'
|   |   |             `-CStyleCastExpr 0x212ff6eeea8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |               `-ParenExpr 0x212ff6eee88 <col:26, col:36> 'unsigned long long'
|   |   |                 `-BinaryOperator 0x212ff6eee30 <col:27, col:35> 'unsigned long long' '<<'
|   |   |                   |-IntegerLiteral 0x212ff6eedc0 <col:27> 'unsigned long long' 1
|   |   |                   `-ParenExpr 0x212ff6eee10 <col:33, col:35> 'int'
|   |   |                     `-IntegerLiteral 0x212ff6eede8 <line:65:28> 'int' 34
|   |   |-BinaryOperator 0x212ff6e7708 <line:164:9, col:42> 'double' '='
|   |   | |-ArraySubscriptExpr 0x212ff6ef070 <col:9, col:16> 'double' lvalue
|   |   | | |-ImplicitCastExpr 0x212ff6ef058 <col:9, col:13> 'double *' <ArrayToPointerDecay>
|   |   | | | `-MemberExpr 0x212ff6ef000 <col:9, col:13> 'double [6]' lvalue ->s 0x212ff6dfa50
|   |   | | |   `-ImplicitCastExpr 0x212ff6eefe8 <col:9> 'poly1305_internal *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x212ff6eefc8 <col:9> 'poly1305_internal *' lvalue Var 0x212ff6ea190 'st' 'poly1305_internal *'
|   |   | | `-IntegerLiteral 0x212ff6ef030 <col:15> 'int' 2
|   |   | `-BinaryOperator 0x212ff6e76e8 <col:20, col:42> 'double' '*'
|   |   |   |-ImplicitCastExpr 0x212ff6e76d0 <col:20, col:27> 'double' <LValueToRValue>
|   |   |   | `-ArraySubscriptExpr 0x212ff6ef138 <col:20, col:27> 'double' lvalue
|   |   |   |   |-ImplicitCastExpr 0x212ff6ef120 <col:20, col:24> 'double *' <ArrayToPointerDecay>
|   |   |   |   | `-MemberExpr 0x212ff6ef0c8 <col:20, col:24> 'double [8]' lvalue ->r 0x212ff6df950
|   |   |   |   |   `-ImplicitCastExpr 0x212ff6ef0b0 <col:20> 'poly1305_internal *' <LValueToRValue>
|   |   |   |   |     `-DeclRefExpr 0x212ff6ef090 <col:20> 'poly1305_internal *' lvalue Var 0x212ff6ea190 'st' 'poly1305_internal *'
|   |   |   |   `-IntegerLiteral 0x212ff6ef0f8 <col:26> 'int' 4
|   |   |   `-ParenExpr 0x212ff6e76b0 <col:31, col:42> 'double'
|   |   |     `-BinaryOperator 0x212ff6e7690 <col:32, line:65:31> 'double' '/'
|   |   |       |-FloatingLiteral 0x212ff6ef158 <line:164:32> 'double' 5.000000e+00
|   |   |       `-ParenExpr 0x212ff6e7670 <line:65:17, col:31> 'double'
|   |   |         `-BinaryOperator 0x212ff6e7650 <line:64:16, line:60:37> 'double' '*'
|   |   |           |-ParenExpr 0x212ff6e7500 <line:64:16, col:30> 'double'
|   |   |           | `-BinaryOperator 0x212ff6e74e0 <line:63:16, line:60:37> 'double' '*'
|   |   |           |   |-ParenExpr 0x212ff6e7390 <line:63:16, col:30> 'double'
|   |   |           |   | `-BinaryOperator 0x212ff6e7370 <line:60:17, col:37> 'double' '*'
|   |   |           |   |   |-ParenExpr 0x212ff6e7220 <col:17, col:37> 'double'
|   |   |           |   |   | `-CStyleCastExpr 0x212ff6e71f8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |           |   |   |   `-ParenExpr 0x212ff6e71d8 <col:26, col:36> 'unsigned long long'
|   |   |           |   |   |     `-BinaryOperator 0x212ff6e7180 <col:27, col:35> 'unsigned long long' '<<'
|   |   |           |   |   |       |-IntegerLiteral 0x212ff6ef180 <col:27> 'unsigned long long' 1
|   |   |           |   |   |       `-ParenExpr 0x212ff6e7160 <col:33, col:35> 'int'
|   |   |           |   |   |         `-IntegerLiteral 0x212ff6ef1a8 <line:62:20> 'int' 32
|   |   |           |   |   `-ParenExpr 0x212ff6e7350 <line:60:17, col:37> 'double'
|   |   |           |   |     `-CStyleCastExpr 0x212ff6e7328 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |           |   |       `-ParenExpr 0x212ff6e7308 <col:26, col:36> 'unsigned long long'
|   |   |           |   |         `-BinaryOperator 0x212ff6e72b0 <col:27, col:35> 'unsigned long long' '<<'
|   |   |           |   |           |-IntegerLiteral 0x212ff6e7240 <col:27> 'unsigned long long' 1
|   |   |           |   |           `-ParenExpr 0x212ff6e7290 <col:33, col:35> 'int'
|   |   |           |   |             `-IntegerLiteral 0x212ff6e7268 <line:63:27> 'int' 32
|   |   |           |   `-ParenExpr 0x212ff6e74c0 <line:60:17, col:37> 'double'
|   |   |           |     `-CStyleCastExpr 0x212ff6e7498 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |           |       `-ParenExpr 0x212ff6e7478 <col:26, col:36> 'unsigned long long'
|   |   |           |         `-BinaryOperator 0x212ff6e7420 <col:27, col:35> 'unsigned long long' '<<'
|   |   |           |           |-IntegerLiteral 0x212ff6e73b0 <col:27> 'unsigned long long' 1
|   |   |           |           `-ParenExpr 0x212ff6e7400 <col:33, col:35> 'int'
|   |   |           |             `-IntegerLiteral 0x212ff6e73d8 <line:64:27> 'int' 32
|   |   |           `-ParenExpr 0x212ff6e7630 <line:60:17, col:37> 'double'
|   |   |             `-CStyleCastExpr 0x212ff6e7608 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |               `-ParenExpr 0x212ff6e75e8 <col:26, col:36> 'unsigned long long'
|   |   |                 `-BinaryOperator 0x212ff6e7590 <col:27, col:35> 'unsigned long long' '<<'
|   |   |                   |-IntegerLiteral 0x212ff6e7520 <col:27> 'unsigned long long' 1
|   |   |                   `-ParenExpr 0x212ff6e7570 <col:33, col:35> 'int'
|   |   |                     `-IntegerLiteral 0x212ff6e7548 <line:65:28> 'int' 34
|   |   |-BinaryOperator 0x212ff6e7ed8 <line:165:9, col:42> 'double' '='
|   |   | |-ArraySubscriptExpr 0x212ff6e77d0 <col:9, col:16> 'double' lvalue
|   |   | | |-ImplicitCastExpr 0x212ff6e77b8 <col:9, col:13> 'double *' <ArrayToPointerDecay>
|   |   | | | `-MemberExpr 0x212ff6e7760 <col:9, col:13> 'double [6]' lvalue ->s 0x212ff6dfa50
|   |   | | |   `-ImplicitCastExpr 0x212ff6e7748 <col:9> 'poly1305_internal *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x212ff6e7728 <col:9> 'poly1305_internal *' lvalue Var 0x212ff6ea190 'st' 'poly1305_internal *'
|   |   | | `-IntegerLiteral 0x212ff6e7790 <col:15> 'int' 4
|   |   | `-BinaryOperator 0x212ff6e7eb8 <col:20, col:42> 'double' '*'
|   |   |   |-ImplicitCastExpr 0x212ff6e7ea0 <col:20, col:27> 'double' <LValueToRValue>
|   |   |   | `-ArraySubscriptExpr 0x212ff6e7898 <col:20, col:27> 'double' lvalue
|   |   |   |   |-ImplicitCastExpr 0x212ff6e7880 <col:20, col:24> 'double *' <ArrayToPointerDecay>
|   |   |   |   | `-MemberExpr 0x212ff6e7828 <col:20, col:24> 'double [8]' lvalue ->r 0x212ff6df950
|   |   |   |   |   `-ImplicitCastExpr 0x212ff6e7810 <col:20> 'poly1305_internal *' <LValueToRValue>
|   |   |   |   |     `-DeclRefExpr 0x212ff6e77f0 <col:20> 'poly1305_internal *' lvalue Var 0x212ff6ea190 'st' 'poly1305_internal *'
|   |   |   |   `-IntegerLiteral 0x212ff6e7858 <col:26> 'int' 6
|   |   |   `-ParenExpr 0x212ff6e7e80 <col:31, col:42> 'double'
|   |   |     `-BinaryOperator 0x212ff6e7e60 <col:32, line:65:31> 'double' '/'
|   |   |       |-FloatingLiteral 0x212ff6e78b8 <line:165:32> 'double' 5.000000e+00
|   |   |       `-ParenExpr 0x212ff6e7e40 <line:65:17, col:31> 'double'
|   |   |         `-BinaryOperator 0x212ff6e7e20 <line:64:16, line:60:37> 'double' '*'
|   |   |           |-ParenExpr 0x212ff6e7cd0 <line:64:16, col:30> 'double'
|   |   |           | `-BinaryOperator 0x212ff6e7cb0 <line:63:16, line:60:37> 'double' '*'
|   |   |           |   |-ParenExpr 0x212ff6e7b60 <line:63:16, col:30> 'double'
|   |   |           |   | `-BinaryOperator 0x212ff6e7b40 <line:60:17, col:37> 'double' '*'
|   |   |           |   |   |-ParenExpr 0x212ff6e79f0 <col:17, col:37> 'double'
|   |   |           |   |   | `-CStyleCastExpr 0x212ff6e79c8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |           |   |   |   `-ParenExpr 0x212ff6e79a8 <col:26, col:36> 'unsigned long long'
|   |   |           |   |   |     `-BinaryOperator 0x212ff6e7950 <col:27, col:35> 'unsigned long long' '<<'
|   |   |           |   |   |       |-IntegerLiteral 0x212ff6e78e0 <col:27> 'unsigned long long' 1
|   |   |           |   |   |       `-ParenExpr 0x212ff6e7930 <col:33, col:35> 'int'
|   |   |           |   |   |         `-IntegerLiteral 0x212ff6e7908 <line:62:20> 'int' 32
|   |   |           |   |   `-ParenExpr 0x212ff6e7b20 <line:60:17, col:37> 'double'
|   |   |           |   |     `-CStyleCastExpr 0x212ff6e7af8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |           |   |       `-ParenExpr 0x212ff6e7ad8 <col:26, col:36> 'unsigned long long'
|   |   |           |   |         `-BinaryOperator 0x212ff6e7a80 <col:27, col:35> 'unsigned long long' '<<'
|   |   |           |   |           |-IntegerLiteral 0x212ff6e7a10 <col:27> 'unsigned long long' 1
|   |   |           |   |           `-ParenExpr 0x212ff6e7a60 <col:33, col:35> 'int'
|   |   |           |   |             `-IntegerLiteral 0x212ff6e7a38 <line:63:27> 'int' 32
|   |   |           |   `-ParenExpr 0x212ff6e7c90 <line:60:17, col:37> 'double'
|   |   |           |     `-CStyleCastExpr 0x212ff6e7c68 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |           |       `-ParenExpr 0x212ff6e7c48 <col:26, col:36> 'unsigned long long'
|   |   |           |         `-BinaryOperator 0x212ff6e7bf0 <col:27, col:35> 'unsigned long long' '<<'
|   |   |           |           |-IntegerLiteral 0x212ff6e7b80 <col:27> 'unsigned long long' 1
|   |   |           |           `-ParenExpr 0x212ff6e7bd0 <col:33, col:35> 'int'
|   |   |           |             `-IntegerLiteral 0x212ff6e7ba8 <line:64:27> 'int' 32
|   |   |           `-ParenExpr 0x212ff6e7e00 <line:60:17, col:37> 'double'
|   |   |             `-CStyleCastExpr 0x212ff6e7dd8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |               `-ParenExpr 0x212ff6e7db8 <col:26, col:36> 'unsigned long long'
|   |   |                 `-BinaryOperator 0x212ff6e7d60 <col:27, col:35> 'unsigned long long' '<<'
|   |   |                   |-IntegerLiteral 0x212ff6e7cf0 <col:27> 'unsigned long long' 1
|   |   |                   `-ParenExpr 0x212ff6e7d40 <col:33, col:35> 'int'
|   |   |                     `-IntegerLiteral 0x212ff6e7d18 <line:65:28> 'int' 34
|   |   |-BinaryOperator 0x212ff6ef930 <line:170:9, line:60:37> 'double' '='
|   |   | |-ArraySubscriptExpr 0x212ff6e7fa0 <line:170:9, col:16> 'double' lvalue
|   |   | | |-ImplicitCastExpr 0x212ff6e7f88 <col:9, col:13> 'double *' <ArrayToPointerDecay>
|   |   | | | `-MemberExpr 0x212ff6e7f30 <col:9, col:13> 'double [8]' lvalue ->r 0x212ff6df950
|   |   | | |   `-ImplicitCastExpr 0x212ff6e7f18 <col:9> 'poly1305_internal *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x212ff6e7ef8 <col:9> 'poly1305_internal *' lvalue Var 0x212ff6ea190 'st' 'poly1305_internal *'
|   |   | | `-IntegerLiteral 0x212ff6e7f60 <col:15> 'int' 1
|   |   | `-BinaryOperator 0x212ff6ef910 <col:20, line:60:37> 'double' '-'
|   |   |   |-ParenExpr 0x212ff6ef520 <line:170:20, col:52> 'double'
|   |   |   | `-BinaryOperator 0x212ff6ef500 <col:21, line:60:37> 'double' '+'
|   |   |   |   |-ImplicitCastExpr 0x212ff6ef4e8 <line:170:21, col:28> 'double' <LValueToRValue>
|   |   |   |   | `-ArraySubscriptExpr 0x212ff6e8068 <col:21, col:28> 'double' lvalue
|   |   |   |   |   |-ImplicitCastExpr 0x212ff6e8050 <col:21, col:25> 'double *' <ArrayToPointerDecay>
|   |   |   |   |   | `-MemberExpr 0x212ff6e7ff8 <col:21, col:25> 'double [8]' lvalue ->r 0x212ff6df950
|   |   |   |   |   |   `-ImplicitCastExpr 0x212ff6e7fe0 <col:21> 'poly1305_internal *' <LValueToRValue>
|   |   |   |   |   |     `-DeclRefExpr 0x212ff6e7fc0 <col:21> 'poly1305_internal *' lvalue Var 0x212ff6ea190 'st' 'poly1305_internal *'
|   |   |   |   |   `-IntegerLiteral 0x212ff6e8028 <col:27> 'int' 0
|   |   |   |   `-BinaryOperator 0x212ff6ef4c8 <line:60:17, col:37> 'double' '*'
|   |   |   |     |-BinaryOperator 0x212ff6ef378 <col:17, col:37> 'double' '*'
|   |   |   |     | |-ParenExpr 0x212ff6ef228 <col:17, col:37> 'double'
|   |   |   |     | | `-CStyleCastExpr 0x212ff6ef200 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |     | |   `-ParenExpr 0x212ff6ef1e0 <col:26, col:36> 'unsigned long long'
|   |   |   |     | |     `-BinaryOperator 0x212ff6e80f8 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |     | |       |-IntegerLiteral 0x212ff6e8088 <col:27> 'unsigned long long' 1
|   |   |   |     | |       `-ParenExpr 0x212ff6e80d8 <col:33, col:35> 'int'
|   |   |   |     | |         `-IntegerLiteral 0x212ff6e80b0 <line:170:36> 'int' 52
|   |   |   |     | `-ParenExpr 0x212ff6ef358 <line:60:17, col:37> 'double'
|   |   |   |     |   `-CStyleCastExpr 0x212ff6ef330 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |     |     `-ParenExpr 0x212ff6ef310 <col:26, col:36> 'unsigned long long'
|   |   |   |     |       `-BinaryOperator 0x212ff6ef2b8 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |     |         |-IntegerLiteral 0x212ff6ef248 <col:27> 'unsigned long long' 1
|   |   |   |     |         `-ParenExpr 0x212ff6ef298 <col:33, col:35> 'int'
|   |   |   |     |           `-IntegerLiteral 0x212ff6ef270 <line:170:44> 'int' 16
|   |   |   |     `-ParenExpr 0x212ff6ef4a8 <line:60:17, col:37> 'double'
|   |   |   |       `-CStyleCastExpr 0x212ff6ef480 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |         `-ParenExpr 0x212ff6ef460 <col:26, col:36> 'unsigned long long'
|   |   |   |           `-BinaryOperator 0x212ff6ef408 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |             |-IntegerLiteral 0x212ff6ef398 <col:27> 'unsigned long long' 1
|   |   |   |             `-ParenExpr 0x212ff6ef3e8 <col:33, col:35> 'int'
|   |   |   |               `-IntegerLiteral 0x212ff6ef3c0 <line:61:19> 'int' 0
|   |   |   `-BinaryOperator 0x212ff6ef8f0 <line:60:17, col:37> 'double' '*'
|   |   |     |-BinaryOperator 0x212ff6ef7a0 <col:17, col:37> 'double' '*'
|   |   |     | |-ParenExpr 0x212ff6ef650 <col:17, col:37> 'double'
|   |   |     | | `-CStyleCastExpr 0x212ff6ef628 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     | |   `-ParenExpr 0x212ff6ef608 <col:26, col:36> 'unsigned long long'
|   |   |     | |     `-BinaryOperator 0x212ff6ef5b0 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     | |       |-IntegerLiteral 0x212ff6ef540 <col:27> 'unsigned long long' 1
|   |   |     | |       `-ParenExpr 0x212ff6ef590 <col:33, col:35> 'int'
|   |   |     | |         `-IntegerLiteral 0x212ff6ef568 <line:171:36> 'int' 52
|   |   |     | `-ParenExpr 0x212ff6ef780 <line:60:17, col:37> 'double'
|   |   |     |   `-CStyleCastExpr 0x212ff6ef758 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     |     `-ParenExpr 0x212ff6ef738 <col:26, col:36> 'unsigned long long'
|   |   |     |       `-BinaryOperator 0x212ff6ef6e0 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     |         |-IntegerLiteral 0x212ff6ef670 <col:27> 'unsigned long long' 1
|   |   |     |         `-ParenExpr 0x212ff6ef6c0 <col:33, col:35> 'int'
|   |   |     |           `-IntegerLiteral 0x212ff6ef698 <line:171:44> 'int' 16
|   |   |     `-ParenExpr 0x212ff6ef8d0 <line:60:17, col:37> 'double'
|   |   |       `-CStyleCastExpr 0x212ff6ef8a8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         `-ParenExpr 0x212ff6ef888 <col:26, col:36> 'unsigned long long'
|   |   |           `-BinaryOperator 0x212ff6ef830 <col:27, col:35> 'unsigned long long' '<<'
|   |   |             |-IntegerLiteral 0x212ff6ef7c0 <col:27> 'unsigned long long' 1
|   |   |             `-ParenExpr 0x212ff6ef810 <col:33, col:35> 'int'
|   |   |               `-IntegerLiteral 0x212ff6ef7e8 <line:61:19> 'int' 0
|   |   |-CompoundAssignOperator 0x212ff6efaf8 <line:172:9, col:28> 'double' '-=' ComputeLHSTy='double' ComputeResultTy='double'
|   |   | |-ArraySubscriptExpr 0x212ff6ef9f8 <col:9, col:16> 'double' lvalue
|   |   | | |-ImplicitCastExpr 0x212ff6ef9e0 <col:9, col:13> 'double *' <ArrayToPointerDecay>
|   |   | | | `-MemberExpr 0x212ff6ef988 <col:9, col:13> 'double [8]' lvalue ->r 0x212ff6df950
|   |   | | |   `-ImplicitCastExpr 0x212ff6ef970 <col:9> 'poly1305_internal *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x212ff6ef950 <col:9> 'poly1305_internal *' lvalue Var 0x212ff6ea190 'st' 'poly1305_internal *'
|   |   | | `-IntegerLiteral 0x212ff6ef9b8 <col:15> 'int' 0
|   |   | `-ImplicitCastExpr 0x212ff6efae0 <col:21, col:28> 'double' <LValueToRValue>
|   |   |   `-ArraySubscriptExpr 0x212ff6efac0 <col:21, col:28> 'double' lvalue
|   |   |     |-ImplicitCastExpr 0x212ff6efaa8 <col:21, col:25> 'double *' <ArrayToPointerDecay>
|   |   |     | `-MemberExpr 0x212ff6efa50 <col:21, col:25> 'double [8]' lvalue ->r 0x212ff6df950
|   |   |     |   `-ImplicitCastExpr 0x212ff6efa38 <col:21> 'poly1305_internal *' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x212ff6efa18 <col:21> 'poly1305_internal *' lvalue Var 0x212ff6ea190 'st' 'poly1305_internal *'
|   |   |     `-IntegerLiteral 0x212ff6efa80 <col:27> 'int' 1
|   |   |-BinaryOperator 0x212ff7622f8 <line:174:9, line:60:37> 'double' '='
|   |   | |-ArraySubscriptExpr 0x212ff6efbd0 <line:174:9, col:16> 'double' lvalue
|   |   | | |-ImplicitCastExpr 0x212ff6efbb8 <col:9, col:13> 'double *' <ArrayToPointerDecay>
|   |   | | | `-MemberExpr 0x212ff6efb60 <col:9, col:13> 'double [8]' lvalue ->r 0x212ff6df950
|   |   | | |   `-ImplicitCastExpr 0x212ff6efb48 <col:9> 'poly1305_internal *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x212ff6efb28 <col:9> 'poly1305_internal *' lvalue Var 0x212ff6ea190 'st' 'poly1305_internal *'
|   |   | | `-IntegerLiteral 0x212ff6efb90 <col:15> 'int' 3
|   |   | `-BinaryOperator 0x212ff7622d8 <col:20, line:60:37> 'double' '-'
|   |   |   |-ParenExpr 0x212ff6f00c0 <line:174:20, col:53> 'double'
|   |   |   | `-BinaryOperator 0x212ff6f00a0 <col:21, line:60:37> 'double' '+'
|   |   |   |   |-ImplicitCastExpr 0x212ff6f0088 <line:174:21, col:28> 'double' <LValueToRValue>
|   |   |   |   | `-ArraySubscriptExpr 0x212ff6efc98 <col:21, col:28> 'double' lvalue
|   |   |   |   |   |-ImplicitCastExpr 0x212ff6efc80 <col:21, col:25> 'double *' <ArrayToPointerDecay>
|   |   |   |   |   | `-MemberExpr 0x212ff6efc28 <col:21, col:25> 'double [8]' lvalue ->r 0x212ff6df950
|   |   |   |   |   |   `-ImplicitCastExpr 0x212ff6efc10 <col:21> 'poly1305_internal *' <LValueToRValue>
|   |   |   |   |   |     `-DeclRefExpr 0x212ff6efbf0 <col:21> 'poly1305_internal *' lvalue Var 0x212ff6ea190 'st' 'poly1305_internal *'
|   |   |   |   |   `-IntegerLiteral 0x212ff6efc58 <col:27> 'int' 2
|   |   |   |   `-BinaryOperator 0x212ff6f0068 <line:60:17, col:37> 'double' '*'
|   |   |   |     |-BinaryOperator 0x212ff6eff18 <col:17, col:37> 'double' '*'
|   |   |   |     | |-ParenExpr 0x212ff6efdc8 <col:17, col:37> 'double'
|   |   |   |     | | `-CStyleCastExpr 0x212ff6efda0 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |     | |   `-ParenExpr 0x212ff6efd80 <col:26, col:36> 'unsigned long long'
|   |   |   |     | |     `-BinaryOperator 0x212ff6efd28 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |     | |       |-IntegerLiteral 0x212ff6efcb8 <col:27> 'unsigned long long' 1
|   |   |   |     | |       `-ParenExpr 0x212ff6efd08 <col:33, col:35> 'int'
|   |   |   |     | |         `-IntegerLiteral 0x212ff6efce0 <line:174:36> 'int' 52
|   |   |   |     | `-ParenExpr 0x212ff6efef8 <line:60:17, col:37> 'double'
|   |   |   |     |   `-CStyleCastExpr 0x212ff6efed0 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |     |     `-ParenExpr 0x212ff6efeb0 <col:26, col:36> 'unsigned long long'
|   |   |   |     |       `-BinaryOperator 0x212ff6efe58 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |     |         |-IntegerLiteral 0x212ff6efde8 <col:27> 'unsigned long long' 1
|   |   |   |     |         `-ParenExpr 0x212ff6efe38 <col:33, col:35> 'int'
|   |   |   |     |           `-IntegerLiteral 0x212ff6efe10 <line:174:44> 'int' 16
|   |   |   |     `-ParenExpr 0x212ff6f0048 <line:60:17, col:37> 'double'
|   |   |   |       `-CStyleCastExpr 0x212ff6f0020 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |         `-ParenExpr 0x212ff6f0000 <col:26, col:36> 'unsigned long long'
|   |   |   |           `-BinaryOperator 0x212ff6effa8 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |             |-IntegerLiteral 0x212ff6eff38 <col:27> 'unsigned long long' 1
|   |   |   |             `-ParenExpr 0x212ff6eff88 <col:33, col:35> 'int'
|   |   |   |               `-IntegerLiteral 0x212ff6eff60 <line:62:20> 'int' 32
|   |   |   `-BinaryOperator 0x212ff7622b8 <line:60:17, col:37> 'double' '*'
|   |   |     |-BinaryOperator 0x212ff762168 <col:17, col:37> 'double' '*'
|   |   |     | |-ParenExpr 0x212ff762018 <col:17, col:37> 'double'
|   |   |     | | `-CStyleCastExpr 0x212ff761ff0 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     | |   `-ParenExpr 0x212ff6f01a8 <col:26, col:36> 'unsigned long long'
|   |   |     | |     `-BinaryOperator 0x212ff6f0150 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     | |       |-IntegerLiteral 0x212ff6f00e0 <col:27> 'unsigned long long' 1
|   |   |     | |       `-ParenExpr 0x212ff6f0130 <col:33, col:35> 'int'
|   |   |     | |         `-IntegerLiteral 0x212ff6f0108 <line:175:36> 'int' 52
|   |   |     | `-ParenExpr 0x212ff762148 <line:60:17, col:37> 'double'
|   |   |     |   `-CStyleCastExpr 0x212ff762120 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     |     `-ParenExpr 0x212ff762100 <col:26, col:36> 'unsigned long long'
|   |   |     |       `-BinaryOperator 0x212ff7620a8 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     |         |-IntegerLiteral 0x212ff762038 <col:27> 'unsigned long long' 1
|   |   |     |         `-ParenExpr 0x212ff762088 <col:33, col:35> 'int'
|   |   |     |           `-IntegerLiteral 0x212ff762060 <line:175:44> 'int' 16
|   |   |     `-ParenExpr 0x212ff762298 <line:60:17, col:37> 'double'
|   |   |       `-CStyleCastExpr 0x212ff762270 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         `-ParenExpr 0x212ff762250 <col:26, col:36> 'unsigned long long'
|   |   |           `-BinaryOperator 0x212ff7621f8 <col:27, col:35> 'unsigned long long' '<<'
|   |   |             |-IntegerLiteral 0x212ff762188 <col:27> 'unsigned long long' 1
|   |   |             `-ParenExpr 0x212ff7621d8 <col:33, col:35> 'int'
|   |   |               `-IntegerLiteral 0x212ff7621b0 <line:62:20> 'int' 32
|   |   |-CompoundAssignOperator 0x212ff7624c0 <line:176:9, col:28> 'double' '-=' ComputeLHSTy='double' ComputeResultTy='double'
|   |   | |-ArraySubscriptExpr 0x212ff7623c0 <col:9, col:16> 'double' lvalue
|   |   | | |-ImplicitCastExpr 0x212ff7623a8 <col:9, col:13> 'double *' <ArrayToPointerDecay>
|   |   | | | `-MemberExpr 0x212ff762350 <col:9, col:13> 'double [8]' lvalue ->r 0x212ff6df950
|   |   | | |   `-ImplicitCastExpr 0x212ff762338 <col:9> 'poly1305_internal *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x212ff762318 <col:9> 'poly1305_internal *' lvalue Var 0x212ff6ea190 'st' 'poly1305_internal *'
|   |   | | `-IntegerLiteral 0x212ff762380 <col:15> 'int' 2
|   |   | `-ImplicitCastExpr 0x212ff7624a8 <col:21, col:28> 'double' <LValueToRValue>
|   |   |   `-ArraySubscriptExpr 0x212ff762488 <col:21, col:28> 'double' lvalue
|   |   |     |-ImplicitCastExpr 0x212ff762470 <col:21, col:25> 'double *' <ArrayToPointerDecay>
|   |   |     | `-MemberExpr 0x212ff762418 <col:21, col:25> 'double [8]' lvalue ->r 0x212ff6df950
|   |   |     |   `-ImplicitCastExpr 0x212ff762400 <col:21> 'poly1305_internal *' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x212ff7623e0 <col:21> 'poly1305_internal *' lvalue Var 0x212ff6ea190 'st' 'poly1305_internal *'
|   |   |     `-IntegerLiteral 0x212ff762448 <col:27> 'int' 3
|   |   |-BinaryOperator 0x212ff764198 <line:178:9, line:63:30> 'double' '='
|   |   | |-ArraySubscriptExpr 0x212ff762598 <line:178:9, col:16> 'double' lvalue
|   |   | | |-ImplicitCastExpr 0x212ff762580 <col:9, col:13> 'double *' <ArrayToPointerDecay>
|   |   | | | `-MemberExpr 0x212ff762528 <col:9, col:13> 'double [8]' lvalue ->r 0x212ff6df950
|   |   | | |   `-ImplicitCastExpr 0x212ff762510 <col:9> 'poly1305_internal *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x212ff7624f0 <col:9> 'poly1305_internal *' lvalue Var 0x212ff6ea190 'st' 'poly1305_internal *'
|   |   | | `-IntegerLiteral 0x212ff762558 <col:15> 'int' 5
|   |   | `-BinaryOperator 0x212ff764178 <col:20, line:63:30> 'double' '-'
|   |   |   |-ParenExpr 0x212ff762bf8 <line:178:20, col:53> 'double'
|   |   |   | `-BinaryOperator 0x212ff762bd8 <col:21, line:63:30> 'double' '+'
|   |   |   |   |-ImplicitCastExpr 0x212ff762bc0 <line:178:21, col:28> 'double' <LValueToRValue>
|   |   |   |   | `-ArraySubscriptExpr 0x212ff762660 <col:21, col:28> 'double' lvalue
|   |   |   |   |   |-ImplicitCastExpr 0x212ff762648 <col:21, col:25> 'double *' <ArrayToPointerDecay>
|   |   |   |   |   | `-MemberExpr 0x212ff7625f0 <col:21, col:25> 'double [8]' lvalue ->r 0x212ff6df950
|   |   |   |   |   |   `-ImplicitCastExpr 0x212ff7625d8 <col:21> 'poly1305_internal *' <LValueToRValue>
|   |   |   |   |   |     `-DeclRefExpr 0x212ff7625b8 <col:21> 'poly1305_internal *' lvalue Var 0x212ff6ea190 'st' 'poly1305_internal *'
|   |   |   |   |   `-IntegerLiteral 0x212ff762620 <col:27> 'int' 4
|   |   |   |   `-BinaryOperator 0x212ff762ba0 <line:60:17, line:63:30> 'double' '*'
|   |   |   |     |-BinaryOperator 0x212ff7628e0 <line:60:17, col:37> 'double' '*'
|   |   |   |     | |-ParenExpr 0x212ff762790 <col:17, col:37> 'double'
|   |   |   |     | | `-CStyleCastExpr 0x212ff762768 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |     | |   `-ParenExpr 0x212ff762748 <col:26, col:36> 'unsigned long long'
|   |   |   |     | |     `-BinaryOperator 0x212ff7626f0 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |     | |       |-IntegerLiteral 0x212ff762680 <col:27> 'unsigned long long' 1
|   |   |   |     | |       `-ParenExpr 0x212ff7626d0 <col:33, col:35> 'int'
|   |   |   |     | |         `-IntegerLiteral 0x212ff7626a8 <line:178:36> 'int' 52
|   |   |   |     | `-ParenExpr 0x212ff7628c0 <line:60:17, col:37> 'double'
|   |   |   |     |   `-CStyleCastExpr 0x212ff762898 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |     |     `-ParenExpr 0x212ff762878 <col:26, col:36> 'unsigned long long'
|   |   |   |     |       `-BinaryOperator 0x212ff762820 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |     |         |-IntegerLiteral 0x212ff7627b0 <col:27> 'unsigned long long' 1
|   |   |   |     |         `-ParenExpr 0x212ff762800 <col:33, col:35> 'int'
|   |   |   |     |           `-IntegerLiteral 0x212ff7627d8 <line:178:44> 'int' 16
|   |   |   |     `-ParenExpr 0x212ff762b80 <line:63:16, col:30> 'double'
|   |   |   |       `-BinaryOperator 0x212ff762b60 <line:60:17, col:37> 'double' '*'
|   |   |   |         |-ParenExpr 0x212ff762a10 <col:17, col:37> 'double'
|   |   |   |         | `-CStyleCastExpr 0x212ff7629e8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |         |   `-ParenExpr 0x212ff7629c8 <col:26, col:36> 'unsigned long long'
|   |   |   |         |     `-BinaryOperator 0x212ff762970 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |         |       |-IntegerLiteral 0x212ff762900 <col:27> 'unsigned long long' 1
|   |   |   |         |       `-ParenExpr 0x212ff762950 <col:33, col:35> 'int'
|   |   |   |         |         `-IntegerLiteral 0x212ff762928 <line:62:20> 'int' 32
|   |   |   |         `-ParenExpr 0x212ff762b40 <line:60:17, col:37> 'double'
|   |   |   |           `-CStyleCastExpr 0x212ff762b18 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |             `-ParenExpr 0x212ff762af8 <col:26, col:36> 'unsigned long long'
|   |   |   |               `-BinaryOperator 0x212ff762aa0 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |                 |-IntegerLiteral 0x212ff762a30 <col:27> 'unsigned long long' 1
|   |   |   |                 `-ParenExpr 0x212ff762a80 <col:33, col:35> 'int'
|   |   |   |                   `-IntegerLiteral 0x212ff762a58 <line:63:27> 'int' 32
|   |   |   `-BinaryOperator 0x212ff764158 <line:60:17, line:63:30> 'double' '*'
|   |   |     |-BinaryOperator 0x212ff762e78 <line:60:17, col:37> 'double' '*'
|   |   |     | |-ParenExpr 0x212ff762d28 <col:17, col:37> 'double'
|   |   |     | | `-CStyleCastExpr 0x212ff762d00 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     | |   `-ParenExpr 0x212ff762ce0 <col:26, col:36> 'unsigned long long'
|   |   |     | |     `-BinaryOperator 0x212ff762c88 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     | |       |-IntegerLiteral 0x212ff762c18 <col:27> 'unsigned long long' 1
|   |   |     | |       `-ParenExpr 0x212ff762c68 <col:33, col:35> 'int'
|   |   |     | |         `-IntegerLiteral 0x212ff762c40 <line:179:36> 'int' 52
|   |   |     | `-ParenExpr 0x212ff762e58 <line:60:17, col:37> 'double'
|   |   |     |   `-CStyleCastExpr 0x212ff762e30 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     |     `-ParenExpr 0x212ff762e10 <col:26, col:36> 'unsigned long long'
|   |   |     |       `-BinaryOperator 0x212ff762db8 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     |         |-IntegerLiteral 0x212ff762d48 <col:27> 'unsigned long long' 1
|   |   |     |         `-ParenExpr 0x212ff762d98 <col:33, col:35> 'int'
|   |   |     |           `-IntegerLiteral 0x212ff762d70 <line:179:44> 'int' 16
|   |   |     `-ParenExpr 0x212ff764138 <line:63:16, col:30> 'double'
|   |   |       `-BinaryOperator 0x212ff764118 <line:60:17, col:37> 'double' '*'
|   |   |         |-ParenExpr 0x212ff762fa8 <col:17, col:37> 'double'
|   |   |         | `-CStyleCastExpr 0x212ff762f80 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         |   `-ParenExpr 0x212ff762f60 <col:26, col:36> 'unsigned long long'
|   |   |         |     `-BinaryOperator 0x212ff762f08 <col:27, col:35> 'unsigned long long' '<<'
|   |   |         |       |-IntegerLiteral 0x212ff762e98 <col:27> 'unsigned long long' 1
|   |   |         |       `-ParenExpr 0x212ff762ee8 <col:33, col:35> 'int'
|   |   |         |         `-IntegerLiteral 0x212ff762ec0 <line:62:20> 'int' 32
|   |   |         `-ParenExpr 0x212ff7640f8 <line:60:17, col:37> 'double'
|   |   |           `-CStyleCastExpr 0x212ff7640d0 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |             `-ParenExpr 0x212ff7640b0 <col:26, col:36> 'unsigned long long'
|   |   |               `-BinaryOperator 0x212ff764058 <col:27, col:35> 'unsigned long long' '<<'
|   |   |                 |-IntegerLiteral 0x212ff762fc8 <col:27> 'unsigned long long' 1
|   |   |                 `-ParenExpr 0x212ff764038 <col:33, col:35> 'int'
|   |   |                   `-IntegerLiteral 0x212ff764010 <line:63:27> 'int' 32
|   |   |-CompoundAssignOperator 0x212ff764360 <line:180:9, col:28> 'double' '-=' ComputeLHSTy='double' ComputeResultTy='double'
|   |   | |-ArraySubscriptExpr 0x212ff764260 <col:9, col:16> 'double' lvalue
|   |   | | |-ImplicitCastExpr 0x212ff764248 <col:9, col:13> 'double *' <ArrayToPointerDecay>
|   |   | | | `-MemberExpr 0x212ff7641f0 <col:9, col:13> 'double [8]' lvalue ->r 0x212ff6df950
|   |   | | |   `-ImplicitCastExpr 0x212ff7641d8 <col:9> 'poly1305_internal *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x212ff7641b8 <col:9> 'poly1305_internal *' lvalue Var 0x212ff6ea190 'st' 'poly1305_internal *'
|   |   | | `-IntegerLiteral 0x212ff764220 <col:15> 'int' 4
|   |   | `-ImplicitCastExpr 0x212ff764348 <col:21, col:28> 'double' <LValueToRValue>
|   |   |   `-ArraySubscriptExpr 0x212ff764328 <col:21, col:28> 'double' lvalue
|   |   |     |-ImplicitCastExpr 0x212ff764310 <col:21, col:25> 'double *' <ArrayToPointerDecay>
|   |   |     | `-MemberExpr 0x212ff7642b8 <col:21, col:25> 'double [8]' lvalue ->r 0x212ff6df950
|   |   |     |   `-ImplicitCastExpr 0x212ff7642a0 <col:21> 'poly1305_internal *' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x212ff764280 <col:21> 'poly1305_internal *' lvalue Var 0x212ff6ea190 'st' 'poly1305_internal *'
|   |   |     `-IntegerLiteral 0x212ff7642e8 <col:27> 'int' 5
|   |   |-BinaryOperator 0x212ff7612d8 <line:182:9, line:64:30> 'double' '='
|   |   | |-ArraySubscriptExpr 0x212ff764438 <line:182:9, col:16> 'double' lvalue
|   |   | | |-ImplicitCastExpr 0x212ff764420 <col:9, col:13> 'double *' <ArrayToPointerDecay>
|   |   | | | `-MemberExpr 0x212ff7643c8 <col:9, col:13> 'double [8]' lvalue ->r 0x212ff6df950
|   |   | | |   `-ImplicitCastExpr 0x212ff7643b0 <col:9> 'poly1305_internal *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x212ff764390 <col:9> 'poly1305_internal *' lvalue Var 0x212ff6ea190 'st' 'poly1305_internal *'
|   |   | | `-IntegerLiteral 0x212ff7643f8 <col:15> 'int' 7
|   |   | `-BinaryOperator 0x212ff7612b8 <col:20, line:64:30> 'double' '-'
|   |   |   |-ParenExpr 0x212ff764c08 <line:182:20, col:53> 'double'
|   |   |   | `-BinaryOperator 0x212ff764be8 <col:21, line:64:30> 'double' '+'
|   |   |   |   |-ImplicitCastExpr 0x212ff764bd0 <line:182:21, col:28> 'double' <LValueToRValue>
|   |   |   |   | `-ArraySubscriptExpr 0x212ff764500 <col:21, col:28> 'double' lvalue
|   |   |   |   |   |-ImplicitCastExpr 0x212ff7644e8 <col:21, col:25> 'double *' <ArrayToPointerDecay>
|   |   |   |   |   | `-MemberExpr 0x212ff764490 <col:21, col:25> 'double [8]' lvalue ->r 0x212ff6df950
|   |   |   |   |   |   `-ImplicitCastExpr 0x212ff764478 <col:21> 'poly1305_internal *' <LValueToRValue>
|   |   |   |   |   |     `-DeclRefExpr 0x212ff764458 <col:21> 'poly1305_internal *' lvalue Var 0x212ff6ea190 'st' 'poly1305_internal *'
|   |   |   |   |   `-IntegerLiteral 0x212ff7644c0 <col:27> 'int' 6
|   |   |   |   `-BinaryOperator 0x212ff764bb0 <line:60:17, line:64:30> 'double' '*'
|   |   |   |     |-BinaryOperator 0x212ff764780 <line:60:17, col:37> 'double' '*'
|   |   |   |     | |-ParenExpr 0x212ff764630 <col:17, col:37> 'double'
|   |   |   |     | | `-CStyleCastExpr 0x212ff764608 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |     | |   `-ParenExpr 0x212ff7645e8 <col:26, col:36> 'unsigned long long'
|   |   |   |     | |     `-BinaryOperator 0x212ff764590 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |     | |       |-IntegerLiteral 0x212ff764520 <col:27> 'unsigned long long' 1
|   |   |   |     | |       `-ParenExpr 0x212ff764570 <col:33, col:35> 'int'
|   |   |   |     | |         `-IntegerLiteral 0x212ff764548 <line:182:36> 'int' 52
|   |   |   |     | `-ParenExpr 0x212ff764760 <line:60:17, col:37> 'double'
|   |   |   |     |   `-CStyleCastExpr 0x212ff764738 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |     |     `-ParenExpr 0x212ff764718 <col:26, col:36> 'unsigned long long'
|   |   |   |     |       `-BinaryOperator 0x212ff7646c0 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |     |         |-IntegerLiteral 0x212ff764650 <col:27> 'unsigned long long' 1
|   |   |   |     |         `-ParenExpr 0x212ff7646a0 <col:33, col:35> 'int'
|   |   |   |     |           `-IntegerLiteral 0x212ff764678 <line:182:44> 'int' 16
|   |   |   |     `-ParenExpr 0x212ff764b90 <line:64:16, col:30> 'double'
|   |   |   |       `-BinaryOperator 0x212ff764b70 <line:63:16, line:60:37> 'double' '*'
|   |   |   |         |-ParenExpr 0x212ff764a20 <line:63:16, col:30> 'double'
|   |   |   |         | `-BinaryOperator 0x212ff764a00 <line:60:17, col:37> 'double' '*'
|   |   |   |         |   |-ParenExpr 0x212ff7648b0 <col:17, col:37> 'double'
|   |   |   |         |   | `-CStyleCastExpr 0x212ff764888 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |         |   |   `-ParenExpr 0x212ff764868 <col:26, col:36> 'unsigned long long'
|   |   |   |         |   |     `-BinaryOperator 0x212ff764810 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |         |   |       |-IntegerLiteral 0x212ff7647a0 <col:27> 'unsigned long long' 1
|   |   |   |         |   |       `-ParenExpr 0x212ff7647f0 <col:33, col:35> 'int'
|   |   |   |         |   |         `-IntegerLiteral 0x212ff7647c8 <line:62:20> 'int' 32
|   |   |   |         |   `-ParenExpr 0x212ff7649e0 <line:60:17, col:37> 'double'
|   |   |   |         |     `-CStyleCastExpr 0x212ff7649b8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |         |       `-ParenExpr 0x212ff764998 <col:26, col:36> 'unsigned long long'
|   |   |   |         |         `-BinaryOperator 0x212ff764940 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |         |           |-IntegerLiteral 0x212ff7648d0 <col:27> 'unsigned long long' 1
|   |   |   |         |           `-ParenExpr 0x212ff764920 <col:33, col:35> 'int'
|   |   |   |         |             `-IntegerLiteral 0x212ff7648f8 <line:63:27> 'int' 32
|   |   |   |         `-ParenExpr 0x212ff764b50 <line:60:17, col:37> 'double'
|   |   |   |           `-CStyleCastExpr 0x212ff764b28 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |             `-ParenExpr 0x212ff764b08 <col:26, col:36> 'unsigned long long'
|   |   |   |               `-BinaryOperator 0x212ff764ab0 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |                 |-IntegerLiteral 0x212ff764a40 <col:27> 'unsigned long long' 1
|   |   |   |                 `-ParenExpr 0x212ff764a90 <col:33, col:35> 'int'
|   |   |   |                   `-IntegerLiteral 0x212ff764a68 <line:64:27> 'int' 32
|   |   |   `-BinaryOperator 0x212ff761298 <line:60:17, line:64:30> 'double' '*'
|   |   |     |-BinaryOperator 0x212ff764e88 <line:60:17, col:37> 'double' '*'
|   |   |     | |-ParenExpr 0x212ff764d38 <col:17, col:37> 'double'
|   |   |     | | `-CStyleCastExpr 0x212ff764d10 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     | |   `-ParenExpr 0x212ff764cf0 <col:26, col:36> 'unsigned long long'
|   |   |     | |     `-BinaryOperator 0x212ff764c98 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     | |       |-IntegerLiteral 0x212ff764c28 <col:27> 'unsigned long long' 1
|   |   |     | |       `-ParenExpr 0x212ff764c78 <col:33, col:35> 'int'
|   |   |     | |         `-IntegerLiteral 0x212ff764c50 <line:183:36> 'int' 52
|   |   |     | `-ParenExpr 0x212ff764e68 <line:60:17, col:37> 'double'
|   |   |     |   `-CStyleCastExpr 0x212ff764e40 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     |     `-ParenExpr 0x212ff764e20 <col:26, col:36> 'unsigned long long'
|   |   |     |       `-BinaryOperator 0x212ff764dc8 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     |         |-IntegerLiteral 0x212ff764d58 <col:27> 'unsigned long long' 1
|   |   |     |         `-ParenExpr 0x212ff764da8 <col:33, col:35> 'int'
|   |   |     |           `-IntegerLiteral 0x212ff764d80 <line:183:44> 'int' 16
|   |   |     `-ParenExpr 0x212ff761278 <line:64:16, col:30> 'double'
|   |   |       `-BinaryOperator 0x212ff761258 <line:63:16, line:60:37> 'double' '*'
|   |   |         |-ParenExpr 0x212ff761108 <line:63:16, col:30> 'double'
|   |   |         | `-BinaryOperator 0x212ff7610e8 <line:60:17, col:37> 'double' '*'
|   |   |         |   |-ParenExpr 0x212ff764fb8 <col:17, col:37> 'double'
|   |   |         |   | `-CStyleCastExpr 0x212ff764f90 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         |   |   `-ParenExpr 0x212ff764f70 <col:26, col:36> 'unsigned long long'
|   |   |         |   |     `-BinaryOperator 0x212ff764f18 <col:27, col:35> 'unsigned long long' '<<'
|   |   |         |   |       |-IntegerLiteral 0x212ff764ea8 <col:27> 'unsigned long long' 1
|   |   |         |   |       `-ParenExpr 0x212ff764ef8 <col:33, col:35> 'int'
|   |   |         |   |         `-IntegerLiteral 0x212ff764ed0 <line:62:20> 'int' 32
|   |   |         |   `-ParenExpr 0x212ff7610c8 <line:60:17, col:37> 'double'
|   |   |         |     `-CStyleCastExpr 0x212ff7610a0 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         |       `-ParenExpr 0x212ff761080 <col:26, col:36> 'unsigned long long'
|   |   |         |         `-BinaryOperator 0x212ff761028 <col:27, col:35> 'unsigned long long' '<<'
|   |   |         |           |-IntegerLiteral 0x212ff764fd8 <col:27> 'unsigned long long' 1
|   |   |         |           `-ParenExpr 0x212ff761008 <col:33, col:35> 'int'
|   |   |         |             `-IntegerLiteral 0x212ff760fe0 <line:63:27> 'int' 32
|   |   |         `-ParenExpr 0x212ff761238 <line:60:17, col:37> 'double'
|   |   |           `-CStyleCastExpr 0x212ff761210 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |             `-ParenExpr 0x212ff7611f0 <col:26, col:36> 'unsigned long long'
|   |   |               `-BinaryOperator 0x212ff761198 <col:27, col:35> 'unsigned long long' '<<'
|   |   |                 |-IntegerLiteral 0x212ff761128 <col:27> 'unsigned long long' 1
|   |   |                 `-ParenExpr 0x212ff761178 <col:33, col:35> 'int'
|   |   |                   `-IntegerLiteral 0x212ff761150 <line:64:27> 'int' 32
|   |   |-CompoundAssignOperator 0x212ff7614a0 <line:184:9, col:28> 'double' '-=' ComputeLHSTy='double' ComputeResultTy='double'
|   |   | |-ArraySubscriptExpr 0x212ff7613a0 <col:9, col:16> 'double' lvalue
|   |   | | |-ImplicitCastExpr 0x212ff761388 <col:9, col:13> 'double *' <ArrayToPointerDecay>
|   |   | | | `-MemberExpr 0x212ff761330 <col:9, col:13> 'double [8]' lvalue ->r 0x212ff6df950
|   |   | | |   `-ImplicitCastExpr 0x212ff761318 <col:9> 'poly1305_internal *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x212ff7612f8 <col:9> 'poly1305_internal *' lvalue Var 0x212ff6ea190 'st' 'poly1305_internal *'
|   |   | | `-IntegerLiteral 0x212ff761360 <col:15> 'int' 6
|   |   | `-ImplicitCastExpr 0x212ff761488 <col:21, col:28> 'double' <LValueToRValue>
|   |   |   `-ArraySubscriptExpr 0x212ff761468 <col:21, col:28> 'double' lvalue
|   |   |     |-ImplicitCastExpr 0x212ff761450 <col:21, col:25> 'double *' <ArrayToPointerDecay>
|   |   |     | `-MemberExpr 0x212ff7613f8 <col:21, col:25> 'double [8]' lvalue ->r 0x212ff6df950
|   |   |     |   `-ImplicitCastExpr 0x212ff7613e0 <col:21> 'poly1305_internal *' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x212ff7613c0 <col:21> 'poly1305_internal *' lvalue Var 0x212ff6ea190 'st' 'poly1305_internal *'
|   |   |     `-IntegerLiteral 0x212ff761428 <col:27> 'int' 7
|   |   |-BinaryOperator 0x212ff75e6c0 <line:186:9, line:64:30> 'double' '='
|   |   | |-ArraySubscriptExpr 0x212ff761578 <line:186:9, col:16> 'double' lvalue
|   |   | | |-ImplicitCastExpr 0x212ff761560 <col:9, col:13> 'double *' <ArrayToPointerDecay>
|   |   | | | `-MemberExpr 0x212ff761508 <col:9, col:13> 'double [6]' lvalue ->s 0x212ff6dfa50
|   |   | | |   `-ImplicitCastExpr 0x212ff7614f0 <col:9> 'poly1305_internal *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x212ff7614d0 <col:9> 'poly1305_internal *' lvalue Var 0x212ff6ea190 'st' 'poly1305_internal *'
|   |   | | `-IntegerLiteral 0x212ff761538 <col:15> 'int' 1
|   |   | `-BinaryOperator 0x212ff75e6a0 <col:20, line:64:30> 'double' '-'
|   |   |   |-ParenExpr 0x212ff761e98 <line:186:20, col:58> 'double'
|   |   |   | `-BinaryOperator 0x212ff761e78 <col:21, line:64:30> 'double' '+'
|   |   |   |   |-ImplicitCastExpr 0x212ff761e60 <line:186:21, col:28> 'double' <LValueToRValue>
|   |   |   |   | `-ArraySubscriptExpr 0x212ff761640 <col:21, col:28> 'double' lvalue
|   |   |   |   |   |-ImplicitCastExpr 0x212ff761628 <col:21, col:25> 'double *' <ArrayToPointerDecay>
|   |   |   |   |   | `-MemberExpr 0x212ff7615d0 <col:21, col:25> 'double [6]' lvalue ->s 0x212ff6dfa50
|   |   |   |   |   |   `-ImplicitCastExpr 0x212ff7615b8 <col:21> 'poly1305_internal *' <LValueToRValue>
|   |   |   |   |   |     `-DeclRefExpr 0x212ff761598 <col:21> 'poly1305_internal *' lvalue Var 0x212ff6ea190 'st' 'poly1305_internal *'
|   |   |   |   |   `-IntegerLiteral 0x212ff761600 <col:27> 'int' 0
|   |   |   |   `-BinaryOperator 0x212ff761e40 <line:60:17, line:64:30> 'double' '/'
|   |   |   |     |-BinaryOperator 0x212ff761a10 <line:60:17, col:37> 'double' '*'
|   |   |   |     | |-BinaryOperator 0x212ff7618c0 <col:17, col:37> 'double' '*'
|   |   |   |     | | |-ParenExpr 0x212ff761770 <col:17, col:37> 'double'
|   |   |   |     | | | `-CStyleCastExpr 0x212ff761748 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |     | | |   `-ParenExpr 0x212ff761728 <col:26, col:36> 'unsigned long long'
|   |   |   |     | | |     `-BinaryOperator 0x212ff7616d0 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |     | | |       |-IntegerLiteral 0x212ff761660 <col:27> 'unsigned long long' 1
|   |   |   |     | | |       `-ParenExpr 0x212ff7616b0 <col:33, col:35> 'int'
|   |   |   |     | | |         `-IntegerLiteral 0x212ff761688 <line:186:36> 'int' 52
|   |   |   |     | | `-ParenExpr 0x212ff7618a0 <line:60:17, col:37> 'double'
|   |   |   |     | |   `-CStyleCastExpr 0x212ff761878 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |     | |     `-ParenExpr 0x212ff761858 <col:26, col:36> 'unsigned long long'
|   |   |   |     | |       `-BinaryOperator 0x212ff761800 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |     | |         |-IntegerLiteral 0x212ff761790 <col:27> 'unsigned long long' 1
|   |   |   |     | |         `-ParenExpr 0x212ff7617e0 <col:33, col:35> 'int'
|   |   |   |     | |           `-IntegerLiteral 0x212ff7617b8 <line:186:44> 'int' 16
|   |   |   |     | `-ParenExpr 0x212ff7619f0 <line:60:17, col:37> 'double'
|   |   |   |     |   `-CStyleCastExpr 0x212ff7619c8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |     |     `-ParenExpr 0x212ff7619a8 <col:26, col:36> 'unsigned long long'
|   |   |   |     |       `-BinaryOperator 0x212ff761950 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |     |         |-IntegerLiteral 0x212ff7618e0 <col:27> 'unsigned long long' 1
|   |   |   |     |         `-ParenExpr 0x212ff761930 <col:33, col:35> 'int'
|   |   |   |     |           `-IntegerLiteral 0x212ff761908 <line:61:19> 'int' 0
|   |   |   |     `-ParenExpr 0x212ff761e20 <line:64:16, col:30> 'double'
|   |   |   |       `-BinaryOperator 0x212ff761e00 <line:63:16, line:60:37> 'double' '*'
|   |   |   |         |-ParenExpr 0x212ff761cb0 <line:63:16, col:30> 'double'
|   |   |   |         | `-BinaryOperator 0x212ff761c90 <line:60:17, col:37> 'double' '*'
|   |   |   |         |   |-ParenExpr 0x212ff761b40 <col:17, col:37> 'double'
|   |   |   |         |   | `-CStyleCastExpr 0x212ff761b18 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |         |   |   `-ParenExpr 0x212ff761af8 <col:26, col:36> 'unsigned long long'
|   |   |   |         |   |     `-BinaryOperator 0x212ff761aa0 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |         |   |       |-IntegerLiteral 0x212ff761a30 <col:27> 'unsigned long long' 1
|   |   |   |         |   |       `-ParenExpr 0x212ff761a80 <col:33, col:35> 'int'
|   |   |   |         |   |         `-IntegerLiteral 0x212ff761a58 <line:62:20> 'int' 32
|   |   |   |         |   `-ParenExpr 0x212ff761c70 <line:60:17, col:37> 'double'
|   |   |   |         |     `-CStyleCastExpr 0x212ff761c48 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |         |       `-ParenExpr 0x212ff761c28 <col:26, col:36> 'unsigned long long'
|   |   |   |         |         `-BinaryOperator 0x212ff761bd0 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |         |           |-IntegerLiteral 0x212ff761b60 <col:27> 'unsigned long long' 1
|   |   |   |         |           `-ParenExpr 0x212ff761bb0 <col:33, col:35> 'int'
|   |   |   |         |             `-IntegerLiteral 0x212ff761b88 <line:63:27> 'int' 32
|   |   |   |         `-ParenExpr 0x212ff761de0 <line:60:17, col:37> 'double'
|   |   |   |           `-CStyleCastExpr 0x212ff761db8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |             `-ParenExpr 0x212ff761d98 <col:26, col:36> 'unsigned long long'
|   |   |   |               `-BinaryOperator 0x212ff761d40 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |                 |-IntegerLiteral 0x212ff761cd0 <col:27> 'unsigned long long' 1
|   |   |   |                 `-ParenExpr 0x212ff761d20 <col:33, col:35> 'int'
|   |   |   |                   `-IntegerLiteral 0x212ff761cf8 <line:64:27> 'int' 32
|   |   |   `-BinaryOperator 0x212ff75e680 <line:60:17, line:64:30> 'double' '/'
|   |   |     |-BinaryOperator 0x212ff75e250 <line:60:17, col:37> 'double' '*'
|   |   |     | |-BinaryOperator 0x212ff75e100 <col:17, col:37> 'double' '*'
|   |   |     | | |-ParenExpr 0x212ff75dfb0 <col:17, col:37> 'double'
|   |   |     | | | `-CStyleCastExpr 0x212ff761fa0 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     | | |   `-ParenExpr 0x212ff761f80 <col:26, col:36> 'unsigned long long'
|   |   |     | | |     `-BinaryOperator 0x212ff761f28 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     | | |       |-IntegerLiteral 0x212ff761eb8 <col:27> 'unsigned long long' 1
|   |   |     | | |       `-ParenExpr 0x212ff761f08 <col:33, col:35> 'int'
|   |   |     | | |         `-IntegerLiteral 0x212ff761ee0 <line:187:36> 'int' 52
|   |   |     | | `-ParenExpr 0x212ff75e0e0 <line:60:17, col:37> 'double'
|   |   |     | |   `-CStyleCastExpr 0x212ff75e0b8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     | |     `-ParenExpr 0x212ff75e098 <col:26, col:36> 'unsigned long long'
|   |   |     | |       `-BinaryOperator 0x212ff75e040 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     | |         |-IntegerLiteral 0x212ff75dfd0 <col:27> 'unsigned long long' 1
|   |   |     | |         `-ParenExpr 0x212ff75e020 <col:33, col:35> 'int'
|   |   |     | |           `-IntegerLiteral 0x212ff75dff8 <line:187:44> 'int' 16
|   |   |     | `-ParenExpr 0x212ff75e230 <line:60:17, col:37> 'double'
|   |   |     |   `-CStyleCastExpr 0x212ff75e208 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     |     `-ParenExpr 0x212ff75e1e8 <col:26, col:36> 'unsigned long long'
|   |   |     |       `-BinaryOperator 0x212ff75e190 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     |         |-IntegerLiteral 0x212ff75e120 <col:27> 'unsigned long long' 1
|   |   |     |         `-ParenExpr 0x212ff75e170 <col:33, col:35> 'int'
|   |   |     |           `-IntegerLiteral 0x212ff75e148 <line:61:19> 'int' 0
|   |   |     `-ParenExpr 0x212ff75e660 <line:64:16, col:30> 'double'
|   |   |       `-BinaryOperator 0x212ff75e640 <line:63:16, line:60:37> 'double' '*'
|   |   |         |-ParenExpr 0x212ff75e4f0 <line:63:16, col:30> 'double'
|   |   |         | `-BinaryOperator 0x212ff75e4d0 <line:60:17, col:37> 'double' '*'
|   |   |         |   |-ParenExpr 0x212ff75e380 <col:17, col:37> 'double'
|   |   |         |   | `-CStyleCastExpr 0x212ff75e358 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         |   |   `-ParenExpr 0x212ff75e338 <col:26, col:36> 'unsigned long long'
|   |   |         |   |     `-BinaryOperator 0x212ff75e2e0 <col:27, col:35> 'unsigned long long' '<<'
|   |   |         |   |       |-IntegerLiteral 0x212ff75e270 <col:27> 'unsigned long long' 1
|   |   |         |   |       `-ParenExpr 0x212ff75e2c0 <col:33, col:35> 'int'
|   |   |         |   |         `-IntegerLiteral 0x212ff75e298 <line:62:20> 'int' 32
|   |   |         |   `-ParenExpr 0x212ff75e4b0 <line:60:17, col:37> 'double'
|   |   |         |     `-CStyleCastExpr 0x212ff75e488 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         |       `-ParenExpr 0x212ff75e468 <col:26, col:36> 'unsigned long long'
|   |   |         |         `-BinaryOperator 0x212ff75e410 <col:27, col:35> 'unsigned long long' '<<'
|   |   |         |           |-IntegerLiteral 0x212ff75e3a0 <col:27> 'unsigned long long' 1
|   |   |         |           `-ParenExpr 0x212ff75e3f0 <col:33, col:35> 'int'
|   |   |         |             `-IntegerLiteral 0x212ff75e3c8 <line:63:27> 'int' 32
|   |   |         `-ParenExpr 0x212ff75e620 <line:60:17, col:37> 'double'
|   |   |           `-CStyleCastExpr 0x212ff75e5f8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |             `-ParenExpr 0x212ff75e5d8 <col:26, col:36> 'unsigned long long'
|   |   |               `-BinaryOperator 0x212ff75e580 <col:27, col:35> 'unsigned long long' '<<'
|   |   |                 |-IntegerLiteral 0x212ff75e510 <col:27> 'unsigned long long' 1
|   |   |                 `-ParenExpr 0x212ff75e560 <col:33, col:35> 'int'
|   |   |                   `-IntegerLiteral 0x212ff75e538 <line:64:27> 'int' 32
|   |   |-CompoundAssignOperator 0x212ff75e888 <line:188:9, col:28> 'double' '-=' ComputeLHSTy='double' ComputeResultTy='double'
|   |   | |-ArraySubscriptExpr 0x212ff75e788 <col:9, col:16> 'double' lvalue
|   |   | | |-ImplicitCastExpr 0x212ff75e770 <col:9, col:13> 'double *' <ArrayToPointerDecay>
|   |   | | | `-MemberExpr 0x212ff75e718 <col:9, col:13> 'double [6]' lvalue ->s 0x212ff6dfa50
|   |   | | |   `-ImplicitCastExpr 0x212ff75e700 <col:9> 'poly1305_internal *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x212ff75e6e0 <col:9> 'poly1305_internal *' lvalue Var 0x212ff6ea190 'st' 'poly1305_internal *'
|   |   | | `-IntegerLiteral 0x212ff75e748 <col:15> 'int' 0
|   |   | `-ImplicitCastExpr 0x212ff75e870 <col:21, col:28> 'double' <LValueToRValue>
|   |   |   `-ArraySubscriptExpr 0x212ff75e850 <col:21, col:28> 'double' lvalue
|   |   |     |-ImplicitCastExpr 0x212ff75e838 <col:21, col:25> 'double *' <ArrayToPointerDecay>
|   |   |     | `-MemberExpr 0x212ff75e7e0 <col:21, col:25> 'double [6]' lvalue ->s 0x212ff6dfa50
|   |   |     |   `-ImplicitCastExpr 0x212ff75e7c8 <col:21> 'poly1305_internal *' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x212ff75e7a8 <col:21> 'poly1305_internal *' lvalue Var 0x212ff6ea190 'st' 'poly1305_internal *'
|   |   |     `-IntegerLiteral 0x212ff75e810 <col:27> 'int' 1
|   |   |-BinaryOperator 0x212ff75dac8 <line:190:9, line:64:30> 'double' '='
|   |   | |-ArraySubscriptExpr 0x212ff75e960 <line:190:9, col:16> 'double' lvalue
|   |   | | |-ImplicitCastExpr 0x212ff75e948 <col:9, col:13> 'double *' <ArrayToPointerDecay>
|   |   | | | `-MemberExpr 0x212ff75e8f0 <col:9, col:13> 'double [6]' lvalue ->s 0x212ff6dfa50
|   |   | | |   `-ImplicitCastExpr 0x212ff75e8d8 <col:9> 'poly1305_internal *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x212ff75e8b8 <col:9> 'poly1305_internal *' lvalue Var 0x212ff6ea190 'st' 'poly1305_internal *'
|   |   | | `-IntegerLiteral 0x212ff75e920 <col:15> 'int' 3
|   |   | `-BinaryOperator 0x212ff75daa8 <col:20, line:64:30> 'double' '-'
|   |   |   |-ParenExpr 0x212ff75d288 <line:190:20, col:59> 'double'
|   |   |   | `-BinaryOperator 0x212ff75d268 <col:21, line:64:30> 'double' '+'
|   |   |   |   |-ImplicitCastExpr 0x212ff75d250 <line:190:21, col:28> 'double' <LValueToRValue>
|   |   |   |   | `-ArraySubscriptExpr 0x212ff75ea28 <col:21, col:28> 'double' lvalue
|   |   |   |   |   |-ImplicitCastExpr 0x212ff75ea10 <col:21, col:25> 'double *' <ArrayToPointerDecay>
|   |   |   |   |   | `-MemberExpr 0x212ff75e9b8 <col:21, col:25> 'double [6]' lvalue ->s 0x212ff6dfa50
|   |   |   |   |   |   `-ImplicitCastExpr 0x212ff75e9a0 <col:21> 'poly1305_internal *' <LValueToRValue>
|   |   |   |   |   |     `-DeclRefExpr 0x212ff75e980 <col:21> 'poly1305_internal *' lvalue Var 0x212ff6ea190 'st' 'poly1305_internal *'
|   |   |   |   |   `-IntegerLiteral 0x212ff75e9e8 <col:27> 'int' 2
|   |   |   |   `-BinaryOperator 0x212ff75d230 <line:60:17, line:64:30> 'double' '/'
|   |   |   |     |-BinaryOperator 0x212ff75edf8 <line:60:17, col:37> 'double' '*'
|   |   |   |     | |-BinaryOperator 0x212ff75eca8 <col:17, col:37> 'double' '*'
|   |   |   |     | | |-ParenExpr 0x212ff75eb58 <col:17, col:37> 'double'
|   |   |   |     | | | `-CStyleCastExpr 0x212ff75eb30 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |     | | |   `-ParenExpr 0x212ff75eb10 <col:26, col:36> 'unsigned long long'
|   |   |   |     | | |     `-BinaryOperator 0x212ff75eab8 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |     | | |       |-IntegerLiteral 0x212ff75ea48 <col:27> 'unsigned long long' 1
|   |   |   |     | | |       `-ParenExpr 0x212ff75ea98 <col:33, col:35> 'int'
|   |   |   |     | | |         `-IntegerLiteral 0x212ff75ea70 <line:190:36> 'int' 52
|   |   |   |     | | `-ParenExpr 0x212ff75ec88 <line:60:17, col:37> 'double'
|   |   |   |     | |   `-CStyleCastExpr 0x212ff75ec60 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |     | |     `-ParenExpr 0x212ff75ec40 <col:26, col:36> 'unsigned long long'
|   |   |   |     | |       `-BinaryOperator 0x212ff75ebe8 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |     | |         |-IntegerLiteral 0x212ff75eb78 <col:27> 'unsigned long long' 1
|   |   |   |     | |         `-ParenExpr 0x212ff75ebc8 <col:33, col:35> 'int'
|   |   |   |     | |           `-IntegerLiteral 0x212ff75eba0 <line:190:44> 'int' 16
|   |   |   |     | `-ParenExpr 0x212ff75edd8 <line:60:17, col:37> 'double'
|   |   |   |     |   `-CStyleCastExpr 0x212ff75edb0 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |     |     `-ParenExpr 0x212ff75ed90 <col:26, col:36> 'unsigned long long'
|   |   |   |     |       `-BinaryOperator 0x212ff75ed38 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |     |         |-IntegerLiteral 0x212ff75ecc8 <col:27> 'unsigned long long' 1
|   |   |   |     |         `-ParenExpr 0x212ff75ed18 <col:33, col:35> 'int'
|   |   |   |     |           `-IntegerLiteral 0x212ff75ecf0 <line:62:20> 'int' 32
|   |   |   |     `-ParenExpr 0x212ff75d210 <line:64:16, col:30> 'double'
|   |   |   |       `-BinaryOperator 0x212ff75d1f0 <line:63:16, line:60:37> 'double' '*'
|   |   |   |         |-ParenExpr 0x212ff75d0a0 <line:63:16, col:30> 'double'
|   |   |   |         | `-BinaryOperator 0x212ff75d080 <line:60:17, col:37> 'double' '*'
|   |   |   |         |   |-ParenExpr 0x212ff75ef28 <col:17, col:37> 'double'
|   |   |   |         |   | `-CStyleCastExpr 0x212ff75ef00 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |         |   |   `-ParenExpr 0x212ff75eee0 <col:26, col:36> 'unsigned long long'
|   |   |   |         |   |     `-BinaryOperator 0x212ff75ee88 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |         |   |       |-IntegerLiteral 0x212ff75ee18 <col:27> 'unsigned long long' 1
|   |   |   |         |   |       `-ParenExpr 0x212ff75ee68 <col:33, col:35> 'int'
|   |   |   |         |   |         `-IntegerLiteral 0x212ff75ee40 <line:62:20> 'int' 32
|   |   |   |         |   `-ParenExpr 0x212ff75d060 <line:60:17, col:37> 'double'
|   |   |   |         |     `-CStyleCastExpr 0x212ff75d038 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |         |       `-ParenExpr 0x212ff75d018 <col:26, col:36> 'unsigned long long'
|   |   |   |         |         `-BinaryOperator 0x212ff75cfc0 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |         |           |-IntegerLiteral 0x212ff75ef48 <col:27> 'unsigned long long' 1
|   |   |   |         |           `-ParenExpr 0x212ff75cfa0 <col:33, col:35> 'int'
|   |   |   |         |             `-IntegerLiteral 0x212ff75ef70 <line:63:27> 'int' 32
|   |   |   |         `-ParenExpr 0x212ff75d1d0 <line:60:17, col:37> 'double'
|   |   |   |           `-CStyleCastExpr 0x212ff75d1a8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |             `-ParenExpr 0x212ff75d188 <col:26, col:36> 'unsigned long long'
|   |   |   |               `-BinaryOperator 0x212ff75d130 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |                 |-IntegerLiteral 0x212ff75d0c0 <col:27> 'unsigned long long' 1
|   |   |   |                 `-ParenExpr 0x212ff75d110 <col:33, col:35> 'int'
|   |   |   |                   `-IntegerLiteral 0x212ff75d0e8 <line:64:27> 'int' 32
|   |   |   `-BinaryOperator 0x212ff75da88 <line:60:17, line:64:30> 'double' '/'
|   |   |     |-BinaryOperator 0x212ff75d658 <line:60:17, col:37> 'double' '*'
|   |   |     | |-BinaryOperator 0x212ff75d508 <col:17, col:37> 'double' '*'
|   |   |     | | |-ParenExpr 0x212ff75d3b8 <col:17, col:37> 'double'
|   |   |     | | | `-CStyleCastExpr 0x212ff75d390 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     | | |   `-ParenExpr 0x212ff75d370 <col:26, col:36> 'unsigned long long'
|   |   |     | | |     `-BinaryOperator 0x212ff75d318 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     | | |       |-IntegerLiteral 0x212ff75d2a8 <col:27> 'unsigned long long' 1
|   |   |     | | |       `-ParenExpr 0x212ff75d2f8 <col:33, col:35> 'int'
|   |   |     | | |         `-IntegerLiteral 0x212ff75d2d0 <line:191:36> 'int' 52
|   |   |     | | `-ParenExpr 0x212ff75d4e8 <line:60:17, col:37> 'double'
|   |   |     | |   `-CStyleCastExpr 0x212ff75d4c0 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     | |     `-ParenExpr 0x212ff75d4a0 <col:26, col:36> 'unsigned long long'
|   |   |     | |       `-BinaryOperator 0x212ff75d448 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     | |         |-IntegerLiteral 0x212ff75d3d8 <col:27> 'unsigned long long' 1
|   |   |     | |         `-ParenExpr 0x212ff75d428 <col:33, col:35> 'int'
|   |   |     | |           `-IntegerLiteral 0x212ff75d400 <line:191:44> 'int' 16
|   |   |     | `-ParenExpr 0x212ff75d638 <line:60:17, col:37> 'double'
|   |   |     |   `-CStyleCastExpr 0x212ff75d610 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     |     `-ParenExpr 0x212ff75d5f0 <col:26, col:36> 'unsigned long long'
|   |   |     |       `-BinaryOperator 0x212ff75d598 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     |         |-IntegerLiteral 0x212ff75d528 <col:27> 'unsigned long long' 1
|   |   |     |         `-ParenExpr 0x212ff75d578 <col:33, col:35> 'int'
|   |   |     |           `-IntegerLiteral 0x212ff75d550 <line:62:20> 'int' 32
|   |   |     `-ParenExpr 0x212ff75da68 <line:64:16, col:30> 'double'
|   |   |       `-BinaryOperator 0x212ff75da48 <line:63:16, line:60:37> 'double' '*'
|   |   |         |-ParenExpr 0x212ff75d8f8 <line:63:16, col:30> 'double'
|   |   |         | `-BinaryOperator 0x212ff75d8d8 <line:60:17, col:37> 'double' '*'
|   |   |         |   |-ParenExpr 0x212ff75d788 <col:17, col:37> 'double'
|   |   |         |   | `-CStyleCastExpr 0x212ff75d760 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         |   |   `-ParenExpr 0x212ff75d740 <col:26, col:36> 'unsigned long long'
|   |   |         |   |     `-BinaryOperator 0x212ff75d6e8 <col:27, col:35> 'unsigned long long' '<<'
|   |   |         |   |       |-IntegerLiteral 0x212ff75d678 <col:27> 'unsigned long long' 1
|   |   |         |   |       `-ParenExpr 0x212ff75d6c8 <col:33, col:35> 'int'
|   |   |         |   |         `-IntegerLiteral 0x212ff75d6a0 <line:62:20> 'int' 32
|   |   |         |   `-ParenExpr 0x212ff75d8b8 <line:60:17, col:37> 'double'
|   |   |         |     `-CStyleCastExpr 0x212ff75d890 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         |       `-ParenExpr 0x212ff75d870 <col:26, col:36> 'unsigned long long'
|   |   |         |         `-BinaryOperator 0x212ff75d818 <col:27, col:35> 'unsigned long long' '<<'
|   |   |         |           |-IntegerLiteral 0x212ff75d7a8 <col:27> 'unsigned long long' 1
|   |   |         |           `-ParenExpr 0x212ff75d7f8 <col:33, col:35> 'int'
|   |   |         |             `-IntegerLiteral 0x212ff75d7d0 <line:63:27> 'int' 32
|   |   |         `-ParenExpr 0x212ff75da28 <line:60:17, col:37> 'double'
|   |   |           `-CStyleCastExpr 0x212ff75da00 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |             `-ParenExpr 0x212ff75d9e0 <col:26, col:36> 'unsigned long long'
|   |   |               `-BinaryOperator 0x212ff75d988 <col:27, col:35> 'unsigned long long' '<<'
|   |   |                 |-IntegerLiteral 0x212ff75d918 <col:27> 'unsigned long long' 1
|   |   |                 `-ParenExpr 0x212ff75d968 <col:33, col:35> 'int'
|   |   |                   `-IntegerLiteral 0x212ff75d940 <line:64:27> 'int' 32
|   |   |-CompoundAssignOperator 0x212ff75dc90 <line:192:9, col:28> 'double' '-=' ComputeLHSTy='double' ComputeResultTy='double'
|   |   | |-ArraySubscriptExpr 0x212ff75db90 <col:9, col:16> 'double' lvalue
|   |   | | |-ImplicitCastExpr 0x212ff75db78 <col:9, col:13> 'double *' <ArrayToPointerDecay>
|   |   | | | `-MemberExpr 0x212ff75db20 <col:9, col:13> 'double [6]' lvalue ->s 0x212ff6dfa50
|   |   | | |   `-ImplicitCastExpr 0x212ff75db08 <col:9> 'poly1305_internal *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x212ff75dae8 <col:9> 'poly1305_internal *' lvalue Var 0x212ff6ea190 'st' 'poly1305_internal *'
|   |   | | `-IntegerLiteral 0x212ff75db50 <col:15> 'int' 2
|   |   | `-ImplicitCastExpr 0x212ff75dc78 <col:21, col:28> 'double' <LValueToRValue>
|   |   |   `-ArraySubscriptExpr 0x212ff75dc58 <col:21, col:28> 'double' lvalue
|   |   |     |-ImplicitCastExpr 0x212ff75dc40 <col:21, col:25> 'double *' <ArrayToPointerDecay>
|   |   |     | `-MemberExpr 0x212ff75dbe8 <col:21, col:25> 'double [6]' lvalue ->s 0x212ff6dfa50
|   |   |     |   `-ImplicitCastExpr 0x212ff75dbd0 <col:21> 'poly1305_internal *' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x212ff75dbb0 <col:21> 'poly1305_internal *' lvalue Var 0x212ff6ea190 'st' 'poly1305_internal *'
|   |   |     `-IntegerLiteral 0x212ff75dc18 <col:27> 'int' 3
|   |   |-BinaryOperator 0x212ff765258 <line:194:9, line:64:30> 'double' '='
|   |   | |-ArraySubscriptExpr 0x212ff75dd68 <line:194:9, col:16> 'double' lvalue
|   |   | | |-ImplicitCastExpr 0x212ff75dd50 <col:9, col:13> 'double *' <ArrayToPointerDecay>
|   |   | | | `-MemberExpr 0x212ff75dcf8 <col:9, col:13> 'double [6]' lvalue ->s 0x212ff6dfa50
|   |   | | |   `-ImplicitCastExpr 0x212ff75dce0 <col:9> 'poly1305_internal *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x212ff75dcc0 <col:9> 'poly1305_internal *' lvalue Var 0x212ff6ea190 'st' 'poly1305_internal *'
|   |   | | `-IntegerLiteral 0x212ff75dd28 <col:15> 'int' 5
|   |   | `-BinaryOperator 0x212ff765238 <col:20, line:64:30> 'double' '-'
|   |   |   |-ParenExpr 0x212ff763878 <line:194:20, col:59> 'double'
|   |   |   | `-BinaryOperator 0x212ff763858 <col:21, line:64:30> 'double' '+'
|   |   |   |   |-ImplicitCastExpr 0x212ff763840 <line:194:21, col:28> 'double' <LValueToRValue>
|   |   |   |   | `-ArraySubscriptExpr 0x212ff75de30 <col:21, col:28> 'double' lvalue
|   |   |   |   |   |-ImplicitCastExpr 0x212ff75de18 <col:21, col:25> 'double *' <ArrayToPointerDecay>
|   |   |   |   |   | `-MemberExpr 0x212ff75ddc0 <col:21, col:25> 'double [6]' lvalue ->s 0x212ff6dfa50
|   |   |   |   |   |   `-ImplicitCastExpr 0x212ff75dda8 <col:21> 'poly1305_internal *' <LValueToRValue>
|   |   |   |   |   |     `-DeclRefExpr 0x212ff75dd88 <col:21> 'poly1305_internal *' lvalue Var 0x212ff6ea190 'st' 'poly1305_internal *'
|   |   |   |   |   `-IntegerLiteral 0x212ff75ddf0 <col:27> 'int' 4
|   |   |   |   `-BinaryOperator 0x212ff763820 <line:60:17, line:64:30> 'double' '/'
|   |   |   |     |-BinaryOperator 0x212ff7633f0 <line:60:17, line:63:30> 'double' '*'
|   |   |   |     | |-BinaryOperator 0x212ff763130 <line:60:17, col:37> 'double' '*'
|   |   |   |     | | |-ParenExpr 0x212ff75df60 <col:17, col:37> 'double'
|   |   |   |     | | | `-CStyleCastExpr 0x212ff75df38 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |     | | |   `-ParenExpr 0x212ff75df18 <col:26, col:36> 'unsigned long long'
|   |   |   |     | | |     `-BinaryOperator 0x212ff75dec0 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |     | | |       |-IntegerLiteral 0x212ff75de50 <col:27> 'unsigned long long' 1
|   |   |   |     | | |       `-ParenExpr 0x212ff75dea0 <col:33, col:35> 'int'
|   |   |   |     | | |         `-IntegerLiteral 0x212ff75de78 <line:194:36> 'int' 52
|   |   |   |     | | `-ParenExpr 0x212ff763110 <line:60:17, col:37> 'double'
|   |   |   |     | |   `-CStyleCastExpr 0x212ff7630e8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |     | |     `-ParenExpr 0x212ff7630c8 <col:26, col:36> 'unsigned long long'
|   |   |   |     | |       `-BinaryOperator 0x212ff763070 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |     | |         |-IntegerLiteral 0x212ff763000 <col:27> 'unsigned long long' 1
|   |   |   |     | |         `-ParenExpr 0x212ff763050 <col:33, col:35> 'int'
|   |   |   |     | |           `-IntegerLiteral 0x212ff763028 <line:194:44> 'int' 16
|   |   |   |     | `-ParenExpr 0x212ff7633d0 <line:63:16, col:30> 'double'
|   |   |   |     |   `-BinaryOperator 0x212ff7633b0 <line:60:17, col:37> 'double' '*'
|   |   |   |     |     |-ParenExpr 0x212ff763260 <col:17, col:37> 'double'
|   |   |   |     |     | `-CStyleCastExpr 0x212ff763238 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |     |     |   `-ParenExpr 0x212ff763218 <col:26, col:36> 'unsigned long long'
|   |   |   |     |     |     `-BinaryOperator 0x212ff7631c0 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |     |     |       |-IntegerLiteral 0x212ff763150 <col:27> 'unsigned long long' 1
|   |   |   |     |     |       `-ParenExpr 0x212ff7631a0 <col:33, col:35> 'int'
|   |   |   |     |     |         `-IntegerLiteral 0x212ff763178 <line:62:20> 'int' 32
|   |   |   |     |     `-ParenExpr 0x212ff763390 <line:60:17, col:37> 'double'
|   |   |   |     |       `-CStyleCastExpr 0x212ff763368 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |     |         `-ParenExpr 0x212ff763348 <col:26, col:36> 'unsigned long long'
|   |   |   |     |           `-BinaryOperator 0x212ff7632f0 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |     |             |-IntegerLiteral 0x212ff763280 <col:27> 'unsigned long long' 1
|   |   |   |     |             `-ParenExpr 0x212ff7632d0 <col:33, col:35> 'int'
|   |   |   |     |               `-IntegerLiteral 0x212ff7632a8 <line:63:27> 'int' 32
|   |   |   |     `-ParenExpr 0x212ff763800 <line:64:16, col:30> 'double'
|   |   |   |       `-BinaryOperator 0x212ff7637e0 <line:63:16, line:60:37> 'double' '*'
|   |   |   |         |-ParenExpr 0x212ff763690 <line:63:16, col:30> 'double'
|   |   |   |         | `-BinaryOperator 0x212ff763670 <line:60:17, col:37> 'double' '*'
|   |   |   |         |   |-ParenExpr 0x212ff763520 <col:17, col:37> 'double'
|   |   |   |         |   | `-CStyleCastExpr 0x212ff7634f8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |         |   |   `-ParenExpr 0x212ff7634d8 <col:26, col:36> 'unsigned long long'
|   |   |   |         |   |     `-BinaryOperator 0x212ff763480 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |         |   |       |-IntegerLiteral 0x212ff763410 <col:27> 'unsigned long long' 1
|   |   |   |         |   |       `-ParenExpr 0x212ff763460 <col:33, col:35> 'int'
|   |   |   |         |   |         `-IntegerLiteral 0x212ff763438 <line:62:20> 'int' 32
|   |   |   |         |   `-ParenExpr 0x212ff763650 <line:60:17, col:37> 'double'
|   |   |   |         |     `-CStyleCastExpr 0x212ff763628 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |         |       `-ParenExpr 0x212ff763608 <col:26, col:36> 'unsigned long long'
|   |   |   |         |         `-BinaryOperator 0x212ff7635b0 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |         |           |-IntegerLiteral 0x212ff763540 <col:27> 'unsigned long long' 1
|   |   |   |         |           `-ParenExpr 0x212ff763590 <col:33, col:35> 'int'
|   |   |   |         |             `-IntegerLiteral 0x212ff763568 <line:63:27> 'int' 32
|   |   |   |         `-ParenExpr 0x212ff7637c0 <line:60:17, col:37> 'double'
|   |   |   |           `-CStyleCastExpr 0x212ff763798 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |             `-ParenExpr 0x212ff763778 <col:26, col:36> 'unsigned long long'
|   |   |   |               `-BinaryOperator 0x212ff763720 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |                 |-IntegerLiteral 0x212ff7636b0 <col:27> 'unsigned long long' 1
|   |   |   |                 `-ParenExpr 0x212ff763700 <col:33, col:35> 'int'
|   |   |   |                   `-IntegerLiteral 0x212ff7636d8 <line:64:27> 'int' 32
|   |   |   `-BinaryOperator 0x212ff765218 <line:60:17, line:64:30> 'double' '/'
|   |   |     |-BinaryOperator 0x212ff763db8 <line:60:17, line:63:30> 'double' '*'
|   |   |     | |-BinaryOperator 0x212ff763af8 <line:60:17, col:37> 'double' '*'
|   |   |     | | |-ParenExpr 0x212ff7639a8 <col:17, col:37> 'double'
|   |   |     | | | `-CStyleCastExpr 0x212ff763980 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     | | |   `-ParenExpr 0x212ff763960 <col:26, col:36> 'unsigned long long'
|   |   |     | | |     `-BinaryOperator 0x212ff763908 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     | | |       |-IntegerLiteral 0x212ff763898 <col:27> 'unsigned long long' 1
|   |   |     | | |       `-ParenExpr 0x212ff7638e8 <col:33, col:35> 'int'
|   |   |     | | |         `-IntegerLiteral 0x212ff7638c0 <line:195:36> 'int' 52
|   |   |     | | `-ParenExpr 0x212ff763ad8 <line:60:17, col:37> 'double'
|   |   |     | |   `-CStyleCastExpr 0x212ff763ab0 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     | |     `-ParenExpr 0x212ff763a90 <col:26, col:36> 'unsigned long long'
|   |   |     | |       `-BinaryOperator 0x212ff763a38 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     | |         |-IntegerLiteral 0x212ff7639c8 <col:27> 'unsigned long long' 1
|   |   |     | |         `-ParenExpr 0x212ff763a18 <col:33, col:35> 'int'
|   |   |     | |           `-IntegerLiteral 0x212ff7639f0 <line:195:44> 'int' 16
|   |   |     | `-ParenExpr 0x212ff763d98 <line:63:16, col:30> 'double'
|   |   |     |   `-BinaryOperator 0x212ff763d78 <line:60:17, col:37> 'double' '*'
|   |   |     |     |-ParenExpr 0x212ff763c28 <col:17, col:37> 'double'
|   |   |     |     | `-CStyleCastExpr 0x212ff763c00 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     |     |   `-ParenExpr 0x212ff763be0 <col:26, col:36> 'unsigned long long'
|   |   |     |     |     `-BinaryOperator 0x212ff763b88 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     |     |       |-IntegerLiteral 0x212ff763b18 <col:27> 'unsigned long long' 1
|   |   |     |     |       `-ParenExpr 0x212ff763b68 <col:33, col:35> 'int'
|   |   |     |     |         `-IntegerLiteral 0x212ff763b40 <line:62:20> 'int' 32
|   |   |     |     `-ParenExpr 0x212ff763d58 <line:60:17, col:37> 'double'
|   |   |     |       `-CStyleCastExpr 0x212ff763d30 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     |         `-ParenExpr 0x212ff763d10 <col:26, col:36> 'unsigned long long'
|   |   |     |           `-BinaryOperator 0x212ff763cb8 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     |             |-IntegerLiteral 0x212ff763c48 <col:27> 'unsigned long long' 1
|   |   |     |             `-ParenExpr 0x212ff763c98 <col:33, col:35> 'int'
|   |   |     |               `-IntegerLiteral 0x212ff763c70 <line:63:27> 'int' 32
|   |   |     `-ParenExpr 0x212ff7651f8 <line:64:16, col:30> 'double'
|   |   |       `-BinaryOperator 0x212ff7651d8 <line:63:16, line:60:37> 'double' '*'
|   |   |         |-ParenExpr 0x212ff765088 <line:63:16, col:30> 'double'
|   |   |         | `-BinaryOperator 0x212ff765068 <line:60:17, col:37> 'double' '*'
|   |   |         |   |-ParenExpr 0x212ff763ee8 <col:17, col:37> 'double'
|   |   |         |   | `-CStyleCastExpr 0x212ff763ec0 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         |   |   `-ParenExpr 0x212ff763ea0 <col:26, col:36> 'unsigned long long'
|   |   |         |   |     `-BinaryOperator 0x212ff763e48 <col:27, col:35> 'unsigned long long' '<<'
|   |   |         |   |       |-IntegerLiteral 0x212ff763dd8 <col:27> 'unsigned long long' 1
|   |   |         |   |       `-ParenExpr 0x212ff763e28 <col:33, col:35> 'int'
|   |   |         |   |         `-IntegerLiteral 0x212ff763e00 <line:62:20> 'int' 32
|   |   |         |   `-ParenExpr 0x212ff765048 <line:60:17, col:37> 'double'
|   |   |         |     `-CStyleCastExpr 0x212ff765020 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         |       `-ParenExpr 0x212ff763fd0 <col:26, col:36> 'unsigned long long'
|   |   |         |         `-BinaryOperator 0x212ff763f78 <col:27, col:35> 'unsigned long long' '<<'
|   |   |         |           |-IntegerLiteral 0x212ff763f08 <col:27> 'unsigned long long' 1
|   |   |         |           `-ParenExpr 0x212ff763f58 <col:33, col:35> 'int'
|   |   |         |             `-IntegerLiteral 0x212ff763f30 <line:63:27> 'int' 32
|   |   |         `-ParenExpr 0x212ff7651b8 <line:60:17, col:37> 'double'
|   |   |           `-CStyleCastExpr 0x212ff765190 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |             `-ParenExpr 0x212ff765170 <col:26, col:36> 'unsigned long long'
|   |   |               `-BinaryOperator 0x212ff765118 <col:27, col:35> 'unsigned long long' '<<'
|   |   |                 |-IntegerLiteral 0x212ff7650a8 <col:27> 'unsigned long long' 1
|   |   |                 `-ParenExpr 0x212ff7650f8 <col:33, col:35> 'int'
|   |   |                   `-IntegerLiteral 0x212ff7650d0 <line:64:27> 'int' 32
|   |   |-CompoundAssignOperator 0x212ff765420 <line:196:9, col:28> 'double' '-=' ComputeLHSTy='double' ComputeResultTy='double'
|   |   | |-ArraySubscriptExpr 0x212ff765320 <col:9, col:16> 'double' lvalue
|   |   | | |-ImplicitCastExpr 0x212ff765308 <col:9, col:13> 'double *' <ArrayToPointerDecay>
|   |   | | | `-MemberExpr 0x212ff7652b0 <col:9, col:13> 'double [6]' lvalue ->s 0x212ff6dfa50
|   |   | | |   `-ImplicitCastExpr 0x212ff765298 <col:9> 'poly1305_internal *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x212ff765278 <col:9> 'poly1305_internal *' lvalue Var 0x212ff6ea190 'st' 'poly1305_internal *'
|   |   | | `-IntegerLiteral 0x212ff7652e0 <col:15> 'int' 4
|   |   | `-ImplicitCastExpr 0x212ff765408 <col:21, col:28> 'double' <LValueToRValue>
|   |   |   `-ArraySubscriptExpr 0x212ff7653e8 <col:21, col:28> 'double' lvalue
|   |   |     |-ImplicitCastExpr 0x212ff7653d0 <col:21, col:25> 'double *' <ArrayToPointerDecay>
|   |   |     | `-MemberExpr 0x212ff765378 <col:21, col:25> 'double [6]' lvalue ->s 0x212ff6dfa50
|   |   |     |   `-ImplicitCastExpr 0x212ff765360 <col:21> 'poly1305_internal *' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x212ff765340 <col:21> 'poly1305_internal *' lvalue Var 0x212ff6ea190 'st' 'poly1305_internal *'
|   |   |     `-IntegerLiteral 0x212ff7653a8 <col:27> 'int' 5
|   |   `-GCCAsmStmt 0x212ff7654b8 <line:202:9, col:52>
|   |     `-DeclRefExpr 0x212ff765498 <col:41> 'u32':'unsigned int' lvalue Var 0x212ff6eafa0 'mxcsr_orig' 'u32':'unsigned int'
|   `-ReturnStmt 0x212ff765660 <line:212:5, col:12>
|     `-IntegerLiteral 0x212ff765638 <col:12> 'int' 0
|-FunctionDecl 0x212ff7659f8 <line:215:1, line:412:1> line:215:6 poly1305_blocks 'void (void *, const unsigned char *, size_t, int)'
| |-ParmVarDecl 0x212ff7656d8 <col:22, col:28> col:28 used ctx 'void *'
| |-ParmVarDecl 0x212ff765758 <col:33, col:54> col:54 used inp 'const unsigned char *'
| |-ParmVarDecl 0x212ff7657d0 <col:59, col:66> col:66 used len 'size_t':'unsigned long long'
| |-ParmVarDecl 0x212ff765850 <line:216:22, col:26> col:26 used padbit 'int'
| `-CompoundStmt 0x212ff77ce28 <line:217:1, line:412:1>
|   |-DeclStmt 0x212ff765bb8 <line:218:5, col:53>
|   | `-VarDecl 0x212ff765ae0 <col:5, col:50> col:24 used st 'poly1305_internal *' cinit
|   |   `-CStyleCastExpr 0x212ff765b90 <col:29, col:50> 'poly1305_internal *' <BitCast>
|   |     `-ImplicitCastExpr 0x212ff765b78 <col:50> 'void *' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0x212ff765b48 <col:50> 'void *' lvalue ParmVar 0x212ff7656d8 'ctx' 'void *'
|   |-DeclStmt 0x212ff765dd8 <line:219:5, col:30>
|   | |-VarDecl 0x212ff765be0 <col:5, col:12> col:12 used in0 'elem64':'elem64'
|   | |-VarDecl 0x212ff765c58 <col:5, col:17> col:17 used in1 'elem64':'elem64'
|   | |-VarDecl 0x212ff765cd0 <col:5, col:22> col:22 used in2 'elem64':'elem64'
|   | `-VarDecl 0x212ff765d48 <col:5, col:27> col:27 used in3 'elem64':'elem64'
|   |-DeclStmt 0x212ff765f20 <line:220:5, col:30>
|   | `-VarDecl 0x212ff765e00 <col:5, col:28> col:9 used pad 'u64':'unsigned long long' cinit
|   |   `-BinaryOperator 0x212ff765f00 <col:15, col:28> 'u64':'unsigned long long' '<<'
|   |     |-CStyleCastExpr 0x212ff765eb0 <col:15, col:20> 'u64':'unsigned long long' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x212ff765e98 <col:20> 'int' <LValueToRValue> part_of_explicit_cast
|   |     |   `-DeclRefExpr 0x212ff765e68 <col:20> 'int' lvalue ParmVar 0x212ff765850 'padbit' 'int'
|   |     `-IntegerLiteral 0x212ff765ed8 <col:28> 'int' 32
|   |-DeclStmt 0x212ff7661c0 <line:222:5, col:26>
|   | |-VarDecl 0x212ff765f50 <col:5, col:12> col:12 used x0 'double'
|   | |-VarDecl 0x212ff766030 <col:5, col:16> col:16 used x1 'double'
|   | |-VarDecl 0x212ff7660b0 <col:5, col:20> col:20 used x2 'double'
|   | `-VarDecl 0x212ff766130 <col:5, col:24> col:24 used x3 'double'
|   |-DeclStmt 0x212ff766620 <line:223:5, col:58>
|   | |-VarDecl 0x212ff7661f0 <col:5, col:12> col:12 used h0lo 'double'
|   | |-VarDecl 0x212ff766270 <col:5, col:18> col:18 used h0hi 'double'
|   | |-VarDecl 0x212ff7662f0 <col:5, col:24> col:24 used h1lo 'double'
|   | |-VarDecl 0x212ff766370 <col:5, col:30> col:30 used h1hi 'double'
|   | |-VarDecl 0x212ff7663f0 <col:5, col:36> col:36 used h2lo 'double'
|   | |-VarDecl 0x212ff766470 <col:5, col:42> col:42 used h2hi 'double'
|   | |-VarDecl 0x212ff7664f0 <col:5, col:48> col:48 used h3lo 'double'
|   | `-VarDecl 0x212ff766570 <col:5, col:54> col:54 used h3hi 'double'
|   |-DeclStmt 0x212ff766a80 <line:224:5, col:58>
|   | |-VarDecl 0x212ff766650 <col:5, col:12> col:12 used c0lo 'double'
|   | |-VarDecl 0x212ff7666d0 <col:5, col:18> col:18 used c0hi 'double'
|   | |-VarDecl 0x212ff766750 <col:5, col:24> col:24 used c1lo 'double'
|   | |-VarDecl 0x212ff7667d0 <col:5, col:30> col:30 used c1hi 'double'
|   | |-VarDecl 0x212ff766850 <col:5, col:36> col:36 used c2lo 'double'
|   | |-VarDecl 0x212ff7668d0 <col:5, col:42> col:42 used c2hi 'double'
|   | |-VarDecl 0x212ff766950 <col:5, col:48> col:48 used c3lo 'double'
|   | `-VarDecl 0x212ff7669d0 <col:5, col:54> col:54 used c3hi 'double'
|   |-DeclStmt 0x212ff766c10 <line:226:5, col:33>
|   | `-VarDecl 0x212ff766ab0 <col:5, col:32> col:18 used r0lo 'const double' cinit
|   |   `-ImplicitCastExpr 0x212ff766bf8 <col:25, col:32> 'double' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x212ff766bd8 <col:25, col:32> 'double' lvalue
|   |       |-ImplicitCastExpr 0x212ff766bc0 <col:25, col:29> 'double *' <ArrayToPointerDecay>
|   |       | `-MemberExpr 0x212ff766b68 <col:25, col:29> 'double [8]' lvalue ->r 0x212ff6df950
|   |       |   `-ImplicitCastExpr 0x212ff766b50 <col:25> 'poly1305_internal *' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x212ff766b18 <col:25> 'poly1305_internal *' lvalue Var 0x212ff765ae0 'st' 'poly1305_internal *'
|   |       `-IntegerLiteral 0x212ff766b98 <col:31> 'int' 0
|   |-DeclStmt 0x212ff766d88 <line:227:5, col:33>
|   | `-VarDecl 0x212ff766c40 <col:5, col:32> col:18 used r0hi 'const double' cinit
|   |   `-ImplicitCastExpr 0x212ff766d70 <col:25, col:32> 'double' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x212ff766d50 <col:25, col:32> 'double' lvalue
|   |       |-ImplicitCastExpr 0x212ff766d38 <col:25, col:29> 'double *' <ArrayToPointerDecay>
|   |       | `-MemberExpr 0x212ff766ce0 <col:25, col:29> 'double [8]' lvalue ->r 0x212ff6df950
|   |       |   `-ImplicitCastExpr 0x212ff766cc8 <col:25> 'poly1305_internal *' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x212ff766ca8 <col:25> 'poly1305_internal *' lvalue Var 0x212ff765ae0 'st' 'poly1305_internal *'
|   |       `-IntegerLiteral 0x212ff766d10 <col:31> 'int' 1
|   |-DeclStmt 0x212ff766f00 <line:228:5, col:33>
|   | `-VarDecl 0x212ff766db8 <col:5, col:32> col:18 used r1lo 'const double' cinit
|   |   `-ImplicitCastExpr 0x212ff766ee8 <col:25, col:32> 'double' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x212ff766ec8 <col:25, col:32> 'double' lvalue
|   |       |-ImplicitCastExpr 0x212ff766eb0 <col:25, col:29> 'double *' <ArrayToPointerDecay>
|   |       | `-MemberExpr 0x212ff766e58 <col:25, col:29> 'double [8]' lvalue ->r 0x212ff6df950
|   |       |   `-ImplicitCastExpr 0x212ff766e40 <col:25> 'poly1305_internal *' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x212ff766e20 <col:25> 'poly1305_internal *' lvalue Var 0x212ff765ae0 'st' 'poly1305_internal *'
|   |       `-IntegerLiteral 0x212ff766e88 <col:31> 'int' 2
|   |-DeclStmt 0x212ff75f010 <line:229:5, col:33>
|   | `-VarDecl 0x212ff766f30 <col:5, col:32> col:18 used r1hi 'const double' cinit
|   |   `-ImplicitCastExpr 0x212ff75eff8 <col:25, col:32> 'double' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x212ff75efd8 <col:25, col:32> 'double' lvalue
|   |       |-ImplicitCastExpr 0x212ff75efc0 <col:25, col:29> 'double *' <ArrayToPointerDecay>
|   |       | `-MemberExpr 0x212ff766fd0 <col:25, col:29> 'double [8]' lvalue ->r 0x212ff6df950
|   |       |   `-ImplicitCastExpr 0x212ff766fb8 <col:25> 'poly1305_internal *' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x212ff766f98 <col:25> 'poly1305_internal *' lvalue Var 0x212ff765ae0 'st' 'poly1305_internal *'
|   |       `-IntegerLiteral 0x212ff767000 <col:31> 'int' 3
|   |-DeclStmt 0x212ff75f188 <line:230:5, col:33>
|   | `-VarDecl 0x212ff75f040 <col:5, col:32> col:18 used r2lo 'const double' cinit
|   |   `-ImplicitCastExpr 0x212ff75f170 <col:25, col:32> 'double' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x212ff75f150 <col:25, col:32> 'double' lvalue
|   |       |-ImplicitCastExpr 0x212ff75f138 <col:25, col:29> 'double *' <ArrayToPointerDecay>
|   |       | `-MemberExpr 0x212ff75f0e0 <col:25, col:29> 'double [8]' lvalue ->r 0x212ff6df950
|   |       |   `-ImplicitCastExpr 0x212ff75f0c8 <col:25> 'poly1305_internal *' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x212ff75f0a8 <col:25> 'poly1305_internal *' lvalue Var 0x212ff765ae0 'st' 'poly1305_internal *'
|   |       `-IntegerLiteral 0x212ff75f110 <col:31> 'int' 4
|   |-DeclStmt 0x212ff75f300 <line:231:5, col:33>
|   | `-VarDecl 0x212ff75f1b8 <col:5, col:32> col:18 used r2hi 'const double' cinit
|   |   `-ImplicitCastExpr 0x212ff75f2e8 <col:25, col:32> 'double' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x212ff75f2c8 <col:25, col:32> 'double' lvalue
|   |       |-ImplicitCastExpr 0x212ff75f2b0 <col:25, col:29> 'double *' <ArrayToPointerDecay>
|   |       | `-MemberExpr 0x212ff75f258 <col:25, col:29> 'double [8]' lvalue ->r 0x212ff6df950
|   |       |   `-ImplicitCastExpr 0x212ff75f240 <col:25> 'poly1305_internal *' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x212ff75f220 <col:25> 'poly1305_internal *' lvalue Var 0x212ff765ae0 'st' 'poly1305_internal *'
|   |       `-IntegerLiteral 0x212ff75f288 <col:31> 'int' 5
|   |-DeclStmt 0x212ff75f478 <line:232:5, col:33>
|   | `-VarDecl 0x212ff75f330 <col:5, col:32> col:18 used r3lo 'const double' cinit
|   |   `-ImplicitCastExpr 0x212ff75f460 <col:25, col:32> 'double' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x212ff75f440 <col:25, col:32> 'double' lvalue
|   |       |-ImplicitCastExpr 0x212ff75f428 <col:25, col:29> 'double *' <ArrayToPointerDecay>
|   |       | `-MemberExpr 0x212ff75f3d0 <col:25, col:29> 'double [8]' lvalue ->r 0x212ff6df950
|   |       |   `-ImplicitCastExpr 0x212ff75f3b8 <col:25> 'poly1305_internal *' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x212ff75f398 <col:25> 'poly1305_internal *' lvalue Var 0x212ff765ae0 'st' 'poly1305_internal *'
|   |       `-IntegerLiteral 0x212ff75f400 <col:31> 'int' 6
|   |-DeclStmt 0x212ff75f5f0 <line:233:5, col:33>
|   | `-VarDecl 0x212ff75f4a8 <col:5, col:32> col:18 used r3hi 'const double' cinit
|   |   `-ImplicitCastExpr 0x212ff75f5d8 <col:25, col:32> 'double' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x212ff75f5b8 <col:25, col:32> 'double' lvalue
|   |       |-ImplicitCastExpr 0x212ff75f5a0 <col:25, col:29> 'double *' <ArrayToPointerDecay>
|   |       | `-MemberExpr 0x212ff75f548 <col:25, col:29> 'double [8]' lvalue ->r 0x212ff6df950
|   |       |   `-ImplicitCastExpr 0x212ff75f530 <col:25> 'poly1305_internal *' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x212ff75f510 <col:25> 'poly1305_internal *' lvalue Var 0x212ff765ae0 'st' 'poly1305_internal *'
|   |       `-IntegerLiteral 0x212ff75f578 <col:31> 'int' 7
|   |-DeclStmt 0x212ff75f768 <line:235:5, col:33>
|   | `-VarDecl 0x212ff75f620 <col:5, col:32> col:18 used s1lo 'const double' cinit
|   |   `-ImplicitCastExpr 0x212ff75f750 <col:25, col:32> 'double' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x212ff75f730 <col:25, col:32> 'double' lvalue
|   |       |-ImplicitCastExpr 0x212ff75f718 <col:25, col:29> 'double *' <ArrayToPointerDecay>
|   |       | `-MemberExpr 0x212ff75f6c0 <col:25, col:29> 'double [6]' lvalue ->s 0x212ff6dfa50
|   |       |   `-ImplicitCastExpr 0x212ff75f6a8 <col:25> 'poly1305_internal *' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x212ff75f688 <col:25> 'poly1305_internal *' lvalue Var 0x212ff765ae0 'st' 'poly1305_internal *'
|   |       `-IntegerLiteral 0x212ff75f6f0 <col:31> 'int' 0
|   |-DeclStmt 0x212ff75f8e0 <line:236:5, col:33>
|   | `-VarDecl 0x212ff75f798 <col:5, col:32> col:18 used s1hi 'const double' cinit
|   |   `-ImplicitCastExpr 0x212ff75f8c8 <col:25, col:32> 'double' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x212ff75f8a8 <col:25, col:32> 'double' lvalue
|   |       |-ImplicitCastExpr 0x212ff75f890 <col:25, col:29> 'double *' <ArrayToPointerDecay>
|   |       | `-MemberExpr 0x212ff75f838 <col:25, col:29> 'double [6]' lvalue ->s 0x212ff6dfa50
|   |       |   `-ImplicitCastExpr 0x212ff75f820 <col:25> 'poly1305_internal *' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x212ff75f800 <col:25> 'poly1305_internal *' lvalue Var 0x212ff765ae0 'st' 'poly1305_internal *'
|   |       `-IntegerLiteral 0x212ff75f868 <col:31> 'int' 1
|   |-DeclStmt 0x212ff75fa58 <line:237:5, col:33>
|   | `-VarDecl 0x212ff75f910 <col:5, col:32> col:18 used s2lo 'const double' cinit
|   |   `-ImplicitCastExpr 0x212ff75fa40 <col:25, col:32> 'double' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x212ff75fa20 <col:25, col:32> 'double' lvalue
|   |       |-ImplicitCastExpr 0x212ff75fa08 <col:25, col:29> 'double *' <ArrayToPointerDecay>
|   |       | `-MemberExpr 0x212ff75f9b0 <col:25, col:29> 'double [6]' lvalue ->s 0x212ff6dfa50
|   |       |   `-ImplicitCastExpr 0x212ff75f998 <col:25> 'poly1305_internal *' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x212ff75f978 <col:25> 'poly1305_internal *' lvalue Var 0x212ff765ae0 'st' 'poly1305_internal *'
|   |       `-IntegerLiteral 0x212ff75f9e0 <col:31> 'int' 2
|   |-DeclStmt 0x212ff75fbd0 <line:238:5, col:33>
|   | `-VarDecl 0x212ff75fa88 <col:5, col:32> col:18 used s2hi 'const double' cinit
|   |   `-ImplicitCastExpr 0x212ff75fbb8 <col:25, col:32> 'double' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x212ff75fb98 <col:25, col:32> 'double' lvalue
|   |       |-ImplicitCastExpr 0x212ff75fb80 <col:25, col:29> 'double *' <ArrayToPointerDecay>
|   |       | `-MemberExpr 0x212ff75fb28 <col:25, col:29> 'double [6]' lvalue ->s 0x212ff6dfa50
|   |       |   `-ImplicitCastExpr 0x212ff75fb10 <col:25> 'poly1305_internal *' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x212ff75faf0 <col:25> 'poly1305_internal *' lvalue Var 0x212ff765ae0 'st' 'poly1305_internal *'
|   |       `-IntegerLiteral 0x212ff75fb58 <col:31> 'int' 3
|   |-DeclStmt 0x212ff75fd48 <line:239:5, col:33>
|   | `-VarDecl 0x212ff75fc00 <col:5, col:32> col:18 used s3lo 'const double' cinit
|   |   `-ImplicitCastExpr 0x212ff75fd30 <col:25, col:32> 'double' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x212ff75fd10 <col:25, col:32> 'double' lvalue
|   |       |-ImplicitCastExpr 0x212ff75fcf8 <col:25, col:29> 'double *' <ArrayToPointerDecay>
|   |       | `-MemberExpr 0x212ff75fca0 <col:25, col:29> 'double [6]' lvalue ->s 0x212ff6dfa50
|   |       |   `-ImplicitCastExpr 0x212ff75fc88 <col:25> 'poly1305_internal *' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x212ff75fc68 <col:25> 'poly1305_internal *' lvalue Var 0x212ff765ae0 'st' 'poly1305_internal *'
|   |       `-IntegerLiteral 0x212ff75fcd0 <col:31> 'int' 4
|   |-DeclStmt 0x212ff75fec0 <line:240:5, col:33>
|   | `-VarDecl 0x212ff75fd78 <col:5, col:32> col:18 used s3hi 'const double' cinit
|   |   `-ImplicitCastExpr 0x212ff75fea8 <col:25, col:32> 'double' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x212ff75fe88 <col:25, col:32> 'double' lvalue
|   |       |-ImplicitCastExpr 0x212ff75fe70 <col:25, col:29> 'double *' <ArrayToPointerDecay>
|   |       | `-MemberExpr 0x212ff75fe18 <col:25, col:29> 'double [6]' lvalue ->s 0x212ff6dfa50
|   |       |   `-ImplicitCastExpr 0x212ff75fe00 <col:25> 'poly1305_internal *' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x212ff75fde0 <col:25> 'poly1305_internal *' lvalue Var 0x212ff765ae0 'st' 'poly1305_internal *'
|   |       `-IntegerLiteral 0x212ff75fe48 <col:31> 'int' 5
|   |-DeclStmt 0x212ff75ff50 <line:246:5, col:19>
|   | `-VarDecl 0x212ff75fee8 <col:5, col:9> col:9 used mxcsr_orig 'u32':'unsigned int'
|   |-GCCAsmStmt 0x212ff767078 <line:248:5, col:48>
|   | `-DeclRefExpr 0x212ff767040 <col:37> 'u32':'unsigned int' lvalue Var 0x212ff75fee8 'mxcsr_orig' 'u32':'unsigned int'
|   |-GCCAsmStmt 0x212ff767150 <line:249:5, col:43>
|   | `-DeclRefExpr 0x212ff767130 <col:37> 'const u32':'const unsigned int' lvalue Var 0x212ff6dfbb0 'mxcsr' 'const u32':'const unsigned int'
|   |-BinaryOperator 0x212ff7675a8 <line:270:5, line:60:37> 'double' '='
|   | |-DeclRefExpr 0x212ff7671c0 <line:270:5> 'double' lvalue Var 0x212ff7661f0 'h0lo' 'double'
|   | `-BinaryOperator 0x212ff767588 <col:12, line:60:37> 'double' '-'
|   |   |-ImplicitCastExpr 0x212ff767570 <line:270:12, col:21> 'double' <LValueToRValue>
|   |   | `-MemberExpr 0x212ff7672c0 <col:12, col:21> 'double' lvalue .d 0x212ff6df498
|   |   |   `-ArraySubscriptExpr 0x212ff7672a0 <col:12, col:19> 'elem64':'elem64' lvalue
|   |   |     |-ImplicitCastExpr 0x212ff767288 <col:12, col:16> 'elem64 *' <ArrayToPointerDecay>
|   |   |     | `-MemberExpr 0x212ff767230 <col:12, col:16> 'elem64 [4]' lvalue ->h 0x212ff6df858
|   |   |     |   `-ImplicitCastExpr 0x212ff767218 <col:12> 'poly1305_internal *' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x212ff7671f8 <col:12> 'poly1305_internal *' lvalue Var 0x212ff765ae0 'st' 'poly1305_internal *'
|   |   |     `-IntegerLiteral 0x212ff767260 <col:18> 'int' 0
|   |   `-BinaryOperator 0x212ff767550 <line:60:17, col:37> 'double' '*'
|   |     |-ParenExpr 0x212ff767400 <col:17, col:37> 'double'
|   |     | `-CStyleCastExpr 0x212ff7673d8 <col:18, col:36> 'double' <IntegralToFloating>
|   |     |   `-ParenExpr 0x212ff7673b8 <col:26, col:36> 'unsigned long long'
|   |     |     `-BinaryOperator 0x212ff767360 <col:27, col:35> 'unsigned long long' '<<'
|   |     |       |-IntegerLiteral 0x212ff7672f0 <col:27> 'unsigned long long' 1
|   |     |       `-ParenExpr 0x212ff767340 <col:33, col:35> 'int'
|   |     |         `-IntegerLiteral 0x212ff767318 <line:270:29> 'int' 52
|   |     `-ParenExpr 0x212ff767530 <line:60:17, col:37> 'double'
|   |       `-CStyleCastExpr 0x212ff767508 <col:18, col:36> 'double' <IntegralToFloating>
|   |         `-ParenExpr 0x212ff7674e8 <col:26, col:36> 'unsigned long long'
|   |           `-BinaryOperator 0x212ff767490 <col:27, col:35> 'unsigned long long' '<<'
|   |             |-IntegerLiteral 0x212ff767420 <col:27> 'unsigned long long' 1
|   |             `-ParenExpr 0x212ff767470 <col:33, col:35> 'int'
|   |               `-IntegerLiteral 0x212ff767448 <line:61:19> 'int' 0
|   |-BinaryOperator 0x212ff7679b0 <line:271:5, line:60:37> 'double' '='
|   | |-DeclRefExpr 0x212ff7675c8 <line:271:5> 'double' lvalue Var 0x212ff7662f0 'h1lo' 'double'
|   | `-BinaryOperator 0x212ff767990 <col:12, line:60:37> 'double' '-'
|   |   |-ImplicitCastExpr 0x212ff767978 <line:271:12, col:21> 'double' <LValueToRValue>
|   |   | `-MemberExpr 0x212ff7676c8 <col:12, col:21> 'double' lvalue .d 0x212ff6df498
|   |   |   `-ArraySubscriptExpr 0x212ff7676a8 <col:12, col:19> 'elem64':'elem64' lvalue
|   |   |     |-ImplicitCastExpr 0x212ff767690 <col:12, col:16> 'elem64 *' <ArrayToPointerDecay>
|   |   |     | `-MemberExpr 0x212ff767638 <col:12, col:16> 'elem64 [4]' lvalue ->h 0x212ff6df858
|   |   |     |   `-ImplicitCastExpr 0x212ff767620 <col:12> 'poly1305_internal *' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x212ff767600 <col:12> 'poly1305_internal *' lvalue Var 0x212ff765ae0 'st' 'poly1305_internal *'
|   |   |     `-IntegerLiteral 0x212ff767668 <col:18> 'int' 1
|   |   `-BinaryOperator 0x212ff767958 <line:60:17, col:37> 'double' '*'
|   |     |-ParenExpr 0x212ff767808 <col:17, col:37> 'double'
|   |     | `-CStyleCastExpr 0x212ff7677e0 <col:18, col:36> 'double' <IntegralToFloating>
|   |     |   `-ParenExpr 0x212ff7677c0 <col:26, col:36> 'unsigned long long'
|   |     |     `-BinaryOperator 0x212ff767768 <col:27, col:35> 'unsigned long long' '<<'
|   |     |       |-IntegerLiteral 0x212ff7676f8 <col:27> 'unsigned long long' 1
|   |     |       `-ParenExpr 0x212ff767748 <col:33, col:35> 'int'
|   |     |         `-IntegerLiteral 0x212ff767720 <line:271:29> 'int' 52
|   |     `-ParenExpr 0x212ff767938 <line:60:17, col:37> 'double'
|   |       `-CStyleCastExpr 0x212ff767910 <col:18, col:36> 'double' <IntegralToFloating>
|   |         `-ParenExpr 0x212ff7678f0 <col:26, col:36> 'unsigned long long'
|   |           `-BinaryOperator 0x212ff767898 <col:27, col:35> 'unsigned long long' '<<'
|   |             |-IntegerLiteral 0x212ff767828 <col:27> 'unsigned long long' 1
|   |             `-ParenExpr 0x212ff767878 <col:33, col:35> 'int'
|   |               `-IntegerLiteral 0x212ff767850 <line:62:20> 'int' 32
|   |-BinaryOperator 0x212ff767f28 <line:272:5, line:63:30> 'double' '='
|   | |-DeclRefExpr 0x212ff7679d0 <line:272:5> 'double' lvalue Var 0x212ff7663f0 'h2lo' 'double'
|   | `-BinaryOperator 0x212ff767f08 <col:12, line:63:30> 'double' '-'
|   |   |-ImplicitCastExpr 0x212ff767ef0 <line:272:12, col:21> 'double' <LValueToRValue>
|   |   | `-MemberExpr 0x212ff767ad0 <col:12, col:21> 'double' lvalue .d 0x212ff6df498
|   |   |   `-ArraySubscriptExpr 0x212ff767ab0 <col:12, col:19> 'elem64':'elem64' lvalue
|   |   |     |-ImplicitCastExpr 0x212ff767a98 <col:12, col:16> 'elem64 *' <ArrayToPointerDecay>
|   |   |     | `-MemberExpr 0x212ff767a40 <col:12, col:16> 'elem64 [4]' lvalue ->h 0x212ff6df858
|   |   |     |   `-ImplicitCastExpr 0x212ff767a28 <col:12> 'poly1305_internal *' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x212ff767a08 <col:12> 'poly1305_internal *' lvalue Var 0x212ff765ae0 'st' 'poly1305_internal *'
|   |   |     `-IntegerLiteral 0x212ff767a70 <col:18> 'int' 2
|   |   `-BinaryOperator 0x212ff767ed0 <line:60:17, line:63:30> 'double' '*'
|   |     |-ParenExpr 0x212ff767c10 <line:60:17, col:37> 'double'
|   |     | `-CStyleCastExpr 0x212ff767be8 <col:18, col:36> 'double' <IntegralToFloating>
|   |     |   `-ParenExpr 0x212ff767bc8 <col:26, col:36> 'unsigned long long'
|   |     |     `-BinaryOperator 0x212ff767b70 <col:27, col:35> 'unsigned long long' '<<'
|   |     |       |-IntegerLiteral 0x212ff767b00 <col:27> 'unsigned long long' 1
|   |     |       `-ParenExpr 0x212ff767b50 <col:33, col:35> 'int'
|   |     |         `-IntegerLiteral 0x212ff767b28 <line:272:29> 'int' 52
|   |     `-ParenExpr 0x212ff767eb0 <line:63:16, col:30> 'double'
|   |       `-BinaryOperator 0x212ff767e90 <line:60:17, col:37> 'double' '*'
|   |         |-ParenExpr 0x212ff767d40 <col:17, col:37> 'double'
|   |         | `-CStyleCastExpr 0x212ff767d18 <col:18, col:36> 'double' <IntegralToFloating>
|   |         |   `-ParenExpr 0x212ff767cf8 <col:26, col:36> 'unsigned long long'
|   |         |     `-BinaryOperator 0x212ff767ca0 <col:27, col:35> 'unsigned long long' '<<'
|   |         |       |-IntegerLiteral 0x212ff767c30 <col:27> 'unsigned long long' 1
|   |         |       `-ParenExpr 0x212ff767c80 <col:33, col:35> 'int'
|   |         |         `-IntegerLiteral 0x212ff767c58 <line:62:20> 'int' 32
|   |         `-ParenExpr 0x212ff767e70 <line:60:17, col:37> 'double'
|   |           `-CStyleCastExpr 0x212ff767e48 <col:18, col:36> 'double' <IntegralToFloating>
|   |             `-ParenExpr 0x212ff767e28 <col:26, col:36> 'unsigned long long'
|   |               `-BinaryOperator 0x212ff767dd0 <col:27, col:35> 'unsigned long long' '<<'
|   |                 |-IntegerLiteral 0x212ff767d60 <col:27> 'unsigned long long' 1
|   |                 `-ParenExpr 0x212ff767db0 <col:33, col:35> 'int'
|   |                   `-IntegerLiteral 0x212ff767d88 <line:63:27> 'int' 32
|   |-BinaryOperator 0x212ff7605b8 <line:273:5, line:64:30> 'double' '='
|   | |-DeclRefExpr 0x212ff767f48 <line:273:5> 'double' lvalue Var 0x212ff7664f0 'h3lo' 'double'
|   | `-BinaryOperator 0x212ff760598 <col:12, line:64:30> 'double' '-'
|   |   |-ImplicitCastExpr 0x212ff760580 <line:273:12, col:21> 'double' <LValueToRValue>
|   |   | `-MemberExpr 0x212ff75fff0 <col:12, col:21> 'double' lvalue .d 0x212ff6df498
|   |   |   `-ArraySubscriptExpr 0x212ff75ffd0 <col:12, col:19> 'elem64':'elem64' lvalue
|   |   |     |-ImplicitCastExpr 0x212ff768010 <col:12, col:16> 'elem64 *' <ArrayToPointerDecay>
|   |   |     | `-MemberExpr 0x212ff767fb8 <col:12, col:16> 'elem64 [4]' lvalue ->h 0x212ff6df858
|   |   |     |   `-ImplicitCastExpr 0x212ff767fa0 <col:12> 'poly1305_internal *' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x212ff767f80 <col:12> 'poly1305_internal *' lvalue Var 0x212ff765ae0 'st' 'poly1305_internal *'
|   |   |     `-IntegerLiteral 0x212ff767fe8 <col:18> 'int' 3
|   |   `-BinaryOperator 0x212ff760560 <line:60:17, line:64:30> 'double' '*'
|   |     |-ParenExpr 0x212ff760130 <line:60:17, col:37> 'double'
|   |     | `-CStyleCastExpr 0x212ff760108 <col:18, col:36> 'double' <IntegralToFloating>
|   |     |   `-ParenExpr 0x212ff7600e8 <col:26, col:36> 'unsigned long long'
|   |     |     `-BinaryOperator 0x212ff760090 <col:27, col:35> 'unsigned long long' '<<'
|   |     |       |-IntegerLiteral 0x212ff760020 <col:27> 'unsigned long long' 1
|   |     |       `-ParenExpr 0x212ff760070 <col:33, col:35> 'int'
|   |     |         `-IntegerLiteral 0x212ff760048 <line:273:29> 'int' 52
|   |     `-ParenExpr 0x212ff760540 <line:64:16, col:30> 'double'
|   |       `-BinaryOperator 0x212ff760520 <line:63:16, line:60:37> 'double' '*'
|   |         |-ParenExpr 0x212ff7603d0 <line:63:16, col:30> 'double'
|   |         | `-BinaryOperator 0x212ff7603b0 <line:60:17, col:37> 'double' '*'
|   |         |   |-ParenExpr 0x212ff760260 <col:17, col:37> 'double'
|   |         |   | `-CStyleCastExpr 0x212ff760238 <col:18, col:36> 'double' <IntegralToFloating>
|   |         |   |   `-ParenExpr 0x212ff760218 <col:26, col:36> 'unsigned long long'
|   |         |   |     `-BinaryOperator 0x212ff7601c0 <col:27, col:35> 'unsigned long long' '<<'
|   |         |   |       |-IntegerLiteral 0x212ff760150 <col:27> 'unsigned long long' 1
|   |         |   |       `-ParenExpr 0x212ff7601a0 <col:33, col:35> 'int'
|   |         |   |         `-IntegerLiteral 0x212ff760178 <line:62:20> 'int' 32
|   |         |   `-ParenExpr 0x212ff760390 <line:60:17, col:37> 'double'
|   |         |     `-CStyleCastExpr 0x212ff760368 <col:18, col:36> 'double' <IntegralToFloating>
|   |         |       `-ParenExpr 0x212ff760348 <col:26, col:36> 'unsigned long long'
|   |         |         `-BinaryOperator 0x212ff7602f0 <col:27, col:35> 'unsigned long long' '<<'
|   |         |           |-IntegerLiteral 0x212ff760280 <col:27> 'unsigned long long' 1
|   |         |           `-ParenExpr 0x212ff7602d0 <col:33, col:35> 'int'
|   |         |             `-IntegerLiteral 0x212ff7602a8 <line:63:27> 'int' 32
|   |         `-ParenExpr 0x212ff760500 <line:60:17, col:37> 'double'
|   |           `-CStyleCastExpr 0x212ff7604d8 <col:18, col:36> 'double' <IntegralToFloating>
|   |             `-ParenExpr 0x212ff7604b8 <col:26, col:36> 'unsigned long long'
|   |               `-BinaryOperator 0x212ff760460 <col:27, col:35> 'unsigned long long' '<<'
|   |                 |-IntegerLiteral 0x212ff7603f0 <col:27> 'unsigned long long' 1
|   |                 `-ParenExpr 0x212ff760440 <col:33, col:35> 'int'
|   |                   `-IntegerLiteral 0x212ff760418 <line:64:27> 'int' 32
|   |-BinaryOperator 0x212ff760650 <line:276:5, col:12> 'double' '='
|   | |-DeclRefExpr 0x212ff7605d8 <col:5> 'double' lvalue Var 0x212ff766270 'h0hi' 'double'
|   | `-ImplicitCastExpr 0x212ff760638 <col:12> 'double' <IntegralToFloating>
|   |   `-IntegerLiteral 0x212ff760610 <col:12> 'int' 0
|   |-BinaryOperator 0x212ff7606e8 <line:277:5, col:12> 'double' '='
|   | |-DeclRefExpr 0x212ff760670 <col:5> 'double' lvalue Var 0x212ff766370 'h1hi' 'double'
|   | `-ImplicitCastExpr 0x212ff7606d0 <col:12> 'double' <IntegralToFloating>
|   |   `-IntegerLiteral 0x212ff7606a8 <col:12> 'int' 0
|   |-BinaryOperator 0x212ff760780 <line:278:5, col:12> 'double' '='
|   | |-DeclRefExpr 0x212ff760708 <col:5> 'double' lvalue Var 0x212ff766470 'h2hi' 'double'
|   | `-ImplicitCastExpr 0x212ff760768 <col:12> 'double' <IntegralToFloating>
|   |   `-IntegerLiteral 0x212ff760740 <col:12> 'int' 0
|   |-BinaryOperator 0x212ff760818 <line:279:5, col:12> 'double' '='
|   | |-DeclRefExpr 0x212ff7607a0 <col:5> 'double' lvalue Var 0x212ff766570 'h3hi' 'double'
|   | `-ImplicitCastExpr 0x212ff760800 <col:12> 'double' <IntegralToFloating>
|   |   `-IntegerLiteral 0x212ff7607d8 <col:12> 'int' 0
|   |-DoStmt 0x212ff77a088 <line:299:5, line:364:23>
|   | |-CompoundStmt 0x212ff779eb0 <line:299:8, line:364:5>
|   | | |-BinaryOperator 0x212ff760bb0 <line:300:9, line:70:39> 'u64':'unsigned long long' '='
|   | | | |-MemberExpr 0x212ff760870 <line:300:9, col:13> 'u64':'unsigned long long' lvalue .u 0x212ff6df520
|   | | | | `-DeclRefExpr 0x212ff760838 <col:9> 'elem64':'elem64' lvalue Var 0x212ff765be0 'in0' 'elem64':'elem64'
|   | | | `-BinaryOperator 0x212ff760b90 <line:67:17, line:70:39> 'unsigned long long' '|'
|   | | |   |-ParenExpr 0x212ff7609f8 <line:67:17, col:35> 'unsigned long long'
|   | | |   | `-BinaryOperator 0x212ff7609d8 <col:18, col:33> 'unsigned long long' '<<'
|   | | |   |   |-ParenExpr 0x212ff760990 <col:18, col:30> 'unsigned long long'
|   | | |   |   | `-BinaryOperator 0x212ff760970 <col:19, col:29> 'unsigned long long' '+'
|   | | |   |   |   |-IntegerLiteral 0x212ff7608a0 <col:19> 'unsigned long long' 1023
|   | | |   |   |   `-ImplicitCastExpr 0x212ff760958 <col:27, col:29> 'unsigned long long' <IntegralCast>
|   | | |   |   |     `-ParenExpr 0x212ff760938 <col:27, col:29> 'int'
|   | | |   |   |       `-BinaryOperator 0x212ff760918 <line:300:21, col:24> 'int' '+'
|   | | |   |   |         |-IntegerLiteral 0x212ff7608c8 <col:21> 'int' 52
|   | | |   |   |         `-IntegerLiteral 0x212ff7608f0 <col:24> 'int' 0
|   | | |   |   `-IntegerLiteral 0x212ff7609b0 <line:67:33> 'int' 52
|   | | |   `-ImplicitCastExpr 0x212ff760b78 <line:70:21, col:39> 'unsigned long long' <IntegralCast>
|   | | |     `-ImplicitCastExpr 0x212ff760b60 <col:21, col:39> 'u32':'unsigned int' <LValueToRValue>
|   | | |       `-ParenExpr 0x212ff760b40 <col:21, col:39> 'const u32':'const unsigned int' lvalue
|   | | |         `-UnaryOperator 0x212ff760b28 <col:22, col:38> 'const u32':'const unsigned int' lvalue prefix '*' cannot overflow
|   | | |           `-CStyleCastExpr 0x212ff760b00 <col:23, col:38> 'const u32 *' <BitCast>
|   | | |             `-ParenExpr 0x212ff760ae0 <col:36, col:38> 'const unsigned char *'
|   | | |               `-UnaryOperator 0x212ff760a98 <line:300:38, col:44> 'const unsigned char *' prefix '&' cannot overflow
|   | | |                 `-ArraySubscriptExpr 0x212ff760a78 <col:39, col:44> 'const unsigned char' lvalue
|   | | |                   |-ImplicitCastExpr 0x212ff760a60 <col:39> 'const unsigned char *' <LValueToRValue>
|   | | |                   | `-DeclRefExpr 0x212ff760a18 <col:39> 'const unsigned char *' lvalue ParmVar 0x212ff765758 'inp' 'const unsigned char *'
|   | | |                   `-IntegerLiteral 0x212ff760a38 <col:43> 'int' 0
|   | | |-BinaryOperator 0x212ff760f48 <line:301:9, line:70:39> 'u64':'unsigned long long' '='
|   | | | |-MemberExpr 0x212ff760c08 <line:301:9, col:13> 'u64':'unsigned long long' lvalue .u 0x212ff6df520
|   | | | | `-DeclRefExpr 0x212ff760bd0 <col:9> 'elem64':'elem64' lvalue Var 0x212ff765c58 'in1' 'elem64':'elem64'
|   | | | `-BinaryOperator 0x212ff760f28 <line:67:17, line:70:39> 'unsigned long long' '|'
|   | | |   |-ParenExpr 0x212ff760d90 <line:67:17, col:35> 'unsigned long long'
|   | | |   | `-BinaryOperator 0x212ff760d70 <col:18, col:33> 'unsigned long long' '<<'
|   | | |   |   |-ParenExpr 0x212ff760d28 <col:18, col:30> 'unsigned long long'
|   | | |   |   | `-BinaryOperator 0x212ff760d08 <col:19, col:29> 'unsigned long long' '+'
|   | | |   |   |   |-IntegerLiteral 0x212ff760c38 <col:19> 'unsigned long long' 1023
|   | | |   |   |   `-ImplicitCastExpr 0x212ff760cf0 <col:27, col:29> 'unsigned long long' <IntegralCast>
|   | | |   |   |     `-ParenExpr 0x212ff760cd0 <col:27, col:29> 'int'
|   | | |   |   |       `-BinaryOperator 0x212ff760cb0 <line:301:21, col:24> 'int' '+'
|   | | |   |   |         |-IntegerLiteral 0x212ff760c60 <col:21> 'int' 52
|   | | |   |   |         `-IntegerLiteral 0x212ff760c88 <col:24> 'int' 32
|   | | |   |   `-IntegerLiteral 0x212ff760d48 <line:67:33> 'int' 52
|   | | |   `-ImplicitCastExpr 0x212ff760f10 <line:70:21, col:39> 'unsigned long long' <IntegralCast>
|   | | |     `-ImplicitCastExpr 0x212ff760ef8 <col:21, col:39> 'u32':'unsigned int' <LValueToRValue>
|   | | |       `-ParenExpr 0x212ff760ed8 <col:21, col:39> 'const u32':'const unsigned int' lvalue
|   | | |         `-UnaryOperator 0x212ff760ec0 <col:22, col:38> 'const u32':'const unsigned int' lvalue prefix '*' cannot overflow
|   | | |           `-CStyleCastExpr 0x212ff760e98 <col:23, col:38> 'const u32 *' <BitCast>
|   | | |             `-ParenExpr 0x212ff760e78 <col:36, col:38> 'const unsigned char *'
|   | | |               `-UnaryOperator 0x212ff760e30 <line:301:38, col:44> 'const unsigned char *' prefix '&' cannot overflow
|   | | |                 `-ArraySubscriptExpr 0x212ff760e10 <col:39, col:44> 'const unsigned char' lvalue
|   | | |                   |-ImplicitCastExpr 0x212ff760df8 <col:39> 'const unsigned char *' <LValueToRValue>
|   | | |                   | `-DeclRefExpr 0x212ff760db0 <col:39> 'const unsigned char *' lvalue ParmVar 0x212ff765758 'inp' 'const unsigned char *'
|   | | |                   `-IntegerLiteral 0x212ff760dd0 <col:43> 'int' 4
|   | | |-BinaryOperator 0x212ff76f3d0 <line:302:9, line:70:39> 'u64':'unsigned long long' '='
|   | | | |-MemberExpr 0x212ff760fa0 <line:302:9, col:13> 'u64':'unsigned long long' lvalue .u 0x212ff6df520
|   | | | | `-DeclRefExpr 0x212ff760f68 <col:9> 'elem64':'elem64' lvalue Var 0x212ff765cd0 'in2' 'elem64':'elem64'
|   | | | `-BinaryOperator 0x212ff76f3b0 <line:67:17, line:70:39> 'unsigned long long' '|'
|   | | |   |-ParenExpr 0x212ff76f218 <line:67:17, col:35> 'unsigned long long'
|   | | |   | `-BinaryOperator 0x212ff76f1f8 <col:18, col:33> 'unsigned long long' '<<'
|   | | |   |   |-ParenExpr 0x212ff76f1b0 <col:18, col:30> 'unsigned long long'
|   | | |   |   | `-BinaryOperator 0x212ff76f190 <col:19, col:29> 'unsigned long long' '+'
|   | | |   |   |   |-IntegerLiteral 0x212ff76f0c0 <col:19> 'unsigned long long' 1023
|   | | |   |   |   `-ImplicitCastExpr 0x212ff76f178 <col:27, col:29> 'unsigned long long' <IntegralCast>
|   | | |   |   |     `-ParenExpr 0x212ff76f158 <col:27, col:29> 'int'
|   | | |   |   |       `-BinaryOperator 0x212ff76f138 <line:302:21, col:24> 'int' '+'
|   | | |   |   |         |-IntegerLiteral 0x212ff76f0e8 <col:21> 'int' 52
|   | | |   |   |         `-IntegerLiteral 0x212ff76f110 <col:24> 'int' 64
|   | | |   |   `-IntegerLiteral 0x212ff76f1d0 <line:67:33> 'int' 52
|   | | |   `-ImplicitCastExpr 0x212ff76f398 <line:70:21, col:39> 'unsigned long long' <IntegralCast>
|   | | |     `-ImplicitCastExpr 0x212ff76f380 <col:21, col:39> 'u32':'unsigned int' <LValueToRValue>
|   | | |       `-ParenExpr 0x212ff76f360 <col:21, col:39> 'const u32':'const unsigned int' lvalue
|   | | |         `-UnaryOperator 0x212ff76f348 <col:22, col:38> 'const u32':'const unsigned int' lvalue prefix '*' cannot overflow
|   | | |           `-CStyleCastExpr 0x212ff76f320 <col:23, col:38> 'const u32 *' <BitCast>
|   | | |             `-ParenExpr 0x212ff76f300 <col:36, col:38> 'const unsigned char *'
|   | | |               `-UnaryOperator 0x212ff76f2b8 <line:302:38, col:44> 'const unsigned char *' prefix '&' cannot overflow
|   | | |                 `-ArraySubscriptExpr 0x212ff76f298 <col:39, col:44> 'const unsigned char' lvalue
|   | | |                   |-ImplicitCastExpr 0x212ff76f280 <col:39> 'const unsigned char *' <LValueToRValue>
|   | | |                   | `-DeclRefExpr 0x212ff76f238 <col:39> 'const unsigned char *' lvalue ParmVar 0x212ff765758 'inp' 'const unsigned char *'
|   | | |                   `-IntegerLiteral 0x212ff76f258 <col:43> 'int' 8
|   | | |-BinaryOperator 0x212ff76f7d8 <line:303:9, col:50> 'u64':'unsigned long long' '='
|   | | | |-MemberExpr 0x212ff76f428 <col:9, col:13> 'u64':'unsigned long long' lvalue .u 0x212ff6df520
|   | | | | `-DeclRefExpr 0x212ff76f3f0 <col:9> 'elem64':'elem64' lvalue Var 0x212ff765d48 'in3' 'elem64':'elem64'
|   | | | `-BinaryOperator 0x212ff76f7b8 <line:67:17, line:303:50> 'unsigned long long' '|'
|   | | |   |-BinaryOperator 0x212ff76f748 <line:67:17, line:70:39> 'unsigned long long' '|'
|   | | |   | |-ParenExpr 0x212ff76f5b0 <line:67:17, col:35> 'unsigned long long'
|   | | |   | | `-BinaryOperator 0x212ff76f590 <col:18, col:33> 'unsigned long long' '<<'
|   | | |   | |   |-ParenExpr 0x212ff76f548 <col:18, col:30> 'unsigned long long'
|   | | |   | |   | `-BinaryOperator 0x212ff76f528 <col:19, col:29> 'unsigned long long' '+'
|   | | |   | |   |   |-IntegerLiteral 0x212ff76f458 <col:19> 'unsigned long long' 1023
|   | | |   | |   |   `-ImplicitCastExpr 0x212ff76f510 <col:27, col:29> 'unsigned long long' <IntegralCast>
|   | | |   | |   |     `-ParenExpr 0x212ff76f4f0 <col:27, col:29> 'int'
|   | | |   | |   |       `-BinaryOperator 0x212ff76f4d0 <line:303:21, col:24> 'int' '+'
|   | | |   | |   |         |-IntegerLiteral 0x212ff76f480 <col:21> 'int' 52
|   | | |   | |   |         `-IntegerLiteral 0x212ff76f4a8 <col:24> 'int' 96
|   | | |   | |   `-IntegerLiteral 0x212ff76f568 <line:67:33> 'int' 52
|   | | |   | `-ImplicitCastExpr 0x212ff76f730 <line:70:21, col:39> 'unsigned long long' <IntegralCast>
|   | | |   |   `-ImplicitCastExpr 0x212ff76f718 <col:21, col:39> 'u32':'unsigned int' <LValueToRValue>
|   | | |   |     `-ParenExpr 0x212ff76f6f8 <col:21, col:39> 'const u32':'const unsigned int' lvalue
|   | | |   |       `-UnaryOperator 0x212ff76f6e0 <col:22, col:38> 'const u32':'const unsigned int' lvalue prefix '*' cannot overflow
|   | | |   |         `-CStyleCastExpr 0x212ff76f6b8 <col:23, col:38> 'const u32 *' <BitCast>
|   | | |   |           `-ParenExpr 0x212ff76f698 <col:36, col:38> 'const unsigned char *'
|   | | |   |             `-UnaryOperator 0x212ff76f650 <line:303:38, col:45> 'const unsigned char *' prefix '&' cannot overflow
|   | | |   |               `-ArraySubscriptExpr 0x212ff76f630 <col:39, col:45> 'const unsigned char' lvalue
|   | | |   |                 |-ImplicitCastExpr 0x212ff76f618 <col:39> 'const unsigned char *' <LValueToRValue>
|   | | |   |                 | `-DeclRefExpr 0x212ff76f5d0 <col:39> 'const unsigned char *' lvalue ParmVar 0x212ff765758 'inp' 'const unsigned char *'
|   | | |   |                 `-IntegerLiteral 0x212ff76f5f0 <col:43> 'int' 12
|   | | |   `-ImplicitCastExpr 0x212ff76f7a0 <col:50> 'u64':'unsigned long long' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x212ff76f768 <col:50> 'u64':'unsigned long long' lvalue Var 0x212ff765e00 'pad' 'u64':'unsigned long long'
|   | | |-BinaryOperator 0x212ff76fb38 <line:305:9, line:60:37> 'double' '='
|   | | | |-DeclRefExpr 0x212ff76f7f8 <line:305:9> 'double' lvalue Var 0x212ff765f50 'x0' 'double'
|   | | | `-BinaryOperator 0x212ff76fb18 <col:14, line:60:37> 'double' '-'
|   | | |   |-ImplicitCastExpr 0x212ff76fb00 <line:305:14, col:18> 'double' <LValueToRValue>
|   | | |   | `-MemberExpr 0x212ff76f850 <col:14, col:18> 'double' lvalue .d 0x212ff6df498
|   | | |   |   `-DeclRefExpr 0x212ff76f830 <col:14> 'elem64':'elem64' lvalue Var 0x212ff765be0 'in0' 'elem64':'elem64'
|   | | |   `-BinaryOperator 0x212ff76fae0 <line:60:17, col:37> 'double' '*'
|   | | |     |-ParenExpr 0x212ff76f990 <col:17, col:37> 'double'
|   | | |     | `-CStyleCastExpr 0x212ff76f968 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |     |   `-ParenExpr 0x212ff76f948 <col:26, col:36> 'unsigned long long'
|   | | |     |     `-BinaryOperator 0x212ff76f8f0 <col:27, col:35> 'unsigned long long' '<<'
|   | | |     |       |-IntegerLiteral 0x212ff76f880 <col:27> 'unsigned long long' 1
|   | | |     |       `-ParenExpr 0x212ff76f8d0 <col:33, col:35> 'int'
|   | | |     |         `-IntegerLiteral 0x212ff76f8a8 <line:305:26> 'int' 52
|   | | |     `-ParenExpr 0x212ff76fac0 <line:60:17, col:37> 'double'
|   | | |       `-CStyleCastExpr 0x212ff76fa98 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |         `-ParenExpr 0x212ff76fa78 <col:26, col:36> 'unsigned long long'
|   | | |           `-BinaryOperator 0x212ff76fa20 <col:27, col:35> 'unsigned long long' '<<'
|   | | |             |-IntegerLiteral 0x212ff76f9b0 <col:27> 'unsigned long long' 1
|   | | |             `-ParenExpr 0x212ff76fa00 <col:33, col:35> 'int'
|   | | |               `-IntegerLiteral 0x212ff76f9d8 <line:61:19> 'int' 0
|   | | |-BinaryOperator 0x212ff76fe98 <line:306:9, line:60:37> 'double' '='
|   | | | |-DeclRefExpr 0x212ff76fb58 <line:306:9> 'double' lvalue Var 0x212ff766030 'x1' 'double'
|   | | | `-BinaryOperator 0x212ff76fe78 <col:14, line:60:37> 'double' '-'
|   | | |   |-ImplicitCastExpr 0x212ff76fe60 <line:306:14, col:18> 'double' <LValueToRValue>
|   | | |   | `-MemberExpr 0x212ff76fbb0 <col:14, col:18> 'double' lvalue .d 0x212ff6df498
|   | | |   |   `-DeclRefExpr 0x212ff76fb90 <col:14> 'elem64':'elem64' lvalue Var 0x212ff765c58 'in1' 'elem64':'elem64'
|   | | |   `-BinaryOperator 0x212ff76fe40 <line:60:17, col:37> 'double' '*'
|   | | |     |-ParenExpr 0x212ff76fcf0 <col:17, col:37> 'double'
|   | | |     | `-CStyleCastExpr 0x212ff76fcc8 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |     |   `-ParenExpr 0x212ff76fca8 <col:26, col:36> 'unsigned long long'
|   | | |     |     `-BinaryOperator 0x212ff76fc50 <col:27, col:35> 'unsigned long long' '<<'
|   | | |     |       |-IntegerLiteral 0x212ff76fbe0 <col:27> 'unsigned long long' 1
|   | | |     |       `-ParenExpr 0x212ff76fc30 <col:33, col:35> 'int'
|   | | |     |         `-IntegerLiteral 0x212ff76fc08 <line:306:26> 'int' 52
|   | | |     `-ParenExpr 0x212ff76fe20 <line:60:17, col:37> 'double'
|   | | |       `-CStyleCastExpr 0x212ff76fdf8 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |         `-ParenExpr 0x212ff76fdd8 <col:26, col:36> 'unsigned long long'
|   | | |           `-BinaryOperator 0x212ff76fd80 <col:27, col:35> 'unsigned long long' '<<'
|   | | |             |-IntegerLiteral 0x212ff76fd10 <col:27> 'unsigned long long' 1
|   | | |             `-ParenExpr 0x212ff76fd60 <col:33, col:35> 'int'
|   | | |               `-IntegerLiteral 0x212ff76fd38 <line:62:20> 'int' 32
|   | | |-BinaryOperator 0x212ff76c338 <line:307:9, line:63:30> 'double' '='
|   | | | |-DeclRefExpr 0x212ff76feb8 <line:307:9> 'double' lvalue Var 0x212ff7660b0 'x2' 'double'
|   | | | `-BinaryOperator 0x212ff76c318 <col:14, line:63:30> 'double' '-'
|   | | |   |-ImplicitCastExpr 0x212ff76c300 <line:307:14, col:18> 'double' <LValueToRValue>
|   | | |   | `-MemberExpr 0x212ff76ff10 <col:14, col:18> 'double' lvalue .d 0x212ff6df498
|   | | |   |   `-DeclRefExpr 0x212ff76fef0 <col:14> 'elem64':'elem64' lvalue Var 0x212ff765cd0 'in2' 'elem64':'elem64'
|   | | |   `-BinaryOperator 0x212ff76c2e0 <line:60:17, line:63:30> 'double' '*'
|   | | |     |-ParenExpr 0x212ff770050 <line:60:17, col:37> 'double'
|   | | |     | `-CStyleCastExpr 0x212ff770028 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |     |   `-ParenExpr 0x212ff770008 <col:26, col:36> 'unsigned long long'
|   | | |     |     `-BinaryOperator 0x212ff76ffb0 <col:27, col:35> 'unsigned long long' '<<'
|   | | |     |       |-IntegerLiteral 0x212ff76ff40 <col:27> 'unsigned long long' 1
|   | | |     |       `-ParenExpr 0x212ff76ff90 <col:33, col:35> 'int'
|   | | |     |         `-IntegerLiteral 0x212ff76ff68 <line:307:26> 'int' 52
|   | | |     `-ParenExpr 0x212ff76c2c0 <line:63:16, col:30> 'double'
|   | | |       `-BinaryOperator 0x212ff76c2a0 <line:60:17, col:37> 'double' '*'
|   | | |         |-ParenExpr 0x212ff76c150 <col:17, col:37> 'double'
|   | | |         | `-CStyleCastExpr 0x212ff76c128 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |         |   `-ParenExpr 0x212ff76c108 <col:26, col:36> 'unsigned long long'
|   | | |         |     `-BinaryOperator 0x212ff76c0b0 <col:27, col:35> 'unsigned long long' '<<'
|   | | |         |       |-IntegerLiteral 0x212ff770070 <col:27> 'unsigned long long' 1
|   | | |         |       `-ParenExpr 0x212ff76c090 <col:33, col:35> 'int'
|   | | |         |         `-IntegerLiteral 0x212ff770098 <line:62:20> 'int' 32
|   | | |         `-ParenExpr 0x212ff76c280 <line:60:17, col:37> 'double'
|   | | |           `-CStyleCastExpr 0x212ff76c258 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |             `-ParenExpr 0x212ff76c238 <col:26, col:36> 'unsigned long long'
|   | | |               `-BinaryOperator 0x212ff76c1e0 <col:27, col:35> 'unsigned long long' '<<'
|   | | |                 |-IntegerLiteral 0x212ff76c170 <col:27> 'unsigned long long' 1
|   | | |                 `-ParenExpr 0x212ff76c1c0 <col:33, col:35> 'int'
|   | | |                   `-IntegerLiteral 0x212ff76c198 <line:63:27> 'int' 32
|   | | |-BinaryOperator 0x212ff76c978 <line:308:9, line:64:30> 'double' '='
|   | | | |-DeclRefExpr 0x212ff76c358 <line:308:9> 'double' lvalue Var 0x212ff766130 'x3' 'double'
|   | | | `-BinaryOperator 0x212ff76c958 <col:14, line:64:30> 'double' '-'
|   | | |   |-ImplicitCastExpr 0x212ff76c940 <line:308:14, col:18> 'double' <LValueToRValue>
|   | | |   | `-MemberExpr 0x212ff76c3b0 <col:14, col:18> 'double' lvalue .d 0x212ff6df498
|   | | |   |   `-DeclRefExpr 0x212ff76c390 <col:14> 'elem64':'elem64' lvalue Var 0x212ff765d48 'in3' 'elem64':'elem64'
|   | | |   `-BinaryOperator 0x212ff76c920 <line:60:17, line:64:30> 'double' '*'
|   | | |     |-ParenExpr 0x212ff76c4f0 <line:60:17, col:37> 'double'
|   | | |     | `-CStyleCastExpr 0x212ff76c4c8 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |     |   `-ParenExpr 0x212ff76c4a8 <col:26, col:36> 'unsigned long long'
|   | | |     |     `-BinaryOperator 0x212ff76c450 <col:27, col:35> 'unsigned long long' '<<'
|   | | |     |       |-IntegerLiteral 0x212ff76c3e0 <col:27> 'unsigned long long' 1
|   | | |     |       `-ParenExpr 0x212ff76c430 <col:33, col:35> 'int'
|   | | |     |         `-IntegerLiteral 0x212ff76c408 <line:308:26> 'int' 52
|   | | |     `-ParenExpr 0x212ff76c900 <line:64:16, col:30> 'double'
|   | | |       `-BinaryOperator 0x212ff76c8e0 <line:63:16, line:60:37> 'double' '*'
|   | | |         |-ParenExpr 0x212ff76c790 <line:63:16, col:30> 'double'
|   | | |         | `-BinaryOperator 0x212ff76c770 <line:60:17, col:37> 'double' '*'
|   | | |         |   |-ParenExpr 0x212ff76c620 <col:17, col:37> 'double'
|   | | |         |   | `-CStyleCastExpr 0x212ff76c5f8 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |         |   |   `-ParenExpr 0x212ff76c5d8 <col:26, col:36> 'unsigned long long'
|   | | |         |   |     `-BinaryOperator 0x212ff76c580 <col:27, col:35> 'unsigned long long' '<<'
|   | | |         |   |       |-IntegerLiteral 0x212ff76c510 <col:27> 'unsigned long long' 1
|   | | |         |   |       `-ParenExpr 0x212ff76c560 <col:33, col:35> 'int'
|   | | |         |   |         `-IntegerLiteral 0x212ff76c538 <line:62:20> 'int' 32
|   | | |         |   `-ParenExpr 0x212ff76c750 <line:60:17, col:37> 'double'
|   | | |         |     `-CStyleCastExpr 0x212ff76c728 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |         |       `-ParenExpr 0x212ff76c708 <col:26, col:36> 'unsigned long long'
|   | | |         |         `-BinaryOperator 0x212ff76c6b0 <col:27, col:35> 'unsigned long long' '<<'
|   | | |         |           |-IntegerLiteral 0x212ff76c640 <col:27> 'unsigned long long' 1
|   | | |         |           `-ParenExpr 0x212ff76c690 <col:33, col:35> 'int'
|   | | |         |             `-IntegerLiteral 0x212ff76c668 <line:63:27> 'int' 32
|   | | |         `-ParenExpr 0x212ff76c8c0 <line:60:17, col:37> 'double'
|   | | |           `-CStyleCastExpr 0x212ff76c898 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |             `-ParenExpr 0x212ff76c878 <col:26, col:36> 'unsigned long long'
|   | | |               `-BinaryOperator 0x212ff76c820 <col:27, col:35> 'unsigned long long' '<<'
|   | | |                 |-IntegerLiteral 0x212ff76c7b0 <col:27> 'unsigned long long' 1
|   | | |                 `-ParenExpr 0x212ff76c800 <col:33, col:35> 'int'
|   | | |                   `-IntegerLiteral 0x212ff76c7d8 <line:64:27> 'int' 32
|   | | |-CompoundAssignOperator 0x212ff76c9f0 <line:314:9, col:17> 'double' '+=' ComputeLHSTy='double' ComputeResultTy='double'
|   | | | |-DeclRefExpr 0x212ff76c998 <col:9> 'double' lvalue Var 0x212ff7661f0 'h0lo' 'double'
|   | | | `-ImplicitCastExpr 0x212ff76c9d8 <col:17> 'double' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x212ff76c9b8 <col:17> 'double' lvalue Var 0x212ff765f50 'x0' 'double'
|   | | |-CompoundAssignOperator 0x212ff76ca78 <line:315:9, col:17> 'double' '+=' ComputeLHSTy='double' ComputeResultTy='double'
|   | | | |-DeclRefExpr 0x212ff76ca20 <col:9> 'double' lvalue Var 0x212ff766270 'h0hi' 'double'
|   | | | `-ImplicitCastExpr 0x212ff76ca60 <col:17> 'double' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x212ff76ca40 <col:17> 'double' lvalue Var 0x212ff766030 'x1' 'double'
|   | | |-CompoundAssignOperator 0x212ff76cb00 <line:316:9, col:17> 'double' '+=' ComputeLHSTy='double' ComputeResultTy='double'
|   | | | |-DeclRefExpr 0x212ff76caa8 <col:9> 'double' lvalue Var 0x212ff7663f0 'h2lo' 'double'
|   | | | `-ImplicitCastExpr 0x212ff76cae8 <col:17> 'double' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x212ff76cac8 <col:17> 'double' lvalue Var 0x212ff7660b0 'x2' 'double'
|   | | |-CompoundAssignOperator 0x212ff76cb88 <line:317:9, col:17> 'double' '+=' ComputeLHSTy='double' ComputeResultTy='double'
|   | | | |-DeclRefExpr 0x212ff76cb30 <col:9> 'double' lvalue Var 0x212ff766470 'h2hi' 'double'
|   | | | `-ImplicitCastExpr 0x212ff76cb70 <col:17> 'double' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x212ff76cb50 <col:17> 'double' lvalue Var 0x212ff766130 'x3' 'double'
|   | | |-BinaryOperator 0x212ff768150 <line:322:9, line:60:37> 'double' '='
|   | | | |-DeclRefExpr 0x212ff76cbb8 <line:322:9> 'double' lvalue Var 0x212ff766650 'c0lo' 'double'
|   | | | `-BinaryOperator 0x212ff768130 <col:16, line:60:37> 'double' '-'
|   | | |   |-ParenExpr 0x212ff76cec8 <line:322:16, col:37> 'double'
|   | | |   | `-BinaryOperator 0x212ff76cea8 <col:17, line:60:37> 'double' '+'
|   | | |   |   |-ImplicitCastExpr 0x212ff76ce90 <line:322:17> 'double' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x212ff76cbf0 <col:17> 'double' lvalue Var 0x212ff7661f0 'h0lo' 'double'
|   | | |   |   `-BinaryOperator 0x212ff76ce70 <line:60:17, col:37> 'double' '*'
|   | | |   |     |-ParenExpr 0x212ff76cd20 <col:17, col:37> 'double'
|   | | |   |     | `-CStyleCastExpr 0x212ff76ccf8 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |     |   `-ParenExpr 0x212ff76ccd8 <col:26, col:36> 'unsigned long long'
|   | | |   |     |     `-BinaryOperator 0x212ff76cc80 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |     |       |-IntegerLiteral 0x212ff76cc10 <col:27> 'unsigned long long' 1
|   | | |   |     |       `-ParenExpr 0x212ff76cc60 <col:33, col:35> 'int'
|   | | |   |     |         `-IntegerLiteral 0x212ff76cc38 <line:322:28> 'int' 52
|   | | |   |     `-ParenExpr 0x212ff76ce50 <line:60:17, col:37> 'double'
|   | | |   |       `-CStyleCastExpr 0x212ff76ce28 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |         `-ParenExpr 0x212ff76ce08 <col:26, col:36> 'unsigned long long'
|   | | |   |           `-BinaryOperator 0x212ff76cdb0 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |             |-IntegerLiteral 0x212ff76cd40 <col:27> 'unsigned long long' 1
|   | | |   |             `-ParenExpr 0x212ff76cd90 <col:33, col:35> 'int'
|   | | |   |               `-IntegerLiteral 0x212ff76cd68 <line:62:20> 'int' 32
|   | | |   `-BinaryOperator 0x212ff768110 <line:60:17, col:37> 'double' '*'
|   | | |     |-ParenExpr 0x212ff76cff8 <col:17, col:37> 'double'
|   | | |     | `-CStyleCastExpr 0x212ff76cfd0 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |     |   `-ParenExpr 0x212ff76cfb0 <col:26, col:36> 'unsigned long long'
|   | | |     |     `-BinaryOperator 0x212ff76cf58 <col:27, col:35> 'unsigned long long' '<<'
|   | | |     |       |-IntegerLiteral 0x212ff76cee8 <col:27> 'unsigned long long' 1
|   | | |     |       `-ParenExpr 0x212ff76cf38 <col:33, col:35> 'int'
|   | | |     |         `-IntegerLiteral 0x212ff76cf10 <line:322:46> 'int' 52
|   | | |     `-ParenExpr 0x212ff7680f0 <line:60:17, col:37> 'double'
|   | | |       `-CStyleCastExpr 0x212ff7680c8 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |         `-ParenExpr 0x212ff7680a8 <col:26, col:36> 'unsigned long long'
|   | | |           `-BinaryOperator 0x212ff768050 <col:27, col:35> 'unsigned long long' '<<'
|   | | |             |-IntegerLiteral 0x212ff76d018 <col:27> 'unsigned long long' 1
|   | | |             `-ParenExpr 0x212ff76d068 <col:33, col:35> 'int'
|   | | |               `-IntegerLiteral 0x212ff76d040 <line:62:20> 'int' 32
|   | | |-BinaryOperator 0x212ff768a20 <line:323:9, line:63:30> 'double' '='
|   | | | |-DeclRefExpr 0x212ff768170 <line:323:9> 'double' lvalue Var 0x212ff766750 'c1lo' 'double'
|   | | | `-BinaryOperator 0x212ff768a00 <col:16, line:63:30> 'double' '-'
|   | | |   |-ParenExpr 0x212ff7685f0 <line:323:16, col:37> 'double'
|   | | |   | `-BinaryOperator 0x212ff7685d0 <col:17, line:63:30> 'double' '+'
|   | | |   |   |-ImplicitCastExpr 0x212ff7685b8 <line:323:17> 'double' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x212ff7681a8 <col:17> 'double' lvalue Var 0x212ff7662f0 'h1lo' 'double'
|   | | |   |   `-BinaryOperator 0x212ff768598 <line:60:17, line:63:30> 'double' '*'
|   | | |   |     |-ParenExpr 0x212ff7682d8 <line:60:17, col:37> 'double'
|   | | |   |     | `-CStyleCastExpr 0x212ff7682b0 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |     |   `-ParenExpr 0x212ff768290 <col:26, col:36> 'unsigned long long'
|   | | |   |     |     `-BinaryOperator 0x212ff768238 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |     |       |-IntegerLiteral 0x212ff7681c8 <col:27> 'unsigned long long' 1
|   | | |   |     |       `-ParenExpr 0x212ff768218 <col:33, col:35> 'int'
|   | | |   |     |         `-IntegerLiteral 0x212ff7681f0 <line:323:28> 'int' 52
|   | | |   |     `-ParenExpr 0x212ff768578 <line:63:16, col:30> 'double'
|   | | |   |       `-BinaryOperator 0x212ff768558 <line:60:17, col:37> 'double' '*'
|   | | |   |         |-ParenExpr 0x212ff768408 <col:17, col:37> 'double'
|   | | |   |         | `-CStyleCastExpr 0x212ff7683e0 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |         |   `-ParenExpr 0x212ff7683c0 <col:26, col:36> 'unsigned long long'
|   | | |   |         |     `-BinaryOperator 0x212ff768368 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |         |       |-IntegerLiteral 0x212ff7682f8 <col:27> 'unsigned long long' 1
|   | | |   |         |       `-ParenExpr 0x212ff768348 <col:33, col:35> 'int'
|   | | |   |         |         `-IntegerLiteral 0x212ff768320 <line:62:20> 'int' 32
|   | | |   |         `-ParenExpr 0x212ff768538 <line:60:17, col:37> 'double'
|   | | |   |           `-CStyleCastExpr 0x212ff768510 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |             `-ParenExpr 0x212ff7684f0 <col:26, col:36> 'unsigned long long'
|   | | |   |               `-BinaryOperator 0x212ff768498 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |                 |-IntegerLiteral 0x212ff768428 <col:27> 'unsigned long long' 1
|   | | |   |                 `-ParenExpr 0x212ff768478 <col:33, col:35> 'int'
|   | | |   |                   `-IntegerLiteral 0x212ff768450 <line:63:27> 'int' 32
|   | | |   `-BinaryOperator 0x212ff7689e0 <line:60:17, line:63:30> 'double' '*'
|   | | |     |-ParenExpr 0x212ff768720 <line:60:17, col:37> 'double'
|   | | |     | `-CStyleCastExpr 0x212ff7686f8 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |     |   `-ParenExpr 0x212ff7686d8 <col:26, col:36> 'unsigned long long'
|   | | |     |     `-BinaryOperator 0x212ff768680 <col:27, col:35> 'unsigned long long' '<<'
|   | | |     |       |-IntegerLiteral 0x212ff768610 <col:27> 'unsigned long long' 1
|   | | |     |       `-ParenExpr 0x212ff768660 <col:33, col:35> 'int'
|   | | |     |         `-IntegerLiteral 0x212ff768638 <line:323:46> 'int' 52
|   | | |     `-ParenExpr 0x212ff7689c0 <line:63:16, col:30> 'double'
|   | | |       `-BinaryOperator 0x212ff7689a0 <line:60:17, col:37> 'double' '*'
|   | | |         |-ParenExpr 0x212ff768850 <col:17, col:37> 'double'
|   | | |         | `-CStyleCastExpr 0x212ff768828 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |         |   `-ParenExpr 0x212ff768808 <col:26, col:36> 'unsigned long long'
|   | | |         |     `-BinaryOperator 0x212ff7687b0 <col:27, col:35> 'unsigned long long' '<<'
|   | | |         |       |-IntegerLiteral 0x212ff768740 <col:27> 'unsigned long long' 1
|   | | |         |       `-ParenExpr 0x212ff768790 <col:33, col:35> 'int'
|   | | |         |         `-IntegerLiteral 0x212ff768768 <line:62:20> 'int' 32
|   | | |         `-ParenExpr 0x212ff768980 <line:60:17, col:37> 'double'
|   | | |           `-CStyleCastExpr 0x212ff768958 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |             `-ParenExpr 0x212ff768938 <col:26, col:36> 'unsigned long long'
|   | | |               `-BinaryOperator 0x212ff7688e0 <col:27, col:35> 'unsigned long long' '<<'
|   | | |                 |-IntegerLiteral 0x212ff768870 <col:27> 'unsigned long long' 1
|   | | |                 `-ParenExpr 0x212ff7688c0 <col:33, col:35> 'int'
|   | | |                   `-IntegerLiteral 0x212ff768898 <line:63:27> 'int' 32
|   | | |-BinaryOperator 0x212ff76d620 <line:324:9, line:64:30> 'double' '='
|   | | | |-DeclRefExpr 0x212ff768a40 <line:324:9> 'double' lvalue Var 0x212ff766850 'c2lo' 'double'
|   | | | `-BinaryOperator 0x212ff76d600 <col:16, line:64:30> 'double' '-'
|   | | |   |-ParenExpr 0x212ff769030 <line:324:16, col:37> 'double'
|   | | |   | `-BinaryOperator 0x212ff769010 <col:17, line:64:30> 'double' '+'
|   | | |   |   |-ImplicitCastExpr 0x212ff768ff8 <line:324:17> 'double' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x212ff768a78 <col:17> 'double' lvalue Var 0x212ff7663f0 'h2lo' 'double'
|   | | |   |   `-BinaryOperator 0x212ff768fd8 <line:60:17, line:64:30> 'double' '*'
|   | | |   |     |-ParenExpr 0x212ff768ba8 <line:60:17, col:37> 'double'
|   | | |   |     | `-CStyleCastExpr 0x212ff768b80 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |     |   `-ParenExpr 0x212ff768b60 <col:26, col:36> 'unsigned long long'
|   | | |   |     |     `-BinaryOperator 0x212ff768b08 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |     |       |-IntegerLiteral 0x212ff768a98 <col:27> 'unsigned long long' 1
|   | | |   |     |       `-ParenExpr 0x212ff768ae8 <col:33, col:35> 'int'
|   | | |   |     |         `-IntegerLiteral 0x212ff768ac0 <line:324:28> 'int' 52
|   | | |   |     `-ParenExpr 0x212ff768fb8 <line:64:16, col:30> 'double'
|   | | |   |       `-BinaryOperator 0x212ff768f98 <line:63:16, line:60:37> 'double' '*'
|   | | |   |         |-ParenExpr 0x212ff768e48 <line:63:16, col:30> 'double'
|   | | |   |         | `-BinaryOperator 0x212ff768e28 <line:60:17, col:37> 'double' '*'
|   | | |   |         |   |-ParenExpr 0x212ff768cd8 <col:17, col:37> 'double'
|   | | |   |         |   | `-CStyleCastExpr 0x212ff768cb0 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |         |   |   `-ParenExpr 0x212ff768c90 <col:26, col:36> 'unsigned long long'
|   | | |   |         |   |     `-BinaryOperator 0x212ff768c38 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |         |   |       |-IntegerLiteral 0x212ff768bc8 <col:27> 'unsigned long long' 1
|   | | |   |         |   |       `-ParenExpr 0x212ff768c18 <col:33, col:35> 'int'
|   | | |   |         |   |         `-IntegerLiteral 0x212ff768bf0 <line:62:20> 'int' 32
|   | | |   |         |   `-ParenExpr 0x212ff768e08 <line:60:17, col:37> 'double'
|   | | |   |         |     `-CStyleCastExpr 0x212ff768de0 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |         |       `-ParenExpr 0x212ff768dc0 <col:26, col:36> 'unsigned long long'
|   | | |   |         |         `-BinaryOperator 0x212ff768d68 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |         |           |-IntegerLiteral 0x212ff768cf8 <col:27> 'unsigned long long' 1
|   | | |   |         |           `-ParenExpr 0x212ff768d48 <col:33, col:35> 'int'
|   | | |   |         |             `-IntegerLiteral 0x212ff768d20 <line:63:27> 'int' 32
|   | | |   |         `-ParenExpr 0x212ff768f78 <line:60:17, col:37> 'double'
|   | | |   |           `-CStyleCastExpr 0x212ff768f50 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |             `-ParenExpr 0x212ff768f30 <col:26, col:36> 'unsigned long long'
|   | | |   |               `-BinaryOperator 0x212ff768ed8 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |                 |-IntegerLiteral 0x212ff768e68 <col:27> 'unsigned long long' 1
|   | | |   |                 `-ParenExpr 0x212ff768eb8 <col:33, col:35> 'int'
|   | | |   |                   `-IntegerLiteral 0x212ff768e90 <line:64:27> 'int' 32
|   | | |   `-BinaryOperator 0x212ff76d5e0 <line:60:17, line:64:30> 'double' '*'
|   | | |     |-ParenExpr 0x212ff76d1b0 <line:60:17, col:37> 'double'
|   | | |     | `-CStyleCastExpr 0x212ff76d188 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |     |   `-ParenExpr 0x212ff76d168 <col:26, col:36> 'unsigned long long'
|   | | |     |     `-BinaryOperator 0x212ff76d110 <col:27, col:35> 'unsigned long long' '<<'
|   | | |     |       |-IntegerLiteral 0x212ff76d0a0 <col:27> 'unsigned long long' 1
|   | | |     |       `-ParenExpr 0x212ff76d0f0 <col:33, col:35> 'int'
|   | | |     |         `-IntegerLiteral 0x212ff76d0c8 <line:324:46> 'int' 52
|   | | |     `-ParenExpr 0x212ff76d5c0 <line:64:16, col:30> 'double'
|   | | |       `-BinaryOperator 0x212ff76d5a0 <line:63:16, line:60:37> 'double' '*'
|   | | |         |-ParenExpr 0x212ff76d450 <line:63:16, col:30> 'double'
|   | | |         | `-BinaryOperator 0x212ff76d430 <line:60:17, col:37> 'double' '*'
|   | | |         |   |-ParenExpr 0x212ff76d2e0 <col:17, col:37> 'double'
|   | | |         |   | `-CStyleCastExpr 0x212ff76d2b8 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |         |   |   `-ParenExpr 0x212ff76d298 <col:26, col:36> 'unsigned long long'
|   | | |         |   |     `-BinaryOperator 0x212ff76d240 <col:27, col:35> 'unsigned long long' '<<'
|   | | |         |   |       |-IntegerLiteral 0x212ff76d1d0 <col:27> 'unsigned long long' 1
|   | | |         |   |       `-ParenExpr 0x212ff76d220 <col:33, col:35> 'int'
|   | | |         |   |         `-IntegerLiteral 0x212ff76d1f8 <line:62:20> 'int' 32
|   | | |         |   `-ParenExpr 0x212ff76d410 <line:60:17, col:37> 'double'
|   | | |         |     `-CStyleCastExpr 0x212ff76d3e8 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |         |       `-ParenExpr 0x212ff76d3c8 <col:26, col:36> 'unsigned long long'
|   | | |         |         `-BinaryOperator 0x212ff76d370 <col:27, col:35> 'unsigned long long' '<<'
|   | | |         |           |-IntegerLiteral 0x212ff76d300 <col:27> 'unsigned long long' 1
|   | | |         |           `-ParenExpr 0x212ff76d350 <col:33, col:35> 'int'
|   | | |         |             `-IntegerLiteral 0x212ff76d328 <line:63:27> 'int' 32
|   | | |         `-ParenExpr 0x212ff76d580 <line:60:17, col:37> 'double'
|   | | |           `-CStyleCastExpr 0x212ff76d558 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |             `-ParenExpr 0x212ff76d538 <col:26, col:36> 'unsigned long long'
|   | | |               `-BinaryOperator 0x212ff76d4e0 <col:27, col:35> 'unsigned long long' '<<'
|   | | |                 |-IntegerLiteral 0x212ff76d470 <col:27> 'unsigned long long' 1
|   | | |                 `-ParenExpr 0x212ff76d4c0 <col:33, col:35> 'int'
|   | | |                   `-IntegerLiteral 0x212ff76d498 <line:64:27> 'int' 32
|   | | |-BinaryOperator 0x212ff76b4a0 <line:325:9, line:65:31> 'double' '='
|   | | | |-DeclRefExpr 0x212ff76d640 <line:325:9> 'double' lvalue Var 0x212ff766950 'c3lo' 'double'
|   | | | `-BinaryOperator 0x212ff76b480 <col:16, line:65:31> 'double' '-'
|   | | |   |-ParenExpr 0x212ff76dda0 <line:325:16, col:38> 'double'
|   | | |   | `-BinaryOperator 0x212ff76dd80 <col:17, line:65:31> 'double' '+'
|   | | |   |   |-ImplicitCastExpr 0x212ff76dd68 <line:325:17> 'double' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x212ff76d678 <col:17> 'double' lvalue Var 0x212ff7664f0 'h3lo' 'double'
|   | | |   |   `-BinaryOperator 0x212ff76dd48 <line:60:17, line:65:31> 'double' '*'
|   | | |   |     |-ParenExpr 0x212ff76d7a8 <line:60:17, col:37> 'double'
|   | | |   |     | `-CStyleCastExpr 0x212ff76d780 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |     |   `-ParenExpr 0x212ff76d760 <col:26, col:36> 'unsigned long long'
|   | | |   |     |     `-BinaryOperator 0x212ff76d708 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |     |       |-IntegerLiteral 0x212ff76d698 <col:27> 'unsigned long long' 1
|   | | |   |     |       `-ParenExpr 0x212ff76d6e8 <col:33, col:35> 'int'
|   | | |   |     |         `-IntegerLiteral 0x212ff76d6c0 <line:325:28> 'int' 52
|   | | |   |     `-ParenExpr 0x212ff76dd28 <line:65:17, col:31> 'double'
|   | | |   |       `-BinaryOperator 0x212ff76dd08 <line:64:16, line:60:37> 'double' '*'
|   | | |   |         |-ParenExpr 0x212ff76dbb8 <line:64:16, col:30> 'double'
|   | | |   |         | `-BinaryOperator 0x212ff76db98 <line:63:16, line:60:37> 'double' '*'
|   | | |   |         |   |-ParenExpr 0x212ff76da48 <line:63:16, col:30> 'double'
|   | | |   |         |   | `-BinaryOperator 0x212ff76da28 <line:60:17, col:37> 'double' '*'
|   | | |   |         |   |   |-ParenExpr 0x212ff76d8d8 <col:17, col:37> 'double'
|   | | |   |         |   |   | `-CStyleCastExpr 0x212ff76d8b0 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |         |   |   |   `-ParenExpr 0x212ff76d890 <col:26, col:36> 'unsigned long long'
|   | | |   |         |   |   |     `-BinaryOperator 0x212ff76d838 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |         |   |   |       |-IntegerLiteral 0x212ff76d7c8 <col:27> 'unsigned long long' 1
|   | | |   |         |   |   |       `-ParenExpr 0x212ff76d818 <col:33, col:35> 'int'
|   | | |   |         |   |   |         `-IntegerLiteral 0x212ff76d7f0 <line:62:20> 'int' 32
|   | | |   |         |   |   `-ParenExpr 0x212ff76da08 <line:60:17, col:37> 'double'
|   | | |   |         |   |     `-CStyleCastExpr 0x212ff76d9e0 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |         |   |       `-ParenExpr 0x212ff76d9c0 <col:26, col:36> 'unsigned long long'
|   | | |   |         |   |         `-BinaryOperator 0x212ff76d968 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |         |   |           |-IntegerLiteral 0x212ff76d8f8 <col:27> 'unsigned long long' 1
|   | | |   |         |   |           `-ParenExpr 0x212ff76d948 <col:33, col:35> 'int'
|   | | |   |         |   |             `-IntegerLiteral 0x212ff76d920 <line:63:27> 'int' 32
|   | | |   |         |   `-ParenExpr 0x212ff76db78 <line:60:17, col:37> 'double'
|   | | |   |         |     `-CStyleCastExpr 0x212ff76db50 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |         |       `-ParenExpr 0x212ff76db30 <col:26, col:36> 'unsigned long long'
|   | | |   |         |         `-BinaryOperator 0x212ff76dad8 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |         |           |-IntegerLiteral 0x212ff76da68 <col:27> 'unsigned long long' 1
|   | | |   |         |           `-ParenExpr 0x212ff76dab8 <col:33, col:35> 'int'
|   | | |   |         |             `-IntegerLiteral 0x212ff76da90 <line:64:27> 'int' 32
|   | | |   |         `-ParenExpr 0x212ff76dce8 <line:60:17, col:37> 'double'
|   | | |   |           `-CStyleCastExpr 0x212ff76dcc0 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |             `-ParenExpr 0x212ff76dca0 <col:26, col:36> 'unsigned long long'
|   | | |   |               `-BinaryOperator 0x212ff76dc48 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |                 |-IntegerLiteral 0x212ff76dbd8 <col:27> 'unsigned long long' 1
|   | | |   |                 `-ParenExpr 0x212ff76dc28 <col:33, col:35> 'int'
|   | | |   |                   `-IntegerLiteral 0x212ff76dc00 <line:65:28> 'int' 34
|   | | |   `-BinaryOperator 0x212ff76b460 <line:60:17, line:65:31> 'double' '*'
|   | | |     |-ParenExpr 0x212ff76ded0 <line:60:17, col:37> 'double'
|   | | |     | `-CStyleCastExpr 0x212ff76dea8 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |     |   `-ParenExpr 0x212ff76de88 <col:26, col:36> 'unsigned long long'
|   | | |     |     `-BinaryOperator 0x212ff76de30 <col:27, col:35> 'unsigned long long' '<<'
|   | | |     |       |-IntegerLiteral 0x212ff76ddc0 <col:27> 'unsigned long long' 1
|   | | |     |       `-ParenExpr 0x212ff76de10 <col:33, col:35> 'int'
|   | | |     |         `-IntegerLiteral 0x212ff76dde8 <line:325:46> 'int' 52
|   | | |     `-ParenExpr 0x212ff76b440 <line:65:17, col:31> 'double'
|   | | |       `-BinaryOperator 0x212ff76b420 <line:64:16, line:60:37> 'double' '*'
|   | | |         |-ParenExpr 0x212ff76b2d0 <line:64:16, col:30> 'double'
|   | | |         | `-BinaryOperator 0x212ff76b2b0 <line:63:16, line:60:37> 'double' '*'
|   | | |         |   |-ParenExpr 0x212ff76b160 <line:63:16, col:30> 'double'
|   | | |         |   | `-BinaryOperator 0x212ff76b140 <line:60:17, col:37> 'double' '*'
|   | | |         |   |   |-ParenExpr 0x212ff76e000 <col:17, col:37> 'double'
|   | | |         |   |   | `-CStyleCastExpr 0x212ff76dfd8 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |         |   |   |   `-ParenExpr 0x212ff76dfb8 <col:26, col:36> 'unsigned long long'
|   | | |         |   |   |     `-BinaryOperator 0x212ff76df60 <col:27, col:35> 'unsigned long long' '<<'
|   | | |         |   |   |       |-IntegerLiteral 0x212ff76def0 <col:27> 'unsigned long long' 1
|   | | |         |   |   |       `-ParenExpr 0x212ff76df40 <col:33, col:35> 'int'
|   | | |         |   |   |         `-IntegerLiteral 0x212ff76df18 <line:62:20> 'int' 32
|   | | |         |   |   `-ParenExpr 0x212ff76b120 <line:60:17, col:37> 'double'
|   | | |         |   |     `-CStyleCastExpr 0x212ff76b0f8 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |         |   |       `-ParenExpr 0x212ff76b0d8 <col:26, col:36> 'unsigned long long'
|   | | |         |   |         `-BinaryOperator 0x212ff76b080 <col:27, col:35> 'unsigned long long' '<<'
|   | | |         |   |           |-IntegerLiteral 0x212ff76e020 <col:27> 'unsigned long long' 1
|   | | |         |   |           `-ParenExpr 0x212ff76e070 <col:33, col:35> 'int'
|   | | |         |   |             `-IntegerLiteral 0x212ff76e048 <line:63:27> 'int' 32
|   | | |         |   `-ParenExpr 0x212ff76b290 <line:60:17, col:37> 'double'
|   | | |         |     `-CStyleCastExpr 0x212ff76b268 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |         |       `-ParenExpr 0x212ff76b248 <col:26, col:36> 'unsigned long long'
|   | | |         |         `-BinaryOperator 0x212ff76b1f0 <col:27, col:35> 'unsigned long long' '<<'
|   | | |         |           |-IntegerLiteral 0x212ff76b180 <col:27> 'unsigned long long' 1
|   | | |         |           `-ParenExpr 0x212ff76b1d0 <col:33, col:35> 'int'
|   | | |         |             `-IntegerLiteral 0x212ff76b1a8 <line:64:27> 'int' 32
|   | | |         `-ParenExpr 0x212ff76b400 <line:60:17, col:37> 'double'
|   | | |           `-CStyleCastExpr 0x212ff76b3d8 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |             `-ParenExpr 0x212ff76b3b8 <col:26, col:36> 'unsigned long long'
|   | | |               `-BinaryOperator 0x212ff76b360 <col:27, col:35> 'unsigned long long' '<<'
|   | | |                 |-IntegerLiteral 0x212ff76b2f0 <col:27> 'unsigned long long' 1
|   | | |                 `-ParenExpr 0x212ff76b340 <col:33, col:35> 'int'
|   | | |                   `-IntegerLiteral 0x212ff76b318 <line:65:28> 'int' 34
|   | | |-BinaryOperator 0x212ff76ba90 <line:327:9, line:60:37> 'double' '='
|   | | | |-DeclRefExpr 0x212ff76b4c0 <line:327:9> 'double' lvalue Var 0x212ff7666d0 'c0hi' 'double'
|   | | | `-BinaryOperator 0x212ff76ba70 <col:16, line:60:37> 'double' '-'
|   | | |   |-ParenExpr 0x212ff76b7d0 <line:327:16, col:37> 'double'
|   | | |   | `-BinaryOperator 0x212ff76b7b0 <col:17, line:60:37> 'double' '+'
|   | | |   |   |-ImplicitCastExpr 0x212ff76b798 <line:327:17> 'double' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x212ff76b4f8 <col:17> 'double' lvalue Var 0x212ff766270 'h0hi' 'double'
|   | | |   |   `-BinaryOperator 0x212ff76b778 <line:60:17, col:37> 'double' '*'
|   | | |   |     |-ParenExpr 0x212ff76b628 <col:17, col:37> 'double'
|   | | |   |     | `-CStyleCastExpr 0x212ff76b600 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |     |   `-ParenExpr 0x212ff76b5e0 <col:26, col:36> 'unsigned long long'
|   | | |   |     |     `-BinaryOperator 0x212ff76b588 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |     |       |-IntegerLiteral 0x212ff76b518 <col:27> 'unsigned long long' 1
|   | | |   |     |       `-ParenExpr 0x212ff76b568 <col:33, col:35> 'int'
|   | | |   |     |         `-IntegerLiteral 0x212ff76b540 <line:327:28> 'int' 52
|   | | |   |     `-ParenExpr 0x212ff76b758 <line:60:17, col:37> 'double'
|   | | |   |       `-CStyleCastExpr 0x212ff76b730 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |         `-ParenExpr 0x212ff76b710 <col:26, col:36> 'unsigned long long'
|   | | |   |           `-BinaryOperator 0x212ff76b6b8 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |             |-IntegerLiteral 0x212ff76b648 <col:27> 'unsigned long long' 1
|   | | |   |             `-ParenExpr 0x212ff76b698 <col:33, col:35> 'int'
|   | | |   |               `-IntegerLiteral 0x212ff76b670 <line:62:20> 'int' 32
|   | | |   `-BinaryOperator 0x212ff76ba50 <line:60:17, col:37> 'double' '*'
|   | | |     |-ParenExpr 0x212ff76b900 <col:17, col:37> 'double'
|   | | |     | `-CStyleCastExpr 0x212ff76b8d8 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |     |   `-ParenExpr 0x212ff76b8b8 <col:26, col:36> 'unsigned long long'
|   | | |     |     `-BinaryOperator 0x212ff76b860 <col:27, col:35> 'unsigned long long' '<<'
|   | | |     |       |-IntegerLiteral 0x212ff76b7f0 <col:27> 'unsigned long long' 1
|   | | |     |       `-ParenExpr 0x212ff76b840 <col:33, col:35> 'int'
|   | | |     |         `-IntegerLiteral 0x212ff76b818 <line:327:46> 'int' 52
|   | | |     `-ParenExpr 0x212ff76ba30 <line:60:17, col:37> 'double'
|   | | |       `-CStyleCastExpr 0x212ff76ba08 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |         `-ParenExpr 0x212ff76b9e8 <col:26, col:36> 'unsigned long long'
|   | | |           `-BinaryOperator 0x212ff76b990 <col:27, col:35> 'unsigned long long' '<<'
|   | | |             |-IntegerLiteral 0x212ff76b920 <col:27> 'unsigned long long' 1
|   | | |             `-ParenExpr 0x212ff76b970 <col:33, col:35> 'int'
|   | | |               `-IntegerLiteral 0x212ff76b948 <line:62:20> 'int' 32
|   | | |-BinaryOperator 0x212ff769340 <line:328:9, line:63:30> 'double' '='
|   | | | |-DeclRefExpr 0x212ff76bab0 <line:328:9> 'double' lvalue Var 0x212ff7667d0 'c1hi' 'double'
|   | | | `-BinaryOperator 0x212ff769320 <col:16, line:63:30> 'double' '-'
|   | | |   |-ParenExpr 0x212ff76bf30 <line:328:16, col:37> 'double'
|   | | |   | `-BinaryOperator 0x212ff76bf10 <col:17, line:63:30> 'double' '+'
|   | | |   |   |-ImplicitCastExpr 0x212ff76bef8 <line:328:17> 'double' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x212ff76bae8 <col:17> 'double' lvalue Var 0x212ff766370 'h1hi' 'double'
|   | | |   |   `-BinaryOperator 0x212ff76bed8 <line:60:17, line:63:30> 'double' '*'
|   | | |   |     |-ParenExpr 0x212ff76bc18 <line:60:17, col:37> 'double'
|   | | |   |     | `-CStyleCastExpr 0x212ff76bbf0 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |     |   `-ParenExpr 0x212ff76bbd0 <col:26, col:36> 'unsigned long long'
|   | | |   |     |     `-BinaryOperator 0x212ff76bb78 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |     |       |-IntegerLiteral 0x212ff76bb08 <col:27> 'unsigned long long' 1
|   | | |   |     |       `-ParenExpr 0x212ff76bb58 <col:33, col:35> 'int'
|   | | |   |     |         `-IntegerLiteral 0x212ff76bb30 <line:328:28> 'int' 52
|   | | |   |     `-ParenExpr 0x212ff76beb8 <line:63:16, col:30> 'double'
|   | | |   |       `-BinaryOperator 0x212ff76be98 <line:60:17, col:37> 'double' '*'
|   | | |   |         |-ParenExpr 0x212ff76bd48 <col:17, col:37> 'double'
|   | | |   |         | `-CStyleCastExpr 0x212ff76bd20 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |         |   `-ParenExpr 0x212ff76bd00 <col:26, col:36> 'unsigned long long'
|   | | |   |         |     `-BinaryOperator 0x212ff76bca8 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |         |       |-IntegerLiteral 0x212ff76bc38 <col:27> 'unsigned long long' 1
|   | | |   |         |       `-ParenExpr 0x212ff76bc88 <col:33, col:35> 'int'
|   | | |   |         |         `-IntegerLiteral 0x212ff76bc60 <line:62:20> 'int' 32
|   | | |   |         `-ParenExpr 0x212ff76be78 <line:60:17, col:37> 'double'
|   | | |   |           `-CStyleCastExpr 0x212ff76be50 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |             `-ParenExpr 0x212ff76be30 <col:26, col:36> 'unsigned long long'
|   | | |   |               `-BinaryOperator 0x212ff76bdd8 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |                 |-IntegerLiteral 0x212ff76bd68 <col:27> 'unsigned long long' 1
|   | | |   |                 `-ParenExpr 0x212ff76bdb8 <col:33, col:35> 'int'
|   | | |   |                   `-IntegerLiteral 0x212ff76bd90 <line:63:27> 'int' 32
|   | | |   `-BinaryOperator 0x212ff769300 <line:60:17, line:63:30> 'double' '*'
|   | | |     |-ParenExpr 0x212ff76c060 <line:60:17, col:37> 'double'
|   | | |     | `-CStyleCastExpr 0x212ff76c038 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |     |   `-ParenExpr 0x212ff76c018 <col:26, col:36> 'unsigned long long'
|   | | |     |     `-BinaryOperator 0x212ff76bfc0 <col:27, col:35> 'unsigned long long' '<<'
|   | | |     |       |-IntegerLiteral 0x212ff76bf50 <col:27> 'unsigned long long' 1
|   | | |     |       `-ParenExpr 0x212ff76bfa0 <col:33, col:35> 'int'
|   | | |     |         `-IntegerLiteral 0x212ff76bf78 <line:328:46> 'int' 52
|   | | |     `-ParenExpr 0x212ff7692e0 <line:63:16, col:30> 'double'
|   | | |       `-BinaryOperator 0x212ff7692c0 <line:60:17, col:37> 'double' '*'
|   | | |         |-ParenExpr 0x212ff769170 <col:17, col:37> 'double'
|   | | |         | `-CStyleCastExpr 0x212ff769148 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |         |   `-ParenExpr 0x212ff769128 <col:26, col:36> 'unsigned long long'
|   | | |         |     `-BinaryOperator 0x212ff7690d0 <col:27, col:35> 'unsigned long long' '<<'
|   | | |         |       |-IntegerLiteral 0x212ff769060 <col:27> 'unsigned long long' 1
|   | | |         |       `-ParenExpr 0x212ff7690b0 <col:33, col:35> 'int'
|   | | |         |         `-IntegerLiteral 0x212ff769088 <line:62:20> 'int' 32
|   | | |         `-ParenExpr 0x212ff7692a0 <line:60:17, col:37> 'double'
|   | | |           `-CStyleCastExpr 0x212ff769278 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |             `-ParenExpr 0x212ff769258 <col:26, col:36> 'unsigned long long'
|   | | |               `-BinaryOperator 0x212ff769200 <col:27, col:35> 'unsigned long long' '<<'
|   | | |                 |-IntegerLiteral 0x212ff769190 <col:27> 'unsigned long long' 1
|   | | |                 `-ParenExpr 0x212ff7691e0 <col:33, col:35> 'int'
|   | | |                   `-IntegerLiteral 0x212ff7691b8 <line:63:27> 'int' 32
|   | | |-BinaryOperator 0x212ff769ef0 <line:329:9, line:64:30> 'double' '='
|   | | | |-DeclRefExpr 0x212ff769360 <line:329:9> 'double' lvalue Var 0x212ff7668d0 'c2hi' 'double'
|   | | | `-BinaryOperator 0x212ff769ed0 <col:16, line:64:30> 'double' '-'
|   | | |   |-ParenExpr 0x212ff769950 <line:329:16, col:37> 'double'
|   | | |   | `-BinaryOperator 0x212ff769930 <col:17, line:64:30> 'double' '+'
|   | | |   |   |-ImplicitCastExpr 0x212ff769918 <line:329:17> 'double' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x212ff769398 <col:17> 'double' lvalue Var 0x212ff766470 'h2hi' 'double'
|   | | |   |   `-BinaryOperator 0x212ff7698f8 <line:60:17, line:64:30> 'double' '*'
|   | | |   |     |-ParenExpr 0x212ff7694c8 <line:60:17, col:37> 'double'
|   | | |   |     | `-CStyleCastExpr 0x212ff7694a0 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |     |   `-ParenExpr 0x212ff769480 <col:26, col:36> 'unsigned long long'
|   | | |   |     |     `-BinaryOperator 0x212ff769428 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |     |       |-IntegerLiteral 0x212ff7693b8 <col:27> 'unsigned long long' 1
|   | | |   |     |       `-ParenExpr 0x212ff769408 <col:33, col:35> 'int'
|   | | |   |     |         `-IntegerLiteral 0x212ff7693e0 <line:329:28> 'int' 52
|   | | |   |     `-ParenExpr 0x212ff7698d8 <line:64:16, col:30> 'double'
|   | | |   |       `-BinaryOperator 0x212ff7698b8 <line:63:16, line:60:37> 'double' '*'
|   | | |   |         |-ParenExpr 0x212ff769768 <line:63:16, col:30> 'double'
|   | | |   |         | `-BinaryOperator 0x212ff769748 <line:60:17, col:37> 'double' '*'
|   | | |   |         |   |-ParenExpr 0x212ff7695f8 <col:17, col:37> 'double'
|   | | |   |         |   | `-CStyleCastExpr 0x212ff7695d0 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |         |   |   `-ParenExpr 0x212ff7695b0 <col:26, col:36> 'unsigned long long'
|   | | |   |         |   |     `-BinaryOperator 0x212ff769558 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |         |   |       |-IntegerLiteral 0x212ff7694e8 <col:27> 'unsigned long long' 1
|   | | |   |         |   |       `-ParenExpr 0x212ff769538 <col:33, col:35> 'int'
|   | | |   |         |   |         `-IntegerLiteral 0x212ff769510 <line:62:20> 'int' 32
|   | | |   |         |   `-ParenExpr 0x212ff769728 <line:60:17, col:37> 'double'
|   | | |   |         |     `-CStyleCastExpr 0x212ff769700 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |         |       `-ParenExpr 0x212ff7696e0 <col:26, col:36> 'unsigned long long'
|   | | |   |         |         `-BinaryOperator 0x212ff769688 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |         |           |-IntegerLiteral 0x212ff769618 <col:27> 'unsigned long long' 1
|   | | |   |         |           `-ParenExpr 0x212ff769668 <col:33, col:35> 'int'
|   | | |   |         |             `-IntegerLiteral 0x212ff769640 <line:63:27> 'int' 32
|   | | |   |         `-ParenExpr 0x212ff769898 <line:60:17, col:37> 'double'
|   | | |   |           `-CStyleCastExpr 0x212ff769870 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |             `-ParenExpr 0x212ff769850 <col:26, col:36> 'unsigned long long'
|   | | |   |               `-BinaryOperator 0x212ff7697f8 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |                 |-IntegerLiteral 0x212ff769788 <col:27> 'unsigned long long' 1
|   | | |   |                 `-ParenExpr 0x212ff7697d8 <col:33, col:35> 'int'
|   | | |   |                   `-IntegerLiteral 0x212ff7697b0 <line:64:27> 'int' 32
|   | | |   `-BinaryOperator 0x212ff769eb0 <line:60:17, line:64:30> 'double' '*'
|   | | |     |-ParenExpr 0x212ff769a80 <line:60:17, col:37> 'double'
|   | | |     | `-CStyleCastExpr 0x212ff769a58 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |     |   `-ParenExpr 0x212ff769a38 <col:26, col:36> 'unsigned long long'
|   | | |     |     `-BinaryOperator 0x212ff7699e0 <col:27, col:35> 'unsigned long long' '<<'
|   | | |     |       |-IntegerLiteral 0x212ff769970 <col:27> 'unsigned long long' 1
|   | | |     |       `-ParenExpr 0x212ff7699c0 <col:33, col:35> 'int'
|   | | |     |         `-IntegerLiteral 0x212ff769998 <line:329:46> 'int' 52
|   | | |     `-ParenExpr 0x212ff769e90 <line:64:16, col:30> 'double'
|   | | |       `-BinaryOperator 0x212ff769e70 <line:63:16, line:60:37> 'double' '*'
|   | | |         |-ParenExpr 0x212ff769d20 <line:63:16, col:30> 'double'
|   | | |         | `-BinaryOperator 0x212ff769d00 <line:60:17, col:37> 'double' '*'
|   | | |         |   |-ParenExpr 0x212ff769bb0 <col:17, col:37> 'double'
|   | | |         |   | `-CStyleCastExpr 0x212ff769b88 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |         |   |   `-ParenExpr 0x212ff769b68 <col:26, col:36> 'unsigned long long'
|   | | |         |   |     `-BinaryOperator 0x212ff769b10 <col:27, col:35> 'unsigned long long' '<<'
|   | | |         |   |       |-IntegerLiteral 0x212ff769aa0 <col:27> 'unsigned long long' 1
|   | | |         |   |       `-ParenExpr 0x212ff769af0 <col:33, col:35> 'int'
|   | | |         |   |         `-IntegerLiteral 0x212ff769ac8 <line:62:20> 'int' 32
|   | | |         |   `-ParenExpr 0x212ff769ce0 <line:60:17, col:37> 'double'
|   | | |         |     `-CStyleCastExpr 0x212ff769cb8 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |         |       `-ParenExpr 0x212ff769c98 <col:26, col:36> 'unsigned long long'
|   | | |         |         `-BinaryOperator 0x212ff769c40 <col:27, col:35> 'unsigned long long' '<<'
|   | | |         |           |-IntegerLiteral 0x212ff769bd0 <col:27> 'unsigned long long' 1
|   | | |         |           `-ParenExpr 0x212ff769c20 <col:33, col:35> 'int'
|   | | |         |             `-IntegerLiteral 0x212ff769bf8 <line:63:27> 'int' 32
|   | | |         `-ParenExpr 0x212ff769e50 <line:60:17, col:37> 'double'
|   | | |           `-CStyleCastExpr 0x212ff769e28 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |             `-ParenExpr 0x212ff769e08 <col:26, col:36> 'unsigned long long'
|   | | |               `-BinaryOperator 0x212ff769db0 <col:27, col:35> 'unsigned long long' '<<'
|   | | |                 |-IntegerLiteral 0x212ff769d40 <col:27> 'unsigned long long' 1
|   | | |                 `-ParenExpr 0x212ff769d90 <col:33, col:35> 'int'
|   | | |                   `-IntegerLiteral 0x212ff769d68 <line:64:27> 'int' 32
|   | | |-BinaryOperator 0x212ff76ede0 <line:330:9, line:65:31> 'double' '='
|   | | | |-DeclRefExpr 0x212ff769f10 <line:330:9> 'double' lvalue Var 0x212ff7669d0 'c3hi' 'double'
|   | | | `-BinaryOperator 0x212ff76edc0 <col:16, line:65:31> 'double' '-'
|   | | |   |-ParenExpr 0x212ff76e6d0 <line:330:16, col:38> 'double'
|   | | |   | `-BinaryOperator 0x212ff76e6b0 <col:17, line:65:31> 'double' '+'
|   | | |   |   |-ImplicitCastExpr 0x212ff76e698 <line:330:17> 'double' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x212ff769f48 <col:17> 'double' lvalue Var 0x212ff766570 'h3hi' 'double'
|   | | |   |   `-BinaryOperator 0x212ff76e678 <line:60:17, line:65:31> 'double' '*'
|   | | |   |     |-ParenExpr 0x212ff76e0d8 <line:60:17, col:37> 'double'
|   | | |   |     | `-CStyleCastExpr 0x212ff76e0b0 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |     |   `-ParenExpr 0x212ff76a030 <col:26, col:36> 'unsigned long long'
|   | | |   |     |     `-BinaryOperator 0x212ff769fd8 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |     |       |-IntegerLiteral 0x212ff769f68 <col:27> 'unsigned long long' 1
|   | | |   |     |       `-ParenExpr 0x212ff769fb8 <col:33, col:35> 'int'
|   | | |   |     |         `-IntegerLiteral 0x212ff769f90 <line:330:28> 'int' 52
|   | | |   |     `-ParenExpr 0x212ff76e658 <line:65:17, col:31> 'double'
|   | | |   |       `-BinaryOperator 0x212ff76e638 <line:64:16, line:60:37> 'double' '*'
|   | | |   |         |-ParenExpr 0x212ff76e4e8 <line:64:16, col:30> 'double'
|   | | |   |         | `-BinaryOperator 0x212ff76e4c8 <line:63:16, line:60:37> 'double' '*'
|   | | |   |         |   |-ParenExpr 0x212ff76e378 <line:63:16, col:30> 'double'
|   | | |   |         |   | `-BinaryOperator 0x212ff76e358 <line:60:17, col:37> 'double' '*'
|   | | |   |         |   |   |-ParenExpr 0x212ff76e208 <col:17, col:37> 'double'
|   | | |   |         |   |   | `-CStyleCastExpr 0x212ff76e1e0 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |         |   |   |   `-ParenExpr 0x212ff76e1c0 <col:26, col:36> 'unsigned long long'
|   | | |   |         |   |   |     `-BinaryOperator 0x212ff76e168 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |         |   |   |       |-IntegerLiteral 0x212ff76e0f8 <col:27> 'unsigned long long' 1
|   | | |   |         |   |   |       `-ParenExpr 0x212ff76e148 <col:33, col:35> 'int'
|   | | |   |         |   |   |         `-IntegerLiteral 0x212ff76e120 <line:62:20> 'int' 32
|   | | |   |         |   |   `-ParenExpr 0x212ff76e338 <line:60:17, col:37> 'double'
|   | | |   |         |   |     `-CStyleCastExpr 0x212ff76e310 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |         |   |       `-ParenExpr 0x212ff76e2f0 <col:26, col:36> 'unsigned long long'
|   | | |   |         |   |         `-BinaryOperator 0x212ff76e298 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |         |   |           |-IntegerLiteral 0x212ff76e228 <col:27> 'unsigned long long' 1
|   | | |   |         |   |           `-ParenExpr 0x212ff76e278 <col:33, col:35> 'int'
|   | | |   |         |   |             `-IntegerLiteral 0x212ff76e250 <line:63:27> 'int' 32
|   | | |   |         |   `-ParenExpr 0x212ff76e4a8 <line:60:17, col:37> 'double'
|   | | |   |         |     `-CStyleCastExpr 0x212ff76e480 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |         |       `-ParenExpr 0x212ff76e460 <col:26, col:36> 'unsigned long long'
|   | | |   |         |         `-BinaryOperator 0x212ff76e408 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |         |           |-IntegerLiteral 0x212ff76e398 <col:27> 'unsigned long long' 1
|   | | |   |         |           `-ParenExpr 0x212ff76e3e8 <col:33, col:35> 'int'
|   | | |   |         |             `-IntegerLiteral 0x212ff76e3c0 <line:64:27> 'int' 32
|   | | |   |         `-ParenExpr 0x212ff76e618 <line:60:17, col:37> 'double'
|   | | |   |           `-CStyleCastExpr 0x212ff76e5f0 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |             `-ParenExpr 0x212ff76e5d0 <col:26, col:36> 'unsigned long long'
|   | | |   |               `-BinaryOperator 0x212ff76e578 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |                 |-IntegerLiteral 0x212ff76e508 <col:27> 'unsigned long long' 1
|   | | |   |                 `-ParenExpr 0x212ff76e558 <col:33, col:35> 'int'
|   | | |   |                   `-IntegerLiteral 0x212ff76e530 <line:65:28> 'int' 34
|   | | |   `-BinaryOperator 0x212ff76eda0 <line:60:17, line:65:31> 'double' '*'
|   | | |     |-ParenExpr 0x212ff76e800 <line:60:17, col:37> 'double'
|   | | |     | `-CStyleCastExpr 0x212ff76e7d8 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |     |   `-ParenExpr 0x212ff76e7b8 <col:26, col:36> 'unsigned long long'
|   | | |     |     `-BinaryOperator 0x212ff76e760 <col:27, col:35> 'unsigned long long' '<<'
|   | | |     |       |-IntegerLiteral 0x212ff76e6f0 <col:27> 'unsigned long long' 1
|   | | |     |       `-ParenExpr 0x212ff76e740 <col:33, col:35> 'int'
|   | | |     |         `-IntegerLiteral 0x212ff76e718 <line:330:46> 'int' 52
|   | | |     `-ParenExpr 0x212ff76ed80 <line:65:17, col:31> 'double'
|   | | |       `-BinaryOperator 0x212ff76ed60 <line:64:16, line:60:37> 'double' '*'
|   | | |         |-ParenExpr 0x212ff76ec10 <line:64:16, col:30> 'double'
|   | | |         | `-BinaryOperator 0x212ff76ebf0 <line:63:16, line:60:37> 'double' '*'
|   | | |         |   |-ParenExpr 0x212ff76eaa0 <line:63:16, col:30> 'double'
|   | | |         |   | `-BinaryOperator 0x212ff76ea80 <line:60:17, col:37> 'double' '*'
|   | | |         |   |   |-ParenExpr 0x212ff76e930 <col:17, col:37> 'double'
|   | | |         |   |   | `-CStyleCastExpr 0x212ff76e908 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |         |   |   |   `-ParenExpr 0x212ff76e8e8 <col:26, col:36> 'unsigned long long'
|   | | |         |   |   |     `-BinaryOperator 0x212ff76e890 <col:27, col:35> 'unsigned long long' '<<'
|   | | |         |   |   |       |-IntegerLiteral 0x212ff76e820 <col:27> 'unsigned long long' 1
|   | | |         |   |   |       `-ParenExpr 0x212ff76e870 <col:33, col:35> 'int'
|   | | |         |   |   |         `-IntegerLiteral 0x212ff76e848 <line:62:20> 'int' 32
|   | | |         |   |   `-ParenExpr 0x212ff76ea60 <line:60:17, col:37> 'double'
|   | | |         |   |     `-CStyleCastExpr 0x212ff76ea38 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |         |   |       `-ParenExpr 0x212ff76ea18 <col:26, col:36> 'unsigned long long'
|   | | |         |   |         `-BinaryOperator 0x212ff76e9c0 <col:27, col:35> 'unsigned long long' '<<'
|   | | |         |   |           |-IntegerLiteral 0x212ff76e950 <col:27> 'unsigned long long' 1
|   | | |         |   |           `-ParenExpr 0x212ff76e9a0 <col:33, col:35> 'int'
|   | | |         |   |             `-IntegerLiteral 0x212ff76e978 <line:63:27> 'int' 32
|   | | |         |   `-ParenExpr 0x212ff76ebd0 <line:60:17, col:37> 'double'
|   | | |         |     `-CStyleCastExpr 0x212ff76eba8 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |         |       `-ParenExpr 0x212ff76eb88 <col:26, col:36> 'unsigned long long'
|   | | |         |         `-BinaryOperator 0x212ff76eb30 <col:27, col:35> 'unsigned long long' '<<'
|   | | |         |           |-IntegerLiteral 0x212ff76eac0 <col:27> 'unsigned long long' 1
|   | | |         |           `-ParenExpr 0x212ff76eb10 <col:33, col:35> 'int'
|   | | |         |             `-IntegerLiteral 0x212ff76eae8 <line:64:27> 'int' 32
|   | | |         `-ParenExpr 0x212ff76ed40 <line:60:17, col:37> 'double'
|   | | |           `-CStyleCastExpr 0x212ff76ed18 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |             `-ParenExpr 0x212ff76ecf8 <col:26, col:36> 'unsigned long long'
|   | | |               `-BinaryOperator 0x212ff76eca0 <col:27, col:35> 'unsigned long long' '<<'
|   | | |                 |-IntegerLiteral 0x212ff76ec30 <col:27> 'unsigned long long' 1
|   | | |                 `-ParenExpr 0x212ff76ec80 <col:33, col:35> 'int'
|   | | |                   `-IntegerLiteral 0x212ff76ec58 <line:65:28> 'int' 34
|   | | |-BinaryOperator 0x212ff76ef28 <line:335:9, col:31> 'double' '='
|   | | | |-DeclRefExpr 0x212ff76ee00 <col:9> 'double' lvalue Var 0x212ff766030 'x1' 'double'
|   | | | `-BinaryOperator 0x212ff76ef08 <col:15, col:31> 'double' '+'
|   | | |   |-ParenExpr 0x212ff76eeb0 <col:15, col:27> 'double'
|   | | |   | `-BinaryOperator 0x212ff76ee90 <col:16, col:23> 'double' '-'
|   | | |   |   |-ImplicitCastExpr 0x212ff76ee60 <col:16> 'double' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x212ff76ee20 <col:16> 'double' lvalue Var 0x212ff7662f0 'h1lo' 'double'
|   | | |   |   `-ImplicitCastExpr 0x212ff76ee78 <col:23> 'double' <LValueToRValue>
|   | | |   |     `-DeclRefExpr 0x212ff76ee40 <col:23> 'double' lvalue Var 0x212ff766750 'c1lo' 'double'
|   | | |   `-ImplicitCastExpr 0x212ff76eef0 <col:31> 'double' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x212ff76eed0 <col:31> 'double' lvalue Var 0x212ff766650 'c0lo' 'double'
|   | | |-BinaryOperator 0x212ff76f070 <line:336:9, col:31> 'double' '='
|   | | | |-DeclRefExpr 0x212ff76ef48 <col:9> 'double' lvalue Var 0x212ff7660b0 'x2' 'double'
|   | | | `-BinaryOperator 0x212ff76f050 <col:15, col:31> 'double' '+'
|   | | |   |-ParenExpr 0x212ff76eff8 <col:15, col:27> 'double'
|   | | |   | `-BinaryOperator 0x212ff76efd8 <col:16, col:23> 'double' '-'
|   | | |   |   |-ImplicitCastExpr 0x212ff76efa8 <col:16> 'double' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x212ff76ef68 <col:16> 'double' lvalue Var 0x212ff7663f0 'h2lo' 'double'
|   | | |   |   `-ImplicitCastExpr 0x212ff76efc0 <col:23> 'double' <LValueToRValue>
|   | | |   |     `-DeclRefExpr 0x212ff76ef88 <col:23> 'double' lvalue Var 0x212ff766850 'c2lo' 'double'
|   | | |   `-ImplicitCastExpr 0x212ff76f038 <col:31> 'double' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x212ff76f018 <col:31> 'double' lvalue Var 0x212ff766750 'c1lo' 'double'
|   | | |-BinaryOperator 0x212ff7711e8 <line:337:9, col:31> 'double' '='
|   | | | |-DeclRefExpr 0x212ff76f090 <col:9> 'double' lvalue Var 0x212ff766130 'x3' 'double'
|   | | | `-BinaryOperator 0x212ff7711c8 <col:15, col:31> 'double' '+'
|   | | |   |-ParenExpr 0x212ff771170 <col:15, col:27> 'double'
|   | | |   | `-BinaryOperator 0x212ff771150 <col:16, col:23> 'double' '-'
|   | | |   |   |-ImplicitCastExpr 0x212ff771120 <col:16> 'double' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x212ff7710e0 <col:16> 'double' lvalue Var 0x212ff7664f0 'h3lo' 'double'
|   | | |   |   `-ImplicitCastExpr 0x212ff771138 <col:23> 'double' <LValueToRValue>
|   | | |   |     `-DeclRefExpr 0x212ff771100 <col:23> 'double' lvalue Var 0x212ff766950 'c3lo' 'double'
|   | | |   `-ImplicitCastExpr 0x212ff7711b0 <col:31> 'double' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x212ff771190 <col:31> 'double' lvalue Var 0x212ff766850 'c2lo' 'double'
|   | | |-BinaryOperator 0x212ff771938 <line:338:9, col:49> 'double' '='
|   | | | |-DeclRefExpr 0x212ff771208 <col:9> 'double' lvalue Var 0x212ff765f50 'x0' 'double'
|   | | | `-BinaryOperator 0x212ff771918 <col:15, col:49> 'double' '+'
|   | | |   |-ParenExpr 0x212ff7712b8 <col:15, col:27> 'double'
|   | | |   | `-BinaryOperator 0x212ff771298 <col:16, col:23> 'double' '-'
|   | | |   |   |-ImplicitCastExpr 0x212ff771268 <col:16> 'double' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x212ff771228 <col:16> 'double' lvalue Var 0x212ff7661f0 'h0lo' 'double'
|   | | |   |   `-ImplicitCastExpr 0x212ff771280 <col:23> 'double' <LValueToRValue>
|   | | |   |     `-DeclRefExpr 0x212ff771248 <col:23> 'double' lvalue Var 0x212ff766650 'c0lo' 'double'
|   | | |   `-BinaryOperator 0x212ff7718f8 <col:31, col:49> 'double' '*'
|   | | |     |-ImplicitCastExpr 0x212ff7718e0 <col:31> 'double' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x212ff7712d8 <col:31> 'double' lvalue Var 0x212ff766950 'c3lo' 'double'
|   | | |     `-ParenExpr 0x212ff7718c0 <col:38, col:49> 'double'
|   | | |       `-BinaryOperator 0x212ff7718a0 <col:39, line:65:31> 'double' '/'
|   | | |         |-FloatingLiteral 0x212ff7712f8 <line:338:39> 'double' 5.000000e+00
|   | | |         `-ParenExpr 0x212ff771880 <line:65:17, col:31> 'double'
|   | | |           `-BinaryOperator 0x212ff771860 <line:64:16, line:60:37> 'double' '*'
|   | | |             |-ParenExpr 0x212ff771710 <line:64:16, col:30> 'double'
|   | | |             | `-BinaryOperator 0x212ff7716f0 <line:63:16, line:60:37> 'double' '*'
|   | | |             |   |-ParenExpr 0x212ff7715a0 <line:63:16, col:30> 'double'
|   | | |             |   | `-BinaryOperator 0x212ff771580 <line:60:17, col:37> 'double' '*'
|   | | |             |   |   |-ParenExpr 0x212ff771430 <col:17, col:37> 'double'
|   | | |             |   |   | `-CStyleCastExpr 0x212ff771408 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |             |   |   |   `-ParenExpr 0x212ff7713e8 <col:26, col:36> 'unsigned long long'
|   | | |             |   |   |     `-BinaryOperator 0x212ff771390 <col:27, col:35> 'unsigned long long' '<<'
|   | | |             |   |   |       |-IntegerLiteral 0x212ff771320 <col:27> 'unsigned long long' 1
|   | | |             |   |   |       `-ParenExpr 0x212ff771370 <col:33, col:35> 'int'
|   | | |             |   |   |         `-IntegerLiteral 0x212ff771348 <line:62:20> 'int' 32
|   | | |             |   |   `-ParenExpr 0x212ff771560 <line:60:17, col:37> 'double'
|   | | |             |   |     `-CStyleCastExpr 0x212ff771538 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |             |   |       `-ParenExpr 0x212ff771518 <col:26, col:36> 'unsigned long long'
|   | | |             |   |         `-BinaryOperator 0x212ff7714c0 <col:27, col:35> 'unsigned long long' '<<'
|   | | |             |   |           |-IntegerLiteral 0x212ff771450 <col:27> 'unsigned long long' 1
|   | | |             |   |           `-ParenExpr 0x212ff7714a0 <col:33, col:35> 'int'
|   | | |             |   |             `-IntegerLiteral 0x212ff771478 <line:63:27> 'int' 32
|   | | |             |   `-ParenExpr 0x212ff7716d0 <line:60:17, col:37> 'double'
|   | | |             |     `-CStyleCastExpr 0x212ff7716a8 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |             |       `-ParenExpr 0x212ff771688 <col:26, col:36> 'unsigned long long'
|   | | |             |         `-BinaryOperator 0x212ff771630 <col:27, col:35> 'unsigned long long' '<<'
|   | | |             |           |-IntegerLiteral 0x212ff7715c0 <col:27> 'unsigned long long' 1
|   | | |             |           `-ParenExpr 0x212ff771610 <col:33, col:35> 'int'
|   | | |             |             `-IntegerLiteral 0x212ff7715e8 <line:64:27> 'int' 32
|   | | |             `-ParenExpr 0x212ff771840 <line:60:17, col:37> 'double'
|   | | |               `-CStyleCastExpr 0x212ff771818 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |                 `-ParenExpr 0x212ff7717f8 <col:26, col:36> 'unsigned long long'
|   | | |                   `-BinaryOperator 0x212ff7717a0 <col:27, col:35> 'unsigned long long' '<<'
|   | | |                     |-IntegerLiteral 0x212ff771730 <col:27> 'unsigned long long' 1
|   | | |                     `-ParenExpr 0x212ff771780 <col:33, col:35> 'int'
|   | | |                       `-IntegerLiteral 0x212ff771758 <line:65:28> 'int' 34
|   | | |-CompoundAssignOperator 0x212ff771a80 <line:340:9, col:31> 'double' '+=' ComputeLHSTy='double' ComputeResultTy='double'
|   | | | |-DeclRefExpr 0x212ff771958 <col:9> 'double' lvalue Var 0x212ff766030 'x1' 'double'
|   | | | `-BinaryOperator 0x212ff771a60 <col:15, col:31> 'double' '+'
|   | | |   |-ParenExpr 0x212ff771a08 <col:15, col:27> 'double'
|   | | |   | `-BinaryOperator 0x212ff7719e8 <col:16, col:23> 'double' '-'
|   | | |   |   |-ImplicitCastExpr 0x212ff7719b8 <col:16> 'double' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x212ff771978 <col:16> 'double' lvalue Var 0x212ff766370 'h1hi' 'double'
|   | | |   |   `-ImplicitCastExpr 0x212ff7719d0 <col:23> 'double' <LValueToRValue>
|   | | |   |     `-DeclRefExpr 0x212ff771998 <col:23> 'double' lvalue Var 0x212ff7667d0 'c1hi' 'double'
|   | | |   `-ImplicitCastExpr 0x212ff771a48 <col:31> 'double' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x212ff771a28 <col:31> 'double' lvalue Var 0x212ff7666d0 'c0hi' 'double'
|   | | |-CompoundAssignOperator 0x212ff771bd8 <line:341:9, col:31> 'double' '+=' ComputeLHSTy='double' ComputeResultTy='double'
|   | | | |-DeclRefExpr 0x212ff771ab0 <col:9> 'double' lvalue Var 0x212ff7660b0 'x2' 'double'
|   | | | `-BinaryOperator 0x212ff771bb8 <col:15, col:31> 'double' '+'
|   | | |   |-ParenExpr 0x212ff771b60 <col:15, col:27> 'double'
|   | | |   | `-BinaryOperator 0x212ff771b40 <col:16, col:23> 'double' '-'
|   | | |   |   |-ImplicitCastExpr 0x212ff771b10 <col:16> 'double' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x212ff771ad0 <col:16> 'double' lvalue Var 0x212ff766470 'h2hi' 'double'
|   | | |   |   `-ImplicitCastExpr 0x212ff771b28 <col:23> 'double' <LValueToRValue>
|   | | |   |     `-DeclRefExpr 0x212ff771af0 <col:23> 'double' lvalue Var 0x212ff7668d0 'c2hi' 'double'
|   | | |   `-ImplicitCastExpr 0x212ff771ba0 <col:31> 'double' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x212ff771b80 <col:31> 'double' lvalue Var 0x212ff7667d0 'c1hi' 'double'
|   | | |-CompoundAssignOperator 0x212ff771d30 <line:342:9, col:31> 'double' '+=' ComputeLHSTy='double' ComputeResultTy='double'
|   | | | |-DeclRefExpr 0x212ff771c08 <col:9> 'double' lvalue Var 0x212ff766130 'x3' 'double'
|   | | | `-BinaryOperator 0x212ff771d10 <col:15, col:31> 'double' '+'
|   | | |   |-ParenExpr 0x212ff771cb8 <col:15, col:27> 'double'
|   | | |   | `-BinaryOperator 0x212ff771c98 <col:16, col:23> 'double' '-'
|   | | |   |   |-ImplicitCastExpr 0x212ff771c68 <col:16> 'double' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x212ff771c28 <col:16> 'double' lvalue Var 0x212ff766570 'h3hi' 'double'
|   | | |   |   `-ImplicitCastExpr 0x212ff771c80 <col:23> 'double' <LValueToRValue>
|   | | |   |     `-DeclRefExpr 0x212ff771c48 <col:23> 'double' lvalue Var 0x212ff7669d0 'c3hi' 'double'
|   | | |   `-ImplicitCastExpr 0x212ff771cf8 <col:31> 'double' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x212ff771cd8 <col:31> 'double' lvalue Var 0x212ff7668d0 'c2hi' 'double'
|   | | |-CompoundAssignOperator 0x212ff76a428 <line:343:9, col:49> 'double' '+=' ComputeLHSTy='double' ComputeResultTy='double'
|   | | | |-DeclRefExpr 0x212ff771d60 <col:9> 'double' lvalue Var 0x212ff765f50 'x0' 'double'
|   | | | `-BinaryOperator 0x212ff76a408 <col:15, col:49> 'double' '+'
|   | | |   |-ParenExpr 0x212ff771e10 <col:15, col:27> 'double'
|   | | |   | `-BinaryOperator 0x212ff771df0 <col:16, col:23> 'double' '-'
|   | | |   |   |-ImplicitCastExpr 0x212ff771dc0 <col:16> 'double' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x212ff771d80 <col:16> 'double' lvalue Var 0x212ff766270 'h0hi' 'double'
|   | | |   |   `-ImplicitCastExpr 0x212ff771dd8 <col:23> 'double' <LValueToRValue>
|   | | |   |     `-DeclRefExpr 0x212ff771da0 <col:23> 'double' lvalue Var 0x212ff7666d0 'c0hi' 'double'
|   | | |   `-BinaryOperator 0x212ff76a3e8 <col:31, col:49> 'double' '*'
|   | | |     |-ImplicitCastExpr 0x212ff76a3d0 <col:31> 'double' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x212ff771e30 <col:31> 'double' lvalue Var 0x212ff7669d0 'c3hi' 'double'
|   | | |     `-ParenExpr 0x212ff76a3b0 <col:38, col:49> 'double'
|   | | |       `-BinaryOperator 0x212ff76a390 <col:39, line:65:31> 'double' '/'
|   | | |         |-FloatingLiteral 0x212ff771e50 <line:343:39> 'double' 5.000000e+00
|   | | |         `-ParenExpr 0x212ff76a370 <line:65:17, col:31> 'double'
|   | | |           `-BinaryOperator 0x212ff76a350 <line:64:16, line:60:37> 'double' '*'
|   | | |             |-ParenExpr 0x212ff76a200 <line:64:16, col:30> 'double'
|   | | |             | `-BinaryOperator 0x212ff76a1e0 <line:63:16, line:60:37> 'double' '*'
|   | | |             |   |-ParenExpr 0x212ff76a090 <line:63:16, col:30> 'double'
|   | | |             |   | `-BinaryOperator 0x212ff76a070 <line:60:17, col:37> 'double' '*'
|   | | |             |   |   |-ParenExpr 0x212ff771f88 <col:17, col:37> 'double'
|   | | |             |   |   | `-CStyleCastExpr 0x212ff771f60 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |             |   |   |   `-ParenExpr 0x212ff771f40 <col:26, col:36> 'unsigned long long'
|   | | |             |   |   |     `-BinaryOperator 0x212ff771ee8 <col:27, col:35> 'unsigned long long' '<<'
|   | | |             |   |   |       |-IntegerLiteral 0x212ff771e78 <col:27> 'unsigned long long' 1
|   | | |             |   |   |       `-ParenExpr 0x212ff771ec8 <col:33, col:35> 'int'
|   | | |             |   |   |         `-IntegerLiteral 0x212ff771ea0 <line:62:20> 'int' 32
|   | | |             |   |   `-ParenExpr 0x212ff7720b8 <line:60:17, col:37> 'double'
|   | | |             |   |     `-CStyleCastExpr 0x212ff772090 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |             |   |       `-ParenExpr 0x212ff772070 <col:26, col:36> 'unsigned long long'
|   | | |             |   |         `-BinaryOperator 0x212ff772018 <col:27, col:35> 'unsigned long long' '<<'
|   | | |             |   |           |-IntegerLiteral 0x212ff771fa8 <col:27> 'unsigned long long' 1
|   | | |             |   |           `-ParenExpr 0x212ff771ff8 <col:33, col:35> 'int'
|   | | |             |   |             `-IntegerLiteral 0x212ff771fd0 <line:63:27> 'int' 32
|   | | |             |   `-ParenExpr 0x212ff76a1c0 <line:60:17, col:37> 'double'
|   | | |             |     `-CStyleCastExpr 0x212ff76a198 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |             |       `-ParenExpr 0x212ff76a178 <col:26, col:36> 'unsigned long long'
|   | | |             |         `-BinaryOperator 0x212ff76a120 <col:27, col:35> 'unsigned long long' '<<'
|   | | |             |           |-IntegerLiteral 0x212ff76a0b0 <col:27> 'unsigned long long' 1
|   | | |             |           `-ParenExpr 0x212ff76a100 <col:33, col:35> 'int'
|   | | |             |             `-IntegerLiteral 0x212ff76a0d8 <line:64:27> 'int' 32
|   | | |             `-ParenExpr 0x212ff76a330 <line:60:17, col:37> 'double'
|   | | |               `-CStyleCastExpr 0x212ff76a308 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |                 `-ParenExpr 0x212ff76a2e8 <col:26, col:36> 'unsigned long long'
|   | | |                   `-BinaryOperator 0x212ff76a290 <col:27, col:35> 'unsigned long long' '<<'
|   | | |                     |-IntegerLiteral 0x212ff76a220 <col:27> 'unsigned long long' 1
|   | | |                     `-ParenExpr 0x212ff76a270 <col:33, col:35> 'int'
|   | | |                       `-IntegerLiteral 0x212ff76a248 <line:65:28> 'int' 34
|   | | |-BinaryOperator 0x212ff76a778 <line:351:9, col:59> 'double' '='
|   | | | |-DeclRefExpr 0x212ff76a458 <col:9> 'double' lvalue Var 0x212ff7661f0 'h0lo' 'double'
|   | | | `-BinaryOperator 0x212ff76a758 <col:16, col:59> 'double' '+'
|   | | |   |-BinaryOperator 0x212ff76a690 <col:16, col:47> 'double' '+'
|   | | |   | |-BinaryOperator 0x212ff76a5c8 <col:16, col:35> 'double' '+'
|   | | |   | | |-BinaryOperator 0x212ff76a500 <col:16, col:23> 'double' '*'
|   | | |   | | | |-ImplicitCastExpr 0x212ff76a4d0 <col:16> 'double' <LValueToRValue>
|   | | |   | | | | `-DeclRefExpr 0x212ff76a478 <col:16> 'const double' lvalue Var 0x212ff75fc00 's3lo' 'const double'
|   | | |   | | | `-ImplicitCastExpr 0x212ff76a4e8 <col:23> 'double' <LValueToRValue>
|   | | |   | | |   `-DeclRefExpr 0x212ff76a4b0 <col:23> 'double' lvalue Var 0x212ff766030 'x1' 'double'
|   | | |   | | `-BinaryOperator 0x212ff76a5a8 <col:28, col:35> 'double' '*'
|   | | |   | |   |-ImplicitCastExpr 0x212ff76a578 <col:28> 'double' <LValueToRValue>
|   | | |   | |   | `-DeclRefExpr 0x212ff76a520 <col:28> 'const double' lvalue Var 0x212ff75f910 's2lo' 'const double'
|   | | |   | |   `-ImplicitCastExpr 0x212ff76a590 <col:35> 'double' <LValueToRValue>
|   | | |   | |     `-DeclRefExpr 0x212ff76a558 <col:35> 'double' lvalue Var 0x212ff7660b0 'x2' 'double'
|   | | |   | `-BinaryOperator 0x212ff76a670 <col:40, col:47> 'double' '*'
|   | | |   |   |-ImplicitCastExpr 0x212ff76a640 <col:40> 'double' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x212ff76a5e8 <col:40> 'const double' lvalue Var 0x212ff75f620 's1lo' 'const double'
|   | | |   |   `-ImplicitCastExpr 0x212ff76a658 <col:47> 'double' <LValueToRValue>
|   | | |   |     `-DeclRefExpr 0x212ff76a620 <col:47> 'double' lvalue Var 0x212ff766130 'x3' 'double'
|   | | |   `-BinaryOperator 0x212ff76a738 <col:52, col:59> 'double' '*'
|   | | |     |-ImplicitCastExpr 0x212ff76a708 <col:52> 'double' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x212ff76a6b0 <col:52> 'const double' lvalue Var 0x212ff766ab0 'r0lo' 'const double'
|   | | |     `-ImplicitCastExpr 0x212ff76a720 <col:59> 'double' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x212ff76a6e8 <col:59> 'double' lvalue Var 0x212ff765f50 'x0' 'double'
|   | | |-BinaryOperator 0x212ff76aa70 <line:352:9, col:59> 'double' '='
|   | | | |-DeclRefExpr 0x212ff76a798 <col:9> 'double' lvalue Var 0x212ff7662f0 'h1lo' 'double'
|   | | | `-BinaryOperator 0x212ff76aa50 <col:16, col:59> 'double' '+'
|   | | |   |-BinaryOperator 0x212ff76a988 <col:16, col:47> 'double' '+'
|   | | |   | |-BinaryOperator 0x212ff76a8d8 <col:16, col:35> 'double' '+'
|   | | |   | | |-BinaryOperator 0x212ff76a828 <col:16, col:23> 'double' '*'
|   | | |   | | | |-ImplicitCastExpr 0x212ff76a7f8 <col:16> 'double' <LValueToRValue>
|   | | |   | | | | `-DeclRefExpr 0x212ff76a7b8 <col:16> 'const double' lvalue Var 0x212ff766ab0 'r0lo' 'const double'
|   | | |   | | | `-ImplicitCastExpr 0x212ff76a810 <col:23> 'double' <LValueToRValue>
|   | | |   | | |   `-DeclRefExpr 0x212ff76a7d8 <col:23> 'double' lvalue Var 0x212ff766030 'x1' 'double'
|   | | |   | | `-BinaryOperator 0x212ff76a8b8 <col:28, col:35> 'double' '*'
|   | | |   | |   |-ImplicitCastExpr 0x212ff76a888 <col:28> 'double' <LValueToRValue>
|   | | |   | |   | `-DeclRefExpr 0x212ff76a848 <col:28> 'const double' lvalue Var 0x212ff75fc00 's3lo' 'const double'
|   | | |   | |   `-ImplicitCastExpr 0x212ff76a8a0 <col:35> 'double' <LValueToRValue>
|   | | |   | |     `-DeclRefExpr 0x212ff76a868 <col:35> 'double' lvalue Var 0x212ff7660b0 'x2' 'double'
|   | | |   | `-BinaryOperator 0x212ff76a968 <col:40, col:47> 'double' '*'
|   | | |   |   |-ImplicitCastExpr 0x212ff76a938 <col:40> 'double' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x212ff76a8f8 <col:40> 'const double' lvalue Var 0x212ff75f910 's2lo' 'const double'
|   | | |   |   `-ImplicitCastExpr 0x212ff76a950 <col:47> 'double' <LValueToRValue>
|   | | |   |     `-DeclRefExpr 0x212ff76a918 <col:47> 'double' lvalue Var 0x212ff766130 'x3' 'double'
|   | | |   `-BinaryOperator 0x212ff76aa30 <col:52, col:59> 'double' '*'
|   | | |     |-ImplicitCastExpr 0x212ff76aa00 <col:52> 'double' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x212ff76a9a8 <col:52> 'const double' lvalue Var 0x212ff766db8 'r1lo' 'const double'
|   | | |     `-ImplicitCastExpr 0x212ff76aa18 <col:59> 'double' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x212ff76a9e0 <col:59> 'double' lvalue Var 0x212ff765f50 'x0' 'double'
|   | | |-BinaryOperator 0x212ff76ad68 <line:353:9, col:59> 'double' '='
|   | | | |-DeclRefExpr 0x212ff76aa90 <col:9> 'double' lvalue Var 0x212ff7663f0 'h2lo' 'double'
|   | | | `-BinaryOperator 0x212ff76ad48 <col:16, col:59> 'double' '+'
|   | | |   |-BinaryOperator 0x212ff76ac80 <col:16, col:47> 'double' '+'
|   | | |   | |-BinaryOperator 0x212ff76abd0 <col:16, col:35> 'double' '+'
|   | | |   | | |-BinaryOperator 0x212ff76ab20 <col:16, col:23> 'double' '*'
|   | | |   | | | |-ImplicitCastExpr 0x212ff76aaf0 <col:16> 'double' <LValueToRValue>
|   | | |   | | | | `-DeclRefExpr 0x212ff76aab0 <col:16> 'const double' lvalue Var 0x212ff766db8 'r1lo' 'const double'
|   | | |   | | | `-ImplicitCastExpr 0x212ff76ab08 <col:23> 'double' <LValueToRValue>
|   | | |   | | |   `-DeclRefExpr 0x212ff76aad0 <col:23> 'double' lvalue Var 0x212ff766030 'x1' 'double'
|   | | |   | | `-BinaryOperator 0x212ff76abb0 <col:28, col:35> 'double' '*'
|   | | |   | |   |-ImplicitCastExpr 0x212ff76ab80 <col:28> 'double' <LValueToRValue>
|   | | |   | |   | `-DeclRefExpr 0x212ff76ab40 <col:28> 'const double' lvalue Var 0x212ff766ab0 'r0lo' 'const double'
|   | | |   | |   `-ImplicitCastExpr 0x212ff76ab98 <col:35> 'double' <LValueToRValue>
|   | | |   | |     `-DeclRefExpr 0x212ff76ab60 <col:35> 'double' lvalue Var 0x212ff7660b0 'x2' 'double'
|   | | |   | `-BinaryOperator 0x212ff76ac60 <col:40, col:47> 'double' '*'
|   | | |   |   |-ImplicitCastExpr 0x212ff76ac30 <col:40> 'double' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x212ff76abf0 <col:40> 'const double' lvalue Var 0x212ff75fc00 's3lo' 'const double'
|   | | |   |   `-ImplicitCastExpr 0x212ff76ac48 <col:47> 'double' <LValueToRValue>
|   | | |   |     `-DeclRefExpr 0x212ff76ac10 <col:47> 'double' lvalue Var 0x212ff766130 'x3' 'double'
|   | | |   `-BinaryOperator 0x212ff76ad28 <col:52, col:59> 'double' '*'
|   | | |     |-ImplicitCastExpr 0x212ff76acf8 <col:52> 'double' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x212ff76aca0 <col:52> 'const double' lvalue Var 0x212ff75f040 'r2lo' 'const double'
|   | | |     `-ImplicitCastExpr 0x212ff76ad10 <col:59> 'double' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x212ff76acd8 <col:59> 'double' lvalue Var 0x212ff765f50 'x0' 'double'
|   | | |-BinaryOperator 0x212ff779160 <line:354:9, col:59> 'double' '='
|   | | | |-DeclRefExpr 0x212ff76ad88 <col:9> 'double' lvalue Var 0x212ff7664f0 'h3lo' 'double'
|   | | | `-BinaryOperator 0x212ff76b040 <col:16, col:59> 'double' '+'
|   | | |   |-BinaryOperator 0x212ff76af78 <col:16, col:47> 'double' '+'
|   | | |   | |-BinaryOperator 0x212ff76aec8 <col:16, col:35> 'double' '+'
|   | | |   | | |-BinaryOperator 0x212ff76ae18 <col:16, col:23> 'double' '*'
|   | | |   | | | |-ImplicitCastExpr 0x212ff76ade8 <col:16> 'double' <LValueToRValue>
|   | | |   | | | | `-DeclRefExpr 0x212ff76ada8 <col:16> 'const double' lvalue Var 0x212ff75f040 'r2lo' 'const double'
|   | | |   | | | `-ImplicitCastExpr 0x212ff76ae00 <col:23> 'double' <LValueToRValue>
|   | | |   | | |   `-DeclRefExpr 0x212ff76adc8 <col:23> 'double' lvalue Var 0x212ff766030 'x1' 'double'
|   | | |   | | `-BinaryOperator 0x212ff76aea8 <col:28, col:35> 'double' '*'
|   | | |   | |   |-ImplicitCastExpr 0x212ff76ae78 <col:28> 'double' <LValueToRValue>
|   | | |   | |   | `-DeclRefExpr 0x212ff76ae38 <col:28> 'const double' lvalue Var 0x212ff766db8 'r1lo' 'const double'
|   | | |   | |   `-ImplicitCastExpr 0x212ff76ae90 <col:35> 'double' <LValueToRValue>
|   | | |   | |     `-DeclRefExpr 0x212ff76ae58 <col:35> 'double' lvalue Var 0x212ff7660b0 'x2' 'double'
|   | | |   | `-BinaryOperator 0x212ff76af58 <col:40, col:47> 'double' '*'
|   | | |   |   |-ImplicitCastExpr 0x212ff76af28 <col:40> 'double' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x212ff76aee8 <col:40> 'const double' lvalue Var 0x212ff766ab0 'r0lo' 'const double'
|   | | |   |   `-ImplicitCastExpr 0x212ff76af40 <col:47> 'double' <LValueToRValue>
|   | | |   |     `-DeclRefExpr 0x212ff76af08 <col:47> 'double' lvalue Var 0x212ff766130 'x3' 'double'
|   | | |   `-BinaryOperator 0x212ff76b020 <col:52, col:59> 'double' '*'
|   | | |     |-ImplicitCastExpr 0x212ff76aff0 <col:52> 'double' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x212ff76af98 <col:52> 'const double' lvalue Var 0x212ff75f330 'r3lo' 'const double'
|   | | |     `-ImplicitCastExpr 0x212ff76b008 <col:59> 'double' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x212ff76afd0 <col:59> 'double' lvalue Var 0x212ff765f50 'x0' 'double'
|   | | |-BinaryOperator 0x212ff7794a0 <line:356:9, col:59> 'double' '='
|   | | | |-DeclRefExpr 0x212ff779180 <col:9> 'double' lvalue Var 0x212ff766270 'h0hi' 'double'
|   | | | `-BinaryOperator 0x212ff779480 <col:16, col:59> 'double' '+'
|   | | |   |-BinaryOperator 0x212ff7793b8 <col:16, col:47> 'double' '+'
|   | | |   | |-BinaryOperator 0x212ff7792f0 <col:16, col:35> 'double' '+'
|   | | |   | | |-BinaryOperator 0x212ff779228 <col:16, col:23> 'double' '*'
|   | | |   | | | |-ImplicitCastExpr 0x212ff7791f8 <col:16> 'double' <LValueToRValue>
|   | | |   | | | | `-DeclRefExpr 0x212ff7791a0 <col:16> 'const double' lvalue Var 0x212ff75fd78 's3hi' 'const double'
|   | | |   | | | `-ImplicitCastExpr 0x212ff779210 <col:23> 'double' <LValueToRValue>
|   | | |   | | |   `-DeclRefExpr 0x212ff7791d8 <col:23> 'double' lvalue Var 0x212ff766030 'x1' 'double'
|   | | |   | | `-BinaryOperator 0x212ff7792d0 <col:28, col:35> 'double' '*'
|   | | |   | |   |-ImplicitCastExpr 0x212ff7792a0 <col:28> 'double' <LValueToRValue>
|   | | |   | |   | `-DeclRefExpr 0x212ff779248 <col:28> 'const double' lvalue Var 0x212ff75fa88 's2hi' 'const double'
|   | | |   | |   `-ImplicitCastExpr 0x212ff7792b8 <col:35> 'double' <LValueToRValue>
|   | | |   | |     `-DeclRefExpr 0x212ff779280 <col:35> 'double' lvalue Var 0x212ff7660b0 'x2' 'double'
|   | | |   | `-BinaryOperator 0x212ff779398 <col:40, col:47> 'double' '*'
|   | | |   |   |-ImplicitCastExpr 0x212ff779368 <col:40> 'double' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x212ff779310 <col:40> 'const double' lvalue Var 0x212ff75f798 's1hi' 'const double'
|   | | |   |   `-ImplicitCastExpr 0x212ff779380 <col:47> 'double' <LValueToRValue>
|   | | |   |     `-DeclRefExpr 0x212ff779348 <col:47> 'double' lvalue Var 0x212ff766130 'x3' 'double'
|   | | |   `-BinaryOperator 0x212ff779460 <col:52, col:59> 'double' '*'
|   | | |     |-ImplicitCastExpr 0x212ff779430 <col:52> 'double' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x212ff7793d8 <col:52> 'const double' lvalue Var 0x212ff766c40 'r0hi' 'const double'
|   | | |     `-ImplicitCastExpr 0x212ff779448 <col:59> 'double' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x212ff779410 <col:59> 'double' lvalue Var 0x212ff765f50 'x0' 'double'
|   | | |-BinaryOperator 0x212ff779798 <line:357:9, col:59> 'double' '='
|   | | | |-DeclRefExpr 0x212ff7794c0 <col:9> 'double' lvalue Var 0x212ff766370 'h1hi' 'double'
|   | | | `-BinaryOperator 0x212ff779778 <col:16, col:59> 'double' '+'
|   | | |   |-BinaryOperator 0x212ff7796b0 <col:16, col:47> 'double' '+'
|   | | |   | |-BinaryOperator 0x212ff779600 <col:16, col:35> 'double' '+'
|   | | |   | | |-BinaryOperator 0x212ff779550 <col:16, col:23> 'double' '*'
|   | | |   | | | |-ImplicitCastExpr 0x212ff779520 <col:16> 'double' <LValueToRValue>
|   | | |   | | | | `-DeclRefExpr 0x212ff7794e0 <col:16> 'const double' lvalue Var 0x212ff766c40 'r0hi' 'const double'
|   | | |   | | | `-ImplicitCastExpr 0x212ff779538 <col:23> 'double' <LValueToRValue>
|   | | |   | | |   `-DeclRefExpr 0x212ff779500 <col:23> 'double' lvalue Var 0x212ff766030 'x1' 'double'
|   | | |   | | `-BinaryOperator 0x212ff7795e0 <col:28, col:35> 'double' '*'
|   | | |   | |   |-ImplicitCastExpr 0x212ff7795b0 <col:28> 'double' <LValueToRValue>
|   | | |   | |   | `-DeclRefExpr 0x212ff779570 <col:28> 'const double' lvalue Var 0x212ff75fd78 's3hi' 'const double'
|   | | |   | |   `-ImplicitCastExpr 0x212ff7795c8 <col:35> 'double' <LValueToRValue>
|   | | |   | |     `-DeclRefExpr 0x212ff779590 <col:35> 'double' lvalue Var 0x212ff7660b0 'x2' 'double'
|   | | |   | `-BinaryOperator 0x212ff779690 <col:40, col:47> 'double' '*'
|   | | |   |   |-ImplicitCastExpr 0x212ff779660 <col:40> 'double' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x212ff779620 <col:40> 'const double' lvalue Var 0x212ff75fa88 's2hi' 'const double'
|   | | |   |   `-ImplicitCastExpr 0x212ff779678 <col:47> 'double' <LValueToRValue>
|   | | |   |     `-DeclRefExpr 0x212ff779640 <col:47> 'double' lvalue Var 0x212ff766130 'x3' 'double'
|   | | |   `-BinaryOperator 0x212ff779758 <col:52, col:59> 'double' '*'
|   | | |     |-ImplicitCastExpr 0x212ff779728 <col:52> 'double' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x212ff7796d0 <col:52> 'const double' lvalue Var 0x212ff766f30 'r1hi' 'const double'
|   | | |     `-ImplicitCastExpr 0x212ff779740 <col:59> 'double' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x212ff779708 <col:59> 'double' lvalue Var 0x212ff765f50 'x0' 'double'
|   | | |-BinaryOperator 0x212ff779a90 <line:358:9, col:59> 'double' '='
|   | | | |-DeclRefExpr 0x212ff7797b8 <col:9> 'double' lvalue Var 0x212ff766470 'h2hi' 'double'
|   | | | `-BinaryOperator 0x212ff779a70 <col:16, col:59> 'double' '+'
|   | | |   |-BinaryOperator 0x212ff7799a8 <col:16, col:47> 'double' '+'
|   | | |   | |-BinaryOperator 0x212ff7798f8 <col:16, col:35> 'double' '+'
|   | | |   | | |-BinaryOperator 0x212ff779848 <col:16, col:23> 'double' '*'
|   | | |   | | | |-ImplicitCastExpr 0x212ff779818 <col:16> 'double' <LValueToRValue>
|   | | |   | | | | `-DeclRefExpr 0x212ff7797d8 <col:16> 'const double' lvalue Var 0x212ff766f30 'r1hi' 'const double'
|   | | |   | | | `-ImplicitCastExpr 0x212ff779830 <col:23> 'double' <LValueToRValue>
|   | | |   | | |   `-DeclRefExpr 0x212ff7797f8 <col:23> 'double' lvalue Var 0x212ff766030 'x1' 'double'
|   | | |   | | `-BinaryOperator 0x212ff7798d8 <col:28, col:35> 'double' '*'
|   | | |   | |   |-ImplicitCastExpr 0x212ff7798a8 <col:28> 'double' <LValueToRValue>
|   | | |   | |   | `-DeclRefExpr 0x212ff779868 <col:28> 'const double' lvalue Var 0x212ff766c40 'r0hi' 'const double'
|   | | |   | |   `-ImplicitCastExpr 0x212ff7798c0 <col:35> 'double' <LValueToRValue>
|   | | |   | |     `-DeclRefExpr 0x212ff779888 <col:35> 'double' lvalue Var 0x212ff7660b0 'x2' 'double'
|   | | |   | `-BinaryOperator 0x212ff779988 <col:40, col:47> 'double' '*'
|   | | |   |   |-ImplicitCastExpr 0x212ff779958 <col:40> 'double' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x212ff779918 <col:40> 'const double' lvalue Var 0x212ff75fd78 's3hi' 'const double'
|   | | |   |   `-ImplicitCastExpr 0x212ff779970 <col:47> 'double' <LValueToRValue>
|   | | |   |     `-DeclRefExpr 0x212ff779938 <col:47> 'double' lvalue Var 0x212ff766130 'x3' 'double'
|   | | |   `-BinaryOperator 0x212ff779a50 <col:52, col:59> 'double' '*'
|   | | |     |-ImplicitCastExpr 0x212ff779a20 <col:52> 'double' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x212ff7799c8 <col:52> 'const double' lvalue Var 0x212ff75f1b8 'r2hi' 'const double'
|   | | |     `-ImplicitCastExpr 0x212ff779a38 <col:59> 'double' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x212ff779a00 <col:59> 'double' lvalue Var 0x212ff765f50 'x0' 'double'
|   | | |-BinaryOperator 0x212ff779d88 <line:359:9, col:59> 'double' '='
|   | | | |-DeclRefExpr 0x212ff779ab0 <col:9> 'double' lvalue Var 0x212ff766570 'h3hi' 'double'
|   | | | `-BinaryOperator 0x212ff779d68 <col:16, col:59> 'double' '+'
|   | | |   |-BinaryOperator 0x212ff779ca0 <col:16, col:47> 'double' '+'
|   | | |   | |-BinaryOperator 0x212ff779bf0 <col:16, col:35> 'double' '+'
|   | | |   | | |-BinaryOperator 0x212ff779b40 <col:16, col:23> 'double' '*'
|   | | |   | | | |-ImplicitCastExpr 0x212ff779b10 <col:16> 'double' <LValueToRValue>
|   | | |   | | | | `-DeclRefExpr 0x212ff779ad0 <col:16> 'const double' lvalue Var 0x212ff75f1b8 'r2hi' 'const double'
|   | | |   | | | `-ImplicitCastExpr 0x212ff779b28 <col:23> 'double' <LValueToRValue>
|   | | |   | | |   `-DeclRefExpr 0x212ff779af0 <col:23> 'double' lvalue Var 0x212ff766030 'x1' 'double'
|   | | |   | | `-BinaryOperator 0x212ff779bd0 <col:28, col:35> 'double' '*'
|   | | |   | |   |-ImplicitCastExpr 0x212ff779ba0 <col:28> 'double' <LValueToRValue>
|   | | |   | |   | `-DeclRefExpr 0x212ff779b60 <col:28> 'const double' lvalue Var 0x212ff766f30 'r1hi' 'const double'
|   | | |   | |   `-ImplicitCastExpr 0x212ff779bb8 <col:35> 'double' <LValueToRValue>
|   | | |   | |     `-DeclRefExpr 0x212ff779b80 <col:35> 'double' lvalue Var 0x212ff7660b0 'x2' 'double'
|   | | |   | `-BinaryOperator 0x212ff779c80 <col:40, col:47> 'double' '*'
|   | | |   |   |-ImplicitCastExpr 0x212ff779c50 <col:40> 'double' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x212ff779c10 <col:40> 'const double' lvalue Var 0x212ff766c40 'r0hi' 'const double'
|   | | |   |   `-ImplicitCastExpr 0x212ff779c68 <col:47> 'double' <LValueToRValue>
|   | | |   |     `-DeclRefExpr 0x212ff779c30 <col:47> 'double' lvalue Var 0x212ff766130 'x3' 'double'
|   | | |   `-BinaryOperator 0x212ff779d48 <col:52, col:59> 'double' '*'
|   | | |     |-ImplicitCastExpr 0x212ff779d18 <col:52> 'double' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x212ff779cc0 <col:52> 'const double' lvalue Var 0x212ff75f4a8 'r3hi' 'const double'
|   | | |     `-ImplicitCastExpr 0x212ff779d30 <col:59> 'double' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x212ff779cf8 <col:59> 'double' lvalue Var 0x212ff765f50 'x0' 'double'
|   | | |-CompoundAssignOperator 0x212ff779df0 <line:361:9, col:16> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   | | | |-DeclRefExpr 0x212ff779da8 <col:9> 'const unsigned char *' lvalue ParmVar 0x212ff765758 'inp' 'const unsigned char *'
|   | | | `-IntegerLiteral 0x212ff779dc8 <col:16> 'int' 16
|   | | `-CompoundAssignOperator 0x212ff779e80 <line:362:9, col:16> 'size_t':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |   |-DeclRefExpr 0x212ff779e20 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x212ff7657d0 'len' 'size_t':'unsigned long long'
|   | |   `-ImplicitCastExpr 0x212ff779e68 <col:16> 'unsigned long long' <IntegralCast>
|   | |     `-IntegerLiteral 0x212ff779e40 <col:16> 'int' 16
|   | `-BinaryOperator 0x212ff77a068 <line:364:14, col:21> 'int' '>='
|   |   |-ImplicitCastExpr 0x212ff77a038 <col:14> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x212ff779ff0 <col:14> 'size_t':'unsigned long long' lvalue ParmVar 0x212ff7657d0 'len' 'size_t':'unsigned long long'
|   |   `-ImplicitCastExpr 0x212ff77a050 <col:21> 'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x212ff77a010 <col:21> 'int' 16
|   |-BinaryOperator 0x212ff774618 <line:369:5, line:60:37> 'double' '='
|   | |-DeclRefExpr 0x212ff77a0a8 <line:369:5> 'double' lvalue Var 0x212ff766650 'c0lo' 'double'
|   | `-BinaryOperator 0x212ff7745f8 <col:12, line:60:37> 'double' '-'
|   |   |-ParenExpr 0x212ff774358 <line:369:12, col:33> 'double'
|   |   | `-BinaryOperator 0x212ff774338 <col:13, line:60:37> 'double' '+'
|   |   |   |-ImplicitCastExpr 0x212ff774320 <line:369:13> 'double' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x212ff77a0c8 <col:13> 'double' lvalue Var 0x212ff7661f0 'h0lo' 'double'
|   |   |   `-BinaryOperator 0x212ff774300 <line:60:17, col:37> 'double' '*'
|   |   |     |-ParenExpr 0x212ff7741b0 <col:17, col:37> 'double'
|   |   |     | `-CStyleCastExpr 0x212ff774188 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     |   `-ParenExpr 0x212ff774168 <col:26, col:36> 'unsigned long long'
|   |   |     |     `-BinaryOperator 0x212ff774110 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     |       |-IntegerLiteral 0x212ff77a0e8 <col:27> 'unsigned long long' 1
|   |   |     |       `-ParenExpr 0x212ff77a138 <col:33, col:35> 'int'
|   |   |     |         `-IntegerLiteral 0x212ff77a110 <line:369:24> 'int' 52
|   |   |     `-ParenExpr 0x212ff7742e0 <line:60:17, col:37> 'double'
|   |   |       `-CStyleCastExpr 0x212ff7742b8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         `-ParenExpr 0x212ff774298 <col:26, col:36> 'unsigned long long'
|   |   |           `-BinaryOperator 0x212ff774240 <col:27, col:35> 'unsigned long long' '<<'
|   |   |             |-IntegerLiteral 0x212ff7741d0 <col:27> 'unsigned long long' 1
|   |   |             `-ParenExpr 0x212ff774220 <col:33, col:35> 'int'
|   |   |               `-IntegerLiteral 0x212ff7741f8 <line:62:20> 'int' 32
|   |   `-BinaryOperator 0x212ff7745d8 <line:60:17, col:37> 'double' '*'
|   |     |-ParenExpr 0x212ff774488 <col:17, col:37> 'double'
|   |     | `-CStyleCastExpr 0x212ff774460 <col:18, col:36> 'double' <IntegralToFloating>
|   |     |   `-ParenExpr 0x212ff774440 <col:26, col:36> 'unsigned long long'
|   |     |     `-BinaryOperator 0x212ff7743e8 <col:27, col:35> 'unsigned long long' '<<'
|   |     |       |-IntegerLiteral 0x212ff774378 <col:27> 'unsigned long long' 1
|   |     |       `-ParenExpr 0x212ff7743c8 <col:33, col:35> 'int'
|   |     |         `-IntegerLiteral 0x212ff7743a0 <line:369:42> 'int' 52
|   |     `-ParenExpr 0x212ff7745b8 <line:60:17, col:37> 'double'
|   |       `-CStyleCastExpr 0x212ff774590 <col:18, col:36> 'double' <IntegralToFloating>
|   |         `-ParenExpr 0x212ff774570 <col:26, col:36> 'unsigned long long'
|   |           `-BinaryOperator 0x212ff774518 <col:27, col:35> 'unsigned long long' '<<'
|   |             |-IntegerLiteral 0x212ff7744a8 <col:27> 'unsigned long long' 1
|   |             `-ParenExpr 0x212ff7744f8 <col:33, col:35> 'int'
|   |               `-IntegerLiteral 0x212ff7744d0 <line:62:20> 'int' 32
|   |-BinaryOperator 0x212ff774ed0 <line:370:5, line:63:30> 'double' '='
|   | |-DeclRefExpr 0x212ff774638 <line:370:5> 'double' lvalue Var 0x212ff766750 'c1lo' 'double'
|   | `-BinaryOperator 0x212ff774eb0 <col:12, line:63:30> 'double' '-'
|   |   |-ParenExpr 0x212ff774aa0 <line:370:12, col:33> 'double'
|   |   | `-BinaryOperator 0x212ff774a80 <col:13, line:63:30> 'double' '+'
|   |   |   |-ImplicitCastExpr 0x212ff774a68 <line:370:13> 'double' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x212ff774658 <col:13> 'double' lvalue Var 0x212ff7662f0 'h1lo' 'double'
|   |   |   `-BinaryOperator 0x212ff774a48 <line:60:17, line:63:30> 'double' '*'
|   |   |     |-ParenExpr 0x212ff774788 <line:60:17, col:37> 'double'
|   |   |     | `-CStyleCastExpr 0x212ff774760 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     |   `-ParenExpr 0x212ff774740 <col:26, col:36> 'unsigned long long'
|   |   |     |     `-BinaryOperator 0x212ff7746e8 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     |       |-IntegerLiteral 0x212ff774678 <col:27> 'unsigned long long' 1
|   |   |     |       `-ParenExpr 0x212ff7746c8 <col:33, col:35> 'int'
|   |   |     |         `-IntegerLiteral 0x212ff7746a0 <line:370:24> 'int' 52
|   |   |     `-ParenExpr 0x212ff774a28 <line:63:16, col:30> 'double'
|   |   |       `-BinaryOperator 0x212ff774a08 <line:60:17, col:37> 'double' '*'
|   |   |         |-ParenExpr 0x212ff7748b8 <col:17, col:37> 'double'
|   |   |         | `-CStyleCastExpr 0x212ff774890 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         |   `-ParenExpr 0x212ff774870 <col:26, col:36> 'unsigned long long'
|   |   |         |     `-BinaryOperator 0x212ff774818 <col:27, col:35> 'unsigned long long' '<<'
|   |   |         |       |-IntegerLiteral 0x212ff7747a8 <col:27> 'unsigned long long' 1
|   |   |         |       `-ParenExpr 0x212ff7747f8 <col:33, col:35> 'int'
|   |   |         |         `-IntegerLiteral 0x212ff7747d0 <line:62:20> 'int' 32
|   |   |         `-ParenExpr 0x212ff7749e8 <line:60:17, col:37> 'double'
|   |   |           `-CStyleCastExpr 0x212ff7749c0 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |             `-ParenExpr 0x212ff7749a0 <col:26, col:36> 'unsigned long long'
|   |   |               `-BinaryOperator 0x212ff774948 <col:27, col:35> 'unsigned long long' '<<'
|   |   |                 |-IntegerLiteral 0x212ff7748d8 <col:27> 'unsigned long long' 1
|   |   |                 `-ParenExpr 0x212ff774928 <col:33, col:35> 'int'
|   |   |                   `-IntegerLiteral 0x212ff774900 <line:63:27> 'int' 32
|   |   `-BinaryOperator 0x212ff774e90 <line:60:17, line:63:30> 'double' '*'
|   |     |-ParenExpr 0x212ff774bd0 <line:60:17, col:37> 'double'
|   |     | `-CStyleCastExpr 0x212ff774ba8 <col:18, col:36> 'double' <IntegralToFloating>
|   |     |   `-ParenExpr 0x212ff774b88 <col:26, col:36> 'unsigned long long'
|   |     |     `-BinaryOperator 0x212ff774b30 <col:27, col:35> 'unsigned long long' '<<'
|   |     |       |-IntegerLiteral 0x212ff774ac0 <col:27> 'unsigned long long' 1
|   |     |       `-ParenExpr 0x212ff774b10 <col:33, col:35> 'int'
|   |     |         `-IntegerLiteral 0x212ff774ae8 <line:370:42> 'int' 52
|   |     `-ParenExpr 0x212ff774e70 <line:63:16, col:30> 'double'
|   |       `-BinaryOperator 0x212ff774e50 <line:60:17, col:37> 'double' '*'
|   |         |-ParenExpr 0x212ff774d00 <col:17, col:37> 'double'
|   |         | `-CStyleCastExpr 0x212ff774cd8 <col:18, col:36> 'double' <IntegralToFloating>
|   |         |   `-ParenExpr 0x212ff774cb8 <col:26, col:36> 'unsigned long long'
|   |         |     `-BinaryOperator 0x212ff774c60 <col:27, col:35> 'unsigned long long' '<<'
|   |         |       |-IntegerLiteral 0x212ff774bf0 <col:27> 'unsigned long long' 1
|   |         |       `-ParenExpr 0x212ff774c40 <col:33, col:35> 'int'
|   |         |         `-IntegerLiteral 0x212ff774c18 <line:62:20> 'int' 32
|   |         `-ParenExpr 0x212ff774e30 <line:60:17, col:37> 'double'
|   |           `-CStyleCastExpr 0x212ff774e08 <col:18, col:36> 'double' <IntegralToFloating>
|   |             `-ParenExpr 0x212ff774de8 <col:26, col:36> 'unsigned long long'
|   |               `-BinaryOperator 0x212ff774d90 <col:27, col:35> 'unsigned long long' '<<'
|   |                 |-IntegerLiteral 0x212ff774d20 <col:27> 'unsigned long long' 1
|   |                 `-ParenExpr 0x212ff774d70 <col:33, col:35> 'int'
|   |                   `-IntegerLiteral 0x212ff774d48 <line:63:27> 'int' 32
|   |-BinaryOperator 0x212ff773a58 <line:371:5, line:64:30> 'double' '='
|   | |-DeclRefExpr 0x212ff774ef0 <line:371:5> 'double' lvalue Var 0x212ff766850 'c2lo' 'double'
|   | `-BinaryOperator 0x212ff773a38 <col:12, line:64:30> 'double' '-'
|   |   |-ParenExpr 0x212ff7734b8 <line:371:12, col:33> 'double'
|   |   | `-BinaryOperator 0x212ff773498 <col:13, line:64:30> 'double' '+'
|   |   |   |-ImplicitCastExpr 0x212ff773480 <line:371:13> 'double' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x212ff774f10 <col:13> 'double' lvalue Var 0x212ff7663f0 'h2lo' 'double'
|   |   |   `-BinaryOperator 0x212ff773460 <line:60:17, line:64:30> 'double' '*'
|   |   |     |-ParenExpr 0x212ff775040 <line:60:17, col:37> 'double'
|   |   |     | `-CStyleCastExpr 0x212ff775018 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     |   `-ParenExpr 0x212ff774ff8 <col:26, col:36> 'unsigned long long'
|   |   |     |     `-BinaryOperator 0x212ff774fa0 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     |       |-IntegerLiteral 0x212ff774f30 <col:27> 'unsigned long long' 1
|   |   |     |       `-ParenExpr 0x212ff774f80 <col:33, col:35> 'int'
|   |   |     |         `-IntegerLiteral 0x212ff774f58 <line:371:24> 'int' 52
|   |   |     `-ParenExpr 0x212ff773440 <line:64:16, col:30> 'double'
|   |   |       `-BinaryOperator 0x212ff773420 <line:63:16, line:60:37> 'double' '*'
|   |   |         |-ParenExpr 0x212ff7732d0 <line:63:16, col:30> 'double'
|   |   |         | `-BinaryOperator 0x212ff7732b0 <line:60:17, col:37> 'double' '*'
|   |   |         |   |-ParenExpr 0x212ff773160 <col:17, col:37> 'double'
|   |   |         |   | `-CStyleCastExpr 0x212ff773138 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         |   |   `-ParenExpr 0x212ff773118 <col:26, col:36> 'unsigned long long'
|   |   |         |   |     `-BinaryOperator 0x212ff7750d0 <col:27, col:35> 'unsigned long long' '<<'
|   |   |         |   |       |-IntegerLiteral 0x212ff775060 <col:27> 'unsigned long long' 1
|   |   |         |   |       `-ParenExpr 0x212ff7750b0 <col:33, col:35> 'int'
|   |   |         |   |         `-IntegerLiteral 0x212ff775088 <line:62:20> 'int' 32
|   |   |         |   `-ParenExpr 0x212ff773290 <line:60:17, col:37> 'double'
|   |   |         |     `-CStyleCastExpr 0x212ff773268 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         |       `-ParenExpr 0x212ff773248 <col:26, col:36> 'unsigned long long'
|   |   |         |         `-BinaryOperator 0x212ff7731f0 <col:27, col:35> 'unsigned long long' '<<'
|   |   |         |           |-IntegerLiteral 0x212ff773180 <col:27> 'unsigned long long' 1
|   |   |         |           `-ParenExpr 0x212ff7731d0 <col:33, col:35> 'int'
|   |   |         |             `-IntegerLiteral 0x212ff7731a8 <line:63:27> 'int' 32
|   |   |         `-ParenExpr 0x212ff773400 <line:60:17, col:37> 'double'
|   |   |           `-CStyleCastExpr 0x212ff7733d8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |             `-ParenExpr 0x212ff7733b8 <col:26, col:36> 'unsigned long long'
|   |   |               `-BinaryOperator 0x212ff773360 <col:27, col:35> 'unsigned long long' '<<'
|   |   |                 |-IntegerLiteral 0x212ff7732f0 <col:27> 'unsigned long long' 1
|   |   |                 `-ParenExpr 0x212ff773340 <col:33, col:35> 'int'
|   |   |                   `-IntegerLiteral 0x212ff773318 <line:64:27> 'int' 32
|   |   `-BinaryOperator 0x212ff773a18 <line:60:17, line:64:30> 'double' '*'
|   |     |-ParenExpr 0x212ff7735e8 <line:60:17, col:37> 'double'
|   |     | `-CStyleCastExpr 0x212ff7735c0 <col:18, col:36> 'double' <IntegralToFloating>
|   |     |   `-ParenExpr 0x212ff7735a0 <col:26, col:36> 'unsigned long long'
|   |     |     `-BinaryOperator 0x212ff773548 <col:27, col:35> 'unsigned long long' '<<'
|   |     |       |-IntegerLiteral 0x212ff7734d8 <col:27> 'unsigned long long' 1
|   |     |       `-ParenExpr 0x212ff773528 <col:33, col:35> 'int'
|   |     |         `-IntegerLiteral 0x212ff773500 <line:371:42> 'int' 52
|   |     `-ParenExpr 0x212ff7739f8 <line:64:16, col:30> 'double'
|   |       `-BinaryOperator 0x212ff7739d8 <line:63:16, line:60:37> 'double' '*'
|   |         |-ParenExpr 0x212ff773888 <line:63:16, col:30> 'double'
|   |         | `-BinaryOperator 0x212ff773868 <line:60:17, col:37> 'double' '*'
|   |         |   |-ParenExpr 0x212ff773718 <col:17, col:37> 'double'
|   |         |   | `-CStyleCastExpr 0x212ff7736f0 <col:18, col:36> 'double' <IntegralToFloating>
|   |         |   |   `-ParenExpr 0x212ff7736d0 <col:26, col:36> 'unsigned long long'
|   |         |   |     `-BinaryOperator 0x212ff773678 <col:27, col:35> 'unsigned long long' '<<'
|   |         |   |       |-IntegerLiteral 0x212ff773608 <col:27> 'unsigned long long' 1
|   |         |   |       `-ParenExpr 0x212ff773658 <col:33, col:35> 'int'
|   |         |   |         `-IntegerLiteral 0x212ff773630 <line:62:20> 'int' 32
|   |         |   `-ParenExpr 0x212ff773848 <line:60:17, col:37> 'double'
|   |         |     `-CStyleCastExpr 0x212ff773820 <col:18, col:36> 'double' <IntegralToFloating>
|   |         |       `-ParenExpr 0x212ff773800 <col:26, col:36> 'unsigned long long'
|   |         |         `-BinaryOperator 0x212ff7737a8 <col:27, col:35> 'unsigned long long' '<<'
|   |         |           |-IntegerLiteral 0x212ff773738 <col:27> 'unsigned long long' 1
|   |         |           `-ParenExpr 0x212ff773788 <col:33, col:35> 'int'
|   |         |             `-IntegerLiteral 0x212ff773760 <line:63:27> 'int' 32
|   |         `-ParenExpr 0x212ff7739b8 <line:60:17, col:37> 'double'
|   |           `-CStyleCastExpr 0x212ff773990 <col:18, col:36> 'double' <IntegralToFloating>
|   |             `-ParenExpr 0x212ff773970 <col:26, col:36> 'unsigned long long'
|   |               `-BinaryOperator 0x212ff773918 <col:27, col:35> 'unsigned long long' '<<'
|   |                 |-IntegerLiteral 0x212ff7738a8 <col:27> 'unsigned long long' 1
|   |                 `-ParenExpr 0x212ff7738f8 <col:33, col:35> 'int'
|   |                   `-IntegerLiteral 0x212ff7738d0 <line:64:27> 'int' 32
|   |-BinaryOperator 0x212ff7728e0 <line:372:5, line:65:31> 'double' '='
|   | |-DeclRefExpr 0x212ff773a78 <line:372:5> 'double' lvalue Var 0x212ff766950 'c3lo' 'double'
|   | `-BinaryOperator 0x212ff7728c0 <col:12, line:65:31> 'double' '-'
|   |   |-ParenExpr 0x212ff7721d0 <line:372:12, col:34> 'double'
|   |   | `-BinaryOperator 0x212ff7721b0 <col:13, line:65:31> 'double' '+'
|   |   |   |-ImplicitCastExpr 0x212ff772198 <line:372:13> 'double' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x212ff773a98 <col:13> 'double' lvalue Var 0x212ff7664f0 'h3lo' 'double'
|   |   |   `-BinaryOperator 0x212ff772178 <line:60:17, line:65:31> 'double' '*'
|   |   |     |-ParenExpr 0x212ff773bc8 <line:60:17, col:37> 'double'
|   |   |     | `-CStyleCastExpr 0x212ff773ba0 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     |   `-ParenExpr 0x212ff773b80 <col:26, col:36> 'unsigned long long'
|   |   |     |     `-BinaryOperator 0x212ff773b28 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     |       |-IntegerLiteral 0x212ff773ab8 <col:27> 'unsigned long long' 1
|   |   |     |       `-ParenExpr 0x212ff773b08 <col:33, col:35> 'int'
|   |   |     |         `-IntegerLiteral 0x212ff773ae0 <line:372:24> 'int' 52
|   |   |     `-ParenExpr 0x212ff772158 <line:65:17, col:31> 'double'
|   |   |       `-BinaryOperator 0x212ff772138 <line:64:16, line:60:37> 'double' '*'
|   |   |         |-ParenExpr 0x212ff773fd8 <line:64:16, col:30> 'double'
|   |   |         | `-BinaryOperator 0x212ff773fb8 <line:63:16, line:60:37> 'double' '*'
|   |   |         |   |-ParenExpr 0x212ff773e68 <line:63:16, col:30> 'double'
|   |   |         |   | `-BinaryOperator 0x212ff773e48 <line:60:17, col:37> 'double' '*'
|   |   |         |   |   |-ParenExpr 0x212ff773cf8 <col:17, col:37> 'double'
|   |   |         |   |   | `-CStyleCastExpr 0x212ff773cd0 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         |   |   |   `-ParenExpr 0x212ff773cb0 <col:26, col:36> 'unsigned long long'
|   |   |         |   |   |     `-BinaryOperator 0x212ff773c58 <col:27, col:35> 'unsigned long long' '<<'
|   |   |         |   |   |       |-IntegerLiteral 0x212ff773be8 <col:27> 'unsigned long long' 1
|   |   |         |   |   |       `-ParenExpr 0x212ff773c38 <col:33, col:35> 'int'
|   |   |         |   |   |         `-IntegerLiteral 0x212ff773c10 <line:62:20> 'int' 32
|   |   |         |   |   `-ParenExpr 0x212ff773e28 <line:60:17, col:37> 'double'
|   |   |         |   |     `-CStyleCastExpr 0x212ff773e00 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         |   |       `-ParenExpr 0x212ff773de0 <col:26, col:36> 'unsigned long long'
|   |   |         |   |         `-BinaryOperator 0x212ff773d88 <col:27, col:35> 'unsigned long long' '<<'
|   |   |         |   |           |-IntegerLiteral 0x212ff773d18 <col:27> 'unsigned long long' 1
|   |   |         |   |           `-ParenExpr 0x212ff773d68 <col:33, col:35> 'int'
|   |   |         |   |             `-IntegerLiteral 0x212ff773d40 <line:63:27> 'int' 32
|   |   |         |   `-ParenExpr 0x212ff773f98 <line:60:17, col:37> 'double'
|   |   |         |     `-CStyleCastExpr 0x212ff773f70 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         |       `-ParenExpr 0x212ff773f50 <col:26, col:36> 'unsigned long long'
|   |   |         |         `-BinaryOperator 0x212ff773ef8 <col:27, col:35> 'unsigned long long' '<<'
|   |   |         |           |-IntegerLiteral 0x212ff773e88 <col:27> 'unsigned long long' 1
|   |   |         |           `-ParenExpr 0x212ff773ed8 <col:33, col:35> 'int'
|   |   |         |             `-IntegerLiteral 0x212ff773eb0 <line:64:27> 'int' 32
|   |   |         `-ParenExpr 0x212ff772118 <line:60:17, col:37> 'double'
|   |   |           `-CStyleCastExpr 0x212ff7720f0 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |             `-ParenExpr 0x212ff7740c0 <col:26, col:36> 'unsigned long long'
|   |   |               `-BinaryOperator 0x212ff774068 <col:27, col:35> 'unsigned long long' '<<'
|   |   |                 |-IntegerLiteral 0x212ff773ff8 <col:27> 'unsigned long long' 1
|   |   |                 `-ParenExpr 0x212ff774048 <col:33, col:35> 'int'
|   |   |                   `-IntegerLiteral 0x212ff774020 <line:65:28> 'int' 34
|   |   `-BinaryOperator 0x212ff7728a0 <line:60:17, line:65:31> 'double' '*'
|   |     |-ParenExpr 0x212ff772300 <line:60:17, col:37> 'double'
|   |     | `-CStyleCastExpr 0x212ff7722d8 <col:18, col:36> 'double' <IntegralToFloating>
|   |     |   `-ParenExpr 0x212ff7722b8 <col:26, col:36> 'unsigned long long'
|   |     |     `-BinaryOperator 0x212ff772260 <col:27, col:35> 'unsigned long long' '<<'
|   |     |       |-IntegerLiteral 0x212ff7721f0 <col:27> 'unsigned long long' 1
|   |     |       `-ParenExpr 0x212ff772240 <col:33, col:35> 'int'
|   |     |         `-IntegerLiteral 0x212ff772218 <line:372:42> 'int' 52
|   |     `-ParenExpr 0x212ff772880 <line:65:17, col:31> 'double'
|   |       `-BinaryOperator 0x212ff772860 <line:64:16, line:60:37> 'double' '*'
|   |         |-ParenExpr 0x212ff772710 <line:64:16, col:30> 'double'
|   |         | `-BinaryOperator 0x212ff7726f0 <line:63:16, line:60:37> 'double' '*'
|   |         |   |-ParenExpr 0x212ff7725a0 <line:63:16, col:30> 'double'
|   |         |   | `-BinaryOperator 0x212ff772580 <line:60:17, col:37> 'double' '*'
|   |         |   |   |-ParenExpr 0x212ff772430 <col:17, col:37> 'double'
|   |         |   |   | `-CStyleCastExpr 0x212ff772408 <col:18, col:36> 'double' <IntegralToFloating>
|   |         |   |   |   `-ParenExpr 0x212ff7723e8 <col:26, col:36> 'unsigned long long'
|   |         |   |   |     `-BinaryOperator 0x212ff772390 <col:27, col:35> 'unsigned long long' '<<'
|   |         |   |   |       |-IntegerLiteral 0x212ff772320 <col:27> 'unsigned long long' 1
|   |         |   |   |       `-ParenExpr 0x212ff772370 <col:33, col:35> 'int'
|   |         |   |   |         `-IntegerLiteral 0x212ff772348 <line:62:20> 'int' 32
|   |         |   |   `-ParenExpr 0x212ff772560 <line:60:17, col:37> 'double'
|   |         |   |     `-CStyleCastExpr 0x212ff772538 <col:18, col:36> 'double' <IntegralToFloating>
|   |         |   |       `-ParenExpr 0x212ff772518 <col:26, col:36> 'unsigned long long'
|   |         |   |         `-BinaryOperator 0x212ff7724c0 <col:27, col:35> 'unsigned long long' '<<'
|   |         |   |           |-IntegerLiteral 0x212ff772450 <col:27> 'unsigned long long' 1
|   |         |   |           `-ParenExpr 0x212ff7724a0 <col:33, col:35> 'int'
|   |         |   |             `-IntegerLiteral 0x212ff772478 <line:63:27> 'int' 32
|   |         |   `-ParenExpr 0x212ff7726d0 <line:60:17, col:37> 'double'
|   |         |     `-CStyleCastExpr 0x212ff7726a8 <col:18, col:36> 'double' <IntegralToFloating>
|   |         |       `-ParenExpr 0x212ff772688 <col:26, col:36> 'unsigned long long'
|   |         |         `-BinaryOperator 0x212ff772630 <col:27, col:35> 'unsigned long long' '<<'
|   |         |           |-IntegerLiteral 0x212ff7725c0 <col:27> 'unsigned long long' 1
|   |         |           `-ParenExpr 0x212ff772610 <col:33, col:35> 'int'
|   |         |             `-IntegerLiteral 0x212ff7725e8 <line:64:27> 'int' 32
|   |         `-ParenExpr 0x212ff772840 <line:60:17, col:37> 'double'
|   |           `-CStyleCastExpr 0x212ff772818 <col:18, col:36> 'double' <IntegralToFloating>
|   |             `-ParenExpr 0x212ff7727f8 <col:26, col:36> 'unsigned long long'
|   |               `-BinaryOperator 0x212ff7727a0 <col:27, col:35> 'unsigned long long' '<<'
|   |                 |-IntegerLiteral 0x212ff772730 <col:27> 'unsigned long long' 1
|   |                 `-ParenExpr 0x212ff772780 <col:33, col:35> 'int'
|   |                   `-IntegerLiteral 0x212ff772758 <line:65:28> 'int' 34
|   |-BinaryOperator 0x212ff772eb8 <line:374:5, line:60:37> 'double' '='
|   | |-DeclRefExpr 0x212ff772900 <line:374:5> 'double' lvalue Var 0x212ff7666d0 'c0hi' 'double'
|   | `-BinaryOperator 0x212ff772e98 <col:12, line:60:37> 'double' '-'
|   |   |-ParenExpr 0x212ff772bf8 <line:374:12, col:33> 'double'
|   |   | `-BinaryOperator 0x212ff772bd8 <col:13, line:60:37> 'double' '+'
|   |   |   |-ImplicitCastExpr 0x212ff772bc0 <line:374:13> 'double' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x212ff772920 <col:13> 'double' lvalue Var 0x212ff766270 'h0hi' 'double'
|   |   |   `-BinaryOperator 0x212ff772ba0 <line:60:17, col:37> 'double' '*'
|   |   |     |-ParenExpr 0x212ff772a50 <col:17, col:37> 'double'
|   |   |     | `-CStyleCastExpr 0x212ff772a28 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     |   `-ParenExpr 0x212ff772a08 <col:26, col:36> 'unsigned long long'
|   |   |     |     `-BinaryOperator 0x212ff7729b0 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     |       |-IntegerLiteral 0x212ff772940 <col:27> 'unsigned long long' 1
|   |   |     |       `-ParenExpr 0x212ff772990 <col:33, col:35> 'int'
|   |   |     |         `-IntegerLiteral 0x212ff772968 <line:374:24> 'int' 52
|   |   |     `-ParenExpr 0x212ff772b80 <line:60:17, col:37> 'double'
|   |   |       `-CStyleCastExpr 0x212ff772b58 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         `-ParenExpr 0x212ff772b38 <col:26, col:36> 'unsigned long long'
|   |   |           `-BinaryOperator 0x212ff772ae0 <col:27, col:35> 'unsigned long long' '<<'
|   |   |             |-IntegerLiteral 0x212ff772a70 <col:27> 'unsigned long long' 1
|   |   |             `-ParenExpr 0x212ff772ac0 <col:33, col:35> 'int'
|   |   |               `-IntegerLiteral 0x212ff772a98 <line:62:20> 'int' 32
|   |   `-BinaryOperator 0x212ff772e78 <line:60:17, col:37> 'double' '*'
|   |     |-ParenExpr 0x212ff772d28 <col:17, col:37> 'double'
|   |     | `-CStyleCastExpr 0x212ff772d00 <col:18, col:36> 'double' <IntegralToFloating>
|   |     |   `-ParenExpr 0x212ff772ce0 <col:26, col:36> 'unsigned long long'
|   |     |     `-BinaryOperator 0x212ff772c88 <col:27, col:35> 'unsigned long long' '<<'
|   |     |       |-IntegerLiteral 0x212ff772c18 <col:27> 'unsigned long long' 1
|   |     |       `-ParenExpr 0x212ff772c68 <col:33, col:35> 'int'
|   |     |         `-IntegerLiteral 0x212ff772c40 <line:374:42> 'int' 52
|   |     `-ParenExpr 0x212ff772e58 <line:60:17, col:37> 'double'
|   |       `-CStyleCastExpr 0x212ff772e30 <col:18, col:36> 'double' <IntegralToFloating>
|   |         `-ParenExpr 0x212ff772e10 <col:26, col:36> 'unsigned long long'
|   |           `-BinaryOperator 0x212ff772db8 <col:27, col:35> 'unsigned long long' '<<'
|   |             |-IntegerLiteral 0x212ff772d48 <col:27> 'unsigned long long' 1
|   |             `-ParenExpr 0x212ff772d98 <col:33, col:35> 'int'
|   |               `-IntegerLiteral 0x212ff772d70 <line:62:20> 'int' 32
|   |-BinaryOperator 0x212ff77a808 <line:375:5, line:63:30> 'double' '='
|   | |-DeclRefExpr 0x212ff772ed8 <line:375:5> 'double' lvalue Var 0x212ff7667d0 'c1hi' 'double'
|   | `-BinaryOperator 0x212ff77a7e8 <col:12, line:63:30> 'double' '-'
|   |   |-ParenExpr 0x212ff77a3d8 <line:375:12, col:33> 'double'
|   |   | `-BinaryOperator 0x212ff77a3b8 <col:13, line:63:30> 'double' '+'
|   |   |   |-ImplicitCastExpr 0x212ff77a3a0 <line:375:13> 'double' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x212ff772ef8 <col:13> 'double' lvalue Var 0x212ff766370 'h1hi' 'double'
|   |   |   `-BinaryOperator 0x212ff77a380 <line:60:17, line:63:30> 'double' '*'
|   |   |     |-ParenExpr 0x212ff773028 <line:60:17, col:37> 'double'
|   |   |     | `-CStyleCastExpr 0x212ff773000 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     |   `-ParenExpr 0x212ff772fe0 <col:26, col:36> 'unsigned long long'
|   |   |     |     `-BinaryOperator 0x212ff772f88 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     |       |-IntegerLiteral 0x212ff772f18 <col:27> 'unsigned long long' 1
|   |   |     |       `-ParenExpr 0x212ff772f68 <col:33, col:35> 'int'
|   |   |     |         `-IntegerLiteral 0x212ff772f40 <line:375:24> 'int' 52
|   |   |     `-ParenExpr 0x212ff77a360 <line:63:16, col:30> 'double'
|   |   |       `-BinaryOperator 0x212ff77a340 <line:60:17, col:37> 'double' '*'
|   |   |         |-ParenExpr 0x212ff77a1f0 <col:17, col:37> 'double'
|   |   |         | `-CStyleCastExpr 0x212ff77a1c8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         |   `-ParenExpr 0x212ff77a1a8 <col:26, col:36> 'unsigned long long'
|   |   |         |     `-BinaryOperator 0x212ff7730b8 <col:27, col:35> 'unsigned long long' '<<'
|   |   |         |       |-IntegerLiteral 0x212ff773048 <col:27> 'unsigned long long' 1
|   |   |         |       `-ParenExpr 0x212ff773098 <col:33, col:35> 'int'
|   |   |         |         `-IntegerLiteral 0x212ff773070 <line:62:20> 'int' 32
|   |   |         `-ParenExpr 0x212ff77a320 <line:60:17, col:37> 'double'
|   |   |           `-CStyleCastExpr 0x212ff77a2f8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |             `-ParenExpr 0x212ff77a2d8 <col:26, col:36> 'unsigned long long'
|   |   |               `-BinaryOperator 0x212ff77a280 <col:27, col:35> 'unsigned long long' '<<'
|   |   |                 |-IntegerLiteral 0x212ff77a210 <col:27> 'unsigned long long' 1
|   |   |                 `-ParenExpr 0x212ff77a260 <col:33, col:35> 'int'
|   |   |                   `-IntegerLiteral 0x212ff77a238 <line:63:27> 'int' 32
|   |   `-BinaryOperator 0x212ff77a7c8 <line:60:17, line:63:30> 'double' '*'
|   |     |-ParenExpr 0x212ff77a508 <line:60:17, col:37> 'double'
|   |     | `-CStyleCastExpr 0x212ff77a4e0 <col:18, col:36> 'double' <IntegralToFloating>
|   |     |   `-ParenExpr 0x212ff77a4c0 <col:26, col:36> 'unsigned long long'
|   |     |     `-BinaryOperator 0x212ff77a468 <col:27, col:35> 'unsigned long long' '<<'
|   |     |       |-IntegerLiteral 0x212ff77a3f8 <col:27> 'unsigned long long' 1
|   |     |       `-ParenExpr 0x212ff77a448 <col:33, col:35> 'int'
|   |     |         `-IntegerLiteral 0x212ff77a420 <line:375:42> 'int' 52
|   |     `-ParenExpr 0x212ff77a7a8 <line:63:16, col:30> 'double'
|   |       `-BinaryOperator 0x212ff77a788 <line:60:17, col:37> 'double' '*'
|   |         |-ParenExpr 0x212ff77a638 <col:17, col:37> 'double'
|   |         | `-CStyleCastExpr 0x212ff77a610 <col:18, col:36> 'double' <IntegralToFloating>
|   |         |   `-ParenExpr 0x212ff77a5f0 <col:26, col:36> 'unsigned long long'
|   |         |     `-BinaryOperator 0x212ff77a598 <col:27, col:35> 'unsigned long long' '<<'
|   |         |       |-IntegerLiteral 0x212ff77a528 <col:27> 'unsigned long long' 1
|   |         |       `-ParenExpr 0x212ff77a578 <col:33, col:35> 'int'
|   |         |         `-IntegerLiteral 0x212ff77a550 <line:62:20> 'int' 32
|   |         `-ParenExpr 0x212ff77a768 <line:60:17, col:37> 'double'
|   |           `-CStyleCastExpr 0x212ff77a740 <col:18, col:36> 'double' <IntegralToFloating>
|   |             `-ParenExpr 0x212ff77a720 <col:26, col:36> 'unsigned long long'
|   |               `-BinaryOperator 0x212ff77a6c8 <col:27, col:35> 'unsigned long long' '<<'
|   |                 |-IntegerLiteral 0x212ff77a658 <col:27> 'unsigned long long' 1
|   |                 `-ParenExpr 0x212ff77a6a8 <col:33, col:35> 'int'
|   |                   `-IntegerLiteral 0x212ff77a680 <line:63:27> 'int' 32
|   |-BinaryOperator 0x212ff77b3b8 <line:376:5, line:64:30> 'double' '='
|   | |-DeclRefExpr 0x212ff77a828 <line:376:5> 'double' lvalue Var 0x212ff7668d0 'c2hi' 'double'
|   | `-BinaryOperator 0x212ff77b398 <col:12, line:64:30> 'double' '-'
|   |   |-ParenExpr 0x212ff77ae00 <line:376:12, col:33> 'double'
|   |   | `-BinaryOperator 0x212ff77ade0 <col:13, line:64:30> 'double' '+'
|   |   |   |-ImplicitCastExpr 0x212ff77adc8 <line:376:13> 'double' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x212ff77a848 <col:13> 'double' lvalue Var 0x212ff766470 'h2hi' 'double'
|   |   |   `-BinaryOperator 0x212ff77ada8 <line:60:17, line:64:30> 'double' '*'
|   |   |     |-ParenExpr 0x212ff77a978 <line:60:17, col:37> 'double'
|   |   |     | `-CStyleCastExpr 0x212ff77a950 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     |   `-ParenExpr 0x212ff77a930 <col:26, col:36> 'unsigned long long'
|   |   |     |     `-BinaryOperator 0x212ff77a8d8 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     |       |-IntegerLiteral 0x212ff77a868 <col:27> 'unsigned long long' 1
|   |   |     |       `-ParenExpr 0x212ff77a8b8 <col:33, col:35> 'int'
|   |   |     |         `-IntegerLiteral 0x212ff77a890 <line:376:24> 'int' 52
|   |   |     `-ParenExpr 0x212ff77ad88 <line:64:16, col:30> 'double'
|   |   |       `-BinaryOperator 0x212ff77ad68 <line:63:16, line:60:37> 'double' '*'
|   |   |         |-ParenExpr 0x212ff77ac18 <line:63:16, col:30> 'double'
|   |   |         | `-BinaryOperator 0x212ff77abf8 <line:60:17, col:37> 'double' '*'
|   |   |         |   |-ParenExpr 0x212ff77aaa8 <col:17, col:37> 'double'
|   |   |         |   | `-CStyleCastExpr 0x212ff77aa80 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         |   |   `-ParenExpr 0x212ff77aa60 <col:26, col:36> 'unsigned long long'
|   |   |         |   |     `-BinaryOperator 0x212ff77aa08 <col:27, col:35> 'unsigned long long' '<<'
|   |   |         |   |       |-IntegerLiteral 0x212ff77a998 <col:27> 'unsigned long long' 1
|   |   |         |   |       `-ParenExpr 0x212ff77a9e8 <col:33, col:35> 'int'
|   |   |         |   |         `-IntegerLiteral 0x212ff77a9c0 <line:62:20> 'int' 32
|   |   |         |   `-ParenExpr 0x212ff77abd8 <line:60:17, col:37> 'double'
|   |   |         |     `-CStyleCastExpr 0x212ff77abb0 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         |       `-ParenExpr 0x212ff77ab90 <col:26, col:36> 'unsigned long long'
|   |   |         |         `-BinaryOperator 0x212ff77ab38 <col:27, col:35> 'unsigned long long' '<<'
|   |   |         |           |-IntegerLiteral 0x212ff77aac8 <col:27> 'unsigned long long' 1
|   |   |         |           `-ParenExpr 0x212ff77ab18 <col:33, col:35> 'int'
|   |   |         |             `-IntegerLiteral 0x212ff77aaf0 <line:63:27> 'int' 32
|   |   |         `-ParenExpr 0x212ff77ad48 <line:60:17, col:37> 'double'
|   |   |           `-CStyleCastExpr 0x212ff77ad20 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |             `-ParenExpr 0x212ff77ad00 <col:26, col:36> 'unsigned long long'
|   |   |               `-BinaryOperator 0x212ff77aca8 <col:27, col:35> 'unsigned long long' '<<'
|   |   |                 |-IntegerLiteral 0x212ff77ac38 <col:27> 'unsigned long long' 1
|   |   |                 `-ParenExpr 0x212ff77ac88 <col:33, col:35> 'int'
|   |   |                   `-IntegerLiteral 0x212ff77ac60 <line:64:27> 'int' 32
|   |   `-BinaryOperator 0x212ff77b378 <line:60:17, line:64:30> 'double' '*'
|   |     |-ParenExpr 0x212ff77af30 <line:60:17, col:37> 'double'
|   |     | `-CStyleCastExpr 0x212ff77af08 <col:18, col:36> 'double' <IntegralToFloating>
|   |     |   `-ParenExpr 0x212ff77aee8 <col:26, col:36> 'unsigned long long'
|   |     |     `-BinaryOperator 0x212ff77ae90 <col:27, col:35> 'unsigned long long' '<<'
|   |     |       |-IntegerLiteral 0x212ff77ae20 <col:27> 'unsigned long long' 1
|   |     |       `-ParenExpr 0x212ff77ae70 <col:33, col:35> 'int'
|   |     |         `-IntegerLiteral 0x212ff77ae48 <line:376:42> 'int' 52
|   |     `-ParenExpr 0x212ff77b358 <line:64:16, col:30> 'double'
|   |       `-BinaryOperator 0x212ff77b338 <line:63:16, line:60:37> 'double' '*'
|   |         |-ParenExpr 0x212ff77b1e8 <line:63:16, col:30> 'double'
|   |         | `-BinaryOperator 0x212ff77b1c8 <line:60:17, col:37> 'double' '*'
|   |         |   |-ParenExpr 0x212ff77b060 <col:17, col:37> 'double'
|   |         |   | `-CStyleCastExpr 0x212ff77b038 <col:18, col:36> 'double' <IntegralToFloating>
|   |         |   |   `-ParenExpr 0x212ff77b018 <col:26, col:36> 'unsigned long long'
|   |         |   |     `-BinaryOperator 0x212ff77afc0 <col:27, col:35> 'unsigned long long' '<<'
|   |         |   |       |-IntegerLiteral 0x212ff77af50 <col:27> 'unsigned long long' 1
|   |         |   |       `-ParenExpr 0x212ff77afa0 <col:33, col:35> 'int'
|   |         |   |         `-IntegerLiteral 0x212ff77af78 <line:62:20> 'int' 32
|   |         |   `-ParenExpr 0x212ff77b1a8 <line:60:17, col:37> 'double'
|   |         |     `-CStyleCastExpr 0x212ff77b180 <col:18, col:36> 'double' <IntegralToFloating>
|   |         |       `-ParenExpr 0x212ff77b148 <col:26, col:36> 'unsigned long long'
|   |         |         `-BinaryOperator 0x212ff77b0f0 <col:27, col:35> 'unsigned long long' '<<'
|   |         |           |-IntegerLiteral 0x212ff77b080 <col:27> 'unsigned long long' 1
|   |         |           `-ParenExpr 0x212ff77b0d0 <col:33, col:35> 'int'
|   |         |             `-IntegerLiteral 0x212ff77b0a8 <line:63:27> 'int' 32
|   |         `-ParenExpr 0x212ff77b318 <line:60:17, col:37> 'double'
|   |           `-CStyleCastExpr 0x212ff77b2f0 <col:18, col:36> 'double' <IntegralToFloating>
|   |             `-ParenExpr 0x212ff77b2d0 <col:26, col:36> 'unsigned long long'
|   |               `-BinaryOperator 0x212ff77b278 <col:27, col:35> 'unsigned long long' '<<'
|   |                 |-IntegerLiteral 0x212ff77b208 <col:27> 'unsigned long long' 1
|   |                 `-ParenExpr 0x212ff77b258 <col:33, col:35> 'int'
|   |                   `-IntegerLiteral 0x212ff77b230 <line:64:27> 'int' 32
|   |-BinaryOperator 0x212ff778218 <line:377:5, line:65:31> 'double' '='
|   | |-DeclRefExpr 0x212ff77b3d8 <line:377:5> 'double' lvalue Var 0x212ff7669d0 'c3hi' 'double'
|   | `-BinaryOperator 0x212ff7781f8 <col:12, line:65:31> 'double' '-'
|   |   |-ParenExpr 0x212ff77bb20 <line:377:12, col:34> 'double'
|   |   | `-BinaryOperator 0x212ff77bb00 <col:13, line:65:31> 'double' '+'
|   |   |   |-ImplicitCastExpr 0x212ff77bae8 <line:377:13> 'double' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x212ff77b3f8 <col:13> 'double' lvalue Var 0x212ff766570 'h3hi' 'double'
|   |   |   `-BinaryOperator 0x212ff77bac8 <line:60:17, line:65:31> 'double' '*'
|   |   |     |-ParenExpr 0x212ff77b528 <line:60:17, col:37> 'double'
|   |   |     | `-CStyleCastExpr 0x212ff77b500 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     |   `-ParenExpr 0x212ff77b4e0 <col:26, col:36> 'unsigned long long'
|   |   |     |     `-BinaryOperator 0x212ff77b488 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     |       |-IntegerLiteral 0x212ff77b418 <col:27> 'unsigned long long' 1
|   |   |     |       `-ParenExpr 0x212ff77b468 <col:33, col:35> 'int'
|   |   |     |         `-IntegerLiteral 0x212ff77b440 <line:377:24> 'int' 52
|   |   |     `-ParenExpr 0x212ff77baa8 <line:65:17, col:31> 'double'
|   |   |       `-BinaryOperator 0x212ff77ba88 <line:64:16, line:60:37> 'double' '*'
|   |   |         |-ParenExpr 0x212ff77b938 <line:64:16, col:30> 'double'
|   |   |         | `-BinaryOperator 0x212ff77b918 <line:63:16, line:60:37> 'double' '*'
|   |   |         |   |-ParenExpr 0x212ff77b7c8 <line:63:16, col:30> 'double'
|   |   |         |   | `-BinaryOperator 0x212ff77b7a8 <line:60:17, col:37> 'double' '*'
|   |   |         |   |   |-ParenExpr 0x212ff77b658 <col:17, col:37> 'double'
|   |   |         |   |   | `-CStyleCastExpr 0x212ff77b630 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         |   |   |   `-ParenExpr 0x212ff77b610 <col:26, col:36> 'unsigned long long'
|   |   |         |   |   |     `-BinaryOperator 0x212ff77b5b8 <col:27, col:35> 'unsigned long long' '<<'
|   |   |         |   |   |       |-IntegerLiteral 0x212ff77b548 <col:27> 'unsigned long long' 1
|   |   |         |   |   |       `-ParenExpr 0x212ff77b598 <col:33, col:35> 'int'
|   |   |         |   |   |         `-IntegerLiteral 0x212ff77b570 <line:62:20> 'int' 32
|   |   |         |   |   `-ParenExpr 0x212ff77b788 <line:60:17, col:37> 'double'
|   |   |         |   |     `-CStyleCastExpr 0x212ff77b760 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         |   |       `-ParenExpr 0x212ff77b740 <col:26, col:36> 'unsigned long long'
|   |   |         |   |         `-BinaryOperator 0x212ff77b6e8 <col:27, col:35> 'unsigned long long' '<<'
|   |   |         |   |           |-IntegerLiteral 0x212ff77b678 <col:27> 'unsigned long long' 1
|   |   |         |   |           `-ParenExpr 0x212ff77b6c8 <col:33, col:35> 'int'
|   |   |         |   |             `-IntegerLiteral 0x212ff77b6a0 <line:63:27> 'int' 32
|   |   |         |   `-ParenExpr 0x212ff77b8f8 <line:60:17, col:37> 'double'
|   |   |         |     `-CStyleCastExpr 0x212ff77b8d0 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         |       `-ParenExpr 0x212ff77b8b0 <col:26, col:36> 'unsigned long long'
|   |   |         |         `-BinaryOperator 0x212ff77b858 <col:27, col:35> 'unsigned long long' '<<'
|   |   |         |           |-IntegerLiteral 0x212ff77b7e8 <col:27> 'unsigned long long' 1
|   |   |         |           `-ParenExpr 0x212ff77b838 <col:33, col:35> 'int'
|   |   |         |             `-IntegerLiteral 0x212ff77b810 <line:64:27> 'int' 32
|   |   |         `-ParenExpr 0x212ff77ba68 <line:60:17, col:37> 'double'
|   |   |           `-CStyleCastExpr 0x212ff77ba40 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |             `-ParenExpr 0x212ff77ba20 <col:26, col:36> 'unsigned long long'
|   |   |               `-BinaryOperator 0x212ff77b9c8 <col:27, col:35> 'unsigned long long' '<<'
|   |   |                 |-IntegerLiteral 0x212ff77b958 <col:27> 'unsigned long long' 1
|   |   |                 `-ParenExpr 0x212ff77b9a8 <col:33, col:35> 'int'
|   |   |                   `-IntegerLiteral 0x212ff77b980 <line:65:28> 'int' 34
|   |   `-BinaryOperator 0x212ff7781d8 <line:60:17, line:65:31> 'double' '*'
|   |     |-ParenExpr 0x212ff77bc50 <line:60:17, col:37> 'double'
|   |     | `-CStyleCastExpr 0x212ff77bc28 <col:18, col:36> 'double' <IntegralToFloating>
|   |     |   `-ParenExpr 0x212ff77bc08 <col:26, col:36> 'unsigned long long'
|   |     |     `-BinaryOperator 0x212ff77bbb0 <col:27, col:35> 'unsigned long long' '<<'
|   |     |       |-IntegerLiteral 0x212ff77bb40 <col:27> 'unsigned long long' 1
|   |     |       `-ParenExpr 0x212ff77bb90 <col:33, col:35> 'int'
|   |     |         `-IntegerLiteral 0x212ff77bb68 <line:377:42> 'int' 52
|   |     `-ParenExpr 0x212ff7781b8 <line:65:17, col:31> 'double'
|   |       `-BinaryOperator 0x212ff778198 <line:64:16, line:60:37> 'double' '*'
|   |         |-ParenExpr 0x212ff77c060 <line:64:16, col:30> 'double'
|   |         | `-BinaryOperator 0x212ff77c040 <line:63:16, line:60:37> 'double' '*'
|   |         |   |-ParenExpr 0x212ff77bef0 <line:63:16, col:30> 'double'
|   |         |   | `-BinaryOperator 0x212ff77bed0 <line:60:17, col:37> 'double' '*'
|   |         |   |   |-ParenExpr 0x212ff77bd80 <col:17, col:37> 'double'
|   |         |   |   | `-CStyleCastExpr 0x212ff77bd58 <col:18, col:36> 'double' <IntegralToFloating>
|   |         |   |   |   `-ParenExpr 0x212ff77bd38 <col:26, col:36> 'unsigned long long'
|   |         |   |   |     `-BinaryOperator 0x212ff77bce0 <col:27, col:35> 'unsigned long long' '<<'
|   |         |   |   |       |-IntegerLiteral 0x212ff77bc70 <col:27> 'unsigned long long' 1
|   |         |   |   |       `-ParenExpr 0x212ff77bcc0 <col:33, col:35> 'int'
|   |         |   |   |         `-IntegerLiteral 0x212ff77bc98 <line:62:20> 'int' 32
|   |         |   |   `-ParenExpr 0x212ff77beb0 <line:60:17, col:37> 'double'
|   |         |   |     `-CStyleCastExpr 0x212ff77be88 <col:18, col:36> 'double' <IntegralToFloating>
|   |         |   |       `-ParenExpr 0x212ff77be68 <col:26, col:36> 'unsigned long long'
|   |         |   |         `-BinaryOperator 0x212ff77be10 <col:27, col:35> 'unsigned long long' '<<'
|   |         |   |           |-IntegerLiteral 0x212ff77bda0 <col:27> 'unsigned long long' 1
|   |         |   |           `-ParenExpr 0x212ff77bdf0 <col:33, col:35> 'int'
|   |         |   |             `-IntegerLiteral 0x212ff77bdc8 <line:63:27> 'int' 32
|   |         |   `-ParenExpr 0x212ff77c020 <line:60:17, col:37> 'double'
|   |         |     `-CStyleCastExpr 0x212ff77bff8 <col:18, col:36> 'double' <IntegralToFloating>
|   |         |       `-ParenExpr 0x212ff77bfd8 <col:26, col:36> 'unsigned long long'
|   |         |         `-BinaryOperator 0x212ff77bf80 <col:27, col:35> 'unsigned long long' '<<'
|   |         |           |-IntegerLiteral 0x212ff77bf10 <col:27> 'unsigned long long' 1
|   |         |           `-ParenExpr 0x212ff77bf60 <col:33, col:35> 'int'
|   |         |             `-IntegerLiteral 0x212ff77bf38 <line:64:27> 'int' 32
|   |         `-ParenExpr 0x212ff778178 <line:60:17, col:37> 'double'
|   |           `-CStyleCastExpr 0x212ff778150 <col:18, col:36> 'double' <IntegralToFloating>
|   |             `-ParenExpr 0x212ff77c148 <col:26, col:36> 'unsigned long long'
|   |               `-BinaryOperator 0x212ff77c0f0 <col:27, col:35> 'unsigned long long' '<<'
|   |                 |-IntegerLiteral 0x212ff77c080 <col:27> 'unsigned long long' 1
|   |                 `-ParenExpr 0x212ff77c0d0 <col:33, col:35> 'int'
|   |                   `-IntegerLiteral 0x212ff77c0a8 <line:65:28> 'int' 34
|   |-BinaryOperator 0x212ff778360 <line:382:5, col:27> 'double' '='
|   | |-DeclRefExpr 0x212ff778238 <col:5> 'double' lvalue Var 0x212ff766030 'x1' 'double'
|   | `-BinaryOperator 0x212ff778340 <col:11, col:27> 'double' '+'
|   |   |-ParenExpr 0x212ff7782e8 <col:11, col:23> 'double'
|   |   | `-BinaryOperator 0x212ff7782c8 <col:12, col:19> 'double' '-'
|   |   |   |-ImplicitCastExpr 0x212ff778298 <col:12> 'double' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x212ff778258 <col:12> 'double' lvalue Var 0x212ff7662f0 'h1lo' 'double'
|   |   |   `-ImplicitCastExpr 0x212ff7782b0 <col:19> 'double' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x212ff778278 <col:19> 'double' lvalue Var 0x212ff766750 'c1lo' 'double'
|   |   `-ImplicitCastExpr 0x212ff778328 <col:27> 'double' <LValueToRValue>
|   |     `-DeclRefExpr 0x212ff778308 <col:27> 'double' lvalue Var 0x212ff766650 'c0lo' 'double'
|   |-BinaryOperator 0x212ff7784a8 <line:383:5, col:27> 'double' '='
|   | |-DeclRefExpr 0x212ff778380 <col:5> 'double' lvalue Var 0x212ff7660b0 'x2' 'double'
|   | `-BinaryOperator 0x212ff778488 <col:11, col:27> 'double' '+'
|   |   |-ParenExpr 0x212ff778430 <col:11, col:23> 'double'
|   |   | `-BinaryOperator 0x212ff778410 <col:12, col:19> 'double' '-'
|   |   |   |-ImplicitCastExpr 0x212ff7783e0 <col:12> 'double' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x212ff7783a0 <col:12> 'double' lvalue Var 0x212ff7663f0 'h2lo' 'double'
|   |   |   `-ImplicitCastExpr 0x212ff7783f8 <col:19> 'double' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x212ff7783c0 <col:19> 'double' lvalue Var 0x212ff766850 'c2lo' 'double'
|   |   `-ImplicitCastExpr 0x212ff778470 <col:27> 'double' <LValueToRValue>
|   |     `-DeclRefExpr 0x212ff778450 <col:27> 'double' lvalue Var 0x212ff766750 'c1lo' 'double'
|   |-BinaryOperator 0x212ff7785f0 <line:384:5, col:27> 'double' '='
|   | |-DeclRefExpr 0x212ff7784c8 <col:5> 'double' lvalue Var 0x212ff766130 'x3' 'double'
|   | `-BinaryOperator 0x212ff7785d0 <col:11, col:27> 'double' '+'
|   |   |-ParenExpr 0x212ff778578 <col:11, col:23> 'double'
|   |   | `-BinaryOperator 0x212ff778558 <col:12, col:19> 'double' '-'
|   |   |   |-ImplicitCastExpr 0x212ff778528 <col:12> 'double' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x212ff7784e8 <col:12> 'double' lvalue Var 0x212ff7664f0 'h3lo' 'double'
|   |   |   `-ImplicitCastExpr 0x212ff778540 <col:19> 'double' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x212ff778508 <col:19> 'double' lvalue Var 0x212ff766950 'c3lo' 'double'
|   |   `-ImplicitCastExpr 0x212ff7785b8 <col:27> 'double' <LValueToRValue>
|   |     `-DeclRefExpr 0x212ff778598 <col:27> 'double' lvalue Var 0x212ff766850 'c2lo' 'double'
|   |-BinaryOperator 0x212ff778d40 <line:385:5, col:45> 'double' '='
|   | |-DeclRefExpr 0x212ff778610 <col:5> 'double' lvalue Var 0x212ff765f50 'x0' 'double'
|   | `-BinaryOperator 0x212ff778d20 <col:11, col:45> 'double' '+'
|   |   |-ParenExpr 0x212ff7786c0 <col:11, col:23> 'double'
|   |   | `-BinaryOperator 0x212ff7786a0 <col:12, col:19> 'double' '-'
|   |   |   |-ImplicitCastExpr 0x212ff778670 <col:12> 'double' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x212ff778630 <col:12> 'double' lvalue Var 0x212ff7661f0 'h0lo' 'double'
|   |   |   `-ImplicitCastExpr 0x212ff778688 <col:19> 'double' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x212ff778650 <col:19> 'double' lvalue Var 0x212ff766650 'c0lo' 'double'
|   |   `-BinaryOperator 0x212ff778d00 <col:27, col:45> 'double' '*'
|   |     |-ImplicitCastExpr 0x212ff778ce8 <col:27> 'double' <LValueToRValue>
|   |     | `-DeclRefExpr 0x212ff7786e0 <col:27> 'double' lvalue Var 0x212ff766950 'c3lo' 'double'
|   |     `-ParenExpr 0x212ff778cc8 <col:34, col:45> 'double'
|   |       `-BinaryOperator 0x212ff778ca8 <col:35, line:65:31> 'double' '/'
|   |         |-FloatingLiteral 0x212ff778700 <line:385:35> 'double' 5.000000e+00
|   |         `-ParenExpr 0x212ff778c88 <line:65:17, col:31> 'double'
|   |           `-BinaryOperator 0x212ff778c68 <line:64:16, line:60:37> 'double' '*'
|   |             |-ParenExpr 0x212ff778b18 <line:64:16, col:30> 'double'
|   |             | `-BinaryOperator 0x212ff778af8 <line:63:16, line:60:37> 'double' '*'
|   |             |   |-ParenExpr 0x212ff7789a8 <line:63:16, col:30> 'double'
|   |             |   | `-BinaryOperator 0x212ff778988 <line:60:17, col:37> 'double' '*'
|   |             |   |   |-ParenExpr 0x212ff778838 <col:17, col:37> 'double'
|   |             |   |   | `-CStyleCastExpr 0x212ff778810 <col:18, col:36> 'double' <IntegralToFloating>
|   |             |   |   |   `-ParenExpr 0x212ff7787f0 <col:26, col:36> 'unsigned long long'
|   |             |   |   |     `-BinaryOperator 0x212ff778798 <col:27, col:35> 'unsigned long long' '<<'
|   |             |   |   |       |-IntegerLiteral 0x212ff778728 <col:27> 'unsigned long long' 1
|   |             |   |   |       `-ParenExpr 0x212ff778778 <col:33, col:35> 'int'
|   |             |   |   |         `-IntegerLiteral 0x212ff778750 <line:62:20> 'int' 32
|   |             |   |   `-ParenExpr 0x212ff778968 <line:60:17, col:37> 'double'
|   |             |   |     `-CStyleCastExpr 0x212ff778940 <col:18, col:36> 'double' <IntegralToFloating>
|   |             |   |       `-ParenExpr 0x212ff778920 <col:26, col:36> 'unsigned long long'
|   |             |   |         `-BinaryOperator 0x212ff7788c8 <col:27, col:35> 'unsigned long long' '<<'
|   |             |   |           |-IntegerLiteral 0x212ff778858 <col:27> 'unsigned long long' 1
|   |             |   |           `-ParenExpr 0x212ff7788a8 <col:33, col:35> 'int'
|   |             |   |             `-IntegerLiteral 0x212ff778880 <line:63:27> 'int' 32
|   |             |   `-ParenExpr 0x212ff778ad8 <line:60:17, col:37> 'double'
|   |             |     `-CStyleCastExpr 0x212ff778ab0 <col:18, col:36> 'double' <IntegralToFloating>
|   |             |       `-ParenExpr 0x212ff778a90 <col:26, col:36> 'unsigned long long'
|   |             |         `-BinaryOperator 0x212ff778a38 <col:27, col:35> 'unsigned long long' '<<'
|   |             |           |-IntegerLiteral 0x212ff7789c8 <col:27> 'unsigned long long' 1
|   |             |           `-ParenExpr 0x212ff778a18 <col:33, col:35> 'int'
|   |             |             `-IntegerLiteral 0x212ff7789f0 <line:64:27> 'int' 32
|   |             `-ParenExpr 0x212ff778c48 <line:60:17, col:37> 'double'
|   |               `-CStyleCastExpr 0x212ff778c20 <col:18, col:36> 'double' <IntegralToFloating>
|   |                 `-ParenExpr 0x212ff778c00 <col:26, col:36> 'unsigned long long'
|   |                   `-BinaryOperator 0x212ff778ba8 <col:27, col:35> 'unsigned long long' '<<'
|   |                     |-IntegerLiteral 0x212ff778b38 <col:27> 'unsigned long long' 1
|   |                     `-ParenExpr 0x212ff778b88 <col:33, col:35> 'int'
|   |                       `-IntegerLiteral 0x212ff778b60 <line:65:28> 'int' 34
|   |-CompoundAssignOperator 0x212ff778e88 <line:387:5, col:27> 'double' '+=' ComputeLHSTy='double' ComputeResultTy='double'
|   | |-DeclRefExpr 0x212ff778d60 <col:5> 'double' lvalue Var 0x212ff766030 'x1' 'double'
|   | `-BinaryOperator 0x212ff778e68 <col:11, col:27> 'double' '+'
|   |   |-ParenExpr 0x212ff778e10 <col:11, col:23> 'double'
|   |   | `-BinaryOperator 0x212ff778df0 <col:12, col:19> 'double' '-'
|   |   |   |-ImplicitCastExpr 0x212ff778dc0 <col:12> 'double' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x212ff778d80 <col:12> 'double' lvalue Var 0x212ff766370 'h1hi' 'double'
|   |   |   `-ImplicitCastExpr 0x212ff778dd8 <col:19> 'double' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x212ff778da0 <col:19> 'double' lvalue Var 0x212ff7667d0 'c1hi' 'double'
|   |   `-ImplicitCastExpr 0x212ff778e50 <col:27> 'double' <LValueToRValue>
|   |     `-DeclRefExpr 0x212ff778e30 <col:27> 'double' lvalue Var 0x212ff7666d0 'c0hi' 'double'
|   |-CompoundAssignOperator 0x212ff778fe0 <line:388:5, col:27> 'double' '+=' ComputeLHSTy='double' ComputeResultTy='double'
|   | |-DeclRefExpr 0x212ff778eb8 <col:5> 'double' lvalue Var 0x212ff7660b0 'x2' 'double'
|   | `-BinaryOperator 0x212ff778fc0 <col:11, col:27> 'double' '+'
|   |   |-ParenExpr 0x212ff778f68 <col:11, col:23> 'double'
|   |   | `-BinaryOperator 0x212ff778f48 <col:12, col:19> 'double' '-'
|   |   |   |-ImplicitCastExpr 0x212ff778f18 <col:12> 'double' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x212ff778ed8 <col:12> 'double' lvalue Var 0x212ff766470 'h2hi' 'double'
|   |   |   `-ImplicitCastExpr 0x212ff778f30 <col:19> 'double' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x212ff778ef8 <col:19> 'double' lvalue Var 0x212ff7668d0 'c2hi' 'double'
|   |   `-ImplicitCastExpr 0x212ff778fa8 <col:27> 'double' <LValueToRValue>
|   |     `-DeclRefExpr 0x212ff778f88 <col:27> 'double' lvalue Var 0x212ff7667d0 'c1hi' 'double'
|   |-CompoundAssignOperator 0x212ff775120 <line:389:5, col:27> 'double' '+=' ComputeLHSTy='double' ComputeResultTy='double'
|   | |-DeclRefExpr 0x212ff779010 <col:5> 'double' lvalue Var 0x212ff766130 'x3' 'double'
|   | `-BinaryOperator 0x212ff779118 <col:11, col:27> 'double' '+'
|   |   |-ParenExpr 0x212ff7790c0 <col:11, col:23> 'double'
|   |   | `-BinaryOperator 0x212ff7790a0 <col:12, col:19> 'double' '-'
|   |   |   |-ImplicitCastExpr 0x212ff779070 <col:12> 'double' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x212ff779030 <col:12> 'double' lvalue Var 0x212ff766570 'h3hi' 'double'
|   |   |   `-ImplicitCastExpr 0x212ff779088 <col:19> 'double' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x212ff779050 <col:19> 'double' lvalue Var 0x212ff7669d0 'c3hi' 'double'
|   |   `-ImplicitCastExpr 0x212ff779100 <col:27> 'double' <LValueToRValue>
|   |     `-DeclRefExpr 0x212ff7790e0 <col:27> 'double' lvalue Var 0x212ff7668d0 'c2hi' 'double'
|   |-CompoundAssignOperator 0x212ff775880 <line:390:5, col:45> 'double' '+=' ComputeLHSTy='double' ComputeResultTy='double'
|   | |-DeclRefExpr 0x212ff775150 <col:5> 'double' lvalue Var 0x212ff765f50 'x0' 'double'
|   | `-BinaryOperator 0x212ff775860 <col:11, col:45> 'double' '+'
|   |   |-ParenExpr 0x212ff775200 <col:11, col:23> 'double'
|   |   | `-BinaryOperator 0x212ff7751e0 <col:12, col:19> 'double' '-'
|   |   |   |-ImplicitCastExpr 0x212ff7751b0 <col:12> 'double' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x212ff775170 <col:12> 'double' lvalue Var 0x212ff766270 'h0hi' 'double'
|   |   |   `-ImplicitCastExpr 0x212ff7751c8 <col:19> 'double' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x212ff775190 <col:19> 'double' lvalue Var 0x212ff7666d0 'c0hi' 'double'
|   |   `-BinaryOperator 0x212ff775840 <col:27, col:45> 'double' '*'
|   |     |-ImplicitCastExpr 0x212ff775828 <col:27> 'double' <LValueToRValue>
|   |     | `-DeclRefExpr 0x212ff775220 <col:27> 'double' lvalue Var 0x212ff7669d0 'c3hi' 'double'
|   |     `-ParenExpr 0x212ff775808 <col:34, col:45> 'double'
|   |       `-BinaryOperator 0x212ff7757e8 <col:35, line:65:31> 'double' '/'
|   |         |-FloatingLiteral 0x212ff775240 <line:390:35> 'double' 5.000000e+00
|   |         `-ParenExpr 0x212ff7757c8 <line:65:17, col:31> 'double'
|   |           `-BinaryOperator 0x212ff7757a8 <line:64:16, line:60:37> 'double' '*'
|   |             |-ParenExpr 0x212ff775658 <line:64:16, col:30> 'double'
|   |             | `-BinaryOperator 0x212ff775638 <line:63:16, line:60:37> 'double' '*'
|   |             |   |-ParenExpr 0x212ff7754e8 <line:63:16, col:30> 'double'
|   |             |   | `-BinaryOperator 0x212ff7754c8 <line:60:17, col:37> 'double' '*'
|   |             |   |   |-ParenExpr 0x212ff775378 <col:17, col:37> 'double'
|   |             |   |   | `-CStyleCastExpr 0x212ff775350 <col:18, col:36> 'double' <IntegralToFloating>
|   |             |   |   |   `-ParenExpr 0x212ff775330 <col:26, col:36> 'unsigned long long'
|   |             |   |   |     `-BinaryOperator 0x212ff7752d8 <col:27, col:35> 'unsigned long long' '<<'
|   |             |   |   |       |-IntegerLiteral 0x212ff775268 <col:27> 'unsigned long long' 1
|   |             |   |   |       `-ParenExpr 0x212ff7752b8 <col:33, col:35> 'int'
|   |             |   |   |         `-IntegerLiteral 0x212ff775290 <line:62:20> 'int' 32
|   |             |   |   `-ParenExpr 0x212ff7754a8 <line:60:17, col:37> 'double'
|   |             |   |     `-CStyleCastExpr 0x212ff775480 <col:18, col:36> 'double' <IntegralToFloating>
|   |             |   |       `-ParenExpr 0x212ff775460 <col:26, col:36> 'unsigned long long'
|   |             |   |         `-BinaryOperator 0x212ff775408 <col:27, col:35> 'unsigned long long' '<<'
|   |             |   |           |-IntegerLiteral 0x212ff775398 <col:27> 'unsigned long long' 1
|   |             |   |           `-ParenExpr 0x212ff7753e8 <col:33, col:35> 'int'
|   |             |   |             `-IntegerLiteral 0x212ff7753c0 <line:63:27> 'int' 32
|   |             |   `-ParenExpr 0x212ff775618 <line:60:17, col:37> 'double'
|   |             |     `-CStyleCastExpr 0x212ff7755f0 <col:18, col:36> 'double' <IntegralToFloating>
|   |             |       `-ParenExpr 0x212ff7755d0 <col:26, col:36> 'unsigned long long'
|   |             |         `-BinaryOperator 0x212ff775578 <col:27, col:35> 'unsigned long long' '<<'
|   |             |           |-IntegerLiteral 0x212ff775508 <col:27> 'unsigned long long' 1
|   |             |           `-ParenExpr 0x212ff775558 <col:33, col:35> 'int'
|   |             |             `-IntegerLiteral 0x212ff775530 <line:64:27> 'int' 32
|   |             `-ParenExpr 0x212ff775788 <line:60:17, col:37> 'double'
|   |               `-CStyleCastExpr 0x212ff775760 <col:18, col:36> 'double' <IntegralToFloating>
|   |                 `-ParenExpr 0x212ff775740 <col:26, col:36> 'unsigned long long'
|   |                   `-BinaryOperator 0x212ff7756e8 <col:27, col:35> 'unsigned long long' '<<'
|   |                     |-IntegerLiteral 0x212ff775678 <col:27> 'unsigned long long' 1
|   |                     `-ParenExpr 0x212ff7756c8 <col:33, col:35> 'int'
|   |                       `-IntegerLiteral 0x212ff7756a0 <line:65:28> 'int' 34
|   |-BinaryOperator 0x212ff775c80 <line:395:5, line:60:37> 'double' '='
|   | |-MemberExpr 0x212ff775978 <line:395:5, col:14> 'double' lvalue .d 0x212ff6df498
|   | | `-ArraySubscriptExpr 0x212ff775958 <col:5, col:12> 'elem64':'elem64' lvalue
|   | |   |-ImplicitCastExpr 0x212ff775940 <col:5, col:9> 'elem64 *' <ArrayToPointerDecay>
|   | |   | `-MemberExpr 0x212ff7758e8 <col:5, col:9> 'elem64 [4]' lvalue ->h 0x212ff6df858
|   | |   |   `-ImplicitCastExpr 0x212ff7758d0 <col:5> 'poly1305_internal *' <LValueToRValue>
|   | |   |     `-DeclRefExpr 0x212ff7758b0 <col:5> 'poly1305_internal *' lvalue Var 0x212ff765ae0 'st' 'poly1305_internal *'
|   | |   `-IntegerLiteral 0x212ff775918 <col:11> 'int' 1
|   | `-BinaryOperator 0x212ff775c60 <col:18, line:60:37> 'double' '+'
|   |   |-ImplicitCastExpr 0x212ff775c48 <line:395:18> 'double' <LValueToRValue>
|   |   | `-DeclRefExpr 0x212ff7759a8 <col:18> 'double' lvalue Var 0x212ff766030 'x1' 'double'
|   |   `-BinaryOperator 0x212ff775c28 <line:60:17, col:37> 'double' '*'
|   |     |-ParenExpr 0x212ff775ad8 <col:17, col:37> 'double'
|   |     | `-CStyleCastExpr 0x212ff775ab0 <col:18, col:36> 'double' <IntegralToFloating>
|   |     |   `-ParenExpr 0x212ff775a90 <col:26, col:36> 'unsigned long long'
|   |     |     `-BinaryOperator 0x212ff775a38 <col:27, col:35> 'unsigned long long' '<<'
|   |     |       |-IntegerLiteral 0x212ff7759c8 <col:27> 'unsigned long long' 1
|   |     |       `-ParenExpr 0x212ff775a18 <col:33, col:35> 'int'
|   |     |         `-IntegerLiteral 0x212ff7759f0 <line:395:27> 'int' 52
|   |     `-ParenExpr 0x212ff775c08 <line:60:17, col:37> 'double'
|   |       `-CStyleCastExpr 0x212ff775be0 <col:18, col:36> 'double' <IntegralToFloating>
|   |         `-ParenExpr 0x212ff775bc0 <col:26, col:36> 'unsigned long long'
|   |           `-BinaryOperator 0x212ff775b68 <col:27, col:35> 'unsigned long long' '<<'
|   |             |-IntegerLiteral 0x212ff775af8 <col:27> 'unsigned long long' 1
|   |             `-ParenExpr 0x212ff775b48 <col:33, col:35> 'int'
|   |               `-IntegerLiteral 0x212ff775b20 <line:62:20> 'int' 32
|   |-BinaryOperator 0x212ff77c270 <line:396:5, line:63:30> 'double' '='
|   | |-MemberExpr 0x212ff775d68 <line:396:5, col:14> 'double' lvalue .d 0x212ff6df498
|   | | `-ArraySubscriptExpr 0x212ff775d48 <col:5, col:12> 'elem64':'elem64' lvalue
|   | |   |-ImplicitCastExpr 0x212ff775d30 <col:5, col:9> 'elem64 *' <ArrayToPointerDecay>
|   | |   | `-MemberExpr 0x212ff775cd8 <col:5, col:9> 'elem64 [4]' lvalue ->h 0x212ff6df858
|   | |   |   `-ImplicitCastExpr 0x212ff775cc0 <col:5> 'poly1305_internal *' <LValueToRValue>
|   | |   |     `-DeclRefExpr 0x212ff775ca0 <col:5> 'poly1305_internal *' lvalue Var 0x212ff765ae0 'st' 'poly1305_internal *'
|   | |   `-IntegerLiteral 0x212ff775d08 <col:11> 'int' 2
|   | `-BinaryOperator 0x212ff77c250 <col:18, line:63:30> 'double' '+'
|   |   |-ImplicitCastExpr 0x212ff77c238 <line:396:18> 'double' <LValueToRValue>
|   |   | `-DeclRefExpr 0x212ff775d98 <col:18> 'double' lvalue Var 0x212ff7660b0 'x2' 'double'
|   |   `-BinaryOperator 0x212ff77c218 <line:60:17, line:63:30> 'double' '*'
|   |     |-ParenExpr 0x212ff775ec8 <line:60:17, col:37> 'double'
|   |     | `-CStyleCastExpr 0x212ff775ea0 <col:18, col:36> 'double' <IntegralToFloating>
|   |     |   `-ParenExpr 0x212ff775e80 <col:26, col:36> 'unsigned long long'
|   |     |     `-BinaryOperator 0x212ff775e28 <col:27, col:35> 'unsigned long long' '<<'
|   |     |       |-IntegerLiteral 0x212ff775db8 <col:27> 'unsigned long long' 1
|   |     |       `-ParenExpr 0x212ff775e08 <col:33, col:35> 'int'
|   |     |         `-IntegerLiteral 0x212ff775de0 <line:396:27> 'int' 52
|   |     `-ParenExpr 0x212ff77c1f8 <line:63:16, col:30> 'double'
|   |       `-BinaryOperator 0x212ff77c1d8 <line:60:17, col:37> 'double' '*'
|   |         |-ParenExpr 0x212ff775ff8 <col:17, col:37> 'double'
|   |         | `-CStyleCastExpr 0x212ff775fd0 <col:18, col:36> 'double' <IntegralToFloating>
|   |         |   `-ParenExpr 0x212ff775fb0 <col:26, col:36> 'unsigned long long'
|   |         |     `-BinaryOperator 0x212ff775f58 <col:27, col:35> 'unsigned long long' '<<'
|   |         |       |-IntegerLiteral 0x212ff775ee8 <col:27> 'unsigned long long' 1
|   |         |       `-ParenExpr 0x212ff775f38 <col:33, col:35> 'int'
|   |         |         `-IntegerLiteral 0x212ff775f10 <line:62:20> 'int' 32
|   |         `-ParenExpr 0x212ff77c1b8 <line:60:17, col:37> 'double'
|   |           `-CStyleCastExpr 0x212ff77c190 <col:18, col:36> 'double' <IntegralToFloating>
|   |             `-ParenExpr 0x212ff7760e0 <col:26, col:36> 'unsigned long long'
|   |               `-BinaryOperator 0x212ff776088 <col:27, col:35> 'unsigned long long' '<<'
|   |                 |-IntegerLiteral 0x212ff776018 <col:27> 'unsigned long long' 1
|   |                 `-ParenExpr 0x212ff776068 <col:33, col:35> 'int'
|   |                   `-IntegerLiteral 0x212ff776040 <line:63:27> 'int' 32
|   |-BinaryOperator 0x212ff77c940 <line:397:5, line:64:30> 'double' '='
|   | |-MemberExpr 0x212ff77c358 <line:397:5, col:14> 'double' lvalue .d 0x212ff6df498
|   | | `-ArraySubscriptExpr 0x212ff77c338 <col:5, col:12> 'elem64':'elem64' lvalue
|   | |   |-ImplicitCastExpr 0x212ff77c320 <col:5, col:9> 'elem64 *' <ArrayToPointerDecay>
|   | |   | `-MemberExpr 0x212ff77c2c8 <col:5, col:9> 'elem64 [4]' lvalue ->h 0x212ff6df858
|   | |   |   `-ImplicitCastExpr 0x212ff77c2b0 <col:5> 'poly1305_internal *' <LValueToRValue>
|   | |   |     `-DeclRefExpr 0x212ff77c290 <col:5> 'poly1305_internal *' lvalue Var 0x212ff765ae0 'st' 'poly1305_internal *'
|   | |   `-IntegerLiteral 0x212ff77c2f8 <col:11> 'int' 3
|   | `-BinaryOperator 0x212ff77c920 <col:18, line:64:30> 'double' '+'
|   |   |-ImplicitCastExpr 0x212ff77c908 <line:397:18> 'double' <LValueToRValue>
|   |   | `-DeclRefExpr 0x212ff77c388 <col:18> 'double' lvalue Var 0x212ff766130 'x3' 'double'
|   |   `-BinaryOperator 0x212ff77c8e8 <line:60:17, line:64:30> 'double' '*'
|   |     |-ParenExpr 0x212ff77c4b8 <line:60:17, col:37> 'double'
|   |     | `-CStyleCastExpr 0x212ff77c490 <col:18, col:36> 'double' <IntegralToFloating>
|   |     |   `-ParenExpr 0x212ff77c470 <col:26, col:36> 'unsigned long long'
|   |     |     `-BinaryOperator 0x212ff77c418 <col:27, col:35> 'unsigned long long' '<<'
|   |     |       |-IntegerLiteral 0x212ff77c3a8 <col:27> 'unsigned long long' 1
|   |     |       `-ParenExpr 0x212ff77c3f8 <col:33, col:35> 'int'
|   |     |         `-IntegerLiteral 0x212ff77c3d0 <line:397:27> 'int' 52
|   |     `-ParenExpr 0x212ff77c8c8 <line:64:16, col:30> 'double'
|   |       `-BinaryOperator 0x212ff77c8a8 <line:63:16, line:60:37> 'double' '*'
|   |         |-ParenExpr 0x212ff77c758 <line:63:16, col:30> 'double'
|   |         | `-BinaryOperator 0x212ff77c738 <line:60:17, col:37> 'double' '*'
|   |         |   |-ParenExpr 0x212ff77c5e8 <col:17, col:37> 'double'
|   |         |   | `-CStyleCastExpr 0x212ff77c5c0 <col:18, col:36> 'double' <IntegralToFloating>
|   |         |   |   `-ParenExpr 0x212ff77c5a0 <col:26, col:36> 'unsigned long long'
|   |         |   |     `-BinaryOperator 0x212ff77c548 <col:27, col:35> 'unsigned long long' '<<'
|   |         |   |       |-IntegerLiteral 0x212ff77c4d8 <col:27> 'unsigned long long' 1
|   |         |   |       `-ParenExpr 0x212ff77c528 <col:33, col:35> 'int'
|   |         |   |         `-IntegerLiteral 0x212ff77c500 <line:62:20> 'int' 32
|   |         |   `-ParenExpr 0x212ff77c718 <line:60:17, col:37> 'double'
|   |         |     `-CStyleCastExpr 0x212ff77c6f0 <col:18, col:36> 'double' <IntegralToFloating>
|   |         |       `-ParenExpr 0x212ff77c6d0 <col:26, col:36> 'unsigned long long'
|   |         |         `-BinaryOperator 0x212ff77c678 <col:27, col:35> 'unsigned long long' '<<'
|   |         |           |-IntegerLiteral 0x212ff77c608 <col:27> 'unsigned long long' 1
|   |         |           `-ParenExpr 0x212ff77c658 <col:33, col:35> 'int'
|   |         |             `-IntegerLiteral 0x212ff77c630 <line:63:27> 'int' 32
|   |         `-ParenExpr 0x212ff77c888 <line:60:17, col:37> 'double'
|   |           `-CStyleCastExpr 0x212ff77c860 <col:18, col:36> 'double' <IntegralToFloating>
|   |             `-ParenExpr 0x212ff77c840 <col:26, col:36> 'unsigned long long'
|   |               `-BinaryOperator 0x212ff77c7e8 <col:27, col:35> 'unsigned long long' '<<'
|   |                 |-IntegerLiteral 0x212ff77c778 <col:27> 'unsigned long long' 1
|   |                 `-ParenExpr 0x212ff77c7c8 <col:33, col:35> 'int'
|   |                   `-IntegerLiteral 0x212ff77c7a0 <line:64:27> 'int' 32
|   |-BinaryOperator 0x212ff77cd30 <line:398:5, line:60:37> 'double' '='
|   | |-MemberExpr 0x212ff77ca28 <line:398:5, col:14> 'double' lvalue .d 0x212ff6df498
|   | | `-ArraySubscriptExpr 0x212ff77ca08 <col:5, col:12> 'elem64':'elem64' lvalue
|   | |   |-ImplicitCastExpr 0x212ff77c9f0 <col:5, col:9> 'elem64 *' <ArrayToPointerDecay>
|   | |   | `-MemberExpr 0x212ff77c998 <col:5, col:9> 'elem64 [4]' lvalue ->h 0x212ff6df858
|   | |   |   `-ImplicitCastExpr 0x212ff77c980 <col:5> 'poly1305_internal *' <LValueToRValue>
|   | |   |     `-DeclRefExpr 0x212ff77c960 <col:5> 'poly1305_internal *' lvalue Var 0x212ff765ae0 'st' 'poly1305_internal *'
|   | |   `-IntegerLiteral 0x212ff77c9c8 <col:11> 'int' 0
|   | `-BinaryOperator 0x212ff77cd10 <col:18, line:60:37> 'double' '+'
|   |   |-ImplicitCastExpr 0x212ff77ccf8 <line:398:18> 'double' <LValueToRValue>
|   |   | `-DeclRefExpr 0x212ff77ca58 <col:18> 'double' lvalue Var 0x212ff765f50 'x0' 'double'
|   |   `-BinaryOperator 0x212ff77ccd8 <line:60:17, col:37> 'double' '*'
|   |     |-ParenExpr 0x212ff77cb88 <col:17, col:37> 'double'
|   |     | `-CStyleCastExpr 0x212ff77cb60 <col:18, col:36> 'double' <IntegralToFloating>
|   |     |   `-ParenExpr 0x212ff77cb40 <col:26, col:36> 'unsigned long long'
|   |     |     `-BinaryOperator 0x212ff77cae8 <col:27, col:35> 'unsigned long long' '<<'
|   |     |       |-IntegerLiteral 0x212ff77ca78 <col:27> 'unsigned long long' 1
|   |     |       `-ParenExpr 0x212ff77cac8 <col:33, col:35> 'int'
|   |     |         `-IntegerLiteral 0x212ff77caa0 <line:398:27> 'int' 52
|   |     `-ParenExpr 0x212ff77ccb8 <line:60:17, col:37> 'double'
|   |       `-CStyleCastExpr 0x212ff77cc90 <col:18, col:36> 'double' <IntegralToFloating>
|   |         `-ParenExpr 0x212ff77cc70 <col:26, col:36> 'unsigned long long'
|   |           `-BinaryOperator 0x212ff77cc18 <col:27, col:35> 'unsigned long long' '<<'
|   |             |-IntegerLiteral 0x212ff77cba8 <col:27> 'unsigned long long' 1
|   |             `-ParenExpr 0x212ff77cbf8 <col:33, col:35> 'int'
|   |               `-IntegerLiteral 0x212ff77cbd0 <line:61:19> 'int' 0
|   `-GCCAsmStmt 0x212ff77cdb8 <line:404:5, col:48>
|     `-DeclRefExpr 0x212ff77cd98 <col:37> 'u32':'unsigned int' lvalue Var 0x212ff75fee8 'mxcsr_orig' 'u32':'unsigned int'
`-FunctionDecl 0x212ff77d488 <line:414:1, line:472:1> line:414:6 poly1305_emit 'void (void *, unsigned char *, const u32 *)'
  |-ParmVarDecl 0x212ff77cff8 <col:20, col:26> col:26 used ctx 'void *'
  |-ParmVarDecl 0x212ff77d1a0 <col:31, col:51> col:45 used mac 'unsigned char *':'unsigned char *'
  |-ParmVarDecl 0x212ff77d320 <col:54, col:71> col:64 used nonce 'const u32 *':'const u32 *'
  `-CompoundStmt 0x212ff7821f0 <line:415:1, line:472:1>
    |-DeclStmt 0x212ff77d640 <line:416:5, col:54>
    | `-VarDecl 0x212ff77d568 <col:5, col:51> col:24 used st 'poly1305_internal *' cinit
    |   `-CStyleCastExpr 0x212ff77d618 <col:29, col:51> 'poly1305_internal *' <BitCast>
    |     `-ImplicitCastExpr 0x212ff77d600 <col:51> 'void *' <LValueToRValue> part_of_explicit_cast
    |       `-DeclRefExpr 0x212ff77d5d0 <col:51> 'void *' lvalue ParmVar 0x212ff77cff8 'ctx' 'void *'
    |-DeclStmt 0x212ff77d8e0 <line:417:5, col:27>
    | |-VarDecl 0x212ff77d668 <col:5, col:9> col:9 used h0 'u64':'unsigned long long'
    | |-VarDecl 0x212ff77d6e0 <col:5, col:13> col:13 used h1 'u64':'unsigned long long'
    | |-VarDecl 0x212ff77d758 <col:5, col:17> col:17 used h2 'u64':'unsigned long long'
    | |-VarDecl 0x212ff77d7d0 <col:5, col:21> col:21 used h3 'u64':'unsigned long long'
    | `-VarDecl 0x212ff77d848 <col:5, col:25> col:25 used h4 'u64':'unsigned long long'
    |-DeclStmt 0x212ff77db80 <line:418:5, col:27>
    | |-VarDecl 0x212ff77d908 <col:5, col:9> col:9 used g0 'u32':'unsigned int'
    | |-VarDecl 0x212ff77d980 <col:5, col:13> col:13 used g1 'u32':'unsigned int'
    | |-VarDecl 0x212ff77d9f8 <col:5, col:17> col:17 used g2 'u32':'unsigned int'
    | |-VarDecl 0x212ff77da70 <col:5, col:21> col:21 used g3 'u32':'unsigned int'
    | `-VarDecl 0x212ff77dae8 <col:5, col:25> col:25 used g4 'u32':'unsigned int'
    |-DeclStmt 0x212ff77dc10 <line:419:5, col:10>
    | `-VarDecl 0x212ff77dba8 <col:5, col:9> col:9 used t 'u64':'unsigned long long'
    |-DeclStmt 0x212ff77dca0 <line:420:5, col:13>
    | `-VarDecl 0x212ff77dc38 <col:5, col:9> col:9 used mask 'u32':'unsigned int'
    |-BinaryOperator 0x212ff77de60 <line:425:5, col:23> 'u64':'unsigned long long' '='
    | |-DeclRefExpr 0x212ff77dcb8 <col:5> 'u64':'unsigned long long' lvalue Var 0x212ff77d668 'h0' 'u64':'unsigned long long'
    | `-BinaryOperator 0x212ff77de40 <col:10, col:23> 'unsigned long long' '&'
    |   |-ImplicitCastExpr 0x212ff77de28 <col:10, col:19> 'u64':'unsigned long long' <LValueToRValue>
    |   | `-MemberExpr 0x212ff77ddd0 <col:10, col:19> 'u64':'unsigned long long' lvalue .u 0x212ff6df520
    |   |   `-ArraySubscriptExpr 0x212ff77ddb0 <col:10, col:17> 'elem64':'elem64' lvalue
    |   |     |-ImplicitCastExpr 0x212ff77dd98 <col:10, col:14> 'elem64 *' <ArrayToPointerDecay>
    |   |     | `-MemberExpr 0x212ff77dd40 <col:10, col:14> 'elem64 [4]' lvalue ->h 0x212ff6df858
    |   |     |   `-ImplicitCastExpr 0x212ff77dd28 <col:10> 'poly1305_internal *' <LValueToRValue>
    |   |     |     `-DeclRefExpr 0x212ff77dcf0 <col:10> 'poly1305_internal *' lvalue Var 0x212ff77d568 'st' 'poly1305_internal *'
    |   |     `-IntegerLiteral 0x212ff77dd70 <col:16> 'int' 0
    |   `-IntegerLiteral 0x212ff77de00 <col:23> 'unsigned long long' 4503599627370495
    |-BinaryOperator 0x212ff77e010 <line:426:5, col:23> 'u64':'unsigned long long' '='
    | |-DeclRefExpr 0x212ff77de80 <col:5> 'u64':'unsigned long long' lvalue Var 0x212ff77d6e0 'h1' 'u64':'unsigned long long'
    | `-BinaryOperator 0x212ff77dff0 <col:10, col:23> 'unsigned long long' '&'
    |   |-ImplicitCastExpr 0x212ff77dfd8 <col:10, col:19> 'u64':'unsigned long long' <LValueToRValue>
    |   | `-MemberExpr 0x212ff77df80 <col:10, col:19> 'u64':'unsigned long long' lvalue .u 0x212ff6df520
    |   |   `-ArraySubscriptExpr 0x212ff77df60 <col:10, col:17> 'elem64':'elem64' lvalue
    |   |     |-ImplicitCastExpr 0x212ff77df48 <col:10, col:14> 'elem64 *' <ArrayToPointerDecay>
    |   |     | `-MemberExpr 0x212ff77def0 <col:10, col:14> 'elem64 [4]' lvalue ->h 0x212ff6df858
    |   |     |   `-ImplicitCastExpr 0x212ff77ded8 <col:10> 'poly1305_internal *' <LValueToRValue>
    |   |     |     `-DeclRefExpr 0x212ff77deb8 <col:10> 'poly1305_internal *' lvalue Var 0x212ff77d568 'st' 'poly1305_internal *'
    |   |     `-IntegerLiteral 0x212ff77df20 <col:16> 'int' 1
    |   `-IntegerLiteral 0x212ff77dfb0 <col:23> 'unsigned long long' 4503599627370495
    |-BinaryOperator 0x212ff776150 <line:427:5, col:23> 'u64':'unsigned long long' '='
    | |-DeclRefExpr 0x212ff77e030 <col:5> 'u64':'unsigned long long' lvalue Var 0x212ff77d758 'h2' 'u64':'unsigned long long'
    | `-BinaryOperator 0x212ff776130 <col:10, col:23> 'unsigned long long' '&'
    |   |-ImplicitCastExpr 0x212ff77e188 <col:10, col:19> 'u64':'unsigned long long' <LValueToRValue>
    |   | `-MemberExpr 0x212ff77e130 <col:10, col:19> 'u64':'unsigned long long' lvalue .u 0x212ff6df520
    |   |   `-ArraySubscriptExpr 0x212ff77e110 <col:10, col:17> 'elem64':'elem64' lvalue
    |   |     |-ImplicitCastExpr 0x212ff77e0f8 <col:10, col:14> 'elem64 *' <ArrayToPointerDecay>
    |   |     | `-MemberExpr 0x212ff77e0a0 <col:10, col:14> 'elem64 [4]' lvalue ->h 0x212ff6df858
    |   |     |   `-ImplicitCastExpr 0x212ff77e088 <col:10> 'poly1305_internal *' <LValueToRValue>
    |   |     |     `-DeclRefExpr 0x212ff77e068 <col:10> 'poly1305_internal *' lvalue Var 0x212ff77d568 'st' 'poly1305_internal *'
    |   |     `-IntegerLiteral 0x212ff77e0d0 <col:16> 'int' 2
    |   `-IntegerLiteral 0x212ff77e160 <col:23> 'unsigned long long' 4503599627370495
    |-BinaryOperator 0x212ff776300 <line:428:5, col:23> 'u64':'unsigned long long' '='
    | |-DeclRefExpr 0x212ff776170 <col:5> 'u64':'unsigned long long' lvalue Var 0x212ff77d7d0 'h3' 'u64':'unsigned long long'
    | `-BinaryOperator 0x212ff7762e0 <col:10, col:23> 'unsigned long long' '&'
    |   |-ImplicitCastExpr 0x212ff7762c8 <col:10, col:19> 'u64':'unsigned long long' <LValueToRValue>
    |   | `-MemberExpr 0x212ff776270 <col:10, col:19> 'u64':'unsigned long long' lvalue .u 0x212ff6df520
    |   |   `-ArraySubscriptExpr 0x212ff776250 <col:10, col:17> 'elem64':'elem64' lvalue
    |   |     |-ImplicitCastExpr 0x212ff776238 <col:10, col:14> 'elem64 *' <ArrayToPointerDecay>
    |   |     | `-MemberExpr 0x212ff7761e0 <col:10, col:14> 'elem64 [4]' lvalue ->h 0x212ff6df858
    |   |     |   `-ImplicitCastExpr 0x212ff7761c8 <col:10> 'poly1305_internal *' <LValueToRValue>
    |   |     |     `-DeclRefExpr 0x212ff7761a8 <col:10> 'poly1305_internal *' lvalue Var 0x212ff77d568 'st' 'poly1305_internal *'
    |   |     `-IntegerLiteral 0x212ff776210 <col:16> 'int' 3
    |   `-IntegerLiteral 0x212ff7762a0 <col:23> 'unsigned long long' 4503599627370495
    |-BinaryOperator 0x212ff7763d8 <line:433:5, col:14> 'u64':'unsigned long long' '='
    | |-DeclRefExpr 0x212ff776320 <col:5> 'u64':'unsigned long long' lvalue Var 0x212ff77d848 'h4' 'u64':'unsigned long long'
    | `-BinaryOperator 0x212ff7763b8 <col:10, col:14> 'u64':'unsigned long long' '>>'
    |   |-ImplicitCastExpr 0x212ff7763a0 <col:10> 'u64':'unsigned long long' <LValueToRValue>
    |   | `-DeclRefExpr 0x212ff776358 <col:10> 'u64':'unsigned long long' lvalue Var 0x212ff77d7d0 'h3' 'u64':'unsigned long long'
    |   `-IntegerLiteral 0x212ff776378 <col:14> 'int' 32
    |-CompoundAssignOperator 0x212ff776458 <col:18, col:24> 'u64':'unsigned long long' '&=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    | |-DeclRefExpr 0x212ff7763f8 <col:18> 'u64':'unsigned long long' lvalue Var 0x212ff77d7d0 'h3' 'u64':'unsigned long long'
    | `-ImplicitCastExpr 0x212ff776440 <col:24> 'unsigned long long' <IntegralCast>
    |   `-IntegerLiteral 0x212ff776418 <col:24> 'unsigned int' 4294967295
    |-BinaryOperator 0x212ff776588 <line:434:5, col:14> 'u32':'unsigned int' '='
    | |-DeclRefExpr 0x212ff776488 <col:5> 'u32':'unsigned int' lvalue Var 0x212ff77dae8 'g4' 'u32':'unsigned int'
    | `-ImplicitCastExpr 0x212ff776570 <col:10, col:14> 'u32':'unsigned int' <IntegralCast>
    |   `-BinaryOperator 0x212ff776550 <col:10, col:14> 'unsigned long long' '&'
    |     |-ImplicitCastExpr 0x212ff776520 <col:10> 'u64':'unsigned long long' <LValueToRValue>
    |     | `-DeclRefExpr 0x212ff7764c0 <col:10> 'u64':'unsigned long long' lvalue Var 0x212ff77d848 'h4' 'u64':'unsigned long long'
    |     `-ImplicitCastExpr 0x212ff776538 <col:13, col:14> 'unsigned long long' <IntegralCast>
    |       `-UnaryOperator 0x212ff776508 <col:13, col:14> 'int' prefix '-'
    |         `-IntegerLiteral 0x212ff7764e0 <col:14> 'int' 4
    |-CompoundAssignOperator 0x212ff776608 <line:435:5, col:11> 'u64':'unsigned long long' '&=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    | |-DeclRefExpr 0x212ff7765a8 <col:5> 'u64':'unsigned long long' lvalue Var 0x212ff77d848 'h4' 'u64':'unsigned long long'
    | `-ImplicitCastExpr 0x212ff7765f0 <col:11> 'unsigned long long' <IntegralCast>
    |   `-IntegerLiteral 0x212ff7765c8 <col:11> 'int' 3
    |-CompoundAssignOperator 0x212ff7766d8 <line:436:5, col:15> 'u32':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
    | |-DeclRefExpr 0x212ff776638 <col:5> 'u32':'unsigned int' lvalue Var 0x212ff77dae8 'g4' 'u32':'unsigned int'
    | `-BinaryOperator 0x212ff7766b8 <col:11, col:15> 'u32':'unsigned int' '>>'
    |   |-ImplicitCastExpr 0x212ff7766a0 <col:11> 'u32':'unsigned int' <LValueToRValue>
    |   | `-DeclRefExpr 0x212ff776658 <col:11> 'u32':'unsigned int' lvalue Var 0x212ff77dae8 'g4' 'u32':'unsigned int'
    |   `-IntegerLiteral 0x212ff776678 <col:15> 'int' 2
    |-CompoundAssignOperator 0x212ff776778 <line:438:5, col:11> 'u64':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    | |-DeclRefExpr 0x212ff776708 <col:5> 'u64':'unsigned long long' lvalue Var 0x212ff77d668 'h0' 'u64':'unsigned long long'
    | `-ImplicitCastExpr 0x212ff776760 <col:11> 'unsigned long long' <IntegralCast>
    |   `-ImplicitCastExpr 0x212ff776748 <col:11> 'u32':'unsigned int' <LValueToRValue>
    |     `-DeclRefExpr 0x212ff776728 <col:11> 'u32':'unsigned int' lvalue Var 0x212ff77dae8 'g4' 'u32':'unsigned int'
    |-CompoundAssignOperator 0x212ff776848 <line:439:5, col:15> 'u64':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    | |-DeclRefExpr 0x212ff7767a8 <col:5> 'u64':'unsigned long long' lvalue Var 0x212ff77d6e0 'h1' 'u64':'unsigned long long'
    | `-BinaryOperator 0x212ff776828 <col:11, col:15> 'u64':'unsigned long long' '>>'
    |   |-ImplicitCastExpr 0x212ff776810 <col:11> 'u64':'unsigned long long' <LValueToRValue>
    |   | `-DeclRefExpr 0x212ff7767c8 <col:11> 'u64':'unsigned long long' lvalue Var 0x212ff77d668 'h0' 'u64':'unsigned long long'
    |   `-IntegerLiteral 0x212ff7767e8 <col:15> 'int' 32
    |-CompoundAssignOperator 0x212ff7768d8 <col:19, col:25> 'u64':'unsigned long long' '&=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    | |-DeclRefExpr 0x212ff776878 <col:19> 'u64':'unsigned long long' lvalue Var 0x212ff77d668 'h0' 'u64':'unsigned long long'
    | `-ImplicitCastExpr 0x212ff7768c0 <col:25> 'unsigned long long' <IntegralCast>
    |   `-IntegerLiteral 0x212ff776898 <col:25> 'unsigned int' 4294967295
    |-CompoundAssignOperator 0x212ff7769a8 <line:440:5, col:15> 'u64':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    | |-DeclRefExpr 0x212ff776908 <col:5> 'u64':'unsigned long long' lvalue Var 0x212ff77d758 'h2' 'u64':'unsigned long long'
    | `-BinaryOperator 0x212ff776988 <col:11, col:15> 'u64':'unsigned long long' '>>'
    |   |-ImplicitCastExpr 0x212ff776970 <col:11> 'u64':'unsigned long long' <LValueToRValue>
    |   | `-DeclRefExpr 0x212ff776928 <col:11> 'u64':'unsigned long long' lvalue Var 0x212ff77d6e0 'h1' 'u64':'unsigned long long'
    |   `-IntegerLiteral 0x212ff776948 <col:15> 'int' 32
    |-CompoundAssignOperator 0x212ff776a38 <col:19, col:25> 'u64':'unsigned long long' '&=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    | |-DeclRefExpr 0x212ff7769d8 <col:19> 'u64':'unsigned long long' lvalue Var 0x212ff77d6e0 'h1' 'u64':'unsigned long long'
    | `-ImplicitCastExpr 0x212ff776a20 <col:25> 'unsigned long long' <IntegralCast>
    |   `-IntegerLiteral 0x212ff7769f8 <col:25> 'unsigned int' 4294967295
    |-CompoundAssignOperator 0x212ff776b08 <line:441:5, col:15> 'u64':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    | |-DeclRefExpr 0x212ff776a68 <col:5> 'u64':'unsigned long long' lvalue Var 0x212ff77d7d0 'h3' 'u64':'unsigned long long'
    | `-BinaryOperator 0x212ff776ae8 <col:11, col:15> 'u64':'unsigned long long' '>>'
    |   |-ImplicitCastExpr 0x212ff776ad0 <col:11> 'u64':'unsigned long long' <LValueToRValue>
    |   | `-DeclRefExpr 0x212ff776a88 <col:11> 'u64':'unsigned long long' lvalue Var 0x212ff77d758 'h2' 'u64':'unsigned long long'
    |   `-IntegerLiteral 0x212ff776aa8 <col:15> 'int' 32
    |-CompoundAssignOperator 0x212ff776b98 <col:19, col:25> 'u64':'unsigned long long' '&=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    | |-DeclRefExpr 0x212ff776b38 <col:19> 'u64':'unsigned long long' lvalue Var 0x212ff77d758 'h2' 'u64':'unsigned long long'
    | `-ImplicitCastExpr 0x212ff776b80 <col:25> 'unsigned long long' <IntegralCast>
    |   `-IntegerLiteral 0x212ff776b58 <col:25> 'unsigned int' 4294967295
    |-BinaryOperator 0x212ff776d68 <line:444:5, col:26> 'u32':'unsigned int' '='
    | |-DeclRefExpr 0x212ff776bc8 <col:5> 'u32':'unsigned int' lvalue Var 0x212ff77d908 'g0' 'u32':'unsigned int'
    | `-CStyleCastExpr 0x212ff776d40 <col:10, col:26> 'u32':'unsigned int' <IntegralCast>
    |   `-ParenExpr 0x212ff776d20 <col:15, col:26> 'u64':'unsigned long long'
    |     `-BinaryOperator 0x212ff776cd0 <col:16, col:25> 'u64':'unsigned long long' '='
    |       |-DeclRefExpr 0x212ff776c00 <col:16> 'u64':'unsigned long long' lvalue Var 0x212ff77dba8 't' 'u64':'unsigned long long'
    |       `-BinaryOperator 0x212ff776cb0 <col:20, col:25> 'unsigned long long' '+'
    |         |-ImplicitCastExpr 0x212ff776c80 <col:20> 'u64':'unsigned long long' <LValueToRValue>
    |         | `-DeclRefExpr 0x212ff776c38 <col:20> 'u64':'unsigned long long' lvalue Var 0x212ff77d668 'h0' 'u64':'unsigned long long'
    |         `-ImplicitCastExpr 0x212ff776c98 <col:25> 'unsigned long long' <IntegralCast>
    |           `-IntegerLiteral 0x212ff776c58 <col:25> 'int' 5
    |-BinaryOperator 0x212ff776f70 <line:445:5, col:34> 'u32':'unsigned int' '='
    | |-DeclRefExpr 0x212ff776d88 <col:5> 'u32':'unsigned int' lvalue Var 0x212ff77d980 'g1' 'u32':'unsigned int'
    | `-CStyleCastExpr 0x212ff776f48 <col:10, col:34> 'u32':'unsigned int' <IntegralCast>
    |   `-ParenExpr 0x212ff776f28 <col:15, col:34> 'u64':'unsigned long long'
    |     `-BinaryOperator 0x212ff776ed8 <col:16, col:33> 'u64':'unsigned long long' '='
    |       |-DeclRefExpr 0x212ff776dc0 <col:16> 'u64':'unsigned long long' lvalue Var 0x212ff77dba8 't' 'u64':'unsigned long long'
    |       `-BinaryOperator 0x212ff776eb8 <col:20, col:33> 'unsigned long long' '+'
    |         |-ImplicitCastExpr 0x212ff776ea0 <col:20> 'u64':'unsigned long long' <LValueToRValue>
    |         | `-DeclRefExpr 0x212ff776de0 <col:20> 'u64':'unsigned long long' lvalue Var 0x212ff77d6e0 'h1' 'u64':'unsigned long long'
    |         `-ParenExpr 0x212ff776e80 <col:25, col:33> 'u64':'unsigned long long'
    |           `-BinaryOperator 0x212ff776e60 <col:26, col:31> 'u64':'unsigned long long' '>>'
    |             |-ImplicitCastExpr 0x212ff776e48 <col:26> 'u64':'unsigned long long' <LValueToRValue>
    |             | `-DeclRefExpr 0x212ff776e00 <col:26> 'u64':'unsigned long long' lvalue Var 0x212ff77dba8 't' 'u64':'unsigned long long'
    |             `-IntegerLiteral 0x212ff776e20 <col:31> 'int' 32
    |-BinaryOperator 0x212ff781228 <line:446:5, col:34> 'u32':'unsigned int' '='
    | |-DeclRefExpr 0x212ff776f90 <col:5> 'u32':'unsigned int' lvalue Var 0x212ff77d9f8 'g2' 'u32':'unsigned int'
    | `-CStyleCastExpr 0x212ff781200 <col:10, col:34> 'u32':'unsigned int' <IntegralCast>
    |   `-ParenExpr 0x212ff7811e0 <col:15, col:34> 'u64':'unsigned long long'
    |     `-BinaryOperator 0x212ff7770e0 <col:16, col:33> 'u64':'unsigned long long' '='
    |       |-DeclRefExpr 0x212ff776fc8 <col:16> 'u64':'unsigned long long' lvalue Var 0x212ff77dba8 't' 'u64':'unsigned long long'
    |       `-BinaryOperator 0x212ff7770c0 <col:20, col:33> 'unsigned long long' '+'
    |         |-ImplicitCastExpr 0x212ff7770a8 <col:20> 'u64':'unsigned long long' <LValueToRValue>
    |         | `-DeclRefExpr 0x212ff776fe8 <col:20> 'u64':'unsigned long long' lvalue Var 0x212ff77d758 'h2' 'u64':'unsigned long long'
    |         `-ParenExpr 0x212ff777088 <col:25, col:33> 'u64':'unsigned long long'
    |           `-BinaryOperator 0x212ff777068 <col:26, col:31> 'u64':'unsigned long long' '>>'
    |             |-ImplicitCastExpr 0x212ff777050 <col:26> 'u64':'unsigned long long' <LValueToRValue>
    |             | `-DeclRefExpr 0x212ff777008 <col:26> 'u64':'unsigned long long' lvalue Var 0x212ff77dba8 't' 'u64':'unsigned long long'
    |             `-IntegerLiteral 0x212ff777028 <col:31> 'int' 32
    |-BinaryOperator 0x212ff781430 <line:447:5, col:34> 'u32':'unsigned int' '='
    | |-DeclRefExpr 0x212ff781248 <col:5> 'u32':'unsigned int' lvalue Var 0x212ff77da70 'g3' 'u32':'unsigned int'
    | `-CStyleCastExpr 0x212ff781408 <col:10, col:34> 'u32':'unsigned int' <IntegralCast>
    |   `-ParenExpr 0x212ff7813e8 <col:15, col:34> 'u64':'unsigned long long'
    |     `-BinaryOperator 0x212ff781398 <col:16, col:33> 'u64':'unsigned long long' '='
    |       |-DeclRefExpr 0x212ff781280 <col:16> 'u64':'unsigned long long' lvalue Var 0x212ff77dba8 't' 'u64':'unsigned long long'
    |       `-BinaryOperator 0x212ff781378 <col:20, col:33> 'unsigned long long' '+'
    |         |-ImplicitCastExpr 0x212ff781360 <col:20> 'u64':'unsigned long long' <LValueToRValue>
    |         | `-DeclRefExpr 0x212ff7812a0 <col:20> 'u64':'unsigned long long' lvalue Var 0x212ff77d7d0 'h3' 'u64':'unsigned long long'
    |         `-ParenExpr 0x212ff781340 <col:25, col:33> 'u64':'unsigned long long'
    |           `-BinaryOperator 0x212ff781320 <col:26, col:31> 'u64':'unsigned long long' '>>'
    |             |-ImplicitCastExpr 0x212ff781308 <col:26> 'u64':'unsigned long long' <LValueToRValue>
    |             | `-DeclRefExpr 0x212ff7812c0 <col:26> 'u64':'unsigned long long' lvalue Var 0x212ff77dba8 't' 'u64':'unsigned long long'
    |             `-IntegerLiteral 0x212ff7812e0 <col:31> 'int' 32
    |-BinaryOperator 0x212ff7815f0 <line:448:5, col:28> 'u32':'unsigned int' '='
    | |-DeclRefExpr 0x212ff781450 <col:5> 'u32':'unsigned int' lvalue Var 0x212ff77dae8 'g4' 'u32':'unsigned int'
    | `-ImplicitCastExpr 0x212ff7815d8 <col:10, col:28> 'u32':'unsigned int' <IntegralCast>
    |   `-BinaryOperator 0x212ff7815b8 <col:10, col:28> 'unsigned long long' '+'
    |     |-ImplicitCastExpr 0x212ff781588 <col:10> 'u64':'unsigned long long' <LValueToRValue>
    |     | `-DeclRefExpr 0x212ff781470 <col:10> 'u64':'unsigned long long' lvalue Var 0x212ff77d848 'h4' 'u64':'unsigned long long'
    |     `-ImplicitCastExpr 0x212ff7815a0 <col:15, col:28> 'unsigned long long' <IntegralCast>
    |       `-CStyleCastExpr 0x212ff781560 <col:15, col:28> 'u32':'unsigned int' <IntegralCast>
    |         `-ParenExpr 0x212ff781540 <col:20, col:28> 'u64':'unsigned long long'
    |           `-BinaryOperator 0x212ff7814f0 <col:21, col:26> 'u64':'unsigned long long' '>>'
    |             |-ImplicitCastExpr 0x212ff7814d8 <col:21> 'u64':'unsigned long long' <LValueToRValue>
    |             | `-DeclRefExpr 0x212ff781490 <col:21> 'u64':'unsigned long long' lvalue Var 0x212ff77dba8 't' 'u64':'unsigned long long'
    |             `-IntegerLiteral 0x212ff7814b0 <col:26> 'int' 32
    |-BinaryOperator 0x212ff781748 <line:451:5, col:24> 'u32':'unsigned int' '='
    | |-DeclRefExpr 0x212ff781610 <col:5> 'u32':'unsigned int' lvalue Var 0x212ff77dc38 'mask' 'u32':'unsigned int'
    | `-BinaryOperator 0x212ff781728 <col:12, col:24> 'unsigned int' '-'
    |   |-ImplicitCastExpr 0x212ff781710 <col:12> 'unsigned int' <IntegralCast>
    |   | `-IntegerLiteral 0x212ff781648 <col:12> 'int' 0
    |   `-ParenExpr 0x212ff7816f0 <col:16, col:24> 'u32':'unsigned int'
    |     `-BinaryOperator 0x212ff7816d0 <col:17, col:23> 'u32':'unsigned int' '>>'
    |       |-ImplicitCastExpr 0x212ff7816b8 <col:17> 'u32':'unsigned int' <LValueToRValue>
    |       | `-DeclRefExpr 0x212ff781670 <col:17> 'u32':'unsigned int' lvalue Var 0x212ff77dae8 'g4' 'u32':'unsigned int'
    |       `-IntegerLiteral 0x212ff781690 <col:23> 'int' 2
    |-CompoundAssignOperator 0x212ff7817c0 <line:452:5, col:11> 'u32':'unsigned int' '&=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
    | |-DeclRefExpr 0x212ff781768 <col:5> 'u32':'unsigned int' lvalue Var 0x212ff77d908 'g0' 'u32':'unsigned int'
    | `-ImplicitCastExpr 0x212ff7817a8 <col:11> 'u32':'unsigned int' <LValueToRValue>
    |   `-DeclRefExpr 0x212ff781788 <col:11> 'u32':'unsigned int' lvalue Var 0x212ff77dc38 'mask' 'u32':'unsigned int'
    |-CompoundAssignOperator 0x212ff781848 <line:453:5, col:11> 'u32':'unsigned int' '&=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
    | |-DeclRefExpr 0x212ff7817f0 <col:5> 'u32':'unsigned int' lvalue Var 0x212ff77d980 'g1' 'u32':'unsigned int'
    | `-ImplicitCastExpr 0x212ff781830 <col:11> 'u32':'unsigned int' <LValueToRValue>
    |   `-DeclRefExpr 0x212ff781810 <col:11> 'u32':'unsigned int' lvalue Var 0x212ff77dc38 'mask' 'u32':'unsigned int'
    |-CompoundAssignOperator 0x212ff7818d0 <line:454:5, col:11> 'u32':'unsigned int' '&=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
    | |-DeclRefExpr 0x212ff781878 <col:5> 'u32':'unsigned int' lvalue Var 0x212ff77d9f8 'g2' 'u32':'unsigned int'
    | `-ImplicitCastExpr 0x212ff7818b8 <col:11> 'u32':'unsigned int' <LValueToRValue>
    |   `-DeclRefExpr 0x212ff781898 <col:11> 'u32':'unsigned int' lvalue Var 0x212ff77dc38 'mask' 'u32':'unsigned int'
    |-CompoundAssignOperator 0x212ff781958 <line:455:5, col:11> 'u32':'unsigned int' '&=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
    | |-DeclRefExpr 0x212ff781900 <col:5> 'u32':'unsigned int' lvalue Var 0x212ff77da70 'g3' 'u32':'unsigned int'
    | `-ImplicitCastExpr 0x212ff781940 <col:11> 'u32':'unsigned int' <LValueToRValue>
    |   `-DeclRefExpr 0x212ff781920 <col:11> 'u32':'unsigned int' lvalue Var 0x212ff77dc38 'mask' 'u32':'unsigned int'
    |-BinaryOperator 0x212ff7819f8 <line:456:5, col:13> 'u32':'unsigned int' '='
    | |-DeclRefExpr 0x212ff781988 <col:5> 'u32':'unsigned int' lvalue Var 0x212ff77dc38 'mask' 'u32':'unsigned int'
    | `-UnaryOperator 0x212ff7819e0 <col:12, col:13> 'u32':'unsigned int' prefix '~' cannot overflow
    |   `-ImplicitCastExpr 0x212ff7819c8 <col:13> 'u32':'unsigned int' <LValueToRValue>
    |     `-DeclRefExpr 0x212ff7819a8 <col:13> 'u32':'unsigned int' lvalue Var 0x212ff77dc38 'mask' 'u32':'unsigned int'
    |-CompoundAssignOperator 0x212ff781b00 <line:457:5, col:21> 'u32':'unsigned int' '|=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    | |-DeclRefExpr 0x212ff781a18 <col:5> 'u32':'unsigned int' lvalue Var 0x212ff77d908 'g0' 'u32':'unsigned int'
    | `-ParenExpr 0x212ff781ae0 <col:11, col:21> 'unsigned long long'
    |   `-BinaryOperator 0x212ff781ac0 <col:12, col:17> 'unsigned long long' '&'
    |     |-ImplicitCastExpr 0x212ff781a78 <col:12> 'u64':'unsigned long long' <LValueToRValue>
    |     | `-DeclRefExpr 0x212ff781a38 <col:12> 'u64':'unsigned long long' lvalue Var 0x212ff77d668 'h0' 'u64':'unsigned long long'
    |     `-ImplicitCastExpr 0x212ff781aa8 <col:17> 'unsigned long long' <IntegralCast>
    |       `-ImplicitCastExpr 0x212ff781a90 <col:17> 'u32':'unsigned int' <LValueToRValue>
    |         `-DeclRefExpr 0x212ff781a58 <col:17> 'u32':'unsigned int' lvalue Var 0x212ff77dc38 'mask' 'u32':'unsigned int'
    |-CompoundAssignOperator 0x212ff781c18 <line:458:5, col:21> 'u32':'unsigned int' '|=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    | |-DeclRefExpr 0x212ff781b30 <col:5> 'u32':'unsigned int' lvalue Var 0x212ff77d980 'g1' 'u32':'unsigned int'
    | `-ParenExpr 0x212ff781bf8 <col:11, col:21> 'unsigned long long'
    |   `-BinaryOperator 0x212ff781bd8 <col:12, col:17> 'unsigned long long' '&'
    |     |-ImplicitCastExpr 0x212ff781b90 <col:12> 'u64':'unsigned long long' <LValueToRValue>
    |     | `-DeclRefExpr 0x212ff781b50 <col:12> 'u64':'unsigned long long' lvalue Var 0x212ff77d6e0 'h1' 'u64':'unsigned long long'
    |     `-ImplicitCastExpr 0x212ff781bc0 <col:17> 'unsigned long long' <IntegralCast>
    |       `-ImplicitCastExpr 0x212ff781ba8 <col:17> 'u32':'unsigned int' <LValueToRValue>
    |         `-DeclRefExpr 0x212ff781b70 <col:17> 'u32':'unsigned int' lvalue Var 0x212ff77dc38 'mask' 'u32':'unsigned int'
    |-CompoundAssignOperator 0x212ff781d30 <line:459:5, col:21> 'u32':'unsigned int' '|=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    | |-DeclRefExpr 0x212ff781c48 <col:5> 'u32':'unsigned int' lvalue Var 0x212ff77d9f8 'g2' 'u32':'unsigned int'
    | `-ParenExpr 0x212ff781d10 <col:11, col:21> 'unsigned long long'
    |   `-BinaryOperator 0x212ff781cf0 <col:12, col:17> 'unsigned long long' '&'
    |     |-ImplicitCastExpr 0x212ff781ca8 <col:12> 'u64':'unsigned long long' <LValueToRValue>
    |     | `-DeclRefExpr 0x212ff781c68 <col:12> 'u64':'unsigned long long' lvalue Var 0x212ff77d758 'h2' 'u64':'unsigned long long'
    |     `-ImplicitCastExpr 0x212ff781cd8 <col:17> 'unsigned long long' <IntegralCast>
    |       `-ImplicitCastExpr 0x212ff781cc0 <col:17> 'u32':'unsigned int' <LValueToRValue>
    |         `-DeclRefExpr 0x212ff781c88 <col:17> 'u32':'unsigned int' lvalue Var 0x212ff77dc38 'mask' 'u32':'unsigned int'
    |-CompoundAssignOperator 0x212ff781e48 <line:460:5, col:21> 'u32':'unsigned int' '|=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    | |-DeclRefExpr 0x212ff781d60 <col:5> 'u32':'unsigned int' lvalue Var 0x212ff77da70 'g3' 'u32':'unsigned int'
    | `-ParenExpr 0x212ff781e28 <col:11, col:21> 'unsigned long long'
    |   `-BinaryOperator 0x212ff781e08 <col:12, col:17> 'unsigned long long' '&'
    |     |-ImplicitCastExpr 0x212ff781dc0 <col:12> 'u64':'unsigned long long' <LValueToRValue>
    |     | `-DeclRefExpr 0x212ff781d80 <col:12> 'u64':'unsigned long long' lvalue Var 0x212ff77d7d0 'h3' 'u64':'unsigned long long'
    |     `-ImplicitCastExpr 0x212ff781df0 <col:17> 'unsigned long long' <IntegralCast>
    |       `-ImplicitCastExpr 0x212ff781dd8 <col:17> 'u32':'unsigned int' <LValueToRValue>
    |         `-DeclRefExpr 0x212ff781da0 <col:17> 'u32':'unsigned int' lvalue Var 0x212ff77dc38 'mask' 'u32':'unsigned int'
    |-BinaryOperator 0x212ff782090 <line:463:5, col:38> 'u32':'unsigned int' '='
    | |-DeclRefExpr 0x212ff781e78 <col:5> 'u32':'unsigned int' lvalue Var 0x212ff77d908 'g0' 'u32':'unsigned int'
    | `-CStyleCastExpr 0x212ff782068 <col:10, col:38> 'u32':'unsigned int' <IntegralCast>
    |   `-ParenExpr 0x212ff782048 <col:15, col:38> 'u64':'unsigned long long'
    |     `-BinaryOperator 0x212ff781ff8 <col:16, col:37> 'u64':'unsigned long long' '='
    |       |-DeclRefExpr 0x212ff781e98 <col:16> 'u64':'unsigned long long' lvalue Var 0x212ff77dba8 't' 'u64':'unsigned long long'
    |       `-BinaryOperator 0x212ff781fd8 <col:20, col:37> 'unsigned long long' '+'
    |         |-CStyleCastExpr 0x212ff781f00 <col:20, col:25> 'u64':'unsigned long long' <IntegralCast>
    |         | `-ImplicitCastExpr 0x212ff781ee8 <col:25> 'u32':'unsigned int' <LValueToRValue> part_of_explicit_cast
    |         |   `-DeclRefExpr 0x212ff781eb8 <col:25> 'u32':'unsigned int' lvalue Var 0x212ff77d908 'g0' 'u32':'unsigned int'
    |         `-ImplicitCastExpr 0x212ff781fc0 <col:30, col:37> 'unsigned long long' <IntegralCast>
    |           `-ImplicitCastExpr 0x212ff781fa8 <col:30, col:37> 'u32':'unsigned int' <LValueToRValue>
    |             `-ArraySubscriptExpr 0x212ff781f88 <col:30, col:37> 'const u32':'const unsigned int' lvalue
    |               |-ImplicitCastExpr 0x212ff781f70 <col:30> 'const u32 *':'const u32 *' <LValueToRValue>
    |               | `-DeclRefExpr 0x212ff781f28 <col:30> 'const u32 *':'const u32 *' lvalue ParmVar 0x212ff77d320 'nonce' 'const u32 *':'const u32 *'
    |               `-IntegerLiteral 0x212ff781f48 <col:36> 'int' 0
    |-BinaryOperator 0x212ff7843b8 <line:464:5, col:50> 'u32':'unsigned int' '='
    | |-DeclRefExpr 0x212ff7820b0 <col:5> 'u32':'unsigned int' lvalue Var 0x212ff77d980 'g1' 'u32':'unsigned int'
    | `-CStyleCastExpr 0x212ff784390 <col:10, col:50> 'u32':'unsigned int' <IntegralCast>
    |   `-ParenExpr 0x212ff784370 <col:15, col:50> 'u64':'unsigned long long'
    |     `-BinaryOperator 0x212ff784320 <col:16, col:49> 'u64':'unsigned long long' '='
    |       |-DeclRefExpr 0x212ff7820d0 <col:16> 'u64':'unsigned long long' lvalue Var 0x212ff77dba8 't' 'u64':'unsigned long long'
    |       `-BinaryOperator 0x212ff784300 <col:20, col:49> 'unsigned long long' '+'
    |         |-BinaryOperator 0x212ff784230 <col:20, col:38> 'unsigned long long' '+'
    |         | |-CStyleCastExpr 0x212ff782138 <col:20, col:25> 'u64':'unsigned long long' <IntegralCast>
    |         | | `-ImplicitCastExpr 0x212ff782120 <col:25> 'u32':'unsigned int' <LValueToRValue> part_of_explicit_cast
    |         | |   `-DeclRefExpr 0x212ff7820f0 <col:25> 'u32':'unsigned int' lvalue Var 0x212ff77d980 'g1' 'u32':'unsigned int'
    |         | `-ParenExpr 0x212ff784210 <col:30, col:38> 'u64':'unsigned long long'
    |         |   `-BinaryOperator 0x212ff7821c0 <col:31, col:36> 'u64':'unsigned long long' '>>'
    |         |     |-ImplicitCastExpr 0x212ff7821a8 <col:31> 'u64':'unsigned long long' <LValueToRValue>
    |         |     | `-DeclRefExpr 0x212ff782160 <col:31> 'u64':'unsigned long long' lvalue Var 0x212ff77dba8 't' 'u64':'unsigned long long'
    |         |     `-IntegerLiteral 0x212ff782180 <col:36> 'int' 32
    |         `-ImplicitCastExpr 0x212ff7842e8 <col:42, col:49> 'unsigned long long' <IntegralCast>
    |           `-ImplicitCastExpr 0x212ff7842d0 <col:42, col:49> 'u32':'unsigned int' <LValueToRValue>
    |             `-ArraySubscriptExpr 0x212ff7842b0 <col:42, col:49> 'const u32':'const unsigned int' lvalue
    |               |-ImplicitCastExpr 0x212ff784298 <col:42> 'const u32 *':'const u32 *' <LValueToRValue>
    |               | `-DeclRefExpr 0x212ff784250 <col:42> 'const u32 *':'const u32 *' lvalue ParmVar 0x212ff77d320 'nonce' 'const u32 *':'const u32 *'
    |               `-IntegerLiteral 0x212ff784270 <col:48> 'int' 1
    |-BinaryOperator 0x212ff7846b0 <line:465:5, col:50> 'u32':'unsigned int' '='
    | |-DeclRefExpr 0x212ff7843d8 <col:5> 'u32':'unsigned int' lvalue Var 0x212ff77d9f8 'g2' 'u32':'unsigned int'
    | `-CStyleCastExpr 0x212ff784688 <col:10, col:50> 'u32':'unsigned int' <IntegralCast>
    |   `-ParenExpr 0x212ff784668 <col:15, col:50> 'u64':'unsigned long long'
    |     `-BinaryOperator 0x212ff784618 <col:16, col:49> 'u64':'unsigned long long' '='
    |       |-DeclRefExpr 0x212ff7843f8 <col:16> 'u64':'unsigned long long' lvalue Var 0x212ff77dba8 't' 'u64':'unsigned long long'
    |       `-BinaryOperator 0x212ff7845f8 <col:20, col:49> 'unsigned long long' '+'
    |         |-BinaryOperator 0x212ff784528 <col:20, col:38> 'unsigned long long' '+'
    |         | |-CStyleCastExpr 0x212ff784460 <col:20, col:25> 'u64':'unsigned long long' <IntegralCast>
    |         | | `-ImplicitCastExpr 0x212ff784448 <col:25> 'u32':'unsigned int' <LValueToRValue> part_of_explicit_cast
    |         | |   `-DeclRefExpr 0x212ff784418 <col:25> 'u32':'unsigned int' lvalue Var 0x212ff77d9f8 'g2' 'u32':'unsigned int'
    |         | `-ParenExpr 0x212ff784508 <col:30, col:38> 'u64':'unsigned long long'
    |         |   `-BinaryOperator 0x212ff7844e8 <col:31, col:36> 'u64':'unsigned long long' '>>'
    |         |     |-ImplicitCastExpr 0x212ff7844d0 <col:31> 'u64':'unsigned long long' <LValueToRValue>
    |         |     | `-DeclRefExpr 0x212ff784488 <col:31> 'u64':'unsigned long long' lvalue Var 0x212ff77dba8 't' 'u64':'unsigned long long'
    |         |     `-IntegerLiteral 0x212ff7844a8 <col:36> 'int' 32
    |         `-ImplicitCastExpr 0x212ff7845e0 <col:42, col:49> 'unsigned long long' <IntegralCast>
    |           `-ImplicitCastExpr 0x212ff7845c8 <col:42, col:49> 'u32':'unsigned int' <LValueToRValue>
    |             `-ArraySubscriptExpr 0x212ff7845a8 <col:42, col:49> 'const u32':'const unsigned int' lvalue
    |               |-ImplicitCastExpr 0x212ff784590 <col:42> 'const u32 *':'const u32 *' <LValueToRValue>
    |               | `-DeclRefExpr 0x212ff784548 <col:42> 'const u32 *':'const u32 *' lvalue ParmVar 0x212ff77d320 'nonce' 'const u32 *':'const u32 *'
    |               `-IntegerLiteral 0x212ff784568 <col:48> 'int' 2
    |-BinaryOperator 0x212ff7849a8 <line:466:5, col:50> 'u32':'unsigned int' '='
    | |-DeclRefExpr 0x212ff7846d0 <col:5> 'u32':'unsigned int' lvalue Var 0x212ff77da70 'g3' 'u32':'unsigned int'
    | `-CStyleCastExpr 0x212ff784980 <col:10, col:50> 'u32':'unsigned int' <IntegralCast>
    |   `-ParenExpr 0x212ff784960 <col:15, col:50> 'u64':'unsigned long long'
    |     `-BinaryOperator 0x212ff784910 <col:16, col:49> 'u64':'unsigned long long' '='
    |       |-DeclRefExpr 0x212ff7846f0 <col:16> 'u64':'unsigned long long' lvalue Var 0x212ff77dba8 't' 'u64':'unsigned long long'
    |       `-BinaryOperator 0x212ff7848f0 <col:20, col:49> 'unsigned long long' '+'
    |         |-BinaryOperator 0x212ff784820 <col:20, col:38> 'unsigned long long' '+'
    |         | |-CStyleCastExpr 0x212ff784758 <col:20, col:25> 'u64':'unsigned long long' <IntegralCast>
    |         | | `-ImplicitCastExpr 0x212ff784740 <col:25> 'u32':'unsigned int' <LValueToRValue> part_of_explicit_cast
    |         | |   `-DeclRefExpr 0x212ff784710 <col:25> 'u32':'unsigned int' lvalue Var 0x212ff77da70 'g3' 'u32':'unsigned int'
    |         | `-ParenExpr 0x212ff784800 <col:30, col:38> 'u64':'unsigned long long'
    |         |   `-BinaryOperator 0x212ff7847e0 <col:31, col:36> 'u64':'unsigned long long' '>>'
    |         |     |-ImplicitCastExpr 0x212ff7847c8 <col:31> 'u64':'unsigned long long' <LValueToRValue>
    |         |     | `-DeclRefExpr 0x212ff784780 <col:31> 'u64':'unsigned long long' lvalue Var 0x212ff77dba8 't' 'u64':'unsigned long long'
    |         |     `-IntegerLiteral 0x212ff7847a0 <col:36> 'int' 32
    |         `-ImplicitCastExpr 0x212ff7848d8 <col:42, col:49> 'unsigned long long' <IntegralCast>
    |           `-ImplicitCastExpr 0x212ff7848c0 <col:42, col:49> 'u32':'unsigned int' <LValueToRValue>
    |             `-ArraySubscriptExpr 0x212ff7848a0 <col:42, col:49> 'const u32':'const unsigned int' lvalue
    |               |-ImplicitCastExpr 0x212ff784888 <col:42> 'const u32 *':'const u32 *' <LValueToRValue>
    |               | `-DeclRefExpr 0x212ff784840 <col:42> 'const u32 *':'const u32 *' lvalue ParmVar 0x212ff77d320 'nonce' 'const u32 *':'const u32 *'
    |               `-IntegerLiteral 0x212ff784860 <col:48> 'int' 3
    |-ParenExpr 0x212ff784bb0 <line:71:22, col:40> 'u32':'unsigned int'
    | `-BinaryOperator 0x212ff784b90 <col:23, col:39> 'u32':'unsigned int' '='
    |   |-UnaryOperator 0x212ff784b20 <col:23, col:33> 'u32':'unsigned int' lvalue prefix '*' cannot overflow
    |   | `-CStyleCastExpr 0x212ff784af8 <col:24, col:33> 'u32 *' <BitCast>
    |   |   `-ParenExpr 0x212ff784ad8 <col:31, col:33> 'unsigned char *':'unsigned char *'
    |   |     `-BinaryOperator 0x212ff784a28 <line:468:12, col:18> 'unsigned char *':'unsigned char *' '+'
    |   |       |-ImplicitCastExpr 0x212ff784a10 <col:12> 'unsigned char *':'unsigned char *' <LValueToRValue>
    |   |       | `-DeclRefExpr 0x212ff7849c8 <col:12> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x212ff77d1a0 'mac' 'unsigned char *':'unsigned char *'
    |   |       `-IntegerLiteral 0x212ff7849e8 <col:18> 'int' 0
    |   `-ImplicitCastExpr 0x212ff784b78 <line:71:37, col:39> 'u32':'unsigned int' <LValueToRValue>
    |     `-ParenExpr 0x212ff784b58 <col:37, col:39> 'u32':'unsigned int' lvalue
    |       `-DeclRefExpr 0x212ff784b38 <line:468:21> 'u32':'unsigned int' lvalue Var 0x212ff77d908 'g0' 'u32':'unsigned int'
    |-ParenExpr 0x212ff784d58 <line:71:22, col:40> 'u32':'unsigned int'
    | `-BinaryOperator 0x212ff784d38 <col:23, col:39> 'u32':'unsigned int' '='
    |   |-UnaryOperator 0x212ff784cc8 <col:23, col:33> 'u32':'unsigned int' lvalue prefix '*' cannot overflow
    |   | `-CStyleCastExpr 0x212ff784ca0 <col:24, col:33> 'u32 *' <BitCast>
    |   |   `-ParenExpr 0x212ff784c80 <col:31, col:33> 'unsigned char *':'unsigned char *'
    |   |     `-BinaryOperator 0x212ff784c30 <line:469:12, col:18> 'unsigned char *':'unsigned char *' '+'
    |   |       |-ImplicitCastExpr 0x212ff784c18 <col:12> 'unsigned char *':'unsigned char *' <LValueToRValue>
    |   |       | `-DeclRefExpr 0x212ff784bd0 <col:12> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x212ff77d1a0 'mac' 'unsigned char *':'unsigned char *'
    |   |       `-IntegerLiteral 0x212ff784bf0 <col:18> 'int' 4
    |   `-ImplicitCastExpr 0x212ff784d20 <line:71:37, col:39> 'u32':'unsigned int' <LValueToRValue>
    |     `-ParenExpr 0x212ff784d00 <col:37, col:39> 'u32':'unsigned int' lvalue
    |       `-DeclRefExpr 0x212ff784ce0 <line:469:21> 'u32':'unsigned int' lvalue Var 0x212ff77d980 'g1' 'u32':'unsigned int'
    |-ParenExpr 0x212ff784f00 <line:71:22, col:40> 'u32':'unsigned int'
    | `-BinaryOperator 0x212ff784ee0 <col:23, col:39> 'u32':'unsigned int' '='
    |   |-UnaryOperator 0x212ff784e70 <col:23, col:33> 'u32':'unsigned int' lvalue prefix '*' cannot overflow
    |   | `-CStyleCastExpr 0x212ff784e48 <col:24, col:33> 'u32 *' <BitCast>
    |   |   `-ParenExpr 0x212ff784e28 <col:31, col:33> 'unsigned char *':'unsigned char *'
    |   |     `-BinaryOperator 0x212ff784dd8 <line:470:12, col:18> 'unsigned char *':'unsigned char *' '+'
    |   |       |-ImplicitCastExpr 0x212ff784dc0 <col:12> 'unsigned char *':'unsigned char *' <LValueToRValue>
    |   |       | `-DeclRefExpr 0x212ff784d78 <col:12> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x212ff77d1a0 'mac' 'unsigned char *':'unsigned char *'
    |   |       `-IntegerLiteral 0x212ff784d98 <col:18> 'int' 8
    |   `-ImplicitCastExpr 0x212ff784ec8 <line:71:37, col:39> 'u32':'unsigned int' <LValueToRValue>
    |     `-ParenExpr 0x212ff784ea8 <col:37, col:39> 'u32':'unsigned int' lvalue
    |       `-DeclRefExpr 0x212ff784e88 <line:470:21> 'u32':'unsigned int' lvalue Var 0x212ff77d9f8 'g2' 'u32':'unsigned int'
    `-ParenExpr 0x212ff7850a8 <line:71:22, col:40> 'u32':'unsigned int'
      `-BinaryOperator 0x212ff785088 <col:23, col:39> 'u32':'unsigned int' '='
        |-UnaryOperator 0x212ff785018 <col:23, col:33> 'u32':'unsigned int' lvalue prefix '*' cannot overflow
        | `-CStyleCastExpr 0x212ff784ff0 <col:24, col:33> 'u32 *' <BitCast>
        |   `-ParenExpr 0x212ff784fd0 <col:31, col:33> 'unsigned char *':'unsigned char *'
        |     `-BinaryOperator 0x212ff784f80 <line:471:12, col:18> 'unsigned char *':'unsigned char *' '+'
        |       |-ImplicitCastExpr 0x212ff784f68 <col:12> 'unsigned char *':'unsigned char *' <LValueToRValue>
        |       | `-DeclRefExpr 0x212ff784f20 <col:12> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x212ff77d1a0 'mac' 'unsigned char *':'unsigned char *'
        |       `-IntegerLiteral 0x212ff784f40 <col:18> 'int' 12
        `-ImplicitCastExpr 0x212ff785070 <line:71:37, col:39> 'u32':'unsigned int' <LValueToRValue>
          `-ParenExpr 0x212ff785050 <col:37, col:39> 'u32':'unsigned int' lvalue
            `-DeclRefExpr 0x212ff785030 <line:471:22> 'u32':'unsigned int' lvalue Var 0x212ff77da70 'g3' 'u32':'unsigned int'
