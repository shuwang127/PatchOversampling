TranslationUnitDecl 0x2339f1c3d08 <<invalid sloc>> <invalid sloc> <undeserialized declarations>
|-TypedefDecl 0x2339f1c45a0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x2339f1c42a0 '__int128'
|-TypedefDecl 0x2339f1c4610 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x2339f1c42c0 'unsigned __int128'
|-TypedefDecl 0x2339f1c4948 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x2339f1c4700 'struct __NSConstantString_tag'
|   `-Record 0x2339f1c4668 '__NSConstantString_tag'
|-TypedefDecl 0x2339f1c49b8 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x2339f1c3ee0 'unsigned long long'
|-TypedefDecl 0x2339f1c4a50 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x2339f1c4a10 'char *'
|   `-BuiltinType 0x2339f1c3da0 'char'
|-TypedefDecl 0x2339f1c4ac0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x2339f1c4a10 'char *'
|   `-BuiltinType 0x2339f1c3da0 'char'
|-TypedefDecl 0x2339f1c4b30 <D:\LLVM\lib\clang\10.0.0\include\stddef.h:35:1, col:26> col:26 ptrdiff_t 'long long'
| `-BuiltinType 0x2339f1c3e40 'long long'
|-TypedefDecl 0x2339f1c4ba0 prev 0x2339f1c49b8 <line:46:1, col:23> col:23 size_t 'unsigned long long'
| `-BuiltinType 0x2339f1c3ee0 'unsigned long long'
|-TypedefDecl 0x2339f1c4c28 <line:60:1, col:23> col:23 rsize_t 'unsigned long long'
| `-BuiltinType 0x2339f1c3ee0 'unsigned long long'
|-TypedefDecl 0x2339f1c4c98 <line:74:1, col:24> col:24 wchar_t 'unsigned short'
| `-BuiltinType 0x2339f1c3e80 'unsigned short'
|-ImportDecl 0x233a0b90ee0 <line:102:1> col:1 implicit _Builtin_stddef_max_align_t
|-TypedefDecl 0x233a0b90f38 <D:\Microsoft Visual Studio 12.0\VC\include\sys/types.h:40:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x2339f1c3e20 'long'
|-TypedefDecl 0x233a0b90fa8 <line:45:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x2339f1c3e40 'long long'
|-TypedefDecl 0x233a0b91030 <line:53:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x233a0b91000 '__time64_t' sugar
|   |-Typedef 0x233a0b90fa8 '__time64_t'
|   `-BuiltinType 0x2339f1c3e40 'long long'
|-TypedefDecl 0x233a0b910a0 <line:61:1, col:24> col:24 _ino_t 'unsigned short'
| `-BuiltinType 0x2339f1c3e80 'unsigned short'
|-TypedefDecl 0x233a0b91110 <line:65:1, col:24> col:24 ino_t 'unsigned short'
| `-BuiltinType 0x2339f1c3e80 'unsigned short'
|-TypedefDecl 0x233a0b91180 <line:74:1, col:22> col:22 _dev_t 'unsigned int'
| `-BuiltinType 0x2339f1c3ea0 'unsigned int'
|-TypedefDecl 0x233a0b911f0 <line:78:1, col:22> col:22 dev_t 'unsigned int'
| `-BuiltinType 0x2339f1c3ea0 'unsigned int'
|-TypedefDecl 0x233a0b91260 <line:87:1, col:14> col:14 _off_t 'long'
| `-BuiltinType 0x2339f1c3e20 'long'
|-TypedefDecl 0x233a0b912d0 <line:91:1, col:14> col:14 off_t 'long'
| `-BuiltinType 0x2339f1c3e20 'long'
|-TypedefDecl 0x233a0b91390 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x2339f1c3ee0 'unsigned long long'
|-TypedefDecl 0x233a0b91400 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x2339f1c4a10 'char *'
|   `-BuiltinType 0x2339f1c3da0 'char'
|-FunctionDecl 0x233a0b91650 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x233a0b916f0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x233a0b91760 <col:21> Implicit
|-FunctionDecl 0x233a0b917b8 prev 0x233a0b91650 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x233a0b914e8 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x233a0b918a8 <col:21> Inherited Implicit
|-TypedefDecl 0x233a0b91960 prev 0x233a0b918d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x2339f1c3ee0 'unsigned long long'
|-TypedefDecl 0x233a0b919f0 prev 0x2339f1c4c28 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x233a0b919c0 'size_t' sugar
|   |-Typedef 0x233a0b91960 'size_t'
|   `-BuiltinType 0x2339f1c3ee0 'unsigned long long'
|-TypedefDecl 0x233a0b91a78 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x2339f1c3e40 'long long'
|-TypedefDecl 0x233a0b91ae8 prev 0x2339f1c4b30 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x2339f1c3e40 'long long'
|-TypedefDecl 0x233a0b91b70 prev 0x2339f1c4c98 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x2339f1c3e80 'unsigned short'
|-TypedefDecl 0x233a0b91bf8 <line:541:1, col:24> col:24 wint_t 'unsigned short'
| `-BuiltinType 0x2339f1c3e80 'unsigned short'
|-TypedefDecl 0x233a0b91c68 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x2339f1c3e80 'unsigned short'
|-TypedefDecl 0x233a0b91cd8 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x2339f1c3e00 'int'
|-FunctionDecl 0x233a0d432c0 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x233a0d434e8 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x233a0d43a90 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x233a0d43628 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x233a0d436a0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x233a0d43718 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x233a0d43798 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x233a0d43830 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x233a0d43b70 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x233a0d43c30 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x233a0d43da0 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x233a0d43d50 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x233a0d43cf0 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x233a0d43c10 'struct threadlocaleinfostruct'
|       `-Record 0x233a0d4d878 'threadlocaleinfostruct'
|-TypedefDecl 0x233a0d43eb0 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x233a0d43e60 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x233a0d43e00 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x233a0d43cd0 'struct threadmbcinfostruct'
|       `-Record 0x233a0d43c30 'threadmbcinfostruct'
|-RecordDecl 0x233a0d43f08 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x233a0d43fc0 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x233a0d44080 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x233a0d44110 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x233a0d441a0 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x233a0d44258 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x233a0d44200 'struct localeinfo_struct' sugar
|   `-RecordType 0x233a0d44060 'struct localeinfo_struct'
|     `-Record 0x233a0d43fc0 'localeinfo_struct'
|-TypedefDecl 0x233a0d4d3e0 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x233a0d4d390 'struct localeinfo_struct *'
|   `-ElaboratedType 0x233a0d44200 'struct localeinfo_struct' sugar
|     `-RecordType 0x233a0d44060 'struct localeinfo_struct'
|       `-Record 0x233a0d43fc0 'localeinfo_struct'
|-RecordDecl 0x233a0d4d458 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x233a0d4d510 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x233a0d4d588 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x233a0d4d648 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x233a0d4d6e0 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x233a0d4d750 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x233a0d4d808 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x233a0d4d7b0 'struct localerefcount' sugar
|   `-RecordType 0x233a0d4d4f0 'struct localerefcount'
|     `-Record 0x233a0d4d458 'localerefcount'
|-RecordDecl 0x233a0d4d878 prev 0x233a0d43b70 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x233a0d4d8f8 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x233a0d4d970 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x233a0d4d9e0 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x233a0d4da50 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x233a0d4dac0 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x233a0d4dc88 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x233a0d4dcf8 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x233a0d4dd68 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x233a0d4ddd8 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x233a0d4de48 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x233a0d4deb8 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x233a0d4df10 parent 0x2339f1c3d08 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x233a0d4e0a0 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x233a0d4e110 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x233a0d4e180 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x233a0d4e1f0 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x233a0d4e290 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x233a0d4e300 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x233a0d463a0 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x233a0d464d8 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x233a0d46588 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x233a0d46530 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x233a0d43c10 'struct threadlocaleinfostruct'
|     `-Record 0x233a0d4d878 'threadlocaleinfostruct'
|-FunctionDecl 0x233a0d469c0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:47:9, col:142> col:25 _memccpy 'void *(void *, const void *, int, size_t) __attribute__((cdecl))':'void *(void *, const void *, int, size_t)'
| |-ParmVarDecl 0x233a0d46610 <col:69, col:76> col:76 _Dst 'void *'
| |-ParmVarDecl 0x233a0d466c0 <col:87, col:100> col:100 _Src 'const void *'
| |-ParmVarDecl 0x233a0d46740 <col:111, col:115> col:115 _Val 'int'
| `-ParmVarDecl 0x233a0d467b8 <col:126, col:133> col:133 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x233a0d46d88 <line:48:54> col:54 implicit memchr 'void *(const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x233a0d46e28 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x233a0d46e90 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x233a0d46ef8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x233a0d46f78 prev 0x233a0d46d88 <col:38, col:150> col:54 memchr 'void *(const void *, int, unsigned long long)'
| |-ParmVarDecl 0x233a0d46ab0 <col:94, col:107> col:107 _Buf 'const void *'
| |-ParmVarDecl 0x233a0d46b30 <col:119, col:123> col:123 _Val 'int'
| `-ParmVarDecl 0x233a0d46ba8 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x233a0d523f8 <line:49:24, col:162> col:40 _memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x233a0d47060 <col:77, col:90> col:90 _Buf1 'const void *'
| |-ParmVarDecl 0x233a0d470e0 <col:125, col:138> col:138 _Buf2 'const void *'
| `-ParmVarDecl 0x233a0d47158 <col:150, col:157> col:157 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x233a0d52880 <line:50:24, col:192> col:40 _memicmp_l 'int (const void *, const void *, size_t, _locale_t) __attribute__((cdecl))':'int (const void *, const void *, size_t, _locale_t)'
| |-ParmVarDecl 0x233a0d524e0 <col:79, col:92> col:92 _Buf1 'const void *'
| |-ParmVarDecl 0x233a0d52560 <col:127, col:140> col:140 _Buf2 'const void *'
| |-ParmVarDecl 0x233a0d525d8 <col:152, col:159> col:159 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x233a0d52670 <col:175, col:185> col:185 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x233a0d52b88 <line:51:32> col:32 implicit memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x233a0d52c28 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x233a0d52c90 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x233a0d52cf8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x233a0d52d78 prev 0x233a0d52b88 <col:16, col:144> col:32 memcmp 'int (const void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x233a0d52970 <col:63, col:76> col:76 _Buf1 'const void *'
| |-ParmVarDecl 0x233a0d529f0 <col:107, col:120> col:120 _Buf2 'const void *'
| `-ParmVarDecl 0x233a0d52a68 <col:132, col:139> col:139 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x233a0d53138 <line:55:17> col:17 implicit memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x233a0d531d8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x233a0d53240 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x233a0d532a8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x233a0d553e0 prev 0x233a0d53138 <col:1, col:127> col:17 memcpy 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x233a0d52e60 <col:54, col:61> col:61 _Dst 'void *'
| |-ParmVarDecl 0x233a0d52ee0 <col:91, col:104> col:104 _Src 'const void *'
| `-ParmVarDecl 0x233a0d52f58 <col:115, col:122> col:122 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x233a0d55878 <line:57:9, col:191> col:26 memcpy_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x233a0d554e8 <col:82, col:89> col:89 _Dst 'void *'
| |-ParmVarDecl 0x233a0d55580 <col:100, col:108> col:108 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x233a0d55600 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x233a0d55678 <col:174, col:182> col:182 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x233a0d55c38 <line:94:25> col:25 implicit used memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x233a0d55cd8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x233a0d55d40 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x233a0d55da8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x233a0d55e28 prev 0x233a0d55c38 <col:9, col:107> col:25 used memset 'void *(void *, int, unsigned long long)'
| |-ParmVarDecl 0x233a0d55968 <col:62, col:69> col:69 _Dst 'void *'
| |-ParmVarDecl 0x233a0d559e8 <col:80, col:84> col:84 _Val 'int'
| `-ParmVarDecl 0x233a0d55a60 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x233a0d562a8 <line:98:57> col:57 implicit memccpy 'void *(void *, const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x233a0d56348 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x233a0d533c0 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x233a0d53428 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x233a0d53490 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x233a0d53518 prev 0x233a0d562a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:98:187> col:57 memccpy 'void *(void *, const void *, int, unsigned long long)'
| |-ParmVarDecl 0x233a0d55ff0 <col:95, col:102> col:102 _Dst 'void *'
| |-ParmVarDecl 0x233a0d56070 <col:136, col:149> col:149 _Src 'const void *'
| |-ParmVarDecl 0x233a0d560f0 <col:160, col:164> col:164 _Val 'int'
| |-ParmVarDecl 0x233a0d56168 <col:175, col:182> col:182 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x233a0d535d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memccpy. See online help for details." ""
|-FunctionDecl 0x233a0d539b8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:99:190> col:69 memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x233a0d537a0 <col:105, col:118> col:118 _Buf1 'const void *'
| |-ParmVarDecl 0x233a0d53820 <col:153, col:166> col:166 _Buf2 'const void *'
| |-ParmVarDecl 0x233a0d53898 <col:178, col:185> col:185 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x233a0d53a70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memicmp. See online help for details." ""
|-FunctionDecl 0x233a0d53e60 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:105:40, col:144> col:56 _strset_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x233a0d53b98 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x233a0d53c10 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| `-ParmVarDecl 0x233a0d53c90 <col:134, col:138> col:138 _Value 'int'
|-FunctionDecl 0x233a0d54230 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:107:88 _strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x233a0d54040 <col:108, col:114> col:114 _Dest 'char *'
| |-ParmVarDecl 0x233a0d540c0 <col:126, col:131> col:131 _Value 'int'
| `-DeprecatedAttr 0x233a0d542e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x233a0d547a0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:109:40, col:158> col:56 strcpy_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x233a0d544d0 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x233a0d54548 <col:112, col:120> col:120 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x233a0d545c8 <col:141, col:154> col:154 _Src 'const char *'
|-FunctionDecl 0x233a0d54b70 <line:112:88> col:88 implicit strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x233a0d54c10 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x233a0d54c78 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x233a0d54cf0 prev 0x233a0d54b70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:112:88 strcpy 'char *(char *, const char *)'
| |-ParmVarDecl 0x233a0d54980 <col:142, col:148> col:148 _Dest 'char *'
| |-ParmVarDecl 0x233a0d54a00 <col:162, col:176> col:176 _Source 'const char *'
| `-DeprecatedAttr 0x233a0d54da0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x233a0d550f8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:114:40, col:161> col:56 strcat_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x233a0d54ee8 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x233a0d54f60 <col:115, col:123> col:123 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x233a0d54fe0 <col:144, col:157> col:157 _Src 'const char *'
|-FunctionDecl 0x233a0d4e3d8 <line:118:88> col:88 implicit strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x233a0d4e478 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x233a0d4e4e0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x233a0d4e558 prev 0x233a0d4e3d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:118:88 strcat 'char *(char *, const char *)'
| |-ParmVarDecl 0x233a0d552a0 <col:170, col:176> col:176 _Dest 'char *'
| |-ParmVarDecl 0x233a0d55320 <col:190, col:204> col:204 _Source 'const char *'
| `-DeprecatedAttr 0x233a0d4e608 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x233a0d4e940 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:120:32> col:32 implicit strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x233a0d4e9e0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x233a0d4ea48 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x233a0d4eac0 prev 0x233a0d4e940 <col:16, col:91> col:32 strcmp 'int (const char *, const char *)'
| |-ParmVarDecl 0x233a0d4e750 <col:46, col:59> col:59 _Str1 'const char *'
| `-ParmVarDecl 0x233a0d4e7d0 <col:73, col:86> col:86 _Str2 'const char *'
|-FunctionDecl 0x233a0d4ed10 <line:121:32> col:32 implicit used strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x233a0d4edb0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x233a0d4ee20 prev 0x233a0d4ed10 <col:16, col:63> col:32 used strlen 'unsigned long long (const char *)'
| `-ParmVarDecl 0x233a0d4eba0 <col:46, col:59> col:59 _Str 'const char *'
|-FunctionDecl 0x233a0d4f118 <line:125:1, col:92> col:17 used strnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x233a0d4eef8 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x233a0d4ef70 <col:76, col:83> col:83 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x233a0d4f380 <line:127:16, line:133:1> line:130:19 strnlen_s 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' static inline
| |-ParmVarDecl 0x233a0d4f1f8 <col:56, col:69> col:69 used _Str 'const char *'
| |-ParmVarDecl 0x233a0d4f270 <col:80, col:87> col:87 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x233a0d4f6b8 <line:131:1, line:133:1>
|   `-ReturnStmt 0x233a0d4f6a8 <line:132:5, col:51>
|     `-ConditionalOperator 0x233a0d4f678 <col:12, col:51> 'unsigned long long'
|       |-ParenExpr 0x233a0d4f4e0 <col:12, col:20> 'int'
|       | `-BinaryOperator 0x233a0d4f4c0 <col:13, col:19> 'int' '=='
|       |   |-ImplicitCastExpr 0x233a0d4f490 <col:13> 'const char *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x233a0d4f448 <col:13> 'const char *' lvalue ParmVar 0x233a0d4f1f8 '_Str' 'const char *'
|       |   `-ImplicitCastExpr 0x233a0d4f4a8 <col:19> 'const char *' <NullToPointer>
|       |     `-IntegerLiteral 0x233a0d4f468 <col:19> 'int' 0
|       |-ImplicitCastExpr 0x233a0d4f660 <col:24> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x233a0d4f500 <col:24> 'int' 0
|       `-CallExpr 0x233a0d4f600 <col:28, col:51> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x233a0d4f5e8 <col:28> 'size_t (*)(const char *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x233a0d4f528 <col:28> 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' Function 0x233a0d4f118 'strnlen' 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
|         |-ImplicitCastExpr 0x233a0d4f630 <col:36> 'const char *' <LValueToRValue>
|         | `-DeclRefExpr 0x233a0d4f548 <col:36> 'const char *' lvalue ParmVar 0x233a0d4f1f8 '_Str' 'const char *'
|         `-ImplicitCastExpr 0x233a0d4f648 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x233a0d4f568 <col:42> 'size_t':'unsigned long long' lvalue ParmVar 0x233a0d4f270 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x233a0d4f990 <line:136:28, col:209> col:44 memmove_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x233a0d4f6e8 <col:100, col:107> col:107 _Dst 'void *'
| |-ParmVarDecl 0x233a0d4f760 <col:118, col:126> col:126 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x233a0d4f7e0 <col:168, col:181> col:181 _Src 'const void *'
| `-ParmVarDecl 0x233a0d4f858 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x233a0d4fc98 <line:139:67> col:67 implicit memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x233a0d4fd38 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x233a0d4fda0 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x233a0d4fe08 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x233a0d4fe88 prev 0x233a0d4fc98 <col:51, col:186> col:67 memmove 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x233a0d4fa80 <col:109, col:116> col:116 _Dst 'void *'
| |-ParmVarDecl 0x233a0d4fb00 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x233a0d4fb78 <col:174, col:181> col:181 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x233a0d500b8 <line:146:24, col:76> col:40 _strdup 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| `-ParmVarDecl 0x233a0d4ff70 <col:59, col:72> col:72 _Src 'const char *'
|-FunctionDecl 0x233a0d57400 <line:152:54> col:54 implicit strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x233a0d574a0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x233a0d57508 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x233a0d57580 prev 0x233a0d57400 <col:38, col:100> col:54 strchr 'char *(const char *, int)'
| |-ParmVarDecl 0x233a0d50190 <col:68, col:81> col:81 _Str 'const char *'
| `-ParmVarDecl 0x233a0d50210 <col:92, col:96> col:96 _Val 'int'
|-FunctionDecl 0x233a0d577e0 <line:153:24, col:103> col:40 _stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x233a0d57660 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x233a0d576e0 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x233a0d57a40 <line:154:24, col:103> col:40 _strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x233a0d578c0 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x233a0d57940 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x233a0d57df8 <line:155:24, col:133> col:40 _stricmp_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x233a0d57b20 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x233a0d57ba0 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x233a0d57c18 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x233a0d58060 <line:156:24, col:103> col:40 strcoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x233a0d57ee0 <col:56, col:69> col:69 _Str1 'const char *'
| `-ParmVarDecl 0x233a0d57f60 <col:84, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x233a0d58358 <line:157:24, col:133> col:40 _strcoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x233a0d58140 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x233a0d581c0 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x233a0d58238 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x233a0d50558 <line:158:24, col:104> col:40 _stricoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x233a0d503d8 <col:58, col:71> col:71 _Str1 'const char *'
| `-ParmVarDecl 0x233a0d50458 <col:86, col:99> col:99 _Str2 'const char *'
|-FunctionDecl 0x233a0d50850 <line:159:24, col:134> col:40 _stricoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x233a0d50638 <col:60, col:73> col:73 _Str1 'const char *'
| |-ParmVarDecl 0x233a0d506b8 <col:88, col:101> col:101 _Str2 'const char *'
| `-ParmVarDecl 0x233a0d50730 <col:117, col:127> col:127 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x233a0d50c08 <line:160:24, col:167> col:40 _strncoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x233a0d50938 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x233a0d509b8 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x233a0d50a30 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x233a0d51070 <line:161:24, col:195> col:40 _strncoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x233a0d50cf0 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x233a0d50d70 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x233a0d50de8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x233a0d50e60 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x233a0da6f90 <line:162:24, col:167> col:40 _strnicoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x233a0d51160 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x233a0d511e0 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x233a0d51258 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x233a0da7328 <line:163:24, col:196> col:40 _strnicoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x233a0da7078 <col:80, col:93> col:93 _Str1 'const char *'
| |-ParmVarDecl 0x233a0da70f8 <col:127, col:140> col:140 _Str2 'const char *'
| |-ParmVarDecl 0x233a0da7170 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x233a0da71e8 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x233a0da7638 <line:164:40> col:40 implicit strcspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x233a0da76d8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x233a0da7740 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x233a0da77b8 prev 0x233a0da7638 <col:24, col:104> col:40 strcspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x233a0da7418 <col:56, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x233a0da7498 <col:83, col:96> col:96 _Control 'const char *'
|-FunctionDecl 0x233a0da7a70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:165:118> col:77 _strerror 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x233a0da7990 <col:98, col:111> col:111 _ErrMsg 'const char *'
| `-DeprecatedAttr 0x233a0da7b18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x233a0da7ef0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:166:28, col:155> col:44 _strerror_s 'errno_t (char *, size_t, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *)'
| |-ParmVarDecl 0x233a0da7c60 <col:85, col:92> col:92 _Buf 'char *'
| |-ParmVarDecl 0x233a0da7cd8 <col:103, col:110> col:110 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x233a0da7d58 <col:135, col:148> col:148 _ErrMsg 'const char *'
|-FunctionDecl 0x233a0da61f8 <line:168:76> col:76 implicit strerror 'char *(int)' extern
| `-ParmVarDecl 0x233a0da6298 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x233a0da6308 prev 0x233a0da61f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:168:93> col:76 strerror 'char *(int)'
| |-ParmVarDecl 0x233a0da60c0 <col:90> col:93 'int'
| `-DeprecatedAttr 0x233a0da63b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x233a0da6708 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:170:28, col:139> col:44 strerror_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x233a0da64f8 <col:84, col:91> col:91 _Buf 'char *'
| |-ParmVarDecl 0x233a0da6570 <col:102, col:109> col:109 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x233a0da65f0 <col:128, col:132> col:132 _ErrNum 'int'
|-FunctionDecl 0x233a0da6a08 <line:173:28, col:109> col:44 _strlwr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x233a0da67f0 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x233a0da6868 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x233a0da6cf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:175:79 _strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x233a0da6ba8 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x233a0da6da0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x233a0da41b0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:176:28, col:139> col:44 _strlwr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x233a0da6ee8 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x233a0da3f60 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x233a0da3fd8 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x233a0da4580 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:178:82 _strlwr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x233a0da4358 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x233a0da43d0 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x233a0da4630 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x233a0da4ae8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:180:40, col:206> col:56 strncat_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x233a0da4778 <col:98, col:105> col:105 _Dst 'char *'
| |-ParmVarDecl 0x233a0da47f0 <col:116, col:124> col:124 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x233a0da4870 <col:165, col:178> col:178 _Src 'const char *'
| `-ParmVarDecl 0x233a0da48e8 <col:189, col:197> col:197 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x233a0da7fe8 <line:186:83> col:83 implicit strncat 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x233a0da8088 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x233a0da80f0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x233a0da8158 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x233a0da81d8 prev 0x233a0da7fe8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:186:83 strncat 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x233a0da4c98 <col:161, col:167> col:167 _Dest 'char *'
| |-ParmVarDecl 0x233a0da4d18 <col:198, col:212> col:212 _Source 'const char *'
| |-ParmVarDecl 0x233a0da4d90 <col:226, col:234> col:234 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x233a0da8290 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x233a0da85f0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:188:40> col:40 implicit strncmp 'int (const char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x233a0da8690 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x233a0da86f8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x233a0da8760 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x233a0da87e0 prev 0x233a0da85f0 <col:24, col:163> col:40 strncmp 'int (const char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x233a0da83d8 <col:75, col:88> col:88 _Str1 'const char *'
| |-ParmVarDecl 0x233a0da8458 <col:122, col:135> col:135 _Str2 'const char *'
| `-ParmVarDecl 0x233a0da84d0 <col:147, col:154> col:154 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x233a0da8ae0 <line:189:24, col:165> col:40 _strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x233a0da88c8 <col:77, col:90> col:90 _Str1 'const char *'
| |-ParmVarDecl 0x233a0da8948 <col:124, col:137> col:137 _Str2 'const char *'
| `-ParmVarDecl 0x233a0da89c0 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x233a0da8e78 <line:190:24, col:195> col:40 _strnicmp_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x233a0da8bc8 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x233a0da8c48 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x233a0da8cc0 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x233a0da8d38 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x233a0da9258 <line:192:40, col:203> col:56 strncpy_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x233a0da8fb0 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x233a0da9028 <col:113, col:121> col:121 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x233a0da90a8 <col:162, col:175> col:175 _Src 'const char *'
| `-ParmVarDecl 0x233a0da9120 <col:186, col:194> col:194 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x233a0da9620 <line:195:83> col:83 implicit strncpy 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x233a0da96c0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x233a0da9728 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x233a0da9790 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x233a0da9810 prev 0x233a0da9620 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:195:83 strncpy 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x233a0da9408 <col:167, col:173> col:173 _Dest 'char *'
| |-ParmVarDecl 0x233a0da9488 <col:204, col:218> col:218 _Source 'const char *'
| |-ParmVarDecl 0x233a0da9500 <col:232, col:240> col:240 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x233a0da98c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x233a0da9d88 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:196:40, col:174> col:56 _strnset_s 'errno_t (char *, size_t, int, size_t) __attribute__((cdecl))':'errno_t (char *, size_t, int, size_t)'
| |-ParmVarDecl 0x233a0da9a10 <col:99, col:106> col:106 _Str 'char *'
| |-ParmVarDecl 0x233a0da9a88 <col:117, col:124> col:124 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x233a0da9b08 <col:143, col:147> col:147 _Val 'int'
| `-ParmVarDecl 0x233a0da9b80 <col:158, col:165> col:165 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x233a0daa228 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:198:83 _strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x233a0da9f38 <col:163, col:169> col:169 _Dest 'char *'
| |-ParmVarDecl 0x233a0da9fd8 <col:181, col:186> col:186 _Val 'int'
| |-ParmVarDecl 0x233a0daa050 <col:197, col:205> col:205 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x233a0daa2e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x233a0daa610 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:199:54> col:54 implicit strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x233a0daa6b0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x233a0daa718 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x233a0daa790 prev 0x233a0daa610 <col:38, col:116> col:54 strpbrk 'char *(const char *, const char *)'
| |-ParmVarDecl 0x233a0daa428 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x233a0daa4a8 <col:95, col:108> col:108 _Control 'const char *'
|-FunctionDecl 0x233a0daa9f0 <line:200:54> col:54 implicit strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x233a0daaa90 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x233a0daaaf8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x233a0daab70 prev 0x233a0daa9f0 <col:38, col:100> col:54 strrchr 'char *(const char *, int)'
| |-ParmVarDecl 0x233a0daa870 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x233a0daa8f0 <col:93, col:97> col:97 _Ch 'int'
|-FunctionDecl 0x233a0daad30 <line:201:9, col:54> col:25 _strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| `-ParmVarDecl 0x233a0daac50 <col:43, col:50> col:50 _Str 'char *'
|-FunctionDecl 0x233a0da4f70 <line:202:40> col:40 implicit strspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x233a0da5010 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x233a0da5078 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x233a0da50f0 prev 0x233a0da4f70 <col:24, col:101> col:40 strspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x233a0daae08 <col:54, col:67> col:67 _Str 'const char *'
| `-ParmVarDecl 0x233a0daae88 <col:80, col:93> col:93 _Control 'const char *'
|-FunctionDecl 0x233a0da5350 <line:203:70> col:70 implicit strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x233a0da53f0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x233a0da5458 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x233a0da54d0 prev 0x233a0da5350 <col:54, col:130> col:70 strstr 'char *(const char *, const char *)'
| |-ParmVarDecl 0x233a0da51d0 <col:84, col:97> col:97 _Str 'const char *'
| `-ParmVarDecl 0x233a0da5250 <col:110, col:123> col:123 _SubStr 'const char *'
|-FunctionDecl 0x233a0da57f0 <line:204:74> col:74 implicit strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x233a0da5890 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x233a0da58f8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x233a0da5970 prev 0x233a0da57f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:204:134> col:74 strtok 'char *(char *, const char *)'
| |-ParmVarDecl 0x233a0da5670 <col:95, col:102> col:102 _Str 'char *'
| |-ParmVarDecl 0x233a0da56f0 <col:115, col:128> col:128 _Delim 'const char *'
| `-DeprecatedAttr 0x233a0da5a20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x233a0da5e08 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:206:36, col:162> col:52 strtok_s 'char *(char *, const char *, char **) __attribute__((cdecl))':'char *(char *, const char *, char **)'
| |-ParmVarDecl 0x233a0da5b68 <col:75, col:82> col:82 _Str 'char *'
| |-ParmVarDecl 0x233a0da5be8 <col:95, col:108> col:108 _Delim 'const char *'
| `-ParmVarDecl 0x233a0da5c68 <col:146, col:154> col:154 _Context 'char **'
|-FunctionDecl 0x233a0db0118 <line:208:28, col:109> col:44 _strupr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x233a0da5ef0 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x233a0db0020 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x233a0db0398 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:210:79 _strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x233a0db02b8 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x233a0db0440 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x233a0db0790 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:211:28, col:130> col:44 _strupr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x233a0db0588 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x233a0db0600 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x233a0db0678 <col:113, col:123> col:123 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x233a0db0ab0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:213:82 _strupr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x233a0db0938 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x233a0db09b0 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x233a0db0b60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x233a0db0f70 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:214:44> col:44 implicit strxfrm 'unsigned long long (char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x233a0db1030 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x233a0db1098 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x233a0db1100 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x233a0db1180 prev 0x233a0db0f70 <col:28, col:155> col:44 strxfrm 'unsigned long long (char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x233a0db0ca8 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x233a0db0d28 <col:115, col:128> col:128 _Src 'const char *'
| `-ParmVarDecl 0x233a0db0da0 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x233a0db15d8 <line:215:28, col:185> col:44 _strxfrm_l 'size_t (char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x233a0db1268 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x233a0db12e8 <col:117, col:130> col:130 _Src 'const char *'
| |-ParmVarDecl 0x233a0db1360 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x233a0db13d8 <col:168, col:178> col:178 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x233a0db1880 <line:245:71> col:71 implicit strdup 'char *(const char *)' extern
| `-ParmVarDecl 0x233a0db1920 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x233a0db1990 prev 0x233a0db1880 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:245:106> col:71 strdup 'char *(const char *)'
| |-ParmVarDecl 0x233a0db17a0 <col:89, col:102> col:102 _Src 'const char *'
| `-DeprecatedAttr 0x233a0db1a38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strdup. See online help for details." ""
|-FunctionDecl 0x233a0db1d80 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:252:129> col:69 strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x233a0db1c00 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x233a0db1c80 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x233a0db1e30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strcmpi. See online help for details." ""
|-FunctionDecl 0x233a0db21c0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:253:129> col:69 stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x233a0db2040 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x233a0db20c0 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x233a0db2270 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details." ""
|-FunctionDecl 0x233a0db2518 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:254:84> col:56 strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x233a0db2438 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x233a0db25c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strlwr. See online help for details." ""
|-FunctionDecl 0x233a0db29d8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:255:193> col:70 strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x233a0db27c0 <col:106, col:119> col:119 _Str1 'const char *'
| |-ParmVarDecl 0x233a0db2840 <col:153, col:166> col:166 _Str 'const char *'
| |-ParmVarDecl 0x233a0db28b8 <col:177, col:184> col:184 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x233a0db2a90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnicmp. See online help for details." ""
|-FunctionDecl 0x233a0db2e70 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:256:143> col:57 strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x233a0db2c58 <col:94, col:101> col:101 _Str 'char *'
| |-ParmVarDecl 0x233a0db2cd8 <col:112, col:116> col:116 _Val 'int'
| |-ParmVarDecl 0x233a0db2d50 <col:127, col:134> col:134 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x233a0db2f28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnset. See online help for details." ""
|-FunctionDecl 0x233a0dac178 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:257:84> col:56 strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x233a0dac098 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x233a0dac220 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strrev. See online help for details." ""
|-FunctionDecl 0x233a0dac568 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:258:99> col:56 strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x233a0dac3e8 <col:73, col:80> col:80 _Str 'char *'
| |-ParmVarDecl 0x233a0dac468 <col:91, col:95> col:95 _Val 'int'
| `-DeprecatedAttr 0x233a0dac618 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strset. See online help for details." ""
|-FunctionDecl 0x233a0dac8c0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:259:84> col:56 strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x233a0dac7e0 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x233a0dac968 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strupr. See online help for details." ""
|-FunctionDecl 0x233a0dacc00 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:273:24, col:77> col:42 _wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| `-ParmVarDecl 0x233a0daca88 <col:57, col:73> col:73 _Str 'const wchar_t *'
|-FunctionDecl 0x233a0dacff0 <line:280:40, col:167> col:56 wcscat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x233a0daccd0 <col:97, col:107> col:107 _Dst 'wchar_t *'
| |-ParmVarDecl 0x233a0dacd48 <col:118, col:126> col:126 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x233a0dacdc0 <col:147, col:163> col:163 _Src 'const wchar_t *'
|-FunctionDecl 0x233a0dad3a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:284:82 wcscat 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x233a0dad190 <col:164, col:173> col:173 _Dest 'wchar_t *'
| |-ParmVarDecl 0x233a0dad208 <col:187, col:204> col:204 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x233a0dad458 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x233a0dad7b8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:288:41> col:41 implicit wcschr 'unsigned short *(const unsigned short *, unsigned short)' extern
| |-ParmVarDecl 0x233a0dad858 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x233a0dad8c0 <<invalid sloc>> <invalid sloc> 'unsigned short'
|-FunctionDecl 0x233a0dad938 prev 0x233a0dad7b8 <col:23, col:88> col:41 wcschr 'unsigned short *(const unsigned short *, unsigned short)'
| |-ParmVarDecl 0x233a0dad598 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x233a0dad610 <col:77, col:85> col:85 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x233a0dadc30 <line:289:36> col:36 implicit wcscmp 'int (const unsigned short *, const unsigned short *)' extern
| |-ParmVarDecl 0x233a0dadcd0 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x233a0dadd38 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x233a0daddb0 prev 0x233a0dadc30 <col:24, col:101> col:36 wcscmp 'int (const unsigned short *, const unsigned short *)'
| |-ParmVarDecl 0x233a0dada10 <col:50, col:66> col:66 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x233a0dada88 <col:80, col:96> col:96 _Str2 'const wchar_t *'
|-FunctionDecl 0x233a0dae0b0 <line:291:40, col:164> col:56 wcscpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x233a0dade88 <col:94, col:104> col:104 _Dst 'wchar_t *'
| |-ParmVarDecl 0x233a0dadf00 <col:115, col:123> col:123 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x233a0dadf78 <col:144, col:160> col:160 _Src 'const wchar_t *'
|-FunctionDecl 0x233a0dae3c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:294:82 wcscpy 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x233a0dae250 <col:136, col:145> col:145 _Dest 'wchar_t *'
| |-ParmVarDecl 0x233a0dae2c8 <col:159, col:176> col:176 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x233a0dae470 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x233a0dae7c8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:295:24, col:107> col:39 wcscspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x233a0dae5b0 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x233a0dae628 <col:83, col:99> col:99 _Control 'const wchar_t *'
|-FunctionDecl 0x233a0daea10 <line:296:39> col:39 implicit wcslen 'unsigned long long (const unsigned short *)' extern
| `-ParmVarDecl 0x233a0daeab0 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x233a0daeb20 prev 0x233a0daea10 <col:24, col:73> col:39 wcslen 'unsigned long long (const unsigned short *)'
| `-ParmVarDecl 0x233a0dae8a0 <col:53, col:69> col:69 _Str 'const wchar_t *'
|-FunctionDecl 0x233a0daee08 <line:300:1, col:94> col:16 used wcsnlen 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
| |-ParmVarDecl 0x233a0daebf0 <col:51, col:67> col:67 _Src 'const wchar_t *'
| `-ParmVarDecl 0x233a0daec68 <col:78, col:85> col:85 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x233a0dab030 <line:302:16, line:308:1> line:305:18 wcsnlen_s 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' static inline
| |-ParmVarDecl 0x233a0daeee0 <col:55, col:71> col:71 used _Src 'const wchar_t *'
| |-ParmVarDecl 0x233a0daef58 <col:82, col:89> col:89 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x233a0dab3c8 <line:306:1, line:308:1>
|   `-ReturnStmt 0x233a0dab3b8 <line:307:5, col:56>
|     `-ConditionalOperator 0x233a0dab388 <col:12, col:56> 'unsigned long long'
|       |-ParenExpr 0x233a0dab1f0 <col:12, col:25> 'int'
|       | `-BinaryOperator 0x233a0dab1d0 <col:13, D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:25> 'int' '=='
|       |   |-ImplicitCastExpr 0x233a0dab1a0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:307:13> 'const wchar_t *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x233a0dab0f8 <col:13> 'const wchar_t *' lvalue ParmVar 0x233a0daeee0 '_Src' 'const wchar_t *'
|       |   `-ImplicitCastExpr 0x233a0dab1b8 <D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:16, col:25> 'const wchar_t *' <BitCast>
|       |     `-ParenExpr 0x233a0dab180 <col:16, col:25> 'void *'
|       |       `-CStyleCastExpr 0x233a0dab158 <col:17, col:24> 'void *' <NullToPointer>
|       |         `-IntegerLiteral 0x233a0dab118 <col:24> 'int' 0
|       |-ImplicitCastExpr 0x233a0dab370 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:307:29> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x233a0dab210 <col:29> 'int' 0
|       `-CallExpr 0x233a0dab310 <col:33, col:56> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x233a0dab2f8 <col:33> 'size_t (*)(const wchar_t *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x233a0dab238 <col:33> 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' Function 0x233a0daee08 'wcsnlen' 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
|         |-ImplicitCastExpr 0x233a0dab340 <col:41> 'const wchar_t *' <LValueToRValue>
|         | `-DeclRefExpr 0x233a0dab258 <col:41> 'const wchar_t *' lvalue ParmVar 0x233a0daeee0 '_Src' 'const wchar_t *'
|         `-ImplicitCastExpr 0x233a0dab358 <col:47> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x233a0dab278 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x233a0daef58 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x233a0dab758 <line:311:40, col:212> col:56 wcsncat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x233a0dab3f0 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x233a0dab468 <col:119, col:127> col:127 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x233a0dab4e0 <col:168, col:184> col:184 _Src 'const wchar_t *'
| `-ParmVarDecl 0x233a0dab558 <col:195, col:203> col:203 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x233a0dabbc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:316:86 wcsncat 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x233a0dab900 <col:167, col:176> col:176 _Dest 'wchar_t *'
| |-ParmVarDecl 0x233a0dab978 <col:207, col:224> col:224 _Source 'const wchar_t *'
| |-ParmVarDecl 0x233a0dab9f0 <col:238, col:246> col:246 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x233a0dabc78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x233a0daf0f8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:318:36> col:36 implicit wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)' extern
| |-ParmVarDecl 0x233a0daf198 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| |-ParmVarDecl 0x233a0daf200 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x233a0daf268 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x233a0daf2e8 prev 0x233a0daf0f8 <col:24, col:165> col:36 wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)'
| |-ParmVarDecl 0x233a0dabdb8 <col:71, col:87> col:87 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x233a0dabe30 <col:121, col:137> col:137 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x233a0dabea8 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x233a0daf668 <line:320:40, col:209> col:56 wcsncpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x233a0daf3c8 <col:95, col:105> col:105 _Dst 'wchar_t *'
| |-ParmVarDecl 0x233a0daf440 <col:116, col:124> col:124 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x233a0daf4b8 <col:165, col:181> col:181 _Src 'const wchar_t *'
| `-ParmVarDecl 0x233a0daf530 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x233a0dafa18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:323:86 wcsncpy 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x233a0daf810 <col:179, col:188> col:188 _Dest 'wchar_t *'
| |-ParmVarDecl 0x233a0daf888 <col:219, col:236> col:236 _Source 'const wchar_t *'
| |-ParmVarDecl 0x233a0daf900 <col:250, col:258> col:258 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x233a0dafad0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x233a0dafe28 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:324:38, col:124> col:56 wcspbrk 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x233a0dafc10 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x233a0dafc88 <col:100, col:116> col:116 _Control 'const wchar_t *'
|-FunctionDecl 0x233a0db40c0 <line:325:38, col:109> col:56 wcsrchr 'wchar_t *(const wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(const wchar_t *, wchar_t)'
| |-ParmVarDecl 0x233a0daff00 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x233a0daff78 <col:98, col:106> col:106 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x233a0db4308 <line:326:24, col:106> col:39 wcsspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x233a0db4198 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x233a0db4210 <col:82, col:98> col:98 _Control 'const wchar_t *'
|-FunctionDecl 0x233a0db4550 <line:329:23, col:107> col:41 wcsstr 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x233a0db43e0 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x233a0db4458 <col:84, col:100> col:100 _SubStr 'const wchar_t *'
|-FunctionDecl 0x233a0db4858 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:330:142> col:76 wcstok 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x233a0db46e8 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x233a0db4760 <col:120, col:136> col:136 _Delim 'const wchar_t *'
| `-DeprecatedAttr 0x233a0db4908 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x233a0db4d70 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:332:36, col:173> col:54 wcstok_s 'wchar_t *(wchar_t *, const wchar_t *, wchar_t **) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x233a0db4a48 <col:77, col:87> col:87 _Str 'wchar_t *'
| |-ParmVarDecl 0x233a0db4ac0 <col:100, col:116> col:116 _Delim 'const wchar_t *'
| `-ParmVarDecl 0x233a0db4ba0 <col:154, col:165> col:165 _Context 'wchar_t **'
|-FunctionDecl 0x233a0db50a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:334:105> col:79 _wcserror 'wchar_t *(int) __attribute__((cdecl))':'wchar_t *(int)'
| |-ParmVarDecl 0x233a0db4f18 <col:94, col:98> col:98 _ErrNum 'int'
| `-DeprecatedAttr 0x233a0db5148 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x233a0db5550 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:335:28, col:147> col:44 _wcserror_s 'errno_t (wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, int)'
| |-ParmVarDecl 0x233a0db5288 <col:89, col:99> col:99 _Buf 'wchar_t *'
| |-ParmVarDecl 0x233a0db5300 <col:110, col:117> col:117 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x233a0db5380 <col:136, col:140> col:140 _ErrNum 'int'
|-FunctionDecl 0x233a0db5800 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:337:122> col:80 __wcserror 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x233a0db5728 <col:102, col:118> col:118 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x233a0db58a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x233a0db5c70 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:338:28, col:165> col:44 __wcserror_s 'errno_t (wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x233a0db59e8 <col:90, col:100> col:100 _Buffer 'wchar_t *'
| |-ParmVarDecl 0x233a0db5a60 <col:114, col:121> col:121 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x233a0db5ad8 <col:142, col:158> col:158 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x233a0db5ec8 <line:341:24, col:103> col:36 _wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x233a0db5d50 <col:52, col:68> col:68 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x233a0db5dc8 <col:82, col:98> col:98 _Str2 'const wchar_t *'
|-FunctionDecl 0x233a0dba318 <line:342:24, col:133> col:36 _wcsicmp_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x233a0db5fa0 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x233a0dba0c0 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x233a0dba138 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x233a0dba608 <line:343:24, col:167> col:36 _wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x233a0dba3f8 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x233a0dba470 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x233a0dba4e8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x233a0dbaa60 <line:344:24, col:197> col:36 _wcsnicmp_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x233a0dba6e8 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x233a0dba760 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x233a0dba7d8 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x233a0dba850 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x233a0dbaeb8 <line:345:40, col:181> col:56 _wcsnset_s 'errno_t (wchar_t *, size_t, wchar_t, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t, size_t)'
| |-ParmVarDecl 0x233a0dbab48 <col:99, col:109> col:109 _Dst 'wchar_t *'
| |-ParmVarDecl 0x233a0dbabc0 <col:120, col:127> col:127 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x233a0dbac38 <col:146, col:154> col:154 _Val 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x233a0dbacb0 <col:165, col:172> col:172 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x233a0db7350 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:347:86 _wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x233a0db7090 <col:172, col:181> col:181 _Str 'wchar_t *'
| |-ParmVarDecl 0x233a0db7108 <col:187, col:196> col:196 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x233a0db7180 <col:207, col:215> col:215 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x233a0db7408 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x233a0db76c0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:348:9, col:59> col:27 _wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| `-ParmVarDecl 0x233a0db7548 <col:45, col:55> col:55 _Str 'wchar_t *'
|-FunctionDecl 0x233a0db7a50 <line:349:40, col:159> col:56 _wcsset_s 'errno_t (wchar_t *, size_t, wchar_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t)'
| |-ParmVarDecl 0x233a0db7790 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x233a0db7808 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x233a0db7880 <col:145, col:153> col:153 _Value 'wchar_t':'unsigned short'
|-FunctionDecl 0x233a0db7e08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:351:85 _wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x233a0db7bf0 <col:150, col:159> col:159 _Str 'wchar_t *'
| |-ParmVarDecl 0x233a0db7c68 <col:165, col:174> col:174 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x233a0db7eb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x233a0db9258 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:353:28, col:126> col:44 _wcslwr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x233a0db7ff8 <col:86, col:96> col:96 _Str 'wchar_t *'
| `-ParmVarDecl 0x233a0db90b0 <col:107, col:114> col:114 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x233a0db94c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:355:82 _wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x233a0db93f0 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x233a0db9570 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x233a0db9970 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:356:28, col:156> col:44 _wcslwr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x233a0db96b0 <col:88, col:98> col:98 _Str 'wchar_t *'
| |-ParmVarDecl 0x233a0db9728 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x233a0db97a0 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x233a0db9d28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:358:85 _wcslwr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x233a0db9b10 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x233a0db9b88 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x233a0db9dd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x233a0db3050 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:359:28, col:112> col:44 _wcsupr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x233a0db9f18 <col:79, col:89> col:89 _Str 'wchar_t *'
| `-ParmVarDecl 0x233a0db9f90 <col:100, col:107> col:107 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x233a0db32c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:361:82 _wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x233a0db31e8 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x233a0db3368 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x233a0db36b0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:362:28, col:142> col:44 _wcsupr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x233a0db34a8 <col:81, col:91> col:91 _Str 'wchar_t *'
| |-ParmVarDecl 0x233a0db3520 <col:102, col:109> col:109 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x233a0db3598 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x233a0db39c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:364:85 _wcsupr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x233a0db3850 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x233a0db38c8 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x233a0db3a70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x233a0db3e70 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:365:28, col:159> col:43 wcsxfrm 'size_t (wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x233a0db3bb0 <col:93, col:103> col:103 _Dst 'wchar_t *'
| |-ParmVarDecl 0x233a0db3c28 <col:116, col:132> col:132 _Src 'const wchar_t *'
| `-ParmVarDecl 0x233a0db3ca0 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x233a0dbb348 <line:366:28, col:189> col:43 _wcsxfrm_l 'size_t (wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x233a0db3f50 <col:96, col:106> col:106 _Dst 'wchar_t *'
| |-ParmVarDecl 0x233a0db3fc8 <col:119, col:134> col:134 _Src 'const wchar_t *'
| |-ParmVarDecl 0x233a0dbb0d0 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x233a0dbb148 <col:172, col:182> col:182 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x233a0dbb5a8 <line:367:24, col:102> col:36 wcscoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x233a0dbb430 <col:51, col:67> col:67 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x233a0dbb4a8 <col:81, col:97> col:97 _Str2 'const wchar_t *'
|-FunctionDecl 0x233a0dbb890 <line:368:24, col:133> col:36 _wcscoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x233a0dbb680 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x233a0dbb6f8 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x233a0dbb770 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x233a0dbbae8 <line:369:24, col:104> col:36 _wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x233a0dbb970 <col:53, col:69> col:69 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x233a0dbb9e8 <col:83, col:99> col:99 _Str2 'const wchar_t *'
|-FunctionDecl 0x233a0dbbdd0 <line:370:24, col:133> col:36 _wcsicoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x233a0dbbbc0 <col:55, col:71> col:71 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x233a0dbbc38 <col:85, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x233a0dbbcb0 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x233a0dbc0e0 <line:371:24, col:167> col:36 _wcsncoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x233a0dbbeb0 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x233a0dbbf28 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x233a0dbbfa0 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x233a0dbc468 <line:372:24, col:197> col:36 _wcsncoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x233a0dbc1c0 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x233a0dbc238 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x233a0dbc2b0 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x233a0dbc328 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x233a0dbc760 <line:373:24, col:168> col:36 _wcsnicoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x233a0dbc550 <col:74, col:90> col:90 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x233a0dbc5c8 <col:124, col:140> col:140 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x233a0dbc640 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x233a0dbcae8 <line:374:24, col:198> col:36 _wcsnicoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x233a0dbc840 <col:76, col:92> col:92 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x233a0dbc8b8 <col:126, col:142> col:142 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x233a0dbc930 <col:154, col:161> col:161 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x233a0dbc9a8 <col:181, col:191> col:191 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x233a0dbcd48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:403:108> col:74 wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x233a0dbcc70 <col:88, col:104> col:104 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x233a0dbcdf0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsdup. See online help for details." ""
|-FunctionDecl 0x233a0dbd158 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:413:135> col:69 wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x233a0dbcfb0 <col:84, col:100> col:100 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x233a0dbd028 <col:114, col:130> col:130 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x233a0dbd208 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicmp. See online help for details." ""
|-FunctionDecl 0x233a0dbd5d8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:414:200> col:70 wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x233a0dbd3c8 <col:106, col:122> col:122 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x233a0dbd440 <col:156, col:172> col:172 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x233a0dbd4b8 <col:184, col:191> col:191 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x233a0dbd690 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnicmp. See online help for details." ""
|-FunctionDecl 0x233a0dbda58 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:415:153> col:60 wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x233a0dbd850 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x233a0dbd8c8 <col:118, col:126> col:126 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x233a0dbd940 <col:137, col:144> col:144 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x233a0dbdb10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnset. See online help for details." ""
|-FunctionDecl 0x233a0dbdda8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:416:90> col:59 wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x233a0dbdcd0 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x233a0dbde50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsrev. See online help for details." ""
|-FunctionDecl 0x233a0dbe190 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:417:104> col:59 wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x233a0dbe010 <col:76, col:86> col:86 _Str 'wchar_t *'
| |-ParmVarDecl 0x233a0dbe088 <col:92, col:100> col:100 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x233a0dbe240 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsset. See online help for details." ""
|-FunctionDecl 0x233a0dbe4d8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:418:90> col:59 wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x233a0dbe400 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x233a0dbe580 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcslwr. See online help for details." ""
|-FunctionDecl 0x233a0dbe818 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:419:90> col:59 wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x233a0dbe740 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x233a0dbe8c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsupr. See online help for details." ""
|-FunctionDecl 0x233a0dbebf8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:420:137> col:70 wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x233a0dbea80 <col:86, col:102> col:102 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x233a0dbeaf8 <col:116, col:132> col:132 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x233a0dbeca8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicoll. See online help for details." ""
|-FunctionDecl 0x233a0dbeee0 <D:\Microsoft Visual Studio 12.0\VC\include\errno.h:31:9, col:41> col:30 used _errno 'int *(void) __attribute__((cdecl))':'int *(void)' extern
|-FunctionDecl 0x233a0db80d0 <line:34:1, col:43> col:17 _set_errno 'errno_t (int) __attribute__((cdecl))':'errno_t (int)'
| `-ParmVarDecl 0x233a0dbefb0 <col:33, col:37> col:37 _Value 'int'
|-FunctionDecl 0x233a0db8320 <line:35:1, col:46> col:17 _get_errno 'errno_t (int *) __attribute__((cdecl))':'errno_t (int *)'
| `-ParmVarDecl 0x233a0db81a8 <col:34, col:40> col:40 _Value 'int *'
|-FunctionDecl 0x233a0db8650 <.//openssl//file_jk/before\crypto\rand\rand_egd.c:92:1, line:227:1> line:92:5 used RAND_query_egd_bytes 'int (const char *, unsigned char *, int)'
| |-ParmVarDecl 0x233a0db83f8 <col:26, col:38> col:38 used path 'const char *'
| |-ParmVarDecl 0x233a0db84a0 <col:44, col:59> col:59 used buf 'unsigned char *'
| |-ParmVarDecl 0x233a0db8520 <col:64, col:68> col:68 used bytes 'int'
| `-CompoundStmt 0x233a0dc7580 <line:93:1, line:227:1>
|   |-DeclStmt 0x233a0db87c8 <line:94:5, col:16>
|   | `-VarDecl 0x233a0db8738 <col:5, col:15> col:9 used ret 'int' cinit
|   |   `-IntegerLiteral 0x233a0db87a0 <col:15> 'int' 0
|   |-DeclStmt 0x233a0db8978 <line:95:5, col:28>
|   | |-RecordDecl 0x233a0db87e0 <col:5, col:12> col:12 struct sockaddr_un
|   | `-VarDecl 0x233a0db88f8 <col:5, col:24> col:24 invalid addr 'struct sockaddr_un':'struct sockaddr_un'
|   |-DeclStmt 0x233a0db8b30 <line:96:5, col:27>
|   | |-VarDecl 0x233a0db89a8 <col:5, col:9> col:9 used len 'int'
|   | |-VarDecl 0x233a0db8a28 <col:5, col:14> col:14 used num 'int'
|   | `-VarDecl 0x233a0db8aa8 <col:5, col:19> col:19 used numbytes 'int'
|   |-DeclStmt 0x233a0db8c08 <line:97:5, col:16>
|   | `-VarDecl 0x233a0db8b60 <col:5, col:15> col:9 used fd 'int' cinit
|   |   `-UnaryOperator 0x233a0db8bf0 <col:14, col:15> 'int' prefix '-'
|   |     `-IntegerLiteral 0x233a0db8bc8 <col:15> 'int' 1
|   |-DeclStmt 0x233a0db8ca0 <line:98:5, col:16>
|   | `-VarDecl 0x233a0db8c38 <col:5, col:9> col:9 used success 'int'
|   |-DeclStmt 0x233a0db8f78 <line:99:5, col:56>
|   | |-VarDecl 0x233a0db8d60 <col:5, col:27> col:19 used egdbuf 'unsigned char [2]'
|   | |-VarDecl 0x233a0db8e70 <col:5, col:41> col:30 used tempbuf 'unsigned char [255]'
|   | `-VarDecl 0x233a0db8ef0 <col:5, col:45> col:45 used retrievebuf 'unsigned char *'
|   |-IfStmt 0x233a0dcc0a0 <line:103:5, line:104:19>
|   | |-OpaqueValueExpr 0x233a0dcc088 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x233a0dcc078 <col:9, col:19>
|   |   `-ParenExpr 0x233a0dcc058 <col:16, col:19> 'int'
|   |     `-UnaryOperator 0x233a0dcc040 <col:17, col:18> 'int' prefix '-'
|   |       `-IntegerLiteral 0x233a0dcc018 <col:18> 'int' 1
|   |-IfStmt 0x233a0dcc5c8 <line:108:5, line:109:19>
|   | |-BinaryOperator 0x233a0dcc538 <line:108:9, col:16> 'int' '=='
|   | | |-ImplicitCastExpr 0x233a0dcc520 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x233a0dcc4c0 <col:9> 'int' lvalue Var 0x233a0db8b60 'fd' 'int'
|   | | `-UnaryOperator 0x233a0dcc508 <col:15, col:16> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x233a0dcc4e0 <col:16> 'int' 1
|   | `-ReturnStmt 0x233a0dcc5b8 <line:109:9, col:19>
|   |   `-ParenExpr 0x233a0dcc598 <col:16, col:19> 'int'
|   |     `-UnaryOperator 0x233a0dcc580 <col:17, col:18> 'int' prefix '-'
|   |       `-IntegerLiteral 0x233a0dcc558 <col:18> 'int' 1
|   |-BinaryOperator 0x233a0dcc640 <line:110:5, col:15> 'int' '='
|   | |-DeclRefExpr 0x233a0dcc5e0 <col:5> 'int' lvalue Var 0x233a0db8c38 'success' 'int'
|   | `-IntegerLiteral 0x233a0dcc618 <col:15> 'int' 0
|   |-WhileStmt 0x233a0dcceb8 <line:111:5, line:140:5>
|   | |-UnaryOperator 0x233a0dcc698 <line:111:12, col:13> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x233a0dcc680 <col:13> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x233a0dcc660 <col:13> 'int' lvalue Var 0x233a0db8c38 'success' 'int'
|   | `-CompoundStmt 0x233a0dccea0 <col:22, line:140:5>
|   |   `-IfStmt 0x233a0dcce78 <line:112:9, line:139:9> has_else
|   |     |-OpaqueValueExpr 0x233a0dcce60 <<invalid sloc>> '_Bool'
|   |     |-BinaryOperator 0x233a0dcc930 <line:113:13, col:23> 'int' '='
|   |     | |-DeclRefExpr 0x233a0dcc8e8 <col:13> 'int' lvalue Var 0x233a0db8c38 'success' 'int'
|   |     | `-IntegerLiteral 0x233a0dcc908 <col:23> 'int' 1
|   |     `-CompoundStmt 0x233a0dcce48 <line:114:14, line:139:9>
|   |       `-SwitchStmt 0x233a0dcca50 <line:115:13, line:138:13>
|   |         |-ImplicitCastExpr 0x233a0dcca38 <D:\Microsoft Visual Studio 12.0\VC\include\errno.h:32:17, col:27> 'int' <LValueToRValue>
|   |         | `-ParenExpr 0x233a0dcca18 <col:17, col:27> 'int' lvalue
|   |         |   `-UnaryOperator 0x233a0dcca00 <col:18, col:26> 'int' lvalue prefix '*' cannot overflow
|   |         |     `-CallExpr 0x233a0dcc9e0 <col:19, col:26> 'int *'
|   |         |       `-ImplicitCastExpr 0x233a0dcc9c8 <col:19> 'int *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |         |         `-DeclRefExpr 0x233a0dcc950 <col:19> 'int *(void) __attribute__((cdecl))':'int *(void)' Function 0x233a0dbeee0 '_errno' 'int *(void) __attribute__((cdecl))':'int *(void)'
|   |         `-CompoundStmt 0x233a0dcce10 <.//openssl//file_jk/before\crypto\rand\rand_egd.c:115:28, line:138:13>
|   |           |-CaseStmt 0x233a0dccab0 <line:117:13, line:129:17>
|   |           | |-ConstantExpr 0x233a0dcca98 <D:\Microsoft Visual Studio 12.0\VC\include\errno.h:43:25> 'int'
|   |           | | `-IntegerLiteral 0x233a0dcca70 <col:25> 'int' 4
|   |           | `-CaseStmt 0x233a0dccb18 <.//openssl//file_jk/before\crypto\rand\rand_egd.c:120:13, line:129:17>
|   |           |   |-ConstantExpr 0x233a0dccb00 <D:\Microsoft Visual Studio 12.0\VC\include\errno.h:50:25> 'int'
|   |           |   | `-IntegerLiteral 0x233a0dccad8 <col:25> 'int' 11
|   |           |   `-CaseStmt 0x233a0dccb80 <.//openssl//file_jk/before\crypto\rand\rand_egd.c:123:13, line:129:17>
|   |           |     |-ConstantExpr 0x233a0dccb68 <D:\Microsoft Visual Studio 12.0\VC\include\errno.h:104:25> 'int'
|   |           |     | `-IntegerLiteral 0x233a0dccb40 <col:25> 'int' 112
|   |           |     `-CaseStmt 0x233a0dccbe8 <.//openssl//file_jk/before\crypto\rand\rand_egd.c:126:13, line:129:17>
|   |           |       |-ConstantExpr 0x233a0dccbd0 <D:\Microsoft Visual Studio 12.0\VC\include\errno.h:95:25> 'int'
|   |           |       | `-IntegerLiteral 0x233a0dccba8 <col:25> 'int' 103
|   |           |       `-BreakStmt 0x233a0dccc10 <.//openssl//file_jk/before\crypto\rand\rand_egd.c:129:17>
|   |           |-CaseStmt 0x233a0dccc58 <line:131:13, line:132:27>
|   |           | |-ConstantExpr 0x233a0dccc40 <D:\Microsoft Visual Studio 12.0\VC\include\errno.h:105:25> 'int'
|   |           | | `-IntegerLiteral 0x233a0dccc18 <col:25> 'int' 113
|   |           | `-BinaryOperator 0x233a0dcccc8 <.//openssl//file_jk/before\crypto\rand\rand_egd.c:132:17, col:27> 'int' '='
|   |           |   |-DeclRefExpr 0x233a0dccc80 <col:17> 'int' lvalue Var 0x233a0db8c38 'success' 'int'
|   |           |   `-IntegerLiteral 0x233a0dccca0 <col:27> 'int' 1
|   |           |-BreakStmt 0x233a0dccce8 <line:133:17>
|   |           |-DefaultStmt 0x233a0dccd88 <line:135:13, line:136:24>
|   |           | `-BinaryOperator 0x233a0dccd68 <col:17, col:24> 'int' '='
|   |           |   |-DeclRefExpr 0x233a0dcccf0 <col:17> 'int' lvalue Var 0x233a0db8738 'ret' 'int'
|   |           |   `-UnaryOperator 0x233a0dccd50 <col:23, col:24> 'int' prefix '-'
|   |           |     `-IntegerLiteral 0x233a0dccd28 <col:24> 'int' 1
|   |           `-GotoStmt 0x233a0dccdf8 <line:137:17, col:22> 'err' 0x233a0dccda8
|   |-WhileStmt 0x233a0dc72b0 <line:142:5, line:222:5>
|   | |-BinaryOperator 0x233a0dccf30 <line:142:12, col:20> 'int' '>'
|   | | |-ImplicitCastExpr 0x233a0dccf18 <col:12> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x233a0dcced0 <col:12> 'int' lvalue ParmVar 0x233a0db8520 'bytes' 'int'
|   | | `-IntegerLiteral 0x233a0dccef0 <col:20> 'int' 0
|   | `-CompoundStmt 0x233a0dc7238 <col:23, line:222:5>
|   |   |-BinaryOperator 0x233a0dc5fe0 <line:143:9, col:21> 'unsigned char' '='
|   |   | |-ArraySubscriptExpr 0x233a0dccfc8 <col:9, col:17> 'unsigned char' lvalue
|   |   | | |-ImplicitCastExpr 0x233a0dccfb0 <col:9> 'unsigned char *' <ArrayToPointerDecay>
|   |   | | | `-DeclRefExpr 0x233a0dccf50 <col:9> 'unsigned char [2]' lvalue Var 0x233a0db8d60 'egdbuf' 'unsigned char [2]'
|   |   | | `-IntegerLiteral 0x233a0dccf88 <col:16> 'int' 0
|   |   | `-ImplicitCastExpr 0x233a0dc5fc8 <col:21> 'unsigned char' <IntegralCast>
|   |   |   `-IntegerLiteral 0x233a0dc5fa0 <col:21> 'int' 1
|   |   |-BinaryOperator 0x233a0dc61a8 <line:144:9, col:43> 'unsigned char' '='
|   |   | |-ArraySubscriptExpr 0x233a0dc6060 <col:9, col:17> 'unsigned char' lvalue
|   |   | | |-ImplicitCastExpr 0x233a0dc6048 <col:9> 'unsigned char *' <ArrayToPointerDecay>
|   |   | | | `-DeclRefExpr 0x233a0dc6000 <col:9> 'unsigned char [2]' lvalue Var 0x233a0db8d60 'egdbuf' 'unsigned char [2]'
|   |   | | `-IntegerLiteral 0x233a0dc6020 <col:16> 'int' 1
|   |   | `-ImplicitCastExpr 0x233a0dc6190 <col:21, col:43> 'unsigned char' <IntegralCast>
|   |   |   `-ConditionalOperator 0x233a0dc6160 <col:21, col:43> 'int'
|   |   |     |-BinaryOperator 0x233a0dc60e0 <col:21, col:29> 'int' '<'
|   |   |     | |-ImplicitCastExpr 0x233a0dc60c8 <col:21> 'int' <LValueToRValue>
|   |   |     | | `-DeclRefExpr 0x233a0dc6080 <col:21> 'int' lvalue ParmVar 0x233a0db8520 'bytes' 'int'
|   |   |     | `-IntegerLiteral 0x233a0dc60a0 <col:29> 'int' 255
|   |   |     |-ImplicitCastExpr 0x233a0dc6148 <col:35> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x233a0dc6100 <col:35> 'int' lvalue ParmVar 0x233a0db8520 'bytes' 'int'
|   |   |     `-IntegerLiteral 0x233a0dc6120 <col:43> 'int' 255
|   |   |-BinaryOperator 0x233a0dc6228 <line:145:9, col:20> 'int' '='
|   |   | |-DeclRefExpr 0x233a0dc61c8 <col:9> 'int' lvalue Var 0x233a0db8aa8 'numbytes' 'int'
|   |   | `-IntegerLiteral 0x233a0dc6200 <col:20> 'int' 0
|   |   |-WhileStmt 0x233a0dc69d8 <line:146:9, line:165:9>
|   |   | |-BinaryOperator 0x233a0dc62a8 <line:146:16, col:28> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x233a0dc6290 <col:16> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x233a0dc6248 <col:16> 'int' lvalue Var 0x233a0db8aa8 'numbytes' 'int'
|   |   | | `-IntegerLiteral 0x233a0dc6268 <col:28> 'int' 2
|   |   | `-CompoundStmt 0x233a0dc69b8 <col:31, line:165:9>
|   |   |   |-BinaryOperator 0x233a0dc65d0 <line:147:13, col:60> 'int' '='
|   |   |   | |-DeclRefExpr 0x233a0dc62c8 <col:13> 'int' lvalue Var 0x233a0db8a28 'num' 'int'
|   |   |   | `-CallExpr 0x233a0dc6580 <col:19, col:60> 'int'
|   |   |   |   |-ImplicitCastExpr 0x233a0dc6568 <col:19> 'int (*)()' <FunctionToPointerDecay>
|   |   |   |   | `-DeclRefExpr 0x233a0dc63f0 <col:19> 'int ()' Function 0x233a0dc6328 'write' 'int ()'
|   |   |   |   |-ImplicitCastExpr 0x233a0dc65b8 <col:25> 'int' <LValueToRValue>
|   |   |   |   | `-DeclRefExpr 0x233a0dc6410 <col:25> 'int' lvalue Var 0x233a0db8b60 'fd' 'int'
|   |   |   |   |-BinaryOperator 0x233a0dc64a0 <col:29, col:38> 'unsigned char *' '+'
|   |   |   |   | |-ImplicitCastExpr 0x233a0dc6470 <col:29> 'unsigned char *' <ArrayToPointerDecay>
|   |   |   |   | | `-DeclRefExpr 0x233a0dc6430 <col:29> 'unsigned char [2]' lvalue Var 0x233a0db8d60 'egdbuf' 'unsigned char [2]'
|   |   |   |   | `-ImplicitCastExpr 0x233a0dc6488 <col:38> 'int' <LValueToRValue>
|   |   |   |   |   `-DeclRefExpr 0x233a0dc6450 <col:38> 'int' lvalue Var 0x233a0db8aa8 'numbytes' 'int'
|   |   |   |   `-BinaryOperator 0x233a0dc6520 <col:48, col:52> 'int' '-'
|   |   |   |     |-IntegerLiteral 0x233a0dc64c0 <col:48> 'int' 2
|   |   |   |     `-ImplicitCastExpr 0x233a0dc6508 <col:52> 'int' <LValueToRValue>
|   |   |   |       `-DeclRefExpr 0x233a0dc64e8 <col:52> 'int' lvalue Var 0x233a0db8aa8 'numbytes' 'int'
|   |   |   `-IfStmt 0x233a0dc6990 <line:148:13, line:164:13> has_else
|   |   |     |-BinaryOperator 0x233a0dc6650 <line:148:17, col:24> 'int' '>='
|   |   |     | |-ImplicitCastExpr 0x233a0dc6638 <col:17> 'int' <LValueToRValue>
|   |   |     | | `-DeclRefExpr 0x233a0dc65f0 <col:17> 'int' lvalue Var 0x233a0db8a28 'num' 'int'
|   |   |     | `-IntegerLiteral 0x233a0dc6610 <col:24> 'int' 0
|   |   |     |-CompoundAssignOperator 0x233a0dc66c8 <line:149:17, col:29> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |     | |-DeclRefExpr 0x233a0dc6670 <col:17> 'int' lvalue Var 0x233a0db8aa8 'numbytes' 'int'
|   |   |     | `-ImplicitCastExpr 0x233a0dc66b0 <col:29> 'int' <LValueToRValue>
|   |   |     |   `-DeclRefExpr 0x233a0dc6690 <col:29> 'int' lvalue Var 0x233a0db8a28 'num' 'int'
|   |   |     `-CompoundStmt 0x233a0dc6978 <line:150:18, line:164:13>
|   |   |       `-SwitchStmt 0x233a0dc67a0 <line:151:17, line:163:17>
|   |   |         |-ImplicitCastExpr 0x233a0dc6788 <D:\Microsoft Visual Studio 12.0\VC\include\errno.h:32:17, col:27> 'int' <LValueToRValue>
|   |   |         | `-ParenExpr 0x233a0dc6768 <col:17, col:27> 'int' lvalue
|   |   |         |   `-UnaryOperator 0x233a0dc6750 <col:18, col:26> 'int' lvalue prefix '*' cannot overflow
|   |   |         |     `-CallExpr 0x233a0dc6730 <col:19, col:26> 'int *'
|   |   |         |       `-ImplicitCastExpr 0x233a0dc6718 <col:19> 'int *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   |         |         `-DeclRefExpr 0x233a0dc66f8 <col:19> 'int *(void) __attribute__((cdecl))':'int *(void)' Function 0x233a0dbeee0 '_errno' 'int *(void) __attribute__((cdecl))':'int *(void)'
|   |   |         `-CompoundStmt 0x233a0dc6950 <.//openssl//file_jk/before\crypto\rand\rand_egd.c:151:32, line:163:17>
|   |   |           |-CaseStmt 0x233a0dc6800 <line:153:17, line:159:21>
|   |   |           | |-ConstantExpr 0x233a0dc67e8 <D:\Microsoft Visual Studio 12.0\VC\include\errno.h:43:25> 'int'
|   |   |           | | `-IntegerLiteral 0x233a0dc67c0 <col:25> 'int' 4
|   |   |           | `-CaseStmt 0x233a0dc6868 <.//openssl//file_jk/before\crypto\rand\rand_egd.c:156:17, line:159:21>
|   |   |           |   |-ConstantExpr 0x233a0dc6850 <D:\Microsoft Visual Studio 12.0\VC\include\errno.h:50:25> 'int'
|   |   |           |   | `-IntegerLiteral 0x233a0dc6828 <col:25> 'int' 11
|   |   |           |   `-BreakStmt 0x233a0dc6890 <.//openssl//file_jk/before\crypto\rand\rand_egd.c:159:21>
|   |   |           |-DefaultStmt 0x233a0dc6918 <line:160:17, line:161:28>
|   |   |           | `-BinaryOperator 0x233a0dc68f8 <col:21, col:28> 'int' '='
|   |   |           |   |-DeclRefExpr 0x233a0dc6898 <col:21> 'int' lvalue Var 0x233a0db8738 'ret' 'int'
|   |   |           |   `-UnaryOperator 0x233a0dc68e0 <col:27, col:28> 'int' prefix '-'
|   |   |           |     `-IntegerLiteral 0x233a0dc68b8 <col:28> 'int' 1
|   |   |           `-GotoStmt 0x233a0dc6938 <line:162:21, col:26> 'err' 0x233a0dccda8
|   |   |-BinaryOperator 0x233a0dc6a38 <line:166:9, col:20> 'int' '='
|   |   | |-DeclRefExpr 0x233a0dc69f0 <col:9> 'int' lvalue Var 0x233a0db8aa8 'numbytes' 'int'
|   |   | `-IntegerLiteral 0x233a0dc6a10 <col:20> 'int' 0
|   |   |-WhileStmt 0x233a0dce238 <line:167:9, line:188:9>
|   |   | |-BinaryOperator 0x233a0dc6ab8 <line:167:16, col:28> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x233a0dc6aa0 <col:16> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x233a0dc6a58 <col:16> 'int' lvalue Var 0x233a0db8aa8 'numbytes' 'int'
|   |   | | `-IntegerLiteral 0x233a0dc6a78 <col:28> 'int' 1
|   |   | `-CompoundStmt 0x233a0dce218 <col:31, line:188:9>
|   |   |   |-BinaryOperator 0x233a0dc6cf0 <line:168:13, col:37> 'int' '='
|   |   |   | |-DeclRefExpr 0x233a0dc6ad8 <col:13> 'int' lvalue Var 0x233a0db8a28 'num' 'int'
|   |   |   | `-CallExpr 0x233a0dc6c88 <col:19, col:37> 'int'
|   |   |   |   |-ImplicitCastExpr 0x233a0dc6c70 <col:19> 'int (*)()' <FunctionToPointerDecay>
|   |   |   |   | `-DeclRefExpr 0x233a0dc6be8 <col:19> 'int ()' Function 0x233a0dc6b20 'read' 'int ()'
|   |   |   |   |-ImplicitCastExpr 0x233a0dc6cc0 <col:24> 'int' <LValueToRValue>
|   |   |   |   | `-DeclRefExpr 0x233a0dc6c08 <col:24> 'int' lvalue Var 0x233a0db8b60 'fd' 'int'
|   |   |   |   |-ImplicitCastExpr 0x233a0dc6cd8 <col:28> 'unsigned char *' <ArrayToPointerDecay>
|   |   |   |   | `-DeclRefExpr 0x233a0dc6c28 <col:28> 'unsigned char [2]' lvalue Var 0x233a0db8d60 'egdbuf' 'unsigned char [2]'
|   |   |   |   `-IntegerLiteral 0x233a0dc6c48 <col:36> 'int' 1
|   |   |   `-IfStmt 0x233a0dce1f0 <line:169:13, line:187:13> has_else
|   |   |     |-BinaryOperator 0x233a0dc6d70 <line:169:17, col:24> 'int' '=='
|   |   |     | |-ImplicitCastExpr 0x233a0dc6d58 <col:17> 'int' <LValueToRValue>
|   |   |     | | `-DeclRefExpr 0x233a0dc6d10 <col:17> 'int' lvalue Var 0x233a0db8a28 'num' 'int'
|   |   |     | `-IntegerLiteral 0x233a0dc6d30 <col:24> 'int' 0
|   |   |     |-GotoStmt 0x233a0dc6d90 <line:170:17, col:22> 'err' 0x233a0dccda8
|   |   |     `-IfStmt 0x233a0dce1c8 <line:171:18, line:187:13> has_else
|   |   |       |-BinaryOperator 0x233a0dc6e08 <line:171:22, col:28> 'int' '>'
|   |   |       | |-ImplicitCastExpr 0x233a0dc6df0 <col:22> 'int' <LValueToRValue>
|   |   |       | | `-DeclRefExpr 0x233a0dc6da8 <col:22> 'int' lvalue Var 0x233a0db8a28 'num' 'int'
|   |   |       | `-IntegerLiteral 0x233a0dc6dc8 <col:28> 'int' 0
|   |   |       |-CompoundAssignOperator 0x233a0dc6e80 <line:172:17, col:29> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |       | |-DeclRefExpr 0x233a0dc6e28 <col:17> 'int' lvalue Var 0x233a0db8aa8 'numbytes' 'int'
|   |   |       | `-ImplicitCastExpr 0x233a0dc6e68 <col:29> 'int' <LValueToRValue>
|   |   |       |   `-DeclRefExpr 0x233a0dc6e48 <col:29> 'int' lvalue Var 0x233a0db8a28 'num' 'int'
|   |   |       `-CompoundStmt 0x233a0dce1b0 <line:173:18, line:187:13>
|   |   |         `-SwitchStmt 0x233a0dc6f58 <line:174:17, line:186:17>
|   |   |           |-ImplicitCastExpr 0x233a0dc6f40 <D:\Microsoft Visual Studio 12.0\VC\include\errno.h:32:17, col:27> 'int' <LValueToRValue>
|   |   |           | `-ParenExpr 0x233a0dc6f20 <col:17, col:27> 'int' lvalue
|   |   |           |   `-UnaryOperator 0x233a0dc6f08 <col:18, col:26> 'int' lvalue prefix '*' cannot overflow
|   |   |           |     `-CallExpr 0x233a0dc6ee8 <col:19, col:26> 'int *'
|   |   |           |       `-ImplicitCastExpr 0x233a0dc6ed0 <col:19> 'int *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   |           |         `-DeclRefExpr 0x233a0dc6eb0 <col:19> 'int *(void) __attribute__((cdecl))':'int *(void)' Function 0x233a0dbeee0 '_errno' 'int *(void) __attribute__((cdecl))':'int *(void)'
|   |   |           `-CompoundStmt 0x233a0dce188 <.//openssl//file_jk/before\crypto\rand\rand_egd.c:174:32, line:186:17>
|   |   |             |-CaseStmt 0x233a0dce038 <line:176:17, line:182:21>
|   |   |             | |-ConstantExpr 0x233a0dce020 <D:\Microsoft Visual Studio 12.0\VC\include\errno.h:43:25> 'int'
|   |   |             | | `-IntegerLiteral 0x233a0dc6f78 <col:25> 'int' 4
|   |   |             | `-CaseStmt 0x233a0dce0a0 <.//openssl//file_jk/before\crypto\rand\rand_egd.c:179:17, line:182:21>
|   |   |             |   |-ConstantExpr 0x233a0dce088 <D:\Microsoft Visual Studio 12.0\VC\include\errno.h:50:25> 'int'
|   |   |             |   | `-IntegerLiteral 0x233a0dce060 <col:25> 'int' 11
|   |   |             |   `-BreakStmt 0x233a0dce0c8 <.//openssl//file_jk/before\crypto\rand\rand_egd.c:182:21>
|   |   |             |-DefaultStmt 0x233a0dce150 <line:183:17, line:184:28>
|   |   |             | `-BinaryOperator 0x233a0dce130 <col:21, col:28> 'int' '='
|   |   |             |   |-DeclRefExpr 0x233a0dce0d0 <col:21> 'int' lvalue Var 0x233a0db8738 'ret' 'int'
|   |   |             |   `-UnaryOperator 0x233a0dce118 <col:27, col:28> 'int' prefix '-'
|   |   |             |     `-IntegerLiteral 0x233a0dce0f0 <col:28> 'int' 1
|   |   |             `-GotoStmt 0x233a0dce170 <line:185:21, col:26> 'err' 0x233a0dccda8
|   |   |-IfStmt 0x233a0dce360 <line:189:9, line:190:18>
|   |   | |-BinaryOperator 0x233a0dce328 <line:189:13, col:26> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x233a0dce310 <col:13, col:21> 'int' <IntegralCast>
|   |   | | | `-ImplicitCastExpr 0x233a0dce2f8 <col:13, col:21> 'unsigned char' <LValueToRValue>
|   |   | | |   `-ArraySubscriptExpr 0x233a0dce2b0 <col:13, col:21> 'unsigned char' lvalue
|   |   | | |     |-ImplicitCastExpr 0x233a0dce298 <col:13> 'unsigned char *' <ArrayToPointerDecay>
|   |   | | |     | `-DeclRefExpr 0x233a0dce250 <col:13> 'unsigned char [2]' lvalue Var 0x233a0db8d60 'egdbuf' 'unsigned char [2]'
|   |   | | |     `-IntegerLiteral 0x233a0dce270 <col:20> 'int' 0
|   |   | | `-IntegerLiteral 0x233a0dce2d0 <col:26> 'int' 0
|   |   | `-GotoStmt 0x233a0dce348 <line:190:13, col:18> 'err' 0x233a0dccda8
|   |   |-IfStmt 0x233a0dce528 <line:191:9, line:194:27> has_else
|   |   | |-ImplicitCastExpr 0x233a0dce398 <line:191:13> 'unsigned char *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x233a0dce378 <col:13> 'unsigned char *' lvalue ParmVar 0x233a0db84a0 'buf' 'unsigned char *'
|   |   | |-BinaryOperator 0x233a0dce478 <line:192:13, col:33> 'unsigned char *' '='
|   |   | | |-DeclRefExpr 0x233a0dce3b0 <col:13> 'unsigned char *' lvalue Var 0x233a0db8ef0 'retrievebuf' 'unsigned char *'
|   |   | | `-BinaryOperator 0x233a0dce458 <col:27, col:33> 'unsigned char *' '+'
|   |   | |   |-ImplicitCastExpr 0x233a0dce428 <col:27> 'unsigned char *' <LValueToRValue>
|   |   | |   | `-DeclRefExpr 0x233a0dce3e8 <col:27> 'unsigned char *' lvalue ParmVar 0x233a0db84a0 'buf' 'unsigned char *'
|   |   | |   `-ImplicitCastExpr 0x233a0dce440 <col:33> 'int' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x233a0dce408 <col:33> 'int' lvalue Var 0x233a0db8738 'ret' 'int'
|   |   | `-BinaryOperator 0x233a0dce508 <line:194:13, col:27> 'unsigned char *' '='
|   |   |   |-DeclRefExpr 0x233a0dce498 <col:13> 'unsigned char *' lvalue Var 0x233a0db8ef0 'retrievebuf' 'unsigned char *'
|   |   |   `-ImplicitCastExpr 0x233a0dce4f0 <col:27> 'unsigned char *' <ArrayToPointerDecay>
|   |   |     `-DeclRefExpr 0x233a0dce4b8 <col:27> 'unsigned char [255]' lvalue Var 0x233a0db8e70 'tempbuf' 'unsigned char [255]'
|   |   |-BinaryOperator 0x233a0dce598 <line:195:9, col:20> 'int' '='
|   |   | |-DeclRefExpr 0x233a0dce550 <col:9> 'int' lvalue Var 0x233a0db8aa8 'numbytes' 'int'
|   |   | `-IntegerLiteral 0x233a0dce570 <col:20> 'int' 0
|   |   |-WhileStmt 0x233a0dcede8 <line:196:9, line:217:9>
|   |   | |-BinaryOperator 0x233a0dce6a0 <line:196:16, col:36> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x233a0dce658 <col:16> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x233a0dce5b8 <col:16> 'int' lvalue Var 0x233a0db8aa8 'numbytes' 'int'
|   |   | | `-ImplicitCastExpr 0x233a0dce688 <col:28, col:36> 'int' <IntegralCast>
|   |   | |   `-ImplicitCastExpr 0x233a0dce670 <col:28, col:36> 'unsigned char' <LValueToRValue>
|   |   | |     `-ArraySubscriptExpr 0x233a0dce638 <col:28, col:36> 'unsigned char' lvalue
|   |   | |       |-ImplicitCastExpr 0x233a0dce620 <col:28> 'unsigned char *' <ArrayToPointerDecay>
|   |   | |       | `-DeclRefExpr 0x233a0dce5d8 <col:28> 'unsigned char [2]' lvalue Var 0x233a0db8d60 'egdbuf' 'unsigned char [2]'
|   |   | |       `-IntegerLiteral 0x233a0dce5f8 <col:35> 'int' 0
|   |   | `-CompoundStmt 0x233a0dcedc8 <col:39, line:217:9>
|   |   |   |-BinaryOperator 0x233a0dce920 <line:197:13, col:72> 'int' '='
|   |   |   | |-DeclRefExpr 0x233a0dce6c0 <col:13> 'int' lvalue Var 0x233a0db8a28 'num' 'int'
|   |   |   | `-CallExpr 0x233a0dce8d0 <col:19, col:72> 'int'
|   |   |   |   |-ImplicitCastExpr 0x233a0dce8b8 <col:19> 'int (*)()' <FunctionToPointerDecay>
|   |   |   |   | `-DeclRefExpr 0x233a0dce6e0 <col:19> 'int ()' Function 0x233a0dc6b20 'read' 'int ()'
|   |   |   |   |-ImplicitCastExpr 0x233a0dce908 <col:24> 'int' <LValueToRValue>
|   |   |   |   | `-DeclRefExpr 0x233a0dce700 <col:24> 'int' lvalue Var 0x233a0db8b60 'fd' 'int'
|   |   |   |   |-BinaryOperator 0x233a0dce790 <col:28, col:42> 'unsigned char *' '+'
|   |   |   |   | |-ImplicitCastExpr 0x233a0dce760 <col:28> 'unsigned char *' <LValueToRValue>
|   |   |   |   | | `-DeclRefExpr 0x233a0dce720 <col:28> 'unsigned char *' lvalue Var 0x233a0db8ef0 'retrievebuf' 'unsigned char *'
|   |   |   |   | `-ImplicitCastExpr 0x233a0dce778 <col:42> 'int' <LValueToRValue>
|   |   |   |   |   `-DeclRefExpr 0x233a0dce740 <col:42> 'int' lvalue Var 0x233a0db8aa8 'numbytes' 'int'
|   |   |   |   `-BinaryOperator 0x233a0dce898 <col:52, col:64> 'int' '-'
|   |   |   |     |-ImplicitCastExpr 0x233a0dce868 <col:52, col:60> 'int' <IntegralCast>
|   |   |   |     | `-ImplicitCastExpr 0x233a0dce850 <col:52, col:60> 'unsigned char' <LValueToRValue>
|   |   |   |     |   `-ArraySubscriptExpr 0x233a0dce810 <col:52, col:60> 'unsigned char' lvalue
|   |   |   |     |     |-ImplicitCastExpr 0x233a0dce7f8 <col:52> 'unsigned char *' <ArrayToPointerDecay>
|   |   |   |     |     | `-DeclRefExpr 0x233a0dce7b0 <col:52> 'unsigned char [2]' lvalue Var 0x233a0db8d60 'egdbuf' 'unsigned char [2]'
|   |   |   |     |     `-IntegerLiteral 0x233a0dce7d0 <col:59> 'int' 0
|   |   |   |     `-ImplicitCastExpr 0x233a0dce880 <col:64> 'int' <LValueToRValue>
|   |   |   |       `-DeclRefExpr 0x233a0dce830 <col:64> 'int' lvalue Var 0x233a0db8aa8 'numbytes' 'int'
|   |   |   `-IfStmt 0x233a0dceda0 <line:198:13, line:216:13> has_else
|   |   |     |-BinaryOperator 0x233a0dce9a0 <line:198:17, col:24> 'int' '=='
|   |   |     | |-ImplicitCastExpr 0x233a0dce988 <col:17> 'int' <LValueToRValue>
|   |   |     | | `-DeclRefExpr 0x233a0dce940 <col:17> 'int' lvalue Var 0x233a0db8a28 'num' 'int'
|   |   |     | `-IntegerLiteral 0x233a0dce960 <col:24> 'int' 0
|   |   |     |-GotoStmt 0x233a0dce9c0 <line:199:17, col:22> 'err' 0x233a0dccda8
|   |   |     `-IfStmt 0x233a0dced78 <line:200:18, line:216:13> has_else
|   |   |       |-BinaryOperator 0x233a0dcea38 <line:200:22, col:28> 'int' '>'
|   |   |       | |-ImplicitCastExpr 0x233a0dcea20 <col:22> 'int' <LValueToRValue>
|   |   |       | | `-DeclRefExpr 0x233a0dce9d8 <col:22> 'int' lvalue Var 0x233a0db8a28 'num' 'int'
|   |   |       | `-IntegerLiteral 0x233a0dce9f8 <col:28> 'int' 0
|   |   |       |-CompoundAssignOperator 0x233a0dceab0 <line:201:17, col:29> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |       | |-DeclRefExpr 0x233a0dcea58 <col:17> 'int' lvalue Var 0x233a0db8aa8 'numbytes' 'int'
|   |   |       | `-ImplicitCastExpr 0x233a0dcea98 <col:29> 'int' <LValueToRValue>
|   |   |       |   `-DeclRefExpr 0x233a0dcea78 <col:29> 'int' lvalue Var 0x233a0db8a28 'num' 'int'
|   |   |       `-CompoundStmt 0x233a0dced60 <line:202:18, line:216:13>
|   |   |         `-SwitchStmt 0x233a0dceb88 <line:203:17, line:215:17>
|   |   |           |-ImplicitCastExpr 0x233a0dceb70 <D:\Microsoft Visual Studio 12.0\VC\include\errno.h:32:17, col:27> 'int' <LValueToRValue>
|   |   |           | `-ParenExpr 0x233a0dceb50 <col:17, col:27> 'int' lvalue
|   |   |           |   `-UnaryOperator 0x233a0dceb38 <col:18, col:26> 'int' lvalue prefix '*' cannot overflow
|   |   |           |     `-CallExpr 0x233a0dceb18 <col:19, col:26> 'int *'
|   |   |           |       `-ImplicitCastExpr 0x233a0dceb00 <col:19> 'int *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   |           |         `-DeclRefExpr 0x233a0dceae0 <col:19> 'int *(void) __attribute__((cdecl))':'int *(void)' Function 0x233a0dbeee0 '_errno' 'int *(void) __attribute__((cdecl))':'int *(void)'
|   |   |           `-CompoundStmt 0x233a0dced38 <.//openssl//file_jk/before\crypto\rand\rand_egd.c:203:32, line:215:17>
|   |   |             |-CaseStmt 0x233a0dcebe8 <line:205:17, line:211:21>
|   |   |             | |-ConstantExpr 0x233a0dcebd0 <D:\Microsoft Visual Studio 12.0\VC\include\errno.h:43:25> 'int'
|   |   |             | | `-IntegerLiteral 0x233a0dceba8 <col:25> 'int' 4
|   |   |             | `-CaseStmt 0x233a0dcec50 <.//openssl//file_jk/before\crypto\rand\rand_egd.c:208:17, line:211:21>
|   |   |             |   |-ConstantExpr 0x233a0dcec38 <D:\Microsoft Visual Studio 12.0\VC\include\errno.h:50:25> 'int'
|   |   |             |   | `-IntegerLiteral 0x233a0dcec10 <col:25> 'int' 11
|   |   |             |   `-BreakStmt 0x233a0dcec78 <.//openssl//file_jk/before\crypto\rand\rand_egd.c:211:21>
|   |   |             |-DefaultStmt 0x233a0dced00 <line:212:17, line:213:28>
|   |   |             | `-BinaryOperator 0x233a0dcece0 <col:21, col:28> 'int' '='
|   |   |             |   |-DeclRefExpr 0x233a0dcec80 <col:21> 'int' lvalue Var 0x233a0db8738 'ret' 'int'
|   |   |             |   `-UnaryOperator 0x233a0dcecc8 <col:27, col:28> 'int' prefix '-'
|   |   |             |     `-IntegerLiteral 0x233a0dceca0 <col:28> 'int' 1
|   |   |             `-GotoStmt 0x233a0dced20 <line:214:21, col:26> 'err' 0x233a0dccda8
|   |   |-CompoundAssignOperator 0x233a0dceed0 <line:218:9, col:24> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-DeclRefExpr 0x233a0dcee00 <col:9> 'int' lvalue Var 0x233a0db8738 'ret' 'int'
|   |   | `-ImplicitCastExpr 0x233a0dceeb8 <col:16, col:24> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x233a0dceea0 <col:16, col:24> 'unsigned char' <LValueToRValue>
|   |   |     `-ArraySubscriptExpr 0x233a0dcee80 <col:16, col:24> 'unsigned char' lvalue
|   |   |       |-ImplicitCastExpr 0x233a0dcee68 <col:16> 'unsigned char *' <ArrayToPointerDecay>
|   |   |       | `-DeclRefExpr 0x233a0dcee20 <col:16> 'unsigned char [2]' lvalue Var 0x233a0db8d60 'egdbuf' 'unsigned char [2]'
|   |   |       `-IntegerLiteral 0x233a0dcee40 <col:23> 'int' 0
|   |   |-CompoundAssignOperator 0x233a0dcefd0 <line:219:9, col:26> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-DeclRefExpr 0x233a0dcef00 <col:9> 'int' lvalue ParmVar 0x233a0db8520 'bytes' 'int'
|   |   | `-ImplicitCastExpr 0x233a0dcefb8 <col:18, col:26> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x233a0dcefa0 <col:18, col:26> 'unsigned char' <LValueToRValue>
|   |   |     `-ArraySubscriptExpr 0x233a0dcef80 <col:18, col:26> 'unsigned char' lvalue
|   |   |       |-ImplicitCastExpr 0x233a0dcef68 <col:18> 'unsigned char *' <ArrayToPointerDecay>
|   |   |       | `-DeclRefExpr 0x233a0dcef20 <col:18> 'unsigned char [2]' lvalue Var 0x233a0db8d60 'egdbuf' 'unsigned char [2]'
|   |   |       `-IntegerLiteral 0x233a0dcef40 <col:25> 'int' 0
|   |   `-IfStmt 0x233a0dc7220 <line:220:9, line:221:41>
|   |     |-UnaryOperator 0x233a0dc6fc8 <line:220:13, col:14> 'int' prefix '!' cannot overflow
|   |     | `-ImplicitCastExpr 0x233a0dc6fb0 <col:14> 'unsigned char *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x233a0dcf000 <col:14> 'unsigned char *' lvalue ParmVar 0x233a0db84a0 'buf' 'unsigned char *'
|   |     `-CallExpr 0x233a0dc71a8 <line:221:13, col:41> 'int'
|   |       |-ImplicitCastExpr 0x233a0dc7190 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x233a0dc70d0 <col:13> 'int ()' Function 0x233a0dc7008 'RAND_seed' 'int ()'
|   |       |-ImplicitCastExpr 0x233a0dc71d8 <col:23> 'unsigned char *' <ArrayToPointerDecay>
|   |       | `-DeclRefExpr 0x233a0dc70f0 <col:23> 'unsigned char [255]' lvalue Var 0x233a0db8e70 'tempbuf' 'unsigned char [255]'
|   |       `-ImplicitCastExpr 0x233a0dc7208 <col:32, col:40> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x233a0dc71f0 <col:32, col:40> 'unsigned char' <LValueToRValue>
|   |           `-ArraySubscriptExpr 0x233a0dc7170 <col:32, col:40> 'unsigned char' lvalue
|   |             |-ImplicitCastExpr 0x233a0dc7158 <col:32> 'unsigned char *' <ArrayToPointerDecay>
|   |             | `-DeclRefExpr 0x233a0dc7110 <col:32> 'unsigned char [2]' lvalue Var 0x233a0db8d60 'egdbuf' 'unsigned char [2]'
|   |             `-IntegerLiteral 0x233a0dc7130 <col:39> 'int' 0
|   |-LabelStmt 0x233a0dc7500 <line:223:2, line:225:17> 'err'
|   | `-IfStmt 0x233a0dc74e8 <line:224:5, line:225:17>
|   |   |-BinaryOperator 0x233a0dc7340 <line:224:9, col:16> 'int' '!='
|   |   | |-ImplicitCastExpr 0x233a0dc7328 <col:9> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x233a0dc72c8 <col:9> 'int' lvalue Var 0x233a0db8b60 'fd' 'int'
|   |   | `-UnaryOperator 0x233a0dc7310 <col:15, col:16> 'int' prefix '-'
|   |   |   `-IntegerLiteral 0x233a0dc72e8 <col:16> 'int' 1
|   |   `-CallExpr 0x233a0dc74a8 <line:225:9, col:17> 'int'
|   |     |-ImplicitCastExpr 0x233a0dc7490 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x233a0dc7450 <col:9> 'int ()' Function 0x233a0dc7388 'close' 'int ()'
|   |     `-ImplicitCastExpr 0x233a0dc74d0 <col:15> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x233a0dc7470 <col:15> 'int' lvalue Var 0x233a0db8b60 'fd' 'int'
|   `-ReturnStmt 0x233a0dc7570 <line:226:5, col:16>
|     `-ImplicitCastExpr 0x233a0dc7558 <col:12, col:16> 'int' <LValueToRValue>
|       `-ParenExpr 0x233a0dc7538 <col:12, col:16> 'int' lvalue
|         `-DeclRefExpr 0x233a0dc7518 <col:13> 'int' lvalue Var 0x233a0db8738 'ret' 'int'
|-FunctionDecl 0x233a0dc77a0 <line:229:1, line:240:1> line:229:5 used RAND_egd_bytes 'int (const char *, int)'
| |-ParmVarDecl 0x233a0dc7610 <col:20, col:32> col:32 used path 'const char *'
| |-ParmVarDecl 0x233a0dc7690 <col:38, col:42> col:42 used bytes 'int'
| `-CompoundStmt 0x233a0dd0040 <line:230:1, line:240:1>
|   |-DeclStmt 0x233a0dc79c0 <line:231:5, col:22>
|   | |-VarDecl 0x233a0dc7880 <col:5, col:9> col:9 used num 'int'
|   | `-VarDecl 0x233a0dc7900 <col:5, col:21> col:14 used ret 'int' cinit
|   |   `-UnaryOperator 0x233a0dc7990 <col:20, col:21> 'int' prefix '-'
|   |     `-IntegerLiteral 0x233a0dc7968 <col:21> 'int' 1
|   |-BinaryOperator 0x233a0dc7bc0 <line:233:5, col:49> 'int' '='
|   | |-DeclRefExpr 0x233a0dc79d8 <col:5> 'int' lvalue Var 0x233a0dc7880 'num' 'int'
|   | `-CallExpr 0x233a0dc7b40 <col:11, col:49> 'int'
|   |   |-ImplicitCastExpr 0x233a0dc7b28 <col:11> 'int (*)(const char *, unsigned char *, int)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x233a0dc7a10 <col:11> 'int (const char *, unsigned char *, int)' Function 0x233a0db8650 'RAND_query_egd_bytes' 'int (const char *, unsigned char *, int)'
|   |   |-ImplicitCastExpr 0x233a0dc7b78 <col:32> 'const char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x233a0dc7a30 <col:32> 'const char *' lvalue ParmVar 0x233a0dc7610 'path' 'const char *'
|   |   |-ImplicitCastExpr 0x233a0dc7b90 <D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:16, col:25> 'unsigned char *' <NullToPointer>
|   |   | `-ParenExpr 0x233a0dc7ab8 <col:16, col:25> 'void *'
|   |   |   `-CStyleCastExpr 0x233a0dc7a90 <col:17, col:24> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x233a0dc7a50 <col:24> 'int' 0
|   |   `-ImplicitCastExpr 0x233a0dc7ba8 <.//openssl//file_jk/before\crypto\rand\rand_egd.c:233:44> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x233a0dc7ad8 <col:44> 'int' lvalue ParmVar 0x233a0dc7690 'bytes' 'int'
|   |-IfStmt 0x233a0dc7cc8 <line:234:5, line:235:14>
|   | |-BinaryOperator 0x233a0dc7c40 <line:234:9, col:15> 'int' '<'
|   | | |-ImplicitCastExpr 0x233a0dc7c28 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x233a0dc7be0 <col:9> 'int' lvalue Var 0x233a0dc7880 'num' 'int'
|   | | `-IntegerLiteral 0x233a0dc7c00 <col:15> 'int' 0
|   | `-GotoStmt 0x233a0dc7cb0 <line:235:9, col:14> 'err' 0x233a0dc7c60
|   |-IfStmt 0x233a0dc7f00 <line:236:5, line:237:15>
|   | |-BinaryOperator 0x233a0dc7e50 <line:236:9, col:26> 'int' '=='
|   | | |-CallExpr 0x233a0dc7e08 <col:9, col:21> 'int'
|   | | | `-ImplicitCastExpr 0x233a0dc7df0 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | |   `-DeclRefExpr 0x233a0dc7dd0 <col:9> 'int ()' Function 0x233a0dc7d08 'RAND_status' 'int ()'
|   | | `-IntegerLiteral 0x233a0dc7e28 <col:26> 'int' 1
|   | `-BinaryOperator 0x233a0dc7ee0 <line:237:9, col:15> 'int' '='
|   |   |-DeclRefExpr 0x233a0dc7e70 <col:9> 'int' lvalue Var 0x233a0dc7900 'ret' 'int'
|   |   `-ImplicitCastExpr 0x233a0dc7ec8 <col:15> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x233a0dc7ea8 <col:15> 'int' lvalue Var 0x233a0dc7880 'num' 'int'
|   `-LabelStmt 0x233a0dc7f80 <line:238:2, line:239:16> 'err'
|     `-ReturnStmt 0x233a0dc7f70 <col:5, col:16>
|       `-ImplicitCastExpr 0x233a0dc7f58 <col:12, col:16> 'int' <LValueToRValue>
|         `-ParenExpr 0x233a0dc7f38 <col:12, col:16> 'int' lvalue
|           `-DeclRefExpr 0x233a0dc7f18 <col:13> 'int' lvalue Var 0x233a0dc7900 'ret' 'int'
`-FunctionDecl 0x233a0dd0170 <line:242:1, line:245:1> line:242:5 RAND_egd 'int (const char *)'
  |-ParmVarDecl 0x233a0dd0090 <col:14, col:26> col:26 used path 'const char *'
  `-CompoundStmt 0x233a0dd0358 <line:243:1, line:245:1>
    `-ReturnStmt 0x233a0dd0348 <line:244:5, col:38>
      `-ParenExpr 0x233a0dd0328 <col:12, col:38> 'int'
        `-CallExpr 0x233a0dd02e0 <col:13, col:37> 'int'
          |-ImplicitCastExpr 0x233a0dd02c8 <col:13> 'int (*)(const char *, int)' <FunctionToPointerDecay>
          | `-DeclRefExpr 0x233a0dd0230 <col:13> 'int (const char *, int)' Function 0x233a0dc77a0 'RAND_egd_bytes' 'int (const char *, int)'
          |-ImplicitCastExpr 0x233a0dd0310 <col:28> 'const char *' <LValueToRValue>
          | `-DeclRefExpr 0x233a0dd0250 <col:28> 'const char *' lvalue ParmVar 0x233a0dd0090 'path' 'const char *'
          `-IntegerLiteral 0x233a0dd0270 <col:34> 'int' 255
