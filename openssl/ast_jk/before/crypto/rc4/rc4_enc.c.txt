TranslationUnitDecl 0x252169a4ce8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x252169a5580 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x252169a5280 '__int128'
|-TypedefDecl 0x252169a55f0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x252169a52a0 'unsigned __int128'
|-TypedefDecl 0x252169a5928 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x252169a56e0 'struct __NSConstantString_tag'
|   `-Record 0x252169a5648 '__NSConstantString_tag'
|-TypedefDecl 0x252169a5998 <<invalid sloc>> <invalid sloc> implicit referenced size_t 'unsigned long long'
| `-BuiltinType 0x252169a4ec0 'unsigned long long'
|-TypedefDecl 0x252169a5a30 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x252169a59f0 'char *'
|   `-BuiltinType 0x252169a4d80 'char'
|-TypedefDecl 0x252169a5aa0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x252169a59f0 'char *'
|   `-BuiltinType 0x252169a4d80 'char'
`-FunctionDecl 0x2521843ba28 <.//openssl//file_jk/before\crypto\rc4\rc4_enc.c:22:1, line:86:1> line:22:6 invalid RC4 'void (int *, size_t, const unsigned char *, unsigned char *)'
  |-ParmVarDecl 0x252169a5b40 <col:10, col:19> col:19 invalid key 'int *'
  |-ParmVarDecl 0x252169a5be0 <col:24, col:31> col:31 used len 'size_t':'unsigned long long'
  |-ParmVarDecl 0x2521843b830 <col:36, col:57> col:57 used indata 'const unsigned char *'
  |-ParmVarDecl 0x2521843b8e0 <line:23:10, col:25> col:25 used outdata 'unsigned char *'
  `-CompoundStmt 0x2521843e470 <line:24:1, line:86:1>
    |-DeclStmt 0x2521843bb80 <line:25:5, col:24>
    | `-VarDecl 0x2521843bb18 <col:5, col:23> col:23 invalid d 'int *' register
    |-DeclStmt 0x2521843bc18 <line:26:5, col:34>
    | `-VarDecl 0x2521843bbb0 <col:5, col:22> col:22 invalid x 'int' register
    |-DeclStmt 0x2521843bca8 <line:27:5, col:13>
    | `-VarDecl 0x2521843bc40 <col:5, col:12> col:12 used i 'size_t':'unsigned long long'
    |-BinaryOperator 0x2521843bd90 <line:41:5, col:16> 'size_t':'unsigned long long' '='
    | |-DeclRefExpr 0x2521843bcc0 <col:5> 'size_t':'unsigned long long' lvalue Var 0x2521843bc40 'i' 'size_t':'unsigned long long'
    | `-BinaryOperator 0x2521843bd70 <col:9, col:16> 'size_t':'unsigned long long' '>>'
    |   |-ImplicitCastExpr 0x2521843bd58 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
    |   | `-DeclRefExpr 0x2521843bcf8 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x252169a5be0 'len' 'size_t':'unsigned long long'
    |   `-IntegerLiteral 0x2521843bd30 <col:16> 'int' 3
    |-IfStmt 0x2521843cfe0 <line:42:5, line:57:5>
    | |-ImplicitCastExpr 0x2521843bdd0 <line:42:9> 'size_t':'unsigned long long' <LValueToRValue>
    | | `-DeclRefExpr 0x2521843bdb0 <col:9> 'size_t':'unsigned long long' lvalue Var 0x2521843bc40 'i' 'size_t':'unsigned long long'
    | `-CompoundStmt 0x2521843cfc8 <col:12, line:57:5>
    |   `-ForStmt 0x2521843cf90 <line:43:9, line:56:9>
    |     |-<<<NULL>>>
    |     |-<<<NULL>>>
    |     |-<<<NULL>>>
    |     |-<<<NULL>>>
    |     `-CompoundStmt 0x2521843cf28 <line:43:18, line:56:9>
    |       |-NullStmt 0x2521843bff8 <line:44:40>
    |       |-NullStmt 0x2521843c1e0 <line:45:40>
    |       |-NullStmt 0x2521843c3c8 <line:46:40>
    |       |-NullStmt 0x2521843c5b0 <line:47:40>
    |       |-NullStmt 0x2521843c798 <line:48:40>
    |       |-NullStmt 0x2521843c9a8 <line:49:40>
    |       |-NullStmt 0x2521843cb90 <line:50:40>
    |       |-NullStmt 0x2521843cd78 <line:51:40>
    |       |-CompoundAssignOperator 0x2521843cdc8 <line:52:13, col:23> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
    |       | |-DeclRefExpr 0x2521843cd80 <col:13> 'const unsigned char *' lvalue ParmVar 0x2521843b830 'indata' 'const unsigned char *'
    |       | `-IntegerLiteral 0x2521843cda0 <col:23> 'int' 8
    |       |-CompoundAssignOperator 0x2521843ce40 <line:53:13, col:24> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
    |       | |-DeclRefExpr 0x2521843cdf8 <col:13> 'unsigned char *' lvalue ParmVar 0x2521843b8e0 'outdata' 'unsigned char *'
    |       | `-IntegerLiteral 0x2521843ce18 <col:24> 'int' 8
    |       `-IfStmt 0x2521843cf10 <line:54:13, line:55:17>
    |         |-BinaryOperator 0x2521843cee8 <line:54:17, col:24> 'int' '=='
    |         | |-UnaryOperator 0x2521843ce90 <col:17, col:19> 'size_t':'unsigned long long' prefix '--'
    |         | | `-DeclRefExpr 0x2521843ce70 <col:19> 'size_t':'unsigned long long' lvalue Var 0x2521843bc40 'i' 'size_t':'unsigned long long'
    |         | `-ImplicitCastExpr 0x2521843ced0 <col:24> 'unsigned long long' <IntegralCast>
    |         |   `-IntegerLiteral 0x2521843cea8 <col:24> 'int' 0
    |         `-BreakStmt 0x2521843cf08 <line:55:17>
    |-BinaryOperator 0x2521843d0b0 <line:58:5, col:15> 'size_t':'unsigned long long' '='
    | |-DeclRefExpr 0x2521843cff8 <col:5> 'size_t':'unsigned long long' lvalue Var 0x2521843bc40 'i' 'size_t':'unsigned long long'
    | `-BinaryOperator 0x2521843d090 <col:9, col:15> 'unsigned long long' '&'
    |   |-ImplicitCastExpr 0x2521843d060 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
    |   | `-DeclRefExpr 0x2521843d018 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x252169a5be0 'len' 'size_t':'unsigned long long'
    |   `-ImplicitCastExpr 0x2521843d078 <col:15> 'unsigned long long' <IntegralCast>
    |     `-IntegerLiteral 0x2521843d038 <col:15> 'int' 7
    `-IfStmt 0x2521843e458 <line:59:5, line:83:5>
      |-ImplicitCastExpr 0x2521843d0f0 <line:59:9> 'size_t':'unsigned long long' <LValueToRValue>
      | `-DeclRefExpr 0x2521843d0d0 <col:9> 'size_t':'unsigned long long' lvalue Var 0x2521843bc40 'i' 'size_t':'unsigned long long'
      `-CompoundStmt 0x2521843e440 <col:12, line:83:5>
        `-ForStmt 0x2521843e408 <line:60:9, line:82:9>
          |-<<<NULL>>>
          |-<<<NULL>>>
          |-<<<NULL>>>
          |-<<<NULL>>>
          `-CompoundStmt 0x2521843e388 <line:60:18, line:82:9>
            |-NullStmt 0x2521843d2e8 <line:61:40>
            |-IfStmt 0x2521843d390 <line:62:13, line:63:17>
            | |-BinaryOperator 0x2521843d368 <line:62:17, col:24> 'int' '=='
            | | |-UnaryOperator 0x2521843d310 <col:17, col:19> 'size_t':'unsigned long long' prefix '--'
            | | | `-DeclRefExpr 0x2521843d2f0 <col:19> 'size_t':'unsigned long long' lvalue Var 0x2521843bc40 'i' 'size_t':'unsigned long long'
            | | `-ImplicitCastExpr 0x2521843d350 <col:24> 'unsigned long long' <IntegralCast>
            | |   `-IntegerLiteral 0x2521843d328 <col:24> 'int' 0
            | `-BreakStmt 0x2521843d388 <line:63:17>
            |-NullStmt 0x2521843d588 <line:64:40>
            |-IfStmt 0x2521843d630 <line:65:13, line:66:17>
            | |-BinaryOperator 0x2521843d608 <line:65:17, col:24> 'int' '=='
            | | |-UnaryOperator 0x2521843d5b0 <col:17, col:19> 'size_t':'unsigned long long' prefix '--'
            | | | `-DeclRefExpr 0x2521843d590 <col:19> 'size_t':'unsigned long long' lvalue Var 0x2521843bc40 'i' 'size_t':'unsigned long long'
            | | `-ImplicitCastExpr 0x2521843d5f0 <col:24> 'unsigned long long' <IntegralCast>
            | |   `-IntegerLiteral 0x2521843d5c8 <col:24> 'int' 0
            | `-BreakStmt 0x2521843d628 <line:66:17>
            |-NullStmt 0x2521843d828 <line:67:40>
            |-IfStmt 0x2521843d8f0 <line:68:13, line:69:17>
            | |-BinaryOperator 0x2521843d8c8 <line:68:17, col:24> 'int' '=='
            | | |-UnaryOperator 0x2521843d870 <col:17, col:19> 'size_t':'unsigned long long' prefix '--'
            | | | `-DeclRefExpr 0x2521843d850 <col:19> 'size_t':'unsigned long long' lvalue Var 0x2521843bc40 'i' 'size_t':'unsigned long long'
            | | `-ImplicitCastExpr 0x2521843d8b0 <col:24> 'unsigned long long' <IntegralCast>
            | |   `-IntegerLiteral 0x2521843d888 <col:24> 'int' 0
            | `-BreakStmt 0x2521843d8e8 <line:69:17>
            |-NullStmt 0x2521843dae8 <line:70:40>
            |-IfStmt 0x2521843db90 <line:71:13, line:72:17>
            | |-BinaryOperator 0x2521843db68 <line:71:17, col:24> 'int' '=='
            | | |-UnaryOperator 0x2521843db10 <col:17, col:19> 'size_t':'unsigned long long' prefix '--'
            | | | `-DeclRefExpr 0x2521843daf0 <col:19> 'size_t':'unsigned long long' lvalue Var 0x2521843bc40 'i' 'size_t':'unsigned long long'
            | | `-ImplicitCastExpr 0x2521843db50 <col:24> 'unsigned long long' <IntegralCast>
            | |   `-IntegerLiteral 0x2521843db28 <col:24> 'int' 0
            | `-BreakStmt 0x2521843db88 <line:72:17>
            |-NullStmt 0x2521843dd88 <line:73:40>
            |-IfStmt 0x2521843de30 <line:74:13, line:75:17>
            | |-BinaryOperator 0x2521843de08 <line:74:17, col:24> 'int' '=='
            | | |-UnaryOperator 0x2521843ddb0 <col:17, col:19> 'size_t':'unsigned long long' prefix '--'
            | | | `-DeclRefExpr 0x2521843dd90 <col:19> 'size_t':'unsigned long long' lvalue Var 0x2521843bc40 'i' 'size_t':'unsigned long long'
            | | `-ImplicitCastExpr 0x2521843ddf0 <col:24> 'unsigned long long' <IntegralCast>
            | |   `-IntegerLiteral 0x2521843ddc8 <col:24> 'int' 0
            | `-BreakStmt 0x2521843de28 <line:75:17>
            |-NullStmt 0x2521843e028 <line:76:40>
            |-IfStmt 0x2521843e0d0 <line:77:13, line:78:17>
            | |-BinaryOperator 0x2521843e0a8 <line:77:17, col:24> 'int' '=='
            | | |-UnaryOperator 0x2521843e050 <col:17, col:19> 'size_t':'unsigned long long' prefix '--'
            | | | `-DeclRefExpr 0x2521843e030 <col:19> 'size_t':'unsigned long long' lvalue Var 0x2521843bc40 'i' 'size_t':'unsigned long long'
            | | `-ImplicitCastExpr 0x2521843e090 <col:24> 'unsigned long long' <IntegralCast>
            | |   `-IntegerLiteral 0x2521843e068 <col:24> 'int' 0
            | `-BreakStmt 0x2521843e0c8 <line:78:17>
            |-NullStmt 0x2521843e2c8 <line:79:40>
            `-IfStmt 0x2521843e370 <line:80:13, line:81:17>
              |-BinaryOperator 0x2521843e348 <line:80:17, col:24> 'int' '=='
              | |-UnaryOperator 0x2521843e2f0 <col:17, col:19> 'size_t':'unsigned long long' prefix '--'
              | | `-DeclRefExpr 0x2521843e2d0 <col:19> 'size_t':'unsigned long long' lvalue Var 0x2521843bc40 'i' 'size_t':'unsigned long long'
              | `-ImplicitCastExpr 0x2521843e330 <col:24> 'unsigned long long' <IntegralCast>
              |   `-IntegerLiteral 0x2521843e308 <col:24> 'int' 0
              `-BreakStmt 0x2521843e368 <line:81:17>
