TranslationUnitDecl 0x219a3bbee68 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x219a3bbf700 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x219a3bbf400 '__int128'
|-TypedefDecl 0x219a3bbf770 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x219a3bbf420 'unsigned __int128'
|-TypedefDecl 0x219a3bbfaa8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x219a3bbf860 'struct __NSConstantString_tag'
|   `-Record 0x219a3bbf7c8 '__NSConstantString_tag'
|-TypedefDecl 0x219a3bbfb18 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x219a3bbf040 'unsigned long long'
|-TypedefDecl 0x219a3bbfbb0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x219a3bbfb70 'char *'
|   `-BuiltinType 0x219a3bbef00 'char'
|-TypedefDecl 0x219a3bbfc20 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x219a3bbfb70 'char *'
|   `-BuiltinType 0x219a3bbef00 'char'
|-TypedefDecl 0x219a3bbfce0 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x219a3bbf040 'unsigned long long'
|-TypedefDecl 0x219a3bbfd50 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x219a3bbfb70 'char *'
|   `-BuiltinType 0x219a3bbef00 'char'
|-FunctionDecl 0x219a571a410 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x219a571a4b0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x219a571a520 <col:21> Implicit
|-FunctionDecl 0x219a571a578 prev 0x219a571a410 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x219a571a2a0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x219a571a668 <col:21> Inherited Implicit
|-TypedefDecl 0x219a571a6a8 prev 0x219a3bbfb18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x219a3bbf040 'unsigned long long'
|-TypedefDecl 0x219a571a750 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x219a571a720 'size_t' sugar
|   |-Typedef 0x219a571a6a8 'size_t'
|   `-BuiltinType 0x219a3bbf040 'unsigned long long'
|-TypedefDecl 0x219a571a7c0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x219a3bbefa0 'long long'
|-TypedefDecl 0x219a571a830 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x219a3bbefa0 'long long'
|-TypedefDecl 0x219a571a8a0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x219a3bbefe0 'unsigned short'
|-TypedefDecl 0x219a571a910 <line:541:1, col:24> col:24 referenced wint_t 'unsigned short'
| `-BuiltinType 0x219a3bbefe0 'unsigned short'
|-TypedefDecl 0x219a571a980 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x219a3bbefe0 'unsigned short'
|-TypedefDecl 0x219a571a9f0 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x219a3bbef60 'int'
|-TypedefDecl 0x219a571aa60 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x219a3bbef80 'long'
|-TypedefDecl 0x219a571aad0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x219a3bbefa0 'long long'
|-TypedefDecl 0x219a571ab60 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x219a571ab30 '__time64_t' sugar
|   |-Typedef 0x219a571aad0 '__time64_t'
|   `-BuiltinType 0x219a3bbefa0 'long long'
|-FunctionDecl 0x219a571acd8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x219a571aef8 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x219a5755f10 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x219a571b038 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x219a571b0b0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x219a571b128 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x219a571b1a8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x219a5755cb0 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x219a5755ff0 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x219a57560b0 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x219a5756220 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x219a57561d0 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x219a5756170 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x219a5756090 'struct threadlocaleinfostruct'
|       `-Record 0x219a575ed40 'threadlocaleinfostruct'
|-TypedefDecl 0x219a5756330 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x219a57562e0 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x219a5756280 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x219a5756150 'struct threadmbcinfostruct'
|       `-Record 0x219a57560b0 'threadmbcinfostruct'
|-RecordDecl 0x219a5756388 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x219a5756440 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x219a5756500 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x219a5756590 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x219a5756620 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x219a57566d8 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x219a5756680 'struct localeinfo_struct' sugar
|   `-RecordType 0x219a57564e0 'struct localeinfo_struct'
|     `-Record 0x219a5756440 'localeinfo_struct'
|-TypedefDecl 0x219a57567b0 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x219a5756760 'struct localeinfo_struct *'
|   `-ElaboratedType 0x219a5756680 'struct localeinfo_struct' sugar
|     `-RecordType 0x219a57564e0 'struct localeinfo_struct'
|       `-Record 0x219a5756440 'localeinfo_struct'
|-RecordDecl 0x219a5756828 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x219a57568e0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x219a5756958 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x219a5756a18 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x219a5756ab0 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x219a5756b20 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x219a5756bd8 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x219a5756b80 'struct localerefcount' sugar
|   `-RecordType 0x219a57568c0 'struct localerefcount'
|     `-Record 0x219a5756828 'localerefcount'
|-RecordDecl 0x219a575ed40 prev 0x219a5755ff0 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x219a575edc0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x219a575ee38 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x219a575eea8 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x219a575ef18 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x219a575ef88 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x219a575f148 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x219a575f1b8 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x219a575f228 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x219a575f298 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x219a575f308 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x219a575f378 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x219a575f3d0 parent 0x219a3bbee68 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x219a575f560 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x219a575f5d0 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x219a575f640 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x219a575f6b0 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x219a575f750 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x219a575f7c0 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x219a575f8d0 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x219a575fa08 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x219a575fab8 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x219a575fa60 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x219a5756090 'struct threadlocaleinfostruct'
|     `-Record 0x219a575ed40 'threadlocaleinfostruct'
|-RecordDecl 0x219a575fb50 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:63:1, line:72:9> line:63:8 struct _iobuf definition
| |-MaxFieldAlignmentAttr 0x219a575fc10 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x219a575fc88 <line:64:9, col:15> col:15 _ptr 'char *'
| |-FieldDecl 0x219a575fd50 <line:65:9, col:15> col:15 _cnt 'int'
| |-FieldDecl 0x219a575fdc0 <line:66:9, col:15> col:15 _base 'char *'
| |-FieldDecl 0x219a575fe30 <line:67:9, col:15> col:15 _flag 'int'
| |-FieldDecl 0x219a575fea0 <line:68:9, col:15> col:15 _file 'int'
| |-FieldDecl 0x219a575ff10 <line:69:9, col:15> col:15 _charbuf 'int'
| |-FieldDecl 0x219a575ff80 <line:70:9, col:15> col:15 _bufsiz 'int'
| `-FieldDecl 0x219a575fff0 <line:71:9, col:15> col:15 _tmpfname 'char *'
|-TypedefDecl 0x219a57600a0 <line:73:1, col:23> col:23 referenced FILE 'struct _iobuf':'struct _iobuf'
| `-ElaboratedType 0x219a5760050 'struct _iobuf' sugar
|   `-RecordType 0x219a575fbf0 'struct _iobuf'
|     `-Record 0x219a575fb50 '_iobuf'
|-FunctionDecl 0x219a57602d8 <line:137:9, col:39> col:24 __iob_func 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|-TypedefDecl 0x219a57603a8 <line:144:1, col:17> col:17 referenced fpos_t 'long long'
| `-BuiltinType 0x219a3bbefa0 'long long'
|-FunctionDecl 0x219a5760588 <line:175:24, col:65> col:36 _filbuf 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x219a5760410 <col:52, col:59> col:59 _File 'FILE *'
|-FunctionDecl 0x219a5760880 <line:176:28, col:82> col:40 _flsbuf 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x219a5760660 <col:53, col:57> col:57 _Ch 'int'
| `-ParmVarDecl 0x219a57606d8 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x219a5760c30 <line:178:24, col:121> col:39 _fsopen 'FILE *(const char *, const char *, int) __attribute__((cdecl))':'FILE *(const char *, const char *, int)'
| |-ParmVarDecl 0x219a5760960 <col:54, col:67> col:67 _Filename 'const char *'
| |-ParmVarDecl 0x219a57609e0 <col:85, col:98> col:98 _Mode 'const char *'
| `-ParmVarDecl 0x219a5760a60 <col:110, col:114> col:114 _ShFlag 'int'
|-FunctionDecl 0x219a576af70 <line:180:9, col:51> col:22 clearerr 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x219a576ae00 <col:39, col:46> col:46 _File 'FILE *'
|-FunctionDecl 0x219a576b1a0 <line:182:28, col:76> col:44 clearerr_s 'errno_t (FILE *) __attribute__((cdecl))':'errno_t (FILE *)'
| `-ParmVarDecl 0x219a576b060 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x219a576b350 <line:184:28, col:67> col:40 fclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x219a576b270 <col:55, col:62> col:62 _File 'FILE *'
|-FunctionDecl 0x219a576b540 <line:185:28, col:55> col:40 _fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x219a576b838 <line:187:24, col:94> col:39 _fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x219a576b610 <col:52, col:56> col:56 _FileHandle 'int'
| `-ParmVarDecl 0x219a576b690 <col:76, col:89> col:89 _Mode 'const char *'
|-FunctionDecl 0x219a576b9f0 <line:189:24, col:58> col:36 feof 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x219a576b910 <col:46, col:53> col:53 _File 'FILE *'
|-FunctionDecl 0x219a576bba0 <line:190:24, col:60> col:36 ferror 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x219a576bac0 <col:48, col:55> col:55 _File 'FILE *'
|-FunctionDecl 0x219a576bd50 <line:191:28, col:71> col:40 fflush 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x219a576bc70 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x219a5763e98 <line:192:28, col:66> col:40 fgetc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x219a5763db8 <col:54, col:61> col:61 _File 'FILE *'
|-FunctionDecl 0x219a5764028 <line:193:28, col:54> col:40 _fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x219a5764390 <line:194:28, col:90> col:40 fgetpos 'int (FILE *, fpos_t *) __attribute__((cdecl))':'int (FILE *, fpos_t *)'
| |-ParmVarDecl 0x219a57640f0 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x219a57641e8 <col:77, col:86> col:86 _Pos 'fpos_t *'
|-FunctionDecl 0x219a5764748 <line:195:28, col:128> col:43 fgets 'char *(char *, int, FILE *) __attribute__((cdecl))':'char *(char *, int, FILE *)'
| |-ParmVarDecl 0x219a5764470 <col:75, col:82> col:82 _Buf 'char *'
| |-ParmVarDecl 0x219a57644f0 <col:93, col:97> col:97 _MaxCount 'int'
| `-ParmVarDecl 0x219a5764568 <col:116, col:123> col:123 _File 'FILE *'
|-FunctionDecl 0x219a5764908 <line:197:24, col:61> col:36 _fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x219a5764828 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x219a5764bd0 <line:204:24, col:117> col:39 _tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x219a57649e0 <col:59, col:72> col:72 _DirName 'const char *'
| `-ParmVarDecl 0x219a5764a60 <col:93, col:106> col:106 _FilePrefix 'const char *'
|-FunctionDecl 0x219a5769df0 <line:210:28, col:54> col:40 _flushall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x219a576a1e8 <line:211:72> col:72 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x219a576a288 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x219a576a2f0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x219a576a368 prev 0x219a576a1e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:211:134> col:72 fopen 'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x219a5769fc0 <col:85, col:98> col:98 _Filename 'const char *'
| |-ParmVarDecl 0x219a576a040 <col:116, col:129> col:129 _Mode 'const char *'
| `-DeprecatedAttr 0x219a576a418 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x219a576a890 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:213:28, col:149> col:44 fopen_s 'errno_t (FILE **, const char *, const char *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *)'
| |-ParmVarDecl 0x219a576a5c0 <col:78, col:86> col:86 _File 'FILE **'
| |-ParmVarDecl 0x219a576a640 <col:100, col:113> col:113 _Filename 'const char *'
| `-ParmVarDecl 0x219a576a6c0 <col:131, col:144> col:144 _Mode 'const char *'
|-FunctionDecl 0x219a576abb0 <line:215:40> col:40 implicit fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x219a576ac50 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x219a576acb8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x219a576ad30 <col:40> Implicit printf 2 3
|-FunctionDecl 0x219a5765db0 prev 0x219a576abb0 <col:28, col:125> col:40 fprintf 'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x219a576a970 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x219a576a9f0 <col:100, col:113> col:113 _Format 'const char *'
| `-FormatAttr 0x219a5765ea8 <col:40> Inherited printf 2 3
|-FunctionDecl 0x219a5766070 <line:217:28, col:127> col:40 fprintf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x219a5765ef0 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x219a5765f70 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x219a57662c8 <line:219:28, col:80> col:40 fputc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x219a5766150 <col:51, col:55> col:55 _Ch 'int'
| `-ParmVarDecl 0x219a57661c8 <col:68, col:75> col:75 _File 'FILE *'
|-FunctionDecl 0x219a57664f8 <line:220:28, col:62> col:40 _fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x219a57663a8 <col:55, col:59> col:59 _Ch 'int'
|-FunctionDecl 0x219a57667f0 <line:221:28, col:92> col:40 fputs 'int (const char *, FILE *) __attribute__((cdecl))':'int (const char *, FILE *)'
| |-ParmVarDecl 0x219a57665d0 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x219a5766648 <col:80, col:87> col:87 _File 'FILE *'
|-FunctionDecl 0x219a5766c88 <line:222:43> col:43 implicit fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x219a5766d28 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x219a576be10 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x219a576be78 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x219a576bee0 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x219a576bf68 prev 0x219a5766c88 <col:28, col:171> col:43 fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x219a57668d0 <col:89, col:96> col:96 _DstBuf 'void *'
| |-ParmVarDecl 0x219a5766948 <col:110, col:117> col:117 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x219a57669c0 <col:136, col:143> col:143 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x219a5766a38 <col:159, col:166> col:166 _File 'FILE *'
|-FunctionDecl 0x219a576c470 <line:224:28, col:195> col:43 fread_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x219a576c058 <col:91, col:98> col:98 _DstBuf 'void *'
| |-ParmVarDecl 0x219a576c0d0 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x219a576c148 <col:134, col:141> col:141 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x219a576c1c0 <col:160, col:167> col:167 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x219a576c238 <col:183, col:190> col:190 _File 'FILE *'
|-FunctionDecl 0x219a576c930 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:226:160> col:74 freopen 'FILE *(const char *, const char *, FILE *) __attribute__((cdecl))':'FILE *(const char *, const char *, FILE *)'
| |-ParmVarDecl 0x219a576c660 <col:89, col:102> col:102 _Filename 'const char *'
| |-ParmVarDecl 0x219a576c6e0 <col:120, col:133> col:133 _Mode 'const char *'
| |-ParmVarDecl 0x219a576c758 <col:148, col:155> col:155 _File 'FILE *'
| `-DeprecatedAttr 0x219a576c9e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using freopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x219a576cec8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:228:28, col:176> col:44 freopen_s 'errno_t (FILE **, const char *, const char *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *, FILE *)'
| |-ParmVarDecl 0x219a576cb30 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x219a576cbb0 <col:102, col:115> col:115 _Filename 'const char *'
| |-ParmVarDecl 0x219a576cc30 <col:133, col:146> col:146 _Mode 'const char *'
| `-ParmVarDecl 0x219a576cca8 <col:161, col:168> col:168 _OldFile 'FILE *'
|-FunctionDecl 0x219a576d270 <line:230:70> col:70 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x219a576d310 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x219a576d378 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x219a576d3f0 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x219a576d458 prev 0x219a576d270 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:230:153> col:70 fscanf 'int (FILE *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x219a576d0a8 <col:85, col:92> col:92 _File 'FILE *'
| |-ParmVarDecl 0x219a576d128 <col:128, col:141> col:141 _Format 'const char *'
| |-FormatAttr 0x219a576d638 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x219a576d508 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x219a576da78 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:231:201> col:77 _fscanf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x219a576d778 <col:95, col:102> col:102 _File 'FILE *'
| |-ParmVarDecl 0x219a576d7f8 <col:148, col:161> col:161 _Format 'const char *'
| |-ParmVarDecl 0x219a576d890 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x219a576db30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x219a576de30 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:235:28, col:127> col:40 fscanf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x219a576dc70 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x219a576dcf0 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x219a576e120 <line:237:28, col:168> col:40 _fscanf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x219a576df08 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x219a576df88 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x219a576e000 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x219a576e480 <line:239:28, col:94> col:40 fsetpos 'int (FILE *, const fpos_t *) __attribute__((cdecl))':'int (FILE *, const fpos_t *)'
| |-ParmVarDecl 0x219a576e200 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x219a576e2d8 <col:75, col:90> col:90 _Pos 'const fpos_t *'
|-FunctionDecl 0x219a576e838 <line:240:28, col:103> col:40 fseek 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x219a576e558 <col:54, col:61> col:61 _File 'FILE *'
| |-ParmVarDecl 0x219a576e5d8 <col:73, col:78> col:78 _Offset 'long'
| `-ParmVarDecl 0x219a576e658 <col:92, col:96> col:96 _Origin 'int'
|-FunctionDecl 0x219a576ea98 <line:241:24, col:63> col:37 ftell 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x219a576e918 <col:51, col:58> col:58 _File 'FILE *'
|-FunctionDecl 0x219a5766e08 <line:243:28, col:110> col:40 _fseeki64 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x219a576eb68 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x219a576ebe8 <col:77, col:85> col:85 _Offset 'long long'
| `-ParmVarDecl 0x219a576ec68 <col:99, col:103> col:103 _Origin 'int'
|-FunctionDecl 0x219a5767068 <line:244:24, col:70> col:40 _ftelli64 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x219a5766ee8 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x219a5767528 <line:246:43> col:43 implicit fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x219a57675c8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x219a5767630 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x219a5767698 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x219a5767700 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x219a5767788 prev 0x219a5767528 <col:28, col:159> col:43 fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x219a5767170 <col:81, col:94> col:94 _Str 'const void *'
| |-ParmVarDecl 0x219a57671e8 <col:105, col:112> col:112 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x219a5767260 <col:124, col:131> col:131 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x219a57672d8 <col:147, col:154> col:154 _File 'FILE *'
|-FunctionDecl 0x219a5767950 <line:247:24, col:61> col:36 getc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x219a5767870 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x219a5767ae0 <line:248:24, col:48> col:36 getchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x219a5767c68 <line:249:24, col:53> col:36 _getmaxstdio 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x219a5767f90 <line:251:9, col:84> col:24 gets_s 'char *(char *, rsize_t) __attribute__((cdecl))':'char *(char *, rsize_t)'
| |-ParmVarDecl 0x219a5767d38 <col:53, col:60> col:60 _Buf 'char *'
| `-ParmVarDecl 0x219a5767de0 <col:71, col:79> col:79 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x219a57682b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:254:80 gets 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x219a5768170 <col:139, col:145> col:145 _Buffer 'char *'
| `-DeprecatedAttr 0x219a5768360 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x219a5768580 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:255:16, col:54> col:28 _getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x219a57684a0 <col:42, col:49> col:49 _File 'FILE *'
|-FunctionDecl 0x219a57687a0 <line:258:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x219a5768658 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x219a5768950 <line:261:28, col:68> col:40 _pclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x219a5768870 <col:56, col:63> col:63 _File 'FILE *'
|-FunctionDecl 0x219a5768ba0 <line:262:24, col:101> col:39 _popen 'FILE *(const char *, const char *) __attribute__((cdecl))':'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x219a5768a28 <col:53, col:66> col:66 _Command 'const char *'
| `-ParmVarDecl 0x219a5768aa8 <col:83, col:96> col:96 _Mode 'const char *'
|-FunctionDecl 0x219a5768de0 <line:264:40> col:40 implicit printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x219a5768e80 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x219a5768ef0 <col:40> Implicit printf 1 2
|-FunctionDecl 0x219a5768f58 prev 0x219a5768de0 <col:28, col:102> col:40 printf 'int (const char *, ...)'
| |-ParmVarDecl 0x219a5768c80 <col:77, col:90> col:90 _Format 'const char *'
| `-FormatAttr 0x219a5769048 <col:40> Inherited printf 1 2
|-FunctionDecl 0x219a5769178 <line:266:28, col:104> col:40 printf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x219a5769098 <col:79, col:92> col:92 _Format 'const char *'
|-FunctionDecl 0x219a57693c8 <line:268:28, col:79> col:40 putc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x219a5769250 <col:50, col:54> col:54 _Ch 'int'
| `-ParmVarDecl 0x219a57692c8 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x219a5769588 <line:269:28, col:60> col:40 putchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x219a57694a8 <col:53, col:57> col:57 _Ch 'int'
|-FunctionDecl 0x219a57697a8 <line:270:28, col:69> col:40 puts 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x219a5769660 <col:52, col:65> col:65 _Str 'const char *'
|-FunctionDecl 0x219a57699f8 <line:271:28, col:82> col:40 _putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x219a5769880 <col:51, col:55> col:55 _Word 'int'
| `-ParmVarDecl 0x219a57698f8 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x219a5769bb8 <line:274:9, col:57> col:21 remove 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x219a5769ad8 <col:35, col:48> col:48 _Filename 'const char *'
|-FunctionDecl 0x219a57c0010 <line:275:24, col:109> col:36 rename 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x219a5769c90 <col:50, col:63> col:63 _OldFilename 'const char *'
| `-ParmVarDecl 0x219a5769d10 <col:84, col:97> col:97 _NewFilename 'const char *'
|-FunctionDecl 0x219a57c01d0 <line:276:9, col:58> col:21 _unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x219a57c00f0 <col:36, col:49> col:49 _Filename 'const char *'
|-FunctionDecl 0x219a57c0460 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:278:89> col:53 unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x219a57c0380 <col:67, col:80> col:80 _Filename 'const char *'
| `-DeprecatedAttr 0x219a57c0508 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _unlink. See online help for details." ""
|-FunctionDecl 0x219a57c0700 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:281:9, col:49> col:22 rewind 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x219a57c0628 <col:37, col:44> col:44 _File 'FILE *'
|-FunctionDecl 0x219a57c0890 <line:282:28, col:51> col:40 _rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x219a57c0b38 <line:283:69> col:69 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x219a57c0bd8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x219a57c0c48 <col:69> Implicit scanf 1 2
|-FunctionDecl 0x219a57c0cb0 prev 0x219a57c0b38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:283:129> col:69 scanf 'int (const char *restrict, ...)'
| |-ParmVarDecl 0x219a57c0a20 <col:104, col:117> col:117 _Format 'const char *'
| |-FormatAttr 0x219a57c0e88 <col:69> Inherited scanf 1 2
| `-DeprecatedAttr 0x219a57c0d58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x219a57bd220 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:284:177> col:76 _scanf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x219a57bcfe8 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x219a57bd060 <col:155, col:165> col:165 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x219a57bd2d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _scanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x219a57bd4f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:288:40, col:116> col:52 scanf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x219a57bd418 <col:91, col:104> col:104 _Format 'const char *'
|-FunctionDecl 0x219a57bd748 <line:290:40, col:157> col:52 _scanf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x219a57bd5d0 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x219a57bd648 <col:135, col:145> col:145 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x219a57bdb08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:292:150> col:55 setbuf 'void (FILE *, char *) __attribute__((cdecl))':'void (FILE *, char *)'
| |-ParmVarDecl 0x219a57bd8e0 <col:70, col:77> col:77 _File 'FILE *'
| |-ParmVarDecl 0x219a57bd960 <col:136, col:143> col:143 _Buffer 'char *'
| `-DeprecatedAttr 0x219a57bdbb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using setvbuf instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x219a57bdde0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:293:28, col:66> col:40 _setmaxstdio 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x219a57bdd00 <col:58, col:62> col:62 _Max 'int'
|-FunctionDecl 0x219a57c1098 <line:294:28, col:93> col:49 _set_output_format 'unsigned int (unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int)'
| `-ParmVarDecl 0x219a57c0f50 <col:73, col:86> col:86 _Format 'unsigned int'
|-FunctionDecl 0x219a57c1280 <line:295:28, col:72> col:49 _get_output_format 'unsigned int (void) __attribute__((cdecl))':'unsigned int (void)'
|-FunctionDecl 0x219a57c16d0 <line:296:28, col:145> col:40 setvbuf 'int (FILE *, char *, int, size_t) __attribute__((cdecl))':'int (FILE *, char *, int, size_t)'
| |-ParmVarDecl 0x219a57c1348 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x219a57c13c8 <col:99, col:106> col:106 _Buf 'char *'
| |-ParmVarDecl 0x219a57c1448 <col:117, col:121> col:121 _Mode 'int'
| `-ParmVarDecl 0x219a57c14c0 <col:133, col:140> col:140 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x219a57c1b50 <line:297:40, col:213> col:52 _snprintf_s 'int (char *, size_t, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, ...)'
| |-ParmVarDecl 0x219a57c17c0 <col:93, col:100> col:100 _DstBuf 'char *'
| |-ParmVarDecl 0x219a57c1838 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x219a57c18b0 <col:140, col:147> col:147 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x219a57c1930 <col:188, col:201> col:201 _Format 'const char *'
|-FunctionDecl 0x219a57bdf20 <line:300:40, col:188> col:52 sprintf_s 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x219a57c1c40 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x219a57c1cb8 <col:112, col:119> col:119 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x219a57c1d38 <col:163, col:176> col:176 _Format 'const char *'
|-FunctionDecl 0x219a57be0e8 <line:303:24, col:101> col:36 _scprintf 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x219a57be008 <col:76, col:89> col:89 _Format 'const char *'
|-FunctionDecl 0x219a57be4c0 <line:304:70> col:70 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x219a57be560 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x219a57be5c8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x219a57be640 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x219a57be6a8 prev 0x219a57be4c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:304:157> col:70 sscanf 'int (const char *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x219a57be280 <col:84, col:97> col:97 _Src 'const char *'
| |-ParmVarDecl 0x219a57be300 <col:132, col:145> col:145 _Format 'const char *'
| |-FormatAttr 0x219a57be888 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x219a57be758 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x219a57bec78 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:305:205> col:77 _sscanf_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x219a57be998 <col:94, col:107> col:107 _Src 'const char *'
| |-ParmVarDecl 0x219a57bea18 <col:152, col:165> col:165 _Format 'const char *'
| |-ParmVarDecl 0x219a57bea90 <col:183, col:193> col:193 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x219a57bed30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x219a57b9fe0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:309:40, col:143> col:52 sscanf_s 'int (const char *, const char *, ...) __attribute__((cdecl))':'int (const char *, const char *, ...)'
| |-ParmVarDecl 0x219a57bee78 <col:68, col:81> col:81 _Src 'const char *'
| `-ParmVarDecl 0x219a57b9ee0 <col:118, col:131> col:131 _Format 'const char *'
|-FunctionDecl 0x219a57ba2d8 <line:311:40, col:184> col:52 _sscanf_s_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x219a57ba0c0 <col:71, col:84> col:84 _Src 'const char *'
| |-ParmVarDecl 0x219a57ba140 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x219a57ba1b8 <col:162, col:172> col:172 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x219a57ba768 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:312:217> col:76 _snscanf 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x219a57ba480 <col:121, col:134> col:134 _Src 'const char *'
| |-ParmVarDecl 0x219a57ba4f8 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x219a57ba578 <col:192, col:205> col:205 _Format 'const char *'
| `-DeprecatedAttr 0x219a57ba820 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x219a57badf0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:313:259> col:78 _snscanf_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x219a57baa60 <col:125, col:138> col:138 _Src 'const char *'
| |-ParmVarDecl 0x219a57baad8 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x219a57bab58 <col:206, col:219> col:219 _Format 'const char *'
| |-ParmVarDecl 0x219a57babd0 <col:237, col:247> col:247 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x219a57c1f60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x219a57c22c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:314:40, col:197> col:52 _snscanf_s 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x219a57c20a8 <col:99, col:112> col:112 _Src 'const char *'
| |-ParmVarDecl 0x219a57c2120 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x219a57c21a0 <col:172, col:185> col:185 _Format 'const char *'
|-FunctionDecl 0x219a57c2658 <line:315:40, col:237> col:52 _snscanf_s_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x219a57c23a8 <col:101, col:114> col:114 _Src 'const char *'
| |-ParmVarDecl 0x219a57c2420 <col:125, col:132> col:132 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x219a57c24a0 <col:184, col:197> col:197 _Format 'const char *'
| `-ParmVarDecl 0x219a57c2518 <col:215, col:225> col:225 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x219a57c28b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:317:86> col:74 tmpfile 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
| `-DeprecatedAttr 0x219a57c2958 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpfile_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x219a57c2c10 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:319:28, col:96> col:44 tmpfile_s 'errno_t (FILE **) __attribute__((cdecl))':'errno_t (FILE **)'
| `-ParmVarDecl 0x219a57c2aa0 <col:83, col:91> col:91 _File 'FILE **'
|-FunctionDecl 0x219a57baef0 <line:320:28, col:106> col:44 tmpnam_s 'errno_t (char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t)'
| |-ParmVarDecl 0x219a57c2ce8 <col:75, col:82> col:82 _Buf 'char *'
| `-ParmVarDecl 0x219a57c2d60 <col:93, col:101> col:101 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x219a57bb170 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:323:79 tmpnam 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x219a57bb090 <col:113, col:119> col:119 _Buffer 'char *'
| `-DeprecatedAttr 0x219a57bb218 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x219a57bb4d8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:324:28, col:81> col:40 ungetc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x219a57bb360 <col:52, col:56> col:56 _Ch 'int'
| `-ParmVarDecl 0x219a57bb3d8 <col:69, col:76> col:76 _File 'FILE *'
|-FunctionDecl 0x219a57bb8f0 <line:325:40> col:40 implicit vfprintf 'int (FILE *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x219a57bb990 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x219a57bb9f8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x219a57bba60 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x219a57bbae0 <col:40> Implicit printf 2 0
|-FunctionDecl 0x219a57bbb48 prev 0x219a57bb8f0 <col:28, col:139> col:40 vfprintf 'int (FILE *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x219a57bb5b0 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x219a57bb630 <col:101, col:114> col:114 _Format 'const char *'
| |-ParmVarDecl 0x219a57bb6a8 <col:123, col:131> col:131 _ArgList 'va_list':'char *'
| `-FormatAttr 0x219a57bbc48 <col:40> Inherited printf 2 0
|-FunctionDecl 0x219a57bef30 <line:326:40> col:40 implicit vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x219a57befd0 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x219a57bf038 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x219a57bf0a0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x219a57bf120 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x219a57bf188 prev 0x219a57bef30 <col:28, col:138> col:40 vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x219a57bbc90 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x219a57bbd10 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x219a57bbd88 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x219a57bf288 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x219a57bf4e8 <line:328:28, col:141> col:40 vfprintf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x219a57bf2d0 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x219a57bf350 <col:103, col:116> col:116 _Format 'const char *'
| `-ParmVarDecl 0x219a57bf3c8 <col:125, col:133> col:133 _ArgList 'va_list':'char *'
|-FunctionDecl 0x219a57bf7e0 <line:329:28, col:140> col:40 vfscanf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x219a57bf5c8 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x219a57bf648 <col:102, col:115> col:115 _Format 'const char *'
| `-ParmVarDecl 0x219a57bf6c0 <col:124, col:132> col:132 _ArgList 'va_list':'char *'
|-FunctionDecl 0x219a57bfb28 <line:331:40> col:40 implicit vprintf 'int (const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x219a57bfbc8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x219a57bfc30 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x219a57bfca8 <col:40> Implicit printf 1 0
|-FunctionDecl 0x219a57bfd10 prev 0x219a57bfb28 <col:28, col:116> col:40 vprintf 'int (const char *, __builtin_va_list)'
| |-ParmVarDecl 0x219a57bf8c8 <col:78, col:91> col:91 _Format 'const char *'
| |-ParmVarDecl 0x219a57bf940 <col:100, col:108> col:108 _ArgList 'va_list':'char *'
| `-FormatAttr 0x219a57bfe08 <col:40> Inherited printf 1 0
|-FunctionDecl 0x219a57c30a8 <line:332:40> col:40 implicit vscanf 'int (const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x219a57c3148 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x219a57c31b0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x219a57c3228 <col:40> Implicit scanf 1 0
|-FunctionDecl 0x219a57c3290 prev 0x219a57c30a8 <col:28, col:115> col:40 vscanf 'int (const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x219a57bfe58 <col:77, col:90> col:90 _Format 'const char *'
| |-ParmVarDecl 0x219a57c2f70 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
| `-FormatAttr 0x219a57c3388 <col:40> Inherited scanf 1 0
|-FunctionDecl 0x219a57c3550 <line:334:28, col:118> col:40 vprintf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x219a57c33d8 <col:80, col:93> col:93 _Format 'const char *'
| `-ParmVarDecl 0x219a57c3450 <col:102, col:110> col:110 _ArgList 'va_list':'char *'
|-FunctionDecl 0x219a57c37a8 <line:335:28, col:117> col:40 vscanf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x219a57c3630 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x219a57c36a8 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x219a57c3d08 <line:337:77> col:77 implicit vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x219a57c3da8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x219a57c3e10 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x219a57c3e78 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x219a57c3ee0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x219a57bbf00 <col:77> Implicit printf 3 0
|-FunctionDecl 0x219a57bbf68 prev 0x219a57c3d08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:337:218> col:77 vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x219a57c3948 <col:111, col:118> col:118 _DstBuf 'char *'
| |-ParmVarDecl 0x219a57c39c0 <col:132, col:139> col:139 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x219a57c3a40 <col:180, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x219a57c3ab8 <col:202, col:210> col:210 _ArgList 'va_list':'char *'
| |-FormatAttr 0x219a57bc158 <col:77> Inherited printf 3 0
| `-DeprecatedAttr 0x219a57bc028 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x219a57bc5c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:339:28, col:206> col:40 vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x219a57bc1a8 <col:77, col:84> col:84 _DstBuf 'char *'
| |-ParmVarDecl 0x219a57bc220 <col:98, col:105> col:105 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x219a57bc298 <col:120, col:127> col:127 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x219a57bc318 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x219a57bc390 <col:190, col:198> col:198 _ArgList 'va_list':'char *'
|-FunctionDecl 0x219a57bca08 <line:342:40, col:227> col:52 _vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x219a57bc6c0 <col:94, col:101> col:101 _DstBuf 'char *'
| |-ParmVarDecl 0x219a57bc738 <col:115, col:122> col:122 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x219a57bc7b0 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x219a57bc830 <col:189, col:202> col:202 _Format 'const char *'
| `-ParmVarDecl 0x219a57bc8a8 <col:211, col:219> col:219 _ArgList 'va_list':'char *'
|-FunctionDecl 0x219a57bcdd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:89 _snprintf 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x219a57bcbc0 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x219a57bcc38 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x219a57bccb8 <col:246, col:260> col:260 _Format 'const char *'
| `-DeprecatedAttr 0x219a57bce90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x219a57c7420 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:100 _vsnprintf 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x219a57c7170 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x219a57c71e8 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x219a57c7268 <col:246, col:260> col:260 _Format 'const char *'
| |-ParmVarDecl 0x219a57c72e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x219a57c74e0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x219a57c78d8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:349:21, col:183> col:33 vsprintf_s 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x219a57c7628 <col:73, col:80> col:80 _DstBuf 'char *'
| |-ParmVarDecl 0x219a57c76a0 <col:94, col:101> col:101 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x219a57c7720 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x219a57c7798 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x219a57c7c98 <line:351:40, col:149> col:52 vsscanf_s 'int (const char *, const char *, va_list) __attribute__((cdecl))':'int (const char *, const char *, va_list)'
| |-ParmVarDecl 0x219a57c79c8 <col:62, col:75> col:75 _Src 'const char *'
| |-ParmVarDecl 0x219a57c7a48 <col:111, col:124> col:124 _Format 'const char *'
| `-ParmVarDecl 0x219a57c7ac0 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x219a57c8060 <line:356:85> col:85 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x219a57c8100 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x219a57c8168 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x219a57c81e0 <col:85> Implicit printf 2 3
|-FunctionDecl 0x219a57c8248 prev 0x219a57c8060 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:85 sprintf 'int (char *, const char *, ...)'
| |-ParmVarDecl 0x219a57c7e40 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x219a57c7ec0 <col:171, col:185> col:185 _Format 'const char *'
| |-FormatAttr 0x219a57c8428 <col:85> Inherited printf 2 3
| `-DeprecatedAttr 0x219a57c82f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x219a57c8850 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> col:94 implicit vsprintf 'int (char *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x219a57c88f0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x219a57c8958 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x219a57c89c0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x219a57c8a40 <col:94> Implicit printf 2 0
|-FunctionDecl 0x219a57c8aa8 prev 0x219a57c8850 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94 vsprintf 'int (char *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x219a57c8538 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x219a57c85b8 <col:171, col:185> col:185 _Format 'const char *'
| |-ParmVarDecl 0x219a57c8630 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-FormatAttr 0x219a57c8c90 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> Inherited printf 2 0
| `-DeprecatedAttr 0x219a57c8b60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x219a57c8fd0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:357:40> col:40 implicit vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x219a57c9070 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x219a57c90d8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x219a57c9140 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x219a57c91c0 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x219a57c9228 prev 0x219a57c8fd0 <col:28, col:138> col:40 vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x219a57c8ce0 <col:48, col:61> col:61 _srcBuf 'const char *'
| |-ParmVarDecl 0x219a57c8d60 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x219a57c8dd8 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x219a57c9328 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x219a57c94f0 <line:359:24, col:115> col:36 _vscprintf 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x219a57c9378 <col:77, col:90> col:90 _Format 'const char *'
| `-ParmVarDecl 0x219a57c93f0 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
|-FunctionDecl 0x219a57c97e8 <line:360:28, col:170> col:40 _snprintf_c 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x219a57c95d0 <col:76, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x219a57c9648 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x219a57c96c8 <col:145, col:158> col:158 _Format 'const char *'
|-FunctionDecl 0x219a57c9b80 <line:361:28, col:183> col:40 _vsnprintf_c 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x219a57c98d0 <col:77, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x219a57c9948 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x219a57c99c8 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x219a57c9a40 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x219a57c9de8 <line:363:28, col:128> col:40 _fprintf_p 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x219a57c9c68 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x219a57c9ce8 <col:103, col:116> col:116 _Format 'const char *'
|-FunctionDecl 0x219a57c9fe0 <line:364:28, col:105> col:40 _printf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x219a57c9ec8 <col:80, col:93> col:93 _Format 'const char *'
|-FunctionDecl 0x219a57ca2d0 <line:365:28, col:168> col:40 _sprintf_p 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x219a57ca0b8 <col:77, col:84> col:84 _Dst 'char *'
| |-ParmVarDecl 0x219a57ca130 <col:95, col:102> col:102 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x219a57ca1b0 <col:143, col:156> col:156 _Format 'const char *'
|-FunctionDecl 0x219a57ca5c8 <line:366:28, col:142> col:40 _vfprintf_p 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x219a57ca3b0 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x219a57ca430 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x219a57ca4a8 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x219a57ca828 <line:367:28, col:119> col:40 _vprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x219a57ca6b0 <col:81, col:94> col:94 _Format 'const char *'
| `-ParmVarDecl 0x219a57ca728 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x219a57cabb8 <line:368:28, col:182> col:40 _vsprintf_p 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x219a57ca908 <col:78, col:85> col:85 _Dst 'char *'
| |-ParmVarDecl 0x219a57ca980 <col:96, col:103> col:103 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x219a57caa00 <col:144, col:157> col:157 _Format 'const char *'
| `-ParmVarDecl 0x219a57caa78 <col:166, col:174> col:174 _ArgList 'va_list':'char *'
|-FunctionDecl 0x219a57cad88 <line:369:24, col:103> col:36 _scprintf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x219a57caca8 <col:78, col:91> col:91 _Format 'const char *'
|-FunctionDecl 0x219a57c4f90 <line:370:24, col:117> col:36 _vscprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x219a57cae60 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x219a57caed8 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x219a57c5150 <line:371:9, col:61> col:21 _set_printf_count_output 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x219a57c5070 <col:51, col:55> col:55 _Value 'int'
|-FunctionDecl 0x219a57c52e0 <line:372:9, col:50> col:21 _get_printf_count_output 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x219a57c5528 <line:374:28, col:143> col:40 _printf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x219a57c53b0 <col:90, col:103> col:103 _Format 'const char *'
| `-ParmVarDecl 0x219a57c5428 <col:121, col:131> col:131 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x219a57c5780 <line:375:28, col:145> col:40 _printf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x219a57c5608 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x219a57c5680 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x219a57c59d8 <line:376:28, col:145> col:40 _printf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x219a57c5860 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x219a57c58d8 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x219a57c5d88 <line:377:28, col:157> col:40 _vprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x219a57c5ab8 <col:91, col:104> col:104 _Format 'const char *'
| |-ParmVarDecl 0x219a57c5b30 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x219a57c5ba8 <col:141, col:149> col:149 _ArgList 'va_list':'char *'
|-FunctionDecl 0x219a57c40a0 <line:378:28, col:159> col:40 _vprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x219a57c5e70 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x219a57c5ee8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x219a57c3f80 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x219a57c4398 <line:379:28, col:159> col:40 _vprintf_s_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x219a57c4188 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x219a57c4200 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x219a57c4278 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x219a57c4690 <line:381:28, col:166> col:40 _fprintf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x219a57c4478 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x219a57c44f8 <col:113, col:126> col:126 _Format 'const char *'
| `-ParmVarDecl 0x219a57c4570 <col:144, col:154> col:154 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x219a57c4988 <line:382:28, col:168> col:40 _fprintf_p_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x219a57c4770 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x219a57c47f0 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x219a57c4868 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x219a57c4c80 <line:383:28, col:168> col:40 _fprintf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x219a57c4a68 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x219a57c4ae8 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x219a57c4b60 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x219a57cc160 <line:384:28, col:147> col:40 _vfprintf_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x219a57c4d60 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x219a57c4de0 <col:81, col:94> col:94 _Format 'const char *'
| |-ParmVarDecl 0x219a57c4e58 <col:112, col:122> col:122 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x219a57c4ed0 <col:131, col:139> col:139 _ArgList 'va_list':'char *'
|-FunctionDecl 0x219a57cc4f8 <line:385:28, col:149> col:40 _vfprintf_p_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x219a57cc248 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x219a57cc2c8 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x219a57cc340 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x219a57cc3b8 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x219a57cc890 <line:386:28, col:149> col:40 _vfprintf_s_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x219a57cc5e0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x219a57cc660 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x219a57cc6d8 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x219a57cc750 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x219a57ccd28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:388:221> col:78 _sprintf_l 'int (char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x219a57cca40 <col:112, col:119> col:119 _DstBuf 'char *'
| |-ParmVarDecl 0x219a57ccac0 <col:168, col:181> col:181 _Format 'const char *'
| |-ParmVarDecl 0x219a57ccb38 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x219a57ccde0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x219a57cd320 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:389:28, col:211> col:40 _sprintf_p_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x219a57ccf28 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x219a57cd010 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x219a57cd090 <col:158, col:171> col:171 _Format 'const char *'
| `-ParmVarDecl 0x219a57cd108 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x219a57cd6c0 <line:390:40, col:221> col:52 _sprintf_s_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x219a57cd410 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x219a57cd488 <col:111, col:118> col:118 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x219a57cd508 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x219a57cd580 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x219a57cdc10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:391:195> col:79 _vsprintf_l 'int (char *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x219a57cd8b0 <col:114, col:121> col:121 _DstBuf 'char *'
| |-ParmVarDecl 0x219a57cd930 <col:137, col:150> col:150 _Format 'const char *'
| |-ParmVarDecl 0x219a57cd9a8 <col:168> col:177 '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x219a57cda20 <col:179, col:187> col:187 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x219a57cdcd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x219a57c61d8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:392:28, col:225> col:40 _vsprintf_p_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x219a57cde18 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x219a57cde90 <col:101, col:108> col:108 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x219a57cdf10 <col:159, col:171> col:171 _Format 'const char *'
| |-ParmVarDecl 0x219a57cdf88 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x219a57c5fa0 <col:209, col:217> col:217 _ArgList 'va_list':'char *'
|-FunctionDecl 0x219a57c6618 <line:393:40, col:235> col:52 _vsprintf_s_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x219a57c62d0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x219a57c6348 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x219a57c63c8 <col:169, col:182> col:182 _Format 'const char *'
| |-ParmVarDecl 0x219a57c6440 <col:200, col:210> col:210 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x219a57c64b8 <col:219, col:227> col:227 _ArgList 'va_list':'char *'
|-FunctionDecl 0x219a57c6888 <line:395:28, col:145> col:40 _scprintf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x219a57c6710 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x219a57c6788 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x219a57c6ae0 <line:396:28, col:147> col:40 _scprintf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x219a57c6968 <col:94, col:107> col:107 _Format 'const char *'
| `-ParmVarDecl 0x219a57c69e0 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x219a57c6dd0 <line:397:28, col:159> col:40 _vscprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x219a57c6bc0 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x219a57c6c38 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x219a57c6cb0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x219a57ce150 <line:398:28, col:161> col:40 _vscprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x219a57c6eb8 <col:95, col:108> col:108 _Format 'const char *'
| |-ParmVarDecl 0x219a57c6f30 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x219a57ce030 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x219a57ce5a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:400:247> col:79 _snprintf_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x219a57ce2f8 <col:115, col:122> col:122 _DstBuf 'char *'
| |-ParmVarDecl 0x219a57ce370 <col:136, col:143> col:143 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x219a57ce3f0 <col:194, col:207> col:207 _Format 'const char *'
| |-ParmVarDecl 0x219a57ce468 <col:225, col:235> col:235 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x219a57ce668 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x219a57cea60 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:401:28, col:210> col:40 _snprintf_c_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x219a57ce7b0 <col:78, col:85> col:85 _DstBuf 'char *'
| |-ParmVarDecl 0x219a57ce828 <col:99, col:106> col:106 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x219a57ce8a8 <col:157, col:170> col:170 _Format 'const char *'
| `-ParmVarDecl 0x219a57ce920 <col:188, col:198> col:198 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x219a57d1050 <line:402:40, col:245> col:52 _snprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x219a57ceb50 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x219a57cebc8 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x219a57cec40 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x219a57cecc0 <col:192, col:205> col:205 _Format 'const char *'
| `-ParmVarDecl 0x219a57ced38 <col:223, col:233> col:233 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x219a57d1590 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:403:262> col:80 _vsnprintf_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x219a57d1248 <col:117, col:124> col:124 _DstBuf 'char *'
| |-ParmVarDecl 0x219a57d12c0 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x219a57d1340 <col:196, col:209> col:209 _Format 'const char *'
| |-ParmVarDecl 0x219a57d13b8 <col:227, col:237> col:237 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x219a57d1430 <col:246, col:254> col:254 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x219a57d1658 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x219a57d1ad8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:404:28, col:176> col:40 _vsnprintf_c_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x219a57d17a8 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x219a57d1820 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x219a57d18a0 <col:118, col:129> col:130 'const char *'
| |-ParmVarDecl 0x219a57d1918 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x219a57d1990 <col:160, col:168> col:168 _ArgList 'va_list':'char *'
|-FunctionDecl 0x219a57d20c0 <line:405:28, col:245> col:40 _vsnprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x219a57d1bd0 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x219a57d1c48 <col:101, col:108> col:108 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x219a57d1cc0 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x219a57d1d40 <col:181, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x219a57d1db8 <col:210, col:220> col:220 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x219a57d1e30 <col:229, col:237> col:237 _ArgList 'va_list':'char *'
|-FunctionDecl 0x219a57d2480 <line:415:24, col:128> col:39 _wfsopen 'FILE *(const wchar_t *, const wchar_t *, int) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, int)'
| |-ParmVarDecl 0x219a57d21b8 <col:55, col:71> col:71 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x219a57d2230 <col:89, col:105> col:105 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x219a57d22b0 <col:117, col:121> col:121 _ShFlag 'int'
|-FunctionDecl 0x219a57d26f0 <line:417:28, col:70> col:43 fgetwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x219a57d2580 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x219a57d2908 <line:418:28, col:58> col:43 _fgetwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x219a57d2be8 <line:419:28, col:88> col:43 fputwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x219a57d29d0 <col:55, col:63> col:63 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x219a57d2a48 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x219a57d2e30 <line:420:28, col:70> col:43 _fputwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x219a57d2cc0 <col:59, col:67> col:67 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x219a57d3070 <line:421:24, col:65> col:39 getwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x219a57d2f00 <col:53, col:60> col:60 _File 'FILE *'
|-FunctionDecl 0x219a57d31f8 <line:422:24, col:52> col:39 getwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x219a57d3430 <line:423:28, col:87> col:43 putwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x219a57d32c0 <col:54, col:62> col:62 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x219a57d3338 <col:75, col:82> col:82 _File 'FILE *'
|-FunctionDecl 0x219a57d35e0 <line:424:28, col:68> col:43 putwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x219a57d3508 <col:57, col:65> col:65 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x219a57d3888 <line:425:28, col:88> col:43 ungetwc 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x219a57d36b0 <col:56, col:63> col:63 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x219a57d3728 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x219a57d3c30 <line:427:28, col:141> col:46 fgetws 'wchar_t *(wchar_t *, int, FILE *) __attribute__((cdecl))':'wchar_t *(wchar_t *, int, FILE *)'
| |-ParmVarDecl 0x219a57d3960 <col:82, col:92> col:92 _Dst 'wchar_t *'
| |-ParmVarDecl 0x219a57d39e0 <col:103, col:107> col:107 _SizeInWords 'int'
| `-ParmVarDecl 0x219a57d3a58 <col:129, col:136> col:136 _File 'FILE *'
|-FunctionDecl 0x219a57d3f30 <line:428:28, col:96> col:40 fputws 'int (const wchar_t *, FILE *) __attribute__((cdecl))':'int (const wchar_t *, FILE *)'
| |-ParmVarDecl 0x219a57d3d10 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x219a57d3d88 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x219a57d01f8 <line:429:28, col:124> col:46 _getws_s 'wchar_t *(wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, size_t)'
| |-ParmVarDecl 0x219a57d4008 <col:84, col:94> col:94 _Str 'wchar_t *'
| `-ParmVarDecl 0x219a57d0050 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x219a57d0500 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:431:83 _getws 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x219a57d0390 <col:115, col:124> col:124 _String 'wchar_t *'
| `-DeprecatedAttr 0x219a57d05a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _getws_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x219a57d0868 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:432:28, col:74> col:40 _putws 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x219a57d06e8 <col:54, col:70> col:70 _Str 'const wchar_t *'
|-FunctionDecl 0x219a57d0b70 <line:434:28, col:129> col:40 fwprintf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x219a57d0938 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x219a57d09b0 <col:101, col:117> col:117 _Format 'const wchar_t *'
|-FunctionDecl 0x219a57d0dc0 <line:436:28, col:131> col:40 fwprintf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x219a57d0c48 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x219a57d0cc0 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x219a57cf030 <line:438:28, col:106> col:40 wprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x219a57d0e98 <col:78, col:94> col:94 _Format 'const wchar_t *'
|-FunctionDecl 0x219a57cf1e0 <line:440:28, col:108> col:40 wprintf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x219a57cf100 <col:80, col:96> col:96 _Format 'const wchar_t *'
|-FunctionDecl 0x219a57cf390 <line:442:24, col:105> col:36 _scwprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x219a57cf2b0 <col:77, col:93> col:93 _Format 'const wchar_t *'
|-FunctionDecl 0x219a57cf728 <line:443:28, col:143> col:40 vfwprintf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x219a57cf460 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x219a57cf4d8 <col:102, col:118> col:118 _Format 'const wchar_t *'
| `-ParmVarDecl 0x219a57cf550 <col:127, col:135> col:135 _ArgList 'va_list':'char *'
|-FunctionDecl 0x219a57cfa18 <line:444:28, col:142> col:40 vfwscanf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x219a57cf808 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x219a57cf880 <col:101, col:117> col:117 _Format 'const wchar_t *'
| `-ParmVarDecl 0x219a57cf8f8 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x219a57cfd08 <line:446:28, col:145> col:40 vfwprintf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x219a57cfaf8 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x219a57cfb70 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x219a57cfbe8 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x219a57d60a0 <line:447:28, col:144> col:40 vfwscanf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x219a57cfde8 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x219a57cfe60 <col:103, col:119> col:119 _Format 'const wchar_t *'
| `-ParmVarDecl 0x219a57cfed8 <col:128, col:136> col:136 _ArgList 'va_list':'char *'
|-FunctionDecl 0x219a57d63a0 <line:449:28, col:120> col:40 vwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x219a57d6180 <col:79, col:95> col:95 _Format 'const wchar_t *'
| `-ParmVarDecl 0x219a57d61f8 <col:104, col:112> col:112 _ArgList 'va_list':'char *'
|-FunctionDecl 0x219a57d65f0 <line:450:28, col:119> col:40 vwscanf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x219a57d6478 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x219a57d64f0 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x219a57d6840 <line:452:28, col:122> col:40 vwprintf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x219a57d66c8 <col:81, col:97> col:97 _Format 'const wchar_t *'
| `-ParmVarDecl 0x219a57d6740 <col:106, col:114> col:114 _ArgList 'va_list':'char *'
|-FunctionDecl 0x219a57d6a90 <line:453:28, col:121> col:40 vwscanf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x219a57d6918 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x219a57d6990 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x219a57d6e48 <line:457:21, col:173> col:33 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x219a57d6b68 <col:73, col:83> col:83 _Dst 'wchar_t *'
| |-ParmVarDecl 0x219a57d6be0 <col:94, col:101> col:101 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x219a57d6c58 <col:145, col:161> col:161 _Format 'const wchar_t *'
|-FunctionDecl 0x219a57d52a0 <line:461:21, col:187> col:33 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x219a57d6f28 <col:74, col:84> col:84 _Dst 'wchar_t *'
| |-ParmVarDecl 0x219a57d6fa0 <col:95, col:102> col:102 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x219a57d7018 <col:146, col:162> col:162 _Format 'const wchar_t *'
| `-ParmVarDecl 0x219a57d5090 <col:171, col:179> col:179 _ArgList 'va_list':'char *'
|-FunctionDecl 0x219a57d5658 <line:462:40, col:156> col:52 vswscanf_s 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x219a57d5388 <col:63, col:79> col:79 _Src 'const wchar_t *'
| |-ParmVarDecl 0x219a57d5400 <col:115, col:131> col:131 _Format 'const wchar_t *'
| `-ParmVarDecl 0x219a57d5478 <col:140, col:148> col:148 _ArgList 'va_list':'char *'
|-FunctionDecl 0x219a57d5948 <line:466:28, col:145> col:40 vswscanf 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x219a57d5738 <col:49, col:65> col:65 _srcBuf 'const wchar_t *'
| |-ParmVarDecl 0x219a57d57b0 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x219a57d5828 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x219a57d5c38 <line:468:28, col:184> col:40 _swprintf_c 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x219a57d5a28 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x219a57d5aa0 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x219a57d5b18 <col:156, col:172> col:172 _Format 'const wchar_t *'
|-FunctionDecl 0x219a57d5fc0 <line:469:28, col:198> col:40 _vswprintf_c 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x219a57d5d18 <col:82, col:92> col:92 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x219a57d5d90 <col:106, col:113> col:113 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x219a57d5e08 <col:157, col:173> col:173 _Format 'const wchar_t *'
| `-ParmVarDecl 0x219a57d5e80 <col:182, col:190> col:190 _ArgList 'va_list':'char *'
|-FunctionDecl 0x219a57d7460 <line:471:40, col:220> col:52 _snwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x219a57d70d8 <col:94, col:104> col:104 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x219a57d7150 <col:118, col:125> col:125 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x219a57d71c8 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x219a57d7240 <col:192, col:208> col:208 _Format 'const wchar_t *'
|-FunctionDecl 0x219a57d7968 <line:473:40, col:234> col:52 _vsnwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x219a57d7548 <col:95, col:105> col:105 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x219a57d75c0 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x219a57d7638 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x219a57d76b0 <col:193, col:209> col:209 _Format 'const wchar_t *'
| `-ParmVarDecl 0x219a57d7728 <col:218, col:226> col:226 _ArgList 'va_list':'char *'
|-FunctionDecl 0x219a57d7d28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:89 _snwprintf 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x219a57d7b18 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x219a57d7b90 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x219a57d7c08 <col:254, col:271> col:271 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x219a57d7de0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x219a57d82f0 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:101 _vsnwprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x219a57d7fe0 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x219a57d80c0 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x219a57d8138 <col:254, col:271> col:271 _Format 'const wchar_t *'
| |-ParmVarDecl 0x219a57d81b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x219a57d83b0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x219a57d8668 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:480:28, col:132> col:40 _fwprintf_p 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x219a57d84f0 <col:60, col:67> col:67 _File 'FILE *'
| `-ParmVarDecl 0x219a57d8568 <col:104, col:120> col:120 _Format 'const wchar_t *'
|-FunctionDecl 0x219a57d8820 <line:481:28, col:109> col:40 _wprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x219a57d8740 <col:81, col:97> col:97 _Format 'const wchar_t *'
|-FunctionDecl 0x219a57d8b00 <line:482:28, col:146> col:40 _vfwprintf_p 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x219a57d88f0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x219a57d8968 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x219a57d89e0 <col:130, col:138> col:138 _ArgList 'va_list':'char *'
|-FunctionDecl 0x219a57d8d58 <line:483:28, col:123> col:40 _vwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x219a57d8be0 <col:82, col:98> col:98 _Format 'const wchar_t *'
| `-ParmVarDecl 0x219a57d8c58 <col:107, col:115> col:115 _ArgList 'va_list':'char *'
|-FunctionDecl 0x219a57def50 <line:484:28, col:178> col:40 _swprintf_p 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x219a57d8e30 <col:78, col:88> col:88 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x219a57d8ea8 <col:102, col:109> col:109 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x219a57d8f20 <col:150, col:166> col:166 _Format 'const wchar_t *'
|-FunctionDecl 0x219a57df2d8 <line:485:28, col:192> col:40 _vswprintf_p 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x219a57df030 <col:79, col:89> col:89 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x219a57df0a8 <col:103, col:110> col:110 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x219a57df120 <col:151, col:167> col:167 _Format 'const wchar_t *'
| `-ParmVarDecl 0x219a57df198 <col:176, col:184> col:184 _ArgList 'va_list':'char *'
|-FunctionDecl 0x219a57df4a0 <line:486:24, col:107> col:36 _scwprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x219a57df3c0 <col:79, col:95> col:95 _Format 'const wchar_t *'
|-FunctionDecl 0x219a57df6e8 <line:487:24, col:121> col:36 _vscwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x219a57df570 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x219a57df5e8 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x219a57df9f0 <line:489:28, col:147> col:40 _wprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x219a57df7c0 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x219a57df838 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x219a57dfc40 <line:490:28, col:149> col:40 _wprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x219a57dfac8 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x219a57dfb40 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x219a57dfe90 <line:491:28, col:149> col:40 _wprintf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x219a57dfd18 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x219a57dfd90 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x219a57e2278 <line:492:28, col:161> col:40 _vwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x219a57e1fa8 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x219a57e2020 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x219a57e2098 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x219a57e2568 <line:493:28, col:163> col:40 _vwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x219a57e2358 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x219a57e23d0 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x219a57e2448 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x219a57e2858 <line:494:28, col:163> col:40 _vwprintf_s_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x219a57e2648 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x219a57e26c0 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x219a57e2738 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x219a57e2c18 <line:496:28, col:170> col:40 _fwprintf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x219a57e2938 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x219a57e29b0 <col:114, col:130> col:130 _Format 'const wchar_t *'
| `-ParmVarDecl 0x219a57e2a28 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x219a57dff60 <line:497:28, col:172> col:40 _fwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x219a57e2cf8 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x219a57e2d70 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x219a57e2de8 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x219a57e0250 <line:498:28, col:172> col:40 _fwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x219a57e0040 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x219a57e00b8 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x219a57e0130 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x219a57e06a0 <line:499:28, col:184> col:40 _vfwprintf_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x219a57e0330 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x219a57e03a8 <col:115, col:131> col:131 _Format 'const wchar_t *'
| |-ParmVarDecl 0x219a57e0420 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x219a57e0498 <col:168, col:176> col:176 _ArgList 'va_list':'char *'
|-FunctionDecl 0x219a57e0a30 <line:500:28, col:186> col:40 _vfwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x219a57e0788 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x219a57e0800 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x219a57e0878 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x219a57e08f0 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x219a57e0dc0 <line:501:28, col:186> col:40 _vfwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x219a57e0b18 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x219a57e0b90 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x219a57e0c08 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x219a57e0c80 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x219a57dd240 <line:503:28, col:218> col:40 _swprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x219a57e0ea8 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x219a57dcf30 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x219a57dcfa8 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x219a57dd020 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x219a57dd5d0 <line:504:28, col:218> col:40 _swprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x219a57dd328 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x219a57dd3a0 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x219a57dd418 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x219a57dd490 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x219a57dd960 <line:505:40, col:228> col:52 _swprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x219a57dd6b8 <col:91, col:101> col:101 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x219a57dd730 <col:115, col:122> col:122 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x219a57dd7a8 <col:172, col:188> col:188 _Format 'const wchar_t *'
| `-ParmVarDecl 0x219a57dd820 <col:206, col:216> col:216 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x219a57dde68 <line:506:28, col:232> col:40 used _vswprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x219a57dda48 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x219a57ddac0 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x219a57ddb38 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x219a57ddbb0 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x219a57ddc28 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x219a57db278 <line:507:28, col:232> col:40 _vswprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x219a57daf38 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x219a57dafb0 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x219a57db028 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x219a57db0a0 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x219a57db118 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x219a57db6a8 <line:508:40, col:242> col:52 _vswprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x219a57db368 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x219a57db3e0 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x219a57db458 <col:173, col:189> col:189 _Format 'const wchar_t *'
| |-ParmVarDecl 0x219a57db4d0 <col:207, col:217> col:217 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x219a57db548 <col:226, col:234> col:234 _ArgList 'va_list':'char *'
|-FunctionDecl 0x219a57db910 <line:510:24, col:145> col:36 _scwprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x219a57db798 <col:89, col:105> col:105 _Format 'const wchar_t *'
| `-ParmVarDecl 0x219a57db810 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x219a57dbb60 <line:511:24, col:147> col:36 _scwprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x219a57db9e8 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x219a57dba60 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x219a57dbe48 <line:512:24, col:161> col:36 _vscwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x219a57dbc38 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x219a57dbcb0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x219a57dbd28 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x219a57e3328 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:514:255> col:80 _snwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x219a57e3080 <col:117, col:127> col:127 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x219a57e30f8 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x219a57e3170 <col:199, col:215> col:215 _Format 'const wchar_t *'
| |-ParmVarDecl 0x219a57e31e8 <col:233, col:243> col:243 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x219a57e33e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x219a57e3958 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:515:40, col:252> col:52 _snwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x219a57e3530 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x219a57e35a8 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x219a57e3620 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x219a57e3698 <col:196, col:212> col:212 _Format 'const wchar_t *'
| `-ParmVarDecl 0x219a57e3710 <col:230, col:240> col:240 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x219a57e3e90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:516:270> col:81 _vsnwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x219a57e3b50 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x219a57e3bc8 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x219a57e3c40 <col:201, col:217> col:217 _Format 'const wchar_t *'
| |-ParmVarDecl 0x219a57e3cb8 <col:235, col:245> col:245 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x219a57e3d30 <col:254, col:262> col:262 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x219a57dbf20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x219a57dc530 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:517:40, col:266> col:52 _vsnwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x219a57dc068 <col:93, col:103> col:103 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x219a57dc0e0 <col:117, col:124> col:124 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x219a57dc158 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x219a57dc1d0 <col:197, col:213> col:213 _Format 'const wchar_t *'
| |-ParmVarDecl 0x219a57dc248 <col:231, col:241> col:241 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x219a57dc2c0 <col:250, col:258> col:258 _ArgList 'va_list':'char *'
|-FunctionDecl 0x219a57dca30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:110 _swprintf 'int (wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x219a57dc7f8 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x219a57dc870 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-DeprecatedAttr 0x219a57dcae0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x219a57dcbf8 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x219a57e4208 <col:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:134 _vswprintf 'int (wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x219a57dceb0 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x219a57e3fb0 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-ParmVarDecl 0x219a57e4028 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x219a57e42c0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using vswprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x219a57e43d8 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x219a57e4978 <col:36, line:1961:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:110 __swprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x219a57e4698 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x219a57e4710 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x219a57e4788 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-DeprecatedAttr 0x219a57e4a30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __swprintf_l_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x219a57e4b50 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x219a57e51c0 <col:36, line:1962:166> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:124 __vswprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x219a57e4e10 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x219a57e4e88 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x219a57e4f00 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x219a57e4fb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1962:153, col:161> col:161 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x219a57e5280 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vswprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x219a57e53a0 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x219a57e56a8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:36:1, line:44:1> line:36:21 swprintf 'int (wchar_t *, size_t, const wchar_t *, ...)' static inline
| |-ParmVarDecl 0x219a57e54c8 <col:53, col:63> col:63 used _String 'wchar_t *'
| |-ParmVarDecl 0x219a57e5540 <col:72, col:79> col:79 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x219a57e55b8 <col:117, col:133> col:133 used _Format 'const wchar_t *'
| `-CompoundStmt 0x219a57ec2c0 <line:37:1, line:44:1>
|   |-DeclStmt 0x219a57e57f0 <line:38:5, col:21>
|   | `-VarDecl 0x219a57e5788 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x219a57e5888 <line:39:5, col:13>
|   | `-VarDecl 0x219a57e5820 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x219a57e5be0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x219a57e5bc8 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x219a57e5ae0 <col:34> '<builtin fn type>' Function 0x219a57e5978 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x219a57e5b18 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:40:19> 'va_list':'char *' lvalue Var 0x219a57e5788 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x219a57e5b50 <col:29> 'const wchar_t *' lvalue ParmVar 0x219a57e55b8 '_Format' 'const wchar_t *'
|   |-BinaryOperator 0x219a57e5ea0 <line:41:5, col:67> 'int' '='
|   | |-DeclRefExpr 0x219a57e5c10 <col:5> 'int' lvalue Var 0x219a57e5820 '_Ret' 'int'
|   | `-CallExpr 0x219a57e5de0 <col:12, col:67> 'int'
|   |   |-ImplicitCastExpr 0x219a57e5dc8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x219a57e5c48 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x219a57dde68 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x219a57e5e28 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x219a57e5c68 <col:27> 'wchar_t *' lvalue ParmVar 0x219a57e54c8 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x219a57e5e40 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x219a57e5c88 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x219a57e5540 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x219a57e5e58 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x219a57e5ca8 <col:44> 'const wchar_t *' lvalue ParmVar 0x219a57e55b8 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x219a57e5e70 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|   |   | `-ParenExpr 0x219a57e5d30 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x219a57e5d08 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x219a57e5cc8 <col:26> 'int' 0
|   |   `-ImplicitCastExpr 0x219a57e5e88 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:41:59> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x219a57e5d50 <col:59> 'va_list':'char *' lvalue Var 0x219a57e5788 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x219a57ec250 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x219a57ec238 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x219a57ec188 <col:34> '<builtin fn type>' Function 0x219a57ec020 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x219a57ec1c0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:42:17> 'va_list':'char *' lvalue Var 0x219a57e5788 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x219a57ec2b0 <line:43:5, col:12>
|     `-ImplicitCastExpr 0x219a57ec298 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x219a57ec278 <col:12> 'int' lvalue Var 0x219a57e5820 '_Ret' 'int'
|-FunctionDecl 0x219a57e5978 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34> col:34 implicit used __builtin_va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x219a57e5a18 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x219a57e5a88 <col:34> Implicit
|-FunctionDecl 0x219a57ec020 <line:27:34> col:34 implicit used __builtin_va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x219a57ec0c0 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x219a57ec130 <col:34> Implicit
|-FunctionDecl 0x219a57ec5b8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:49:1, line:52:1> line:49:31 vswprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)' static inline
| |-ParmVarDecl 0x219a57ec310 <col:64, col:74> col:74 used _String 'wchar_t *'
| |-ParmVarDecl 0x219a57ec388 <col:83, col:90> col:90 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x219a57ec400 <col:138, col:154> col:154 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x219a57ec478 <col:163, col:171> col:171 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x219a57ec8a0 <line:50:1, line:52:1>
|   `-ReturnStmt 0x219a57ec890 <line:51:5, col:62>
|     `-CallExpr 0x219a57ec7d0 <col:12, col:62> 'int'
|       |-ImplicitCastExpr 0x219a57ec7b8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x219a57ec690 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x219a57dde68 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x219a57ec818 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x219a57ec6b0 <col:27> 'wchar_t *' lvalue ParmVar 0x219a57ec310 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x219a57ec830 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x219a57ec6d0 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x219a57ec388 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x219a57ec848 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x219a57ec6f0 <col:44> 'const wchar_t *' lvalue ParmVar 0x219a57ec400 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x219a57ec860 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|       | `-ParenExpr 0x219a57ec778 <col:17, col:27> 'void *'
|       |   `-CStyleCastExpr 0x219a57ec750 <col:18, col:26> 'void *' <NullToPointer>
|       |     `-IntegerLiteral 0x219a57ec710 <col:26> 'int' 0
|       `-ImplicitCastExpr 0x219a57ec878 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:51:59> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x219a57ec798 <col:59> 'va_list':'char *' lvalue ParmVar 0x219a57ec478 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x219a57ecb40 <line:60:1, line:68:1> line:60:21 _swprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)' static inline
| |-ParmVarDecl 0x219a57ec8c8 <col:56, col:66> col:66 used _String 'wchar_t *'
| |-ParmVarDecl 0x219a57ec940 <col:75, col:82> col:82 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x219a57ec9b8 <col:130, col:146> col:146 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x219a57eca30 <col:155, col:165> col:165 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| `-CompoundStmt 0x219a57ea0a8 <line:61:1, line:68:1>
|   |-DeclStmt 0x219a57ecc90 <line:62:5, col:21>
|   | `-VarDecl 0x219a57ecc28 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x219a57ecd28 <line:63:5, col:13>
|   | `-VarDecl 0x219a57eccc0 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x219a57ecdd0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x219a57ecdb8 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x219a57ecd40 <col:34> '<builtin fn type>' Function 0x219a57e5978 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x219a57ecd60 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:64:19> 'va_list':'char *' lvalue Var 0x219a57ecc28 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x219a57ecd98 <col:29> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x219a57eca30 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |-BinaryOperator 0x219a57ecfd0 <line:65:5, col:72> 'int' '='
|   | |-DeclRefExpr 0x219a57ece00 <col:5> 'int' lvalue Var 0x219a57eccc0 '_Ret' 'int'
|   | `-CallExpr 0x219a57ecf10 <col:12, col:72> 'int'
|   |   |-ImplicitCastExpr 0x219a57ecef8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x219a57ece38 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x219a57dde68 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x219a57ecf58 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x219a57ece58 <col:27> 'wchar_t *' lvalue ParmVar 0x219a57ec8c8 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x219a57ecf70 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x219a57ece78 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x219a57ec940 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x219a57ecf88 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x219a57ece98 <col:44> 'const wchar_t *' lvalue ParmVar 0x219a57ec9b8 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x219a57ecfa0 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x219a57eceb8 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x219a57eca30 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |   `-ImplicitCastExpr 0x219a57ecfb8 <col:64> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x219a57eced8 <col:64> 'va_list':'char *' lvalue Var 0x219a57ecc28 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x219a57ea038 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x219a57ea020 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x219a57ecff0 <col:34> '<builtin fn type>' Function 0x219a57ec020 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x219a57ea000 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:66:17> 'va_list':'char *' lvalue Var 0x219a57ecc28 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x219a57ea098 <line:67:5, col:12>
|     `-ImplicitCastExpr 0x219a57ea080 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x219a57ea060 <col:12> 'int' lvalue Var 0x219a57eccc0 '_Ret' 'int'
|-FunctionDecl 0x219a57ea438 <line:73:1, line:76:1> line:73:31 _vswprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' static inline
| |-ParmVarDecl 0x219a57ea0f8 <col:67, col:77> col:77 used _String 'wchar_t *'
| |-ParmVarDecl 0x219a57ea170 <col:86, col:93> col:93 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x219a57ea1e8 <col:141, col:157> col:157 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x219a57ea260 <col:166, col:176> col:176 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x219a57ea2d8 <col:187, col:195> col:195 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x219a57ea6c0 <line:74:1, line:76:1>
|   `-ReturnStmt 0x219a57ea6b0 <line:75:5, col:67>
|     `-CallExpr 0x219a57ea5f0 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x219a57ea5d8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x219a57ea518 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x219a57dde68 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x219a57ea638 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x219a57ea538 <col:27> 'wchar_t *' lvalue ParmVar 0x219a57ea0f8 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x219a57ea650 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x219a57ea558 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x219a57ea170 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x219a57ea668 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x219a57ea578 <col:44> 'const wchar_t *' lvalue ParmVar 0x219a57ea1e8 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x219a57ea680 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|       | `-DeclRefExpr 0x219a57ea598 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x219a57ea260 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|       `-ImplicitCastExpr 0x219a57ea698 <col:64> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x219a57ea5b8 <col:64> 'va_list':'char *' lvalue ParmVar 0x219a57ea2d8 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x219a57ea908 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:555:24, col:129> col:42 _wtempnam 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x219a57ea6e8 <col:63, col:79> col:79 _Directory 'const wchar_t *'
| `-ParmVarDecl 0x219a57ea760 <col:102, col:118> col:118 _FilePrefix 'const wchar_t *'
|-FunctionDecl 0x219a57eab58 <line:561:24, col:119> col:36 _vscwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x219a57ea9e0 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x219a57eaa58 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x219a57eae40 <line:562:24, col:159> col:36 _vscwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x219a57eac30 <col:90, col:106> col:106 _Format 'const wchar_t *'
| |-ParmVarDecl 0x219a57eaca8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x219a57ead20 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x219a57e6138 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:563:158> col:71 fwscanf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x219a57e5fc0 <col:87, col:94> col:94 _File 'FILE *'
| |-ParmVarDecl 0x219a57e6038 <col:130, col:146> col:146 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x219a57e61e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x219a57e65f8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:564:206> col:78 _fwscanf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x219a57e63e8 <col:97, col:104> col:104 _File 'FILE *'
| |-ParmVarDecl 0x219a57e6460 <col:150, col:166> col:166 _Format 'const wchar_t *'
| |-ParmVarDecl 0x219a57e64d8 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x219a57e66b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x219a57e6968 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:568:28, col:131> col:40 fwscanf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x219a57e67f0 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x219a57e6868 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x219a57e6c50 <line:570:28, col:172> col:40 _fwscanf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x219a57e6a40 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x219a57e6ab8 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x219a57e6b30 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x219a57eb080 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:571:165> col:71 swscanf 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x219a57e6df0 <col:86, col:102> col:102 _Src 'const wchar_t *'
| |-ParmVarDecl 0x219a57e6e68 <col:137, col:153> col:153 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x219a57eb130 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using swscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x219a57eb608 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:572:213> col:78 _swscanf_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x219a57eb330 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x219a57eb3a8 <col:157, col:173> col:173 _Format 'const wchar_t *'
| |-ParmVarDecl 0x219a57eb420 <col:191, col:201> col:201 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x219a57eb6c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x219a57eb978 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:574:40, col:149> col:52 swscanf_s 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x219a57eb800 <col:69, col:84> col:84 _Src 'const wchar_t *'
| `-ParmVarDecl 0x219a57eb878 <col:121, col:137> col:137 _Format 'const wchar_t *'
|-FunctionDecl 0x219a57ebc60 <line:576:40, col:191> col:52 _swscanf_s_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x219a57eba50 <col:72, col:88> col:88 _Src 'const wchar_t *'
| |-ParmVarDecl 0x219a57ebac8 <col:135, col:151> col:151 _Format 'const wchar_t *'
| `-ParmVarDecl 0x219a57ebb40 <col:169, col:179> col:179 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x219a57ee128 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:577:219> col:77 _snwscanf 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x219a57ebe00 <col:117, col:133> col:133 _Src 'const wchar_t *'
| |-ParmVarDecl 0x219a57ebe78 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x219a57ebef0 <col:191, col:207> col:207 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x219a57ee1e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x219a57ee760 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:578:261> col:79 _snwscanf_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x219a57ee3e0 <col:121, col:137> col:137 _Src 'const wchar_t *'
| |-ParmVarDecl 0x219a57ee458 <col:148, col:155> col:155 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x219a57ee4d0 <col:205, col:221> col:221 _Format 'const wchar_t *'
| |-ParmVarDecl 0x219a57ee548 <col:239, col:249> col:249 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x219a57ee820 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x219a57eeb70 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:579:40, col:198> col:52 _snwscanf_s 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x219a57ee960 <col:94, col:110> col:110 _Src 'const wchar_t *'
| |-ParmVarDecl 0x219a57ee9d8 <col:121, col:128> col:128 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x219a57eea50 <col:170, col:186> col:186 _Format 'const wchar_t *'
|-FunctionDecl 0x219a57eeef8 <line:580:40, col:238> col:52 _snwscanf_s_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x219a57eec50 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x219a57eecc8 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x219a57eed40 <col:182, col:198> col:198 _Format 'const wchar_t *'
| `-ParmVarDecl 0x219a57eedb8 <col:216, col:226> col:226 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x219a57ed1e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:581:134> col:70 wscanf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| |-ParmVarDecl 0x219a57ed100 <col:106, col:122> col:122 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x219a57ed288 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x219a57ed600 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:582:182> col:77 _wscanf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x219a57ed488 <col:126, col:142> col:142 _Format 'const wchar_t *'
| |-ParmVarDecl 0x219a57ed500 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x219a57ed6b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x219a57ed8d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:584:40, col:120> col:52 wscanf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x219a57ed7f0 <col:92, col:108> col:108 _Format 'const wchar_t *'
|-FunctionDecl 0x219a57edb18 <line:586:40, col:161> col:52 _wscanf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x219a57ed9a0 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x219a57eda18 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x219a57ede18 <line:589:24, col:99> col:39 _wfdopen 'FILE *(int, const wchar_t *) __attribute__((cdecl))':'FILE *(int, const wchar_t *)'
| |-ParmVarDecl 0x219a57edbf8 <col:53, col:57> col:57 _FileHandle 'int'
| `-ParmVarDecl 0x219a57edc70 <col:78, col:94> col:94 _Mode 'const wchar_t *'
|-FunctionDecl 0x219a57e8188 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:590:144> col:74 _wfopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x219a57edfb0 <col:89, col:105> col:105 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x219a57e7fe0 <col:123, col:139> col:139 _Mode 'const wchar_t *'
| `-DeprecatedAttr 0x219a57e8238 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x219a57e8640 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:591:28, col:157> col:44 _wfopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x219a57e8380 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x219a57e83f8 <col:102, col:118> col:118 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x219a57e8470 <col:136, col:152> col:152 _Mode 'const wchar_t *'
|-FunctionDecl 0x219a57e8aa0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:592:173> col:76 _wfreopen 'FILE *(const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x219a57e87e0 <col:93, col:109> col:109 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x219a57e8858 <col:127, col:143> col:143 _Mode 'const wchar_t *'
| |-ParmVarDecl 0x219a57e88d0 <col:158, col:165> col:165 _OldFile 'FILE *'
| `-DeprecatedAttr 0x219a57e8b58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfreopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x219a57ef098 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:593:28, col:184> col:44 _wfreopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x219a57e8ca0 <col:82, col:90> col:90 _File 'FILE **'
| |-ParmVarDecl 0x219a57e8d18 <col:104, col:120> col:120 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x219a57e8d90 <col:138, col:154> col:154 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x219a57e8e08 <col:169, col:176> col:176 _OldFile 'FILE *'
|-FunctionDecl 0x219a57ef2f0 <line:597:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x219a57ef180 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x219a57ef530 <line:600:24, col:107> col:39 _wpopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x219a57ef3c0 <col:54, col:69> col:69 _Command 'const wchar_t *'
| `-ParmVarDecl 0x219a57ef438 <col:86, col:102> col:102 _Mode 'const wchar_t *'
|-FunctionDecl 0x219a57ef6e8 <line:602:9, col:62> col:21 _wremove 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x219a57ef608 <col:37, col:53> col:53 _Filename 'const wchar_t *'
|-FunctionDecl 0x219a57ef9d8 <line:603:28, col:127> col:44 _wtmpnam_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x219a57ef7b8 <col:84, col:94> col:94 _DstBuf 'wchar_t *'
| `-ParmVarDecl 0x219a57ef830 <col:108, col:115> col:115 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x219a57efc48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:605:82 _wtmpnam 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x219a57efb70 <col:118, col:127> col:127 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x219a57efcf0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wtmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x219a57eff08 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:607:28, col:78> col:43 _fgetwc_nolock 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x219a57efe30 <col:66, col:73> col:73 _File 'FILE *'
|-FunctionDecl 0x219a57f0158 <line:608:28, col:96> col:43 _fputwc_nolock 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x219a57effd8 <col:63, col:71> col:71 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x219a57f0060 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x219a57f03a0 <line:609:28, col:96> col:43 _ungetwc_nolock 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x219a57f0230 <col:64, col:71> col:71 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x219a57f02a8 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x219a57f0550 <line:670:9, col:53> col:22 _lock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x219a57f0478 <col:41, col:48> col:48 _File 'FILE *'
|-FunctionDecl 0x219a57f06f8 <line:671:9, col:55> col:22 _unlock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x219a57f0620 <col:43, col:50> col:50 _File 'FILE *'
|-FunctionDecl 0x219a57f08a8 <line:673:28, col:75> col:40 _fclose_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x219a57f07c8 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x219a57f0a58 <line:674:28, col:79> col:40 _fflush_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x219a57f0978 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x219a57f0dd0 <line:675:28, col:179> col:43 _fread_nolock 'size_t (void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x219a57f0b30 <col:97, col:104> col:104 _DstBuf 'void *'
| |-ParmVarDecl 0x219a57f0ba8 <col:118, col:125> col:125 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x219a57f0c20 <col:144, col:151> col:151 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x219a57f0c98 <col:167, col:174> col:174 _File 'FILE *'
|-FunctionDecl 0x219a57f4270 <line:676:28, col:203> col:43 _fread_nolock_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x219a57f0ec0 <col:99, col:106> col:106 _DstBuf 'void *'
| |-ParmVarDecl 0x219a57f0f38 <col:120, col:127> col:127 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x219a57f0fb0 <col:142, col:149> col:149 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x219a57f40a0 <col:168, col:175> col:175 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x219a57f4118 <col:191, col:198> col:198 _File 'FILE *'
|-FunctionDecl 0x219a57f4580 <line:677:28, col:111> col:40 _fseek_nolock 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x219a57f4360 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x219a57f43e0 <col:81, col:86> col:86 _Offset 'long'
| `-ParmVarDecl 0x219a57f4460 <col:100, col:104> col:104 _Origin 'int'
|-FunctionDecl 0x219a57f4740 <line:678:24, col:71> col:37 _ftell_nolock 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x219a57f4660 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x219a57f4a30 <line:679:28, col:117> col:40 _fseeki64_nolock 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x219a57f4810 <col:65, col:72> col:72 _File 'FILE *'
| |-ParmVarDecl 0x219a57f4890 <col:84, col:92> col:92 _Offset 'long long'
| `-ParmVarDecl 0x219a57f4910 <col:106, col:110> col:110 _Origin 'int'
|-FunctionDecl 0x219a57f4bf0 <line:680:24, col:77> col:40 _ftelli64_nolock 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x219a57f4b10 <col:65, col:72> col:72 _File 'FILE *'
|-FunctionDecl 0x219a57f4f68 <line:681:28, col:170> col:43 _fwrite_nolock 'size_t (const void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (const void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x219a57f4cc8 <col:89, col:102> col:102 _DstBuf 'const void *'
| |-ParmVarDecl 0x219a57f4d40 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x219a57f4db8 <col:135, col:142> col:142 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x219a57f4e30 <col:158, col:165> col:165 _File 'FILE *'
|-FunctionDecl 0x219a57f11e8 <line:682:28, col:89> col:40 _ungetc_nolock 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x219a57f1070 <col:60, col:64> col:64 _Ch 'int'
| `-ParmVarDecl 0x219a57f10e8 <col:77, col:84> col:84 _File 'FILE *'
|-FunctionDecl 0x219a57f1520 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:709:136> col:57 tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x219a57f13a0 <col:76, col:89> col:89 _Directory 'const char *'
| |-ParmVarDecl 0x219a57f1420 <col:112, col:125> col:125 _FilePrefix 'const char *'
| `-DeprecatedAttr 0x219a57f15d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tempnam. See online help for details." ""
|-FunctionDecl 0x219a57f1888 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:715:89> col:75 fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x219a57f1928 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcloseall. See online help for details." ""
|-FunctionDecl 0x219a57f1c68 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:716:127> col:71 fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x219a57f1af0 <col:83, col:87> col:87 _FileHandle 'int'
| |-ParmVarDecl 0x219a57f1b70 <col:107, col:120> col:120 _Format 'const char *'
| `-DeprecatedAttr 0x219a57f1d18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fdopen. See online help for details." ""
|-FunctionDecl 0x219a57f60c0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:717:87> col:74 fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x219a57f6160 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fgetchar. See online help for details." ""
|-FunctionDecl 0x219a57f6400 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:718:92> col:68 fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x219a57f6320 <col:80, col:87> col:87 _File 'FILE *'
| `-DeprecatedAttr 0x219a57f64a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fileno. See online help for details." ""
|-FunctionDecl 0x219a57f6728 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:719:87> col:74 flushall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x219a57f67c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _flushall. See online help for details." ""
|-FunctionDecl 0x219a57f6a70 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:720:95> col:74 fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| |-ParmVarDecl 0x219a57f6990 <col:88, col:92> col:92 _Ch 'int'
| `-DeprecatedAttr 0x219a57f6b18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fputchar. See online help for details." ""
|-FunctionDecl 0x219a57f6df8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:721:91> col:66 getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x219a57f6d18 <col:79, col:86> col:86 _File 'FILE *'
| `-DeprecatedAttr 0x219a57f6ea0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _getw. See online help for details." ""
|-FunctionDecl 0x219a57f3208 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:722:109> col:70 putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x219a57f3090 <col:80, col:84> col:84 _Ch 'int'
| |-ParmVarDecl 0x219a57f3108 <col:97, col:104> col:104 _File 'FILE *'
| `-DeprecatedAttr 0x219a57f32b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putw. See online help for details." ""
|-FunctionDecl 0x219a57f3578 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:723:77> col:67 rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x219a57f3618 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _rmtmp. See online help for details." ""
|-RecordDecl 0x219a57f3728 <.//openssl//file_jk/before\crypto\rsa/rsa_locl.h:12:1, line:46:1> line:12:8 invalid struct rsa_st definition
| |-FieldDecl 0x219a57f37f8 <line:17:5, col:9> col:9 pad 'int'
| |-FieldDecl 0x219a57f3868 <line:18:5, col:10> col:10 version 'long'
| |-FieldDecl 0x219a57f38d8 <line:19:5, col:23> col:23 invalid meth 'const int *'
| |-FieldDecl 0x219a57f3948 <line:21:5, col:13> col:13 invalid engine 'int *'
| |-FieldDecl 0x219a57f39b8 <line:22:5, col:13> col:13 invalid n 'int *'
| |-FieldDecl 0x219a57f3a28 <line:23:5, col:13> col:13 invalid e 'int *'
| |-FieldDecl 0x219a57f3a98 <line:24:5, col:13> col:13 invalid d 'int *'
| |-FieldDecl 0x219a57f3b08 <line:25:5, col:13> col:13 invalid p 'int *'
| |-FieldDecl 0x219a57f3b78 <line:26:5, col:13> col:13 invalid q 'int *'
| |-FieldDecl 0x219a57f3be8 <line:27:5, col:13> col:13 invalid dmp1 'int *'
| |-FieldDecl 0x219a57f3c58 <line:28:5, col:13> col:13 invalid dmq1 'int *'
| |-FieldDecl 0x219a57f3cc8 <line:29:5, col:13> col:13 invalid iqmp 'int *'
| |-FieldDecl 0x219a57f3d38 <line:31:5, col:20> col:20 invalid ex_data 'int'
| |-FieldDecl 0x219a57f3da8 <line:32:5, col:9> col:9 references 'int'
| |-FieldDecl 0x219a57f3e18 <line:33:5, col:9> col:9 flags 'int'
| |-FieldDecl 0x219a57f3e88 <line:35:5, col:18> col:18 invalid _method_mod_n 'int *'
| |-FieldDecl 0x219a57f3ef8 <line:36:5, col:18> col:18 invalid _method_mod_p 'int *'
| |-FieldDecl 0x219a57f3f68 <line:37:5, col:18> col:18 invalid _method_mod_q 'int *'
| |-FieldDecl 0x219a57f3fd8 <line:42:5, col:11> col:11 bignum_data 'char *'
| |-FieldDecl 0x219a57f80e0 <line:43:5, col:18> col:18 invalid blinding 'int *'
| |-FieldDecl 0x219a57f8150 <line:44:5, col:18> col:18 invalid mt_blinding 'int *'
| `-FieldDecl 0x219a57f81c0 <line:45:5, col:20> col:20 invalid lock 'int *'
|-RecordDecl 0x219a57f8218 <line:48:1, line:91:1> line:48:8 struct rsa_meth_st definition
| |-FieldDecl 0x219a57f82e8 <line:49:5, col:11> col:11 name 'char *'
| |-FieldDecl 0x219a57f8728 <line:50:5, line:51:65> line:50:11 rsa_pub_enc 'int (*)(int, const unsigned char *, unsigned char *, int *, int)'
| |-FieldDecl 0x219a57f8a60 <line:52:5, line:53:65> line:52:11 rsa_pub_dec 'int (*)(int, const unsigned char *, unsigned char *, int *, int)'
| |-FieldDecl 0x219a57f8d98 <line:54:5, line:55:66> line:54:11 rsa_priv_enc 'int (*)(int, const unsigned char *, unsigned char *, int *, int)'
| |-FieldDecl 0x219a57f90f0 <line:56:5, line:57:66> line:56:11 rsa_priv_dec 'int (*)(int, const unsigned char *, unsigned char *, int *, int)'
| |-FieldDecl 0x219a57f9480 <line:59:5, col:75> col:11 rsa_mod_exp 'int (*)(int *, const int *, int *, int *)'
| |-FieldDecl 0x219a57f9930 <line:61:5, line:62:72> line:61:11 bn_mod_exp 'int (*)(int *, const int *, const int *, const int *, int *, int *)'
| |-FieldDecl 0x219a57f9b08 <line:64:5, col:26> col:11 init 'int (*)(int *)'
| |-FieldDecl 0x219a57f9c20 <line:66:5, col:28> col:11 finish 'int (*)(int *)'
| |-FieldDecl 0x219a57f9c90 <line:68:5, col:9> col:9 flags 'int'
| |-FieldDecl 0x219a57f9d00 <line:70:5, col:11> col:11 app_data 'char *'
| |-FieldDecl 0x219a57f2170 <line:77:5, line:80:36> line:77:11 rsa_sign 'int (*)(int, const unsigned char *, unsigned int, unsigned char *, unsigned int *, const int *)'
| |-FieldDecl 0x219a57f2620 <line:81:5, line:83:59> line:81:11 rsa_verify 'int (*)(int, const unsigned char *, unsigned int, const unsigned char *, unsigned int, const int *)'
| `-FieldDecl 0x219a57f29b0 <line:90:5, col:67> col:11 rsa_keygen 'int (*)(int *, int, int *, int *)'
|-FunctionDecl 0x219a57f2fa0 <line:93:1, line:96:50> line:93:12 invalid int_rsa_verify 'int (int, const unsigned char *, unsigned int, unsigned char *, size_t *, const unsigned char *, size_t, int *)' extern
| |-ParmVarDecl 0x219a57f2a20 <col:27, col:31> col:31 dtype 'int'
| |-ParmVarDecl 0x219a57f2aa0 <col:38, col:59> col:59 m 'const unsigned char *'
| |-ParmVarDecl 0x219a57f2b20 <line:94:27, col:40> col:40 m_len 'unsigned int'
| |-ParmVarDecl 0x219a57f2ba0 <col:47, col:62> col:62 rm 'unsigned char *'
| |-ParmVarDecl 0x219a57f2c78 <line:95:27, col:35> col:35 prm_len 'size_t *'
| |-ParmVarDecl 0x219a57f2cf8 <col:44, col:65> col:65 sigbuf 'const unsigned char *'
| |-ParmVarDecl 0x219a57f2d70 <line:96:27, col:34> col:34 siglen 'size_t':'unsigned long long'
| `-ParmVarDecl 0x219a57f2df0 <col:42, col:47> col:47 invalid rsa 'int *'
|-FunctionDecl 0x219a57fd9c0 <.//openssl//file_jk/before\crypto\rsa\rsa_oaep.c:33:1, line:39:1> line:33:5 RSA_padding_add_PKCS1_OAEP 'int (unsigned char *, int, const unsigned char *, int, const unsigned char *, int)'
| |-ParmVarDecl 0x219a57fd598 <col:32, col:47> col:47 used to 'unsigned char *'
| |-ParmVarDecl 0x219a57fd618 <col:51, col:55> col:55 used tlen 'int'
| |-ParmVarDecl 0x219a57fd698 <line:34:32, col:53> col:53 used from 'const unsigned char *'
| |-ParmVarDecl 0x219a57fd718 <col:59, col:63> col:63 used flen 'int'
| |-ParmVarDecl 0x219a57fd798 <line:35:32, col:53> col:53 used param 'const unsigned char *'
| |-ParmVarDecl 0x219a57fd818 <col:60, col:64> col:64 used plen 'int'
| `-CompoundStmt 0x219a57fdf00 <line:36:1, line:39:1>
|   `-ReturnStmt 0x219a57fdef0 <line:37:5, line:38:67>
|     `-CallExpr 0x219a57fde00 <line:37:12, line:38:67> 'int'
|       |-ImplicitCastExpr 0x219a57fdde8 <line:37:12> 'int (*)()' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x219a57fdbc8 <col:12> 'int ()' Function 0x219a57fdb00 'RSA_padding_add_PKCS1_OAEP_mgf1' 'int ()'
|       |-ImplicitCastExpr 0x219a57fde60 <col:44> 'unsigned char *' <LValueToRValue>
|       | `-DeclRefExpr 0x219a57fdbe8 <col:44> 'unsigned char *' lvalue ParmVar 0x219a57fd598 'to' 'unsigned char *'
|       |-ImplicitCastExpr 0x219a57fde78 <col:48> 'int' <LValueToRValue>
|       | `-DeclRefExpr 0x219a57fdc08 <col:48> 'int' lvalue ParmVar 0x219a57fd618 'tlen' 'int'
|       |-ImplicitCastExpr 0x219a57fde90 <col:54> 'const unsigned char *' <LValueToRValue>
|       | `-DeclRefExpr 0x219a57fdc28 <col:54> 'const unsigned char *' lvalue ParmVar 0x219a57fd698 'from' 'const unsigned char *'
|       |-ImplicitCastExpr 0x219a57fdea8 <col:60> 'int' <LValueToRValue>
|       | `-DeclRefExpr 0x219a57fdc48 <col:60> 'int' lvalue ParmVar 0x219a57fd718 'flen' 'int'
|       |-ImplicitCastExpr 0x219a57fdec0 <line:38:44> 'const unsigned char *' <LValueToRValue>
|       | `-DeclRefExpr 0x219a57fdc68 <col:44> 'const unsigned char *' lvalue ParmVar 0x219a57fd798 'param' 'const unsigned char *'
|       |-ImplicitCastExpr 0x219a57fded8 <col:51> 'int' <LValueToRValue>
|       | `-DeclRefExpr 0x219a57fdc88 <col:51> 'int' lvalue ParmVar 0x219a57fd818 'plen' 'int'
|       |-ParenExpr 0x219a57fdd10 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'void *'
|       | `-CStyleCastExpr 0x219a57fdce8 <col:18, col:26> 'void *' <NullToPointer>
|       |   `-IntegerLiteral 0x219a57fdca8 <col:26> 'int' 0
|       `-ParenExpr 0x219a57fdd98 <col:17, col:27> 'void *'
|         `-CStyleCastExpr 0x219a57fdd70 <col:18, col:26> 'void *' <NullToPointer>
|           `-IntegerLiteral 0x219a57fdd30 <col:26> 'int' 0
|-FunctionDecl 0x219a57fe3f0 <.//openssl//file_jk/before\crypto\rsa\rsa_oaep.c:41:1, line:112:1> line:41:5 invalid RSA_padding_add_PKCS1_OAEP_mgf1 'int (unsigned char *, int, const unsigned char *, int, const unsigned char *, int, const int *, const int *)'
| |-ParmVarDecl 0x219a57fdf30 <col:37, col:52> col:52 used to 'unsigned char *'
| |-ParmVarDecl 0x219a57fdfb0 <col:56, col:60> col:60 used tlen 'int'
| |-ParmVarDecl 0x219a57fe030 <line:42:37, col:58> col:58 used from 'const unsigned char *'
| |-ParmVarDecl 0x219a57fe0b0 <col:64, col:68> col:68 used flen 'int'
| |-ParmVarDecl 0x219a57fe130 <line:43:37, col:58> col:58 used param 'const unsigned char *'
| |-ParmVarDecl 0x219a57fe1b0 <col:65, col:69> col:69 used plen 'int'
| |-ParmVarDecl 0x219a57fe230 <line:44:37, col:51> col:51 invalid md 'const int *'
| |-ParmVarDecl 0x219a57fe2b0 <col:55, col:69> col:69 invalid mgf1md 'const int *'
| `-CompoundStmt 0x219a5806a28 <line:45:1, line:112:1>
|   |-DeclStmt 0x219a57ff5c8 <line:46:5, col:15>
|   | `-VarDecl 0x219a57fe500 <col:5, col:14> col:9 used rv 'int' cinit
|   |   `-IntegerLiteral 0x219a57ff5a0 <col:14> 'int' 0
|   |-DeclStmt 0x219a57ff790 <line:47:5, col:28>
|   | |-VarDecl 0x219a57ff5f8 <col:5, col:9> col:9 used i 'int'
|   | `-VarDecl 0x219a57ff678 <col:5, col:27> col:12 used emlen 'int' cinit
|   |   `-BinaryOperator 0x219a57ff758 <col:20, col:27> 'int' '-'
|   |     |-ImplicitCastExpr 0x219a57ff740 <col:20> 'int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x219a57ff6e0 <col:20> 'int' lvalue ParmVar 0x219a57fdfb0 'tlen' 'int'
|   |     `-IntegerLiteral 0x219a57ff718 <col:27> 'int' 1
|   |-DeclStmt 0x219a57ff8c0 <line:48:5, col:29>
|   | |-VarDecl 0x219a57ff7c0 <col:5, col:20> col:20 used db 'unsigned char *'
|   | `-VarDecl 0x219a57ff840 <col:5, col:25> col:25 used seed 'unsigned char *'
|   |-DeclStmt 0x219a57ff9f8 <line:49:5, col:33>
|   | `-VarDecl 0x219a57ff8f0 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/before\crypto\rsa\rsa_oaep.c:49:20 used dbmask 'unsigned char *' cinit
|   |   `-ImplicitCastExpr 0x219a57ff9e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <NullToPointer>
|   |     `-ParenExpr 0x219a57ff9c0 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x219a57ff998 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x219a57ff958 <col:26> 'int' 0
|   |-DeclStmt 0x219a57ffa90 <.//openssl//file_jk/before\crypto\rsa\rsa_oaep.c:50:5, col:44>
|   | `-VarDecl 0x219a57ffa28 <col:5, col:19> col:19 invalid seedmask 'unsigned char'
|   |-DeclStmt 0x219a57ffbe8 <line:51:5, col:30>
|   | |-VarDecl 0x219a57ffac0 <col:5, col:9> col:9 used mdlen 'int'
|   | `-VarDecl 0x219a57ffb40 <col:5, col:29> col:16 used dbmask_len 'int' cinit
|   |   `-IntegerLiteral 0x219a57ffba8 <col:29> 'int' 0
|   |-IfStmt 0x219a58002a8 <line:60:5, line:64:5>
|   | |-BinaryOperator 0x219a5800128 <line:60:9, col:36> 'int' '>'
|   | | |-ImplicitCastExpr 0x219a5800110 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x219a57fffa0 <col:9> 'int' lvalue ParmVar 0x219a57fe0b0 'flen' 'int'
|   | | `-BinaryOperator 0x219a58000f0 <col:16, col:36> 'int' '-'
|   | |   |-BinaryOperator 0x219a58000a8 <col:16, col:28> 'int' '-'
|   | |   | |-ImplicitCastExpr 0x219a5800090 <col:16> 'int' <LValueToRValue>
|   | |   | | `-DeclRefExpr 0x219a57fffd8 <col:16> 'int' lvalue Var 0x219a57ff678 'emlen' 'int'
|   | |   | `-BinaryOperator 0x219a5800070 <col:24, col:28> 'int' '*'
|   | |   |   |-IntegerLiteral 0x219a5800010 <col:24> 'int' 2
|   | |   |   `-ImplicitCastExpr 0x219a5800058 <col:28> 'int' <LValueToRValue>
|   | |   |     `-DeclRefExpr 0x219a5800038 <col:28> 'int' lvalue Var 0x219a57ffac0 'mdlen' 'int'
|   | |   `-IntegerLiteral 0x219a58000c8 <col:36> 'int' 1
|   | `-CompoundStmt 0x219a5800290 <col:39, line:64:5>
|   |   `-ReturnStmt 0x219a5800280 <line:63:9, col:16>
|   |     `-IntegerLiteral 0x219a5800258 <col:16> 'int' 0
|   |-IfStmt 0x219a5800450 <line:66:5, line:70:5>
|   | |-BinaryOperator 0x219a58003c0 <line:66:9, col:29> 'int' '<'
|   | | |-ImplicitCastExpr 0x219a58003a8 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x219a58002c0 <col:9> 'int' lvalue Var 0x219a57ff678 'emlen' 'int'
|   | | `-BinaryOperator 0x219a5800388 <col:17, col:29> 'int' '+'
|   | |   |-BinaryOperator 0x219a5800340 <col:17, col:21> 'int' '*'
|   | |   | |-IntegerLiteral 0x219a58002e0 <col:17> 'int' 2
|   | |   | `-ImplicitCastExpr 0x219a5800328 <col:21> 'int' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x219a5800308 <col:21> 'int' lvalue Var 0x219a57ffac0 'mdlen' 'int'
|   | |   `-IntegerLiteral 0x219a5800360 <col:29> 'int' 1
|   | `-CompoundStmt 0x219a5800438 <col:32, line:70:5>
|   |   `-ReturnStmt 0x219a5800428 <line:69:9, col:16>
|   |     `-IntegerLiteral 0x219a5800400 <col:16> 'int' 0
|   |-BinaryOperator 0x219a5800540 <line:72:5, col:13> 'unsigned char' '='
|   | |-ArraySubscriptExpr 0x219a58004e0 <col:5, col:9> 'unsigned char' lvalue
|   | | |-ImplicitCastExpr 0x219a58004c8 <col:5> 'unsigned char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x219a5800468 <col:5> 'unsigned char *' lvalue ParmVar 0x219a57fdf30 'to' 'unsigned char *'
|   | | `-IntegerLiteral 0x219a58004a0 <col:8> 'int' 0
|   | `-ImplicitCastExpr 0x219a5800528 <col:13> 'unsigned char' <IntegralCast>
|   |   `-IntegerLiteral 0x219a5800500 <col:13> 'int' 0
|   |-BinaryOperator 0x219a5800630 <line:73:5, col:17> 'unsigned char *' '='
|   | |-DeclRefExpr 0x219a5800560 <col:5> 'unsigned char *' lvalue Var 0x219a57ff840 'seed' 'unsigned char *'
|   | `-BinaryOperator 0x219a5800610 <col:12, col:17> 'unsigned char *' '+'
|   |   |-ImplicitCastExpr 0x219a58005f8 <col:12> 'unsigned char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x219a58005b0 <col:12> 'unsigned char *' lvalue ParmVar 0x219a57fdf30 'to' 'unsigned char *'
|   |   `-IntegerLiteral 0x219a58005d0 <col:17> 'int' 1
|   |-BinaryOperator 0x219a5800760 <line:74:5, col:23> 'unsigned char *' '='
|   | |-DeclRefExpr 0x219a5800650 <col:5> 'unsigned char *' lvalue Var 0x219a57ff7c0 'db' 'unsigned char *'
|   | `-BinaryOperator 0x219a5800740 <col:10, col:23> 'unsigned char *' '+'
|   |   |-BinaryOperator 0x219a58006f8 <col:10, col:15> 'unsigned char *' '+'
|   |   | |-ImplicitCastExpr 0x219a58006c8 <col:10> 'unsigned char *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x219a5800688 <col:10> 'unsigned char *' lvalue ParmVar 0x219a57fdf30 'to' 'unsigned char *'
|   |   | `-ImplicitCastExpr 0x219a58006e0 <col:15> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x219a58006a8 <col:15> 'int' lvalue Var 0x219a57ffac0 'mdlen' 'int'
|   |   `-IntegerLiteral 0x219a5800718 <col:23> 'int' 1
|   |-IfStmt 0x219a5800b08 <line:76:5, line:77:14>
|   | |-OpaqueValueExpr 0x219a5800af0 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x219a5800ad8 <col:9, col:14> 'err' 0x219a5800a88
|   |-CallExpr 0x219a5801000 <line:78:5, col:55> 'void *'
|   | |-ImplicitCastExpr 0x219a5800fe8 <col:5> 'void *(*)(void *, int, unsigned long long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x219a5800d50 <col:5> 'void *(void *, int, unsigned long long)' Function 0x219a5800b60 'memset' 'void *(void *, int, unsigned long long)'
|   | |-ImplicitCastExpr 0x219a5801038 <col:12, col:17> 'void *' <BitCast>
|   | | `-BinaryOperator 0x219a5800df8 <col:12, col:17> 'unsigned char *' '+'
|   | |   |-ImplicitCastExpr 0x219a5800dc8 <col:12> 'unsigned char *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x219a5800d88 <col:12> 'unsigned char *' lvalue Var 0x219a57ff7c0 'db' 'unsigned char *'
|   | |   `-ImplicitCastExpr 0x219a5800de0 <col:17> 'int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x219a5800da8 <col:17> 'int' lvalue Var 0x219a57ffac0 'mdlen' 'int'
|   | |-IntegerLiteral 0x219a5800e18 <col:24> 'int' 0
|   | `-ImplicitCastExpr 0x219a5801050 <col:27, col:54> 'unsigned long long' <IntegralCast>
|   |   `-BinaryOperator 0x219a5800f98 <col:27, col:54> 'int' '-'
|   |     |-BinaryOperator 0x219a5800f50 <col:27, col:46> 'int' '-'
|   |     | |-BinaryOperator 0x219a5800eb0 <col:27, col:35> 'int' '-'
|   |     | | |-ImplicitCastExpr 0x219a5800e80 <col:27> 'int' <LValueToRValue>
|   |     | | | `-DeclRefExpr 0x219a5800e40 <col:27> 'int' lvalue Var 0x219a57ff678 'emlen' 'int'
|   |     | | `-ImplicitCastExpr 0x219a5800e98 <col:35> 'int' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x219a5800e60 <col:35> 'int' lvalue ParmVar 0x219a57fe0b0 'flen' 'int'
|   |     | `-BinaryOperator 0x219a5800f30 <col:42, col:46> 'int' '*'
|   |     |   |-IntegerLiteral 0x219a5800ed0 <col:42> 'int' 2
|   |     |   `-ImplicitCastExpr 0x219a5800f18 <col:46> 'int' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x219a5800ef8 <col:46> 'int' lvalue Var 0x219a57ffac0 'mdlen' 'int'
|   |     `-IntegerLiteral 0x219a5800f70 <col:54> 'int' 1
|   |-BinaryOperator 0x219a5801230 <line:79:5, col:36> 'unsigned char' '='
|   | |-ArraySubscriptExpr 0x219a58011d0 <col:5, col:32> 'unsigned char' lvalue
|   | | |-ImplicitCastExpr 0x219a58011b8 <col:5> 'unsigned char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x219a5801068 <col:5> 'unsigned char *' lvalue Var 0x219a57ff7c0 'db' 'unsigned char *'
|   | | `-BinaryOperator 0x219a5801198 <col:8, col:31> 'int' '-'
|   | |   |-BinaryOperator 0x219a5801150 <col:8, col:23> 'int' '-'
|   | |   | |-BinaryOperator 0x219a58010f8 <col:8, col:16> 'int' '-'
|   | |   | | |-ImplicitCastExpr 0x219a58010c8 <col:8> 'int' <LValueToRValue>
|   | |   | | | `-DeclRefExpr 0x219a5801088 <col:8> 'int' lvalue Var 0x219a57ff678 'emlen' 'int'
|   | |   | | `-ImplicitCastExpr 0x219a58010e0 <col:16> 'int' <LValueToRValue>
|   | |   | |   `-DeclRefExpr 0x219a58010a8 <col:16> 'int' lvalue ParmVar 0x219a57fe0b0 'flen' 'int'
|   | |   | `-ImplicitCastExpr 0x219a5801138 <col:23> 'int' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x219a5801118 <col:23> 'int' lvalue Var 0x219a57ffac0 'mdlen' 'int'
|   | |   `-IntegerLiteral 0x219a5801170 <col:31> 'int' 1
|   | `-ImplicitCastExpr 0x219a5801218 <col:36> 'unsigned char' <IntegralCast>
|   |   `-IntegerLiteral 0x219a58011f0 <col:36> 'int' 1
|   |-CallExpr 0x219a57fe6f0 <line:80:5, col:63> 'void *'
|   | |-ImplicitCastExpr 0x219a57fe6d8 <col:5> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x219a5801480 <col:5> 'void *(void *, const void *, unsigned long long)' Function 0x219a5801290 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   | |-ImplicitCastExpr 0x219a57fe728 <col:12, col:32> 'void *' <BitCast>
|   | | `-BinaryOperator 0x219a57fe5c8 <col:12, col:32> 'unsigned char *' '-'
|   | |   |-BinaryOperator 0x219a5801580 <col:12, col:25> 'unsigned char *' '-'
|   | |   | |-BinaryOperator 0x219a5801528 <col:12, col:17> 'unsigned char *' '+'
|   | |   | | |-ImplicitCastExpr 0x219a58014f8 <col:12> 'unsigned char *' <LValueToRValue>
|   | |   | | | `-DeclRefExpr 0x219a58014b8 <col:12> 'unsigned char *' lvalue Var 0x219a57ff7c0 'db' 'unsigned char *'
|   | |   | | `-ImplicitCastExpr 0x219a5801510 <col:17> 'int' <LValueToRValue>
|   | |   | |   `-DeclRefExpr 0x219a58014d8 <col:17> 'int' lvalue Var 0x219a57ff678 'emlen' 'int'
|   | |   | `-ImplicitCastExpr 0x219a5801568 <col:25> 'int' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x219a5801548 <col:25> 'int' lvalue ParmVar 0x219a57fe0b0 'flen' 'int'
|   | |   `-ImplicitCastExpr 0x219a57fe5b0 <col:32> 'int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x219a57fe590 <col:32> 'int' lvalue Var 0x219a57ffac0 'mdlen' 'int'
|   | |-ImplicitCastExpr 0x219a57fe758 <col:39> 'const void *' <BitCast>
|   | | `-ImplicitCastExpr 0x219a57fe740 <col:39> 'const unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x219a57fe5e8 <col:39> 'const unsigned char *' lvalue ParmVar 0x219a57fe030 'from' 'const unsigned char *'
|   | `-ImplicitCastExpr 0x219a57fe770 <col:45, col:59> 'unsigned long long' <IntegralCast>
|   |   `-CStyleCastExpr 0x219a57fe670 <col:45, col:59> 'unsigned int' <IntegralCast>
|   |     `-ImplicitCastExpr 0x219a57fe658 <col:59> 'int' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0x219a57fe620 <col:59> 'int' lvalue ParmVar 0x219a57fe0b0 'flen' 'int'
|   |-IfStmt 0x219a57fe9b0 <line:81:5, line:82:14>
|   | |-BinaryOperator 0x219a57fe978 <line:81:9, col:36> 'int' '<='
|   | | |-CallExpr 0x219a57fe8f0 <col:9, col:31> 'int'
|   | | | |-ImplicitCastExpr 0x219a57fe8d8 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x219a57fe878 <col:9> 'int ()' Function 0x219a57fe7b0 'RAND_bytes' 'int ()'
|   | | | |-ImplicitCastExpr 0x219a57fe920 <col:20> 'unsigned char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x219a57fe898 <col:20> 'unsigned char *' lvalue Var 0x219a57ff840 'seed' 'unsigned char *'
|   | | | `-ImplicitCastExpr 0x219a57fe938 <col:26> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x219a57fe8b8 <col:26> 'int' lvalue Var 0x219a57ffac0 'mdlen' 'int'
|   | | `-IntegerLiteral 0x219a57fe950 <col:36> 'int' 0
|   | `-GotoStmt 0x219a57fe998 <line:82:9, col:14> 'err' 0x219a5800a88
|   |-BinaryOperator 0x219a57fea90 <line:90:5, col:26> 'int' '='
|   | |-DeclRefExpr 0x219a57fe9c8 <col:5> 'int' lvalue Var 0x219a57ffb40 'dbmask_len' 'int'
|   | `-BinaryOperator 0x219a57fea70 <col:18, col:26> 'int' '-'
|   |   |-ImplicitCastExpr 0x219a57fea40 <col:18> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x219a57fea00 <col:18> 'int' lvalue Var 0x219a57ff678 'emlen' 'int'
|   |   `-ImplicitCastExpr 0x219a57fea58 <col:26> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x219a57fea20 <col:26> 'int' lvalue Var 0x219a57ffac0 'mdlen' 'int'
|   |-BinaryOperator 0x219a57fec88 <line:91:5, col:39> 'unsigned char *' '='
|   | |-DeclRefExpr 0x219a57feab0 <col:5> 'unsigned char *' lvalue Var 0x219a57ff8f0 'dbmask' 'unsigned char *'
|   | `-ImplicitCastExpr 0x219a57fec70 <col:14, col:39> 'unsigned char *' <IntegralToPointer>
|   |   `-CallExpr 0x219a57fec30 <col:14, col:39> 'int'
|   |     |-ImplicitCastExpr 0x219a57fec18 <col:14> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x219a57febd8 <col:14> 'int ()' Function 0x219a57feb10 'OPENSSL_malloc' 'int ()'
|   |     `-ImplicitCastExpr 0x219a57fec58 <col:29> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x219a57febf8 <col:29> 'int' lvalue Var 0x219a57ffb40 'dbmask_len' 'int'
|   |-IfStmt 0x219a57fedf0 <line:92:5, line:95:5>
|   | |-BinaryOperator 0x219a57fed80 <line:92:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x219a57fed50 <.//openssl//file_jk/before\crypto\rsa\rsa_oaep.c:92:9> 'unsigned char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x219a57feca8 <col:9> 'unsigned char *' lvalue Var 0x219a57ff8f0 'dbmask' 'unsigned char *'
|   | | `-ImplicitCastExpr 0x219a57fed68 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <BitCast>
|   | |   `-ParenExpr 0x219a57fed30 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x219a57fed08 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x219a57fecc8 <col:26> 'int' 0
|   | `-CompoundStmt 0x219a57fedd8 <.//openssl//file_jk/before\crypto\rsa\rsa_oaep.c:92:25, line:95:5>
|   |   `-GotoStmt 0x219a57fedc0 <line:94:9, col:14> 'err' 0x219a5800a88
|   |-IfStmt 0x219a57feff0 <line:97:5, line:98:14>
|   | |-OpaqueValueExpr 0x219a57fefd8 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x219a57fefc0 <col:9, col:14> 'err' 0x219a5800a88
|   |-ForStmt 0x219a57ff2d0 <line:99:5, line:100:26>
|   | |-BinaryOperator 0x219a57ff068 <line:99:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x219a57ff008 <col:10> 'int' lvalue Var 0x219a57ff5f8 'i' 'int'
|   | | `-IntegerLiteral 0x219a57ff040 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x219a57ff0f8 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x219a57ff0c8 <col:17> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x219a57ff088 <col:17> 'int' lvalue Var 0x219a57ff5f8 'i' 'int'
|   | | `-ImplicitCastExpr 0x219a57ff0e0 <col:21> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x219a57ff0a8 <col:21> 'int' lvalue Var 0x219a57ffb40 'dbmask_len' 'int'
|   | |-UnaryOperator 0x219a57ff138 <col:33, col:34> 'int' postfix '++'
|   | | `-DeclRefExpr 0x219a57ff118 <col:33> 'int' lvalue Var 0x219a57ff5f8 'i' 'int'
|   | `-CompoundAssignOperator 0x219a57ff2a0 <line:100:9, col:26> 'unsigned char' '^=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |-ArraySubscriptExpr 0x219a57ff1c0 <col:9, col:13> 'unsigned char' lvalue
|   |   | |-ImplicitCastExpr 0x219a57ff190 <col:9> 'unsigned char *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x219a57ff150 <col:9> 'unsigned char *' lvalue Var 0x219a57ff7c0 'db' 'unsigned char *'
|   |   | `-ImplicitCastExpr 0x219a57ff1a8 <col:12> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x219a57ff170 <col:12> 'int' lvalue Var 0x219a57ff5f8 'i' 'int'
|   |   `-ImplicitCastExpr 0x219a57ff288 <col:18, col:26> 'int' <IntegralCast>
|   |     `-ImplicitCastExpr 0x219a57ff270 <col:18, col:26> 'unsigned char' <LValueToRValue>
|   |       `-ArraySubscriptExpr 0x219a57ff250 <col:18, col:26> 'unsigned char' lvalue
|   |         |-ImplicitCastExpr 0x219a57ff220 <col:18> 'unsigned char *' <LValueToRValue>
|   |         | `-DeclRefExpr 0x219a57ff1e0 <col:18> 'unsigned char *' lvalue Var 0x219a57ff8f0 'dbmask' 'unsigned char *'
|   |         `-ImplicitCastExpr 0x219a57ff238 <col:25> 'int' <LValueToRValue>
|   |           `-DeclRefExpr 0x219a57ff200 <col:25> 'int' lvalue Var 0x219a57ff5f8 'i' 'int'
|   |-IfStmt 0x219a57ff3e0 <line:102:5, line:103:14>
|   | |-OpaqueValueExpr 0x219a57ff3c8 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x219a57ff3b0 <col:9, col:14> 'err' 0x219a5800a88
|   |-BinaryOperator 0x219a58066c8 <line:106:5, col:10> 'int' '='
|   | |-DeclRefExpr 0x219a5806668 <col:5> 'int' lvalue Var 0x219a57fe500 'rv' 'int'
|   | `-IntegerLiteral 0x219a58066a0 <col:10> 'int' 1
|   |-LabelStmt 0x219a5806800 <line:108:2, col:5> 'err'
|   | `-NullStmt 0x219a58067f8 <col:5>
|   |-CallExpr 0x219a5806980 <line:110:5, col:42> 'int'
|   | |-ImplicitCastExpr 0x219a5806968 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x219a5806908 <col:5> 'int ()' Function 0x219a5806840 'OPENSSL_clear_free' 'int ()'
|   | |-ImplicitCastExpr 0x219a58069b0 <col:24> 'unsigned char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x219a5806928 <col:24> 'unsigned char *' lvalue Var 0x219a57ff8f0 'dbmask' 'unsigned char *'
|   | `-ImplicitCastExpr 0x219a58069c8 <col:32> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x219a5806948 <col:32> 'int' lvalue Var 0x219a57ffb40 'dbmask_len' 'int'
|   `-ReturnStmt 0x219a5806a18 <line:111:5, col:12>
|     `-ImplicitCastExpr 0x219a5806a00 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x219a58069e0 <col:12> 'int' lvalue Var 0x219a57fe500 'rv' 'int'
|-FunctionDecl 0x219a5800b60 <line:78:5> col:5 implicit used memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x219a5800c00 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x219a5800c68 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x219a5800cd0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x219a5801290 <line:80:5> col:5 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x219a5801330 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x219a5801398 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x219a5801400 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x219a5806ff0 <line:114:1, line:120:1> line:114:5 RSA_padding_check_PKCS1_OAEP 'int (unsigned char *, int, const unsigned char *, int, int, const unsigned char *, int)'
| |-ParmVarDecl 0x219a5806b20 <col:34, col:49> col:49 used to 'unsigned char *'
| |-ParmVarDecl 0x219a5806ba0 <col:53, col:57> col:57 used tlen 'int'
| |-ParmVarDecl 0x219a5806c20 <line:115:34, col:55> col:55 used from 'const unsigned char *'
| |-ParmVarDecl 0x219a5806ca0 <col:61, col:65> col:65 used flen 'int'
| |-ParmVarDecl 0x219a5806d20 <col:71, col:75> col:75 used num 'int'
| |-ParmVarDecl 0x219a5806da0 <line:116:34, col:55> col:55 used param 'const unsigned char *'
| |-ParmVarDecl 0x219a5806e20 <col:62, col:66> col:66 used plen 'int'
| `-CompoundStmt 0x219a5807518 <line:117:1, line:120:1>
|   `-ReturnStmt 0x219a5807508 <line:118:5, line:119:69>
|     `-CallExpr 0x219a58073f8 <line:118:12, line:119:69> 'int'
|       |-ImplicitCastExpr 0x219a58073e0 <line:118:12> 'int (*)()' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x219a58071d0 <col:12> 'int ()' Function 0x219a5807108 'RSA_padding_check_PKCS1_OAEP_mgf1' 'int ()'
|       |-ImplicitCastExpr 0x219a5807460 <col:46> 'unsigned char *' <LValueToRValue>
|       | `-DeclRefExpr 0x219a58071f0 <col:46> 'unsigned char *' lvalue ParmVar 0x219a5806b20 'to' 'unsigned char *'
|       |-ImplicitCastExpr 0x219a5807478 <col:50> 'int' <LValueToRValue>
|       | `-DeclRefExpr 0x219a5807210 <col:50> 'int' lvalue ParmVar 0x219a5806ba0 'tlen' 'int'
|       |-ImplicitCastExpr 0x219a5807490 <col:56> 'const unsigned char *' <LValueToRValue>
|       | `-DeclRefExpr 0x219a5807230 <col:56> 'const unsigned char *' lvalue ParmVar 0x219a5806c20 'from' 'const unsigned char *'
|       |-ImplicitCastExpr 0x219a58074a8 <col:62> 'int' <LValueToRValue>
|       | `-DeclRefExpr 0x219a5807250 <col:62> 'int' lvalue ParmVar 0x219a5806ca0 'flen' 'int'
|       |-ImplicitCastExpr 0x219a58074c0 <col:68> 'int' <LValueToRValue>
|       | `-DeclRefExpr 0x219a5807270 <col:68> 'int' lvalue ParmVar 0x219a5806d20 'num' 'int'
|       |-ImplicitCastExpr 0x219a58074d8 <line:119:46> 'const unsigned char *' <LValueToRValue>
|       | `-DeclRefExpr 0x219a5807290 <col:46> 'const unsigned char *' lvalue ParmVar 0x219a5806da0 'param' 'const unsigned char *'
|       |-ImplicitCastExpr 0x219a58074f0 <col:53> 'int' <LValueToRValue>
|       | `-DeclRefExpr 0x219a58072b0 <col:53> 'int' lvalue ParmVar 0x219a5806e20 'plen' 'int'
|       |-ParenExpr 0x219a5807338 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'void *'
|       | `-CStyleCastExpr 0x219a5807310 <col:18, col:26> 'void *' <NullToPointer>
|       |   `-IntegerLiteral 0x219a58072d0 <col:26> 'int' 0
|       `-ParenExpr 0x219a58073c0 <col:17, col:27> 'void *'
|         `-CStyleCastExpr 0x219a5807398 <col:18, col:26> 'void *' <NullToPointer>
|           `-IntegerLiteral 0x219a5807358 <col:26> 'int' 0
|-FunctionDecl 0x219a5805ad0 <.//openssl//file_jk/before\crypto\rsa\rsa_oaep.c:122:1, line:257:1> line:122:5 invalid RSA_padding_check_PKCS1_OAEP_mgf1 'int (unsigned char *, int, const unsigned char *, int, int, const unsigned char *, int, const int *, const int *)'
| |-ParmVarDecl 0x219a5807548 <col:39, col:54> col:54 used to 'unsigned char *'
| |-ParmVarDecl 0x219a5805600 <col:58, col:62> col:62 used tlen 'int'
| |-ParmVarDecl 0x219a5805680 <line:123:39, col:60> col:60 used from 'const unsigned char *'
| |-ParmVarDecl 0x219a5805700 <col:66, col:70> col:70 used flen 'int'
| |-ParmVarDecl 0x219a5805780 <line:124:39, col:43> col:43 used num 'int'
| |-ParmVarDecl 0x219a5805800 <col:48, col:69> col:69 used param 'const unsigned char *'
| |-ParmVarDecl 0x219a5805880 <line:125:39, col:43> col:43 used plen 'int'
| |-ParmVarDecl 0x219a5805900 <col:49, col:63> col:63 invalid md 'const int *'
| |-ParmVarDecl 0x219a5805980 <line:126:39, col:53> col:53 invalid mgf1md 'const int *'
| `-CompoundStmt 0x219a5809918 <line:127:1, line:257:1>
|   |-DeclStmt 0x219a5805f10 <line:128:5, col:58>
|   | |-VarDecl 0x219a5805be8 <col:5, col:9> col:9 used i 'int'
|   | |-VarDecl 0x219a5805c68 <col:5, col:20> col:12 used dblen 'int' cinit
|   | | `-IntegerLiteral 0x219a5805cd0 <col:20> 'int' 0
|   | |-VarDecl 0x219a5805d10 <col:5, col:31> col:23 used mlen 'int' cinit
|   | | `-UnaryOperator 0x219a5805da0 <col:30, col:31> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x219a5805d78 <col:31> 'int' 1
|   | |-VarDecl 0x219a5805dd0 <col:5, col:46> col:34 used one_index 'int' cinit
|   | | `-IntegerLiteral 0x219a5805e38 <col:46> 'int' 0
|   | `-VarDecl 0x219a5805e78 <col:5, col:49> col:49 used msg_index 'int'
|   |-DeclStmt 0x219a5806040 <line:129:5, col:38>
|   | |-VarDecl 0x219a5805f40 <col:5, col:18> col:18 used good 'unsigned int'
|   | `-VarDecl 0x219a5805fc0 <col:5, col:24> col:24 used found_one_byte 'unsigned int'
|   |-DeclStmt 0x219a5806170 <line:130:5, col:47>
|   | |-VarDecl 0x219a5806070 <col:5, col:26> col:26 used maskedseed 'const unsigned char *'
|   | `-VarDecl 0x219a58060f0 <col:5, col:39> col:39 used maskeddb 'const unsigned char *'
|   |-DeclStmt 0x219a58063e0 <line:135:5, line:136:31>
|   | |-VarDecl 0x219a58061a0 <line:135:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/before\crypto\rsa\rsa_oaep.c:135:20 used db 'unsigned char *' cinit
|   | | `-ImplicitCastExpr 0x219a5806290 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <NullToPointer>
|   | |   `-ParenExpr 0x219a5806270 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x219a5806248 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x219a5806208 <col:26> 'int' 0
|   | `-VarDecl 0x219a58062c0 <.//openssl//file_jk/before\crypto\rsa\rsa_oaep.c:135:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/before\crypto\rsa\rsa_oaep.c:135:32 used em 'unsigned char *' cinit
|   |   `-ImplicitCastExpr 0x219a58063b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <NullToPointer>
|   |     `-ParenExpr 0x219a5806390 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x219a5806368 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x219a5806328 <col:26> 'int' 0
|   |-DeclStmt 0x219a5806478 <.//openssl//file_jk/before\crypto\rsa\rsa_oaep.c:137:5, col:14>
|   | `-VarDecl 0x219a5806410 <col:5, col:9> col:9 used mdlen 'int'
|   |-IfStmt 0x219a58027c8 <line:146:5, line:147:17>
|   | |-BinaryOperator 0x219a5802758 <line:146:9, col:30> 'int' '||'
|   | | |-BinaryOperator 0x219a58026a0 <col:9, col:17> 'int' '<='
|   | | | |-ImplicitCastExpr 0x219a5802688 <col:9> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x219a5802628 <col:9> 'int' lvalue ParmVar 0x219a5805600 'tlen' 'int'
|   | | | `-IntegerLiteral 0x219a5802660 <col:17> 'int' 0
|   | | `-BinaryOperator 0x219a5802738 <col:22, col:30> 'int' '<='
|   | |   |-ImplicitCastExpr 0x219a5802720 <col:22> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x219a58026c0 <col:22> 'int' lvalue ParmVar 0x219a5805700 'flen' 'int'
|   | |   `-IntegerLiteral 0x219a58026f8 <col:30> 'int' 0
|   | `-ReturnStmt 0x219a58027b8 <line:147:9, col:17>
|   |   `-UnaryOperator 0x219a58027a0 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x219a5802778 <col:17> 'int' 1
|   |-IfStmt 0x219a5802a30 <line:156:5, line:157:14>
|   | |-BinaryOperator 0x219a58029a8 <line:156:9, col:41> 'int' '||'
|   | | |-BinaryOperator 0x219a5802868 <col:9, col:15> 'int' '<'
|   | | | |-ImplicitCastExpr 0x219a5802838 <col:9> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x219a58027e0 <col:9> 'int' lvalue ParmVar 0x219a5805780 'num' 'int'
|   | | | `-ImplicitCastExpr 0x219a5802850 <col:15> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x219a5802818 <col:15> 'int' lvalue ParmVar 0x219a5805700 'flen' 'int'
|   | | `-BinaryOperator 0x219a5802988 <col:23, col:41> 'int' '<'
|   | |   |-ImplicitCastExpr 0x219a5802970 <col:23> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x219a5802888 <col:23> 'int' lvalue ParmVar 0x219a5805780 'num' 'int'
|   | |   `-BinaryOperator 0x219a5802950 <col:29, col:41> 'int' '+'
|   | |     |-BinaryOperator 0x219a5802908 <col:29, col:33> 'int' '*'
|   | |     | |-IntegerLiteral 0x219a58028a8 <col:29> 'int' 2
|   | |     | `-ImplicitCastExpr 0x219a58028f0 <col:33> 'int' <LValueToRValue>
|   | |     |   `-DeclRefExpr 0x219a58028d0 <col:33> 'int' lvalue Var 0x219a5806410 'mdlen' 'int'
|   | |     `-IntegerLiteral 0x219a5802928 <col:41> 'int' 2
|   | `-GotoStmt 0x219a5802a18 <line:157:9, col:14> 'decoding_err' 0x219a58029c8
|   |-BinaryOperator 0x219a5802b58 <line:159:5, col:27> 'int' '='
|   | |-DeclRefExpr 0x219a5802a48 <col:5> 'int' lvalue Var 0x219a5805c68 'dblen' 'int'
|   | `-BinaryOperator 0x219a5802b38 <col:13, col:27> 'int' '-'
|   |   |-BinaryOperator 0x219a5802af0 <col:13, col:19> 'int' '-'
|   |   | |-ImplicitCastExpr 0x219a5802ac0 <col:13> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x219a5802a80 <col:13> 'int' lvalue ParmVar 0x219a5805780 'num' 'int'
|   |   | `-ImplicitCastExpr 0x219a5802ad8 <col:19> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x219a5802aa0 <col:19> 'int' lvalue Var 0x219a5806410 'mdlen' 'int'
|   |   `-IntegerLiteral 0x219a5802b10 <col:27> 'int' 1
|   |-BinaryOperator 0x219a5802c60 <line:160:5, col:30> 'unsigned char *' '='
|   | |-DeclRefExpr 0x219a5802b78 <col:5> 'unsigned char *' lvalue Var 0x219a58061a0 'db' 'unsigned char *'
|   | `-ImplicitCastExpr 0x219a5802c48 <col:10, col:30> 'unsigned char *' <IntegralToPointer>
|   |   `-CallExpr 0x219a5802c08 <col:10, col:30> 'int'
|   |     |-ImplicitCastExpr 0x219a5802bf0 <col:10> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x219a5802bb0 <col:10> 'int ()' Function 0x219a57feb10 'OPENSSL_malloc' 'int ()'
|   |     `-ImplicitCastExpr 0x219a5802c30 <col:25> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x219a5802bd0 <col:25> 'int' lvalue Var 0x219a5805c68 'dblen' 'int'
|   |-IfStmt 0x219a5802e18 <line:161:5, line:164:5>
|   | |-BinaryOperator 0x219a5802d58 <line:161:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x219a5802d28 <.//openssl//file_jk/before\crypto\rsa\rsa_oaep.c:161:9> 'unsigned char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x219a5802c80 <col:9> 'unsigned char *' lvalue Var 0x219a58061a0 'db' 'unsigned char *'
|   | | `-ImplicitCastExpr 0x219a5802d40 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <BitCast>
|   | |   `-ParenExpr 0x219a5802d08 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x219a5802ce0 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x219a5802ca0 <col:26> 'int' 0
|   | `-CompoundStmt 0x219a5802e00 <.//openssl//file_jk/before\crypto\rsa\rsa_oaep.c:161:21, line:164:5>
|   |   `-GotoStmt 0x219a5802de8 <line:163:9, col:14> 'cleanup' 0x219a5802d98
|   |-IfStmt 0x219a5803530 <line:166:5, line:184:5>
|   | |-BinaryOperator 0x219a5802ea0 <line:166:9, col:17> 'int' '!='
|   | | |-ImplicitCastExpr 0x219a5802e70 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x219a5802e30 <col:9> 'int' lvalue ParmVar 0x219a5805700 'flen' 'int'
|   | | `-ImplicitCastExpr 0x219a5802e88 <col:17> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x219a5802e50 <col:17> 'int' lvalue ParmVar 0x219a5805780 'num' 'int'
|   | `-CompoundStmt 0x219a5803500 <col:22, line:184:5>
|   |   |-BinaryOperator 0x219a5803098 <line:167:9, col:32> 'unsigned char *' '='
|   |   | |-DeclRefExpr 0x219a5802ec0 <col:9> 'unsigned char *' lvalue Var 0x219a58062c0 'em' 'unsigned char *'
|   |   | `-ImplicitCastExpr 0x219a5803080 <col:14, col:32> 'unsigned char *' <IntegralToPointer>
|   |   |   `-CallExpr 0x219a5803040 <col:14, col:32> 'int'
|   |   |     |-ImplicitCastExpr 0x219a5803028 <col:14> 'int (*)()' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x219a5802fe8 <col:14> 'int ()' Function 0x219a5802f20 'OPENSSL_zalloc' 'int ()'
|   |   |     `-ImplicitCastExpr 0x219a5803068 <col:29> 'int' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x219a5803008 <col:29> 'int' lvalue ParmVar 0x219a5805780 'num' 'int'
|   |   |-IfStmt 0x219a5803200 <line:168:9, line:172:9>
|   |   | |-BinaryOperator 0x219a5803190 <line:168:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x219a5803160 <.//openssl//file_jk/before\crypto\rsa\rsa_oaep.c:168:13> 'unsigned char *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x219a58030b8 <col:13> 'unsigned char *' lvalue Var 0x219a58062c0 'em' 'unsigned char *'
|   |   | | `-ImplicitCastExpr 0x219a5803178 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <BitCast>
|   |   | |   `-ParenExpr 0x219a5803140 <col:17, col:27> 'void *'
|   |   | |     `-CStyleCastExpr 0x219a5803118 <col:18, col:26> 'void *' <NullToPointer>
|   |   | |       `-IntegerLiteral 0x219a58030d8 <col:26> 'int' 0
|   |   | `-CompoundStmt 0x219a58031e8 <.//openssl//file_jk/before\crypto\rsa\rsa_oaep.c:168:25, line:172:9>
|   |   |   `-GotoStmt 0x219a58031d0 <line:171:13, col:18> 'cleanup' 0x219a5802d98
|   |   |-CallExpr 0x219a58033c0 <line:182:9, col:43> 'void *'
|   |   | |-ImplicitCastExpr 0x219a58033a8 <col:9> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x219a5803218 <col:9> 'void *(void *, const void *, unsigned long long)' Function 0x219a5801290 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   |   | |-ImplicitCastExpr 0x219a58033f8 <col:16, col:27> 'void *' <BitCast>
|   |   | | `-BinaryOperator 0x219a5803300 <col:16, col:27> 'unsigned char *' '-'
|   |   | |   |-BinaryOperator 0x219a58032a8 <col:16, col:21> 'unsigned char *' '+'
|   |   | |   | |-ImplicitCastExpr 0x219a5803278 <col:16> 'unsigned char *' <LValueToRValue>
|   |   | |   | | `-DeclRefExpr 0x219a5803238 <col:16> 'unsigned char *' lvalue Var 0x219a58062c0 'em' 'unsigned char *'
|   |   | |   | `-ImplicitCastExpr 0x219a5803290 <col:21> 'int' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x219a5803258 <col:21> 'int' lvalue ParmVar 0x219a5805780 'num' 'int'
|   |   | |   `-ImplicitCastExpr 0x219a58032e8 <col:27> 'int' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x219a58032c8 <col:27> 'int' lvalue ParmVar 0x219a5805700 'flen' 'int'
|   |   | |-ImplicitCastExpr 0x219a5803428 <col:33> 'const void *' <BitCast>
|   |   | | `-ImplicitCastExpr 0x219a5803410 <col:33> 'const unsigned char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x219a5803320 <col:33> 'const unsigned char *' lvalue ParmVar 0x219a5805680 'from' 'const unsigned char *'
|   |   | `-ImplicitCastExpr 0x219a5803458 <col:39> 'unsigned long long' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x219a5803440 <col:39> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x219a5803358 <col:39> 'int' lvalue ParmVar 0x219a5805700 'flen' 'int'
|   |   `-BinaryOperator 0x219a58034e0 <line:183:9, col:16> 'const unsigned char *' '='
|   |     |-DeclRefExpr 0x219a5803470 <col:9> 'const unsigned char *' lvalue ParmVar 0x219a5805680 'from' 'const unsigned char *'
|   |     `-ImplicitCastExpr 0x219a58034c8 <col:16> 'const unsigned char *' <NoOp>
|   |       `-ImplicitCastExpr 0x219a58034b0 <col:16> 'unsigned char *' <LValueToRValue>
|   |         `-DeclRefExpr 0x219a5803490 <col:16> 'unsigned char *' lvalue Var 0x219a58062c0 'em' 'unsigned char *'
|   |-BinaryOperator 0x219a5808820 <line:191:5, col:41> 'unsigned int' '='
|   | |-DeclRefExpr 0x219a5803548 <col:5> 'unsigned int' lvalue Var 0x219a5805f40 'good' 'unsigned int'
|   | `-ImplicitCastExpr 0x219a5808808 <col:12, col:41> 'unsigned int' <IntegralCast>
|   |   `-CallExpr 0x219a58087b0 <col:12, col:41> 'int'
|   |     |-ImplicitCastExpr 0x219a5808798 <col:12> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x219a58086f8 <col:12> 'int ()' Function 0x219a5808630 'constant_time_is_zero' 'int ()'
|   |     `-ImplicitCastExpr 0x219a58087f0 <col:34, col:40> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x219a58087d8 <col:34, col:40> 'unsigned char' <LValueToRValue>
|   |         `-ArraySubscriptExpr 0x219a5808778 <col:34, col:40> 'const unsigned char' lvalue
|   |           |-ImplicitCastExpr 0x219a5808760 <col:34> 'const unsigned char *' <LValueToRValue>
|   |           | `-DeclRefExpr 0x219a5808718 <col:34> 'const unsigned char *' lvalue ParmVar 0x219a5805680 'from' 'const unsigned char *'
|   |           `-IntegerLiteral 0x219a5808738 <col:39> 'int' 0
|   |-BinaryOperator 0x219a58088f8 <line:193:5, col:25> 'const unsigned char *' '='
|   | |-DeclRefExpr 0x219a5808840 <col:5> 'const unsigned char *' lvalue Var 0x219a5806070 'maskedseed' 'const unsigned char *'
|   | `-BinaryOperator 0x219a58088d8 <col:18, col:25> 'const unsigned char *' '+'
|   |   |-ImplicitCastExpr 0x219a58088c0 <col:18> 'const unsigned char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x219a5808878 <col:18> 'const unsigned char *' lvalue ParmVar 0x219a5805680 'from' 'const unsigned char *'
|   |   `-IntegerLiteral 0x219a5808898 <col:25> 'int' 1
|   |-BinaryOperator 0x219a5808a28 <line:194:5, col:27> 'const unsigned char *' '='
|   | |-DeclRefExpr 0x219a5808918 <col:5> 'const unsigned char *' lvalue Var 0x219a58060f0 'maskeddb' 'const unsigned char *'
|   | `-BinaryOperator 0x219a5808a08 <col:16, col:27> 'const unsigned char *' '+'
|   |   |-BinaryOperator 0x219a58089b0 <col:16, col:23> 'const unsigned char *' '+'
|   |   | |-ImplicitCastExpr 0x219a5808998 <col:16> 'const unsigned char *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x219a5808950 <col:16> 'const unsigned char *' lvalue ParmVar 0x219a5805680 'from' 'const unsigned char *'
|   |   | `-IntegerLiteral 0x219a5808970 <col:23> 'int' 1
|   |   `-ImplicitCastExpr 0x219a58089f0 <col:27> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x219a58089d0 <col:27> 'int' lvalue Var 0x219a5806410 'mdlen' 'int'
|   |-IfStmt 0x219a5808af8 <line:196:5, line:197:14>
|   | |-OpaqueValueExpr 0x219a5808ae0 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x219a5808ac8 <col:9, col:14> 'cleanup' 0x219a5802d98
|   |-IfStmt 0x219a5808db8 <line:201:5, line:202:14>
|   | |-OpaqueValueExpr 0x219a5808da0 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x219a5808d88 <col:9, col:14> 'cleanup' 0x219a5802d98
|   |-ForStmt 0x219a5809080 <line:203:5, line:204:28>
|   | |-BinaryOperator 0x219a5808e18 <line:203:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x219a5808dd0 <col:10> 'int' lvalue Var 0x219a5805be8 'i' 'int'
|   | | `-IntegerLiteral 0x219a5808df0 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x219a5808ea8 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x219a5808e78 <col:17> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x219a5808e38 <col:17> 'int' lvalue Var 0x219a5805be8 'i' 'int'
|   | | `-ImplicitCastExpr 0x219a5808e90 <col:21> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x219a5808e58 <col:21> 'int' lvalue Var 0x219a5805c68 'dblen' 'int'
|   | |-UnaryOperator 0x219a5808ee8 <col:28, col:29> 'int' postfix '++'
|   | | `-DeclRefExpr 0x219a5808ec8 <col:28> 'int' lvalue Var 0x219a5805be8 'i' 'int'
|   | `-CompoundAssignOperator 0x219a5809050 <line:204:9, col:28> 'unsigned char' '^=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |-ArraySubscriptExpr 0x219a5808f70 <col:9, col:13> 'unsigned char' lvalue
|   |   | |-ImplicitCastExpr 0x219a5808f40 <col:9> 'unsigned char *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x219a5808f00 <col:9> 'unsigned char *' lvalue Var 0x219a58061a0 'db' 'unsigned char *'
|   |   | `-ImplicitCastExpr 0x219a5808f58 <col:12> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x219a5808f20 <col:12> 'int' lvalue Var 0x219a5805be8 'i' 'int'
|   |   `-ImplicitCastExpr 0x219a5809038 <col:18, col:28> 'int' <IntegralCast>
|   |     `-ImplicitCastExpr 0x219a5809020 <col:18, col:28> 'unsigned char' <LValueToRValue>
|   |       `-ArraySubscriptExpr 0x219a5809000 <col:18, col:28> 'const unsigned char' lvalue
|   |         |-ImplicitCastExpr 0x219a5808fd0 <col:18> 'const unsigned char *' <LValueToRValue>
|   |         | `-DeclRefExpr 0x219a5808f90 <col:18> 'const unsigned char *' lvalue Var 0x219a58060f0 'maskeddb' 'const unsigned char *'
|   |         `-ImplicitCastExpr 0x219a5808fe8 <col:27> 'int' <LValueToRValue>
|   |           `-DeclRefExpr 0x219a5808fb0 <col:27> 'int' lvalue Var 0x219a5805be8 'i' 'int'
|   |-IfStmt 0x219a58092e0 <line:206:5, line:207:14>
|   | |-OpaqueValueExpr 0x219a58092c8 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x219a58092b0 <col:9, col:14> 'cleanup' 0x219a5802d98
|   |-BinaryOperator 0x219a5809500 <line:211:5, col:22> 'unsigned int' '='
|   | |-DeclRefExpr 0x219a5809488 <col:5> 'unsigned int' lvalue Var 0x219a5805fc0 'found_one_byte' 'unsigned int'
|   | `-ImplicitCastExpr 0x219a58094e8 <col:22> 'unsigned int' <IntegralCast>
|   |   `-IntegerLiteral 0x219a58094c0 <col:22> 'int' 0
|   |-ForStmt 0x219a5801f78 <line:212:5, line:222:5>
|   | |-BinaryOperator 0x219a5809578 <line:212:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x219a5809520 <col:10> 'int' lvalue Var 0x219a5805be8 'i' 'int'
|   | | `-ImplicitCastExpr 0x219a5809560 <col:14> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x219a5809540 <col:14> 'int' lvalue Var 0x219a5806410 'mdlen' 'int'
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x219a5809608 <col:21, col:25> 'int' '<'
|   | | |-ImplicitCastExpr 0x219a58095d8 <col:21> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x219a5809598 <col:21> 'int' lvalue Var 0x219a5805be8 'i' 'int'
|   | | `-ImplicitCastExpr 0x219a58095f0 <col:25> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x219a58095b8 <col:25> 'int' lvalue Var 0x219a5805c68 'dblen' 'int'
|   | |-UnaryOperator 0x219a58015e0 <col:32, col:33> 'int' postfix '++'
|   | | `-DeclRefExpr 0x219a58015c0 <col:32> 'int' lvalue Var 0x219a5805be8 'i' 'int'
|   | `-CompoundStmt 0x219a5801f40 <col:37, line:222:5>
|   |   |-DeclStmt 0x219a58018d0 <line:216:9, col:58>
|   |   | `-VarDecl 0x219a5801610 <col:9, col:57> col:22 used equals1 'unsigned int' cinit
|   |   |   `-ImplicitCastExpr 0x219a58018b8 <col:32, col:57> 'unsigned int' <IntegralCast>
|   |   |     `-CallExpr 0x219a5801858 <col:32, col:57> 'int'
|   |   |       |-ImplicitCastExpr 0x219a5801840 <col:32> 'int (*)()' <FunctionToPointerDecay>
|   |   |       | `-DeclRefExpr 0x219a5801768 <col:32> 'int ()' Function 0x219a58016a0 'constant_time_eq' 'int ()'
|   |   |       |-ImplicitCastExpr 0x219a58018a0 <col:49, col:53> 'int' <IntegralCast>
|   |   |       | `-ImplicitCastExpr 0x219a5801888 <col:49, col:53> 'unsigned char' <LValueToRValue>
|   |   |       |   `-ArraySubscriptExpr 0x219a58017f8 <col:49, col:53> 'unsigned char' lvalue
|   |   |       |     |-ImplicitCastExpr 0x219a58017c8 <col:49> 'unsigned char *' <LValueToRValue>
|   |   |       |     | `-DeclRefExpr 0x219a5801788 <col:49> 'unsigned char *' lvalue Var 0x219a58061a0 'db' 'unsigned char *'
|   |   |       |     `-ImplicitCastExpr 0x219a58017e0 <col:52> 'int' <LValueToRValue>
|   |   |       |       `-DeclRefExpr 0x219a58017a8 <col:52> 'int' lvalue Var 0x219a5805be8 'i' 'int'
|   |   |       `-IntegerLiteral 0x219a5801818 <col:56> 'int' 1
|   |   |-DeclStmt 0x219a5801aa0 <line:217:9, col:60>
|   |   | `-VarDecl 0x219a5801900 <col:9, col:59> col:22 used equals0 'unsigned int' cinit
|   |   |   `-ImplicitCastExpr 0x219a5801a88 <col:32, col:59> 'unsigned int' <IntegralCast>
|   |   |     `-CallExpr 0x219a5801a30 <col:32, col:59> 'int'
|   |   |       |-ImplicitCastExpr 0x219a5801a18 <col:32> 'int (*)()' <FunctionToPointerDecay>
|   |   |       | `-DeclRefExpr 0x219a5801968 <col:32> 'int ()' Function 0x219a5808630 'constant_time_is_zero' 'int ()'
|   |   |       `-ImplicitCastExpr 0x219a5801a70 <col:54, col:58> 'int' <IntegralCast>
|   |   |         `-ImplicitCastExpr 0x219a5801a58 <col:54, col:58> 'unsigned char' <LValueToRValue>
|   |   |           `-ArraySubscriptExpr 0x219a58019f8 <col:54, col:58> 'unsigned char' lvalue
|   |   |             |-ImplicitCastExpr 0x219a58019c8 <col:54> 'unsigned char *' <LValueToRValue>
|   |   |             | `-DeclRefExpr 0x219a5801988 <col:54> 'unsigned char *' lvalue Var 0x219a58061a0 'db' 'unsigned char *'
|   |   |             `-ImplicitCastExpr 0x219a58019e0 <col:57> 'int' <LValueToRValue>
|   |   |               `-DeclRefExpr 0x219a58019a8 <col:57> 'int' lvalue Var 0x219a5805be8 'i' 'int'
|   |   |-BinaryOperator 0x219a5801d80 <line:218:9, line:219:58> 'int' '='
|   |   | |-DeclRefExpr 0x219a5801ab8 <line:218:9> 'int' lvalue Var 0x219a5805dd0 'one_index' 'int'
|   |   | `-CallExpr 0x219a5801d18 <col:21, line:219:58> 'int'
|   |   |   |-ImplicitCastExpr 0x219a5801d00 <line:218:21> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x219a5801be0 <col:21> 'int ()' Function 0x219a5801b18 'constant_time_select_int' 'int ()'
|   |   |   |-BinaryOperator 0x219a5801ca0 <col:46, col:64> 'unsigned int' '&'
|   |   |   | |-UnaryOperator 0x219a5801c38 <col:46, col:47> 'unsigned int' prefix '~' cannot overflow
|   |   |   | | `-ImplicitCastExpr 0x219a5801c20 <col:47> 'unsigned int' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x219a5801c00 <col:47> 'unsigned int' lvalue Var 0x219a5805fc0 'found_one_byte' 'unsigned int'
|   |   |   | `-ImplicitCastExpr 0x219a5801c88 <col:64> 'unsigned int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x219a5801c50 <col:64> 'unsigned int' lvalue Var 0x219a5801610 'equals1' 'unsigned int'
|   |   |   |-ImplicitCastExpr 0x219a5801d50 <line:219:46> 'int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x219a5801cc0 <col:46> 'int' lvalue Var 0x219a5805be8 'i' 'int'
|   |   |   `-ImplicitCastExpr 0x219a5801d68 <col:49> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x219a5801ce0 <col:49> 'int' lvalue Var 0x219a5805dd0 'one_index' 'int'
|   |   |-CompoundAssignOperator 0x219a5801df8 <line:220:9, col:27> 'unsigned int' '|=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |   | |-DeclRefExpr 0x219a5801da0 <col:9> 'unsigned int' lvalue Var 0x219a5805fc0 'found_one_byte' 'unsigned int'
|   |   | `-ImplicitCastExpr 0x219a5801de0 <col:27> 'unsigned int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x219a5801dc0 <col:27> 'unsigned int' lvalue Var 0x219a5801610 'equals1' 'unsigned int'
|   |   `-CompoundAssignOperator 0x219a5801f10 <line:221:9, col:42> 'unsigned int' '&=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |     |-DeclRefExpr 0x219a5801e28 <col:9> 'unsigned int' lvalue Var 0x219a5805f40 'good' 'unsigned int'
|   |     `-ParenExpr 0x219a5801ef0 <col:17, col:42> 'unsigned int'
|   |       `-BinaryOperator 0x219a5801ed0 <col:18, col:35> 'unsigned int' '|'
|   |         |-ImplicitCastExpr 0x219a5801ea0 <col:18> 'unsigned int' <LValueToRValue>
|   |         | `-DeclRefExpr 0x219a5801e48 <col:18> 'unsigned int' lvalue Var 0x219a5805fc0 'found_one_byte' 'unsigned int'
|   |         `-ImplicitCastExpr 0x219a5801eb8 <col:35> 'unsigned int' <LValueToRValue>
|   |           `-DeclRefExpr 0x219a5801e68 <col:35> 'unsigned int' lvalue Var 0x219a5801900 'equals0' 'unsigned int'
|   |-CompoundAssignOperator 0x219a5802008 <line:224:5, col:13> 'unsigned int' '&=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   | |-DeclRefExpr 0x219a5801fb0 <col:5> 'unsigned int' lvalue Var 0x219a5805f40 'good' 'unsigned int'
|   | `-ImplicitCastExpr 0x219a5801ff0 <col:13> 'unsigned int' <LValueToRValue>
|   |   `-DeclRefExpr 0x219a5801fd0 <col:13> 'unsigned int' lvalue Var 0x219a5805fc0 'found_one_byte' 'unsigned int'
|   |-IfStmt 0x219a58020a0 <line:231:5, line:232:14>
|   | |-UnaryOperator 0x219a5802070 <line:231:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x219a5802058 <col:10> 'unsigned int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x219a5802038 <col:10> 'unsigned int' lvalue Var 0x219a5805f40 'good' 'unsigned int'
|   | `-GotoStmt 0x219a5802088 <line:232:9, col:14> 'decoding_err' 0x219a58029c8
|   |-BinaryOperator 0x219a5802170 <line:234:5, col:29> 'int' '='
|   | |-DeclRefExpr 0x219a58020b8 <col:5> 'int' lvalue Var 0x219a5805e78 'msg_index' 'int'
|   | `-BinaryOperator 0x219a5802150 <col:17, col:29> 'int' '+'
|   |   |-ImplicitCastExpr 0x219a5802138 <col:17> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x219a58020f0 <col:17> 'int' lvalue Var 0x219a5805dd0 'one_index' 'int'
|   |   `-IntegerLiteral 0x219a5802110 <col:29> 'int' 1
|   |-BinaryOperator 0x219a5802258 <line:235:5, col:20> 'int' '='
|   | |-DeclRefExpr 0x219a5802190 <col:5> 'int' lvalue Var 0x219a5805d10 'mlen' 'int'
|   | `-BinaryOperator 0x219a5802238 <col:12, col:20> 'int' '-'
|   |   |-ImplicitCastExpr 0x219a5802208 <col:12> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x219a58021c8 <col:12> 'int' lvalue Var 0x219a5805c68 'dblen' 'int'
|   |   `-ImplicitCastExpr 0x219a5802220 <col:20> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x219a58021e8 <col:20> 'int' lvalue Var 0x219a5805e78 'msg_index' 'int'
|   |-IfStmt 0x219a5809678 <line:237:5, line:243:5> has_else
|   | |-BinaryOperator 0x219a58022e8 <line:237:9, col:16> 'int' '<'
|   | | |-ImplicitCastExpr 0x219a58022b8 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x219a5802278 <col:9> 'int' lvalue ParmVar 0x219a5805600 'tlen' 'int'
|   | | `-ImplicitCastExpr 0x219a58022d0 <col:16> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x219a5802298 <col:16> 'int' lvalue Var 0x219a5805d10 'mlen' 'int'
|   | |-CompoundStmt 0x219a58023a8 <col:22, line:240:5>
|   | | `-BinaryOperator 0x219a5802388 <line:239:9, col:17> 'int' '='
|   | |   |-DeclRefExpr 0x219a5802328 <col:9> 'int' lvalue Var 0x219a5805d10 'mlen' 'int'
|   | |   `-UnaryOperator 0x219a5802370 <col:16, col:17> 'int' prefix '-'
|   | |     `-IntegerLiteral 0x219a5802348 <col:17> 'int' 1
|   | `-CompoundStmt 0x219a5809658 <line:240:12, line:243:5>
|   |   |-CallExpr 0x219a5802510 <line:241:9, col:40> 'void *'
|   |   | |-ImplicitCastExpr 0x219a58024f8 <col:9> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x219a58023c0 <col:9> 'void *(void *, const void *, unsigned long long)' Function 0x219a5801290 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   |   | |-ImplicitCastExpr 0x219a5802560 <col:16> 'void *' <BitCast>
|   |   | | `-ImplicitCastExpr 0x219a5802548 <col:16> 'unsigned char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x219a58023e0 <col:16> 'unsigned char *' lvalue ParmVar 0x219a5807548 'to' 'unsigned char *'
|   |   | |-ImplicitCastExpr 0x219a5802578 <col:20, col:25> 'const void *' <BitCast>
|   |   | | `-BinaryOperator 0x219a5802488 <col:20, col:25> 'unsigned char *' '+'
|   |   | |   |-ImplicitCastExpr 0x219a5802458 <col:20> 'unsigned char *' <LValueToRValue>
|   |   | |   | `-DeclRefExpr 0x219a5802418 <col:20> 'unsigned char *' lvalue Var 0x219a58061a0 'db' 'unsigned char *'
|   |   | |   `-ImplicitCastExpr 0x219a5802470 <col:25> 'int' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x219a5802438 <col:25> 'int' lvalue Var 0x219a5805e78 'msg_index' 'int'
|   |   | `-ImplicitCastExpr 0x219a58025a8 <col:36> 'unsigned long long' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x219a5802590 <col:36> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x219a58024a8 <col:36> 'int' lvalue Var 0x219a5805d10 'mlen' 'int'
|   |   `-GotoStmt 0x219a5809640 <line:242:9, col:14> 'cleanup' 0x219a5802d98
|   |-LabelStmt 0x219a58096c8 <line:245:2, col:14> 'decoding_err'
|   | `-NullStmt 0x219a58096c0 <col:14>
|   |-LabelStmt 0x219a5809708 <line:252:2, col:9> 'cleanup'
|   | `-NullStmt 0x219a5809700 <col:9>
|   |-CallExpr 0x219a5809798 <line:254:5, col:33> 'int'
|   | |-ImplicitCastExpr 0x219a5809780 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x219a5809720 <col:5> 'int ()' Function 0x219a5806840 'OPENSSL_clear_free' 'int ()'
|   | |-ImplicitCastExpr 0x219a58097c8 <col:24> 'unsigned char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x219a5809740 <col:24> 'unsigned char *' lvalue Var 0x219a58061a0 'db' 'unsigned char *'
|   | `-ImplicitCastExpr 0x219a58097e0 <col:28> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x219a5809760 <col:28> 'int' lvalue Var 0x219a5805c68 'dblen' 'int'
|   |-CallExpr 0x219a5809870 <line:255:5, col:31> 'int'
|   | |-ImplicitCastExpr 0x219a5809858 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x219a58097f8 <col:5> 'int ()' Function 0x219a5806840 'OPENSSL_clear_free' 'int ()'
|   | |-ImplicitCastExpr 0x219a58098a0 <col:24> 'unsigned char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x219a5809818 <col:24> 'unsigned char *' lvalue Var 0x219a58062c0 'em' 'unsigned char *'
|   | `-ImplicitCastExpr 0x219a58098b8 <col:28> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x219a5809838 <col:28> 'int' lvalue ParmVar 0x219a5805780 'num' 'int'
|   `-ReturnStmt 0x219a5809908 <line:256:5, col:12>
|     `-ImplicitCastExpr 0x219a58098f0 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x219a58098d0 <col:12> 'int' lvalue Var 0x219a5805d10 'mlen' 'int'
`-FunctionDecl 0x219a5809d40 <line:259:1, line:299:1> line:259:5 invalid PKCS1_MGF1 'int (unsigned char *, long, const unsigned char *, long, const int *)'
  |-ParmVarDecl 0x219a5809a30 <col:16, col:31> col:31 used mask 'unsigned char *'
  |-ParmVarDecl 0x219a5809ab0 <col:37, col:42> col:42 used len 'long'
  |-ParmVarDecl 0x219a5809b30 <line:260:16, col:37> col:37 used seed 'const unsigned char *'
  |-ParmVarDecl 0x219a5809bb0 <col:43, col:48> col:48 used seedlen 'long'
  |-ParmVarDecl 0x219a5809c30 <col:57, col:71> col:71 invalid dgst 'const int *'
  `-CompoundStmt 0x219a5803d60 <line:261:1, line:299:1>
    |-DeclStmt 0x219a5809f78 <line:262:5, col:23>
    | |-VarDecl 0x219a5809e38 <col:5, col:10> col:10 used i 'long'
    | `-VarDecl 0x219a5809eb8 <col:5, col:22> col:13 used outlen 'long' cinit
    |   `-ImplicitCastExpr 0x219a5809f48 <col:22> 'long' <IntegralCast>
    |     `-IntegerLiteral 0x219a5809f20 <col:22> 'int' 0
    |-DeclStmt 0x219a580a098 <line:263:5, col:25>
    | `-VarDecl 0x219a580a030 <col:5, col:24> col:19 used cnt 'unsigned char [4]'
    |-DeclStmt 0x219a580a278 <line:265:5, col:38>
    | `-VarDecl 0x219a580a210 <col:5, col:19> col:19 invalid md 'unsigned char'
    |-DeclStmt 0x219a580a310 <line:266:5, col:14>
    | `-VarDecl 0x219a580a2a8 <col:5, col:9> col:9 used mdlen 'int'
    |-DeclStmt 0x219a580a3e8 <line:267:5, col:16>
    | `-VarDecl 0x219a580a340 <col:5, col:15> col:9 used rv 'int' cinit
    |   `-UnaryOperator 0x219a580a3d0 <col:14, col:15> 'int' prefix '-'
    |     `-IntegerLiteral 0x219a580a3a8 <col:15> 'int' 1
    |-IfStmt 0x219a580a508 <line:269:5, line:270:14>
    | |-OpaqueValueExpr 0x219a580a4f0 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x219a580a4d8 <col:9, col:14> 'err' 0x219a580a488
    |-IfStmt 0x219a580a610 <line:272:5, line:273:14>
    | |-BinaryOperator 0x219a580a5d8 <line:272:9, col:17> 'int' '<'
    | | |-ImplicitCastExpr 0x219a580a5c0 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x219a580a578 <col:9> 'int' lvalue Var 0x219a580a2a8 'mdlen' 'int'
    | | `-IntegerLiteral 0x219a580a598 <col:17> 'int' 0
    | `-GotoStmt 0x219a580a5f8 <line:273:9, col:14> 'err' 0x219a580a488
    |-ForStmt 0x219a5803b10 <line:274:5, line:293:5>
    | |-BinaryOperator 0x219a580a6c8 <line:274:10, col:14> 'long' '='
    | | |-DeclRefExpr 0x219a580a650 <col:10> 'long' lvalue Var 0x219a5809e38 'i' 'long'
    | | `-ImplicitCastExpr 0x219a580a6b0 <col:14> 'long' <IntegralCast>
    | |   `-IntegerLiteral 0x219a580a688 <col:14> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x219a580a788 <col:17, col:26> 'int' '<'
    | | |-ImplicitCastExpr 0x219a580a758 <col:17> 'long' <LValueToRValue>
    | | | `-DeclRefExpr 0x219a580a6e8 <col:17> 'long' lvalue Var 0x219a5809eb8 'outlen' 'long'
    | | `-ImplicitCastExpr 0x219a580a770 <col:26> 'long' <LValueToRValue>
    | |   `-DeclRefExpr 0x219a580a720 <col:26> 'long' lvalue ParmVar 0x219a5809ab0 'len' 'long'
    | |-UnaryOperator 0x219a580a7c8 <col:31, col:32> 'long' postfix '++'
    | | `-DeclRefExpr 0x219a580a7a8 <col:31> 'long' lvalue Var 0x219a5809e38 'i' 'long'
    | `-CompoundStmt 0x219a5803ad0 <col:36, line:293:5>
    |   |-BinaryOperator 0x219a580a9f8 <line:275:9, col:49> 'unsigned char' '='
    |   | |-ArraySubscriptExpr 0x219a580a858 <col:9, col:14> 'unsigned char' lvalue
    |   | | |-ImplicitCastExpr 0x219a580a840 <col:9> 'unsigned char *' <ArrayToPointerDecay>
    |   | | | `-DeclRefExpr 0x219a580a7e0 <col:9> 'unsigned char [4]' lvalue Var 0x219a580a030 'cnt' 'unsigned char [4]'
    |   | | `-IntegerLiteral 0x219a580a818 <col:13> 'int' 0
    |   | `-CStyleCastExpr 0x219a580a9d0 <col:18, col:49> 'unsigned char' <IntegralCast>
    |   |   `-ParenExpr 0x219a580a9b0 <col:33, col:49> 'long'
    |   |     `-BinaryOperator 0x219a580a958 <col:34, col:46> 'long' '&'
    |   |       |-ParenExpr 0x219a580a8f8 <col:34, col:42> 'long'
    |   |       | `-BinaryOperator 0x219a580a8d8 <col:35, col:40> 'long' '>>'
    |   |       |   |-ImplicitCastExpr 0x219a580a8c0 <col:35> 'long' <LValueToRValue>
    |   |       |   | `-DeclRefExpr 0x219a580a878 <col:35> 'long' lvalue Var 0x219a5809e38 'i' 'long'
    |   |       |   `-IntegerLiteral 0x219a580a898 <col:40> 'int' 24
    |   |       `-ImplicitCastExpr 0x219a580a940 <col:46> 'long' <IntegralCast>
    |   |         `-IntegerLiteral 0x219a580a918 <col:46> 'int' 255
    |   |-BinaryOperator 0x219a580ac18 <line:276:9, col:49> 'unsigned char' '='
    |   | |-ArraySubscriptExpr 0x219a580aa78 <col:9, col:14> 'unsigned char' lvalue
    |   | | |-ImplicitCastExpr 0x219a580aa60 <col:9> 'unsigned char *' <ArrayToPointerDecay>
    |   | | | `-DeclRefExpr 0x219a580aa18 <col:9> 'unsigned char [4]' lvalue Var 0x219a580a030 'cnt' 'unsigned char [4]'
    |   | | `-IntegerLiteral 0x219a580aa38 <col:13> 'int' 1
    |   | `-CStyleCastExpr 0x219a580abf0 <col:18, col:49> 'unsigned char' <IntegralCast>
    |   |   `-ParenExpr 0x219a580abd0 <col:33, col:49> 'long'
    |   |     `-BinaryOperator 0x219a580ab78 <col:34, col:46> 'long' '&'
    |   |       |-ParenExpr 0x219a580ab18 <col:34, col:42> 'long'
    |   |       | `-BinaryOperator 0x219a580aaf8 <col:35, col:40> 'long' '>>'
    |   |       |   |-ImplicitCastExpr 0x219a580aae0 <col:35> 'long' <LValueToRValue>
    |   |       |   | `-DeclRefExpr 0x219a580aa98 <col:35> 'long' lvalue Var 0x219a5809e38 'i' 'long'
    |   |       |   `-IntegerLiteral 0x219a580aab8 <col:40> 'int' 16
    |   |       `-ImplicitCastExpr 0x219a580ab60 <col:46> 'long' <IntegralCast>
    |   |         `-IntegerLiteral 0x219a580ab38 <col:46> 'int' 255
    |   |-BinaryOperator 0x219a580ae50 <line:277:9, col:46> 'unsigned char' '='
    |   | |-ArraySubscriptExpr 0x219a580ac98 <col:9, col:14> 'unsigned char' lvalue
    |   | | |-ImplicitCastExpr 0x219a580ac80 <col:9> 'unsigned char *' <ArrayToPointerDecay>
    |   | | | `-DeclRefExpr 0x219a580ac38 <col:9> 'unsigned char [4]' lvalue Var 0x219a580a030 'cnt' 'unsigned char [4]'
    |   | | `-IntegerLiteral 0x219a580ac58 <col:13> 'int' 2
    |   | `-ImplicitCastExpr 0x219a580ae38 <col:18, col:46> 'unsigned char' <IntegralCast>
    |   |   `-BinaryOperator 0x219a580ae18 <col:18, col:46> 'int' '&'
    |   |     |-ImplicitCastExpr 0x219a580ae00 <col:18, col:42> 'int' <IntegralCast>
    |   |     | `-CStyleCastExpr 0x219a580adb0 <col:18, col:42> 'unsigned char' <IntegralCast>
    |   |     |   `-ParenExpr 0x219a580ad90 <col:33, col:42> 'long'
    |   |     |     `-ParenExpr 0x219a580ad38 <col:34, col:41> 'long'
    |   |     |       `-BinaryOperator 0x219a580ad18 <col:35, col:40> 'long' '>>'
    |   |     |         |-ImplicitCastExpr 0x219a580ad00 <col:35> 'long' <LValueToRValue>
    |   |     |         | `-DeclRefExpr 0x219a580acb8 <col:35> 'long' lvalue Var 0x219a5809e38 'i' 'long'
    |   |     |         `-IntegerLiteral 0x219a580acd8 <col:40> 'int' 8
    |   |     `-IntegerLiteral 0x219a580add8 <col:46> 'int' 255
    |   |-BinaryOperator 0x219a580b008 <line:278:9, col:41> 'unsigned char' '='
    |   | |-ArraySubscriptExpr 0x219a580aed0 <col:9, col:14> 'unsigned char' lvalue
    |   | | |-ImplicitCastExpr 0x219a580aeb8 <col:9> 'unsigned char *' <ArrayToPointerDecay>
    |   | | | `-DeclRefExpr 0x219a580ae70 <col:9> 'unsigned char [4]' lvalue Var 0x219a580a030 'cnt' 'unsigned char [4]'
    |   | | `-IntegerLiteral 0x219a580ae90 <col:13> 'int' 3
    |   | `-CStyleCastExpr 0x219a580afe0 <col:18, col:41> 'unsigned char' <IntegralCast>
    |   |   `-ParenExpr 0x219a580afc0 <col:33, col:41> 'long'
    |   |     `-BinaryOperator 0x219a580af68 <col:34, col:38> 'long' '&'
    |   |       |-ImplicitCastExpr 0x219a580af38 <col:34> 'long' <LValueToRValue>
    |   |       | `-DeclRefExpr 0x219a580aef0 <col:34> 'long' lvalue Var 0x219a5809e38 'i' 'long'
    |   |       `-ImplicitCastExpr 0x219a580af50 <col:38> 'long' <IntegralCast>
    |   |         `-IntegerLiteral 0x219a580af10 <col:38> 'int' 255
    |   |-IfStmt 0x219a580b3d8 <line:279:9, line:282:18>
    |   | |-OpaqueValueExpr 0x219a580b3c0 <<invalid sloc>> '_Bool'
    |   | `-GotoStmt 0x219a580b3a8 <col:13, col:18> 'err' 0x219a580a488
    |   `-IfStmt 0x219a5803aa8 <line:283:9, line:292:9> has_else
    |     |-BinaryOperator 0x219a580b4d0 <line:283:13, col:31> 'int' '<='
    |     | |-BinaryOperator 0x219a580b478 <col:13, col:22> 'long' '+'
    |     | | |-ImplicitCastExpr 0x219a580b430 <col:13> 'long' <LValueToRValue>
    |     | | | `-DeclRefExpr 0x219a580b3f0 <col:13> 'long' lvalue Var 0x219a5809eb8 'outlen' 'long'
    |     | | `-ImplicitCastExpr 0x219a580b460 <col:22> 'long' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x219a580b448 <col:22> 'int' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x219a580b410 <col:22> 'int' lvalue Var 0x219a580a2a8 'mdlen' 'int'
    |     | `-ImplicitCastExpr 0x219a580b4b8 <col:31> 'long' <LValueToRValue>
    |     |   `-DeclRefExpr 0x219a580b498 <col:31> 'long' lvalue ParmVar 0x219a5809ab0 'len' 'long'
    |     |-CompoundStmt 0x219a58037c0 <col:36, line:287:9>
    |     | |-IfStmt 0x219a5803708 <line:284:13, line:285:22>
    |     | | |-OpaqueValueExpr 0x219a58036f0 <<invalid sloc>> '_Bool'
    |     | | `-GotoStmt 0x219a58036d8 <col:17, col:22> 'err' 0x219a580a488
    |     | `-CompoundAssignOperator 0x219a5803790 <line:286:13, col:23> 'long' '+=' ComputeLHSTy='long' ComputeResultTy='long'
    |     |   |-DeclRefExpr 0x219a5803720 <col:13> 'long' lvalue Var 0x219a5809eb8 'outlen' 'long'
    |     |   `-ImplicitCastExpr 0x219a5803778 <col:23> 'long' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x219a5803760 <col:23> 'int' <LValueToRValue>
    |     |       `-DeclRefExpr 0x219a5803740 <col:23> 'int' lvalue Var 0x219a580a2a8 'mdlen' 'int'
    |     `-CompoundStmt 0x219a5803a88 <line:287:16, line:292:9>
    |       |-IfStmt 0x219a58038b8 <line:288:13, line:289:22>
    |       | |-OpaqueValueExpr 0x219a58038a0 <<invalid sloc>> '_Bool'
    |       | `-GotoStmt 0x219a5803888 <col:17, col:22> 'err' 0x219a580a488
    |       `-BinaryOperator 0x219a5803a68 <line:291:13, col:22> 'long' '='
    |         |-DeclRefExpr 0x219a5803a10 <col:13> 'long' lvalue Var 0x219a5809eb8 'outlen' 'long'
    |         `-ImplicitCastExpr 0x219a5803a50 <col:22> 'long' <LValueToRValue>
    |           `-DeclRefExpr 0x219a5803a30 <col:22> 'long' lvalue ParmVar 0x219a5809ab0 'len' 'long'
    |-BinaryOperator 0x219a5803ba8 <line:294:5, col:10> 'int' '='
    | |-DeclRefExpr 0x219a5803b48 <col:5> 'int' lvalue Var 0x219a580a340 'rv' 'int'
    | `-IntegerLiteral 0x219a5803b80 <col:10> 'int' 0
    |-LabelStmt 0x219a5803bf0 <line:295:2, col:5> 'err'
    | `-NullStmt 0x219a5803be8 <col:5>
    `-ReturnStmt 0x219a5803d50 <line:298:5, col:12>
      `-ImplicitCastExpr 0x219a5803d38 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x219a5803d18 <col:12> 'int' lvalue Var 0x219a580a340 'rv' 'int'
