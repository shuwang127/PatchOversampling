TranslationUnitDecl 0x2009206e528 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x2009206edc0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x2009206eac0 '__int128'
|-TypedefDecl 0x2009206ee30 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x2009206eae0 'unsigned __int128'
|-TypedefDecl 0x2009206f168 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x2009206ef20 'struct __NSConstantString_tag'
|   `-Record 0x2009206ee88 '__NSConstantString_tag'
|-TypedefDecl 0x2009206f1d8 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x2009206e700 'unsigned long long'
|-TypedefDecl 0x2009206f270 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x2009206f230 'char *'
|   `-BuiltinType 0x2009206e5c0 'char'
|-TypedefDecl 0x2009206f2e0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x2009206f230 'char *'
|   `-BuiltinType 0x2009206e5c0 'char'
|-TypedefDecl 0x2009206f3a0 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x2009206e700 'unsigned long long'
|-TypedefDecl 0x2009206f410 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x2009206f230 'char *'
|   `-BuiltinType 0x2009206e5c0 'char'
|-FunctionDecl 0x20093b183e0 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x20093b18480 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x20093b184f0 <col:21> Implicit
|-FunctionDecl 0x20093b18548 prev 0x20093b183e0 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x20093b18270 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x20093b18638 <col:21> Inherited Implicit
|-TypedefDecl 0x20093b18678 prev 0x2009206f1d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x2009206e700 'unsigned long long'
|-TypedefDecl 0x20093b18720 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x20093b186f0 'size_t' sugar
|   |-Typedef 0x20093b18678 'size_t'
|   `-BuiltinType 0x2009206e700 'unsigned long long'
|-TypedefDecl 0x20093b18790 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x2009206e660 'long long'
|-TypedefDecl 0x20093b18800 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x2009206e660 'long long'
|-TypedefDecl 0x20093b18870 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x2009206e6a0 'unsigned short'
|-TypedefDecl 0x20093b188e0 <line:541:1, col:24> col:24 referenced wint_t 'unsigned short'
| `-BuiltinType 0x2009206e6a0 'unsigned short'
|-TypedefDecl 0x20093b18950 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x2009206e6a0 'unsigned short'
|-TypedefDecl 0x20093b189c0 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x2009206e620 'int'
|-TypedefDecl 0x20093b18a30 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x2009206e640 'long'
|-TypedefDecl 0x20093b18aa0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x2009206e660 'long long'
|-TypedefDecl 0x20093b18b30 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x20093b18b00 '__time64_t' sugar
|   |-Typedef 0x20093b18aa0 '__time64_t'
|   `-BuiltinType 0x2009206e660 'long long'
|-FunctionDecl 0x20093b18ca8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x20093b18ec8 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x20093b50110 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x20093b19008 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x20093b19080 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x20093b190f8 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x20093b19178 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x20093b4feb0 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x20093b501f0 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x20093b502b0 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x20093b50420 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x20093b503d0 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x20093b50370 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x20093b50290 'struct threadlocaleinfostruct'
|       `-Record 0x20093b5af60 'threadlocaleinfostruct'
|-TypedefDecl 0x20093b50530 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x20093b504e0 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x20093b50480 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x20093b50350 'struct threadmbcinfostruct'
|       `-Record 0x20093b502b0 'threadmbcinfostruct'
|-RecordDecl 0x20093b50588 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x20093b50640 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x20093b50700 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x20093b50790 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x20093b50820 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x20093b508d8 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x20093b50880 'struct localeinfo_struct' sugar
|   `-RecordType 0x20093b506e0 'struct localeinfo_struct'
|     `-Record 0x20093b50640 'localeinfo_struct'
|-TypedefDecl 0x20093b509b0 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x20093b50960 'struct localeinfo_struct *'
|   `-ElaboratedType 0x20093b50880 'struct localeinfo_struct' sugar
|     `-RecordType 0x20093b506e0 'struct localeinfo_struct'
|       `-Record 0x20093b50640 'localeinfo_struct'
|-RecordDecl 0x20093b50a28 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x20093b50ae0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x20093b50b58 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x20093b50c18 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x20093b50cb0 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x20093b50d20 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x20093b50dd8 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x20093b50d80 'struct localerefcount' sugar
|   `-RecordType 0x20093b50ac0 'struct localerefcount'
|     `-Record 0x20093b50a28 'localerefcount'
|-RecordDecl 0x20093b5af60 prev 0x20093b501f0 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x20093b5afe0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x20093b5b058 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x20093b5b0c8 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x20093b5b138 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x20093b5b1a8 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x20093b5b368 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x20093b5b3d8 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x20093b5b448 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x20093b5b4b8 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x20093b5b528 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x20093b5b598 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x20093b5b5f0 parent 0x2009206e528 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x20093b5b780 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x20093b5b7f0 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x20093b5b860 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x20093b5b8d0 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x20093b5b970 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x20093b5b9e0 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x20093b5baf0 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x20093b5bc28 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x20093b5bcd8 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x20093b5bc80 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x20093b50290 'struct threadlocaleinfostruct'
|     `-Record 0x20093b5af60 'threadlocaleinfostruct'
|-RecordDecl 0x20093b5bd70 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:63:1, line:72:9> line:63:8 struct _iobuf definition
| |-MaxFieldAlignmentAttr 0x20093b5be30 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x20093b5bea8 <line:64:9, col:15> col:15 _ptr 'char *'
| |-FieldDecl 0x20093b62fe0 <line:65:9, col:15> col:15 _cnt 'int'
| |-FieldDecl 0x20093b63050 <line:66:9, col:15> col:15 _base 'char *'
| |-FieldDecl 0x20093b630c0 <line:67:9, col:15> col:15 _flag 'int'
| |-FieldDecl 0x20093b63130 <line:68:9, col:15> col:15 _file 'int'
| |-FieldDecl 0x20093b631a0 <line:69:9, col:15> col:15 _charbuf 'int'
| |-FieldDecl 0x20093b63210 <line:70:9, col:15> col:15 _bufsiz 'int'
| `-FieldDecl 0x20093b63280 <line:71:9, col:15> col:15 _tmpfname 'char *'
|-TypedefDecl 0x20093b63330 <line:73:1, col:23> col:23 referenced FILE 'struct _iobuf':'struct _iobuf'
| `-ElaboratedType 0x20093b632e0 'struct _iobuf' sugar
|   `-RecordType 0x20093b5be10 'struct _iobuf'
|     `-Record 0x20093b5bd70 '_iobuf'
|-FunctionDecl 0x20093b63568 <line:137:9, col:39> col:24 __iob_func 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|-TypedefDecl 0x20093b63638 <line:144:1, col:17> col:17 referenced fpos_t 'long long'
| `-BuiltinType 0x2009206e660 'long long'
|-FunctionDecl 0x20093b63818 <line:175:24, col:65> col:36 _filbuf 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x20093b636a0 <col:52, col:59> col:59 _File 'FILE *'
|-FunctionDecl 0x20093b63b10 <line:176:28, col:82> col:40 _flsbuf 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x20093b638f0 <col:53, col:57> col:57 _Ch 'int'
| `-ParmVarDecl 0x20093b63968 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x20093b63ec0 <line:178:24, col:121> col:39 _fsopen 'FILE *(const char *, const char *, int) __attribute__((cdecl))':'FILE *(const char *, const char *, int)'
| |-ParmVarDecl 0x20093b63bf0 <col:54, col:67> col:67 _Filename 'const char *'
| |-ParmVarDecl 0x20093b63c70 <col:85, col:98> col:98 _Mode 'const char *'
| `-ParmVarDecl 0x20093b63cf0 <col:110, col:114> col:114 _ShFlag 'int'
|-FunctionDecl 0x20093b5e100 <line:180:9, col:51> col:22 clearerr 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x20093b5df90 <col:39, col:46> col:46 _File 'FILE *'
|-FunctionDecl 0x20093b5e330 <line:182:28, col:76> col:44 clearerr_s 'errno_t (FILE *) __attribute__((cdecl))':'errno_t (FILE *)'
| `-ParmVarDecl 0x20093b5e1f0 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x20093b5e4e0 <line:184:28, col:67> col:40 fclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x20093b5e400 <col:55, col:62> col:62 _File 'FILE *'
|-FunctionDecl 0x20093b5e6d0 <line:185:28, col:55> col:40 _fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x20093b5e9c8 <line:187:24, col:94> col:39 _fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x20093b5e7a0 <col:52, col:56> col:56 _FileHandle 'int'
| `-ParmVarDecl 0x20093b5e820 <col:76, col:89> col:89 _Mode 'const char *'
|-FunctionDecl 0x20093b5eb80 <line:189:24, col:58> col:36 feof 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x20093b5eaa0 <col:46, col:53> col:53 _File 'FILE *'
|-FunctionDecl 0x20093b5ed30 <line:190:24, col:60> col:36 ferror 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x20093b5ec50 <col:48, col:55> col:55 _File 'FILE *'
|-FunctionDecl 0x20093b5eee0 <line:191:28, col:71> col:40 fflush 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x20093b5ee00 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x20093b66118 <line:192:28, col:66> col:40 fgetc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x20093b66038 <col:54, col:61> col:61 _File 'FILE *'
|-FunctionDecl 0x20093b662a8 <line:193:28, col:54> col:40 _fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x20093b66610 <line:194:28, col:90> col:40 fgetpos 'int (FILE *, fpos_t *) __attribute__((cdecl))':'int (FILE *, fpos_t *)'
| |-ParmVarDecl 0x20093b66370 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x20093b66468 <col:77, col:86> col:86 _Pos 'fpos_t *'
|-FunctionDecl 0x20093b669c8 <line:195:28, col:128> col:43 fgets 'char *(char *, int, FILE *) __attribute__((cdecl))':'char *(char *, int, FILE *)'
| |-ParmVarDecl 0x20093b666f0 <col:75, col:82> col:82 _Buf 'char *'
| |-ParmVarDecl 0x20093b66770 <col:93, col:97> col:97 _MaxCount 'int'
| `-ParmVarDecl 0x20093b667e8 <col:116, col:123> col:123 _File 'FILE *'
|-FunctionDecl 0x20093b66b88 <line:197:24, col:61> col:36 _fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x20093b66aa8 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x20093b66e50 <line:204:24, col:117> col:39 _tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x20093b66c60 <col:59, col:72> col:72 _DirName 'const char *'
| `-ParmVarDecl 0x20093b66ce0 <col:93, col:106> col:106 _FilePrefix 'const char *'
|-FunctionDecl 0x20093b5efa0 <line:210:28, col:54> col:40 _flushall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x20093b5f398 <line:211:72> col:72 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x20093b5f438 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x20093b5f4a0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x20093b5f518 prev 0x20093b5f398 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:211:134> col:72 fopen 'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x20093b5f170 <col:85, col:98> col:98 _Filename 'const char *'
| |-ParmVarDecl 0x20093b5f1f0 <col:116, col:129> col:129 _Mode 'const char *'
| `-DeprecatedAttr 0x20093b5f5c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20093b5fa40 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:213:28, col:149> col:44 fopen_s 'errno_t (FILE **, const char *, const char *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *)'
| |-ParmVarDecl 0x20093b5f770 <col:78, col:86> col:86 _File 'FILE **'
| |-ParmVarDecl 0x20093b5f7f0 <col:100, col:113> col:113 _Filename 'const char *'
| `-ParmVarDecl 0x20093b5f870 <col:131, col:144> col:144 _Mode 'const char *'
|-FunctionDecl 0x20093b5fd60 <line:215:40> col:40 implicit fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x20093b5fe00 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x20093b5fe68 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x20093b5fee0 <col:40> Implicit printf 2 3
|-FunctionDecl 0x20093b6e090 prev 0x20093b5fd60 <col:28, col:125> col:40 fprintf 'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x20093b5fb20 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x20093b5fba0 <col:100, col:113> col:113 _Format 'const char *'
| `-FormatAttr 0x20093b6e188 <col:40> Inherited printf 2 3
|-FunctionDecl 0x20093b6e350 <line:217:28, col:127> col:40 fprintf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x20093b6e1d0 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x20093b6e250 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x20093b6e5a8 <line:219:28, col:80> col:40 fputc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x20093b6e430 <col:51, col:55> col:55 _Ch 'int'
| `-ParmVarDecl 0x20093b6e4a8 <col:68, col:75> col:75 _File 'FILE *'
|-FunctionDecl 0x20093b6e7d8 <line:220:28, col:62> col:40 _fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x20093b6e688 <col:55, col:59> col:59 _Ch 'int'
|-FunctionDecl 0x20093b6ead0 <line:221:28, col:92> col:40 fputs 'int (const char *, FILE *) __attribute__((cdecl))':'int (const char *, FILE *)'
| |-ParmVarDecl 0x20093b6e8b0 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x20093b6e928 <col:80, col:87> col:87 _File 'FILE *'
|-FunctionDecl 0x20093b6ef68 <line:222:43> col:43 implicit fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x20093b6f008 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x20093b6c070 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x20093b6c0d8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x20093b6c140 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x20093b6c1c8 prev 0x20093b6ef68 <col:28, col:171> col:43 fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x20093b6ebb0 <col:89, col:96> col:96 _DstBuf 'void *'
| |-ParmVarDecl 0x20093b6ec28 <col:110, col:117> col:117 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20093b6eca0 <col:136, col:143> col:143 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20093b6ed18 <col:159, col:166> col:166 _File 'FILE *'
|-FunctionDecl 0x20093b6c6d0 <line:224:28, col:195> col:43 fread_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x20093b6c2b8 <col:91, col:98> col:98 _DstBuf 'void *'
| |-ParmVarDecl 0x20093b6c330 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20093b6c3a8 <col:134, col:141> col:141 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20093b6c420 <col:160, col:167> col:167 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20093b6c498 <col:183, col:190> col:190 _File 'FILE *'
|-FunctionDecl 0x20093b6cb90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:226:160> col:74 freopen 'FILE *(const char *, const char *, FILE *) __attribute__((cdecl))':'FILE *(const char *, const char *, FILE *)'
| |-ParmVarDecl 0x20093b6c8c0 <col:89, col:102> col:102 _Filename 'const char *'
| |-ParmVarDecl 0x20093b6c940 <col:120, col:133> col:133 _Mode 'const char *'
| |-ParmVarDecl 0x20093b6c9b8 <col:148, col:155> col:155 _File 'FILE *'
| `-DeprecatedAttr 0x20093b6cc48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using freopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20093b6d128 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:228:28, col:176> col:44 freopen_s 'errno_t (FILE **, const char *, const char *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *, FILE *)'
| |-ParmVarDecl 0x20093b6cd90 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x20093b6ce10 <col:102, col:115> col:115 _Filename 'const char *'
| |-ParmVarDecl 0x20093b6ce90 <col:133, col:146> col:146 _Mode 'const char *'
| `-ParmVarDecl 0x20093b6cf08 <col:161, col:168> col:168 _OldFile 'FILE *'
|-FunctionDecl 0x20093b6d4d0 <line:230:70> col:70 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x20093b6d570 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x20093b6d5d8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x20093b6d650 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x20093b6d6b8 prev 0x20093b6d4d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:230:153> col:70 fscanf 'int (FILE *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x20093b6d308 <col:85, col:92> col:92 _File 'FILE *'
| |-ParmVarDecl 0x20093b6d388 <col:128, col:141> col:141 _Format 'const char *'
| |-FormatAttr 0x20093b6d898 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x20093b6d768 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20093b6dcd8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:231:201> col:77 _fscanf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20093b6d9d8 <col:95, col:102> col:102 _File 'FILE *'
| |-ParmVarDecl 0x20093b6da58 <col:148, col:161> col:161 _Format 'const char *'
| |-ParmVarDecl 0x20093b6daf0 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x20093b6dd90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20093b69040 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:235:28, col:127> col:40 fscanf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x20093b6ded0 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x20093b6df50 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x20093b69330 <line:237:28, col:168> col:40 _fscanf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20093b69118 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x20093b69198 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x20093b69210 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20093b69690 <line:239:28, col:94> col:40 fsetpos 'int (FILE *, const fpos_t *) __attribute__((cdecl))':'int (FILE *, const fpos_t *)'
| |-ParmVarDecl 0x20093b69410 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x20093b694e8 <col:75, col:90> col:90 _Pos 'const fpos_t *'
|-FunctionDecl 0x20093b69a48 <line:240:28, col:103> col:40 fseek 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x20093b69768 <col:54, col:61> col:61 _File 'FILE *'
| |-ParmVarDecl 0x20093b697e8 <col:73, col:78> col:78 _Offset 'long'
| `-ParmVarDecl 0x20093b69868 <col:92, col:96> col:96 _Origin 'int'
|-FunctionDecl 0x20093b69ca8 <line:241:24, col:63> col:37 ftell 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x20093b69b28 <col:51, col:58> col:58 _File 'FILE *'
|-FunctionDecl 0x20093b67068 <line:243:28, col:110> col:40 _fseeki64 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x20093b69d78 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x20093b69df8 <col:77, col:85> col:85 _Offset 'long long'
| `-ParmVarDecl 0x20093b69e78 <col:99, col:103> col:103 _Origin 'int'
|-FunctionDecl 0x20093b672c8 <line:244:24, col:70> col:40 _ftelli64 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x20093b67148 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x20093b67788 <line:246:43> col:43 implicit fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x20093b67828 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x20093b67890 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x20093b678f8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x20093b67960 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x20093b679e8 prev 0x20093b67788 <col:28, col:159> col:43 fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x20093b673d0 <col:81, col:94> col:94 _Str 'const void *'
| |-ParmVarDecl 0x20093b67448 <col:105, col:112> col:112 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20093b674c0 <col:124, col:131> col:131 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20093b67538 <col:147, col:154> col:154 _File 'FILE *'
|-FunctionDecl 0x20093b67bb0 <line:247:24, col:61> col:36 getc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x20093b67ad0 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x20093b67d40 <line:248:24, col:48> col:36 getchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x20093b67ec8 <line:249:24, col:53> col:36 _getmaxstdio 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x20093b6a210 <line:251:9, col:84> col:24 gets_s 'char *(char *, rsize_t) __attribute__((cdecl))':'char *(char *, rsize_t)'
| |-ParmVarDecl 0x20093b67f98 <col:53, col:60> col:60 _Buf 'char *'
| `-ParmVarDecl 0x20093b6a060 <col:71, col:79> col:79 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x20093b6a538 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:254:80 gets 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x20093b6a3f0 <col:139, col:145> col:145 _Buffer 'char *'
| `-DeprecatedAttr 0x20093b6a5e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20093b6a800 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:255:16, col:54> col:28 _getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x20093b6a720 <col:42, col:49> col:49 _File 'FILE *'
|-FunctionDecl 0x20093b6aa20 <line:258:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x20093b6a8d8 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x20093b6abd0 <line:261:28, col:68> col:40 _pclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x20093b6aaf0 <col:56, col:63> col:63 _File 'FILE *'
|-FunctionDecl 0x20093b6ae20 <line:262:24, col:101> col:39 _popen 'FILE *(const char *, const char *) __attribute__((cdecl))':'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x20093b6aca8 <col:53, col:66> col:66 _Command 'const char *'
| `-ParmVarDecl 0x20093b6ad28 <col:83, col:96> col:96 _Mode 'const char *'
|-FunctionDecl 0x20093b6b060 <line:264:40> col:40 implicit printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x20093b6b100 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x20093b6b170 <col:40> Implicit printf 1 2
|-FunctionDecl 0x20093b6b1d8 prev 0x20093b6b060 <col:28, col:102> col:40 printf 'int (const char *, ...)'
| |-ParmVarDecl 0x20093b6af00 <col:77, col:90> col:90 _Format 'const char *'
| `-FormatAttr 0x20093b6b2c8 <col:40> Inherited printf 1 2
|-FunctionDecl 0x20093b6b3f8 <line:266:28, col:104> col:40 printf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x20093b6b318 <col:79, col:92> col:92 _Format 'const char *'
|-FunctionDecl 0x20093b6b648 <line:268:28, col:79> col:40 putc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x20093b6b4d0 <col:50, col:54> col:54 _Ch 'int'
| `-ParmVarDecl 0x20093b6b548 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x20093b6b808 <line:269:28, col:60> col:40 putchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x20093b6b728 <col:53, col:57> col:57 _Ch 'int'
|-FunctionDecl 0x20093b6ba28 <line:270:28, col:69> col:40 puts 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x20093b6b8e0 <col:52, col:65> col:65 _Str 'const char *'
|-FunctionDecl 0x20093b6bc78 <line:271:28, col:82> col:40 _putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x20093b6bb00 <col:51, col:55> col:55 _Word 'int'
| `-ParmVarDecl 0x20093b6bb78 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x20093b6be38 <line:274:9, col:57> col:21 remove 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x20093b6bd58 <col:35, col:48> col:48 _Filename 'const char *'
|-FunctionDecl 0x20093bbb030 <line:275:24, col:109> col:36 rename 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x20093b6bf10 <col:50, col:63> col:63 _OldFilename 'const char *'
| `-ParmVarDecl 0x20093b6bf90 <col:84, col:97> col:97 _NewFilename 'const char *'
|-FunctionDecl 0x20093bbb1f0 <line:276:9, col:58> col:21 _unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x20093bbb110 <col:36, col:49> col:49 _Filename 'const char *'
|-FunctionDecl 0x20093bbb480 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:278:89> col:53 unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x20093bbb3a0 <col:67, col:80> col:80 _Filename 'const char *'
| `-DeprecatedAttr 0x20093bbb528 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _unlink. See online help for details." ""
|-FunctionDecl 0x20093bbb720 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:281:9, col:49> col:22 rewind 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x20093bbb648 <col:37, col:44> col:44 _File 'FILE *'
|-FunctionDecl 0x20093bbb8b0 <line:282:28, col:51> col:40 _rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x20093bbbb58 <line:283:69> col:69 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x20093bbbbf8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x20093bbbc68 <col:69> Implicit scanf 1 2
|-FunctionDecl 0x20093bbbcd0 prev 0x20093bbbb58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:283:129> col:69 scanf 'int (const char *restrict, ...)'
| |-ParmVarDecl 0x20093bbba40 <col:104, col:117> col:117 _Format 'const char *'
| |-FormatAttr 0x20093bbbea8 <col:69> Inherited scanf 1 2
| `-DeprecatedAttr 0x20093bbbd78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20093bbd290 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:284:177> col:76 _scanf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20093bbd058 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x20093bbd0d0 <col:155, col:165> col:165 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x20093bbd340 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _scanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20093bbd568 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:288:40, col:116> col:52 scanf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x20093bbd488 <col:91, col:104> col:104 _Format 'const char *'
|-FunctionDecl 0x20093bbd7b8 <line:290:40, col:157> col:52 _scanf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20093bbd640 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x20093bbd6b8 <col:135, col:145> col:145 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20093bbdb78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:292:150> col:55 setbuf 'void (FILE *, char *) __attribute__((cdecl))':'void (FILE *, char *)'
| |-ParmVarDecl 0x20093bbd950 <col:70, col:77> col:77 _File 'FILE *'
| |-ParmVarDecl 0x20093bbd9d0 <col:136, col:143> col:143 _Buffer 'char *'
| `-DeprecatedAttr 0x20093bbdc28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using setvbuf instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20093bbde50 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:293:28, col:66> col:40 _setmaxstdio 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x20093bbdd70 <col:58, col:62> col:62 _Max 'int'
|-FunctionDecl 0x20093bc1108 <line:294:28, col:93> col:49 _set_output_format 'unsigned int (unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int)'
| `-ParmVarDecl 0x20093bc0fc0 <col:73, col:86> col:86 _Format 'unsigned int'
|-FunctionDecl 0x20093bc12f0 <line:295:28, col:72> col:49 _get_output_format 'unsigned int (void) __attribute__((cdecl))':'unsigned int (void)'
|-FunctionDecl 0x20093bc1740 <line:296:28, col:145> col:40 setvbuf 'int (FILE *, char *, int, size_t) __attribute__((cdecl))':'int (FILE *, char *, int, size_t)'
| |-ParmVarDecl 0x20093bc13b8 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x20093bc1438 <col:99, col:106> col:106 _Buf 'char *'
| |-ParmVarDecl 0x20093bc14b8 <col:117, col:121> col:121 _Mode 'int'
| `-ParmVarDecl 0x20093bc1530 <col:133, col:140> col:140 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x20093bc1bc0 <line:297:40, col:213> col:52 _snprintf_s 'int (char *, size_t, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, ...)'
| |-ParmVarDecl 0x20093bc1830 <col:93, col:100> col:100 _DstBuf 'char *'
| |-ParmVarDecl 0x20093bc18a8 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20093bc1920 <col:140, col:147> col:147 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20093bc19a0 <col:188, col:201> col:201 _Format 'const char *'
|-FunctionDecl 0x20093bbbf70 <line:300:40, col:188> col:52 sprintf_s 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x20093bc1cb0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x20093bc1d28 <col:112, col:119> col:119 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20093bc1da8 <col:163, col:176> col:176 _Format 'const char *'
|-FunctionDecl 0x20093bbc138 <line:303:24, col:101> col:36 _scprintf 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x20093bbc058 <col:76, col:89> col:89 _Format 'const char *'
|-FunctionDecl 0x20093bbc510 <line:304:70> col:70 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x20093bbc5b0 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x20093bbc618 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x20093bbc690 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x20093bbc6f8 prev 0x20093bbc510 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:304:157> col:70 sscanf 'int (const char *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x20093bbc2d0 <col:84, col:97> col:97 _Src 'const char *'
| |-ParmVarDecl 0x20093bbc350 <col:132, col:145> col:145 _Format 'const char *'
| |-FormatAttr 0x20093bbc8d8 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x20093bbc7a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20093bbccc8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:305:205> col:77 _sscanf_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20093bbc9e8 <col:94, col:107> col:107 _Src 'const char *'
| |-ParmVarDecl 0x20093bbca68 <col:152, col:165> col:165 _Format 'const char *'
| |-ParmVarDecl 0x20093bbcae0 <col:183, col:193> col:193 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x20093bbcd80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20093bc00b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:309:40, col:143> col:52 sscanf_s 'int (const char *, const char *, ...) __attribute__((cdecl))':'int (const char *, const char *, ...)'
| |-ParmVarDecl 0x20093bbcec8 <col:68, col:81> col:81 _Src 'const char *'
| `-ParmVarDecl 0x20093bbffb0 <col:118, col:131> col:131 _Format 'const char *'
|-FunctionDecl 0x20093bc03a8 <line:311:40, col:184> col:52 _sscanf_s_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20093bc0190 <col:71, col:84> col:84 _Src 'const char *'
| |-ParmVarDecl 0x20093bc0210 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x20093bc0288 <col:162, col:172> col:172 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20093bc0838 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:312:217> col:76 _snscanf 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x20093bc0550 <col:121, col:134> col:134 _Src 'const char *'
| |-ParmVarDecl 0x20093bc05c8 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20093bc0648 <col:192, col:205> col:205 _Format 'const char *'
| `-DeprecatedAttr 0x20093bc08f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20093bc0ec0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:313:259> col:78 _snscanf_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20093bc0b30 <col:125, col:138> col:138 _Src 'const char *'
| |-ParmVarDecl 0x20093bc0ba8 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20093bc0c28 <col:206, col:219> col:219 _Format 'const char *'
| |-ParmVarDecl 0x20093bc0ca0 <col:237, col:247> col:247 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x20093bbefa0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20093bbf300 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:314:40, col:197> col:52 _snscanf_s 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x20093bbf0e8 <col:99, col:112> col:112 _Src 'const char *'
| |-ParmVarDecl 0x20093bbf160 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20093bbf1e0 <col:172, col:185> col:185 _Format 'const char *'
|-FunctionDecl 0x20093bbf698 <line:315:40, col:237> col:52 _snscanf_s_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20093bbf3e8 <col:101, col:114> col:114 _Src 'const char *'
| |-ParmVarDecl 0x20093bbf460 <col:125, col:132> col:132 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20093bbf4e0 <col:184, col:197> col:197 _Format 'const char *'
| `-ParmVarDecl 0x20093bbf558 <col:215, col:225> col:225 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20093bbf8f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:317:86> col:74 tmpfile 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
| `-DeprecatedAttr 0x20093bbf998 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpfile_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20093bbfc50 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:319:28, col:96> col:44 tmpfile_s 'errno_t (FILE **) __attribute__((cdecl))':'errno_t (FILE **)'
| `-ParmVarDecl 0x20093bbfae0 <col:83, col:91> col:91 _File 'FILE **'
|-FunctionDecl 0x20093bb9f50 <line:320:28, col:106> col:44 tmpnam_s 'errno_t (char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t)'
| |-ParmVarDecl 0x20093bbfd28 <col:75, col:82> col:82 _Buf 'char *'
| `-ParmVarDecl 0x20093bbfda0 <col:93, col:101> col:101 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x20093bba1d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:323:79 tmpnam 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x20093bba0f0 <col:113, col:119> col:119 _Buffer 'char *'
| `-DeprecatedAttr 0x20093bba278 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20093bba538 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:324:28, col:81> col:40 ungetc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x20093bba3c0 <col:52, col:56> col:56 _Ch 'int'
| `-ParmVarDecl 0x20093bba438 <col:69, col:76> col:76 _File 'FILE *'
|-FunctionDecl 0x20093bba950 <line:325:40> col:40 implicit vfprintf 'int (FILE *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x20093bba9f0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x20093bbaa58 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x20093bbaac0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x20093bbab40 <col:40> Implicit printf 2 0
|-FunctionDecl 0x20093bbaba8 prev 0x20093bba950 <col:28, col:139> col:40 vfprintf 'int (FILE *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x20093bba610 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x20093bba690 <col:101, col:114> col:114 _Format 'const char *'
| |-ParmVarDecl 0x20093bba708 <col:123, col:131> col:131 _ArgList 'va_list':'char *'
| `-FormatAttr 0x20093bbaca8 <col:40> Inherited printf 2 0
|-FunctionDecl 0x20093bc1fd0 <line:326:40> col:40 implicit vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x20093bc2070 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x20093bc20d8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x20093bc2140 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x20093bc21c0 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x20093bc2228 prev 0x20093bc1fd0 <col:28, col:138> col:40 vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x20093bbacf0 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x20093bbad70 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x20093bbade8 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x20093bc2328 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x20093bc2588 <line:328:28, col:141> col:40 vfprintf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x20093bc2370 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x20093bc23f0 <col:103, col:116> col:116 _Format 'const char *'
| `-ParmVarDecl 0x20093bc2468 <col:125, col:133> col:133 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20093bc2880 <line:329:28, col:140> col:40 vfscanf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x20093bc2668 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x20093bc26e8 <col:102, col:115> col:115 _Format 'const char *'
| `-ParmVarDecl 0x20093bc2760 <col:124, col:132> col:132 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20093bc2bc8 <line:331:40> col:40 implicit vprintf 'int (const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x20093bc2c68 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x20093bc2cd0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x20093bc2d48 <col:40> Implicit printf 1 0
|-FunctionDecl 0x20093bc2db0 prev 0x20093bc2bc8 <col:28, col:116> col:40 vprintf 'int (const char *, __builtin_va_list)'
| |-ParmVarDecl 0x20093bc2968 <col:78, col:91> col:91 _Format 'const char *'
| |-ParmVarDecl 0x20093bc29e0 <col:100, col:108> col:108 _ArgList 'va_list':'char *'
| `-FormatAttr 0x20093bc2ea8 <col:40> Inherited printf 1 0
|-FunctionDecl 0x20093bc3118 <line:332:40> col:40 implicit vscanf 'int (const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x20093bc31b8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x20093bc3220 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x20093bc3298 <col:40> Implicit scanf 1 0
|-FunctionDecl 0x20093bc3300 prev 0x20093bc3118 <col:28, col:115> col:40 vscanf 'int (const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x20093bc2ef8 <col:77, col:90> col:90 _Format 'const char *'
| |-ParmVarDecl 0x20093bc2fe0 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
| `-FormatAttr 0x20093bc33f8 <col:40> Inherited scanf 1 0
|-FunctionDecl 0x20093bc35c0 <line:334:28, col:118> col:40 vprintf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x20093bc3448 <col:80, col:93> col:93 _Format 'const char *'
| `-ParmVarDecl 0x20093bc34c0 <col:102, col:110> col:110 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20093bc3818 <line:335:28, col:117> col:40 vscanf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x20093bc36a0 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x20093bc3718 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20093bc3d78 <line:337:77> col:77 implicit vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x20093bc3e18 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x20093bc3e80 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x20093bc3ee8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x20093bc3f50 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x20093bbdf90 <col:77> Implicit printf 3 0
|-FunctionDecl 0x20093bbdff8 prev 0x20093bc3d78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:337:218> col:77 vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x20093bc39b8 <col:111, col:118> col:118 _DstBuf 'char *'
| |-ParmVarDecl 0x20093bc3a30 <col:132, col:139> col:139 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20093bc3ab0 <col:180, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x20093bc3b28 <col:202, col:210> col:210 _ArgList 'va_list':'char *'
| |-FormatAttr 0x20093bbe1e8 <col:77> Inherited printf 3 0
| `-DeprecatedAttr 0x20093bbe0b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20093bbe658 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:339:28, col:206> col:40 vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x20093bbe238 <col:77, col:84> col:84 _DstBuf 'char *'
| |-ParmVarDecl 0x20093bbe2b0 <col:98, col:105> col:105 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20093bbe328 <col:120, col:127> col:127 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20093bbe3a8 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x20093bbe420 <col:190, col:198> col:198 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20093bbea98 <line:342:40, col:227> col:52 _vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x20093bbe750 <col:94, col:101> col:101 _DstBuf 'char *'
| |-ParmVarDecl 0x20093bbe7c8 <col:115, col:122> col:122 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20093bbe840 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20093bbe8c0 <col:189, col:202> col:202 _Format 'const char *'
| `-ParmVarDecl 0x20093bbe938 <col:211, col:219> col:219 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20093bbee68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:89 _snprintf 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x20093bbec50 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x20093bbecc8 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20093bbed48 <col:246, col:260> col:260 _Format 'const char *'
| `-DeprecatedAttr 0x20093bbef20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20093bc94b0 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:100 _vsnprintf 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x20093bc9200 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x20093bc9278 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20093bc92f8 <col:246, col:260> col:260 _Format 'const char *'
| |-ParmVarDecl 0x20093bc9370 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x20093bc9570 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20093bc9968 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:349:21, col:183> col:33 vsprintf_s 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x20093bc96b8 <col:73, col:80> col:80 _DstBuf 'char *'
| |-ParmVarDecl 0x20093bc9730 <col:94, col:101> col:101 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20093bc97b0 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x20093bc9828 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20093bc9d28 <line:351:40, col:149> col:52 vsscanf_s 'int (const char *, const char *, va_list) __attribute__((cdecl))':'int (const char *, const char *, va_list)'
| |-ParmVarDecl 0x20093bc9a58 <col:62, col:75> col:75 _Src 'const char *'
| |-ParmVarDecl 0x20093bc9ad8 <col:111, col:124> col:124 _Format 'const char *'
| `-ParmVarDecl 0x20093bc9b50 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20093bc70c0 <line:356:85> col:85 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x20093bc7160 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x20093bc71c8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x20093bc7240 <col:85> Implicit printf 2 3
|-FunctionDecl 0x20093bc72a8 prev 0x20093bc70c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:85 sprintf 'int (char *, const char *, ...)'
| |-ParmVarDecl 0x20093bc9ed0 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x20093bc9f50 <col:171, col:185> col:185 _Format 'const char *'
| |-FormatAttr 0x20093bc7488 <col:85> Inherited printf 2 3
| `-DeprecatedAttr 0x20093bc7358 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20093bc78b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> col:94 implicit vsprintf 'int (char *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x20093bc7950 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x20093bc79b8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x20093bc7a20 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x20093bc7aa0 <col:94> Implicit printf 2 0
|-FunctionDecl 0x20093bc7b08 prev 0x20093bc78b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94 vsprintf 'int (char *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x20093bc7598 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x20093bc7618 <col:171, col:185> col:185 _Format 'const char *'
| |-ParmVarDecl 0x20093bc7690 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-FormatAttr 0x20093bc7cf0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> Inherited printf 2 0
| `-DeprecatedAttr 0x20093bc7bc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20093bc8030 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:357:40> col:40 implicit vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x20093bc80d0 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x20093bc8138 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x20093bc81a0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x20093bc8220 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x20093bc8288 prev 0x20093bc8030 <col:28, col:138> col:40 vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x20093bc7d40 <col:48, col:61> col:61 _srcBuf 'const char *'
| |-ParmVarDecl 0x20093bc7dc0 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x20093bc7e38 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x20093bc8388 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x20093bc8550 <line:359:24, col:115> col:36 _vscprintf 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x20093bc83d8 <col:77, col:90> col:90 _Format 'const char *'
| `-ParmVarDecl 0x20093bc8450 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20093bc8848 <line:360:28, col:170> col:40 _snprintf_c 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x20093bc8630 <col:76, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x20093bc86a8 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20093bc8728 <col:145, col:158> col:158 _Format 'const char *'
|-FunctionDecl 0x20093bc8be0 <line:361:28, col:183> col:40 _vsnprintf_c 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x20093bc8930 <col:77, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x20093bc89a8 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20093bc8a28 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x20093bc8aa0 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20093bc8e48 <line:363:28, col:128> col:40 _fprintf_p 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x20093bc8cc8 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x20093bc8d48 <col:103, col:116> col:116 _Format 'const char *'
|-FunctionDecl 0x20093bca050 <line:364:28, col:105> col:40 _printf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x20093bc8f28 <col:80, col:93> col:93 _Format 'const char *'
|-FunctionDecl 0x20093bca340 <line:365:28, col:168> col:40 _sprintf_p 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x20093bca128 <col:77, col:84> col:84 _Dst 'char *'
| |-ParmVarDecl 0x20093bca1a0 <col:95, col:102> col:102 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20093bca220 <col:143, col:156> col:156 _Format 'const char *'
|-FunctionDecl 0x20093bca638 <line:366:28, col:142> col:40 _vfprintf_p 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x20093bca420 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x20093bca4a0 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x20093bca518 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20093bca898 <line:367:28, col:119> col:40 _vprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x20093bca720 <col:81, col:94> col:94 _Format 'const char *'
| `-ParmVarDecl 0x20093bca798 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20093bcac28 <line:368:28, col:182> col:40 _vsprintf_p 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x20093bca978 <col:78, col:85> col:85 _Dst 'char *'
| |-ParmVarDecl 0x20093bca9f0 <col:96, col:103> col:103 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20093bcaa70 <col:144, col:157> col:157 _Format 'const char *'
| `-ParmVarDecl 0x20093bcaae8 <col:166, col:174> col:174 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20093bcadf8 <line:369:24, col:103> col:36 _scprintf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x20093bcad18 <col:78, col:91> col:91 _Format 'const char *'
|-FunctionDecl 0x20093bcb060 <line:370:24, col:117> col:36 _vscprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x20093bcaed0 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x20093bcaf48 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20093bcb220 <line:371:9, col:61> col:21 _set_printf_count_output 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x20093bcb140 <col:51, col:55> col:55 _Value 'int'
|-FunctionDecl 0x20093bcb3b0 <line:372:9, col:50> col:21 _get_printf_count_output 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x20093bcb5f8 <line:374:28, col:143> col:40 _printf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20093bcb480 <col:90, col:103> col:103 _Format 'const char *'
| `-ParmVarDecl 0x20093bcb4f8 <col:121, col:131> col:131 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20093bcb850 <line:375:28, col:145> col:40 _printf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20093bcb6d8 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x20093bcb750 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20093bcbaa8 <line:376:28, col:145> col:40 _printf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20093bcb930 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x20093bcb9a8 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20093bcbe58 <line:377:28, col:157> col:40 _vprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20093bcbb88 <col:91, col:104> col:104 _Format 'const char *'
| |-ParmVarDecl 0x20093bcbc00 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20093bcbc78 <col:141, col:149> col:149 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20093bcc190 <line:378:28, col:159> col:40 _vprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20093bcbf40 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x20093bcbfb8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20093bcc070 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20093bcc488 <line:379:28, col:159> col:40 _vprintf_s_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20093bcc278 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x20093bcc2f0 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20093bcc368 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20093bcc780 <line:381:28, col:166> col:40 _fprintf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20093bcc568 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x20093bcc5e8 <col:113, col:126> col:126 _Format 'const char *'
| `-ParmVarDecl 0x20093bcc660 <col:144, col:154> col:154 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20093bcca78 <line:382:28, col:168> col:40 _fprintf_p_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20093bcc860 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x20093bcc8e0 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x20093bcc958 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20093bccd70 <line:383:28, col:168> col:40 _fprintf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20093bccb58 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x20093bccbd8 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x20093bccc50 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20093bc5160 <line:384:28, col:147> col:40 _vfprintf_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20093bcce50 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x20093bcced0 <col:81, col:94> col:94 _Format 'const char *'
| |-ParmVarDecl 0x20093bccf48 <col:112, col:122> col:122 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20093bccfc0 <col:131, col:139> col:139 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20093bc54f8 <line:385:28, col:149> col:40 _vfprintf_p_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20093bc5248 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x20093bc52c8 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x20093bc5340 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20093bc53b8 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20093bc5890 <line:386:28, col:149> col:40 _vfprintf_s_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20093bc55e0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x20093bc5660 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x20093bc56d8 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20093bc5750 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20093bc5d28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:388:221> col:78 _sprintf_l 'int (char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20093bc5a40 <col:112, col:119> col:119 _DstBuf 'char *'
| |-ParmVarDecl 0x20093bc5ac0 <col:168, col:181> col:181 _Format 'const char *'
| |-ParmVarDecl 0x20093bc5b38 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x20093bc5de0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20093bcd390 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:389:28, col:211> col:40 _sprintf_p_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20093bc5f28 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x20093bcd080 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20093bcd100 <col:158, col:171> col:171 _Format 'const char *'
| `-ParmVarDecl 0x20093bcd178 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20093bcd730 <line:390:40, col:221> col:52 _sprintf_s_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20093bcd480 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x20093bcd4f8 <col:111, col:118> col:118 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20093bcd578 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x20093bcd5f0 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20093bcdc80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:391:195> col:79 _vsprintf_l 'int (char *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20093bcd920 <col:114, col:121> col:121 _DstBuf 'char *'
| |-ParmVarDecl 0x20093bcd9a0 <col:137, col:150> col:150 _Format 'const char *'
| |-ParmVarDecl 0x20093bcda18 <col:168> col:177 '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x20093bcda90 <col:179, col:187> col:187 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x20093bcdd40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20093bc6248 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:392:28, col:225> col:40 _vsprintf_p_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20093bcde88 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x20093bcdf00 <col:101, col:108> col:108 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20093bcdf80 <col:159, col:171> col:171 _Format 'const char *'
| |-ParmVarDecl 0x20093bcdff8 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20093bc6010 <col:209, col:217> col:217 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20093bc6688 <line:393:40, col:235> col:52 _vsprintf_s_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20093bc6340 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x20093bc63b8 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20093bc6438 <col:169, col:182> col:182 _Format 'const char *'
| |-ParmVarDecl 0x20093bc64b0 <col:200, col:210> col:210 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20093bc6528 <col:219, col:227> col:227 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20093bc68f8 <line:395:28, col:145> col:40 _scprintf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20093bc6780 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x20093bc67f8 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20093bc6b50 <line:396:28, col:147> col:40 _scprintf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20093bc69d8 <col:94, col:107> col:107 _Format 'const char *'
| `-ParmVarDecl 0x20093bc6a50 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20093bc6e40 <line:397:28, col:159> col:40 _vscprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20093bc6c30 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x20093bc6ca8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20093bc6d20 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20093bd2200 <line:398:28, col:161> col:40 _vscprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20093bc6f28 <col:95, col:108> col:108 _Format 'const char *'
| |-ParmVarDecl 0x20093bc6fa0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20093bd20e0 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20093bd2658 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:400:247> col:79 _snprintf_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20093bd23a8 <col:115, col:122> col:122 _DstBuf 'char *'
| |-ParmVarDecl 0x20093bd2420 <col:136, col:143> col:143 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20093bd24a0 <col:194, col:207> col:207 _Format 'const char *'
| |-ParmVarDecl 0x20093bd2518 <col:225, col:235> col:235 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x20093bd2718 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20093bd2b10 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:401:28, col:210> col:40 _snprintf_c_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20093bd2860 <col:78, col:85> col:85 _DstBuf 'char *'
| |-ParmVarDecl 0x20093bd28d8 <col:99, col:106> col:106 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20093bd2958 <col:157, col:170> col:170 _Format 'const char *'
| `-ParmVarDecl 0x20093bd29d0 <col:188, col:198> col:198 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20093bd30e0 <line:402:40, col:245> col:52 _snprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20093bd2c00 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x20093bd2c78 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20093bd2cf0 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20093bd2d70 <col:192, col:205> col:205 _Format 'const char *'
| `-ParmVarDecl 0x20093bd2de8 <col:223, col:233> col:233 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20093bd3620 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:403:262> col:80 _vsnprintf_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20093bd32d8 <col:117, col:124> col:124 _DstBuf 'char *'
| |-ParmVarDecl 0x20093bd3350 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20093bd33d0 <col:196, col:209> col:209 _Format 'const char *'
| |-ParmVarDecl 0x20093bd3448 <col:227, col:237> col:237 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x20093bd34c0 <col:246, col:254> col:254 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x20093bd36e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20093bd3b68 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:404:28, col:176> col:40 _vsnprintf_c_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20093bd3838 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x20093bd38b0 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20093bd3930 <col:118, col:129> col:130 'const char *'
| |-ParmVarDecl 0x20093bd39a8 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20093bd3a20 <col:160, col:168> col:168 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20093bd4150 <line:405:28, col:245> col:40 _vsnprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20093bd3c60 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x20093bd3cd8 <col:101, col:108> col:108 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20093bd3d50 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20093bd3dd0 <col:181, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x20093bd3e48 <col:210, col:220> col:220 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20093bd3ec0 <col:229, col:237> col:237 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20093bd4510 <line:415:24, col:128> col:39 _wfsopen 'FILE *(const wchar_t *, const wchar_t *, int) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, int)'
| |-ParmVarDecl 0x20093bd4248 <col:55, col:71> col:71 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x20093bd42c0 <col:89, col:105> col:105 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x20093bd4340 <col:117, col:121> col:121 _ShFlag 'int'
|-FunctionDecl 0x20093bd4780 <line:417:28, col:70> col:43 fgetwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x20093bd4610 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x20093bd4998 <line:418:28, col:58> col:43 _fgetwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x20093bd4c78 <line:419:28, col:88> col:43 fputwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x20093bd4a60 <col:55, col:63> col:63 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x20093bd4ad8 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x20093bd4ec0 <line:420:28, col:70> col:43 _fputwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x20093bd4d50 <col:59, col:67> col:67 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x20093bcf0a0 <line:421:24, col:65> col:39 getwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x20093bd4f90 <col:53, col:60> col:60 _File 'FILE *'
|-FunctionDecl 0x20093bcf228 <line:422:24, col:52> col:39 getwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x20093bcf460 <line:423:28, col:87> col:43 putwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x20093bcf2f0 <col:54, col:62> col:62 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x20093bcf368 <col:75, col:82> col:82 _File 'FILE *'
|-FunctionDecl 0x20093bcf610 <line:424:28, col:68> col:43 putwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x20093bcf538 <col:57, col:65> col:65 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x20093bcf8b8 <line:425:28, col:88> col:43 ungetwc 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x20093bcf6e0 <col:56, col:63> col:63 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x20093bcf758 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x20093bcfc60 <line:427:28, col:141> col:46 fgetws 'wchar_t *(wchar_t *, int, FILE *) __attribute__((cdecl))':'wchar_t *(wchar_t *, int, FILE *)'
| |-ParmVarDecl 0x20093bcf990 <col:82, col:92> col:92 _Dst 'wchar_t *'
| |-ParmVarDecl 0x20093bcfa10 <col:103, col:107> col:107 _SizeInWords 'int'
| `-ParmVarDecl 0x20093bcfa88 <col:129, col:136> col:136 _File 'FILE *'
|-FunctionDecl 0x20093bcff60 <line:428:28, col:96> col:40 fputws 'int (const wchar_t *, FILE *) __attribute__((cdecl))':'int (const wchar_t *, FILE *)'
| |-ParmVarDecl 0x20093bcfd40 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x20093bcfdb8 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x20093bce248 <line:429:28, col:124> col:46 _getws_s 'wchar_t *(wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, size_t)'
| |-ParmVarDecl 0x20093bd0038 <col:84, col:94> col:94 _Str 'wchar_t *'
| `-ParmVarDecl 0x20093bce0a0 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x20093bce550 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:431:83 _getws 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x20093bce3e0 <col:115, col:124> col:124 _String 'wchar_t *'
| `-DeprecatedAttr 0x20093bce5f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _getws_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20093bce8b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:432:28, col:74> col:40 _putws 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x20093bce738 <col:54, col:70> col:70 _Str 'const wchar_t *'
|-FunctionDecl 0x20093bcebc0 <line:434:28, col:129> col:40 fwprintf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x20093bce988 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x20093bcea00 <col:101, col:117> col:117 _Format 'const wchar_t *'
|-FunctionDecl 0x20093bcee10 <line:436:28, col:131> col:40 fwprintf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x20093bcec98 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x20093bced10 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x20093bd5100 <line:438:28, col:106> col:40 wprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x20093bceee8 <col:78, col:94> col:94 _Format 'const wchar_t *'
|-FunctionDecl 0x20093bd52b0 <line:440:28, col:108> col:40 wprintf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x20093bd51d0 <col:80, col:96> col:96 _Format 'const wchar_t *'
|-FunctionDecl 0x20093bd5460 <line:442:24, col:105> col:36 _scwprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x20093bd5380 <col:77, col:93> col:93 _Format 'const wchar_t *'
|-FunctionDecl 0x20093bd57f8 <line:443:28, col:143> col:40 vfwprintf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20093bd5530 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x20093bd55a8 <col:102, col:118> col:118 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20093bd5620 <col:127, col:135> col:135 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20093bd5ae8 <line:444:28, col:142> col:40 vfwscanf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20093bd58d8 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x20093bd5950 <col:101, col:117> col:117 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20093bd59c8 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20093bd5dd8 <line:446:28, col:145> col:40 vfwprintf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20093bd5bc8 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x20093bd5c40 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20093bd5cb8 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20093bd10c0 <line:447:28, col:144> col:40 vfwscanf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20093bd5eb8 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x20093bd5f30 <col:103, col:119> col:119 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20093bd5fa8 <col:128, col:136> col:136 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20093bd13c0 <line:449:28, col:120> col:40 vwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x20093bd11a0 <col:79, col:95> col:95 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20093bd1218 <col:104, col:112> col:112 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20093bd1610 <line:450:28, col:119> col:40 vwscanf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x20093bd1498 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20093bd1510 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20093bd1860 <line:452:28, col:122> col:40 vwprintf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x20093bd16e8 <col:81, col:97> col:97 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20093bd1760 <col:106, col:114> col:114 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20093bd1ab0 <line:453:28, col:121> col:40 vwscanf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x20093bd1938 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20093bd19b0 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20093bd1e68 <line:457:21, col:173> col:33 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x20093bd1b88 <col:73, col:83> col:83 _Dst 'wchar_t *'
| |-ParmVarDecl 0x20093bd1c00 <col:94, col:101> col:101 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20093bd1c78 <col:145, col:161> col:161 _Format 'const wchar_t *'
|-FunctionDecl 0x20093bd6320 <line:461:21, col:187> col:33 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20093bd1f48 <col:74, col:84> col:84 _Dst 'wchar_t *'
| |-ParmVarDecl 0x20093bd1fc0 <col:95, col:102> col:102 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20093bd2038 <col:146, col:162> col:162 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20093bd6110 <col:171, col:179> col:179 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20093bd66d8 <line:462:40, col:156> col:52 vswscanf_s 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20093bd6408 <col:63, col:79> col:79 _Src 'const wchar_t *'
| |-ParmVarDecl 0x20093bd6480 <col:115, col:131> col:131 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20093bd64f8 <col:140, col:148> col:148 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20093bd69c8 <line:466:28, col:145> col:40 vswscanf 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20093bd67b8 <col:49, col:65> col:65 _srcBuf 'const wchar_t *'
| |-ParmVarDecl 0x20093bd6830 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20093bd68a8 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20093bd6cb8 <line:468:28, col:184> col:40 _swprintf_c 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x20093bd6aa8 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20093bd6b20 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20093bd6b98 <col:156, col:172> col:172 _Format 'const wchar_t *'
|-FunctionDecl 0x20093bd7040 <line:469:28, col:198> col:40 _vswprintf_c 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20093bd6d98 <col:82, col:92> col:92 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20093bd6e10 <col:106, col:113> col:113 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20093bd6e88 <col:157, col:173> col:173 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20093bd6f00 <col:182, col:190> col:190 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20093bd74d0 <line:471:40, col:220> col:52 _snwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x20093bd7148 <col:94, col:104> col:104 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20093bd71c0 <col:118, col:125> col:125 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20093bd7238 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20093bd72b0 <col:192, col:208> col:208 _Format 'const wchar_t *'
|-FunctionDecl 0x20093bd79d8 <line:473:40, col:234> col:52 _vsnwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20093bd75b8 <col:95, col:105> col:105 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20093bd7630 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20093bd76a8 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20093bd7720 <col:193, col:209> col:209 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20093bd7798 <col:218, col:226> col:226 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20093bd7d98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:89 _snwprintf 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x20093bd7b88 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x20093bd7c00 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20093bd7c78 <col:254, col:271> col:271 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x20093bd7e50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20093bd8360 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:101 _vsnwprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20093bd8050 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x20093bd8130 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20093bd81a8 <col:254, col:271> col:271 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20093bd8220 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x20093bd8420 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20093bd86d8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:480:28, col:132> col:40 _fwprintf_p 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x20093bd8560 <col:60, col:67> col:67 _File 'FILE *'
| `-ParmVarDecl 0x20093bd85d8 <col:104, col:120> col:120 _Format 'const wchar_t *'
|-FunctionDecl 0x20093bd8890 <line:481:28, col:109> col:40 _wprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x20093bd87b0 <col:81, col:97> col:97 _Format 'const wchar_t *'
|-FunctionDecl 0x20093bd8b70 <line:482:28, col:146> col:40 _vfwprintf_p 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20093bd8960 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x20093bd89d8 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20093bd8a50 <col:130, col:138> col:138 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20093bd8dc8 <line:483:28, col:123> col:40 _vwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x20093bd8c50 <col:82, col:98> col:98 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20093bd8cc8 <col:107, col:115> col:115 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20093be1ff0 <line:484:28, col:178> col:40 _swprintf_p 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x20093bd8ea0 <col:78, col:88> col:88 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20093bd8f18 <col:102, col:109> col:109 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20093bd8f90 <col:150, col:166> col:166 _Format 'const wchar_t *'
|-FunctionDecl 0x20093be2378 <line:485:28, col:192> col:40 _vswprintf_p 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20093be20d0 <col:79, col:89> col:89 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20093be2148 <col:103, col:110> col:110 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20093be21c0 <col:151, col:167> col:167 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20093be2238 <col:176, col:184> col:184 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20093be2540 <line:486:24, col:107> col:36 _scwprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x20093be2460 <col:79, col:95> col:95 _Format 'const wchar_t *'
|-FunctionDecl 0x20093be2788 <line:487:24, col:121> col:36 _vscwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x20093be2610 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20093be2688 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20093be2a90 <line:489:28, col:147> col:40 _wprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20093be2860 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20093be28d8 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20093be2ce0 <line:490:28, col:149> col:40 _wprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20093be2b68 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20093be2be0 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20093be2f30 <line:491:28, col:149> col:40 _wprintf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20093be2db8 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20093be2e30 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20093bdb278 <line:492:28, col:161> col:40 _vwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x20093bdafa8 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20093bdb020 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20093bdb098 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20093bdb568 <line:493:28, col:163> col:40 _vwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x20093bdb358 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20093bdb3d0 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20093bdb448 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20093bdb858 <line:494:28, col:163> col:40 _vwprintf_s_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x20093bdb648 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20093bdb6c0 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20093bdb738 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20093bdbc18 <line:496:28, col:170> col:40 _fwprintf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20093bdb938 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x20093bdb9b0 <col:114, col:130> col:130 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20093bdba28 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20093be3000 <line:497:28, col:172> col:40 _fwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20093bdbcf8 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x20093bdbd70 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20093bdbde8 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20093be32f0 <line:498:28, col:172> col:40 _fwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20093be30e0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x20093be3158 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20093be31d0 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20093be3740 <line:499:28, col:184> col:40 _vfwprintf_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x20093be33d0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x20093be3448 <col:115, col:131> col:131 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20093be34c0 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20093be3538 <col:168, col:176> col:176 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20093be3ad0 <line:500:28, col:186> col:40 _vfwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x20093be3828 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x20093be38a0 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20093be3918 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20093be3990 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20093be3e60 <line:501:28, col:186> col:40 _vfwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x20093be3bb8 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x20093be3c30 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20093be3ca8 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20093be3d20 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20093be02e0 <line:503:28, col:218> col:40 _swprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20093be3f48 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20093bdffd0 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20093be0048 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20093be00c0 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20093be0670 <line:504:28, col:218> col:40 _swprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20093be03c8 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20093be0440 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20093be04b8 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20093be0530 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20093be0a00 <line:505:40, col:228> col:52 _swprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20093be0758 <col:91, col:101> col:101 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20093be07d0 <col:115, col:122> col:122 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20093be0848 <col:172, col:188> col:188 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20093be08c0 <col:206, col:216> col:216 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20093be0f08 <line:506:28, col:232> col:40 used _vswprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x20093be0ae8 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20093be0b60 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20093be0bd8 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20093be0c50 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20093be0cc8 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20093bdc2f8 <line:507:28, col:232> col:40 _vswprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x20093bdbfb8 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20093bdc030 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20093bdc0a8 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20093bdc120 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20093bdc198 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20093bdc728 <line:508:40, col:242> col:52 _vswprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x20093bdc3e8 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20093bdc460 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20093bdc4d8 <col:173, col:189> col:189 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20093bdc550 <col:207, col:217> col:217 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20093bdc5c8 <col:226, col:234> col:234 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20093bdc990 <line:510:24, col:145> col:36 _scwprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20093bdc818 <col:89, col:105> col:105 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20093bdc890 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20093bdcbe0 <line:511:24, col:147> col:36 _scwprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20093bdca68 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20093bdcae0 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20093bdcec8 <line:512:24, col:161> col:36 _vscwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x20093bdccb8 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20093bdcd30 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20093bdcda8 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20093be43a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:514:255> col:80 _snwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20093be4100 <col:117, col:127> col:127 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20093be4178 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20093be41f0 <col:199, col:215> col:215 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20093be4268 <col:233, col:243> col:243 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x20093be4468 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20093be49d8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:515:40, col:252> col:52 _snwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20093be45b0 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20093be4628 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20093be46a0 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20093be4718 <col:196, col:212> col:212 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20093be4790 <col:230, col:240> col:240 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20093be4f10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:516:270> col:81 _vsnwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x20093be4bd0 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20093be4c48 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20093be4cc0 <col:201, col:217> col:217 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20093be4d38 <col:235, col:245> col:245 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x20093be4db0 <col:254, col:262> col:262 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x20093bdcfa0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20093bdd5b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:517:40, col:266> col:52 _vsnwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x20093bdd0e8 <col:93, col:103> col:103 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20093bdd160 <col:117, col:124> col:124 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20093bdd1d8 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20093bdd250 <col:197, col:213> col:213 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20093bdd2c8 <col:231, col:241> col:241 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20093bdd340 <col:250, col:258> col:258 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20093bddab0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:110 _swprintf 'int (wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x20093bdd878 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x20093bdd8f0 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-DeprecatedAttr 0x20093bddb60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x20093bddc78 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x20093be5288 <col:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:134 _vswprintf 'int (wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20093bddf30 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x20093be5030 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20093be50a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x20093be5340 <line:275:47, col:63> "This function or variable may be unsafe. Consider using vswprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x20093be5458 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x20093be59f8 <col:36, line:1961:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:110 __swprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20093be5718 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x20093be5790 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20093be5808 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-DeprecatedAttr 0x20093be5ab0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __swprintf_l_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x20093be5bd0 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x20093bdf1d0 <col:36, line:1962:166> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:124 __vswprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x20093be5e90 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x20093be5f08 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20093be5f80 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x20093bdefc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1962:153, col:161> col:161 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x20093bdf290 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vswprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x20093bdf3b0 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x20093bdf6b8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:36:1, line:44:1> line:36:21 swprintf 'int (wchar_t *, size_t, const wchar_t *, ...)' static inline
| |-ParmVarDecl 0x20093bdf4d8 <col:53, col:63> col:63 used _String 'wchar_t *'
| |-ParmVarDecl 0x20093bdf550 <col:72, col:79> col:79 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20093bdf5c8 <col:117, col:133> col:133 used _Format 'const wchar_t *'
| `-CompoundStmt 0x20093be9300 <line:37:1, line:44:1>
|   |-DeclStmt 0x20093bdf800 <line:38:5, col:21>
|   | `-VarDecl 0x20093bdf798 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x20093bdf898 <line:39:5, col:13>
|   | `-VarDecl 0x20093bdf830 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x20093bdfbf0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x20093bdfbd8 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x20093bdfaf0 <col:34> '<builtin fn type>' Function 0x20093bdf988 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x20093bdfb28 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:40:19> 'va_list':'char *' lvalue Var 0x20093bdf798 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x20093bdfb60 <col:29> 'const wchar_t *' lvalue ParmVar 0x20093bdf5c8 '_Format' 'const wchar_t *'
|   |-BinaryOperator 0x20093bdfeb0 <line:41:5, col:67> 'int' '='
|   | |-DeclRefExpr 0x20093bdfc20 <col:5> 'int' lvalue Var 0x20093bdf830 '_Ret' 'int'
|   | `-CallExpr 0x20093bdfdf0 <col:12, col:67> 'int'
|   |   |-ImplicitCastExpr 0x20093bdfdd8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x20093bdfc58 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x20093be0f08 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x20093bdfe38 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x20093bdfc78 <col:27> 'wchar_t *' lvalue ParmVar 0x20093bdf4d8 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x20093bdfe50 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x20093bdfc98 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x20093bdf550 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x20093bdfe68 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x20093bdfcb8 <col:44> 'const wchar_t *' lvalue ParmVar 0x20093bdf5c8 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x20093bdfe80 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|   |   | `-ParenExpr 0x20093bdfd40 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x20093bdfd18 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x20093bdfcd8 <col:26> 'int' 0
|   |   `-ImplicitCastExpr 0x20093bdfe98 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:41:59> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x20093bdfd60 <col:59> 'va_list':'char *' lvalue Var 0x20093bdf798 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x20093be9290 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x20093be9278 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x20093be91c8 <col:34> '<builtin fn type>' Function 0x20093be9060 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x20093be9200 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:42:17> 'va_list':'char *' lvalue Var 0x20093bdf798 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x20093be92f0 <line:43:5, col:12>
|     `-ImplicitCastExpr 0x20093be92d8 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x20093be92b8 <col:12> 'int' lvalue Var 0x20093bdf830 '_Ret' 'int'
|-FunctionDecl 0x20093bdf988 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34> col:34 implicit used __builtin_va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x20093bdfa28 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x20093bdfa98 <col:34> Implicit
|-FunctionDecl 0x20093be9060 <line:27:34> col:34 implicit used __builtin_va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x20093be9100 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x20093be9170 <col:34> Implicit
|-FunctionDecl 0x20093be95f8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:49:1, line:52:1> line:49:31 vswprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)' static inline
| |-ParmVarDecl 0x20093be9350 <col:64, col:74> col:74 used _String 'wchar_t *'
| |-ParmVarDecl 0x20093be93c8 <col:83, col:90> col:90 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20093be9440 <col:138, col:154> col:154 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x20093be94b8 <col:163, col:171> col:171 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x20093be98e0 <line:50:1, line:52:1>
|   `-ReturnStmt 0x20093be98d0 <line:51:5, col:62>
|     `-CallExpr 0x20093be9810 <col:12, col:62> 'int'
|       |-ImplicitCastExpr 0x20093be97f8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x20093be96d0 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x20093be0f08 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x20093be9858 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x20093be96f0 <col:27> 'wchar_t *' lvalue ParmVar 0x20093be9350 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x20093be9870 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x20093be9710 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x20093be93c8 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x20093be9888 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x20093be9730 <col:44> 'const wchar_t *' lvalue ParmVar 0x20093be9440 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x20093be98a0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|       | `-ParenExpr 0x20093be97b8 <col:17, col:27> 'void *'
|       |   `-CStyleCastExpr 0x20093be9790 <col:18, col:26> 'void *' <NullToPointer>
|       |     `-IntegerLiteral 0x20093be9750 <col:26> 'int' 0
|       `-ImplicitCastExpr 0x20093be98b8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:51:59> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x20093be97d8 <col:59> 'va_list':'char *' lvalue ParmVar 0x20093be94b8 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x20093be9b80 <line:60:1, line:68:1> line:60:21 _swprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)' static inline
| |-ParmVarDecl 0x20093be9908 <col:56, col:66> col:66 used _String 'wchar_t *'
| |-ParmVarDecl 0x20093be9980 <col:75, col:82> col:82 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20093be99f8 <col:130, col:146> col:146 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x20093be9a70 <col:155, col:165> col:165 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| `-CompoundStmt 0x20093be70e8 <line:61:1, line:68:1>
|   |-DeclStmt 0x20093be9cd0 <line:62:5, col:21>
|   | `-VarDecl 0x20093be9c68 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x20093be9d68 <line:63:5, col:13>
|   | `-VarDecl 0x20093be9d00 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x20093be9e10 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x20093be9df8 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x20093be9d80 <col:34> '<builtin fn type>' Function 0x20093bdf988 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x20093be9da0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:64:19> 'va_list':'char *' lvalue Var 0x20093be9c68 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x20093be9dd8 <col:29> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x20093be9a70 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |-BinaryOperator 0x20093bea010 <line:65:5, col:72> 'int' '='
|   | |-DeclRefExpr 0x20093be9e40 <col:5> 'int' lvalue Var 0x20093be9d00 '_Ret' 'int'
|   | `-CallExpr 0x20093be9f50 <col:12, col:72> 'int'
|   |   |-ImplicitCastExpr 0x20093be9f38 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x20093be9e78 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x20093be0f08 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x20093be9f98 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x20093be9e98 <col:27> 'wchar_t *' lvalue ParmVar 0x20093be9908 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x20093be9fb0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x20093be9eb8 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x20093be9980 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x20093be9fc8 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x20093be9ed8 <col:44> 'const wchar_t *' lvalue ParmVar 0x20093be99f8 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x20093be9fe0 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x20093be9ef8 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x20093be9a70 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |   `-ImplicitCastExpr 0x20093be9ff8 <col:64> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x20093be9f18 <col:64> 'va_list':'char *' lvalue Var 0x20093be9c68 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x20093be7078 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x20093be7060 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x20093bea030 <col:34> '<builtin fn type>' Function 0x20093be9060 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x20093be7040 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:66:17> 'va_list':'char *' lvalue Var 0x20093be9c68 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x20093be70d8 <line:67:5, col:12>
|     `-ImplicitCastExpr 0x20093be70c0 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x20093be70a0 <col:12> 'int' lvalue Var 0x20093be9d00 '_Ret' 'int'
|-FunctionDecl 0x20093be7478 <line:73:1, line:76:1> line:73:31 _vswprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' static inline
| |-ParmVarDecl 0x20093be7138 <col:67, col:77> col:77 used _String 'wchar_t *'
| |-ParmVarDecl 0x20093be71b0 <col:86, col:93> col:93 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20093be7228 <col:141, col:157> col:157 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x20093be72a0 <col:166, col:176> col:176 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x20093be7318 <col:187, col:195> col:195 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x20093be7700 <line:74:1, line:76:1>
|   `-ReturnStmt 0x20093be76f0 <line:75:5, col:67>
|     `-CallExpr 0x20093be7630 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x20093be7618 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x20093be7558 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x20093be0f08 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x20093be7678 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x20093be7578 <col:27> 'wchar_t *' lvalue ParmVar 0x20093be7138 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x20093be7690 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x20093be7598 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x20093be71b0 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x20093be76a8 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x20093be75b8 <col:44> 'const wchar_t *' lvalue ParmVar 0x20093be7228 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x20093be76c0 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|       | `-DeclRefExpr 0x20093be75d8 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x20093be72a0 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|       `-ImplicitCastExpr 0x20093be76d8 <col:64> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x20093be75f8 <col:64> 'va_list':'char *' lvalue ParmVar 0x20093be7318 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x20093be7948 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:555:24, col:129> col:42 _wtempnam 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x20093be7728 <col:63, col:79> col:79 _Directory 'const wchar_t *'
| `-ParmVarDecl 0x20093be77a0 <col:102, col:118> col:118 _FilePrefix 'const wchar_t *'
|-FunctionDecl 0x20093be7b98 <line:561:24, col:119> col:36 _vscwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x20093be7a20 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20093be7a98 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20093be7e80 <line:562:24, col:159> col:36 _vscwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x20093be7c70 <col:90, col:106> col:106 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20093be7ce8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20093be7d60 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20093bec208 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:563:158> col:71 fwscanf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x20093bec090 <col:87, col:94> col:94 _File 'FILE *'
| |-ParmVarDecl 0x20093bec108 <col:130, col:146> col:146 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x20093bec2b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20093bec6c8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:564:206> col:78 _fwscanf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20093bec4b8 <col:97, col:104> col:104 _File 'FILE *'
| |-ParmVarDecl 0x20093bec530 <col:150, col:166> col:166 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20093bec5a8 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x20093bec780 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20093beca38 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:568:28, col:131> col:40 fwscanf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x20093bec8c0 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x20093bec938 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x20093becd20 <line:570:28, col:172> col:40 _fwscanf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20093becb10 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x20093becb88 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20093becc00 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20093be80c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:571:165> col:71 swscanf 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x20093becec0 <col:86, col:102> col:102 _Src 'const wchar_t *'
| |-ParmVarDecl 0x20093becf38 <col:137, col:153> col:153 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x20093be8170 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using swscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20093be8648 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:572:213> col:78 _swscanf_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20093be8370 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x20093be83e8 <col:157, col:173> col:173 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20093be8460 <col:191, col:201> col:201 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x20093be8700 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20093be89b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:574:40, col:149> col:52 swscanf_s 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x20093be8840 <col:69, col:84> col:84 _Src 'const wchar_t *'
| `-ParmVarDecl 0x20093be88b8 <col:121, col:137> col:137 _Format 'const wchar_t *'
|-FunctionDecl 0x20093be8ca0 <line:576:40, col:191> col:52 _swscanf_s_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20093be8a90 <col:72, col:88> col:88 _Src 'const wchar_t *'
| |-ParmVarDecl 0x20093be8b08 <col:135, col:151> col:151 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20093be8b80 <col:169, col:179> col:179 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20093bed188 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:577:219> col:77 _snwscanf 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x20093be8e40 <col:117, col:133> col:133 _Src 'const wchar_t *'
| |-ParmVarDecl 0x20093be8eb8 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20093be8f30 <col:191, col:207> col:207 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x20093bed240 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20093bed7c0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:578:261> col:79 _snwscanf_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20093bed440 <col:121, col:137> col:137 _Src 'const wchar_t *'
| |-ParmVarDecl 0x20093bed4b8 <col:148, col:155> col:155 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20093bed530 <col:205, col:221> col:221 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20093bed5a8 <col:239, col:249> col:249 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x20093bed880 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20093bedbd0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:579:40, col:198> col:52 _snwscanf_s 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x20093bed9c0 <col:94, col:110> col:110 _Src 'const wchar_t *'
| |-ParmVarDecl 0x20093beda38 <col:121, col:128> col:128 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20093bedab0 <col:170, col:186> col:186 _Format 'const wchar_t *'
|-FunctionDecl 0x20093bedf58 <line:580:40, col:238> col:52 _snwscanf_s_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20093bedcb0 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x20093bedd28 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20093bedda0 <col:182, col:198> col:198 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20093bede18 <col:216, col:226> col:226 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20093beb230 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:581:134> col:70 wscanf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| |-ParmVarDecl 0x20093beb150 <col:106, col:122> col:122 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x20093beb2d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20093beb650 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:582:182> col:77 _wscanf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20093beb4d8 <col:126, col:142> col:142 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20093beb550 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x20093beb700 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20093beb920 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:584:40, col:120> col:52 wscanf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x20093beb840 <col:92, col:108> col:108 _Format 'const wchar_t *'
|-FunctionDecl 0x20093bebb68 <line:586:40, col:161> col:52 _wscanf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20093beb9f0 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20093beba68 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20093bebe68 <line:589:24, col:99> col:39 _wfdopen 'FILE *(int, const wchar_t *) __attribute__((cdecl))':'FILE *(int, const wchar_t *)'
| |-ParmVarDecl 0x20093bebc48 <col:53, col:57> col:57 _FileHandle 'int'
| `-ParmVarDecl 0x20093bebcc0 <col:78, col:94> col:94 _Mode 'const wchar_t *'
|-FunctionDecl 0x20093bea218 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:590:144> col:74 _wfopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x20093bec000 <col:89, col:105> col:105 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x20093bea070 <col:123, col:139> col:139 _Mode 'const wchar_t *'
| `-DeprecatedAttr 0x20093bea2c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20093bea6d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:591:28, col:157> col:44 _wfopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x20093bea410 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x20093bea488 <col:102, col:118> col:118 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x20093bea500 <col:136, col:152> col:152 _Mode 'const wchar_t *'
|-FunctionDecl 0x20093beab30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:592:173> col:76 _wfreopen 'FILE *(const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x20093bea870 <col:93, col:109> col:109 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x20093bea8e8 <col:127, col:143> col:143 _Mode 'const wchar_t *'
| |-ParmVarDecl 0x20093bea960 <col:158, col:165> col:165 _OldFile 'FILE *'
| `-DeprecatedAttr 0x20093beabe8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfreopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20093bf3148 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:593:28, col:184> col:44 _wfreopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x20093bead30 <col:82, col:90> col:90 _File 'FILE **'
| |-ParmVarDecl 0x20093beada8 <col:104, col:120> col:120 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x20093beae20 <col:138, col:154> col:154 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x20093beae98 <col:169, col:176> col:176 _OldFile 'FILE *'
|-FunctionDecl 0x20093bf33a0 <line:597:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x20093bf3230 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x20093bf35e0 <line:600:24, col:107> col:39 _wpopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x20093bf3470 <col:54, col:69> col:69 _Command 'const wchar_t *'
| `-ParmVarDecl 0x20093bf34e8 <col:86, col:102> col:102 _Mode 'const wchar_t *'
|-FunctionDecl 0x20093bf3798 <line:602:9, col:62> col:21 _wremove 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x20093bf36b8 <col:37, col:53> col:53 _Filename 'const wchar_t *'
|-FunctionDecl 0x20093bf3a88 <line:603:28, col:127> col:44 _wtmpnam_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x20093bf3868 <col:84, col:94> col:94 _DstBuf 'wchar_t *'
| `-ParmVarDecl 0x20093bf38e0 <col:108, col:115> col:115 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x20093bf3cf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:605:82 _wtmpnam 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x20093bf3c20 <col:118, col:127> col:127 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x20093bf3da0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wtmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20093bf3fb8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:607:28, col:78> col:43 _fgetwc_nolock 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x20093bf3ee0 <col:66, col:73> col:73 _File 'FILE *'
|-FunctionDecl 0x20093bf4208 <line:608:28, col:96> col:43 _fputwc_nolock 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x20093bf4088 <col:63, col:71> col:71 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x20093bf4110 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x20093bf4450 <line:609:28, col:96> col:43 _ungetwc_nolock 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x20093bf42e0 <col:64, col:71> col:71 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x20093bf4358 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x20093bf4600 <line:670:9, col:53> col:22 _lock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x20093bf4528 <col:41, col:48> col:48 _File 'FILE *'
|-FunctionDecl 0x20093bf47a8 <line:671:9, col:55> col:22 _unlock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x20093bf46d0 <col:43, col:50> col:50 _File 'FILE *'
|-FunctionDecl 0x20093bf4958 <line:673:28, col:75> col:40 _fclose_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x20093bf4878 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x20093bf4b08 <line:674:28, col:79> col:40 _fflush_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x20093bf4a28 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x20093bf4e80 <line:675:28, col:179> col:43 _fread_nolock 'size_t (void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x20093bf4be0 <col:97, col:104> col:104 _DstBuf 'void *'
| |-ParmVarDecl 0x20093bf4c58 <col:118, col:125> col:125 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20093bf4cd0 <col:144, col:151> col:151 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20093bf4d48 <col:167, col:174> col:174 _File 'FILE *'
|-FunctionDecl 0x20093bee280 <line:676:28, col:203> col:43 _fread_nolock_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x20093bf4f70 <col:99, col:106> col:106 _DstBuf 'void *'
| |-ParmVarDecl 0x20093bf4fe8 <col:120, col:127> col:127 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20093bf5060 <col:142, col:149> col:149 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20093bee0b0 <col:168, col:175> col:175 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20093bee128 <col:191, col:198> col:198 _File 'FILE *'
|-FunctionDecl 0x20093bee590 <line:677:28, col:111> col:40 _fseek_nolock 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x20093bee370 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x20093bee3f0 <col:81, col:86> col:86 _Offset 'long'
| `-ParmVarDecl 0x20093bee470 <col:100, col:104> col:104 _Origin 'int'
|-FunctionDecl 0x20093bee750 <line:678:24, col:71> col:37 _ftell_nolock 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x20093bee670 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x20093beea40 <line:679:28, col:117> col:40 _fseeki64_nolock 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x20093bee820 <col:65, col:72> col:72 _File 'FILE *'
| |-ParmVarDecl 0x20093bee8a0 <col:84, col:92> col:92 _Offset 'long long'
| `-ParmVarDecl 0x20093bee920 <col:106, col:110> col:110 _Origin 'int'
|-FunctionDecl 0x20093beec00 <line:680:24, col:77> col:40 _ftelli64_nolock 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x20093beeb20 <col:65, col:72> col:72 _File 'FILE *'
|-FunctionDecl 0x20093beef78 <line:681:28, col:170> col:43 _fwrite_nolock 'size_t (const void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (const void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x20093beecd8 <col:89, col:102> col:102 _DstBuf 'const void *'
| |-ParmVarDecl 0x20093beed50 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20093beedc8 <col:135, col:142> col:142 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20093beee40 <col:158, col:165> col:165 _File 'FILE *'
|-FunctionDecl 0x20093bf1258 <line:682:28, col:89> col:40 _ungetc_nolock 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x20093bf10e0 <col:60, col:64> col:64 _Ch 'int'
| `-ParmVarDecl 0x20093bf1158 <col:77, col:84> col:84 _File 'FILE *'
|-FunctionDecl 0x20093bf1590 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:709:136> col:57 tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x20093bf1410 <col:76, col:89> col:89 _Directory 'const char *'
| |-ParmVarDecl 0x20093bf1490 <col:112, col:125> col:125 _FilePrefix 'const char *'
| `-DeprecatedAttr 0x20093bf1640 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tempnam. See online help for details." ""
|-FunctionDecl 0x20093bf18f8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:715:89> col:75 fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x20093bf1998 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcloseall. See online help for details." ""
|-FunctionDecl 0x20093bf1cd8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:716:127> col:71 fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x20093bf1b60 <col:83, col:87> col:87 _FileHandle 'int'
| |-ParmVarDecl 0x20093bf1be0 <col:107, col:120> col:120 _Format 'const char *'
| `-DeprecatedAttr 0x20093bf1d88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fdopen. See online help for details." ""
|-FunctionDecl 0x20093bef0c0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:717:87> col:74 fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x20093bef160 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fgetchar. See online help for details." ""
|-FunctionDecl 0x20093bef400 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:718:92> col:68 fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x20093bef320 <col:80, col:87> col:87 _File 'FILE *'
| `-DeprecatedAttr 0x20093bef4a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fileno. See online help for details." ""
|-FunctionDecl 0x20093bef728 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:719:87> col:74 flushall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x20093bef7c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _flushall. See online help for details." ""
|-FunctionDecl 0x20093befa70 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:720:95> col:74 fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| |-ParmVarDecl 0x20093bef990 <col:88, col:92> col:92 _Ch 'int'
| `-DeprecatedAttr 0x20093befb18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fputchar. See online help for details." ""
|-FunctionDecl 0x20093befdf8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:721:91> col:66 getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x20093befd18 <col:79, col:86> col:86 _File 'FILE *'
| `-DeprecatedAttr 0x20093befea0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _getw. See online help for details." ""
|-FunctionDecl 0x20093bf62a8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:722:109> col:70 putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x20093bf6130 <col:80, col:84> col:84 _Ch 'int'
| |-ParmVarDecl 0x20093bf61a8 <col:97, col:104> col:104 _File 'FILE *'
| `-DeprecatedAttr 0x20093bf6358 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putw. See online help for details." ""
|-FunctionDecl 0x20093bf6618 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:723:77> col:67 rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x20093bf66b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _rmtmp. See online help for details." ""
|-FunctionDecl 0x20093bf6af0 <.//openssl//file_jk/before\crypto\rsa\rsa_pk1.c:18:1, line:42:1> line:18:5 RSA_padding_add_PKCS1_type_1 'int (unsigned char *, int, const unsigned char *, int)'
| |-ParmVarDecl 0x20093bf6810 <col:34, col:49> col:49 used to 'unsigned char *'
| |-ParmVarDecl 0x20093bf6890 <col:53, col:57> col:57 used tlen 'int'
| |-ParmVarDecl 0x20093bf6910 <line:19:34, col:55> col:55 used from 'const unsigned char *'
| |-ParmVarDecl 0x20093bf6990 <col:61, col:65> col:65 used flen 'int'
| `-CompoundStmt 0x20093bf7c88 <line:20:1, line:42:1>
|   |-DeclStmt 0x20093bf6c48 <line:21:5, col:10>
|   | `-VarDecl 0x20093bf6be0 <col:5, col:9> col:9 used j 'int'
|   |-DeclStmt 0x20093bf6ce0 <line:22:5, col:21>
|   | `-VarDecl 0x20093bf6c78 <col:5, col:20> col:20 used p 'unsigned char *'
|   |-IfStmt 0x20093bf6f00 <line:24:5, line:28:5>
|   | |-OpaqueValueExpr 0x20093bf6ee8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x20093bf6ed0 <line:24:49, line:28:5>
|   |   `-ReturnStmt 0x20093bf6ec0 <line:27:9, col:18>
|   |     `-ParenExpr 0x20093bf6ea0 <col:16, col:18> 'int'
|   |       `-IntegerLiteral 0x20093bf6e78 <col:17> 'int' 0
|   |-BinaryOperator 0x20093bf6fc8 <line:30:5, col:26> 'unsigned char *' '='
|   | |-DeclRefExpr 0x20093bf6f18 <col:5> 'unsigned char *' lvalue Var 0x20093bf6c78 'p' 'unsigned char *'
|   | `-CStyleCastExpr 0x20093bf6fa0 <col:9, col:26> 'unsigned char *' <NoOp>
|   |   `-ImplicitCastExpr 0x20093bf6f88 <col:26> 'unsigned char *' <LValueToRValue> part_of_explicit_cast
|   |     `-DeclRefExpr 0x20093bf6f50 <col:26> 'unsigned char *' lvalue ParmVar 0x20093bf6810 'to' 'unsigned char *'
|   |-BinaryOperator 0x20093bf7098 <line:32:5, col:14> 'unsigned char' '='
|   | |-UnaryOperator 0x20093bf7040 <col:5, col:10> 'unsigned char' lvalue prefix '*' cannot overflow
|   | | `-ParenExpr 0x20093bf7020 <col:6, col:10> 'unsigned char *'
|   | |   `-UnaryOperator 0x20093bf7008 <col:7, col:8> 'unsigned char *' postfix '++'
|   | |     `-DeclRefExpr 0x20093bf6fe8 <col:7> 'unsigned char *' lvalue Var 0x20093bf6c78 'p' 'unsigned char *'
|   | `-ImplicitCastExpr 0x20093bf7080 <col:14> 'unsigned char' <IntegralCast>
|   |   `-IntegerLiteral 0x20093bf7058 <col:14> 'int' 0
|   |-BinaryOperator 0x20093bf7180 <line:33:5, col:14> 'unsigned char' '='
|   | |-UnaryOperator 0x20093bf7110 <col:5, col:10> 'unsigned char' lvalue prefix '*' cannot overflow
|   | | `-ParenExpr 0x20093bf70f0 <col:6, col:10> 'unsigned char *'
|   | |   `-UnaryOperator 0x20093bf70d8 <col:7, col:8> 'unsigned char *' postfix '++'
|   | |     `-DeclRefExpr 0x20093bf70b8 <col:7> 'unsigned char *' lvalue Var 0x20093bf6c78 'p' 'unsigned char *'
|   | `-ImplicitCastExpr 0x20093bf7168 <col:14> 'unsigned char' <IntegralCast>
|   |   `-IntegerLiteral 0x20093bf7140 <col:14> 'int' 1
|   |-BinaryOperator 0x20093bf72b0 <line:36:5, col:20> 'int' '='
|   | |-DeclRefExpr 0x20093bf71a0 <col:5> 'int' lvalue Var 0x20093bf6be0 'j' 'int'
|   | `-BinaryOperator 0x20093bf7290 <col:9, col:20> 'int' '-'
|   |   |-BinaryOperator 0x20093bf7238 <col:9, col:16> 'int' '-'
|   |   | |-ImplicitCastExpr 0x20093bf7220 <col:9> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x20093bf71d8 <col:9> 'int' lvalue ParmVar 0x20093bf6890 'tlen' 'int'
|   |   | `-IntegerLiteral 0x20093bf71f8 <col:16> 'int' 3
|   |   `-ImplicitCastExpr 0x20093bf7278 <col:20> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x20093bf7258 <col:20> 'int' lvalue ParmVar 0x20093bf6990 'flen' 'int'
|   |-CallExpr 0x20093bf7610 <line:37:5, col:22> 'void *'
|   | |-ImplicitCastExpr 0x20093bf75f8 <col:5> 'void *(*)(void *, int, unsigned long long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x20093bf7500 <col:5> 'void *(void *, int, unsigned long long)' Function 0x20093bf7310 'memset' 'void *(void *, int, unsigned long long)'
|   | |-ImplicitCastExpr 0x20093bf7660 <col:12> 'void *' <BitCast>
|   | | `-ImplicitCastExpr 0x20093bf7648 <col:12> 'unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x20093bf7538 <col:12> 'unsigned char *' lvalue Var 0x20093bf6c78 'p' 'unsigned char *'
|   | |-IntegerLiteral 0x20093bf7558 <col:15> 'int' 255
|   | `-ImplicitCastExpr 0x20093bf7690 <col:21> 'unsigned long long' <IntegralCast>
|   |   `-ImplicitCastExpr 0x20093bf7678 <col:21> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x20093bf7580 <col:21> 'int' lvalue Var 0x20093bf6be0 'j' 'int'
|   |-CompoundAssignOperator 0x20093bf7700 <line:38:5, col:10> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   | |-DeclRefExpr 0x20093bf76a8 <col:5> 'unsigned char *' lvalue Var 0x20093bf6c78 'p' 'unsigned char *'
|   | `-ImplicitCastExpr 0x20093bf76e8 <col:10> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x20093bf76c8 <col:10> 'int' lvalue Var 0x20093bf6be0 'j' 'int'
|   |-BinaryOperator 0x20093bf77d0 <line:39:5, col:14> 'unsigned char' '='
|   | |-UnaryOperator 0x20093bf7788 <col:5, col:10> 'unsigned char' lvalue prefix '*' cannot overflow
|   | | `-ParenExpr 0x20093bf7768 <col:6, col:10> 'unsigned char *'
|   | |   `-UnaryOperator 0x20093bf7750 <col:7, col:8> 'unsigned char *' postfix '++'
|   | |     `-DeclRefExpr 0x20093bf7730 <col:7> 'unsigned char *' lvalue Var 0x20093bf6c78 'p' 'unsigned char *'
|   | `-ImplicitCastExpr 0x20093bf77b8 <col:14> 'unsigned char' <IntegralCast>
|   |   `-CharacterLiteral 0x20093bf77a0 <col:14> 'int' 0
|   |-CallExpr 0x20093bf7b80 <line:40:5, col:39> 'void *'
|   | |-ImplicitCastExpr 0x20093bf7b68 <col:5> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x20093bf7a20 <col:5> 'void *(void *, const void *, unsigned long long)' Function 0x20093bf7830 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   | |-ImplicitCastExpr 0x20093bf7bd0 <col:12> 'void *' <BitCast>
|   | | `-ImplicitCastExpr 0x20093bf7bb8 <col:12> 'unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x20093bf7a58 <col:12> 'unsigned char *' lvalue Var 0x20093bf6c78 'p' 'unsigned char *'
|   | |-ImplicitCastExpr 0x20093bf7c00 <col:15> 'const void *' <BitCast>
|   | | `-ImplicitCastExpr 0x20093bf7be8 <col:15> 'const unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x20093bf7a78 <col:15> 'const unsigned char *' lvalue ParmVar 0x20093bf6910 'from' 'const unsigned char *'
|   | `-ImplicitCastExpr 0x20093bf7c18 <col:21, col:35> 'unsigned long long' <IntegralCast>
|   |   `-CStyleCastExpr 0x20093bf7ae8 <col:21, col:35> 'unsigned int' <IntegralCast>
|   |     `-ImplicitCastExpr 0x20093bf7ad0 <col:35> 'int' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0x20093bf7a98 <col:35> 'int' lvalue ParmVar 0x20093bf6990 'flen' 'int'
|   `-ReturnStmt 0x20093bf7c78 <line:41:5, col:14>
|     `-ParenExpr 0x20093bf7c58 <col:12, col:14> 'int'
|       `-IntegerLiteral 0x20093bf7c30 <col:13> 'int' 1
|-FunctionDecl 0x20093bf7310 <line:37:5> col:5 implicit used memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x20093bf73b0 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x20093bf7418 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x20093bf7480 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x20093bf7830 <line:40:5> col:5 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x20093bf78d0 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x20093bf7938 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x20093bf79a0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x20093bf8090 <line:44:1, line:115:1> line:44:5 RSA_padding_check_PKCS1_type_1 'int (unsigned char *, int, const unsigned char *, int, int)'
| |-ParmVarDecl 0x20093bf7d10 <col:36, col:51> col:51 used to 'unsigned char *'
| |-ParmVarDecl 0x20093bf7d90 <col:55, col:59> col:59 used tlen 'int'
| |-ParmVarDecl 0x20093bf7e10 <line:45:36, col:57> col:57 used from 'const unsigned char *'
| |-ParmVarDecl 0x20093bf7e90 <col:63, col:67> col:67 used flen 'int'
| |-ParmVarDecl 0x20093bf7f10 <line:46:36, col:40> col:40 used num 'int'
| `-CompoundStmt 0x20093bf26a8 <line:47:1, line:115:1>
|   |-DeclStmt 0x20093bf82a8 <line:48:5, col:13>
|   | |-VarDecl 0x20093bf81a8 <col:5, col:9> col:9 used i 'int'
|   | `-VarDecl 0x20093bf8228 <col:5, col:12> col:12 used j 'int'
|   |-DeclStmt 0x20093bf8340 <line:49:5, col:27>
|   | `-VarDecl 0x20093bf82d8 <col:5, col:26> col:26 used p 'const unsigned char *'
|   |-BinaryOperator 0x20093bf83c8 <line:51:5, col:9> 'const unsigned char *' '='
|   | |-DeclRefExpr 0x20093bf8358 <col:5> 'const unsigned char *' lvalue Var 0x20093bf82d8 'p' 'const unsigned char *'
|   | `-ImplicitCastExpr 0x20093bf83b0 <col:9> 'const unsigned char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x20093bf8390 <col:9> 'const unsigned char *' lvalue ParmVar 0x20093bf7e10 'from' 'const unsigned char *'
|   |-IfStmt 0x20093bf84b8 <line:60:5, line:61:17>
|   | |-BinaryOperator 0x20093bf8448 <line:60:9, col:15> 'int' '<'
|   | | |-ImplicitCastExpr 0x20093bf8430 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x20093bf83e8 <col:9> 'int' lvalue ParmVar 0x20093bf7f10 'num' 'int'
|   | | `-IntegerLiteral 0x20093bf8408 <col:15> 'int' 11
|   | `-ReturnStmt 0x20093bf84a8 <line:61:9, col:17>
|   |   `-UnaryOperator 0x20093bf8490 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x20093bf8468 <col:17> 'int' 1
|   |-IfStmt 0x20093bf8740 <line:64:5, line:71:5>
|   | |-BinaryOperator 0x20093bf8540 <line:64:9, col:16> 'int' '=='
|   | | |-ImplicitCastExpr 0x20093bf8510 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x20093bf84d0 <col:9> 'int' lvalue ParmVar 0x20093bf7f10 'num' 'int'
|   | | `-ImplicitCastExpr 0x20093bf8528 <col:16> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x20093bf84f0 <col:16> 'int' lvalue ParmVar 0x20093bf7e90 'flen' 'int'
|   | `-CompoundStmt 0x20093bf8720 <col:22, line:71:5>
|   |   |-IfStmt 0x20093bf86d0 <line:65:9, line:69:9>
|   |   | |-BinaryOperator 0x20093bf8628 <line:65:13, col:23> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x20093bf8610 <col:13, col:18> 'int' <IntegralCast>
|   |   | | | `-ImplicitCastExpr 0x20093bf85f8 <col:13, col:18> 'unsigned char' <LValueToRValue>
|   |   | | |   `-ParenExpr 0x20093bf85b0 <col:13, col:18> 'const unsigned char' lvalue
|   |   | | |     `-UnaryOperator 0x20093bf8598 <col:14, col:16> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   | | |       `-UnaryOperator 0x20093bf8580 <col:15, col:16> 'const unsigned char *' postfix '++'
|   |   | | |         `-DeclRefExpr 0x20093bf8560 <col:15> 'const unsigned char *' lvalue Var 0x20093bf82d8 'p' 'const unsigned char *'
|   |   | | `-IntegerLiteral 0x20093bf85d0 <col:23> 'int' 0
|   |   | `-CompoundStmt 0x20093bf86b8 <col:29, line:69:9>
|   |   |   `-ReturnStmt 0x20093bf86a8 <line:68:13, col:21>
|   |   |     `-UnaryOperator 0x20093bf8690 <col:20, col:21> 'int' prefix '-'
|   |   |       `-IntegerLiteral 0x20093bf8668 <col:21> 'int' 1
|   |   `-UnaryOperator 0x20093bf8708 <line:70:9, col:13> 'int' postfix '--'
|   |     `-DeclRefExpr 0x20093bf86e8 <col:9> 'int' lvalue ParmVar 0x20093bf7e90 'flen' 'int'
|   |-IfStmt 0x20093bf8a68 <line:73:5, line:77:5>
|   | |-BinaryOperator 0x20093bf89a0 <line:73:9, col:47> 'int' '||'
|   | | |-ParenExpr 0x20093bf8850 <col:9, col:27> 'int'
|   | | | `-BinaryOperator 0x20093bf8830 <col:10, col:26> 'int' '!='
|   | | |   |-ImplicitCastExpr 0x20093bf8818 <col:10> 'int' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x20093bf8758 <col:10> 'int' lvalue ParmVar 0x20093bf7f10 'num' 'int'
|   | | |   `-ParenExpr 0x20093bf87f8 <col:17, col:26> 'int'
|   | | |     `-BinaryOperator 0x20093bf87d8 <col:18, col:25> 'int' '+'
|   | | |       |-ImplicitCastExpr 0x20093bf87c0 <col:18> 'int' <LValueToRValue>
|   | | |       | `-DeclRefExpr 0x20093bf8778 <col:18> 'int' lvalue ParmVar 0x20093bf7e90 'flen' 'int'
|   | | |       `-IntegerLiteral 0x20093bf8798 <col:25> 'int' 1
|   | | `-ParenExpr 0x20093bf8980 <col:32, col:47> 'int'
|   | |   `-BinaryOperator 0x20093bf8960 <col:33, col:43> 'int' '!='
|   | |     |-ImplicitCastExpr 0x20093bf8948 <col:33, col:38> 'int' <IntegralCast>
|   | |     | `-ImplicitCastExpr 0x20093bf8930 <col:33, col:38> 'unsigned char' <LValueToRValue>
|   | |     |   `-UnaryOperator 0x20093bf88f0 <col:33, col:38> 'const unsigned char' lvalue prefix '*' cannot overflow
|   | |     |     `-ParenExpr 0x20093bf88d0 <col:34, col:38> 'const unsigned char *'
|   | |     |       `-UnaryOperator 0x20093bf88b8 <col:35, col:36> 'const unsigned char *' postfix '++'
|   | |     |         `-DeclRefExpr 0x20093bf8898 <col:35> 'const unsigned char *' lvalue Var 0x20093bf82d8 'p' 'const unsigned char *'
|   | |     `-IntegerLiteral 0x20093bf8908 <col:43> 'int' 1
|   | `-CompoundStmt 0x20093bf8a50 <col:50, line:77:5>
|   |   `-ReturnStmt 0x20093bf8a40 <line:76:9, col:19>
|   |     `-ParenExpr 0x20093bf8a20 <col:16, col:19> 'int'
|   |       `-UnaryOperator 0x20093bf8a08 <col:17, col:18> 'int' prefix '-'
|   |         `-IntegerLiteral 0x20093bf89e0 <col:18> 'int' 1
|   |-BinaryOperator 0x20093bf8b38 <line:80:5, col:16> 'int' '='
|   | |-DeclRefExpr 0x20093bf8a80 <col:5> 'int' lvalue Var 0x20093bf8228 'j' 'int'
|   | `-BinaryOperator 0x20093bf8b18 <col:9, col:16> 'int' '-'
|   |   |-ImplicitCastExpr 0x20093bf8b00 <col:9> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x20093bf8ab8 <col:9> 'int' lvalue ParmVar 0x20093bf7e90 'flen' 'int'
|   |   `-IntegerLiteral 0x20093bf8ad8 <col:16> 'int' 1
|   |-ForStmt 0x20093bf8fe8 <line:81:5, line:93:5>
|   | |-BinaryOperator 0x20093bf8bb8 <line:81:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x20093bf8b58 <col:10> 'int' lvalue Var 0x20093bf81a8 'i' 'int'
|   | | `-IntegerLiteral 0x20093bf8b90 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x20093bf8c48 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x20093bf8c18 <col:17> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x20093bf8bd8 <col:17> 'int' lvalue Var 0x20093bf81a8 'i' 'int'
|   | | `-ImplicitCastExpr 0x20093bf8c30 <col:21> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x20093bf8bf8 <col:21> 'int' lvalue Var 0x20093bf8228 'j' 'int'
|   | |-UnaryOperator 0x20093bf8c88 <col:24, col:25> 'int' postfix '++'
|   | | `-DeclRefExpr 0x20093bf8c68 <col:24> 'int' lvalue Var 0x20093bf81a8 'i' 'int'
|   | `-CompoundStmt 0x20093bf8fc8 <col:29, line:93:5>
|   |   |-IfStmt 0x20093bf8f78 <line:82:9, line:91:9>
|   |   | |-BinaryOperator 0x20093bf8d48 <line:82:13, col:19> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x20093bf8d30 <col:13, col:14> 'int' <IntegralCast>
|   |   | | | `-ImplicitCastExpr 0x20093bf8d18 <col:13, col:14> 'unsigned char' <LValueToRValue>
|   |   | | |   `-UnaryOperator 0x20093bf8cd8 <col:13, col:14> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   | | |     `-ImplicitCastExpr 0x20093bf8cc0 <col:14> 'const unsigned char *' <LValueToRValue>
|   |   | | |       `-DeclRefExpr 0x20093bf8ca0 <col:14> 'const unsigned char *' lvalue Var 0x20093bf82d8 'p' 'const unsigned char *'
|   |   | | `-IntegerLiteral 0x20093bf8cf0 <col:19> 'int' 255
|   |   | `-CompoundStmt 0x20093bf8f60 <col:25, line:91:9>
|   |   |   `-IfStmt 0x20093bf8f38 <line:83:13, line:90:13> has_else
|   |   |     |-BinaryOperator 0x20093bf8e10 <line:83:17, col:23> 'int' '=='
|   |   |     | |-ImplicitCastExpr 0x20093bf8df8 <col:17, col:18> 'int' <IntegralCast>
|   |   |     | | `-ImplicitCastExpr 0x20093bf8de0 <col:17, col:18> 'unsigned char' <LValueToRValue>
|   |   |     | |   `-UnaryOperator 0x20093bf8da0 <col:17, col:18> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   |     | |     `-ImplicitCastExpr 0x20093bf8d88 <col:18> 'const unsigned char *' <LValueToRValue>
|   |   |     | |       `-DeclRefExpr 0x20093bf8d68 <col:18> 'const unsigned char *' lvalue Var 0x20093bf82d8 'p' 'const unsigned char *'
|   |   |     | `-IntegerLiteral 0x20093bf8db8 <col:23> 'int' 0
|   |   |     |-CompoundStmt 0x20093bf8e70 <col:26, line:86:13>
|   |   |     | |-UnaryOperator 0x20093bf8e50 <line:84:17, col:18> 'const unsigned char *' postfix '++'
|   |   |     | | `-DeclRefExpr 0x20093bf8e30 <col:17> 'const unsigned char *' lvalue Var 0x20093bf82d8 'p' 'const unsigned char *'
|   |   |     | `-BreakStmt 0x20093bf8e68 <line:85:17>
|   |   |     `-CompoundStmt 0x20093bf8f20 <line:86:20, line:90:13>
|   |   |       `-ReturnStmt 0x20093bf8f10 <line:89:17, col:27>
|   |   |         `-ParenExpr 0x20093bf8ef0 <col:24, col:27> 'int'
|   |   |           `-UnaryOperator 0x20093bf8ed8 <col:25, col:26> 'int' prefix '-'
|   |   |             `-IntegerLiteral 0x20093bf8eb0 <col:26> 'int' 1
|   |   `-UnaryOperator 0x20093bf8fb0 <line:92:9, col:10> 'const unsigned char *' postfix '++'
|   |     `-DeclRefExpr 0x20093bf8f90 <col:9> 'const unsigned char *' lvalue Var 0x20093bf82d8 'p' 'const unsigned char *'
|   |-IfStmt 0x20093bf2108 <line:95:5, line:99:5>
|   | |-BinaryOperator 0x20093bf9090 <line:95:9, col:14> 'int' '=='
|   | | |-ImplicitCastExpr 0x20093bf9060 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x20093bf9020 <col:9> 'int' lvalue Var 0x20093bf81a8 'i' 'int'
|   | | `-ImplicitCastExpr 0x20093bf9078 <col:14> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x20093bf9040 <col:14> 'int' lvalue Var 0x20093bf8228 'j' 'int'
|   | `-CompoundStmt 0x20093bf20f0 <col:17, line:99:5>
|   |   `-ReturnStmt 0x20093bf9130 <line:98:9, col:19>
|   |     `-ParenExpr 0x20093bf9110 <col:16, col:19> 'int'
|   |       `-UnaryOperator 0x20093bf90f8 <col:17, col:18> 'int' prefix '-'
|   |         `-IntegerLiteral 0x20093bf90d0 <col:18> 'int' 1
|   |-IfStmt 0x20093bf2248 <line:101:5, line:105:5>
|   | |-BinaryOperator 0x20093bf2180 <line:101:9, col:13> 'int' '<'
|   | | |-ImplicitCastExpr 0x20093bf2168 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x20093bf2120 <col:9> 'int' lvalue Var 0x20093bf81a8 'i' 'int'
|   | | `-IntegerLiteral 0x20093bf2140 <col:13> 'int' 8
|   | `-CompoundStmt 0x20093bf2230 <col:16, line:105:5>
|   |   `-ReturnStmt 0x20093bf2220 <line:104:9, col:19>
|   |     `-ParenExpr 0x20093bf2200 <col:16, col:19> 'int'
|   |       `-UnaryOperator 0x20093bf21e8 <col:17, col:18> 'int' prefix '-'
|   |         `-IntegerLiteral 0x20093bf21c0 <col:18> 'int' 1
|   |-UnaryOperator 0x20093bf2280 <line:106:5, col:6> 'int' postfix '++'
|   | `-DeclRefExpr 0x20093bf2260 <col:5> 'int' lvalue Var 0x20093bf81a8 'i' 'int'
|   |-CompoundAssignOperator 0x20093bf22f0 <line:107:5, col:10> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-DeclRefExpr 0x20093bf2298 <col:5> 'int' lvalue Var 0x20093bf8228 'j' 'int'
|   | `-ImplicitCastExpr 0x20093bf22d8 <col:10> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x20093bf22b8 <col:10> 'int' lvalue Var 0x20093bf81a8 'i' 'int'
|   |-IfStmt 0x20093bf2458 <line:108:5, line:111:5>
|   | |-BinaryOperator 0x20093bf2390 <line:108:9, col:13> 'int' '>'
|   | | |-ImplicitCastExpr 0x20093bf2360 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x20093bf2320 <col:9> 'int' lvalue Var 0x20093bf8228 'j' 'int'
|   | | `-ImplicitCastExpr 0x20093bf2378 <col:13> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x20093bf2340 <col:13> 'int' lvalue ParmVar 0x20093bf7d90 'tlen' 'int'
|   | `-CompoundStmt 0x20093bf2440 <col:19, line:111:5>
|   |   `-ReturnStmt 0x20093bf2430 <line:110:9, col:19>
|   |     `-ParenExpr 0x20093bf2410 <col:16, col:19> 'int'
|   |       `-UnaryOperator 0x20093bf23f8 <col:17, col:18> 'int' prefix '-'
|   |         `-IntegerLiteral 0x20093bf23d0 <col:18> 'int' 1
|   |-CallExpr 0x20093bf2590 <line:112:5, col:34> 'void *'
|   | |-ImplicitCastExpr 0x20093bf2578 <col:5> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x20093bf2470 <col:5> 'void *(void *, const void *, unsigned long long)' Function 0x20093bf7830 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   | |-ImplicitCastExpr 0x20093bf25e0 <col:12> 'void *' <BitCast>
|   | | `-ImplicitCastExpr 0x20093bf25c8 <col:12> 'unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x20093bf2490 <col:12> 'unsigned char *' lvalue ParmVar 0x20093bf7d10 'to' 'unsigned char *'
|   | |-ImplicitCastExpr 0x20093bf2610 <col:16> 'const void *' <BitCast>
|   | | `-ImplicitCastExpr 0x20093bf25f8 <col:16> 'const unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x20093bf24b0 <col:16> 'const unsigned char *' lvalue Var 0x20093bf82d8 'p' 'const unsigned char *'
|   | `-ImplicitCastExpr 0x20093bf2628 <col:19, col:33> 'unsigned long long' <IntegralCast>
|   |   `-CStyleCastExpr 0x20093bf2520 <col:19, col:33> 'unsigned int' <IntegralCast>
|   |     `-ImplicitCastExpr 0x20093bf2508 <col:33> 'int' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0x20093bf24d0 <col:33> 'int' lvalue Var 0x20093bf8228 'j' 'int'
|   `-ReturnStmt 0x20093bf2698 <line:114:5, col:14>
|     `-ImplicitCastExpr 0x20093bf2680 <col:12, col:14> 'int' <LValueToRValue>
|       `-ParenExpr 0x20093bf2660 <col:12, col:14> 'int' lvalue
|         `-DeclRefExpr 0x20093bf2640 <col:13> 'int' lvalue Var 0x20093bf8228 'j' 'int'
|-FunctionDecl 0x20093bf29d8 <line:117:1, line:152:1> line:117:5 RSA_padding_add_PKCS1_type_2 'int (unsigned char *, int, const unsigned char *, int)'
| |-ParmVarDecl 0x20093bf2748 <col:34, col:49> col:49 used to 'unsigned char *'
| |-ParmVarDecl 0x20093bf27c8 <col:53, col:57> col:57 used tlen 'int'
| |-ParmVarDecl 0x20093bf2848 <line:118:34, col:55> col:55 used from 'const unsigned char *'
| |-ParmVarDecl 0x20093bf28c8 <col:61, col:65> col:65 used flen 'int'
| `-CompoundStmt 0x20093c08bf8 <line:119:1, line:152:1>
|   |-DeclStmt 0x20093bf2bc8 <line:120:5, col:13>
|   | |-VarDecl 0x20093bf2ac8 <col:5, col:9> col:9 used i 'int'
|   | `-VarDecl 0x20093bf2b48 <col:5, col:12> col:12 used j 'int'
|   |-DeclStmt 0x20093bf2c60 <line:121:5, col:21>
|   | `-VarDecl 0x20093bf2bf8 <col:5, col:20> col:20 used p 'unsigned char *'
|   |-IfStmt 0x20093bf2e00 <line:123:5, line:127:5>
|   | |-BinaryOperator 0x20093bf2d50 <line:123:9, col:26> 'int' '>'
|   | | |-ImplicitCastExpr 0x20093bf2d38 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x20093bf2c78 <col:9> 'int' lvalue ParmVar 0x20093bf28c8 'flen' 'int'
|   | | `-ParenExpr 0x20093bf2d18 <col:16, col:26> 'int'
|   | |   `-BinaryOperator 0x20093bf2cf8 <col:17, col:24> 'int' '-'
|   | |     |-ImplicitCastExpr 0x20093bf2ce0 <col:17> 'int' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x20093bf2c98 <col:17> 'int' lvalue ParmVar 0x20093bf27c8 'tlen' 'int'
|   | |     `-IntegerLiteral 0x20093bf2cb8 <col:24> 'int' 11
|   | `-CompoundStmt 0x20093bf2de8 <col:29, line:127:5>
|   |   `-ReturnStmt 0x20093bf2dd8 <line:126:9, col:18>
|   |     `-ParenExpr 0x20093bf2db8 <col:16, col:18> 'int'
|   |       `-IntegerLiteral 0x20093bf2d90 <col:17> 'int' 0
|   |-BinaryOperator 0x20093bf2ec8 <line:129:5, col:26> 'unsigned char *' '='
|   | |-DeclRefExpr 0x20093bf2e18 <col:5> 'unsigned char *' lvalue Var 0x20093bf2bf8 'p' 'unsigned char *'
|   | `-CStyleCastExpr 0x20093bf2ea0 <col:9, col:26> 'unsigned char *' <NoOp>
|   |   `-ImplicitCastExpr 0x20093bf2e88 <col:26> 'unsigned char *' <LValueToRValue> part_of_explicit_cast
|   |     `-DeclRefExpr 0x20093bf2e50 <col:26> 'unsigned char *' lvalue ParmVar 0x20093bf2748 'to' 'unsigned char *'
|   |-BinaryOperator 0x20093bf2f98 <line:131:5, col:14> 'unsigned char' '='
|   | |-UnaryOperator 0x20093bf2f40 <col:5, col:10> 'unsigned char' lvalue prefix '*' cannot overflow
|   | | `-ParenExpr 0x20093bf2f20 <col:6, col:10> 'unsigned char *'
|   | |   `-UnaryOperator 0x20093bf2f08 <col:7, col:8> 'unsigned char *' postfix '++'
|   | |     `-DeclRefExpr 0x20093bf2ee8 <col:7> 'unsigned char *' lvalue Var 0x20093bf2bf8 'p' 'unsigned char *'
|   | `-ImplicitCastExpr 0x20093bf2f80 <col:14> 'unsigned char' <IntegralCast>
|   |   `-IntegerLiteral 0x20093bf2f58 <col:14> 'int' 0
|   |-BinaryOperator 0x20093bf3068 <line:132:5, col:14> 'unsigned char' '='
|   | |-UnaryOperator 0x20093bf3010 <col:5, col:10> 'unsigned char' lvalue prefix '*' cannot overflow
|   | | `-ParenExpr 0x20093bf2ff0 <col:6, col:10> 'unsigned char *'
|   | |   `-UnaryOperator 0x20093bf2fd8 <col:7, col:8> 'unsigned char *' postfix '++'
|   | |     `-DeclRefExpr 0x20093bf2fb8 <col:7> 'unsigned char *' lvalue Var 0x20093bf2bf8 'p' 'unsigned char *'
|   | `-ImplicitCastExpr 0x20093bf3050 <col:14> 'unsigned char' <IntegralCast>
|   |   `-IntegerLiteral 0x20093bf3028 <col:14> 'int' 2
|   |-BinaryOperator 0x20093c08128 <line:135:5, col:20> 'int' '='
|   | |-DeclRefExpr 0x20093bf3088 <col:5> 'int' lvalue Var 0x20093bf2b48 'j' 'int'
|   | `-BinaryOperator 0x20093c08108 <col:9, col:20> 'int' '-'
|   |   |-BinaryOperator 0x20093c080b0 <col:9, col:16> 'int' '-'
|   |   | |-ImplicitCastExpr 0x20093c08098 <col:9> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x20093bf30c0 <col:9> 'int' lvalue ParmVar 0x20093bf27c8 'tlen' 'int'
|   |   | `-IntegerLiteral 0x20093c08070 <col:16> 'int' 3
|   |   `-ImplicitCastExpr 0x20093c080f0 <col:20> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x20093c080d0 <col:20> 'int' lvalue ParmVar 0x20093bf28c8 'flen' 'int'
|   |-IfStmt 0x20093c083e0 <line:137:5, line:138:18>
|   | |-BinaryOperator 0x20093c08368 <line:137:9, col:29> 'int' '<='
|   | | |-CallExpr 0x20093c082e0 <col:9, col:24> 'int'
|   | | | |-ImplicitCastExpr 0x20093c082c8 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x20093c08238 <col:9> 'int ()' Function 0x20093c08170 'RAND_bytes' 'int ()'
|   | | | |-ImplicitCastExpr 0x20093c08310 <col:20> 'unsigned char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x20093c08258 <col:20> 'unsigned char *' lvalue Var 0x20093bf2bf8 'p' 'unsigned char *'
|   | | | `-ImplicitCastExpr 0x20093c08328 <col:23> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x20093c08278 <col:23> 'int' lvalue Var 0x20093bf2b48 'j' 'int'
|   | | `-IntegerLiteral 0x20093c08340 <col:29> 'int' 0
|   | `-ReturnStmt 0x20093c083d0 <line:138:9, col:18>
|   |   `-ParenExpr 0x20093c083b0 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x20093c08388 <col:17> 'int' 0
|   |-ForStmt 0x20093c088d8 <line:139:5, line:146:5>
|   | |-BinaryOperator 0x20093c08458 <line:139:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x20093c083f8 <col:10> 'int' lvalue Var 0x20093bf2ac8 'i' 'int'
|   | | `-IntegerLiteral 0x20093c08430 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x20093c084e8 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x20093c084b8 <col:17> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x20093c08478 <col:17> 'int' lvalue Var 0x20093bf2ac8 'i' 'int'
|   | | `-ImplicitCastExpr 0x20093c084d0 <col:21> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x20093c08498 <col:21> 'int' lvalue Var 0x20093bf2b48 'j' 'int'
|   | |-UnaryOperator 0x20093c08528 <col:24, col:25> 'int' postfix '++'
|   | | `-DeclRefExpr 0x20093c08508 <col:24> 'int' lvalue Var 0x20093bf2ac8 'i' 'int'
|   | `-CompoundStmt 0x20093c088b8 <col:29, line:146:5>
|   |   |-IfStmt 0x20093c08868 <line:140:9, line:144:32>
|   |   | |-BinaryOperator 0x20093c085d8 <line:140:13, col:19> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x20093c085c0 <col:13, col:14> 'int' <IntegralCast>
|   |   | | | `-ImplicitCastExpr 0x20093c085a8 <col:13, col:14> 'unsigned char' <LValueToRValue>
|   |   | | |   `-UnaryOperator 0x20093c08578 <col:13, col:14> 'unsigned char' lvalue prefix '*' cannot overflow
|   |   | | |     `-ImplicitCastExpr 0x20093c08560 <col:14> 'unsigned char *' <LValueToRValue>
|   |   | | |       `-DeclRefExpr 0x20093c08540 <col:14> 'unsigned char *' lvalue Var 0x20093bf2bf8 'p' 'unsigned char *'
|   |   | | `-CharacterLiteral 0x20093c08590 <col:19> 'int' 0
|   |   | `-DoStmt 0x20093c08848 <line:141:13, line:144:32>
|   |   |   |-CompoundStmt 0x20093c08778 <line:141:16, line:144:13>
|   |   |   | `-IfStmt 0x20093c08760 <line:142:17, line:143:30>
|   |   |   |   |-BinaryOperator 0x20093c086e8 <line:142:21, col:41> 'int' '<='
|   |   |   |   | |-CallExpr 0x20093c08678 <col:21, col:36> 'int'
|   |   |   |   | | |-ImplicitCastExpr 0x20093c08660 <col:21> 'int (*)()' <FunctionToPointerDecay>
|   |   |   |   | | | `-DeclRefExpr 0x20093c085f8 <col:21> 'int ()' Function 0x20093c08170 'RAND_bytes' 'int ()'
|   |   |   |   | | |-ImplicitCastExpr 0x20093c086a8 <col:32> 'unsigned char *' <LValueToRValue>
|   |   |   |   | | | `-DeclRefExpr 0x20093c08618 <col:32> 'unsigned char *' lvalue Var 0x20093bf2bf8 'p' 'unsigned char *'
|   |   |   |   | | `-IntegerLiteral 0x20093c08638 <col:35> 'int' 1
|   |   |   |   | `-IntegerLiteral 0x20093c086c0 <col:41> 'int' 0
|   |   |   |   `-ReturnStmt 0x20093c08750 <line:143:21, col:30>
|   |   |   |     `-ParenExpr 0x20093c08730 <col:28, col:30> 'int'
|   |   |   |       `-IntegerLiteral 0x20093c08708 <col:29> 'int' 0
|   |   |   `-BinaryOperator 0x20093c08828 <line:144:22, col:28> 'int' '=='
|   |   |     |-ImplicitCastExpr 0x20093c08810 <col:22, col:23> 'int' <IntegralCast>
|   |   |     | `-ImplicitCastExpr 0x20093c087f8 <col:22, col:23> 'unsigned char' <LValueToRValue>
|   |   |     |   `-UnaryOperator 0x20093c087c8 <col:22, col:23> 'unsigned char' lvalue prefix '*' cannot overflow
|   |   |     |     `-ImplicitCastExpr 0x20093c087b0 <col:23> 'unsigned char *' <LValueToRValue>
|   |   |     |       `-DeclRefExpr 0x20093c08790 <col:23> 'unsigned char *' lvalue Var 0x20093bf2bf8 'p' 'unsigned char *'
|   |   |     `-CharacterLiteral 0x20093c087e0 <col:28> 'int' 0
|   |   `-UnaryOperator 0x20093c088a0 <line:145:9, col:10> 'unsigned char *' postfix '++'
|   |     `-DeclRefExpr 0x20093c08880 <col:9> 'unsigned char *' lvalue Var 0x20093bf2bf8 'p' 'unsigned char *'
|   |-BinaryOperator 0x20093c089b0 <line:148:5, col:14> 'unsigned char' '='
|   | |-UnaryOperator 0x20093c08968 <col:5, col:10> 'unsigned char' lvalue prefix '*' cannot overflow
|   | | `-ParenExpr 0x20093c08948 <col:6, col:10> 'unsigned char *'
|   | |   `-UnaryOperator 0x20093c08930 <col:7, col:8> 'unsigned char *' postfix '++'
|   | |     `-DeclRefExpr 0x20093c08910 <col:7> 'unsigned char *' lvalue Var 0x20093bf2bf8 'p' 'unsigned char *'
|   | `-ImplicitCastExpr 0x20093c08998 <col:14> 'unsigned char' <IntegralCast>
|   |   `-CharacterLiteral 0x20093c08980 <col:14> 'int' 0
|   |-CallExpr 0x20093c08af0 <line:150:5, col:39> 'void *'
|   | |-ImplicitCastExpr 0x20093c08ad8 <col:5> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x20093c089d0 <col:5> 'void *(void *, const void *, unsigned long long)' Function 0x20093bf7830 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   | |-ImplicitCastExpr 0x20093c08b40 <col:12> 'void *' <BitCast>
|   | | `-ImplicitCastExpr 0x20093c08b28 <col:12> 'unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x20093c089f0 <col:12> 'unsigned char *' lvalue Var 0x20093bf2bf8 'p' 'unsigned char *'
|   | |-ImplicitCastExpr 0x20093c08b70 <col:15> 'const void *' <BitCast>
|   | | `-ImplicitCastExpr 0x20093c08b58 <col:15> 'const unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x20093c08a10 <col:15> 'const unsigned char *' lvalue ParmVar 0x20093bf2848 'from' 'const unsigned char *'
|   | `-ImplicitCastExpr 0x20093c08b88 <col:21, col:35> 'unsigned long long' <IntegralCast>
|   |   `-CStyleCastExpr 0x20093c08a80 <col:21, col:35> 'unsigned int' <IntegralCast>
|   |     `-ImplicitCastExpr 0x20093c08a68 <col:35> 'int' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0x20093c08a30 <col:35> 'int' lvalue ParmVar 0x20093bf28c8 'flen' 'int'
|   `-ReturnStmt 0x20093c08be8 <line:151:5, col:14>
|     `-ParenExpr 0x20093c08bc8 <col:12, col:14> 'int'
|       `-IntegerLiteral 0x20093c08ba0 <col:13> 'int' 1
`-FunctionDecl 0x20093c08fb0 <line:154:1, line:246:1> line:154:5 RSA_padding_check_PKCS1_type_2 'int (unsigned char *, int, const unsigned char *, int, int)'
  |-ParmVarDecl 0x20093c08c80 <col:36, col:51> col:51 used to 'unsigned char *'
  |-ParmVarDecl 0x20093c08d00 <col:55, col:59> col:59 used tlen 'int'
  |-ParmVarDecl 0x20093c08d80 <line:155:36, col:57> col:57 used from 'const unsigned char *'
  |-ParmVarDecl 0x20093c08e00 <col:63, col:67> col:67 used flen 'int'
  |-ParmVarDecl 0x20093c08e80 <line:156:36, col:40> col:40 used num 'int'
  `-CompoundStmt 0x20093c0a9e0 <line:157:1, line:246:1>
    |-DeclStmt 0x20093c09140 <line:158:5, col:10>
    | `-VarDecl 0x20093c090d8 <col:5, col:9> col:9 used i 'int'
    |-DeclStmt 0x20093c09278 <line:160:5, col:29>
    | `-VarDecl 0x20093c09170 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/before\crypto\rsa\rsa_pk1.c:160:20 used em 'unsigned char *' cinit
    |   `-ImplicitCastExpr 0x20093c09260 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <NullToPointer>
    |     `-ParenExpr 0x20093c09240 <col:17, col:27> 'void *'
    |       `-CStyleCastExpr 0x20093c09218 <col:18, col:26> 'void *' <NullToPointer>
    |         `-IntegerLiteral 0x20093c091d8 <col:26> 'int' 0
    |-DeclStmt 0x20093c093a8 <.//openssl//file_jk/before\crypto\rsa\rsa_pk1.c:161:5, col:39>
    | |-VarDecl 0x20093c092a8 <col:5, col:18> col:18 used good 'unsigned int'
    | `-VarDecl 0x20093c09328 <col:5, col:24> col:24 used found_zero_byte 'unsigned int'
    |-DeclStmt 0x20093c095c8 <line:162:5, col:45>
    | |-VarDecl 0x20093c093d8 <col:5, col:22> col:9 used zero_index 'int' cinit
    | | `-IntegerLiteral 0x20093c09440 <col:22> 'int' 0
    | |-VarDecl 0x20093c09480 <col:5, col:25> col:25 used msg_index 'int'
    | `-VarDecl 0x20093c09500 <col:5, col:44> col:36 used mlen 'int' cinit
    |   `-UnaryOperator 0x20093c09590 <col:43, col:44> 'int' prefix '-'
    |     `-IntegerLiteral 0x20093c09568 <col:44> 'int' 1
    |-IfStmt 0x20093c09750 <line:164:5, line:165:17>
    | |-BinaryOperator 0x20093c096e0 <line:164:9, col:28> 'int' '||'
    | | |-BinaryOperator 0x20093c09640 <col:9, col:16> 'int' '<'
    | | | |-ImplicitCastExpr 0x20093c09628 <col:9> 'int' <LValueToRValue>
    | | | | `-DeclRefExpr 0x20093c095e0 <col:9> 'int' lvalue ParmVar 0x20093c08d00 'tlen' 'int'
    | | | `-IntegerLiteral 0x20093c09600 <col:16> 'int' 0
    | | `-BinaryOperator 0x20093c096c0 <col:21, col:28> 'int' '<'
    | |   |-ImplicitCastExpr 0x20093c096a8 <col:21> 'int' <LValueToRValue>
    | |   | `-DeclRefExpr 0x20093c09660 <col:21> 'int' lvalue ParmVar 0x20093c08e00 'flen' 'int'
    | |   `-IntegerLiteral 0x20093c09680 <col:28> 'int' 0
    | `-ReturnStmt 0x20093c09740 <line:165:9, col:17>
    |   `-UnaryOperator 0x20093c09728 <col:16, col:17> 'int' prefix '-'
    |     `-IntegerLiteral 0x20093c09700 <col:17> 'int' 1
    |-IfStmt 0x20093c09860 <line:172:5, line:173:14>
    | |-BinaryOperator 0x20093c097d8 <line:172:9, col:16> 'int' '>'
    | | |-ImplicitCastExpr 0x20093c097a8 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x20093c09768 <col:9> 'int' lvalue ParmVar 0x20093c08e00 'flen' 'int'
    | | `-ImplicitCastExpr 0x20093c097c0 <col:16> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x20093c09788 <col:16> 'int' lvalue ParmVar 0x20093c08e80 'num' 'int'
    | `-GotoStmt 0x20093c09848 <line:173:9, col:14> 'err' 0x20093c097f8
    |-IfStmt 0x20093c09910 <line:175:5, line:176:14>
    | |-BinaryOperator 0x20093c098d8 <line:175:9, col:15> 'int' '<'
    | | |-ImplicitCastExpr 0x20093c098c0 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x20093c09878 <col:9> 'int' lvalue ParmVar 0x20093c08e80 'num' 'int'
    | | `-IntegerLiteral 0x20093c09898 <col:15> 'int' 11
    | `-GotoStmt 0x20093c098f8 <line:176:9, col:14> 'err' 0x20093c097f8
    |-IfStmt 0x20093c0a048 <line:178:5, line:194:5>
    | |-BinaryOperator 0x20093c09998 <line:178:9, col:17> 'int' '!='
    | | |-ImplicitCastExpr 0x20093c09968 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x20093c09928 <col:9> 'int' lvalue ParmVar 0x20093c08e00 'flen' 'int'
    | | `-ImplicitCastExpr 0x20093c09980 <col:17> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x20093c09948 <col:17> 'int' lvalue ParmVar 0x20093c08e80 'num' 'int'
    | `-CompoundStmt 0x20093c0a018 <col:22, line:194:5>
    |   |-BinaryOperator 0x20093c09b90 <line:179:9, col:32> 'unsigned char *' '='
    |   | |-DeclRefExpr 0x20093c099b8 <col:9> 'unsigned char *' lvalue Var 0x20093c09170 'em' 'unsigned char *'
    |   | `-ImplicitCastExpr 0x20093c09b78 <col:14, col:32> 'unsigned char *' <IntegralToPointer>
    |   |   `-CallExpr 0x20093c09b38 <col:14, col:32> 'int'
    |   |     |-ImplicitCastExpr 0x20093c09b20 <col:14> 'int (*)()' <FunctionToPointerDecay>
    |   |     | `-DeclRefExpr 0x20093c09ae0 <col:14> 'int ()' Function 0x20093c09a18 'OPENSSL_zalloc' 'int ()'
    |   |     `-ImplicitCastExpr 0x20093c09b60 <col:29> 'int' <LValueToRValue>
    |   |       `-DeclRefExpr 0x20093c09b00 <col:29> 'int' lvalue ParmVar 0x20093c08e80 'num' 'int'
    |   |-IfStmt 0x20093c09d30 <line:180:9, line:183:9>
    |   | |-BinaryOperator 0x20093c09c88 <line:180:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
    |   | | |-ImplicitCastExpr 0x20093c09c58 <.//openssl//file_jk/before\crypto\rsa\rsa_pk1.c:180:13> 'unsigned char *' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x20093c09bb0 <col:13> 'unsigned char *' lvalue Var 0x20093c09170 'em' 'unsigned char *'
    |   | | `-ImplicitCastExpr 0x20093c09c70 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <BitCast>
    |   | |   `-ParenExpr 0x20093c09c38 <col:17, col:27> 'void *'
    |   | |     `-CStyleCastExpr 0x20093c09c10 <col:18, col:26> 'void *' <NullToPointer>
    |   | |       `-IntegerLiteral 0x20093c09bd0 <col:26> 'int' 0
    |   | `-CompoundStmt 0x20093c09d18 <.//openssl//file_jk/before\crypto\rsa\rsa_pk1.c:180:25, line:183:9>
    |   |   `-ReturnStmt 0x20093c09d08 <line:182:13, col:21>
    |   |     `-UnaryOperator 0x20093c09cf0 <col:20, col:21> 'int' prefix '-'
    |   |       `-IntegerLiteral 0x20093c09cc8 <col:21> 'int' 1
    |   |-CallExpr 0x20093c09ed8 <line:192:9, col:43> 'void *'
    |   | |-ImplicitCastExpr 0x20093c09ec0 <col:9> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x20093c09d48 <col:9> 'void *(void *, const void *, unsigned long long)' Function 0x20093bf7830 'memcpy' 'void *(void *, const void *, unsigned long long)'
    |   | |-ImplicitCastExpr 0x20093c09f10 <col:16, col:27> 'void *' <BitCast>
    |   | | `-BinaryOperator 0x20093c09e30 <col:16, col:27> 'unsigned char *' '-'
    |   | |   |-BinaryOperator 0x20093c09dd8 <col:16, col:21> 'unsigned char *' '+'
    |   | |   | |-ImplicitCastExpr 0x20093c09da8 <col:16> 'unsigned char *' <LValueToRValue>
    |   | |   | | `-DeclRefExpr 0x20093c09d68 <col:16> 'unsigned char *' lvalue Var 0x20093c09170 'em' 'unsigned char *'
    |   | |   | `-ImplicitCastExpr 0x20093c09dc0 <col:21> 'int' <LValueToRValue>
    |   | |   |   `-DeclRefExpr 0x20093c09d88 <col:21> 'int' lvalue ParmVar 0x20093c08e80 'num' 'int'
    |   | |   `-ImplicitCastExpr 0x20093c09e18 <col:27> 'int' <LValueToRValue>
    |   | |     `-DeclRefExpr 0x20093c09df8 <col:27> 'int' lvalue ParmVar 0x20093c08e00 'flen' 'int'
    |   | |-ImplicitCastExpr 0x20093c09f40 <col:33> 'const void *' <BitCast>
    |   | | `-ImplicitCastExpr 0x20093c09f28 <col:33> 'const unsigned char *' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x20093c09e50 <col:33> 'const unsigned char *' lvalue ParmVar 0x20093c08d80 'from' 'const unsigned char *'
    |   | `-ImplicitCastExpr 0x20093c09f70 <col:39> 'unsigned long long' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x20093c09f58 <col:39> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x20093c09e70 <col:39> 'int' lvalue ParmVar 0x20093c08e00 'flen' 'int'
    |   `-BinaryOperator 0x20093c09ff8 <line:193:9, col:16> 'const unsigned char *' '='
    |     |-DeclRefExpr 0x20093c09f88 <col:9> 'const unsigned char *' lvalue ParmVar 0x20093c08d80 'from' 'const unsigned char *'
    |     `-ImplicitCastExpr 0x20093c09fe0 <col:16> 'const unsigned char *' <NoOp>
    |       `-ImplicitCastExpr 0x20093c09fc8 <col:16> 'unsigned char *' <LValueToRValue>
    |         `-DeclRefExpr 0x20093c09fa8 <col:16> 'unsigned char *' lvalue Var 0x20093c09170 'em' 'unsigned char *'
    |-BinaryOperator 0x20093c04260 <line:196:5, col:41> 'unsigned int' '='
    | |-DeclRefExpr 0x20093c0a060 <col:5> 'unsigned int' lvalue Var 0x20093c092a8 'good' 'unsigned int'
    | `-ImplicitCastExpr 0x20093c04248 <col:12, col:41> 'unsigned int' <IntegralCast>
    |   `-CallExpr 0x20093c041f0 <col:12, col:41> 'int'
    |     |-ImplicitCastExpr 0x20093c041d8 <col:12> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x20093c04138 <col:12> 'int ()' Function 0x20093c04070 'constant_time_is_zero' 'int ()'
    |     `-ImplicitCastExpr 0x20093c04230 <col:34, col:40> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x20093c04218 <col:34, col:40> 'unsigned char' <LValueToRValue>
    |         `-ArraySubscriptExpr 0x20093c041b8 <col:34, col:40> 'const unsigned char' lvalue
    |           |-ImplicitCastExpr 0x20093c041a0 <col:34> 'const unsigned char *' <LValueToRValue>
    |           | `-DeclRefExpr 0x20093c04158 <col:34> 'const unsigned char *' lvalue ParmVar 0x20093c08d80 'from' 'const unsigned char *'
    |           `-IntegerLiteral 0x20093c04178 <col:39> 'int' 0
    |-CompoundAssignOperator 0x20093c044e8 <line:197:5, col:40> 'unsigned int' '&=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
    | |-DeclRefExpr 0x20093c04280 <col:5> 'unsigned int' lvalue Var 0x20093c092a8 'good' 'unsigned int'
    | `-ImplicitCastExpr 0x20093c044d0 <col:13, col:40> 'unsigned int' <IntegralCast>
    |   `-CallExpr 0x20093c04470 <col:13, col:40> 'int'
    |     |-ImplicitCastExpr 0x20093c04458 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x20093c04390 <col:13> 'int ()' Function 0x20093c042c8 'constant_time_eq' 'int ()'
    |     |-ImplicitCastExpr 0x20093c044b8 <col:30, col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x20093c044a0 <col:30, col:36> 'unsigned char' <LValueToRValue>
    |     |   `-ArraySubscriptExpr 0x20093c04410 <col:30, col:36> 'const unsigned char' lvalue
    |     |     |-ImplicitCastExpr 0x20093c043f8 <col:30> 'const unsigned char *' <LValueToRValue>
    |     |     | `-DeclRefExpr 0x20093c043b0 <col:30> 'const unsigned char *' lvalue ParmVar 0x20093c08d80 'from' 'const unsigned char *'
    |     |     `-IntegerLiteral 0x20093c043d0 <col:35> 'int' 1
    |     `-IntegerLiteral 0x20093c04430 <col:39> 'int' 2
    |-BinaryOperator 0x20093c04590 <line:199:5, col:23> 'unsigned int' '='
    | |-DeclRefExpr 0x20093c04518 <col:5> 'unsigned int' lvalue Var 0x20093c09328 'found_zero_byte' 'unsigned int'
    | `-ImplicitCastExpr 0x20093c04578 <col:23> 'unsigned int' <IntegralCast>
    |   `-IntegerLiteral 0x20093c04550 <col:23> 'int' 0
    |-ForStmt 0x20093c04c60 <line:200:5, line:206:5>
    | |-BinaryOperator 0x20093c04610 <line:200:10, col:14> 'int' '='
    | | |-DeclRefExpr 0x20093c045b0 <col:10> 'int' lvalue Var 0x20093c090d8 'i' 'int'
    | | `-IntegerLiteral 0x20093c045e8 <col:14> 'int' 2
    | |-<<<NULL>>>
    | |-BinaryOperator 0x20093c046a0 <col:17, col:21> 'int' '<'
    | | |-ImplicitCastExpr 0x20093c04670 <col:17> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x20093c04630 <col:17> 'int' lvalue Var 0x20093c090d8 'i' 'int'
    | | `-ImplicitCastExpr 0x20093c04688 <col:21> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x20093c04650 <col:21> 'int' lvalue ParmVar 0x20093c08e80 'num' 'int'
    | |-UnaryOperator 0x20093c046e0 <col:26, col:27> 'int' postfix '++'
    | | `-DeclRefExpr 0x20093c046c0 <col:26> 'int' lvalue Var 0x20093c090d8 'i' 'int'
    | `-CompoundStmt 0x20093c04c38 <col:31, line:206:5>
    |   |-DeclStmt 0x20093c048b0 <line:201:9, col:62>
    |   | `-VarDecl 0x20093c04710 <col:9, col:61> col:22 used equals0 'unsigned int' cinit
    |   |   `-ImplicitCastExpr 0x20093c04898 <col:32, col:61> 'unsigned int' <IntegralCast>
    |   |     `-CallExpr 0x20093c04840 <col:32, col:61> 'int'
    |   |       |-ImplicitCastExpr 0x20093c04828 <col:32> 'int (*)()' <FunctionToPointerDecay>
    |   |       | `-DeclRefExpr 0x20093c04778 <col:32> 'int ()' Function 0x20093c04070 'constant_time_is_zero' 'int ()'
    |   |       `-ImplicitCastExpr 0x20093c04880 <col:54, col:60> 'int' <IntegralCast>
    |   |         `-ImplicitCastExpr 0x20093c04868 <col:54, col:60> 'unsigned char' <LValueToRValue>
    |   |           `-ArraySubscriptExpr 0x20093c04808 <col:54, col:60> 'const unsigned char' lvalue
    |   |             |-ImplicitCastExpr 0x20093c047d8 <col:54> 'const unsigned char *' <LValueToRValue>
    |   |             | `-DeclRefExpr 0x20093c04798 <col:54> 'const unsigned char *' lvalue ParmVar 0x20093c08d80 'from' 'const unsigned char *'
    |   |             `-ImplicitCastExpr 0x20093c047f0 <col:59> 'int' <LValueToRValue>
    |   |               `-DeclRefExpr 0x20093c047b8 <col:59> 'int' lvalue Var 0x20093c090d8 'i' 'int'
    |   |-BinaryOperator 0x20093c04b90 <line:202:9, line:204:48> 'int' '='
    |   | |-DeclRefExpr 0x20093c048c8 <line:202:9> 'int' lvalue Var 0x20093c093d8 'zero_index' 'int'
    |   | `-CallExpr 0x20093c04b28 <line:203:13, line:204:48> 'int'
    |   |   |-ImplicitCastExpr 0x20093c04b10 <line:203:13> 'int (*)()' <FunctionToPointerDecay>
    |   |   | `-DeclRefExpr 0x20093c049f0 <col:13> 'int ()' Function 0x20093c04928 'constant_time_select_int' 'int ()'
    |   |   |-BinaryOperator 0x20093c04ab0 <col:38, col:57> 'unsigned int' '&'
    |   |   | |-UnaryOperator 0x20093c04a48 <col:38, col:39> 'unsigned int' prefix '~' cannot overflow
    |   |   | | `-ImplicitCastExpr 0x20093c04a30 <col:39> 'unsigned int' <LValueToRValue>
    |   |   | |   `-DeclRefExpr 0x20093c04a10 <col:39> 'unsigned int' lvalue Var 0x20093c09328 'found_zero_byte' 'unsigned int'
    |   |   | `-ImplicitCastExpr 0x20093c04a98 <col:57> 'unsigned int' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x20093c04a60 <col:57> 'unsigned int' lvalue Var 0x20093c04710 'equals0' 'unsigned int'
    |   |   |-ImplicitCastExpr 0x20093c04b60 <col:66> 'int' <LValueToRValue>
    |   |   | `-DeclRefExpr 0x20093c04ad0 <col:66> 'int' lvalue Var 0x20093c090d8 'i' 'int'
    |   |   `-ImplicitCastExpr 0x20093c04b78 <line:204:38> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x20093c04af0 <col:38> 'int' lvalue Var 0x20093c093d8 'zero_index' 'int'
    |   `-CompoundAssignOperator 0x20093c04c08 <line:205:9, col:28> 'unsigned int' '|=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
    |     |-DeclRefExpr 0x20093c04bb0 <col:9> 'unsigned int' lvalue Var 0x20093c09328 'found_zero_byte' 'unsigned int'
    |     `-ImplicitCastExpr 0x20093c04bf0 <col:28> 'unsigned int' <LValueToRValue>
    |       `-DeclRefExpr 0x20093c04bd0 <col:28> 'unsigned int' lvalue Var 0x20093c04710 'equals0' 'unsigned int'
    |-CompoundAssignOperator 0x20093c04f50 <line:213:5, col:63> 'unsigned int' '&=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
    | |-DeclRefExpr 0x20093c04c98 <col:5> 'unsigned int' lvalue Var 0x20093c092a8 'good' 'unsigned int'
    | `-ImplicitCastExpr 0x20093c04f38 <col:13, col:63> 'unsigned int' <IntegralCast>
    |   `-CallExpr 0x20093c04f08 <col:13, col:63> 'int'
    |     |-ImplicitCastExpr 0x20093c04ef0 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x20093c04da8 <col:13> 'int ()' Function 0x20093c04ce0 'constant_time_ge' 'int ()'
    |     |-CStyleCastExpr 0x20093c04e58 <col:30, col:55> 'unsigned int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x20093c04e40 <col:44, col:55> 'int' <LValueToRValue> part_of_explicit_cast
    |     |   `-ParenExpr 0x20093c04e20 <col:44, col:55> 'int' lvalue
    |     |     `-DeclRefExpr 0x20093c04dc8 <col:45> 'int' lvalue Var 0x20093c093d8 'zero_index' 'int'
    |     `-BinaryOperator 0x20093c04ed0 <col:58, col:62> 'int' '+'
    |       |-IntegerLiteral 0x20093c04e80 <col:58> 'int' 2
    |       `-IntegerLiteral 0x20093c04ea8 <col:62> 'int' 8
    |-BinaryOperator 0x20093c0a0b0 <line:219:5, col:30> 'int' '='
    | |-DeclRefExpr 0x20093c04f80 <col:5> 'int' lvalue Var 0x20093c09480 'msg_index' 'int'
    | `-BinaryOperator 0x20093c0a090 <col:17, col:30> 'int' '+'
    |   |-ImplicitCastExpr 0x20093c05000 <col:17> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x20093c04fb8 <col:17> 'int' lvalue Var 0x20093c093d8 'zero_index' 'int'
    |   `-IntegerLiteral 0x20093c04fd8 <col:30> 'int' 1
    |-BinaryOperator 0x20093c0a198 <line:220:5, col:18> 'int' '='
    | |-DeclRefExpr 0x20093c0a0d0 <col:5> 'int' lvalue Var 0x20093c09500 'mlen' 'int'
    | `-BinaryOperator 0x20093c0a178 <col:12, col:18> 'int' '-'
    |   |-ImplicitCastExpr 0x20093c0a148 <col:12> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x20093c0a108 <col:12> 'int' lvalue ParmVar 0x20093c08e80 'num' 'int'
    |   `-ImplicitCastExpr 0x20093c0a160 <col:18> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x20093c0a128 <col:18> 'int' lvalue Var 0x20093c09480 'msg_index' 'int'
    |-CompoundAssignOperator 0x20093c0a3c8 <line:226:5, col:72> 'unsigned int' '&=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
    | |-DeclRefExpr 0x20093c0a1b8 <col:5> 'unsigned int' lvalue Var 0x20093c092a8 'good' 'unsigned int'
    | `-ImplicitCastExpr 0x20093c0a3b0 <col:13, col:72> 'unsigned int' <IntegralCast>
    |   `-CallExpr 0x20093c0a380 <col:13, col:72> 'int'
    |     |-ImplicitCastExpr 0x20093c0a368 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x20093c0a1d8 <col:13> 'int ()' Function 0x20093c04ce0 'constant_time_ge' 'int ()'
    |     |-CStyleCastExpr 0x20093c0a288 <col:30, col:49> 'unsigned int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x20093c0a270 <col:44, col:49> 'int' <LValueToRValue> part_of_explicit_cast
    |     |   `-ParenExpr 0x20093c0a250 <col:44, col:49> 'int' lvalue
    |     |     `-DeclRefExpr 0x20093c0a1f8 <col:45> 'int' lvalue ParmVar 0x20093c08d00 'tlen' 'int'
    |     `-CStyleCastExpr 0x20093c0a340 <col:52, col:71> 'unsigned int' <IntegralCast>
    |       `-ImplicitCastExpr 0x20093c0a328 <col:66, col:71> 'int' <LValueToRValue> part_of_explicit_cast
    |         `-ParenExpr 0x20093c0a308 <col:66, col:71> 'int' lvalue
    |           `-DeclRefExpr 0x20093c0a2b0 <col:67> 'int' lvalue Var 0x20093c09500 'mlen' 'int'
    |-IfStmt 0x20093c0a500 <line:233:5, line:236:5>
    | |-UnaryOperator 0x20093c0a430 <line:233:9, col:10> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x20093c0a418 <col:10> 'unsigned int' <LValueToRValue>
    | |   `-DeclRefExpr 0x20093c0a3f8 <col:10> 'unsigned int' lvalue Var 0x20093c092a8 'good' 'unsigned int'
    | `-CompoundStmt 0x20093c0a4e0 <col:16, line:236:5>
    |   |-BinaryOperator 0x20093c0a4a8 <line:234:9, col:17> 'int' '='
    |   | |-DeclRefExpr 0x20093c0a448 <col:9> 'int' lvalue Var 0x20093c09500 'mlen' 'int'
    |   | `-UnaryOperator 0x20093c0a490 <col:16, col:17> 'int' prefix '-'
    |   |   `-IntegerLiteral 0x20093c0a468 <col:17> 'int' 1
    |   `-GotoStmt 0x20093c0a4c8 <line:235:9, col:14> 'err' 0x20093c097f8
    |-CallExpr 0x20093c0a650 <line:238:5, col:38> 'void *'
    | |-ImplicitCastExpr 0x20093c0a638 <col:5> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x20093c0a518 <col:5> 'void *(void *, const void *, unsigned long long)' Function 0x20093bf7830 'memcpy' 'void *(void *, const void *, unsigned long long)'
    | |-ImplicitCastExpr 0x20093c0a6a0 <col:12> 'void *' <BitCast>
    | | `-ImplicitCastExpr 0x20093c0a688 <col:12> 'unsigned char *' <LValueToRValue>
    | |   `-DeclRefExpr 0x20093c0a538 <col:12> 'unsigned char *' lvalue ParmVar 0x20093c08c80 'to' 'unsigned char *'
    | |-ImplicitCastExpr 0x20093c0a6b8 <col:16, col:23> 'const void *' <BitCast>
    | | `-BinaryOperator 0x20093c0a5c8 <col:16, col:23> 'const unsigned char *' '+'
    | |   |-ImplicitCastExpr 0x20093c0a598 <col:16> 'const unsigned char *' <LValueToRValue>
    | |   | `-DeclRefExpr 0x20093c0a558 <col:16> 'const unsigned char *' lvalue ParmVar 0x20093c08d80 'from' 'const unsigned char *'
    | |   `-ImplicitCastExpr 0x20093c0a5b0 <col:23> 'int' <LValueToRValue>
    | |     `-DeclRefExpr 0x20093c0a578 <col:23> 'int' lvalue Var 0x20093c09480 'msg_index' 'int'
    | `-ImplicitCastExpr 0x20093c0a6e8 <col:34> 'unsigned long long' <IntegralCast>
    |   `-ImplicitCastExpr 0x20093c0a6d0 <col:34> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x20093c0a5e8 <col:34> 'int' lvalue Var 0x20093c09500 'mlen' 'int'
    |-LabelStmt 0x20093c0a8c8 <line:240:2, line:241:31> 'err'
    | `-CallExpr 0x20093c0a868 <col:5, col:31> 'int'
    |   |-ImplicitCastExpr 0x20093c0a850 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x20093c0a7f0 <col:5> 'int ()' Function 0x20093c0a728 'OPENSSL_clear_free' 'int ()'
    |   |-ImplicitCastExpr 0x20093c0a898 <col:24> 'unsigned char *' <LValueToRValue>
    |   | `-DeclRefExpr 0x20093c0a810 <col:24> 'unsigned char *' lvalue Var 0x20093c09170 'em' 'unsigned char *'
    |   `-ImplicitCastExpr 0x20093c0a8b0 <col:28> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x20093c0a830 <col:28> 'int' lvalue ParmVar 0x20093c08e80 'num' 'int'
    `-ReturnStmt 0x20093c0a9d0 <line:245:5, col:12>
      `-ImplicitCastExpr 0x20093c0a9b8 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x20093c0a998 <col:12> 'int' lvalue Var 0x20093c09500 'mlen' 'int'
