TranslationUnitDecl 0x1572f667c88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1572f668520 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1572f668220 '__int128'
|-TypedefDecl 0x1572f668590 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1572f668240 'unsigned __int128'
|-TypedefDecl 0x1572f6688c8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1572f668680 'struct __NSConstantString_tag'
|   `-Record 0x1572f6685e8 '__NSConstantString_tag'
|-TypedefDecl 0x1572f668938 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x1572f667e60 'unsigned long long'
|-TypedefDecl 0x1572f6689d0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1572f668990 'char *'
|   `-BuiltinType 0x1572f667d20 'char'
|-TypedefDecl 0x1572f668a40 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1572f668990 'char *'
|   `-BuiltinType 0x1572f667d20 'char'
|-TypedefDecl 0x1572f668b00 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x1572f667e60 'unsigned long long'
|-TypedefDecl 0x1572f668b70 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x1572f668990 'char *'
|   `-BuiltinType 0x1572f667d20 'char'
|-FunctionDecl 0x157311ae810 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x157311ae8b0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x157311ae920 <col:21> Implicit
|-FunctionDecl 0x157311ae978 prev 0x157311ae810 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x157311ae6a0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x157311aea68 <col:21> Inherited Implicit
|-TypedefDecl 0x157311aeaa8 prev 0x1572f668938 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x1572f667e60 'unsigned long long'
|-TypedefDecl 0x157311aeb50 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x157311aeb20 'size_t' sugar
|   |-Typedef 0x157311aeaa8 'size_t'
|   `-BuiltinType 0x1572f667e60 'unsigned long long'
|-TypedefDecl 0x157311aebc0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x1572f667dc0 'long long'
|-TypedefDecl 0x157311aec30 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x1572f667dc0 'long long'
|-TypedefDecl 0x157311aeca0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x1572f667e00 'unsigned short'
|-TypedefDecl 0x157311aed10 <line:541:1, col:24> col:24 referenced wint_t 'unsigned short'
| `-BuiltinType 0x1572f667e00 'unsigned short'
|-TypedefDecl 0x157311aed80 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x1572f667e00 'unsigned short'
|-TypedefDecl 0x157311aedf0 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x1572f667d80 'int'
|-TypedefDecl 0x157311aee60 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x1572f667da0 'long'
|-TypedefDecl 0x157311aeed0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x1572f667dc0 'long long'
|-TypedefDecl 0x157311aef60 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x157311aef30 '__time64_t' sugar
|   |-Typedef 0x157311aeed0 '__time64_t'
|   `-BuiltinType 0x1572f667dc0 'long long'
|-FunctionDecl 0x157311af0d8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x157311af2f8 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x157311eb4b0 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x157311af438 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x157311af4b0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x157311af528 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x157311af5a8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x157311eb250 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x157311eb590 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x157311eb650 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x157311eb7c0 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x157311eb770 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x157311eb710 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x157311eb630 'struct threadlocaleinfostruct'
|       `-Record 0x157311f02a0 'threadlocaleinfostruct'
|-TypedefDecl 0x157311eb8d0 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x157311eb880 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x157311eb820 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x157311eb6f0 'struct threadmbcinfostruct'
|       `-Record 0x157311eb650 'threadmbcinfostruct'
|-RecordDecl 0x157311eb928 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x157311eb9e0 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x157311ebaa0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x157311ebb30 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x157311ebbc0 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x157311ebc78 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x157311ebc20 'struct localeinfo_struct' sugar
|   `-RecordType 0x157311eba80 'struct localeinfo_struct'
|     `-Record 0x157311eb9e0 'localeinfo_struct'
|-TypedefDecl 0x157311ebd50 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x157311ebd00 'struct localeinfo_struct *'
|   `-ElaboratedType 0x157311ebc20 'struct localeinfo_struct' sugar
|     `-RecordType 0x157311eba80 'struct localeinfo_struct'
|       `-Record 0x157311eb9e0 'localeinfo_struct'
|-RecordDecl 0x157311ebdc8 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x157311ebe80 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x157311ebef8 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x157311ebfb8 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x157311ec050 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x157311ec0c0 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x157311ec178 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x157311ec120 'struct localerefcount' sugar
|   `-RecordType 0x157311ebe60 'struct localerefcount'
|     `-Record 0x157311ebdc8 'localerefcount'
|-RecordDecl 0x157311f02a0 prev 0x157311eb590 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x157311f0320 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x157311f0398 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x157311f0408 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x157311f0478 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x157311f04e8 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x157311f06a8 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x157311f0718 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x157311f0788 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x157311f07f8 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x157311f0868 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x157311f08d8 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x157311f0930 parent 0x1572f667c88 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x157311f0ac0 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x157311f0b30 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x157311f0ba0 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x157311f0c10 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x157311f0cb0 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x157311f0d20 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x157311f0e30 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x157311f0f68 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x157311f1018 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x157311f0fc0 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x157311eb630 'struct threadlocaleinfostruct'
|     `-Record 0x157311f02a0 'threadlocaleinfostruct'
|-RecordDecl 0x157311f10b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:63:1, line:72:9> line:63:8 struct _iobuf definition
| |-MaxFieldAlignmentAttr 0x157311f1170 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x157311f11e8 <line:64:9, col:15> col:15 _ptr 'char *'
| |-FieldDecl 0x157311f7310 <line:65:9, col:15> col:15 _cnt 'int'
| |-FieldDecl 0x157311f7380 <line:66:9, col:15> col:15 _base 'char *'
| |-FieldDecl 0x157311f73f0 <line:67:9, col:15> col:15 _flag 'int'
| |-FieldDecl 0x157311f7460 <line:68:9, col:15> col:15 _file 'int'
| |-FieldDecl 0x157311f74d0 <line:69:9, col:15> col:15 _charbuf 'int'
| |-FieldDecl 0x157311f7540 <line:70:9, col:15> col:15 _bufsiz 'int'
| `-FieldDecl 0x157311f75b0 <line:71:9, col:15> col:15 _tmpfname 'char *'
|-TypedefDecl 0x157311f7660 <line:73:1, col:23> col:23 referenced FILE 'struct _iobuf':'struct _iobuf'
| `-ElaboratedType 0x157311f7610 'struct _iobuf' sugar
|   `-RecordType 0x157311f1150 'struct _iobuf'
|     `-Record 0x157311f10b0 '_iobuf'
|-FunctionDecl 0x157311f7898 <line:137:9, col:39> col:24 __iob_func 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|-TypedefDecl 0x157311f7968 <line:144:1, col:17> col:17 referenced fpos_t 'long long'
| `-BuiltinType 0x1572f667dc0 'long long'
|-FunctionDecl 0x157311f7b48 <line:175:24, col:65> col:36 _filbuf 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x157311f79d0 <col:52, col:59> col:59 _File 'FILE *'
|-FunctionDecl 0x157311f7e40 <line:176:28, col:82> col:40 _flsbuf 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x157311f7c20 <col:53, col:57> col:57 _Ch 'int'
| `-ParmVarDecl 0x157311f7c98 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x157311f81f0 <line:178:24, col:121> col:39 _fsopen 'FILE *(const char *, const char *, int) __attribute__((cdecl))':'FILE *(const char *, const char *, int)'
| |-ParmVarDecl 0x157311f7f20 <col:54, col:67> col:67 _Filename 'const char *'
| |-ParmVarDecl 0x157311f7fa0 <col:85, col:98> col:98 _Mode 'const char *'
| `-ParmVarDecl 0x157311f8020 <col:110, col:114> col:114 _ShFlag 'int'
|-FunctionDecl 0x157311fa4b0 <line:180:9, col:51> col:22 clearerr 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x157311fa340 <col:39, col:46> col:46 _File 'FILE *'
|-FunctionDecl 0x157311fa6e0 <line:182:28, col:76> col:44 clearerr_s 'errno_t (FILE *) __attribute__((cdecl))':'errno_t (FILE *)'
| `-ParmVarDecl 0x157311fa5a0 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x157311fa890 <line:184:28, col:67> col:40 fclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x157311fa7b0 <col:55, col:62> col:62 _File 'FILE *'
|-FunctionDecl 0x157311faa80 <line:185:28, col:55> col:40 _fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x157311fad78 <line:187:24, col:94> col:39 _fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x157311fab50 <col:52, col:56> col:56 _FileHandle 'int'
| `-ParmVarDecl 0x157311fabd0 <col:76, col:89> col:89 _Mode 'const char *'
|-FunctionDecl 0x157311faf30 <line:189:24, col:58> col:36 feof 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x157311fae50 <col:46, col:53> col:53 _File 'FILE *'
|-FunctionDecl 0x157311fb0e0 <line:190:24, col:60> col:36 ferror 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x157311fb000 <col:48, col:55> col:55 _File 'FILE *'
|-FunctionDecl 0x157311fb290 <line:191:28, col:71> col:40 fflush 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x157311fb1b0 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x157311fc468 <line:192:28, col:66> col:40 fgetc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x157311fc388 <col:54, col:61> col:61 _File 'FILE *'
|-FunctionDecl 0x157311fc5f8 <line:193:28, col:54> col:40 _fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x157311fc960 <line:194:28, col:90> col:40 fgetpos 'int (FILE *, fpos_t *) __attribute__((cdecl))':'int (FILE *, fpos_t *)'
| |-ParmVarDecl 0x157311fc6c0 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x157311fc7b8 <col:77, col:86> col:86 _Pos 'fpos_t *'
|-FunctionDecl 0x157311fcd18 <line:195:28, col:128> col:43 fgets 'char *(char *, int, FILE *) __attribute__((cdecl))':'char *(char *, int, FILE *)'
| |-ParmVarDecl 0x157311fca40 <col:75, col:82> col:82 _Buf 'char *'
| |-ParmVarDecl 0x157311fcac0 <col:93, col:97> col:97 _MaxCount 'int'
| `-ParmVarDecl 0x157311fcb38 <col:116, col:123> col:123 _File 'FILE *'
|-FunctionDecl 0x157311fced8 <line:197:24, col:61> col:36 _fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x157311fcdf8 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x157311fd1a0 <line:204:24, col:117> col:39 _tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x157311fcfb0 <col:59, col:72> col:72 _DirName 'const char *'
| `-ParmVarDecl 0x157311fd030 <col:93, col:106> col:106 _FilePrefix 'const char *'
|-FunctionDecl 0x157311f52f0 <line:210:28, col:54> col:40 _flushall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x157311f56e8 <line:211:72> col:72 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x157311f5788 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x157311f57f0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x157311f5868 prev 0x157311f56e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:211:134> col:72 fopen 'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x157311f54c0 <col:85, col:98> col:98 _Filename 'const char *'
| |-ParmVarDecl 0x157311f5540 <col:116, col:129> col:129 _Mode 'const char *'
| `-DeprecatedAttr 0x157311f5918 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x157311f5d90 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:213:28, col:149> col:44 fopen_s 'errno_t (FILE **, const char *, const char *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *)'
| |-ParmVarDecl 0x157311f5ac0 <col:78, col:86> col:86 _File 'FILE **'
| |-ParmVarDecl 0x157311f5b40 <col:100, col:113> col:113 _Filename 'const char *'
| `-ParmVarDecl 0x157311f5bc0 <col:131, col:144> col:144 _Mode 'const char *'
|-FunctionDecl 0x157311f60b0 <line:215:40> col:40 implicit fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x157311f6150 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x157311f61b8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x157311f6230 <col:40> Implicit printf 2 3
|-FunctionDecl 0x157311fd370 prev 0x157311f60b0 <col:28, col:125> col:40 fprintf 'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x157311f5e70 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x157311f5ef0 <col:100, col:113> col:113 _Format 'const char *'
| `-FormatAttr 0x157311fd468 <col:40> Inherited printf 2 3
|-FunctionDecl 0x157311fd630 <line:217:28, col:127> col:40 fprintf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x157311fd4b0 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x157311fd530 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x157311fd888 <line:219:28, col:80> col:40 fputc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x157311fd710 <col:51, col:55> col:55 _Ch 'int'
| `-ParmVarDecl 0x157311fd788 <col:68, col:75> col:75 _File 'FILE *'
|-FunctionDecl 0x157311fdab8 <line:220:28, col:62> col:40 _fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x157311fd968 <col:55, col:59> col:59 _Ch 'int'
|-FunctionDecl 0x157311fddb0 <line:221:28, col:92> col:40 fputs 'int (const char *, FILE *) __attribute__((cdecl))':'int (const char *, FILE *)'
| |-ParmVarDecl 0x157311fdb90 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x157311fdc08 <col:80, col:87> col:87 _File 'FILE *'
|-FunctionDecl 0x157311fe248 <line:222:43> col:43 implicit fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x157311fe2e8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x157311f6300 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x157311f6368 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x157311f63d0 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x157311f6458 prev 0x157311fe248 <col:28, col:171> col:43 fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x157311fde90 <col:89, col:96> col:96 _DstBuf 'void *'
| |-ParmVarDecl 0x157311fdf08 <col:110, col:117> col:117 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x157311fdf80 <col:136, col:143> col:143 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x157311fdff8 <col:159, col:166> col:166 _File 'FILE *'
|-FunctionDecl 0x157311f6960 <line:224:28, col:195> col:43 fread_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x157311f6548 <col:91, col:98> col:98 _DstBuf 'void *'
| |-ParmVarDecl 0x157311f65c0 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x157311f6638 <col:134, col:141> col:141 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x157311f66b0 <col:160, col:167> col:167 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x157311f6728 <col:183, col:190> col:190 _File 'FILE *'
|-FunctionDecl 0x157311f6e20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:226:160> col:74 freopen 'FILE *(const char *, const char *, FILE *) __attribute__((cdecl))':'FILE *(const char *, const char *, FILE *)'
| |-ParmVarDecl 0x157311f6b50 <col:89, col:102> col:102 _Filename 'const char *'
| |-ParmVarDecl 0x157311f6bd0 <col:120, col:133> col:133 _Mode 'const char *'
| |-ParmVarDecl 0x157311f6c48 <col:148, col:155> col:155 _File 'FILE *'
| `-DeprecatedAttr 0x157311f6ed8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using freopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x157311fe428 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:228:28, col:176> col:44 freopen_s 'errno_t (FILE **, const char *, const char *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *, FILE *)'
| |-ParmVarDecl 0x157311f7020 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x157311f70a0 <col:102, col:115> col:115 _Filename 'const char *'
| |-ParmVarDecl 0x157311f7120 <col:133, col:146> col:146 _Mode 'const char *'
| `-ParmVarDecl 0x157311f7198 <col:161, col:168> col:168 _OldFile 'FILE *'
|-FunctionDecl 0x157311fe7d0 <line:230:70> col:70 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x157311fe870 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x157311fe8d8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x157311fe950 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x157311fe9b8 prev 0x157311fe7d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:230:153> col:70 fscanf 'int (FILE *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x157311fe608 <col:85, col:92> col:92 _File 'FILE *'
| |-ParmVarDecl 0x157311fe688 <col:128, col:141> col:141 _Format 'const char *'
| |-FormatAttr 0x157311feb98 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x157311fea68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x157311fefd8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:231:201> col:77 _fscanf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x157311fecd8 <col:95, col:102> col:102 _File 'FILE *'
| |-ParmVarDecl 0x157311fed58 <col:148, col:161> col:161 _Format 'const char *'
| |-ParmVarDecl 0x157311fedf0 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x157311ff090 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x157311ff390 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:235:28, col:127> col:40 fscanf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x157311ff1d0 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x157311ff250 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x157311ff680 <line:237:28, col:168> col:40 _fscanf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x157311ff468 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x157311ff4e8 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x157311ff560 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x157311ff9e0 <line:239:28, col:94> col:40 fsetpos 'int (FILE *, const fpos_t *) __attribute__((cdecl))':'int (FILE *, const fpos_t *)'
| |-ParmVarDecl 0x157311ff760 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x157311ff838 <col:75, col:90> col:90 _Pos 'const fpos_t *'
|-FunctionDecl 0x157311ffd98 <line:240:28, col:103> col:40 fseek 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x157311ffab8 <col:54, col:61> col:61 _File 'FILE *'
| |-ParmVarDecl 0x157311ffb38 <col:73, col:78> col:78 _Offset 'long'
| `-ParmVarDecl 0x157311ffbb8 <col:92, col:96> col:96 _Origin 'int'
|-FunctionDecl 0x157311ffff8 <line:241:24, col:63> col:37 ftell 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x157311ffe78 <col:51, col:58> col:58 _File 'FILE *'
|-FunctionDecl 0x157312003e8 <line:243:28, col:110> col:40 _fseeki64 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x157312000c8 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x15731200148 <col:77, col:85> col:85 _Offset 'long long'
| `-ParmVarDecl 0x157312001c8 <col:99, col:103> col:103 _Origin 'int'
|-FunctionDecl 0x15731200648 <line:244:24, col:70> col:40 _ftelli64 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x157312004c8 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x15731200b08 <line:246:43> col:43 implicit fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x15731200ba8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x15731200c10 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x15731200c78 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x15731200ce0 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x15731200d68 prev 0x15731200b08 <col:28, col:159> col:43 fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x15731200750 <col:81, col:94> col:94 _Str 'const void *'
| |-ParmVarDecl 0x157312007c8 <col:105, col:112> col:112 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x15731200840 <col:124, col:131> col:131 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x157312008b8 <col:147, col:154> col:154 _File 'FILE *'
|-FunctionDecl 0x15731200f30 <line:247:24, col:61> col:36 getc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x15731200e50 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x157312010c0 <line:248:24, col:48> col:36 getchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x15731201248 <line:249:24, col:53> col:36 _getmaxstdio 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x15731202580 <line:251:9, col:84> col:24 gets_s 'char *(char *, rsize_t) __attribute__((cdecl))':'char *(char *, rsize_t)'
| |-ParmVarDecl 0x15731201318 <col:53, col:60> col:60 _Buf 'char *'
| `-ParmVarDecl 0x157312023d0 <col:71, col:79> col:79 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x157312028a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:254:80 gets 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x15731202760 <col:139, col:145> col:145 _Buffer 'char *'
| `-DeprecatedAttr 0x15731202950 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x15731202b70 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:255:16, col:54> col:28 _getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x15731202a90 <col:42, col:49> col:49 _File 'FILE *'
|-FunctionDecl 0x15731202d90 <line:258:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x15731202c48 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x15731202f40 <line:261:28, col:68> col:40 _pclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x15731202e60 <col:56, col:63> col:63 _File 'FILE *'
|-FunctionDecl 0x15731203190 <line:262:24, col:101> col:39 _popen 'FILE *(const char *, const char *) __attribute__((cdecl))':'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x15731203018 <col:53, col:66> col:66 _Command 'const char *'
| `-ParmVarDecl 0x15731203098 <col:83, col:96> col:96 _Mode 'const char *'
|-FunctionDecl 0x157312033d0 <line:264:40> col:40 implicit printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x15731203470 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x157312034e0 <col:40> Implicit printf 1 2
|-FunctionDecl 0x15731203548 prev 0x157312033d0 <col:28, col:102> col:40 printf 'int (const char *, ...)'
| |-ParmVarDecl 0x15731203270 <col:77, col:90> col:90 _Format 'const char *'
| `-FormatAttr 0x15731203638 <col:40> Inherited printf 1 2
|-FunctionDecl 0x15731203768 <line:266:28, col:104> col:40 printf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x15731203688 <col:79, col:92> col:92 _Format 'const char *'
|-FunctionDecl 0x157312039b8 <line:268:28, col:79> col:40 putc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x15731203840 <col:50, col:54> col:54 _Ch 'int'
| `-ParmVarDecl 0x157312038b8 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x15731203b78 <line:269:28, col:60> col:40 putchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x15731203a98 <col:53, col:57> col:57 _Ch 'int'
|-FunctionDecl 0x15731203d98 <line:270:28, col:69> col:40 puts 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x15731203c50 <col:52, col:65> col:65 _Str 'const char *'
|-FunctionDecl 0x15731203fe8 <line:271:28, col:82> col:40 _putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x15731203e70 <col:51, col:55> col:55 _Word 'int'
| `-ParmVarDecl 0x15731203ee8 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x157312041a8 <line:274:9, col:57> col:21 remove 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x157312040c8 <col:35, col:48> col:48 _Filename 'const char *'
|-FunctionDecl 0x1573124efb0 <line:275:24, col:109> col:36 rename 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x15731204280 <col:50, col:63> col:63 _OldFilename 'const char *'
| `-ParmVarDecl 0x15731204300 <col:84, col:97> col:97 _NewFilename 'const char *'
|-FunctionDecl 0x1573124f170 <line:276:9, col:58> col:21 _unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1573124f090 <col:36, col:49> col:49 _Filename 'const char *'
|-FunctionDecl 0x1573124f400 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:278:89> col:53 unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x1573124f320 <col:67, col:80> col:80 _Filename 'const char *'
| `-DeprecatedAttr 0x1573124f4a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _unlink. See online help for details." ""
|-FunctionDecl 0x1573124f6a0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:281:9, col:49> col:22 rewind 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1573124f5c8 <col:37, col:44> col:44 _File 'FILE *'
|-FunctionDecl 0x1573124f830 <line:282:28, col:51> col:40 _rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1573124fad8 <line:283:69> col:69 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x1573124fb78 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1573124fbe8 <col:69> Implicit scanf 1 2
|-FunctionDecl 0x1573124fc50 prev 0x1573124fad8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:283:129> col:69 scanf 'int (const char *restrict, ...)'
| |-ParmVarDecl 0x1573124f9c0 <col:104, col:117> col:117 _Format 'const char *'
| |-FormatAttr 0x1573124fe28 <col:69> Inherited scanf 1 2
| `-DeprecatedAttr 0x1573124fcf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x15731256260 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:284:177> col:76 _scanf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x15731256028 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x157312560a0 <col:155, col:165> col:165 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x15731256310 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _scanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x15731256538 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:288:40, col:116> col:52 scanf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x15731256458 <col:91, col:104> col:104 _Format 'const char *'
|-FunctionDecl 0x15731256788 <line:290:40, col:157> col:52 _scanf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x15731256610 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x15731256688 <col:135, col:145> col:145 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x15731256b48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:292:150> col:55 setbuf 'void (FILE *, char *) __attribute__((cdecl))':'void (FILE *, char *)'
| |-ParmVarDecl 0x15731256920 <col:70, col:77> col:77 _File 'FILE *'
| |-ParmVarDecl 0x157312569a0 <col:136, col:143> col:143 _Buffer 'char *'
| `-DeprecatedAttr 0x15731256bf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using setvbuf instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x15731256e20 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:293:28, col:66> col:40 _setmaxstdio 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x15731256d40 <col:58, col:62> col:62 _Max 'int'
|-FunctionDecl 0x15731250038 <line:294:28, col:93> col:49 _set_output_format 'unsigned int (unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int)'
| `-ParmVarDecl 0x1573124fef0 <col:73, col:86> col:86 _Format 'unsigned int'
|-FunctionDecl 0x15731250220 <line:295:28, col:72> col:49 _get_output_format 'unsigned int (void) __attribute__((cdecl))':'unsigned int (void)'
|-FunctionDecl 0x15731250670 <line:296:28, col:145> col:40 setvbuf 'int (FILE *, char *, int, size_t) __attribute__((cdecl))':'int (FILE *, char *, int, size_t)'
| |-ParmVarDecl 0x157312502e8 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x15731250368 <col:99, col:106> col:106 _Buf 'char *'
| |-ParmVarDecl 0x157312503e8 <col:117, col:121> col:121 _Mode 'int'
| `-ParmVarDecl 0x15731250460 <col:133, col:140> col:140 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x15731250af0 <line:297:40, col:213> col:52 _snprintf_s 'int (char *, size_t, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, ...)'
| |-ParmVarDecl 0x15731250760 <col:93, col:100> col:100 _DstBuf 'char *'
| |-ParmVarDecl 0x157312507d8 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x15731250850 <col:140, col:147> col:147 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x157312508d0 <col:188, col:201> col:201 _Format 'const char *'
|-FunctionDecl 0x15731251f10 <line:300:40, col:188> col:52 sprintf_s 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x15731250be0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x15731250c58 <col:112, col:119> col:119 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x15731250cd8 <col:163, col:176> col:176 _Format 'const char *'
|-FunctionDecl 0x157312520d8 <line:303:24, col:101> col:36 _scprintf 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x15731251ff8 <col:76, col:89> col:89 _Format 'const char *'
|-FunctionDecl 0x157312524b0 <line:304:70> col:70 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x15731252550 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x157312525b8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x15731252630 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x15731252698 prev 0x157312524b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:304:157> col:70 sscanf 'int (const char *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x15731252270 <col:84, col:97> col:97 _Src 'const char *'
| |-ParmVarDecl 0x157312522f0 <col:132, col:145> col:145 _Format 'const char *'
| |-FormatAttr 0x15731252878 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x15731252748 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x15731252c68 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:305:205> col:77 _sscanf_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x15731252988 <col:94, col:107> col:107 _Src 'const char *'
| |-ParmVarDecl 0x15731252a08 <col:152, col:165> col:165 _Format 'const char *'
| |-ParmVarDecl 0x15731252a80 <col:183, col:193> col:193 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x15731252d20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x15731253020 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:309:40, col:143> col:52 sscanf_s 'int (const char *, const char *, ...) __attribute__((cdecl))':'int (const char *, const char *, ...)'
| |-ParmVarDecl 0x15731252e68 <col:68, col:81> col:81 _Src 'const char *'
| `-ParmVarDecl 0x15731252f20 <col:118, col:131> col:131 _Format 'const char *'
|-FunctionDecl 0x15731253318 <line:311:40, col:184> col:52 _sscanf_s_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x15731253100 <col:71, col:84> col:84 _Src 'const char *'
| |-ParmVarDecl 0x15731253180 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x157312531f8 <col:162, col:172> col:172 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x157312537a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:312:217> col:76 _snscanf 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x157312534c0 <col:121, col:134> col:134 _Src 'const char *'
| |-ParmVarDecl 0x15731253538 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x157312535b8 <col:192, col:205> col:205 _Format 'const char *'
| `-DeprecatedAttr 0x15731253860 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x15731253e30 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:313:259> col:78 _snscanf_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x15731253aa0 <col:125, col:138> col:138 _Src 'const char *'
| |-ParmVarDecl 0x15731253b18 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x15731253b98 <col:206, col:219> col:219 _Format 'const char *'
| |-ParmVarDecl 0x15731253c10 <col:237, col:247> col:247 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x15731256f60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x157312572c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:314:40, col:197> col:52 _snscanf_s 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x157312570a8 <col:99, col:112> col:112 _Src 'const char *'
| |-ParmVarDecl 0x15731257120 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x157312571a0 <col:172, col:185> col:185 _Format 'const char *'
|-FunctionDecl 0x15731257658 <line:315:40, col:237> col:52 _snscanf_s_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x157312573a8 <col:101, col:114> col:114 _Src 'const char *'
| |-ParmVarDecl 0x15731257420 <col:125, col:132> col:132 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x157312574a0 <col:184, col:197> col:197 _Format 'const char *'
| `-ParmVarDecl 0x15731257518 <col:215, col:225> col:225 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x157312578b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:317:86> col:74 tmpfile 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
| `-DeprecatedAttr 0x15731257958 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpfile_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x15731257c10 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:319:28, col:96> col:44 tmpfile_s 'errno_t (FILE **) __attribute__((cdecl))':'errno_t (FILE **)'
| `-ParmVarDecl 0x15731257aa0 <col:83, col:91> col:91 _File 'FILE **'
|-FunctionDecl 0x15731250f00 <line:320:28, col:106> col:44 tmpnam_s 'errno_t (char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t)'
| |-ParmVarDecl 0x15731257ce8 <col:75, col:82> col:82 _Buf 'char *'
| `-ParmVarDecl 0x15731257d60 <col:93, col:101> col:101 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x15731251180 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:323:79 tmpnam 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x157312510a0 <col:113, col:119> col:119 _Buffer 'char *'
| `-DeprecatedAttr 0x15731251228 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x157312514e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:324:28, col:81> col:40 ungetc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x15731251370 <col:52, col:56> col:56 _Ch 'int'
| `-ParmVarDecl 0x157312513e8 <col:69, col:76> col:76 _File 'FILE *'
|-FunctionDecl 0x15731251900 <line:325:40> col:40 implicit vfprintf 'int (FILE *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x157312519a0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x15731251a08 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x15731251a70 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x15731251af0 <col:40> Implicit printf 2 0
|-FunctionDecl 0x15731251b58 prev 0x15731251900 <col:28, col:139> col:40 vfprintf 'int (FILE *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x157312515c0 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x15731251640 <col:101, col:114> col:114 _Format 'const char *'
| |-ParmVarDecl 0x157312516b8 <col:123, col:131> col:131 _ArgList 'va_list':'char *'
| `-FormatAttr 0x15731251c58 <col:40> Inherited printf 2 0
|-FunctionDecl 0x15731259f90 <line:326:40> col:40 implicit vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1573125a030 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x1573125a098 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1573125a100 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1573125a180 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x1573125a1e8 prev 0x15731259f90 <col:28, col:138> col:40 vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x15731251ca0 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x15731251d20 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x15731251d98 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1573125a2e8 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x1573125a548 <line:328:28, col:141> col:40 vfprintf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1573125a330 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1573125a3b0 <col:103, col:116> col:116 _Format 'const char *'
| `-ParmVarDecl 0x1573125a428 <col:125, col:133> col:133 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1573125a840 <line:329:28, col:140> col:40 vfscanf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1573125a628 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1573125a6a8 <col:102, col:115> col:115 _Format 'const char *'
| `-ParmVarDecl 0x1573125a720 <col:124, col:132> col:132 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1573125ab88 <line:331:40> col:40 implicit vprintf 'int (const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1573125ac28 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1573125ac90 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1573125ad08 <col:40> Implicit printf 1 0
|-FunctionDecl 0x1573125ad70 prev 0x1573125ab88 <col:28, col:116> col:40 vprintf 'int (const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1573125a928 <col:78, col:91> col:91 _Format 'const char *'
| |-ParmVarDecl 0x1573125a9a0 <col:100, col:108> col:108 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1573125ae68 <col:40> Inherited printf 1 0
|-FunctionDecl 0x157312580a8 <line:332:40> col:40 implicit vscanf 'int (const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x15731258148 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x157312581b0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x15731258228 <col:40> Implicit scanf 1 0
|-FunctionDecl 0x15731258290 prev 0x157312580a8 <col:28, col:115> col:40 vscanf 'int (const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1573125aeb8 <col:77, col:90> col:90 _Format 'const char *'
| |-ParmVarDecl 0x15731257f70 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
| `-FormatAttr 0x15731258388 <col:40> Inherited scanf 1 0
|-FunctionDecl 0x15731258550 <line:334:28, col:118> col:40 vprintf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x157312583d8 <col:80, col:93> col:93 _Format 'const char *'
| `-ParmVarDecl 0x15731258450 <col:102, col:110> col:110 _ArgList 'va_list':'char *'
|-FunctionDecl 0x157312587a8 <line:335:28, col:117> col:40 vscanf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x15731258630 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x157312586a8 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x15731258d08 <line:337:77> col:77 implicit vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x15731258da8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x15731258e10 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x15731258e78 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x15731258ee0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1573125afa0 <col:77> Implicit printf 3 0
|-FunctionDecl 0x1573125b008 prev 0x15731258d08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:337:218> col:77 vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x15731258948 <col:111, col:118> col:118 _DstBuf 'char *'
| |-ParmVarDecl 0x157312589c0 <col:132, col:139> col:139 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x15731258a40 <col:180, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x15731258ab8 <col:202, col:210> col:210 _ArgList 'va_list':'char *'
| |-FormatAttr 0x1573125b1f8 <col:77> Inherited printf 3 0
| `-DeprecatedAttr 0x1573125b0c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1573125b668 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:339:28, col:206> col:40 vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1573125b248 <col:77, col:84> col:84 _DstBuf 'char *'
| |-ParmVarDecl 0x1573125b2c0 <col:98, col:105> col:105 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1573125b338 <col:120, col:127> col:127 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1573125b3b8 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x1573125b430 <col:190, col:198> col:198 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1573125baa8 <line:342:40, col:227> col:52 _vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1573125b760 <col:94, col:101> col:101 _DstBuf 'char *'
| |-ParmVarDecl 0x1573125b7d8 <col:115, col:122> col:122 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1573125b850 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1573125b8d0 <col:189, col:202> col:202 _Format 'const char *'
| `-ParmVarDecl 0x1573125b948 <col:211, col:219> col:219 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1573125be78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:89 _snprintf 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1573125bc60 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x1573125bcd8 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1573125bd58 <col:246, col:260> col:260 _Format 'const char *'
| `-DeprecatedAttr 0x1573125bf30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x157312593f0 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:100 _vsnprintf 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x15731259140 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x157312591b8 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x15731259238 <col:246, col:260> col:260 _Format 'const char *'
| |-ParmVarDecl 0x157312592b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x157312594b0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x157312598a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:349:21, col:183> col:33 vsprintf_s 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x157312595f8 <col:73, col:80> col:80 _DstBuf 'char *'
| |-ParmVarDecl 0x15731259670 <col:94, col:101> col:101 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x157312596f0 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x15731259768 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x15731259c68 <line:351:40, col:149> col:52 vsscanf_s 'int (const char *, const char *, va_list) __attribute__((cdecl))':'int (const char *, const char *, va_list)'
| |-ParmVarDecl 0x15731259998 <col:62, col:75> col:75 _Src 'const char *'
| |-ParmVarDecl 0x15731259a18 <col:111, col:124> col:124 _Format 'const char *'
| `-ParmVarDecl 0x15731259a90 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x15731253fd0 <line:356:85> col:85 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x15731254070 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x157312540d8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x15731254150 <col:85> Implicit printf 2 3
|-FunctionDecl 0x157312541b8 prev 0x15731253fd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:85 sprintf 'int (char *, const char *, ...)'
| |-ParmVarDecl 0x15731259e10 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x15731259e90 <col:171, col:185> col:185 _Format 'const char *'
| |-FormatAttr 0x15731254398 <col:85> Inherited printf 2 3
| `-DeprecatedAttr 0x15731254268 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x157312547c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> col:94 implicit vsprintf 'int (char *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x15731254860 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x157312548c8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x15731254930 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x157312549b0 <col:94> Implicit printf 2 0
|-FunctionDecl 0x15731254a18 prev 0x157312547c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94 vsprintf 'int (char *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x157312544a8 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x15731254528 <col:171, col:185> col:185 _Format 'const char *'
| |-ParmVarDecl 0x157312545a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-FormatAttr 0x15731254c00 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> Inherited printf 2 0
| `-DeprecatedAttr 0x15731254ad0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1573125bfb0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:357:40> col:40 implicit vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1573125c050 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1573125c0b8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1573125c120 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1573125c1a0 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x1573125c208 prev 0x1573125bfb0 <col:28, col:138> col:40 vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x15731254c50 <col:48, col:61> col:61 _srcBuf 'const char *'
| |-ParmVarDecl 0x15731254cd0 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x15731254d48 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1573125c308 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x1573125c4d0 <line:359:24, col:115> col:36 _vscprintf 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1573125c358 <col:77, col:90> col:90 _Format 'const char *'
| `-ParmVarDecl 0x1573125c3d0 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1573125c7c8 <line:360:28, col:170> col:40 _snprintf_c 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1573125c5b0 <col:76, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x1573125c628 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1573125c6a8 <col:145, col:158> col:158 _Format 'const char *'
|-FunctionDecl 0x1573125cb60 <line:361:28, col:183> col:40 _vsnprintf_c 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1573125c8b0 <col:77, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x1573125c928 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1573125c9a8 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x1573125ca20 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1573125cdc8 <line:363:28, col:128> col:40 _fprintf_p 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1573125cc48 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x1573125ccc8 <col:103, col:116> col:116 _Format 'const char *'
|-FunctionDecl 0x15731254f40 <line:364:28, col:105> col:40 _printf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1573125cea8 <col:80, col:93> col:93 _Format 'const char *'
|-FunctionDecl 0x15731255230 <line:365:28, col:168> col:40 _sprintf_p 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x15731255018 <col:77, col:84> col:84 _Dst 'char *'
| |-ParmVarDecl 0x15731255090 <col:95, col:102> col:102 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x15731255110 <col:143, col:156> col:156 _Format 'const char *'
|-FunctionDecl 0x15731255528 <line:366:28, col:142> col:40 _vfprintf_p 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x15731255310 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x15731255390 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x15731255408 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x15731255788 <line:367:28, col:119> col:40 _vprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x15731255610 <col:81, col:94> col:94 _Format 'const char *'
| `-ParmVarDecl 0x15731255688 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x15731255b18 <line:368:28, col:182> col:40 _vsprintf_p 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x15731255868 <col:78, col:85> col:85 _Dst 'char *'
| |-ParmVarDecl 0x157312558e0 <col:96, col:103> col:103 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x15731255960 <col:144, col:157> col:157 _Format 'const char *'
| `-ParmVarDecl 0x157312559d8 <col:166, col:174> col:174 _ArgList 'va_list':'char *'
|-FunctionDecl 0x15731255ce8 <line:369:24, col:103> col:36 _scprintf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x15731255c08 <col:78, col:91> col:91 _Format 'const char *'
|-FunctionDecl 0x15731263020 <line:370:24, col:117> col:36 _vscprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x15731255dc0 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x15731255e38 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x157312631e0 <line:371:9, col:61> col:21 _set_printf_count_output 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x15731263100 <col:51, col:55> col:55 _Value 'int'
|-FunctionDecl 0x15731263370 <line:372:9, col:50> col:21 _get_printf_count_output 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x157312635b8 <line:374:28, col:143> col:40 _printf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x15731263440 <col:90, col:103> col:103 _Format 'const char *'
| `-ParmVarDecl 0x157312634b8 <col:121, col:131> col:131 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x15731263810 <line:375:28, col:145> col:40 _printf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x15731263698 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x15731263710 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x15731263a68 <line:376:28, col:145> col:40 _printf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x157312638f0 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x15731263968 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x15731263e18 <line:377:28, col:157> col:40 _vprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x15731263b48 <col:91, col:104> col:104 _Format 'const char *'
| |-ParmVarDecl 0x15731263bc0 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x15731263c38 <col:141, col:149> col:149 _ArgList 'va_list':'char *'
|-FunctionDecl 0x15731260110 <line:378:28, col:159> col:40 _vprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x15731263f00 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x15731263f78 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1573125fff0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x15731260408 <line:379:28, col:159> col:40 _vprintf_s_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x157312601f8 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x15731260270 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x157312602e8 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x15731260700 <line:381:28, col:166> col:40 _fprintf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x157312604e8 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x15731260568 <col:113, col:126> col:126 _Format 'const char *'
| `-ParmVarDecl 0x157312605e0 <col:144, col:154> col:154 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x157312609f8 <line:382:28, col:168> col:40 _fprintf_p_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x157312607e0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x15731260860 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x157312608d8 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x15731260cf0 <line:383:28, col:168> col:40 _fprintf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x15731260ad8 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x15731260b58 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x15731260bd0 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1573125d120 <line:384:28, col:147> col:40 _vfprintf_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x15731260dd0 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x15731260e50 <col:81, col:94> col:94 _Format 'const char *'
| |-ParmVarDecl 0x15731260ec8 <col:112, col:122> col:122 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x15731260f40 <col:131, col:139> col:139 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1573125d4b8 <line:385:28, col:149> col:40 _vfprintf_p_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1573125d208 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1573125d288 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x1573125d300 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1573125d378 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1573125d850 <line:386:28, col:149> col:40 _vfprintf_s_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1573125d5a0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1573125d620 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x1573125d698 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1573125d710 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1573125dce8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:388:221> col:78 _sprintf_l 'int (char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1573125da00 <col:112, col:119> col:119 _DstBuf 'char *'
| |-ParmVarDecl 0x1573125da80 <col:168, col:181> col:181 _Format 'const char *'
| |-ParmVarDecl 0x1573125daf8 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1573125dda0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x15731262320 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:389:28, col:211> col:40 _sprintf_p_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1573125dee8 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x15731262010 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x15731262090 <col:158, col:171> col:171 _Format 'const char *'
| `-ParmVarDecl 0x15731262108 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x157312626c0 <line:390:40, col:221> col:52 _sprintf_s_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x15731262410 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x15731262488 <col:111, col:118> col:118 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x15731262508 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x15731262580 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x15731262c10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:391:195> col:79 _vsprintf_l 'int (char *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x157312628b0 <col:114, col:121> col:121 _DstBuf 'char *'
| |-ParmVarDecl 0x15731262930 <col:137, col:150> col:150 _Format 'const char *'
| |-ParmVarDecl 0x157312629a8 <col:168> col:177 '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x15731262a20 <col:179, col:187> col:187 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x15731262cd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x15731264268 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:392:28, col:225> col:40 _vsprintf_p_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x15731262e18 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x15731262e90 <col:101, col:108> col:108 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x15731262f10 <col:159, col:171> col:171 _Format 'const char *'
| |-ParmVarDecl 0x15731262f88 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x15731264030 <col:209, col:217> col:217 _ArgList 'va_list':'char *'
|-FunctionDecl 0x157312646a8 <line:393:40, col:235> col:52 _vsprintf_s_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x15731264360 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x157312643d8 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x15731264458 <col:169, col:182> col:182 _Format 'const char *'
| |-ParmVarDecl 0x157312644d0 <col:200, col:210> col:210 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x15731264548 <col:219, col:227> col:227 _ArgList 'va_list':'char *'
|-FunctionDecl 0x15731264918 <line:395:28, col:145> col:40 _scprintf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x157312647a0 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x15731264818 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x15731264b70 <line:396:28, col:147> col:40 _scprintf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x157312649f8 <col:94, col:107> col:107 _Format 'const char *'
| `-ParmVarDecl 0x15731264a70 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x15731264e60 <line:397:28, col:159> col:40 _vscprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x15731264c50 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x15731264cc8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x15731264d40 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1573125e100 <line:398:28, col:161> col:40 _vscprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x15731264f48 <col:95, col:108> col:108 _Format 'const char *'
| |-ParmVarDecl 0x15731264fc0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1573125dfe0 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1573125e558 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:400:247> col:79 _snprintf_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1573125e2a8 <col:115, col:122> col:122 _DstBuf 'char *'
| |-ParmVarDecl 0x1573125e320 <col:136, col:143> col:143 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1573125e3a0 <col:194, col:207> col:207 _Format 'const char *'
| |-ParmVarDecl 0x1573125e418 <col:225, col:235> col:235 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1573125e618 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1573125ea10 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:401:28, col:210> col:40 _snprintf_c_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1573125e760 <col:78, col:85> col:85 _DstBuf 'char *'
| |-ParmVarDecl 0x1573125e7d8 <col:99, col:106> col:106 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1573125e858 <col:157, col:170> col:170 _Format 'const char *'
| `-ParmVarDecl 0x1573125e8d0 <col:188, col:198> col:198 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x15731265040 <line:402:40, col:245> col:52 _snprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1573125eb00 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1573125eb78 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1573125ebf0 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1573125ec70 <col:192, col:205> col:205 _Format 'const char *'
| `-ParmVarDecl 0x1573125ece8 <col:223, col:233> col:233 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x15731265580 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:403:262> col:80 _vsnprintf_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x15731265238 <col:117, col:124> col:124 _DstBuf 'char *'
| |-ParmVarDecl 0x157312652b0 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x15731265330 <col:196, col:209> col:209 _Format 'const char *'
| |-ParmVarDecl 0x157312653a8 <col:227, col:237> col:237 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x15731265420 <col:246, col:254> col:254 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x15731265648 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x15731265ac8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:404:28, col:176> col:40 _vsnprintf_c_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x15731265798 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x15731265810 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x15731265890 <col:118, col:129> col:130 'const char *'
| |-ParmVarDecl 0x15731265908 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x15731265980 <col:160, col:168> col:168 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1573125f040 <line:405:28, col:245> col:40 _vsnprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x15731265bc0 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x15731265c38 <col:101, col:108> col:108 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x15731265cb0 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x15731265d30 <col:181, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x15731265da8 <col:210, col:220> col:220 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x15731265e20 <col:229, col:237> col:237 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1573125f400 <line:415:24, col:128> col:39 _wfsopen 'FILE *(const wchar_t *, const wchar_t *, int) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, int)'
| |-ParmVarDecl 0x1573125f138 <col:55, col:71> col:71 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1573125f1b0 <col:89, col:105> col:105 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x1573125f230 <col:117, col:121> col:121 _ShFlag 'int'
|-FunctionDecl 0x1573125f670 <line:417:28, col:70> col:43 fgetwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1573125f500 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x1573125f888 <line:418:28, col:58> col:43 _fgetwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x1573125fb68 <line:419:28, col:88> col:43 fputwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1573125f950 <col:55, col:63> col:63 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1573125f9c8 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x1573125fdb0 <line:420:28, col:70> col:43 _fputwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x1573125fc40 <col:59, col:67> col:67 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x15731269080 <line:421:24, col:65> col:39 getwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1573125fe80 <col:53, col:60> col:60 _File 'FILE *'
|-FunctionDecl 0x15731269208 <line:422:24, col:52> col:39 getwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x15731269440 <line:423:28, col:87> col:43 putwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x157312692d0 <col:54, col:62> col:62 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x15731269348 <col:75, col:82> col:82 _File 'FILE *'
|-FunctionDecl 0x157312695f0 <line:424:28, col:68> col:43 putwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x15731269518 <col:57, col:65> col:65 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x15731269898 <line:425:28, col:88> col:43 ungetwc 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x157312696c0 <col:56, col:63> col:63 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x15731269738 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x15731269c40 <line:427:28, col:141> col:46 fgetws 'wchar_t *(wchar_t *, int, FILE *) __attribute__((cdecl))':'wchar_t *(wchar_t *, int, FILE *)'
| |-ParmVarDecl 0x15731269970 <col:82, col:92> col:92 _Dst 'wchar_t *'
| |-ParmVarDecl 0x157312699f0 <col:103, col:107> col:107 _SizeInWords 'int'
| `-ParmVarDecl 0x15731269a68 <col:129, col:136> col:136 _File 'FILE *'
|-FunctionDecl 0x15731269f40 <line:428:28, col:96> col:40 fputws 'int (const wchar_t *, FILE *) __attribute__((cdecl))':'int (const wchar_t *, FILE *)'
| |-ParmVarDecl 0x15731269d20 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x15731269d98 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x15731268228 <line:429:28, col:124> col:46 _getws_s 'wchar_t *(wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, size_t)'
| |-ParmVarDecl 0x1573126a018 <col:84, col:94> col:94 _Str 'wchar_t *'
| `-ParmVarDecl 0x15731268080 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x15731268530 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:431:83 _getws 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x157312683c0 <col:115, col:124> col:124 _String 'wchar_t *'
| `-DeprecatedAttr 0x157312685d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _getws_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x15731268898 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:432:28, col:74> col:40 _putws 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x15731268718 <col:54, col:70> col:70 _Str 'const wchar_t *'
|-FunctionDecl 0x15731268ba0 <line:434:28, col:129> col:40 fwprintf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x15731268968 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x157312689e0 <col:101, col:117> col:117 _Format 'const wchar_t *'
|-FunctionDecl 0x15731268df0 <line:436:28, col:131> col:40 fwprintf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x15731268c78 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x15731268cf0 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x1573126a090 <line:438:28, col:106> col:40 wprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x15731268ec8 <col:78, col:94> col:94 _Format 'const wchar_t *'
|-FunctionDecl 0x1573126a240 <line:440:28, col:108> col:40 wprintf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1573126a160 <col:80, col:96> col:96 _Format 'const wchar_t *'
|-FunctionDecl 0x1573126a3f0 <line:442:24, col:105> col:36 _scwprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1573126a310 <col:77, col:93> col:93 _Format 'const wchar_t *'
|-FunctionDecl 0x1573126a788 <line:443:28, col:143> col:40 vfwprintf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1573126a4c0 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1573126a538 <col:102, col:118> col:118 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1573126a5b0 <col:127, col:135> col:135 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1573126aa78 <line:444:28, col:142> col:40 vfwscanf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1573126a868 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x1573126a8e0 <col:101, col:117> col:117 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1573126a958 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1573126ad68 <line:446:28, col:145> col:40 vfwprintf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1573126ab58 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1573126abd0 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1573126ac48 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1573126b0a0 <line:447:28, col:144> col:40 vfwscanf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1573126ae48 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1573126aec0 <col:103, col:119> col:119 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1573126af38 <col:128, col:136> col:136 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1573126b3a0 <line:449:28, col:120> col:40 vwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1573126b180 <col:79, col:95> col:95 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1573126b1f8 <col:104, col:112> col:112 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1573126b5f0 <line:450:28, col:119> col:40 vwscanf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1573126b478 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1573126b4f0 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1573126b840 <line:452:28, col:122> col:40 vwprintf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1573126b6c8 <col:81, col:97> col:97 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1573126b740 <col:106, col:114> col:114 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1573126ba90 <line:453:28, col:121> col:40 vwscanf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1573126b918 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1573126b990 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1573126be48 <line:457:21, col:173> col:33 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1573126bb68 <col:73, col:83> col:83 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1573126bbe0 <col:94, col:101> col:101 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1573126bc58 <col:145, col:161> col:161 _Format 'const wchar_t *'
|-FunctionDecl 0x1573126c2c0 <line:461:21, col:187> col:33 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1573126bf28 <col:74, col:84> col:84 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1573126bfa0 <col:95, col:102> col:102 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1573126c018 <col:146, col:162> col:162 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1573126c0b0 <col:171, col:179> col:179 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1573126c678 <line:462:40, col:156> col:52 vswscanf_s 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1573126c3a8 <col:63, col:79> col:79 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1573126c420 <col:115, col:131> col:131 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1573126c498 <col:140, col:148> col:148 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1573126c968 <line:466:28, col:145> col:40 vswscanf 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1573126c758 <col:49, col:65> col:65 _srcBuf 'const wchar_t *'
| |-ParmVarDecl 0x1573126c7d0 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1573126c848 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1573126cc58 <line:468:28, col:184> col:40 _swprintf_c 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1573126ca48 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1573126cac0 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1573126cb38 <col:156, col:172> col:172 _Format 'const wchar_t *'
|-FunctionDecl 0x1573126cfe0 <line:469:28, col:198> col:40 _vswprintf_c 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1573126cd38 <col:82, col:92> col:92 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1573126cdb0 <col:106, col:113> col:113 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1573126ce28 <col:157, col:173> col:173 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1573126cea0 <col:182, col:190> col:190 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1573126d470 <line:471:40, col:220> col:52 _snwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1573126d0e8 <col:94, col:104> col:104 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1573126d160 <col:118, col:125> col:125 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1573126d1d8 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1573126d250 <col:192, col:208> col:208 _Format 'const wchar_t *'
|-FunctionDecl 0x1573126d978 <line:473:40, col:234> col:52 _vsnwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1573126d558 <col:95, col:105> col:105 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1573126d5d0 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1573126d648 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1573126d6c0 <col:193, col:209> col:209 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1573126d738 <col:218, col:226> col:226 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1573126dd38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:89 _snwprintf 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1573126db28 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1573126dba0 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1573126dc18 <col:254, col:271> col:271 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1573126ddf0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x15731267290 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:101 _vsnwprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1573126dff0 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x15731267060 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x157312670d8 <col:254, col:271> col:271 _Format 'const wchar_t *'
| |-ParmVarDecl 0x15731267150 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x15731267350 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x15731267608 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:480:28, col:132> col:40 _fwprintf_p 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x15731267490 <col:60, col:67> col:67 _File 'FILE *'
| `-ParmVarDecl 0x15731267508 <col:104, col:120> col:120 _Format 'const wchar_t *'
|-FunctionDecl 0x157312677c0 <line:481:28, col:109> col:40 _wprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x157312676e0 <col:81, col:97> col:97 _Format 'const wchar_t *'
|-FunctionDecl 0x15731267aa0 <line:482:28, col:146> col:40 _vfwprintf_p 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x15731267890 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x15731267908 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x15731267980 <col:130, col:138> col:138 _ArgList 'va_list':'char *'
|-FunctionDecl 0x15731267cf8 <line:483:28, col:123> col:40 _vwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x15731267b80 <col:82, col:98> col:98 _Format 'const wchar_t *'
| `-ParmVarDecl 0x15731267bf8 <col:107, col:115> col:115 _ArgList 'va_list':'char *'
|-FunctionDecl 0x15731273f50 <line:484:28, col:178> col:40 _swprintf_p 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x15731267dd0 <col:78, col:88> col:88 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x15731267e48 <col:102, col:109> col:109 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x15731267ec0 <col:150, col:166> col:166 _Format 'const wchar_t *'
|-FunctionDecl 0x157312742d8 <line:485:28, col:192> col:40 _vswprintf_p 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x15731274030 <col:79, col:89> col:89 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x157312740a8 <col:103, col:110> col:110 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x15731274120 <col:151, col:167> col:167 _Format 'const wchar_t *'
| `-ParmVarDecl 0x15731274198 <col:176, col:184> col:184 _ArgList 'va_list':'char *'
|-FunctionDecl 0x157312744a0 <line:486:24, col:107> col:36 _scwprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x157312743c0 <col:79, col:95> col:95 _Format 'const wchar_t *'
|-FunctionDecl 0x157312746e8 <line:487:24, col:121> col:36 _vscwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x15731274570 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x157312745e8 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x157312749f0 <line:489:28, col:147> col:40 _wprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x157312747c0 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x15731274838 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x15731274c40 <line:490:28, col:149> col:40 _wprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x15731274ac8 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x15731274b40 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x15731274e90 <line:491:28, col:149> col:40 _wprintf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x15731274d18 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x15731274d90 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x15731275258 <line:492:28, col:161> col:40 _vwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x15731274f88 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x15731275000 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x15731275078 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x15731275548 <line:493:28, col:163> col:40 _vwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x15731275338 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x157312753b0 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x15731275428 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x15731275838 <line:494:28, col:163> col:40 _vwprintf_s_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x15731275628 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x157312756a0 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x15731275718 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x15731275bf8 <line:496:28, col:170> col:40 _fwprintf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x15731275918 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x15731275990 <col:114, col:130> col:130 _Format 'const wchar_t *'
| `-ParmVarDecl 0x15731275a08 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x15731275f70 <line:497:28, col:172> col:40 _fwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x15731275cd8 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x15731275d50 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x15731275dc8 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x15731276260 <line:498:28, col:172> col:40 _fwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x15731276050 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x157312760c8 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x15731276140 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x157312766b0 <line:499:28, col:184> col:40 _vfwprintf_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x15731276340 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x157312763b8 <col:115, col:131> col:131 _Format 'const wchar_t *'
| |-ParmVarDecl 0x15731276430 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x157312764a8 <col:168, col:176> col:176 _ArgList 'va_list':'char *'
|-FunctionDecl 0x15731276a40 <line:500:28, col:186> col:40 _vfwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x15731276798 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x15731276810 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x15731276888 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x15731276900 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x15731276dd0 <line:501:28, col:186> col:40 _vfwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x15731276b28 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x15731276ba0 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x15731276c18 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x15731276c90 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x15731277290 <line:503:28, col:218> col:40 _swprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x15731276eb8 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x15731276f80 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x15731276ff8 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x15731277070 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x15731277620 <line:504:28, col:218> col:40 _swprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x15731277378 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x157312773f0 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x15731277468 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x157312774e0 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x157312779b0 <line:505:40, col:228> col:52 _swprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x15731277708 <col:91, col:101> col:101 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x15731277780 <col:115, col:122> col:122 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x157312777f8 <col:172, col:188> col:188 _Format 'const wchar_t *'
| `-ParmVarDecl 0x15731277870 <col:206, col:216> col:216 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x15731277eb8 <line:506:28, col:232> col:40 used _vswprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x15731277a98 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x15731277b10 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x15731277b88 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x15731277c00 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x15731277c78 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x15731270278 <line:507:28, col:232> col:40 _vswprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1573126ff38 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1573126ffb0 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x15731270028 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x157312700a0 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x15731270118 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x157312706a8 <line:508:40, col:242> col:52 _vswprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x15731270368 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x157312703e0 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x15731270458 <col:173, col:189> col:189 _Format 'const wchar_t *'
| |-ParmVarDecl 0x157312704d0 <col:207, col:217> col:217 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x15731270548 <col:226, col:234> col:234 _ArgList 'va_list':'char *'
|-FunctionDecl 0x15731270910 <line:510:24, col:145> col:36 _scwprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x15731270798 <col:89, col:105> col:105 _Format 'const wchar_t *'
| `-ParmVarDecl 0x15731270810 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x15731270b60 <line:511:24, col:147> col:36 _scwprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x157312709e8 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x15731270a60 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x15731270e48 <line:512:24, col:161> col:36 _vscwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x15731270c38 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x15731270cb0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x15731270d28 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x157312722c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:514:255> col:80 _snwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x15731272020 <col:117, col:127> col:127 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x15731272098 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x15731272110 <col:199, col:215> col:215 _Format 'const wchar_t *'
| |-ParmVarDecl 0x15731272188 <col:233, col:243> col:243 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x15731272388 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x157312728f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:515:40, col:252> col:52 _snwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x157312724d0 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x15731272548 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x157312725c0 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x15731272638 <col:196, col:212> col:212 _Format 'const wchar_t *'
| `-ParmVarDecl 0x157312726b0 <col:230, col:240> col:240 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x15731272e30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:516:270> col:81 _vsnwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x15731272af0 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x15731272b68 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x15731272be0 <col:201, col:217> col:217 _Format 'const wchar_t *'
| |-ParmVarDecl 0x15731272c58 <col:235, col:245> col:245 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x15731272cd0 <col:254, col:262> col:262 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x15731277f90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x157312785a0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:517:40, col:266> col:52 _vsnwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x157312780d8 <col:93, col:103> col:103 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x15731278150 <col:117, col:124> col:124 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x157312781c8 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x15731278240 <col:197, col:213> col:213 _Format 'const wchar_t *'
| |-ParmVarDecl 0x157312782b8 <col:231, col:241> col:241 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x15731278330 <col:250, col:258> col:258 _ArgList 'va_list':'char *'
|-FunctionDecl 0x15731278aa0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:110 _swprintf 'int (wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x15731278868 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x157312788e0 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-DeprecatedAttr 0x15731278b50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x15731278c68 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x15731279208 <col:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:134 _vswprintf 'int (wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x15731278f20 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x15731278fb0 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-ParmVarDecl 0x15731279028 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x157312792c0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using vswprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x157312793d8 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x15731279978 <col:36, line:1961:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:110 __swprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x15731279698 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x15731279710 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x15731279788 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-DeprecatedAttr 0x15731279a30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __swprintf_l_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x15731279b50 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1573127a1c0 <col:36, line:1962:166> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:124 __vswprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x15731279e10 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x15731279e88 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x15731279f00 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x15731279fb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1962:153, col:161> col:161 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x1573127a280 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vswprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1573127a3a0 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1573127a6a8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:36:1, line:44:1> line:36:21 swprintf 'int (wchar_t *, size_t, const wchar_t *, ...)' static inline
| |-ParmVarDecl 0x1573127a4c8 <col:53, col:63> col:63 used _String 'wchar_t *'
| |-ParmVarDecl 0x1573127a540 <col:72, col:79> col:79 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1573127a5b8 <col:117, col:133> col:133 used _Format 'const wchar_t *'
| `-CompoundStmt 0x157312822d0 <line:37:1, line:44:1>
|   |-DeclStmt 0x1573127a7f0 <line:38:5, col:21>
|   | `-VarDecl 0x1573127a788 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x1573127a888 <line:39:5, col:13>
|   | `-VarDecl 0x1573127a820 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x1573127abe0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x1573127abc8 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1573127aae0 <col:34> '<builtin fn type>' Function 0x1573127a978 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x1573127ab18 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:40:19> 'va_list':'char *' lvalue Var 0x1573127a788 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x1573127ab50 <col:29> 'const wchar_t *' lvalue ParmVar 0x1573127a5b8 '_Format' 'const wchar_t *'
|   |-BinaryOperator 0x1573127aea0 <line:41:5, col:67> 'int' '='
|   | |-DeclRefExpr 0x1573127ac10 <col:5> 'int' lvalue Var 0x1573127a820 '_Ret' 'int'
|   | `-CallExpr 0x1573127ade0 <col:12, col:67> 'int'
|   |   |-ImplicitCastExpr 0x1573127adc8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1573127ac48 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x15731277eb8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x1573127ae28 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1573127ac68 <col:27> 'wchar_t *' lvalue ParmVar 0x1573127a4c8 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x1573127ae40 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1573127ac88 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1573127a540 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x1573127ae58 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1573127aca8 <col:44> 'const wchar_t *' lvalue ParmVar 0x1573127a5b8 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x1573127ae70 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|   |   | `-ParenExpr 0x1573127ad30 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x1573127ad08 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x1573127acc8 <col:26> 'int' 0
|   |   `-ImplicitCastExpr 0x1573127ae88 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:41:59> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1573127ad50 <col:59> 'va_list':'char *' lvalue Var 0x1573127a788 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x15731282260 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x15731282248 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x15731282198 <col:34> '<builtin fn type>' Function 0x15731282030 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x157312821d0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:42:17> 'va_list':'char *' lvalue Var 0x1573127a788 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x157312822c0 <line:43:5, col:12>
|     `-ImplicitCastExpr 0x157312822a8 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x15731282288 <col:12> 'int' lvalue Var 0x1573127a820 '_Ret' 'int'
|-FunctionDecl 0x1573127a978 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34> col:34 implicit used __builtin_va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x1573127aa18 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x1573127aa88 <col:34> Implicit
|-FunctionDecl 0x15731282030 <line:27:34> col:34 implicit used __builtin_va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x157312820d0 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x15731282140 <col:34> Implicit
|-FunctionDecl 0x157312825c8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:49:1, line:52:1> line:49:31 vswprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)' static inline
| |-ParmVarDecl 0x15731282320 <col:64, col:74> col:74 used _String 'wchar_t *'
| |-ParmVarDecl 0x15731282398 <col:83, col:90> col:90 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x15731282410 <col:138, col:154> col:154 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x15731282488 <col:163, col:171> col:171 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x157312828b0 <line:50:1, line:52:1>
|   `-ReturnStmt 0x157312828a0 <line:51:5, col:62>
|     `-CallExpr 0x157312827e0 <col:12, col:62> 'int'
|       |-ImplicitCastExpr 0x157312827c8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x157312826a0 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x15731277eb8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x15731282828 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x157312826c0 <col:27> 'wchar_t *' lvalue ParmVar 0x15731282320 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x15731282840 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x157312826e0 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x15731282398 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x15731282858 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x15731282700 <col:44> 'const wchar_t *' lvalue ParmVar 0x15731282410 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x15731282870 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|       | `-ParenExpr 0x15731282788 <col:17, col:27> 'void *'
|       |   `-CStyleCastExpr 0x15731282760 <col:18, col:26> 'void *' <NullToPointer>
|       |     `-IntegerLiteral 0x15731282720 <col:26> 'int' 0
|       `-ImplicitCastExpr 0x15731282888 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:51:59> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x157312827a8 <col:59> 'va_list':'char *' lvalue ParmVar 0x15731282488 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x15731282b50 <line:60:1, line:68:1> line:60:21 _swprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)' static inline
| |-ParmVarDecl 0x157312828d8 <col:56, col:66> col:66 used _String 'wchar_t *'
| |-ParmVarDecl 0x15731282950 <col:75, col:82> col:82 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x157312829c8 <col:130, col:146> col:146 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x15731282a40 <col:155, col:165> col:165 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| `-CompoundStmt 0x157312800b8 <line:61:1, line:68:1>
|   |-DeclStmt 0x15731282ca0 <line:62:5, col:21>
|   | `-VarDecl 0x15731282c38 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x15731282d38 <line:63:5, col:13>
|   | `-VarDecl 0x15731282cd0 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x15731282de0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x15731282dc8 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x15731282d50 <col:34> '<builtin fn type>' Function 0x1573127a978 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x15731282d70 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:64:19> 'va_list':'char *' lvalue Var 0x15731282c38 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x15731282da8 <col:29> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x15731282a40 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |-BinaryOperator 0x15731282fe0 <line:65:5, col:72> 'int' '='
|   | |-DeclRefExpr 0x15731282e10 <col:5> 'int' lvalue Var 0x15731282cd0 '_Ret' 'int'
|   | `-CallExpr 0x15731282f20 <col:12, col:72> 'int'
|   |   |-ImplicitCastExpr 0x15731282f08 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x15731282e48 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x15731277eb8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x15731282f68 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x15731282e68 <col:27> 'wchar_t *' lvalue ParmVar 0x157312828d8 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x15731282f80 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x15731282e88 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x15731282950 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x15731282f98 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x15731282ea8 <col:44> 'const wchar_t *' lvalue ParmVar 0x157312829c8 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x15731282fb0 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x15731282ec8 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x15731282a40 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |   `-ImplicitCastExpr 0x15731282fc8 <col:64> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x15731282ee8 <col:64> 'va_list':'char *' lvalue Var 0x15731282c38 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x15731280048 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x15731280030 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x15731283000 <col:34> '<builtin fn type>' Function 0x15731282030 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x15731280010 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:66:17> 'va_list':'char *' lvalue Var 0x15731282c38 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x157312800a8 <line:67:5, col:12>
|     `-ImplicitCastExpr 0x15731280090 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x15731280070 <col:12> 'int' lvalue Var 0x15731282cd0 '_Ret' 'int'
|-FunctionDecl 0x15731280448 <line:73:1, line:76:1> line:73:31 _vswprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' static inline
| |-ParmVarDecl 0x15731280108 <col:67, col:77> col:77 used _String 'wchar_t *'
| |-ParmVarDecl 0x15731280180 <col:86, col:93> col:93 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x157312801f8 <col:141, col:157> col:157 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x15731280270 <col:166, col:176> col:176 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x157312802e8 <col:187, col:195> col:195 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x157312806d0 <line:74:1, line:76:1>
|   `-ReturnStmt 0x157312806c0 <line:75:5, col:67>
|     `-CallExpr 0x15731280600 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x157312805e8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x15731280528 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x15731277eb8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x15731280648 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x15731280548 <col:27> 'wchar_t *' lvalue ParmVar 0x15731280108 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x15731280660 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x15731280568 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x15731280180 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x15731280678 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x15731280588 <col:44> 'const wchar_t *' lvalue ParmVar 0x157312801f8 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x15731280690 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|       | `-DeclRefExpr 0x157312805a8 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x15731280270 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|       `-ImplicitCastExpr 0x157312806a8 <col:64> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x157312805c8 <col:64> 'va_list':'char *' lvalue ParmVar 0x157312802e8 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x15731280918 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:555:24, col:129> col:42 _wtempnam 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x157312806f8 <col:63, col:79> col:79 _Directory 'const wchar_t *'
| `-ParmVarDecl 0x15731280770 <col:102, col:118> col:118 _FilePrefix 'const wchar_t *'
|-FunctionDecl 0x15731280b68 <line:561:24, col:119> col:36 _vscwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x157312809f0 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x15731280a68 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x15731280e50 <line:562:24, col:159> col:36 _vscwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x15731280c40 <col:90, col:106> col:106 _Format 'const wchar_t *'
| |-ParmVarDecl 0x15731280cb8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x15731280d30 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1573127e168 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:563:158> col:71 fwscanf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1573127dff0 <col:87, col:94> col:94 _File 'FILE *'
| |-ParmVarDecl 0x1573127e068 <col:130, col:146> col:146 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1573127e218 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1573127e628 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:564:206> col:78 _fwscanf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1573127e418 <col:97, col:104> col:104 _File 'FILE *'
| |-ParmVarDecl 0x1573127e490 <col:150, col:166> col:166 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1573127e508 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1573127e6e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1573127e998 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:568:28, col:131> col:40 fwscanf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1573127e820 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x1573127e898 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x1573127ec80 <line:570:28, col:172> col:40 _fwscanf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1573127ea70 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1573127eae8 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1573127eb60 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1573127b030 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:571:165> col:71 swscanf 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1573127ee20 <col:86, col:102> col:102 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1573127ee98 <col:137, col:153> col:153 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1573127b0e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using swscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1573127b5b8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:572:213> col:78 _swscanf_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1573127b2e0 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1573127b358 <col:157, col:173> col:173 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1573127b3d0 <col:191, col:201> col:201 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1573127b670 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1573127b928 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:574:40, col:149> col:52 swscanf_s 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1573127b7b0 <col:69, col:84> col:84 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1573127b828 <col:121, col:137> col:137 _Format 'const wchar_t *'
|-FunctionDecl 0x1573127bc10 <line:576:40, col:191> col:52 _swscanf_s_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1573127ba00 <col:72, col:88> col:88 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1573127ba78 <col:135, col:151> col:151 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1573127baf0 <col:169, col:179> col:179 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1573127f0e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:577:219> col:77 _snwscanf 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1573127bdb0 <col:117, col:133> col:133 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1573127be28 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1573127bea0 <col:191, col:207> col:207 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1573127f1a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1573127f720 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:578:261> col:79 _snwscanf_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1573127f3a0 <col:121, col:137> col:137 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1573127f418 <col:148, col:155> col:155 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1573127f490 <col:205, col:221> col:221 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1573127f508 <col:239, col:249> col:249 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1573127f7e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1573127fb30 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:579:40, col:198> col:52 _snwscanf_s 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1573127f920 <col:94, col:110> col:110 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1573127f998 <col:121, col:128> col:128 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1573127fa10 <col:170, col:186> col:186 _Format 'const wchar_t *'
|-FunctionDecl 0x1573127feb8 <line:580:40, col:238> col:52 _snwscanf_s_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1573127fc10 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1573127fc88 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1573127fd00 <col:182, col:198> col:198 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1573127fd78 <col:216, col:226> col:226 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x157312831f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:581:134> col:70 wscanf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| |-ParmVarDecl 0x15731283110 <col:106, col:122> col:122 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x15731283298 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x15731283610 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:582:182> col:77 _wscanf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x15731283498 <col:126, col:142> col:142 _Format 'const wchar_t *'
| |-ParmVarDecl 0x15731283510 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x157312836c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x157312838e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:584:40, col:120> col:52 wscanf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x15731283800 <col:92, col:108> col:108 _Format 'const wchar_t *'
|-FunctionDecl 0x15731283b28 <line:586:40, col:161> col:52 _wscanf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x157312839b0 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x15731283a28 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x15731283e28 <line:589:24, col:99> col:39 _wfdopen 'FILE *(int, const wchar_t *) __attribute__((cdecl))':'FILE *(int, const wchar_t *)'
| |-ParmVarDecl 0x15731283c08 <col:53, col:57> col:57 _FileHandle 'int'
| `-ParmVarDecl 0x15731283c80 <col:78, col:94> col:94 _Mode 'const wchar_t *'
|-FunctionDecl 0x157312811c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:590:144> col:74 _wfopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x15731283fc0 <col:89, col:105> col:105 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x15731281020 <col:123, col:139> col:139 _Mode 'const wchar_t *'
| `-DeprecatedAttr 0x15731281278 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x15731281680 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:591:28, col:157> col:44 _wfopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x157312813c0 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x15731281438 <col:102, col:118> col:118 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x157312814b0 <col:136, col:152> col:152 _Mode 'const wchar_t *'
|-FunctionDecl 0x15731281ae0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:592:173> col:76 _wfreopen 'FILE *(const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x15731281820 <col:93, col:109> col:109 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x15731281898 <col:127, col:143> col:143 _Mode 'const wchar_t *'
| |-ParmVarDecl 0x15731281910 <col:158, col:165> col:165 _OldFile 'FILE *'
| `-DeprecatedAttr 0x15731281b98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfreopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x15731284098 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:593:28, col:184> col:44 _wfreopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x15731281ce0 <col:82, col:90> col:90 _File 'FILE **'
| |-ParmVarDecl 0x15731281d58 <col:104, col:120> col:120 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x15731281dd0 <col:138, col:154> col:154 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x15731281e48 <col:169, col:176> col:176 _OldFile 'FILE *'
|-FunctionDecl 0x157312842f0 <line:597:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x15731284180 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x15731284530 <line:600:24, col:107> col:39 _wpopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x157312843c0 <col:54, col:69> col:69 _Command 'const wchar_t *'
| `-ParmVarDecl 0x15731284438 <col:86, col:102> col:102 _Mode 'const wchar_t *'
|-FunctionDecl 0x157312846e8 <line:602:9, col:62> col:21 _wremove 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x15731284608 <col:37, col:53> col:53 _Filename 'const wchar_t *'
|-FunctionDecl 0x157312849d8 <line:603:28, col:127> col:44 _wtmpnam_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x157312847b8 <col:84, col:94> col:94 _DstBuf 'wchar_t *'
| `-ParmVarDecl 0x15731284830 <col:108, col:115> col:115 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x15731284c48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:605:82 _wtmpnam 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x15731284b70 <col:118, col:127> col:127 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x15731284cf0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wtmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x15731284f08 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:607:28, col:78> col:43 _fgetwc_nolock 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x15731284e30 <col:66, col:73> col:73 _File 'FILE *'
|-FunctionDecl 0x1573127d0d8 <line:608:28, col:96> col:43 _fputwc_nolock 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x15731284fd8 <col:63, col:71> col:71 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1573127cfe0 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1573127d320 <line:609:28, col:96> col:43 _ungetwc_nolock 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x1573127d1b0 <col:64, col:71> col:71 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1573127d228 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1573127d4d0 <line:670:9, col:53> col:22 _lock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1573127d3f8 <col:41, col:48> col:48 _File 'FILE *'
|-FunctionDecl 0x1573127d678 <line:671:9, col:55> col:22 _unlock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1573127d5a0 <col:43, col:50> col:50 _File 'FILE *'
|-FunctionDecl 0x1573127d828 <line:673:28, col:75> col:40 _fclose_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1573127d748 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x1573127d9d8 <line:674:28, col:79> col:40 _fflush_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1573127d8f8 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x1573127dd50 <line:675:28, col:179> col:43 _fread_nolock 'size_t (void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1573127dab0 <col:97, col:104> col:104 _DstBuf 'void *'
| |-ParmVarDecl 0x1573127db28 <col:118, col:125> col:125 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1573127dba0 <col:144, col:151> col:151 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1573127dc18 <col:167, col:174> col:174 _File 'FILE *'
|-FunctionDecl 0x15731288260 <line:676:28, col:203> col:43 _fread_nolock_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1573127de40 <col:99, col:106> col:106 _DstBuf 'void *'
| |-ParmVarDecl 0x1573127deb8 <col:120, col:127> col:127 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1573127df30 <col:142, col:149> col:149 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x15731288090 <col:168, col:175> col:175 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x15731288108 <col:191, col:198> col:198 _File 'FILE *'
|-FunctionDecl 0x15731288570 <line:677:28, col:111> col:40 _fseek_nolock 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x15731288350 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x157312883d0 <col:81, col:86> col:86 _Offset 'long'
| `-ParmVarDecl 0x15731288450 <col:100, col:104> col:104 _Origin 'int'
|-FunctionDecl 0x15731288730 <line:678:24, col:71> col:37 _ftell_nolock 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x15731288650 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x15731288a20 <line:679:28, col:117> col:40 _fseeki64_nolock 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x15731288800 <col:65, col:72> col:72 _File 'FILE *'
| |-ParmVarDecl 0x15731288880 <col:84, col:92> col:92 _Offset 'long long'
| `-ParmVarDecl 0x15731288900 <col:106, col:110> col:110 _Origin 'int'
|-FunctionDecl 0x15731288be0 <line:680:24, col:77> col:40 _ftelli64_nolock 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x15731288b00 <col:65, col:72> col:72 _File 'FILE *'
|-FunctionDecl 0x15731288f58 <line:681:28, col:170> col:43 _fwrite_nolock 'size_t (const void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (const void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x15731288cb8 <col:89, col:102> col:102 _DstBuf 'const void *'
| |-ParmVarDecl 0x15731288d30 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x15731288da8 <col:135, col:142> col:142 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x15731288e20 <col:158, col:165> col:165 _File 'FILE *'
|-FunctionDecl 0x15731289218 <line:682:28, col:89> col:40 _ungetc_nolock 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x157312890a0 <col:60, col:64> col:64 _Ch 'int'
| `-ParmVarDecl 0x15731289118 <col:77, col:84> col:84 _File 'FILE *'
|-FunctionDecl 0x15731289550 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:709:136> col:57 tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x157312893d0 <col:76, col:89> col:89 _Directory 'const char *'
| |-ParmVarDecl 0x15731289450 <col:112, col:125> col:125 _FilePrefix 'const char *'
| `-DeprecatedAttr 0x15731289600 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tempnam. See online help for details." ""
|-FunctionDecl 0x157312898b8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:715:89> col:75 fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x15731289958 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcloseall. See online help for details." ""
|-FunctionDecl 0x15731289c98 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:716:127> col:71 fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x15731289b20 <col:83, col:87> col:87 _FileHandle 'int'
| |-ParmVarDecl 0x15731289ba0 <col:107, col:120> col:120 _Format 'const char *'
| `-DeprecatedAttr 0x15731289d48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fdopen. See online help for details." ""
|-FunctionDecl 0x1573128c0d0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:717:87> col:74 fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1573128c170 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fgetchar. See online help for details." ""
|-FunctionDecl 0x1573128c410 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:718:92> col:68 fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x1573128c330 <col:80, col:87> col:87 _File 'FILE *'
| `-DeprecatedAttr 0x1573128c4b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fileno. See online help for details." ""
|-FunctionDecl 0x1573128c738 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:719:87> col:74 flushall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1573128c7d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _flushall. See online help for details." ""
|-FunctionDecl 0x1573128ca80 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:720:95> col:74 fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| |-ParmVarDecl 0x1573128c9a0 <col:88, col:92> col:92 _Ch 'int'
| `-DeprecatedAttr 0x1573128cb28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fputchar. See online help for details." ""
|-FunctionDecl 0x1573128ce08 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:721:91> col:66 getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x1573128cd28 <col:79, col:86> col:86 _File 'FILE *'
| `-DeprecatedAttr 0x1573128ceb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _getw. See online help for details." ""
|-FunctionDecl 0x1573128b238 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:722:109> col:70 putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1573128b0c0 <col:80, col:84> col:84 _Ch 'int'
| |-ParmVarDecl 0x1573128b138 <col:97, col:104> col:104 _File 'FILE *'
| `-DeprecatedAttr 0x1573128b2e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putw. See online help for details." ""
|-FunctionDecl 0x1573128b5a8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:723:77> col:67 rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1573128b648 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _rmtmp. See online help for details." ""
|-RecordDecl 0x1573128b758 <.//openssl//file_jk/before\crypto\rsa/rsa_locl.h:12:1, line:46:1> line:12:8 invalid struct rsa_st definition
| |-FieldDecl 0x1573128b828 <line:17:5, col:9> col:9 pad 'int'
| |-FieldDecl 0x1573128b898 <line:18:5, col:10> col:10 version 'long'
| |-FieldDecl 0x1573128b908 <line:19:5, col:23> col:23 invalid meth 'const int *'
| |-FieldDecl 0x1573128b978 <line:21:5, col:13> col:13 invalid engine 'int *'
| |-FieldDecl 0x1573128b9e8 <line:22:5, col:13> col:13 invalid n 'int *'
| |-FieldDecl 0x1573128ba58 <line:23:5, col:13> col:13 invalid e 'int *'
| |-FieldDecl 0x1573128bac8 <line:24:5, col:13> col:13 invalid d 'int *'
| |-FieldDecl 0x1573128bb38 <line:25:5, col:13> col:13 invalid p 'int *'
| |-FieldDecl 0x1573128bba8 <line:26:5, col:13> col:13 invalid q 'int *'
| |-FieldDecl 0x1573128bc18 <line:27:5, col:13> col:13 invalid dmp1 'int *'
| |-FieldDecl 0x1573128bc88 <line:28:5, col:13> col:13 invalid dmq1 'int *'
| |-FieldDecl 0x1573128bcf8 <line:29:5, col:13> col:13 invalid iqmp 'int *'
| |-FieldDecl 0x1573128bd68 <line:31:5, col:20> col:20 invalid ex_data 'int'
| |-FieldDecl 0x1573128bdd8 <line:32:5, col:9> col:9 references 'int'
| |-FieldDecl 0x1573128be48 <line:33:5, col:9> col:9 flags 'int'
| |-FieldDecl 0x1573128beb8 <line:35:5, col:18> col:18 invalid _method_mod_n 'int *'
| |-FieldDecl 0x1573128bf28 <line:36:5, col:18> col:18 invalid _method_mod_p 'int *'
| |-FieldDecl 0x1573128bf98 <line:37:5, col:18> col:18 invalid _method_mod_q 'int *'
| |-FieldDecl 0x1573128c008 <line:42:5, col:11> col:11 bignum_data 'char *'
| |-FieldDecl 0x15731286070 <line:43:5, col:18> col:18 invalid blinding 'int *'
| |-FieldDecl 0x157312860e0 <line:44:5, col:18> col:18 invalid mt_blinding 'int *'
| `-FieldDecl 0x15731286150 <line:45:5, col:20> col:20 invalid lock 'int *'
|-RecordDecl 0x157312861a8 <line:48:1, line:91:1> line:48:8 struct rsa_meth_st definition
| |-FieldDecl 0x15731286278 <line:49:5, col:11> col:11 name 'char *'
| |-FieldDecl 0x157312866b8 <line:50:5, line:51:65> line:50:11 rsa_pub_enc 'int (*)(int, const unsigned char *, unsigned char *, int *, int)'
| |-FieldDecl 0x157312869f0 <line:52:5, line:53:65> line:52:11 rsa_pub_dec 'int (*)(int, const unsigned char *, unsigned char *, int *, int)'
| |-FieldDecl 0x15731286d28 <line:54:5, line:55:66> line:54:11 rsa_priv_enc 'int (*)(int, const unsigned char *, unsigned char *, int *, int)'
| |-FieldDecl 0x15731287080 <line:56:5, line:57:66> line:56:11 rsa_priv_dec 'int (*)(int, const unsigned char *, unsigned char *, int *, int)'
| |-FieldDecl 0x15731287410 <line:59:5, col:75> col:11 rsa_mod_exp 'int (*)(int *, const int *, int *, int *)'
| |-FieldDecl 0x157312878c0 <line:61:5, line:62:72> line:61:11 bn_mod_exp 'int (*)(int *, const int *, const int *, const int *, int *, int *)'
| |-FieldDecl 0x15731287a98 <line:64:5, col:26> col:11 init 'int (*)(int *)'
| |-FieldDecl 0x15731287bb0 <line:66:5, col:28> col:11 finish 'int (*)(int *)'
| |-FieldDecl 0x15731287c20 <line:68:5, col:9> col:9 flags 'int'
| |-FieldDecl 0x15731287c90 <line:70:5, col:11> col:11 app_data 'char *'
| |-FieldDecl 0x1573128e1e0 <line:77:5, line:80:36> line:77:11 rsa_sign 'int (*)(int, const unsigned char *, unsigned int, unsigned char *, unsigned int *, const int *)'
| |-FieldDecl 0x1573128e690 <line:81:5, line:83:59> line:81:11 rsa_verify 'int (*)(int, const unsigned char *, unsigned int, const unsigned char *, unsigned int, const int *)'
| `-FieldDecl 0x1573128ea20 <line:90:5, col:67> col:11 rsa_keygen 'int (*)(int *, int, int *, int *)'
|-FunctionDecl 0x1573128f010 <line:93:1, line:96:50> line:93:12 invalid int_rsa_verify 'int (int, const unsigned char *, unsigned int, unsigned char *, size_t *, const unsigned char *, size_t, int *)' extern
| |-ParmVarDecl 0x1573128ea90 <col:27, col:31> col:31 dtype 'int'
| |-ParmVarDecl 0x1573128eb10 <col:38, col:59> col:59 m 'const unsigned char *'
| |-ParmVarDecl 0x1573128eb90 <line:94:27, col:40> col:40 m_len 'unsigned int'
| |-ParmVarDecl 0x1573128ec10 <col:47, col:62> col:62 rm 'unsigned char *'
| |-ParmVarDecl 0x1573128ece8 <line:95:27, col:35> col:35 prm_len 'size_t *'
| |-ParmVarDecl 0x1573128ed68 <col:44, col:65> col:65 sigbuf 'const unsigned char *'
| |-ParmVarDecl 0x1573128ede0 <line:96:27, col:34> col:34 siglen 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1573128ee60 <col:42, col:47> col:47 invalid rsa 'int *'
|-VarDecl 0x1573129ad30 <.//openssl//file_jk/before\crypto\rsa\rsa_pss.c:19:1, col:64> col:28 used zeroes 'const unsigned char [8]' static cinit
| `-InitListExpr 0x1573129af80 <col:39, col:64> 'const unsigned char [8]'
|   |-ImplicitCastExpr 0x1573129afc0 <col:41> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1573129ad98 <col:41> 'int' 0
|   |-ImplicitCastExpr 0x1573129afe0 <col:44> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1573129adc0 <col:44> 'int' 0
|   |-ImplicitCastExpr 0x1573129b008 <col:47> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1573129ade8 <col:47> 'int' 0
|   |-ImplicitCastExpr 0x1573129b040 <col:50> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1573129ae10 <col:50> 'int' 0
|   |-ImplicitCastExpr 0x1573129b058 <col:53> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1573129ae38 <col:53> 'int' 0
|   |-ImplicitCastExpr 0x1573129b0b0 <col:56> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1573129ae60 <col:56> 'int' 0
|   |-ImplicitCastExpr 0x1573129b0c8 <col:59> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1573129ae88 <col:59> 'int' 0
|   `-ImplicitCastExpr 0x1573129b0e0 <col:62> 'unsigned char' <IntegralCast>
|     `-IntegerLiteral 0x1573129aeb0 <col:62> 'int' 0
|-FunctionDecl 0x1573129b4a0 <line:25:1, line:30:1> line:25:5 invalid RSA_verify_PKCS1_PSS 'int (int *, const unsigned char *, const int *, const unsigned char *, int)'
| |-ParmVarDecl 0x1573129b190 <col:26, col:31> col:31 invalid rsa 'int *'
| |-ParmVarDecl 0x1573129b210 <col:36, col:57> col:57 used mHash 'const unsigned char *'
| |-ParmVarDecl 0x1573129b290 <line:26:26, col:40> col:40 invalid Hash 'const int *'
| |-ParmVarDecl 0x1573129b310 <col:46, col:67> col:67 used EM 'const unsigned char *'
| |-ParmVarDecl 0x1573129b390 <line:27:26, col:30> col:30 used sLen 'int'
| `-CompoundStmt 0x1573129b7e8 <line:28:1, line:30:1>
|-FunctionDecl 0x1573129bbb0 <line:32:1, line:135:1> line:32:5 invalid RSA_verify_PKCS1_PSS_mgf1 'int (int *, const unsigned char *, const int *, const int *, const unsigned char *, int)'
| |-ParmVarDecl 0x1573129b810 <col:31, col:36> col:36 invalid rsa 'int *'
| |-ParmVarDecl 0x1573129b890 <col:41, col:62> col:62 used mHash 'const unsigned char *'
| |-ParmVarDecl 0x1573129b910 <line:33:31, col:45> col:45 invalid Hash 'const int *'
| |-ParmVarDecl 0x1573129b990 <col:51, col:65> col:65 invalid mgf1Hash 'const int *'
| |-ParmVarDecl 0x1573129ba10 <line:34:31, col:52> col:52 used EM 'const unsigned char *'
| |-ParmVarDecl 0x1573129ba90 <col:56, col:60> col:60 used sLen 'int'
| `-CompoundStmt 0x157312948b0 <line:35:1, line:135:1>
|   |-DeclStmt 0x15731297ce8 <line:36:5, col:10>
|   | `-VarDecl 0x15731297c80 <col:5, col:9> col:9 used i 'int'
|   |-DeclStmt 0x15731297da8 <line:37:5, col:16>
|   | `-VarDecl 0x15731297d18 <col:5, col:15> col:9 used ret 'int' cinit
|   |   `-IntegerLiteral 0x15731297d80 <col:15> 'int' 0
|   |-DeclStmt 0x15731297fe8 <line:38:5, col:41>
|   | |-VarDecl 0x15731297dd8 <col:5, col:9> col:9 used hLen 'int'
|   | |-VarDecl 0x15731297e58 <col:5, col:15> col:15 used maskedDBLen 'int'
|   | |-VarDecl 0x15731297ed8 <col:5, col:28> col:28 used MSBits 'int'
|   | `-VarDecl 0x15731297f58 <col:5, col:36> col:36 used emLen 'int'
|   |-DeclStmt 0x15731298080 <line:39:5, col:27>
|   | `-VarDecl 0x15731298018 <col:5, col:26> col:26 used H 'const unsigned char *'
|   |-DeclStmt 0x157312981b8 <line:40:5, col:29>
|   | `-VarDecl 0x157312980b0 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/before\crypto\rsa\rsa_pss.c:40:20 used DB 'unsigned char *' cinit
|   |   `-ImplicitCastExpr 0x157312981a0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <NullToPointer>
|   |     `-ParenExpr 0x15731298180 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x15731298158 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x15731298118 <col:26> 'int' 0
|   |-DeclStmt 0x157312983c0 <.//openssl//file_jk/before\crypto\rsa\rsa_pss.c:42:5, col:38>
|   | `-VarDecl 0x15731298358 <col:5, col:19> col:19 invalid H_ 'unsigned char'
|   |-IfStmt 0x157312984e0 <line:45:5, line:46:14>
|   | |-OpaqueValueExpr 0x157312984c8 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x157312984b0 <col:9, col:14> 'err' 0x15731298460
|   |-IfStmt 0x15731298760 <line:52:5, line:53:14>
|   | |-BinaryOperator 0x15731298728 <line:52:9, col:16> 'int' '<'
|   | | |-ImplicitCastExpr 0x15731298710 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x157312986c8 <col:9> 'int' lvalue Var 0x15731297dd8 'hLen' 'int'
|   | | `-IntegerLiteral 0x157312986e8 <col:16> 'int' 0
|   | `-GotoStmt 0x15731298748 <line:53:9, col:14> 'err' 0x15731298460
|   |-IfStmt 0x15731298bd0 <line:60:5, line:67:5> has_else
|   | |-BinaryOperator 0x15731298808 <line:60:9, col:18> 'int' '=='
|   | | |-ImplicitCastExpr 0x157312987f0 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x15731298778 <col:9> 'int' lvalue ParmVar 0x1573129ba90 'sLen' 'int'
|   | | `-UnaryOperator 0x157312987d8 <col:17, col:18> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x157312987b0 <col:18> 'int' 1
|   | |-BinaryOperator 0x15731298880 <line:61:9, col:16> 'int' '='
|   | | |-DeclRefExpr 0x15731298828 <col:9> 'int' lvalue ParmVar 0x1573129ba90 'sLen' 'int'
|   | | `-ImplicitCastExpr 0x15731298868 <col:16> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x15731298848 <col:16> 'int' lvalue Var 0x15731297dd8 'hLen' 'int'
|   | `-IfStmt 0x15731298ba8 <line:62:10, line:67:5> has_else
|   |   |-BinaryOperator 0x15731298918 <line:62:14, col:23> 'int' '=='
|   |   | |-ImplicitCastExpr 0x15731298900 <col:14> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x157312988a0 <col:14> 'int' lvalue ParmVar 0x1573129ba90 'sLen' 'int'
|   |   | `-UnaryOperator 0x157312988e8 <col:22, col:23> 'int' prefix '-'
|   |   |   `-IntegerLiteral 0x157312988c0 <col:23> 'int' 2
|   |   |-BinaryOperator 0x15731298998 <line:63:9, col:17> 'int' '='
|   |   | |-DeclRefExpr 0x15731298938 <col:9> 'int' lvalue ParmVar 0x1573129ba90 'sLen' 'int'
|   |   | `-UnaryOperator 0x15731298980 <col:16, col:17> 'int' prefix '-'
|   |   |   `-IntegerLiteral 0x15731298958 <col:17> 'int' 2
|   |   `-IfStmt 0x15731298b90 <line:64:10, line:67:5>
|   |     |-BinaryOperator 0x15731298a30 <line:64:14, col:22> 'int' '<'
|   |     | |-ImplicitCastExpr 0x15731298a18 <col:14> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x157312989b8 <col:14> 'int' lvalue ParmVar 0x1573129ba90 'sLen' 'int'
|   |     | `-UnaryOperator 0x15731298a00 <col:21, col:22> 'int' prefix '-'
|   |     |   `-IntegerLiteral 0x157312989d8 <col:22> 'int' 2
|   |     `-CompoundStmt 0x15731298b78 <col:25, line:67:5>
|   |       `-GotoStmt 0x15731298b60 <line:66:9, col:14> 'err' 0x15731298460
|   |-IfStmt 0x157312990e8 <line:71:5, line:74:5>
|   | |-BinaryOperator 0x15731299078 <line:71:9, col:32> 'int' '&'
|   | | |-ImplicitCastExpr 0x15731299060 <col:9, col:13> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x15731299048 <col:9, col:13> 'unsigned char' <LValueToRValue>
|   | | |   `-ArraySubscriptExpr 0x15731298f88 <col:9, col:13> 'const unsigned char' lvalue
|   | | |     |-ImplicitCastExpr 0x15731298f70 <col:9> 'const unsigned char *' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x15731298f10 <col:9> 'const unsigned char *' lvalue ParmVar 0x1573129ba10 'EM' 'const unsigned char *'
|   | | |     `-IntegerLiteral 0x15731298f48 <col:12> 'int' 0
|   | | `-ParenExpr 0x15731299028 <col:17, col:32> 'int'
|   | |   `-BinaryOperator 0x15731299008 <col:18, col:26> 'int' '<<'
|   | |     |-IntegerLiteral 0x15731298fa8 <col:18> 'int' 255
|   | |     `-ImplicitCastExpr 0x15731298ff0 <col:26> 'int' <LValueToRValue>
|   | |       `-DeclRefExpr 0x15731298fd0 <col:26> 'int' lvalue Var 0x15731297ed8 'MSBits' 'int'
|   | `-CompoundStmt 0x157312990d0 <col:35, line:74:5>
|   |   `-GotoStmt 0x157312990b8 <line:73:9, col:14> 'err' 0x15731298460
|   |-IfStmt 0x15731299210 <line:75:5, line:78:5>
|   | |-BinaryOperator 0x15731299160 <line:75:9, col:19> 'int' '=='
|   | | |-ImplicitCastExpr 0x15731299148 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x15731299100 <col:9> 'int' lvalue Var 0x15731297ed8 'MSBits' 'int'
|   | | `-IntegerLiteral 0x15731299120 <col:19> 'int' 0
|   | `-CompoundStmt 0x157312991f0 <col:22, line:78:5>
|   |   |-UnaryOperator 0x157312991a0 <line:76:9, col:11> 'const unsigned char *' postfix '++'
|   |   | `-DeclRefExpr 0x15731299180 <col:9> 'const unsigned char *' lvalue ParmVar 0x1573129ba10 'EM' 'const unsigned char *'
|   |   `-UnaryOperator 0x157312991d8 <line:77:9, col:14> 'int' postfix '--'
|   |     `-DeclRefExpr 0x157312991b8 <col:9> 'int' lvalue Var 0x15731297f58 'emLen' 'int'
|   |-IfStmt 0x15731299350 <line:79:5, line:82:5>
|   | |-BinaryOperator 0x157312992e0 <line:79:9, col:24> 'int' '<'
|   | | |-ImplicitCastExpr 0x157312992c8 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x15731299228 <col:9> 'int' lvalue Var 0x15731297f58 'emLen' 'int'
|   | | `-BinaryOperator 0x157312992a8 <col:17, col:24> 'int' '+'
|   | |   |-ImplicitCastExpr 0x15731299290 <col:17> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x15731299248 <col:17> 'int' lvalue Var 0x15731297dd8 'hLen' 'int'
|   | |   `-IntegerLiteral 0x15731299268 <col:24> 'int' 2
|   | `-CompoundStmt 0x15731299338 <col:27, line:82:5>
|   |   `-GotoStmt 0x15731299320 <line:81:9, col:14> 'err' 0x15731298460
|   |-IfStmt 0x157312994e8 <line:83:5, line:86:5>
|   | |-BinaryOperator 0x15731299478 <line:83:9, col:31> 'int' '>'
|   | | |-ImplicitCastExpr 0x15731299460 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x15731299368 <col:9> 'int' lvalue ParmVar 0x1573129ba90 'sLen' 'int'
|   | | `-BinaryOperator 0x15731299440 <col:16, col:31> 'int' '-'
|   | |   |-BinaryOperator 0x157312993f8 <col:16, col:24> 'int' '-'
|   | |   | |-ImplicitCastExpr 0x157312993c8 <col:16> 'int' <LValueToRValue>
|   | |   | | `-DeclRefExpr 0x15731299388 <col:16> 'int' lvalue Var 0x15731297f58 'emLen' 'int'
|   | |   | `-ImplicitCastExpr 0x157312993e0 <col:24> 'int' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x157312993a8 <col:24> 'int' lvalue Var 0x15731297dd8 'hLen' 'int'
|   | |   `-IntegerLiteral 0x15731299418 <col:31> 'int' 2
|   | `-CompoundStmt 0x157312994d0 <col:34, line:86:5>
|   |   `-GotoStmt 0x157312994b8 <line:85:9, col:14> 'err' 0x15731298460
|   |-IfStmt 0x157312996a0 <line:87:5, line:90:5>
|   | |-BinaryOperator 0x15731299630 <line:87:9, col:26> 'int' '!='
|   | | |-ImplicitCastExpr 0x15731299618 <col:9, col:21> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x15731299600 <col:9, col:21> 'unsigned char' <LValueToRValue>
|   | | |   `-ArraySubscriptExpr 0x157312995b8 <col:9, col:21> 'const unsigned char' lvalue
|   | | |     |-ImplicitCastExpr 0x157312995a0 <col:9> 'const unsigned char *' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x15731299500 <col:9> 'const unsigned char *' lvalue ParmVar 0x1573129ba10 'EM' 'const unsigned char *'
|   | | |     `-BinaryOperator 0x15731299580 <col:12, col:20> 'int' '-'
|   | | |       |-ImplicitCastExpr 0x15731299568 <col:12> 'int' <LValueToRValue>
|   | | |       | `-DeclRefExpr 0x15731299520 <col:12> 'int' lvalue Var 0x15731297f58 'emLen' 'int'
|   | | |       `-IntegerLiteral 0x15731299540 <col:20> 'int' 1
|   | | `-IntegerLiteral 0x157312995d8 <col:26> 'int' 188
|   | `-CompoundStmt 0x15731299688 <col:32, line:90:5>
|   |   `-GotoStmt 0x15731299670 <line:89:9, col:14> 'err' 0x15731298460
|   |-BinaryOperator 0x157312997c8 <line:91:5, col:34> 'int' '='
|   | |-DeclRefExpr 0x157312996b8 <col:5> 'int' lvalue Var 0x15731297e58 'maskedDBLen' 'int'
|   | `-BinaryOperator 0x157312997a8 <col:19, col:34> 'int' '-'
|   |   |-BinaryOperator 0x15731299760 <col:19, col:27> 'int' '-'
|   |   | |-ImplicitCastExpr 0x15731299730 <col:19> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x157312996f0 <col:19> 'int' lvalue Var 0x15731297f58 'emLen' 'int'
|   |   | `-ImplicitCastExpr 0x15731299748 <col:27> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x15731299710 <col:27> 'int' lvalue Var 0x15731297dd8 'hLen' 'int'
|   |   `-IntegerLiteral 0x15731299780 <col:34> 'int' 1
|   |-BinaryOperator 0x157312998b0 <line:92:5, col:14> 'const unsigned char *' '='
|   | |-DeclRefExpr 0x157312997e8 <col:5> 'const unsigned char *' lvalue Var 0x15731298018 'H' 'const unsigned char *'
|   | `-BinaryOperator 0x15731299890 <col:9, col:14> 'const unsigned char *' '+'
|   |   |-ImplicitCastExpr 0x15731299860 <col:9> 'const unsigned char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x15731299820 <col:9> 'const unsigned char *' lvalue ParmVar 0x1573129ba10 'EM' 'const unsigned char *'
|   |   `-ImplicitCastExpr 0x15731299878 <col:14> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x15731299840 <col:14> 'int' lvalue Var 0x15731297e58 'maskedDBLen' 'int'
|   |-BinaryOperator 0x15731299aa8 <line:93:5, col:36> 'unsigned char *' '='
|   | |-DeclRefExpr 0x157312998d0 <col:5> 'unsigned char *' lvalue Var 0x157312980b0 'DB' 'unsigned char *'
|   | `-ImplicitCastExpr 0x15731299a90 <col:10, col:36> 'unsigned char *' <IntegralToPointer>
|   |   `-CallExpr 0x15731299a50 <col:10, col:36> 'int'
|   |     |-ImplicitCastExpr 0x15731299a38 <col:10> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x157312999f8 <col:10> 'int ()' Function 0x15731299930 'OPENSSL_malloc' 'int ()'
|   |     `-ImplicitCastExpr 0x15731299a78 <col:25> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x15731299a18 <col:25> 'int' lvalue Var 0x15731297e58 'maskedDBLen' 'int'
|   |-IfStmt 0x15731299c10 <line:94:5, line:97:5>
|   | |-BinaryOperator 0x15731299ba0 <line:94:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x15731299b70 <.//openssl//file_jk/before\crypto\rsa\rsa_pss.c:94:9> 'unsigned char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x15731299ac8 <col:9> 'unsigned char *' lvalue Var 0x157312980b0 'DB' 'unsigned char *'
|   | | `-ImplicitCastExpr 0x15731299b88 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <BitCast>
|   | |   `-ParenExpr 0x15731299b50 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x15731299b28 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x15731299ae8 <col:26> 'int' 0
|   | `-CompoundStmt 0x15731299bf8 <.//openssl//file_jk/before\crypto\rsa\rsa_pss.c:94:21, line:97:5>
|   |   `-GotoStmt 0x15731299be0 <line:96:9, col:14> 'err' 0x15731298460
|   |-IfStmt 0x15731299e60 <line:98:5, line:99:14>
|   | |-OpaqueValueExpr 0x15731299e48 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x15731299e30 <col:9, col:14> 'err' 0x15731298460
|   |-ForStmt 0x1573129a140 <line:100:5, line:101:22>
|   | |-BinaryOperator 0x15731299ed8 <line:100:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x15731299e78 <col:10> 'int' lvalue Var 0x15731297c80 'i' 'int'
|   | | `-IntegerLiteral 0x15731299eb0 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x15731299f68 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x15731299f38 <col:17> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x15731299ef8 <col:17> 'int' lvalue Var 0x15731297c80 'i' 'int'
|   | | `-ImplicitCastExpr 0x15731299f50 <col:21> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x15731299f18 <col:21> 'int' lvalue Var 0x15731297e58 'maskedDBLen' 'int'
|   | |-UnaryOperator 0x15731299fa8 <col:34, col:35> 'int' postfix '++'
|   | | `-DeclRefExpr 0x15731299f88 <col:34> 'int' lvalue Var 0x15731297c80 'i' 'int'
|   | `-CompoundAssignOperator 0x1573129a110 <line:101:9, col:22> 'unsigned char' '^=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |-ArraySubscriptExpr 0x1573129a030 <col:9, col:13> 'unsigned char' lvalue
|   |   | |-ImplicitCastExpr 0x1573129a000 <col:9> 'unsigned char *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x15731299fc0 <col:9> 'unsigned char *' lvalue Var 0x157312980b0 'DB' 'unsigned char *'
|   |   | `-ImplicitCastExpr 0x1573129a018 <col:12> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x15731299fe0 <col:12> 'int' lvalue Var 0x15731297c80 'i' 'int'
|   |   `-ImplicitCastExpr 0x1573129a0f8 <col:18, col:22> 'int' <IntegralCast>
|   |     `-ImplicitCastExpr 0x1573129a0e0 <col:18, col:22> 'unsigned char' <LValueToRValue>
|   |       `-ArraySubscriptExpr 0x1573129a0c0 <col:18, col:22> 'const unsigned char' lvalue
|   |         |-ImplicitCastExpr 0x1573129a090 <col:18> 'const unsigned char *' <LValueToRValue>
|   |         | `-DeclRefExpr 0x1573129a050 <col:18> 'const unsigned char *' lvalue ParmVar 0x1573129ba10 'EM' 'const unsigned char *'
|   |         `-ImplicitCastExpr 0x1573129a0a8 <col:21> 'int' <LValueToRValue>
|   |           `-DeclRefExpr 0x1573129a070 <col:21> 'int' lvalue Var 0x15731297c80 'i' 'int'
|   |-IfStmt 0x1573129a348 <line:102:5, line:103:37>
|   | |-ImplicitCastExpr 0x1573129a198 <line:102:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1573129a178 <col:9> 'int' lvalue Var 0x15731297ed8 'MSBits' 'int'
|   | `-CompoundAssignOperator 0x1573129a318 <line:103:9, col:37> 'unsigned char' '&=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |-ArraySubscriptExpr 0x1573129a210 <col:9, col:13> 'unsigned char' lvalue
|   |   | |-ImplicitCastExpr 0x1573129a1f8 <col:9> 'unsigned char *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1573129a1b0 <col:9> 'unsigned char *' lvalue Var 0x157312980b0 'DB' 'unsigned char *'
|   |   | `-IntegerLiteral 0x1573129a1d0 <col:12> 'int' 0
|   |   `-BinaryOperator 0x1573129a2f8 <col:18, col:37> 'int' '>>'
|   |     |-IntegerLiteral 0x1573129a230 <col:18> 'int' 255
|   |     `-ParenExpr 0x1573129a2d8 <col:26, col:37> 'int'
|   |       `-BinaryOperator 0x1573129a2b8 <col:27, col:31> 'int' '-'
|   |         |-IntegerLiteral 0x1573129a258 <col:27> 'int' 8
|   |         `-ImplicitCastExpr 0x1573129a2a0 <col:31> 'int' <LValueToRValue>
|   |           `-DeclRefExpr 0x1573129a280 <col:31> 'int' lvalue Var 0x15731297ed8 'MSBits' 'int'
|   |-ForStmt 0x1573129a628 <line:104:5, col:59>
|   | |-BinaryOperator 0x1573129a3a8 <col:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x1573129a360 <col:10> 'int' lvalue Var 0x15731297c80 'i' 'int'
|   | | `-IntegerLiteral 0x1573129a380 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1573129a5c8 <col:17, col:51> 'int' '&&'
|   | | |-BinaryOperator 0x1573129a4b0 <col:17, col:26> 'int' '=='
|   | | | |-ImplicitCastExpr 0x1573129a498 <col:17, col:21> 'int' <IntegralCast>
|   | | | | `-ImplicitCastExpr 0x1573129a480 <col:17, col:21> 'unsigned char' <LValueToRValue>
|   | | | |   `-ArraySubscriptExpr 0x1573129a438 <col:17, col:21> 'unsigned char' lvalue
|   | | | |     |-ImplicitCastExpr 0x1573129a408 <col:17> 'unsigned char *' <LValueToRValue>
|   | | | |     | `-DeclRefExpr 0x1573129a3c8 <col:17> 'unsigned char *' lvalue Var 0x157312980b0 'DB' 'unsigned char *'
|   | | | |     `-ImplicitCastExpr 0x1573129a420 <col:20> 'int' <LValueToRValue>
|   | | | |       `-DeclRefExpr 0x1573129a3e8 <col:20> 'int' lvalue Var 0x15731297c80 'i' 'int'
|   | | | `-IntegerLiteral 0x1573129a458 <col:26> 'int' 0
|   | | `-BinaryOperator 0x1573129a5a8 <col:31, col:51> 'int' '<'
|   | |   |-ImplicitCastExpr 0x1573129a590 <col:31> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x1573129a4d0 <col:31> 'int' lvalue Var 0x15731297c80 'i' 'int'
|   | |   `-ParenExpr 0x1573129a570 <col:35, col:51> 'int'
|   | |     `-BinaryOperator 0x1573129a550 <col:36, col:50> 'int' '-'
|   | |       |-ImplicitCastExpr 0x1573129a538 <col:36> 'int' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x1573129a4f0 <col:36> 'int' lvalue Var 0x15731297e58 'maskedDBLen' 'int'
|   | |       `-IntegerLiteral 0x1573129a510 <col:50> 'int' 1
|   | |-UnaryOperator 0x1573129a608 <col:54, col:55> 'int' postfix '++'
|   | | `-DeclRefExpr 0x1573129a5e8 <col:54> 'int' lvalue Var 0x15731297c80 'i' 'int'
|   | `-NullStmt 0x1573129a620 <col:59>
|   |-IfStmt 0x1573129a7b8 <line:105:5, line:108:5>
|   | |-BinaryOperator 0x1573129a748 <line:105:9, col:20> 'int' '!='
|   | | |-ImplicitCastExpr 0x1573129a730 <col:9, col:15> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x1573129a718 <col:9, col:15> 'unsigned char' <LValueToRValue>
|   | | |   `-ArraySubscriptExpr 0x1573129a6d0 <col:9, col:15> 'unsigned char' lvalue
|   | | |     |-ImplicitCastExpr 0x1573129a6b8 <col:9> 'unsigned char *' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x1573129a660 <col:9> 'unsigned char *' lvalue Var 0x157312980b0 'DB' 'unsigned char *'
|   | | |     `-UnaryOperator 0x1573129a6a0 <col:12, col:13> 'int' postfix '++'
|   | | |       `-DeclRefExpr 0x1573129a680 <col:12> 'int' lvalue Var 0x15731297c80 'i' 'int'
|   | | `-IntegerLiteral 0x1573129a6f0 <col:20> 'int' 1
|   | `-CompoundStmt 0x1573129a7a0 <col:25, line:108:5>
|   |   `-GotoStmt 0x1573129a788 <line:107:9, col:14> 'err' 0x15731298460
|   |-IfStmt 0x1573129a9c8 <line:109:5, line:112:5>
|   | |-BinaryOperator 0x1573129a958 <line:109:9, col:43> 'int' '&&'
|   | | |-BinaryOperator 0x1573129a830 <col:9, col:17> 'int' '>='
|   | | | |-ImplicitCastExpr 0x1573129a818 <col:9> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1573129a7d0 <col:9> 'int' lvalue ParmVar 0x1573129ba90 'sLen' 'int'
|   | | | `-IntegerLiteral 0x1573129a7f0 <col:17> 'int' 0
|   | | `-BinaryOperator 0x1573129a938 <col:22, col:43> 'int' '!='
|   | |   |-ParenExpr 0x1573129a8e0 <col:22, col:38> 'int'
|   | |   | `-BinaryOperator 0x1573129a8c0 <col:23, col:37> 'int' '-'
|   | |   |   |-ImplicitCastExpr 0x1573129a890 <col:23> 'int' <LValueToRValue>
|   | |   |   | `-DeclRefExpr 0x1573129a850 <col:23> 'int' lvalue Var 0x15731297e58 'maskedDBLen' 'int'
|   | |   |   `-ImplicitCastExpr 0x1573129a8a8 <col:37> 'int' <LValueToRValue>
|   | |   |     `-DeclRefExpr 0x1573129a870 <col:37> 'int' lvalue Var 0x15731297c80 'i' 'int'
|   | |   `-ImplicitCastExpr 0x1573129a920 <col:43> 'int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x1573129a900 <col:43> 'int' lvalue ParmVar 0x1573129ba90 'sLen' 'int'
|   | `-CompoundStmt 0x1573129a9b0 <col:49, line:112:5>
|   |   `-GotoStmt 0x1573129a998 <line:111:9, col:14> 'err' 0x15731298460
|   |-IfStmt 0x15731293d68 <line:113:5, line:116:14>
|   | |-OpaqueValueExpr 0x15731293d50 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x15731293d38 <col:9, col:14> 'err' 0x15731298460
|   |-IfStmt 0x15731293fb0 <line:117:5, line:120:5>
|   | |-BinaryOperator 0x15731293df0 <line:117:9, col:23> 'int' '-'
|   | | |-ImplicitCastExpr 0x15731293dc0 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x15731293d80 <col:9> 'int' lvalue Var 0x15731297e58 'maskedDBLen' 'int'
|   | | `-ImplicitCastExpr 0x15731293dd8 <col:23> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x15731293da0 <col:23> 'int' lvalue Var 0x15731297c80 'i' 'int'
|   | `-CompoundStmt 0x15731293f98 <col:26, line:120:5>
|   |   `-IfStmt 0x15731293f80 <line:118:9, line:119:18>
|   |     |-OpaqueValueExpr 0x15731293f68 <<invalid sloc>> '_Bool'
|   |     `-GotoStmt 0x15731293f50 <col:13, col:18> 'err' 0x15731298460
|   |-IfStmt 0x15731294190 <line:121:5, line:122:14>
|   | |-OpaqueValueExpr 0x15731294178 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x15731294160 <col:9, col:14> 'err' 0x15731298460
|   |-IfStmt 0x15731294590 <line:123:5, line:127:15> has_else
|   | |-OpaqueValueExpr 0x15731294578 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x157312944f8 <line:123:30, line:126:5>
|   | | `-BinaryOperator 0x157312944d8 <line:125:9, col:15> 'int' '='
|   | |   |-DeclRefExpr 0x15731294478 <col:9> 'int' lvalue Var 0x15731297d18 'ret' 'int'
|   | |   `-IntegerLiteral 0x157312944b0 <col:15> 'int' 0
|   | `-BinaryOperator 0x15731294558 <line:127:9, col:15> 'int' '='
|   |   |-DeclRefExpr 0x15731294510 <col:9> 'int' lvalue Var 0x15731297d18 'ret' 'int'
|   |   `-IntegerLiteral 0x15731294530 <col:15> 'int' 1
|   |-LabelStmt 0x15731294740 <line:129:2, line:130:20> 'err'
|   | `-CallExpr 0x15731294700 <col:5, col:20> 'int'
|   |   |-ImplicitCastExpr 0x157312946e8 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x157312946a8 <col:5> 'int ()' Function 0x157312945e0 'OPENSSL_free' 'int ()'
|   |   `-ImplicitCastExpr 0x15731294728 <col:18> 'unsigned char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x157312946c8 <col:18> 'unsigned char *' lvalue Var 0x157312980b0 'DB' 'unsigned char *'
|   `-ReturnStmt 0x157312948a0 <line:133:5, col:12>
|     `-ImplicitCastExpr 0x15731294888 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x15731294868 <col:12> 'int' lvalue Var 0x15731297d18 'ret' 'int'
|-FunctionDecl 0x157312941f0 <line:123:9> col:9 implicit used memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x15731294290 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x157312942f8 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x15731294360 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x15731294cf0 <line:137:1, line:142:1> line:137:5 invalid RSA_padding_add_PKCS1_PSS 'int (int *, unsigned char *, const unsigned char *, const int *, int)'
| |-ParmVarDecl 0x157312949c8 <col:31, col:36> col:36 invalid rsa 'int *'
| |-ParmVarDecl 0x15731294a48 <col:41, col:56> col:56 used EM 'unsigned char *'
| |-ParmVarDecl 0x15731294ac8 <line:138:31, col:52> col:52 used mHash 'const unsigned char *'
| |-ParmVarDecl 0x15731294b48 <line:139:31, col:45> col:45 invalid Hash 'const int *'
| |-ParmVarDecl 0x15731294bc8 <col:51, col:55> col:55 used sLen 'int'
| `-CompoundStmt 0x15731295010 <line:140:1, line:142:1>
`-FunctionDecl 0x157312953d0 <line:144:1, line:249:1> line:144:5 invalid RSA_padding_add_PKCS1_PSS_mgf1 'int (int *, unsigned char *, const unsigned char *, const int *, const int *, int)'
  |-ParmVarDecl 0x15731295038 <col:36, col:41> col:41 invalid rsa 'int *'
  |-ParmVarDecl 0x157312950b8 <col:46, col:61> col:61 used EM 'unsigned char *'
  |-ParmVarDecl 0x15731295138 <line:145:36, col:57> col:57 used mHash 'const unsigned char *'
  |-ParmVarDecl 0x157312951b8 <line:146:36, col:50> col:50 invalid Hash 'const int *'
  |-ParmVarDecl 0x15731295238 <col:56, col:70> col:70 invalid mgf1Hash 'const int *'
  |-ParmVarDecl 0x157312952b8 <line:147:36, col:40> col:40 used sLen 'int'
  `-CompoundStmt 0x157312961f8 <line:148:1, line:249:1>
    |-DeclStmt 0x15731295538 <line:149:5, col:10>
    | `-VarDecl 0x157312954d0 <col:5, col:9> col:9 used i 'int'
    |-DeclStmt 0x157312955f8 <line:150:5, col:16>
    | `-VarDecl 0x15731295568 <col:5, col:15> col:9 used ret 'int' cinit
    |   `-IntegerLiteral 0x157312955d0 <col:15> 'int' 0
    |-DeclStmt 0x15731295838 <line:151:5, col:41>
    | |-VarDecl 0x15731295628 <col:5, col:9> col:9 used hLen 'int'
    | |-VarDecl 0x157312956a8 <col:5, col:15> col:15 used maskedDBLen 'int'
    | |-VarDecl 0x15731295728 <col:5, col:28> col:28 used MSBits 'int'
    | `-VarDecl 0x157312957a8 <col:5, col:36> col:36 used emLen 'int'
    |-DeclStmt 0x15731295a90 <line:152:5, col:39>
    | |-VarDecl 0x15731295868 <col:5, col:20> col:20 used H 'unsigned char *'
    | |-VarDecl 0x157312958e8 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/before\crypto\rsa\rsa_pss.c:152:24 used salt 'unsigned char *' cinit
    | | `-ImplicitCastExpr 0x157312959d8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <NullToPointer>
    | |   `-ParenExpr 0x157312959b8 <col:17, col:27> 'void *'
    | |     `-CStyleCastExpr 0x15731295990 <col:18, col:26> 'void *' <NullToPointer>
    | |       `-IntegerLiteral 0x15731295950 <col:26> 'int' 0
    | `-VarDecl 0x15731295a08 <.//openssl//file_jk/before\crypto\rsa\rsa_pss.c:152:5, col:38> col:38 used p 'unsigned char *'
    |-IfStmt 0x1573129cd98 <line:159:5, line:160:14>
    | |-BinaryOperator 0x1573129cd10 <line:159:9, col:16> 'int' '<'
    | | |-ImplicitCastExpr 0x1573129ccf8 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x15731295c10 <col:9> 'int' lvalue Var 0x15731295628 'hLen' 'int'
    | | `-IntegerLiteral 0x1573129ccd0 <col:16> 'int' 0
    | `-GotoStmt 0x1573129cd80 <line:160:9, col:14> 'err' 0x1573129cd30
    |-IfStmt 0x1573129d118 <line:167:5, line:174:5> has_else
    | |-BinaryOperator 0x1573129ce40 <line:167:9, col:18> 'int' '=='
    | | |-ImplicitCastExpr 0x1573129ce28 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1573129cdb0 <col:9> 'int' lvalue ParmVar 0x157312952b8 'sLen' 'int'
    | | `-UnaryOperator 0x1573129ce10 <col:17, col:18> 'int' prefix '-'
    | |   `-IntegerLiteral 0x1573129cde8 <col:18> 'int' 1
    | |-BinaryOperator 0x1573129ceb8 <line:168:9, col:16> 'int' '='
    | | |-DeclRefExpr 0x1573129ce60 <col:9> 'int' lvalue ParmVar 0x157312952b8 'sLen' 'int'
    | | `-ImplicitCastExpr 0x1573129cea0 <col:16> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x1573129ce80 <col:16> 'int' lvalue Var 0x15731295628 'hLen' 'int'
    | `-IfStmt 0x1573129d0f0 <line:169:10, line:174:5> has_else
    |   |-BinaryOperator 0x1573129cf50 <line:169:14, col:23> 'int' '=='
    |   | |-ImplicitCastExpr 0x1573129cf38 <col:14> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x1573129ced8 <col:14> 'int' lvalue ParmVar 0x157312952b8 'sLen' 'int'
    |   | `-UnaryOperator 0x1573129cf20 <col:22, col:23> 'int' prefix '-'
    |   |   `-IntegerLiteral 0x1573129cef8 <col:23> 'int' 2
    |   |-BinaryOperator 0x1573129cfd0 <line:170:9, col:17> 'int' '='
    |   | |-DeclRefExpr 0x1573129cf70 <col:9> 'int' lvalue ParmVar 0x157312952b8 'sLen' 'int'
    |   | `-UnaryOperator 0x1573129cfb8 <col:16, col:17> 'int' prefix '-'
    |   |   `-IntegerLiteral 0x1573129cf90 <col:17> 'int' 2
    |   `-IfStmt 0x1573129d0d8 <line:171:10, line:174:5>
    |     |-BinaryOperator 0x1573129d068 <line:171:14, col:22> 'int' '<'
    |     | |-ImplicitCastExpr 0x1573129d050 <col:14> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x1573129cff0 <col:14> 'int' lvalue ParmVar 0x157312952b8 'sLen' 'int'
    |     | `-UnaryOperator 0x1573129d038 <col:21, col:22> 'int' prefix '-'
    |     |   `-IntegerLiteral 0x1573129d010 <col:22> 'int' 2
    |     `-CompoundStmt 0x1573129d0c0 <col:25, line:174:5>
    |       `-GotoStmt 0x1573129d0a8 <line:173:9, col:14> 'err' 0x1573129cd30
    |-IfStmt 0x1573129d3e0 <line:178:5, line:181:5>
    | |-BinaryOperator 0x1573129d2a0 <line:178:9, col:19> 'int' '=='
    | | |-ImplicitCastExpr 0x1573129d288 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1573129d240 <col:9> 'int' lvalue Var 0x15731295728 'MSBits' 'int'
    | | `-IntegerLiteral 0x1573129d260 <col:19> 'int' 0
    | `-CompoundStmt 0x1573129d3c0 <col:22, line:181:5>
    |   |-BinaryOperator 0x1573129d368 <line:179:9, col:17> 'unsigned char' '='
    |   | |-UnaryOperator 0x1573129d310 <col:9, col:12> 'unsigned char' lvalue prefix '*' cannot overflow
    |   | | `-UnaryOperator 0x1573129d2f8 <col:10, col:12> 'unsigned char *' postfix '++'
    |   | |   `-DeclRefExpr 0x1573129d2c0 <col:10> 'unsigned char *' lvalue ParmVar 0x157312950b8 'EM' 'unsigned char *'
    |   | `-ImplicitCastExpr 0x1573129d350 <col:17> 'unsigned char' <IntegralCast>
    |   |   `-IntegerLiteral 0x1573129d328 <col:17> 'int' 0
    |   `-UnaryOperator 0x1573129d3a8 <line:180:9, col:14> 'int' postfix '--'
    |     `-DeclRefExpr 0x1573129d388 <col:9> 'int' lvalue Var 0x157312957a8 'emLen' 'int'
    |-IfStmt 0x1573129d520 <line:182:5, line:186:5>
    | |-BinaryOperator 0x1573129d4b0 <line:182:9, col:24> 'int' '<'
    | | |-ImplicitCastExpr 0x1573129d498 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1573129d3f8 <col:9> 'int' lvalue Var 0x157312957a8 'emLen' 'int'
    | | `-BinaryOperator 0x1573129d478 <col:17, col:24> 'int' '+'
    | |   |-ImplicitCastExpr 0x1573129d460 <col:17> 'int' <LValueToRValue>
    | |   | `-DeclRefExpr 0x1573129d418 <col:17> 'int' lvalue Var 0x15731295628 'hLen' 'int'
    | |   `-IntegerLiteral 0x1573129d438 <col:24> 'int' 2
    | `-CompoundStmt 0x1573129d508 <col:27, line:186:5>
    |   `-GotoStmt 0x1573129d4f0 <line:185:9, col:14> 'err' 0x1573129cd30
    |-IfStmt 0x1573129d898 <line:187:5, line:193:5> has_else
    | |-BinaryOperator 0x1573129d5b0 <line:187:9, col:18> 'int' '=='
    | | |-ImplicitCastExpr 0x1573129d598 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1573129d538 <col:9> 'int' lvalue ParmVar 0x157312952b8 'sLen' 'int'
    | | `-UnaryOperator 0x1573129d580 <col:17, col:18> 'int' prefix '-'
    | |   `-IntegerLiteral 0x1573129d558 <col:18> 'int' 2
    | |-CompoundStmt 0x1573129d6e8 <col:21, line:189:5>
    | | `-BinaryOperator 0x1573129d6c8 <line:188:9, col:31> 'int' '='
    | |   |-DeclRefExpr 0x1573129d5d0 <col:9> 'int' lvalue ParmVar 0x157312952b8 'sLen' 'int'
    | |   `-BinaryOperator 0x1573129d6a8 <col:16, col:31> 'int' '-'
    | |     |-BinaryOperator 0x1573129d660 <col:16, col:24> 'int' '-'
    | |     | |-ImplicitCastExpr 0x1573129d630 <col:16> 'int' <LValueToRValue>
    | |     | | `-DeclRefExpr 0x1573129d5f0 <col:16> 'int' lvalue Var 0x157312957a8 'emLen' 'int'
    | |     | `-ImplicitCastExpr 0x1573129d648 <col:24> 'int' <LValueToRValue>
    | |     |   `-DeclRefExpr 0x1573129d610 <col:24> 'int' lvalue Var 0x15731295628 'hLen' 'int'
    | |     `-IntegerLiteral 0x1573129d680 <col:31> 'int' 2
    | `-IfStmt 0x1573129d880 <line:189:12, line:193:5>
    |   |-BinaryOperator 0x1573129d810 <line:189:16, col:38> 'int' '>'
    |   | |-ImplicitCastExpr 0x1573129d7f8 <col:16> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x1573129d700 <col:16> 'int' lvalue ParmVar 0x157312952b8 'sLen' 'int'
    |   | `-BinaryOperator 0x1573129d7d8 <col:23, col:38> 'int' '-'
    |   |   |-BinaryOperator 0x1573129d790 <col:23, col:31> 'int' '-'
    |   |   | |-ImplicitCastExpr 0x1573129d760 <col:23> 'int' <LValueToRValue>
    |   |   | | `-DeclRefExpr 0x1573129d720 <col:23> 'int' lvalue Var 0x157312957a8 'emLen' 'int'
    |   |   | `-ImplicitCastExpr 0x1573129d778 <col:31> 'int' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x1573129d740 <col:31> 'int' lvalue Var 0x15731295628 'hLen' 'int'
    |   |   `-IntegerLiteral 0x1573129d7b0 <col:38> 'int' 2
    |   `-CompoundStmt 0x1573129d868 <col:41, line:193:5>
    |     `-GotoStmt 0x1573129d850 <line:192:9, col:14> 'err' 0x1573129cd30
    |-IfStmt 0x1573129be18 <line:194:5, line:203:5>
    | |-BinaryOperator 0x1573129d920 <line:194:9, col:16> 'int' '>'
    | | |-ImplicitCastExpr 0x1573129d908 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1573129d8c0 <col:9> 'int' lvalue ParmVar 0x157312952b8 'sLen' 'int'
    | | `-IntegerLiteral 0x1573129d8e0 <col:16> 'int' 0
    | `-CompoundStmt 0x1573129bdf0 <col:19, line:203:5>
    |   |-BinaryOperator 0x1573129da28 <line:195:9, col:35> 'unsigned char *' '='
    |   | |-DeclRefExpr 0x1573129d940 <col:9> 'unsigned char *' lvalue Var 0x157312958e8 'salt' 'unsigned char *'
    |   | `-ImplicitCastExpr 0x1573129da10 <col:16, col:35> 'unsigned char *' <IntegralToPointer>
    |   |   `-CallExpr 0x1573129d9d0 <col:16, col:35> 'int'
    |   |     |-ImplicitCastExpr 0x1573129d9b8 <col:16> 'int (*)()' <FunctionToPointerDecay>
    |   |     | `-DeclRefExpr 0x1573129d978 <col:16> 'int ()' Function 0x15731299930 'OPENSSL_malloc' 'int ()'
    |   |     `-ImplicitCastExpr 0x1573129d9f8 <col:31> 'int' <LValueToRValue>
    |   |       `-DeclRefExpr 0x1573129d998 <col:31> 'int' lvalue ParmVar 0x157312952b8 'sLen' 'int'
    |   |-IfStmt 0x1573129db90 <line:196:9, line:200:9>
    |   | |-BinaryOperator 0x1573129db20 <line:196:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
    |   | | |-ImplicitCastExpr 0x1573129daf0 <.//openssl//file_jk/before\crypto\rsa\rsa_pss.c:196:13> 'unsigned char *' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x1573129da48 <col:13> 'unsigned char *' lvalue Var 0x157312958e8 'salt' 'unsigned char *'
    |   | | `-ImplicitCastExpr 0x1573129db08 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <BitCast>
    |   | |   `-ParenExpr 0x1573129dad0 <col:17, col:27> 'void *'
    |   | |     `-CStyleCastExpr 0x1573129daa8 <col:18, col:26> 'void *' <NullToPointer>
    |   | |       `-IntegerLiteral 0x1573129da68 <col:26> 'int' 0
    |   | `-CompoundStmt 0x1573129db78 <.//openssl//file_jk/before\crypto\rsa\rsa_pss.c:196:27, line:200:9>
    |   |   `-GotoStmt 0x1573129db60 <line:199:13, col:18> 'err' 0x1573129cd30
    |   `-IfStmt 0x1573129bdd8 <line:201:9, line:202:18>
    |     |-BinaryOperator 0x1573129bda0 <line:201:13, col:39> 'int' '<='
    |     | |-CallExpr 0x1573129bd18 <col:13, col:34> 'int'
    |     | | |-ImplicitCastExpr 0x1573129bd00 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |     | | | `-DeclRefExpr 0x1573129dc98 <col:13> 'int ()' Function 0x1573129dbd0 'RAND_bytes' 'int ()'
    |     | | |-ImplicitCastExpr 0x1573129bd48 <col:24> 'unsigned char *' <LValueToRValue>
    |     | | | `-DeclRefExpr 0x1573129bcc0 <col:24> 'unsigned char *' lvalue Var 0x157312958e8 'salt' 'unsigned char *'
    |     | | `-ImplicitCastExpr 0x1573129bd60 <col:30> 'int' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x1573129bce0 <col:30> 'int' lvalue ParmVar 0x157312952b8 'sLen' 'int'
    |     | `-IntegerLiteral 0x1573129bd78 <col:39> 'int' 0
    |     `-GotoStmt 0x1573129bdc0 <line:202:13, col:18> 'err' 0x1573129cd30
    |-BinaryOperator 0x1573129bf40 <line:204:5, col:34> 'int' '='
    | |-DeclRefExpr 0x1573129be30 <col:5> 'int' lvalue Var 0x157312956a8 'maskedDBLen' 'int'
    | `-BinaryOperator 0x1573129bf20 <col:19, col:34> 'int' '-'
    |   |-BinaryOperator 0x1573129bed8 <col:19, col:27> 'int' '-'
    |   | |-ImplicitCastExpr 0x1573129bea8 <col:19> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x1573129be68 <col:19> 'int' lvalue Var 0x157312957a8 'emLen' 'int'
    |   | `-ImplicitCastExpr 0x1573129bec0 <col:27> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x1573129be88 <col:27> 'int' lvalue Var 0x15731295628 'hLen' 'int'
    |   `-IntegerLiteral 0x1573129bef8 <col:34> 'int' 1
    |-BinaryOperator 0x1573129c028 <line:205:5, col:14> 'unsigned char *' '='
    | |-DeclRefExpr 0x1573129bf60 <col:5> 'unsigned char *' lvalue Var 0x15731295868 'H' 'unsigned char *'
    | `-BinaryOperator 0x1573129c008 <col:9, col:14> 'unsigned char *' '+'
    |   |-ImplicitCastExpr 0x1573129bfd8 <col:9> 'unsigned char *' <LValueToRValue>
    |   | `-DeclRefExpr 0x1573129bf98 <col:9> 'unsigned char *' lvalue ParmVar 0x157312950b8 'EM' 'unsigned char *'
    |   `-ImplicitCastExpr 0x1573129bff0 <col:14> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x1573129bfb8 <col:14> 'int' lvalue Var 0x157312956a8 'maskedDBLen' 'int'
    |-IfStmt 0x1573129c158 <line:207:5, line:208:14>
    | |-OpaqueValueExpr 0x1573129c140 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x1573129c128 <col:9, col:14> 'err' 0x1573129cd30
    |-IfStmt 0x1573129c360 <line:209:5, line:212:14>
    | |-OpaqueValueExpr 0x1573129c348 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x1573129c330 <col:9, col:14> 'err' 0x1573129cd30
    |-IfStmt 0x1573129c428 <line:213:5, line:214:14>
    | |-OpaqueValueExpr 0x1573129c410 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x1573129c3f8 <col:9, col:14> 'err' 0x1573129cd30
    |-IfStmt 0x1573129c538 <line:215:5, line:216:14>
    | |-OpaqueValueExpr 0x1573129c520 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x1573129c508 <col:9, col:14> 'err' 0x1573129cd30
    |-IfStmt 0x1573129c620 <line:219:5, line:220:14>
    | |-OpaqueValueExpr 0x1573129c608 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x1573129c5f0 <col:9, col:14> 'err' 0x1573129cd30
    |-BinaryOperator 0x1573129c6a8 <line:222:5, col:9> 'unsigned char *' '='
    | |-DeclRefExpr 0x1573129c638 <col:5> 'unsigned char *' lvalue Var 0x15731295a08 'p' 'unsigned char *'
    | `-ImplicitCastExpr 0x1573129c690 <col:9> 'unsigned char *' <LValueToRValue>
    |   `-DeclRefExpr 0x1573129c670 <col:9> 'unsigned char *' lvalue ParmVar 0x157312950b8 'EM' 'unsigned char *'
    |-CompoundAssignOperator 0x1573129c818 <line:228:5, col:32> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
    | |-DeclRefExpr 0x1573129c6c8 <col:5> 'unsigned char *' lvalue Var 0x15731295a08 'p' 'unsigned char *'
    | `-BinaryOperator 0x1573129c7f8 <col:10, col:32> 'int' '-'
    |   |-BinaryOperator 0x1573129c7b0 <col:10, col:25> 'int' '-'
    |   | |-BinaryOperator 0x1573129c758 <col:10, col:18> 'int' '-'
    |   | | |-ImplicitCastExpr 0x1573129c728 <col:10> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x1573129c6e8 <col:10> 'int' lvalue Var 0x157312957a8 'emLen' 'int'
    |   | | `-ImplicitCastExpr 0x1573129c740 <col:18> 'int' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x1573129c708 <col:18> 'int' lvalue ParmVar 0x157312952b8 'sLen' 'int'
    |   | `-ImplicitCastExpr 0x1573129c798 <col:25> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x1573129c778 <col:25> 'int' lvalue Var 0x15731295628 'hLen' 'int'
    |   `-IntegerLiteral 0x1573129c7d0 <col:32> 'int' 2
    |-CompoundAssignOperator 0x1573129c8c0 <line:229:5, col:13> 'unsigned char' '^=' ComputeLHSTy='int' ComputeResultTy='int'
    | |-UnaryOperator 0x1573129c880 <col:5, col:7> 'unsigned char' lvalue prefix '*' cannot overflow
    | | `-UnaryOperator 0x1573129c868 <col:6, col:7> 'unsigned char *' postfix '++'
    | |   `-DeclRefExpr 0x1573129c848 <col:6> 'unsigned char *' lvalue Var 0x15731295a08 'p' 'unsigned char *'
    | `-IntegerLiteral 0x1573129c898 <col:13> 'int' 1
    |-IfStmt 0x1573129cc48 <line:230:5, line:233:5>
    | |-BinaryOperator 0x1573129c950 <line:230:9, col:16> 'int' '>'
    | | |-ImplicitCastExpr 0x1573129c938 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1573129c8f0 <col:9> 'int' lvalue ParmVar 0x157312952b8 'sLen' 'int'
    | | `-IntegerLiteral 0x1573129c910 <col:16> 'int' 0
    | `-CompoundStmt 0x1573129cc30 <col:19, line:233:5>
    |   `-ForStmt 0x1573129cbf8 <line:231:9, line:232:27>
    |     |-BinaryOperator 0x1573129c9d0 <line:231:14, col:18> 'int' '='
    |     | |-DeclRefExpr 0x1573129c970 <col:14> 'int' lvalue Var 0x157312954d0 'i' 'int'
    |     | `-IntegerLiteral 0x1573129c9a8 <col:18> 'int' 0
    |     |-<<<NULL>>>
    |     |-BinaryOperator 0x1573129ca60 <col:21, col:25> 'int' '<'
    |     | |-ImplicitCastExpr 0x1573129ca30 <col:21> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x1573129c9f0 <col:21> 'int' lvalue Var 0x157312954d0 'i' 'int'
    |     | `-ImplicitCastExpr 0x1573129ca48 <col:25> 'int' <LValueToRValue>
    |     |   `-DeclRefExpr 0x1573129ca10 <col:25> 'int' lvalue ParmVar 0x157312952b8 'sLen' 'int'
    |     |-UnaryOperator 0x1573129caa0 <col:31, col:32> 'int' postfix '++'
    |     | `-DeclRefExpr 0x1573129ca80 <col:31> 'int' lvalue Var 0x157312954d0 'i' 'int'
    |     `-CompoundAssignOperator 0x1573129cbc8 <line:232:13, col:27> 'unsigned char' '^=' ComputeLHSTy='int' ComputeResultTy='int'
    |       |-UnaryOperator 0x1573129caf0 <col:13, col:15> 'unsigned char' lvalue prefix '*' cannot overflow
    |       | `-UnaryOperator 0x1573129cad8 <col:14, col:15> 'unsigned char *' postfix '++'
    |       |   `-DeclRefExpr 0x1573129cab8 <col:14> 'unsigned char *' lvalue Var 0x15731295a08 'p' 'unsigned char *'
    |       `-ImplicitCastExpr 0x1573129cbb0 <col:21, col:27> 'int' <IntegralCast>
    |         `-ImplicitCastExpr 0x1573129cb98 <col:21, col:27> 'unsigned char' <LValueToRValue>
    |           `-ArraySubscriptExpr 0x1573129cb78 <col:21, col:27> 'unsigned char' lvalue
    |             |-ImplicitCastExpr 0x1573129cb48 <col:21> 'unsigned char *' <LValueToRValue>
    |             | `-DeclRefExpr 0x1573129cb08 <col:21> 'unsigned char *' lvalue Var 0x157312958e8 'salt' 'unsigned char *'
    |             `-ImplicitCastExpr 0x1573129cb60 <col:26> 'int' <LValueToRValue>
    |               `-DeclRefExpr 0x1573129cb28 <col:26> 'int' lvalue Var 0x157312954d0 'i' 'int'
    |-IfStmt 0x15731295dd8 <line:234:5, line:235:37>
    | |-ImplicitCastExpr 0x1573129cc80 <line:234:9> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x1573129cc60 <col:9> 'int' lvalue Var 0x15731295728 'MSBits' 'int'
    | `-CompoundAssignOperator 0x15731295da8 <line:235:9, col:37> 'unsigned char' '&=' ComputeLHSTy='int' ComputeResultTy='int'
    |   |-ArraySubscriptExpr 0x15731295ca0 <col:9, col:13> 'unsigned char' lvalue
    |   | |-ImplicitCastExpr 0x15731295c88 <col:9> 'unsigned char *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x1573129cc98 <col:9> 'unsigned char *' lvalue ParmVar 0x157312950b8 'EM' 'unsigned char *'
    |   | `-IntegerLiteral 0x15731295c60 <col:12> 'int' 0
    |   `-BinaryOperator 0x15731295d88 <col:18, col:37> 'int' '>>'
    |     |-IntegerLiteral 0x15731295cc0 <col:18> 'int' 255
    |     `-ParenExpr 0x15731295d68 <col:26, col:37> 'int'
    |       `-BinaryOperator 0x15731295d48 <col:27, col:31> 'int' '-'
    |         |-IntegerLiteral 0x15731295ce8 <col:27> 'int' 8
    |         `-ImplicitCastExpr 0x15731295d30 <col:31> 'int' <LValueToRValue>
    |           `-DeclRefExpr 0x15731295d10 <col:31> 'int' lvalue Var 0x15731295728 'MSBits' 'int'
    |-BinaryOperator 0x15731295f08 <line:239:5, col:21> 'unsigned char' '='
    | |-ArraySubscriptExpr 0x15731295ea8 <col:5, col:17> 'unsigned char' lvalue
    | | |-ImplicitCastExpr 0x15731295e90 <col:5> 'unsigned char *' <LValueToRValue>
    | | | `-DeclRefExpr 0x15731295df0 <col:5> 'unsigned char *' lvalue ParmVar 0x157312950b8 'EM' 'unsigned char *'
    | | `-BinaryOperator 0x15731295e70 <col:8, col:16> 'int' '-'
    | |   |-ImplicitCastExpr 0x15731295e58 <col:8> 'int' <LValueToRValue>
    | |   | `-DeclRefExpr 0x15731295e10 <col:8> 'int' lvalue Var 0x157312957a8 'emLen' 'int'
    | |   `-IntegerLiteral 0x15731295e30 <col:16> 'int' 1
    | `-ImplicitCastExpr 0x15731295ef0 <col:21> 'unsigned char' <IntegralCast>
    |   `-IntegerLiteral 0x15731295ec8 <col:21> 'int' 188
    |-BinaryOperator 0x15731295f88 <line:241:5, col:11> 'int' '='
    | |-DeclRefExpr 0x15731295f28 <col:5> 'int' lvalue Var 0x15731295568 'ret' 'int'
    | `-IntegerLiteral 0x15731295f60 <col:11> 'int' 1
    |-LabelStmt 0x15731295fd0 <line:243:2, col:5> 'err'
    | `-NullStmt 0x15731295fc8 <col:5>
    |-CallExpr 0x15731296150 <line:245:5, col:34> 'int'
    | |-ImplicitCastExpr 0x15731296138 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x157312960d8 <col:5> 'int ()' Function 0x15731296010 'OPENSSL_clear_free' 'int ()'
    | |-ImplicitCastExpr 0x15731296180 <col:24> 'unsigned char *' <LValueToRValue>
    | | `-DeclRefExpr 0x157312960f8 <col:24> 'unsigned char *' lvalue Var 0x157312958e8 'salt' 'unsigned char *'
    | `-ImplicitCastExpr 0x15731296198 <col:30> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x15731296118 <col:30> 'int' lvalue ParmVar 0x157312952b8 'sLen' 'int'
    `-ReturnStmt 0x157312961e8 <line:247:5, col:12>
      `-ImplicitCastExpr 0x157312961d0 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x157312961b0 <col:12> 'int' lvalue Var 0x15731295568 'ret' 'int'
