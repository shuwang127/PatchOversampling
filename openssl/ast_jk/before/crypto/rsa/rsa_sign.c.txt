TranslationUnitDecl 0x2109f475088 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x2109f475920 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x2109f475620 '__int128'
|-TypedefDecl 0x2109f475990 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x2109f475640 'unsigned __int128'
|-TypedefDecl 0x2109f475cc8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x2109f475a80 'struct __NSConstantString_tag'
|   `-Record 0x2109f4759e8 '__NSConstantString_tag'
|-TypedefDecl 0x2109f475d38 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x2109f475260 'unsigned long long'
|-TypedefDecl 0x2109f475dd0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x2109f475d90 'char *'
|   `-BuiltinType 0x2109f475120 'char'
|-TypedefDecl 0x2109f475e40 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x2109f475d90 'char *'
|   `-BuiltinType 0x2109f475120 'char'
|-TypedefDecl 0x2109f475f00 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x2109f475260 'unsigned long long'
|-TypedefDecl 0x2109f475f70 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x2109f475d90 'char *'
|   `-BuiltinType 0x2109f475120 'char'
|-FunctionDecl 0x210a0f5e910 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x210a0f5e9b0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x210a0f5ea20 <col:21> Implicit
|-FunctionDecl 0x210a0f5ea78 prev 0x210a0f5e910 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x210a0f5e7a0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x210a0f5eb68 <col:21> Inherited Implicit
|-TypedefDecl 0x210a0f5eba8 prev 0x2109f475d38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x2109f475260 'unsigned long long'
|-TypedefDecl 0x210a0f5ec50 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x210a0f5ec20 'size_t' sugar
|   |-Typedef 0x210a0f5eba8 'size_t'
|   `-BuiltinType 0x2109f475260 'unsigned long long'
|-TypedefDecl 0x210a0f5ecc0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x2109f4751c0 'long long'
|-TypedefDecl 0x210a0f5ed30 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x2109f4751c0 'long long'
|-TypedefDecl 0x210a0f5eda0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x2109f475200 'unsigned short'
|-TypedefDecl 0x210a0f5ee10 <line:541:1, col:24> col:24 referenced wint_t 'unsigned short'
| `-BuiltinType 0x2109f475200 'unsigned short'
|-TypedefDecl 0x210a0f5ee80 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x2109f475200 'unsigned short'
|-TypedefDecl 0x210a0f5eef0 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x2109f475180 'int'
|-TypedefDecl 0x210a0f5ef60 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x2109f4751a0 'long'
|-TypedefDecl 0x210a0f5efd0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x2109f4751c0 'long long'
|-TypedefDecl 0x210a0f5f060 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x210a0f5f030 '__time64_t' sugar
|   |-Typedef 0x210a0f5efd0 '__time64_t'
|   `-BuiltinType 0x2109f4751c0 'long long'
|-FunctionDecl 0x210a0f5f1d8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x210a0f5f3f8 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x210a0f9d5d0 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x210a0f5f538 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x210a0f5f5b0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x210a0f5f628 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x210a0f5f6a8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x210a0f9d370 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x210a0f9d6b0 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x210a0f9d770 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x210a0f9d8e0 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x210a0f9d890 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x210a0f9d830 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x210a0f9d750 'struct threadlocaleinfostruct'
|       `-Record 0x210a0fa8420 'threadlocaleinfostruct'
|-TypedefDecl 0x210a0f9d9f0 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x210a0f9d9a0 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x210a0f9d940 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x210a0f9d810 'struct threadmbcinfostruct'
|       `-Record 0x210a0f9d770 'threadmbcinfostruct'
|-RecordDecl 0x210a0f9da48 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x210a0f9db00 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x210a0f9dbc0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x210a0f9dc50 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x210a0f9dce0 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x210a0f9dd98 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x210a0f9dd40 'struct localeinfo_struct' sugar
|   `-RecordType 0x210a0f9dba0 'struct localeinfo_struct'
|     `-Record 0x210a0f9db00 'localeinfo_struct'
|-TypedefDecl 0x210a0f9de70 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x210a0f9de20 'struct localeinfo_struct *'
|   `-ElaboratedType 0x210a0f9dd40 'struct localeinfo_struct' sugar
|     `-RecordType 0x210a0f9dba0 'struct localeinfo_struct'
|       `-Record 0x210a0f9db00 'localeinfo_struct'
|-RecordDecl 0x210a0f9dee8 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x210a0f9dfa0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x210a0f9e018 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x210a0f9e0d8 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x210a0f9e170 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x210a0f9e1e0 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x210a0f9e298 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x210a0f9e240 'struct localerefcount' sugar
|   `-RecordType 0x210a0f9df80 'struct localerefcount'
|     `-Record 0x210a0f9dee8 'localerefcount'
|-RecordDecl 0x210a0fa8420 prev 0x210a0f9d6b0 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x210a0fa84a0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x210a0fa8518 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x210a0fa8588 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x210a0fa85f8 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x210a0fa8668 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x210a0fa8828 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x210a0fa8898 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x210a0fa8908 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x210a0fa8978 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x210a0fa89e8 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x210a0fa8a58 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x210a0fa8ab0 parent 0x2109f475088 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x210a0fa8c40 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x210a0fa8cb0 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x210a0fa8d20 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x210a0fa8d90 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x210a0fa8e30 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x210a0fa8ea0 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x210a0fa8fb0 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x210a0fa90e8 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x210a0fa9198 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x210a0fa9140 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x210a0f9d750 'struct threadlocaleinfostruct'
|     `-Record 0x210a0fa8420 'threadlocaleinfostruct'
|-RecordDecl 0x210a0fa9230 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:63:1, line:72:9> line:63:8 struct _iobuf definition
| |-MaxFieldAlignmentAttr 0x210a0fa92f0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x210a0fa9368 <line:64:9, col:15> col:15 _ptr 'char *'
| |-FieldDecl 0x210a0fa13b0 <line:65:9, col:15> col:15 _cnt 'int'
| |-FieldDecl 0x210a0fa1420 <line:66:9, col:15> col:15 _base 'char *'
| |-FieldDecl 0x210a0fa1490 <line:67:9, col:15> col:15 _flag 'int'
| |-FieldDecl 0x210a0fa1500 <line:68:9, col:15> col:15 _file 'int'
| |-FieldDecl 0x210a0fa1570 <line:69:9, col:15> col:15 _charbuf 'int'
| |-FieldDecl 0x210a0fa15e0 <line:70:9, col:15> col:15 _bufsiz 'int'
| `-FieldDecl 0x210a0fa1650 <line:71:9, col:15> col:15 _tmpfname 'char *'
|-TypedefDecl 0x210a0fa1700 <line:73:1, col:23> col:23 referenced FILE 'struct _iobuf':'struct _iobuf'
| `-ElaboratedType 0x210a0fa16b0 'struct _iobuf' sugar
|   `-RecordType 0x210a0fa92d0 'struct _iobuf'
|     `-Record 0x210a0fa9230 '_iobuf'
|-FunctionDecl 0x210a0fa1938 <line:137:9, col:39> col:24 __iob_func 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|-TypedefDecl 0x210a0fa1a08 <line:144:1, col:17> col:17 referenced fpos_t 'long long'
| `-BuiltinType 0x2109f4751c0 'long long'
|-FunctionDecl 0x210a0fa1be8 <line:175:24, col:65> col:36 _filbuf 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x210a0fa1a70 <col:52, col:59> col:59 _File 'FILE *'
|-FunctionDecl 0x210a0fa1ee0 <line:176:28, col:82> col:40 _flsbuf 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x210a0fa1cc0 <col:53, col:57> col:57 _Ch 'int'
| `-ParmVarDecl 0x210a0fa1d38 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x210a0fa2290 <line:178:24, col:121> col:39 _fsopen 'FILE *(const char *, const char *, int) __attribute__((cdecl))':'FILE *(const char *, const char *, int)'
| |-ParmVarDecl 0x210a0fa1fc0 <col:54, col:67> col:67 _Filename 'const char *'
| |-ParmVarDecl 0x210a0fa2040 <col:85, col:98> col:98 _Mode 'const char *'
| `-ParmVarDecl 0x210a0fa20c0 <col:110, col:114> col:114 _ShFlag 'int'
|-FunctionDecl 0x210a0faa5b0 <line:180:9, col:51> col:22 clearerr 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x210a0faa440 <col:39, col:46> col:46 _File 'FILE *'
|-FunctionDecl 0x210a0faa7e0 <line:182:28, col:76> col:44 clearerr_s 'errno_t (FILE *) __attribute__((cdecl))':'errno_t (FILE *)'
| `-ParmVarDecl 0x210a0faa6a0 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x210a0faa990 <line:184:28, col:67> col:40 fclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x210a0faa8b0 <col:55, col:62> col:62 _File 'FILE *'
|-FunctionDecl 0x210a0faab80 <line:185:28, col:55> col:40 _fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x210a0faae78 <line:187:24, col:94> col:39 _fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x210a0faac50 <col:52, col:56> col:56 _FileHandle 'int'
| `-ParmVarDecl 0x210a0faacd0 <col:76, col:89> col:89 _Mode 'const char *'
|-FunctionDecl 0x210a0fab030 <line:189:24, col:58> col:36 feof 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x210a0faaf50 <col:46, col:53> col:53 _File 'FILE *'
|-FunctionDecl 0x210a0fab1e0 <line:190:24, col:60> col:36 ferror 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x210a0fab100 <col:48, col:55> col:55 _File 'FILE *'
|-FunctionDecl 0x210a0fab390 <line:191:28, col:71> col:40 fflush 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x210a0fab2b0 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x210a0fa34d8 <line:192:28, col:66> col:40 fgetc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x210a0fa33f8 <col:54, col:61> col:61 _File 'FILE *'
|-FunctionDecl 0x210a0fa3668 <line:193:28, col:54> col:40 _fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x210a0fa39d0 <line:194:28, col:90> col:40 fgetpos 'int (FILE *, fpos_t *) __attribute__((cdecl))':'int (FILE *, fpos_t *)'
| |-ParmVarDecl 0x210a0fa3730 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x210a0fa3828 <col:77, col:86> col:86 _Pos 'fpos_t *'
|-FunctionDecl 0x210a0fa3d88 <line:195:28, col:128> col:43 fgets 'char *(char *, int, FILE *) __attribute__((cdecl))':'char *(char *, int, FILE *)'
| |-ParmVarDecl 0x210a0fa3ab0 <col:75, col:82> col:82 _Buf 'char *'
| |-ParmVarDecl 0x210a0fa3b30 <col:93, col:97> col:97 _MaxCount 'int'
| `-ParmVarDecl 0x210a0fa3ba8 <col:116, col:123> col:123 _File 'FILE *'
|-FunctionDecl 0x210a0fa3f48 <line:197:24, col:61> col:36 _fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x210a0fa3e68 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x210a0fa4210 <line:204:24, col:117> col:39 _tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x210a0fa4020 <col:59, col:72> col:72 _DirName 'const char *'
| `-ParmVarDecl 0x210a0fa40a0 <col:93, col:106> col:106 _FilePrefix 'const char *'
|-FunctionDecl 0x210a0faf490 <line:210:28, col:54> col:40 _flushall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x210a0faf888 <line:211:72> col:72 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x210a0faf928 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x210a0faf990 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x210a0fafa08 prev 0x210a0faf888 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:211:134> col:72 fopen 'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x210a0faf660 <col:85, col:98> col:98 _Filename 'const char *'
| |-ParmVarDecl 0x210a0faf6e0 <col:116, col:129> col:129 _Mode 'const char *'
| `-DeprecatedAttr 0x210a0fafab8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x210a0faff30 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:213:28, col:149> col:44 fopen_s 'errno_t (FILE **, const char *, const char *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *)'
| |-ParmVarDecl 0x210a0fafc60 <col:78, col:86> col:86 _File 'FILE **'
| |-ParmVarDecl 0x210a0fafce0 <col:100, col:113> col:113 _Filename 'const char *'
| `-ParmVarDecl 0x210a0fafd60 <col:131, col:144> col:144 _Mode 'const char *'
|-FunctionDecl 0x210a0fb0250 <line:215:40> col:40 implicit fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x210a0fb02f0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x210a0fb0358 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x210a0fb03d0 <col:40> Implicit printf 2 3
|-FunctionDecl 0x210a0fae480 prev 0x210a0fb0250 <col:28, col:125> col:40 fprintf 'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x210a0fb0010 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x210a0fb0090 <col:100, col:113> col:113 _Format 'const char *'
| `-FormatAttr 0x210a0fae578 <col:40> Inherited printf 2 3
|-FunctionDecl 0x210a0fae740 <line:217:28, col:127> col:40 fprintf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x210a0fae5c0 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x210a0fae640 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x210a0fae998 <line:219:28, col:80> col:40 fputc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x210a0fae820 <col:51, col:55> col:55 _Ch 'int'
| `-ParmVarDecl 0x210a0fae898 <col:68, col:75> col:75 _File 'FILE *'
|-FunctionDecl 0x210a0faebc8 <line:220:28, col:62> col:40 _fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x210a0faea78 <col:55, col:59> col:59 _Ch 'int'
|-FunctionDecl 0x210a0faeec0 <line:221:28, col:92> col:40 fputs 'int (const char *, FILE *) __attribute__((cdecl))':'int (const char *, FILE *)'
| |-ParmVarDecl 0x210a0faeca0 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x210a0faed18 <col:80, col:87> col:87 _File 'FILE *'
|-FunctionDecl 0x210a0faf358 <line:222:43> col:43 implicit fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x210a0faf3f8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x210a0fb14b0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x210a0fb1518 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x210a0fb1580 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x210a0fb1608 prev 0x210a0faf358 <col:28, col:171> col:43 fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x210a0faefa0 <col:89, col:96> col:96 _DstBuf 'void *'
| |-ParmVarDecl 0x210a0faf018 <col:110, col:117> col:117 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x210a0faf090 <col:136, col:143> col:143 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x210a0faf108 <col:159, col:166> col:166 _File 'FILE *'
|-FunctionDecl 0x210a0fb1b10 <line:224:28, col:195> col:43 fread_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x210a0fb16f8 <col:91, col:98> col:98 _DstBuf 'void *'
| |-ParmVarDecl 0x210a0fb1770 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x210a0fb17e8 <col:134, col:141> col:141 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x210a0fb1860 <col:160, col:167> col:167 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x210a0fb18d8 <col:183, col:190> col:190 _File 'FILE *'
|-FunctionDecl 0x210a0fb1fd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:226:160> col:74 freopen 'FILE *(const char *, const char *, FILE *) __attribute__((cdecl))':'FILE *(const char *, const char *, FILE *)'
| |-ParmVarDecl 0x210a0fb1d00 <col:89, col:102> col:102 _Filename 'const char *'
| |-ParmVarDecl 0x210a0fb1d80 <col:120, col:133> col:133 _Mode 'const char *'
| |-ParmVarDecl 0x210a0fb1df8 <col:148, col:155> col:155 _File 'FILE *'
| `-DeprecatedAttr 0x210a0fb2088 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using freopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x210a0fb0548 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:228:28, col:176> col:44 freopen_s 'errno_t (FILE **, const char *, const char *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *, FILE *)'
| |-ParmVarDecl 0x210a0fb21d0 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x210a0fb2250 <col:102, col:115> col:115 _Filename 'const char *'
| |-ParmVarDecl 0x210a0fb22d0 <col:133, col:146> col:146 _Mode 'const char *'
| `-ParmVarDecl 0x210a0fb2348 <col:161, col:168> col:168 _OldFile 'FILE *'
|-FunctionDecl 0x210a0fb08f0 <line:230:70> col:70 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x210a0fb0990 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x210a0fb09f8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x210a0fb0a70 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x210a0fb0ad8 prev 0x210a0fb08f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:230:153> col:70 fscanf 'int (FILE *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x210a0fb0728 <col:85, col:92> col:92 _File 'FILE *'
| |-ParmVarDecl 0x210a0fb07a8 <col:128, col:141> col:141 _Format 'const char *'
| |-FormatAttr 0x210a0fb0cb8 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x210a0fb0b88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x210a0fb10f8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:231:201> col:77 _fscanf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x210a0fb0df8 <col:95, col:102> col:102 _File 'FILE *'
| |-ParmVarDecl 0x210a0fb0e78 <col:148, col:161> col:161 _Format 'const char *'
| |-ParmVarDecl 0x210a0fb0f10 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x210a0fb11b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x210a0fab450 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:235:28, col:127> col:40 fscanf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x210a0fb12f0 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x210a0fb1370 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x210a0fab740 <line:237:28, col:168> col:40 _fscanf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x210a0fab528 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x210a0fab5a8 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x210a0fab620 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x210a0fabaa0 <line:239:28, col:94> col:40 fsetpos 'int (FILE *, const fpos_t *) __attribute__((cdecl))':'int (FILE *, const fpos_t *)'
| |-ParmVarDecl 0x210a0fab820 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x210a0fab8f8 <col:75, col:90> col:90 _Pos 'const fpos_t *'
|-FunctionDecl 0x210a0fabe58 <line:240:28, col:103> col:40 fseek 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x210a0fabb78 <col:54, col:61> col:61 _File 'FILE *'
| |-ParmVarDecl 0x210a0fabbf8 <col:73, col:78> col:78 _Offset 'long'
| `-ParmVarDecl 0x210a0fabc78 <col:92, col:96> col:96 _Origin 'int'
|-FunctionDecl 0x210a0fac0b8 <line:241:24, col:63> col:37 ftell 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x210a0fabf38 <col:51, col:58> col:58 _File 'FILE *'
|-FunctionDecl 0x210a0fb2508 <line:243:28, col:110> col:40 _fseeki64 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x210a0fac188 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x210a0fac208 <col:77, col:85> col:85 _Offset 'long long'
| `-ParmVarDecl 0x210a0fac288 <col:99, col:103> col:103 _Origin 'int'
|-FunctionDecl 0x210a0fb2768 <line:244:24, col:70> col:40 _ftelli64 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x210a0fb25e8 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x210a0fb2c28 <line:246:43> col:43 implicit fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x210a0fb2cc8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x210a0fb2d30 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x210a0fb2d98 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x210a0fb2e00 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x210a0fb2e88 prev 0x210a0fb2c28 <col:28, col:159> col:43 fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x210a0fb2870 <col:81, col:94> col:94 _Str 'const void *'
| |-ParmVarDecl 0x210a0fb28e8 <col:105, col:112> col:112 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x210a0fb2960 <col:124, col:131> col:131 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x210a0fb29d8 <col:147, col:154> col:154 _File 'FILE *'
|-FunctionDecl 0x210a0fb3050 <line:247:24, col:61> col:36 getc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x210a0fb2f70 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x210a0fb31e0 <line:248:24, col:48> col:36 getchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x210a0fb3368 <line:249:24, col:53> col:36 _getmaxstdio 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x210a0fac620 <line:251:9, col:84> col:24 gets_s 'char *(char *, rsize_t) __attribute__((cdecl))':'char *(char *, rsize_t)'
| |-ParmVarDecl 0x210a0fb3438 <col:53, col:60> col:60 _Buf 'char *'
| `-ParmVarDecl 0x210a0fac470 <col:71, col:79> col:79 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x210a0fac948 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:254:80 gets 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x210a0fac800 <col:139, col:145> col:145 _Buffer 'char *'
| `-DeprecatedAttr 0x210a0fac9f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x210a0facc10 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:255:16, col:54> col:28 _getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x210a0facb30 <col:42, col:49> col:49 _File 'FILE *'
|-FunctionDecl 0x210a0face30 <line:258:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x210a0facce8 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x210a0facfe0 <line:261:28, col:68> col:40 _pclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x210a0facf00 <col:56, col:63> col:63 _File 'FILE *'
|-FunctionDecl 0x210a0fad230 <line:262:24, col:101> col:39 _popen 'FILE *(const char *, const char *) __attribute__((cdecl))':'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x210a0fad0b8 <col:53, col:66> col:66 _Command 'const char *'
| `-ParmVarDecl 0x210a0fad138 <col:83, col:96> col:96 _Mode 'const char *'
|-FunctionDecl 0x210a0fad470 <line:264:40> col:40 implicit printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x210a0fad510 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x210a0fad580 <col:40> Implicit printf 1 2
|-FunctionDecl 0x210a0fad5e8 prev 0x210a0fad470 <col:28, col:102> col:40 printf 'int (const char *, ...)'
| |-ParmVarDecl 0x210a0fad310 <col:77, col:90> col:90 _Format 'const char *'
| `-FormatAttr 0x210a0fad6d8 <col:40> Inherited printf 1 2
|-FunctionDecl 0x210a0fad808 <line:266:28, col:104> col:40 printf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x210a0fad728 <col:79, col:92> col:92 _Format 'const char *'
|-FunctionDecl 0x210a0fada58 <line:268:28, col:79> col:40 putc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x210a0fad8e0 <col:50, col:54> col:54 _Ch 'int'
| `-ParmVarDecl 0x210a0fad958 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x210a0fadc18 <line:269:28, col:60> col:40 putchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x210a0fadb38 <col:53, col:57> col:57 _Ch 'int'
|-FunctionDecl 0x210a0fade38 <line:270:28, col:69> col:40 puts 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x210a0fadcf0 <col:52, col:65> col:65 _Str 'const char *'
|-FunctionDecl 0x210a0fae088 <line:271:28, col:82> col:40 _putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x210a0fadf10 <col:51, col:55> col:55 _Word 'int'
| `-ParmVarDecl 0x210a0fadf88 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x210a0fae248 <line:274:9, col:57> col:21 remove 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x210a0fae168 <col:35, col:48> col:48 _Filename 'const char *'
|-FunctionDecl 0x210a10050f0 <line:275:24, col:109> col:36 rename 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x210a0fae320 <col:50, col:63> col:63 _OldFilename 'const char *'
| `-ParmVarDecl 0x210a0fae3a0 <col:84, col:97> col:97 _NewFilename 'const char *'
|-FunctionDecl 0x210a10052b0 <line:276:9, col:58> col:21 _unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x210a10051d0 <col:36, col:49> col:49 _Filename 'const char *'
|-FunctionDecl 0x210a1005540 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:278:89> col:53 unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x210a1005460 <col:67, col:80> col:80 _Filename 'const char *'
| `-DeprecatedAttr 0x210a10055e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _unlink. See online help for details." ""
|-FunctionDecl 0x210a10057e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:281:9, col:49> col:22 rewind 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x210a1005708 <col:37, col:44> col:44 _File 'FILE *'
|-FunctionDecl 0x210a1005970 <line:282:28, col:51> col:40 _rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x210a1005c18 <line:283:69> col:69 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x210a1005cb8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x210a1005d28 <col:69> Implicit scanf 1 2
|-FunctionDecl 0x210a1005d90 prev 0x210a1005c18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:283:129> col:69 scanf 'int (const char *restrict, ...)'
| |-ParmVarDecl 0x210a1005b00 <col:104, col:117> col:117 _Format 'const char *'
| |-FormatAttr 0x210a1005f68 <col:69> Inherited scanf 1 2
| `-DeprecatedAttr 0x210a1005e38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x210a1003310 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:284:177> col:76 _scanf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x210a10030d8 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x210a1003150 <col:155, col:165> col:165 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x210a10033c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _scanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x210a10035e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:288:40, col:116> col:52 scanf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x210a1003508 <col:91, col:104> col:104 _Format 'const char *'
|-FunctionDecl 0x210a1003838 <line:290:40, col:157> col:52 _scanf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x210a10036c0 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x210a1003738 <col:135, col:145> col:145 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x210a1003bf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:292:150> col:55 setbuf 'void (FILE *, char *) __attribute__((cdecl))':'void (FILE *, char *)'
| |-ParmVarDecl 0x210a10039d0 <col:70, col:77> col:77 _File 'FILE *'
| |-ParmVarDecl 0x210a1003a50 <col:136, col:143> col:143 _Buffer 'char *'
| `-DeprecatedAttr 0x210a1003ca8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using setvbuf instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x210a1003ed0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:293:28, col:66> col:40 _setmaxstdio 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x210a1003df0 <col:58, col:62> col:62 _Max 'int'
|-FunctionDecl 0x210a1002138 <line:294:28, col:93> col:49 _set_output_format 'unsigned int (unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int)'
| `-ParmVarDecl 0x210a1001ff0 <col:73, col:86> col:86 _Format 'unsigned int'
|-FunctionDecl 0x210a1002320 <line:295:28, col:72> col:49 _get_output_format 'unsigned int (void) __attribute__((cdecl))':'unsigned int (void)'
|-FunctionDecl 0x210a1002770 <line:296:28, col:145> col:40 setvbuf 'int (FILE *, char *, int, size_t) __attribute__((cdecl))':'int (FILE *, char *, int, size_t)'
| |-ParmVarDecl 0x210a10023e8 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x210a1002468 <col:99, col:106> col:106 _Buf 'char *'
| |-ParmVarDecl 0x210a10024e8 <col:117, col:121> col:121 _Mode 'int'
| `-ParmVarDecl 0x210a1002560 <col:133, col:140> col:140 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x210a1002bf0 <line:297:40, col:213> col:52 _snprintf_s 'int (char *, size_t, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, ...)'
| |-ParmVarDecl 0x210a1002860 <col:93, col:100> col:100 _DstBuf 'char *'
| |-ParmVarDecl 0x210a10028d8 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x210a1002950 <col:140, col:147> col:147 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x210a10029d0 <col:188, col:201> col:201 _Format 'const char *'
|-FunctionDecl 0x210a1006030 <line:300:40, col:188> col:52 sprintf_s 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x210a1002ce0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x210a1002d58 <col:112, col:119> col:119 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x210a1002dd8 <col:163, col:176> col:176 _Format 'const char *'
|-FunctionDecl 0x210a10061f8 <line:303:24, col:101> col:36 _scprintf 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x210a1006118 <col:76, col:89> col:89 _Format 'const char *'
|-FunctionDecl 0x210a10065d0 <line:304:70> col:70 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x210a1006670 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x210a10066d8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x210a1006750 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x210a10067b8 prev 0x210a10065d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:304:157> col:70 sscanf 'int (const char *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x210a1006390 <col:84, col:97> col:97 _Src 'const char *'
| |-ParmVarDecl 0x210a1006410 <col:132, col:145> col:145 _Format 'const char *'
| |-FormatAttr 0x210a1006998 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x210a1006868 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x210a1006d88 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:305:205> col:77 _sscanf_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x210a1006aa8 <col:94, col:107> col:107 _Src 'const char *'
| |-ParmVarDecl 0x210a1006b28 <col:152, col:165> col:165 _Format 'const char *'
| |-ParmVarDecl 0x210a1006ba0 <col:183, col:193> col:193 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x210a1006e40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x210a1004110 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:309:40, col:143> col:52 sscanf_s 'int (const char *, const char *, ...) __attribute__((cdecl))':'int (const char *, const char *, ...)'
| |-ParmVarDecl 0x210a1006f88 <col:68, col:81> col:81 _Src 'const char *'
| `-ParmVarDecl 0x210a1004010 <col:118, col:131> col:131 _Format 'const char *'
|-FunctionDecl 0x210a1004408 <line:311:40, col:184> col:52 _sscanf_s_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x210a10041f0 <col:71, col:84> col:84 _Src 'const char *'
| |-ParmVarDecl 0x210a1004270 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x210a10042e8 <col:162, col:172> col:172 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x210a1004898 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:312:217> col:76 _snscanf 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x210a10045b0 <col:121, col:134> col:134 _Src 'const char *'
| |-ParmVarDecl 0x210a1004628 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x210a10046a8 <col:192, col:205> col:205 _Format 'const char *'
| `-DeprecatedAttr 0x210a1004950 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x210a1004f20 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:313:259> col:78 _snscanf_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x210a1004b90 <col:125, col:138> col:138 _Src 'const char *'
| |-ParmVarDecl 0x210a1004c08 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x210a1004c88 <col:206, col:219> col:219 _Format 'const char *'
| |-ParmVarDecl 0x210a1004d00 <col:237, col:247> col:247 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x210a0ffefc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x210a0fff320 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:314:40, col:197> col:52 _snscanf_s 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x210a0fff108 <col:99, col:112> col:112 _Src 'const char *'
| |-ParmVarDecl 0x210a0fff180 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x210a0fff200 <col:172, col:185> col:185 _Format 'const char *'
|-FunctionDecl 0x210a0fff6b8 <line:315:40, col:237> col:52 _snscanf_s_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x210a0fff408 <col:101, col:114> col:114 _Src 'const char *'
| |-ParmVarDecl 0x210a0fff480 <col:125, col:132> col:132 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x210a0fff500 <col:184, col:197> col:197 _Format 'const char *'
| `-ParmVarDecl 0x210a0fff578 <col:215, col:225> col:225 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x210a0fff918 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:317:86> col:74 tmpfile 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
| `-DeprecatedAttr 0x210a0fff9b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpfile_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x210a0fffc70 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:319:28, col:96> col:44 tmpfile_s 'errno_t (FILE **) __attribute__((cdecl))':'errno_t (FILE **)'
| `-ParmVarDecl 0x210a0fffb00 <col:83, col:91> col:91 _File 'FILE **'
|-FunctionDecl 0x210a1007040 <line:320:28, col:106> col:44 tmpnam_s 'errno_t (char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t)'
| |-ParmVarDecl 0x210a0fffd48 <col:75, col:82> col:82 _Buf 'char *'
| `-ParmVarDecl 0x210a0fffdc0 <col:93, col:101> col:101 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x210a10072c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:323:79 tmpnam 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x210a10071e0 <col:113, col:119> col:119 _Buffer 'char *'
| `-DeprecatedAttr 0x210a1007368 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x210a1007628 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:324:28, col:81> col:40 ungetc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x210a10074b0 <col:52, col:56> col:56 _Ch 'int'
| `-ParmVarDecl 0x210a1007528 <col:69, col:76> col:76 _File 'FILE *'
|-FunctionDecl 0x210a1007a40 <line:325:40> col:40 implicit vfprintf 'int (FILE *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x210a1007ae0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x210a1007b48 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x210a1007bb0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x210a1007c30 <col:40> Implicit printf 2 0
|-FunctionDecl 0x210a1007c98 prev 0x210a1007a40 <col:28, col:139> col:40 vfprintf 'int (FILE *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x210a1007700 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x210a1007780 <col:101, col:114> col:114 _Format 'const char *'
| |-ParmVarDecl 0x210a10077f8 <col:123, col:131> col:131 _ArgList 'va_list':'char *'
| `-FormatAttr 0x210a1007d98 <col:40> Inherited printf 2 0
|-FunctionDecl 0x210a0ffffd0 <line:326:40> col:40 implicit vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x210a1000070 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x210a10000d8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x210a1000140 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x210a10001c0 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x210a1000228 prev 0x210a0ffffd0 <col:28, col:138> col:40 vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x210a1007de0 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x210a1007e60 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x210a1007ed8 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x210a1000328 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x210a1000588 <line:328:28, col:141> col:40 vfprintf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x210a1000370 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x210a10003f0 <col:103, col:116> col:116 _Format 'const char *'
| `-ParmVarDecl 0x210a1000468 <col:125, col:133> col:133 _ArgList 'va_list':'char *'
|-FunctionDecl 0x210a1000880 <line:329:28, col:140> col:40 vfscanf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x210a1000668 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x210a10006e8 <col:102, col:115> col:115 _Format 'const char *'
| `-ParmVarDecl 0x210a1000760 <col:124, col:132> col:132 _ArgList 'va_list':'char *'
|-FunctionDecl 0x210a1000bc8 <line:331:40> col:40 implicit vprintf 'int (const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x210a1000c68 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x210a1000cd0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x210a1000d48 <col:40> Implicit printf 1 0
|-FunctionDecl 0x210a1000db0 prev 0x210a1000bc8 <col:28, col:116> col:40 vprintf 'int (const char *, __builtin_va_list)'
| |-ParmVarDecl 0x210a1000968 <col:78, col:91> col:91 _Format 'const char *'
| |-ParmVarDecl 0x210a10009e0 <col:100, col:108> col:108 _ArgList 'va_list':'char *'
| `-FormatAttr 0x210a1000ea8 <col:40> Inherited printf 1 0
|-FunctionDecl 0x210a1008188 <line:332:40> col:40 implicit vscanf 'int (const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x210a1008228 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x210a1008290 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x210a1008308 <col:40> Implicit scanf 1 0
|-FunctionDecl 0x210a1008370 prev 0x210a1008188 <col:28, col:115> col:40 vscanf 'int (const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x210a1000ef8 <col:77, col:90> col:90 _Format 'const char *'
| |-ParmVarDecl 0x210a1008050 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
| `-FormatAttr 0x210a1008468 <col:40> Inherited scanf 1 0
|-FunctionDecl 0x210a1008630 <line:334:28, col:118> col:40 vprintf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x210a10084b8 <col:80, col:93> col:93 _Format 'const char *'
| `-ParmVarDecl 0x210a1008530 <col:102, col:110> col:110 _ArgList 'va_list':'char *'
|-FunctionDecl 0x210a1008888 <line:335:28, col:117> col:40 vscanf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x210a1008710 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x210a1008788 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x210a1008de8 <line:337:77> col:77 implicit vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x210a1008e88 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x210a1008ef0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x210a1008f58 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x210a1008fc0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x210a1000fe0 <col:77> Implicit printf 3 0
|-FunctionDecl 0x210a1001048 prev 0x210a1008de8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:337:218> col:77 vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x210a1008a28 <col:111, col:118> col:118 _DstBuf 'char *'
| |-ParmVarDecl 0x210a1008aa0 <col:132, col:139> col:139 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x210a1008b20 <col:180, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x210a1008b98 <col:202, col:210> col:210 _ArgList 'va_list':'char *'
| |-FormatAttr 0x210a1001238 <col:77> Inherited printf 3 0
| `-DeprecatedAttr 0x210a1001108 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x210a10016a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:339:28, col:206> col:40 vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x210a1001288 <col:77, col:84> col:84 _DstBuf 'char *'
| |-ParmVarDecl 0x210a1001300 <col:98, col:105> col:105 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x210a1001378 <col:120, col:127> col:127 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x210a10013f8 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x210a1001470 <col:190, col:198> col:198 _ArgList 'va_list':'char *'
|-FunctionDecl 0x210a1001ae8 <line:342:40, col:227> col:52 _vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x210a10017a0 <col:94, col:101> col:101 _DstBuf 'char *'
| |-ParmVarDecl 0x210a1001818 <col:115, col:122> col:122 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x210a1001890 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x210a1001910 <col:189, col:202> col:202 _Format 'const char *'
| `-ParmVarDecl 0x210a1001988 <col:211, col:219> col:219 _ArgList 'va_list':'char *'
|-FunctionDecl 0x210a1001eb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:89 _snprintf 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x210a1001ca0 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x210a1001d18 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x210a1001d98 <col:246, col:260> col:260 _Format 'const char *'
| `-DeprecatedAttr 0x210a1001f70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x210a100b4f0 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:100 _vsnprintf 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x210a100b240 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x210a100b2b8 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x210a100b338 <col:246, col:260> col:260 _Format 'const char *'
| |-ParmVarDecl 0x210a100b3b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x210a100b5b0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x210a100b9a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:349:21, col:183> col:33 vsprintf_s 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x210a100b6f8 <col:73, col:80> col:80 _DstBuf 'char *'
| |-ParmVarDecl 0x210a100b770 <col:94, col:101> col:101 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x210a100b7f0 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x210a100b868 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x210a100bd68 <line:351:40, col:149> col:52 vsscanf_s 'int (const char *, const char *, va_list) __attribute__((cdecl))':'int (const char *, const char *, va_list)'
| |-ParmVarDecl 0x210a100ba98 <col:62, col:75> col:75 _Src 'const char *'
| |-ParmVarDecl 0x210a100bb18 <col:111, col:124> col:124 _Format 'const char *'
| `-ParmVarDecl 0x210a100bb90 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x210a100a110 <line:356:85> col:85 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x210a100a1b0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x210a100a218 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x210a100a290 <col:85> Implicit printf 2 3
|-FunctionDecl 0x210a100a2f8 prev 0x210a100a110 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:85 sprintf 'int (char *, const char *, ...)'
| |-ParmVarDecl 0x210a100bf10 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x210a100bf90 <col:171, col:185> col:185 _Format 'const char *'
| |-FormatAttr 0x210a100a4d8 <col:85> Inherited printf 2 3
| `-DeprecatedAttr 0x210a100a3a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x210a100a900 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> col:94 implicit vsprintf 'int (char *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x210a100a9a0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x210a100aa08 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x210a100aa70 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x210a100aaf0 <col:94> Implicit printf 2 0
|-FunctionDecl 0x210a100ab58 prev 0x210a100a900 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94 vsprintf 'int (char *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x210a100a5e8 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x210a100a668 <col:171, col:185> col:185 _Format 'const char *'
| |-ParmVarDecl 0x210a100a6e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-FormatAttr 0x210a100ad40 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> Inherited printf 2 0
| `-DeprecatedAttr 0x210a100ac10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x210a100f0c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:357:40> col:40 implicit vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x210a100f160 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x210a100f1c8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x210a100f230 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x210a100f2b0 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x210a100f318 prev 0x210a100f0c0 <col:28, col:138> col:40 vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x210a100ad90 <col:48, col:61> col:61 _srcBuf 'const char *'
| |-ParmVarDecl 0x210a100ae10 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x210a100ae88 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x210a100f418 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x210a100f5e0 <line:359:24, col:115> col:36 _vscprintf 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x210a100f468 <col:77, col:90> col:90 _Format 'const char *'
| `-ParmVarDecl 0x210a100f4e0 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
|-FunctionDecl 0x210a100f8d8 <line:360:28, col:170> col:40 _snprintf_c 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x210a100f6c0 <col:76, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x210a100f738 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x210a100f7b8 <col:145, col:158> col:158 _Format 'const char *'
|-FunctionDecl 0x210a100fc70 <line:361:28, col:183> col:40 _vsnprintf_c 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x210a100f9c0 <col:77, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x210a100fa38 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x210a100fab8 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x210a100fb30 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x210a100fed8 <line:363:28, col:128> col:40 _fprintf_p 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x210a100fd58 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x210a100fdd8 <col:103, col:116> col:116 _Format 'const char *'
|-FunctionDecl 0x210a100e0b0 <line:364:28, col:105> col:40 _printf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x210a100ffb8 <col:80, col:93> col:93 _Format 'const char *'
|-FunctionDecl 0x210a100e3a0 <line:365:28, col:168> col:40 _sprintf_p 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x210a100e188 <col:77, col:84> col:84 _Dst 'char *'
| |-ParmVarDecl 0x210a100e200 <col:95, col:102> col:102 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x210a100e280 <col:143, col:156> col:156 _Format 'const char *'
|-FunctionDecl 0x210a100e698 <line:366:28, col:142> col:40 _vfprintf_p 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x210a100e480 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x210a100e500 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x210a100e578 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x210a100e8f8 <line:367:28, col:119> col:40 _vprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x210a100e780 <col:81, col:94> col:94 _Format 'const char *'
| `-ParmVarDecl 0x210a100e7f8 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x210a100ec88 <line:368:28, col:182> col:40 _vsprintf_p 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x210a100e9d8 <col:78, col:85> col:85 _Dst 'char *'
| |-ParmVarDecl 0x210a100ea50 <col:96, col:103> col:103 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x210a100ead0 <col:144, col:157> col:157 _Format 'const char *'
| `-ParmVarDecl 0x210a100eb48 <col:166, col:174> col:174 _ArgList 'va_list':'char *'
|-FunctionDecl 0x210a100ee58 <line:369:24, col:103> col:36 _scprintf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x210a100ed78 <col:78, col:91> col:91 _Format 'const char *'
|-FunctionDecl 0x210a10100d0 <line:370:24, col:117> col:36 _vscprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x210a100ef30 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x210a100efa8 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x210a1010290 <line:371:9, col:61> col:21 _set_printf_count_output 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x210a10101b0 <col:51, col:55> col:55 _Value 'int'
|-FunctionDecl 0x210a1010420 <line:372:9, col:50> col:21 _get_printf_count_output 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x210a1010668 <line:374:28, col:143> col:40 _printf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x210a10104f0 <col:90, col:103> col:103 _Format 'const char *'
| `-ParmVarDecl 0x210a1010568 <col:121, col:131> col:131 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x210a10108c0 <line:375:28, col:145> col:40 _printf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x210a1010748 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x210a10107c0 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x210a1010b18 <line:376:28, col:145> col:40 _printf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x210a10109a0 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x210a1010a18 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x210a1010ec8 <line:377:28, col:157> col:40 _vprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x210a1010bf8 <col:91, col:104> col:104 _Format 'const char *'
| |-ParmVarDecl 0x210a1010c70 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x210a1010ce8 <col:141, col:149> col:149 _ArgList 'va_list':'char *'
|-FunctionDecl 0x210a1009180 <line:378:28, col:159> col:40 _vprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x210a1010fb0 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x210a1011028 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x210a1009060 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x210a1009478 <line:379:28, col:159> col:40 _vprintf_s_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x210a1009268 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x210a10092e0 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x210a1009358 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x210a1009770 <line:381:28, col:166> col:40 _fprintf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x210a1009558 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x210a10095d8 <col:113, col:126> col:126 _Format 'const char *'
| `-ParmVarDecl 0x210a1009650 <col:144, col:154> col:154 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x210a1009a68 <line:382:28, col:168> col:40 _fprintf_p_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x210a1009850 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x210a10098d0 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x210a1009948 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x210a1009d60 <line:383:28, col:168> col:40 _fprintf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x210a1009b48 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x210a1009bc8 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x210a1009c40 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x210a1011240 <line:384:28, col:147> col:40 _vfprintf_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x210a1009e40 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x210a1009ec0 <col:81, col:94> col:94 _Format 'const char *'
| |-ParmVarDecl 0x210a1009f38 <col:112, col:122> col:122 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x210a1009fb0 <col:131, col:139> col:139 _ArgList 'va_list':'char *'
|-FunctionDecl 0x210a10115d8 <line:385:28, col:149> col:40 _vfprintf_p_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x210a1011328 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x210a10113a8 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x210a1011420 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x210a1011498 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x210a1011970 <line:386:28, col:149> col:40 _vfprintf_s_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x210a10116c0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x210a1011740 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x210a10117b8 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x210a1011830 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x210a1011e08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:388:221> col:78 _sprintf_l 'int (char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x210a1011b20 <col:112, col:119> col:119 _DstBuf 'char *'
| |-ParmVarDecl 0x210a1011ba0 <col:168, col:181> col:181 _Format 'const char *'
| |-ParmVarDecl 0x210a1011c18 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x210a1011ec0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x210a1012400 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:389:28, col:211> col:40 _sprintf_p_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x210a1012008 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x210a10120f0 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x210a1012170 <col:158, col:171> col:171 _Format 'const char *'
| `-ParmVarDecl 0x210a10121e8 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x210a10127a0 <line:390:40, col:221> col:52 _sprintf_s_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x210a10124f0 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x210a1012568 <col:111, col:118> col:118 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x210a10125e8 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x210a1012660 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x210a1012cf0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:391:195> col:79 _vsprintf_l 'int (char *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x210a1012990 <col:114, col:121> col:121 _DstBuf 'char *'
| |-ParmVarDecl 0x210a1012a10 <col:137, col:150> col:150 _Format 'const char *'
| |-ParmVarDecl 0x210a1012a88 <col:168> col:177 '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x210a1012b00 <col:179, col:187> col:187 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x210a1012db0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x210a1013338 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:392:28, col:225> col:40 _vsprintf_p_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x210a1012ef8 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x210a1012f70 <col:101, col:108> col:108 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x210a1012ff0 <col:159, col:171> col:171 _Format 'const char *'
| |-ParmVarDecl 0x210a1013068 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x210a1013100 <col:209, col:217> col:217 _ArgList 'va_list':'char *'
|-FunctionDecl 0x210a1013778 <line:393:40, col:235> col:52 _vsprintf_s_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x210a1013430 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x210a10134a8 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x210a1013528 <col:169, col:182> col:182 _Format 'const char *'
| |-ParmVarDecl 0x210a10135a0 <col:200, col:210> col:210 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x210a1013618 <col:219, col:227> col:227 _ArgList 'va_list':'char *'
|-FunctionDecl 0x210a10139e8 <line:395:28, col:145> col:40 _scprintf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x210a1013870 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x210a10138e8 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x210a1013c40 <line:396:28, col:147> col:40 _scprintf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x210a1013ac8 <col:94, col:107> col:107 _Format 'const char *'
| `-ParmVarDecl 0x210a1013b40 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x210a1013f30 <line:397:28, col:159> col:40 _vscprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x210a1013d20 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x210a1013d98 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x210a1013e10 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x210a100c1c0 <line:398:28, col:161> col:40 _vscprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x210a1014018 <col:95, col:108> col:108 _Format 'const char *'
| |-ParmVarDecl 0x210a1014090 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x210a100c0a0 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x210a100c618 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:400:247> col:79 _snprintf_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x210a100c368 <col:115, col:122> col:122 _DstBuf 'char *'
| |-ParmVarDecl 0x210a100c3e0 <col:136, col:143> col:143 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x210a100c460 <col:194, col:207> col:207 _Format 'const char *'
| |-ParmVarDecl 0x210a100c4d8 <col:225, col:235> col:235 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x210a100c6d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x210a100cad0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:401:28, col:210> col:40 _snprintf_c_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x210a100c820 <col:78, col:85> col:85 _DstBuf 'char *'
| |-ParmVarDecl 0x210a100c898 <col:99, col:106> col:106 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x210a100c918 <col:157, col:170> col:170 _Format 'const char *'
| `-ParmVarDecl 0x210a100c990 <col:188, col:198> col:198 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x210a1018150 <line:402:40, col:245> col:52 _snprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x210a100cbc0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x210a100cc38 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x210a100ccb0 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x210a100cd30 <col:192, col:205> col:205 _Format 'const char *'
| `-ParmVarDecl 0x210a100cda8 <col:223, col:233> col:233 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x210a1018690 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:403:262> col:80 _vsnprintf_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x210a1018348 <col:117, col:124> col:124 _DstBuf 'char *'
| |-ParmVarDecl 0x210a10183c0 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x210a1018440 <col:196, col:209> col:209 _Format 'const char *'
| |-ParmVarDecl 0x210a10184b8 <col:227, col:237> col:237 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x210a1018530 <col:246, col:254> col:254 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x210a1018758 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x210a1018bd8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:404:28, col:176> col:40 _vsnprintf_c_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x210a10188a8 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x210a1018920 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x210a10189a0 <col:118, col:129> col:130 'const char *'
| |-ParmVarDecl 0x210a1018a18 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x210a1018a90 <col:160, col:168> col:168 _ArgList 'va_list':'char *'
|-FunctionDecl 0x210a101a1d0 <line:405:28, col:245> col:40 _vsnprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x210a1018cd0 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x210a1018d48 <col:101, col:108> col:108 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x210a1018dc0 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x210a1018e40 <col:181, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x210a1018eb8 <col:210, col:220> col:220 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x210a1018f30 <col:229, col:237> col:237 _ArgList 'va_list':'char *'
|-FunctionDecl 0x210a101a590 <line:415:24, col:128> col:39 _wfsopen 'FILE *(const wchar_t *, const wchar_t *, int) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, int)'
| |-ParmVarDecl 0x210a101a2c8 <col:55, col:71> col:71 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x210a101a340 <col:89, col:105> col:105 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x210a101a3c0 <col:117, col:121> col:121 _ShFlag 'int'
|-FunctionDecl 0x210a101a800 <line:417:28, col:70> col:43 fgetwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x210a101a690 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x210a101aa18 <line:418:28, col:58> col:43 _fgetwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x210a101acf8 <line:419:28, col:88> col:43 fputwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x210a101aae0 <col:55, col:63> col:63 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x210a101ab58 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x210a101af40 <line:420:28, col:70> col:43 _fputwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x210a101add0 <col:59, col:67> col:67 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x210a101b180 <line:421:24, col:65> col:39 getwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x210a101b010 <col:53, col:60> col:60 _File 'FILE *'
|-FunctionDecl 0x210a101b308 <line:422:24, col:52> col:39 getwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x210a101b540 <line:423:28, col:87> col:43 putwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x210a101b3d0 <col:54, col:62> col:62 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x210a101b448 <col:75, col:82> col:82 _File 'FILE *'
|-FunctionDecl 0x210a101b6f0 <line:424:28, col:68> col:43 putwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x210a101b618 <col:57, col:65> col:65 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x210a101b998 <line:425:28, col:88> col:43 ungetwc 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x210a101b7c0 <col:56, col:63> col:63 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x210a101b838 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x210a101bd40 <line:427:28, col:141> col:46 fgetws 'wchar_t *(wchar_t *, int, FILE *) __attribute__((cdecl))':'wchar_t *(wchar_t *, int, FILE *)'
| |-ParmVarDecl 0x210a101ba70 <col:82, col:92> col:92 _Dst 'wchar_t *'
| |-ParmVarDecl 0x210a101baf0 <col:103, col:107> col:107 _SizeInWords 'int'
| `-ParmVarDecl 0x210a101bb68 <col:129, col:136> col:136 _File 'FILE *'
|-FunctionDecl 0x210a101c040 <line:428:28, col:96> col:40 fputws 'int (const wchar_t *, FILE *) __attribute__((cdecl))':'int (const wchar_t *, FILE *)'
| |-ParmVarDecl 0x210a101be20 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x210a101be98 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x210a1019318 <line:429:28, col:124> col:46 _getws_s 'wchar_t *(wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, size_t)'
| |-ParmVarDecl 0x210a101c118 <col:84, col:94> col:94 _Str 'wchar_t *'
| `-ParmVarDecl 0x210a1019170 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x210a1019620 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:431:83 _getws 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x210a10194b0 <col:115, col:124> col:124 _String 'wchar_t *'
| `-DeprecatedAttr 0x210a10196c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _getws_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x210a1019988 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:432:28, col:74> col:40 _putws 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x210a1019808 <col:54, col:70> col:70 _Str 'const wchar_t *'
|-FunctionDecl 0x210a1019c90 <line:434:28, col:129> col:40 fwprintf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x210a1019a58 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x210a1019ad0 <col:101, col:117> col:117 _Format 'const wchar_t *'
|-FunctionDecl 0x210a1019ee0 <line:436:28, col:131> col:40 fwprintf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x210a1019d68 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x210a1019de0 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x210a101c190 <line:438:28, col:106> col:40 wprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x210a1019fb8 <col:78, col:94> col:94 _Format 'const wchar_t *'
|-FunctionDecl 0x210a101c340 <line:440:28, col:108> col:40 wprintf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x210a101c260 <col:80, col:96> col:96 _Format 'const wchar_t *'
|-FunctionDecl 0x210a101c4f0 <line:442:24, col:105> col:36 _scwprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x210a101c410 <col:77, col:93> col:93 _Format 'const wchar_t *'
|-FunctionDecl 0x210a101c888 <line:443:28, col:143> col:40 vfwprintf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x210a101c5c0 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x210a101c638 <col:102, col:118> col:118 _Format 'const wchar_t *'
| `-ParmVarDecl 0x210a101c6b0 <col:127, col:135> col:135 _ArgList 'va_list':'char *'
|-FunctionDecl 0x210a101cb78 <line:444:28, col:142> col:40 vfwscanf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x210a101c968 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x210a101c9e0 <col:101, col:117> col:117 _Format 'const wchar_t *'
| `-ParmVarDecl 0x210a101ca58 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x210a101ce68 <line:446:28, col:145> col:40 vfwprintf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x210a101cc58 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x210a101ccd0 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x210a101cd48 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x210a1015120 <line:447:28, col:144> col:40 vfwscanf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x210a101cf48 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x210a101cfc0 <col:103, col:119> col:119 _Format 'const wchar_t *'
| `-ParmVarDecl 0x210a101d038 <col:128, col:136> col:136 _ArgList 'va_list':'char *'
|-FunctionDecl 0x210a1015420 <line:449:28, col:120> col:40 vwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x210a1015200 <col:79, col:95> col:95 _Format 'const wchar_t *'
| `-ParmVarDecl 0x210a1015278 <col:104, col:112> col:112 _ArgList 'va_list':'char *'
|-FunctionDecl 0x210a1015670 <line:450:28, col:119> col:40 vwscanf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x210a10154f8 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x210a1015570 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x210a10158c0 <line:452:28, col:122> col:40 vwprintf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x210a1015748 <col:81, col:97> col:97 _Format 'const wchar_t *'
| `-ParmVarDecl 0x210a10157c0 <col:106, col:114> col:114 _ArgList 'va_list':'char *'
|-FunctionDecl 0x210a1015b10 <line:453:28, col:121> col:40 vwscanf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x210a1015998 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x210a1015a10 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x210a1015ec8 <line:457:21, col:173> col:33 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x210a1015be8 <col:73, col:83> col:83 _Dst 'wchar_t *'
| |-ParmVarDecl 0x210a1015c60 <col:94, col:101> col:101 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x210a1015cd8 <col:145, col:161> col:161 _Format 'const wchar_t *'
|-FunctionDecl 0x210a101d3b0 <line:461:21, col:187> col:33 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x210a1015fa8 <col:74, col:84> col:84 _Dst 'wchar_t *'
| |-ParmVarDecl 0x210a1016020 <col:95, col:102> col:102 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x210a1016098 <col:146, col:162> col:162 _Format 'const wchar_t *'
| `-ParmVarDecl 0x210a101d1a0 <col:171, col:179> col:179 _ArgList 'va_list':'char *'
|-FunctionDecl 0x210a101d768 <line:462:40, col:156> col:52 vswscanf_s 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x210a101d498 <col:63, col:79> col:79 _Src 'const wchar_t *'
| |-ParmVarDecl 0x210a101d510 <col:115, col:131> col:131 _Format 'const wchar_t *'
| `-ParmVarDecl 0x210a101d588 <col:140, col:148> col:148 _ArgList 'va_list':'char *'
|-FunctionDecl 0x210a101da58 <line:466:28, col:145> col:40 vswscanf 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x210a101d848 <col:49, col:65> col:65 _srcBuf 'const wchar_t *'
| |-ParmVarDecl 0x210a101d8c0 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x210a101d938 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x210a101dd48 <line:468:28, col:184> col:40 _swprintf_c 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x210a101db38 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x210a101dbb0 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x210a101dc28 <col:156, col:172> col:172 _Format 'const wchar_t *'
|-FunctionDecl 0x210a101e0d0 <line:469:28, col:198> col:40 _vswprintf_c 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x210a101de28 <col:82, col:92> col:92 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x210a101dea0 <col:106, col:113> col:113 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x210a101df18 <col:157, col:173> col:173 _Format 'const wchar_t *'
| `-ParmVarDecl 0x210a101df90 <col:182, col:190> col:190 _ArgList 'va_list':'char *'
|-FunctionDecl 0x210a10164e0 <line:471:40, col:220> col:52 _snwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x210a1016158 <col:94, col:104> col:104 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x210a10161d0 <col:118, col:125> col:125 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x210a1016248 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x210a10162c0 <col:192, col:208> col:208 _Format 'const wchar_t *'
|-FunctionDecl 0x210a10169e8 <line:473:40, col:234> col:52 _vsnwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x210a10165c8 <col:95, col:105> col:105 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x210a1016640 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x210a10166b8 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x210a1016730 <col:193, col:209> col:209 _Format 'const wchar_t *'
| `-ParmVarDecl 0x210a10167a8 <col:218, col:226> col:226 _ArgList 'va_list':'char *'
|-FunctionDecl 0x210a1016da8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:89 _snwprintf 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x210a1016b98 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x210a1016c10 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x210a1016c88 <col:254, col:271> col:271 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x210a1016e60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x210a1017370 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:101 _vsnwprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x210a1017060 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x210a1017140 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x210a10171b8 <col:254, col:271> col:271 _Format 'const wchar_t *'
| |-ParmVarDecl 0x210a1017230 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x210a1017430 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x210a10176e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:480:28, col:132> col:40 _fwprintf_p 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x210a1017570 <col:60, col:67> col:67 _File 'FILE *'
| `-ParmVarDecl 0x210a10175e8 <col:104, col:120> col:120 _Format 'const wchar_t *'
|-FunctionDecl 0x210a10178a0 <line:481:28, col:109> col:40 _wprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x210a10177c0 <col:81, col:97> col:97 _Format 'const wchar_t *'
|-FunctionDecl 0x210a1017b80 <line:482:28, col:146> col:40 _vfwprintf_p 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x210a1017970 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x210a10179e8 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x210a1017a60 <col:130, col:138> col:138 _ArgList 'va_list':'char *'
|-FunctionDecl 0x210a1017dd8 <line:483:28, col:123> col:40 _vwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x210a1017c60 <col:82, col:98> col:98 _Format 'const wchar_t *'
| `-ParmVarDecl 0x210a1017cd8 <col:107, col:115> col:115 _ArgList 'va_list':'char *'
|-FunctionDecl 0x210a1025040 <line:484:28, col:178> col:40 _swprintf_p 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x210a1017eb0 <col:78, col:88> col:88 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x210a1017f28 <col:102, col:109> col:109 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x210a1017fa0 <col:150, col:166> col:166 _Format 'const wchar_t *'
|-FunctionDecl 0x210a10253c8 <line:485:28, col:192> col:40 _vswprintf_p 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x210a1025120 <col:79, col:89> col:89 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x210a1025198 <col:103, col:110> col:110 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x210a1025210 <col:151, col:167> col:167 _Format 'const wchar_t *'
| `-ParmVarDecl 0x210a1025288 <col:176, col:184> col:184 _ArgList 'va_list':'char *'
|-FunctionDecl 0x210a1025590 <line:486:24, col:107> col:36 _scwprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x210a10254b0 <col:79, col:95> col:95 _Format 'const wchar_t *'
|-FunctionDecl 0x210a10257d8 <line:487:24, col:121> col:36 _vscwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x210a1025660 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x210a10256d8 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x210a1025ae0 <line:489:28, col:147> col:40 _wprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x210a10258b0 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x210a1025928 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x210a1025d30 <line:490:28, col:149> col:40 _wprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x210a1025bb8 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x210a1025c30 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x210a1025f80 <line:491:28, col:149> col:40 _wprintf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x210a1025e08 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x210a1025e80 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x210a1022308 <line:492:28, col:161> col:40 _vwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x210a1022038 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x210a10220b0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x210a1022128 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x210a10225f8 <line:493:28, col:163> col:40 _vwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x210a10223e8 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x210a1022460 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x210a10224d8 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x210a10228e8 <line:494:28, col:163> col:40 _vwprintf_s_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x210a10226d8 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x210a1022750 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x210a10227c8 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x210a1022ca8 <line:496:28, col:170> col:40 _fwprintf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x210a10229c8 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x210a1022a40 <col:114, col:130> col:130 _Format 'const wchar_t *'
| `-ParmVarDecl 0x210a1022ab8 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x210a101fff0 <line:497:28, col:172> col:40 _fwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x210a1022d88 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x210a1022e00 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x210a1022e78 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x210a10202e0 <line:498:28, col:172> col:40 _fwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x210a10200d0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x210a1020148 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x210a10201c0 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x210a1020730 <line:499:28, col:184> col:40 _vfwprintf_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x210a10203c0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x210a1020438 <col:115, col:131> col:131 _Format 'const wchar_t *'
| |-ParmVarDecl 0x210a10204b0 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x210a1020528 <col:168, col:176> col:176 _ArgList 'va_list':'char *'
|-FunctionDecl 0x210a1020ac0 <line:500:28, col:186> col:40 _vfwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x210a1020818 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x210a1020890 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x210a1020908 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x210a1020980 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x210a1020e50 <line:501:28, col:186> col:40 _vfwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x210a1020ba8 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x210a1020c20 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x210a1020c98 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x210a1020d10 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x210a1024340 <line:503:28, col:218> col:40 _swprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x210a1020f38 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x210a1024030 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x210a10240a8 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x210a1024120 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x210a10246d0 <line:504:28, col:218> col:40 _swprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x210a1024428 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x210a10244a0 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x210a1024518 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x210a1024590 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x210a1024a60 <line:505:40, col:228> col:52 _swprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x210a10247b8 <col:91, col:101> col:101 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x210a1024830 <col:115, col:122> col:122 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x210a10248a8 <col:172, col:188> col:188 _Format 'const wchar_t *'
| `-ParmVarDecl 0x210a1024920 <col:206, col:216> col:216 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x210a1024f68 <line:506:28, col:232> col:40 used _vswprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x210a1024b48 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x210a1024bc0 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x210a1024c38 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x210a1024cb0 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x210a1024d28 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x210a1023388 <line:507:28, col:232> col:40 _vswprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x210a1023048 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x210a10230c0 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x210a1023138 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x210a10231b0 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x210a1023228 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x210a10237b8 <line:508:40, col:242> col:52 _vswprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x210a1023478 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x210a10234f0 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x210a1023568 <col:173, col:189> col:189 _Format 'const wchar_t *'
| |-ParmVarDecl 0x210a10235e0 <col:207, col:217> col:217 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x210a1023658 <col:226, col:234> col:234 _ArgList 'va_list':'char *'
|-FunctionDecl 0x210a1023a20 <line:510:24, col:145> col:36 _scwprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x210a10238a8 <col:89, col:105> col:105 _Format 'const wchar_t *'
| `-ParmVarDecl 0x210a1023920 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x210a1023c70 <line:511:24, col:147> col:36 _scwprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x210a1023af8 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x210a1023b70 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x210a1023f58 <line:512:24, col:161> col:36 _vscwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x210a1023d48 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x210a1023dc0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x210a1023e38 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x210a1029418 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:514:255> col:80 _snwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x210a1029170 <col:117, col:127> col:127 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x210a10291e8 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x210a1029260 <col:199, col:215> col:215 _Format 'const wchar_t *'
| |-ParmVarDecl 0x210a10292d8 <col:233, col:243> col:243 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x210a10294d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x210a1029a48 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:515:40, col:252> col:52 _snwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x210a1029620 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x210a1029698 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x210a1029710 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x210a1029788 <col:196, col:212> col:212 _Format 'const wchar_t *'
| `-ParmVarDecl 0x210a1029800 <col:230, col:240> col:240 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x210a1029f80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:516:270> col:81 _vsnwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x210a1029c40 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x210a1029cb8 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x210a1029d30 <col:201, col:217> col:217 _Format 'const wchar_t *'
| |-ParmVarDecl 0x210a1029da8 <col:235, col:245> col:245 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x210a1029e20 <col:254, col:262> col:262 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x210a1027060 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x210a1027670 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:517:40, col:266> col:52 _vsnwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x210a10271a8 <col:93, col:103> col:103 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x210a1027220 <col:117, col:124> col:124 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x210a1027298 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x210a1027310 <col:197, col:213> col:213 _Format 'const wchar_t *'
| |-ParmVarDecl 0x210a1027388 <col:231, col:241> col:241 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x210a1027400 <col:250, col:258> col:258 _ArgList 'va_list':'char *'
|-FunctionDecl 0x210a1027b70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:110 _swprintf 'int (wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x210a1027938 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x210a10279b0 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-DeprecatedAttr 0x210a1027c20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x210a1027d38 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x210a102d328 <col:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:134 _vswprintf 'int (wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x210a1027ff0 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x210a102d0d0 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-ParmVarDecl 0x210a102d148 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x210a102d3e0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using vswprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x210a102d4f8 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x210a102da98 <col:36, line:1961:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:110 __swprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x210a102d7b8 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x210a102d830 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x210a102d8a8 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-DeprecatedAttr 0x210a102db50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __swprintf_l_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x210a102dc70 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x210a1028280 <col:36, line:1962:166> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:124 __vswprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x210a102df30 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x210a102dfa8 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x210a102e020 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x210a1028070 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1962:153, col:161> col:161 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x210a1028340 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vswprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x210a1028460 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x210a1028768 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:36:1, line:44:1> line:36:21 swprintf 'int (wchar_t *, size_t, const wchar_t *, ...)' static inline
| |-ParmVarDecl 0x210a1028588 <col:53, col:63> col:63 used _String 'wchar_t *'
| |-ParmVarDecl 0x210a1028600 <col:72, col:79> col:79 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x210a1028678 <col:117, col:133> col:133 used _Format 'const wchar_t *'
| `-CompoundStmt 0x210a102b340 <line:37:1, line:44:1>
|   |-DeclStmt 0x210a10288b0 <line:38:5, col:21>
|   | `-VarDecl 0x210a1028848 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x210a1028948 <line:39:5, col:13>
|   | `-VarDecl 0x210a10288e0 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x210a1028ca0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x210a1028c88 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x210a1028ba0 <col:34> '<builtin fn type>' Function 0x210a1028a38 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x210a1028bd8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:40:19> 'va_list':'char *' lvalue Var 0x210a1028848 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x210a1028c10 <col:29> 'const wchar_t *' lvalue ParmVar 0x210a1028678 '_Format' 'const wchar_t *'
|   |-BinaryOperator 0x210a1028f60 <line:41:5, col:67> 'int' '='
|   | |-DeclRefExpr 0x210a1028cd0 <col:5> 'int' lvalue Var 0x210a10288e0 '_Ret' 'int'
|   | `-CallExpr 0x210a1028ea0 <col:12, col:67> 'int'
|   |   |-ImplicitCastExpr 0x210a1028e88 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x210a1028d08 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x210a1024f68 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x210a1028ee8 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x210a1028d28 <col:27> 'wchar_t *' lvalue ParmVar 0x210a1028588 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x210a1028f00 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x210a1028d48 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x210a1028600 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x210a1028f18 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x210a1028d68 <col:44> 'const wchar_t *' lvalue ParmVar 0x210a1028678 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x210a1028f30 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|   |   | `-ParenExpr 0x210a1028df0 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x210a1028dc8 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x210a1028d88 <col:26> 'int' 0
|   |   `-ImplicitCastExpr 0x210a1028f48 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:41:59> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x210a1028e10 <col:59> 'va_list':'char *' lvalue Var 0x210a1028848 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x210a102b2d0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x210a102b2b8 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x210a102b208 <col:34> '<builtin fn type>' Function 0x210a102b0a0 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x210a102b240 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:42:17> 'va_list':'char *' lvalue Var 0x210a1028848 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x210a102b330 <line:43:5, col:12>
|     `-ImplicitCastExpr 0x210a102b318 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x210a102b2f8 <col:12> 'int' lvalue Var 0x210a10288e0 '_Ret' 'int'
|-FunctionDecl 0x210a1028a38 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34> col:34 implicit used __builtin_va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x210a1028ad8 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x210a1028b48 <col:34> Implicit
|-FunctionDecl 0x210a102b0a0 <line:27:34> col:34 implicit used __builtin_va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x210a102b140 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x210a102b1b0 <col:34> Implicit
|-FunctionDecl 0x210a102b638 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:49:1, line:52:1> line:49:31 vswprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)' static inline
| |-ParmVarDecl 0x210a102b390 <col:64, col:74> col:74 used _String 'wchar_t *'
| |-ParmVarDecl 0x210a102b408 <col:83, col:90> col:90 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x210a102b480 <col:138, col:154> col:154 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x210a102b4f8 <col:163, col:171> col:171 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x210a102b920 <line:50:1, line:52:1>
|   `-ReturnStmt 0x210a102b910 <line:51:5, col:62>
|     `-CallExpr 0x210a102b850 <col:12, col:62> 'int'
|       |-ImplicitCastExpr 0x210a102b838 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x210a102b710 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x210a1024f68 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x210a102b898 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x210a102b730 <col:27> 'wchar_t *' lvalue ParmVar 0x210a102b390 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x210a102b8b0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x210a102b750 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x210a102b408 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x210a102b8c8 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x210a102b770 <col:44> 'const wchar_t *' lvalue ParmVar 0x210a102b480 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x210a102b8e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|       | `-ParenExpr 0x210a102b7f8 <col:17, col:27> 'void *'
|       |   `-CStyleCastExpr 0x210a102b7d0 <col:18, col:26> 'void *' <NullToPointer>
|       |     `-IntegerLiteral 0x210a102b790 <col:26> 'int' 0
|       `-ImplicitCastExpr 0x210a102b8f8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:51:59> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x210a102b818 <col:59> 'va_list':'char *' lvalue ParmVar 0x210a102b4f8 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x210a102bbc0 <line:60:1, line:68:1> line:60:21 _swprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)' static inline
| |-ParmVarDecl 0x210a102b948 <col:56, col:66> col:66 used _String 'wchar_t *'
| |-ParmVarDecl 0x210a102b9c0 <col:75, col:82> col:82 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x210a102ba38 <col:130, col:146> col:146 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x210a102bab0 <col:155, col:165> col:165 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| `-CompoundStmt 0x210a10260f8 <line:61:1, line:68:1>
|   |-DeclStmt 0x210a102bd10 <line:62:5, col:21>
|   | `-VarDecl 0x210a102bca8 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x210a102bda8 <line:63:5, col:13>
|   | `-VarDecl 0x210a102bd40 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x210a102be50 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x210a102be38 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x210a102bdc0 <col:34> '<builtin fn type>' Function 0x210a1028a38 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x210a102bde0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:64:19> 'va_list':'char *' lvalue Var 0x210a102bca8 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x210a102be18 <col:29> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x210a102bab0 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |-BinaryOperator 0x210a102c050 <line:65:5, col:72> 'int' '='
|   | |-DeclRefExpr 0x210a102be80 <col:5> 'int' lvalue Var 0x210a102bd40 '_Ret' 'int'
|   | `-CallExpr 0x210a102bf90 <col:12, col:72> 'int'
|   |   |-ImplicitCastExpr 0x210a102bf78 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x210a102beb8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x210a1024f68 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x210a102bfd8 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x210a102bed8 <col:27> 'wchar_t *' lvalue ParmVar 0x210a102b948 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x210a102bff0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x210a102bef8 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x210a102b9c0 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x210a102c008 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x210a102bf18 <col:44> 'const wchar_t *' lvalue ParmVar 0x210a102ba38 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x210a102c020 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x210a102bf38 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x210a102bab0 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |   `-ImplicitCastExpr 0x210a102c038 <col:64> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x210a102bf58 <col:64> 'va_list':'char *' lvalue Var 0x210a102bca8 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x210a1026088 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x210a1026070 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x210a102c070 <col:34> '<builtin fn type>' Function 0x210a102b0a0 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x210a1026050 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:66:17> 'va_list':'char *' lvalue Var 0x210a102bca8 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x210a10260e8 <line:67:5, col:12>
|     `-ImplicitCastExpr 0x210a10260d0 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x210a10260b0 <col:12> 'int' lvalue Var 0x210a102bd40 '_Ret' 'int'
|-FunctionDecl 0x210a1026488 <line:73:1, line:76:1> line:73:31 _vswprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' static inline
| |-ParmVarDecl 0x210a1026148 <col:67, col:77> col:77 used _String 'wchar_t *'
| |-ParmVarDecl 0x210a10261c0 <col:86, col:93> col:93 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x210a1026238 <col:141, col:157> col:157 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x210a10262b0 <col:166, col:176> col:176 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x210a1026328 <col:187, col:195> col:195 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x210a1026710 <line:74:1, line:76:1>
|   `-ReturnStmt 0x210a1026700 <line:75:5, col:67>
|     `-CallExpr 0x210a1026640 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x210a1026628 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x210a1026568 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x210a1024f68 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x210a1026688 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x210a1026588 <col:27> 'wchar_t *' lvalue ParmVar 0x210a1026148 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x210a10266a0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x210a10265a8 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x210a10261c0 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x210a10266b8 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x210a10265c8 <col:44> 'const wchar_t *' lvalue ParmVar 0x210a1026238 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x210a10266d0 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|       | `-DeclRefExpr 0x210a10265e8 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x210a10262b0 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|       `-ImplicitCastExpr 0x210a10266e8 <col:64> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x210a1026608 <col:64> 'va_list':'char *' lvalue ParmVar 0x210a1026328 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x210a1026958 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:555:24, col:129> col:42 _wtempnam 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x210a1026738 <col:63, col:79> col:79 _Directory 'const wchar_t *'
| `-ParmVarDecl 0x210a10267b0 <col:102, col:118> col:118 _FilePrefix 'const wchar_t *'
|-FunctionDecl 0x210a1026ba8 <line:561:24, col:119> col:36 _vscwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x210a1026a30 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x210a1026aa8 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x210a1026e90 <line:562:24, col:159> col:36 _vscwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x210a1026c80 <col:90, col:106> col:106 _Format 'const wchar_t *'
| |-ParmVarDecl 0x210a1026cf8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x210a1026d70 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x210a102c228 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:563:158> col:71 fwscanf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x210a102c0b0 <col:87, col:94> col:94 _File 'FILE *'
| |-ParmVarDecl 0x210a102c128 <col:130, col:146> col:146 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x210a102c2d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x210a102c6e8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:564:206> col:78 _fwscanf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x210a102c4d8 <col:97, col:104> col:104 _File 'FILE *'
| |-ParmVarDecl 0x210a102c550 <col:150, col:166> col:166 _Format 'const wchar_t *'
| |-ParmVarDecl 0x210a102c5c8 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x210a102c7a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x210a102ca58 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:568:28, col:131> col:40 fwscanf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x210a102c8e0 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x210a102c958 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x210a102cd40 <line:570:28, col:172> col:40 _fwscanf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x210a102cb30 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x210a102cba8 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x210a102cc20 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x210a1030160 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:571:165> col:71 swscanf 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x210a102cee0 <col:86, col:102> col:102 _Src 'const wchar_t *'
| |-ParmVarDecl 0x210a102cf58 <col:137, col:153> col:153 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x210a1030210 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using swscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x210a10306e8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:572:213> col:78 _swscanf_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x210a1030410 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x210a1030488 <col:157, col:173> col:173 _Format 'const wchar_t *'
| |-ParmVarDecl 0x210a1030500 <col:191, col:201> col:201 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x210a10307a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x210a1030a58 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:574:40, col:149> col:52 swscanf_s 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x210a10308e0 <col:69, col:84> col:84 _Src 'const wchar_t *'
| `-ParmVarDecl 0x210a1030958 <col:121, col:137> col:137 _Format 'const wchar_t *'
|-FunctionDecl 0x210a1030d40 <line:576:40, col:191> col:52 _swscanf_s_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x210a1030b30 <col:72, col:88> col:88 _Src 'const wchar_t *'
| |-ParmVarDecl 0x210a1030ba8 <col:135, col:151> col:151 _Format 'const wchar_t *'
| `-ParmVarDecl 0x210a1030c20 <col:169, col:179> col:179 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x210a10311e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:577:219> col:77 _snwscanf 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x210a1030ee0 <col:117, col:133> col:133 _Src 'const wchar_t *'
| |-ParmVarDecl 0x210a1030f58 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x210a1030fd0 <col:191, col:207> col:207 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x210a10312a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x210a1031820 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:578:261> col:79 _snwscanf_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x210a10314a0 <col:121, col:137> col:137 _Src 'const wchar_t *'
| |-ParmVarDecl 0x210a1031518 <col:148, col:155> col:155 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x210a1031590 <col:205, col:221> col:221 _Format 'const wchar_t *'
| |-ParmVarDecl 0x210a1031608 <col:239, col:249> col:249 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x210a10318e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x210a1031c30 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:579:40, col:198> col:52 _snwscanf_s 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x210a1031a20 <col:94, col:110> col:110 _Src 'const wchar_t *'
| |-ParmVarDecl 0x210a1031a98 <col:121, col:128> col:128 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x210a1031b10 <col:170, col:186> col:186 _Format 'const wchar_t *'
|-FunctionDecl 0x210a1031fb8 <line:580:40, col:238> col:52 _snwscanf_s_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x210a1031d10 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x210a1031d88 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x210a1031e00 <col:182, col:198> col:198 _Format 'const wchar_t *'
| `-ParmVarDecl 0x210a1031e78 <col:216, col:226> col:226 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x210a10352f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:581:134> col:70 wscanf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| |-ParmVarDecl 0x210a1035210 <col:106, col:122> col:122 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x210a1035398 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x210a1035710 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:582:182> col:77 _wscanf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x210a1035598 <col:126, col:142> col:142 _Format 'const wchar_t *'
| |-ParmVarDecl 0x210a1035610 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x210a10357c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x210a10359e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:584:40, col:120> col:52 wscanf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x210a1035900 <col:92, col:108> col:108 _Format 'const wchar_t *'
|-FunctionDecl 0x210a1035c28 <line:586:40, col:161> col:52 _wscanf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x210a1035ab0 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x210a1035b28 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x210a1035f28 <line:589:24, col:99> col:39 _wfdopen 'FILE *(int, const wchar_t *) __attribute__((cdecl))':'FILE *(int, const wchar_t *)'
| |-ParmVarDecl 0x210a1035d08 <col:53, col:57> col:57 _FileHandle 'int'
| `-ParmVarDecl 0x210a1035d80 <col:78, col:94> col:94 _Mode 'const wchar_t *'
|-FunctionDecl 0x210a10322b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:590:144> col:74 _wfopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x210a10360c0 <col:89, col:105> col:105 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x210a1032110 <col:123, col:139> col:139 _Mode 'const wchar_t *'
| `-DeprecatedAttr 0x210a1032368 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x210a1032770 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:591:28, col:157> col:44 _wfopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x210a10324b0 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x210a1032528 <col:102, col:118> col:118 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x210a10325a0 <col:136, col:152> col:152 _Mode 'const wchar_t *'
|-FunctionDecl 0x210a1032bd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:592:173> col:76 _wfreopen 'FILE *(const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x210a1032910 <col:93, col:109> col:109 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x210a1032988 <col:127, col:143> col:143 _Mode 'const wchar_t *'
| |-ParmVarDecl 0x210a1032a00 <col:158, col:165> col:165 _OldFile 'FILE *'
| `-DeprecatedAttr 0x210a1032c88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfreopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x210a102f128 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:593:28, col:184> col:44 _wfreopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x210a1032dd0 <col:82, col:90> col:90 _File 'FILE **'
| |-ParmVarDecl 0x210a1032e48 <col:104, col:120> col:120 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x210a1032ec0 <col:138, col:154> col:154 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x210a1032f38 <col:169, col:176> col:176 _OldFile 'FILE *'
|-FunctionDecl 0x210a102f380 <line:597:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x210a102f210 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x210a102f5c0 <line:600:24, col:107> col:39 _wpopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x210a102f450 <col:54, col:69> col:69 _Command 'const wchar_t *'
| `-ParmVarDecl 0x210a102f4c8 <col:86, col:102> col:102 _Mode 'const wchar_t *'
|-FunctionDecl 0x210a102f778 <line:602:9, col:62> col:21 _wremove 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x210a102f698 <col:37, col:53> col:53 _Filename 'const wchar_t *'
|-FunctionDecl 0x210a102fa68 <line:603:28, col:127> col:44 _wtmpnam_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x210a102f848 <col:84, col:94> col:94 _DstBuf 'wchar_t *'
| `-ParmVarDecl 0x210a102f8c0 <col:108, col:115> col:115 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x210a102fcd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:605:82 _wtmpnam 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x210a102fc00 <col:118, col:127> col:127 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x210a102fd80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wtmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x210a102ff98 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:607:28, col:78> col:43 _fgetwc_nolock 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x210a102fec0 <col:66, col:73> col:73 _File 'FILE *'
|-FunctionDecl 0x210a1033218 <line:608:28, col:96> col:43 _fputwc_nolock 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x210a1030068 <col:63, col:71> col:71 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x210a1033120 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x210a1033460 <line:609:28, col:96> col:43 _ungetwc_nolock 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x210a10332f0 <col:64, col:71> col:71 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x210a1033368 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x210a1033610 <line:670:9, col:53> col:22 _lock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x210a1033538 <col:41, col:48> col:48 _File 'FILE *'
|-FunctionDecl 0x210a10337b8 <line:671:9, col:55> col:22 _unlock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x210a10336e0 <col:43, col:50> col:50 _File 'FILE *'
|-FunctionDecl 0x210a1033968 <line:673:28, col:75> col:40 _fclose_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x210a1033888 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x210a1033b18 <line:674:28, col:79> col:40 _fflush_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x210a1033a38 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x210a1033e90 <line:675:28, col:179> col:43 _fread_nolock 'size_t (void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x210a1033bf0 <col:97, col:104> col:104 _DstBuf 'void *'
| |-ParmVarDecl 0x210a1033c68 <col:118, col:125> col:125 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x210a1033ce0 <col:144, col:151> col:151 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x210a1033d58 <col:167, col:174> col:174 _File 'FILE *'
|-FunctionDecl 0x210a1039350 <line:676:28, col:203> col:43 _fread_nolock_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x210a1033f80 <col:99, col:106> col:106 _DstBuf 'void *'
| |-ParmVarDecl 0x210a1033ff8 <col:120, col:127> col:127 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x210a1034070 <col:142, col:149> col:149 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x210a1039180 <col:168, col:175> col:175 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x210a10391f8 <col:191, col:198> col:198 _File 'FILE *'
|-FunctionDecl 0x210a1039660 <line:677:28, col:111> col:40 _fseek_nolock 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x210a1039440 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x210a10394c0 <col:81, col:86> col:86 _Offset 'long'
| `-ParmVarDecl 0x210a1039540 <col:100, col:104> col:104 _Origin 'int'
|-FunctionDecl 0x210a1039820 <line:678:24, col:71> col:37 _ftell_nolock 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x210a1039740 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x210a1039b10 <line:679:28, col:117> col:40 _fseeki64_nolock 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x210a10398f0 <col:65, col:72> col:72 _File 'FILE *'
| |-ParmVarDecl 0x210a1039970 <col:84, col:92> col:92 _Offset 'long long'
| `-ParmVarDecl 0x210a10399f0 <col:106, col:110> col:110 _Origin 'int'
|-FunctionDecl 0x210a1039cd0 <line:680:24, col:77> col:40 _ftelli64_nolock 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x210a1039bf0 <col:65, col:72> col:72 _File 'FILE *'
|-FunctionDecl 0x210a103a048 <line:681:28, col:170> col:43 _fwrite_nolock 'size_t (const void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (const void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x210a1039da8 <col:89, col:102> col:102 _DstBuf 'const void *'
| |-ParmVarDecl 0x210a1039e20 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x210a1039e98 <col:135, col:142> col:142 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x210a1039f10 <col:158, col:165> col:165 _File 'FILE *'
|-FunctionDecl 0x210a103a308 <line:682:28, col:89> col:40 _ungetc_nolock 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x210a103a190 <col:60, col:64> col:64 _Ch 'int'
| `-ParmVarDecl 0x210a103a208 <col:77, col:84> col:84 _File 'FILE *'
|-FunctionDecl 0x210a103a640 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:709:136> col:57 tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x210a103a4c0 <col:76, col:89> col:89 _Directory 'const char *'
| |-ParmVarDecl 0x210a103a540 <col:112, col:125> col:125 _FilePrefix 'const char *'
| `-DeprecatedAttr 0x210a103a6f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tempnam. See online help for details." ""
|-FunctionDecl 0x210a103a9a8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:715:89> col:75 fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x210a103aa48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcloseall. See online help for details." ""
|-FunctionDecl 0x210a103ad88 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:716:127> col:71 fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x210a103ac10 <col:83, col:87> col:87 _FileHandle 'int'
| |-ParmVarDecl 0x210a103ac90 <col:107, col:120> col:120 _Format 'const char *'
| `-DeprecatedAttr 0x210a103ae38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fdopen. See online help for details." ""
|-FunctionDecl 0x210a1036150 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:717:87> col:74 fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x210a10361f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fgetchar. See online help for details." ""
|-FunctionDecl 0x210a1036490 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:718:92> col:68 fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x210a10363b0 <col:80, col:87> col:87 _File 'FILE *'
| `-DeprecatedAttr 0x210a1036538 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fileno. See online help for details." ""
|-FunctionDecl 0x210a10367b8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:719:87> col:74 flushall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x210a1036858 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _flushall. See online help for details." ""
|-FunctionDecl 0x210a1036b00 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:720:95> col:74 fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| |-ParmVarDecl 0x210a1036a20 <col:88, col:92> col:92 _Ch 'int'
| `-DeprecatedAttr 0x210a1036ba8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fputchar. See online help for details." ""
|-FunctionDecl 0x210a1036e88 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:721:91> col:66 getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x210a1036da8 <col:79, col:86> col:86 _File 'FILE *'
| `-DeprecatedAttr 0x210a1036f30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _getw. See online help for details." ""
|-FunctionDecl 0x210a10382e8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:722:109> col:70 putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x210a1038170 <col:80, col:84> col:84 _Ch 'int'
| |-ParmVarDecl 0x210a10381e8 <col:97, col:104> col:104 _File 'FILE *'
| `-DeprecatedAttr 0x210a1038398 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putw. See online help for details." ""
|-FunctionDecl 0x210a1038658 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:723:77> col:67 rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x210a10386f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _rmtmp. See online help for details." ""
|-RecordDecl 0x210a1038808 <.//openssl//file_jk/before\crypto\rsa/rsa_locl.h:12:1, line:46:1> line:12:8 invalid struct rsa_st definition
| |-FieldDecl 0x210a10388d8 <line:17:5, col:9> col:9 pad 'int'
| |-FieldDecl 0x210a1038948 <line:18:5, col:10> col:10 version 'long'
| |-FieldDecl 0x210a10389b8 <line:19:5, col:23> col:23 invalid meth 'const int *'
| |-FieldDecl 0x210a1038a28 <line:21:5, col:13> col:13 invalid engine 'int *'
| |-FieldDecl 0x210a1038a98 <line:22:5, col:13> col:13 invalid n 'int *'
| |-FieldDecl 0x210a1038b08 <line:23:5, col:13> col:13 invalid e 'int *'
| |-FieldDecl 0x210a1038b78 <line:24:5, col:13> col:13 invalid d 'int *'
| |-FieldDecl 0x210a1038be8 <line:25:5, col:13> col:13 invalid p 'int *'
| |-FieldDecl 0x210a1038c58 <line:26:5, col:13> col:13 invalid q 'int *'
| |-FieldDecl 0x210a1038cc8 <line:27:5, col:13> col:13 invalid dmp1 'int *'
| |-FieldDecl 0x210a1038d38 <line:28:5, col:13> col:13 invalid dmq1 'int *'
| |-FieldDecl 0x210a1038da8 <line:29:5, col:13> col:13 invalid iqmp 'int *'
| |-FieldDecl 0x210a1038e18 <line:31:5, col:20> col:20 invalid ex_data 'int'
| |-FieldDecl 0x210a1038e88 <line:32:5, col:9> col:9 references 'int'
| |-FieldDecl 0x210a1038ef8 <line:33:5, col:9> col:9 flags 'int'
| |-FieldDecl 0x210a1038f68 <line:35:5, col:18> col:18 invalid _method_mod_n 'int *'
| |-FieldDecl 0x210a1038fd8 <line:36:5, col:18> col:18 invalid _method_mod_p 'int *'
| |-FieldDecl 0x210a1039048 <line:37:5, col:18> col:18 invalid _method_mod_q 'int *'
| |-FieldDecl 0x210a10390b8 <line:42:5, col:11> col:11 bignum_data 'char *'
| |-FieldDecl 0x210a103d1c0 <line:43:5, col:18> col:18 invalid blinding 'int *'
| |-FieldDecl 0x210a103d230 <line:44:5, col:18> col:18 invalid mt_blinding 'int *'
| `-FieldDecl 0x210a103d2a0 <line:45:5, col:20> col:20 invalid lock 'int *'
|-RecordDecl 0x210a103d2f8 <line:48:1, line:91:1> line:48:8 struct rsa_meth_st definition
| |-FieldDecl 0x210a103d3c8 <line:49:5, col:11> col:11 name 'char *'
| |-FieldDecl 0x210a103d808 <line:50:5, line:51:65> line:50:11 rsa_pub_enc 'int (*)(int, const unsigned char *, unsigned char *, int *, int)'
| |-FieldDecl 0x210a103db40 <line:52:5, line:53:65> line:52:11 rsa_pub_dec 'int (*)(int, const unsigned char *, unsigned char *, int *, int)'
| |-FieldDecl 0x210a103de78 <line:54:5, line:55:66> line:54:11 rsa_priv_enc 'int (*)(int, const unsigned char *, unsigned char *, int *, int)'
| |-FieldDecl 0x210a103c1b0 <line:56:5, line:57:66> line:56:11 rsa_priv_dec 'int (*)(int, const unsigned char *, unsigned char *, int *, int)'
| |-FieldDecl 0x210a103c540 <line:59:5, col:75> col:11 rsa_mod_exp 'int (*)(int *, const int *, int *, int *)'
| |-FieldDecl 0x210a103c9f0 <line:61:5, line:62:72> line:61:11 bn_mod_exp 'int (*)(int *, const int *, const int *, const int *, int *, int *)'
| |-FieldDecl 0x210a103cbc8 <line:64:5, col:26> col:11 init 'int (*)(int *)'
| |-FieldDecl 0x210a103cce0 <line:66:5, col:28> col:11 finish 'int (*)(int *)'
| |-FieldDecl 0x210a103cd50 <line:68:5, col:9> col:9 flags 'int'
| |-FieldDecl 0x210a103cdc0 <line:70:5, col:11> col:11 app_data 'char *'
| |-FieldDecl 0x210a1037250 <line:77:5, line:80:36> line:77:11 rsa_sign 'int (*)(int, const unsigned char *, unsigned int, unsigned char *, unsigned int *, const int *)'
| |-FieldDecl 0x210a1037700 <line:81:5, line:83:59> line:81:11 rsa_verify 'int (*)(int, const unsigned char *, unsigned int, const unsigned char *, unsigned int, const int *)'
| `-FieldDecl 0x210a1037a90 <line:90:5, col:67> col:11 rsa_keygen 'int (*)(int *, int, int *, int *)'
|-FunctionDecl 0x210a1038080 <line:93:1, line:96:50> line:93:12 invalid int_rsa_verify 'int (int, const unsigned char *, unsigned int, unsigned char *, size_t *, const unsigned char *, size_t, int *)' extern
| |-ParmVarDecl 0x210a1037b00 <col:27, col:31> col:31 dtype 'int'
| |-ParmVarDecl 0x210a1037b80 <col:38, col:59> col:59 m 'const unsigned char *'
| |-ParmVarDecl 0x210a1037c00 <line:94:27, col:40> col:40 m_len 'unsigned int'
| |-ParmVarDecl 0x210a1037c80 <col:47, col:62> col:62 rm 'unsigned char *'
| |-ParmVarDecl 0x210a1037d58 <line:95:27, col:35> col:35 prm_len 'size_t *'
| |-ParmVarDecl 0x210a1037dd8 <col:44, col:65> col:65 sigbuf 'const unsigned char *'
| |-ParmVarDecl 0x210a1037e50 <line:96:27, col:34> col:34 siglen 'size_t':'unsigned long long'
| `-ParmVarDecl 0x210a1037ed0 <col:42, col:47> col:47 invalid rsa 'int *'
|-FunctionDecl 0x210a1045100 <.//openssl//file_jk/before\crypto\rsa\rsa_sign.c:31:1, line:67:1> line:31:12 used encode_pkcs1 'int (unsigned char **, int *, int, const unsigned char *, unsigned int)' static
| |-ParmVarDecl 0x210a1044d78 <col:25, col:41> col:41 used out 'unsigned char **'
| |-ParmVarDecl 0x210a1044df8 <col:46, col:51> col:51 used out_len 'int *'
| |-ParmVarDecl 0x210a1044e78 <col:60, col:64> col:64 used type 'int'
| |-ParmVarDecl 0x210a1044ef8 <line:32:25, col:46> col:46 used m 'const unsigned char *'
| |-ParmVarDecl 0x210a1044f78 <col:49, col:62> col:62 used m_len 'unsigned int'
| `-CompoundStmt 0x210a104ada0 <line:33:1, line:67:1>
|   |-DeclStmt 0x210a10452e8 <line:39:5, col:12>
|   | `-VarDecl 0x210a1045280 <col:5, col:9> col:9 used len 'int'
|   |-IfStmt 0x210a10456e0 <line:43:5, line:46:5>
|   | |-OpaqueValueExpr 0x210a10456c8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x210a10456b0 <line:43:39, line:46:5>
|   |   `-ReturnStmt 0x210a10456a0 <line:45:9, col:16>
|   |     `-IntegerLiteral 0x210a1045678 <col:16> 'int' 0
|   |-IfStmt 0x210a10458b8 <line:47:5, line:51:5>
|   | |-OpaqueValueExpr 0x210a10458a0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x210a1045888 <line:47:48, line:51:5>
|   |   `-ReturnStmt 0x210a1045878 <line:50:9, col:16>
|   |     `-IntegerLiteral 0x210a1045850 <col:16> 'int' 0
|   |-IfStmt 0x210a1045bf0 <line:61:5, line:62:16>
|   | |-BinaryOperator 0x210a1045b98 <line:61:9, col:15> 'int' '<'
|   | | |-ImplicitCastExpr 0x210a1045b80 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x210a1045b38 <col:9> 'int' lvalue Var 0x210a1045280 'len' 'int'
|   | | `-IntegerLiteral 0x210a1045b58 <col:15> 'int' 0
|   | `-ReturnStmt 0x210a1045be0 <line:62:9, col:16>
|   |   `-IntegerLiteral 0x210a1045bb8 <col:16> 'int' 0
|   |-BinaryOperator 0x210a1045ce0 <line:65:5, col:16> 'int' '='
|   | |-UnaryOperator 0x210a1045c90 <col:5, col:6> 'int' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x210a1045c78 <col:6> 'int *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x210a1045c58 <col:6> 'int *' lvalue ParmVar 0x210a1044df8 'out_len' 'int *'
|   | `-ImplicitCastExpr 0x210a1045cc8 <col:16> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x210a1045ca8 <col:16> 'int' lvalue Var 0x210a1045280 'len' 'int'
|   `-ReturnStmt 0x210a104ad90 <line:66:5, col:12>
|     `-IntegerLiteral 0x210a1045d00 <col:12> 'int' 1
|-FunctionDecl 0x210a104b190 <line:69:1, line:114:1> line:69:5 invalid RSA_sign 'int (int, const unsigned char *, unsigned int, unsigned char *, unsigned int *, int *)'
| |-ParmVarDecl 0x210a104adf8 <col:14, col:18> col:18 used type 'int'
| |-ParmVarDecl 0x210a104ae78 <col:24, col:45> col:45 used m 'const unsigned char *'
| |-ParmVarDecl 0x210a104aef8 <col:48, col:61> col:61 used m_len 'unsigned int'
| |-ParmVarDecl 0x210a104af78 <line:70:14, col:29> col:29 used sigret 'unsigned char *'
| |-ParmVarDecl 0x210a104aff8 <col:37, col:51> col:51 used siglen 'unsigned int *'
| |-ParmVarDecl 0x210a104b078 <col:59, col:64> col:64 invalid rsa 'int *'
| `-CompoundStmt 0x210a1044560 <line:71:1, line:114:1>
|   |-DeclStmt 0x210a104b468 <line:72:5, col:46>
|   | |-VarDecl 0x210a104b290 <col:5, col:9> col:9 used encrypt_len 'int'
|   | |-VarDecl 0x210a104b310 <col:5, col:36> col:22 used encoded_len 'int' cinit
|   | | `-IntegerLiteral 0x210a104b378 <col:36> 'int' 0
|   | `-VarDecl 0x210a104b3b8 <col:5, col:45> col:39 used ret 'int' cinit
|   |   `-IntegerLiteral 0x210a104b420 <col:45> 'int' 0
|   |-DeclStmt 0x210a104b5a0 <line:73:5, col:31>
|   | `-VarDecl 0x210a104b498 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/before\crypto\rsa\rsa_sign.c:73:20 used tmps 'unsigned char *' cinit
|   |   `-ImplicitCastExpr 0x210a104b588 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <NullToPointer>
|   |     `-ParenExpr 0x210a104b568 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x210a104b540 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x210a104b500 <col:26> 'int' 0
|   |-DeclStmt 0x210a104b6d8 <.//openssl//file_jk/before\crypto\rsa\rsa_sign.c:74:5, col:40>
|   | `-VarDecl 0x210a104b5d0 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/before\crypto\rsa\rsa_sign.c:74:26 used encoded 'const unsigned char *' cinit
|   |   `-ImplicitCastExpr 0x210a104b6c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const unsigned char *' <NullToPointer>
|   |     `-ParenExpr 0x210a104b6a0 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x210a104b678 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x210a104b638 <col:26> 'int' 0
|   |-IfStmt 0x210a104b830 <.//openssl//file_jk/before\crypto\rsa\rsa_sign.c:76:5, line:78:5>
|   | |-OpaqueValueExpr 0x210a104b818 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x210a104b808 <line:76:30, line:78:5>
|   |-IfStmt 0x210a1043d90 <line:81:5, line:97:5> has_else
|   | |-OpaqueValueExpr 0x210a1043d78 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x210a104ba98 <line:81:31, line:93:5>
|   | | |-IfStmt 0x210a104b970 <line:87:9, line:90:9>
|   | | | |-BinaryOperator 0x210a104b8e0 <line:87:13, line:20:25> 'int' '!='
|   | | | | |-ImplicitCastExpr 0x210a104b8b0 <line:87:13> 'unsigned int' <LValueToRValue>
|   | | | | | `-DeclRefExpr 0x210a104b868 <col:13> 'unsigned int' lvalue ParmVar 0x210a104aef8 'm_len' 'unsigned int'
|   | | | | `-ImplicitCastExpr 0x210a104b8c8 <line:20:25> 'unsigned int' <IntegralCast>
|   | | | |   `-IntegerLiteral 0x210a104b888 <col:25> 'int' 36
|   | | | `-CompoundStmt 0x210a104b958 <line:87:38, line:90:9>
|   | | |   `-ReturnStmt 0x210a104b948 <line:89:13, col:20>
|   | | |     `-IntegerLiteral 0x210a104b920 <col:20> 'int' 0
|   | | |-BinaryOperator 0x210a104b9e8 <line:91:9, line:20:25> 'int' '='
|   | | | |-DeclRefExpr 0x210a104b988 <line:91:9> 'int' lvalue Var 0x210a104b310 'encoded_len' 'int'
|   | | | `-IntegerLiteral 0x210a104b9c0 <line:20:25> 'int' 36
|   | | `-BinaryOperator 0x210a104ba78 <line:92:9, col:19> 'const unsigned char *' '='
|   | |   |-DeclRefExpr 0x210a104ba08 <col:9> 'const unsigned char *' lvalue Var 0x210a104b5d0 'encoded' 'const unsigned char *'
|   | |   `-ImplicitCastExpr 0x210a104ba60 <col:19> 'const unsigned char *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x210a104ba40 <col:19> 'const unsigned char *' lvalue ParmVar 0x210a104ae78 'm' 'const unsigned char *'
|   | `-CompoundStmt 0x210a1043d58 <line:93:12, line:97:5>
|   |   |-IfStmt 0x210a104bd20 <line:94:9, line:95:18>
|   |   | |-UnaryOperator 0x210a104bca0 <line:94:13, col:62> 'int' prefix '!' cannot overflow
|   |   | | `-CallExpr 0x210a104bc10 <col:14, col:62> 'int'
|   |   | |   |-ImplicitCastExpr 0x210a104bbf8 <col:14> 'int (*)(unsigned char **, int *, int, const unsigned char *, unsigned int)' <FunctionToPointerDecay>
|   |   | |   | `-DeclRefExpr 0x210a104bac0 <col:14> 'int (unsigned char **, int *, int, const unsigned char *, unsigned int)' Function 0x210a1045100 'encode_pkcs1' 'int (unsigned char **, int *, int, const unsigned char *, unsigned int)'
|   |   | |   |-UnaryOperator 0x210a104bb18 <col:27, col:28> 'unsigned char **' prefix '&' cannot overflow
|   |   | |   | `-DeclRefExpr 0x210a104bae0 <col:28> 'unsigned char *' lvalue Var 0x210a104b498 'tmps' 'unsigned char *'
|   |   | |   |-UnaryOperator 0x210a104bb50 <col:34, col:35> 'int *' prefix '&' cannot overflow
|   |   | |   | `-DeclRefExpr 0x210a104bb30 <col:35> 'int' lvalue Var 0x210a104b310 'encoded_len' 'int'
|   |   | |   |-ImplicitCastExpr 0x210a104bc58 <col:48> 'int' <LValueToRValue>
|   |   | |   | `-DeclRefExpr 0x210a104bb68 <col:48> 'int' lvalue ParmVar 0x210a104adf8 'type' 'int'
|   |   | |   |-ImplicitCastExpr 0x210a104bc70 <col:54> 'const unsigned char *' <LValueToRValue>
|   |   | |   | `-DeclRefExpr 0x210a104bb88 <col:54> 'const unsigned char *' lvalue ParmVar 0x210a104ae78 'm' 'const unsigned char *'
|   |   | |   `-ImplicitCastExpr 0x210a104bc88 <col:57> 'unsigned int' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x210a104bba8 <col:57> 'unsigned int' lvalue ParmVar 0x210a104aef8 'm_len' 'unsigned int'
|   |   | `-GotoStmt 0x210a104bd08 <line:95:13, col:18> 'err' 0x210a104bcb8
|   |   `-BinaryOperator 0x210a1043d38 <line:96:9, col:19> 'const unsigned char *' '='
|   |     |-DeclRefExpr 0x210a104bd38 <col:9> 'const unsigned char *' lvalue Var 0x210a104b5d0 'encoded' 'const unsigned char *'
|   |     `-ImplicitCastExpr 0x210a1043d20 <col:19> 'const unsigned char *' <NoOp>
|   |       `-ImplicitCastExpr 0x210a104bd78 <col:19> 'unsigned char *' <LValueToRValue>
|   |         `-DeclRefExpr 0x210a104bd58 <col:19> 'unsigned char *' lvalue Var 0x210a104b498 'tmps' 'unsigned char *'
|   |-IfStmt 0x210a1043f50 <line:99:5, line:102:5>
|   | |-OpaqueValueExpr 0x210a1043f38 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x210a1043f20 <line:99:63, line:102:5>
|   |   `-GotoStmt 0x210a1043f08 <line:101:9, col:14> 'err' 0x210a104bcb8
|   |-IfStmt 0x210a10441a8 <line:105:5, line:106:14>
|   | |-BinaryOperator 0x210a1044170 <line:105:9, col:24> 'int' '<='
|   | | |-ImplicitCastExpr 0x210a1044158 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x210a1044110 <col:9> 'int' lvalue Var 0x210a104b290 'encrypt_len' 'int'
|   | | `-IntegerLiteral 0x210a1044130 <col:24> 'int' 0
|   | `-GotoStmt 0x210a1044190 <line:106:9, col:14> 'err' 0x210a104bcb8
|   |-BinaryOperator 0x210a1044260 <line:108:5, col:15> 'unsigned int' '='
|   | |-UnaryOperator 0x210a10441f8 <col:5, col:6> 'unsigned int' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x210a10441e0 <col:6> 'unsigned int *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x210a10441c0 <col:6> 'unsigned int *' lvalue ParmVar 0x210a104aff8 'siglen' 'unsigned int *'
|   | `-ImplicitCastExpr 0x210a1044248 <col:15> 'unsigned int' <IntegralCast>
|   |   `-ImplicitCastExpr 0x210a1044230 <col:15> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x210a1044210 <col:15> 'int' lvalue Var 0x210a104b290 'encrypt_len' 'int'
|   |-BinaryOperator 0x210a10442e0 <line:109:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x210a1044280 <col:5> 'int' lvalue Var 0x210a104b3b8 'ret' 'int'
|   | `-IntegerLiteral 0x210a10442b8 <col:11> 'int' 1
|   |-LabelStmt 0x210a1044500 <line:111:1, line:112:49> 'err'
|   | `-CallExpr 0x210a10444b8 <col:5, col:49> 'int'
|   |   |-ImplicitCastExpr 0x210a10444a0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x210a10443f0 <col:5> 'int ()' Function 0x210a1044328 'OPENSSL_clear_free' 'int ()'
|   |   |-ImplicitCastExpr 0x210a10444e8 <col:24> 'unsigned char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x210a1044410 <col:24> 'unsigned char *' lvalue Var 0x210a104b498 'tmps' 'unsigned char *'
|   |   `-CStyleCastExpr 0x210a1044478 <col:30, col:38> 'size_t':'unsigned long long' <IntegralCast>
|   |     `-ImplicitCastExpr 0x210a1044460 <col:38> 'int' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0x210a1044430 <col:38> 'int' lvalue Var 0x210a104b310 'encoded_len' 'int'
|   `-ReturnStmt 0x210a1044550 <line:113:5, col:12>
|     `-ImplicitCastExpr 0x210a1044538 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x210a1044518 <col:12> 'int' lvalue Var 0x210a104b3b8 'ret' 'int'
|-FunctionDecl 0x210a1044a20 <line:124:1, line:237:1> line:124:5 invalid int_rsa_verify 'int (int, const unsigned char *, unsigned int, unsigned char *, size_t *, const unsigned char *, size_t, int *)'
| |-ParmVarDecl 0x210a10445e0 <col:20, col:24> col:24 used type 'int'
| |-ParmVarDecl 0x210a1044660 <col:30, col:51> col:51 used m 'const unsigned char *'
| |-ParmVarDecl 0x210a10446e0 <col:54, col:67> col:67 used m_len 'unsigned int'
| |-ParmVarDecl 0x210a1044760 <line:125:20, col:35> col:35 used rm 'unsigned char *'
| |-ParmVarDecl 0x210a10447d8 <col:39, col:47> col:47 used prm_len 'size_t *'
| |-ParmVarDecl 0x210a1044858 <line:126:20, col:41> col:41 used sigbuf 'const unsigned char *'
| |-ParmVarDecl 0x210a10448d0 <col:49, col:56> col:56 used siglen 'size_t':'unsigned long long'
| |-ParmVarDecl 0x210a1044950 <col:64, col:69> col:69 invalid rsa 'int *'
| `-CompoundStmt 0x210a10472e8 <line:127:1, line:237:1>
|   |-DeclStmt 0x210a1044d08 <line:128:5, col:46>
|   | |-VarDecl 0x210a1044b30 <col:5, col:9> col:9 used decrypt_len 'int'
|   | |-VarDecl 0x210a1044bb0 <col:5, col:28> col:22 used ret 'int' cinit
|   | | `-IntegerLiteral 0x210a1044c18 <col:28> 'int' 0
|   | `-VarDecl 0x210a1044c58 <col:5, col:45> col:31 used encoded_len 'int' cinit
|   |   `-IntegerLiteral 0x210a1044cc0 <col:45> 'int' 0
|   |-DeclStmt 0x210a1045f98 <line:129:5, col:55>
|   | |-VarDecl 0x210a1045d58 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/before\crypto\rsa\rsa_sign.c:129:20 used decrypt_buf 'unsigned char *' cinit
|   | | `-ImplicitCastExpr 0x210a1045e48 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <NullToPointer>
|   | |   `-ParenExpr 0x210a1045e28 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x210a1045e00 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x210a1045dc0 <col:26> 'int' 0
|   | `-VarDecl 0x210a1045e78 <.//openssl//file_jk/before\crypto\rsa\rsa_sign.c:129:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/before\crypto\rsa\rsa_sign.c:129:41 used encoded 'unsigned char *' cinit
|   |   `-ImplicitCastExpr 0x210a1045f68 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <NullToPointer>
|   |     `-ParenExpr 0x210a1045f48 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x210a1045f20 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x210a1045ee0 <col:26> 'int' 0
|   |-IfStmt 0x210a1046090 <.//openssl//file_jk/before\crypto\rsa\rsa_sign.c:131:5, line:134:5>
|   | |-OpaqueValueExpr 0x210a1046078 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x210a1046060 <line:131:42, line:134:5>
|   |   `-ReturnStmt 0x210a1046050 <line:133:9, col:16>
|   |     `-IntegerLiteral 0x210a1046028 <col:16> 'int' 0
|   |-BinaryOperator 0x210a1046280 <line:137:5, col:40> 'unsigned char *' '='
|   | |-DeclRefExpr 0x210a10460a8 <col:5> 'unsigned char *' lvalue Var 0x210a1045d58 'decrypt_buf' 'unsigned char *'
|   | `-ImplicitCastExpr 0x210a1046268 <col:19, col:40> 'unsigned char *' <IntegralToPointer>
|   |   `-CallExpr 0x210a1046228 <col:19, col:40> 'int'
|   |     |-ImplicitCastExpr 0x210a1046210 <col:19> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x210a10461d0 <col:19> 'int ()' Function 0x210a1046108 'OPENSSL_malloc' 'int ()'
|   |     `-ImplicitCastExpr 0x210a1046250 <col:34> 'size_t':'unsigned long long' <LValueToRValue>
|   |       `-DeclRefExpr 0x210a10461f0 <col:34> 'size_t':'unsigned long long' lvalue ParmVar 0x210a10448d0 'siglen' 'size_t':'unsigned long long'
|   |-IfStmt 0x210a1046438 <line:138:5, line:141:5>
|   | |-BinaryOperator 0x210a1046378 <line:138:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x210a1046348 <.//openssl//file_jk/before\crypto\rsa\rsa_sign.c:138:9> 'unsigned char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x210a10462a0 <col:9> 'unsigned char *' lvalue Var 0x210a1045d58 'decrypt_buf' 'unsigned char *'
|   | | `-ImplicitCastExpr 0x210a1046360 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <BitCast>
|   | |   `-ParenExpr 0x210a1046328 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x210a1046300 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x210a10462c0 <col:26> 'int' 0
|   | `-CompoundStmt 0x210a1046420 <.//openssl//file_jk/before\crypto\rsa\rsa_sign.c:138:30, line:141:5>
|   |   `-GotoStmt 0x210a1046408 <line:140:9, col:14> 'err' 0x210a10463b8
|   |-IfStmt 0x210a1046700 <line:145:5, line:146:14>
|   | |-BinaryOperator 0x210a10466c8 <line:145:9, col:24> 'int' '<='
|   | | |-ImplicitCastExpr 0x210a10466b0 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x210a1046668 <col:9> 'int' lvalue Var 0x210a1044b30 'decrypt_len' 'int'
|   | | `-IntegerLiteral 0x210a1046688 <col:24> 'int' 0
|   | `-GotoStmt 0x210a10466e8 <line:146:9, col:14> 'err' 0x210a10463b8
|   |-IfStmt 0x210a1046ff8 <line:148:5, line:229:5> has_else
|   | |-OpaqueValueExpr 0x210a1046fe0 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x210a1049478 <line:148:31, line:173:5>
|   | | |-IfStmt 0x210a1046820 <line:154:9, line:157:9>
|   | | | |-BinaryOperator 0x210a10467b0 <line:154:13, line:20:25> 'int' '!='
|   | | | | |-ImplicitCastExpr 0x210a1046798 <line:154:13> 'int' <LValueToRValue>
|   | | | | | `-DeclRefExpr 0x210a1046750 <col:13> 'int' lvalue Var 0x210a1044b30 'decrypt_len' 'int'
|   | | | | `-IntegerLiteral 0x210a1046770 <line:20:25> 'int' 36
|   | | | `-CompoundStmt 0x210a1046808 <line:154:44, line:157:9>
|   | | |   `-GotoStmt 0x210a10467f0 <line:156:13, col:18> 'err' 0x210a10463b8
|   | | `-IfStmt 0x210a1049450 <line:159:9, line:172:9> has_else
|   | |   |-BinaryOperator 0x210a1046928 <line:159:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   | |   | |-ImplicitCastExpr 0x210a10468f8 <.//openssl//file_jk/before\crypto\rsa\rsa_sign.c:159:13> 'unsigned char *' <LValueToRValue>
|   | |   | | `-DeclRefExpr 0x210a1046838 <col:13> 'unsigned char *' lvalue ParmVar 0x210a1044760 'rm' 'unsigned char *'
|   | |   | `-ImplicitCastExpr 0x210a1046910 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <BitCast>
|   | |   |   `-ParenExpr 0x210a10468d8 <col:17, col:27> 'void *'
|   | |   |     `-CStyleCastExpr 0x210a10468b0 <col:18, col:26> 'void *' <NullToPointer>
|   | |   |       `-IntegerLiteral 0x210a1046870 <col:26> 'int' 0
|   | |   |-CompoundStmt 0x210a1048e38 <.//openssl//file_jk/before\crypto\rsa\rsa_sign.c:159:25, line:162:9>
|   | |   | |-CallExpr 0x210a1046c90 <line:160:13, col:51> 'void *'
|   | |   | | |-ImplicitCastExpr 0x210a1046c78 <col:13> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   | |   | | | `-DeclRefExpr 0x210a1046b80 <col:13> 'void *(void *, const void *, unsigned long long)' Function 0x210a1046990 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   | |   | | |-ImplicitCastExpr 0x210a1046ce0 <col:20> 'void *' <BitCast>
|   | |   | | | `-ImplicitCastExpr 0x210a1046cc8 <col:20> 'unsigned char *' <LValueToRValue>
|   | |   | | |   `-DeclRefExpr 0x210a1046bb8 <col:20> 'unsigned char *' lvalue ParmVar 0x210a1044760 'rm' 'unsigned char *'
|   | |   | | |-ImplicitCastExpr 0x210a1046d10 <col:24> 'const void *' <BitCast>
|   | |   | | | `-ImplicitCastExpr 0x210a1046cf8 <col:24> 'unsigned char *' <LValueToRValue>
|   | |   | | |   `-DeclRefExpr 0x210a1046bd8 <col:24> 'unsigned char *' lvalue Var 0x210a1045d58 'decrypt_buf' 'unsigned char *'
|   | |   | | `-ImplicitCastExpr 0x210a1046d28 <line:20:25> 'unsigned long long' <IntegralCast>
|   | |   | |   `-IntegerLiteral 0x210a1046bf8 <col:25> 'int' 36
|   | |   | `-BinaryOperator 0x210a1048e18 <line:161:13, line:20:25> 'size_t':'unsigned long long' '='
|   | |   |   |-UnaryOperator 0x210a1048dc0 <line:161:13, col:14> 'size_t':'unsigned long long' lvalue prefix '*' cannot overflow
|   | |   |   | `-ImplicitCastExpr 0x210a1048da8 <col:14> 'size_t *' <LValueToRValue>
|   | |   |   |   `-DeclRefExpr 0x210a1048d70 <col:14> 'size_t *' lvalue ParmVar 0x210a10447d8 'prm_len' 'size_t *'
|   | |   |   `-ImplicitCastExpr 0x210a1048e00 <line:20:25> 'size_t':'unsigned long long' <IntegralCast>
|   | |   |     `-IntegerLiteral 0x210a1048dd8 <col:25> 'int' 36
|   | |   `-CompoundStmt 0x210a1049430 <line:162:16, line:172:9>
|   | |     |-IfStmt 0x210a1048f58 <line:163:13, line:166:13>
|   | |     | |-BinaryOperator 0x210a1048ee8 <line:163:17, line:20:25> 'int' '!='
|   | |     | | |-ImplicitCastExpr 0x210a1048eb8 <line:163:17> 'unsigned int' <LValueToRValue>
|   | |     | | | `-DeclRefExpr 0x210a1048e58 <col:17> 'unsigned int' lvalue ParmVar 0x210a10446e0 'm_len' 'unsigned int'
|   | |     | | `-ImplicitCastExpr 0x210a1048ed0 <line:20:25> 'unsigned int' <IntegralCast>
|   | |     | |   `-IntegerLiteral 0x210a1048e90 <col:25> 'int' 36
|   | |     | `-CompoundStmt 0x210a1048f40 <line:163:42, line:166:13>
|   | |     |   `-GotoStmt 0x210a1048f28 <line:165:17, col:22> 'err' 0x210a10463b8
|   | |     `-IfStmt 0x210a1049418 <line:168:13, line:171:13>
|   | |       |-BinaryOperator 0x210a10493a8 <line:168:17, col:59> 'int' '!='
|   | |       | |-CallExpr 0x210a10492d0 <col:17, col:54> 'int'
|   | |       | | |-ImplicitCastExpr 0x210a10492b8 <col:17> 'int (*)(const void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   | |       | | | `-DeclRefExpr 0x210a10491a0 <col:17> 'int (const void *, const void *, unsigned long long)' Function 0x210a1048fb0 'memcmp' 'int (const void *, const void *, unsigned long long)'
|   | |       | | |-ImplicitCastExpr 0x210a1049320 <col:24> 'const void *' <BitCast>
|   | |       | | | `-ImplicitCastExpr 0x210a1049308 <col:24> 'unsigned char *' <LValueToRValue>
|   | |       | | |   `-DeclRefExpr 0x210a10491d8 <col:24> 'unsigned char *' lvalue Var 0x210a1045d58 'decrypt_buf' 'unsigned char *'
|   | |       | | |-ImplicitCastExpr 0x210a1049350 <col:37> 'const void *' <BitCast>
|   | |       | | | `-ImplicitCastExpr 0x210a1049338 <col:37> 'const unsigned char *' <LValueToRValue>
|   | |       | | |   `-DeclRefExpr 0x210a10491f8 <col:37> 'const unsigned char *' lvalue ParmVar 0x210a1044660 'm' 'const unsigned char *'
|   | |       | | `-ImplicitCastExpr 0x210a1049368 <line:20:25> 'unsigned long long' <IntegralCast>
|   | |       | |   `-IntegerLiteral 0x210a1049230 <col:25> 'int' 36
|   | |       | `-IntegerLiteral 0x210a1049380 <line:168:59> 'int' 0
|   | |       `-CompoundStmt 0x210a1049400 <col:62, line:171:13>
|   | |         `-GotoStmt 0x210a10493e8 <line:170:17, col:22> 'err' 0x210a10463b8
|   | `-IfStmt 0x210a1046fb8 <line:173:12, line:229:5> has_else
|   |   |-OpaqueValueExpr 0x210a1046fa0 <<invalid sloc>> '_Bool'
|   |   |-CompoundStmt 0x210a1047e88 <line:174:69, line:193:5>
|   |   | `-IfStmt 0x210a1047e60 <line:179:9, line:192:9> has_else
|   |   |   |-BinaryOperator 0x210a1049848 <line:179:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   |   |   | |-ImplicitCastExpr 0x210a1049818 <.//openssl//file_jk/before\crypto\rsa\rsa_sign.c:179:13> 'unsigned char *' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x210a1049770 <col:13> 'unsigned char *' lvalue ParmVar 0x210a1044760 'rm' 'unsigned char *'
|   |   |   | `-ImplicitCastExpr 0x210a1049830 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <BitCast>
|   |   |   |   `-ParenExpr 0x210a10497f8 <col:17, col:27> 'void *'
|   |   |   |     `-CStyleCastExpr 0x210a10497d0 <col:18, col:26> 'void *' <NullToPointer>
|   |   |   |       `-IntegerLiteral 0x210a1049790 <col:26> 'int' 0
|   |   |   |-CompoundStmt 0x210a1049ac8 <.//openssl//file_jk/before\crypto\rsa\rsa_sign.c:179:25, line:182:9>
|   |   |   | |-CallExpr 0x210a1049980 <line:180:13, col:43> 'void *'
|   |   |   | | |-ImplicitCastExpr 0x210a1049968 <col:13> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   |   |   | | | `-DeclRefExpr 0x210a1049868 <col:13> 'void *(void *, const void *, unsigned long long)' Function 0x210a1046990 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   |   |   | | |-ImplicitCastExpr 0x210a10499d0 <col:20> 'void *' <BitCast>
|   |   |   | | | `-ImplicitCastExpr 0x210a10499b8 <col:20> 'unsigned char *' <LValueToRValue>
|   |   |   | | |   `-DeclRefExpr 0x210a1049888 <col:20> 'unsigned char *' lvalue ParmVar 0x210a1044760 'rm' 'unsigned char *'
|   |   |   | | |-ImplicitCastExpr 0x210a10499e8 <col:24, col:38> 'const void *' <BitCast>
|   |   |   | | | `-BinaryOperator 0x210a1049908 <col:24, col:38> 'unsigned char *' '+'
|   |   |   | | |   |-ImplicitCastExpr 0x210a10498f0 <col:24> 'unsigned char *' <LValueToRValue>
|   |   |   | | |   | `-DeclRefExpr 0x210a10498a8 <col:24> 'unsigned char *' lvalue Var 0x210a1045d58 'decrypt_buf' 'unsigned char *'
|   |   |   | | |   `-IntegerLiteral 0x210a10498c8 <col:38> 'int' 2
|   |   |   | | `-ImplicitCastExpr 0x210a1049a00 <col:41> 'unsigned long long' <IntegralCast>
|   |   |   | |   `-IntegerLiteral 0x210a1049928 <col:41> 'int' 16
|   |   |   | `-BinaryOperator 0x210a1049aa8 <line:181:13, col:24> 'size_t':'unsigned long long' '='
|   |   |   |   |-UnaryOperator 0x210a1049a50 <col:13, col:14> 'size_t':'unsigned long long' lvalue prefix '*' cannot overflow
|   |   |   |   | `-ImplicitCastExpr 0x210a1049a38 <col:14> 'size_t *' <LValueToRValue>
|   |   |   |   |   `-DeclRefExpr 0x210a1049a18 <col:14> 'size_t *' lvalue ParmVar 0x210a10447d8 'prm_len' 'size_t *'
|   |   |   |   `-ImplicitCastExpr 0x210a1049a90 <col:24> 'size_t':'unsigned long long' <IntegralCast>
|   |   |   |     `-IntegerLiteral 0x210a1049a68 <col:24> 'int' 16
|   |   |   `-CompoundStmt 0x210a1047e40 <line:182:16, line:192:9>
|   |   |     |-IfStmt 0x210a1049bd0 <line:183:13, line:186:13>
|   |   |     | |-BinaryOperator 0x210a1049b60 <line:183:17, col:26> 'int' '!='
|   |   |     | | |-ImplicitCastExpr 0x210a1049b30 <col:17> 'unsigned int' <LValueToRValue>
|   |   |     | | | `-DeclRefExpr 0x210a1049ae8 <col:17> 'unsigned int' lvalue ParmVar 0x210a10446e0 'm_len' 'unsigned int'
|   |   |     | | `-ImplicitCastExpr 0x210a1049b48 <col:26> 'unsigned int' <IntegralCast>
|   |   |     | |   `-IntegerLiteral 0x210a1049b08 <col:26> 'int' 16
|   |   |     | `-CompoundStmt 0x210a1049bb8 <col:30, line:186:13>
|   |   |     |   `-GotoStmt 0x210a1049ba0 <line:185:17, col:22> 'err' 0x210a10463b8
|   |   |     `-IfStmt 0x210a1047e28 <line:188:13, line:191:13>
|   |   |       |-BinaryOperator 0x210a1047db8 <line:188:17, col:51> 'int' '!='
|   |   |       | |-CallExpr 0x210a1049d00 <col:17, col:46> 'int'
|   |   |       | | |-ImplicitCastExpr 0x210a1049ce8 <col:17> 'int (*)(const void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   |   |       | | | `-DeclRefExpr 0x210a1049be8 <col:17> 'int (const void *, const void *, unsigned long long)' Function 0x210a1048fb0 'memcmp' 'int (const void *, const void *, unsigned long long)'
|   |   |       | | |-ImplicitCastExpr 0x210a1049d50 <col:24> 'const void *' <BitCast>
|   |   |       | | | `-ImplicitCastExpr 0x210a1049d38 <col:24> 'const unsigned char *' <LValueToRValue>
|   |   |       | | |   `-DeclRefExpr 0x210a1049c08 <col:24> 'const unsigned char *' lvalue ParmVar 0x210a1044660 'm' 'const unsigned char *'
|   |   |       | | |-ImplicitCastExpr 0x210a1047d60 <col:27, col:41> 'const void *' <BitCast>
|   |   |       | | | `-BinaryOperator 0x210a1049c88 <col:27, col:41> 'unsigned char *' '+'
|   |   |       | | |   |-ImplicitCastExpr 0x210a1049c70 <col:27> 'unsigned char *' <LValueToRValue>
|   |   |       | | |   | `-DeclRefExpr 0x210a1049c28 <col:27> 'unsigned char *' lvalue Var 0x210a1045d58 'decrypt_buf' 'unsigned char *'
|   |   |       | | |   `-IntegerLiteral 0x210a1049c48 <col:41> 'int' 2
|   |   |       | | `-ImplicitCastExpr 0x210a1047d78 <col:44> 'unsigned long long' <IntegralCast>
|   |   |       | |   `-IntegerLiteral 0x210a1049ca8 <col:44> 'int' 16
|   |   |       | `-IntegerLiteral 0x210a1047d90 <col:51> 'int' 0
|   |   |       `-CompoundStmt 0x210a1047e10 <col:54, line:191:13>
|   |   |         `-GotoStmt 0x210a1047df8 <line:190:17, col:22> 'err' 0x210a10463b8
|   |   `-CompoundStmt 0x210a1046f70 <line:193:12, line:229:5>
|   |     |-IfStmt 0x210a10486a8 <line:199:9, line:212:9>
|   |     | |-BinaryOperator 0x210a1047f78 <line:199:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   |     | | |-ImplicitCastExpr 0x210a1047f48 <.//openssl//file_jk/before\crypto\rsa\rsa_sign.c:199:13> 'unsigned char *' <LValueToRValue>
|   |     | | | `-DeclRefExpr 0x210a1047ea0 <col:13> 'unsigned char *' lvalue ParmVar 0x210a1044760 'rm' 'unsigned char *'
|   |     | | `-ImplicitCastExpr 0x210a1047f60 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <BitCast>
|   |     | |   `-ParenExpr 0x210a1047f28 <col:17, col:27> 'void *'
|   |     | |     `-CStyleCastExpr 0x210a1047f00 <col:18, col:26> 'void *' <NullToPointer>
|   |     | |       `-IntegerLiteral 0x210a1047ec0 <col:26> 'int' 0
|   |     | `-CompoundStmt 0x210a1048678 <.//openssl//file_jk/before\crypto\rsa\rsa_sign.c:199:25, line:212:9>
|   |     |   |-DeclStmt 0x210a10481a0 <line:200:13, col:57>
|   |     |   | `-VarDecl 0x210a1047fb0 <col:13, col:27> col:27 invalid md 'const int *'
|   |     |   |-IfStmt 0x210a10482a8 <line:201:13, line:204:13>
|   |     |   | |-OpaqueValueExpr 0x210a1048290 <<invalid sloc>> '_Bool'
|   |     |   | `-CompoundStmt 0x210a1048278 <line:201:29, line:204:13>
|   |     |   |   `-GotoStmt 0x210a1048260 <line:203:17, col:22> 'err' 0x210a10463b8
|   |     |   |-IfStmt 0x210a1048520 <line:207:13, line:210:13>
|   |     |   | |-BinaryOperator 0x210a10484b0 <line:207:17, col:33> 'int' '>'
|   |     |   | | |-ImplicitCastExpr 0x210a1048498 <col:17> 'unsigned long long' <IntegralCast>
|   |     |   | | | `-ImplicitCastExpr 0x210a1048480 <col:17> 'unsigned int' <LValueToRValue>
|   |     |   | | |   `-DeclRefExpr 0x210a10483f0 <col:17> 'unsigned int' lvalue ParmVar 0x210a10446e0 'm_len' 'unsigned int'
|   |     |   | | `-CStyleCastExpr 0x210a1048458 <col:25, col:33> 'size_t':'unsigned long long' <IntegralCast>
|   |     |   | |   `-ImplicitCastExpr 0x210a1048440 <col:33> 'int' <LValueToRValue> part_of_explicit_cast
|   |     |   | |     `-DeclRefExpr 0x210a1048410 <col:33> 'int' lvalue Var 0x210a1044b30 'decrypt_len' 'int'
|   |     |   | `-CompoundStmt 0x210a1048508 <col:46, line:210:13>
|   |     |   |   `-GotoStmt 0x210a10484f0 <line:209:17, col:22> 'err' 0x210a10463b8
|   |     |   `-BinaryOperator 0x210a1048658 <line:211:13, col:45> 'const unsigned char *' '='
|   |     |     |-DeclRefExpr 0x210a1048538 <col:13> 'const unsigned char *' lvalue ParmVar 0x210a1044660 'm' 'const unsigned char *'
|   |     |     `-ImplicitCastExpr 0x210a1048640 <col:17, col:45> 'const unsigned char *' <NoOp>
|   |     |       `-BinaryOperator 0x210a1048620 <col:17, col:45> 'unsigned char *' '-'
|   |     |         |-BinaryOperator 0x210a10485c8 <col:17, col:31> 'unsigned char *' '+'
|   |     |         | |-ImplicitCastExpr 0x210a1048598 <col:17> 'unsigned char *' <LValueToRValue>
|   |     |         | | `-DeclRefExpr 0x210a1048558 <col:17> 'unsigned char *' lvalue Var 0x210a1045d58 'decrypt_buf' 'unsigned char *'
|   |     |         | `-ImplicitCastExpr 0x210a10485b0 <col:31> 'int' <LValueToRValue>
|   |     |         |   `-DeclRefExpr 0x210a1048578 <col:31> 'int' lvalue Var 0x210a1044b30 'decrypt_len' 'int'
|   |     |         `-ImplicitCastExpr 0x210a1048608 <col:45> 'unsigned int' <LValueToRValue>
|   |     |           `-DeclRefExpr 0x210a10485e8 <col:45> 'unsigned int' lvalue ParmVar 0x210a10446e0 'm_len' 'unsigned int'
|   |     |-IfStmt 0x210a10488b8 <line:215:9, line:216:18>
|   |     | |-UnaryOperator 0x210a1048888 <line:215:13, col:65> 'int' prefix '!' cannot overflow
|   |     | | `-CallExpr 0x210a10487f8 <col:14, col:65> 'int'
|   |     | |   |-ImplicitCastExpr 0x210a10487e0 <col:14> 'int (*)(unsigned char **, int *, int, const unsigned char *, unsigned int)' <FunctionToPointerDecay>
|   |     | |   | `-DeclRefExpr 0x210a10486c0 <col:14> 'int (unsigned char **, int *, int, const unsigned char *, unsigned int)' Function 0x210a1045100 'encode_pkcs1' 'int (unsigned char **, int *, int, const unsigned char *, unsigned int)'
|   |     | |   |-UnaryOperator 0x210a1048718 <col:27, col:28> 'unsigned char **' prefix '&' cannot overflow
|   |     | |   | `-DeclRefExpr 0x210a10486e0 <col:28> 'unsigned char *' lvalue Var 0x210a1045e78 'encoded' 'unsigned char *'
|   |     | |   |-UnaryOperator 0x210a1048768 <col:37, col:38> 'int *' prefix '&' cannot overflow
|   |     | |   | `-DeclRefExpr 0x210a1048730 <col:38> 'int' lvalue Var 0x210a1044c58 'encoded_len' 'int'
|   |     | |   |-ImplicitCastExpr 0x210a1048840 <col:51> 'int' <LValueToRValue>
|   |     | |   | `-DeclRefExpr 0x210a1048780 <col:51> 'int' lvalue ParmVar 0x210a10445e0 'type' 'int'
|   |     | |   |-ImplicitCastExpr 0x210a1048858 <col:57> 'const unsigned char *' <LValueToRValue>
|   |     | |   | `-DeclRefExpr 0x210a10487a0 <col:57> 'const unsigned char *' lvalue ParmVar 0x210a1044660 'm' 'const unsigned char *'
|   |     | |   `-ImplicitCastExpr 0x210a1048870 <col:60> 'unsigned int' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x210a10487c0 <col:60> 'unsigned int' lvalue ParmVar 0x210a10446e0 'm_len' 'unsigned int'
|   |     | `-GotoStmt 0x210a10488a0 <line:216:13, col:18> 'err' 0x210a10463b8
|   |     |-IfStmt 0x210a1048bc0 <line:218:9, line:222:9>
|   |     | |-BinaryOperator 0x210a1048b50 <line:218:13, line:219:61> 'int' '||'
|   |     | | |-BinaryOperator 0x210a1048940 <line:218:13, col:28> 'int' '!='
|   |     | | | |-ImplicitCastExpr 0x210a1048910 <col:13> 'int' <LValueToRValue>
|   |     | | | | `-DeclRefExpr 0x210a10488d0 <col:13> 'int' lvalue Var 0x210a1044c58 'encoded_len' 'int'
|   |     | | | `-ImplicitCastExpr 0x210a1048928 <col:28> 'int' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x210a10488f0 <col:28> 'int' lvalue Var 0x210a1044b30 'decrypt_len' 'int'
|   |     | | `-BinaryOperator 0x210a1048b30 <line:219:16, col:61> 'int' '!='
|   |     | |   |-CallExpr 0x210a1048a40 <col:16, col:56> 'int'
|   |     | |   | |-ImplicitCastExpr 0x210a1048a28 <col:16> 'int (*)(const void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   |     | |   | | `-DeclRefExpr 0x210a1048960 <col:16> 'int (const void *, const void *, unsigned long long)' Function 0x210a1048fb0 'memcmp' 'int (const void *, const void *, unsigned long long)'
|   |     | |   | |-ImplicitCastExpr 0x210a1048a90 <col:23> 'const void *' <BitCast>
|   |     | |   | | `-ImplicitCastExpr 0x210a1048a78 <col:23> 'unsigned char *' <LValueToRValue>
|   |     | |   | |   `-DeclRefExpr 0x210a1048980 <col:23> 'unsigned char *' lvalue Var 0x210a1045e78 'encoded' 'unsigned char *'
|   |     | |   | |-ImplicitCastExpr 0x210a1048ac0 <col:32> 'const void *' <BitCast>
|   |     | |   | | `-ImplicitCastExpr 0x210a1048aa8 <col:32> 'unsigned char *' <LValueToRValue>
|   |     | |   | |   `-DeclRefExpr 0x210a10489a0 <col:32> 'unsigned char *' lvalue Var 0x210a1045d58 'decrypt_buf' 'unsigned char *'
|   |     | |   | `-ImplicitCastExpr 0x210a1048af0 <col:45> 'unsigned long long' <IntegralCast>
|   |     | |   |   `-ImplicitCastExpr 0x210a1048ad8 <col:45> 'int' <LValueToRValue>
|   |     | |   |     `-DeclRefExpr 0x210a10489c0 <col:45> 'int' lvalue Var 0x210a1044c58 'encoded_len' 'int'
|   |     | |   `-IntegerLiteral 0x210a1048b08 <col:61> 'int' 0
|   |     | `-CompoundStmt 0x210a1048ba8 <col:64, line:222:9>
|   |     |   `-GotoStmt 0x210a1048b90 <line:221:13, col:18> 'err' 0x210a10463b8
|   |     `-IfStmt 0x210a1046f58 <line:225:9, line:228:9>
|   |       |-BinaryOperator 0x210a1048cb0 <line:225:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   |       | |-ImplicitCastExpr 0x210a1048c80 <.//openssl//file_jk/before\crypto\rsa\rsa_sign.c:225:13> 'unsigned char *' <LValueToRValue>
|   |       | | `-DeclRefExpr 0x210a1048bd8 <col:13> 'unsigned char *' lvalue ParmVar 0x210a1044760 'rm' 'unsigned char *'
|   |       | `-ImplicitCastExpr 0x210a1048c98 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <BitCast>
|   |       |   `-ParenExpr 0x210a1048c60 <col:17, col:27> 'void *'
|   |       |     `-CStyleCastExpr 0x210a1048c38 <col:18, col:26> 'void *' <NullToPointer>
|   |       |       `-IntegerLiteral 0x210a1048bf8 <col:26> 'int' 0
|   |       `-CompoundStmt 0x210a1046f38 <.//openssl//file_jk/before\crypto\rsa\rsa_sign.c:225:25, line:228:9>
|   |         |-CallExpr 0x210a1046db0 <line:226:13, col:32> 'void *'
|   |         | |-ImplicitCastExpr 0x210a1046d98 <col:13> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   |         | | `-DeclRefExpr 0x210a1048cd0 <col:13> 'void *(void *, const void *, unsigned long long)' Function 0x210a1046990 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   |         | |-ImplicitCastExpr 0x210a1046e00 <col:20> 'void *' <BitCast>
|   |         | | `-ImplicitCastExpr 0x210a1046de8 <col:20> 'unsigned char *' <LValueToRValue>
|   |         | |   `-DeclRefExpr 0x210a1048cf0 <col:20> 'unsigned char *' lvalue ParmVar 0x210a1044760 'rm' 'unsigned char *'
|   |         | |-ImplicitCastExpr 0x210a1046e30 <col:24> 'const void *' <BitCast>
|   |         | | `-ImplicitCastExpr 0x210a1046e18 <col:24> 'const unsigned char *' <LValueToRValue>
|   |         | |   `-DeclRefExpr 0x210a1048d10 <col:24> 'const unsigned char *' lvalue ParmVar 0x210a1044660 'm' 'const unsigned char *'
|   |         | `-ImplicitCastExpr 0x210a1046e60 <col:27> 'unsigned long long' <IntegralCast>
|   |         |   `-ImplicitCastExpr 0x210a1046e48 <col:27> 'unsigned int' <LValueToRValue>
|   |         |     `-DeclRefExpr 0x210a1048d30 <col:27> 'unsigned int' lvalue ParmVar 0x210a10446e0 'm_len' 'unsigned int'
|   |         `-BinaryOperator 0x210a1046f18 <line:227:13, col:24> 'size_t':'unsigned long long' '='
|   |           |-UnaryOperator 0x210a1046eb0 <col:13, col:14> 'size_t':'unsigned long long' lvalue prefix '*' cannot overflow
|   |           | `-ImplicitCastExpr 0x210a1046e98 <col:14> 'size_t *' <LValueToRValue>
|   |           |   `-DeclRefExpr 0x210a1046e78 <col:14> 'size_t *' lvalue ParmVar 0x210a10447d8 'prm_len' 'size_t *'
|   |           `-ImplicitCastExpr 0x210a1046f00 <col:24> 'size_t':'unsigned long long' <IntegralCast>
|   |             `-ImplicitCastExpr 0x210a1046ee8 <col:24> 'unsigned int' <LValueToRValue>
|   |               `-DeclRefExpr 0x210a1046ec8 <col:24> 'unsigned int' lvalue ParmVar 0x210a10446e0 'm_len' 'unsigned int'
|   |-BinaryOperator 0x210a1047080 <line:231:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x210a1047020 <col:5> 'int' lvalue Var 0x210a1044bb0 'ret' 'int'
|   | `-IntegerLiteral 0x210a1047058 <col:11> 'int' 1
|   |-LabelStmt 0x210a10471b0 <line:233:1, line:234:52> 'err'
|   | `-CallExpr 0x210a1047168 <col:5, col:52> 'int'
|   |   |-ImplicitCastExpr 0x210a1047150 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x210a10470a0 <col:5> 'int ()' Function 0x210a1044328 'OPENSSL_clear_free' 'int ()'
|   |   |-ImplicitCastExpr 0x210a1047198 <col:24> 'unsigned char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x210a10470c0 <col:24> 'unsigned char *' lvalue Var 0x210a1045e78 'encoded' 'unsigned char *'
|   |   `-CStyleCastExpr 0x210a1047128 <col:33, col:41> 'size_t':'unsigned long long' <IntegralCast>
|   |     `-ImplicitCastExpr 0x210a1047110 <col:41> 'int' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0x210a10470e0 <col:41> 'int' lvalue Var 0x210a1044c58 'encoded_len' 'int'
|   |-CallExpr 0x210a1047240 <line:235:5, col:43> 'int'
|   | |-ImplicitCastExpr 0x210a1047228 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x210a10471c8 <col:5> 'int ()' Function 0x210a1044328 'OPENSSL_clear_free' 'int ()'
|   | |-ImplicitCastExpr 0x210a1047270 <col:24> 'unsigned char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x210a10471e8 <col:24> 'unsigned char *' lvalue Var 0x210a1045d58 'decrypt_buf' 'unsigned char *'
|   | `-ImplicitCastExpr 0x210a1047288 <col:37> 'size_t':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0x210a1047208 <col:37> 'size_t':'unsigned long long' lvalue ParmVar 0x210a10448d0 'siglen' 'size_t':'unsigned long long'
|   `-ReturnStmt 0x210a10472d8 <line:236:5, col:12>
|     `-ImplicitCastExpr 0x210a10472c0 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x210a10472a0 <col:12> 'int' lvalue Var 0x210a1044bb0 'ret' 'int'
|-FunctionDecl 0x210a1046990 <line:160:13> col:13 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x210a1046a30 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x210a1046a98 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x210a1046b00 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x210a1048fb0 <line:168:17> col:17 implicit used memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x210a1049050 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x210a10490b8 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x210a1049120 <<invalid sloc>> <invalid sloc> 'unsigned long long'
`-FunctionDecl 0x210a1047700 <line:239:1, line:248:1> line:239:5 invalid RSA_verify 'int (int, const unsigned char *, unsigned int, const unsigned char *, unsigned int, int *)'
  |-ParmVarDecl 0x210a1047368 <col:16, col:20> col:20 used type 'int'
  |-ParmVarDecl 0x210a10473e8 <col:26, col:47> col:47 used m 'const unsigned char *'
  |-ParmVarDecl 0x210a1047468 <col:50, col:63> col:63 used m_len 'unsigned int'
  |-ParmVarDecl 0x210a10474e8 <line:240:16, col:37> col:37 used sigbuf 'const unsigned char *'
  |-ParmVarDecl 0x210a1047568 <col:45, col:58> col:58 used siglen 'unsigned int'
  |-ParmVarDecl 0x210a10475e8 <col:66, col:71> col:71 invalid rsa 'int *'
  `-CompoundStmt 0x210a1047af0 <line:241:1, line:248:1>
    `-IfStmt 0x210a1047928 <line:243:5, line:245:5>
      |-OpaqueValueExpr 0x210a1047910 <<invalid sloc>> '_Bool'
      `-CompoundStmt 0x210a1047900 <line:243:32, line:245:5>
