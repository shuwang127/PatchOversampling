TranslationUnitDecl 0x2320bdeea88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x2320bdef320 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x2320bdef020 '__int128'
|-TypedefDecl 0x2320bdef390 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x2320bdef040 'unsigned __int128'
|-TypedefDecl 0x2320bdef6c8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x2320bdef480 'struct __NSConstantString_tag'
|   `-Record 0x2320bdef3e8 '__NSConstantString_tag'
|-TypedefDecl 0x2320bdef738 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x2320bdeec60 'unsigned long long'
|-TypedefDecl 0x2320bdef7d0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x2320bdef790 'char *'
|   `-BuiltinType 0x2320bdeeb20 'char'
|-TypedefDecl 0x2320bdef840 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x2320bdef790 'char *'
|   `-BuiltinType 0x2320bdeeb20 'char'
|-RecordDecl 0x2320bdef898 <.//openssl//file_jk/before\crypto\x509v3/pcy_int.h:10:9, col:16> col:16 struct X509_POLICY_DATA_st
|-TypedefDecl 0x2320bdef9a8 <col:1, col:36> col:36 referenced X509_POLICY_DATA 'struct X509_POLICY_DATA_st':'struct X509_POLICY_DATA_st'
| `-ElaboratedType 0x2320bdef950 'struct X509_POLICY_DATA_st' sugar
|   `-RecordType 0x2320bdef930 'struct X509_POLICY_DATA_st'
|     `-Record 0x2320d76a908 'X509_POLICY_DATA_st'
|-FunctionDecl 0x2320d76a800 <line:12:1, col:33> col:1 DEFINE_STACK_OF 'int (X509_POLICY_DATA)'
| `-ParmVarDecl 0x2320d76a700 <col:17> col:33 'X509_POLICY_DATA':'struct X509_POLICY_DATA_st'
|-RecordDecl 0x2320d76a908 prev 0x2320bdef898 <line:23:1, line:29:1> line:23:8 invalid struct X509_POLICY_DATA_st definition
| |-FieldDecl 0x2320d76a9a0 <line:24:5, col:18> col:18 referenced flags 'unsigned int'
| |-FieldDecl 0x2320d76aa40 <line:26:5, col:18> col:18 invalid valid_policy 'int *'
| `-FieldDecl 0x2320d76aaf0 <line:27:5, <invalid sloc>> col:5 invalid STACK_OF 'int ()'
|-RecordDecl 0x2320d76abc8 <line:65:1, line:82:1> line:65:8 invalid struct X509_POLICY_CACHE_st definition
| |-FieldDecl 0x2320d76ace8 <line:67:5, col:23> col:23 anyPolicy 'X509_POLICY_DATA *'
| |-FieldDecl 0x2320d76ade8 <line:69:5, <invalid sloc>> col:5 invalid STACK_OF 'int (X509_POLICY_DATA)'
| |-FieldDecl 0x2320d76ae58 <line:71:5, col:10> col:10 any_skip 'long'
| |-FieldDecl 0x2320d76aec8 <line:76:5, col:10> col:10 explicit_skip 'long'
| `-FieldDecl 0x2320d76af38 <line:81:5, col:10> col:10 map_skip 'long'
|-RecordDecl 0x2320d76af90 <line:90:1, line:97:1> line:90:8 invalid struct X509_POLICY_NODE_st definition
| |-FieldDecl 0x2320d76b0b8 <line:92:5, col:29> col:29 data 'const X509_POLICY_DATA *'
| |-FieldDecl 0x2320d76b128 <line:94:5, col:23> col:23 invalid parent 'int *'
| `-FieldDecl 0x2320d76b198 <line:96:5, col:9> col:9 nchild 'int'
|-RecordDecl 0x2320d76b1f0 <line:99:1, line:111:1> line:99:8 invalid struct X509_POLICY_LEVEL_st definition
| |-FieldDecl 0x2320d76b2c8 <line:101:5, col:11> col:11 invalid cert 'int *'
| |-FieldDecl 0x2320d76b348 <line:103:5, <invalid sloc>> col:5 invalid STACK_OF 'int ()'
| |-FieldDecl 0x2320d76b3b8 <line:105:5, col:23> col:23 invalid anyPolicy 'int *'
| `-FieldDecl 0x2320d76b428 <line:110:5, col:18> col:18 flags 'unsigned int'
|-RecordDecl 0x2320d76b480 <line:113:1, line:126:1> line:113:8 invalid struct X509_POLICY_TREE_st definition
| |-FieldDecl 0x2320d76b558 <line:115:5, col:24> col:24 invalid levels 'int *'
| |-FieldDecl 0x2320d76b5c8 <line:116:5, col:9> col:9 nlevel 'int'
| |-FieldDecl 0x2320d76b710 <line:121:5, <invalid sloc>> col:5 invalid STACK_OF 'int (X509_POLICY_DATA)'
| `-FieldDecl 0x2320d76b880 <line:125:5, col:18> col:18 flags 'unsigned int'
|-FunctionDecl 0x2320d76bb18 <line:138:1, line:139:43> line:138:19 invalid policy_data_new 'X509_POLICY_DATA *(int *, const int *, int)'
| |-ParmVarDecl 0x2320d76b8f0 <col:35, col:47> col:47 invalid policy 'int *'
| |-ParmVarDecl 0x2320d76b970 <col:55, col:74> col:74 invalid id 'const int *'
| `-ParmVarDecl 0x2320d76b9f0 <line:139:35, col:39> col:39 crit 'int'
|-FunctionDecl 0x2320d76bce8 <line:140:1, col:45> col:6 policy_data_free 'void (X509_POLICY_DATA *)'
| `-ParmVarDecl 0x2320d76bbe0 <col:23, col:41> col:41 data 'X509_POLICY_DATA *'
|-FunctionDecl 0x2320d76bf58 <line:142:1, line:143:63> line:142:19 invalid policy_cache_find_data 'X509_POLICY_DATA *(const int *, const int *)'
| |-ParmVarDecl 0x2320d76bdc0 <col:42, col:67> col:67 invalid cache 'const int *'
| `-ParmVarDecl 0x2320d76be40 <line:143:42, col:61> col:61 invalid id 'const int *'
|-FunctionDecl 0x2320d76c180 <line:144:1, col:60> col:5 invalid policy_cache_set_mapping 'int (int *, int *)'
| |-ParmVarDecl 0x2320d76c020 <col:30, col:36> col:36 invalid x 'int *'
| `-ParmVarDecl 0x2320d76c0a0 <col:39, col:56> col:56 invalid maps 'int *'
|-FunctionDecl 0x2320d76c2f8 <line:148:1, col:28> col:6 policy_cache_init 'void (void)'
|-FunctionDecl 0x2320d76c488 <line:150:1, col:48> col:6 invalid policy_cache_free 'void (int *)'
| `-ParmVarDecl 0x2320d76c3c8 <col:24, col:43> col:43 invalid cache 'int *'
|-FunctionDecl 0x2320d7646e0 <line:152:1, line:154:56> line:152:19 invalid level_find_node 'int *(const int *, const int *, const int *)'
| |-ParmVarDecl 0x2320d76c548 <col:35, col:60> col:60 invalid level 'const int *'
| |-ParmVarDecl 0x2320d76c5c8 <line:153:35, col:59> col:59 invalid parent 'const int *'
| `-ParmVarDecl 0x2320d76c648 <line:154:35, col:54> col:54 invalid id 'const int *'
|-FunctionDecl 0x2320d764920 <line:156:1, line:157:53> line:156:19 invalid tree_find_sk 'int *(int (*)())'
| `-ParmVarDecl 0x2320d764820 <col:32, <invalid sloc>> col:32 invalid STACK_OF 'int (*)()':'int (*)()'
|-FunctionDecl 0x2320d764ca0 <line:159:1, line:162:56> line:159:19 invalid level_add_node 'int *(int *, X509_POLICY_DATA *, int *, int *)'
| |-ParmVarDecl 0x2320d7649e0 <col:34, col:53> col:53 invalid level 'int *'
| |-ParmVarDecl 0x2320d764a58 <line:160:34, col:52> col:52 data 'X509_POLICY_DATA *'
| |-ParmVarDecl 0x2320d764ad8 <line:161:34, col:52> col:52 invalid parent 'int *'
| `-ParmVarDecl 0x2320d764b58 <line:162:34, col:52> col:52 invalid tree 'int *'
|-FunctionDecl 0x2320d764e08 <line:163:1, col:45> col:6 invalid policy_node_free 'void (int *)'
| `-ParmVarDecl 0x2320d764d78 <col:23, col:41> col:41 invalid node 'int *'
|-FunctionDecl 0x2320d7650b0 <line:164:1, line:165:75> line:164:5 invalid policy_node_match 'int (const int *, const int *, const int *)'
| |-ParmVarDecl 0x2320d764ec8 <col:23, col:48> col:48 invalid lvl 'const int *'
| |-ParmVarDecl 0x2320d764f48 <line:165:23, col:47> col:47 invalid node 'const int *'
| `-ParmVarDecl 0x2320d764fc8 <col:53, col:72> col:72 invalid oid 'const int *'
|-FunctionDecl 0x2320d765250 <line:167:1, col:50> col:26 invalid policy_cache_set 'const int *(int *)'
| `-ParmVarDecl 0x2320d765180 <col:43, col:49> col:49 invalid x 'int *'
|-FunctionDecl 0x2320d7653b0 prev 0x2320d76bce8 <.//openssl//file_jk/before\crypto\x509v3\pcy_data.c:18:1, line:28:1> line:18:6 policy_data_free 'void (X509_POLICY_DATA *)'
| |-ParmVarDecl 0x2320d765308 <col:23, col:41> col:41 used data 'X509_POLICY_DATA *'
| `-CompoundStmt 0x2320d765b98 <line:19:1, line:28:1>
|   |-IfStmt 0x2320d7654b8 <line:20:5, line:21:9>
|   | |-UnaryOperator 0x2320d765490 <line:20:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x2320d765478 <col:10> 'X509_POLICY_DATA *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2320d765458 <col:10> 'X509_POLICY_DATA *' lvalue ParmVar 0x2320d765308 'data' 'X509_POLICY_DATA *'
|   | `-ReturnStmt 0x2320d7654a8 <line:21:9>
|   `-CallExpr 0x2320d765b58 <line:27:5, col:22> 'int'
|     |-ImplicitCastExpr 0x2320d765b40 <col:5> 'int (*)()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x2320d765b00 <col:5> 'int ()' Function 0x2320d765a38 'OPENSSL_free' 'int ()'
|     `-ImplicitCastExpr 0x2320d765b80 <col:18> 'X509_POLICY_DATA *' <LValueToRValue>
|       `-DeclRefExpr 0x2320d765b20 <col:18> 'X509_POLICY_DATA *' lvalue ParmVar 0x2320d765308 'data' 'X509_POLICY_DATA *'
`-FunctionDecl 0x2320d765d70 <line:38:1, line:77:1> line:38:19 invalid policy_data_new 'X509_POLICY_DATA *(int *, const int *, int)'
  |-ParmVarDecl 0x2320d765bd0 <col:35, col:47> col:47 invalid policy 'int *'
  |-ParmVarDecl 0x2320d765c50 <line:39:35, col:54> col:54 invalid cid 'const int *'
  |-ParmVarDecl 0x2320d765cd0 <col:59, col:63> col:63 used crit 'int'
  `-CompoundStmt 0x2320d76d898 <line:40:1, line:77:1>
    |-DeclStmt 0x2320d765eb8 <line:41:5, col:26>
    | `-VarDecl 0x2320d765e50 <col:5, col:23> col:23 used ret 'X509_POLICY_DATA *'
    |-IfStmt 0x2320d766010 <line:45:5, line:50:9> has_else
    | |-OpaqueValueExpr 0x2320d765ff8 <<invalid sloc>> '_Bool'
    | |-CompoundStmt 0x2320d765fe0 <line:45:14, line:49:5>
    | `-NullStmt 0x2320d765ff0 <line:50:9>
    |-BinaryOperator 0x2320d766268 <line:51:5, col:38> 'X509_POLICY_DATA *' '='
    | |-DeclRefExpr 0x2320d766038 <col:5> 'X509_POLICY_DATA *' lvalue Var 0x2320d765e50 'ret' 'X509_POLICY_DATA *'
    | `-ImplicitCastExpr 0x2320d766250 <col:11, col:38> 'X509_POLICY_DATA *' <IntegralToPointer>
    |   `-CallExpr 0x2320d766228 <col:11, col:38> 'int'
    |     |-ImplicitCastExpr 0x2320d766210 <col:11> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x2320d766160 <col:11> 'int ()' Function 0x2320d766098 'OPENSSL_zalloc' 'int ()'
    |     `-UnaryExprOrTypeTraitExpr 0x2320d7661f0 <col:26, col:37> 'unsigned long long' sizeof
    |       `-ParenExpr 0x2320d7661d0 <col:32, col:37> 'X509_POLICY_DATA':'struct X509_POLICY_DATA_st' lvalue
    |         `-UnaryOperator 0x2320d7661b8 <col:33, col:34> 'X509_POLICY_DATA':'struct X509_POLICY_DATA_st' lvalue prefix '*' cannot overflow
    |           `-ImplicitCastExpr 0x2320d7661a0 <col:34> 'X509_POLICY_DATA *' <LValueToRValue>
    |             `-DeclRefExpr 0x2320d766180 <col:34> 'X509_POLICY_DATA *' lvalue Var 0x2320d765e50 'ret' 'X509_POLICY_DATA *' non_odr_use_unevaluated
    |-IfStmt 0x2320d766548 <line:55:5, line:59:5>
    | |-OpaqueValueExpr 0x2320d766530 <<invalid sloc>> '_Bool'
    | `-CompoundStmt 0x2320d766518 <line:55:43, line:59:5>
    |   `-CallExpr 0x2320d7664b8 <line:56:9, col:25> 'int'
    |     |-ImplicitCastExpr 0x2320d7664a0 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x2320d766460 <col:9> 'int ()' Function 0x2320d765a38 'OPENSSL_free' 'int ()'
    |     `-ImplicitCastExpr 0x2320d7664e0 <col:22> 'X509_POLICY_DATA *' <LValueToRValue>
    |       `-DeclRefExpr 0x2320d766480 <col:22> 'X509_POLICY_DATA *' lvalue Var 0x2320d765e50 'ret' 'X509_POLICY_DATA *'
    |-IfStmt 0x2320d766678 <line:61:5, .//openssl//file_jk/before\crypto\x509v3/pcy_int.h:61:49>
    | |-ImplicitCastExpr 0x2320d766598 <.//openssl//file_jk/before\crypto\x509v3\pcy_data.c:61:9> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x2320d766560 <col:9> 'int' lvalue ParmVar 0x2320d765cd0 'crit' 'int'
    | `-BinaryOperator 0x2320d766658 <line:62:9, .//openssl//file_jk/before\crypto\x509v3/pcy_int.h:61:49> 'unsigned int' '='
    |   |-MemberExpr 0x2320d7665e8 <.//openssl//file_jk/before\crypto\x509v3\pcy_data.c:62:9, col:14> 'unsigned int' lvalue ->flags 0x2320d76a9a0
    |   | `-ImplicitCastExpr 0x2320d7665d0 <col:9> 'X509_POLICY_DATA *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x2320d7665b0 <col:9> 'X509_POLICY_DATA *' lvalue Var 0x2320d765e50 'ret' 'X509_POLICY_DATA *'
    |   `-ImplicitCastExpr 0x2320d766640 <.//openssl//file_jk/before\crypto\x509v3/pcy_int.h:61:49> 'unsigned int' <IntegralCast>
    |     `-IntegerLiteral 0x2320d766618 <col:49> 'int' 16
    |-IfStmt 0x2320d76d7b0 <.//openssl//file_jk/before\crypto\x509v3\pcy_data.c:64:5, line:69:5> has_else
    | |-OpaqueValueExpr 0x2320d76d798 <<invalid sloc>> '_Bool'
    | |-NullStmt 0x2320d76d790 <line:65:9>
    | `-CompoundStmt 0x2320d76d780 <line:66:10, line:69:5>
    |-IfStmt 0x2320d76d838 <line:71:5, line:74:5>
    | |-OpaqueValueExpr 0x2320d76d820 <<invalid sloc>> '_Bool'
    | `-CompoundStmt 0x2320d76d810 <line:71:17, line:74:5>
    `-ReturnStmt 0x2320d76d888 <line:76:5, col:12>
      `-ImplicitCastExpr 0x2320d76d870 <col:12> 'X509_POLICY_DATA *' <LValueToRValue>
        `-DeclRefExpr 0x2320d76d850 <col:12> 'X509_POLICY_DATA *' lvalue Var 0x2320d765e50 'ret' 'X509_POLICY_DATA *'
