TranslationUnitDecl 0x1c00455fef8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1c004560790 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1c004560490 '__int128'
|-TypedefDecl 0x1c004560800 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1c0045604b0 'unsigned __int128'
|-TypedefDecl 0x1c004560b38 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1c0045608f0 'struct __NSConstantString_tag'
|   `-Record 0x1c004560858 '__NSConstantString_tag'
|-TypedefDecl 0x1c004560ba8 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x1c0045600d0 'unsigned long long'
|-TypedefDecl 0x1c004560c40 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1c004560c00 'char *'
|   `-BuiltinType 0x1c00455ff90 'char'
|-TypedefDecl 0x1c004560cb0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1c004560c00 'char *'
|   `-BuiltinType 0x1c00455ff90 'char'
|-TypedefDecl 0x1c004560d70 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x1c0045600d0 'unsigned long long'
|-TypedefDecl 0x1c004560de0 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x1c004560c00 'char *'
|   `-BuiltinType 0x1c00455ff90 'char'
|-FunctionDecl 0x1c005f38820 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1c005f388c0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x1c005f38930 <col:21> Implicit
|-FunctionDecl 0x1c005f38988 prev 0x1c005f38820 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1c005f386b0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x1c005f38a78 <col:21> Inherited Implicit
|-TypedefDecl 0x1c005f38ab8 prev 0x1c004560ba8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x1c0045600d0 'unsigned long long'
|-TypedefDecl 0x1c005f38b60 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x1c005f38b30 'size_t' sugar
|   |-Typedef 0x1c005f38ab8 'size_t'
|   `-BuiltinType 0x1c0045600d0 'unsigned long long'
|-TypedefDecl 0x1c005f38bd0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x1c004560030 'long long'
|-TypedefDecl 0x1c005f38c40 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x1c004560030 'long long'
|-TypedefDecl 0x1c005f38cb0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x1c004560070 'unsigned short'
|-TypedefDecl 0x1c005f38d20 <line:541:1, col:24> col:24 referenced wint_t 'unsigned short'
| `-BuiltinType 0x1c004560070 'unsigned short'
|-TypedefDecl 0x1c005f38d90 <line:542:1, col:24> col:24 referenced wctype_t 'unsigned short'
| `-BuiltinType 0x1c004560070 'unsigned short'
|-TypedefDecl 0x1c005f38e00 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x1c00455fff0 'int'
|-TypedefDecl 0x1c005f38e70 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x1c004560010 'long'
|-TypedefDecl 0x1c005f38ee0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x1c004560030 'long long'
|-TypedefDecl 0x1c005f38f70 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x1c005f38f40 '__time64_t' sugar
|   |-Typedef 0x1c005f38ee0 '__time64_t'
|   `-BuiltinType 0x1c004560030 'long long'
|-FunctionDecl 0x1c005f390e8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x1c005f39308 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x1c005f70350 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x1c005f39448 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x1c005f394c0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x1c005f39538 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x1c005f395b8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x1c005f700f0 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x1c005f70430 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x1c005f704f0 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x1c005f70660 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x1c005f70610 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x1c005f705b0 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x1c005f704d0 'struct threadlocaleinfostruct'
|       `-Record 0x1c005f801f0 'threadlocaleinfostruct'
|-TypedefDecl 0x1c005f70770 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x1c005f70720 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x1c005f706c0 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x1c005f70590 'struct threadmbcinfostruct'
|       `-Record 0x1c005f704f0 'threadmbcinfostruct'
|-RecordDecl 0x1c005f707c8 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x1c005f70880 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x1c005f70940 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1c005f709d0 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x1c005f70a60 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x1c005f70b18 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x1c005f70ac0 'struct localeinfo_struct' sugar
|   `-RecordType 0x1c005f70920 'struct localeinfo_struct'
|     `-Record 0x1c005f70880 'localeinfo_struct'
|-TypedefDecl 0x1c005f70bf0 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x1c005f70ba0 'struct localeinfo_struct *'
|   `-ElaboratedType 0x1c005f70ac0 'struct localeinfo_struct' sugar
|     `-RecordType 0x1c005f70920 'struct localeinfo_struct'
|       `-Record 0x1c005f70880 'localeinfo_struct'
|-RecordDecl 0x1c005f70c68 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x1c005f70d20 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1c005f70d98 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x1c005f70e58 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x1c005f70ef0 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x1c005f70f60 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x1c005f71018 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x1c005f70fc0 'struct localerefcount' sugar
|   `-RecordType 0x1c005f70d00 'struct localerefcount'
|     `-Record 0x1c005f70c68 'localerefcount'
|-RecordDecl 0x1c005f801f0 prev 0x1c005f70430 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x1c005f80270 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1c005f802e8 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x1c005f80358 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x1c005f803c8 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x1c005f80438 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x1c005f805f8 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x1c005f80668 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x1c005f806d8 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x1c005f80748 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x1c005f807b8 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x1c005f80828 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x1c005f80880 parent 0x1c00455fef8 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x1c005f80a10 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x1c005f80a80 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x1c005f80af0 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x1c005f80b60 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x1c005f80c00 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x1c005f80c70 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x1c005f80d80 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x1c005f80eb8 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x1c005f80f68 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x1c005f80f10 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x1c005f704d0 'struct threadlocaleinfostruct'
|     `-Record 0x1c005f801f0 'threadlocaleinfostruct'
|-RecordDecl 0x1c005f81000 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:63:1, line:72:9> line:63:8 struct _iobuf definition
| |-MaxFieldAlignmentAttr 0x1c005f810c0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1c005f81138 <line:64:9, col:15> col:15 _ptr 'char *'
| |-FieldDecl 0x1c005f7c1b0 <line:65:9, col:15> col:15 _cnt 'int'
| |-FieldDecl 0x1c005f7c220 <line:66:9, col:15> col:15 _base 'char *'
| |-FieldDecl 0x1c005f7c290 <line:67:9, col:15> col:15 _flag 'int'
| |-FieldDecl 0x1c005f7c300 <line:68:9, col:15> col:15 _file 'int'
| |-FieldDecl 0x1c005f7c370 <line:69:9, col:15> col:15 _charbuf 'int'
| |-FieldDecl 0x1c005f7c3e0 <line:70:9, col:15> col:15 _bufsiz 'int'
| `-FieldDecl 0x1c005f7c450 <line:71:9, col:15> col:15 _tmpfname 'char *'
|-TypedefDecl 0x1c005f7c500 <line:73:1, col:23> col:23 referenced FILE 'struct _iobuf':'struct _iobuf'
| `-ElaboratedType 0x1c005f7c4b0 'struct _iobuf' sugar
|   `-RecordType 0x1c005f810a0 'struct _iobuf'
|     `-Record 0x1c005f81000 '_iobuf'
|-FunctionDecl 0x1c005f7c738 <line:137:9, col:39> col:24 __iob_func 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|-TypedefDecl 0x1c005f7c808 <line:144:1, col:17> col:17 referenced fpos_t 'long long'
| `-BuiltinType 0x1c004560030 'long long'
|-FunctionDecl 0x1c005f7c9e8 <line:175:24, col:65> col:36 _filbuf 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1c005f7c870 <col:52, col:59> col:59 _File 'FILE *'
|-FunctionDecl 0x1c005f7cce0 <line:176:28, col:82> col:40 _flsbuf 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1c005f7cac0 <col:53, col:57> col:57 _Ch 'int'
| `-ParmVarDecl 0x1c005f7cb38 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x1c005f7d090 <line:178:24, col:121> col:39 _fsopen 'FILE *(const char *, const char *, int) __attribute__((cdecl))':'FILE *(const char *, const char *, int)'
| |-ParmVarDecl 0x1c005f7cdc0 <col:54, col:67> col:67 _Filename 'const char *'
| |-ParmVarDecl 0x1c005f7ce40 <col:85, col:98> col:98 _Mode 'const char *'
| `-ParmVarDecl 0x1c005f7cec0 <col:110, col:114> col:114 _ShFlag 'int'
|-FunctionDecl 0x1c005f81370 <line:180:9, col:51> col:22 clearerr 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1c005f81200 <col:39, col:46> col:46 _File 'FILE *'
|-FunctionDecl 0x1c005f815a0 <line:182:28, col:76> col:44 clearerr_s 'errno_t (FILE *) __attribute__((cdecl))':'errno_t (FILE *)'
| `-ParmVarDecl 0x1c005f81460 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x1c005f81750 <line:184:28, col:67> col:40 fclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1c005f81670 <col:55, col:62> col:62 _File 'FILE *'
|-FunctionDecl 0x1c005f81940 <line:185:28, col:55> col:40 _fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1c005f81c38 <line:187:24, col:94> col:39 _fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x1c005f81a10 <col:52, col:56> col:56 _FileHandle 'int'
| `-ParmVarDecl 0x1c005f81a90 <col:76, col:89> col:89 _Mode 'const char *'
|-FunctionDecl 0x1c005f81df0 <line:189:24, col:58> col:36 feof 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1c005f81d10 <col:46, col:53> col:53 _File 'FILE *'
|-FunctionDecl 0x1c005f81fa0 <line:190:24, col:60> col:36 ferror 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1c005f81ec0 <col:48, col:55> col:55 _File 'FILE *'
|-FunctionDecl 0x1c005f82150 <line:191:28, col:71> col:40 fflush 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1c005f82070 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x1c005f88378 <line:192:28, col:66> col:40 fgetc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1c005f88298 <col:54, col:61> col:61 _File 'FILE *'
|-FunctionDecl 0x1c005f88508 <line:193:28, col:54> col:40 _fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1c005f88870 <line:194:28, col:90> col:40 fgetpos 'int (FILE *, fpos_t *) __attribute__((cdecl))':'int (FILE *, fpos_t *)'
| |-ParmVarDecl 0x1c005f885d0 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x1c005f886c8 <col:77, col:86> col:86 _Pos 'fpos_t *'
|-FunctionDecl 0x1c005f88c28 <line:195:28, col:128> col:43 fgets 'char *(char *, int, FILE *) __attribute__((cdecl))':'char *(char *, int, FILE *)'
| |-ParmVarDecl 0x1c005f88950 <col:75, col:82> col:82 _Buf 'char *'
| |-ParmVarDecl 0x1c005f889d0 <col:93, col:97> col:97 _MaxCount 'int'
| `-ParmVarDecl 0x1c005f88a48 <col:116, col:123> col:123 _File 'FILE *'
|-FunctionDecl 0x1c005f88de8 <line:197:24, col:61> col:36 _fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1c005f88d08 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x1c005f890b0 <line:204:24, col:117> col:39 _tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x1c005f88ec0 <col:59, col:72> col:72 _DirName 'const char *'
| `-ParmVarDecl 0x1c005f88f40 <col:93, col:106> col:106 _FilePrefix 'const char *'
|-FunctionDecl 0x1c005f89280 <line:210:28, col:54> col:40 _flushall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1c005f89678 <line:211:72> col:72 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x1c005f89718 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1c005f89780 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1c005f897f8 prev 0x1c005f89678 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:211:134> col:72 fopen 'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x1c005f89450 <col:85, col:98> col:98 _Filename 'const char *'
| |-ParmVarDecl 0x1c005f894d0 <col:116, col:129> col:129 _Mode 'const char *'
| `-DeprecatedAttr 0x1c005f898a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c005f89d20 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:213:28, col:149> col:44 fopen_s 'errno_t (FILE **, const char *, const char *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *)'
| |-ParmVarDecl 0x1c005f89a50 <col:78, col:86> col:86 _File 'FILE **'
| |-ParmVarDecl 0x1c005f89ad0 <col:100, col:113> col:113 _Filename 'const char *'
| `-ParmVarDecl 0x1c005f89b50 <col:131, col:144> col:144 _Mode 'const char *'
|-FunctionDecl 0x1c005f8a040 <line:215:40> col:40 implicit fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x1c005f8a0e0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x1c005f8a148 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1c005f8a1c0 <col:40> Implicit printf 2 3
|-FunctionDecl 0x1c005f85240 prev 0x1c005f8a040 <col:28, col:125> col:40 fprintf 'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1c005f89e00 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1c005f89e80 <col:100, col:113> col:113 _Format 'const char *'
| `-FormatAttr 0x1c005f85338 <col:40> Inherited printf 2 3
|-FunctionDecl 0x1c005f85500 <line:217:28, col:127> col:40 fprintf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1c005f85380 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x1c005f85400 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x1c005f85758 <line:219:28, col:80> col:40 fputc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1c005f855e0 <col:51, col:55> col:55 _Ch 'int'
| `-ParmVarDecl 0x1c005f85658 <col:68, col:75> col:75 _File 'FILE *'
|-FunctionDecl 0x1c005f85988 <line:220:28, col:62> col:40 _fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1c005f85838 <col:55, col:59> col:59 _Ch 'int'
|-FunctionDecl 0x1c005f85c80 <line:221:28, col:92> col:40 fputs 'int (const char *, FILE *) __attribute__((cdecl))':'int (const char *, FILE *)'
| |-ParmVarDecl 0x1c005f85a60 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x1c005f85ad8 <col:80, col:87> col:87 _File 'FILE *'
|-FunctionDecl 0x1c005f86118 <line:222:43> col:43 implicit fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x1c005f861b8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1c005f84230 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1c005f84298 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x1c005f84300 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x1c005f84388 prev 0x1c005f86118 <col:28, col:171> col:43 fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x1c005f85d60 <col:89, col:96> col:96 _DstBuf 'void *'
| |-ParmVarDecl 0x1c005f85dd8 <col:110, col:117> col:117 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c005f85e50 <col:136, col:143> col:143 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c005f85ec8 <col:159, col:166> col:166 _File 'FILE *'
|-FunctionDecl 0x1c005f84890 <line:224:28, col:195> col:43 fread_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1c005f84478 <col:91, col:98> col:98 _DstBuf 'void *'
| |-ParmVarDecl 0x1c005f844f0 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c005f84568 <col:134, col:141> col:141 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c005f845e0 <col:160, col:167> col:167 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c005f84658 <col:183, col:190> col:190 _File 'FILE *'
|-FunctionDecl 0x1c005f84d50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:226:160> col:74 freopen 'FILE *(const char *, const char *, FILE *) __attribute__((cdecl))':'FILE *(const char *, const char *, FILE *)'
| |-ParmVarDecl 0x1c005f84a80 <col:89, col:102> col:102 _Filename 'const char *'
| |-ParmVarDecl 0x1c005f84b00 <col:120, col:133> col:133 _Mode 'const char *'
| |-ParmVarDecl 0x1c005f84b78 <col:148, col:155> col:155 _File 'FILE *'
| `-DeprecatedAttr 0x1c005f84e08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using freopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c005f832c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:228:28, col:176> col:44 freopen_s 'errno_t (FILE **, const char *, const char *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *, FILE *)'
| |-ParmVarDecl 0x1c005f84f50 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x1c005f84fd0 <col:102, col:115> col:115 _Filename 'const char *'
| |-ParmVarDecl 0x1c005f85050 <col:133, col:146> col:146 _Mode 'const char *'
| `-ParmVarDecl 0x1c005f850c8 <col:161, col:168> col:168 _OldFile 'FILE *'
|-FunctionDecl 0x1c005f83670 <line:230:70> col:70 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x1c005f83710 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x1c005f83778 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1c005f837f0 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x1c005f83858 prev 0x1c005f83670 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:230:153> col:70 fscanf 'int (FILE *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x1c005f834a8 <col:85, col:92> col:92 _File 'FILE *'
| |-ParmVarDecl 0x1c005f83528 <col:128, col:141> col:141 _Format 'const char *'
| |-FormatAttr 0x1c005f83a38 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x1c005f83908 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c005f83e78 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:231:201> col:77 _fscanf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c005f83b78 <col:95, col:102> col:102 _File 'FILE *'
| |-ParmVarDecl 0x1c005f83bf8 <col:148, col:161> col:161 _Format 'const char *'
| |-ParmVarDecl 0x1c005f83c90 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1c005f83f30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c005f82210 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:235:28, col:127> col:40 fscanf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1c005f84070 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x1c005f840f0 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x1c005f82500 <line:237:28, col:168> col:40 _fscanf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c005f822e8 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1c005f82368 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1c005f823e0 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c005f82860 <line:239:28, col:94> col:40 fsetpos 'int (FILE *, const fpos_t *) __attribute__((cdecl))':'int (FILE *, const fpos_t *)'
| |-ParmVarDecl 0x1c005f825e0 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x1c005f826b8 <col:75, col:90> col:90 _Pos 'const fpos_t *'
|-FunctionDecl 0x1c005f82c18 <line:240:28, col:103> col:40 fseek 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x1c005f82938 <col:54, col:61> col:61 _File 'FILE *'
| |-ParmVarDecl 0x1c005f829b8 <col:73, col:78> col:78 _Offset 'long'
| `-ParmVarDecl 0x1c005f82a38 <col:92, col:96> col:96 _Origin 'int'
|-FunctionDecl 0x1c005f82e78 <line:241:24, col:63> col:37 ftell 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x1c005f82cf8 <col:51, col:58> col:58 _File 'FILE *'
|-FunctionDecl 0x1c005f8a2d8 <line:243:28, col:110> col:40 _fseeki64 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x1c005f82f48 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1c005f82fc8 <col:77, col:85> col:85 _Offset 'long long'
| `-ParmVarDecl 0x1c005f83048 <col:99, col:103> col:103 _Origin 'int'
|-FunctionDecl 0x1c005f8a538 <line:244:24, col:70> col:40 _ftelli64 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x1c005f8a3b8 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x1c005f8a9f8 <line:246:43> col:43 implicit fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x1c005f8aa98 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1c005f8ab00 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1c005f8ab68 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x1c005f8abd0 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x1c005f8ac58 prev 0x1c005f8a9f8 <col:28, col:159> col:43 fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x1c005f8a640 <col:81, col:94> col:94 _Str 'const void *'
| |-ParmVarDecl 0x1c005f8a6b8 <col:105, col:112> col:112 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c005f8a730 <col:124, col:131> col:131 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c005f8a7a8 <col:147, col:154> col:154 _File 'FILE *'
|-FunctionDecl 0x1c005f8ae20 <line:247:24, col:61> col:36 getc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1c005f8ad40 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x1c005f8afb0 <line:248:24, col:48> col:36 getchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1c005f8b138 <line:249:24, col:53> col:36 _getmaxstdio 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1c005f8c470 <line:251:9, col:84> col:24 gets_s 'char *(char *, rsize_t) __attribute__((cdecl))':'char *(char *, rsize_t)'
| |-ParmVarDecl 0x1c005f8b208 <col:53, col:60> col:60 _Buf 'char *'
| `-ParmVarDecl 0x1c005f8c2c0 <col:71, col:79> col:79 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1c005f8c798 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:254:80 gets 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1c005f8c650 <col:139, col:145> col:145 _Buffer 'char *'
| `-DeprecatedAttr 0x1c005f8c840 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c005f8ca60 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:255:16, col:54> col:28 _getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1c005f8c980 <col:42, col:49> col:49 _File 'FILE *'
|-FunctionDecl 0x1c005f8cc80 <line:258:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x1c005f8cb38 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x1c005f8ce30 <line:261:28, col:68> col:40 _pclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1c005f8cd50 <col:56, col:63> col:63 _File 'FILE *'
|-FunctionDecl 0x1c005f8d080 <line:262:24, col:101> col:39 _popen 'FILE *(const char *, const char *) __attribute__((cdecl))':'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x1c005f8cf08 <col:53, col:66> col:66 _Command 'const char *'
| `-ParmVarDecl 0x1c005f8cf88 <col:83, col:96> col:96 _Mode 'const char *'
|-FunctionDecl 0x1c005f86250 <line:264:40> col:40 implicit printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x1c005f862f0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1c005f86360 <col:40> Implicit printf 1 2
|-FunctionDecl 0x1c005f863c8 prev 0x1c005f86250 <col:28, col:102> col:40 printf 'int (const char *, ...)'
| |-ParmVarDecl 0x1c005f8d160 <col:77, col:90> col:90 _Format 'const char *'
| `-FormatAttr 0x1c005f864b8 <col:40> Inherited printf 1 2
|-FunctionDecl 0x1c005f865e8 <line:266:28, col:104> col:40 printf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1c005f86508 <col:79, col:92> col:92 _Format 'const char *'
|-FunctionDecl 0x1c005f86838 <line:268:28, col:79> col:40 putc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1c005f866c0 <col:50, col:54> col:54 _Ch 'int'
| `-ParmVarDecl 0x1c005f86738 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x1c005f869f8 <line:269:28, col:60> col:40 putchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1c005f86918 <col:53, col:57> col:57 _Ch 'int'
|-FunctionDecl 0x1c005f86c18 <line:270:28, col:69> col:40 puts 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1c005f86ad0 <col:52, col:65> col:65 _Str 'const char *'
|-FunctionDecl 0x1c005f86e68 <line:271:28, col:82> col:40 _putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1c005f86cf0 <col:51, col:55> col:55 _Word 'int'
| `-ParmVarDecl 0x1c005f86d68 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x1c005f87028 <line:274:9, col:57> col:21 remove 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1c005f86f48 <col:35, col:48> col:48 _Filename 'const char *'
|-FunctionDecl 0x1c005fdb010 <line:275:24, col:109> col:36 rename 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1c005f87100 <col:50, col:63> col:63 _OldFilename 'const char *'
| `-ParmVarDecl 0x1c005f87180 <col:84, col:97> col:97 _NewFilename 'const char *'
|-FunctionDecl 0x1c005fdb1d0 <line:276:9, col:58> col:21 _unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1c005fdb0f0 <col:36, col:49> col:49 _Filename 'const char *'
|-FunctionDecl 0x1c005fdb460 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:278:89> col:53 unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x1c005fdb380 <col:67, col:80> col:80 _Filename 'const char *'
| `-DeprecatedAttr 0x1c005fdb508 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _unlink. See online help for details." ""
|-FunctionDecl 0x1c005fdb700 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:281:9, col:49> col:22 rewind 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1c005fdb628 <col:37, col:44> col:44 _File 'FILE *'
|-FunctionDecl 0x1c005fdb890 <line:282:28, col:51> col:40 _rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1c005fdbb38 <line:283:69> col:69 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x1c005fdbbd8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1c005fdbc48 <col:69> Implicit scanf 1 2
|-FunctionDecl 0x1c005fdbcb0 prev 0x1c005fdbb38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:283:129> col:69 scanf 'int (const char *restrict, ...)'
| |-ParmVarDecl 0x1c005fdba20 <col:104, col:117> col:117 _Format 'const char *'
| |-FormatAttr 0x1c005fdbe88 <col:69> Inherited scanf 1 2
| `-DeprecatedAttr 0x1c005fdbd58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c005fd8220 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:284:177> col:76 _scanf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c005fd7fe8 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x1c005fd8060 <col:155, col:165> col:165 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1c005fd82d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _scanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c005fd84f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:288:40, col:116> col:52 scanf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1c005fd8418 <col:91, col:104> col:104 _Format 'const char *'
|-FunctionDecl 0x1c005fd8748 <line:290:40, col:157> col:52 _scanf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c005fd85d0 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x1c005fd8648 <col:135, col:145> col:145 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c005fd8b08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:292:150> col:55 setbuf 'void (FILE *, char *) __attribute__((cdecl))':'void (FILE *, char *)'
| |-ParmVarDecl 0x1c005fd88e0 <col:70, col:77> col:77 _File 'FILE *'
| |-ParmVarDecl 0x1c005fd8960 <col:136, col:143> col:143 _Buffer 'char *'
| `-DeprecatedAttr 0x1c005fd8bb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using setvbuf instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c005fd8de0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:293:28, col:66> col:40 _setmaxstdio 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1c005fd8d00 <col:58, col:62> col:62 _Max 'int'
|-FunctionDecl 0x1c005fd9068 <line:294:28, col:93> col:49 _set_output_format 'unsigned int (unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int)'
| `-ParmVarDecl 0x1c005fd8f20 <col:73, col:86> col:86 _Format 'unsigned int'
|-FunctionDecl 0x1c005fd9250 <line:295:28, col:72> col:49 _get_output_format 'unsigned int (void) __attribute__((cdecl))':'unsigned int (void)'
|-FunctionDecl 0x1c005fd96a0 <line:296:28, col:145> col:40 setvbuf 'int (FILE *, char *, int, size_t) __attribute__((cdecl))':'int (FILE *, char *, int, size_t)'
| |-ParmVarDecl 0x1c005fd9318 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1c005fd9398 <col:99, col:106> col:106 _Buf 'char *'
| |-ParmVarDecl 0x1c005fd9418 <col:117, col:121> col:121 _Mode 'int'
| `-ParmVarDecl 0x1c005fd9490 <col:133, col:140> col:140 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1c005fd9b20 <line:297:40, col:213> col:52 _snprintf_s 'int (char *, size_t, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, ...)'
| |-ParmVarDecl 0x1c005fd9790 <col:93, col:100> col:100 _DstBuf 'char *'
| |-ParmVarDecl 0x1c005fd9808 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c005fd9880 <col:140, col:147> col:147 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c005fd9900 <col:188, col:201> col:201 _Format 'const char *'
|-FunctionDecl 0x1c005fdef80 <line:300:40, col:188> col:52 sprintf_s 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1c005fd9c10 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1c005fd9c88 <col:112, col:119> col:119 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c005fd9d08 <col:163, col:176> col:176 _Format 'const char *'
|-FunctionDecl 0x1c005fdf148 <line:303:24, col:101> col:36 _scprintf 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1c005fdf068 <col:76, col:89> col:89 _Format 'const char *'
|-FunctionDecl 0x1c005fdf520 <line:304:70> col:70 implicit used sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x1c005fdf5c0 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1c005fdf628 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1c005fdf6a0 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x1c005fdf708 prev 0x1c005fdf520 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:304:157> col:70 used sscanf 'int (const char *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x1c005fdf2e0 <col:84, col:97> col:97 _Src 'const char *'
| |-ParmVarDecl 0x1c005fdf360 <col:132, col:145> col:145 _Format 'const char *'
| |-FormatAttr 0x1c005fdf8e8 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x1c005fdf7b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c005fdfcd8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:305:205> col:77 _sscanf_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c005fdf9f8 <col:94, col:107> col:107 _Src 'const char *'
| |-ParmVarDecl 0x1c005fdfa78 <col:152, col:165> col:165 _Format 'const char *'
| |-ParmVarDecl 0x1c005fdfaf0 <col:183, col:193> col:193 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1c005fdfd90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c005fe0090 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:309:40, col:143> col:52 sscanf_s 'int (const char *, const char *, ...) __attribute__((cdecl))':'int (const char *, const char *, ...)'
| |-ParmVarDecl 0x1c005fdfed8 <col:68, col:81> col:81 _Src 'const char *'
| `-ParmVarDecl 0x1c005fdff90 <col:118, col:131> col:131 _Format 'const char *'
|-FunctionDecl 0x1c005fe0388 <line:311:40, col:184> col:52 _sscanf_s_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c005fe0170 <col:71, col:84> col:84 _Src 'const char *'
| |-ParmVarDecl 0x1c005fe01f0 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x1c005fe0268 <col:162, col:172> col:172 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c005fe0818 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:312:217> col:76 _snscanf 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1c005fe0530 <col:121, col:134> col:134 _Src 'const char *'
| |-ParmVarDecl 0x1c005fe05a8 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c005fe0628 <col:192, col:205> col:205 _Format 'const char *'
| `-DeprecatedAttr 0x1c005fe08d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c005fe0ea0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:313:259> col:78 _snscanf_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c005fe0b10 <col:125, col:138> col:138 _Src 'const char *'
| |-ParmVarDecl 0x1c005fe0b88 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c005fe0c08 <col:206, col:219> col:219 _Format 'const char *'
| |-ParmVarDecl 0x1c005fe0c80 <col:237, col:247> col:247 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1c005fe0fa0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c005fe1300 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:314:40, col:197> col:52 _snscanf_s 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1c005fe10e8 <col:99, col:112> col:112 _Src 'const char *'
| |-ParmVarDecl 0x1c005fe1160 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c005fe11e0 <col:172, col:185> col:185 _Format 'const char *'
|-FunctionDecl 0x1c005fe1698 <line:315:40, col:237> col:52 _snscanf_s_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c005fe13e8 <col:101, col:114> col:114 _Src 'const char *'
| |-ParmVarDecl 0x1c005fe1460 <col:125, col:132> col:132 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c005fe14e0 <col:184, col:197> col:197 _Format 'const char *'
| `-ParmVarDecl 0x1c005fe1558 <col:215, col:225> col:225 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c005fe18f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:317:86> col:74 tmpfile 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
| `-DeprecatedAttr 0x1c005fe1998 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpfile_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c005fe1c50 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:319:28, col:96> col:44 tmpfile_s 'errno_t (FILE **) __attribute__((cdecl))':'errno_t (FILE **)'
| `-ParmVarDecl 0x1c005fe1ae0 <col:83, col:91> col:91 _File 'FILE **'
|-FunctionDecl 0x1c005fdcf60 <line:320:28, col:106> col:44 tmpnam_s 'errno_t (char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t)'
| |-ParmVarDecl 0x1c005fe1d28 <col:75, col:82> col:82 _Buf 'char *'
| `-ParmVarDecl 0x1c005fe1da0 <col:93, col:101> col:101 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1c005fdd1e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:323:79 tmpnam 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1c005fdd100 <col:113, col:119> col:119 _Buffer 'char *'
| `-DeprecatedAttr 0x1c005fdd288 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c005fdd548 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:324:28, col:81> col:40 ungetc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1c005fdd3d0 <col:52, col:56> col:56 _Ch 'int'
| `-ParmVarDecl 0x1c005fdd448 <col:69, col:76> col:76 _File 'FILE *'
|-FunctionDecl 0x1c005fdd960 <line:325:40> col:40 implicit vfprintf 'int (FILE *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1c005fdda00 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x1c005fdda68 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1c005fddad0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1c005fddb50 <col:40> Implicit printf 2 0
|-FunctionDecl 0x1c005fddbb8 prev 0x1c005fdd960 <col:28, col:139> col:40 vfprintf 'int (FILE *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1c005fdd620 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x1c005fdd6a0 <col:101, col:114> col:114 _Format 'const char *'
| |-ParmVarDecl 0x1c005fdd718 <col:123, col:131> col:131 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1c005fddcb8 <col:40> Inherited printf 2 0
|-FunctionDecl 0x1c005fd9f30 <line:326:40> col:40 implicit vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1c005fd9fd0 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x1c005fda038 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1c005fda0a0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1c005fda120 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x1c005fda188 prev 0x1c005fd9f30 <col:28, col:138> col:40 vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1c005fddd00 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1c005fddd80 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x1c005fdddf8 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1c005fda288 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x1c005fda4e8 <line:328:28, col:141> col:40 vfprintf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1c005fda2d0 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1c005fda350 <col:103, col:116> col:116 _Format 'const char *'
| `-ParmVarDecl 0x1c005fda3c8 <col:125, col:133> col:133 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c005fda7e0 <line:329:28, col:140> col:40 vfscanf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1c005fda5c8 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1c005fda648 <col:102, col:115> col:115 _Format 'const char *'
| `-ParmVarDecl 0x1c005fda6c0 <col:124, col:132> col:132 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c005fdab28 <line:331:40> col:40 implicit vprintf 'int (const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1c005fdabc8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1c005fdac30 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1c005fdaca8 <col:40> Implicit printf 1 0
|-FunctionDecl 0x1c005fdad10 prev 0x1c005fdab28 <col:28, col:116> col:40 vprintf 'int (const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1c005fda8c8 <col:78, col:91> col:91 _Format 'const char *'
| |-ParmVarDecl 0x1c005fda940 <col:100, col:108> col:108 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1c005fdae08 <col:40> Inherited printf 1 0
|-FunctionDecl 0x1c005fde0a8 <line:332:40> col:40 implicit vscanf 'int (const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1c005fde148 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1c005fde1b0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1c005fde228 <col:40> Implicit scanf 1 0
|-FunctionDecl 0x1c005fde290 prev 0x1c005fde0a8 <col:28, col:115> col:40 vscanf 'int (const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1c005fdae58 <col:77, col:90> col:90 _Format 'const char *'
| |-ParmVarDecl 0x1c005fddf70 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1c005fde388 <col:40> Inherited scanf 1 0
|-FunctionDecl 0x1c005fde550 <line:334:28, col:118> col:40 vprintf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1c005fde3d8 <col:80, col:93> col:93 _Format 'const char *'
| `-ParmVarDecl 0x1c005fde450 <col:102, col:110> col:110 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c005fde7a8 <line:335:28, col:117> col:40 vscanf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1c005fde630 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x1c005fde6a8 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c005fded08 <line:337:77> col:77 implicit vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1c005fdeda8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1c005fdee10 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1c005fdee78 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1c005fdeee0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1c005fe1fb0 <col:77> Implicit printf 3 0
|-FunctionDecl 0x1c005fe2018 prev 0x1c005fded08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:337:218> col:77 vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1c005fde948 <col:111, col:118> col:118 _DstBuf 'char *'
| |-ParmVarDecl 0x1c005fde9c0 <col:132, col:139> col:139 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c005fdea40 <col:180, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x1c005fdeab8 <col:202, col:210> col:210 _ArgList 'va_list':'char *'
| |-FormatAttr 0x1c005fe2208 <col:77> Inherited printf 3 0
| `-DeprecatedAttr 0x1c005fe20d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c005fe2678 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:339:28, col:206> col:40 vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1c005fe2258 <col:77, col:84> col:84 _DstBuf 'char *'
| |-ParmVarDecl 0x1c005fe22d0 <col:98, col:105> col:105 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c005fe2348 <col:120, col:127> col:127 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c005fe23c8 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x1c005fe2440 <col:190, col:198> col:198 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c005fe2ab8 <line:342:40, col:227> col:52 _vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1c005fe2770 <col:94, col:101> col:101 _DstBuf 'char *'
| |-ParmVarDecl 0x1c005fe27e8 <col:115, col:122> col:122 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c005fe2860 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c005fe28e0 <col:189, col:202> col:202 _Format 'const char *'
| `-ParmVarDecl 0x1c005fe2958 <col:211, col:219> col:219 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c005fe2e88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:89 _snprintf 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1c005fe2c70 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x1c005fe2ce8 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c005fe2d68 <col:246, col:260> col:260 _Format 'const char *'
| `-DeprecatedAttr 0x1c005fe2f40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c005fe3430 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:100 _vsnprintf 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1c005fe3180 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x1c005fe31f8 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c005fe3278 <col:246, col:260> col:260 _Format 'const char *'
| |-ParmVarDecl 0x1c005fe32f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x1c005fe34f0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c005fe38e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:349:21, col:183> col:33 vsprintf_s 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1c005fe3638 <col:73, col:80> col:80 _DstBuf 'char *'
| |-ParmVarDecl 0x1c005fe36b0 <col:94, col:101> col:101 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c005fe3730 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x1c005fe37a8 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c005fe3ca8 <line:351:40, col:149> col:52 vsscanf_s 'int (const char *, const char *, va_list) __attribute__((cdecl))':'int (const char *, const char *, va_list)'
| |-ParmVarDecl 0x1c005fe39d8 <col:62, col:75> col:75 _Src 'const char *'
| |-ParmVarDecl 0x1c005fe3a58 <col:111, col:124> col:124 _Format 'const char *'
| `-ParmVarDecl 0x1c005fe3ad0 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c005fdbff0 <line:356:85> col:85 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x1c005fdc090 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1c005fdc0f8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1c005fdc170 <col:85> Implicit printf 2 3
|-FunctionDecl 0x1c005fdc1d8 prev 0x1c005fdbff0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:85 sprintf 'int (char *, const char *, ...)'
| |-ParmVarDecl 0x1c005fe3e50 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x1c005fe3ed0 <col:171, col:185> col:185 _Format 'const char *'
| |-FormatAttr 0x1c005fdc3b8 <col:85> Inherited printf 2 3
| `-DeprecatedAttr 0x1c005fdc288 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c005fdc7e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> col:94 implicit vsprintf 'int (char *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1c005fdc880 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1c005fdc8e8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1c005fdc950 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1c005fdc9d0 <col:94> Implicit printf 2 0
|-FunctionDecl 0x1c005fdca38 prev 0x1c005fdc7e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94 vsprintf 'int (char *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1c005fdc4c8 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x1c005fdc548 <col:171, col:185> col:185 _Format 'const char *'
| |-ParmVarDecl 0x1c005fdc5c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-FormatAttr 0x1c005fdcc20 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> Inherited printf 2 0
| `-DeprecatedAttr 0x1c005fdcaf0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c005fe9020 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:357:40> col:40 implicit vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1c005fe90c0 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1c005fe9128 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1c005fe9190 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1c005fe9210 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x1c005fe9278 prev 0x1c005fe9020 <col:28, col:138> col:40 vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1c005fdcc70 <col:48, col:61> col:61 _srcBuf 'const char *'
| |-ParmVarDecl 0x1c005fdccf0 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x1c005fdcd68 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1c005fe9378 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x1c005fe9540 <line:359:24, col:115> col:36 _vscprintf 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1c005fe93c8 <col:77, col:90> col:90 _Format 'const char *'
| `-ParmVarDecl 0x1c005fe9440 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c005fe9838 <line:360:28, col:170> col:40 _snprintf_c 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1c005fe9620 <col:76, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x1c005fe9698 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c005fe9718 <col:145, col:158> col:158 _Format 'const char *'
|-FunctionDecl 0x1c005fe9bd0 <line:361:28, col:183> col:40 _vsnprintf_c 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1c005fe9920 <col:77, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x1c005fe9998 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c005fe9a18 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x1c005fe9a90 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c005fe9e38 <line:363:28, col:128> col:40 _fprintf_p 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1c005fe9cb8 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x1c005fe9d38 <col:103, col:116> col:116 _Format 'const char *'
|-FunctionDecl 0x1c005fe4fe0 <line:364:28, col:105> col:40 _printf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1c005fe9f18 <col:80, col:93> col:93 _Format 'const char *'
|-FunctionDecl 0x1c005fe52d0 <line:365:28, col:168> col:40 _sprintf_p 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1c005fe50b8 <col:77, col:84> col:84 _Dst 'char *'
| |-ParmVarDecl 0x1c005fe5130 <col:95, col:102> col:102 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c005fe51b0 <col:143, col:156> col:156 _Format 'const char *'
|-FunctionDecl 0x1c005fe55c8 <line:366:28, col:142> col:40 _vfprintf_p 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1c005fe53b0 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1c005fe5430 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x1c005fe54a8 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c005fe5828 <line:367:28, col:119> col:40 _vprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1c005fe56b0 <col:81, col:94> col:94 _Format 'const char *'
| `-ParmVarDecl 0x1c005fe5728 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c005fe5bb8 <line:368:28, col:182> col:40 _vsprintf_p 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1c005fe5908 <col:78, col:85> col:85 _Dst 'char *'
| |-ParmVarDecl 0x1c005fe5980 <col:96, col:103> col:103 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c005fe5a00 <col:144, col:157> col:157 _Format 'const char *'
| `-ParmVarDecl 0x1c005fe5a78 <col:166, col:174> col:174 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c005fe5d88 <line:369:24, col:103> col:36 _scprintf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1c005fe5ca8 <col:78, col:91> col:91 _Format 'const char *'
|-FunctionDecl 0x1c005fe3fd0 <line:370:24, col:117> col:36 _vscprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1c005fe5e60 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x1c005fe5ed8 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c005fe4190 <line:371:9, col:61> col:21 _set_printf_count_output 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1c005fe40b0 <col:51, col:55> col:55 _Value 'int'
|-FunctionDecl 0x1c005fe4320 <line:372:9, col:50> col:21 _get_printf_count_output 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1c005fe4568 <line:374:28, col:143> col:40 _printf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c005fe43f0 <col:90, col:103> col:103 _Format 'const char *'
| `-ParmVarDecl 0x1c005fe4468 <col:121, col:131> col:131 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c005fe47c0 <line:375:28, col:145> col:40 _printf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c005fe4648 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1c005fe46c0 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c005fe4a18 <line:376:28, col:145> col:40 _printf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c005fe48a0 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1c005fe4918 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c005fe4dc8 <line:377:28, col:157> col:40 _vprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c005fe4af8 <col:91, col:104> col:104 _Format 'const char *'
| |-ParmVarDecl 0x1c005fe4b70 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c005fe4be8 <col:141, col:149> col:149 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c005fe6110 <line:378:28, col:159> col:40 _vprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c005fe4eb0 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1c005fe4f28 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c005fe5ff0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c005fe6408 <line:379:28, col:159> col:40 _vprintf_s_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c005fe61f8 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1c005fe6270 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c005fe62e8 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c005fe6700 <line:381:28, col:166> col:40 _fprintf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c005fe64e8 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1c005fe6568 <col:113, col:126> col:126 _Format 'const char *'
| `-ParmVarDecl 0x1c005fe65e0 <col:144, col:154> col:154 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c005fe69f8 <line:382:28, col:168> col:40 _fprintf_p_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c005fe67e0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1c005fe6860 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1c005fe68d8 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c005fe6cf0 <line:383:28, col:168> col:40 _fprintf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c005fe6ad8 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1c005fe6b58 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1c005fe6bd0 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c005fed1c0 <line:384:28, col:147> col:40 _vfprintf_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c005fe6dd0 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1c005fe6e50 <col:81, col:94> col:94 _Format 'const char *'
| |-ParmVarDecl 0x1c005fe6ec8 <col:112, col:122> col:122 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c005fe6f40 <col:131, col:139> col:139 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c005fed558 <line:385:28, col:149> col:40 _vfprintf_p_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c005fed2a8 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1c005fed328 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x1c005fed3a0 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c005fed418 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c005fed8f0 <line:386:28, col:149> col:40 _vfprintf_s_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c005fed640 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1c005fed6c0 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x1c005fed738 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c005fed7b0 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c005fedd88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:388:221> col:78 _sprintf_l 'int (char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c005fedaa0 <col:112, col:119> col:119 _DstBuf 'char *'
| |-ParmVarDecl 0x1c005fedb20 <col:168, col:181> col:181 _Format 'const char *'
| |-ParmVarDecl 0x1c005fedb98 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1c005fede40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c005fe8320 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:389:28, col:211> col:40 _sprintf_p_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c005fedf88 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x1c005fe8010 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c005fe8090 <col:158, col:171> col:171 _Format 'const char *'
| `-ParmVarDecl 0x1c005fe8108 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c005fe86c0 <line:390:40, col:221> col:52 _sprintf_s_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c005fe8410 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x1c005fe8488 <col:111, col:118> col:118 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c005fe8508 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x1c005fe8580 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c005fe8c10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:391:195> col:79 _vsprintf_l 'int (char *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c005fe88b0 <col:114, col:121> col:121 _DstBuf 'char *'
| |-ParmVarDecl 0x1c005fe8930 <col:137, col:150> col:150 _Format 'const char *'
| |-ParmVarDecl 0x1c005fe89a8 <col:168> col:177 '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1c005fe8a20 <col:179, col:187> col:187 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1c005fe8cd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c005fef2b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:392:28, col:225> col:40 _vsprintf_p_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c005fe8e18 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x1c005fe8e90 <col:101, col:108> col:108 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c005fe8f10 <col:159, col:171> col:171 _Format 'const char *'
| |-ParmVarDecl 0x1c005fe8f88 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c005fef080 <col:209, col:217> col:217 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c005fef6f8 <line:393:40, col:235> col:52 _vsprintf_s_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c005fef3b0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1c005fef428 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c005fef4a8 <col:169, col:182> col:182 _Format 'const char *'
| |-ParmVarDecl 0x1c005fef520 <col:200, col:210> col:210 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c005fef598 <col:219, col:227> col:227 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c005fef968 <line:395:28, col:145> col:40 _scprintf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c005fef7f0 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1c005fef868 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c005fefbc0 <line:396:28, col:147> col:40 _scprintf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c005fefa48 <col:94, col:107> col:107 _Format 'const char *'
| `-ParmVarDecl 0x1c005fefac0 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c005fefeb0 <line:397:28, col:159> col:40 _vscprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c005fefca0 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1c005fefd18 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c005fefd90 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c005feb170 <line:398:28, col:161> col:40 _vscprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c005feff98 <col:95, col:108> col:108 _Format 'const char *'
| |-ParmVarDecl 0x1c005ff0010 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c005feb050 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c005feb5c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:400:247> col:79 _snprintf_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c005feb318 <col:115, col:122> col:122 _DstBuf 'char *'
| |-ParmVarDecl 0x1c005feb390 <col:136, col:143> col:143 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c005feb410 <col:194, col:207> col:207 _Format 'const char *'
| |-ParmVarDecl 0x1c005feb488 <col:225, col:235> col:235 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1c005feb688 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c005feba80 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:401:28, col:210> col:40 _snprintf_c_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c005feb7d0 <col:78, col:85> col:85 _DstBuf 'char *'
| |-ParmVarDecl 0x1c005feb848 <col:99, col:106> col:106 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c005feb8c8 <col:157, col:170> col:170 _Format 'const char *'
| `-ParmVarDecl 0x1c005feb940 <col:188, col:198> col:198 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c005ff0090 <line:402:40, col:245> col:52 _snprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c005febb70 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1c005febbe8 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c005febc60 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c005febce0 <col:192, col:205> col:205 _Format 'const char *'
| `-ParmVarDecl 0x1c005febd58 <col:223, col:233> col:233 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c005ff05d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:403:262> col:80 _vsnprintf_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c005ff0288 <col:117, col:124> col:124 _DstBuf 'char *'
| |-ParmVarDecl 0x1c005ff0300 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c005ff0380 <col:196, col:209> col:209 _Format 'const char *'
| |-ParmVarDecl 0x1c005ff03f8 <col:227, col:237> col:237 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1c005ff0470 <col:246, col:254> col:254 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1c005ff0698 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c005ff0b18 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:404:28, col:176> col:40 _vsnprintf_c_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c005ff07e8 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x1c005ff0860 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c005ff08e0 <col:118, col:129> col:130 'const char *'
| |-ParmVarDecl 0x1c005ff0958 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c005ff09d0 <col:160, col:168> col:168 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c005fea090 <line:405:28, col:245> col:40 _vsnprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c005ff0c10 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x1c005ff0c88 <col:101, col:108> col:108 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c005ff0d00 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c005ff0d80 <col:181, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x1c005ff0df8 <col:210, col:220> col:220 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c005ff0e70 <col:229, col:237> col:237 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c005fea450 <line:415:24, col:128> col:39 _wfsopen 'FILE *(const wchar_t *, const wchar_t *, int) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, int)'
| |-ParmVarDecl 0x1c005fea188 <col:55, col:71> col:71 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1c005fea200 <col:89, col:105> col:105 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x1c005fea280 <col:117, col:121> col:121 _ShFlag 'int'
|-FunctionDecl 0x1c005fea6c0 <line:417:28, col:70> col:43 fgetwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1c005fea550 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x1c005fea8d8 <line:418:28, col:58> col:43 _fgetwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x1c005feabb8 <line:419:28, col:88> col:43 fputwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1c005fea9a0 <col:55, col:63> col:63 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1c005feaa18 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x1c005feae00 <line:420:28, col:70> col:43 _fputwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x1c005feac90 <col:59, col:67> col:67 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1c005fee070 <line:421:24, col:65> col:39 getwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1c005feaed0 <col:53, col:60> col:60 _File 'FILE *'
|-FunctionDecl 0x1c005fee1f8 <line:422:24, col:52> col:39 getwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x1c005fee430 <line:423:28, col:87> col:43 putwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1c005fee2c0 <col:54, col:62> col:62 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1c005fee338 <col:75, col:82> col:82 _File 'FILE *'
|-FunctionDecl 0x1c005fee5e0 <line:424:28, col:68> col:43 putwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x1c005fee508 <col:57, col:65> col:65 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1c005fee888 <line:425:28, col:88> col:43 ungetwc 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x1c005fee6b0 <col:56, col:63> col:63 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1c005fee728 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x1c005feec30 <line:427:28, col:141> col:46 fgetws 'wchar_t *(wchar_t *, int, FILE *) __attribute__((cdecl))':'wchar_t *(wchar_t *, int, FILE *)'
| |-ParmVarDecl 0x1c005fee960 <col:82, col:92> col:92 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1c005fee9e0 <col:103, col:107> col:107 _SizeInWords 'int'
| `-ParmVarDecl 0x1c005feea58 <col:129, col:136> col:136 _File 'FILE *'
|-FunctionDecl 0x1c005feef30 <line:428:28, col:96> col:40 fputws 'int (const wchar_t *, FILE *) __attribute__((cdecl))':'int (const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1c005feed10 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1c005feed88 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1c005fec208 <line:429:28, col:124> col:46 _getws_s 'wchar_t *(wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, size_t)'
| |-ParmVarDecl 0x1c005fef008 <col:84, col:94> col:94 _Str 'wchar_t *'
| `-ParmVarDecl 0x1c005fec060 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1c005fec510 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:431:83 _getws 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1c005fec3a0 <col:115, col:124> col:124 _String 'wchar_t *'
| `-DeprecatedAttr 0x1c005fec5b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _getws_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c005fec878 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:432:28, col:74> col:40 _putws 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1c005fec6f8 <col:54, col:70> col:70 _Str 'const wchar_t *'
|-FunctionDecl 0x1c005fecb80 <line:434:28, col:129> col:40 fwprintf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c005fec948 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x1c005fec9c0 <col:101, col:117> col:117 _Format 'const wchar_t *'
|-FunctionDecl 0x1c005fecdd0 <line:436:28, col:131> col:40 fwprintf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c005fecc58 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x1c005feccd0 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x1c005ff20b0 <line:438:28, col:106> col:40 wprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1c005fecea8 <col:78, col:94> col:94 _Format 'const wchar_t *'
|-FunctionDecl 0x1c005ff2260 <line:440:28, col:108> col:40 wprintf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1c005ff2180 <col:80, col:96> col:96 _Format 'const wchar_t *'
|-FunctionDecl 0x1c005ff2410 <line:442:24, col:105> col:36 _scwprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1c005ff2330 <col:77, col:93> col:93 _Format 'const wchar_t *'
|-FunctionDecl 0x1c005ff27a8 <line:443:28, col:143> col:40 vfwprintf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c005ff24e0 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1c005ff2558 <col:102, col:118> col:118 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c005ff25d0 <col:127, col:135> col:135 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c005ff2a98 <line:444:28, col:142> col:40 vfwscanf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c005ff2888 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x1c005ff2900 <col:101, col:117> col:117 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c005ff2978 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c005ff2d88 <line:446:28, col:145> col:40 vfwprintf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c005ff2b78 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1c005ff2bf0 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c005ff2c68 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c005ff30c0 <line:447:28, col:144> col:40 vfwscanf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c005ff2e68 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1c005ff2ee0 <col:103, col:119> col:119 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c005ff2f58 <col:128, col:136> col:136 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c005ff33c0 <line:449:28, col:120> col:40 vwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c005ff31a0 <col:79, col:95> col:95 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c005ff3218 <col:104, col:112> col:112 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c005ff3610 <line:450:28, col:119> col:40 vwscanf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c005ff3498 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c005ff3510 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c005ff3860 <line:452:28, col:122> col:40 vwprintf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c005ff36e8 <col:81, col:97> col:97 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c005ff3760 <col:106, col:114> col:114 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c005ff3ab0 <line:453:28, col:121> col:40 vwscanf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c005ff3938 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c005ff39b0 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c005ff3e68 <line:457:21, col:173> col:33 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c005ff3b88 <col:73, col:83> col:83 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1c005ff3c00 <col:94, col:101> col:101 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c005ff3c78 <col:145, col:161> col:161 _Format 'const wchar_t *'
|-FunctionDecl 0x1c005ff42e0 <line:461:21, col:187> col:33 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c005ff3f48 <col:74, col:84> col:84 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1c005ff3fc0 <col:95, col:102> col:102 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c005ff4038 <col:146, col:162> col:162 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c005ff40d0 <col:171, col:179> col:179 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c005ff4698 <line:462:40, col:156> col:52 vswscanf_s 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c005ff43c8 <col:63, col:79> col:79 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1c005ff4440 <col:115, col:131> col:131 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c005ff44b8 <col:140, col:148> col:148 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c005ff4988 <line:466:28, col:145> col:40 vswscanf 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c005ff4778 <col:49, col:65> col:65 _srcBuf 'const wchar_t *'
| |-ParmVarDecl 0x1c005ff47f0 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c005ff4868 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c005ff4c78 <line:468:28, col:184> col:40 _swprintf_c 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c005ff4a68 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c005ff4ae0 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c005ff4b58 <col:156, col:172> col:172 _Format 'const wchar_t *'
|-FunctionDecl 0x1c005ff5000 <line:469:28, col:198> col:40 _vswprintf_c 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c005ff4d58 <col:82, col:92> col:92 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c005ff4dd0 <col:106, col:113> col:113 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c005ff4e48 <col:157, col:173> col:173 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c005ff4ec0 <col:182, col:190> col:190 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c005ff5490 <line:471:40, col:220> col:52 _snwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c005ff5108 <col:94, col:104> col:104 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c005ff5180 <col:118, col:125> col:125 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c005ff51f8 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c005ff5270 <col:192, col:208> col:208 _Format 'const wchar_t *'
|-FunctionDecl 0x1c005ff5998 <line:473:40, col:234> col:52 _vsnwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c005ff5578 <col:95, col:105> col:105 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c005ff55f0 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c005ff5668 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c005ff56e0 <col:193, col:209> col:209 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c005ff5758 <col:218, col:226> col:226 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c005ff5d58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:89 _snwprintf 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c005ff5b48 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1c005ff5bc0 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c005ff5c38 <col:254, col:271> col:271 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1c005ff5e10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c005ff6320 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:101 _vsnwprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c005ff6010 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1c005ff60f0 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c005ff6168 <col:254, col:271> col:271 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c005ff61e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x1c005ff63e0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c005ff6698 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:480:28, col:132> col:40 _fwprintf_p 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c005ff6520 <col:60, col:67> col:67 _File 'FILE *'
| `-ParmVarDecl 0x1c005ff6598 <col:104, col:120> col:120 _Format 'const wchar_t *'
|-FunctionDecl 0x1c005ff6850 <line:481:28, col:109> col:40 _wprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1c005ff6770 <col:81, col:97> col:97 _Format 'const wchar_t *'
|-FunctionDecl 0x1c005ff6b30 <line:482:28, col:146> col:40 _vfwprintf_p 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c005ff6920 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1c005ff6998 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c005ff6a10 <col:130, col:138> col:138 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c005ff6d88 <line:483:28, col:123> col:40 _vwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c005ff6c10 <col:82, col:98> col:98 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c005ff6c88 <col:107, col:115> col:115 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c005ff9f50 <line:484:28, col:178> col:40 _swprintf_p 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c005ff6e60 <col:78, col:88> col:88 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c005ff6ed8 <col:102, col:109> col:109 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c005ff6f50 <col:150, col:166> col:166 _Format 'const wchar_t *'
|-FunctionDecl 0x1c005ffa2d8 <line:485:28, col:192> col:40 _vswprintf_p 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c005ffa030 <col:79, col:89> col:89 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c005ffa0a8 <col:103, col:110> col:110 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c005ffa120 <col:151, col:167> col:167 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c005ffa198 <col:176, col:184> col:184 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c005ffa4a0 <line:486:24, col:107> col:36 _scwprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1c005ffa3c0 <col:79, col:95> col:95 _Format 'const wchar_t *'
|-FunctionDecl 0x1c005ffa6e8 <line:487:24, col:121> col:36 _vscwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c005ffa570 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c005ffa5e8 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c005ffa9f0 <line:489:28, col:147> col:40 _wprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c005ffa7c0 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c005ffa838 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c005ffac40 <line:490:28, col:149> col:40 _wprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c005ffaac8 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c005ffab40 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c005ffae90 <line:491:28, col:149> col:40 _wprintf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c005ffad18 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c005ffad90 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c005ffb258 <line:492:28, col:161> col:40 _vwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c005ffaf88 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c005ffb000 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c005ffb078 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c005ffb548 <line:493:28, col:163> col:40 _vwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c005ffb338 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c005ffb3b0 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c005ffb428 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c005ffb838 <line:494:28, col:163> col:40 _vwprintf_s_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c005ffb628 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c005ffb6a0 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c005ffb718 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c005ffbbf8 <line:496:28, col:170> col:40 _fwprintf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c005ffb918 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1c005ffb990 <col:114, col:130> col:130 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c005ffba08 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c005ffffb0 <line:497:28, col:172> col:40 _fwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c005ffbcd8 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1c005ffbd50 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c005ffbdc8 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c0060002a0 <line:498:28, col:172> col:40 _fwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c006000090 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1c006000108 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c006000180 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c0060006f0 <line:499:28, col:184> col:40 _vfwprintf_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c006000380 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1c0060003f8 <col:115, col:131> col:131 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c006000470 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c0060004e8 <col:168, col:176> col:176 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c006000a80 <line:500:28, col:186> col:40 _vfwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c0060007d8 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x1c006000850 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c0060008c8 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c006000940 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c006000e10 <line:501:28, col:186> col:40 _vfwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c006000b68 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x1c006000be0 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c006000c58 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c006000cd0 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c005ffe2a0 <line:503:28, col:218> col:40 _swprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c006000ef8 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c005ffdf90 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c005ffe008 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c005ffe080 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c005ffe630 <line:504:28, col:218> col:40 _swprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c005ffe388 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c005ffe400 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c005ffe478 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c005ffe4f0 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c005ffe9c0 <line:505:40, col:228> col:52 _swprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c005ffe718 <col:91, col:101> col:101 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c005ffe790 <col:115, col:122> col:122 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c005ffe808 <col:172, col:188> col:188 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c005ffe880 <col:206, col:216> col:216 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c005ffeec8 <line:506:28, col:232> col:40 used _vswprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c005ffeaa8 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c005ffeb20 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c005ffeb98 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c005ffec10 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c005ffec88 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c005fff308 <line:507:28, col:232> col:40 _vswprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c005ffefc8 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c005fff040 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c005fff0b8 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c005fff130 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c005fff1a8 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c005fff738 <line:508:40, col:242> col:52 _vswprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c005fff3f8 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c005fff470 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c005fff4e8 <col:173, col:189> col:189 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c005fff560 <col:207, col:217> col:217 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c005fff5d8 <col:226, col:234> col:234 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c005fff9a0 <line:510:24, col:145> col:36 _scwprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c005fff828 <col:89, col:105> col:105 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c005fff8a0 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c005fffbf0 <line:511:24, col:147> col:36 _scwprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c005fffa78 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c005fffaf0 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c005fffed8 <line:512:24, col:161> col:36 _vscwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c005fffcc8 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c005fffd40 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c005fffdb8 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c005ffc308 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:514:255> col:80 _snwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c005ffc060 <col:117, col:127> col:127 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c005ffc0d8 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c005ffc150 <col:199, col:215> col:215 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c005ffc1c8 <col:233, col:243> col:243 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1c005ffc3c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c005ffc938 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:515:40, col:252> col:52 _snwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c005ffc510 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c005ffc588 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c005ffc600 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c005ffc678 <col:196, col:212> col:212 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c005ffc6f0 <col:230, col:240> col:240 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c005ffce70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:516:270> col:81 _vsnwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c005ffcb30 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c005ffcba8 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c005ffcc20 <col:201, col:217> col:217 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c005ffcc98 <col:235, col:245> col:245 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1c005ffcd10 <col:254, col:262> col:262 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1c006000fc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c0060015d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:517:40, col:266> col:52 _vsnwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c006001108 <col:93, col:103> col:103 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c006001180 <col:117, col:124> col:124 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c0060011f8 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c006001270 <col:197, col:213> col:213 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c0060012e8 <col:231, col:241> col:241 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c006001360 <col:250, col:258> col:258 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c006001ad0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:110 _swprintf 'int (wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c006001898 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1c006001910 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-DeprecatedAttr 0x1c006001b80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1c006001c98 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1c005ffd1e8 <col:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:134 _vswprintf 'int (wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c006001f50 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1c005ffcf90 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c005ffd008 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x1c005ffd2a0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using vswprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1c005ffd3b8 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1c005ffd958 <col:36, line:1961:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:110 __swprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c005ffd678 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1c005ffd6f0 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c005ffd768 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-DeprecatedAttr 0x1c005ffda10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __swprintf_l_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1c005ffdb30 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1c006006220 <col:36, line:1962:166> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:124 __vswprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c005ffddf0 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1c005ffde68 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c005ffdee0 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1c006006010 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1962:153, col:161> col:161 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x1c0060062e0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vswprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1c006006400 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1c006006708 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:36:1, line:44:1> line:36:21 swprintf 'int (wchar_t *, size_t, const wchar_t *, ...)' static inline
| |-ParmVarDecl 0x1c006006528 <col:53, col:63> col:63 used _String 'wchar_t *'
| |-ParmVarDecl 0x1c0060065a0 <col:72, col:79> col:79 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c006006618 <col:117, col:133> col:133 used _Format 'const wchar_t *'
| `-CompoundStmt 0x1c0060092e0 <line:37:1, line:44:1>
|   |-DeclStmt 0x1c006006850 <line:38:5, col:21>
|   | `-VarDecl 0x1c0060067e8 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x1c0060068e8 <line:39:5, col:13>
|   | `-VarDecl 0x1c006006880 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x1c006006c40 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x1c006006c28 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1c006006b40 <col:34> '<builtin fn type>' Function 0x1c0060069d8 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x1c006006b78 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:40:19> 'va_list':'char *' lvalue Var 0x1c0060067e8 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x1c006006bb0 <col:29> 'const wchar_t *' lvalue ParmVar 0x1c006006618 '_Format' 'const wchar_t *'
|   |-BinaryOperator 0x1c006006f00 <line:41:5, col:67> 'int' '='
|   | |-DeclRefExpr 0x1c006006c70 <col:5> 'int' lvalue Var 0x1c006006880 '_Ret' 'int'
|   | `-CallExpr 0x1c006006e40 <col:12, col:67> 'int'
|   |   |-ImplicitCastExpr 0x1c006006e28 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1c006006ca8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1c005ffeec8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x1c006006e88 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1c006006cc8 <col:27> 'wchar_t *' lvalue ParmVar 0x1c006006528 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x1c006006ea0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1c006006ce8 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1c0060065a0 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x1c006006eb8 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1c006006d08 <col:44> 'const wchar_t *' lvalue ParmVar 0x1c006006618 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x1c006006ed0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|   |   | `-ParenExpr 0x1c006006d90 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x1c006006d68 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x1c006006d28 <col:26> 'int' 0
|   |   `-ImplicitCastExpr 0x1c006006ee8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:41:59> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1c006006db0 <col:59> 'va_list':'char *' lvalue Var 0x1c0060067e8 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x1c006009270 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x1c006009258 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1c0060091a8 <col:34> '<builtin fn type>' Function 0x1c006009040 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x1c0060091e0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:42:17> 'va_list':'char *' lvalue Var 0x1c0060067e8 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x1c0060092d0 <line:43:5, col:12>
|     `-ImplicitCastExpr 0x1c0060092b8 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1c006009298 <col:12> 'int' lvalue Var 0x1c006006880 '_Ret' 'int'
|-FunctionDecl 0x1c0060069d8 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34> col:34 implicit used __builtin_va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x1c006006a78 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x1c006006ae8 <col:34> Implicit
|-FunctionDecl 0x1c006009040 <line:27:34> col:34 implicit used __builtin_va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x1c0060090e0 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x1c006009150 <col:34> Implicit
|-FunctionDecl 0x1c0060095d8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:49:1, line:52:1> line:49:31 vswprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)' static inline
| |-ParmVarDecl 0x1c006009330 <col:64, col:74> col:74 used _String 'wchar_t *'
| |-ParmVarDecl 0x1c0060093a8 <col:83, col:90> col:90 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c006009420 <col:138, col:154> col:154 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c006009498 <col:163, col:171> col:171 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x1c0060098c0 <line:50:1, line:52:1>
|   `-ReturnStmt 0x1c0060098b0 <line:51:5, col:62>
|     `-CallExpr 0x1c0060097f0 <col:12, col:62> 'int'
|       |-ImplicitCastExpr 0x1c0060097d8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1c0060096b0 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1c005ffeec8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x1c006009838 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1c0060096d0 <col:27> 'wchar_t *' lvalue ParmVar 0x1c006009330 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x1c006009850 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x1c0060096f0 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1c0060093a8 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x1c006009868 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1c006009710 <col:44> 'const wchar_t *' lvalue ParmVar 0x1c006009420 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x1c006009880 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|       | `-ParenExpr 0x1c006009798 <col:17, col:27> 'void *'
|       |   `-CStyleCastExpr 0x1c006009770 <col:18, col:26> 'void *' <NullToPointer>
|       |     `-IntegerLiteral 0x1c006009730 <col:26> 'int' 0
|       `-ImplicitCastExpr 0x1c006009898 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:51:59> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x1c0060097b8 <col:59> 'va_list':'char *' lvalue ParmVar 0x1c006009498 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x1c006009b60 <line:60:1, line:68:1> line:60:21 _swprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)' static inline
| |-ParmVarDecl 0x1c0060098e8 <col:56, col:66> col:66 used _String 'wchar_t *'
| |-ParmVarDecl 0x1c006009960 <col:75, col:82> col:82 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c0060099d8 <col:130, col:146> col:146 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c006009a50 <col:155, col:165> col:165 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| `-CompoundStmt 0x1c006002078 <line:61:1, line:68:1>
|   |-DeclStmt 0x1c006009cb0 <line:62:5, col:21>
|   | `-VarDecl 0x1c006009c48 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x1c006009d48 <line:63:5, col:13>
|   | `-VarDecl 0x1c006009ce0 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x1c006009df0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x1c006009dd8 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1c006009d60 <col:34> '<builtin fn type>' Function 0x1c0060069d8 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x1c006009d80 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:64:19> 'va_list':'char *' lvalue Var 0x1c006009c48 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x1c006009db8 <col:29> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1c006009a50 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |-BinaryOperator 0x1c006009ff0 <line:65:5, col:72> 'int' '='
|   | |-DeclRefExpr 0x1c006009e20 <col:5> 'int' lvalue Var 0x1c006009ce0 '_Ret' 'int'
|   | `-CallExpr 0x1c006009f30 <col:12, col:72> 'int'
|   |   |-ImplicitCastExpr 0x1c006009f18 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1c006009e58 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1c005ffeec8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x1c006009f78 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1c006009e78 <col:27> 'wchar_t *' lvalue ParmVar 0x1c0060098e8 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x1c006009f90 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1c006009e98 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1c006009960 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x1c006009fa8 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1c006009eb8 <col:44> 'const wchar_t *' lvalue ParmVar 0x1c0060099d8 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x1c006009fc0 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1c006009ed8 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1c006009a50 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |   `-ImplicitCastExpr 0x1c006009fd8 <col:64> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1c006009ef8 <col:64> 'va_list':'char *' lvalue Var 0x1c006009c48 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x1c006002008 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x1c006001ff0 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1c00600a010 <col:34> '<builtin fn type>' Function 0x1c006009040 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x1c006001fd0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:66:17> 'va_list':'char *' lvalue Var 0x1c006009c48 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x1c006002068 <line:67:5, col:12>
|     `-ImplicitCastExpr 0x1c006002050 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1c006002030 <col:12> 'int' lvalue Var 0x1c006009ce0 '_Ret' 'int'
|-FunctionDecl 0x1c006002408 <line:73:1, line:76:1> line:73:31 _vswprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' static inline
| |-ParmVarDecl 0x1c0060020c8 <col:67, col:77> col:77 used _String 'wchar_t *'
| |-ParmVarDecl 0x1c006002140 <col:86, col:93> col:93 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c0060021b8 <col:141, col:157> col:157 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c006002230 <col:166, col:176> col:176 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1c0060022a8 <col:187, col:195> col:195 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x1c006002690 <line:74:1, line:76:1>
|   `-ReturnStmt 0x1c006002680 <line:75:5, col:67>
|     `-CallExpr 0x1c0060025c0 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x1c0060025a8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1c0060024e8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1c005ffeec8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x1c006002608 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1c006002508 <col:27> 'wchar_t *' lvalue ParmVar 0x1c0060020c8 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x1c006002620 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x1c006002528 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1c006002140 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x1c006002638 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1c006002548 <col:44> 'const wchar_t *' lvalue ParmVar 0x1c0060021b8 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x1c006002650 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|       | `-DeclRefExpr 0x1c006002568 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1c006002230 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|       `-ImplicitCastExpr 0x1c006002668 <col:64> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x1c006002588 <col:64> 'va_list':'char *' lvalue ParmVar 0x1c0060022a8 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x1c0060028d8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:555:24, col:129> col:42 _wtempnam 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1c0060026b8 <col:63, col:79> col:79 _Directory 'const wchar_t *'
| `-ParmVarDecl 0x1c006002730 <col:102, col:118> col:118 _FilePrefix 'const wchar_t *'
|-FunctionDecl 0x1c006002b28 <line:561:24, col:119> col:36 _vscwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c0060029b0 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c006002a28 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c006002e10 <line:562:24, col:159> col:36 _vscwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c006002c00 <col:90, col:106> col:106 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c006002c78 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c006002cf0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c00600a1c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:563:158> col:71 fwscanf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c00600a050 <col:87, col:94> col:94 _File 'FILE *'
| |-ParmVarDecl 0x1c00600a0c8 <col:130, col:146> col:146 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1c00600a278 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c00600a688 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:564:206> col:78 _fwscanf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c00600a478 <col:97, col:104> col:104 _File 'FILE *'
| |-ParmVarDecl 0x1c00600a4f0 <col:150, col:166> col:166 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c00600a568 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1c00600a740 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c00600a9f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:568:28, col:131> col:40 fwscanf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c00600a880 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x1c00600a8f8 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x1c00600ace0 <line:570:28, col:172> col:40 _fwscanf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c00600aad0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1c00600ab48 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c00600abc0 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c006003050 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:571:165> col:71 swscanf 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c00600ae80 <col:86, col:102> col:102 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1c00600aef8 <col:137, col:153> col:153 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1c006003100 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using swscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c0060035d8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:572:213> col:78 _swscanf_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c006003300 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1c006003378 <col:157, col:173> col:173 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c0060033f0 <col:191, col:201> col:201 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1c006003690 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c006003948 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:574:40, col:149> col:52 swscanf_s 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c0060037d0 <col:69, col:84> col:84 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1c006003848 <col:121, col:137> col:137 _Format 'const wchar_t *'
|-FunctionDecl 0x1c006003c30 <line:576:40, col:191> col:52 _swscanf_s_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c006003a20 <col:72, col:88> col:88 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1c006003a98 <col:135, col:151> col:151 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c006003b10 <col:169, col:179> col:179 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c006007108 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:577:219> col:77 _snwscanf 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c006003dd0 <col:117, col:133> col:133 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1c006003e48 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c006003ec0 <col:191, col:207> col:207 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1c0060071c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c006007740 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:578:261> col:79 _snwscanf_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c0060073c0 <col:121, col:137> col:137 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1c006007438 <col:148, col:155> col:155 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c0060074b0 <col:205, col:221> col:221 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c006007528 <col:239, col:249> col:249 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1c006007800 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c006007b50 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:579:40, col:198> col:52 _snwscanf_s 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c006007940 <col:94, col:110> col:110 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1c0060079b8 <col:121, col:128> col:128 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c006007a30 <col:170, col:186> col:186 _Format 'const wchar_t *'
|-FunctionDecl 0x1c006007ed8 <line:580:40, col:238> col:52 _snwscanf_s_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c006007c30 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1c006007ca8 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c006007d20 <col:182, col:198> col:198 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c006007d98 <col:216, col:226> col:226 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c00600b210 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:581:134> col:70 wscanf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| |-ParmVarDecl 0x1c00600b130 <col:106, col:122> col:122 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1c00600b2b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c00600b630 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:582:182> col:77 _wscanf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c00600b4b8 <col:126, col:142> col:142 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c00600b530 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1c00600b6e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c00600b900 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:584:40, col:120> col:52 wscanf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1c00600b820 <col:92, col:108> col:108 _Format 'const wchar_t *'
|-FunctionDecl 0x1c00600bb48 <line:586:40, col:161> col:52 _wscanf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c00600b9d0 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c00600ba48 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c00600be48 <line:589:24, col:99> col:39 _wfdopen 'FILE *(int, const wchar_t *) __attribute__((cdecl))':'FILE *(int, const wchar_t *)'
| |-ParmVarDecl 0x1c00600bc28 <col:53, col:57> col:57 _FileHandle 'int'
| `-ParmVarDecl 0x1c00600bca0 <col:78, col:94> col:94 _Mode 'const wchar_t *'
|-FunctionDecl 0x1c006004198 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:590:144> col:74 _wfopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1c00600bfe0 <col:89, col:105> col:105 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1c006003ff0 <col:123, col:139> col:139 _Mode 'const wchar_t *'
| `-DeprecatedAttr 0x1c006004248 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c006004650 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:591:28, col:157> col:44 _wfopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1c006004390 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x1c006004408 <col:102, col:118> col:118 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x1c006004480 <col:136, col:152> col:152 _Mode 'const wchar_t *'
|-FunctionDecl 0x1c006004ab0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:592:173> col:76 _wfreopen 'FILE *(const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1c0060047f0 <col:93, col:109> col:109 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1c006004868 <col:127, col:143> col:143 _Mode 'const wchar_t *'
| |-ParmVarDecl 0x1c0060048e0 <col:158, col:165> col:165 _OldFile 'FILE *'
| `-DeprecatedAttr 0x1c006004b68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfreopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c00600f0e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:593:28, col:184> col:44 _wfreopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1c006004cb0 <col:82, col:90> col:90 _File 'FILE **'
| |-ParmVarDecl 0x1c006004d28 <col:104, col:120> col:120 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1c006004da0 <col:138, col:154> col:154 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x1c006004e18 <col:169, col:176> col:176 _OldFile 'FILE *'
|-FunctionDecl 0x1c00600f340 <line:597:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x1c00600f1d0 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x1c00600f580 <line:600:24, col:107> col:39 _wpopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1c00600f410 <col:54, col:69> col:69 _Command 'const wchar_t *'
| `-ParmVarDecl 0x1c00600f488 <col:86, col:102> col:102 _Mode 'const wchar_t *'
|-FunctionDecl 0x1c00600f738 <line:602:9, col:62> col:21 _wremove 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1c00600f658 <col:37, col:53> col:53 _Filename 'const wchar_t *'
|-FunctionDecl 0x1c00600fa28 <line:603:28, col:127> col:44 _wtmpnam_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1c00600f808 <col:84, col:94> col:94 _DstBuf 'wchar_t *'
| `-ParmVarDecl 0x1c00600f880 <col:108, col:115> col:115 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1c00600fc98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:605:82 _wtmpnam 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1c00600fbc0 <col:118, col:127> col:127 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x1c00600fd40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wtmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c00600ff58 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:607:28, col:78> col:43 _fgetwc_nolock 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1c00600fe80 <col:66, col:73> col:73 _File 'FILE *'
|-FunctionDecl 0x1c0060101a8 <line:608:28, col:96> col:43 _fputwc_nolock 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1c006010028 <col:63, col:71> col:71 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1c0060100b0 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1c0060103f0 <line:609:28, col:96> col:43 _ungetwc_nolock 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x1c006010280 <col:64, col:71> col:71 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1c0060102f8 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1c0060105a0 <line:670:9, col:53> col:22 _lock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1c0060104c8 <col:41, col:48> col:48 _File 'FILE *'
|-FunctionDecl 0x1c006010748 <line:671:9, col:55> col:22 _unlock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1c006010670 <col:43, col:50> col:50 _File 'FILE *'
|-FunctionDecl 0x1c0060108f8 <line:673:28, col:75> col:40 _fclose_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1c006010818 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x1c006010aa8 <line:674:28, col:79> col:40 _fflush_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1c0060109c8 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x1c006010e20 <line:675:28, col:179> col:43 _fread_nolock 'size_t (void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1c006010b80 <col:97, col:104> col:104 _DstBuf 'void *'
| |-ParmVarDecl 0x1c006010bf8 <col:118, col:125> col:125 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c006010c70 <col:144, col:151> col:151 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c006010ce8 <col:167, col:174> col:174 _File 'FILE *'
|-FunctionDecl 0x1c006011290 <line:676:28, col:203> col:43 _fread_nolock_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1c006010f10 <col:99, col:106> col:106 _DstBuf 'void *'
| |-ParmVarDecl 0x1c006010f88 <col:120, col:127> col:127 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c006011000 <col:142, col:149> col:149 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c0060110c0 <col:168, col:175> col:175 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c006011138 <col:191, col:198> col:198 _File 'FILE *'
|-FunctionDecl 0x1c0060115a0 <line:677:28, col:111> col:40 _fseek_nolock 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x1c006011380 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1c006011400 <col:81, col:86> col:86 _Offset 'long'
| `-ParmVarDecl 0x1c006011480 <col:100, col:104> col:104 _Origin 'int'
|-FunctionDecl 0x1c006011760 <line:678:24, col:71> col:37 _ftell_nolock 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x1c006011680 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x1c006011a50 <line:679:28, col:117> col:40 _fseeki64_nolock 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x1c006011830 <col:65, col:72> col:72 _File 'FILE *'
| |-ParmVarDecl 0x1c0060118b0 <col:84, col:92> col:92 _Offset 'long long'
| `-ParmVarDecl 0x1c006011930 <col:106, col:110> col:110 _Origin 'int'
|-FunctionDecl 0x1c006011c10 <line:680:24, col:77> col:40 _ftelli64_nolock 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x1c006011b30 <col:65, col:72> col:72 _File 'FILE *'
|-FunctionDecl 0x1c006011f88 <line:681:28, col:170> col:43 _fwrite_nolock 'size_t (const void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (const void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1c006011ce8 <col:89, col:102> col:102 _DstBuf 'const void *'
| |-ParmVarDecl 0x1c006011d60 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c006011dd8 <col:135, col:142> col:142 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c006011e50 <col:158, col:165> col:165 _File 'FILE *'
|-FunctionDecl 0x1c00600d1f8 <line:682:28, col:89> col:40 _ungetc_nolock 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1c00600d080 <col:60, col:64> col:64 _Ch 'int'
| `-ParmVarDecl 0x1c00600d0f8 <col:77, col:84> col:84 _File 'FILE *'
|-FunctionDecl 0x1c00600d530 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:709:136> col:57 tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x1c00600d3b0 <col:76, col:89> col:89 _Directory 'const char *'
| |-ParmVarDecl 0x1c00600d430 <col:112, col:125> col:125 _FilePrefix 'const char *'
| `-DeprecatedAttr 0x1c00600d5e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tempnam. See online help for details." ""
|-FunctionDecl 0x1c00600d898 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:715:89> col:75 fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1c00600d938 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcloseall. See online help for details." ""
|-FunctionDecl 0x1c00600dc78 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:716:127> col:71 fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x1c00600db00 <col:83, col:87> col:87 _FileHandle 'int'
| |-ParmVarDecl 0x1c00600db80 <col:107, col:120> col:120 _Format 'const char *'
| `-DeprecatedAttr 0x1c00600dd28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fdopen. See online help for details." ""
|-FunctionDecl 0x1c00600c070 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:717:87> col:74 fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1c00600c110 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fgetchar. See online help for details." ""
|-FunctionDecl 0x1c00600c3b0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:718:92> col:68 fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x1c00600c2d0 <col:80, col:87> col:87 _File 'FILE *'
| `-DeprecatedAttr 0x1c00600c458 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fileno. See online help for details." ""
|-FunctionDecl 0x1c00600c6d8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:719:87> col:74 flushall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1c00600c778 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _flushall. See online help for details." ""
|-FunctionDecl 0x1c00600ca20 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:720:95> col:74 fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| |-ParmVarDecl 0x1c00600c940 <col:88, col:92> col:92 _Ch 'int'
| `-DeprecatedAttr 0x1c00600cac8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fputchar. See online help for details." ""
|-FunctionDecl 0x1c00600cda8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:721:91> col:66 getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x1c00600ccc8 <col:79, col:86> col:86 _File 'FILE *'
| `-DeprecatedAttr 0x1c00600ce50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _getw. See online help for details." ""
|-FunctionDecl 0x1c006014268 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:722:109> col:70 putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1c0060140f0 <col:80, col:84> col:84 _Ch 'int'
| |-ParmVarDecl 0x1c006014168 <col:97, col:104> col:104 _File 'FILE *'
| `-DeprecatedAttr 0x1c006014318 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putw. See online help for details." ""
|-FunctionDecl 0x1c0060145d8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:723:77> col:67 rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1c006014678 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _rmtmp. See online help for details." ""
|-FunctionDecl 0x1c0060148b0 <D:\Microsoft Visual Studio 12.0\VC\include\ctype.h:49:9, col:58> col:40 __pctype_func 'const unsigned short *(void) __attribute__((cdecl))':'const unsigned short *(void)'
|-VarDecl 0x1c006014980 <line:51:9, col:38> col:38 _pctype 'const unsigned short *' extern
|-VarDecl 0x1c006014a80 <line:62:9, col:45> col:37 _wctype 'const unsigned short []' extern
|-FunctionDecl 0x1c006014c78 <line:73:9, col:53> col:34 __pwctype_func 'const wctype_t *(void) __attribute__((cdecl))':'const wctype_t *(void)'
|-VarDecl 0x1c006014d40 <line:75:9, col:32> col:32 _pwctype 'const wctype_t *' extern
|-FunctionDecl 0x1c006014fc0 <line:119:24, col:72> col:36 _isctype 'int (int, int) __attribute__((cdecl))':'int (int, int)'
| |-ParmVarDecl 0x1c006014dd8 <col:50, col:54> col:54 _C 'int'
| `-ParmVarDecl 0x1c006014e58 <col:63, col:67> col:67 _Type 'int'
|-FunctionDecl 0x1c0060133b8 <line:120:24, col:102> col:36 _isctype_l 'int (int, int, _locale_t) __attribute__((cdecl))':'int (int, int, _locale_t)'
| |-ParmVarDecl 0x1c0060130e0 <col:52, col:56> col:56 _C 'int'
| |-ParmVarDecl 0x1c006013160 <col:65, col:69> col:69 _Type 'int'
| `-ParmVarDecl 0x1c0060131d8 <col:85, col:95> col:95 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c006013580 <line:121:55> col:55 implicit isalpha 'int (int)' extern
| |-ParmVarDecl 0x1c006013620 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1c006013690 <col:55> Implicit
| `-PureAttr 0x1c0060136e8 <col:55> Implicit
|-FunctionDecl 0x1c006013710 prev 0x1c006013580 <col:43, col:74> col:55 isalpha 'int (int)'
| |-ParmVarDecl 0x1c0060134a0 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x1c006013800 <col:55> Inherited Implicit
| `-PureAttr 0x1c006013828 <col:55> Inherited Implicit
|-FunctionDecl 0x1c006013a90 <line:122:24, col:86> col:36 _isalpha_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1c006013868 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1c0060138e0 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c006013c50 <line:123:55> col:55 implicit isupper 'int (int)' extern
| |-ParmVarDecl 0x1c006013cf0 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1c006013d60 <col:55> Implicit
| `-PureAttr 0x1c006013db8 <col:55> Implicit
|-FunctionDecl 0x1c006013de0 prev 0x1c006013c50 <col:43, col:74> col:55 isupper 'int (int)'
| |-ParmVarDecl 0x1c006013b70 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x1c006013ed0 <col:55> Inherited Implicit
| `-PureAttr 0x1c006013ef8 <col:55> Inherited Implicit
|-FunctionDecl 0x1c006017120 <line:124:24, col:86> col:36 _isupper_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1c006013f38 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1c006013fb0 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c0060172e0 <line:125:55> col:55 implicit islower 'int (int)' extern
| |-ParmVarDecl 0x1c006017380 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1c0060173f0 <col:55> Implicit
| `-PureAttr 0x1c006017448 <col:55> Implicit
|-FunctionDecl 0x1c006017470 prev 0x1c0060172e0 <col:43, col:74> col:55 islower 'int (int)'
| |-ParmVarDecl 0x1c006017200 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x1c006017560 <col:55> Inherited Implicit
| `-PureAttr 0x1c006017588 <col:55> Inherited Implicit
|-FunctionDecl 0x1c006017740 <line:126:24, col:86> col:36 _islower_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1c0060175c8 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1c006017640 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c006017900 <line:127:55> col:55 implicit isdigit 'int (int)' extern
| |-ParmVarDecl 0x1c0060179a0 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1c006017a10 <col:55> Implicit
| `-PureAttr 0x1c006017a68 <col:55> Implicit
|-FunctionDecl 0x1c006017a90 prev 0x1c006017900 <col:43, col:74> col:55 isdigit 'int (int)'
| |-ParmVarDecl 0x1c006017820 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x1c006017b80 <col:55> Inherited Implicit
| `-PureAttr 0x1c006017ba8 <col:55> Inherited Implicit
|-FunctionDecl 0x1c006017d60 <line:128:24, col:86> col:36 _isdigit_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1c006017be8 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1c006017c60 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c006017f20 <line:129:36> col:36 implicit isxdigit 'int (int)' extern
| |-ParmVarDecl 0x1c006017fc0 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1c006018030 <col:36> Implicit
| `-PureAttr 0x1c006018088 <col:36> Implicit
|-FunctionDecl 0x1c006016110 prev 0x1c006017f20 <col:24, col:56> col:36 isxdigit 'int (int)'
| |-ParmVarDecl 0x1c006017e40 <col:50, col:54> col:54 _C 'int'
| |-NoThrowAttr 0x1c006016200 <col:36> Inherited Implicit
| `-PureAttr 0x1c006016228 <col:36> Inherited Implicit
|-FunctionDecl 0x1c0060163e0 <line:130:24, col:87> col:36 _isxdigit_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1c006016268 <col:53, col:57> col:57 _C 'int'
| `-ParmVarDecl 0x1c0060162e0 <col:70, col:80> col:80 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c0060165a0 <line:131:55> col:55 implicit isspace 'int (int)' extern
| |-ParmVarDecl 0x1c006016640 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1c0060166b0 <col:55> Implicit
| `-PureAttr 0x1c006016708 <col:55> Implicit
|-FunctionDecl 0x1c006016730 prev 0x1c0060165a0 <col:43, col:74> col:55 isspace 'int (int)'
| |-ParmVarDecl 0x1c0060164c0 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x1c006016820 <col:55> Inherited Implicit
| `-PureAttr 0x1c006016848 <col:55> Inherited Implicit
|-FunctionDecl 0x1c006016a00 <line:132:24, col:86> col:36 _isspace_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1c006016888 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1c006016900 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c006016bc0 <line:133:36> col:36 implicit ispunct 'int (int)' extern
| |-ParmVarDecl 0x1c006016c60 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1c006016cd0 <col:36> Implicit
| `-PureAttr 0x1c006016d28 <col:36> Implicit
|-FunctionDecl 0x1c006016d50 prev 0x1c006016bc0 <col:24, col:55> col:36 ispunct 'int (int)'
| |-ParmVarDecl 0x1c006016ae0 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x1c006016e40 <col:36> Inherited Implicit
| `-PureAttr 0x1c006016e68 <col:36> Inherited Implicit
|-FunctionDecl 0x1c006017020 <line:134:24, col:86> col:36 _ispunct_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1c006016ea8 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1c006016f20 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c006026150 <line:135:36> col:36 implicit isblank 'int (int)' extern
| |-ParmVarDecl 0x1c0060261f0 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1c006026260 <col:36> Implicit
| `-PureAttr 0x1c0060262b8 <col:36> Implicit
|-FunctionDecl 0x1c0060262e0 prev 0x1c006026150 <col:24, col:55> col:36 isblank 'int (int)'
| |-ParmVarDecl 0x1c006026070 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x1c0060263d0 <col:36> Inherited Implicit
| `-PureAttr 0x1c0060263f8 <col:36> Inherited Implicit
|-FunctionDecl 0x1c0060265b0 <line:136:24, col:86> col:36 _isblank_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1c006026438 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1c0060264b0 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c006026770 <line:137:55> col:55 implicit isalnum 'int (int)' extern
| |-ParmVarDecl 0x1c006026810 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1c006026880 <col:55> Implicit
| `-PureAttr 0x1c0060268d8 <col:55> Implicit
|-FunctionDecl 0x1c006026900 prev 0x1c006026770 <col:43, col:74> col:55 isalnum 'int (int)'
| |-ParmVarDecl 0x1c006026690 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x1c0060269f0 <col:55> Inherited Implicit
| `-PureAttr 0x1c006026a18 <col:55> Inherited Implicit
|-FunctionDecl 0x1c006026bd0 <line:138:24, col:86> col:36 _isalnum_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1c006026a58 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1c006026ad0 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c006026d90 <line:139:36> col:36 implicit isprint 'int (int)' extern
| |-ParmVarDecl 0x1c006026e30 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1c006026ea0 <col:36> Implicit
| `-PureAttr 0x1c006026ef8 <col:36> Implicit
|-FunctionDecl 0x1c006026f20 prev 0x1c006026d90 <col:24, col:55> col:36 isprint 'int (int)'
| |-ParmVarDecl 0x1c006026cb0 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x1c006027010 <col:36> Inherited Implicit
| `-PureAttr 0x1c006027038 <col:36> Inherited Implicit
|-FunctionDecl 0x1c0060221c0 <line:140:24, col:86> col:36 _isprint_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1c006022048 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1c0060220c0 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c006022380 <line:141:36> col:36 implicit isgraph 'int (int)' extern
| |-ParmVarDecl 0x1c006022420 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1c006022490 <col:36> Implicit
| `-PureAttr 0x1c0060224e8 <col:36> Implicit
|-FunctionDecl 0x1c006022510 prev 0x1c006022380 <col:24, col:55> col:36 isgraph 'int (int)'
| |-ParmVarDecl 0x1c0060222a0 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x1c006022600 <col:36> Inherited Implicit
| `-PureAttr 0x1c006022628 <col:36> Inherited Implicit
|-FunctionDecl 0x1c0060227e0 <line:142:24, col:86> col:36 _isgraph_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1c006022668 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1c0060226e0 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c0060229a0 <line:143:36> col:36 implicit iscntrl 'int (int)' extern
| |-ParmVarDecl 0x1c006022a40 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1c006022ab0 <col:36> Implicit
| `-PureAttr 0x1c006022b08 <col:36> Implicit
|-FunctionDecl 0x1c006022b30 prev 0x1c0060229a0 <col:24, col:55> col:36 iscntrl 'int (int)'
| |-ParmVarDecl 0x1c0060228c0 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x1c006022c20 <col:36> Inherited Implicit
| `-PureAttr 0x1c006022c48 <col:36> Inherited Implicit
|-FunctionDecl 0x1c006022e00 <line:144:24, col:86> col:36 _iscntrl_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1c006022c88 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1c006022d00 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c006024050 <line:145:55> col:55 implicit toupper 'int (int)' extern
| |-ParmVarDecl 0x1c0060240f0 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1c006024160 <col:55> Implicit
| `-PureAttr 0x1c0060241b8 <col:55> Implicit
|-FunctionDecl 0x1c0060241e0 prev 0x1c006024050 <col:43, col:74> col:55 toupper 'int (int)'
| |-ParmVarDecl 0x1c006022ee0 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x1c0060242d0 <col:55> Inherited Implicit
| `-PureAttr 0x1c0060242f8 <col:55> Inherited Implicit
|-FunctionDecl 0x1c006024418 <line:146:55> col:55 implicit tolower 'int (int)' extern
| |-ParmVarDecl 0x1c0060244b8 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1c006024528 <col:55> Implicit
| `-PureAttr 0x1c006024580 <col:55> Implicit
|-FunctionDecl 0x1c0060245a8 prev 0x1c006024418 <col:43, col:74> col:55 tolower 'int (int)'
| |-ParmVarDecl 0x1c006024338 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x1c006024698 <col:55> Inherited Implicit
| `-PureAttr 0x1c0060246c0 <col:55> Inherited Implicit
|-FunctionDecl 0x1c0060247e0 <line:147:43, col:75> col:55 _tolower 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1c006024700 <col:69, col:73> col:73 _C 'int'
|-FunctionDecl 0x1c006024a30 <line:148:24, col:86> col:36 _tolower_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1c0060248b8 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1c006024930 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c006024bf0 <line:149:43, col:75> col:55 _toupper 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1c006024b10 <col:69, col:73> col:73 _C 'int'
|-FunctionDecl 0x1c006024e40 <line:150:24, col:86> col:36 _toupper_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1c006024cc8 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1c006024d40 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c006027080 <line:151:24, col:57> col:36 __isascii 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1c006024f20 <col:51, col:55> col:55 _C 'int'
|-FunctionDecl 0x1c006027238 <line:152:24, col:57> col:36 __toascii 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1c006027158 <col:51, col:55> col:55 _C 'int'
|-FunctionDecl 0x1c0060273f0 <line:153:24, col:57> col:36 __iscsymf 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1c006027310 <col:51, col:55> col:55 _C 'int'
|-FunctionDecl 0x1c0060275a8 <line:154:24, col:56> col:36 __iscsym 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1c0060274c8 <col:50, col:54> col:54 _C 'int'
|-FunctionDecl 0x1c0060277f8 <line:164:24, col:59> col:36 iswalpha 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1c006027678 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1c006027af0 <line:165:24, col:90> col:36 _iswalpha_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1c0060278c8 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1c006027940 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c006027ca8 <line:166:24, col:59> col:36 iswupper 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1c006027bc8 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1c006027ef0 <line:167:24, col:90> col:36 _iswupper_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1c006027d78 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1c006027df0 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c006025098 <line:168:24, col:59> col:36 iswlower 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1c006027fc8 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1c0060252e0 <line:169:24, col:90> col:36 _iswlower_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1c006025168 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1c0060251e0 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c006025498 <line:170:24, col:59> col:36 iswdigit 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1c0060253b8 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1c0060256e0 <line:171:24, col:90> col:36 _iswdigit_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1c006025568 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1c0060255e0 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c006025898 <line:172:24, col:60> col:36 iswxdigit 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1c0060257b8 <col:51, col:58> col:58 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1c006025ae0 <line:173:24, col:91> col:36 _iswxdigit_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1c006025968 <col:54, col:61> col:61 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1c0060259e0 <col:74, col:84> col:84 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c006025c98 <line:174:24, col:59> col:36 iswspace 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1c006025bb8 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1c006025ee0 <line:175:24, col:90> col:36 _iswspace_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1c006025d68 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1c006025de0 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c006021058 <line:176:24, col:59> col:36 iswpunct 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1c006025fb8 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1c0060212a0 <line:177:24, col:90> col:36 _iswpunct_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1c006021128 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1c0060211a0 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c006021458 <line:178:24, col:59> col:36 iswblank 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1c006021378 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1c0060216a0 <line:179:24, col:90> col:36 _iswblank_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1c006021528 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1c0060215a0 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c006021858 <line:180:24, col:59> col:36 iswalnum 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1c006021778 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1c006021aa0 <line:181:24, col:90> col:36 _iswalnum_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1c006021928 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1c0060219a0 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c006021c58 <line:182:24, col:59> col:36 iswprint 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1c006021b78 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1c006021ea0 <line:183:24, col:90> col:36 _iswprint_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1c006021d28 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1c006021da0 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c00602a0e8 <line:184:24, col:59> col:36 iswgraph 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1c006021f78 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1c00602a330 <line:185:24, col:90> col:36 _iswgraph_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1c00602a1b8 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1c00602a230 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c00602a4e8 <line:186:24, col:59> col:36 iswcntrl 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1c00602a408 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1c00602a730 <line:187:24, col:90> col:36 _iswcntrl_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1c00602a5b8 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1c00602a630 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c00602a8e8 <line:188:24, col:59> col:36 iswascii 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1c00602a808 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1c00602ab00 <line:190:24, col:62> col:39 towupper 'wint_t (wint_t) __attribute__((cdecl))':'wint_t (wint_t)'
| `-ParmVarDecl 0x1c00602a9b8 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1c00602ade8 <line:191:24, col:93> col:39 _towupper_l 'wint_t (wint_t, _locale_t) __attribute__((cdecl))':'wint_t (wint_t, _locale_t)'
| |-ParmVarDecl 0x1c00602abd0 <col:56, col:63> col:63 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1c00602ac48 <col:76, col:86> col:86 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c00602af98 <line:192:24, col:62> col:39 towlower 'wint_t (wint_t) __attribute__((cdecl))':'wint_t (wint_t)'
| `-ParmVarDecl 0x1c00602aec0 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1c0060231b0 <line:193:24, col:93> col:39 _towlower_l 'wint_t (wint_t, _locale_t) __attribute__((cdecl))':'wint_t (wint_t, _locale_t)'
| |-ParmVarDecl 0x1c006023040 <col:56, col:63> col:63 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1c0060230b8 <col:76, col:86> col:86 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c0060234b0 <line:194:24, col:80> col:36 iswctype 'int (wint_t, wctype_t) __attribute__((cdecl))':'int (wint_t, wctype_t)'
| |-ParmVarDecl 0x1c006023288 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1c006023300 <col:66, col:75> col:75 _Type 'wctype_t':'unsigned short'
|-FunctionDecl 0x1c006023858 <line:195:24, col:111> col:36 _iswctype_l 'int (wint_t, wctype_t, _locale_t) __attribute__((cdecl))':'int (wint_t, wctype_t, _locale_t)'
| |-ParmVarDecl 0x1c006023588 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| |-ParmVarDecl 0x1c006023600 <col:69, col:78> col:78 _Type 'wctype_t':'unsigned short'
| `-ParmVarDecl 0x1c006023678 <col:94, col:104> col:104 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c006023a18 <line:197:24, col:61> col:36 __iswcsymf 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1c006023938 <col:52, col:59> col:59 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1c006023c60 <line:198:24, col:90> col:36 _iswcsymf_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1c006023ae8 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1c006023b60 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c006023e18 <line:199:24, col:60> col:36 __iswcsym 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1c006023d38 <col:51, col:58> col:58 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1c00602b100 <line:200:24, col:89> col:36 _iswcsym_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1c006023ee8 <col:52, col:59> col:59 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1c006023f60 <col:72, col:82> col:82 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c00602b2c0 <line:203:24, col:58> col:36 isleadbyte 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1c00602b1e0 <col:52, col:56> col:56 _C 'int'
|-FunctionDecl 0x1c00602b510 <line:204:24, col:89> col:36 _isleadbyte_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1c00602b398 <col:55, col:59> col:59 _C 'int'
| `-ParmVarDecl 0x1c00602b410 <col:72, col:82> col:82 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c00602b820 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\ctype.h:205:90> col:45 is_wctype 'int (wint_t, wctype_t) __attribute__((cdecl))':'int (wint_t, wctype_t)'
| |-ParmVarDecl 0x1c00602b6a8 <col:60, col:67> col:67 _C 'wint_t':'unsigned short'
| |-ParmVarDecl 0x1c00602b720 <col:76, col:85> col:85 _Type 'wctype_t':'unsigned short'
| `-DeprecatedAttr 0x1c00602b8d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using iswctype instead. See online help for details." ""
|-VarDecl 0x1c00602ba18 <D:\Microsoft Visual Studio 12.0\VC\include\ctype.h:235:9, col:20> col:20 __mb_cur_max 'int' extern
|-FunctionDecl 0x1c00602bb68 <line:239:9, col:44> col:21 ___mb_cur_max_func 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1c00602bd98 <line:240:9, col:51> col:21 ___mb_cur_max_l_func 'int (_locale_t) __attribute__((cdecl))':'int (_locale_t)'
| `-ParmVarDecl 0x1c00602bc30 <col:42> col:51 '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c00602bfc0 <.//openssl//file_jk/before\crypto\x509v3/ext_dat.h:10:1, col:47> col:5 name_cmp 'int (const char *, const char *)'
| |-ParmVarDecl 0x1c00602be70 <col:14, col:26> col:26 name 'const char *'
| `-ParmVarDecl 0x1c00602bef0 <col:32, col:44> col:44 cmp 'const char *'
|-VarDecl 0x1c006033140 <line:12:1, col:32> col:32 invalid v3_bcons 'const int' extern
|-VarDecl 0x1c0060331c0 <line:13:1, col:32> col:32 invalid v3_pkey_usage_period 'const int' extern
|-VarDecl 0x1c006033310 <line:14:1, <invalid sloc>> col:32 invalid v3_ns_ia5_list 'const int [8]' extern
|-VarDecl 0x1c0060333b8 <line:15:1, col:32> col:32 invalid v3_crl_num 'const int' extern
|-VarDecl 0x1c006033438 <line:16:1, col:32> col:32 invalid v3_delta_crl 'const int' extern
|-VarDecl 0x1c0060334b8 <line:17:1, col:32> col:32 invalid v3_ocsp_nonce 'const int' extern
|-VarDecl 0x1c006033538 <line:18:1, col:32> col:32 invalid v3_ocsp_crlid 'const int' extern
|-VarDecl 0x1c0060335b8 <line:19:1, col:32> col:32 invalid v3_crl_hold 'const int' extern
|-VarDecl 0x1c006033638 <line:20:1, col:32> col:32 invalid v3_policy_mappings 'const int' extern
|-VarDecl 0x1c0060336b8 <line:21:1, col:32> col:32 invalid v3_name_constraints 'const int' extern
|-VarDecl 0x1c006033738 <line:22:1, col:32> col:32 invalid v3_addr 'const int' extern
|-VarDecl 0x1c006033880 <line:23:1, <invalid sloc>> col:32 invalid v3_ct_scts 'const int [3]' extern
|-VarDecl 0x1c006033900 <line:24:1, col:32> col:32 invalid v3_tls_feature 'const int' extern
|-FunctionDecl 0x1c006033a30 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:22:1, col:37> col:14 strip_spaces 'char *(char *)' static
| `-ParmVarDecl 0x1c006033980 <col:27, col:33> col:33 name 'char *'
|-FunctionDecl 0x1c006033cc0 <line:23:1, col:64> col:12 sk_strcmp 'int (const char *const *, const char *const *)' static
| |-ParmVarDecl 0x1c006033b30 <col:22, col:41> col:41 a 'const char *const *'
| `-ParmVarDecl 0x1c006033bb0 <col:44, col:63> col:63 b 'const char *const *'
|-FunctionDecl 0x1c006033e68 <line:26:1, col:40> col:13 invalid str_free 'void (int)' static
| `-ParmVarDecl 0x1c006033da0 <col:22, col:37> col:37 invalid str 'int'
|-FunctionDecl 0x1c00602c0d0 <line:27:1, col:81> col:12 invalid append_ia5 'int (int (*)())' static
| `-ParmVarDecl 0x1c006033fc0 <col:23, <invalid sloc>> col:23 invalid STACK_OF 'int (*)()':'int (*)()'
|-FunctionDecl 0x1c00602c350 <line:29:1, col:59> col:12 used ipv4_from_asc 'int (unsigned char *, const char *)' static
| |-ParmVarDecl 0x1c00602c1c0 <col:26, col:41> col:41 v4 'unsigned char *'
| `-ParmVarDecl 0x1c00602c240 <col:45, col:57> col:57 in 'const char *'
|-FunctionDecl 0x1c00602c580 <line:30:1, col:59> col:12 used ipv6_from_asc 'int (unsigned char *, const char *)' static
| |-ParmVarDecl 0x1c00602c430 <col:26, col:41> col:41 v6 'unsigned char *'
| `-ParmVarDecl 0x1c00602c4b0 <col:45, col:57> col:57 in 'const char *'
|-FunctionDecl 0x1c00602c890 <line:31:1, col:56> col:12 used ipv6_cb 'int (const char *, int, void *)' static
| |-ParmVarDecl 0x1c00602c660 <col:20, col:32> col:32 elem 'const char *'
| |-ParmVarDecl 0x1c00602c6e0 <col:38, col:42> col:42 len 'int'
| `-ParmVarDecl 0x1c00602c760 <col:47, col:53> col:53 usr 'void *'
|-FunctionDecl 0x1c00602cbb0 <line:32:1, col:66> col:12 used ipv6_hex 'int (unsigned char *, const char *, int)' static
| |-ParmVarDecl 0x1c00602c978 <col:21, col:36> col:36 out 'unsigned char *'
| |-ParmVarDecl 0x1c00602c9f8 <col:41, col:53> col:53 in 'const char *'
| `-ParmVarDecl 0x1c00602ca78 <col:57, col:61> col:61 inlen 'int'
|-FunctionDecl 0x1c00602ced0 <line:36:1, line:67:1> line:36:5 invalid X509V3_add_value 'int (const char *, const char *, int (*)())'
| |-ParmVarDecl 0x1c00602cc98 <col:22, col:34> col:34 used name 'const char *'
| |-ParmVarDecl 0x1c00602cd18 <col:40, col:52> col:52 used value 'const char *'
| |-ParmVarDecl 0x1c00602cda8 <line:37:22, <invalid sloc>> col:22 invalid STACK_OF 'int (*)()':'int (*)()'
| `-CompoundStmt 0x1c006037720 <line:38:1, line:67:1>
|   |-DeclStmt 0x1c006034300 <line:40:5, col:39>
|   | |-VarDecl 0x1c00602d040 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/before\crypto\x509v3\v3_utl.c:40:11 used tname 'char *' cinit
|   | | `-ImplicitCastExpr 0x1c0060341b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   | |   `-ParenExpr 0x1c006034190 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1c006034168 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1c00602d0a8 <col:26> 'int' 0
|   | `-VarDecl 0x1c0060341e0 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:40:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/before\crypto\x509v3\v3_utl.c:40:26 used tvalue 'char *' cinit
|   |   `-ImplicitCastExpr 0x1c0060342d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   |     `-ParenExpr 0x1c0060342b0 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1c006034288 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1c006034248 <col:26> 'int' 0
|   |-DeclStmt 0x1c006034420 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:41:5, col:42>
|   | `-VarDecl 0x1c006034330 <col:5, col:9> col:9 used sk_allocated 'int'
|   |-IfStmt 0x1c0060347e8 <line:43:5, line:44:14>
|   | |-BinaryOperator 0x1c006034760 <line:43:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '&&'
|   | | |-ImplicitCastExpr 0x1c006034748 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:43:9> 'const char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1c006034438 <col:9> 'const char *' lvalue ParmVar 0x1c00602cc98 'name' 'const char *'
|   | | `-BinaryOperator 0x1c006034728 <col:17, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | |   |-ParenExpr 0x1c006034668 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:43:17, col:46> 'char *'
|   | |   | `-BinaryOperator 0x1c006034648 <col:18, col:45> 'char *' '='
|   | |   |   |-DeclRefExpr 0x1c006034470 <col:18> 'char *' lvalue Var 0x1c00602d040 'tname' 'char *'
|   | |   |   `-ImplicitCastExpr 0x1c006034630 <col:26, col:45> 'char *' <IntegralToPointer>
|   | |   |     `-CallExpr 0x1c0060345f0 <col:26, col:45> 'int'
|   | |   |       |-ImplicitCastExpr 0x1c0060345d8 <col:26> 'int (*)()' <FunctionToPointerDecay>
|   | |   |       | `-DeclRefExpr 0x1c006034598 <col:26> 'int ()' Function 0x1c0060344d0 'OPENSSL_strdup' 'int ()'
|   | |   |       `-ImplicitCastExpr 0x1c006034618 <col:41> 'const char *' <LValueToRValue>
|   | |   |         `-DeclRefExpr 0x1c0060345b8 <col:41> 'const char *' lvalue ParmVar 0x1c00602cc98 'name' 'const char *'
|   | |   `-ImplicitCastExpr 0x1c006034710 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | |     `-ParenExpr 0x1c0060346f0 <col:17, col:27> 'void *'
|   | |       `-CStyleCastExpr 0x1c0060346c8 <col:18, col:26> 'void *' <NullToPointer>
|   | |         `-IntegerLiteral 0x1c006034688 <col:26> 'int' 0
|   | `-GotoStmt 0x1c0060347d0 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:44:9, col:14> 'err' 0x1c006034780
|   |-IfStmt 0x1c006034a70 <line:45:5, line:46:14>
|   | |-BinaryOperator 0x1c006034a38 <line:45:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '&&'
|   | | |-ImplicitCastExpr 0x1c006034a20 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:45:9> 'const char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1c006034800 <col:9> 'const char *' lvalue ParmVar 0x1c00602cd18 'value' 'const char *'
|   | | `-BinaryOperator 0x1c006034a00 <col:18, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | |   |-ParenExpr 0x1c006034940 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:45:18, col:49> 'char *'
|   | |   | `-BinaryOperator 0x1c006034920 <col:19, col:48> 'char *' '='
|   | |   |   |-DeclRefExpr 0x1c006034838 <col:19> 'char *' lvalue Var 0x1c0060341e0 'tvalue' 'char *'
|   | |   |   `-ImplicitCastExpr 0x1c006034908 <col:28, col:48> 'char *' <IntegralToPointer>
|   | |   |     `-CallExpr 0x1c0060348c8 <col:28, col:48> 'int'
|   | |   |       |-ImplicitCastExpr 0x1c0060348b0 <col:28> 'int (*)()' <FunctionToPointerDecay>
|   | |   |       | `-DeclRefExpr 0x1c006034870 <col:28> 'int ()' Function 0x1c0060344d0 'OPENSSL_strdup' 'int ()'
|   | |   |       `-ImplicitCastExpr 0x1c0060348f0 <col:43> 'const char *' <LValueToRValue>
|   | |   |         `-DeclRefExpr 0x1c006034890 <col:43> 'const char *' lvalue ParmVar 0x1c00602cd18 'value' 'const char *'
|   | |   `-ImplicitCastExpr 0x1c0060349e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | |     `-ParenExpr 0x1c0060349c8 <col:17, col:27> 'void *'
|   | |       `-CStyleCastExpr 0x1c0060349a0 <col:18, col:26> 'void *' <NullToPointer>
|   | |         `-IntegerLiteral 0x1c006034960 <col:26> 'int' 0
|   | `-GotoStmt 0x1c006034a58 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:46:9, col:14> 'err' 0x1c006034780
|   |-IfStmt 0x1c006034c50 <line:47:5, line:48:14>
|   | |-OpaqueValueExpr 0x1c006034c38 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1c006034c20 <col:9, col:14> 'err' 0x1c006034780
|   |-IfStmt 0x1c006034ec8 <line:49:5, line:50:14>
|   | |-OpaqueValueExpr 0x1c006034eb0 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1c006034e98 <col:9, col:14> 'err' 0x1c006034780
|   |-IfStmt 0x1c0060350e8 <line:54:5, line:55:14>
|   | |-OpaqueValueExpr 0x1c0060350d0 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1c0060350b8 <col:9, col:14> 'err' 0x1c006034780
|   |-ReturnStmt 0x1c006035128 <line:56:5, col:12>
|   | `-IntegerLiteral 0x1c006035100 <col:12> 'int' 1
|   |-LabelStmt 0x1c006037298 <line:57:2, col:5> 'err'
|   | `-NullStmt 0x1c006037290 <col:5>
|   |-IfStmt 0x1c006037490 <line:59:5, line:62:5>
|   | |-ImplicitCastExpr 0x1c0060372d0 <line:59:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1c0060372b0 <col:9> 'int' lvalue Var 0x1c006034330 'sk_allocated' 'int'
|   | `-CompoundStmt 0x1c006037480 <col:23, line:62:5>
|   |-CallExpr 0x1c006037610 <line:64:5, col:23> 'int'
|   | |-ImplicitCastExpr 0x1c0060375f8 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1c0060375b8 <col:5> 'int ()' Function 0x1c0060374d0 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x1c006037638 <col:18> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1c0060375d8 <col:18> 'char *' lvalue Var 0x1c00602d040 'tname' 'char *'
|   |-CallExpr 0x1c0060376a8 <line:65:5, col:24> 'int'
|   | |-ImplicitCastExpr 0x1c006037690 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1c006037650 <col:5> 'int ()' Function 0x1c0060374d0 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x1c0060376d0 <col:18> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1c006037670 <col:18> 'char *' lvalue Var 0x1c0060341e0 'tvalue' 'char *'
|   `-ReturnStmt 0x1c006037710 <line:66:5, col:12>
|     `-IntegerLiteral 0x1c0060376e8 <col:12> 'int' 0
|-FunctionDecl 0x1c0060379f0 <line:69:1, line:73:1> line:69:5 invalid X509V3_add_value_uchar 'int (const char *, const unsigned char *, int (*)())'
| |-ParmVarDecl 0x1c0060377b0 <col:28, col:40> col:40 used name 'const char *'
| |-ParmVarDecl 0x1c006037830 <col:46, col:67> col:67 used value 'const unsigned char *'
| |-ParmVarDecl 0x1c0060378c0 <line:70:28, <invalid sloc>> col:28 invalid STACK_OF 'int (*)()':'int (*)()'
| `-CompoundStmt 0x1c006037b88 <line:71:1, line:73:1>
|-FunctionDecl 0x1c006037c78 <line:77:1, line:85:1> line:77:6 invalid X509V3_conf_free 'void (int *)'
| |-ParmVarDecl 0x1c006037bb0 <col:23, col:35> col:35 invalid conf 'int *'
| `-CompoundStmt 0x1c006037df8 <line:78:1, line:85:1>
|   `-IfStmt 0x1c006037d60 <line:79:5, line:80:9>
|     |-OpaqueValueExpr 0x1c006037d48 <<invalid sloc>> '_Bool'
|     `-ReturnStmt 0x1c006037d38 <col:9>
|-FunctionDecl 0x1c006038060 <line:87:1, line:93:1> line:87:5 invalid X509V3_add_value_bool 'int (const char *, int, int (*)())'
| |-ParmVarDecl 0x1c006037e28 <col:27, col:39> col:39 used name 'const char *'
| |-ParmVarDecl 0x1c006037ea8 <col:45, col:49> col:49 used asn1_bool 'int'
| |-ParmVarDecl 0x1c006037f38 <line:88:27, <invalid sloc>> col:27 invalid STACK_OF 'int (*)()':'int (*)()'
| `-CompoundStmt 0x1c0060382a8 <line:89:1, line:93:1>
|-FunctionDecl 0x1c006038488 <line:95:1, line:101:1> line:95:5 invalid X509V3_add_value_bool_nf 'int (const char *, int, int (*)())'
| |-ParmVarDecl 0x1c0060382d0 <col:30, col:42> col:42 used name 'const char *'
| |-ParmVarDecl 0x1c006038350 <col:48, col:52> col:52 used asn1_bool 'int'
| |-ParmVarDecl 0x1c0060383e0 <line:96:30, <invalid sloc>> col:30 invalid STACK_OF 'int (*)()':'int (*)()'
| `-CompoundStmt 0x1c006038638 <line:97:1, line:101:1>
|   `-ReturnStmt 0x1c006038628 <line:100:5, col:12>
|     `-IntegerLiteral 0x1c006038600 <col:12> 'int' 1
|-FunctionDecl 0x1c006038730 <line:103:1, line:138:1> line:103:14 invalid bignum_to_string 'char *(const int *)' static
| |-ParmVarDecl 0x1c006038668 <col:31, col:45> col:45 invalid bn 'const int *'
| `-CompoundStmt 0x1c006035eb0 <line:104:1, line:138:1>
|   |-DeclStmt 0x1c006038908 <line:105:5, col:20>
|   | |-VarDecl 0x1c006038808 <col:5, col:11> col:11 used tmp 'char *'
|   | `-VarDecl 0x1c006038888 <col:5, col:17> col:17 used ret 'char *'
|   |-DeclStmt 0x1c006038998 <line:106:5, col:15>
|   | `-VarDecl 0x1c006038930 <col:5, col:12> col:12 used len 'size_t':'unsigned long long'
|   |-IfStmt 0x1c006038ee8 <line:117:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   | |-BinaryOperator 0x1c006038e18 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:117:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x1c006038de8 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:117:9> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1c006038d40 <col:9> 'char *' lvalue Var 0x1c006038808 'tmp' 'char *'
|   | | `-ImplicitCastExpr 0x1c006038e00 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x1c006038dc8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1c006038da0 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1c006038d60 <col:26> 'int' 0
|   | `-ReturnStmt 0x1c006038ed8 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:118:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |   `-ImplicitCastExpr 0x1c006038ec0 <col:17, col:27> 'char *' <NullToPointer>
|   |     `-ParenExpr 0x1c006038ea0 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1c006038e78 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1c006038e38 <col:26> 'int' 0
|   |-BinaryOperator 0x1c0060351c0 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:120:5, col:25> 'size_t':'unsigned long long' '='
|   | |-DeclRefExpr 0x1c006038f00 <col:5> 'size_t':'unsigned long long' lvalue Var 0x1c006038930 'len' 'size_t':'unsigned long long'
|   | `-BinaryOperator 0x1c0060351a0 <col:11, col:25> 'unsigned long long' '+'
|   |   |-CallExpr 0x1c006039130 <col:11, col:21> 'unsigned long long'
|   |   | |-ImplicitCastExpr 0x1c006039118 <col:11> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1c006039080 <col:11> 'unsigned long long (const char *)' Function 0x1c006038f70 'strlen' 'unsigned long long (const char *)'
|   |   | `-ImplicitCastExpr 0x1c006039170 <col:18> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x1c006039158 <col:18> 'char *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1c0060390b8 <col:18> 'char *' lvalue Var 0x1c006038808 'tmp' 'char *'
|   |   `-ImplicitCastExpr 0x1c006035188 <col:25> 'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x1c006035160 <col:25> 'int' 3
|   |-BinaryOperator 0x1c0060352c8 <line:121:5, col:29> 'char *' '='
|   | |-DeclRefExpr 0x1c0060351e0 <col:5> 'char *' lvalue Var 0x1c006038888 'ret' 'char *'
|   | `-ImplicitCastExpr 0x1c0060352b0 <col:11, col:29> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x1c006035270 <col:11, col:29> 'int'
|   |     |-ImplicitCastExpr 0x1c006035258 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1c006035218 <col:11> 'int ()' Function 0x1c006034ab0 'OPENSSL_malloc' 'int ()'
|   |     `-ImplicitCastExpr 0x1c006035298 <col:26> 'size_t':'unsigned long long' <LValueToRValue>
|   |       `-DeclRefExpr 0x1c006035238 <col:26> 'size_t':'unsigned long long' lvalue Var 0x1c006038930 'len' 'size_t':'unsigned long long'
|   |-IfStmt 0x1c006035568 <line:122:5, line:126:5>
|   | |-BinaryOperator 0x1c0060353c0 <line:122:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x1c006035390 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:122:9> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1c0060352e8 <col:9> 'char *' lvalue Var 0x1c006038888 'ret' 'char *'
|   | | `-ImplicitCastExpr 0x1c0060353a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x1c006035370 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1c006035348 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1c006035308 <col:26> 'int' 0
|   | `-CompoundStmt 0x1c006035548 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:122:22, line:126:5>
|   |   |-CallExpr 0x1c006035458 <line:124:9, col:25> 'int'
|   |   | |-ImplicitCastExpr 0x1c006035440 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1c006035400 <col:9> 'int ()' Function 0x1c0060374d0 'OPENSSL_free' 'int ()'
|   |   | `-ImplicitCastExpr 0x1c006035480 <col:22> 'char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1c006035420 <col:22> 'char *' lvalue Var 0x1c006038808 'tmp' 'char *'
|   |   `-ReturnStmt 0x1c006035538 <line:125:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |     `-ImplicitCastExpr 0x1c006035520 <col:17, col:27> 'char *' <NullToPointer>
|   |       `-ParenExpr 0x1c006035500 <col:17, col:27> 'void *'
|   |         `-CStyleCastExpr 0x1c0060354d8 <col:18, col:26> 'void *' <NullToPointer>
|   |           `-IntegerLiteral 0x1c006035498 <col:26> 'int' 0
|   |-IfStmt 0x1c006035da8 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:129:5, line:135:5> has_else
|   | |-BinaryOperator 0x1c006035648 <line:129:9, col:19> 'int' '=='
|   | | |-ImplicitCastExpr 0x1c006035630 <col:9, col:14> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x1c006035618 <col:9, col:14> 'char' <LValueToRValue>
|   | | |   `-ArraySubscriptExpr 0x1c0060355e0 <col:9, col:14> 'char' lvalue
|   | | |     |-ImplicitCastExpr 0x1c0060355c8 <col:9> 'char *' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x1c006035580 <col:9> 'char *' lvalue Var 0x1c006038808 'tmp' 'char *'
|   | | |     `-IntegerLiteral 0x1c0060355a0 <col:13> 'int' 0
|   | | `-CharacterLiteral 0x1c006035600 <col:19> 'int' 45
|   | |-CompoundStmt 0x1c006035b00 <col:24, line:132:5>
|   | | |-CallExpr 0x1c006035830 <line:130:9, col:40> 'int'
|   | | | |-ImplicitCastExpr 0x1c006035818 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x1c006035758 <col:9> 'int ()' Function 0x1c006035690 'OPENSSL_strlcpy' 'int ()'
|   | | | |-ImplicitCastExpr 0x1c006035868 <col:25> 'char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1c006035778 <col:25> 'char *' lvalue Var 0x1c006038888 'ret' 'char *'
|   | | | |-ImplicitCastExpr 0x1c006035880 <col:30> 'char *' <ArrayToPointerDecay>
|   | | | | `-StringLiteral 0x1c0060357d8 <col:30> 'char [4]' lvalue "-0x"
|   | | | `-ImplicitCastExpr 0x1c006035898 <col:37> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1c0060357f8 <col:37> 'size_t':'unsigned long long' lvalue Var 0x1c006038930 'len' 'size_t':'unsigned long long'
|   | | `-CallExpr 0x1c006035a98 <line:131:9, col:42> 'int'
|   | |   |-ImplicitCastExpr 0x1c006035a80 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x1c0060359a0 <col:9> 'int ()' Function 0x1c0060358d8 'OPENSSL_strlcat' 'int ()'
|   | |   |-ImplicitCastExpr 0x1c006035ad0 <col:25> 'char *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x1c0060359c0 <col:25> 'char *' lvalue Var 0x1c006038888 'ret' 'char *'
|   | |   |-BinaryOperator 0x1c006035a40 <col:30, col:36> 'char *' '+'
|   | |   | |-ImplicitCastExpr 0x1c006035a28 <col:30> 'char *' <LValueToRValue>
|   | |   | | `-DeclRefExpr 0x1c0060359e0 <col:30> 'char *' lvalue Var 0x1c006038808 'tmp' 'char *'
|   | |   | `-IntegerLiteral 0x1c006035a00 <col:36> 'int' 1
|   | |   `-ImplicitCastExpr 0x1c006035ae8 <col:39> 'size_t':'unsigned long long' <LValueToRValue>
|   | |     `-DeclRefExpr 0x1c006035a60 <col:39> 'size_t':'unsigned long long' lvalue Var 0x1c006038930 'len' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x1c006035d88 <line:132:12, line:135:5>
|   |   |-CallExpr 0x1c006035bf0 <line:133:9, col:39> 'int'
|   |   | |-ImplicitCastExpr 0x1c006035bd8 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1c006035b20 <col:9> 'int ()' Function 0x1c006035690 'OPENSSL_strlcpy' 'int ()'
|   |   | |-ImplicitCastExpr 0x1c006035c28 <col:25> 'char *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1c006035b40 <col:25> 'char *' lvalue Var 0x1c006038888 'ret' 'char *'
|   |   | |-ImplicitCastExpr 0x1c006035c40 <col:30> 'char *' <ArrayToPointerDecay>
|   |   | | `-StringLiteral 0x1c006035b98 <col:30> 'char [3]' lvalue "0x"
|   |   | `-ImplicitCastExpr 0x1c006035c58 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1c006035bb8 <col:36> 'size_t':'unsigned long long' lvalue Var 0x1c006038930 'len' 'size_t':'unsigned long long'
|   |   `-CallExpr 0x1c006035d08 <line:134:9, col:38> 'int'
|   |     |-ImplicitCastExpr 0x1c006035cf0 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1c006035c70 <col:9> 'int ()' Function 0x1c0060358d8 'OPENSSL_strlcat' 'int ()'
|   |     |-ImplicitCastExpr 0x1c006035d40 <col:25> 'char *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1c006035c90 <col:25> 'char *' lvalue Var 0x1c006038888 'ret' 'char *'
|   |     |-ImplicitCastExpr 0x1c006035d58 <col:30> 'char *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1c006035cb0 <col:30> 'char *' lvalue Var 0x1c006038808 'tmp' 'char *'
|   |     `-ImplicitCastExpr 0x1c006035d70 <col:35> 'size_t':'unsigned long long' <LValueToRValue>
|   |       `-DeclRefExpr 0x1c006035cd0 <col:35> 'size_t':'unsigned long long' lvalue Var 0x1c006038930 'len' 'size_t':'unsigned long long'
|   |-CallExpr 0x1c006035e28 <line:136:5, col:21> 'int'
|   | |-ImplicitCastExpr 0x1c006035e10 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1c006035dd0 <col:5> 'int ()' Function 0x1c0060374d0 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x1c006035e50 <col:18> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1c006035df0 <col:18> 'char *' lvalue Var 0x1c006038808 'tmp' 'char *'
|   `-ReturnStmt 0x1c006035ea0 <line:137:5, col:12>
|     `-ImplicitCastExpr 0x1c006035e88 <col:12> 'char *' <LValueToRValue>
|       `-DeclRefExpr 0x1c006035e68 <col:12> 'char *' lvalue Var 0x1c006038888 'ret' 'char *'
|-FunctionDecl 0x1c006038f70 <line:120:11> col:11 implicit used strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x1c006039010 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1c006036080 <line:140:1, line:152:1> line:140:7 invalid i2s_ASN1_ENUMERATED 'char *(int *, const int *)'
| |-ParmVarDecl 0x1c006035f20 <col:27, col:46> col:46 invalid method 'int *'
| |-ParmVarDecl 0x1c006035fa0 <col:54, col:77> col:77 invalid a 'const int *'
| `-CompoundStmt 0x1c006039898 <line:141:1, line:152:1>
|   |-DeclStmt 0x1c006039348 <line:143:5, col:24>
|   | `-VarDecl 0x1c006039240 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/before\crypto\x509v3\v3_utl.c:143:11 used strtmp 'char *' cinit
|   |   `-ImplicitCastExpr 0x1c006039330 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   |     `-ParenExpr 0x1c006039310 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1c0060392e8 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1c0060392a8 <col:26> 'int' 0
|   |-IfStmt 0x1c006039428 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:145:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   | |-OpaqueValueExpr 0x1c006039410 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1c006039400 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:146:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |   `-ImplicitCastExpr 0x1c0060393e8 <col:17, col:27> 'char *' <NullToPointer>
|   |     `-ParenExpr 0x1c0060393c8 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1c0060393a0 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1c006039360 <col:26> 'int' 0
|   `-ReturnStmt 0x1c006039888 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:151:5, col:12>
|     `-ImplicitCastExpr 0x1c006039870 <col:12> 'char *' <LValueToRValue>
|       `-DeclRefExpr 0x1c006039850 <col:12> 'char *' lvalue Var 0x1c006039240 'strtmp' 'char *'
|-FunctionDecl 0x1c0060399f8 <line:154:1, line:166:1> line:154:7 invalid i2s_ASN1_INTEGER 'char *(int *, const int *)'
| |-ParmVarDecl 0x1c0060398d8 <col:24, col:43> col:43 invalid method 'int *'
| |-ParmVarDecl 0x1c006039958 <col:51, col:71> col:71 invalid a 'const int *'
| `-CompoundStmt 0x1c00603a0c8 <line:155:1, line:166:1>
|   |-DeclStmt 0x1c006039c68 <line:157:5, col:24>
|   | `-VarDecl 0x1c006039b60 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/before\crypto\x509v3\v3_utl.c:157:11 used strtmp 'char *' cinit
|   |   `-ImplicitCastExpr 0x1c006039c50 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   |     `-ParenExpr 0x1c006039c30 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1c006039c08 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1c006039bc8 <col:26> 'int' 0
|   |-IfStmt 0x1c006039d48 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:159:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   | |-OpaqueValueExpr 0x1c006039d30 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1c006039d20 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:160:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |   `-ImplicitCastExpr 0x1c006039d08 <col:17, col:27> 'char *' <NullToPointer>
|   |     `-ParenExpr 0x1c006039ce8 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1c006039cc0 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1c006039c80 <col:26> 'int' 0
|   `-ReturnStmt 0x1c00603a0b8 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:165:5, col:12>
|     `-ImplicitCastExpr 0x1c00603a0a0 <col:12> 'char *' <LValueToRValue>
|       `-DeclRefExpr 0x1c00603a080 <col:12> 'char *' lvalue Var 0x1c006039b60 'strtmp' 'char *'
|-FunctionDecl 0x1c00603a290 <line:168:1, line:219:1> line:168:15 invalid s2i_ASN1_INTEGER 'int *(int *, const char *)'
| |-ParmVarDecl 0x1c00603a108 <col:32, col:51> col:51 invalid method 'int *'
| |-ParmVarDecl 0x1c00603a1b0 <col:59, col:71> col:71 used value 'const char *'
| `-CompoundStmt 0x1c00603bc18 <line:169:1, line:219:1>
|   |-DeclStmt 0x1c00603a4f8 <line:172:5, col:21>
|   | |-VarDecl 0x1c00603a3f8 <col:5, col:9> col:9 used isneg 'int'
|   | `-VarDecl 0x1c00603a478 <col:5, col:16> col:16 used ishex 'int'
|   |-DeclStmt 0x1c00603a590 <line:173:5, col:12>
|   | `-VarDecl 0x1c00603a528 <col:5, col:9> col:9 used ret 'int'
|   |-IfStmt 0x1c00603a7a0 <line:174:5, line:177:5>
|   | |-BinaryOperator 0x1c00603a698 <line:174:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x1c00603a668 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:174:9> 'const char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1c00603a5a8 <col:9> 'const char *' lvalue ParmVar 0x1c00603a1b0 'value' 'const char *'
|   | | `-ImplicitCastExpr 0x1c00603a680 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   | |   `-ParenExpr 0x1c00603a648 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1c00603a620 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1c00603a5e0 <col:26> 'int' 0
|   | `-CompoundStmt 0x1c00603a788 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:174:24, line:177:5>
|   |   `-ReturnStmt 0x1c00603a778 <line:176:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |     `-ImplicitCastExpr 0x1c00603a760 <col:17, col:27> 'int *' <NullToPointer>
|   |       `-ParenExpr 0x1c00603a740 <col:17, col:27> 'void *'
|   |         `-CStyleCastExpr 0x1c00603a718 <col:18, col:26> 'void *' <NullToPointer>
|   |           `-IntegerLiteral 0x1c00603a6d8 <col:26> 'int' 0
|   |-IfStmt 0x1c00603aa88 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:179:5, line:182:5>
|   | |-OpaqueValueExpr 0x1c00603aa70 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1c00603aa58 <line:179:21, line:182:5>
|   |   `-ReturnStmt 0x1c00603aa48 <line:181:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |     `-ImplicitCastExpr 0x1c00603aa30 <col:17, col:27> 'int *' <NullToPointer>
|   |       `-ParenExpr 0x1c00603aa10 <col:17, col:27> 'void *'
|   |         `-CStyleCastExpr 0x1c00603a9e8 <col:18, col:26> 'void *' <NullToPointer>
|   |           `-IntegerLiteral 0x1c00603a9a8 <col:26> 'int' 0
|   |-IfStmt 0x1c00603acc8 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:183:5, line:187:17> has_else
|   | |-BinaryOperator 0x1c00603ab68 <line:183:9, col:21> 'int' '=='
|   | | |-ImplicitCastExpr 0x1c00603ab50 <col:9, col:16> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x1c00603ab38 <col:9, col:16> 'char' <LValueToRValue>
|   | | |   `-ArraySubscriptExpr 0x1c00603ab00 <col:9, col:16> 'const char' lvalue
|   | | |     |-ImplicitCastExpr 0x1c00603aae8 <col:9> 'const char *' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x1c00603aaa0 <col:9> 'const char *' lvalue ParmVar 0x1c00603a1b0 'value' 'const char *'
|   | | |     `-IntegerLiteral 0x1c00603aac0 <col:15> 'int' 0
|   | | `-CharacterLiteral 0x1c00603ab20 <col:21> 'int' 45
|   | |-CompoundStmt 0x1c00603ac40 <col:26, line:186:5>
|   | | |-UnaryOperator 0x1c00603aba8 <line:184:9, col:14> 'const char *' postfix '++'
|   | | | `-DeclRefExpr 0x1c00603ab88 <col:9> 'const char *' lvalue ParmVar 0x1c00603a1b0 'value' 'const char *'
|   | | `-BinaryOperator 0x1c00603ac20 <line:185:9, col:17> 'int' '='
|   | |   |-DeclRefExpr 0x1c00603abc0 <col:9> 'int' lvalue Var 0x1c00603a3f8 'isneg' 'int'
|   | |   `-IntegerLiteral 0x1c00603abf8 <col:17> 'int' 1
|   | `-BinaryOperator 0x1c00603aca8 <line:187:9, col:17> 'int' '='
|   |   |-DeclRefExpr 0x1c00603ac60 <col:9> 'int' lvalue Var 0x1c00603a3f8 'isneg' 'int'
|   |   `-IntegerLiteral 0x1c00603ac80 <col:17> 'int' 0
|   |-IfStmt 0x1c00603b1e0 <line:189:5, line:193:17> has_else
|   | |-BinaryOperator 0x1c00603b028 <line:189:9, col:67> 'int' '&&'
|   | | |-BinaryOperator 0x1c00603adb8 <col:9, col:21> 'int' '=='
|   | | | |-ImplicitCastExpr 0x1c00603ada0 <col:9, col:16> 'int' <IntegralCast>
|   | | | | `-ImplicitCastExpr 0x1c00603ad88 <col:9, col:16> 'char' <LValueToRValue>
|   | | | |   `-ArraySubscriptExpr 0x1c00603ad50 <col:9, col:16> 'const char' lvalue
|   | | | |     |-ImplicitCastExpr 0x1c00603ad38 <col:9> 'const char *' <LValueToRValue>
|   | | | |     | `-DeclRefExpr 0x1c00603acf0 <col:9> 'const char *' lvalue ParmVar 0x1c00603a1b0 'value' 'const char *'
|   | | | |     `-IntegerLiteral 0x1c00603ad10 <col:15> 'int' 0
|   | | | `-CharacterLiteral 0x1c00603ad70 <col:21> 'int' 48
|   | | `-ParenExpr 0x1c00603b008 <col:28, col:67> 'int'
|   | |   `-BinaryOperator 0x1c00603afe8 <col:29, col:66> 'int' '||'
|   | |     |-ParenExpr 0x1c00603aec0 <col:29, col:45> 'int'
|   | |     | `-BinaryOperator 0x1c00603aea0 <col:30, col:42> 'int' '=='
|   | |     |   |-ImplicitCastExpr 0x1c00603ae88 <col:30, col:37> 'int' <IntegralCast>
|   | |     |   | `-ImplicitCastExpr 0x1c00603ae70 <col:30, col:37> 'char' <LValueToRValue>
|   | |     |   |   `-ArraySubscriptExpr 0x1c00603ae38 <col:30, col:37> 'const char' lvalue
|   | |     |   |     |-ImplicitCastExpr 0x1c00603ae20 <col:30> 'const char *' <LValueToRValue>
|   | |     |   |     | `-DeclRefExpr 0x1c00603add8 <col:30> 'const char *' lvalue ParmVar 0x1c00603a1b0 'value' 'const char *'
|   | |     |   |     `-IntegerLiteral 0x1c00603adf8 <col:36> 'int' 1
|   | |     |   `-CharacterLiteral 0x1c00603ae58 <col:42> 'int' 120
|   | |     `-ParenExpr 0x1c00603afc8 <col:50, col:66> 'int'
|   | |       `-BinaryOperator 0x1c00603afa8 <col:51, col:63> 'int' '=='
|   | |         |-ImplicitCastExpr 0x1c00603af90 <col:51, col:58> 'int' <IntegralCast>
|   | |         | `-ImplicitCastExpr 0x1c00603af78 <col:51, col:58> 'char' <LValueToRValue>
|   | |         |   `-ArraySubscriptExpr 0x1c00603af40 <col:51, col:58> 'const char' lvalue
|   | |         |     |-ImplicitCastExpr 0x1c00603af28 <col:51> 'const char *' <LValueToRValue>
|   | |         |     | `-DeclRefExpr 0x1c00603aee0 <col:51> 'const char *' lvalue ParmVar 0x1c00603a1b0 'value' 'const char *'
|   | |         |     `-IntegerLiteral 0x1c00603af00 <col:57> 'int' 1
|   | |         `-CharacterLiteral 0x1c00603af60 <col:63> 'int' 88
|   | |-CompoundStmt 0x1c00603b140 <col:70, line:192:5>
|   | | |-CompoundAssignOperator 0x1c00603b090 <line:190:9, col:18> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'
|   | | | |-DeclRefExpr 0x1c00603b048 <col:9> 'const char *' lvalue ParmVar 0x1c00603a1b0 'value' 'const char *'
|   | | | `-IntegerLiteral 0x1c00603b068 <col:18> 'int' 2
|   | | `-BinaryOperator 0x1c00603b120 <line:191:9, col:17> 'int' '='
|   | |   |-DeclRefExpr 0x1c00603b0c0 <col:9> 'int' lvalue Var 0x1c00603a478 'ishex' 'int'
|   | |   `-IntegerLiteral 0x1c00603b0f8 <col:17> 'int' 1
|   | `-BinaryOperator 0x1c00603b1c0 <line:193:9, col:17> 'int' '='
|   |   |-DeclRefExpr 0x1c00603b160 <col:9> 'int' lvalue Var 0x1c00603a478 'ishex' 'int'
|   |   `-IntegerLiteral 0x1c00603b180 <col:17> 'int' 0
|   |-IfStmt 0x1c00603b730 <line:200:5, line:204:5>
|   | |-BinaryOperator 0x1c00603b608 <line:200:9, col:26> 'int' '||'
|   | | |-UnaryOperator 0x1c00603b530 <col:9, col:10> 'int' prefix '!' cannot overflow
|   | | | `-ImplicitCastExpr 0x1c00603b518 <col:10> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1c00603b4f8 <col:10> 'int' lvalue Var 0x1c00603a528 'ret' 'int'
|   | | `-ImplicitCastExpr 0x1c00603b5f0 <col:17, col:26> 'int' <IntegralCast>
|   | |   `-ImplicitCastExpr 0x1c00603b5d8 <col:17, col:26> 'char' <LValueToRValue>
|   | |     `-ArraySubscriptExpr 0x1c00603b5b8 <col:17, col:26> 'const char' lvalue
|   | |       |-ImplicitCastExpr 0x1c00603b588 <col:17> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x1c00603b548 <col:17> 'const char *' lvalue ParmVar 0x1c00603a1b0 'value' 'const char *'
|   | |       `-ImplicitCastExpr 0x1c00603b5a0 <col:23> 'int' <LValueToRValue>
|   | |         `-DeclRefExpr 0x1c00603b568 <col:23> 'int' lvalue Var 0x1c00603a528 'ret' 'int'
|   | `-CompoundStmt 0x1c00603b718 <col:29, line:204:5>
|   |   `-ReturnStmt 0x1c00603b708 <line:203:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |     `-ImplicitCastExpr 0x1c00603b6f0 <col:17, col:27> 'int *' <NullToPointer>
|   |       `-ParenExpr 0x1c00603b6d0 <col:17, col:27> 'void *'
|   |         `-CStyleCastExpr 0x1c00603b6a8 <col:18, col:26> 'void *' <NullToPointer>
|   |           `-IntegerLiteral 0x1c00603b668 <col:26> 'int' 0
|   |-IfStmt 0x1c00603b8f8 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:206:5, line:207:17>
|   | |-OpaqueValueExpr 0x1c00603b8e0 <<invalid sloc>> '_Bool'
|   | `-BinaryOperator 0x1c00603b8c0 <col:9, col:17> 'int' '='
|   |   |-DeclRefExpr 0x1c00603b878 <col:9> 'int' lvalue Var 0x1c00603a3f8 'isneg' 'int'
|   |   `-IntegerLiteral 0x1c00603b898 <col:17> 'int' 0
|   `-IfStmt 0x1c00603bbc8 <line:211:5, line:215:5>
|     |-OpaqueValueExpr 0x1c00603bbb0 <<invalid sloc>> '_Bool'
|     `-CompoundStmt 0x1c00603bb98 <line:211:16, line:215:5>
|       `-ReturnStmt 0x1c00603bb88 <line:214:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|         `-ImplicitCastExpr 0x1c00603bb70 <col:17, col:27> 'int *' <NullToPointer>
|           `-ParenExpr 0x1c00603bb50 <col:17, col:27> 'void *'
|             `-CStyleCastExpr 0x1c00603bb28 <col:18, col:26> 'void *' <NullToPointer>
|               `-IntegerLiteral 0x1c00603bae8 <col:26> 'int' 0
|-FunctionDecl 0x1c00603bec0 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:221:1, line:234:1> line:221:5 invalid X509V3_add_value_int 'int (const char *, const int *, int (*)())'
| |-ParmVarDecl 0x1c00603bc88 <col:26, col:38> col:38 used name 'const char *'
| |-ParmVarDecl 0x1c00603bd08 <col:44, col:64> col:64 invalid aint 'const int *'
| |-ParmVarDecl 0x1c00603bd98 <line:222:26, <invalid sloc>> col:26 invalid STACK_OF 'int (*)()':'int (*)()'
| `-CompoundStmt 0x1c00603c478 <line:223:1, line:234:1>
|   |-DeclStmt 0x1c00603c010 <line:224:5, col:17>
|   | `-VarDecl 0x1c00603bfa8 <col:5, col:11> col:11 used strtmp 'char *'
|   |-DeclStmt 0x1c00603c0a8 <line:225:5, col:12>
|   | `-VarDecl 0x1c00603c040 <col:5, col:9> col:9 used ret 'int'
|   |-IfStmt 0x1c00603c110 <line:227:5, line:228:16>
|   | |-OpaqueValueExpr 0x1c00603c0f8 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1c00603c0e8 <col:9, col:16>
|   |   `-IntegerLiteral 0x1c00603c0c0 <col:16> 'int' 1
|   |-IfStmt 0x1c00603c2f0 <line:229:5, line:230:16>
|   | |-OpaqueValueExpr 0x1c00603c2d8 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1c00603c2c8 <col:9, col:16>
|   |   `-IntegerLiteral 0x1c00603c2a0 <col:16> 'int' 0
|   |-CallExpr 0x1c00603c3f0 <line:232:5, col:24> 'int'
|   | |-ImplicitCastExpr 0x1c00603c3d8 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1c00603c398 <col:5> 'int ()' Function 0x1c0060374d0 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x1c00603c418 <col:18> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1c00603c3b8 <col:18> 'char *' lvalue Var 0x1c00603bfa8 'strtmp' 'char *'
|   `-ReturnStmt 0x1c00603c468 <line:233:5, col:12>
|     `-ImplicitCastExpr 0x1c00603c450 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1c00603c430 <col:12> 'int' lvalue Var 0x1c00603c040 'ret' 'int'
|-FunctionDecl 0x1c00603c630 <line:236:1, line:265:1> line:236:5 invalid X509V3_get_value_bool 'int (const int *, int *)'
| |-ParmVarDecl 0x1c00603c4d0 <col:27, col:45> col:45 invalid value 'const int *'
| |-ParmVarDecl 0x1c00603c550 <col:52, col:57> col:57 used asn1_bool 'int *'
| `-CompoundStmt 0x1c006037068 <line:237:1, line:265:1>
|   |-DeclStmt 0x1c00603c778 <line:238:5, col:21>
|   | `-VarDecl 0x1c00603c710 <col:5, col:17> col:17 used btmp 'const char *'
|   |-IfStmt 0x1c00603c8d0 <line:240:5, line:241:14>
|   | |-OpaqueValueExpr 0x1c00603c8b8 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1c00603c8a0 <col:9, col:14> 'err' 0x1c00603c850
|   |-IfStmt 0x1c0060364b0 <line:242:5, line:250:5>
|   | |-BinaryOperator 0x1c006036388 <line:242:9, line:247:35> 'int' '||'
|   | | |-BinaryOperator 0x1c006036200 <line:242:9, line:246:35> 'int' '||'
|   | | | |-BinaryOperator 0x1c00603d0c8 <line:242:9, line:245:33> 'int' '||'
|   | | | | |-BinaryOperator 0x1c00603cf40 <line:242:9, line:244:33> 'int' '||'
|   | | | | | |-BinaryOperator 0x1c00603cd78 <line:242:9, line:243:36> 'int' '||'
|   | | | | | | |-BinaryOperator 0x1c00603cbf0 <line:242:9, col:33> 'int' '=='
|   | | | | | | | |-CallExpr 0x1c00603cb50 <col:9, col:28> 'int'
|   | | | | | | | | |-ImplicitCastExpr 0x1c00603cb38 <col:9> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | | | | | | | | | `-DeclRefExpr 0x1c00603ca68 <col:9> 'int (const char *, const char *)' Function 0x1c00603c8e8 'strcmp' 'int (const char *, const char *)'
|   | | | | | | | | |-ImplicitCastExpr 0x1c00603cb80 <col:16> 'const char *' <LValueToRValue>
|   | | | | | | | | | `-DeclRefExpr 0x1c00603caa0 <col:16> 'const char *' lvalue Var 0x1c00603c710 'btmp' 'const char *'
|   | | | | | | | | `-ImplicitCastExpr 0x1c00603cbb0 <col:22> 'const char *' <NoOp>
|   | | | | | | | |   `-ImplicitCastExpr 0x1c00603cb98 <col:22> 'char *' <ArrayToPointerDecay>
|   | | | | | | | |     `-StringLiteral 0x1c00603cac0 <col:22> 'char [5]' lvalue "TRUE"
|   | | | | | | | `-IntegerLiteral 0x1c00603cbc8 <col:33> 'int' 0
|   | | | | | | `-BinaryOperator 0x1c00603cd58 <line:243:12, col:36> 'int' '=='
|   | | | | | |   |-CallExpr 0x1c00603ccb8 <col:12, col:31> 'int'
|   | | | | | |   | |-ImplicitCastExpr 0x1c00603cca0 <col:12> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | | | | | |   | | `-DeclRefExpr 0x1c00603cc10 <col:12> 'int (const char *, const char *)' Function 0x1c00603c8e8 'strcmp' 'int (const char *, const char *)'
|   | | | | | |   | |-ImplicitCastExpr 0x1c00603cce8 <col:19> 'const char *' <LValueToRValue>
|   | | | | | |   | | `-DeclRefExpr 0x1c00603cc30 <col:19> 'const char *' lvalue Var 0x1c00603c710 'btmp' 'const char *'
|   | | | | | |   | `-ImplicitCastExpr 0x1c00603cd18 <col:25> 'const char *' <NoOp>
|   | | | | | |   |   `-ImplicitCastExpr 0x1c00603cd00 <col:25> 'char *' <ArrayToPointerDecay>
|   | | | | | |   |     `-StringLiteral 0x1c00603cc50 <col:25> 'char [5]' lvalue "true"
|   | | | | | |   `-IntegerLiteral 0x1c00603cd30 <col:36> 'int' 0
|   | | | | | `-BinaryOperator 0x1c00603cf20 <line:244:12, col:33> 'int' '=='
|   | | | | |   |-CallExpr 0x1c00603ce80 <col:12, col:28> 'int'
|   | | | | |   | |-ImplicitCastExpr 0x1c00603ce68 <col:12> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | | | | |   | | `-DeclRefExpr 0x1c00603cd98 <col:12> 'int (const char *, const char *)' Function 0x1c00603c8e8 'strcmp' 'int (const char *, const char *)'
|   | | | | |   | |-ImplicitCastExpr 0x1c00603ceb0 <col:19> 'const char *' <LValueToRValue>
|   | | | | |   | | `-DeclRefExpr 0x1c00603cdb8 <col:19> 'const char *' lvalue Var 0x1c00603c710 'btmp' 'const char *'
|   | | | | |   | `-ImplicitCastExpr 0x1c00603cee0 <col:25> 'const char *' <NoOp>
|   | | | | |   |   `-ImplicitCastExpr 0x1c00603cec8 <col:25> 'char *' <ArrayToPointerDecay>
|   | | | | |   |     `-StringLiteral 0x1c00603ce18 <col:25> 'char [2]' lvalue "Y"
|   | | | | |   `-IntegerLiteral 0x1c00603cef8 <col:33> 'int' 0
|   | | | | `-BinaryOperator 0x1c00603d0a8 <line:245:12, col:33> 'int' '=='
|   | | | |   |-CallExpr 0x1c00603d008 <col:12, col:28> 'int'
|   | | | |   | |-ImplicitCastExpr 0x1c00603cff0 <col:12> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | | | |   | | `-DeclRefExpr 0x1c00603cf60 <col:12> 'int (const char *, const char *)' Function 0x1c00603c8e8 'strcmp' 'int (const char *, const char *)'
|   | | | |   | |-ImplicitCastExpr 0x1c00603d038 <col:19> 'const char *' <LValueToRValue>
|   | | | |   | | `-DeclRefExpr 0x1c00603cf80 <col:19> 'const char *' lvalue Var 0x1c00603c710 'btmp' 'const char *'
|   | | | |   | `-ImplicitCastExpr 0x1c00603d068 <col:25> 'const char *' <NoOp>
|   | | | |   |   `-ImplicitCastExpr 0x1c00603d050 <col:25> 'char *' <ArrayToPointerDecay>
|   | | | |   |     `-StringLiteral 0x1c00603cfa0 <col:25> 'char [2]' lvalue "y"
|   | | | |   `-IntegerLiteral 0x1c00603d080 <col:33> 'int' 0
|   | | | `-BinaryOperator 0x1c0060361e0 <line:246:12, col:35> 'int' '=='
|   | | |   |-CallExpr 0x1c00603d190 <col:12, col:30> 'int'
|   | | |   | |-ImplicitCastExpr 0x1c00603d178 <col:12> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | | |   | | `-DeclRefExpr 0x1c00603d0e8 <col:12> 'int (const char *, const char *)' Function 0x1c00603c8e8 'strcmp' 'int (const char *, const char *)'
|   | | |   | |-ImplicitCastExpr 0x1c006036170 <col:19> 'const char *' <LValueToRValue>
|   | | |   | | `-DeclRefExpr 0x1c00603d108 <col:19> 'const char *' lvalue Var 0x1c00603c710 'btmp' 'const char *'
|   | | |   | `-ImplicitCastExpr 0x1c0060361a0 <col:25> 'const char *' <NoOp>
|   | | |   |   `-ImplicitCastExpr 0x1c006036188 <col:25> 'char *' <ArrayToPointerDecay>
|   | | |   |     `-StringLiteral 0x1c00603d128 <col:25> 'char [4]' lvalue "YES"
|   | | |   `-IntegerLiteral 0x1c0060361b8 <col:35> 'int' 0
|   | | `-BinaryOperator 0x1c006036368 <line:247:12, col:35> 'int' '=='
|   | |   |-CallExpr 0x1c0060362c8 <col:12, col:30> 'int'
|   | |   | |-ImplicitCastExpr 0x1c0060362b0 <col:12> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | |   | | `-DeclRefExpr 0x1c006036220 <col:12> 'int (const char *, const char *)' Function 0x1c00603c8e8 'strcmp' 'int (const char *, const char *)'
|   | |   | |-ImplicitCastExpr 0x1c0060362f8 <col:19> 'const char *' <LValueToRValue>
|   | |   | | `-DeclRefExpr 0x1c006036240 <col:19> 'const char *' lvalue Var 0x1c00603c710 'btmp' 'const char *'
|   | |   | `-ImplicitCastExpr 0x1c006036328 <col:25> 'const char *' <NoOp>
|   | |   |   `-ImplicitCastExpr 0x1c006036310 <col:25> 'char *' <ArrayToPointerDecay>
|   | |   |     `-StringLiteral 0x1c006036260 <col:25> 'char [4]' lvalue "yes"
|   | |   `-IntegerLiteral 0x1c006036340 <col:35> 'int' 0
|   | `-CompoundStmt 0x1c006036490 <col:38, line:250:5>
|   |   |-BinaryOperator 0x1c006036438 <line:248:9, col:22> 'int' '='
|   |   | |-UnaryOperator 0x1c0060363f8 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
|   |   | | `-ImplicitCastExpr 0x1c0060363e0 <col:10> 'int *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1c0060363a8 <col:10> 'int *' lvalue ParmVar 0x1c00603c550 'asn1_bool' 'int *'
|   |   | `-IntegerLiteral 0x1c006036410 <col:22> 'int' 255
|   |   `-ReturnStmt 0x1c006036480 <line:249:9, col:16>
|   |     `-IntegerLiteral 0x1c006036458 <col:16> 'int' 1
|   |-IfStmt 0x1c006036ec8 <line:251:5, line:259:5>
|   | |-BinaryOperator 0x1c006036db8 <line:251:9, line:256:34> 'int' '||'
|   | | |-BinaryOperator 0x1c006036c30 <line:251:9, line:255:34> 'int' '||'
|   | | | |-BinaryOperator 0x1c006036aa8 <line:251:9, line:254:33> 'int' '||'
|   | | | | |-BinaryOperator 0x1c006036920 <line:251:9, line:253:33> 'int' '||'
|   | | | | | |-BinaryOperator 0x1c006036798 <line:251:9, line:252:37> 'int' '||'
|   | | | | | | |-BinaryOperator 0x1c006036610 <line:251:9, col:34> 'int' '=='
|   | | | | | | | |-CallExpr 0x1c006036570 <col:9, col:29> 'int'
|   | | | | | | | | |-ImplicitCastExpr 0x1c006036558 <col:9> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | | | | | | | | | `-DeclRefExpr 0x1c0060364c8 <col:9> 'int (const char *, const char *)' Function 0x1c00603c8e8 'strcmp' 'int (const char *, const char *)'
|   | | | | | | | | |-ImplicitCastExpr 0x1c0060365a0 <col:16> 'const char *' <LValueToRValue>
|   | | | | | | | | | `-DeclRefExpr 0x1c0060364e8 <col:16> 'const char *' lvalue Var 0x1c00603c710 'btmp' 'const char *'
|   | | | | | | | | `-ImplicitCastExpr 0x1c0060365d0 <col:22> 'const char *' <NoOp>
|   | | | | | | | |   `-ImplicitCastExpr 0x1c0060365b8 <col:22> 'char *' <ArrayToPointerDecay>
|   | | | | | | | |     `-StringLiteral 0x1c006036508 <col:22> 'char [6]' lvalue "FALSE"
|   | | | | | | | `-IntegerLiteral 0x1c0060365e8 <col:34> 'int' 0
|   | | | | | | `-BinaryOperator 0x1c006036778 <line:252:12, col:37> 'int' '=='
|   | | | | | |   |-CallExpr 0x1c0060366d8 <col:12, col:32> 'int'
|   | | | | | |   | |-ImplicitCastExpr 0x1c0060366c0 <col:12> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | | | | | |   | | `-DeclRefExpr 0x1c006036630 <col:12> 'int (const char *, const char *)' Function 0x1c00603c8e8 'strcmp' 'int (const char *, const char *)'
|   | | | | | |   | |-ImplicitCastExpr 0x1c006036708 <col:19> 'const char *' <LValueToRValue>
|   | | | | | |   | | `-DeclRefExpr 0x1c006036650 <col:19> 'const char *' lvalue Var 0x1c00603c710 'btmp' 'const char *'
|   | | | | | |   | `-ImplicitCastExpr 0x1c006036738 <col:25> 'const char *' <NoOp>
|   | | | | | |   |   `-ImplicitCastExpr 0x1c006036720 <col:25> 'char *' <ArrayToPointerDecay>
|   | | | | | |   |     `-StringLiteral 0x1c006036670 <col:25> 'char [6]' lvalue "false"
|   | | | | | |   `-IntegerLiteral 0x1c006036750 <col:37> 'int' 0
|   | | | | | `-BinaryOperator 0x1c006036900 <line:253:12, col:33> 'int' '=='
|   | | | | |   |-CallExpr 0x1c006036860 <col:12, col:28> 'int'
|   | | | | |   | |-ImplicitCastExpr 0x1c006036848 <col:12> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | | | | |   | | `-DeclRefExpr 0x1c0060367b8 <col:12> 'int (const char *, const char *)' Function 0x1c00603c8e8 'strcmp' 'int (const char *, const char *)'
|   | | | | |   | |-ImplicitCastExpr 0x1c006036890 <col:19> 'const char *' <LValueToRValue>
|   | | | | |   | | `-DeclRefExpr 0x1c0060367d8 <col:19> 'const char *' lvalue Var 0x1c00603c710 'btmp' 'const char *'
|   | | | | |   | `-ImplicitCastExpr 0x1c0060368c0 <col:25> 'const char *' <NoOp>
|   | | | | |   |   `-ImplicitCastExpr 0x1c0060368a8 <col:25> 'char *' <ArrayToPointerDecay>
|   | | | | |   |     `-StringLiteral 0x1c0060367f8 <col:25> 'char [2]' lvalue "N"
|   | | | | |   `-IntegerLiteral 0x1c0060368d8 <col:33> 'int' 0
|   | | | | `-BinaryOperator 0x1c006036a88 <line:254:12, col:33> 'int' '=='
|   | | | |   |-CallExpr 0x1c0060369e8 <col:12, col:28> 'int'
|   | | | |   | |-ImplicitCastExpr 0x1c0060369d0 <col:12> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | | | |   | | `-DeclRefExpr 0x1c006036940 <col:12> 'int (const char *, const char *)' Function 0x1c00603c8e8 'strcmp' 'int (const char *, const char *)'
|   | | | |   | |-ImplicitCastExpr 0x1c006036a18 <col:19> 'const char *' <LValueToRValue>
|   | | | |   | | `-DeclRefExpr 0x1c006036960 <col:19> 'const char *' lvalue Var 0x1c00603c710 'btmp' 'const char *'
|   | | | |   | `-ImplicitCastExpr 0x1c006036a48 <col:25> 'const char *' <NoOp>
|   | | | |   |   `-ImplicitCastExpr 0x1c006036a30 <col:25> 'char *' <ArrayToPointerDecay>
|   | | | |   |     `-StringLiteral 0x1c006036980 <col:25> 'char [2]' lvalue "n"
|   | | | |   `-IntegerLiteral 0x1c006036a60 <col:33> 'int' 0
|   | | | `-BinaryOperator 0x1c006036c10 <line:255:12, col:34> 'int' '=='
|   | | |   |-CallExpr 0x1c006036b70 <col:12, col:29> 'int'
|   | | |   | |-ImplicitCastExpr 0x1c006036b58 <col:12> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | | |   | | `-DeclRefExpr 0x1c006036ac8 <col:12> 'int (const char *, const char *)' Function 0x1c00603c8e8 'strcmp' 'int (const char *, const char *)'
|   | | |   | |-ImplicitCastExpr 0x1c006036ba0 <col:19> 'const char *' <LValueToRValue>
|   | | |   | | `-DeclRefExpr 0x1c006036ae8 <col:19> 'const char *' lvalue Var 0x1c00603c710 'btmp' 'const char *'
|   | | |   | `-ImplicitCastExpr 0x1c006036bd0 <col:25> 'const char *' <NoOp>
|   | | |   |   `-ImplicitCastExpr 0x1c006036bb8 <col:25> 'char *' <ArrayToPointerDecay>
|   | | |   |     `-StringLiteral 0x1c006036b08 <col:25> 'char [3]' lvalue "NO"
|   | | |   `-IntegerLiteral 0x1c006036be8 <col:34> 'int' 0
|   | | `-BinaryOperator 0x1c006036d98 <line:256:12, col:34> 'int' '=='
|   | |   |-CallExpr 0x1c006036cf8 <col:12, col:29> 'int'
|   | |   | |-ImplicitCastExpr 0x1c006036ce0 <col:12> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | |   | | `-DeclRefExpr 0x1c006036c50 <col:12> 'int (const char *, const char *)' Function 0x1c00603c8e8 'strcmp' 'int (const char *, const char *)'
|   | |   | |-ImplicitCastExpr 0x1c006036d28 <col:19> 'const char *' <LValueToRValue>
|   | |   | | `-DeclRefExpr 0x1c006036c70 <col:19> 'const char *' lvalue Var 0x1c00603c710 'btmp' 'const char *'
|   | |   | `-ImplicitCastExpr 0x1c006036d58 <col:25> 'const char *' <NoOp>
|   | |   |   `-ImplicitCastExpr 0x1c006036d40 <col:25> 'char *' <ArrayToPointerDecay>
|   | |   |     `-StringLiteral 0x1c006036c90 <col:25> 'char [3]' lvalue "no"
|   | |   `-IntegerLiteral 0x1c006036d70 <col:34> 'int' 0
|   | `-CompoundStmt 0x1c006036ea8 <col:37, line:259:5>
|   |   |-BinaryOperator 0x1c006036e50 <line:257:9, col:22> 'int' '='
|   |   | |-UnaryOperator 0x1c006036e10 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
|   |   | | `-ImplicitCastExpr 0x1c006036df8 <col:10> 'int *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1c006036dd8 <col:10> 'int *' lvalue ParmVar 0x1c00603c550 'asn1_bool' 'int *'
|   |   | `-IntegerLiteral 0x1c006036e28 <col:22> 'int' 0
|   |   `-ReturnStmt 0x1c006036e98 <line:258:9, col:16>
|   |     `-IntegerLiteral 0x1c006036e70 <col:16> 'int' 1
|   |-LabelStmt 0x1c006036f08 <line:260:2, col:5> 'err'
|   | `-NullStmt 0x1c006036f00 <col:5>
|   `-ReturnStmt 0x1c006037058 <line:264:5, col:12>
|     `-IntegerLiteral 0x1c006037030 <col:12> 'int' 0
|-FunctionDecl 0x1c00603c8e8 <line:242:9> col:9 implicit used strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x1c00603c988 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1c00603c9f0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1c00603f300 <line:267:1, line:277:1> line:267:5 invalid X509V3_get_value_int 'int (const int *, int **)'
| |-ParmVarDecl 0x1c0060370c0 <col:26, col:44> col:44 invalid value 'const int *'
| |-ParmVarDecl 0x1c00603f220 <col:51, col:66> col:66 invalid aint 'int **'
| `-CompoundStmt 0x1c00603f5b0 <line:268:1, line:277:1>
|   |-IfStmt 0x1c00603f560 <line:271:5, line:274:5>
|   | |-OpaqueValueExpr 0x1c00603f548 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1c00603f530 <line:271:64, line:274:5>
|   |   `-ReturnStmt 0x1c00603f520 <line:273:9, col:16>
|   |     `-IntegerLiteral 0x1c00603f4f8 <col:16> 'int' 0
|   `-ReturnStmt 0x1c00603f5a0 <line:276:5, col:12>
|     `-IntegerLiteral 0x1c00603f578 <col:12> 'int' 1
|-FunctionDecl 0x1c00603f988 <line:533:1, line:562:1> line:533:13 used skip_prefix 'void (const unsigned char **, size_t *, size_t, unsigned int)' static
| |-ParmVarDecl 0x1c00603f618 <col:25, col:47> col:47 used p 'const unsigned char **'
| |-ParmVarDecl 0x1c00603f6e8 <col:50, col:58> col:58 used plen 'size_t *'
| |-ParmVarDecl 0x1c00603f760 <line:534:25, col:32> col:32 used subject_len 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c00603f7e0 <line:535:25, col:38> col:38 used flags 'unsigned int'
| `-CompoundStmt 0x1c00603e208 <line:536:1, line:562:1>
|   |-DeclStmt 0x1c00603fb48 <line:537:5, col:38>
|   | `-VarDecl 0x1c00603fa78 <col:5, col:37> col:26 used pattern 'const unsigned char *' cinit
|   |   `-ImplicitCastExpr 0x1c00603fb30 <col:36, col:37> 'const unsigned char *' <LValueToRValue>
|   |     `-UnaryOperator 0x1c00603fb18 <col:36, col:37> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   |       `-ImplicitCastExpr 0x1c00603fb00 <col:37> 'const unsigned char **' <LValueToRValue>
|   |         `-DeclRefExpr 0x1c00603fae0 <col:37> 'const unsigned char **' lvalue ParmVar 0x1c00603f618 'p' 'const unsigned char **'
|   |-DeclStmt 0x1c00603fc40 <line:538:5, col:31>
|   | `-VarDecl 0x1c00603fb70 <col:5, col:27> col:12 used pattern_len 'size_t':'unsigned long long' cinit
|   |   `-ImplicitCastExpr 0x1c00603fc28 <col:26, col:27> 'size_t':'unsigned long long' <LValueToRValue>
|   |     `-UnaryOperator 0x1c00603fc10 <col:26, col:27> 'size_t':'unsigned long long' lvalue prefix '*' cannot overflow
|   |       `-ImplicitCastExpr 0x1c00603fbf8 <col:27> 'size_t *' <LValueToRValue>
|   |         `-DeclRefExpr 0x1c00603fbd8 <col:27> 'size_t *' lvalue ParmVar 0x1c00603f6e8 'plen' 'size_t *'
|   |-IfStmt 0x1c00603fcc8 <line:546:5, line:547:9>
|   | |-OpaqueValueExpr 0x1c00603fcb0 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1c00603fca0 <col:9>
|   |-WhileStmt 0x1c00603ffe8 <line:549:5, line:555:5>
|   | |-BinaryOperator 0x1c00603fe20 <line:549:12, col:42> 'int' '&&'
|   | | |-BinaryOperator 0x1c00603fd68 <col:12, col:26> 'int' '>'
|   | | | |-ImplicitCastExpr 0x1c00603fd38 <col:12> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1c00603fce0 <col:12> 'size_t':'unsigned long long' lvalue Var 0x1c00603fb70 'pattern_len' 'size_t':'unsigned long long'
|   | | | `-ImplicitCastExpr 0x1c00603fd50 <col:26> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1c00603fd18 <col:26> 'size_t':'unsigned long long' lvalue ParmVar 0x1c00603f760 'subject_len' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x1c00603fe08 <col:41, col:42> 'int' <IntegralCast>
|   | |   `-ImplicitCastExpr 0x1c00603fdf0 <col:41, col:42> 'unsigned char' <LValueToRValue>
|   | |     `-UnaryOperator 0x1c00603fdd8 <col:41, col:42> 'const unsigned char' lvalue prefix '*' cannot overflow
|   | |       `-ImplicitCastExpr 0x1c00603fdc0 <col:42> 'const unsigned char *' <LValueToRValue>
|   | |         `-DeclRefExpr 0x1c00603fd88 <col:42> 'const unsigned char *' lvalue Var 0x1c00603fa78 'pattern' 'const unsigned char *'
|   | `-CompoundStmt 0x1c00603ffc0 <col:51, line:555:5>
|   |   |-IfStmt 0x1c00603ff38 <line:550:9, line:552:13>
|   |   | |-OpaqueValueExpr 0x1c00603ff20 <<invalid sloc>> '_Bool'
|   |   | `-BreakStmt 0x1c00603ff18 <col:13>
|   |   |-UnaryOperator 0x1c00603ff70 <line:553:9, col:11> 'const unsigned char *' prefix '++'
|   |   | `-DeclRefExpr 0x1c00603ff50 <col:11> 'const unsigned char *' lvalue Var 0x1c00603fa78 'pattern' 'const unsigned char *'
|   |   `-UnaryOperator 0x1c00603ffa8 <line:554:9, col:11> 'size_t':'unsigned long long' prefix '--'
|   |     `-DeclRefExpr 0x1c00603ff88 <col:11> 'size_t':'unsigned long long' lvalue Var 0x1c00603fb70 'pattern_len' 'size_t':'unsigned long long'
|   `-IfStmt 0x1c00603e1f0 <line:558:5, line:561:5>
|     |-BinaryOperator 0x1c006040070 <line:558:9, col:24> 'int' '=='
|     | |-ImplicitCastExpr 0x1c006040040 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|     | | `-DeclRefExpr 0x1c006040000 <col:9> 'size_t':'unsigned long long' lvalue Var 0x1c00603fb70 'pattern_len' 'size_t':'unsigned long long'
|     | `-ImplicitCastExpr 0x1c006040058 <col:24> 'size_t':'unsigned long long' <LValueToRValue>
|     |   `-DeclRefExpr 0x1c006040020 <col:24> 'size_t':'unsigned long long' lvalue ParmVar 0x1c00603f760 'subject_len' 'size_t':'unsigned long long'
|     `-CompoundStmt 0x1c0060401e0 <col:37, line:561:5>
|       |-BinaryOperator 0x1c006040118 <line:559:9, col:14> 'const unsigned char *' '='
|       | |-UnaryOperator 0x1c0060400c8 <col:9, col:10> 'const unsigned char *' lvalue prefix '*' cannot overflow
|       | | `-ImplicitCastExpr 0x1c0060400b0 <col:10> 'const unsigned char **' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1c006040090 <col:10> 'const unsigned char **' lvalue ParmVar 0x1c00603f618 'p' 'const unsigned char **'
|       | `-ImplicitCastExpr 0x1c006040100 <col:14> 'const unsigned char *' <LValueToRValue>
|       |   `-DeclRefExpr 0x1c0060400e0 <col:14> 'const unsigned char *' lvalue Var 0x1c00603fa78 'pattern' 'const unsigned char *'
|       `-BinaryOperator 0x1c0060401c0 <line:560:9, col:17> 'size_t':'unsigned long long' '='
|         |-UnaryOperator 0x1c006040170 <col:9, col:10> 'size_t':'unsigned long long' lvalue prefix '*' cannot overflow
|         | `-ImplicitCastExpr 0x1c006040158 <col:10> 'size_t *' <LValueToRValue>
|         |   `-DeclRefExpr 0x1c006040138 <col:10> 'size_t *' lvalue ParmVar 0x1c00603f6e8 'plen' 'size_t *'
|         `-ImplicitCastExpr 0x1c0060401a8 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x1c006040188 <col:17> 'size_t':'unsigned long long' lvalue Var 0x1c00603fb70 'pattern_len' 'size_t':'unsigned long long'
|-FunctionDecl 0x1c00603e620 <line:565:1, line:591:1> line:565:12 used equal_nocase 'int (const unsigned char *, size_t, const unsigned char *, size_t, unsigned int)' static
| |-ParmVarDecl 0x1c00603e258 <col:25, col:46> col:46 used pattern 'const unsigned char *'
| |-ParmVarDecl 0x1c00603e2d0 <col:55, col:62> col:62 used pattern_len 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c00603e350 <line:566:25, col:46> col:46 used subject 'const unsigned char *'
| |-ParmVarDecl 0x1c00603e3c8 <col:55, col:62> col:62 used subject_len 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c00603e448 <line:567:25, col:38> col:38 used flags 'unsigned int'
| `-CompoundStmt 0x1c006043598 <line:568:1, line:591:1>
|   |-CallExpr 0x1c00603e840 <line:569:5, col:59> 'void'
|   | |-ImplicitCastExpr 0x1c00603e828 <col:5> 'void (*)(const unsigned char **, size_t *, size_t, unsigned int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1c00603e700 <col:5> 'void (const unsigned char **, size_t *, size_t, unsigned int)' Function 0x1c00603f988 'skip_prefix' 'void (const unsigned char **, size_t *, size_t, unsigned int)'
|   | |-UnaryOperator 0x1c00603e740 <col:17, col:18> 'const unsigned char **' prefix '&' cannot overflow
|   | | `-DeclRefExpr 0x1c00603e720 <col:18> 'const unsigned char *' lvalue ParmVar 0x1c00603e258 'pattern' 'const unsigned char *'
|   | |-UnaryOperator 0x1c00603e778 <col:27, col:28> 'size_t *' prefix '&' cannot overflow
|   | | `-DeclRefExpr 0x1c00603e758 <col:28> 'size_t':'unsigned long long' lvalue ParmVar 0x1c00603e2d0 'pattern_len' 'size_t':'unsigned long long'
|   | |-ImplicitCastExpr 0x1c00603e880 <col:41> 'size_t':'unsigned long long' <LValueToRValue>
|   | | `-DeclRefExpr 0x1c00603e790 <col:41> 'size_t':'unsigned long long' lvalue ParmVar 0x1c00603e3c8 'subject_len' 'size_t':'unsigned long long'
|   | `-ImplicitCastExpr 0x1c00603e898 <col:54> 'unsigned int' <LValueToRValue>
|   |   `-DeclRefExpr 0x1c00603e7b0 <col:54> 'unsigned int' lvalue ParmVar 0x1c00603e448 'flags' 'unsigned int'
|   |-IfStmt 0x1c00603e978 <line:570:5, line:571:16>
|   | |-BinaryOperator 0x1c00603e920 <line:570:9, col:24> 'int' '!='
|   | | |-ImplicitCastExpr 0x1c00603e8f0 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1c00603e8b0 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x1c00603e2d0 'pattern_len' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x1c00603e908 <col:24> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1c00603e8d0 <col:24> 'size_t':'unsigned long long' lvalue ParmVar 0x1c00603e3c8 'subject_len' 'size_t':'unsigned long long'
|   | `-ReturnStmt 0x1c00603e968 <line:571:9, col:16>
|   |   `-IntegerLiteral 0x1c00603e940 <col:16> 'int' 0
|   |-WhileStmt 0x1c006043548 <line:572:5, line:589:5>
|   | |-ImplicitCastExpr 0x1c00603e9b0 <line:572:12> 'size_t':'unsigned long long' <LValueToRValue>
|   | | `-DeclRefExpr 0x1c00603e990 <col:12> 'size_t':'unsigned long long' lvalue ParmVar 0x1c00603e2d0 'pattern_len' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x1c006043500 <col:25, line:589:5>
|   |   |-DeclStmt 0x1c00603eab0 <line:573:9, col:35>
|   |   | `-VarDecl 0x1c00603e9e0 <col:9, col:28> col:23 used l 'unsigned char' cinit
|   |   |   `-ImplicitCastExpr 0x1c00603ea98 <col:27, col:28> 'unsigned char' <LValueToRValue>
|   |   |     `-UnaryOperator 0x1c00603ea80 <col:27, col:28> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   |       `-ImplicitCastExpr 0x1c00603ea68 <col:28> 'const unsigned char *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x1c00603ea48 <col:28> 'const unsigned char *' lvalue ParmVar 0x1c00603e258 'pattern' 'const unsigned char *'
|   |   |-DeclStmt 0x1c00603ebb0 <line:574:9, col:35>
|   |   | `-VarDecl 0x1c00603eae0 <col:9, col:28> col:23 used r 'unsigned char' cinit
|   |   |   `-ImplicitCastExpr 0x1c00603eb98 <col:27, col:28> 'unsigned char' <LValueToRValue>
|   |   |     `-UnaryOperator 0x1c00603eb80 <col:27, col:28> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   |       `-ImplicitCastExpr 0x1c00603eb68 <col:28> 'const unsigned char *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x1c00603eb48 <col:28> 'const unsigned char *' lvalue ParmVar 0x1c00603e350 'subject' 'const unsigned char *'
|   |   |-IfStmt 0x1c00603ecb0 <line:576:9, line:577:20>
|   |   | |-BinaryOperator 0x1c00603ec58 <line:576:13, col:18> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x1c00603ec40 <col:13> 'int' <IntegralCast>
|   |   | | | `-ImplicitCastExpr 0x1c00603ec28 <col:13> 'unsigned char' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x1c00603ebc8 <col:13> 'unsigned char' lvalue Var 0x1c00603e9e0 'l' 'unsigned char'
|   |   | | `-IntegerLiteral 0x1c00603ec00 <col:18> 'int' 0
|   |   | `-ReturnStmt 0x1c00603eca0 <line:577:13, col:20>
|   |   |   `-IntegerLiteral 0x1c00603ec78 <col:20> 'int' 0
|   |   |-IfStmt 0x1c006043440 <line:578:9, line:585:9>
|   |   | |-BinaryOperator 0x1c00603ed80 <line:578:13, col:18> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x1c00603ed50 <col:13> 'int' <IntegralCast>
|   |   | | | `-ImplicitCastExpr 0x1c00603ed20 <col:13> 'unsigned char' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x1c00603ecc8 <col:13> 'unsigned char' lvalue Var 0x1c00603e9e0 'l' 'unsigned char'
|   |   | | `-ImplicitCastExpr 0x1c00603ed68 <col:18> 'int' <IntegralCast>
|   |   | |   `-ImplicitCastExpr 0x1c00603ed38 <col:18> 'unsigned char' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x1c00603ece8 <col:18> 'unsigned char' lvalue Var 0x1c00603eae0 'r' 'unsigned char'
|   |   | `-CompoundStmt 0x1c006043418 <col:21, line:585:9>
|   |   |   |-IfStmt 0x1c00603f008 <line:579:13, line:580:33>
|   |   |   | |-BinaryOperator 0x1c00603eeb0 <line:579:17, col:34> 'int' '&&'
|   |   |   | | |-BinaryOperator 0x1c00603ee08 <col:17, col:24> 'int' '<='
|   |   |   | | | |-CharacterLiteral 0x1c00603eda0 <col:17> 'int' 65
|   |   |   | | | `-ImplicitCastExpr 0x1c00603edf0 <col:24> 'int' <IntegralCast>
|   |   |   | | |   `-ImplicitCastExpr 0x1c00603edd8 <col:24> 'unsigned char' <LValueToRValue>
|   |   |   | | |     `-DeclRefExpr 0x1c00603edb8 <col:24> 'unsigned char' lvalue Var 0x1c00603e9e0 'l' 'unsigned char'
|   |   |   | | `-BinaryOperator 0x1c00603ee90 <col:29, col:34> 'int' '<='
|   |   |   | |   |-ImplicitCastExpr 0x1c00603ee78 <col:29> 'int' <IntegralCast>
|   |   |   | |   | `-ImplicitCastExpr 0x1c00603ee60 <col:29> 'unsigned char' <LValueToRValue>
|   |   |   | |   |   `-DeclRefExpr 0x1c00603ee28 <col:29> 'unsigned char' lvalue Var 0x1c00603e9e0 'l' 'unsigned char'
|   |   |   | |   `-CharacterLiteral 0x1c00603ee48 <col:34> 'int' 90
|   |   |   | `-BinaryOperator 0x1c00603efe8 <line:580:17, col:33> 'unsigned char' '='
|   |   |   |   |-DeclRefExpr 0x1c00603eed0 <col:17> 'unsigned char' lvalue Var 0x1c00603e9e0 'l' 'unsigned char'
|   |   |   |   `-ImplicitCastExpr 0x1c00603efd0 <col:21, col:33> 'unsigned char' <IntegralCast>
|   |   |   |     `-BinaryOperator 0x1c00603efb0 <col:21, col:33> 'int' '+'
|   |   |   |       |-ParenExpr 0x1c00603ef78 <col:21, col:29> 'int'
|   |   |   |       | `-BinaryOperator 0x1c00603ef58 <col:22, col:26> 'int' '-'
|   |   |   |       |   |-ImplicitCastExpr 0x1c00603ef40 <col:22> 'int' <IntegralCast>
|   |   |   |       |   | `-ImplicitCastExpr 0x1c00603ef28 <col:22> 'unsigned char' <LValueToRValue>
|   |   |   |       |   |   `-DeclRefExpr 0x1c00603eef0 <col:22> 'unsigned char' lvalue Var 0x1c00603e9e0 'l' 'unsigned char'
|   |   |   |       |   `-CharacterLiteral 0x1c00603ef10 <col:26> 'int' 65
|   |   |   |       `-CharacterLiteral 0x1c00603ef98 <col:33> 'int' 97
|   |   |   |-IfStmt 0x1c0060432f0 <line:581:13, line:582:33>
|   |   |   | |-BinaryOperator 0x1c00603f130 <line:581:17, col:34> 'int' '&&'
|   |   |   | | |-BinaryOperator 0x1c00603f088 <col:17, col:24> 'int' '<='
|   |   |   | | | |-CharacterLiteral 0x1c00603f020 <col:17> 'int' 65
|   |   |   | | | `-ImplicitCastExpr 0x1c00603f070 <col:24> 'int' <IntegralCast>
|   |   |   | | |   `-ImplicitCastExpr 0x1c00603f058 <col:24> 'unsigned char' <LValueToRValue>
|   |   |   | | |     `-DeclRefExpr 0x1c00603f038 <col:24> 'unsigned char' lvalue Var 0x1c00603eae0 'r' 'unsigned char'
|   |   |   | | `-BinaryOperator 0x1c00603f110 <col:29, col:34> 'int' '<='
|   |   |   | |   |-ImplicitCastExpr 0x1c00603f0f8 <col:29> 'int' <IntegralCast>
|   |   |   | |   | `-ImplicitCastExpr 0x1c00603f0e0 <col:29> 'unsigned char' <LValueToRValue>
|   |   |   | |   |   `-DeclRefExpr 0x1c00603f0a8 <col:29> 'unsigned char' lvalue Var 0x1c00603eae0 'r' 'unsigned char'
|   |   |   | |   `-CharacterLiteral 0x1c00603f0c8 <col:34> 'int' 90
|   |   |   | `-BinaryOperator 0x1c0060432d0 <line:582:17, col:33> 'unsigned char' '='
|   |   |   |   |-DeclRefExpr 0x1c00603f150 <col:17> 'unsigned char' lvalue Var 0x1c00603eae0 'r' 'unsigned char'
|   |   |   |   `-ImplicitCastExpr 0x1c0060432b8 <col:21, col:33> 'unsigned char' <IntegralCast>
|   |   |   |     `-BinaryOperator 0x1c006043298 <col:21, col:33> 'int' '+'
|   |   |   |       |-ParenExpr 0x1c006043260 <col:21, col:29> 'int'
|   |   |   |       | `-BinaryOperator 0x1c006043240 <col:22, col:26> 'int' '-'
|   |   |   |       |   |-ImplicitCastExpr 0x1c00603f1c0 <col:22> 'int' <IntegralCast>
|   |   |   |       |   | `-ImplicitCastExpr 0x1c00603f1a8 <col:22> 'unsigned char' <LValueToRValue>
|   |   |   |       |   |   `-DeclRefExpr 0x1c00603f170 <col:22> 'unsigned char' lvalue Var 0x1c00603eae0 'r' 'unsigned char'
|   |   |   |       |   `-CharacterLiteral 0x1c00603f190 <col:26> 'int' 65
|   |   |   |       `-CharacterLiteral 0x1c006043280 <col:33> 'int' 97
|   |   |   `-IfStmt 0x1c006043400 <line:583:13, line:584:24>
|   |   |     |-BinaryOperator 0x1c0060433a8 <line:583:17, col:22> 'int' '!='
|   |   |     | |-ImplicitCastExpr 0x1c006043378 <col:17> 'int' <IntegralCast>
|   |   |     | | `-ImplicitCastExpr 0x1c006043348 <col:17> 'unsigned char' <LValueToRValue>
|   |   |     | |   `-DeclRefExpr 0x1c006043308 <col:17> 'unsigned char' lvalue Var 0x1c00603e9e0 'l' 'unsigned char'
|   |   |     | `-ImplicitCastExpr 0x1c006043390 <col:22> 'int' <IntegralCast>
|   |   |     |   `-ImplicitCastExpr 0x1c006043360 <col:22> 'unsigned char' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x1c006043328 <col:22> 'unsigned char' lvalue Var 0x1c00603eae0 'r' 'unsigned char'
|   |   |     `-ReturnStmt 0x1c0060433f0 <line:584:17, col:24>
|   |   |       `-IntegerLiteral 0x1c0060433c8 <col:24> 'int' 0
|   |   |-UnaryOperator 0x1c006043478 <line:586:9, col:11> 'const unsigned char *' prefix '++'
|   |   | `-DeclRefExpr 0x1c006043458 <col:11> 'const unsigned char *' lvalue ParmVar 0x1c00603e258 'pattern' 'const unsigned char *'
|   |   |-UnaryOperator 0x1c0060434b0 <line:587:9, col:11> 'const unsigned char *' prefix '++'
|   |   | `-DeclRefExpr 0x1c006043490 <col:11> 'const unsigned char *' lvalue ParmVar 0x1c00603e350 'subject' 'const unsigned char *'
|   |   `-UnaryOperator 0x1c0060434e8 <line:588:9, col:11> 'size_t':'unsigned long long' prefix '--'
|   |     `-DeclRefExpr 0x1c0060434c8 <col:11> 'size_t':'unsigned long long' lvalue ParmVar 0x1c00603e2d0 'pattern_len' 'size_t':'unsigned long long'
|   `-ReturnStmt 0x1c006043588 <line:590:5, col:12>
|     `-IntegerLiteral 0x1c006043560 <col:12> 'int' 1
|-FunctionDecl 0x1c006043900 <line:594:1, line:602:1> line:594:12 used equal_case 'int (const unsigned char *, size_t, const unsigned char *, size_t, unsigned int)' static
| |-ParmVarDecl 0x1c0060435e0 <col:23, col:44> col:44 used pattern 'const unsigned char *'
| |-ParmVarDecl 0x1c006043658 <col:53, col:60> col:60 used pattern_len 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c0060436d8 <line:595:23, col:44> col:44 used subject 'const unsigned char *'
| |-ParmVarDecl 0x1c006043750 <col:53, col:60> col:60 used subject_len 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c0060437d0 <line:596:23, col:36> col:36 used flags 'unsigned int'
| `-CompoundStmt 0x1c006044048 <line:597:1, line:602:1>
|   |-CallExpr 0x1c006043ac8 <line:598:5, col:59> 'void'
|   | |-ImplicitCastExpr 0x1c006043ab0 <col:5> 'void (*)(const unsigned char **, size_t *, size_t, unsigned int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1c0060439e0 <col:5> 'void (const unsigned char **, size_t *, size_t, unsigned int)' Function 0x1c00603f988 'skip_prefix' 'void (const unsigned char **, size_t *, size_t, unsigned int)'
|   | |-UnaryOperator 0x1c006043a20 <col:17, col:18> 'const unsigned char **' prefix '&' cannot overflow
|   | | `-DeclRefExpr 0x1c006043a00 <col:18> 'const unsigned char *' lvalue ParmVar 0x1c0060435e0 'pattern' 'const unsigned char *'
|   | |-UnaryOperator 0x1c006043a58 <col:27, col:28> 'size_t *' prefix '&' cannot overflow
|   | | `-DeclRefExpr 0x1c006043a38 <col:28> 'size_t':'unsigned long long' lvalue ParmVar 0x1c006043658 'pattern_len' 'size_t':'unsigned long long'
|   | |-ImplicitCastExpr 0x1c006043b08 <col:41> 'size_t':'unsigned long long' <LValueToRValue>
|   | | `-DeclRefExpr 0x1c006043a70 <col:41> 'size_t':'unsigned long long' lvalue ParmVar 0x1c006043750 'subject_len' 'size_t':'unsigned long long'
|   | `-ImplicitCastExpr 0x1c006043b20 <col:54> 'unsigned int' <LValueToRValue>
|   |   `-DeclRefExpr 0x1c006043a90 <col:54> 'unsigned int' lvalue ParmVar 0x1c0060437d0 'flags' 'unsigned int'
|   |-IfStmt 0x1c006043c00 <line:599:5, line:600:16>
|   | |-BinaryOperator 0x1c006043ba8 <line:599:9, col:24> 'int' '!='
|   | | |-ImplicitCastExpr 0x1c006043b78 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1c006043b38 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x1c006043658 'pattern_len' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x1c006043b90 <col:24> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1c006043b58 <col:24> 'size_t':'unsigned long long' lvalue ParmVar 0x1c006043750 'subject_len' 'size_t':'unsigned long long'
|   | `-ReturnStmt 0x1c006043bf0 <line:600:9, col:16>
|   |   `-IntegerLiteral 0x1c006043bc8 <col:16> 'int' 0
|   `-ReturnStmt 0x1c006044038 <line:601:5, col:49>
|     `-UnaryOperator 0x1c006044020 <col:12, col:49> 'int' prefix '!' cannot overflow
|       `-CallExpr 0x1c006043f70 <col:13, col:49> 'int'
|         |-ImplicitCastExpr 0x1c006043f58 <col:13> 'int (*)(const void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x1c006043e50 <col:13> 'int (const void *, const void *, unsigned long long)' Function 0x1c006043c60 'memcmp' 'int (const void *, const void *, unsigned long long)'
|         |-ImplicitCastExpr 0x1c006043fc0 <col:20> 'const void *' <BitCast>
|         | `-ImplicitCastExpr 0x1c006043fa8 <col:20> 'const unsigned char *' <LValueToRValue>
|         |   `-DeclRefExpr 0x1c006043e88 <col:20> 'const unsigned char *' lvalue ParmVar 0x1c0060435e0 'pattern' 'const unsigned char *'
|         |-ImplicitCastExpr 0x1c006043ff0 <col:29> 'const void *' <BitCast>
|         | `-ImplicitCastExpr 0x1c006043fd8 <col:29> 'const unsigned char *' <LValueToRValue>
|         |   `-DeclRefExpr 0x1c006043ea8 <col:29> 'const unsigned char *' lvalue ParmVar 0x1c0060436d8 'subject' 'const unsigned char *'
|         `-ImplicitCastExpr 0x1c006044008 <col:38> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x1c006043ec8 <col:38> 'size_t':'unsigned long long' lvalue ParmVar 0x1c006043658 'pattern_len' 'size_t':'unsigned long long'
|-FunctionDecl 0x1c006043c60 <col:13> col:13 implicit used memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1c006043d00 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1c006043d68 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1c006043dd0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1c00603d390 <line:608:1, line:631:1> line:608:12 used equal_email 'int (const unsigned char *, size_t, const unsigned char *, size_t, unsigned int)' static
| |-ParmVarDecl 0x1c006044088 <col:24, col:45> col:45 used a 'const unsigned char *'
| |-ParmVarDecl 0x1c006044100 <col:48, col:55> col:55 used a_len 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c006044180 <line:609:24, col:45> col:45 used b 'const unsigned char *'
| |-ParmVarDecl 0x1c00603d1e0 <col:48, col:55> col:55 used b_len 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c00603d260 <line:610:24, col:37> col:37 unused_flags 'unsigned int'
| `-CompoundStmt 0x1c00603e028 <line:611:1, line:631:1>
|   |-DeclStmt 0x1c00603d520 <line:612:5, col:21>
|   | `-VarDecl 0x1c00603d480 <col:5, col:16> col:12 used i 'size_t':'unsigned long long' cinit
|   |   `-ImplicitCastExpr 0x1c00603d508 <col:16> 'size_t':'unsigned long long' <LValueToRValue>
|   |     `-DeclRefExpr 0x1c00603d4e8 <col:16> 'size_t':'unsigned long long' lvalue ParmVar 0x1c006044100 'a_len' 'size_t':'unsigned long long'
|   |-IfStmt 0x1c00603d600 <line:613:5, line:614:16>
|   | |-BinaryOperator 0x1c00603d5a8 <line:613:9, col:18> 'int' '!='
|   | | |-ImplicitCastExpr 0x1c00603d578 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1c00603d538 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x1c006044100 'a_len' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x1c00603d590 <col:18> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1c00603d558 <col:18> 'size_t':'unsigned long long' lvalue ParmVar 0x1c00603d1e0 'b_len' 'size_t':'unsigned long long'
|   | `-ReturnStmt 0x1c00603d5f0 <line:614:9, col:16>
|   |   `-IntegerLiteral 0x1c00603d5c8 <col:16> 'int' 0
|   |-WhileStmt 0x1c00603dd38 <line:620:5, line:627:5>
|   | |-BinaryOperator 0x1c00603d6a8 <line:620:12, col:16> 'int' '>'
|   | | |-ImplicitCastExpr 0x1c00603d678 <col:12> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1c00603d618 <col:12> 'size_t':'unsigned long long' lvalue Var 0x1c00603d480 'i' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x1c00603d690 <col:16> 'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x1c00603d650 <col:16> 'int' 0
|   | `-CompoundStmt 0x1c00603dd18 <col:19, line:627:5>
|   |   |-UnaryOperator 0x1c00603d6e8 <line:621:9, col:11> 'size_t':'unsigned long long' prefix '--'
|   |   | `-DeclRefExpr 0x1c00603d6c8 <col:11> 'size_t':'unsigned long long' lvalue Var 0x1c00603d480 'i' 'size_t':'unsigned long long'
|   |   `-IfStmt 0x1c00603dd00 <line:622:9, line:626:9>
|   |     |-BinaryOperator 0x1c00603d8f0 <line:622:13, col:36> 'int' '||'
|   |     | |-BinaryOperator 0x1c00603d7d8 <col:13, col:21> 'int' '=='
|   |     | | |-ImplicitCastExpr 0x1c00603d7c0 <col:13, col:16> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x1c00603d7a8 <col:13, col:16> 'unsigned char' <LValueToRValue>
|   |     | | |   `-ArraySubscriptExpr 0x1c00603d770 <col:13, col:16> 'const unsigned char' lvalue
|   |     | | |     |-ImplicitCastExpr 0x1c00603d740 <col:13> 'const unsigned char *' <LValueToRValue>
|   |     | | |     | `-DeclRefExpr 0x1c00603d700 <col:13> 'const unsigned char *' lvalue ParmVar 0x1c006044088 'a' 'const unsigned char *'
|   |     | | |     `-ImplicitCastExpr 0x1c00603d758 <col:15> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | | |       `-DeclRefExpr 0x1c00603d720 <col:15> 'size_t':'unsigned long long' lvalue Var 0x1c00603d480 'i' 'size_t':'unsigned long long'
|   |     | | `-CharacterLiteral 0x1c00603d790 <col:21> 'int' 64
|   |     | `-BinaryOperator 0x1c00603d8d0 <col:28, col:36> 'int' '=='
|   |     |   |-ImplicitCastExpr 0x1c00603d8b8 <col:28, col:31> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x1c00603d8a0 <col:28, col:31> 'unsigned char' <LValueToRValue>
|   |     |   |   `-ArraySubscriptExpr 0x1c00603d868 <col:28, col:31> 'const unsigned char' lvalue
|   |     |   |     |-ImplicitCastExpr 0x1c00603d838 <col:28> 'const unsigned char *' <LValueToRValue>
|   |     |   |     | `-DeclRefExpr 0x1c00603d7f8 <col:28> 'const unsigned char *' lvalue ParmVar 0x1c006044180 'b' 'const unsigned char *'
|   |     |   |     `-ImplicitCastExpr 0x1c00603d850 <col:30> 'size_t':'unsigned long long' <LValueToRValue>
|   |     |   |       `-DeclRefExpr 0x1c00603d818 <col:30> 'size_t':'unsigned long long' lvalue Var 0x1c00603d480 'i' 'size_t':'unsigned long long'
|   |     |   `-CharacterLiteral 0x1c00603d888 <col:36> 'int' 64
|   |     `-CompoundStmt 0x1c00603dce0 <col:41, line:626:9>
|   |       |-IfStmt 0x1c00603dcc0 <line:623:13, line:624:24>
|   |       | |-UnaryOperator 0x1c00603dc70 <line:623:17, col:68> 'int' prefix '!' cannot overflow
|   |       | | `-CallExpr 0x1c00603dc10 <col:18, col:68> 'int'
|   |       | |   |-ImplicitCastExpr 0x1c00603dbf8 <col:18> 'int (*)(const unsigned char *, size_t, const unsigned char *, size_t, unsigned int)' <FunctionToPointerDecay>
|   |       | |   | `-DeclRefExpr 0x1c00603d910 <col:18> 'int (const unsigned char *, size_t, const unsigned char *, size_t, unsigned int)' Function 0x1c00603e620 'equal_nocase' 'int (const unsigned char *, size_t, const unsigned char *, size_t, unsigned int)'
|   |       | |   |-BinaryOperator 0x1c00603d9a0 <col:31, col:35> 'const unsigned char *' '+'
|   |       | |   | |-ImplicitCastExpr 0x1c00603d970 <col:31> 'const unsigned char *' <LValueToRValue>
|   |       | |   | | `-DeclRefExpr 0x1c00603d930 <col:31> 'const unsigned char *' lvalue ParmVar 0x1c006044088 'a' 'const unsigned char *'
|   |       | |   | `-ImplicitCastExpr 0x1c00603d988 <col:35> 'size_t':'unsigned long long' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x1c00603d950 <col:35> 'size_t':'unsigned long long' lvalue Var 0x1c00603d480 'i' 'size_t':'unsigned long long'
|   |       | |   |-BinaryOperator 0x1c00603da30 <col:38, col:46> 'unsigned long long' '-'
|   |       | |   | |-ImplicitCastExpr 0x1c00603da00 <col:38> 'size_t':'unsigned long long' <LValueToRValue>
|   |       | |   | | `-DeclRefExpr 0x1c00603d9c0 <col:38> 'size_t':'unsigned long long' lvalue ParmVar 0x1c006044100 'a_len' 'size_t':'unsigned long long'
|   |       | |   | `-ImplicitCastExpr 0x1c00603da18 <col:46> 'size_t':'unsigned long long' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x1c00603d9e0 <col:46> 'size_t':'unsigned long long' lvalue Var 0x1c00603d480 'i' 'size_t':'unsigned long long'
|   |       | |   |-BinaryOperator 0x1c00603dac0 <col:49, col:53> 'const unsigned char *' '+'
|   |       | |   | |-ImplicitCastExpr 0x1c00603da90 <col:49> 'const unsigned char *' <LValueToRValue>
|   |       | |   | | `-DeclRefExpr 0x1c00603da50 <col:49> 'const unsigned char *' lvalue ParmVar 0x1c006044180 'b' 'const unsigned char *'
|   |       | |   | `-ImplicitCastExpr 0x1c00603daa8 <col:53> 'size_t':'unsigned long long' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x1c00603da70 <col:53> 'size_t':'unsigned long long' lvalue Var 0x1c00603d480 'i' 'size_t':'unsigned long long'
|   |       | |   |-BinaryOperator 0x1c00603db50 <col:56, col:64> 'unsigned long long' '-'
|   |       | |   | |-ImplicitCastExpr 0x1c00603db20 <col:56> 'size_t':'unsigned long long' <LValueToRValue>
|   |       | |   | | `-DeclRefExpr 0x1c00603dae0 <col:56> 'size_t':'unsigned long long' lvalue ParmVar 0x1c006044100 'a_len' 'size_t':'unsigned long long'
|   |       | |   | `-ImplicitCastExpr 0x1c00603db38 <col:64> 'size_t':'unsigned long long' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x1c00603db00 <col:64> 'size_t':'unsigned long long' lvalue Var 0x1c00603d480 'i' 'size_t':'unsigned long long'
|   |       | |   `-ImplicitCastExpr 0x1c00603dc58 <col:67> 'unsigned int' <IntegralCast>
|   |       | |     `-IntegerLiteral 0x1c00603db70 <col:67> 'int' 0
|   |       | `-ReturnStmt 0x1c00603dcb0 <line:624:17, col:24>
|   |       |   `-IntegerLiteral 0x1c00603dc88 <col:24> 'int' 0
|   |       `-BreakStmt 0x1c00603dcd8 <line:625:13>
|   |-IfStmt 0x1c00603de60 <line:628:5, line:629:13>
|   | |-BinaryOperator 0x1c00603ddc8 <line:628:9, col:14> 'int' '=='
|   | | |-ImplicitCastExpr 0x1c00603dd98 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1c00603dd50 <col:9> 'size_t':'unsigned long long' lvalue Var 0x1c00603d480 'i' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x1c00603ddb0 <col:14> 'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x1c00603dd70 <col:14> 'int' 0
|   | `-BinaryOperator 0x1c00603de40 <line:629:9, col:13> 'size_t':'unsigned long long' '='
|   |   |-DeclRefExpr 0x1c00603dde8 <col:9> 'size_t':'unsigned long long' lvalue Var 0x1c00603d480 'i' 'size_t':'unsigned long long'
|   |   `-ImplicitCastExpr 0x1c00603de28 <col:13> 'size_t':'unsigned long long' <LValueToRValue>
|   |     `-DeclRefExpr 0x1c00603de08 <col:13> 'size_t':'unsigned long long' lvalue ParmVar 0x1c006044100 'a_len' 'size_t':'unsigned long long'
|   `-ReturnStmt 0x1c00603e018 <line:630:5, col:36>
|     `-CallExpr 0x1c00603df58 <col:12, col:36> 'int'
|       |-ImplicitCastExpr 0x1c00603df40 <col:12> 'int (*)(const unsigned char *, size_t, const unsigned char *, size_t, unsigned int)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1c00603de78 <col:12> 'int (const unsigned char *, size_t, const unsigned char *, size_t, unsigned int)' Function 0x1c006043900 'equal_case' 'int (const unsigned char *, size_t, const unsigned char *, size_t, unsigned int)'
|       |-ImplicitCastExpr 0x1c00603dfa0 <col:23> 'const unsigned char *' <LValueToRValue>
|       | `-DeclRefExpr 0x1c00603de98 <col:23> 'const unsigned char *' lvalue ParmVar 0x1c006044088 'a' 'const unsigned char *'
|       |-ImplicitCastExpr 0x1c00603dfb8 <col:26> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x1c00603deb8 <col:26> 'size_t':'unsigned long long' lvalue Var 0x1c00603d480 'i' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x1c00603dfd0 <col:29> 'const unsigned char *' <LValueToRValue>
|       | `-DeclRefExpr 0x1c00603ded8 <col:29> 'const unsigned char *' lvalue ParmVar 0x1c006044180 'b' 'const unsigned char *'
|       |-ImplicitCastExpr 0x1c00603dfe8 <col:32> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x1c00603def8 <col:32> 'size_t':'unsigned long long' lvalue Var 0x1c00603d480 'i' 'size_t':'unsigned long long'
|       `-ImplicitCastExpr 0x1c00603e000 <col:35> 'unsigned int' <IntegralCast>
|         `-IntegerLiteral 0x1c00603df18 <col:35> 'int' 0
|-FunctionDecl 0x1c006048650 <line:637:1, line:686:1> line:637:12 used wildcard_match 'int (const unsigned char *, size_t, const unsigned char *, size_t, const unsigned char *, size_t, unsigned int)' static
| |-ParmVarDecl 0x1c00603e078 <col:27, col:48> col:48 used prefix 'const unsigned char *'
| |-ParmVarDecl 0x1c00603e0f0 <col:56, col:63> col:63 used prefix_len 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c00603e170 <line:638:27, col:48> col:48 used suffix 'const unsigned char *'
| |-ParmVarDecl 0x1c0060482a0 <col:56, col:63> col:63 used suffix_len 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c006048320 <line:639:27, col:48> col:48 used subject 'const unsigned char *'
| |-ParmVarDecl 0x1c006048398 <col:57, col:64> col:64 used subject_len 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c006048418 <line:640:27, col:40> col:40 used flags 'unsigned int'
| `-CompoundStmt 0x1c006046780 <line:641:1, line:686:1>
|   |-DeclStmt 0x1c0060487c0 <line:642:5, col:40>
|   | `-VarDecl 0x1c006048758 <col:5, col:26> col:26 used wildcard_start 'const unsigned char *'
|   |-DeclStmt 0x1c006048858 <line:643:5, col:38>
|   | `-VarDecl 0x1c0060487f0 <col:5, col:26> col:26 used wildcard_end 'const unsigned char *'
|   |-DeclStmt 0x1c0060488f0 <line:644:5, col:27>
|   | `-VarDecl 0x1c006048888 <col:5, col:26> col:26 used p 'const unsigned char *'
|   |-DeclStmt 0x1c0060489b0 <line:645:5, col:24>
|   | `-VarDecl 0x1c006048920 <col:5, col:23> col:9 used allow_multi 'int' cinit
|   |   `-IntegerLiteral 0x1c006048988 <col:23> 'int' 0
|   |-DeclStmt 0x1c006048a70 <line:646:5, col:23>
|   | `-VarDecl 0x1c0060489e0 <col:5, col:22> col:9 used allow_idna 'int' cinit
|   |   `-IntegerLiteral 0x1c006048a48 <col:22> 'int' 0
|   |-IfStmt 0x1c006048ba8 <line:648:5, line:649:16>
|   | |-BinaryOperator 0x1c006048b50 <line:648:9, col:36> 'int' '<'
|   | | |-ImplicitCastExpr 0x1c006048b38 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1c006048a88 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x1c006048398 'subject_len' 'size_t':'unsigned long long'
|   | | `-BinaryOperator 0x1c006048b18 <col:23, col:36> 'unsigned long long' '+'
|   | |   |-ImplicitCastExpr 0x1c006048ae8 <col:23> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x1c006048aa8 <col:23> 'size_t':'unsigned long long' lvalue ParmVar 0x1c00603e0f0 'prefix_len' 'size_t':'unsigned long long'
|   | |   `-ImplicitCastExpr 0x1c006048b00 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   | |     `-DeclRefExpr 0x1c006048ac8 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1c0060482a0 'suffix_len' 'size_t':'unsigned long long'
|   | `-ReturnStmt 0x1c006048b98 <line:649:9, col:16>
|   |   `-IntegerLiteral 0x1c006048b70 <col:16> 'int' 0
|   |-IfStmt 0x1c006048da8 <line:650:5, line:651:16>
|   | |-UnaryOperator 0x1c006048d58 <line:650:9, col:69> 'int' prefix '!' cannot overflow
|   | | `-CallExpr 0x1c006048c98 <col:10, col:69> 'int'
|   | |   |-ImplicitCastExpr 0x1c006048c80 <col:10> 'int (*)(const unsigned char *, size_t, const unsigned char *, size_t, unsigned int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x1c006048bc0 <col:10> 'int (const unsigned char *, size_t, const unsigned char *, size_t, unsigned int)' Function 0x1c00603e620 'equal_nocase' 'int (const unsigned char *, size_t, const unsigned char *, size_t, unsigned int)'
|   | |   |-ImplicitCastExpr 0x1c006048ce0 <col:23> 'const unsigned char *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x1c006048be0 <col:23> 'const unsigned char *' lvalue ParmVar 0x1c00603e078 'prefix' 'const unsigned char *'
|   | |   |-ImplicitCastExpr 0x1c006048cf8 <col:31> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x1c006048c00 <col:31> 'size_t':'unsigned long long' lvalue ParmVar 0x1c00603e0f0 'prefix_len' 'size_t':'unsigned long long'
|   | |   |-ImplicitCastExpr 0x1c006048d10 <col:43> 'const unsigned char *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x1c006048c20 <col:43> 'const unsigned char *' lvalue ParmVar 0x1c006048320 'subject' 'const unsigned char *'
|   | |   |-ImplicitCastExpr 0x1c006048d28 <col:52> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x1c006048c40 <col:52> 'size_t':'unsigned long long' lvalue ParmVar 0x1c00603e0f0 'prefix_len' 'size_t':'unsigned long long'
|   | |   `-ImplicitCastExpr 0x1c006048d40 <col:64> 'unsigned int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x1c006048c60 <col:64> 'unsigned int' lvalue ParmVar 0x1c006048418 'flags' 'unsigned int'
|   | `-ReturnStmt 0x1c006048d98 <line:651:9, col:16>
|   |   `-IntegerLiteral 0x1c006048d70 <col:16> 'int' 0
|   |-BinaryOperator 0x1c006048e88 <line:652:5, col:32> 'const unsigned char *' '='
|   | |-DeclRefExpr 0x1c006048dc0 <col:5> 'const unsigned char *' lvalue Var 0x1c006048758 'wildcard_start' 'const unsigned char *'
|   | `-BinaryOperator 0x1c006048e68 <col:22, col:32> 'const unsigned char *' '+'
|   |   |-ImplicitCastExpr 0x1c006048e38 <col:22> 'const unsigned char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1c006048df8 <col:22> 'const unsigned char *' lvalue ParmVar 0x1c006048320 'subject' 'const unsigned char *'
|   |   `-ImplicitCastExpr 0x1c006048e50 <col:32> 'size_t':'unsigned long long' <LValueToRValue>
|   |     `-DeclRefExpr 0x1c006048e18 <col:32> 'size_t':'unsigned long long' lvalue ParmVar 0x1c00603e0f0 'prefix_len' 'size_t':'unsigned long long'
|   |-BinaryOperator 0x1c006048fe8 <line:653:5, col:55> 'const unsigned char *' '='
|   | |-DeclRefExpr 0x1c006048ea8 <col:5> 'const unsigned char *' lvalue Var 0x1c0060487f0 'wildcard_end' 'const unsigned char *'
|   | `-BinaryOperator 0x1c006048fc8 <col:20, col:55> 'const unsigned char *' '+'
|   |   |-ImplicitCastExpr 0x1c006048fb0 <col:20> 'const unsigned char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1c006048ee0 <col:20> 'const unsigned char *' lvalue ParmVar 0x1c006048320 'subject' 'const unsigned char *'
|   |   `-ParenExpr 0x1c006048f90 <col:30, col:55> 'unsigned long long'
|   |     `-BinaryOperator 0x1c006048f70 <col:31, col:45> 'unsigned long long' '-'
|   |       |-ImplicitCastExpr 0x1c006048f40 <col:31> 'size_t':'unsigned long long' <LValueToRValue>
|   |       | `-DeclRefExpr 0x1c006048f00 <col:31> 'size_t':'unsigned long long' lvalue ParmVar 0x1c006048398 'subject_len' 'size_t':'unsigned long long'
|   |       `-ImplicitCastExpr 0x1c006048f58 <col:45> 'size_t':'unsigned long long' <LValueToRValue>
|   |         `-DeclRefExpr 0x1c006048f20 <col:45> 'size_t':'unsigned long long' lvalue ParmVar 0x1c0060482a0 'suffix_len' 'size_t':'unsigned long long'
|   |-IfStmt 0x1c0060491f0 <line:654:5, line:655:16>
|   | |-UnaryOperator 0x1c0060491a0 <line:654:9, col:74> 'int' prefix '!' cannot overflow
|   | | `-CallExpr 0x1c0060490e0 <col:10, col:74> 'int'
|   | |   |-ImplicitCastExpr 0x1c0060490c8 <col:10> 'int (*)(const unsigned char *, size_t, const unsigned char *, size_t, unsigned int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x1c006049008 <col:10> 'int (const unsigned char *, size_t, const unsigned char *, size_t, unsigned int)' Function 0x1c00603e620 'equal_nocase' 'int (const unsigned char *, size_t, const unsigned char *, size_t, unsigned int)'
|   | |   |-ImplicitCastExpr 0x1c006049128 <col:23> 'const unsigned char *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x1c006049028 <col:23> 'const unsigned char *' lvalue Var 0x1c0060487f0 'wildcard_end' 'const unsigned char *'
|   | |   |-ImplicitCastExpr 0x1c006049140 <col:37> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x1c006049048 <col:37> 'size_t':'unsigned long long' lvalue ParmVar 0x1c0060482a0 'suffix_len' 'size_t':'unsigned long long'
|   | |   |-ImplicitCastExpr 0x1c006049158 <col:49> 'const unsigned char *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x1c006049068 <col:49> 'const unsigned char *' lvalue ParmVar 0x1c00603e170 'suffix' 'const unsigned char *'
|   | |   |-ImplicitCastExpr 0x1c006049170 <col:57> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x1c006049088 <col:57> 'size_t':'unsigned long long' lvalue ParmVar 0x1c0060482a0 'suffix_len' 'size_t':'unsigned long long'
|   | |   `-ImplicitCastExpr 0x1c006049188 <col:69> 'unsigned int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x1c0060490a8 <col:69> 'unsigned int' lvalue ParmVar 0x1c006048418 'flags' 'unsigned int'
|   | `-ReturnStmt 0x1c0060491e0 <line:655:9, col:16>
|   |   `-IntegerLiteral 0x1c0060491b8 <col:16> 'int' 0
|   |-IfStmt 0x1c0060455b0 <line:660:5, line:666:5>
|   | |-BinaryOperator 0x1c006045338 <line:660:9, col:39> 'int' '&&'
|   | | |-BinaryOperator 0x1c006045260 <col:9, col:23> 'int' '=='
|   | | | |-ImplicitCastExpr 0x1c006049250 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1c006049208 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x1c00603e0f0 'prefix_len' 'size_t':'unsigned long long'
|   | | | `-ImplicitCastExpr 0x1c006049268 <col:23> 'unsigned long long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x1c006049228 <col:23> 'int' 0
|   | | `-BinaryOperator 0x1c006045318 <col:28, col:39> 'int' '=='
|   | |   |-ImplicitCastExpr 0x1c006045300 <col:28, col:29> 'int' <IntegralCast>
|   | |   | `-ImplicitCastExpr 0x1c0060452e8 <col:28, col:29> 'unsigned char' <LValueToRValue>
|   | |   |   `-UnaryOperator 0x1c0060452b8 <col:28, col:29> 'const unsigned char' lvalue prefix '*' cannot overflow
|   | |   |     `-ImplicitCastExpr 0x1c0060452a0 <col:29> 'const unsigned char *' <LValueToRValue>
|   | |   |       `-DeclRefExpr 0x1c006045280 <col:29> 'const unsigned char *' lvalue ParmVar 0x1c00603e170 'suffix' 'const unsigned char *'
|   | |   `-CharacterLiteral 0x1c0060452d0 <col:39> 'int' 46
|   | `-CompoundStmt 0x1c006045588 <col:44, line:666:5>
|   |   |-IfStmt 0x1c006045420 <line:661:9, line:662:20>
|   |   | |-BinaryOperator 0x1c0060453c8 <line:661:13, col:31> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x1c006045398 <col:13> 'const unsigned char *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1c006045358 <col:13> 'const unsigned char *' lvalue Var 0x1c006048758 'wildcard_start' 'const unsigned char *'
|   |   | | `-ImplicitCastExpr 0x1c0060453b0 <col:31> 'const unsigned char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1c006045378 <col:31> 'const unsigned char *' lvalue Var 0x1c0060487f0 'wildcard_end' 'const unsigned char *'
|   |   | `-ReturnStmt 0x1c006045410 <line:662:13, col:20>
|   |   |   `-IntegerLiteral 0x1c0060453e8 <col:20> 'int' 0
|   |   |-BinaryOperator 0x1c006045498 <line:663:9, col:22> 'int' '='
|   |   | |-DeclRefExpr 0x1c006045438 <col:9> 'int' lvalue Var 0x1c0060489e0 'allow_idna' 'int'
|   |   | `-IntegerLiteral 0x1c006045470 <col:22> 'int' 1
|   |   `-IfStmt 0x1c006045570 <line:664:9, line:665:27>
|   |     |-OpaqueValueExpr 0x1c006045558 <<invalid sloc>> '_Bool'
|   |     `-BinaryOperator 0x1c006045538 <col:13, col:27> 'int' '='
|   |       |-DeclRefExpr 0x1c0060454d8 <col:13> 'int' lvalue Var 0x1c006048920 'allow_multi' 'int'
|   |       `-IntegerLiteral 0x1c006045510 <col:27> 'int' 1
|   |-IfStmt 0x1c006045b88 <line:668:5, line:670:16>
|   | |-BinaryOperator 0x1c006045b30 <line:668:9, line:669:72> 'int' '&&'
|   | | |-BinaryOperator 0x1c0060456b0 <line:668:9, line:669:24> 'int' '&&'
|   | | | |-UnaryOperator 0x1c006045600 <line:668:9, col:10> 'int' prefix '!' cannot overflow
|   | | | | `-ImplicitCastExpr 0x1c0060455e8 <col:10> 'int' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x1c0060455c8 <col:10> 'int' lvalue Var 0x1c0060489e0 'allow_idna' 'int'
|   | | | `-BinaryOperator 0x1c006045690 <line:669:9, col:24> 'int' '>='
|   | | |   |-ImplicitCastExpr 0x1c006045660 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x1c006045618 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x1c006048398 'subject_len' 'size_t':'unsigned long long'
|   | | |   `-ImplicitCastExpr 0x1c006045678 <col:24> 'unsigned long long' <IntegralCast>
|   | | |     `-IntegerLiteral 0x1c006045638 <col:24> 'int' 4
|   | | `-BinaryOperator 0x1c006045b10 <col:29, col:72> 'int' '=='
|   | |   |-CallExpr 0x1c006045a50 <col:29, col:67> 'int'
|   | |   | |-ImplicitCastExpr 0x1c006045a38 <col:29> 'int (*)(const char *, const char *, unsigned long long)' <FunctionToPointerDecay>
|   | |   | | `-DeclRefExpr 0x1c006045900 <col:29> 'int (const char *, const char *, unsigned long long)' Function 0x1c006045710 'strncasecmp' 'int (const char *, const char *, unsigned long long)'
|   | |   | |-ImplicitCastExpr 0x1c006045a88 <col:41, col:49> 'const char *' <NoOp>
|   | |   | | `-CStyleCastExpr 0x1c006045988 <col:41, col:49> 'char *' <BitCast>
|   | |   | |   `-ImplicitCastExpr 0x1c006045970 <col:49> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
|   | |   | |     `-DeclRefExpr 0x1c006045938 <col:49> 'const unsigned char *' lvalue ParmVar 0x1c006048320 'subject' 'const unsigned char *'
|   | |   | |-ImplicitCastExpr 0x1c006045ab8 <col:58> 'const char *' <NoOp>
|   | |   | | `-ImplicitCastExpr 0x1c006045aa0 <col:58> 'char *' <ArrayToPointerDecay>
|   | |   | |   `-StringLiteral 0x1c0060459b0 <col:58> 'char [5]' lvalue "xn--"
|   | |   | `-ImplicitCastExpr 0x1c006045ad0 <col:66> 'unsigned long long' <IntegralCast>
|   | |   |   `-IntegerLiteral 0x1c0060459d0 <col:66> 'int' 4
|   | |   `-IntegerLiteral 0x1c006045ae8 <col:72> 'int' 0
|   | `-ReturnStmt 0x1c006045b78 <line:670:9, col:16>
|   |   `-IntegerLiteral 0x1c006045b50 <col:16> 'int' 0
|   |-IfStmt 0x1c006045d88 <line:672:5, line:673:16>
|   | |-BinaryOperator 0x1c006045d30 <line:672:9, col:66> 'int' '&&'
|   | | |-BinaryOperator 0x1c006045c58 <col:9, col:42> 'int' '=='
|   | | | |-ImplicitCastExpr 0x1c006045c40 <col:9> 'const unsigned char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1c006045ba0 <col:9> 'const unsigned char *' lvalue Var 0x1c0060487f0 'wildcard_end' 'const unsigned char *'
|   | | | `-BinaryOperator 0x1c006045c20 <col:25, col:42> 'const unsigned char *' '+'
|   | | |   |-ImplicitCastExpr 0x1c006045c08 <col:25> 'const unsigned char *' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x1c006045bc0 <col:25> 'const unsigned char *' lvalue Var 0x1c006048758 'wildcard_start' 'const unsigned char *'
|   | | |   `-IntegerLiteral 0x1c006045be0 <col:42> 'int' 1
|   | | `-BinaryOperator 0x1c006045d10 <col:47, col:66> 'int' '=='
|   | |   |-ImplicitCastExpr 0x1c006045cf8 <col:47, col:48> 'int' <IntegralCast>
|   | |   | `-ImplicitCastExpr 0x1c006045ce0 <col:47, col:48> 'unsigned char' <LValueToRValue>
|   | |   |   `-UnaryOperator 0x1c006045cb0 <col:47, col:48> 'const unsigned char' lvalue prefix '*' cannot overflow
|   | |   |     `-ImplicitCastExpr 0x1c006045c98 <col:48> 'const unsigned char *' <LValueToRValue>
|   | |   |       `-DeclRefExpr 0x1c006045c78 <col:48> 'const unsigned char *' lvalue Var 0x1c006048758 'wildcard_start' 'const unsigned char *'
|   | |   `-CharacterLiteral 0x1c006045cc8 <col:66> 'int' 42
|   | `-ReturnStmt 0x1c006045d78 <line:673:9, col:16>
|   |   `-IntegerLiteral 0x1c006045d50 <col:16> 'int' 1
|   |-ForStmt 0x1c006046710 <line:679:5, line:684:20>
|   | |-BinaryOperator 0x1c006045e10 <line:679:10, col:14> 'const unsigned char *' '='
|   | | |-DeclRefExpr 0x1c006045da0 <col:10> 'const unsigned char *' lvalue Var 0x1c006048888 'p' 'const unsigned char *'
|   | | `-ImplicitCastExpr 0x1c006045df8 <col:14> 'const unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1c006045dd8 <col:14> 'const unsigned char *' lvalue Var 0x1c006048758 'wildcard_start' 'const unsigned char *'
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1c006045ea0 <col:30, col:35> 'int' '!='
|   | | |-ImplicitCastExpr 0x1c006045e70 <col:30> 'const unsigned char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1c006045e30 <col:30> 'const unsigned char *' lvalue Var 0x1c006048888 'p' 'const unsigned char *'
|   | | `-ImplicitCastExpr 0x1c006045e88 <col:35> 'const unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1c006045e50 <col:35> 'const unsigned char *' lvalue Var 0x1c0060487f0 'wildcard_end' 'const unsigned char *'
|   | |-UnaryOperator 0x1c006045ee0 <col:49, col:51> 'const unsigned char *' prefix '++'
|   | | `-DeclRefExpr 0x1c006045ec0 <col:51> 'const unsigned char *' lvalue Var 0x1c006048888 'p' 'const unsigned char *'
|   | `-IfStmt 0x1c0060466f8 <line:680:9, line:684:20>
|   |   |-UnaryOperator 0x1c0060466a8 <line:680:13, line:683:54> 'int' prefix '!' cannot overflow
|   |   | `-ParenExpr 0x1c006046688 <line:680:14, line:683:54> 'int'
|   |   |   `-BinaryOperator 0x1c006046668 <line:680:15, line:683:53> 'int' '||'
|   |   |     |-BinaryOperator 0x1c006046518 <line:680:15, line:683:21> 'int' '||'
|   |   |     | |-BinaryOperator 0x1c006046440 <line:680:15, line:682:38> 'int' '||'
|   |   |     | | |-BinaryOperator 0x1c006046270 <line:680:15, line:681:38> 'int' '||'
|   |   |     | | | |-ParenExpr 0x1c006046088 <line:680:15, col:38> 'int'
|   |   |     | | | | `-BinaryOperator 0x1c006046068 <col:16, col:35> 'int' '&&'
|   |   |     | | | |   |-BinaryOperator 0x1c006045f90 <col:16, col:24> 'int' '<='
|   |   |     | | | |   | |-CharacterLiteral 0x1c006045ef8 <col:16> 'int' 48
|   |   |     | | | |   | `-ImplicitCastExpr 0x1c006045f78 <col:23, col:24> 'int' <IntegralCast>
|   |   |     | | | |   |   `-ImplicitCastExpr 0x1c006045f60 <col:23, col:24> 'unsigned char' <LValueToRValue>
|   |   |     | | | |   |     `-UnaryOperator 0x1c006045f48 <col:23, col:24> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   |     | | | |   |       `-ImplicitCastExpr 0x1c006045f30 <col:24> 'const unsigned char *' <LValueToRValue>
|   |   |     | | | |   |         `-DeclRefExpr 0x1c006045f10 <col:24> 'const unsigned char *' lvalue Var 0x1c006048888 'p' 'const unsigned char *'
|   |   |     | | | |   `-BinaryOperator 0x1c006046048 <col:29, col:35> 'int' '<='
|   |   |     | | | |     |-ImplicitCastExpr 0x1c006046030 <col:29, col:30> 'int' <IntegralCast>
|   |   |     | | | |     | `-ImplicitCastExpr 0x1c006046018 <col:29, col:30> 'unsigned char' <LValueToRValue>
|   |   |     | | | |     |   `-UnaryOperator 0x1c006045fe8 <col:29, col:30> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   |     | | | |     |     `-ImplicitCastExpr 0x1c006045fd0 <col:30> 'const unsigned char *' <LValueToRValue>
|   |   |     | | | |     |       `-DeclRefExpr 0x1c006045fb0 <col:30> 'const unsigned char *' lvalue Var 0x1c006048888 'p' 'const unsigned char *'
|   |   |     | | | |     `-CharacterLiteral 0x1c006046000 <col:35> 'int' 57
|   |   |     | | | `-ParenExpr 0x1c006046238 <line:681:15, col:38> 'int'
|   |   |     | | |   `-BinaryOperator 0x1c006046218 <col:16, col:35> 'int' '&&'
|   |   |     | | |     |-BinaryOperator 0x1c006046140 <col:16, col:24> 'int' '<='
|   |   |     | | |     | |-CharacterLiteral 0x1c0060460a8 <col:16> 'int' 65
|   |   |     | | |     | `-ImplicitCastExpr 0x1c006046128 <col:23, col:24> 'int' <IntegralCast>
|   |   |     | | |     |   `-ImplicitCastExpr 0x1c006046110 <col:23, col:24> 'unsigned char' <LValueToRValue>
|   |   |     | | |     |     `-UnaryOperator 0x1c0060460f8 <col:23, col:24> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   |     | | |     |       `-ImplicitCastExpr 0x1c0060460e0 <col:24> 'const unsigned char *' <LValueToRValue>
|   |   |     | | |     |         `-DeclRefExpr 0x1c0060460c0 <col:24> 'const unsigned char *' lvalue Var 0x1c006048888 'p' 'const unsigned char *'
|   |   |     | | |     `-BinaryOperator 0x1c0060461f8 <col:29, col:35> 'int' '<='
|   |   |     | | |       |-ImplicitCastExpr 0x1c0060461e0 <col:29, col:30> 'int' <IntegralCast>
|   |   |     | | |       | `-ImplicitCastExpr 0x1c0060461c8 <col:29, col:30> 'unsigned char' <LValueToRValue>
|   |   |     | | |       |   `-UnaryOperator 0x1c006046198 <col:29, col:30> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   |     | | |       |     `-ImplicitCastExpr 0x1c006046180 <col:30> 'const unsigned char *' <LValueToRValue>
|   |   |     | | |       |       `-DeclRefExpr 0x1c006046160 <col:30> 'const unsigned char *' lvalue Var 0x1c006048888 'p' 'const unsigned char *'
|   |   |     | | |       `-CharacterLiteral 0x1c0060461b0 <col:35> 'int' 90
|   |   |     | | `-ParenExpr 0x1c006046420 <line:682:15, col:38> 'int'
|   |   |     | |   `-BinaryOperator 0x1c006046400 <col:16, col:35> 'int' '&&'
|   |   |     | |     |-BinaryOperator 0x1c006046328 <col:16, col:24> 'int' '<='
|   |   |     | |     | |-CharacterLiteral 0x1c006046290 <col:16> 'int' 97
|   |   |     | |     | `-ImplicitCastExpr 0x1c006046310 <col:23, col:24> 'int' <IntegralCast>
|   |   |     | |     |   `-ImplicitCastExpr 0x1c0060462f8 <col:23, col:24> 'unsigned char' <LValueToRValue>
|   |   |     | |     |     `-UnaryOperator 0x1c0060462e0 <col:23, col:24> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   |     | |     |       `-ImplicitCastExpr 0x1c0060462c8 <col:24> 'const unsigned char *' <LValueToRValue>
|   |   |     | |     |         `-DeclRefExpr 0x1c0060462a8 <col:24> 'const unsigned char *' lvalue Var 0x1c006048888 'p' 'const unsigned char *'
|   |   |     | |     `-BinaryOperator 0x1c0060463e0 <col:29, col:35> 'int' '<='
|   |   |     | |       |-ImplicitCastExpr 0x1c0060463c8 <col:29, col:30> 'int' <IntegralCast>
|   |   |     | |       | `-ImplicitCastExpr 0x1c0060463b0 <col:29, col:30> 'unsigned char' <LValueToRValue>
|   |   |     | |       |   `-UnaryOperator 0x1c006046380 <col:29, col:30> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   |     | |       |     `-ImplicitCastExpr 0x1c006046368 <col:30> 'const unsigned char *' <LValueToRValue>
|   |   |     | |       |       `-DeclRefExpr 0x1c006046348 <col:30> 'const unsigned char *' lvalue Var 0x1c006048888 'p' 'const unsigned char *'
|   |   |     | |       `-CharacterLiteral 0x1c006046398 <col:35> 'int' 122
|   |   |     | `-BinaryOperator 0x1c0060464f8 <line:683:15, col:21> 'int' '=='
|   |   |     |   |-ImplicitCastExpr 0x1c0060464e0 <col:15, col:16> 'int' <IntegralCast>
|   |   |     |   | `-ImplicitCastExpr 0x1c0060464c8 <col:15, col:16> 'unsigned char' <LValueToRValue>
|   |   |     |   |   `-UnaryOperator 0x1c006046498 <col:15, col:16> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   |     |   |     `-ImplicitCastExpr 0x1c006046480 <col:16> 'const unsigned char *' <LValueToRValue>
|   |   |     |   |       `-DeclRefExpr 0x1c006046460 <col:16> 'const unsigned char *' lvalue Var 0x1c006048888 'p' 'const unsigned char *'
|   |   |     |   `-CharacterLiteral 0x1c0060464b0 <col:21> 'int' 45
|   |   |     `-ParenExpr 0x1c006046648 <col:28, col:53> 'int'
|   |   |       `-BinaryOperator 0x1c006046628 <col:29, col:50> 'int' '&&'
|   |   |         |-ImplicitCastExpr 0x1c006046610 <col:29> 'int' <LValueToRValue>
|   |   |         | `-DeclRefExpr 0x1c006046538 <col:29> 'int' lvalue Var 0x1c006048920 'allow_multi' 'int'
|   |   |         `-BinaryOperator 0x1c0060465f0 <col:44, col:50> 'int' '=='
|   |   |           |-ImplicitCastExpr 0x1c0060465d8 <col:44, col:45> 'int' <IntegralCast>
|   |   |           | `-ImplicitCastExpr 0x1c0060465c0 <col:44, col:45> 'unsigned char' <LValueToRValue>
|   |   |           |   `-UnaryOperator 0x1c006046590 <col:44, col:45> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   |           |     `-ImplicitCastExpr 0x1c006046578 <col:45> 'const unsigned char *' <LValueToRValue>
|   |   |           |       `-DeclRefExpr 0x1c006046558 <col:45> 'const unsigned char *' lvalue Var 0x1c006048888 'p' 'const unsigned char *'
|   |   |           `-CharacterLiteral 0x1c0060465a8 <col:50> 'int' 46
|   |   `-ReturnStmt 0x1c0060466e8 <line:684:13, col:20>
|   |     `-IntegerLiteral 0x1c0060466c0 <col:20> 'int' 0
|   `-ReturnStmt 0x1c006046770 <line:685:5, col:12>
|     `-IntegerLiteral 0x1c006046748 <col:12> 'int' 1
|-FunctionDecl 0x1c006045710 <line:669:29> col:29 implicit used strncasecmp 'int (const char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1c0060457b0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1c006045818 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1c006045880 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1c006046a90 <line:693:1, line:752:1> line:693:29 used valid_star 'const unsigned char *(const unsigned char *, size_t, unsigned int)' static
| |-ParmVarDecl 0x1c006046820 <col:40, col:61> col:61 used p 'const unsigned char *'
| |-ParmVarDecl 0x1c006046898 <col:64, col:71> col:71 used len 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c006046918 <line:694:40, col:53> col:53 used flags 'unsigned int'
| `-CompoundStmt 0x1c00604acd0 <line:695:1, line:752:1>
|   |-DeclStmt 0x1c006046c20 <line:696:5, col:34>
|   | `-VarDecl 0x1c006046b78 <col:5, col:33> col:26 used star 'const unsigned char *' cinit
|   |   `-ImplicitCastExpr 0x1c006046c08 <col:33> 'const unsigned char *' <NullToPointer>
|   |     `-IntegerLiteral 0x1c006046be0 <col:33> 'int' 0
|   |-DeclStmt 0x1c006046cb0 <line:697:5, col:13>
|   | `-VarDecl 0x1c006046c48 <col:5, col:12> col:12 used i 'size_t':'unsigned long long'
|   |-DeclStmt 0x1c006046dd8 <line:698:5, col:28>
|   | `-VarDecl 0x1c006046ce0 <col:5, line:688:32> line:698:9 used state 'int' cinit
|   |   `-ParenExpr 0x1c006046db8 <line:688:25, col:32> 'int'
|   |     `-BinaryOperator 0x1c006046d98 <col:26, col:31> 'int' '<<'
|   |       |-IntegerLiteral 0x1c006046d48 <col:26> 'int' 1
|   |       `-IntegerLiteral 0x1c006046d70 <col:31> 'int' 0
|   |-DeclStmt 0x1c006046e98 <line:699:5, col:17>
|   | `-VarDecl 0x1c006046e08 <col:5, col:16> col:9 used dots 'int' cinit
|   |   `-IntegerLiteral 0x1c006046e70 <col:16> 'int' 0
|   |-ForStmt 0x1c00604a8c8 <line:700:5, line:743:5>
|   | |-BinaryOperator 0x1c006046f28 <line:700:10, col:14> 'size_t':'unsigned long long' '='
|   | | |-DeclRefExpr 0x1c006046eb0 <col:10> 'size_t':'unsigned long long' lvalue Var 0x1c006046c48 'i' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x1c006046f10 <col:14> 'size_t':'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x1c006046ee8 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1c006046fb8 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x1c006046f88 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1c006046f48 <col:17> 'size_t':'unsigned long long' lvalue Var 0x1c006046c48 'i' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x1c006046fa0 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1c006046f68 <col:21> 'size_t':'unsigned long long' lvalue ParmVar 0x1c006046898 'len' 'size_t':'unsigned long long'
|   | |-UnaryOperator 0x1c006046ff8 <col:26, col:28> 'size_t':'unsigned long long' prefix '++'
|   | | `-DeclRefExpr 0x1c006046fd8 <col:28> 'size_t':'unsigned long long' lvalue Var 0x1c006046c48 'i' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x1c00604a8b0 <col:31, line:743:5>
|   |   `-IfStmt 0x1c00604a888 <line:705:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> has_else
|   |     |-BinaryOperator 0x1c0060470e8 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:705:13, col:21> 'int' '=='
|   |     | |-ImplicitCastExpr 0x1c0060470d0 <col:13, col:16> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x1c0060470b8 <col:13, col:16> 'unsigned char' <LValueToRValue>
|   |     | |   `-ArraySubscriptExpr 0x1c006047080 <col:13, col:16> 'const unsigned char' lvalue
|   |     | |     |-ImplicitCastExpr 0x1c006047050 <col:13> 'const unsigned char *' <LValueToRValue>
|   |     | |     | `-DeclRefExpr 0x1c006047010 <col:13> 'const unsigned char *' lvalue ParmVar 0x1c006046820 'p' 'const unsigned char *'
|   |     | |     `-ImplicitCastExpr 0x1c006047068 <col:15> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | |       `-DeclRefExpr 0x1c006047030 <col:15> 'size_t':'unsigned long long' lvalue Var 0x1c006046c48 'i' 'size_t':'unsigned long long'
|   |     | `-CharacterLiteral 0x1c0060470a0 <col:21> 'int' 42
|   |     |-CompoundStmt 0x1c006047f28 <col:26, line:724:9>
|   |     | |-DeclStmt 0x1c0060472c0 <line:706:13, col:48>
|   |     | | `-VarDecl 0x1c006047120 <col:13, col:47> col:17 used atstart 'int' cinit
|   |     | |   `-ParenExpr 0x1c0060472a0 <col:27, col:47> 'int'
|   |     | |     `-BinaryOperator 0x1c006047280 <col:28, line:688:32> 'int' '&'
|   |     | |       |-ImplicitCastExpr 0x1c006047250 <line:706:28> 'int' <LValueToRValue>
|   |     | |       | `-DeclRefExpr 0x1c006047188 <col:28> 'int' lvalue Var 0x1c006046ce0 'state' 'int'
|   |     | |       `-ParenExpr 0x1c006047230 <line:688:25, col:32> 'int'
|   |     | |         `-BinaryOperator 0x1c006047210 <col:26, col:31> 'int' '<<'
|   |     | |           |-IntegerLiteral 0x1c0060471c0 <col:26> 'int' 1
|   |     | |           `-IntegerLiteral 0x1c0060471e8 <col:31> 'int' 0
|   |     | |-DeclStmt 0x1c0060475e0 <line:707:13, col:58>
|   |     | | `-VarDecl 0x1c0060472f0 <col:13, col:57> col:17 used atend 'int' cinit
|   |     | |   `-ParenExpr 0x1c0060475c0 <col:25, col:57> 'int'
|   |     | |     `-BinaryOperator 0x1c0060475a0 <col:26, col:54> 'int' '||'
|   |     | |       |-BinaryOperator 0x1c006047428 <col:26, col:37> 'int' '=='
|   |     | |       | |-ImplicitCastExpr 0x1c006047410 <col:26> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | |       | | `-DeclRefExpr 0x1c006047358 <col:26> 'size_t':'unsigned long long' lvalue Var 0x1c006046c48 'i' 'size_t':'unsigned long long'
|   |     | |       | `-BinaryOperator 0x1c0060473f0 <col:31, col:37> 'unsigned long long' '-'
|   |     | |       |   |-ImplicitCastExpr 0x1c0060473c0 <col:31> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | |       |   | `-DeclRefExpr 0x1c006047378 <col:31> 'size_t':'unsigned long long' lvalue ParmVar 0x1c006046898 'len' 'size_t':'unsigned long long'
|   |     | |       |   `-ImplicitCastExpr 0x1c0060473d8 <col:37> 'unsigned long long' <IntegralCast>
|   |     | |       |     `-IntegerLiteral 0x1c006047398 <col:37> 'int' 1
|   |     | |       `-BinaryOperator 0x1c006047580 <col:42, col:54> 'int' '=='
|   |     | |         |-ImplicitCastExpr 0x1c006047568 <col:42, col:49> 'int' <IntegralCast>
|   |     | |         | `-ImplicitCastExpr 0x1c006047550 <col:42, col:49> 'unsigned char' <LValueToRValue>
|   |     | |         |   `-ArraySubscriptExpr 0x1c006047518 <col:42, col:49> 'const unsigned char' lvalue
|   |     | |         |     |-ImplicitCastExpr 0x1c006047500 <col:42> 'const unsigned char *' <LValueToRValue>
|   |     | |         |     | `-DeclRefExpr 0x1c006047448 <col:42> 'const unsigned char *' lvalue ParmVar 0x1c006046820 'p' 'const unsigned char *'
|   |     | |         |     `-BinaryOperator 0x1c0060474e0 <col:44, col:48> 'unsigned long long' '+'
|   |     | |         |       |-ImplicitCastExpr 0x1c0060474b0 <col:44> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | |         |       | `-DeclRefExpr 0x1c006047468 <col:44> 'size_t':'unsigned long long' lvalue Var 0x1c006046c48 'i' 'size_t':'unsigned long long'
|   |     | |         |       `-ImplicitCastExpr 0x1c0060474c8 <col:48> 'unsigned long long' <IntegralCast>
|   |     | |         |         `-IntegerLiteral 0x1c006047488 <col:48> 'int' 1
|   |     | |         `-CharacterLiteral 0x1c006047538 <col:54> 'int' 46
|   |     | |-IfStmt 0x1c006047998 <line:713:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |     | | |-BinaryOperator 0x1c0060478c8 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:713:17, col:62> 'int' '||'
|   |     | | | |-BinaryOperator 0x1c006047858 <col:17, col:57> 'int' '||'
|   |     | | | | |-BinaryOperator 0x1c0060476e8 <col:17, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   |     | | | | | |-ImplicitCastExpr 0x1c0060476b8 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:713:17> 'const unsigned char *' <LValueToRValue>
|   |     | | | | | | `-DeclRefExpr 0x1c0060475f8 <col:17> 'const unsigned char *' lvalue Var 0x1c006046b78 'star' 'const unsigned char *'
|   |     | | | | | `-ImplicitCastExpr 0x1c0060476d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const unsigned char *' <BitCast>
|   |     | | | | |   `-ParenExpr 0x1c006047698 <col:17, col:27> 'void *'
|   |     | | | | |     `-CStyleCastExpr 0x1c006047670 <col:18, col:26> 'void *' <NullToPointer>
|   |     | | | | |       `-IntegerLiteral 0x1c006047630 <col:26> 'int' 0
|   |     | | | | `-BinaryOperator 0x1c006047838 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:713:33, col:57> 'int' '!='
|   |     | | | |   |-ParenExpr 0x1c0060477f0 <col:33, col:52> 'int'
|   |     | | | |   | `-BinaryOperator 0x1c0060477d0 <col:34, line:691:32> 'int' '&'
|   |     | | | |   |   |-ImplicitCastExpr 0x1c0060477b8 <line:713:34> 'int' <LValueToRValue>
|   |     | | | |   |   | `-DeclRefExpr 0x1c006047708 <col:34> 'int' lvalue Var 0x1c006046ce0 'state' 'int'
|   |     | | | |   |   `-ParenExpr 0x1c006047798 <line:691:25, col:32> 'int'
|   |     | | | |   |     `-BinaryOperator 0x1c006047778 <col:26, col:31> 'int' '<<'
|   |     | | | |   |       |-IntegerLiteral 0x1c006047728 <col:26> 'int' 1
|   |     | | | |   |       `-IntegerLiteral 0x1c006047750 <col:31> 'int' 3
|   |     | | | |   `-IntegerLiteral 0x1c006047810 <line:713:57> 'int' 0
|   |     | | | `-ImplicitCastExpr 0x1c0060478b0 <col:62> 'int' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x1c006047878 <col:62> 'int' lvalue Var 0x1c006046e08 'dots' 'int'
|   |     | | `-ReturnStmt 0x1c006047988 <line:714:17, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |     | |   `-ImplicitCastExpr 0x1c006047970 <col:17, col:27> 'const unsigned char *' <NullToPointer>
|   |     | |     `-ParenExpr 0x1c006047950 <col:17, col:27> 'void *'
|   |     | |       `-CStyleCastExpr 0x1c006047928 <col:18, col:26> 'void *' <NullToPointer>
|   |     | |         `-IntegerLiteral 0x1c0060478e8 <col:26> 'int' 0
|   |     | |-IfStmt 0x1c006047ba8 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:716:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |     | | |-OpaqueValueExpr 0x1c006047b90 <<invalid sloc>> '_Bool'
|   |     | | `-ReturnStmt 0x1c006047b80 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:718:17, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |     | |   `-ImplicitCastExpr 0x1c006047b68 <col:17, col:27> 'const unsigned char *' <NullToPointer>
|   |     | |     `-ParenExpr 0x1c006047b48 <col:17, col:27> 'void *'
|   |     | |       `-CStyleCastExpr 0x1c006047b20 <col:18, col:26> 'void *' <NullToPointer>
|   |     | |         `-IntegerLiteral 0x1c006047ae0 <col:26> 'int' 0
|   |     | |-IfStmt 0x1c006047d30 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:720:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |     | | |-BinaryOperator 0x1c006047c60 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:720:17, col:30> 'int' '&&'
|   |     | | | |-UnaryOperator 0x1c006047bf8 <col:17, col:18> 'int' prefix '!' cannot overflow
|   |     | | | | `-ImplicitCastExpr 0x1c006047be0 <col:18> 'int' <LValueToRValue>
|   |     | | | |   `-DeclRefExpr 0x1c006047bc0 <col:18> 'int' lvalue Var 0x1c006047120 'atstart' 'int'
|   |     | | | `-UnaryOperator 0x1c006047c48 <col:29, col:30> 'int' prefix '!' cannot overflow
|   |     | | |   `-ImplicitCastExpr 0x1c006047c30 <col:30> 'int' <LValueToRValue>
|   |     | | |     `-DeclRefExpr 0x1c006047c10 <col:30> 'int' lvalue Var 0x1c0060472f0 'atend' 'int'
|   |     | | `-ReturnStmt 0x1c006047d20 <line:721:17, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |     | |   `-ImplicitCastExpr 0x1c006047d08 <col:17, col:27> 'const unsigned char *' <NullToPointer>
|   |     | |     `-ParenExpr 0x1c006047ce8 <col:17, col:27> 'void *'
|   |     | |       `-CStyleCastExpr 0x1c006047cc0 <col:18, col:26> 'void *' <NullToPointer>
|   |     | |         `-IntegerLiteral 0x1c006047c80 <col:26> 'int' 0
|   |     | |-BinaryOperator 0x1c006047e10 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:722:13, col:24> 'const unsigned char *' '='
|   |     | | |-DeclRefExpr 0x1c006047d48 <col:13> 'const unsigned char *' lvalue Var 0x1c006046b78 'star' 'const unsigned char *'
|   |     | | `-UnaryOperator 0x1c006047df8 <col:20, col:24> 'const unsigned char *' prefix '&' cannot overflow
|   |     | |   `-ArraySubscriptExpr 0x1c006047dd8 <col:21, col:24> 'const unsigned char' lvalue
|   |     | |     |-ImplicitCastExpr 0x1c006047da8 <col:21> 'const unsigned char *' <LValueToRValue>
|   |     | |     | `-DeclRefExpr 0x1c006047d68 <col:21> 'const unsigned char *' lvalue ParmVar 0x1c006046820 'p' 'const unsigned char *'
|   |     | |     `-ImplicitCastExpr 0x1c006047dc0 <col:23> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | |       `-DeclRefExpr 0x1c006047d88 <col:23> 'size_t':'unsigned long long' lvalue Var 0x1c006046c48 'i' 'size_t':'unsigned long long'
|   |     | `-CompoundAssignOperator 0x1c006047ef8 <line:723:13, line:688:32> 'int' '&=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     |   |-DeclRefExpr 0x1c006047e30 <line:723:13> 'int' lvalue Var 0x1c006046ce0 'state' 'int'
|   |     |   `-UnaryOperator 0x1c006047ee0 <col:22, line:688:32> 'int' prefix '~' cannot overflow
|   |     |     `-ParenExpr 0x1c006047ec0 <col:25, col:32> 'int'
|   |     |       `-BinaryOperator 0x1c006047ea0 <col:26, col:31> 'int' '<<'
|   |     |         |-IntegerLiteral 0x1c006047e50 <col:26> 'int' 1
|   |     |         `-IntegerLiteral 0x1c006047e78 <col:31> 'int' 0
|   |     `-IfStmt 0x1c00604a860 <line:724:16, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> has_else
|   |       |-BinaryOperator 0x1c006049648 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:724:20, line:726:50> 'int' '||'
|   |       | |-BinaryOperator 0x1c0060493f8 <line:724:20, line:725:50> 'int' '||'
|   |       | | |-ParenExpr 0x1c006048180 <line:724:20, col:47> 'int'
|   |       | | | `-BinaryOperator 0x1c006048160 <col:21, col:44> 'int' '&&'
|   |       | | |   |-BinaryOperator 0x1c006048048 <col:21, col:31> 'int' '<='
|   |       | | |   | |-CharacterLiteral 0x1c006047f70 <col:21> 'int' 97
|   |       | | |   | `-ImplicitCastExpr 0x1c006048030 <col:28, col:31> 'int' <IntegralCast>
|   |       | | |   |   `-ImplicitCastExpr 0x1c006048018 <col:28, col:31> 'unsigned char' <LValueToRValue>
|   |       | | |   |     `-ArraySubscriptExpr 0x1c006047ff8 <col:28, col:31> 'const unsigned char' lvalue
|   |       | | |   |       |-ImplicitCastExpr 0x1c006047fc8 <col:28> 'const unsigned char *' <LValueToRValue>
|   |       | | |   |       | `-DeclRefExpr 0x1c006047f88 <col:28> 'const unsigned char *' lvalue ParmVar 0x1c006046820 'p' 'const unsigned char *'
|   |       | | |   |       `-ImplicitCastExpr 0x1c006047fe0 <col:30> 'size_t':'unsigned long long' <LValueToRValue>
|   |       | | |   |         `-DeclRefExpr 0x1c006047fa8 <col:30> 'size_t':'unsigned long long' lvalue Var 0x1c006046c48 'i' 'size_t':'unsigned long long'
|   |       | | |   `-BinaryOperator 0x1c006048140 <col:36, col:44> 'int' '<='
|   |       | | |     |-ImplicitCastExpr 0x1c006048128 <col:36, col:39> 'int' <IntegralCast>
|   |       | | |     | `-ImplicitCastExpr 0x1c006048110 <col:36, col:39> 'unsigned char' <LValueToRValue>
|   |       | | |     |   `-ArraySubscriptExpr 0x1c0060480d8 <col:36, col:39> 'const unsigned char' lvalue
|   |       | | |     |     |-ImplicitCastExpr 0x1c0060480a8 <col:36> 'const unsigned char *' <LValueToRValue>
|   |       | | |     |     | `-DeclRefExpr 0x1c006048068 <col:36> 'const unsigned char *' lvalue ParmVar 0x1c006046820 'p' 'const unsigned char *'
|   |       | | |     |     `-ImplicitCastExpr 0x1c0060480c0 <col:38> 'size_t':'unsigned long long' <LValueToRValue>
|   |       | | |     |       `-DeclRefExpr 0x1c006048088 <col:38> 'size_t':'unsigned long long' lvalue Var 0x1c006046c48 'i' 'size_t':'unsigned long long'
|   |       | | |     `-CharacterLiteral 0x1c0060480f8 <col:44> 'int' 122
|   |       | | `-ParenExpr 0x1c0060493d8 <line:725:23, col:50> 'int'
|   |       | |   `-BinaryOperator 0x1c0060493b8 <col:24, col:47> 'int' '&&'
|   |       | |     |-BinaryOperator 0x1c0060492a0 <col:24, col:34> 'int' '<='
|   |       | |     | |-CharacterLiteral 0x1c0060481a0 <col:24> 'int' 65
|   |       | |     | `-ImplicitCastExpr 0x1c006048260 <col:31, col:34> 'int' <IntegralCast>
|   |       | |     |   `-ImplicitCastExpr 0x1c006048248 <col:31, col:34> 'unsigned char' <LValueToRValue>
|   |       | |     |     `-ArraySubscriptExpr 0x1c006048228 <col:31, col:34> 'const unsigned char' lvalue
|   |       | |     |       |-ImplicitCastExpr 0x1c0060481f8 <col:31> 'const unsigned char *' <LValueToRValue>
|   |       | |     |       | `-DeclRefExpr 0x1c0060481b8 <col:31> 'const unsigned char *' lvalue ParmVar 0x1c006046820 'p' 'const unsigned char *'
|   |       | |     |       `-ImplicitCastExpr 0x1c006048210 <col:33> 'size_t':'unsigned long long' <LValueToRValue>
|   |       | |     |         `-DeclRefExpr 0x1c0060481d8 <col:33> 'size_t':'unsigned long long' lvalue Var 0x1c006046c48 'i' 'size_t':'unsigned long long'
|   |       | |     `-BinaryOperator 0x1c006049398 <col:39, col:47> 'int' '<='
|   |       | |       |-ImplicitCastExpr 0x1c006049380 <col:39, col:42> 'int' <IntegralCast>
|   |       | |       | `-ImplicitCastExpr 0x1c006049368 <col:39, col:42> 'unsigned char' <LValueToRValue>
|   |       | |       |   `-ArraySubscriptExpr 0x1c006049330 <col:39, col:42> 'const unsigned char' lvalue
|   |       | |       |     |-ImplicitCastExpr 0x1c006049300 <col:39> 'const unsigned char *' <LValueToRValue>
|   |       | |       |     | `-DeclRefExpr 0x1c0060492c0 <col:39> 'const unsigned char *' lvalue ParmVar 0x1c006046820 'p' 'const unsigned char *'
|   |       | |       |     `-ImplicitCastExpr 0x1c006049318 <col:41> 'size_t':'unsigned long long' <LValueToRValue>
|   |       | |       |       `-DeclRefExpr 0x1c0060492e0 <col:41> 'size_t':'unsigned long long' lvalue Var 0x1c006046c48 'i' 'size_t':'unsigned long long'
|   |       | |       `-CharacterLiteral 0x1c006049350 <col:47> 'int' 90
|   |       | `-ParenExpr 0x1c006049628 <line:726:23, col:50> 'int'
|   |       |   `-BinaryOperator 0x1c006049608 <col:24, col:47> 'int' '&&'
|   |       |     |-BinaryOperator 0x1c0060494f0 <col:24, col:34> 'int' '<='
|   |       |     | |-CharacterLiteral 0x1c006049418 <col:24> 'int' 48
|   |       |     | `-ImplicitCastExpr 0x1c0060494d8 <col:31, col:34> 'int' <IntegralCast>
|   |       |     |   `-ImplicitCastExpr 0x1c0060494c0 <col:31, col:34> 'unsigned char' <LValueToRValue>
|   |       |     |     `-ArraySubscriptExpr 0x1c0060494a0 <col:31, col:34> 'const unsigned char' lvalue
|   |       |     |       |-ImplicitCastExpr 0x1c006049470 <col:31> 'const unsigned char *' <LValueToRValue>
|   |       |     |       | `-DeclRefExpr 0x1c006049430 <col:31> 'const unsigned char *' lvalue ParmVar 0x1c006046820 'p' 'const unsigned char *'
|   |       |     |       `-ImplicitCastExpr 0x1c006049488 <col:33> 'size_t':'unsigned long long' <LValueToRValue>
|   |       |     |         `-DeclRefExpr 0x1c006049450 <col:33> 'size_t':'unsigned long long' lvalue Var 0x1c006046c48 'i' 'size_t':'unsigned long long'
|   |       |     `-BinaryOperator 0x1c0060495e8 <col:39, col:47> 'int' '<='
|   |       |       |-ImplicitCastExpr 0x1c0060495d0 <col:39, col:42> 'int' <IntegralCast>
|   |       |       | `-ImplicitCastExpr 0x1c0060495b8 <col:39, col:42> 'unsigned char' <LValueToRValue>
|   |       |       |   `-ArraySubscriptExpr 0x1c006049580 <col:39, col:42> 'const unsigned char' lvalue
|   |       |       |     |-ImplicitCastExpr 0x1c006049550 <col:39> 'const unsigned char *' <LValueToRValue>
|   |       |       |     | `-DeclRefExpr 0x1c006049510 <col:39> 'const unsigned char *' lvalue ParmVar 0x1c006046820 'p' 'const unsigned char *'
|   |       |       |     `-ImplicitCastExpr 0x1c006049568 <col:41> 'size_t':'unsigned long long' <LValueToRValue>
|   |       |       |       `-DeclRefExpr 0x1c006049530 <col:41> 'size_t':'unsigned long long' lvalue Var 0x1c006046c48 'i' 'size_t':'unsigned long long'
|   |       |       `-CharacterLiteral 0x1c0060495a0 <col:47> 'int' 57
|   |       |-CompoundStmt 0x1c006049e08 <col:53, line:731:9>
|   |       | |-IfStmt 0x1c006049c28 <line:727:13, line:691:32>
|   |       | | |-BinaryOperator 0x1c006049b28 <line:727:17, line:728:77> 'int' '&&'
|   |       | | | |-BinaryOperator 0x1c0060498a8 <line:727:17, line:728:31> 'int' '&&'
|   |       | | | | |-BinaryOperator 0x1c006049798 <line:727:17, col:42> 'int' '!='
|   |       | | | | | |-ParenExpr 0x1c006049750 <col:17, col:37> 'int'
|   |       | | | | | | `-BinaryOperator 0x1c006049730 <col:18, line:688:32> 'int' '&'
|   |       | | | | | |   |-ImplicitCastExpr 0x1c006049718 <line:727:18> 'int' <LValueToRValue>
|   |       | | | | | |   | `-DeclRefExpr 0x1c006049668 <col:18> 'int' lvalue Var 0x1c006046ce0 'state' 'int'
|   |       | | | | | |   `-ParenExpr 0x1c0060496f8 <line:688:25, col:32> 'int'
|   |       | | | | | |     `-BinaryOperator 0x1c0060496d8 <col:26, col:31> 'int' '<<'
|   |       | | | | | |       |-IntegerLiteral 0x1c006049688 <col:26> 'int' 1
|   |       | | | | | |       `-IntegerLiteral 0x1c0060496b0 <col:31> 'int' 0
|   |       | | | | | `-IntegerLiteral 0x1c006049770 <line:727:42> 'int' 0
|   |       | | | | `-BinaryOperator 0x1c006049888 <line:728:20, col:31> 'int' '>='
|   |       | | | |   |-BinaryOperator 0x1c006049828 <col:20, col:26> 'unsigned long long' '-'
|   |       | | | |   | |-ImplicitCastExpr 0x1c0060497f8 <col:20> 'size_t':'unsigned long long' <LValueToRValue>
|   |       | | | |   | | `-DeclRefExpr 0x1c0060497b8 <col:20> 'size_t':'unsigned long long' lvalue ParmVar 0x1c006046898 'len' 'size_t':'unsigned long long'
|   |       | | | |   | `-ImplicitCastExpr 0x1c006049810 <col:26> 'size_t':'unsigned long long' <LValueToRValue>
|   |       | | | |   |   `-DeclRefExpr 0x1c0060497d8 <col:26> 'size_t':'unsigned long long' lvalue Var 0x1c006046c48 'i' 'size_t':'unsigned long long'
|   |       | | | |   `-ImplicitCastExpr 0x1c006049870 <col:31> 'unsigned long long' <IntegralCast>
|   |       | | | |     `-IntegerLiteral 0x1c006049848 <col:31> 'int' 4
|   |       | | | `-BinaryOperator 0x1c006049b08 <col:36, col:77> 'int' '=='
|   |       | | |   |-CallExpr 0x1c006049a48 <col:36, col:72> 'int'
|   |       | | |   | |-ImplicitCastExpr 0x1c006049a30 <col:36> 'int (*)(const char *, const char *, unsigned long long)' <FunctionToPointerDecay>
|   |       | | |   | | `-DeclRefExpr 0x1c0060498c8 <col:36> 'int (const char *, const char *, unsigned long long)' Function 0x1c006045710 'strncasecmp' 'int (const char *, const char *, unsigned long long)'
|   |       | | |   | |-ImplicitCastExpr 0x1c006049a80 <col:48, col:60> 'const char *' <NoOp>
|   |       | | |   | | `-CStyleCastExpr 0x1c0060499a8 <col:48, col:60> 'char *' <BitCast>
|   |       | | |   | |   `-UnaryOperator 0x1c006049978 <col:56, col:60> 'const unsigned char *' prefix '&' cannot overflow
|   |       | | |   | |     `-ArraySubscriptExpr 0x1c006049958 <col:57, col:60> 'const unsigned char' lvalue
|   |       | | |   | |       |-ImplicitCastExpr 0x1c006049928 <col:57> 'const unsigned char *' <LValueToRValue>
|   |       | | |   | |       | `-DeclRefExpr 0x1c0060498e8 <col:57> 'const unsigned char *' lvalue ParmVar 0x1c006046820 'p' 'const unsigned char *'
|   |       | | |   | |       `-ImplicitCastExpr 0x1c006049940 <col:59> 'size_t':'unsigned long long' <LValueToRValue>
|   |       | | |   | |         `-DeclRefExpr 0x1c006049908 <col:59> 'size_t':'unsigned long long' lvalue Var 0x1c006046c48 'i' 'size_t':'unsigned long long'
|   |       | | |   | |-ImplicitCastExpr 0x1c006049ab0 <col:63> 'const char *' <NoOp>
|   |       | | |   | | `-ImplicitCastExpr 0x1c006049a98 <col:63> 'char *' <ArrayToPointerDecay>
|   |       | | |   | |   `-StringLiteral 0x1c0060499d0 <col:63> 'char [5]' lvalue "xn--"
|   |       | | |   | `-ImplicitCastExpr 0x1c006049ac8 <col:71> 'unsigned long long' <IntegralCast>
|   |       | | |   |   `-IntegerLiteral 0x1c0060499f0 <col:71> 'int' 4
|   |       | | |   `-IntegerLiteral 0x1c006049ae0 <col:77> 'int' 0
|   |       | | `-CompoundAssignOperator 0x1c006049bf8 <line:729:17, line:691:32> 'int' '|=' ComputeLHSTy='int' ComputeResultTy='int'
|   |       | |   |-DeclRefExpr 0x1c006049b48 <line:729:17> 'int' lvalue Var 0x1c006046ce0 'state' 'int'
|   |       | |   `-ParenExpr 0x1c006049bd8 <line:691:25, col:32> 'int'
|   |       | |     `-BinaryOperator 0x1c006049bb8 <col:26, col:31> 'int' '<<'
|   |       | |       |-IntegerLiteral 0x1c006049b68 <col:26> 'int' 1
|   |       | |       `-IntegerLiteral 0x1c006049b90 <col:31> 'int' 3
|   |       | `-CompoundAssignOperator 0x1c006049dd8 <line:730:13, col:50> 'int' '&=' ComputeLHSTy='int' ComputeResultTy='int'
|   |       |   |-DeclRefExpr 0x1c006049c40 <col:13> 'int' lvalue Var 0x1c006046ce0 'state' 'int'
|   |       |   `-UnaryOperator 0x1c006049dc0 <col:22, col:50> 'int' prefix '~' cannot overflow
|   |       |     `-ParenExpr 0x1c006049da0 <col:23, col:50> 'int'
|   |       |       `-BinaryOperator 0x1c006049d80 <line:690:25, line:688:32> 'int' '|'
|   |       |         |-ParenExpr 0x1c006049cd0 <line:690:25, col:32> 'int'
|   |       |         | `-BinaryOperator 0x1c006049cb0 <col:26, col:31> 'int' '<<'
|   |       |         |   |-IntegerLiteral 0x1c006049c60 <col:26> 'int' 1
|   |       |         |   `-IntegerLiteral 0x1c006049c88 <col:31> 'int' 2
|   |       |         `-ParenExpr 0x1c006049d60 <line:688:25, col:32> 'int'
|   |       |           `-BinaryOperator 0x1c006049d40 <col:26, col:31> 'int' '<<'
|   |       |             |-IntegerLiteral 0x1c006049cf0 <col:26> 'int' 1
|   |       |             `-IntegerLiteral 0x1c006049d18 <col:31> 'int' 0
|   |       `-IfStmt 0x1c00604a838 <line:731:16, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> has_else
|   |         |-BinaryOperator 0x1c006049f00 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:731:20, col:28> 'int' '=='
|   |         | |-ImplicitCastExpr 0x1c006049ee8 <col:20, col:23> 'int' <IntegralCast>
|   |         | | `-ImplicitCastExpr 0x1c006049ed0 <col:20, col:23> 'unsigned char' <LValueToRValue>
|   |         | |   `-ArraySubscriptExpr 0x1c006049e98 <col:20, col:23> 'const unsigned char' lvalue
|   |         | |     |-ImplicitCastExpr 0x1c006049e68 <col:20> 'const unsigned char *' <LValueToRValue>
|   |         | |     | `-DeclRefExpr 0x1c006049e28 <col:20> 'const unsigned char *' lvalue ParmVar 0x1c006046820 'p' 'const unsigned char *'
|   |         | |     `-ImplicitCastExpr 0x1c006049e80 <col:22> 'size_t':'unsigned long long' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x1c006049e48 <col:22> 'size_t':'unsigned long long' lvalue Var 0x1c006046c48 'i' 'size_t':'unsigned long long'
|   |         | `-CharacterLiteral 0x1c006049eb8 <col:28> 'int' 46
|   |         |-CompoundStmt 0x1c00604a328 <col:33, line:736:9>
|   |         | |-IfStmt 0x1c00604a1f0 <line:732:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |         | | |-BinaryOperator 0x1c00604a120 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:732:17, col:59> 'int' '!='
|   |         | | | |-ParenExpr 0x1c00604a0d8 <col:17, col:54> 'int'
|   |         | | | | `-BinaryOperator 0x1c00604a0b8 <col:18, col:53> 'int' '&'
|   |         | | | |   |-ImplicitCastExpr 0x1c00604a0a0 <col:18> 'int' <LValueToRValue>
|   |         | | | |   | `-DeclRefExpr 0x1c006049f20 <col:18> 'int' lvalue Var 0x1c006046ce0 'state' 'int'
|   |         | | | |   `-ParenExpr 0x1c00604a080 <col:26, col:53> 'int'
|   |         | | | |     `-BinaryOperator 0x1c00604a060 <line:690:25, line:688:32> 'int' '|'
|   |         | | | |       |-ParenExpr 0x1c006049fb0 <line:690:25, col:32> 'int'
|   |         | | | |       | `-BinaryOperator 0x1c006049f90 <col:26, col:31> 'int' '<<'
|   |         | | | |       |   |-IntegerLiteral 0x1c006049f40 <col:26> 'int' 1
|   |         | | | |       |   `-IntegerLiteral 0x1c006049f68 <col:31> 'int' 2
|   |         | | | |       `-ParenExpr 0x1c00604a040 <line:688:25, col:32> 'int'
|   |         | | | |         `-BinaryOperator 0x1c00604a020 <col:26, col:31> 'int' '<<'
|   |         | | | |           |-IntegerLiteral 0x1c006049fd0 <col:26> 'int' 1
|   |         | | | |           `-IntegerLiteral 0x1c006049ff8 <col:31> 'int' 0
|   |         | | | `-IntegerLiteral 0x1c00604a0f8 <line:732:59> 'int' 0
|   |         | | `-ReturnStmt 0x1c00604a1e0 <line:733:17, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |         | |   `-ImplicitCastExpr 0x1c00604a1c8 <col:17, col:27> 'const unsigned char *' <NullToPointer>
|   |         | |     `-ParenExpr 0x1c00604a1a8 <col:17, col:27> 'void *'
|   |         | |       `-CStyleCastExpr 0x1c00604a180 <col:18, col:26> 'void *' <NullToPointer>
|   |         | |         `-IntegerLiteral 0x1c00604a140 <col:26> 'int' 0
|   |         | |-BinaryOperator 0x1c00604a2d0 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:734:13, line:688:32> 'int' '='
|   |         | | |-DeclRefExpr 0x1c00604a208 <line:734:13> 'int' lvalue Var 0x1c006046ce0 'state' 'int'
|   |         | | `-ParenExpr 0x1c00604a2b0 <line:688:25, col:32> 'int'
|   |         | |   `-BinaryOperator 0x1c00604a278 <col:26, col:31> 'int' '<<'
|   |         | |     |-IntegerLiteral 0x1c00604a228 <col:26> 'int' 1
|   |         | |     `-IntegerLiteral 0x1c00604a250 <col:31> 'int' 0
|   |         | `-UnaryOperator 0x1c00604a310 <line:735:13, col:15> 'int' prefix '++'
|   |         |   `-DeclRefExpr 0x1c00604a2f0 <col:15> 'int' lvalue Var 0x1c006046e08 'dots' 'int'
|   |         `-IfStmt 0x1c00604a810 <line:736:16, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> has_else
|   |           |-BinaryOperator 0x1c00604a428 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:736:20, col:28> 'int' '=='
|   |           | |-ImplicitCastExpr 0x1c00604a410 <col:20, col:23> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x1c00604a3f8 <col:20, col:23> 'unsigned char' <LValueToRValue>
|   |           | |   `-ArraySubscriptExpr 0x1c00604a3c0 <col:20, col:23> 'const unsigned char' lvalue
|   |           | |     |-ImplicitCastExpr 0x1c00604a390 <col:20> 'const unsigned char *' <LValueToRValue>
|   |           | |     | `-DeclRefExpr 0x1c00604a350 <col:20> 'const unsigned char *' lvalue ParmVar 0x1c006046820 'p' 'const unsigned char *'
|   |           | |     `-ImplicitCastExpr 0x1c00604a3a8 <col:22> 'size_t':'unsigned long long' <LValueToRValue>
|   |           | |       `-DeclRefExpr 0x1c00604a370 <col:22> 'size_t':'unsigned long long' lvalue Var 0x1c006046c48 'i' 'size_t':'unsigned long long'
|   |           | `-CharacterLiteral 0x1c00604a3e0 <col:28> 'int' 45
|   |           |-CompoundStmt 0x1c00604a740 <col:33, line:741:9>
|   |           | |-IfStmt 0x1c00604a648 <line:738:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |           | | |-BinaryOperator 0x1c00604a578 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:738:17, col:42> 'int' '!='
|   |           | | | |-ParenExpr 0x1c00604a530 <col:17, col:37> 'int'
|   |           | | | | `-BinaryOperator 0x1c00604a510 <col:18, line:688:32> 'int' '&'
|   |           | | | |   |-ImplicitCastExpr 0x1c00604a4f8 <line:738:18> 'int' <LValueToRValue>
|   |           | | | |   | `-DeclRefExpr 0x1c00604a448 <col:18> 'int' lvalue Var 0x1c006046ce0 'state' 'int'
|   |           | | | |   `-ParenExpr 0x1c00604a4d8 <line:688:25, col:32> 'int'
|   |           | | | |     `-BinaryOperator 0x1c00604a4b8 <col:26, col:31> 'int' '<<'
|   |           | | | |       |-IntegerLiteral 0x1c00604a468 <col:26> 'int' 1
|   |           | | | |       `-IntegerLiteral 0x1c00604a490 <col:31> 'int' 0
|   |           | | | `-IntegerLiteral 0x1c00604a550 <line:738:42> 'int' 0
|   |           | | `-ReturnStmt 0x1c00604a638 <line:739:17, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |           | |   `-ImplicitCastExpr 0x1c00604a620 <col:17, col:27> 'const unsigned char *' <NullToPointer>
|   |           | |     `-ParenExpr 0x1c00604a600 <col:17, col:27> 'void *'
|   |           | |       `-CStyleCastExpr 0x1c00604a5d8 <col:18, col:26> 'void *' <NullToPointer>
|   |           | |         `-IntegerLiteral 0x1c00604a598 <col:26> 'int' 0
|   |           | `-CompoundAssignOperator 0x1c00604a710 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:740:13, line:690:32> 'int' '|=' ComputeLHSTy='int' ComputeResultTy='int'
|   |           |   |-DeclRefExpr 0x1c00604a660 <line:740:13> 'int' lvalue Var 0x1c006046ce0 'state' 'int'
|   |           |   `-ParenExpr 0x1c00604a6f0 <line:690:25, col:32> 'int'
|   |           |     `-BinaryOperator 0x1c00604a6d0 <col:26, col:31> 'int' '<<'
|   |           |       |-IntegerLiteral 0x1c00604a680 <col:26> 'int' 1
|   |           |       `-IntegerLiteral 0x1c00604a6a8 <col:31> 'int' 2
|   |           `-ReturnStmt 0x1c00604a800 <line:742:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |             `-ImplicitCastExpr 0x1c00604a7e8 <col:17, col:27> 'const unsigned char *' <NullToPointer>
|   |               `-ParenExpr 0x1c00604a7c8 <col:17, col:27> 'void *'
|   |                 `-CStyleCastExpr 0x1c00604a7a0 <col:18, col:26> 'void *' <NullToPointer>
|   |                   `-IntegerLiteral 0x1c00604a760 <col:26> 'int' 0
|   |-IfStmt 0x1c00604ac70 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:749:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   | |-BinaryOperator 0x1c00604aba0 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:749:9, col:63> 'int' '||'
|   | | |-BinaryOperator 0x1c00604ab00 <col:9, col:51> 'int' '!='
|   | | | |-ParenExpr 0x1c00604aab8 <col:9, col:46> 'int'
|   | | | | `-BinaryOperator 0x1c00604aa98 <col:10, col:45> 'int' '&'
|   | | | |   |-ImplicitCastExpr 0x1c00604aa80 <col:10> 'int' <LValueToRValue>
|   | | | |   | `-DeclRefExpr 0x1c00604a900 <col:10> 'int' lvalue Var 0x1c006046ce0 'state' 'int'
|   | | | |   `-ParenExpr 0x1c00604aa60 <col:18, col:45> 'int'
|   | | | |     `-BinaryOperator 0x1c00604aa40 <line:688:25, line:690:32> 'int' '|'
|   | | | |       |-ParenExpr 0x1c00604a990 <line:688:25, col:32> 'int'
|   | | | |       | `-BinaryOperator 0x1c00604a970 <col:26, col:31> 'int' '<<'
|   | | | |       |   |-IntegerLiteral 0x1c00604a920 <col:26> 'int' 1
|   | | | |       |   `-IntegerLiteral 0x1c00604a948 <col:31> 'int' 0
|   | | | |       `-ParenExpr 0x1c00604aa20 <line:690:25, col:32> 'int'
|   | | | |         `-BinaryOperator 0x1c00604aa00 <col:26, col:31> 'int' '<<'
|   | | | |           |-IntegerLiteral 0x1c00604a9b0 <col:26> 'int' 1
|   | | | |           `-IntegerLiteral 0x1c00604a9d8 <col:31> 'int' 2
|   | | | `-IntegerLiteral 0x1c00604aad8 <line:749:51> 'int' 0
|   | | `-BinaryOperator 0x1c00604ab80 <col:56, col:63> 'int' '<'
|   | |   |-ImplicitCastExpr 0x1c00604ab68 <col:56> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x1c00604ab20 <col:56> 'int' lvalue Var 0x1c006046e08 'dots' 'int'
|   | |   `-IntegerLiteral 0x1c00604ab40 <col:63> 'int' 2
|   | `-ReturnStmt 0x1c00604ac60 <line:750:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |   `-ImplicitCastExpr 0x1c00604ac48 <col:17, col:27> 'const unsigned char *' <NullToPointer>
|   |     `-ParenExpr 0x1c00604ac28 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1c00604ac00 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1c00604abc0 <col:26> 'int' 0
|   `-ReturnStmt 0x1c00604acc0 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:751:5, col:12>
|     `-ImplicitCastExpr 0x1c00604aca8 <col:12> 'const unsigned char *' <LValueToRValue>
|       `-DeclRefExpr 0x1c00604ac88 <col:12> 'const unsigned char *' lvalue Var 0x1c006046b78 'star' 'const unsigned char *'
|-FunctionDecl 0x1c00604b050 <line:755:1, line:773:1> line:755:12 used equal_wildcard 'int (const unsigned char *, size_t, const unsigned char *, size_t, unsigned int)' static
| |-ParmVarDecl 0x1c00604ad30 <col:27, col:48> col:48 used pattern 'const unsigned char *'
| |-ParmVarDecl 0x1c00604ada8 <col:57, col:64> col:64 used pattern_len 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c00604ae28 <line:756:27, col:48> col:48 used subject 'const unsigned char *'
| |-ParmVarDecl 0x1c00604aea0 <col:57, col:64> col:64 used subject_len 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c00604af20 <line:757:27, col:40> col:40 used flags 'unsigned int'
| `-CompoundStmt 0x1c00604bd78 <line:758:1, line:773:1>
|   |-DeclStmt 0x1c00604b250 <line:759:5, col:37>
|   | `-VarDecl 0x1c00604b148 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/before\crypto\x509v3\v3_utl.c:759:26 used star 'const unsigned char *' cinit
|   |   `-ImplicitCastExpr 0x1c00604b238 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const unsigned char *' <NullToPointer>
|   |     `-ParenExpr 0x1c00604b218 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1c00604b1f0 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1c00604b1b0 <col:26> 'int' 0
|   |-IfStmt 0x1c00604b620 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:765:5, line:766:54>
|   | |-UnaryOperator 0x1c00604b438 <line:765:9, col:47> 'int' prefix '!' cannot overflow
|   | | `-ParenExpr 0x1c00604b418 <col:10, col:47> 'int'
|   | |   `-BinaryOperator 0x1c00604b3f8 <col:11, col:44> 'int' '&&'
|   | |     |-BinaryOperator 0x1c00604b2f0 <col:11, col:25> 'int' '>'
|   | |     | |-ImplicitCastExpr 0x1c00604b2c0 <col:11> 'size_t':'unsigned long long' <LValueToRValue>
|   | |     | | `-DeclRefExpr 0x1c00604b268 <col:11> 'size_t':'unsigned long long' lvalue ParmVar 0x1c00604aea0 'subject_len' 'size_t':'unsigned long long'
|   | |     | `-ImplicitCastExpr 0x1c00604b2d8 <col:25> 'unsigned long long' <IntegralCast>
|   | |     |   `-IntegerLiteral 0x1c00604b288 <col:25> 'int' 1
|   | |     `-BinaryOperator 0x1c00604b3d8 <col:30, col:44> 'int' '=='
|   | |       |-ImplicitCastExpr 0x1c00604b3c0 <col:30, col:39> 'int' <IntegralCast>
|   | |       | `-ImplicitCastExpr 0x1c00604b3a8 <col:30, col:39> 'unsigned char' <LValueToRValue>
|   | |       |   `-ArraySubscriptExpr 0x1c00604b370 <col:30, col:39> 'const unsigned char' lvalue
|   | |       |     |-ImplicitCastExpr 0x1c00604b358 <col:30> 'const unsigned char *' <LValueToRValue>
|   | |       |     | `-DeclRefExpr 0x1c00604b310 <col:30> 'const unsigned char *' lvalue ParmVar 0x1c00604ae28 'subject' 'const unsigned char *'
|   | |       |     `-IntegerLiteral 0x1c00604b330 <col:38> 'int' 0
|   | |       `-CharacterLiteral 0x1c00604b390 <col:44> 'int' 46
|   | `-BinaryOperator 0x1c00604b600 <line:766:9, col:54> 'const unsigned char *' '='
|   |   |-DeclRefExpr 0x1c00604b450 <col:9> 'const unsigned char *' lvalue Var 0x1c00604b148 'star' 'const unsigned char *'
|   |   `-CallExpr 0x1c00604b580 <col:16, col:54> 'const unsigned char *'
|   |     |-ImplicitCastExpr 0x1c00604b568 <col:16> 'const unsigned char *(*)(const unsigned char *, size_t, unsigned int)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1c00604b488 <col:16> 'const unsigned char *(const unsigned char *, size_t, unsigned int)' Function 0x1c006046a90 'valid_star' 'const unsigned char *(const unsigned char *, size_t, unsigned int)'
|   |     |-ImplicitCastExpr 0x1c00604b5b8 <col:27> 'const unsigned char *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1c00604b4a8 <col:27> 'const unsigned char *' lvalue ParmVar 0x1c00604ad30 'pattern' 'const unsigned char *'
|   |     |-ImplicitCastExpr 0x1c00604b5d0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1c00604b4c8 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1c00604ada8 'pattern_len' 'size_t':'unsigned long long'
|   |     `-ImplicitCastExpr 0x1c00604b5e8 <col:49> 'unsigned int' <LValueToRValue>
|   |       `-DeclRefExpr 0x1c00604b4e8 <col:49> 'unsigned int' lvalue ParmVar 0x1c00604af20 'flags' 'unsigned int'
|   |-IfStmt 0x1c00604b8d8 <line:767:5, line:769:56>
|   | |-BinaryOperator 0x1c00604b710 <line:767:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x1c00604b6e0 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:767:9> 'const unsigned char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1c00604b638 <col:9> 'const unsigned char *' lvalue Var 0x1c00604b148 'star' 'const unsigned char *'
|   | | `-ImplicitCastExpr 0x1c00604b6f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const unsigned char *' <BitCast>
|   | |   `-ParenExpr 0x1c00604b6c0 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1c00604b698 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1c00604b658 <col:26> 'int' 0
|   | `-ReturnStmt 0x1c00604b8c8 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:768:9, line:769:56>
|   |   `-CallExpr 0x1c00604b808 <line:768:16, line:769:56> 'int'
|   |     |-ImplicitCastExpr 0x1c00604b7f0 <line:768:16> 'int (*)(const unsigned char *, size_t, const unsigned char *, size_t, unsigned int)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1c00604b730 <col:16> 'int (const unsigned char *, size_t, const unsigned char *, size_t, unsigned int)' Function 0x1c00603e620 'equal_nocase' 'int (const unsigned char *, size_t, const unsigned char *, size_t, unsigned int)'
|   |     |-ImplicitCastExpr 0x1c00604b850 <col:29> 'const unsigned char *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1c00604b750 <col:29> 'const unsigned char *' lvalue ParmVar 0x1c00604ad30 'pattern' 'const unsigned char *'
|   |     |-ImplicitCastExpr 0x1c00604b868 <col:38> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1c00604b770 <col:38> 'size_t':'unsigned long long' lvalue ParmVar 0x1c00604ada8 'pattern_len' 'size_t':'unsigned long long'
|   |     |-ImplicitCastExpr 0x1c00604b880 <line:769:29> 'const unsigned char *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1c00604b790 <col:29> 'const unsigned char *' lvalue ParmVar 0x1c00604ae28 'subject' 'const unsigned char *'
|   |     |-ImplicitCastExpr 0x1c00604b898 <col:38> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1c00604b7b0 <col:38> 'size_t':'unsigned long long' lvalue ParmVar 0x1c00604aea0 'subject_len' 'size_t':'unsigned long long'
|   |     `-ImplicitCastExpr 0x1c00604b8b0 <col:51> 'unsigned int' <LValueToRValue>
|   |       `-DeclRefExpr 0x1c00604b7d0 <col:51> 'unsigned int' lvalue ParmVar 0x1c00604af20 'flags' 'unsigned int'
|   `-ReturnStmt 0x1c00604bd68 <line:770:5, line:772:54>
|     `-CallExpr 0x1c00604bc80 <line:770:12, line:772:54> 'int'
|       |-ImplicitCastExpr 0x1c00604bc68 <line:770:12> 'int (*)(const unsigned char *, size_t, const unsigned char *, size_t, const unsigned char *, size_t, unsigned int)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1c00604b8f0 <col:12> 'int (const unsigned char *, size_t, const unsigned char *, size_t, const unsigned char *, size_t, unsigned int)' Function 0x1c006048650 'wildcard_match' 'int (const unsigned char *, size_t, const unsigned char *, size_t, const unsigned char *, size_t, unsigned int)'
|       |-ImplicitCastExpr 0x1c00604bcd8 <col:27> 'const unsigned char *' <LValueToRValue>
|       | `-DeclRefExpr 0x1c00604b910 <col:27> 'const unsigned char *' lvalue ParmVar 0x1c00604ad30 'pattern' 'const unsigned char *'
|       |-ImplicitCastExpr 0x1c00604bcf0 <col:36, col:43> 'size_t':'unsigned long long' <IntegralCast>
|       | `-BinaryOperator 0x1c00604b9a0 <col:36, col:43> 'long long' '-'
|       |   |-ImplicitCastExpr 0x1c00604b970 <col:36> 'const unsigned char *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x1c00604b930 <col:36> 'const unsigned char *' lvalue Var 0x1c00604b148 'star' 'const unsigned char *'
|       |   `-ImplicitCastExpr 0x1c00604b988 <col:43> 'const unsigned char *' <LValueToRValue>
|       |     `-DeclRefExpr 0x1c00604b950 <col:43> 'const unsigned char *' lvalue ParmVar 0x1c00604ad30 'pattern' 'const unsigned char *'
|       |-BinaryOperator 0x1c00604ba20 <line:771:27, col:34> 'const unsigned char *' '+'
|       | |-ImplicitCastExpr 0x1c00604ba08 <col:27> 'const unsigned char *' <LValueToRValue>
|       | | `-DeclRefExpr 0x1c00604b9c0 <col:27> 'const unsigned char *' lvalue Var 0x1c00604b148 'star' 'const unsigned char *'
|       | `-IntegerLiteral 0x1c00604b9e0 <col:34> 'int' 1
|       |-ImplicitCastExpr 0x1c00604bd08 <col:37, col:70> 'size_t':'unsigned long long' <IntegralCast>
|       | `-BinaryOperator 0x1c00604bb88 <col:37, col:70> 'long long' '-'
|       |   |-BinaryOperator 0x1c00604bb28 <col:37, col:63> 'long long' '-'
|       |   | |-ParenExpr 0x1c00604bad0 <col:37, col:59> 'const unsigned char *'
|       |   | | `-BinaryOperator 0x1c00604bab0 <col:38, col:48> 'const unsigned char *' '+'
|       |   | |   |-ImplicitCastExpr 0x1c00604ba80 <col:38> 'const unsigned char *' <LValueToRValue>
|       |   | |   | `-DeclRefExpr 0x1c00604ba40 <col:38> 'const unsigned char *' lvalue ParmVar 0x1c00604ad30 'pattern' 'const unsigned char *'
|       |   | |   `-ImplicitCastExpr 0x1c00604ba98 <col:48> 'size_t':'unsigned long long' <LValueToRValue>
|       |   | |     `-DeclRefExpr 0x1c00604ba60 <col:48> 'size_t':'unsigned long long' lvalue ParmVar 0x1c00604ada8 'pattern_len' 'size_t':'unsigned long long'
|       |   | `-ImplicitCastExpr 0x1c00604bb10 <col:63> 'const unsigned char *' <LValueToRValue>
|       |   |   `-DeclRefExpr 0x1c00604baf0 <col:63> 'const unsigned char *' lvalue Var 0x1c00604b148 'star' 'const unsigned char *'
|       |   `-ImplicitCastExpr 0x1c00604bb70 <col:70> 'long long' <IntegralCast>
|       |     `-IntegerLiteral 0x1c00604bb48 <col:70> 'int' 1
|       |-ImplicitCastExpr 0x1c00604bd20 <line:772:27> 'const unsigned char *' <LValueToRValue>
|       | `-DeclRefExpr 0x1c00604bba8 <col:27> 'const unsigned char *' lvalue ParmVar 0x1c00604ae28 'subject' 'const unsigned char *'
|       |-ImplicitCastExpr 0x1c00604bd38 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x1c00604bbc8 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1c00604aea0 'subject_len' 'size_t':'unsigned long long'
|       `-ImplicitCastExpr 0x1c00604bd50 <col:49> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x1c00604bbe8 <col:49> 'unsigned int' lvalue ParmVar 0x1c00604af20 'flags' 'unsigned int'
|-FunctionDecl 0x1c006044250 <line:781:1, line:815:1> line:781:12 invalid do_check_string 'int (const int *, int, int, unsigned int, const char *, size_t, char **)' static
| |-ParmVarDecl 0x1c00604bdc0 <col:28, col:47> col:47 invalid a 'const int *'
| |-ParmVarDecl 0x1c00604be40 <col:50, col:54> col:54 used cmp_type 'int'
| |-ParmVarDecl 0x1c00604bec0 <col:64, col:73> col:73 invalid equal 'int'
| |-ParmVarDecl 0x1c00604bf40 <line:782:28, col:41> col:41 used flags 'unsigned int'
| |-ParmVarDecl 0x1c00604bfc0 <col:48, col:60> col:60 used b 'const char *'
| |-ParmVarDecl 0x1c00604c038 <col:63, col:70> col:70 used blen 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c00604c0b8 <line:783:28, col:35> col:35 used peername 'char **'
| `-CompoundStmt 0x1c00604f4a8 <line:784:1, line:815:1>
|   |-DeclStmt 0x1c0060443e8 <line:785:5, col:15>
|   | `-VarDecl 0x1c006044358 <col:5, col:14> col:9 used rv 'int' cinit
|   |   `-IntegerLiteral 0x1c0060443c0 <col:14> 'int' 0
|   |-IfStmt 0x1c006044450 <line:787:5, line:788:16>
|   | |-OpaqueValueExpr 0x1c006044438 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1c006044428 <col:9, col:16>
|   |   `-IntegerLiteral 0x1c006044400 <col:16> 'int' 0
|   |-IfStmt 0x1c00604f438 <line:789:5, line:813:5> has_else
|   | |-BinaryOperator 0x1c0060444e0 <line:789:9, col:20> 'int' '>'
|   | | |-ImplicitCastExpr 0x1c0060444c8 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1c006044468 <col:9> 'int' lvalue ParmVar 0x1c00604be40 'cmp_type' 'int'
|   | | `-IntegerLiteral 0x1c0060444a0 <col:20> 'int' 0
|   | |-CompoundStmt 0x1c006044ae8 <col:23, line:798:5>
|   | | |-IfStmt 0x1c006044570 <line:790:9, line:791:20>
|   | | | |-OpaqueValueExpr 0x1c006044558 <<invalid sloc>> '_Bool'
|   | | | `-ReturnStmt 0x1c006044548 <col:13, col:20>
|   | | |   `-IntegerLiteral 0x1c006044520 <col:20> 'int' 0
|   | | `-IfStmt 0x1c006044870 <line:792:9, line:795:18> has_else
|   | |   |-OpaqueValueExpr 0x1c006044858 <<invalid sloc>> '_Bool'
|   | |   |-NullStmt 0x1c006044850 <line:793:13>
|   | |   `-IfStmt 0x1c006044838 <line:794:14, line:795:18>
|   | |     |-OpaqueValueExpr 0x1c006044820 <<invalid sloc>> '_Bool'
|   | |     `-BinaryOperator 0x1c006044800 <col:13, col:18> 'int' '='
|   | |       |-DeclRefExpr 0x1c0060447b8 <col:13> 'int' lvalue Var 0x1c006044358 'rv' 'int'
|   | |       `-IntegerLiteral 0x1c0060447d8 <col:18> 'int' 1
|   | `-CompoundStmt 0x1c00604f400 <line:798:12, line:813:5>
|   |   |-DeclStmt 0x1c006044b88 <line:799:9, col:20>
|   |   | `-VarDecl 0x1c006044b20 <col:9, col:13> col:13 used astrlen 'int'
|   |   |-DeclStmt 0x1c006044c20 <line:800:9, col:28>
|   |   | `-VarDecl 0x1c006044bb8 <col:9, col:24> col:24 used astr 'unsigned char *'
|   |   |-IfStmt 0x1c006044ee8 <line:802:9, line:808:9>
|   |   | |-BinaryOperator 0x1c006044e60 <line:802:13, col:23> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x1c006044e48 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1c006044e00 <col:13> 'int' lvalue Var 0x1c006044b20 'astrlen' 'int'
|   |   | | `-IntegerLiteral 0x1c006044e20 <col:23> 'int' 0
|   |   | `-CompoundStmt 0x1c006044ed0 <col:26, line:808:9>
|   |   |   `-ReturnStmt 0x1c006044ec0 <line:807:13, col:21>
|   |   |     `-UnaryOperator 0x1c006044ea8 <col:20, col:21> 'int' prefix '-'
|   |   |       `-IntegerLiteral 0x1c006044e80 <col:21> 'int' 1
|   |   |-IfStmt 0x1c00604f350 <line:810:9, line:811:62>
|   |   | |-BinaryOperator 0x1c0060450d0 <line:810:13, col:23> 'int' '&&'
|   |   | | |-BinaryOperator 0x1c006045078 <col:13, col:18> 'int' '>'
|   |   | | | |-ImplicitCastExpr 0x1c006045060 <col:13> 'int' <LValueToRValue>
|   |   | | | | `-DeclRefExpr 0x1c006045018 <col:13> 'int' lvalue Var 0x1c006044358 'rv' 'int'
|   |   | | | `-IntegerLiteral 0x1c006045038 <col:18> 'int' 0
|   |   | | `-ImplicitCastExpr 0x1c0060450b8 <col:23> 'char **' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1c006045098 <col:23> 'char **' lvalue ParmVar 0x1c00604c0b8 'peername' 'char **'
|   |   | `-BinaryOperator 0x1c00604f330 <line:811:13, col:62> 'char *' '='
|   |   |   |-UnaryOperator 0x1c006045128 <col:13, col:14> 'char *' lvalue prefix '*' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x1c006045110 <col:14> 'char **' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x1c0060450f0 <col:14> 'char **' lvalue ParmVar 0x1c00604c0b8 'peername' 'char **'
|   |   |   `-ImplicitCastExpr 0x1c00604f318 <col:25, col:62> 'char *' <IntegralToPointer>
|   |   |     `-CallExpr 0x1c006045210 <col:25, col:62> 'int'
|   |   |       |-ImplicitCastExpr 0x1c0060451f8 <col:25> 'int (*)()' <FunctionToPointerDecay>
|   |   |       | `-DeclRefExpr 0x1c006045140 <col:25> 'int ()' Function 0x1c006044a00 'OPENSSL_strndup' 'int ()'
|   |   |       |-CStyleCastExpr 0x1c0060451b0 <col:41, col:49> 'char *' <BitCast>
|   |   |       | `-ImplicitCastExpr 0x1c006045198 <col:49> 'unsigned char *' <LValueToRValue> part_of_explicit_cast
|   |   |       |   `-DeclRefExpr 0x1c006045160 <col:49> 'unsigned char *' lvalue Var 0x1c006044bb8 'astr' 'unsigned char *'
|   |   |       `-ImplicitCastExpr 0x1c00604f300 <col:55> 'int' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x1c0060451d8 <col:55> 'int' lvalue Var 0x1c006044b20 'astrlen' 'int'
|   |   `-CallExpr 0x1c00604f3c0 <line:812:9, col:26> 'int'
|   |     |-ImplicitCastExpr 0x1c00604f3a8 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1c00604f368 <col:9> 'int ()' Function 0x1c0060374d0 'OPENSSL_free' 'int ()'
|   |     `-ImplicitCastExpr 0x1c00604f3e8 <col:22> 'unsigned char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1c00604f388 <col:22> 'unsigned char *' lvalue Var 0x1c006044bb8 'astr' 'unsigned char *'
|   `-ReturnStmt 0x1c00604f498 <line:814:5, col:12>
|     `-ImplicitCastExpr 0x1c00604f480 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1c00604f460 <col:12> 'int' lvalue Var 0x1c006044358 'rv' 'int'
|-FunctionDecl 0x1c00604f8e0 <line:817:1, line:896:1> line:817:12 invalid do_x509_check 'int (int *, const char *, size_t, unsigned int, int, char **)' static
| |-ParmVarDecl 0x1c00604f4f0 <col:26, col:32> col:32 invalid x 'int *'
| |-ParmVarDecl 0x1c00604f570 <col:35, col:47> col:47 used chk 'const char *'
| |-ParmVarDecl 0x1c00604f5e8 <col:52, col:59> col:59 used chklen 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c00604f668 <line:818:26, col:39> col:39 used flags 'unsigned int'
| |-ParmVarDecl 0x1c00604f6e8 <col:46, col:50> col:50 used check_type 'int'
| |-ParmVarDecl 0x1c00604f768 <col:62, col:69> col:69 used peername 'char **'
| `-CompoundStmt 0x1c00604d830 <line:819:1, line:896:1>
|   |-DeclStmt 0x1c00604fb58 <line:822:5, col:10>
|   | `-VarDecl 0x1c00604faf0 <col:5, col:9> col:9 used i 'int'
|   |-DeclStmt 0x1c00604fbf0 <line:823:5, col:25>
|   | `-VarDecl 0x1c00604fb88 <col:5, col:9> col:9 used cnid 'int'
|   |-DeclStmt 0x1c00604fc88 <line:824:5, col:17>
|   | `-VarDecl 0x1c00604fc20 <col:5, col:9> col:9 used alt_type 'int'
|   |-DeclStmt 0x1c00604fd48 <line:825:5, col:24>
|   | `-VarDecl 0x1c00604fcb8 <col:5, col:23> col:9 used san_present 'int' cinit
|   |   `-IntegerLiteral 0x1c00604fd20 <col:23> 'int' 0
|   |-DeclStmt 0x1c00604fe08 <line:826:5, col:15>
|   | `-VarDecl 0x1c00604fd78 <col:5, col:14> col:9 used rv 'int' cinit
|   |   `-IntegerLiteral 0x1c00604fde0 <col:14> 'int' 0
|   |-IfStmt 0x1c006050298 <line:831:5, line:848:5> has_else
|   | |-OpaqueValueExpr 0x1c006050280 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x1c00604ff20 <line:831:34, line:835:5>
|   | `-IfStmt 0x1c006050258 <col:12, line:848:5> has_else
|   |   |-OpaqueValueExpr 0x1c006050240 <<invalid sloc>> '_Bool'
|   |   |-CompoundStmt 0x1c0060501e0 <line:835:39, line:845:5>
|   |   `-CompoundStmt 0x1c006050230 <col:12, line:848:5>
|   |-IfStmt 0x1c00604c438 <line:850:5, line:851:28>
|   | |-BinaryOperator 0x1c00604c328 <line:850:9, col:19> 'int' '=='
|   | | |-ImplicitCastExpr 0x1c00604c2f8 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1c0060502c0 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x1c00604f5e8 'chklen' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x1c00604c310 <col:19> 'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x1c00604c2d0 <col:19> 'int' 0
|   | `-BinaryOperator 0x1c00604c418 <line:851:9, col:28> 'size_t':'unsigned long long' '='
|   |   |-DeclRefExpr 0x1c00604c348 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x1c00604f5e8 'chklen' 'size_t':'unsigned long long'
|   |   `-CallExpr 0x1c00604c3d8 <col:18, col:28> 'unsigned long long'
|   |     |-ImplicitCastExpr 0x1c00604c3c0 <col:18> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1c00604c368 <col:18> 'unsigned long long (const char *)' Function 0x1c006038f70 'strlen' 'unsigned long long (const char *)'
|   |     `-ImplicitCastExpr 0x1c00604c400 <col:25> 'const char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1c00604c388 <col:25> 'const char *' lvalue ParmVar 0x1c00604f570 'chk' 'const char *'
|   |-IfStmt 0x1c00604cee8 <line:854:5, line:878:5>
|   | |-OpaqueValueExpr 0x1c00604ced0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1c00604ceb0 <line:854:15, line:878:5>
|   |   |-IfStmt 0x1c00604cdf0 <line:874:9, line:875:20>
|   |   | |-BinaryOperator 0x1c00604cd88 <line:874:13, col:19> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x1c00604cd70 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1c00604cd28 <col:13> 'int' lvalue Var 0x1c00604fd78 'rv' 'int'
|   |   | | `-IntegerLiteral 0x1c00604cd48 <col:19> 'int' 0
|   |   | `-ReturnStmt 0x1c00604cde0 <line:875:13, col:20>
|   |   |   `-ImplicitCastExpr 0x1c00604cdc8 <col:20> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1c00604cda8 <col:20> 'int' lvalue Var 0x1c00604fd78 'rv' 'int'
|   |   `-IfStmt 0x1c00604ce98 <line:876:9, line:877:20>
|   |     |-OpaqueValueExpr 0x1c00604ce80 <<invalid sloc>> '_Bool'
|   |     `-ReturnStmt 0x1c00604ce70 <col:13, col:20>
|   |       `-IntegerLiteral 0x1c00604ce48 <col:20> 'int' 0
|   |-IfStmt 0x1c00604cf90 <line:881:5, line:882:16>
|   | |-OpaqueValueExpr 0x1c00604cf78 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1c00604cf68 <col:9, col:16>
|   |   `-IntegerLiteral 0x1c00604cf40 <col:16> 'int' 0
|   |-BinaryOperator 0x1c00604d008 <line:884:5, col:10> 'int' '='
|   | |-DeclRefExpr 0x1c00604cfa8 <col:5> 'int' lvalue Var 0x1c00604faf0 'i' 'int'
|   | `-UnaryOperator 0x1c00604cff0 <col:9, col:10> 'int' prefix '-'
|   |   `-IntegerLiteral 0x1c00604cfc8 <col:10> 'int' 1
|   `-ReturnStmt 0x1c00604d820 <line:895:5, col:12>
|     `-IntegerLiteral 0x1c00604d7f8 <col:12> 'int' 0
|-FunctionDecl 0x1c00604dc00 <line:898:1, line:915:1> line:898:5 invalid X509_check_host 'int (int *, const char *, size_t, unsigned int, char **)'
| |-ParmVarDecl 0x1c00604d8b0 <col:21, col:27> col:27 invalid x 'int *'
| |-ParmVarDecl 0x1c00604d930 <col:30, col:42> col:42 used chk 'const char *'
| |-ParmVarDecl 0x1c00604d9a8 <col:47, col:54> col:54 used chklen 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c00604da28 <line:899:21, col:34> col:34 used flags 'unsigned int'
| |-ParmVarDecl 0x1c00604daa8 <col:41, col:48> col:48 used peername 'char **'
| `-CompoundStmt 0x1c006055938 <line:900:1, line:915:1>
|   |-IfStmt 0x1c00604de40 <line:901:5, line:902:17>
|   | |-BinaryOperator 0x1c00604ddd0 <line:901:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x1c00604dda0 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:901:9> 'const char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1c00604dce0 <col:9> 'const char *' lvalue ParmVar 0x1c00604d930 'chk' 'const char *'
|   | | `-ImplicitCastExpr 0x1c00604ddb8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   | |   `-ParenExpr 0x1c00604dd80 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1c00604dd58 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1c00604dd18 <col:26> 'int' 0
|   | `-ReturnStmt 0x1c00604de30 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:902:9, col:17>
|   |   `-UnaryOperator 0x1c00604de18 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x1c00604ddf0 <col:17> 'int' 2
|   |-IfStmt 0x1c006055600 <line:908:5, line:911:17> has_else
|   | |-BinaryOperator 0x1c00604dee8 <line:908:9, col:19> 'int' '=='
|   | | |-ImplicitCastExpr 0x1c00604deb8 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1c00604de58 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x1c00604d9a8 'chklen' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x1c00604ded0 <col:19> 'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x1c00604de90 <col:19> 'int' 0
|   | |-BinaryOperator 0x1c00604dfd8 <line:909:9, col:28> 'size_t':'unsigned long long' '='
|   | | |-DeclRefExpr 0x1c00604df08 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x1c00604d9a8 'chklen' 'size_t':'unsigned long long'
|   | | `-CallExpr 0x1c00604df98 <col:18, col:28> 'unsigned long long'
|   | |   |-ImplicitCastExpr 0x1c00604df80 <col:18> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x1c00604df28 <col:18> 'unsigned long long (const char *)' Function 0x1c006038f70 'strlen' 'unsigned long long (const char *)'
|   | |   `-ImplicitCastExpr 0x1c00604dfc0 <col:25> 'const char *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x1c00604df48 <col:25> 'const char *' lvalue ParmVar 0x1c00604d930 'chk' 'const char *'
|   | `-IfStmt 0x1c0060555e8 <line:910:10, line:911:17>
|   |   |-CallExpr 0x1c006055530 <line:910:14, col:64> 'void *'
|   |   | |-ImplicitCastExpr 0x1c006055518 <col:14> 'void *(*)(const void *, int, unsigned long long)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1c00604e230 <col:14> 'void *(const void *, int, unsigned long long)' Function 0x1c00604e040 'memchr' 'void *(const void *, int, unsigned long long)'
|   |   | |-ImplicitCastExpr 0x1c006055580 <col:21> 'const void *' <BitCast>
|   |   | | `-ImplicitCastExpr 0x1c006055568 <col:21> 'const char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1c00604e268 <col:21> 'const char *' lvalue ParmVar 0x1c00604d930 'chk' 'const char *'
|   |   | |-CharacterLiteral 0x1c00604e288 <col:26> 'int' 0
|   |   | `-ConditionalOperator 0x1c0060554a8 <col:32, col:58> 'unsigned long long'
|   |   |   |-BinaryOperator 0x1c0060553b8 <col:32, col:41> 'int' '>'
|   |   |   | |-ImplicitCastExpr 0x1c006055388 <col:32> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x1c00604e2a0 <col:32> 'size_t':'unsigned long long' lvalue ParmVar 0x1c00604d9a8 'chklen' 'size_t':'unsigned long long'
|   |   |   | `-ImplicitCastExpr 0x1c0060553a0 <col:41> 'unsigned long long' <IntegralCast>
|   |   |   |   `-IntegerLiteral 0x1c006055360 <col:41> 'int' 1
|   |   |   |-BinaryOperator 0x1c006055450 <col:45, col:54> 'unsigned long long' '-'
|   |   |   | |-ImplicitCastExpr 0x1c006055420 <col:45> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x1c0060553d8 <col:45> 'size_t':'unsigned long long' lvalue ParmVar 0x1c00604d9a8 'chklen' 'size_t':'unsigned long long'
|   |   |   | `-ImplicitCastExpr 0x1c006055438 <col:54> 'unsigned long long' <IntegralCast>
|   |   |   |   `-IntegerLiteral 0x1c0060553f8 <col:54> 'int' 1
|   |   |   `-ImplicitCastExpr 0x1c006055490 <col:58> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1c006055470 <col:58> 'size_t':'unsigned long long' lvalue ParmVar 0x1c00604d9a8 'chklen' 'size_t':'unsigned long long'
|   |   `-ReturnStmt 0x1c0060555d8 <line:911:9, col:17>
|   |     `-UnaryOperator 0x1c0060555c0 <col:16, col:17> 'int' prefix '-'
|   |       `-IntegerLiteral 0x1c006055598 <col:17> 'int' 2
|   `-IfStmt 0x1c006055870 <line:912:5, line:913:11>
|     |-BinaryOperator 0x1c006055818 <line:912:9, col:42> 'int' '&&'
|     | |-BinaryOperator 0x1c0060556a0 <col:9, col:18> 'int' '>'
|     | | |-ImplicitCastExpr 0x1c006055670 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|     | | | `-DeclRefExpr 0x1c006055628 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x1c00604d9a8 'chklen' 'size_t':'unsigned long long'
|     | | `-ImplicitCastExpr 0x1c006055688 <col:18> 'unsigned long long' <IntegralCast>
|     | |   `-IntegerLiteral 0x1c006055648 <col:18> 'int' 1
|     | `-BinaryOperator 0x1c0060557f8 <col:23, col:42> 'int' '=='
|     |   |-ImplicitCastExpr 0x1c0060557e0 <col:23, col:37> 'int' <IntegralCast>
|     |   | `-ImplicitCastExpr 0x1c0060557c8 <col:23, col:37> 'char' <LValueToRValue>
|     |   |   `-ArraySubscriptExpr 0x1c006055790 <col:23, col:37> 'const char' lvalue
|     |   |     |-ImplicitCastExpr 0x1c006055778 <col:23> 'const char *' <LValueToRValue>
|     |   |     | `-DeclRefExpr 0x1c0060556c0 <col:23> 'const char *' lvalue ParmVar 0x1c00604d930 'chk' 'const char *'
|     |   |     `-BinaryOperator 0x1c006055758 <col:27, col:36> 'unsigned long long' '-'
|     |   |       |-ImplicitCastExpr 0x1c006055728 <col:27> 'size_t':'unsigned long long' <LValueToRValue>
|     |   |       | `-DeclRefExpr 0x1c0060556e0 <col:27> 'size_t':'unsigned long long' lvalue ParmVar 0x1c00604d9a8 'chklen' 'size_t':'unsigned long long'
|     |   |       `-ImplicitCastExpr 0x1c006055740 <col:36> 'unsigned long long' <IntegralCast>
|     |   |         `-IntegerLiteral 0x1c006055700 <col:36> 'int' 1
|     |   `-CharacterLiteral 0x1c0060557b0 <col:42> 'int' 0
|     `-UnaryOperator 0x1c006055858 <line:913:9, col:11> 'size_t':'unsigned long long' prefix '--'
|       `-DeclRefExpr 0x1c006055838 <col:11> 'size_t':'unsigned long long' lvalue ParmVar 0x1c00604d9a8 'chklen' 'size_t':'unsigned long long'
|-FunctionDecl 0x1c00604e040 <line:910:14> col:14 implicit used memchr 'void *(const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1c00604e0e0 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1c00604e148 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1c00604e1b0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1c006055c40 <line:917:1, line:934:1> line:917:5 invalid X509_check_email 'int (int *, const char *, size_t, unsigned int)'
| |-ParmVarDecl 0x1c006055978 <col:22, col:28> col:28 invalid x 'int *'
| |-ParmVarDecl 0x1c0060559f8 <col:31, col:43> col:43 used chk 'const char *'
| |-ParmVarDecl 0x1c006055a70 <col:48, col:55> col:55 used chklen 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c006055af0 <line:918:22, col:35> col:35 used flags 'unsigned int'
| `-CompoundStmt 0x1c00604e678 <line:919:1, line:934:1>
|   |-IfStmt 0x1c006055e78 <line:920:5, line:921:17>
|   | |-BinaryOperator 0x1c006055e08 <line:920:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x1c006055dd8 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:920:9> 'const char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1c006055d18 <col:9> 'const char *' lvalue ParmVar 0x1c0060559f8 'chk' 'const char *'
|   | | `-ImplicitCastExpr 0x1c006055df0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   | |   `-ParenExpr 0x1c006055db8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1c006055d90 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1c006055d50 <col:26> 'int' 0
|   | `-ReturnStmt 0x1c006055e68 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:921:9, col:17>
|   |   `-UnaryOperator 0x1c006055e50 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x1c006055e28 <col:17> 'int' 2
|   |-IfStmt 0x1c00604e2f0 <line:927:5, line:930:17> has_else
|   | |-BinaryOperator 0x1c006055f20 <line:927:9, col:19> 'int' '=='
|   | | |-ImplicitCastExpr 0x1c006055ef0 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1c006055e90 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x1c006055a70 'chklen' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x1c006055f08 <col:19> 'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x1c006055ec8 <col:19> 'int' 0
|   | |-BinaryOperator 0x1c006056050 <line:928:9, col:36> 'size_t':'unsigned long long' '='
|   | | |-DeclRefExpr 0x1c006055f40 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x1c006055a70 'chklen' 'size_t':'unsigned long long'
|   | | `-CallExpr 0x1c006056010 <col:18, col:36> 'unsigned long long'
|   | |   |-ImplicitCastExpr 0x1c006055ff8 <col:18> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x1c006055f60 <col:18> 'unsigned long long (const char *)' Function 0x1c006038f70 'strlen' 'unsigned long long (const char *)'
|   | |   `-ImplicitCastExpr 0x1c006056038 <col:25, col:33> 'const char *' <NoOp>
|   | |     `-CStyleCastExpr 0x1c006055fd0 <col:25, col:33> 'char *' <NoOp>
|   | |       `-ImplicitCastExpr 0x1c006055fb8 <col:33> 'const char *' <LValueToRValue> part_of_explicit_cast
|   | |         `-DeclRefExpr 0x1c006055f80 <col:33> 'const char *' lvalue ParmVar 0x1c0060559f8 'chk' 'const char *'
|   | `-IfStmt 0x1c006056348 <line:929:10, line:930:17>
|   |   |-CallExpr 0x1c006056290 <line:929:14, col:64> 'void *'
|   |   | |-ImplicitCastExpr 0x1c006056278 <col:14> 'void *(*)(const void *, int, unsigned long long)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1c006056070 <col:14> 'void *(const void *, int, unsigned long long)' Function 0x1c00604e040 'memchr' 'void *(const void *, int, unsigned long long)'
|   |   | |-ImplicitCastExpr 0x1c0060562e0 <col:21> 'const void *' <BitCast>
|   |   | | `-ImplicitCastExpr 0x1c0060562c8 <col:21> 'const char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1c006056090 <col:21> 'const char *' lvalue ParmVar 0x1c0060559f8 'chk' 'const char *'
|   |   | |-CharacterLiteral 0x1c0060560b0 <col:26> 'int' 0
|   |   | `-ConditionalOperator 0x1c006056230 <col:32, col:58> 'unsigned long long'
|   |   |   |-BinaryOperator 0x1c006056140 <col:32, col:41> 'int' '>'
|   |   |   | |-ImplicitCastExpr 0x1c006056110 <col:32> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x1c0060560c8 <col:32> 'size_t':'unsigned long long' lvalue ParmVar 0x1c006055a70 'chklen' 'size_t':'unsigned long long'
|   |   |   | `-ImplicitCastExpr 0x1c006056128 <col:41> 'unsigned long long' <IntegralCast>
|   |   |   |   `-IntegerLiteral 0x1c0060560e8 <col:41> 'int' 1
|   |   |   |-BinaryOperator 0x1c0060561d8 <col:45, col:54> 'unsigned long long' '-'
|   |   |   | |-ImplicitCastExpr 0x1c0060561a8 <col:45> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x1c006056160 <col:45> 'size_t':'unsigned long long' lvalue ParmVar 0x1c006055a70 'chklen' 'size_t':'unsigned long long'
|   |   |   | `-ImplicitCastExpr 0x1c0060561c0 <col:54> 'unsigned long long' <IntegralCast>
|   |   |   |   `-IntegerLiteral 0x1c006056180 <col:54> 'int' 1
|   |   |   `-ImplicitCastExpr 0x1c006056218 <col:58> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1c0060561f8 <col:58> 'size_t':'unsigned long long' lvalue ParmVar 0x1c006055a70 'chklen' 'size_t':'unsigned long long'
|   |   `-ReturnStmt 0x1c006056338 <line:930:9, col:17>
|   |     `-UnaryOperator 0x1c006056320 <col:16, col:17> 'int' prefix '-'
|   |       `-IntegerLiteral 0x1c0060562f8 <col:17> 'int' 2
|   `-IfStmt 0x1c00604e560 <line:931:5, line:932:11>
|     |-BinaryOperator 0x1c00604e508 <line:931:9, col:42> 'int' '&&'
|     | |-BinaryOperator 0x1c00604e390 <col:9, col:18> 'int' '>'
|     | | |-ImplicitCastExpr 0x1c00604e360 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|     | | | `-DeclRefExpr 0x1c00604e318 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x1c006055a70 'chklen' 'size_t':'unsigned long long'
|     | | `-ImplicitCastExpr 0x1c00604e378 <col:18> 'unsigned long long' <IntegralCast>
|     | |   `-IntegerLiteral 0x1c00604e338 <col:18> 'int' 1
|     | `-BinaryOperator 0x1c00604e4e8 <col:23, col:42> 'int' '=='
|     |   |-ImplicitCastExpr 0x1c00604e4d0 <col:23, col:37> 'int' <IntegralCast>
|     |   | `-ImplicitCastExpr 0x1c00604e4b8 <col:23, col:37> 'char' <LValueToRValue>
|     |   |   `-ArraySubscriptExpr 0x1c00604e480 <col:23, col:37> 'const char' lvalue
|     |   |     |-ImplicitCastExpr 0x1c00604e468 <col:23> 'const char *' <LValueToRValue>
|     |   |     | `-DeclRefExpr 0x1c00604e3b0 <col:23> 'const char *' lvalue ParmVar 0x1c0060559f8 'chk' 'const char *'
|     |   |     `-BinaryOperator 0x1c00604e448 <col:27, col:36> 'unsigned long long' '-'
|     |   |       |-ImplicitCastExpr 0x1c00604e418 <col:27> 'size_t':'unsigned long long' <LValueToRValue>
|     |   |       | `-DeclRefExpr 0x1c00604e3d0 <col:27> 'size_t':'unsigned long long' lvalue ParmVar 0x1c006055a70 'chklen' 'size_t':'unsigned long long'
|     |   |       `-ImplicitCastExpr 0x1c00604e430 <col:36> 'unsigned long long' <IntegralCast>
|     |   |         `-IntegerLiteral 0x1c00604e3f0 <col:36> 'int' 1
|     |   `-CharacterLiteral 0x1c00604e4a0 <col:42> 'int' 0
|     `-UnaryOperator 0x1c00604e548 <line:932:9, col:11> 'size_t':'unsigned long long' prefix '--'
|       `-DeclRefExpr 0x1c00604e528 <col:11> 'size_t':'unsigned long long' lvalue ParmVar 0x1c006055a70 'chklen' 'size_t':'unsigned long long'
|-FunctionDecl 0x1c00604e980 <line:936:1, line:942:1> line:936:5 invalid X509_check_ip 'int (int *, const unsigned char *, size_t, unsigned int)'
| |-ParmVarDecl 0x1c00604e6b8 <col:19, col:25> col:25 invalid x 'int *'
| |-ParmVarDecl 0x1c00604e738 <col:28, col:49> col:49 used chk 'const unsigned char *'
| |-ParmVarDecl 0x1c00604e7b0 <col:54, col:61> col:61 used chklen 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c00604e830 <line:937:19, col:32> col:32 used flags 'unsigned int'
| `-CompoundStmt 0x1c00604ed40 <line:938:1, line:942:1>
|   `-IfStmt 0x1c00604ebb8 <line:939:5, line:940:17>
|     |-BinaryOperator 0x1c00604eb48 <line:939:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|     | |-ImplicitCastExpr 0x1c00604eb18 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:939:9> 'const unsigned char *' <LValueToRValue>
|     | | `-DeclRefExpr 0x1c00604ea58 <col:9> 'const unsigned char *' lvalue ParmVar 0x1c00604e738 'chk' 'const unsigned char *'
|     | `-ImplicitCastExpr 0x1c00604eb30 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const unsigned char *' <BitCast>
|     |   `-ParenExpr 0x1c00604eaf8 <col:17, col:27> 'void *'
|     |     `-CStyleCastExpr 0x1c00604ead0 <col:18, col:26> 'void *' <NullToPointer>
|     |       `-IntegerLiteral 0x1c00604ea90 <col:26> 'int' 0
|     `-ReturnStmt 0x1c00604eba8 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:940:9, col:17>
|       `-UnaryOperator 0x1c00604eb90 <col:16, col:17> 'int' prefix '-'
|         `-IntegerLiteral 0x1c00604eb68 <col:17> 'int' 2
|-FunctionDecl 0x1c00604ef60 <line:944:1, line:955:1> line:944:5 invalid X509_check_ip_asc 'int (int *, const char *, unsigned int)'
| |-ParmVarDecl 0x1c00604ed70 <col:23, col:29> col:29 invalid x 'int *'
| |-ParmVarDecl 0x1c00604edf0 <col:32, col:44> col:44 used ipasc 'const char *'
| |-ParmVarDecl 0x1c00604ee70 <col:51, col:64> col:64 used flags 'unsigned int'
| `-CompoundStmt 0x1c0060578b0 <line:945:1, line:955:1>
|   |-DeclStmt 0x1c00604f138 <line:946:5, col:28>
|   | `-VarDecl 0x1c00604f0d0 <col:5, col:27> col:19 used ipout 'unsigned char [16]'
|   |-DeclStmt 0x1c00604f1c8 <line:947:5, col:17>
|   | `-VarDecl 0x1c00604f160 <col:5, col:12> col:12 used iplen 'size_t':'unsigned long long'
|   |-IfStmt 0x1c0060573d0 <line:949:5, line:950:17>
|   | |-BinaryOperator 0x1c00604f2d0 <line:949:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x1c00604f2a0 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:949:9> 'const char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1c00604f1e0 <col:9> 'const char *' lvalue ParmVar 0x1c00604edf0 'ipasc' 'const char *'
|   | | `-ImplicitCastExpr 0x1c00604f2b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   | |   `-ParenExpr 0x1c00604f280 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1c00604f258 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1c00604f218 <col:26> 'int' 0
|   | `-ReturnStmt 0x1c0060573c0 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:950:9, col:17>
|   |   `-UnaryOperator 0x1c0060573a8 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x1c006057380 <col:17> 'int' 2
|   |-BinaryOperator 0x1c006057638 <line:951:5, col:43> 'size_t':'unsigned long long' '='
|   | |-DeclRefExpr 0x1c0060573e8 <col:5> 'size_t':'unsigned long long' lvalue Var 0x1c00604f160 'iplen' 'size_t':'unsigned long long'
|   | `-CStyleCastExpr 0x1c006057610 <col:13, col:43> 'size_t':'unsigned long long' <IntegralCast>
|   |   `-CallExpr 0x1c0060575a0 <col:21, col:43> 'int'
|   |     |-ImplicitCastExpr 0x1c006057588 <col:21> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1c006057510 <col:21> 'int ()' Function 0x1c006057448 'a2i_ipadd' 'int ()'
|   |     |-ImplicitCastExpr 0x1c0060575d0 <col:31> 'unsigned char *' <ArrayToPointerDecay>
|   |     | `-DeclRefExpr 0x1c006057530 <col:31> 'unsigned char [16]' lvalue Var 0x1c00604f0d0 'ipout' 'unsigned char [16]'
|   |     `-ImplicitCastExpr 0x1c0060575e8 <col:38> 'const char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1c006057568 <col:38> 'const char *' lvalue ParmVar 0x1c00604edf0 'ipasc' 'const char *'
|   `-IfStmt 0x1c006057740 <line:952:5, line:953:17>
|     |-BinaryOperator 0x1c0060576d0 <line:952:9, col:18> 'int' '=='
|     | |-ImplicitCastExpr 0x1c0060576a0 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|     | | `-DeclRefExpr 0x1c006057658 <col:9> 'size_t':'unsigned long long' lvalue Var 0x1c00604f160 'iplen' 'size_t':'unsigned long long'
|     | `-ImplicitCastExpr 0x1c0060576b8 <col:18> 'unsigned long long' <IntegralCast>
|     |   `-IntegerLiteral 0x1c006057678 <col:18> 'int' 0
|     `-ReturnStmt 0x1c006057730 <line:953:9, col:17>
|       `-UnaryOperator 0x1c006057718 <col:16, col:17> 'int' prefix '-'
|         `-IntegerLiteral 0x1c0060576f0 <col:17> 'int' 2
|-FunctionDecl 0x1c0060579e0 <line:962:1, line:983:1> line:962:20 invalid a2i_IPADDRESS 'int *(const char *)'
| |-ParmVarDecl 0x1c006057900 <col:34, col:46> col:46 used ipasc 'const char *'
| `-CompoundStmt 0x1c006050428 <line:963:1, line:983:1>
|   |-DeclStmt 0x1c006057b70 <line:964:5, col:28>
|   | `-VarDecl 0x1c006057b08 <col:5, col:27> col:19 used ipout 'unsigned char [16]'
|   |-DeclStmt 0x1c006057c08 <line:966:5, col:14>
|   | `-VarDecl 0x1c006057ba0 <col:5, col:9> col:9 used iplen 'int'
|   |-BinaryOperator 0x1c006057d48 <line:970:5, col:35> 'int' '='
|   | |-DeclRefExpr 0x1c006057c20 <col:5> 'int' lvalue Var 0x1c006057ba0 'iplen' 'int'
|   | `-CallExpr 0x1c006057ce8 <col:13, col:35> 'int'
|   |   |-ImplicitCastExpr 0x1c006057cd0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1c006057c58 <col:13> 'int ()' Function 0x1c006057448 'a2i_ipadd' 'int ()'
|   |   |-ImplicitCastExpr 0x1c006057d18 <col:23> 'unsigned char *' <ArrayToPointerDecay>
|   |   | `-DeclRefExpr 0x1c006057c78 <col:23> 'unsigned char [16]' lvalue Var 0x1c006057b08 'ipout' 'unsigned char [16]'
|   |   `-ImplicitCastExpr 0x1c006057d30 <col:30> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1c006057cb0 <col:30> 'const char *' lvalue ParmVar 0x1c006057900 'ipasc' 'const char *'
|   |-IfStmt 0x1c006057e68 <line:972:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   | |-UnaryOperator 0x1c006057da0 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:972:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x1c006057d88 <col:10> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1c006057d68 <col:10> 'int' lvalue Var 0x1c006057ba0 'iplen' 'int'
|   | `-ReturnStmt 0x1c006057e58 <line:973:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |   `-ImplicitCastExpr 0x1c006057e40 <col:17, col:27> 'int *' <NullToPointer>
|   |     `-ParenExpr 0x1c006057e20 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1c006057df8 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1c006057db8 <col:26> 'int' 0
|   |-IfStmt 0x1c006058118 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:976:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   | |-OpaqueValueExpr 0x1c006058100 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1c0060580f0 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:977:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |   `-ImplicitCastExpr 0x1c0060580d8 <col:17, col:27> 'int *' <NullToPointer>
|   |     `-ParenExpr 0x1c0060580b8 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1c006058090 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1c006058050 <col:26> 'int' 0
|   `-IfStmt 0x1c006050410 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:978:5, line:981:5>
|     |-OpaqueValueExpr 0x1c0060503f8 <<invalid sloc>> '_Bool'
|     `-CompoundStmt 0x1c0060503e0 <line:978:52, line:981:5>
|       `-ReturnStmt 0x1c0060503d0 <line:980:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|         `-ImplicitCastExpr 0x1c0060503b8 <col:17, col:27> 'int *' <NullToPointer>
|           `-ParenExpr 0x1c006050398 <col:17, col:27> 'void *'
|             `-CStyleCastExpr 0x1c006050370 <col:18, col:26> 'void *' <NullToPointer>
|               `-IntegerLiteral 0x1c006050330 <col:26> 'int' 0
|-FunctionDecl 0x1c006050530 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:985:1, line:1025:1> line:985:20 invalid a2i_IPADDRESS_NC 'int *(const char *)'
| |-ParmVarDecl 0x1c006050480 <col:37, col:49> col:49 used ipasc 'const char *'
| `-CompoundStmt 0x1c006056d98 <line:986:1, line:1025:1>
|   |-DeclStmt 0x1c006050788 <line:988:5, col:28>
|   | `-VarDecl 0x1c006050720 <col:5, col:27> col:19 used ipout 'unsigned char [32]'
|   |-DeclStmt 0x1c006050958 <line:989:5, col:27>
|   | |-VarDecl 0x1c0060507b8 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/before\crypto\x509v3\v3_utl.c:989:11 used iptmp 'char *' cinit
|   | | `-ImplicitCastExpr 0x1c0060508a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   | |   `-ParenExpr 0x1c006050888 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1c006050860 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1c006050820 <col:26> 'int' 0
|   | `-VarDecl 0x1c0060508d8 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:989:5, col:26> col:26 used p 'char *'
|   |-DeclStmt 0x1c006050a88 <line:990:5, col:23>
|   | |-VarDecl 0x1c006050988 <col:5, col:9> col:9 used iplen1 'int'
|   | `-VarDecl 0x1c006050a08 <col:5, col:17> col:17 used iplen2 'int'
|   |-BinaryOperator 0x1c006050da8 <line:991:5, col:26> 'char *' '='
|   | |-DeclRefExpr 0x1c006050aa0 <col:5> 'char *' lvalue Var 0x1c0060508d8 'p' 'char *'
|   | `-CallExpr 0x1c006050d60 <col:9, col:26> 'char *'
|   |   |-ImplicitCastExpr 0x1c006050d48 <col:9> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1c006050c98 <col:9> 'char *(const char *, int)' Function 0x1c006050b18 'strchr' 'char *(const char *, int)'
|   |   |-ImplicitCastExpr 0x1c006050d90 <col:16> 'const char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1c006050cd0 <col:16> 'const char *' lvalue ParmVar 0x1c006050480 'ipasc' 'const char *'
|   |   `-CharacterLiteral 0x1c006050cf0 <col:23> 'int' 47
|   |-IfStmt 0x1c006050ec8 <line:992:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   | |-UnaryOperator 0x1c006050e00 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:992:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x1c006050de8 <col:10> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1c006050dc8 <col:10> 'char *' lvalue Var 0x1c0060508d8 'p' 'char *'
|   | `-ReturnStmt 0x1c006050eb8 <line:993:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |   `-ImplicitCastExpr 0x1c006050ea0 <col:17, col:27> 'int *' <NullToPointer>
|   |     `-ParenExpr 0x1c006050e80 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1c006050e58 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1c006050e18 <col:26> 'int' 0
|   |-BinaryOperator 0x1c006050fc8 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:994:5, col:33> 'char *' '='
|   | |-DeclRefExpr 0x1c006050ee0 <col:5> 'char *' lvalue Var 0x1c0060507b8 'iptmp' 'char *'
|   | `-ImplicitCastExpr 0x1c006050fb0 <col:13, col:33> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x1c006050f70 <col:13, col:33> 'int'
|   |     |-ImplicitCastExpr 0x1c006050f58 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1c006050f18 <col:13> 'int ()' Function 0x1c0060344d0 'OPENSSL_strdup' 'int ()'
|   |     `-ImplicitCastExpr 0x1c006050f98 <col:28> 'const char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1c006050f38 <col:28> 'const char *' lvalue ParmVar 0x1c006050480 'ipasc' 'const char *'
|   |-IfStmt 0x1c0060510e8 <line:995:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   | |-UnaryOperator 0x1c006051020 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:995:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x1c006051008 <col:10> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1c006050fe8 <col:10> 'char *' lvalue Var 0x1c0060507b8 'iptmp' 'char *'
|   | `-ReturnStmt 0x1c0060510d8 <line:996:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |   `-ImplicitCastExpr 0x1c0060510c0 <col:17, col:27> 'int *' <NullToPointer>
|   |     `-ParenExpr 0x1c0060510a0 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1c006051078 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1c006051038 <col:26> 'int' 0
|   |-BinaryOperator 0x1c006051228 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:997:5, col:27> 'char *' '='
|   | |-DeclRefExpr 0x1c006051100 <col:5> 'char *' lvalue Var 0x1c0060508d8 'p' 'char *'
|   | `-BinaryOperator 0x1c006051208 <col:9, col:27> 'char *' '+'
|   |   |-ImplicitCastExpr 0x1c0060511f0 <col:9> 'char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1c006051120 <col:9> 'char *' lvalue Var 0x1c0060507b8 'iptmp' 'char *'
|   |   `-ParenExpr 0x1c0060511d0 <col:17, col:27> 'long long'
|   |     `-BinaryOperator 0x1c0060511b0 <col:18, col:22> 'long long' '-'
|   |       |-ImplicitCastExpr 0x1c006051180 <col:18> 'char *' <LValueToRValue>
|   |       | `-DeclRefExpr 0x1c006051140 <col:18> 'char *' lvalue Var 0x1c0060508d8 'p' 'char *'
|   |       `-ImplicitCastExpr 0x1c006051198 <col:22> 'const char *' <LValueToRValue>
|   |         `-DeclRefExpr 0x1c006051160 <col:22> 'const char *' lvalue ParmVar 0x1c006050480 'ipasc' 'const char *'
|   |-BinaryOperator 0x1c0060512d8 <line:998:5, col:12> 'char' '='
|   | |-UnaryOperator 0x1c006051280 <col:5, col:7> 'char' lvalue prefix '*' cannot overflow
|   | | `-UnaryOperator 0x1c006051268 <col:6, col:7> 'char *' postfix '++'
|   | |   `-DeclRefExpr 0x1c006051248 <col:6> 'char *' lvalue Var 0x1c0060508d8 'p' 'char *'
|   | `-ImplicitCastExpr 0x1c0060512c0 <col:12> 'char' <IntegralCast>
|   |   `-IntegerLiteral 0x1c006051298 <col:12> 'int' 0
|   |-BinaryOperator 0x1c006056498 <line:1000:5, col:36> 'int' '='
|   | |-DeclRefExpr 0x1c006056370 <col:5> 'int' lvalue Var 0x1c006050988 'iplen1' 'int'
|   | `-CallExpr 0x1c006056438 <col:14, col:36> 'int'
|   |   |-ImplicitCastExpr 0x1c006056420 <col:14> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1c0060563a8 <col:14> 'int ()' Function 0x1c006057448 'a2i_ipadd' 'int ()'
|   |   |-ImplicitCastExpr 0x1c006056468 <col:24> 'unsigned char *' <ArrayToPointerDecay>
|   |   | `-DeclRefExpr 0x1c0060563c8 <col:24> 'unsigned char [32]' lvalue Var 0x1c006050720 'ipout' 'unsigned char [32]'
|   |   `-ImplicitCastExpr 0x1c006056480 <col:31> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1c006056400 <col:31> 'char *' lvalue Var 0x1c0060507b8 'iptmp' 'char *'
|   |-IfStmt 0x1c006056570 <line:1002:5, line:1003:14>
|   | |-UnaryOperator 0x1c0060564f0 <line:1002:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x1c0060564d8 <col:10> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1c0060564b8 <col:10> 'int' lvalue Var 0x1c006050988 'iplen1' 'int'
|   | `-GotoStmt 0x1c006056558 <line:1003:9, col:14> 'err' 0x1c006056508
|   |-BinaryOperator 0x1c0060566f0 <line:1005:5, col:41> 'int' '='
|   | |-DeclRefExpr 0x1c006056588 <col:5> 'int' lvalue Var 0x1c006050a08 'iplen2' 'int'
|   | `-CallExpr 0x1c0060566a8 <col:14, col:41> 'int'
|   |   |-ImplicitCastExpr 0x1c006056690 <col:14> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1c0060565c0 <col:14> 'int ()' Function 0x1c006057448 'a2i_ipadd' 'int ()'
|   |   |-BinaryOperator 0x1c006056650 <col:24, col:32> 'unsigned char *' '+'
|   |   | |-ImplicitCastExpr 0x1c006056620 <col:24> 'unsigned char *' <ArrayToPointerDecay>
|   |   | | `-DeclRefExpr 0x1c0060565e0 <col:24> 'unsigned char [32]' lvalue Var 0x1c006050720 'ipout' 'unsigned char [32]'
|   |   | `-ImplicitCastExpr 0x1c006056638 <col:32> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1c006056600 <col:32> 'int' lvalue Var 0x1c006050988 'iplen1' 'int'
|   |   `-ImplicitCastExpr 0x1c0060566d8 <col:40> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1c006056670 <col:40> 'char *' lvalue Var 0x1c0060508d8 'p' 'char *'
|   |-CallExpr 0x1c006056768 <line:1007:5, col:23> 'int'
|   | |-ImplicitCastExpr 0x1c006056750 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1c006056710 <col:5> 'int ()' Function 0x1c0060374d0 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x1c006056790 <col:18> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1c006056730 <col:18> 'char *' lvalue Var 0x1c0060507b8 'iptmp' 'char *'
|   |-BinaryOperator 0x1c006056868 <line:1008:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'char *' '='
|   | |-DeclRefExpr 0x1c0060567a8 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:1008:5> 'char *' lvalue Var 0x1c0060507b8 'iptmp' 'char *'
|   | `-ImplicitCastExpr 0x1c006056850 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   |   `-ParenExpr 0x1c006056830 <col:17, col:27> 'void *'
|   |     `-CStyleCastExpr 0x1c006056808 <col:18, col:26> 'void *' <NullToPointer>
|   |       `-IntegerLiteral 0x1c0060567c8 <col:26> 'int' 0
|   |-IfStmt 0x1c0060569c0 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:1010:5, line:1011:14>
|   | |-BinaryOperator 0x1c006056988 <line:1010:9, col:37> 'int' '||'
|   | | |-UnaryOperator 0x1c0060568c0 <col:9, col:10> 'int' prefix '!' cannot overflow
|   | | | `-ImplicitCastExpr 0x1c0060568a8 <col:10> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1c006056888 <col:10> 'int' lvalue Var 0x1c006050a08 'iplen2' 'int'
|   | | `-ParenExpr 0x1c006056968 <col:20, col:37> 'int'
|   | |   `-BinaryOperator 0x1c006056948 <col:21, col:31> 'int' '!='
|   | |     |-ImplicitCastExpr 0x1c006056918 <col:21> 'int' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x1c0060568d8 <col:21> 'int' lvalue Var 0x1c006050988 'iplen1' 'int'
|   | |     `-ImplicitCastExpr 0x1c006056930 <col:31> 'int' <LValueToRValue>
|   | |       `-DeclRefExpr 0x1c0060568f8 <col:31> 'int' lvalue Var 0x1c006050a08 'iplen2' 'int'
|   | `-GotoStmt 0x1c0060569a8 <line:1011:9, col:14> 'err' 0x1c006056508
|   |-IfStmt 0x1c006056ae8 <line:1014:5, line:1015:14>
|   | |-OpaqueValueExpr 0x1c006056ad0 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1c006056ab8 <col:9, col:14> 'err' 0x1c006056508
|   |-IfStmt 0x1c006056c00 <line:1016:5, line:1017:14>
|   | |-OpaqueValueExpr 0x1c006056be8 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1c006056bd0 <col:9, col:14> 'err' 0x1c006056508
|   |-LabelStmt 0x1c006056cb0 <line:1021:2, line:1022:23> 'err'
|   | `-CallExpr 0x1c006056c70 <col:5, col:23> 'int'
|   |   |-ImplicitCastExpr 0x1c006056c58 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1c006056c18 <col:5> 'int ()' Function 0x1c0060374d0 'OPENSSL_free' 'int ()'
|   |   `-ImplicitCastExpr 0x1c006056c98 <col:18> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1c006056c38 <col:18> 'char *' lvalue Var 0x1c0060507b8 'iptmp' 'char *'
|   `-ReturnStmt 0x1c006056d88 <line:1024:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|     `-ImplicitCastExpr 0x1c006056d70 <col:17, col:27> 'int *' <NullToPointer>
|       `-ParenExpr 0x1c006056d50 <col:17, col:27> 'void *'
|         `-CStyleCastExpr 0x1c006056d28 <col:18, col:26> 'void *' <NullToPointer>
|           `-IntegerLiteral 0x1c006056ce8 <col:26> 'int' 0
|-FunctionDecl 0x1c006050b18 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:991:9> col:9 implicit used strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x1c006050bb8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1c006050c20 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1c006056fa8 prev 0x1c006057448 <line:1027:1, line:1040:1> line:1027:5 used a2i_ipadd 'int (unsigned char *, const char *)'
| |-ParmVarDecl 0x1c006056e58 <col:15, col:30> col:30 used ipout 'unsigned char *'
| |-ParmVarDecl 0x1c006056ed8 <col:37, col:49> col:49 used ipasc 'const char *'
| `-CompoundStmt 0x1c006051468 <line:1028:1, line:1040:1>
|   `-IfStmt 0x1c006051440 <line:1031:5, line:1039:5> has_else
|     |-CallExpr 0x1c0060570e0 <line:1031:9, col:26> 'char *'
|     | |-ImplicitCastExpr 0x1c0060570c8 <col:9> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|     | | `-DeclRefExpr 0x1c006057058 <col:9> 'char *(const char *, int)' Function 0x1c006050b18 'strchr' 'char *(const char *, int)'
|     | |-ImplicitCastExpr 0x1c006057110 <col:16> 'const char *' <LValueToRValue>
|     | | `-DeclRefExpr 0x1c006057078 <col:16> 'const char *' lvalue ParmVar 0x1c006056ed8 'ipasc' 'const char *'
|     | `-CharacterLiteral 0x1c006057098 <col:23> 'int' 58
|     |-CompoundStmt 0x1c0060572d0 <col:29, line:1035:5>
|     | |-IfStmt 0x1c006057280 <line:1032:9, line:1033:20>
|     | | |-UnaryOperator 0x1c006057230 <line:1032:13, col:40> 'int' prefix '!' cannot overflow
|     | | | `-CallExpr 0x1c0060571d0 <col:14, col:40> 'int'
|     | | |   |-ImplicitCastExpr 0x1c0060571b8 <col:14> 'int (*)(unsigned char *, const char *)' <FunctionToPointerDecay>
|     | | |   | `-DeclRefExpr 0x1c006057128 <col:14> 'int (unsigned char *, const char *)' Function 0x1c00602c580 'ipv6_from_asc' 'int (unsigned char *, const char *)'
|     | | |   |-ImplicitCastExpr 0x1c006057200 <col:28> 'unsigned char *' <LValueToRValue>
|     | | |   | `-DeclRefExpr 0x1c006057148 <col:28> 'unsigned char *' lvalue ParmVar 0x1c006056e58 'ipout' 'unsigned char *'
|     | | |   `-ImplicitCastExpr 0x1c006057218 <col:35> 'const char *' <LValueToRValue>
|     | | |     `-DeclRefExpr 0x1c006057168 <col:35> 'const char *' lvalue ParmVar 0x1c006056ed8 'ipasc' 'const char *'
|     | | `-ReturnStmt 0x1c006057270 <line:1033:13, col:20>
|     | |   `-IntegerLiteral 0x1c006057248 <col:20> 'int' 0
|     | `-ReturnStmt 0x1c0060572c0 <line:1034:9, col:16>
|     |   `-IntegerLiteral 0x1c006057298 <col:16> 'int' 16
|     `-CompoundStmt 0x1c006051420 <line:1035:12, line:1039:5>
|       |-IfStmt 0x1c0060513d0 <line:1036:9, line:1037:20>
|       | |-UnaryOperator 0x1c006051380 <line:1036:13, col:40> 'int' prefix '!' cannot overflow
|       | | `-CallExpr 0x1c006051320 <col:14, col:40> 'int'
|       | |   |-ImplicitCastExpr 0x1c006057350 <col:14> 'int (*)(unsigned char *, const char *)' <FunctionToPointerDecay>
|       | |   | `-DeclRefExpr 0x1c0060572f0 <col:14> 'int (unsigned char *, const char *)' Function 0x1c00602c350 'ipv4_from_asc' 'int (unsigned char *, const char *)'
|       | |   |-ImplicitCastExpr 0x1c006051350 <col:28> 'unsigned char *' <LValueToRValue>
|       | |   | `-DeclRefExpr 0x1c006057310 <col:28> 'unsigned char *' lvalue ParmVar 0x1c006056e58 'ipout' 'unsigned char *'
|       | |   `-ImplicitCastExpr 0x1c006051368 <col:35> 'const char *' <LValueToRValue>
|       | |     `-DeclRefExpr 0x1c006057330 <col:35> 'const char *' lvalue ParmVar 0x1c006056ed8 'ipasc' 'const char *'
|       | `-ReturnStmt 0x1c0060513c0 <line:1037:13, col:20>
|       |   `-IntegerLiteral 0x1c006051398 <col:20> 'int' 0
|       `-ReturnStmt 0x1c006051410 <line:1038:9, col:16>
|         `-IntegerLiteral 0x1c0060513e8 <col:16> 'int' 4
|-FunctionDecl 0x1c0060515e8 prev 0x1c00602c350 <line:1042:1, line:1055:1> line:1042:12 used ipv4_from_asc 'int (unsigned char *, const char *)' static
| |-ParmVarDecl 0x1c006051498 <col:26, col:41> col:41 used v4 'unsigned char *'
| |-ParmVarDecl 0x1c006051518 <col:45, col:57> col:57 used in 'const char *'
| `-CompoundStmt 0x1c006059738 <line:1043:1, line:1055:1>
|   |-DeclStmt 0x1c0060518c0 <line:1044:5, col:23>
|   | |-VarDecl 0x1c0060516b0 <col:5, col:9> col:9 used a0 'int'
|   | |-VarDecl 0x1c006051730 <col:5, col:13> col:13 used a1 'int'
|   | |-VarDecl 0x1c0060517b0 <col:5, col:17> col:17 used a2 'int'
|   | `-VarDecl 0x1c006051830 <col:5, col:21> col:21 used a3 'int'
|   |-IfStmt 0x1c006051c78 <line:1045:5, line:1046:16>
|   | |-BinaryOperator 0x1c006051c20 <line:1045:9, col:58> 'int' '!='
|   | | |-CallExpr 0x1c006051b60 <col:9, col:53> 'int'
|   | | | |-ImplicitCastExpr 0x1c006051b48 <col:9> 'int (*)(const char *restrict, const char *restrict, ...)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x1c0060518d8 <col:9> 'int (const char *restrict, const char *restrict, ...)' Function 0x1c005fdf708 'sscanf' 'int (const char *restrict, const char *restrict, ...)'
|   | | | |-ImplicitCastExpr 0x1c006051bb0 <col:16> 'const char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1c0060518f8 <col:16> 'const char *' lvalue ParmVar 0x1c006051518 'in' 'const char *'
|   | | | |-ImplicitCastExpr 0x1c006051be0 <col:20> 'const char *' <NoOp>
|   | | | | `-ImplicitCastExpr 0x1c006051bc8 <col:20> 'char *' <ArrayToPointerDecay>
|   | | | |   `-StringLiteral 0x1c006051958 <col:20> 'char [12]' lvalue "%d.%d.%d.%d"
|   | | | |-UnaryOperator 0x1c0060519b8 <col:35, col:36> 'int *' prefix '&' cannot overflow
|   | | | | `-DeclRefExpr 0x1c006051980 <col:36> 'int' lvalue Var 0x1c0060516b0 'a0' 'int'
|   | | | |-UnaryOperator 0x1c006051a08 <col:40, col:41> 'int *' prefix '&' cannot overflow
|   | | | | `-DeclRefExpr 0x1c0060519d0 <col:41> 'int' lvalue Var 0x1c006051730 'a1' 'int'
|   | | | |-UnaryOperator 0x1c006051a58 <col:45, col:46> 'int *' prefix '&' cannot overflow
|   | | | | `-DeclRefExpr 0x1c006051a20 <col:46> 'int' lvalue Var 0x1c0060517b0 'a2' 'int'
|   | | | `-UnaryOperator 0x1c006051aa8 <col:50, col:51> 'int *' prefix '&' cannot overflow
|   | | |   `-DeclRefExpr 0x1c006051a70 <col:51> 'int' lvalue Var 0x1c006051830 'a3' 'int'
|   | | `-IntegerLiteral 0x1c006051bf8 <col:58> 'int' 4
|   | `-ReturnStmt 0x1c006051c68 <line:1046:9, col:16>
|   |   `-IntegerLiteral 0x1c006051c40 <col:16> 'int' 0
|   |-IfStmt 0x1c0060522a8 <line:1047:5, line:1049:16>
|   | |-BinaryOperator 0x1c006052250 <line:1047:9, line:1048:59> 'int' '||'
|   | | |-BinaryOperator 0x1c006052190 <line:1047:9, line:1048:45> 'int' '||'
|   | | | |-BinaryOperator 0x1c0060520d0 <line:1047:9, line:1048:33> 'int' '||'
|   | | | | |-BinaryOperator 0x1c006052010 <line:1047:9, line:1048:19> 'int' '||'
|   | | | | | |-BinaryOperator 0x1c006051f50 <line:1047:9, col:56> 'int' '||'
|   | | | | | | |-BinaryOperator 0x1c006051e90 <col:9, col:42> 'int' '||'
|   | | | | | | | |-BinaryOperator 0x1c006051dd0 <col:9, col:30> 'int' '||'
|   | | | | | | | | |-ParenExpr 0x1c006051d10 <col:9, col:16> 'int'
|   | | | | | | | | | `-BinaryOperator 0x1c006051cf0 <col:10, col:15> 'int' '<'
|   | | | | | | | | |   |-ImplicitCastExpr 0x1c006051cd8 <col:10> 'int' <LValueToRValue>
|   | | | | | | | | |   | `-DeclRefExpr 0x1c006051c90 <col:10> 'int' lvalue Var 0x1c0060516b0 'a0' 'int'
|   | | | | | | | | |   `-IntegerLiteral 0x1c006051cb0 <col:15> 'int' 0
|   | | | | | | | | `-ParenExpr 0x1c006051db0 <col:21, col:30> 'int'
|   | | | | | | | |   `-BinaryOperator 0x1c006051d90 <col:22, col:27> 'int' '>'
|   | | | | | | | |     |-ImplicitCastExpr 0x1c006051d78 <col:22> 'int' <LValueToRValue>
|   | | | | | | | |     | `-DeclRefExpr 0x1c006051d30 <col:22> 'int' lvalue Var 0x1c0060516b0 'a0' 'int'
|   | | | | | | | |     `-IntegerLiteral 0x1c006051d50 <col:27> 'int' 255
|   | | | | | | | `-ParenExpr 0x1c006051e70 <col:35, col:42> 'int'
|   | | | | | | |   `-BinaryOperator 0x1c006051e50 <col:36, col:41> 'int' '<'
|   | | | | | | |     |-ImplicitCastExpr 0x1c006051e38 <col:36> 'int' <LValueToRValue>
|   | | | | | | |     | `-DeclRefExpr 0x1c006051df0 <col:36> 'int' lvalue Var 0x1c006051730 'a1' 'int'
|   | | | | | | |     `-IntegerLiteral 0x1c006051e10 <col:41> 'int' 0
|   | | | | | | `-ParenExpr 0x1c006051f30 <col:47, col:56> 'int'
|   | | | | | |   `-BinaryOperator 0x1c006051f10 <col:48, col:53> 'int' '>'
|   | | | | | |     |-ImplicitCastExpr 0x1c006051ef8 <col:48> 'int' <LValueToRValue>
|   | | | | | |     | `-DeclRefExpr 0x1c006051eb0 <col:48> 'int' lvalue Var 0x1c006051730 'a1' 'int'
|   | | | | | |     `-IntegerLiteral 0x1c006051ed0 <col:53> 'int' 255
|   | | | | | `-ParenExpr 0x1c006051ff0 <line:1048:12, col:19> 'int'
|   | | | | |   `-BinaryOperator 0x1c006051fd0 <col:13, col:18> 'int' '<'
|   | | | | |     |-ImplicitCastExpr 0x1c006051fb8 <col:13> 'int' <LValueToRValue>
|   | | | | |     | `-DeclRefExpr 0x1c006051f70 <col:13> 'int' lvalue Var 0x1c0060517b0 'a2' 'int'
|   | | | | |     `-IntegerLiteral 0x1c006051f90 <col:18> 'int' 0
|   | | | | `-ParenExpr 0x1c0060520b0 <col:24, col:33> 'int'
|   | | | |   `-BinaryOperator 0x1c006052090 <col:25, col:30> 'int' '>'
|   | | | |     |-ImplicitCastExpr 0x1c006052078 <col:25> 'int' <LValueToRValue>
|   | | | |     | `-DeclRefExpr 0x1c006052030 <col:25> 'int' lvalue Var 0x1c0060517b0 'a2' 'int'
|   | | | |     `-IntegerLiteral 0x1c006052050 <col:30> 'int' 255
|   | | | `-ParenExpr 0x1c006052170 <col:38, col:45> 'int'
|   | | |   `-BinaryOperator 0x1c006052150 <col:39, col:44> 'int' '<'
|   | | |     |-ImplicitCastExpr 0x1c006052138 <col:39> 'int' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x1c0060520f0 <col:39> 'int' lvalue Var 0x1c006051830 'a3' 'int'
|   | | |     `-IntegerLiteral 0x1c006052110 <col:44> 'int' 0
|   | | `-ParenExpr 0x1c006052230 <col:50, col:59> 'int'
|   | |   `-BinaryOperator 0x1c006052210 <col:51, col:56> 'int' '>'
|   | |     |-ImplicitCastExpr 0x1c0060521f8 <col:51> 'int' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x1c0060521b0 <col:51> 'int' lvalue Var 0x1c006051830 'a3' 'int'
|   | |     `-IntegerLiteral 0x1c0060521d0 <col:56> 'int' 255
|   | `-ReturnStmt 0x1c006052298 <line:1049:9, col:16>
|   |   `-IntegerLiteral 0x1c006052270 <col:16> 'int' 0
|   |-BinaryOperator 0x1c006059410 <line:1050:5, col:13> 'unsigned char' '='
|   | |-ArraySubscriptExpr 0x1c0060593a0 <col:5, col:9> 'unsigned char' lvalue
|   | | |-ImplicitCastExpr 0x1c006052308 <col:5> 'unsigned char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1c0060522c0 <col:5> 'unsigned char *' lvalue ParmVar 0x1c006051498 'v4' 'unsigned char *'
|   | | `-IntegerLiteral 0x1c0060522e0 <col:8> 'int' 0
|   | `-ImplicitCastExpr 0x1c0060593f8 <col:13> 'unsigned char' <IntegralCast>
|   |   `-ImplicitCastExpr 0x1c0060593e0 <col:13> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x1c0060593c0 <col:13> 'int' lvalue Var 0x1c0060516b0 'a0' 'int'
|   |-BinaryOperator 0x1c006059500 <line:1051:5, col:13> 'unsigned char' '='
|   | |-ArraySubscriptExpr 0x1c006059490 <col:5, col:9> 'unsigned char' lvalue
|   | | |-ImplicitCastExpr 0x1c006059478 <col:5> 'unsigned char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1c006059430 <col:5> 'unsigned char *' lvalue ParmVar 0x1c006051498 'v4' 'unsigned char *'
|   | | `-IntegerLiteral 0x1c006059450 <col:8> 'int' 1
|   | `-ImplicitCastExpr 0x1c0060594e8 <col:13> 'unsigned char' <IntegralCast>
|   |   `-ImplicitCastExpr 0x1c0060594d0 <col:13> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x1c0060594b0 <col:13> 'int' lvalue Var 0x1c006051730 'a1' 'int'
|   |-BinaryOperator 0x1c0060595f0 <line:1052:5, col:13> 'unsigned char' '='
|   | |-ArraySubscriptExpr 0x1c006059580 <col:5, col:9> 'unsigned char' lvalue
|   | | |-ImplicitCastExpr 0x1c006059568 <col:5> 'unsigned char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1c006059520 <col:5> 'unsigned char *' lvalue ParmVar 0x1c006051498 'v4' 'unsigned char *'
|   | | `-IntegerLiteral 0x1c006059540 <col:8> 'int' 2
|   | `-ImplicitCastExpr 0x1c0060595d8 <col:13> 'unsigned char' <IntegralCast>
|   |   `-ImplicitCastExpr 0x1c0060595c0 <col:13> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x1c0060595a0 <col:13> 'int' lvalue Var 0x1c0060517b0 'a2' 'int'
|   |-BinaryOperator 0x1c0060596e0 <line:1053:5, col:13> 'unsigned char' '='
|   | |-ArraySubscriptExpr 0x1c006059670 <col:5, col:9> 'unsigned char' lvalue
|   | | |-ImplicitCastExpr 0x1c006059658 <col:5> 'unsigned char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1c006059610 <col:5> 'unsigned char *' lvalue ParmVar 0x1c006051498 'v4' 'unsigned char *'
|   | | `-IntegerLiteral 0x1c006059630 <col:8> 'int' 3
|   | `-ImplicitCastExpr 0x1c0060596c8 <col:13> 'unsigned char' <IntegralCast>
|   |   `-ImplicitCastExpr 0x1c0060596b0 <col:13> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x1c006059690 <col:13> 'int' lvalue Var 0x1c006051830 'a3' 'int'
|   `-ReturnStmt 0x1c006059728 <line:1054:5, col:12>
|     `-IntegerLiteral 0x1c006059700 <col:12> 'int' 1
|-RecordDecl 0x1c006059788 <line:1057:9, line:1066:1> line:1057:9 struct definition
| |-FieldDecl 0x1c0060598a8 <line:1059:5, col:25> col:19 referenced tmp 'unsigned char [16]'
| |-FieldDecl 0x1c006059918 <line:1061:5, col:9> col:9 referenced total 'int'
| |-FieldDecl 0x1c006059988 <line:1063:5, col:9> col:9 referenced zero_pos 'int'
| `-FieldDecl 0x1c0060599f8 <line:1065:5, col:9> col:9 referenced zero_cnt 'int'
|-TypedefDecl 0x1c006059aa8 <line:1057:1, line:1066:3> col:3 referenced IPV6_STAT 'struct IPV6_STAT':'IPV6_STAT'
| `-ElaboratedType 0x1c006059a50 'struct IPV6_STAT' sugar
|   `-RecordType 0x1c006059820 'IPV6_STAT'
|     `-Record 0x1c006059788 ''
|-FunctionDecl 0x1c006059c80 prev 0x1c00602c580 <line:1068:1, line:1130:1> line:1068:12 used ipv6_from_asc 'int (unsigned char *, const char *)' static
| |-ParmVarDecl 0x1c006059b30 <col:26, col:41> col:41 used v6 'unsigned char *'
| |-ParmVarDecl 0x1c006059bb0 <col:45, col:57> col:57 used in 'const char *'
| `-CompoundStmt 0x1c00605b0d0 <line:1069:1, line:1130:1>
|   |-DeclStmt 0x1c006059dc8 <line:1070:5, col:21>
|   | `-VarDecl 0x1c006059d60 <col:5, col:15> col:15 used v6stat 'IPV6_STAT':'IPV6_STAT'
|   |-BinaryOperator 0x1c006059e70 <line:1071:5, col:20> 'int' '='
|   | |-MemberExpr 0x1c006059e18 <col:5, col:12> 'int' lvalue .total 0x1c006059918
|   | | `-DeclRefExpr 0x1c006059de0 <col:5> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x1c006059d60 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   | `-IntegerLiteral 0x1c006059e48 <col:20> 'int' 0
|   |-BinaryOperator 0x1c006059f88 <line:1072:5, col:24> 'int' '='
|   | |-MemberExpr 0x1c006059f18 <col:5, col:12> 'int' lvalue .zero_pos 0x1c006059988
|   | | `-DeclRefExpr 0x1c006059ef8 <col:5> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x1c006059d60 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   | `-UnaryOperator 0x1c006059f70 <col:23, col:24> 'int' prefix '-'
|   |   `-IntegerLiteral 0x1c006059f48 <col:24> 'int' 1
|   |-BinaryOperator 0x1c00605a020 <line:1073:5, col:23> 'int' '='
|   | |-MemberExpr 0x1c006059fc8 <col:5, col:12> 'int' lvalue .zero_cnt 0x1c0060599f8
|   | | `-DeclRefExpr 0x1c006059fa8 <col:5> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x1c006059d60 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   | `-IntegerLiteral 0x1c006059ff8 <col:23> 'int' 0
|   |-IfStmt 0x1c00605a370 <line:1079:5, line:1080:16>
|   | |-UnaryOperator 0x1c00605a320 <line:1079:9, col:54> 'int' prefix '!' cannot overflow
|   | | `-CallExpr 0x1c00605a278 <col:10, col:54> 'int'
|   | |   |-ImplicitCastExpr 0x1c00605a260 <col:10> 'int (*)()' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x1c00605a130 <col:10> 'int ()' Function 0x1c00605a068 'CONF_parse_list' 'int ()'
|   | |   |-ImplicitCastExpr 0x1c00605a2c0 <col:26> 'const char *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x1c00605a150 <col:26> 'const char *' lvalue ParmVar 0x1c006059bb0 'in' 'const char *'
|   | |   |-CharacterLiteral 0x1c00605a170 <col:30> 'int' 58
|   | |   |-IntegerLiteral 0x1c00605a188 <col:35> 'int' 0
|   | |   |-ImplicitCastExpr 0x1c00605a308 <col:38> 'int (*)(const char *, int, void *)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x1c00605a1b0 <col:38> 'int (const char *, int, void *)' Function 0x1c00602c890 'ipv6_cb' 'int (const char *, int, void *)'
|   | |   `-UnaryOperator 0x1c00605a248 <col:47, col:48> 'IPV6_STAT *' prefix '&' cannot overflow
|   | |     `-DeclRefExpr 0x1c00605a1d0 <col:48> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x1c006059d60 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   | `-ReturnStmt 0x1c00605a360 <line:1080:9, col:16>
|   |   `-IntegerLiteral 0x1c00605a338 <col:16> 'int' 0
|   |-IfStmt 0x1c006052ed8 <line:1084:5, line:1112:5> has_else
|   | |-BinaryOperator 0x1c0060523d8 <line:1084:9, col:29> 'int' '=='
|   | | |-ImplicitCastExpr 0x1c0060523c0 <col:9, col:16> 'int' <LValueToRValue>
|   | | | `-MemberExpr 0x1c006052350 <col:9, col:16> 'int' lvalue .zero_pos 0x1c006059988
|   | | |   `-DeclRefExpr 0x1c006052330 <col:9> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x1c006059d60 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   | | `-UnaryOperator 0x1c0060523a8 <col:28, col:29> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x1c006052380 <col:29> 'int' 1
|   | |-CompoundStmt 0x1c0060524f8 <col:32, line:1088:5>
|   | | `-IfStmt 0x1c0060524e0 <line:1086:9, line:1087:20>
|   | |   |-BinaryOperator 0x1c006052488 <line:1086:13, col:29> 'int' '!='
|   | |   | |-ImplicitCastExpr 0x1c006052470 <col:13, col:20> 'int' <LValueToRValue>
|   | |   | | `-MemberExpr 0x1c006052418 <col:13, col:20> 'int' lvalue .total 0x1c006059918
|   | |   | |   `-DeclRefExpr 0x1c0060523f8 <col:13> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x1c006059d60 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   | |   | `-IntegerLiteral 0x1c006052448 <col:29> 'int' 16
|   | |   `-ReturnStmt 0x1c0060524d0 <line:1087:13, col:20>
|   | |     `-IntegerLiteral 0x1c0060524a8 <col:20> 'int' 0
|   | `-CompoundStmt 0x1c006052eb8 <line:1088:12, line:1112:5>
|   |   |-IfStmt 0x1c0060525f8 <line:1090:9, line:1091:20>
|   |   | |-BinaryOperator 0x1c0060525a0 <line:1090:13, col:29> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x1c006052588 <col:13, col:20> 'int' <LValueToRValue>
|   |   | | | `-MemberExpr 0x1c006052530 <col:13, col:20> 'int' lvalue .total 0x1c006059918
|   |   | | |   `-DeclRefExpr 0x1c006052510 <col:13> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x1c006059d60 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   |   | | `-IntegerLiteral 0x1c006052560 <col:29> 'int' 16
|   |   | `-ReturnStmt 0x1c0060525e8 <line:1091:13, col:20>
|   |   |   `-IntegerLiteral 0x1c0060525c0 <col:20> 'int' 0
|   |   `-IfStmt 0x1c006052e90 <line:1093:9, line:1111:9> has_else
|   |     |-BinaryOperator 0x1c0060526a0 <line:1093:13, col:31> 'int' '>'
|   |     | |-ImplicitCastExpr 0x1c006052688 <col:13, col:20> 'int' <LValueToRValue>
|   |     | | `-MemberExpr 0x1c006052630 <col:13, col:20> 'int' lvalue .zero_cnt 0x1c0060599f8
|   |     | |   `-DeclRefExpr 0x1c006052610 <col:13> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x1c006059d60 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   |     | `-IntegerLiteral 0x1c006052660 <col:31> 'int' 3
|   |     |-ReturnStmt 0x1c0060526e8 <line:1094:13, col:20>
|   |     | `-IntegerLiteral 0x1c0060526c0 <col:20> 'int' 0
|   |     `-IfStmt 0x1c006052e68 <line:1096:14, line:1111:9> has_else
|   |       |-BinaryOperator 0x1c006052788 <line:1096:18, col:37> 'int' '=='
|   |       | |-ImplicitCastExpr 0x1c006052770 <col:18, col:25> 'int' <LValueToRValue>
|   |       | | `-MemberExpr 0x1c006052718 <col:18, col:25> 'int' lvalue .zero_cnt 0x1c0060599f8
|   |       | |   `-DeclRefExpr 0x1c0060526f8 <col:18> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x1c006059d60 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   |       | `-IntegerLiteral 0x1c006052748 <col:37> 'int' 3
|   |       |-CompoundStmt 0x1c0060528a8 <col:40, line:1099:9>
|   |       | `-IfStmt 0x1c006052890 <line:1097:13, line:1098:24>
|   |       |   |-BinaryOperator 0x1c006052838 <line:1097:17, col:32> 'int' '>'
|   |       |   | |-ImplicitCastExpr 0x1c006052820 <col:17, col:24> 'int' <LValueToRValue>
|   |       |   | | `-MemberExpr 0x1c0060527c8 <col:17, col:24> 'int' lvalue .total 0x1c006059918
|   |       |   | |   `-DeclRefExpr 0x1c0060527a8 <col:17> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x1c006059d60 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   |       |   | `-IntegerLiteral 0x1c0060527f8 <col:32> 'int' 0
|   |       |   `-ReturnStmt 0x1c006052880 <line:1098:17, col:24>
|   |       |     `-IntegerLiteral 0x1c006052858 <col:24> 'int' 0
|   |       `-IfStmt 0x1c006052e40 <line:1101:14, line:1111:9> has_else
|   |         |-BinaryOperator 0x1c006052950 <line:1101:18, col:37> 'int' '=='
|   |         | |-ImplicitCastExpr 0x1c006052938 <col:18, col:25> 'int' <LValueToRValue>
|   |         | | `-MemberExpr 0x1c0060528e0 <col:18, col:25> 'int' lvalue .zero_cnt 0x1c0060599f8
|   |         | |   `-DeclRefExpr 0x1c0060528c0 <col:18> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x1c006059d60 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   |         | `-IntegerLiteral 0x1c006052910 <col:37> 'int' 2
|   |         |-CompoundStmt 0x1c006052bc0 <col:40, line:1105:9>
|   |         | `-IfStmt 0x1c006052ba8 <line:1102:13, line:1104:24>
|   |         |   |-BinaryOperator 0x1c006052b50 <line:1102:17, line:1103:52> 'int' '&&'
|   |         |   | |-ParenExpr 0x1c006052a20 <line:1102:17, col:38> 'int'
|   |         |   | | `-BinaryOperator 0x1c006052a00 <col:18, col:37> 'int' '!='
|   |         |   | |   |-ImplicitCastExpr 0x1c0060529e8 <col:18, col:25> 'int' <LValueToRValue>
|   |         |   | |   | `-MemberExpr 0x1c006052990 <col:18, col:25> 'int' lvalue .zero_pos 0x1c006059988
|   |         |   | |   |   `-DeclRefExpr 0x1c006052970 <col:18> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x1c006059d60 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   |         |   | |   `-IntegerLiteral 0x1c0060529c0 <col:37> 'int' 0
|   |         |   | `-ParenExpr 0x1c006052b30 <line:1103:20, col:52> 'int'
|   |         |   |   `-BinaryOperator 0x1c006052b10 <col:21, col:47> 'int' '!='
|   |         |   |     |-ImplicitCastExpr 0x1c006052ae0 <col:21, col:28> 'int' <LValueToRValue>
|   |         |   |     | `-MemberExpr 0x1c006052a60 <col:21, col:28> 'int' lvalue .zero_pos 0x1c006059988
|   |         |   |     |   `-DeclRefExpr 0x1c006052a40 <col:21> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x1c006059d60 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   |         |   |     `-ImplicitCastExpr 0x1c006052af8 <col:40, col:47> 'int' <LValueToRValue>
|   |         |   |       `-MemberExpr 0x1c006052ab0 <col:40, col:47> 'int' lvalue .total 0x1c006059918
|   |         |   |         `-DeclRefExpr 0x1c006052a90 <col:40> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x1c006059d60 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   |         |   `-ReturnStmt 0x1c006052b98 <line:1104:17, col:24>
|   |         |     `-IntegerLiteral 0x1c006052b70 <col:24> 'int' 0
|   |         `-CompoundStmt 0x1c006052e28 <line:1107:9, line:1111:9>
|   |           `-IfStmt 0x1c006052e10 <line:1108:13, line:1110:24>
|   |             |-BinaryOperator 0x1c006052db8 <line:1108:17, line:1109:52> 'int' '||'
|   |             | |-ParenExpr 0x1c006052c88 <line:1108:17, col:38> 'int'
|   |             | | `-BinaryOperator 0x1c006052c68 <col:18, col:37> 'int' '=='
|   |             | |   |-ImplicitCastExpr 0x1c006052c50 <col:18, col:25> 'int' <LValueToRValue>
|   |             | |   | `-MemberExpr 0x1c006052bf8 <col:18, col:25> 'int' lvalue .zero_pos 0x1c006059988
|   |             | |   |   `-DeclRefExpr 0x1c006052bd8 <col:18> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x1c006059d60 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   |             | |   `-IntegerLiteral 0x1c006052c28 <col:37> 'int' 0
|   |             | `-ParenExpr 0x1c006052d98 <line:1109:20, col:52> 'int'
|   |             |   `-BinaryOperator 0x1c006052d78 <col:21, col:47> 'int' '=='
|   |             |     |-ImplicitCastExpr 0x1c006052d48 <col:21, col:28> 'int' <LValueToRValue>
|   |             |     | `-MemberExpr 0x1c006052cc8 <col:21, col:28> 'int' lvalue .zero_pos 0x1c006059988
|   |             |     |   `-DeclRefExpr 0x1c006052ca8 <col:21> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x1c006059d60 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   |             |     `-ImplicitCastExpr 0x1c006052d60 <col:40, col:47> 'int' <LValueToRValue>
|   |             |       `-MemberExpr 0x1c006052d18 <col:40, col:47> 'int' lvalue .total 0x1c006059918
|   |             |         `-DeclRefExpr 0x1c006052cf8 <col:40> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x1c006059d60 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   |             `-ReturnStmt 0x1c006052e00 <line:1110:17, col:24>
|   |               `-IntegerLiteral 0x1c006052dd8 <col:24> 'int' 0
|   |-IfStmt 0x1c00605b070 <line:1116:5, line:1127:34> has_else
|   | |-BinaryOperator 0x1c006052f90 <line:1116:9, col:28> 'int' '>='
|   | | |-ImplicitCastExpr 0x1c006052f78 <col:9, col:16> 'int' <LValueToRValue>
|   | | | `-MemberExpr 0x1c006052f20 <col:9, col:16> 'int' lvalue .zero_pos 0x1c006059988
|   | | |   `-DeclRefExpr 0x1c006052f00 <col:9> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x1c006059d60 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   | | `-IntegerLiteral 0x1c006052f50 <col:28> 'int' 0
|   | |-CompoundStmt 0x1c00605ae98 <col:31, line:1126:5>
|   | | |-CallExpr 0x1c00605a3f0 <line:1118:9, col:47> 'void *'
|   | | | |-ImplicitCastExpr 0x1c00605a3d8 <col:9> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x1c0060531e0 <col:9> 'void *(void *, const void *, unsigned long long)' Function 0x1c006052ff0 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   | | | |-ImplicitCastExpr 0x1c00605a440 <col:16> 'void *' <BitCast>
|   | | | | `-ImplicitCastExpr 0x1c00605a428 <col:16> 'unsigned char *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x1c006053218 <col:16> 'unsigned char *' lvalue ParmVar 0x1c006059b30 'v6' 'unsigned char *'
|   | | | |-ImplicitCastExpr 0x1c00605a470 <col:20, col:27> 'const void *' <BitCast>
|   | | | | `-ImplicitCastExpr 0x1c00605a458 <col:20, col:27> 'unsigned char *' <ArrayToPointerDecay>
|   | | | |   `-MemberExpr 0x1c006053258 <col:20, col:27> 'unsigned char [16]' lvalue .tmp 0x1c0060598a8
|   | | | |     `-DeclRefExpr 0x1c006053238 <col:20> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x1c006059d60 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   | | | `-ImplicitCastExpr 0x1c00605a4a0 <col:32, col:39> 'unsigned long long' <IntegralCast>
|   | | |   `-ImplicitCastExpr 0x1c00605a488 <col:32, col:39> 'int' <LValueToRValue>
|   | | |     `-MemberExpr 0x1c0060532a8 <col:32, col:39> 'int' lvalue .zero_pos 0x1c006059988
|   | | |       `-DeclRefExpr 0x1c006053288 <col:32> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x1c006059d60 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   | | |-CallExpr 0x1c00605a900 <line:1120:9, col:58> 'void *'
|   | | | |-ImplicitCastExpr 0x1c00605a8e8 <col:9> 'void *(*)(void *, int, unsigned long long)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x1c00605a6f0 <col:9> 'void *(void *, int, unsigned long long)' Function 0x1c00605a500 'memset' 'void *(void *, int, unsigned long long)'
|   | | | |-ImplicitCastExpr 0x1c00605a938 <col:16, col:28> 'void *' <BitCast>
|   | | | | `-BinaryOperator 0x1c00605a7c8 <col:16, col:28> 'unsigned char *' '+'
|   | | | |   |-ImplicitCastExpr 0x1c00605a798 <col:16> 'unsigned char *' <LValueToRValue>
|   | | | |   | `-DeclRefExpr 0x1c00605a728 <col:16> 'unsigned char *' lvalue ParmVar 0x1c006059b30 'v6' 'unsigned char *'
|   | | | |   `-ImplicitCastExpr 0x1c00605a7b0 <col:21, col:28> 'int' <LValueToRValue>
|   | | | |     `-MemberExpr 0x1c00605a768 <col:21, col:28> 'int' lvalue .zero_pos 0x1c006059988
|   | | | |       `-DeclRefExpr 0x1c00605a748 <col:21> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x1c006059d60 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   | | | |-IntegerLiteral 0x1c00605a7e8 <col:38> 'int' 0
|   | | | `-ImplicitCastExpr 0x1c00605a950 <col:41, col:53> 'unsigned long long' <IntegralCast>
|   | | |   `-BinaryOperator 0x1c00605a8a0 <col:41, col:53> 'int' '-'
|   | | |     |-IntegerLiteral 0x1c00605a810 <col:41> 'int' 16
|   | | |     `-ImplicitCastExpr 0x1c00605a888 <col:46, col:53> 'int' <LValueToRValue>
|   | | |       `-MemberExpr 0x1c00605a858 <col:46, col:53> 'int' lvalue .total 0x1c006059918
|   | | |         `-DeclRefExpr 0x1c00605a838 <col:46> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x1c006059d60 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   | | `-IfStmt 0x1c00605ae80 <line:1122:9, line:1125:50>
|   | |   |-BinaryOperator 0x1c00605aa38 <line:1122:13, col:36> 'int' '!='
|   | |   | |-ImplicitCastExpr 0x1c00605aa08 <col:13, col:20> 'int' <LValueToRValue>
|   | |   | | `-MemberExpr 0x1c00605a988 <col:13, col:20> 'int' lvalue .total 0x1c006059918
|   | |   | |   `-DeclRefExpr 0x1c00605a968 <col:13> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x1c006059d60 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   | |   | `-ImplicitCastExpr 0x1c00605aa20 <col:29, col:36> 'int' <LValueToRValue>
|   | |   |   `-MemberExpr 0x1c00605a9d8 <col:29, col:36> 'int' lvalue .zero_pos 0x1c006059988
|   | |   |     `-DeclRefExpr 0x1c00605a9b8 <col:29> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x1c006059d60 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   | |   `-CallExpr 0x1c00605ae00 <line:1123:13, line:1125:50> 'void *'
|   | |     |-ImplicitCastExpr 0x1c00605ade8 <line:1123:13> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   | |     | `-DeclRefExpr 0x1c00605aa58 <col:13> 'void *(void *, const void *, unsigned long long)' Function 0x1c006052ff0 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   | |     |-ImplicitCastExpr 0x1c00605ae38 <col:20, col:55> 'void *' <BitCast>
|   | |     | `-BinaryOperator 0x1c00605abe8 <col:20, col:55> 'unsigned char *' '-'
|   | |     |   |-BinaryOperator 0x1c00605ab60 <col:20, col:43> 'unsigned char *' '+'
|   | |     |   | |-BinaryOperator 0x1c00605ab18 <col:20, col:32> 'unsigned char *' '+'
|   | |     |   | | |-ImplicitCastExpr 0x1c00605aae8 <col:20> 'unsigned char *' <LValueToRValue>
|   | |     |   | | | `-DeclRefExpr 0x1c00605aa78 <col:20> 'unsigned char *' lvalue ParmVar 0x1c006059b30 'v6' 'unsigned char *'
|   | |     |   | | `-ImplicitCastExpr 0x1c00605ab00 <col:25, col:32> 'int' <LValueToRValue>
|   | |     |   | |   `-MemberExpr 0x1c00605aab8 <col:25, col:32> 'int' lvalue .zero_pos 0x1c006059988
|   | |     |   | |     `-DeclRefExpr 0x1c00605aa98 <col:25> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x1c006059d60 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   | |     |   | `-IntegerLiteral 0x1c00605ab38 <col:43> 'int' 16
|   | |     |   `-ImplicitCastExpr 0x1c00605abd0 <col:48, col:55> 'int' <LValueToRValue>
|   | |     |     `-MemberExpr 0x1c00605aba0 <col:48, col:55> 'int' lvalue .total 0x1c006059918
|   | |     |       `-DeclRefExpr 0x1c00605ab80 <col:48> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x1c006059d60 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   | |     |-ImplicitCastExpr 0x1c00605ae50 <line:1124:20, col:40> 'const void *' <BitCast>
|   | |     | `-BinaryOperator 0x1c00605acd8 <col:20, col:40> 'unsigned char *' '+'
|   | |     |   |-ImplicitCastExpr 0x1c00605aca8 <col:20, col:27> 'unsigned char *' <ArrayToPointerDecay>
|   | |     |   | `-MemberExpr 0x1c00605ac28 <col:20, col:27> 'unsigned char [16]' lvalue .tmp 0x1c0060598a8
|   | |     |   |   `-DeclRefExpr 0x1c00605ac08 <col:20> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x1c006059d60 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   | |     |   `-ImplicitCastExpr 0x1c00605acc0 <col:33, col:40> 'int' <LValueToRValue>
|   | |     |     `-MemberExpr 0x1c00605ac78 <col:33, col:40> 'int' lvalue .zero_pos 0x1c006059988
|   | |     |       `-DeclRefExpr 0x1c00605ac58 <col:33> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x1c006059d60 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   | |     `-ImplicitCastExpr 0x1c00605ae68 <line:1125:20, col:42> 'unsigned long long' <IntegralCast>
|   | |       `-BinaryOperator 0x1c00605adc8 <col:20, col:42> 'int' '-'
|   | |         |-ImplicitCastExpr 0x1c00605ad98 <col:20, col:27> 'int' <LValueToRValue>
|   | |         | `-MemberExpr 0x1c00605ad18 <col:20, col:27> 'int' lvalue .total 0x1c006059918
|   | |         |   `-DeclRefExpr 0x1c00605acf8 <col:20> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x1c006059d60 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   | |         `-ImplicitCastExpr 0x1c00605adb0 <col:35, col:42> 'int' <LValueToRValue>
|   | |           `-MemberExpr 0x1c00605ad68 <col:35, col:42> 'int' lvalue .zero_pos 0x1c006059988
|   | |             `-DeclRefExpr 0x1c00605ad48 <col:35> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x1c006059d60 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   | `-CallExpr 0x1c00605afc0 <line:1127:9, col:34> 'void *'
|   |   |-ImplicitCastExpr 0x1c00605afa8 <col:9> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1c00605aec0 <col:9> 'void *(void *, const void *, unsigned long long)' Function 0x1c006052ff0 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   |   |-ImplicitCastExpr 0x1c00605b010 <col:16> 'void *' <BitCast>
|   |   | `-ImplicitCastExpr 0x1c00605aff8 <col:16> 'unsigned char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1c00605aee0 <col:16> 'unsigned char *' lvalue ParmVar 0x1c006059b30 'v6' 'unsigned char *'
|   |   |-ImplicitCastExpr 0x1c00605b040 <col:20, col:27> 'const void *' <BitCast>
|   |   | `-ImplicitCastExpr 0x1c00605b028 <col:20, col:27> 'unsigned char *' <ArrayToPointerDecay>
|   |   |   `-MemberExpr 0x1c00605af20 <col:20, col:27> 'unsigned char [16]' lvalue .tmp 0x1c0060598a8
|   |   |     `-DeclRefExpr 0x1c00605af00 <col:20> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x1c006059d60 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   |   `-ImplicitCastExpr 0x1c00605b058 <col:32> 'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x1c00605af50 <col:32> 'int' 16
|   `-ReturnStmt 0x1c00605b0c0 <line:1129:5, col:12>
|     `-IntegerLiteral 0x1c00605b098 <col:12> 'int' 1
|-FunctionDecl 0x1c006052ff0 <line:1118:9> col:9 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1c006053090 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1c0060530f8 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1c006053160 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1c00605a500 <line:1120:9> col:9 implicit used memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1c00605a5a0 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1c00605a608 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1c00605a670 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1c006053340 prev 0x1c00602c890 <line:1132:1, line:1165:1> line:1132:12 used ipv6_cb 'int (const char *, int, void *)' static
| |-ParmVarDecl 0x1c00605b138 <col:20, col:32> col:32 used elem 'const char *'
| |-ParmVarDecl 0x1c00605b1b8 <col:38, col:42> col:42 used len 'int'
| |-ParmVarDecl 0x1c00605b238 <col:47, col:53> col:53 used usr 'void *'
| `-CompoundStmt 0x1c00605b508 <line:1133:1, line:1165:1>
|   |-DeclStmt 0x1c0060534c0 <line:1134:5, col:23>
|   | `-VarDecl 0x1c006053408 <col:5, col:20> col:16 used s 'IPV6_STAT *' cinit
|   |   `-ImplicitCastExpr 0x1c0060534a8 <col:20> 'IPV6_STAT *' <BitCast>
|   |     `-ImplicitCastExpr 0x1c006053490 <col:20> 'void *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1c006053470 <col:20> 'void *' lvalue ParmVar 0x1c00605b238 'usr' 'void *'
|   |-IfStmt 0x1c0060535f0 <line:1136:5, line:1137:16>
|   | |-BinaryOperator 0x1c006053598 <line:1136:9, col:21> 'int' '=='
|   | | |-ImplicitCastExpr 0x1c006053580 <col:9, col:12> 'int' <LValueToRValue>
|   | | | `-MemberExpr 0x1c006053528 <col:9, col:12> 'int' lvalue ->total 0x1c006059918
|   | | |   `-ImplicitCastExpr 0x1c006053510 <col:9> 'IPV6_STAT *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x1c0060534d8 <col:9> 'IPV6_STAT *' lvalue Var 0x1c006053408 's' 'IPV6_STAT *'
|   | | `-IntegerLiteral 0x1c006053558 <col:21> 'int' 16
|   | `-ReturnStmt 0x1c0060535e0 <line:1137:9, col:16>
|   |   `-IntegerLiteral 0x1c0060535b8 <col:16> 'int' 0
|   |-IfStmt 0x1c00605b4a8 <line:1138:5, line:1163:5> has_else
|   | |-BinaryOperator 0x1c006053668 <line:1138:9, col:16> 'int' '=='
|   | | |-ImplicitCastExpr 0x1c006053650 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1c006053608 <col:9> 'int' lvalue ParmVar 0x1c00605b1b8 'len' 'int'
|   | | `-IntegerLiteral 0x1c006053628 <col:16> 'int' 0
|   | |-CompoundStmt 0x1c006053a88 <col:19, line:1146:5>
|   | | |-IfStmt 0x1c0060539e0 <line:1140:9, line:1144:20> has_else
|   | | | |-BinaryOperator 0x1c006053748 <line:1140:13, col:29> 'int' '=='
|   | | | | |-ImplicitCastExpr 0x1c006053730 <col:13, col:16> 'int' <LValueToRValue>
|   | | | | | `-MemberExpr 0x1c0060536c0 <col:13, col:16> 'int' lvalue ->zero_pos 0x1c006059988
|   | | | | |   `-ImplicitCastExpr 0x1c0060536a8 <col:13> 'IPV6_STAT *' <LValueToRValue>
|   | | | | |     `-DeclRefExpr 0x1c006053688 <col:13> 'IPV6_STAT *' lvalue Var 0x1c006053408 's' 'IPV6_STAT *'
|   | | | | `-UnaryOperator 0x1c006053718 <col:28, col:29> 'int' prefix '-'
|   | | | |   `-IntegerLiteral 0x1c0060536f0 <col:29> 'int' 1
|   | | | |-BinaryOperator 0x1c006053850 <line:1141:13, col:30> 'int' '='
|   | | | | |-MemberExpr 0x1c0060537a0 <col:13, col:16> 'int' lvalue ->zero_pos 0x1c006059988
|   | | | | | `-ImplicitCastExpr 0x1c006053788 <col:13> 'IPV6_STAT *' <LValueToRValue>
|   | | | | |   `-DeclRefExpr 0x1c006053768 <col:13> 'IPV6_STAT *' lvalue Var 0x1c006053408 's' 'IPV6_STAT *'
|   | | | | `-ImplicitCastExpr 0x1c006053838 <col:27, col:30> 'int' <LValueToRValue>
|   | | | |   `-MemberExpr 0x1c006053808 <col:27, col:30> 'int' lvalue ->total 0x1c006059918
|   | | | |     `-ImplicitCastExpr 0x1c0060537f0 <col:27> 'IPV6_STAT *' <LValueToRValue>
|   | | | |       `-DeclRefExpr 0x1c0060537d0 <col:27> 'IPV6_STAT *' lvalue Var 0x1c006053408 's' 'IPV6_STAT *'
|   | | | `-IfStmt 0x1c0060539c8 <line:1143:14, line:1144:20>
|   | | |   |-BinaryOperator 0x1c006053970 <line:1143:18, col:36> 'int' '!='
|   | | |   | |-ImplicitCastExpr 0x1c006053940 <col:18, col:21> 'int' <LValueToRValue>
|   | | |   | | `-MemberExpr 0x1c0060538a8 <col:18, col:21> 'int' lvalue ->zero_pos 0x1c006059988
|   | | |   | |   `-ImplicitCastExpr 0x1c006053890 <col:18> 'IPV6_STAT *' <LValueToRValue>
|   | | |   | |     `-DeclRefExpr 0x1c006053870 <col:18> 'IPV6_STAT *' lvalue Var 0x1c006053408 's' 'IPV6_STAT *'
|   | | |   | `-ImplicitCastExpr 0x1c006053958 <col:33, col:36> 'int' <LValueToRValue>
|   | | |   |   `-MemberExpr 0x1c006053910 <col:33, col:36> 'int' lvalue ->total 0x1c006059918
|   | | |   |     `-ImplicitCastExpr 0x1c0060538f8 <col:33> 'IPV6_STAT *' <LValueToRValue>
|   | | |   |       `-DeclRefExpr 0x1c0060538d8 <col:33> 'IPV6_STAT *' lvalue Var 0x1c006053408 's' 'IPV6_STAT *'
|   | | |   `-ReturnStmt 0x1c0060539b8 <line:1144:13, col:20>
|   | | |     `-IntegerLiteral 0x1c006053990 <col:20> 'int' 0
|   | | `-UnaryOperator 0x1c006053a70 <line:1145:9, col:20> 'int' postfix '++'
|   | |   `-MemberExpr 0x1c006053a40 <col:9, col:12> 'int' lvalue ->zero_cnt 0x1c0060599f8
|   | |     `-ImplicitCastExpr 0x1c006053a28 <col:9> 'IPV6_STAT *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x1c006053a08 <col:9> 'IPV6_STAT *' lvalue Var 0x1c006053408 's' 'IPV6_STAT *'
|   | `-CompoundStmt 0x1c00605b490 <line:1146:12, line:1163:5>
|   |   `-IfStmt 0x1c00605b468 <line:1148:9, line:1162:9> has_else
|   |     |-BinaryOperator 0x1c006053b08 <line:1148:13, col:19> 'int' '>'
|   |     | |-ImplicitCastExpr 0x1c006053af0 <col:13> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1c006053aa8 <col:13> 'int' lvalue ParmVar 0x1c00605b1b8 'len' 'int'
|   |     | `-IntegerLiteral 0x1c006053ac8 <col:19> 'int' 4
|   |     |-CompoundStmt 0x1c006054020 <col:22, line:1158:9>
|   |     | |-IfStmt 0x1c006053c28 <line:1150:13, line:1151:24>
|   |     | | |-BinaryOperator 0x1c006053bd0 <line:1150:17, col:28> 'int' '>'
|   |     | | | |-ImplicitCastExpr 0x1c006053bb8 <col:17, col:20> 'int' <LValueToRValue>
|   |     | | | | `-MemberExpr 0x1c006053b60 <col:17, col:20> 'int' lvalue ->total 0x1c006059918
|   |     | | | |   `-ImplicitCastExpr 0x1c006053b48 <col:17> 'IPV6_STAT *' <LValueToRValue>
|   |     | | | |     `-DeclRefExpr 0x1c006053b28 <col:17> 'IPV6_STAT *' lvalue Var 0x1c006053408 's' 'IPV6_STAT *'
|   |     | | | `-IntegerLiteral 0x1c006053b90 <col:28> 'int' 12
|   |     | | `-ReturnStmt 0x1c006053c18 <line:1151:17, col:24>
|   |     | |   `-IntegerLiteral 0x1c006053bf0 <col:24> 'int' 0
|   |     | |-IfStmt 0x1c006053d20 <line:1153:13, line:1154:24>
|   |     | | |-ImplicitCastExpr 0x1c006053cd0 <line:1153:17, col:25> 'char' <LValueToRValue>
|   |     | | | `-ArraySubscriptExpr 0x1c006053cb0 <col:17, col:25> 'const char' lvalue
|   |     | | |   |-ImplicitCastExpr 0x1c006053c80 <col:17> 'const char *' <LValueToRValue>
|   |     | | |   | `-DeclRefExpr 0x1c006053c40 <col:17> 'const char *' lvalue ParmVar 0x1c00605b138 'elem' 'const char *'
|   |     | | |   `-ImplicitCastExpr 0x1c006053c98 <col:22> 'int' <LValueToRValue>
|   |     | | |     `-DeclRefExpr 0x1c006053c60 <col:22> 'int' lvalue ParmVar 0x1c00605b1b8 'len' 'int'
|   |     | | `-ReturnStmt 0x1c006053d10 <line:1154:17, col:24>
|   |     | |   `-IntegerLiteral 0x1c006053ce8 <col:24> 'int' 0
|   |     | |-IfStmt 0x1c006053f48 <line:1155:13, line:1156:24>
|   |     | | |-UnaryOperator 0x1c006053ef8 <line:1155:17, col:55> 'int' prefix '!' cannot overflow
|   |     | | | `-CallExpr 0x1c006053eb0 <col:18, col:55> 'int'
|   |     | | |   |-ImplicitCastExpr 0x1c006053e98 <col:18> 'int (*)(unsigned char *, const char *)' <FunctionToPointerDecay>
|   |     | | |   | `-DeclRefExpr 0x1c006053d38 <col:18> 'int (unsigned char *, const char *)' Function 0x1c0060515e8 'ipv4_from_asc' 'int (unsigned char *, const char *)'
|   |     | | |   |-BinaryOperator 0x1c006053e58 <col:32, col:44> 'unsigned char *' '+'
|   |     | | |   | |-ImplicitCastExpr 0x1c006053e28 <col:32, col:35> 'unsigned char *' <ArrayToPointerDecay>
|   |     | | |   | | `-MemberExpr 0x1c006053d90 <col:32, col:35> 'unsigned char [16]' lvalue ->tmp 0x1c0060598a8
|   |     | | |   | |   `-ImplicitCastExpr 0x1c006053d78 <col:32> 'IPV6_STAT *' <LValueToRValue>
|   |     | | |   | |     `-DeclRefExpr 0x1c006053d58 <col:32> 'IPV6_STAT *' lvalue Var 0x1c006053408 's' 'IPV6_STAT *'
|   |     | | |   | `-ImplicitCastExpr 0x1c006053e40 <col:41, col:44> 'int' <LValueToRValue>
|   |     | | |   |   `-MemberExpr 0x1c006053df8 <col:41, col:44> 'int' lvalue ->total 0x1c006059918
|   |     | | |   |     `-ImplicitCastExpr 0x1c006053de0 <col:41> 'IPV6_STAT *' <LValueToRValue>
|   |     | | |   |       `-DeclRefExpr 0x1c006053dc0 <col:41> 'IPV6_STAT *' lvalue Var 0x1c006053408 's' 'IPV6_STAT *'
|   |     | | |   `-ImplicitCastExpr 0x1c006053ee0 <col:51> 'const char *' <LValueToRValue>
|   |     | | |     `-DeclRefExpr 0x1c006053e78 <col:51> 'const char *' lvalue ParmVar 0x1c00605b138 'elem' 'const char *'
|   |     | | `-ReturnStmt 0x1c006053f38 <line:1156:17, col:24>
|   |     | |   `-IntegerLiteral 0x1c006053f10 <col:24> 'int' 0
|   |     | `-CompoundAssignOperator 0x1c006053ff0 <line:1157:13, col:25> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     |   |-MemberExpr 0x1c006053f98 <col:13, col:16> 'int' lvalue ->total 0x1c006059918
|   |     |   | `-ImplicitCastExpr 0x1c006053f80 <col:13> 'IPV6_STAT *' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x1c006053f60 <col:13> 'IPV6_STAT *' lvalue Var 0x1c006053408 's' 'IPV6_STAT *'
|   |     |   `-IntegerLiteral 0x1c006053fc8 <col:25> 'int' 4
|   |     `-CompoundStmt 0x1c00605b448 <line:1158:16, line:1162:9>
|   |       |-IfStmt 0x1c0060542c8 <line:1159:13, line:1160:24>
|   |       | |-UnaryOperator 0x1c006054278 <line:1159:17, col:55> 'int' prefix '!' cannot overflow
|   |       | | `-CallExpr 0x1c006054210 <col:18, col:55> 'int'
|   |       | |   |-ImplicitCastExpr 0x1c0060541f8 <col:18> 'int (*)(unsigned char *, const char *, int)' <FunctionToPointerDecay>
|   |       | |   | `-DeclRefExpr 0x1c006054050 <col:18> 'int (unsigned char *, const char *, int)' Function 0x1c00602cbb0 'ipv6_hex' 'int (unsigned char *, const char *, int)'
|   |       | |   |-BinaryOperator 0x1c006054170 <col:27, col:39> 'unsigned char *' '+'
|   |       | |   | |-ImplicitCastExpr 0x1c006054140 <col:27, col:30> 'unsigned char *' <ArrayToPointerDecay>
|   |       | |   | | `-MemberExpr 0x1c0060540a8 <col:27, col:30> 'unsigned char [16]' lvalue ->tmp 0x1c0060598a8
|   |       | |   | |   `-ImplicitCastExpr 0x1c006054090 <col:27> 'IPV6_STAT *' <LValueToRValue>
|   |       | |   | |     `-DeclRefExpr 0x1c006054070 <col:27> 'IPV6_STAT *' lvalue Var 0x1c006053408 's' 'IPV6_STAT *'
|   |       | |   | `-ImplicitCastExpr 0x1c006054158 <col:36, col:39> 'int' <LValueToRValue>
|   |       | |   |   `-MemberExpr 0x1c006054110 <col:36, col:39> 'int' lvalue ->total 0x1c006059918
|   |       | |   |     `-ImplicitCastExpr 0x1c0060540f8 <col:36> 'IPV6_STAT *' <LValueToRValue>
|   |       | |   |       `-DeclRefExpr 0x1c0060540d8 <col:36> 'IPV6_STAT *' lvalue Var 0x1c006053408 's' 'IPV6_STAT *'
|   |       | |   |-ImplicitCastExpr 0x1c006054248 <col:46> 'const char *' <LValueToRValue>
|   |       | |   | `-DeclRefExpr 0x1c006054190 <col:46> 'const char *' lvalue ParmVar 0x1c00605b138 'elem' 'const char *'
|   |       | |   `-ImplicitCastExpr 0x1c006054260 <col:52> 'int' <LValueToRValue>
|   |       | |     `-DeclRefExpr 0x1c0060541b0 <col:52> 'int' lvalue ParmVar 0x1c00605b1b8 'len' 'int'
|   |       | `-ReturnStmt 0x1c0060542b8 <line:1160:17, col:24>
|   |       |   `-IntegerLiteral 0x1c006054290 <col:24> 'int' 0
|   |       `-CompoundAssignOperator 0x1c00605b418 <line:1161:13, col:25> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |         |-MemberExpr 0x1c00605b3c0 <col:13, col:16> 'int' lvalue ->total 0x1c006059918
|   |         | `-ImplicitCastExpr 0x1c006054300 <col:13> 'IPV6_STAT *' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x1c0060542e0 <col:13> 'IPV6_STAT *' lvalue Var 0x1c006053408 's' 'IPV6_STAT *'
|   |         `-IntegerLiteral 0x1c00605b3f0 <col:25> 'int' 2
|   `-ReturnStmt 0x1c00605b4f8 <line:1164:5, col:12>
|     `-IntegerLiteral 0x1c00605b4d0 <col:12> 'int' 1
|-FunctionDecl 0x1c00605b740 prev 0x1c00602cbb0 <line:1171:1, line:1190:1> line:1171:12 used ipv6_hex 'int (unsigned char *, const char *, int)' static
| |-ParmVarDecl 0x1c00605b550 <col:21, col:36> col:36 used out 'unsigned char *'
| |-ParmVarDecl 0x1c00605b5d0 <col:41, col:53> col:53 used in 'const char *'
| |-ParmVarDecl 0x1c00605b650 <col:57, col:61> col:61 used inlen 'int'
| `-CompoundStmt 0x1c00605c338 <line:1172:1, line:1190:1>
|   |-DeclStmt 0x1c00605b878 <line:1173:5, col:20>
|   | `-VarDecl 0x1c00605b810 <col:5, col:19> col:19 used c 'unsigned char'
|   |-DeclStmt 0x1c00605b950 <line:1174:5, col:25>
|   | `-VarDecl 0x1c00605b8a8 <col:5, col:24> col:18 used num 'unsigned int' cinit
|   |   `-ImplicitCastExpr 0x1c00605b938 <col:24> 'unsigned int' <IntegralCast>
|   |     `-IntegerLiteral 0x1c00605b910 <col:24> 'int' 0
|   |-DeclStmt 0x1c00605b9e8 <line:1175:5, col:10>
|   | `-VarDecl 0x1c00605b980 <col:5, col:9> col:9 used x 'int'
|   |-IfStmt 0x1c00605bab8 <line:1177:5, line:1178:16>
|   | |-BinaryOperator 0x1c00605ba60 <line:1177:9, col:17> 'int' '>'
|   | | |-ImplicitCastExpr 0x1c00605ba48 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1c00605ba00 <col:9> 'int' lvalue ParmVar 0x1c00605b650 'inlen' 'int'
|   | | `-IntegerLiteral 0x1c00605ba20 <col:17> 'int' 4
|   | `-ReturnStmt 0x1c00605baa8 <line:1178:9, col:16>
|   |   `-IntegerLiteral 0x1c00605ba80 <col:16> 'int' 0
|   |-WhileStmt 0x1c00605c060 <line:1179:5, line:1186:5>
|   | |-UnaryOperator 0x1c00605baf0 <line:1179:12, col:17> 'int' postfix '--'
|   | | `-DeclRefExpr 0x1c00605bad0 <col:12> 'int' lvalue ParmVar 0x1c00605b650 'inlen' 'int'
|   | `-CompoundStmt 0x1c00605c028 <col:21, line:1186:5>
|   |   |-BinaryOperator 0x1c00605bbc0 <line:1180:9, col:16> 'unsigned char' '='
|   |   | |-DeclRefExpr 0x1c00605bb08 <col:9> 'unsigned char' lvalue Var 0x1c00605b810 'c' 'unsigned char'
|   |   | `-ImplicitCastExpr 0x1c00605bba8 <col:13, col:16> 'unsigned char' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x1c00605bb90 <col:13, col:16> 'char' <LValueToRValue>
|   |   |     `-UnaryOperator 0x1c00605bb78 <col:13, col:16> 'const char' lvalue prefix '*' cannot overflow
|   |   |       `-UnaryOperator 0x1c00605bb60 <col:14, col:16> 'const char *' postfix '++'
|   |   |         `-DeclRefExpr 0x1c00605bb40 <col:14> 'const char *' lvalue ParmVar 0x1c00605b5d0 'in' 'const char *'
|   |   |-CompoundAssignOperator 0x1c00605bc58 <line:1181:9, col:17> 'unsigned int' '<<=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |   | |-DeclRefExpr 0x1c00605bbe0 <col:9> 'unsigned int' lvalue Var 0x1c00605b8a8 'num' 'unsigned int'
|   |   | `-IntegerLiteral 0x1c00605bc18 <col:17> 'int' 4
|   |   |-BinaryOperator 0x1c00605be60 <line:1182:9, col:34> 'int' '='
|   |   | |-DeclRefExpr 0x1c00605bc88 <col:9> 'int' lvalue Var 0x1c00605b980 'x' 'int'
|   |   | `-CallExpr 0x1c00605be08 <col:13, col:34> 'int'
|   |   |   |-ImplicitCastExpr 0x1c00605bdf0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x1c00605bdb0 <col:13> 'int ()' Function 0x1c00605bce8 'OPENSSL_hexchar2int' 'int ()'
|   |   |   `-ImplicitCastExpr 0x1c00605be48 <col:33> 'int' <IntegralCast>
|   |   |     `-ImplicitCastExpr 0x1c00605be30 <col:33> 'unsigned char' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x1c00605bdd0 <col:33> 'unsigned char' lvalue Var 0x1c00605b810 'c' 'unsigned char'
|   |   |-IfStmt 0x1c00605bf38 <line:1183:9, line:1184:20>
|   |   | |-BinaryOperator 0x1c00605bee0 <line:1183:13, col:17> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x1c00605bec8 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1c00605be80 <col:13> 'int' lvalue Var 0x1c00605b980 'x' 'int'
|   |   | | `-IntegerLiteral 0x1c00605bea0 <col:17> 'int' 0
|   |   | `-ReturnStmt 0x1c00605bf28 <line:1184:13, col:20>
|   |   |   `-IntegerLiteral 0x1c00605bf00 <col:20> 'int' 0
|   |   `-CompoundAssignOperator 0x1c00605bff8 <line:1185:9, col:22> 'unsigned int' '|=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |     |-DeclRefExpr 0x1c00605bf50 <col:9> 'unsigned int' lvalue Var 0x1c00605b8a8 'num' 'unsigned int'
|   |     `-ImplicitCastExpr 0x1c00605bfe0 <col:16, col:22> 'unsigned int' <IntegralCast>
|   |       `-CStyleCastExpr 0x1c00605bfb8 <col:16, col:22> 'char' <IntegralCast>
|   |         `-ImplicitCastExpr 0x1c00605bfa0 <col:22> 'int' <LValueToRValue> part_of_explicit_cast
|   |           `-DeclRefExpr 0x1c00605bf70 <col:22> 'int' lvalue Var 0x1c00605b980 'x' 'int'
|   |-BinaryOperator 0x1c00605c190 <line:1187:5, col:21> 'unsigned char' '='
|   | |-ArraySubscriptExpr 0x1c00605c0d8 <col:5, col:10> 'unsigned char' lvalue
|   | | |-ImplicitCastExpr 0x1c00605c0c0 <col:5> 'unsigned char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1c00605c078 <col:5> 'unsigned char *' lvalue ParmVar 0x1c00605b550 'out' 'unsigned char *'
|   | | `-IntegerLiteral 0x1c00605c098 <col:9> 'int' 0
|   | `-ImplicitCastExpr 0x1c00605c178 <col:14, col:21> 'unsigned char' <IntegralCast>
|   |   `-BinaryOperator 0x1c00605c158 <col:14, col:21> 'unsigned int' '>>'
|   |     |-ImplicitCastExpr 0x1c00605c140 <col:14> 'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1c00605c0f8 <col:14> 'unsigned int' lvalue Var 0x1c00605b8a8 'num' 'unsigned int'
|   |     `-IntegerLiteral 0x1c00605c118 <col:21> 'int' 8
|   |-BinaryOperator 0x1c00605c2e0 <line:1188:5, col:20> 'unsigned char' '='
|   | |-ArraySubscriptExpr 0x1c00605c210 <col:5, col:10> 'unsigned char' lvalue
|   | | |-ImplicitCastExpr 0x1c00605c1f8 <col:5> 'unsigned char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1c00605c1b0 <col:5> 'unsigned char *' lvalue ParmVar 0x1c00605b550 'out' 'unsigned char *'
|   | | `-IntegerLiteral 0x1c00605c1d0 <col:9> 'int' 1
|   | `-ImplicitCastExpr 0x1c00605c2c8 <col:14, col:20> 'unsigned char' <IntegralCast>
|   |   `-BinaryOperator 0x1c00605c2a8 <col:14, col:20> 'unsigned int' '&'
|   |     |-ImplicitCastExpr 0x1c00605c278 <col:14> 'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1c00605c230 <col:14> 'unsigned int' lvalue Var 0x1c00605b8a8 'num' 'unsigned int'
|   |     `-ImplicitCastExpr 0x1c00605c290 <col:20> 'unsigned int' <IntegralCast>
|   |       `-IntegerLiteral 0x1c00605c250 <col:20> 'int' 255
|   `-ReturnStmt 0x1c00605c328 <line:1189:5, col:12>
|     `-IntegerLiteral 0x1c00605c300 <col:12> 'int' 1
`-FunctionDecl 0x1c006054500 <line:1192:1, line:1238:1> line:1192:5 invalid X509V3_NAME_from_section 'int (int *, int (*)())'
  |-ParmVarDecl 0x1c006054350 <col:30, col:41> col:41 invalid nm 'int *'
  |-ParmVarDecl 0x1c0060543e0 <col:45, <invalid sloc>> col:45 invalid STACK_OF 'int (*)()':'int (*)()'
  `-CompoundStmt 0x1c00605f9c0 <line:1194:1, line:1238:1>
    |-DeclStmt 0x1c0060547f0 <line:1196:5, col:38>
    | |-VarDecl 0x1c0060545e0 <col:5, col:9> col:9 used i 'int'
    | |-VarDecl 0x1c006054660 <col:5, col:12> col:12 used mval 'int'
    | |-VarDecl 0x1c0060546e0 <col:5, col:18> col:18 used spec_char 'int'
    | `-VarDecl 0x1c006054760 <col:5, col:29> col:29 used plus_char 'int'
    |-DeclStmt 0x1c006054920 <line:1197:5, col:19>
    | |-VarDecl 0x1c006054820 <col:5, col:11> col:11 used p 'char *'
    | `-VarDecl 0x1c0060548a0 <col:5, col:15> col:15 used type 'char *'
    |-IfStmt 0x1c006054988 <line:1198:5, line:1199:16>
    | |-OpaqueValueExpr 0x1c006054970 <<invalid sloc>> '_Bool'
    | `-ReturnStmt 0x1c006054960 <col:9, col:16>
    |   `-IntegerLiteral 0x1c006054938 <col:16> 'int' 0
    `-ReturnStmt 0x1c00605f9b0 <line:1237:5, col:12>
      `-IntegerLiteral 0x1c00605f988 <col:12> 'int' 1
