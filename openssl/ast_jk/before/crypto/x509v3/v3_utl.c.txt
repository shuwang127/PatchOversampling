TranslationUnitDecl 0x242d7a14fc8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x242d7a15860 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x242d7a15560 '__int128'
|-TypedefDecl 0x242d7a158d0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x242d7a15580 'unsigned __int128'
|-TypedefDecl 0x242d7a15c08 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x242d7a159c0 'struct __NSConstantString_tag'
|   `-Record 0x242d7a15928 '__NSConstantString_tag'
|-TypedefDecl 0x242d7a15c78 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x242d7a151a0 'unsigned long long'
|-TypedefDecl 0x242d7a15d10 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x242d7a15cd0 'char *'
|   `-BuiltinType 0x242d7a15060 'char'
|-TypedefDecl 0x242d7a15d80 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x242d7a15cd0 'char *'
|   `-BuiltinType 0x242d7a15060 'char'
|-TypedefDecl 0x242d7a15e40 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x242d7a151a0 'unsigned long long'
|-TypedefDecl 0x242d7a15eb0 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x242d7a15cd0 'char *'
|   `-BuiltinType 0x242d7a15060 'char'
|-FunctionDecl 0x242d93ce210 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x242d93ce2b0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x242d93ce320 <col:21> Implicit
|-FunctionDecl 0x242d93ce378 prev 0x242d93ce210 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x242d93ce0a0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x242d93ce468 <col:21> Inherited Implicit
|-TypedefDecl 0x242d93ce4a8 prev 0x242d7a15c78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x242d7a151a0 'unsigned long long'
|-TypedefDecl 0x242d93ce550 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x242d93ce520 'size_t' sugar
|   |-Typedef 0x242d93ce4a8 'size_t'
|   `-BuiltinType 0x242d7a151a0 'unsigned long long'
|-TypedefDecl 0x242d93ce5c0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x242d7a15100 'long long'
|-TypedefDecl 0x242d93ce630 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x242d7a15100 'long long'
|-TypedefDecl 0x242d93ce6a0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x242d7a15140 'unsigned short'
|-TypedefDecl 0x242d93ce710 <line:541:1, col:24> col:24 referenced wint_t 'unsigned short'
| `-BuiltinType 0x242d7a15140 'unsigned short'
|-TypedefDecl 0x242d93ce780 <line:542:1, col:24> col:24 referenced wctype_t 'unsigned short'
| `-BuiltinType 0x242d7a15140 'unsigned short'
|-TypedefDecl 0x242d93ce7f0 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x242d7a150c0 'int'
|-TypedefDecl 0x242d93ce860 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x242d7a150e0 'long'
|-TypedefDecl 0x242d93ce8d0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x242d7a15100 'long long'
|-TypedefDecl 0x242d93ce960 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x242d93ce930 '__time64_t' sugar
|   |-Typedef 0x242d93ce8d0 '__time64_t'
|   `-BuiltinType 0x242d7a15100 'long long'
|-FunctionDecl 0x242d93cead8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x242d93cecf8 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x242d940b6e0 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x242d93cee38 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x242d93ceeb0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x242d93cef28 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x242d93cefa8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x242d940b480 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x242d940b7c0 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x242d940b880 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x242d940b9f0 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x242d940b9a0 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x242d940b940 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x242d940b860 'struct threadlocaleinfostruct'
|       `-Record 0x242d9415520 'threadlocaleinfostruct'
|-TypedefDecl 0x242d940bb00 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x242d940bab0 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x242d940ba50 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x242d940b920 'struct threadmbcinfostruct'
|       `-Record 0x242d940b880 'threadmbcinfostruct'
|-RecordDecl 0x242d940bb58 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x242d940bc10 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x242d940bcd0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x242d940bd60 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x242d940bdf0 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x242d940bea8 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x242d940be50 'struct localeinfo_struct' sugar
|   `-RecordType 0x242d940bcb0 'struct localeinfo_struct'
|     `-Record 0x242d940bc10 'localeinfo_struct'
|-TypedefDecl 0x242d940bf80 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x242d940bf30 'struct localeinfo_struct *'
|   `-ElaboratedType 0x242d940be50 'struct localeinfo_struct' sugar
|     `-RecordType 0x242d940bcb0 'struct localeinfo_struct'
|       `-Record 0x242d940bc10 'localeinfo_struct'
|-RecordDecl 0x242d940bff8 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x242d940c0b0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x242d940c128 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x242d940c1e8 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x242d940c280 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x242d940c2f0 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x242d940c3a8 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x242d940c350 'struct localerefcount' sugar
|   `-RecordType 0x242d940c090 'struct localerefcount'
|     `-Record 0x242d940bff8 'localerefcount'
|-RecordDecl 0x242d9415520 prev 0x242d940b7c0 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x242d94155a0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x242d9415618 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x242d9415688 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x242d94156f8 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x242d9415768 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x242d9415928 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x242d9415998 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x242d9415a08 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x242d9415a78 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x242d9415ae8 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x242d9415b58 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x242d9415bb0 parent 0x242d7a14fc8 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x242d9415d40 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x242d9415db0 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x242d9415e20 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x242d9415e90 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x242d9415f30 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x242d9415fa0 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x242d94160b0 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x242d94161e8 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x242d9416298 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x242d9416240 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x242d940b860 'struct threadlocaleinfostruct'
|     `-Record 0x242d9415520 'threadlocaleinfostruct'
|-RecordDecl 0x242d9416330 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:63:1, line:72:9> line:63:8 struct _iobuf definition
| |-MaxFieldAlignmentAttr 0x242d94163f0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x242d9416468 <line:64:9, col:15> col:15 _ptr 'char *'
| |-FieldDecl 0x242d94124f0 <line:65:9, col:15> col:15 _cnt 'int'
| |-FieldDecl 0x242d9412560 <line:66:9, col:15> col:15 _base 'char *'
| |-FieldDecl 0x242d94125d0 <line:67:9, col:15> col:15 _flag 'int'
| |-FieldDecl 0x242d9412640 <line:68:9, col:15> col:15 _file 'int'
| |-FieldDecl 0x242d94126b0 <line:69:9, col:15> col:15 _charbuf 'int'
| |-FieldDecl 0x242d9412720 <line:70:9, col:15> col:15 _bufsiz 'int'
| `-FieldDecl 0x242d9412790 <line:71:9, col:15> col:15 _tmpfname 'char *'
|-TypedefDecl 0x242d9412840 <line:73:1, col:23> col:23 referenced FILE 'struct _iobuf':'struct _iobuf'
| `-ElaboratedType 0x242d94127f0 'struct _iobuf' sugar
|   `-RecordType 0x242d94163d0 'struct _iobuf'
|     `-Record 0x242d9416330 '_iobuf'
|-FunctionDecl 0x242d9412a78 <line:137:9, col:39> col:24 __iob_func 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|-TypedefDecl 0x242d9412b48 <line:144:1, col:17> col:17 referenced fpos_t 'long long'
| `-BuiltinType 0x242d7a15100 'long long'
|-FunctionDecl 0x242d9412d28 <line:175:24, col:65> col:36 _filbuf 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x242d9412bb0 <col:52, col:59> col:59 _File 'FILE *'
|-FunctionDecl 0x242d9413020 <line:176:28, col:82> col:40 _flsbuf 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x242d9412e00 <col:53, col:57> col:57 _Ch 'int'
| `-ParmVarDecl 0x242d9412e78 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x242d94133d0 <line:178:24, col:121> col:39 _fsopen 'FILE *(const char *, const char *, int) __attribute__((cdecl))':'FILE *(const char *, const char *, int)'
| |-ParmVarDecl 0x242d9413100 <col:54, col:67> col:67 _Filename 'const char *'
| |-ParmVarDecl 0x242d9413180 <col:85, col:98> col:98 _Mode 'const char *'
| `-ParmVarDecl 0x242d9413200 <col:110, col:114> col:114 _ShFlag 'int'
|-FunctionDecl 0x242d9410640 <line:180:9, col:51> col:22 clearerr 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x242d94104d0 <col:39, col:46> col:46 _File 'FILE *'
|-FunctionDecl 0x242d9410870 <line:182:28, col:76> col:44 clearerr_s 'errno_t (FILE *) __attribute__((cdecl))':'errno_t (FILE *)'
| `-ParmVarDecl 0x242d9410730 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x242d9410a20 <line:184:28, col:67> col:40 fclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x242d9410940 <col:55, col:62> col:62 _File 'FILE *'
|-FunctionDecl 0x242d9410c10 <line:185:28, col:55> col:40 _fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x242d9410f08 <line:187:24, col:94> col:39 _fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x242d9410ce0 <col:52, col:56> col:56 _FileHandle 'int'
| `-ParmVarDecl 0x242d9410d60 <col:76, col:89> col:89 _Mode 'const char *'
|-FunctionDecl 0x242d94110c0 <line:189:24, col:58> col:36 feof 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x242d9410fe0 <col:46, col:53> col:53 _File 'FILE *'
|-FunctionDecl 0x242d9411270 <line:190:24, col:60> col:36 ferror 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x242d9411190 <col:48, col:55> col:55 _File 'FILE *'
|-FunctionDecl 0x242d9411420 <line:191:28, col:71> col:40 fflush 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x242d9411340 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x242d941f6c8 <line:192:28, col:66> col:40 fgetc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x242d941f5e8 <col:54, col:61> col:61 _File 'FILE *'
|-FunctionDecl 0x242d941f858 <line:193:28, col:54> col:40 _fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x242d941fbc0 <line:194:28, col:90> col:40 fgetpos 'int (FILE *, fpos_t *) __attribute__((cdecl))':'int (FILE *, fpos_t *)'
| |-ParmVarDecl 0x242d941f920 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x242d941fa18 <col:77, col:86> col:86 _Pos 'fpos_t *'
|-FunctionDecl 0x242d941ff78 <line:195:28, col:128> col:43 fgets 'char *(char *, int, FILE *) __attribute__((cdecl))':'char *(char *, int, FILE *)'
| |-ParmVarDecl 0x242d941fca0 <col:75, col:82> col:82 _Buf 'char *'
| |-ParmVarDecl 0x242d941fd20 <col:93, col:97> col:97 _MaxCount 'int'
| `-ParmVarDecl 0x242d941fd98 <col:116, col:123> col:123 _File 'FILE *'
|-FunctionDecl 0x242d9420138 <line:197:24, col:61> col:36 _fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x242d9420058 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x242d9420400 <line:204:24, col:117> col:39 _tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x242d9420210 <col:59, col:72> col:72 _DirName 'const char *'
| `-ParmVarDecl 0x242d9420290 <col:93, col:106> col:106 _FilePrefix 'const char *'
|-FunctionDecl 0x242d941c590 <line:210:28, col:54> col:40 _flushall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x242d941c988 <line:211:72> col:72 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x242d941ca28 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x242d941ca90 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x242d941cb08 prev 0x242d941c988 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:211:134> col:72 fopen 'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x242d941c760 <col:85, col:98> col:98 _Filename 'const char *'
| |-ParmVarDecl 0x242d941c7e0 <col:116, col:129> col:129 _Mode 'const char *'
| `-DeprecatedAttr 0x242d941cbb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x242d941d030 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:213:28, col:149> col:44 fopen_s 'errno_t (FILE **, const char *, const char *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *)'
| |-ParmVarDecl 0x242d941cd60 <col:78, col:86> col:86 _File 'FILE **'
| |-ParmVarDecl 0x242d941cde0 <col:100, col:113> col:113 _Filename 'const char *'
| `-ParmVarDecl 0x242d941ce60 <col:131, col:144> col:144 _Mode 'const char *'
|-FunctionDecl 0x242d941d350 <line:215:40> col:40 implicit fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x242d941d3f0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x242d941d458 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x242d941d4d0 <col:40> Implicit printf 2 3
|-FunctionDecl 0x242d941a570 prev 0x242d941d350 <col:28, col:125> col:40 fprintf 'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x242d941d110 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x242d941d190 <col:100, col:113> col:113 _Format 'const char *'
| `-FormatAttr 0x242d941a668 <col:40> Inherited printf 2 3
|-FunctionDecl 0x242d941a830 <line:217:28, col:127> col:40 fprintf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x242d941a6b0 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x242d941a730 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x242d941aa88 <line:219:28, col:80> col:40 fputc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x242d941a910 <col:51, col:55> col:55 _Ch 'int'
| `-ParmVarDecl 0x242d941a988 <col:68, col:75> col:75 _File 'FILE *'
|-FunctionDecl 0x242d941acb8 <line:220:28, col:62> col:40 _fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x242d941ab68 <col:55, col:59> col:59 _Ch 'int'
|-FunctionDecl 0x242d941afb0 <line:221:28, col:92> col:40 fputs 'int (const char *, FILE *) __attribute__((cdecl))':'int (const char *, FILE *)'
| |-ParmVarDecl 0x242d941ad90 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x242d941ae08 <col:80, col:87> col:87 _File 'FILE *'
|-FunctionDecl 0x242d941b448 <line:222:43> col:43 implicit fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x242d941b4e8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x242d9419560 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x242d94195c8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x242d9419630 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x242d94196b8 prev 0x242d941b448 <col:28, col:171> col:43 fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x242d941b090 <col:89, col:96> col:96 _DstBuf 'void *'
| |-ParmVarDecl 0x242d941b108 <col:110, col:117> col:117 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d941b180 <col:136, col:143> col:143 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x242d941b1f8 <col:159, col:166> col:166 _File 'FILE *'
|-FunctionDecl 0x242d9419bc0 <line:224:28, col:195> col:43 fread_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x242d94197a8 <col:91, col:98> col:98 _DstBuf 'void *'
| |-ParmVarDecl 0x242d9419820 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d9419898 <col:134, col:141> col:141 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d9419910 <col:160, col:167> col:167 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x242d9419988 <col:183, col:190> col:190 _File 'FILE *'
|-FunctionDecl 0x242d941a080 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:226:160> col:74 freopen 'FILE *(const char *, const char *, FILE *) __attribute__((cdecl))':'FILE *(const char *, const char *, FILE *)'
| |-ParmVarDecl 0x242d9419db0 <col:89, col:102> col:102 _Filename 'const char *'
| |-ParmVarDecl 0x242d9419e30 <col:120, col:133> col:133 _Mode 'const char *'
| |-ParmVarDecl 0x242d9419ea8 <col:148, col:155> col:155 _File 'FILE *'
| `-DeprecatedAttr 0x242d941a138 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using freopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x242d941d648 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:228:28, col:176> col:44 freopen_s 'errno_t (FILE **, const char *, const char *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *, FILE *)'
| |-ParmVarDecl 0x242d941a280 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x242d941a300 <col:102, col:115> col:115 _Filename 'const char *'
| |-ParmVarDecl 0x242d941a380 <col:133, col:146> col:146 _Mode 'const char *'
| `-ParmVarDecl 0x242d941a3f8 <col:161, col:168> col:168 _OldFile 'FILE *'
|-FunctionDecl 0x242d941d9f0 <line:230:70> col:70 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x242d941da90 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x242d941daf8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x242d941db70 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x242d941dbd8 prev 0x242d941d9f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:230:153> col:70 fscanf 'int (FILE *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x242d941d828 <col:85, col:92> col:92 _File 'FILE *'
| |-ParmVarDecl 0x242d941d8a8 <col:128, col:141> col:141 _Format 'const char *'
| |-FormatAttr 0x242d941ddb8 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x242d941dc88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x242d941e1f8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:231:201> col:77 _fscanf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x242d941def8 <col:95, col:102> col:102 _File 'FILE *'
| |-ParmVarDecl 0x242d941df78 <col:148, col:161> col:161 _Format 'const char *'
| |-ParmVarDecl 0x242d941e010 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x242d941e2b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x242d941b580 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:235:28, col:127> col:40 fscanf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x242d941e3f0 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x242d941e470 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x242d941b870 <line:237:28, col:168> col:40 _fscanf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x242d941b658 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x242d941b6d8 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x242d941b750 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x242d941bbd0 <line:239:28, col:94> col:40 fsetpos 'int (FILE *, const fpos_t *) __attribute__((cdecl))':'int (FILE *, const fpos_t *)'
| |-ParmVarDecl 0x242d941b950 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x242d941ba28 <col:75, col:90> col:90 _Pos 'const fpos_t *'
|-FunctionDecl 0x242d941bf88 <line:240:28, col:103> col:40 fseek 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x242d941bca8 <col:54, col:61> col:61 _File 'FILE *'
| |-ParmVarDecl 0x242d941bd28 <col:73, col:78> col:78 _Offset 'long'
| `-ParmVarDecl 0x242d941bda8 <col:92, col:96> col:96 _Origin 'int'
|-FunctionDecl 0x242d941c1e8 <line:241:24, col:63> col:37 ftell 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x242d941c068 <col:51, col:58> col:58 _File 'FILE *'
|-FunctionDecl 0x242d9418598 <line:243:28, col:110> col:40 _fseeki64 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x242d941c2b8 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x242d941c338 <col:77, col:85> col:85 _Offset 'long long'
| `-ParmVarDecl 0x242d941c3b8 <col:99, col:103> col:103 _Origin 'int'
|-FunctionDecl 0x242d94187f8 <line:244:24, col:70> col:40 _ftelli64 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x242d9418678 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x242d9418cb8 <line:246:43> col:43 implicit fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x242d9418d58 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x242d9418dc0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x242d9418e28 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x242d9418e90 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x242d9418f18 prev 0x242d9418cb8 <col:28, col:159> col:43 fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x242d9418900 <col:81, col:94> col:94 _Str 'const void *'
| |-ParmVarDecl 0x242d9418978 <col:105, col:112> col:112 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d94189f0 <col:124, col:131> col:131 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x242d9418a68 <col:147, col:154> col:154 _File 'FILE *'
|-FunctionDecl 0x242d94190e0 <line:247:24, col:61> col:36 getc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x242d9419000 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x242d9419270 <line:248:24, col:48> col:36 getchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x242d94193f8 <line:249:24, col:53> col:36 _getmaxstdio 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x242d94217a0 <line:251:9, col:84> col:24 gets_s 'char *(char *, rsize_t) __attribute__((cdecl))':'char *(char *, rsize_t)'
| |-ParmVarDecl 0x242d94194c8 <col:53, col:60> col:60 _Buf 'char *'
| `-ParmVarDecl 0x242d94215f0 <col:71, col:79> col:79 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x242d9421ac8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:254:80 gets 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x242d9421980 <col:139, col:145> col:145 _Buffer 'char *'
| `-DeprecatedAttr 0x242d9421b70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x242d9421d90 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:255:16, col:54> col:28 _getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x242d9421cb0 <col:42, col:49> col:49 _File 'FILE *'
|-FunctionDecl 0x242d9421fb0 <line:258:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x242d9421e68 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x242d9422160 <line:261:28, col:68> col:40 _pclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x242d9422080 <col:56, col:63> col:63 _File 'FILE *'
|-FunctionDecl 0x242d94223b0 <line:262:24, col:101> col:39 _popen 'FILE *(const char *, const char *) __attribute__((cdecl))':'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x242d9422238 <col:53, col:66> col:66 _Command 'const char *'
| `-ParmVarDecl 0x242d94222b8 <col:83, col:96> col:96 _Mode 'const char *'
|-FunctionDecl 0x242d941e5b0 <line:264:40> col:40 implicit printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x242d941e650 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x242d941e6c0 <col:40> Implicit printf 1 2
|-FunctionDecl 0x242d941e728 prev 0x242d941e5b0 <col:28, col:102> col:40 printf 'int (const char *, ...)'
| |-ParmVarDecl 0x242d9422490 <col:77, col:90> col:90 _Format 'const char *'
| `-FormatAttr 0x242d941e818 <col:40> Inherited printf 1 2
|-FunctionDecl 0x242d941e948 <line:266:28, col:104> col:40 printf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x242d941e868 <col:79, col:92> col:92 _Format 'const char *'
|-FunctionDecl 0x242d941eb98 <line:268:28, col:79> col:40 putc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x242d941ea20 <col:50, col:54> col:54 _Ch 'int'
| `-ParmVarDecl 0x242d941ea98 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x242d941ed58 <line:269:28, col:60> col:40 putchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x242d941ec78 <col:53, col:57> col:57 _Ch 'int'
|-FunctionDecl 0x242d941ef78 <line:270:28, col:69> col:40 puts 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x242d941ee30 <col:52, col:65> col:65 _Str 'const char *'
|-FunctionDecl 0x242d941f1c8 <line:271:28, col:82> col:40 _putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x242d941f050 <col:51, col:55> col:55 _Word 'int'
| `-ParmVarDecl 0x242d941f0c8 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x242d941f388 <line:274:9, col:57> col:21 remove 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x242d941f2a8 <col:35, col:48> col:48 _Filename 'const char *'
|-FunctionDecl 0x242d94740d0 <line:275:24, col:109> col:36 rename 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x242d941f460 <col:50, col:63> col:63 _OldFilename 'const char *'
| `-ParmVarDecl 0x242d941f4e0 <col:84, col:97> col:97 _NewFilename 'const char *'
|-FunctionDecl 0x242d9474290 <line:276:9, col:58> col:21 _unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x242d94741b0 <col:36, col:49> col:49 _Filename 'const char *'
|-FunctionDecl 0x242d9474520 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:278:89> col:53 unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x242d9474440 <col:67, col:80> col:80 _Filename 'const char *'
| `-DeprecatedAttr 0x242d94745c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _unlink. See online help for details." ""
|-FunctionDecl 0x242d94747c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:281:9, col:49> col:22 rewind 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x242d94746e8 <col:37, col:44> col:44 _File 'FILE *'
|-FunctionDecl 0x242d9474950 <line:282:28, col:51> col:40 _rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x242d9474bf8 <line:283:69> col:69 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x242d9474c98 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x242d9474d08 <col:69> Implicit scanf 1 2
|-FunctionDecl 0x242d9474d70 prev 0x242d9474bf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:283:129> col:69 scanf 'int (const char *restrict, ...)'
| |-ParmVarDecl 0x242d9474ae0 <col:104, col:117> col:117 _Format 'const char *'
| |-FormatAttr 0x242d9474f48 <col:69> Inherited scanf 1 2
| `-DeprecatedAttr 0x242d9474e18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x242d94722f0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:284:177> col:76 _scanf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x242d94720b8 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x242d9472130 <col:155, col:165> col:165 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x242d94723a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _scanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x242d94725c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:288:40, col:116> col:52 scanf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x242d94724e8 <col:91, col:104> col:104 _Format 'const char *'
|-FunctionDecl 0x242d9472818 <line:290:40, col:157> col:52 _scanf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x242d94726a0 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x242d9472718 <col:135, col:145> col:145 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x242d9472bd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:292:150> col:55 setbuf 'void (FILE *, char *) __attribute__((cdecl))':'void (FILE *, char *)'
| |-ParmVarDecl 0x242d94729b0 <col:70, col:77> col:77 _File 'FILE *'
| |-ParmVarDecl 0x242d9472a30 <col:136, col:143> col:143 _Buffer 'char *'
| `-DeprecatedAttr 0x242d9472c88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using setvbuf instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x242d9472eb0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:293:28, col:66> col:40 _setmaxstdio 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x242d9472dd0 <col:58, col:62> col:62 _Max 'int'
|-FunctionDecl 0x242d946d0d8 <line:294:28, col:93> col:49 _set_output_format 'unsigned int (unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int)'
| `-ParmVarDecl 0x242d946cf90 <col:73, col:86> col:86 _Format 'unsigned int'
|-FunctionDecl 0x242d946d2c0 <line:295:28, col:72> col:49 _get_output_format 'unsigned int (void) __attribute__((cdecl))':'unsigned int (void)'
|-FunctionDecl 0x242d946d710 <line:296:28, col:145> col:40 setvbuf 'int (FILE *, char *, int, size_t) __attribute__((cdecl))':'int (FILE *, char *, int, size_t)'
| |-ParmVarDecl 0x242d946d388 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x242d946d408 <col:99, col:106> col:106 _Buf 'char *'
| |-ParmVarDecl 0x242d946d488 <col:117, col:121> col:121 _Mode 'int'
| `-ParmVarDecl 0x242d946d500 <col:133, col:140> col:140 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x242d946db90 <line:297:40, col:213> col:52 _snprintf_s 'int (char *, size_t, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, ...)'
| |-ParmVarDecl 0x242d946d800 <col:93, col:100> col:100 _DstBuf 'char *'
| |-ParmVarDecl 0x242d946d878 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d946d8f0 <col:140, col:147> col:147 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x242d946d970 <col:188, col:201> col:201 _Format 'const char *'
|-FunctionDecl 0x242d946dfa0 <line:300:40, col:188> col:52 sprintf_s 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x242d946dc80 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x242d946dcf8 <col:112, col:119> col:119 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x242d946dd78 <col:163, col:176> col:176 _Format 'const char *'
|-FunctionDecl 0x242d946e168 <line:303:24, col:101> col:36 _scprintf 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x242d946e088 <col:76, col:89> col:89 _Format 'const char *'
|-FunctionDecl 0x242d946e540 <line:304:70> col:70 implicit used sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x242d946e5e0 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x242d946e648 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x242d946e6c0 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x242d946e728 prev 0x242d946e540 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:304:157> col:70 used sscanf 'int (const char *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x242d946e300 <col:84, col:97> col:97 _Src 'const char *'
| |-ParmVarDecl 0x242d946e380 <col:132, col:145> col:145 _Format 'const char *'
| |-FormatAttr 0x242d946e908 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x242d946e7d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x242d946ecf8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:305:205> col:77 _sscanf_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x242d946ea18 <col:94, col:107> col:107 _Src 'const char *'
| |-ParmVarDecl 0x242d946ea98 <col:152, col:165> col:165 _Format 'const char *'
| |-ParmVarDecl 0x242d946eb10 <col:183, col:193> col:193 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x242d946edb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x242d94730f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:309:40, col:143> col:52 sscanf_s 'int (const char *, const char *, ...) __attribute__((cdecl))':'int (const char *, const char *, ...)'
| |-ParmVarDecl 0x242d946eef8 <col:68, col:81> col:81 _Src 'const char *'
| `-ParmVarDecl 0x242d9472ff0 <col:118, col:131> col:131 _Format 'const char *'
|-FunctionDecl 0x242d94733e8 <line:311:40, col:184> col:52 _sscanf_s_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x242d94731d0 <col:71, col:84> col:84 _Src 'const char *'
| |-ParmVarDecl 0x242d9473250 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x242d94732c8 <col:162, col:172> col:172 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x242d9473878 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:312:217> col:76 _snscanf 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x242d9473590 <col:121, col:134> col:134 _Src 'const char *'
| |-ParmVarDecl 0x242d9473608 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d9473688 <col:192, col:205> col:205 _Format 'const char *'
| `-DeprecatedAttr 0x242d9473930 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x242d9473f00 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:313:259> col:78 _snscanf_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x242d9473b70 <col:125, col:138> col:138 _Src 'const char *'
| |-ParmVarDecl 0x242d9473be8 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d9473c68 <col:206, col:219> col:219 _Format 'const char *'
| |-ParmVarDecl 0x242d9473ce0 <col:237, col:247> col:247 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x242d9470fd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x242d9471330 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:314:40, col:197> col:52 _snscanf_s 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x242d9471118 <col:99, col:112> col:112 _Src 'const char *'
| |-ParmVarDecl 0x242d9471190 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x242d9471210 <col:172, col:185> col:185 _Format 'const char *'
|-FunctionDecl 0x242d94716c8 <line:315:40, col:237> col:52 _snscanf_s_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x242d9471418 <col:101, col:114> col:114 _Src 'const char *'
| |-ParmVarDecl 0x242d9471490 <col:125, col:132> col:132 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d9471510 <col:184, col:197> col:197 _Format 'const char *'
| `-ParmVarDecl 0x242d9471588 <col:215, col:225> col:225 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x242d9471928 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:317:86> col:74 tmpfile 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
| `-DeprecatedAttr 0x242d94719c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpfile_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x242d9471c80 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:319:28, col:96> col:44 tmpfile_s 'errno_t (FILE **) __attribute__((cdecl))':'errno_t (FILE **)'
| `-ParmVarDecl 0x242d9471b10 <col:83, col:91> col:91 _File 'FILE **'
|-FunctionDecl 0x242d9475010 <line:320:28, col:106> col:44 tmpnam_s 'errno_t (char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t)'
| |-ParmVarDecl 0x242d9471d58 <col:75, col:82> col:82 _Buf 'char *'
| `-ParmVarDecl 0x242d9471dd0 <col:93, col:101> col:101 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x242d9475290 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:323:79 tmpnam 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x242d94751b0 <col:113, col:119> col:119 _Buffer 'char *'
| `-DeprecatedAttr 0x242d9475338 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x242d94755f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:324:28, col:81> col:40 ungetc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x242d9475480 <col:52, col:56> col:56 _Ch 'int'
| `-ParmVarDecl 0x242d94754f8 <col:69, col:76> col:76 _File 'FILE *'
|-FunctionDecl 0x242d9475a10 <line:325:40> col:40 implicit vfprintf 'int (FILE *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x242d9475ab0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x242d9475b18 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x242d9475b80 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x242d9475c00 <col:40> Implicit printf 2 0
|-FunctionDecl 0x242d9475c68 prev 0x242d9475a10 <col:28, col:139> col:40 vfprintf 'int (FILE *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x242d94756d0 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x242d9475750 <col:101, col:114> col:114 _Format 'const char *'
| |-ParmVarDecl 0x242d94757c8 <col:123, col:131> col:131 _ArgList 'va_list':'char *'
| `-FormatAttr 0x242d9475d68 <col:40> Inherited printf 2 0
|-FunctionDecl 0x242d9476020 <line:326:40> col:40 implicit vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x242d94760c0 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x242d9476128 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x242d9476190 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x242d9476210 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x242d9476278 prev 0x242d9476020 <col:28, col:138> col:40 vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x242d9475db0 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x242d9475e30 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x242d9475ea8 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x242d9476378 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x242d94765d8 <line:328:28, col:141> col:40 vfprintf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x242d94763c0 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x242d9476440 <col:103, col:116> col:116 _Format 'const char *'
| `-ParmVarDecl 0x242d94764b8 <col:125, col:133> col:133 _ArgList 'va_list':'char *'
|-FunctionDecl 0x242d94768d0 <line:329:28, col:140> col:40 vfscanf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x242d94766b8 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x242d9476738 <col:102, col:115> col:115 _Format 'const char *'
| `-ParmVarDecl 0x242d94767b0 <col:124, col:132> col:132 _ArgList 'va_list':'char *'
|-FunctionDecl 0x242d9476c18 <line:331:40> col:40 implicit vprintf 'int (const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x242d9476cb8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x242d9476d20 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x242d9476d98 <col:40> Implicit printf 1 0
|-FunctionDecl 0x242d9476e00 prev 0x242d9476c18 <col:28, col:116> col:40 vprintf 'int (const char *, __builtin_va_list)'
| |-ParmVarDecl 0x242d94769b8 <col:78, col:91> col:91 _Format 'const char *'
| |-ParmVarDecl 0x242d9476a30 <col:100, col:108> col:108 _ArgList 'va_list':'char *'
| `-FormatAttr 0x242d9476ef8 <col:40> Inherited printf 1 0
|-FunctionDecl 0x242d946f0e8 <line:332:40> col:40 implicit vscanf 'int (const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x242d946f188 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x242d946f1f0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x242d946f268 <col:40> Implicit scanf 1 0
|-FunctionDecl 0x242d946f2d0 prev 0x242d946f0e8 <col:28, col:115> col:40 vscanf 'int (const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x242d9476f48 <col:77, col:90> col:90 _Format 'const char *'
| |-ParmVarDecl 0x242d946efb0 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
| `-FormatAttr 0x242d946f3c8 <col:40> Inherited scanf 1 0
|-FunctionDecl 0x242d946f590 <line:334:28, col:118> col:40 vprintf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x242d946f418 <col:80, col:93> col:93 _Format 'const char *'
| `-ParmVarDecl 0x242d946f490 <col:102, col:110> col:110 _ArgList 'va_list':'char *'
|-FunctionDecl 0x242d946f7e8 <line:335:28, col:117> col:40 vscanf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x242d946f670 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x242d946f6e8 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x242d946fd48 <line:337:77> col:77 implicit vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x242d946fde8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x242d946fe50 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x242d946feb8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x242d946ff20 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x242d9477030 <col:77> Implicit printf 3 0
|-FunctionDecl 0x242d9477098 prev 0x242d946fd48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:337:218> col:77 vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x242d946f988 <col:111, col:118> col:118 _DstBuf 'char *'
| |-ParmVarDecl 0x242d946fa00 <col:132, col:139> col:139 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d946fa80 <col:180, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x242d946faf8 <col:202, col:210> col:210 _ArgList 'va_list':'char *'
| |-FormatAttr 0x242d9477288 <col:77> Inherited printf 3 0
| `-DeprecatedAttr 0x242d9477158 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x242d94776f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:339:28, col:206> col:40 vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x242d94772d8 <col:77, col:84> col:84 _DstBuf 'char *'
| |-ParmVarDecl 0x242d9477350 <col:98, col:105> col:105 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d94773c8 <col:120, col:127> col:127 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d9477448 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x242d94774c0 <col:190, col:198> col:198 _ArgList 'va_list':'char *'
|-FunctionDecl 0x242d9477b38 <line:342:40, col:227> col:52 _vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x242d94777f0 <col:94, col:101> col:101 _DstBuf 'char *'
| |-ParmVarDecl 0x242d9477868 <col:115, col:122> col:122 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d94778e0 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d9477960 <col:189, col:202> col:202 _Format 'const char *'
| `-ParmVarDecl 0x242d94779d8 <col:211, col:219> col:219 _ArgList 'va_list':'char *'
|-FunctionDecl 0x242d9477f08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:89 _snprintf 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x242d9477cf0 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x242d9477d68 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d9477de8 <col:246, col:260> col:260 _Format 'const char *'
| `-DeprecatedAttr 0x242d9477fc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x242d9470430 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:100 _vsnprintf 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x242d9470180 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x242d94701f8 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d9470278 <col:246, col:260> col:260 _Format 'const char *'
| |-ParmVarDecl 0x242d94702f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x242d94704f0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x242d94708e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:349:21, col:183> col:33 vsprintf_s 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x242d9470638 <col:73, col:80> col:80 _DstBuf 'char *'
| |-ParmVarDecl 0x242d94706b0 <col:94, col:101> col:101 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d9470730 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x242d94707a8 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x242d9470ca8 <line:351:40, col:149> col:52 vsscanf_s 'int (const char *, const char *, va_list) __attribute__((cdecl))':'int (const char *, const char *, va_list)'
| |-ParmVarDecl 0x242d94709d8 <col:62, col:75> col:75 _Src 'const char *'
| |-ParmVarDecl 0x242d9470a58 <col:111, col:124> col:124 _Format 'const char *'
| `-ParmVarDecl 0x242d9470ad0 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x242d947d130 <line:356:85> col:85 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x242d947d1d0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x242d947d238 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x242d947d2b0 <col:85> Implicit printf 2 3
|-FunctionDecl 0x242d947d318 prev 0x242d947d130 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:85 sprintf 'int (char *, const char *, ...)'
| |-ParmVarDecl 0x242d9470e50 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x242d9470ed0 <col:171, col:185> col:185 _Format 'const char *'
| |-FormatAttr 0x242d947d4f8 <col:85> Inherited printf 2 3
| `-DeprecatedAttr 0x242d947d3c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x242d947d920 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> col:94 implicit vsprintf 'int (char *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x242d947d9c0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x242d947da28 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x242d947da90 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x242d947db10 <col:94> Implicit printf 2 0
|-FunctionDecl 0x242d947db78 prev 0x242d947d920 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94 vsprintf 'int (char *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x242d947d608 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x242d947d688 <col:171, col:185> col:185 _Format 'const char *'
| |-ParmVarDecl 0x242d947d700 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-FormatAttr 0x242d947dd60 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> Inherited printf 2 0
| `-DeprecatedAttr 0x242d947dc30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x242d947a060 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:357:40> col:40 implicit vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x242d947a100 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x242d947a168 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x242d947a1d0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x242d947a250 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x242d947a2b8 prev 0x242d947a060 <col:28, col:138> col:40 vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x242d947ddb0 <col:48, col:61> col:61 _srcBuf 'const char *'
| |-ParmVarDecl 0x242d947de30 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x242d947dea8 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x242d947a3b8 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x242d947a580 <line:359:24, col:115> col:36 _vscprintf 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x242d947a408 <col:77, col:90> col:90 _Format 'const char *'
| `-ParmVarDecl 0x242d947a480 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
|-FunctionDecl 0x242d947a878 <line:360:28, col:170> col:40 _snprintf_c 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x242d947a660 <col:76, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x242d947a6d8 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x242d947a758 <col:145, col:158> col:158 _Format 'const char *'
|-FunctionDecl 0x242d947ac10 <line:361:28, col:183> col:40 _vsnprintf_c 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x242d947a960 <col:77, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x242d947a9d8 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d947aa58 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x242d947aad0 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x242d947ae78 <line:363:28, col:128> col:40 _fprintf_p 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x242d947acf8 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x242d947ad78 <col:103, col:116> col:116 _Format 'const char *'
|-FunctionDecl 0x242d947b070 <line:364:28, col:105> col:40 _printf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x242d947af58 <col:80, col:93> col:93 _Format 'const char *'
|-FunctionDecl 0x242d947b360 <line:365:28, col:168> col:40 _sprintf_p 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x242d947b148 <col:77, col:84> col:84 _Dst 'char *'
| |-ParmVarDecl 0x242d947b1c0 <col:95, col:102> col:102 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x242d947b240 <col:143, col:156> col:156 _Format 'const char *'
|-FunctionDecl 0x242d947b658 <line:366:28, col:142> col:40 _vfprintf_p 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x242d947b440 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x242d947b4c0 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x242d947b538 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x242d947b8b8 <line:367:28, col:119> col:40 _vprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x242d947b740 <col:81, col:94> col:94 _Format 'const char *'
| `-ParmVarDecl 0x242d947b7b8 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x242d947bc48 <line:368:28, col:182> col:40 _vsprintf_p 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x242d947b998 <col:78, col:85> col:85 _Dst 'char *'
| |-ParmVarDecl 0x242d947ba10 <col:96, col:103> col:103 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d947ba90 <col:144, col:157> col:157 _Format 'const char *'
| `-ParmVarDecl 0x242d947bb08 <col:166, col:174> col:174 _ArgList 'va_list':'char *'
|-FunctionDecl 0x242d947be18 <line:369:24, col:103> col:36 _scprintf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x242d947bd38 <col:78, col:91> col:91 _Format 'const char *'
|-FunctionDecl 0x242d9478040 <line:370:24, col:117> col:36 _vscprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x242d947bef0 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x242d947bf68 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x242d9478200 <line:371:9, col:61> col:21 _set_printf_count_output 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x242d9478120 <col:51, col:55> col:55 _Value 'int'
|-FunctionDecl 0x242d9478390 <line:372:9, col:50> col:21 _get_printf_count_output 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x242d94785d8 <line:374:28, col:143> col:40 _printf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x242d9478460 <col:90, col:103> col:103 _Format 'const char *'
| `-ParmVarDecl 0x242d94784d8 <col:121, col:131> col:131 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x242d9478830 <line:375:28, col:145> col:40 _printf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x242d94786b8 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x242d9478730 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x242d9478a88 <line:376:28, col:145> col:40 _printf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x242d9478910 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x242d9478988 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x242d9478e38 <line:377:28, col:157> col:40 _vprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x242d9478b68 <col:91, col:104> col:104 _Format 'const char *'
| |-ParmVarDecl 0x242d9478be0 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x242d9478c58 <col:141, col:149> col:149 _ArgList 'va_list':'char *'
|-FunctionDecl 0x242d947e1c0 <line:378:28, col:159> col:40 _vprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x242d9478f20 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x242d9478f98 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x242d947e0a0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x242d947e4b8 <line:379:28, col:159> col:40 _vprintf_s_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x242d947e2a8 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x242d947e320 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x242d947e398 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x242d947e7b0 <line:381:28, col:166> col:40 _fprintf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x242d947e598 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x242d947e618 <col:113, col:126> col:126 _Format 'const char *'
| `-ParmVarDecl 0x242d947e690 <col:144, col:154> col:154 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x242d947eaa8 <line:382:28, col:168> col:40 _fprintf_p_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x242d947e890 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x242d947e910 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x242d947e988 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x242d947eda0 <line:383:28, col:168> col:40 _fprintf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x242d947eb88 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x242d947ec08 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x242d947ec80 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x242d947c1e0 <line:384:28, col:147> col:40 _vfprintf_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x242d947ee80 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x242d947ef00 <col:81, col:94> col:94 _Format 'const char *'
| |-ParmVarDecl 0x242d947ef78 <col:112, col:122> col:122 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x242d947eff0 <col:131, col:139> col:139 _ArgList 'va_list':'char *'
|-FunctionDecl 0x242d947c578 <line:385:28, col:149> col:40 _vfprintf_p_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x242d947c2c8 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x242d947c348 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x242d947c3c0 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x242d947c438 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x242d947c910 <line:386:28, col:149> col:40 _vfprintf_s_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x242d947c660 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x242d947c6e0 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x242d947c758 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x242d947c7d0 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x242d947cda8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:388:221> col:78 _sprintf_l 'int (char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x242d947cac0 <col:112, col:119> col:119 _DstBuf 'char *'
| |-ParmVarDecl 0x242d947cb40 <col:168, col:181> col:181 _Format 'const char *'
| |-ParmVarDecl 0x242d947cbb8 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x242d947ce60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x242d94803d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:389:28, col:211> col:40 _sprintf_p_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x242d947cfa8 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x242d94800c0 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d9480140 <col:158, col:171> col:171 _Format 'const char *'
| `-ParmVarDecl 0x242d94801b8 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x242d9480770 <line:390:40, col:221> col:52 _sprintf_s_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x242d94804c0 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x242d9480538 <col:111, col:118> col:118 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d94805b8 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x242d9480630 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x242d9480cc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:391:195> col:79 _vsprintf_l 'int (char *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x242d9480960 <col:114, col:121> col:121 _DstBuf 'char *'
| |-ParmVarDecl 0x242d94809e0 <col:137, col:150> col:150 _Format 'const char *'
| |-ParmVarDecl 0x242d9480a58 <col:168> col:177 '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x242d9480ad0 <col:179, col:187> col:187 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x242d9480d80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x242d9479288 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:392:28, col:225> col:40 _vsprintf_p_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x242d9480ec8 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x242d9480f40 <col:101, col:108> col:108 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d9480fc0 <col:159, col:171> col:171 _Format 'const char *'
| |-ParmVarDecl 0x242d9481038 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x242d9479050 <col:209, col:217> col:217 _ArgList 'va_list':'char *'
|-FunctionDecl 0x242d94796c8 <line:393:40, col:235> col:52 _vsprintf_s_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x242d9479380 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x242d94793f8 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d9479478 <col:169, col:182> col:182 _Format 'const char *'
| |-ParmVarDecl 0x242d94794f0 <col:200, col:210> col:210 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x242d9479568 <col:219, col:227> col:227 _ArgList 'va_list':'char *'
|-FunctionDecl 0x242d9479938 <line:395:28, col:145> col:40 _scprintf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x242d94797c0 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x242d9479838 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x242d9479b90 <line:396:28, col:147> col:40 _scprintf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x242d9479a18 <col:94, col:107> col:107 _Format 'const char *'
| `-ParmVarDecl 0x242d9479a90 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x242d9479e80 <line:397:28, col:159> col:40 _vscprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x242d9479c70 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x242d9479ce8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x242d9479d60 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x242d9488270 <line:398:28, col:161> col:40 _vscprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x242d9479f68 <col:95, col:108> col:108 _Format 'const char *'
| |-ParmVarDecl 0x242d9479fe0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x242d9488150 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x242d94886c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:400:247> col:79 _snprintf_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x242d9488418 <col:115, col:122> col:122 _DstBuf 'char *'
| |-ParmVarDecl 0x242d9488490 <col:136, col:143> col:143 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d9488510 <col:194, col:207> col:207 _Format 'const char *'
| |-ParmVarDecl 0x242d9488588 <col:225, col:235> col:235 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x242d9488788 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x242d9488b80 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:401:28, col:210> col:40 _snprintf_c_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x242d94888d0 <col:78, col:85> col:85 _DstBuf 'char *'
| |-ParmVarDecl 0x242d9488948 <col:99, col:106> col:106 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d94889c8 <col:157, col:170> col:170 _Format 'const char *'
| `-ParmVarDecl 0x242d9488a40 <col:188, col:198> col:198 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x242d9486120 <line:402:40, col:245> col:52 _snprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x242d9488c70 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x242d9488ce8 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d9488d60 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d9488de0 <col:192, col:205> col:205 _Format 'const char *'
| `-ParmVarDecl 0x242d9488e58 <col:223, col:233> col:233 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x242d9486660 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:403:262> col:80 _vsnprintf_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x242d9486318 <col:117, col:124> col:124 _DstBuf 'char *'
| |-ParmVarDecl 0x242d9486390 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d9486410 <col:196, col:209> col:209 _Format 'const char *'
| |-ParmVarDecl 0x242d9486488 <col:227, col:237> col:237 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x242d9486500 <col:246, col:254> col:254 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x242d9486728 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x242d9486ba8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:404:28, col:176> col:40 _vsnprintf_c_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x242d9486878 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x242d94868f0 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d9486970 <col:118, col:129> col:130 'const char *'
| |-ParmVarDecl 0x242d94869e8 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x242d9486a60 <col:160, col:168> col:168 _ArgList 'va_list':'char *'
|-FunctionDecl 0x242d9487190 <line:405:28, col:245> col:40 _vsnprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x242d9486ca0 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x242d9486d18 <col:101, col:108> col:108 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d9486d90 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d9486e10 <col:181, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x242d9486e88 <col:210, col:220> col:220 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x242d9486f00 <col:229, col:237> col:237 _ArgList 'va_list':'char *'
|-FunctionDecl 0x242d9487550 <line:415:24, col:128> col:39 _wfsopen 'FILE *(const wchar_t *, const wchar_t *, int) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, int)'
| |-ParmVarDecl 0x242d9487288 <col:55, col:71> col:71 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x242d9487300 <col:89, col:105> col:105 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x242d9487380 <col:117, col:121> col:121 _ShFlag 'int'
|-FunctionDecl 0x242d94877c0 <line:417:28, col:70> col:43 fgetwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x242d9487650 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x242d94879d8 <line:418:28, col:58> col:43 _fgetwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x242d9487cb8 <line:419:28, col:88> col:43 fputwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x242d9487aa0 <col:55, col:63> col:63 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x242d9487b18 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x242d9487f00 <line:420:28, col:70> col:43 _fputwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x242d9487d90 <col:59, col:67> col:67 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x242d94820e0 <line:421:24, col:65> col:39 getwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x242d9487fd0 <col:53, col:60> col:60 _File 'FILE *'
|-FunctionDecl 0x242d9482268 <line:422:24, col:52> col:39 getwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x242d94824a0 <line:423:28, col:87> col:43 putwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x242d9482330 <col:54, col:62> col:62 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x242d94823a8 <col:75, col:82> col:82 _File 'FILE *'
|-FunctionDecl 0x242d9482650 <line:424:28, col:68> col:43 putwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x242d9482578 <col:57, col:65> col:65 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x242d94828f8 <line:425:28, col:88> col:43 ungetwc 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x242d9482720 <col:56, col:63> col:63 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x242d9482798 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x242d9482ca0 <line:427:28, col:141> col:46 fgetws 'wchar_t *(wchar_t *, int, FILE *) __attribute__((cdecl))':'wchar_t *(wchar_t *, int, FILE *)'
| |-ParmVarDecl 0x242d94829d0 <col:82, col:92> col:92 _Dst 'wchar_t *'
| |-ParmVarDecl 0x242d9482a50 <col:103, col:107> col:107 _SizeInWords 'int'
| `-ParmVarDecl 0x242d9482ac8 <col:129, col:136> col:136 _File 'FILE *'
|-FunctionDecl 0x242d9482fa0 <line:428:28, col:96> col:40 fputws 'int (const wchar_t *, FILE *) __attribute__((cdecl))':'int (const wchar_t *, FILE *)'
| |-ParmVarDecl 0x242d9482d80 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x242d9482df8 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x242d9481288 <line:429:28, col:124> col:46 _getws_s 'wchar_t *(wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, size_t)'
| |-ParmVarDecl 0x242d9483078 <col:84, col:94> col:94 _Str 'wchar_t *'
| `-ParmVarDecl 0x242d94810e0 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x242d9481590 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:431:83 _getws 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x242d9481420 <col:115, col:124> col:124 _String 'wchar_t *'
| `-DeprecatedAttr 0x242d9481638 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _getws_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x242d94818f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:432:28, col:74> col:40 _putws 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x242d9481778 <col:54, col:70> col:70 _Str 'const wchar_t *'
|-FunctionDecl 0x242d9481c00 <line:434:28, col:129> col:40 fwprintf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x242d94819c8 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x242d9481a40 <col:101, col:117> col:117 _Format 'const wchar_t *'
|-FunctionDecl 0x242d9481e50 <line:436:28, col:131> col:40 fwprintf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x242d9481cd8 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x242d9481d50 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x242d9489150 <line:438:28, col:106> col:40 wprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x242d9481f28 <col:78, col:94> col:94 _Format 'const wchar_t *'
|-FunctionDecl 0x242d9489300 <line:440:28, col:108> col:40 wprintf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x242d9489220 <col:80, col:96> col:96 _Format 'const wchar_t *'
|-FunctionDecl 0x242d94894b0 <line:442:24, col:105> col:36 _scwprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x242d94893d0 <col:77, col:93> col:93 _Format 'const wchar_t *'
|-FunctionDecl 0x242d9489848 <line:443:28, col:143> col:40 vfwprintf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x242d9489580 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x242d94895f8 <col:102, col:118> col:118 _Format 'const wchar_t *'
| `-ParmVarDecl 0x242d9489670 <col:127, col:135> col:135 _ArgList 'va_list':'char *'
|-FunctionDecl 0x242d9489b38 <line:444:28, col:142> col:40 vfwscanf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x242d9489928 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x242d94899a0 <col:101, col:117> col:117 _Format 'const wchar_t *'
| `-ParmVarDecl 0x242d9489a18 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x242d9489e28 <line:446:28, col:145> col:40 vfwprintf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x242d9489c18 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x242d9489c90 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x242d9489d08 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x242d948a160 <line:447:28, col:144> col:40 vfwscanf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x242d9489f08 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x242d9489f80 <col:103, col:119> col:119 _Format 'const wchar_t *'
| `-ParmVarDecl 0x242d9489ff8 <col:128, col:136> col:136 _ArgList 'va_list':'char *'
|-FunctionDecl 0x242d948a460 <line:449:28, col:120> col:40 vwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x242d948a240 <col:79, col:95> col:95 _Format 'const wchar_t *'
| `-ParmVarDecl 0x242d948a2b8 <col:104, col:112> col:112 _ArgList 'va_list':'char *'
|-FunctionDecl 0x242d948a6b0 <line:450:28, col:119> col:40 vwscanf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x242d948a538 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x242d948a5b0 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x242d948a900 <line:452:28, col:122> col:40 vwprintf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x242d948a788 <col:81, col:97> col:97 _Format 'const wchar_t *'
| `-ParmVarDecl 0x242d948a800 <col:106, col:114> col:114 _ArgList 'va_list':'char *'
|-FunctionDecl 0x242d948ab50 <line:453:28, col:121> col:40 vwscanf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x242d948a9d8 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x242d948aa50 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x242d948af08 <line:457:21, col:173> col:33 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x242d948ac28 <col:73, col:83> col:83 _Dst 'wchar_t *'
| |-ParmVarDecl 0x242d948aca0 <col:94, col:101> col:101 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x242d948ad18 <col:145, col:161> col:161 _Format 'const wchar_t *'
|-FunctionDecl 0x242d948b380 <line:461:21, col:187> col:33 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x242d948afe8 <col:74, col:84> col:84 _Dst 'wchar_t *'
| |-ParmVarDecl 0x242d948b060 <col:95, col:102> col:102 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d948b0d8 <col:146, col:162> col:162 _Format 'const wchar_t *'
| `-ParmVarDecl 0x242d948b170 <col:171, col:179> col:179 _ArgList 'va_list':'char *'
|-FunctionDecl 0x242d948b738 <line:462:40, col:156> col:52 vswscanf_s 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x242d948b468 <col:63, col:79> col:79 _Src 'const wchar_t *'
| |-ParmVarDecl 0x242d948b4e0 <col:115, col:131> col:131 _Format 'const wchar_t *'
| `-ParmVarDecl 0x242d948b558 <col:140, col:148> col:148 _ArgList 'va_list':'char *'
|-FunctionDecl 0x242d948ba28 <line:466:28, col:145> col:40 vswscanf 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x242d948b818 <col:49, col:65> col:65 _srcBuf 'const wchar_t *'
| |-ParmVarDecl 0x242d948b890 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x242d948b908 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x242d948bd18 <line:468:28, col:184> col:40 _swprintf_c 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x242d948bb08 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x242d948bb80 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x242d948bbf8 <col:156, col:172> col:172 _Format 'const wchar_t *'
|-FunctionDecl 0x242d948c0a0 <line:469:28, col:198> col:40 _vswprintf_c 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x242d948bdf8 <col:82, col:92> col:92 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x242d948be70 <col:106, col:113> col:113 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d948bee8 <col:157, col:173> col:173 _Format 'const wchar_t *'
| `-ParmVarDecl 0x242d948bf60 <col:182, col:190> col:190 _ArgList 'va_list':'char *'
|-FunctionDecl 0x242d94844b0 <line:471:40, col:220> col:52 _snwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x242d9484128 <col:94, col:104> col:104 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x242d94841a0 <col:118, col:125> col:125 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d9484218 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x242d9484290 <col:192, col:208> col:208 _Format 'const wchar_t *'
|-FunctionDecl 0x242d94849b8 <line:473:40, col:234> col:52 _vsnwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x242d9484598 <col:95, col:105> col:105 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x242d9484610 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d9484688 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d9484700 <col:193, col:209> col:209 _Format 'const wchar_t *'
| `-ParmVarDecl 0x242d9484778 <col:218, col:226> col:226 _ArgList 'va_list':'char *'
|-FunctionDecl 0x242d9484d78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:89 _snwprintf 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x242d9484b68 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x242d9484be0 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d9484c58 <col:254, col:271> col:271 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x242d9484e30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x242d9485340 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:101 _vsnwprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x242d9485030 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x242d9485110 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d9485188 <col:254, col:271> col:271 _Format 'const wchar_t *'
| |-ParmVarDecl 0x242d9485200 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x242d9485400 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x242d94856b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:480:28, col:132> col:40 _fwprintf_p 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x242d9485540 <col:60, col:67> col:67 _File 'FILE *'
| `-ParmVarDecl 0x242d94855b8 <col:104, col:120> col:120 _Format 'const wchar_t *'
|-FunctionDecl 0x242d9485870 <line:481:28, col:109> col:40 _wprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x242d9485790 <col:81, col:97> col:97 _Format 'const wchar_t *'
|-FunctionDecl 0x242d9485b50 <line:482:28, col:146> col:40 _vfwprintf_p 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x242d9485940 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x242d94859b8 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x242d9485a30 <col:130, col:138> col:138 _ArgList 'va_list':'char *'
|-FunctionDecl 0x242d9485da8 <line:483:28, col:123> col:40 _vwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x242d9485c30 <col:82, col:98> col:98 _Format 'const wchar_t *'
| `-ParmVarDecl 0x242d9485ca8 <col:107, col:115> col:115 _ArgList 'va_list':'char *'
|-FunctionDecl 0x242d948dfc0 <line:484:28, col:178> col:40 _swprintf_p 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x242d9485e80 <col:78, col:88> col:88 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x242d9485ef8 <col:102, col:109> col:109 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x242d9485f70 <col:150, col:166> col:166 _Format 'const wchar_t *'
|-FunctionDecl 0x242d948e348 <line:485:28, col:192> col:40 _vswprintf_p 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x242d948e0a0 <col:79, col:89> col:89 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x242d948e118 <col:103, col:110> col:110 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d948e190 <col:151, col:167> col:167 _Format 'const wchar_t *'
| `-ParmVarDecl 0x242d948e208 <col:176, col:184> col:184 _ArgList 'va_list':'char *'
|-FunctionDecl 0x242d948e510 <line:486:24, col:107> col:36 _scwprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x242d948e430 <col:79, col:95> col:95 _Format 'const wchar_t *'
|-FunctionDecl 0x242d948e758 <line:487:24, col:121> col:36 _vscwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x242d948e5e0 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x242d948e658 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x242d948ea60 <line:489:28, col:147> col:40 _wprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x242d948e830 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x242d948e8a8 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x242d948ecb0 <line:490:28, col:149> col:40 _wprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x242d948eb38 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x242d948ebb0 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x242d948ef00 <line:491:28, col:149> col:40 _wprintf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x242d948ed88 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x242d948ee00 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x242d9495328 <line:492:28, col:161> col:40 _vwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x242d9495058 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x242d94950d0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x242d9495148 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x242d9495618 <line:493:28, col:163> col:40 _vwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x242d9495408 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x242d9495480 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x242d94954f8 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x242d9495908 <line:494:28, col:163> col:40 _vwprintf_s_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x242d94956f8 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x242d9495770 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x242d94957e8 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x242d9495cc8 <line:496:28, col:170> col:40 _fwprintf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x242d94959e8 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x242d9495a60 <col:114, col:130> col:130 _Format 'const wchar_t *'
| `-ParmVarDecl 0x242d9495ad8 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x242d9496040 <line:497:28, col:172> col:40 _fwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x242d9495da8 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x242d9495e20 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x242d9495e98 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x242d9496330 <line:498:28, col:172> col:40 _fwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x242d9496120 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x242d9496198 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x242d9496210 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x242d9496780 <line:499:28, col:184> col:40 _vfwprintf_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x242d9496410 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x242d9496488 <col:115, col:131> col:131 _Format 'const wchar_t *'
| |-ParmVarDecl 0x242d9496500 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x242d9496578 <col:168, col:176> col:176 _ArgList 'va_list':'char *'
|-FunctionDecl 0x242d9496b10 <line:500:28, col:186> col:40 _vfwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x242d9496868 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x242d94968e0 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x242d9496958 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x242d94969d0 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x242d9496ea0 <line:501:28, col:186> col:40 _vfwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x242d9496bf8 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x242d9496c70 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x242d9496ce8 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x242d9496d60 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x242d948f2e0 <line:503:28, col:218> col:40 _swprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x242d9496f88 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x242d948efd0 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d948f048 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x242d948f0c0 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x242d948f670 <line:504:28, col:218> col:40 _swprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x242d948f3c8 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x242d948f440 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d948f4b8 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x242d948f530 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x242d948fa00 <line:505:40, col:228> col:52 _swprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x242d948f758 <col:91, col:101> col:101 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x242d948f7d0 <col:115, col:122> col:122 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d948f848 <col:172, col:188> col:188 _Format 'const wchar_t *'
| `-ParmVarDecl 0x242d948f8c0 <col:206, col:216> col:216 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x242d948ff08 <line:506:28, col:232> col:40 used _vswprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x242d948fae8 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x242d948fb60 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d948fbd8 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x242d948fc50 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x242d948fcc8 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x242d9494388 <line:507:28, col:232> col:40 _vswprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x242d9494048 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x242d94940c0 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d9494138 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x242d94941b0 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x242d9494228 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x242d94947b8 <line:508:40, col:242> col:52 _vswprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x242d9494478 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x242d94944f0 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d9494568 <col:173, col:189> col:189 _Format 'const wchar_t *'
| |-ParmVarDecl 0x242d94945e0 <col:207, col:217> col:217 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x242d9494658 <col:226, col:234> col:234 _ArgList 'va_list':'char *'
|-FunctionDecl 0x242d9494a20 <line:510:24, col:145> col:36 _scwprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x242d94948a8 <col:89, col:105> col:105 _Format 'const wchar_t *'
| `-ParmVarDecl 0x242d9494920 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x242d9494c70 <line:511:24, col:147> col:36 _scwprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x242d9494af8 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x242d9494b70 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x242d9494f58 <line:512:24, col:161> col:36 _vscwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x242d9494d48 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x242d9494dc0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x242d9494e38 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x242d94933a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:514:255> col:80 _snwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x242d9493100 <col:117, col:127> col:127 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x242d9493178 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d94931f0 <col:199, col:215> col:215 _Format 'const wchar_t *'
| |-ParmVarDecl 0x242d9493268 <col:233, col:243> col:243 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x242d9493468 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x242d94939d8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:515:40, col:252> col:52 _snwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x242d94935b0 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x242d9493628 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d94936a0 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d9493718 <col:196, col:212> col:212 _Format 'const wchar_t *'
| `-ParmVarDecl 0x242d9493790 <col:230, col:240> col:240 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x242d9493f10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:516:270> col:81 _vsnwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x242d9493bd0 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x242d9493c48 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d9493cc0 <col:201, col:217> col:217 _Format 'const wchar_t *'
| |-ParmVarDecl 0x242d9493d38 <col:235, col:245> col:245 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x242d9493db0 <col:254, col:262> col:262 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x242d9497050 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x242d9497660 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:517:40, col:266> col:52 _vsnwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x242d9497198 <col:93, col:103> col:103 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x242d9497210 <col:117, col:124> col:124 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d9497288 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d9497300 <col:197, col:213> col:213 _Format 'const wchar_t *'
| |-ParmVarDecl 0x242d9497378 <col:231, col:241> col:241 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x242d94973f0 <col:250, col:258> col:258 _ArgList 'va_list':'char *'
|-FunctionDecl 0x242d9497b60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:110 _swprintf 'int (wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x242d9497928 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x242d94979a0 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-DeprecatedAttr 0x242d9497c10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x242d9497d28 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x242d9491258 <col:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:134 _vswprintf 'int (wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x242d9497fe0 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x242d9491000 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-ParmVarDecl 0x242d9491078 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x242d9491310 <line:275:47, col:63> "This function or variable may be unsafe. Consider using vswprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x242d9491428 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x242d94919c8 <col:36, line:1961:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:110 __swprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x242d94916e8 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x242d9491760 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x242d94917d8 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-DeprecatedAttr 0x242d9491a80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __swprintf_l_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x242d9491ba0 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x242d9498270 <col:36, line:1962:166> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:124 __vswprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x242d9491e60 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x242d9491ed8 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x242d9491f50 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x242d9498060 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1962:153, col:161> col:161 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x242d9498330 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vswprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x242d9498450 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x242d9498758 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:36:1, line:44:1> line:36:21 swprintf 'int (wchar_t *, size_t, const wchar_t *, ...)' static inline
| |-ParmVarDecl 0x242d9498578 <col:53, col:63> col:63 used _String 'wchar_t *'
| |-ParmVarDecl 0x242d94985f0 <col:72, col:79> col:79 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d9498668 <col:117, col:133> col:133 used _Format 'const wchar_t *'
| `-CompoundStmt 0x242d94922a0 <line:37:1, line:44:1>
|   |-DeclStmt 0x242d94988a0 <line:38:5, col:21>
|   | `-VarDecl 0x242d9498838 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x242d9498938 <line:39:5, col:13>
|   | `-VarDecl 0x242d94988d0 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x242d9498c90 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x242d9498c78 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x242d9498b90 <col:34> '<builtin fn type>' Function 0x242d9498a28 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x242d9498bc8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:40:19> 'va_list':'char *' lvalue Var 0x242d9498838 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x242d9498c00 <col:29> 'const wchar_t *' lvalue ParmVar 0x242d9498668 '_Format' 'const wchar_t *'
|   |-BinaryOperator 0x242d9498f50 <line:41:5, col:67> 'int' '='
|   | |-DeclRefExpr 0x242d9498cc0 <col:5> 'int' lvalue Var 0x242d94988d0 '_Ret' 'int'
|   | `-CallExpr 0x242d9498e90 <col:12, col:67> 'int'
|   |   |-ImplicitCastExpr 0x242d9498e78 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x242d9498cf8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x242d948ff08 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x242d9498ed8 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x242d9498d18 <col:27> 'wchar_t *' lvalue ParmVar 0x242d9498578 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x242d9498ef0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x242d9498d38 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x242d94985f0 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x242d9498f08 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x242d9498d58 <col:44> 'const wchar_t *' lvalue ParmVar 0x242d9498668 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x242d9498f20 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|   |   | `-ParenExpr 0x242d9498de0 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x242d9498db8 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x242d9498d78 <col:26> 'int' 0
|   |   `-ImplicitCastExpr 0x242d9498f38 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:41:59> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x242d9498e00 <col:59> 'va_list':'char *' lvalue Var 0x242d9498838 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x242d9492230 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x242d9492218 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x242d9492168 <col:34> '<builtin fn type>' Function 0x242d9492000 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x242d94921a0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:42:17> 'va_list':'char *' lvalue Var 0x242d9498838 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x242d9492290 <line:43:5, col:12>
|     `-ImplicitCastExpr 0x242d9492278 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x242d9492258 <col:12> 'int' lvalue Var 0x242d94988d0 '_Ret' 'int'
|-FunctionDecl 0x242d9498a28 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34> col:34 implicit used __builtin_va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x242d9498ac8 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x242d9498b38 <col:34> Implicit
|-FunctionDecl 0x242d9492000 <line:27:34> col:34 implicit used __builtin_va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x242d94920a0 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x242d9492110 <col:34> Implicit
|-FunctionDecl 0x242d9492598 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:49:1, line:52:1> line:49:31 vswprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)' static inline
| |-ParmVarDecl 0x242d94922f0 <col:64, col:74> col:74 used _String 'wchar_t *'
| |-ParmVarDecl 0x242d9492368 <col:83, col:90> col:90 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d94923e0 <col:138, col:154> col:154 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x242d9492458 <col:163, col:171> col:171 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x242d9492880 <line:50:1, line:52:1>
|   `-ReturnStmt 0x242d9492870 <line:51:5, col:62>
|     `-CallExpr 0x242d94927b0 <col:12, col:62> 'int'
|       |-ImplicitCastExpr 0x242d9492798 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x242d9492670 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x242d948ff08 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x242d94927f8 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x242d9492690 <col:27> 'wchar_t *' lvalue ParmVar 0x242d94922f0 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x242d9492810 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x242d94926b0 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x242d9492368 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x242d9492828 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x242d94926d0 <col:44> 'const wchar_t *' lvalue ParmVar 0x242d94923e0 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x242d9492840 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|       | `-ParenExpr 0x242d9492758 <col:17, col:27> 'void *'
|       |   `-CStyleCastExpr 0x242d9492730 <col:18, col:26> 'void *' <NullToPointer>
|       |     `-IntegerLiteral 0x242d94926f0 <col:26> 'int' 0
|       `-ImplicitCastExpr 0x242d9492858 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:51:59> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x242d9492778 <col:59> 'va_list':'char *' lvalue ParmVar 0x242d9492458 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x242d9492b20 <line:60:1, line:68:1> line:60:21 _swprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)' static inline
| |-ParmVarDecl 0x242d94928a8 <col:56, col:66> col:66 used _String 'wchar_t *'
| |-ParmVarDecl 0x242d9492920 <col:75, col:82> col:82 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d9492998 <col:130, col:146> col:146 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x242d9492a10 <col:155, col:165> col:165 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| `-CompoundStmt 0x242d949f178 <line:61:1, line:68:1>
|   |-DeclStmt 0x242d9492c70 <line:62:5, col:21>
|   | `-VarDecl 0x242d9492c08 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x242d9492d08 <line:63:5, col:13>
|   | `-VarDecl 0x242d9492ca0 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x242d9492db0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x242d9492d98 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x242d9492d20 <col:34> '<builtin fn type>' Function 0x242d9498a28 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x242d9492d40 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:64:19> 'va_list':'char *' lvalue Var 0x242d9492c08 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x242d9492d78 <col:29> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x242d9492a10 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |-BinaryOperator 0x242d9492fb0 <line:65:5, col:72> 'int' '='
|   | |-DeclRefExpr 0x242d9492de0 <col:5> 'int' lvalue Var 0x242d9492ca0 '_Ret' 'int'
|   | `-CallExpr 0x242d9492ef0 <col:12, col:72> 'int'
|   |   |-ImplicitCastExpr 0x242d9492ed8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x242d9492e18 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x242d948ff08 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x242d9492f38 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x242d9492e38 <col:27> 'wchar_t *' lvalue ParmVar 0x242d94928a8 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x242d9492f50 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x242d9492e58 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x242d9492920 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x242d9492f68 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x242d9492e78 <col:44> 'const wchar_t *' lvalue ParmVar 0x242d9492998 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x242d9492f80 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x242d9492e98 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x242d9492a10 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |   `-ImplicitCastExpr 0x242d9492f98 <col:64> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x242d9492eb8 <col:64> 'va_list':'char *' lvalue Var 0x242d9492c08 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x242d949f108 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x242d949f0f0 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x242d9492fd0 <col:34> '<builtin fn type>' Function 0x242d9492000 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x242d949f0d0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:66:17> 'va_list':'char *' lvalue Var 0x242d9492c08 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x242d949f168 <line:67:5, col:12>
|     `-ImplicitCastExpr 0x242d949f150 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x242d949f130 <col:12> 'int' lvalue Var 0x242d9492ca0 '_Ret' 'int'
|-FunctionDecl 0x242d949f508 <line:73:1, line:76:1> line:73:31 _vswprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' static inline
| |-ParmVarDecl 0x242d949f1c8 <col:67, col:77> col:77 used _String 'wchar_t *'
| |-ParmVarDecl 0x242d949f240 <col:86, col:93> col:93 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d949f2b8 <col:141, col:157> col:157 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x242d949f330 <col:166, col:176> col:176 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x242d949f3a8 <col:187, col:195> col:195 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x242d949f790 <line:74:1, line:76:1>
|   `-ReturnStmt 0x242d949f780 <line:75:5, col:67>
|     `-CallExpr 0x242d949f6c0 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x242d949f6a8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x242d949f5e8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x242d948ff08 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x242d949f708 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x242d949f608 <col:27> 'wchar_t *' lvalue ParmVar 0x242d949f1c8 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x242d949f720 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x242d949f628 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x242d949f240 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x242d949f738 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x242d949f648 <col:44> 'const wchar_t *' lvalue ParmVar 0x242d949f2b8 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x242d949f750 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|       | `-DeclRefExpr 0x242d949f668 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x242d949f330 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|       `-ImplicitCastExpr 0x242d949f768 <col:64> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x242d949f688 <col:64> 'va_list':'char *' lvalue ParmVar 0x242d949f3a8 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x242d949f9d8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:555:24, col:129> col:42 _wtempnam 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x242d949f7b8 <col:63, col:79> col:79 _Directory 'const wchar_t *'
| `-ParmVarDecl 0x242d949f830 <col:102, col:118> col:118 _FilePrefix 'const wchar_t *'
|-FunctionDecl 0x242d949fc28 <line:561:24, col:119> col:36 _vscwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x242d949fab0 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x242d949fb28 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x242d949ff10 <line:562:24, col:159> col:36 _vscwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x242d949fd00 <col:90, col:106> col:106 _Format 'const wchar_t *'
| |-ParmVarDecl 0x242d949fd78 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x242d949fdf0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x242d949d228 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:563:158> col:71 fwscanf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x242d949d0b0 <col:87, col:94> col:94 _File 'FILE *'
| |-ParmVarDecl 0x242d949d128 <col:130, col:146> col:146 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x242d949d2d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x242d949d6e8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:564:206> col:78 _fwscanf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x242d949d4d8 <col:97, col:104> col:104 _File 'FILE *'
| |-ParmVarDecl 0x242d949d550 <col:150, col:166> col:166 _Format 'const wchar_t *'
| |-ParmVarDecl 0x242d949d5c8 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x242d949d7a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x242d949da58 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:568:28, col:131> col:40 fwscanf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x242d949d8e0 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x242d949d958 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x242d949dd40 <line:570:28, col:172> col:40 _fwscanf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x242d949db30 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x242d949dba8 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x242d949dc20 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x242d949e130 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:571:165> col:71 swscanf 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x242d949dee0 <col:86, col:102> col:102 _Src 'const wchar_t *'
| |-ParmVarDecl 0x242d949df58 <col:137, col:153> col:153 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x242d949e1e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using swscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x242d949e6b8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:572:213> col:78 _swscanf_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x242d949e3e0 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x242d949e458 <col:157, col:173> col:173 _Format 'const wchar_t *'
| |-ParmVarDecl 0x242d949e4d0 <col:191, col:201> col:201 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x242d949e770 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x242d949ea28 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:574:40, col:149> col:52 swscanf_s 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x242d949e8b0 <col:69, col:84> col:84 _Src 'const wchar_t *'
| `-ParmVarDecl 0x242d949e928 <col:121, col:137> col:137 _Format 'const wchar_t *'
|-FunctionDecl 0x242d949ed10 <line:576:40, col:191> col:52 _swscanf_s_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x242d949eb00 <col:72, col:88> col:88 _Src 'const wchar_t *'
| |-ParmVarDecl 0x242d949eb78 <col:135, col:151> col:151 _Format 'const wchar_t *'
| `-ParmVarDecl 0x242d949ebf0 <col:169, col:179> col:179 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x242d949c188 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:577:219> col:77 _snwscanf 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x242d949eeb0 <col:117, col:133> col:133 _Src 'const wchar_t *'
| |-ParmVarDecl 0x242d949ef28 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d949efa0 <col:191, col:207> col:207 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x242d949c240 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x242d949c7c0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:578:261> col:79 _snwscanf_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x242d949c440 <col:121, col:137> col:137 _Src 'const wchar_t *'
| |-ParmVarDecl 0x242d949c4b8 <col:148, col:155> col:155 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d949c530 <col:205, col:221> col:221 _Format 'const wchar_t *'
| |-ParmVarDecl 0x242d949c5a8 <col:239, col:249> col:249 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x242d949c880 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x242d949cbd0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:579:40, col:198> col:52 _snwscanf_s 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x242d949c9c0 <col:94, col:110> col:110 _Src 'const wchar_t *'
| |-ParmVarDecl 0x242d949ca38 <col:121, col:128> col:128 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x242d949cab0 <col:170, col:186> col:186 _Format 'const wchar_t *'
|-FunctionDecl 0x242d949cf58 <line:580:40, col:238> col:52 _snwscanf_s_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x242d949ccb0 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x242d949cd28 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d949cda0 <col:182, col:198> col:198 _Format 'const wchar_t *'
| `-ParmVarDecl 0x242d949ce18 <col:216, col:226> col:226 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x242d94a0290 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:581:134> col:70 wscanf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| |-ParmVarDecl 0x242d94a01b0 <col:106, col:122> col:122 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x242d94a0338 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x242d94a06b0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:582:182> col:77 _wscanf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x242d94a0538 <col:126, col:142> col:142 _Format 'const wchar_t *'
| |-ParmVarDecl 0x242d94a05b0 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x242d94a0760 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x242d94a0980 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:584:40, col:120> col:52 wscanf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x242d94a08a0 <col:92, col:108> col:108 _Format 'const wchar_t *'
|-FunctionDecl 0x242d94a0bc8 <line:586:40, col:161> col:52 _wscanf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x242d94a0a50 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x242d94a0ac8 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x242d94a0ec8 <line:589:24, col:99> col:39 _wfdopen 'FILE *(int, const wchar_t *) __attribute__((cdecl))':'FILE *(int, const wchar_t *)'
| |-ParmVarDecl 0x242d94a0ca8 <col:53, col:57> col:57 _FileHandle 'int'
| `-ParmVarDecl 0x242d94a0d20 <col:78, col:94> col:94 _Mode 'const wchar_t *'
|-FunctionDecl 0x242d949a228 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:590:144> col:74 _wfopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x242d94a1060 <col:89, col:105> col:105 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x242d949a080 <col:123, col:139> col:139 _Mode 'const wchar_t *'
| `-DeprecatedAttr 0x242d949a2d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x242d949a6e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:591:28, col:157> col:44 _wfopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x242d949a420 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x242d949a498 <col:102, col:118> col:118 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x242d949a510 <col:136, col:152> col:152 _Mode 'const wchar_t *'
|-FunctionDecl 0x242d949ab40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:592:173> col:76 _wfreopen 'FILE *(const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x242d949a880 <col:93, col:109> col:109 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x242d949a8f8 <col:127, col:143> col:143 _Mode 'const wchar_t *'
| |-ParmVarDecl 0x242d949a970 <col:158, col:165> col:165 _OldFile 'FILE *'
| `-DeprecatedAttr 0x242d949abf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfreopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x242d94a2148 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:593:28, col:184> col:44 _wfreopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x242d949ad40 <col:82, col:90> col:90 _File 'FILE **'
| |-ParmVarDecl 0x242d949adb8 <col:104, col:120> col:120 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x242d949ae30 <col:138, col:154> col:154 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x242d949aea8 <col:169, col:176> col:176 _OldFile 'FILE *'
|-FunctionDecl 0x242d94a23a0 <line:597:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x242d94a2230 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x242d94a25e0 <line:600:24, col:107> col:39 _wpopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x242d94a2470 <col:54, col:69> col:69 _Command 'const wchar_t *'
| `-ParmVarDecl 0x242d94a24e8 <col:86, col:102> col:102 _Mode 'const wchar_t *'
|-FunctionDecl 0x242d94a2798 <line:602:9, col:62> col:21 _wremove 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x242d94a26b8 <col:37, col:53> col:53 _Filename 'const wchar_t *'
|-FunctionDecl 0x242d94a2a88 <line:603:28, col:127> col:44 _wtmpnam_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x242d94a2868 <col:84, col:94> col:94 _DstBuf 'wchar_t *'
| `-ParmVarDecl 0x242d94a28e0 <col:108, col:115> col:115 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x242d94a2cf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:605:82 _wtmpnam 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x242d94a2c20 <col:118, col:127> col:127 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x242d94a2da0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wtmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x242d94a2fb8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:607:28, col:78> col:43 _fgetwc_nolock 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x242d94a2ee0 <col:66, col:73> col:73 _File 'FILE *'
|-FunctionDecl 0x242d949b188 <line:608:28, col:96> col:43 _fputwc_nolock 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x242d94a3088 <col:63, col:71> col:71 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x242d949b090 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x242d949b3d0 <line:609:28, col:96> col:43 _ungetwc_nolock 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x242d949b260 <col:64, col:71> col:71 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x242d949b2d8 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x242d949b580 <line:670:9, col:53> col:22 _lock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x242d949b4a8 <col:41, col:48> col:48 _File 'FILE *'
|-FunctionDecl 0x242d949b728 <line:671:9, col:55> col:22 _unlock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x242d949b650 <col:43, col:50> col:50 _File 'FILE *'
|-FunctionDecl 0x242d949b8d8 <line:673:28, col:75> col:40 _fclose_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x242d949b7f8 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x242d949ba88 <line:674:28, col:79> col:40 _fflush_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x242d949b9a8 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x242d949be00 <line:675:28, col:179> col:43 _fread_nolock 'size_t (void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x242d949bb60 <col:97, col:104> col:104 _DstBuf 'void *'
| |-ParmVarDecl 0x242d949bbd8 <col:118, col:125> col:125 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d949bc50 <col:144, col:151> col:151 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x242d949bcc8 <col:167, col:174> col:174 _File 'FILE *'
|-FunctionDecl 0x242d94a32e0 <line:676:28, col:203> col:43 _fread_nolock_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x242d949bef0 <col:99, col:106> col:106 _DstBuf 'void *'
| |-ParmVarDecl 0x242d949bf68 <col:120, col:127> col:127 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d949bfe0 <col:142, col:149> col:149 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d94a3110 <col:168, col:175> col:175 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x242d94a3188 <col:191, col:198> col:198 _File 'FILE *'
|-FunctionDecl 0x242d94a35f0 <line:677:28, col:111> col:40 _fseek_nolock 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x242d94a33d0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x242d94a3450 <col:81, col:86> col:86 _Offset 'long'
| `-ParmVarDecl 0x242d94a34d0 <col:100, col:104> col:104 _Origin 'int'
|-FunctionDecl 0x242d94a37b0 <line:678:24, col:71> col:37 _ftell_nolock 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x242d94a36d0 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x242d94a3aa0 <line:679:28, col:117> col:40 _fseeki64_nolock 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x242d94a3880 <col:65, col:72> col:72 _File 'FILE *'
| |-ParmVarDecl 0x242d94a3900 <col:84, col:92> col:92 _Offset 'long long'
| `-ParmVarDecl 0x242d94a3980 <col:106, col:110> col:110 _Origin 'int'
|-FunctionDecl 0x242d94a3c60 <line:680:24, col:77> col:40 _ftelli64_nolock 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x242d94a3b80 <col:65, col:72> col:72 _File 'FILE *'
|-FunctionDecl 0x242d94a3fd8 <line:681:28, col:170> col:43 _fwrite_nolock 'size_t (const void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (const void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x242d94a3d38 <col:89, col:102> col:102 _DstBuf 'const void *'
| |-ParmVarDecl 0x242d94a3db0 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d94a3e28 <col:135, col:142> col:142 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x242d94a3ea0 <col:158, col:165> col:165 _File 'FILE *'
|-FunctionDecl 0x242d94a4298 <line:682:28, col:89> col:40 _ungetc_nolock 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x242d94a4120 <col:60, col:64> col:64 _Ch 'int'
| `-ParmVarDecl 0x242d94a4198 <col:77, col:84> col:84 _File 'FILE *'
|-FunctionDecl 0x242d94a45d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:709:136> col:57 tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x242d94a4450 <col:76, col:89> col:89 _Directory 'const char *'
| |-ParmVarDecl 0x242d94a44d0 <col:112, col:125> col:125 _FilePrefix 'const char *'
| `-DeprecatedAttr 0x242d94a4680 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tempnam. See online help for details." ""
|-FunctionDecl 0x242d94a4938 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:715:89> col:75 fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x242d94a49d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcloseall. See online help for details." ""
|-FunctionDecl 0x242d94a4d18 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:716:127> col:71 fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x242d94a4ba0 <col:83, col:87> col:87 _FileHandle 'int'
| |-ParmVarDecl 0x242d94a4c20 <col:107, col:120> col:120 _Format 'const char *'
| `-DeprecatedAttr 0x242d94a4dc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fdopen. See online help for details." ""
|-FunctionDecl 0x242d94a5130 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:717:87> col:74 fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x242d94a51d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fgetchar. See online help for details." ""
|-FunctionDecl 0x242d94a5470 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:718:92> col:68 fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x242d94a5390 <col:80, col:87> col:87 _File 'FILE *'
| `-DeprecatedAttr 0x242d94a5518 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fileno. See online help for details." ""
|-FunctionDecl 0x242d94a5798 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:719:87> col:74 flushall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x242d94a5838 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _flushall. See online help for details." ""
|-FunctionDecl 0x242d94a5ae0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:720:95> col:74 fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| |-ParmVarDecl 0x242d94a5a00 <col:88, col:92> col:92 _Ch 'int'
| `-DeprecatedAttr 0x242d94a5b88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fputchar. See online help for details." ""
|-FunctionDecl 0x242d94a5e68 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:721:91> col:66 getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x242d94a5d88 <col:79, col:86> col:86 _File 'FILE *'
| `-DeprecatedAttr 0x242d94a5f10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _getw. See online help for details." ""
|-FunctionDecl 0x242d94a62b8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:722:109> col:70 putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x242d94a6140 <col:80, col:84> col:84 _Ch 'int'
| |-ParmVarDecl 0x242d94a61b8 <col:97, col:104> col:104 _File 'FILE *'
| `-DeprecatedAttr 0x242d94a6368 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putw. See online help for details." ""
|-FunctionDecl 0x242d94a6628 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:723:77> col:67 rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x242d94a66c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _rmtmp. See online help for details." ""
|-FunctionDecl 0x242d94a6900 <D:\Microsoft Visual Studio 12.0\VC\include\ctype.h:49:9, col:58> col:40 __pctype_func 'const unsigned short *(void) __attribute__((cdecl))':'const unsigned short *(void)'
|-VarDecl 0x242d94a69d0 <line:51:9, col:38> col:38 _pctype 'const unsigned short *' extern
|-VarDecl 0x242d94a6ad0 <line:62:9, col:45> col:37 _wctype 'const unsigned short []' extern
|-FunctionDecl 0x242d94a6cc8 <line:73:9, col:53> col:34 __pwctype_func 'const wctype_t *(void) __attribute__((cdecl))':'const wctype_t *(void)'
|-VarDecl 0x242d94a6d90 <line:75:9, col:32> col:32 _pwctype 'const wctype_t *' extern
|-FunctionDecl 0x242d94a7010 <line:119:24, col:72> col:36 _isctype 'int (int, int) __attribute__((cdecl))':'int (int, int)'
| |-ParmVarDecl 0x242d94a6e28 <col:50, col:54> col:54 _C 'int'
| `-ParmVarDecl 0x242d94a6ea8 <col:63, col:67> col:67 _Type 'int'
|-FunctionDecl 0x242d94ab468 <line:120:24, col:102> col:36 _isctype_l 'int (int, int, _locale_t) __attribute__((cdecl))':'int (int, int, _locale_t)'
| |-ParmVarDecl 0x242d94ab190 <col:52, col:56> col:56 _C 'int'
| |-ParmVarDecl 0x242d94ab210 <col:65, col:69> col:69 _Type 'int'
| `-ParmVarDecl 0x242d94ab288 <col:85, col:95> col:95 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x242d94ab630 <line:121:55> col:55 implicit isalpha 'int (int)' extern
| |-ParmVarDecl 0x242d94ab6d0 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x242d94ab740 <col:55> Implicit
| `-PureAttr 0x242d94ab798 <col:55> Implicit
|-FunctionDecl 0x242d94ab7c0 prev 0x242d94ab630 <col:43, col:74> col:55 isalpha 'int (int)'
| |-ParmVarDecl 0x242d94ab550 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x242d94ab8b0 <col:55> Inherited Implicit
| `-PureAttr 0x242d94ab8d8 <col:55> Inherited Implicit
|-FunctionDecl 0x242d94abb40 <line:122:24, col:86> col:36 _isalpha_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x242d94ab918 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x242d94ab990 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x242d94abd00 <line:123:55> col:55 implicit isupper 'int (int)' extern
| |-ParmVarDecl 0x242d94abda0 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x242d94abe10 <col:55> Implicit
| `-PureAttr 0x242d94abe68 <col:55> Implicit
|-FunctionDecl 0x242d94abe90 prev 0x242d94abd00 <col:43, col:74> col:55 isupper 'int (int)'
| |-ParmVarDecl 0x242d94abc20 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x242d94abf80 <col:55> Inherited Implicit
| `-PureAttr 0x242d94abfa8 <col:55> Inherited Implicit
|-FunctionDecl 0x242d94a7150 <line:124:24, col:86> col:36 _isupper_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x242d94abfe8 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x242d94ac060 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x242d94a7310 <line:125:55> col:55 implicit islower 'int (int)' extern
| |-ParmVarDecl 0x242d94a73b0 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x242d94a7420 <col:55> Implicit
| `-PureAttr 0x242d94a7478 <col:55> Implicit
|-FunctionDecl 0x242d94a74a0 prev 0x242d94a7310 <col:43, col:74> col:55 islower 'int (int)'
| |-ParmVarDecl 0x242d94a7230 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x242d94a7590 <col:55> Inherited Implicit
| `-PureAttr 0x242d94a75b8 <col:55> Inherited Implicit
|-FunctionDecl 0x242d94a7770 <line:126:24, col:86> col:36 _islower_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x242d94a75f8 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x242d94a7670 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x242d94a7930 <line:127:55> col:55 implicit isdigit 'int (int)' extern
| |-ParmVarDecl 0x242d94a79d0 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x242d94a7a40 <col:55> Implicit
| `-PureAttr 0x242d94a7a98 <col:55> Implicit
|-FunctionDecl 0x242d94a7ac0 prev 0x242d94a7930 <col:43, col:74> col:55 isdigit 'int (int)'
| |-ParmVarDecl 0x242d94a7850 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x242d94a7bb0 <col:55> Inherited Implicit
| `-PureAttr 0x242d94a7bd8 <col:55> Inherited Implicit
|-FunctionDecl 0x242d94a7d90 <line:128:24, col:86> col:36 _isdigit_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x242d94a7c18 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x242d94a7c90 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x242d94a7f50 <line:129:36> col:36 implicit isxdigit 'int (int)' extern
| |-ParmVarDecl 0x242d94a7ff0 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x242d94a8060 <col:36> Implicit
| `-PureAttr 0x242d94a80b8 <col:36> Implicit
|-FunctionDecl 0x242d94ac1a0 prev 0x242d94a7f50 <col:24, col:56> col:36 isxdigit 'int (int)'
| |-ParmVarDecl 0x242d94a7e70 <col:50, col:54> col:54 _C 'int'
| |-NoThrowAttr 0x242d94ac290 <col:36> Inherited Implicit
| `-PureAttr 0x242d94ac2b8 <col:36> Inherited Implicit
|-FunctionDecl 0x242d94ac470 <line:130:24, col:87> col:36 _isxdigit_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x242d94ac2f8 <col:53, col:57> col:57 _C 'int'
| `-ParmVarDecl 0x242d94ac370 <col:70, col:80> col:80 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x242d94ac630 <line:131:55> col:55 implicit isspace 'int (int)' extern
| |-ParmVarDecl 0x242d94ac6d0 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x242d94ac740 <col:55> Implicit
| `-PureAttr 0x242d94ac798 <col:55> Implicit
|-FunctionDecl 0x242d94ac7c0 prev 0x242d94ac630 <col:43, col:74> col:55 isspace 'int (int)'
| |-ParmVarDecl 0x242d94ac550 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x242d94ac8b0 <col:55> Inherited Implicit
| `-PureAttr 0x242d94ac8d8 <col:55> Inherited Implicit
|-FunctionDecl 0x242d94aca90 <line:132:24, col:86> col:36 _isspace_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x242d94ac918 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x242d94ac990 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x242d94acc50 <line:133:36> col:36 implicit ispunct 'int (int)' extern
| |-ParmVarDecl 0x242d94accf0 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x242d94acd60 <col:36> Implicit
| `-PureAttr 0x242d94acdb8 <col:36> Implicit
|-FunctionDecl 0x242d94acde0 prev 0x242d94acc50 <col:24, col:55> col:36 ispunct 'int (int)'
| |-ParmVarDecl 0x242d94acb70 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x242d94aced0 <col:36> Inherited Implicit
| `-PureAttr 0x242d94acef8 <col:36> Inherited Implicit
|-FunctionDecl 0x242d94ad0b0 <line:134:24, col:86> col:36 _ispunct_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x242d94acf38 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x242d94acfb0 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x242d94b6290 <line:135:36> col:36 implicit isblank 'int (int)' extern
| |-ParmVarDecl 0x242d94b6330 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x242d94b63a0 <col:36> Implicit
| `-PureAttr 0x242d94b63f8 <col:36> Implicit
|-FunctionDecl 0x242d94b6420 prev 0x242d94b6290 <col:24, col:55> col:36 isblank 'int (int)'
| |-ParmVarDecl 0x242d94b61b0 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x242d94b6510 <col:36> Inherited Implicit
| `-PureAttr 0x242d94b6538 <col:36> Inherited Implicit
|-FunctionDecl 0x242d94b66f0 <line:136:24, col:86> col:36 _isblank_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x242d94b6578 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x242d94b65f0 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x242d94b68b0 <line:137:55> col:55 implicit isalnum 'int (int)' extern
| |-ParmVarDecl 0x242d94b6950 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x242d94b69c0 <col:55> Implicit
| `-PureAttr 0x242d94b6a18 <col:55> Implicit
|-FunctionDecl 0x242d94b6a40 prev 0x242d94b68b0 <col:43, col:74> col:55 isalnum 'int (int)'
| |-ParmVarDecl 0x242d94b67d0 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x242d94b6b30 <col:55> Inherited Implicit
| `-PureAttr 0x242d94b6b58 <col:55> Inherited Implicit
|-FunctionDecl 0x242d94b6d10 <line:138:24, col:86> col:36 _isalnum_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x242d94b6b98 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x242d94b6c10 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x242d94b6ed0 <line:139:36> col:36 implicit isprint 'int (int)' extern
| |-ParmVarDecl 0x242d94b6f70 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x242d94b6fe0 <col:36> Implicit
| `-PureAttr 0x242d94b7038 <col:36> Implicit
|-FunctionDecl 0x242d94b7060 prev 0x242d94b6ed0 <col:24, col:55> col:36 isprint 'int (int)'
| |-ParmVarDecl 0x242d94b6df0 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x242d94b7150 <col:36> Inherited Implicit
| `-PureAttr 0x242d94b7178 <col:36> Inherited Implicit
|-FunctionDecl 0x242d94af2d0 <line:140:24, col:86> col:36 _isprint_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x242d94af158 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x242d94af1d0 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x242d94af490 <line:141:36> col:36 implicit isgraph 'int (int)' extern
| |-ParmVarDecl 0x242d94af530 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x242d94af5a0 <col:36> Implicit
| `-PureAttr 0x242d94af5f8 <col:36> Implicit
|-FunctionDecl 0x242d94af620 prev 0x242d94af490 <col:24, col:55> col:36 isgraph 'int (int)'
| |-ParmVarDecl 0x242d94af3b0 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x242d94af710 <col:36> Inherited Implicit
| `-PureAttr 0x242d94af738 <col:36> Inherited Implicit
|-FunctionDecl 0x242d94af8f0 <line:142:24, col:86> col:36 _isgraph_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x242d94af778 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x242d94af7f0 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x242d94afab0 <line:143:36> col:36 implicit iscntrl 'int (int)' extern
| |-ParmVarDecl 0x242d94afb50 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x242d94afbc0 <col:36> Implicit
| `-PureAttr 0x242d94afc18 <col:36> Implicit
|-FunctionDecl 0x242d94afc40 prev 0x242d94afab0 <col:24, col:55> col:36 iscntrl 'int (int)'
| |-ParmVarDecl 0x242d94af9d0 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x242d94afd30 <col:36> Inherited Implicit
| `-PureAttr 0x242d94afd58 <col:36> Inherited Implicit
|-FunctionDecl 0x242d94aff10 <line:144:24, col:86> col:36 _iscntrl_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x242d94afd98 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x242d94afe10 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x242d94b2170 <line:145:55> col:55 implicit toupper 'int (int)' extern
| |-ParmVarDecl 0x242d94b2210 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x242d94b2280 <col:55> Implicit
| `-PureAttr 0x242d94b22d8 <col:55> Implicit
|-FunctionDecl 0x242d94b2300 prev 0x242d94b2170 <col:43, col:74> col:55 toupper 'int (int)'
| |-ParmVarDecl 0x242d94afff0 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x242d94b23f0 <col:55> Inherited Implicit
| `-PureAttr 0x242d94b2418 <col:55> Inherited Implicit
|-FunctionDecl 0x242d94b2538 <line:146:55> col:55 implicit tolower 'int (int)' extern
| |-ParmVarDecl 0x242d94b25d8 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x242d94b2648 <col:55> Implicit
| `-PureAttr 0x242d94b26a0 <col:55> Implicit
|-FunctionDecl 0x242d94b26c8 prev 0x242d94b2538 <col:43, col:74> col:55 tolower 'int (int)'
| |-ParmVarDecl 0x242d94b2458 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x242d94b27b8 <col:55> Inherited Implicit
| `-PureAttr 0x242d94b27e0 <col:55> Inherited Implicit
|-FunctionDecl 0x242d94b2900 <line:147:43, col:75> col:55 _tolower 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x242d94b2820 <col:69, col:73> col:73 _C 'int'
|-FunctionDecl 0x242d94b2b50 <line:148:24, col:86> col:36 _tolower_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x242d94b29d8 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x242d94b2a50 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x242d94b2d10 <line:149:43, col:75> col:55 _toupper 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x242d94b2c30 <col:69, col:73> col:73 _C 'int'
|-FunctionDecl 0x242d94b2f60 <line:150:24, col:86> col:36 _toupper_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x242d94b2de8 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x242d94b2e60 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x242d94b71c0 <line:151:24, col:57> col:36 __isascii 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x242d94b3040 <col:51, col:55> col:55 _C 'int'
|-FunctionDecl 0x242d94b7378 <line:152:24, col:57> col:36 __toascii 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x242d94b7298 <col:51, col:55> col:55 _C 'int'
|-FunctionDecl 0x242d94b7530 <line:153:24, col:57> col:36 __iscsymf 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x242d94b7450 <col:51, col:55> col:55 _C 'int'
|-FunctionDecl 0x242d94b76e8 <line:154:24, col:56> col:36 __iscsym 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x242d94b7608 <col:50, col:54> col:54 _C 'int'
|-FunctionDecl 0x242d94b7938 <line:164:24, col:59> col:36 iswalpha 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x242d94b77b8 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x242d94b7c30 <line:165:24, col:90> col:36 _iswalpha_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x242d94b7a08 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x242d94b7a80 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x242d94b7de8 <line:166:24, col:59> col:36 iswupper 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x242d94b7d08 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x242d94b8030 <line:167:24, col:90> col:36 _iswupper_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x242d94b7eb8 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x242d94b7f30 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x242d94b41c8 <line:168:24, col:59> col:36 iswlower 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x242d94b8108 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x242d94b4410 <line:169:24, col:90> col:36 _iswlower_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x242d94b4298 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x242d94b4310 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x242d94b45c8 <line:170:24, col:59> col:36 iswdigit 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x242d94b44e8 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x242d94b4810 <line:171:24, col:90> col:36 _iswdigit_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x242d94b4698 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x242d94b4710 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x242d94b49c8 <line:172:24, col:60> col:36 iswxdigit 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x242d94b48e8 <col:51, col:58> col:58 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x242d94b4c10 <line:173:24, col:91> col:36 _iswxdigit_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x242d94b4a98 <col:54, col:61> col:61 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x242d94b4b10 <col:74, col:84> col:84 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x242d94b4dc8 <line:174:24, col:59> col:36 iswspace 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x242d94b4ce8 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x242d94b5010 <line:175:24, col:90> col:36 _iswspace_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x242d94b4e98 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x242d94b4f10 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x242d94b0188 <line:176:24, col:59> col:36 iswpunct 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x242d94b50e8 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x242d94b03d0 <line:177:24, col:90> col:36 _iswpunct_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x242d94b0258 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x242d94b02d0 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x242d94b0588 <line:178:24, col:59> col:36 iswblank 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x242d94b04a8 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x242d94b07d0 <line:179:24, col:90> col:36 _iswblank_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x242d94b0658 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x242d94b06d0 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x242d94b0988 <line:180:24, col:59> col:36 iswalnum 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x242d94b08a8 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x242d94b0bd0 <line:181:24, col:90> col:36 _iswalnum_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x242d94b0a58 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x242d94b0ad0 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x242d94b0d88 <line:182:24, col:59> col:36 iswprint 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x242d94b0ca8 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x242d94b0fd0 <line:183:24, col:90> col:36 _iswprint_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x242d94b0e58 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x242d94b0ed0 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x242d94b8208 <line:184:24, col:59> col:36 iswgraph 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x242d94b10a8 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x242d94b8450 <line:185:24, col:90> col:36 _iswgraph_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x242d94b82d8 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x242d94b8350 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x242d94b8608 <line:186:24, col:59> col:36 iswcntrl 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x242d94b8528 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x242d94b8850 <line:187:24, col:90> col:36 _iswcntrl_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x242d94b86d8 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x242d94b8750 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x242d94b8a08 <line:188:24, col:59> col:36 iswascii 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x242d94b8928 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x242d94b8c20 <line:190:24, col:62> col:39 towupper 'wint_t (wint_t) __attribute__((cdecl))':'wint_t (wint_t)'
| `-ParmVarDecl 0x242d94b8ad8 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x242d94b8f08 <line:191:24, col:93> col:39 _towupper_l 'wint_t (wint_t, _locale_t) __attribute__((cdecl))':'wint_t (wint_t, _locale_t)'
| |-ParmVarDecl 0x242d94b8cf0 <col:56, col:63> col:63 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x242d94b8d68 <col:76, col:86> col:86 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x242d94b90b8 <line:192:24, col:62> col:39 towlower 'wint_t (wint_t) __attribute__((cdecl))':'wint_t (wint_t)'
| `-ParmVarDecl 0x242d94b8fe0 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x242d94b12d0 <line:193:24, col:93> col:39 _towlower_l 'wint_t (wint_t, _locale_t) __attribute__((cdecl))':'wint_t (wint_t, _locale_t)'
| |-ParmVarDecl 0x242d94b1160 <col:56, col:63> col:63 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x242d94b11d8 <col:76, col:86> col:86 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x242d94b15d0 <line:194:24, col:80> col:36 iswctype 'int (wint_t, wctype_t) __attribute__((cdecl))':'int (wint_t, wctype_t)'
| |-ParmVarDecl 0x242d94b13a8 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x242d94b1420 <col:66, col:75> col:75 _Type 'wctype_t':'unsigned short'
|-FunctionDecl 0x242d94b1978 <line:195:24, col:111> col:36 _iswctype_l 'int (wint_t, wctype_t, _locale_t) __attribute__((cdecl))':'int (wint_t, wctype_t, _locale_t)'
| |-ParmVarDecl 0x242d94b16a8 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| |-ParmVarDecl 0x242d94b1720 <col:69, col:78> col:78 _Type 'wctype_t':'unsigned short'
| `-ParmVarDecl 0x242d94b1798 <col:94, col:104> col:104 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x242d94b1b38 <line:197:24, col:61> col:36 __iswcsymf 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x242d94b1a58 <col:52, col:59> col:59 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x242d94b1d80 <line:198:24, col:90> col:36 _iswcsymf_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x242d94b1c08 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x242d94b1c80 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x242d94b1f38 <line:199:24, col:60> col:36 __iswcsym 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x242d94b1e58 <col:51, col:58> col:58 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x242d94b9220 <line:200:24, col:89> col:36 _iswcsym_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x242d94b2008 <col:52, col:59> col:59 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x242d94b2080 <col:72, col:82> col:82 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x242d94b93e0 <line:203:24, col:58> col:36 isleadbyte 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x242d94b9300 <col:52, col:56> col:56 _C 'int'
|-FunctionDecl 0x242d94b9630 <line:204:24, col:89> col:36 _isleadbyte_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x242d94b94b8 <col:55, col:59> col:59 _C 'int'
| `-ParmVarDecl 0x242d94b9530 <col:72, col:82> col:82 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x242d94b9940 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\ctype.h:205:90> col:45 is_wctype 'int (wint_t, wctype_t) __attribute__((cdecl))':'int (wint_t, wctype_t)'
| |-ParmVarDecl 0x242d94b97c8 <col:60, col:67> col:67 _C 'wint_t':'unsigned short'
| |-ParmVarDecl 0x242d94b9840 <col:76, col:85> col:85 _Type 'wctype_t':'unsigned short'
| `-DeprecatedAttr 0x242d94b99f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using iswctype instead. See online help for details." ""
|-VarDecl 0x242d94b9b38 <D:\Microsoft Visual Studio 12.0\VC\include\ctype.h:235:9, col:20> col:20 __mb_cur_max 'int' extern
|-FunctionDecl 0x242d94b9c88 <line:239:9, col:44> col:21 ___mb_cur_max_func 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x242d94b9eb8 <line:240:9, col:51> col:21 ___mb_cur_max_l_func 'int (_locale_t) __attribute__((cdecl))':'int (_locale_t)'
| `-ParmVarDecl 0x242d94b9d50 <col:42> col:51 '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x242d94ba0e0 <.//openssl//file_jk/before\crypto\x509v3/ext_dat.h:10:1, col:47> col:5 name_cmp 'int (const char *, const char *)'
| |-ParmVarDecl 0x242d94b9f90 <col:14, col:26> col:26 name 'const char *'
| `-ParmVarDecl 0x242d94ba010 <col:32, col:44> col:44 cmp 'const char *'
|-VarDecl 0x242d94bc210 <line:12:1, col:32> col:32 invalid v3_bcons 'const int' extern
|-VarDecl 0x242d94bc290 <line:13:1, col:32> col:32 invalid v3_pkey_usage_period 'const int' extern
|-VarDecl 0x242d94bc3e0 <line:14:1, <invalid sloc>> col:32 invalid v3_ns_ia5_list 'const int [8]' extern
|-VarDecl 0x242d94bc488 <line:15:1, col:32> col:32 invalid v3_crl_num 'const int' extern
|-VarDecl 0x242d94bc508 <line:16:1, col:32> col:32 invalid v3_delta_crl 'const int' extern
|-VarDecl 0x242d94bc588 <line:17:1, col:32> col:32 invalid v3_ocsp_nonce 'const int' extern
|-VarDecl 0x242d94bc608 <line:18:1, col:32> col:32 invalid v3_ocsp_crlid 'const int' extern
|-VarDecl 0x242d94bc688 <line:19:1, col:32> col:32 invalid v3_crl_hold 'const int' extern
|-VarDecl 0x242d94bc708 <line:20:1, col:32> col:32 invalid v3_policy_mappings 'const int' extern
|-VarDecl 0x242d94bc788 <line:21:1, col:32> col:32 invalid v3_name_constraints 'const int' extern
|-VarDecl 0x242d94bc808 <line:22:1, col:32> col:32 invalid v3_addr 'const int' extern
|-VarDecl 0x242d94bc950 <line:23:1, <invalid sloc>> col:32 invalid v3_ct_scts 'const int [3]' extern
|-VarDecl 0x242d94bc9d0 <line:24:1, col:32> col:32 invalid v3_tls_feature 'const int' extern
|-FunctionDecl 0x242d94bcb00 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:22:1, col:37> col:14 strip_spaces 'char *(char *)' static
| `-ParmVarDecl 0x242d94bca50 <col:27, col:33> col:33 name 'char *'
|-FunctionDecl 0x242d94bcd90 <line:23:1, col:64> col:12 sk_strcmp 'int (const char *const *, const char *const *)' static
| |-ParmVarDecl 0x242d94bcc00 <col:22, col:41> col:41 a 'const char *const *'
| `-ParmVarDecl 0x242d94bcc80 <col:44, col:63> col:63 b 'const char *const *'
|-FunctionDecl 0x242d94bcf38 <line:26:1, col:40> col:13 invalid str_free 'void (int)' static
| `-ParmVarDecl 0x242d94bce70 <col:22, col:37> col:37 invalid str 'int'
|-FunctionDecl 0x242d94bf240 <line:27:1, col:81> col:12 invalid append_ia5 'int (int (*)())' static
| `-ParmVarDecl 0x242d94bd090 <col:23, <invalid sloc>> col:23 invalid STACK_OF 'int (*)()':'int (*)()'
|-FunctionDecl 0x242d94bf4c0 <line:29:1, col:59> col:12 used ipv4_from_asc 'int (unsigned char *, const char *)' static
| |-ParmVarDecl 0x242d94bf330 <col:26, col:41> col:41 v4 'unsigned char *'
| `-ParmVarDecl 0x242d94bf3b0 <col:45, col:57> col:57 in 'const char *'
|-FunctionDecl 0x242d94bf6f0 <line:30:1, col:59> col:12 used ipv6_from_asc 'int (unsigned char *, const char *)' static
| |-ParmVarDecl 0x242d94bf5a0 <col:26, col:41> col:41 v6 'unsigned char *'
| `-ParmVarDecl 0x242d94bf620 <col:45, col:57> col:57 in 'const char *'
|-FunctionDecl 0x242d94bfa00 <line:31:1, col:56> col:12 used ipv6_cb 'int (const char *, int, void *)' static
| |-ParmVarDecl 0x242d94bf7d0 <col:20, col:32> col:32 elem 'const char *'
| |-ParmVarDecl 0x242d94bf850 <col:38, col:42> col:42 len 'int'
| `-ParmVarDecl 0x242d94bf8d0 <col:47, col:53> col:53 usr 'void *'
|-FunctionDecl 0x242d94bfd20 <line:32:1, col:66> col:12 used ipv6_hex 'int (unsigned char *, const char *, int)' static
| |-ParmVarDecl 0x242d94bfae8 <col:21, col:36> col:36 out 'unsigned char *'
| |-ParmVarDecl 0x242d94bfb68 <col:41, col:53> col:53 in 'const char *'
| `-ParmVarDecl 0x242d94bfbe8 <col:57, col:61> col:61 inlen 'int'
|-FunctionDecl 0x242d94c0040 <line:36:1, line:67:1> line:36:5 invalid X509V3_add_value 'int (const char *, const char *, int (*)())'
| |-ParmVarDecl 0x242d94bfe08 <col:22, col:34> col:34 used name 'const char *'
| |-ParmVarDecl 0x242d94bfe88 <col:40, col:52> col:52 used value 'const char *'
| |-ParmVarDecl 0x242d94bff18 <line:37:22, <invalid sloc>> col:22 invalid STACK_OF 'int (*)()':'int (*)()'
| `-CompoundStmt 0x242d94c6850 <line:38:1, line:67:1>
|   |-DeclStmt 0x242d94c5450 <line:40:5, col:39>
|   | |-VarDecl 0x242d94c01b0 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/before\crypto\x509v3\v3_utl.c:40:11 used tname 'char *' cinit
|   | | `-ImplicitCastExpr 0x242d94c5300 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   | |   `-ParenExpr 0x242d94c52e0 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x242d94c52b8 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x242d94c0218 <col:26> 'int' 0
|   | `-VarDecl 0x242d94c5330 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:40:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/before\crypto\x509v3\v3_utl.c:40:26 used tvalue 'char *' cinit
|   |   `-ImplicitCastExpr 0x242d94c5420 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   |     `-ParenExpr 0x242d94c5400 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x242d94c53d8 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x242d94c5398 <col:26> 'int' 0
|   |-DeclStmt 0x242d94c5570 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:41:5, col:42>
|   | `-VarDecl 0x242d94c5480 <col:5, col:9> col:9 used sk_allocated 'int'
|   |-IfStmt 0x242d94c5938 <line:43:5, line:44:14>
|   | |-BinaryOperator 0x242d94c58b0 <line:43:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '&&'
|   | | |-ImplicitCastExpr 0x242d94c5898 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:43:9> 'const char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x242d94c5588 <col:9> 'const char *' lvalue ParmVar 0x242d94bfe08 'name' 'const char *'
|   | | `-BinaryOperator 0x242d94c5878 <col:17, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | |   |-ParenExpr 0x242d94c57b8 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:43:17, col:46> 'char *'
|   | |   | `-BinaryOperator 0x242d94c5798 <col:18, col:45> 'char *' '='
|   | |   |   |-DeclRefExpr 0x242d94c55c0 <col:18> 'char *' lvalue Var 0x242d94c01b0 'tname' 'char *'
|   | |   |   `-ImplicitCastExpr 0x242d94c5780 <col:26, col:45> 'char *' <IntegralToPointer>
|   | |   |     `-CallExpr 0x242d94c5740 <col:26, col:45> 'int'
|   | |   |       |-ImplicitCastExpr 0x242d94c5728 <col:26> 'int (*)()' <FunctionToPointerDecay>
|   | |   |       | `-DeclRefExpr 0x242d94c56e8 <col:26> 'int ()' Function 0x242d94c5620 'OPENSSL_strdup' 'int ()'
|   | |   |       `-ImplicitCastExpr 0x242d94c5768 <col:41> 'const char *' <LValueToRValue>
|   | |   |         `-DeclRefExpr 0x242d94c5708 <col:41> 'const char *' lvalue ParmVar 0x242d94bfe08 'name' 'const char *'
|   | |   `-ImplicitCastExpr 0x242d94c5860 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | |     `-ParenExpr 0x242d94c5840 <col:17, col:27> 'void *'
|   | |       `-CStyleCastExpr 0x242d94c5818 <col:18, col:26> 'void *' <NullToPointer>
|   | |         `-IntegerLiteral 0x242d94c57d8 <col:26> 'int' 0
|   | `-GotoStmt 0x242d94c5920 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:44:9, col:14> 'err' 0x242d94c58d0
|   |-IfStmt 0x242d94c5bc0 <line:45:5, line:46:14>
|   | |-BinaryOperator 0x242d94c5b88 <line:45:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '&&'
|   | | |-ImplicitCastExpr 0x242d94c5b70 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:45:9> 'const char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x242d94c5950 <col:9> 'const char *' lvalue ParmVar 0x242d94bfe88 'value' 'const char *'
|   | | `-BinaryOperator 0x242d94c5b50 <col:18, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | |   |-ParenExpr 0x242d94c5a90 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:45:18, col:49> 'char *'
|   | |   | `-BinaryOperator 0x242d94c5a70 <col:19, col:48> 'char *' '='
|   | |   |   |-DeclRefExpr 0x242d94c5988 <col:19> 'char *' lvalue Var 0x242d94c5330 'tvalue' 'char *'
|   | |   |   `-ImplicitCastExpr 0x242d94c5a58 <col:28, col:48> 'char *' <IntegralToPointer>
|   | |   |     `-CallExpr 0x242d94c5a18 <col:28, col:48> 'int'
|   | |   |       |-ImplicitCastExpr 0x242d94c5a00 <col:28> 'int (*)()' <FunctionToPointerDecay>
|   | |   |       | `-DeclRefExpr 0x242d94c59c0 <col:28> 'int ()' Function 0x242d94c5620 'OPENSSL_strdup' 'int ()'
|   | |   |       `-ImplicitCastExpr 0x242d94c5a40 <col:43> 'const char *' <LValueToRValue>
|   | |   |         `-DeclRefExpr 0x242d94c59e0 <col:43> 'const char *' lvalue ParmVar 0x242d94bfe88 'value' 'const char *'
|   | |   `-ImplicitCastExpr 0x242d94c5b38 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | |     `-ParenExpr 0x242d94c5b18 <col:17, col:27> 'void *'
|   | |       `-CStyleCastExpr 0x242d94c5af0 <col:18, col:26> 'void *' <NullToPointer>
|   | |         `-IntegerLiteral 0x242d94c5ab0 <col:26> 'int' 0
|   | `-GotoStmt 0x242d94c5ba8 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:46:9, col:14> 'err' 0x242d94c58d0
|   |-IfStmt 0x242d94c5da0 <line:47:5, line:48:14>
|   | |-OpaqueValueExpr 0x242d94c5d88 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x242d94c5d70 <col:9, col:14> 'err' 0x242d94c58d0
|   |-IfStmt 0x242d94c6018 <line:49:5, line:50:14>
|   | |-OpaqueValueExpr 0x242d94c6000 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x242d94c5fe8 <col:9, col:14> 'err' 0x242d94c58d0
|   |-IfStmt 0x242d94c6238 <line:54:5, line:55:14>
|   | |-OpaqueValueExpr 0x242d94c6220 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x242d94c6208 <col:9, col:14> 'err' 0x242d94c58d0
|   |-ReturnStmt 0x242d94c6278 <line:56:5, col:12>
|   | `-IntegerLiteral 0x242d94c6250 <col:12> 'int' 1
|   |-LabelStmt 0x242d94c63c8 <line:57:2, col:5> 'err'
|   | `-NullStmt 0x242d94c63c0 <col:5>
|   |-IfStmt 0x242d94c65c0 <line:59:5, line:62:5>
|   | |-ImplicitCastExpr 0x242d94c6400 <line:59:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x242d94c63e0 <col:9> 'int' lvalue Var 0x242d94c5480 'sk_allocated' 'int'
|   | `-CompoundStmt 0x242d94c65b0 <col:23, line:62:5>
|   |-CallExpr 0x242d94c6740 <line:64:5, col:23> 'int'
|   | |-ImplicitCastExpr 0x242d94c6728 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x242d94c66e8 <col:5> 'int ()' Function 0x242d94c6600 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x242d94c6768 <col:18> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x242d94c6708 <col:18> 'char *' lvalue Var 0x242d94c01b0 'tname' 'char *'
|   |-CallExpr 0x242d94c67d8 <line:65:5, col:24> 'int'
|   | |-ImplicitCastExpr 0x242d94c67c0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x242d94c6780 <col:5> 'int ()' Function 0x242d94c6600 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x242d94c6800 <col:18> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x242d94c67a0 <col:18> 'char *' lvalue Var 0x242d94c5330 'tvalue' 'char *'
|   `-ReturnStmt 0x242d94c6840 <line:66:5, col:12>
|     `-IntegerLiteral 0x242d94c6818 <col:12> 'int' 0
|-FunctionDecl 0x242d94c6b20 <line:69:1, line:73:1> line:69:5 invalid X509V3_add_value_uchar 'int (const char *, const unsigned char *, int (*)())'
| |-ParmVarDecl 0x242d94c68e0 <col:28, col:40> col:40 used name 'const char *'
| |-ParmVarDecl 0x242d94c6960 <col:46, col:67> col:67 used value 'const unsigned char *'
| |-ParmVarDecl 0x242d94c69f0 <line:70:28, <invalid sloc>> col:28 invalid STACK_OF 'int (*)()':'int (*)()'
| `-CompoundStmt 0x242d94c6cb8 <line:71:1, line:73:1>
|-FunctionDecl 0x242d94c6da8 <line:77:1, line:85:1> line:77:6 invalid X509V3_conf_free 'void (int *)'
| |-ParmVarDecl 0x242d94c6ce0 <col:23, col:35> col:35 invalid conf 'int *'
| `-CompoundStmt 0x242d94c6f28 <line:78:1, line:85:1>
|   `-IfStmt 0x242d94c6e90 <line:79:5, line:80:9>
|     |-OpaqueValueExpr 0x242d94c6e78 <<invalid sloc>> '_Bool'
|     `-ReturnStmt 0x242d94c6e68 <col:9>
|-FunctionDecl 0x242d94c7190 <line:87:1, line:93:1> line:87:5 invalid X509V3_add_value_bool 'int (const char *, int, int (*)())'
| |-ParmVarDecl 0x242d94c6f58 <col:27, col:39> col:39 used name 'const char *'
| |-ParmVarDecl 0x242d94c6fd8 <col:45, col:49> col:49 used asn1_bool 'int'
| |-ParmVarDecl 0x242d94c7068 <line:88:27, <invalid sloc>> col:27 invalid STACK_OF 'int (*)()':'int (*)()'
| `-CompoundStmt 0x242d94c43a8 <line:89:1, line:93:1>
|-FunctionDecl 0x242d94c4588 <line:95:1, line:101:1> line:95:5 invalid X509V3_add_value_bool_nf 'int (const char *, int, int (*)())'
| |-ParmVarDecl 0x242d94c43d0 <col:30, col:42> col:42 used name 'const char *'
| |-ParmVarDecl 0x242d94c4450 <col:48, col:52> col:52 used asn1_bool 'int'
| |-ParmVarDecl 0x242d94c44e0 <line:96:30, <invalid sloc>> col:30 invalid STACK_OF 'int (*)()':'int (*)()'
| `-CompoundStmt 0x242d94c4738 <line:97:1, line:101:1>
|   `-ReturnStmt 0x242d94c4728 <line:100:5, col:12>
|     `-IntegerLiteral 0x242d94c4700 <col:12> 'int' 1
|-FunctionDecl 0x242d94c4830 <line:103:1, line:138:1> line:103:14 invalid bignum_to_string 'char *(const int *)' static
| |-ParmVarDecl 0x242d94c4768 <col:31, col:45> col:45 invalid bn 'const int *'
| `-CompoundStmt 0x242d94c0fa0 <line:104:1, line:138:1>
|   |-DeclStmt 0x242d94c4a08 <line:105:5, col:20>
|   | |-VarDecl 0x242d94c4908 <col:5, col:11> col:11 used tmp 'char *'
|   | `-VarDecl 0x242d94c4988 <col:5, col:17> col:17 used ret 'char *'
|   |-DeclStmt 0x242d94c4a98 <line:106:5, col:15>
|   | `-VarDecl 0x242d94c4a30 <col:5, col:12> col:12 used len 'size_t':'unsigned long long'
|   |-IfStmt 0x242d94c4fe8 <line:117:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   | |-BinaryOperator 0x242d94c4f18 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:117:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x242d94c4ee8 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:117:9> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x242d94c4e40 <col:9> 'char *' lvalue Var 0x242d94c4908 'tmp' 'char *'
|   | | `-ImplicitCastExpr 0x242d94c4f00 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x242d94c4ec8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x242d94c4ea0 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x242d94c4e60 <col:26> 'int' 0
|   | `-ReturnStmt 0x242d94c4fd8 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:118:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |   `-ImplicitCastExpr 0x242d94c4fc0 <col:17, col:27> 'char *' <NullToPointer>
|   |     `-ParenExpr 0x242d94c4fa0 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x242d94c4f78 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x242d94c4f38 <col:26> 'int' 0
|   |-BinaryOperator 0x242d94c02b0 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:120:5, col:25> 'size_t':'unsigned long long' '='
|   | |-DeclRefExpr 0x242d94c5000 <col:5> 'size_t':'unsigned long long' lvalue Var 0x242d94c4a30 'len' 'size_t':'unsigned long long'
|   | `-BinaryOperator 0x242d94c0290 <col:11, col:25> 'unsigned long long' '+'
|   |   |-CallExpr 0x242d94c5230 <col:11, col:21> 'unsigned long long'
|   |   | |-ImplicitCastExpr 0x242d94c5218 <col:11> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x242d94c5180 <col:11> 'unsigned long long (const char *)' Function 0x242d94c5070 'strlen' 'unsigned long long (const char *)'
|   |   | `-ImplicitCastExpr 0x242d94c5270 <col:18> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x242d94c5258 <col:18> 'char *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x242d94c51b8 <col:18> 'char *' lvalue Var 0x242d94c4908 'tmp' 'char *'
|   |   `-ImplicitCastExpr 0x242d94c0278 <col:25> 'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x242d94c0250 <col:25> 'int' 3
|   |-BinaryOperator 0x242d94c03b8 <line:121:5, col:29> 'char *' '='
|   | |-DeclRefExpr 0x242d94c02d0 <col:5> 'char *' lvalue Var 0x242d94c4988 'ret' 'char *'
|   | `-ImplicitCastExpr 0x242d94c03a0 <col:11, col:29> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x242d94c0360 <col:11, col:29> 'int'
|   |     |-ImplicitCastExpr 0x242d94c0348 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x242d94c0308 <col:11> 'int ()' Function 0x242d94c5c00 'OPENSSL_malloc' 'int ()'
|   |     `-ImplicitCastExpr 0x242d94c0388 <col:26> 'size_t':'unsigned long long' <LValueToRValue>
|   |       `-DeclRefExpr 0x242d94c0328 <col:26> 'size_t':'unsigned long long' lvalue Var 0x242d94c4a30 'len' 'size_t':'unsigned long long'
|   |-IfStmt 0x242d94c0658 <line:122:5, line:126:5>
|   | |-BinaryOperator 0x242d94c04b0 <line:122:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x242d94c0480 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:122:9> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x242d94c03d8 <col:9> 'char *' lvalue Var 0x242d94c4988 'ret' 'char *'
|   | | `-ImplicitCastExpr 0x242d94c0498 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x242d94c0460 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x242d94c0438 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x242d94c03f8 <col:26> 'int' 0
|   | `-CompoundStmt 0x242d94c0638 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:122:22, line:126:5>
|   |   |-CallExpr 0x242d94c0548 <line:124:9, col:25> 'int'
|   |   | |-ImplicitCastExpr 0x242d94c0530 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x242d94c04f0 <col:9> 'int ()' Function 0x242d94c6600 'OPENSSL_free' 'int ()'
|   |   | `-ImplicitCastExpr 0x242d94c0570 <col:22> 'char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x242d94c0510 <col:22> 'char *' lvalue Var 0x242d94c4908 'tmp' 'char *'
|   |   `-ReturnStmt 0x242d94c0628 <line:125:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |     `-ImplicitCastExpr 0x242d94c0610 <col:17, col:27> 'char *' <NullToPointer>
|   |       `-ParenExpr 0x242d94c05f0 <col:17, col:27> 'void *'
|   |         `-CStyleCastExpr 0x242d94c05c8 <col:18, col:26> 'void *' <NullToPointer>
|   |           `-IntegerLiteral 0x242d94c0588 <col:26> 'int' 0
|   |-IfStmt 0x242d94c0e98 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:129:5, line:135:5> has_else
|   | |-BinaryOperator 0x242d94c0738 <line:129:9, col:19> 'int' '=='
|   | | |-ImplicitCastExpr 0x242d94c0720 <col:9, col:14> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x242d94c0708 <col:9, col:14> 'char' <LValueToRValue>
|   | | |   `-ArraySubscriptExpr 0x242d94c06d0 <col:9, col:14> 'char' lvalue
|   | | |     |-ImplicitCastExpr 0x242d94c06b8 <col:9> 'char *' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x242d94c0670 <col:9> 'char *' lvalue Var 0x242d94c4908 'tmp' 'char *'
|   | | |     `-IntegerLiteral 0x242d94c0690 <col:13> 'int' 0
|   | | `-CharacterLiteral 0x242d94c06f0 <col:19> 'int' 45
|   | |-CompoundStmt 0x242d94c0bf0 <col:24, line:132:5>
|   | | |-CallExpr 0x242d94c0920 <line:130:9, col:40> 'int'
|   | | | |-ImplicitCastExpr 0x242d94c0908 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x242d94c0848 <col:9> 'int ()' Function 0x242d94c0780 'OPENSSL_strlcpy' 'int ()'
|   | | | |-ImplicitCastExpr 0x242d94c0958 <col:25> 'char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x242d94c0868 <col:25> 'char *' lvalue Var 0x242d94c4988 'ret' 'char *'
|   | | | |-ImplicitCastExpr 0x242d94c0970 <col:30> 'char *' <ArrayToPointerDecay>
|   | | | | `-StringLiteral 0x242d94c08c8 <col:30> 'char [4]' lvalue "-0x"
|   | | | `-ImplicitCastExpr 0x242d94c0988 <col:37> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x242d94c08e8 <col:37> 'size_t':'unsigned long long' lvalue Var 0x242d94c4a30 'len' 'size_t':'unsigned long long'
|   | | `-CallExpr 0x242d94c0b88 <line:131:9, col:42> 'int'
|   | |   |-ImplicitCastExpr 0x242d94c0b70 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x242d94c0a90 <col:9> 'int ()' Function 0x242d94c09c8 'OPENSSL_strlcat' 'int ()'
|   | |   |-ImplicitCastExpr 0x242d94c0bc0 <col:25> 'char *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x242d94c0ab0 <col:25> 'char *' lvalue Var 0x242d94c4988 'ret' 'char *'
|   | |   |-BinaryOperator 0x242d94c0b30 <col:30, col:36> 'char *' '+'
|   | |   | |-ImplicitCastExpr 0x242d94c0b18 <col:30> 'char *' <LValueToRValue>
|   | |   | | `-DeclRefExpr 0x242d94c0ad0 <col:30> 'char *' lvalue Var 0x242d94c4908 'tmp' 'char *'
|   | |   | `-IntegerLiteral 0x242d94c0af0 <col:36> 'int' 1
|   | |   `-ImplicitCastExpr 0x242d94c0bd8 <col:39> 'size_t':'unsigned long long' <LValueToRValue>
|   | |     `-DeclRefExpr 0x242d94c0b50 <col:39> 'size_t':'unsigned long long' lvalue Var 0x242d94c4a30 'len' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x242d94c0e78 <line:132:12, line:135:5>
|   |   |-CallExpr 0x242d94c0ce0 <line:133:9, col:39> 'int'
|   |   | |-ImplicitCastExpr 0x242d94c0cc8 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x242d94c0c10 <col:9> 'int ()' Function 0x242d94c0780 'OPENSSL_strlcpy' 'int ()'
|   |   | |-ImplicitCastExpr 0x242d94c0d18 <col:25> 'char *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x242d94c0c30 <col:25> 'char *' lvalue Var 0x242d94c4988 'ret' 'char *'
|   |   | |-ImplicitCastExpr 0x242d94c0d30 <col:30> 'char *' <ArrayToPointerDecay>
|   |   | | `-StringLiteral 0x242d94c0c88 <col:30> 'char [3]' lvalue "0x"
|   |   | `-ImplicitCastExpr 0x242d94c0d48 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x242d94c0ca8 <col:36> 'size_t':'unsigned long long' lvalue Var 0x242d94c4a30 'len' 'size_t':'unsigned long long'
|   |   `-CallExpr 0x242d94c0df8 <line:134:9, col:38> 'int'
|   |     |-ImplicitCastExpr 0x242d94c0de0 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x242d94c0d60 <col:9> 'int ()' Function 0x242d94c09c8 'OPENSSL_strlcat' 'int ()'
|   |     |-ImplicitCastExpr 0x242d94c0e30 <col:25> 'char *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x242d94c0d80 <col:25> 'char *' lvalue Var 0x242d94c4988 'ret' 'char *'
|   |     |-ImplicitCastExpr 0x242d94c0e48 <col:30> 'char *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x242d94c0da0 <col:30> 'char *' lvalue Var 0x242d94c4908 'tmp' 'char *'
|   |     `-ImplicitCastExpr 0x242d94c0e60 <col:35> 'size_t':'unsigned long long' <LValueToRValue>
|   |       `-DeclRefExpr 0x242d94c0dc0 <col:35> 'size_t':'unsigned long long' lvalue Var 0x242d94c4a30 'len' 'size_t':'unsigned long long'
|   |-CallExpr 0x242d94c0f18 <line:136:5, col:21> 'int'
|   | |-ImplicitCastExpr 0x242d94c0f00 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x242d94c0ec0 <col:5> 'int ()' Function 0x242d94c6600 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x242d94c0f40 <col:18> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x242d94c0ee0 <col:18> 'char *' lvalue Var 0x242d94c4908 'tmp' 'char *'
|   `-ReturnStmt 0x242d94c0f90 <line:137:5, col:12>
|     `-ImplicitCastExpr 0x242d94c0f78 <col:12> 'char *' <LValueToRValue>
|       `-DeclRefExpr 0x242d94c0f58 <col:12> 'char *' lvalue Var 0x242d94c4988 'ret' 'char *'
|-FunctionDecl 0x242d94c5070 <line:120:11> col:11 implicit used strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x242d94c5110 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x242d94c1170 <line:140:1, line:152:1> line:140:7 invalid i2s_ASN1_ENUMERATED 'char *(int *, const int *)'
| |-ParmVarDecl 0x242d94c1010 <col:27, col:46> col:46 invalid method 'int *'
| |-ParmVarDecl 0x242d94c1090 <col:54, col:77> col:77 invalid a 'const int *'
| `-CompoundStmt 0x242d94c1958 <line:141:1, line:152:1>
|   |-DeclStmt 0x242d94c1408 <line:143:5, col:24>
|   | `-VarDecl 0x242d94c1300 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/before\crypto\x509v3\v3_utl.c:143:11 used strtmp 'char *' cinit
|   |   `-ImplicitCastExpr 0x242d94c13f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   |     `-ParenExpr 0x242d94c13d0 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x242d94c13a8 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x242d94c1368 <col:26> 'int' 0
|   |-IfStmt 0x242d94c14e8 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:145:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   | |-OpaqueValueExpr 0x242d94c14d0 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x242d94c14c0 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:146:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |   `-ImplicitCastExpr 0x242d94c14a8 <col:17, col:27> 'char *' <NullToPointer>
|   |     `-ParenExpr 0x242d94c1488 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x242d94c1460 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x242d94c1420 <col:26> 'int' 0
|   `-ReturnStmt 0x242d94c1948 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:151:5, col:12>
|     `-ImplicitCastExpr 0x242d94c1930 <col:12> 'char *' <LValueToRValue>
|       `-DeclRefExpr 0x242d94c1910 <col:12> 'char *' lvalue Var 0x242d94c1300 'strtmp' 'char *'
|-FunctionDecl 0x242d94c1ab8 <line:154:1, line:166:1> line:154:7 invalid i2s_ASN1_INTEGER 'char *(int *, const int *)'
| |-ParmVarDecl 0x242d94c1998 <col:24, col:43> col:43 invalid method 'int *'
| |-ParmVarDecl 0x242d94c1a18 <col:51, col:71> col:71 invalid a 'const int *'
| `-CompoundStmt 0x242d94c2188 <line:155:1, line:166:1>
|   |-DeclStmt 0x242d94c1d28 <line:157:5, col:24>
|   | `-VarDecl 0x242d94c1c20 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/before\crypto\x509v3\v3_utl.c:157:11 used strtmp 'char *' cinit
|   |   `-ImplicitCastExpr 0x242d94c1d10 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   |     `-ParenExpr 0x242d94c1cf0 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x242d94c1cc8 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x242d94c1c88 <col:26> 'int' 0
|   |-IfStmt 0x242d94c1e08 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:159:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   | |-OpaqueValueExpr 0x242d94c1df0 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x242d94c1de0 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:160:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |   `-ImplicitCastExpr 0x242d94c1dc8 <col:17, col:27> 'char *' <NullToPointer>
|   |     `-ParenExpr 0x242d94c1da8 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x242d94c1d80 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x242d94c1d40 <col:26> 'int' 0
|   `-ReturnStmt 0x242d94c2178 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:165:5, col:12>
|     `-ImplicitCastExpr 0x242d94c2160 <col:12> 'char *' <LValueToRValue>
|       `-DeclRefExpr 0x242d94c2140 <col:12> 'char *' lvalue Var 0x242d94c1c20 'strtmp' 'char *'
|-FunctionDecl 0x242d94cc3f0 <line:168:1, line:219:1> line:168:15 invalid s2i_ASN1_INTEGER 'int *(int *, const char *)'
| |-ParmVarDecl 0x242d94c21c8 <col:32, col:51> col:51 invalid method 'int *'
| |-ParmVarDecl 0x242d94cc310 <col:59, col:71> col:71 used value 'const char *'
| `-CompoundStmt 0x242d94ced88 <line:169:1, line:219:1>
|   |-DeclStmt 0x242d94cc658 <line:172:5, col:21>
|   | |-VarDecl 0x242d94cc558 <col:5, col:9> col:9 used isneg 'int'
|   | `-VarDecl 0x242d94cc5d8 <col:5, col:16> col:16 used ishex 'int'
|   |-DeclStmt 0x242d94cc6f0 <line:173:5, col:12>
|   | `-VarDecl 0x242d94cc688 <col:5, col:9> col:9 used ret 'int'
|   |-IfStmt 0x242d94cc900 <line:174:5, line:177:5>
|   | |-BinaryOperator 0x242d94cc7f8 <line:174:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x242d94cc7c8 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:174:9> 'const char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x242d94cc708 <col:9> 'const char *' lvalue ParmVar 0x242d94cc310 'value' 'const char *'
|   | | `-ImplicitCastExpr 0x242d94cc7e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   | |   `-ParenExpr 0x242d94cc7a8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x242d94cc780 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x242d94cc740 <col:26> 'int' 0
|   | `-CompoundStmt 0x242d94cc8e8 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:174:24, line:177:5>
|   |   `-ReturnStmt 0x242d94cc8d8 <line:176:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |     `-ImplicitCastExpr 0x242d94cc8c0 <col:17, col:27> 'int *' <NullToPointer>
|   |       `-ParenExpr 0x242d94cc8a0 <col:17, col:27> 'void *'
|   |         `-CStyleCastExpr 0x242d94cc878 <col:18, col:26> 'void *' <NullToPointer>
|   |           `-IntegerLiteral 0x242d94cc838 <col:26> 'int' 0
|   |-IfStmt 0x242d94ccbe8 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:179:5, line:182:5>
|   | |-OpaqueValueExpr 0x242d94ccbd0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x242d94ccbb8 <line:179:21, line:182:5>
|   |   `-ReturnStmt 0x242d94ccba8 <line:181:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |     `-ImplicitCastExpr 0x242d94ccb90 <col:17, col:27> 'int *' <NullToPointer>
|   |       `-ParenExpr 0x242d94ccb70 <col:17, col:27> 'void *'
|   |         `-CStyleCastExpr 0x242d94ccb48 <col:18, col:26> 'void *' <NullToPointer>
|   |           `-IntegerLiteral 0x242d94ccb08 <col:26> 'int' 0
|   |-IfStmt 0x242d94cce28 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:183:5, line:187:17> has_else
|   | |-BinaryOperator 0x242d94cccc8 <line:183:9, col:21> 'int' '=='
|   | | |-ImplicitCastExpr 0x242d94cccb0 <col:9, col:16> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x242d94ccc98 <col:9, col:16> 'char' <LValueToRValue>
|   | | |   `-ArraySubscriptExpr 0x242d94ccc60 <col:9, col:16> 'const char' lvalue
|   | | |     |-ImplicitCastExpr 0x242d94ccc48 <col:9> 'const char *' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x242d94ccc00 <col:9> 'const char *' lvalue ParmVar 0x242d94cc310 'value' 'const char *'
|   | | |     `-IntegerLiteral 0x242d94ccc20 <col:15> 'int' 0
|   | | `-CharacterLiteral 0x242d94ccc80 <col:21> 'int' 45
|   | |-CompoundStmt 0x242d94ccda0 <col:26, line:186:5>
|   | | |-UnaryOperator 0x242d94ccd08 <line:184:9, col:14> 'const char *' postfix '++'
|   | | | `-DeclRefExpr 0x242d94ccce8 <col:9> 'const char *' lvalue ParmVar 0x242d94cc310 'value' 'const char *'
|   | | `-BinaryOperator 0x242d94ccd80 <line:185:9, col:17> 'int' '='
|   | |   |-DeclRefExpr 0x242d94ccd20 <col:9> 'int' lvalue Var 0x242d94cc558 'isneg' 'int'
|   | |   `-IntegerLiteral 0x242d94ccd58 <col:17> 'int' 1
|   | `-BinaryOperator 0x242d94cce08 <line:187:9, col:17> 'int' '='
|   |   |-DeclRefExpr 0x242d94ccdc0 <col:9> 'int' lvalue Var 0x242d94cc558 'isneg' 'int'
|   |   `-IntegerLiteral 0x242d94ccde0 <col:17> 'int' 0
|   |-IfStmt 0x242d94ce350 <line:189:5, line:193:17> has_else
|   | |-BinaryOperator 0x242d94cd188 <line:189:9, col:67> 'int' '&&'
|   | | |-BinaryOperator 0x242d94ccf18 <col:9, col:21> 'int' '=='
|   | | | |-ImplicitCastExpr 0x242d94ccf00 <col:9, col:16> 'int' <IntegralCast>
|   | | | | `-ImplicitCastExpr 0x242d94ccee8 <col:9, col:16> 'char' <LValueToRValue>
|   | | | |   `-ArraySubscriptExpr 0x242d94cceb0 <col:9, col:16> 'const char' lvalue
|   | | | |     |-ImplicitCastExpr 0x242d94cce98 <col:9> 'const char *' <LValueToRValue>
|   | | | |     | `-DeclRefExpr 0x242d94cce50 <col:9> 'const char *' lvalue ParmVar 0x242d94cc310 'value' 'const char *'
|   | | | |     `-IntegerLiteral 0x242d94cce70 <col:15> 'int' 0
|   | | | `-CharacterLiteral 0x242d94cced0 <col:21> 'int' 48
|   | | `-ParenExpr 0x242d94cd168 <col:28, col:67> 'int'
|   | |   `-BinaryOperator 0x242d94cd148 <col:29, col:66> 'int' '||'
|   | |     |-ParenExpr 0x242d94cd020 <col:29, col:45> 'int'
|   | |     | `-BinaryOperator 0x242d94cd000 <col:30, col:42> 'int' '=='
|   | |     |   |-ImplicitCastExpr 0x242d94ccfe8 <col:30, col:37> 'int' <IntegralCast>
|   | |     |   | `-ImplicitCastExpr 0x242d94ccfd0 <col:30, col:37> 'char' <LValueToRValue>
|   | |     |   |   `-ArraySubscriptExpr 0x242d94ccf98 <col:30, col:37> 'const char' lvalue
|   | |     |   |     |-ImplicitCastExpr 0x242d94ccf80 <col:30> 'const char *' <LValueToRValue>
|   | |     |   |     | `-DeclRefExpr 0x242d94ccf38 <col:30> 'const char *' lvalue ParmVar 0x242d94cc310 'value' 'const char *'
|   | |     |   |     `-IntegerLiteral 0x242d94ccf58 <col:36> 'int' 1
|   | |     |   `-CharacterLiteral 0x242d94ccfb8 <col:42> 'int' 120
|   | |     `-ParenExpr 0x242d94cd128 <col:50, col:66> 'int'
|   | |       `-BinaryOperator 0x242d94cd108 <col:51, col:63> 'int' '=='
|   | |         |-ImplicitCastExpr 0x242d94cd0f0 <col:51, col:58> 'int' <IntegralCast>
|   | |         | `-ImplicitCastExpr 0x242d94cd0d8 <col:51, col:58> 'char' <LValueToRValue>
|   | |         |   `-ArraySubscriptExpr 0x242d94cd0a0 <col:51, col:58> 'const char' lvalue
|   | |         |     |-ImplicitCastExpr 0x242d94cd088 <col:51> 'const char *' <LValueToRValue>
|   | |         |     | `-DeclRefExpr 0x242d94cd040 <col:51> 'const char *' lvalue ParmVar 0x242d94cc310 'value' 'const char *'
|   | |         |     `-IntegerLiteral 0x242d94cd060 <col:57> 'int' 1
|   | |         `-CharacterLiteral 0x242d94cd0c0 <col:63> 'int' 88
|   | |-CompoundStmt 0x242d94cd2a0 <col:70, line:192:5>
|   | | |-CompoundAssignOperator 0x242d94cd1f0 <line:190:9, col:18> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'
|   | | | |-DeclRefExpr 0x242d94cd1a8 <col:9> 'const char *' lvalue ParmVar 0x242d94cc310 'value' 'const char *'
|   | | | `-IntegerLiteral 0x242d94cd1c8 <col:18> 'int' 2
|   | | `-BinaryOperator 0x242d94cd280 <line:191:9, col:17> 'int' '='
|   | |   |-DeclRefExpr 0x242d94cd220 <col:9> 'int' lvalue Var 0x242d94cc5d8 'ishex' 'int'
|   | |   `-IntegerLiteral 0x242d94cd258 <col:17> 'int' 1
|   | `-BinaryOperator 0x242d94ce330 <line:193:9, col:17> 'int' '='
|   |   |-DeclRefExpr 0x242d94cd2c0 <col:9> 'int' lvalue Var 0x242d94cc5d8 'ishex' 'int'
|   |   `-IntegerLiteral 0x242d94cd2e0 <col:17> 'int' 0
|   |-IfStmt 0x242d94ce8a0 <line:200:5, line:204:5>
|   | |-BinaryOperator 0x242d94ce778 <line:200:9, col:26> 'int' '||'
|   | | |-UnaryOperator 0x242d94ce6a0 <col:9, col:10> 'int' prefix '!' cannot overflow
|   | | | `-ImplicitCastExpr 0x242d94ce688 <col:10> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x242d94ce668 <col:10> 'int' lvalue Var 0x242d94cc688 'ret' 'int'
|   | | `-ImplicitCastExpr 0x242d94ce760 <col:17, col:26> 'int' <IntegralCast>
|   | |   `-ImplicitCastExpr 0x242d94ce748 <col:17, col:26> 'char' <LValueToRValue>
|   | |     `-ArraySubscriptExpr 0x242d94ce728 <col:17, col:26> 'const char' lvalue
|   | |       |-ImplicitCastExpr 0x242d94ce6f8 <col:17> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x242d94ce6b8 <col:17> 'const char *' lvalue ParmVar 0x242d94cc310 'value' 'const char *'
|   | |       `-ImplicitCastExpr 0x242d94ce710 <col:23> 'int' <LValueToRValue>
|   | |         `-DeclRefExpr 0x242d94ce6d8 <col:23> 'int' lvalue Var 0x242d94cc688 'ret' 'int'
|   | `-CompoundStmt 0x242d94ce888 <col:29, line:204:5>
|   |   `-ReturnStmt 0x242d94ce878 <line:203:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |     `-ImplicitCastExpr 0x242d94ce860 <col:17, col:27> 'int *' <NullToPointer>
|   |       `-ParenExpr 0x242d94ce840 <col:17, col:27> 'void *'
|   |         `-CStyleCastExpr 0x242d94ce818 <col:18, col:26> 'void *' <NullToPointer>
|   |           `-IntegerLiteral 0x242d94ce7d8 <col:26> 'int' 0
|   |-IfStmt 0x242d94cea68 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:206:5, line:207:17>
|   | |-OpaqueValueExpr 0x242d94cea50 <<invalid sloc>> '_Bool'
|   | `-BinaryOperator 0x242d94cea30 <col:9, col:17> 'int' '='
|   |   |-DeclRefExpr 0x242d94ce9e8 <col:9> 'int' lvalue Var 0x242d94cc558 'isneg' 'int'
|   |   `-IntegerLiteral 0x242d94cea08 <col:17> 'int' 0
|   `-IfStmt 0x242d94ced38 <line:211:5, line:215:5>
|     |-OpaqueValueExpr 0x242d94ced20 <<invalid sloc>> '_Bool'
|     `-CompoundStmt 0x242d94ced08 <line:211:16, line:215:5>
|       `-ReturnStmt 0x242d94cecf8 <line:214:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|         `-ImplicitCastExpr 0x242d94cece0 <col:17, col:27> 'int *' <NullToPointer>
|           `-ParenExpr 0x242d94cecc0 <col:17, col:27> 'void *'
|             `-CStyleCastExpr 0x242d94cec98 <col:18, col:26> 'void *' <NullToPointer>
|               `-IntegerLiteral 0x242d94cec58 <col:26> 'int' 0
|-FunctionDecl 0x242d94cf030 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:221:1, line:234:1> line:221:5 invalid X509V3_add_value_int 'int (const char *, const int *, int (*)())'
| |-ParmVarDecl 0x242d94cedf8 <col:26, col:38> col:38 used name 'const char *'
| |-ParmVarDecl 0x242d94cee78 <col:44, col:64> col:64 invalid aint 'const int *'
| |-ParmVarDecl 0x242d94cef08 <line:222:26, <invalid sloc>> col:26 invalid STACK_OF 'int (*)()':'int (*)()'
| `-CompoundStmt 0x242d94c8578 <line:223:1, line:234:1>
|   |-DeclStmt 0x242d94cf180 <line:224:5, col:17>
|   | `-VarDecl 0x242d94cf118 <col:5, col:11> col:11 used strtmp 'char *'
|   |-DeclStmt 0x242d94cf218 <line:225:5, col:12>
|   | `-VarDecl 0x242d94cf1b0 <col:5, col:9> col:9 used ret 'int'
|   |-IfStmt 0x242d94cf280 <line:227:5, line:228:16>
|   | |-OpaqueValueExpr 0x242d94cf268 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x242d94cf258 <col:9, col:16>
|   |   `-IntegerLiteral 0x242d94cf230 <col:16> 'int' 1
|   |-IfStmt 0x242d94c83f0 <line:229:5, line:230:16>
|   | |-OpaqueValueExpr 0x242d94c83d8 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x242d94c83c8 <col:9, col:16>
|   |   `-IntegerLiteral 0x242d94c83a0 <col:16> 'int' 0
|   |-CallExpr 0x242d94c84f0 <line:232:5, col:24> 'int'
|   | |-ImplicitCastExpr 0x242d94c84d8 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x242d94c8498 <col:5> 'int ()' Function 0x242d94c6600 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x242d94c8518 <col:18> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x242d94c84b8 <col:18> 'char *' lvalue Var 0x242d94cf118 'strtmp' 'char *'
|   `-ReturnStmt 0x242d94c8568 <line:233:5, col:12>
|     `-ImplicitCastExpr 0x242d94c8550 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x242d94c8530 <col:12> 'int' lvalue Var 0x242d94cf1b0 'ret' 'int'
|-FunctionDecl 0x242d94c8730 <line:236:1, line:265:1> line:236:5 invalid X509V3_get_value_bool 'int (const int *, int *)'
| |-ParmVarDecl 0x242d94c85d0 <col:27, col:45> col:45 invalid value 'const int *'
| |-ParmVarDecl 0x242d94c8650 <col:52, col:57> col:57 used asn1_bool 'int *'
| `-CompoundStmt 0x242d94ce218 <line:237:1, line:265:1>
|   |-DeclStmt 0x242d94c8878 <line:238:5, col:21>
|   | `-VarDecl 0x242d94c8810 <col:5, col:17> col:17 used btmp 'const char *'
|   |-IfStmt 0x242d94c89d0 <line:240:5, line:241:14>
|   | |-OpaqueValueExpr 0x242d94c89b8 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x242d94c89a0 <col:9, col:14> 'err' 0x242d94c8950
|   |-IfStmt 0x242d94cd660 <line:242:5, line:250:5>
|   | |-BinaryOperator 0x242d94cd538 <line:242:9, line:247:35> 'int' '||'
|   | | |-BinaryOperator 0x242d94cd3b0 <line:242:9, line:246:35> 'int' '||'
|   | | | |-BinaryOperator 0x242d94c91c8 <line:242:9, line:245:33> 'int' '||'
|   | | | | |-BinaryOperator 0x242d94c9040 <line:242:9, line:244:33> 'int' '||'
|   | | | | | |-BinaryOperator 0x242d94c8e78 <line:242:9, line:243:36> 'int' '||'
|   | | | | | | |-BinaryOperator 0x242d94c8cf0 <line:242:9, col:33> 'int' '=='
|   | | | | | | | |-CallExpr 0x242d94c8c50 <col:9, col:28> 'int'
|   | | | | | | | | |-ImplicitCastExpr 0x242d94c8c38 <col:9> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | | | | | | | | | `-DeclRefExpr 0x242d94c8b68 <col:9> 'int (const char *, const char *)' Function 0x242d94c89e8 'strcmp' 'int (const char *, const char *)'
|   | | | | | | | | |-ImplicitCastExpr 0x242d94c8c80 <col:16> 'const char *' <LValueToRValue>
|   | | | | | | | | | `-DeclRefExpr 0x242d94c8ba0 <col:16> 'const char *' lvalue Var 0x242d94c8810 'btmp' 'const char *'
|   | | | | | | | | `-ImplicitCastExpr 0x242d94c8cb0 <col:22> 'const char *' <NoOp>
|   | | | | | | | |   `-ImplicitCastExpr 0x242d94c8c98 <col:22> 'char *' <ArrayToPointerDecay>
|   | | | | | | | |     `-StringLiteral 0x242d94c8bc0 <col:22> 'char [5]' lvalue "TRUE"
|   | | | | | | | `-IntegerLiteral 0x242d94c8cc8 <col:33> 'int' 0
|   | | | | | | `-BinaryOperator 0x242d94c8e58 <line:243:12, col:36> 'int' '=='
|   | | | | | |   |-CallExpr 0x242d94c8db8 <col:12, col:31> 'int'
|   | | | | | |   | |-ImplicitCastExpr 0x242d94c8da0 <col:12> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | | | | | |   | | `-DeclRefExpr 0x242d94c8d10 <col:12> 'int (const char *, const char *)' Function 0x242d94c89e8 'strcmp' 'int (const char *, const char *)'
|   | | | | | |   | |-ImplicitCastExpr 0x242d94c8de8 <col:19> 'const char *' <LValueToRValue>
|   | | | | | |   | | `-DeclRefExpr 0x242d94c8d30 <col:19> 'const char *' lvalue Var 0x242d94c8810 'btmp' 'const char *'
|   | | | | | |   | `-ImplicitCastExpr 0x242d94c8e18 <col:25> 'const char *' <NoOp>
|   | | | | | |   |   `-ImplicitCastExpr 0x242d94c8e00 <col:25> 'char *' <ArrayToPointerDecay>
|   | | | | | |   |     `-StringLiteral 0x242d94c8d50 <col:25> 'char [5]' lvalue "true"
|   | | | | | |   `-IntegerLiteral 0x242d94c8e30 <col:36> 'int' 0
|   | | | | | `-BinaryOperator 0x242d94c9020 <line:244:12, col:33> 'int' '=='
|   | | | | |   |-CallExpr 0x242d94c8f80 <col:12, col:28> 'int'
|   | | | | |   | |-ImplicitCastExpr 0x242d94c8f68 <col:12> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | | | | |   | | `-DeclRefExpr 0x242d94c8e98 <col:12> 'int (const char *, const char *)' Function 0x242d94c89e8 'strcmp' 'int (const char *, const char *)'
|   | | | | |   | |-ImplicitCastExpr 0x242d94c8fb0 <col:19> 'const char *' <LValueToRValue>
|   | | | | |   | | `-DeclRefExpr 0x242d94c8eb8 <col:19> 'const char *' lvalue Var 0x242d94c8810 'btmp' 'const char *'
|   | | | | |   | `-ImplicitCastExpr 0x242d94c8fe0 <col:25> 'const char *' <NoOp>
|   | | | | |   |   `-ImplicitCastExpr 0x242d94c8fc8 <col:25> 'char *' <ArrayToPointerDecay>
|   | | | | |   |     `-StringLiteral 0x242d94c8f18 <col:25> 'char [2]' lvalue "Y"
|   | | | | |   `-IntegerLiteral 0x242d94c8ff8 <col:33> 'int' 0
|   | | | | `-BinaryOperator 0x242d94c91a8 <line:245:12, col:33> 'int' '=='
|   | | | |   |-CallExpr 0x242d94c9108 <col:12, col:28> 'int'
|   | | | |   | |-ImplicitCastExpr 0x242d94c90f0 <col:12> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | | | |   | | `-DeclRefExpr 0x242d94c9060 <col:12> 'int (const char *, const char *)' Function 0x242d94c89e8 'strcmp' 'int (const char *, const char *)'
|   | | | |   | |-ImplicitCastExpr 0x242d94c9138 <col:19> 'const char *' <LValueToRValue>
|   | | | |   | | `-DeclRefExpr 0x242d94c9080 <col:19> 'const char *' lvalue Var 0x242d94c8810 'btmp' 'const char *'
|   | | | |   | `-ImplicitCastExpr 0x242d94c9168 <col:25> 'const char *' <NoOp>
|   | | | |   |   `-ImplicitCastExpr 0x242d94c9150 <col:25> 'char *' <ArrayToPointerDecay>
|   | | | |   |     `-StringLiteral 0x242d94c90a0 <col:25> 'char [2]' lvalue "y"
|   | | | |   `-IntegerLiteral 0x242d94c9180 <col:33> 'int' 0
|   | | | `-BinaryOperator 0x242d94cd390 <line:246:12, col:35> 'int' '=='
|   | | |   |-CallExpr 0x242d94c9290 <col:12, col:30> 'int'
|   | | |   | |-ImplicitCastExpr 0x242d94c9278 <col:12> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | | |   | | `-DeclRefExpr 0x242d94c91e8 <col:12> 'int (const char *, const char *)' Function 0x242d94c89e8 'strcmp' 'int (const char *, const char *)'
|   | | |   | |-ImplicitCastExpr 0x242d94cd320 <col:19> 'const char *' <LValueToRValue>
|   | | |   | | `-DeclRefExpr 0x242d94c9208 <col:19> 'const char *' lvalue Var 0x242d94c8810 'btmp' 'const char *'
|   | | |   | `-ImplicitCastExpr 0x242d94cd350 <col:25> 'const char *' <NoOp>
|   | | |   |   `-ImplicitCastExpr 0x242d94cd338 <col:25> 'char *' <ArrayToPointerDecay>
|   | | |   |     `-StringLiteral 0x242d94c9228 <col:25> 'char [4]' lvalue "YES"
|   | | |   `-IntegerLiteral 0x242d94cd368 <col:35> 'int' 0
|   | | `-BinaryOperator 0x242d94cd518 <line:247:12, col:35> 'int' '=='
|   | |   |-CallExpr 0x242d94cd478 <col:12, col:30> 'int'
|   | |   | |-ImplicitCastExpr 0x242d94cd460 <col:12> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | |   | | `-DeclRefExpr 0x242d94cd3d0 <col:12> 'int (const char *, const char *)' Function 0x242d94c89e8 'strcmp' 'int (const char *, const char *)'
|   | |   | |-ImplicitCastExpr 0x242d94cd4a8 <col:19> 'const char *' <LValueToRValue>
|   | |   | | `-DeclRefExpr 0x242d94cd3f0 <col:19> 'const char *' lvalue Var 0x242d94c8810 'btmp' 'const char *'
|   | |   | `-ImplicitCastExpr 0x242d94cd4d8 <col:25> 'const char *' <NoOp>
|   | |   |   `-ImplicitCastExpr 0x242d94cd4c0 <col:25> 'char *' <ArrayToPointerDecay>
|   | |   |     `-StringLiteral 0x242d94cd410 <col:25> 'char [4]' lvalue "yes"
|   | |   `-IntegerLiteral 0x242d94cd4f0 <col:35> 'int' 0
|   | `-CompoundStmt 0x242d94cd640 <col:38, line:250:5>
|   |   |-BinaryOperator 0x242d94cd5e8 <line:248:9, col:22> 'int' '='
|   |   | |-UnaryOperator 0x242d94cd5a8 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
|   |   | | `-ImplicitCastExpr 0x242d94cd590 <col:10> 'int *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x242d94cd558 <col:10> 'int *' lvalue ParmVar 0x242d94c8650 'asn1_bool' 'int *'
|   |   | `-IntegerLiteral 0x242d94cd5c0 <col:22> 'int' 255
|   |   `-ReturnStmt 0x242d94cd630 <line:249:9, col:16>
|   |     `-IntegerLiteral 0x242d94cd608 <col:16> 'int' 1
|   |-IfStmt 0x242d94ce078 <line:251:5, line:259:5>
|   | |-BinaryOperator 0x242d94cdf68 <line:251:9, line:256:34> 'int' '||'
|   | | |-BinaryOperator 0x242d94cdde0 <line:251:9, line:255:34> 'int' '||'
|   | | | |-BinaryOperator 0x242d94cdc58 <line:251:9, line:254:33> 'int' '||'
|   | | | | |-BinaryOperator 0x242d94cdad0 <line:251:9, line:253:33> 'int' '||'
|   | | | | | |-BinaryOperator 0x242d94cd948 <line:251:9, line:252:37> 'int' '||'
|   | | | | | | |-BinaryOperator 0x242d94cd7c0 <line:251:9, col:34> 'int' '=='
|   | | | | | | | |-CallExpr 0x242d94cd720 <col:9, col:29> 'int'
|   | | | | | | | | |-ImplicitCastExpr 0x242d94cd708 <col:9> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | | | | | | | | | `-DeclRefExpr 0x242d94cd678 <col:9> 'int (const char *, const char *)' Function 0x242d94c89e8 'strcmp' 'int (const char *, const char *)'
|   | | | | | | | | |-ImplicitCastExpr 0x242d94cd750 <col:16> 'const char *' <LValueToRValue>
|   | | | | | | | | | `-DeclRefExpr 0x242d94cd698 <col:16> 'const char *' lvalue Var 0x242d94c8810 'btmp' 'const char *'
|   | | | | | | | | `-ImplicitCastExpr 0x242d94cd780 <col:22> 'const char *' <NoOp>
|   | | | | | | | |   `-ImplicitCastExpr 0x242d94cd768 <col:22> 'char *' <ArrayToPointerDecay>
|   | | | | | | | |     `-StringLiteral 0x242d94cd6b8 <col:22> 'char [6]' lvalue "FALSE"
|   | | | | | | | `-IntegerLiteral 0x242d94cd798 <col:34> 'int' 0
|   | | | | | | `-BinaryOperator 0x242d94cd928 <line:252:12, col:37> 'int' '=='
|   | | | | | |   |-CallExpr 0x242d94cd888 <col:12, col:32> 'int'
|   | | | | | |   | |-ImplicitCastExpr 0x242d94cd870 <col:12> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | | | | | |   | | `-DeclRefExpr 0x242d94cd7e0 <col:12> 'int (const char *, const char *)' Function 0x242d94c89e8 'strcmp' 'int (const char *, const char *)'
|   | | | | | |   | |-ImplicitCastExpr 0x242d94cd8b8 <col:19> 'const char *' <LValueToRValue>
|   | | | | | |   | | `-DeclRefExpr 0x242d94cd800 <col:19> 'const char *' lvalue Var 0x242d94c8810 'btmp' 'const char *'
|   | | | | | |   | `-ImplicitCastExpr 0x242d94cd8e8 <col:25> 'const char *' <NoOp>
|   | | | | | |   |   `-ImplicitCastExpr 0x242d94cd8d0 <col:25> 'char *' <ArrayToPointerDecay>
|   | | | | | |   |     `-StringLiteral 0x242d94cd820 <col:25> 'char [6]' lvalue "false"
|   | | | | | |   `-IntegerLiteral 0x242d94cd900 <col:37> 'int' 0
|   | | | | | `-BinaryOperator 0x242d94cdab0 <line:253:12, col:33> 'int' '=='
|   | | | | |   |-CallExpr 0x242d94cda10 <col:12, col:28> 'int'
|   | | | | |   | |-ImplicitCastExpr 0x242d94cd9f8 <col:12> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | | | | |   | | `-DeclRefExpr 0x242d94cd968 <col:12> 'int (const char *, const char *)' Function 0x242d94c89e8 'strcmp' 'int (const char *, const char *)'
|   | | | | |   | |-ImplicitCastExpr 0x242d94cda40 <col:19> 'const char *' <LValueToRValue>
|   | | | | |   | | `-DeclRefExpr 0x242d94cd988 <col:19> 'const char *' lvalue Var 0x242d94c8810 'btmp' 'const char *'
|   | | | | |   | `-ImplicitCastExpr 0x242d94cda70 <col:25> 'const char *' <NoOp>
|   | | | | |   |   `-ImplicitCastExpr 0x242d94cda58 <col:25> 'char *' <ArrayToPointerDecay>
|   | | | | |   |     `-StringLiteral 0x242d94cd9a8 <col:25> 'char [2]' lvalue "N"
|   | | | | |   `-IntegerLiteral 0x242d94cda88 <col:33> 'int' 0
|   | | | | `-BinaryOperator 0x242d94cdc38 <line:254:12, col:33> 'int' '=='
|   | | | |   |-CallExpr 0x242d94cdb98 <col:12, col:28> 'int'
|   | | | |   | |-ImplicitCastExpr 0x242d94cdb80 <col:12> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | | | |   | | `-DeclRefExpr 0x242d94cdaf0 <col:12> 'int (const char *, const char *)' Function 0x242d94c89e8 'strcmp' 'int (const char *, const char *)'
|   | | | |   | |-ImplicitCastExpr 0x242d94cdbc8 <col:19> 'const char *' <LValueToRValue>
|   | | | |   | | `-DeclRefExpr 0x242d94cdb10 <col:19> 'const char *' lvalue Var 0x242d94c8810 'btmp' 'const char *'
|   | | | |   | `-ImplicitCastExpr 0x242d94cdbf8 <col:25> 'const char *' <NoOp>
|   | | | |   |   `-ImplicitCastExpr 0x242d94cdbe0 <col:25> 'char *' <ArrayToPointerDecay>
|   | | | |   |     `-StringLiteral 0x242d94cdb30 <col:25> 'char [2]' lvalue "n"
|   | | | |   `-IntegerLiteral 0x242d94cdc10 <col:33> 'int' 0
|   | | | `-BinaryOperator 0x242d94cddc0 <line:255:12, col:34> 'int' '=='
|   | | |   |-CallExpr 0x242d94cdd20 <col:12, col:29> 'int'
|   | | |   | |-ImplicitCastExpr 0x242d94cdd08 <col:12> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | | |   | | `-DeclRefExpr 0x242d94cdc78 <col:12> 'int (const char *, const char *)' Function 0x242d94c89e8 'strcmp' 'int (const char *, const char *)'
|   | | |   | |-ImplicitCastExpr 0x242d94cdd50 <col:19> 'const char *' <LValueToRValue>
|   | | |   | | `-DeclRefExpr 0x242d94cdc98 <col:19> 'const char *' lvalue Var 0x242d94c8810 'btmp' 'const char *'
|   | | |   | `-ImplicitCastExpr 0x242d94cdd80 <col:25> 'const char *' <NoOp>
|   | | |   |   `-ImplicitCastExpr 0x242d94cdd68 <col:25> 'char *' <ArrayToPointerDecay>
|   | | |   |     `-StringLiteral 0x242d94cdcb8 <col:25> 'char [3]' lvalue "NO"
|   | | |   `-IntegerLiteral 0x242d94cdd98 <col:34> 'int' 0
|   | | `-BinaryOperator 0x242d94cdf48 <line:256:12, col:34> 'int' '=='
|   | |   |-CallExpr 0x242d94cdea8 <col:12, col:29> 'int'
|   | |   | |-ImplicitCastExpr 0x242d94cde90 <col:12> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | |   | | `-DeclRefExpr 0x242d94cde00 <col:12> 'int (const char *, const char *)' Function 0x242d94c89e8 'strcmp' 'int (const char *, const char *)'
|   | |   | |-ImplicitCastExpr 0x242d94cded8 <col:19> 'const char *' <LValueToRValue>
|   | |   | | `-DeclRefExpr 0x242d94cde20 <col:19> 'const char *' lvalue Var 0x242d94c8810 'btmp' 'const char *'
|   | |   | `-ImplicitCastExpr 0x242d94cdf08 <col:25> 'const char *' <NoOp>
|   | |   |   `-ImplicitCastExpr 0x242d94cdef0 <col:25> 'char *' <ArrayToPointerDecay>
|   | |   |     `-StringLiteral 0x242d94cde40 <col:25> 'char [3]' lvalue "no"
|   | |   `-IntegerLiteral 0x242d94cdf20 <col:34> 'int' 0
|   | `-CompoundStmt 0x242d94ce058 <col:37, line:259:5>
|   |   |-BinaryOperator 0x242d94ce000 <line:257:9, col:22> 'int' '='
|   |   | |-UnaryOperator 0x242d94cdfc0 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
|   |   | | `-ImplicitCastExpr 0x242d94cdfa8 <col:10> 'int *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x242d94cdf88 <col:10> 'int *' lvalue ParmVar 0x242d94c8650 'asn1_bool' 'int *'
|   |   | `-IntegerLiteral 0x242d94cdfd8 <col:22> 'int' 0
|   |   `-ReturnStmt 0x242d94ce048 <line:258:9, col:16>
|   |     `-IntegerLiteral 0x242d94ce020 <col:16> 'int' 1
|   |-LabelStmt 0x242d94ce0b8 <line:260:2, col:5> 'err'
|   | `-NullStmt 0x242d94ce0b0 <col:5>
|   `-ReturnStmt 0x242d94ce208 <line:264:5, col:12>
|     `-IntegerLiteral 0x242d94ce1e0 <col:12> 'int' 0
|-FunctionDecl 0x242d94c89e8 <line:242:9> col:9 implicit used strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x242d94c8a88 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x242d94c8af0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x242d94c93e0 <line:267:1, line:277:1> line:267:5 invalid X509V3_get_value_int 'int (const int *, int **)'
| |-ParmVarDecl 0x242d94ce270 <col:26, col:44> col:44 invalid value 'const int *'
| |-ParmVarDecl 0x242d94c9300 <col:51, col:66> col:66 invalid aint 'int **'
| `-CompoundStmt 0x242d94c9690 <line:268:1, line:277:1>
|   |-IfStmt 0x242d94c9640 <line:271:5, line:274:5>
|   | |-OpaqueValueExpr 0x242d94c9628 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x242d94c9610 <line:271:64, line:274:5>
|   |   `-ReturnStmt 0x242d94c9600 <line:273:9, col:16>
|   |     `-IntegerLiteral 0x242d94c95d8 <col:16> 'int' 0
|   `-ReturnStmt 0x242d94c9680 <line:276:5, col:12>
|     `-IntegerLiteral 0x242d94c9658 <col:12> 'int' 1
|-FunctionDecl 0x242d94c9a68 <line:533:1, line:562:1> line:533:13 used skip_prefix 'void (const unsigned char **, size_t *, size_t, unsigned int)' static
| |-ParmVarDecl 0x242d94c96f8 <col:25, col:47> col:47 used p 'const unsigned char **'
| |-ParmVarDecl 0x242d94c97c8 <col:50, col:58> col:58 used plen 'size_t *'
| |-ParmVarDecl 0x242d94c9840 <line:534:25, col:32> col:32 used subject_len 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d94c98c0 <line:535:25, col:38> col:38 used flags 'unsigned int'
| `-CompoundStmt 0x242d94c72d8 <line:536:1, line:562:1>
|   |-DeclStmt 0x242d94c9c28 <line:537:5, col:38>
|   | `-VarDecl 0x242d94c9b58 <col:5, col:37> col:26 used pattern 'const unsigned char *' cinit
|   |   `-ImplicitCastExpr 0x242d94c9c10 <col:36, col:37> 'const unsigned char *' <LValueToRValue>
|   |     `-UnaryOperator 0x242d94c9bf8 <col:36, col:37> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   |       `-ImplicitCastExpr 0x242d94c9be0 <col:37> 'const unsigned char **' <LValueToRValue>
|   |         `-DeclRefExpr 0x242d94c9bc0 <col:37> 'const unsigned char **' lvalue ParmVar 0x242d94c96f8 'p' 'const unsigned char **'
|   |-DeclStmt 0x242d94c9d20 <line:538:5, col:31>
|   | `-VarDecl 0x242d94c9c50 <col:5, col:27> col:12 used pattern_len 'size_t':'unsigned long long' cinit
|   |   `-ImplicitCastExpr 0x242d94c9d08 <col:26, col:27> 'size_t':'unsigned long long' <LValueToRValue>
|   |     `-UnaryOperator 0x242d94c9cf0 <col:26, col:27> 'size_t':'unsigned long long' lvalue prefix '*' cannot overflow
|   |       `-ImplicitCastExpr 0x242d94c9cd8 <col:27> 'size_t *' <LValueToRValue>
|   |         `-DeclRefExpr 0x242d94c9cb8 <col:27> 'size_t *' lvalue ParmVar 0x242d94c97c8 'plen' 'size_t *'
|   |-IfStmt 0x242d94c9da8 <line:546:5, line:547:9>
|   | |-OpaqueValueExpr 0x242d94c9d90 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x242d94c9d80 <col:9>
|   |-WhileStmt 0x242d94ca0c8 <line:549:5, line:555:5>
|   | |-BinaryOperator 0x242d94c9f00 <line:549:12, col:42> 'int' '&&'
|   | | |-BinaryOperator 0x242d94c9e48 <col:12, col:26> 'int' '>'
|   | | | |-ImplicitCastExpr 0x242d94c9e18 <col:12> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x242d94c9dc0 <col:12> 'size_t':'unsigned long long' lvalue Var 0x242d94c9c50 'pattern_len' 'size_t':'unsigned long long'
|   | | | `-ImplicitCastExpr 0x242d94c9e30 <col:26> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x242d94c9df8 <col:26> 'size_t':'unsigned long long' lvalue ParmVar 0x242d94c9840 'subject_len' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x242d94c9ee8 <col:41, col:42> 'int' <IntegralCast>
|   | |   `-ImplicitCastExpr 0x242d94c9ed0 <col:41, col:42> 'unsigned char' <LValueToRValue>
|   | |     `-UnaryOperator 0x242d94c9eb8 <col:41, col:42> 'const unsigned char' lvalue prefix '*' cannot overflow
|   | |       `-ImplicitCastExpr 0x242d94c9ea0 <col:42> 'const unsigned char *' <LValueToRValue>
|   | |         `-DeclRefExpr 0x242d94c9e68 <col:42> 'const unsigned char *' lvalue Var 0x242d94c9b58 'pattern' 'const unsigned char *'
|   | `-CompoundStmt 0x242d94ca0a0 <col:51, line:555:5>
|   |   |-IfStmt 0x242d94ca018 <line:550:9, line:552:13>
|   |   | |-OpaqueValueExpr 0x242d94ca000 <<invalid sloc>> '_Bool'
|   |   | `-BreakStmt 0x242d94c9ff8 <col:13>
|   |   |-UnaryOperator 0x242d94ca050 <line:553:9, col:11> 'const unsigned char *' prefix '++'
|   |   | `-DeclRefExpr 0x242d94ca030 <col:11> 'const unsigned char *' lvalue Var 0x242d94c9b58 'pattern' 'const unsigned char *'
|   |   `-UnaryOperator 0x242d94ca088 <line:554:9, col:11> 'size_t':'unsigned long long' prefix '--'
|   |     `-DeclRefExpr 0x242d94ca068 <col:11> 'size_t':'unsigned long long' lvalue Var 0x242d94c9c50 'pattern_len' 'size_t':'unsigned long long'
|   `-IfStmt 0x242d94c72c0 <line:558:5, line:561:5>
|     |-BinaryOperator 0x242d94ca150 <line:558:9, col:24> 'int' '=='
|     | |-ImplicitCastExpr 0x242d94ca120 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|     | | `-DeclRefExpr 0x242d94ca0e0 <col:9> 'size_t':'unsigned long long' lvalue Var 0x242d94c9c50 'pattern_len' 'size_t':'unsigned long long'
|     | `-ImplicitCastExpr 0x242d94ca138 <col:24> 'size_t':'unsigned long long' <LValueToRValue>
|     |   `-DeclRefExpr 0x242d94ca100 <col:24> 'size_t':'unsigned long long' lvalue ParmVar 0x242d94c9840 'subject_len' 'size_t':'unsigned long long'
|     `-CompoundStmt 0x242d94ca2c0 <col:37, line:561:5>
|       |-BinaryOperator 0x242d94ca1f8 <line:559:9, col:14> 'const unsigned char *' '='
|       | |-UnaryOperator 0x242d94ca1a8 <col:9, col:10> 'const unsigned char *' lvalue prefix '*' cannot overflow
|       | | `-ImplicitCastExpr 0x242d94ca190 <col:10> 'const unsigned char **' <LValueToRValue>
|       | |   `-DeclRefExpr 0x242d94ca170 <col:10> 'const unsigned char **' lvalue ParmVar 0x242d94c96f8 'p' 'const unsigned char **'
|       | `-ImplicitCastExpr 0x242d94ca1e0 <col:14> 'const unsigned char *' <LValueToRValue>
|       |   `-DeclRefExpr 0x242d94ca1c0 <col:14> 'const unsigned char *' lvalue Var 0x242d94c9b58 'pattern' 'const unsigned char *'
|       `-BinaryOperator 0x242d94ca2a0 <line:560:9, col:17> 'size_t':'unsigned long long' '='
|         |-UnaryOperator 0x242d94ca250 <col:9, col:10> 'size_t':'unsigned long long' lvalue prefix '*' cannot overflow
|         | `-ImplicitCastExpr 0x242d94ca238 <col:10> 'size_t *' <LValueToRValue>
|         |   `-DeclRefExpr 0x242d94ca218 <col:10> 'size_t *' lvalue ParmVar 0x242d94c97c8 'plen' 'size_t *'
|         `-ImplicitCastExpr 0x242d94ca288 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x242d94ca268 <col:17> 'size_t':'unsigned long long' lvalue Var 0x242d94c9c50 'pattern_len' 'size_t':'unsigned long long'
|-FunctionDecl 0x242d94c76f0 <line:565:1, line:591:1> line:565:12 used equal_nocase 'int (const unsigned char *, size_t, const unsigned char *, size_t, unsigned int)' static
| |-ParmVarDecl 0x242d94c7328 <col:25, col:46> col:46 used pattern 'const unsigned char *'
| |-ParmVarDecl 0x242d94c73a0 <col:55, col:62> col:62 used pattern_len 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d94c7420 <line:566:25, col:46> col:46 used subject 'const unsigned char *'
| |-ParmVarDecl 0x242d94c7498 <col:55, col:62> col:62 used subject_len 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d94c7518 <line:567:25, col:38> col:38 used flags 'unsigned int'
| `-CompoundStmt 0x242d94d46e8 <line:568:1, line:591:1>
|   |-CallExpr 0x242d94c7910 <line:569:5, col:59> 'void'
|   | |-ImplicitCastExpr 0x242d94c78f8 <col:5> 'void (*)(const unsigned char **, size_t *, size_t, unsigned int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x242d94c77d0 <col:5> 'void (const unsigned char **, size_t *, size_t, unsigned int)' Function 0x242d94c9a68 'skip_prefix' 'void (const unsigned char **, size_t *, size_t, unsigned int)'
|   | |-UnaryOperator 0x242d94c7810 <col:17, col:18> 'const unsigned char **' prefix '&' cannot overflow
|   | | `-DeclRefExpr 0x242d94c77f0 <col:18> 'const unsigned char *' lvalue ParmVar 0x242d94c7328 'pattern' 'const unsigned char *'
|   | |-UnaryOperator 0x242d94c7848 <col:27, col:28> 'size_t *' prefix '&' cannot overflow
|   | | `-DeclRefExpr 0x242d94c7828 <col:28> 'size_t':'unsigned long long' lvalue ParmVar 0x242d94c73a0 'pattern_len' 'size_t':'unsigned long long'
|   | |-ImplicitCastExpr 0x242d94c7950 <col:41> 'size_t':'unsigned long long' <LValueToRValue>
|   | | `-DeclRefExpr 0x242d94c7860 <col:41> 'size_t':'unsigned long long' lvalue ParmVar 0x242d94c7498 'subject_len' 'size_t':'unsigned long long'
|   | `-ImplicitCastExpr 0x242d94c7968 <col:54> 'unsigned int' <LValueToRValue>
|   |   `-DeclRefExpr 0x242d94c7880 <col:54> 'unsigned int' lvalue ParmVar 0x242d94c7518 'flags' 'unsigned int'
|   |-IfStmt 0x242d94c7a48 <line:570:5, line:571:16>
|   | |-BinaryOperator 0x242d94c79f0 <line:570:9, col:24> 'int' '!='
|   | | |-ImplicitCastExpr 0x242d94c79c0 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x242d94c7980 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x242d94c73a0 'pattern_len' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x242d94c79d8 <col:24> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x242d94c79a0 <col:24> 'size_t':'unsigned long long' lvalue ParmVar 0x242d94c7498 'subject_len' 'size_t':'unsigned long long'
|   | `-ReturnStmt 0x242d94c7a38 <line:571:9, col:16>
|   |   `-IntegerLiteral 0x242d94c7a10 <col:16> 'int' 0
|   |-WhileStmt 0x242d94d4698 <line:572:5, line:589:5>
|   | |-ImplicitCastExpr 0x242d94c7a80 <line:572:12> 'size_t':'unsigned long long' <LValueToRValue>
|   | | `-DeclRefExpr 0x242d94c7a60 <col:12> 'size_t':'unsigned long long' lvalue ParmVar 0x242d94c73a0 'pattern_len' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x242d94d4650 <col:25, line:589:5>
|   |   |-DeclStmt 0x242d94c7b80 <line:573:9, col:35>
|   |   | `-VarDecl 0x242d94c7ab0 <col:9, col:28> col:23 used l 'unsigned char' cinit
|   |   |   `-ImplicitCastExpr 0x242d94c7b68 <col:27, col:28> 'unsigned char' <LValueToRValue>
|   |   |     `-UnaryOperator 0x242d94c7b50 <col:27, col:28> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   |       `-ImplicitCastExpr 0x242d94c7b38 <col:28> 'const unsigned char *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x242d94c7b18 <col:28> 'const unsigned char *' lvalue ParmVar 0x242d94c7328 'pattern' 'const unsigned char *'
|   |   |-DeclStmt 0x242d94c7c80 <line:574:9, col:35>
|   |   | `-VarDecl 0x242d94c7bb0 <col:9, col:28> col:23 used r 'unsigned char' cinit
|   |   |   `-ImplicitCastExpr 0x242d94c7c68 <col:27, col:28> 'unsigned char' <LValueToRValue>
|   |   |     `-UnaryOperator 0x242d94c7c50 <col:27, col:28> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   |       `-ImplicitCastExpr 0x242d94c7c38 <col:28> 'const unsigned char *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x242d94c7c18 <col:28> 'const unsigned char *' lvalue ParmVar 0x242d94c7420 'subject' 'const unsigned char *'
|   |   |-IfStmt 0x242d94c7d80 <line:576:9, line:577:20>
|   |   | |-BinaryOperator 0x242d94c7d28 <line:576:13, col:18> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x242d94c7d10 <col:13> 'int' <IntegralCast>
|   |   | | | `-ImplicitCastExpr 0x242d94c7cf8 <col:13> 'unsigned char' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x242d94c7c98 <col:13> 'unsigned char' lvalue Var 0x242d94c7ab0 'l' 'unsigned char'
|   |   | | `-IntegerLiteral 0x242d94c7cd0 <col:18> 'int' 0
|   |   | `-ReturnStmt 0x242d94c7d70 <line:577:13, col:20>
|   |   |   `-IntegerLiteral 0x242d94c7d48 <col:20> 'int' 0
|   |   |-IfStmt 0x242d94d4590 <line:578:9, line:585:9>
|   |   | |-BinaryOperator 0x242d94c7e50 <line:578:13, col:18> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x242d94c7e20 <col:13> 'int' <IntegralCast>
|   |   | | | `-ImplicitCastExpr 0x242d94c7df0 <col:13> 'unsigned char' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x242d94c7d98 <col:13> 'unsigned char' lvalue Var 0x242d94c7ab0 'l' 'unsigned char'
|   |   | | `-ImplicitCastExpr 0x242d94c7e38 <col:18> 'int' <IntegralCast>
|   |   | |   `-ImplicitCastExpr 0x242d94c7e08 <col:18> 'unsigned char' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x242d94c7db8 <col:18> 'unsigned char' lvalue Var 0x242d94c7bb0 'r' 'unsigned char'
|   |   | `-CompoundStmt 0x242d94d4568 <col:21, line:585:9>
|   |   |   |-IfStmt 0x242d94c80d8 <line:579:13, line:580:33>
|   |   |   | |-BinaryOperator 0x242d94c7f80 <line:579:17, col:34> 'int' '&&'
|   |   |   | | |-BinaryOperator 0x242d94c7ed8 <col:17, col:24> 'int' '<='
|   |   |   | | | |-CharacterLiteral 0x242d94c7e70 <col:17> 'int' 65
|   |   |   | | | `-ImplicitCastExpr 0x242d94c7ec0 <col:24> 'int' <IntegralCast>
|   |   |   | | |   `-ImplicitCastExpr 0x242d94c7ea8 <col:24> 'unsigned char' <LValueToRValue>
|   |   |   | | |     `-DeclRefExpr 0x242d94c7e88 <col:24> 'unsigned char' lvalue Var 0x242d94c7ab0 'l' 'unsigned char'
|   |   |   | | `-BinaryOperator 0x242d94c7f60 <col:29, col:34> 'int' '<='
|   |   |   | |   |-ImplicitCastExpr 0x242d94c7f48 <col:29> 'int' <IntegralCast>
|   |   |   | |   | `-ImplicitCastExpr 0x242d94c7f30 <col:29> 'unsigned char' <LValueToRValue>
|   |   |   | |   |   `-DeclRefExpr 0x242d94c7ef8 <col:29> 'unsigned char' lvalue Var 0x242d94c7ab0 'l' 'unsigned char'
|   |   |   | |   `-CharacterLiteral 0x242d94c7f18 <col:34> 'int' 90
|   |   |   | `-BinaryOperator 0x242d94c80b8 <line:580:17, col:33> 'unsigned char' '='
|   |   |   |   |-DeclRefExpr 0x242d94c7fa0 <col:17> 'unsigned char' lvalue Var 0x242d94c7ab0 'l' 'unsigned char'
|   |   |   |   `-ImplicitCastExpr 0x242d94c80a0 <col:21, col:33> 'unsigned char' <IntegralCast>
|   |   |   |     `-BinaryOperator 0x242d94c8080 <col:21, col:33> 'int' '+'
|   |   |   |       |-ParenExpr 0x242d94c8048 <col:21, col:29> 'int'
|   |   |   |       | `-BinaryOperator 0x242d94c8028 <col:22, col:26> 'int' '-'
|   |   |   |       |   |-ImplicitCastExpr 0x242d94c8010 <col:22> 'int' <IntegralCast>
|   |   |   |       |   | `-ImplicitCastExpr 0x242d94c7ff8 <col:22> 'unsigned char' <LValueToRValue>
|   |   |   |       |   |   `-DeclRefExpr 0x242d94c7fc0 <col:22> 'unsigned char' lvalue Var 0x242d94c7ab0 'l' 'unsigned char'
|   |   |   |       |   `-CharacterLiteral 0x242d94c7fe0 <col:26> 'int' 65
|   |   |   |       `-CharacterLiteral 0x242d94c8068 <col:33> 'int' 97
|   |   |   |-IfStmt 0x242d94d4440 <line:581:13, line:582:33>
|   |   |   | |-BinaryOperator 0x242d94c8200 <line:581:17, col:34> 'int' '&&'
|   |   |   | | |-BinaryOperator 0x242d94c8158 <col:17, col:24> 'int' '<='
|   |   |   | | | |-CharacterLiteral 0x242d94c80f0 <col:17> 'int' 65
|   |   |   | | | `-ImplicitCastExpr 0x242d94c8140 <col:24> 'int' <IntegralCast>
|   |   |   | | |   `-ImplicitCastExpr 0x242d94c8128 <col:24> 'unsigned char' <LValueToRValue>
|   |   |   | | |     `-DeclRefExpr 0x242d94c8108 <col:24> 'unsigned char' lvalue Var 0x242d94c7bb0 'r' 'unsigned char'
|   |   |   | | `-BinaryOperator 0x242d94c81e0 <col:29, col:34> 'int' '<='
|   |   |   | |   |-ImplicitCastExpr 0x242d94c81c8 <col:29> 'int' <IntegralCast>
|   |   |   | |   | `-ImplicitCastExpr 0x242d94c81b0 <col:29> 'unsigned char' <LValueToRValue>
|   |   |   | |   |   `-DeclRefExpr 0x242d94c8178 <col:29> 'unsigned char' lvalue Var 0x242d94c7bb0 'r' 'unsigned char'
|   |   |   | |   `-CharacterLiteral 0x242d94c8198 <col:34> 'int' 90
|   |   |   | `-BinaryOperator 0x242d94d4420 <line:582:17, col:33> 'unsigned char' '='
|   |   |   |   |-DeclRefExpr 0x242d94c8220 <col:17> 'unsigned char' lvalue Var 0x242d94c7bb0 'r' 'unsigned char'
|   |   |   |   `-ImplicitCastExpr 0x242d94d4408 <col:21, col:33> 'unsigned char' <IntegralCast>
|   |   |   |     `-BinaryOperator 0x242d94d43e8 <col:21, col:33> 'int' '+'
|   |   |   |       |-ParenExpr 0x242d94d43b0 <col:21, col:29> 'int'
|   |   |   |       | `-BinaryOperator 0x242d94d4390 <col:22, col:26> 'int' '-'
|   |   |   |       |   |-ImplicitCastExpr 0x242d94c8290 <col:22> 'int' <IntegralCast>
|   |   |   |       |   | `-ImplicitCastExpr 0x242d94c8278 <col:22> 'unsigned char' <LValueToRValue>
|   |   |   |       |   |   `-DeclRefExpr 0x242d94c8240 <col:22> 'unsigned char' lvalue Var 0x242d94c7bb0 'r' 'unsigned char'
|   |   |   |       |   `-CharacterLiteral 0x242d94c8260 <col:26> 'int' 65
|   |   |   |       `-CharacterLiteral 0x242d94d43d0 <col:33> 'int' 97
|   |   |   `-IfStmt 0x242d94d4550 <line:583:13, line:584:24>
|   |   |     |-BinaryOperator 0x242d94d44f8 <line:583:17, col:22> 'int' '!='
|   |   |     | |-ImplicitCastExpr 0x242d94d44c8 <col:17> 'int' <IntegralCast>
|   |   |     | | `-ImplicitCastExpr 0x242d94d4498 <col:17> 'unsigned char' <LValueToRValue>
|   |   |     | |   `-DeclRefExpr 0x242d94d4458 <col:17> 'unsigned char' lvalue Var 0x242d94c7ab0 'l' 'unsigned char'
|   |   |     | `-ImplicitCastExpr 0x242d94d44e0 <col:22> 'int' <IntegralCast>
|   |   |     |   `-ImplicitCastExpr 0x242d94d44b0 <col:22> 'unsigned char' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x242d94d4478 <col:22> 'unsigned char' lvalue Var 0x242d94c7bb0 'r' 'unsigned char'
|   |   |     `-ReturnStmt 0x242d94d4540 <line:584:17, col:24>
|   |   |       `-IntegerLiteral 0x242d94d4518 <col:24> 'int' 0
|   |   |-UnaryOperator 0x242d94d45c8 <line:586:9, col:11> 'const unsigned char *' prefix '++'
|   |   | `-DeclRefExpr 0x242d94d45a8 <col:11> 'const unsigned char *' lvalue ParmVar 0x242d94c7328 'pattern' 'const unsigned char *'
|   |   |-UnaryOperator 0x242d94d4600 <line:587:9, col:11> 'const unsigned char *' prefix '++'
|   |   | `-DeclRefExpr 0x242d94d45e0 <col:11> 'const unsigned char *' lvalue ParmVar 0x242d94c7420 'subject' 'const unsigned char *'
|   |   `-UnaryOperator 0x242d94d4638 <line:588:9, col:11> 'size_t':'unsigned long long' prefix '--'
|   |     `-DeclRefExpr 0x242d94d4618 <col:11> 'size_t':'unsigned long long' lvalue ParmVar 0x242d94c73a0 'pattern_len' 'size_t':'unsigned long long'
|   `-ReturnStmt 0x242d94d46d8 <line:590:5, col:12>
|     `-IntegerLiteral 0x242d94d46b0 <col:12> 'int' 1
|-FunctionDecl 0x242d94d4a50 <line:594:1, line:602:1> line:594:12 used equal_case 'int (const unsigned char *, size_t, const unsigned char *, size_t, unsigned int)' static
| |-ParmVarDecl 0x242d94d4730 <col:23, col:44> col:44 used pattern 'const unsigned char *'
| |-ParmVarDecl 0x242d94d47a8 <col:53, col:60> col:60 used pattern_len 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d94d4828 <line:595:23, col:44> col:44 used subject 'const unsigned char *'
| |-ParmVarDecl 0x242d94d48a0 <col:53, col:60> col:60 used subject_len 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d94d4920 <line:596:23, col:36> col:36 used flags 'unsigned int'
| `-CompoundStmt 0x242d94d5198 <line:597:1, line:602:1>
|   |-CallExpr 0x242d94d4c18 <line:598:5, col:59> 'void'
|   | |-ImplicitCastExpr 0x242d94d4c00 <col:5> 'void (*)(const unsigned char **, size_t *, size_t, unsigned int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x242d94d4b30 <col:5> 'void (const unsigned char **, size_t *, size_t, unsigned int)' Function 0x242d94c9a68 'skip_prefix' 'void (const unsigned char **, size_t *, size_t, unsigned int)'
|   | |-UnaryOperator 0x242d94d4b70 <col:17, col:18> 'const unsigned char **' prefix '&' cannot overflow
|   | | `-DeclRefExpr 0x242d94d4b50 <col:18> 'const unsigned char *' lvalue ParmVar 0x242d94d4730 'pattern' 'const unsigned char *'
|   | |-UnaryOperator 0x242d94d4ba8 <col:27, col:28> 'size_t *' prefix '&' cannot overflow
|   | | `-DeclRefExpr 0x242d94d4b88 <col:28> 'size_t':'unsigned long long' lvalue ParmVar 0x242d94d47a8 'pattern_len' 'size_t':'unsigned long long'
|   | |-ImplicitCastExpr 0x242d94d4c58 <col:41> 'size_t':'unsigned long long' <LValueToRValue>
|   | | `-DeclRefExpr 0x242d94d4bc0 <col:41> 'size_t':'unsigned long long' lvalue ParmVar 0x242d94d48a0 'subject_len' 'size_t':'unsigned long long'
|   | `-ImplicitCastExpr 0x242d94d4c70 <col:54> 'unsigned int' <LValueToRValue>
|   |   `-DeclRefExpr 0x242d94d4be0 <col:54> 'unsigned int' lvalue ParmVar 0x242d94d4920 'flags' 'unsigned int'
|   |-IfStmt 0x242d94d4d50 <line:599:5, line:600:16>
|   | |-BinaryOperator 0x242d94d4cf8 <line:599:9, col:24> 'int' '!='
|   | | |-ImplicitCastExpr 0x242d94d4cc8 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x242d94d4c88 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x242d94d47a8 'pattern_len' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x242d94d4ce0 <col:24> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x242d94d4ca8 <col:24> 'size_t':'unsigned long long' lvalue ParmVar 0x242d94d48a0 'subject_len' 'size_t':'unsigned long long'
|   | `-ReturnStmt 0x242d94d4d40 <line:600:9, col:16>
|   |   `-IntegerLiteral 0x242d94d4d18 <col:16> 'int' 0
|   `-ReturnStmt 0x242d94d5188 <line:601:5, col:49>
|     `-UnaryOperator 0x242d94d5170 <col:12, col:49> 'int' prefix '!' cannot overflow
|       `-CallExpr 0x242d94d50c0 <col:13, col:49> 'int'
|         |-ImplicitCastExpr 0x242d94d50a8 <col:13> 'int (*)(const void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x242d94d4fa0 <col:13> 'int (const void *, const void *, unsigned long long)' Function 0x242d94d4db0 'memcmp' 'int (const void *, const void *, unsigned long long)'
|         |-ImplicitCastExpr 0x242d94d5110 <col:20> 'const void *' <BitCast>
|         | `-ImplicitCastExpr 0x242d94d50f8 <col:20> 'const unsigned char *' <LValueToRValue>
|         |   `-DeclRefExpr 0x242d94d4fd8 <col:20> 'const unsigned char *' lvalue ParmVar 0x242d94d4730 'pattern' 'const unsigned char *'
|         |-ImplicitCastExpr 0x242d94d5140 <col:29> 'const void *' <BitCast>
|         | `-ImplicitCastExpr 0x242d94d5128 <col:29> 'const unsigned char *' <LValueToRValue>
|         |   `-DeclRefExpr 0x242d94d4ff8 <col:29> 'const unsigned char *' lvalue ParmVar 0x242d94d4828 'subject' 'const unsigned char *'
|         `-ImplicitCastExpr 0x242d94d5158 <col:38> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x242d94d5018 <col:38> 'size_t':'unsigned long long' lvalue ParmVar 0x242d94d47a8 'pattern_len' 'size_t':'unsigned long long'
|-FunctionDecl 0x242d94d4db0 <col:13> col:13 implicit used memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x242d94d4e50 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x242d94d4eb8 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x242d94d4f20 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x242d94d2520 <line:608:1, line:631:1> line:608:12 used equal_email 'int (const unsigned char *, size_t, const unsigned char *, size_t, unsigned int)' static
| |-ParmVarDecl 0x242d94d51d8 <col:24, col:45> col:45 used a 'const unsigned char *'
| |-ParmVarDecl 0x242d94d5250 <col:48, col:55> col:55 used a_len 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d94d52d0 <line:609:24, col:45> col:45 used b 'const unsigned char *'
| |-ParmVarDecl 0x242d94d2370 <col:48, col:55> col:55 used b_len 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d94d23f0 <line:610:24, col:37> col:37 unused_flags 'unsigned int'
| `-CompoundStmt 0x242d94d31b8 <line:611:1, line:631:1>
|   |-DeclStmt 0x242d94d26b0 <line:612:5, col:21>
|   | `-VarDecl 0x242d94d2610 <col:5, col:16> col:12 used i 'size_t':'unsigned long long' cinit
|   |   `-ImplicitCastExpr 0x242d94d2698 <col:16> 'size_t':'unsigned long long' <LValueToRValue>
|   |     `-DeclRefExpr 0x242d94d2678 <col:16> 'size_t':'unsigned long long' lvalue ParmVar 0x242d94d5250 'a_len' 'size_t':'unsigned long long'
|   |-IfStmt 0x242d94d2790 <line:613:5, line:614:16>
|   | |-BinaryOperator 0x242d94d2738 <line:613:9, col:18> 'int' '!='
|   | | |-ImplicitCastExpr 0x242d94d2708 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x242d94d26c8 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x242d94d5250 'a_len' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x242d94d2720 <col:18> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x242d94d26e8 <col:18> 'size_t':'unsigned long long' lvalue ParmVar 0x242d94d2370 'b_len' 'size_t':'unsigned long long'
|   | `-ReturnStmt 0x242d94d2780 <line:614:9, col:16>
|   |   `-IntegerLiteral 0x242d94d2758 <col:16> 'int' 0
|   |-WhileStmt 0x242d94d2ec8 <line:620:5, line:627:5>
|   | |-BinaryOperator 0x242d94d2838 <line:620:12, col:16> 'int' '>'
|   | | |-ImplicitCastExpr 0x242d94d2808 <col:12> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x242d94d27a8 <col:12> 'size_t':'unsigned long long' lvalue Var 0x242d94d2610 'i' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x242d94d2820 <col:16> 'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x242d94d27e0 <col:16> 'int' 0
|   | `-CompoundStmt 0x242d94d2ea8 <col:19, line:627:5>
|   |   |-UnaryOperator 0x242d94d2878 <line:621:9, col:11> 'size_t':'unsigned long long' prefix '--'
|   |   | `-DeclRefExpr 0x242d94d2858 <col:11> 'size_t':'unsigned long long' lvalue Var 0x242d94d2610 'i' 'size_t':'unsigned long long'
|   |   `-IfStmt 0x242d94d2e90 <line:622:9, line:626:9>
|   |     |-BinaryOperator 0x242d94d2a80 <line:622:13, col:36> 'int' '||'
|   |     | |-BinaryOperator 0x242d94d2968 <col:13, col:21> 'int' '=='
|   |     | | |-ImplicitCastExpr 0x242d94d2950 <col:13, col:16> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x242d94d2938 <col:13, col:16> 'unsigned char' <LValueToRValue>
|   |     | | |   `-ArraySubscriptExpr 0x242d94d2900 <col:13, col:16> 'const unsigned char' lvalue
|   |     | | |     |-ImplicitCastExpr 0x242d94d28d0 <col:13> 'const unsigned char *' <LValueToRValue>
|   |     | | |     | `-DeclRefExpr 0x242d94d2890 <col:13> 'const unsigned char *' lvalue ParmVar 0x242d94d51d8 'a' 'const unsigned char *'
|   |     | | |     `-ImplicitCastExpr 0x242d94d28e8 <col:15> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | | |       `-DeclRefExpr 0x242d94d28b0 <col:15> 'size_t':'unsigned long long' lvalue Var 0x242d94d2610 'i' 'size_t':'unsigned long long'
|   |     | | `-CharacterLiteral 0x242d94d2920 <col:21> 'int' 64
|   |     | `-BinaryOperator 0x242d94d2a60 <col:28, col:36> 'int' '=='
|   |     |   |-ImplicitCastExpr 0x242d94d2a48 <col:28, col:31> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x242d94d2a30 <col:28, col:31> 'unsigned char' <LValueToRValue>
|   |     |   |   `-ArraySubscriptExpr 0x242d94d29f8 <col:28, col:31> 'const unsigned char' lvalue
|   |     |   |     |-ImplicitCastExpr 0x242d94d29c8 <col:28> 'const unsigned char *' <LValueToRValue>
|   |     |   |     | `-DeclRefExpr 0x242d94d2988 <col:28> 'const unsigned char *' lvalue ParmVar 0x242d94d52d0 'b' 'const unsigned char *'
|   |     |   |     `-ImplicitCastExpr 0x242d94d29e0 <col:30> 'size_t':'unsigned long long' <LValueToRValue>
|   |     |   |       `-DeclRefExpr 0x242d94d29a8 <col:30> 'size_t':'unsigned long long' lvalue Var 0x242d94d2610 'i' 'size_t':'unsigned long long'
|   |     |   `-CharacterLiteral 0x242d94d2a18 <col:36> 'int' 64
|   |     `-CompoundStmt 0x242d94d2e70 <col:41, line:626:9>
|   |       |-IfStmt 0x242d94d2e50 <line:623:13, line:624:24>
|   |       | |-UnaryOperator 0x242d94d2e00 <line:623:17, col:68> 'int' prefix '!' cannot overflow
|   |       | | `-CallExpr 0x242d94d2da0 <col:18, col:68> 'int'
|   |       | |   |-ImplicitCastExpr 0x242d94d2d88 <col:18> 'int (*)(const unsigned char *, size_t, const unsigned char *, size_t, unsigned int)' <FunctionToPointerDecay>
|   |       | |   | `-DeclRefExpr 0x242d94d2aa0 <col:18> 'int (const unsigned char *, size_t, const unsigned char *, size_t, unsigned int)' Function 0x242d94c76f0 'equal_nocase' 'int (const unsigned char *, size_t, const unsigned char *, size_t, unsigned int)'
|   |       | |   |-BinaryOperator 0x242d94d2b30 <col:31, col:35> 'const unsigned char *' '+'
|   |       | |   | |-ImplicitCastExpr 0x242d94d2b00 <col:31> 'const unsigned char *' <LValueToRValue>
|   |       | |   | | `-DeclRefExpr 0x242d94d2ac0 <col:31> 'const unsigned char *' lvalue ParmVar 0x242d94d51d8 'a' 'const unsigned char *'
|   |       | |   | `-ImplicitCastExpr 0x242d94d2b18 <col:35> 'size_t':'unsigned long long' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x242d94d2ae0 <col:35> 'size_t':'unsigned long long' lvalue Var 0x242d94d2610 'i' 'size_t':'unsigned long long'
|   |       | |   |-BinaryOperator 0x242d94d2bc0 <col:38, col:46> 'unsigned long long' '-'
|   |       | |   | |-ImplicitCastExpr 0x242d94d2b90 <col:38> 'size_t':'unsigned long long' <LValueToRValue>
|   |       | |   | | `-DeclRefExpr 0x242d94d2b50 <col:38> 'size_t':'unsigned long long' lvalue ParmVar 0x242d94d5250 'a_len' 'size_t':'unsigned long long'
|   |       | |   | `-ImplicitCastExpr 0x242d94d2ba8 <col:46> 'size_t':'unsigned long long' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x242d94d2b70 <col:46> 'size_t':'unsigned long long' lvalue Var 0x242d94d2610 'i' 'size_t':'unsigned long long'
|   |       | |   |-BinaryOperator 0x242d94d2c50 <col:49, col:53> 'const unsigned char *' '+'
|   |       | |   | |-ImplicitCastExpr 0x242d94d2c20 <col:49> 'const unsigned char *' <LValueToRValue>
|   |       | |   | | `-DeclRefExpr 0x242d94d2be0 <col:49> 'const unsigned char *' lvalue ParmVar 0x242d94d52d0 'b' 'const unsigned char *'
|   |       | |   | `-ImplicitCastExpr 0x242d94d2c38 <col:53> 'size_t':'unsigned long long' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x242d94d2c00 <col:53> 'size_t':'unsigned long long' lvalue Var 0x242d94d2610 'i' 'size_t':'unsigned long long'
|   |       | |   |-BinaryOperator 0x242d94d2ce0 <col:56, col:64> 'unsigned long long' '-'
|   |       | |   | |-ImplicitCastExpr 0x242d94d2cb0 <col:56> 'size_t':'unsigned long long' <LValueToRValue>
|   |       | |   | | `-DeclRefExpr 0x242d94d2c70 <col:56> 'size_t':'unsigned long long' lvalue ParmVar 0x242d94d5250 'a_len' 'size_t':'unsigned long long'
|   |       | |   | `-ImplicitCastExpr 0x242d94d2cc8 <col:64> 'size_t':'unsigned long long' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x242d94d2c90 <col:64> 'size_t':'unsigned long long' lvalue Var 0x242d94d2610 'i' 'size_t':'unsigned long long'
|   |       | |   `-ImplicitCastExpr 0x242d94d2de8 <col:67> 'unsigned int' <IntegralCast>
|   |       | |     `-IntegerLiteral 0x242d94d2d00 <col:67> 'int' 0
|   |       | `-ReturnStmt 0x242d94d2e40 <line:624:17, col:24>
|   |       |   `-IntegerLiteral 0x242d94d2e18 <col:24> 'int' 0
|   |       `-BreakStmt 0x242d94d2e68 <line:625:13>
|   |-IfStmt 0x242d94d2ff0 <line:628:5, line:629:13>
|   | |-BinaryOperator 0x242d94d2f58 <line:628:9, col:14> 'int' '=='
|   | | |-ImplicitCastExpr 0x242d94d2f28 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x242d94d2ee0 <col:9> 'size_t':'unsigned long long' lvalue Var 0x242d94d2610 'i' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x242d94d2f40 <col:14> 'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x242d94d2f00 <col:14> 'int' 0
|   | `-BinaryOperator 0x242d94d2fd0 <line:629:9, col:13> 'size_t':'unsigned long long' '='
|   |   |-DeclRefExpr 0x242d94d2f78 <col:9> 'size_t':'unsigned long long' lvalue Var 0x242d94d2610 'i' 'size_t':'unsigned long long'
|   |   `-ImplicitCastExpr 0x242d94d2fb8 <col:13> 'size_t':'unsigned long long' <LValueToRValue>
|   |     `-DeclRefExpr 0x242d94d2f98 <col:13> 'size_t':'unsigned long long' lvalue ParmVar 0x242d94d5250 'a_len' 'size_t':'unsigned long long'
|   `-ReturnStmt 0x242d94d31a8 <line:630:5, col:36>
|     `-CallExpr 0x242d94d30e8 <col:12, col:36> 'int'
|       |-ImplicitCastExpr 0x242d94d30d0 <col:12> 'int (*)(const unsigned char *, size_t, const unsigned char *, size_t, unsigned int)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x242d94d3008 <col:12> 'int (const unsigned char *, size_t, const unsigned char *, size_t, unsigned int)' Function 0x242d94d4a50 'equal_case' 'int (const unsigned char *, size_t, const unsigned char *, size_t, unsigned int)'
|       |-ImplicitCastExpr 0x242d94d3130 <col:23> 'const unsigned char *' <LValueToRValue>
|       | `-DeclRefExpr 0x242d94d3028 <col:23> 'const unsigned char *' lvalue ParmVar 0x242d94d51d8 'a' 'const unsigned char *'
|       |-ImplicitCastExpr 0x242d94d3148 <col:26> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x242d94d3048 <col:26> 'size_t':'unsigned long long' lvalue Var 0x242d94d2610 'i' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x242d94d3160 <col:29> 'const unsigned char *' <LValueToRValue>
|       | `-DeclRefExpr 0x242d94d3068 <col:29> 'const unsigned char *' lvalue ParmVar 0x242d94d52d0 'b' 'const unsigned char *'
|       |-ImplicitCastExpr 0x242d94d3178 <col:32> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x242d94d3088 <col:32> 'size_t':'unsigned long long' lvalue Var 0x242d94d2610 'i' 'size_t':'unsigned long long'
|       `-ImplicitCastExpr 0x242d94d3190 <col:35> 'unsigned int' <IntegralCast>
|         `-IntegerLiteral 0x242d94d30a8 <col:35> 'int' 0
|-FunctionDecl 0x242d94d3740 <line:637:1, line:686:1> line:637:12 used wildcard_match 'int (const unsigned char *, size_t, const unsigned char *, size_t, const unsigned char *, size_t, unsigned int)' static
| |-ParmVarDecl 0x242d94d3208 <col:27, col:48> col:48 used prefix 'const unsigned char *'
| |-ParmVarDecl 0x242d94d3280 <col:56, col:63> col:63 used prefix_len 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d94d3300 <line:638:27, col:48> col:48 used suffix 'const unsigned char *'
| |-ParmVarDecl 0x242d94d3390 <col:56, col:63> col:63 used suffix_len 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d94d3410 <line:639:27, col:48> col:48 used subject 'const unsigned char *'
| |-ParmVarDecl 0x242d94d3488 <col:57, col:64> col:64 used subject_len 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d94d3508 <line:640:27, col:40> col:40 used flags 'unsigned int'
| `-CompoundStmt 0x242d94d0860 <line:641:1, line:686:1>
|   |-DeclStmt 0x242d94d38b0 <line:642:5, col:40>
|   | `-VarDecl 0x242d94d3848 <col:5, col:26> col:26 used wildcard_start 'const unsigned char *'
|   |-DeclStmt 0x242d94d3948 <line:643:5, col:38>
|   | `-VarDecl 0x242d94d38e0 <col:5, col:26> col:26 used wildcard_end 'const unsigned char *'
|   |-DeclStmt 0x242d94d39e0 <line:644:5, col:27>
|   | `-VarDecl 0x242d94d3978 <col:5, col:26> col:26 used p 'const unsigned char *'
|   |-DeclStmt 0x242d94d3aa0 <line:645:5, col:24>
|   | `-VarDecl 0x242d94d3a10 <col:5, col:23> col:9 used allow_multi 'int' cinit
|   |   `-IntegerLiteral 0x242d94d3a78 <col:23> 'int' 0
|   |-DeclStmt 0x242d94d3b60 <line:646:5, col:23>
|   | `-VarDecl 0x242d94d3ad0 <col:5, col:22> col:9 used allow_idna 'int' cinit
|   |   `-IntegerLiteral 0x242d94d3b38 <col:22> 'int' 0
|   |-IfStmt 0x242d94d3c98 <line:648:5, line:649:16>
|   | |-BinaryOperator 0x242d94d3c40 <line:648:9, col:36> 'int' '<'
|   | | |-ImplicitCastExpr 0x242d94d3c28 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x242d94d3b78 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x242d94d3488 'subject_len' 'size_t':'unsigned long long'
|   | | `-BinaryOperator 0x242d94d3c08 <col:23, col:36> 'unsigned long long' '+'
|   | |   |-ImplicitCastExpr 0x242d94d3bd8 <col:23> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x242d94d3b98 <col:23> 'size_t':'unsigned long long' lvalue ParmVar 0x242d94d3280 'prefix_len' 'size_t':'unsigned long long'
|   | |   `-ImplicitCastExpr 0x242d94d3bf0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   | |     `-DeclRefExpr 0x242d94d3bb8 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x242d94d3390 'suffix_len' 'size_t':'unsigned long long'
|   | `-ReturnStmt 0x242d94d3c88 <line:649:9, col:16>
|   |   `-IntegerLiteral 0x242d94d3c60 <col:16> 'int' 0
|   |-IfStmt 0x242d94d3e98 <line:650:5, line:651:16>
|   | |-UnaryOperator 0x242d94d3e48 <line:650:9, col:69> 'int' prefix '!' cannot overflow
|   | | `-CallExpr 0x242d94d3d88 <col:10, col:69> 'int'
|   | |   |-ImplicitCastExpr 0x242d94d3d70 <col:10> 'int (*)(const unsigned char *, size_t, const unsigned char *, size_t, unsigned int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x242d94d3cb0 <col:10> 'int (const unsigned char *, size_t, const unsigned char *, size_t, unsigned int)' Function 0x242d94c76f0 'equal_nocase' 'int (const unsigned char *, size_t, const unsigned char *, size_t, unsigned int)'
|   | |   |-ImplicitCastExpr 0x242d94d3dd0 <col:23> 'const unsigned char *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x242d94d3cd0 <col:23> 'const unsigned char *' lvalue ParmVar 0x242d94d3208 'prefix' 'const unsigned char *'
|   | |   |-ImplicitCastExpr 0x242d94d3de8 <col:31> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x242d94d3cf0 <col:31> 'size_t':'unsigned long long' lvalue ParmVar 0x242d94d3280 'prefix_len' 'size_t':'unsigned long long'
|   | |   |-ImplicitCastExpr 0x242d94d3e00 <col:43> 'const unsigned char *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x242d94d3d10 <col:43> 'const unsigned char *' lvalue ParmVar 0x242d94d3410 'subject' 'const unsigned char *'
|   | |   |-ImplicitCastExpr 0x242d94d3e18 <col:52> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x242d94d3d30 <col:52> 'size_t':'unsigned long long' lvalue ParmVar 0x242d94d3280 'prefix_len' 'size_t':'unsigned long long'
|   | |   `-ImplicitCastExpr 0x242d94d3e30 <col:64> 'unsigned int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x242d94d3d50 <col:64> 'unsigned int' lvalue ParmVar 0x242d94d3508 'flags' 'unsigned int'
|   | `-ReturnStmt 0x242d94d3e88 <line:651:9, col:16>
|   |   `-IntegerLiteral 0x242d94d3e60 <col:16> 'int' 0
|   |-BinaryOperator 0x242d94d3f78 <line:652:5, col:32> 'const unsigned char *' '='
|   | |-DeclRefExpr 0x242d94d3eb0 <col:5> 'const unsigned char *' lvalue Var 0x242d94d3848 'wildcard_start' 'const unsigned char *'
|   | `-BinaryOperator 0x242d94d3f58 <col:22, col:32> 'const unsigned char *' '+'
|   |   |-ImplicitCastExpr 0x242d94d3f28 <col:22> 'const unsigned char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x242d94d3ee8 <col:22> 'const unsigned char *' lvalue ParmVar 0x242d94d3410 'subject' 'const unsigned char *'
|   |   `-ImplicitCastExpr 0x242d94d3f40 <col:32> 'size_t':'unsigned long long' <LValueToRValue>
|   |     `-DeclRefExpr 0x242d94d3f08 <col:32> 'size_t':'unsigned long long' lvalue ParmVar 0x242d94d3280 'prefix_len' 'size_t':'unsigned long long'
|   |-BinaryOperator 0x242d94d40d8 <line:653:5, col:55> 'const unsigned char *' '='
|   | |-DeclRefExpr 0x242d94d3f98 <col:5> 'const unsigned char *' lvalue Var 0x242d94d38e0 'wildcard_end' 'const unsigned char *'
|   | `-BinaryOperator 0x242d94d40b8 <col:20, col:55> 'const unsigned char *' '+'
|   |   |-ImplicitCastExpr 0x242d94d40a0 <col:20> 'const unsigned char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x242d94d3fd0 <col:20> 'const unsigned char *' lvalue ParmVar 0x242d94d3410 'subject' 'const unsigned char *'
|   |   `-ParenExpr 0x242d94d4080 <col:30, col:55> 'unsigned long long'
|   |     `-BinaryOperator 0x242d94d4060 <col:31, col:45> 'unsigned long long' '-'
|   |       |-ImplicitCastExpr 0x242d94d4030 <col:31> 'size_t':'unsigned long long' <LValueToRValue>
|   |       | `-DeclRefExpr 0x242d94d3ff0 <col:31> 'size_t':'unsigned long long' lvalue ParmVar 0x242d94d3488 'subject_len' 'size_t':'unsigned long long'
|   |       `-ImplicitCastExpr 0x242d94d4048 <col:45> 'size_t':'unsigned long long' <LValueToRValue>
|   |         `-DeclRefExpr 0x242d94d4010 <col:45> 'size_t':'unsigned long long' lvalue ParmVar 0x242d94d3390 'suffix_len' 'size_t':'unsigned long long'
|   |-IfStmt 0x242d94d42e0 <line:654:5, line:655:16>
|   | |-UnaryOperator 0x242d94d4290 <line:654:9, col:74> 'int' prefix '!' cannot overflow
|   | | `-CallExpr 0x242d94d41d0 <col:10, col:74> 'int'
|   | |   |-ImplicitCastExpr 0x242d94d41b8 <col:10> 'int (*)(const unsigned char *, size_t, const unsigned char *, size_t, unsigned int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x242d94d40f8 <col:10> 'int (const unsigned char *, size_t, const unsigned char *, size_t, unsigned int)' Function 0x242d94c76f0 'equal_nocase' 'int (const unsigned char *, size_t, const unsigned char *, size_t, unsigned int)'
|   | |   |-ImplicitCastExpr 0x242d94d4218 <col:23> 'const unsigned char *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x242d94d4118 <col:23> 'const unsigned char *' lvalue Var 0x242d94d38e0 'wildcard_end' 'const unsigned char *'
|   | |   |-ImplicitCastExpr 0x242d94d4230 <col:37> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x242d94d4138 <col:37> 'size_t':'unsigned long long' lvalue ParmVar 0x242d94d3390 'suffix_len' 'size_t':'unsigned long long'
|   | |   |-ImplicitCastExpr 0x242d94d4248 <col:49> 'const unsigned char *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x242d94d4158 <col:49> 'const unsigned char *' lvalue ParmVar 0x242d94d3300 'suffix' 'const unsigned char *'
|   | |   |-ImplicitCastExpr 0x242d94d4260 <col:57> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x242d94d4178 <col:57> 'size_t':'unsigned long long' lvalue ParmVar 0x242d94d3390 'suffix_len' 'size_t':'unsigned long long'
|   | |   `-ImplicitCastExpr 0x242d94d4278 <col:69> 'unsigned int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x242d94d4198 <col:69> 'unsigned int' lvalue ParmVar 0x242d94d3508 'flags' 'unsigned int'
|   | `-ReturnStmt 0x242d94d42d0 <line:655:9, col:16>
|   |   `-IntegerLiteral 0x242d94d42a8 <col:16> 'int' 0
|   |-IfStmt 0x242d94cf690 <line:660:5, line:666:5>
|   | |-BinaryOperator 0x242d94cf418 <line:660:9, col:39> 'int' '&&'
|   | | |-BinaryOperator 0x242d94cf340 <col:9, col:23> 'int' '=='
|   | | | |-ImplicitCastExpr 0x242d94d4340 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x242d94d42f8 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x242d94d3280 'prefix_len' 'size_t':'unsigned long long'
|   | | | `-ImplicitCastExpr 0x242d94d4358 <col:23> 'unsigned long long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x242d94d4318 <col:23> 'int' 0
|   | | `-BinaryOperator 0x242d94cf3f8 <col:28, col:39> 'int' '=='
|   | |   |-ImplicitCastExpr 0x242d94cf3e0 <col:28, col:29> 'int' <IntegralCast>
|   | |   | `-ImplicitCastExpr 0x242d94cf3c8 <col:28, col:29> 'unsigned char' <LValueToRValue>
|   | |   |   `-UnaryOperator 0x242d94cf398 <col:28, col:29> 'const unsigned char' lvalue prefix '*' cannot overflow
|   | |   |     `-ImplicitCastExpr 0x242d94cf380 <col:29> 'const unsigned char *' <LValueToRValue>
|   | |   |       `-DeclRefExpr 0x242d94cf360 <col:29> 'const unsigned char *' lvalue ParmVar 0x242d94d3300 'suffix' 'const unsigned char *'
|   | |   `-CharacterLiteral 0x242d94cf3b0 <col:39> 'int' 46
|   | `-CompoundStmt 0x242d94cf668 <col:44, line:666:5>
|   |   |-IfStmt 0x242d94cf500 <line:661:9, line:662:20>
|   |   | |-BinaryOperator 0x242d94cf4a8 <line:661:13, col:31> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x242d94cf478 <col:13> 'const unsigned char *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x242d94cf438 <col:13> 'const unsigned char *' lvalue Var 0x242d94d3848 'wildcard_start' 'const unsigned char *'
|   |   | | `-ImplicitCastExpr 0x242d94cf490 <col:31> 'const unsigned char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x242d94cf458 <col:31> 'const unsigned char *' lvalue Var 0x242d94d38e0 'wildcard_end' 'const unsigned char *'
|   |   | `-ReturnStmt 0x242d94cf4f0 <line:662:13, col:20>
|   |   |   `-IntegerLiteral 0x242d94cf4c8 <col:20> 'int' 0
|   |   |-BinaryOperator 0x242d94cf578 <line:663:9, col:22> 'int' '='
|   |   | |-DeclRefExpr 0x242d94cf518 <col:9> 'int' lvalue Var 0x242d94d3ad0 'allow_idna' 'int'
|   |   | `-IntegerLiteral 0x242d94cf550 <col:22> 'int' 1
|   |   `-IfStmt 0x242d94cf650 <line:664:9, line:665:27>
|   |     |-OpaqueValueExpr 0x242d94cf638 <<invalid sloc>> '_Bool'
|   |     `-BinaryOperator 0x242d94cf618 <col:13, col:27> 'int' '='
|   |       |-DeclRefExpr 0x242d94cf5b8 <col:13> 'int' lvalue Var 0x242d94d3a10 'allow_multi' 'int'
|   |       `-IntegerLiteral 0x242d94cf5f0 <col:27> 'int' 1
|   |-IfStmt 0x242d94cfc68 <line:668:5, line:670:16>
|   | |-BinaryOperator 0x242d94cfc10 <line:668:9, line:669:72> 'int' '&&'
|   | | |-BinaryOperator 0x242d94cf790 <line:668:9, line:669:24> 'int' '&&'
|   | | | |-UnaryOperator 0x242d94cf6e0 <line:668:9, col:10> 'int' prefix '!' cannot overflow
|   | | | | `-ImplicitCastExpr 0x242d94cf6c8 <col:10> 'int' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x242d94cf6a8 <col:10> 'int' lvalue Var 0x242d94d3ad0 'allow_idna' 'int'
|   | | | `-BinaryOperator 0x242d94cf770 <line:669:9, col:24> 'int' '>='
|   | | |   |-ImplicitCastExpr 0x242d94cf740 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x242d94cf6f8 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x242d94d3488 'subject_len' 'size_t':'unsigned long long'
|   | | |   `-ImplicitCastExpr 0x242d94cf758 <col:24> 'unsigned long long' <IntegralCast>
|   | | |     `-IntegerLiteral 0x242d94cf718 <col:24> 'int' 4
|   | | `-BinaryOperator 0x242d94cfbf0 <col:29, col:72> 'int' '=='
|   | |   |-CallExpr 0x242d94cfb30 <col:29, col:67> 'int'
|   | |   | |-ImplicitCastExpr 0x242d94cfb18 <col:29> 'int (*)(const char *, const char *, unsigned long long)' <FunctionToPointerDecay>
|   | |   | | `-DeclRefExpr 0x242d94cf9e0 <col:29> 'int (const char *, const char *, unsigned long long)' Function 0x242d94cf7f0 'strncasecmp' 'int (const char *, const char *, unsigned long long)'
|   | |   | |-ImplicitCastExpr 0x242d94cfb68 <col:41, col:49> 'const char *' <NoOp>
|   | |   | | `-CStyleCastExpr 0x242d94cfa68 <col:41, col:49> 'char *' <BitCast>
|   | |   | |   `-ImplicitCastExpr 0x242d94cfa50 <col:49> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
|   | |   | |     `-DeclRefExpr 0x242d94cfa18 <col:49> 'const unsigned char *' lvalue ParmVar 0x242d94d3410 'subject' 'const unsigned char *'
|   | |   | |-ImplicitCastExpr 0x242d94cfb98 <col:58> 'const char *' <NoOp>
|   | |   | | `-ImplicitCastExpr 0x242d94cfb80 <col:58> 'char *' <ArrayToPointerDecay>
|   | |   | |   `-StringLiteral 0x242d94cfa90 <col:58> 'char [5]' lvalue "xn--"
|   | |   | `-ImplicitCastExpr 0x242d94cfbb0 <col:66> 'unsigned long long' <IntegralCast>
|   | |   |   `-IntegerLiteral 0x242d94cfab0 <col:66> 'int' 4
|   | |   `-IntegerLiteral 0x242d94cfbc8 <col:72> 'int' 0
|   | `-ReturnStmt 0x242d94cfc58 <line:670:9, col:16>
|   |   `-IntegerLiteral 0x242d94cfc30 <col:16> 'int' 0
|   |-IfStmt 0x242d94cfe68 <line:672:5, line:673:16>
|   | |-BinaryOperator 0x242d94cfe10 <line:672:9, col:66> 'int' '&&'
|   | | |-BinaryOperator 0x242d94cfd38 <col:9, col:42> 'int' '=='
|   | | | |-ImplicitCastExpr 0x242d94cfd20 <col:9> 'const unsigned char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x242d94cfc80 <col:9> 'const unsigned char *' lvalue Var 0x242d94d38e0 'wildcard_end' 'const unsigned char *'
|   | | | `-BinaryOperator 0x242d94cfd00 <col:25, col:42> 'const unsigned char *' '+'
|   | | |   |-ImplicitCastExpr 0x242d94cfce8 <col:25> 'const unsigned char *' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x242d94cfca0 <col:25> 'const unsigned char *' lvalue Var 0x242d94d3848 'wildcard_start' 'const unsigned char *'
|   | | |   `-IntegerLiteral 0x242d94cfcc0 <col:42> 'int' 1
|   | | `-BinaryOperator 0x242d94cfdf0 <col:47, col:66> 'int' '=='
|   | |   |-ImplicitCastExpr 0x242d94cfdd8 <col:47, col:48> 'int' <IntegralCast>
|   | |   | `-ImplicitCastExpr 0x242d94cfdc0 <col:47, col:48> 'unsigned char' <LValueToRValue>
|   | |   |   `-UnaryOperator 0x242d94cfd90 <col:47, col:48> 'const unsigned char' lvalue prefix '*' cannot overflow
|   | |   |     `-ImplicitCastExpr 0x242d94cfd78 <col:48> 'const unsigned char *' <LValueToRValue>
|   | |   |       `-DeclRefExpr 0x242d94cfd58 <col:48> 'const unsigned char *' lvalue Var 0x242d94d3848 'wildcard_start' 'const unsigned char *'
|   | |   `-CharacterLiteral 0x242d94cfda8 <col:66> 'int' 42
|   | `-ReturnStmt 0x242d94cfe58 <line:673:9, col:16>
|   |   `-IntegerLiteral 0x242d94cfe30 <col:16> 'int' 1
|   |-ForStmt 0x242d94d07f0 <line:679:5, line:684:20>
|   | |-BinaryOperator 0x242d94cfef0 <line:679:10, col:14> 'const unsigned char *' '='
|   | | |-DeclRefExpr 0x242d94cfe80 <col:10> 'const unsigned char *' lvalue Var 0x242d94d3978 'p' 'const unsigned char *'
|   | | `-ImplicitCastExpr 0x242d94cfed8 <col:14> 'const unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x242d94cfeb8 <col:14> 'const unsigned char *' lvalue Var 0x242d94d3848 'wildcard_start' 'const unsigned char *'
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x242d94cff80 <col:30, col:35> 'int' '!='
|   | | |-ImplicitCastExpr 0x242d94cff50 <col:30> 'const unsigned char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x242d94cff10 <col:30> 'const unsigned char *' lvalue Var 0x242d94d3978 'p' 'const unsigned char *'
|   | | `-ImplicitCastExpr 0x242d94cff68 <col:35> 'const unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x242d94cff30 <col:35> 'const unsigned char *' lvalue Var 0x242d94d38e0 'wildcard_end' 'const unsigned char *'
|   | |-UnaryOperator 0x242d94cffc0 <col:49, col:51> 'const unsigned char *' prefix '++'
|   | | `-DeclRefExpr 0x242d94cffa0 <col:51> 'const unsigned char *' lvalue Var 0x242d94d3978 'p' 'const unsigned char *'
|   | `-IfStmt 0x242d94d07d8 <line:680:9, line:684:20>
|   |   |-UnaryOperator 0x242d94d0788 <line:680:13, line:683:54> 'int' prefix '!' cannot overflow
|   |   | `-ParenExpr 0x242d94d0768 <line:680:14, line:683:54> 'int'
|   |   |   `-BinaryOperator 0x242d94d0748 <line:680:15, line:683:53> 'int' '||'
|   |   |     |-BinaryOperator 0x242d94d05f8 <line:680:15, line:683:21> 'int' '||'
|   |   |     | |-BinaryOperator 0x242d94d0520 <line:680:15, line:682:38> 'int' '||'
|   |   |     | | |-BinaryOperator 0x242d94d0350 <line:680:15, line:681:38> 'int' '||'
|   |   |     | | | |-ParenExpr 0x242d94d0168 <line:680:15, col:38> 'int'
|   |   |     | | | | `-BinaryOperator 0x242d94d0148 <col:16, col:35> 'int' '&&'
|   |   |     | | | |   |-BinaryOperator 0x242d94d0070 <col:16, col:24> 'int' '<='
|   |   |     | | | |   | |-CharacterLiteral 0x242d94cffd8 <col:16> 'int' 48
|   |   |     | | | |   | `-ImplicitCastExpr 0x242d94d0058 <col:23, col:24> 'int' <IntegralCast>
|   |   |     | | | |   |   `-ImplicitCastExpr 0x242d94d0040 <col:23, col:24> 'unsigned char' <LValueToRValue>
|   |   |     | | | |   |     `-UnaryOperator 0x242d94d0028 <col:23, col:24> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   |     | | | |   |       `-ImplicitCastExpr 0x242d94d0010 <col:24> 'const unsigned char *' <LValueToRValue>
|   |   |     | | | |   |         `-DeclRefExpr 0x242d94cfff0 <col:24> 'const unsigned char *' lvalue Var 0x242d94d3978 'p' 'const unsigned char *'
|   |   |     | | | |   `-BinaryOperator 0x242d94d0128 <col:29, col:35> 'int' '<='
|   |   |     | | | |     |-ImplicitCastExpr 0x242d94d0110 <col:29, col:30> 'int' <IntegralCast>
|   |   |     | | | |     | `-ImplicitCastExpr 0x242d94d00f8 <col:29, col:30> 'unsigned char' <LValueToRValue>
|   |   |     | | | |     |   `-UnaryOperator 0x242d94d00c8 <col:29, col:30> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   |     | | | |     |     `-ImplicitCastExpr 0x242d94d00b0 <col:30> 'const unsigned char *' <LValueToRValue>
|   |   |     | | | |     |       `-DeclRefExpr 0x242d94d0090 <col:30> 'const unsigned char *' lvalue Var 0x242d94d3978 'p' 'const unsigned char *'
|   |   |     | | | |     `-CharacterLiteral 0x242d94d00e0 <col:35> 'int' 57
|   |   |     | | | `-ParenExpr 0x242d94d0318 <line:681:15, col:38> 'int'
|   |   |     | | |   `-BinaryOperator 0x242d94d02f8 <col:16, col:35> 'int' '&&'
|   |   |     | | |     |-BinaryOperator 0x242d94d0220 <col:16, col:24> 'int' '<='
|   |   |     | | |     | |-CharacterLiteral 0x242d94d0188 <col:16> 'int' 65
|   |   |     | | |     | `-ImplicitCastExpr 0x242d94d0208 <col:23, col:24> 'int' <IntegralCast>
|   |   |     | | |     |   `-ImplicitCastExpr 0x242d94d01f0 <col:23, col:24> 'unsigned char' <LValueToRValue>
|   |   |     | | |     |     `-UnaryOperator 0x242d94d01d8 <col:23, col:24> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   |     | | |     |       `-ImplicitCastExpr 0x242d94d01c0 <col:24> 'const unsigned char *' <LValueToRValue>
|   |   |     | | |     |         `-DeclRefExpr 0x242d94d01a0 <col:24> 'const unsigned char *' lvalue Var 0x242d94d3978 'p' 'const unsigned char *'
|   |   |     | | |     `-BinaryOperator 0x242d94d02d8 <col:29, col:35> 'int' '<='
|   |   |     | | |       |-ImplicitCastExpr 0x242d94d02c0 <col:29, col:30> 'int' <IntegralCast>
|   |   |     | | |       | `-ImplicitCastExpr 0x242d94d02a8 <col:29, col:30> 'unsigned char' <LValueToRValue>
|   |   |     | | |       |   `-UnaryOperator 0x242d94d0278 <col:29, col:30> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   |     | | |       |     `-ImplicitCastExpr 0x242d94d0260 <col:30> 'const unsigned char *' <LValueToRValue>
|   |   |     | | |       |       `-DeclRefExpr 0x242d94d0240 <col:30> 'const unsigned char *' lvalue Var 0x242d94d3978 'p' 'const unsigned char *'
|   |   |     | | |       `-CharacterLiteral 0x242d94d0290 <col:35> 'int' 90
|   |   |     | | `-ParenExpr 0x242d94d0500 <line:682:15, col:38> 'int'
|   |   |     | |   `-BinaryOperator 0x242d94d04e0 <col:16, col:35> 'int' '&&'
|   |   |     | |     |-BinaryOperator 0x242d94d0408 <col:16, col:24> 'int' '<='
|   |   |     | |     | |-CharacterLiteral 0x242d94d0370 <col:16> 'int' 97
|   |   |     | |     | `-ImplicitCastExpr 0x242d94d03f0 <col:23, col:24> 'int' <IntegralCast>
|   |   |     | |     |   `-ImplicitCastExpr 0x242d94d03d8 <col:23, col:24> 'unsigned char' <LValueToRValue>
|   |   |     | |     |     `-UnaryOperator 0x242d94d03c0 <col:23, col:24> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   |     | |     |       `-ImplicitCastExpr 0x242d94d03a8 <col:24> 'const unsigned char *' <LValueToRValue>
|   |   |     | |     |         `-DeclRefExpr 0x242d94d0388 <col:24> 'const unsigned char *' lvalue Var 0x242d94d3978 'p' 'const unsigned char *'
|   |   |     | |     `-BinaryOperator 0x242d94d04c0 <col:29, col:35> 'int' '<='
|   |   |     | |       |-ImplicitCastExpr 0x242d94d04a8 <col:29, col:30> 'int' <IntegralCast>
|   |   |     | |       | `-ImplicitCastExpr 0x242d94d0490 <col:29, col:30> 'unsigned char' <LValueToRValue>
|   |   |     | |       |   `-UnaryOperator 0x242d94d0460 <col:29, col:30> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   |     | |       |     `-ImplicitCastExpr 0x242d94d0448 <col:30> 'const unsigned char *' <LValueToRValue>
|   |   |     | |       |       `-DeclRefExpr 0x242d94d0428 <col:30> 'const unsigned char *' lvalue Var 0x242d94d3978 'p' 'const unsigned char *'
|   |   |     | |       `-CharacterLiteral 0x242d94d0478 <col:35> 'int' 122
|   |   |     | `-BinaryOperator 0x242d94d05d8 <line:683:15, col:21> 'int' '=='
|   |   |     |   |-ImplicitCastExpr 0x242d94d05c0 <col:15, col:16> 'int' <IntegralCast>
|   |   |     |   | `-ImplicitCastExpr 0x242d94d05a8 <col:15, col:16> 'unsigned char' <LValueToRValue>
|   |   |     |   |   `-UnaryOperator 0x242d94d0578 <col:15, col:16> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   |     |   |     `-ImplicitCastExpr 0x242d94d0560 <col:16> 'const unsigned char *' <LValueToRValue>
|   |   |     |   |       `-DeclRefExpr 0x242d94d0540 <col:16> 'const unsigned char *' lvalue Var 0x242d94d3978 'p' 'const unsigned char *'
|   |   |     |   `-CharacterLiteral 0x242d94d0590 <col:21> 'int' 45
|   |   |     `-ParenExpr 0x242d94d0728 <col:28, col:53> 'int'
|   |   |       `-BinaryOperator 0x242d94d0708 <col:29, col:50> 'int' '&&'
|   |   |         |-ImplicitCastExpr 0x242d94d06f0 <col:29> 'int' <LValueToRValue>
|   |   |         | `-DeclRefExpr 0x242d94d0618 <col:29> 'int' lvalue Var 0x242d94d3a10 'allow_multi' 'int'
|   |   |         `-BinaryOperator 0x242d94d06d0 <col:44, col:50> 'int' '=='
|   |   |           |-ImplicitCastExpr 0x242d94d06b8 <col:44, col:45> 'int' <IntegralCast>
|   |   |           | `-ImplicitCastExpr 0x242d94d06a0 <col:44, col:45> 'unsigned char' <LValueToRValue>
|   |   |           |   `-UnaryOperator 0x242d94d0670 <col:44, col:45> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   |           |     `-ImplicitCastExpr 0x242d94d0658 <col:45> 'const unsigned char *' <LValueToRValue>
|   |   |           |       `-DeclRefExpr 0x242d94d0638 <col:45> 'const unsigned char *' lvalue Var 0x242d94d3978 'p' 'const unsigned char *'
|   |   |           `-CharacterLiteral 0x242d94d0688 <col:50> 'int' 46
|   |   `-ReturnStmt 0x242d94d07c8 <line:684:13, col:20>
|   |     `-IntegerLiteral 0x242d94d07a0 <col:20> 'int' 0
|   `-ReturnStmt 0x242d94d0850 <line:685:5, col:12>
|     `-IntegerLiteral 0x242d94d0828 <col:12> 'int' 1
|-FunctionDecl 0x242d94cf7f0 <line:669:29> col:29 implicit used strncasecmp 'int (const char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x242d94cf890 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x242d94cf8f8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x242d94cf960 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x242d94d0b70 <line:693:1, line:752:1> line:693:29 used valid_star 'const unsigned char *(const unsigned char *, size_t, unsigned int)' static
| |-ParmVarDecl 0x242d94d0900 <col:40, col:61> col:61 used p 'const unsigned char *'
| |-ParmVarDecl 0x242d94d0978 <col:64, col:71> col:71 used len 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d94d09f8 <line:694:40, col:53> col:53 used flags 'unsigned int'
| `-CompoundStmt 0x242d94dae10 <line:695:1, line:752:1>
|   |-DeclStmt 0x242d94d0d00 <line:696:5, col:34>
|   | `-VarDecl 0x242d94d0c58 <col:5, col:33> col:26 used star 'const unsigned char *' cinit
|   |   `-ImplicitCastExpr 0x242d94d0ce8 <col:33> 'const unsigned char *' <NullToPointer>
|   |     `-IntegerLiteral 0x242d94d0cc0 <col:33> 'int' 0
|   |-DeclStmt 0x242d94d0d90 <line:697:5, col:13>
|   | `-VarDecl 0x242d94d0d28 <col:5, col:12> col:12 used i 'size_t':'unsigned long long'
|   |-DeclStmt 0x242d94d0eb8 <line:698:5, col:28>
|   | `-VarDecl 0x242d94d0dc0 <col:5, line:688:32> line:698:9 used state 'int' cinit
|   |   `-ParenExpr 0x242d94d0e98 <line:688:25, col:32> 'int'
|   |     `-BinaryOperator 0x242d94d0e78 <col:26, col:31> 'int' '<<'
|   |       |-IntegerLiteral 0x242d94d0e28 <col:26> 'int' 1
|   |       `-IntegerLiteral 0x242d94d0e50 <col:31> 'int' 0
|   |-DeclStmt 0x242d94d0f78 <line:699:5, col:17>
|   | `-VarDecl 0x242d94d0ee8 <col:5, col:16> col:9 used dots 'int' cinit
|   |   `-IntegerLiteral 0x242d94d0f50 <col:16> 'int' 0
|   |-ForStmt 0x242d94daa08 <line:700:5, line:743:5>
|   | |-BinaryOperator 0x242d94d1008 <line:700:10, col:14> 'size_t':'unsigned long long' '='
|   | | |-DeclRefExpr 0x242d94d0f90 <col:10> 'size_t':'unsigned long long' lvalue Var 0x242d94d0d28 'i' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x242d94d0ff0 <col:14> 'size_t':'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x242d94d0fc8 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x242d94d1098 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x242d94d1068 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x242d94d1028 <col:17> 'size_t':'unsigned long long' lvalue Var 0x242d94d0d28 'i' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x242d94d1080 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x242d94d1048 <col:21> 'size_t':'unsigned long long' lvalue ParmVar 0x242d94d0978 'len' 'size_t':'unsigned long long'
|   | |-UnaryOperator 0x242d94d10d8 <col:26, col:28> 'size_t':'unsigned long long' prefix '++'
|   | | `-DeclRefExpr 0x242d94d10b8 <col:28> 'size_t':'unsigned long long' lvalue Var 0x242d94d0d28 'i' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x242d94da9f0 <col:31, line:743:5>
|   |   `-IfStmt 0x242d94da9c8 <line:705:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> has_else
|   |     |-BinaryOperator 0x242d94d11c8 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:705:13, col:21> 'int' '=='
|   |     | |-ImplicitCastExpr 0x242d94d11b0 <col:13, col:16> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x242d94d1198 <col:13, col:16> 'unsigned char' <LValueToRValue>
|   |     | |   `-ArraySubscriptExpr 0x242d94d1160 <col:13, col:16> 'const unsigned char' lvalue
|   |     | |     |-ImplicitCastExpr 0x242d94d1130 <col:13> 'const unsigned char *' <LValueToRValue>
|   |     | |     | `-DeclRefExpr 0x242d94d10f0 <col:13> 'const unsigned char *' lvalue ParmVar 0x242d94d0900 'p' 'const unsigned char *'
|   |     | |     `-ImplicitCastExpr 0x242d94d1148 <col:15> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | |       `-DeclRefExpr 0x242d94d1110 <col:15> 'size_t':'unsigned long long' lvalue Var 0x242d94d0d28 'i' 'size_t':'unsigned long long'
|   |     | `-CharacterLiteral 0x242d94d1180 <col:21> 'int' 42
|   |     |-CompoundStmt 0x242d94dc0a8 <col:26, line:724:9>
|   |     | |-DeclStmt 0x242d94db440 <line:706:13, col:48>
|   |     | | `-VarDecl 0x242d94d1200 <col:13, col:47> col:17 used atstart 'int' cinit
|   |     | |   `-ParenExpr 0x242d94db420 <col:27, col:47> 'int'
|   |     | |     `-BinaryOperator 0x242d94db400 <col:28, line:688:32> 'int' '&'
|   |     | |       |-ImplicitCastExpr 0x242d94d1330 <line:706:28> 'int' <LValueToRValue>
|   |     | |       | `-DeclRefExpr 0x242d94d1268 <col:28> 'int' lvalue Var 0x242d94d0dc0 'state' 'int'
|   |     | |       `-ParenExpr 0x242d94d1310 <line:688:25, col:32> 'int'
|   |     | |         `-BinaryOperator 0x242d94d12f0 <col:26, col:31> 'int' '<<'
|   |     | |           |-IntegerLiteral 0x242d94d12a0 <col:26> 'int' 1
|   |     | |           `-IntegerLiteral 0x242d94d12c8 <col:31> 'int' 0
|   |     | |-DeclStmt 0x242d94db760 <line:707:13, col:58>
|   |     | | `-VarDecl 0x242d94db470 <col:13, col:57> col:17 used atend 'int' cinit
|   |     | |   `-ParenExpr 0x242d94db740 <col:25, col:57> 'int'
|   |     | |     `-BinaryOperator 0x242d94db720 <col:26, col:54> 'int' '||'
|   |     | |       |-BinaryOperator 0x242d94db5a8 <col:26, col:37> 'int' '=='
|   |     | |       | |-ImplicitCastExpr 0x242d94db590 <col:26> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | |       | | `-DeclRefExpr 0x242d94db4d8 <col:26> 'size_t':'unsigned long long' lvalue Var 0x242d94d0d28 'i' 'size_t':'unsigned long long'
|   |     | |       | `-BinaryOperator 0x242d94db570 <col:31, col:37> 'unsigned long long' '-'
|   |     | |       |   |-ImplicitCastExpr 0x242d94db540 <col:31> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | |       |   | `-DeclRefExpr 0x242d94db4f8 <col:31> 'size_t':'unsigned long long' lvalue ParmVar 0x242d94d0978 'len' 'size_t':'unsigned long long'
|   |     | |       |   `-ImplicitCastExpr 0x242d94db558 <col:37> 'unsigned long long' <IntegralCast>
|   |     | |       |     `-IntegerLiteral 0x242d94db518 <col:37> 'int' 1
|   |     | |       `-BinaryOperator 0x242d94db700 <col:42, col:54> 'int' '=='
|   |     | |         |-ImplicitCastExpr 0x242d94db6e8 <col:42, col:49> 'int' <IntegralCast>
|   |     | |         | `-ImplicitCastExpr 0x242d94db6d0 <col:42, col:49> 'unsigned char' <LValueToRValue>
|   |     | |         |   `-ArraySubscriptExpr 0x242d94db698 <col:42, col:49> 'const unsigned char' lvalue
|   |     | |         |     |-ImplicitCastExpr 0x242d94db680 <col:42> 'const unsigned char *' <LValueToRValue>
|   |     | |         |     | `-DeclRefExpr 0x242d94db5c8 <col:42> 'const unsigned char *' lvalue ParmVar 0x242d94d0900 'p' 'const unsigned char *'
|   |     | |         |     `-BinaryOperator 0x242d94db660 <col:44, col:48> 'unsigned long long' '+'
|   |     | |         |       |-ImplicitCastExpr 0x242d94db630 <col:44> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | |         |       | `-DeclRefExpr 0x242d94db5e8 <col:44> 'size_t':'unsigned long long' lvalue Var 0x242d94d0d28 'i' 'size_t':'unsigned long long'
|   |     | |         |       `-ImplicitCastExpr 0x242d94db648 <col:48> 'unsigned long long' <IntegralCast>
|   |     | |         |         `-IntegerLiteral 0x242d94db608 <col:48> 'int' 1
|   |     | |         `-CharacterLiteral 0x242d94db6b8 <col:54> 'int' 46
|   |     | |-IfStmt 0x242d94dbb18 <line:713:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |     | | |-BinaryOperator 0x242d94dba48 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:713:17, col:62> 'int' '||'
|   |     | | | |-BinaryOperator 0x242d94db9d8 <col:17, col:57> 'int' '||'
|   |     | | | | |-BinaryOperator 0x242d94db868 <col:17, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   |     | | | | | |-ImplicitCastExpr 0x242d94db838 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:713:17> 'const unsigned char *' <LValueToRValue>
|   |     | | | | | | `-DeclRefExpr 0x242d94db778 <col:17> 'const unsigned char *' lvalue Var 0x242d94d0c58 'star' 'const unsigned char *'
|   |     | | | | | `-ImplicitCastExpr 0x242d94db850 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const unsigned char *' <BitCast>
|   |     | | | | |   `-ParenExpr 0x242d94db818 <col:17, col:27> 'void *'
|   |     | | | | |     `-CStyleCastExpr 0x242d94db7f0 <col:18, col:26> 'void *' <NullToPointer>
|   |     | | | | |       `-IntegerLiteral 0x242d94db7b0 <col:26> 'int' 0
|   |     | | | | `-BinaryOperator 0x242d94db9b8 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:713:33, col:57> 'int' '!='
|   |     | | | |   |-ParenExpr 0x242d94db970 <col:33, col:52> 'int'
|   |     | | | |   | `-BinaryOperator 0x242d94db950 <col:34, line:691:32> 'int' '&'
|   |     | | | |   |   |-ImplicitCastExpr 0x242d94db938 <line:713:34> 'int' <LValueToRValue>
|   |     | | | |   |   | `-DeclRefExpr 0x242d94db888 <col:34> 'int' lvalue Var 0x242d94d0dc0 'state' 'int'
|   |     | | | |   |   `-ParenExpr 0x242d94db918 <line:691:25, col:32> 'int'
|   |     | | | |   |     `-BinaryOperator 0x242d94db8f8 <col:26, col:31> 'int' '<<'
|   |     | | | |   |       |-IntegerLiteral 0x242d94db8a8 <col:26> 'int' 1
|   |     | | | |   |       `-IntegerLiteral 0x242d94db8d0 <col:31> 'int' 3
|   |     | | | |   `-IntegerLiteral 0x242d94db990 <line:713:57> 'int' 0
|   |     | | | `-ImplicitCastExpr 0x242d94dba30 <col:62> 'int' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x242d94db9f8 <col:62> 'int' lvalue Var 0x242d94d0ee8 'dots' 'int'
|   |     | | `-ReturnStmt 0x242d94dbb08 <line:714:17, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |     | |   `-ImplicitCastExpr 0x242d94dbaf0 <col:17, col:27> 'const unsigned char *' <NullToPointer>
|   |     | |     `-ParenExpr 0x242d94dbad0 <col:17, col:27> 'void *'
|   |     | |       `-CStyleCastExpr 0x242d94dbaa8 <col:18, col:26> 'void *' <NullToPointer>
|   |     | |         `-IntegerLiteral 0x242d94dba68 <col:26> 'int' 0
|   |     | |-IfStmt 0x242d94dbd28 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:716:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |     | | |-OpaqueValueExpr 0x242d94dbd10 <<invalid sloc>> '_Bool'
|   |     | | `-ReturnStmt 0x242d94dbd00 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:718:17, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |     | |   `-ImplicitCastExpr 0x242d94dbce8 <col:17, col:27> 'const unsigned char *' <NullToPointer>
|   |     | |     `-ParenExpr 0x242d94dbcc8 <col:17, col:27> 'void *'
|   |     | |       `-CStyleCastExpr 0x242d94dbca0 <col:18, col:26> 'void *' <NullToPointer>
|   |     | |         `-IntegerLiteral 0x242d94dbc60 <col:26> 'int' 0
|   |     | |-IfStmt 0x242d94dbeb0 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:720:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |     | | |-BinaryOperator 0x242d94dbde0 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:720:17, col:30> 'int' '&&'
|   |     | | | |-UnaryOperator 0x242d94dbd78 <col:17, col:18> 'int' prefix '!' cannot overflow
|   |     | | | | `-ImplicitCastExpr 0x242d94dbd60 <col:18> 'int' <LValueToRValue>
|   |     | | | |   `-DeclRefExpr 0x242d94dbd40 <col:18> 'int' lvalue Var 0x242d94d1200 'atstart' 'int'
|   |     | | | `-UnaryOperator 0x242d94dbdc8 <col:29, col:30> 'int' prefix '!' cannot overflow
|   |     | | |   `-ImplicitCastExpr 0x242d94dbdb0 <col:30> 'int' <LValueToRValue>
|   |     | | |     `-DeclRefExpr 0x242d94dbd90 <col:30> 'int' lvalue Var 0x242d94db470 'atend' 'int'
|   |     | | `-ReturnStmt 0x242d94dbea0 <line:721:17, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |     | |   `-ImplicitCastExpr 0x242d94dbe88 <col:17, col:27> 'const unsigned char *' <NullToPointer>
|   |     | |     `-ParenExpr 0x242d94dbe68 <col:17, col:27> 'void *'
|   |     | |       `-CStyleCastExpr 0x242d94dbe40 <col:18, col:26> 'void *' <NullToPointer>
|   |     | |         `-IntegerLiteral 0x242d94dbe00 <col:26> 'int' 0
|   |     | |-BinaryOperator 0x242d94dbf90 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:722:13, col:24> 'const unsigned char *' '='
|   |     | | |-DeclRefExpr 0x242d94dbec8 <col:13> 'const unsigned char *' lvalue Var 0x242d94d0c58 'star' 'const unsigned char *'
|   |     | | `-UnaryOperator 0x242d94dbf78 <col:20, col:24> 'const unsigned char *' prefix '&' cannot overflow
|   |     | |   `-ArraySubscriptExpr 0x242d94dbf58 <col:21, col:24> 'const unsigned char' lvalue
|   |     | |     |-ImplicitCastExpr 0x242d94dbf28 <col:21> 'const unsigned char *' <LValueToRValue>
|   |     | |     | `-DeclRefExpr 0x242d94dbee8 <col:21> 'const unsigned char *' lvalue ParmVar 0x242d94d0900 'p' 'const unsigned char *'
|   |     | |     `-ImplicitCastExpr 0x242d94dbf40 <col:23> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | |       `-DeclRefExpr 0x242d94dbf08 <col:23> 'size_t':'unsigned long long' lvalue Var 0x242d94d0d28 'i' 'size_t':'unsigned long long'
|   |     | `-CompoundAssignOperator 0x242d94dc078 <line:723:13, line:688:32> 'int' '&=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     |   |-DeclRefExpr 0x242d94dbfb0 <line:723:13> 'int' lvalue Var 0x242d94d0dc0 'state' 'int'
|   |     |   `-UnaryOperator 0x242d94dc060 <col:22, line:688:32> 'int' prefix '~' cannot overflow
|   |     |     `-ParenExpr 0x242d94dc040 <col:25, col:32> 'int'
|   |     |       `-BinaryOperator 0x242d94dc020 <col:26, col:31> 'int' '<<'
|   |     |         |-IntegerLiteral 0x242d94dbfd0 <col:26> 'int' 1
|   |     |         `-IntegerLiteral 0x242d94dbff8 <col:31> 'int' 0
|   |     `-IfStmt 0x242d94da9a0 <line:724:16, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> has_else
|   |       |-BinaryOperator 0x242d94d9788 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:724:20, line:726:50> 'int' '||'
|   |       | |-BinaryOperator 0x242d94d9538 <line:724:20, line:725:50> 'int' '||'
|   |       | | |-ParenExpr 0x242d94dc300 <line:724:20, col:47> 'int'
|   |       | | | `-BinaryOperator 0x242d94dc2e0 <col:21, col:44> 'int' '&&'
|   |       | | |   |-BinaryOperator 0x242d94dc1c8 <col:21, col:31> 'int' '<='
|   |       | | |   | |-CharacterLiteral 0x242d94dc0f0 <col:21> 'int' 97
|   |       | | |   | `-ImplicitCastExpr 0x242d94dc1b0 <col:28, col:31> 'int' <IntegralCast>
|   |       | | |   |   `-ImplicitCastExpr 0x242d94dc198 <col:28, col:31> 'unsigned char' <LValueToRValue>
|   |       | | |   |     `-ArraySubscriptExpr 0x242d94dc178 <col:28, col:31> 'const unsigned char' lvalue
|   |       | | |   |       |-ImplicitCastExpr 0x242d94dc148 <col:28> 'const unsigned char *' <LValueToRValue>
|   |       | | |   |       | `-DeclRefExpr 0x242d94dc108 <col:28> 'const unsigned char *' lvalue ParmVar 0x242d94d0900 'p' 'const unsigned char *'
|   |       | | |   |       `-ImplicitCastExpr 0x242d94dc160 <col:30> 'size_t':'unsigned long long' <LValueToRValue>
|   |       | | |   |         `-DeclRefExpr 0x242d94dc128 <col:30> 'size_t':'unsigned long long' lvalue Var 0x242d94d0d28 'i' 'size_t':'unsigned long long'
|   |       | | |   `-BinaryOperator 0x242d94dc2c0 <col:36, col:44> 'int' '<='
|   |       | | |     |-ImplicitCastExpr 0x242d94dc2a8 <col:36, col:39> 'int' <IntegralCast>
|   |       | | |     | `-ImplicitCastExpr 0x242d94dc290 <col:36, col:39> 'unsigned char' <LValueToRValue>
|   |       | | |     |   `-ArraySubscriptExpr 0x242d94dc258 <col:36, col:39> 'const unsigned char' lvalue
|   |       | | |     |     |-ImplicitCastExpr 0x242d94dc228 <col:36> 'const unsigned char *' <LValueToRValue>
|   |       | | |     |     | `-DeclRefExpr 0x242d94dc1e8 <col:36> 'const unsigned char *' lvalue ParmVar 0x242d94d0900 'p' 'const unsigned char *'
|   |       | | |     |     `-ImplicitCastExpr 0x242d94dc240 <col:38> 'size_t':'unsigned long long' <LValueToRValue>
|   |       | | |     |       `-DeclRefExpr 0x242d94dc208 <col:38> 'size_t':'unsigned long long' lvalue Var 0x242d94d0d28 'i' 'size_t':'unsigned long long'
|   |       | | |     `-CharacterLiteral 0x242d94dc278 <col:44> 'int' 122
|   |       | | `-ParenExpr 0x242d94d9518 <line:725:23, col:50> 'int'
|   |       | |   `-BinaryOperator 0x242d94d94f8 <col:24, col:47> 'int' '&&'
|   |       | |     |-BinaryOperator 0x242d94d93e0 <col:24, col:34> 'int' '<='
|   |       | |     | |-CharacterLiteral 0x242d94dc320 <col:24> 'int' 65
|   |       | |     | `-ImplicitCastExpr 0x242d94dc3e0 <col:31, col:34> 'int' <IntegralCast>
|   |       | |     |   `-ImplicitCastExpr 0x242d94dc3c8 <col:31, col:34> 'unsigned char' <LValueToRValue>
|   |       | |     |     `-ArraySubscriptExpr 0x242d94dc3a8 <col:31, col:34> 'const unsigned char' lvalue
|   |       | |     |       |-ImplicitCastExpr 0x242d94dc378 <col:31> 'const unsigned char *' <LValueToRValue>
|   |       | |     |       | `-DeclRefExpr 0x242d94dc338 <col:31> 'const unsigned char *' lvalue ParmVar 0x242d94d0900 'p' 'const unsigned char *'
|   |       | |     |       `-ImplicitCastExpr 0x242d94dc390 <col:33> 'size_t':'unsigned long long' <LValueToRValue>
|   |       | |     |         `-DeclRefExpr 0x242d94dc358 <col:33> 'size_t':'unsigned long long' lvalue Var 0x242d94d0d28 'i' 'size_t':'unsigned long long'
|   |       | |     `-BinaryOperator 0x242d94d94d8 <col:39, col:47> 'int' '<='
|   |       | |       |-ImplicitCastExpr 0x242d94d94c0 <col:39, col:42> 'int' <IntegralCast>
|   |       | |       | `-ImplicitCastExpr 0x242d94d94a8 <col:39, col:42> 'unsigned char' <LValueToRValue>
|   |       | |       |   `-ArraySubscriptExpr 0x242d94d9470 <col:39, col:42> 'const unsigned char' lvalue
|   |       | |       |     |-ImplicitCastExpr 0x242d94d9440 <col:39> 'const unsigned char *' <LValueToRValue>
|   |       | |       |     | `-DeclRefExpr 0x242d94d9400 <col:39> 'const unsigned char *' lvalue ParmVar 0x242d94d0900 'p' 'const unsigned char *'
|   |       | |       |     `-ImplicitCastExpr 0x242d94d9458 <col:41> 'size_t':'unsigned long long' <LValueToRValue>
|   |       | |       |       `-DeclRefExpr 0x242d94d9420 <col:41> 'size_t':'unsigned long long' lvalue Var 0x242d94d0d28 'i' 'size_t':'unsigned long long'
|   |       | |       `-CharacterLiteral 0x242d94d9490 <col:47> 'int' 90
|   |       | `-ParenExpr 0x242d94d9768 <line:726:23, col:50> 'int'
|   |       |   `-BinaryOperator 0x242d94d9748 <col:24, col:47> 'int' '&&'
|   |       |     |-BinaryOperator 0x242d94d9630 <col:24, col:34> 'int' '<='
|   |       |     | |-CharacterLiteral 0x242d94d9558 <col:24> 'int' 48
|   |       |     | `-ImplicitCastExpr 0x242d94d9618 <col:31, col:34> 'int' <IntegralCast>
|   |       |     |   `-ImplicitCastExpr 0x242d94d9600 <col:31, col:34> 'unsigned char' <LValueToRValue>
|   |       |     |     `-ArraySubscriptExpr 0x242d94d95e0 <col:31, col:34> 'const unsigned char' lvalue
|   |       |     |       |-ImplicitCastExpr 0x242d94d95b0 <col:31> 'const unsigned char *' <LValueToRValue>
|   |       |     |       | `-DeclRefExpr 0x242d94d9570 <col:31> 'const unsigned char *' lvalue ParmVar 0x242d94d0900 'p' 'const unsigned char *'
|   |       |     |       `-ImplicitCastExpr 0x242d94d95c8 <col:33> 'size_t':'unsigned long long' <LValueToRValue>
|   |       |     |         `-DeclRefExpr 0x242d94d9590 <col:33> 'size_t':'unsigned long long' lvalue Var 0x242d94d0d28 'i' 'size_t':'unsigned long long'
|   |       |     `-BinaryOperator 0x242d94d9728 <col:39, col:47> 'int' '<='
|   |       |       |-ImplicitCastExpr 0x242d94d9710 <col:39, col:42> 'int' <IntegralCast>
|   |       |       | `-ImplicitCastExpr 0x242d94d96f8 <col:39, col:42> 'unsigned char' <LValueToRValue>
|   |       |       |   `-ArraySubscriptExpr 0x242d94d96c0 <col:39, col:42> 'const unsigned char' lvalue
|   |       |       |     |-ImplicitCastExpr 0x242d94d9690 <col:39> 'const unsigned char *' <LValueToRValue>
|   |       |       |     | `-DeclRefExpr 0x242d94d9650 <col:39> 'const unsigned char *' lvalue ParmVar 0x242d94d0900 'p' 'const unsigned char *'
|   |       |       |     `-ImplicitCastExpr 0x242d94d96a8 <col:41> 'size_t':'unsigned long long' <LValueToRValue>
|   |       |       |       `-DeclRefExpr 0x242d94d9670 <col:41> 'size_t':'unsigned long long' lvalue Var 0x242d94d0d28 'i' 'size_t':'unsigned long long'
|   |       |       `-CharacterLiteral 0x242d94d96e0 <col:47> 'int' 57
|   |       |-CompoundStmt 0x242d94d9f48 <col:53, line:731:9>
|   |       | |-IfStmt 0x242d94d9d68 <line:727:13, line:691:32>
|   |       | | |-BinaryOperator 0x242d94d9c68 <line:727:17, line:728:77> 'int' '&&'
|   |       | | | |-BinaryOperator 0x242d94d99e8 <line:727:17, line:728:31> 'int' '&&'
|   |       | | | | |-BinaryOperator 0x242d94d98d8 <line:727:17, col:42> 'int' '!='
|   |       | | | | | |-ParenExpr 0x242d94d9890 <col:17, col:37> 'int'
|   |       | | | | | | `-BinaryOperator 0x242d94d9870 <col:18, line:688:32> 'int' '&'
|   |       | | | | | |   |-ImplicitCastExpr 0x242d94d9858 <line:727:18> 'int' <LValueToRValue>
|   |       | | | | | |   | `-DeclRefExpr 0x242d94d97a8 <col:18> 'int' lvalue Var 0x242d94d0dc0 'state' 'int'
|   |       | | | | | |   `-ParenExpr 0x242d94d9838 <line:688:25, col:32> 'int'
|   |       | | | | | |     `-BinaryOperator 0x242d94d9818 <col:26, col:31> 'int' '<<'
|   |       | | | | | |       |-IntegerLiteral 0x242d94d97c8 <col:26> 'int' 1
|   |       | | | | | |       `-IntegerLiteral 0x242d94d97f0 <col:31> 'int' 0
|   |       | | | | | `-IntegerLiteral 0x242d94d98b0 <line:727:42> 'int' 0
|   |       | | | | `-BinaryOperator 0x242d94d99c8 <line:728:20, col:31> 'int' '>='
|   |       | | | |   |-BinaryOperator 0x242d94d9968 <col:20, col:26> 'unsigned long long' '-'
|   |       | | | |   | |-ImplicitCastExpr 0x242d94d9938 <col:20> 'size_t':'unsigned long long' <LValueToRValue>
|   |       | | | |   | | `-DeclRefExpr 0x242d94d98f8 <col:20> 'size_t':'unsigned long long' lvalue ParmVar 0x242d94d0978 'len' 'size_t':'unsigned long long'
|   |       | | | |   | `-ImplicitCastExpr 0x242d94d9950 <col:26> 'size_t':'unsigned long long' <LValueToRValue>
|   |       | | | |   |   `-DeclRefExpr 0x242d94d9918 <col:26> 'size_t':'unsigned long long' lvalue Var 0x242d94d0d28 'i' 'size_t':'unsigned long long'
|   |       | | | |   `-ImplicitCastExpr 0x242d94d99b0 <col:31> 'unsigned long long' <IntegralCast>
|   |       | | | |     `-IntegerLiteral 0x242d94d9988 <col:31> 'int' 4
|   |       | | | `-BinaryOperator 0x242d94d9c48 <col:36, col:77> 'int' '=='
|   |       | | |   |-CallExpr 0x242d94d9b88 <col:36, col:72> 'int'
|   |       | | |   | |-ImplicitCastExpr 0x242d94d9b70 <col:36> 'int (*)(const char *, const char *, unsigned long long)' <FunctionToPointerDecay>
|   |       | | |   | | `-DeclRefExpr 0x242d94d9a08 <col:36> 'int (const char *, const char *, unsigned long long)' Function 0x242d94cf7f0 'strncasecmp' 'int (const char *, const char *, unsigned long long)'
|   |       | | |   | |-ImplicitCastExpr 0x242d94d9bc0 <col:48, col:60> 'const char *' <NoOp>
|   |       | | |   | | `-CStyleCastExpr 0x242d94d9ae8 <col:48, col:60> 'char *' <BitCast>
|   |       | | |   | |   `-UnaryOperator 0x242d94d9ab8 <col:56, col:60> 'const unsigned char *' prefix '&' cannot overflow
|   |       | | |   | |     `-ArraySubscriptExpr 0x242d94d9a98 <col:57, col:60> 'const unsigned char' lvalue
|   |       | | |   | |       |-ImplicitCastExpr 0x242d94d9a68 <col:57> 'const unsigned char *' <LValueToRValue>
|   |       | | |   | |       | `-DeclRefExpr 0x242d94d9a28 <col:57> 'const unsigned char *' lvalue ParmVar 0x242d94d0900 'p' 'const unsigned char *'
|   |       | | |   | |       `-ImplicitCastExpr 0x242d94d9a80 <col:59> 'size_t':'unsigned long long' <LValueToRValue>
|   |       | | |   | |         `-DeclRefExpr 0x242d94d9a48 <col:59> 'size_t':'unsigned long long' lvalue Var 0x242d94d0d28 'i' 'size_t':'unsigned long long'
|   |       | | |   | |-ImplicitCastExpr 0x242d94d9bf0 <col:63> 'const char *' <NoOp>
|   |       | | |   | | `-ImplicitCastExpr 0x242d94d9bd8 <col:63> 'char *' <ArrayToPointerDecay>
|   |       | | |   | |   `-StringLiteral 0x242d94d9b10 <col:63> 'char [5]' lvalue "xn--"
|   |       | | |   | `-ImplicitCastExpr 0x242d94d9c08 <col:71> 'unsigned long long' <IntegralCast>
|   |       | | |   |   `-IntegerLiteral 0x242d94d9b30 <col:71> 'int' 4
|   |       | | |   `-IntegerLiteral 0x242d94d9c20 <col:77> 'int' 0
|   |       | | `-CompoundAssignOperator 0x242d94d9d38 <line:729:17, line:691:32> 'int' '|=' ComputeLHSTy='int' ComputeResultTy='int'
|   |       | |   |-DeclRefExpr 0x242d94d9c88 <line:729:17> 'int' lvalue Var 0x242d94d0dc0 'state' 'int'
|   |       | |   `-ParenExpr 0x242d94d9d18 <line:691:25, col:32> 'int'
|   |       | |     `-BinaryOperator 0x242d94d9cf8 <col:26, col:31> 'int' '<<'
|   |       | |       |-IntegerLiteral 0x242d94d9ca8 <col:26> 'int' 1
|   |       | |       `-IntegerLiteral 0x242d94d9cd0 <col:31> 'int' 3
|   |       | `-CompoundAssignOperator 0x242d94d9f18 <line:730:13, col:50> 'int' '&=' ComputeLHSTy='int' ComputeResultTy='int'
|   |       |   |-DeclRefExpr 0x242d94d9d80 <col:13> 'int' lvalue Var 0x242d94d0dc0 'state' 'int'
|   |       |   `-UnaryOperator 0x242d94d9f00 <col:22, col:50> 'int' prefix '~' cannot overflow
|   |       |     `-ParenExpr 0x242d94d9ee0 <col:23, col:50> 'int'
|   |       |       `-BinaryOperator 0x242d94d9ec0 <line:690:25, line:688:32> 'int' '|'
|   |       |         |-ParenExpr 0x242d94d9e10 <line:690:25, col:32> 'int'
|   |       |         | `-BinaryOperator 0x242d94d9df0 <col:26, col:31> 'int' '<<'
|   |       |         |   |-IntegerLiteral 0x242d94d9da0 <col:26> 'int' 1
|   |       |         |   `-IntegerLiteral 0x242d94d9dc8 <col:31> 'int' 2
|   |       |         `-ParenExpr 0x242d94d9ea0 <line:688:25, col:32> 'int'
|   |       |           `-BinaryOperator 0x242d94d9e80 <col:26, col:31> 'int' '<<'
|   |       |             |-IntegerLiteral 0x242d94d9e30 <col:26> 'int' 1
|   |       |             `-IntegerLiteral 0x242d94d9e58 <col:31> 'int' 0
|   |       `-IfStmt 0x242d94da978 <line:731:16, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> has_else
|   |         |-BinaryOperator 0x242d94da040 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:731:20, col:28> 'int' '=='
|   |         | |-ImplicitCastExpr 0x242d94da028 <col:20, col:23> 'int' <IntegralCast>
|   |         | | `-ImplicitCastExpr 0x242d94da010 <col:20, col:23> 'unsigned char' <LValueToRValue>
|   |         | |   `-ArraySubscriptExpr 0x242d94d9fd8 <col:20, col:23> 'const unsigned char' lvalue
|   |         | |     |-ImplicitCastExpr 0x242d94d9fa8 <col:20> 'const unsigned char *' <LValueToRValue>
|   |         | |     | `-DeclRefExpr 0x242d94d9f68 <col:20> 'const unsigned char *' lvalue ParmVar 0x242d94d0900 'p' 'const unsigned char *'
|   |         | |     `-ImplicitCastExpr 0x242d94d9fc0 <col:22> 'size_t':'unsigned long long' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x242d94d9f88 <col:22> 'size_t':'unsigned long long' lvalue Var 0x242d94d0d28 'i' 'size_t':'unsigned long long'
|   |         | `-CharacterLiteral 0x242d94d9ff8 <col:28> 'int' 46
|   |         |-CompoundStmt 0x242d94da468 <col:33, line:736:9>
|   |         | |-IfStmt 0x242d94da330 <line:732:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |         | | |-BinaryOperator 0x242d94da260 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:732:17, col:59> 'int' '!='
|   |         | | | |-ParenExpr 0x242d94da218 <col:17, col:54> 'int'
|   |         | | | | `-BinaryOperator 0x242d94da1f8 <col:18, col:53> 'int' '&'
|   |         | | | |   |-ImplicitCastExpr 0x242d94da1e0 <col:18> 'int' <LValueToRValue>
|   |         | | | |   | `-DeclRefExpr 0x242d94da060 <col:18> 'int' lvalue Var 0x242d94d0dc0 'state' 'int'
|   |         | | | |   `-ParenExpr 0x242d94da1c0 <col:26, col:53> 'int'
|   |         | | | |     `-BinaryOperator 0x242d94da1a0 <line:690:25, line:688:32> 'int' '|'
|   |         | | | |       |-ParenExpr 0x242d94da0f0 <line:690:25, col:32> 'int'
|   |         | | | |       | `-BinaryOperator 0x242d94da0d0 <col:26, col:31> 'int' '<<'
|   |         | | | |       |   |-IntegerLiteral 0x242d94da080 <col:26> 'int' 1
|   |         | | | |       |   `-IntegerLiteral 0x242d94da0a8 <col:31> 'int' 2
|   |         | | | |       `-ParenExpr 0x242d94da180 <line:688:25, col:32> 'int'
|   |         | | | |         `-BinaryOperator 0x242d94da160 <col:26, col:31> 'int' '<<'
|   |         | | | |           |-IntegerLiteral 0x242d94da110 <col:26> 'int' 1
|   |         | | | |           `-IntegerLiteral 0x242d94da138 <col:31> 'int' 0
|   |         | | | `-IntegerLiteral 0x242d94da238 <line:732:59> 'int' 0
|   |         | | `-ReturnStmt 0x242d94da320 <line:733:17, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |         | |   `-ImplicitCastExpr 0x242d94da308 <col:17, col:27> 'const unsigned char *' <NullToPointer>
|   |         | |     `-ParenExpr 0x242d94da2e8 <col:17, col:27> 'void *'
|   |         | |       `-CStyleCastExpr 0x242d94da2c0 <col:18, col:26> 'void *' <NullToPointer>
|   |         | |         `-IntegerLiteral 0x242d94da280 <col:26> 'int' 0
|   |         | |-BinaryOperator 0x242d94da410 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:734:13, line:688:32> 'int' '='
|   |         | | |-DeclRefExpr 0x242d94da348 <line:734:13> 'int' lvalue Var 0x242d94d0dc0 'state' 'int'
|   |         | | `-ParenExpr 0x242d94da3f0 <line:688:25, col:32> 'int'
|   |         | |   `-BinaryOperator 0x242d94da3b8 <col:26, col:31> 'int' '<<'
|   |         | |     |-IntegerLiteral 0x242d94da368 <col:26> 'int' 1
|   |         | |     `-IntegerLiteral 0x242d94da390 <col:31> 'int' 0
|   |         | `-UnaryOperator 0x242d94da450 <line:735:13, col:15> 'int' prefix '++'
|   |         |   `-DeclRefExpr 0x242d94da430 <col:15> 'int' lvalue Var 0x242d94d0ee8 'dots' 'int'
|   |         `-IfStmt 0x242d94da950 <line:736:16, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> has_else
|   |           |-BinaryOperator 0x242d94da568 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:736:20, col:28> 'int' '=='
|   |           | |-ImplicitCastExpr 0x242d94da550 <col:20, col:23> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x242d94da538 <col:20, col:23> 'unsigned char' <LValueToRValue>
|   |           | |   `-ArraySubscriptExpr 0x242d94da500 <col:20, col:23> 'const unsigned char' lvalue
|   |           | |     |-ImplicitCastExpr 0x242d94da4d0 <col:20> 'const unsigned char *' <LValueToRValue>
|   |           | |     | `-DeclRefExpr 0x242d94da490 <col:20> 'const unsigned char *' lvalue ParmVar 0x242d94d0900 'p' 'const unsigned char *'
|   |           | |     `-ImplicitCastExpr 0x242d94da4e8 <col:22> 'size_t':'unsigned long long' <LValueToRValue>
|   |           | |       `-DeclRefExpr 0x242d94da4b0 <col:22> 'size_t':'unsigned long long' lvalue Var 0x242d94d0d28 'i' 'size_t':'unsigned long long'
|   |           | `-CharacterLiteral 0x242d94da520 <col:28> 'int' 45
|   |           |-CompoundStmt 0x242d94da880 <col:33, line:741:9>
|   |           | |-IfStmt 0x242d94da788 <line:738:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |           | | |-BinaryOperator 0x242d94da6b8 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:738:17, col:42> 'int' '!='
|   |           | | | |-ParenExpr 0x242d94da670 <col:17, col:37> 'int'
|   |           | | | | `-BinaryOperator 0x242d94da650 <col:18, line:688:32> 'int' '&'
|   |           | | | |   |-ImplicitCastExpr 0x242d94da638 <line:738:18> 'int' <LValueToRValue>
|   |           | | | |   | `-DeclRefExpr 0x242d94da588 <col:18> 'int' lvalue Var 0x242d94d0dc0 'state' 'int'
|   |           | | | |   `-ParenExpr 0x242d94da618 <line:688:25, col:32> 'int'
|   |           | | | |     `-BinaryOperator 0x242d94da5f8 <col:26, col:31> 'int' '<<'
|   |           | | | |       |-IntegerLiteral 0x242d94da5a8 <col:26> 'int' 1
|   |           | | | |       `-IntegerLiteral 0x242d94da5d0 <col:31> 'int' 0
|   |           | | | `-IntegerLiteral 0x242d94da690 <line:738:42> 'int' 0
|   |           | | `-ReturnStmt 0x242d94da778 <line:739:17, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |           | |   `-ImplicitCastExpr 0x242d94da760 <col:17, col:27> 'const unsigned char *' <NullToPointer>
|   |           | |     `-ParenExpr 0x242d94da740 <col:17, col:27> 'void *'
|   |           | |       `-CStyleCastExpr 0x242d94da718 <col:18, col:26> 'void *' <NullToPointer>
|   |           | |         `-IntegerLiteral 0x242d94da6d8 <col:26> 'int' 0
|   |           | `-CompoundAssignOperator 0x242d94da850 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:740:13, line:690:32> 'int' '|=' ComputeLHSTy='int' ComputeResultTy='int'
|   |           |   |-DeclRefExpr 0x242d94da7a0 <line:740:13> 'int' lvalue Var 0x242d94d0dc0 'state' 'int'
|   |           |   `-ParenExpr 0x242d94da830 <line:690:25, col:32> 'int'
|   |           |     `-BinaryOperator 0x242d94da810 <col:26, col:31> 'int' '<<'
|   |           |       |-IntegerLiteral 0x242d94da7c0 <col:26> 'int' 1
|   |           |       `-IntegerLiteral 0x242d94da7e8 <col:31> 'int' 2
|   |           `-ReturnStmt 0x242d94da940 <line:742:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |             `-ImplicitCastExpr 0x242d94da928 <col:17, col:27> 'const unsigned char *' <NullToPointer>
|   |               `-ParenExpr 0x242d94da908 <col:17, col:27> 'void *'
|   |                 `-CStyleCastExpr 0x242d94da8e0 <col:18, col:26> 'void *' <NullToPointer>
|   |                   `-IntegerLiteral 0x242d94da8a0 <col:26> 'int' 0
|   |-IfStmt 0x242d94dadb0 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:749:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   | |-BinaryOperator 0x242d94dace0 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:749:9, col:63> 'int' '||'
|   | | |-BinaryOperator 0x242d94dac40 <col:9, col:51> 'int' '!='
|   | | | |-ParenExpr 0x242d94dabf8 <col:9, col:46> 'int'
|   | | | | `-BinaryOperator 0x242d94dabd8 <col:10, col:45> 'int' '&'
|   | | | |   |-ImplicitCastExpr 0x242d94dabc0 <col:10> 'int' <LValueToRValue>
|   | | | |   | `-DeclRefExpr 0x242d94daa40 <col:10> 'int' lvalue Var 0x242d94d0dc0 'state' 'int'
|   | | | |   `-ParenExpr 0x242d94daba0 <col:18, col:45> 'int'
|   | | | |     `-BinaryOperator 0x242d94dab80 <line:688:25, line:690:32> 'int' '|'
|   | | | |       |-ParenExpr 0x242d94daad0 <line:688:25, col:32> 'int'
|   | | | |       | `-BinaryOperator 0x242d94daab0 <col:26, col:31> 'int' '<<'
|   | | | |       |   |-IntegerLiteral 0x242d94daa60 <col:26> 'int' 1
|   | | | |       |   `-IntegerLiteral 0x242d94daa88 <col:31> 'int' 0
|   | | | |       `-ParenExpr 0x242d94dab60 <line:690:25, col:32> 'int'
|   | | | |         `-BinaryOperator 0x242d94dab40 <col:26, col:31> 'int' '<<'
|   | | | |           |-IntegerLiteral 0x242d94daaf0 <col:26> 'int' 1
|   | | | |           `-IntegerLiteral 0x242d94dab18 <col:31> 'int' 2
|   | | | `-IntegerLiteral 0x242d94dac18 <line:749:51> 'int' 0
|   | | `-BinaryOperator 0x242d94dacc0 <col:56, col:63> 'int' '<'
|   | |   |-ImplicitCastExpr 0x242d94daca8 <col:56> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x242d94dac60 <col:56> 'int' lvalue Var 0x242d94d0ee8 'dots' 'int'
|   | |   `-IntegerLiteral 0x242d94dac80 <col:63> 'int' 2
|   | `-ReturnStmt 0x242d94dada0 <line:750:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |   `-ImplicitCastExpr 0x242d94dad88 <col:17, col:27> 'const unsigned char *' <NullToPointer>
|   |     `-ParenExpr 0x242d94dad68 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x242d94dad40 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x242d94dad00 <col:26> 'int' 0
|   `-ReturnStmt 0x242d94dae00 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:751:5, col:12>
|     `-ImplicitCastExpr 0x242d94dade8 <col:12> 'const unsigned char *' <LValueToRValue>
|       `-DeclRefExpr 0x242d94dadc8 <col:12> 'const unsigned char *' lvalue Var 0x242d94d0c58 'star' 'const unsigned char *'
|-FunctionDecl 0x242d94db190 <line:755:1, line:773:1> line:755:12 used equal_wildcard 'int (const unsigned char *, size_t, const unsigned char *, size_t, unsigned int)' static
| |-ParmVarDecl 0x242d94dae70 <col:27, col:48> col:48 used pattern 'const unsigned char *'
| |-ParmVarDecl 0x242d94daee8 <col:57, col:64> col:64 used pattern_len 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d94daf68 <line:756:27, col:48> col:48 used subject 'const unsigned char *'
| |-ParmVarDecl 0x242d94dafe0 <col:57, col:64> col:64 used subject_len 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d94db060 <line:757:27, col:40> col:40 used flags 'unsigned int'
| `-CompoundStmt 0x242d94dcec8 <line:758:1, line:773:1>
|   |-DeclStmt 0x242d94db390 <line:759:5, col:37>
|   | `-VarDecl 0x242d94db288 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/before\crypto\x509v3\v3_utl.c:759:26 used star 'const unsigned char *' cinit
|   |   `-ImplicitCastExpr 0x242d94db378 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const unsigned char *' <NullToPointer>
|   |     `-ParenExpr 0x242d94db358 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x242d94db330 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x242d94db2f0 <col:26> 'int' 0
|   |-IfStmt 0x242d94dc770 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:765:5, line:766:54>
|   | |-UnaryOperator 0x242d94dc588 <line:765:9, col:47> 'int' prefix '!' cannot overflow
|   | | `-ParenExpr 0x242d94dc568 <col:10, col:47> 'int'
|   | |   `-BinaryOperator 0x242d94dc548 <col:11, col:44> 'int' '&&'
|   | |     |-BinaryOperator 0x242d94dc440 <col:11, col:25> 'int' '>'
|   | |     | |-ImplicitCastExpr 0x242d94dc410 <col:11> 'size_t':'unsigned long long' <LValueToRValue>
|   | |     | | `-DeclRefExpr 0x242d94db3a8 <col:11> 'size_t':'unsigned long long' lvalue ParmVar 0x242d94dafe0 'subject_len' 'size_t':'unsigned long long'
|   | |     | `-ImplicitCastExpr 0x242d94dc428 <col:25> 'unsigned long long' <IntegralCast>
|   | |     |   `-IntegerLiteral 0x242d94db3c8 <col:25> 'int' 1
|   | |     `-BinaryOperator 0x242d94dc528 <col:30, col:44> 'int' '=='
|   | |       |-ImplicitCastExpr 0x242d94dc510 <col:30, col:39> 'int' <IntegralCast>
|   | |       | `-ImplicitCastExpr 0x242d94dc4f8 <col:30, col:39> 'unsigned char' <LValueToRValue>
|   | |       |   `-ArraySubscriptExpr 0x242d94dc4c0 <col:30, col:39> 'const unsigned char' lvalue
|   | |       |     |-ImplicitCastExpr 0x242d94dc4a8 <col:30> 'const unsigned char *' <LValueToRValue>
|   | |       |     | `-DeclRefExpr 0x242d94dc460 <col:30> 'const unsigned char *' lvalue ParmVar 0x242d94daf68 'subject' 'const unsigned char *'
|   | |       |     `-IntegerLiteral 0x242d94dc480 <col:38> 'int' 0
|   | |       `-CharacterLiteral 0x242d94dc4e0 <col:44> 'int' 46
|   | `-BinaryOperator 0x242d94dc750 <line:766:9, col:54> 'const unsigned char *' '='
|   |   |-DeclRefExpr 0x242d94dc5a0 <col:9> 'const unsigned char *' lvalue Var 0x242d94db288 'star' 'const unsigned char *'
|   |   `-CallExpr 0x242d94dc6d0 <col:16, col:54> 'const unsigned char *'
|   |     |-ImplicitCastExpr 0x242d94dc6b8 <col:16> 'const unsigned char *(*)(const unsigned char *, size_t, unsigned int)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x242d94dc5d8 <col:16> 'const unsigned char *(const unsigned char *, size_t, unsigned int)' Function 0x242d94d0b70 'valid_star' 'const unsigned char *(const unsigned char *, size_t, unsigned int)'
|   |     |-ImplicitCastExpr 0x242d94dc708 <col:27> 'const unsigned char *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x242d94dc5f8 <col:27> 'const unsigned char *' lvalue ParmVar 0x242d94dae70 'pattern' 'const unsigned char *'
|   |     |-ImplicitCastExpr 0x242d94dc720 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x242d94dc618 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x242d94daee8 'pattern_len' 'size_t':'unsigned long long'
|   |     `-ImplicitCastExpr 0x242d94dc738 <col:49> 'unsigned int' <LValueToRValue>
|   |       `-DeclRefExpr 0x242d94dc638 <col:49> 'unsigned int' lvalue ParmVar 0x242d94db060 'flags' 'unsigned int'
|   |-IfStmt 0x242d94dca28 <line:767:5, line:769:56>
|   | |-BinaryOperator 0x242d94dc860 <line:767:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x242d94dc830 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:767:9> 'const unsigned char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x242d94dc788 <col:9> 'const unsigned char *' lvalue Var 0x242d94db288 'star' 'const unsigned char *'
|   | | `-ImplicitCastExpr 0x242d94dc848 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const unsigned char *' <BitCast>
|   | |   `-ParenExpr 0x242d94dc810 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x242d94dc7e8 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x242d94dc7a8 <col:26> 'int' 0
|   | `-ReturnStmt 0x242d94dca18 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:768:9, line:769:56>
|   |   `-CallExpr 0x242d94dc958 <line:768:16, line:769:56> 'int'
|   |     |-ImplicitCastExpr 0x242d94dc940 <line:768:16> 'int (*)(const unsigned char *, size_t, const unsigned char *, size_t, unsigned int)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x242d94dc880 <col:16> 'int (const unsigned char *, size_t, const unsigned char *, size_t, unsigned int)' Function 0x242d94c76f0 'equal_nocase' 'int (const unsigned char *, size_t, const unsigned char *, size_t, unsigned int)'
|   |     |-ImplicitCastExpr 0x242d94dc9a0 <col:29> 'const unsigned char *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x242d94dc8a0 <col:29> 'const unsigned char *' lvalue ParmVar 0x242d94dae70 'pattern' 'const unsigned char *'
|   |     |-ImplicitCastExpr 0x242d94dc9b8 <col:38> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x242d94dc8c0 <col:38> 'size_t':'unsigned long long' lvalue ParmVar 0x242d94daee8 'pattern_len' 'size_t':'unsigned long long'
|   |     |-ImplicitCastExpr 0x242d94dc9d0 <line:769:29> 'const unsigned char *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x242d94dc8e0 <col:29> 'const unsigned char *' lvalue ParmVar 0x242d94daf68 'subject' 'const unsigned char *'
|   |     |-ImplicitCastExpr 0x242d94dc9e8 <col:38> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x242d94dc900 <col:38> 'size_t':'unsigned long long' lvalue ParmVar 0x242d94dafe0 'subject_len' 'size_t':'unsigned long long'
|   |     `-ImplicitCastExpr 0x242d94dca00 <col:51> 'unsigned int' <LValueToRValue>
|   |       `-DeclRefExpr 0x242d94dc920 <col:51> 'unsigned int' lvalue ParmVar 0x242d94db060 'flags' 'unsigned int'
|   `-ReturnStmt 0x242d94dceb8 <line:770:5, line:772:54>
|     `-CallExpr 0x242d94dcdd0 <line:770:12, line:772:54> 'int'
|       |-ImplicitCastExpr 0x242d94dcdb8 <line:770:12> 'int (*)(const unsigned char *, size_t, const unsigned char *, size_t, const unsigned char *, size_t, unsigned int)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x242d94dca40 <col:12> 'int (const unsigned char *, size_t, const unsigned char *, size_t, const unsigned char *, size_t, unsigned int)' Function 0x242d94d3740 'wildcard_match' 'int (const unsigned char *, size_t, const unsigned char *, size_t, const unsigned char *, size_t, unsigned int)'
|       |-ImplicitCastExpr 0x242d94dce28 <col:27> 'const unsigned char *' <LValueToRValue>
|       | `-DeclRefExpr 0x242d94dca60 <col:27> 'const unsigned char *' lvalue ParmVar 0x242d94dae70 'pattern' 'const unsigned char *'
|       |-ImplicitCastExpr 0x242d94dce40 <col:36, col:43> 'size_t':'unsigned long long' <IntegralCast>
|       | `-BinaryOperator 0x242d94dcaf0 <col:36, col:43> 'long long' '-'
|       |   |-ImplicitCastExpr 0x242d94dcac0 <col:36> 'const unsigned char *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x242d94dca80 <col:36> 'const unsigned char *' lvalue Var 0x242d94db288 'star' 'const unsigned char *'
|       |   `-ImplicitCastExpr 0x242d94dcad8 <col:43> 'const unsigned char *' <LValueToRValue>
|       |     `-DeclRefExpr 0x242d94dcaa0 <col:43> 'const unsigned char *' lvalue ParmVar 0x242d94dae70 'pattern' 'const unsigned char *'
|       |-BinaryOperator 0x242d94dcb70 <line:771:27, col:34> 'const unsigned char *' '+'
|       | |-ImplicitCastExpr 0x242d94dcb58 <col:27> 'const unsigned char *' <LValueToRValue>
|       | | `-DeclRefExpr 0x242d94dcb10 <col:27> 'const unsigned char *' lvalue Var 0x242d94db288 'star' 'const unsigned char *'
|       | `-IntegerLiteral 0x242d94dcb30 <col:34> 'int' 1
|       |-ImplicitCastExpr 0x242d94dce58 <col:37, col:70> 'size_t':'unsigned long long' <IntegralCast>
|       | `-BinaryOperator 0x242d94dccd8 <col:37, col:70> 'long long' '-'
|       |   |-BinaryOperator 0x242d94dcc78 <col:37, col:63> 'long long' '-'
|       |   | |-ParenExpr 0x242d94dcc20 <col:37, col:59> 'const unsigned char *'
|       |   | | `-BinaryOperator 0x242d94dcc00 <col:38, col:48> 'const unsigned char *' '+'
|       |   | |   |-ImplicitCastExpr 0x242d94dcbd0 <col:38> 'const unsigned char *' <LValueToRValue>
|       |   | |   | `-DeclRefExpr 0x242d94dcb90 <col:38> 'const unsigned char *' lvalue ParmVar 0x242d94dae70 'pattern' 'const unsigned char *'
|       |   | |   `-ImplicitCastExpr 0x242d94dcbe8 <col:48> 'size_t':'unsigned long long' <LValueToRValue>
|       |   | |     `-DeclRefExpr 0x242d94dcbb0 <col:48> 'size_t':'unsigned long long' lvalue ParmVar 0x242d94daee8 'pattern_len' 'size_t':'unsigned long long'
|       |   | `-ImplicitCastExpr 0x242d94dcc60 <col:63> 'const unsigned char *' <LValueToRValue>
|       |   |   `-DeclRefExpr 0x242d94dcc40 <col:63> 'const unsigned char *' lvalue Var 0x242d94db288 'star' 'const unsigned char *'
|       |   `-ImplicitCastExpr 0x242d94dccc0 <col:70> 'long long' <IntegralCast>
|       |     `-IntegerLiteral 0x242d94dcc98 <col:70> 'int' 1
|       |-ImplicitCastExpr 0x242d94dce70 <line:772:27> 'const unsigned char *' <LValueToRValue>
|       | `-DeclRefExpr 0x242d94dccf8 <col:27> 'const unsigned char *' lvalue ParmVar 0x242d94daf68 'subject' 'const unsigned char *'
|       |-ImplicitCastExpr 0x242d94dce88 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x242d94dcd18 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x242d94dafe0 'subject_len' 'size_t':'unsigned long long'
|       `-ImplicitCastExpr 0x242d94dcea0 <col:49> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x242d94dcd38 <col:49> 'unsigned int' lvalue ParmVar 0x242d94db060 'flags' 'unsigned int'
|-FunctionDecl 0x242d94d53a0 <line:781:1, line:815:1> line:781:12 invalid do_check_string 'int (const int *, int, int, unsigned int, const char *, size_t, char **)' static
| |-ParmVarDecl 0x242d94dcf10 <col:28, col:47> col:47 invalid a 'const int *'
| |-ParmVarDecl 0x242d94dcf90 <col:50, col:54> col:54 used cmp_type 'int'
| |-ParmVarDecl 0x242d94dd010 <col:64, col:73> col:73 invalid equal 'int'
| |-ParmVarDecl 0x242d94dd090 <line:782:28, col:41> col:41 used flags 'unsigned int'
| |-ParmVarDecl 0x242d94dd110 <col:48, col:60> col:60 used b 'const char *'
| |-ParmVarDecl 0x242d94dd188 <col:63, col:70> col:70 used blen 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d94dd208 <line:783:28, col:35> col:35 used peername 'char **'
| `-CompoundStmt 0x242d94d7568 <line:784:1, line:815:1>
|   |-DeclStmt 0x242d94d5538 <line:785:5, col:15>
|   | `-VarDecl 0x242d94d54a8 <col:5, col:14> col:9 used rv 'int' cinit
|   |   `-IntegerLiteral 0x242d94d5510 <col:14> 'int' 0
|   |-IfStmt 0x242d94d55a0 <line:787:5, line:788:16>
|   | |-OpaqueValueExpr 0x242d94d5588 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x242d94d5578 <col:9, col:16>
|   |   `-IntegerLiteral 0x242d94d5550 <col:16> 'int' 0
|   |-IfStmt 0x242d94d74f8 <line:789:5, line:813:5> has_else
|   | |-BinaryOperator 0x242d94d5630 <line:789:9, col:20> 'int' '>'
|   | | |-ImplicitCastExpr 0x242d94d5618 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x242d94d55b8 <col:9> 'int' lvalue ParmVar 0x242d94dcf90 'cmp_type' 'int'
|   | | `-IntegerLiteral 0x242d94d55f0 <col:20> 'int' 0
|   | |-CompoundStmt 0x242d94d5c38 <col:23, line:798:5>
|   | | |-IfStmt 0x242d94d56c0 <line:790:9, line:791:20>
|   | | | |-OpaqueValueExpr 0x242d94d56a8 <<invalid sloc>> '_Bool'
|   | | | `-ReturnStmt 0x242d94d5698 <col:13, col:20>
|   | | |   `-IntegerLiteral 0x242d94d5670 <col:20> 'int' 0
|   | | `-IfStmt 0x242d94d59c0 <line:792:9, line:795:18> has_else
|   | |   |-OpaqueValueExpr 0x242d94d59a8 <<invalid sloc>> '_Bool'
|   | |   |-NullStmt 0x242d94d59a0 <line:793:13>
|   | |   `-IfStmt 0x242d94d5988 <line:794:14, line:795:18>
|   | |     |-OpaqueValueExpr 0x242d94d5970 <<invalid sloc>> '_Bool'
|   | |     `-BinaryOperator 0x242d94d5950 <col:13, col:18> 'int' '='
|   | |       |-DeclRefExpr 0x242d94d5908 <col:13> 'int' lvalue Var 0x242d94d54a8 'rv' 'int'
|   | |       `-IntegerLiteral 0x242d94d5928 <col:18> 'int' 1
|   | `-CompoundStmt 0x242d94d74c0 <line:798:12, line:813:5>
|   |   |-DeclStmt 0x242d94d5cd8 <line:799:9, col:20>
|   |   | `-VarDecl 0x242d94d5c70 <col:9, col:13> col:13 used astrlen 'int'
|   |   |-DeclStmt 0x242d94d5d70 <line:800:9, col:28>
|   |   | `-VarDecl 0x242d94d5d08 <col:9, col:24> col:24 used astr 'unsigned char *'
|   |   |-IfStmt 0x242d94d6038 <line:802:9, line:808:9>
|   |   | |-BinaryOperator 0x242d94d5fb0 <line:802:13, col:23> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x242d94d5f98 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x242d94d5f50 <col:13> 'int' lvalue Var 0x242d94d5c70 'astrlen' 'int'
|   |   | | `-IntegerLiteral 0x242d94d5f70 <col:23> 'int' 0
|   |   | `-CompoundStmt 0x242d94d6020 <col:26, line:808:9>
|   |   |   `-ReturnStmt 0x242d94d6010 <line:807:13, col:21>
|   |   |     `-UnaryOperator 0x242d94d5ff8 <col:20, col:21> 'int' prefix '-'
|   |   |       `-IntegerLiteral 0x242d94d5fd0 <col:21> 'int' 1
|   |   |-IfStmt 0x242d94d7410 <line:810:9, line:811:62>
|   |   | |-BinaryOperator 0x242d94d6220 <line:810:13, col:23> 'int' '&&'
|   |   | | |-BinaryOperator 0x242d94d61c8 <col:13, col:18> 'int' '>'
|   |   | | | |-ImplicitCastExpr 0x242d94d61b0 <col:13> 'int' <LValueToRValue>
|   |   | | | | `-DeclRefExpr 0x242d94d6168 <col:13> 'int' lvalue Var 0x242d94d54a8 'rv' 'int'
|   |   | | | `-IntegerLiteral 0x242d94d6188 <col:18> 'int' 0
|   |   | | `-ImplicitCastExpr 0x242d94d6208 <col:23> 'char **' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x242d94d61e8 <col:23> 'char **' lvalue ParmVar 0x242d94dd208 'peername' 'char **'
|   |   | `-BinaryOperator 0x242d94d73f0 <line:811:13, col:62> 'char *' '='
|   |   |   |-UnaryOperator 0x242d94d6278 <col:13, col:14> 'char *' lvalue prefix '*' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x242d94d6260 <col:14> 'char **' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x242d94d6240 <col:14> 'char **' lvalue ParmVar 0x242d94dd208 'peername' 'char **'
|   |   |   `-ImplicitCastExpr 0x242d94d73d8 <col:25, col:62> 'char *' <IntegralToPointer>
|   |   |     `-CallExpr 0x242d94d6360 <col:25, col:62> 'int'
|   |   |       |-ImplicitCastExpr 0x242d94d6348 <col:25> 'int (*)()' <FunctionToPointerDecay>
|   |   |       | `-DeclRefExpr 0x242d94d6290 <col:25> 'int ()' Function 0x242d94d5b50 'OPENSSL_strndup' 'int ()'
|   |   |       |-CStyleCastExpr 0x242d94d6300 <col:41, col:49> 'char *' <BitCast>
|   |   |       | `-ImplicitCastExpr 0x242d94d62e8 <col:49> 'unsigned char *' <LValueToRValue> part_of_explicit_cast
|   |   |       |   `-DeclRefExpr 0x242d94d62b0 <col:49> 'unsigned char *' lvalue Var 0x242d94d5d08 'astr' 'unsigned char *'
|   |   |       `-ImplicitCastExpr 0x242d94d73c0 <col:55> 'int' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x242d94d6328 <col:55> 'int' lvalue Var 0x242d94d5c70 'astrlen' 'int'
|   |   `-CallExpr 0x242d94d7480 <line:812:9, col:26> 'int'
|   |     |-ImplicitCastExpr 0x242d94d7468 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x242d94d7428 <col:9> 'int ()' Function 0x242d94c6600 'OPENSSL_free' 'int ()'
|   |     `-ImplicitCastExpr 0x242d94d74a8 <col:22> 'unsigned char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x242d94d7448 <col:22> 'unsigned char *' lvalue Var 0x242d94d5d08 'astr' 'unsigned char *'
|   `-ReturnStmt 0x242d94d7558 <line:814:5, col:12>
|     `-ImplicitCastExpr 0x242d94d7540 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x242d94d7520 <col:12> 'int' lvalue Var 0x242d94d54a8 'rv' 'int'
|-FunctionDecl 0x242d94d79a0 <line:817:1, line:896:1> line:817:12 invalid do_x509_check 'int (int *, const char *, size_t, unsigned int, int, char **)' static
| |-ParmVarDecl 0x242d94d75b0 <col:26, col:32> col:32 invalid x 'int *'
| |-ParmVarDecl 0x242d94d7630 <col:35, col:47> col:47 used chk 'const char *'
| |-ParmVarDecl 0x242d94d76a8 <col:52, col:59> col:59 used chklen 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d94d7728 <line:818:26, col:39> col:39 used flags 'unsigned int'
| |-ParmVarDecl 0x242d94d77a8 <col:46, col:50> col:50 used check_type 'int'
| |-ParmVarDecl 0x242d94d7828 <col:62, col:69> col:69 used peername 'char **'
| `-CompoundStmt 0x242d94dd970 <line:819:1, line:896:1>
|   |-DeclStmt 0x242d94d7c18 <line:822:5, col:10>
|   | `-VarDecl 0x242d94d7bb0 <col:5, col:9> col:9 used i 'int'
|   |-DeclStmt 0x242d94d7cb0 <line:823:5, col:25>
|   | `-VarDecl 0x242d94d7c48 <col:5, col:9> col:9 used cnid 'int'
|   |-DeclStmt 0x242d94d7d48 <line:824:5, col:17>
|   | `-VarDecl 0x242d94d7ce0 <col:5, col:9> col:9 used alt_type 'int'
|   |-DeclStmt 0x242d94d7e08 <line:825:5, col:24>
|   | `-VarDecl 0x242d94d7d78 <col:5, col:23> col:9 used san_present 'int' cinit
|   |   `-IntegerLiteral 0x242d94d7de0 <col:23> 'int' 0
|   |-DeclStmt 0x242d94d7ec8 <line:826:5, col:15>
|   | `-VarDecl 0x242d94d7e38 <col:5, col:14> col:9 used rv 'int' cinit
|   |   `-IntegerLiteral 0x242d94d7ea0 <col:14> 'int' 0
|   |-IfStmt 0x242d94d8358 <line:831:5, line:848:5> has_else
|   | |-OpaqueValueExpr 0x242d94d8340 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x242d94d7fe0 <line:831:34, line:835:5>
|   | `-IfStmt 0x242d94d8318 <col:12, line:848:5> has_else
|   |   |-OpaqueValueExpr 0x242d94d8300 <<invalid sloc>> '_Bool'
|   |   |-CompoundStmt 0x242d94d82a0 <line:835:39, line:845:5>
|   |   `-CompoundStmt 0x242d94d82f0 <col:12, line:848:5>
|   |-IfStmt 0x242d94d8538 <line:850:5, line:851:28>
|   | |-BinaryOperator 0x242d94d8428 <line:850:9, col:19> 'int' '=='
|   | | |-ImplicitCastExpr 0x242d94d83f8 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x242d94d8380 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x242d94d76a8 'chklen' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x242d94d8410 <col:19> 'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x242d94d83d0 <col:19> 'int' 0
|   | `-BinaryOperator 0x242d94d8518 <line:851:9, col:28> 'size_t':'unsigned long long' '='
|   |   |-DeclRefExpr 0x242d94d8448 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x242d94d76a8 'chklen' 'size_t':'unsigned long long'
|   |   `-CallExpr 0x242d94d84d8 <col:18, col:28> 'unsigned long long'
|   |     |-ImplicitCastExpr 0x242d94d84c0 <col:18> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x242d94d8468 <col:18> 'unsigned long long (const char *)' Function 0x242d94c5070 'strlen' 'unsigned long long (const char *)'
|   |     `-ImplicitCastExpr 0x242d94d8500 <col:25> 'const char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x242d94d8488 <col:25> 'const char *' lvalue ParmVar 0x242d94d7630 'chk' 'const char *'
|   |-IfStmt 0x242d94d8fe8 <line:854:5, line:878:5>
|   | |-OpaqueValueExpr 0x242d94d8fd0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x242d94d8fb0 <line:854:15, line:878:5>
|   |   |-IfStmt 0x242d94d8ef0 <line:874:9, line:875:20>
|   |   | |-BinaryOperator 0x242d94d8e88 <line:874:13, col:19> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x242d94d8e70 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x242d94d8e28 <col:13> 'int' lvalue Var 0x242d94d7e38 'rv' 'int'
|   |   | | `-IntegerLiteral 0x242d94d8e48 <col:19> 'int' 0
|   |   | `-ReturnStmt 0x242d94d8ee0 <line:875:13, col:20>
|   |   |   `-ImplicitCastExpr 0x242d94d8ec8 <col:20> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x242d94d8ea8 <col:20> 'int' lvalue Var 0x242d94d7e38 'rv' 'int'
|   |   `-IfStmt 0x242d94d8f98 <line:876:9, line:877:20>
|   |     |-OpaqueValueExpr 0x242d94d8f80 <<invalid sloc>> '_Bool'
|   |     `-ReturnStmt 0x242d94d8f70 <col:13, col:20>
|   |       `-IntegerLiteral 0x242d94d8f48 <col:20> 'int' 0
|   |-IfStmt 0x242d94d9090 <line:881:5, line:882:16>
|   | |-OpaqueValueExpr 0x242d94d9078 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x242d94d9068 <col:9, col:16>
|   |   `-IntegerLiteral 0x242d94d9040 <col:16> 'int' 0
|   |-BinaryOperator 0x242d94d9108 <line:884:5, col:10> 'int' '='
|   | |-DeclRefExpr 0x242d94d90a8 <col:5> 'int' lvalue Var 0x242d94d7bb0 'i' 'int'
|   | `-UnaryOperator 0x242d94d90f0 <col:9, col:10> 'int' prefix '-'
|   |   `-IntegerLiteral 0x242d94d90c8 <col:10> 'int' 1
|   `-ReturnStmt 0x242d94dd960 <line:895:5, col:12>
|     `-IntegerLiteral 0x242d94dd938 <col:12> 'int' 0
|-FunctionDecl 0x242d94ddd40 <line:898:1, line:915:1> line:898:5 invalid X509_check_host 'int (int *, const char *, size_t, unsigned int, char **)'
| |-ParmVarDecl 0x242d94dd9f0 <col:21, col:27> col:27 invalid x 'int *'
| |-ParmVarDecl 0x242d94dda70 <col:30, col:42> col:42 used chk 'const char *'
| |-ParmVarDecl 0x242d94ddae8 <col:47, col:54> col:54 used chklen 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d94ddb68 <line:899:21, col:34> col:34 used flags 'unsigned int'
| |-ParmVarDecl 0x242d94ddbe8 <col:41, col:48> col:48 used peername 'char **'
| `-CompoundStmt 0x242d94d6988 <line:900:1, line:915:1>
|   |-IfStmt 0x242d94ddf80 <line:901:5, line:902:17>
|   | |-BinaryOperator 0x242d94ddf10 <line:901:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x242d94ddee0 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:901:9> 'const char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x242d94dde20 <col:9> 'const char *' lvalue ParmVar 0x242d94dda70 'chk' 'const char *'
|   | | `-ImplicitCastExpr 0x242d94ddef8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   | |   `-ParenExpr 0x242d94ddec0 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x242d94dde98 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x242d94dde58 <col:26> 'int' 0
|   | `-ReturnStmt 0x242d94ddf70 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:902:9, col:17>
|   |   `-UnaryOperator 0x242d94ddf58 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x242d94ddf30 <col:17> 'int' 2
|   |-IfStmt 0x242d94d6650 <line:908:5, line:911:17> has_else
|   | |-BinaryOperator 0x242d94de028 <line:908:9, col:19> 'int' '=='
|   | | |-ImplicitCastExpr 0x242d94ddff8 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x242d94ddf98 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x242d94ddae8 'chklen' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x242d94de010 <col:19> 'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x242d94ddfd0 <col:19> 'int' 0
|   | |-BinaryOperator 0x242d94de118 <line:909:9, col:28> 'size_t':'unsigned long long' '='
|   | | |-DeclRefExpr 0x242d94de048 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x242d94ddae8 'chklen' 'size_t':'unsigned long long'
|   | | `-CallExpr 0x242d94de0d8 <col:18, col:28> 'unsigned long long'
|   | |   |-ImplicitCastExpr 0x242d94de0c0 <col:18> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x242d94de068 <col:18> 'unsigned long long (const char *)' Function 0x242d94c5070 'strlen' 'unsigned long long (const char *)'
|   | |   `-ImplicitCastExpr 0x242d94de100 <col:25> 'const char *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x242d94de088 <col:25> 'const char *' lvalue ParmVar 0x242d94dda70 'chk' 'const char *'
|   | `-IfStmt 0x242d94d6638 <line:910:10, line:911:17>
|   |   |-CallExpr 0x242d94d6580 <line:910:14, col:64> 'void *'
|   |   | |-ImplicitCastExpr 0x242d94d6568 <col:14> 'void *(*)(const void *, int, unsigned long long)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x242d94de370 <col:14> 'void *(const void *, int, unsigned long long)' Function 0x242d94de180 'memchr' 'void *(const void *, int, unsigned long long)'
|   |   | |-ImplicitCastExpr 0x242d94d65d0 <col:21> 'const void *' <BitCast>
|   |   | | `-ImplicitCastExpr 0x242d94d65b8 <col:21> 'const char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x242d94de3a8 <col:21> 'const char *' lvalue ParmVar 0x242d94dda70 'chk' 'const char *'
|   |   | |-CharacterLiteral 0x242d94de3c8 <col:26> 'int' 0
|   |   | `-ConditionalOperator 0x242d94d64f8 <col:32, col:58> 'unsigned long long'
|   |   |   |-BinaryOperator 0x242d94d6408 <col:32, col:41> 'int' '>'
|   |   |   | |-ImplicitCastExpr 0x242d94d63d8 <col:32> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x242d94de3e0 <col:32> 'size_t':'unsigned long long' lvalue ParmVar 0x242d94ddae8 'chklen' 'size_t':'unsigned long long'
|   |   |   | `-ImplicitCastExpr 0x242d94d63f0 <col:41> 'unsigned long long' <IntegralCast>
|   |   |   |   `-IntegerLiteral 0x242d94d63b0 <col:41> 'int' 1
|   |   |   |-BinaryOperator 0x242d94d64a0 <col:45, col:54> 'unsigned long long' '-'
|   |   |   | |-ImplicitCastExpr 0x242d94d6470 <col:45> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x242d94d6428 <col:45> 'size_t':'unsigned long long' lvalue ParmVar 0x242d94ddae8 'chklen' 'size_t':'unsigned long long'
|   |   |   | `-ImplicitCastExpr 0x242d94d6488 <col:54> 'unsigned long long' <IntegralCast>
|   |   |   |   `-IntegerLiteral 0x242d94d6448 <col:54> 'int' 1
|   |   |   `-ImplicitCastExpr 0x242d94d64e0 <col:58> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x242d94d64c0 <col:58> 'size_t':'unsigned long long' lvalue ParmVar 0x242d94ddae8 'chklen' 'size_t':'unsigned long long'
|   |   `-ReturnStmt 0x242d94d6628 <line:911:9, col:17>
|   |     `-UnaryOperator 0x242d94d6610 <col:16, col:17> 'int' prefix '-'
|   |       `-IntegerLiteral 0x242d94d65e8 <col:17> 'int' 2
|   `-IfStmt 0x242d94d68c0 <line:912:5, line:913:11>
|     |-BinaryOperator 0x242d94d6868 <line:912:9, col:42> 'int' '&&'
|     | |-BinaryOperator 0x242d94d66f0 <col:9, col:18> 'int' '>'
|     | | |-ImplicitCastExpr 0x242d94d66c0 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|     | | | `-DeclRefExpr 0x242d94d6678 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x242d94ddae8 'chklen' 'size_t':'unsigned long long'
|     | | `-ImplicitCastExpr 0x242d94d66d8 <col:18> 'unsigned long long' <IntegralCast>
|     | |   `-IntegerLiteral 0x242d94d6698 <col:18> 'int' 1
|     | `-BinaryOperator 0x242d94d6848 <col:23, col:42> 'int' '=='
|     |   |-ImplicitCastExpr 0x242d94d6830 <col:23, col:37> 'int' <IntegralCast>
|     |   | `-ImplicitCastExpr 0x242d94d6818 <col:23, col:37> 'char' <LValueToRValue>
|     |   |   `-ArraySubscriptExpr 0x242d94d67e0 <col:23, col:37> 'const char' lvalue
|     |   |     |-ImplicitCastExpr 0x242d94d67c8 <col:23> 'const char *' <LValueToRValue>
|     |   |     | `-DeclRefExpr 0x242d94d6710 <col:23> 'const char *' lvalue ParmVar 0x242d94dda70 'chk' 'const char *'
|     |   |     `-BinaryOperator 0x242d94d67a8 <col:27, col:36> 'unsigned long long' '-'
|     |   |       |-ImplicitCastExpr 0x242d94d6778 <col:27> 'size_t':'unsigned long long' <LValueToRValue>
|     |   |       | `-DeclRefExpr 0x242d94d6730 <col:27> 'size_t':'unsigned long long' lvalue ParmVar 0x242d94ddae8 'chklen' 'size_t':'unsigned long long'
|     |   |       `-ImplicitCastExpr 0x242d94d6790 <col:36> 'unsigned long long' <IntegralCast>
|     |   |         `-IntegerLiteral 0x242d94d6750 <col:36> 'int' 1
|     |   `-CharacterLiteral 0x242d94d6800 <col:42> 'int' 0
|     `-UnaryOperator 0x242d94d68a8 <line:913:9, col:11> 'size_t':'unsigned long long' prefix '--'
|       `-DeclRefExpr 0x242d94d6888 <col:11> 'size_t':'unsigned long long' lvalue ParmVar 0x242d94ddae8 'chklen' 'size_t':'unsigned long long'
|-FunctionDecl 0x242d94de180 <line:910:14> col:14 implicit used memchr 'void *(const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x242d94de220 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x242d94de288 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x242d94de2f0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x242d94d6c90 <line:917:1, line:934:1> line:917:5 invalid X509_check_email 'int (int *, const char *, size_t, unsigned int)'
| |-ParmVarDecl 0x242d94d69c8 <col:22, col:28> col:28 invalid x 'int *'
| |-ParmVarDecl 0x242d94d6a48 <col:31, col:43> col:43 used chk 'const char *'
| |-ParmVarDecl 0x242d94d6ac0 <col:48, col:55> col:55 used chklen 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d94d6b40 <line:918:22, col:35> col:35 used flags 'unsigned int'
| `-CompoundStmt 0x242d94e3808 <line:919:1, line:934:1>
|   |-IfStmt 0x242d94d6ec8 <line:920:5, line:921:17>
|   | |-BinaryOperator 0x242d94d6e58 <line:920:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x242d94d6e28 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:920:9> 'const char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x242d94d6d68 <col:9> 'const char *' lvalue ParmVar 0x242d94d6a48 'chk' 'const char *'
|   | | `-ImplicitCastExpr 0x242d94d6e40 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   | |   `-ParenExpr 0x242d94d6e08 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x242d94d6de0 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x242d94d6da0 <col:26> 'int' 0
|   | `-ReturnStmt 0x242d94d6eb8 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:921:9, col:17>
|   |   `-UnaryOperator 0x242d94d6ea0 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x242d94d6e78 <col:17> 'int' 2
|   |-IfStmt 0x242d94e3480 <line:927:5, line:930:17> has_else
|   | |-BinaryOperator 0x242d94d6f70 <line:927:9, col:19> 'int' '=='
|   | | |-ImplicitCastExpr 0x242d94d6f40 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x242d94d6ee0 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x242d94d6ac0 'chklen' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x242d94d6f58 <col:19> 'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x242d94d6f18 <col:19> 'int' 0
|   | |-BinaryOperator 0x242d94d70a0 <line:928:9, col:36> 'size_t':'unsigned long long' '='
|   | | |-DeclRefExpr 0x242d94d6f90 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x242d94d6ac0 'chklen' 'size_t':'unsigned long long'
|   | | `-CallExpr 0x242d94d7060 <col:18, col:36> 'unsigned long long'
|   | |   |-ImplicitCastExpr 0x242d94d7048 <col:18> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x242d94d6fb0 <col:18> 'unsigned long long (const char *)' Function 0x242d94c5070 'strlen' 'unsigned long long (const char *)'
|   | |   `-ImplicitCastExpr 0x242d94d7088 <col:25, col:33> 'const char *' <NoOp>
|   | |     `-CStyleCastExpr 0x242d94d7020 <col:25, col:33> 'char *' <NoOp>
|   | |       `-ImplicitCastExpr 0x242d94d7008 <col:33> 'const char *' <LValueToRValue> part_of_explicit_cast
|   | |         `-DeclRefExpr 0x242d94d6fd0 <col:33> 'const char *' lvalue ParmVar 0x242d94d6a48 'chk' 'const char *'
|   | `-IfStmt 0x242d94d7398 <line:929:10, line:930:17>
|   |   |-CallExpr 0x242d94d72e0 <line:929:14, col:64> 'void *'
|   |   | |-ImplicitCastExpr 0x242d94d72c8 <col:14> 'void *(*)(const void *, int, unsigned long long)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x242d94d70c0 <col:14> 'void *(const void *, int, unsigned long long)' Function 0x242d94de180 'memchr' 'void *(const void *, int, unsigned long long)'
|   |   | |-ImplicitCastExpr 0x242d94d7330 <col:21> 'const void *' <BitCast>
|   |   | | `-ImplicitCastExpr 0x242d94d7318 <col:21> 'const char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x242d94d70e0 <col:21> 'const char *' lvalue ParmVar 0x242d94d6a48 'chk' 'const char *'
|   |   | |-CharacterLiteral 0x242d94d7100 <col:26> 'int' 0
|   |   | `-ConditionalOperator 0x242d94d7280 <col:32, col:58> 'unsigned long long'
|   |   |   |-BinaryOperator 0x242d94d7190 <col:32, col:41> 'int' '>'
|   |   |   | |-ImplicitCastExpr 0x242d94d7160 <col:32> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x242d94d7118 <col:32> 'size_t':'unsigned long long' lvalue ParmVar 0x242d94d6ac0 'chklen' 'size_t':'unsigned long long'
|   |   |   | `-ImplicitCastExpr 0x242d94d7178 <col:41> 'unsigned long long' <IntegralCast>
|   |   |   |   `-IntegerLiteral 0x242d94d7138 <col:41> 'int' 1
|   |   |   |-BinaryOperator 0x242d94d7228 <col:45, col:54> 'unsigned long long' '-'
|   |   |   | |-ImplicitCastExpr 0x242d94d71f8 <col:45> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x242d94d71b0 <col:45> 'size_t':'unsigned long long' lvalue ParmVar 0x242d94d6ac0 'chklen' 'size_t':'unsigned long long'
|   |   |   | `-ImplicitCastExpr 0x242d94d7210 <col:54> 'unsigned long long' <IntegralCast>
|   |   |   |   `-IntegerLiteral 0x242d94d71d0 <col:54> 'int' 1
|   |   |   `-ImplicitCastExpr 0x242d94d7268 <col:58> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x242d94d7248 <col:58> 'size_t':'unsigned long long' lvalue ParmVar 0x242d94d6ac0 'chklen' 'size_t':'unsigned long long'
|   |   `-ReturnStmt 0x242d94d7388 <line:930:9, col:17>
|   |     `-UnaryOperator 0x242d94d7370 <col:16, col:17> 'int' prefix '-'
|   |       `-IntegerLiteral 0x242d94d7348 <col:17> 'int' 2
|   `-IfStmt 0x242d94e36f0 <line:931:5, line:932:11>
|     |-BinaryOperator 0x242d94e3698 <line:931:9, col:42> 'int' '&&'
|     | |-BinaryOperator 0x242d94e3520 <col:9, col:18> 'int' '>'
|     | | |-ImplicitCastExpr 0x242d94e34f0 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|     | | | `-DeclRefExpr 0x242d94e34a8 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x242d94d6ac0 'chklen' 'size_t':'unsigned long long'
|     | | `-ImplicitCastExpr 0x242d94e3508 <col:18> 'unsigned long long' <IntegralCast>
|     | |   `-IntegerLiteral 0x242d94e34c8 <col:18> 'int' 1
|     | `-BinaryOperator 0x242d94e3678 <col:23, col:42> 'int' '=='
|     |   |-ImplicitCastExpr 0x242d94e3660 <col:23, col:37> 'int' <IntegralCast>
|     |   | `-ImplicitCastExpr 0x242d94e3648 <col:23, col:37> 'char' <LValueToRValue>
|     |   |   `-ArraySubscriptExpr 0x242d94e3610 <col:23, col:37> 'const char' lvalue
|     |   |     |-ImplicitCastExpr 0x242d94e35f8 <col:23> 'const char *' <LValueToRValue>
|     |   |     | `-DeclRefExpr 0x242d94e3540 <col:23> 'const char *' lvalue ParmVar 0x242d94d6a48 'chk' 'const char *'
|     |   |     `-BinaryOperator 0x242d94e35d8 <col:27, col:36> 'unsigned long long' '-'
|     |   |       |-ImplicitCastExpr 0x242d94e35a8 <col:27> 'size_t':'unsigned long long' <LValueToRValue>
|     |   |       | `-DeclRefExpr 0x242d94e3560 <col:27> 'size_t':'unsigned long long' lvalue ParmVar 0x242d94d6ac0 'chklen' 'size_t':'unsigned long long'
|     |   |       `-ImplicitCastExpr 0x242d94e35c0 <col:36> 'unsigned long long' <IntegralCast>
|     |   |         `-IntegerLiteral 0x242d94e3580 <col:36> 'int' 1
|     |   `-CharacterLiteral 0x242d94e3630 <col:42> 'int' 0
|     `-UnaryOperator 0x242d94e36d8 <line:932:9, col:11> 'size_t':'unsigned long long' prefix '--'
|       `-DeclRefExpr 0x242d94e36b8 <col:11> 'size_t':'unsigned long long' lvalue ParmVar 0x242d94d6ac0 'chklen' 'size_t':'unsigned long long'
|-FunctionDecl 0x242d94e3b10 <line:936:1, line:942:1> line:936:5 invalid X509_check_ip 'int (int *, const unsigned char *, size_t, unsigned int)'
| |-ParmVarDecl 0x242d94e3848 <col:19, col:25> col:25 invalid x 'int *'
| |-ParmVarDecl 0x242d94e38c8 <col:28, col:49> col:49 used chk 'const unsigned char *'
| |-ParmVarDecl 0x242d94e3940 <col:54, col:61> col:61 used chklen 'size_t':'unsigned long long'
| |-ParmVarDecl 0x242d94e39c0 <line:937:19, col:32> col:32 used flags 'unsigned int'
| `-CompoundStmt 0x242d94e3ed0 <line:938:1, line:942:1>
|   `-IfStmt 0x242d94e3d48 <line:939:5, line:940:17>
|     |-BinaryOperator 0x242d94e3cd8 <line:939:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|     | |-ImplicitCastExpr 0x242d94e3ca8 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:939:9> 'const unsigned char *' <LValueToRValue>
|     | | `-DeclRefExpr 0x242d94e3be8 <col:9> 'const unsigned char *' lvalue ParmVar 0x242d94e38c8 'chk' 'const unsigned char *'
|     | `-ImplicitCastExpr 0x242d94e3cc0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const unsigned char *' <BitCast>
|     |   `-ParenExpr 0x242d94e3c88 <col:17, col:27> 'void *'
|     |     `-CStyleCastExpr 0x242d94e3c60 <col:18, col:26> 'void *' <NullToPointer>
|     |       `-IntegerLiteral 0x242d94e3c20 <col:26> 'int' 0
|     `-ReturnStmt 0x242d94e3d38 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:940:9, col:17>
|       `-UnaryOperator 0x242d94e3d20 <col:16, col:17> 'int' prefix '-'
|         `-IntegerLiteral 0x242d94e3cf8 <col:17> 'int' 2
|-FunctionDecl 0x242d94e40f0 <line:944:1, line:955:1> line:944:5 invalid X509_check_ip_asc 'int (int *, const char *, unsigned int)'
| |-ParmVarDecl 0x242d94e3f00 <col:23, col:29> col:29 invalid x 'int *'
| |-ParmVarDecl 0x242d94e3f80 <col:32, col:44> col:44 used ipasc 'const char *'
| |-ParmVarDecl 0x242d94e4000 <col:51, col:64> col:64 used flags 'unsigned int'
| `-CompoundStmt 0x242d94e49c0 <line:945:1, line:955:1>
|   |-DeclStmt 0x242d94e42c8 <line:946:5, col:28>
|   | `-VarDecl 0x242d94e4260 <col:5, col:27> col:19 used ipout 'unsigned char [16]'
|   |-DeclStmt 0x242d94e4358 <line:947:5, col:17>
|   | `-VarDecl 0x242d94e42f0 <col:5, col:12> col:12 used iplen 'size_t':'unsigned long long'
|   |-IfStmt 0x242d94e44e0 <line:949:5, line:950:17>
|   | |-BinaryOperator 0x242d94e4460 <line:949:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x242d94e4430 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:949:9> 'const char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x242d94e4370 <col:9> 'const char *' lvalue ParmVar 0x242d94e3f80 'ipasc' 'const char *'
|   | | `-ImplicitCastExpr 0x242d94e4448 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   | |   `-ParenExpr 0x242d94e4410 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x242d94e43e8 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x242d94e43a8 <col:26> 'int' 0
|   | `-ReturnStmt 0x242d94e44d0 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:950:9, col:17>
|   |   `-UnaryOperator 0x242d94e44b8 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x242d94e4490 <col:17> 'int' 2
|   |-BinaryOperator 0x242d94e4748 <line:951:5, col:43> 'size_t':'unsigned long long' '='
|   | |-DeclRefExpr 0x242d94e44f8 <col:5> 'size_t':'unsigned long long' lvalue Var 0x242d94e42f0 'iplen' 'size_t':'unsigned long long'
|   | `-CStyleCastExpr 0x242d94e4720 <col:13, col:43> 'size_t':'unsigned long long' <IntegralCast>
|   |   `-CallExpr 0x242d94e46b0 <col:21, col:43> 'int'
|   |     |-ImplicitCastExpr 0x242d94e4698 <col:21> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x242d94e4620 <col:21> 'int ()' Function 0x242d94e4558 'a2i_ipadd' 'int ()'
|   |     |-ImplicitCastExpr 0x242d94e46e0 <col:31> 'unsigned char *' <ArrayToPointerDecay>
|   |     | `-DeclRefExpr 0x242d94e4640 <col:31> 'unsigned char [16]' lvalue Var 0x242d94e4260 'ipout' 'unsigned char [16]'
|   |     `-ImplicitCastExpr 0x242d94e46f8 <col:38> 'const char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x242d94e4678 <col:38> 'const char *' lvalue ParmVar 0x242d94e3f80 'ipasc' 'const char *'
|   `-IfStmt 0x242d94e4850 <line:952:5, line:953:17>
|     |-BinaryOperator 0x242d94e47e0 <line:952:9, col:18> 'int' '=='
|     | |-ImplicitCastExpr 0x242d94e47b0 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|     | | `-DeclRefExpr 0x242d94e4768 <col:9> 'size_t':'unsigned long long' lvalue Var 0x242d94e42f0 'iplen' 'size_t':'unsigned long long'
|     | `-ImplicitCastExpr 0x242d94e47c8 <col:18> 'unsigned long long' <IntegralCast>
|     |   `-IntegerLiteral 0x242d94e4788 <col:18> 'int' 0
|     `-ReturnStmt 0x242d94e4840 <line:953:9, col:17>
|       `-UnaryOperator 0x242d94e4828 <col:16, col:17> 'int' prefix '-'
|         `-IntegerLiteral 0x242d94e4800 <col:17> 'int' 2
|-FunctionDecl 0x242d94e4af0 <line:962:1, line:983:1> line:962:20 invalid a2i_IPADDRESS 'int *(const char *)'
| |-ParmVarDecl 0x242d94e4a10 <col:34, col:46> col:46 used ipasc 'const char *'
| `-CompoundStmt 0x242d94e55b8 <line:963:1, line:983:1>
|   |-DeclStmt 0x242d94e4c80 <line:964:5, col:28>
|   | `-VarDecl 0x242d94e4c18 <col:5, col:27> col:19 used ipout 'unsigned char [16]'
|   |-DeclStmt 0x242d94e4d18 <line:966:5, col:14>
|   | `-VarDecl 0x242d94e4cb0 <col:5, col:9> col:9 used iplen 'int'
|   |-BinaryOperator 0x242d94e4e58 <line:970:5, col:35> 'int' '='
|   | |-DeclRefExpr 0x242d94e4d30 <col:5> 'int' lvalue Var 0x242d94e4cb0 'iplen' 'int'
|   | `-CallExpr 0x242d94e4df8 <col:13, col:35> 'int'
|   |   |-ImplicitCastExpr 0x242d94e4de0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x242d94e4d68 <col:13> 'int ()' Function 0x242d94e4558 'a2i_ipadd' 'int ()'
|   |   |-ImplicitCastExpr 0x242d94e4e28 <col:23> 'unsigned char *' <ArrayToPointerDecay>
|   |   | `-DeclRefExpr 0x242d94e4d88 <col:23> 'unsigned char [16]' lvalue Var 0x242d94e4c18 'ipout' 'unsigned char [16]'
|   |   `-ImplicitCastExpr 0x242d94e4e40 <col:30> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x242d94e4dc0 <col:30> 'const char *' lvalue ParmVar 0x242d94e4a10 'ipasc' 'const char *'
|   |-IfStmt 0x242d94e4f78 <line:972:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   | |-UnaryOperator 0x242d94e4eb0 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:972:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x242d94e4e98 <col:10> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x242d94e4e78 <col:10> 'int' lvalue Var 0x242d94e4cb0 'iplen' 'int'
|   | `-ReturnStmt 0x242d94e4f68 <line:973:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |   `-ImplicitCastExpr 0x242d94e4f50 <col:17, col:27> 'int *' <NullToPointer>
|   |     `-ParenExpr 0x242d94e4f30 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x242d94e4f08 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x242d94e4ec8 <col:26> 'int' 0
|   |-IfStmt 0x242d94e5228 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:976:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   | |-OpaqueValueExpr 0x242d94e5210 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x242d94e5200 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:977:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |   `-ImplicitCastExpr 0x242d94e51e8 <col:17, col:27> 'int *' <NullToPointer>
|   |     `-ParenExpr 0x242d94e51c8 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x242d94e51a0 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x242d94e5160 <col:26> 'int' 0
|   `-IfStmt 0x242d94e55a0 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:978:5, line:981:5>
|     |-OpaqueValueExpr 0x242d94e5588 <<invalid sloc>> '_Bool'
|     `-CompoundStmt 0x242d94e5570 <line:978:52, line:981:5>
|       `-ReturnStmt 0x242d94e5560 <line:980:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|         `-ImplicitCastExpr 0x242d94e5548 <col:17, col:27> 'int *' <NullToPointer>
|           `-ParenExpr 0x242d94e5528 <col:17, col:27> 'void *'
|             `-CStyleCastExpr 0x242d94e5500 <col:18, col:26> 'void *' <NullToPointer>
|               `-IntegerLiteral 0x242d94e54c0 <col:26> 'int' 0
|-FunctionDecl 0x242d94e56c0 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:985:1, line:1025:1> line:985:20 invalid a2i_IPADDRESS_NC 'int *(const char *)'
| |-ParmVarDecl 0x242d94e5610 <col:37, col:49> col:49 used ipasc 'const char *'
| `-CompoundStmt 0x242d94dfe68 <line:986:1, line:1025:1>
|   |-DeclStmt 0x242d94e5918 <line:988:5, col:28>
|   | `-VarDecl 0x242d94e58b0 <col:5, col:27> col:19 used ipout 'unsigned char [32]'
|   |-DeclStmt 0x242d94e5ae8 <line:989:5, col:27>
|   | |-VarDecl 0x242d94e5948 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/before\crypto\x509v3\v3_utl.c:989:11 used iptmp 'char *' cinit
|   | | `-ImplicitCastExpr 0x242d94e5a38 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   | |   `-ParenExpr 0x242d94e5a18 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x242d94e59f0 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x242d94e59b0 <col:26> 'int' 0
|   | `-VarDecl 0x242d94e5a68 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:989:5, col:26> col:26 used p 'char *'
|   |-DeclStmt 0x242d94e5c18 <line:990:5, col:23>
|   | |-VarDecl 0x242d94e5b18 <col:5, col:9> col:9 used iplen1 'int'
|   | `-VarDecl 0x242d94e5b98 <col:5, col:17> col:17 used iplen2 'int'
|   |-BinaryOperator 0x242d94e5f38 <line:991:5, col:26> 'char *' '='
|   | |-DeclRefExpr 0x242d94e5c30 <col:5> 'char *' lvalue Var 0x242d94e5a68 'p' 'char *'
|   | `-CallExpr 0x242d94e5ef0 <col:9, col:26> 'char *'
|   |   |-ImplicitCastExpr 0x242d94e5ed8 <col:9> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x242d94e5e28 <col:9> 'char *(const char *, int)' Function 0x242d94e5ca8 'strchr' 'char *(const char *, int)'
|   |   |-ImplicitCastExpr 0x242d94e5f20 <col:16> 'const char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x242d94e5e60 <col:16> 'const char *' lvalue ParmVar 0x242d94e5610 'ipasc' 'const char *'
|   |   `-CharacterLiteral 0x242d94e5e80 <col:23> 'int' 47
|   |-IfStmt 0x242d94e6058 <line:992:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   | |-UnaryOperator 0x242d94e5f90 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:992:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x242d94e5f78 <col:10> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x242d94e5f58 <col:10> 'char *' lvalue Var 0x242d94e5a68 'p' 'char *'
|   | `-ReturnStmt 0x242d94e6048 <line:993:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |   `-ImplicitCastExpr 0x242d94e6030 <col:17, col:27> 'int *' <NullToPointer>
|   |     `-ParenExpr 0x242d94e6010 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x242d94e5fe8 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x242d94e5fa8 <col:26> 'int' 0
|   |-BinaryOperator 0x242d94e6158 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:994:5, col:33> 'char *' '='
|   | |-DeclRefExpr 0x242d94e6070 <col:5> 'char *' lvalue Var 0x242d94e5948 'iptmp' 'char *'
|   | `-ImplicitCastExpr 0x242d94e6140 <col:13, col:33> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x242d94e6100 <col:13, col:33> 'int'
|   |     |-ImplicitCastExpr 0x242d94e60e8 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x242d94e60a8 <col:13> 'int ()' Function 0x242d94c5620 'OPENSSL_strdup' 'int ()'
|   |     `-ImplicitCastExpr 0x242d94e6128 <col:28> 'const char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x242d94e60c8 <col:28> 'const char *' lvalue ParmVar 0x242d94e5610 'ipasc' 'const char *'
|   |-IfStmt 0x242d94e6278 <line:995:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   | |-UnaryOperator 0x242d94e61b0 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:995:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x242d94e6198 <col:10> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x242d94e6178 <col:10> 'char *' lvalue Var 0x242d94e5948 'iptmp' 'char *'
|   | `-ReturnStmt 0x242d94e6268 <line:996:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |   `-ImplicitCastExpr 0x242d94e6250 <col:17, col:27> 'int *' <NullToPointer>
|   |     `-ParenExpr 0x242d94e6230 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x242d94e6208 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x242d94e61c8 <col:26> 'int' 0
|   |-BinaryOperator 0x242d94e63b8 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:997:5, col:27> 'char *' '='
|   | |-DeclRefExpr 0x242d94e6290 <col:5> 'char *' lvalue Var 0x242d94e5a68 'p' 'char *'
|   | `-BinaryOperator 0x242d94e6398 <col:9, col:27> 'char *' '+'
|   |   |-ImplicitCastExpr 0x242d94e6380 <col:9> 'char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x242d94e62b0 <col:9> 'char *' lvalue Var 0x242d94e5948 'iptmp' 'char *'
|   |   `-ParenExpr 0x242d94e6360 <col:17, col:27> 'long long'
|   |     `-BinaryOperator 0x242d94e6340 <col:18, col:22> 'long long' '-'
|   |       |-ImplicitCastExpr 0x242d94e6310 <col:18> 'char *' <LValueToRValue>
|   |       | `-DeclRefExpr 0x242d94e62d0 <col:18> 'char *' lvalue Var 0x242d94e5a68 'p' 'char *'
|   |       `-ImplicitCastExpr 0x242d94e6328 <col:22> 'const char *' <LValueToRValue>
|   |         `-DeclRefExpr 0x242d94e62f0 <col:22> 'const char *' lvalue ParmVar 0x242d94e5610 'ipasc' 'const char *'
|   |-BinaryOperator 0x242d94e6468 <line:998:5, col:12> 'char' '='
|   | |-UnaryOperator 0x242d94e6410 <col:5, col:7> 'char' lvalue prefix '*' cannot overflow
|   | | `-UnaryOperator 0x242d94e63f8 <col:6, col:7> 'char *' postfix '++'
|   | |   `-DeclRefExpr 0x242d94e63d8 <col:6> 'char *' lvalue Var 0x242d94e5a68 'p' 'char *'
|   | `-ImplicitCastExpr 0x242d94e6450 <col:12> 'char' <IntegralCast>
|   |   `-IntegerLiteral 0x242d94e6428 <col:12> 'int' 0
|   |-BinaryOperator 0x242d94df568 <line:1000:5, col:36> 'int' '='
|   | |-DeclRefExpr 0x242d94df440 <col:5> 'int' lvalue Var 0x242d94e5b18 'iplen1' 'int'
|   | `-CallExpr 0x242d94df508 <col:14, col:36> 'int'
|   |   |-ImplicitCastExpr 0x242d94df4f0 <col:14> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x242d94df478 <col:14> 'int ()' Function 0x242d94e4558 'a2i_ipadd' 'int ()'
|   |   |-ImplicitCastExpr 0x242d94df538 <col:24> 'unsigned char *' <ArrayToPointerDecay>
|   |   | `-DeclRefExpr 0x242d94df498 <col:24> 'unsigned char [32]' lvalue Var 0x242d94e58b0 'ipout' 'unsigned char [32]'
|   |   `-ImplicitCastExpr 0x242d94df550 <col:31> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x242d94df4d0 <col:31> 'char *' lvalue Var 0x242d94e5948 'iptmp' 'char *'
|   |-IfStmt 0x242d94df640 <line:1002:5, line:1003:14>
|   | |-UnaryOperator 0x242d94df5c0 <line:1002:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x242d94df5a8 <col:10> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x242d94df588 <col:10> 'int' lvalue Var 0x242d94e5b18 'iplen1' 'int'
|   | `-GotoStmt 0x242d94df628 <line:1003:9, col:14> 'err' 0x242d94df5d8
|   |-BinaryOperator 0x242d94df7c0 <line:1005:5, col:41> 'int' '='
|   | |-DeclRefExpr 0x242d94df658 <col:5> 'int' lvalue Var 0x242d94e5b98 'iplen2' 'int'
|   | `-CallExpr 0x242d94df778 <col:14, col:41> 'int'
|   |   |-ImplicitCastExpr 0x242d94df760 <col:14> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x242d94df690 <col:14> 'int ()' Function 0x242d94e4558 'a2i_ipadd' 'int ()'
|   |   |-BinaryOperator 0x242d94df720 <col:24, col:32> 'unsigned char *' '+'
|   |   | |-ImplicitCastExpr 0x242d94df6f0 <col:24> 'unsigned char *' <ArrayToPointerDecay>
|   |   | | `-DeclRefExpr 0x242d94df6b0 <col:24> 'unsigned char [32]' lvalue Var 0x242d94e58b0 'ipout' 'unsigned char [32]'
|   |   | `-ImplicitCastExpr 0x242d94df708 <col:32> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x242d94df6d0 <col:32> 'int' lvalue Var 0x242d94e5b18 'iplen1' 'int'
|   |   `-ImplicitCastExpr 0x242d94df7a8 <col:40> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x242d94df740 <col:40> 'char *' lvalue Var 0x242d94e5a68 'p' 'char *'
|   |-CallExpr 0x242d94df838 <line:1007:5, col:23> 'int'
|   | |-ImplicitCastExpr 0x242d94df820 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x242d94df7e0 <col:5> 'int ()' Function 0x242d94c6600 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x242d94df860 <col:18> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x242d94df800 <col:18> 'char *' lvalue Var 0x242d94e5948 'iptmp' 'char *'
|   |-BinaryOperator 0x242d94df938 <line:1008:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'char *' '='
|   | |-DeclRefExpr 0x242d94df878 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:1008:5> 'char *' lvalue Var 0x242d94e5948 'iptmp' 'char *'
|   | `-ImplicitCastExpr 0x242d94df920 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   |   `-ParenExpr 0x242d94df900 <col:17, col:27> 'void *'
|   |     `-CStyleCastExpr 0x242d94df8d8 <col:18, col:26> 'void *' <NullToPointer>
|   |       `-IntegerLiteral 0x242d94df898 <col:26> 'int' 0
|   |-IfStmt 0x242d94dfa90 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:1010:5, line:1011:14>
|   | |-BinaryOperator 0x242d94dfa58 <line:1010:9, col:37> 'int' '||'
|   | | |-UnaryOperator 0x242d94df990 <col:9, col:10> 'int' prefix '!' cannot overflow
|   | | | `-ImplicitCastExpr 0x242d94df978 <col:10> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x242d94df958 <col:10> 'int' lvalue Var 0x242d94e5b98 'iplen2' 'int'
|   | | `-ParenExpr 0x242d94dfa38 <col:20, col:37> 'int'
|   | |   `-BinaryOperator 0x242d94dfa18 <col:21, col:31> 'int' '!='
|   | |     |-ImplicitCastExpr 0x242d94df9e8 <col:21> 'int' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x242d94df9a8 <col:21> 'int' lvalue Var 0x242d94e5b18 'iplen1' 'int'
|   | |     `-ImplicitCastExpr 0x242d94dfa00 <col:31> 'int' <LValueToRValue>
|   | |       `-DeclRefExpr 0x242d94df9c8 <col:31> 'int' lvalue Var 0x242d94e5b98 'iplen2' 'int'
|   | `-GotoStmt 0x242d94dfa78 <line:1011:9, col:14> 'err' 0x242d94df5d8
|   |-IfStmt 0x242d94dfbb8 <line:1014:5, line:1015:14>
|   | |-OpaqueValueExpr 0x242d94dfba0 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x242d94dfb88 <col:9, col:14> 'err' 0x242d94df5d8
|   |-IfStmt 0x242d94dfcd0 <line:1016:5, line:1017:14>
|   | |-OpaqueValueExpr 0x242d94dfcb8 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x242d94dfca0 <col:9, col:14> 'err' 0x242d94df5d8
|   |-LabelStmt 0x242d94dfd80 <line:1021:2, line:1022:23> 'err'
|   | `-CallExpr 0x242d94dfd40 <col:5, col:23> 'int'
|   |   |-ImplicitCastExpr 0x242d94dfd28 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x242d94dfce8 <col:5> 'int ()' Function 0x242d94c6600 'OPENSSL_free' 'int ()'
|   |   `-ImplicitCastExpr 0x242d94dfd68 <col:18> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x242d94dfd08 <col:18> 'char *' lvalue Var 0x242d94e5948 'iptmp' 'char *'
|   `-ReturnStmt 0x242d94dfe58 <line:1024:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|     `-ImplicitCastExpr 0x242d94dfe40 <col:17, col:27> 'int *' <NullToPointer>
|       `-ParenExpr 0x242d94dfe20 <col:17, col:27> 'void *'
|         `-CStyleCastExpr 0x242d94dfdf8 <col:18, col:26> 'void *' <NullToPointer>
|           `-IntegerLiteral 0x242d94dfdb8 <col:26> 'int' 0
|-FunctionDecl 0x242d94e5ca8 <.//openssl//file_jk/before\crypto\x509v3\v3_utl.c:991:9> col:9 implicit used strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x242d94e5d48 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x242d94e5db0 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x242d94e0078 prev 0x242d94e4558 <line:1027:1, line:1040:1> line:1027:5 used a2i_ipadd 'int (unsigned char *, const char *)'
| |-ParmVarDecl 0x242d94dff28 <col:15, col:30> col:30 used ipout 'unsigned char *'
| |-ParmVarDecl 0x242d94dffa8 <col:37, col:49> col:49 used ipasc 'const char *'
| `-CompoundStmt 0x242d94e65f8 <line:1028:1, line:1040:1>
|   `-IfStmt 0x242d94e65d0 <line:1031:5, line:1039:5> has_else
|     |-CallExpr 0x242d94e01b0 <line:1031:9, col:26> 'char *'
|     | |-ImplicitCastExpr 0x242d94e0198 <col:9> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|     | | `-DeclRefExpr 0x242d94e0128 <col:9> 'char *(const char *, int)' Function 0x242d94e5ca8 'strchr' 'char *(const char *, int)'
|     | |-ImplicitCastExpr 0x242d94e01e0 <col:16> 'const char *' <LValueToRValue>
|     | | `-DeclRefExpr 0x242d94e0148 <col:16> 'const char *' lvalue ParmVar 0x242d94dffa8 'ipasc' 'const char *'
|     | `-CharacterLiteral 0x242d94e0168 <col:23> 'int' 58
|     |-CompoundStmt 0x242d94e03a0 <col:29, line:1035:5>
|     | |-IfStmt 0x242d94e0350 <line:1032:9, line:1033:20>
|     | | |-UnaryOperator 0x242d94e0300 <line:1032:13, col:40> 'int' prefix '!' cannot overflow
|     | | | `-CallExpr 0x242d94e02a0 <col:14, col:40> 'int'
|     | | |   |-ImplicitCastExpr 0x242d94e0288 <col:14> 'int (*)(unsigned char *, const char *)' <FunctionToPointerDecay>
|     | | |   | `-DeclRefExpr 0x242d94e01f8 <col:14> 'int (unsigned char *, const char *)' Function 0x242d94bf6f0 'ipv6_from_asc' 'int (unsigned char *, const char *)'
|     | | |   |-ImplicitCastExpr 0x242d94e02d0 <col:28> 'unsigned char *' <LValueToRValue>
|     | | |   | `-DeclRefExpr 0x242d94e0218 <col:28> 'unsigned char *' lvalue ParmVar 0x242d94dff28 'ipout' 'unsigned char *'
|     | | |   `-ImplicitCastExpr 0x242d94e02e8 <col:35> 'const char *' <LValueToRValue>
|     | | |     `-DeclRefExpr 0x242d94e0238 <col:35> 'const char *' lvalue ParmVar 0x242d94dffa8 'ipasc' 'const char *'
|     | | `-ReturnStmt 0x242d94e0340 <line:1033:13, col:20>
|     | |   `-IntegerLiteral 0x242d94e0318 <col:20> 'int' 0
|     | `-ReturnStmt 0x242d94e0390 <line:1034:9, col:16>
|     |   `-IntegerLiteral 0x242d94e0368 <col:16> 'int' 16
|     `-CompoundStmt 0x242d94e65b0 <line:1035:12, line:1039:5>
|       |-IfStmt 0x242d94e6560 <line:1036:9, line:1037:20>
|       | |-UnaryOperator 0x242d94e6510 <line:1036:13, col:40> 'int' prefix '!' cannot overflow
|       | | `-CallExpr 0x242d94e64b0 <col:14, col:40> 'int'
|       | |   |-ImplicitCastExpr 0x242d94e0420 <col:14> 'int (*)(unsigned char *, const char *)' <FunctionToPointerDecay>
|       | |   | `-DeclRefExpr 0x242d94e03c0 <col:14> 'int (unsigned char *, const char *)' Function 0x242d94bf4c0 'ipv4_from_asc' 'int (unsigned char *, const char *)'
|       | |   |-ImplicitCastExpr 0x242d94e64e0 <col:28> 'unsigned char *' <LValueToRValue>
|       | |   | `-DeclRefExpr 0x242d94e03e0 <col:28> 'unsigned char *' lvalue ParmVar 0x242d94dff28 'ipout' 'unsigned char *'
|       | |   `-ImplicitCastExpr 0x242d94e64f8 <col:35> 'const char *' <LValueToRValue>
|       | |     `-DeclRefExpr 0x242d94e0400 <col:35> 'const char *' lvalue ParmVar 0x242d94dffa8 'ipasc' 'const char *'
|       | `-ReturnStmt 0x242d94e6550 <line:1037:13, col:20>
|       |   `-IntegerLiteral 0x242d94e6528 <col:20> 'int' 0
|       `-ReturnStmt 0x242d94e65a0 <line:1038:9, col:16>
|         `-IntegerLiteral 0x242d94e6578 <col:16> 'int' 4
|-FunctionDecl 0x242d94e6778 prev 0x242d94bf4c0 <line:1042:1, line:1055:1> line:1042:12 used ipv4_from_asc 'int (unsigned char *, const char *)' static
| |-ParmVarDecl 0x242d94e6628 <col:26, col:41> col:41 used v4 'unsigned char *'
| |-ParmVarDecl 0x242d94e66a8 <col:45, col:57> col:57 used in 'const char *'
| `-CompoundStmt 0x242d94e17f8 <line:1043:1, line:1055:1>
|   |-DeclStmt 0x242d94e6a50 <line:1044:5, col:23>
|   | |-VarDecl 0x242d94e6840 <col:5, col:9> col:9 used a0 'int'
|   | |-VarDecl 0x242d94e68c0 <col:5, col:13> col:13 used a1 'int'
|   | |-VarDecl 0x242d94e6940 <col:5, col:17> col:17 used a2 'int'
|   | `-VarDecl 0x242d94e69c0 <col:5, col:21> col:21 used a3 'int'
|   |-IfStmt 0x242d94e6e08 <line:1045:5, line:1046:16>
|   | |-BinaryOperator 0x242d94e6db0 <line:1045:9, col:58> 'int' '!='
|   | | |-CallExpr 0x242d94e6cf0 <col:9, col:53> 'int'
|   | | | |-ImplicitCastExpr 0x242d94e6cd8 <col:9> 'int (*)(const char *restrict, const char *restrict, ...)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x242d94e6a68 <col:9> 'int (const char *restrict, const char *restrict, ...)' Function 0x242d946e728 'sscanf' 'int (const char *restrict, const char *restrict, ...)'
|   | | | |-ImplicitCastExpr 0x242d94e6d40 <col:16> 'const char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x242d94e6a88 <col:16> 'const char *' lvalue ParmVar 0x242d94e66a8 'in' 'const char *'
|   | | | |-ImplicitCastExpr 0x242d94e6d70 <col:20> 'const char *' <NoOp>
|   | | | | `-ImplicitCastExpr 0x242d94e6d58 <col:20> 'char *' <ArrayToPointerDecay>
|   | | | |   `-StringLiteral 0x242d94e6ae8 <col:20> 'char [12]' lvalue "%d.%d.%d.%d"
|   | | | |-UnaryOperator 0x242d94e6b48 <col:35, col:36> 'int *' prefix '&' cannot overflow
|   | | | | `-DeclRefExpr 0x242d94e6b10 <col:36> 'int' lvalue Var 0x242d94e6840 'a0' 'int'
|   | | | |-UnaryOperator 0x242d94e6b98 <col:40, col:41> 'int *' prefix '&' cannot overflow
|   | | | | `-DeclRefExpr 0x242d94e6b60 <col:41> 'int' lvalue Var 0x242d94e68c0 'a1' 'int'
|   | | | |-UnaryOperator 0x242d94e6be8 <col:45, col:46> 'int *' prefix '&' cannot overflow
|   | | | | `-DeclRefExpr 0x242d94e6bb0 <col:46> 'int' lvalue Var 0x242d94e6940 'a2' 'int'
|   | | | `-UnaryOperator 0x242d94e6c38 <col:50, col:51> 'int *' prefix '&' cannot overflow
|   | | |   `-DeclRefExpr 0x242d94e6c00 <col:51> 'int' lvalue Var 0x242d94e69c0 'a3' 'int'
|   | | `-IntegerLiteral 0x242d94e6d88 <col:58> 'int' 4
|   | `-ReturnStmt 0x242d94e6df8 <line:1046:9, col:16>
|   |   `-IntegerLiteral 0x242d94e6dd0 <col:16> 'int' 0
|   |-IfStmt 0x242d94e7438 <line:1047:5, line:1049:16>
|   | |-BinaryOperator 0x242d94e73e0 <line:1047:9, line:1048:59> 'int' '||'
|   | | |-BinaryOperator 0x242d94e7320 <line:1047:9, line:1048:45> 'int' '||'
|   | | | |-BinaryOperator 0x242d94e7260 <line:1047:9, line:1048:33> 'int' '||'
|   | | | | |-BinaryOperator 0x242d94e71a0 <line:1047:9, line:1048:19> 'int' '||'
|   | | | | | |-BinaryOperator 0x242d94e70e0 <line:1047:9, col:56> 'int' '||'
|   | | | | | | |-BinaryOperator 0x242d94e7020 <col:9, col:42> 'int' '||'
|   | | | | | | | |-BinaryOperator 0x242d94e6f60 <col:9, col:30> 'int' '||'
|   | | | | | | | | |-ParenExpr 0x242d94e6ea0 <col:9, col:16> 'int'
|   | | | | | | | | | `-BinaryOperator 0x242d94e6e80 <col:10, col:15> 'int' '<'
|   | | | | | | | | |   |-ImplicitCastExpr 0x242d94e6e68 <col:10> 'int' <LValueToRValue>
|   | | | | | | | | |   | `-DeclRefExpr 0x242d94e6e20 <col:10> 'int' lvalue Var 0x242d94e6840 'a0' 'int'
|   | | | | | | | | |   `-IntegerLiteral 0x242d94e6e40 <col:15> 'int' 0
|   | | | | | | | | `-ParenExpr 0x242d94e6f40 <col:21, col:30> 'int'
|   | | | | | | | |   `-BinaryOperator 0x242d94e6f20 <col:22, col:27> 'int' '>'
|   | | | | | | | |     |-ImplicitCastExpr 0x242d94e6f08 <col:22> 'int' <LValueToRValue>
|   | | | | | | | |     | `-DeclRefExpr 0x242d94e6ec0 <col:22> 'int' lvalue Var 0x242d94e6840 'a0' 'int'
|   | | | | | | | |     `-IntegerLiteral 0x242d94e6ee0 <col:27> 'int' 255
|   | | | | | | | `-ParenExpr 0x242d94e7000 <col:35, col:42> 'int'
|   | | | | | | |   `-BinaryOperator 0x242d94e6fe0 <col:36, col:41> 'int' '<'
|   | | | | | | |     |-ImplicitCastExpr 0x242d94e6fc8 <col:36> 'int' <LValueToRValue>
|   | | | | | | |     | `-DeclRefExpr 0x242d94e6f80 <col:36> 'int' lvalue Var 0x242d94e68c0 'a1' 'int'
|   | | | | | | |     `-IntegerLiteral 0x242d94e6fa0 <col:41> 'int' 0
|   | | | | | | `-ParenExpr 0x242d94e70c0 <col:47, col:56> 'int'
|   | | | | | |   `-BinaryOperator 0x242d94e70a0 <col:48, col:53> 'int' '>'
|   | | | | | |     |-ImplicitCastExpr 0x242d94e7088 <col:48> 'int' <LValueToRValue>
|   | | | | | |     | `-DeclRefExpr 0x242d94e7040 <col:48> 'int' lvalue Var 0x242d94e68c0 'a1' 'int'
|   | | | | | |     `-IntegerLiteral 0x242d94e7060 <col:53> 'int' 255
|   | | | | | `-ParenExpr 0x242d94e7180 <line:1048:12, col:19> 'int'
|   | | | | |   `-BinaryOperator 0x242d94e7160 <col:13, col:18> 'int' '<'
|   | | | | |     |-ImplicitCastExpr 0x242d94e7148 <col:13> 'int' <LValueToRValue>
|   | | | | |     | `-DeclRefExpr 0x242d94e7100 <col:13> 'int' lvalue Var 0x242d94e6940 'a2' 'int'
|   | | | | |     `-IntegerLiteral 0x242d94e7120 <col:18> 'int' 0
|   | | | | `-ParenExpr 0x242d94e7240 <col:24, col:33> 'int'
|   | | | |   `-BinaryOperator 0x242d94e7220 <col:25, col:30> 'int' '>'
|   | | | |     |-ImplicitCastExpr 0x242d94e7208 <col:25> 'int' <LValueToRValue>
|   | | | |     | `-DeclRefExpr 0x242d94e71c0 <col:25> 'int' lvalue Var 0x242d94e6940 'a2' 'int'
|   | | | |     `-IntegerLiteral 0x242d94e71e0 <col:30> 'int' 255
|   | | | `-ParenExpr 0x242d94e7300 <col:38, col:45> 'int'
|   | | |   `-BinaryOperator 0x242d94e72e0 <col:39, col:44> 'int' '<'
|   | | |     |-ImplicitCastExpr 0x242d94e72c8 <col:39> 'int' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x242d94e7280 <col:39> 'int' lvalue Var 0x242d94e69c0 'a3' 'int'
|   | | |     `-IntegerLiteral 0x242d94e72a0 <col:44> 'int' 0
|   | | `-ParenExpr 0x242d94e73c0 <col:50, col:59> 'int'
|   | |   `-BinaryOperator 0x242d94e73a0 <col:51, col:56> 'int' '>'
|   | |     |-ImplicitCastExpr 0x242d94e7388 <col:51> 'int' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x242d94e7340 <col:51> 'int' lvalue Var 0x242d94e69c0 'a3' 'int'
|   | |     `-IntegerLiteral 0x242d94e7360 <col:56> 'int' 255
|   | `-ReturnStmt 0x242d94e7428 <line:1049:9, col:16>
|   |   `-IntegerLiteral 0x242d94e7400 <col:16> 'int' 0
|   |-BinaryOperator 0x242d94e14d0 <line:1050:5, col:13> 'unsigned char' '='
|   | |-ArraySubscriptExpr 0x242d94e1460 <col:5, col:9> 'unsigned char' lvalue
|   | | |-ImplicitCastExpr 0x242d94e7498 <col:5> 'unsigned char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x242d94e7450 <col:5> 'unsigned char *' lvalue ParmVar 0x242d94e6628 'v4' 'unsigned char *'
|   | | `-IntegerLiteral 0x242d94e7470 <col:8> 'int' 0
|   | `-ImplicitCastExpr 0x242d94e14b8 <col:13> 'unsigned char' <IntegralCast>
|   |   `-ImplicitCastExpr 0x242d94e14a0 <col:13> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x242d94e1480 <col:13> 'int' lvalue Var 0x242d94e6840 'a0' 'int'
|   |-BinaryOperator 0x242d94e15c0 <line:1051:5, col:13> 'unsigned char' '='
|   | |-ArraySubscriptExpr 0x242d94e1550 <col:5, col:9> 'unsigned char' lvalue
|   | | |-ImplicitCastExpr 0x242d94e1538 <col:5> 'unsigned char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x242d94e14f0 <col:5> 'unsigned char *' lvalue ParmVar 0x242d94e6628 'v4' 'unsigned char *'
|   | | `-IntegerLiteral 0x242d94e1510 <col:8> 'int' 1
|   | `-ImplicitCastExpr 0x242d94e15a8 <col:13> 'unsigned char' <IntegralCast>
|   |   `-ImplicitCastExpr 0x242d94e1590 <col:13> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x242d94e1570 <col:13> 'int' lvalue Var 0x242d94e68c0 'a1' 'int'
|   |-BinaryOperator 0x242d94e16b0 <line:1052:5, col:13> 'unsigned char' '='
|   | |-ArraySubscriptExpr 0x242d94e1640 <col:5, col:9> 'unsigned char' lvalue
|   | | |-ImplicitCastExpr 0x242d94e1628 <col:5> 'unsigned char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x242d94e15e0 <col:5> 'unsigned char *' lvalue ParmVar 0x242d94e6628 'v4' 'unsigned char *'
|   | | `-IntegerLiteral 0x242d94e1600 <col:8> 'int' 2
|   | `-ImplicitCastExpr 0x242d94e1698 <col:13> 'unsigned char' <IntegralCast>
|   |   `-ImplicitCastExpr 0x242d94e1680 <col:13> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x242d94e1660 <col:13> 'int' lvalue Var 0x242d94e6940 'a2' 'int'
|   |-BinaryOperator 0x242d94e17a0 <line:1053:5, col:13> 'unsigned char' '='
|   | |-ArraySubscriptExpr 0x242d94e1730 <col:5, col:9> 'unsigned char' lvalue
|   | | |-ImplicitCastExpr 0x242d94e1718 <col:5> 'unsigned char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x242d94e16d0 <col:5> 'unsigned char *' lvalue ParmVar 0x242d94e6628 'v4' 'unsigned char *'
|   | | `-IntegerLiteral 0x242d94e16f0 <col:8> 'int' 3
|   | `-ImplicitCastExpr 0x242d94e1788 <col:13> 'unsigned char' <IntegralCast>
|   |   `-ImplicitCastExpr 0x242d94e1770 <col:13> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x242d94e1750 <col:13> 'int' lvalue Var 0x242d94e69c0 'a3' 'int'
|   `-ReturnStmt 0x242d94e17e8 <line:1054:5, col:12>
|     `-IntegerLiteral 0x242d94e17c0 <col:12> 'int' 1
|-RecordDecl 0x242d94e1848 <line:1057:9, line:1066:1> line:1057:9 struct definition
| |-FieldDecl 0x242d94e1968 <line:1059:5, col:25> col:19 referenced tmp 'unsigned char [16]'
| |-FieldDecl 0x242d94e19d8 <line:1061:5, col:9> col:9 referenced total 'int'
| |-FieldDecl 0x242d94e1a48 <line:1063:5, col:9> col:9 referenced zero_pos 'int'
| `-FieldDecl 0x242d94e1ab8 <line:1065:5, col:9> col:9 referenced zero_cnt 'int'
|-TypedefDecl 0x242d94e1b68 <line:1057:1, line:1066:3> col:3 referenced IPV6_STAT 'struct IPV6_STAT':'IPV6_STAT'
| `-ElaboratedType 0x242d94e1b10 'struct IPV6_STAT' sugar
|   `-RecordType 0x242d94e18e0 'IPV6_STAT'
|     `-Record 0x242d94e1848 ''
|-FunctionDecl 0x242d94e1d40 prev 0x242d94bf6f0 <line:1068:1, line:1130:1> line:1068:12 used ipv6_from_asc 'int (unsigned char *, const char *)' static
| |-ParmVarDecl 0x242d94e1bf0 <col:26, col:41> col:41 used v6 'unsigned char *'
| |-ParmVarDecl 0x242d94e1c70 <col:45, col:57> col:57 used in 'const char *'
| `-CompoundStmt 0x242d94e1170 <line:1069:1, line:1130:1>
|   |-DeclStmt 0x242d94e1e88 <line:1070:5, col:21>
|   | `-VarDecl 0x242d94e1e20 <col:5, col:15> col:15 used v6stat 'IPV6_STAT':'IPV6_STAT'
|   |-BinaryOperator 0x242d94e1f30 <line:1071:5, col:20> 'int' '='
|   | |-MemberExpr 0x242d94e1ed8 <col:5, col:12> 'int' lvalue .total 0x242d94e19d8
|   | | `-DeclRefExpr 0x242d94e1ea0 <col:5> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x242d94e1e20 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   | `-IntegerLiteral 0x242d94e1f08 <col:20> 'int' 0
|   |-BinaryOperator 0x242d94e2048 <line:1072:5, col:24> 'int' '='
|   | |-MemberExpr 0x242d94e1fd8 <col:5, col:12> 'int' lvalue .zero_pos 0x242d94e1a48
|   | | `-DeclRefExpr 0x242d94e1fb8 <col:5> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x242d94e1e20 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   | `-UnaryOperator 0x242d94e2030 <col:23, col:24> 'int' prefix '-'
|   |   `-IntegerLiteral 0x242d94e2008 <col:24> 'int' 1
|   |-BinaryOperator 0x242d94e20e0 <line:1073:5, col:23> 'int' '='
|   | |-MemberExpr 0x242d94e2088 <col:5, col:12> 'int' lvalue .zero_cnt 0x242d94e1ab8
|   | | `-DeclRefExpr 0x242d94e2068 <col:5> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x242d94e1e20 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   | `-IntegerLiteral 0x242d94e20b8 <col:23> 'int' 0
|   |-IfStmt 0x242d94e2430 <line:1079:5, line:1080:16>
|   | |-UnaryOperator 0x242d94e23e0 <line:1079:9, col:54> 'int' prefix '!' cannot overflow
|   | | `-CallExpr 0x242d94e2338 <col:10, col:54> 'int'
|   | |   |-ImplicitCastExpr 0x242d94e2320 <col:10> 'int (*)()' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x242d94e21f0 <col:10> 'int ()' Function 0x242d94e2128 'CONF_parse_list' 'int ()'
|   | |   |-ImplicitCastExpr 0x242d94e2380 <col:26> 'const char *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x242d94e2210 <col:26> 'const char *' lvalue ParmVar 0x242d94e1c70 'in' 'const char *'
|   | |   |-CharacterLiteral 0x242d94e2230 <col:30> 'int' 58
|   | |   |-IntegerLiteral 0x242d94e2248 <col:35> 'int' 0
|   | |   |-ImplicitCastExpr 0x242d94e23c8 <col:38> 'int (*)(const char *, int, void *)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x242d94e2270 <col:38> 'int (const char *, int, void *)' Function 0x242d94bfa00 'ipv6_cb' 'int (const char *, int, void *)'
|   | |   `-UnaryOperator 0x242d94e2308 <col:47, col:48> 'IPV6_STAT *' prefix '&' cannot overflow
|   | |     `-DeclRefExpr 0x242d94e2290 <col:48> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x242d94e1e20 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   | `-ReturnStmt 0x242d94e2420 <line:1080:9, col:16>
|   |   `-IntegerLiteral 0x242d94e23f8 <col:16> 'int' 0
|   |-IfStmt 0x242d94e8068 <line:1084:5, line:1112:5> has_else
|   | |-BinaryOperator 0x242d94e7568 <line:1084:9, col:29> 'int' '=='
|   | | |-ImplicitCastExpr 0x242d94e7550 <col:9, col:16> 'int' <LValueToRValue>
|   | | | `-MemberExpr 0x242d94e74e0 <col:9, col:16> 'int' lvalue .zero_pos 0x242d94e1a48
|   | | |   `-DeclRefExpr 0x242d94e74c0 <col:9> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x242d94e1e20 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   | | `-UnaryOperator 0x242d94e7538 <col:28, col:29> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x242d94e7510 <col:29> 'int' 1
|   | |-CompoundStmt 0x242d94e7688 <col:32, line:1088:5>
|   | | `-IfStmt 0x242d94e7670 <line:1086:9, line:1087:20>
|   | |   |-BinaryOperator 0x242d94e7618 <line:1086:13, col:29> 'int' '!='
|   | |   | |-ImplicitCastExpr 0x242d94e7600 <col:13, col:20> 'int' <LValueToRValue>
|   | |   | | `-MemberExpr 0x242d94e75a8 <col:13, col:20> 'int' lvalue .total 0x242d94e19d8
|   | |   | |   `-DeclRefExpr 0x242d94e7588 <col:13> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x242d94e1e20 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   | |   | `-IntegerLiteral 0x242d94e75d8 <col:29> 'int' 16
|   | |   `-ReturnStmt 0x242d94e7660 <line:1087:13, col:20>
|   | |     `-IntegerLiteral 0x242d94e7638 <col:20> 'int' 0
|   | `-CompoundStmt 0x242d94e8048 <line:1088:12, line:1112:5>
|   |   |-IfStmt 0x242d94e7788 <line:1090:9, line:1091:20>
|   |   | |-BinaryOperator 0x242d94e7730 <line:1090:13, col:29> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x242d94e7718 <col:13, col:20> 'int' <LValueToRValue>
|   |   | | | `-MemberExpr 0x242d94e76c0 <col:13, col:20> 'int' lvalue .total 0x242d94e19d8
|   |   | | |   `-DeclRefExpr 0x242d94e76a0 <col:13> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x242d94e1e20 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   |   | | `-IntegerLiteral 0x242d94e76f0 <col:29> 'int' 16
|   |   | `-ReturnStmt 0x242d94e7778 <line:1091:13, col:20>
|   |   |   `-IntegerLiteral 0x242d94e7750 <col:20> 'int' 0
|   |   `-IfStmt 0x242d94e8020 <line:1093:9, line:1111:9> has_else
|   |     |-BinaryOperator 0x242d94e7830 <line:1093:13, col:31> 'int' '>'
|   |     | |-ImplicitCastExpr 0x242d94e7818 <col:13, col:20> 'int' <LValueToRValue>
|   |     | | `-MemberExpr 0x242d94e77c0 <col:13, col:20> 'int' lvalue .zero_cnt 0x242d94e1ab8
|   |     | |   `-DeclRefExpr 0x242d94e77a0 <col:13> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x242d94e1e20 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   |     | `-IntegerLiteral 0x242d94e77f0 <col:31> 'int' 3
|   |     |-ReturnStmt 0x242d94e7878 <line:1094:13, col:20>
|   |     | `-IntegerLiteral 0x242d94e7850 <col:20> 'int' 0
|   |     `-IfStmt 0x242d94e7ff8 <line:1096:14, line:1111:9> has_else
|   |       |-BinaryOperator 0x242d94e7918 <line:1096:18, col:37> 'int' '=='
|   |       | |-ImplicitCastExpr 0x242d94e7900 <col:18, col:25> 'int' <LValueToRValue>
|   |       | | `-MemberExpr 0x242d94e78a8 <col:18, col:25> 'int' lvalue .zero_cnt 0x242d94e1ab8
|   |       | |   `-DeclRefExpr 0x242d94e7888 <col:18> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x242d94e1e20 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   |       | `-IntegerLiteral 0x242d94e78d8 <col:37> 'int' 3
|   |       |-CompoundStmt 0x242d94e7a38 <col:40, line:1099:9>
|   |       | `-IfStmt 0x242d94e7a20 <line:1097:13, line:1098:24>
|   |       |   |-BinaryOperator 0x242d94e79c8 <line:1097:17, col:32> 'int' '>'
|   |       |   | |-ImplicitCastExpr 0x242d94e79b0 <col:17, col:24> 'int' <LValueToRValue>
|   |       |   | | `-MemberExpr 0x242d94e7958 <col:17, col:24> 'int' lvalue .total 0x242d94e19d8
|   |       |   | |   `-DeclRefExpr 0x242d94e7938 <col:17> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x242d94e1e20 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   |       |   | `-IntegerLiteral 0x242d94e7988 <col:32> 'int' 0
|   |       |   `-ReturnStmt 0x242d94e7a10 <line:1098:17, col:24>
|   |       |     `-IntegerLiteral 0x242d94e79e8 <col:24> 'int' 0
|   |       `-IfStmt 0x242d94e7fd0 <line:1101:14, line:1111:9> has_else
|   |         |-BinaryOperator 0x242d94e7ae0 <line:1101:18, col:37> 'int' '=='
|   |         | |-ImplicitCastExpr 0x242d94e7ac8 <col:18, col:25> 'int' <LValueToRValue>
|   |         | | `-MemberExpr 0x242d94e7a70 <col:18, col:25> 'int' lvalue .zero_cnt 0x242d94e1ab8
|   |         | |   `-DeclRefExpr 0x242d94e7a50 <col:18> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x242d94e1e20 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   |         | `-IntegerLiteral 0x242d94e7aa0 <col:37> 'int' 2
|   |         |-CompoundStmt 0x242d94e7d50 <col:40, line:1105:9>
|   |         | `-IfStmt 0x242d94e7d38 <line:1102:13, line:1104:24>
|   |         |   |-BinaryOperator 0x242d94e7ce0 <line:1102:17, line:1103:52> 'int' '&&'
|   |         |   | |-ParenExpr 0x242d94e7bb0 <line:1102:17, col:38> 'int'
|   |         |   | | `-BinaryOperator 0x242d94e7b90 <col:18, col:37> 'int' '!='
|   |         |   | |   |-ImplicitCastExpr 0x242d94e7b78 <col:18, col:25> 'int' <LValueToRValue>
|   |         |   | |   | `-MemberExpr 0x242d94e7b20 <col:18, col:25> 'int' lvalue .zero_pos 0x242d94e1a48
|   |         |   | |   |   `-DeclRefExpr 0x242d94e7b00 <col:18> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x242d94e1e20 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   |         |   | |   `-IntegerLiteral 0x242d94e7b50 <col:37> 'int' 0
|   |         |   | `-ParenExpr 0x242d94e7cc0 <line:1103:20, col:52> 'int'
|   |         |   |   `-BinaryOperator 0x242d94e7ca0 <col:21, col:47> 'int' '!='
|   |         |   |     |-ImplicitCastExpr 0x242d94e7c70 <col:21, col:28> 'int' <LValueToRValue>
|   |         |   |     | `-MemberExpr 0x242d94e7bf0 <col:21, col:28> 'int' lvalue .zero_pos 0x242d94e1a48
|   |         |   |     |   `-DeclRefExpr 0x242d94e7bd0 <col:21> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x242d94e1e20 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   |         |   |     `-ImplicitCastExpr 0x242d94e7c88 <col:40, col:47> 'int' <LValueToRValue>
|   |         |   |       `-MemberExpr 0x242d94e7c40 <col:40, col:47> 'int' lvalue .total 0x242d94e19d8
|   |         |   |         `-DeclRefExpr 0x242d94e7c20 <col:40> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x242d94e1e20 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   |         |   `-ReturnStmt 0x242d94e7d28 <line:1104:17, col:24>
|   |         |     `-IntegerLiteral 0x242d94e7d00 <col:24> 'int' 0
|   |         `-CompoundStmt 0x242d94e7fb8 <line:1107:9, line:1111:9>
|   |           `-IfStmt 0x242d94e7fa0 <line:1108:13, line:1110:24>
|   |             |-BinaryOperator 0x242d94e7f48 <line:1108:17, line:1109:52> 'int' '||'
|   |             | |-ParenExpr 0x242d94e7e18 <line:1108:17, col:38> 'int'
|   |             | | `-BinaryOperator 0x242d94e7df8 <col:18, col:37> 'int' '=='
|   |             | |   |-ImplicitCastExpr 0x242d94e7de0 <col:18, col:25> 'int' <LValueToRValue>
|   |             | |   | `-MemberExpr 0x242d94e7d88 <col:18, col:25> 'int' lvalue .zero_pos 0x242d94e1a48
|   |             | |   |   `-DeclRefExpr 0x242d94e7d68 <col:18> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x242d94e1e20 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   |             | |   `-IntegerLiteral 0x242d94e7db8 <col:37> 'int' 0
|   |             | `-ParenExpr 0x242d94e7f28 <line:1109:20, col:52> 'int'
|   |             |   `-BinaryOperator 0x242d94e7f08 <col:21, col:47> 'int' '=='
|   |             |     |-ImplicitCastExpr 0x242d94e7ed8 <col:21, col:28> 'int' <LValueToRValue>
|   |             |     | `-MemberExpr 0x242d94e7e58 <col:21, col:28> 'int' lvalue .zero_pos 0x242d94e1a48
|   |             |     |   `-DeclRefExpr 0x242d94e7e38 <col:21> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x242d94e1e20 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   |             |     `-ImplicitCastExpr 0x242d94e7ef0 <col:40, col:47> 'int' <LValueToRValue>
|   |             |       `-MemberExpr 0x242d94e7ea8 <col:40, col:47> 'int' lvalue .total 0x242d94e19d8
|   |             |         `-DeclRefExpr 0x242d94e7e88 <col:40> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x242d94e1e20 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   |             `-ReturnStmt 0x242d94e7f90 <line:1110:17, col:24>
|   |               `-IntegerLiteral 0x242d94e7f68 <col:24> 'int' 0
|   |-IfStmt 0x242d94e1110 <line:1116:5, line:1127:34> has_else
|   | |-BinaryOperator 0x242d94e8120 <line:1116:9, col:28> 'int' '>='
|   | | |-ImplicitCastExpr 0x242d94e8108 <col:9, col:16> 'int' <LValueToRValue>
|   | | | `-MemberExpr 0x242d94e80b0 <col:9, col:16> 'int' lvalue .zero_pos 0x242d94e1a48
|   | | |   `-DeclRefExpr 0x242d94e8090 <col:9> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x242d94e1e20 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   | | `-IntegerLiteral 0x242d94e80e0 <col:28> 'int' 0
|   | |-CompoundStmt 0x242d94e0f38 <col:31, line:1126:5>
|   | | |-CallExpr 0x242d94e0490 <line:1118:9, col:47> 'void *'
|   | | | |-ImplicitCastExpr 0x242d94e0478 <col:9> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x242d94e8370 <col:9> 'void *(void *, const void *, unsigned long long)' Function 0x242d94e8180 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   | | | |-ImplicitCastExpr 0x242d94e04e0 <col:16> 'void *' <BitCast>
|   | | | | `-ImplicitCastExpr 0x242d94e04c8 <col:16> 'unsigned char *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x242d94e83a8 <col:16> 'unsigned char *' lvalue ParmVar 0x242d94e1bf0 'v6' 'unsigned char *'
|   | | | |-ImplicitCastExpr 0x242d94e0510 <col:20, col:27> 'const void *' <BitCast>
|   | | | | `-ImplicitCastExpr 0x242d94e04f8 <col:20, col:27> 'unsigned char *' <ArrayToPointerDecay>
|   | | | |   `-MemberExpr 0x242d94e83e8 <col:20, col:27> 'unsigned char [16]' lvalue .tmp 0x242d94e1968
|   | | | |     `-DeclRefExpr 0x242d94e83c8 <col:20> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x242d94e1e20 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   | | | `-ImplicitCastExpr 0x242d94e0540 <col:32, col:39> 'unsigned long long' <IntegralCast>
|   | | |   `-ImplicitCastExpr 0x242d94e0528 <col:32, col:39> 'int' <LValueToRValue>
|   | | |     `-MemberExpr 0x242d94e8438 <col:32, col:39> 'int' lvalue .zero_pos 0x242d94e1a48
|   | | |       `-DeclRefExpr 0x242d94e8418 <col:32> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x242d94e1e20 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   | | |-CallExpr 0x242d94e09a0 <line:1120:9, col:58> 'void *'
|   | | | |-ImplicitCastExpr 0x242d94e0988 <col:9> 'void *(*)(void *, int, unsigned long long)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x242d94e0790 <col:9> 'void *(void *, int, unsigned long long)' Function 0x242d94e05a0 'memset' 'void *(void *, int, unsigned long long)'
|   | | | |-ImplicitCastExpr 0x242d94e09d8 <col:16, col:28> 'void *' <BitCast>
|   | | | | `-BinaryOperator 0x242d94e0868 <col:16, col:28> 'unsigned char *' '+'
|   | | | |   |-ImplicitCastExpr 0x242d94e0838 <col:16> 'unsigned char *' <LValueToRValue>
|   | | | |   | `-DeclRefExpr 0x242d94e07c8 <col:16> 'unsigned char *' lvalue ParmVar 0x242d94e1bf0 'v6' 'unsigned char *'
|   | | | |   `-ImplicitCastExpr 0x242d94e0850 <col:21, col:28> 'int' <LValueToRValue>
|   | | | |     `-MemberExpr 0x242d94e0808 <col:21, col:28> 'int' lvalue .zero_pos 0x242d94e1a48
|   | | | |       `-DeclRefExpr 0x242d94e07e8 <col:21> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x242d94e1e20 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   | | | |-IntegerLiteral 0x242d94e0888 <col:38> 'int' 0
|   | | | `-ImplicitCastExpr 0x242d94e09f0 <col:41, col:53> 'unsigned long long' <IntegralCast>
|   | | |   `-BinaryOperator 0x242d94e0940 <col:41, col:53> 'int' '-'
|   | | |     |-IntegerLiteral 0x242d94e08b0 <col:41> 'int' 16
|   | | |     `-ImplicitCastExpr 0x242d94e0928 <col:46, col:53> 'int' <LValueToRValue>
|   | | |       `-MemberExpr 0x242d94e08f8 <col:46, col:53> 'int' lvalue .total 0x242d94e19d8
|   | | |         `-DeclRefExpr 0x242d94e08d8 <col:46> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x242d94e1e20 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   | | `-IfStmt 0x242d94e0f20 <line:1122:9, line:1125:50>
|   | |   |-BinaryOperator 0x242d94e0ad8 <line:1122:13, col:36> 'int' '!='
|   | |   | |-ImplicitCastExpr 0x242d94e0aa8 <col:13, col:20> 'int' <LValueToRValue>
|   | |   | | `-MemberExpr 0x242d94e0a28 <col:13, col:20> 'int' lvalue .total 0x242d94e19d8
|   | |   | |   `-DeclRefExpr 0x242d94e0a08 <col:13> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x242d94e1e20 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   | |   | `-ImplicitCastExpr 0x242d94e0ac0 <col:29, col:36> 'int' <LValueToRValue>
|   | |   |   `-MemberExpr 0x242d94e0a78 <col:29, col:36> 'int' lvalue .zero_pos 0x242d94e1a48
|   | |   |     `-DeclRefExpr 0x242d94e0a58 <col:29> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x242d94e1e20 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   | |   `-CallExpr 0x242d94e0ea0 <line:1123:13, line:1125:50> 'void *'
|   | |     |-ImplicitCastExpr 0x242d94e0e88 <line:1123:13> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   | |     | `-DeclRefExpr 0x242d94e0af8 <col:13> 'void *(void *, const void *, unsigned long long)' Function 0x242d94e8180 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   | |     |-ImplicitCastExpr 0x242d94e0ed8 <col:20, col:55> 'void *' <BitCast>
|   | |     | `-BinaryOperator 0x242d94e0c88 <col:20, col:55> 'unsigned char *' '-'
|   | |     |   |-BinaryOperator 0x242d94e0c00 <col:20, col:43> 'unsigned char *' '+'
|   | |     |   | |-BinaryOperator 0x242d94e0bb8 <col:20, col:32> 'unsigned char *' '+'
|   | |     |   | | |-ImplicitCastExpr 0x242d94e0b88 <col:20> 'unsigned char *' <LValueToRValue>
|   | |     |   | | | `-DeclRefExpr 0x242d94e0b18 <col:20> 'unsigned char *' lvalue ParmVar 0x242d94e1bf0 'v6' 'unsigned char *'
|   | |     |   | | `-ImplicitCastExpr 0x242d94e0ba0 <col:25, col:32> 'int' <LValueToRValue>
|   | |     |   | |   `-MemberExpr 0x242d94e0b58 <col:25, col:32> 'int' lvalue .zero_pos 0x242d94e1a48
|   | |     |   | |     `-DeclRefExpr 0x242d94e0b38 <col:25> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x242d94e1e20 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   | |     |   | `-IntegerLiteral 0x242d94e0bd8 <col:43> 'int' 16
|   | |     |   `-ImplicitCastExpr 0x242d94e0c70 <col:48, col:55> 'int' <LValueToRValue>
|   | |     |     `-MemberExpr 0x242d94e0c40 <col:48, col:55> 'int' lvalue .total 0x242d94e19d8
|   | |     |       `-DeclRefExpr 0x242d94e0c20 <col:48> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x242d94e1e20 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   | |     |-ImplicitCastExpr 0x242d94e0ef0 <line:1124:20, col:40> 'const void *' <BitCast>
|   | |     | `-BinaryOperator 0x242d94e0d78 <col:20, col:40> 'unsigned char *' '+'
|   | |     |   |-ImplicitCastExpr 0x242d94e0d48 <col:20, col:27> 'unsigned char *' <ArrayToPointerDecay>
|   | |     |   | `-MemberExpr 0x242d94e0cc8 <col:20, col:27> 'unsigned char [16]' lvalue .tmp 0x242d94e1968
|   | |     |   |   `-DeclRefExpr 0x242d94e0ca8 <col:20> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x242d94e1e20 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   | |     |   `-ImplicitCastExpr 0x242d94e0d60 <col:33, col:40> 'int' <LValueToRValue>
|   | |     |     `-MemberExpr 0x242d94e0d18 <col:33, col:40> 'int' lvalue .zero_pos 0x242d94e1a48
|   | |     |       `-DeclRefExpr 0x242d94e0cf8 <col:33> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x242d94e1e20 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   | |     `-ImplicitCastExpr 0x242d94e0f08 <line:1125:20, col:42> 'unsigned long long' <IntegralCast>
|   | |       `-BinaryOperator 0x242d94e0e68 <col:20, col:42> 'int' '-'
|   | |         |-ImplicitCastExpr 0x242d94e0e38 <col:20, col:27> 'int' <LValueToRValue>
|   | |         | `-MemberExpr 0x242d94e0db8 <col:20, col:27> 'int' lvalue .total 0x242d94e19d8
|   | |         |   `-DeclRefExpr 0x242d94e0d98 <col:20> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x242d94e1e20 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   | |         `-ImplicitCastExpr 0x242d94e0e50 <col:35, col:42> 'int' <LValueToRValue>
|   | |           `-MemberExpr 0x242d94e0e08 <col:35, col:42> 'int' lvalue .zero_pos 0x242d94e1a48
|   | |             `-DeclRefExpr 0x242d94e0de8 <col:35> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x242d94e1e20 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   | `-CallExpr 0x242d94e1060 <line:1127:9, col:34> 'void *'
|   |   |-ImplicitCastExpr 0x242d94e1048 <col:9> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x242d94e0f60 <col:9> 'void *(void *, const void *, unsigned long long)' Function 0x242d94e8180 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   |   |-ImplicitCastExpr 0x242d94e10b0 <col:16> 'void *' <BitCast>
|   |   | `-ImplicitCastExpr 0x242d94e1098 <col:16> 'unsigned char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x242d94e0f80 <col:16> 'unsigned char *' lvalue ParmVar 0x242d94e1bf0 'v6' 'unsigned char *'
|   |   |-ImplicitCastExpr 0x242d94e10e0 <col:20, col:27> 'const void *' <BitCast>
|   |   | `-ImplicitCastExpr 0x242d94e10c8 <col:20, col:27> 'unsigned char *' <ArrayToPointerDecay>
|   |   |   `-MemberExpr 0x242d94e0fc0 <col:20, col:27> 'unsigned char [16]' lvalue .tmp 0x242d94e1968
|   |   |     `-DeclRefExpr 0x242d94e0fa0 <col:20> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x242d94e1e20 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   |   `-ImplicitCastExpr 0x242d94e10f8 <col:32> 'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x242d94e0ff0 <col:32> 'int' 16
|   `-ReturnStmt 0x242d94e1160 <line:1129:5, col:12>
|     `-IntegerLiteral 0x242d94e1138 <col:12> 'int' 1
|-FunctionDecl 0x242d94e8180 <line:1118:9> col:9 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x242d94e8220 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x242d94e8288 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x242d94e82f0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x242d94e05a0 <line:1120:9> col:9 implicit used memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x242d94e0640 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x242d94e06a8 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x242d94e0710 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x242d94e84d0 prev 0x242d94bfa00 <line:1132:1, line:1165:1> line:1132:12 used ipv6_cb 'int (const char *, int, void *)' static
| |-ParmVarDecl 0x242d94e11d8 <col:20, col:32> col:32 used elem 'const char *'
| |-ParmVarDecl 0x242d94e1258 <col:38, col:42> col:42 used len 'int'
| |-ParmVarDecl 0x242d94e12d8 <col:47, col:53> col:53 used usr 'void *'
| `-CompoundStmt 0x242d94e9628 <line:1133:1, line:1165:1>
|   |-DeclStmt 0x242d94e8650 <line:1134:5, col:23>
|   | `-VarDecl 0x242d94e8598 <col:5, col:20> col:16 used s 'IPV6_STAT *' cinit
|   |   `-ImplicitCastExpr 0x242d94e8638 <col:20> 'IPV6_STAT *' <BitCast>
|   |     `-ImplicitCastExpr 0x242d94e8620 <col:20> 'void *' <LValueToRValue>
|   |       `-DeclRefExpr 0x242d94e8600 <col:20> 'void *' lvalue ParmVar 0x242d94e12d8 'usr' 'void *'
|   |-IfStmt 0x242d94e8780 <line:1136:5, line:1137:16>
|   | |-BinaryOperator 0x242d94e8728 <line:1136:9, col:21> 'int' '=='
|   | | |-ImplicitCastExpr 0x242d94e8710 <col:9, col:12> 'int' <LValueToRValue>
|   | | | `-MemberExpr 0x242d94e86b8 <col:9, col:12> 'int' lvalue ->total 0x242d94e19d8
|   | | |   `-ImplicitCastExpr 0x242d94e86a0 <col:9> 'IPV6_STAT *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x242d94e8668 <col:9> 'IPV6_STAT *' lvalue Var 0x242d94e8598 's' 'IPV6_STAT *'
|   | | `-IntegerLiteral 0x242d94e86e8 <col:21> 'int' 16
|   | `-ReturnStmt 0x242d94e8770 <line:1137:9, col:16>
|   |   `-IntegerLiteral 0x242d94e8748 <col:16> 'int' 0
|   |-IfStmt 0x242d94e95c8 <line:1138:5, line:1163:5> has_else
|   | |-BinaryOperator 0x242d94e87f8 <line:1138:9, col:16> 'int' '=='
|   | | |-ImplicitCastExpr 0x242d94e87e0 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x242d94e8798 <col:9> 'int' lvalue ParmVar 0x242d94e1258 'len' 'int'
|   | | `-IntegerLiteral 0x242d94e87b8 <col:16> 'int' 0
|   | |-CompoundStmt 0x242d94e8c18 <col:19, line:1146:5>
|   | | |-IfStmt 0x242d94e8b70 <line:1140:9, line:1144:20> has_else
|   | | | |-BinaryOperator 0x242d94e88d8 <line:1140:13, col:29> 'int' '=='
|   | | | | |-ImplicitCastExpr 0x242d94e88c0 <col:13, col:16> 'int' <LValueToRValue>
|   | | | | | `-MemberExpr 0x242d94e8850 <col:13, col:16> 'int' lvalue ->zero_pos 0x242d94e1a48
|   | | | | |   `-ImplicitCastExpr 0x242d94e8838 <col:13> 'IPV6_STAT *' <LValueToRValue>
|   | | | | |     `-DeclRefExpr 0x242d94e8818 <col:13> 'IPV6_STAT *' lvalue Var 0x242d94e8598 's' 'IPV6_STAT *'
|   | | | | `-UnaryOperator 0x242d94e88a8 <col:28, col:29> 'int' prefix '-'
|   | | | |   `-IntegerLiteral 0x242d94e8880 <col:29> 'int' 1
|   | | | |-BinaryOperator 0x242d94e89e0 <line:1141:13, col:30> 'int' '='
|   | | | | |-MemberExpr 0x242d94e8930 <col:13, col:16> 'int' lvalue ->zero_pos 0x242d94e1a48
|   | | | | | `-ImplicitCastExpr 0x242d94e8918 <col:13> 'IPV6_STAT *' <LValueToRValue>
|   | | | | |   `-DeclRefExpr 0x242d94e88f8 <col:13> 'IPV6_STAT *' lvalue Var 0x242d94e8598 's' 'IPV6_STAT *'
|   | | | | `-ImplicitCastExpr 0x242d94e89c8 <col:27, col:30> 'int' <LValueToRValue>
|   | | | |   `-MemberExpr 0x242d94e8998 <col:27, col:30> 'int' lvalue ->total 0x242d94e19d8
|   | | | |     `-ImplicitCastExpr 0x242d94e8980 <col:27> 'IPV6_STAT *' <LValueToRValue>
|   | | | |       `-DeclRefExpr 0x242d94e8960 <col:27> 'IPV6_STAT *' lvalue Var 0x242d94e8598 's' 'IPV6_STAT *'
|   | | | `-IfStmt 0x242d94e8b58 <line:1143:14, line:1144:20>
|   | | |   |-BinaryOperator 0x242d94e8b00 <line:1143:18, col:36> 'int' '!='
|   | | |   | |-ImplicitCastExpr 0x242d94e8ad0 <col:18, col:21> 'int' <LValueToRValue>
|   | | |   | | `-MemberExpr 0x242d94e8a38 <col:18, col:21> 'int' lvalue ->zero_pos 0x242d94e1a48
|   | | |   | |   `-ImplicitCastExpr 0x242d94e8a20 <col:18> 'IPV6_STAT *' <LValueToRValue>
|   | | |   | |     `-DeclRefExpr 0x242d94e8a00 <col:18> 'IPV6_STAT *' lvalue Var 0x242d94e8598 's' 'IPV6_STAT *'
|   | | |   | `-ImplicitCastExpr 0x242d94e8ae8 <col:33, col:36> 'int' <LValueToRValue>
|   | | |   |   `-MemberExpr 0x242d94e8aa0 <col:33, col:36> 'int' lvalue ->total 0x242d94e19d8
|   | | |   |     `-ImplicitCastExpr 0x242d94e8a88 <col:33> 'IPV6_STAT *' <LValueToRValue>
|   | | |   |       `-DeclRefExpr 0x242d94e8a68 <col:33> 'IPV6_STAT *' lvalue Var 0x242d94e8598 's' 'IPV6_STAT *'
|   | | |   `-ReturnStmt 0x242d94e8b48 <line:1144:13, col:20>
|   | | |     `-IntegerLiteral 0x242d94e8b20 <col:20> 'int' 0
|   | | `-UnaryOperator 0x242d94e8c00 <line:1145:9, col:20> 'int' postfix '++'
|   | |   `-MemberExpr 0x242d94e8bd0 <col:9, col:12> 'int' lvalue ->zero_cnt 0x242d94e1ab8
|   | |     `-ImplicitCastExpr 0x242d94e8bb8 <col:9> 'IPV6_STAT *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x242d94e8b98 <col:9> 'IPV6_STAT *' lvalue Var 0x242d94e8598 's' 'IPV6_STAT *'
|   | `-CompoundStmt 0x242d94e95b0 <line:1146:12, line:1163:5>
|   |   `-IfStmt 0x242d94e9588 <line:1148:9, line:1162:9> has_else
|   |     |-BinaryOperator 0x242d94e8c98 <line:1148:13, col:19> 'int' '>'
|   |     | |-ImplicitCastExpr 0x242d94e8c80 <col:13> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x242d94e8c38 <col:13> 'int' lvalue ParmVar 0x242d94e1258 'len' 'int'
|   |     | `-IntegerLiteral 0x242d94e8c58 <col:19> 'int' 4
|   |     |-CompoundStmt 0x242d94e91b0 <col:22, line:1158:9>
|   |     | |-IfStmt 0x242d94e8db8 <line:1150:13, line:1151:24>
|   |     | | |-BinaryOperator 0x242d94e8d60 <line:1150:17, col:28> 'int' '>'
|   |     | | | |-ImplicitCastExpr 0x242d94e8d48 <col:17, col:20> 'int' <LValueToRValue>
|   |     | | | | `-MemberExpr 0x242d94e8cf0 <col:17, col:20> 'int' lvalue ->total 0x242d94e19d8
|   |     | | | |   `-ImplicitCastExpr 0x242d94e8cd8 <col:17> 'IPV6_STAT *' <LValueToRValue>
|   |     | | | |     `-DeclRefExpr 0x242d94e8cb8 <col:17> 'IPV6_STAT *' lvalue Var 0x242d94e8598 's' 'IPV6_STAT *'
|   |     | | | `-IntegerLiteral 0x242d94e8d20 <col:28> 'int' 12
|   |     | | `-ReturnStmt 0x242d94e8da8 <line:1151:17, col:24>
|   |     | |   `-IntegerLiteral 0x242d94e8d80 <col:24> 'int' 0
|   |     | |-IfStmt 0x242d94e8eb0 <line:1153:13, line:1154:24>
|   |     | | |-ImplicitCastExpr 0x242d94e8e60 <line:1153:17, col:25> 'char' <LValueToRValue>
|   |     | | | `-ArraySubscriptExpr 0x242d94e8e40 <col:17, col:25> 'const char' lvalue
|   |     | | |   |-ImplicitCastExpr 0x242d94e8e10 <col:17> 'const char *' <LValueToRValue>
|   |     | | |   | `-DeclRefExpr 0x242d94e8dd0 <col:17> 'const char *' lvalue ParmVar 0x242d94e11d8 'elem' 'const char *'
|   |     | | |   `-ImplicitCastExpr 0x242d94e8e28 <col:22> 'int' <LValueToRValue>
|   |     | | |     `-DeclRefExpr 0x242d94e8df0 <col:22> 'int' lvalue ParmVar 0x242d94e1258 'len' 'int'
|   |     | | `-ReturnStmt 0x242d94e8ea0 <line:1154:17, col:24>
|   |     | |   `-IntegerLiteral 0x242d94e8e78 <col:24> 'int' 0
|   |     | |-IfStmt 0x242d94e90d8 <line:1155:13, line:1156:24>
|   |     | | |-UnaryOperator 0x242d94e9088 <line:1155:17, col:55> 'int' prefix '!' cannot overflow
|   |     | | | `-CallExpr 0x242d94e9040 <col:18, col:55> 'int'
|   |     | | |   |-ImplicitCastExpr 0x242d94e9028 <col:18> 'int (*)(unsigned char *, const char *)' <FunctionToPointerDecay>
|   |     | | |   | `-DeclRefExpr 0x242d94e8ec8 <col:18> 'int (unsigned char *, const char *)' Function 0x242d94e6778 'ipv4_from_asc' 'int (unsigned char *, const char *)'
|   |     | | |   |-BinaryOperator 0x242d94e8fe8 <col:32, col:44> 'unsigned char *' '+'
|   |     | | |   | |-ImplicitCastExpr 0x242d94e8fb8 <col:32, col:35> 'unsigned char *' <ArrayToPointerDecay>
|   |     | | |   | | `-MemberExpr 0x242d94e8f20 <col:32, col:35> 'unsigned char [16]' lvalue ->tmp 0x242d94e1968
|   |     | | |   | |   `-ImplicitCastExpr 0x242d94e8f08 <col:32> 'IPV6_STAT *' <LValueToRValue>
|   |     | | |   | |     `-DeclRefExpr 0x242d94e8ee8 <col:32> 'IPV6_STAT *' lvalue Var 0x242d94e8598 's' 'IPV6_STAT *'
|   |     | | |   | `-ImplicitCastExpr 0x242d94e8fd0 <col:41, col:44> 'int' <LValueToRValue>
|   |     | | |   |   `-MemberExpr 0x242d94e8f88 <col:41, col:44> 'int' lvalue ->total 0x242d94e19d8
|   |     | | |   |     `-ImplicitCastExpr 0x242d94e8f70 <col:41> 'IPV6_STAT *' <LValueToRValue>
|   |     | | |   |       `-DeclRefExpr 0x242d94e8f50 <col:41> 'IPV6_STAT *' lvalue Var 0x242d94e8598 's' 'IPV6_STAT *'
|   |     | | |   `-ImplicitCastExpr 0x242d94e9070 <col:51> 'const char *' <LValueToRValue>
|   |     | | |     `-DeclRefExpr 0x242d94e9008 <col:51> 'const char *' lvalue ParmVar 0x242d94e11d8 'elem' 'const char *'
|   |     | | `-ReturnStmt 0x242d94e90c8 <line:1156:17, col:24>
|   |     | |   `-IntegerLiteral 0x242d94e90a0 <col:24> 'int' 0
|   |     | `-CompoundAssignOperator 0x242d94e9180 <line:1157:13, col:25> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     |   |-MemberExpr 0x242d94e9128 <col:13, col:16> 'int' lvalue ->total 0x242d94e19d8
|   |     |   | `-ImplicitCastExpr 0x242d94e9110 <col:13> 'IPV6_STAT *' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x242d94e90f0 <col:13> 'IPV6_STAT *' lvalue Var 0x242d94e8598 's' 'IPV6_STAT *'
|   |     |   `-IntegerLiteral 0x242d94e9158 <col:25> 'int' 4
|   |     `-CompoundStmt 0x242d94e9568 <line:1158:16, line:1162:9>
|   |       |-IfStmt 0x242d94e9458 <line:1159:13, line:1160:24>
|   |       | |-UnaryOperator 0x242d94e9408 <line:1159:17, col:55> 'int' prefix '!' cannot overflow
|   |       | | `-CallExpr 0x242d94e93a0 <col:18, col:55> 'int'
|   |       | |   |-ImplicitCastExpr 0x242d94e9388 <col:18> 'int (*)(unsigned char *, const char *, int)' <FunctionToPointerDecay>
|   |       | |   | `-DeclRefExpr 0x242d94e91e0 <col:18> 'int (unsigned char *, const char *, int)' Function 0x242d94bfd20 'ipv6_hex' 'int (unsigned char *, const char *, int)'
|   |       | |   |-BinaryOperator 0x242d94e9300 <col:27, col:39> 'unsigned char *' '+'
|   |       | |   | |-ImplicitCastExpr 0x242d94e92d0 <col:27, col:30> 'unsigned char *' <ArrayToPointerDecay>
|   |       | |   | | `-MemberExpr 0x242d94e9238 <col:27, col:30> 'unsigned char [16]' lvalue ->tmp 0x242d94e1968
|   |       | |   | |   `-ImplicitCastExpr 0x242d94e9220 <col:27> 'IPV6_STAT *' <LValueToRValue>
|   |       | |   | |     `-DeclRefExpr 0x242d94e9200 <col:27> 'IPV6_STAT *' lvalue Var 0x242d94e8598 's' 'IPV6_STAT *'
|   |       | |   | `-ImplicitCastExpr 0x242d94e92e8 <col:36, col:39> 'int' <LValueToRValue>
|   |       | |   |   `-MemberExpr 0x242d94e92a0 <col:36, col:39> 'int' lvalue ->total 0x242d94e19d8
|   |       | |   |     `-ImplicitCastExpr 0x242d94e9288 <col:36> 'IPV6_STAT *' <LValueToRValue>
|   |       | |   |       `-DeclRefExpr 0x242d94e9268 <col:36> 'IPV6_STAT *' lvalue Var 0x242d94e8598 's' 'IPV6_STAT *'
|   |       | |   |-ImplicitCastExpr 0x242d94e93d8 <col:46> 'const char *' <LValueToRValue>
|   |       | |   | `-DeclRefExpr 0x242d94e9320 <col:46> 'const char *' lvalue ParmVar 0x242d94e11d8 'elem' 'const char *'
|   |       | |   `-ImplicitCastExpr 0x242d94e93f0 <col:52> 'int' <LValueToRValue>
|   |       | |     `-DeclRefExpr 0x242d94e9340 <col:52> 'int' lvalue ParmVar 0x242d94e1258 'len' 'int'
|   |       | `-ReturnStmt 0x242d94e9448 <line:1160:17, col:24>
|   |       |   `-IntegerLiteral 0x242d94e9420 <col:24> 'int' 0
|   |       `-CompoundAssignOperator 0x242d94e9538 <line:1161:13, col:25> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |         |-MemberExpr 0x242d94e94e0 <col:13, col:16> 'int' lvalue ->total 0x242d94e19d8
|   |         | `-ImplicitCastExpr 0x242d94e9490 <col:13> 'IPV6_STAT *' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x242d94e9470 <col:13> 'IPV6_STAT *' lvalue Var 0x242d94e8598 's' 'IPV6_STAT *'
|   |         `-IntegerLiteral 0x242d94e9510 <col:25> 'int' 2
|   `-ReturnStmt 0x242d94e9618 <line:1164:5, col:12>
|     `-IntegerLiteral 0x242d94e95f0 <col:12> 'int' 1
|-FunctionDecl 0x242d94e9860 prev 0x242d94bfd20 <line:1171:1, line:1190:1> line:1171:12 used ipv6_hex 'int (unsigned char *, const char *, int)' static
| |-ParmVarDecl 0x242d94e9670 <col:21, col:36> col:36 used out 'unsigned char *'
| |-ParmVarDecl 0x242d94e96f0 <col:41, col:53> col:53 used in 'const char *'
| |-ParmVarDecl 0x242d94e9770 <col:57, col:61> col:61 used inlen 'int'
| `-CompoundStmt 0x242d94ea458 <line:1172:1, line:1190:1>
|   |-DeclStmt 0x242d94e9998 <line:1173:5, col:20>
|   | `-VarDecl 0x242d94e9930 <col:5, col:19> col:19 used c 'unsigned char'
|   |-DeclStmt 0x242d94e9a70 <line:1174:5, col:25>
|   | `-VarDecl 0x242d94e99c8 <col:5, col:24> col:18 used num 'unsigned int' cinit
|   |   `-ImplicitCastExpr 0x242d94e9a58 <col:24> 'unsigned int' <IntegralCast>
|   |     `-IntegerLiteral 0x242d94e9a30 <col:24> 'int' 0
|   |-DeclStmt 0x242d94e9b08 <line:1175:5, col:10>
|   | `-VarDecl 0x242d94e9aa0 <col:5, col:9> col:9 used x 'int'
|   |-IfStmt 0x242d94e9bd8 <line:1177:5, line:1178:16>
|   | |-BinaryOperator 0x242d94e9b80 <line:1177:9, col:17> 'int' '>'
|   | | |-ImplicitCastExpr 0x242d94e9b68 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x242d94e9b20 <col:9> 'int' lvalue ParmVar 0x242d94e9770 'inlen' 'int'
|   | | `-IntegerLiteral 0x242d94e9b40 <col:17> 'int' 4
|   | `-ReturnStmt 0x242d94e9bc8 <line:1178:9, col:16>
|   |   `-IntegerLiteral 0x242d94e9ba0 <col:16> 'int' 0
|   |-WhileStmt 0x242d94ea180 <line:1179:5, line:1186:5>
|   | |-UnaryOperator 0x242d94e9c10 <line:1179:12, col:17> 'int' postfix '--'
|   | | `-DeclRefExpr 0x242d94e9bf0 <col:12> 'int' lvalue ParmVar 0x242d94e9770 'inlen' 'int'
|   | `-CompoundStmt 0x242d94ea148 <col:21, line:1186:5>
|   |   |-BinaryOperator 0x242d94e9ce0 <line:1180:9, col:16> 'unsigned char' '='
|   |   | |-DeclRefExpr 0x242d94e9c28 <col:9> 'unsigned char' lvalue Var 0x242d94e9930 'c' 'unsigned char'
|   |   | `-ImplicitCastExpr 0x242d94e9cc8 <col:13, col:16> 'unsigned char' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x242d94e9cb0 <col:13, col:16> 'char' <LValueToRValue>
|   |   |     `-UnaryOperator 0x242d94e9c98 <col:13, col:16> 'const char' lvalue prefix '*' cannot overflow
|   |   |       `-UnaryOperator 0x242d94e9c80 <col:14, col:16> 'const char *' postfix '++'
|   |   |         `-DeclRefExpr 0x242d94e9c60 <col:14> 'const char *' lvalue ParmVar 0x242d94e96f0 'in' 'const char *'
|   |   |-CompoundAssignOperator 0x242d94e9d78 <line:1181:9, col:17> 'unsigned int' '<<=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |   | |-DeclRefExpr 0x242d94e9d00 <col:9> 'unsigned int' lvalue Var 0x242d94e99c8 'num' 'unsigned int'
|   |   | `-IntegerLiteral 0x242d94e9d38 <col:17> 'int' 4
|   |   |-BinaryOperator 0x242d94e9f80 <line:1182:9, col:34> 'int' '='
|   |   | |-DeclRefExpr 0x242d94e9da8 <col:9> 'int' lvalue Var 0x242d94e9aa0 'x' 'int'
|   |   | `-CallExpr 0x242d94e9f28 <col:13, col:34> 'int'
|   |   |   |-ImplicitCastExpr 0x242d94e9f10 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x242d94e9ed0 <col:13> 'int ()' Function 0x242d94e9e08 'OPENSSL_hexchar2int' 'int ()'
|   |   |   `-ImplicitCastExpr 0x242d94e9f68 <col:33> 'int' <IntegralCast>
|   |   |     `-ImplicitCastExpr 0x242d94e9f50 <col:33> 'unsigned char' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x242d94e9ef0 <col:33> 'unsigned char' lvalue Var 0x242d94e9930 'c' 'unsigned char'
|   |   |-IfStmt 0x242d94ea058 <line:1183:9, line:1184:20>
|   |   | |-BinaryOperator 0x242d94ea000 <line:1183:13, col:17> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x242d94e9fe8 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x242d94e9fa0 <col:13> 'int' lvalue Var 0x242d94e9aa0 'x' 'int'
|   |   | | `-IntegerLiteral 0x242d94e9fc0 <col:17> 'int' 0
|   |   | `-ReturnStmt 0x242d94ea048 <line:1184:13, col:20>
|   |   |   `-IntegerLiteral 0x242d94ea020 <col:20> 'int' 0
|   |   `-CompoundAssignOperator 0x242d94ea118 <line:1185:9, col:22> 'unsigned int' '|=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |     |-DeclRefExpr 0x242d94ea070 <col:9> 'unsigned int' lvalue Var 0x242d94e99c8 'num' 'unsigned int'
|   |     `-ImplicitCastExpr 0x242d94ea100 <col:16, col:22> 'unsigned int' <IntegralCast>
|   |       `-CStyleCastExpr 0x242d94ea0d8 <col:16, col:22> 'char' <IntegralCast>
|   |         `-ImplicitCastExpr 0x242d94ea0c0 <col:22> 'int' <LValueToRValue> part_of_explicit_cast
|   |           `-DeclRefExpr 0x242d94ea090 <col:22> 'int' lvalue Var 0x242d94e9aa0 'x' 'int'
|   |-BinaryOperator 0x242d94ea2b0 <line:1187:5, col:21> 'unsigned char' '='
|   | |-ArraySubscriptExpr 0x242d94ea1f8 <col:5, col:10> 'unsigned char' lvalue
|   | | |-ImplicitCastExpr 0x242d94ea1e0 <col:5> 'unsigned char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x242d94ea198 <col:5> 'unsigned char *' lvalue ParmVar 0x242d94e9670 'out' 'unsigned char *'
|   | | `-IntegerLiteral 0x242d94ea1b8 <col:9> 'int' 0
|   | `-ImplicitCastExpr 0x242d94ea298 <col:14, col:21> 'unsigned char' <IntegralCast>
|   |   `-BinaryOperator 0x242d94ea278 <col:14, col:21> 'unsigned int' '>>'
|   |     |-ImplicitCastExpr 0x242d94ea260 <col:14> 'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x242d94ea218 <col:14> 'unsigned int' lvalue Var 0x242d94e99c8 'num' 'unsigned int'
|   |     `-IntegerLiteral 0x242d94ea238 <col:21> 'int' 8
|   |-BinaryOperator 0x242d94ea400 <line:1188:5, col:20> 'unsigned char' '='
|   | |-ArraySubscriptExpr 0x242d94ea330 <col:5, col:10> 'unsigned char' lvalue
|   | | |-ImplicitCastExpr 0x242d94ea318 <col:5> 'unsigned char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x242d94ea2d0 <col:5> 'unsigned char *' lvalue ParmVar 0x242d94e9670 'out' 'unsigned char *'
|   | | `-IntegerLiteral 0x242d94ea2f0 <col:9> 'int' 1
|   | `-ImplicitCastExpr 0x242d94ea3e8 <col:14, col:20> 'unsigned char' <IntegralCast>
|   |   `-BinaryOperator 0x242d94ea3c8 <col:14, col:20> 'unsigned int' '&'
|   |     |-ImplicitCastExpr 0x242d94ea398 <col:14> 'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x242d94ea350 <col:14> 'unsigned int' lvalue Var 0x242d94e99c8 'num' 'unsigned int'
|   |     `-ImplicitCastExpr 0x242d94ea3b0 <col:20> 'unsigned int' <IntegralCast>
|   |       `-IntegerLiteral 0x242d94ea370 <col:20> 'int' 255
|   `-ReturnStmt 0x242d94ea448 <line:1189:5, col:12>
|     `-IntegerLiteral 0x242d94ea420 <col:12> 'int' 1
`-FunctionDecl 0x242d94e2620 <line:1192:1, line:1238:1> line:1192:5 invalid X509V3_NAME_from_section 'int (int *, int (*)())'
  |-ParmVarDecl 0x242d94e2470 <col:30, col:41> col:41 invalid nm 'int *'
  |-ParmVarDecl 0x242d94e2500 <col:45, <invalid sloc>> col:45 invalid STACK_OF 'int (*)()':'int (*)()'
  `-CompoundStmt 0x242d94eaab0 <line:1194:1, line:1238:1>
    |-DeclStmt 0x242d94e2910 <line:1196:5, col:38>
    | |-VarDecl 0x242d94e2700 <col:5, col:9> col:9 used i 'int'
    | |-VarDecl 0x242d94e2780 <col:5, col:12> col:12 used mval 'int'
    | |-VarDecl 0x242d94e2800 <col:5, col:18> col:18 used spec_char 'int'
    | `-VarDecl 0x242d94e2880 <col:5, col:29> col:29 used plus_char 'int'
    |-DeclStmt 0x242d94e2a40 <line:1197:5, col:19>
    | |-VarDecl 0x242d94e2940 <col:5, col:11> col:11 used p 'char *'
    | `-VarDecl 0x242d94e29c0 <col:5, col:15> col:15 used type 'char *'
    |-IfStmt 0x242d94e2aa8 <line:1198:5, line:1199:16>
    | |-OpaqueValueExpr 0x242d94e2a90 <<invalid sloc>> '_Bool'
    | `-ReturnStmt 0x242d94e2a80 <col:9, col:16>
    |   `-IntegerLiteral 0x242d94e2a58 <col:16> 'int' 0
    `-ReturnStmt 0x242d94eaaa0 <line:1237:5, col:12>
      `-IntegerLiteral 0x242d94eaa78 <col:12> 'int' 1
