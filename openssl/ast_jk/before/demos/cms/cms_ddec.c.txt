TranslationUnitDecl 0x21b9f34e3b8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x21b9f34ec50 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x21b9f34e950 '__int128'
|-TypedefDecl 0x21b9f34ecc0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x21b9f34e970 'unsigned __int128'
|-TypedefDecl 0x21b9f34eff8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x21b9f34edb0 'struct __NSConstantString_tag'
|   `-Record 0x21b9f34ed18 '__NSConstantString_tag'
|-TypedefDecl 0x21b9f34f068 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x21b9f34e590 'unsigned long long'
|-TypedefDecl 0x21b9f34f100 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x21b9f34f0c0 'char *'
|   `-BuiltinType 0x21b9f34e450 'char'
|-TypedefDecl 0x21b9f34f170 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x21b9f34f0c0 'char *'
|   `-BuiltinType 0x21b9f34e450 'char'
`-FunctionDecl 0x21ba0c04990 <.//openssl//file_jk/before\demos\cms\cms_ddec.c:18:1, line:88:1> line:18:5 main 'int (int, char **)'
  |-ParmVarDecl 0x21b9f34f1e0 <col:10, col:14> col:14 argc 'int'
  |-ParmVarDecl 0x21b9f34f290 <col:20, col:27> col:27 argv 'char **'
  `-CompoundStmt 0x21ba0c074e0 <line:19:1, line:88:1>
    |-DeclStmt 0x21ba0c04b48 <line:24:5, col:16>
    | `-VarDecl 0x21ba0c04ab8 <col:5, col:15> col:9 used ret 'int' cinit
    |   `-IntegerLiteral 0x21ba0c04b20 <col:15> 'int' 1
    |-CallExpr 0x21ba0c04ce0 <line:26:5, col:32> 'int'
    | `-ImplicitCastExpr 0x21ba0c04cc8 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x21ba0c04c78 <col:5> 'int ()' Function 0x21ba0c04bb0 'OpenSSL_add_all_algorithms' 'int ()'
    |-CallExpr 0x21ba0c04e28 <line:27:5, col:29> 'int'
    | `-ImplicitCastExpr 0x21ba0c04e10 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x21ba0c04df0 <col:5> 'int ()' Function 0x21ba0c04d28 'ERR_load_crypto_strings' 'int ()'
    |-IfStmt 0x21ba0c05110 <line:32:5, line:33:14>
    | |-OpaqueValueExpr 0x21ba0c050f8 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x21ba0c050e0 <col:9, col:14> 'err' 0x21ba0c05090
    |-IfStmt 0x21ba0c054d8 <line:41:5, line:42:14>
    | |-OpaqueValueExpr 0x21ba0c054c0 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x21ba0c054a8 <col:9, col:14> 'err' 0x21ba0c05090
    |-IfStmt 0x21ba0c05600 <line:48:5, line:49:14>
    | |-OpaqueValueExpr 0x21ba0c055e8 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x21ba0c055d0 <col:9, col:14> 'err' 0x21ba0c05090
    |-IfStmt 0x21ba0c05780 <line:54:5, line:55:14>
    | |-OpaqueValueExpr 0x21ba0c05768 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x21ba0c05750 <col:9, col:14> 'err' 0x21ba0c05090
    |-IfStmt 0x21ba0c058e0 <line:60:5, line:61:14>
    | |-OpaqueValueExpr 0x21ba0c058c8 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x21ba0c058b0 <col:9, col:14> 'err' 0x21ba0c05090
    |-IfStmt 0x21ba0c06a78 <line:64:5, line:65:14>
    | |-OpaqueValueExpr 0x21ba0c06a60 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x21ba0c06a48 <col:9, col:14> 'err' 0x21ba0c05090
    |-IfStmt 0x21ba0c06bf8 <line:68:5, line:69:14>
    | |-OpaqueValueExpr 0x21ba0c06be0 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x21ba0c06bc8 <col:9, col:14> 'err' 0x21ba0c05090
    |-BinaryOperator 0x21ba0c06c70 <line:71:5, col:11> 'int' '='
    | |-DeclRefExpr 0x21ba0c06c10 <col:5> 'int' lvalue Var 0x21ba0c04ab8 'ret' 'int'
    | `-IntegerLiteral 0x21ba0c06c48 <col:11> 'int' 0
    |-LabelStmt 0x21ba0c06fe0 <line:73:2, line:78:5> 'err'
    | `-IfStmt 0x21ba0c06fc8 <line:75:5, line:78:5>
    |   |-ImplicitCastExpr 0x21ba0c06cb0 <line:75:9> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x21ba0c06c90 <col:9> 'int' lvalue Var 0x21ba0c04ab8 'ret' 'int'
    |   `-CompoundStmt 0x21ba0c06fb8 <col:14, line:78:5>
    `-ReturnStmt 0x21ba0c074d0 <line:87:5, col:12>
      `-ImplicitCastExpr 0x21ba0c074b8 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x21ba0c07498 <col:12> 'int' lvalue Var 0x21ba0c04ab8 'ret' 'int'
