TranslationUnitDecl 0x23f5feddf98 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x23f5fede830 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x23f5fede530 '__int128'
|-TypedefDecl 0x23f5fede8a0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x23f5fede550 'unsigned __int128'
|-TypedefDecl 0x23f5fedebd8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x23f5fede990 'struct __NSConstantString_tag'
|   `-Record 0x23f5fede8f8 '__NSConstantString_tag'
|-TypedefDecl 0x23f5fedec48 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x23f5fede170 'unsigned long long'
|-TypedefDecl 0x23f5fedece0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x23f5fedeca0 'char *'
|   `-BuiltinType 0x23f5fede030 'char'
|-TypedefDecl 0x23f5feded50 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x23f5fedeca0 'char *'
|   `-BuiltinType 0x23f5fede030 'char'
`-FunctionDecl 0x23f616e8e70 <.//openssl//file_jk/before\demos\cms\cms_dec.c:15:1, line:78:1> line:15:5 main 'int (int, char **)'
  |-ParmVarDecl 0x23f5fededc0 <col:10, col:14> col:14 argc 'int'
  |-ParmVarDecl 0x23f5fedee70 <col:20, col:27> col:27 argv 'char **'
  `-CompoundStmt 0x23f616e5770 <line:16:1, line:78:1>
    |-DeclStmt 0x23f616e9028 <line:21:5, col:16>
    | `-VarDecl 0x23f616e8f98 <col:5, col:15> col:9 used ret 'int' cinit
    |   `-IntegerLiteral 0x23f616e9000 <col:15> 'int' 1
    |-CallExpr 0x23f616e91c0 <line:23:5, col:32> 'int'
    | `-ImplicitCastExpr 0x23f616e91a8 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x23f616e9158 <col:5> 'int ()' Function 0x23f616e9090 'OpenSSL_add_all_algorithms' 'int ()'
    |-CallExpr 0x23f616e9308 <line:24:5, col:29> 'int'
    | `-ImplicitCastExpr 0x23f616e92f0 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x23f616e92d0 <col:5> 'int ()' Function 0x23f616e9208 'ERR_load_crypto_strings' 'int ()'
    |-IfStmt 0x23f616e95f0 <line:29:5, line:30:14>
    | |-OpaqueValueExpr 0x23f616e95d8 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x23f616e95c0 <col:9, col:14> 'err' 0x23f616e9570
    |-IfStmt 0x23f616e99b8 <line:38:5, line:39:14>
    | |-OpaqueValueExpr 0x23f616e99a0 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x23f616e9988 <col:9, col:14> 'err' 0x23f616e9570
    |-IfStmt 0x23f616e9ae0 <line:45:5, line:46:14>
    | |-OpaqueValueExpr 0x23f616e9ac8 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x23f616e9ab0 <col:9, col:14> 'err' 0x23f616e9570
    |-IfStmt 0x23f616e9c38 <line:51:5, line:52:14>
    | |-OpaqueValueExpr 0x23f616e9c20 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x23f616e9c08 <col:9, col:14> 'err' 0x23f616e9570
    |-IfStmt 0x23f616e9d60 <line:55:5, line:56:14>
    | |-OpaqueValueExpr 0x23f616e9d48 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x23f616e9d30 <col:9, col:14> 'err' 0x23f616e9570
    |-IfStmt 0x23f616e4ea8 <line:59:5, line:60:14>
    | |-OpaqueValueExpr 0x23f616e4e90 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x23f616e4e78 <col:9, col:14> 'err' 0x23f616e9570
    |-BinaryOperator 0x23f616e4f20 <line:62:5, col:11> 'int' '='
    | |-DeclRefExpr 0x23f616e4ec0 <col:5> 'int' lvalue Var 0x23f616e8f98 'ret' 'int'
    | `-IntegerLiteral 0x23f616e4ef8 <col:11> 'int' 0
    |-LabelStmt 0x23f616e5290 <line:64:2, line:69:5> 'err'
    | `-IfStmt 0x23f616e5278 <line:66:5, line:69:5>
    |   |-ImplicitCastExpr 0x23f616e4f60 <line:66:9> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x23f616e4f40 <col:9> 'int' lvalue Var 0x23f616e8f98 'ret' 'int'
    |   `-CompoundStmt 0x23f616e5268 <col:14, line:69:5>
    `-ReturnStmt 0x23f616e5760 <line:77:5, col:12>
      `-ImplicitCastExpr 0x23f616e5748 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x23f616e5728 <col:12> 'int' lvalue Var 0x23f616e8f98 'ret' 'int'
