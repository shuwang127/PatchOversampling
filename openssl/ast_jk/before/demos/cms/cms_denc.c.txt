TranslationUnitDecl 0x22acfcf2418 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x22acfcf2cb0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x22acfcf29b0 '__int128'
|-TypedefDecl 0x22acfcf2d20 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x22acfcf29d0 'unsigned __int128'
|-TypedefDecl 0x22acfcf3058 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x22acfcf2e10 'struct __NSConstantString_tag'
|   `-Record 0x22acfcf2d78 '__NSConstantString_tag'
|-TypedefDecl 0x22acfcf30c8 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x22acfcf25f0 'unsigned long long'
|-TypedefDecl 0x22acfcf3160 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x22acfcf3120 'char *'
|   `-BuiltinType 0x22acfcf24b0 'char'
|-TypedefDecl 0x22acfcf31d0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x22acfcf3120 'char *'
|   `-BuiltinType 0x22acfcf24b0 'char'
`-FunctionDecl 0x22ad1611790 <.//openssl//file_jk/before\demos\cms\cms_denc.c:18:1, line:97:1> line:18:5 main 'int (int, char **)'
  |-ParmVarDecl 0x22acfcf3240 <col:10, col:14> col:14 argc 'int'
  |-ParmVarDecl 0x22acfcf32f0 <col:20, col:27> col:27 argv 'char **'
  `-CompoundStmt 0x22ad16137b0 <line:19:1, line:97:1>
    |-DeclStmt 0x22ad1611a80 <line:24:5, col:16>
    | `-VarDecl 0x22ad16119f0 <col:5, col:15> col:9 used ret 'int' cinit
    |   `-IntegerLiteral 0x22ad1611a58 <col:15> 'int' 1
    |-DeclStmt 0x22ad1611b18 <line:26:5, col:42>
    | `-VarDecl 0x22ad1611ab0 <col:5, col:9> col:9 used flags 'int'
    |-CallExpr 0x22ad1611c80 <line:28:5, col:32> 'int'
    | `-ImplicitCastExpr 0x22ad1611c68 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x22ad1611c20 <col:5> 'int ()' Function 0x22ad1611b58 'OpenSSL_add_all_algorithms' 'int ()'
    |-CallExpr 0x22ad1611dc8 <line:29:5, col:29> 'int'
    | `-ImplicitCastExpr 0x22ad1611db0 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x22ad1611d90 <col:5> 'int ()' Function 0x22ad1611cc8 'ERR_load_crypto_strings' 'int ()'
    |-IfStmt 0x22ad16120b0 <line:34:5, line:35:14>
    | |-OpaqueValueExpr 0x22ad1612098 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x22ad1612080 <col:9, col:14> 'err' 0x22ad1612030
    |-IfStmt 0x22ad1612230 <line:39:5, line:40:14>
    | |-OpaqueValueExpr 0x22ad1612218 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x22ad1612200 <col:9, col:14> 'err' 0x22ad1612030
    |-IfStmt 0x22ad16124d0 <line:45:5, line:46:14>
    | |-OpaqueValueExpr 0x22ad16124b8 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x22ad16124a0 <col:9, col:14> 'err' 0x22ad1612030
    |-IfStmt 0x22ad1612750 <line:60:5, line:61:14>
    | |-OpaqueValueExpr 0x22ad1612738 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x22ad1612720 <col:9, col:14> 'err' 0x22ad1612030
    |-IfStmt 0x22ad1619aa8 <line:66:5, line:67:14>
    | |-OpaqueValueExpr 0x22ad1619a90 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x22ad1619a78 <col:9, col:14> 'err' 0x22ad1612030
    |-IfStmt 0x22ad1619bd0 <line:70:5, line:71:14>
    | |-OpaqueValueExpr 0x22ad1619bb8 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x22ad1619ba0 <col:9, col:14> 'err' 0x22ad1612030
    |-IfStmt 0x22ad1619d48 <line:73:5, line:74:14>
    | |-OpaqueValueExpr 0x22ad1619d30 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x22ad1619d18 <col:9, col:14> 'err' 0x22ad1612030
    |-IfStmt 0x22ad1619ea0 <line:77:5, line:78:14>
    | |-OpaqueValueExpr 0x22ad1619e88 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x22ad1619e70 <col:9, col:14> 'err' 0x22ad1612030
    |-BinaryOperator 0x22ad1619f18 <line:80:5, col:11> 'int' '='
    | |-DeclRefExpr 0x22ad1619eb8 <col:5> 'int' lvalue Var 0x22ad16119f0 'ret' 'int'
    | `-IntegerLiteral 0x22ad1619ef0 <col:11> 'int' 0
    |-LabelStmt 0x22ad161a290 <line:82:2, line:87:5> 'err'
    | `-IfStmt 0x22ad161a278 <line:84:5, line:87:5>
    |   |-ImplicitCastExpr 0x22ad1619f58 <line:84:9> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x22ad1619f38 <col:9> 'int' lvalue Var 0x22ad16119f0 'ret' 'int'
    |   `-CompoundStmt 0x22ad161a268 <col:14, line:87:5>
    `-ReturnStmt 0x22ad161a7a0 <line:96:5, col:12>
      `-ImplicitCastExpr 0x22ad161a788 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x22ad161a768 <col:12> 'int' lvalue Var 0x22ad16119f0 'ret' 'int'
