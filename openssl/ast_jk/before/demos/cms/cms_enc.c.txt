TranslationUnitDecl 0x1ef460813d8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1ef46081c70 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1ef46081970 '__int128'
|-TypedefDecl 0x1ef46081ce0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1ef46081990 'unsigned __int128'
|-TypedefDecl 0x1ef46082018 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1ef46081dd0 'struct __NSConstantString_tag'
|   `-Record 0x1ef46081d38 '__NSConstantString_tag'
|-TypedefDecl 0x1ef46082088 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x1ef460815b0 'unsigned long long'
|-TypedefDecl 0x1ef46082120 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1ef460820e0 'char *'
|   `-BuiltinType 0x1ef46081470 'char'
|-TypedefDecl 0x1ef46082190 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1ef460820e0 'char *'
|   `-BuiltinType 0x1ef46081470 'char'
`-FunctionDecl 0x1ef460ea730 <.//openssl//file_jk/before\demos\cms\cms_enc.c:15:1, line:92:1> line:15:5 main 'int (int, char **)'
  |-ParmVarDecl 0x1ef46082200 <col:10, col:14> col:14 argc 'int'
  |-ParmVarDecl 0x1ef460822b0 <col:20, col:27> col:27 argv 'char **'
  `-CompoundStmt 0x1ef460ec450 <line:16:1, line:92:1>
    |-DeclStmt 0x1ef460eaa20 <line:21:5, col:16>
    | `-VarDecl 0x1ef460ea990 <col:5, col:15> col:9 used ret 'int' cinit
    |   `-IntegerLiteral 0x1ef460ea9f8 <col:15> 'int' 1
    |-DeclStmt 0x1ef460eaab8 <line:27:5, col:27>
    | `-VarDecl 0x1ef460eaa50 <col:5, col:9> col:9 used flags 'int'
    |-CallExpr 0x1ef460eac20 <line:29:5, col:32> 'int'
    | `-ImplicitCastExpr 0x1ef460eac08 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x1ef460eabc0 <col:5> 'int ()' Function 0x1ef460eaaf8 'OpenSSL_add_all_algorithms' 'int ()'
    |-CallExpr 0x1ef460ead68 <line:30:5, col:29> 'int'
    | `-ImplicitCastExpr 0x1ef460ead50 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x1ef460ead30 <col:5> 'int ()' Function 0x1ef460eac68 'ERR_load_crypto_strings' 'int ()'
    |-IfStmt 0x1ef460eb050 <line:35:5, line:36:14>
    | |-OpaqueValueExpr 0x1ef460eb038 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x1ef460eb020 <col:9, col:14> 'err' 0x1ef460eafd0
    |-IfStmt 0x1ef460eb1d0 <line:40:5, line:41:14>
    | |-OpaqueValueExpr 0x1ef460eb1b8 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x1ef460eb1a0 <col:9, col:14> 'err' 0x1ef460eafd0
    |-IfStmt 0x1ef460eb470 <line:46:5, line:47:14>
    | |-OpaqueValueExpr 0x1ef460eb458 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x1ef460eb440 <col:9, col:14> 'err' 0x1ef460eafd0
    |-IfStmt 0x1ef460eb5d0 <line:59:5, line:60:14>
    | |-OpaqueValueExpr 0x1ef460eb5b8 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x1ef460eb5a0 <col:9, col:14> 'err' 0x1ef460eafd0
    |-IfStmt 0x1ef460eb8c8 <line:65:5, line:66:14>
    | |-OpaqueValueExpr 0x1ef460eb8b0 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x1ef460eb898 <col:9, col:14> 'err' 0x1ef460eafd0
    |-IfStmt 0x1ef460eb9f0 <line:69:5, line:70:14>
    | |-OpaqueValueExpr 0x1ef460eb9d8 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x1ef460eb9c0 <col:9, col:14> 'err' 0x1ef460eafd0
    |-IfStmt 0x1ef460ebb68 <line:73:5, line:74:14>
    | |-OpaqueValueExpr 0x1ef460ebb50 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x1ef460ebb38 <col:9, col:14> 'err' 0x1ef460eafd0
    |-BinaryOperator 0x1ef460ebbe0 <line:76:5, col:11> 'int' '='
    | |-DeclRefExpr 0x1ef460ebb80 <col:5> 'int' lvalue Var 0x1ef460ea990 'ret' 'int'
    | `-IntegerLiteral 0x1ef460ebbb8 <col:11> 'int' 0
    |-LabelStmt 0x1ef460ebf50 <line:78:2, line:83:5> 'err'
    | `-IfStmt 0x1ef460ebf38 <line:80:5, line:83:5>
    |   |-ImplicitCastExpr 0x1ef460ebc20 <line:80:9> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x1ef460ebc00 <col:9> 'int' lvalue Var 0x1ef460ea990 'ret' 'int'
    |   `-CompoundStmt 0x1ef460ebf28 <col:14, line:83:5>
    `-ReturnStmt 0x1ef460ec440 <line:91:5, col:12>
      `-ImplicitCastExpr 0x1ef460ec428 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x1ef460ec408 <col:12> 'int' lvalue Var 0x1ef460ea990 'ret' 'int'
