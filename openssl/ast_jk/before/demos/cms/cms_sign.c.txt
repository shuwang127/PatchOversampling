TranslationUnitDecl 0x1eb18b50738 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1eb18b50fd0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1eb18b50cd0 '__int128'
|-TypedefDecl 0x1eb18b51040 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1eb18b50cf0 'unsigned __int128'
|-TypedefDecl 0x1eb18b51378 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1eb18b51130 'struct __NSConstantString_tag'
|   `-Record 0x1eb18b51098 '__NSConstantString_tag'
|-TypedefDecl 0x1eb18b513e8 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x1eb18b50910 'unsigned long long'
|-TypedefDecl 0x1eb18b51480 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1eb18b51440 'char *'
|   `-BuiltinType 0x1eb18b507d0 'char'
|-TypedefDecl 0x1eb18b514f0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1eb18b51440 'char *'
|   `-BuiltinType 0x1eb18b507d0 'char'
`-FunctionDecl 0x1eb1a3a4b50 <.//openssl//file_jk/before\demos\cms\cms_sign.c:15:1, line:88:1> line:15:5 main 'int (int, char **)'
  |-ParmVarDecl 0x1eb18b51560 <col:10, col:14> col:14 argc 'int'
  |-ParmVarDecl 0x1eb18b51610 <col:20, col:27> col:27 argv 'char **'
  `-CompoundStmt 0x1eb1a3aa670 <line:16:1, line:88:1>
    |-DeclStmt 0x1eb1a3a4d08 <line:21:5, col:16>
    | `-VarDecl 0x1eb1a3a4c78 <col:5, col:15> col:9 used ret 'int' cinit
    |   `-IntegerLiteral 0x1eb1a3a4ce0 <col:15> 'int' 1
    |-DeclStmt 0x1eb1a3a4da0 <line:28:5, col:42>
    | `-VarDecl 0x1eb1a3a4d38 <col:5, col:9> col:9 used flags 'int'
    |-CallExpr 0x1eb1a3a4f40 <line:30:5, col:32> 'int'
    | `-ImplicitCastExpr 0x1eb1a3a4f28 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x1eb1a3a4ed8 <col:5> 'int ()' Function 0x1eb1a3a4e10 'OpenSSL_add_all_algorithms' 'int ()'
    |-CallExpr 0x1eb1a3a5088 <line:31:5, col:29> 'int'
    | `-ImplicitCastExpr 0x1eb1a3a5070 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x1eb1a3a5050 <col:5> 'int ()' Function 0x1eb1a3a4f88 'ERR_load_crypto_strings' 'int ()'
    |-IfStmt 0x1eb1a3a5370 <line:36:5, line:37:14>
    | |-OpaqueValueExpr 0x1eb1a3a5358 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x1eb1a3a5340 <col:9, col:14> 'err' 0x1eb1a3a52f0
    |-IfStmt 0x1eb1a3a5738 <line:45:5, line:46:14>
    | |-OpaqueValueExpr 0x1eb1a3a5720 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x1eb1a3a5708 <col:9, col:14> 'err' 0x1eb1a3a52f0
    |-IfStmt 0x1eb1a3a5890 <line:52:5, line:53:14>
    | |-OpaqueValueExpr 0x1eb1a3a5878 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x1eb1a3a5860 <col:9, col:14> 'err' 0x1eb1a3a52f0
    |-IfStmt 0x1eb1a3a5a20 <line:58:5, line:59:14>
    | |-OpaqueValueExpr 0x1eb1a3a5a08 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x1eb1a3a59f0 <col:9, col:14> 'err' 0x1eb1a3a52f0
    |-IfStmt 0x1eb1a3a9be8 <line:62:5, line:63:14>
    | |-OpaqueValueExpr 0x1eb1a3a9bd0 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x1eb1a3a9bb8 <col:9, col:14> 'err' 0x1eb1a3a52f0
    |-IfStmt 0x1eb1a3a9da0 <line:69:5, line:70:14>
    | |-OpaqueValueExpr 0x1eb1a3a9d88 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x1eb1a3a9d70 <col:9, col:14> 'err' 0x1eb1a3a52f0
    |-BinaryOperator 0x1eb1a3a9e18 <line:72:5, col:11> 'int' '='
    | |-DeclRefExpr 0x1eb1a3a9db8 <col:5> 'int' lvalue Var 0x1eb1a3a4c78 'ret' 'int'
    | `-IntegerLiteral 0x1eb1a3a9df0 <col:11> 'int' 0
    |-LabelStmt 0x1eb1a3aa190 <line:74:2, line:79:5> 'err'
    | `-IfStmt 0x1eb1a3aa178 <line:76:5, line:79:5>
    |   |-ImplicitCastExpr 0x1eb1a3a9e58 <line:76:9> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x1eb1a3a9e38 <col:9> 'int' lvalue Var 0x1eb1a3a4c78 'ret' 'int'
    |   `-CompoundStmt 0x1eb1a3aa168 <col:14, line:79:5>
    `-ReturnStmt 0x1eb1a3aa660 <line:87:5, col:12>
      `-ImplicitCastExpr 0x1eb1a3aa648 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x1eb1a3aa628 <col:12> 'int' lvalue Var 0x1eb1a3a4c78 'ret' 'int'
