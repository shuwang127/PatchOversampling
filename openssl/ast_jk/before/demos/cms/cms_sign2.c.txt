TranslationUnitDecl 0x12bebfa1768 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12bebfa2000 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12bebfa1d00 '__int128'
|-TypedefDecl 0x12bebfa2070 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12bebfa1d20 'unsigned __int128'
|-TypedefDecl 0x12bebfa23a8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12bebfa2160 'struct __NSConstantString_tag'
|   `-Record 0x12bebfa20c8 '__NSConstantString_tag'
|-TypedefDecl 0x12bebfa2418 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x12bebfa1940 'unsigned long long'
|-TypedefDecl 0x12bebfa24b0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12bebfa2470 'char *'
|   `-BuiltinType 0x12bebfa1800 'char'
|-TypedefDecl 0x12bebfa2520 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12bebfa2470 'char *'
|   `-BuiltinType 0x12bebfa1800 'char'
`-FunctionDecl 0x12beda0aa90 <.//openssl//file_jk/before\demos\cms\cms_sign2.c:15:1, line:98:1> line:15:5 main 'int (int, char **)'
  |-ParmVarDecl 0x12bebfa2590 <col:10, col:14> col:14 argc 'int'
  |-ParmVarDecl 0x12bebfa2640 <col:20, col:27> col:27 argv 'char **'
  `-CompoundStmt 0x12beda0a8b0 <line:16:1, line:98:1>
    |-DeclStmt 0x12beda0ac48 <line:21:5, col:16>
    | `-VarDecl 0x12beda0abb8 <col:5, col:15> col:9 used ret 'int' cinit
    |   `-IntegerLiteral 0x12beda0ac20 <col:15> 'int' 1
    |-CallExpr 0x12beda0ade0 <line:23:5, col:32> 'int'
    | `-ImplicitCastExpr 0x12beda0adc8 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x12beda0ad78 <col:5> 'int ()' Function 0x12beda0acb0 'OpenSSL_add_all_algorithms' 'int ()'
    |-CallExpr 0x12beda0af28 <line:24:5, col:29> 'int'
    | `-ImplicitCastExpr 0x12beda0af10 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x12beda0aef0 <col:5> 'int ()' Function 0x12beda0ae28 'ERR_load_crypto_strings' 'int ()'
    |-IfStmt 0x12beda0b210 <line:28:5, line:29:14>
    | |-OpaqueValueExpr 0x12beda0b1f8 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x12beda0b1e0 <col:9, col:14> 'err' 0x12beda0b190
    |-IfStmt 0x12beda0b808 <line:41:5, line:42:14>
    | |-OpaqueValueExpr 0x12beda0b7f0 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x12beda0b7d8 <col:9, col:14> 'err' 0x12beda0b190
    |-IfStmt 0x12beda0b900 <line:50:5, line:51:14>
    | |-OpaqueValueExpr 0x12beda0b8e8 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x12beda0b8d0 <col:9, col:14> 'err' 0x12beda0b190
    |-IfStmt 0x12beda0ba60 <line:55:5, line:56:14>
    | |-OpaqueValueExpr 0x12beda0ba48 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x12beda0ba30 <col:9, col:14> 'err' 0x12beda0b190
    |-IfStmt 0x12beda09bc0 <line:60:5, line:61:14>
    | |-OpaqueValueExpr 0x12beda09ba8 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x12beda09b90 <col:9, col:14> 'err' 0x12beda0b190
    |-IfStmt 0x12beda09d40 <line:65:5, line:66:14>
    | |-OpaqueValueExpr 0x12beda09d28 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x12beda09d10 <col:9, col:14> 'err' 0x12beda0b190
    |-IfStmt 0x12beda09dd0 <line:68:5, line:69:14>
    | |-OpaqueValueExpr 0x12beda09db8 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x12beda09da0 <col:9, col:14> 'err' 0x12beda0b190
    |-IfStmt 0x12beda09f38 <line:72:5, line:73:14>
    | |-OpaqueValueExpr 0x12beda09f20 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x12beda09f08 <col:9, col:14> 'err' 0x12beda0b190
    |-IfStmt 0x12beda0a090 <line:77:5, line:78:14>
    | |-OpaqueValueExpr 0x12beda0a078 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x12beda0a060 <col:9, col:14> 'err' 0x12beda0b190
    |-BinaryOperator 0x12beda0a108 <line:80:5, col:11> 'int' '='
    | |-DeclRefExpr 0x12beda0a0a8 <col:5> 'int' lvalue Var 0x12beda0abb8 'ret' 'int'
    | `-IntegerLiteral 0x12beda0a0e0 <col:11> 'int' 0
    |-LabelStmt 0x12beda0a480 <line:82:2, line:87:5> 'err'
    | `-IfStmt 0x12beda0a468 <line:84:5, line:87:5>
    |   |-ImplicitCastExpr 0x12beda0a148 <line:84:9> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x12beda0a128 <col:9> 'int' lvalue Var 0x12beda0abb8 'ret' 'int'
    |   `-CompoundStmt 0x12beda0a458 <col:14, line:87:5>
    `-ReturnStmt 0x12beda0a8a0 <line:97:5, col:12>
      `-ImplicitCastExpr 0x12beda0a888 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x12beda0a868 <col:12> 'int' lvalue Var 0x12beda0abb8 'ret' 'int'
