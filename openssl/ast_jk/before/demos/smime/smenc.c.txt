TranslationUnitDecl 0x290fdf772a8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x290fdf77b40 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x290fdf77840 '__int128'
|-TypedefDecl 0x290fdf77bb0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x290fdf77860 'unsigned __int128'
|-TypedefDecl 0x290fdf77ee8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x290fdf77ca0 'struct __NSConstantString_tag'
|   `-Record 0x290fdf77c08 '__NSConstantString_tag'
|-TypedefDecl 0x290fdf77f58 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x290fdf77480 'unsigned long long'
|-TypedefDecl 0x290fdf77ff0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x290fdf77fb0 'char *'
|   `-BuiltinType 0x290fdf77340 'char'
|-TypedefDecl 0x290fdf78060 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x290fdf77fb0 'char *'
|   `-BuiltinType 0x290fdf77340 'char'
`-FunctionDecl 0x290ff8104c0 <.//openssl//file_jk/before\demos\smime\smenc.c:15:1, line:91:1> line:15:5 main 'int (int, char **)'
  |-ParmVarDecl 0x290fdf780d0 <col:10, col:14> col:14 argc 'int'
  |-ParmVarDecl 0x290fdf78180 <col:20, col:27> col:27 argv 'char **'
  `-CompoundStmt 0x290ff80d190 <line:16:1, line:91:1>
    |-DeclStmt 0x290ff8107b0 <line:21:5, col:16>
    | `-VarDecl 0x290ff810720 <col:5, col:15> col:9 used ret 'int' cinit
    |   `-IntegerLiteral 0x290ff810788 <col:15> 'int' 1
    |-DeclStmt 0x290ff810848 <line:27:5, col:29>
    | `-VarDecl 0x290ff8107e0 <col:5, col:9> col:9 used flags 'int'
    |-CallExpr 0x290ff8109b0 <line:29:5, col:32> 'int'
    | `-ImplicitCastExpr 0x290ff810998 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x290ff810950 <col:5> 'int ()' Function 0x290ff810888 'OpenSSL_add_all_algorithms' 'int ()'
    |-CallExpr 0x290ff810af8 <line:30:5, col:29> 'int'
    | `-ImplicitCastExpr 0x290ff810ae0 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x290ff810ac0 <col:5> 'int ()' Function 0x290ff8109f8 'ERR_load_crypto_strings' 'int ()'
    |-IfStmt 0x290ff810de0 <line:35:5, line:36:14>
    | |-OpaqueValueExpr 0x290ff810dc8 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x290ff810db0 <col:9, col:14> 'err' 0x290ff810d60
    |-IfStmt 0x290ff810f60 <line:40:5, line:41:14>
    | |-OpaqueValueExpr 0x290ff810f48 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x290ff810f30 <col:9, col:14> 'err' 0x290ff810d60
    |-IfStmt 0x290ff811200 <line:46:5, line:47:14>
    | |-OpaqueValueExpr 0x290ff8111e8 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x290ff8111d0 <col:9, col:14> 'err' 0x290ff810d60
    |-IfStmt 0x290ff811360 <line:59:5, line:60:14>
    | |-OpaqueValueExpr 0x290ff811348 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x290ff811330 <col:9, col:14> 'err' 0x290ff810d60
    |-IfStmt 0x290ff80c608 <line:65:5, line:66:14>
    | |-OpaqueValueExpr 0x290ff80c5f0 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x290ff80c5d8 <col:9, col:14> 'err' 0x290ff810d60
    |-IfStmt 0x290ff80c730 <line:69:5, line:70:14>
    | |-OpaqueValueExpr 0x290ff80c718 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x290ff80c700 <col:9, col:14> 'err' 0x290ff810d60
    |-IfStmt 0x290ff80c8a8 <line:73:5, line:74:14>
    | |-OpaqueValueExpr 0x290ff80c890 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x290ff80c878 <col:9, col:14> 'err' 0x290ff810d60
    |-BinaryOperator 0x290ff80c920 <line:76:5, col:11> 'int' '='
    | |-DeclRefExpr 0x290ff80c8c0 <col:5> 'int' lvalue Var 0x290ff810720 'ret' 'int'
    | `-IntegerLiteral 0x290ff80c8f8 <col:11> 'int' 0
    |-LabelStmt 0x290ff80cc90 <line:78:2, line:82:5> 'err'
    | `-IfStmt 0x290ff80cc78 <line:79:5, line:82:5>
    |   |-ImplicitCastExpr 0x290ff80c960 <line:79:9> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x290ff80c940 <col:9> 'int' lvalue Var 0x290ff810720 'ret' 'int'
    |   `-CompoundStmt 0x290ff80cc68 <col:14, line:82:5>
    `-ReturnStmt 0x290ff80d180 <line:89:5, col:12>
      `-ImplicitCastExpr 0x290ff80d168 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x290ff80d148 <col:12> 'int' lvalue Var 0x290ff810720 'ret' 'int'
