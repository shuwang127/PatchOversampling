TranslationUnitDecl 0x1bb33398458 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1bb33398cf0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1bb333989f0 '__int128'
|-TypedefDecl 0x1bb33398d60 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1bb33398a10 'unsigned __int128'
|-TypedefDecl 0x1bb33399098 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1bb33398e50 'struct __NSConstantString_tag'
|   `-Record 0x1bb33398db8 '__NSConstantString_tag'
|-TypedefDecl 0x1bb33399108 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x1bb33398630 'unsigned long long'
|-TypedefDecl 0x1bb333991a0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1bb33399160 'char *'
|   `-BuiltinType 0x1bb333984f0 'char'
|-TypedefDecl 0x1bb33399210 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1bb33399160 'char *'
|   `-BuiltinType 0x1bb333984f0 'char'
`-FunctionDecl 0x1bb34dfc940 <.//openssl//file_jk/before\demos\smime\smsign2.c:15:1, line:96:1> line:15:5 main 'int (int, char **)'
  |-ParmVarDecl 0x1bb33399280 <col:10, col:14> col:14 argc 'int'
  |-ParmVarDecl 0x1bb33399330 <col:20, col:27> col:27 argv 'char **'
  `-CompoundStmt 0x1bb34df8720 <line:16:1, line:96:1>
    |-DeclStmt 0x1bb34dfcaf8 <line:21:5, col:16>
    | `-VarDecl 0x1bb34dfca68 <col:5, col:15> col:9 used ret 'int' cinit
    |   `-IntegerLiteral 0x1bb34dfcad0 <col:15> 'int' 1
    |-CallExpr 0x1bb34dfcc90 <line:23:5, col:32> 'int'
    | `-ImplicitCastExpr 0x1bb34dfcc78 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x1bb34dfcc28 <col:5> 'int ()' Function 0x1bb34dfcb60 'OpenSSL_add_all_algorithms' 'int ()'
    |-CallExpr 0x1bb34dfcdd8 <line:24:5, col:29> 'int'
    | `-ImplicitCastExpr 0x1bb34dfcdc0 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x1bb34dfcda0 <col:5> 'int ()' Function 0x1bb34dfccd8 'ERR_load_crypto_strings' 'int ()'
    |-IfStmt 0x1bb34dfd0c0 <line:28:5, line:29:14>
    | |-OpaqueValueExpr 0x1bb34dfd0a8 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x1bb34dfd090 <col:9, col:14> 'err' 0x1bb34dfd040
    |-IfStmt 0x1bb34dfd6b8 <line:41:5, line:42:14>
    | |-OpaqueValueExpr 0x1bb34dfd6a0 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x1bb34dfd688 <col:9, col:14> 'err' 0x1bb34dfd040
    |-IfStmt 0x1bb34dfd7b0 <line:50:5, line:51:14>
    | |-OpaqueValueExpr 0x1bb34dfd798 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x1bb34dfd780 <col:9, col:14> 'err' 0x1bb34dfd040
    |-IfStmt 0x1bb34dfd910 <line:55:5, line:56:14>
    | |-OpaqueValueExpr 0x1bb34dfd8f8 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x1bb34dfd8e0 <col:9, col:14> 'err' 0x1bb34dfd040
    |-IfStmt 0x1bb34df7a30 <line:60:5, line:61:14>
    | |-OpaqueValueExpr 0x1bb34df7a18 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x1bb34df7a00 <col:9, col:14> 'err' 0x1bb34dfd040
    |-IfStmt 0x1bb34df7bb0 <line:65:5, line:66:14>
    | |-OpaqueValueExpr 0x1bb34df7b98 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x1bb34df7b80 <col:9, col:14> 'err' 0x1bb34dfd040
    |-IfStmt 0x1bb34df7c40 <line:68:5, line:69:14>
    | |-OpaqueValueExpr 0x1bb34df7c28 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x1bb34df7c10 <col:9, col:14> 'err' 0x1bb34dfd040
    |-IfStmt 0x1bb34df7da8 <line:72:5, line:73:14>
    | |-OpaqueValueExpr 0x1bb34df7d90 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x1bb34df7d78 <col:9, col:14> 'err' 0x1bb34dfd040
    |-IfStmt 0x1bb34df7f00 <line:77:5, line:78:14>
    | |-OpaqueValueExpr 0x1bb34df7ee8 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x1bb34df7ed0 <col:9, col:14> 'err' 0x1bb34dfd040
    |-BinaryOperator 0x1bb34df7f78 <line:80:5, col:11> 'int' '='
    | |-DeclRefExpr 0x1bb34df7f18 <col:5> 'int' lvalue Var 0x1bb34dfca68 'ret' 'int'
    | `-IntegerLiteral 0x1bb34df7f50 <col:11> 'int' 0
    |-LabelStmt 0x1bb34df82f0 <line:82:2, line:86:5> 'err'
    | `-IfStmt 0x1bb34df82d8 <line:83:5, line:86:5>
    |   |-ImplicitCastExpr 0x1bb34df7fb8 <line:83:9> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x1bb34df7f98 <col:9> 'int' lvalue Var 0x1bb34dfca68 'ret' 'int'
    |   `-CompoundStmt 0x1bb34df82c8 <col:14, line:86:5>
    `-ReturnStmt 0x1bb34df8710 <line:95:5, col:12>
      `-ImplicitCastExpr 0x1bb34df86f8 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x1bb34df86d8 <col:12> 'int' lvalue Var 0x1bb34dfca68 'ret' 'int'
