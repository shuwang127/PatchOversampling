TranslationUnitDecl 0x1f522454148 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1f5224549e0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1f5224546e0 '__int128'
|-TypedefDecl 0x1f522454a50 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1f522454700 'unsigned __int128'
|-TypedefDecl 0x1f522454d88 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1f522454b40 'struct __NSConstantString_tag'
|   `-Record 0x1f522454aa8 '__NSConstantString_tag'
|-TypedefDecl 0x1f522454df8 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x1f522454320 'unsigned long long'
|-TypedefDecl 0x1f522454e90 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1f522454e50 'char *'
|   `-BuiltinType 0x1f5224541e0 'char'
|-TypedefDecl 0x1f522454f00 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1f522454e50 'char *'
|   `-BuiltinType 0x1f5224541e0 'char'
`-FunctionDecl 0x1f523c56870 <.//openssl//file_jk/before\demos\smime\smver.c:15:1, line:83:1> line:15:5 main 'int (int, char **)'
  |-ParmVarDecl 0x1f522454f70 <col:10, col:14> col:14 argc 'int'
  |-ParmVarDecl 0x1f522455020 <col:20, col:27> col:27 argv 'char **'
  `-CompoundStmt 0x1f523c602f8 <line:16:1, line:83:1>
    |-DeclStmt 0x1f523c56a28 <line:22:5, col:16>
    | `-VarDecl 0x1f523c56998 <col:5, col:15> col:9 used ret 'int' cinit
    |   `-IntegerLiteral 0x1f523c56a00 <col:15> 'int' 1
    |-CallExpr 0x1f523c56bc0 <line:24:5, col:32> 'int'
    | `-ImplicitCastExpr 0x1f523c56ba8 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x1f523c56b58 <col:5> 'int ()' Function 0x1f523c56a90 'OpenSSL_add_all_algorithms' 'int ()'
    |-CallExpr 0x1f523c56d08 <line:25:5, col:29> 'int'
    | `-ImplicitCastExpr 0x1f523c56cf0 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x1f523c56cd0 <col:5> 'int ()' Function 0x1f523c56c08 'ERR_load_crypto_strings' 'int ()'
    |-IfStmt 0x1f523c57130 <line:34:5, line:35:14>
    | |-OpaqueValueExpr 0x1f523c57118 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x1f523c57100 <col:9, col:14> 'err' 0x1f523c570b0
    |-IfStmt 0x1f523c572b0 <line:39:5, line:40:14>
    | |-OpaqueValueExpr 0x1f523c57298 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x1f523c57280 <col:9, col:14> 'err' 0x1f523c570b0
    |-IfStmt 0x1f523c57408 <line:42:5, line:43:14>
    | |-OpaqueValueExpr 0x1f523c573f0 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x1f523c573d8 <col:9, col:14> 'err' 0x1f523c570b0
    |-IfStmt 0x1f523c57568 <line:49:5, line:50:14>
    | |-OpaqueValueExpr 0x1f523c57550 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x1f523c57538 <col:9, col:14> 'err' 0x1f523c570b0
    |-IfStmt 0x1f523c576c0 <line:55:5, line:56:14>
    | |-OpaqueValueExpr 0x1f523c576a8 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x1f523c57690 <col:9, col:14> 'err' 0x1f523c570b0
    |-IfStmt 0x1f523c577e8 <line:60:5, line:61:14>
    | |-OpaqueValueExpr 0x1f523c577d0 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x1f523c577b8 <col:9, col:14> 'err' 0x1f523c570b0
    |-IfStmt 0x1f523c5fc40 <line:63:5, line:66:5>
    | |-OpaqueValueExpr 0x1f523c5fc28 <<invalid sloc>> '_Bool'
    | `-CompoundStmt 0x1f523c5fc10 <line:63:52, line:66:5>
    |   `-GotoStmt 0x1f523c5fbf8 <line:65:9, col:14> 'err' 0x1f523c570b0
    |-BinaryOperator 0x1f523c5fd48 <line:70:5, col:11> 'int' '='
    | |-DeclRefExpr 0x1f523c5fce8 <col:5> 'int' lvalue Var 0x1f523c56998 'ret' 'int'
    | `-IntegerLiteral 0x1f523c5fd20 <col:11> 'int' 0
    |-LabelStmt 0x1f523c5ff28 <line:72:2, line:76:5> 'err'
    | `-IfStmt 0x1f523c5ff10 <line:73:5, line:76:5>
    |   |-ImplicitCastExpr 0x1f523c5fd88 <line:73:9> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x1f523c5fd68 <col:9> 'int' lvalue Var 0x1f523c56998 'ret' 'int'
    |   `-CompoundStmt 0x1f523c5ff00 <col:14, line:76:5>
    `-ReturnStmt 0x1f523c602e8 <line:82:5, col:12>
      `-ImplicitCastExpr 0x1f523c602d0 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x1f523c602b0 <col:12> 'int' lvalue Var 0x1f523c56998 'ret' 'int'
