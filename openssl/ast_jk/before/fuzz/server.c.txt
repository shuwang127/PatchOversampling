TranslationUnitDecl 0x174b2fece68 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x174b2fed700 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x174b2fed400 '__int128'
|-TypedefDecl 0x174b2fed770 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x174b2fed420 'unsigned __int128'
|-TypedefDecl 0x174b2fedaa8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x174b2fed860 'struct __NSConstantString_tag'
|   `-Record 0x174b2fed7c8 '__NSConstantString_tag'
|-TypedefDecl 0x174b2fedb18 <<invalid sloc>> <invalid sloc> implicit referenced size_t 'unsigned long long'
| `-BuiltinType 0x174b2fed040 'unsigned long long'
|-TypedefDecl 0x174b2fedbb0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x174b2fedb70 'char *'
|   `-BuiltinType 0x174b2fecf00 'char'
|-TypedefDecl 0x174b2fedc20 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x174b2fedb70 'char *'
|   `-BuiltinType 0x174b2fecf00 'char'
|-FunctionDecl 0x174b30bb0a0 <.//openssl//file_jk/before\fuzz/fuzzer.h:11:1, col:54> col:5 invalid FuzzerTestOneInput 'int (const int *, size_t)'
| |-ParmVarDecl 0x174b2fedc90 <col:24, col:39> col:39 invalid buf 'const int *'
| `-ParmVarDecl 0x174b2fedd30 <col:44, col:51> col:51 len 'size_t':'unsigned long long'
|-FunctionDecl 0x174b30bb380 <line:12:1, col:45> col:5 FuzzerInitialize 'int (int *, char ***)'
| |-ParmVarDecl 0x174b30bb190 <col:22, col:27> col:27 argc 'int *'
| `-ParmVarDecl 0x174b30bb278 <col:33, col:41> col:41 argv 'char ***'
|-VarDecl 0x174b30bb510 <.//openssl//file_jk/before\fuzz\server.c:21:1, <invalid sloc>> col:22 invalid kCertificateDER 'const int []' static
|-VarDecl 0x174b30c5758 <line:89:1, <invalid sloc>> col:22 invalid kRSAPrivateKeyDER 'const int []' static
|-VarDecl 0x174b30d3418 <line:192:1, col:17> col:17 invalid ctx 'int *' static
|-FunctionDecl 0x174b30d35f0 prev 0x174b30bb380 <line:194:1, line:217:1> line:194:5 FuzzerInitialize 'int (int *, char ***)'
| |-ParmVarDecl 0x174b30d3498 <col:22, col:27> col:27 argc 'int *'
| |-ParmVarDecl 0x174b30d3520 <col:33, col:41> col:41 argv 'char ***'
| `-CompoundStmt 0x174b30d4718 <col:47, line:217:1>
|   |-DeclStmt 0x174b30d3720 <line:195:5, col:44>
|   | `-VarDecl 0x174b30d36b8 <col:5, col:20> col:20 invalid bufp 'const int *'
|   |-DeclStmt 0x174b30d37b8 <line:198:5, col:12>
|   | `-VarDecl 0x174b30d3750 <col:5, col:9> col:9 used ret 'int'
|   |-CallExpr 0x174b30d4158 <line:207:5, col:28> 'int'
|   | |-ImplicitCastExpr 0x174b30d4140 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x174b30d40a0 <col:5> 'int ()' Function 0x174b30d3c18 'OPENSSL_assert' 'int ()'
|   | `-BinaryOperator 0x174b30d4120 <col:20, col:27> 'int' '=='
|   |   |-ImplicitCastExpr 0x174b30d4108 <col:20> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x174b30d40c0 <col:20> 'int' lvalue Var 0x174b30d3750 'ret' 'int'
|   |   `-IntegerLiteral 0x174b30d40e0 <col:27> 'int' 1
|   |-CallExpr 0x174b30d45a8 <line:213:5, col:28> 'int'
|   | |-ImplicitCastExpr 0x174b30d4590 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x174b30d44f0 <col:5> 'int ()' Function 0x174b30d3c18 'OPENSSL_assert' 'int ()'
|   | `-BinaryOperator 0x174b30d4570 <col:20, col:27> 'int' '=='
|   |   |-ImplicitCastExpr 0x174b30d4558 <col:20> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x174b30d4510 <col:20> 'int' lvalue Var 0x174b30d3750 'ret' 'int'
|   |   `-IntegerLiteral 0x174b30d4530 <col:27> 'int' 1
|   `-ReturnStmt 0x174b30d4708 <line:216:5, col:12>
|     `-IntegerLiteral 0x174b30d46e0 <col:12> 'int' 1
`-FunctionDecl 0x174b30d4880 <line:219:1, line:250:1> line:219:5 invalid FuzzerTestOneInput 'int (const int *, size_t)'
  |-ParmVarDecl 0x174b30d4768 <col:24, col:39> col:39 invalid buf 'const int *'
  |-ParmVarDecl 0x174b30d47e0 <col:44, col:51> col:51 used len 'size_t':'unsigned long long'
  `-CompoundStmt 0x174b30d0670 <col:56, line:250:1>
    |-IfStmt 0x174b30d4a00 <line:223:5, line:225:5>
    | |-UnaryOperator 0x174b30d4998 <line:223:9, col:10> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x174b30d4980 <col:10> 'size_t':'unsigned long long' <LValueToRValue>
    | |   `-DeclRefExpr 0x174b30d4948 <col:10> 'size_t':'unsigned long long' lvalue ParmVar 0x174b30d47e0 'len' 'size_t':'unsigned long long'
    | `-CompoundStmt 0x174b30d49e8 <col:15, line:225:5>
    |   `-ReturnStmt 0x174b30d49d8 <line:224:9, col:16>
    |     `-IntegerLiteral 0x174b30d49b0 <col:16> 'int' 0
    |-IfStmt 0x174b30d0510 <line:239:5, line:247:5>
    | |-OpaqueValueExpr 0x174b30d04f8 <<invalid sloc>> '_Bool'
    | `-CompoundStmt 0x174b30d04e0 <line:239:40, line:247:5>
    |   `-ForStmt 0x174b30d04a8 <line:242:9, line:246:9>
    |     |-<<<NULL>>>
    |     |-<<<NULL>>>
    |     |-<<<NULL>>>
    |     |-<<<NULL>>>
    |     `-CompoundStmt 0x174b30d0490 <line:242:18, line:246:9>
    |       `-IfStmt 0x174b30d0478 <line:243:13, line:245:13>
    |         |-OpaqueValueExpr 0x174b30d0460 <<invalid sloc>> '_Bool'
    |         `-CompoundStmt 0x174b30d0448 <line:243:58, line:245:13>
    |           `-BreakStmt 0x174b30d0440 <line:244:17>
    `-ReturnStmt 0x174b30d0660 <line:249:5, col:12>
      `-IntegerLiteral 0x174b30d0638 <col:12> 'int' 0
