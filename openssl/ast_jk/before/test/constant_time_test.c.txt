TranslationUnitDecl 0x1141ca83b98 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1141ca84430 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1141ca84130 '__int128'
|-TypedefDecl 0x1141ca844a0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1141ca84150 'unsigned __int128'
|-TypedefDecl 0x1141ca847d8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1141ca84590 'struct __NSConstantString_tag'
|   `-Record 0x1141ca844f8 '__NSConstantString_tag'
|-TypedefDecl 0x1141ca84848 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x1141ca83d70 'unsigned long long'
|-TypedefDecl 0x1141ca848e0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1141ca848a0 'char *'
|   `-BuiltinType 0x1141ca83c30 'char'
|-TypedefDecl 0x1141ca84950 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1141ca848a0 'char *'
|   `-BuiltinType 0x1141ca83c30 'char'
|-TypedefDecl 0x1141ca84a10 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x1141ca83d70 'unsigned long long'
|-TypedefDecl 0x1141ca84a80 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x1141ca848a0 'char *'
|   `-BuiltinType 0x1141ca83c30 'char'
|-FunctionDecl 0x1141e586450 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1141e5864f0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x1141e586560 <col:21> Implicit
|-FunctionDecl 0x1141e5865b8 prev 0x1141e586450 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1141e5862e0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x1141e5866a8 <col:21> Inherited Implicit
|-TypedefDecl 0x1141e5866e8 prev 0x1141ca84848 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x1141ca83d70 'unsigned long long'
|-TypedefDecl 0x1141e586790 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x1141e586760 'size_t' sugar
|   |-Typedef 0x1141e5866e8 'size_t'
|   `-BuiltinType 0x1141ca83d70 'unsigned long long'
|-TypedefDecl 0x1141e586800 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x1141ca83cd0 'long long'
|-TypedefDecl 0x1141e586870 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x1141ca83cd0 'long long'
|-TypedefDecl 0x1141e5868e0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x1141ca83d10 'unsigned short'
|-TypedefDecl 0x1141e586950 <line:541:1, col:24> col:24 referenced wint_t 'unsigned short'
| `-BuiltinType 0x1141ca83d10 'unsigned short'
|-TypedefDecl 0x1141e5869c0 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x1141ca83d10 'unsigned short'
|-TypedefDecl 0x1141e586a30 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x1141ca83c90 'int'
|-TypedefDecl 0x1141e586aa0 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x1141ca83cb0 'long'
|-TypedefDecl 0x1141e586b10 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x1141ca83cd0 'long long'
|-TypedefDecl 0x1141e586ba0 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x1141e586b70 '__time64_t' sugar
|   |-Typedef 0x1141e586b10 '__time64_t'
|   `-BuiltinType 0x1141ca83cd0 'long long'
|-FunctionDecl 0x1141e586d18 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x1141e586f38 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x1141e5ac0d0 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x1141e587078 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x1141e5870f0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x1141e587168 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x1141e5871e8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x1141e5abe70 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x1141e5ac1b0 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x1141e5ac270 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x1141e5ac3e0 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x1141e5ac390 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x1141e5ac330 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x1141e5ac250 'struct threadlocaleinfostruct'
|       `-Record 0x1141e5baf60 'threadlocaleinfostruct'
|-TypedefDecl 0x1141e5ac4f0 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x1141e5ac4a0 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x1141e5ac440 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x1141e5ac310 'struct threadmbcinfostruct'
|       `-Record 0x1141e5ac270 'threadmbcinfostruct'
|-RecordDecl 0x1141e5ac548 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x1141e5ac600 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x1141e5ac6c0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1141e5ac750 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x1141e5ac7e0 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x1141e5ac898 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x1141e5ac840 'struct localeinfo_struct' sugar
|   `-RecordType 0x1141e5ac6a0 'struct localeinfo_struct'
|     `-Record 0x1141e5ac600 'localeinfo_struct'
|-TypedefDecl 0x1141e5ac970 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x1141e5ac920 'struct localeinfo_struct *'
|   `-ElaboratedType 0x1141e5ac840 'struct localeinfo_struct' sugar
|     `-RecordType 0x1141e5ac6a0 'struct localeinfo_struct'
|       `-Record 0x1141e5ac600 'localeinfo_struct'
|-RecordDecl 0x1141e5ac9e8 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x1141e5acaa0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1141e5acb18 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x1141e5acbd8 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x1141e5acc70 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x1141e5acce0 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x1141e5acd98 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x1141e5acd40 'struct localerefcount' sugar
|   `-RecordType 0x1141e5aca80 'struct localerefcount'
|     `-Record 0x1141e5ac9e8 'localerefcount'
|-RecordDecl 0x1141e5baf60 prev 0x1141e5ac1b0 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x1141e5bafe0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1141e5bb058 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x1141e5bb0c8 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x1141e5bb138 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x1141e5bb1a8 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x1141e5bb368 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x1141e5bb3d8 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x1141e5bb448 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x1141e5bb4b8 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x1141e5bb528 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x1141e5bb598 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x1141e5bb5f0 parent 0x1141ca83b98 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x1141e5bb780 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x1141e5bb7f0 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x1141e5bb860 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x1141e5bb8d0 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x1141e5bb970 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x1141e5bb9e0 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x1141e5bbaf0 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x1141e5bbc28 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x1141e5bbcd8 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x1141e5bbc80 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x1141e5ac250 'struct threadlocaleinfostruct'
|     `-Record 0x1141e5baf60 'threadlocaleinfostruct'
|-RecordDecl 0x1141e5bbd70 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:63:1, line:72:9> line:63:8 struct _iobuf definition
| |-MaxFieldAlignmentAttr 0x1141e5bbe30 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1141e5bbea8 <line:64:9, col:15> col:15 _ptr 'char *'
| |-FieldDecl 0x1141e5bdf90 <line:65:9, col:15> col:15 _cnt 'int'
| |-FieldDecl 0x1141e5be000 <line:66:9, col:15> col:15 _base 'char *'
| |-FieldDecl 0x1141e5be070 <line:67:9, col:15> col:15 _flag 'int'
| |-FieldDecl 0x1141e5be0e0 <line:68:9, col:15> col:15 _file 'int'
| |-FieldDecl 0x1141e5be150 <line:69:9, col:15> col:15 _charbuf 'int'
| |-FieldDecl 0x1141e5be1c0 <line:70:9, col:15> col:15 _bufsiz 'int'
| `-FieldDecl 0x1141e5be230 <line:71:9, col:15> col:15 _tmpfname 'char *'
|-TypedefDecl 0x1141e5be2e0 <line:73:1, col:23> col:23 referenced FILE 'struct _iobuf':'struct _iobuf'
| `-ElaboratedType 0x1141e5be290 'struct _iobuf' sugar
|   `-RecordType 0x1141e5bbe10 'struct _iobuf'
|     `-Record 0x1141e5bbd70 '_iobuf'
|-FunctionDecl 0x1141e5be518 <line:137:9, col:39> col:24 used __iob_func 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|-TypedefDecl 0x1141e5be5e8 <line:144:1, col:17> col:17 referenced fpos_t 'long long'
| `-BuiltinType 0x1141ca83cd0 'long long'
|-FunctionDecl 0x1141e5be7c8 <line:175:24, col:65> col:36 _filbuf 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1141e5be650 <col:52, col:59> col:59 _File 'FILE *'
|-FunctionDecl 0x1141e5beac0 <line:176:28, col:82> col:40 _flsbuf 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1141e5be8a0 <col:53, col:57> col:57 _Ch 'int'
| `-ParmVarDecl 0x1141e5be918 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x1141e5bee70 <line:178:24, col:121> col:39 _fsopen 'FILE *(const char *, const char *, int) __attribute__((cdecl))':'FILE *(const char *, const char *, int)'
| |-ParmVarDecl 0x1141e5beba0 <col:54, col:67> col:67 _Filename 'const char *'
| |-ParmVarDecl 0x1141e5bec20 <col:85, col:98> col:98 _Mode 'const char *'
| `-ParmVarDecl 0x1141e5beca0 <col:110, col:114> col:114 _ShFlag 'int'
|-FunctionDecl 0x1141e5bd0f0 <line:180:9, col:51> col:22 clearerr 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1141e5bcf80 <col:39, col:46> col:46 _File 'FILE *'
|-FunctionDecl 0x1141e5bd320 <line:182:28, col:76> col:44 clearerr_s 'errno_t (FILE *) __attribute__((cdecl))':'errno_t (FILE *)'
| `-ParmVarDecl 0x1141e5bd1e0 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x1141e5bd4d0 <line:184:28, col:67> col:40 fclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1141e5bd3f0 <col:55, col:62> col:62 _File 'FILE *'
|-FunctionDecl 0x1141e5bd6c0 <line:185:28, col:55> col:40 _fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1141e5bd9b8 <line:187:24, col:94> col:39 _fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x1141e5bd790 <col:52, col:56> col:56 _FileHandle 'int'
| `-ParmVarDecl 0x1141e5bd810 <col:76, col:89> col:89 _Mode 'const char *'
|-FunctionDecl 0x1141e5bdb70 <line:189:24, col:58> col:36 feof 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1141e5bda90 <col:46, col:53> col:53 _File 'FILE *'
|-FunctionDecl 0x1141e5bdd20 <line:190:24, col:60> col:36 ferror 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1141e5bdc40 <col:48, col:55> col:55 _File 'FILE *'
|-FunctionDecl 0x1141e5bded0 <line:191:28, col:71> col:40 fflush 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1141e5bddf0 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x1141e5c7128 <line:192:28, col:66> col:40 fgetc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1141e5c7048 <col:54, col:61> col:61 _File 'FILE *'
|-FunctionDecl 0x1141e5c72b8 <line:193:28, col:54> col:40 _fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1141e5c7620 <line:194:28, col:90> col:40 fgetpos 'int (FILE *, fpos_t *) __attribute__((cdecl))':'int (FILE *, fpos_t *)'
| |-ParmVarDecl 0x1141e5c7380 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x1141e5c7478 <col:77, col:86> col:86 _Pos 'fpos_t *'
|-FunctionDecl 0x1141e5c79d8 <line:195:28, col:128> col:43 fgets 'char *(char *, int, FILE *) __attribute__((cdecl))':'char *(char *, int, FILE *)'
| |-ParmVarDecl 0x1141e5c7700 <col:75, col:82> col:82 _Buf 'char *'
| |-ParmVarDecl 0x1141e5c7780 <col:93, col:97> col:97 _MaxCount 'int'
| `-ParmVarDecl 0x1141e5c77f8 <col:116, col:123> col:123 _File 'FILE *'
|-FunctionDecl 0x1141e5c7b98 <line:197:24, col:61> col:36 _fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1141e5c7ab8 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x1141e5c7e60 <line:204:24, col:117> col:39 _tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x1141e5c7c70 <col:59, col:72> col:72 _DirName 'const char *'
| `-ParmVarDecl 0x1141e5c7cf0 <col:93, col:106> col:106 _FilePrefix 'const char *'
|-FunctionDecl 0x1141e5c2fe0 <line:210:28, col:54> col:40 _flushall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1141e5c33d8 <line:211:72> col:72 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x1141e5c3478 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1141e5c34e0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1141e5c3558 prev 0x1141e5c33d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:211:134> col:72 fopen 'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x1141e5c31b0 <col:85, col:98> col:98 _Filename 'const char *'
| |-ParmVarDecl 0x1141e5c3230 <col:116, col:129> col:129 _Mode 'const char *'
| `-DeprecatedAttr 0x1141e5c3608 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e5c3a80 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:213:28, col:149> col:44 fopen_s 'errno_t (FILE **, const char *, const char *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *)'
| |-ParmVarDecl 0x1141e5c37b0 <col:78, col:86> col:86 _File 'FILE **'
| |-ParmVarDecl 0x1141e5c3830 <col:100, col:113> col:113 _Filename 'const char *'
| `-ParmVarDecl 0x1141e5c38b0 <col:131, col:144> col:144 _Mode 'const char *'
|-FunctionDecl 0x1141e5c3da0 <line:215:40> col:40 implicit used fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x1141e5c3e40 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x1141e5c3ea8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1141e5c3f20 <col:40> Implicit printf 2 3
|-FunctionDecl 0x1141e5c5000 prev 0x1141e5c3da0 <col:28, col:125> col:40 used fprintf 'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1141e5c3b60 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1141e5c3be0 <col:100, col:113> col:113 _Format 'const char *'
| `-FormatAttr 0x1141e5c50f8 <col:40> Inherited printf 2 3
|-FunctionDecl 0x1141e5c52c0 <line:217:28, col:127> col:40 fprintf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1141e5c5140 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x1141e5c51c0 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x1141e5c5518 <line:219:28, col:80> col:40 fputc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1141e5c53a0 <col:51, col:55> col:55 _Ch 'int'
| `-ParmVarDecl 0x1141e5c5418 <col:68, col:75> col:75 _File 'FILE *'
|-FunctionDecl 0x1141e5c5748 <line:220:28, col:62> col:40 _fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1141e5c55f8 <col:55, col:59> col:59 _Ch 'int'
|-FunctionDecl 0x1141e5c5a40 <line:221:28, col:92> col:40 fputs 'int (const char *, FILE *) __attribute__((cdecl))':'int (const char *, FILE *)'
| |-ParmVarDecl 0x1141e5c5820 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x1141e5c5898 <col:80, col:87> col:87 _File 'FILE *'
|-FunctionDecl 0x1141e5c5ed8 <line:222:43> col:43 implicit fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x1141e5c5f78 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1141e5c6010 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1141e5c6078 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x1141e5c60e0 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x1141e5c6168 prev 0x1141e5c5ed8 <col:28, col:171> col:43 fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x1141e5c5b20 <col:89, col:96> col:96 _DstBuf 'void *'
| |-ParmVarDecl 0x1141e5c5b98 <col:110, col:117> col:117 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e5c5c10 <col:136, col:143> col:143 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1141e5c5c88 <col:159, col:166> col:166 _File 'FILE *'
|-FunctionDecl 0x1141e5c6670 <line:224:28, col:195> col:43 fread_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1141e5c6258 <col:91, col:98> col:98 _DstBuf 'void *'
| |-ParmVarDecl 0x1141e5c62d0 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e5c6348 <col:134, col:141> col:141 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e5c63c0 <col:160, col:167> col:167 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1141e5c6438 <col:183, col:190> col:190 _File 'FILE *'
|-FunctionDecl 0x1141e5c6b30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:226:160> col:74 freopen 'FILE *(const char *, const char *, FILE *) __attribute__((cdecl))':'FILE *(const char *, const char *, FILE *)'
| |-ParmVarDecl 0x1141e5c6860 <col:89, col:102> col:102 _Filename 'const char *'
| |-ParmVarDecl 0x1141e5c68e0 <col:120, col:133> col:133 _Mode 'const char *'
| |-ParmVarDecl 0x1141e5c6958 <col:148, col:155> col:155 _File 'FILE *'
| `-DeprecatedAttr 0x1141e5c6be8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using freopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e5c0058 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:228:28, col:176> col:44 freopen_s 'errno_t (FILE **, const char *, const char *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *, FILE *)'
| |-ParmVarDecl 0x1141e5c6d30 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x1141e5c6db0 <col:102, col:115> col:115 _Filename 'const char *'
| |-ParmVarDecl 0x1141e5c6e30 <col:133, col:146> col:146 _Mode 'const char *'
| `-ParmVarDecl 0x1141e5c6ea8 <col:161, col:168> col:168 _OldFile 'FILE *'
|-FunctionDecl 0x1141e5c0400 <line:230:70> col:70 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x1141e5c04a0 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x1141e5c0508 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1141e5c0580 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x1141e5c05e8 prev 0x1141e5c0400 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:230:153> col:70 fscanf 'int (FILE *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x1141e5c0238 <col:85, col:92> col:92 _File 'FILE *'
| |-ParmVarDecl 0x1141e5c02b8 <col:128, col:141> col:141 _Format 'const char *'
| |-FormatAttr 0x1141e5c07c8 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x1141e5c0698 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e5c0c08 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:231:201> col:77 _fscanf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1141e5c0908 <col:95, col:102> col:102 _File 'FILE *'
| |-ParmVarDecl 0x1141e5c0988 <col:148, col:161> col:161 _Format 'const char *'
| |-ParmVarDecl 0x1141e5c0a20 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1141e5c0cc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e5c8030 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:235:28, col:127> col:40 fscanf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1141e5c0e00 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x1141e5c0e80 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x1141e5c8320 <line:237:28, col:168> col:40 _fscanf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1141e5c8108 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1141e5c8188 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1141e5c8200 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1141e5c8680 <line:239:28, col:94> col:40 fsetpos 'int (FILE *, const fpos_t *) __attribute__((cdecl))':'int (FILE *, const fpos_t *)'
| |-ParmVarDecl 0x1141e5c8400 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x1141e5c84d8 <col:75, col:90> col:90 _Pos 'const fpos_t *'
|-FunctionDecl 0x1141e5c8a38 <line:240:28, col:103> col:40 fseek 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x1141e5c8758 <col:54, col:61> col:61 _File 'FILE *'
| |-ParmVarDecl 0x1141e5c87d8 <col:73, col:78> col:78 _Offset 'long'
| `-ParmVarDecl 0x1141e5c8858 <col:92, col:96> col:96 _Origin 'int'
|-FunctionDecl 0x1141e5c8c98 <line:241:24, col:63> col:37 ftell 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x1141e5c8b18 <col:51, col:58> col:58 _File 'FILE *'
|-FunctionDecl 0x1141e617f28 <line:243:28, col:110> col:40 _fseeki64 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x1141e5c8d68 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1141e5c8de8 <col:77, col:85> col:85 _Offset 'long long'
| `-ParmVarDecl 0x1141e5c8e68 <col:99, col:103> col:103 _Origin 'int'
|-FunctionDecl 0x1141e618188 <line:244:24, col:70> col:40 _ftelli64 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x1141e618008 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x1141e618648 <line:246:43> col:43 implicit fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x1141e6186e8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1141e618750 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1141e6187b8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x1141e618820 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x1141e6188a8 prev 0x1141e618648 <col:28, col:159> col:43 fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x1141e618290 <col:81, col:94> col:94 _Str 'const void *'
| |-ParmVarDecl 0x1141e618308 <col:105, col:112> col:112 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e618380 <col:124, col:131> col:131 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1141e6183f8 <col:147, col:154> col:154 _File 'FILE *'
|-FunctionDecl 0x1141e618a70 <line:247:24, col:61> col:36 getc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1141e618990 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x1141e618c00 <line:248:24, col:48> col:36 getchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1141e618d88 <line:249:24, col:53> col:36 _getmaxstdio 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1141e615070 <line:251:9, col:84> col:24 gets_s 'char *(char *, rsize_t) __attribute__((cdecl))':'char *(char *, rsize_t)'
| |-ParmVarDecl 0x1141e618e58 <col:53, col:60> col:60 _Buf 'char *'
| `-ParmVarDecl 0x1141e614ec0 <col:71, col:79> col:79 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1141e615398 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:254:80 gets 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1141e615250 <col:139, col:145> col:145 _Buffer 'char *'
| `-DeprecatedAttr 0x1141e615440 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e615660 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:255:16, col:54> col:28 _getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1141e615580 <col:42, col:49> col:49 _File 'FILE *'
|-FunctionDecl 0x1141e615880 <line:258:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x1141e615738 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x1141e615a30 <line:261:28, col:68> col:40 _pclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1141e615950 <col:56, col:63> col:63 _File 'FILE *'
|-FunctionDecl 0x1141e615c80 <line:262:24, col:101> col:39 _popen 'FILE *(const char *, const char *) __attribute__((cdecl))':'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x1141e615b08 <col:53, col:66> col:66 _Command 'const char *'
| `-ParmVarDecl 0x1141e615b88 <col:83, col:96> col:96 _Mode 'const char *'
|-FunctionDecl 0x1141e611e80 <line:264:40> col:40 implicit printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x1141e611f20 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1141e611f90 <col:40> Implicit printf 1 2
|-FunctionDecl 0x1141e611ff8 prev 0x1141e611e80 <col:28, col:102> col:40 printf 'int (const char *, ...)'
| |-ParmVarDecl 0x1141e615d60 <col:77, col:90> col:90 _Format 'const char *'
| `-FormatAttr 0x1141e6120e8 <col:40> Inherited printf 1 2
|-FunctionDecl 0x1141e612218 <line:266:28, col:104> col:40 printf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1141e612138 <col:79, col:92> col:92 _Format 'const char *'
|-FunctionDecl 0x1141e612468 <line:268:28, col:79> col:40 putc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1141e6122f0 <col:50, col:54> col:54 _Ch 'int'
| `-ParmVarDecl 0x1141e612368 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x1141e612628 <line:269:28, col:60> col:40 putchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1141e612548 <col:53, col:57> col:57 _Ch 'int'
|-FunctionDecl 0x1141e612848 <line:270:28, col:69> col:40 puts 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1141e612700 <col:52, col:65> col:65 _Str 'const char *'
|-FunctionDecl 0x1141e612a98 <line:271:28, col:82> col:40 _putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1141e612920 <col:51, col:55> col:55 _Word 'int'
| `-ParmVarDecl 0x1141e612998 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x1141e612c58 <line:274:9, col:57> col:21 remove 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1141e612b78 <col:35, col:48> col:48 _Filename 'const char *'
|-FunctionDecl 0x1141e616fa0 <line:275:24, col:109> col:36 rename 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1141e612d30 <col:50, col:63> col:63 _OldFilename 'const char *'
| `-ParmVarDecl 0x1141e612db0 <col:84, col:97> col:97 _NewFilename 'const char *'
|-FunctionDecl 0x1141e617160 <line:276:9, col:58> col:21 _unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1141e617080 <col:36, col:49> col:49 _Filename 'const char *'
|-FunctionDecl 0x1141e6173f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:278:89> col:53 unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x1141e617310 <col:67, col:80> col:80 _Filename 'const char *'
| `-DeprecatedAttr 0x1141e617498 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _unlink. See online help for details." ""
|-FunctionDecl 0x1141e617690 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:281:9, col:49> col:22 rewind 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1141e6175b8 <col:37, col:44> col:44 _File 'FILE *'
|-FunctionDecl 0x1141e617820 <line:282:28, col:51> col:40 _rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1141e617ac8 <line:283:69> col:69 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x1141e617b68 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1141e617bd8 <col:69> Implicit scanf 1 2
|-FunctionDecl 0x1141e617c40 prev 0x1141e617ac8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:283:129> col:69 scanf 'int (const char *restrict, ...)'
| |-ParmVarDecl 0x1141e6179b0 <col:104, col:117> col:117 _Format 'const char *'
| |-FormatAttr 0x1141e617e18 <col:69> Inherited scanf 1 2
| `-DeprecatedAttr 0x1141e617ce8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e619200 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:284:177> col:76 _scanf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1141e618fc8 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x1141e619040 <col:155, col:165> col:165 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1141e6192b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _scanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e6194d8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:288:40, col:116> col:52 scanf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1141e6193f8 <col:91, col:104> col:104 _Format 'const char *'
|-FunctionDecl 0x1141e619728 <line:290:40, col:157> col:52 _scanf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1141e6195b0 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x1141e619628 <col:135, col:145> col:145 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1141e619ae8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:292:150> col:55 setbuf 'void (FILE *, char *) __attribute__((cdecl))':'void (FILE *, char *)'
| |-ParmVarDecl 0x1141e6198c0 <col:70, col:77> col:77 _File 'FILE *'
| |-ParmVarDecl 0x1141e619940 <col:136, col:143> col:143 _Buffer 'char *'
| `-DeprecatedAttr 0x1141e619b98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using setvbuf instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e619dc0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:293:28, col:66> col:40 _setmaxstdio 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1141e619ce0 <col:58, col:62> col:62 _Max 'int'
|-FunctionDecl 0x1141e612fd8 <line:294:28, col:93> col:49 _set_output_format 'unsigned int (unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int)'
| `-ParmVarDecl 0x1141e612e90 <col:73, col:86> col:86 _Format 'unsigned int'
|-FunctionDecl 0x1141e6131c0 <line:295:28, col:72> col:49 _get_output_format 'unsigned int (void) __attribute__((cdecl))':'unsigned int (void)'
|-FunctionDecl 0x1141e613610 <line:296:28, col:145> col:40 setvbuf 'int (FILE *, char *, int, size_t) __attribute__((cdecl))':'int (FILE *, char *, int, size_t)'
| |-ParmVarDecl 0x1141e613288 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1141e613308 <col:99, col:106> col:106 _Buf 'char *'
| |-ParmVarDecl 0x1141e613388 <col:117, col:121> col:121 _Mode 'int'
| `-ParmVarDecl 0x1141e613400 <col:133, col:140> col:140 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1141e613a90 <line:297:40, col:213> col:52 _snprintf_s 'int (char *, size_t, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, ...)'
| |-ParmVarDecl 0x1141e613700 <col:93, col:100> col:100 _DstBuf 'char *'
| |-ParmVarDecl 0x1141e613778 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e6137f0 <col:140, col:147> col:147 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1141e613870 <col:188, col:201> col:201 _Format 'const char *'
|-FunctionDecl 0x1141e61af10 <line:300:40, col:188> col:52 sprintf_s 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1141e613b80 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1141e613bf8 <col:112, col:119> col:119 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1141e613c78 <col:163, col:176> col:176 _Format 'const char *'
|-FunctionDecl 0x1141e61b0d8 <line:303:24, col:101> col:36 _scprintf 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1141e61aff8 <col:76, col:89> col:89 _Format 'const char *'
|-FunctionDecl 0x1141e61b4b0 <line:304:70> col:70 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x1141e61b550 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1141e61b5b8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1141e61b630 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x1141e61b698 prev 0x1141e61b4b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:304:157> col:70 sscanf 'int (const char *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x1141e61b270 <col:84, col:97> col:97 _Src 'const char *'
| |-ParmVarDecl 0x1141e61b2f0 <col:132, col:145> col:145 _Format 'const char *'
| |-FormatAttr 0x1141e61b878 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x1141e61b748 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e61bc68 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:305:205> col:77 _sscanf_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1141e61b988 <col:94, col:107> col:107 _Src 'const char *'
| |-ParmVarDecl 0x1141e61ba08 <col:152, col:165> col:165 _Format 'const char *'
| |-ParmVarDecl 0x1141e61ba80 <col:183, col:193> col:193 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1141e61bd20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e61c020 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:309:40, col:143> col:52 sscanf_s 'int (const char *, const char *, ...) __attribute__((cdecl))':'int (const char *, const char *, ...)'
| |-ParmVarDecl 0x1141e61be68 <col:68, col:81> col:81 _Src 'const char *'
| `-ParmVarDecl 0x1141e61bf20 <col:118, col:131> col:131 _Format 'const char *'
|-FunctionDecl 0x1141e61c318 <line:311:40, col:184> col:52 _sscanf_s_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1141e61c100 <col:71, col:84> col:84 _Src 'const char *'
| |-ParmVarDecl 0x1141e61c180 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x1141e61c1f8 <col:162, col:172> col:172 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1141e61c7a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:312:217> col:76 _snscanf 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1141e61c4c0 <col:121, col:134> col:134 _Src 'const char *'
| |-ParmVarDecl 0x1141e61c538 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e61c5b8 <col:192, col:205> col:205 _Format 'const char *'
| `-DeprecatedAttr 0x1141e61c860 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e61ce30 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:313:259> col:78 _snscanf_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1141e61caa0 <col:125, col:138> col:138 _Src 'const char *'
| |-ParmVarDecl 0x1141e61cb18 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e61cb98 <col:206, col:219> col:219 _Format 'const char *'
| |-ParmVarDecl 0x1141e61cc10 <col:237, col:247> col:247 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1141e61cf30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e61d290 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:314:40, col:197> col:52 _snscanf_s 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1141e61d078 <col:99, col:112> col:112 _Src 'const char *'
| |-ParmVarDecl 0x1141e61d0f0 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1141e61d170 <col:172, col:185> col:185 _Format 'const char *'
|-FunctionDecl 0x1141e61d628 <line:315:40, col:237> col:52 _snscanf_s_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1141e61d378 <col:101, col:114> col:114 _Src 'const char *'
| |-ParmVarDecl 0x1141e61d3f0 <col:125, col:132> col:132 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e61d470 <col:184, col:197> col:197 _Format 'const char *'
| `-ParmVarDecl 0x1141e61d4e8 <col:215, col:225> col:225 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1141e61d888 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:317:86> col:74 tmpfile 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
| `-DeprecatedAttr 0x1141e61d928 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpfile_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e61dbe0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:319:28, col:96> col:44 tmpfile_s 'errno_t (FILE **) __attribute__((cdecl))':'errno_t (FILE **)'
| `-ParmVarDecl 0x1141e61da70 <col:83, col:91> col:91 _File 'FILE **'
|-FunctionDecl 0x1141e615ec0 <line:320:28, col:106> col:44 tmpnam_s 'errno_t (char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t)'
| |-ParmVarDecl 0x1141e61dcb8 <col:75, col:82> col:82 _Buf 'char *'
| `-ParmVarDecl 0x1141e61dd30 <col:93, col:101> col:101 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1141e616140 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:323:79 tmpnam 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1141e616060 <col:113, col:119> col:119 _Buffer 'char *'
| `-DeprecatedAttr 0x1141e6161e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e6164a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:324:28, col:81> col:40 ungetc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1141e616330 <col:52, col:56> col:56 _Ch 'int'
| `-ParmVarDecl 0x1141e6163a8 <col:69, col:76> col:76 _File 'FILE *'
|-FunctionDecl 0x1141e6168c0 <line:325:40> col:40 implicit vfprintf 'int (FILE *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1141e616960 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x1141e6169c8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1141e616a30 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1141e616ab0 <col:40> Implicit printf 2 0
|-FunctionDecl 0x1141e616b18 prev 0x1141e6168c0 <col:28, col:139> col:40 vfprintf 'int (FILE *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1141e616580 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x1141e616600 <col:101, col:114> col:114 _Format 'const char *'
| |-ParmVarDecl 0x1141e616678 <col:123, col:131> col:131 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1141e616c18 <col:40> Inherited printf 2 0
|-FunctionDecl 0x1141e623fa0 <line:326:40> col:40 implicit vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1141e624040 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x1141e6240a8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1141e624110 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1141e624190 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x1141e6241f8 prev 0x1141e623fa0 <col:28, col:138> col:40 vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1141e616c60 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1141e616ce0 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x1141e616d58 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1141e6242f8 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x1141e624558 <line:328:28, col:141> col:40 vfprintf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1141e624340 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1141e6243c0 <col:103, col:116> col:116 _Format 'const char *'
| `-ParmVarDecl 0x1141e624438 <col:125, col:133> col:133 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1141e624850 <line:329:28, col:140> col:40 vfscanf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1141e624638 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1141e6246b8 <col:102, col:115> col:115 _Format 'const char *'
| `-ParmVarDecl 0x1141e624730 <col:124, col:132> col:132 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1141e624b98 <line:331:40> col:40 implicit vprintf 'int (const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1141e624c38 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1141e624ca0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1141e624d18 <col:40> Implicit printf 1 0
|-FunctionDecl 0x1141e624d80 prev 0x1141e624b98 <col:28, col:116> col:40 vprintf 'int (const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1141e624938 <col:78, col:91> col:91 _Format 'const char *'
| |-ParmVarDecl 0x1141e6249b0 <col:100, col:108> col:108 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1141e624e78 <col:40> Inherited printf 1 0
|-FunctionDecl 0x1141e6250e8 <line:332:40> col:40 implicit vscanf 'int (const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1141e625188 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1141e6251f0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1141e625268 <col:40> Implicit scanf 1 0
|-FunctionDecl 0x1141e6252d0 prev 0x1141e6250e8 <col:28, col:115> col:40 vscanf 'int (const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1141e624ec8 <col:77, col:90> col:90 _Format 'const char *'
| |-ParmVarDecl 0x1141e624fb0 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1141e6253c8 <col:40> Inherited scanf 1 0
|-FunctionDecl 0x1141e625590 <line:334:28, col:118> col:40 vprintf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1141e625418 <col:80, col:93> col:93 _Format 'const char *'
| `-ParmVarDecl 0x1141e625490 <col:102, col:110> col:110 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1141e6257e8 <line:335:28, col:117> col:40 vscanf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1141e625670 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x1141e6256e8 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1141e625d48 <line:337:77> col:77 implicit vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1141e625de8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1141e625e50 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1141e625eb8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1141e625f20 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1141e61df40 <col:77> Implicit printf 3 0
|-FunctionDecl 0x1141e61dfa8 prev 0x1141e625d48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:337:218> col:77 vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1141e625988 <col:111, col:118> col:118 _DstBuf 'char *'
| |-ParmVarDecl 0x1141e625a00 <col:132, col:139> col:139 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e625a80 <col:180, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x1141e625af8 <col:202, col:210> col:210 _ArgList 'va_list':'char *'
| |-FormatAttr 0x1141e61e198 <col:77> Inherited printf 3 0
| `-DeprecatedAttr 0x1141e61e068 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e61e608 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:339:28, col:206> col:40 vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1141e61e1e8 <col:77, col:84> col:84 _DstBuf 'char *'
| |-ParmVarDecl 0x1141e61e260 <col:98, col:105> col:105 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e61e2d8 <col:120, col:127> col:127 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e61e358 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x1141e61e3d0 <col:190, col:198> col:198 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1141e61ea48 <line:342:40, col:227> col:52 _vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1141e61e700 <col:94, col:101> col:101 _DstBuf 'char *'
| |-ParmVarDecl 0x1141e61e778 <col:115, col:122> col:122 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e61e7f0 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e61e870 <col:189, col:202> col:202 _Format 'const char *'
| `-ParmVarDecl 0x1141e61e8e8 <col:211, col:219> col:219 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1141e61ee18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:89 _snprintf 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1141e61ec00 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x1141e61ec78 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e61ecf8 <col:246, col:260> col:260 _Format 'const char *'
| `-DeprecatedAttr 0x1141e61eed0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e6213e0 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:100 _vsnprintf 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1141e621130 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x1141e6211a8 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e621228 <col:246, col:260> col:260 _Format 'const char *'
| |-ParmVarDecl 0x1141e6212a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x1141e6214a0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e621898 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:349:21, col:183> col:33 vsprintf_s 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1141e6215e8 <col:73, col:80> col:80 _DstBuf 'char *'
| |-ParmVarDecl 0x1141e621660 <col:94, col:101> col:101 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e6216e0 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x1141e621758 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1141e621c58 <line:351:40, col:149> col:52 vsscanf_s 'int (const char *, const char *, va_list) __attribute__((cdecl))':'int (const char *, const char *, va_list)'
| |-ParmVarDecl 0x1141e621988 <col:62, col:75> col:75 _Src 'const char *'
| |-ParmVarDecl 0x1141e621a08 <col:111, col:124> col:124 _Format 'const char *'
| `-ParmVarDecl 0x1141e621a80 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1141e626060 <line:356:85> col:85 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x1141e626100 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1141e626168 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1141e6261e0 <col:85> Implicit printf 2 3
|-FunctionDecl 0x1141e626248 prev 0x1141e626060 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:85 sprintf 'int (char *, const char *, ...)'
| |-ParmVarDecl 0x1141e621e00 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x1141e621e80 <col:171, col:185> col:185 _Format 'const char *'
| |-FormatAttr 0x1141e626428 <col:85> Inherited printf 2 3
| `-DeprecatedAttr 0x1141e6262f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e626850 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> col:94 implicit vsprintf 'int (char *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1141e6268f0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1141e626958 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1141e6269c0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1141e626a40 <col:94> Implicit printf 2 0
|-FunctionDecl 0x1141e626aa8 prev 0x1141e626850 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94 vsprintf 'int (char *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1141e626538 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x1141e6265b8 <col:171, col:185> col:185 _Format 'const char *'
| |-ParmVarDecl 0x1141e626630 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-FormatAttr 0x1141e626c90 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> Inherited printf 2 0
| `-DeprecatedAttr 0x1141e626b60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e61ef50 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:357:40> col:40 implicit vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1141e61eff0 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1141e61f058 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1141e61f0c0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1141e61f140 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x1141e61f1a8 prev 0x1141e61ef50 <col:28, col:138> col:40 vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1141e626ce0 <col:48, col:61> col:61 _srcBuf 'const char *'
| |-ParmVarDecl 0x1141e626d60 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x1141e626dd8 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1141e61f2a8 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x1141e61f470 <line:359:24, col:115> col:36 _vscprintf 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1141e61f2f8 <col:77, col:90> col:90 _Format 'const char *'
| `-ParmVarDecl 0x1141e61f370 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1141e61f768 <line:360:28, col:170> col:40 _snprintf_c 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1141e61f550 <col:76, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x1141e61f5c8 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1141e61f648 <col:145, col:158> col:158 _Format 'const char *'
|-FunctionDecl 0x1141e61fb00 <line:361:28, col:183> col:40 _vsnprintf_c 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1141e61f850 <col:77, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x1141e61f8c8 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e61f948 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x1141e61f9c0 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1141e61fd68 <line:363:28, col:128> col:40 _fprintf_p 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1141e61fbe8 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x1141e61fc68 <col:103, col:116> col:116 _Format 'const char *'
|-FunctionDecl 0x1141e626fd0 <line:364:28, col:105> col:40 _printf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1141e61fe48 <col:80, col:93> col:93 _Format 'const char *'
|-FunctionDecl 0x1141e6272c0 <line:365:28, col:168> col:40 _sprintf_p 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1141e6270a8 <col:77, col:84> col:84 _Dst 'char *'
| |-ParmVarDecl 0x1141e627120 <col:95, col:102> col:102 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1141e6271a0 <col:143, col:156> col:156 _Format 'const char *'
|-FunctionDecl 0x1141e6275b8 <line:366:28, col:142> col:40 _vfprintf_p 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1141e6273a0 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1141e627420 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x1141e627498 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1141e627818 <line:367:28, col:119> col:40 _vprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1141e6276a0 <col:81, col:94> col:94 _Format 'const char *'
| `-ParmVarDecl 0x1141e627718 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1141e627ba8 <line:368:28, col:182> col:40 _vsprintf_p 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1141e6278f8 <col:78, col:85> col:85 _Dst 'char *'
| |-ParmVarDecl 0x1141e627970 <col:96, col:103> col:103 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e6279f0 <col:144, col:157> col:157 _Format 'const char *'
| `-ParmVarDecl 0x1141e627a68 <col:166, col:174> col:174 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1141e627d78 <line:369:24, col:103> col:36 _scprintf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1141e627c98 <col:78, col:91> col:91 _Format 'const char *'
|-FunctionDecl 0x1141e61ff60 <line:370:24, col:117> col:36 _vscprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1141e627e50 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x1141e627ec8 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1141e620120 <line:371:9, col:61> col:21 _set_printf_count_output 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1141e620040 <col:51, col:55> col:55 _Value 'int'
|-FunctionDecl 0x1141e6202b0 <line:372:9, col:50> col:21 _get_printf_count_output 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1141e6204f8 <line:374:28, col:143> col:40 _printf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1141e620380 <col:90, col:103> col:103 _Format 'const char *'
| `-ParmVarDecl 0x1141e6203f8 <col:121, col:131> col:131 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1141e620750 <line:375:28, col:145> col:40 _printf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1141e6205d8 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1141e620650 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1141e6209a8 <line:376:28, col:145> col:40 _printf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1141e620830 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1141e6208a8 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1141e620d58 <line:377:28, col:157> col:40 _vprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1141e620a88 <col:91, col:104> col:104 _Format 'const char *'
| |-ParmVarDecl 0x1141e620b00 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1141e620b78 <col:141, col:149> col:149 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1141e628100 <line:378:28, col:159> col:40 _vprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1141e620e40 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1141e620eb8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1141e627fe0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1141e6283f8 <line:379:28, col:159> col:40 _vprintf_s_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1141e6281e8 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1141e628260 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1141e6282d8 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1141e6286f0 <line:381:28, col:166> col:40 _fprintf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1141e6284d8 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1141e628558 <col:113, col:126> col:126 _Format 'const char *'
| `-ParmVarDecl 0x1141e6285d0 <col:144, col:154> col:154 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1141e6289e8 <line:382:28, col:168> col:40 _fprintf_p_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1141e6287d0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1141e628850 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1141e6288c8 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1141e628ce0 <line:383:28, col:168> col:40 _fprintf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1141e628ac8 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1141e628b48 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1141e628bc0 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1141e629150 <line:384:28, col:147> col:40 _vfprintf_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1141e628dc0 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1141e628e40 <col:81, col:94> col:94 _Format 'const char *'
| |-ParmVarDecl 0x1141e628eb8 <col:112, col:122> col:122 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1141e628f30 <col:131, col:139> col:139 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1141e6294e8 <line:385:28, col:149> col:40 _vfprintf_p_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1141e629238 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1141e6292b8 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x1141e629330 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1141e6293a8 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1141e629880 <line:386:28, col:149> col:40 _vfprintf_s_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1141e6295d0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1141e629650 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x1141e6296c8 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1141e629740 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1141e629d18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:388:221> col:78 _sprintf_l 'int (char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1141e629a30 <col:112, col:119> col:119 _DstBuf 'char *'
| |-ParmVarDecl 0x1141e629ab0 <col:168, col:181> col:181 _Format 'const char *'
| |-ParmVarDecl 0x1141e629b28 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1141e629dd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e622290 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:389:28, col:211> col:40 _sprintf_p_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1141e629f18 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x1141e621f80 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e622000 <col:158, col:171> col:171 _Format 'const char *'
| `-ParmVarDecl 0x1141e622078 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1141e622630 <line:390:40, col:221> col:52 _sprintf_s_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1141e622380 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x1141e6223f8 <col:111, col:118> col:118 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e622478 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x1141e6224f0 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1141e622b80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:391:195> col:79 _vsprintf_l 'int (char *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1141e622820 <col:114, col:121> col:121 _DstBuf 'char *'
| |-ParmVarDecl 0x1141e6228a0 <col:137, col:150> col:150 _Format 'const char *'
| |-ParmVarDecl 0x1141e622918 <col:168> col:177 '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1141e622990 <col:179, col:187> col:187 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1141e622c40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e62a238 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:392:28, col:225> col:40 _vsprintf_p_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1141e622d88 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x1141e622e00 <col:101, col:108> col:108 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e622e80 <col:159, col:171> col:171 _Format 'const char *'
| |-ParmVarDecl 0x1141e622ef8 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1141e62a000 <col:209, col:217> col:217 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1141e62a678 <line:393:40, col:235> col:52 _vsprintf_s_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1141e62a330 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1141e62a3a8 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e62a428 <col:169, col:182> col:182 _Format 'const char *'
| |-ParmVarDecl 0x1141e62a4a0 <col:200, col:210> col:210 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1141e62a518 <col:219, col:227> col:227 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1141e62a8e8 <line:395:28, col:145> col:40 _scprintf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1141e62a770 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1141e62a7e8 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1141e62ab40 <line:396:28, col:147> col:40 _scprintf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1141e62a9c8 <col:94, col:107> col:107 _Format 'const char *'
| `-ParmVarDecl 0x1141e62aa40 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1141e62ae30 <line:397:28, col:159> col:40 _vscprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1141e62ac20 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1141e62ac98 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1141e62ad10 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1141e6230c0 <line:398:28, col:161> col:40 _vscprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1141e62af18 <col:95, col:108> col:108 _Format 'const char *'
| |-ParmVarDecl 0x1141e62af90 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1141e622fa0 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1141e623518 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:400:247> col:79 _snprintf_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1141e623268 <col:115, col:122> col:122 _DstBuf 'char *'
| |-ParmVarDecl 0x1141e6232e0 <col:136, col:143> col:143 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e623360 <col:194, col:207> col:207 _Format 'const char *'
| |-ParmVarDecl 0x1141e6233d8 <col:225, col:235> col:235 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1141e6235d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e6239d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:401:28, col:210> col:40 _snprintf_c_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1141e623720 <col:78, col:85> col:85 _DstBuf 'char *'
| |-ParmVarDecl 0x1141e623798 <col:99, col:106> col:106 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e623818 <col:157, col:170> col:170 _Format 'const char *'
| `-ParmVarDecl 0x1141e623890 <col:188, col:198> col:198 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1141e630060 <line:402:40, col:245> col:52 _snprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1141e623ac0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1141e623b38 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e623bb0 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e623c30 <col:192, col:205> col:205 _Format 'const char *'
| `-ParmVarDecl 0x1141e623ca8 <col:223, col:233> col:233 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1141e6305a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:403:262> col:80 _vsnprintf_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1141e630258 <col:117, col:124> col:124 _DstBuf 'char *'
| |-ParmVarDecl 0x1141e6302d0 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e630350 <col:196, col:209> col:209 _Format 'const char *'
| |-ParmVarDecl 0x1141e6303c8 <col:227, col:237> col:237 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1141e630440 <col:246, col:254> col:254 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1141e630668 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e630ae8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:404:28, col:176> col:40 _vsnprintf_c_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1141e6307b8 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x1141e630830 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e6308b0 <col:118, col:129> col:130 'const char *'
| |-ParmVarDecl 0x1141e630928 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1141e6309a0 <col:160, col:168> col:168 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1141e62b070 <line:405:28, col:245> col:40 _vsnprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1141e630be0 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x1141e630c58 <col:101, col:108> col:108 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e630cd0 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e630d50 <col:181, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x1141e630dc8 <col:210, col:220> col:220 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1141e630e40 <col:229, col:237> col:237 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1141e62b430 <line:415:24, col:128> col:39 _wfsopen 'FILE *(const wchar_t *, const wchar_t *, int) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, int)'
| |-ParmVarDecl 0x1141e62b168 <col:55, col:71> col:71 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1141e62b1e0 <col:89, col:105> col:105 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x1141e62b260 <col:117, col:121> col:121 _ShFlag 'int'
|-FunctionDecl 0x1141e62b6a0 <line:417:28, col:70> col:43 fgetwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1141e62b530 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x1141e62b8b8 <line:418:28, col:58> col:43 _fgetwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x1141e62bb98 <line:419:28, col:88> col:43 fputwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1141e62b980 <col:55, col:63> col:63 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1141e62b9f8 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x1141e62bde0 <line:420:28, col:70> col:43 _fputwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x1141e62bc70 <col:59, col:67> col:67 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1141e62d030 <line:421:24, col:65> col:39 getwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1141e62beb0 <col:53, col:60> col:60 _File 'FILE *'
|-FunctionDecl 0x1141e62d1b8 <line:422:24, col:52> col:39 getwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x1141e62d3f0 <line:423:28, col:87> col:43 putwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1141e62d280 <col:54, col:62> col:62 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1141e62d2f8 <col:75, col:82> col:82 _File 'FILE *'
|-FunctionDecl 0x1141e62d5a0 <line:424:28, col:68> col:43 putwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x1141e62d4c8 <col:57, col:65> col:65 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1141e62d848 <line:425:28, col:88> col:43 ungetwc 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x1141e62d670 <col:56, col:63> col:63 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1141e62d6e8 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x1141e62dbf0 <line:427:28, col:141> col:46 fgetws 'wchar_t *(wchar_t *, int, FILE *) __attribute__((cdecl))':'wchar_t *(wchar_t *, int, FILE *)'
| |-ParmVarDecl 0x1141e62d920 <col:82, col:92> col:92 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1141e62d9a0 <col:103, col:107> col:107 _SizeInWords 'int'
| `-ParmVarDecl 0x1141e62da18 <col:129, col:136> col:136 _File 'FILE *'
|-FunctionDecl 0x1141e62def0 <line:428:28, col:96> col:40 fputws 'int (const wchar_t *, FILE *) __attribute__((cdecl))':'int (const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1141e62dcd0 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1141e62dd48 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1141e62f208 <line:429:28, col:124> col:46 _getws_s 'wchar_t *(wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, size_t)'
| |-ParmVarDecl 0x1141e62dfc8 <col:84, col:94> col:94 _Str 'wchar_t *'
| `-ParmVarDecl 0x1141e62f060 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1141e62f510 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:431:83 _getws 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1141e62f3a0 <col:115, col:124> col:124 _String 'wchar_t *'
| `-DeprecatedAttr 0x1141e62f5b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _getws_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e62f878 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:432:28, col:74> col:40 _putws 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1141e62f6f8 <col:54, col:70> col:70 _Str 'const wchar_t *'
|-FunctionDecl 0x1141e62fb80 <line:434:28, col:129> col:40 fwprintf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1141e62f948 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x1141e62f9c0 <col:101, col:117> col:117 _Format 'const wchar_t *'
|-FunctionDecl 0x1141e62fdd0 <line:436:28, col:131> col:40 fwprintf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1141e62fc58 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x1141e62fcd0 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x1141e632940 <line:438:28, col:106> col:40 wprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1141e62fea8 <col:78, col:94> col:94 _Format 'const wchar_t *'
|-FunctionDecl 0x1141e632af0 <line:440:28, col:108> col:40 wprintf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1141e632a10 <col:80, col:96> col:96 _Format 'const wchar_t *'
|-FunctionDecl 0x1141e632ca0 <line:442:24, col:105> col:36 _scwprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1141e632bc0 <col:77, col:93> col:93 _Format 'const wchar_t *'
|-FunctionDecl 0x1141e633038 <line:443:28, col:143> col:40 vfwprintf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1141e632d70 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1141e632de8 <col:102, col:118> col:118 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1141e632e60 <col:127, col:135> col:135 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1141e633328 <line:444:28, col:142> col:40 vfwscanf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1141e633118 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x1141e633190 <col:101, col:117> col:117 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1141e633208 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1141e633618 <line:446:28, col:145> col:40 vfwprintf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1141e633408 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1141e633480 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1141e6334f8 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1141e633950 <line:447:28, col:144> col:40 vfwscanf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1141e6336f8 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1141e633770 <col:103, col:119> col:119 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1141e6337e8 <col:128, col:136> col:136 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1141e633c50 <line:449:28, col:120> col:40 vwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1141e633a30 <col:79, col:95> col:95 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1141e633aa8 <col:104, col:112> col:112 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1141e633ea0 <line:450:28, col:119> col:40 vwscanf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1141e633d28 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1141e633da0 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1141e6340f0 <line:452:28, col:122> col:40 vwprintf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1141e633f78 <col:81, col:97> col:97 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1141e633ff0 <col:106, col:114> col:114 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1141e634340 <line:453:28, col:121> col:40 vwscanf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1141e6341c8 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1141e634240 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1141e6346f8 <line:457:21, col:173> col:33 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1141e634418 <col:73, col:83> col:83 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1141e634490 <col:94, col:101> col:101 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1141e634508 <col:145, col:161> col:161 _Format 'const wchar_t *'
|-FunctionDecl 0x1141e63bbe0 <line:461:21, col:187> col:33 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1141e6347d8 <col:74, col:84> col:84 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1141e634850 <col:95, col:102> col:102 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e6348c8 <col:146, col:162> col:162 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1141e63b9d0 <col:171, col:179> col:179 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1141e63bf98 <line:462:40, col:156> col:52 vswscanf_s 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1141e63bcc8 <col:63, col:79> col:79 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1141e63bd40 <col:115, col:131> col:131 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1141e63bdb8 <col:140, col:148> col:148 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1141e63c288 <line:466:28, col:145> col:40 vswscanf 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1141e63c078 <col:49, col:65> col:65 _srcBuf 'const wchar_t *'
| |-ParmVarDecl 0x1141e63c0f0 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1141e63c168 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1141e63c578 <line:468:28, col:184> col:40 _swprintf_c 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1141e63c368 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1141e63c3e0 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1141e63c458 <col:156, col:172> col:172 _Format 'const wchar_t *'
|-FunctionDecl 0x1141e63c900 <line:469:28, col:198> col:40 _vswprintf_c 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1141e63c658 <col:82, col:92> col:92 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1141e63c6d0 <col:106, col:113> col:113 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e63c748 <col:157, col:173> col:173 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1141e63c7c0 <col:182, col:190> col:190 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1141e63ad70 <line:471:40, col:220> col:52 _snwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1141e63a9e8 <col:94, col:104> col:104 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1141e63aa60 <col:118, col:125> col:125 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e63aad8 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1141e63ab50 <col:192, col:208> col:208 _Format 'const wchar_t *'
|-FunctionDecl 0x1141e63b278 <line:473:40, col:234> col:52 _vsnwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1141e63ae58 <col:95, col:105> col:105 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1141e63aed0 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e63af48 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e63afc0 <col:193, col:209> col:209 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1141e63b038 <col:218, col:226> col:226 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1141e63b638 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:89 _snwprintf 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1141e63b428 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1141e63b4a0 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e63b518 <col:254, col:271> col:271 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1141e63b6f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e634b90 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:101 _vsnwprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1141e63b8f0 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1141e634960 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e6349d8 <col:254, col:271> col:271 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1141e634a50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x1141e634c50 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e634f08 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:480:28, col:132> col:40 _fwprintf_p 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1141e634d90 <col:60, col:67> col:67 _File 'FILE *'
| `-ParmVarDecl 0x1141e634e08 <col:104, col:120> col:120 _Format 'const wchar_t *'
|-FunctionDecl 0x1141e6350c0 <line:481:28, col:109> col:40 _wprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1141e634fe0 <col:81, col:97> col:97 _Format 'const wchar_t *'
|-FunctionDecl 0x1141e6353a0 <line:482:28, col:146> col:40 _vfwprintf_p 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1141e635190 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1141e635208 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1141e635280 <col:130, col:138> col:138 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1141e6355f8 <line:483:28, col:123> col:40 _vwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1141e635480 <col:82, col:98> col:98 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1141e6354f8 <col:107, col:115> col:115 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1141e63c9e0 <line:484:28, col:178> col:40 _swprintf_p 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1141e6356d0 <col:78, col:88> col:88 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1141e635748 <col:102, col:109> col:109 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1141e6357c0 <col:150, col:166> col:166 _Format 'const wchar_t *'
|-FunctionDecl 0x1141e63cd68 <line:485:28, col:192> col:40 _vswprintf_p 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1141e63cac0 <col:79, col:89> col:89 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1141e63cb38 <col:103, col:110> col:110 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e63cbb0 <col:151, col:167> col:167 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1141e63cc28 <col:176, col:184> col:184 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1141e63cf30 <line:486:24, col:107> col:36 _scwprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1141e63ce50 <col:79, col:95> col:95 _Format 'const wchar_t *'
|-FunctionDecl 0x1141e63d178 <line:487:24, col:121> col:36 _vscwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1141e63d000 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1141e63d078 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1141e63d480 <line:489:28, col:147> col:40 _wprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1141e63d250 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1141e63d2c8 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1141e63d6d0 <line:490:28, col:149> col:40 _wprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1141e63d558 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1141e63d5d0 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1141e63d920 <line:491:28, col:149> col:40 _wprintf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1141e63d7a8 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1141e63d820 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1141e637c88 <line:492:28, col:161> col:40 _vwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1141e6379b8 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1141e637a30 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1141e637aa8 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1141e637f78 <line:493:28, col:163> col:40 _vwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1141e637d68 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1141e637de0 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1141e637e58 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1141e638268 <line:494:28, col:163> col:40 _vwprintf_s_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1141e638058 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1141e6380d0 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1141e638148 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1141e638628 <line:496:28, col:170> col:40 _fwprintf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1141e638348 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1141e6383c0 <col:114, col:130> col:130 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1141e638438 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1141e635970 <line:497:28, col:172> col:40 _fwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1141e638708 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1141e638780 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1141e6387f8 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1141e635c60 <line:498:28, col:172> col:40 _fwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1141e635a50 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1141e635ac8 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1141e635b40 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1141e6360b0 <line:499:28, col:184> col:40 _vfwprintf_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1141e635d40 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1141e635db8 <col:115, col:131> col:131 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1141e635e30 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1141e635ea8 <col:168, col:176> col:176 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1141e636440 <line:500:28, col:186> col:40 _vfwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1141e636198 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x1141e636210 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1141e636288 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1141e636300 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1141e6367d0 <line:501:28, col:186> col:40 _vfwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1141e636528 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x1141e6365a0 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1141e636618 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1141e636690 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1141e63dd00 <line:503:28, col:218> col:40 _swprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1141e6368b8 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1141e63d9f0 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e63da68 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1141e63dae0 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1141e63e090 <line:504:28, col:218> col:40 _swprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1141e63dde8 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1141e63de60 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e63ded8 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1141e63df50 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1141e63e420 <line:505:40, col:228> col:52 _swprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1141e63e178 <col:91, col:101> col:101 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1141e63e1f0 <col:115, col:122> col:122 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e63e268 <col:172, col:188> col:188 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1141e63e2e0 <col:206, col:216> col:216 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1141e63e928 <line:506:28, col:232> col:40 used _vswprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1141e63e508 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1141e63e580 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e63e5f8 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1141e63e670 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1141e63e6e8 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1141e636ce8 <line:507:28, col:232> col:40 _vswprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1141e6369a8 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1141e636a20 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e636a98 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1141e636b10 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1141e636b88 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1141e637118 <line:508:40, col:242> col:52 _vswprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1141e636dd8 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1141e636e50 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e636ec8 <col:173, col:189> col:189 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1141e636f40 <col:207, col:217> col:217 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1141e636fb8 <col:226, col:234> col:234 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1141e637380 <line:510:24, col:145> col:36 _scwprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1141e637208 <col:89, col:105> col:105 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1141e637280 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1141e6375d0 <line:511:24, col:147> col:36 _scwprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1141e637458 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1141e6374d0 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1141e6378b8 <line:512:24, col:161> col:36 _vscwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1141e6376a8 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1141e637720 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1141e637798 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1141e63fda8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:514:255> col:80 _snwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1141e63fb00 <col:117, col:127> col:127 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1141e63fb78 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e63fbf0 <col:199, col:215> col:215 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1141e63fc68 <col:233, col:243> col:243 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1141e63fe68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e6403d8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:515:40, col:252> col:52 _snwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1141e63ffb0 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1141e640028 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e6400a0 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e640118 <col:196, col:212> col:212 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1141e640190 <col:230, col:240> col:240 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1141e640910 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:516:270> col:81 _vsnwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1141e6405d0 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1141e640648 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e6406c0 <col:201, col:217> col:217 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1141e640738 <col:235, col:245> col:245 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1141e6407b0 <col:254, col:262> col:262 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1141e63ea00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e63f010 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:517:40, col:266> col:52 _vsnwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1141e63eb48 <col:93, col:103> col:103 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1141e63ebc0 <col:117, col:124> col:124 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e63ec38 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e63ecb0 <col:197, col:213> col:213 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1141e63ed28 <col:231, col:241> col:241 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1141e63eda0 <col:250, col:258> col:258 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1141e63f510 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:110 _swprintf 'int (wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1141e63f2d8 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1141e63f350 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-DeprecatedAttr 0x1141e63f5c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1141e63f6d8 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1141e639c18 <col:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:134 _vswprintf 'int (wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1141e63f990 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1141e6399c0 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1141e639a38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x1141e639cd0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using vswprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1141e639de8 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1141e63a388 <col:36, line:1961:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:110 __swprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1141e63a0a8 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1141e63a120 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1141e63a198 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-DeprecatedAttr 0x1141e63a440 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __swprintf_l_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1141e63a560 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1141e644c70 <col:36, line:1962:166> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:124 __vswprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1141e63a820 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1141e63a898 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1141e63a910 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1141e644a60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1962:153, col:161> col:161 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x1141e644d30 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vswprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1141e644e50 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1141e645158 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:36:1, line:44:1> line:36:21 swprintf 'int (wchar_t *, size_t, const wchar_t *, ...)' static inline
| |-ParmVarDecl 0x1141e644f78 <col:53, col:63> col:63 used _String 'wchar_t *'
| |-ParmVarDecl 0x1141e644ff0 <col:72, col:79> col:79 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e645068 <col:117, col:133> col:133 used _Format 'const wchar_t *'
| `-CompoundStmt 0x1141e642ce0 <line:37:1, line:44:1>
|   |-DeclStmt 0x1141e6452a0 <line:38:5, col:21>
|   | `-VarDecl 0x1141e645238 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x1141e645338 <line:39:5, col:13>
|   | `-VarDecl 0x1141e6452d0 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x1141e645690 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x1141e645678 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1141e645590 <col:34> '<builtin fn type>' Function 0x1141e645428 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x1141e6455c8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:40:19> 'va_list':'char *' lvalue Var 0x1141e645238 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x1141e645600 <col:29> 'const wchar_t *' lvalue ParmVar 0x1141e645068 '_Format' 'const wchar_t *'
|   |-BinaryOperator 0x1141e645950 <line:41:5, col:67> 'int' '='
|   | |-DeclRefExpr 0x1141e6456c0 <col:5> 'int' lvalue Var 0x1141e6452d0 '_Ret' 'int'
|   | `-CallExpr 0x1141e645890 <col:12, col:67> 'int'
|   |   |-ImplicitCastExpr 0x1141e645878 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1141e6456f8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1141e63e928 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x1141e6458d8 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1141e645718 <col:27> 'wchar_t *' lvalue ParmVar 0x1141e644f78 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x1141e6458f0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1141e645738 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1141e644ff0 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x1141e645908 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1141e645758 <col:44> 'const wchar_t *' lvalue ParmVar 0x1141e645068 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x1141e645920 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|   |   | `-ParenExpr 0x1141e6457e0 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x1141e6457b8 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x1141e645778 <col:26> 'int' 0
|   |   `-ImplicitCastExpr 0x1141e645938 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:41:59> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1141e645800 <col:59> 'va_list':'char *' lvalue Var 0x1141e645238 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x1141e642c70 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x1141e642c58 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1141e642ba8 <col:34> '<builtin fn type>' Function 0x1141e642a40 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x1141e642be0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:42:17> 'va_list':'char *' lvalue Var 0x1141e645238 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x1141e642cd0 <line:43:5, col:12>
|     `-ImplicitCastExpr 0x1141e642cb8 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1141e642c98 <col:12> 'int' lvalue Var 0x1141e6452d0 '_Ret' 'int'
|-FunctionDecl 0x1141e645428 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34> col:34 implicit used __builtin_va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x1141e6454c8 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x1141e645538 <col:34> Implicit
|-FunctionDecl 0x1141e642a40 <line:27:34> col:34 implicit used __builtin_va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x1141e642ae0 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x1141e642b50 <col:34> Implicit
|-FunctionDecl 0x1141e642fd8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:49:1, line:52:1> line:49:31 vswprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)' static inline
| |-ParmVarDecl 0x1141e642d30 <col:64, col:74> col:74 used _String 'wchar_t *'
| |-ParmVarDecl 0x1141e642da8 <col:83, col:90> col:90 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e642e20 <col:138, col:154> col:154 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1141e642e98 <col:163, col:171> col:171 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x1141e6432c0 <line:50:1, line:52:1>
|   `-ReturnStmt 0x1141e6432b0 <line:51:5, col:62>
|     `-CallExpr 0x1141e6431f0 <col:12, col:62> 'int'
|       |-ImplicitCastExpr 0x1141e6431d8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1141e6430b0 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1141e63e928 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x1141e643238 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1141e6430d0 <col:27> 'wchar_t *' lvalue ParmVar 0x1141e642d30 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x1141e643250 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x1141e6430f0 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1141e642da8 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x1141e643268 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1141e643110 <col:44> 'const wchar_t *' lvalue ParmVar 0x1141e642e20 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x1141e643280 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|       | `-ParenExpr 0x1141e643198 <col:17, col:27> 'void *'
|       |   `-CStyleCastExpr 0x1141e643170 <col:18, col:26> 'void *' <NullToPointer>
|       |     `-IntegerLiteral 0x1141e643130 <col:26> 'int' 0
|       `-ImplicitCastExpr 0x1141e643298 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:51:59> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x1141e6431b8 <col:59> 'va_list':'char *' lvalue ParmVar 0x1141e642e98 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x1141e643560 <line:60:1, line:68:1> line:60:21 _swprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)' static inline
| |-ParmVarDecl 0x1141e6432e8 <col:56, col:66> col:66 used _String 'wchar_t *'
| |-ParmVarDecl 0x1141e643360 <col:75, col:82> col:82 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e6433d8 <col:130, col:146> col:146 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1141e643450 <col:155, col:165> col:165 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| `-CompoundStmt 0x1141e640ac8 <line:61:1, line:68:1>
|   |-DeclStmt 0x1141e6436b0 <line:62:5, col:21>
|   | `-VarDecl 0x1141e643648 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x1141e643748 <line:63:5, col:13>
|   | `-VarDecl 0x1141e6436e0 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x1141e6437f0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x1141e6437d8 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1141e643760 <col:34> '<builtin fn type>' Function 0x1141e645428 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x1141e643780 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:64:19> 'va_list':'char *' lvalue Var 0x1141e643648 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x1141e6437b8 <col:29> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1141e643450 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |-BinaryOperator 0x1141e6439f0 <line:65:5, col:72> 'int' '='
|   | |-DeclRefExpr 0x1141e643820 <col:5> 'int' lvalue Var 0x1141e6436e0 '_Ret' 'int'
|   | `-CallExpr 0x1141e643930 <col:12, col:72> 'int'
|   |   |-ImplicitCastExpr 0x1141e643918 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1141e643858 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1141e63e928 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x1141e643978 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1141e643878 <col:27> 'wchar_t *' lvalue ParmVar 0x1141e6432e8 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x1141e643990 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1141e643898 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1141e643360 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x1141e6439a8 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1141e6438b8 <col:44> 'const wchar_t *' lvalue ParmVar 0x1141e6433d8 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x1141e6439c0 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1141e6438d8 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1141e643450 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |   `-ImplicitCastExpr 0x1141e6439d8 <col:64> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1141e6438f8 <col:64> 'va_list':'char *' lvalue Var 0x1141e643648 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x1141e640a58 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x1141e640a40 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1141e643a10 <col:34> '<builtin fn type>' Function 0x1141e642a40 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x1141e640a20 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:66:17> 'va_list':'char *' lvalue Var 0x1141e643648 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x1141e640ab8 <line:67:5, col:12>
|     `-ImplicitCastExpr 0x1141e640aa0 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1141e640a80 <col:12> 'int' lvalue Var 0x1141e6436e0 '_Ret' 'int'
|-FunctionDecl 0x1141e640e58 <line:73:1, line:76:1> line:73:31 _vswprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' static inline
| |-ParmVarDecl 0x1141e640b18 <col:67, col:77> col:77 used _String 'wchar_t *'
| |-ParmVarDecl 0x1141e640b90 <col:86, col:93> col:93 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e640c08 <col:141, col:157> col:157 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1141e640c80 <col:166, col:176> col:176 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1141e640cf8 <col:187, col:195> col:195 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x1141e6410e0 <line:74:1, line:76:1>
|   `-ReturnStmt 0x1141e6410d0 <line:75:5, col:67>
|     `-CallExpr 0x1141e641010 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x1141e640ff8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1141e640f38 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1141e63e928 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x1141e641058 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1141e640f58 <col:27> 'wchar_t *' lvalue ParmVar 0x1141e640b18 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x1141e641070 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x1141e640f78 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1141e640b90 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x1141e641088 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1141e640f98 <col:44> 'const wchar_t *' lvalue ParmVar 0x1141e640c08 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x1141e6410a0 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|       | `-DeclRefExpr 0x1141e640fb8 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1141e640c80 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|       `-ImplicitCastExpr 0x1141e6410b8 <col:64> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x1141e640fd8 <col:64> 'va_list':'char *' lvalue ParmVar 0x1141e640cf8 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x1141e641328 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:555:24, col:129> col:42 _wtempnam 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1141e641108 <col:63, col:79> col:79 _Directory 'const wchar_t *'
| `-ParmVarDecl 0x1141e641180 <col:102, col:118> col:118 _FilePrefix 'const wchar_t *'
|-FunctionDecl 0x1141e641578 <line:561:24, col:119> col:36 _vscwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1141e641400 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1141e641478 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1141e641860 <line:562:24, col:159> col:36 _vscwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1141e641650 <col:90, col:106> col:106 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1141e6416c8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1141e641740 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1141e647c08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:563:158> col:71 fwscanf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1141e647a90 <col:87, col:94> col:94 _File 'FILE *'
| |-ParmVarDecl 0x1141e647b08 <col:130, col:146> col:146 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1141e647cb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e6480c8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:564:206> col:78 _fwscanf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1141e647eb8 <col:97, col:104> col:104 _File 'FILE *'
| |-ParmVarDecl 0x1141e647f30 <col:150, col:166> col:166 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1141e647fa8 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1141e648180 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e648438 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:568:28, col:131> col:40 fwscanf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1141e6482c0 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x1141e648338 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x1141e648720 <line:570:28, col:172> col:40 _fwscanf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1141e648510 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1141e648588 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1141e648600 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1141e641aa0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:571:165> col:71 swscanf 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1141e6488c0 <col:86, col:102> col:102 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1141e648938 <col:137, col:153> col:153 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1141e641b50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using swscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e642028 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:572:213> col:78 _swscanf_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1141e641d50 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1141e641dc8 <col:157, col:173> col:173 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1141e641e40 <col:191, col:201> col:201 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1141e6420e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e642398 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:574:40, col:149> col:52 swscanf_s 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1141e642220 <col:69, col:84> col:84 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1141e642298 <col:121, col:137> col:137 _Format 'const wchar_t *'
|-FunctionDecl 0x1141e642680 <line:576:40, col:191> col:52 _swscanf_s_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1141e642470 <col:72, col:88> col:88 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1141e6424e8 <col:135, col:151> col:151 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1141e642560 <col:169, col:179> col:179 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1141e646b68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:577:219> col:77 _snwscanf 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1141e642820 <col:117, col:133> col:133 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1141e642898 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e642910 <col:191, col:207> col:207 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1141e646c20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e6471a0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:578:261> col:79 _snwscanf_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1141e646e20 <col:121, col:137> col:137 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1141e646e98 <col:148, col:155> col:155 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e646f10 <col:205, col:221> col:221 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1141e646f88 <col:239, col:249> col:249 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1141e647260 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e6475b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:579:40, col:198> col:52 _snwscanf_s 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1141e6473a0 <col:94, col:110> col:110 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1141e647418 <col:121, col:128> col:128 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1141e647490 <col:170, col:186> col:186 _Format 'const wchar_t *'
|-FunctionDecl 0x1141e647938 <line:580:40, col:238> col:52 _snwscanf_s_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1141e647690 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1141e647708 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e647780 <col:182, col:198> col:198 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1141e6477f8 <col:216, col:226> col:226 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1141e648c50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:581:134> col:70 wscanf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| |-ParmVarDecl 0x1141e648b70 <col:106, col:122> col:122 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1141e648cf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e649070 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:582:182> col:77 _wscanf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1141e648ef8 <col:126, col:142> col:142 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1141e648f70 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1141e649120 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e649340 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:584:40, col:120> col:52 wscanf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1141e649260 <col:92, col:108> col:108 _Format 'const wchar_t *'
|-FunctionDecl 0x1141e649588 <line:586:40, col:161> col:52 _wscanf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1141e649410 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1141e649488 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1141e649888 <line:589:24, col:99> col:39 _wfdopen 'FILE *(int, const wchar_t *) __attribute__((cdecl))':'FILE *(int, const wchar_t *)'
| |-ParmVarDecl 0x1141e649668 <col:53, col:57> col:57 _FileHandle 'int'
| `-ParmVarDecl 0x1141e6496e0 <col:78, col:94> col:94 _Mode 'const wchar_t *'
|-FunctionDecl 0x1141e643bf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:590:144> col:74 _wfopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1141e649a20 <col:89, col:105> col:105 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1141e643a50 <col:123, col:139> col:139 _Mode 'const wchar_t *'
| `-DeprecatedAttr 0x1141e643ca8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e6440b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:591:28, col:157> col:44 _wfopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1141e643df0 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x1141e643e68 <col:102, col:118> col:118 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x1141e643ee0 <col:136, col:152> col:152 _Mode 'const wchar_t *'
|-FunctionDecl 0x1141e644510 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:592:173> col:76 _wfreopen 'FILE *(const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1141e644250 <col:93, col:109> col:109 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1141e6442c8 <col:127, col:143> col:143 _Mode 'const wchar_t *'
| |-ParmVarDecl 0x1141e644340 <col:158, col:165> col:165 _OldFile 'FILE *'
| `-DeprecatedAttr 0x1141e6445c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfreopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e64db38 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:593:28, col:184> col:44 _wfreopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1141e644710 <col:82, col:90> col:90 _File 'FILE **'
| |-ParmVarDecl 0x1141e644788 <col:104, col:120> col:120 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1141e644800 <col:138, col:154> col:154 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x1141e644878 <col:169, col:176> col:176 _OldFile 'FILE *'
|-FunctionDecl 0x1141e64dd90 <line:597:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x1141e64dc20 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x1141e64dfd0 <line:600:24, col:107> col:39 _wpopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1141e64de60 <col:54, col:69> col:69 _Command 'const wchar_t *'
| `-ParmVarDecl 0x1141e64ded8 <col:86, col:102> col:102 _Mode 'const wchar_t *'
|-FunctionDecl 0x1141e64e188 <line:602:9, col:62> col:21 _wremove 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1141e64e0a8 <col:37, col:53> col:53 _Filename 'const wchar_t *'
|-FunctionDecl 0x1141e64e478 <line:603:28, col:127> col:44 _wtmpnam_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1141e64e258 <col:84, col:94> col:94 _DstBuf 'wchar_t *'
| `-ParmVarDecl 0x1141e64e2d0 <col:108, col:115> col:115 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1141e64e6e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:605:82 _wtmpnam 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1141e64e610 <col:118, col:127> col:127 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x1141e64e790 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wtmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e64e9a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:607:28, col:78> col:43 _fgetwc_nolock 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1141e64e8d0 <col:66, col:73> col:73 _File 'FILE *'
|-FunctionDecl 0x1141e64ebf8 <line:608:28, col:96> col:43 _fputwc_nolock 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1141e64ea78 <col:63, col:71> col:71 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1141e64eb00 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1141e64ee40 <line:609:28, col:96> col:43 _ungetwc_nolock 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x1141e64ecd0 <col:64, col:71> col:71 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1141e64ed48 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1141e64eff0 <line:670:9, col:53> col:22 _lock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1141e64ef18 <col:41, col:48> col:48 _File 'FILE *'
|-FunctionDecl 0x1141e64f198 <line:671:9, col:55> col:22 _unlock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1141e64f0c0 <col:43, col:50> col:50 _File 'FILE *'
|-FunctionDecl 0x1141e64f348 <line:673:28, col:75> col:40 _fclose_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1141e64f268 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x1141e64f4f8 <line:674:28, col:79> col:40 _fflush_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1141e64f418 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x1141e64f870 <line:675:28, col:179> col:43 _fread_nolock 'size_t (void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1141e64f5d0 <col:97, col:104> col:104 _DstBuf 'void *'
| |-ParmVarDecl 0x1141e64f648 <col:118, col:125> col:125 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e64f6c0 <col:144, col:151> col:151 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1141e64f738 <col:167, col:174> col:174 _File 'FILE *'
|-FunctionDecl 0x1141e64ccb0 <line:676:28, col:203> col:43 _fread_nolock_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1141e64f960 <col:99, col:106> col:106 _DstBuf 'void *'
| |-ParmVarDecl 0x1141e64f9d8 <col:120, col:127> col:127 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e64fa50 <col:142, col:149> col:149 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e64cae0 <col:168, col:175> col:175 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1141e64cb58 <col:191, col:198> col:198 _File 'FILE *'
|-FunctionDecl 0x1141e64cfc0 <line:677:28, col:111> col:40 _fseek_nolock 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x1141e64cda0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1141e64ce20 <col:81, col:86> col:86 _Offset 'long'
| `-ParmVarDecl 0x1141e64cea0 <col:100, col:104> col:104 _Origin 'int'
|-FunctionDecl 0x1141e64d180 <line:678:24, col:71> col:37 _ftell_nolock 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x1141e64d0a0 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x1141e64d470 <line:679:28, col:117> col:40 _fseeki64_nolock 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x1141e64d250 <col:65, col:72> col:72 _File 'FILE *'
| |-ParmVarDecl 0x1141e64d2d0 <col:84, col:92> col:92 _Offset 'long long'
| `-ParmVarDecl 0x1141e64d350 <col:106, col:110> col:110 _Origin 'int'
|-FunctionDecl 0x1141e64d630 <line:680:24, col:77> col:40 _ftelli64_nolock 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x1141e64d550 <col:65, col:72> col:72 _File 'FILE *'
|-FunctionDecl 0x1141e64d9a8 <line:681:28, col:170> col:43 _fwrite_nolock 'size_t (const void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (const void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1141e64d708 <col:89, col:102> col:102 _DstBuf 'const void *'
| |-ParmVarDecl 0x1141e64d780 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e64d7f8 <col:135, col:142> col:142 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1141e64d870 <col:158, col:165> col:165 _File 'FILE *'
|-FunctionDecl 0x1141e64fc88 <line:682:28, col:89> col:40 _ungetc_nolock 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1141e64fb10 <col:60, col:64> col:64 _Ch 'int'
| `-ParmVarDecl 0x1141e64fb88 <col:77, col:84> col:84 _File 'FILE *'
|-FunctionDecl 0x1141e64ffc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:709:136> col:57 tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x1141e64fe40 <col:76, col:89> col:89 _Directory 'const char *'
| |-ParmVarDecl 0x1141e64fec0 <col:112, col:125> col:125 _FilePrefix 'const char *'
| `-DeprecatedAttr 0x1141e650070 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tempnam. See online help for details." ""
|-FunctionDecl 0x1141e650328 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:715:89> col:75 fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1141e6503c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcloseall. See online help for details." ""
|-FunctionDecl 0x1141e650708 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:716:127> col:71 fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x1141e650590 <col:83, col:87> col:87 _FileHandle 'int'
| |-ParmVarDecl 0x1141e650610 <col:107, col:120> col:120 _Format 'const char *'
| `-DeprecatedAttr 0x1141e6507b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fdopen. See online help for details." ""
|-FunctionDecl 0x1141e64bad0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:717:87> col:74 fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1141e64bb70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fgetchar. See online help for details." ""
|-FunctionDecl 0x1141e64be10 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:718:92> col:68 fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x1141e64bd30 <col:80, col:87> col:87 _File 'FILE *'
| `-DeprecatedAttr 0x1141e64beb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fileno. See online help for details." ""
|-FunctionDecl 0x1141e64c138 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:719:87> col:74 flushall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1141e64c1d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _flushall. See online help for details." ""
|-FunctionDecl 0x1141e64c480 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:720:95> col:74 fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| |-ParmVarDecl 0x1141e64c3a0 <col:88, col:92> col:92 _Ch 'int'
| `-DeprecatedAttr 0x1141e64c528 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fputchar. See online help for details." ""
|-FunctionDecl 0x1141e64c808 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:721:91> col:66 getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x1141e64c728 <col:79, col:86> col:86 _File 'FILE *'
| `-DeprecatedAttr 0x1141e64c8b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _getw. See online help for details." ""
|-FunctionDecl 0x1141e650c98 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:722:109> col:70 putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1141e650b20 <col:80, col:84> col:84 _Ch 'int'
| |-ParmVarDecl 0x1141e650b98 <col:97, col:104> col:104 _File 'FILE *'
| `-DeprecatedAttr 0x1141e650d48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putw. See online help for details." ""
|-FunctionDecl 0x1141e651008 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:723:77> col:67 rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1141e6510a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _rmtmp. See online help for details." ""
|-TypedefDecl 0x1141e651378 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:52:1, col:24> col:24 referenced _onexit_t 'int (*)(void) __attribute__((cdecl))'
| `-PointerType 0x1141e651310 'int (*)(void) __attribute__((cdecl))'
|   `-AttributedType 0x1141e6512b0 'int (void) __attribute__((cdecl))' sugar
|     |-ParenType 0x1141e651260 'int (void)' sugar
|     | `-FunctionProtoType 0x1141e5bd610 'int (void)' cdecl
|     |   `-BuiltinType 0x1141ca83c90 'int'
|     `-ParenType 0x1141e651260 'int (void)' sugar
|       `-FunctionProtoType 0x1141e5bd610 'int (void)' cdecl
|         `-BuiltinType 0x1141ca83c90 'int'
|-RecordDecl 0x1141e6513d0 <line:75:9, line:78:1> line:75:16 struct _div_t definition
| |-MaxFieldAlignmentAttr 0x1141e651490 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1141e651508 <line:76:9, col:13> col:13 quot 'int'
| `-FieldDecl 0x1141e651578 <line:77:9, col:13> col:13 rem 'int'
|-TypedefDecl 0x1141e651628 <line:75:1, line:78:3> col:3 referenced div_t 'struct _div_t':'struct _div_t'
| `-ElaboratedType 0x1141e6515d0 'struct _div_t' sugar
|   `-RecordType 0x1141e651470 'struct _div_t'
|     `-Record 0x1141e6513d0 '_div_t'
|-RecordDecl 0x1141e651698 <line:80:9, line:83:1> line:80:16 struct _ldiv_t definition
| |-MaxFieldAlignmentAttr 0x1141e651750 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1141e6517c8 <line:81:9, col:14> col:14 quot 'long'
| `-FieldDecl 0x1141e651838 <line:82:9, col:14> col:14 rem 'long'
|-TypedefDecl 0x1141e6518e8 <line:80:1, line:83:3> col:3 referenced ldiv_t 'struct _ldiv_t':'struct _ldiv_t'
| `-ElaboratedType 0x1141e651890 'struct _ldiv_t' sugar
|   `-RecordType 0x1141e651730 'struct _ldiv_t'
|     `-Record 0x1141e651698 '_ldiv_t'
|-RecordDecl 0x1141e651958 <line:85:9, line:88:1> line:85:16 struct _lldiv_t definition
| |-MaxFieldAlignmentAttr 0x1141e651a10 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1141e651a88 <line:86:9, col:19> col:19 quot 'long long'
| `-FieldDecl 0x1141e660c10 <line:87:9, col:19> col:19 rem 'long long'
|-TypedefDecl 0x1141e660cc8 <line:85:1, line:88:3> col:3 referenced lldiv_t 'struct _lldiv_t':'struct _lldiv_t'
| `-ElaboratedType 0x1141e660c70 'struct _lldiv_t' sugar
|   `-RecordType 0x1141e6519f0 'struct _lldiv_t'
|     `-Record 0x1141e651958 '_lldiv_t'
|-RecordDecl 0x1141e660d60 <line:103:9, line:105:1> line:103:9 struct definition
| |-MaxFieldAlignmentAttr 0x1141e660e20 <<invalid sloc>> Implicit 32
| `-FieldDecl 0x1141e660f20 <line:104:5, col:24> col:19 ld 'unsigned char [10]'
|-TypedefDecl 0x1141e660fd8 <line:103:1, line:105:3> col:3 referenced _LDOUBLE 'struct _LDOUBLE':'_LDOUBLE'
| `-ElaboratedType 0x1141e660f80 'struct _LDOUBLE' sugar
|   `-RecordType 0x1141e660e00 '_LDOUBLE'
|     `-Record 0x1141e660d60 ''
|-RecordDecl 0x1141e661048 <line:122:9, line:124:1> line:122:9 struct definition
| `-FieldDecl 0x1141e661118 <line:123:9, col:16> col:16 x 'double'
|-TypedefDecl 0x1141e6611c8 <line:122:1, line:124:3> col:3 referenced _CRT_DOUBLE 'struct _CRT_DOUBLE':'_CRT_DOUBLE'
| `-ElaboratedType 0x1141e661170 'struct _CRT_DOUBLE' sugar
|   `-RecordType 0x1141e6610e0 '_CRT_DOUBLE'
|     `-Record 0x1141e661048 ''
|-RecordDecl 0x1141e661238 <line:126:9, line:128:1> line:126:9 struct definition
| `-FieldDecl 0x1141e661308 <line:127:5, col:11> col:11 f 'float'
|-TypedefDecl 0x1141e6613b8 <line:126:1, line:128:3> col:3 referenced _CRT_FLOAT 'struct _CRT_FLOAT':'_CRT_FLOAT'
| `-ElaboratedType 0x1141e661360 'struct _CRT_FLOAT' sugar
|   `-RecordType 0x1141e6612d0 '_CRT_FLOAT'
|     `-Record 0x1141e661238 ''
|-RecordDecl 0x1141e661428 <line:134:9, line:139:1> line:134:9 struct definition
| `-FieldDecl 0x1141e6614f8 <line:138:9, col:21> col:21 x 'long double'
|-TypedefDecl 0x1141e6615a8 <line:134:1, line:139:3> col:3 _LONGDOUBLE 'struct _LONGDOUBLE':'_LONGDOUBLE'
| `-ElaboratedType 0x1141e661550 'struct _LONGDOUBLE' sugar
|   `-RecordType 0x1141e6614c0 '_LONGDOUBLE'
|     `-Record 0x1141e661428 ''
|-RecordDecl 0x1141e661640 <line:144:9, line:146:1> line:144:9 struct definition
| |-MaxFieldAlignmentAttr 0x1141e661700 <<invalid sloc>> Implicit 32
| `-FieldDecl 0x1141e661800 <line:145:5, col:26> col:19 ld12 'unsigned char [12]'
|-TypedefDecl 0x1141e6618b8 <line:144:1, line:146:3> col:3 _LDBL12 'struct _LDBL12':'_LDBL12'
| `-ElaboratedType 0x1141e661860 'struct _LDBL12' sugar
|   `-RecordType 0x1141e6616e0 '_LDBL12'
|     `-Record 0x1141e661640 ''
|-VarDecl 0x1141e661940 <line:170:9, col:20> col:20 __mb_cur_max 'int' extern
|-FunctionDecl 0x1141e661a90 <line:175:9, col:44> col:21 ___mb_cur_max_func 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1141e65fcc8 <line:176:9, col:51> col:21 ___mb_cur_max_l_func 'int (_locale_t) __attribute__((cdecl))':'int (_locale_t)'
| `-ParmVarDecl 0x1141e661b58 <col:42> col:51 '_locale_t':'struct localeinfo_struct *'
|-TypedefDecl 0x1141e65ff10 <line:215:1, col:24> col:24 referenced _purecall_handler 'void (*)(void) __attribute__((cdecl))'
| `-PointerType 0x1141e65feb0 'void (*)(void) __attribute__((cdecl))'
|   `-AttributedType 0x1141e65fe50 'void (void) __attribute__((cdecl))' sugar
|     |-ParenType 0x1141e65fe00 'void (void)' sugar
|     | `-FunctionProtoType 0x1141e586c70 'void (void)' cdecl
|     |   `-BuiltinType 0x1141ca83bf0 'void'
|     `-ParenType 0x1141e65fe00 'void (void)' sugar
|       `-FunctionProtoType 0x1141e586c70 'void (void)' cdecl
|         `-BuiltinType 0x1141ca83bf0 'void'
|-FunctionDecl 0x1141e660110 <line:218:9, col:92> col:35 _set_purecall_handler '_purecall_handler (_purecall_handler) __attribute__((cdecl))':'_purecall_handler (_purecall_handler)'
| `-ParmVarDecl 0x1141e65ffa0 <col:66, col:84> col:84 _Handler '_purecall_handler':'void (*)(void) __attribute__((cdecl))'
|-FunctionDecl 0x1141e660328 <line:219:9, col:61> col:35 _get_purecall_handler '_purecall_handler (void) __attribute__((cdecl))':'_purecall_handler (void)'
|-TypedefDecl 0x1141e660778 <line:235:1, col:24> col:24 referenced _invalid_parameter_handler 'void (*)(const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((cdecl))'
| `-PointerType 0x1141e6606f0 'void (*)(const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((cdecl))'
|   `-AttributedType 0x1141e660690 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((cdecl))' sugar
|     |-ParenType 0x1141e660640 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t)' sugar
|     | `-FunctionProtoType 0x1141e5abf30 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t)' cdecl
|     |   |-BuiltinType 0x1141ca83bf0 'void'
|     |   |-PointerType 0x1141e587040 'const wchar_t *'
|     |   | `-QualType 0x1141e586ff1 'const wchar_t' const
|     |   |   `-TypedefType 0x1141e586ff0 'wchar_t' sugar
|     |   |     |-Typedef 0x1141e5868e0 'wchar_t'
|     |   |     `-BuiltinType 0x1141ca83d10 'unsigned short'
|     |   |-PointerType 0x1141e587040 'const wchar_t *'
|     |   | `-QualType 0x1141e586ff1 'const wchar_t' const
|     |   |   `-TypedefType 0x1141e586ff0 'wchar_t' sugar
|     |   |     |-Typedef 0x1141e5868e0 'wchar_t'
|     |   |     `-BuiltinType 0x1141ca83d10 'unsigned short'
|     |   |-PointerType 0x1141e587040 'const wchar_t *'
|     |   | `-QualType 0x1141e586ff1 'const wchar_t' const
|     |   |   `-TypedefType 0x1141e586ff0 'wchar_t' sugar
|     |   |     |-Typedef 0x1141e5868e0 'wchar_t'
|     |   |     `-BuiltinType 0x1141ca83d10 'unsigned short'
|     |   |-BuiltinType 0x1141ca83d30 'unsigned int'
|     |   `-TypedefType 0x1141e587250 'uintptr_t' sugar
|     |     |-Typedef 0x1141ca84a10 'uintptr_t'
|     |     `-BuiltinType 0x1141ca83d70 'unsigned long long'
|     `-ParenType 0x1141e660640 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t)' sugar
|       `-FunctionProtoType 0x1141e5abf30 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t)' cdecl
|         |-BuiltinType 0x1141ca83bf0 'void'
|         |-PointerType 0x1141e587040 'const wchar_t *'
|         | `-QualType 0x1141e586ff1 'const wchar_t' const
|         |   `-TypedefType 0x1141e586ff0 'wchar_t' sugar
|         |     |-Typedef 0x1141e5868e0 'wchar_t'
|         |     `-BuiltinType 0x1141ca83d10 'unsigned short'
|         |-PointerType 0x1141e587040 'const wchar_t *'
|         | `-QualType 0x1141e586ff1 'const wchar_t' const
|         |   `-TypedefType 0x1141e586ff0 'wchar_t' sugar
|         |     |-Typedef 0x1141e5868e0 'wchar_t'
|         |     `-BuiltinType 0x1141ca83d10 'unsigned short'
|         |-PointerType 0x1141e587040 'const wchar_t *'
|         | `-QualType 0x1141e586ff1 'const wchar_t' const
|         |   `-TypedefType 0x1141e586ff0 'wchar_t' sugar
|         |     |-Typedef 0x1141e5868e0 'wchar_t'
|         |     `-BuiltinType 0x1141ca83d10 'unsigned short'
|         |-BuiltinType 0x1141ca83d30 'unsigned int'
|         `-TypedefType 0x1141e587250 'uintptr_t' sugar
|           |-Typedef 0x1141ca84a10 'uintptr_t'
|           `-BuiltinType 0x1141ca83d70 'unsigned long long'
|-FunctionDecl 0x1141e660970 <line:238:9, col:119> col:44 _set_invalid_parameter_handler '_invalid_parameter_handler (_invalid_parameter_handler) __attribute__((cdecl))':'_invalid_parameter_handler (_invalid_parameter_handler)'
| `-ParmVarDecl 0x1141e660800 <col:84, col:111> col:111 _Handler '_invalid_parameter_handler':'void (*)(const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((cdecl))'
|-FunctionDecl 0x1141e65abb0 <line:239:9, col:79> col:44 _get_invalid_parameter_handler '_invalid_parameter_handler (void) __attribute__((cdecl))':'_invalid_parameter_handler (void)'
|-FunctionDecl 0x1141e65ad90 <line:245:9, col:41> col:30 _errno 'int *(void) __attribute__((cdecl))':'int *(void)' extern
|-FunctionDecl 0x1141e65afa0 <line:248:1, col:43> col:17 _set_errno 'errno_t (int) __attribute__((cdecl))':'errno_t (int)'
| `-ParmVarDecl 0x1141e65ae60 <col:33, col:37> col:37 _Value 'int'
|-FunctionDecl 0x1141e65b1f0 <line:249:1, col:46> col:17 _get_errno 'errno_t (int *) __attribute__((cdecl))':'errno_t (int *)'
| `-ParmVarDecl 0x1141e65b078 <col:34, col:40> col:40 _Value 'int *'
|-FunctionDecl 0x1141e65b410 <line:252:9, col:48> col:33 __doserrno 'unsigned long *(void) __attribute__((cdecl))':'unsigned long *(void)'
|-FunctionDecl 0x1141e65b650 <line:255:1, col:56> col:17 _set_doserrno 'errno_t (unsigned long) __attribute__((cdecl))':'errno_t (unsigned long)'
| `-ParmVarDecl 0x1141e65b4e0 <col:36, col:50> col:50 _Value 'unsigned long'
|-FunctionDecl 0x1141e65b8a0 <line:256:1, col:59> col:17 _get_doserrno 'errno_t (unsigned long *) __attribute__((cdecl))':'errno_t (unsigned long *)'
| `-ParmVarDecl 0x1141e65b728 <col:37, col:53> col:53 _Value 'unsigned long *'
|-FunctionDecl 0x1141e662c30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:259:77> col:59 __sys_errlist 'char **(void) __attribute__((cdecl))':'char **(void)'
| `-DeprecatedAttr 0x1141e662cd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e662f90 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:262:72> col:57 __sys_nerr 'int *(void) __attribute__((cdecl))':'int *(void)'
| `-DeprecatedAttr 0x1141e663030 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-VarDecl 0x1141e663178 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:288:9, col:20> col:20 __argc 'int' extern
|-VarDecl 0x1141e663210 <line:289:9, col:24> col:24 __argv 'char **' extern
|-VarDecl 0x1141e663300 <line:290:9, col:27> col:27 __wargv 'wchar_t **' extern
|-VarDecl 0x1141e663398 <line:306:9, col:24> col:24 _environ 'char **' extern
|-VarDecl 0x1141e663430 <line:307:9, col:27> col:27 _wenviron 'wchar_t **' extern
|-VarDecl 0x1141e663588 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:311:68> col:68 _pgmptr 'char *' extern
| `-DeprecatedAttr 0x1141e6635f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_pgmptr instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-VarDecl 0x1141e6637f0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:312:72> col:72 _wpgmptr 'wchar_t *' extern
| `-DeprecatedAttr 0x1141e663858 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_wpgmptr instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e663b10 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:339:1, col:61> col:17 _get_pgmptr 'errno_t (char **) __attribute__((cdecl))':'errno_t (char **)'
| `-ParmVarDecl 0x1141e6639a0 <col:47, col:55> col:55 _Value 'char **'
|-FunctionDecl 0x1141e65bd30 <line:340:1, col:65> col:17 _get_wpgmptr 'errno_t (wchar_t **) __attribute__((cdecl))':'errno_t (wchar_t **)'
| `-ParmVarDecl 0x1141e65bbc0 <col:48, col:59> col:59 _Value 'wchar_t **'
|-VarDecl 0x1141e65bec8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:346:64> col:64 _fmode 'int' extern
| `-DeprecatedAttr 0x1141e65bf30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_fmode instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e65c150 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:353:9, col:50> col:25 _set_fmode 'errno_t (int) __attribute__((cdecl))':'errno_t (int)'
| `-ParmVarDecl 0x1141e65c078 <col:41, col:45> col:45 _Mode 'int'
|-FunctionDecl 0x1141e65c300 <line:354:9, col:54> col:25 _get_fmode 'errno_t (int *) __attribute__((cdecl))':'errno_t (int *)'
| `-ParmVarDecl 0x1141e65c228 <col:42, col:48> col:48 _PMode 'int *'
|-FunctionDecl 0x1141e65c550 <line:376:43> col:43 implicit exit 'void (int) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x1141e65c5f0 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1141e65c660 prev 0x1141e65c550 <col:9, col:62> col:43 exit 'void (int) __attribute__((noreturn))'
| `-ParmVarDecl 0x1141e65c3d8 <col:53, col:57> col:57 _Code 'int'
|-FunctionDecl 0x1141e65c810 <line:378:43> col:43 implicit _exit 'void (int) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x1141e65c8b0 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1141e65c920 prev 0x1141e65c810 <col:9, col:63> col:43 _exit 'void (int) __attribute__((noreturn))'
| `-ParmVarDecl 0x1141e65c738 <col:54, col:58> col:58 _Code 'int'
|-FunctionDecl 0x1141e65caa8 <line:379:43> col:43 implicit abort 'void (void) __attribute__((noreturn))' extern
|-FunctionDecl 0x1141e664c50 prev 0x1141e65caa8 <col:9, col:53> col:43 abort 'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x1141e664f10 <line:382:9, col:99> col:30 _set_abort_behavior 'unsigned int (unsigned int, unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int, unsigned int)'
| |-ParmVarDecl 0x1141e664d20 <col:55, col:68> col:68 _Flags 'unsigned int'
| `-ParmVarDecl 0x1141e664da0 <col:81, col:94> col:94 _Mask 'unsigned int'
|-FunctionDecl 0x1141e6650d0 <line:384:19> col:19 implicit abs 'int (int)' extern
| |-ParmVarDecl 0x1141e665170 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1141e6651e0 <col:19> Implicit
| `-ConstAttr 0x1141e665238 <col:19> Implicit
|-FunctionDecl 0x1141e665260 prev 0x1141e6650d0 <col:1, col:34> col:19 abs 'int (int)'
| |-ParmVarDecl 0x1141e664ff0 <col:28, col:32> col:32 _X 'int'
| |-NoThrowAttr 0x1141e665350 <col:19> Inherited Implicit
| `-ConstAttr 0x1141e665378 <col:19> Inherited Implicit
|-FunctionDecl 0x1141e665508 <line:385:19> col:19 implicit labs 'long (long)' extern
| |-ParmVarDecl 0x1141e6655a8 <<invalid sloc>> <invalid sloc> 'long'
| |-NoThrowAttr 0x1141e665618 <col:19> Implicit
| `-ConstAttr 0x1141e665670 <col:19> Implicit
|-FunctionDecl 0x1141e665698 prev 0x1141e665508 <col:1, col:36> col:19 labs 'long (long)'
| |-ParmVarDecl 0x1141e6653b8 <col:29, col:34> col:34 _X 'long'
| |-NoThrowAttr 0x1141e665788 <col:19> Inherited Implicit
| `-ConstAttr 0x1141e6657b0 <col:19> Inherited Implicit
|-FunctionDecl 0x1141e665938 <line:386:19> col:19 implicit llabs 'long long (long long)' extern
| |-ParmVarDecl 0x1141e6659d8 <<invalid sloc>> <invalid sloc> 'long long'
| |-NoThrowAttr 0x1141e665a48 <col:19> Implicit
| `-ConstAttr 0x1141e665aa0 <col:19> Implicit
|-FunctionDecl 0x1141e665ac8 prev 0x1141e665938 <col:1, col:42> col:19 llabs 'long long (long long)'
| |-ParmVarDecl 0x1141e6657f0 <col:30, col:40> col:40 _X 'long long'
| |-NoThrowAttr 0x1141e665bb8 <col:19> Inherited Implicit
| `-ConstAttr 0x1141e665be0 <col:19> Inherited Implicit
|-FunctionDecl 0x1141e665d28 <line:388:9, col:42> col:28 _abs64 'long long (long long) __attribute__((cdecl))':'long long (long long)'
| `-ParmVarDecl 0x1141e665c60 <col:35> col:42 'long long'
|-FunctionDecl 0x1141e666028 <line:426:9, col:53> col:24 atexit 'int (void (*)(void) __attribute__((cdecl))) __attribute__((cdecl))':'int (void (*)(void) __attribute__((cdecl)))'
| `-ParmVarDecl 0x1141e665ec0 <col:31, col:45> col:46 'void (*)(void) __attribute__((cdecl))'
|-FunctionDecl 0x1141e666248 <line:428:24, col:71> col:40 atof 'double (const char *) __attribute__((cdecl))':'double (const char *)'
| `-ParmVarDecl 0x1141e666100 <col:52, col:64> col:64 _String 'const char *'
|-FunctionDecl 0x1141e666540 <line:429:24, col:102> col:40 _atof_l 'double (const char *, _locale_t) __attribute__((cdecl))':'double (const char *, _locale_t)'
| |-ParmVarDecl 0x1141e666320 <col:55, col:67> col:67 _String 'const char *'
| `-ParmVarDecl 0x1141e666398 <col:85, col:95> col:95 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1141e666700 <line:430:43, col:86> col:58 atoi 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1141e666620 <col:70, col:82> col:82 _Str 'const char *'
|-FunctionDecl 0x1141e666a00 <line:431:24, col:98> col:39 _atoi_l 'int (const char *, _locale_t) __attribute__((cdecl))':'int (const char *, _locale_t)'
| |-ParmVarDecl 0x1141e6667d8 <col:54, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x1141e666850 <col:81, col:91> col:91 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1141e65ebf0 <line:432:24, col:67> col:39 atol 'long (const char *) __attribute__((cdecl))':'long (const char *)'
| `-ParmVarDecl 0x1141e666ae0 <col:51, col:63> col:63 _Str 'const char *'
|-FunctionDecl 0x1141e65eef0 <line:433:24, col:98> col:39 _atol_l 'long (const char *, _locale_t) __attribute__((cdecl))':'long (const char *, _locale_t)'
| |-ParmVarDecl 0x1141e65ecc8 <col:54, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x1141e65ed40 <col:81, col:91> col:91 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1141e65f118 <line:434:24, col:71> col:42 atoll 'long long (const char *) __attribute__((cdecl))':'long long (const char *)'
| `-ParmVarDecl 0x1141e65efd0 <col:55, col:67> col:67 _Str 'const char *'
|-FunctionDecl 0x1141e65f410 <line:435:24, col:102> col:42 _atoll_l 'long long (const char *, _locale_t) __attribute__((cdecl))':'long long (const char *, _locale_t)'
| |-ParmVarDecl 0x1141e65f1f0 <col:58, col:70> col:70 _Str 'const char *'
| `-ParmVarDecl 0x1141e65f268 <col:85, col:95> col:95 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1141e66adc0 <line:439:24, line:441:97> line:439:39 bsearch_s 'void *(const void *, const void *, rsize_t, rsize_t, int (*)(void *, const void *, const void *) __attribute__((cdecl)), void *) __attribute__((cdecl))':'void *(const void *, const void *, rsize_t, rsize_t, int (*)(void *, const void *, const void *) __attribute__((cdecl)), void *)'
| |-ParmVarDecl 0x1141e65f4f0 <col:54, col:67> col:67 _Key 'const void *'
| |-ParmVarDecl 0x1141e65f570 <col:124, col:137> col:137 _Base 'const void *'
| |-ParmVarDecl 0x1141e65f5e8 <line:440:14, col:22> col:22 _NumOfElements 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1141e65f660 <col:43, col:51> col:51 _SizeOfElements 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1141e65f9c0 <line:441:14, col:29> col:29 _PtFuncCompare 'int (*)(void *, const void *, const void *) __attribute__((cdecl))'
| `-ParmVarDecl 0x1141e65fa40 <col:82, col:89> col:89 _Context 'void *'
|-FunctionDecl 0x1141e66b548 <line:443:24, line:445:72> line:443:39 bsearch 'void *(const void *, const void *, size_t, size_t, int (*)(const void *, const void *) __attribute__((cdecl))) __attribute__((cdecl))':'void *(const void *, const void *, size_t, size_t, int (*)(const void *, const void *) __attribute__((cdecl)))'
| |-ParmVarDecl 0x1141e66aec0 <col:52, col:65> col:65 _Key 'const void *'
| |-ParmVarDecl 0x1141e66af40 <col:122, col:135> col:135 _Base 'const void *'
| |-ParmVarDecl 0x1141e66afb8 <line:444:14, col:21> col:21 _NumOfElements 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e66b030 <col:42, col:49> col:49 _SizeOfElements 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1141e66b308 <line:445:14, col:29> col:29 _PtFuncCompare 'int (*)(const void *, const void *) __attribute__((cdecl))'
|-FunctionDecl 0x1141e66dce0 <line:448:9, line:450:96> line:448:22 qsort_s 'void (void *, rsize_t, rsize_t, int (*)(void *, const void *, const void *) __attribute__((cdecl)), void *) __attribute__((cdecl))':'void (void *, rsize_t, rsize_t, int (*)(void *, const void *, const void *) __attribute__((cdecl)), void *)'
| |-ParmVarDecl 0x1141e66b640 <col:85, col:92> col:92 _Base 'void *'
| |-ParmVarDecl 0x1141e66b6b8 <line:449:14, col:22> col:22 _NumOfElements 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1141e66b730 <col:43, col:51> col:51 _SizeOfElements 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1141e66b998 <line:450:14, col:29> col:29 _PtFuncCompare 'int (*)(void *, const void *, const void *) __attribute__((cdecl))'
| `-ParmVarDecl 0x1141e66ba18 <col:82, col:88> col:88 _Context 'void *'
|-FunctionDecl 0x1141e66e2a8 <line:452:9, line:454:72> line:452:22 qsort 'void (void *, size_t, size_t, int (*)(const void *, const void *) __attribute__((cdecl))) __attribute__((cdecl))':'void (void *, size_t, size_t, int (*)(const void *, const void *) __attribute__((cdecl)))'
| |-ParmVarDecl 0x1141e66ddd8 <col:84, col:91> col:91 _Base 'void *'
| |-ParmVarDecl 0x1141e66de50 <line:453:14, col:21> col:21 _NumOfElements 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e66dec8 <col:42, col:49> col:49 _SizeOfElements 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1141e66e0a8 <line:454:14, col:29> col:29 _PtFuncCompare 'int (*)(const void *, const void *) __attribute__((cdecl))'
|-FunctionDecl 0x1141e66e4a8 <line:456:47> col:47 implicit _byteswap_ushort 'unsigned short (unsigned short)' extern
| |-ParmVarDecl 0x1141e66e548 <<invalid sloc>> <invalid sloc> 'unsigned short'
| |-NoThrowAttr 0x1141e66e5b8 <col:47> Implicit
| `-ConstAttr 0x1141e66e610 <col:47> Implicit
|-FunctionDecl 0x1141e66e638 prev 0x1141e66e4a8 <col:24, col:90> col:47 _byteswap_ushort 'unsigned short (unsigned short)'
| |-ParmVarDecl 0x1141e66e398 <col:69, col:84> col:84 _Short 'unsigned short'
| |-NoThrowAttr 0x1141e66e728 <col:47> Inherited Implicit
| `-ConstAttr 0x1141e66e750 <col:47> Inherited Implicit
|-FunctionDecl 0x1141e66e8d8 <line:457:47> col:47 implicit _byteswap_ulong 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x1141e66e978 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x1141e66e9e8 <col:47> Implicit
| `-ConstAttr 0x1141e66ea40 <col:47> Implicit
|-FunctionDecl 0x1141e66ea68 prev 0x1141e66e8d8 <col:24, col:88> col:47 _byteswap_ulong 'unsigned long (unsigned long)'
| |-ParmVarDecl 0x1141e66e790 <col:69, col:83> col:83 _Long 'unsigned long'
| |-NoThrowAttr 0x1141e66eb58 <col:47> Inherited Implicit
| `-ConstAttr 0x1141e66eb80 <col:47> Inherited Implicit
|-FunctionDecl 0x1141e66cd08 <line:458:49> col:49 implicit _byteswap_uint64 'unsigned long long (unsigned long long)' extern
| |-ParmVarDecl 0x1141e66cda8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-NoThrowAttr 0x1141e66ce18 <col:49> Implicit
| `-ConstAttr 0x1141e66ce70 <col:49> Implicit
|-FunctionDecl 0x1141e66ce98 prev 0x1141e66cd08 <col:24, col:94> col:49 _byteswap_uint64 'unsigned long long (unsigned long long)'
| |-ParmVarDecl 0x1141e66ebc0 <col:71, col:88> col:88 _Int64 'unsigned long long'
| |-NoThrowAttr 0x1141e66cf88 <col:49> Inherited Implicit
| `-ConstAttr 0x1141e66cfb0 <col:49> Inherited Implicit
|-FunctionDecl 0x1141e66d238 <line:459:24, col:85> col:39 div 'div_t (int, int) __attribute__((cdecl))':'div_t (int, int)'
| |-ParmVarDecl 0x1141e66d018 <col:48, col:52> col:52 _Numerator 'int'
| `-ParmVarDecl 0x1141e66d098 <col:69, col:73> col:73 _Denominator 'int'
|-FunctionDecl 0x1141e66d528 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:462:109> col:74 getenv 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x1141e66d3d8 <col:88, col:101> col:101 _VarName 'const char *'
| `-DeprecatedAttr 0x1141e66d5d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _dupenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e66dae8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:464:28, col:177> col:44 getenv_s 'errno_t (size_t *, char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (size_t *, char *, rsize_t, const char *)'
| |-ParmVarDecl 0x1141e66d768 <col:59, col:68> col:68 _ReturnSize 'size_t *'
| |-ParmVarDecl 0x1141e66d7e8 <col:110, col:117> col:117 _DstBuf 'char *'
| |-ParmVarDecl 0x1141e66d860 <col:131, col:139> col:139 _DstSize 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1141e66d8e0 <col:156, col:169> col:169 _VarName 'const char *'
|-FunctionDecl 0x1141e667e50 <line:472:28, col:212> col:44 _dupenv_s 'errno_t (char **, size_t *, const char *) __attribute__((cdecl))':'errno_t (char **, size_t *, const char *)'
| |-ParmVarDecl 0x1141e66dbd8 <col:127, col:134> col:134 _PBuffer 'char **'
| |-ParmVarDecl 0x1141e66dc50 <col:154, col:163> col:163 _PBufferSizeInBytes 'size_t *'
| `-ParmVarDecl 0x1141e667c80 <col:191, col:204> col:204 _VarName 'const char *'
|-FunctionDecl 0x1141e6682b8 <line:479:28, col:141> col:44 _itoa_s 'errno_t (int, char *, size_t, int) __attribute__((cdecl))':'errno_t (int, char *, size_t, int)'
| |-ParmVarDecl 0x1141e667f38 <col:57, col:61> col:61 _Value 'int'
| |-ParmVarDecl 0x1141e667fb8 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1141e668030 <col:112, col:119> col:119 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1141e6680b0 <col:131, col:135> col:135 _Radix 'int'
|-FunctionDecl 0x1141e668708 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:481:79 _itoa 'char *(int, char *, int) __attribute__((cdecl))':'char *(int, char *, int)'
| |-ParmVarDecl 0x1141e668468 <col:91, col:96> col:96 _Value 'int'
| |-ParmVarDecl 0x1141e6684e8 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x1141e668568 <col:146, col:151> col:151 _Radix 'int'
| `-DeprecatedAttr 0x1141e6687c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _itoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e666cb8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:482:28, col:145> col:44 _i64toa_s 'errno_t (long long, char *, size_t, int) __attribute__((cdecl))':'errno_t (long long, char *, size_t, int)'
| |-ParmVarDecl 0x1141e668908 <col:59, col:67> col:67 _Val 'long long'
| |-ParmVarDecl 0x1141e668988 <col:95, col:102> col:102 _DstBuf 'char *'
| |-ParmVarDecl 0x1141e668a00 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1141e668a80 <col:135, col:139> col:139 _Radix 'int'
|-FunctionDecl 0x1141e667108 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:483:140> col:59 _i64toa 'char *(long long, char *, int) __attribute__((cdecl))':'char *(long long, char *, int)'
| |-ParmVarDecl 0x1141e666e68 <col:72, col:80> col:80 _Val 'long long'
| |-ParmVarDecl 0x1141e666ee8 <col:109, col:116> col:116 _DstBuf 'char *'
| |-ParmVarDecl 0x1141e666f68 <col:130, col:134> col:134 _Radix 'int'
| `-DeprecatedAttr 0x1141e6671c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _i64toa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e667688 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:484:28, col:155> col:44 _ui64toa_s 'errno_t (unsigned long long, char *, size_t, int) __attribute__((cdecl))':'errno_t (unsigned long long, char *, size_t, int)'
| |-ParmVarDecl 0x1141e667308 <col:60, col:77> col:77 _Val 'unsigned long long'
| |-ParmVarDecl 0x1141e667388 <col:105, col:112> col:112 _DstBuf 'char *'
| |-ParmVarDecl 0x1141e667400 <col:126, col:133> col:133 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1141e667480 <col:145, col:149> col:149 _Radix 'int'
|-FunctionDecl 0x1141e667ad8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:485:151> col:60 _ui64toa 'char *(unsigned long long, char *, int) __attribute__((cdecl))':'char *(unsigned long long, char *, int)'
| |-ParmVarDecl 0x1141e667838 <col:74, col:91> col:91 _Val 'unsigned long long'
| |-ParmVarDecl 0x1141e6678b8 <col:120, col:127> col:127 _DstBuf 'char *'
| |-ParmVarDecl 0x1141e667938 <col:141, col:145> col:145 _Radix 'int'
| `-DeprecatedAttr 0x1141e667b90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ui64toa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e669e80 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:486:24, col:75> col:40 _atoi64 'long long (const char *) __attribute__((cdecl))':'long long (const char *)'
| `-ParmVarDecl 0x1141e669da0 <col:55, col:68> col:68 _String 'const char *'
|-FunctionDecl 0x1141e66a0d0 <line:487:24, col:105> col:40 _atoi64_l 'long long (const char *, _locale_t) __attribute__((cdecl))':'long long (const char *, _locale_t)'
| |-ParmVarDecl 0x1141e669f58 <col:57, col:70> col:70 _String 'const char *'
| `-ParmVarDecl 0x1141e669fd0 <col:88, col:98> col:98 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1141e66a448 <line:488:24, col:136> col:40 _strtoi64 'long long (const char *, char **, int) __attribute__((cdecl))':'long long (const char *, char **, int)'
| |-ParmVarDecl 0x1141e66a1b0 <col:57, col:70> col:70 _String 'const char *'
| |-ParmVarDecl 0x1141e66a230 <col:104, col:112> col:112 _EndPtr 'char **'
| `-ParmVarDecl 0x1141e66a2b0 <col:126, col:130> col:130 _Radix 'int'
|-FunctionDecl 0x1141e66a8b0 <line:489:24, col:166> col:40 _strtoi64_l 'long long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'long long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x1141e66a530 <col:59, col:72> col:72 _String 'const char *'
| |-ParmVarDecl 0x1141e66a5b0 <col:106, col:114> col:114 _EndPtr 'char **'
| |-ParmVarDecl 0x1141e66a630 <col:128, col:132> col:132 _Radix 'int'
| `-ParmVarDecl 0x1141e66a6a8 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1141e66ecf0 <line:490:24, col:146> col:49 _strtoui64 'unsigned long long (const char *, char **, int) __attribute__((cdecl))':'unsigned long long (const char *, char **, int)'
| |-ParmVarDecl 0x1141e66a9a0 <col:67, col:80> col:80 _String 'const char *'
| |-ParmVarDecl 0x1141e66aa20 <col:114, col:122> col:122 _EndPtr 'char **'
| `-ParmVarDecl 0x1141e66aaa0 <col:136, col:140> col:140 _Radix 'int'
|-FunctionDecl 0x1141e66f160 <line:491:24, col:177> col:49 _strtoui64_l 'unsigned long long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'unsigned long long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x1141e66edd8 <col:69, col:82> col:82 _String 'const char *'
| |-ParmVarDecl 0x1141e66ee58 <col:116, col:124> col:124 _EndPtr 'char **'
| |-ParmVarDecl 0x1141e66eed8 <col:138, col:143> col:143 _Radix 'int'
| `-ParmVarDecl 0x1141e66ef50 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1141e66f498 <line:492:24, col:88> col:39 ldiv 'ldiv_t (long, long) __attribute__((cdecl))':'ldiv_t (long, long)'
| |-ParmVarDecl 0x1141e66f278 <col:49, col:54> col:54 _Numerator 'long'
| `-ParmVarDecl 0x1141e66f2f8 <col:71, col:76> col:76 _Denominator 'long'
|-FunctionDecl 0x1141e66f7b8 <line:493:24, col:100> col:40 lldiv 'lldiv_t (long long, long long) __attribute__((cdecl))':'lldiv_t (long long, long long)'
| |-ParmVarDecl 0x1141e66f598 <col:51, col:61> col:61 _Numerator 'long long'
| `-ParmVarDecl 0x1141e66f618 <col:78, col:88> col:88 _Denominator 'long long'
|-FunctionDecl 0x1141e66fc18 <line:515:28, col:140> col:44 _ltoa_s 'errno_t (long, char *, size_t, int) __attribute__((cdecl))':'errno_t (long, char *, size_t, int)'
| |-ParmVarDecl 0x1141e66f898 <col:57, col:62> col:62 _Val 'long'
| |-ParmVarDecl 0x1141e66f918 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x1141e66f990 <col:111, col:118> col:118 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1141e66fa10 <col:130, col:134> col:134 _Radix 'int'
|-FunctionDecl 0x1141e670078 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:517:79 _ltoa 'char *(long, char *, int) __attribute__((cdecl))':'char *(long, char *, int)'
| |-ParmVarDecl 0x1141e66fdd8 <col:91, col:97> col:97 _Value 'long'
| |-ParmVarDecl 0x1141e66fe58 <col:129, col:135> col:135 _Dest 'char *'
| |-ParmVarDecl 0x1141e66fed8 <col:147, col:152> col:152 _Radix 'int'
| `-DeprecatedAttr 0x1141e670130 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ltoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e6704a0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:518:24, col:128> col:39 mblen 'int (const char *, size_t) __attribute__((cdecl))':'int (const char *, size_t)'
| |-ParmVarDecl 0x1141e670278 <col:89, col:102> col:102 _Ch 'const char *'
| `-ParmVarDecl 0x1141e6702f0 <col:112, col:119> col:119 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1141e670848 <line:519:24, col:159> col:39 _mblen_l 'int (const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1141e670580 <col:92, col:105> col:105 _Ch 'const char *'
| |-ParmVarDecl 0x1141e6705f8 <col:115, col:122> col:122 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1141e670670 <col:142, col:152> col:152 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1141e670aa0 <line:520:24, col:73> col:39 _mbstrlen 'size_t (const char *) __attribute__((cdecl))':'size_t (const char *)'
| `-ParmVarDecl 0x1141e670930 <col:56, col:69> col:69 _Str 'const char *'
|-FunctionDecl 0x1141e668d58 <line:521:24, col:102> col:39 _mbstrlen_l 'size_t (const char *, _locale_t) __attribute__((cdecl))':'size_t (const char *, _locale_t)'
| |-ParmVarDecl 0x1141e670b78 <col:58, col:70> col:70 _Str 'const char *'
| `-ParmVarDecl 0x1141e670bf0 <col:85, col:95> col:95 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1141e669058 <line:522:24, col:96> col:39 _mbstrnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x1141e668e38 <col:57, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x1141e668eb0 <col:80, col:87> col:87 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1141e669400 <line:523:24, col:126> col:39 _mbstrnlen_l 'size_t (const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1141e669138 <col:59, col:71> col:71 _Str 'const char *'
| |-ParmVarDecl 0x1141e6691b0 <col:82, col:89> col:89 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1141e669228 <col:109, col:119> col:119 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1141e6697b8 <line:524:9, col:170> col:24 mbtowc 'int (wchar_t *, const char *, size_t) __attribute__((cdecl))':'int (wchar_t *, const char *, size_t)'
| |-ParmVarDecl 0x1141e6694e0 <col:54, col:64> col:64 _DstCh 'wchar_t *'
| |-ParmVarDecl 0x1141e669560 <col:122, col:135> col:135 _SrcCh 'const char *'
| `-ParmVarDecl 0x1141e6695d8 <col:148, col:155> col:155 _SrcSizeInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x1141e671d20 <line:525:9, col:201> col:24 _mbtowc_l 'int (wchar_t *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (wchar_t *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1141e669898 <col:57, col:67> col:67 _DstCh 'wchar_t *'
| |-ParmVarDecl 0x1141e669918 <col:125, col:138> col:138 _SrcCh 'const char *'
| |-ParmVarDecl 0x1141e669990 <col:151, col:158> col:158 _SrcSizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1141e669a08 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1141e672220 <line:526:28, col:271> col:44 mbstowcs_s 'errno_t (size_t *, wchar_t *, size_t, const char *, size_t) __attribute__((cdecl))':'errno_t (size_t *, wchar_t *, size_t, const char *, size_t)'
| |-ParmVarDecl 0x1141e671e08 <col:65, col:74> col:74 _PtNumOfCharConverted 'size_t *'
| |-ParmVarDecl 0x1141e671e80 <col:155, col:165> col:165 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1141e671ef8 <col:179, col:186> col:186 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e671f78 <col:227, col:240> col:240 _SrcBuf 'const char *'
| `-ParmVarDecl 0x1141e671ff0 <col:254, col:261> col:261 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1141e6726a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2007:144> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:528:56 mbstowcs 'size_t (wchar_t *, const char *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const char *, size_t)'
| |-ParmVarDecl 0x1141e6723d0 <col:97, col:106> col:106 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1141e672450 <col:120, col:134> col:134 _Source 'const char *'
| |-ParmVarDecl 0x1141e6724c8 <col:148, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1141e672758 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using mbstowcs_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e673d98 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:530:28, col:301> col:44 _mbstowcs_s_l 'errno_t (size_t *, wchar_t *, size_t, const char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (size_t *, wchar_t *, size_t, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1141e672898 <col:68, col:77> col:77 _PtNumOfCharConverted 'size_t *'
| |-ParmVarDecl 0x1141e672910 <col:158, col:168> col:168 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1141e672988 <col:182, col:189> col:189 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e672a08 <col:230, col:243> col:243 _SrcBuf 'const char *'
| |-ParmVarDecl 0x1141e672a80 <col:257, col:264> col:264 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1141e672af8 <col:284, col:294> col:294 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1141e6742c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2010:160> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:532:59 _mbstowcs_l 'size_t (wchar_t *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1141e673f50 <col:149, col:158> col:158 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1141e673fd0 <col:172, col:186> col:186 _Source 'const char *'
| |-ParmVarDecl 0x1141e674048 <col:200, col:208> col:208 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e6740c0 <col:228, col:239> col:239 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1141e674388 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _mbstowcs_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e674588 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:534:24, col:48> col:39 rand 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1141e674738 <line:539:28, col:73> col:43 _set_error_mode 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1141e674658 <col:64, col:68> col:68 _Mode 'int'
|-FunctionDecl 0x1141e674950 <line:541:9, col:53> col:24 srand 'void (unsigned int) __attribute__((cdecl))':'void (unsigned int)'
| `-ParmVarDecl 0x1141e674810 <col:35, col:48> col:48 _Seed 'unsigned int'
|-FunctionDecl 0x1141e674c10 <line:542:39> col:39 implicit strtod 'double (const char *, char **)' extern
| |-ParmVarDecl 0x1141e674cb0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1141e672d30 <<invalid sloc>> <invalid sloc> 'char **'
|-FunctionDecl 0x1141e672da8 prev 0x1141e674c10 <col:24, col:112> col:39 strtod 'double (const char *, char **)'
| |-ParmVarDecl 0x1141e674a28 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x1141e674aa8 <col:97, col:105> col:105 _EndPtr 'char **'
|-FunctionDecl 0x1141e673158 <line:543:24, col:143> col:39 _strtod_l 'double (const char *, char **, _locale_t) __attribute__((cdecl))':'double (const char *, char **, _locale_t)'
| |-ParmVarDecl 0x1141e672e88 <col:56, col:69> col:69 _Str 'const char *'
| |-ParmVarDecl 0x1141e672f08 <col:100, col:108> col:108 _EndPtr 'char **'
| `-ParmVarDecl 0x1141e672f80 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1141e6734d8 <line:544:39> col:39 implicit strtol 'long (const char *, char **, int)' extern
| |-ParmVarDecl 0x1141e673578 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1141e6735e0 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x1141e673648 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1141e6736c8 prev 0x1141e6734d8 <col:24, col:130> col:39 strtol 'long (const char *, char **, int)'
| |-ParmVarDecl 0x1141e673240 <col:53, col:66> col:66 _Str 'const char *'
| |-ParmVarDecl 0x1141e6732c0 <col:97, col:105> col:105 _EndPtr 'char **'
| `-ParmVarDecl 0x1141e673340 <col:119, col:123> col:123 _Radix 'int'
|-FunctionDecl 0x1141e673b30 <line:545:24, col:158> col:39 _strtol_l 'long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x1141e6737b0 <col:56, col:68> col:68 _Str 'const char *'
| |-ParmVarDecl 0x1141e673830 <col:99, col:106> col:106 _EndPtr 'char **'
| |-ParmVarDecl 0x1141e6738b0 <col:120, col:124> col:124 _Radix 'int'
| `-ParmVarDecl 0x1141e673928 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1141e675e80 <line:546:43> col:43 implicit strtoll 'long long (const char *, char **, int)' extern
| |-ParmVarDecl 0x1141e675f20 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1141e675f88 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x1141e675ff0 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1141e676070 prev 0x1141e675e80 <col:24, col:135> col:43 strtoll 'long long (const char *, char **, int)'
| |-ParmVarDecl 0x1141e673c20 <col:58, col:71> col:71 _Str 'const char *'
| |-ParmVarDecl 0x1141e673ca0 <col:102, col:110> col:110 _EndPtr 'char **'
| `-ParmVarDecl 0x1141e675d60 <col:124, col:128> col:128 _Radix 'int'
|-FunctionDecl 0x1141e676410 <line:547:24, col:166> col:43 _strtoll_l 'long long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'long long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x1141e676158 <col:61, col:74> col:74 _Str 'const char *'
| |-ParmVarDecl 0x1141e6761d8 <col:105, col:113> col:113 _EndPtr 'char **'
| |-ParmVarDecl 0x1141e676258 <col:127, col:131> col:131 _Radix 'int'
| `-ParmVarDecl 0x1141e6762d0 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1141e676798 <line:548:46> col:46 implicit strtoul 'unsigned long (const char *, char **, int)' extern
| |-ParmVarDecl 0x1141e676838 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1141e6768a0 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x1141e676908 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1141e676988 prev 0x1141e676798 <col:24, col:137> col:46 strtoul 'unsigned long (const char *, char **, int)'
| |-ParmVarDecl 0x1141e676500 <col:61, col:74> col:74 _Str 'const char *'
| |-ParmVarDecl 0x1141e676580 <col:105, col:113> col:113 _EndPtr 'char **'
| `-ParmVarDecl 0x1141e676600 <col:127, col:131> col:131 _Radix 'int'
|-FunctionDecl 0x1141e674e00 <line:549:24, col:160> col:46 _strtoul_l 'unsigned long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'unsigned long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x1141e676a70 <col:57, col:70> col:70 _Str 'const char *'
| |-ParmVarDecl 0x1141e676af0 <col:101, col:108> col:108 _EndPtr 'char **'
| |-ParmVarDecl 0x1141e676b70 <col:122, col:126> col:126 _Radix 'int'
| `-ParmVarDecl 0x1141e676be8 <col:143, col:153> col:153 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1141e675110 <line:550:51> col:51 implicit strtoull 'unsigned long long (const char *, char **, int)' extern
| |-ParmVarDecl 0x1141e6751b0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1141e675218 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x1141e675280 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1141e675300 prev 0x1141e675110 <col:24, col:143> col:51 strtoull 'unsigned long long (const char *, char **, int)'
| |-ParmVarDecl 0x1141e674ef0 <col:67, col:80> col:80 _Str 'const char *'
| |-ParmVarDecl 0x1141e674f70 <col:111, col:119> col:119 _EndPtr 'char **'
| `-ParmVarDecl 0x1141e674ff0 <col:133, col:137> col:137 _Radix 'int'
|-FunctionDecl 0x1141e6756a0 <line:551:24, col:174> col:51 _strtoull_l 'unsigned long long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'unsigned long long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x1141e6753e8 <col:70, col:83> col:83 _Str 'const char *'
| |-ParmVarDecl 0x1141e675468 <col:114, col:122> col:122 _EndPtr 'char **'
| |-ParmVarDecl 0x1141e6754e8 <col:136, col:140> col:140 _Radix 'int'
| `-ParmVarDecl 0x1141e675560 <col:157, col:167> col:167 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1141e675980 <line:552:44> col:44 implicit strtold 'long double (const char *, char **)' extern
| |-ParmVarDecl 0x1141e675a20 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1141e675a88 <<invalid sloc>> <invalid sloc> 'char **'
|-FunctionDecl 0x1141e675b00 prev 0x1141e675980 <col:24, col:118> col:44 strtold 'long double (const char *, char **)'
| |-ParmVarDecl 0x1141e675790 <col:59, col:72> col:72 _Str 'const char *'
| `-ParmVarDecl 0x1141e675810 <col:103, col:111> col:111 _EndPtr 'char **'
|-FunctionDecl 0x1141e676ee8 <line:553:24, col:149> col:44 _strtold_l 'long double (const char *, char **, _locale_t) __attribute__((cdecl))':'long double (const char *, char **, _locale_t)'
| |-ParmVarDecl 0x1141e675be0 <col:62, col:75> col:75 _Str 'const char *'
| |-ParmVarDecl 0x1141e675c60 <col:106, col:114> col:114 _EndPtr 'char **'
| `-ParmVarDecl 0x1141e675cd8 <col:132, col:142> col:142 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1141e6771c0 <line:554:38> col:38 implicit strtof 'float (const char *, char **)' extern
| |-ParmVarDecl 0x1141e677260 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1141e6772c8 <<invalid sloc>> <invalid sloc> 'char **'
|-FunctionDecl 0x1141e677340 prev 0x1141e6771c0 <col:24, col:111> col:38 strtof 'float (const char *, char **)'
| |-ParmVarDecl 0x1141e676fd0 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x1141e677050 <col:96, col:104> col:104 _EndPtr 'char **'
|-FunctionDecl 0x1141e6776f8 <line:555:24, col:142> col:38 _strtof_l 'float (const char *, char **, _locale_t) __attribute__((cdecl))':'float (const char *, char **, _locale_t)'
| |-ParmVarDecl 0x1141e677420 <col:55, col:68> col:68 _Str 'const char *'
| |-ParmVarDecl 0x1141e6774a0 <col:99, col:107> col:107 _EndPtr 'char **'
| `-ParmVarDecl 0x1141e677518 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1141e6778c0 <line:560:9, col:60> col:21 system 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1141e6777e0 <col:39, col:52> col:52 _Command 'const char *'
|-FunctionDecl 0x1141e670d10 <line:564:28, col:150> col:44 _ultoa_s 'errno_t (unsigned long, char *, size_t, int) __attribute__((cdecl))':'errno_t (unsigned long, char *, size_t, int)'
| |-ParmVarDecl 0x1141e677998 <col:58, col:72> col:72 _Val 'unsigned long'
| |-ParmVarDecl 0x1141e677a18 <col:100, col:107> col:107 _DstBuf 'char *'
| |-ParmVarDecl 0x1141e677a90 <col:121, col:128> col:128 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1141e677b10 <col:140, col:144> col:144 _Radix 'int'
|-FunctionDecl 0x1141e671158 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:566:79 _ultoa 'char *(unsigned long, char *, int) __attribute__((cdecl))':'char *(unsigned long, char *, int)'
| |-ParmVarDecl 0x1141e670ec0 <col:92, col:107> col:107 _Value 'unsigned long'
| |-ParmVarDecl 0x1141e670f40 <col:139, col:145> col:145 _Dest 'char *'
| |-ParmVarDecl 0x1141e670fc0 <col:157, col:162> col:162 _Radix 'int'
| `-DeprecatedAttr 0x1141e671210 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ultoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e671640 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:567:127> col:58 wctomb 'int (char *, wchar_t) __attribute__((cdecl))':'int (char *, wchar_t)'
| |-ParmVarDecl 0x1141e671418 <col:96, col:103> col:103 _MbCh 'char *'
| |-ParmVarDecl 0x1141e671490 <col:115, col:123> col:123 _WCh 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x1141e6716f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wctomb_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e671bc8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:568:155> col:61 _wctomb_l 'int (char *, wchar_t, _locale_t) __attribute__((cdecl))':'int (char *, wchar_t, _locale_t)'
| |-ParmVarDecl 0x1141e6718f8 <col:96, col:103> col:103 _MbCh 'char *'
| |-ParmVarDecl 0x1141e671970 <col:115, col:123> col:123 _WCh 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x1141e6719e8 <col:138, col:148> col:148 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1141e671c80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wctomb_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e67e258 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:570:28, col:200> col:44 wctomb_s 'errno_t (int *, char *, rsize_t, wchar_t) __attribute__((cdecl))':'errno_t (int *, char *, rsize_t, wchar_t)'
| |-ParmVarDecl 0x1141e67dee0 <col:63, col:69> col:69 _SizeConverted 'int *'
| |-ParmVarDecl 0x1141e67df60 <col:142, col:149> col:149 _MbCh 'char *'
| |-ParmVarDecl 0x1141e67dfd8 <col:161, col:169> col:169 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1141e67e050 <col:188, col:196> col:196 _WCh 'wchar_t':'unsigned short'
|-FunctionDecl 0x1141e67e760 <line:572:28, col:206> col:44 _wctomb_s_l 'errno_t (int *, char *, size_t, wchar_t, _locale_t) __attribute__((cdecl))':'errno_t (int *, char *, size_t, wchar_t, _locale_t)'
| |-ParmVarDecl 0x1141e67e348 <col:66, col:72> col:72 _SizeConverted 'int *'
| |-ParmVarDecl 0x1141e67e3c8 <col:121, col:128> col:128 _MbCh 'char *'
| |-ParmVarDecl 0x1141e67e440 <col:140, col:147> col:147 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e67e4b8 <col:166, col:174> col:174 _WCh 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1141e67e530 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1141e67ec70 <line:573:28, col:263> col:44 wcstombs_s 'errno_t (size_t *, char *, size_t, const wchar_t *, size_t) __attribute__((cdecl))':'errno_t (size_t *, char *, size_t, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1141e67e850 <col:65, col:74> col:74 _PtNumOfCharConverted 'size_t *'
| |-ParmVarDecl 0x1141e67e8d0 <col:164, col:171> col:171 _Dst 'char *'
| |-ParmVarDecl 0x1141e67e948 <col:182, col:189> col:189 _DstSizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e67e9c0 <col:213, col:229> col:229 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1141e67ea38 <col:240, col:247> col:247 _MaxCountInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x1141e679130 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2007:144> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:575:56 wcstombs 'size_t (char *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (char *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1141e678e68 <col:97, col:103> col:103 _Dest 'char *'
| |-ParmVarDecl 0x1141e678ee0 <col:117, col:134> col:134 _Source 'const wchar_t *'
| |-ParmVarDecl 0x1141e678f58 <col:148, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1141e6791e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstombs_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e6797e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:576:28, col:294> col:44 _wcstombs_s_l 'errno_t (size_t *, char *, size_t, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (size_t *, char *, size_t, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1141e679328 <col:68, col:77> col:77 _PtNumOfCharConverted 'size_t *'
| |-ParmVarDecl 0x1141e6793a8 <col:167, col:174> col:174 _Dst 'char *'
| |-ParmVarDecl 0x1141e679420 <col:185, col:192> col:192 _DstSizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e679498 <col:216, col:232> col:232 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1141e679510 <col:243, col:250> col:250 _MaxCountInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1141e679588 <col:277, col:287> col:287 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1141e67edf0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2010:160> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:578:59 _wcstombs_l 'size_t (char *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1141e6799a8 <col:146, col:152> col:152 _Dest 'char *'
| |-ParmVarDecl 0x1141e679a20 <col:166, col:183> col:183 _Source 'const wchar_t *'
| |-ParmVarDecl 0x1141e679a98 <col:197, col:205> col:205 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e679b10 <col:225, col:236> col:236 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1141e67eeb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcstombs_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e67f210 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:640:142> col:142 implicit calloc 'void *(unsigned long long, unsigned long long)' extern
| |-ParmVarDecl 0x1141e67f2b0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x1141e67f318 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1141e67f390 prev 0x1141e67f210 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:640:224> col:142 calloc 'void *(unsigned long long, unsigned long long)'
| |-ParmVarDecl 0x1141e67eff0 <col:173, col:180> col:180 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e67f068 <col:212, col:219> col:219 _Size 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1141e67f440 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1141e67f498 <line:615:33> restrict
|-FunctionDecl 0x1141e67f630 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:641:182> col:132 free 'void (void *) __attribute__((cdecl))':'void (void *)'
| |-ParmVarDecl 0x1141e67f4f0 <col:168, col:175> col:175 _Memory 'void *'
| `-NoAliasAttr 0x1141e67f6d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
|-FunctionDecl 0x1141e67f8d8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:642:161> col:161 implicit malloc 'void *(unsigned long long)' extern
| `-ParmVarDecl 0x1141e67f978 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1141e67f9e8 prev 0x1141e67f8d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:642:204> col:161 malloc 'void *(unsigned long long)'
| |-ParmVarDecl 0x1141e67f758 <col:192, col:199> col:199 _Size 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1141e67fa90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1141e67fae8 <line:615:33> restrict
|-FunctionDecl 0x1141e67fe00 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:644:142> col:142 implicit realloc 'void *(void *, unsigned long long)' extern
| |-ParmVarDecl 0x1141e67fea0 <<invalid sloc>> <invalid sloc> 'void *'
| `-ParmVarDecl 0x1141e67ff08 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1141e67ff80 prev 0x1141e67fe00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:644:236> col:142 realloc 'void *(void *, unsigned long long)'
| |-ParmVarDecl 0x1141e67fb40 <col:181, col:188> col:188 _Memory 'void *'
| |-ParmVarDecl 0x1141e67fbb8 <col:221, col:228> col:228 _NewSize 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1141e680030 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1141e680088 <line:615:33> restrict
|-FunctionDecl 0x1141e6803a8 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:646:274> col:142 _recalloc 'void *(void *, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t)'
| |-ParmVarDecl 0x1141e6800e0 <col:183, col:190> col:190 _Memory 'void *'
| |-ParmVarDecl 0x1141e680158 <col:223, col:230> col:230 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e6801d0 <col:262, col:269> col:269 _Size 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1141e680460 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1141e6804b8 <line:615:33> restrict
|-FunctionDecl 0x1141e6805e8 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:647:191> col:132 _aligned_free 'void (void *) __attribute__((cdecl))':'void (void *)'
| |-ParmVarDecl 0x1141e680510 <col:177, col:184> col:184 _Memory 'void *'
| `-NoAliasAttr 0x1141e680690 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
|-FunctionDecl 0x1141e680888 <col:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:648:218> col:142 _aligned_malloc 'void *(size_t, size_t) __attribute__((cdecl))':'void *(size_t, size_t)'
| |-ParmVarDecl 0x1141e680710 <col:182, col:189> col:189 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e680788 <col:201, col:208> col:208 _Alignment 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1141e680938 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1141e680990 <line:615:33> restrict
|-FunctionDecl 0x1141e680ca8 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:649:246> col:142 _aligned_offset_malloc 'void *(size_t, size_t, size_t) __attribute__((cdecl))':'void *(size_t, size_t, size_t)'
| |-ParmVarDecl 0x1141e6809e0 <col:189, col:196> col:196 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e680a58 <col:208, col:215> col:215 _Alignment 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e680ad0 <col:232, col:239> col:239 _Offset 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1141e680d60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1141e680db8 <line:615:33> restrict
|-FunctionDecl 0x1141e681038 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:651:272> col:145 _aligned_realloc 'void *(void *, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t)'
| |-ParmVarDecl 0x1141e680e28 <col:193, col:200> col:200 _Memory 'void *'
| |-ParmVarDecl 0x1141e680ea0 <col:233, col:240> col:240 _NewSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e680f18 <col:255, col:262> col:262 _Alignment 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1141e6810f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1141e681148 <line:615:33> restrict
|-FunctionDecl 0x1141e681510 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:653:306> col:142 _aligned_recalloc 'void *(void *, size_t, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t, size_t)'
| |-ParmVarDecl 0x1141e6811a0 <col:191, col:198> col:198 _Memory 'void *'
| |-ParmVarDecl 0x1141e681218 <col:231, col:238> col:238 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e681290 <col:270, col:277> col:277 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e681308 <col:289, col:296> col:296 _Alignment 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1141e6815d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1141e681628 <line:615:33> restrict
|-FunctionDecl 0x1141e681928 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:655:300> col:145 _aligned_offset_realloc 'void *(void *, size_t, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t, size_t)'
| |-ParmVarDecl 0x1141e681680 <col:200, col:207> col:207 _Memory 'void *'
| |-ParmVarDecl 0x1141e6816f8 <col:240, col:247> col:247 _NewSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e681770 <col:262, col:269> col:269 _Alignment 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e6817e8 <col:286, col:293> col:293 _Offset 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1141e6819e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1141e681a40 <line:615:33> restrict
|-FunctionDecl 0x1141e679e58 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:657:334> col:142 _aligned_offset_recalloc 'void *(void *, size_t, size_t, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t, size_t, size_t)'
| |-ParmVarDecl 0x1141e681a98 <col:198, col:205> col:205 _Memory 'void *'
| |-ParmVarDecl 0x1141e681b10 <col:238, col:245> col:245 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e681b88 <col:277, col:284> col:284 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e681c00 <col:296, col:303> col:303 _Alignment 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e681c78 <col:320, col:327> col:327 _Offset 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1141e679f20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1141e679f78 <line:615:33> restrict
|-FunctionDecl 0x1141e67a290 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:658:73, col:176> col:88 _aligned_msize 'size_t (void *, size_t, size_t) __attribute__((cdecl))':'size_t (void *, size_t, size_t)'
| |-ParmVarDecl 0x1141e679fd0 <col:117, col:124> col:124 _Memory 'void *'
| |-ParmVarDecl 0x1141e67a048 <col:138, col:145> col:145 _Alignment 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1141e67a0c0 <col:162, col:169> col:169 _Offset 'size_t':'unsigned long long'
|-FunctionDecl 0x1141e67a6e8 <line:685:28, col:157> col:44 _itow_s 'errno_t (int, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (int, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x1141e67a378 <col:58, col:62> col:62 _Val 'int'
| |-ParmVarDecl 0x1141e67a3f0 <col:97, col:107> col:107 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1141e67a468 <col:121, col:128> col:128 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1141e67a4e8 <col:147, col:151> col:151 _Radix 'int'
|-FunctionDecl 0x1141e67ab60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:687:82 _itow 'wchar_t *(int, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(int, wchar_t *, int)'
| |-ParmVarDecl 0x1141e67a898 <col:94, col:99> col:99 _Value 'int'
| |-ParmVarDecl 0x1141e67a910 <col:131, col:140> col:140 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1141e67a990 <col:152, col:157> col:157 _Radix 'int'
| `-DeprecatedAttr 0x1141e67ac18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _itow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e67b128 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:688:28, col:158> col:44 _ltow_s 'errno_t (long, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (long, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x1141e67adb0 <col:58, col:63> col:63 _Val 'long'
| |-ParmVarDecl 0x1141e67ae28 <col:98, col:108> col:108 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1141e67aea0 <col:122, col:129> col:129 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1141e67af20 <col:148, col:152> col:152 _Radix 'int'
|-FunctionDecl 0x1141e67b5a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:690:82 _ltow 'wchar_t *(long, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(long, wchar_t *, int)'
| |-ParmVarDecl 0x1141e67b2d8 <col:94, col:100> col:100 _Value 'long'
| |-ParmVarDecl 0x1141e67b350 <col:132, col:141> col:141 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1141e67b3d0 <col:153, col:158> col:158 _Radix 'int'
| `-DeprecatedAttr 0x1141e67b658 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ltow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e67bb18 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:691:28, col:168> col:44 _ultow_s 'errno_t (unsigned long, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (unsigned long, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x1141e67b7a0 <col:59, col:73> col:73 _Val 'unsigned long'
| |-ParmVarDecl 0x1141e67b818 <col:108, col:118> col:118 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1141e67b890 <col:132, col:139> col:139 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1141e67b910 <col:158, col:162> col:162 _Radix 'int'
|-FunctionDecl 0x1141e683020 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:693:82 _ultow 'wchar_t *(unsigned long, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(unsigned long, wchar_t *, int)'
| |-ParmVarDecl 0x1141e67bcc8 <col:95, col:110> col:110 _Value 'unsigned long'
| |-ParmVarDecl 0x1141e67bd40 <col:142, col:151> col:151 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1141e682e48 <col:163, col:168> col:168 _Radix 'int'
| `-DeprecatedAttr 0x1141e6830d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ultow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e683440 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:694:24, col:118> col:39 wcstod 'double (const wchar_t *, wchar_t **) __attribute__((cdecl))':'double (const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x1141e683218 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1141e683298 <col:100, col:111> col:111 _EndPtr 'wchar_t **'
|-FunctionDecl 0x1141e6837e8 <line:695:24, col:148> col:39 _wcstod_l 'double (const wchar_t *, wchar_t **, _locale_t) __attribute__((cdecl))':'double (const wchar_t *, wchar_t **, _locale_t)'
| |-ParmVarDecl 0x1141e683518 <col:56, col:71> col:71 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1141e683598 <col:102, col:113> col:113 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x1141e683610 <col:131, col:141> col:141 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1141e683ba8 <line:696:24, col:129> col:39 wcstol 'long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x1141e6838c8 <col:53, col:68> col:68 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1141e683948 <col:99, col:110> col:110 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x1141e6839c8 <col:119, col:123> col:123 _Radix 'int'
|-FunctionDecl 0x1141e67bfd0 <line:697:24, col:159> col:39 _wcstol_l 'long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x1141e683c88 <col:56, col:71> col:71 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1141e683d08 <col:102, col:112> col:112 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x1141e683d88 <col:121, col:125> col:125 _Radix 'int'
| `-ParmVarDecl 0x1141e67bdc0 <col:142, col:152> col:152 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1141e67c398 <line:698:24, col:133> col:43 wcstoll 'long long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'long long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x1141e67c0b8 <col:58, col:73> col:73 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1141e67c138 <col:104, col:114> col:114 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x1141e67c1b8 <col:123, col:127> col:127 _Radix 'int'
|-FunctionDecl 0x1141e67c800 <line:699:24, col:164> col:43 _wcstoll_l 'long long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'long long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x1141e67c478 <col:61, col:76> col:76 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1141e67c4f8 <col:107, col:117> col:117 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x1141e67c578 <col:126, col:130> col:130 _Radix 'int'
| `-ParmVarDecl 0x1141e67c5f0 <col:147, col:157> col:157 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1141e67cbc8 <line:700:24, col:137> col:46 wcstoul 'unsigned long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'unsigned long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x1141e67c8e8 <col:61, col:76> col:76 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1141e67c968 <col:107, col:118> col:118 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x1141e67c9e8 <col:127, col:131> col:131 _Radix 'int'
|-FunctionDecl 0x1141e6840c0 <line:701:24, col:167> col:46 _wcstoul_l 'unsigned long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'unsigned long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x1141e67cca8 <col:64, col:79> col:79 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1141e67cd28 <col:110, col:120> col:120 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x1141e683e40 <col:129, col:133> col:133 _Radix 'int'
| `-ParmVarDecl 0x1141e683eb8 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1141e684488 <line:702:24, col:143> col:51 wcstoull 'unsigned long long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'unsigned long long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x1141e6841a8 <col:67, col:82> col:82 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1141e684228 <col:113, col:124> col:124 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x1141e6842a8 <col:133, col:137> col:137 _Radix 'int'
|-FunctionDecl 0x1141e6848f0 <line:703:24, col:174> col:51 _wcstoull_l 'unsigned long long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'unsigned long long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x1141e684568 <col:70, col:85> col:85 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1141e6845e8 <col:116, col:127> col:127 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x1141e684668 <col:136, col:140> col:140 _Radix 'int'
| `-ParmVarDecl 0x1141e6846e0 <col:157, col:167> col:167 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1141e684c00 <line:704:24, col:124> col:44 wcstold 'long double (const wchar_t *, wchar_t **) __attribute__((cdecl))':'long double (const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x1141e6849d8 <col:59, col:75> col:75 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1141e684a58 <col:106, col:117> col:117 _EndPtr 'wchar_t **'
|-FunctionDecl 0x1141e67cf48 <line:705:24, col:155> col:44 _wcstold_l 'long double (const wchar_t *, wchar_t **, _locale_t) __attribute__((cdecl))':'long double (const wchar_t *, wchar_t **, _locale_t)'
| |-ParmVarDecl 0x1141e684cd8 <col:62, col:78> col:78 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1141e684d58 <col:109, col:120> col:120 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x1141e684dd0 <col:138, col:148> col:148 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1141e67d250 <line:706:24, col:117> col:38 wcstof 'float (const wchar_t *, wchar_t **) __attribute__((cdecl))':'float (const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x1141e67d028 <col:52, col:68> col:68 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1141e67d0a8 <col:99, col:110> col:110 _EndPtr 'wchar_t **'
|-FunctionDecl 0x1141e67d5f8 <line:707:24, col:148> col:38 _wcstof_l 'float (const wchar_t *, wchar_t **, _locale_t) __attribute__((cdecl))':'float (const wchar_t *, wchar_t **, _locale_t)'
| |-ParmVarDecl 0x1141e67d328 <col:55, col:71> col:71 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1141e67d3a8 <col:102, col:113> col:113 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x1141e67d420 <col:131, col:141> col:141 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1141e67d910 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:711:118> col:78 _wgetenv 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x1141e67d798 <col:94, col:110> col:110 _VarName 'const wchar_t *'
| `-DeprecatedAttr 0x1141e67d9b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wdupenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e68af58 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:712:28, col:198> col:44 _wgetenv_s 'errno_t (size_t *, wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (size_t *, wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x1141e67daf8 <col:61, col:70> col:70 _ReturnSize 'size_t *'
| |-ParmVarDecl 0x1141e67db70 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1141e67dbe8 <col:143, col:150> col:150 _DstSizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1141e67dc60 <col:174, col:190> col:190 _VarName 'const wchar_t *'
|-FunctionDecl 0x1141e68b310 <line:720:28, col:214> col:44 _wdupenv_s 'errno_t (wchar_t **, size_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t **, size_t *, const wchar_t *)'
| |-ParmVarDecl 0x1141e68b048 <col:127, col:137> col:137 _Buffer 'wchar_t **'
| |-ParmVarDecl 0x1141e68b0c0 <col:156, col:164> col:164 _BufferSizeInWords 'size_t *'
| `-ParmVarDecl 0x1141e68b138 <col:191, col:206> col:206 _VarName 'const wchar_t *'
|-FunctionDecl 0x1141e68b4d0 <line:728:9, col:65> col:21 _wsystem 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1141e68b3f0 <col:41, col:57> col:57 _Command 'const wchar_t *'
|-FunctionDecl 0x1141e68b718 <line:733:24, col:71> col:39 _wtof 'double (const wchar_t *) __attribute__((cdecl))':'double (const wchar_t *)'
| `-ParmVarDecl 0x1141e68b5a0 <col:52, col:67> col:67 _Str 'const wchar_t *'
|-FunctionDecl 0x1141e68ba10 <line:734:24, col:101> col:39 _wtof_l 'double (const wchar_t *, _locale_t) __attribute__((cdecl))':'double (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1141e68b7e8 <col:54, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1141e68b860 <col:84, col:94> col:94 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1141e68bbc8 <line:735:24, col:68> col:36 _wtoi 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1141e68bae8 <col:49, col:64> col:64 _Str 'const wchar_t *'
|-FunctionDecl 0x1141e685ea0 <line:736:24, col:98> col:36 _wtoi_l 'int (const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1141e68bc98 <col:51, col:66> col:66 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1141e68bd10 <col:81, col:91> col:91 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1141e6860f8 <line:737:24, col:69> col:37 _wtol 'long (const wchar_t *) __attribute__((cdecl))':'long (const wchar_t *)'
| `-ParmVarDecl 0x1141e685f78 <col:50, col:65> col:65 _Str 'const wchar_t *'
|-FunctionDecl 0x1141e6863f0 <line:738:24, col:99> col:37 _wtol_l 'long (const wchar_t *, _locale_t) __attribute__((cdecl))':'long (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1141e6861c8 <col:52, col:67> col:67 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1141e686240 <col:82, col:92> col:92 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1141e686648 <line:739:24, col:75> col:42 _wtoll 'long long (const wchar_t *) __attribute__((cdecl))':'long long (const wchar_t *)'
| `-ParmVarDecl 0x1141e6864c8 <col:56, col:71> col:71 _Str 'const wchar_t *'
|-FunctionDecl 0x1141e686940 <line:740:24, col:105> col:42 _wtoll_l 'long long (const wchar_t *, _locale_t) __attribute__((cdecl))':'long long (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1141e686718 <col:58, col:73> col:73 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1141e686790 <col:88, col:98> col:98 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1141e686d98 <line:742:28, col:162> col:44 _i64tow_s 'errno_t (long long, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (long long, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x1141e686a20 <col:59, col:67> col:67 _Val 'long long'
| |-ParmVarDecl 0x1141e686a98 <col:102, col:112> col:112 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1141e686b10 <col:126, col:133> col:133 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1141e686b90 <col:152, col:156> col:156 _Radix 'int'
|-FunctionDecl 0x1141e68c280 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:743:146> col:62 _i64tow 'wchar_t *(long long, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(long long, wchar_t *, int)'
| |-ParmVarDecl 0x1141e68bfb0 <col:75, col:83> col:83 _Val 'long long'
| |-ParmVarDecl 0x1141e68c028 <col:112, col:122> col:122 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1141e68c0a8 <col:136, col:140> col:140 _Radix 'int'
| `-DeprecatedAttr 0x1141e68c338 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _i64tow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e68c7f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:744:28, col:172> col:44 _ui64tow_s 'errno_t (unsigned long long, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (unsigned long long, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x1141e68c480 <col:60, col:77> col:77 _Val 'unsigned long long'
| |-ParmVarDecl 0x1141e68c4f8 <col:112, col:122> col:122 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1141e68c570 <col:136, col:143> col:143 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1141e68c5f0 <col:162, col:166> col:166 _Radix 'int'
|-FunctionDecl 0x1141e68cc70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:745:157> col:63 _ui64tow 'wchar_t *(unsigned long long, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(unsigned long long, wchar_t *, int)'
| |-ParmVarDecl 0x1141e68c9a8 <col:77, col:94> col:94 _Val 'unsigned long long'
| |-ParmVarDecl 0x1141e68ca20 <col:123, col:133> col:133 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1141e68caa0 <col:147, col:151> col:151 _Radix 'int'
| `-DeprecatedAttr 0x1141e68cd28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ui64tow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e686f50 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:746:24, col:76> col:42 _wtoi64 'long long (const wchar_t *) __attribute__((cdecl))':'long long (const wchar_t *)'
| `-ParmVarDecl 0x1141e686e70 <col:57, col:72> col:72 _Str 'const wchar_t *'
|-FunctionDecl 0x1141e687198 <line:747:24, col:106> col:42 _wtoi64_l 'long long (const wchar_t *, _locale_t) __attribute__((cdecl))':'long long (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1141e687020 <col:59, col:74> col:74 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1141e687098 <col:89, col:99> col:99 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1141e687490 <line:748:24, col:141> col:42 _wcstoi64 'long long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'long long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x1141e687270 <col:59, col:75> col:75 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1141e6872f0 <col:106, col:117> col:117 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x1141e687370 <col:131, col:135> col:135 _Radix 'int'
|-FunctionDecl 0x1141e687828 <line:749:24, col:171> col:42 _wcstoi64_l 'long long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'long long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x1141e687570 <col:61, col:77> col:77 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1141e6875f0 <col:108, col:119> col:119 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x1141e687670 <col:133, col:137> col:137 _Radix 'int'
| `-ParmVarDecl 0x1141e6876e8 <col:154, col:164> col:164 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1141e687b30 <line:750:24, col:150> col:50 _wcstoui64 'unsigned long long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'unsigned long long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x1141e687910 <col:68, col:84> col:84 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1141e687990 <col:115, col:126> col:126 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x1141e687a10 <col:140, col:144> col:144 _Radix 'int'
|-FunctionDecl 0x1141e687ef8 <line:751:24, col:180> col:50 _wcstoui64_l 'unsigned long long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'unsigned long long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x1141e687c10 <col:70, col:85> col:85 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1141e687c90 <col:117, col:128> col:128 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x1141e687d10 <col:142, col:146> col:146 _Radix 'int'
| `-ParmVarDecl 0x1141e687d88 <col:163, col:173> col:173 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1141e6882b8 <line:770:24, col:151> col:39 _fullpath 'char *(char *, const char *, size_t) __attribute__((cdecl))':'char *(char *, const char *, size_t)'
| |-ParmVarDecl 0x1141e687fe8 <col:82, col:89> col:89 _FullPath 'char *'
| |-ParmVarDecl 0x1141e688068 <col:107, col:120> col:120 _Path 'const char *'
| `-ParmVarDecl 0x1141e6880e0 <col:132, col:139> col:139 _SizeInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x1141e688878 <line:778:28, col:189> col:44 _ecvt_s 'errno_t (char *, size_t, double, int, int *, int *) __attribute__((cdecl))':'errno_t (char *, size_t, double, int, int *, int *)'
| |-ParmVarDecl 0x1141e6883a0 <col:74, col:81> col:81 _DstBuf 'char *'
| |-ParmVarDecl 0x1141e688418 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e688498 <col:114, col:121> col:121 _Val 'double'
| |-ParmVarDecl 0x1141e688518 <col:132, col:136> col:136 _NumOfDights 'int'
| |-ParmVarDecl 0x1141e688598 <col:156, col:162> col:162 _PtDec 'int *'
| `-ParmVarDecl 0x1141e688618 <col:176, col:182> col:182 _PtSign 'int *'
|-FunctionDecl 0x1141e688d70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:780:158> col:72 _ecvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x1141e688a38 <col:83, col:90> col:90 _Val 'double'
| |-ParmVarDecl 0x1141e688ab8 <col:101, col:105> col:105 _NumOfDigits 'int'
| |-ParmVarDecl 0x1141e688b38 <col:125, col:131> col:131 _PtDec 'int *'
| |-ParmVarDecl 0x1141e688bb8 <col:145, col:151> col:151 _PtSign 'int *'
| `-DeprecatedAttr 0x1141e688e30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ecvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e689380 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:781:28, col:186> col:44 _fcvt_s 'errno_t (char *, size_t, double, int, int *, int *) __attribute__((cdecl))':'errno_t (char *, size_t, double, int, int *, int *)'
| |-ParmVarDecl 0x1141e688f90 <col:74, col:81> col:81 _DstBuf 'char *'
| |-ParmVarDecl 0x1141e689008 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e689088 <col:114, col:121> col:121 _Val 'double'
| |-ParmVarDecl 0x1141e689108 <col:132, col:136> col:136 _NumOfDec 'int'
| |-ParmVarDecl 0x1141e689188 <col:153, col:159> col:159 _PtDec 'int *'
| `-ParmVarDecl 0x1141e689208 <col:173, col:179> col:179 _PtSign 'int *'
|-FunctionDecl 0x1141e689800 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:783:155> col:72 _fcvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x1141e689540 <col:83, col:90> col:90 _Val 'double'
| |-ParmVarDecl 0x1141e6895c0 <col:101, col:105> col:105 _NumOfDec 'int'
| |-ParmVarDecl 0x1141e689640 <col:122, col:128> col:128 _PtDec 'int *'
| |-ParmVarDecl 0x1141e6896c0 <col:142, col:148> col:148 _PtSign 'int *'
| `-DeprecatedAttr 0x1141e6898c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fcvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e689d88 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:784:9, col:129> col:25 _gcvt_s 'errno_t (char *, size_t, double, int) __attribute__((cdecl))':'errno_t (char *, size_t, double, int)'
| |-ParmVarDecl 0x1141e689a08 <col:55, col:62> col:62 _DstBuf 'char *'
| |-ParmVarDecl 0x1141e689a80 <col:76, col:83> col:83 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e689b00 <col:95, col:102> col:102 _Val 'double'
| `-ParmVarDecl 0x1141e689b80 <col:113, col:117> col:117 _NumOfDigits 'int'
|-FunctionDecl 0x1141e68a218 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:786:141> col:57 _gcvt 'char *(double, int, char *) __attribute__((cdecl))':'char *(double, int, char *)'
| |-ParmVarDecl 0x1141e689f78 <col:68, col:75> col:75 _Val 'double'
| |-ParmVarDecl 0x1141e689ff8 <col:86, col:90> col:90 _NumOfDigits 'int'
| |-ParmVarDecl 0x1141e68a078 <col:127, col:134> col:134 _DstBuf 'char *'
| `-DeprecatedAttr 0x1141e68a2d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _gcvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e68a6b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:788:24, col:91> col:36 _atodbl 'int (_CRT_DOUBLE *, char *) __attribute__((cdecl))':'int (_CRT_DOUBLE *, char *)'
| |-ParmVarDecl 0x1141e68a488 <col:50, col:64> col:64 _Result '_CRT_DOUBLE *'
| `-ParmVarDecl 0x1141e68a508 <col:80, col:87> col:87 _Str 'char *'
|-FunctionDecl 0x1141e68aa30 <line:789:24, col:89> col:36 _atoldbl 'int (_LDOUBLE *, char *) __attribute__((cdecl))':'int (_LDOUBLE *, char *)'
| |-ParmVarDecl 0x1141e68a808 <col:51, col:62> col:62 _Result '_LDOUBLE *'
| `-ParmVarDecl 0x1141e68a888 <col:78, col:85> col:85 _Str 'char *'
|-FunctionDecl 0x1141e68adb0 <line:790:24, col:96> col:36 _atoflt 'int (_CRT_FLOAT *, const char *) __attribute__((cdecl))':'int (_CRT_FLOAT *, const char *)'
| |-ParmVarDecl 0x1141e68ab88 <col:50, col:63> col:63 _Result '_CRT_FLOAT *'
| `-ParmVarDecl 0x1141e68ac08 <col:79, col:92> col:92 _Str 'const char *'
|-FunctionDecl 0x1141e685128 <line:791:24, col:121> col:36 _atodbl_l 'int (_CRT_DOUBLE *, char *, _locale_t) __attribute__((cdecl))':'int (_CRT_DOUBLE *, char *, _locale_t)'
| |-ParmVarDecl 0x1141e684e50 <col:52, col:66> col:66 _Result '_CRT_DOUBLE *'
| |-ParmVarDecl 0x1141e684ed0 <col:82, col:89> col:89 _Str 'char *'
| `-ParmVarDecl 0x1141e684f48 <col:104, col:114> col:114 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1141e6854d8 <line:792:24, col:119> col:36 _atoldbl_l 'int (_LDOUBLE *, char *, _locale_t) __attribute__((cdecl))':'int (_LDOUBLE *, char *, _locale_t)'
| |-ParmVarDecl 0x1141e685208 <col:53, col:64> col:64 _Result '_LDOUBLE *'
| |-ParmVarDecl 0x1141e685288 <col:80, col:87> col:87 _Str 'char *'
| `-ParmVarDecl 0x1141e685300 <col:102, col:112> col:112 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1141e685888 <line:793:24, col:126> col:36 _atoflt_l 'int (_CRT_FLOAT *, const char *, _locale_t) __attribute__((cdecl))':'int (_CRT_FLOAT *, const char *, _locale_t)'
| |-ParmVarDecl 0x1141e6855b8 <col:52, col:65> col:65 _Result '_CRT_FLOAT *'
| |-ParmVarDecl 0x1141e685638 <col:81, col:94> col:94 _Str 'const char *'
| `-ParmVarDecl 0x1141e6856b0 <col:109, col:119> col:119 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1141e685b60 <line:794:46> col:46 implicit _lrotl 'unsigned long (unsigned long, int)' extern
| |-ParmVarDecl 0x1141e685c00 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0x1141e685c68 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x1141e685ce0 <col:46> Implicit
|-FunctionDecl 0x1141e685d38 prev 0x1141e685b60 <col:24, col:93> col:46 _lrotl 'unsigned long (unsigned long, int)'
| |-ParmVarDecl 0x1141e685970 <col:58, col:72> col:72 _Val 'unsigned long'
| |-ParmVarDecl 0x1141e6859f0 <col:83, col:87> col:87 _Shift 'int'
| `-NoThrowAttr 0x1141e693f40 <col:46> Inherited Implicit
|-FunctionDecl 0x1141e694100 <line:795:46> col:46 implicit _lrotr 'unsigned long (unsigned long, int)' extern
| |-ParmVarDecl 0x1141e6941a0 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0x1141e694208 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x1141e694280 <col:46> Implicit
|-FunctionDecl 0x1141e6942d8 prev 0x1141e694100 <col:24, col:93> col:46 _lrotr 'unsigned long (unsigned long, int)'
| |-ParmVarDecl 0x1141e693f80 <col:58, col:72> col:72 _Val 'unsigned long'
| |-ParmVarDecl 0x1141e694000 <col:83, col:87> col:87 _Shift 'int'
| `-NoThrowAttr 0x1141e6943d0 <col:46> Inherited Implicit
|-FunctionDecl 0x1141e6948e8 <line:796:40, line:797:37> line:796:58 _makepath_s 'errno_t (char *, size_t, const char *, const char *, const char *, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *, const char *, const char *, const char *)'
| |-ParmVarDecl 0x1141e694410 <col:99, col:106> col:106 _PathResult 'char *'
| |-ParmVarDecl 0x1141e694488 <col:124, col:131> col:131 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e694508 <col:156, col:169> col:169 _Drive 'const char *'
| |-ParmVarDecl 0x1141e694588 <col:188, col:201> col:201 _Dir 'const char *'
| |-ParmVarDecl 0x1141e694608 <col:218, col:231> col:231 _Filename 'const char *'
| `-ParmVarDecl 0x1141e694688 <line:797:20, col:33> col:33 _Ext 'const char *'
|-FunctionDecl 0x1141e694e90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1948:181> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:799:78 _makepath 'void (char *, const char *, const char *, const char *, const char *) __attribute__((cdecl))':'void (char *, const char *, const char *, const char *, const char *)'
| |-ParmVarDecl 0x1141e694aa8 <col:113, col:119> col:119 _Path 'char *'
| |-ParmVarDecl 0x1141e694b28 <col:137, col:151> col:151 _Drive 'const char *'
| |-ParmVarDecl 0x1141e694ba8 <col:170, col:184> col:184 _Dir 'const char *'
| |-ParmVarDecl 0x1141e694c28 <col:201, col:215> col:215 _Filename 'const char *'
| |-ParmVarDecl 0x1141e694ca8 <col:237, col:251> col:251 _Ext 'const char *'
| `-DeprecatedAttr 0x1141e690f38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _makepath_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e691210 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:826:9, col:59> col:27 _onexit '_onexit_t (_onexit_t) __attribute__((cdecl))':'_onexit_t (_onexit_t)'
| `-ParmVarDecl 0x1141e6910a0 <col:44, col:54> col:54 _Func '_onexit_t':'int (*)(void) __attribute__((cdecl))'
|-FunctionDecl 0x1141e6913c8 <line:838:24, col:77> col:39 _putenv 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1141e6912e8 <col:54, col:67> col:67 _EnvString 'const char *'
|-FunctionDecl 0x1141e691688 <line:839:28, col:107> col:44 _putenv_s 'errno_t (const char *, const char *) __attribute__((cdecl))':'errno_t (const char *, const char *)'
| |-ParmVarDecl 0x1141e6914a0 <col:61, col:74> col:74 _Name 'const char *'
| `-ParmVarDecl 0x1141e691520 <col:88, col:101> col:101 _Value 'const char *'
|-FunctionDecl 0x1141e691950 <line:842:30> col:30 implicit _rotl 'unsigned int (unsigned int, int)' extern
| |-ParmVarDecl 0x1141e6919f0 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-ParmVarDecl 0x1141e691a58 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x1141e691ad0 <col:30> Implicit
|-FunctionDecl 0x1141e691b28 prev 0x1141e691950 <col:9, col:75> col:30 _rotl 'unsigned int (unsigned int, int)'
| |-ParmVarDecl 0x1141e691768 <col:41, col:54> col:54 _Val 'unsigned int'
| |-ParmVarDecl 0x1141e6917e8 <col:65, col:69> col:69 _Shift 'int'
| `-NoThrowAttr 0x1141e691c20 <col:30> Inherited Implicit
|-FunctionDecl 0x1141e691e50 <line:843:34> col:34 implicit _rotl64 'unsigned long long (unsigned long long, int)' extern
| |-ParmVarDecl 0x1141e68ff00 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1141e68ff68 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x1141e68ffe0 <col:34> Implicit
|-FunctionDecl 0x1141e690038 prev 0x1141e691e50 <col:9, col:85> col:34 _rotl64 'unsigned long long (unsigned long long, int)'
| |-ParmVarDecl 0x1141e691c60 <col:47, col:64> col:64 _Val 'unsigned long long'
| |-ParmVarDecl 0x1141e691ce0 <col:75, col:79> col:79 _Shift 'int'
| `-NoThrowAttr 0x1141e690130 <col:34> Inherited Implicit
|-FunctionDecl 0x1141e6902f0 <line:844:30> col:30 implicit _rotr 'unsigned int (unsigned int, int)' extern
| |-ParmVarDecl 0x1141e690390 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-ParmVarDecl 0x1141e6903f8 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x1141e690470 <col:30> Implicit
|-FunctionDecl 0x1141e6904c8 prev 0x1141e6902f0 <col:9, col:75> col:30 _rotr 'unsigned int (unsigned int, int)'
| |-ParmVarDecl 0x1141e690170 <col:41, col:54> col:54 _Val 'unsigned int'
| |-ParmVarDecl 0x1141e6901f0 <col:65, col:69> col:69 _Shift 'int'
| `-NoThrowAttr 0x1141e6905c0 <col:30> Inherited Implicit
|-FunctionDecl 0x1141e690780 <line:845:34> col:34 implicit _rotr64 'unsigned long long (unsigned long long, int)' extern
| |-ParmVarDecl 0x1141e690820 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1141e690888 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x1141e690900 <col:34> Implicit
|-FunctionDecl 0x1141e690958 prev 0x1141e690780 <col:9, col:85> col:34 _rotr64 'unsigned long long (unsigned long long, int)'
| |-ParmVarDecl 0x1141e690600 <col:47, col:64> col:64 _Val 'unsigned long long'
| |-ParmVarDecl 0x1141e690680 <col:75, col:79> col:79 _Shift 'int'
| `-NoThrowAttr 0x1141e690a50 <col:34> Inherited Implicit
|-FunctionDecl 0x1141e690e08 <line:849:9, col:171> col:25 _searchenv_s 'errno_t (const char *, const char *, char *, size_t) __attribute__((cdecl))':'errno_t (const char *, const char *, char *, size_t)'
| |-ParmVarDecl 0x1141e690a90 <col:45, col:58> col:58 _Filename 'const char *'
| |-ParmVarDecl 0x1141e690b10 <col:76, col:89> col:89 _EnvVar 'const char *'
| |-ParmVarDecl 0x1141e690b90 <col:127, col:134> col:134 _ResultPath 'char *'
| `-ParmVarDecl 0x1141e690c08 <col:152, col:159> col:159 _SizeInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x1141e6932a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1954:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:851:78 _searchenv 'void (const char *, const char *, char *) __attribute__((cdecl))':'void (const char *, const char *, char *)'
| |-ParmVarDecl 0x1141e693008 <col:97, col:111> col:111 _Filename 'const char *'
| |-ParmVarDecl 0x1141e693088 <col:129, col:143> col:143 _EnvVar 'const char *'
| |-ParmVarDecl 0x1141e693108 <col:176, col:182> col:182 _ResultPath 'char *'
| `-DeprecatedAttr 0x1141e693358 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _searchenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e693940 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:854:261> col:62 _splitpath 'void (const char *, char *, char *, char *, char *) __attribute__((cdecl))':'void (const char *, char *, char *, char *, char *)'
| |-ParmVarDecl 0x1141e693560 <col:80, col:93> col:93 _FullPath 'const char *'
| |-ParmVarDecl 0x1141e6935e0 <col:129, col:136> col:136 _Drive 'char *'
| |-ParmVarDecl 0x1141e693660 <col:169, col:176> col:176 _Dir 'char *'
| |-ParmVarDecl 0x1141e6936e0 <col:207, col:214> col:214 _Filename 'char *'
| |-ParmVarDecl 0x1141e693760 <col:250, col:257> col:257 _Ext 'char *'
| `-DeprecatedAttr 0x1141e693a08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _splitpath_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e695240 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:855:40, line:859:79> line:855:57 _splitpath_s 'errno_t (const char *, char *, size_t, char *, size_t, char *, size_t, char *, size_t) __attribute__((cdecl))':'errno_t (const char *, char *, size_t, char *, size_t, char *, size_t, char *, size_t)'
| |-ParmVarDecl 0x1141e693b50 <col:77, col:90> col:90 _FullPath 'const char *'
| |-ParmVarDecl 0x1141e693bd0 <line:856:48, col:55> col:55 _Drive 'char *'
| |-ParmVarDecl 0x1141e693c48 <col:68, col:75> col:75 _DriveSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e693cc8 <line:857:46, col:53> col:53 _Dir 'char *'
| |-ParmVarDecl 0x1141e693d40 <col:64, col:71> col:71 _DirSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e693dc0 <line:858:51, col:58> col:58 _Filename 'char *'
| |-ParmVarDecl 0x1141e693e38 <col:74, col:81> col:81 _FilenameSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e693eb8 <line:859:46, col:53> col:53 _Ext 'char *'
| `-ParmVarDecl 0x1141e694f50 <col:64, col:71> col:71 _ExtSize 'size_t':'unsigned long long'
|-FunctionDecl 0x1141e6955f0 <line:862:9, col:204> col:24 _swab 'void (char *, char *, int) __attribute__((cdecl))':'void (char *, char *, int)'
| |-ParmVarDecl 0x1141e695358 <col:95, col:102> col:102 _Buf1 'char *'
| |-ParmVarDecl 0x1141e6953d8 <col:174, col:181> col:181 _Buf2 'char *'
| `-ParmVarDecl 0x1141e695458 <col:188, col:192> col:192 _SizeInBytes 'int'
|-FunctionDecl 0x1141e695990 <line:873:24, col:161> col:42 _wfullpath 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1141e6956d0 <col:86, col:96> col:96 _FullPath 'wchar_t *'
| |-ParmVarDecl 0x1141e695748 <col:114, col:130> col:130 _Path 'const wchar_t *'
| `-ParmVarDecl 0x1141e6957c0 <col:142, col:149> col:149 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1141e68dee0 <line:879:40, line:880:40> line:879:56 _wmakepath_s 'errno_t (wchar_t *, size_t, const wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1141e695a70 <col:91, col:101> col:101 _PathResult 'wchar_t *'
| |-ParmVarDecl 0x1141e695ae8 <col:119, col:126> col:126 _SIZE 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e695b60 <col:144, col:160> col:160 _Drive 'const wchar_t *'
| |-ParmVarDecl 0x1141e695bd8 <col:179, col:195> col:195 _Dir 'const wchar_t *'
| |-ParmVarDecl 0x1141e695c50 <col:212, col:228> col:228 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x1141e695cc8 <line:880:20, col:36> col:36 _Ext 'const wchar_t *'
|-FunctionDecl 0x1141e68e4b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1948:181> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:882:78 _wmakepath 'void (wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'void (wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1141e68e098 <col:114, col:123> col:123 _ResultPath 'wchar_t *'
| |-ParmVarDecl 0x1141e68e110 <col:147, col:164> col:164 _Drive 'const wchar_t *'
| |-ParmVarDecl 0x1141e68e188 <col:183, col:200> col:200 _Dir 'const wchar_t *'
| |-ParmVarDecl 0x1141e68e200 <col:217, col:234> col:234 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1141e68e278 <col:256, col:273> col:273 _Ext 'const wchar_t *'
| `-DeprecatedAttr 0x1141e68e578 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wmakepath_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e68e798 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:889:24, col:81> col:39 _wputenv 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1141e68e6b8 <col:55, col:71> col:71 _EnvString 'const wchar_t *'
|-FunctionDecl 0x1141e68ea88 <line:890:28, col:114> col:44 _wputenv_s 'errno_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1141e68e868 <col:62, col:78> col:78 _Name 'const wchar_t *'
| `-ParmVarDecl 0x1141e68e8e0 <col:92, col:108> col:108 _Value 'const wchar_t *'
|-FunctionDecl 0x1141e695f60 <line:891:9, col:181> col:25 _wsearchenv_s 'errno_t (const wchar_t *, const wchar_t *, wchar_t *, size_t) __attribute__((cdecl))':'errno_t (const wchar_t *, const wchar_t *, wchar_t *, size_t)'
| |-ParmVarDecl 0x1141e68eb60 <col:46, col:62> col:62 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1141e68ebd8 <col:80, col:96> col:96 _EnvVar 'const wchar_t *'
| |-ParmVarDecl 0x1141e68ec50 <col:134, col:144> col:144 _ResultPath 'wchar_t *'
| `-ParmVarDecl 0x1141e68ecc8 <col:162, col:169> col:169 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1141e6963d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1954:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:893:78 _wsearchenv 'void (const wchar_t *, const wchar_t *, wchar_t *) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, wchar_t *)'
| |-ParmVarDecl 0x1141e696108 <col:98, col:115> col:115 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1141e696180 <col:133, col:150> col:150 _EnvVar 'const wchar_t *'
| |-ParmVarDecl 0x1141e6961f8 <col:183, col:192> col:192 _ResultPath 'wchar_t *'
| `-DeprecatedAttr 0x1141e696488 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wsearchenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e696aa0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:896:278> col:63 _wsplitpath 'void (const wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *) __attribute__((cdecl))':'void (const wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *)'
| |-ParmVarDecl 0x1141e696688 <col:82, col:98> col:98 _FullPath 'const wchar_t *'
| |-ParmVarDecl 0x1141e696700 <col:134, col:144> col:144 _Drive 'wchar_t *'
| |-ParmVarDecl 0x1141e696778 <col:177, col:187> col:187 _Dir 'wchar_t *'
| |-ParmVarDecl 0x1141e6967f0 <col:218, col:228> col:228 _Filename 'wchar_t *'
| |-ParmVarDecl 0x1141e696868 <col:264, col:274> col:274 _Ext 'wchar_t *'
| `-DeprecatedAttr 0x1141e696b68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wsplitpath_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e692380 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:897:21, line:901:82> line:897:37 _wsplitpath_s 'errno_t (const wchar_t *, wchar_t *, size_t, wchar_t *, size_t, wchar_t *, size_t, wchar_t *, size_t) __attribute__((cdecl))':'errno_t (const wchar_t *, wchar_t *, size_t, wchar_t *, size_t, wchar_t *, size_t, wchar_t *, size_t)'
| |-ParmVarDecl 0x1141e696ca8 <col:58, col:74> col:74 _FullPath 'const wchar_t *'
| |-ParmVarDecl 0x1141e696d20 <line:898:48, col:58> col:58 _Drive 'wchar_t *'
| |-ParmVarDecl 0x1141e696d98 <col:71, col:78> col:78 _DriveSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e696e10 <line:899:46, col:56> col:56 _Dir 'wchar_t *'
| |-ParmVarDecl 0x1141e696e88 <col:67, col:74> col:74 _DirSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e691f20 <line:900:51, col:61> col:61 _Filename 'wchar_t *'
| |-ParmVarDecl 0x1141e691f98 <col:77, col:84> col:84 _FilenameSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1141e692010 <line:901:46, col:56> col:56 _Ext 'wchar_t *'
| `-ParmVarDecl 0x1141e692088 <col:67, col:74> col:74 _ExtSize 'size_t':'unsigned long long'
|-FunctionDecl 0x1141e6926a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:909:78> col:50 _seterrormode 'void (int) __attribute__((cdecl))':'void (int)'
| |-ParmVarDecl 0x1141e692598 <col:69, col:73> col:73 _Mode 'int'
| `-DeprecatedAttr 0x1141e692748 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using SetErrorMode instead. See online help for details." ""
|-FunctionDecl 0x1141e692b38 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:910:97> col:42 _beep 'void (unsigned int, unsigned int) __attribute__((cdecl))':'void (unsigned int, unsigned int)'
| |-ParmVarDecl 0x1141e692958 <col:53, col:62> col:62 _Frequency 'unsigned int'
| |-ParmVarDecl 0x1141e6929d8 <col:79, col:88> col:88 _Duration 'unsigned int'
| `-DeprecatedAttr 0x1141e692be8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using Beep instead. See online help for details." ""
|-FunctionDecl 0x1141e68ef20 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:911:78> col:43 _sleep 'void (unsigned long) __attribute__((cdecl))':'void (unsigned long)'
| |-ParmVarDecl 0x1141e692df0 <col:55, col:69> col:69 _Duration 'unsigned long'
| `-DeprecatedAttr 0x1141e68efc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using Sleep instead. See online help for details." ""
|-FunctionDecl 0x1141e68f530 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:934:187> col:102 ecvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x1141e68f270 <col:112, col:119> col:119 _Val 'double'
| |-ParmVarDecl 0x1141e68f2f0 <col:130, col:134> col:134 _NumOfDigits 'int'
| |-ParmVarDecl 0x1141e68f370 <col:154, col:160> col:160 _PtDec 'int *'
| |-ParmVarDecl 0x1141e68f3f0 <col:174, col:180> col:180 _PtSign 'int *'
| |-DeprecatedAttr 0x1141e68f5f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _ecvt. See online help for details." ""
| `-DeprecatedAttr 0x1141e68f6e8 <col:47, col:63> "This function or variable may be unsafe. Consider using _ecvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e68fc20 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:935:184> col:102 fcvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x1141e68f960 <col:112, col:119> col:119 _Val 'double'
| |-ParmVarDecl 0x1141e68f9e0 <col:130, col:134> col:134 _NumOfDec 'int'
| |-ParmVarDecl 0x1141e68fa60 <col:151, col:157> col:157 _PtDec 'int *'
| |-ParmVarDecl 0x1141e68fae0 <col:171, col:177> col:177 _PtSign 'int *'
| |-DeprecatedAttr 0x1141e68fce0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcvt. See online help for details." ""
| `-DeprecatedAttr 0x1141e68fdd8 <col:47, col:63> "This function or variable may be unsafe. Consider using _fcvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e697308 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:936:179> col:96 gcvt 'char *(double, int, char *) __attribute__((cdecl))':'char *(double, int, char *)'
| |-ParmVarDecl 0x1141e6970e8 <col:106, col:113> col:113 _Val 'double'
| |-ParmVarDecl 0x1141e697168 <col:124, col:128> col:128 _NumOfDigits 'int'
| |-ParmVarDecl 0x1141e6971e8 <col:165, col:172> col:172 _DstBuf 'char *'
| |-DeprecatedAttr 0x1141e6973c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _gcvt. See online help for details." ""
| `-DeprecatedAttr 0x1141e6974b8 <col:47, col:63> "This function or variable may be unsafe. Consider using _fcvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e697950 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:937:170> col:96 itoa 'char *(int, char *, int) __attribute__((cdecl))':'char *(int, char *, int)'
| |-ParmVarDecl 0x1141e697730 <col:106, col:110> col:110 _Val 'int'
| |-ParmVarDecl 0x1141e6977b0 <col:139, col:146> col:146 _DstBuf 'char *'
| |-ParmVarDecl 0x1141e697830 <col:160, col:164> col:164 _Radix 'int'
| |-DeprecatedAttr 0x1141e697a08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _itoa. See online help for details." ""
| `-DeprecatedAttr 0x1141e697b00 <col:47, col:63> "This function or variable may be unsafe. Consider using _itoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e697fc8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:938:171> col:96 ltoa 'char *(long, char *, int) __attribute__((cdecl))':'char *(long, char *, int)'
| |-ParmVarDecl 0x1141e697d78 <col:106, col:111> col:111 _Val 'long'
| |-ParmVarDecl 0x1141e697df8 <col:140, col:147> col:147 _DstBuf 'char *'
| |-ParmVarDecl 0x1141e697e78 <col:161, col:165> col:165 _Radix 'int'
| |-DeprecatedAttr 0x1141e698080 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _ltoa. See online help for details." ""
| `-DeprecatedAttr 0x1141e698178 <col:47, col:63> "This function or variable may be unsafe. Consider using _ltoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e698410 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:941:108> col:71 putenv 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x1141e698330 <col:85, col:98> col:98 _EnvString 'const char *'
| `-DeprecatedAttr 0x1141e6984b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putenv. See online help for details." ""
|-FunctionDecl 0x1141e698898 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:944:245> col:128 swab 'void (char *, char *, int) __attribute__((cdecl))':'void (char *, char *, int)'
| |-ParmVarDecl 0x1141e698680 <col:165, col:172> col:172 _Buf1 'char *'
| |-ParmVarDecl 0x1141e698700 <col:210, col:217> col:217 _Buf2 'char *'
| |-ParmVarDecl 0x1141e698780 <col:229, col:233> col:233 _SizeInBytes 'int'
| `-DeprecatedAttr 0x1141e698950 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _swab. See online help for details." ""
|-FunctionDecl 0x1141e698df8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:945:181> col:96 ultoa 'char *(unsigned long, char *, int) __attribute__((cdecl))':'char *(unsigned long, char *, int)'
| |-ParmVarDecl 0x1141e698bd8 <col:107, col:121> col:121 _Val 'unsigned long'
| |-ParmVarDecl 0x1141e698c58 <col:150, col:157> col:157 _Dstbuf 'char *'
| |-ParmVarDecl 0x1141e698cd8 <col:171, col:175> col:175 _Radix 'int'
| |-DeprecatedAttr 0x1141e698eb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _ultoa. See online help for details." ""
| `-DeprecatedAttr 0x1141e698fc0 <col:47, col:63> "This function or variable may be unsafe. Consider using _ultoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1141e6991a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:64:18, line:947:48> col:18 onexit '_onexit_t (_onexit_t) __attribute__((cdecl))':'_onexit_t (_onexit_t)'
| `-ParmVarDecl 0x1141e6990d0 <line:64:18, line:947:43> col:43 _Func '_onexit_t':'int (*)(void) __attribute__((cdecl))'
|-VarDecl 0x1141e699280 <.//openssl//file_jk/before\test\constant_time_test.c:17:1, col:57> col:27 used CONSTTIME_TRUE 'const unsigned int' static cinit
| `-CStyleCastExpr 0x1141e699380 <col:44, col:57> 'unsigned int' <IntegralCast>
|   `-ParenExpr 0x1141e699360 <col:54, col:57> 'int'
|     `-UnaryOperator 0x1141e699310 <col:55, col:56> 'int' prefix '~' cannot overflow
|       `-IntegerLiteral 0x1141e6992e8 <col:56> 'int' 0
|-VarDecl 0x1141e6993d8 <line:18:1, col:45> col:27 used CONSTTIME_FALSE 'const unsigned int' static cinit
| `-ImplicitCastExpr 0x1141e699480 <col:45> 'unsigned int' <IntegralCast>
|   `-IntegerLiteral 0x1141e699440 <col:45> 'int' 0
|-VarDecl 0x1141e6994b0 <line:19:1, col:47> col:28 used CONSTTIME_TRUE_8 'const unsigned char' static cinit
| `-ImplicitCastExpr 0x1141e699558 <col:47> 'unsigned char' <IntegralCast>
|   `-IntegerLiteral 0x1141e699518 <col:47> 'int' 255
|-VarDecl 0x1141e699588 <line:20:1, col:48> col:28 used CONSTTIME_FALSE_8 'const unsigned char' static cinit
| `-ImplicitCastExpr 0x1141e699630 <col:48> 'unsigned char' <IntegralCast>
|   `-IntegerLiteral 0x1141e6995f0 <col:48> 'int' 0
|-FunctionDecl 0x1141e699c20 <line:22:1, line:37:1> line:22:12 used test_binary_op 'int (unsigned int (*)(unsigned int, unsigned int), const char *, unsigned int, unsigned int, int)' static
| |-ParmVarDecl 0x1141e699850 <col:27, col:77> col:42 used op 'unsigned int (*)(unsigned int, unsigned int)'
| |-ParmVarDecl 0x1141e6998d0 <line:23:27, col:39> col:39 used op_name 'const char *'
| |-ParmVarDecl 0x1141e699950 <col:48, col:61> col:61 used a 'unsigned int'
| |-ParmVarDecl 0x1141e6999d0 <col:64, col:77> col:77 used b 'unsigned int'
| |-ParmVarDecl 0x1141e699a50 <line:24:27, col:31> col:31 used is_true 'int'
| `-CompoundStmt 0x1141e69a9d8 <line:25:1, line:37:1>
|   |-DeclStmt 0x1141e699e58 <line:26:5, col:26>
|   | `-VarDecl 0x1141e699d18 <col:5, col:25> col:14 used c 'unsigned int' cinit
|   |   `-CallExpr 0x1141e699df8 <col:18, col:25> 'unsigned int'
|   |     |-ImplicitCastExpr 0x1141e699de0 <col:18> 'unsigned int (*)(unsigned int, unsigned int)' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1141e699d80 <col:18> 'unsigned int (*)(unsigned int, unsigned int)' lvalue ParmVar 0x1141e699850 'op' 'unsigned int (*)(unsigned int, unsigned int)'
|   |     |-ImplicitCastExpr 0x1141e699e28 <col:21> 'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1141e699da0 <col:21> 'unsigned int' lvalue ParmVar 0x1141e699950 'a' 'unsigned int'
|   |     `-ImplicitCastExpr 0x1141e699e40 <col:24> 'unsigned int' <LValueToRValue>
|   |       `-DeclRefExpr 0x1141e699dc0 <col:24> 'unsigned int' lvalue ParmVar 0x1141e6999d0 'b' 'unsigned int'
|   |-IfStmt 0x1141e69a978 <line:27:5, line:35:5> has_else
|   | |-BinaryOperator 0x1141e699f50 <line:27:9, col:25> 'int' '&&'
|   | | |-ImplicitCastExpr 0x1141e699f38 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1141e699e70 <col:9> 'int' lvalue ParmVar 0x1141e699a50 'is_true' 'int'
|   | | `-BinaryOperator 0x1141e699f18 <col:20, col:25> 'int' '!='
|   | |   |-ImplicitCastExpr 0x1141e699ee8 <col:20> 'unsigned int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x1141e699e90 <col:20> 'unsigned int' lvalue Var 0x1141e699d18 'c' 'unsigned int'
|   | |   `-ImplicitCastExpr 0x1141e699f00 <col:25> 'unsigned int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x1141e699ec8 <col:25> 'const unsigned int' lvalue Var 0x1141e699280 'CONSTTIME_TRUE' 'const unsigned int'
|   | |-CompoundStmt 0x1141e69a438 <col:41, line:31:5>
|   | | |-CallExpr 0x1141e69a300 <line:28:9, line:29:70> 'int'
|   | | | |-ImplicitCastExpr 0x1141e69a2e8 <line:28:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x1141e699fe8 <col:9> 'int (FILE *, const char *, ...)' Function 0x1141e5c5000 'fprintf' 'int (FILE *, const char *, ...)'
|   | | | |-ParenExpr 0x1141e69a120 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | | | `-UnaryOperator 0x1141e69a108 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | | | |   `-ArraySubscriptExpr 0x1141e69a0e8 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | | | |     |-CallExpr 0x1141e69a0a0 <col:18, col:29> 'FILE *'
|   | | | |     | `-ImplicitCastExpr 0x1141e69a088 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | | | |     |   `-DeclRefExpr 0x1141e69a008 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1141e5be518 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | | | |     `-IntegerLiteral 0x1141e69a0c0 <col:31> 'int' 2
|   | | | |-ImplicitCastExpr 0x1141e69a370 <.//openssl//file_jk/before\test\constant_time_test.c:28:25, line:29:17> 'const char *' <NoOp>
|   | | | | `-ImplicitCastExpr 0x1141e69a358 <line:28:25, line:29:17> 'char *' <ArrayToPointerDecay>
|   | | | |   `-StringLiteral 0x1141e69a178 <line:28:25, line:29:17> 'char [60]' lvalue "Test failed for %s(%du, %du): expected %du (TRUE), got %du\n"
|   | | | |-ImplicitCastExpr 0x1141e69a388 <col:38> 'const char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1141e69a1d0 <col:38> 'const char *' lvalue ParmVar 0x1141e6998d0 'op_name' 'const char *'
|   | | | |-ImplicitCastExpr 0x1141e69a3a0 <col:47> 'unsigned int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1141e69a1f0 <col:47> 'unsigned int' lvalue ParmVar 0x1141e699950 'a' 'unsigned int'
|   | | | |-ImplicitCastExpr 0x1141e69a3b8 <col:50> 'unsigned int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1141e69a210 <col:50> 'unsigned int' lvalue ParmVar 0x1141e6999d0 'b' 'unsigned int'
|   | | | |-ImplicitCastExpr 0x1141e69a3d0 <col:53> 'unsigned int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1141e69a230 <col:53> 'const unsigned int' lvalue Var 0x1141e699280 'CONSTTIME_TRUE' 'const unsigned int'
|   | | | `-ImplicitCastExpr 0x1141e69a3e8 <col:69> 'unsigned int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1141e69a250 <col:69> 'unsigned int' lvalue Var 0x1141e699d18 'c' 'unsigned int'
|   | | `-ReturnStmt 0x1141e69a428 <line:30:9, col:16>
|   | |   `-IntegerLiteral 0x1141e69a400 <col:16> 'int' 1
|   | `-IfStmt 0x1141e69a960 <line:31:12, line:35:5>
|   |   |-BinaryOperator 0x1141e69a538 <line:31:16, col:33> 'int' '&&'
|   |   | |-UnaryOperator 0x1141e69a490 <col:16, col:17> 'int' prefix '!' cannot overflow
|   |   | | `-ImplicitCastExpr 0x1141e69a478 <col:17> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1141e69a458 <col:17> 'int' lvalue ParmVar 0x1141e699a50 'is_true' 'int'
|   |   | `-BinaryOperator 0x1141e69a518 <col:28, col:33> 'int' '!='
|   |   |   |-ImplicitCastExpr 0x1141e69a4e8 <col:28> 'unsigned int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x1141e69a4a8 <col:28> 'unsigned int' lvalue Var 0x1141e699d18 'c' 'unsigned int'
|   |   |   `-ImplicitCastExpr 0x1141e69a500 <col:33> 'unsigned int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1141e69a4c8 <col:33> 'const unsigned int' lvalue Var 0x1141e6993d8 'CONSTTIME_FALSE' 'const unsigned int'
|   |   `-CompoundStmt 0x1141e69a940 <col:50, line:35:5>
|   |     |-CallExpr 0x1141e69a808 <line:32:9, line:33:72> 'int'
|   |     | |-ImplicitCastExpr 0x1141e69a7f0 <line:32:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |     | | `-DeclRefExpr 0x1141e69a5a0 <col:9> 'int (FILE *, const char *, ...)' Function 0x1141e5c5000 'fprintf' 'int (FILE *, const char *, ...)'
|   |     | |-ParenExpr 0x1141e69a678 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |     | | `-UnaryOperator 0x1141e69a660 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |     | |   `-ArraySubscriptExpr 0x1141e69a640 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |     | |     |-CallExpr 0x1141e69a5f8 <col:18, col:29> 'FILE *'
|   |     | |     | `-ImplicitCastExpr 0x1141e69a5e0 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |     | |     |   `-DeclRefExpr 0x1141e69a5c0 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1141e5be518 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |     | |     `-IntegerLiteral 0x1141e69a618 <col:31> 'int' 2
|   |     | |-ImplicitCastExpr 0x1141e69a878 <.//openssl//file_jk/before\test\constant_time_test.c:32:25, line:33:17> 'const char *' <NoOp>
|   |     | | `-ImplicitCastExpr 0x1141e69a860 <line:32:25, line:33:17> 'char *' <ArrayToPointerDecay>
|   |     | |   `-StringLiteral 0x1141e69a6d8 <line:32:25, line:33:17> 'char [62]' lvalue "Test failed for  %s(%du, %du): expected %du (FALSE), got %du\n"
|   |     | |-ImplicitCastExpr 0x1141e69a890 <col:39> 'const char *' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1141e69a738 <col:39> 'const char *' lvalue ParmVar 0x1141e6998d0 'op_name' 'const char *'
|   |     | |-ImplicitCastExpr 0x1141e69a8a8 <col:48> 'unsigned int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1141e69a758 <col:48> 'unsigned int' lvalue ParmVar 0x1141e699950 'a' 'unsigned int'
|   |     | |-ImplicitCastExpr 0x1141e69a8c0 <col:51> 'unsigned int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1141e69a778 <col:51> 'unsigned int' lvalue ParmVar 0x1141e6999d0 'b' 'unsigned int'
|   |     | |-ImplicitCastExpr 0x1141e69a8d8 <col:54> 'unsigned int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1141e69a798 <col:54> 'const unsigned int' lvalue Var 0x1141e6993d8 'CONSTTIME_FALSE' 'const unsigned int'
|   |     | `-ImplicitCastExpr 0x1141e69a8f0 <col:71> 'unsigned int' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x1141e69a7b8 <col:71> 'unsigned int' lvalue Var 0x1141e699d18 'c' 'unsigned int'
|   |     `-ReturnStmt 0x1141e69a930 <line:34:9, col:16>
|   |       `-IntegerLiteral 0x1141e69a908 <col:16> 'int' 1
|   `-ReturnStmt 0x1141e69a9c8 <line:36:5, col:12>
|     `-IntegerLiteral 0x1141e69a9a0 <col:12> 'int' 0
|-FunctionDecl 0x1141e62e0e0 <line:39:1, line:55:1> line:39:12 used test_binary_op_8 'int (unsigned char (*)(unsigned int, unsigned int), const char *, unsigned int, unsigned int, int)' static
| |-ParmVarDecl 0x1141e69ac40 <col:29, line:40:71> col:36 used op 'unsigned char (*)(unsigned int, unsigned int)'
| |-ParmVarDecl 0x1141e69acc0 <line:41:29, col:41> col:41 used op_name 'const char *'
| |-ParmVarDecl 0x1141e69ad40 <col:50, col:63> col:63 used a 'unsigned int'
| |-ParmVarDecl 0x1141e69adc0 <line:42:29, col:42> col:42 used b 'unsigned int'
| |-ParmVarDecl 0x1141e69ae40 <col:45, col:49> col:49 used is_true 'int'
| `-CompoundStmt 0x1141e62ee20 <line:43:1, line:55:1>
|   |-DeclStmt 0x1141e62e318 <line:44:5, col:31>
|   | `-VarDecl 0x1141e62e1d8 <col:5, col:30> col:19 used c 'unsigned char' cinit
|   |   `-CallExpr 0x1141e62e2b8 <col:23, col:30> 'unsigned char'
|   |     |-ImplicitCastExpr 0x1141e62e2a0 <col:23> 'unsigned char (*)(unsigned int, unsigned int)' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1141e62e240 <col:23> 'unsigned char (*)(unsigned int, unsigned int)' lvalue ParmVar 0x1141e69ac40 'op' 'unsigned char (*)(unsigned int, unsigned int)'
|   |     |-ImplicitCastExpr 0x1141e62e2e8 <col:26> 'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1141e62e260 <col:26> 'unsigned int' lvalue ParmVar 0x1141e69ad40 'a' 'unsigned int'
|   |     `-ImplicitCastExpr 0x1141e62e300 <col:29> 'unsigned int' <LValueToRValue>
|   |       `-DeclRefExpr 0x1141e62e280 <col:29> 'unsigned int' lvalue ParmVar 0x1141e69adc0 'b' 'unsigned int'
|   |-IfStmt 0x1141e62edc0 <line:45:5, line:53:5> has_else
|   | |-BinaryOperator 0x1141e62e440 <line:45:9, col:25> 'int' '&&'
|   | | |-ImplicitCastExpr 0x1141e62e428 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1141e62e330 <col:9> 'int' lvalue ParmVar 0x1141e69ae40 'is_true' 'int'
|   | | `-BinaryOperator 0x1141e62e408 <col:20, col:25> 'int' '!='
|   | |   |-ImplicitCastExpr 0x1141e62e3d8 <col:20> 'int' <IntegralCast>
|   | |   | `-ImplicitCastExpr 0x1141e62e3a8 <col:20> 'unsigned char' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x1141e62e350 <col:20> 'unsigned char' lvalue Var 0x1141e62e1d8 'c' 'unsigned char'
|   | |   `-ImplicitCastExpr 0x1141e62e3f0 <col:25> 'int' <IntegralCast>
|   | |     `-ImplicitCastExpr 0x1141e62e3c0 <col:25> 'unsigned char' <LValueToRValue>
|   | |       `-DeclRefExpr 0x1141e62e388 <col:25> 'const unsigned char' lvalue Var 0x1141e6994b0 'CONSTTIME_TRUE_8' 'const unsigned char'
|   | |-CompoundStmt 0x1141e62e868 <col:43, line:49:5>
|   | | |-CallExpr 0x1141e62e700 <line:46:9, line:47:71> 'int'
|   | | | |-ImplicitCastExpr 0x1141e62e6e8 <line:46:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x1141e62e4a8 <col:9> 'int (FILE *, const char *, ...)' Function 0x1141e5c5000 'fprintf' 'int (FILE *, const char *, ...)'
|   | | | |-ParenExpr 0x1141e62e580 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | | | `-UnaryOperator 0x1141e62e568 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | | | |   `-ArraySubscriptExpr 0x1141e62e548 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | | | |     |-CallExpr 0x1141e62e500 <col:18, col:29> 'FILE *'
|   | | | |     | `-ImplicitCastExpr 0x1141e62e4e8 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | | | |     |   `-DeclRefExpr 0x1141e62e4c8 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1141e5be518 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | | | |     `-IntegerLiteral 0x1141e62e520 <col:31> 'int' 2
|   | | | |-ImplicitCastExpr 0x1141e62e770 <.//openssl//file_jk/before\test\constant_time_test.c:46:25, line:47:17> 'const char *' <NoOp>
|   | | | | `-ImplicitCastExpr 0x1141e62e758 <line:46:25, line:47:17> 'char *' <ArrayToPointerDecay>
|   | | | |   `-StringLiteral 0x1141e62e5d8 <line:46:25, line:47:17> 'char [58]' lvalue "Test failed for %s(%du, %du): expected %u (TRUE), got %u\n"
|   | | | |-ImplicitCastExpr 0x1141e62e788 <col:37> 'const char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1141e62e630 <col:37> 'const char *' lvalue ParmVar 0x1141e69acc0 'op_name' 'const char *'
|   | | | |-ImplicitCastExpr 0x1141e62e7a0 <col:46> 'unsigned int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1141e62e650 <col:46> 'unsigned int' lvalue ParmVar 0x1141e69ad40 'a' 'unsigned int'
|   | | | |-ImplicitCastExpr 0x1141e62e7b8 <col:49> 'unsigned int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1141e62e670 <col:49> 'unsigned int' lvalue ParmVar 0x1141e69adc0 'b' 'unsigned int'
|   | | | |-ImplicitCastExpr 0x1141e62e7e8 <col:52> 'int' <IntegralCast>
|   | | | | `-ImplicitCastExpr 0x1141e62e7d0 <col:52> 'unsigned char' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x1141e62e690 <col:52> 'const unsigned char' lvalue Var 0x1141e6994b0 'CONSTTIME_TRUE_8' 'const unsigned char'
|   | | | `-ImplicitCastExpr 0x1141e62e818 <col:70> 'int' <IntegralCast>
|   | | |   `-ImplicitCastExpr 0x1141e62e800 <col:70> 'unsigned char' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x1141e62e6b0 <col:70> 'unsigned char' lvalue Var 0x1141e62e1d8 'c' 'unsigned char'
|   | | `-ReturnStmt 0x1141e62e858 <line:48:9, col:16>
|   | |   `-IntegerLiteral 0x1141e62e830 <col:16> 'int' 1
|   | `-IfStmt 0x1141e62eda8 <line:49:12, line:53:5>
|   |   |-BinaryOperator 0x1141e62e998 <line:49:16, col:33> 'int' '&&'
|   |   | |-UnaryOperator 0x1141e62e8c0 <col:16, col:17> 'int' prefix '!' cannot overflow
|   |   | | `-ImplicitCastExpr 0x1141e62e8a8 <col:17> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1141e62e888 <col:17> 'int' lvalue ParmVar 0x1141e69ae40 'is_true' 'int'
|   |   | `-BinaryOperator 0x1141e62e978 <col:28, col:33> 'int' '!='
|   |   |   |-ImplicitCastExpr 0x1141e62e948 <col:28> 'int' <IntegralCast>
|   |   |   | `-ImplicitCastExpr 0x1141e62e918 <col:28> 'unsigned char' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x1141e62e8d8 <col:28> 'unsigned char' lvalue Var 0x1141e62e1d8 'c' 'unsigned char'
|   |   |   `-ImplicitCastExpr 0x1141e62e960 <col:33> 'int' <IntegralCast>
|   |   |     `-ImplicitCastExpr 0x1141e62e930 <col:33> 'unsigned char' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x1141e62e8f8 <col:33> 'const unsigned char' lvalue Var 0x1141e699588 'CONSTTIME_FALSE_8' 'const unsigned char'
|   |   `-CompoundStmt 0x1141e62ed88 <col:52, line:53:5>
|   |     |-CallExpr 0x1141e62ec20 <line:50:9, line:51:73> 'int'
|   |     | |-ImplicitCastExpr 0x1141e62ec08 <line:50:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |     | | `-DeclRefExpr 0x1141e62ea00 <col:9> 'int (FILE *, const char *, ...)' Function 0x1141e5c5000 'fprintf' 'int (FILE *, const char *, ...)'
|   |     | |-ParenExpr 0x1141e62ead8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |     | | `-UnaryOperator 0x1141e62eac0 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |     | |   `-ArraySubscriptExpr 0x1141e62eaa0 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |     | |     |-CallExpr 0x1141e62ea58 <col:18, col:29> 'FILE *'
|   |     | |     | `-ImplicitCastExpr 0x1141e62ea40 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |     | |     |   `-DeclRefExpr 0x1141e62ea20 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1141e5be518 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |     | |     `-IntegerLiteral 0x1141e62ea78 <col:31> 'int' 2
|   |     | |-ImplicitCastExpr 0x1141e62ec90 <.//openssl//file_jk/before\test\constant_time_test.c:50:25, line:51:17> 'const char *' <NoOp>
|   |     | | `-ImplicitCastExpr 0x1141e62ec78 <line:50:25, line:51:17> 'char *' <ArrayToPointerDecay>
|   |     | |   `-StringLiteral 0x1141e62eaf8 <line:50:25, line:51:17> 'char [60]' lvalue "Test failed for  %s(%du, %du): expected %u (FALSE), got %u\n"
|   |     | |-ImplicitCastExpr 0x1141e62eca8 <col:38> 'const char *' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1141e62eb50 <col:38> 'const char *' lvalue ParmVar 0x1141e69acc0 'op_name' 'const char *'
|   |     | |-ImplicitCastExpr 0x1141e62ecc0 <col:47> 'unsigned int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1141e62eb70 <col:47> 'unsigned int' lvalue ParmVar 0x1141e69ad40 'a' 'unsigned int'
|   |     | |-ImplicitCastExpr 0x1141e62ecd8 <col:50> 'unsigned int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1141e62eb90 <col:50> 'unsigned int' lvalue ParmVar 0x1141e69adc0 'b' 'unsigned int'
|   |     | |-ImplicitCastExpr 0x1141e62ed08 <col:53> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x1141e62ecf0 <col:53> 'unsigned char' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x1141e62ebb0 <col:53> 'const unsigned char' lvalue Var 0x1141e699588 'CONSTTIME_FALSE_8' 'const unsigned char'
|   |     | `-ImplicitCastExpr 0x1141e62ed38 <col:72> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x1141e62ed20 <col:72> 'unsigned char' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x1141e62ebd0 <col:72> 'unsigned char' lvalue Var 0x1141e62e1d8 'c' 'unsigned char'
|   |     `-ReturnStmt 0x1141e62ed78 <line:52:9, col:16>
|   |       `-IntegerLiteral 0x1141e62ed50 <col:16> 'int' 1
|   `-ReturnStmt 0x1141e62ee10 <line:54:5, col:12>
|     `-IntegerLiteral 0x1141e62ede8 <col:12> 'int' 0
|-FunctionDecl 0x1141e62ef40 <line:57:1, line:70:1> line:57:12 used test_is_zero 'int (unsigned int)' static
| |-ParmVarDecl 0x1141e62ee60 <col:25, col:38> col:38 used a 'unsigned int'
| `-CompoundStmt 0x1141e743d30 <line:58:1, line:70:1>
|   |-DeclStmt 0x1141e743368 <line:59:5, col:46>
|   | `-VarDecl 0x1141e743100 <col:5, col:45> col:18 used c 'unsigned int' cinit
|   |   `-ImplicitCastExpr 0x1141e743350 <col:22, col:45> 'unsigned int' <IntegralCast>
|   |     `-CallExpr 0x1141e743310 <col:22, col:45> 'int'
|   |       |-ImplicitCastExpr 0x1141e7432f8 <col:22> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x1141e743288 <col:22> 'int ()' Function 0x1141e7431c0 'constant_time_is_zero' 'int ()'
|   |       `-ImplicitCastExpr 0x1141e743338 <col:44> 'unsigned int' <LValueToRValue>
|   |         `-DeclRefExpr 0x1141e7432a8 <col:44> 'unsigned int' lvalue ParmVar 0x1141e62ee60 'a' 'unsigned int'
|   |-IfStmt 0x1141e743cd0 <line:60:5, line:68:5> has_else
|   | |-BinaryOperator 0x1141e7434c0 <line:60:9, col:24> 'int' '&&'
|   | | |-BinaryOperator 0x1141e7433f8 <col:9, col:14> 'int' '=='
|   | | | |-ImplicitCastExpr 0x1141e7433c8 <col:9> 'unsigned int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1141e743380 <col:9> 'unsigned int' lvalue ParmVar 0x1141e62ee60 'a' 'unsigned int'
|   | | | `-ImplicitCastExpr 0x1141e7433e0 <col:14> 'unsigned int' <IntegralCast>
|   | | |   `-IntegerLiteral 0x1141e7433a0 <col:14> 'int' 0
|   | | `-BinaryOperator 0x1141e7434a0 <col:19, col:24> 'int' '!='
|   | |   |-ImplicitCastExpr 0x1141e743470 <col:19> 'unsigned int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x1141e743418 <col:19> 'unsigned int' lvalue Var 0x1141e743100 'c' 'unsigned int'
|   | |   `-ImplicitCastExpr 0x1141e743488 <col:24> 'unsigned int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x1141e743450 <col:24> 'const unsigned int' lvalue Var 0x1141e699280 'CONSTTIME_TRUE' 'const unsigned int'
|   | |-CompoundStmt 0x1141e743808 <col:40, line:64:5>
|   | | |-CallExpr 0x1141e743710 <line:61:9, line:62:71> 'int'
|   | | | |-ImplicitCastExpr 0x1141e7436f8 <line:61:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x1141e7434e0 <col:9> 'int (FILE *, const char *, ...)' Function 0x1141e5c5000 'fprintf' 'int (FILE *, const char *, ...)'
|   | | | |-ParenExpr 0x1141e7435b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | | | `-UnaryOperator 0x1141e7435a0 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | | | |   `-ArraySubscriptExpr 0x1141e743580 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | | | |     |-CallExpr 0x1141e743538 <col:18, col:29> 'FILE *'
|   | | | |     | `-ImplicitCastExpr 0x1141e743520 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | | | |     |   `-DeclRefExpr 0x1141e743500 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1141e5be518 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | | | |     `-IntegerLiteral 0x1141e743558 <col:31> 'int' 2
|   | | | |-ImplicitCastExpr 0x1141e743770 <.//openssl//file_jk/before\test\constant_time_test.c:61:25, line:62:17> 'const char *' <NoOp>
|   | | | | `-ImplicitCastExpr 0x1141e743758 <line:61:25, line:62:17> 'char *' <ArrayToPointerDecay>
|   | | | |   `-StringLiteral 0x1141e743618 <line:61:25, line:62:17> 'char [74]' lvalue "Test failed for constant_time_is_zero(%du): expected %du (TRUE), got %du\n"
|   | | | |-ImplicitCastExpr 0x1141e743788 <col:51> 'unsigned int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1141e743680 <col:51> 'unsigned int' lvalue ParmVar 0x1141e62ee60 'a' 'unsigned int'
|   | | | |-ImplicitCastExpr 0x1141e7437a0 <col:54> 'unsigned int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1141e7436a0 <col:54> 'const unsigned int' lvalue Var 0x1141e699280 'CONSTTIME_TRUE' 'const unsigned int'
|   | | | `-ImplicitCastExpr 0x1141e7437b8 <col:70> 'unsigned int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1141e7436c0 <col:70> 'unsigned int' lvalue Var 0x1141e743100 'c' 'unsigned int'
|   | | `-ReturnStmt 0x1141e7437f8 <line:63:9, col:16>
|   | |   `-IntegerLiteral 0x1141e7437d0 <col:16> 'int' 1
|   | `-IfStmt 0x1141e743cb8 <line:64:12, line:68:5>
|   |   |-BinaryOperator 0x1141e743950 <line:64:16, col:31> 'int' '&&'
|   |   | |-BinaryOperator 0x1141e7438a0 <col:16, col:21> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x1141e743870 <col:16> 'unsigned int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1141e743828 <col:16> 'unsigned int' lvalue ParmVar 0x1141e62ee60 'a' 'unsigned int'
|   |   | | `-ImplicitCastExpr 0x1141e743888 <col:21> 'unsigned int' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x1141e743848 <col:21> 'int' 0
|   |   | `-BinaryOperator 0x1141e743930 <col:26, col:31> 'int' '!='
|   |   |   |-ImplicitCastExpr 0x1141e743900 <col:26> 'unsigned int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x1141e7438c0 <col:26> 'unsigned int' lvalue Var 0x1141e743100 'c' 'unsigned int'
|   |   |   `-ImplicitCastExpr 0x1141e743918 <col:31> 'unsigned int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1141e7438e0 <col:31> 'const unsigned int' lvalue Var 0x1141e6993d8 'CONSTTIME_FALSE' 'const unsigned int'
|   |   `-CompoundStmt 0x1141e743c98 <col:48, line:68:5>
|   |     |-CallExpr 0x1141e743ba0 <line:65:9, line:66:73> 'int'
|   |     | |-ImplicitCastExpr 0x1141e743b88 <line:65:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |     | | `-DeclRefExpr 0x1141e743970 <col:9> 'int (FILE *, const char *, ...)' Function 0x1141e5c5000 'fprintf' 'int (FILE *, const char *, ...)'
|   |     | |-ParenExpr 0x1141e743a48 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |     | | `-UnaryOperator 0x1141e743a30 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |     | |   `-ArraySubscriptExpr 0x1141e743a10 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |     | |     |-CallExpr 0x1141e7439c8 <col:18, col:29> 'FILE *'
|   |     | |     | `-ImplicitCastExpr 0x1141e7439b0 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |     | |     |   `-DeclRefExpr 0x1141e743990 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1141e5be518 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |     | |     `-IntegerLiteral 0x1141e7439e8 <col:31> 'int' 2
|   |     | |-ImplicitCastExpr 0x1141e743c00 <.//openssl//file_jk/before\test\constant_time_test.c:65:25, line:66:17> 'const char *' <NoOp>
|   |     | | `-ImplicitCastExpr 0x1141e743be8 <line:65:25, line:66:17> 'char *' <ArrayToPointerDecay>
|   |     | |   `-StringLiteral 0x1141e743aa8 <line:65:25, line:66:17> 'char [75]' lvalue "Test failed for constant_time_is_zero(%du): expected %du (FALSE), got %du\n"
|   |     | |-ImplicitCastExpr 0x1141e743c18 <col:52> 'unsigned int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1141e743b10 <col:52> 'unsigned int' lvalue ParmVar 0x1141e62ee60 'a' 'unsigned int'
|   |     | |-ImplicitCastExpr 0x1141e743c30 <col:55> 'unsigned int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1141e743b30 <col:55> 'const unsigned int' lvalue Var 0x1141e6993d8 'CONSTTIME_FALSE' 'const unsigned int'
|   |     | `-ImplicitCastExpr 0x1141e743c48 <col:72> 'unsigned int' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x1141e743b50 <col:72> 'unsigned int' lvalue Var 0x1141e743100 'c' 'unsigned int'
|   |     `-ReturnStmt 0x1141e743c88 <line:67:9, col:16>
|   |       `-IntegerLiteral 0x1141e743c60 <col:16> 'int' 1
|   `-ReturnStmt 0x1141e743d20 <line:69:5, col:12>
|     `-IntegerLiteral 0x1141e743cf8 <col:12> 'int' 0
|-FunctionDecl 0x1141e743e20 <line:72:1, line:85:1> line:72:12 used test_is_zero_8 'int (unsigned int)' static
| |-ParmVarDecl 0x1141e743d70 <col:27, col:40> col:40 used a 'unsigned int'
| `-CompoundStmt 0x1141e742b50 <line:73:1, line:85:1>
|   |-DeclStmt 0x1141e7420f0 <line:74:5, col:49>
|   | `-VarDecl 0x1141e743ef8 <col:5, col:48> col:19 used c 'unsigned char' cinit
|   |   `-ImplicitCastExpr 0x1141e7440e8 <col:23, col:48> 'unsigned char' <IntegralCast>
|   |     `-CallExpr 0x1141e7440a8 <col:23, col:48> 'int'
|   |       |-ImplicitCastExpr 0x1141e744090 <col:23> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x1141e744050 <col:23> 'int ()' Function 0x1141e743f88 'constant_time_is_zero_8' 'int ()'
|   |       `-ImplicitCastExpr 0x1141e7440d0 <col:47> 'unsigned int' <LValueToRValue>
|   |         `-DeclRefExpr 0x1141e744070 <col:47> 'unsigned int' lvalue ParmVar 0x1141e743d70 'a' 'unsigned int'
|   |-IfStmt 0x1141e742af0 <line:75:5, line:83:5> has_else
|   | |-BinaryOperator 0x1141e742278 <line:75:9, col:24> 'int' '&&'
|   | | |-BinaryOperator 0x1141e742180 <col:9, col:14> 'int' '=='
|   | | | |-ImplicitCastExpr 0x1141e742150 <col:9> 'unsigned int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1141e742108 <col:9> 'unsigned int' lvalue ParmVar 0x1141e743d70 'a' 'unsigned int'
|   | | | `-ImplicitCastExpr 0x1141e742168 <col:14> 'unsigned int' <IntegralCast>
|   | | |   `-IntegerLiteral 0x1141e742128 <col:14> 'int' 0
|   | | `-BinaryOperator 0x1141e742258 <col:19, col:24> 'int' '!='
|   | |   |-ImplicitCastExpr 0x1141e742228 <col:19> 'int' <IntegralCast>
|   | |   | `-ImplicitCastExpr 0x1141e7421f8 <col:19> 'unsigned char' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x1141e7421a0 <col:19> 'unsigned char' lvalue Var 0x1141e743ef8 'c' 'unsigned char'
|   | |   `-ImplicitCastExpr 0x1141e742240 <col:24> 'int' <IntegralCast>
|   | |     `-ImplicitCastExpr 0x1141e742210 <col:24> 'unsigned char' <LValueToRValue>
|   | |       `-DeclRefExpr 0x1141e7421d8 <col:24> 'const unsigned char' lvalue Var 0x1141e6994b0 'CONSTTIME_TRUE_8' 'const unsigned char'
|   | |-CompoundStmt 0x1141e7425e8 <col:42, line:79:5>
|   | | |-CallExpr 0x1141e7424c0 <line:76:9, line:77:71> 'int'
|   | | | |-ImplicitCastExpr 0x1141e7424a8 <line:76:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x1141e742298 <col:9> 'int (FILE *, const char *, ...)' Function 0x1141e5c5000 'fprintf' 'int (FILE *, const char *, ...)'
|   | | | |-ParenExpr 0x1141e742370 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | | | `-UnaryOperator 0x1141e742358 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | | | |   `-ArraySubscriptExpr 0x1141e742338 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | | | |     |-CallExpr 0x1141e7422f0 <col:18, col:29> 'FILE *'
|   | | | |     | `-ImplicitCastExpr 0x1141e7422d8 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | | | |     |   `-DeclRefExpr 0x1141e7422b8 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1141e5be518 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | | | |     `-IntegerLiteral 0x1141e742310 <col:31> 'int' 2
|   | | | |-ImplicitCastExpr 0x1141e742520 <.//openssl//file_jk/before\test\constant_time_test.c:76:25, line:77:17> 'const char *' <NoOp>
|   | | | | `-ImplicitCastExpr 0x1141e742508 <line:76:25, line:77:17> 'char *' <ArrayToPointerDecay>
|   | | | |   `-StringLiteral 0x1141e7423c8 <line:76:25, line:77:17> 'char [72]' lvalue "Test failed for constant_time_is_zero(%du): expected %u (TRUE), got %u\n"
|   | | | |-ImplicitCastExpr 0x1141e742538 <col:49> 'unsigned int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1141e742430 <col:49> 'unsigned int' lvalue ParmVar 0x1141e743d70 'a' 'unsigned int'
|   | | | |-ImplicitCastExpr 0x1141e742568 <col:52> 'int' <IntegralCast>
|   | | | | `-ImplicitCastExpr 0x1141e742550 <col:52> 'unsigned char' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x1141e742450 <col:52> 'const unsigned char' lvalue Var 0x1141e6994b0 'CONSTTIME_TRUE_8' 'const unsigned char'
|   | | | `-ImplicitCastExpr 0x1141e742598 <col:70> 'int' <IntegralCast>
|   | | |   `-ImplicitCastExpr 0x1141e742580 <col:70> 'unsigned char' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x1141e742470 <col:70> 'unsigned char' lvalue Var 0x1141e743ef8 'c' 'unsigned char'
|   | | `-ReturnStmt 0x1141e7425d8 <line:78:9, col:16>
|   | |   `-IntegerLiteral 0x1141e7425b0 <col:16> 'int' 1
|   | `-IfStmt 0x1141e742ad8 <line:79:12, line:83:5>
|   |   |-BinaryOperator 0x1141e742748 <line:79:16, col:31> 'int' '&&'
|   |   | |-BinaryOperator 0x1141e742680 <col:16, col:21> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x1141e742650 <col:16> 'unsigned int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1141e742608 <col:16> 'unsigned int' lvalue ParmVar 0x1141e743d70 'a' 'unsigned int'
|   |   | | `-ImplicitCastExpr 0x1141e742668 <col:21> 'unsigned int' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x1141e742628 <col:21> 'int' 0
|   |   | `-BinaryOperator 0x1141e742728 <col:26, col:31> 'int' '!='
|   |   |   |-ImplicitCastExpr 0x1141e742710 <col:26> 'unsigned int' <IntegralCast>
|   |   |   | `-ImplicitCastExpr 0x1141e7426e0 <col:26> 'unsigned char' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x1141e7426a0 <col:26> 'unsigned char' lvalue Var 0x1141e743ef8 'c' 'unsigned char'
|   |   |   `-ImplicitCastExpr 0x1141e7426f8 <col:31> 'unsigned int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1141e7426c0 <col:31> 'const unsigned int' lvalue Var 0x1141e6993d8 'CONSTTIME_FALSE' 'const unsigned int'
|   |   `-CompoundStmt 0x1141e742ab8 <col:48, line:83:5>
|   |     |-CallExpr 0x1141e742990 <line:80:9, line:81:73> 'int'
|   |     | |-ImplicitCastExpr 0x1141e742978 <line:80:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |     | | `-DeclRefExpr 0x1141e742768 <col:9> 'int (FILE *, const char *, ...)' Function 0x1141e5c5000 'fprintf' 'int (FILE *, const char *, ...)'
|   |     | |-ParenExpr 0x1141e742840 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |     | | `-UnaryOperator 0x1141e742828 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |     | |   `-ArraySubscriptExpr 0x1141e742808 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |     | |     |-CallExpr 0x1141e7427c0 <col:18, col:29> 'FILE *'
|   |     | |     | `-ImplicitCastExpr 0x1141e7427a8 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |     | |     |   `-DeclRefExpr 0x1141e742788 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1141e5be518 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |     | |     `-IntegerLiteral 0x1141e7427e0 <col:31> 'int' 2
|   |     | |-ImplicitCastExpr 0x1141e7429f0 <.//openssl//file_jk/before\test\constant_time_test.c:80:25, line:81:17> 'const char *' <NoOp>
|   |     | | `-ImplicitCastExpr 0x1141e7429d8 <line:80:25, line:81:17> 'char *' <ArrayToPointerDecay>
|   |     | |   `-StringLiteral 0x1141e742898 <line:80:25, line:81:17> 'char [73]' lvalue "Test failed for constant_time_is_zero(%du): expected %u (FALSE), got %u\n"
|   |     | |-ImplicitCastExpr 0x1141e742a08 <col:50> 'unsigned int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1141e742900 <col:50> 'unsigned int' lvalue ParmVar 0x1141e743d70 'a' 'unsigned int'
|   |     | |-ImplicitCastExpr 0x1141e742a38 <col:53> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x1141e742a20 <col:53> 'unsigned char' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x1141e742920 <col:53> 'const unsigned char' lvalue Var 0x1141e699588 'CONSTTIME_FALSE_8' 'const unsigned char'
|   |     | `-ImplicitCastExpr 0x1141e742a68 <col:72> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x1141e742a50 <col:72> 'unsigned char' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x1141e742940 <col:72> 'unsigned char' lvalue Var 0x1141e743ef8 'c' 'unsigned char'
|   |     `-ReturnStmt 0x1141e742aa8 <line:82:9, col:16>
|   |       `-IntegerLiteral 0x1141e742a80 <col:16> 'int' 1
|   `-ReturnStmt 0x1141e742b40 <line:84:5, col:12>
|     `-IntegerLiteral 0x1141e742b18 <col:12> 'int' 0
|-FunctionDecl 0x1141e742d20 <line:87:1, line:104:1> line:87:12 used test_select 'int (unsigned int, unsigned int)' static
| |-ParmVarDecl 0x1141e742b90 <col:24, col:37> col:37 used a 'unsigned int'
| |-ParmVarDecl 0x1141e742c10 <col:40, col:53> col:53 used b 'unsigned int'
| `-CompoundStmt 0x1141e746bb8 <line:88:1, line:104:1>
|   |-DeclStmt 0x1141e743088 <line:89:5, col:71>
|   | `-VarDecl 0x1141e742e00 <col:5, col:70> col:18 used selected 'unsigned int' cinit
|   |   `-ImplicitCastExpr 0x1141e743070 <col:29, col:70> 'unsigned int' <IntegralCast>
|   |     `-CallExpr 0x1141e742ff0 <col:29, col:70> 'int'
|   |       |-ImplicitCastExpr 0x1141e742fd8 <col:29> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x1141e742f58 <col:29> 'int ()' Function 0x1141e742e90 'constant_time_select' 'int ()'
|   |       |-ImplicitCastExpr 0x1141e743028 <col:50> 'unsigned int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x1141e742f78 <col:50> 'const unsigned int' lvalue Var 0x1141e699280 'CONSTTIME_TRUE' 'const unsigned int'
|   |       |-ImplicitCastExpr 0x1141e743040 <col:66> 'unsigned int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x1141e742f98 <col:66> 'unsigned int' lvalue ParmVar 0x1141e742b90 'a' 'unsigned int'
|   |       `-ImplicitCastExpr 0x1141e743058 <col:69> 'unsigned int' <LValueToRValue>
|   |         `-DeclRefExpr 0x1141e742fb8 <col:69> 'unsigned int' lvalue ParmVar 0x1141e742c10 'b' 'unsigned int'
|   |-IfStmt 0x1141e746578 <line:90:5, line:95:5>
|   | |-BinaryOperator 0x1141e746180 <line:90:9, col:21> 'int' '!='
|   | | |-ImplicitCastExpr 0x1141e746150 <col:9> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1141e7430a0 <col:9> 'unsigned int' lvalue Var 0x1141e742e00 'selected' 'unsigned int'
|   | | `-ImplicitCastExpr 0x1141e746168 <col:21> 'unsigned int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1141e746130 <col:21> 'unsigned int' lvalue ParmVar 0x1141e742b90 'a' 'unsigned int'
|   | `-CompoundStmt 0x1141e746558 <col:24, line:95:5>
|   |   |-CallExpr 0x1141e746420 <line:91:9, line:93:50> 'int'
|   |   | |-ImplicitCastExpr 0x1141e746408 <line:91:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1141e7461a0 <col:9> 'int (FILE *, const char *, ...)' Function 0x1141e5c5000 'fprintf' 'int (FILE *, const char *, ...)'
|   |   | |-ParenExpr 0x1141e746278 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |   | | `-UnaryOperator 0x1141e746260 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |   | |   `-ArraySubscriptExpr 0x1141e746240 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |   | |     |-CallExpr 0x1141e7461f8 <col:18, col:29> 'FILE *'
|   |   | |     | `-ImplicitCastExpr 0x1141e7461e0 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | |     |   `-DeclRefExpr 0x1141e7461c0 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1141e5be518 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |   | |     `-IntegerLiteral 0x1141e746218 <col:31> 'int' 2
|   |   | |-ImplicitCastExpr 0x1141e746490 <.//openssl//file_jk/before\test\constant_time_test.c:91:25, line:92:17> 'const char *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x1141e746478 <line:91:25, line:92:17> 'char *' <ArrayToPointerDecay>
|   |   | |   `-StringLiteral 0x1141e7462d8 <line:91:25, line:92:17> 'char [88]' lvalue "Test failed for constant_time_select(%du, %du,%du): expected %du(first value), got %du\n"
|   |   | |-ImplicitCastExpr 0x1141e7464a8 <line:93:17> 'unsigned int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1141e746350 <col:17> 'const unsigned int' lvalue Var 0x1141e699280 'CONSTTIME_TRUE' 'const unsigned int'
|   |   | |-ImplicitCastExpr 0x1141e7464c0 <col:33> 'unsigned int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1141e746370 <col:33> 'unsigned int' lvalue ParmVar 0x1141e742b90 'a' 'unsigned int'
|   |   | |-ImplicitCastExpr 0x1141e7464d8 <col:36> 'unsigned int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1141e746390 <col:36> 'unsigned int' lvalue ParmVar 0x1141e742c10 'b' 'unsigned int'
|   |   | |-ImplicitCastExpr 0x1141e7464f0 <col:39> 'unsigned int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1141e7463b0 <col:39> 'unsigned int' lvalue ParmVar 0x1141e742b90 'a' 'unsigned int'
|   |   | `-ImplicitCastExpr 0x1141e746508 <col:42> 'unsigned int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1141e7463d0 <col:42> 'unsigned int' lvalue Var 0x1141e742e00 'selected' 'unsigned int'
|   |   `-ReturnStmt 0x1141e746548 <line:94:9, col:16>
|   |     `-IntegerLiteral 0x1141e746520 <col:16> 'int' 1
|   |-BinaryOperator 0x1141e7466e0 <line:96:5, col:58> 'unsigned int' '='
|   | |-DeclRefExpr 0x1141e746590 <col:5> 'unsigned int' lvalue Var 0x1141e742e00 'selected' 'unsigned int'
|   | `-ImplicitCastExpr 0x1141e7466c8 <col:16, col:58> 'unsigned int' <IntegralCast>
|   |   `-CallExpr 0x1141e746648 <col:16, col:58> 'int'
|   |     |-ImplicitCastExpr 0x1141e746630 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1141e7465b0 <col:16> 'int ()' Function 0x1141e742e90 'constant_time_select' 'int ()'
|   |     |-ImplicitCastExpr 0x1141e746680 <col:37> 'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1141e7465d0 <col:37> 'const unsigned int' lvalue Var 0x1141e6993d8 'CONSTTIME_FALSE' 'const unsigned int'
|   |     |-ImplicitCastExpr 0x1141e746698 <col:54> 'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1141e7465f0 <col:54> 'unsigned int' lvalue ParmVar 0x1141e742b90 'a' 'unsigned int'
|   |     `-ImplicitCastExpr 0x1141e7466b0 <col:57> 'unsigned int' <LValueToRValue>
|   |       `-DeclRefExpr 0x1141e746610 <col:57> 'unsigned int' lvalue ParmVar 0x1141e742c10 'b' 'unsigned int'
|   |-IfStmt 0x1141e746b68 <line:97:5, line:102:5>
|   | |-BinaryOperator 0x1141e746770 <line:97:9, col:21> 'int' '!='
|   | | |-ImplicitCastExpr 0x1141e746740 <col:9> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1141e746700 <col:9> 'unsigned int' lvalue Var 0x1141e742e00 'selected' 'unsigned int'
|   | | `-ImplicitCastExpr 0x1141e746758 <col:21> 'unsigned int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1141e746720 <col:21> 'unsigned int' lvalue ParmVar 0x1141e742c10 'b' 'unsigned int'
|   | `-CompoundStmt 0x1141e746b48 <col:24, line:102:5>
|   |   |-CallExpr 0x1141e746a10 <line:98:9, line:100:51> 'int'
|   |   | |-ImplicitCastExpr 0x1141e7469f8 <line:98:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1141e746790 <col:9> 'int (FILE *, const char *, ...)' Function 0x1141e5c5000 'fprintf' 'int (FILE *, const char *, ...)'
|   |   | |-ParenExpr 0x1141e746868 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |   | | `-UnaryOperator 0x1141e746850 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |   | |   `-ArraySubscriptExpr 0x1141e746830 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |   | |     |-CallExpr 0x1141e7467e8 <col:18, col:29> 'FILE *'
|   |   | |     | `-ImplicitCastExpr 0x1141e7467d0 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | |     |   `-DeclRefExpr 0x1141e7467b0 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1141e5be518 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |   | |     `-IntegerLiteral 0x1141e746808 <col:31> 'int' 2
|   |   | |-ImplicitCastExpr 0x1141e746a80 <.//openssl//file_jk/before\test\constant_time_test.c:98:25, line:99:17> 'const char *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x1141e746a68 <line:98:25, line:99:17> 'char *' <ArrayToPointerDecay>
|   |   | |   `-StringLiteral 0x1141e7468c8 <line:98:25, line:99:17> 'char [89]' lvalue "Test failed for constant_time_select(%du, %du,%du): expected %du(second value), got %du\n"
|   |   | |-ImplicitCastExpr 0x1141e746a98 <line:100:17> 'unsigned int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1141e746940 <col:17> 'const unsigned int' lvalue Var 0x1141e6993d8 'CONSTTIME_FALSE' 'const unsigned int'
|   |   | |-ImplicitCastExpr 0x1141e746ab0 <col:34> 'unsigned int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1141e746960 <col:34> 'unsigned int' lvalue ParmVar 0x1141e742b90 'a' 'unsigned int'
|   |   | |-ImplicitCastExpr 0x1141e746ac8 <col:37> 'unsigned int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1141e746980 <col:37> 'unsigned int' lvalue ParmVar 0x1141e742c10 'b' 'unsigned int'
|   |   | |-ImplicitCastExpr 0x1141e746ae0 <col:40> 'unsigned int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1141e7469a0 <col:40> 'unsigned int' lvalue ParmVar 0x1141e742c10 'b' 'unsigned int'
|   |   | `-ImplicitCastExpr 0x1141e746af8 <col:43> 'unsigned int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1141e7469c0 <col:43> 'unsigned int' lvalue Var 0x1141e742e00 'selected' 'unsigned int'
|   |   `-ReturnStmt 0x1141e746b38 <line:101:9, col:16>
|   |     `-IntegerLiteral 0x1141e746b10 <col:16> 'int' 1
|   `-ReturnStmt 0x1141e746ba8 <line:103:5, col:12>
|     `-IntegerLiteral 0x1141e746b80 <col:12> 'int' 0
|-FunctionDecl 0x1141e746d90 <line:106:1, line:123:1> line:106:12 used test_select_8 'int (unsigned char, unsigned char)' static
| |-ParmVarDecl 0x1141e746c08 <col:26, col:40> col:40 used a 'unsigned char'
| |-ParmVarDecl 0x1141e746c88 <col:43, col:57> col:57 used b 'unsigned char'
| `-CompoundStmt 0x1141e747d80 <line:107:1, line:123:1>
|   |-DeclStmt 0x1141e747158 <line:108:5, col:76>
|   | `-VarDecl 0x1141e746e70 <col:5, col:75> col:19 used selected 'unsigned char' cinit
|   |   `-ImplicitCastExpr 0x1141e747140 <col:30, col:75> 'unsigned char' <IntegralCast>
|   |     `-CallExpr 0x1141e747060 <col:30, col:75> 'int'
|   |       |-ImplicitCastExpr 0x1141e747048 <col:30> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x1141e746fc8 <col:30> 'int ()' Function 0x1141e746f00 'constant_time_select_8' 'int ()'
|   |       |-ImplicitCastExpr 0x1141e7470b0 <col:53> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x1141e747098 <col:53> 'unsigned char' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x1141e746fe8 <col:53> 'const unsigned char' lvalue Var 0x1141e6994b0 'CONSTTIME_TRUE_8' 'const unsigned char'
|   |       |-ImplicitCastExpr 0x1141e7470e0 <col:71> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x1141e7470c8 <col:71> 'unsigned char' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x1141e747008 <col:71> 'unsigned char' lvalue ParmVar 0x1141e746c08 'a' 'unsigned char'
|   |       `-ImplicitCastExpr 0x1141e747110 <col:74> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x1141e7470f8 <col:74> 'unsigned char' <LValueToRValue>
|   |           `-DeclRefExpr 0x1141e747028 <col:74> 'unsigned char' lvalue ParmVar 0x1141e746c88 'b' 'unsigned char'
|   |-IfStmt 0x1141e747670 <line:109:5, line:114:5>
|   | |-BinaryOperator 0x1141e747228 <line:109:9, col:21> 'int' '!='
|   | | |-ImplicitCastExpr 0x1141e7471f8 <col:9> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x1141e7471c8 <col:9> 'unsigned char' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1141e747170 <col:9> 'unsigned char' lvalue Var 0x1141e746e70 'selected' 'unsigned char'
|   | | `-ImplicitCastExpr 0x1141e747210 <col:21> 'int' <IntegralCast>
|   | |   `-ImplicitCastExpr 0x1141e7471e0 <col:21> 'unsigned char' <LValueToRValue>
|   | |     `-DeclRefExpr 0x1141e7471a8 <col:21> 'unsigned char' lvalue ParmVar 0x1141e746c08 'a' 'unsigned char'
|   | `-CompoundStmt 0x1141e747650 <col:24, line:114:5>
|   |   |-CallExpr 0x1141e7474b8 <line:110:9, line:112:50> 'int'
|   |   | |-ImplicitCastExpr 0x1141e7474a0 <line:110:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1141e747248 <col:9> 'int (FILE *, const char *, ...)' Function 0x1141e5c5000 'fprintf' 'int (FILE *, const char *, ...)'
|   |   | |-ParenExpr 0x1141e747320 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |   | | `-UnaryOperator 0x1141e747308 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |   | |   `-ArraySubscriptExpr 0x1141e7472e8 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |   | |     |-CallExpr 0x1141e7472a0 <col:18, col:29> 'FILE *'
|   |   | |     | `-ImplicitCastExpr 0x1141e747288 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | |     |   `-DeclRefExpr 0x1141e747268 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1141e5be518 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |   | |     `-IntegerLiteral 0x1141e7472c0 <col:31> 'int' 2
|   |   | |-ImplicitCastExpr 0x1141e747528 <.//openssl//file_jk/before\test\constant_time_test.c:110:25, line:111:17> 'const char *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x1141e747510 <line:110:25, line:111:17> 'char *' <ArrayToPointerDecay>
|   |   | |   `-StringLiteral 0x1141e747378 <line:110:25, line:111:17> 'char [83]' lvalue "Test failed for constant_time_select(%u, %u,%u): expected %u(first value), got %u\n"
|   |   | |-ImplicitCastExpr 0x1141e747540 <line:112:17> 'unsigned int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1141e7473e8 <col:17> 'const unsigned int' lvalue Var 0x1141e699280 'CONSTTIME_TRUE' 'const unsigned int'
|   |   | |-ImplicitCastExpr 0x1141e747570 <col:33> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x1141e747558 <col:33> 'unsigned char' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1141e747408 <col:33> 'unsigned char' lvalue ParmVar 0x1141e746c08 'a' 'unsigned char'
|   |   | |-ImplicitCastExpr 0x1141e7475a0 <col:36> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x1141e747588 <col:36> 'unsigned char' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1141e747428 <col:36> 'unsigned char' lvalue ParmVar 0x1141e746c88 'b' 'unsigned char'
|   |   | |-ImplicitCastExpr 0x1141e7475d0 <col:39> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x1141e7475b8 <col:39> 'unsigned char' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1141e747448 <col:39> 'unsigned char' lvalue ParmVar 0x1141e746c08 'a' 'unsigned char'
|   |   | `-ImplicitCastExpr 0x1141e747600 <col:42> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x1141e7475e8 <col:42> 'unsigned char' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1141e747468 <col:42> 'unsigned char' lvalue Var 0x1141e746e70 'selected' 'unsigned char'
|   |   `-ReturnStmt 0x1141e747640 <line:113:9, col:16>
|   |     `-IntegerLiteral 0x1141e747618 <col:16> 'int' 1
|   |-BinaryOperator 0x1141e747820 <line:115:5, col:62> 'unsigned char' '='
|   | |-DeclRefExpr 0x1141e747688 <col:5> 'unsigned char' lvalue Var 0x1141e746e70 'selected' 'unsigned char'
|   | `-ImplicitCastExpr 0x1141e747808 <col:16, col:62> 'unsigned char' <IntegralCast>
|   |   `-CallExpr 0x1141e747740 <col:16, col:62> 'int'
|   |     |-ImplicitCastExpr 0x1141e747728 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1141e7476a8 <col:16> 'int ()' Function 0x1141e746f00 'constant_time_select_8' 'int ()'
|   |     |-ImplicitCastExpr 0x1141e747790 <col:39> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x1141e747778 <col:39> 'unsigned char' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x1141e7476c8 <col:39> 'const unsigned char' lvalue Var 0x1141e699588 'CONSTTIME_FALSE_8' 'const unsigned char'
|   |     |-ImplicitCastExpr 0x1141e7477c0 <col:58> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x1141e7477a8 <col:58> 'unsigned char' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x1141e7476e8 <col:58> 'unsigned char' lvalue ParmVar 0x1141e746c08 'a' 'unsigned char'
|   |     `-ImplicitCastExpr 0x1141e7477f0 <col:61> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x1141e7477d8 <col:61> 'unsigned char' <LValueToRValue>
|   |         `-DeclRefExpr 0x1141e747708 <col:61> 'unsigned char' lvalue ParmVar 0x1141e746c88 'b' 'unsigned char'
|   |-IfStmt 0x1141e747d30 <line:116:5, line:121:5>
|   | |-BinaryOperator 0x1141e7478e0 <line:116:9, col:21> 'int' '!='
|   | | |-ImplicitCastExpr 0x1141e7478b0 <col:9> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x1141e747880 <col:9> 'unsigned char' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1141e747840 <col:9> 'unsigned char' lvalue Var 0x1141e746e70 'selected' 'unsigned char'
|   | | `-ImplicitCastExpr 0x1141e7478c8 <col:21> 'int' <IntegralCast>
|   | |   `-ImplicitCastExpr 0x1141e747898 <col:21> 'unsigned char' <LValueToRValue>
|   | |     `-DeclRefExpr 0x1141e747860 <col:21> 'unsigned char' lvalue ParmVar 0x1141e746c88 'b' 'unsigned char'
|   | `-CompoundStmt 0x1141e747d10 <col:24, line:121:5>
|   |   |-CallExpr 0x1141e747b78 <line:117:9, line:119:51> 'int'
|   |   | |-ImplicitCastExpr 0x1141e747b60 <line:117:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1141e747900 <col:9> 'int (FILE *, const char *, ...)' Function 0x1141e5c5000 'fprintf' 'int (FILE *, const char *, ...)'
|   |   | |-ParenExpr 0x1141e7479d8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |   | | `-UnaryOperator 0x1141e7479c0 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |   | |   `-ArraySubscriptExpr 0x1141e7479a0 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |   | |     |-CallExpr 0x1141e747958 <col:18, col:29> 'FILE *'
|   |   | |     | `-ImplicitCastExpr 0x1141e747940 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | |     |   `-DeclRefExpr 0x1141e747920 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1141e5be518 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |   | |     `-IntegerLiteral 0x1141e747978 <col:31> 'int' 2
|   |   | |-ImplicitCastExpr 0x1141e747be8 <.//openssl//file_jk/before\test\constant_time_test.c:117:25, line:118:17> 'const char *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x1141e747bd0 <line:117:25, line:118:17> 'char *' <ArrayToPointerDecay>
|   |   | |   `-StringLiteral 0x1141e747a38 <line:117:25, line:118:17> 'char [84]' lvalue "Test failed for constant_time_select(%u, %u,%u): expected %u(second value), got %u\n"
|   |   | |-ImplicitCastExpr 0x1141e747c00 <line:119:17> 'unsigned int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1141e747aa8 <col:17> 'const unsigned int' lvalue Var 0x1141e6993d8 'CONSTTIME_FALSE' 'const unsigned int'
|   |   | |-ImplicitCastExpr 0x1141e747c30 <col:34> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x1141e747c18 <col:34> 'unsigned char' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1141e747ac8 <col:34> 'unsigned char' lvalue ParmVar 0x1141e746c08 'a' 'unsigned char'
|   |   | |-ImplicitCastExpr 0x1141e747c60 <col:37> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x1141e747c48 <col:37> 'unsigned char' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1141e747ae8 <col:37> 'unsigned char' lvalue ParmVar 0x1141e746c88 'b' 'unsigned char'
|   |   | |-ImplicitCastExpr 0x1141e747c90 <col:40> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x1141e747c78 <col:40> 'unsigned char' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1141e747b08 <col:40> 'unsigned char' lvalue ParmVar 0x1141e746c88 'b' 'unsigned char'
|   |   | `-ImplicitCastExpr 0x1141e747cc0 <col:43> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x1141e747ca8 <col:43> 'unsigned char' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1141e747b28 <col:43> 'unsigned char' lvalue Var 0x1141e746e70 'selected' 'unsigned char'
|   |   `-ReturnStmt 0x1141e747d00 <line:120:9, col:16>
|   |     `-IntegerLiteral 0x1141e747cd8 <col:16> 'int' 1
|   `-ReturnStmt 0x1141e747d70 <line:122:5, col:12>
|     `-IntegerLiteral 0x1141e747d48 <col:12> 'int' 0
|-FunctionDecl 0x1141e747f60 <line:125:1, line:142:1> line:125:12 used test_select_int 'int (int, int)' static
| |-ParmVarDecl 0x1141e747dd0 <col:28, col:32> col:32 used a 'int'
| |-ParmVarDecl 0x1141e747e50 <col:35, col:39> col:39 used b 'int'
| `-CompoundStmt 0x1141e745d70 <line:126:1, line:142:1>
|   |-DeclStmt 0x1141e745300 <line:127:5, col:66>
|   | `-VarDecl 0x1141e748040 <col:5, col:65> col:9 used selected 'int' cinit
|   |   `-CallExpr 0x1141e745280 <col:20, col:65> 'int'
|   |     |-ImplicitCastExpr 0x1141e745268 <col:20> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1141e7451e8 <col:20> 'int ()' Function 0x1141e745120 'constant_time_select_int' 'int ()'
|   |     |-ImplicitCastExpr 0x1141e7452b8 <col:45> 'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1141e745208 <col:45> 'const unsigned int' lvalue Var 0x1141e699280 'CONSTTIME_TRUE' 'const unsigned int'
|   |     |-ImplicitCastExpr 0x1141e7452d0 <col:61> 'int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1141e745228 <col:61> 'int' lvalue ParmVar 0x1141e747dd0 'a' 'int'
|   |     `-ImplicitCastExpr 0x1141e7452e8 <col:64> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x1141e745248 <col:64> 'int' lvalue ParmVar 0x1141e747e50 'b' 'int'
|   |-IfStmt 0x1141e745750 <line:128:5, line:133:5>
|   | |-BinaryOperator 0x1141e7453a0 <line:128:9, col:21> 'int' '!='
|   | | |-ImplicitCastExpr 0x1141e745370 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1141e745318 <col:9> 'int' lvalue Var 0x1141e748040 'selected' 'int'
|   | | `-ImplicitCastExpr 0x1141e745388 <col:21> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1141e745350 <col:21> 'int' lvalue ParmVar 0x1141e747dd0 'a' 'int'
|   | `-CompoundStmt 0x1141e745730 <col:24, line:133:5>
|   |   |-CallExpr 0x1141e7455f8 <line:129:9, line:131:50> 'int'
|   |   | |-ImplicitCastExpr 0x1141e7455e0 <line:129:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1141e7453c0 <col:9> 'int (FILE *, const char *, ...)' Function 0x1141e5c5000 'fprintf' 'int (FILE *, const char *, ...)'
|   |   | |-ParenExpr 0x1141e745498 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |   | | `-UnaryOperator 0x1141e745480 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |   | |   `-ArraySubscriptExpr 0x1141e745460 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |   | |     |-CallExpr 0x1141e745418 <col:18, col:29> 'FILE *'
|   |   | |     | `-ImplicitCastExpr 0x1141e745400 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | |     |   `-DeclRefExpr 0x1141e7453e0 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1141e5be518 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |   | |     `-IntegerLiteral 0x1141e745438 <col:31> 'int' 2
|   |   | |-ImplicitCastExpr 0x1141e745668 <.//openssl//file_jk/before\test\constant_time_test.c:129:25, line:130:17> 'const char *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x1141e745650 <line:129:25, line:130:17> 'char *' <ArrayToPointerDecay>
|   |   | |   `-StringLiteral 0x1141e7454b8 <line:129:25, line:130:17> 'char [84]' lvalue "Test failed for constant_time_select(%du, %d,%d): expected %d(first value), got %d\n"
|   |   | |-ImplicitCastExpr 0x1141e745680 <line:131:17> 'unsigned int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1141e745528 <col:17> 'const unsigned int' lvalue Var 0x1141e699280 'CONSTTIME_TRUE' 'const unsigned int'
|   |   | |-ImplicitCastExpr 0x1141e745698 <col:33> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1141e745548 <col:33> 'int' lvalue ParmVar 0x1141e747dd0 'a' 'int'
|   |   | |-ImplicitCastExpr 0x1141e7456b0 <col:36> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1141e745568 <col:36> 'int' lvalue ParmVar 0x1141e747e50 'b' 'int'
|   |   | |-ImplicitCastExpr 0x1141e7456c8 <col:39> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1141e745588 <col:39> 'int' lvalue ParmVar 0x1141e747dd0 'a' 'int'
|   |   | `-ImplicitCastExpr 0x1141e7456e0 <col:42> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1141e7455a8 <col:42> 'int' lvalue Var 0x1141e748040 'selected' 'int'
|   |   `-ReturnStmt 0x1141e745720 <line:132:9, col:16>
|   |     `-IntegerLiteral 0x1141e7456f8 <col:16> 'int' 1
|   |-BinaryOperator 0x1141e7458a0 <line:134:5, col:62> 'int' '='
|   | |-DeclRefExpr 0x1141e745768 <col:5> 'int' lvalue Var 0x1141e748040 'selected' 'int'
|   | `-CallExpr 0x1141e745820 <col:16, col:62> 'int'
|   |   |-ImplicitCastExpr 0x1141e745808 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1141e745788 <col:16> 'int ()' Function 0x1141e745120 'constant_time_select_int' 'int ()'
|   |   |-ImplicitCastExpr 0x1141e745858 <col:41> 'unsigned int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1141e7457a8 <col:41> 'const unsigned int' lvalue Var 0x1141e6993d8 'CONSTTIME_FALSE' 'const unsigned int'
|   |   |-ImplicitCastExpr 0x1141e745870 <col:58> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1141e7457c8 <col:58> 'int' lvalue ParmVar 0x1141e747dd0 'a' 'int'
|   |   `-ImplicitCastExpr 0x1141e745888 <col:61> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x1141e7457e8 <col:61> 'int' lvalue ParmVar 0x1141e747e50 'b' 'int'
|   |-IfStmt 0x1141e745d20 <line:135:5, line:140:5>
|   | |-BinaryOperator 0x1141e745930 <line:135:9, col:21> 'int' '!='
|   | | |-ImplicitCastExpr 0x1141e745900 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1141e7458c0 <col:9> 'int' lvalue Var 0x1141e748040 'selected' 'int'
|   | | `-ImplicitCastExpr 0x1141e745918 <col:21> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1141e7458e0 <col:21> 'int' lvalue ParmVar 0x1141e747e50 'b' 'int'
|   | `-CompoundStmt 0x1141e745d00 <col:24, line:140:5>
|   |   |-CallExpr 0x1141e745bc8 <line:136:9, line:138:51> 'int'
|   |   | |-ImplicitCastExpr 0x1141e745bb0 <line:136:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1141e745950 <col:9> 'int (FILE *, const char *, ...)' Function 0x1141e5c5000 'fprintf' 'int (FILE *, const char *, ...)'
|   |   | |-ParenExpr 0x1141e745a28 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |   | | `-UnaryOperator 0x1141e745a10 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |   | |   `-ArraySubscriptExpr 0x1141e7459f0 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |   | |     |-CallExpr 0x1141e7459a8 <col:18, col:29> 'FILE *'
|   |   | |     | `-ImplicitCastExpr 0x1141e745990 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | |     |   `-DeclRefExpr 0x1141e745970 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1141e5be518 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |   | |     `-IntegerLiteral 0x1141e7459c8 <col:31> 'int' 2
|   |   | |-ImplicitCastExpr 0x1141e745c38 <.//openssl//file_jk/before\test\constant_time_test.c:136:25, line:137:17> 'const char *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x1141e745c20 <line:136:25, line:137:17> 'char *' <ArrayToPointerDecay>
|   |   | |   `-StringLiteral 0x1141e745a88 <line:136:25, line:137:17> 'char [85]' lvalue "Test failed for constant_time_select(%du, %d,%d): expected %d(second value), got %d\n"
|   |   | |-ImplicitCastExpr 0x1141e745c50 <line:138:17> 'unsigned int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1141e745af8 <col:17> 'const unsigned int' lvalue Var 0x1141e6993d8 'CONSTTIME_FALSE' 'const unsigned int'
|   |   | |-ImplicitCastExpr 0x1141e745c68 <col:34> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1141e745b18 <col:34> 'int' lvalue ParmVar 0x1141e747dd0 'a' 'int'
|   |   | |-ImplicitCastExpr 0x1141e745c80 <col:37> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1141e745b38 <col:37> 'int' lvalue ParmVar 0x1141e747e50 'b' 'int'
|   |   | |-ImplicitCastExpr 0x1141e745c98 <col:40> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1141e745b58 <col:40> 'int' lvalue ParmVar 0x1141e747e50 'b' 'int'
|   |   | `-ImplicitCastExpr 0x1141e745cb0 <col:43> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1141e745b78 <col:43> 'int' lvalue Var 0x1141e748040 'selected' 'int'
|   |   `-ReturnStmt 0x1141e745cf0 <line:139:9, col:16>
|   |     `-IntegerLiteral 0x1141e745cc8 <col:16> 'int' 1
|   `-ReturnStmt 0x1141e745d60 <line:141:5, col:12>
|     `-IntegerLiteral 0x1141e745d38 <col:12> 'int' 0
|-FunctionDecl 0x1141e745f10 <line:144:1, line:158:1> line:144:12 used test_eq_int 'int (int, int)' static
| |-ParmVarDecl 0x1141e745dc0 <col:24, col:28> col:28 used a 'int'
| |-ParmVarDecl 0x1141e745e40 <col:31, col:35> col:35 used b 'int'
| `-CompoundStmt 0x1141e6a1350 <line:145:1, line:158:1>
|   |-DeclStmt 0x1141e6a0958 <line:146:5, col:52>
|   | `-VarDecl 0x1141e745ff0 <col:5, col:51> col:18 used equal 'unsigned int' cinit
|   |   `-ImplicitCastExpr 0x1141e6a0940 <col:26, col:51> 'unsigned int' <IntegralCast>
|   |     `-CallExpr 0x1141e6a08e0 <col:26, col:51> 'int'
|   |       |-ImplicitCastExpr 0x1141e6a08c8 <col:26> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x1141e6a0868 <col:26> 'int ()' Function 0x1141e746080 'constant_time_eq_int' 'int ()'
|   |       |-ImplicitCastExpr 0x1141e6a0910 <col:47> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x1141e6a0888 <col:47> 'int' lvalue ParmVar 0x1141e745dc0 'a' 'int'
|   |       `-ImplicitCastExpr 0x1141e6a0928 <col:50> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x1141e6a08a8 <col:50> 'int' lvalue ParmVar 0x1141e745e40 'b' 'int'
|   |-IfStmt 0x1141e6a12f0 <line:147:5, line:156:5> has_else
|   | |-BinaryOperator 0x1141e6a0aa8 <line:147:9, col:28> 'int' '&&'
|   | | |-BinaryOperator 0x1141e6a09e0 <col:9, col:14> 'int' '=='
|   | | | |-ImplicitCastExpr 0x1141e6a09b0 <col:9> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1141e6a0970 <col:9> 'int' lvalue ParmVar 0x1141e745dc0 'a' 'int'
|   | | | `-ImplicitCastExpr 0x1141e6a09c8 <col:14> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1141e6a0990 <col:14> 'int' lvalue ParmVar 0x1141e745e40 'b' 'int'
|   | | `-BinaryOperator 0x1141e6a0a88 <col:19, col:28> 'int' '!='
|   | |   |-ImplicitCastExpr 0x1141e6a0a58 <col:19> 'unsigned int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x1141e6a0a00 <col:19> 'unsigned int' lvalue Var 0x1141e745ff0 'equal' 'unsigned int'
|   | |   `-ImplicitCastExpr 0x1141e6a0a70 <col:28> 'unsigned int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x1141e6a0a38 <col:28> 'const unsigned int' lvalue Var 0x1141e699280 'CONSTTIME_TRUE' 'const unsigned int'
|   | |-CompoundStmt 0x1141e6a0df0 <col:44, line:151:5>
|   | | |-CallExpr 0x1141e6a0cd8 <line:148:9, line:149:77> 'int'
|   | | | |-ImplicitCastExpr 0x1141e6a0cc0 <line:148:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x1141e6a0ac8 <col:9> 'int (FILE *, const char *, ...)' Function 0x1141e5c5000 'fprintf' 'int (FILE *, const char *, ...)'
|   | | | |-ParenExpr 0x1141e6a0ba0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | | | `-UnaryOperator 0x1141e6a0b88 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | | | |   `-ArraySubscriptExpr 0x1141e6a0b68 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | | | |     |-CallExpr 0x1141e6a0b20 <col:18, col:29> 'FILE *'
|   | | | |     | `-ImplicitCastExpr 0x1141e6a0b08 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | | | |     |   `-DeclRefExpr 0x1141e6a0ae8 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1141e5be518 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | | | |     `-IntegerLiteral 0x1141e6a0b40 <col:31> 'int' 2
|   | | | |-ImplicitCastExpr 0x1141e6a0d40 <.//openssl//file_jk/before\test\constant_time_test.c:148:25, line:149:17> 'const char *' <NoOp>
|   | | | | `-ImplicitCastExpr 0x1141e6a0d28 <line:148:25, line:149:17> 'char *' <ArrayToPointerDecay>
|   | | | |   `-StringLiteral 0x1141e6a0bc0 <line:148:25, line:149:17> 'char [75]' lvalue "Test failed for constant_time_eq_int(%d, %d): expected %du(TRUE), got %du\n"
|   | | | |-ImplicitCastExpr 0x1141e6a0d58 <col:50> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1141e6a0c28 <col:50> 'int' lvalue ParmVar 0x1141e745dc0 'a' 'int'
|   | | | |-ImplicitCastExpr 0x1141e6a0d70 <col:53> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1141e6a0c48 <col:53> 'int' lvalue ParmVar 0x1141e745e40 'b' 'int'
|   | | | |-ImplicitCastExpr 0x1141e6a0d88 <col:56> 'unsigned int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1141e6a0c68 <col:56> 'const unsigned int' lvalue Var 0x1141e699280 'CONSTTIME_TRUE' 'const unsigned int'
|   | | | `-ImplicitCastExpr 0x1141e6a0da0 <col:72> 'unsigned int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1141e6a0c88 <col:72> 'unsigned int' lvalue Var 0x1141e745ff0 'equal' 'unsigned int'
|   | | `-ReturnStmt 0x1141e6a0de0 <line:150:9, col:16>
|   | |   `-IntegerLiteral 0x1141e6a0db8 <col:16> 'int' 1
|   | `-IfStmt 0x1141e6a12d8 <line:151:12, line:156:5>
|   |   |-BinaryOperator 0x1141e6a0f30 <line:151:16, col:35> 'int' '&&'
|   |   | |-BinaryOperator 0x1141e6a0e80 <col:16, col:21> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x1141e6a0e50 <col:16> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1141e6a0e10 <col:16> 'int' lvalue ParmVar 0x1141e745dc0 'a' 'int'
|   |   | | `-ImplicitCastExpr 0x1141e6a0e68 <col:21> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1141e6a0e30 <col:21> 'int' lvalue ParmVar 0x1141e745e40 'b' 'int'
|   |   | `-BinaryOperator 0x1141e6a0f10 <col:26, col:35> 'int' '!='
|   |   |   |-ImplicitCastExpr 0x1141e6a0ee0 <col:26> 'unsigned int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x1141e6a0ea0 <col:26> 'unsigned int' lvalue Var 0x1141e745ff0 'equal' 'unsigned int'
|   |   |   `-ImplicitCastExpr 0x1141e6a0ef8 <col:35> 'unsigned int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1141e6a0ec0 <col:35> 'const unsigned int' lvalue Var 0x1141e6993d8 'CONSTTIME_FALSE' 'const unsigned int'
|   |   `-CompoundStmt 0x1141e6a12b8 <col:52, line:156:5>
|   |     |-CallExpr 0x1141e6a11a0 <line:152:9, line:154:45> 'int'
|   |     | |-ImplicitCastExpr 0x1141e6a1188 <line:152:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |     | | `-DeclRefExpr 0x1141e6a0f50 <col:9> 'int (FILE *, const char *, ...)' Function 0x1141e5c5000 'fprintf' 'int (FILE *, const char *, ...)'
|   |     | |-ParenExpr 0x1141e6a1028 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |     | | `-UnaryOperator 0x1141e6a1010 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |     | |   `-ArraySubscriptExpr 0x1141e6a0ff0 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |     | |     |-CallExpr 0x1141e6a0fa8 <col:18, col:29> 'FILE *'
|   |     | |     | `-ImplicitCastExpr 0x1141e6a0f90 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |     | |     |   `-DeclRefExpr 0x1141e6a0f70 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1141e5be518 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |     | |     `-IntegerLiteral 0x1141e6a0fc8 <col:31> 'int' 2
|   |     | |-ImplicitCastExpr 0x1141e6a1208 <.//openssl//file_jk/before\test\constant_time_test.c:152:25, line:153:17> 'const char *' <NoOp>
|   |     | | `-ImplicitCastExpr 0x1141e6a11f0 <line:152:25, line:153:17> 'char *' <ArrayToPointerDecay>
|   |     | |   `-StringLiteral 0x1141e6a1088 <line:152:25, line:153:17> 'char [76]' lvalue "Test failed for constant_time_eq_int(%d, %d): expected %du(FALSE), got %du\n"
|   |     | |-ImplicitCastExpr 0x1141e6a1220 <line:154:17> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1141e6a10f0 <col:17> 'int' lvalue ParmVar 0x1141e745dc0 'a' 'int'
|   |     | |-ImplicitCastExpr 0x1141e6a1238 <col:20> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1141e6a1110 <col:20> 'int' lvalue ParmVar 0x1141e745e40 'b' 'int'
|   |     | |-ImplicitCastExpr 0x1141e6a1250 <col:23> 'unsigned int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1141e6a1130 <col:23> 'const unsigned int' lvalue Var 0x1141e6993d8 'CONSTTIME_FALSE' 'const unsigned int'
|   |     | `-ImplicitCastExpr 0x1141e6a1268 <col:40> 'unsigned int' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x1141e6a1150 <col:40> 'unsigned int' lvalue Var 0x1141e745ff0 'equal' 'unsigned int'
|   |     `-ReturnStmt 0x1141e6a12a8 <line:155:9, col:16>
|   |       `-IntegerLiteral 0x1141e6a1280 <col:16> 'int' 1
|   `-ReturnStmt 0x1141e6a1340 <line:157:5, col:12>
|     `-IntegerLiteral 0x1141e6a1318 <col:12> 'int' 0
|-FunctionDecl 0x1141e6a14e0 <line:160:1, line:174:1> line:160:12 used test_eq_int_8 'int (int, int)' static
| |-ParmVarDecl 0x1141e6a1390 <col:26, col:30> col:30 used a 'int'
| |-ParmVarDecl 0x1141e6a1410 <col:33, col:37> col:37 used b 'int'
| `-CompoundStmt 0x1141e6a2280 <line:161:1, line:174:1>
|   |-DeclStmt 0x1141e6a1808 <line:162:5, col:55>
|   | `-VarDecl 0x1141e6a15c0 <col:5, col:54> col:19 used equal 'unsigned char' cinit
|   |   `-ImplicitCastExpr 0x1141e6a17f0 <col:27, col:54> 'unsigned char' <IntegralCast>
|   |     `-CallExpr 0x1141e6a1790 <col:27, col:54> 'int'
|   |       |-ImplicitCastExpr 0x1141e6a1778 <col:27> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x1141e6a1718 <col:27> 'int ()' Function 0x1141e6a1650 'constant_time_eq_int_8' 'int ()'
|   |       |-ImplicitCastExpr 0x1141e6a17c0 <col:50> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x1141e6a1738 <col:50> 'int' lvalue ParmVar 0x1141e6a1390 'a' 'int'
|   |       `-ImplicitCastExpr 0x1141e6a17d8 <col:53> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x1141e6a1758 <col:53> 'int' lvalue ParmVar 0x1141e6a1410 'b' 'int'
|   |-IfStmt 0x1141e6a2220 <line:163:5, line:172:5> has_else
|   | |-BinaryOperator 0x1141e6a1988 <line:163:9, col:28> 'int' '&&'
|   | | |-BinaryOperator 0x1141e6a1890 <col:9, col:14> 'int' '=='
|   | | | |-ImplicitCastExpr 0x1141e6a1860 <col:9> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1141e6a1820 <col:9> 'int' lvalue ParmVar 0x1141e6a1390 'a' 'int'
|   | | | `-ImplicitCastExpr 0x1141e6a1878 <col:14> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1141e6a1840 <col:14> 'int' lvalue ParmVar 0x1141e6a1410 'b' 'int'
|   | | `-BinaryOperator 0x1141e6a1968 <col:19, col:28> 'int' '!='
|   | |   |-ImplicitCastExpr 0x1141e6a1938 <col:19> 'int' <IntegralCast>
|   | |   | `-ImplicitCastExpr 0x1141e6a1908 <col:19> 'unsigned char' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x1141e6a18b0 <col:19> 'unsigned char' lvalue Var 0x1141e6a15c0 'equal' 'unsigned char'
|   | |   `-ImplicitCastExpr 0x1141e6a1950 <col:28> 'int' <IntegralCast>
|   | |     `-ImplicitCastExpr 0x1141e6a1920 <col:28> 'unsigned char' <LValueToRValue>
|   | |       `-DeclRefExpr 0x1141e6a18e8 <col:28> 'const unsigned char' lvalue Var 0x1141e6994b0 'CONSTTIME_TRUE_8' 'const unsigned char'
|   | |-CompoundStmt 0x1141e6a1d00 <col:46, line:167:5>
|   | | |-CallExpr 0x1141e6a1bb8 <line:164:9, line:165:77> 'int'
|   | | | |-ImplicitCastExpr 0x1141e6a1ba0 <line:164:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x1141e6a19a8 <col:9> 'int (FILE *, const char *, ...)' Function 0x1141e5c5000 'fprintf' 'int (FILE *, const char *, ...)'
|   | | | |-ParenExpr 0x1141e6a1a80 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | | | `-UnaryOperator 0x1141e6a1a68 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | | | |   `-ArraySubscriptExpr 0x1141e6a1a48 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | | | |     |-CallExpr 0x1141e6a1a00 <col:18, col:29> 'FILE *'
|   | | | |     | `-ImplicitCastExpr 0x1141e6a19e8 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | | | |     |   `-DeclRefExpr 0x1141e6a19c8 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1141e5be518 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | | | |     `-IntegerLiteral 0x1141e6a1a20 <col:31> 'int' 2
|   | | | |-ImplicitCastExpr 0x1141e6a1c20 <.//openssl//file_jk/before\test\constant_time_test.c:164:25, line:165:17> 'const char *' <NoOp>
|   | | | | `-ImplicitCastExpr 0x1141e6a1c08 <line:164:25, line:165:17> 'char *' <ArrayToPointerDecay>
|   | | | |   `-StringLiteral 0x1141e6a1aa0 <line:164:25, line:165:17> 'char [75]' lvalue "Test failed for constant_time_eq_int_8(%d, %d): expected %u(TRUE), got %u\n"
|   | | | |-ImplicitCastExpr 0x1141e6a1c38 <col:48> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1141e6a1b08 <col:48> 'int' lvalue ParmVar 0x1141e6a1390 'a' 'int'
|   | | | |-ImplicitCastExpr 0x1141e6a1c50 <col:51> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1141e6a1b28 <col:51> 'int' lvalue ParmVar 0x1141e6a1410 'b' 'int'
|   | | | |-ImplicitCastExpr 0x1141e6a1c80 <col:54> 'int' <IntegralCast>
|   | | | | `-ImplicitCastExpr 0x1141e6a1c68 <col:54> 'unsigned char' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x1141e6a1b48 <col:54> 'const unsigned char' lvalue Var 0x1141e6994b0 'CONSTTIME_TRUE_8' 'const unsigned char'
|   | | | `-ImplicitCastExpr 0x1141e6a1cb0 <col:72> 'int' <IntegralCast>
|   | | |   `-ImplicitCastExpr 0x1141e6a1c98 <col:72> 'unsigned char' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x1141e6a1b68 <col:72> 'unsigned char' lvalue Var 0x1141e6a15c0 'equal' 'unsigned char'
|   | | `-ReturnStmt 0x1141e6a1cf0 <line:166:9, col:16>
|   | |   `-IntegerLiteral 0x1141e6a1cc8 <col:16> 'int' 1
|   | `-IfStmt 0x1141e6a2208 <line:167:12, line:172:5>
|   |   |-BinaryOperator 0x1141e6a1e70 <line:167:16, col:35> 'int' '&&'
|   |   | |-BinaryOperator 0x1141e6a1d90 <col:16, col:21> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x1141e6a1d60 <col:16> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1141e6a1d20 <col:16> 'int' lvalue ParmVar 0x1141e6a1390 'a' 'int'
|   |   | | `-ImplicitCastExpr 0x1141e6a1d78 <col:21> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1141e6a1d40 <col:21> 'int' lvalue ParmVar 0x1141e6a1410 'b' 'int'
|   |   | `-BinaryOperator 0x1141e6a1e50 <col:26, col:35> 'int' '!='
|   |   |   |-ImplicitCastExpr 0x1141e6a1e20 <col:26> 'int' <IntegralCast>
|   |   |   | `-ImplicitCastExpr 0x1141e6a1df0 <col:26> 'unsigned char' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x1141e6a1db0 <col:26> 'unsigned char' lvalue Var 0x1141e6a15c0 'equal' 'unsigned char'
|   |   |   `-ImplicitCastExpr 0x1141e6a1e38 <col:35> 'int' <IntegralCast>
|   |   |     `-ImplicitCastExpr 0x1141e6a1e08 <col:35> 'unsigned char' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x1141e6a1dd0 <col:35> 'const unsigned char' lvalue Var 0x1141e699588 'CONSTTIME_FALSE_8' 'const unsigned char'
|   |   `-CompoundStmt 0x1141e6a21e8 <col:54, line:172:5>
|   |     |-CallExpr 0x1141e6a20a0 <line:168:9, line:170:47> 'int'
|   |     | |-ImplicitCastExpr 0x1141e6a2088 <line:168:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |     | | `-DeclRefExpr 0x1141e6a1e90 <col:9> 'int (FILE *, const char *, ...)' Function 0x1141e5c5000 'fprintf' 'int (FILE *, const char *, ...)'
|   |     | |-ParenExpr 0x1141e6a1f68 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |     | | `-UnaryOperator 0x1141e6a1f50 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |     | |   `-ArraySubscriptExpr 0x1141e6a1f30 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |     | |     |-CallExpr 0x1141e6a1ee8 <col:18, col:29> 'FILE *'
|   |     | |     | `-ImplicitCastExpr 0x1141e6a1ed0 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |     | |     |   `-DeclRefExpr 0x1141e6a1eb0 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1141e5be518 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |     | |     `-IntegerLiteral 0x1141e6a1f08 <col:31> 'int' 2
|   |     | |-ImplicitCastExpr 0x1141e6a2108 <.//openssl//file_jk/before\test\constant_time_test.c:168:25, line:169:17> 'const char *' <NoOp>
|   |     | | `-ImplicitCastExpr 0x1141e6a20f0 <line:168:25, line:169:17> 'char *' <ArrayToPointerDecay>
|   |     | |   `-StringLiteral 0x1141e6a1f88 <line:168:25, line:169:17> 'char [76]' lvalue "Test failed for constant_time_eq_int_8(%d, %d): expected %u(FALSE), got %u\n"
|   |     | |-ImplicitCastExpr 0x1141e6a2120 <line:170:17> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1141e6a1ff0 <col:17> 'int' lvalue ParmVar 0x1141e6a1390 'a' 'int'
|   |     | |-ImplicitCastExpr 0x1141e6a2138 <col:20> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1141e6a2010 <col:20> 'int' lvalue ParmVar 0x1141e6a1410 'b' 'int'
|   |     | |-ImplicitCastExpr 0x1141e6a2168 <col:23> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x1141e6a2150 <col:23> 'unsigned char' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x1141e6a2030 <col:23> 'const unsigned char' lvalue Var 0x1141e699588 'CONSTTIME_FALSE_8' 'const unsigned char'
|   |     | `-ImplicitCastExpr 0x1141e6a2198 <col:42> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x1141e6a2180 <col:42> 'unsigned char' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x1141e6a2050 <col:42> 'unsigned char' lvalue Var 0x1141e6a15c0 'equal' 'unsigned char'
|   |     `-ReturnStmt 0x1141e6a21d8 <line:171:9, col:16>
|   |       `-IntegerLiteral 0x1141e6a21b0 <col:16> 'int' 1
|   `-ReturnStmt 0x1141e6a2270 <line:173:5, col:12>
|     `-IntegerLiteral 0x1141e6a2248 <col:12> 'int' 0
|-VarDecl 0x1141e6a2300 <line:176:1, line:180:1> line:176:21 used test_values 'unsigned int [10]' static cinit
| `-InitListExpr 0x1141e6a2c08 <line:177:5, line:180:1> 'unsigned int [10]'
|   |-ImplicitCastExpr 0x1141e6a2c48 <line:177:7> 'unsigned int' <IntegralCast>
|   | `-IntegerLiteral 0x1141e6a2368 <col:7> 'int' 0
|   |-ImplicitCastExpr 0x1141e6a2c68 <col:10> 'unsigned int' <IntegralCast>
|   | `-IntegerLiteral 0x1141e6a2390 <col:10> 'int' 1
|   |-ImplicitCastExpr 0x1141e6a2c90 <col:13> 'unsigned int' <IntegralCast>
|   | `-IntegerLiteral 0x1141e6a23b8 <col:13> 'int' 1024
|   |-ImplicitCastExpr 0x1141e6a2cc8 <col:19> 'unsigned int' <IntegralCast>
|   | `-IntegerLiteral 0x1141e6a23e0 <col:19> 'int' 12345
|   |-ImplicitCastExpr 0x1141e6a2ce0 <col:26> 'unsigned int' <IntegralCast>
|   | `-IntegerLiteral 0x1141e6a2408 <col:26> 'int' 32000
|   |-BinaryOperator 0x1141e6a25c0 <D:\LLVM\lib\clang\10.0.0\include\limits.h:56:19, .//openssl//file_jk/before\test\constant_time_test.c:177:48> 'unsigned int' '-'
|   | |-BinaryOperator 0x1141e6a2560 <D:\LLVM\lib\clang\10.0.0\include\limits.h:56:19, .//openssl//file_jk/before\test\constant_time_test.c:177:44> 'unsigned int' '/'
|   | | |-ParenExpr 0x1141e6a2500 <D:\LLVM\lib\clang\10.0.0\include\limits.h:56:19, col:40> 'unsigned int'
|   | | | `-BinaryOperator 0x1141e6a24e0 <<built-in>:30:21, D:\LLVM\lib\clang\10.0.0\include\limits.h:56:38> 'unsigned int' '+'
|   | | |   |-BinaryOperator 0x1141e6a2498 <<built-in>:30:21, D:\LLVM\lib\clang\10.0.0\include\limits.h:56:34> 'unsigned int' '*'
|   | | |   | |-ImplicitCastExpr 0x1141e6a2480 <<built-in>:30:21> 'unsigned int' <IntegralCast>
|   | | |   | | `-IntegerLiteral 0x1141e6a2430 <col:21> 'int' 2147483647
|   | | |   | `-IntegerLiteral 0x1141e6a2458 <D:\LLVM\lib\clang\10.0.0\include\limits.h:56:34> 'unsigned int' 2
|   | | |   `-IntegerLiteral 0x1141e6a24b8 <col:38> 'unsigned int' 1
|   | | `-ImplicitCastExpr 0x1141e6a2548 <.//openssl//file_jk/before\test\constant_time_test.c:177:44> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x1141e6a2520 <col:44> 'int' 2
|   | `-ImplicitCastExpr 0x1141e6a25a8 <col:48> 'unsigned int' <IntegralCast>
|   |   `-IntegerLiteral 0x1141e6a2580 <col:48> 'int' 1
|   |-BinaryOperator 0x1141e6a2710 <D:\LLVM\lib\clang\10.0.0\include\limits.h:56:19, .//openssl//file_jk/before\test\constant_time_test.c:178:16> 'unsigned int' '/'
|   | |-ParenExpr 0x1141e6a26b0 <D:\LLVM\lib\clang\10.0.0\include\limits.h:56:19, col:40> 'unsigned int'
|   | | `-BinaryOperator 0x1141e6a2690 <<built-in>:30:21, D:\LLVM\lib\clang\10.0.0\include\limits.h:56:38> 'unsigned int' '+'
|   | |   |-BinaryOperator 0x1141e6a2648 <<built-in>:30:21, D:\LLVM\lib\clang\10.0.0\include\limits.h:56:34> 'unsigned int' '*'
|   | |   | |-ImplicitCastExpr 0x1141e6a2630 <<built-in>:30:21> 'unsigned int' <IntegralCast>
|   | |   | | `-IntegerLiteral 0x1141e6a25e0 <col:21> 'int' 2147483647
|   | |   | `-IntegerLiteral 0x1141e6a2608 <D:\LLVM\lib\clang\10.0.0\include\limits.h:56:34> 'unsigned int' 2
|   | |   `-IntegerLiteral 0x1141e6a2668 <col:38> 'unsigned int' 1
|   | `-ImplicitCastExpr 0x1141e6a26f8 <.//openssl//file_jk/before\test\constant_time_test.c:178:16> 'unsigned int' <IntegralCast>
|   |   `-IntegerLiteral 0x1141e6a26d0 <col:16> 'int' 2
|   |-BinaryOperator 0x1141e6a28f0 <D:\LLVM\lib\clang\10.0.0\include\limits.h:56:19, .//openssl//file_jk/before\test\constant_time_test.c:178:34> 'unsigned int' '+'
|   | |-BinaryOperator 0x1141e6a2890 <D:\LLVM\lib\clang\10.0.0\include\limits.h:56:19, .//openssl//file_jk/before\test\constant_time_test.c:178:30> 'unsigned int' '/'
|   | | |-ParenExpr 0x1141e6a2800 <D:\LLVM\lib\clang\10.0.0\include\limits.h:56:19, col:40> 'unsigned int'
|   | | | `-BinaryOperator 0x1141e6a27e0 <<built-in>:30:21, D:\LLVM\lib\clang\10.0.0\include\limits.h:56:38> 'unsigned int' '+'
|   | | |   |-BinaryOperator 0x1141e6a2798 <<built-in>:30:21, D:\LLVM\lib\clang\10.0.0\include\limits.h:56:34> 'unsigned int' '*'
|   | | |   | |-ImplicitCastExpr 0x1141e6a2780 <<built-in>:30:21> 'unsigned int' <IntegralCast>
|   | | |   | | `-IntegerLiteral 0x1141e6a2730 <col:21> 'int' 2147483647
|   | | |   | `-IntegerLiteral 0x1141e6a2758 <D:\LLVM\lib\clang\10.0.0\include\limits.h:56:34> 'unsigned int' 2
|   | | |   `-IntegerLiteral 0x1141e6a27b8 <col:38> 'unsigned int' 1
|   | | `-ImplicitCastExpr 0x1141e6a2878 <.//openssl//file_jk/before\test\constant_time_test.c:178:30> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x1141e6a2850 <col:30> 'int' 2
|   | `-ImplicitCastExpr 0x1141e6a28d8 <col:34> 'unsigned int' <IntegralCast>
|   |   `-IntegerLiteral 0x1141e6a28b0 <col:34> 'int' 1
|   |-BinaryOperator 0x1141e6a2a40 <D:\LLVM\lib\clang\10.0.0\include\limits.h:56:19, .//openssl//file_jk/before\test\constant_time_test.c:178:48> 'unsigned int' '-'
|   | |-ParenExpr 0x1141e6a29e0 <D:\LLVM\lib\clang\10.0.0\include\limits.h:56:19, col:40> 'unsigned int'
|   | | `-BinaryOperator 0x1141e6a29c0 <<built-in>:30:21, D:\LLVM\lib\clang\10.0.0\include\limits.h:56:38> 'unsigned int' '+'
|   | |   |-BinaryOperator 0x1141e6a2978 <<built-in>:30:21, D:\LLVM\lib\clang\10.0.0\include\limits.h:56:34> 'unsigned int' '*'
|   | |   | |-ImplicitCastExpr 0x1141e6a2960 <<built-in>:30:21> 'unsigned int' <IntegralCast>
|   | |   | | `-IntegerLiteral 0x1141e6a2910 <col:21> 'int' 2147483647
|   | |   | `-IntegerLiteral 0x1141e6a2938 <D:\LLVM\lib\clang\10.0.0\include\limits.h:56:34> 'unsigned int' 2
|   | |   `-IntegerLiteral 0x1141e6a2998 <col:38> 'unsigned int' 1
|   | `-ImplicitCastExpr 0x1141e6a2a28 <.//openssl//file_jk/before\test\constant_time_test.c:178:48> 'unsigned int' <IntegralCast>
|   |   `-IntegerLiteral 0x1141e6a2a00 <col:48> 'int' 1
|   `-ParenExpr 0x1141e6a2b30 <D:\LLVM\lib\clang\10.0.0\include\limits.h:56:19, col:40> 'unsigned int'
|     `-BinaryOperator 0x1141e6a2b10 <<built-in>:30:21, D:\LLVM\lib\clang\10.0.0\include\limits.h:56:38> 'unsigned int' '+'
|       |-BinaryOperator 0x1141e6a2ac8 <<built-in>:30:21, D:\LLVM\lib\clang\10.0.0\include\limits.h:56:34> 'unsigned int' '*'
|       | |-ImplicitCastExpr 0x1141e6a2ab0 <<built-in>:30:21> 'unsigned int' <IntegralCast>
|       | | `-IntegerLiteral 0x1141e6a2a60 <col:21> 'int' 2147483647
|       | `-IntegerLiteral 0x1141e6a2a88 <D:\LLVM\lib\clang\10.0.0\include\limits.h:56:34> 'unsigned int' 2
|       `-IntegerLiteral 0x1141e6a2ae8 <col:38> 'unsigned int' 1
|-VarDecl 0x1141e6a2e50 <.//openssl//file_jk/before\test\constant_time_test.c:182:1, line:183:43> line:182:22 used test_values_8 'unsigned char [9]' static cinit
| `-InitListExpr 0x1141e6a30d0 <line:183:5, col:43> 'unsigned char [9]'
|   |-ImplicitCastExpr 0x1141e6a3110 <col:7> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1141e6a2eb8 <col:7> 'int' 0
|   |-ImplicitCastExpr 0x1141e6a3130 <col:10> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1141e6a2ee0 <col:10> 'int' 1
|   |-ImplicitCastExpr 0x1141e6a3158 <col:13> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1141e6a2f08 <col:13> 'int' 2
|   |-ImplicitCastExpr 0x1141e6a3190 <col:16> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1141e6a2f30 <col:16> 'int' 20
|   |-ImplicitCastExpr 0x1141e6a31a8 <col:20> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1141e6a2f58 <col:20> 'int' 32
|   |-ImplicitCastExpr 0x1141e6a3200 <col:24> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1141e6a2f80 <col:24> 'int' 127
|   |-ImplicitCastExpr 0x1141e6a3218 <col:29> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1141e6a2fa8 <col:29> 'int' 128
|   |-ImplicitCastExpr 0x1141e6a3230 <col:34> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1141e6a2fd0 <col:34> 'int' 129
|   `-ImplicitCastExpr 0x1141e6a3248 <col:39> 'unsigned char' <IntegralCast>
|     `-IntegerLiteral 0x1141e6a2ff8 <col:39> 'int' 255
|-VarDecl 0x1141e6a3370 <line:185:1, line:188:1> line:185:12 used signed_test_values 'int [13]' static cinit
| `-InitListExpr 0x1141e6a38a0 <col:35, line:188:1> 'int [13]'
|   |-IntegerLiteral 0x1141e6a33d8 <line:185:37> 'int' 0
|   |-IntegerLiteral 0x1141e6a3400 <col:40> 'int' 1
|   |-UnaryOperator 0x1141e6a3450 <col:43, col:44> 'int' prefix '-'
|   | `-IntegerLiteral 0x1141e6a3428 <col:44> 'int' 1
|   |-IntegerLiteral 0x1141e6a3468 <col:47> 'int' 1024
|   |-UnaryOperator 0x1141e6a34b8 <col:53, col:54> 'int' prefix '-'
|   | `-IntegerLiteral 0x1141e6a3490 <col:54> 'int' 1024
|   |-IntegerLiteral 0x1141e6a34d0 <col:60> 'int' 12345
|   |-UnaryOperator 0x1141e6a3520 <col:67, col:68> 'int' prefix '-'
|   | `-IntegerLiteral 0x1141e6a34f8 <col:68> 'int' 12345
|   |-IntegerLiteral 0x1141e6a3538 <line:186:5> 'int' 32000
|   |-UnaryOperator 0x1141e6a3588 <col:12, col:13> 'int' prefix '-'
|   | `-IntegerLiteral 0x1141e6a3560 <col:13> 'int' 32000
|   |-IntegerLiteral 0x1141e6a35a0 <<built-in>:30:21> 'int' 2147483647
|   |-ParenExpr 0x1141e6a3650 <D:\LLVM\lib\clang\10.0.0\include\limits.h:51:19, col:36> 'int'
|   | `-BinaryOperator 0x1141e6a3630 <col:20, col:35> 'int' '-'
|   |   |-UnaryOperator 0x1141e6a35f0 <col:20, <built-in>:30:21> 'int' prefix '-'
|   |   | `-IntegerLiteral 0x1141e6a35c8 <col:21> 'int' 2147483647
|   |   `-IntegerLiteral 0x1141e6a3608 <D:\LLVM\lib\clang\10.0.0\include\limits.h:51:35> 'int' 1
|   |-BinaryOperator 0x1141e6a36c0 <<built-in>:30:21, .//openssl//file_jk/before\test\constant_time_test.c:186:48> 'int' '-'
|   | |-IntegerLiteral 0x1141e6a3670 <<built-in>:30:21> 'int' 2147483647
|   | `-IntegerLiteral 0x1141e6a3698 <.//openssl//file_jk/before\test\constant_time_test.c:186:48> 'int' 1
|   `-BinaryOperator 0x1141e6a37b0 <D:\LLVM\lib\clang\10.0.0\include\limits.h:51:19, .//openssl//file_jk/before\test\constant_time_test.c:187:15> 'int' '+'
|     |-ParenExpr 0x1141e6a3768 <D:\LLVM\lib\clang\10.0.0\include\limits.h:51:19, col:36> 'int'
|     | `-BinaryOperator 0x1141e6a3748 <col:20, col:35> 'int' '-'
|     |   |-UnaryOperator 0x1141e6a3708 <col:20, <built-in>:30:21> 'int' prefix '-'
|     |   | `-IntegerLiteral 0x1141e6a36e0 <col:21> 'int' 2147483647
|     |   `-IntegerLiteral 0x1141e6a3720 <D:\LLVM\lib\clang\10.0.0\include\limits.h:51:35> 'int' 1
|     `-IntegerLiteral 0x1141e6a3788 <.//openssl//file_jk/before\test\constant_time_test.c:187:15> 'int' 1
`-FunctionDecl 0x1141e6a3c70 <line:190:1, line:268:1> line:190:5 main 'int (int, char **)'
  |-ParmVarDecl 0x1141e6a3a30 <col:10, col:14> col:14 argc 'int'
  |-ParmVarDecl 0x1141e6a3b20 <col:20, col:31> col:26 argv 'char **':'char **'
  `-CompoundStmt 0x1141e5f5538 <line:191:1, line:268:1>
    |-DeclStmt 0x1141e6a3f60 <line:192:5, col:28>
    | |-VarDecl 0x1141e6a3d50 <col:5, col:18> col:18 used a 'unsigned int'
    | |-VarDecl 0x1141e6a3dd0 <col:5, col:21> col:21 used b 'unsigned int'
    | |-VarDecl 0x1141e6a3e50 <col:5, col:24> col:24 used i 'unsigned int'
    | `-VarDecl 0x1141e6a3ed0 <col:5, col:27> col:27 used j 'unsigned int'
    |-DeclStmt 0x1141e6a4090 <line:193:5, col:13>
    | |-VarDecl 0x1141e6a3f90 <col:5, col:9> col:9 used c 'int'
    | `-VarDecl 0x1141e6a4010 <col:5, col:12> col:12 used d 'int'
    |-DeclStmt 0x1141e6a41c0 <line:194:5, col:23>
    | |-VarDecl 0x1141e6a40c0 <col:5, col:19> col:19 used e 'unsigned char'
    | `-VarDecl 0x1141e6a4140 <col:5, col:22> col:22 used f 'unsigned char'
    |-DeclStmt 0x1141e6a4340 <line:195:5, col:36>
    | |-VarDecl 0x1141e6a41f0 <col:5, col:22> col:9 used num_failed 'int' cinit
    | | `-IntegerLiteral 0x1141e6a4258 <col:22> 'int' 0
    | `-VarDecl 0x1141e6a4298 <col:5, col:35> col:25 used num_all 'int' cinit
    |   `-IntegerLiteral 0x1141e6a4300 <col:35> 'int' 0
    |-CallExpr 0x1141e6a44f8 <line:196:5, col:60> 'int'
    | |-ImplicitCastExpr 0x1141e6a44e0 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x1141e6a4358 <col:5> 'int (FILE *, const char *, ...)' Function 0x1141e5c5000 'fprintf' 'int (FILE *, const char *, ...)'
    | |-ParenExpr 0x1141e6a4430 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:150:16, col:33> 'FILE *'
    | | `-UnaryOperator 0x1141e6a4418 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
    | |   `-ArraySubscriptExpr 0x1141e6a43f8 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
    | |     |-CallExpr 0x1141e6a43b0 <col:18, col:29> 'FILE *'
    | |     | `-ImplicitCastExpr 0x1141e6a4398 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
    | |     |   `-DeclRefExpr 0x1141e6a4378 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1141e5be518 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
    | |     `-IntegerLiteral 0x1141e6a43d0 <col:31> 'int' 1
    | `-ImplicitCastExpr 0x1141e6a4540 <.//openssl//file_jk/before\test\constant_time_test.c:196:21> 'const char *' <NoOp>
    |   `-ImplicitCastExpr 0x1141e6a4528 <col:21> 'char *' <ArrayToPointerDecay>
    |     `-StringLiteral 0x1141e6a4488 <col:21> 'char [37]' lvalue "Testing constant time operations...\n"
    |-ForStmt 0x1141e6aa090 <line:198:5, line:239:5>
    | |-BinaryOperator 0x1141e6a45d0 <line:198:10, col:14> 'unsigned int' '='
    | | |-DeclRefExpr 0x1141e6a4558 <col:10> 'unsigned int' lvalue Var 0x1141e6a3e50 'i' 'unsigned int'
    | | `-ImplicitCastExpr 0x1141e6a45b8 <col:14> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x1141e6a4590 <col:14> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x1141e6a47f0 <col:17, col:43> 'int' '<'
    | | |-ImplicitCastExpr 0x1141e6a47c0 <col:17> 'unsigned int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1141e6a45f0 <col:17> 'unsigned int' lvalue Var 0x1141e6a3e50 'i' 'unsigned int'
    | | `-ImplicitCastExpr 0x1141e6a47d8 <col:21, col:43> 'unsigned int' <IntegralCast>
    | |   `-CallExpr 0x1141e6a4758 <col:21, col:43> 'int'
    | |     |-ImplicitCastExpr 0x1141e6a4740 <col:21> 'int (*)()' <FunctionToPointerDecay>
    | |     | `-DeclRefExpr 0x1141e6a4700 <col:21> 'int ()' Function 0x1141e6a4638 'OSSL_NELEM' 'int ()'
    | |     `-ImplicitCastExpr 0x1141e6a47a8 <col:32> 'unsigned int *' <ArrayToPointerDecay>
    | |       `-DeclRefExpr 0x1141e6a4720 <col:32> 'unsigned int [10]' lvalue Var 0x1141e6a2300 'test_values' 'unsigned int [10]'
    | |-UnaryOperator 0x1141e6a4830 <col:46, col:48> 'unsigned int' prefix '++'
    | | `-DeclRefExpr 0x1141e6a4810 <col:48> 'unsigned int' lvalue Var 0x1141e6a3e50 'i' 'unsigned int'
    | `-CompoundStmt 0x1141e6aa058 <col:51, line:239:5>
    |   |-BinaryOperator 0x1141e6a8940 <line:199:9, col:26> 'unsigned int' '='
    |   | |-DeclRefExpr 0x1141e6a8860 <col:9> 'unsigned int' lvalue Var 0x1141e6a3d50 'a' 'unsigned int'
    |   | `-ImplicitCastExpr 0x1141e6a8928 <col:13, col:26> 'unsigned int' <LValueToRValue>
    |   |   `-ArraySubscriptExpr 0x1141e6a8908 <col:13, col:26> 'unsigned int' lvalue
    |   |     |-ImplicitCastExpr 0x1141e6a88d8 <col:13> 'unsigned int *' <ArrayToPointerDecay>
    |   |     | `-DeclRefExpr 0x1141e6a8898 <col:13> 'unsigned int [10]' lvalue Var 0x1141e6a2300 'test_values' 'unsigned int [10]'
    |   |     `-ImplicitCastExpr 0x1141e6a88f0 <col:25> 'unsigned int' <LValueToRValue>
    |   |       `-DeclRefExpr 0x1141e6a88b8 <col:25> 'unsigned int' lvalue Var 0x1141e6a3e50 'i' 'unsigned int'
    |   |-CompoundAssignOperator 0x1141e6a8a60 <line:200:9, col:37> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |   | |-DeclRefExpr 0x1141e6a8960 <col:9> 'int' lvalue Var 0x1141e6a41f0 'num_failed' 'int'
    |   | `-CallExpr 0x1141e6a8a20 <col:23, col:37> 'int'
    |   |   |-ImplicitCastExpr 0x1141e6a8a08 <col:23> 'int (*)(unsigned int)' <FunctionToPointerDecay>
    |   |   | `-DeclRefExpr 0x1141e6a8998 <col:23> 'int (unsigned int)' Function 0x1141e62ef40 'test_is_zero' 'int (unsigned int)'
    |   |   `-ImplicitCastExpr 0x1141e6a8a48 <col:36> 'unsigned int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x1141e6a89b8 <col:36> 'unsigned int' lvalue Var 0x1141e6a3d50 'a' 'unsigned int'
    |   |-CompoundAssignOperator 0x1141e6a8b48 <line:201:9, col:39> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |   | |-DeclRefExpr 0x1141e6a8a90 <col:9> 'int' lvalue Var 0x1141e6a41f0 'num_failed' 'int'
    |   | `-CallExpr 0x1141e6a8b08 <col:23, col:39> 'int'
    |   |   |-ImplicitCastExpr 0x1141e6a8af0 <col:23> 'int (*)(unsigned int)' <FunctionToPointerDecay>
    |   |   | `-DeclRefExpr 0x1141e6a8ab0 <col:23> 'int (unsigned int)' Function 0x1141e743e20 'test_is_zero_8' 'int (unsigned int)'
    |   |   `-ImplicitCastExpr 0x1141e6a8b30 <col:38> 'unsigned int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x1141e6a8ad0 <col:38> 'unsigned int' lvalue Var 0x1141e6a3d50 'a' 'unsigned int'
    |   |-CompoundAssignOperator 0x1141e6a8bd8 <line:202:9, col:20> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |   | |-DeclRefExpr 0x1141e6a8b78 <col:9> 'int' lvalue Var 0x1141e6a4298 'num_all' 'int'
    |   | `-IntegerLiteral 0x1141e6a8bb0 <col:20> 'int' 2
    |   `-ForStmt 0x1141e6aa020 <line:203:9, line:238:9>
    |     |-BinaryOperator 0x1141e6a8c80 <line:203:14, col:18> 'unsigned int' '='
    |     | |-DeclRefExpr 0x1141e6a8c08 <col:14> 'unsigned int' lvalue Var 0x1141e6a3ed0 'j' 'unsigned int'
    |     | `-ImplicitCastExpr 0x1141e6a8c68 <col:18> 'unsigned int' <IntegralCast>
    |     |   `-IntegerLiteral 0x1141e6a8c40 <col:18> 'int' 0
    |     |-<<<NULL>>>
    |     |-BinaryOperator 0x1141e6a8d88 <col:21, col:47> 'int' '<'
    |     | |-ImplicitCastExpr 0x1141e6a8d58 <col:21> 'unsigned int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x1141e6a8ca0 <col:21> 'unsigned int' lvalue Var 0x1141e6a3ed0 'j' 'unsigned int'
    |     | `-ImplicitCastExpr 0x1141e6a8d70 <col:25, col:47> 'unsigned int' <IntegralCast>
    |     |   `-CallExpr 0x1141e6a8d18 <col:25, col:47> 'int'
    |     |     |-ImplicitCastExpr 0x1141e6a8d00 <col:25> 'int (*)()' <FunctionToPointerDecay>
    |     |     | `-DeclRefExpr 0x1141e6a8cc0 <col:25> 'int ()' Function 0x1141e6a4638 'OSSL_NELEM' 'int ()'
    |     |     `-ImplicitCastExpr 0x1141e6a8d40 <col:36> 'unsigned int *' <ArrayToPointerDecay>
    |     |       `-DeclRefExpr 0x1141e6a8ce0 <col:36> 'unsigned int [10]' lvalue Var 0x1141e6a2300 'test_values' 'unsigned int [10]'
    |     |-UnaryOperator 0x1141e6a8dc8 <col:50, col:52> 'unsigned int' prefix '++'
    |     | `-DeclRefExpr 0x1141e6a8da8 <col:52> 'unsigned int' lvalue Var 0x1141e6a3ed0 'j' 'unsigned int'
    |     `-CompoundStmt 0x1141e6a9ff8 <col:55, line:238:9>
    |       |-BinaryOperator 0x1141e6a8ec0 <line:204:13, col:30> 'unsigned int' '='
    |       | |-DeclRefExpr 0x1141e6a8de0 <col:13> 'unsigned int' lvalue Var 0x1141e6a3dd0 'b' 'unsigned int'
    |       | `-ImplicitCastExpr 0x1141e6a8ea8 <col:17, col:30> 'unsigned int' <LValueToRValue>
    |       |   `-ArraySubscriptExpr 0x1141e6a8e88 <col:17, col:30> 'unsigned int' lvalue
    |       |     |-ImplicitCastExpr 0x1141e6a8e58 <col:17> 'unsigned int *' <ArrayToPointerDecay>
    |       |     | `-DeclRefExpr 0x1141e6a8e18 <col:17> 'unsigned int [10]' lvalue Var 0x1141e6a2300 'test_values' 'unsigned int [10]'
    |       |     `-ImplicitCastExpr 0x1141e6a8e70 <col:29> 'unsigned int' <LValueToRValue>
    |       |       `-DeclRefExpr 0x1141e6a8e38 <col:29> 'unsigned int' lvalue Var 0x1141e6a3ed0 'j' 'unsigned int'
    |       |-CompoundAssignOperator 0x1141e6a9f50 <line:236:13, col:43> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |       | |-DeclRefExpr 0x1141e6a9e28 <col:13> 'int' lvalue Var 0x1141e6a41f0 'num_failed' 'int'
    |       | `-CallExpr 0x1141e6a9ef0 <col:27, col:43> 'int'
    |       |   |-ImplicitCastExpr 0x1141e6a9ed8 <col:27> 'int (*)(unsigned int, unsigned int)' <FunctionToPointerDecay>
    |       |   | `-DeclRefExpr 0x1141e6a9e48 <col:27> 'int (unsigned int, unsigned int)' Function 0x1141e742d20 'test_select' 'int (unsigned int, unsigned int)'
    |       |   |-ImplicitCastExpr 0x1141e6a9f20 <col:39> 'unsigned int' <LValueToRValue>
    |       |   | `-DeclRefExpr 0x1141e6a9e68 <col:39> 'unsigned int' lvalue Var 0x1141e6a3d50 'a' 'unsigned int'
    |       |   `-ImplicitCastExpr 0x1141e6a9f38 <col:42> 'unsigned int' <LValueToRValue>
    |       |     `-DeclRefExpr 0x1141e6a9e88 <col:42> 'unsigned int' lvalue Var 0x1141e6a3dd0 'b' 'unsigned int'
    |       `-CompoundAssignOperator 0x1141e6a9fc8 <line:237:13, col:24> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |         |-DeclRefExpr 0x1141e6a9f80 <col:13> 'int' lvalue Var 0x1141e6a4298 'num_all' 'int'
    |         `-IntegerLiteral 0x1141e6a9fa0 <col:24> 'int' 13
    |-ForStmt 0x1141e5f47a0 <line:241:5, line:250:5>
    | |-BinaryOperator 0x1141e6aa128 <line:241:10, col:14> 'unsigned int' '='
    | | |-DeclRefExpr 0x1141e6aa0c8 <col:10> 'unsigned int' lvalue Var 0x1141e6a3e50 'i' 'unsigned int'
    | | `-ImplicitCastExpr 0x1141e6aa110 <col:14> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x1141e6aa0e8 <col:14> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x1141e6aa230 <col:17, col:50> 'int' '<'
    | | |-ImplicitCastExpr 0x1141e6aa200 <col:17> 'unsigned int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1141e6aa148 <col:17> 'unsigned int' lvalue Var 0x1141e6a3e50 'i' 'unsigned int'
    | | `-ImplicitCastExpr 0x1141e6aa218 <col:21, col:50> 'unsigned int' <IntegralCast>
    | |   `-CallExpr 0x1141e6aa1c0 <col:21, col:50> 'int'
    | |     |-ImplicitCastExpr 0x1141e6aa1a8 <col:21> 'int (*)()' <FunctionToPointerDecay>
    | |     | `-DeclRefExpr 0x1141e6aa168 <col:21> 'int ()' Function 0x1141e6a4638 'OSSL_NELEM' 'int ()'
    | |     `-ImplicitCastExpr 0x1141e6aa1e8 <col:32> 'int *' <ArrayToPointerDecay>
    | |       `-DeclRefExpr 0x1141e6aa188 <col:32> 'int [13]' lvalue Var 0x1141e6a3370 'signed_test_values' 'int [13]'
    | |-UnaryOperator 0x1141e6aa270 <col:53, col:55> 'unsigned int' prefix '++'
    | | `-DeclRefExpr 0x1141e6aa250 <col:55> 'unsigned int' lvalue Var 0x1141e6a3e50 'i' 'unsigned int'
    | `-CompoundStmt 0x1141e5f4780 <col:58, line:250:5>
    |   |-BinaryOperator 0x1141e6aa368 <line:242:9, col:33> 'int' '='
    |   | |-DeclRefExpr 0x1141e6aa288 <col:9> 'int' lvalue Var 0x1141e6a3f90 'c' 'int'
    |   | `-ImplicitCastExpr 0x1141e6aa350 <col:13, col:33> 'int' <LValueToRValue>
    |   |   `-ArraySubscriptExpr 0x1141e6aa330 <col:13, col:33> 'int' lvalue
    |   |     |-ImplicitCastExpr 0x1141e6aa300 <col:13> 'int *' <ArrayToPointerDecay>
    |   |     | `-DeclRefExpr 0x1141e6aa2c0 <col:13> 'int [13]' lvalue Var 0x1141e6a3370 'signed_test_values' 'int [13]'
    |   |     `-ImplicitCastExpr 0x1141e6aa318 <col:32> 'unsigned int' <LValueToRValue>
    |   |       `-DeclRefExpr 0x1141e6aa2e0 <col:32> 'unsigned int' lvalue Var 0x1141e6a3e50 'i' 'unsigned int'
    |   `-ForStmt 0x1141e5f4748 <line:243:9, line:249:9>
    |     |-BinaryOperator 0x1141e6aa3e8 <line:243:14, col:18> 'unsigned int' '='
    |     | |-DeclRefExpr 0x1141e6aa388 <col:14> 'unsigned int' lvalue Var 0x1141e6a3ed0 'j' 'unsigned int'
    |     | `-ImplicitCastExpr 0x1141e6aa3d0 <col:18> 'unsigned int' <IntegralCast>
    |     |   `-IntegerLiteral 0x1141e6aa3a8 <col:18> 'int' 0
    |     |-<<<NULL>>>
    |     |-BinaryOperator 0x1141e6aa4f0 <col:21, col:54> 'int' '<'
    |     | |-ImplicitCastExpr 0x1141e6aa4c0 <col:21> 'unsigned int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x1141e6aa408 <col:21> 'unsigned int' lvalue Var 0x1141e6a3ed0 'j' 'unsigned int'
    |     | `-ImplicitCastExpr 0x1141e6aa4d8 <col:25, col:54> 'unsigned int' <IntegralCast>
    |     |   `-CallExpr 0x1141e6aa480 <col:25, col:54> 'int'
    |     |     |-ImplicitCastExpr 0x1141e6aa468 <col:25> 'int (*)()' <FunctionToPointerDecay>
    |     |     | `-DeclRefExpr 0x1141e6aa428 <col:25> 'int ()' Function 0x1141e6a4638 'OSSL_NELEM' 'int ()'
    |     |     `-ImplicitCastExpr 0x1141e6aa4a8 <col:36> 'int *' <ArrayToPointerDecay>
    |     |       `-DeclRefExpr 0x1141e6aa448 <col:36> 'int [13]' lvalue Var 0x1141e6a3370 'signed_test_values' 'int [13]'
    |     |-UnaryOperator 0x1141e6aa530 <col:57, col:59> 'unsigned int' prefix '++'
    |     | `-DeclRefExpr 0x1141e6aa510 <col:59> 'unsigned int' lvalue Var 0x1141e6a3ed0 'j' 'unsigned int'
    |     `-CompoundStmt 0x1141e5f4710 <col:62, line:249:9>
    |       |-BinaryOperator 0x1141e6aa628 <line:244:13, col:37> 'int' '='
    |       | |-DeclRefExpr 0x1141e6aa548 <col:13> 'int' lvalue Var 0x1141e6a4010 'd' 'int'
    |       | `-ImplicitCastExpr 0x1141e6aa610 <col:17, col:37> 'int' <LValueToRValue>
    |       |   `-ArraySubscriptExpr 0x1141e6aa5f0 <col:17, col:37> 'int' lvalue
    |       |     |-ImplicitCastExpr 0x1141e6aa5c0 <col:17> 'int *' <ArrayToPointerDecay>
    |       |     | `-DeclRefExpr 0x1141e6aa580 <col:17> 'int [13]' lvalue Var 0x1141e6a3370 'signed_test_values' 'int [13]'
    |       |     `-ImplicitCastExpr 0x1141e6aa5d8 <col:36> 'unsigned int' <LValueToRValue>
    |       |       `-DeclRefExpr 0x1141e6aa5a0 <col:36> 'unsigned int' lvalue Var 0x1141e6a3ed0 'j' 'unsigned int'
    |       |-CompoundAssignOperator 0x1141e6aa770 <line:245:13, col:47> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |       | |-DeclRefExpr 0x1141e6aa648 <col:13> 'int' lvalue Var 0x1141e6a41f0 'num_failed' 'int'
    |       | `-CallExpr 0x1141e6aa710 <col:27, col:47> 'int'
    |       |   |-ImplicitCastExpr 0x1141e6aa6f8 <col:27> 'int (*)(int, int)' <FunctionToPointerDecay>
    |       |   | `-DeclRefExpr 0x1141e6aa668 <col:27> 'int (int, int)' Function 0x1141e747f60 'test_select_int' 'int (int, int)'
    |       |   |-ImplicitCastExpr 0x1141e6aa740 <col:43> 'int' <LValueToRValue>
    |       |   | `-DeclRefExpr 0x1141e6aa688 <col:43> 'int' lvalue Var 0x1141e6a3f90 'c' 'int'
    |       |   `-ImplicitCastExpr 0x1141e6aa758 <col:46> 'int' <LValueToRValue>
    |       |     `-DeclRefExpr 0x1141e6aa6a8 <col:46> 'int' lvalue Var 0x1141e6a4010 'd' 'int'
    |       |-CompoundAssignOperator 0x1141e5f4540 <line:246:13, col:43> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |       | |-DeclRefExpr 0x1141e6aa7a0 <col:13> 'int' lvalue Var 0x1141e6a41f0 'num_failed' 'int'
    |       | `-CallExpr 0x1141e5f44e0 <col:27, col:43> 'int'
    |       |   |-ImplicitCastExpr 0x1141e6aa820 <col:27> 'int (*)(int, int)' <FunctionToPointerDecay>
    |       |   | `-DeclRefExpr 0x1141e6aa7c0 <col:27> 'int (int, int)' Function 0x1141e745f10 'test_eq_int' 'int (int, int)'
    |       |   |-ImplicitCastExpr 0x1141e5f4510 <col:39> 'int' <LValueToRValue>
    |       |   | `-DeclRefExpr 0x1141e6aa7e0 <col:39> 'int' lvalue Var 0x1141e6a3f90 'c' 'int'
    |       |   `-ImplicitCastExpr 0x1141e5f4528 <col:42> 'int' <LValueToRValue>
    |       |     `-DeclRefExpr 0x1141e6aa800 <col:42> 'int' lvalue Var 0x1141e6a4010 'd' 'int'
    |       |-CompoundAssignOperator 0x1141e5f4668 <line:247:13, col:45> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |       | |-DeclRefExpr 0x1141e5f4570 <col:13> 'int' lvalue Var 0x1141e6a41f0 'num_failed' 'int'
    |       | `-CallExpr 0x1141e5f4608 <col:27, col:45> 'int'
    |       |   |-ImplicitCastExpr 0x1141e5f45f0 <col:27> 'int (*)(int, int)' <FunctionToPointerDecay>
    |       |   | `-DeclRefExpr 0x1141e5f4590 <col:27> 'int (int, int)' Function 0x1141e6a14e0 'test_eq_int_8' 'int (int, int)'
    |       |   |-ImplicitCastExpr 0x1141e5f4638 <col:41> 'int' <LValueToRValue>
    |       |   | `-DeclRefExpr 0x1141e5f45b0 <col:41> 'int' lvalue Var 0x1141e6a3f90 'c' 'int'
    |       |   `-ImplicitCastExpr 0x1141e5f4650 <col:44> 'int' <LValueToRValue>
    |       |     `-DeclRefExpr 0x1141e5f45d0 <col:44> 'int' lvalue Var 0x1141e6a4010 'd' 'int'
    |       `-CompoundAssignOperator 0x1141e5f46e0 <line:248:13, col:24> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |         |-DeclRefExpr 0x1141e5f4698 <col:13> 'int' lvalue Var 0x1141e6a4298 'num_all' 'int'
    |         `-IntegerLiteral 0x1141e5f46b8 <col:24> 'int' 3
    |-ForStmt 0x1141e5f4f68 <line:252:5, line:259:5>
    | |-BinaryOperator 0x1141e5f4838 <line:252:10, col:14> 'unsigned int' '='
    | | |-DeclRefExpr 0x1141e5f47d8 <col:10> 'unsigned int' lvalue Var 0x1141e6a3e50 'i' 'unsigned int'
    | | `-ImplicitCastExpr 0x1141e5f4820 <col:14> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x1141e5f47f8 <col:14> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x1141e5f4908 <col:17, col:41> 'int' '<'
    | | |-ImplicitCastExpr 0x1141e5f48f0 <col:17> 'unsigned long long' <IntegralCast>
    | | | `-ImplicitCastExpr 0x1141e5f48d8 <col:17> 'unsigned int' <LValueToRValue>
    | | |   `-DeclRefExpr 0x1141e5f4858 <col:17> 'unsigned int' lvalue Var 0x1141e6a3e50 'i' 'unsigned int'
    | | `-UnaryExprOrTypeTraitExpr 0x1141e5f48b8 <col:21, col:41> 'unsigned long long' sizeof
    | |   `-ParenExpr 0x1141e5f4898 <col:27, col:41> 'unsigned char [9]' lvalue
    | |     `-DeclRefExpr 0x1141e5f4878 <col:28> 'unsigned char [9]' lvalue Var 0x1141e6a2e50 'test_values_8' 'unsigned char [9]' non_odr_use_unevaluated
    | |-UnaryOperator 0x1141e5f4948 <col:44, col:46> 'unsigned int' prefix '++'
    | | `-DeclRefExpr 0x1141e5f4928 <col:46> 'unsigned int' lvalue Var 0x1141e6a3e50 'i' 'unsigned int'
    | `-CompoundStmt 0x1141e5f4f48 <col:49, line:259:5>
    |   |-BinaryOperator 0x1141e5f4a70 <line:253:9, col:28> 'unsigned char' '='
    |   | |-DeclRefExpr 0x1141e5f4960 <col:9> 'unsigned char' lvalue Var 0x1141e6a40c0 'e' 'unsigned char'
    |   | `-ImplicitCastExpr 0x1141e5f4a58 <col:13, col:28> 'unsigned char' <LValueToRValue>
    |   |   `-ArraySubscriptExpr 0x1141e5f4a38 <col:13, col:28> 'unsigned char' lvalue
    |   |     |-ImplicitCastExpr 0x1141e5f4a08 <col:13> 'unsigned char *' <ArrayToPointerDecay>
    |   |     | `-DeclRefExpr 0x1141e5f4998 <col:13> 'unsigned char [9]' lvalue Var 0x1141e6a2e50 'test_values_8' 'unsigned char [9]'
    |   |     `-ImplicitCastExpr 0x1141e5f4a20 <col:27> 'unsigned int' <LValueToRValue>
    |   |       `-DeclRefExpr 0x1141e5f49b8 <col:27> 'unsigned int' lvalue Var 0x1141e6a3e50 'i' 'unsigned int'
    |   `-ForStmt 0x1141e5f4f10 <line:254:9, line:258:9>
    |     |-BinaryOperator 0x1141e5f4af0 <line:254:14, col:18> 'unsigned int' '='
    |     | |-DeclRefExpr 0x1141e5f4a90 <col:14> 'unsigned int' lvalue Var 0x1141e6a3ed0 'j' 'unsigned int'
    |     | `-ImplicitCastExpr 0x1141e5f4ad8 <col:18> 'unsigned int' <IntegralCast>
    |     |   `-IntegerLiteral 0x1141e5f4ab0 <col:18> 'int' 0
    |     |-<<<NULL>>>
    |     |-BinaryOperator 0x1141e5f4bc0 <col:21, col:45> 'int' '<'
    |     | |-ImplicitCastExpr 0x1141e5f4ba8 <col:21> 'unsigned long long' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x1141e5f4b90 <col:21> 'unsigned int' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x1141e5f4b10 <col:21> 'unsigned int' lvalue Var 0x1141e6a3ed0 'j' 'unsigned int'
    |     | `-UnaryExprOrTypeTraitExpr 0x1141e5f4b70 <col:25, col:45> 'unsigned long long' sizeof
    |     |   `-ParenExpr 0x1141e5f4b50 <col:31, col:45> 'unsigned char [9]' lvalue
    |     |     `-DeclRefExpr 0x1141e5f4b30 <col:32> 'unsigned char [9]' lvalue Var 0x1141e6a2e50 'test_values_8' 'unsigned char [9]' non_odr_use_unevaluated
    |     |-UnaryOperator 0x1141e5f4c00 <col:48, col:50> 'unsigned int' prefix '++'
    |     | `-DeclRefExpr 0x1141e5f4be0 <col:50> 'unsigned int' lvalue Var 0x1141e6a3ed0 'j' 'unsigned int'
    |     `-CompoundStmt 0x1141e5f4ee8 <col:53, line:258:9>
    |       |-BinaryOperator 0x1141e5f4cf8 <line:255:13, col:32> 'unsigned char' '='
    |       | |-DeclRefExpr 0x1141e5f4c18 <col:13> 'unsigned char' lvalue Var 0x1141e6a4140 'f' 'unsigned char'
    |       | `-ImplicitCastExpr 0x1141e5f4ce0 <col:17, col:32> 'unsigned char' <LValueToRValue>
    |       |   `-ArraySubscriptExpr 0x1141e5f4cc0 <col:17, col:32> 'unsigned char' lvalue
    |       |     |-ImplicitCastExpr 0x1141e5f4c90 <col:17> 'unsigned char *' <ArrayToPointerDecay>
    |       |     | `-DeclRefExpr 0x1141e5f4c50 <col:17> 'unsigned char [9]' lvalue Var 0x1141e6a2e50 'test_values_8' 'unsigned char [9]'
    |       |     `-ImplicitCastExpr 0x1141e5f4ca8 <col:31> 'unsigned int' <LValueToRValue>
    |       |       `-DeclRefExpr 0x1141e5f4c70 <col:31> 'unsigned int' lvalue Var 0x1141e6a3ed0 'j' 'unsigned int'
    |       |-CompoundAssignOperator 0x1141e5f4e40 <line:256:13, col:45> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |       | |-DeclRefExpr 0x1141e5f4d18 <col:13> 'int' lvalue Var 0x1141e6a41f0 'num_failed' 'int'
    |       | `-CallExpr 0x1141e5f4de0 <col:27, col:45> 'int'
    |       |   |-ImplicitCastExpr 0x1141e5f4dc8 <col:27> 'int (*)(unsigned char, unsigned char)' <FunctionToPointerDecay>
    |       |   | `-DeclRefExpr 0x1141e5f4d38 <col:27> 'int (unsigned char, unsigned char)' Function 0x1141e746d90 'test_select_8' 'int (unsigned char, unsigned char)'
    |       |   |-ImplicitCastExpr 0x1141e5f4e10 <col:41> 'unsigned char' <LValueToRValue>
    |       |   | `-DeclRefExpr 0x1141e5f4d58 <col:41> 'unsigned char' lvalue Var 0x1141e6a40c0 'e' 'unsigned char'
    |       |   `-ImplicitCastExpr 0x1141e5f4e28 <col:44> 'unsigned char' <LValueToRValue>
    |       |     `-DeclRefExpr 0x1141e5f4d78 <col:44> 'unsigned char' lvalue Var 0x1141e6a4140 'f' 'unsigned char'
    |       `-CompoundAssignOperator 0x1141e5f4eb8 <line:257:13, col:24> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |         |-DeclRefExpr 0x1141e5f4e70 <col:13> 'int' lvalue Var 0x1141e6a4298 'num_all' 'int'
    |         `-IntegerLiteral 0x1141e5f4e90 <col:24> 'int' 1
    `-IfStmt 0x1141e5f5510 <line:261:5, line:267:5> has_else
      |-UnaryOperator 0x1141e5f4fd8 <line:261:9, col:10> 'int' prefix '!' cannot overflow
      | `-ImplicitCastExpr 0x1141e5f4fc0 <col:10> 'int' <LValueToRValue>
      |   `-DeclRefExpr 0x1141e5f4fa0 <col:10> 'int' lvalue Var 0x1141e6a41f0 'num_failed' 'int'
      |-CompoundStmt 0x1141e5f5260 <col:22, line:264:5>
      | |-CallExpr 0x1141e5f51a8 <line:262:9, col:60> 'int'
      | | |-ImplicitCastExpr 0x1141e5f5190 <col:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
      | | | `-DeclRefExpr 0x1141e5f4ff0 <col:9> 'int (FILE *, const char *, ...)' Function 0x1141e5c5000 'fprintf' 'int (FILE *, const char *, ...)'
      | | |-ParenExpr 0x1141e5f50c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:150:16, col:33> 'FILE *'
      | | | `-UnaryOperator 0x1141e5f50b0 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
      | | |   `-ArraySubscriptExpr 0x1141e5f5090 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
      | | |     |-CallExpr 0x1141e5f5048 <col:18, col:29> 'FILE *'
      | | |     | `-ImplicitCastExpr 0x1141e5f5030 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
      | | |     |   `-DeclRefExpr 0x1141e5f5010 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1141e5be518 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
      | | |     `-IntegerLiteral 0x1141e5f5068 <col:31> 'int' 1
      | | |-ImplicitCastExpr 0x1141e5f51f8 <.//openssl//file_jk/before\test\constant_time_test.c:262:25> 'const char *' <NoOp>
      | | | `-ImplicitCastExpr 0x1141e5f51e0 <col:25> 'char *' <ArrayToPointerDecay>
      | | |   `-StringLiteral 0x1141e5f5128 <col:25> 'char [24]' lvalue "success (ran %d tests)\n"
      | | `-ImplicitCastExpr 0x1141e5f5210 <col:53> 'int' <LValueToRValue>
      | |   `-DeclRefExpr 0x1141e5f5158 <col:53> 'int' lvalue Var 0x1141e6a4298 'num_all' 'int'
      | `-ReturnStmt 0x1141e5f5250 <line:263:9, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:45:25>
      |   `-IntegerLiteral 0x1141e5f5228 <col:25> 'int' 0
      `-CompoundStmt 0x1141e5f54f0 <.//openssl//file_jk/before\test\constant_time_test.c:264:12, line:267:5>
        |-CallExpr 0x1141e5f5418 <line:265:9, col:72> 'int'
        | |-ImplicitCastExpr 0x1141e5f5400 <col:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
        | | `-DeclRefExpr 0x1141e5f5280 <col:9> 'int (FILE *, const char *, ...)' Function 0x1141e5c5000 'fprintf' 'int (FILE *, const char *, ...)'
        | |-ParenExpr 0x1141e5f5358 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:150:16, col:33> 'FILE *'
        | | `-UnaryOperator 0x1141e5f5340 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
        | |   `-ArraySubscriptExpr 0x1141e5f5320 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
        | |     |-CallExpr 0x1141e5f52d8 <col:18, col:29> 'FILE *'
        | |     | `-ImplicitCastExpr 0x1141e5f52c0 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
        | |     |   `-DeclRefExpr 0x1141e5f52a0 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1141e5be518 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
        | |     `-IntegerLiteral 0x1141e5f52f8 <col:31> 'int' 1
        | |-ImplicitCastExpr 0x1141e5f5470 <.//openssl//file_jk/before\test\constant_time_test.c:265:25> 'const char *' <NoOp>
        | | `-ImplicitCastExpr 0x1141e5f5458 <col:25> 'char *' <ArrayToPointerDecay>
        | |   `-StringLiteral 0x1141e5f5378 <col:25> 'char [24]' lvalue "%d of %d tests failed!\n"
        | |-ImplicitCastExpr 0x1141e5f5488 <col:53> 'int' <LValueToRValue>
        | | `-DeclRefExpr 0x1141e5f53a8 <col:53> 'int' lvalue Var 0x1141e6a41f0 'num_failed' 'int'
        | `-ImplicitCastExpr 0x1141e5f54a0 <col:65> 'int' <LValueToRValue>
        |   `-DeclRefExpr 0x1141e5f53c8 <col:65> 'int' lvalue Var 0x1141e6a4298 'num_all' 'int'
        `-ReturnStmt 0x1141e5f54e0 <line:266:9, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:46:25>
          `-IntegerLiteral 0x1141e5f54b8 <col:25> 'int' 1
