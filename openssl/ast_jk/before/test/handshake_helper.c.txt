TranslationUnitDecl 0x1f3fcd11688 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1f3fcd11f20 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1f3fcd11c20 '__int128'
|-TypedefDecl 0x1f3fcd11f90 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1f3fcd11c40 'unsigned __int128'
|-TypedefDecl 0x1f3fcd122c8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1f3fcd12080 'struct __NSConstantString_tag'
|   `-Record 0x1f3fcd11fe8 '__NSConstantString_tag'
|-TypedefDecl 0x1f3fcd12338 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x1f3fcd11860 'unsigned long long'
|-TypedefDecl 0x1f3fcd123d0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1f3fcd12390 'char *'
|   `-BuiltinType 0x1f3fcd11720 'char'
|-TypedefDecl 0x1f3fcd12440 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1f3fcd12390 'char *'
|   `-BuiltinType 0x1f3fcd11720 'char'
|-TypedefDecl 0x1f3fcd12500 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x1f3fcd11860 'unsigned long long'
|-TypedefDecl 0x1f3fcd12570 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x1f3fcd12390 'char *'
|   `-BuiltinType 0x1f3fcd11720 'char'
|-FunctionDecl 0x1f3fe79a410 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1f3fe79a4b0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x1f3fe79a520 <col:21> Implicit
|-FunctionDecl 0x1f3fe79a578 prev 0x1f3fe79a410 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1f3fe79a2a0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x1f3fe79a668 <col:21> Inherited Implicit
|-TypedefDecl 0x1f3fe79a6a8 prev 0x1f3fcd12338 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x1f3fcd11860 'unsigned long long'
|-TypedefDecl 0x1f3fe79a750 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x1f3fe79a720 'size_t' sugar
|   |-Typedef 0x1f3fe79a6a8 'size_t'
|   `-BuiltinType 0x1f3fcd11860 'unsigned long long'
|-TypedefDecl 0x1f3fe79a7c0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x1f3fcd117c0 'long long'
|-TypedefDecl 0x1f3fe79a830 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x1f3fcd117c0 'long long'
|-TypedefDecl 0x1f3fe79a8a0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x1f3fcd11800 'unsigned short'
|-TypedefDecl 0x1f3fe79a910 <line:541:1, col:24> col:24 wint_t 'unsigned short'
| `-BuiltinType 0x1f3fcd11800 'unsigned short'
|-TypedefDecl 0x1f3fe79a980 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x1f3fcd11800 'unsigned short'
|-TypedefDecl 0x1f3fe79a9f0 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x1f3fcd11780 'int'
|-TypedefDecl 0x1f3fe79aa60 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x1f3fcd117a0 'long'
|-TypedefDecl 0x1f3fe79aad0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x1f3fcd117c0 'long long'
|-TypedefDecl 0x1f3fe79ab60 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x1f3fe79ab30 '__time64_t' sugar
|   |-Typedef 0x1f3fe79aad0 '__time64_t'
|   `-BuiltinType 0x1f3fcd117c0 'long long'
|-FunctionDecl 0x1f3fe79acd8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x1f3fe79aef8 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x1f3fe7d2f60 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x1f3fe79b038 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x1f3fe79b0b0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x1f3fe79b128 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x1f3fe79b1a8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x1f3fe7d2d00 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x1f3fe7d3040 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x1f3fe7d3100 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x1f3fe7d3270 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x1f3fe7d3220 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x1f3fe7d31c0 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x1f3fe7d30e0 'struct threadlocaleinfostruct'
|       `-Record 0x1f3fe7d9d70 'threadlocaleinfostruct'
|-TypedefDecl 0x1f3fe7d3380 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x1f3fe7d3330 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x1f3fe7d32d0 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x1f3fe7d31a0 'struct threadmbcinfostruct'
|       `-Record 0x1f3fe7d3100 'threadmbcinfostruct'
|-RecordDecl 0x1f3fe7d33d8 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x1f3fe7d3490 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x1f3fe7d3550 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1f3fe7d35e0 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x1f3fe7d3670 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x1f3fe7d3728 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x1f3fe7d36d0 'struct localeinfo_struct' sugar
|   `-RecordType 0x1f3fe7d3530 'struct localeinfo_struct'
|     `-Record 0x1f3fe7d3490 'localeinfo_struct'
|-TypedefDecl 0x1f3fe7d3800 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x1f3fe7d37b0 'struct localeinfo_struct *'
|   `-ElaboratedType 0x1f3fe7d36d0 'struct localeinfo_struct' sugar
|     `-RecordType 0x1f3fe7d3530 'struct localeinfo_struct'
|       `-Record 0x1f3fe7d3490 'localeinfo_struct'
|-RecordDecl 0x1f3fe7d3878 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x1f3fe7d3930 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1f3fe7d39a8 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x1f3fe7d3a68 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x1f3fe7d3b00 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x1f3fe7d3b70 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x1f3fe7d3c28 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x1f3fe7d3bd0 'struct localerefcount' sugar
|   `-RecordType 0x1f3fe7d3910 'struct localerefcount'
|     `-Record 0x1f3fe7d3878 'localerefcount'
|-RecordDecl 0x1f3fe7d9d70 prev 0x1f3fe7d3040 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x1f3fe7d9df0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1f3fe7d9e68 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x1f3fe7d9ed8 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x1f3fe7d9f48 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x1f3fe7d9fb8 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x1f3fe7da178 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x1f3fe7da1e8 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x1f3fe7da258 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x1f3fe7da2c8 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x1f3fe7da338 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x1f3fe7da3a8 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x1f3fe7da400 parent 0x1f3fcd11688 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x1f3fe7da590 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x1f3fe7da600 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x1f3fe7da670 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x1f3fe7da6e0 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x1f3fe7da780 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x1f3fe7da7f0 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x1f3fe7da900 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x1f3fe7daa38 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x1f3fe7daae8 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x1f3fe7daa90 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x1f3fe7d30e0 'struct threadlocaleinfostruct'
|     `-Record 0x1f3fe7d9d70 'threadlocaleinfostruct'
|-FunctionDecl 0x1f3fe7dcfb0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:47:9, col:142> col:25 _memccpy 'void *(void *, const void *, int, size_t) __attribute__((cdecl))':'void *(void *, const void *, int, size_t)'
| |-ParmVarDecl 0x1f3fe7dab70 <col:69, col:76> col:76 _Dst 'void *'
| |-ParmVarDecl 0x1f3fe7dac20 <col:87, col:100> col:100 _Src 'const void *'
| |-ParmVarDecl 0x1f3fe7daca0 <col:111, col:115> col:115 _Val 'int'
| `-ParmVarDecl 0x1f3fe7dcda0 <col:126, col:133> col:133 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1f3fe7dd378 <line:48:54> col:54 implicit memchr 'void *(const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1f3fe7dd418 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1f3fe7dd480 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1f3fe7dd4e8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1f3fe7dd568 prev 0x1f3fe7dd378 <col:38, col:150> col:54 memchr 'void *(const void *, int, unsigned long long)'
| |-ParmVarDecl 0x1f3fe7dd0a0 <col:94, col:107> col:107 _Buf 'const void *'
| |-ParmVarDecl 0x1f3fe7dd120 <col:119, col:123> col:123 _Val 'int'
| `-ParmVarDecl 0x1f3fe7dd198 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1f3fe7dd928 <line:49:24, col:162> col:40 _memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x1f3fe7dd650 <col:77, col:90> col:90 _Buf1 'const void *'
| |-ParmVarDecl 0x1f3fe7dd6d0 <col:125, col:138> col:138 _Buf2 'const void *'
| `-ParmVarDecl 0x1f3fe7dd748 <col:150, col:157> col:157 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1f3fe7e1e40 <line:50:24, col:192> col:40 _memicmp_l 'int (const void *, const void *, size_t, _locale_t) __attribute__((cdecl))':'int (const void *, const void *, size_t, _locale_t)'
| |-ParmVarDecl 0x1f3fe7dda10 <col:79, col:92> col:92 _Buf1 'const void *'
| |-ParmVarDecl 0x1f3fe7dda90 <col:127, col:140> col:140 _Buf2 'const void *'
| |-ParmVarDecl 0x1f3fe7ddb08 <col:152, col:159> col:159 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1f3fe7ddba0 <col:175, col:185> col:185 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f3fe7e2148 <line:51:32> col:32 implicit memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1f3fe7e21e8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1f3fe7e2250 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1f3fe7e22b8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1f3fe7e2338 prev 0x1f3fe7e2148 <col:16, col:144> col:32 memcmp 'int (const void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x1f3fe7e1f30 <col:63, col:76> col:76 _Buf1 'const void *'
| |-ParmVarDecl 0x1f3fe7e1fb0 <col:107, col:120> col:120 _Buf2 'const void *'
| `-ParmVarDecl 0x1f3fe7e2028 <col:132, col:139> col:139 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1f3fe7e26f8 <line:55:17> col:17 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1f3fe7e2798 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1f3fe7e2800 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1f3fe7e2868 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1f3fe7e28e8 prev 0x1f3fe7e26f8 <col:1, col:127> col:17 used memcpy 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x1f3fe7e2420 <col:54, col:61> col:61 _Dst 'void *'
| |-ParmVarDecl 0x1f3fe7e24a0 <col:91, col:104> col:104 _Src 'const void *'
| `-ParmVarDecl 0x1f3fe7e2518 <col:115, col:122> col:122 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1f3fe7dddb0 <line:57:9, col:191> col:26 memcpy_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x1f3fe7e29f8 <col:82, col:89> col:89 _Dst 'void *'
| |-ParmVarDecl 0x1f3fe7e2a90 <col:100, col:108> col:108 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1f3fe7e2b10 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x1f3fe7e2b88 <col:174, col:182> col:182 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1f3fe7de178 <line:94:25> col:25 implicit used memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1f3fe7de218 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1f3fe7de280 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1f3fe7de2e8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1f3fe7de368 prev 0x1f3fe7de178 <col:9, col:107> col:25 used memset 'void *(void *, int, unsigned long long)'
| |-ParmVarDecl 0x1f3fe7ddea0 <col:62, col:69> col:69 _Dst 'void *'
| |-ParmVarDecl 0x1f3fe7ddf20 <col:80, col:84> col:84 _Val 'int'
| `-ParmVarDecl 0x1f3fe7ddf98 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1f3fe7de7e8 <line:98:57> col:57 implicit memccpy 'void *(void *, const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1f3fe7de888 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1f3fe7de8f0 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1f3fe7de958 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1f3fe7de9c0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1f3fe7dea48 prev 0x1f3fe7de7e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:98:187> col:57 memccpy 'void *(void *, const void *, int, unsigned long long)'
| |-ParmVarDecl 0x1f3fe7de530 <col:95, col:102> col:102 _Dst 'void *'
| |-ParmVarDecl 0x1f3fe7de5b0 <col:136, col:149> col:149 _Src 'const void *'
| |-ParmVarDecl 0x1f3fe7de630 <col:160, col:164> col:164 _Val 'int'
| |-ParmVarDecl 0x1f3fe7de6a8 <col:175, col:182> col:182 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1f3fe7deb08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memccpy. See online help for details." ""
|-FunctionDecl 0x1f3fe7daf18 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:99:190> col:69 memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x1f3fe7decd0 <col:105, col:118> col:118 _Buf1 'const void *'
| |-ParmVarDecl 0x1f3fe7dad80 <col:153, col:166> col:166 _Buf2 'const void *'
| |-ParmVarDecl 0x1f3fe7dadf8 <col:178, col:185> col:185 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1f3fe7dafd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memicmp. See online help for details." ""
|-FunctionDecl 0x1f3fe7db3c0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:105:40, col:144> col:56 _strset_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x1f3fe7db0f8 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x1f3fe7db170 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1f3fe7db1f0 <col:134, col:138> col:138 _Value 'int'
|-FunctionDecl 0x1f3fe7db790 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:107:88 _strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x1f3fe7db5a0 <col:108, col:114> col:114 _Dest 'char *'
| |-ParmVarDecl 0x1f3fe7db620 <col:126, col:131> col:131 _Value 'int'
| `-DeprecatedAttr 0x1f3fe7db840 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f3fe7dbc50 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:109:40, col:158> col:56 strcpy_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x1f3fe7db988 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x1f3fe7dba00 <col:112, col:120> col:120 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1f3fe7dba80 <col:141, col:154> col:154 _Src 'const char *'
|-FunctionDecl 0x1f3fe7dc050 <line:112:88> col:88 implicit strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1f3fe7dc0f0 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x1f3fe7dc158 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1f3fe7dc1d0 prev 0x1f3fe7dc050 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:112:88 strcpy 'char *(char *, const char *)'
| |-ParmVarDecl 0x1f3fe7dbe68 <col:142, col:148> col:148 _Dest 'char *'
| |-ParmVarDecl 0x1f3fe7dbee8 <col:162, col:176> col:176 _Source 'const char *'
| `-DeprecatedAttr 0x1f3fe7dc280 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f3fe7dc5d8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:114:40, col:161> col:56 strcat_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x1f3fe7dc3c8 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x1f3fe7dc440 <col:115, col:123> col:123 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1f3fe7dc4c0 <col:144, col:157> col:157 _Src 'const char *'
|-FunctionDecl 0x1f3fe7dc900 <line:118:88> col:88 implicit strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1f3fe7dc9a0 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x1f3fe7dca08 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1f3fe7dca80 prev 0x1f3fe7dc900 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:118:88 strcat 'char *(char *, const char *)'
| |-ParmVarDecl 0x1f3fe7dc780 <col:170, col:176> col:176 _Dest 'char *'
| |-ParmVarDecl 0x1f3fe7dc800 <col:190, col:204> col:204 _Source 'const char *'
| `-DeprecatedAttr 0x1f3fe7dcb30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f3fe7e9f40 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:120:32> col:32 implicit used strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x1f3fe7e9fe0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1f3fe7ea048 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1f3fe7ea0c0 prev 0x1f3fe7e9f40 <col:16, col:91> col:32 used strcmp 'int (const char *, const char *)'
| |-ParmVarDecl 0x1f3fe7dcc78 <col:46, col:59> col:59 _Str1 'const char *'
| `-ParmVarDecl 0x1f3fe7dccf8 <col:73, col:86> col:86 _Str2 'const char *'
|-FunctionDecl 0x1f3fe7ea310 <line:121:32> col:32 implicit used strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x1f3fe7ea3b0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1f3fe7ea420 prev 0x1f3fe7ea310 <col:16, col:63> col:32 used strlen 'unsigned long long (const char *)'
| `-ParmVarDecl 0x1f3fe7ea1a0 <col:46, col:59> col:59 _Str 'const char *'
|-FunctionDecl 0x1f3fe7ea718 <line:125:1, col:92> col:17 used strnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x1f3fe7ea4f8 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x1f3fe7ea570 <col:76, col:83> col:83 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1f3fe7ea968 <line:127:16, line:133:1> line:130:19 strnlen_s 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' static inline
| |-ParmVarDecl 0x1f3fe7ea7f8 <col:56, col:69> col:69 used _Str 'const char *'
| |-ParmVarDecl 0x1f3fe7ea870 <col:80, col:87> col:87 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x1f3fe7eac98 <line:131:1, line:133:1>
|   `-ReturnStmt 0x1f3fe7eac88 <line:132:5, col:51>
|     `-ConditionalOperator 0x1f3fe7eac58 <col:12, col:51> 'unsigned long long'
|       |-ParenExpr 0x1f3fe7eaac8 <col:12, col:20> 'int'
|       | `-BinaryOperator 0x1f3fe7eaaa8 <col:13, col:19> 'int' '=='
|       |   |-ImplicitCastExpr 0x1f3fe7eaa78 <col:13> 'const char *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x1f3fe7eaa30 <col:13> 'const char *' lvalue ParmVar 0x1f3fe7ea7f8 '_Str' 'const char *'
|       |   `-ImplicitCastExpr 0x1f3fe7eaa90 <col:19> 'const char *' <NullToPointer>
|       |     `-IntegerLiteral 0x1f3fe7eaa50 <col:19> 'int' 0
|       |-ImplicitCastExpr 0x1f3fe7eac40 <col:24> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x1f3fe7eaae8 <col:24> 'int' 0
|       `-CallExpr 0x1f3fe7eabe0 <col:28, col:51> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x1f3fe7eabc8 <col:28> 'size_t (*)(const char *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x1f3fe7eab10 <col:28> 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' Function 0x1f3fe7ea718 'strnlen' 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
|         |-ImplicitCastExpr 0x1f3fe7eac10 <col:36> 'const char *' <LValueToRValue>
|         | `-DeclRefExpr 0x1f3fe7eab30 <col:36> 'const char *' lvalue ParmVar 0x1f3fe7ea7f8 '_Str' 'const char *'
|         `-ImplicitCastExpr 0x1f3fe7eac28 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x1f3fe7eab50 <col:42> 'size_t':'unsigned long long' lvalue ParmVar 0x1f3fe7ea870 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x1f3fe7e7f88 <line:136:28, col:209> col:44 memmove_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x1f3fe7eacc8 <col:100, col:107> col:107 _Dst 'void *'
| |-ParmVarDecl 0x1f3fe7ead40 <col:118, col:126> col:126 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1f3fe7eadc0 <col:168, col:181> col:181 _Src 'const void *'
| `-ParmVarDecl 0x1f3fe7e7e50 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1f3fe7e8290 <line:139:67> col:67 implicit memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1f3fe7e8330 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1f3fe7e8398 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1f3fe7e8400 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1f3fe7e8480 prev 0x1f3fe7e8290 <col:51, col:186> col:67 memmove 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x1f3fe7e8078 <col:109, col:116> col:116 _Dst 'void *'
| |-ParmVarDecl 0x1f3fe7e80f8 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x1f3fe7e8170 <col:174, col:181> col:181 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1f3fe7e86b8 <line:146:24, col:76> col:40 _strdup 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| `-ParmVarDecl 0x1f3fe7e8568 <col:59, col:72> col:72 _Src 'const char *'
|-FunctionDecl 0x1f3fe7e8980 <line:152:54> col:54 implicit strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x1f3fe7e8a20 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1f3fe7e8a88 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1f3fe7e8b00 prev 0x1f3fe7e8980 <col:38, col:100> col:54 strchr 'char *(const char *, int)'
| |-ParmVarDecl 0x1f3fe7e8790 <col:68, col:81> col:81 _Str 'const char *'
| `-ParmVarDecl 0x1f3fe7e8810 <col:92, col:96> col:96 _Val 'int'
|-FunctionDecl 0x1f3fe7e8d60 <line:153:24, col:103> col:40 _stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1f3fe7e8be0 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x1f3fe7e8c60 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x1f3fe7e6fc0 <line:154:24, col:103> col:40 _strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1f3fe7e6e40 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x1f3fe7e6ec0 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x1f3fe7e7378 <line:155:24, col:133> col:40 _stricmp_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x1f3fe7e70a0 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x1f3fe7e7120 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x1f3fe7e7198 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f3fe7e75e0 <line:156:24, col:103> col:40 strcoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1f3fe7e7460 <col:56, col:69> col:69 _Str1 'const char *'
| `-ParmVarDecl 0x1f3fe7e74e0 <col:84, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x1f3fe7e78d8 <line:157:24, col:133> col:40 _strcoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x1f3fe7e76c0 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x1f3fe7e7740 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x1f3fe7e77b8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f3fe7e7b40 <line:158:24, col:104> col:40 _stricoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1f3fe7e79c0 <col:58, col:71> col:71 _Str1 'const char *'
| `-ParmVarDecl 0x1f3fe7e7a40 <col:86, col:99> col:99 _Str2 'const char *'
|-FunctionDecl 0x1f3fe7e3e10 <line:159:24, col:134> col:40 _stricoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x1f3fe7e7c20 <col:60, col:73> col:73 _Str1 'const char *'
| |-ParmVarDecl 0x1f3fe7e7ca0 <col:88, col:101> col:101 _Str2 'const char *'
| `-ParmVarDecl 0x1f3fe7e7d18 <col:117, col:127> col:127 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f3fe7e41c8 <line:160:24, col:167> col:40 _strncoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1f3fe7e3ef8 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1f3fe7e3f78 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x1f3fe7e3ff0 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1f3fe7e4630 <line:161:24, col:195> col:40 _strncoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1f3fe7e42b0 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1f3fe7e4330 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x1f3fe7e43a8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1f3fe7e4420 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f3fe7e4938 <line:162:24, col:167> col:40 _strnicoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1f3fe7e4720 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1f3fe7e47a0 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x1f3fe7e4818 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1f3fe7e4cd0 <line:163:24, col:196> col:40 _strnicoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1f3fe7e4a20 <col:80, col:93> col:93 _Str1 'const char *'
| |-ParmVarDecl 0x1f3fe7e4aa0 <col:127, col:140> col:140 _Str2 'const char *'
| |-ParmVarDecl 0x1f3fe7e4b18 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1f3fe7e4b90 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f3fe7e3028 <line:164:40> col:40 implicit strcspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x1f3fe7e30c8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1f3fe7e3130 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1f3fe7e31a8 prev 0x1f3fe7e3028 <col:24, col:104> col:40 strcspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x1f3fe7e2e00 <col:56, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x1f3fe7e2e80 <col:83, col:96> col:96 _Control 'const char *'
|-FunctionDecl 0x1f3fe7e3460 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:165:118> col:77 _strerror 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x1f3fe7e3380 <col:98, col:111> col:111 _ErrMsg 'const char *'
| `-DeprecatedAttr 0x1f3fe7e3508 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f3fe7e38e0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:166:28, col:155> col:44 _strerror_s 'errno_t (char *, size_t, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *)'
| |-ParmVarDecl 0x1f3fe7e3650 <col:85, col:92> col:92 _Buf 'char *'
| |-ParmVarDecl 0x1f3fe7e36c8 <col:103, col:110> col:110 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1f3fe7e3748 <col:135, col:148> col:148 _ErrMsg 'const char *'
|-FunctionDecl 0x1f3fe7e3bf8 <line:168:76> col:76 implicit strerror 'char *(int)' extern
| `-ParmVarDecl 0x1f3fe7e3c98 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1f3fe7e3d08 prev 0x1f3fe7e3bf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:168:93> col:76 strerror 'char *(int)'
| |-ParmVarDecl 0x1f3fe7e3ac0 <col:90> col:93 'int'
| `-DeprecatedAttr 0x1f3fe7e3db0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f3fe7eb190 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:170:28, col:139> col:44 strerror_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x1f3fe7eaf80 <col:84, col:91> col:91 _Buf 'char *'
| |-ParmVarDecl 0x1f3fe7eaff8 <col:102, col:109> col:109 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1f3fe7eb078 <col:128, col:132> col:132 _ErrNum 'int'
|-FunctionDecl 0x1f3fe7eb498 <line:173:28, col:109> col:44 _strlwr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x1f3fe7eb278 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x1f3fe7eb2f0 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1f3fe7eb788 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:175:79 _strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1f3fe7eb638 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x1f3fe7eb830 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f3fe7ebc40 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:176:28, col:139> col:44 _strlwr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1f3fe7eb978 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x1f3fe7eb9f0 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1f3fe7eba68 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f3fe7ec040 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:178:82 _strlwr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x1f3fe7ebde8 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x1f3fe7ebe90 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1f3fe7ec0f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f3fe7ec5a8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:180:40, col:206> col:56 strncat_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x1f3fe7ec238 <col:98, col:105> col:105 _Dst 'char *'
| |-ParmVarDecl 0x1f3fe7ec2b0 <col:116, col:124> col:124 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1f3fe7ec330 <col:165, col:178> col:178 _Src 'const char *'
| `-ParmVarDecl 0x1f3fe7ec3a8 <col:189, col:197> col:197 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1f3fe7eca28 <line:186:83> col:83 implicit strncat 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1f3fe7ecac8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1f3fe7ecb30 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1f3fe7ecb98 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1f3fe7ecc18 prev 0x1f3fe7eca28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:186:83 strncat 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1f3fe7ec758 <col:161, col:167> col:167 _Dest 'char *'
| |-ParmVarDecl 0x1f3fe7ec7d8 <col:198, col:212> col:212 _Source 'const char *'
| |-ParmVarDecl 0x1f3fe7ec850 <col:226, col:234> col:234 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1f3fe7eccd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f3fe7e4fd0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:188:40> col:40 implicit strncmp 'int (const char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1f3fe7e5070 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1f3fe7e50d8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1f3fe7e5140 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1f3fe7e51c0 prev 0x1f3fe7e4fd0 <col:24, col:163> col:40 strncmp 'int (const char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1f3fe7ece18 <col:75, col:88> col:88 _Str1 'const char *'
| |-ParmVarDecl 0x1f3fe7e4e38 <col:122, col:135> col:135 _Str2 'const char *'
| `-ParmVarDecl 0x1f3fe7e4eb0 <col:147, col:154> col:154 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1f3fe7e54c0 <line:189:24, col:165> col:40 _strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1f3fe7e52a8 <col:77, col:90> col:90 _Str1 'const char *'
| |-ParmVarDecl 0x1f3fe7e5328 <col:124, col:137> col:137 _Str2 'const char *'
| `-ParmVarDecl 0x1f3fe7e53a0 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1f3fe7e5858 <line:190:24, col:195> col:40 _strnicmp_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1f3fe7e55a8 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1f3fe7e5628 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x1f3fe7e56a0 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1f3fe7e5718 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f3fe7e5bf0 <line:192:40, col:203> col:56 strncpy_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x1f3fe7e5948 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x1f3fe7e59c0 <col:113, col:121> col:121 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1f3fe7e5a40 <col:162, col:175> col:175 _Src 'const char *'
| `-ParmVarDecl 0x1f3fe7e5ab8 <col:186, col:194> col:194 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1f3fe7ed038 <line:195:83> col:83 implicit strncpy 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1f3fe7ed0d8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1f3fe7ed140 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1f3fe7ed1a8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1f3fe7ed228 prev 0x1f3fe7ed038 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:195:83 strncpy 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1f3fe7e5da0 <col:167, col:173> col:173 _Dest 'char *'
| |-ParmVarDecl 0x1f3fe7ecea0 <col:204, col:218> col:218 _Source 'const char *'
| |-ParmVarDecl 0x1f3fe7ecf18 <col:232, col:240> col:240 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1f3fe7ed2e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f3fe7ed798 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:196:40, col:174> col:56 _strnset_s 'errno_t (char *, size_t, int, size_t) __attribute__((cdecl))':'errno_t (char *, size_t, int, size_t)'
| |-ParmVarDecl 0x1f3fe7ed428 <col:99, col:106> col:106 _Str 'char *'
| |-ParmVarDecl 0x1f3fe7ed4a0 <col:117, col:124> col:124 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f3fe7ed520 <col:143, col:147> col:147 _Val 'int'
| `-ParmVarDecl 0x1f3fe7ed598 <col:158, col:165> col:165 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1f3fe7edc18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:198:83 _strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x1f3fe7ed948 <col:163, col:169> col:169 _Dest 'char *'
| |-ParmVarDecl 0x1f3fe7ed9c8 <col:181, col:186> col:186 _Val 'int'
| |-ParmVarDecl 0x1f3fe7eda40 <col:197, col:205> col:205 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1f3fe7edcd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f3fe7e5fa0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:199:54> col:54 implicit strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x1f3fe7e6040 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1f3fe7e60a8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1f3fe7e6120 prev 0x1f3fe7e5fa0 <col:38, col:116> col:54 strpbrk 'char *(const char *, const char *)'
| |-ParmVarDecl 0x1f3fe7ede18 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x1f3fe7e5e30 <col:95, col:108> col:108 _Control 'const char *'
|-FunctionDecl 0x1f3fe7e6380 <line:200:54> col:54 implicit strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x1f3fe7e6420 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1f3fe7e6488 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1f3fe7e6500 prev 0x1f3fe7e6380 <col:38, col:100> col:54 strrchr 'char *(const char *, int)'
| |-ParmVarDecl 0x1f3fe7e6200 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x1f3fe7e6280 <col:93, col:97> col:97 _Ch 'int'
|-FunctionDecl 0x1f3fe7e66c0 <line:201:9, col:54> col:25 _strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| `-ParmVarDecl 0x1f3fe7e65e0 <col:43, col:50> col:50 _Str 'char *'
|-FunctionDecl 0x1f3fe7e6910 <line:202:40> col:40 implicit strspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x1f3fe7e69b0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1f3fe7e6a18 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1f3fe7e6a90 prev 0x1f3fe7e6910 <col:24, col:101> col:40 strspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x1f3fe7e6798 <col:54, col:67> col:67 _Str 'const char *'
| `-ParmVarDecl 0x1f3fe7e6818 <col:80, col:93> col:93 _Control 'const char *'
|-FunctionDecl 0x1f3fe7e6cf0 <line:203:70> col:70 implicit strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x1f3fe7e6d90 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1f3fe867000 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1f3fe867078 prev 0x1f3fe7e6cf0 <col:54, col:130> col:70 strstr 'char *(const char *, const char *)'
| |-ParmVarDecl 0x1f3fe7e6b70 <col:84, col:97> col:97 _Str 'const char *'
| `-ParmVarDecl 0x1f3fe7e6bf0 <col:110, col:123> col:123 _SubStr 'const char *'
|-FunctionDecl 0x1f3fe867398 <line:204:74> col:74 implicit strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1f3fe867438 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x1f3fe8674a0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1f3fe867518 prev 0x1f3fe867398 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:204:134> col:74 strtok 'char *(char *, const char *)'
| |-ParmVarDecl 0x1f3fe867218 <col:95, col:102> col:102 _Str 'char *'
| |-ParmVarDecl 0x1f3fe867298 <col:115, col:128> col:128 _Delim 'const char *'
| `-DeprecatedAttr 0x1f3fe8675c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f3fe8679a8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:206:36, col:162> col:52 strtok_s 'char *(char *, const char *, char **) __attribute__((cdecl))':'char *(char *, const char *, char **)'
| |-ParmVarDecl 0x1f3fe867710 <col:75, col:82> col:82 _Str 'char *'
| |-ParmVarDecl 0x1f3fe867790 <col:95, col:108> col:108 _Delim 'const char *'
| `-ParmVarDecl 0x1f3fe867810 <col:146, col:154> col:154 _Context 'char **'
|-FunctionDecl 0x1f3fe867c00 <line:208:28, col:109> col:44 _strupr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x1f3fe867a90 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x1f3fe867b08 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1f3fe867e80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:210:79 _strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1f3fe867da0 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x1f3fe867f28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f3fe868318 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:211:28, col:130> col:44 _strupr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1f3fe868110 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x1f3fe868188 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1f3fe868200 <col:113, col:123> col:123 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f3fe868638 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:213:82 _strupr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x1f3fe8684c0 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x1f3fe868538 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1f3fe8686e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f3fe868b00 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:214:44> col:44 implicit strxfrm 'unsigned long long (char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1f3fe868ba0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1f3fe868c08 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1f3fe868c70 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1f3fe868cf0 prev 0x1f3fe868b00 <col:28, col:155> col:44 strxfrm 'unsigned long long (char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1f3fe868830 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x1f3fe8688b0 <col:115, col:128> col:128 _Src 'const char *'
| `-ParmVarDecl 0x1f3fe868928 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1f3fe864108 <line:215:28, col:185> col:44 _strxfrm_l 'size_t (char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1f3fe868dd8 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x1f3fe868e58 <col:117, col:130> col:130 _Src 'const char *'
| |-ParmVarDecl 0x1f3fe868ed0 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1f3fe868f48 <col:168, col:178> col:178 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f3fe8643b0 <line:245:71> col:71 implicit strdup 'char *(const char *)' extern
| `-ParmVarDecl 0x1f3fe864450 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1f3fe8644c0 prev 0x1f3fe8643b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:245:106> col:71 strdup 'char *(const char *)'
| |-ParmVarDecl 0x1f3fe8642d0 <col:89, col:102> col:102 _Src 'const char *'
| `-DeprecatedAttr 0x1f3fe864568 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strdup. See online help for details." ""
|-FunctionDecl 0x1f3fe8648b0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:252:129> col:69 strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1f3fe864730 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x1f3fe8647b0 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x1f3fe864960 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strcmpi. See online help for details." ""
|-FunctionDecl 0x1f3fe864ca8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:253:129> col:69 stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1f3fe864b28 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x1f3fe864ba8 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x1f3fe864d58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details." ""
|-FunctionDecl 0x1f3fe860fd8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:254:84> col:56 strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1f3fe864f20 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x1f3fe861080 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strlwr. See online help for details." ""
|-FunctionDecl 0x1f3fe861498 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:255:193> col:70 strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1f3fe861280 <col:106, col:119> col:119 _Str1 'const char *'
| |-ParmVarDecl 0x1f3fe861300 <col:153, col:166> col:166 _Str 'const char *'
| |-ParmVarDecl 0x1f3fe861378 <col:177, col:184> col:184 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1f3fe861550 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnicmp. See online help for details." ""
|-FunctionDecl 0x1f3fe861930 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:256:143> col:57 strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x1f3fe861718 <col:94, col:101> col:101 _Str 'char *'
| |-ParmVarDecl 0x1f3fe861798 <col:112, col:116> col:116 _Val 'int'
| |-ParmVarDecl 0x1f3fe861810 <col:127, col:134> col:134 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1f3fe8619e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnset. See online help for details." ""
|-FunctionDecl 0x1f3fe861c90 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:257:84> col:56 strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1f3fe861bb0 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x1f3fe861d38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strrev. See online help for details." ""
|-FunctionDecl 0x1f3fe8630c0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:258:99> col:56 strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x1f3fe861f00 <col:73, col:80> col:80 _Str 'char *'
| |-ParmVarDecl 0x1f3fe862fc0 <col:91, col:95> col:95 _Val 'int'
| `-DeprecatedAttr 0x1f3fe863170 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strset. See online help for details." ""
|-FunctionDecl 0x1f3fe863418 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:259:84> col:56 strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1f3fe863338 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x1f3fe8634c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strupr. See online help for details." ""
|-FunctionDecl 0x1f3fe863750 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:273:24, col:77> col:42 _wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| `-ParmVarDecl 0x1f3fe8635e0 <col:57, col:73> col:73 _Str 'const wchar_t *'
|-FunctionDecl 0x1f3fe863ae0 <line:280:40, col:167> col:56 wcscat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x1f3fe863820 <col:97, col:107> col:107 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1f3fe863898 <col:118, col:126> col:126 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1f3fe863910 <col:147, col:163> col:163 _Src 'const wchar_t *'
|-FunctionDecl 0x1f3fe863e98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:284:82 wcscat 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1f3fe863c80 <col:164, col:173> col:173 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1f3fe863cf8 <col:187, col:204> col:204 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x1f3fe863f48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f3fe8652f8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:288:41> col:41 implicit wcschr 'unsigned short *(const unsigned short *, unsigned short)' extern
| |-ParmVarDecl 0x1f3fe865398 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x1f3fe865400 <<invalid sloc>> <invalid sloc> 'unsigned short'
|-FunctionDecl 0x1f3fe865478 prev 0x1f3fe8652f8 <col:23, col:88> col:41 wcschr 'unsigned short *(const unsigned short *, unsigned short)'
| |-ParmVarDecl 0x1f3fe8650d8 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1f3fe865150 <col:77, col:85> col:85 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1f3fe865770 <line:289:36> col:36 implicit wcscmp 'int (const unsigned short *, const unsigned short *)' extern
| |-ParmVarDecl 0x1f3fe865810 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x1f3fe865878 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x1f3fe8658f0 prev 0x1f3fe865770 <col:24, col:101> col:36 wcscmp 'int (const unsigned short *, const unsigned short *)'
| |-ParmVarDecl 0x1f3fe865550 <col:50, col:66> col:66 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1f3fe8655c8 <col:80, col:96> col:96 _Str2 'const wchar_t *'
|-FunctionDecl 0x1f3fe865bd0 <line:291:40, col:164> col:56 wcscpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x1f3fe8659c8 <col:94, col:104> col:104 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1f3fe865a40 <col:115, col:123> col:123 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1f3fe865ab8 <col:144, col:160> col:160 _Src 'const wchar_t *'
|-FunctionDecl 0x1f3fe865ee0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:294:82 wcscpy 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1f3fe865d70 <col:136, col:145> col:145 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1f3fe865de8 <col:159, col:176> col:176 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x1f3fe865f90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f3fe866308 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:295:24, col:107> col:39 wcscspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1f3fe8660e8 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1f3fe866160 <col:83, col:99> col:99 _Control 'const wchar_t *'
|-FunctionDecl 0x1f3fe866550 <line:296:39> col:39 implicit wcslen 'unsigned long long (const unsigned short *)' extern
| `-ParmVarDecl 0x1f3fe8665f0 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x1f3fe866660 prev 0x1f3fe866550 <col:24, col:73> col:39 wcslen 'unsigned long long (const unsigned short *)'
| `-ParmVarDecl 0x1f3fe8663e0 <col:53, col:69> col:69 _Str 'const wchar_t *'
|-FunctionDecl 0x1f3fe866948 <line:300:1, col:94> col:16 used wcsnlen 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
| |-ParmVarDecl 0x1f3fe866730 <col:51, col:67> col:67 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1f3fe8667a8 <col:78, col:85> col:85 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1f3fe866b90 <line:302:16, line:308:1> line:305:18 wcsnlen_s 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' static inline
| |-ParmVarDecl 0x1f3fe866a20 <col:55, col:71> col:71 used _Src 'const wchar_t *'
| |-ParmVarDecl 0x1f3fe866a98 <col:82, col:89> col:89 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x1f3fe866f28 <line:306:1, line:308:1>
|   `-ReturnStmt 0x1f3fe866f18 <line:307:5, col:56>
|     `-ConditionalOperator 0x1f3fe866ee8 <col:12, col:56> 'unsigned long long'
|       |-ParenExpr 0x1f3fe866d50 <col:12, col:25> 'int'
|       | `-BinaryOperator 0x1f3fe866d30 <col:13, line:36:27> 'int' '=='
|       |   |-ImplicitCastExpr 0x1f3fe866d00 <line:307:13> 'const wchar_t *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x1f3fe866c58 <col:13> 'const wchar_t *' lvalue ParmVar 0x1f3fe866a20 '_Src' 'const wchar_t *'
|       |   `-ImplicitCastExpr 0x1f3fe866d18 <line:36:17, col:27> 'const wchar_t *' <BitCast>
|       |     `-ParenExpr 0x1f3fe866ce0 <col:17, col:27> 'void *'
|       |       `-CStyleCastExpr 0x1f3fe866cb8 <col:18, col:26> 'void *' <NullToPointer>
|       |         `-IntegerLiteral 0x1f3fe866c78 <col:26> 'int' 0
|       |-ImplicitCastExpr 0x1f3fe866ed0 <line:307:29> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x1f3fe866d70 <col:29> 'int' 0
|       `-CallExpr 0x1f3fe866e70 <col:33, col:56> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x1f3fe866e58 <col:33> 'size_t (*)(const wchar_t *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x1f3fe866d98 <col:33> 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' Function 0x1f3fe866948 'wcsnlen' 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
|         |-ImplicitCastExpr 0x1f3fe866ea0 <col:41> 'const wchar_t *' <LValueToRValue>
|         | `-DeclRefExpr 0x1f3fe866db8 <col:41> 'const wchar_t *' lvalue ParmVar 0x1f3fe866a20 '_Src' 'const wchar_t *'
|         `-ImplicitCastExpr 0x1f3fe866eb8 <col:47> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x1f3fe866dd8 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x1f3fe866a98 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x1f3fe8622a8 <line:311:40, col:212> col:56 wcsncat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x1f3fe866f50 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1f3fe861fb0 <col:119, col:127> col:127 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1f3fe862028 <col:168, col:184> col:184 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1f3fe8620a0 <col:195, col:203> col:203 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1f3fe862710 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:316:86 wcsncat 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1f3fe862450 <col:167, col:176> col:176 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1f3fe8624c8 <col:207, col:224> col:224 _Source 'const wchar_t *'
| |-ParmVarDecl 0x1f3fe862540 <col:238, col:246> col:246 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1f3fe8627c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f3fe862bd8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:318:36> col:36 implicit wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)' extern
| |-ParmVarDecl 0x1f3fe862c78 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| |-ParmVarDecl 0x1f3fe862ce0 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x1f3fe862d48 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1f3fe862dc8 prev 0x1f3fe862bd8 <col:24, col:165> col:36 wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)'
| |-ParmVarDecl 0x1f3fe862908 <col:71, col:87> col:87 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1f3fe862980 <col:121, col:137> col:137 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1f3fe8629f8 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1f3fe871250 <line:320:40, col:209> col:56 wcsncpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x1f3fe862ea8 <col:95, col:105> col:105 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1f3fe862f20 <col:116, col:124> col:124 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1f3fe8710a0 <col:165, col:181> col:181 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1f3fe871118 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1f3fe871600 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:323:86 wcsncpy 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1f3fe8713f8 <col:179, col:188> col:188 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1f3fe871470 <col:219, col:236> col:236 _Source 'const wchar_t *'
| |-ParmVarDecl 0x1f3fe8714e8 <col:250, col:258> col:258 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1f3fe8716b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f3fe871a18 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:324:38, col:124> col:56 wcspbrk 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1f3fe8717f8 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1f3fe871870 <col:100, col:116> col:116 _Control 'const wchar_t *'
|-FunctionDecl 0x1f3fe871c60 <line:325:38, col:109> col:56 wcsrchr 'wchar_t *(const wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(const wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1f3fe871af0 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1f3fe871b68 <col:98, col:106> col:106 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1f3fe871ea8 <line:326:24, col:106> col:39 wcsspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1f3fe871d38 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1f3fe871db0 <col:82, col:98> col:98 _Control 'const wchar_t *'
|-FunctionDecl 0x1f3fe86c0b0 <line:329:23, col:107> col:41 wcsstr 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1f3fe871f80 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1f3fe871ff8 <col:84, col:100> col:100 _SubStr 'const wchar_t *'
|-FunctionDecl 0x1f3fe86c3b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:330:142> col:76 wcstok 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1f3fe86c248 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x1f3fe86c2c0 <col:120, col:136> col:136 _Delim 'const wchar_t *'
| `-DeprecatedAttr 0x1f3fe86c468 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f3fe86c8d0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:332:36, col:173> col:54 wcstok_s 'wchar_t *(wchar_t *, const wchar_t *, wchar_t **) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x1f3fe86c5a8 <col:77, col:87> col:87 _Str 'wchar_t *'
| |-ParmVarDecl 0x1f3fe86c620 <col:100, col:116> col:116 _Delim 'const wchar_t *'
| `-ParmVarDecl 0x1f3fe86c700 <col:154, col:165> col:165 _Context 'wchar_t **'
|-FunctionDecl 0x1f3fe86cbf0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:334:105> col:79 _wcserror 'wchar_t *(int) __attribute__((cdecl))':'wchar_t *(int)'
| |-ParmVarDecl 0x1f3fe86ca78 <col:94, col:98> col:98 _ErrNum 'int'
| `-DeprecatedAttr 0x1f3fe86cc98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f3fe86f0f0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:335:28, col:147> col:44 _wcserror_s 'errno_t (wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, int)'
| |-ParmVarDecl 0x1f3fe86cdd8 <col:89, col:99> col:99 _Buf 'wchar_t *'
| |-ParmVarDecl 0x1f3fe86ce50 <col:110, col:117> col:117 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1f3fe86ced0 <col:136, col:140> col:140 _ErrNum 'int'
|-FunctionDecl 0x1f3fe86f3a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:337:122> col:80 __wcserror 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x1f3fe86f2c8 <col:102, col:118> col:118 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x1f3fe86f448 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f3fe86f810 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:338:28, col:165> col:44 __wcserror_s 'errno_t (wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x1f3fe86f588 <col:90, col:100> col:100 _Buffer 'wchar_t *'
| |-ParmVarDecl 0x1f3fe86f600 <col:114, col:121> col:121 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1f3fe86f678 <col:142, col:158> col:158 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x1f3fe86fa68 <line:341:24, col:103> col:36 _wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1f3fe86f8f0 <col:52, col:68> col:68 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1f3fe86f968 <col:82, col:98> col:98 _Str2 'const wchar_t *'
|-FunctionDecl 0x1f3fe86fe08 <line:342:24, col:133> col:36 _wcsicmp_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1f3fe86fb40 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1f3fe86fbb8 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1f3fe86fc30 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f3fe870118 <line:343:24, col:167> col:36 _wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1f3fe86fee8 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1f3fe86ff60 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1f3fe86ffd8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1f3fe870570 <line:344:24, col:197> col:36 _wcsnicmp_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1f3fe8701f8 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1f3fe870270 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1f3fe8702e8 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1f3fe870360 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f3fe8709c8 <line:345:40, col:181> col:56 _wcsnset_s 'errno_t (wchar_t *, size_t, wchar_t, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t, size_t)'
| |-ParmVarDecl 0x1f3fe870658 <col:99, col:109> col:109 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1f3fe8706d0 <col:120, col:127> col:127 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f3fe870748 <col:146, col:154> col:154 _Val 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1f3fe8707c0 <col:165, col:172> col:172 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1f3fe870e30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:347:86 _wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x1f3fe870b70 <col:172, col:181> col:181 _Str 'wchar_t *'
| |-ParmVarDecl 0x1f3fe870be8 <col:187, col:196> col:196 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x1f3fe870c60 <col:207, col:215> col:215 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1f3fe870ee8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f3fe86b150 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:348:9, col:59> col:27 _wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| `-ParmVarDecl 0x1f3fe871028 <col:45, col:55> col:55 _Str 'wchar_t *'
|-FunctionDecl 0x1f3fe86b4e0 <line:349:40, col:159> col:56 _wcsset_s 'errno_t (wchar_t *, size_t, wchar_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t)'
| |-ParmVarDecl 0x1f3fe86b220 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1f3fe86b298 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1f3fe86b310 <col:145, col:153> col:153 _Value 'wchar_t':'unsigned short'
|-FunctionDecl 0x1f3fe86b898 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:351:85 _wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1f3fe86b680 <col:150, col:159> col:159 _Str 'wchar_t *'
| |-ParmVarDecl 0x1f3fe86b6f8 <col:165, col:174> col:174 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x1f3fe86b948 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f3fe86bca8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:353:28, col:126> col:44 _wcslwr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1f3fe86ba88 <col:86, col:96> col:96 _Str 'wchar_t *'
| `-ParmVarDecl 0x1f3fe86bb00 <col:107, col:114> col:114 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1f3fe86bf18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:355:82 _wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1f3fe86be40 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x1f3fe86bfc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f3fe86a3f0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:356:28, col:156> col:44 _wcslwr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1f3fe86a128 <col:88, col:98> col:98 _Str 'wchar_t *'
| |-ParmVarDecl 0x1f3fe86a1a0 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1f3fe86a218 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f3fe86a7a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:358:85 _wcslwr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1f3fe86a590 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x1f3fe86a608 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1f3fe86a858 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f3fe86ab08 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:359:28, col:112> col:44 _wcsupr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1f3fe86a998 <col:79, col:89> col:89 _Str 'wchar_t *'
| `-ParmVarDecl 0x1f3fe86aa10 <col:100, col:107> col:107 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1f3fe86ad78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:361:82 _wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1f3fe86aca0 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x1f3fe86ae20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f3fe872240 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:362:28, col:142> col:44 _wcsupr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1f3fe86af60 <col:81, col:91> col:91 _Str 'wchar_t *'
| |-ParmVarDecl 0x1f3fe8720b0 <col:102, col:109> col:109 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1f3fe872128 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f3fe872550 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:364:85 _wcsupr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1f3fe8723e0 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x1f3fe872458 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1f3fe872600 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f3fe872a00 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:365:28, col:159> col:43 wcsxfrm 'size_t (wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1f3fe872740 <col:93, col:103> col:103 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1f3fe8727b8 <col:116, col:132> col:132 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1f3fe872830 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1f3fe872e48 <line:366:28, col:189> col:43 _wcsxfrm_l 'size_t (wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1f3fe872ae0 <col:96, col:106> col:106 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1f3fe872b58 <col:119, col:134> col:134 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1f3fe872bd0 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1f3fe872c48 <col:172, col:182> col:182 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f3fe8740d0 <line:367:24, col:102> col:36 wcscoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1f3fe872f30 <col:51, col:67> col:67 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1f3fe872fa8 <col:81, col:97> col:97 _Str2 'const wchar_t *'
|-FunctionDecl 0x1f3fe8743b8 <line:368:24, col:133> col:36 _wcscoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1f3fe8741a8 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1f3fe874220 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1f3fe874298 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f3fe874610 <line:369:24, col:104> col:36 _wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1f3fe874498 <col:53, col:69> col:69 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1f3fe874510 <col:83, col:99> col:99 _Str2 'const wchar_t *'
|-FunctionDecl 0x1f3fe8748f8 <line:370:24, col:133> col:36 _wcsicoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1f3fe8746e8 <col:55, col:71> col:71 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1f3fe874760 <col:85, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1f3fe8747d8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f3fe874be8 <line:371:24, col:167> col:36 _wcsncoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1f3fe8749d8 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1f3fe874a50 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1f3fe874ac8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1f3fe874f70 <line:372:24, col:197> col:36 _wcsncoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1f3fe874cc8 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1f3fe874d40 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1f3fe874db8 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1f3fe874e30 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f3fe873258 <line:373:24, col:168> col:36 _wcsnicoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1f3fe875058 <col:74, col:90> col:90 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1f3fe8730c0 <col:124, col:140> col:140 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1f3fe873138 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1f3fe8735e0 <line:374:24, col:198> col:36 _wcsnicoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1f3fe873338 <col:76, col:92> col:92 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1f3fe8733b0 <col:126, col:142> col:142 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1f3fe873428 <col:154, col:161> col:161 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1f3fe8734a0 <col:181, col:191> col:191 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f3fe873840 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:403:108> col:74 wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x1f3fe873768 <col:88, col:104> col:104 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x1f3fe8738e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsdup. See online help for details." ""
|-FunctionDecl 0x1f3fe873c20 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:413:135> col:69 wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1f3fe873aa8 <col:84, col:100> col:100 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1f3fe873b20 <col:114, col:130> col:130 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x1f3fe873cd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicmp. See online help for details." ""
|-FunctionDecl 0x1f3fe87a130 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:414:200> col:70 wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1f3fe873e90 <col:106, col:122> col:122 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1f3fe873f08 <col:156, col:172> col:172 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1f3fe873f80 <col:184, col:191> col:191 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1f3fe87a1e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnicmp. See online help for details." ""
|-FunctionDecl 0x1f3fe87a5b0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:415:153> col:60 wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x1f3fe87a3a8 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x1f3fe87a420 <col:118, col:126> col:126 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x1f3fe87a498 <col:137, col:144> col:144 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1f3fe87a668 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnset. See online help for details." ""
|-FunctionDecl 0x1f3fe87a900 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:416:90> col:59 wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1f3fe87a828 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1f3fe87a9a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsrev. See online help for details." ""
|-FunctionDecl 0x1f3fe87acd8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:417:104> col:59 wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1f3fe87ab68 <col:76, col:86> col:86 _Str 'wchar_t *'
| |-ParmVarDecl 0x1f3fe87abe0 <col:92, col:100> col:100 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x1f3fe87ad88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsset. See online help for details." ""
|-FunctionDecl 0x1f3fe87b020 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:418:90> col:59 wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1f3fe87af48 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1f3fe87b0c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcslwr. See online help for details." ""
|-FunctionDecl 0x1f3fe876340 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:419:90> col:59 wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1f3fe876268 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1f3fe8763e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsupr. See online help for details." ""
|-FunctionDecl 0x1f3fe876720 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:420:137> col:70 wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1f3fe8765a8 <col:86, col:102> col:102 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1f3fe876620 <col:116, col:132> col:132 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x1f3fe8767d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicoll. See online help for details." ""
|-EnumDecl 0x1f3fe8768e0 <.//openssl//file_jk/before\test/ssl_test_ctx.h:16:9, line:23:1> line:16:9
| |-EnumConstantDecl 0x1f3fe876a00 <line:17:5, col:24> col:5 referenced SSL_TEST_SUCCESS 'int'
| | `-ConstantExpr 0x1f3fe8769e8 <col:24> 'int'
| |   `-IntegerLiteral 0x1f3fe8769c0 <col:24> 'int' 0
| |-EnumConstantDecl 0x1f3fe876a58 <line:18:5> col:5 referenced SSL_TEST_SERVER_FAIL 'int'
| |-EnumConstantDecl 0x1f3fe876ab0 <line:19:5> col:5 referenced SSL_TEST_CLIENT_FAIL 'int'
| |-EnumConstantDecl 0x1f3fe876b08 <line:20:5> col:5 referenced SSL_TEST_INTERNAL_ERROR 'int'
| `-EnumConstantDecl 0x1f3fe876b60 <line:22:5> col:5 referenced SSL_TEST_FIRST_HANDSHAKE_FAILED 'int'
|-TypedefDecl 0x1f3fe876c18 <line:16:1, line:23:3> col:3 referenced ssl_test_result_t 'enum ssl_test_result_t':'ssl_test_result_t'
| `-ElaboratedType 0x1f3fe876bc0 'enum ssl_test_result_t' sugar
|   `-EnumType 0x1f3fe8769a0 'ssl_test_result_t'
|     `-Enum 0x1f3fe8768e0 ''
|-EnumDecl 0x1f3fe876c88 <line:25:9, line:29:1> line:25:9
| |-EnumConstantDecl 0x1f3fe876da0 <line:26:5, col:28> col:5 SSL_TEST_VERIFY_NONE 'int'
| | `-ConstantExpr 0x1f3fe876d88 <col:28> 'int'
| |   `-IntegerLiteral 0x1f3fe876d60 <col:28> 'int' 0
| |-EnumConstantDecl 0x1f3fe876df8 <line:27:5> col:5 referenced SSL_TEST_VERIFY_ACCEPT_ALL 'int'
| `-EnumConstantDecl 0x1f3fe876e50 <line:28:5> col:5 referenced SSL_TEST_VERIFY_REJECT_ALL 'int'
|-TypedefDecl 0x1f3fe876f08 <line:25:1, line:29:3> col:3 referenced ssl_verify_callback_t 'enum ssl_verify_callback_t':'ssl_verify_callback_t'
| `-ElaboratedType 0x1f3fe876eb0 'enum ssl_verify_callback_t' sugar
|   `-EnumType 0x1f3fe876d40 'ssl_verify_callback_t'
|     `-Enum 0x1f3fe876c88 ''
|-EnumDecl 0x1f3fe876f78 <line:31:9, line:36:1> line:31:9
| |-EnumConstantDecl 0x1f3fe877090 <line:32:5, col:32> col:5 referenced SSL_TEST_SERVERNAME_NONE 'int'
| | `-ConstantExpr 0x1f3fe877078 <col:32> 'int'
| |   `-IntegerLiteral 0x1f3fe877050 <col:32> 'int' 0
| |-EnumConstantDecl 0x1f3fe87c150 <line:33:5> col:5 referenced SSL_TEST_SERVERNAME_SERVER1 'int'
| |-EnumConstantDecl 0x1f3fe87c1a8 <line:34:5> col:5 referenced SSL_TEST_SERVERNAME_SERVER2 'int'
| `-EnumConstantDecl 0x1f3fe87c200 <line:35:5> col:5 SSL_TEST_SERVERNAME_INVALID 'int'
|-TypedefDecl 0x1f3fe87c2b8 <line:31:1, line:36:3> col:3 referenced ssl_servername_t 'enum ssl_servername_t':'ssl_servername_t'
| `-ElaboratedType 0x1f3fe87c260 'enum ssl_servername_t' sugar
|   `-EnumType 0x1f3fe877030 'ssl_servername_t'
|     `-Enum 0x1f3fe876f78 ''
|-EnumDecl 0x1f3fe87c328 <line:38:9, line:42:1> line:38:9
| |-EnumConstantDecl 0x1f3fe87c440 <line:39:5, col:35> col:5 SSL_TEST_SERVERNAME_CB_NONE 'int'
| | `-ConstantExpr 0x1f3fe87c428 <col:35> 'int'
| |   `-IntegerLiteral 0x1f3fe87c400 <col:35> 'int' 0
| |-EnumConstantDecl 0x1f3fe87c498 <line:40:5> col:5 referenced SSL_TEST_SERVERNAME_IGNORE_MISMATCH 'int'
| `-EnumConstantDecl 0x1f3fe87c4f0 <line:41:5> col:5 referenced SSL_TEST_SERVERNAME_REJECT_MISMATCH 'int'
|-TypedefDecl 0x1f3fe87c5a8 <line:38:1, line:42:3> col:3 referenced ssl_servername_callback_t 'enum ssl_servername_callback_t':'ssl_servername_callback_t'
| `-ElaboratedType 0x1f3fe87c550 'enum ssl_servername_callback_t' sugar
|   `-EnumType 0x1f3fe87c3e0 'ssl_servername_callback_t'
|     `-Enum 0x1f3fe87c328 ''
|-EnumDecl 0x1f3fe87c618 <line:44:9, line:49:1> line:44:9
| |-EnumConstantDecl 0x1f3fe87c730 <line:45:5, col:38> col:5 SSL_TEST_SESSION_TICKET_IGNORE 'int'
| | `-ConstantExpr 0x1f3fe87c718 <col:38> 'int'
| |   `-IntegerLiteral 0x1f3fe87c6f0 <col:38> 'int' 0
| |-EnumConstantDecl 0x1f3fe87c788 <line:46:5> col:5 referenced SSL_TEST_SESSION_TICKET_YES 'int'
| |-EnumConstantDecl 0x1f3fe87c7e0 <line:47:5> col:5 referenced SSL_TEST_SESSION_TICKET_NO 'int'
| `-EnumConstantDecl 0x1f3fe87c838 <line:48:5> col:5 SSL_TEST_SESSION_TICKET_BROKEN 'int'
|-TypedefDecl 0x1f3fe87c8e8 <line:44:1, line:49:3> col:3 referenced ssl_session_ticket_t 'enum ssl_session_ticket_t':'ssl_session_ticket_t'
| `-ElaboratedType 0x1f3fe87c890 'enum ssl_session_ticket_t' sugar
|   `-EnumType 0x1f3fe87c6d0 'ssl_session_ticket_t'
|     `-Enum 0x1f3fe87c618 ''
|-EnumDecl 0x1f3fe87c958 <line:51:9, line:54:1> line:51:9
| |-EnumConstantDecl 0x1f3fe87ca70 <line:52:5, col:27> col:5 SSL_TEST_METHOD_TLS 'int'
| | `-ConstantExpr 0x1f3fe87ca58 <col:27> 'int'
| |   `-IntegerLiteral 0x1f3fe87ca30 <col:27> 'int' 0
| `-EnumConstantDecl 0x1f3fe87cac8 <line:53:5> col:5 SSL_TEST_METHOD_DTLS 'int'
|-TypedefDecl 0x1f3fe87cb78 <line:51:1, line:54:3> col:3 referenced ssl_test_method_t 'enum ssl_test_method_t':'ssl_test_method_t'
| `-ElaboratedType 0x1f3fe87cb20 'enum ssl_test_method_t' sugar
|   `-EnumType 0x1f3fe87ca10 'ssl_test_method_t'
|     `-Enum 0x1f3fe87c958 ''
|-EnumDecl 0x1f3fe87cbe8 <line:56:9, line:61:1> line:56:9
| |-EnumConstantDecl 0x1f3fe87cd00 <line:57:5, col:33> col:5 SSL_TEST_HANDSHAKE_SIMPLE 'int'
| | `-ConstantExpr 0x1f3fe87cce8 <col:33> 'int'
| |   `-IntegerLiteral 0x1f3fe87ccc0 <col:33> 'int' 0
| |-EnumConstantDecl 0x1f3fe87cd58 <line:58:5> col:5 referenced SSL_TEST_HANDSHAKE_RESUME 'int'
| |-EnumConstantDecl 0x1f3fe87cdb0 <line:59:5> col:5 referenced SSL_TEST_HANDSHAKE_RENEG_SERVER 'int'
| `-EnumConstantDecl 0x1f3fe87ce08 <line:60:5> col:5 referenced SSL_TEST_HANDSHAKE_RENEG_CLIENT 'int'
|-TypedefDecl 0x1f3fe87ceb8 <line:56:1, line:61:3> col:3 referenced ssl_handshake_mode_t 'enum ssl_handshake_mode_t':'ssl_handshake_mode_t'
| `-ElaboratedType 0x1f3fe87ce60 'enum ssl_handshake_mode_t' sugar
|   `-EnumType 0x1f3fe87cca0 'ssl_handshake_mode_t'
|     `-Enum 0x1f3fe87cbe8 ''
|-EnumDecl 0x1f3fe87cf28 <line:63:9, line:67:1> line:63:9
| |-EnumConstantDecl 0x1f3fe87d040 <line:64:5, col:35> col:5 referenced SSL_TEST_CT_VALIDATION_NONE 'int'
| | `-ConstantExpr 0x1f3fe87d028 <col:35> 'int'
| |   `-IntegerLiteral 0x1f3fe87d000 <col:35> 'int' 0
| |-EnumConstantDecl 0x1f3fe87d098 <line:65:5> col:5 referenced SSL_TEST_CT_VALIDATION_PERMISSIVE 'int'
| `-EnumConstantDecl 0x1f3fe87d0f0 <line:66:5> col:5 referenced SSL_TEST_CT_VALIDATION_STRICT 'int'
|-TypedefDecl 0x1f3fe877158 <line:63:1, line:67:3> col:3 referenced ssl_ct_validation_t 'enum ssl_ct_validation_t':'ssl_ct_validation_t'
| `-ElaboratedType 0x1f3fe877100 'enum ssl_ct_validation_t' sugar
|   `-EnumType 0x1f3fe87cfe0 'ssl_ct_validation_t'
|     `-Enum 0x1f3fe87cf28 ''
|-EnumDecl 0x1f3fe8771c8 <line:69:9, line:73:1> line:69:9
| |-EnumConstantDecl 0x1f3fe8772e0 <line:70:5, col:33> col:5 referenced SSL_TEST_CERT_STATUS_NONE 'int'
| | `-ConstantExpr 0x1f3fe8772c8 <col:33> 'int'
| |   `-IntegerLiteral 0x1f3fe8772a0 <col:33> 'int' 0
| |-EnumConstantDecl 0x1f3fe877338 <line:71:5> col:5 referenced SSL_TEST_CERT_STATUS_GOOD_RESPONSE 'int'
| `-EnumConstantDecl 0x1f3fe877390 <line:72:5> col:5 SSL_TEST_CERT_STATUS_BAD_RESPONSE 'int'
|-TypedefDecl 0x1f3fe877448 <line:69:1, line:73:3> col:3 referenced ssl_cert_status_t 'enum ssl_cert_status_t':'ssl_cert_status_t'
| `-ElaboratedType 0x1f3fe8773f0 'enum ssl_cert_status_t' sugar
|   `-EnumType 0x1f3fe877280 'ssl_cert_status_t'
|     `-Enum 0x1f3fe8771c8 ''
|-RecordDecl 0x1f3fe8774b8 <line:78:9, line:89:1> line:78:9 struct definition
| |-FieldDecl 0x1f3fe8775a0 <line:80:5, col:27> col:27 referenced verify_callback 'ssl_verify_callback_t':'ssl_verify_callback_t'
| |-FieldDecl 0x1f3fe877630 <line:82:5, col:22> col:22 referenced servername 'ssl_servername_t':'ssl_servername_t'
| |-FieldDecl 0x1f3fe8776a0 <line:84:5, col:11> col:11 referenced npn_protocols 'char *'
| |-FieldDecl 0x1f3fe877710 <line:85:5, col:11> col:11 referenced alpn_protocols 'char *'
| |-FieldDecl 0x1f3fe8777a0 <line:86:5, col:25> col:25 referenced ct_validation 'ssl_ct_validation_t':'ssl_ct_validation_t'
| `-FieldDecl 0x1f3fe877810 <line:88:5, col:11> col:11 referenced reneg_ciphers 'char *'
|-TypedefDecl 0x1f3fe8778c8 <line:78:1, line:89:3> col:3 referenced SSL_TEST_CLIENT_CONF 'struct SSL_TEST_CLIENT_CONF':'SSL_TEST_CLIENT_CONF'
| `-ElaboratedType 0x1f3fe877870 'struct SSL_TEST_CLIENT_CONF' sugar
|   `-RecordType 0x1f3fe877550 'SSL_TEST_CLIENT_CONF'
|     `-Record 0x1f3fe8774b8 ''
|-RecordDecl 0x1f3fe877938 <line:91:9, line:101:1> line:91:9 struct definition
| |-FieldDecl 0x1f3fe877a20 <line:93:5, col:31> col:31 referenced servername_callback 'ssl_servername_callback_t':'ssl_servername_callback_t'
| |-FieldDecl 0x1f3fe877a90 <line:95:5, col:11> col:11 referenced npn_protocols 'char *'
| |-FieldDecl 0x1f3fe877b00 <line:96:5, col:11> col:11 referenced alpn_protocols 'char *'
| |-FieldDecl 0x1f3fe877b70 <line:98:5, col:9> col:9 referenced broken_session_ticket 'int'
| `-FieldDecl 0x1f3fe877c00 <line:100:5, col:23> col:23 referenced cert_status 'ssl_cert_status_t':'ssl_cert_status_t'
|-TypedefDecl 0x1f3fe877cb8 <line:91:1, line:101:3> col:3 referenced SSL_TEST_SERVER_CONF 'struct SSL_TEST_SERVER_CONF':'SSL_TEST_SERVER_CONF'
| `-ElaboratedType 0x1f3fe877c60 'struct SSL_TEST_SERVER_CONF' sugar
|   `-RecordType 0x1f3fe8779d0 'SSL_TEST_SERVER_CONF'
|     `-Record 0x1f3fe877938 ''
|-RecordDecl 0x1f3fe877d28 <line:103:9, line:107:1> line:103:9 struct definition
| |-FieldDecl 0x1f3fe877e10 <line:104:5, col:26> col:26 referenced client 'SSL_TEST_CLIENT_CONF':'SSL_TEST_CLIENT_CONF'
| |-FieldDecl 0x1f3fe877ea0 <line:105:5, col:26> col:26 referenced server 'SSL_TEST_SERVER_CONF':'SSL_TEST_SERVER_CONF'
| `-FieldDecl 0x1f3fe877f08 <line:106:5, col:26> col:26 referenced server2 'SSL_TEST_SERVER_CONF':'SSL_TEST_SERVER_CONF'
|-TypedefDecl 0x1f3fe878038 <line:103:1, line:107:3> col:3 referenced SSL_TEST_EXTRA_CONF 'struct SSL_TEST_EXTRA_CONF':'SSL_TEST_EXTRA_CONF'
| `-ElaboratedType 0x1f3fe877fe0 'struct SSL_TEST_EXTRA_CONF' sugar
|   `-RecordType 0x1f3fe877dc0 'SSL_TEST_EXTRA_CONF'
|     `-Record 0x1f3fe877d28 ''
|-RecordDecl 0x1f3fe87f180 <line:109:9, line:166:1> line:109:9 struct definition
| |-FieldDecl 0x1f3fe87f270 <line:114:5, col:23> col:23 method 'ssl_test_method_t':'ssl_test_method_t'
| |-FieldDecl 0x1f3fe87f300 <line:116:5, col:26> col:26 referenced handshake_mode 'ssl_handshake_mode_t':'ssl_handshake_mode_t'
| |-FieldDecl 0x1f3fe87f370 <line:121:5, col:9> col:9 referenced app_data_size 'int'
| |-FieldDecl 0x1f3fe87f3e0 <line:123:5, col:9> col:9 referenced max_fragment_size 'int'
| |-FieldDecl 0x1f3fe87f470 <line:129:5, col:25> col:25 referenced extra 'SSL_TEST_EXTRA_CONF':'SSL_TEST_EXTRA_CONF'
| |-FieldDecl 0x1f3fe87f4d8 <line:131:5, col:25> col:25 referenced resume_extra 'SSL_TEST_EXTRA_CONF':'SSL_TEST_EXTRA_CONF'
| |-FieldDecl 0x1f3fe87f560 <line:137:5, col:23> col:23 expected_result 'ssl_test_result_t':'ssl_test_result_t'
| |-FieldDecl 0x1f3fe87f5d0 <line:141:5, col:9> col:9 expected_client_alert 'int'
| |-FieldDecl 0x1f3fe87f640 <line:143:5, col:9> col:9 expected_server_alert 'int'
| |-FieldDecl 0x1f3fe87f6b0 <line:146:5, col:9> col:9 expected_protocol 'int'
| |-FieldDecl 0x1f3fe87f718 <line:157:5, col:22> col:22 expected_servername 'ssl_servername_t':'ssl_servername_t'
| |-FieldDecl 0x1f3fe87f7a0 <line:158:5, col:26> col:26 session_ticket_expected 'ssl_session_ticket_t':'ssl_session_ticket_t'
| |-FieldDecl 0x1f3fe87f810 <line:160:5, col:11> col:11 expected_npn_protocol 'char *'
| |-FieldDecl 0x1f3fe87f880 <line:161:5, col:11> col:11 expected_alpn_protocol 'char *'
| |-FieldDecl 0x1f3fe87f8f0 <line:163:5, col:9> col:9 resumption_expected 'int'
| `-FieldDecl 0x1f3fe87f960 <line:165:5, col:9> col:9 expected_tmp_key_type 'int'
|-TypedefDecl 0x1f3fe87fa18 <line:109:1, line:166:3> col:3 referenced SSL_TEST_CTX 'struct SSL_TEST_CTX':'SSL_TEST_CTX'
| `-ElaboratedType 0x1f3fe87f9c0 'struct SSL_TEST_CTX' sugar
|   `-RecordType 0x1f3fe87f220 'SSL_TEST_CTX'
|     `-Record 0x1f3fe87f180 ''
|-FunctionDecl 0x1f3fe87fbb0 <line:168:1, col:58> col:13 ssl_test_result_name 'const char *(ssl_test_result_t)'
| `-ParmVarDecl 0x1f3fe87fa98 <col:34, col:52> col:52 result 'ssl_test_result_t':'ssl_test_result_t'
|-FunctionDecl 0x1f3fe87fd70 <line:169:1, col:37> col:13 ssl_alert_name 'const char *(int)'
| `-ParmVarDecl 0x1f3fe87fc88 <col:28, col:32> col:32 alert 'int'
|-FunctionDecl 0x1f3fe87fef8 <line:170:1, col:43> col:13 ssl_protocol_name 'const char *(int)'
| `-ParmVarDecl 0x1f3fe87fe48 <col:31, col:35> col:35 protocol 'int'
|-FunctionDecl 0x1f3fe8800e0 <line:171:1, col:75> col:13 ssl_verify_callback_name 'const char *(ssl_verify_callback_t)'
| `-ParmVarDecl 0x1f3fe87ffc8 <col:38, col:60> col:60 verify_callback 'ssl_verify_callback_t':'ssl_verify_callback_t'
|-FunctionDecl 0x1f3fe87d2a0 <line:172:1, col:56> col:13 used ssl_servername_name 'const char *(ssl_servername_t)'
| `-ParmVarDecl 0x1f3fe87d190 <col:33, col:50> col:50 server 'ssl_servername_t':'ssl_servername_t'
|-FunctionDecl 0x1f3fe87d480 <line:173:1, line:174:61> line:173:13 ssl_servername_callback_name 'const char *(ssl_servername_callback_t)'
| `-ParmVarDecl 0x1f3fe87d370 <col:42, line:174:42> col:42 servername_callback 'ssl_servername_callback_t':'ssl_servername_callback_t'
|-FunctionDecl 0x1f3fe87d660 <line:175:1, col:64> col:13 ssl_session_ticket_name 'const char *(ssl_session_ticket_t)'
| `-ParmVarDecl 0x1f3fe87d550 <col:37, col:58> col:58 server 'ssl_session_ticket_t':'ssl_session_ticket_t'
|-FunctionDecl 0x1f3fe87d840 <line:176:1, col:58> col:13 ssl_test_method_name 'const char *(ssl_test_method_t)'
| `-ParmVarDecl 0x1f3fe87d730 <col:34, col:52> col:52 method 'ssl_test_method_t':'ssl_test_method_t'
|-FunctionDecl 0x1f3fe87da20 <line:177:1, col:62> col:13 ssl_handshake_mode_name 'const char *(ssl_handshake_mode_t)'
| `-ParmVarDecl 0x1f3fe87d910 <col:37, col:58> col:58 mode 'ssl_handshake_mode_t':'ssl_handshake_mode_t'
|-FunctionDecl 0x1f3fe87dc00 <line:178:1, col:60> col:13 ssl_ct_validation_name 'const char *(ssl_ct_validation_t)'
| `-ParmVarDecl 0x1f3fe87daf0 <col:36, col:56> col:56 mode 'ssl_ct_validation_t':'ssl_ct_validation_t'
|-FunctionDecl 0x1f3fe87dde0 <line:179:1, col:62> col:13 ssl_certstatus_name 'const char *(ssl_cert_status_t)'
| `-ParmVarDecl 0x1f3fe87dcd0 <col:33, col:51> col:51 cert_status 'ssl_cert_status_t':'ssl_cert_status_t'
|-FunctionDecl 0x1f3fe87e170 <line:185:1, col:77> col:15 invalid SSL_TEST_CTX_create 'SSL_TEST_CTX *(const int *, const char *)'
| |-ParmVarDecl 0x1f3fe87ded8 <col:35, col:47> col:47 invalid conf 'const int *'
| `-ParmVarDecl 0x1f3fe87df58 <col:53, col:65> col:65 test_section 'const char *'
|-FunctionDecl 0x1f3fe87e318 <line:187:1, col:36> col:15 SSL_TEST_CTX_new 'SSL_TEST_CTX *(void)'
|-FunctionDecl 0x1f3fe87e4e8 <line:189:1, col:41> col:6 SSL_TEST_CTX_free 'void (SSL_TEST_CTX *)'
| `-ParmVarDecl 0x1f3fe87e3e0 <col:24, col:38> col:38 ctx 'SSL_TEST_CTX *'
|-RecordDecl 0x1f3fe87e5a8 <.//openssl//file_jk/before\test/handshake_helper.h:15:9, line:48:1> line:15:16 struct handshake_result definition
| |-FieldDecl 0x1f3fe87e670 <line:16:5, col:23> col:23 referenced result 'ssl_test_result_t':'ssl_test_result_t'
| |-FieldDecl 0x1f3fe87e6e0 <line:19:5, col:9> col:9 referenced client_alert_sent 'int'
| |-FieldDecl 0x1f3fe87e750 <line:21:5, col:9> col:9 referenced client_num_fatal_alerts_sent 'int'
| |-FieldDecl 0x1f3fe87e7c0 <line:23:5, col:9> col:9 referenced client_alert_received 'int'
| |-FieldDecl 0x1f3fe87e830 <line:25:5, col:9> col:9 referenced server_alert_sent 'int'
| |-FieldDecl 0x1f3fe87e8a0 <line:27:5, col:9> col:9 referenced server_num_fatal_alerts_sent 'int'
| |-FieldDecl 0x1f3fe87e910 <line:29:5, col:9> col:9 referenced server_alert_received 'int'
| |-FieldDecl 0x1f3fe87e980 <line:31:5, col:9> col:9 referenced server_protocol 'int'
| |-FieldDecl 0x1f3fe87e9f0 <line:32:5, col:9> col:9 referenced client_protocol 'int'
| |-FieldDecl 0x1f3fe87ea58 <line:34:5, col:22> col:22 referenced servername 'ssl_servername_t':'ssl_servername_t'
| |-FieldDecl 0x1f3fe87eac0 <line:36:5, col:26> col:26 referenced session_ticket 'ssl_session_ticket_t':'ssl_session_ticket_t'
| |-FieldDecl 0x1f3fe87eb30 <line:38:5, col:9> col:9 referenced session_ticket_do_not_call 'int'
| |-FieldDecl 0x1f3fe87eba0 <line:39:5, col:11> col:11 referenced client_npn_negotiated 'char *'
| |-FieldDecl 0x1f3fe87ec10 <line:40:5, col:11> col:11 referenced server_npn_negotiated 'char *'
| |-FieldDecl 0x1f3fe87ec80 <line:41:5, col:11> col:11 referenced client_alpn_negotiated 'char *'
| |-FieldDecl 0x1f3fe87ecf0 <line:42:5, col:11> col:11 referenced server_alpn_negotiated 'char *'
| |-FieldDecl 0x1f3fe87ed60 <line:44:5, col:9> col:9 referenced client_resumed 'int'
| |-FieldDecl 0x1f3fe87edd0 <line:45:5, col:9> col:9 referenced server_resumed 'int'
| `-FieldDecl 0x1f3fe87ee40 <line:47:5, col:9> col:9 referenced tmp_key_type 'int'
|-TypedefDecl 0x1f3fe87eef8 <line:15:1, line:48:3> col:3 referenced HANDSHAKE_RESULT 'struct handshake_result':'struct handshake_result'
| `-ElaboratedType 0x1f3fe87eea0 'struct handshake_result' sugar
|   `-RecordType 0x1f3fe87e640 'struct handshake_result'
|     `-Record 0x1f3fe87e5a8 'handshake_result'
|-FunctionDecl 0x1f3fe82af00 <line:50:1, col:44> col:19 used HANDSHAKE_RESULT_new 'HANDSHAKE_RESULT *(void)'
|-FunctionDecl 0x1f3fe82b0d8 <line:51:1, col:52> col:6 used HANDSHAKE_RESULT_free 'void (HANDSHAKE_RESULT *)'
| `-ParmVarDecl 0x1f3fe82afc8 <col:28, col:46> col:46 result 'HANDSHAKE_RESULT *'
|-FunctionDecl 0x1f3fe82b5f8 <line:54:1, line:57:60> line:54:19 invalid do_handshake 'HANDSHAKE_RESULT *(int *, int *, int *, int *, int *, const SSL_TEST_CTX *)'
| |-ParmVarDecl 0x1f3fe82b1b0 <col:32, col:41> col:41 invalid server_ctx 'int *'
| |-ParmVarDecl 0x1f3fe82b230 <col:53, col:62> col:62 invalid server2_ctx 'int *'
| |-ParmVarDecl 0x1f3fe82b2b0 <line:55:32, col:41> col:41 invalid client_ctx 'int *'
| |-ParmVarDecl 0x1f3fe82b330 <col:53, col:62> col:62 invalid resume_server_ctx 'int *'
| |-ParmVarDecl 0x1f3fe82b3b0 <line:56:32, col:41> col:41 invalid resume_client_ctx 'int *'
| `-ParmVarDecl 0x1f3fe82b488 <line:57:32, col:52> col:52 test_ctx 'const SSL_TEST_CTX *'
|-FunctionDecl 0x1f3fe82b988 <.//openssl//file_jk/before\test/testutil.h:85:1, col:60> col:6 add_test 'void (const char *, int (*)())'
| |-ParmVarDecl 0x1f3fe82b6e0 <col:15, col:27> col:27 test_case_name 'const char *'
| `-ParmVarDecl 0x1f3fe82b840 <col:43, col:59> col:49 test_fn 'int (*)()'
|-FunctionDecl 0x1f3fe82be58 <line:86:1, col:80> col:6 add_all_tests 'void (const char *, int (*)(int), int)'
| |-ParmVarDecl 0x1f3fe82ba68 <col:20, col:32> col:32 test_case_name 'const char *'
| |-ParmVarDecl 0x1f3fe82bc68 <col:48, col:70> col:54 test_fn 'int (*)(int)'
| `-ParmVarDecl 0x1f3fe82bce8 <col:73, col:77> col:77 num 'int'
|-FunctionDecl 0x1f3fe826ff0 <line:87:1, col:41> col:5 run_tests 'int (const char *)'
| `-ParmVarDecl 0x1f3fe826f08 <col:15, col:27> col:27 test_prog_name 'const char *'
|-FunctionDecl 0x1f3fe827300 <line:97:1, col:67> col:5 strings_equal 'int (const char *, const char *, const char *)'
| |-ParmVarDecl 0x1f3fe8270c8 <col:19, col:31> col:31 desc 'const char *'
| |-ParmVarDecl 0x1f3fe827148 <col:37, col:49> col:49 s1 'const char *'
| `-ParmVarDecl 0x1f3fe8271c8 <col:53, col:65> col:65 s2 'const char *'
|-FunctionDecl 0x1f3fe827448 prev 0x1f3fe82af00 <.//openssl//file_jk/before\test\handshake_helper.c:19:1, line:24:1> line:19:19 used HANDSHAKE_RESULT_new 'HANDSHAKE_RESULT *(void)'
| `-CompoundStmt 0x1f3fe827c90 <line:20:1, line:24:1>
|   |-DeclStmt 0x1f3fe827758 <line:21:5, col:57>
|   | `-VarDecl 0x1f3fe8274f8 <col:5, col:56> col:23 used ret 'HANDSHAKE_RESULT *' cinit
|   |   `-ImplicitCastExpr 0x1f3fe827740 <col:29, col:56> 'HANDSHAKE_RESULT *' <IntegralToPointer>
|   |     `-CallExpr 0x1f3fe827718 <col:29, col:56> 'int'
|   |       |-ImplicitCastExpr 0x1f3fe827700 <col:29> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x1f3fe827650 <col:29> 'int ()' Function 0x1f3fe827588 'OPENSSL_zalloc' 'int ()'
|   |       `-UnaryExprOrTypeTraitExpr 0x1f3fe8276e0 <col:44, col:55> 'unsigned long long' sizeof
|   |         `-ParenExpr 0x1f3fe8276c0 <col:50, col:55> 'HANDSHAKE_RESULT':'struct handshake_result' lvalue
|   |           `-UnaryOperator 0x1f3fe8276a8 <col:51, col:52> 'HANDSHAKE_RESULT':'struct handshake_result' lvalue prefix '*' cannot overflow
|   |             `-ImplicitCastExpr 0x1f3fe827690 <col:52> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   |               `-DeclRefExpr 0x1f3fe827670 <col:52> 'HANDSHAKE_RESULT *' lvalue Var 0x1f3fe8274f8 'ret' 'HANDSHAKE_RESULT *' non_odr_use_unevaluated
|   |-DoStmt 0x1f3fe827c20 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x1f3fe827be0 <line:106:8, line:111:5>
|   | | `-IfStmt 0x1f3fe827bc8 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x1f3fe8278a0 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x1f3fe827880 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x1f3fe827860 <.//openssl//file_jk/before\test\handshake_helper.c:22:16, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | |   |     |-ImplicitCastExpr 0x1f3fe827830 <.//openssl//file_jk/before\test\handshake_helper.c:22:16> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   | |   |     | `-DeclRefExpr 0x1f3fe827770 <col:16> 'HANDSHAKE_RESULT *' lvalue Var 0x1f3fe8274f8 'ret' 'HANDSHAKE_RESULT *'
|   | |   |     `-ImplicitCastExpr 0x1f3fe827848 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'HANDSHAKE_RESULT *' <BitCast>
|   | |   |       `-ParenExpr 0x1f3fe827810 <col:17, col:27> 'void *'
|   | |   |         `-CStyleCastExpr 0x1f3fe8277e8 <col:18, col:26> 'void *' <NullToPointer>
|   | |   |           `-IntegerLiteral 0x1f3fe8277a8 <col:26> 'int' 0
|   | |   `-CompoundStmt 0x1f3fe827bb0 <.//openssl//file_jk/before\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x1f3fe827b88 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x1f3fe827b70 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x1f3fe827ab8 <col:13> 'int ()' Function 0x1f3fe8279f0 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x1f3fe827b58 <col:28, <scratch space>:294:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x1f3fe827b40 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x1f3fe827b18 <col:1> 'char [12]' lvalue "ret != NULL"
|   | `-IntegerLiteral 0x1f3fe827bf8 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x1f3fe827c40 <.//openssl//file_jk/before\test\handshake_helper.c:22:28>
|   `-ReturnStmt 0x1f3fe827c80 <line:23:5, col:12>
|     `-ImplicitCastExpr 0x1f3fe827c68 <col:12> 'HANDSHAKE_RESULT *' <LValueToRValue>
|       `-DeclRefExpr 0x1f3fe827c48 <col:12> 'HANDSHAKE_RESULT *' lvalue Var 0x1f3fe8274f8 'ret' 'HANDSHAKE_RESULT *'
|-FunctionDecl 0x1f3fe827d78 prev 0x1f3fe82b0d8 <line:26:1, line:35:1> line:26:6 used HANDSHAKE_RESULT_free 'void (HANDSHAKE_RESULT *)'
| |-ParmVarDecl 0x1f3fe827cd0 <col:28, col:46> col:46 used result 'HANDSHAKE_RESULT *'
| `-CompoundStmt 0x1f3fe825440 <line:27:1, line:35:1>
|   |-IfStmt 0x1f3fe824f20 <line:28:5, line:29:9>
|   | |-BinaryOperator 0x1f3fe824ef0 <line:28:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x1f3fe824ec0 <.//openssl//file_jk/before\test\handshake_helper.c:28:9> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1f3fe827e20 <col:9> 'HANDSHAKE_RESULT *' lvalue ParmVar 0x1f3fe827cd0 'result' 'HANDSHAKE_RESULT *'
|   | | `-ImplicitCastExpr 0x1f3fe824ed8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'HANDSHAKE_RESULT *' <BitCast>
|   | |   `-ParenExpr 0x1f3fe824ea0 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1f3fe827e80 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1f3fe827e40 <col:26> 'int' 0
|   | `-ReturnStmt 0x1f3fe824f10 <.//openssl//file_jk/before\test\handshake_helper.c:29:9>
|   |-CallExpr 0x1f3fe8250c8 <line:30:5, col:47> 'int'
|   | |-ImplicitCastExpr 0x1f3fe8250b0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1f3fe825028 <col:5> 'int ()' Function 0x1f3fe824f60 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x1f3fe8250f0 <col:18, col:26> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x1f3fe825080 <col:18, col:26> 'char *' lvalue ->client_npn_negotiated 0x1f3fe87eba0
|   |     `-ImplicitCastExpr 0x1f3fe825068 <col:18> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1f3fe825048 <col:18> 'HANDSHAKE_RESULT *' lvalue ParmVar 0x1f3fe827cd0 'result' 'HANDSHAKE_RESULT *'
|   |-CallExpr 0x1f3fe8251a8 <line:31:5, col:47> 'int'
|   | |-ImplicitCastExpr 0x1f3fe825190 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1f3fe825108 <col:5> 'int ()' Function 0x1f3fe824f60 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x1f3fe8251d0 <col:18, col:26> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x1f3fe825160 <col:18, col:26> 'char *' lvalue ->server_npn_negotiated 0x1f3fe87ec10
|   |     `-ImplicitCastExpr 0x1f3fe825148 <col:18> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1f3fe825128 <col:18> 'HANDSHAKE_RESULT *' lvalue ParmVar 0x1f3fe827cd0 'result' 'HANDSHAKE_RESULT *'
|   |-CallExpr 0x1f3fe825288 <line:32:5, col:48> 'int'
|   | |-ImplicitCastExpr 0x1f3fe825270 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1f3fe8251e8 <col:5> 'int ()' Function 0x1f3fe824f60 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x1f3fe8252b0 <col:18, col:26> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x1f3fe825240 <col:18, col:26> 'char *' lvalue ->client_alpn_negotiated 0x1f3fe87ec80
|   |     `-ImplicitCastExpr 0x1f3fe825228 <col:18> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1f3fe825208 <col:18> 'HANDSHAKE_RESULT *' lvalue ParmVar 0x1f3fe827cd0 'result' 'HANDSHAKE_RESULT *'
|   |-CallExpr 0x1f3fe825368 <line:33:5, col:48> 'int'
|   | |-ImplicitCastExpr 0x1f3fe825350 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1f3fe8252c8 <col:5> 'int ()' Function 0x1f3fe824f60 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x1f3fe825390 <col:18, col:26> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x1f3fe825320 <col:18, col:26> 'char *' lvalue ->server_alpn_negotiated 0x1f3fe87ecf0
|   |     `-ImplicitCastExpr 0x1f3fe825308 <col:18> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1f3fe8252e8 <col:18> 'HANDSHAKE_RESULT *' lvalue ParmVar 0x1f3fe827cd0 'result' 'HANDSHAKE_RESULT *'
|   `-CallExpr 0x1f3fe825400 <line:34:5, col:24> 'int'
|     |-ImplicitCastExpr 0x1f3fe8253e8 <col:5> 'int (*)()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x1f3fe8253a8 <col:5> 'int ()' Function 0x1f3fe824f60 'OPENSSL_free' 'int ()'
|     `-ImplicitCastExpr 0x1f3fe825428 <col:18> 'HANDSHAKE_RESULT *' <LValueToRValue>
|       `-DeclRefExpr 0x1f3fe8253c8 <col:18> 'HANDSHAKE_RESULT *' lvalue ParmVar 0x1f3fe827cd0 'result' 'HANDSHAKE_RESULT *'
|-RecordDecl 0x1f3fe825480 <line:42:9, line:48:1> line:42:16 struct handshake_ex_data_st definition
| |-FieldDecl 0x1f3fe825558 <line:43:5, col:9> col:9 referenced alert_sent 'int'
| |-FieldDecl 0x1f3fe8255c8 <line:44:5, col:9> col:9 referenced num_fatal_alerts_sent 'int'
| |-FieldDecl 0x1f3fe825638 <line:45:5, col:9> col:9 referenced alert_received 'int'
| |-FieldDecl 0x1f3fe8256a8 <line:46:5, col:9> col:9 referenced session_ticket_do_not_call 'int'
| `-FieldDecl 0x1f3fe825710 <line:47:5, col:22> col:22 referenced servername 'ssl_servername_t':'ssl_servername_t'
|-TypedefDecl 0x1f3fe8257c8 <line:42:1, line:48:3> col:3 referenced HANDSHAKE_EX_DATA 'struct handshake_ex_data_st':'struct handshake_ex_data_st'
| `-ElaboratedType 0x1f3fe825770 'struct handshake_ex_data_st' sugar
|   `-RecordType 0x1f3fe825520 'struct handshake_ex_data_st'
|     `-Record 0x1f3fe825480 'handshake_ex_data_st'
|-RecordDecl 0x1f3fe825838 <line:50:9, line:55:1> line:50:16 struct ctx_data_st definition
| |-FieldDecl 0x1f3fe825930 <line:51:5, col:20> col:20 referenced npn_protocols 'unsigned char *'
| |-FieldDecl 0x1f3fe825998 <line:52:5, col:12> col:12 referenced npn_protocols_len 'size_t':'unsigned long long'
| |-FieldDecl 0x1f3fe825a08 <line:53:5, col:20> col:20 referenced alpn_protocols 'unsigned char *'
| `-FieldDecl 0x1f3fe825a70 <line:54:5, col:12> col:12 referenced alpn_protocols_len 'size_t':'unsigned long long'
|-TypedefDecl 0x1f3fe825b28 <line:50:1, line:55:3> col:3 referenced CTX_DATA 'struct ctx_data_st':'struct ctx_data_st'
| `-ElaboratedType 0x1f3fe825ad0 'struct ctx_data_st' sugar
|   `-RecordType 0x1f3fe8258d0 'struct ctx_data_st'
|     `-Record 0x1f3fe825838 'ctx_data_st'
|-FunctionDecl 0x1f3fe825d38 <line:58:1, line:64:1> line:58:13 used ctx_data_free_data 'void (CTX_DATA *)' static
| |-ParmVarDecl 0x1f3fe825c28 <col:32, col:42> col:42 used ctx_data 'CTX_DATA *'
| `-CompoundStmt 0x1f3fe82d290 <line:59:1, line:64:1>
|   |-CallExpr 0x1f3fe82cf20 <line:60:5, col:41> 'int'
|   | |-ImplicitCastExpr 0x1f3fe825e80 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1f3fe825df8 <col:5> 'int ()' Function 0x1f3fe824f60 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x1f3fe82cf48 <col:18, col:28> 'unsigned char *' <LValueToRValue>
|   |   `-MemberExpr 0x1f3fe825e50 <col:18, col:28> 'unsigned char *' lvalue ->npn_protocols 0x1f3fe825930
|   |     `-ImplicitCastExpr 0x1f3fe825e38 <col:18> 'CTX_DATA *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1f3fe825e18 <col:18> 'CTX_DATA *' lvalue ParmVar 0x1f3fe825c28 'ctx_data' 'CTX_DATA *'
|   |-BinaryOperator 0x1f3fe82d068 <line:61:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'unsigned char *' '='
|   | |-MemberExpr 0x1f3fe82cf98 <.//openssl//file_jk/before\test\handshake_helper.c:61:5, col:15> 'unsigned char *' lvalue ->npn_protocols 0x1f3fe825930
|   | | `-ImplicitCastExpr 0x1f3fe82cf80 <col:5> 'CTX_DATA *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1f3fe82cf60 <col:5> 'CTX_DATA *' lvalue ParmVar 0x1f3fe825c28 'ctx_data' 'CTX_DATA *'
|   | `-ImplicitCastExpr 0x1f3fe82d050 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'unsigned char *' <NullToPointer>
|   |   `-ParenExpr 0x1f3fe82d030 <col:17, col:27> 'void *'
|   |     `-CStyleCastExpr 0x1f3fe82d008 <col:18, col:26> 'void *' <NullToPointer>
|   |       `-IntegerLiteral 0x1f3fe82cfc8 <col:26> 'int' 0
|   |-CallExpr 0x1f3fe82d128 <.//openssl//file_jk/before\test\handshake_helper.c:62:5, col:42> 'int'
|   | |-ImplicitCastExpr 0x1f3fe82d110 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1f3fe82d088 <col:5> 'int ()' Function 0x1f3fe824f60 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x1f3fe82d150 <col:18, col:28> 'unsigned char *' <LValueToRValue>
|   |   `-MemberExpr 0x1f3fe82d0e0 <col:18, col:28> 'unsigned char *' lvalue ->alpn_protocols 0x1f3fe825a08
|   |     `-ImplicitCastExpr 0x1f3fe82d0c8 <col:18> 'CTX_DATA *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1f3fe82d0a8 <col:18> 'CTX_DATA *' lvalue ParmVar 0x1f3fe825c28 'ctx_data' 'CTX_DATA *'
|   `-BinaryOperator 0x1f3fe82d270 <line:63:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'unsigned char *' '='
|     |-MemberExpr 0x1f3fe82d1a0 <.//openssl//file_jk/before\test\handshake_helper.c:63:5, col:15> 'unsigned char *' lvalue ->alpn_protocols 0x1f3fe825a08
|     | `-ImplicitCastExpr 0x1f3fe82d188 <col:5> 'CTX_DATA *' <LValueToRValue>
|     |   `-DeclRefExpr 0x1f3fe82d168 <col:5> 'CTX_DATA *' lvalue ParmVar 0x1f3fe825c28 'ctx_data' 'CTX_DATA *'
|     `-ImplicitCastExpr 0x1f3fe82d258 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'unsigned char *' <NullToPointer>
|       `-ParenExpr 0x1f3fe82d238 <col:17, col:27> 'void *'
|         `-CStyleCastExpr 0x1f3fe82d210 <col:18, col:26> 'void *' <NullToPointer>
|           `-IntegerLiteral 0x1f3fe82d1d0 <col:26> 'int' 0
|-VarDecl 0x1f3fe82d2d8 <.//openssl//file_jk/before\test\handshake_helper.c:66:1, col:12> col:12 used ex_data_idx 'int' static
|-FunctionDecl 0x1f3fe82d558 <line:68:1, line:82:1> line:68:13 invalid info_cb 'void (const int *, int, int)' static
| |-ParmVarDecl 0x1f3fe82d370 <col:21, col:32> col:32 invalid s 'const int *'
| |-ParmVarDecl 0x1f3fe82d3f0 <col:35, col:39> col:39 used where 'int'
| |-ParmVarDecl 0x1f3fe82d470 <col:46, col:50> col:50 used ret 'int'
| `-CompoundStmt 0x1f3fe8261b0 <line:69:1, line:82:1>
|   `-IfStmt 0x1f3fe826198 <line:70:5, line:81:5>
|     |-OpaqueValueExpr 0x1f3fe826180 <<invalid sloc>> '_Bool'
|     `-CompoundStmt 0x1f3fe826160 <line:70:31, line:81:5>
|       |-DeclStmt 0x1f3fe82d880 <line:71:9, line:72:66>
|       | `-VarDecl 0x1f3fe82d6e8 <line:71:9, col:28> col:28 used ex_data 'HANDSHAKE_EX_DATA *'
|       `-IfStmt 0x1f3fe826138 <line:73:9, line:80:9> has_else
|         |-OpaqueValueExpr 0x1f3fe826120 <<invalid sloc>> '_Bool'
|         |-CompoundStmt 0x1f3fe826028 <line:73:35, line:78:9>
|         | |-BinaryOperator 0x1f3fe82d988 <line:74:13, col:35> 'int' '='
|         | | |-MemberExpr 0x1f3fe82d908 <col:13, col:22> 'int' lvalue ->alert_sent 0x1f3fe825558
|         | | | `-ImplicitCastExpr 0x1f3fe82d8f0 <col:13> 'HANDSHAKE_EX_DATA *' <LValueToRValue>
|         | | |   `-DeclRefExpr 0x1f3fe82d8b8 <col:13> 'HANDSHAKE_EX_DATA *' lvalue Var 0x1f3fe82d6e8 'ex_data' 'HANDSHAKE_EX_DATA *'
|         | | `-ImplicitCastExpr 0x1f3fe82d970 <col:35> 'int' <LValueToRValue>
|         | |   `-DeclRefExpr 0x1f3fe82d938 <col:35> 'int' lvalue ParmVar 0x1f3fe82d470 'ret' 'int'
|         | `-IfStmt 0x1f3fe826010 <line:75:13, line:77:47>
|         |   |-BinaryOperator 0x1f3fe825f70 <line:75:17, line:76:64> 'int' '||'
|         |   | |-BinaryOperator 0x1f3fe82dca0 <line:75:17, col:60> 'int' '=='
|         |   | | |-CallExpr 0x1f3fe82dc00 <col:17, col:55> 'int'
|         |   | | | |-ImplicitCastExpr 0x1f3fe82dbe8 <col:17> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|         |   | | | | `-DeclRefExpr 0x1f3fe82d9a8 <col:17> 'int (const char *, const char *)' Function 0x1f3fe7ea0c0 'strcmp' 'int (const char *, const char *)'
|         |   | | | |-ImplicitCastExpr 0x1f3fe82dc30 <col:24, col:49> 'const char *' <IntegralToPointer>
|         |   | | | | `-CallExpr 0x1f3fe82db10 <col:24, col:49> 'int'
|         |   | | | |   |-ImplicitCastExpr 0x1f3fe82daf8 <col:24> 'int (*)()' <FunctionToPointerDecay>
|         |   | | | |   | `-DeclRefExpr 0x1f3fe82dab8 <col:24> 'int ()' Function 0x1f3fe82d9f0 'SSL_alert_type_string' 'int ()'
|         |   | | | |   `-ImplicitCastExpr 0x1f3fe82db38 <col:46> 'int' <LValueToRValue>
|         |   | | | |     `-DeclRefExpr 0x1f3fe82dad8 <col:46> 'int' lvalue ParmVar 0x1f3fe82d470 'ret' 'int'
|         |   | | | `-ImplicitCastExpr 0x1f3fe82dc60 <col:52> 'const char *' <NoOp>
|         |   | | |   `-ImplicitCastExpr 0x1f3fe82dc48 <col:52> 'char *' <ArrayToPointerDecay>
|         |   | | |     `-StringLiteral 0x1f3fe82db88 <col:52> 'char [2]' lvalue "F"
|         |   | | `-IntegerLiteral 0x1f3fe82dc78 <col:60> 'int' 0
|         |   | `-BinaryOperator 0x1f3fe825f50 <line:76:20, col:64> 'int' '=='
|         |   |   |-CallExpr 0x1f3fe825eb0 <col:20, col:59> 'int'
|         |   |   | |-ImplicitCastExpr 0x1f3fe82dee0 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|         |   |   | | `-DeclRefExpr 0x1f3fe82dcc0 <col:20> 'int (const char *, const char *)' Function 0x1f3fe7ea0c0 'strcmp' 'int (const char *, const char *)'
|         |   |   | |-ImplicitCastExpr 0x1f3fe825ee0 <col:27, col:52> 'const char *' <IntegralToPointer>
|         |   |   | | `-CallExpr 0x1f3fe82de28 <col:27, col:52> 'int'
|         |   |   | |   |-ImplicitCastExpr 0x1f3fe82de10 <col:27> 'int (*)()' <FunctionToPointerDecay>
|         |   |   | |   | `-DeclRefExpr 0x1f3fe82ddd0 <col:27> 'int ()' Function 0x1f3fe82dd08 'SSL_alert_desc_string' 'int ()'
|         |   |   | |   `-ImplicitCastExpr 0x1f3fe82de50 <col:49> 'int' <LValueToRValue>
|         |   |   | |     `-DeclRefExpr 0x1f3fe82ddf0 <col:49> 'int' lvalue ParmVar 0x1f3fe82d470 'ret' 'int'
|         |   |   | `-ImplicitCastExpr 0x1f3fe825f10 <col:55> 'const char *' <NoOp>
|         |   |   |   `-ImplicitCastExpr 0x1f3fe825ef8 <col:55> 'char *' <ArrayToPointerDecay>
|         |   |   |     `-StringLiteral 0x1f3fe82dea8 <col:55> 'char [3]' lvalue "CN"
|         |   |   `-IntegerLiteral 0x1f3fe825f28 <col:64> 'int' 0
|         |   `-UnaryOperator 0x1f3fe825ff8 <line:77:17, col:47> 'int' postfix '++'
|         |     `-MemberExpr 0x1f3fe825fc8 <col:17, col:26> 'int' lvalue ->num_fatal_alerts_sent 0x1f3fe8255c8
|         |       `-ImplicitCastExpr 0x1f3fe825fb0 <col:17> 'HANDSHAKE_EX_DATA *' <LValueToRValue>
|         |         `-DeclRefExpr 0x1f3fe825f90 <col:17> 'HANDSHAKE_EX_DATA *' lvalue Var 0x1f3fe82d6e8 'ex_data' 'HANDSHAKE_EX_DATA *'
|         `-CompoundStmt 0x1f3fe826108 <line:78:16, line:80:9>
|           `-BinaryOperator 0x1f3fe8260e8 <line:79:13, col:39> 'int' '='
|             |-MemberExpr 0x1f3fe826080 <col:13, col:22> 'int' lvalue ->alert_received 0x1f3fe825638
|             | `-ImplicitCastExpr 0x1f3fe826068 <col:13> 'HANDSHAKE_EX_DATA *' <LValueToRValue>
|             |   `-DeclRefExpr 0x1f3fe826048 <col:13> 'HANDSHAKE_EX_DATA *' lvalue Var 0x1f3fe82d6e8 'ex_data' 'HANDSHAKE_EX_DATA *'
|             `-ImplicitCastExpr 0x1f3fe8260d0 <col:39> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x1f3fe8260b0 <col:39> 'int' lvalue ParmVar 0x1f3fe82d470 'ret' 'int'
|-FunctionDecl 0x1f3fe8263d0 <line:90:1, line:124:1> line:90:12 invalid select_server_ctx 'int (int *, void *, int)' static
| |-ParmVarDecl 0x1f3fe8261e0 <col:30, col:35> col:35 invalid s 'int *'
| |-ParmVarDecl 0x1f3fe826260 <col:38, col:44> col:44 arg 'void *'
| |-ParmVarDecl 0x1f3fe8262e0 <col:49, col:53> col:53 used ignore 'int'
| `-CompoundStmt 0x1f3fe82f4f0 <line:91:1, line:124:1>
|   |-DeclStmt 0x1f3fe826630 <line:92:5, col:78>
|   | `-VarDecl 0x1f3fe8264b8 <col:5, col:17> col:17 used servername 'const char *'
|   |-DeclStmt 0x1f3fe826700 <line:93:5, line:94:62>
|   | `-VarDecl 0x1f3fe826658 <line:93:5, col:24> col:24 used ex_data 'HANDSHAKE_EX_DATA *'
|   |-IfStmt 0x1f3fe826918 <line:96:5, line:99:5>
|   | |-BinaryOperator 0x1f3fe826808 <line:96:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x1f3fe8267d8 <.//openssl//file_jk/before\test\handshake_helper.c:96:9> 'const char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1f3fe826718 <col:9> 'const char *' lvalue Var 0x1f3fe8264b8 'servername' 'const char *'
|   | | `-ImplicitCastExpr 0x1f3fe8267f0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const char *' <BitCast>
|   | |   `-ParenExpr 0x1f3fe8267b8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1f3fe826790 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1f3fe826750 <col:26> 'int' 0
|   | `-CompoundStmt 0x1f3fe826900 <.//openssl//file_jk/before\test\handshake_helper.c:96:29, line:99:5>
|   |   `-BinaryOperator 0x1f3fe8268e0 <line:97:9, col:31> 'ssl_servername_t':'ssl_servername_t' '='
|   |     |-MemberExpr 0x1f3fe826878 <col:9, col:18> 'ssl_servername_t':'ssl_servername_t' lvalue ->servername 0x1f3fe825710
|   |     | `-ImplicitCastExpr 0x1f3fe826860 <col:9> 'HANDSHAKE_EX_DATA *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x1f3fe826828 <col:9> 'HANDSHAKE_EX_DATA *' lvalue Var 0x1f3fe826658 'ex_data' 'HANDSHAKE_EX_DATA *'
|   |     `-ImplicitCastExpr 0x1f3fe8268c8 <col:31> 'ssl_servername_t':'ssl_servername_t' <IntegralCast>
|   |       `-DeclRefExpr 0x1f3fe8268a8 <col:31> 'int' EnumConstant 0x1f3fe87c150 'SSL_TEST_SERVERNAME_SERVER1' 'int'
|   `-IfStmt 0x1f3fe82f4c8 <line:101:5, line:123:5> has_else
|     |-BinaryOperator 0x1f3fe826ab0 <line:101:9, col:42> 'int' '=='
|     | |-CallExpr 0x1f3fe826a10 <col:9, col:37> 'int'
|     | | |-ImplicitCastExpr 0x1f3fe8269f8 <col:9> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|     | | | `-DeclRefExpr 0x1f3fe826930 <col:9> 'int (const char *, const char *)' Function 0x1f3fe7ea0c0 'strcmp' 'int (const char *, const char *)'
|     | | |-ImplicitCastExpr 0x1f3fe826a40 <col:16> 'const char *' <LValueToRValue>
|     | | | `-DeclRefExpr 0x1f3fe826950 <col:16> 'const char *' lvalue Var 0x1f3fe8264b8 'servername' 'const char *'
|     | | `-ImplicitCastExpr 0x1f3fe826a70 <col:28> 'const char *' <NoOp>
|     | |   `-ImplicitCastExpr 0x1f3fe826a58 <col:28> 'char *' <ArrayToPointerDecay>
|     | |     `-StringLiteral 0x1f3fe8269a8 <col:28> 'char [8]' lvalue "server2"
|     | `-IntegerLiteral 0x1f3fe826a88 <col:42> 'int' 0
|     |-CompoundStmt 0x1f3fe82f0e8 <col:45, line:114:5>
|     | `-BinaryOperator 0x1f3fe82f0c8 <line:112:9, col:31> 'ssl_servername_t':'ssl_servername_t' '='
|     |   |-MemberExpr 0x1f3fe82f060 <col:9, col:18> 'ssl_servername_t':'ssl_servername_t' lvalue ->servername 0x1f3fe825710
|     |   | `-ImplicitCastExpr 0x1f3fe82f048 <col:9> 'HANDSHAKE_EX_DATA *' <LValueToRValue>
|     |   |   `-DeclRefExpr 0x1f3fe82f028 <col:9> 'HANDSHAKE_EX_DATA *' lvalue Var 0x1f3fe826658 'ex_data' 'HANDSHAKE_EX_DATA *'
|     |   `-ImplicitCastExpr 0x1f3fe82f0b0 <col:31> 'ssl_servername_t':'ssl_servername_t' <IntegralCast>
|     |     `-DeclRefExpr 0x1f3fe82f090 <col:31> 'int' EnumConstant 0x1f3fe87c1a8 'SSL_TEST_SERVERNAME_SERVER2' 'int'
|     `-IfStmt 0x1f3fe82f4a0 <line:114:12, line:123:5> has_else
|       |-BinaryOperator 0x1f3fe82f248 <line:114:16, col:49> 'int' '=='
|       | |-CallExpr 0x1f3fe82f1a8 <col:16, col:44> 'int'
|       | | |-ImplicitCastExpr 0x1f3fe82f190 <col:16> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x1f3fe82f100 <col:16> 'int (const char *, const char *)' Function 0x1f3fe7ea0c0 'strcmp' 'int (const char *, const char *)'
|       | | |-ImplicitCastExpr 0x1f3fe82f1d8 <col:23> 'const char *' <LValueToRValue>
|       | | | `-DeclRefExpr 0x1f3fe82f120 <col:23> 'const char *' lvalue Var 0x1f3fe8264b8 'servername' 'const char *'
|       | | `-ImplicitCastExpr 0x1f3fe82f208 <col:35> 'const char *' <NoOp>
|       | |   `-ImplicitCastExpr 0x1f3fe82f1f0 <col:35> 'char *' <ArrayToPointerDecay>
|       | |     `-StringLiteral 0x1f3fe82f140 <col:35> 'char [8]' lvalue "server1"
|       | `-IntegerLiteral 0x1f3fe82f220 <col:49> 'int' 0
|       |-CompoundStmt 0x1f3fe82f328 <col:52, line:117:5>
|       | `-BinaryOperator 0x1f3fe82f308 <line:115:9, col:31> 'ssl_servername_t':'ssl_servername_t' '='
|       |   |-MemberExpr 0x1f3fe82f2a0 <col:9, col:18> 'ssl_servername_t':'ssl_servername_t' lvalue ->servername 0x1f3fe825710
|       |   | `-ImplicitCastExpr 0x1f3fe82f288 <col:9> 'HANDSHAKE_EX_DATA *' <LValueToRValue>
|       |   |   `-DeclRefExpr 0x1f3fe82f268 <col:9> 'HANDSHAKE_EX_DATA *' lvalue Var 0x1f3fe826658 'ex_data' 'HANDSHAKE_EX_DATA *'
|       |   `-ImplicitCastExpr 0x1f3fe82f2f0 <col:31> 'ssl_servername_t':'ssl_servername_t' <IntegralCast>
|       |     `-DeclRefExpr 0x1f3fe82f2d0 <col:31> 'int' EnumConstant 0x1f3fe87c150 'SSL_TEST_SERVERNAME_SERVER1' 'int'
|       `-IfStmt 0x1f3fe82f478 <line:117:12, line:123:5> has_else
|         |-ImplicitCastExpr 0x1f3fe82f378 <line:117:16> 'int' <LValueToRValue>
|         | `-DeclRefExpr 0x1f3fe82f340 <col:16> 'int' lvalue ParmVar 0x1f3fe8262e0 'ignore' 'int'
|         |-CompoundStmt 0x1f3fe82f450 <col:24, line:120:5>
|         | `-BinaryOperator 0x1f3fe82f430 <line:118:9, col:31> 'ssl_servername_t':'ssl_servername_t' '='
|         |   |-MemberExpr 0x1f3fe82f3c8 <col:9, col:18> 'ssl_servername_t':'ssl_servername_t' lvalue ->servername 0x1f3fe825710
|         |   | `-ImplicitCastExpr 0x1f3fe82f3b0 <col:9> 'HANDSHAKE_EX_DATA *' <LValueToRValue>
|         |   |   `-DeclRefExpr 0x1f3fe82f390 <col:9> 'HANDSHAKE_EX_DATA *' lvalue Var 0x1f3fe826658 'ex_data' 'HANDSHAKE_EX_DATA *'
|         |   `-ImplicitCastExpr 0x1f3fe82f418 <col:31> 'ssl_servername_t':'ssl_servername_t' <IntegralCast>
|         |     `-DeclRefExpr 0x1f3fe82f3f8 <col:31> 'int' EnumConstant 0x1f3fe87c150 'SSL_TEST_SERVERNAME_SERVER1' 'int'
|         `-CompoundStmt 0x1f3fe82f468 <line:120:12, line:123:5>
|-FunctionDecl 0x1f3fe82f720 <line:137:1, line:140:1> line:137:12 invalid servername_ignore_cb 'int (int *, int *, void *)' static
| |-ParmVarDecl 0x1f3fe82f538 <col:33, col:38> col:38 invalid s 'int *'
| |-ParmVarDecl 0x1f3fe82f5b8 <col:41, col:46> col:46 ad 'int *'
| |-ParmVarDecl 0x1f3fe82f638 <col:50, col:56> col:56 used arg 'void *'
| `-CompoundStmt 0x1f3fe82f850 <line:138:1, line:140:1>
|-FunctionDecl 0x1f3fe82fa38 <line:142:1, line:145:1> line:142:12 invalid servername_reject_cb 'int (int *, int *, void *)' static
| |-ParmVarDecl 0x1f3fe82f890 <col:33, col:38> col:38 invalid s 'int *'
| |-ParmVarDecl 0x1f3fe82f910 <col:41, col:46> col:46 ad 'int *'
| |-ParmVarDecl 0x1f3fe82f990 <col:50, col:56> col:56 used arg 'void *'
| `-CompoundStmt 0x1f3fe82fb68 <line:143:1, line:145:1>
|-VarDecl 0x1f3fe82fba8 <line:147:1, col:49> col:22 used dummy_ocsp_resp_good_val 'unsigned char' static cinit
| `-ImplicitCastExpr 0x1f3fe82fc50 <col:49> 'unsigned char' <IntegralCast>
|   `-IntegerLiteral 0x1f3fe82fc10 <col:49> 'int' 255
|-VarDecl 0x1f3fe82fc80 <line:148:1, col:48> col:22 used dummy_ocsp_resp_bad_val 'unsigned char' static cinit
| `-ImplicitCastExpr 0x1f3fe82fd28 <col:48> 'unsigned char' <IntegralCast>
|   `-IntegerLiteral 0x1f3fe82fce8 <col:48> 'int' 254
|-FunctionDecl 0x1f3fe82df30 <line:150:1, line:165:1> line:150:12 invalid server_ocsp_cb 'int (int *, void *)' static
| |-ParmVarDecl 0x1f3fe82fd58 <col:27, col:32> col:32 invalid s 'int *'
| |-ParmVarDecl 0x1f3fe82fdd8 <col:35, col:41> col:41 used arg 'void *'
| `-CompoundStmt 0x1f3fe82e5f8 <line:151:1, line:165:1>
|   |-DeclStmt 0x1f3fe82e078 <line:152:5, col:24>
|   | `-VarDecl 0x1f3fe82e010 <col:5, col:20> col:20 used resp 'unsigned char *'
|   |-BinaryOperator 0x1f3fe82e258 <line:154:5, col:28> 'unsigned char *' '='
|   | |-DeclRefExpr 0x1f3fe82e090 <col:5> 'unsigned char *' lvalue Var 0x1f3fe82e010 'resp' 'unsigned char *'
|   | `-ImplicitCastExpr 0x1f3fe82e240 <col:12, col:28> 'unsigned char *' <IntegralToPointer>
|   |   `-CallExpr 0x1f3fe82e218 <col:12, col:28> 'int'
|   |     |-ImplicitCastExpr 0x1f3fe82e200 <col:12> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1f3fe82e1b8 <col:12> 'int ()' Function 0x1f3fe82e0f0 'OPENSSL_malloc' 'int ()'
|   |     `-IntegerLiteral 0x1f3fe82e1d8 <col:27> 'int' 1
|   `-BinaryOperator 0x1f3fe82e480 <line:160:5, col:31> 'unsigned char' '='
|     |-UnaryOperator 0x1f3fe82e3a8 <col:5, col:6> 'unsigned char' lvalue prefix '*' cannot overflow
|     | `-ImplicitCastExpr 0x1f3fe82e390 <col:6> 'unsigned char *' <LValueToRValue>
|     |   `-DeclRefExpr 0x1f3fe82e370 <col:6> 'unsigned char *' lvalue Var 0x1f3fe82e010 'resp' 'unsigned char *'
|     `-ImplicitCastExpr 0x1f3fe82e468 <col:13, col:31> 'unsigned char' <LValueToRValue>
|       `-UnaryOperator 0x1f3fe82e450 <col:13, col:31> 'unsigned char' lvalue prefix '*' cannot overflow
|         `-CStyleCastExpr 0x1f3fe82e428 <col:14, col:31> 'unsigned char *' <BitCast>
|           `-ImplicitCastExpr 0x1f3fe82e410 <col:31> 'void *' <LValueToRValue> part_of_explicit_cast
|             `-DeclRefExpr 0x1f3fe82e3c0 <col:31> 'void *' lvalue ParmVar 0x1f3fe82fdd8 'arg' 'void *'
|-FunctionDecl 0x1f3fe82e758 <line:167:1, line:177:1> line:167:12 invalid client_ocsp_cb 'int (int *, void *)' static
| |-ParmVarDecl 0x1f3fe82e638 <col:27, col:32> col:32 invalid s 'int *'
| |-ParmVarDecl 0x1f3fe82e6b8 <col:35, col:41> col:41 arg 'void *'
| `-CompoundStmt 0x1f3fe82ed50 <line:168:1, line:177:1>
|   |-DeclStmt 0x1f3fe82e8a0 <line:169:5, col:30>
|   | `-VarDecl 0x1f3fe82e838 <col:5, col:26> col:26 used resp 'const unsigned char *'
|   |-DeclStmt 0x1f3fe82e938 <line:170:5, col:12>
|   | `-VarDecl 0x1f3fe82e8d0 <col:5, col:9> col:9 used len 'int'
|   |-IfStmt 0x1f3fe82ed00 <line:173:5, line:174:16>
|   | |-BinaryOperator 0x1f3fe82eca8 <line:173:9, col:30> 'int' '||'
|   | | |-BinaryOperator 0x1f3fe82eb70 <col:9, col:16> 'int' '!='
|   | | | |-ImplicitCastExpr 0x1f3fe82eb58 <col:9> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1f3fe82eb10 <col:9> 'int' lvalue Var 0x1f3fe82e8d0 'len' 'int'
|   | | | `-IntegerLiteral 0x1f3fe82eb30 <col:16> 'int' 1
|   | | `-BinaryOperator 0x1f3fe82ec88 <col:21, col:30> 'int' '!='
|   | |   |-ImplicitCastExpr 0x1f3fe82ec58 <col:21, col:22> 'int' <IntegralCast>
|   | |   | `-ImplicitCastExpr 0x1f3fe82ec28 <col:21, col:22> 'unsigned char' <LValueToRValue>
|   | |   |   `-UnaryOperator 0x1f3fe82ebf0 <col:21, col:22> 'const unsigned char' lvalue prefix '*' cannot overflow
|   | |   |     `-ImplicitCastExpr 0x1f3fe82ebd8 <col:22> 'const unsigned char *' <LValueToRValue>
|   | |   |       `-DeclRefExpr 0x1f3fe82ebb8 <col:22> 'const unsigned char *' lvalue Var 0x1f3fe82e838 'resp' 'const unsigned char *'
|   | |   `-ImplicitCastExpr 0x1f3fe82ec70 <col:30> 'int' <IntegralCast>
|   | |     `-ImplicitCastExpr 0x1f3fe82ec40 <col:30> 'unsigned char' <LValueToRValue>
|   | |       `-DeclRefExpr 0x1f3fe82ec08 <col:30> 'unsigned char' lvalue Var 0x1f3fe82fba8 'dummy_ocsp_resp_good_val' 'unsigned char'
|   | `-ReturnStmt 0x1f3fe82ecf0 <line:174:9, col:16>
|   |   `-IntegerLiteral 0x1f3fe82ecc8 <col:16> 'int' 0
|   `-ReturnStmt 0x1f3fe82ed40 <line:176:5, col:12>
|     `-IntegerLiteral 0x1f3fe82ed18 <col:12> 'int' 1
|-FunctionDecl 0x1f3fe827ed0 <line:179:1, line:182:1> line:179:12 invalid verify_reject_cb 'int (int *, void *)' static
| |-ParmVarDecl 0x1f3fe82edb0 <col:29, col:45> col:45 invalid ctx 'int *'
| |-ParmVarDecl 0x1f3fe82ee30 <col:50, col:56> col:56 arg 'void *'
| `-CompoundStmt 0x1f3fe8280e0 <col:61, line:182:1>
|   `-ReturnStmt 0x1f3fe8280d0 <line:181:5, col:12>
|     `-IntegerLiteral 0x1f3fe8280a8 <col:12> 'int' 0
|-FunctionDecl 0x1f3fe828230 <line:184:1, line:186:1> line:184:12 invalid verify_accept_cb 'int (int *, void *)' static
| |-ParmVarDecl 0x1f3fe828110 <col:29, col:45> col:45 invalid ctx 'int *'
| |-ParmVarDecl 0x1f3fe828190 <col:50, col:56> col:56 arg 'void *'
| `-CompoundStmt 0x1f3fe828330 <col:61, line:186:1>
|   `-ReturnStmt 0x1f3fe828320 <line:185:5, col:12>
|     `-IntegerLiteral 0x1f3fe8282f8 <col:12> 'int' 1
|-FunctionDecl 0x1f3fe828710 <line:188:1, line:192:1> line:188:12 invalid broken_session_ticket_cb 'int (int *, unsigned char *, unsigned char *, int *, int *, int)' static
| |-ParmVarDecl 0x1f3fe828378 <col:37, col:42> col:42 invalid s 'int *'
| |-ParmVarDecl 0x1f3fe8283f8 <col:45, col:60> col:60 key_name 'unsigned char *'
| |-ParmVarDecl 0x1f3fe828478 <col:70, col:85> col:85 iv 'unsigned char *'
| |-ParmVarDecl 0x1f3fe8284f8 <line:189:37, col:53> col:53 invalid ctx 'int *'
| |-ParmVarDecl 0x1f3fe828578 <col:58, col:68> col:68 invalid hctx 'int *'
| |-ParmVarDecl 0x1f3fe8285f8 <col:74, col:78> col:78 enc 'int'
| `-CompoundStmt 0x1f3fe828830 <line:190:1, line:192:1>
|   `-ReturnStmt 0x1f3fe828820 <line:191:5, col:12>
|     `-IntegerLiteral 0x1f3fe8287f8 <col:12> 'int' 0
|-FunctionDecl 0x1f3fe828be8 <line:194:1, line:203:1> line:194:12 invalid do_not_call_session_ticket_cb 'int (int *, unsigned char *, unsigned char *, int *, int *, int)' static
| |-ParmVarDecl 0x1f3fe8288a8 <col:42, col:47> col:47 invalid s 'int *'
| |-ParmVarDecl 0x1f3fe828928 <col:50, col:65> col:65 key_name 'unsigned char *'
| |-ParmVarDecl 0x1f3fe8289a8 <line:195:42, col:57> col:57 iv 'unsigned char *'
| |-ParmVarDecl 0x1f3fe828a28 <line:196:42, col:58> col:58 invalid ctx 'int *'
| |-ParmVarDecl 0x1f3fe828aa8 <line:197:42, col:52> col:52 invalid hctx 'int *'
| |-ParmVarDecl 0x1f3fe828b28 <col:58, col:62> col:62 enc 'int'
| `-CompoundStmt 0x1f3fe828ea0 <line:198:1, line:203:1>
|   |-DeclStmt 0x1f3fe828d88 <line:199:5, line:200:62>
|   | `-VarDecl 0x1f3fe828ce0 <line:199:5, col:24> col:24 used ex_data 'HANDSHAKE_EX_DATA *'
|   |-BinaryOperator 0x1f3fe828e48 <line:201:5, col:43> 'int' '='
|   | |-MemberExpr 0x1f3fe828df0 <col:5, col:14> 'int' lvalue ->session_ticket_do_not_call 0x1f3fe8256a8
|   | | `-ImplicitCastExpr 0x1f3fe828dd8 <col:5> 'HANDSHAKE_EX_DATA *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1f3fe828da0 <col:5> 'HANDSHAKE_EX_DATA *' lvalue Var 0x1f3fe828ce0 'ex_data' 'HANDSHAKE_EX_DATA *'
|   | `-IntegerLiteral 0x1f3fe828e20 <col:43> 'int' 1
|   `-ReturnStmt 0x1f3fe828e90 <line:202:5, col:12>
|     `-IntegerLiteral 0x1f3fe828e68 <col:12> 'int' 0
|-FunctionDecl 0x1f3fe829238 <line:206:1, line:238:1> line:206:13 used parse_protos 'void (const char *, unsigned char **, size_t *)' static
| |-ParmVarDecl 0x1f3fe828f40 <col:26, col:38> col:38 used protos 'const char *'
| |-ParmVarDecl 0x1f3fe828ff8 <col:46, col:62> col:62 used out 'unsigned char **'
| |-ParmVarDecl 0x1f3fe8290c8 <col:67, col:75> col:75 used outlen 'size_t *'
| `-CompoundStmt 0x1f3fe82ff50 <line:207:1, line:238:1>
|   |-DeclStmt 0x1f3fe829490 <line:208:5, col:26>
|   | |-VarDecl 0x1f3fe829318 <col:5, col:12> col:12 used len 'size_t':'unsigned long long'
|   | |-VarDecl 0x1f3fe829390 <col:5, col:17> col:17 used i 'size_t':'unsigned long long'
|   | `-VarDecl 0x1f3fe829408 <col:5, col:20> col:20 used prefix 'size_t':'unsigned long long'
|   |-BinaryOperator 0x1f3fe8295c0 <line:210:5, col:24> 'size_t':'unsigned long long' '='
|   | |-DeclRefExpr 0x1f3fe8294a8 <col:5> 'size_t':'unsigned long long' lvalue Var 0x1f3fe829318 'len' 'size_t':'unsigned long long'
|   | `-CallExpr 0x1f3fe829580 <col:11, col:24> 'unsigned long long'
|   |   |-ImplicitCastExpr 0x1f3fe829568 <col:11> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1f3fe8294e0 <col:11> 'unsigned long long (const char *)' Function 0x1f3fe7ea420 'strlen' 'unsigned long long (const char *)'
|   |   `-ImplicitCastExpr 0x1f3fe8295a8 <col:18> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1f3fe829500 <col:18> 'const char *' lvalue ParmVar 0x1f3fe828f40 'protos' 'const char *'
|   |-DoStmt 0x1f3fe8298c0 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x1f3fe829880 <line:106:8, line:111:5>
|   | | `-IfStmt 0x1f3fe829868 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x1f3fe829728 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x1f3fe829708 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x1f3fe8296e8 <.//openssl//file_jk/before\test\handshake_helper.c:213:16, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | |   |     |-ImplicitCastExpr 0x1f3fe8296b8 <.//openssl//file_jk/before\test\handshake_helper.c:213:16, col:17> 'unsigned char *' <LValueToRValue>
|   | |   |     | `-UnaryOperator 0x1f3fe829618 <col:16, col:17> 'unsigned char *' lvalue prefix '*' cannot overflow
|   | |   |     |   `-ImplicitCastExpr 0x1f3fe829600 <col:17> 'unsigned char **' <LValueToRValue>
|   | |   |     |     `-DeclRefExpr 0x1f3fe8295e0 <col:17> 'unsigned char **' lvalue ParmVar 0x1f3fe828ff8 'out' 'unsigned char **'
|   | |   |     `-ImplicitCastExpr 0x1f3fe8296d0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'unsigned char *' <BitCast>
|   | |   |       `-ParenExpr 0x1f3fe829698 <col:17, col:27> 'void *'
|   | |   |         `-CStyleCastExpr 0x1f3fe829670 <col:18, col:26> 'void *' <NullToPointer>
|   | |   |           `-IntegerLiteral 0x1f3fe829630 <col:26> 'int' 0
|   | |   `-CompoundStmt 0x1f3fe829850 <.//openssl//file_jk/before\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x1f3fe829828 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x1f3fe829810 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x1f3fe829760 <col:13> 'int ()' Function 0x1f3fe8279f0 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x1f3fe8297f8 <col:28, <scratch space>:295:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x1f3fe8297e0 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x1f3fe8297b8 <col:1> 'char [13]' lvalue "*out == NULL"
|   | `-IntegerLiteral 0x1f3fe829898 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x1f3fe8298e0 <.//openssl//file_jk/before\test\handshake_helper.c:213:29>
|   |-BinaryOperator 0x1f3fe829a48 <line:216:5, col:34> 'unsigned char *' '='
|   | |-UnaryOperator 0x1f3fe829920 <col:5, col:6> 'unsigned char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x1f3fe829908 <col:6> 'unsigned char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1f3fe8298e8 <col:6> 'unsigned char **' lvalue ParmVar 0x1f3fe828ff8 'out' 'unsigned char **'
|   | `-ImplicitCastExpr 0x1f3fe829a30 <col:12, col:34> 'unsigned char *' <IntegralToPointer>
|   |   `-CallExpr 0x1f3fe829a08 <col:12, col:34> 'int'
|   |     |-ImplicitCastExpr 0x1f3fe8299f0 <col:12> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1f3fe829938 <col:12> 'int ()' Function 0x1f3fe82e0f0 'OPENSSL_malloc' 'int ()'
|   |     `-BinaryOperator 0x1f3fe8299d0 <col:27, col:33> 'unsigned long long' '+'
|   |       |-ImplicitCastExpr 0x1f3fe8299a0 <col:27> 'size_t':'unsigned long long' <LValueToRValue>
|   |       | `-DeclRefExpr 0x1f3fe829958 <col:27> 'size_t':'unsigned long long' lvalue Var 0x1f3fe829318 'len' 'size_t':'unsigned long long'
|   |       `-ImplicitCastExpr 0x1f3fe8299b8 <col:33> 'unsigned long long' <IntegralCast>
|   |         `-IntegerLiteral 0x1f3fe829978 <col:33> 'int' 1
|   |-DoStmt 0x1f3fe829d10 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x1f3fe829cd0 <line:106:8, line:111:5>
|   | | `-IfStmt 0x1f3fe829cb8 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x1f3fe829bb0 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x1f3fe829b90 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x1f3fe829b70 <.//openssl//file_jk/before\test\handshake_helper.c:217:16, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | |   |     |-ImplicitCastExpr 0x1f3fe829b40 <.//openssl//file_jk/before\test\handshake_helper.c:217:16, col:17> 'unsigned char *' <LValueToRValue>
|   | |   |     | `-UnaryOperator 0x1f3fe829aa0 <col:16, col:17> 'unsigned char *' lvalue prefix '*' cannot overflow
|   | |   |     |   `-ImplicitCastExpr 0x1f3fe829a88 <col:17> 'unsigned char **' <LValueToRValue>
|   | |   |     |     `-DeclRefExpr 0x1f3fe829a68 <col:17> 'unsigned char **' lvalue ParmVar 0x1f3fe828ff8 'out' 'unsigned char **'
|   | |   |     `-ImplicitCastExpr 0x1f3fe829b58 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'unsigned char *' <BitCast>
|   | |   |       `-ParenExpr 0x1f3fe829b20 <col:17, col:27> 'void *'
|   | |   |         `-CStyleCastExpr 0x1f3fe829af8 <col:18, col:26> 'void *' <NullToPointer>
|   | |   |           `-IntegerLiteral 0x1f3fe829ab8 <col:26> 'int' 0
|   | |   `-CompoundStmt 0x1f3fe829ca0 <.//openssl//file_jk/before\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x1f3fe829c78 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x1f3fe829c60 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x1f3fe829be8 <col:13> 'int ()' Function 0x1f3fe8279f0 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x1f3fe829c48 <col:28, <scratch space>:296:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x1f3fe829c30 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x1f3fe829c08 <col:1> 'char [13]' lvalue "*out != NULL"
|   | `-IntegerLiteral 0x1f3fe829ce8 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x1f3fe829d30 <.//openssl//file_jk/before\test\handshake_helper.c:217:29>
|   |-BinaryOperator 0x1f3fe829e20 <line:218:5, col:21> 'size_t':'unsigned long long' '='
|   | |-UnaryOperator 0x1f3fe829d70 <col:5, col:6> 'size_t':'unsigned long long' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x1f3fe829d58 <col:6> 'size_t *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1f3fe829d38 <col:6> 'size_t *' lvalue ParmVar 0x1f3fe8290c8 'outlen' 'size_t *'
|   | `-BinaryOperator 0x1f3fe829e00 <col:15, col:21> 'unsigned long long' '+'
|   |   |-ImplicitCastExpr 0x1f3fe829dd0 <col:15> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1f3fe829d88 <col:15> 'size_t':'unsigned long long' lvalue Var 0x1f3fe829318 'len' 'size_t':'unsigned long long'
|   |   `-ImplicitCastExpr 0x1f3fe829de8 <col:21> 'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x1f3fe829da8 <col:21> 'int' 1
|   |-CallExpr 0x1f3fe831050 <line:224:5, col:33> 'void *'
|   | |-ImplicitCastExpr 0x1f3fe831038 <col:5> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1f3fe829e40 <col:5> 'void *(void *, const void *, unsigned long long)' Function 0x1f3fe7e28e8 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   | |-ImplicitCastExpr 0x1f3fe831088 <col:12, col:19> 'void *' <BitCast>
|   | | `-BinaryOperator 0x1f3fe830f78 <col:12, col:19> 'unsigned char *' '+'
|   | |   |-ImplicitCastExpr 0x1f3fe830f60 <col:12, col:13> 'unsigned char *' <LValueToRValue>
|   | |   | `-UnaryOperator 0x1f3fe829e98 <col:12, col:13> 'unsigned char *' lvalue prefix '*' cannot overflow
|   | |   |   `-ImplicitCastExpr 0x1f3fe829e80 <col:13> 'unsigned char **' <LValueToRValue>
|   | |   |     `-DeclRefExpr 0x1f3fe829e60 <col:13> 'unsigned char **' lvalue ParmVar 0x1f3fe828ff8 'out' 'unsigned char **'
|   | |   `-IntegerLiteral 0x1f3fe829eb0 <col:19> 'int' 1
|   | |-ImplicitCastExpr 0x1f3fe8310b8 <col:22> 'const void *' <BitCast>
|   | | `-ImplicitCastExpr 0x1f3fe8310a0 <col:22> 'const char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1f3fe830f98 <col:22> 'const char *' lvalue ParmVar 0x1f3fe828f40 'protos' 'const char *'
|   | `-ImplicitCastExpr 0x1f3fe8310d0 <col:30> 'size_t':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0x1f3fe830fb8 <col:30> 'size_t':'unsigned long long' lvalue Var 0x1f3fe829318 'len' 'size_t':'unsigned long long'
|   |-BinaryOperator 0x1f3fe831160 <line:226:5, col:14> 'size_t':'unsigned long long' '='
|   | |-DeclRefExpr 0x1f3fe8310e8 <col:5> 'size_t':'unsigned long long' lvalue Var 0x1f3fe829408 'prefix' 'size_t':'unsigned long long'
|   | `-ImplicitCastExpr 0x1f3fe831148 <col:14> 'size_t':'unsigned long long' <IntegralCast>
|   |   `-IntegerLiteral 0x1f3fe831120 <col:14> 'int' 0
|   |-BinaryOperator 0x1f3fe831250 <line:227:5, col:18> 'size_t':'unsigned long long' '='
|   | |-DeclRefExpr 0x1f3fe831180 <col:5> 'size_t':'unsigned long long' lvalue Var 0x1f3fe829390 'i' 'size_t':'unsigned long long'
|   | `-BinaryOperator 0x1f3fe831230 <col:9, col:18> 'unsigned long long' '+'
|   |   |-ImplicitCastExpr 0x1f3fe831200 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1f3fe8311b8 <col:9> 'size_t':'unsigned long long' lvalue Var 0x1f3fe829408 'prefix' 'size_t':'unsigned long long'
|   |   `-ImplicitCastExpr 0x1f3fe831218 <col:18> 'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x1f3fe8311d8 <col:18> 'int' 1
|   |-WhileStmt 0x1f3fe831aa0 <line:228:5, line:235:5>
|   | |-BinaryOperator 0x1f3fe8312e0 <line:228:12, col:17> 'int' '<='
|   | | |-ImplicitCastExpr 0x1f3fe8312b0 <col:12> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1f3fe831270 <col:12> 'size_t':'unsigned long long' lvalue Var 0x1f3fe829390 'i' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x1f3fe8312c8 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1f3fe831290 <col:17> 'size_t':'unsigned long long' lvalue Var 0x1f3fe829318 'len' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x1f3fe831a80 <col:22, line:235:5>
|   |   |-IfStmt 0x1f3fe831a30 <line:229:9, line:233:9>
|   |   | |-BinaryOperator 0x1f3fe831428 <line:229:13, col:26> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x1f3fe831410 <col:13, col:21> 'int' <IntegralCast>
|   |   | | | `-ImplicitCastExpr 0x1f3fe8313f8 <col:13, col:21> 'unsigned char' <LValueToRValue>
|   |   | | |   `-ArraySubscriptExpr 0x1f3fe8313c0 <col:13, col:21> 'unsigned char' lvalue
|   |   | | |     |-ImplicitCastExpr 0x1f3fe831390 <col:13, col:18> 'unsigned char *' <LValueToRValue>
|   |   | | |     | `-ParenExpr 0x1f3fe831350 <col:13, col:18> 'unsigned char *' lvalue
|   |   | | |     |   `-UnaryOperator 0x1f3fe831338 <col:14, col:15> 'unsigned char *' lvalue prefix '*' cannot overflow
|   |   | | |     |     `-ImplicitCastExpr 0x1f3fe831320 <col:15> 'unsigned char **' <LValueToRValue>
|   |   | | |     |       `-DeclRefExpr 0x1f3fe831300 <col:15> 'unsigned char **' lvalue ParmVar 0x1f3fe828ff8 'out' 'unsigned char **'
|   |   | | |     `-ImplicitCastExpr 0x1f3fe8313a8 <col:20> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | | |       `-DeclRefExpr 0x1f3fe831370 <col:20> 'size_t':'unsigned long long' lvalue Var 0x1f3fe829390 'i' 'size_t':'unsigned long long'
|   |   | | `-CharacterLiteral 0x1f3fe8313e0 <col:26> 'int' 44
|   |   | `-CompoundStmt 0x1f3fe831a00 <col:31, line:233:9>
|   |   |   |-DoStmt 0x1f3fe831758 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   |   |   | |-CompoundStmt 0x1f3fe831718 <line:106:8, line:111:5>
|   |   |   | | `-IfStmt 0x1f3fe831700 <line:107:9, line:110:9>
|   |   |   | |   |-UnaryOperator 0x1f3fe8315b8 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   |   |   | |   | `-ParenExpr 0x1f3fe831598 <col:14, col:24> 'int'
|   |   |   | |   |   `-BinaryOperator 0x1f3fe831578 <.//openssl//file_jk/before\test\handshake_helper.c:230:24, col:41> 'int' '>'
|   |   |   | |   |     |-BinaryOperator 0x1f3fe831518 <col:24, col:32> 'unsigned long long' '-'
|   |   |   | |   |     | |-BinaryOperator 0x1f3fe8314c0 <col:24, col:28> 'unsigned long long' '-'
|   |   |   | |   |     | | |-ImplicitCastExpr 0x1f3fe831490 <col:24> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   | |   |     | | | `-DeclRefExpr 0x1f3fe831448 <col:24> 'size_t':'unsigned long long' lvalue Var 0x1f3fe829390 'i' 'size_t':'unsigned long long'
|   |   |   | |   |     | | `-ImplicitCastExpr 0x1f3fe8314a8 <col:28> 'unsigned long long' <IntegralCast>
|   |   |   | |   |     | |   `-IntegerLiteral 0x1f3fe831468 <col:28> 'int' 1
|   |   |   | |   |     | `-ImplicitCastExpr 0x1f3fe831500 <col:32> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   | |   |     |   `-DeclRefExpr 0x1f3fe8314e0 <col:32> 'size_t':'unsigned long long' lvalue Var 0x1f3fe829408 'prefix' 'size_t':'unsigned long long'
|   |   |   | |   |     `-ImplicitCastExpr 0x1f3fe831560 <col:41> 'unsigned long long' <IntegralCast>
|   |   |   | |   |       `-IntegerLiteral 0x1f3fe831538 <col:41> 'int' 0
|   |   |   | |   `-CompoundStmt 0x1f3fe8316e8 <.//openssl//file_jk/before\test/testutil.h:107:27, line:110:9>
|   |   |   | |     `-CallExpr 0x1f3fe8316c0 <line:109:13, col:39> 'int'
|   |   |   | |       |-ImplicitCastExpr 0x1f3fe8316a8 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | |       | `-DeclRefExpr 0x1f3fe8315f0 <col:13> 'int ()' Function 0x1f3fe8279f0 'OPENSSL_assert' 'int ()'
|   |   |   | |       `-UnaryOperator 0x1f3fe831690 <col:28, <scratch space>:297:1> 'int' prefix '!' cannot overflow
|   |   |   | |         `-ImplicitCastExpr 0x1f3fe831678 <col:1> 'char *' <ArrayToPointerDecay>
|   |   |   | |           `-StringLiteral 0x1f3fe831648 <col:1> 'char [19]' lvalue "i - 1 - prefix > 0"
|   |   |   | `-IntegerLiteral 0x1f3fe831730 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |   |   |-NullStmt 0x1f3fe831778 <.//openssl//file_jk/before\test\handshake_helper.c:230:43>
|   |   |   |-BinaryOperator 0x1f3fe831968 <line:231:13, col:38> 'unsigned char' '='
|   |   |   | |-ArraySubscriptExpr 0x1f3fe831840 <col:13, col:26> 'unsigned char' lvalue
|   |   |   | | |-ImplicitCastExpr 0x1f3fe831810 <col:13, col:18> 'unsigned char *' <LValueToRValue>
|   |   |   | | | `-ParenExpr 0x1f3fe8317d0 <col:13, col:18> 'unsigned char *' lvalue
|   |   |   | | |   `-UnaryOperator 0x1f3fe8317b8 <col:14, col:15> 'unsigned char *' lvalue prefix '*' cannot overflow
|   |   |   | | |     `-ImplicitCastExpr 0x1f3fe8317a0 <col:15> 'unsigned char **' <LValueToRValue>
|   |   |   | | |       `-DeclRefExpr 0x1f3fe831780 <col:15> 'unsigned char **' lvalue ParmVar 0x1f3fe828ff8 'out' 'unsigned char **'
|   |   |   | | `-ImplicitCastExpr 0x1f3fe831828 <col:20> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x1f3fe8317f0 <col:20> 'size_t':'unsigned long long' lvalue Var 0x1f3fe829408 'prefix' 'size_t':'unsigned long long'
|   |   |   | `-ImplicitCastExpr 0x1f3fe831950 <col:30, col:38> 'unsigned char' <IntegralCast>
|   |   |   |   `-BinaryOperator 0x1f3fe831930 <col:30, col:38> 'unsigned long long' '-'
|   |   |   |     |-BinaryOperator 0x1f3fe8318d8 <col:30, col:34> 'unsigned long long' '-'
|   |   |   |     | |-ImplicitCastExpr 0x1f3fe8318a8 <col:30> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   |     | | `-DeclRefExpr 0x1f3fe831860 <col:30> 'size_t':'unsigned long long' lvalue Var 0x1f3fe829390 'i' 'size_t':'unsigned long long'
|   |   |   |     | `-ImplicitCastExpr 0x1f3fe8318c0 <col:34> 'unsigned long long' <IntegralCast>
|   |   |   |     |   `-IntegerLiteral 0x1f3fe831880 <col:34> 'int' 1
|   |   |   |     `-ImplicitCastExpr 0x1f3fe831918 <col:38> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   |       `-DeclRefExpr 0x1f3fe8318f8 <col:38> 'size_t':'unsigned long long' lvalue Var 0x1f3fe829408 'prefix' 'size_t':'unsigned long long'
|   |   |   `-BinaryOperator 0x1f3fe8319e0 <line:232:13, col:22> 'size_t':'unsigned long long' '='
|   |   |     |-DeclRefExpr 0x1f3fe831988 <col:13> 'size_t':'unsigned long long' lvalue Var 0x1f3fe829408 'prefix' 'size_t':'unsigned long long'
|   |   |     `-ImplicitCastExpr 0x1f3fe8319c8 <col:22> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x1f3fe8319a8 <col:22> 'size_t':'unsigned long long' lvalue Var 0x1f3fe829390 'i' 'size_t':'unsigned long long'
|   |   `-UnaryOperator 0x1f3fe831a68 <line:234:9, col:10> 'size_t':'unsigned long long' postfix '++'
|   |     `-DeclRefExpr 0x1f3fe831a48 <col:9> 'size_t':'unsigned long long' lvalue Var 0x1f3fe829390 'i' 'size_t':'unsigned long long'
|   |-DoStmt 0x1f3fe831d60 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x1f3fe831d20 <line:106:8, line:111:5>
|   | | `-IfStmt 0x1f3fe831d08 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x1f3fe831bc8 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x1f3fe831ba8 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x1f3fe831b88 <.//openssl//file_jk/before\test\handshake_helper.c:236:16, col:31> 'int' '>'
|   | |   |     |-BinaryOperator 0x1f3fe831b28 <col:16, col:22> 'unsigned long long' '-'
|   | |   |     | |-ImplicitCastExpr 0x1f3fe831af8 <col:16> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   |     | | `-DeclRefExpr 0x1f3fe831ab8 <col:16> 'size_t':'unsigned long long' lvalue Var 0x1f3fe829318 'len' 'size_t':'unsigned long long'
|   | |   |     | `-ImplicitCastExpr 0x1f3fe831b10 <col:22> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   |     |   `-DeclRefExpr 0x1f3fe831ad8 <col:22> 'size_t':'unsigned long long' lvalue Var 0x1f3fe829408 'prefix' 'size_t':'unsigned long long'
|   | |   |     `-ImplicitCastExpr 0x1f3fe831b70 <col:31> 'unsigned long long' <IntegralCast>
|   | |   |       `-IntegerLiteral 0x1f3fe831b48 <col:31> 'int' 0
|   | |   `-CompoundStmt 0x1f3fe831cf0 <.//openssl//file_jk/before\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x1f3fe831cc8 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x1f3fe831cb0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x1f3fe831c00 <col:13> 'int ()' Function 0x1f3fe8279f0 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x1f3fe831c98 <col:28, <scratch space>:298:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x1f3fe831c80 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x1f3fe831c58 <col:1> 'char [17]' lvalue "len - prefix > 0"
|   | `-IntegerLiteral 0x1f3fe831d38 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x1f3fe831d80 <.//openssl//file_jk/before\test\handshake_helper.c:236:33>
|   `-BinaryOperator 0x1f3fe831f10 <line:237:5, col:28> 'unsigned char' '='
|     |-ArraySubscriptExpr 0x1f3fe831e48 <col:5, col:18> 'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x1f3fe831e18 <col:5, col:10> 'unsigned char *' <LValueToRValue>
|     | | `-ParenExpr 0x1f3fe831dd8 <col:5, col:10> 'unsigned char *' lvalue
|     | |   `-UnaryOperator 0x1f3fe831dc0 <col:6, col:7> 'unsigned char *' lvalue prefix '*' cannot overflow
|     | |     `-ImplicitCastExpr 0x1f3fe831da8 <col:7> 'unsigned char **' <LValueToRValue>
|     | |       `-DeclRefExpr 0x1f3fe831d88 <col:7> 'unsigned char **' lvalue ParmVar 0x1f3fe828ff8 'out' 'unsigned char **'
|     | `-ImplicitCastExpr 0x1f3fe831e30 <col:12> 'size_t':'unsigned long long' <LValueToRValue>
|     |   `-DeclRefExpr 0x1f3fe831df8 <col:12> 'size_t':'unsigned long long' lvalue Var 0x1f3fe829408 'prefix' 'size_t':'unsigned long long'
|     `-ImplicitCastExpr 0x1f3fe831ef8 <col:22, col:28> 'unsigned char' <IntegralCast>
|       `-BinaryOperator 0x1f3fe831ed8 <col:22, col:28> 'unsigned long long' '-'
|         |-ImplicitCastExpr 0x1f3fe831ea8 <col:22> 'size_t':'unsigned long long' <LValueToRValue>
|         | `-DeclRefExpr 0x1f3fe831e68 <col:22> 'size_t':'unsigned long long' lvalue Var 0x1f3fe829318 'len' 'size_t':'unsigned long long'
|         `-ImplicitCastExpr 0x1f3fe831ec0 <col:28> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x1f3fe831e88 <col:28> 'size_t':'unsigned long long' lvalue Var 0x1f3fe829408 'prefix' 'size_t':'unsigned long long'
|-FunctionDecl 0x1f3fe830390 <line:247:1, line:260:1> line:247:12 invalid client_npn_cb 'int (int *, unsigned char **, unsigned char *, const unsigned char *, unsigned int, void *)' static
| |-ParmVarDecl 0x1f3fe82fff0 <col:26, col:31> col:31 invalid s 'int *'
| |-ParmVarDecl 0x1f3fe830078 <col:34, col:50> col:50 used out 'unsigned char **'
| |-ParmVarDecl 0x1f3fe8300f8 <col:55, col:70> col:70 used outlen 'unsigned char *'
| |-ParmVarDecl 0x1f3fe830178 <line:248:26, col:47> col:47 used in 'const unsigned char *'
| |-ParmVarDecl 0x1f3fe8301f8 <col:51, col:64> col:64 used inlen 'unsigned int'
| |-ParmVarDecl 0x1f3fe830278 <line:249:26, col:32> col:32 used arg 'void *'
| `-CompoundStmt 0x1f3fe830cc0 <line:250:1, line:260:1>
|   |-DeclStmt 0x1f3fe8305b8 <line:251:5, col:42>
|   | `-VarDecl 0x1f3fe830488 <col:5, col:41> col:15 used ctx_data 'CTX_DATA *' cinit
|   |   `-CStyleCastExpr 0x1f3fe830590 <col:26, col:41> 'CTX_DATA *' <BitCast>
|   |     `-ImplicitCastExpr 0x1f3fe830578 <col:37, col:41> 'void *' <LValueToRValue> part_of_explicit_cast
|   |       `-ParenExpr 0x1f3fe830558 <col:37, col:41> 'void *' lvalue
|   |         `-DeclRefExpr 0x1f3fe8304f0 <col:38> 'void *' lvalue ParmVar 0x1f3fe830278 'arg' 'void *'
|   |-DeclStmt 0x1f3fe830650 <line:252:5, col:12>
|   | `-VarDecl 0x1f3fe8305e8 <col:5, col:9> col:9 used ret 'int'
|   |-BinaryOperator 0x1f3fe830a70 <line:254:5, line:256:60> 'int' '='
|   | |-DeclRefExpr 0x1f3fe830668 <line:254:5> 'int' lvalue Var 0x1f3fe8305e8 'ret' 'int'
|   | `-CallExpr 0x1f3fe830990 <col:11, line:256:60> 'int'
|   |   |-ImplicitCastExpr 0x1f3fe830978 <line:254:11> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1f3fe830790 <col:11> 'int ()' Function 0x1f3fe8306c8 'SSL_select_next_proto' 'int ()'
|   |   |-ImplicitCastExpr 0x1f3fe8309e0 <col:33> 'unsigned char **' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1f3fe8307b0 <col:33> 'unsigned char **' lvalue ParmVar 0x1f3fe830078 'out' 'unsigned char **'
|   |   |-ImplicitCastExpr 0x1f3fe8309f8 <col:38> 'unsigned char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1f3fe8307e8 <col:38> 'unsigned char *' lvalue ParmVar 0x1f3fe8300f8 'outlen' 'unsigned char *'
|   |   |-ImplicitCastExpr 0x1f3fe830a10 <col:46> 'const unsigned char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1f3fe830820 <col:46> 'const unsigned char *' lvalue ParmVar 0x1f3fe830178 'in' 'const unsigned char *'
|   |   |-ImplicitCastExpr 0x1f3fe830a28 <col:50> 'unsigned int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1f3fe830858 <col:50> 'unsigned int' lvalue ParmVar 0x1f3fe8301f8 'inlen' 'unsigned int'
|   |   |-ImplicitCastExpr 0x1f3fe830a40 <line:255:33, col:43> 'unsigned char *' <LValueToRValue>
|   |   | `-MemberExpr 0x1f3fe8308e0 <col:33, col:43> 'unsigned char *' lvalue ->npn_protocols 0x1f3fe825930
|   |   |   `-ImplicitCastExpr 0x1f3fe8308c8 <col:33> 'CTX_DATA *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1f3fe830890 <col:33> 'CTX_DATA *' lvalue Var 0x1f3fe830488 'ctx_data' 'CTX_DATA *'
|   |   `-ImplicitCastExpr 0x1f3fe830a58 <line:256:33, col:43> 'size_t':'unsigned long long' <LValueToRValue>
|   |     `-MemberExpr 0x1f3fe830948 <col:33, col:43> 'size_t':'unsigned long long' lvalue ->npn_protocols_len 0x1f3fe825998
|   |       `-ImplicitCastExpr 0x1f3fe830930 <col:33> 'CTX_DATA *' <LValueToRValue>
|   |         `-DeclRefExpr 0x1f3fe830910 <col:33> 'CTX_DATA *' lvalue Var 0x1f3fe830488 'ctx_data' 'CTX_DATA *'
|   |-DoStmt 0x1f3fe830c98 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x1f3fe830c58 <line:106:8, line:111:5>
|   | | `-IfStmt 0x1f3fe830c40 <line:107:9, line:110:9>
|   | |   |-OpaqueValueExpr 0x1f3fe830c28 <<invalid sloc>> '_Bool'
|   | |   `-CompoundStmt 0x1f3fe830c10 <line:107:27, line:110:9>
|   | |     `-CallExpr 0x1f3fe830be8 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x1f3fe830bd0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x1f3fe830af0 <col:13> 'int ()' Function 0x1f3fe8279f0 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x1f3fe830bb8 <col:28, <scratch space>:299:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x1f3fe830ba0 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x1f3fe830b48 <col:1> 'char [63]' lvalue "ret == OPENSSL_NPN_NEGOTIATED || ret == OPENSSL_NPN_NO_OVERLAP"
|   | `-IntegerLiteral 0x1f3fe830c70 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   `-NullStmt 0x1f3fe830cb8 <.//openssl//file_jk/before\test\handshake_helper.c:258:79>
|-FunctionDecl 0x1f3fe829f80 <line:262:1, line:269:1> line:262:12 invalid server_npn_cb 'int (int *, const unsigned char **, unsigned int *, void *)' static
| |-ParmVarDecl 0x1f3fe830d10 <col:26, col:31> col:31 invalid s 'int *'
| |-ParmVarDecl 0x1f3fe830d98 <col:34, col:56> col:56 used data 'const unsigned char **'
| |-ParmVarDecl 0x1f3fe830e40 <line:263:26, col:40> col:40 used len 'unsigned int *'
| |-ParmVarDecl 0x1f3fe830ec0 <col:45, col:51> col:51 used arg 'void *'
| `-CompoundStmt 0x1f3fe82a408 <line:264:1, line:269:1>
|   |-DeclStmt 0x1f3fe82a198 <line:265:5, col:42>
|   | `-VarDecl 0x1f3fe82a068 <col:5, col:41> col:15 used ctx_data 'CTX_DATA *' cinit
|   |   `-CStyleCastExpr 0x1f3fe82a170 <col:26, col:41> 'CTX_DATA *' <BitCast>
|   |     `-ImplicitCastExpr 0x1f3fe82a158 <col:37, col:41> 'void *' <LValueToRValue> part_of_explicit_cast
|   |       `-ParenExpr 0x1f3fe82a138 <col:37, col:41> 'void *' lvalue
|   |         `-DeclRefExpr 0x1f3fe82a0d0 <col:38> 'void *' lvalue ParmVar 0x1f3fe830ec0 'arg' 'void *'
|   |-BinaryOperator 0x1f3fe82a2c8 <line:266:5, col:23> 'const unsigned char *' '='
|   | |-UnaryOperator 0x1f3fe82a200 <col:5, col:6> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x1f3fe82a1e8 <col:6> 'const unsigned char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1f3fe82a1b0 <col:6> 'const unsigned char **' lvalue ParmVar 0x1f3fe830d98 'data' 'const unsigned char **'
|   | `-ImplicitCastExpr 0x1f3fe82a2b0 <col:13, col:23> 'const unsigned char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1f3fe82a298 <col:13, col:23> 'unsigned char *' <LValueToRValue>
|   |     `-MemberExpr 0x1f3fe82a268 <col:13, col:23> 'unsigned char *' lvalue ->npn_protocols 0x1f3fe825930
|   |       `-ImplicitCastExpr 0x1f3fe82a250 <col:13> 'CTX_DATA *' <LValueToRValue>
|   |         `-DeclRefExpr 0x1f3fe82a218 <col:13> 'CTX_DATA *' lvalue Var 0x1f3fe82a068 'ctx_data' 'CTX_DATA *'
|   `-BinaryOperator 0x1f3fe82a3e8 <line:267:5, col:22> 'unsigned int' '='
|     |-UnaryOperator 0x1f3fe82a338 <col:5, col:6> 'unsigned int' lvalue prefix '*' cannot overflow
|     | `-ImplicitCastExpr 0x1f3fe82a320 <col:6> 'unsigned int *' <LValueToRValue>
|     |   `-DeclRefExpr 0x1f3fe82a2e8 <col:6> 'unsigned int *' lvalue ParmVar 0x1f3fe830e40 'len' 'unsigned int *'
|     `-ImplicitCastExpr 0x1f3fe82a3d0 <col:12, col:22> 'unsigned int' <IntegralCast>
|       `-ImplicitCastExpr 0x1f3fe82a3b8 <col:12, col:22> 'size_t':'unsigned long long' <LValueToRValue>
|         `-MemberExpr 0x1f3fe82a388 <col:12, col:22> 'size_t':'unsigned long long' lvalue ->npn_protocols_len 0x1f3fe825998
|           `-ImplicitCastExpr 0x1f3fe82a370 <col:12> 'CTX_DATA *' <LValueToRValue>
|             `-DeclRefExpr 0x1f3fe82a350 <col:12> 'CTX_DATA *' lvalue Var 0x1f3fe82a068 'ctx_data' 'CTX_DATA *'
|-FunctionDecl 0x1f3fe82a7f0 <line:278:1, line:301:1> line:278:12 invalid server_alpn_cb 'int (int *, const unsigned char **, unsigned char *, const unsigned char *, unsigned int, void *)' static
| |-ParmVarDecl 0x1f3fe82a448 <col:27, col:32> col:32 invalid s 'int *'
| |-ParmVarDecl 0x1f3fe82a4d0 <col:35, col:57> col:57 used out 'const unsigned char **'
| |-ParmVarDecl 0x1f3fe82a550 <line:279:27, col:42> col:42 used outlen 'unsigned char *'
| |-ParmVarDecl 0x1f3fe82a5d0 <col:50, col:71> col:71 used in 'const unsigned char *'
| |-ParmVarDecl 0x1f3fe82a650 <line:280:27, col:40> col:40 used inlen 'unsigned int'
| |-ParmVarDecl 0x1f3fe82a6d0 <col:47, col:53> col:53 used arg 'void *'
| `-CompoundStmt 0x1f3fe839088 <line:281:1, line:301:1>
|   |-DeclStmt 0x1f3fe82aa18 <line:282:5, col:42>
|   | `-VarDecl 0x1f3fe82a8e8 <col:5, col:41> col:15 used ctx_data 'CTX_DATA *' cinit
|   |   `-CStyleCastExpr 0x1f3fe82a9f0 <col:26, col:41> 'CTX_DATA *' <BitCast>
|   |     `-ImplicitCastExpr 0x1f3fe82a9d8 <col:37, col:41> 'void *' <LValueToRValue> part_of_explicit_cast
|   |       `-ParenExpr 0x1f3fe82a9b8 <col:37, col:41> 'void *' lvalue
|   |         `-DeclRefExpr 0x1f3fe82a950 <col:38> 'void *' lvalue ParmVar 0x1f3fe82a6d0 'arg' 'void *'
|   |-DeclStmt 0x1f3fe82aab0 <line:283:5, col:12>
|   | `-VarDecl 0x1f3fe82aa48 <col:5, col:9> col:9 used ret 'int'
|   |-DeclStmt 0x1f3fe82ab48 <line:286:5, col:27>
|   | `-VarDecl 0x1f3fe82aae0 <col:5, col:20> col:20 used tmp_out 'unsigned char *'
|   |-BinaryOperator 0x1f3fe82ae78 <line:293:5, line:295:72> 'int' '='
|   | |-DeclRefExpr 0x1f3fe82ab60 <line:293:5> 'int' lvalue Var 0x1f3fe82aa48 'ret' 'int'
|   | `-CallExpr 0x1f3fe82adb0 <col:11, line:295:72> 'int'
|   |   |-ImplicitCastExpr 0x1f3fe82ad98 <line:293:11> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1f3fe82ab98 <col:11> 'int ()' Function 0x1f3fe8306c8 'SSL_select_next_proto' 'int ()'
|   |   |-UnaryOperator 0x1f3fe82abf0 <col:33, col:34> 'unsigned char **' prefix '&' cannot overflow
|   |   | `-DeclRefExpr 0x1f3fe82abb8 <col:34> 'unsigned char *' lvalue Var 0x1f3fe82aae0 'tmp_out' 'unsigned char *'
|   |   |-ImplicitCastExpr 0x1f3fe82ae00 <col:43> 'unsigned char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1f3fe82ac08 <col:43> 'unsigned char *' lvalue ParmVar 0x1f3fe82a550 'outlen' 'unsigned char *'
|   |   |-ImplicitCastExpr 0x1f3fe82ae18 <line:294:33, col:43> 'unsigned char *' <LValueToRValue>
|   |   | `-MemberExpr 0x1f3fe82ac90 <col:33, col:43> 'unsigned char *' lvalue ->alpn_protocols 0x1f3fe825a08
|   |   |   `-ImplicitCastExpr 0x1f3fe82ac78 <col:33> 'CTX_DATA *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1f3fe82ac40 <col:33> 'CTX_DATA *' lvalue Var 0x1f3fe82a8e8 'ctx_data' 'CTX_DATA *'
|   |   |-ImplicitCastExpr 0x1f3fe82ae30 <line:295:33, col:43> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-MemberExpr 0x1f3fe82acf8 <col:33, col:43> 'size_t':'unsigned long long' lvalue ->alpn_protocols_len 0x1f3fe825a70
|   |   |   `-ImplicitCastExpr 0x1f3fe82ace0 <col:33> 'CTX_DATA *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1f3fe82acc0 <col:33> 'CTX_DATA *' lvalue Var 0x1f3fe82a8e8 'ctx_data' 'CTX_DATA *'
|   |   |-ImplicitCastExpr 0x1f3fe82ae48 <col:63> 'const unsigned char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1f3fe82ad28 <col:63> 'const unsigned char *' lvalue ParmVar 0x1f3fe82a5d0 'in' 'const unsigned char *'
|   |   `-ImplicitCastExpr 0x1f3fe82ae60 <col:67> 'unsigned int' <LValueToRValue>
|   |     `-DeclRefExpr 0x1f3fe82ad60 <col:67> 'unsigned int' lvalue ParmVar 0x1f3fe82a650 'inlen' 'unsigned int'
|   `-BinaryOperator 0x1f3fe839048 <line:297:5, col:12> 'const unsigned char *' '='
|     |-UnaryOperator 0x1f3fe838fe0 <col:5, col:6> 'const unsigned char *' lvalue prefix '*' cannot overflow
|     | `-ImplicitCastExpr 0x1f3fe82aed0 <col:6> 'const unsigned char **' <LValueToRValue>
|     |   `-DeclRefExpr 0x1f3fe82ae98 <col:6> 'const unsigned char **' lvalue ParmVar 0x1f3fe82a4d0 'out' 'const unsigned char **'
|     `-ImplicitCastExpr 0x1f3fe839030 <col:12> 'const unsigned char *' <NoOp>
|       `-ImplicitCastExpr 0x1f3fe839018 <col:12> 'unsigned char *' <LValueToRValue>
|         `-DeclRefExpr 0x1f3fe838ff8 <col:12> 'unsigned char *' lvalue Var 0x1f3fe82aae0 'tmp_out' 'unsigned char *'
|-FunctionDecl 0x1f3fe839638 <line:307:1, line:449:1> line:307:13 invalid configure_handshake_ctx 'void (int *, int *, int *, const SSL_TEST_CTX *, const SSL_TEST_EXTRA_CONF *, CTX_DATA *, CTX_DATA *, CTX_DATA *)' static
| |-ParmVarDecl 0x1f3fe8390d8 <col:37, col:46> col:46 invalid server_ctx 'int *'
| |-ParmVarDecl 0x1f3fe839158 <col:58, col:67> col:67 invalid server2_ctx 'int *'
| |-ParmVarDecl 0x1f3fe8391d8 <line:308:37, col:46> col:46 invalid client_ctx 'int *'
| |-ParmVarDecl 0x1f3fe839250 <line:309:37, col:57> col:57 used test 'const SSL_TEST_CTX *'
| |-ParmVarDecl 0x1f3fe839328 <line:310:37, col:64> col:64 used extra 'const SSL_TEST_EXTRA_CONF *'
| |-ParmVarDecl 0x1f3fe8393a0 <line:311:37, col:47> col:47 used server_ctx_data 'CTX_DATA *'
| |-ParmVarDecl 0x1f3fe839418 <line:312:37, col:47> col:47 used server2_ctx_data 'CTX_DATA *'
| |-ParmVarDecl 0x1f3fe839490 <line:313:37, col:47> col:47 used client_ctx_data 'CTX_DATA *'
| `-CompoundStmt 0x1f3fe83bef0 <line:314:1, line:449:1>
|   |-DeclStmt 0x1f3fe8397b0 <line:315:5, col:31>
|   | `-VarDecl 0x1f3fe839748 <col:5, col:20> col:20 used ticket_keys 'unsigned char *'
|   |-DeclStmt 0x1f3fe839840 <line:316:5, col:26>
|   | `-VarDecl 0x1f3fe8397d8 <col:5, col:12> col:12 used ticket_key_len 'size_t':'unsigned long long'
|   |-DoStmt 0x1f3fe839be0 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x1f3fe839ba0 <line:106:8, line:111:5>
|   | | `-IfStmt 0x1f3fe839b88 <line:107:9, line:110:9>
|   | |   |-OpaqueValueExpr 0x1f3fe839b70 <<invalid sloc>> '_Bool'
|   | |   `-CompoundStmt 0x1f3fe839b58 <line:107:27, line:110:9>
|   | |     `-CallExpr 0x1f3fe839b30 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x1f3fe839b18 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x1f3fe839a30 <col:13> 'int ()' Function 0x1f3fe8279f0 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x1f3fe839b00 <col:28, <scratch space>:300:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x1f3fe839ae8 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x1f3fe839a88 <col:1> 'char [72]' lvalue "SSL_CTX_set_max_send_fragment(server_ctx, test->max_fragment_size) == 1"
|   | `-IntegerLiteral 0x1f3fe839bb8 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x1f3fe839c00 <.//openssl//file_jk/before\test\handshake_helper.c:319:76>
|   |-IfStmt 0x1f3fe839f70 <line:320:5, line:323:5>
|   | |-OpaqueValueExpr 0x1f3fe839f58 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1f3fe839f38 <line:320:30, line:323:5>
|   |   |-DoStmt 0x1f3fe839f10 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   |   | |-CompoundStmt 0x1f3fe839ed0 <line:106:8, line:111:5>
|   |   | | `-IfStmt 0x1f3fe839eb8 <line:107:9, line:110:9>
|   |   | |   |-OpaqueValueExpr 0x1f3fe839ea0 <<invalid sloc>> '_Bool'
|   |   | |   `-CompoundStmt 0x1f3fe839e88 <line:107:27, line:110:9>
|   |   | |     `-CallExpr 0x1f3fe839e60 <line:109:13, col:39> 'int'
|   |   | |       |-ImplicitCastExpr 0x1f3fe839e48 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   | |       | `-DeclRefExpr 0x1f3fe839d60 <col:13> 'int ()' Function 0x1f3fe8279f0 'OPENSSL_assert' 'int ()'
|   |   | |       `-UnaryOperator 0x1f3fe839e30 <col:28, <scratch space>:2:1> 'int' prefix '!' cannot overflow
|   |   | |         `-ImplicitCastExpr 0x1f3fe839e18 <col:1> 'char *' <ArrayToPointerDecay>
|   |   | |           `-StringLiteral 0x1f3fe839db8 <col:1> 'char [73]' lvalue "SSL_CTX_set_max_send_fragment(server2_ctx, test->max_fragment_size) == 1"
|   |   | `-IntegerLiteral 0x1f3fe839ee8 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |   `-NullStmt 0x1f3fe839f30 <.//openssl//file_jk/before\test\handshake_helper.c:322:80>
|   |-DoStmt 0x1f3fe832160 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x1f3fe832120 <line:106:8, line:111:5>
|   | | `-IfStmt 0x1f3fe832108 <line:107:9, line:110:9>
|   | |   |-OpaqueValueExpr 0x1f3fe8320f0 <<invalid sloc>> '_Bool'
|   | |   `-CompoundStmt 0x1f3fe8320d8 <line:107:27, line:110:9>
|   | |     `-CallExpr 0x1f3fe8320b0 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x1f3fe832098 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x1f3fe831fe8 <col:13> 'int ()' Function 0x1f3fe8279f0 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x1f3fe832080 <col:28, <scratch space>:3:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x1f3fe832068 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x1f3fe832008 <col:1> 'char [72]' lvalue "SSL_CTX_set_max_send_fragment(client_ctx, test->max_fragment_size) == 1"
|   | `-IntegerLiteral 0x1f3fe832138 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x1f3fe832180 <.//openssl//file_jk/before\test\handshake_helper.c:325:76>
|   |-SwitchStmt 0x1f3fe832268 <line:327:5, line:338:5>
|   | |-ImplicitCastExpr 0x1f3fe832250 <line:327:13, col:27> 'int' <IntegralCast>
|   | | `-ImplicitCastExpr 0x1f3fe832238 <col:13, col:27> 'ssl_verify_callback_t':'ssl_verify_callback_t' <LValueToRValue>
|   | |   `-MemberExpr 0x1f3fe832208 <col:13, col:27> 'const ssl_verify_callback_t':'const ssl_verify_callback_t' lvalue .verify_callback 0x1f3fe8775a0
|   | |     `-MemberExpr 0x1f3fe8321d8 <col:13, col:20> 'const SSL_TEST_CLIENT_CONF':'const SSL_TEST_CLIENT_CONF' lvalue ->client 0x1f3fe877e10
|   | |       `-ImplicitCastExpr 0x1f3fe8321c0 <col:13> 'const SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   | |         `-DeclRefExpr 0x1f3fe832188 <col:13> 'const SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x1f3fe839328 'extra' 'const SSL_TEST_EXTRA_CONF *'
|   | `-CompoundStmt 0x1f3fe8325d0 <col:44, line:338:5>
|   |   |-CaseStmt 0x1f3fe8322c0 <line:328:5, <invalid sloc>>
|   |   | |-ConstantExpr 0x1f3fe8322a8 <col:10> 'int'
|   |   | | `-DeclRefExpr 0x1f3fe832288 <col:10> 'int' EnumConstant 0x1f3fe876df8 'SSL_TEST_VERIFY_ACCEPT_ALL' 'int'
|   |   | `-NullStmt 0x1f3fe832480 <<invalid sloc>>
|   |   |-BreakStmt 0x1f3fe832488 <line:331:9>
|   |   |-CaseStmt 0x1f3fe8324c8 <line:332:5, <invalid sloc>>
|   |   | |-ConstantExpr 0x1f3fe8324b0 <col:10> 'int'
|   |   | | `-DeclRefExpr 0x1f3fe832490 <col:10> 'int' EnumConstant 0x1f3fe876e50 'SSL_TEST_VERIFY_REJECT_ALL' 'int'
|   |   | `-NullStmt 0x1f3fe832598 <<invalid sloc>>
|   |   |-BreakStmt 0x1f3fe8325a0 <line:335:9>
|   |   `-DefaultStmt 0x1f3fe8325b0 <line:336:5, line:337:9>
|   |     `-BreakStmt 0x1f3fe8325a8 <col:9>
|   |-SwitchStmt 0x1f3fe8326d0 <line:341:5, line:352:5>
|   | |-ImplicitCastExpr 0x1f3fe8326b8 <line:341:13, col:27> 'int' <IntegralCast>
|   | | `-ImplicitCastExpr 0x1f3fe8326a0 <col:13, col:27> 'ssl_servername_callback_t':'ssl_servername_callback_t' <LValueToRValue>
|   | |   `-MemberExpr 0x1f3fe832670 <col:13, col:27> 'const ssl_servername_callback_t':'const ssl_servername_callback_t' lvalue .servername_callback 0x1f3fe877a20
|   | |     `-MemberExpr 0x1f3fe832640 <col:13, col:20> 'const SSL_TEST_SERVER_CONF':'const SSL_TEST_SERVER_CONF' lvalue ->server 0x1f3fe877ea0
|   | |       `-ImplicitCastExpr 0x1f3fe832628 <col:13> 'const SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   | |         `-DeclRefExpr 0x1f3fe832608 <col:13> 'const SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x1f3fe839328 'extra' 'const SSL_TEST_EXTRA_CONF *'
|   | `-CompoundStmt 0x1f3fe832a58 <col:48, line:352:5>
|   |   |-CaseStmt 0x1f3fe832728 <line:342:5, <invalid sloc>>
|   |   | |-ConstantExpr 0x1f3fe832710 <col:10> 'int'
|   |   | | `-DeclRefExpr 0x1f3fe8326f0 <col:10> 'int' EnumConstant 0x1f3fe87c498 'SSL_TEST_SERVERNAME_IGNORE_MISMATCH' 'int'
|   |   | `-NullStmt 0x1f3fe832860 <<invalid sloc>>
|   |   |-BreakStmt 0x1f3fe832978 <line:345:9>
|   |   |-CaseStmt 0x1f3fe8329b8 <line:346:5, <invalid sloc>>
|   |   | |-ConstantExpr 0x1f3fe8329a0 <col:10> 'int'
|   |   | | `-DeclRefExpr 0x1f3fe832980 <col:10> 'int' EnumConstant 0x1f3fe87c4f0 'SSL_TEST_SERVERNAME_REJECT_MISMATCH' 'int'
|   |   | `-NullStmt 0x1f3fe832a00 <<invalid sloc>>
|   |   |-BreakStmt 0x1f3fe832a28 <line:349:9>
|   |   `-DefaultStmt 0x1f3fe832a38 <line:350:5, line:351:9>
|   |     `-BreakStmt 0x1f3fe832a30 <col:9>
|   |-IfStmt 0x1f3fe83a2d0 <line:354:5, line:362:5>
|   | |-BinaryOperator 0x1f3fe832b78 <line:354:9, col:38> 'int' '!='
|   | | |-ImplicitCastExpr 0x1f3fe832b60 <col:9, col:23> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x1f3fe832b48 <col:9, col:23> 'ssl_cert_status_t':'ssl_cert_status_t' <LValueToRValue>
|   | | |   `-MemberExpr 0x1f3fe832af8 <col:9, col:23> 'const ssl_cert_status_t':'const ssl_cert_status_t' lvalue .cert_status 0x1f3fe877c00
|   | | |     `-MemberExpr 0x1f3fe832ac8 <col:9, col:16> 'const SSL_TEST_SERVER_CONF':'const SSL_TEST_SERVER_CONF' lvalue ->server 0x1f3fe877ea0
|   | | |       `-ImplicitCastExpr 0x1f3fe832ab0 <col:9> 'const SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   | | |         `-DeclRefExpr 0x1f3fe832a90 <col:9> 'const SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x1f3fe839328 'extra' 'const SSL_TEST_EXTRA_CONF *'
|   | | `-DeclRefExpr 0x1f3fe832b28 <col:38> 'int' EnumConstant 0x1f3fe8772e0 'SSL_TEST_CERT_STATUS_NONE' 'int'
|   | `-CompoundStmt 0x1f3fe83a2c0 <col:65, line:362:5>
|   |-IfStmt 0x1f3fe83a560 <line:373:5, line:375:5>
|   | |-ImplicitCastExpr 0x1f3fe83a518 <line:373:9, col:23> 'int' <LValueToRValue>
|   | | `-MemberExpr 0x1f3fe83a4e8 <col:9, col:23> 'const int' lvalue .broken_session_ticket 0x1f3fe877b70
|   | |   `-MemberExpr 0x1f3fe83a4b8 <col:9, col:16> 'const SSL_TEST_SERVER_CONF':'const SSL_TEST_SERVER_CONF' lvalue ->server 0x1f3fe877ea0
|   | |     `-ImplicitCastExpr 0x1f3fe83a4a0 <col:9> 'const SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x1f3fe83a480 <col:9> 'const SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x1f3fe839328 'extra' 'const SSL_TEST_EXTRA_CONF *'
|   | `-CompoundStmt 0x1f3fe83a550 <col:46, line:375:5>
|   |-IfStmt 0x1f3fe83aae0 <line:377:5, line:383:5>
|   | |-BinaryOperator 0x1f3fe83a6c8 <line:377:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x1f3fe83a698 <.//openssl//file_jk/before\test\handshake_helper.c:377:9, col:23> 'char *' <LValueToRValue>
|   | | | `-MemberExpr 0x1f3fe83a5e0 <col:9, col:23> 'char *const' lvalue .npn_protocols 0x1f3fe877a90
|   | | |   `-MemberExpr 0x1f3fe83a5b0 <col:9, col:16> 'const SSL_TEST_SERVER_CONF':'const SSL_TEST_SERVER_CONF' lvalue ->server 0x1f3fe877ea0
|   | | |     `-ImplicitCastExpr 0x1f3fe83a598 <col:9> 'const SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x1f3fe83a578 <col:9> 'const SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x1f3fe839328 'extra' 'const SSL_TEST_EXTRA_CONF *'
|   | | `-ImplicitCastExpr 0x1f3fe83a6b0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x1f3fe83a678 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1f3fe83a650 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1f3fe83a610 <col:26> 'int' 0
|   | `-CompoundStmt 0x1f3fe83aac8 <.//openssl//file_jk/before\test\handshake_helper.c:377:46, line:383:5>
|   |   `-CallExpr 0x1f3fe83a930 <line:378:9, line:380:57> 'void'
|   |     |-ImplicitCastExpr 0x1f3fe83a918 <line:378:9> 'void (*)(const char *, unsigned char **, size_t *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1f3fe83a6e8 <col:9> 'void (const char *, unsigned char **, size_t *)' Function 0x1f3fe829238 'parse_protos' 'void (const char *, unsigned char **, size_t *)'
|   |     |-ImplicitCastExpr 0x1f3fe83a980 <col:22, col:36> 'const char *' <NoOp>
|   |     | `-ImplicitCastExpr 0x1f3fe83a968 <col:22, col:36> 'char *' <LValueToRValue>
|   |     |   `-MemberExpr 0x1f3fe83a770 <col:22, col:36> 'char *const' lvalue .npn_protocols 0x1f3fe877a90
|   |     |     `-MemberExpr 0x1f3fe83a740 <col:22, col:29> 'const SSL_TEST_SERVER_CONF':'const SSL_TEST_SERVER_CONF' lvalue ->server 0x1f3fe877ea0
|   |     |       `-ImplicitCastExpr 0x1f3fe83a728 <col:22> 'const SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   |     |         `-DeclRefExpr 0x1f3fe83a708 <col:22> 'const SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x1f3fe839328 'extra' 'const SSL_TEST_EXTRA_CONF *'
|   |     |-UnaryOperator 0x1f3fe83a820 <line:379:22, col:40> 'unsigned char **' prefix '&' cannot overflow
|   |     | `-MemberExpr 0x1f3fe83a7f0 <col:23, col:40> 'unsigned char *' lvalue ->npn_protocols 0x1f3fe825930
|   |     |   `-ImplicitCastExpr 0x1f3fe83a7d8 <col:23> 'CTX_DATA *' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x1f3fe83a7a0 <col:23> 'CTX_DATA *' lvalue ParmVar 0x1f3fe8393a0 'server_ctx_data' 'CTX_DATA *'
|   |     `-UnaryOperator 0x1f3fe83a8a0 <line:380:22, col:40> 'size_t *' prefix '&' cannot overflow
|   |       `-MemberExpr 0x1f3fe83a870 <col:23, col:40> 'size_t':'unsigned long long' lvalue ->npn_protocols_len 0x1f3fe825998
|   |         `-ImplicitCastExpr 0x1f3fe83a858 <col:23> 'CTX_DATA *' <LValueToRValue>
|   |           `-DeclRefExpr 0x1f3fe83a838 <col:23> 'CTX_DATA *' lvalue ParmVar 0x1f3fe8393a0 'server_ctx_data' 'CTX_DATA *'
|   |-IfStmt 0x1f3fe833108 <line:384:5, line:391:5>
|   | |-BinaryOperator 0x1f3fe83ac48 <line:384:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x1f3fe83ac18 <.//openssl//file_jk/before\test\handshake_helper.c:384:9, col:24> 'char *' <LValueToRValue>
|   | | | `-MemberExpr 0x1f3fe83ab60 <col:9, col:24> 'char *const' lvalue .npn_protocols 0x1f3fe877a90
|   | | |   `-MemberExpr 0x1f3fe83ab30 <col:9, col:16> 'const SSL_TEST_SERVER_CONF':'const SSL_TEST_SERVER_CONF' lvalue ->server2 0x1f3fe877f08
|   | | |     `-ImplicitCastExpr 0x1f3fe83ab18 <col:9> 'const SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x1f3fe83aaf8 <col:9> 'const SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x1f3fe839328 'extra' 'const SSL_TEST_EXTRA_CONF *'
|   | | `-ImplicitCastExpr 0x1f3fe83ac30 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x1f3fe83abf8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1f3fe83abd0 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1f3fe83ab90 <col:26> 'int' 0
|   | `-CompoundStmt 0x1f3fe8330e0 <.//openssl//file_jk/before\test\handshake_helper.c:384:47, line:391:5>
|   |   |-CallExpr 0x1f3fe83ae50 <line:385:9, line:387:58> 'void'
|   |   | |-ImplicitCastExpr 0x1f3fe83ae38 <line:385:9> 'void (*)(const char *, unsigned char **, size_t *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1f3fe83ac68 <col:9> 'void (const char *, unsigned char **, size_t *)' Function 0x1f3fe829238 'parse_protos' 'void (const char *, unsigned char **, size_t *)'
|   |   | |-ImplicitCastExpr 0x1f3fe83aea0 <col:22, col:37> 'const char *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x1f3fe83ae88 <col:22, col:37> 'char *' <LValueToRValue>
|   |   | |   `-MemberExpr 0x1f3fe83acf0 <col:22, col:37> 'char *const' lvalue .npn_protocols 0x1f3fe877a90
|   |   | |     `-MemberExpr 0x1f3fe83acc0 <col:22, col:29> 'const SSL_TEST_SERVER_CONF':'const SSL_TEST_SERVER_CONF' lvalue ->server2 0x1f3fe877f08
|   |   | |       `-ImplicitCastExpr 0x1f3fe83aca8 <col:22> 'const SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   |   | |         `-DeclRefExpr 0x1f3fe83ac88 <col:22> 'const SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x1f3fe839328 'extra' 'const SSL_TEST_EXTRA_CONF *'
|   |   | |-UnaryOperator 0x1f3fe83ada0 <line:386:22, col:41> 'unsigned char **' prefix '&' cannot overflow
|   |   | | `-MemberExpr 0x1f3fe83ad70 <col:23, col:41> 'unsigned char *' lvalue ->npn_protocols 0x1f3fe825930
|   |   | |   `-ImplicitCastExpr 0x1f3fe83ad58 <col:23> 'CTX_DATA *' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x1f3fe83ad20 <col:23> 'CTX_DATA *' lvalue ParmVar 0x1f3fe839418 'server2_ctx_data' 'CTX_DATA *'
|   |   | `-UnaryOperator 0x1f3fe83ae20 <line:387:22, col:41> 'size_t *' prefix '&' cannot overflow
|   |   |   `-MemberExpr 0x1f3fe83adf0 <col:23, col:41> 'size_t':'unsigned long long' lvalue ->npn_protocols_len 0x1f3fe825998
|   |   |     `-ImplicitCastExpr 0x1f3fe83add8 <col:23> 'CTX_DATA *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x1f3fe83adb8 <col:23> 'CTX_DATA *' lvalue ParmVar 0x1f3fe839418 'server2_ctx_data' 'CTX_DATA *'
|   |   |-DoStmt 0x1f3fe833078 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   |   | |-CompoundStmt 0x1f3fe833038 <line:106:8, line:111:5>
|   |   | | `-IfStmt 0x1f3fe833020 <line:107:9, line:110:9>
|   |   | |   |-OpaqueValueExpr 0x1f3fe833008 <<invalid sloc>> '_Bool'
|   |   | |   `-CompoundStmt 0x1f3fe832ff0 <line:107:27, line:110:9>
|   |   | |     `-CallExpr 0x1f3fe832fc8 <line:109:13, col:39> 'int'
|   |   | |       |-ImplicitCastExpr 0x1f3fe832fb0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   | |       | `-DeclRefExpr 0x1f3fe83af60 <col:13> 'int ()' Function 0x1f3fe8279f0 'OPENSSL_assert' 'int ()'
|   |   | |       `-UnaryOperator 0x1f3fe832f98 <col:28, <scratch space>:4:1> 'int' prefix '!' cannot overflow
|   |   | |         `-ImplicitCastExpr 0x1f3fe832f80 <col:1> 'char *' <ArrayToPointerDecay>
|   |   | |           `-StringLiteral 0x1f3fe83afb8 <col:1> 'char [20]' lvalue "server2_ctx != NULL"
|   |   | `-IntegerLiteral 0x1f3fe833050 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |   `-NullStmt 0x1f3fe833098 <.//openssl//file_jk/before\test\handshake_helper.c:388:40>
|   |-IfStmt 0x1f3fe833628 <line:392:5, line:398:5>
|   | |-BinaryOperator 0x1f3fe833270 <line:392:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x1f3fe833240 <.//openssl//file_jk/before\test\handshake_helper.c:392:9, col:23> 'char *' <LValueToRValue>
|   | | | `-MemberExpr 0x1f3fe833188 <col:9, col:23> 'char *const' lvalue .npn_protocols 0x1f3fe8776a0
|   | | |   `-MemberExpr 0x1f3fe833158 <col:9, col:16> 'const SSL_TEST_CLIENT_CONF':'const SSL_TEST_CLIENT_CONF' lvalue ->client 0x1f3fe877e10
|   | | |     `-ImplicitCastExpr 0x1f3fe833140 <col:9> 'const SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x1f3fe833120 <col:9> 'const SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x1f3fe839328 'extra' 'const SSL_TEST_EXTRA_CONF *'
|   | | `-ImplicitCastExpr 0x1f3fe833258 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x1f3fe833220 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1f3fe8331f8 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1f3fe8331b8 <col:26> 'int' 0
|   | `-CompoundStmt 0x1f3fe833610 <.//openssl//file_jk/before\test\handshake_helper.c:392:46, line:398:5>
|   |   `-CallExpr 0x1f3fe833478 <line:393:9, line:395:57> 'void'
|   |     |-ImplicitCastExpr 0x1f3fe833460 <line:393:9> 'void (*)(const char *, unsigned char **, size_t *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1f3fe833290 <col:9> 'void (const char *, unsigned char **, size_t *)' Function 0x1f3fe829238 'parse_protos' 'void (const char *, unsigned char **, size_t *)'
|   |     |-ImplicitCastExpr 0x1f3fe8334c8 <col:22, col:36> 'const char *' <NoOp>
|   |     | `-ImplicitCastExpr 0x1f3fe8334b0 <col:22, col:36> 'char *' <LValueToRValue>
|   |     |   `-MemberExpr 0x1f3fe833318 <col:22, col:36> 'char *const' lvalue .npn_protocols 0x1f3fe8776a0
|   |     |     `-MemberExpr 0x1f3fe8332e8 <col:22, col:29> 'const SSL_TEST_CLIENT_CONF':'const SSL_TEST_CLIENT_CONF' lvalue ->client 0x1f3fe877e10
|   |     |       `-ImplicitCastExpr 0x1f3fe8332d0 <col:22> 'const SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   |     |         `-DeclRefExpr 0x1f3fe8332b0 <col:22> 'const SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x1f3fe839328 'extra' 'const SSL_TEST_EXTRA_CONF *'
|   |     |-UnaryOperator 0x1f3fe8333c8 <line:394:22, col:40> 'unsigned char **' prefix '&' cannot overflow
|   |     | `-MemberExpr 0x1f3fe833398 <col:23, col:40> 'unsigned char *' lvalue ->npn_protocols 0x1f3fe825930
|   |     |   `-ImplicitCastExpr 0x1f3fe833380 <col:23> 'CTX_DATA *' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x1f3fe833348 <col:23> 'CTX_DATA *' lvalue ParmVar 0x1f3fe839490 'client_ctx_data' 'CTX_DATA *'
|   |     `-UnaryOperator 0x1f3fe833448 <line:395:22, col:40> 'size_t *' prefix '&' cannot overflow
|   |       `-MemberExpr 0x1f3fe833418 <col:23, col:40> 'size_t':'unsigned long long' lvalue ->npn_protocols_len 0x1f3fe825998
|   |         `-ImplicitCastExpr 0x1f3fe833400 <col:23> 'CTX_DATA *' <LValueToRValue>
|   |           `-DeclRefExpr 0x1f3fe8333e0 <col:23> 'CTX_DATA *' lvalue ParmVar 0x1f3fe839490 'client_ctx_data' 'CTX_DATA *'
|   |-IfStmt 0x1f3fe833b30 <line:400:5, line:405:5>
|   | |-BinaryOperator 0x1f3fe833790 <line:400:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x1f3fe833760 <.//openssl//file_jk/before\test\handshake_helper.c:400:9, col:23> 'char *' <LValueToRValue>
|   | | | `-MemberExpr 0x1f3fe8336a8 <col:9, col:23> 'char *const' lvalue .alpn_protocols 0x1f3fe877b00
|   | | |   `-MemberExpr 0x1f3fe833678 <col:9, col:16> 'const SSL_TEST_SERVER_CONF':'const SSL_TEST_SERVER_CONF' lvalue ->server 0x1f3fe877ea0
|   | | |     `-ImplicitCastExpr 0x1f3fe833660 <col:9> 'const SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x1f3fe833640 <col:9> 'const SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x1f3fe839328 'extra' 'const SSL_TEST_EXTRA_CONF *'
|   | | `-ImplicitCastExpr 0x1f3fe833778 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x1f3fe833740 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1f3fe833718 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1f3fe8336d8 <col:26> 'int' 0
|   | `-CompoundStmt 0x1f3fe833b18 <.//openssl//file_jk/before\test\handshake_helper.c:400:47, line:405:5>
|   |   `-CallExpr 0x1f3fe833980 <line:401:9, line:403:58> 'void'
|   |     |-ImplicitCastExpr 0x1f3fe833968 <line:401:9> 'void (*)(const char *, unsigned char **, size_t *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1f3fe8337b0 <col:9> 'void (const char *, unsigned char **, size_t *)' Function 0x1f3fe829238 'parse_protos' 'void (const char *, unsigned char **, size_t *)'
|   |     |-ImplicitCastExpr 0x1f3fe8339d0 <col:22, col:36> 'const char *' <NoOp>
|   |     | `-ImplicitCastExpr 0x1f3fe8339b8 <col:22, col:36> 'char *' <LValueToRValue>
|   |     |   `-MemberExpr 0x1f3fe833838 <col:22, col:36> 'char *const' lvalue .alpn_protocols 0x1f3fe877b00
|   |     |     `-MemberExpr 0x1f3fe833808 <col:22, col:29> 'const SSL_TEST_SERVER_CONF':'const SSL_TEST_SERVER_CONF' lvalue ->server 0x1f3fe877ea0
|   |     |       `-ImplicitCastExpr 0x1f3fe8337f0 <col:22> 'const SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   |     |         `-DeclRefExpr 0x1f3fe8337d0 <col:22> 'const SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x1f3fe839328 'extra' 'const SSL_TEST_EXTRA_CONF *'
|   |     |-UnaryOperator 0x1f3fe8338d0 <line:402:22, col:40> 'unsigned char **' prefix '&' cannot overflow
|   |     | `-MemberExpr 0x1f3fe8338a0 <col:23, col:40> 'unsigned char *' lvalue ->alpn_protocols 0x1f3fe825a08
|   |     |   `-ImplicitCastExpr 0x1f3fe833888 <col:23> 'CTX_DATA *' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x1f3fe833868 <col:23> 'CTX_DATA *' lvalue ParmVar 0x1f3fe8393a0 'server_ctx_data' 'CTX_DATA *'
|   |     `-UnaryOperator 0x1f3fe833950 <line:403:22, col:40> 'size_t *' prefix '&' cannot overflow
|   |       `-MemberExpr 0x1f3fe833920 <col:23, col:40> 'size_t':'unsigned long long' lvalue ->alpn_protocols_len 0x1f3fe825a70
|   |         `-ImplicitCastExpr 0x1f3fe833908 <col:23> 'CTX_DATA *' <LValueToRValue>
|   |           `-DeclRefExpr 0x1f3fe8338e8 <col:23> 'CTX_DATA *' lvalue ParmVar 0x1f3fe8393a0 'server_ctx_data' 'CTX_DATA *'
|   |-IfStmt 0x1f3fe8361c8 <line:406:5, line:412:5>
|   | |-BinaryOperator 0x1f3fe833c98 <line:406:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x1f3fe833c68 <.//openssl//file_jk/before\test\handshake_helper.c:406:9, col:24> 'char *' <LValueToRValue>
|   | | | `-MemberExpr 0x1f3fe833bb0 <col:9, col:24> 'char *const' lvalue .alpn_protocols 0x1f3fe877b00
|   | | |   `-MemberExpr 0x1f3fe833b80 <col:9, col:16> 'const SSL_TEST_SERVER_CONF':'const SSL_TEST_SERVER_CONF' lvalue ->server2 0x1f3fe877f08
|   | | |     `-ImplicitCastExpr 0x1f3fe833b68 <col:9> 'const SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x1f3fe833b48 <col:9> 'const SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x1f3fe839328 'extra' 'const SSL_TEST_EXTRA_CONF *'
|   | | `-ImplicitCastExpr 0x1f3fe833c80 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x1f3fe833c48 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1f3fe833c20 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1f3fe833be0 <col:26> 'int' 0
|   | `-CompoundStmt 0x1f3fe8361a0 <.//openssl//file_jk/before\test\handshake_helper.c:406:48, line:412:5>
|   |   |-DoStmt 0x1f3fe833ea8 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   |   | |-CompoundStmt 0x1f3fe833e68 <line:106:8, line:111:5>
|   |   | | `-IfStmt 0x1f3fe833e50 <line:107:9, line:110:9>
|   |   | |   |-OpaqueValueExpr 0x1f3fe833e38 <<invalid sloc>> '_Bool'
|   |   | |   `-CompoundStmt 0x1f3fe833e20 <line:107:27, line:110:9>
|   |   | |     `-CallExpr 0x1f3fe833df8 <line:109:13, col:39> 'int'
|   |   | |       |-ImplicitCastExpr 0x1f3fe833de0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   | |       | `-DeclRefExpr 0x1f3fe833d60 <col:13> 'int ()' Function 0x1f3fe8279f0 'OPENSSL_assert' 'int ()'
|   |   | |       `-UnaryOperator 0x1f3fe833dc8 <col:28, <scratch space>:5:1> 'int' prefix '!' cannot overflow
|   |   | |         `-ImplicitCastExpr 0x1f3fe833db0 <col:1> 'char *' <ArrayToPointerDecay>
|   |   | |           `-StringLiteral 0x1f3fe833d80 <col:1> 'char [20]' lvalue "server2_ctx != NULL"
|   |   | `-IntegerLiteral 0x1f3fe833e80 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |   |-NullStmt 0x1f3fe833ec8 <.//openssl//file_jk/before\test\handshake_helper.c:407:40>
|   |   `-CallExpr 0x1f3fe8360f8 <line:408:9, line:410:59> 'void'
|   |     |-ImplicitCastExpr 0x1f3fe8360e0 <line:408:9> 'void (*)(const char *, unsigned char **, size_t *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1f3fe833ed0 <col:9> 'void (const char *, unsigned char **, size_t *)' Function 0x1f3fe829238 'parse_protos' 'void (const char *, unsigned char **, size_t *)'
|   |     |-ImplicitCastExpr 0x1f3fe836148 <col:22, col:37> 'const char *' <NoOp>
|   |     | `-ImplicitCastExpr 0x1f3fe836130 <col:22, col:37> 'char *' <LValueToRValue>
|   |     |   `-MemberExpr 0x1f3fe835fb0 <col:22, col:37> 'char *const' lvalue .alpn_protocols 0x1f3fe877b00
|   |     |     `-MemberExpr 0x1f3fe833f28 <col:22, col:29> 'const SSL_TEST_SERVER_CONF':'const SSL_TEST_SERVER_CONF' lvalue ->server2 0x1f3fe877f08
|   |     |       `-ImplicitCastExpr 0x1f3fe833f10 <col:22> 'const SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   |     |         `-DeclRefExpr 0x1f3fe833ef0 <col:22> 'const SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x1f3fe839328 'extra' 'const SSL_TEST_EXTRA_CONF *'
|   |     |-UnaryOperator 0x1f3fe836048 <line:409:22, col:41> 'unsigned char **' prefix '&' cannot overflow
|   |     | `-MemberExpr 0x1f3fe836018 <col:23, col:41> 'unsigned char *' lvalue ->alpn_protocols 0x1f3fe825a08
|   |     |   `-ImplicitCastExpr 0x1f3fe836000 <col:23> 'CTX_DATA *' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x1f3fe835fe0 <col:23> 'CTX_DATA *' lvalue ParmVar 0x1f3fe839418 'server2_ctx_data' 'CTX_DATA *'
|   |     `-UnaryOperator 0x1f3fe8360c8 <line:410:22, col:41> 'size_t *' prefix '&' cannot overflow
|   |       `-MemberExpr 0x1f3fe836098 <col:23, col:41> 'size_t':'unsigned long long' lvalue ->alpn_protocols_len 0x1f3fe825a70
|   |         `-ImplicitCastExpr 0x1f3fe836080 <col:23> 'CTX_DATA *' <LValueToRValue>
|   |           `-DeclRefExpr 0x1f3fe836060 <col:23> 'CTX_DATA *' lvalue ParmVar 0x1f3fe839418 'server2_ctx_data' 'CTX_DATA *'
|   |-IfStmt 0x1f3fe836b40 <line:413:5, line:422:5>
|   | |-BinaryOperator 0x1f3fe836330 <line:413:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x1f3fe836300 <.//openssl//file_jk/before\test\handshake_helper.c:413:9, col:23> 'char *' <LValueToRValue>
|   | | | `-MemberExpr 0x1f3fe836248 <col:9, col:23> 'char *const' lvalue .alpn_protocols 0x1f3fe877710
|   | | |   `-MemberExpr 0x1f3fe836218 <col:9, col:16> 'const SSL_TEST_CLIENT_CONF':'const SSL_TEST_CLIENT_CONF' lvalue ->client 0x1f3fe877e10
|   | | |     `-ImplicitCastExpr 0x1f3fe836200 <col:9> 'const SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x1f3fe8361e0 <col:9> 'const SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x1f3fe839328 'extra' 'const SSL_TEST_EXTRA_CONF *'
|   | | `-ImplicitCastExpr 0x1f3fe836318 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x1f3fe8362e0 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1f3fe8362b8 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1f3fe836278 <col:26> 'int' 0
|   | `-CompoundStmt 0x1f3fe836b00 <.//openssl//file_jk/before\test\handshake_helper.c:413:47, line:422:5>
|   |   |-DeclStmt 0x1f3fe836470 <line:414:9, col:42>
|   |   | `-VarDecl 0x1f3fe836368 <col:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/before\test\handshake_helper.c:414:24 used alpn_protos 'unsigned char *' cinit
|   |   |   `-ImplicitCastExpr 0x1f3fe836458 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'unsigned char *' <NullToPointer>
|   |   |     `-ParenExpr 0x1f3fe836438 <col:17, col:27> 'void *'
|   |   |       `-CStyleCastExpr 0x1f3fe836410 <col:18, col:26> 'void *' <NullToPointer>
|   |   |         `-IntegerLiteral 0x1f3fe8363d0 <col:26> 'int' 0
|   |   |-DeclStmt 0x1f3fe836500 <.//openssl//file_jk/before\test\handshake_helper.c:415:9, col:31>
|   |   | `-VarDecl 0x1f3fe836498 <col:9, col:16> col:16 used alpn_protos_len 'size_t':'unsigned long long'
|   |   |-CallExpr 0x1f3fe836688 <line:416:9, line:417:52> 'void'
|   |   | |-ImplicitCastExpr 0x1f3fe836670 <line:416:9> 'void (*)(const char *, unsigned char **, size_t *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1f3fe836518 <col:9> 'void (const char *, unsigned char **, size_t *)' Function 0x1f3fe829238 'parse_protos' 'void (const char *, unsigned char **, size_t *)'
|   |   | |-ImplicitCastExpr 0x1f3fe8366d8 <col:22, col:36> 'const char *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x1f3fe8366c0 <col:22, col:36> 'char *' <LValueToRValue>
|   |   | |   `-MemberExpr 0x1f3fe8365a0 <col:22, col:36> 'char *const' lvalue .alpn_protocols 0x1f3fe877710
|   |   | |     `-MemberExpr 0x1f3fe836570 <col:22, col:29> 'const SSL_TEST_CLIENT_CONF':'const SSL_TEST_CLIENT_CONF' lvalue ->client 0x1f3fe877e10
|   |   | |       `-ImplicitCastExpr 0x1f3fe836558 <col:22> 'const SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   |   | |         `-DeclRefExpr 0x1f3fe836538 <col:22> 'const SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x1f3fe839328 'extra' 'const SSL_TEST_EXTRA_CONF *'
|   |   | |-UnaryOperator 0x1f3fe836608 <line:417:22, col:23> 'unsigned char **' prefix '&' cannot overflow
|   |   | | `-DeclRefExpr 0x1f3fe8365d0 <col:23> 'unsigned char *' lvalue Var 0x1f3fe836368 'alpn_protos' 'unsigned char *'
|   |   | `-UnaryOperator 0x1f3fe836658 <col:36, col:37> 'size_t *' prefix '&' cannot overflow
|   |   |   `-DeclRefExpr 0x1f3fe836620 <col:37> 'size_t':'unsigned long long' lvalue Var 0x1f3fe836498 'alpn_protos_len' 'size_t':'unsigned long long'
|   |   |-DoStmt 0x1f3fe836a40 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   |   | |-CompoundStmt 0x1f3fe836a00 <line:106:8, line:111:5>
|   |   | | `-IfStmt 0x1f3fe8369e8 <line:107:9, line:110:9>
|   |   | |   |-OpaqueValueExpr 0x1f3fe8369d0 <<invalid sloc>> '_Bool'
|   |   | |   `-CompoundStmt 0x1f3fe8369b8 <line:107:27, line:110:9>
|   |   | |     `-CallExpr 0x1f3fe836990 <line:109:13, col:39> 'int'
|   |   | |       |-ImplicitCastExpr 0x1f3fe836978 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   | |       | `-DeclRefExpr 0x1f3fe836888 <col:13> 'int ()' Function 0x1f3fe8279f0 'OPENSSL_assert' 'int ()'
|   |   | |       `-UnaryOperator 0x1f3fe836960 <col:28, <scratch space>:6:1> 'int' prefix '!' cannot overflow
|   |   | |         `-ImplicitCastExpr 0x1f3fe836948 <col:1> 'char *' <ArrayToPointerDecay>
|   |   | |           `-StringLiteral 0x1f3fe8368e8 <col:1> 'char [71]' lvalue "SSL_CTX_set_alpn_protos(client_ctx, alpn_protos, alpn_protos_len) == 0"
|   |   | `-IntegerLiteral 0x1f3fe836a18 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |   |-NullStmt 0x1f3fe836a60 <.//openssl//file_jk/before\test\handshake_helper.c:420:66>
|   |   `-CallExpr 0x1f3fe836ac0 <line:421:9, col:33> 'int'
|   |     |-ImplicitCastExpr 0x1f3fe836aa8 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1f3fe836a68 <col:9> 'int ()' Function 0x1f3fe824f60 'OPENSSL_free' 'int ()'
|   |     `-ImplicitCastExpr 0x1f3fe836ae8 <col:22> 'unsigned char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1f3fe836a88 <col:22> 'unsigned char *' lvalue Var 0x1f3fe836368 'alpn_protos' 'unsigned char *'
|   |-BinaryOperator 0x1f3fe836e38 <line:429:5, col:48> 'unsigned char *' '='
|   | |-DeclRefExpr 0x1f3fe836d50 <col:5> 'unsigned char *' lvalue Var 0x1f3fe839748 'ticket_keys' 'unsigned char *'
|   | `-ImplicitCastExpr 0x1f3fe836e20 <col:19, col:48> 'unsigned char *' <IntegralToPointer>
|   |   `-CallExpr 0x1f3fe836de0 <col:19, col:48> 'int'
|   |     |-ImplicitCastExpr 0x1f3fe836dc8 <col:19> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1f3fe836d88 <col:19> 'int ()' Function 0x1f3fe827588 'OPENSSL_zalloc' 'int ()'
|   |     `-ImplicitCastExpr 0x1f3fe836e08 <col:34> 'size_t':'unsigned long long' <LValueToRValue>
|   |       `-DeclRefExpr 0x1f3fe836da8 <col:34> 'size_t':'unsigned long long' lvalue Var 0x1f3fe8397d8 'ticket_key_len' 'size_t':'unsigned long long'
|   |-DoStmt 0x1f3fe83b130 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x1f3fe83b0f0 <line:106:8, line:111:5>
|   | | `-IfStmt 0x1f3fe83b0d8 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x1f3fe836f70 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x1f3fe836f50 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x1f3fe836f30 <.//openssl//file_jk/before\test\handshake_helper.c:430:16, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | |   |     |-ImplicitCastExpr 0x1f3fe836f00 <.//openssl//file_jk/before\test\handshake_helper.c:430:16> 'unsigned char *' <LValueToRValue>
|   | |   |     | `-DeclRefExpr 0x1f3fe836e58 <col:16> 'unsigned char *' lvalue Var 0x1f3fe839748 'ticket_keys' 'unsigned char *'
|   | |   |     `-ImplicitCastExpr 0x1f3fe836f18 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'unsigned char *' <BitCast>
|   | |   |       `-ParenExpr 0x1f3fe836ee0 <col:17, col:27> 'void *'
|   | |   |         `-CStyleCastExpr 0x1f3fe836eb8 <col:18, col:26> 'void *' <NullToPointer>
|   | |   |           `-IntegerLiteral 0x1f3fe836e78 <col:26> 'int' 0
|   | |   `-CompoundStmt 0x1f3fe83b0c0 <.//openssl//file_jk/before\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x1f3fe83b098 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x1f3fe83b080 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x1f3fe83b000 <col:13> 'int ()' Function 0x1f3fe8279f0 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x1f3fe83b068 <col:28, <scratch space>:7:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x1f3fe83b050 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x1f3fe83b020 <col:1> 'char [20]' lvalue "ticket_keys != NULL"
|   | `-IntegerLiteral 0x1f3fe83b108 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x1f3fe83b150 <.//openssl//file_jk/before\test\handshake_helper.c:430:36>
|   |-DoStmt 0x1f3fe83b3b8 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x1f3fe83b378 <line:106:8, line:111:5>
|   | | `-IfStmt 0x1f3fe83b360 <line:107:9, line:110:9>
|   | |   |-OpaqueValueExpr 0x1f3fe83b348 <<invalid sloc>> '_Bool'
|   | |   `-CompoundStmt 0x1f3fe83b330 <line:107:27, line:110:9>
|   | |     `-CallExpr 0x1f3fe83b308 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x1f3fe83b2f0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x1f3fe83b200 <col:13> 'int ()' Function 0x1f3fe8279f0 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x1f3fe83b2d8 <col:28, <scratch space>:8:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x1f3fe83b2c0 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x1f3fe83b258 <col:1> 'char [77]' lvalue "SSL_CTX_set_tlsext_ticket_keys(server_ctx, ticket_keys, ticket_key_len) == 1"
|   | `-IntegerLiteral 0x1f3fe83b390 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x1f3fe83b3d8 <.//openssl//file_jk/before\test\handshake_helper.c:432:68>
|   |-CallExpr 0x1f3fe83b438 <line:433:5, col:29> 'int'
|   | |-ImplicitCastExpr 0x1f3fe83b420 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1f3fe83b3e0 <col:5> 'int ()' Function 0x1f3fe824f60 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x1f3fe83b460 <col:18> 'unsigned char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1f3fe83b400 <col:18> 'unsigned char *' lvalue Var 0x1f3fe839748 'ticket_keys' 'unsigned char *'
|   |-DoStmt 0x1f3fe83b748 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x1f3fe83b708 <line:106:8, line:111:5>
|   | | `-IfStmt 0x1f3fe83b6f0 <line:107:9, line:110:9>
|   | |   |-OpaqueValueExpr 0x1f3fe83b6d8 <<invalid sloc>> '_Bool'
|   | |   `-CompoundStmt 0x1f3fe83b6c0 <line:107:27, line:110:9>
|   | |     `-CallExpr 0x1f3fe83b698 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x1f3fe83b680 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x1f3fe83b5a8 <col:13> 'int ()' Function 0x1f3fe8279f0 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x1f3fe83b668 <col:28, <scratch space>:9:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x1f3fe83b650 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x1f3fe83b608 <col:1> 'char [48]' lvalue "SSL_CTX_set_default_ctlog_list_file(client_ctx)"
|   | `-IntegerLiteral 0x1f3fe83b720 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x1f3fe83b768 <.//openssl//file_jk/before\test\handshake_helper.c:437:64>
|   `-SwitchStmt 0x1f3fe83b838 <line:438:5, line:447:5>
|     |-ImplicitCastExpr 0x1f3fe83b820 <line:438:13, col:27> 'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x1f3fe83b808 <col:13, col:27> 'ssl_ct_validation_t':'ssl_ct_validation_t' <LValueToRValue>
|     |   `-MemberExpr 0x1f3fe83b7d8 <col:13, col:27> 'const ssl_ct_validation_t':'const ssl_ct_validation_t' lvalue .ct_validation 0x1f3fe8777a0
|     |     `-MemberExpr 0x1f3fe83b7a8 <col:13, col:20> 'const SSL_TEST_CLIENT_CONF':'const SSL_TEST_CLIENT_CONF' lvalue ->client 0x1f3fe877e10
|     |       `-ImplicitCastExpr 0x1f3fe83b790 <col:13> 'const SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|     |         `-DeclRefExpr 0x1f3fe83b770 <col:13> 'const SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x1f3fe839328 'extra' 'const SSL_TEST_EXTRA_CONF *'
|     `-CompoundStmt 0x1f3fe83bea8 <col:42, line:447:5>
|       |-CaseStmt 0x1f3fe83b890 <line:439:5, .//openssl//file_jk/before\test/testutil.h:111:15>
|       | |-ConstantExpr 0x1f3fe83b878 <.//openssl//file_jk/before\test\handshake_helper.c:439:10> 'int'
|       | | `-DeclRefExpr 0x1f3fe83b858 <col:10> 'int' EnumConstant 0x1f3fe87d098 'SSL_TEST_CT_VALIDATION_PERMISSIVE' 'int'
|       | `-DoStmt 0x1f3fe83bb98 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|       |   |-CompoundStmt 0x1f3fe83bb58 <line:106:8, line:111:5>
|       |   | `-IfStmt 0x1f3fe83bb40 <line:107:9, line:110:9>
|       |   |   |-OpaqueValueExpr 0x1f3fe83bb28 <<invalid sloc>> '_Bool'
|       |   |   `-CompoundStmt 0x1f3fe83bb10 <line:107:27, line:110:9>
|       |   |     `-CallExpr 0x1f3fe83bae8 <line:109:13, col:39> 'int'
|       |   |       |-ImplicitCastExpr 0x1f3fe83bad0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|       |   |       | `-DeclRefExpr 0x1f3fe83b9e8 <col:13> 'int ()' Function 0x1f3fe8279f0 'OPENSSL_assert' 'int ()'
|       |   |       `-UnaryOperator 0x1f3fe83bab8 <col:28, <scratch space>:10:1> 'int' prefix '!' cannot overflow
|       |   |         `-ImplicitCastExpr 0x1f3fe83baa0 <col:1> 'char *' <ArrayToPointerDecay>
|       |   |           `-StringLiteral 0x1f3fe83ba48 <col:1> 'char [60]' lvalue "SSL_CTX_enable_ct(client_ctx, SSL_CT_VALIDATION_PERMISSIVE)"
|       |   `-IntegerLiteral 0x1f3fe83bb70 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|       |-NullStmt 0x1f3fe83bbb8 <.//openssl//file_jk/before\test\handshake_helper.c:440:80>
|       |-BreakStmt 0x1f3fe83bbc0 <line:441:9>
|       |-CaseStmt 0x1f3fe83bc00 <line:442:5, .//openssl//file_jk/before\test/testutil.h:111:15>
|       | |-ConstantExpr 0x1f3fe83bbe8 <.//openssl//file_jk/before\test\handshake_helper.c:442:10> 'int'
|       | | `-DeclRefExpr 0x1f3fe83bbc8 <col:10> 'int' EnumConstant 0x1f3fe87d0f0 'SSL_TEST_CT_VALIDATION_STRICT' 'int'
|       | `-DoStmt 0x1f3fe83be10 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|       |   |-CompoundStmt 0x1f3fe83bdd0 <line:106:8, line:111:5>
|       |   | `-IfStmt 0x1f3fe83bdb8 <line:107:9, line:110:9>
|       |   |   |-OpaqueValueExpr 0x1f3fe83bda0 <<invalid sloc>> '_Bool'
|       |   |   `-CompoundStmt 0x1f3fe83bd88 <line:107:27, line:110:9>
|       |   |     `-CallExpr 0x1f3fe83bd60 <line:109:13, col:39> 'int'
|       |   |       |-ImplicitCastExpr 0x1f3fe83bd48 <col:13> 'int (*)()' <FunctionToPointerDecay>
|       |   |       | `-DeclRefExpr 0x1f3fe83bc68 <col:13> 'int ()' Function 0x1f3fe8279f0 'OPENSSL_assert' 'int ()'
|       |   |       `-UnaryOperator 0x1f3fe83bd30 <col:28, <scratch space>:11:1> 'int' prefix '!' cannot overflow
|       |   |         `-ImplicitCastExpr 0x1f3fe83bd18 <col:1> 'char *' <ArrayToPointerDecay>
|       |   |           `-StringLiteral 0x1f3fe83bcc8 <col:1> 'char [56]' lvalue "SSL_CTX_enable_ct(client_ctx, SSL_CT_VALIDATION_STRICT)"
|       |   `-IntegerLiteral 0x1f3fe83bde8 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|       |-NullStmt 0x1f3fe83be30 <.//openssl//file_jk/before\test\handshake_helper.c:443:76>
|       |-BreakStmt 0x1f3fe83be38 <line:444:9>
|       `-CaseStmt 0x1f3fe83be78 <line:445:5, line:446:9>
|         |-ConstantExpr 0x1f3fe83be60 <line:445:10> 'int'
|         | `-DeclRefExpr 0x1f3fe83be40 <col:10> 'int' EnumConstant 0x1f3fe87d040 'SSL_TEST_CT_VALIDATION_NONE' 'int'
|         `-BreakStmt 0x1f3fe83bea0 <line:446:9>
|-FunctionDecl 0x1f3fe8341a8 <line:452:1, line:458:1> line:452:13 invalid configure_handshake_ssl 'void (int *, int *, const SSL_TEST_EXTRA_CONF *)' static
| |-ParmVarDecl 0x1f3fe833f90 <col:37, col:42> col:42 invalid server 'int *'
| |-ParmVarDecl 0x1f3fe834010 <col:50, col:55> col:55 invalid client 'int *'
| |-ParmVarDecl 0x1f3fe834088 <line:453:37, col:64> col:64 used extra 'const SSL_TEST_EXTRA_CONF *'
| `-CompoundStmt 0x1f3fe834610 <line:454:1, line:458:1>
|-EnumDecl 0x1f3fe834620 <line:461:9, line:465:1> line:461:9
| |-EnumConstantDecl 0x1f3fe834700 <line:462:5> col:5 referenced PEER_SUCCESS 'int'
| |-EnumConstantDecl 0x1f3fe834758 <line:463:5> col:5 referenced PEER_RETRY 'int'
| `-EnumConstantDecl 0x1f3fe8347b0 <line:464:5> col:5 referenced PEER_ERROR 'int'
|-TypedefDecl 0x1f3fe834868 <line:461:1, line:465:3> col:3 referenced peer_status_t 'enum peer_status_t':'peer_status_t'
| `-ElaboratedType 0x1f3fe834810 'enum peer_status_t' sugar
|   `-EnumType 0x1f3fe8346e0 'peer_status_t'
|     `-Enum 0x1f3fe834620 ''
|-RecordDecl 0x1f3fe8348d8 <line:468:9, line:478:1> line:468:16 invalid struct peer_st definition
| |-FieldDecl 0x1f3fe8349a8 <line:469:5, col:10> col:10 invalid ssl 'int *'
| |-FieldDecl 0x1f3fe834a18 <line:471:5, col:20> col:20 referenced write_buf 'unsigned char *'
| |-FieldDecl 0x1f3fe834a88 <line:472:5, col:9> col:9 referenced write_buf_len 'int'
| |-FieldDecl 0x1f3fe834af8 <line:473:5, col:20> col:20 referenced read_buf 'unsigned char *'
| |-FieldDecl 0x1f3fe834b68 <line:474:5, col:9> col:9 referenced read_buf_len 'int'
| |-FieldDecl 0x1f3fe834bd8 <line:475:5, col:9> col:9 referenced bytes_to_write 'int'
| |-FieldDecl 0x1f3fe834c48 <line:476:5, col:9> col:9 referenced bytes_to_read 'int'
| `-FieldDecl 0x1f3fe834cd0 <line:477:5, col:19> col:19 referenced status 'peer_status_t':'peer_status_t'
|-TypedefDecl 0x1f3fe834d88 <line:468:1, line:478:3> col:3 referenced PEER 'struct peer_st':'struct peer_st'
| `-ElaboratedType 0x1f3fe834d30 'struct peer_st' sugar
|   `-RecordType 0x1f3fe834970 'struct peer_st'
|     `-Record 0x1f3fe8348d8 'peer_st'
|-FunctionDecl 0x1f3fe83c0b8 <line:480:1, line:491:1> line:480:13 invalid create_peer 'void (PEER *, int *)' static
| |-ParmVarDecl 0x1f3fe834e88 <col:25, col:31> col:31 used peer 'PEER *'
| |-ParmVarDecl 0x1f3fe834f08 <col:37, col:46> col:46 invalid ctx 'int *'
| `-CompoundStmt 0x1f3fe83d110 <line:481:1, line:491:1>
|   |-DeclStmt 0x1f3fe83c270 <line:482:5, col:50>
|   | `-VarDecl 0x1f3fe83c198 <col:5, col:46> col:22 used peer_buffer_size 'const int' static cinit
|   |   `-BinaryOperator 0x1f3fe83c250 <col:41, col:46> 'int' '*'
|   |     |-IntegerLiteral 0x1f3fe83c200 <col:41> 'int' 64
|   |     `-IntegerLiteral 0x1f3fe83c228 <col:46> 'int' 1024
|   |-DoStmt 0x1f3fe83c650 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x1f3fe83c610 <line:106:8, line:111:5>
|   | | `-IfStmt 0x1f3fe83c5f8 <line:107:9, line:110:9>
|   | |   |-OpaqueValueExpr 0x1f3fe83c5e0 <<invalid sloc>> '_Bool'
|   | |   `-CompoundStmt 0x1f3fe83c5c8 <line:107:27, line:110:9>
|   | |     `-CallExpr 0x1f3fe83c5a0 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x1f3fe83c588 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x1f3fe83c4c8 <col:13> 'int ()' Function 0x1f3fe8279f0 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x1f3fe83c570 <col:28, <scratch space>:12:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x1f3fe83c558 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x1f3fe83c528 <col:1> 'char [18]' lvalue "peer->ssl != NULL"
|   | `-IntegerLiteral 0x1f3fe83c628 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x1f3fe83c670 <.//openssl//file_jk/before\test\handshake_helper.c:485:34>
|   |-BinaryOperator 0x1f3fe83c7a8 <line:486:5, col:54> 'unsigned char *' '='
|   | |-MemberExpr 0x1f3fe83c6b0 <col:5, col:11> 'unsigned char *' lvalue ->write_buf 0x1f3fe834a18
|   | | `-ImplicitCastExpr 0x1f3fe83c698 <col:5> 'PEER *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1f3fe83c678 <col:5> 'PEER *' lvalue ParmVar 0x1f3fe834e88 'peer' 'PEER *'
|   | `-ImplicitCastExpr 0x1f3fe83c790 <col:23, col:54> 'unsigned char *' <IntegralToPointer>
|   |   `-CallExpr 0x1f3fe83c750 <col:23, col:54> 'int'
|   |     |-ImplicitCastExpr 0x1f3fe83c738 <col:23> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1f3fe83c6e0 <col:23> 'int ()' Function 0x1f3fe827588 'OPENSSL_zalloc' 'int ()'
|   |     `-ImplicitCastExpr 0x1f3fe83c778 <col:38> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x1f3fe83c700 <col:38> 'const int' lvalue Var 0x1f3fe83c198 'peer_buffer_size' 'const int'
|   |-DoStmt 0x1f3fe83cac8 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x1f3fe83ca88 <line:106:8, line:111:5>
|   | | `-IfStmt 0x1f3fe83ca70 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x1f3fe83c928 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x1f3fe83c908 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x1f3fe83c8e8 <.//openssl//file_jk/before\test\handshake_helper.c:487:16, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | |   |     |-ImplicitCastExpr 0x1f3fe83c8b8 <.//openssl//file_jk/before\test\handshake_helper.c:487:16, col:22> 'unsigned char *' <LValueToRValue>
|   | |   |     | `-MemberExpr 0x1f3fe83c800 <col:16, col:22> 'unsigned char *' lvalue ->write_buf 0x1f3fe834a18
|   | |   |     |   `-ImplicitCastExpr 0x1f3fe83c7e8 <col:16> 'PEER *' <LValueToRValue>
|   | |   |     |     `-DeclRefExpr 0x1f3fe83c7c8 <col:16> 'PEER *' lvalue ParmVar 0x1f3fe834e88 'peer' 'PEER *'
|   | |   |     `-ImplicitCastExpr 0x1f3fe83c8d0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'unsigned char *' <BitCast>
|   | |   |       `-ParenExpr 0x1f3fe83c898 <col:17, col:27> 'void *'
|   | |   |         `-CStyleCastExpr 0x1f3fe83c870 <col:18, col:26> 'void *' <NullToPointer>
|   | |   |           `-IntegerLiteral 0x1f3fe83c830 <col:26> 'int' 0
|   | |   `-CompoundStmt 0x1f3fe83ca58 <.//openssl//file_jk/before\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x1f3fe83ca30 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x1f3fe83ca18 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x1f3fe83c960 <col:13> 'int ()' Function 0x1f3fe8279f0 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x1f3fe83ca00 <col:28, <scratch space>:13:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x1f3fe83c9e8 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x1f3fe83c9b8 <col:1> 'char [24]' lvalue "peer->write_buf != NULL"
|   | `-IntegerLiteral 0x1f3fe83caa0 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x1f3fe83cae8 <.//openssl//file_jk/before\test\handshake_helper.c:487:40>
|   |-BinaryOperator 0x1f3fe83cc08 <line:488:5, col:53> 'unsigned char *' '='
|   | |-MemberExpr 0x1f3fe83cb28 <col:5, col:11> 'unsigned char *' lvalue ->read_buf 0x1f3fe834af8
|   | | `-ImplicitCastExpr 0x1f3fe83cb10 <col:5> 'PEER *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1f3fe83caf0 <col:5> 'PEER *' lvalue ParmVar 0x1f3fe834e88 'peer' 'PEER *'
|   | `-ImplicitCastExpr 0x1f3fe83cbf0 <col:22, col:53> 'unsigned char *' <IntegralToPointer>
|   |   `-CallExpr 0x1f3fe83cbb0 <col:22, col:53> 'int'
|   |     |-ImplicitCastExpr 0x1f3fe83cb98 <col:22> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1f3fe83cb58 <col:22> 'int ()' Function 0x1f3fe827588 'OPENSSL_zalloc' 'int ()'
|   |     `-ImplicitCastExpr 0x1f3fe83cbd8 <col:37> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x1f3fe83cb78 <col:37> 'const int' lvalue Var 0x1f3fe83c198 'peer_buffer_size' 'const int'
|   |-DoStmt 0x1f3fe83cf28 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x1f3fe83cee8 <line:106:8, line:111:5>
|   | | `-IfStmt 0x1f3fe83ced0 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x1f3fe83cd88 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x1f3fe83cd68 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x1f3fe83cd48 <.//openssl//file_jk/before\test\handshake_helper.c:489:16, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | |   |     |-ImplicitCastExpr 0x1f3fe83cd18 <.//openssl//file_jk/before\test\handshake_helper.c:489:16, col:22> 'unsigned char *' <LValueToRValue>
|   | |   |     | `-MemberExpr 0x1f3fe83cc60 <col:16, col:22> 'unsigned char *' lvalue ->read_buf 0x1f3fe834af8
|   | |   |     |   `-ImplicitCastExpr 0x1f3fe83cc48 <col:16> 'PEER *' <LValueToRValue>
|   | |   |     |     `-DeclRefExpr 0x1f3fe83cc28 <col:16> 'PEER *' lvalue ParmVar 0x1f3fe834e88 'peer' 'PEER *'
|   | |   |     `-ImplicitCastExpr 0x1f3fe83cd30 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'unsigned char *' <BitCast>
|   | |   |       `-ParenExpr 0x1f3fe83ccf8 <col:17, col:27> 'void *'
|   | |   |         `-CStyleCastExpr 0x1f3fe83ccd0 <col:18, col:26> 'void *' <NullToPointer>
|   | |   |           `-IntegerLiteral 0x1f3fe83cc90 <col:26> 'int' 0
|   | |   `-CompoundStmt 0x1f3fe83ceb8 <.//openssl//file_jk/before\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x1f3fe83ce90 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x1f3fe83ce78 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x1f3fe83cdc0 <col:13> 'int ()' Function 0x1f3fe8279f0 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x1f3fe83ce60 <col:28, <scratch space>:14:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x1f3fe83ce48 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x1f3fe83ce18 <col:1> 'char [23]' lvalue "peer->read_buf != NULL"
|   | `-IntegerLiteral 0x1f3fe83cf00 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x1f3fe83cf48 <.//openssl//file_jk/before\test\handshake_helper.c:489:39>
|   `-BinaryOperator 0x1f3fe83d0a8 <line:490:5, col:48> 'int' '='
|     |-MemberExpr 0x1f3fe83cf88 <col:5, col:11> 'int' lvalue ->write_buf_len 0x1f3fe834a88
|     | `-ImplicitCastExpr 0x1f3fe83cf70 <col:5> 'PEER *' <LValueToRValue>
|     |   `-DeclRefExpr 0x1f3fe83cf50 <col:5> 'PEER *' lvalue ParmVar 0x1f3fe834e88 'peer' 'PEER *'
|     `-BinaryOperator 0x1f3fe83d088 <col:27, col:48> 'int' '='
|       |-MemberExpr 0x1f3fe83d020 <col:27, col:33> 'int' lvalue ->read_buf_len 0x1f3fe834b68
|       | `-ImplicitCastExpr 0x1f3fe83cfd8 <col:27> 'PEER *' <LValueToRValue>
|       |   `-DeclRefExpr 0x1f3fe83cfb8 <col:27> 'PEER *' lvalue ParmVar 0x1f3fe834e88 'peer' 'PEER *'
|       `-ImplicitCastExpr 0x1f3fe83d070 <col:48> 'int' <LValueToRValue>
|         `-DeclRefExpr 0x1f3fe83d050 <col:48> 'const int' lvalue Var 0x1f3fe83c198 'peer_buffer_size' 'const int'
|-FunctionDecl 0x1f3fe83d288 <line:493:1, line:498:1> line:493:13 used peer_free_data 'void (PEER *)' static
| |-ParmVarDecl 0x1f3fe83d180 <col:28, col:34> col:34 used peer 'PEER *'
| `-CompoundStmt 0x1f3fe83d650 <line:494:1, line:498:1>
|   |-CallExpr 0x1f3fe83d530 <line:496:5, col:33> 'int'
|   | |-ImplicitCastExpr 0x1f3fe83d518 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1f3fe83d490 <col:5> 'int ()' Function 0x1f3fe824f60 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x1f3fe83d558 <col:18, col:24> 'unsigned char *' <LValueToRValue>
|   |   `-MemberExpr 0x1f3fe83d4e8 <col:18, col:24> 'unsigned char *' lvalue ->write_buf 0x1f3fe834a18
|   |     `-ImplicitCastExpr 0x1f3fe83d4d0 <col:18> 'PEER *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1f3fe83d4b0 <col:18> 'PEER *' lvalue ParmVar 0x1f3fe83d180 'peer' 'PEER *'
|   `-CallExpr 0x1f3fe83d610 <line:497:5, col:32> 'int'
|     |-ImplicitCastExpr 0x1f3fe83d5f8 <col:5> 'int (*)()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x1f3fe83d570 <col:5> 'int ()' Function 0x1f3fe824f60 'OPENSSL_free' 'int ()'
|     `-ImplicitCastExpr 0x1f3fe83d638 <col:18, col:24> 'unsigned char *' <LValueToRValue>
|       `-MemberExpr 0x1f3fe83d5c8 <col:18, col:24> 'unsigned char *' lvalue ->read_buf 0x1f3fe834af8
|         `-ImplicitCastExpr 0x1f3fe83d5b0 <col:18> 'PEER *' <LValueToRValue>
|           `-DeclRefExpr 0x1f3fe83d590 <col:18> 'PEER *' lvalue ParmVar 0x1f3fe83d180 'peer' 'PEER *'
|-FunctionDecl 0x1f3fe83d728 <line:504:1, line:525:1> line:504:13 used do_handshake_step 'void (PEER *)' static
| |-ParmVarDecl 0x1f3fe83d680 <col:31, col:37> col:37 used peer 'PEER *'
| `-CompoundStmt 0x1f3fe83e238 <line:505:1, line:525:1>
|   |-DeclStmt 0x1f3fe83d868 <line:506:5, col:12>
|   | `-VarDecl 0x1f3fe83d800 <col:5, col:9> col:9 used ret 'int'
|   |-IfStmt 0x1f3fe83da48 <line:508:5, line:511:5>
|   | |-BinaryOperator 0x1f3fe83d938 <line:508:9, col:25> 'int' '!='
|   | | |-ImplicitCastExpr 0x1f3fe83d920 <col:9, col:15> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x1f3fe83d908 <col:9, col:15> 'peer_status_t':'peer_status_t' <LValueToRValue>
|   | | |   `-MemberExpr 0x1f3fe83d8b8 <col:9, col:15> 'peer_status_t':'peer_status_t' lvalue ->status 0x1f3fe834cd0
|   | | |     `-ImplicitCastExpr 0x1f3fe83d8a0 <col:9> 'PEER *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x1f3fe83d880 <col:9> 'PEER *' lvalue ParmVar 0x1f3fe83d680 'peer' 'PEER *'
|   | | `-DeclRefExpr 0x1f3fe83d8e8 <col:25> 'int' EnumConstant 0x1f3fe834758 'PEER_RETRY' 'int'
|   | `-CompoundStmt 0x1f3fe83da28 <col:37, line:511:5>
|   |   |-BinaryOperator 0x1f3fe83d9f8 <line:509:9, col:24> 'peer_status_t':'peer_status_t' '='
|   |   | |-MemberExpr 0x1f3fe83d990 <col:9, col:15> 'peer_status_t':'peer_status_t' lvalue ->status 0x1f3fe834cd0
|   |   | | `-ImplicitCastExpr 0x1f3fe83d978 <col:9> 'PEER *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1f3fe83d958 <col:9> 'PEER *' lvalue ParmVar 0x1f3fe83d680 'peer' 'PEER *'
|   |   | `-ImplicitCastExpr 0x1f3fe83d9e0 <col:24> 'peer_status_t':'peer_status_t' <IntegralCast>
|   |   |   `-DeclRefExpr 0x1f3fe83d9c0 <col:24> 'int' EnumConstant 0x1f3fe8347b0 'PEER_ERROR' 'int'
|   |   `-ReturnStmt 0x1f3fe83da18 <line:510:9>
|   `-IfStmt 0x1f3fe83e210 <line:515:5, line:524:5> has_else
|     |-BinaryOperator 0x1f3fe83dc40 <line:515:9, col:16> 'int' '=='
|     | |-ImplicitCastExpr 0x1f3fe83dc28 <col:9> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x1f3fe83dbe0 <col:9> 'int' lvalue Var 0x1f3fe83d800 'ret' 'int'
|     | `-IntegerLiteral 0x1f3fe83dc00 <col:16> 'int' 1
|     |-CompoundStmt 0x1f3fe83dd20 <col:19, line:517:5>
|     | `-BinaryOperator 0x1f3fe83dd00 <line:516:9, col:24> 'peer_status_t':'peer_status_t' '='
|     |   |-MemberExpr 0x1f3fe83dc98 <col:9, col:15> 'peer_status_t':'peer_status_t' lvalue ->status 0x1f3fe834cd0
|     |   | `-ImplicitCastExpr 0x1f3fe83dc80 <col:9> 'PEER *' <LValueToRValue>
|     |   |   `-DeclRefExpr 0x1f3fe83dc60 <col:9> 'PEER *' lvalue ParmVar 0x1f3fe83d680 'peer' 'PEER *'
|     |   `-ImplicitCastExpr 0x1f3fe83dce8 <col:24> 'peer_status_t':'peer_status_t' <IntegralCast>
|     |     `-DeclRefExpr 0x1f3fe83dcc8 <col:24> 'int' EnumConstant 0x1f3fe834700 'PEER_SUCCESS' 'int'
|     `-IfStmt 0x1f3fe83e1e8 <line:517:12, line:524:5> has_else
|       |-BinaryOperator 0x1f3fe83dd98 <line:517:16, col:23> 'int' '=='
|       | |-ImplicitCastExpr 0x1f3fe83dd80 <col:16> 'int' <LValueToRValue>
|       | | `-DeclRefExpr 0x1f3fe83dd38 <col:16> 'int' lvalue Var 0x1f3fe83d800 'ret' 'int'
|       | `-IntegerLiteral 0x1f3fe83dd58 <col:23> 'int' 0
|       |-CompoundStmt 0x1f3fe83de78 <col:26, line:519:5>
|       | `-BinaryOperator 0x1f3fe83de58 <line:518:9, col:24> 'peer_status_t':'peer_status_t' '='
|       |   |-MemberExpr 0x1f3fe83ddf0 <col:9, col:15> 'peer_status_t':'peer_status_t' lvalue ->status 0x1f3fe834cd0
|       |   | `-ImplicitCastExpr 0x1f3fe83ddd8 <col:9> 'PEER *' <LValueToRValue>
|       |   |   `-DeclRefExpr 0x1f3fe83ddb8 <col:9> 'PEER *' lvalue ParmVar 0x1f3fe83d680 'peer' 'PEER *'
|       |   `-ImplicitCastExpr 0x1f3fe83de40 <col:24> 'peer_status_t':'peer_status_t' <IntegralCast>
|       |     `-DeclRefExpr 0x1f3fe83de20 <col:24> 'int' EnumConstant 0x1f3fe8347b0 'PEER_ERROR' 'int'
|       `-CompoundStmt 0x1f3fe83e1c8 <line:519:12, line:524:5>
|         |-DeclStmt 0x1f3fe83e088 <line:520:9, col:50>
|         | `-VarDecl 0x1f3fe83dea8 <col:9, col:13> col:13 used error 'int'
|         `-IfStmt 0x1f3fe83e1b0 <line:522:9, line:523:28>
|           |-OpaqueValueExpr 0x1f3fe83e198 <<invalid sloc>> '_Bool'
|           `-BinaryOperator 0x1f3fe83e178 <col:13, col:28> 'peer_status_t':'peer_status_t' '='
|             |-MemberExpr 0x1f3fe83e110 <col:13, col:19> 'peer_status_t':'peer_status_t' lvalue ->status 0x1f3fe834cd0
|             | `-ImplicitCastExpr 0x1f3fe83e0f8 <col:13> 'PEER *' <LValueToRValue>
|             |   `-DeclRefExpr 0x1f3fe83e0d8 <col:13> 'PEER *' lvalue ParmVar 0x1f3fe83d680 'peer' 'PEER *'
|             `-ImplicitCastExpr 0x1f3fe83e160 <col:28> 'peer_status_t':'peer_status_t' <IntegralCast>
|               `-DeclRefExpr 0x1f3fe83e140 <col:28> 'int' EnumConstant 0x1f3fe8347b0 'PEER_ERROR' 'int'
|-FunctionDecl 0x1f3fe83e318 <line:536:1, line:588:1> line:536:13 used do_app_data_step 'void (PEER *)' static
| |-ParmVarDecl 0x1f3fe83e270 <col:30, col:36> col:36 used peer 'PEER *'
| `-CompoundStmt 0x1f3fe837fd0 <line:537:1, line:588:1>
|   |-DeclStmt 0x1f3fe83e518 <line:538:5, col:29>
|   | |-VarDecl 0x1f3fe83e3f0 <col:5, col:15> col:9 used ret 'int' cinit
|   | | `-IntegerLiteral 0x1f3fe83e458 <col:15> 'int' 1
|   | `-VarDecl 0x1f3fe83e498 <col:5, col:18> col:18 used write_bytes 'int'
|   |-DoStmt 0x1f3fe83e7d0 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x1f3fe83e790 <line:106:8, line:111:5>
|   | | `-IfStmt 0x1f3fe83e778 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x1f3fe83e628 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x1f3fe83e608 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x1f3fe83e5e8 <.//openssl//file_jk/before\test\handshake_helper.c:540:16, col:32> 'int' '=='
|   | |   |     |-ImplicitCastExpr 0x1f3fe83e5d0 <col:16, col:22> 'int' <IntegralCast>
|   | |   |     | `-ImplicitCastExpr 0x1f3fe83e5b8 <col:16, col:22> 'peer_status_t':'peer_status_t' <LValueToRValue>
|   | |   |     |   `-MemberExpr 0x1f3fe83e568 <col:16, col:22> 'peer_status_t':'peer_status_t' lvalue ->status 0x1f3fe834cd0
|   | |   |     |     `-ImplicitCastExpr 0x1f3fe83e550 <col:16> 'PEER *' <LValueToRValue>
|   | |   |     |       `-DeclRefExpr 0x1f3fe83e530 <col:16> 'PEER *' lvalue ParmVar 0x1f3fe83e270 'peer' 'PEER *'
|   | |   |     `-DeclRefExpr 0x1f3fe83e598 <col:32> 'int' EnumConstant 0x1f3fe834758 'PEER_RETRY' 'int'
|   | |   `-CompoundStmt 0x1f3fe83e760 <.//openssl//file_jk/before\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x1f3fe83e738 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x1f3fe83e720 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x1f3fe83e660 <col:13> 'int ()' Function 0x1f3fe8279f0 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x1f3fe83e708 <col:28, <scratch space>:15:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x1f3fe83e6f0 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x1f3fe83e6b8 <col:1> 'char [27]' lvalue "peer->status == PEER_RETRY"
|   | `-IntegerLiteral 0x1f3fe83e7a8 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x1f3fe83e7f0 <.//openssl//file_jk/before\test\handshake_helper.c:540:43>
|   |-WhileStmt 0x1f3fe837368 <line:543:5, line:558:5>
|   | |-BinaryOperator 0x1f3fe83e910 <line:543:12, col:29> 'int' '&&'
|   | | |-BinaryOperator 0x1f3fe83e870 <col:12, col:18> 'int' '>'
|   | | | |-ImplicitCastExpr 0x1f3fe83e858 <col:12> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1f3fe83e7f8 <col:12> 'int' lvalue Var 0x1f3fe83e3f0 'ret' 'int'
|   | | | `-IntegerLiteral 0x1f3fe83e830 <col:18> 'int' 0
|   | | `-ImplicitCastExpr 0x1f3fe83e8f8 <col:23, col:29> 'int' <LValueToRValue>
|   | |   `-MemberExpr 0x1f3fe83e8c8 <col:23, col:29> 'int' lvalue ->bytes_to_read 0x1f3fe834c48
|   | |     `-ImplicitCastExpr 0x1f3fe83e8b0 <col:23> 'PEER *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x1f3fe83e890 <col:23> 'PEER *' lvalue ParmVar 0x1f3fe83e270 'peer' 'PEER *'
|   | `-CompoundStmt 0x1f3fe837350 <col:44, line:558:5>
|   |   `-IfStmt 0x1f3fe837328 <line:545:9, line:557:9> has_else
|   |     |-BinaryOperator 0x1f3fe83ebc8 <line:545:13, col:19> 'int' '>'
|   |     | |-ImplicitCastExpr 0x1f3fe83ebb0 <col:13> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1f3fe83eb68 <col:13> 'int' lvalue Var 0x1f3fe83e3f0 'ret' 'int'
|   |     | `-IntegerLiteral 0x1f3fe83eb88 <col:19> 'int' 0
|   |     |-CompoundStmt 0x1f3fe83ef48 <col:22, line:548:9>
|   |     | |-DoStmt 0x1f3fe83ee50 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   |     | | |-CompoundStmt 0x1f3fe83ee10 <line:106:8, line:111:5>
|   |     | | | `-IfStmt 0x1f3fe83edf8 <line:107:9, line:110:9>
|   |     | | |   |-UnaryOperator 0x1f3fe83ece0 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   |     | | |   | `-ParenExpr 0x1f3fe83ecc0 <col:14, col:24> 'int'
|   |     | | |   |   `-BinaryOperator 0x1f3fe83eca0 <.//openssl//file_jk/before\test\handshake_helper.c:546:24, col:37> 'int' '<='
|   |     | | |   |     |-ImplicitCastExpr 0x1f3fe83ec70 <col:24> 'int' <LValueToRValue>
|   |     | | |   |     | `-DeclRefExpr 0x1f3fe83ebe8 <col:24> 'int' lvalue Var 0x1f3fe83e3f0 'ret' 'int'
|   |     | | |   |     `-ImplicitCastExpr 0x1f3fe83ec88 <col:31, col:37> 'int' <LValueToRValue>
|   |     | | |   |       `-MemberExpr 0x1f3fe83ec40 <col:31, col:37> 'int' lvalue ->bytes_to_read 0x1f3fe834c48
|   |     | | |   |         `-ImplicitCastExpr 0x1f3fe83ec28 <col:31> 'PEER *' <LValueToRValue>
|   |     | | |   |           `-DeclRefExpr 0x1f3fe83ec08 <col:31> 'PEER *' lvalue ParmVar 0x1f3fe83e270 'peer' 'PEER *'
|   |     | | |   `-CompoundStmt 0x1f3fe83ede0 <.//openssl//file_jk/before\test/testutil.h:107:27, line:110:9>
|   |     | | |     `-CallExpr 0x1f3fe83edb8 <line:109:13, col:39> 'int'
|   |     | | |       |-ImplicitCastExpr 0x1f3fe83eda0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |     | | |       | `-DeclRefExpr 0x1f3fe83ed18 <col:13> 'int ()' Function 0x1f3fe8279f0 'OPENSSL_assert' 'int ()'
|   |     | | |       `-UnaryOperator 0x1f3fe83ed88 <col:28, <scratch space>:16:1> 'int' prefix '!' cannot overflow
|   |     | | |         `-ImplicitCastExpr 0x1f3fe83ed70 <col:1> 'char *' <ArrayToPointerDecay>
|   |     | | |           `-StringLiteral 0x1f3fe83ed38 <col:1> 'char [27]' lvalue "ret <= peer->bytes_to_read"
|   |     | | `-IntegerLiteral 0x1f3fe83ee28 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |     | |-NullStmt 0x1f3fe83ee70 <.//openssl//file_jk/before\test\handshake_helper.c:546:51>
|   |     | `-CompoundAssignOperator 0x1f3fe83ef18 <line:547:13, col:36> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     |   |-MemberExpr 0x1f3fe83eeb0 <col:13, col:19> 'int' lvalue ->bytes_to_read 0x1f3fe834c48
|   |     |   | `-ImplicitCastExpr 0x1f3fe83ee98 <col:13> 'PEER *' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x1f3fe83ee78 <col:13> 'PEER *' lvalue ParmVar 0x1f3fe83e270 'peer' 'PEER *'
|   |     |   `-ImplicitCastExpr 0x1f3fe83ef00 <col:36> 'int' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x1f3fe83eee0 <col:36> 'int' lvalue Var 0x1f3fe83e3f0 'ret' 'int'
|   |     `-IfStmt 0x1f3fe837300 <line:548:16, line:557:9> has_else
|   |       |-BinaryOperator 0x1f3fe83efd0 <line:548:20, col:27> 'int' '=='
|   |       | |-ImplicitCastExpr 0x1f3fe83efb8 <col:20> 'int' <LValueToRValue>
|   |       | | `-DeclRefExpr 0x1f3fe83ef70 <col:20> 'int' lvalue Var 0x1f3fe83e3f0 'ret' 'int'
|   |       | `-IntegerLiteral 0x1f3fe83ef90 <col:27> 'int' 0
|   |       |-CompoundStmt 0x1f3fe837058 <col:30, line:551:9>
|   |       | |-BinaryOperator 0x1f3fe837028 <line:549:13, col:28> 'peer_status_t':'peer_status_t' '='
|   |       | | |-MemberExpr 0x1f3fe836fc0 <col:13, col:19> 'peer_status_t':'peer_status_t' lvalue ->status 0x1f3fe834cd0
|   |       | | | `-ImplicitCastExpr 0x1f3fe83f010 <col:13> 'PEER *' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x1f3fe83eff0 <col:13> 'PEER *' lvalue ParmVar 0x1f3fe83e270 'peer' 'PEER *'
|   |       | | `-ImplicitCastExpr 0x1f3fe837010 <col:28> 'peer_status_t':'peer_status_t' <IntegralCast>
|   |       | |   `-DeclRefExpr 0x1f3fe836ff0 <col:28> 'int' EnumConstant 0x1f3fe8347b0 'PEER_ERROR' 'int'
|   |       | `-ReturnStmt 0x1f3fe837048 <line:550:13>
|   |       `-CompoundStmt 0x1f3fe8372e0 <line:551:16, line:557:9>
|   |         |-DeclStmt 0x1f3fe837170 <line:552:13, col:54>
|   |         | `-VarDecl 0x1f3fe837090 <col:13, col:17> col:17 used error 'int'
|   |         `-IfStmt 0x1f3fe8372c8 <line:553:13, line:556:13>
|   |           |-OpaqueValueExpr 0x1f3fe8372b0 <<invalid sloc>> '_Bool'
|   |           `-CompoundStmt 0x1f3fe837290 <line:553:47, line:556:13>
|   |             |-BinaryOperator 0x1f3fe837260 <line:554:17, col:32> 'peer_status_t':'peer_status_t' '='
|   |             | |-MemberExpr 0x1f3fe8371f8 <col:17, col:23> 'peer_status_t':'peer_status_t' lvalue ->status 0x1f3fe834cd0
|   |             | | `-ImplicitCastExpr 0x1f3fe8371e0 <col:17> 'PEER *' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x1f3fe8371c0 <col:17> 'PEER *' lvalue ParmVar 0x1f3fe83e270 'peer' 'PEER *'
|   |             | `-ImplicitCastExpr 0x1f3fe837248 <col:32> 'peer_status_t':'peer_status_t' <IntegralCast>
|   |             |   `-DeclRefExpr 0x1f3fe837228 <col:32> 'int' EnumConstant 0x1f3fe8347b0 'PEER_ERROR' 'int'
|   |             `-ReturnStmt 0x1f3fe837280 <line:555:17>
|   |-BinaryOperator 0x1f3fe837608 <line:561:5, line:562:15> 'int' '='
|   | |-DeclRefExpr 0x1f3fe837380 <line:561:5> 'int' lvalue Var 0x1f3fe83e498 'write_bytes' 'int'
|   | `-ConditionalOperator 0x1f3fe8375d8 <col:19, line:562:15> 'int'
|   |   |-BinaryOperator 0x1f3fe8374b8 <line:561:19, col:48> 'int' '<'
|   |   | |-ImplicitCastExpr 0x1f3fe837488 <col:19, col:25> 'int' <LValueToRValue>
|   |   | | `-MemberExpr 0x1f3fe8373f0 <col:19, col:25> 'int' lvalue ->bytes_to_write 0x1f3fe834bd8
|   |   | |   `-ImplicitCastExpr 0x1f3fe8373d8 <col:19> 'PEER *' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x1f3fe8373b8 <col:19> 'PEER *' lvalue ParmVar 0x1f3fe83e270 'peer' 'PEER *'
|   |   | `-ImplicitCastExpr 0x1f3fe8374a0 <col:42, col:48> 'int' <LValueToRValue>
|   |   |   `-MemberExpr 0x1f3fe837458 <col:42, col:48> 'int' lvalue ->write_buf_len 0x1f3fe834a88
|   |   |     `-ImplicitCastExpr 0x1f3fe837440 <col:42> 'PEER *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x1f3fe837420 <col:42> 'PEER *' lvalue ParmVar 0x1f3fe83e270 'peer' 'PEER *'
|   |   |-ImplicitCastExpr 0x1f3fe8375a8 <col:64, col:70> 'int' <LValueToRValue>
|   |   | `-MemberExpr 0x1f3fe837510 <col:64, col:70> 'int' lvalue ->bytes_to_write 0x1f3fe834bd8
|   |   |   `-ImplicitCastExpr 0x1f3fe8374f8 <col:64> 'PEER *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1f3fe8374d8 <col:64> 'PEER *' lvalue ParmVar 0x1f3fe83e270 'peer' 'PEER *'
|   |   `-ImplicitCastExpr 0x1f3fe8375c0 <line:562:9, col:15> 'int' <LValueToRValue>
|   |     `-MemberExpr 0x1f3fe837578 <col:9, col:15> 'int' lvalue ->write_buf_len 0x1f3fe834a88
|   |       `-ImplicitCastExpr 0x1f3fe837560 <col:9> 'PEER *' <LValueToRValue>
|   |         `-DeclRefExpr 0x1f3fe837540 <col:9> 'PEER *' lvalue ParmVar 0x1f3fe83e270 'peer' 'PEER *'
|   |-IfStmt 0x1f3fe837d38 <line:563:5, line:577:5>
|   | |-ImplicitCastExpr 0x1f3fe837648 <line:563:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1f3fe837628 <col:9> 'int' lvalue Var 0x1f3fe83e498 'write_bytes' 'int'
|   | `-CompoundStmt 0x1f3fe837d20 <col:22, line:577:5>
|   |   `-IfStmt 0x1f3fe837cf8 <line:565:9, line:576:9> has_else
|   |     |-BinaryOperator 0x1f3fe8378b0 <line:565:13, col:19> 'int' '>'
|   |     | |-ImplicitCastExpr 0x1f3fe837898 <col:13> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1f3fe837850 <col:13> 'int' lvalue Var 0x1f3fe83e3f0 'ret' 'int'
|   |     | `-IntegerLiteral 0x1f3fe837870 <col:19> 'int' 0
|   |     |-CompoundStmt 0x1f3fe837be0 <col:22, line:569:9>
|   |     | |-DoStmt 0x1f3fe837ae8 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   |     | | |-CompoundStmt 0x1f3fe837aa8 <line:106:8, line:111:5>
|   |     | | | `-IfStmt 0x1f3fe837a90 <line:107:9, line:110:9>
|   |     | | |   |-UnaryOperator 0x1f3fe837980 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   |     | | |   | `-ParenExpr 0x1f3fe837960 <col:14, col:24> 'int'
|   |     | | |   |   `-BinaryOperator 0x1f3fe837940 <.//openssl//file_jk/before\test\handshake_helper.c:567:24, col:31> 'int' '=='
|   |     | | |   |     |-ImplicitCastExpr 0x1f3fe837910 <col:24> 'int' <LValueToRValue>
|   |     | | |   |     | `-DeclRefExpr 0x1f3fe8378d0 <col:24> 'int' lvalue Var 0x1f3fe83e3f0 'ret' 'int'
|   |     | | |   |     `-ImplicitCastExpr 0x1f3fe837928 <col:31> 'int' <LValueToRValue>
|   |     | | |   |       `-DeclRefExpr 0x1f3fe8378f0 <col:31> 'int' lvalue Var 0x1f3fe83e498 'write_bytes' 'int'
|   |     | | |   `-CompoundStmt 0x1f3fe837a78 <.//openssl//file_jk/before\test/testutil.h:107:27, line:110:9>
|   |     | | |     `-CallExpr 0x1f3fe837a50 <line:109:13, col:39> 'int'
|   |     | | |       |-ImplicitCastExpr 0x1f3fe837a38 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |     | | |       | `-DeclRefExpr 0x1f3fe8379b8 <col:13> 'int ()' Function 0x1f3fe8279f0 'OPENSSL_assert' 'int ()'
|   |     | | |       `-UnaryOperator 0x1f3fe837a20 <col:28, <scratch space>:17:1> 'int' prefix '!' cannot overflow
|   |     | | |         `-ImplicitCastExpr 0x1f3fe837a08 <col:1> 'char *' <ArrayToPointerDecay>
|   |     | | |           `-StringLiteral 0x1f3fe8379d8 <col:1> 'char [19]' lvalue "ret == write_bytes"
|   |     | | `-IntegerLiteral 0x1f3fe837ac0 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |     | |-NullStmt 0x1f3fe837b08 <.//openssl//file_jk/before\test\handshake_helper.c:567:43>
|   |     | `-CompoundAssignOperator 0x1f3fe837bb0 <line:568:13, col:37> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     |   |-MemberExpr 0x1f3fe837b48 <col:13, col:19> 'int' lvalue ->bytes_to_write 0x1f3fe834bd8
|   |     |   | `-ImplicitCastExpr 0x1f3fe837b30 <col:13> 'PEER *' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x1f3fe837b10 <col:13> 'PEER *' lvalue ParmVar 0x1f3fe83e270 'peer' 'PEER *'
|   |     |   `-ImplicitCastExpr 0x1f3fe837b98 <col:37> 'int' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x1f3fe837b78 <col:37> 'int' lvalue Var 0x1f3fe83e3f0 'ret' 'int'
|   |     `-CompoundStmt 0x1f3fe837cd8 <line:569:16, line:576:9>
|   |       |-BinaryOperator 0x1f3fe837ca8 <line:574:13, col:28> 'peer_status_t':'peer_status_t' '='
|   |       | |-MemberExpr 0x1f3fe837c40 <col:13, col:19> 'peer_status_t':'peer_status_t' lvalue ->status 0x1f3fe834cd0
|   |       | | `-ImplicitCastExpr 0x1f3fe837c28 <col:13> 'PEER *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x1f3fe837c08 <col:13> 'PEER *' lvalue ParmVar 0x1f3fe83e270 'peer' 'PEER *'
|   |       | `-ImplicitCastExpr 0x1f3fe837c90 <col:28> 'peer_status_t':'peer_status_t' <IntegralCast>
|   |       |   `-DeclRefExpr 0x1f3fe837c70 <col:28> 'int' EnumConstant 0x1f3fe8347b0 'PEER_ERROR' 'int'
|   |       `-ReturnStmt 0x1f3fe837cc8 <line:575:13>
|   `-IfStmt 0x1f3fe837f78 <line:585:5, line:587:5>
|     |-BinaryOperator 0x1f3fe837e80 <line:585:9, col:41> 'int' '&&'
|     | |-UnaryOperator 0x1f3fe837dd0 <col:9, col:16> 'int' prefix '!' cannot overflow
|     | | `-ImplicitCastExpr 0x1f3fe837db8 <col:10, col:16> 'int' <LValueToRValue>
|     | |   `-MemberExpr 0x1f3fe837d88 <col:10, col:16> 'int' lvalue ->bytes_to_write 0x1f3fe834bd8
|     | |     `-ImplicitCastExpr 0x1f3fe837d70 <col:10> 'PEER *' <LValueToRValue>
|     | |       `-DeclRefExpr 0x1f3fe837d50 <col:10> 'PEER *' lvalue ParmVar 0x1f3fe83e270 'peer' 'PEER *'
|     | `-UnaryOperator 0x1f3fe837e68 <col:34, col:41> 'int' prefix '!' cannot overflow
|     |   `-ImplicitCastExpr 0x1f3fe837e50 <col:35, col:41> 'int' <LValueToRValue>
|     |     `-MemberExpr 0x1f3fe837e20 <col:35, col:41> 'int' lvalue ->bytes_to_read 0x1f3fe834c48
|     |       `-ImplicitCastExpr 0x1f3fe837e08 <col:35> 'PEER *' <LValueToRValue>
|     |         `-DeclRefExpr 0x1f3fe837de8 <col:35> 'PEER *' lvalue ParmVar 0x1f3fe83e270 'peer' 'PEER *'
|     `-CompoundStmt 0x1f3fe837f60 <col:56, line:587:5>
|       `-BinaryOperator 0x1f3fe837f40 <line:586:9, col:24> 'peer_status_t':'peer_status_t' '='
|         |-MemberExpr 0x1f3fe837ed8 <col:9, col:15> 'peer_status_t':'peer_status_t' lvalue ->status 0x1f3fe834cd0
|         | `-ImplicitCastExpr 0x1f3fe837ec0 <col:9> 'PEER *' <LValueToRValue>
|         |   `-DeclRefExpr 0x1f3fe837ea0 <col:9> 'PEER *' lvalue ParmVar 0x1f3fe83e270 'peer' 'PEER *'
|         `-ImplicitCastExpr 0x1f3fe837f28 <col:24> 'peer_status_t':'peer_status_t' <IntegralCast>
|           `-DeclRefExpr 0x1f3fe837f08 <col:24> 'int' EnumConstant 0x1f3fe834700 'PEER_SUCCESS' 'int'
|-FunctionDecl 0x1f3fe8381e8 <line:590:1, line:687:1> line:590:13 used do_reneg_setup_step 'void (const SSL_TEST_CTX *, PEER *)' static
| |-ParmVarDecl 0x1f3fe838028 <col:33, col:53> col:53 used test_ctx 'const SSL_TEST_CTX *'
| |-ParmVarDecl 0x1f3fe8380a0 <col:63, col:69> col:69 used peer 'PEER *'
| `-CompoundStmt 0x1f3fe841998 <line:591:1, line:687:1>
|   |-DeclStmt 0x1f3fe838330 <line:592:5, col:12>
|   | `-VarDecl 0x1f3fe8382c8 <col:5, col:9> col:9 used ret 'int'
|   |-DeclStmt 0x1f3fe8383c0 <line:593:5, col:13>
|   | `-VarDecl 0x1f3fe838358 <col:5, col:10> col:10 used buf 'char'
|   |-IfStmt 0x1f3fe838698 <line:595:5, line:604:5>
|   | |-BinaryOperator 0x1f3fe838490 <line:595:9, col:25> 'int' '=='
|   | | |-ImplicitCastExpr 0x1f3fe838478 <col:9, col:15> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x1f3fe838460 <col:9, col:15> 'peer_status_t':'peer_status_t' <LValueToRValue>
|   | | |   `-MemberExpr 0x1f3fe838410 <col:9, col:15> 'peer_status_t':'peer_status_t' lvalue ->status 0x1f3fe834cd0
|   | | |     `-ImplicitCastExpr 0x1f3fe8383f8 <col:9> 'PEER *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x1f3fe8383d8 <col:9> 'PEER *' lvalue ParmVar 0x1f3fe8380a0 'peer' 'PEER *'
|   | | `-DeclRefExpr 0x1f3fe838440 <col:25> 'int' EnumConstant 0x1f3fe834700 'PEER_SUCCESS' 'int'
|   | `-CompoundStmt 0x1f3fe838670 <col:39, line:604:5>
|   |   |-BinaryOperator 0x1f3fe838550 <line:601:9, col:24> 'peer_status_t':'peer_status_t' '='
|   |   | |-MemberExpr 0x1f3fe8384e8 <col:9, col:15> 'peer_status_t':'peer_status_t' lvalue ->status 0x1f3fe834cd0
|   |   | | `-ImplicitCastExpr 0x1f3fe8384d0 <col:9> 'PEER *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1f3fe8384b0 <col:9> 'PEER *' lvalue ParmVar 0x1f3fe8380a0 'peer' 'PEER *'
|   |   | `-ImplicitCastExpr 0x1f3fe838538 <col:24> 'peer_status_t':'peer_status_t' <IntegralCast>
|   |   |   `-DeclRefExpr 0x1f3fe838518 <col:24> 'int' EnumConstant 0x1f3fe834758 'PEER_RETRY' 'int'
|   |   |-CallExpr 0x1f3fe838620 <line:602:9, col:31> 'void'
|   |   | |-ImplicitCastExpr 0x1f3fe838608 <col:9> 'void (*)(PEER *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1f3fe838570 <col:9> 'void (PEER *)' Function 0x1f3fe83d728 'do_handshake_step' 'void (PEER *)'
|   |   | `-ImplicitCastExpr 0x1f3fe838648 <col:27> 'PEER *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1f3fe838590 <col:27> 'PEER *' lvalue ParmVar 0x1f3fe8380a0 'peer' 'PEER *'
|   |   `-ReturnStmt 0x1f3fe838660 <line:603:9>
|   |-DoStmt 0x1f3fe838918 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x1f3fe8388d8 <line:106:8, line:111:5>
|   | | `-IfStmt 0x1f3fe8388c0 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x1f3fe8387a8 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x1f3fe838788 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x1f3fe838768 <.//openssl//file_jk/before\test\handshake_helper.c:606:16, col:32> 'int' '=='
|   | |   |     |-ImplicitCastExpr 0x1f3fe838750 <col:16, col:22> 'int' <IntegralCast>
|   | |   |     | `-ImplicitCastExpr 0x1f3fe838738 <col:16, col:22> 'peer_status_t':'peer_status_t' <LValueToRValue>
|   | |   |     |   `-MemberExpr 0x1f3fe8386e8 <col:16, col:22> 'peer_status_t':'peer_status_t' lvalue ->status 0x1f3fe834cd0
|   | |   |     |     `-ImplicitCastExpr 0x1f3fe8386d0 <col:16> 'PEER *' <LValueToRValue>
|   | |   |     |       `-DeclRefExpr 0x1f3fe8386b0 <col:16> 'PEER *' lvalue ParmVar 0x1f3fe8380a0 'peer' 'PEER *'
|   | |   |     `-DeclRefExpr 0x1f3fe838718 <col:32> 'int' EnumConstant 0x1f3fe834758 'PEER_RETRY' 'int'
|   | |   `-CompoundStmt 0x1f3fe8388a8 <.//openssl//file_jk/before\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x1f3fe838880 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x1f3fe838868 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x1f3fe8387e0 <col:13> 'int ()' Function 0x1f3fe8279f0 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x1f3fe838850 <col:28, <scratch space>:18:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x1f3fe838838 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x1f3fe838800 <col:1> 'char [27]' lvalue "peer->status == PEER_RETRY"
|   | `-IntegerLiteral 0x1f3fe8388f0 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x1f3fe838938 <.//openssl//file_jk/before\test\handshake_helper.c:606:43>
|   |-DoStmt 0x1f3fe838d40 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x1f3fe838d00 <line:106:8, line:111:5>
|   | | `-IfStmt 0x1f3fe838ce8 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x1f3fe838b30 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x1f3fe838b10 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x1f3fe838af0 <.//openssl//file_jk/before\test\handshake_helper.c:607:16, line:608:48> 'int' '||'
|   | |   |     |-BinaryOperator 0x1f3fe8389f8 <line:607:16, col:44> 'int' '=='
|   | |   |     | |-ImplicitCastExpr 0x1f3fe8389e0 <col:16, col:26> 'int' <IntegralCast>
|   | |   |     | | `-ImplicitCastExpr 0x1f3fe8389c8 <col:16, col:26> 'ssl_handshake_mode_t':'ssl_handshake_mode_t' <LValueToRValue>
|   | |   |     | |   `-MemberExpr 0x1f3fe838978 <col:16, col:26> 'const ssl_handshake_mode_t':'const ssl_handshake_mode_t' lvalue ->handshake_mode 0x1f3fe87f300
|   | |   |     | |     `-ImplicitCastExpr 0x1f3fe838960 <col:16> 'const SSL_TEST_CTX *' <LValueToRValue>
|   | |   |     | |       `-DeclRefExpr 0x1f3fe838940 <col:16> 'const SSL_TEST_CTX *' lvalue ParmVar 0x1f3fe838028 'test_ctx' 'const SSL_TEST_CTX *'
|   | |   |     | `-DeclRefExpr 0x1f3fe8389a8 <col:44> 'int' EnumConstant 0x1f3fe87cdb0 'SSL_TEST_HANDSHAKE_RENEG_SERVER' 'int'
|   | |   |     `-BinaryOperator 0x1f3fe838ad0 <line:608:20, col:48> 'int' '=='
|   | |   |       |-ImplicitCastExpr 0x1f3fe838ab8 <col:20, col:30> 'int' <IntegralCast>
|   | |   |       | `-ImplicitCastExpr 0x1f3fe838aa0 <col:20, col:30> 'ssl_handshake_mode_t':'ssl_handshake_mode_t' <LValueToRValue>
|   | |   |       |   `-MemberExpr 0x1f3fe838a50 <col:20, col:30> 'const ssl_handshake_mode_t':'const ssl_handshake_mode_t' lvalue ->handshake_mode 0x1f3fe87f300
|   | |   |       |     `-ImplicitCastExpr 0x1f3fe838a38 <col:20> 'const SSL_TEST_CTX *' <LValueToRValue>
|   | |   |       |       `-DeclRefExpr 0x1f3fe838a18 <col:20> 'const SSL_TEST_CTX *' lvalue ParmVar 0x1f3fe838028 'test_ctx' 'const SSL_TEST_CTX *'
|   | |   |       `-DeclRefExpr 0x1f3fe838a80 <col:48> 'int' EnumConstant 0x1f3fe87ce08 'SSL_TEST_HANDSHAKE_RENEG_CLIENT' 'int'
|   | |   `-CompoundStmt 0x1f3fe838cd0 <.//openssl//file_jk/before\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x1f3fe838ca8 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x1f3fe838c90 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x1f3fe838b68 <col:13> 'int ()' Function 0x1f3fe8279f0 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x1f3fe838c78 <col:28, <scratch space>:19:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x1f3fe838c60 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x1f3fe838bc8 <col:1> 'char [123]' lvalue "test_ctx->handshake_mode == SSL_TEST_HANDSHAKE_RENEG_SERVER || test_ctx->handshake_mode == SSL_TEST_HANDSHAKE_RENEG_CLIENT"
|   | `-IntegerLiteral 0x1f3fe838d18 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x1f3fe838d60 <.//openssl//file_jk/before\test\handshake_helper.c:608:80>
|   |-IfStmt 0x1f3fe8411e8 <line:611:5, line:660:5>
|   | |-OpaqueValueExpr 0x1f3fe8411d0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1f3fe8411b8 <line:614:48, line:660:5>
|   |   `-IfStmt 0x1f3fe8411a0 <line:619:9, line:659:9>
|   |     |-OpaqueValueExpr 0x1f3fe841188 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x1f3fe841150 <line:619:50, line:659:9>
|   |       |-IfStmt 0x1f3fe83fb98 <line:625:13, line:638:13> has_else
|   |       | |-OpaqueValueExpr 0x1f3fe83fb80 <<invalid sloc>> '_Bool'
|   |       | |-CompoundStmt 0x1f3fe83f458 <line:625:43, line:627:13>
|   |       | `-CompoundStmt 0x1f3fe83fb68 <col:20, line:638:13>
|   |       |   `-IfStmt 0x1f3fe83fb40 <line:628:17, line:637:17> has_else
|   |       |     |-BinaryOperator 0x1f3fe83f5e8 <line:628:21, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   |       |     | |-ImplicitCastExpr 0x1f3fe83f5b8 <.//openssl//file_jk/before\test\handshake_helper.c:628:21, col:44> 'char *' <LValueToRValue>
|   |       |     | | `-MemberExpr 0x1f3fe83f500 <col:21, col:44> 'char *const' lvalue .reneg_ciphers 0x1f3fe877810
|   |       |     | |   `-MemberExpr 0x1f3fe83f4d0 <col:21, col:37> 'const SSL_TEST_CLIENT_CONF':'const SSL_TEST_CLIENT_CONF' lvalue .client 0x1f3fe877e10
|   |       |     | |     `-MemberExpr 0x1f3fe83f4a0 <col:21, col:31> 'const SSL_TEST_EXTRA_CONF':'const SSL_TEST_EXTRA_CONF' lvalue ->extra 0x1f3fe87f470
|   |       |     | |       `-ImplicitCastExpr 0x1f3fe83f488 <col:21> 'const SSL_TEST_CTX *' <LValueToRValue>
|   |       |     | |         `-DeclRefExpr 0x1f3fe83f468 <col:21> 'const SSL_TEST_CTX *' lvalue ParmVar 0x1f3fe838028 'test_ctx' 'const SSL_TEST_CTX *'
|   |       |     | `-ImplicitCastExpr 0x1f3fe83f5d0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   |       |     |   `-ParenExpr 0x1f3fe83f598 <col:17, col:27> 'void *'
|   |       |     |     `-CStyleCastExpr 0x1f3fe83f570 <col:18, col:26> 'void *' <NullToPointer>
|   |       |     |       `-IntegerLiteral 0x1f3fe83f530 <col:26> 'int' 0
|   |       |     |-CompoundStmt 0x1f3fe83f9b0 <.//openssl//file_jk/before\test\handshake_helper.c:628:67, line:635:17>
|   |       |     | `-IfStmt 0x1f3fe83f920 <line:629:21, line:633:21>
|   |       |     |   |-OpaqueValueExpr 0x1f3fe83f908 <<invalid sloc>> '_Bool'
|   |       |     |   `-CompoundStmt 0x1f3fe83f8e8 <line:630:72, line:633:21>
|   |       |     |     |-BinaryOperator 0x1f3fe83f8b8 <line:631:25, col:40> 'peer_status_t':'peer_status_t' '='
|   |       |     |     | |-MemberExpr 0x1f3fe83f850 <col:25, col:31> 'peer_status_t':'peer_status_t' lvalue ->status 0x1f3fe834cd0
|   |       |     |     | | `-ImplicitCastExpr 0x1f3fe83f838 <col:25> 'PEER *' <LValueToRValue>
|   |       |     |     | |   `-DeclRefExpr 0x1f3fe83f818 <col:25> 'PEER *' lvalue ParmVar 0x1f3fe8380a0 'peer' 'PEER *'
|   |       |     |     | `-ImplicitCastExpr 0x1f3fe83f8a0 <col:40> 'peer_status_t':'peer_status_t' <IntegralCast>
|   |       |     |     |   `-DeclRefExpr 0x1f3fe83f880 <col:40> 'int' EnumConstant 0x1f3fe8347b0 'PEER_ERROR' 'int'
|   |       |     |     `-ReturnStmt 0x1f3fe83f8d8 <line:632:25>
|   |       |     `-CompoundStmt 0x1f3fe83fb30 <line:635:24, line:637:17>
|   |       |-IfStmt 0x1f3fe83fd00 <line:639:13, line:642:13>
|   |       | |-UnaryOperator 0x1f3fe83fbf8 <line:639:17, col:18> 'int' prefix '!' cannot overflow
|   |       | | `-ImplicitCastExpr 0x1f3fe83fbe0 <col:18> 'int' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x1f3fe83fbc0 <col:18> 'int' lvalue Var 0x1f3fe8382c8 'ret' 'int'
|   |       | `-CompoundStmt 0x1f3fe83fce0 <col:23, line:642:13>
|   |       |   |-BinaryOperator 0x1f3fe83fcb0 <line:640:17, col:32> 'peer_status_t':'peer_status_t' '='
|   |       |   | |-MemberExpr 0x1f3fe83fc48 <col:17, col:23> 'peer_status_t':'peer_status_t' lvalue ->status 0x1f3fe834cd0
|   |       |   | | `-ImplicitCastExpr 0x1f3fe83fc30 <col:17> 'PEER *' <LValueToRValue>
|   |       |   | |   `-DeclRefExpr 0x1f3fe83fc10 <col:17> 'PEER *' lvalue ParmVar 0x1f3fe8380a0 'peer' 'PEER *'
|   |       |   | `-ImplicitCastExpr 0x1f3fe83fc98 <col:32> 'peer_status_t':'peer_status_t' <IntegralCast>
|   |       |   |   `-DeclRefExpr 0x1f3fe83fc78 <col:32> 'int' EnumConstant 0x1f3fe8347b0 'PEER_ERROR' 'int'
|   |       |   `-ReturnStmt 0x1f3fe83fcd0 <line:641:17>
|   |       |-CallExpr 0x1f3fe83fd70 <line:643:13, col:35> 'void'
|   |       | |-ImplicitCastExpr 0x1f3fe83fd58 <col:13> 'void (*)(PEER *)' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x1f3fe83fd18 <col:13> 'void (PEER *)' Function 0x1f3fe83d728 'do_handshake_step' 'void (PEER *)'
|   |       | `-ImplicitCastExpr 0x1f3fe83fd98 <col:31> 'PEER *' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x1f3fe83fd38 <col:31> 'PEER *' lvalue ParmVar 0x1f3fe8380a0 'peer' 'PEER *'
|   |       |-IfStmt 0x1f3fe841118 <line:654:13, line:657:32> has_else
|   |       | |-BinaryOperator 0x1f3fe83fe68 <line:654:17, col:33> 'int' '=='
|   |       | | |-ImplicitCastExpr 0x1f3fe83fe50 <col:17, col:23> 'int' <IntegralCast>
|   |       | | | `-ImplicitCastExpr 0x1f3fe83fe38 <col:17, col:23> 'peer_status_t':'peer_status_t' <LValueToRValue>
|   |       | | |   `-MemberExpr 0x1f3fe83fde8 <col:17, col:23> 'peer_status_t':'peer_status_t' lvalue ->status 0x1f3fe834cd0
|   |       | | |     `-ImplicitCastExpr 0x1f3fe83fdd0 <col:17> 'PEER *' <LValueToRValue>
|   |       | | |       `-DeclRefExpr 0x1f3fe83fdb0 <col:17> 'PEER *' lvalue ParmVar 0x1f3fe8380a0 'peer' 'PEER *'
|   |       | | `-DeclRefExpr 0x1f3fe83fe18 <col:33> 'int' EnumConstant 0x1f3fe834758 'PEER_RETRY' 'int'
|   |       | |-BinaryOperator 0x1f3fe83ff28 <line:655:17, col:32> 'peer_status_t':'peer_status_t' '='
|   |       | | |-MemberExpr 0x1f3fe83fec0 <col:17, col:23> 'peer_status_t':'peer_status_t' lvalue ->status 0x1f3fe834cd0
|   |       | | | `-ImplicitCastExpr 0x1f3fe83fea8 <col:17> 'PEER *' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x1f3fe83fe88 <col:17> 'PEER *' lvalue ParmVar 0x1f3fe8380a0 'peer' 'PEER *'
|   |       | | `-ImplicitCastExpr 0x1f3fe83ff10 <col:32> 'peer_status_t':'peer_status_t' <IntegralCast>
|   |       | |   `-DeclRefExpr 0x1f3fe83fef0 <col:32> 'int' EnumConstant 0x1f3fe834700 'PEER_SUCCESS' 'int'
|   |       | `-IfStmt 0x1f3fe841100 <line:656:18, line:657:32>
|   |       |   |-BinaryOperator 0x1f3fe840000 <line:656:22, col:38> 'int' '=='
|   |       |   | |-ImplicitCastExpr 0x1f3fe83ffe8 <col:22, col:28> 'int' <IntegralCast>
|   |       |   | | `-ImplicitCastExpr 0x1f3fe83ffd0 <col:22, col:28> 'peer_status_t':'peer_status_t' <LValueToRValue>
|   |       |   | |   `-MemberExpr 0x1f3fe83ff80 <col:22, col:28> 'peer_status_t':'peer_status_t' lvalue ->status 0x1f3fe834cd0
|   |       |   | |     `-ImplicitCastExpr 0x1f3fe83ff68 <col:22> 'PEER *' <LValueToRValue>
|   |       |   | |       `-DeclRefExpr 0x1f3fe83ff48 <col:22> 'PEER *' lvalue ParmVar 0x1f3fe8380a0 'peer' 'PEER *'
|   |       |   | `-DeclRefExpr 0x1f3fe83ffb0 <col:38> 'int' EnumConstant 0x1f3fe834700 'PEER_SUCCESS' 'int'
|   |       |   `-BinaryOperator 0x1f3fe8410e0 <line:657:17, col:32> 'peer_status_t':'peer_status_t' '='
|   |       |     |-MemberExpr 0x1f3fe841078 <col:17, col:23> 'peer_status_t':'peer_status_t' lvalue ->status 0x1f3fe834cd0
|   |       |     | `-ImplicitCastExpr 0x1f3fe841060 <col:17> 'PEER *' <LValueToRValue>
|   |       |     |   `-DeclRefExpr 0x1f3fe840020 <col:17> 'PEER *' lvalue ParmVar 0x1f3fe8380a0 'peer' 'PEER *'
|   |       |     `-ImplicitCastExpr 0x1f3fe8410c8 <col:32> 'peer_status_t':'peer_status_t' <IntegralCast>
|   |       |       `-DeclRefExpr 0x1f3fe8410a8 <col:32> 'int' EnumConstant 0x1f3fe834758 'PEER_RETRY' 'int'
|   |       `-ReturnStmt 0x1f3fe841140 <line:658:13>
|   |-IfStmt 0x1f3fe8418b0 <line:668:5, line:684:5> has_else
|   | |-BinaryOperator 0x1f3fe841388 <line:668:9, col:16> 'int' '>='
|   | | |-ImplicitCastExpr 0x1f3fe841370 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1f3fe841328 <col:9> 'int' lvalue Var 0x1f3fe8382c8 'ret' 'int'
|   | | `-IntegerLiteral 0x1f3fe841348 <col:16> 'int' 0
|   | |-CompoundStmt 0x1f3fe841478 <col:19, line:675:5>
|   | | |-BinaryOperator 0x1f3fe841448 <line:673:9, col:24> 'peer_status_t':'peer_status_t' '='
|   | | | |-MemberExpr 0x1f3fe8413e0 <col:9, col:15> 'peer_status_t':'peer_status_t' lvalue ->status 0x1f3fe834cd0
|   | | | | `-ImplicitCastExpr 0x1f3fe8413c8 <col:9> 'PEER *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x1f3fe8413a8 <col:9> 'PEER *' lvalue ParmVar 0x1f3fe8380a0 'peer' 'PEER *'
|   | | | `-ImplicitCastExpr 0x1f3fe841430 <col:24> 'peer_status_t':'peer_status_t' <IntegralCast>
|   | | |   `-DeclRefExpr 0x1f3fe841410 <col:24> 'int' EnumConstant 0x1f3fe8347b0 'PEER_ERROR' 'int'
|   | | `-ReturnStmt 0x1f3fe841468 <line:674:9>
|   | `-CompoundStmt 0x1f3fe841888 <line:675:12, line:684:5>
|   |   |-DeclStmt 0x1f3fe841590 <line:676:9, col:50>
|   |   | `-VarDecl 0x1f3fe8414b0 <col:9, col:13> col:13 used error 'int'
|   |   |-IfStmt 0x1f3fe8416e8 <line:677:9, line:680:9>
|   |   | |-OpaqueValueExpr 0x1f3fe8416d0 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x1f3fe8416b0 <line:677:43, line:680:9>
|   |   |   |-BinaryOperator 0x1f3fe841680 <line:678:13, col:28> 'peer_status_t':'peer_status_t' '='
|   |   |   | |-MemberExpr 0x1f3fe841618 <col:13, col:19> 'peer_status_t':'peer_status_t' lvalue ->status 0x1f3fe834cd0
|   |   |   | | `-ImplicitCastExpr 0x1f3fe841600 <col:13> 'PEER *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x1f3fe8415e0 <col:13> 'PEER *' lvalue ParmVar 0x1f3fe8380a0 'peer' 'PEER *'
|   |   |   | `-ImplicitCastExpr 0x1f3fe841668 <col:28> 'peer_status_t':'peer_status_t' <IntegralCast>
|   |   |   |   `-DeclRefExpr 0x1f3fe841648 <col:28> 'int' EnumConstant 0x1f3fe8347b0 'PEER_ERROR' 'int'
|   |   |   `-ReturnStmt 0x1f3fe8416a0 <line:679:13>
|   |   `-IfStmt 0x1f3fe841870 <line:682:9, line:683:13>
|   |     |-OpaqueValueExpr 0x1f3fe841858 <<invalid sloc>> '_Bool'
|   |     `-ReturnStmt 0x1f3fe841848 <col:13>
|   `-BinaryOperator 0x1f3fe841978 <line:686:5, col:20> 'peer_status_t':'peer_status_t' '='
|     |-MemberExpr 0x1f3fe841910 <col:5, col:11> 'peer_status_t':'peer_status_t' lvalue ->status 0x1f3fe834cd0
|     | `-ImplicitCastExpr 0x1f3fe8418f8 <col:5> 'PEER *' <LValueToRValue>
|     |   `-DeclRefExpr 0x1f3fe8418d8 <col:5> 'PEER *' lvalue ParmVar 0x1f3fe8380a0 'peer' 'PEER *'
|     `-ImplicitCastExpr 0x1f3fe841960 <col:20> 'peer_status_t':'peer_status_t' <IntegralCast>
|       `-DeclRefExpr 0x1f3fe841940 <col:20> 'int' EnumConstant 0x1f3fe834700 'PEER_SUCCESS' 'int'
|-FunctionDecl 0x1f3fe841ab0 <line:705:1, line:720:1> line:705:13 used do_shutdown_step 'void (PEER *)' static
| |-ParmVarDecl 0x1f3fe841a08 <col:30, col:36> col:36 used peer 'PEER *'
| `-CompoundStmt 0x1f3fe842498 <line:706:1, line:720:1>
|   |-DeclStmt 0x1f3fe841bf0 <line:707:5, col:12>
|   | `-VarDecl 0x1f3fe841b88 <col:5, col:9> col:9 used ret 'int'
|   |-DoStmt 0x1f3fe841e70 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x1f3fe841e30 <line:106:8, line:111:5>
|   | | `-IfStmt 0x1f3fe841e18 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x1f3fe841d00 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x1f3fe841ce0 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x1f3fe841cc0 <.//openssl//file_jk/before\test\handshake_helper.c:709:16, col:32> 'int' '=='
|   | |   |     |-ImplicitCastExpr 0x1f3fe841ca8 <col:16, col:22> 'int' <IntegralCast>
|   | |   |     | `-ImplicitCastExpr 0x1f3fe841c90 <col:16, col:22> 'peer_status_t':'peer_status_t' <LValueToRValue>
|   | |   |     |   `-MemberExpr 0x1f3fe841c40 <col:16, col:22> 'peer_status_t':'peer_status_t' lvalue ->status 0x1f3fe834cd0
|   | |   |     |     `-ImplicitCastExpr 0x1f3fe841c28 <col:16> 'PEER *' <LValueToRValue>
|   | |   |     |       `-DeclRefExpr 0x1f3fe841c08 <col:16> 'PEER *' lvalue ParmVar 0x1f3fe841a08 'peer' 'PEER *'
|   | |   |     `-DeclRefExpr 0x1f3fe841c70 <col:32> 'int' EnumConstant 0x1f3fe834758 'PEER_RETRY' 'int'
|   | |   `-CompoundStmt 0x1f3fe841e00 <.//openssl//file_jk/before\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x1f3fe841dd8 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x1f3fe841dc0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x1f3fe841d38 <col:13> 'int ()' Function 0x1f3fe8279f0 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x1f3fe841da8 <col:28, <scratch space>:20:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x1f3fe841d90 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x1f3fe841d58 <col:1> 'char [27]' lvalue "peer->status == PEER_RETRY"
|   | `-IntegerLiteral 0x1f3fe841e48 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x1f3fe841e90 <.//openssl//file_jk/before\test\handshake_helper.c:709:43>
|   `-IfStmt 0x1f3fe842470 <line:712:5, line:719:5> has_else
|     |-BinaryOperator 0x1f3fe842088 <line:712:9, col:16> 'int' '=='
|     | |-ImplicitCastExpr 0x1f3fe842070 <col:9> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x1f3fe842018 <col:9> 'int' lvalue Var 0x1f3fe841b88 'ret' 'int'
|     | `-IntegerLiteral 0x1f3fe842038 <col:16> 'int' 1
|     |-CompoundStmt 0x1f3fe842168 <col:19, line:714:5>
|     | `-BinaryOperator 0x1f3fe842148 <line:713:9, col:24> 'peer_status_t':'peer_status_t' '='
|     |   |-MemberExpr 0x1f3fe8420e0 <col:9, col:15> 'peer_status_t':'peer_status_t' lvalue ->status 0x1f3fe834cd0
|     |   | `-ImplicitCastExpr 0x1f3fe8420c8 <col:9> 'PEER *' <LValueToRValue>
|     |   |   `-DeclRefExpr 0x1f3fe8420a8 <col:9> 'PEER *' lvalue ParmVar 0x1f3fe841a08 'peer' 'PEER *'
|     |   `-ImplicitCastExpr 0x1f3fe842130 <col:24> 'peer_status_t':'peer_status_t' <IntegralCast>
|     |     `-DeclRefExpr 0x1f3fe842110 <col:24> 'int' EnumConstant 0x1f3fe834700 'PEER_SUCCESS' 'int'
|     `-IfStmt 0x1f3fe842458 <line:714:12, line:719:5>
|       |-BinaryOperator 0x1f3fe8421e0 <line:714:16, col:22> 'int' '<'
|       | |-ImplicitCastExpr 0x1f3fe8421c8 <col:16> 'int' <LValueToRValue>
|       | | `-DeclRefExpr 0x1f3fe842180 <col:16> 'int' lvalue Var 0x1f3fe841b88 'ret' 'int'
|       | `-IntegerLiteral 0x1f3fe8421a0 <col:22> 'int' 0
|       `-CompoundStmt 0x1f3fe842438 <col:25, line:719:5>
|         |-DeclStmt 0x1f3fe8422f8 <line:715:9, col:50>
|         | `-VarDecl 0x1f3fe842218 <col:9, col:13> col:13 used error 'int'
|         `-IfStmt 0x1f3fe842420 <line:717:9, line:718:28>
|           |-OpaqueValueExpr 0x1f3fe842408 <<invalid sloc>> '_Bool'
|           `-BinaryOperator 0x1f3fe8423e8 <col:13, col:28> 'peer_status_t':'peer_status_t' '='
|             |-MemberExpr 0x1f3fe842380 <col:13, col:19> 'peer_status_t':'peer_status_t' lvalue ->status 0x1f3fe834cd0
|             | `-ImplicitCastExpr 0x1f3fe842368 <col:13> 'PEER *' <LValueToRValue>
|             |   `-DeclRefExpr 0x1f3fe842348 <col:13> 'PEER *' lvalue ParmVar 0x1f3fe841a08 'peer' 'PEER *'
|             `-ImplicitCastExpr 0x1f3fe8423d0 <col:28> 'peer_status_t':'peer_status_t' <IntegralCast>
|               `-DeclRefExpr 0x1f3fe8423b0 <col:28> 'int' EnumConstant 0x1f3fe8347b0 'PEER_ERROR' 'int'
|-EnumDecl 0x1f3fe8424c8 <line:722:9, line:730:1> line:722:9
| |-EnumConstantDecl 0x1f3fe8425a0 <line:723:5> col:5 referenced HANDSHAKE 'int'
| |-EnumConstantDecl 0x1f3fe8425f8 <line:724:5> col:5 referenced RENEG_APPLICATION_DATA 'int'
| |-EnumConstantDecl 0x1f3fe842650 <line:725:5> col:5 referenced RENEG_SETUP 'int'
| |-EnumConstantDecl 0x1f3fe8426a8 <line:726:5> col:5 referenced RENEG_HANDSHAKE 'int'
| |-EnumConstantDecl 0x1f3fe842700 <line:727:5> col:5 referenced APPLICATION_DATA 'int'
| |-EnumConstantDecl 0x1f3fe842758 <line:728:5> col:5 referenced SHUTDOWN 'int'
| `-EnumConstantDecl 0x1f3fe8427b0 <line:729:5> col:5 referenced CONNECTION_DONE 'int'
|-TypedefDecl 0x1f3fe842868 <line:722:1, line:730:3> col:3 referenced connect_phase_t 'enum connect_phase_t':'connect_phase_t'
| `-ElaboratedType 0x1f3fe842810 'enum connect_phase_t' sugar
|   `-EnumType 0x1f3fe842580 'connect_phase_t'
|     `-Enum 0x1f3fe8424c8 ''
|-FunctionDecl 0x1f3fe842ac8 <line:732:1, line:754:1> line:732:24 used next_phase 'connect_phase_t (const SSL_TEST_CTX *, connect_phase_t)' static
| |-ParmVarDecl 0x1f3fe842910 <col:35, col:55> col:55 used test_ctx 'const SSL_TEST_CTX *'
| |-ParmVarDecl 0x1f3fe842988 <line:733:35, col:51> col:51 used phase 'connect_phase_t':'connect_phase_t'
| `-CompoundStmt 0x1f3fe843480 <line:734:1, line:754:1>
|   `-SwitchStmt 0x1f3fe842be0 <line:735:5, line:753:5>
|     |-ImplicitCastExpr 0x1f3fe842bc8 <line:735:13> 'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x1f3fe842bb0 <col:13> 'connect_phase_t':'connect_phase_t' <LValueToRValue>
|     |   `-DeclRefExpr 0x1f3fe842b90 <col:13> 'connect_phase_t':'connect_phase_t' lvalue ParmVar 0x1f3fe842988 'phase' 'connect_phase_t':'connect_phase_t'
|     `-CompoundStmt 0x1f3fe843428 <col:20, line:753:5>
|       |-CaseStmt 0x1f3fe842c38 <line:736:5, line:739:20>
|       | |-ConstantExpr 0x1f3fe842c20 <line:736:10> 'int'
|       | | `-DeclRefExpr 0x1f3fe842c00 <col:10> 'int' EnumConstant 0x1f3fe8425a0 'HANDSHAKE' 'int'
|       | `-IfStmt 0x1f3fe842e78 <line:737:9, line:739:20>
|       |   |-BinaryOperator 0x1f3fe842e10 <line:737:13, line:738:48> 'int' '||'
|       |   | |-BinaryOperator 0x1f3fe842d18 <line:737:13, col:41> 'int' '=='
|       |   | | |-ImplicitCastExpr 0x1f3fe842d00 <col:13, col:23> 'int' <IntegralCast>
|       |   | | | `-ImplicitCastExpr 0x1f3fe842ce8 <col:13, col:23> 'ssl_handshake_mode_t':'ssl_handshake_mode_t' <LValueToRValue>
|       |   | | |   `-MemberExpr 0x1f3fe842c98 <col:13, col:23> 'const ssl_handshake_mode_t':'const ssl_handshake_mode_t' lvalue ->handshake_mode 0x1f3fe87f300
|       |   | | |     `-ImplicitCastExpr 0x1f3fe842c80 <col:13> 'const SSL_TEST_CTX *' <LValueToRValue>
|       |   | | |       `-DeclRefExpr 0x1f3fe842c60 <col:13> 'const SSL_TEST_CTX *' lvalue ParmVar 0x1f3fe842910 'test_ctx' 'const SSL_TEST_CTX *'
|       |   | | `-DeclRefExpr 0x1f3fe842cc8 <col:41> 'int' EnumConstant 0x1f3fe87cdb0 'SSL_TEST_HANDSHAKE_RENEG_SERVER' 'int'
|       |   | `-BinaryOperator 0x1f3fe842df0 <line:738:20, col:48> 'int' '=='
|       |   |   |-ImplicitCastExpr 0x1f3fe842dd8 <col:20, col:30> 'int' <IntegralCast>
|       |   |   | `-ImplicitCastExpr 0x1f3fe842dc0 <col:20, col:30> 'ssl_handshake_mode_t':'ssl_handshake_mode_t' <LValueToRValue>
|       |   |   |   `-MemberExpr 0x1f3fe842d70 <col:20, col:30> 'const ssl_handshake_mode_t':'const ssl_handshake_mode_t' lvalue ->handshake_mode 0x1f3fe87f300
|       |   |   |     `-ImplicitCastExpr 0x1f3fe842d58 <col:20> 'const SSL_TEST_CTX *' <LValueToRValue>
|       |   |   |       `-DeclRefExpr 0x1f3fe842d38 <col:20> 'const SSL_TEST_CTX *' lvalue ParmVar 0x1f3fe842910 'test_ctx' 'const SSL_TEST_CTX *'
|       |   |   `-DeclRefExpr 0x1f3fe842da0 <col:48> 'int' EnumConstant 0x1f3fe87ce08 'SSL_TEST_HANDSHAKE_RENEG_CLIENT' 'int'
|       |   `-ReturnStmt 0x1f3fe842e68 <line:739:13, col:20>
|       |     `-ImplicitCastExpr 0x1f3fe842e50 <col:20> 'connect_phase_t':'connect_phase_t' <IntegralCast>
|       |       `-DeclRefExpr 0x1f3fe842e30 <col:20> 'int' EnumConstant 0x1f3fe8425f8 'RENEG_APPLICATION_DATA' 'int'
|       |-ReturnStmt 0x1f3fe842ec8 <line:740:9, col:16>
|       | `-ImplicitCastExpr 0x1f3fe842eb0 <col:16> 'connect_phase_t':'connect_phase_t' <IntegralCast>
|       |   `-DeclRefExpr 0x1f3fe842e90 <col:16> 'int' EnumConstant 0x1f3fe842700 'APPLICATION_DATA' 'int'
|       |-CaseStmt 0x1f3fe842f10 <line:741:5, line:742:16>
|       | |-ConstantExpr 0x1f3fe842ef8 <line:741:10> 'int'
|       | | `-DeclRefExpr 0x1f3fe842ed8 <col:10> 'int' EnumConstant 0x1f3fe8425f8 'RENEG_APPLICATION_DATA' 'int'
|       | `-ReturnStmt 0x1f3fe842f70 <line:742:9, col:16>
|       |   `-ImplicitCastExpr 0x1f3fe842f58 <col:16> 'connect_phase_t':'connect_phase_t' <IntegralCast>
|       |     `-DeclRefExpr 0x1f3fe842f38 <col:16> 'int' EnumConstant 0x1f3fe842650 'RENEG_SETUP' 'int'
|       |-CaseStmt 0x1f3fe842fb8 <line:743:5, line:744:16>
|       | |-ConstantExpr 0x1f3fe842fa0 <line:743:10> 'int'
|       | | `-DeclRefExpr 0x1f3fe842f80 <col:10> 'int' EnumConstant 0x1f3fe842650 'RENEG_SETUP' 'int'
|       | `-ReturnStmt 0x1f3fe843018 <line:744:9, col:16>
|       |   `-ImplicitCastExpr 0x1f3fe843000 <col:16> 'connect_phase_t':'connect_phase_t' <IntegralCast>
|       |     `-DeclRefExpr 0x1f3fe842fe0 <col:16> 'int' EnumConstant 0x1f3fe8426a8 'RENEG_HANDSHAKE' 'int'
|       |-CaseStmt 0x1f3fe843080 <line:745:5, line:746:16>
|       | |-ConstantExpr 0x1f3fe843048 <line:745:10> 'int'
|       | | `-DeclRefExpr 0x1f3fe843028 <col:10> 'int' EnumConstant 0x1f3fe8426a8 'RENEG_HANDSHAKE' 'int'
|       | `-ReturnStmt 0x1f3fe8430e0 <line:746:9, col:16>
|       |   `-ImplicitCastExpr 0x1f3fe8430c8 <col:16> 'connect_phase_t':'connect_phase_t' <IntegralCast>
|       |     `-DeclRefExpr 0x1f3fe8430a8 <col:16> 'int' EnumConstant 0x1f3fe842700 'APPLICATION_DATA' 'int'
|       |-CaseStmt 0x1f3fe843128 <line:747:5, line:748:16>
|       | |-ConstantExpr 0x1f3fe843110 <line:747:10> 'int'
|       | | `-DeclRefExpr 0x1f3fe8430f0 <col:10> 'int' EnumConstant 0x1f3fe842700 'APPLICATION_DATA' 'int'
|       | `-ReturnStmt 0x1f3fe843188 <line:748:9, col:16>
|       |   `-ImplicitCastExpr 0x1f3fe843170 <col:16> 'connect_phase_t':'connect_phase_t' <IntegralCast>
|       |     `-DeclRefExpr 0x1f3fe843150 <col:16> 'int' EnumConstant 0x1f3fe842758 'SHUTDOWN' 'int'
|       |-CaseStmt 0x1f3fe8431d0 <line:749:5, line:750:16>
|       | |-ConstantExpr 0x1f3fe8431b8 <line:749:10> 'int'
|       | | `-DeclRefExpr 0x1f3fe843198 <col:10> 'int' EnumConstant 0x1f3fe842758 'SHUTDOWN' 'int'
|       | `-ReturnStmt 0x1f3fe843230 <line:750:9, col:16>
|       |   `-ImplicitCastExpr 0x1f3fe843218 <col:16> 'connect_phase_t':'connect_phase_t' <IntegralCast>
|       |     `-DeclRefExpr 0x1f3fe8431f8 <col:16> 'int' EnumConstant 0x1f3fe8427b0 'CONNECTION_DONE' 'int'
|       |-DefaultStmt 0x1f3fe843400 <line:751:5, .//openssl//file_jk/before\test/testutil.h:111:15>
|       | `-DoStmt 0x1f3fe8433e0 <line:106:5, line:111:15>
|       |   |-CompoundStmt 0x1f3fe8433a0 <line:106:8, line:111:5>
|       |   | `-IfStmt 0x1f3fe843388 <line:107:9, line:110:9>
|       |   |   |-UnaryOperator 0x1f3fe843288 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|       |   |   | `-ParenExpr 0x1f3fe843268 <col:14, col:24> 'int'
|       |   |   |   `-IntegerLiteral 0x1f3fe843240 <.//openssl//file_jk/before\test\handshake_helper.c:752:20> 'int' 0
|       |   |   `-CompoundStmt 0x1f3fe843370 <.//openssl//file_jk/before\test/testutil.h:107:27, line:110:9>
|       |   |     `-CallExpr 0x1f3fe843348 <line:109:13, col:39> 'int'
|       |   |       |-ImplicitCastExpr 0x1f3fe843330 <col:13> 'int (*)()' <FunctionToPointerDecay>
|       |   |       | `-DeclRefExpr 0x1f3fe8432c0 <col:13> 'int ()' Function 0x1f3fe8279f0 'OPENSSL_assert' 'int ()'
|       |   |       `-UnaryOperator 0x1f3fe843318 <col:28, <scratch space>:21:1> 'int' prefix '!' cannot overflow
|       |   |         `-ImplicitCastExpr 0x1f3fe843300 <col:1> 'char *' <ArrayToPointerDecay>
|       |   |           `-StringLiteral 0x1f3fe8432e0 <col:1> 'char [2]' lvalue "0"
|       |   `-IntegerLiteral 0x1f3fe8433b8 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|       `-NullStmt 0x1f3fe843420 <.//openssl//file_jk/before\test\handshake_helper.c:752:22>
|-FunctionDecl 0x1f3fe843708 <line:756:1, line:781:1> line:756:13 used do_connect_step 'void (const SSL_TEST_CTX *, PEER *, connect_phase_t)' static
| |-ParmVarDecl 0x1f3fe8434a8 <col:29, col:49> col:49 used test_ctx 'const SSL_TEST_CTX *'
| |-ParmVarDecl 0x1f3fe843520 <col:59, col:65> col:65 used peer 'PEER *'
| |-ParmVarDecl 0x1f3fe843598 <line:757:29, col:45> col:45 used phase 'connect_phase_t':'connect_phase_t'
| `-CompoundStmt 0x1f3fe8d40d0 <line:758:1, line:781:1>
|   `-SwitchStmt 0x1f3fe843828 <line:759:5, line:780:5>
|     |-ImplicitCastExpr 0x1f3fe843810 <line:759:13> 'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x1f3fe8437f8 <col:13> 'connect_phase_t':'connect_phase_t' <LValueToRValue>
|     |   `-DeclRefExpr 0x1f3fe8437d8 <col:13> 'connect_phase_t':'connect_phase_t' lvalue ParmVar 0x1f3fe843598 'phase' 'connect_phase_t':'connect_phase_t'
|     `-CompoundStmt 0x1f3fe8d4050 <col:20, line:780:5>
|       |-CaseStmt 0x1f3fe843880 <line:760:5, line:761:31>
|       | |-ConstantExpr 0x1f3fe843868 <line:760:10> 'int'
|       | | `-DeclRefExpr 0x1f3fe843848 <col:10> 'int' EnumConstant 0x1f3fe8425a0 'HANDSHAKE' 'int'
|       | `-CallExpr 0x1f3fe843900 <line:761:9, col:31> 'void'
|       |   |-ImplicitCastExpr 0x1f3fe8438e8 <col:9> 'void (*)(PEER *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x1f3fe8438a8 <col:9> 'void (PEER *)' Function 0x1f3fe83d728 'do_handshake_step' 'void (PEER *)'
|       |   `-ImplicitCastExpr 0x1f3fe843928 <col:27> 'PEER *' <LValueToRValue>
|       |     `-DeclRefExpr 0x1f3fe8438c8 <col:27> 'PEER *' lvalue ParmVar 0x1f3fe843520 'peer' 'PEER *'
|       |-BreakStmt 0x1f3fe843940 <line:762:9>
|       |-CaseStmt 0x1f3fe843980 <line:763:5, line:764:30>
|       | |-ConstantExpr 0x1f3fe843968 <line:763:10> 'int'
|       | | `-DeclRefExpr 0x1f3fe843948 <col:10> 'int' EnumConstant 0x1f3fe8425f8 'RENEG_APPLICATION_DATA' 'int'
|       | `-CallExpr 0x1f3fe843a00 <line:764:9, col:30> 'void'
|       |   |-ImplicitCastExpr 0x1f3fe8439e8 <col:9> 'void (*)(PEER *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x1f3fe8439a8 <col:9> 'void (PEER *)' Function 0x1f3fe83e318 'do_app_data_step' 'void (PEER *)'
|       |   `-ImplicitCastExpr 0x1f3fe843a28 <col:26> 'PEER *' <LValueToRValue>
|       |     `-DeclRefExpr 0x1f3fe8439c8 <col:26> 'PEER *' lvalue ParmVar 0x1f3fe843520 'peer' 'PEER *'
|       |-BreakStmt 0x1f3fe843a40 <line:765:9>
|       |-CaseStmt 0x1f3fe843a80 <line:766:5, line:767:43>
|       | |-ConstantExpr 0x1f3fe843a68 <line:766:10> 'int'
|       | | `-DeclRefExpr 0x1f3fe843a48 <col:10> 'int' EnumConstant 0x1f3fe842650 'RENEG_SETUP' 'int'
|       | `-CallExpr 0x1f3fe843b80 <line:767:9, col:43> 'void'
|       |   |-ImplicitCastExpr 0x1f3fe843b68 <col:9> 'void (*)(const SSL_TEST_CTX *, PEER *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x1f3fe843aa8 <col:9> 'void (const SSL_TEST_CTX *, PEER *)' Function 0x1f3fe8381e8 'do_reneg_setup_step' 'void (const SSL_TEST_CTX *, PEER *)'
|       |   |-ImplicitCastExpr 0x1f3fe843bb0 <col:29> 'const SSL_TEST_CTX *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x1f3fe843ac8 <col:29> 'const SSL_TEST_CTX *' lvalue ParmVar 0x1f3fe8434a8 'test_ctx' 'const SSL_TEST_CTX *'
|       |   `-ImplicitCastExpr 0x1f3fe843bc8 <col:39> 'PEER *' <LValueToRValue>
|       |     `-DeclRefExpr 0x1f3fe843ae8 <col:39> 'PEER *' lvalue ParmVar 0x1f3fe843520 'peer' 'PEER *'
|       |-BreakStmt 0x1f3fe843be0 <line:768:9>
|       |-CaseStmt 0x1f3fe843c20 <line:769:5, line:770:31>
|       | |-ConstantExpr 0x1f3fe843c08 <line:769:10> 'int'
|       | | `-DeclRefExpr 0x1f3fe843be8 <col:10> 'int' EnumConstant 0x1f3fe8426a8 'RENEG_HANDSHAKE' 'int'
|       | `-CallExpr 0x1f3fe843ca0 <line:770:9, col:31> 'void'
|       |   |-ImplicitCastExpr 0x1f3fe843c88 <col:9> 'void (*)(PEER *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x1f3fe843c48 <col:9> 'void (PEER *)' Function 0x1f3fe83d728 'do_handshake_step' 'void (PEER *)'
|       |   `-ImplicitCastExpr 0x1f3fe843cc8 <col:27> 'PEER *' <LValueToRValue>
|       |     `-DeclRefExpr 0x1f3fe843c68 <col:27> 'PEER *' lvalue ParmVar 0x1f3fe843520 'peer' 'PEER *'
|       |-BreakStmt 0x1f3fe843ce0 <line:771:9>
|       |-CaseStmt 0x1f3fe843d20 <line:772:5, line:773:30>
|       | |-ConstantExpr 0x1f3fe843d08 <line:772:10> 'int'
|       | | `-DeclRefExpr 0x1f3fe843ce8 <col:10> 'int' EnumConstant 0x1f3fe842700 'APPLICATION_DATA' 'int'
|       | `-CallExpr 0x1f3fe843da0 <line:773:9, col:30> 'void'
|       |   |-ImplicitCastExpr 0x1f3fe843d88 <col:9> 'void (*)(PEER *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x1f3fe843d48 <col:9> 'void (PEER *)' Function 0x1f3fe83e318 'do_app_data_step' 'void (PEER *)'
|       |   `-ImplicitCastExpr 0x1f3fe843dc8 <col:26> 'PEER *' <LValueToRValue>
|       |     `-DeclRefExpr 0x1f3fe843d68 <col:26> 'PEER *' lvalue ParmVar 0x1f3fe843520 'peer' 'PEER *'
|       |-BreakStmt 0x1f3fe843de0 <line:774:9>
|       |-CaseStmt 0x1f3fe843e20 <line:775:5, line:776:30>
|       | |-ConstantExpr 0x1f3fe843e08 <line:775:10> 'int'
|       | | `-DeclRefExpr 0x1f3fe843de8 <col:10> 'int' EnumConstant 0x1f3fe842758 'SHUTDOWN' 'int'
|       | `-CallExpr 0x1f3fe843ea0 <line:776:9, col:30> 'void'
|       |   |-ImplicitCastExpr 0x1f3fe843e88 <col:9> 'void (*)(PEER *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x1f3fe843e48 <col:9> 'void (PEER *)' Function 0x1f3fe841ab0 'do_shutdown_step' 'void (PEER *)'
|       |   `-ImplicitCastExpr 0x1f3fe843ec8 <col:26> 'PEER *' <LValueToRValue>
|       |     `-DeclRefExpr 0x1f3fe843e68 <col:26> 'PEER *' lvalue ParmVar 0x1f3fe843520 'peer' 'PEER *'
|       |-BreakStmt 0x1f3fe843ee0 <line:777:9>
|       |-DefaultStmt 0x1f3fe8d4028 <line:778:5, .//openssl//file_jk/before\test/testutil.h:111:15>
|       | `-DoStmt 0x1f3fe8d4008 <line:106:5, line:111:15>
|       |   |-CompoundStmt 0x1f3fe844048 <line:106:8, line:111:5>
|       |   | `-IfStmt 0x1f3fe844030 <line:107:9, line:110:9>
|       |   |   |-UnaryOperator 0x1f3fe843f30 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|       |   |   | `-ParenExpr 0x1f3fe843f10 <col:14, col:24> 'int'
|       |   |   |   `-IntegerLiteral 0x1f3fe843ee8 <.//openssl//file_jk/before\test\handshake_helper.c:779:20> 'int' 0
|       |   |   `-CompoundStmt 0x1f3fe844018 <.//openssl//file_jk/before\test/testutil.h:107:27, line:110:9>
|       |   |     `-CallExpr 0x1f3fe843ff0 <line:109:13, col:39> 'int'
|       |   |       |-ImplicitCastExpr 0x1f3fe843fd8 <col:13> 'int (*)()' <FunctionToPointerDecay>
|       |   |       | `-DeclRefExpr 0x1f3fe843f68 <col:13> 'int ()' Function 0x1f3fe8279f0 'OPENSSL_assert' 'int ()'
|       |   |       `-UnaryOperator 0x1f3fe843fc0 <col:28, <scratch space>:22:1> 'int' prefix '!' cannot overflow
|       |   |         `-ImplicitCastExpr 0x1f3fe843fa8 <col:1> 'char *' <ArrayToPointerDecay>
|       |   |           `-StringLiteral 0x1f3fe843f88 <col:1> 'char [2]' lvalue "0"
|       |   `-IntegerLiteral 0x1f3fe8d3fe0 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|       `-NullStmt 0x1f3fe8d4048 <.//openssl//file_jk/before\test\handshake_helper.c:779:22>
|-EnumDecl 0x1f3fe8d40e8 <line:783:9, line:794:1> line:783:9
| |-EnumConstantDecl 0x1f3fe8d41c0 <line:785:5> col:5 referenced HANDSHAKE_SUCCESS 'int'
| |-EnumConstantDecl 0x1f3fe8d4218 <line:787:5> col:5 referenced CLIENT_ERROR 'int'
| |-EnumConstantDecl 0x1f3fe8d4270 <line:789:5> col:5 referenced SERVER_ERROR 'int'
| |-EnumConstantDecl 0x1f3fe8d42c8 <line:791:5> col:5 referenced INTERNAL_ERROR 'int'
| `-EnumConstantDecl 0x1f3fe8d4320 <line:793:5> col:5 referenced HANDSHAKE_RETRY 'int'
|-TypedefDecl 0x1f3fe8d43d8 <line:783:1, line:794:3> col:3 referenced handshake_status_t 'enum handshake_status_t':'handshake_status_t'
| `-ElaboratedType 0x1f3fe8d4380 'enum handshake_status_t' sugar
|   `-EnumType 0x1f3fe8d41a0 'handshake_status_t'
|     `-Enum 0x1f3fe8d40e8 ''
|-FunctionDecl 0x1f3fe8d46e8 <line:802:1, line:848:1> line:802:27 used handshake_status 'handshake_status_t (peer_status_t, peer_status_t, int)' static
| |-ParmVarDecl 0x1f3fe8d4480 <col:44, col:58> col:58 used last_status 'peer_status_t':'peer_status_t'
| |-ParmVarDecl 0x1f3fe8d44f8 <line:803:44, col:58> col:58 used previous_status 'peer_status_t':'peer_status_t'
| |-ParmVarDecl 0x1f3fe8d4578 <line:804:44, col:48> col:48 used client_spoke_last 'int'
| `-CompoundStmt 0x1f3fe8d8098 <line:805:1, line:848:1>
|   |-SwitchStmt 0x1f3fe8d4808 <line:806:5, line:845:5>
|   | |-ImplicitCastExpr 0x1f3fe8d47f0 <line:806:13> 'int' <IntegralCast>
|   | | `-ImplicitCastExpr 0x1f3fe8d47d8 <col:13> 'peer_status_t':'peer_status_t' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1f3fe8d47b8 <col:13> 'peer_status_t':'peer_status_t' lvalue ParmVar 0x1f3fe8d4480 'last_status' 'peer_status_t':'peer_status_t'
|   | `-CompoundStmt 0x1f3fe8d8020 <col:26, line:845:5>
|   |   |-CaseStmt 0x1f3fe8d4860 <line:807:5, line:821:9>
|   |   | |-ConstantExpr 0x1f3fe8d4848 <line:807:10> 'int'
|   |   | | `-DeclRefExpr 0x1f3fe8d4828 <col:10> 'int' EnumConstant 0x1f3fe834700 'PEER_SUCCESS' 'int'
|   |   | `-SwitchStmt 0x1f3fe8d48d8 <line:808:9, line:821:9>
|   |   |   |-ImplicitCastExpr 0x1f3fe8d48c0 <line:808:17> 'int' <IntegralCast>
|   |   |   | `-ImplicitCastExpr 0x1f3fe8d48a8 <col:17> 'peer_status_t':'peer_status_t' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x1f3fe8d4888 <col:17> 'peer_status_t':'peer_status_t' lvalue ParmVar 0x1f3fe8d44f8 'previous_status' 'peer_status_t':'peer_status_t'
|   |   |   `-CompoundStmt 0x1f3fe8d4af0 <col:34, line:821:9>
|   |   |     |-CaseStmt 0x1f3fe8d4930 <line:809:9, line:811:20>
|   |   |     | |-ConstantExpr 0x1f3fe8d4918 <line:809:14> 'int'
|   |   |     | | `-DeclRefExpr 0x1f3fe8d48f8 <col:14> 'int' EnumConstant 0x1f3fe834700 'PEER_SUCCESS' 'int'
|   |   |     | `-ReturnStmt 0x1f3fe8d4990 <line:811:13, col:20>
|   |   |     |   `-ImplicitCastExpr 0x1f3fe8d4978 <col:20> 'handshake_status_t':'handshake_status_t' <IntegralCast>
|   |   |     |     `-DeclRefExpr 0x1f3fe8d4958 <col:20> 'int' EnumConstant 0x1f3fe8d41c0 'HANDSHAKE_SUCCESS' 'int'
|   |   |     |-CaseStmt 0x1f3fe8d49d8 <line:812:9, line:814:20>
|   |   |     | |-ConstantExpr 0x1f3fe8d49c0 <line:812:14> 'int'
|   |   |     | | `-DeclRefExpr 0x1f3fe8d49a0 <col:14> 'int' EnumConstant 0x1f3fe834758 'PEER_RETRY' 'int'
|   |   |     | `-ReturnStmt 0x1f3fe8d4a38 <line:814:13, col:20>
|   |   |     |   `-ImplicitCastExpr 0x1f3fe8d4a20 <col:20> 'handshake_status_t':'handshake_status_t' <IntegralCast>
|   |   |     |     `-DeclRefExpr 0x1f3fe8d4a00 <col:20> 'int' EnumConstant 0x1f3fe8d4320 'HANDSHAKE_RETRY' 'int'
|   |   |     `-CaseStmt 0x1f3fe8d4a80 <line:815:9, line:820:20>
|   |   |       |-ConstantExpr 0x1f3fe8d4a68 <line:815:14> 'int'
|   |   |       | `-DeclRefExpr 0x1f3fe8d4a48 <col:14> 'int' EnumConstant 0x1f3fe8347b0 'PEER_ERROR' 'int'
|   |   |       `-ReturnStmt 0x1f3fe8d4ae0 <line:820:13, col:20>
|   |   |         `-ImplicitCastExpr 0x1f3fe8d4ac8 <col:20> 'handshake_status_t':'handshake_status_t' <IntegralCast>
|   |   |           `-DeclRefExpr 0x1f3fe8d4aa8 <col:20> 'int' EnumConstant 0x1f3fe8d42c8 'INTERNAL_ERROR' 'int'
|   |   |-BreakStmt 0x1f3fe8d4b18 <line:822:9>
|   |   |-CaseStmt 0x1f3fe8d4b58 <line:824:5, line:825:16>
|   |   | |-ConstantExpr 0x1f3fe8d4b40 <line:824:10> 'int'
|   |   | | `-DeclRefExpr 0x1f3fe8d4b20 <col:10> 'int' EnumConstant 0x1f3fe834758 'PEER_RETRY' 'int'
|   |   | `-ReturnStmt 0x1f3fe8d4bb8 <line:825:9, col:16>
|   |   |   `-ImplicitCastExpr 0x1f3fe8d4ba0 <col:16> 'handshake_status_t':'handshake_status_t' <IntegralCast>
|   |   |     `-DeclRefExpr 0x1f3fe8d4b80 <col:16> 'int' EnumConstant 0x1f3fe8d4320 'HANDSHAKE_RETRY' 'int'
|   |   `-CaseStmt 0x1f3fe8d4c00 <line:827:5, line:844:9>
|   |     |-ConstantExpr 0x1f3fe8d4be8 <line:827:10> 'int'
|   |     | `-DeclRefExpr 0x1f3fe8d4bc8 <col:10> 'int' EnumConstant 0x1f3fe8347b0 'PEER_ERROR' 'int'
|   |     `-SwitchStmt 0x1f3fe8d4c78 <line:828:9, line:844:9>
|   |       |-ImplicitCastExpr 0x1f3fe8d4c60 <line:828:17> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x1f3fe8d4c48 <col:17> 'peer_status_t':'peer_status_t' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x1f3fe8d4c28 <col:17> 'peer_status_t':'peer_status_t' lvalue ParmVar 0x1f3fe8d44f8 'previous_status' 'peer_status_t':'peer_status_t'
|   |       `-CompoundStmt 0x1f3fe8d4fa0 <col:34, line:844:9>
|   |         |-CaseStmt 0x1f3fe8d4cd0 <line:829:9, line:837:55>
|   |         | |-ConstantExpr 0x1f3fe8d4cb8 <line:829:14> 'int'
|   |         | | `-DeclRefExpr 0x1f3fe8d4c98 <col:14> 'int' EnumConstant 0x1f3fe834700 'PEER_SUCCESS' 'int'
|   |         | `-ReturnStmt 0x1f3fe8d4db8 <line:837:13, col:55>
|   |         |   `-ImplicitCastExpr 0x1f3fe8d4da0 <col:20, col:55> 'handshake_status_t':'handshake_status_t' <IntegralCast>
|   |         |     `-ConditionalOperator 0x1f3fe8d4d70 <col:20, col:55> 'int'
|   |         |       |-ImplicitCastExpr 0x1f3fe8d4d58 <col:20> 'int' <LValueToRValue>
|   |         |       | `-DeclRefExpr 0x1f3fe8d4cf8 <col:20> 'int' lvalue ParmVar 0x1f3fe8d4578 'client_spoke_last' 'int'
|   |         |       |-DeclRefExpr 0x1f3fe8d4d18 <col:40> 'int' EnumConstant 0x1f3fe8d4218 'CLIENT_ERROR' 'int'
|   |         |       `-DeclRefExpr 0x1f3fe8d4d38 <col:55> 'int' EnumConstant 0x1f3fe8d4270 'SERVER_ERROR' 'int'
|   |         |-CaseStmt 0x1f3fe8d4e00 <line:838:9, line:840:20>
|   |         | |-ConstantExpr 0x1f3fe8d4de8 <line:838:14> 'int'
|   |         | | `-DeclRefExpr 0x1f3fe8d4dc8 <col:14> 'int' EnumConstant 0x1f3fe834758 'PEER_RETRY' 'int'
|   |         | `-ReturnStmt 0x1f3fe8d4e60 <line:840:13, col:20>
|   |         |   `-ImplicitCastExpr 0x1f3fe8d4e48 <col:20> 'handshake_status_t':'handshake_status_t' <IntegralCast>
|   |         |     `-DeclRefExpr 0x1f3fe8d4e28 <col:20> 'int' EnumConstant 0x1f3fe8d4320 'HANDSHAKE_RETRY' 'int'
|   |         `-CaseStmt 0x1f3fe8d4ea8 <line:841:9, line:843:55>
|   |           |-ConstantExpr 0x1f3fe8d4e90 <line:841:14> 'int'
|   |           | `-DeclRefExpr 0x1f3fe8d4e70 <col:14> 'int' EnumConstant 0x1f3fe8347b0 'PEER_ERROR' 'int'
|   |           `-ReturnStmt 0x1f3fe8d4f90 <line:843:13, col:55>
|   |             `-ImplicitCastExpr 0x1f3fe8d4f78 <col:20, col:55> 'handshake_status_t':'handshake_status_t' <IntegralCast>
|   |               `-ConditionalOperator 0x1f3fe8d4f48 <col:20, col:55> 'int'
|   |                 |-ImplicitCastExpr 0x1f3fe8d4f30 <col:20> 'int' <LValueToRValue>
|   |                 | `-DeclRefExpr 0x1f3fe8d4ed0 <col:20> 'int' lvalue ParmVar 0x1f3fe8d4578 'client_spoke_last' 'int'
|   |                 |-DeclRefExpr 0x1f3fe8d4ef0 <col:40> 'int' EnumConstant 0x1f3fe8d4270 'SERVER_ERROR' 'int'
|   |                 `-DeclRefExpr 0x1f3fe8d4f10 <col:55> 'int' EnumConstant 0x1f3fe8d4218 'CLIENT_ERROR' 'int'
|   `-ReturnStmt 0x1f3fe8d8088 <line:847:5, col:12>
|     `-ImplicitCastExpr 0x1f3fe8d8070 <col:12> 'handshake_status_t':'handshake_status_t' <IntegralCast>
|       `-DeclRefExpr 0x1f3fe8d8050 <col:12> 'int' EnumConstant 0x1f3fe8d42c8 'INTERNAL_ERROR' 'int'
|-FunctionDecl 0x1f3fe8d8290 <line:851:1, line:863:1> line:851:14 used dup_str 'char *(const unsigned char *, size_t)' static
| |-ParmVarDecl 0x1f3fe8d80d0 <col:22, col:43> col:43 used in 'const unsigned char *'
| |-ParmVarDecl 0x1f3fe8d8148 <col:47, col:54> col:54 used len 'size_t':'unsigned long long'
| `-CompoundStmt 0x1f3fe8d8fa8 <line:852:1, line:863:1>
|   |-DeclStmt 0x1f3fe8d83d8 <line:853:5, col:14>
|   | `-VarDecl 0x1f3fe8d8370 <col:5, col:11> col:11 used ret 'char *'
|   |-IfStmt 0x1f3fe8d8538 <line:855:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|   | |-BinaryOperator 0x1f3fe8d8468 <.//openssl//file_jk/before\test\handshake_helper.c:855:8, col:15> 'int' '=='
|   | | |-ImplicitCastExpr 0x1f3fe8d8438 <col:8> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1f3fe8d83f0 <col:8> 'size_t':'unsigned long long' lvalue ParmVar 0x1f3fe8d8148 'len' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x1f3fe8d8450 <col:15> 'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x1f3fe8d8410 <col:15> 'int' 0
|   | `-ReturnStmt 0x1f3fe8d8528 <line:856:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|   |   `-ImplicitCastExpr 0x1f3fe8d8510 <col:17, col:27> 'char *' <NullToPointer>
|   |     `-ParenExpr 0x1f3fe8d84f0 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1f3fe8d84c8 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1f3fe8d8488 <col:26> 'int' 0
|   |-DoStmt 0x1f3fe8d89e0 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x1f3fe8d89a0 <line:106:8, line:111:5>
|   | | `-IfStmt 0x1f3fe8d8988 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x1f3fe8d8828 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x1f3fe8d8808 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x1f3fe8d87e8 <.//openssl//file_jk/before\test\handshake_helper.c:859:16, col:59> 'int' '=='
|   | |   |     |-ImplicitCastExpr 0x1f3fe8d87d0 <col:16, col:54> 'unsigned long long' <IntegralCast>
|   | |   |     | `-CallExpr 0x1f3fe8d8750 <col:16, col:54> 'int'
|   | |   |     |   |-ImplicitCastExpr 0x1f3fe8d8738 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   | |   |     |   | `-DeclRefExpr 0x1f3fe8d8640 <col:16> 'int ()' Function 0x1f3fe8d8578 'OPENSSL_strnlen' 'int ()'
|   | |   |     |   |-CStyleCastExpr 0x1f3fe8d86f0 <col:32, col:48> 'const char *' <BitCast>
|   | |   |     |   | `-ImplicitCastExpr 0x1f3fe8d86d8 <col:45, col:48> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
|   | |   |     |   |   `-ParenExpr 0x1f3fe8d86b8 <col:45, col:48> 'const unsigned char *' lvalue
|   | |   |     |   |     `-DeclRefExpr 0x1f3fe8d8660 <col:46> 'const unsigned char *' lvalue ParmVar 0x1f3fe8d80d0 'in' 'const unsigned char *'
|   | |   |     |   `-ImplicitCastExpr 0x1f3fe8d8780 <col:51> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   |     |     `-DeclRefExpr 0x1f3fe8d8718 <col:51> 'size_t':'unsigned long long' lvalue ParmVar 0x1f3fe8d8148 'len' 'size_t':'unsigned long long'
|   | |   |     `-ImplicitCastExpr 0x1f3fe8d87b8 <col:59> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   |       `-DeclRefExpr 0x1f3fe8d8798 <col:59> 'size_t':'unsigned long long' lvalue ParmVar 0x1f3fe8d8148 'len' 'size_t':'unsigned long long'
|   | |   `-CompoundStmt 0x1f3fe8d8970 <.//openssl//file_jk/before\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x1f3fe8d8948 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x1f3fe8d8930 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x1f3fe8d8860 <col:13> 'int ()' Function 0x1f3fe8279f0 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x1f3fe8d8918 <col:28, <scratch space>:23:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x1f3fe8d8900 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x1f3fe8d88b8 <col:1> 'char [47]' lvalue "OPENSSL_strnlen((const char*)(in), len) == len"
|   | `-IntegerLiteral 0x1f3fe8d89b8 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x1f3fe8d8a00 <.//openssl//file_jk/before\test\handshake_helper.c:859:63>
|   |-BinaryOperator 0x1f3fe8d8ca0 <line:860:5, col:49> 'char *' '='
|   | |-DeclRefExpr 0x1f3fe8d8a08 <col:5> 'char *' lvalue Var 0x1f3fe8d8370 'ret' 'char *'
|   | `-ImplicitCastExpr 0x1f3fe8d8c88 <col:11, col:49> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x1f3fe8d8c40 <col:11, col:49> 'int'
|   |     |-ImplicitCastExpr 0x1f3fe8d8c28 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1f3fe8d8b30 <col:11> 'int ()' Function 0x1f3fe8d8a68 'OPENSSL_strndup' 'int ()'
|   |     |-CStyleCastExpr 0x1f3fe8d8be0 <col:27, col:43> 'const char *' <BitCast>
|   |     | `-ImplicitCastExpr 0x1f3fe8d8bc8 <col:40, col:43> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
|   |     |   `-ParenExpr 0x1f3fe8d8ba8 <col:40, col:43> 'const unsigned char *' lvalue
|   |     |     `-DeclRefExpr 0x1f3fe8d8b50 <col:41> 'const unsigned char *' lvalue ParmVar 0x1f3fe8d80d0 'in' 'const unsigned char *'
|   |     `-ImplicitCastExpr 0x1f3fe8d8c70 <col:46> 'size_t':'unsigned long long' <LValueToRValue>
|   |       `-DeclRefExpr 0x1f3fe8d8c08 <col:46> 'size_t':'unsigned long long' lvalue ParmVar 0x1f3fe8d8148 'len' 'size_t':'unsigned long long'
|   |-DoStmt 0x1f3fe8d8f38 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x1f3fe8d8ef8 <line:106:8, line:111:5>
|   | | `-IfStmt 0x1f3fe8d8ee0 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x1f3fe8d8dd8 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x1f3fe8d8db8 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x1f3fe8d8d98 <.//openssl//file_jk/before\test\handshake_helper.c:861:16, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | |   |     |-ImplicitCastExpr 0x1f3fe8d8d68 <.//openssl//file_jk/before\test\handshake_helper.c:861:16> 'char *' <LValueToRValue>
|   | |   |     | `-DeclRefExpr 0x1f3fe8d8cc0 <col:16> 'char *' lvalue Var 0x1f3fe8d8370 'ret' 'char *'
|   | |   |     `-ImplicitCastExpr 0x1f3fe8d8d80 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   | |   |       `-ParenExpr 0x1f3fe8d8d48 <col:17, col:27> 'void *'
|   | |   |         `-CStyleCastExpr 0x1f3fe8d8d20 <col:18, col:26> 'void *' <NullToPointer>
|   | |   |           `-IntegerLiteral 0x1f3fe8d8ce0 <col:26> 'int' 0
|   | |   `-CompoundStmt 0x1f3fe8d8ec8 <.//openssl//file_jk/before\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x1f3fe8d8ea0 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x1f3fe8d8e88 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x1f3fe8d8e10 <col:13> 'int ()' Function 0x1f3fe8279f0 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x1f3fe8d8e70 <col:28, <scratch space>:24:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x1f3fe8d8e58 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x1f3fe8d8e30 <col:1> 'char [12]' lvalue "ret != NULL"
|   | `-IntegerLiteral 0x1f3fe8d8f10 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x1f3fe8d8f58 <.//openssl//file_jk/before\test\handshake_helper.c:861:28>
|   `-ReturnStmt 0x1f3fe8d8f98 <line:862:5, col:12>
|     `-ImplicitCastExpr 0x1f3fe8d8f80 <col:12> 'char *' <LValueToRValue>
|       `-DeclRefExpr 0x1f3fe8d8f60 <col:12> 'char *' lvalue Var 0x1f3fe8d8370 'ret' 'char *'
|-FunctionDecl 0x1f3fe8d94d8 <line:878:1, line:1077:1> line:878:26 invalid do_handshake_internal 'HANDSHAKE_RESULT *(int *, int *, int *, const SSL_TEST_CTX *, const SSL_TEST_EXTRA_CONF *, int *, int **)' static
| |-ParmVarDecl 0x1f3fe8d9030 <line:879:5, col:14> col:14 invalid server_ctx 'int *'
| |-ParmVarDecl 0x1f3fe8d90b0 <col:26, col:35> col:35 invalid server2_ctx 'int *'
| |-ParmVarDecl 0x1f3fe8d9130 <col:48, col:57> col:57 invalid client_ctx 'int *'
| |-ParmVarDecl 0x1f3fe8d91a8 <line:880:5, col:25> col:25 used test_ctx 'const SSL_TEST_CTX *'
| |-ParmVarDecl 0x1f3fe8d9220 <col:35, col:62> col:62 used extra 'const SSL_TEST_EXTRA_CONF *'
| |-ParmVarDecl 0x1f3fe8d92a0 <line:881:5, col:18> col:18 invalid session_in 'int *'
| |-ParmVarDecl 0x1f3fe8d9358 <col:30, col:44> col:44 invalid session_out 'int **'
| `-CompoundStmt 0x1f3fe8ddb00 <line:882:1, line:1077:1>
|   |-DeclStmt 0x1f3fe8d96d0 <line:883:5, col:24>
|   | |-VarDecl 0x1f3fe8d95d8 <col:5, col:10> col:10 used server 'PEER':'struct peer_st'
|   | `-VarDecl 0x1f3fe8d9650 <col:5, col:18> col:18 used client 'PEER':'struct peer_st'
|   |-DeclStmt 0x1f3fe8d97f0 <line:885:5, col:53>
|   | |-VarDecl 0x1f3fe8d96f8 <col:5, col:23> col:23 used server_ex_data 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st'
|   | `-VarDecl 0x1f3fe8d9770 <col:5, col:39> col:39 used client_ex_data 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st'
|   |-DeclStmt 0x1f3fe8d9990 <line:886:5, col:64>
|   | |-VarDecl 0x1f3fe8d9818 <col:5, col:14> col:14 used client_ctx_data 'CTX_DATA':'struct ctx_data_st'
|   | |-VarDecl 0x1f3fe8d9890 <col:5, col:31> col:31 used server_ctx_data 'CTX_DATA':'struct ctx_data_st'
|   | `-VarDecl 0x1f3fe8d9908 <col:5, col:48> col:48 used server2_ctx_data 'CTX_DATA':'struct ctx_data_st'
|   |-DeclStmt 0x1f3fe8d9ad0 <line:887:5, col:51>
|   | `-VarDecl 0x1f3fe8d99b8 <col:5, col:50> col:23 used ret 'HANDSHAKE_RESULT *' cinit
|   |   `-CallExpr 0x1f3fe8d9ab0 <col:29, col:50> 'HANDSHAKE_RESULT *'
|   |     `-ImplicitCastExpr 0x1f3fe8d9a98 <col:29> 'HANDSHAKE_RESULT *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x1f3fe8d9a20 <col:29> 'HANDSHAKE_RESULT *(void)' Function 0x1f3fe827448 'HANDSHAKE_RESULT_new' 'HANDSHAKE_RESULT *(void)'
|   |-DeclStmt 0x1f3fe8d9c50 <line:888:5, col:47>
|   | |-VarDecl 0x1f3fe8d9b00 <col:5, col:23> col:9 used client_turn 'int' cinit
|   | | `-IntegerLiteral 0x1f3fe8d9b68 <col:23> 'int' 1
|   | `-VarDecl 0x1f3fe8d9ba8 <col:5, col:46> col:26 used client_turn_count 'int' cinit
|   |   `-IntegerLiteral 0x1f3fe8d9c10 <col:46> 'int' 0
|   |-DeclStmt 0x1f3fe8d9d18 <line:889:5, col:38>
|   | `-VarDecl 0x1f3fe8d9c78 <col:5, col:29> col:21 used phase 'connect_phase_t':'connect_phase_t' cinit
|   |   `-ImplicitCastExpr 0x1f3fe8d9d00 <col:29> 'connect_phase_t':'connect_phase_t' <IntegralCast>
|   |     `-DeclRefExpr 0x1f3fe8d9ce0 <col:29> 'int' EnumConstant 0x1f3fe8425a0 'HANDSHAKE' 'int'
|   |-DeclStmt 0x1f3fe8d9de0 <line:890:5, col:48>
|   | `-VarDecl 0x1f3fe8d9d40 <col:5, col:33> col:24 used status 'handshake_status_t':'handshake_status_t' cinit
|   |   `-ImplicitCastExpr 0x1f3fe8d9dc8 <col:33> 'handshake_status_t':'handshake_status_t' <IntegralCast>
|   |     `-DeclRefExpr 0x1f3fe8d9da8 <col:33> 'int' EnumConstant 0x1f3fe8d4320 'HANDSHAKE_RETRY' 'int'
|   |-DeclStmt 0x1f3fe8d9f18 <line:891:5, col:37>
|   | `-VarDecl 0x1f3fe8d9e10 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/before\test\handshake_helper.c:891:26 used tick 'const unsigned char *' cinit
|   |   `-ImplicitCastExpr 0x1f3fe8d9f00 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const unsigned char *' <NullToPointer>
|   |     `-ParenExpr 0x1f3fe8d9ee0 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1f3fe8d9eb8 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1f3fe8d9e78 <col:26> 'int' 0
|   |-DeclStmt 0x1f3fe8d9fe8 <.//openssl//file_jk/before\test\handshake_helper.c:892:5, col:24>
|   | `-VarDecl 0x1f3fe8d9f40 <col:5, col:23> col:12 used tick_len 'size_t':'unsigned long long' cinit
|   |   `-ImplicitCastExpr 0x1f3fe8d9fd0 <col:23> 'size_t':'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x1f3fe8d9fa8 <col:23> 'int' 0
|   |-DeclStmt 0x1f3fe8d2140 <line:894:5, col:38>
|   | `-VarDecl 0x1f3fe8d2038 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/before\test\handshake_helper.c:894:26 used proto 'const unsigned char *' cinit
|   |   `-ImplicitCastExpr 0x1f3fe8d2128 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const unsigned char *' <NullToPointer>
|   |     `-ParenExpr 0x1f3fe8d2108 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1f3fe8d20e0 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1f3fe8d20a0 <col:26> 'int' 0
|   |-DeclStmt 0x1f3fe8d2218 <.//openssl//file_jk/before\test\handshake_helper.c:896:5, col:31>
|   | `-VarDecl 0x1f3fe8d2170 <col:5, col:30> col:18 used proto_len 'unsigned int' cinit
|   |   `-ImplicitCastExpr 0x1f3fe8d2200 <col:30> 'unsigned int' <IntegralCast>
|   |     `-IntegerLiteral 0x1f3fe8d21d8 <col:30> 'int' 0
|   |-CallExpr 0x1f3fe8d2370 <line:899:5, col:56> 'void *'
|   | |-ImplicitCastExpr 0x1f3fe8d2358 <col:5> 'void *(*)(void *, int, unsigned long long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1f3fe8d2230 <col:5> 'void *(void *, int, unsigned long long)' Function 0x1f3fe7de368 'memset' 'void *(void *, int, unsigned long long)'
|   | |-ImplicitCastExpr 0x1f3fe8d23a8 <col:12, col:13> 'void *' <BitCast>
|   | | `-UnaryOperator 0x1f3fe8d2288 <col:12, col:13> 'CTX_DATA *' prefix '&' cannot overflow
|   | |   `-DeclRefExpr 0x1f3fe8d2250 <col:13> 'CTX_DATA':'struct ctx_data_st' lvalue Var 0x1f3fe8d9890 'server_ctx_data' 'CTX_DATA':'struct ctx_data_st'
|   | |-IntegerLiteral 0x1f3fe8d22a0 <col:30> 'int' 0
|   | `-UnaryExprOrTypeTraitExpr 0x1f3fe8d2308 <col:33, col:55> 'unsigned long long' sizeof
|   |   `-ParenExpr 0x1f3fe8d22e8 <col:39, col:55> 'CTX_DATA':'struct ctx_data_st' lvalue
|   |     `-DeclRefExpr 0x1f3fe8d22c8 <col:40> 'CTX_DATA':'struct ctx_data_st' lvalue Var 0x1f3fe8d9890 'server_ctx_data' 'CTX_DATA':'struct ctx_data_st' non_odr_use_unevaluated
|   |-CallExpr 0x1f3fe8d2538 <line:900:5, col:58> 'void *'
|   | |-ImplicitCastExpr 0x1f3fe8d2520 <col:5> 'void *(*)(void *, int, unsigned long long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1f3fe8d2428 <col:5> 'void *(void *, int, unsigned long long)' Function 0x1f3fe7de368 'memset' 'void *(void *, int, unsigned long long)'
|   | |-ImplicitCastExpr 0x1f3fe8d2570 <col:12, col:13> 'void *' <BitCast>
|   | | `-UnaryOperator 0x1f3fe8d2480 <col:12, col:13> 'CTX_DATA *' prefix '&' cannot overflow
|   | |   `-DeclRefExpr 0x1f3fe8d2448 <col:13> 'CTX_DATA':'struct ctx_data_st' lvalue Var 0x1f3fe8d9908 'server2_ctx_data' 'CTX_DATA':'struct ctx_data_st'
|   | |-IntegerLiteral 0x1f3fe8d2498 <col:31> 'int' 0
|   | `-UnaryExprOrTypeTraitExpr 0x1f3fe8d2500 <col:34, col:57> 'unsigned long long' sizeof
|   |   `-ParenExpr 0x1f3fe8d24e0 <col:40, col:57> 'CTX_DATA':'struct ctx_data_st' lvalue
|   |     `-DeclRefExpr 0x1f3fe8d24c0 <col:41> 'CTX_DATA':'struct ctx_data_st' lvalue Var 0x1f3fe8d9908 'server2_ctx_data' 'CTX_DATA':'struct ctx_data_st' non_odr_use_unevaluated
|   |-CallExpr 0x1f3fe8d2698 <line:901:5, col:56> 'void *'
|   | |-ImplicitCastExpr 0x1f3fe8d2680 <col:5> 'void *(*)(void *, int, unsigned long long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1f3fe8d2588 <col:5> 'void *(void *, int, unsigned long long)' Function 0x1f3fe7de368 'memset' 'void *(void *, int, unsigned long long)'
|   | |-ImplicitCastExpr 0x1f3fe8d26d0 <col:12, col:13> 'void *' <BitCast>
|   | | `-UnaryOperator 0x1f3fe8d25e0 <col:12, col:13> 'CTX_DATA *' prefix '&' cannot overflow
|   | |   `-DeclRefExpr 0x1f3fe8d25a8 <col:13> 'CTX_DATA':'struct ctx_data_st' lvalue Var 0x1f3fe8d9818 'client_ctx_data' 'CTX_DATA':'struct ctx_data_st'
|   | |-IntegerLiteral 0x1f3fe8d25f8 <col:30> 'int' 0
|   | `-UnaryExprOrTypeTraitExpr 0x1f3fe8d2660 <col:33, col:55> 'unsigned long long' sizeof
|   |   `-ParenExpr 0x1f3fe8d2640 <col:39, col:55> 'CTX_DATA':'struct ctx_data_st' lvalue
|   |     `-DeclRefExpr 0x1f3fe8d2620 <col:40> 'CTX_DATA':'struct ctx_data_st' lvalue Var 0x1f3fe8d9818 'client_ctx_data' 'CTX_DATA':'struct ctx_data_st' non_odr_use_unevaluated
|   |-CallExpr 0x1f3fe8d27f8 <line:902:5, col:38> 'void *'
|   | |-ImplicitCastExpr 0x1f3fe8d27e0 <col:5> 'void *(*)(void *, int, unsigned long long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1f3fe8d26e8 <col:5> 'void *(void *, int, unsigned long long)' Function 0x1f3fe7de368 'memset' 'void *(void *, int, unsigned long long)'
|   | |-ImplicitCastExpr 0x1f3fe8d2830 <col:12, col:13> 'void *' <BitCast>
|   | | `-UnaryOperator 0x1f3fe8d2740 <col:12, col:13> 'PEER *' prefix '&' cannot overflow
|   | |   `-DeclRefExpr 0x1f3fe8d2708 <col:13> 'PEER':'struct peer_st' lvalue Var 0x1f3fe8d95d8 'server' 'PEER':'struct peer_st'
|   | |-IntegerLiteral 0x1f3fe8d2758 <col:21> 'int' 0
|   | `-UnaryExprOrTypeTraitExpr 0x1f3fe8d27c0 <col:24, col:37> 'unsigned long long' sizeof
|   |   `-ParenExpr 0x1f3fe8d27a0 <col:30, col:37> 'PEER':'struct peer_st' lvalue
|   |     `-DeclRefExpr 0x1f3fe8d2780 <col:31> 'PEER':'struct peer_st' lvalue Var 0x1f3fe8d95d8 'server' 'PEER':'struct peer_st' non_odr_use_unevaluated
|   |-CallExpr 0x1f3fe8d2958 <line:903:5, col:38> 'void *'
|   | |-ImplicitCastExpr 0x1f3fe8d2940 <col:5> 'void *(*)(void *, int, unsigned long long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1f3fe8d2848 <col:5> 'void *(void *, int, unsigned long long)' Function 0x1f3fe7de368 'memset' 'void *(void *, int, unsigned long long)'
|   | |-ImplicitCastExpr 0x1f3fe8d2990 <col:12, col:13> 'void *' <BitCast>
|   | | `-UnaryOperator 0x1f3fe8d28a0 <col:12, col:13> 'PEER *' prefix '&' cannot overflow
|   | |   `-DeclRefExpr 0x1f3fe8d2868 <col:13> 'PEER':'struct peer_st' lvalue Var 0x1f3fe8d9650 'client' 'PEER':'struct peer_st'
|   | |-IntegerLiteral 0x1f3fe8d28b8 <col:21> 'int' 0
|   | `-UnaryExprOrTypeTraitExpr 0x1f3fe8d2920 <col:24, col:37> 'unsigned long long' sizeof
|   |   `-ParenExpr 0x1f3fe8d2900 <col:30, col:37> 'PEER':'struct peer_st' lvalue
|   |     `-DeclRefExpr 0x1f3fe8d28e0 <col:31> 'PEER':'struct peer_st' lvalue Var 0x1f3fe8d9650 'client' 'PEER':'struct peer_st' non_odr_use_unevaluated
|   |-BinaryOperator 0x1f3fe8d2c70 <line:912:5, col:62> 'int' '='
|   | |-MemberExpr 0x1f3fe8d2b50 <col:5, col:12> 'int' lvalue .bytes_to_write 0x1f3fe834bd8
|   | | `-DeclRefExpr 0x1f3fe8d2b30 <col:5> 'PEER':'struct peer_st' lvalue Var 0x1f3fe8d95d8 'server' 'PEER':'struct peer_st'
|   | `-BinaryOperator 0x1f3fe8d2c50 <col:29, col:62> 'int' '='
|   |   |-MemberExpr 0x1f3fe8d2ba0 <col:29, col:36> 'int' lvalue .bytes_to_read 0x1f3fe834c48
|   |   | `-DeclRefExpr 0x1f3fe8d2b80 <col:29> 'PEER':'struct peer_st' lvalue Var 0x1f3fe8d9650 'client' 'PEER':'struct peer_st'
|   |   `-ImplicitCastExpr 0x1f3fe8d2c38 <col:52, col:62> 'int' <LValueToRValue>
|   |     `-MemberExpr 0x1f3fe8d2c08 <col:52, col:62> 'const int' lvalue ->app_data_size 0x1f3fe87f370
|   |       `-ImplicitCastExpr 0x1f3fe8d2bf0 <col:52> 'const SSL_TEST_CTX *' <LValueToRValue>
|   |         `-DeclRefExpr 0x1f3fe8d2bd0 <col:52> 'const SSL_TEST_CTX *' lvalue ParmVar 0x1f3fe8d91a8 'test_ctx' 'const SSL_TEST_CTX *'
|   |-BinaryOperator 0x1f3fe8d2dd0 <line:913:5, col:62> 'int' '='
|   | |-MemberExpr 0x1f3fe8d2cb0 <col:5, col:12> 'int' lvalue .bytes_to_write 0x1f3fe834bd8
|   | | `-DeclRefExpr 0x1f3fe8d2c90 <col:5> 'PEER':'struct peer_st' lvalue Var 0x1f3fe8d9650 'client' 'PEER':'struct peer_st'
|   | `-BinaryOperator 0x1f3fe8d2db0 <col:29, col:62> 'int' '='
|   |   |-MemberExpr 0x1f3fe8d2d00 <col:29, col:36> 'int' lvalue .bytes_to_read 0x1f3fe834c48
|   |   | `-DeclRefExpr 0x1f3fe8d2ce0 <col:29> 'PEER':'struct peer_st' lvalue Var 0x1f3fe8d95d8 'server' 'PEER':'struct peer_st'
|   |   `-ImplicitCastExpr 0x1f3fe8d2d98 <col:52, col:62> 'int' <LValueToRValue>
|   |     `-MemberExpr 0x1f3fe8d2d68 <col:52, col:62> 'const int' lvalue ->app_data_size 0x1f3fe87f370
|   |       `-ImplicitCastExpr 0x1f3fe8d2d50 <col:52> 'const SSL_TEST_CTX *' <LValueToRValue>
|   |         `-DeclRefExpr 0x1f3fe8d2d30 <col:52> 'const SSL_TEST_CTX *' lvalue ParmVar 0x1f3fe8d91a8 'test_ctx' 'const SSL_TEST_CTX *'
|   |-IfStmt 0x1f3fe8da5b0 <line:916:5, line:920:5>
|   | |-OpaqueValueExpr 0x1f3fe8da598 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1f3fe8da568 <line:916:29, line:920:5>
|   |   |-DoStmt 0x1f3fe8da238 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   |   | |-CompoundStmt 0x1f3fe8da1f8 <line:106:8, line:111:5>
|   |   | | `-IfStmt 0x1f3fe8da1e0 <line:107:9, line:110:9>
|   |   | |   |-OpaqueValueExpr 0x1f3fe8da1c8 <<invalid sloc>> '_Bool'
|   |   | |   `-CompoundStmt 0x1f3fe8da1b0 <line:107:27, line:110:9>
|   |   | |     `-CallExpr 0x1f3fe8da188 <line:109:13, col:39> 'int'
|   |   | |       |-ImplicitCastExpr 0x1f3fe8da170 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   | |       | `-DeclRefExpr 0x1f3fe8da098 <col:13> 'int ()' Function 0x1f3fe8279f0 'OPENSSL_assert' 'int ()'
|   |   | |       `-UnaryOperator 0x1f3fe8da158 <col:28, <scratch space>:25:1> 'int' prefix '!' cannot overflow
|   |   | |         `-ImplicitCastExpr 0x1f3fe8da140 <col:1> 'char *' <ArrayToPointerDecay>
|   |   | |           `-StringLiteral 0x1f3fe8da0f8 <col:1> 'char [44]' lvalue "SSL_CTX_add_session(server_ctx, session_in)"
|   |   | `-IntegerLiteral 0x1f3fe8da210 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |   |-NullStmt 0x1f3fe8da258 <.//openssl//file_jk/before\test\handshake_helper.c:918:64>
|   |   |-DoStmt 0x1f3fe8da540 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   |   | |-CompoundStmt 0x1f3fe8da500 <line:106:8, line:111:5>
|   |   | | `-IfStmt 0x1f3fe8da4e8 <line:107:9, line:110:9>
|   |   | |   |-OpaqueValueExpr 0x1f3fe8da4d0 <<invalid sloc>> '_Bool'
|   |   | |   `-CompoundStmt 0x1f3fe8da4b8 <line:107:27, line:110:9>
|   |   | |     `-CallExpr 0x1f3fe8da490 <line:109:13, col:39> 'int'
|   |   | |       |-ImplicitCastExpr 0x1f3fe8da478 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   | |       | `-DeclRefExpr 0x1f3fe8da3b0 <col:13> 'int ()' Function 0x1f3fe8279f0 'OPENSSL_assert' 'int ()'
|   |   | |       `-UnaryOperator 0x1f3fe8da460 <col:28, <scratch space>:26:1> 'int' prefix '!' cannot overflow
|   |   | |         `-ImplicitCastExpr 0x1f3fe8da448 <col:1> 'char *' <ArrayToPointerDecay>
|   |   | |           `-StringLiteral 0x1f3fe8da408 <col:1> 'char [40]' lvalue "SSL_set_session(client.ssl, session_in)"
|   |   | `-IntegerLiteral 0x1f3fe8da518 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |   `-NullStmt 0x1f3fe8da560 <.//openssl//file_jk/before\test\handshake_helper.c:919:60>
|   |-CallExpr 0x1f3fe8da6d8 <line:922:5, col:54> 'void *'
|   | |-ImplicitCastExpr 0x1f3fe8da6c0 <col:5> 'void *(*)(void *, int, unsigned long long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1f3fe8da5c8 <col:5> 'void *(void *, int, unsigned long long)' Function 0x1f3fe7de368 'memset' 'void *(void *, int, unsigned long long)'
|   | |-ImplicitCastExpr 0x1f3fe8da710 <col:12, col:13> 'void *' <BitCast>
|   | | `-UnaryOperator 0x1f3fe8da620 <col:12, col:13> 'HANDSHAKE_EX_DATA *' prefix '&' cannot overflow
|   | |   `-DeclRefExpr 0x1f3fe8da5e8 <col:13> 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st' lvalue Var 0x1f3fe8d96f8 'server_ex_data' 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st'
|   | |-IntegerLiteral 0x1f3fe8da638 <col:29> 'int' 0
|   | `-UnaryExprOrTypeTraitExpr 0x1f3fe8da6a0 <col:32, col:53> 'unsigned long long' sizeof
|   |   `-ParenExpr 0x1f3fe8da680 <col:38, col:53> 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st' lvalue
|   |     `-DeclRefExpr 0x1f3fe8da660 <col:39> 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st' lvalue Var 0x1f3fe8d96f8 'server_ex_data' 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st' non_odr_use_unevaluated
|   |-CallExpr 0x1f3fe8da8a8 <line:923:5, col:54> 'void *'
|   | |-ImplicitCastExpr 0x1f3fe8da890 <col:5> 'void *(*)(void *, int, unsigned long long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1f3fe8da798 <col:5> 'void *(void *, int, unsigned long long)' Function 0x1f3fe7de368 'memset' 'void *(void *, int, unsigned long long)'
|   | |-ImplicitCastExpr 0x1f3fe8da8e0 <col:12, col:13> 'void *' <BitCast>
|   | | `-UnaryOperator 0x1f3fe8da7f0 <col:12, col:13> 'HANDSHAKE_EX_DATA *' prefix '&' cannot overflow
|   | |   `-DeclRefExpr 0x1f3fe8da7b8 <col:13> 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st' lvalue Var 0x1f3fe8d9770 'client_ex_data' 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st'
|   | |-IntegerLiteral 0x1f3fe8da808 <col:29> 'int' 0
|   | `-UnaryExprOrTypeTraitExpr 0x1f3fe8da870 <col:32, col:53> 'unsigned long long' sizeof
|   |   `-ParenExpr 0x1f3fe8da850 <col:38, col:53> 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st' lvalue
|   |     `-DeclRefExpr 0x1f3fe8da830 <col:39> 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st' lvalue Var 0x1f3fe8d9770 'client_ex_data' 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st' non_odr_use_unevaluated
|   |-BinaryOperator 0x1f3fe8da9b0 <line:925:5, col:19> 'ssl_test_result_t':'ssl_test_result_t' '='
|   | |-MemberExpr 0x1f3fe8da948 <col:5, col:10> 'ssl_test_result_t':'ssl_test_result_t' lvalue ->result 0x1f3fe87e670
|   | | `-ImplicitCastExpr 0x1f3fe8da930 <col:5> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1f3fe8da8f8 <col:5> 'HANDSHAKE_RESULT *' lvalue Var 0x1f3fe8d99b8 'ret' 'HANDSHAKE_RESULT *'
|   | `-ImplicitCastExpr 0x1f3fe8da998 <col:19> 'ssl_test_result_t':'ssl_test_result_t' <IntegralCast>
|   |   `-DeclRefExpr 0x1f3fe8da978 <col:19> 'int' EnumConstant 0x1f3fe876b08 'SSL_TEST_INTERNAL_ERROR' 'int'
|   |-DoStmt 0x1f3fe8daf50 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x1f3fe8daf10 <line:106:8, line:111:5>
|   | | `-IfStmt 0x1f3fe8daef8 <line:107:9, line:110:9>
|   | |   |-OpaqueValueExpr 0x1f3fe8daee0 <<invalid sloc>> '_Bool'
|   | |   `-CompoundStmt 0x1f3fe8daec8 <line:107:27, line:110:9>
|   | |     `-CallExpr 0x1f3fe8daea0 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x1f3fe8dae88 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x1f3fe8dadc8 <col:13> 'int ()' Function 0x1f3fe8279f0 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x1f3fe8dae70 <col:28, <scratch space>:27:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x1f3fe8dae58 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x1f3fe8dae28 <col:1> 'char [25]' lvalue "client_to_server != NULL"
|   | `-IntegerLiteral 0x1f3fe8daf28 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x1f3fe8daf70 <.//openssl//file_jk/before\test\handshake_helper.c:930:41>
|   |-DoStmt 0x1f3fe8d7138 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x1f3fe8d70f8 <line:106:8, line:111:5>
|   | | `-IfStmt 0x1f3fe8d70e0 <line:107:9, line:110:9>
|   | |   |-OpaqueValueExpr 0x1f3fe8d70c8 <<invalid sloc>> '_Bool'
|   | |   `-CompoundStmt 0x1f3fe8d70b0 <line:107:27, line:110:9>
|   | |     `-CallExpr 0x1f3fe8d7088 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x1f3fe8d7070 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x1f3fe8db020 <col:13> 'int ()' Function 0x1f3fe8279f0 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x1f3fe8d7058 <col:28, <scratch space>:28:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x1f3fe8d7040 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x1f3fe8d7010 <col:1> 'char [25]' lvalue "server_to_client != NULL"
|   | `-IntegerLiteral 0x1f3fe8d7110 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x1f3fe8d7158 <.//openssl//file_jk/before\test\handshake_helper.c:931:41>
|   |-DoStmt 0x1f3fe8d7958 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x1f3fe8d7918 <line:106:8, line:111:5>
|   | | `-IfStmt 0x1f3fe8d7900 <line:107:9, line:110:9>
|   | |   |-OpaqueValueExpr 0x1f3fe8d78e8 <<invalid sloc>> '_Bool'
|   | |   `-CompoundStmt 0x1f3fe8d78d0 <line:107:27, line:110:9>
|   | |     `-CallExpr 0x1f3fe8d78a8 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x1f3fe8d7890 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x1f3fe8d77c8 <col:13> 'int ()' Function 0x1f3fe8279f0 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x1f3fe8d7878 <col:28, <scratch space>:29:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x1f3fe8d7860 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x1f3fe8d7828 <col:1> 'char [33]' lvalue "BIO_up_ref(server_to_client) > 0"
|   | `-IntegerLiteral 0x1f3fe8d7930 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x1f3fe8d7978 <.//openssl//file_jk/before\test\handshake_helper.c:942:49>
|   |-DoStmt 0x1f3fe8d7b38 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x1f3fe8d7af8 <line:106:8, line:111:5>
|   | | `-IfStmt 0x1f3fe8d7ae0 <line:107:9, line:110:9>
|   | |   |-OpaqueValueExpr 0x1f3fe8d7ac8 <<invalid sloc>> '_Bool'
|   | |   `-CompoundStmt 0x1f3fe8d7ab0 <line:107:27, line:110:9>
|   | |     `-CallExpr 0x1f3fe8d7a88 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x1f3fe8d7a70 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x1f3fe8d79e8 <col:13> 'int ()' Function 0x1f3fe8279f0 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x1f3fe8d7a58 <col:28, <scratch space>:30:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x1f3fe8d7a40 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x1f3fe8d7a08 <col:1> 'char [33]' lvalue "BIO_up_ref(client_to_server) > 0"
|   | `-IntegerLiteral 0x1f3fe8d7b10 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x1f3fe8d7b58 <.//openssl//file_jk/before\test\handshake_helper.c:943:49>
|   |-BinaryOperator 0x1f3fe8d7f28 <line:946:5, col:70> 'int' '='
|   | |-DeclRefExpr 0x1f3fe8d7ba0 <col:5> 'int' lvalue Var 0x1f3fe82d2d8 'ex_data_idx' 'int'
|   | `-CallExpr 0x1f3fe8d7ec8 <col:19, col:70> 'int'
|   |   |-ImplicitCastExpr 0x1f3fe8d7eb0 <col:19> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1f3fe8d7cb0 <col:19> 'int ()' Function 0x1f3fe8d7be8 'SSL_get_ex_new_index' 'int ()'
|   |   |-IntegerLiteral 0x1f3fe8d7cd0 <col:40> 'int' 0
|   |   |-ImplicitCastExpr 0x1f3fe8d7f10 <col:43> 'char *' <ArrayToPointerDecay>
|   |   | `-StringLiteral 0x1f3fe8d7cf8 <col:43> 'char [8]' lvalue "ex data"
|   |   |-ParenExpr 0x1f3fe8d7d80 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'void *'
|   |   | `-CStyleCastExpr 0x1f3fe8d7d58 <col:18, col:26> 'void *' <NullToPointer>
|   |   |   `-IntegerLiteral 0x1f3fe8d7d18 <col:26> 'int' 0
|   |   |-ParenExpr 0x1f3fe8d7e08 <col:17, col:27> 'void *'
|   |   | `-CStyleCastExpr 0x1f3fe8d7de0 <col:18, col:26> 'void *' <NullToPointer>
|   |   |   `-IntegerLiteral 0x1f3fe8d7da0 <col:26> 'int' 0
|   |   `-ParenExpr 0x1f3fe8d7e90 <col:17, col:27> 'void *'
|   |     `-CStyleCastExpr 0x1f3fe8d7e68 <col:18, col:26> 'void *' <NullToPointer>
|   |       `-IntegerLiteral 0x1f3fe8d7e28 <col:26> 'int' 0
|   |-DoStmt 0x1f3fe8d3118 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x1f3fe8d30d8 <line:106:8, line:111:5>
|   | | `-IfStmt 0x1f3fe8d30c0 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x1f3fe8d7fe8 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x1f3fe8d7fc8 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x1f3fe8d7fa8 <.//openssl//file_jk/before\test\handshake_helper.c:947:16, col:31> 'int' '>='
|   | |   |     |-ImplicitCastExpr 0x1f3fe8d7f90 <col:16> 'int' <LValueToRValue>
|   | |   |     | `-DeclRefExpr 0x1f3fe8d7f48 <col:16> 'int' lvalue Var 0x1f3fe82d2d8 'ex_data_idx' 'int'
|   | |   |     `-IntegerLiteral 0x1f3fe8d7f68 <col:31> 'int' 0
|   | |   `-CompoundStmt 0x1f3fe8d30a8 <.//openssl//file_jk/before\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x1f3fe8d3080 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x1f3fe8d3068 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x1f3fe8d2ff0 <col:13> 'int ()' Function 0x1f3fe8279f0 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x1f3fe8d3050 <col:28, <scratch space>:31:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x1f3fe8d3038 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x1f3fe8d3010 <col:1> 'char [17]' lvalue "ex_data_idx >= 0"
|   | `-IntegerLiteral 0x1f3fe8d30f0 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x1f3fe8d3138 <.//openssl//file_jk/before\test\handshake_helper.c:947:33>
|   |-DoStmt 0x1f3fe8d3480 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x1f3fe8d3440 <line:106:8, line:111:5>
|   | | `-IfStmt 0x1f3fe8d3428 <line:107:9, line:110:9>
|   | |   |-OpaqueValueExpr 0x1f3fe8d3410 <<invalid sloc>> '_Bool'
|   | |   `-CompoundStmt 0x1f3fe8d33f8 <line:107:27, line:110:9>
|   | |     `-CallExpr 0x1f3fe8d33d0 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x1f3fe8d33b8 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x1f3fe8d3310 <col:13> 'int ()' Function 0x1f3fe8279f0 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x1f3fe8d33a0 <col:28, <scratch space>:32:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x1f3fe8d3388 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x1f3fe8d3330 <col:1> 'char [63]' lvalue "SSL_set_ex_data(server.ssl, ex_data_idx, &server_ex_data) == 1"
|   | `-IntegerLiteral 0x1f3fe8d3458 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x1f3fe8d34a0 <.//openssl//file_jk/before\test\handshake_helper.c:949:79>
|   |-DoStmt 0x1f3fe8d36f8 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x1f3fe8d36b8 <line:106:8, line:111:5>
|   | | `-IfStmt 0x1f3fe8d36a0 <line:107:9, line:110:9>
|   | |   |-OpaqueValueExpr 0x1f3fe8d3688 <<invalid sloc>> '_Bool'
|   | |   `-CompoundStmt 0x1f3fe8d3670 <line:107:27, line:110:9>
|   | |     `-CallExpr 0x1f3fe8d3648 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x1f3fe8d3630 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x1f3fe8d3588 <col:13> 'int ()' Function 0x1f3fe8279f0 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x1f3fe8d3618 <col:28, <scratch space>:33:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x1f3fe8d3600 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x1f3fe8d35a8 <col:1> 'char [63]' lvalue "SSL_set_ex_data(client.ssl, ex_data_idx, &client_ex_data) == 1"
|   | `-IntegerLiteral 0x1f3fe8d36d0 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x1f3fe8d3718 <.//openssl//file_jk/before\test\handshake_helper.c:950:79>
|   |-BinaryOperator 0x1f3fe8d3988 <line:955:5, col:37> 'peer_status_t':'peer_status_t' '='
|   | |-MemberExpr 0x1f3fe8d38b0 <col:5, col:12> 'peer_status_t':'peer_status_t' lvalue .status 0x1f3fe834cd0
|   | | `-DeclRefExpr 0x1f3fe8d3890 <col:5> 'PEER':'struct peer_st' lvalue Var 0x1f3fe8d9650 'client' 'PEER':'struct peer_st'
|   | `-BinaryOperator 0x1f3fe8d3968 <col:21, col:37> 'peer_status_t':'peer_status_t' '='
|   |   |-MemberExpr 0x1f3fe8d3900 <col:21, col:28> 'peer_status_t':'peer_status_t' lvalue .status 0x1f3fe834cd0
|   |   | `-DeclRefExpr 0x1f3fe8d38e0 <col:21> 'PEER':'struct peer_st' lvalue Var 0x1f3fe8d95d8 'server' 'PEER':'struct peer_st'
|   |   `-ImplicitCastExpr 0x1f3fe8d3950 <col:37> 'peer_status_t':'peer_status_t' <IntegralCast>
|   |     `-DeclRefExpr 0x1f3fe8d3930 <col:37> 'int' EnumConstant 0x1f3fe834758 'PEER_RETRY' 'int'
|   |-ForStmt 0x1f3fe8dbe78 <line:965:5, line:1018:5>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | `-CompoundStmt 0x1f3fe8dbe58 <line:965:13, line:1018:5>
|   |   |-IfStmt 0x1f3fe8db138 <line:966:9, line:974:9> has_else
|   |   | |-ImplicitCastExpr 0x1f3fe8d39e0 <line:966:13> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1f3fe8d39a8 <col:13> 'int' lvalue Var 0x1f3fe8d9b00 'client_turn' 'int'
|   |   | |-CompoundStmt 0x1f3fe8d3da8 <col:26, line:970:9>
|   |   | | |-CallExpr 0x1f3fe8d3b20 <line:967:13, col:53> 'void'
|   |   | | | |-ImplicitCastExpr 0x1f3fe8d3b08 <col:13> 'void (*)(const SSL_TEST_CTX *, PEER *, connect_phase_t)' <FunctionToPointerDecay>
|   |   | | | | `-DeclRefExpr 0x1f3fe8d39f8 <col:13> 'void (const SSL_TEST_CTX *, PEER *, connect_phase_t)' Function 0x1f3fe843708 'do_connect_step' 'void (const SSL_TEST_CTX *, PEER *, connect_phase_t)'
|   |   | | | |-ImplicitCastExpr 0x1f3fe8d3b58 <col:29> 'const SSL_TEST_CTX *' <LValueToRValue>
|   |   | | | | `-DeclRefExpr 0x1f3fe8d3a18 <col:29> 'const SSL_TEST_CTX *' lvalue ParmVar 0x1f3fe8d91a8 'test_ctx' 'const SSL_TEST_CTX *'
|   |   | | | |-UnaryOperator 0x1f3fe8d3a58 <col:39, col:40> 'PEER *' prefix '&' cannot overflow
|   |   | | | | `-DeclRefExpr 0x1f3fe8d3a38 <col:40> 'PEER':'struct peer_st' lvalue Var 0x1f3fe8d9650 'client' 'PEER':'struct peer_st'
|   |   | | | `-ImplicitCastExpr 0x1f3fe8d3b70 <col:48> 'connect_phase_t':'connect_phase_t' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x1f3fe8d3a70 <col:48> 'connect_phase_t':'connect_phase_t' lvalue Var 0x1f3fe8d9c78 'phase' 'connect_phase_t':'connect_phase_t'
|   |   | | `-BinaryOperator 0x1f3fe8d3d88 <line:968:13, line:969:63> 'handshake_status_t':'handshake_status_t' '='
|   |   | |   |-DeclRefExpr 0x1f3fe8d3b88 <line:968:13> 'handshake_status_t':'handshake_status_t' lvalue Var 0x1f3fe8d9d40 'status' 'handshake_status_t':'handshake_status_t'
|   |   | |   `-CallExpr 0x1f3fe8d3d20 <col:22, line:969:63> 'handshake_status_t':'handshake_status_t'
|   |   | |     |-ImplicitCastExpr 0x1f3fe8d3d08 <line:968:22> 'handshake_status_t (*)(peer_status_t, peer_status_t, int)' <FunctionToPointerDecay>
|   |   | |     | `-DeclRefExpr 0x1f3fe8d3bc0 <col:22> 'handshake_status_t (peer_status_t, peer_status_t, int)' Function 0x1f3fe8d46e8 'handshake_status' 'handshake_status_t (peer_status_t, peer_status_t, int)'
|   |   | |     |-ImplicitCastExpr 0x1f3fe8d3d58 <col:39, col:46> 'peer_status_t':'peer_status_t' <LValueToRValue>
|   |   | |     | `-MemberExpr 0x1f3fe8d3c00 <col:39, col:46> 'peer_status_t':'peer_status_t' lvalue .status 0x1f3fe834cd0
|   |   | |     |   `-DeclRefExpr 0x1f3fe8d3be0 <col:39> 'PEER':'struct peer_st' lvalue Var 0x1f3fe8d9650 'client' 'PEER':'struct peer_st'
|   |   | |     |-ImplicitCastExpr 0x1f3fe8d3d70 <col:54, col:61> 'peer_status_t':'peer_status_t' <LValueToRValue>
|   |   | |     | `-MemberExpr 0x1f3fe8d3c50 <col:54, col:61> 'peer_status_t':'peer_status_t' lvalue .status 0x1f3fe834cd0
|   |   | |     |   `-DeclRefExpr 0x1f3fe8d3c30 <col:54> 'PEER':'struct peer_st' lvalue Var 0x1f3fe8d95d8 'server' 'PEER':'struct peer_st'
|   |   | |     `-IntegerLiteral 0x1f3fe8d3c80 <line:969:39> 'int' 1
|   |   | `-CompoundStmt 0x1f3fe8db118 <line:970:16, line:974:9>
|   |   |   |-CallExpr 0x1f3fe8d3e78 <line:971:13, col:53> 'void'
|   |   |   | |-ImplicitCastExpr 0x1f3fe8d3e60 <col:13> 'void (*)(const SSL_TEST_CTX *, PEER *, connect_phase_t)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x1f3fe8d3dc8 <col:13> 'void (const SSL_TEST_CTX *, PEER *, connect_phase_t)' Function 0x1f3fe843708 'do_connect_step' 'void (const SSL_TEST_CTX *, PEER *, connect_phase_t)'
|   |   |   | |-ImplicitCastExpr 0x1f3fe8d3eb0 <col:29> 'const SSL_TEST_CTX *' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x1f3fe8d3de8 <col:29> 'const SSL_TEST_CTX *' lvalue ParmVar 0x1f3fe8d91a8 'test_ctx' 'const SSL_TEST_CTX *'
|   |   |   | |-UnaryOperator 0x1f3fe8d3e28 <col:39, col:40> 'PEER *' prefix '&' cannot overflow
|   |   |   | | `-DeclRefExpr 0x1f3fe8d3e08 <col:40> 'PEER':'struct peer_st' lvalue Var 0x1f3fe8d95d8 'server' 'PEER':'struct peer_st'
|   |   |   | `-ImplicitCastExpr 0x1f3fe8d3ec8 <col:48> 'connect_phase_t':'connect_phase_t' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x1f3fe8d3e40 <col:48> 'connect_phase_t':'connect_phase_t' lvalue Var 0x1f3fe8d9c78 'phase' 'connect_phase_t':'connect_phase_t'
|   |   |   `-BinaryOperator 0x1f3fe8db0f8 <line:972:13, line:973:63> 'handshake_status_t':'handshake_status_t' '='
|   |   |     |-DeclRefExpr 0x1f3fe8d3ee0 <line:972:13> 'handshake_status_t':'handshake_status_t' lvalue Var 0x1f3fe8d9d40 'status' 'handshake_status_t':'handshake_status_t'
|   |   |     `-CallExpr 0x1f3fe8db090 <col:22, line:973:63> 'handshake_status_t':'handshake_status_t'
|   |   |       |-ImplicitCastExpr 0x1f3fe8db078 <line:972:22> 'handshake_status_t (*)(peer_status_t, peer_status_t, int)' <FunctionToPointerDecay>
|   |   |       | `-DeclRefExpr 0x1f3fe8d3f00 <col:22> 'handshake_status_t (peer_status_t, peer_status_t, int)' Function 0x1f3fe8d46e8 'handshake_status' 'handshake_status_t (peer_status_t, peer_status_t, int)'
|   |   |       |-ImplicitCastExpr 0x1f3fe8db0c8 <col:39, col:46> 'peer_status_t':'peer_status_t' <LValueToRValue>
|   |   |       | `-MemberExpr 0x1f3fe8d3f40 <col:39, col:46> 'peer_status_t':'peer_status_t' lvalue .status 0x1f3fe834cd0
|   |   |       |   `-DeclRefExpr 0x1f3fe8d3f20 <col:39> 'PEER':'struct peer_st' lvalue Var 0x1f3fe8d95d8 'server' 'PEER':'struct peer_st'
|   |   |       |-ImplicitCastExpr 0x1f3fe8db0e0 <col:54, col:61> 'peer_status_t':'peer_status_t' <LValueToRValue>
|   |   |       | `-MemberExpr 0x1f3fe8d3f90 <col:54, col:61> 'peer_status_t':'peer_status_t' lvalue .status 0x1f3fe834cd0
|   |   |       |   `-DeclRefExpr 0x1f3fe8d3f70 <col:54> 'PEER':'struct peer_st' lvalue Var 0x1f3fe8d9650 'client' 'PEER':'struct peer_st'
|   |   |       `-IntegerLiteral 0x1f3fe8db050 <line:973:39> 'int' 0
|   |   `-SwitchStmt 0x1f3fe8db1b0 <line:976:9, line:1017:9>
|   |     |-ImplicitCastExpr 0x1f3fe8db198 <line:976:17> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x1f3fe8db180 <col:17> 'handshake_status_t':'handshake_status_t' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x1f3fe8db160 <col:17> 'handshake_status_t':'handshake_status_t' lvalue Var 0x1f3fe8d9d40 'status' 'handshake_status_t':'handshake_status_t'
|   |     `-CompoundStmt 0x1f3fe8dbde8 <col:25, line:1017:9>
|   |       |-CaseStmt 0x1f3fe8db208 <line:977:9, line:978:33>
|   |       | |-ConstantExpr 0x1f3fe8db1f0 <line:977:14> 'int'
|   |       | | `-DeclRefExpr 0x1f3fe8db1d0 <col:14> 'int' EnumConstant 0x1f3fe8d41c0 'HANDSHAKE_SUCCESS' 'int'
|   |       | `-BinaryOperator 0x1f3fe8db290 <line:978:13, col:33> 'int' '='
|   |       |   |-DeclRefExpr 0x1f3fe8db230 <col:13> 'int' lvalue Var 0x1f3fe8d9ba8 'client_turn_count' 'int'
|   |       |   `-IntegerLiteral 0x1f3fe8db268 <col:33> 'int' 0
|   |       |-BinaryOperator 0x1f3fe8db400 <line:979:13, col:47> 'connect_phase_t':'connect_phase_t' '='
|   |       | |-DeclRefExpr 0x1f3fe8db2b0 <col:13> 'connect_phase_t':'connect_phase_t' lvalue Var 0x1f3fe8d9c78 'phase' 'connect_phase_t':'connect_phase_t'
|   |       | `-CallExpr 0x1f3fe8db3a0 <col:21, col:47> 'connect_phase_t':'connect_phase_t'
|   |       |   |-ImplicitCastExpr 0x1f3fe8db388 <col:21> 'connect_phase_t (*)(const SSL_TEST_CTX *, connect_phase_t)' <FunctionToPointerDecay>
|   |       |   | `-DeclRefExpr 0x1f3fe8db2d0 <col:21> 'connect_phase_t (const SSL_TEST_CTX *, connect_phase_t)' Function 0x1f3fe842ac8 'next_phase' 'connect_phase_t (const SSL_TEST_CTX *, connect_phase_t)'
|   |       |   |-ImplicitCastExpr 0x1f3fe8db3d0 <col:32> 'const SSL_TEST_CTX *' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x1f3fe8db2f0 <col:32> 'const SSL_TEST_CTX *' lvalue ParmVar 0x1f3fe8d91a8 'test_ctx' 'const SSL_TEST_CTX *'
|   |       |   `-ImplicitCastExpr 0x1f3fe8db3e8 <col:42> 'connect_phase_t':'connect_phase_t' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x1f3fe8db310 <col:42> 'connect_phase_t':'connect_phase_t' lvalue Var 0x1f3fe8d9c78 'phase' 'connect_phase_t':'connect_phase_t'
|   |       |-IfStmt 0x1f3fe8db7a8 <line:980:13, line:993:13> has_else
|   |       | |-BinaryOperator 0x1f3fe8db490 <line:980:17, col:26> 'int' '=='
|   |       | | |-ImplicitCastExpr 0x1f3fe8db478 <col:17> 'int' <IntegralCast>
|   |       | | | `-ImplicitCastExpr 0x1f3fe8db460 <col:17> 'connect_phase_t':'connect_phase_t' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x1f3fe8db420 <col:17> 'connect_phase_t':'connect_phase_t' lvalue Var 0x1f3fe8d9c78 'phase' 'connect_phase_t':'connect_phase_t'
|   |       | | `-DeclRefExpr 0x1f3fe8db440 <col:26> 'int' EnumConstant 0x1f3fe8427b0 'CONNECTION_DONE' 'int'
|   |       | |-CompoundStmt 0x1f3fe8db5d8 <col:43, line:983:13>
|   |       | | |-BinaryOperator 0x1f3fe8db550 <line:981:17, col:31> 'ssl_test_result_t':'ssl_test_result_t' '='
|   |       | | | |-MemberExpr 0x1f3fe8db4e8 <col:17, col:22> 'ssl_test_result_t':'ssl_test_result_t' lvalue ->result 0x1f3fe87e670
|   |       | | | | `-ImplicitCastExpr 0x1f3fe8db4d0 <col:17> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   |       | | | |   `-DeclRefExpr 0x1f3fe8db4b0 <col:17> 'HANDSHAKE_RESULT *' lvalue Var 0x1f3fe8d99b8 'ret' 'HANDSHAKE_RESULT *'
|   |       | | | `-ImplicitCastExpr 0x1f3fe8db538 <col:31> 'ssl_test_result_t':'ssl_test_result_t' <IntegralCast>
|   |       | | |   `-DeclRefExpr 0x1f3fe8db518 <col:31> 'int' EnumConstant 0x1f3fe876a00 'SSL_TEST_SUCCESS' 'int'
|   |       | | `-GotoStmt 0x1f3fe8db5c0 <line:982:17, col:22> 'err' 0x1f3fe8db570
|   |       | `-CompoundStmt 0x1f3fe8db780 <line:983:20, line:993:13>
|   |       |   |-BinaryOperator 0x1f3fe8db6f0 <line:984:17, col:49> 'peer_status_t':'peer_status_t' '='
|   |       |   | |-MemberExpr 0x1f3fe8db618 <col:17, col:24> 'peer_status_t':'peer_status_t' lvalue .status 0x1f3fe834cd0
|   |       |   | | `-DeclRefExpr 0x1f3fe8db5f8 <col:17> 'PEER':'struct peer_st' lvalue Var 0x1f3fe8d9650 'client' 'PEER':'struct peer_st'
|   |       |   | `-BinaryOperator 0x1f3fe8db6d0 <col:33, col:49> 'peer_status_t':'peer_status_t' '='
|   |       |   |   |-MemberExpr 0x1f3fe8db668 <col:33, col:40> 'peer_status_t':'peer_status_t' lvalue .status 0x1f3fe834cd0
|   |       |   |   | `-DeclRefExpr 0x1f3fe8db648 <col:33> 'PEER':'struct peer_st' lvalue Var 0x1f3fe8d95d8 'server' 'PEER':'struct peer_st'
|   |       |   |   `-ImplicitCastExpr 0x1f3fe8db6b8 <col:49> 'peer_status_t':'peer_status_t' <IntegralCast>
|   |       |   |     `-DeclRefExpr 0x1f3fe8db698 <col:49> 'int' EnumConstant 0x1f3fe834758 'PEER_RETRY' 'int'
|   |       |   |-BinaryOperator 0x1f3fe8db758 <line:991:17, col:31> 'int' '='
|   |       |   | |-DeclRefExpr 0x1f3fe8db710 <col:17> 'int' lvalue Var 0x1f3fe8d9b00 'client_turn' 'int'
|   |       |   | `-IntegerLiteral 0x1f3fe8db730 <col:31> 'int' 1
|   |       |   `-BreakStmt 0x1f3fe8db778 <line:992:17>
|   |       |-CaseStmt 0x1f3fe8db808 <line:994:9, line:995:27>
|   |       | |-ConstantExpr 0x1f3fe8db7f0 <line:994:14> 'int'
|   |       | | `-DeclRefExpr 0x1f3fe8db7d0 <col:14> 'int' EnumConstant 0x1f3fe8d4218 'CLIENT_ERROR' 'int'
|   |       | `-BinaryOperator 0x1f3fe8db8d0 <line:995:13, col:27> 'ssl_test_result_t':'ssl_test_result_t' '='
|   |       |   |-MemberExpr 0x1f3fe8db868 <col:13, col:18> 'ssl_test_result_t':'ssl_test_result_t' lvalue ->result 0x1f3fe87e670
|   |       |   | `-ImplicitCastExpr 0x1f3fe8db850 <col:13> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x1f3fe8db830 <col:13> 'HANDSHAKE_RESULT *' lvalue Var 0x1f3fe8d99b8 'ret' 'HANDSHAKE_RESULT *'
|   |       |   `-ImplicitCastExpr 0x1f3fe8db8b8 <col:27> 'ssl_test_result_t':'ssl_test_result_t' <IntegralCast>
|   |       |     `-DeclRefExpr 0x1f3fe8db898 <col:27> 'int' EnumConstant 0x1f3fe876ab0 'SSL_TEST_CLIENT_FAIL' 'int'
|   |       |-GotoStmt 0x1f3fe8db8f0 <line:996:13, col:18> 'err' 0x1f3fe8db570
|   |       |-CaseStmt 0x1f3fe8db940 <line:997:9, line:998:27>
|   |       | |-ConstantExpr 0x1f3fe8db928 <line:997:14> 'int'
|   |       | | `-DeclRefExpr 0x1f3fe8db908 <col:14> 'int' EnumConstant 0x1f3fe8d4270 'SERVER_ERROR' 'int'
|   |       | `-BinaryOperator 0x1f3fe8dba08 <line:998:13, col:27> 'ssl_test_result_t':'ssl_test_result_t' '='
|   |       |   |-MemberExpr 0x1f3fe8db9a0 <col:13, col:18> 'ssl_test_result_t':'ssl_test_result_t' lvalue ->result 0x1f3fe87e670
|   |       |   | `-ImplicitCastExpr 0x1f3fe8db988 <col:13> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x1f3fe8db968 <col:13> 'HANDSHAKE_RESULT *' lvalue Var 0x1f3fe8d99b8 'ret' 'HANDSHAKE_RESULT *'
|   |       |   `-ImplicitCastExpr 0x1f3fe8db9f0 <col:27> 'ssl_test_result_t':'ssl_test_result_t' <IntegralCast>
|   |       |     `-DeclRefExpr 0x1f3fe8db9d0 <col:27> 'int' EnumConstant 0x1f3fe876a58 'SSL_TEST_SERVER_FAIL' 'int'
|   |       |-GotoStmt 0x1f3fe8dba28 <line:999:13, col:18> 'err' 0x1f3fe8db570
|   |       |-CaseStmt 0x1f3fe8dba78 <line:1000:9, line:1001:27>
|   |       | |-ConstantExpr 0x1f3fe8dba60 <line:1000:14> 'int'
|   |       | | `-DeclRefExpr 0x1f3fe8dba40 <col:14> 'int' EnumConstant 0x1f3fe8d42c8 'INTERNAL_ERROR' 'int'
|   |       | `-BinaryOperator 0x1f3fe8dbb40 <line:1001:13, col:27> 'ssl_test_result_t':'ssl_test_result_t' '='
|   |       |   |-MemberExpr 0x1f3fe8dbad8 <col:13, col:18> 'ssl_test_result_t':'ssl_test_result_t' lvalue ->result 0x1f3fe87e670
|   |       |   | `-ImplicitCastExpr 0x1f3fe8dbac0 <col:13> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x1f3fe8dbaa0 <col:13> 'HANDSHAKE_RESULT *' lvalue Var 0x1f3fe8d99b8 'ret' 'HANDSHAKE_RESULT *'
|   |       |   `-ImplicitCastExpr 0x1f3fe8dbb28 <col:27> 'ssl_test_result_t':'ssl_test_result_t' <IntegralCast>
|   |       |     `-DeclRefExpr 0x1f3fe8dbb08 <col:27> 'int' EnumConstant 0x1f3fe876b08 'SSL_TEST_INTERNAL_ERROR' 'int'
|   |       |-GotoStmt 0x1f3fe8dbb60 <line:1002:13, col:18> 'err' 0x1f3fe8db570
|   |       |-CaseStmt 0x1f3fe8dbbb0 <line:1003:9, line:1012:13>
|   |       | |-ConstantExpr 0x1f3fe8dbb98 <line:1003:14> 'int'
|   |       | | `-DeclRefExpr 0x1f3fe8dbb78 <col:14> 'int' EnumConstant 0x1f3fe8d4320 'HANDSHAKE_RETRY' 'int'
|   |       | `-IfStmt 0x1f3fe8dbd50 <line:1004:13, line:1012:13>
|   |       |   |-BinaryOperator 0x1f3fe8dbc38 <line:1004:17, col:40> 'int' '>='
|   |       |   | |-UnaryOperator 0x1f3fe8dbbf8 <col:17, col:34> 'int' postfix '++'
|   |       |   | | `-DeclRefExpr 0x1f3fe8dbbd8 <col:17> 'int' lvalue Var 0x1f3fe8d9ba8 'client_turn_count' 'int'
|   |       |   | `-IntegerLiteral 0x1f3fe8dbc10 <col:40> 'int' 2000
|   |       |   `-CompoundStmt 0x1f3fe8dbd30 <col:46, line:1012:13>
|   |       |     |-BinaryOperator 0x1f3fe8dbcf8 <line:1010:17, col:31> 'ssl_test_result_t':'ssl_test_result_t' '='
|   |       |     | |-MemberExpr 0x1f3fe8dbc90 <col:17, col:22> 'ssl_test_result_t':'ssl_test_result_t' lvalue ->result 0x1f3fe87e670
|   |       |     | | `-ImplicitCastExpr 0x1f3fe8dbc78 <col:17> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   |       |     | |   `-DeclRefExpr 0x1f3fe8dbc58 <col:17> 'HANDSHAKE_RESULT *' lvalue Var 0x1f3fe8d99b8 'ret' 'HANDSHAKE_RESULT *'
|   |       |     | `-ImplicitCastExpr 0x1f3fe8dbce0 <col:31> 'ssl_test_result_t':'ssl_test_result_t' <IntegralCast>
|   |       |     |   `-DeclRefExpr 0x1f3fe8dbcc0 <col:31> 'int' EnumConstant 0x1f3fe876b08 'SSL_TEST_INTERNAL_ERROR' 'int'
|   |       |     `-GotoStmt 0x1f3fe8dbd18 <line:1011:17, col:22> 'err' 0x1f3fe8db570
|   |       |-CompoundAssignOperator 0x1f3fe8dbdb0 <line:1015:13, col:28> 'int' '^=' ComputeLHSTy='int' ComputeResultTy='int'
|   |       | |-DeclRefExpr 0x1f3fe8dbd68 <col:13> 'int' lvalue Var 0x1f3fe8d9b00 'client_turn' 'int'
|   |       | `-IntegerLiteral 0x1f3fe8dbd88 <col:28> 'int' 1
|   |       `-BreakStmt 0x1f3fe8dbde0 <line:1016:13>
|   |-LabelStmt 0x1f3fe8dbfa0 <line:1019:2, line:1020:45> 'err'
|   | `-BinaryOperator 0x1f3fe8dbf80 <col:5, col:45> 'int' '='
|   |   |-MemberExpr 0x1f3fe8dbee8 <col:5, col:10> 'int' lvalue ->server_alert_sent 0x1f3fe87e830
|   |   | `-ImplicitCastExpr 0x1f3fe8dbed0 <col:5> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1f3fe8dbeb0 <col:5> 'HANDSHAKE_RESULT *' lvalue Var 0x1f3fe8d99b8 'ret' 'HANDSHAKE_RESULT *'
|   |   `-ImplicitCastExpr 0x1f3fe8dbf68 <col:30, col:45> 'int' <LValueToRValue>
|   |     `-MemberExpr 0x1f3fe8dbf38 <col:30, col:45> 'int' lvalue .alert_sent 0x1f3fe825558
|   |       `-DeclRefExpr 0x1f3fe8dbf18 <col:30> 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st' lvalue Var 0x1f3fe8d96f8 'server_ex_data' 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st'
|   |-BinaryOperator 0x1f3fe8dc0a8 <line:1021:5, col:56> 'int' '='
|   | |-MemberExpr 0x1f3fe8dbff0 <col:5, col:10> 'int' lvalue ->server_num_fatal_alerts_sent 0x1f3fe87e8a0
|   | | `-ImplicitCastExpr 0x1f3fe8dbfd8 <col:5> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1f3fe8dbfb8 <col:5> 'HANDSHAKE_RESULT *' lvalue Var 0x1f3fe8d99b8 'ret' 'HANDSHAKE_RESULT *'
|   | `-ImplicitCastExpr 0x1f3fe8dc090 <col:41, col:56> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x1f3fe8dc060 <col:41, col:56> 'int' lvalue .num_fatal_alerts_sent 0x1f3fe8255c8
|   |     `-DeclRefExpr 0x1f3fe8dc020 <col:41> 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st' lvalue Var 0x1f3fe8d96f8 'server_ex_data' 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st'
|   |-BinaryOperator 0x1f3fe8dc198 <line:1022:5, col:49> 'int' '='
|   | |-MemberExpr 0x1f3fe8dc100 <col:5, col:10> 'int' lvalue ->server_alert_received 0x1f3fe87e910
|   | | `-ImplicitCastExpr 0x1f3fe8dc0e8 <col:5> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1f3fe8dc0c8 <col:5> 'HANDSHAKE_RESULT *' lvalue Var 0x1f3fe8d99b8 'ret' 'HANDSHAKE_RESULT *'
|   | `-ImplicitCastExpr 0x1f3fe8dc180 <col:34, col:49> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x1f3fe8dc150 <col:34, col:49> 'int' lvalue .alert_received 0x1f3fe825638
|   |     `-DeclRefExpr 0x1f3fe8dc130 <col:34> 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st' lvalue Var 0x1f3fe8d9770 'client_ex_data' 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st'
|   |-BinaryOperator 0x1f3fe8dc288 <line:1023:5, col:45> 'int' '='
|   | |-MemberExpr 0x1f3fe8dc1f0 <col:5, col:10> 'int' lvalue ->client_alert_sent 0x1f3fe87e6e0
|   | | `-ImplicitCastExpr 0x1f3fe8dc1d8 <col:5> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1f3fe8dc1b8 <col:5> 'HANDSHAKE_RESULT *' lvalue Var 0x1f3fe8d99b8 'ret' 'HANDSHAKE_RESULT *'
|   | `-ImplicitCastExpr 0x1f3fe8dc270 <col:30, col:45> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x1f3fe8dc240 <col:30, col:45> 'int' lvalue .alert_sent 0x1f3fe825558
|   |     `-DeclRefExpr 0x1f3fe8dc220 <col:30> 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st' lvalue Var 0x1f3fe8d9770 'client_ex_data' 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st'
|   |-BinaryOperator 0x1f3fe8dc378 <line:1024:5, col:56> 'int' '='
|   | |-MemberExpr 0x1f3fe8dc2e0 <col:5, col:10> 'int' lvalue ->client_num_fatal_alerts_sent 0x1f3fe87e750
|   | | `-ImplicitCastExpr 0x1f3fe8dc2c8 <col:5> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1f3fe8dc2a8 <col:5> 'HANDSHAKE_RESULT *' lvalue Var 0x1f3fe8d99b8 'ret' 'HANDSHAKE_RESULT *'
|   | `-ImplicitCastExpr 0x1f3fe8dc360 <col:41, col:56> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x1f3fe8dc330 <col:41, col:56> 'int' lvalue .num_fatal_alerts_sent 0x1f3fe8255c8
|   |     `-DeclRefExpr 0x1f3fe8dc310 <col:41> 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st' lvalue Var 0x1f3fe8d9770 'client_ex_data' 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st'
|   |-BinaryOperator 0x1f3fe8dc468 <line:1025:5, col:49> 'int' '='
|   | |-MemberExpr 0x1f3fe8dc3d0 <col:5, col:10> 'int' lvalue ->client_alert_received 0x1f3fe87e7c0
|   | | `-ImplicitCastExpr 0x1f3fe8dc3b8 <col:5> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1f3fe8dc398 <col:5> 'HANDSHAKE_RESULT *' lvalue Var 0x1f3fe8d99b8 'ret' 'HANDSHAKE_RESULT *'
|   | `-ImplicitCastExpr 0x1f3fe8dc450 <col:34, col:49> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x1f3fe8dc420 <col:34, col:49> 'int' lvalue .alert_received 0x1f3fe825638
|   |     `-DeclRefExpr 0x1f3fe8dc400 <col:34> 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st' lvalue Var 0x1f3fe8d96f8 'server_ex_data' 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st'
|   |-BinaryOperator 0x1f3fe8dc798 <line:1028:5, col:38> 'ssl_servername_t':'ssl_servername_t' '='
|   | |-MemberExpr 0x1f3fe8dc700 <col:5, col:10> 'ssl_servername_t':'ssl_servername_t' lvalue ->servername 0x1f3fe87ea58
|   | | `-ImplicitCastExpr 0x1f3fe8dc6e8 <col:5> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1f3fe8dc6c8 <col:5> 'HANDSHAKE_RESULT *' lvalue Var 0x1f3fe8d99b8 'ret' 'HANDSHAKE_RESULT *'
|   | `-ImplicitCastExpr 0x1f3fe8dc780 <col:23, col:38> 'ssl_servername_t':'ssl_servername_t' <LValueToRValue>
|   |   `-MemberExpr 0x1f3fe8dc750 <col:23, col:38> 'ssl_servername_t':'ssl_servername_t' lvalue .servername 0x1f3fe825710
|   |     `-DeclRefExpr 0x1f3fe8dc730 <col:23> 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st' lvalue Var 0x1f3fe8d96f8 'server_ex_data' 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st'
|   |-IfStmt 0x1f3fe8dce50 <line:1031:5, line:1034:31> has_else
|   | |-BinaryOperator 0x1f3fe8dccb0 <line:1031:9, col:37> 'int' '||'
|   | | |-BinaryOperator 0x1f3fe8dcbf8 <col:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | | |-ImplicitCastExpr 0x1f3fe8dcbc8 <.//openssl//file_jk/before\test\handshake_helper.c:1031:9> 'const unsigned char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1f3fe8dcb20 <col:9> 'const unsigned char *' lvalue Var 0x1f3fe8d9e10 'tick' 'const unsigned char *'
|   | | | `-ImplicitCastExpr 0x1f3fe8dcbe0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const unsigned char *' <BitCast>
|   | | |   `-ParenExpr 0x1f3fe8dcba8 <col:17, col:27> 'void *'
|   | | |     `-CStyleCastExpr 0x1f3fe8dcb80 <col:18, col:26> 'void *' <NullToPointer>
|   | | |       `-IntegerLiteral 0x1f3fe8dcb40 <col:26> 'int' 0
|   | | `-BinaryOperator 0x1f3fe8dcc90 <.//openssl//file_jk/before\test\handshake_helper.c:1031:25, col:37> 'int' '=='
|   | |   |-ImplicitCastExpr 0x1f3fe8dcc60 <col:25> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x1f3fe8dcc18 <col:25> 'size_t':'unsigned long long' lvalue Var 0x1f3fe8d9f40 'tick_len' 'size_t':'unsigned long long'
|   | |   `-ImplicitCastExpr 0x1f3fe8dcc78 <col:37> 'unsigned long long' <IntegralCast>
|   | |     `-IntegerLiteral 0x1f3fe8dcc38 <col:37> 'int' 0
|   | |-BinaryOperator 0x1f3fe8dcd70 <line:1032:9, col:31> 'ssl_session_ticket_t':'ssl_session_ticket_t' '='
|   | | |-MemberExpr 0x1f3fe8dcd08 <col:9, col:14> 'ssl_session_ticket_t':'ssl_session_ticket_t' lvalue ->session_ticket 0x1f3fe87eac0
|   | | | `-ImplicitCastExpr 0x1f3fe8dccf0 <col:9> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1f3fe8dccd0 <col:9> 'HANDSHAKE_RESULT *' lvalue Var 0x1f3fe8d99b8 'ret' 'HANDSHAKE_RESULT *'
|   | | `-ImplicitCastExpr 0x1f3fe8dcd58 <col:31> 'ssl_session_ticket_t':'ssl_session_ticket_t' <IntegralCast>
|   | |   `-DeclRefExpr 0x1f3fe8dcd38 <col:31> 'int' EnumConstant 0x1f3fe87c7e0 'SSL_TEST_SESSION_TICKET_NO' 'int'
|   | `-BinaryOperator 0x1f3fe8dce30 <line:1034:9, col:31> 'ssl_session_ticket_t':'ssl_session_ticket_t' '='
|   |   |-MemberExpr 0x1f3fe8dcdc8 <col:9, col:14> 'ssl_session_ticket_t':'ssl_session_ticket_t' lvalue ->session_ticket 0x1f3fe87eac0
|   |   | `-ImplicitCastExpr 0x1f3fe8dcdb0 <col:9> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1f3fe8dcd90 <col:9> 'HANDSHAKE_RESULT *' lvalue Var 0x1f3fe8d99b8 'ret' 'HANDSHAKE_RESULT *'
|   |   `-ImplicitCastExpr 0x1f3fe8dce18 <col:31> 'ssl_session_ticket_t':'ssl_session_ticket_t' <IntegralCast>
|   |     `-DeclRefExpr 0x1f3fe8dcdf8 <col:31> 'int' EnumConstant 0x1f3fe87c788 'SSL_TEST_SESSION_TICKET_YES' 'int'
|   |-BinaryOperator 0x1f3fe8dcf48 <line:1035:5, col:54> 'int' '='
|   | |-MemberExpr 0x1f3fe8dceb0 <col:5, col:10> 'int' lvalue ->session_ticket_do_not_call 0x1f3fe87eb30
|   | | `-ImplicitCastExpr 0x1f3fe8dce98 <col:5> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1f3fe8dce78 <col:5> 'HANDSHAKE_RESULT *' lvalue Var 0x1f3fe8d99b8 'ret' 'HANDSHAKE_RESULT *'
|   | `-ImplicitCastExpr 0x1f3fe8dcf30 <col:39, col:54> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x1f3fe8dcf00 <col:39, col:54> 'int' lvalue .session_ticket_do_not_call 0x1f3fe8256a8
|   |     `-DeclRefExpr 0x1f3fe8dcee0 <col:39> 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st' lvalue Var 0x1f3fe8d96f8 'server_ex_data' 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st'
|   |-BinaryOperator 0x1f3fe8d5288 <line:1039:5, col:58> 'char *' '='
|   | |-MemberExpr 0x1f3fe8d5108 <col:5, col:10> 'char *' lvalue ->client_npn_negotiated 0x1f3fe87eba0
|   | | `-ImplicitCastExpr 0x1f3fe8d50f0 <col:5> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1f3fe8d50d0 <col:5> 'HANDSHAKE_RESULT *' lvalue Var 0x1f3fe8d99b8 'ret' 'HANDSHAKE_RESULT *'
|   | `-CallExpr 0x1f3fe8d5210 <col:34, col:58> 'char *'
|   |   |-ImplicitCastExpr 0x1f3fe8d51f8 <col:34> 'char *(*)(const unsigned char *, size_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1f3fe8d5138 <col:34> 'char *(const unsigned char *, size_t)' Function 0x1f3fe8d8290 'dup_str' 'char *(const unsigned char *, size_t)'
|   |   |-ImplicitCastExpr 0x1f3fe8d5240 <col:42> 'const unsigned char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1f3fe8d5158 <col:42> 'const unsigned char *' lvalue Var 0x1f3fe8d2038 'proto' 'const unsigned char *'
|   |   `-ImplicitCastExpr 0x1f3fe8d5270 <col:49> 'size_t':'unsigned long long' <IntegralCast>
|   |     `-ImplicitCastExpr 0x1f3fe8d5258 <col:49> 'unsigned int' <LValueToRValue>
|   |       `-DeclRefExpr 0x1f3fe8d5178 <col:49> 'unsigned int' lvalue Var 0x1f3fe8d2170 'proto_len' 'unsigned int'
|   |-BinaryOperator 0x1f3fe8d54b0 <line:1042:5, col:58> 'char *' '='
|   | |-MemberExpr 0x1f3fe8d5390 <col:5, col:10> 'char *' lvalue ->server_npn_negotiated 0x1f3fe87ec10
|   | | `-ImplicitCastExpr 0x1f3fe8d5378 <col:5> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1f3fe8d5358 <col:5> 'HANDSHAKE_RESULT *' lvalue Var 0x1f3fe8d99b8 'ret' 'HANDSHAKE_RESULT *'
|   | `-CallExpr 0x1f3fe8d5438 <col:34, col:58> 'char *'
|   |   |-ImplicitCastExpr 0x1f3fe8d5420 <col:34> 'char *(*)(const unsigned char *, size_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1f3fe8d53c0 <col:34> 'char *(const unsigned char *, size_t)' Function 0x1f3fe8d8290 'dup_str' 'char *(const unsigned char *, size_t)'
|   |   |-ImplicitCastExpr 0x1f3fe8d5468 <col:42> 'const unsigned char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1f3fe8d53e0 <col:42> 'const unsigned char *' lvalue Var 0x1f3fe8d2038 'proto' 'const unsigned char *'
|   |   `-ImplicitCastExpr 0x1f3fe8d5498 <col:49> 'size_t':'unsigned long long' <IntegralCast>
|   |     `-ImplicitCastExpr 0x1f3fe8d5480 <col:49> 'unsigned int' <LValueToRValue>
|   |       `-DeclRefExpr 0x1f3fe8d5400 <col:49> 'unsigned int' lvalue Var 0x1f3fe8d2170 'proto_len' 'unsigned int'
|   |-BinaryOperator 0x1f3fe8d57c8 <line:1046:5, col:59> 'char *' '='
|   | |-MemberExpr 0x1f3fe8d56a8 <col:5, col:10> 'char *' lvalue ->client_alpn_negotiated 0x1f3fe87ec80
|   | | `-ImplicitCastExpr 0x1f3fe8d5690 <col:5> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1f3fe8d5670 <col:5> 'HANDSHAKE_RESULT *' lvalue Var 0x1f3fe8d99b8 'ret' 'HANDSHAKE_RESULT *'
|   | `-CallExpr 0x1f3fe8d5750 <col:35, col:59> 'char *'
|   |   |-ImplicitCastExpr 0x1f3fe8d5738 <col:35> 'char *(*)(const unsigned char *, size_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1f3fe8d56d8 <col:35> 'char *(const unsigned char *, size_t)' Function 0x1f3fe8d8290 'dup_str' 'char *(const unsigned char *, size_t)'
|   |   |-ImplicitCastExpr 0x1f3fe8d5780 <col:43> 'const unsigned char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1f3fe8d56f8 <col:43> 'const unsigned char *' lvalue Var 0x1f3fe8d2038 'proto' 'const unsigned char *'
|   |   `-ImplicitCastExpr 0x1f3fe8d57b0 <col:50> 'size_t':'unsigned long long' <IntegralCast>
|   |     `-ImplicitCastExpr 0x1f3fe8d5798 <col:50> 'unsigned int' <LValueToRValue>
|   |       `-DeclRefExpr 0x1f3fe8d5718 <col:50> 'unsigned int' lvalue Var 0x1f3fe8d2170 'proto_len' 'unsigned int'
|   |-BinaryOperator 0x1f3fe8d59f0 <line:1049:5, col:59> 'char *' '='
|   | |-MemberExpr 0x1f3fe8d58d0 <col:5, col:10> 'char *' lvalue ->server_alpn_negotiated 0x1f3fe87ecf0
|   | | `-ImplicitCastExpr 0x1f3fe8d58b8 <col:5> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1f3fe8d5898 <col:5> 'HANDSHAKE_RESULT *' lvalue Var 0x1f3fe8d99b8 'ret' 'HANDSHAKE_RESULT *'
|   | `-CallExpr 0x1f3fe8d5978 <col:35, col:59> 'char *'
|   |   |-ImplicitCastExpr 0x1f3fe8d5960 <col:35> 'char *(*)(const unsigned char *, size_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1f3fe8d5900 <col:35> 'char *(const unsigned char *, size_t)' Function 0x1f3fe8d8290 'dup_str' 'char *(const unsigned char *, size_t)'
|   |   |-ImplicitCastExpr 0x1f3fe8d59a8 <col:43> 'const unsigned char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1f3fe8d5920 <col:43> 'const unsigned char *' lvalue Var 0x1f3fe8d2038 'proto' 'const unsigned char *'
|   |   `-ImplicitCastExpr 0x1f3fe8d59d8 <col:50> 'size_t':'unsigned long long' <IntegralCast>
|   |     `-ImplicitCastExpr 0x1f3fe8d59c0 <col:50> 'unsigned int' <LValueToRValue>
|   |       `-DeclRefExpr 0x1f3fe8d5940 <col:50> 'unsigned int' lvalue Var 0x1f3fe8d2170 'proto_len' 'unsigned int'
|   |-IfStmt 0x1f3fe8dd748 <line:1057:5, line:1068:5>
|   | |-OpaqueValueExpr 0x1f3fe8dd730 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1f3fe8dd708 <line:1057:55, line:1068:5>
|   |   |-DeclStmt 0x1f3fe8dd158 <line:1058:9, col:39>
|   |   | `-VarDecl 0x1f3fe8d5f50 <col:9, col:13> col:13 used nid 'int'
|   |   |-IfStmt 0x1f3fe8dd520 <line:1061:9, line:1064:9>
|   |   | |-OpaqueValueExpr 0x1f3fe8dd508 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x1f3fe8dd4f8 <line:1061:33, line:1064:9>
|   |   `-BinaryOperator 0x1f3fe8dd6e8 <line:1067:9, col:29> 'int' '='
|   |     |-MemberExpr 0x1f3fe8dd680 <col:9, col:14> 'int' lvalue ->tmp_key_type 0x1f3fe87ee40
|   |     | `-ImplicitCastExpr 0x1f3fe8dd668 <col:9> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x1f3fe8dd648 <col:9> 'HANDSHAKE_RESULT *' lvalue Var 0x1f3fe8d99b8 'ret' 'HANDSHAKE_RESULT *'
|   |     `-ImplicitCastExpr 0x1f3fe8dd6d0 <col:29> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x1f3fe8dd6b0 <col:29> 'int' lvalue Var 0x1f3fe8d5f50 'nid' 'int'
|   |-CallExpr 0x1f3fe8dd830 <line:1070:5, col:40> 'void'
|   | |-ImplicitCastExpr 0x1f3fe8dd818 <col:5> 'void (*)(CTX_DATA *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1f3fe8dd760 <col:5> 'void (CTX_DATA *)' Function 0x1f3fe825d38 'ctx_data_free_data' 'void (CTX_DATA *)'
|   | `-UnaryOperator 0x1f3fe8dd7a0 <col:24, col:25> 'CTX_DATA *' prefix '&' cannot overflow
|   |   `-DeclRefExpr 0x1f3fe8dd780 <col:25> 'CTX_DATA':'struct ctx_data_st' lvalue Var 0x1f3fe8d9890 'server_ctx_data' 'CTX_DATA':'struct ctx_data_st'
|   |-CallExpr 0x1f3fe8dd8c8 <line:1071:5, col:41> 'void'
|   | |-ImplicitCastExpr 0x1f3fe8dd8b0 <col:5> 'void (*)(CTX_DATA *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1f3fe8dd858 <col:5> 'void (CTX_DATA *)' Function 0x1f3fe825d38 'ctx_data_free_data' 'void (CTX_DATA *)'
|   | `-UnaryOperator 0x1f3fe8dd898 <col:24, col:25> 'CTX_DATA *' prefix '&' cannot overflow
|   |   `-DeclRefExpr 0x1f3fe8dd878 <col:25> 'CTX_DATA':'struct ctx_data_st' lvalue Var 0x1f3fe8d9908 'server2_ctx_data' 'CTX_DATA':'struct ctx_data_st'
|   |-CallExpr 0x1f3fe8dd960 <line:1072:5, col:40> 'void'
|   | |-ImplicitCastExpr 0x1f3fe8dd948 <col:5> 'void (*)(CTX_DATA *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1f3fe8dd8f0 <col:5> 'void (CTX_DATA *)' Function 0x1f3fe825d38 'ctx_data_free_data' 'void (CTX_DATA *)'
|   | `-UnaryOperator 0x1f3fe8dd930 <col:24, col:25> 'CTX_DATA *' prefix '&' cannot overflow
|   |   `-DeclRefExpr 0x1f3fe8dd910 <col:25> 'CTX_DATA':'struct ctx_data_st' lvalue Var 0x1f3fe8d9818 'client_ctx_data' 'CTX_DATA':'struct ctx_data_st'
|   |-CallExpr 0x1f3fe8dd9f8 <line:1074:5, col:27> 'void'
|   | |-ImplicitCastExpr 0x1f3fe8dd9e0 <col:5> 'void (*)(PEER *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1f3fe8dd988 <col:5> 'void (PEER *)' Function 0x1f3fe83d288 'peer_free_data' 'void (PEER *)'
|   | `-UnaryOperator 0x1f3fe8dd9c8 <col:20, col:21> 'PEER *' prefix '&' cannot overflow
|   |   `-DeclRefExpr 0x1f3fe8dd9a8 <col:21> 'PEER':'struct peer_st' lvalue Var 0x1f3fe8d95d8 'server' 'PEER':'struct peer_st'
|   |-CallExpr 0x1f3fe8dda90 <line:1075:5, col:27> 'void'
|   | |-ImplicitCastExpr 0x1f3fe8dda78 <col:5> 'void (*)(PEER *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1f3fe8dda20 <col:5> 'void (PEER *)' Function 0x1f3fe83d288 'peer_free_data' 'void (PEER *)'
|   | `-UnaryOperator 0x1f3fe8dda60 <col:20, col:21> 'PEER *' prefix '&' cannot overflow
|   |   `-DeclRefExpr 0x1f3fe8dda40 <col:21> 'PEER':'struct peer_st' lvalue Var 0x1f3fe8d9650 'client' 'PEER':'struct peer_st'
|   `-ReturnStmt 0x1f3fe8ddaf0 <line:1076:5, col:12>
|     `-ImplicitCastExpr 0x1f3fe8ddad8 <col:12> 'HANDSHAKE_RESULT *' <LValueToRValue>
|       `-DeclRefExpr 0x1f3fe8ddab8 <col:12> 'HANDSHAKE_RESULT *' lvalue Var 0x1f3fe8d99b8 'ret' 'HANDSHAKE_RESULT *'
`-FunctionDecl 0x1f3fe8e40e0 <line:1079:1, line:1106:1> line:1079:19 invalid do_handshake 'HANDSHAKE_RESULT *(int *, int *, int *, int *, int *, const SSL_TEST_CTX *)'
  |-ParmVarDecl 0x1f3fe8ddd00 <col:32, col:41> col:41 invalid server_ctx 'int *'
  |-ParmVarDecl 0x1f3fe8ddd80 <col:53, col:62> col:62 invalid server2_ctx 'int *'
  |-ParmVarDecl 0x1f3fe8dde00 <line:1080:32, col:41> col:41 invalid client_ctx 'int *'
  |-ParmVarDecl 0x1f3fe8dde80 <col:53, col:62> col:62 invalid resume_server_ctx 'int *'
  |-ParmVarDecl 0x1f3fe8ddf00 <line:1081:32, col:41> col:41 invalid resume_client_ctx 'int *'
  |-ParmVarDecl 0x1f3fe8ddf78 <line:1082:32, col:52> col:52 used test_ctx 'const SSL_TEST_CTX *'
  `-CompoundStmt 0x1f3fe8e4bd8 <line:1083:1, line:1106:1>
    |-DeclStmt 0x1f3fe8e4240 <line:1084:5, col:29>
    | `-VarDecl 0x1f3fe8e41d8 <col:5, col:23> col:23 used result 'HANDSHAKE_RESULT *'
    |-IfStmt 0x1f3fe8e4598 <line:1090:5, line:1091:14>
    | |-BinaryOperator 0x1f3fe8e4510 <line:1090:9, col:37> 'int' '!='
    | | |-ImplicitCastExpr 0x1f3fe8e44f8 <col:9, col:19> 'int' <IntegralCast>
    | | | `-ImplicitCastExpr 0x1f3fe8e44e0 <col:9, col:19> 'ssl_handshake_mode_t':'ssl_handshake_mode_t' <LValueToRValue>
    | | |   `-MemberExpr 0x1f3fe8e4490 <col:9, col:19> 'const ssl_handshake_mode_t':'const ssl_handshake_mode_t' lvalue ->handshake_mode 0x1f3fe87f300
    | | |     `-ImplicitCastExpr 0x1f3fe8e4478 <col:9> 'const SSL_TEST_CTX *' <LValueToRValue>
    | | |       `-DeclRefExpr 0x1f3fe8e4458 <col:9> 'const SSL_TEST_CTX *' lvalue ParmVar 0x1f3fe8ddf78 'test_ctx' 'const SSL_TEST_CTX *'
    | | `-DeclRefExpr 0x1f3fe8e44c0 <col:37> 'int' EnumConstant 0x1f3fe87cd58 'SSL_TEST_HANDSHAKE_RESUME' 'int'
    | `-GotoStmt 0x1f3fe8e4580 <line:1091:9, col:14> 'end' 0x1f3fe8e4530
    |-IfStmt 0x1f3fe8e4780 <line:1093:5, line:1096:5>
    | |-BinaryOperator 0x1f3fe8e4668 <line:1093:9, col:27> 'int' '!='
    | | |-ImplicitCastExpr 0x1f3fe8e4650 <col:9, col:17> 'int' <IntegralCast>
    | | | `-ImplicitCastExpr 0x1f3fe8e4638 <col:9, col:17> 'ssl_test_result_t':'ssl_test_result_t' <LValueToRValue>
    | | |   `-MemberExpr 0x1f3fe8e45e8 <col:9, col:17> 'ssl_test_result_t':'ssl_test_result_t' lvalue ->result 0x1f3fe87e670
    | | |     `-ImplicitCastExpr 0x1f3fe8e45d0 <col:9> 'HANDSHAKE_RESULT *' <LValueToRValue>
    | | |       `-DeclRefExpr 0x1f3fe8e45b0 <col:9> 'HANDSHAKE_RESULT *' lvalue Var 0x1f3fe8e41d8 'result' 'HANDSHAKE_RESULT *'
    | | `-DeclRefExpr 0x1f3fe8e4618 <col:27> 'int' EnumConstant 0x1f3fe876a00 'SSL_TEST_SUCCESS' 'int'
    | `-CompoundStmt 0x1f3fe8e4760 <col:45, line:1096:5>
    |   |-BinaryOperator 0x1f3fe8e4728 <line:1094:9, col:26> 'ssl_test_result_t':'ssl_test_result_t' '='
    |   | |-MemberExpr 0x1f3fe8e46c0 <col:9, col:17> 'ssl_test_result_t':'ssl_test_result_t' lvalue ->result 0x1f3fe87e670
    |   | | `-ImplicitCastExpr 0x1f3fe8e46a8 <col:9> 'HANDSHAKE_RESULT *' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x1f3fe8e4688 <col:9> 'HANDSHAKE_RESULT *' lvalue Var 0x1f3fe8e41d8 'result' 'HANDSHAKE_RESULT *'
    |   | `-ImplicitCastExpr 0x1f3fe8e4710 <col:26> 'ssl_test_result_t':'ssl_test_result_t' <IntegralCast>
    |   |   `-DeclRefExpr 0x1f3fe8e46f0 <col:26> 'int' EnumConstant 0x1f3fe876b60 'SSL_TEST_FIRST_HANDSHAKE_FAILED' 'int'
    |   `-GotoStmt 0x1f3fe8e4748 <line:1095:9, col:14> 'end' 0x1f3fe8e4530
    |-CallExpr 0x1f3fe8e4850 <line:1098:5, col:33> 'void'
    | |-ImplicitCastExpr 0x1f3fe8e4838 <col:5> 'void (*)(HANDSHAKE_RESULT *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x1f3fe8e4798 <col:5> 'void (HANDSHAKE_RESULT *)' Function 0x1f3fe827d78 'HANDSHAKE_RESULT_free' 'void (HANDSHAKE_RESULT *)'
    | `-ImplicitCastExpr 0x1f3fe8e4878 <col:27> 'HANDSHAKE_RESULT *' <LValueToRValue>
    |   `-DeclRefExpr 0x1f3fe8e47b8 <col:27> 'HANDSHAKE_RESULT *' lvalue Var 0x1f3fe8e41d8 'result' 'HANDSHAKE_RESULT *'
    |-LabelStmt 0x1f3fe8e4b78 <line:1103:2, col:5> 'end'
    | `-NullStmt 0x1f3fe8e4b70 <col:5>
    `-ReturnStmt 0x1f3fe8e4bc8 <line:1105:5, col:12>
      `-ImplicitCastExpr 0x1f3fe8e4bb0 <col:12> 'HANDSHAKE_RESULT *' <LValueToRValue>
        `-DeclRefExpr 0x1f3fe8e4b90 <col:12> 'HANDSHAKE_RESULT *' lvalue Var 0x1f3fe8e41d8 'result' 'HANDSHAKE_RESULT *'
