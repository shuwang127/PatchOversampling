TranslationUnitDecl 0x1e001054c08 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1e0010554a0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1e0010551a0 '__int128'
|-TypedefDecl 0x1e001055510 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1e0010551c0 'unsigned __int128'
|-TypedefDecl 0x1e001055848 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1e001055600 'struct __NSConstantString_tag'
|   `-Record 0x1e001055568 '__NSConstantString_tag'
|-TypedefDecl 0x1e0010558b8 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x1e001054de0 'unsigned long long'
|-TypedefDecl 0x1e001055950 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1e001055910 'char *'
|   `-BuiltinType 0x1e001054ca0 'char'
|-TypedefDecl 0x1e0010559c0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1e001055910 'char *'
|   `-BuiltinType 0x1e001054ca0 'char'
|-TypedefDecl 0x1e001055a80 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x1e001054de0 'unsigned long long'
|-TypedefDecl 0x1e001055af0 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x1e001055910 'char *'
|   `-BuiltinType 0x1e001054ca0 'char'
|-FunctionDecl 0x1e002bfb3e0 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1e002bfb480 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x1e002bfb4f0 <col:21> Implicit
|-FunctionDecl 0x1e002bfb548 prev 0x1e002bfb3e0 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1e002bfb270 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x1e002bfb638 <col:21> Inherited Implicit
|-TypedefDecl 0x1e002bfb678 prev 0x1e0010558b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x1e001054de0 'unsigned long long'
|-TypedefDecl 0x1e002bfb720 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x1e002bfb6f0 'size_t' sugar
|   |-Typedef 0x1e002bfb678 'size_t'
|   `-BuiltinType 0x1e001054de0 'unsigned long long'
|-TypedefDecl 0x1e002bfb790 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x1e001054d40 'long long'
|-TypedefDecl 0x1e002bfb800 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x1e001054d40 'long long'
|-TypedefDecl 0x1e002bfb870 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x1e001054d80 'unsigned short'
|-TypedefDecl 0x1e002bfb8e0 <line:541:1, col:24> col:24 wint_t 'unsigned short'
| `-BuiltinType 0x1e001054d80 'unsigned short'
|-TypedefDecl 0x1e002bfb950 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x1e001054d80 'unsigned short'
|-TypedefDecl 0x1e002bfb9c0 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x1e001054d00 'int'
|-TypedefDecl 0x1e002bfba30 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x1e001054d20 'long'
|-TypedefDecl 0x1e002bfbaa0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x1e001054d40 'long long'
|-TypedefDecl 0x1e002bfbb30 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x1e002bfbb00 '__time64_t' sugar
|   |-Typedef 0x1e002bfbaa0 '__time64_t'
|   `-BuiltinType 0x1e001054d40 'long long'
|-FunctionDecl 0x1e002bfbca8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x1e002bfbec8 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x1e002c32a90 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x1e002bfc008 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x1e002bfc080 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x1e002bfc0f8 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x1e002bfc178 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x1e002c32830 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x1e002c32b70 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x1e002c32c30 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x1e002c32da0 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x1e002c32d50 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x1e002c32cf0 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x1e002c32c10 'struct threadlocaleinfostruct'
|       `-Record 0x1e002c3b8c0 'threadlocaleinfostruct'
|-TypedefDecl 0x1e002c32eb0 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x1e002c32e60 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x1e002c32e00 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x1e002c32cd0 'struct threadmbcinfostruct'
|       `-Record 0x1e002c32c30 'threadmbcinfostruct'
|-RecordDecl 0x1e002c32f08 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x1e002c32fc0 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x1e002c33080 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1e002c33110 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x1e002c331a0 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x1e002c33258 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x1e002c33200 'struct localeinfo_struct' sugar
|   `-RecordType 0x1e002c33060 'struct localeinfo_struct'
|     `-Record 0x1e002c32fc0 'localeinfo_struct'
|-TypedefDecl 0x1e002c33330 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x1e002c332e0 'struct localeinfo_struct *'
|   `-ElaboratedType 0x1e002c33200 'struct localeinfo_struct' sugar
|     `-RecordType 0x1e002c33060 'struct localeinfo_struct'
|       `-Record 0x1e002c32fc0 'localeinfo_struct'
|-RecordDecl 0x1e002c333a8 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x1e002c33460 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1e002c334d8 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x1e002c33598 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x1e002c33630 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x1e002c336a0 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x1e002c33758 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x1e002c33700 'struct localerefcount' sugar
|   `-RecordType 0x1e002c33440 'struct localerefcount'
|     `-Record 0x1e002c333a8 'localerefcount'
|-RecordDecl 0x1e002c3b8c0 prev 0x1e002c32b70 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x1e002c3b940 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1e002c3b9b8 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x1e002c3ba28 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x1e002c3ba98 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x1e002c3bb08 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x1e002c3bcc8 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x1e002c3bd38 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x1e002c3bda8 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x1e002c3be18 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x1e002c3be88 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x1e002c3bef8 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x1e002c3bf50 parent 0x1e001054c08 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x1e002c3c0e0 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x1e002c3c150 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x1e002c3c1c0 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x1e002c3c230 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x1e002c3c2d0 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x1e002c3c340 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x1e002c3c450 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x1e002c3c588 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x1e002c3c638 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x1e002c3c5e0 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x1e002c32c10 'struct threadlocaleinfostruct'
|     `-Record 0x1e002c3b8c0 'threadlocaleinfostruct'
|-FunctionDecl 0x1e002c3eb00 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:47:9, col:142> col:25 _memccpy 'void *(void *, const void *, int, size_t) __attribute__((cdecl))':'void *(void *, const void *, int, size_t)'
| |-ParmVarDecl 0x1e002c3c6c0 <col:69, col:76> col:76 _Dst 'void *'
| |-ParmVarDecl 0x1e002c3c770 <col:87, col:100> col:100 _Src 'const void *'
| |-ParmVarDecl 0x1e002c3c7f0 <col:111, col:115> col:115 _Val 'int'
| `-ParmVarDecl 0x1e002c3e8f0 <col:126, col:133> col:133 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1e002c3eec8 <line:48:54> col:54 implicit memchr 'void *(const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1e002c3ef68 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1e002c3efd0 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1e002c3f038 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1e002c3f0b8 prev 0x1e002c3eec8 <col:38, col:150> col:54 memchr 'void *(const void *, int, unsigned long long)'
| |-ParmVarDecl 0x1e002c3ebf0 <col:94, col:107> col:107 _Buf 'const void *'
| |-ParmVarDecl 0x1e002c3ec70 <col:119, col:123> col:123 _Val 'int'
| `-ParmVarDecl 0x1e002c3ece8 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1e002c3f478 <line:49:24, col:162> col:40 _memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x1e002c3f1a0 <col:77, col:90> col:90 _Buf1 'const void *'
| |-ParmVarDecl 0x1e002c3f220 <col:125, col:138> col:138 _Buf2 'const void *'
| `-ParmVarDecl 0x1e002c3f298 <col:150, col:157> col:157 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1e002c43990 <line:50:24, col:192> col:40 _memicmp_l 'int (const void *, const void *, size_t, _locale_t) __attribute__((cdecl))':'int (const void *, const void *, size_t, _locale_t)'
| |-ParmVarDecl 0x1e002c3f560 <col:79, col:92> col:92 _Buf1 'const void *'
| |-ParmVarDecl 0x1e002c3f5e0 <col:127, col:140> col:140 _Buf2 'const void *'
| |-ParmVarDecl 0x1e002c3f658 <col:152, col:159> col:159 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1e002c3f6f0 <col:175, col:185> col:185 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e002c43c98 <line:51:32> col:32 implicit memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1e002c43d38 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1e002c43da0 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1e002c43e08 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1e002c43e88 prev 0x1e002c43c98 <col:16, col:144> col:32 memcmp 'int (const void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x1e002c43a80 <col:63, col:76> col:76 _Buf1 'const void *'
| |-ParmVarDecl 0x1e002c43b00 <col:107, col:120> col:120 _Buf2 'const void *'
| `-ParmVarDecl 0x1e002c43b78 <col:132, col:139> col:139 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1e002c44248 <line:55:17> col:17 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1e002c442e8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1e002c44350 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1e002c443b8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1e002c44438 prev 0x1e002c44248 <col:1, col:127> col:17 used memcpy 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x1e002c43f70 <col:54, col:61> col:61 _Dst 'void *'
| |-ParmVarDecl 0x1e002c43ff0 <col:91, col:104> col:104 _Src 'const void *'
| `-ParmVarDecl 0x1e002c44068 <col:115, col:122> col:122 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1e002c3c8d0 <line:57:9, col:191> col:26 memcpy_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x1e002c44548 <col:82, col:89> col:89 _Dst 'void *'
| |-ParmVarDecl 0x1e002c445e0 <col:100, col:108> col:108 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1e002c44660 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x1e002c446d8 <col:174, col:182> col:182 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1e002c3cc98 <line:94:25> col:25 implicit used memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1e002c3cd38 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1e002c3cda0 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1e002c3ce08 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1e002c3ce88 prev 0x1e002c3cc98 <col:9, col:107> col:25 used memset 'void *(void *, int, unsigned long long)'
| |-ParmVarDecl 0x1e002c3c9c0 <col:62, col:69> col:69 _Dst 'void *'
| |-ParmVarDecl 0x1e002c3ca40 <col:80, col:84> col:84 _Val 'int'
| `-ParmVarDecl 0x1e002c3cab8 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1e002c3d308 <line:98:57> col:57 implicit memccpy 'void *(void *, const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1e002c3d3a8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1e002c3d410 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1e002c3d478 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1e002c3d4e0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1e002c3d568 prev 0x1e002c3d308 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:98:187> col:57 memccpy 'void *(void *, const void *, int, unsigned long long)'
| |-ParmVarDecl 0x1e002c3d050 <col:95, col:102> col:102 _Dst 'void *'
| |-ParmVarDecl 0x1e002c3d0d0 <col:136, col:149> col:149 _Src 'const void *'
| |-ParmVarDecl 0x1e002c3d150 <col:160, col:164> col:164 _Val 'int'
| |-ParmVarDecl 0x1e002c3d1c8 <col:175, col:182> col:182 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1e002c3d628 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memccpy. See online help for details." ""
|-FunctionDecl 0x1e002c4bb58 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:99:190> col:69 memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x1e002c3d7f0 <col:105, col:118> col:118 _Buf1 'const void *'
| |-ParmVarDecl 0x1e002c4b9c0 <col:153, col:166> col:166 _Buf2 'const void *'
| |-ParmVarDecl 0x1e002c4ba38 <col:178, col:185> col:185 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1e002c4bc10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memicmp. See online help for details." ""
|-FunctionDecl 0x1e002c4c000 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:105:40, col:144> col:56 _strset_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x1e002c4bd38 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x1e002c4bdb0 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1e002c4be30 <col:134, col:138> col:138 _Value 'int'
|-FunctionDecl 0x1e002c4c3d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:107:88 _strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x1e002c4c1e0 <col:108, col:114> col:114 _Dest 'char *'
| |-ParmVarDecl 0x1e002c4c260 <col:126, col:131> col:131 _Value 'int'
| `-DeprecatedAttr 0x1e002c4c480 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e002c4c890 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:109:40, col:158> col:56 strcpy_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x1e002c4c5c8 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x1e002c4c640 <col:112, col:120> col:120 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1e002c4c6c0 <col:141, col:154> col:154 _Src 'const char *'
|-FunctionDecl 0x1e002c46c30 <line:112:88> col:88 implicit strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1e002c46cd0 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x1e002c46d38 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1e002c46db0 prev 0x1e002c46c30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:112:88 strcpy 'char *(char *, const char *)'
| |-ParmVarDecl 0x1e002c46a48 <col:142, col:148> col:148 _Dest 'char *'
| |-ParmVarDecl 0x1e002c46ac8 <col:162, col:176> col:176 _Source 'const char *'
| `-DeprecatedAttr 0x1e002c46e60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e002c471b8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:114:40, col:161> col:56 strcat_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x1e002c46fa8 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x1e002c47020 <col:115, col:123> col:123 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1e002c470a0 <col:144, col:157> col:157 _Src 'const char *'
|-FunctionDecl 0x1e002c474e0 <line:118:88> col:88 implicit strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1e002c47580 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x1e002c475e8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1e002c47660 prev 0x1e002c474e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:118:88 strcat 'char *(char *, const char *)'
| |-ParmVarDecl 0x1e002c47360 <col:170, col:176> col:176 _Dest 'char *'
| |-ParmVarDecl 0x1e002c473e0 <col:190, col:204> col:204 _Source 'const char *'
| `-DeprecatedAttr 0x1e002c47710 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e002c4aa80 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:120:32> col:32 implicit used strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x1e002c4ab20 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1e002c4ab88 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1e002c4ac00 prev 0x1e002c4aa80 <col:16, col:91> col:32 used strcmp 'int (const char *, const char *)'
| |-ParmVarDecl 0x1e002c47858 <col:46, col:59> col:59 _Str1 'const char *'
| `-ParmVarDecl 0x1e002c478d8 <col:73, col:86> col:86 _Str2 'const char *'
|-FunctionDecl 0x1e002c4ae50 <line:121:32> col:32 implicit used strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x1e002c4aef0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1e002c4af60 prev 0x1e002c4ae50 <col:16, col:63> col:32 used strlen 'unsigned long long (const char *)'
| `-ParmVarDecl 0x1e002c4ace0 <col:46, col:59> col:59 _Str 'const char *'
|-FunctionDecl 0x1e002c4b258 <line:125:1, col:92> col:17 used strnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x1e002c4b038 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x1e002c4b0b0 <col:76, col:83> col:83 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1e002c4b4a8 <line:127:16, line:133:1> line:130:19 strnlen_s 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' static inline
| |-ParmVarDecl 0x1e002c4b338 <col:56, col:69> col:69 used _Str 'const char *'
| |-ParmVarDecl 0x1e002c4b3b0 <col:80, col:87> col:87 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x1e002c4b7d8 <line:131:1, line:133:1>
|   `-ReturnStmt 0x1e002c4b7c8 <line:132:5, col:51>
|     `-ConditionalOperator 0x1e002c4b798 <col:12, col:51> 'unsigned long long'
|       |-ParenExpr 0x1e002c4b608 <col:12, col:20> 'int'
|       | `-BinaryOperator 0x1e002c4b5e8 <col:13, col:19> 'int' '=='
|       |   |-ImplicitCastExpr 0x1e002c4b5b8 <col:13> 'const char *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x1e002c4b570 <col:13> 'const char *' lvalue ParmVar 0x1e002c4b338 '_Str' 'const char *'
|       |   `-ImplicitCastExpr 0x1e002c4b5d0 <col:19> 'const char *' <NullToPointer>
|       |     `-IntegerLiteral 0x1e002c4b590 <col:19> 'int' 0
|       |-ImplicitCastExpr 0x1e002c4b780 <col:24> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x1e002c4b628 <col:24> 'int' 0
|       `-CallExpr 0x1e002c4b720 <col:28, col:51> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x1e002c4b708 <col:28> 'size_t (*)(const char *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x1e002c4b650 <col:28> 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' Function 0x1e002c4b258 'strnlen' 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
|         |-ImplicitCastExpr 0x1e002c4b750 <col:36> 'const char *' <LValueToRValue>
|         | `-DeclRefExpr 0x1e002c4b670 <col:36> 'const char *' lvalue ParmVar 0x1e002c4b338 '_Str' 'const char *'
|         `-ImplicitCastExpr 0x1e002c4b768 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x1e002c4b690 <col:42> 'size_t':'unsigned long long' lvalue ParmVar 0x1e002c4b3b0 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x1e002c45a98 <line:136:28, col:209> col:44 memmove_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x1e002c4b808 <col:100, col:107> col:107 _Dst 'void *'
| |-ParmVarDecl 0x1e002c4b880 <col:118, col:126> col:126 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1e002c4b900 <col:168, col:181> col:181 _Src 'const void *'
| `-ParmVarDecl 0x1e002c45960 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1e002c45da0 <line:139:67> col:67 implicit memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1e002c45e40 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1e002c45ea8 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1e002c45f10 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1e002c45f90 prev 0x1e002c45da0 <col:51, col:186> col:67 memmove 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x1e002c45b88 <col:109, col:116> col:116 _Dst 'void *'
| |-ParmVarDecl 0x1e002c45c08 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x1e002c45c80 <col:174, col:181> col:181 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1e002c461c8 <line:146:24, col:76> col:40 _strdup 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| `-ParmVarDecl 0x1e002c46078 <col:59, col:72> col:72 _Src 'const char *'
|-FunctionDecl 0x1e002c46490 <line:152:54> col:54 implicit strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x1e002c46530 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1e002c46598 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1e002c46610 prev 0x1e002c46490 <col:38, col:100> col:54 strchr 'char *(const char *, int)'
| |-ParmVarDecl 0x1e002c462a0 <col:68, col:81> col:81 _Str 'const char *'
| `-ParmVarDecl 0x1e002c46320 <col:92, col:96> col:96 _Val 'int'
|-FunctionDecl 0x1e002c46870 <line:153:24, col:103> col:40 _stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1e002c466f0 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x1e002c46770 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x1e002c44ad0 <line:154:24, col:103> col:40 _strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1e002c44950 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x1e002c449d0 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x1e002c44e88 <line:155:24, col:133> col:40 _stricmp_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x1e002c44bb0 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x1e002c44c30 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x1e002c44ca8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e002c450f0 <line:156:24, col:103> col:40 strcoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1e002c44f70 <col:56, col:69> col:69 _Str1 'const char *'
| `-ParmVarDecl 0x1e002c44ff0 <col:84, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x1e002c453e8 <line:157:24, col:133> col:40 _strcoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x1e002c451d0 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x1e002c45250 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x1e002c452c8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e002c45650 <line:158:24, col:104> col:40 _stricoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1e002c454d0 <col:58, col:71> col:71 _Str1 'const char *'
| `-ParmVarDecl 0x1e002c45550 <col:86, col:99> col:99 _Str2 'const char *'
|-FunctionDecl 0x1e002c4fa00 <line:159:24, col:134> col:40 _stricoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x1e002c45730 <col:60, col:73> col:73 _Str1 'const char *'
| |-ParmVarDecl 0x1e002c457b0 <col:88, col:101> col:101 _Str2 'const char *'
| `-ParmVarDecl 0x1e002c45828 <col:117, col:127> col:127 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e002c4fdb8 <line:160:24, col:167> col:40 _strncoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1e002c4fae8 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1e002c4fb68 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x1e002c4fbe0 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1e002c50220 <line:161:24, col:195> col:40 _strncoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1e002c4fea0 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1e002c4ff20 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x1e002c4ff98 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1e002c50010 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e002c50528 <line:162:24, col:167> col:40 _strnicoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1e002c50310 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1e002c50390 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x1e002c50408 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1e002c508c0 <line:163:24, col:196> col:40 _strnicoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1e002c50610 <col:80, col:93> col:93 _Str1 'const char *'
| |-ParmVarDecl 0x1e002c50690 <col:127, col:140> col:140 _Str2 'const char *'
| |-ParmVarDecl 0x1e002c50708 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1e002c50780 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e002c4dc08 <line:164:40> col:40 implicit strcspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x1e002c4dca8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1e002c4dd10 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1e002c4dd88 prev 0x1e002c4dc08 <col:24, col:104> col:40 strcspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x1e002c4d9e0 <col:56, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x1e002c4da60 <col:83, col:96> col:96 _Control 'const char *'
|-FunctionDecl 0x1e002c4e040 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:165:118> col:77 _strerror 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x1e002c4df60 <col:98, col:111> col:111 _ErrMsg 'const char *'
| `-DeprecatedAttr 0x1e002c4e0e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e002c4e4c0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:166:28, col:155> col:44 _strerror_s 'errno_t (char *, size_t, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *)'
| |-ParmVarDecl 0x1e002c4e230 <col:85, col:92> col:92 _Buf 'char *'
| |-ParmVarDecl 0x1e002c4e2a8 <col:103, col:110> col:110 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1e002c4e328 <col:135, col:148> col:148 _ErrMsg 'const char *'
|-FunctionDecl 0x1e002c4e7d8 <line:168:76> col:76 implicit strerror 'char *(int)' extern
| `-ParmVarDecl 0x1e002c4e878 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1e002c4e8e8 prev 0x1e002c4e7d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:168:93> col:76 strerror 'char *(int)'
| |-ParmVarDecl 0x1e002c4e6a0 <col:90> col:93 'int'
| `-DeprecatedAttr 0x1e002c4e990 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e002c4cce0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:170:28, col:139> col:44 strerror_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x1e002c4cad0 <col:84, col:91> col:91 _Buf 'char *'
| |-ParmVarDecl 0x1e002c4cb48 <col:102, col:109> col:109 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1e002c4cbc8 <col:128, col:132> col:132 _ErrNum 'int'
|-FunctionDecl 0x1e002c4cfe8 <line:173:28, col:109> col:44 _strlwr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x1e002c4cdc8 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x1e002c4ce40 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1e002c4d2d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:175:79 _strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1e002c4d188 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x1e002c4d380 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e002c4d790 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:176:28, col:139> col:44 _strlwr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1e002c4d4c8 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x1e002c4d540 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1e002c4d5b8 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e002c4eba0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:178:82 _strlwr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x1e002c4d938 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x1e002c4e9f0 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1e002c4ec50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e002c4f108 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:180:40, col:206> col:56 strncat_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x1e002c4ed98 <col:98, col:105> col:105 _Dst 'char *'
| |-ParmVarDecl 0x1e002c4ee10 <col:116, col:124> col:124 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1e002c4ee90 <col:165, col:178> col:178 _Src 'const char *'
| `-ParmVarDecl 0x1e002c4ef08 <col:189, col:197> col:197 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1e002c4f588 <line:186:83> col:83 implicit strncat 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1e002c4f628 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1e002c4f690 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1e002c4f6f8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1e002c4f778 prev 0x1e002c4f588 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:186:83 strncat 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1e002c4f2b8 <col:161, col:167> col:167 _Dest 'char *'
| |-ParmVarDecl 0x1e002c4f338 <col:198, col:212> col:212 _Source 'const char *'
| |-ParmVarDecl 0x1e002c4f3b0 <col:226, col:234> col:234 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1e002c4f830 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e002c48b40 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:188:40> col:40 implicit strncmp 'int (const char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1e002c48be0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1e002c48c48 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1e002c48cb0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1e002c48d30 prev 0x1e002c48b40 <col:24, col:163> col:40 strncmp 'int (const char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1e002c4f978 <col:75, col:88> col:88 _Str1 'const char *'
| |-ParmVarDecl 0x1e002c489a8 <col:122, col:135> col:135 _Str2 'const char *'
| `-ParmVarDecl 0x1e002c48a20 <col:147, col:154> col:154 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1e002c49030 <line:189:24, col:165> col:40 _strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1e002c48e18 <col:77, col:90> col:90 _Str1 'const char *'
| |-ParmVarDecl 0x1e002c48e98 <col:124, col:137> col:137 _Str2 'const char *'
| `-ParmVarDecl 0x1e002c48f10 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1e002c493c8 <line:190:24, col:195> col:40 _strnicmp_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1e002c49118 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1e002c49198 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x1e002c49210 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1e002c49288 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e002c49760 <line:192:40, col:203> col:56 strncpy_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x1e002c494b8 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x1e002c49530 <col:113, col:121> col:121 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1e002c495b0 <col:162, col:175> col:175 _Src 'const char *'
| `-ParmVarDecl 0x1e002c49628 <col:186, col:194> col:194 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1e002c50ba8 <line:195:83> col:83 implicit strncpy 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1e002c50c48 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1e002c50cb0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1e002c50d18 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1e002c50d98 prev 0x1e002c50ba8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:195:83 strncpy 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1e002c49910 <col:167, col:173> col:173 _Dest 'char *'
| |-ParmVarDecl 0x1e002c50a10 <col:204, col:218> col:218 _Source 'const char *'
| |-ParmVarDecl 0x1e002c50a88 <col:232, col:240> col:240 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1e002c50e50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e002c51308 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:196:40, col:174> col:56 _strnset_s 'errno_t (char *, size_t, int, size_t) __attribute__((cdecl))':'errno_t (char *, size_t, int, size_t)'
| |-ParmVarDecl 0x1e002c50f98 <col:99, col:106> col:106 _Str 'char *'
| |-ParmVarDecl 0x1e002c51010 <col:117, col:124> col:124 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1e002c51090 <col:143, col:147> col:147 _Val 'int'
| `-ParmVarDecl 0x1e002c51108 <col:158, col:165> col:165 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1e002c51788 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:198:83 _strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x1e002c514b8 <col:163, col:169> col:169 _Dest 'char *'
| |-ParmVarDecl 0x1e002c51538 <col:181, col:186> col:186 _Val 'int'
| |-ParmVarDecl 0x1e002c515b0 <col:197, col:205> col:205 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1e002c51840 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e002c49b10 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:199:54> col:54 implicit strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x1e002c49bb0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1e002c49c18 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1e002c49c90 prev 0x1e002c49b10 <col:38, col:116> col:54 strpbrk 'char *(const char *, const char *)'
| |-ParmVarDecl 0x1e002c51988 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x1e002c499a0 <col:95, col:108> col:108 _Control 'const char *'
|-FunctionDecl 0x1e002c49ef0 <line:200:54> col:54 implicit strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x1e002c49f90 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1e002c49ff8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1e002c4a070 prev 0x1e002c49ef0 <col:38, col:100> col:54 strrchr 'char *(const char *, int)'
| |-ParmVarDecl 0x1e002c49d70 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x1e002c49df0 <col:93, col:97> col:97 _Ch 'int'
|-FunctionDecl 0x1e002c4a230 <line:201:9, col:54> col:25 _strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| `-ParmVarDecl 0x1e002c4a150 <col:43, col:50> col:50 _Str 'char *'
|-FunctionDecl 0x1e002c4a480 <line:202:40> col:40 implicit strspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x1e002c4a520 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1e002c4a588 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1e002c4a600 prev 0x1e002c4a480 <col:24, col:101> col:40 strspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x1e002c4a308 <col:54, col:67> col:67 _Str 'const char *'
| `-ParmVarDecl 0x1e002c4a388 <col:80, col:93> col:93 _Control 'const char *'
|-FunctionDecl 0x1e002c4a860 <line:203:70> col:70 implicit strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x1e002c4a900 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1e002cc5fe0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1e002cc6058 prev 0x1e002c4a860 <col:54, col:130> col:70 strstr 'char *(const char *, const char *)'
| |-ParmVarDecl 0x1e002c4a6e0 <col:84, col:97> col:97 _Str 'const char *'
| `-ParmVarDecl 0x1e002c4a760 <col:110, col:123> col:123 _SubStr 'const char *'
|-FunctionDecl 0x1e002cc6378 <line:204:74> col:74 implicit strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1e002cc6418 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x1e002cc6480 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1e002cc64f8 prev 0x1e002cc6378 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:204:134> col:74 strtok 'char *(char *, const char *)'
| |-ParmVarDecl 0x1e002cc61f8 <col:95, col:102> col:102 _Str 'char *'
| |-ParmVarDecl 0x1e002cc6278 <col:115, col:128> col:128 _Delim 'const char *'
| `-DeprecatedAttr 0x1e002cc65a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e002cc6988 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:206:36, col:162> col:52 strtok_s 'char *(char *, const char *, char **) __attribute__((cdecl))':'char *(char *, const char *, char **)'
| |-ParmVarDecl 0x1e002cc66f0 <col:75, col:82> col:82 _Str 'char *'
| |-ParmVarDecl 0x1e002cc6770 <col:95, col:108> col:108 _Delim 'const char *'
| `-ParmVarDecl 0x1e002cc67f0 <col:146, col:154> col:154 _Context 'char **'
|-FunctionDecl 0x1e002cc6be0 <line:208:28, col:109> col:44 _strupr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x1e002cc6a70 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x1e002cc6ae8 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1e002cc6e60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:210:79 _strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1e002cc6d80 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x1e002cc6f08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e002cca328 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:211:28, col:130> col:44 _strupr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1e002cca120 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x1e002cca198 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1e002cca210 <col:113, col:123> col:123 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e002cca648 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:213:82 _strupr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x1e002cca4d0 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x1e002cca548 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1e002cca6f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e002ccab10 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:214:44> col:44 implicit strxfrm 'unsigned long long (char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1e002ccabb0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1e002ccac18 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1e002ccac80 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1e002ccad00 prev 0x1e002ccab10 <col:28, col:155> col:44 strxfrm 'unsigned long long (char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1e002cca840 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x1e002cca8c0 <col:115, col:128> col:128 _Src 'const char *'
| `-ParmVarDecl 0x1e002cca938 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1e002cc8138 <line:215:28, col:185> col:44 _strxfrm_l 'size_t (char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1e002ccade8 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x1e002ccae68 <col:117, col:130> col:130 _Src 'const char *'
| |-ParmVarDecl 0x1e002ccaee0 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1e002ccaf58 <col:168, col:178> col:178 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e002cc83e0 <line:245:71> col:71 implicit strdup 'char *(const char *)' extern
| `-ParmVarDecl 0x1e002cc8480 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1e002cc84f0 prev 0x1e002cc83e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:245:106> col:71 strdup 'char *(const char *)'
| |-ParmVarDecl 0x1e002cc8300 <col:89, col:102> col:102 _Src 'const char *'
| `-DeprecatedAttr 0x1e002cc8598 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strdup. See online help for details." ""
|-FunctionDecl 0x1e002cc88e0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:252:129> col:69 strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1e002cc8760 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x1e002cc87e0 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x1e002cc8990 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strcmpi. See online help for details." ""
|-FunctionDecl 0x1e002cc8cd8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:253:129> col:69 stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1e002cc8b58 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x1e002cc8bd8 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x1e002cc8d88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details." ""
|-FunctionDecl 0x1e002ccb068 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:254:84> col:56 strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1e002cc8f50 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x1e002ccb110 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strlwr. See online help for details." ""
|-FunctionDecl 0x1e002ccb528 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:255:193> col:70 strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1e002ccb310 <col:106, col:119> col:119 _Str1 'const char *'
| |-ParmVarDecl 0x1e002ccb390 <col:153, col:166> col:166 _Str 'const char *'
| |-ParmVarDecl 0x1e002ccb408 <col:177, col:184> col:184 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1e002ccb5e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnicmp. See online help for details." ""
|-FunctionDecl 0x1e002ccb9c0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:256:143> col:57 strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x1e002ccb7a8 <col:94, col:101> col:101 _Str 'char *'
| |-ParmVarDecl 0x1e002ccb828 <col:112, col:116> col:116 _Val 'int'
| |-ParmVarDecl 0x1e002ccb8a0 <col:127, col:134> col:134 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1e002ccba78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnset. See online help for details." ""
|-FunctionDecl 0x1e002ccbd20 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:257:84> col:56 strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1e002ccbc40 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x1e002ccbdc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strrev. See online help for details." ""
|-FunctionDecl 0x1e002cc40c0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:258:99> col:56 strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x1e002ccbf90 <col:73, col:80> col:80 _Str 'char *'
| |-ParmVarDecl 0x1e002cc3fc0 <col:91, col:95> col:95 _Val 'int'
| `-DeprecatedAttr 0x1e002cc4170 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strset. See online help for details." ""
|-FunctionDecl 0x1e002cc4418 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:259:84> col:56 strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1e002cc4338 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x1e002cc44c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strupr. See online help for details." ""
|-FunctionDecl 0x1e002cc4750 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:273:24, col:77> col:42 _wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| `-ParmVarDecl 0x1e002cc45e0 <col:57, col:73> col:73 _Str 'const wchar_t *'
|-FunctionDecl 0x1e002cc4ae0 <line:280:40, col:167> col:56 wcscat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x1e002cc4820 <col:97, col:107> col:107 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1e002cc4898 <col:118, col:126> col:126 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1e002cc4910 <col:147, col:163> col:163 _Src 'const wchar_t *'
|-FunctionDecl 0x1e002cc4e98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:284:82 wcscat 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1e002cc4c80 <col:164, col:173> col:173 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1e002cc4cf8 <col:187, col:204> col:204 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x1e002cc4f48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e002cc52e8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:288:41> col:41 implicit wcschr 'unsigned short *(const unsigned short *, unsigned short)' extern
| |-ParmVarDecl 0x1e002cc5388 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x1e002cc53f0 <<invalid sloc>> <invalid sloc> 'unsigned short'
|-FunctionDecl 0x1e002cc5468 prev 0x1e002cc52e8 <col:23, col:88> col:41 wcschr 'unsigned short *(const unsigned short *, unsigned short)'
| |-ParmVarDecl 0x1e002cc50c8 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1e002cc5140 <col:77, col:85> col:85 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1e002cc5760 <line:289:36> col:36 implicit wcscmp 'int (const unsigned short *, const unsigned short *)' extern
| |-ParmVarDecl 0x1e002cc5800 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x1e002cc5868 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x1e002cc58e0 prev 0x1e002cc5760 <col:24, col:101> col:36 wcscmp 'int (const unsigned short *, const unsigned short *)'
| |-ParmVarDecl 0x1e002cc5540 <col:50, col:66> col:66 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1e002cc55b8 <col:80, col:96> col:96 _Str2 'const wchar_t *'
|-FunctionDecl 0x1e002cc5bc0 <line:291:40, col:164> col:56 wcscpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x1e002cc59b8 <col:94, col:104> col:104 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1e002cc5a30 <col:115, col:123> col:123 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1e002cc5aa8 <col:144, col:160> col:160 _Src 'const wchar_t *'
|-FunctionDecl 0x1e002cc5ed0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:294:82 wcscpy 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1e002cc5d60 <col:136, col:145> col:145 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1e002cc5dd8 <col:159, col:176> col:176 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x1e002cc5f80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e002ccc358 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:295:24, col:107> col:39 wcscspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1e002ccc138 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1e002ccc1b0 <col:83, col:99> col:99 _Control 'const wchar_t *'
|-FunctionDecl 0x1e002ccc5a0 <line:296:39> col:39 implicit wcslen 'unsigned long long (const unsigned short *)' extern
| `-ParmVarDecl 0x1e002ccc640 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x1e002ccc6b0 prev 0x1e002ccc5a0 <col:24, col:73> col:39 wcslen 'unsigned long long (const unsigned short *)'
| `-ParmVarDecl 0x1e002ccc430 <col:53, col:69> col:69 _Str 'const wchar_t *'
|-FunctionDecl 0x1e002ccc998 <line:300:1, col:94> col:16 used wcsnlen 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
| |-ParmVarDecl 0x1e002ccc780 <col:51, col:67> col:67 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1e002ccc7f8 <col:78, col:85> col:85 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1e002cccbe0 <line:302:16, line:308:1> line:305:18 wcsnlen_s 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' static inline
| |-ParmVarDecl 0x1e002ccca70 <col:55, col:71> col:71 used _Src 'const wchar_t *'
| |-ParmVarDecl 0x1e002cccae8 <col:82, col:89> col:89 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x1e002cccf78 <line:306:1, line:308:1>
|   `-ReturnStmt 0x1e002cccf68 <line:307:5, col:56>
|     `-ConditionalOperator 0x1e002cccf38 <col:12, col:56> 'unsigned long long'
|       |-ParenExpr 0x1e002cccda0 <col:12, col:25> 'int'
|       | `-BinaryOperator 0x1e002cccd80 <col:13, line:36:27> 'int' '=='
|       |   |-ImplicitCastExpr 0x1e002cccd50 <line:307:13> 'const wchar_t *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x1e002cccca8 <col:13> 'const wchar_t *' lvalue ParmVar 0x1e002ccca70 '_Src' 'const wchar_t *'
|       |   `-ImplicitCastExpr 0x1e002cccd68 <line:36:17, col:27> 'const wchar_t *' <BitCast>
|       |     `-ParenExpr 0x1e002cccd30 <col:17, col:27> 'void *'
|       |       `-CStyleCastExpr 0x1e002cccd08 <col:18, col:26> 'void *' <NullToPointer>
|       |         `-IntegerLiteral 0x1e002ccccc8 <col:26> 'int' 0
|       |-ImplicitCastExpr 0x1e002cccf20 <line:307:29> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x1e002cccdc0 <col:29> 'int' 0
|       `-CallExpr 0x1e002cccec0 <col:33, col:56> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x1e002cccea8 <col:33> 'size_t (*)(const wchar_t *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x1e002cccde8 <col:33> 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' Function 0x1e002ccc998 'wcsnlen' 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
|         |-ImplicitCastExpr 0x1e002cccef0 <col:41> 'const wchar_t *' <LValueToRValue>
|         | `-DeclRefExpr 0x1e002ccce08 <col:41> 'const wchar_t *' lvalue ParmVar 0x1e002ccca70 '_Src' 'const wchar_t *'
|         `-ImplicitCastExpr 0x1e002cccf08 <col:47> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x1e002ccce28 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x1e002cccae8 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x1e002ccd348 <line:311:40, col:212> col:56 wcsncat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x1e002cccfa0 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1e002ccd050 <col:119, col:127> col:127 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1e002ccd0c8 <col:168, col:184> col:184 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1e002ccd140 <col:195, col:203> col:203 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1e002ccd7b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:316:86 wcsncat 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1e002ccd4f0 <col:167, col:176> col:176 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1e002ccd568 <col:207, col:224> col:224 _Source 'const wchar_t *'
| |-ParmVarDecl 0x1e002ccd5e0 <col:238, col:246> col:246 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1e002ccd868 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e002ccdc78 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:318:36> col:36 implicit wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)' extern
| |-ParmVarDecl 0x1e002ccdd18 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| |-ParmVarDecl 0x1e002ccdd80 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x1e002ccdde8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1e002ccde68 prev 0x1e002ccdc78 <col:24, col:165> col:36 wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)'
| |-ParmVarDecl 0x1e002ccd9a8 <col:71, col:87> col:87 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1e002ccda20 <col:121, col:137> col:137 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1e002ccda98 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1e002cc71a0 <line:320:40, col:209> col:56 wcsncpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x1e002ccdf48 <col:95, col:105> col:105 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1e002ccdfc0 <col:116, col:124> col:124 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1e002cc6ff0 <col:165, col:181> col:181 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1e002cc7068 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1e002cc7550 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:323:86 wcsncpy 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1e002cc7348 <col:179, col:188> col:188 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1e002cc73c0 <col:219, col:236> col:236 _Source 'const wchar_t *'
| |-ParmVarDecl 0x1e002cc7438 <col:250, col:258> col:258 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1e002cc7608 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e002cc7968 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:324:38, col:124> col:56 wcspbrk 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1e002cc7748 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1e002cc77c0 <col:100, col:116> col:116 _Control 'const wchar_t *'
|-FunctionDecl 0x1e002cc7bb0 <line:325:38, col:109> col:56 wcsrchr 'wchar_t *(const wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(const wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1e002cc7a40 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1e002cc7ab8 <col:98, col:106> col:106 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1e002cc7df8 <line:326:24, col:106> col:39 wcsspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1e002cc7c88 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1e002cc7d00 <col:82, col:98> col:98 _Control 'const wchar_t *'
|-FunctionDecl 0x1e002ccf0d0 <line:329:23, col:107> col:41 wcsstr 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1e002cc7ed0 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1e002cc7f48 <col:84, col:100> col:100 _SubStr 'const wchar_t *'
|-FunctionDecl 0x1e002ccf3d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:330:142> col:76 wcstok 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1e002ccf268 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x1e002ccf2e0 <col:120, col:136> col:136 _Delim 'const wchar_t *'
| `-DeprecatedAttr 0x1e002ccf488 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e002ccf8f0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:332:36, col:173> col:54 wcstok_s 'wchar_t *(wchar_t *, const wchar_t *, wchar_t **) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x1e002ccf5c8 <col:77, col:87> col:87 _Str 'wchar_t *'
| |-ParmVarDecl 0x1e002ccf640 <col:100, col:116> col:116 _Delim 'const wchar_t *'
| `-ParmVarDecl 0x1e002ccf720 <col:154, col:165> col:165 _Context 'wchar_t **'
|-FunctionDecl 0x1e002ccfc10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:334:105> col:79 _wcserror 'wchar_t *(int) __attribute__((cdecl))':'wchar_t *(int)'
| |-ParmVarDecl 0x1e002ccfa98 <col:94, col:98> col:98 _ErrNum 'int'
| `-DeprecatedAttr 0x1e002ccfcb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e002cc9080 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:335:28, col:147> col:44 _wcserror_s 'errno_t (wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, int)'
| |-ParmVarDecl 0x1e002ccfdf8 <col:89, col:99> col:99 _Buf 'wchar_t *'
| |-ParmVarDecl 0x1e002ccfe70 <col:110, col:117> col:117 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1e002ccfef0 <col:136, col:140> col:140 _ErrNum 'int'
|-FunctionDecl 0x1e002cc9330 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:337:122> col:80 __wcserror 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x1e002cc9258 <col:102, col:118> col:118 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x1e002cc93d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e002cc97a0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:338:28, col:165> col:44 __wcserror_s 'errno_t (wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x1e002cc9518 <col:90, col:100> col:100 _Buffer 'wchar_t *'
| |-ParmVarDecl 0x1e002cc9590 <col:114, col:121> col:121 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1e002cc9608 <col:142, col:158> col:158 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x1e002cc99f8 <line:341:24, col:103> col:36 _wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1e002cc9880 <col:52, col:68> col:68 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1e002cc98f8 <col:82, col:98> col:98 _Str2 'const wchar_t *'
|-FunctionDecl 0x1e002cc9d98 <line:342:24, col:133> col:36 _wcsicmp_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1e002cc9ad0 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1e002cc9b48 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1e002cc9bc0 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e002cd1118 <line:343:24, col:167> col:36 _wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1e002cc9e78 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1e002cc9ef0 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1e002cc9f68 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1e002cd1570 <line:344:24, col:197> col:36 _wcsnicmp_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1e002cd11f8 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1e002cd1270 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1e002cd12e8 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1e002cd1360 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e002cd19c8 <line:345:40, col:181> col:56 _wcsnset_s 'errno_t (wchar_t *, size_t, wchar_t, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t, size_t)'
| |-ParmVarDecl 0x1e002cd1658 <col:99, col:109> col:109 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1e002cd16d0 <col:120, col:127> col:127 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1e002cd1748 <col:146, col:154> col:154 _Val 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1e002cd17c0 <col:165, col:172> col:172 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1e002cd1e30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:347:86 _wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x1e002cd1b70 <col:172, col:181> col:181 _Str 'wchar_t *'
| |-ParmVarDecl 0x1e002cd1be8 <col:187, col:196> col:196 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x1e002cd1c60 <col:207, col:215> col:215 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1e002cd1ee8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e002cd8210 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:348:9, col:59> col:27 _wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| `-ParmVarDecl 0x1e002cd2028 <col:45, col:55> col:55 _Str 'wchar_t *'
|-FunctionDecl 0x1e002cd85a0 <line:349:40, col:159> col:56 _wcsset_s 'errno_t (wchar_t *, size_t, wchar_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t)'
| |-ParmVarDecl 0x1e002cd82e0 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1e002cd8358 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1e002cd83d0 <col:145, col:153> col:153 _Value 'wchar_t':'unsigned short'
|-FunctionDecl 0x1e002cd8958 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:351:85 _wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1e002cd8740 <col:150, col:159> col:159 _Str 'wchar_t *'
| |-ParmVarDecl 0x1e002cd87b8 <col:165, col:174> col:174 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x1e002cd8a08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e002cd8d68 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:353:28, col:126> col:44 _wcslwr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1e002cd8b48 <col:86, col:96> col:96 _Str 'wchar_t *'
| `-ParmVarDecl 0x1e002cd8bc0 <col:107, col:114> col:114 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1e002cd8fd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:355:82 _wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1e002cd8f00 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x1e002cd9080 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e002cd64a0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:356:28, col:156> col:44 _wcslwr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1e002cd61d8 <col:88, col:98> col:98 _Str 'wchar_t *'
| |-ParmVarDecl 0x1e002cd6250 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1e002cd62c8 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e002cd6858 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:358:85 _wcslwr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1e002cd6640 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x1e002cd66b8 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1e002cd6908 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e002cd6bb8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:359:28, col:112> col:44 _wcsupr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1e002cd6a48 <col:79, col:89> col:89 _Str 'wchar_t *'
| `-ParmVarDecl 0x1e002cd6ac0 <col:100, col:107> col:107 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1e002cd6e28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:361:82 _wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1e002cd6d50 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x1e002cd6ed0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e002cd5260 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:362:28, col:142> col:44 _wcsupr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1e002cd7010 <col:81, col:91> col:91 _Str 'wchar_t *'
| |-ParmVarDecl 0x1e002cd50d0 <col:102, col:109> col:109 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1e002cd5148 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e002cd5570 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:364:85 _wcsupr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1e002cd5400 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x1e002cd5478 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1e002cd5620 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e002cd5a20 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:365:28, col:159> col:43 wcsxfrm 'size_t (wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1e002cd5760 <col:93, col:103> col:103 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1e002cd57d8 <col:116, col:132> col:132 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1e002cd5850 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1e002cd5e68 <line:366:28, col:189> col:43 _wcsxfrm_l 'size_t (wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1e002cd5b00 <col:96, col:106> col:106 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1e002cd5b78 <col:119, col:134> col:134 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1e002cd5bf0 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1e002cd5c68 <col:172, col:182> col:182 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e002cd70f0 <line:367:24, col:102> col:36 wcscoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1e002cd5f50 <col:51, col:67> col:67 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1e002cd5fc8 <col:81, col:97> col:97 _Str2 'const wchar_t *'
|-FunctionDecl 0x1e002cd73d8 <line:368:24, col:133> col:36 _wcscoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1e002cd71c8 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1e002cd7240 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1e002cd72b8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e002cd7630 <line:369:24, col:104> col:36 _wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1e002cd74b8 <col:53, col:69> col:69 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1e002cd7530 <col:83, col:99> col:99 _Str2 'const wchar_t *'
|-FunctionDecl 0x1e002cd7918 <line:370:24, col:133> col:36 _wcsicoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1e002cd7708 <col:55, col:71> col:71 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1e002cd7780 <col:85, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1e002cd77f8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e002cd7c08 <line:371:24, col:167> col:36 _wcsncoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1e002cd79f8 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1e002cd7a70 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1e002cd7ae8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1e002cd7f90 <line:372:24, col:197> col:36 _wcsncoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1e002cd7ce8 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1e002cd7d60 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1e002cd7dd8 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1e002cd7e50 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e002cd92a8 <line:373:24, col:168> col:36 _wcsnicoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1e002cd8078 <col:74, col:90> col:90 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1e002cd9110 <col:124, col:140> col:140 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1e002cd9188 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1e002cd9630 <line:374:24, col:198> col:36 _wcsnicoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1e002cd9388 <col:76, col:92> col:92 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1e002cd9400 <col:126, col:142> col:142 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1e002cd9478 <col:154, col:161> col:161 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1e002cd94f0 <col:181, col:191> col:191 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e002cd9890 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:403:108> col:74 wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x1e002cd97b8 <col:88, col:104> col:104 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x1e002cd9938 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsdup. See online help for details." ""
|-FunctionDecl 0x1e002cd9c70 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:413:135> col:69 wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1e002cd9af8 <col:84, col:100> col:100 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1e002cd9b70 <col:114, col:130> col:130 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x1e002cd9d20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicmp. See online help for details." ""
|-FunctionDecl 0x1e002cda120 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:414:200> col:70 wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1e002cd9ee0 <col:106, col:122> col:122 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1e002cd9f58 <col:156, col:172> col:172 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1e002cd9fd0 <col:184, col:191> col:191 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1e002cda1d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnicmp. See online help for details." ""
|-FunctionDecl 0x1e002cda5a0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:415:153> col:60 wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x1e002cda398 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x1e002cda410 <col:118, col:126> col:126 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x1e002cda488 <col:137, col:144> col:144 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1e002cda658 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnset. See online help for details." ""
|-FunctionDecl 0x1e002cda8f0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:416:90> col:59 wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1e002cda818 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1e002cda998 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsrev. See online help for details." ""
|-FunctionDecl 0x1e002cdacc8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:417:104> col:59 wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1e002cdab58 <col:76, col:86> col:86 _Str 'wchar_t *'
| |-ParmVarDecl 0x1e002cdabd0 <col:92, col:100> col:100 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x1e002cdad78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsset. See online help for details." ""
|-FunctionDecl 0x1e002cdb010 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:418:90> col:59 wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1e002cdaf38 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1e002cdb0b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcslwr. See online help for details." ""
|-FunctionDecl 0x1e002cd3300 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:419:90> col:59 wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1e002cd3228 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1e002cd33a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsupr. See online help for details." ""
|-FunctionDecl 0x1e002cd36e0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:420:137> col:70 wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1e002cd3568 <col:86, col:102> col:102 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1e002cd35e0 <col:116, col:132> col:132 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x1e002cd3790 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicoll. See online help for details." ""
|-EnumDecl 0x1e002cd38a0 <.//openssl//file_jk/before\test/ssl_test_ctx.h:16:9, line:23:1> line:16:9
| |-EnumConstantDecl 0x1e002cd39c0 <line:17:5, col:24> col:5 referenced SSL_TEST_SUCCESS 'int'
| | `-ConstantExpr 0x1e002cd39a8 <col:24> 'int'
| |   `-IntegerLiteral 0x1e002cd3980 <col:24> 'int' 0
| |-EnumConstantDecl 0x1e002cd3a18 <line:18:5> col:5 referenced SSL_TEST_SERVER_FAIL 'int'
| |-EnumConstantDecl 0x1e002cd3a70 <line:19:5> col:5 referenced SSL_TEST_CLIENT_FAIL 'int'
| |-EnumConstantDecl 0x1e002cd3ac8 <line:20:5> col:5 referenced SSL_TEST_INTERNAL_ERROR 'int'
| `-EnumConstantDecl 0x1e002cd3b20 <line:22:5> col:5 referenced SSL_TEST_FIRST_HANDSHAKE_FAILED 'int'
|-TypedefDecl 0x1e002cd3bd8 <line:16:1, line:23:3> col:3 referenced ssl_test_result_t 'enum ssl_test_result_t':'ssl_test_result_t'
| `-ElaboratedType 0x1e002cd3b80 'enum ssl_test_result_t' sugar
|   `-EnumType 0x1e002cd3960 'ssl_test_result_t'
|     `-Enum 0x1e002cd38a0 ''
|-EnumDecl 0x1e002cd3c48 <line:25:9, line:29:1> line:25:9
| |-EnumConstantDecl 0x1e002cd3d60 <line:26:5, col:28> col:5 SSL_TEST_VERIFY_NONE 'int'
| | `-ConstantExpr 0x1e002cd3d48 <col:28> 'int'
| |   `-IntegerLiteral 0x1e002cd3d20 <col:28> 'int' 0
| |-EnumConstantDecl 0x1e002cd3db8 <line:27:5> col:5 referenced SSL_TEST_VERIFY_ACCEPT_ALL 'int'
| `-EnumConstantDecl 0x1e002cd3e10 <line:28:5> col:5 referenced SSL_TEST_VERIFY_REJECT_ALL 'int'
|-TypedefDecl 0x1e002cd3ec8 <line:25:1, line:29:3> col:3 referenced ssl_verify_callback_t 'enum ssl_verify_callback_t':'ssl_verify_callback_t'
| `-ElaboratedType 0x1e002cd3e70 'enum ssl_verify_callback_t' sugar
|   `-EnumType 0x1e002cd3d00 'ssl_verify_callback_t'
|     `-Enum 0x1e002cd3c48 ''
|-EnumDecl 0x1e002cd3f38 <line:31:9, line:36:1> line:31:9
| |-EnumConstantDecl 0x1e002cd4050 <line:32:5, col:32> col:5 referenced SSL_TEST_SERVERNAME_NONE 'int'
| | `-ConstantExpr 0x1e002cd4038 <col:32> 'int'
| |   `-IntegerLiteral 0x1e002cd4010 <col:32> 'int' 0
| |-EnumConstantDecl 0x1e002cd40c0 <line:33:5> col:5 referenced SSL_TEST_SERVERNAME_SERVER1 'int'
| |-EnumConstantDecl 0x1e002cd4118 <line:34:5> col:5 referenced SSL_TEST_SERVERNAME_SERVER2 'int'
| `-EnumConstantDecl 0x1e002cd4170 <line:35:5> col:5 SSL_TEST_SERVERNAME_INVALID 'int'
|-TypedefDecl 0x1e002cd4228 <line:31:1, line:36:3> col:3 referenced ssl_servername_t 'enum ssl_servername_t':'ssl_servername_t'
| `-ElaboratedType 0x1e002cd41d0 'enum ssl_servername_t' sugar
|   `-EnumType 0x1e002cd3ff0 'ssl_servername_t'
|     `-Enum 0x1e002cd3f38 ''
|-EnumDecl 0x1e002cd4298 <line:38:9, line:42:1> line:38:9
| |-EnumConstantDecl 0x1e002cd43b0 <line:39:5, col:35> col:5 SSL_TEST_SERVERNAME_CB_NONE 'int'
| | `-ConstantExpr 0x1e002cd4398 <col:35> 'int'
| |   `-IntegerLiteral 0x1e002cd4370 <col:35> 'int' 0
| |-EnumConstantDecl 0x1e002cd4408 <line:40:5> col:5 referenced SSL_TEST_SERVERNAME_IGNORE_MISMATCH 'int'
| `-EnumConstantDecl 0x1e002cd4460 <line:41:5> col:5 referenced SSL_TEST_SERVERNAME_REJECT_MISMATCH 'int'
|-TypedefDecl 0x1e002cd4518 <line:38:1, line:42:3> col:3 referenced ssl_servername_callback_t 'enum ssl_servername_callback_t':'ssl_servername_callback_t'
| `-ElaboratedType 0x1e002cd44c0 'enum ssl_servername_callback_t' sugar
|   `-EnumType 0x1e002cd4350 'ssl_servername_callback_t'
|     `-Enum 0x1e002cd4298 ''
|-EnumDecl 0x1e002cd4588 <line:44:9, line:49:1> line:44:9
| |-EnumConstantDecl 0x1e002cd46a0 <line:45:5, col:38> col:5 SSL_TEST_SESSION_TICKET_IGNORE 'int'
| | `-ConstantExpr 0x1e002cd4688 <col:38> 'int'
| |   `-IntegerLiteral 0x1e002cd4660 <col:38> 'int' 0
| |-EnumConstantDecl 0x1e002cd46f8 <line:46:5> col:5 referenced SSL_TEST_SESSION_TICKET_YES 'int'
| |-EnumConstantDecl 0x1e002cd4750 <line:47:5> col:5 referenced SSL_TEST_SESSION_TICKET_NO 'int'
| `-EnumConstantDecl 0x1e002cd47a8 <line:48:5> col:5 SSL_TEST_SESSION_TICKET_BROKEN 'int'
|-TypedefDecl 0x1e002cd4858 <line:44:1, line:49:3> col:3 referenced ssl_session_ticket_t 'enum ssl_session_ticket_t':'ssl_session_ticket_t'
| `-ElaboratedType 0x1e002cd4800 'enum ssl_session_ticket_t' sugar
|   `-EnumType 0x1e002cd4640 'ssl_session_ticket_t'
|     `-Enum 0x1e002cd4588 ''
|-EnumDecl 0x1e002cd48c8 <line:51:9, line:54:1> line:51:9
| |-EnumConstantDecl 0x1e002cd49e0 <line:52:5, col:27> col:5 SSL_TEST_METHOD_TLS 'int'
| | `-ConstantExpr 0x1e002cd49c8 <col:27> 'int'
| |   `-IntegerLiteral 0x1e002cd49a0 <col:27> 'int' 0
| `-EnumConstantDecl 0x1e002cd4a38 <line:53:5> col:5 SSL_TEST_METHOD_DTLS 'int'
|-TypedefDecl 0x1e002cd4ae8 <line:51:1, line:54:3> col:3 referenced ssl_test_method_t 'enum ssl_test_method_t':'ssl_test_method_t'
| `-ElaboratedType 0x1e002cd4a90 'enum ssl_test_method_t' sugar
|   `-EnumType 0x1e002cd4980 'ssl_test_method_t'
|     `-Enum 0x1e002cd48c8 ''
|-EnumDecl 0x1e002cd4b58 <line:56:9, line:61:1> line:56:9
| |-EnumConstantDecl 0x1e002cd4c70 <line:57:5, col:33> col:5 SSL_TEST_HANDSHAKE_SIMPLE 'int'
| | `-ConstantExpr 0x1e002cd4c58 <col:33> 'int'
| |   `-IntegerLiteral 0x1e002cd4c30 <col:33> 'int' 0
| |-EnumConstantDecl 0x1e002cd4cc8 <line:58:5> col:5 referenced SSL_TEST_HANDSHAKE_RESUME 'int'
| |-EnumConstantDecl 0x1e002cd4d20 <line:59:5> col:5 referenced SSL_TEST_HANDSHAKE_RENEG_SERVER 'int'
| `-EnumConstantDecl 0x1e002cd4d78 <line:60:5> col:5 referenced SSL_TEST_HANDSHAKE_RENEG_CLIENT 'int'
|-TypedefDecl 0x1e002cd4e28 <line:56:1, line:61:3> col:3 referenced ssl_handshake_mode_t 'enum ssl_handshake_mode_t':'ssl_handshake_mode_t'
| `-ElaboratedType 0x1e002cd4dd0 'enum ssl_handshake_mode_t' sugar
|   `-EnumType 0x1e002cd4c10 'ssl_handshake_mode_t'
|     `-Enum 0x1e002cd4b58 ''
|-EnumDecl 0x1e002cd4e98 <line:63:9, line:67:1> line:63:9
| |-EnumConstantDecl 0x1e002cd4fb0 <line:64:5, col:35> col:5 referenced SSL_TEST_CT_VALIDATION_NONE 'int'
| | `-ConstantExpr 0x1e002cd4f98 <col:35> 'int'
| |   `-IntegerLiteral 0x1e002cd4f70 <col:35> 'int' 0
| |-EnumConstantDecl 0x1e002cd5008 <line:65:5> col:5 referenced SSL_TEST_CT_VALIDATION_PERMISSIVE 'int'
| `-EnumConstantDecl 0x1e002cd5060 <line:66:5> col:5 referenced SSL_TEST_CT_VALIDATION_STRICT 'int'
|-TypedefDecl 0x1e002ce11e8 <line:63:1, line:67:3> col:3 referenced ssl_ct_validation_t 'enum ssl_ct_validation_t':'ssl_ct_validation_t'
| `-ElaboratedType 0x1e002ce1190 'enum ssl_ct_validation_t' sugar
|   `-EnumType 0x1e002cd4f50 'ssl_ct_validation_t'
|     `-Enum 0x1e002cd4e98 ''
|-EnumDecl 0x1e002ce1258 <line:69:9, line:73:1> line:69:9
| |-EnumConstantDecl 0x1e002ce1370 <line:70:5, col:33> col:5 referenced SSL_TEST_CERT_STATUS_NONE 'int'
| | `-ConstantExpr 0x1e002ce1358 <col:33> 'int'
| |   `-IntegerLiteral 0x1e002ce1330 <col:33> 'int' 0
| |-EnumConstantDecl 0x1e002ce13c8 <line:71:5> col:5 referenced SSL_TEST_CERT_STATUS_GOOD_RESPONSE 'int'
| `-EnumConstantDecl 0x1e002ce1420 <line:72:5> col:5 SSL_TEST_CERT_STATUS_BAD_RESPONSE 'int'
|-TypedefDecl 0x1e002ce14d8 <line:69:1, line:73:3> col:3 referenced ssl_cert_status_t 'enum ssl_cert_status_t':'ssl_cert_status_t'
| `-ElaboratedType 0x1e002ce1480 'enum ssl_cert_status_t' sugar
|   `-EnumType 0x1e002ce1310 'ssl_cert_status_t'
|     `-Enum 0x1e002ce1258 ''
|-RecordDecl 0x1e002ce1548 <line:78:9, line:89:1> line:78:9 struct definition
| |-FieldDecl 0x1e002ce1630 <line:80:5, col:27> col:27 referenced verify_callback 'ssl_verify_callback_t':'ssl_verify_callback_t'
| |-FieldDecl 0x1e002ce16c0 <line:82:5, col:22> col:22 referenced servername 'ssl_servername_t':'ssl_servername_t'
| |-FieldDecl 0x1e002ce1730 <line:84:5, col:11> col:11 referenced npn_protocols 'char *'
| |-FieldDecl 0x1e002ce17a0 <line:85:5, col:11> col:11 referenced alpn_protocols 'char *'
| |-FieldDecl 0x1e002ce1830 <line:86:5, col:25> col:25 referenced ct_validation 'ssl_ct_validation_t':'ssl_ct_validation_t'
| `-FieldDecl 0x1e002ce18a0 <line:88:5, col:11> col:11 referenced reneg_ciphers 'char *'
|-TypedefDecl 0x1e002ce1958 <line:78:1, line:89:3> col:3 referenced SSL_TEST_CLIENT_CONF 'struct SSL_TEST_CLIENT_CONF':'SSL_TEST_CLIENT_CONF'
| `-ElaboratedType 0x1e002ce1900 'struct SSL_TEST_CLIENT_CONF' sugar
|   `-RecordType 0x1e002ce15e0 'SSL_TEST_CLIENT_CONF'
|     `-Record 0x1e002ce1548 ''
|-RecordDecl 0x1e002ce19c8 <line:91:9, line:101:1> line:91:9 struct definition
| |-FieldDecl 0x1e002ce1ab0 <line:93:5, col:31> col:31 referenced servername_callback 'ssl_servername_callback_t':'ssl_servername_callback_t'
| |-FieldDecl 0x1e002ce1b20 <line:95:5, col:11> col:11 referenced npn_protocols 'char *'
| |-FieldDecl 0x1e002ce1b90 <line:96:5, col:11> col:11 referenced alpn_protocols 'char *'
| |-FieldDecl 0x1e002ce1c00 <line:98:5, col:9> col:9 referenced broken_session_ticket 'int'
| `-FieldDecl 0x1e002ce1c90 <line:100:5, col:23> col:23 referenced cert_status 'ssl_cert_status_t':'ssl_cert_status_t'
|-TypedefDecl 0x1e002ce1d48 <line:91:1, line:101:3> col:3 referenced SSL_TEST_SERVER_CONF 'struct SSL_TEST_SERVER_CONF':'SSL_TEST_SERVER_CONF'
| `-ElaboratedType 0x1e002ce1cf0 'struct SSL_TEST_SERVER_CONF' sugar
|   `-RecordType 0x1e002ce1a60 'SSL_TEST_SERVER_CONF'
|     `-Record 0x1e002ce19c8 ''
|-RecordDecl 0x1e002ce1db8 <line:103:9, line:107:1> line:103:9 struct definition
| |-FieldDecl 0x1e002ce1ea0 <line:104:5, col:26> col:26 referenced client 'SSL_TEST_CLIENT_CONF':'SSL_TEST_CLIENT_CONF'
| |-FieldDecl 0x1e002ce1f30 <line:105:5, col:26> col:26 referenced server 'SSL_TEST_SERVER_CONF':'SSL_TEST_SERVER_CONF'
| `-FieldDecl 0x1e002ce1f98 <line:106:5, col:26> col:26 referenced server2 'SSL_TEST_SERVER_CONF':'SSL_TEST_SERVER_CONF'
|-TypedefDecl 0x1e002ce20c8 <line:103:1, line:107:3> col:3 referenced SSL_TEST_EXTRA_CONF 'struct SSL_TEST_EXTRA_CONF':'SSL_TEST_EXTRA_CONF'
| `-ElaboratedType 0x1e002ce2070 'struct SSL_TEST_EXTRA_CONF' sugar
|   `-RecordType 0x1e002ce1e50 'SSL_TEST_EXTRA_CONF'
|     `-Record 0x1e002ce1db8 ''
|-RecordDecl 0x1e002cdc140 <line:109:9, line:166:1> line:109:9 struct definition
| |-FieldDecl 0x1e002cdc230 <line:114:5, col:23> col:23 method 'ssl_test_method_t':'ssl_test_method_t'
| |-FieldDecl 0x1e002cdc2c0 <line:116:5, col:26> col:26 referenced handshake_mode 'ssl_handshake_mode_t':'ssl_handshake_mode_t'
| |-FieldDecl 0x1e002cdc330 <line:121:5, col:9> col:9 referenced app_data_size 'int'
| |-FieldDecl 0x1e002cdc3a0 <line:123:5, col:9> col:9 referenced max_fragment_size 'int'
| |-FieldDecl 0x1e002cdc430 <line:129:5, col:25> col:25 referenced extra 'SSL_TEST_EXTRA_CONF':'SSL_TEST_EXTRA_CONF'
| |-FieldDecl 0x1e002cdc498 <line:131:5, col:25> col:25 referenced resume_extra 'SSL_TEST_EXTRA_CONF':'SSL_TEST_EXTRA_CONF'
| |-FieldDecl 0x1e002cdc520 <line:137:5, col:23> col:23 expected_result 'ssl_test_result_t':'ssl_test_result_t'
| |-FieldDecl 0x1e002cdc590 <line:141:5, col:9> col:9 expected_client_alert 'int'
| |-FieldDecl 0x1e002cdc600 <line:143:5, col:9> col:9 expected_server_alert 'int'
| |-FieldDecl 0x1e002cdc670 <line:146:5, col:9> col:9 expected_protocol 'int'
| |-FieldDecl 0x1e002cdc6d8 <line:157:5, col:22> col:22 expected_servername 'ssl_servername_t':'ssl_servername_t'
| |-FieldDecl 0x1e002cdc760 <line:158:5, col:26> col:26 session_ticket_expected 'ssl_session_ticket_t':'ssl_session_ticket_t'
| |-FieldDecl 0x1e002cdc7d0 <line:160:5, col:11> col:11 expected_npn_protocol 'char *'
| |-FieldDecl 0x1e002cdc840 <line:161:5, col:11> col:11 expected_alpn_protocol 'char *'
| |-FieldDecl 0x1e002cdc8b0 <line:163:5, col:9> col:9 resumption_expected 'int'
| `-FieldDecl 0x1e002cdc920 <line:165:5, col:9> col:9 expected_tmp_key_type 'int'
|-TypedefDecl 0x1e002cdc9d8 <line:109:1, line:166:3> col:3 referenced SSL_TEST_CTX 'struct SSL_TEST_CTX':'SSL_TEST_CTX'
| `-ElaboratedType 0x1e002cdc980 'struct SSL_TEST_CTX' sugar
|   `-RecordType 0x1e002cdc1e0 'SSL_TEST_CTX'
|     `-Record 0x1e002cdc140 ''
|-FunctionDecl 0x1e002cdcb70 <line:168:1, col:58> col:13 ssl_test_result_name 'const char *(ssl_test_result_t)'
| `-ParmVarDecl 0x1e002cdca58 <col:34, col:52> col:52 result 'ssl_test_result_t':'ssl_test_result_t'
|-FunctionDecl 0x1e002cdcd30 <line:169:1, col:37> col:13 ssl_alert_name 'const char *(int)'
| `-ParmVarDecl 0x1e002cdcc48 <col:28, col:32> col:32 alert 'int'
|-FunctionDecl 0x1e002cdceb8 <line:170:1, col:43> col:13 ssl_protocol_name 'const char *(int)'
| `-ParmVarDecl 0x1e002cdce08 <col:31, col:35> col:35 protocol 'int'
|-FunctionDecl 0x1e002cdd0a0 <line:171:1, col:75> col:13 ssl_verify_callback_name 'const char *(ssl_verify_callback_t)'
| `-ParmVarDecl 0x1e002cdcf88 <col:38, col:60> col:60 verify_callback 'ssl_verify_callback_t':'ssl_verify_callback_t'
|-FunctionDecl 0x1e002cdd290 <line:172:1, col:56> col:13 used ssl_servername_name 'const char *(ssl_servername_t)'
| `-ParmVarDecl 0x1e002cdd180 <col:33, col:50> col:50 server 'ssl_servername_t':'ssl_servername_t'
|-FunctionDecl 0x1e002cdd470 <line:173:1, line:174:61> line:173:13 ssl_servername_callback_name 'const char *(ssl_servername_callback_t)'
| `-ParmVarDecl 0x1e002cdd360 <col:42, line:174:42> col:42 servername_callback 'ssl_servername_callback_t':'ssl_servername_callback_t'
|-FunctionDecl 0x1e002cdd650 <line:175:1, col:64> col:13 ssl_session_ticket_name 'const char *(ssl_session_ticket_t)'
| `-ParmVarDecl 0x1e002cdd540 <col:37, col:58> col:58 server 'ssl_session_ticket_t':'ssl_session_ticket_t'
|-FunctionDecl 0x1e002cdd830 <line:176:1, col:58> col:13 ssl_test_method_name 'const char *(ssl_test_method_t)'
| `-ParmVarDecl 0x1e002cdd720 <col:34, col:52> col:52 method 'ssl_test_method_t':'ssl_test_method_t'
|-FunctionDecl 0x1e002cdda10 <line:177:1, col:62> col:13 ssl_handshake_mode_name 'const char *(ssl_handshake_mode_t)'
| `-ParmVarDecl 0x1e002cdd900 <col:37, col:58> col:58 mode 'ssl_handshake_mode_t':'ssl_handshake_mode_t'
|-FunctionDecl 0x1e002cddbf0 <line:178:1, col:60> col:13 ssl_ct_validation_name 'const char *(ssl_ct_validation_t)'
| `-ParmVarDecl 0x1e002cddae0 <col:36, col:56> col:56 mode 'ssl_ct_validation_t':'ssl_ct_validation_t'
|-FunctionDecl 0x1e002cdddd0 <line:179:1, col:62> col:13 ssl_certstatus_name 'const char *(ssl_cert_status_t)'
| `-ParmVarDecl 0x1e002cddcc0 <col:33, col:51> col:51 cert_status 'ssl_cert_status_t':'ssl_cert_status_t'
|-FunctionDecl 0x1e002cde160 <line:185:1, col:77> col:15 invalid SSL_TEST_CTX_create 'SSL_TEST_CTX *(const int *, const char *)'
| |-ParmVarDecl 0x1e002cddec8 <col:35, col:47> col:47 invalid conf 'const int *'
| `-ParmVarDecl 0x1e002cddf48 <col:53, col:65> col:65 test_section 'const char *'
|-FunctionDecl 0x1e002cde308 <line:187:1, col:36> col:15 SSL_TEST_CTX_new 'SSL_TEST_CTX *(void)'
|-FunctionDecl 0x1e002cde4d8 <line:189:1, col:41> col:6 SSL_TEST_CTX_free 'void (SSL_TEST_CTX *)'
| `-ParmVarDecl 0x1e002cde3d0 <col:24, col:38> col:38 ctx 'SSL_TEST_CTX *'
|-RecordDecl 0x1e002cde598 <.//openssl//file_jk/before\test/handshake_helper.h:15:9, line:48:1> line:15:16 struct handshake_result definition
| |-FieldDecl 0x1e002cde660 <line:16:5, col:23> col:23 referenced result 'ssl_test_result_t':'ssl_test_result_t'
| |-FieldDecl 0x1e002cde6d0 <line:19:5, col:9> col:9 referenced client_alert_sent 'int'
| |-FieldDecl 0x1e002cde740 <line:21:5, col:9> col:9 referenced client_num_fatal_alerts_sent 'int'
| |-FieldDecl 0x1e002cde7b0 <line:23:5, col:9> col:9 referenced client_alert_received 'int'
| |-FieldDecl 0x1e002cde820 <line:25:5, col:9> col:9 referenced server_alert_sent 'int'
| |-FieldDecl 0x1e002cde890 <line:27:5, col:9> col:9 referenced server_num_fatal_alerts_sent 'int'
| |-FieldDecl 0x1e002cde900 <line:29:5, col:9> col:9 referenced server_alert_received 'int'
| |-FieldDecl 0x1e002cde970 <line:31:5, col:9> col:9 referenced server_protocol 'int'
| |-FieldDecl 0x1e002cde9e0 <line:32:5, col:9> col:9 referenced client_protocol 'int'
| |-FieldDecl 0x1e002cdea48 <line:34:5, col:22> col:22 referenced servername 'ssl_servername_t':'ssl_servername_t'
| |-FieldDecl 0x1e002cdeab0 <line:36:5, col:26> col:26 referenced session_ticket 'ssl_session_ticket_t':'ssl_session_ticket_t'
| |-FieldDecl 0x1e002cdeb20 <line:38:5, col:9> col:9 referenced session_ticket_do_not_call 'int'
| |-FieldDecl 0x1e002cdeb90 <line:39:5, col:11> col:11 referenced client_npn_negotiated 'char *'
| |-FieldDecl 0x1e002cdec00 <line:40:5, col:11> col:11 referenced server_npn_negotiated 'char *'
| |-FieldDecl 0x1e002cdec70 <line:41:5, col:11> col:11 referenced client_alpn_negotiated 'char *'
| |-FieldDecl 0x1e002cdece0 <line:42:5, col:11> col:11 referenced server_alpn_negotiated 'char *'
| |-FieldDecl 0x1e002cded50 <line:44:5, col:9> col:9 referenced client_resumed 'int'
| |-FieldDecl 0x1e002cdedc0 <line:45:5, col:9> col:9 referenced server_resumed 'int'
| `-FieldDecl 0x1e002cdee30 <line:47:5, col:9> col:9 referenced tmp_key_type 'int'
|-TypedefDecl 0x1e002cdeee8 <line:15:1, line:48:3> col:3 referenced HANDSHAKE_RESULT 'struct handshake_result':'struct handshake_result'
| `-ElaboratedType 0x1e002cdee90 'struct handshake_result' sugar
|   `-RecordType 0x1e002cde630 'struct handshake_result'
|     `-Record 0x1e002cde598 'handshake_result'
|-FunctionDecl 0x1e002c89bb0 <line:50:1, col:44> col:19 used HANDSHAKE_RESULT_new 'HANDSHAKE_RESULT *(void)'
|-FunctionDecl 0x1e002c89d88 <line:51:1, col:52> col:6 used HANDSHAKE_RESULT_free 'void (HANDSHAKE_RESULT *)'
| `-ParmVarDecl 0x1e002c89c78 <col:28, col:46> col:46 result 'HANDSHAKE_RESULT *'
|-FunctionDecl 0x1e002c8a2a8 <line:54:1, line:57:60> line:54:19 invalid do_handshake 'HANDSHAKE_RESULT *(int *, int *, int *, int *, int *, const SSL_TEST_CTX *)'
| |-ParmVarDecl 0x1e002c89e60 <col:32, col:41> col:41 invalid server_ctx 'int *'
| |-ParmVarDecl 0x1e002c89ee0 <col:53, col:62> col:62 invalid server2_ctx 'int *'
| |-ParmVarDecl 0x1e002c89f60 <line:55:32, col:41> col:41 invalid client_ctx 'int *'
| |-ParmVarDecl 0x1e002c89fe0 <col:53, col:62> col:62 invalid resume_server_ctx 'int *'
| |-ParmVarDecl 0x1e002c8a060 <line:56:32, col:41> col:41 invalid resume_client_ctx 'int *'
| `-ParmVarDecl 0x1e002c8a138 <line:57:32, col:52> col:52 test_ctx 'const SSL_TEST_CTX *'
|-FunctionDecl 0x1e002c8a638 <.//openssl//file_jk/before\test/testutil.h:85:1, col:60> col:6 add_test 'void (const char *, int (*)())'
| |-ParmVarDecl 0x1e002c8a390 <col:15, col:27> col:27 test_case_name 'const char *'
| `-ParmVarDecl 0x1e002c8a4f0 <col:43, col:59> col:49 test_fn 'int (*)()'
|-FunctionDecl 0x1e002c8ab08 <line:86:1, col:80> col:6 add_all_tests 'void (const char *, int (*)(int), int)'
| |-ParmVarDecl 0x1e002c8a718 <col:20, col:32> col:32 test_case_name 'const char *'
| |-ParmVarDecl 0x1e002c8a918 <col:48, col:70> col:54 test_fn 'int (*)(int)'
| `-ParmVarDecl 0x1e002c8a998 <col:73, col:77> col:77 num 'int'
|-FunctionDecl 0x1e002c82c70 <line:87:1, col:41> col:5 run_tests 'int (const char *)'
| `-ParmVarDecl 0x1e002c82b88 <col:15, col:27> col:27 test_prog_name 'const char *'
|-FunctionDecl 0x1e002c82f80 <line:97:1, col:67> col:5 strings_equal 'int (const char *, const char *, const char *)'
| |-ParmVarDecl 0x1e002c82d48 <col:19, col:31> col:31 desc 'const char *'
| |-ParmVarDecl 0x1e002c82dc8 <col:37, col:49> col:49 s1 'const char *'
| `-ParmVarDecl 0x1e002c82e48 <col:53, col:65> col:65 s2 'const char *'
|-FunctionDecl 0x1e002c830c8 prev 0x1e002c89bb0 <.//openssl//file_jk/before\test\handshake_helper.c:19:1, line:24:1> line:19:19 used HANDSHAKE_RESULT_new 'HANDSHAKE_RESULT *(void)'
| `-CompoundStmt 0x1e002c83910 <line:20:1, line:24:1>
|   |-DeclStmt 0x1e002c833d8 <line:21:5, col:57>
|   | `-VarDecl 0x1e002c83178 <col:5, col:56> col:23 used ret 'HANDSHAKE_RESULT *' cinit
|   |   `-ImplicitCastExpr 0x1e002c833c0 <col:29, col:56> 'HANDSHAKE_RESULT *' <IntegralToPointer>
|   |     `-CallExpr 0x1e002c83398 <col:29, col:56> 'int'
|   |       |-ImplicitCastExpr 0x1e002c83380 <col:29> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x1e002c832d0 <col:29> 'int ()' Function 0x1e002c83208 'OPENSSL_zalloc' 'int ()'
|   |       `-UnaryExprOrTypeTraitExpr 0x1e002c83360 <col:44, col:55> 'unsigned long long' sizeof
|   |         `-ParenExpr 0x1e002c83340 <col:50, col:55> 'HANDSHAKE_RESULT':'struct handshake_result' lvalue
|   |           `-UnaryOperator 0x1e002c83328 <col:51, col:52> 'HANDSHAKE_RESULT':'struct handshake_result' lvalue prefix '*' cannot overflow
|   |             `-ImplicitCastExpr 0x1e002c83310 <col:52> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   |               `-DeclRefExpr 0x1e002c832f0 <col:52> 'HANDSHAKE_RESULT *' lvalue Var 0x1e002c83178 'ret' 'HANDSHAKE_RESULT *' non_odr_use_unevaluated
|   |-DoStmt 0x1e002c838a0 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x1e002c83860 <line:106:8, line:111:5>
|   | | `-IfStmt 0x1e002c83848 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x1e002c83520 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x1e002c83500 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x1e002c834e0 <.//openssl//file_jk/before\test\handshake_helper.c:22:16, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | |   |     |-ImplicitCastExpr 0x1e002c834b0 <.//openssl//file_jk/before\test\handshake_helper.c:22:16> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   | |   |     | `-DeclRefExpr 0x1e002c833f0 <col:16> 'HANDSHAKE_RESULT *' lvalue Var 0x1e002c83178 'ret' 'HANDSHAKE_RESULT *'
|   | |   |     `-ImplicitCastExpr 0x1e002c834c8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'HANDSHAKE_RESULT *' <BitCast>
|   | |   |       `-ParenExpr 0x1e002c83490 <col:17, col:27> 'void *'
|   | |   |         `-CStyleCastExpr 0x1e002c83468 <col:18, col:26> 'void *' <NullToPointer>
|   | |   |           `-IntegerLiteral 0x1e002c83428 <col:26> 'int' 0
|   | |   `-CompoundStmt 0x1e002c83830 <.//openssl//file_jk/before\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x1e002c83808 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x1e002c837f0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x1e002c83738 <col:13> 'int ()' Function 0x1e002c83670 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x1e002c837d8 <col:28, <scratch space>:294:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x1e002c837c0 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x1e002c83798 <col:1> 'char [12]' lvalue "ret != NULL"
|   | `-IntegerLiteral 0x1e002c83878 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x1e002c838c0 <.//openssl//file_jk/before\test\handshake_helper.c:22:28>
|   `-ReturnStmt 0x1e002c83900 <line:23:5, col:12>
|     `-ImplicitCastExpr 0x1e002c838e8 <col:12> 'HANDSHAKE_RESULT *' <LValueToRValue>
|       `-DeclRefExpr 0x1e002c838c8 <col:12> 'HANDSHAKE_RESULT *' lvalue Var 0x1e002c83178 'ret' 'HANDSHAKE_RESULT *'
|-FunctionDecl 0x1e002c839f8 prev 0x1e002c89d88 <line:26:1, line:35:1> line:26:6 used HANDSHAKE_RESULT_free 'void (HANDSHAKE_RESULT *)'
| |-ParmVarDecl 0x1e002c83950 <col:28, col:46> col:46 used result 'HANDSHAKE_RESULT *'
| `-CompoundStmt 0x1e002c89140 <line:27:1, line:35:1>
|   |-IfStmt 0x1e002c88c20 <line:28:5, line:29:9>
|   | |-BinaryOperator 0x1e002c88bf0 <line:28:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x1e002c88bc0 <.//openssl//file_jk/before\test\handshake_helper.c:28:9> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1e002c83aa0 <col:9> 'HANDSHAKE_RESULT *' lvalue ParmVar 0x1e002c83950 'result' 'HANDSHAKE_RESULT *'
|   | | `-ImplicitCastExpr 0x1e002c88bd8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'HANDSHAKE_RESULT *' <BitCast>
|   | |   `-ParenExpr 0x1e002c88ba0 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1e002c83b00 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1e002c83ac0 <col:26> 'int' 0
|   | `-ReturnStmt 0x1e002c88c10 <.//openssl//file_jk/before\test\handshake_helper.c:29:9>
|   |-CallExpr 0x1e002c88dc8 <line:30:5, col:47> 'int'
|   | |-ImplicitCastExpr 0x1e002c88db0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1e002c88d28 <col:5> 'int ()' Function 0x1e002c88c60 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x1e002c88df0 <col:18, col:26> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x1e002c88d80 <col:18, col:26> 'char *' lvalue ->client_npn_negotiated 0x1e002cdeb90
|   |     `-ImplicitCastExpr 0x1e002c88d68 <col:18> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1e002c88d48 <col:18> 'HANDSHAKE_RESULT *' lvalue ParmVar 0x1e002c83950 'result' 'HANDSHAKE_RESULT *'
|   |-CallExpr 0x1e002c88ea8 <line:31:5, col:47> 'int'
|   | |-ImplicitCastExpr 0x1e002c88e90 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1e002c88e08 <col:5> 'int ()' Function 0x1e002c88c60 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x1e002c88ed0 <col:18, col:26> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x1e002c88e60 <col:18, col:26> 'char *' lvalue ->server_npn_negotiated 0x1e002cdec00
|   |     `-ImplicitCastExpr 0x1e002c88e48 <col:18> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1e002c88e28 <col:18> 'HANDSHAKE_RESULT *' lvalue ParmVar 0x1e002c83950 'result' 'HANDSHAKE_RESULT *'
|   |-CallExpr 0x1e002c88f88 <line:32:5, col:48> 'int'
|   | |-ImplicitCastExpr 0x1e002c88f70 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1e002c88ee8 <col:5> 'int ()' Function 0x1e002c88c60 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x1e002c88fb0 <col:18, col:26> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x1e002c88f40 <col:18, col:26> 'char *' lvalue ->client_alpn_negotiated 0x1e002cdec70
|   |     `-ImplicitCastExpr 0x1e002c88f28 <col:18> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1e002c88f08 <col:18> 'HANDSHAKE_RESULT *' lvalue ParmVar 0x1e002c83950 'result' 'HANDSHAKE_RESULT *'
|   |-CallExpr 0x1e002c89068 <line:33:5, col:48> 'int'
|   | |-ImplicitCastExpr 0x1e002c89050 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1e002c88fc8 <col:5> 'int ()' Function 0x1e002c88c60 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x1e002c89090 <col:18, col:26> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x1e002c89020 <col:18, col:26> 'char *' lvalue ->server_alpn_negotiated 0x1e002cdece0
|   |     `-ImplicitCastExpr 0x1e002c89008 <col:18> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1e002c88fe8 <col:18> 'HANDSHAKE_RESULT *' lvalue ParmVar 0x1e002c83950 'result' 'HANDSHAKE_RESULT *'
|   `-CallExpr 0x1e002c89100 <line:34:5, col:24> 'int'
|     |-ImplicitCastExpr 0x1e002c890e8 <col:5> 'int (*)()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x1e002c890a8 <col:5> 'int ()' Function 0x1e002c88c60 'OPENSSL_free' 'int ()'
|     `-ImplicitCastExpr 0x1e002c89128 <col:18> 'HANDSHAKE_RESULT *' <LValueToRValue>
|       `-DeclRefExpr 0x1e002c890c8 <col:18> 'HANDSHAKE_RESULT *' lvalue ParmVar 0x1e002c83950 'result' 'HANDSHAKE_RESULT *'
|-RecordDecl 0x1e002c89180 <line:42:9, line:48:1> line:42:16 struct handshake_ex_data_st definition
| |-FieldDecl 0x1e002c89258 <line:43:5, col:9> col:9 referenced alert_sent 'int'
| |-FieldDecl 0x1e002c892c8 <line:44:5, col:9> col:9 referenced num_fatal_alerts_sent 'int'
| |-FieldDecl 0x1e002c89338 <line:45:5, col:9> col:9 referenced alert_received 'int'
| |-FieldDecl 0x1e002c893a8 <line:46:5, col:9> col:9 referenced session_ticket_do_not_call 'int'
| `-FieldDecl 0x1e002c89410 <line:47:5, col:22> col:22 referenced servername 'ssl_servername_t':'ssl_servername_t'
|-TypedefDecl 0x1e002c894c8 <line:42:1, line:48:3> col:3 referenced HANDSHAKE_EX_DATA 'struct handshake_ex_data_st':'struct handshake_ex_data_st'
| `-ElaboratedType 0x1e002c89470 'struct handshake_ex_data_st' sugar
|   `-RecordType 0x1e002c89220 'struct handshake_ex_data_st'
|     `-Record 0x1e002c89180 'handshake_ex_data_st'
|-RecordDecl 0x1e002c89538 <line:50:9, line:55:1> line:50:16 struct ctx_data_st definition
| |-FieldDecl 0x1e002c89630 <line:51:5, col:20> col:20 referenced npn_protocols 'unsigned char *'
| |-FieldDecl 0x1e002c89698 <line:52:5, col:12> col:12 referenced npn_protocols_len 'size_t':'unsigned long long'
| |-FieldDecl 0x1e002c89708 <line:53:5, col:20> col:20 referenced alpn_protocols 'unsigned char *'
| `-FieldDecl 0x1e002c89770 <line:54:5, col:12> col:12 referenced alpn_protocols_len 'size_t':'unsigned long long'
|-TypedefDecl 0x1e002c89828 <line:50:1, line:55:3> col:3 referenced CTX_DATA 'struct ctx_data_st':'struct ctx_data_st'
| `-ElaboratedType 0x1e002c897d0 'struct ctx_data_st' sugar
|   `-RecordType 0x1e002c895d0 'struct ctx_data_st'
|     `-Record 0x1e002c89538 'ctx_data_st'
|-FunctionDecl 0x1e002c89a38 <line:58:1, line:64:1> line:58:13 used ctx_data_free_data 'void (CTX_DATA *)' static
| |-ParmVarDecl 0x1e002c89928 <col:32, col:42> col:42 used ctx_data 'CTX_DATA *'
| `-CompoundStmt 0x1e002c8af30 <line:59:1, line:64:1>
|   |-CallExpr 0x1e002c8abc0 <line:60:5, col:41> 'int'
|   | |-ImplicitCastExpr 0x1e002c89b80 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1e002c89af8 <col:5> 'int ()' Function 0x1e002c88c60 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x1e002c8abe8 <col:18, col:28> 'unsigned char *' <LValueToRValue>
|   |   `-MemberExpr 0x1e002c89b50 <col:18, col:28> 'unsigned char *' lvalue ->npn_protocols 0x1e002c89630
|   |     `-ImplicitCastExpr 0x1e002c89b38 <col:18> 'CTX_DATA *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1e002c89b18 <col:18> 'CTX_DATA *' lvalue ParmVar 0x1e002c89928 'ctx_data' 'CTX_DATA *'
|   |-BinaryOperator 0x1e002c8ad08 <line:61:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'unsigned char *' '='
|   | |-MemberExpr 0x1e002c8ac38 <.//openssl//file_jk/before\test\handshake_helper.c:61:5, col:15> 'unsigned char *' lvalue ->npn_protocols 0x1e002c89630
|   | | `-ImplicitCastExpr 0x1e002c8ac20 <col:5> 'CTX_DATA *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1e002c8ac00 <col:5> 'CTX_DATA *' lvalue ParmVar 0x1e002c89928 'ctx_data' 'CTX_DATA *'
|   | `-ImplicitCastExpr 0x1e002c8acf0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'unsigned char *' <NullToPointer>
|   |   `-ParenExpr 0x1e002c8acd0 <col:17, col:27> 'void *'
|   |     `-CStyleCastExpr 0x1e002c8aca8 <col:18, col:26> 'void *' <NullToPointer>
|   |       `-IntegerLiteral 0x1e002c8ac68 <col:26> 'int' 0
|   |-CallExpr 0x1e002c8adc8 <.//openssl//file_jk/before\test\handshake_helper.c:62:5, col:42> 'int'
|   | |-ImplicitCastExpr 0x1e002c8adb0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1e002c8ad28 <col:5> 'int ()' Function 0x1e002c88c60 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x1e002c8adf0 <col:18, col:28> 'unsigned char *' <LValueToRValue>
|   |   `-MemberExpr 0x1e002c8ad80 <col:18, col:28> 'unsigned char *' lvalue ->alpn_protocols 0x1e002c89708
|   |     `-ImplicitCastExpr 0x1e002c8ad68 <col:18> 'CTX_DATA *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1e002c8ad48 <col:18> 'CTX_DATA *' lvalue ParmVar 0x1e002c89928 'ctx_data' 'CTX_DATA *'
|   `-BinaryOperator 0x1e002c8af10 <line:63:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'unsigned char *' '='
|     |-MemberExpr 0x1e002c8ae40 <.//openssl//file_jk/before\test\handshake_helper.c:63:5, col:15> 'unsigned char *' lvalue ->alpn_protocols 0x1e002c89708
|     | `-ImplicitCastExpr 0x1e002c8ae28 <col:5> 'CTX_DATA *' <LValueToRValue>
|     |   `-DeclRefExpr 0x1e002c8ae08 <col:5> 'CTX_DATA *' lvalue ParmVar 0x1e002c89928 'ctx_data' 'CTX_DATA *'
|     `-ImplicitCastExpr 0x1e002c8aef8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'unsigned char *' <NullToPointer>
|       `-ParenExpr 0x1e002c8aed8 <col:17, col:27> 'void *'
|         `-CStyleCastExpr 0x1e002c8aeb0 <col:18, col:26> 'void *' <NullToPointer>
|           `-IntegerLiteral 0x1e002c8ae70 <col:26> 'int' 0
|-VarDecl 0x1e002c8af78 <.//openssl//file_jk/before\test\handshake_helper.c:66:1, col:12> col:12 used ex_data_idx 'int' static
|-FunctionDecl 0x1e002c8b1f8 <line:68:1, line:82:1> line:68:13 invalid info_cb 'void (const int *, int, int)' static
| |-ParmVarDecl 0x1e002c8b010 <col:21, col:32> col:32 invalid s 'const int *'
| |-ParmVarDecl 0x1e002c8b090 <col:35, col:39> col:39 used where 'int'
| |-ParmVarDecl 0x1e002c8b110 <col:46, col:50> col:50 used ret 'int'
| `-CompoundStmt 0x1e002c86e80 <line:69:1, line:82:1>
|   `-IfStmt 0x1e002c86e68 <line:70:5, line:81:5>
|     |-OpaqueValueExpr 0x1e002c86e50 <<invalid sloc>> '_Bool'
|     `-CompoundStmt 0x1e002c86e30 <line:70:31, line:81:5>
|       |-DeclStmt 0x1e002c8b520 <line:71:9, line:72:66>
|       | `-VarDecl 0x1e002c8b388 <line:71:9, col:28> col:28 used ex_data 'HANDSHAKE_EX_DATA *'
|       `-IfStmt 0x1e002c86e08 <line:73:9, line:80:9> has_else
|         |-OpaqueValueExpr 0x1e002c86df0 <<invalid sloc>> '_Bool'
|         |-CompoundStmt 0x1e002c86cf8 <line:73:35, line:78:9>
|         | |-BinaryOperator 0x1e002c8b628 <line:74:13, col:35> 'int' '='
|         | | |-MemberExpr 0x1e002c8b5a8 <col:13, col:22> 'int' lvalue ->alert_sent 0x1e002c89258
|         | | | `-ImplicitCastExpr 0x1e002c8b590 <col:13> 'HANDSHAKE_EX_DATA *' <LValueToRValue>
|         | | |   `-DeclRefExpr 0x1e002c8b558 <col:13> 'HANDSHAKE_EX_DATA *' lvalue Var 0x1e002c8b388 'ex_data' 'HANDSHAKE_EX_DATA *'
|         | | `-ImplicitCastExpr 0x1e002c8b610 <col:35> 'int' <LValueToRValue>
|         | |   `-DeclRefExpr 0x1e002c8b5d8 <col:35> 'int' lvalue ParmVar 0x1e002c8b110 'ret' 'int'
|         | `-IfStmt 0x1e002c86ce0 <line:75:13, line:77:47>
|         |   |-BinaryOperator 0x1e002c86c40 <line:75:17, line:76:64> 'int' '||'
|         |   | |-BinaryOperator 0x1e002c8b940 <line:75:17, col:60> 'int' '=='
|         |   | | |-CallExpr 0x1e002c8b8a0 <col:17, col:55> 'int'
|         |   | | | |-ImplicitCastExpr 0x1e002c8b888 <col:17> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|         |   | | | | `-DeclRefExpr 0x1e002c8b648 <col:17> 'int (const char *, const char *)' Function 0x1e002c4ac00 'strcmp' 'int (const char *, const char *)'
|         |   | | | |-ImplicitCastExpr 0x1e002c8b8d0 <col:24, col:49> 'const char *' <IntegralToPointer>
|         |   | | | | `-CallExpr 0x1e002c8b7b0 <col:24, col:49> 'int'
|         |   | | | |   |-ImplicitCastExpr 0x1e002c8b798 <col:24> 'int (*)()' <FunctionToPointerDecay>
|         |   | | | |   | `-DeclRefExpr 0x1e002c8b758 <col:24> 'int ()' Function 0x1e002c8b690 'SSL_alert_type_string' 'int ()'
|         |   | | | |   `-ImplicitCastExpr 0x1e002c8b7d8 <col:46> 'int' <LValueToRValue>
|         |   | | | |     `-DeclRefExpr 0x1e002c8b778 <col:46> 'int' lvalue ParmVar 0x1e002c8b110 'ret' 'int'
|         |   | | | `-ImplicitCastExpr 0x1e002c8b900 <col:52> 'const char *' <NoOp>
|         |   | | |   `-ImplicitCastExpr 0x1e002c8b8e8 <col:52> 'char *' <ArrayToPointerDecay>
|         |   | | |     `-StringLiteral 0x1e002c8b828 <col:52> 'char [2]' lvalue "F"
|         |   | | `-IntegerLiteral 0x1e002c8b918 <col:60> 'int' 0
|         |   | `-BinaryOperator 0x1e002c86c20 <line:76:20, col:64> 'int' '=='
|         |   |   |-CallExpr 0x1e002c86b80 <col:20, col:59> 'int'
|         |   |   | |-ImplicitCastExpr 0x1e002c8bb80 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|         |   |   | | `-DeclRefExpr 0x1e002c8b960 <col:20> 'int (const char *, const char *)' Function 0x1e002c4ac00 'strcmp' 'int (const char *, const char *)'
|         |   |   | |-ImplicitCastExpr 0x1e002c86bb0 <col:27, col:52> 'const char *' <IntegralToPointer>
|         |   |   | | `-CallExpr 0x1e002c8bac8 <col:27, col:52> 'int'
|         |   |   | |   |-ImplicitCastExpr 0x1e002c8bab0 <col:27> 'int (*)()' <FunctionToPointerDecay>
|         |   |   | |   | `-DeclRefExpr 0x1e002c8ba70 <col:27> 'int ()' Function 0x1e002c8b9a8 'SSL_alert_desc_string' 'int ()'
|         |   |   | |   `-ImplicitCastExpr 0x1e002c8baf0 <col:49> 'int' <LValueToRValue>
|         |   |   | |     `-DeclRefExpr 0x1e002c8ba90 <col:49> 'int' lvalue ParmVar 0x1e002c8b110 'ret' 'int'
|         |   |   | `-ImplicitCastExpr 0x1e002c86be0 <col:55> 'const char *' <NoOp>
|         |   |   |   `-ImplicitCastExpr 0x1e002c86bc8 <col:55> 'char *' <ArrayToPointerDecay>
|         |   |   |     `-StringLiteral 0x1e002c8bb48 <col:55> 'char [3]' lvalue "CN"
|         |   |   `-IntegerLiteral 0x1e002c86bf8 <col:64> 'int' 0
|         |   `-UnaryOperator 0x1e002c86cc8 <line:77:17, col:47> 'int' postfix '++'
|         |     `-MemberExpr 0x1e002c86c98 <col:17, col:26> 'int' lvalue ->num_fatal_alerts_sent 0x1e002c892c8
|         |       `-ImplicitCastExpr 0x1e002c86c80 <col:17> 'HANDSHAKE_EX_DATA *' <LValueToRValue>
|         |         `-DeclRefExpr 0x1e002c86c60 <col:17> 'HANDSHAKE_EX_DATA *' lvalue Var 0x1e002c8b388 'ex_data' 'HANDSHAKE_EX_DATA *'
|         `-CompoundStmt 0x1e002c86dd8 <line:78:16, line:80:9>
|           `-BinaryOperator 0x1e002c86db8 <line:79:13, col:39> 'int' '='
|             |-MemberExpr 0x1e002c86d50 <col:13, col:22> 'int' lvalue ->alert_received 0x1e002c89338
|             | `-ImplicitCastExpr 0x1e002c86d38 <col:13> 'HANDSHAKE_EX_DATA *' <LValueToRValue>
|             |   `-DeclRefExpr 0x1e002c86d18 <col:13> 'HANDSHAKE_EX_DATA *' lvalue Var 0x1e002c8b388 'ex_data' 'HANDSHAKE_EX_DATA *'
|             `-ImplicitCastExpr 0x1e002c86da0 <col:39> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x1e002c86d80 <col:39> 'int' lvalue ParmVar 0x1e002c8b110 'ret' 'int'
|-FunctionDecl 0x1e002c870a0 <line:90:1, line:124:1> line:90:12 invalid select_server_ctx 'int (int *, void *, int)' static
| |-ParmVarDecl 0x1e002c86eb0 <col:30, col:35> col:35 invalid s 'int *'
| |-ParmVarDecl 0x1e002c86f30 <col:38, col:44> col:44 arg 'void *'
| |-ParmVarDecl 0x1e002c86fb0 <col:49, col:53> col:53 used ignore 'int'
| `-CompoundStmt 0x1e002c88140 <line:91:1, line:124:1>
|   |-DeclStmt 0x1e002c87300 <line:92:5, col:78>
|   | `-VarDecl 0x1e002c87188 <col:5, col:17> col:17 used servername 'const char *'
|   |-DeclStmt 0x1e002c873d0 <line:93:5, line:94:62>
|   | `-VarDecl 0x1e002c87328 <line:93:5, col:24> col:24 used ex_data 'HANDSHAKE_EX_DATA *'
|   |-IfStmt 0x1e002c875e8 <line:96:5, line:99:5>
|   | |-BinaryOperator 0x1e002c874d8 <line:96:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x1e002c874a8 <.//openssl//file_jk/before\test\handshake_helper.c:96:9> 'const char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1e002c873e8 <col:9> 'const char *' lvalue Var 0x1e002c87188 'servername' 'const char *'
|   | | `-ImplicitCastExpr 0x1e002c874c0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const char *' <BitCast>
|   | |   `-ParenExpr 0x1e002c87488 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1e002c87460 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1e002c87420 <col:26> 'int' 0
|   | `-CompoundStmt 0x1e002c875d0 <.//openssl//file_jk/before\test\handshake_helper.c:96:29, line:99:5>
|   |   `-BinaryOperator 0x1e002c875b0 <line:97:9, col:31> 'ssl_servername_t':'ssl_servername_t' '='
|   |     |-MemberExpr 0x1e002c87548 <col:9, col:18> 'ssl_servername_t':'ssl_servername_t' lvalue ->servername 0x1e002c89410
|   |     | `-ImplicitCastExpr 0x1e002c87530 <col:9> 'HANDSHAKE_EX_DATA *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x1e002c874f8 <col:9> 'HANDSHAKE_EX_DATA *' lvalue Var 0x1e002c87328 'ex_data' 'HANDSHAKE_EX_DATA *'
|   |     `-ImplicitCastExpr 0x1e002c87598 <col:31> 'ssl_servername_t':'ssl_servername_t' <IntegralCast>
|   |       `-DeclRefExpr 0x1e002c87578 <col:31> 'int' EnumConstant 0x1e002cd40c0 'SSL_TEST_SERVERNAME_SERVER1' 'int'
|   `-IfStmt 0x1e002c88118 <line:101:5, line:123:5> has_else
|     |-BinaryOperator 0x1e002c87780 <line:101:9, col:42> 'int' '=='
|     | |-CallExpr 0x1e002c876e0 <col:9, col:37> 'int'
|     | | |-ImplicitCastExpr 0x1e002c876c8 <col:9> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|     | | | `-DeclRefExpr 0x1e002c87600 <col:9> 'int (const char *, const char *)' Function 0x1e002c4ac00 'strcmp' 'int (const char *, const char *)'
|     | | |-ImplicitCastExpr 0x1e002c87710 <col:16> 'const char *' <LValueToRValue>
|     | | | `-DeclRefExpr 0x1e002c87620 <col:16> 'const char *' lvalue Var 0x1e002c87188 'servername' 'const char *'
|     | | `-ImplicitCastExpr 0x1e002c87740 <col:28> 'const char *' <NoOp>
|     | |   `-ImplicitCastExpr 0x1e002c87728 <col:28> 'char *' <ArrayToPointerDecay>
|     | |     `-StringLiteral 0x1e002c87678 <col:28> 'char [8]' lvalue "server2"
|     | `-IntegerLiteral 0x1e002c87758 <col:42> 'int' 0
|     |-CompoundStmt 0x1e002c87d38 <col:45, line:114:5>
|     | `-BinaryOperator 0x1e002c87d18 <line:112:9, col:31> 'ssl_servername_t':'ssl_servername_t' '='
|     |   |-MemberExpr 0x1e002c87cb0 <col:9, col:18> 'ssl_servername_t':'ssl_servername_t' lvalue ->servername 0x1e002c89410
|     |   | `-ImplicitCastExpr 0x1e002c87c98 <col:9> 'HANDSHAKE_EX_DATA *' <LValueToRValue>
|     |   |   `-DeclRefExpr 0x1e002c87c78 <col:9> 'HANDSHAKE_EX_DATA *' lvalue Var 0x1e002c87328 'ex_data' 'HANDSHAKE_EX_DATA *'
|     |   `-ImplicitCastExpr 0x1e002c87d00 <col:31> 'ssl_servername_t':'ssl_servername_t' <IntegralCast>
|     |     `-DeclRefExpr 0x1e002c87ce0 <col:31> 'int' EnumConstant 0x1e002cd4118 'SSL_TEST_SERVERNAME_SERVER2' 'int'
|     `-IfStmt 0x1e002c880f0 <line:114:12, line:123:5> has_else
|       |-BinaryOperator 0x1e002c87e98 <line:114:16, col:49> 'int' '=='
|       | |-CallExpr 0x1e002c87df8 <col:16, col:44> 'int'
|       | | |-ImplicitCastExpr 0x1e002c87de0 <col:16> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x1e002c87d50 <col:16> 'int (const char *, const char *)' Function 0x1e002c4ac00 'strcmp' 'int (const char *, const char *)'
|       | | |-ImplicitCastExpr 0x1e002c87e28 <col:23> 'const char *' <LValueToRValue>
|       | | | `-DeclRefExpr 0x1e002c87d70 <col:23> 'const char *' lvalue Var 0x1e002c87188 'servername' 'const char *'
|       | | `-ImplicitCastExpr 0x1e002c87e58 <col:35> 'const char *' <NoOp>
|       | |   `-ImplicitCastExpr 0x1e002c87e40 <col:35> 'char *' <ArrayToPointerDecay>
|       | |     `-StringLiteral 0x1e002c87d90 <col:35> 'char [8]' lvalue "server1"
|       | `-IntegerLiteral 0x1e002c87e70 <col:49> 'int' 0
|       |-CompoundStmt 0x1e002c87f78 <col:52, line:117:5>
|       | `-BinaryOperator 0x1e002c87f58 <line:115:9, col:31> 'ssl_servername_t':'ssl_servername_t' '='
|       |   |-MemberExpr 0x1e002c87ef0 <col:9, col:18> 'ssl_servername_t':'ssl_servername_t' lvalue ->servername 0x1e002c89410
|       |   | `-ImplicitCastExpr 0x1e002c87ed8 <col:9> 'HANDSHAKE_EX_DATA *' <LValueToRValue>
|       |   |   `-DeclRefExpr 0x1e002c87eb8 <col:9> 'HANDSHAKE_EX_DATA *' lvalue Var 0x1e002c87328 'ex_data' 'HANDSHAKE_EX_DATA *'
|       |   `-ImplicitCastExpr 0x1e002c87f40 <col:31> 'ssl_servername_t':'ssl_servername_t' <IntegralCast>
|       |     `-DeclRefExpr 0x1e002c87f20 <col:31> 'int' EnumConstant 0x1e002cd40c0 'SSL_TEST_SERVERNAME_SERVER1' 'int'
|       `-IfStmt 0x1e002c880c8 <line:117:12, line:123:5> has_else
|         |-ImplicitCastExpr 0x1e002c87fc8 <line:117:16> 'int' <LValueToRValue>
|         | `-DeclRefExpr 0x1e002c87f90 <col:16> 'int' lvalue ParmVar 0x1e002c86fb0 'ignore' 'int'
|         |-CompoundStmt 0x1e002c880a0 <col:24, line:120:5>
|         | `-BinaryOperator 0x1e002c88080 <line:118:9, col:31> 'ssl_servername_t':'ssl_servername_t' '='
|         |   |-MemberExpr 0x1e002c88018 <col:9, col:18> 'ssl_servername_t':'ssl_servername_t' lvalue ->servername 0x1e002c89410
|         |   | `-ImplicitCastExpr 0x1e002c88000 <col:9> 'HANDSHAKE_EX_DATA *' <LValueToRValue>
|         |   |   `-DeclRefExpr 0x1e002c87fe0 <col:9> 'HANDSHAKE_EX_DATA *' lvalue Var 0x1e002c87328 'ex_data' 'HANDSHAKE_EX_DATA *'
|         |   `-ImplicitCastExpr 0x1e002c88068 <col:31> 'ssl_servername_t':'ssl_servername_t' <IntegralCast>
|         |     `-DeclRefExpr 0x1e002c88048 <col:31> 'int' EnumConstant 0x1e002cd40c0 'SSL_TEST_SERVERNAME_SERVER1' 'int'
|         `-CompoundStmt 0x1e002c880b8 <line:120:12, line:123:5>
|-FunctionDecl 0x1e002c88370 <line:137:1, line:140:1> line:137:12 invalid servername_ignore_cb 'int (int *, int *, void *)' static
| |-ParmVarDecl 0x1e002c88188 <col:33, col:38> col:38 invalid s 'int *'
| |-ParmVarDecl 0x1e002c88208 <col:41, col:46> col:46 ad 'int *'
| |-ParmVarDecl 0x1e002c88288 <col:50, col:56> col:56 used arg 'void *'
| `-CompoundStmt 0x1e002c884a0 <line:138:1, line:140:1>
|-FunctionDecl 0x1e002c88688 <line:142:1, line:145:1> line:142:12 invalid servername_reject_cb 'int (int *, int *, void *)' static
| |-ParmVarDecl 0x1e002c884e0 <col:33, col:38> col:38 invalid s 'int *'
| |-ParmVarDecl 0x1e002c88560 <col:41, col:46> col:46 ad 'int *'
| |-ParmVarDecl 0x1e002c885e0 <col:50, col:56> col:56 used arg 'void *'
| `-CompoundStmt 0x1e002c887b8 <line:143:1, line:145:1>
|-VarDecl 0x1e002c887f8 <line:147:1, col:49> col:22 used dummy_ocsp_resp_good_val 'unsigned char' static cinit
| `-ImplicitCastExpr 0x1e002c888a0 <col:49> 'unsigned char' <IntegralCast>
|   `-IntegerLiteral 0x1e002c88860 <col:49> 'int' 255
|-VarDecl 0x1e002c888d0 <line:148:1, col:48> col:22 used dummy_ocsp_resp_bad_val 'unsigned char' static cinit
| `-ImplicitCastExpr 0x1e002c88978 <col:48> 'unsigned char' <IntegralCast>
|   `-IntegerLiteral 0x1e002c88938 <col:48> 'int' 254
|-FunctionDecl 0x1e002c83b50 <line:150:1, line:165:1> line:150:12 invalid server_ocsp_cb 'int (int *, void *)' static
| |-ParmVarDecl 0x1e002c889a8 <col:27, col:32> col:32 invalid s 'int *'
| |-ParmVarDecl 0x1e002c88a28 <col:35, col:41> col:41 used arg 'void *'
| `-CompoundStmt 0x1e002c84218 <line:151:1, line:165:1>
|   |-DeclStmt 0x1e002c83c98 <line:152:5, col:24>
|   | `-VarDecl 0x1e002c83c30 <col:5, col:20> col:20 used resp 'unsigned char *'
|   |-BinaryOperator 0x1e002c83e78 <line:154:5, col:28> 'unsigned char *' '='
|   | |-DeclRefExpr 0x1e002c83cb0 <col:5> 'unsigned char *' lvalue Var 0x1e002c83c30 'resp' 'unsigned char *'
|   | `-ImplicitCastExpr 0x1e002c83e60 <col:12, col:28> 'unsigned char *' <IntegralToPointer>
|   |   `-CallExpr 0x1e002c83e38 <col:12, col:28> 'int'
|   |     |-ImplicitCastExpr 0x1e002c83e20 <col:12> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1e002c83dd8 <col:12> 'int ()' Function 0x1e002c83d10 'OPENSSL_malloc' 'int ()'
|   |     `-IntegerLiteral 0x1e002c83df8 <col:27> 'int' 1
|   `-BinaryOperator 0x1e002c840a0 <line:160:5, col:31> 'unsigned char' '='
|     |-UnaryOperator 0x1e002c83fc8 <col:5, col:6> 'unsigned char' lvalue prefix '*' cannot overflow
|     | `-ImplicitCastExpr 0x1e002c83fb0 <col:6> 'unsigned char *' <LValueToRValue>
|     |   `-DeclRefExpr 0x1e002c83f90 <col:6> 'unsigned char *' lvalue Var 0x1e002c83c30 'resp' 'unsigned char *'
|     `-ImplicitCastExpr 0x1e002c84088 <col:13, col:31> 'unsigned char' <LValueToRValue>
|       `-UnaryOperator 0x1e002c84070 <col:13, col:31> 'unsigned char' lvalue prefix '*' cannot overflow
|         `-CStyleCastExpr 0x1e002c84048 <col:14, col:31> 'unsigned char *' <BitCast>
|           `-ImplicitCastExpr 0x1e002c84030 <col:31> 'void *' <LValueToRValue> part_of_explicit_cast
|             `-DeclRefExpr 0x1e002c83fe0 <col:31> 'void *' lvalue ParmVar 0x1e002c88a28 'arg' 'void *'
|-FunctionDecl 0x1e002c84378 <line:167:1, line:177:1> line:167:12 invalid client_ocsp_cb 'int (int *, void *)' static
| |-ParmVarDecl 0x1e002c84258 <col:27, col:32> col:32 invalid s 'int *'
| |-ParmVarDecl 0x1e002c842d8 <col:35, col:41> col:41 arg 'void *'
| `-CompoundStmt 0x1e002c84970 <line:168:1, line:177:1>
|   |-DeclStmt 0x1e002c844c0 <line:169:5, col:30>
|   | `-VarDecl 0x1e002c84458 <col:5, col:26> col:26 used resp 'const unsigned char *'
|   |-DeclStmt 0x1e002c84558 <line:170:5, col:12>
|   | `-VarDecl 0x1e002c844f0 <col:5, col:9> col:9 used len 'int'
|   |-IfStmt 0x1e002c84920 <line:173:5, line:174:16>
|   | |-BinaryOperator 0x1e002c848c8 <line:173:9, col:30> 'int' '||'
|   | | |-BinaryOperator 0x1e002c84790 <col:9, col:16> 'int' '!='
|   | | | |-ImplicitCastExpr 0x1e002c84778 <col:9> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1e002c84730 <col:9> 'int' lvalue Var 0x1e002c844f0 'len' 'int'
|   | | | `-IntegerLiteral 0x1e002c84750 <col:16> 'int' 1
|   | | `-BinaryOperator 0x1e002c848a8 <col:21, col:30> 'int' '!='
|   | |   |-ImplicitCastExpr 0x1e002c84878 <col:21, col:22> 'int' <IntegralCast>
|   | |   | `-ImplicitCastExpr 0x1e002c84848 <col:21, col:22> 'unsigned char' <LValueToRValue>
|   | |   |   `-UnaryOperator 0x1e002c84810 <col:21, col:22> 'const unsigned char' lvalue prefix '*' cannot overflow
|   | |   |     `-ImplicitCastExpr 0x1e002c847f8 <col:22> 'const unsigned char *' <LValueToRValue>
|   | |   |       `-DeclRefExpr 0x1e002c847d8 <col:22> 'const unsigned char *' lvalue Var 0x1e002c84458 'resp' 'const unsigned char *'
|   | |   `-ImplicitCastExpr 0x1e002c84890 <col:30> 'int' <IntegralCast>
|   | |     `-ImplicitCastExpr 0x1e002c84860 <col:30> 'unsigned char' <LValueToRValue>
|   | |       `-DeclRefExpr 0x1e002c84828 <col:30> 'unsigned char' lvalue Var 0x1e002c887f8 'dummy_ocsp_resp_good_val' 'unsigned char'
|   | `-ReturnStmt 0x1e002c84910 <line:174:9, col:16>
|   |   `-IntegerLiteral 0x1e002c848e8 <col:16> 'int' 0
|   `-ReturnStmt 0x1e002c84960 <line:176:5, col:12>
|     `-IntegerLiteral 0x1e002c84938 <col:12> 'int' 1
|-FunctionDecl 0x1e002c8bbd0 <line:179:1, line:182:1> line:179:12 invalid verify_reject_cb 'int (int *, void *)' static
| |-ParmVarDecl 0x1e002c849d0 <col:29, col:45> col:45 invalid ctx 'int *'
| |-ParmVarDecl 0x1e002c84a50 <col:50, col:56> col:56 arg 'void *'
| `-CompoundStmt 0x1e002c8bde0 <col:61, line:182:1>
|   `-ReturnStmt 0x1e002c8bdd0 <line:181:5, col:12>
|     `-IntegerLiteral 0x1e002c8bda8 <col:12> 'int' 0
|-FunctionDecl 0x1e002c8bf30 <line:184:1, line:186:1> line:184:12 invalid verify_accept_cb 'int (int *, void *)' static
| |-ParmVarDecl 0x1e002c8be10 <col:29, col:45> col:45 invalid ctx 'int *'
| |-ParmVarDecl 0x1e002c8be90 <col:50, col:56> col:56 arg 'void *'
| `-CompoundStmt 0x1e002c8c030 <col:61, line:186:1>
|   `-ReturnStmt 0x1e002c8c020 <line:185:5, col:12>
|     `-IntegerLiteral 0x1e002c8bff8 <col:12> 'int' 1
|-FunctionDecl 0x1e002c8c410 <line:188:1, line:192:1> line:188:12 invalid broken_session_ticket_cb 'int (int *, unsigned char *, unsigned char *, int *, int *, int)' static
| |-ParmVarDecl 0x1e002c8c078 <col:37, col:42> col:42 invalid s 'int *'
| |-ParmVarDecl 0x1e002c8c0f8 <col:45, col:60> col:60 key_name 'unsigned char *'
| |-ParmVarDecl 0x1e002c8c178 <col:70, col:85> col:85 iv 'unsigned char *'
| |-ParmVarDecl 0x1e002c8c1f8 <line:189:37, col:53> col:53 invalid ctx 'int *'
| |-ParmVarDecl 0x1e002c8c278 <col:58, col:68> col:68 invalid hctx 'int *'
| |-ParmVarDecl 0x1e002c8c2f8 <col:74, col:78> col:78 enc 'int'
| `-CompoundStmt 0x1e002c8c530 <line:190:1, line:192:1>
|   `-ReturnStmt 0x1e002c8c520 <line:191:5, col:12>
|     `-IntegerLiteral 0x1e002c8c4f8 <col:12> 'int' 0
|-FunctionDecl 0x1e002c8c8e8 <line:194:1, line:203:1> line:194:12 invalid do_not_call_session_ticket_cb 'int (int *, unsigned char *, unsigned char *, int *, int *, int)' static
| |-ParmVarDecl 0x1e002c8c5a8 <col:42, col:47> col:47 invalid s 'int *'
| |-ParmVarDecl 0x1e002c8c628 <col:50, col:65> col:65 key_name 'unsigned char *'
| |-ParmVarDecl 0x1e002c8c6a8 <line:195:42, col:57> col:57 iv 'unsigned char *'
| |-ParmVarDecl 0x1e002c8c728 <line:196:42, col:58> col:58 invalid ctx 'int *'
| |-ParmVarDecl 0x1e002c8c7a8 <line:197:42, col:52> col:52 invalid hctx 'int *'
| |-ParmVarDecl 0x1e002c8c828 <col:58, col:62> col:62 enc 'int'
| `-CompoundStmt 0x1e002c8cba0 <line:198:1, line:203:1>
|   |-DeclStmt 0x1e002c8ca88 <line:199:5, line:200:62>
|   | `-VarDecl 0x1e002c8c9e0 <line:199:5, col:24> col:24 used ex_data 'HANDSHAKE_EX_DATA *'
|   |-BinaryOperator 0x1e002c8cb48 <line:201:5, col:43> 'int' '='
|   | |-MemberExpr 0x1e002c8caf0 <col:5, col:14> 'int' lvalue ->session_ticket_do_not_call 0x1e002c893a8
|   | | `-ImplicitCastExpr 0x1e002c8cad8 <col:5> 'HANDSHAKE_EX_DATA *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1e002c8caa0 <col:5> 'HANDSHAKE_EX_DATA *' lvalue Var 0x1e002c8c9e0 'ex_data' 'HANDSHAKE_EX_DATA *'
|   | `-IntegerLiteral 0x1e002c8cb20 <col:43> 'int' 1
|   `-ReturnStmt 0x1e002c8cb90 <line:202:5, col:12>
|     `-IntegerLiteral 0x1e002c8cb68 <col:12> 'int' 0
|-FunctionDecl 0x1e002c8cf38 <line:206:1, line:238:1> line:206:13 used parse_protos 'void (const char *, unsigned char **, size_t *)' static
| |-ParmVarDecl 0x1e002c8cc40 <col:26, col:38> col:38 used protos 'const char *'
| |-ParmVarDecl 0x1e002c8ccf8 <col:46, col:62> col:62 used out 'unsigned char **'
| |-ParmVarDecl 0x1e002c8cdc8 <col:67, col:75> col:75 used outlen 'size_t *'
| `-CompoundStmt 0x1e002c8fc10 <line:207:1, line:238:1>
|   |-DeclStmt 0x1e002c8d190 <line:208:5, col:26>
|   | |-VarDecl 0x1e002c8d018 <col:5, col:12> col:12 used len 'size_t':'unsigned long long'
|   | |-VarDecl 0x1e002c8d090 <col:5, col:17> col:17 used i 'size_t':'unsigned long long'
|   | `-VarDecl 0x1e002c8d108 <col:5, col:20> col:20 used prefix 'size_t':'unsigned long long'
|   |-BinaryOperator 0x1e002c8d2c0 <line:210:5, col:24> 'size_t':'unsigned long long' '='
|   | |-DeclRefExpr 0x1e002c8d1a8 <col:5> 'size_t':'unsigned long long' lvalue Var 0x1e002c8d018 'len' 'size_t':'unsigned long long'
|   | `-CallExpr 0x1e002c8d280 <col:11, col:24> 'unsigned long long'
|   |   |-ImplicitCastExpr 0x1e002c8d268 <col:11> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1e002c8d1e0 <col:11> 'unsigned long long (const char *)' Function 0x1e002c4af60 'strlen' 'unsigned long long (const char *)'
|   |   `-ImplicitCastExpr 0x1e002c8d2a8 <col:18> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1e002c8d200 <col:18> 'const char *' lvalue ParmVar 0x1e002c8cc40 'protos' 'const char *'
|   |-DoStmt 0x1e002c8d5c0 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x1e002c8d580 <line:106:8, line:111:5>
|   | | `-IfStmt 0x1e002c8d568 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x1e002c8d428 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x1e002c8d408 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x1e002c8d3e8 <.//openssl//file_jk/before\test\handshake_helper.c:213:16, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | |   |     |-ImplicitCastExpr 0x1e002c8d3b8 <.//openssl//file_jk/before\test\handshake_helper.c:213:16, col:17> 'unsigned char *' <LValueToRValue>
|   | |   |     | `-UnaryOperator 0x1e002c8d318 <col:16, col:17> 'unsigned char *' lvalue prefix '*' cannot overflow
|   | |   |     |   `-ImplicitCastExpr 0x1e002c8d300 <col:17> 'unsigned char **' <LValueToRValue>
|   | |   |     |     `-DeclRefExpr 0x1e002c8d2e0 <col:17> 'unsigned char **' lvalue ParmVar 0x1e002c8ccf8 'out' 'unsigned char **'
|   | |   |     `-ImplicitCastExpr 0x1e002c8d3d0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'unsigned char *' <BitCast>
|   | |   |       `-ParenExpr 0x1e002c8d398 <col:17, col:27> 'void *'
|   | |   |         `-CStyleCastExpr 0x1e002c8d370 <col:18, col:26> 'void *' <NullToPointer>
|   | |   |           `-IntegerLiteral 0x1e002c8d330 <col:26> 'int' 0
|   | |   `-CompoundStmt 0x1e002c8d550 <.//openssl//file_jk/before\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x1e002c8d528 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x1e002c8d510 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x1e002c8d460 <col:13> 'int ()' Function 0x1e002c83670 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x1e002c8d4f8 <col:28, <scratch space>:295:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x1e002c8d4e0 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x1e002c8d4b8 <col:1> 'char [13]' lvalue "*out == NULL"
|   | `-IntegerLiteral 0x1e002c8d598 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x1e002c8d5e0 <.//openssl//file_jk/before\test\handshake_helper.c:213:29>
|   |-BinaryOperator 0x1e002c8d748 <line:216:5, col:34> 'unsigned char *' '='
|   | |-UnaryOperator 0x1e002c8d620 <col:5, col:6> 'unsigned char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x1e002c8d608 <col:6> 'unsigned char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1e002c8d5e8 <col:6> 'unsigned char **' lvalue ParmVar 0x1e002c8ccf8 'out' 'unsigned char **'
|   | `-ImplicitCastExpr 0x1e002c8d730 <col:12, col:34> 'unsigned char *' <IntegralToPointer>
|   |   `-CallExpr 0x1e002c8d708 <col:12, col:34> 'int'
|   |     |-ImplicitCastExpr 0x1e002c8d6f0 <col:12> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1e002c8d638 <col:12> 'int ()' Function 0x1e002c83d10 'OPENSSL_malloc' 'int ()'
|   |     `-BinaryOperator 0x1e002c8d6d0 <col:27, col:33> 'unsigned long long' '+'
|   |       |-ImplicitCastExpr 0x1e002c8d6a0 <col:27> 'size_t':'unsigned long long' <LValueToRValue>
|   |       | `-DeclRefExpr 0x1e002c8d658 <col:27> 'size_t':'unsigned long long' lvalue Var 0x1e002c8d018 'len' 'size_t':'unsigned long long'
|   |       `-ImplicitCastExpr 0x1e002c8d6b8 <col:33> 'unsigned long long' <IntegralCast>
|   |         `-IntegerLiteral 0x1e002c8d678 <col:33> 'int' 1
|   |-DoStmt 0x1e002c8da10 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x1e002c8d9d0 <line:106:8, line:111:5>
|   | | `-IfStmt 0x1e002c8d9b8 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x1e002c8d8b0 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x1e002c8d890 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x1e002c8d870 <.//openssl//file_jk/before\test\handshake_helper.c:217:16, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | |   |     |-ImplicitCastExpr 0x1e002c8d840 <.//openssl//file_jk/before\test\handshake_helper.c:217:16, col:17> 'unsigned char *' <LValueToRValue>
|   | |   |     | `-UnaryOperator 0x1e002c8d7a0 <col:16, col:17> 'unsigned char *' lvalue prefix '*' cannot overflow
|   | |   |     |   `-ImplicitCastExpr 0x1e002c8d788 <col:17> 'unsigned char **' <LValueToRValue>
|   | |   |     |     `-DeclRefExpr 0x1e002c8d768 <col:17> 'unsigned char **' lvalue ParmVar 0x1e002c8ccf8 'out' 'unsigned char **'
|   | |   |     `-ImplicitCastExpr 0x1e002c8d858 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'unsigned char *' <BitCast>
|   | |   |       `-ParenExpr 0x1e002c8d820 <col:17, col:27> 'void *'
|   | |   |         `-CStyleCastExpr 0x1e002c8d7f8 <col:18, col:26> 'void *' <NullToPointer>
|   | |   |           `-IntegerLiteral 0x1e002c8d7b8 <col:26> 'int' 0
|   | |   `-CompoundStmt 0x1e002c8d9a0 <.//openssl//file_jk/before\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x1e002c8d978 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x1e002c8d960 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x1e002c8d8e8 <col:13> 'int ()' Function 0x1e002c83670 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x1e002c8d948 <col:28, <scratch space>:296:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x1e002c8d930 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x1e002c8d908 <col:1> 'char [13]' lvalue "*out != NULL"
|   | `-IntegerLiteral 0x1e002c8d9e8 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x1e002c8da30 <.//openssl//file_jk/before\test\handshake_helper.c:217:29>
|   |-BinaryOperator 0x1e002c8db20 <line:218:5, col:21> 'size_t':'unsigned long long' '='
|   | |-UnaryOperator 0x1e002c8da70 <col:5, col:6> 'size_t':'unsigned long long' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x1e002c8da58 <col:6> 'size_t *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1e002c8da38 <col:6> 'size_t *' lvalue ParmVar 0x1e002c8cdc8 'outlen' 'size_t *'
|   | `-BinaryOperator 0x1e002c8db00 <col:15, col:21> 'unsigned long long' '+'
|   |   |-ImplicitCastExpr 0x1e002c8dad0 <col:15> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1e002c8da88 <col:15> 'size_t':'unsigned long long' lvalue Var 0x1e002c8d018 'len' 'size_t':'unsigned long long'
|   |   `-ImplicitCastExpr 0x1e002c8dae8 <col:21> 'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x1e002c8daa8 <col:21> 'int' 1
|   |-CallExpr 0x1e002c85c60 <line:224:5, col:33> 'void *'
|   | |-ImplicitCastExpr 0x1e002c85c48 <col:5> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1e002c8db40 <col:5> 'void *(void *, const void *, unsigned long long)' Function 0x1e002c44438 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   | |-ImplicitCastExpr 0x1e002c85c98 <col:12, col:19> 'void *' <BitCast>
|   | | `-BinaryOperator 0x1e002c85b88 <col:12, col:19> 'unsigned char *' '+'
|   | |   |-ImplicitCastExpr 0x1e002c85b70 <col:12, col:13> 'unsigned char *' <LValueToRValue>
|   | |   | `-UnaryOperator 0x1e002c8db98 <col:12, col:13> 'unsigned char *' lvalue prefix '*' cannot overflow
|   | |   |   `-ImplicitCastExpr 0x1e002c8db80 <col:13> 'unsigned char **' <LValueToRValue>
|   | |   |     `-DeclRefExpr 0x1e002c8db60 <col:13> 'unsigned char **' lvalue ParmVar 0x1e002c8ccf8 'out' 'unsigned char **'
|   | |   `-IntegerLiteral 0x1e002c8dbb0 <col:19> 'int' 1
|   | |-ImplicitCastExpr 0x1e002c85cc8 <col:22> 'const void *' <BitCast>
|   | | `-ImplicitCastExpr 0x1e002c85cb0 <col:22> 'const char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1e002c85ba8 <col:22> 'const char *' lvalue ParmVar 0x1e002c8cc40 'protos' 'const char *'
|   | `-ImplicitCastExpr 0x1e002c85ce0 <col:30> 'size_t':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0x1e002c85bc8 <col:30> 'size_t':'unsigned long long' lvalue Var 0x1e002c8d018 'len' 'size_t':'unsigned long long'
|   |-BinaryOperator 0x1e002c85d70 <line:226:5, col:14> 'size_t':'unsigned long long' '='
|   | |-DeclRefExpr 0x1e002c85cf8 <col:5> 'size_t':'unsigned long long' lvalue Var 0x1e002c8d108 'prefix' 'size_t':'unsigned long long'
|   | `-ImplicitCastExpr 0x1e002c85d58 <col:14> 'size_t':'unsigned long long' <IntegralCast>
|   |   `-IntegerLiteral 0x1e002c85d30 <col:14> 'int' 0
|   |-BinaryOperator 0x1e002c85e60 <line:227:5, col:18> 'size_t':'unsigned long long' '='
|   | |-DeclRefExpr 0x1e002c85d90 <col:5> 'size_t':'unsigned long long' lvalue Var 0x1e002c8d090 'i' 'size_t':'unsigned long long'
|   | `-BinaryOperator 0x1e002c85e40 <col:9, col:18> 'unsigned long long' '+'
|   |   |-ImplicitCastExpr 0x1e002c85e10 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1e002c85dc8 <col:9> 'size_t':'unsigned long long' lvalue Var 0x1e002c8d108 'prefix' 'size_t':'unsigned long long'
|   |   `-ImplicitCastExpr 0x1e002c85e28 <col:18> 'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x1e002c85de8 <col:18> 'int' 1
|   |-WhileStmt 0x1e002c866b0 <line:228:5, line:235:5>
|   | |-BinaryOperator 0x1e002c85ef0 <line:228:12, col:17> 'int' '<='
|   | | |-ImplicitCastExpr 0x1e002c85ec0 <col:12> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1e002c85e80 <col:12> 'size_t':'unsigned long long' lvalue Var 0x1e002c8d090 'i' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x1e002c85ed8 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1e002c85ea0 <col:17> 'size_t':'unsigned long long' lvalue Var 0x1e002c8d018 'len' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x1e002c86690 <col:22, line:235:5>
|   |   |-IfStmt 0x1e002c86640 <line:229:9, line:233:9>
|   |   | |-BinaryOperator 0x1e002c86038 <line:229:13, col:26> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x1e002c86020 <col:13, col:21> 'int' <IntegralCast>
|   |   | | | `-ImplicitCastExpr 0x1e002c86008 <col:13, col:21> 'unsigned char' <LValueToRValue>
|   |   | | |   `-ArraySubscriptExpr 0x1e002c85fd0 <col:13, col:21> 'unsigned char' lvalue
|   |   | | |     |-ImplicitCastExpr 0x1e002c85fa0 <col:13, col:18> 'unsigned char *' <LValueToRValue>
|   |   | | |     | `-ParenExpr 0x1e002c85f60 <col:13, col:18> 'unsigned char *' lvalue
|   |   | | |     |   `-UnaryOperator 0x1e002c85f48 <col:14, col:15> 'unsigned char *' lvalue prefix '*' cannot overflow
|   |   | | |     |     `-ImplicitCastExpr 0x1e002c85f30 <col:15> 'unsigned char **' <LValueToRValue>
|   |   | | |     |       `-DeclRefExpr 0x1e002c85f10 <col:15> 'unsigned char **' lvalue ParmVar 0x1e002c8ccf8 'out' 'unsigned char **'
|   |   | | |     `-ImplicitCastExpr 0x1e002c85fb8 <col:20> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | | |       `-DeclRefExpr 0x1e002c85f80 <col:20> 'size_t':'unsigned long long' lvalue Var 0x1e002c8d090 'i' 'size_t':'unsigned long long'
|   |   | | `-CharacterLiteral 0x1e002c85ff0 <col:26> 'int' 44
|   |   | `-CompoundStmt 0x1e002c86610 <col:31, line:233:9>
|   |   |   |-DoStmt 0x1e002c86368 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   |   |   | |-CompoundStmt 0x1e002c86328 <line:106:8, line:111:5>
|   |   |   | | `-IfStmt 0x1e002c86310 <line:107:9, line:110:9>
|   |   |   | |   |-UnaryOperator 0x1e002c861c8 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   |   |   | |   | `-ParenExpr 0x1e002c861a8 <col:14, col:24> 'int'
|   |   |   | |   |   `-BinaryOperator 0x1e002c86188 <.//openssl//file_jk/before\test\handshake_helper.c:230:24, col:41> 'int' '>'
|   |   |   | |   |     |-BinaryOperator 0x1e002c86128 <col:24, col:32> 'unsigned long long' '-'
|   |   |   | |   |     | |-BinaryOperator 0x1e002c860d0 <col:24, col:28> 'unsigned long long' '-'
|   |   |   | |   |     | | |-ImplicitCastExpr 0x1e002c860a0 <col:24> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   | |   |     | | | `-DeclRefExpr 0x1e002c86058 <col:24> 'size_t':'unsigned long long' lvalue Var 0x1e002c8d090 'i' 'size_t':'unsigned long long'
|   |   |   | |   |     | | `-ImplicitCastExpr 0x1e002c860b8 <col:28> 'unsigned long long' <IntegralCast>
|   |   |   | |   |     | |   `-IntegerLiteral 0x1e002c86078 <col:28> 'int' 1
|   |   |   | |   |     | `-ImplicitCastExpr 0x1e002c86110 <col:32> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   | |   |     |   `-DeclRefExpr 0x1e002c860f0 <col:32> 'size_t':'unsigned long long' lvalue Var 0x1e002c8d108 'prefix' 'size_t':'unsigned long long'
|   |   |   | |   |     `-ImplicitCastExpr 0x1e002c86170 <col:41> 'unsigned long long' <IntegralCast>
|   |   |   | |   |       `-IntegerLiteral 0x1e002c86148 <col:41> 'int' 0
|   |   |   | |   `-CompoundStmt 0x1e002c862f8 <.//openssl//file_jk/before\test/testutil.h:107:27, line:110:9>
|   |   |   | |     `-CallExpr 0x1e002c862d0 <line:109:13, col:39> 'int'
|   |   |   | |       |-ImplicitCastExpr 0x1e002c862b8 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | |       | `-DeclRefExpr 0x1e002c86200 <col:13> 'int ()' Function 0x1e002c83670 'OPENSSL_assert' 'int ()'
|   |   |   | |       `-UnaryOperator 0x1e002c862a0 <col:28, <scratch space>:297:1> 'int' prefix '!' cannot overflow
|   |   |   | |         `-ImplicitCastExpr 0x1e002c86288 <col:1> 'char *' <ArrayToPointerDecay>
|   |   |   | |           `-StringLiteral 0x1e002c86258 <col:1> 'char [19]' lvalue "i - 1 - prefix > 0"
|   |   |   | `-IntegerLiteral 0x1e002c86340 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |   |   |-NullStmt 0x1e002c86388 <.//openssl//file_jk/before\test\handshake_helper.c:230:43>
|   |   |   |-BinaryOperator 0x1e002c86578 <line:231:13, col:38> 'unsigned char' '='
|   |   |   | |-ArraySubscriptExpr 0x1e002c86450 <col:13, col:26> 'unsigned char' lvalue
|   |   |   | | |-ImplicitCastExpr 0x1e002c86420 <col:13, col:18> 'unsigned char *' <LValueToRValue>
|   |   |   | | | `-ParenExpr 0x1e002c863e0 <col:13, col:18> 'unsigned char *' lvalue
|   |   |   | | |   `-UnaryOperator 0x1e002c863c8 <col:14, col:15> 'unsigned char *' lvalue prefix '*' cannot overflow
|   |   |   | | |     `-ImplicitCastExpr 0x1e002c863b0 <col:15> 'unsigned char **' <LValueToRValue>
|   |   |   | | |       `-DeclRefExpr 0x1e002c86390 <col:15> 'unsigned char **' lvalue ParmVar 0x1e002c8ccf8 'out' 'unsigned char **'
|   |   |   | | `-ImplicitCastExpr 0x1e002c86438 <col:20> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x1e002c86400 <col:20> 'size_t':'unsigned long long' lvalue Var 0x1e002c8d108 'prefix' 'size_t':'unsigned long long'
|   |   |   | `-ImplicitCastExpr 0x1e002c86560 <col:30, col:38> 'unsigned char' <IntegralCast>
|   |   |   |   `-BinaryOperator 0x1e002c86540 <col:30, col:38> 'unsigned long long' '-'
|   |   |   |     |-BinaryOperator 0x1e002c864e8 <col:30, col:34> 'unsigned long long' '-'
|   |   |   |     | |-ImplicitCastExpr 0x1e002c864b8 <col:30> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   |     | | `-DeclRefExpr 0x1e002c86470 <col:30> 'size_t':'unsigned long long' lvalue Var 0x1e002c8d090 'i' 'size_t':'unsigned long long'
|   |   |   |     | `-ImplicitCastExpr 0x1e002c864d0 <col:34> 'unsigned long long' <IntegralCast>
|   |   |   |     |   `-IntegerLiteral 0x1e002c86490 <col:34> 'int' 1
|   |   |   |     `-ImplicitCastExpr 0x1e002c86528 <col:38> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   |       `-DeclRefExpr 0x1e002c86508 <col:38> 'size_t':'unsigned long long' lvalue Var 0x1e002c8d108 'prefix' 'size_t':'unsigned long long'
|   |   |   `-BinaryOperator 0x1e002c865f0 <line:232:13, col:22> 'size_t':'unsigned long long' '='
|   |   |     |-DeclRefExpr 0x1e002c86598 <col:13> 'size_t':'unsigned long long' lvalue Var 0x1e002c8d108 'prefix' 'size_t':'unsigned long long'
|   |   |     `-ImplicitCastExpr 0x1e002c865d8 <col:22> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x1e002c865b8 <col:22> 'size_t':'unsigned long long' lvalue Var 0x1e002c8d090 'i' 'size_t':'unsigned long long'
|   |   `-UnaryOperator 0x1e002c86678 <line:234:9, col:10> 'size_t':'unsigned long long' postfix '++'
|   |     `-DeclRefExpr 0x1e002c86658 <col:9> 'size_t':'unsigned long long' lvalue Var 0x1e002c8d090 'i' 'size_t':'unsigned long long'
|   |-DoStmt 0x1e002c86970 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x1e002c86930 <line:106:8, line:111:5>
|   | | `-IfStmt 0x1e002c86918 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x1e002c867d8 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x1e002c867b8 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x1e002c86798 <.//openssl//file_jk/before\test\handshake_helper.c:236:16, col:31> 'int' '>'
|   | |   |     |-BinaryOperator 0x1e002c86738 <col:16, col:22> 'unsigned long long' '-'
|   | |   |     | |-ImplicitCastExpr 0x1e002c86708 <col:16> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   |     | | `-DeclRefExpr 0x1e002c866c8 <col:16> 'size_t':'unsigned long long' lvalue Var 0x1e002c8d018 'len' 'size_t':'unsigned long long'
|   | |   |     | `-ImplicitCastExpr 0x1e002c86720 <col:22> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   |     |   `-DeclRefExpr 0x1e002c866e8 <col:22> 'size_t':'unsigned long long' lvalue Var 0x1e002c8d108 'prefix' 'size_t':'unsigned long long'
|   | |   |     `-ImplicitCastExpr 0x1e002c86780 <col:31> 'unsigned long long' <IntegralCast>
|   | |   |       `-IntegerLiteral 0x1e002c86758 <col:31> 'int' 0
|   | |   `-CompoundStmt 0x1e002c86900 <.//openssl//file_jk/before\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x1e002c868d8 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x1e002c868c0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x1e002c86810 <col:13> 'int ()' Function 0x1e002c83670 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x1e002c868a8 <col:28, <scratch space>:298:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x1e002c86890 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x1e002c86868 <col:1> 'char [17]' lvalue "len - prefix > 0"
|   | `-IntegerLiteral 0x1e002c86948 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x1e002c86990 <.//openssl//file_jk/before\test\handshake_helper.c:236:33>
|   `-BinaryOperator 0x1e002c86b20 <line:237:5, col:28> 'unsigned char' '='
|     |-ArraySubscriptExpr 0x1e002c86a58 <col:5, col:18> 'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x1e002c86a28 <col:5, col:10> 'unsigned char *' <LValueToRValue>
|     | | `-ParenExpr 0x1e002c869e8 <col:5, col:10> 'unsigned char *' lvalue
|     | |   `-UnaryOperator 0x1e002c869d0 <col:6, col:7> 'unsigned char *' lvalue prefix '*' cannot overflow
|     | |     `-ImplicitCastExpr 0x1e002c869b8 <col:7> 'unsigned char **' <LValueToRValue>
|     | |       `-DeclRefExpr 0x1e002c86998 <col:7> 'unsigned char **' lvalue ParmVar 0x1e002c8ccf8 'out' 'unsigned char **'
|     | `-ImplicitCastExpr 0x1e002c86a40 <col:12> 'size_t':'unsigned long long' <LValueToRValue>
|     |   `-DeclRefExpr 0x1e002c86a08 <col:12> 'size_t':'unsigned long long' lvalue Var 0x1e002c8d108 'prefix' 'size_t':'unsigned long long'
|     `-ImplicitCastExpr 0x1e002c86b08 <col:22, col:28> 'unsigned char' <IntegralCast>
|       `-BinaryOperator 0x1e002c86ae8 <col:22, col:28> 'unsigned long long' '-'
|         |-ImplicitCastExpr 0x1e002c86ab8 <col:22> 'size_t':'unsigned long long' <LValueToRValue>
|         | `-DeclRefExpr 0x1e002c86a78 <col:22> 'size_t':'unsigned long long' lvalue Var 0x1e002c8d018 'len' 'size_t':'unsigned long long'
|         `-ImplicitCastExpr 0x1e002c86ad0 <col:28> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x1e002c86a98 <col:28> 'size_t':'unsigned long long' lvalue Var 0x1e002c8d108 'prefix' 'size_t':'unsigned long long'
|-FunctionDecl 0x1e002c90050 <line:247:1, line:260:1> line:247:12 invalid client_npn_cb 'int (int *, unsigned char **, unsigned char *, const unsigned char *, unsigned int, void *)' static
| |-ParmVarDecl 0x1e002c8fcb0 <col:26, col:31> col:31 invalid s 'int *'
| |-ParmVarDecl 0x1e002c8fd38 <col:34, col:50> col:50 used out 'unsigned char **'
| |-ParmVarDecl 0x1e002c8fdb8 <col:55, col:70> col:70 used outlen 'unsigned char *'
| |-ParmVarDecl 0x1e002c8fe38 <line:248:26, col:47> col:47 used in 'const unsigned char *'
| |-ParmVarDecl 0x1e002c8feb8 <col:51, col:64> col:64 used inlen 'unsigned int'
| |-ParmVarDecl 0x1e002c8ff38 <line:249:26, col:32> col:32 used arg 'void *'
| `-CompoundStmt 0x1e002c90980 <line:250:1, line:260:1>
|   |-DeclStmt 0x1e002c90278 <line:251:5, col:42>
|   | `-VarDecl 0x1e002c90148 <col:5, col:41> col:15 used ctx_data 'CTX_DATA *' cinit
|   |   `-CStyleCastExpr 0x1e002c90250 <col:26, col:41> 'CTX_DATA *' <BitCast>
|   |     `-ImplicitCastExpr 0x1e002c90238 <col:37, col:41> 'void *' <LValueToRValue> part_of_explicit_cast
|   |       `-ParenExpr 0x1e002c90218 <col:37, col:41> 'void *' lvalue
|   |         `-DeclRefExpr 0x1e002c901b0 <col:38> 'void *' lvalue ParmVar 0x1e002c8ff38 'arg' 'void *'
|   |-DeclStmt 0x1e002c90310 <line:252:5, col:12>
|   | `-VarDecl 0x1e002c902a8 <col:5, col:9> col:9 used ret 'int'
|   |-BinaryOperator 0x1e002c90730 <line:254:5, line:256:60> 'int' '='
|   | |-DeclRefExpr 0x1e002c90328 <line:254:5> 'int' lvalue Var 0x1e002c902a8 'ret' 'int'
|   | `-CallExpr 0x1e002c90650 <col:11, line:256:60> 'int'
|   |   |-ImplicitCastExpr 0x1e002c90638 <line:254:11> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1e002c90450 <col:11> 'int ()' Function 0x1e002c90388 'SSL_select_next_proto' 'int ()'
|   |   |-ImplicitCastExpr 0x1e002c906a0 <col:33> 'unsigned char **' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1e002c90470 <col:33> 'unsigned char **' lvalue ParmVar 0x1e002c8fd38 'out' 'unsigned char **'
|   |   |-ImplicitCastExpr 0x1e002c906b8 <col:38> 'unsigned char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1e002c904a8 <col:38> 'unsigned char *' lvalue ParmVar 0x1e002c8fdb8 'outlen' 'unsigned char *'
|   |   |-ImplicitCastExpr 0x1e002c906d0 <col:46> 'const unsigned char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1e002c904e0 <col:46> 'const unsigned char *' lvalue ParmVar 0x1e002c8fe38 'in' 'const unsigned char *'
|   |   |-ImplicitCastExpr 0x1e002c906e8 <col:50> 'unsigned int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1e002c90518 <col:50> 'unsigned int' lvalue ParmVar 0x1e002c8feb8 'inlen' 'unsigned int'
|   |   |-ImplicitCastExpr 0x1e002c90700 <line:255:33, col:43> 'unsigned char *' <LValueToRValue>
|   |   | `-MemberExpr 0x1e002c905a0 <col:33, col:43> 'unsigned char *' lvalue ->npn_protocols 0x1e002c89630
|   |   |   `-ImplicitCastExpr 0x1e002c90588 <col:33> 'CTX_DATA *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1e002c90550 <col:33> 'CTX_DATA *' lvalue Var 0x1e002c90148 'ctx_data' 'CTX_DATA *'
|   |   `-ImplicitCastExpr 0x1e002c90718 <line:256:33, col:43> 'size_t':'unsigned long long' <LValueToRValue>
|   |     `-MemberExpr 0x1e002c90608 <col:33, col:43> 'size_t':'unsigned long long' lvalue ->npn_protocols_len 0x1e002c89698
|   |       `-ImplicitCastExpr 0x1e002c905f0 <col:33> 'CTX_DATA *' <LValueToRValue>
|   |         `-DeclRefExpr 0x1e002c905d0 <col:33> 'CTX_DATA *' lvalue Var 0x1e002c90148 'ctx_data' 'CTX_DATA *'
|   |-DoStmt 0x1e002c90958 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x1e002c90918 <line:106:8, line:111:5>
|   | | `-IfStmt 0x1e002c90900 <line:107:9, line:110:9>
|   | |   |-OpaqueValueExpr 0x1e002c908e8 <<invalid sloc>> '_Bool'
|   | |   `-CompoundStmt 0x1e002c908d0 <line:107:27, line:110:9>
|   | |     `-CallExpr 0x1e002c908a8 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x1e002c90890 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x1e002c907b0 <col:13> 'int ()' Function 0x1e002c83670 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x1e002c90878 <col:28, <scratch space>:299:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x1e002c90860 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x1e002c90808 <col:1> 'char [63]' lvalue "ret == OPENSSL_NPN_NEGOTIATED || ret == OPENSSL_NPN_NO_OVERLAP"
|   | `-IntegerLiteral 0x1e002c90930 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   `-NullStmt 0x1e002c90978 <.//openssl//file_jk/before\test\handshake_helper.c:258:79>
|-FunctionDecl 0x1e002c92cd0 <line:262:1, line:269:1> line:262:12 invalid server_npn_cb 'int (int *, const unsigned char **, unsigned int *, void *)' static
| |-ParmVarDecl 0x1e002c909d0 <col:26, col:31> col:31 invalid s 'int *'
| |-ParmVarDecl 0x1e002c90a58 <col:34, col:56> col:56 used data 'const unsigned char **'
| |-ParmVarDecl 0x1e002c90b00 <line:263:26, col:40> col:40 used len 'unsigned int *'
| |-ParmVarDecl 0x1e002c90b80 <col:45, col:51> col:51 used arg 'void *'
| `-CompoundStmt 0x1e002c93158 <line:264:1, line:269:1>
|   |-DeclStmt 0x1e002c92ee8 <line:265:5, col:42>
|   | `-VarDecl 0x1e002c92db8 <col:5, col:41> col:15 used ctx_data 'CTX_DATA *' cinit
|   |   `-CStyleCastExpr 0x1e002c92ec0 <col:26, col:41> 'CTX_DATA *' <BitCast>
|   |     `-ImplicitCastExpr 0x1e002c92ea8 <col:37, col:41> 'void *' <LValueToRValue> part_of_explicit_cast
|   |       `-ParenExpr 0x1e002c92e88 <col:37, col:41> 'void *' lvalue
|   |         `-DeclRefExpr 0x1e002c92e20 <col:38> 'void *' lvalue ParmVar 0x1e002c90b80 'arg' 'void *'
|   |-BinaryOperator 0x1e002c93018 <line:266:5, col:23> 'const unsigned char *' '='
|   | |-UnaryOperator 0x1e002c92f50 <col:5, col:6> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x1e002c92f38 <col:6> 'const unsigned char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1e002c92f00 <col:6> 'const unsigned char **' lvalue ParmVar 0x1e002c90a58 'data' 'const unsigned char **'
|   | `-ImplicitCastExpr 0x1e002c93000 <col:13, col:23> 'const unsigned char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1e002c92fe8 <col:13, col:23> 'unsigned char *' <LValueToRValue>
|   |     `-MemberExpr 0x1e002c92fb8 <col:13, col:23> 'unsigned char *' lvalue ->npn_protocols 0x1e002c89630
|   |       `-ImplicitCastExpr 0x1e002c92fa0 <col:13> 'CTX_DATA *' <LValueToRValue>
|   |         `-DeclRefExpr 0x1e002c92f68 <col:13> 'CTX_DATA *' lvalue Var 0x1e002c92db8 'ctx_data' 'CTX_DATA *'
|   `-BinaryOperator 0x1e002c93138 <line:267:5, col:22> 'unsigned int' '='
|     |-UnaryOperator 0x1e002c93088 <col:5, col:6> 'unsigned int' lvalue prefix '*' cannot overflow
|     | `-ImplicitCastExpr 0x1e002c93070 <col:6> 'unsigned int *' <LValueToRValue>
|     |   `-DeclRefExpr 0x1e002c93038 <col:6> 'unsigned int *' lvalue ParmVar 0x1e002c90b00 'len' 'unsigned int *'
|     `-ImplicitCastExpr 0x1e002c93120 <col:12, col:22> 'unsigned int' <IntegralCast>
|       `-ImplicitCastExpr 0x1e002c93108 <col:12, col:22> 'size_t':'unsigned long long' <LValueToRValue>
|         `-MemberExpr 0x1e002c930d8 <col:12, col:22> 'size_t':'unsigned long long' lvalue ->npn_protocols_len 0x1e002c89698
|           `-ImplicitCastExpr 0x1e002c930c0 <col:12> 'CTX_DATA *' <LValueToRValue>
|             `-DeclRefExpr 0x1e002c930a0 <col:12> 'CTX_DATA *' lvalue Var 0x1e002c92db8 'ctx_data' 'CTX_DATA *'
|-FunctionDecl 0x1e002c93540 <line:278:1, line:301:1> line:278:12 invalid server_alpn_cb 'int (int *, const unsigned char **, unsigned char *, const unsigned char *, unsigned int, void *)' static
| |-ParmVarDecl 0x1e002c93198 <col:27, col:32> col:32 invalid s 'int *'
| |-ParmVarDecl 0x1e002c93220 <col:35, col:57> col:57 used out 'const unsigned char **'
| |-ParmVarDecl 0x1e002c932a0 <line:279:27, col:42> col:42 used outlen 'unsigned char *'
| |-ParmVarDecl 0x1e002c93320 <col:50, col:71> col:71 used in 'const unsigned char *'
| |-ParmVarDecl 0x1e002c933a0 <line:280:27, col:40> col:40 used inlen 'unsigned int'
| |-ParmVarDecl 0x1e002c93420 <col:47, col:53> col:53 used arg 'void *'
| `-CompoundStmt 0x1e002c90cc8 <line:281:1, line:301:1>
|   |-DeclStmt 0x1e002c93768 <line:282:5, col:42>
|   | `-VarDecl 0x1e002c93638 <col:5, col:41> col:15 used ctx_data 'CTX_DATA *' cinit
|   |   `-CStyleCastExpr 0x1e002c93740 <col:26, col:41> 'CTX_DATA *' <BitCast>
|   |     `-ImplicitCastExpr 0x1e002c93728 <col:37, col:41> 'void *' <LValueToRValue> part_of_explicit_cast
|   |       `-ParenExpr 0x1e002c93708 <col:37, col:41> 'void *' lvalue
|   |         `-DeclRefExpr 0x1e002c936a0 <col:38> 'void *' lvalue ParmVar 0x1e002c93420 'arg' 'void *'
|   |-DeclStmt 0x1e002c93800 <line:283:5, col:12>
|   | `-VarDecl 0x1e002c93798 <col:5, col:9> col:9 used ret 'int'
|   |-DeclStmt 0x1e002c93898 <line:286:5, col:27>
|   | `-VarDecl 0x1e002c93830 <col:5, col:20> col:20 used tmp_out 'unsigned char *'
|   |-BinaryOperator 0x1e002c93bc8 <line:293:5, line:295:72> 'int' '='
|   | |-DeclRefExpr 0x1e002c938b0 <line:293:5> 'int' lvalue Var 0x1e002c93798 'ret' 'int'
|   | `-CallExpr 0x1e002c93b00 <col:11, line:295:72> 'int'
|   |   |-ImplicitCastExpr 0x1e002c93ae8 <line:293:11> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1e002c938e8 <col:11> 'int ()' Function 0x1e002c90388 'SSL_select_next_proto' 'int ()'
|   |   |-UnaryOperator 0x1e002c93940 <col:33, col:34> 'unsigned char **' prefix '&' cannot overflow
|   |   | `-DeclRefExpr 0x1e002c93908 <col:34> 'unsigned char *' lvalue Var 0x1e002c93830 'tmp_out' 'unsigned char *'
|   |   |-ImplicitCastExpr 0x1e002c93b50 <col:43> 'unsigned char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1e002c93958 <col:43> 'unsigned char *' lvalue ParmVar 0x1e002c932a0 'outlen' 'unsigned char *'
|   |   |-ImplicitCastExpr 0x1e002c93b68 <line:294:33, col:43> 'unsigned char *' <LValueToRValue>
|   |   | `-MemberExpr 0x1e002c939e0 <col:33, col:43> 'unsigned char *' lvalue ->alpn_protocols 0x1e002c89708
|   |   |   `-ImplicitCastExpr 0x1e002c939c8 <col:33> 'CTX_DATA *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1e002c93990 <col:33> 'CTX_DATA *' lvalue Var 0x1e002c93638 'ctx_data' 'CTX_DATA *'
|   |   |-ImplicitCastExpr 0x1e002c93b80 <line:295:33, col:43> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-MemberExpr 0x1e002c93a48 <col:33, col:43> 'size_t':'unsigned long long' lvalue ->alpn_protocols_len 0x1e002c89770
|   |   |   `-ImplicitCastExpr 0x1e002c93a30 <col:33> 'CTX_DATA *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1e002c93a10 <col:33> 'CTX_DATA *' lvalue Var 0x1e002c93638 'ctx_data' 'CTX_DATA *'
|   |   |-ImplicitCastExpr 0x1e002c93b98 <col:63> 'const unsigned char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1e002c93a78 <col:63> 'const unsigned char *' lvalue ParmVar 0x1e002c93320 'in' 'const unsigned char *'
|   |   `-ImplicitCastExpr 0x1e002c93bb0 <col:67> 'unsigned int' <LValueToRValue>
|   |     `-DeclRefExpr 0x1e002c93ab0 <col:67> 'unsigned int' lvalue ParmVar 0x1e002c933a0 'inlen' 'unsigned int'
|   `-BinaryOperator 0x1e002c90c88 <line:297:5, col:12> 'const unsigned char *' '='
|     |-UnaryOperator 0x1e002c90c20 <col:5, col:6> 'const unsigned char *' lvalue prefix '*' cannot overflow
|     | `-ImplicitCastExpr 0x1e002c93c20 <col:6> 'const unsigned char **' <LValueToRValue>
|     |   `-DeclRefExpr 0x1e002c93be8 <col:6> 'const unsigned char **' lvalue ParmVar 0x1e002c93220 'out' 'const unsigned char **'
|     `-ImplicitCastExpr 0x1e002c90c70 <col:12> 'const unsigned char *' <NoOp>
|       `-ImplicitCastExpr 0x1e002c90c58 <col:12> 'unsigned char *' <LValueToRValue>
|         `-DeclRefExpr 0x1e002c90c38 <col:12> 'unsigned char *' lvalue Var 0x1e002c93830 'tmp_out' 'unsigned char *'
|-FunctionDecl 0x1e002c91278 <line:307:1, line:449:1> line:307:13 invalid configure_handshake_ctx 'void (int *, int *, int *, const SSL_TEST_CTX *, const SSL_TEST_EXTRA_CONF *, CTX_DATA *, CTX_DATA *, CTX_DATA *)' static
| |-ParmVarDecl 0x1e002c90d18 <col:37, col:46> col:46 invalid server_ctx 'int *'
| |-ParmVarDecl 0x1e002c90d98 <col:58, col:67> col:67 invalid server2_ctx 'int *'
| |-ParmVarDecl 0x1e002c90e18 <line:308:37, col:46> col:46 invalid client_ctx 'int *'
| |-ParmVarDecl 0x1e002c90e90 <line:309:37, col:57> col:57 used test 'const SSL_TEST_CTX *'
| |-ParmVarDecl 0x1e002c90f68 <line:310:37, col:64> col:64 used extra 'const SSL_TEST_EXTRA_CONF *'
| |-ParmVarDecl 0x1e002c90fe0 <line:311:37, col:47> col:47 used server_ctx_data 'CTX_DATA *'
| |-ParmVarDecl 0x1e002c91058 <line:312:37, col:47> col:47 used server2_ctx_data 'CTX_DATA *'
| |-ParmVarDecl 0x1e002c910d0 <line:313:37, col:47> col:47 used client_ctx_data 'CTX_DATA *'
| `-CompoundStmt 0x1e002c8faf0 <line:314:1, line:449:1>
|   |-DeclStmt 0x1e002c913f0 <line:315:5, col:31>
|   | `-VarDecl 0x1e002c91388 <col:5, col:20> col:20 used ticket_keys 'unsigned char *'
|   |-DeclStmt 0x1e002c91480 <line:316:5, col:26>
|   | `-VarDecl 0x1e002c91418 <col:5, col:12> col:12 used ticket_key_len 'size_t':'unsigned long long'
|   |-DoStmt 0x1e002c91820 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x1e002c917e0 <line:106:8, line:111:5>
|   | | `-IfStmt 0x1e002c917c8 <line:107:9, line:110:9>
|   | |   |-OpaqueValueExpr 0x1e002c917b0 <<invalid sloc>> '_Bool'
|   | |   `-CompoundStmt 0x1e002c91798 <line:107:27, line:110:9>
|   | |     `-CallExpr 0x1e002c91770 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x1e002c91758 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x1e002c91670 <col:13> 'int ()' Function 0x1e002c83670 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x1e002c91740 <col:28, <scratch space>:300:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x1e002c91728 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x1e002c916c8 <col:1> 'char [72]' lvalue "SSL_CTX_set_max_send_fragment(server_ctx, test->max_fragment_size) == 1"
|   | `-IntegerLiteral 0x1e002c917f8 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x1e002c91840 <.//openssl//file_jk/before\test\handshake_helper.c:319:76>
|   |-IfStmt 0x1e002c91bb0 <line:320:5, line:323:5>
|   | |-OpaqueValueExpr 0x1e002c91b98 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1e002c91b78 <line:320:30, line:323:5>
|   |   |-DoStmt 0x1e002c91b50 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   |   | |-CompoundStmt 0x1e002c91b10 <line:106:8, line:111:5>
|   |   | | `-IfStmt 0x1e002c91af8 <line:107:9, line:110:9>
|   |   | |   |-OpaqueValueExpr 0x1e002c91ae0 <<invalid sloc>> '_Bool'
|   |   | |   `-CompoundStmt 0x1e002c91ac8 <line:107:27, line:110:9>
|   |   | |     `-CallExpr 0x1e002c91aa0 <line:109:13, col:39> 'int'
|   |   | |       |-ImplicitCastExpr 0x1e002c91a88 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   | |       | `-DeclRefExpr 0x1e002c919a0 <col:13> 'int ()' Function 0x1e002c83670 'OPENSSL_assert' 'int ()'
|   |   | |       `-UnaryOperator 0x1e002c91a70 <col:28, <scratch space>:2:1> 'int' prefix '!' cannot overflow
|   |   | |         `-ImplicitCastExpr 0x1e002c91a58 <col:1> 'char *' <ArrayToPointerDecay>
|   |   | |           `-StringLiteral 0x1e002c919f8 <col:1> 'char [73]' lvalue "SSL_CTX_set_max_send_fragment(server2_ctx, test->max_fragment_size) == 1"
|   |   | `-IntegerLiteral 0x1e002c91b28 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |   `-NullStmt 0x1e002c91b70 <.//openssl//file_jk/before\test\handshake_helper.c:322:80>
|   |-DoStmt 0x1e002c95e60 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x1e002c95e20 <line:106:8, line:111:5>
|   | | `-IfStmt 0x1e002c95e08 <line:107:9, line:110:9>
|   | |   |-OpaqueValueExpr 0x1e002c95df0 <<invalid sloc>> '_Bool'
|   | |   `-CompoundStmt 0x1e002c95dd8 <line:107:27, line:110:9>
|   | |     `-CallExpr 0x1e002c95db0 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x1e002c95d98 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x1e002c95ce8 <col:13> 'int ()' Function 0x1e002c83670 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x1e002c95d80 <col:28, <scratch space>:3:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x1e002c95d68 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x1e002c95d08 <col:1> 'char [72]' lvalue "SSL_CTX_set_max_send_fragment(client_ctx, test->max_fragment_size) == 1"
|   | `-IntegerLiteral 0x1e002c95e38 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x1e002c95e80 <.//openssl//file_jk/before\test\handshake_helper.c:325:76>
|   |-SwitchStmt 0x1e002c95f68 <line:327:5, line:338:5>
|   | |-ImplicitCastExpr 0x1e002c95f50 <line:327:13, col:27> 'int' <IntegralCast>
|   | | `-ImplicitCastExpr 0x1e002c95f38 <col:13, col:27> 'ssl_verify_callback_t':'ssl_verify_callback_t' <LValueToRValue>
|   | |   `-MemberExpr 0x1e002c95f08 <col:13, col:27> 'const ssl_verify_callback_t':'const ssl_verify_callback_t' lvalue .verify_callback 0x1e002ce1630
|   | |     `-MemberExpr 0x1e002c95ed8 <col:13, col:20> 'const SSL_TEST_CLIENT_CONF':'const SSL_TEST_CLIENT_CONF' lvalue ->client 0x1e002ce1ea0
|   | |       `-ImplicitCastExpr 0x1e002c95ec0 <col:13> 'const SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   | |         `-DeclRefExpr 0x1e002c95e88 <col:13> 'const SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x1e002c90f68 'extra' 'const SSL_TEST_EXTRA_CONF *'
|   | `-CompoundStmt 0x1e002c962d0 <col:44, line:338:5>
|   |   |-CaseStmt 0x1e002c95fc0 <line:328:5, <invalid sloc>>
|   |   | |-ConstantExpr 0x1e002c95fa8 <col:10> 'int'
|   |   | | `-DeclRefExpr 0x1e002c95f88 <col:10> 'int' EnumConstant 0x1e002cd3db8 'SSL_TEST_VERIFY_ACCEPT_ALL' 'int'
|   |   | `-NullStmt 0x1e002c96180 <<invalid sloc>>
|   |   |-BreakStmt 0x1e002c96188 <line:331:9>
|   |   |-CaseStmt 0x1e002c961c8 <line:332:5, <invalid sloc>>
|   |   | |-ConstantExpr 0x1e002c961b0 <col:10> 'int'
|   |   | | `-DeclRefExpr 0x1e002c96190 <col:10> 'int' EnumConstant 0x1e002cd3e10 'SSL_TEST_VERIFY_REJECT_ALL' 'int'
|   |   | `-NullStmt 0x1e002c96298 <<invalid sloc>>
|   |   |-BreakStmt 0x1e002c962a0 <line:335:9>
|   |   `-DefaultStmt 0x1e002c962b0 <line:336:5, line:337:9>
|   |     `-BreakStmt 0x1e002c962a8 <col:9>
|   |-SwitchStmt 0x1e002c963d0 <line:341:5, line:352:5>
|   | |-ImplicitCastExpr 0x1e002c963b8 <line:341:13, col:27> 'int' <IntegralCast>
|   | | `-ImplicitCastExpr 0x1e002c963a0 <col:13, col:27> 'ssl_servername_callback_t':'ssl_servername_callback_t' <LValueToRValue>
|   | |   `-MemberExpr 0x1e002c96370 <col:13, col:27> 'const ssl_servername_callback_t':'const ssl_servername_callback_t' lvalue .servername_callback 0x1e002ce1ab0
|   | |     `-MemberExpr 0x1e002c96340 <col:13, col:20> 'const SSL_TEST_SERVER_CONF':'const SSL_TEST_SERVER_CONF' lvalue ->server 0x1e002ce1f30
|   | |       `-ImplicitCastExpr 0x1e002c96328 <col:13> 'const SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   | |         `-DeclRefExpr 0x1e002c96308 <col:13> 'const SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x1e002c90f68 'extra' 'const SSL_TEST_EXTRA_CONF *'
|   | `-CompoundStmt 0x1e002c96758 <col:48, line:352:5>
|   |   |-CaseStmt 0x1e002c96428 <line:342:5, <invalid sloc>>
|   |   | |-ConstantExpr 0x1e002c96410 <col:10> 'int'
|   |   | | `-DeclRefExpr 0x1e002c963f0 <col:10> 'int' EnumConstant 0x1e002cd4408 'SSL_TEST_SERVERNAME_IGNORE_MISMATCH' 'int'
|   |   | `-NullStmt 0x1e002c96560 <<invalid sloc>>
|   |   |-BreakStmt 0x1e002c96678 <line:345:9>
|   |   |-CaseStmt 0x1e002c966b8 <line:346:5, <invalid sloc>>
|   |   | |-ConstantExpr 0x1e002c966a0 <col:10> 'int'
|   |   | | `-DeclRefExpr 0x1e002c96680 <col:10> 'int' EnumConstant 0x1e002cd4460 'SSL_TEST_SERVERNAME_REJECT_MISMATCH' 'int'
|   |   | `-NullStmt 0x1e002c96700 <<invalid sloc>>
|   |   |-BreakStmt 0x1e002c96728 <line:349:9>
|   |   `-DefaultStmt 0x1e002c96738 <line:350:5, line:351:9>
|   |     `-BreakStmt 0x1e002c96730 <col:9>
|   |-IfStmt 0x1e002c91f10 <line:354:5, line:362:5>
|   | |-BinaryOperator 0x1e002c96878 <line:354:9, col:38> 'int' '!='
|   | | |-ImplicitCastExpr 0x1e002c96860 <col:9, col:23> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x1e002c96848 <col:9, col:23> 'ssl_cert_status_t':'ssl_cert_status_t' <LValueToRValue>
|   | | |   `-MemberExpr 0x1e002c967f8 <col:9, col:23> 'const ssl_cert_status_t':'const ssl_cert_status_t' lvalue .cert_status 0x1e002ce1c90
|   | | |     `-MemberExpr 0x1e002c967c8 <col:9, col:16> 'const SSL_TEST_SERVER_CONF':'const SSL_TEST_SERVER_CONF' lvalue ->server 0x1e002ce1f30
|   | | |       `-ImplicitCastExpr 0x1e002c967b0 <col:9> 'const SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   | | |         `-DeclRefExpr 0x1e002c96790 <col:9> 'const SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x1e002c90f68 'extra' 'const SSL_TEST_EXTRA_CONF *'
|   | | `-DeclRefExpr 0x1e002c96828 <col:38> 'int' EnumConstant 0x1e002ce1370 'SSL_TEST_CERT_STATUS_NONE' 'int'
|   | `-CompoundStmt 0x1e002c91f00 <col:65, line:362:5>
|   |-IfStmt 0x1e002c921a0 <line:373:5, line:375:5>
|   | |-ImplicitCastExpr 0x1e002c92158 <line:373:9, col:23> 'int' <LValueToRValue>
|   | | `-MemberExpr 0x1e002c92128 <col:9, col:23> 'const int' lvalue .broken_session_ticket 0x1e002ce1c00
|   | |   `-MemberExpr 0x1e002c920f8 <col:9, col:16> 'const SSL_TEST_SERVER_CONF':'const SSL_TEST_SERVER_CONF' lvalue ->server 0x1e002ce1f30
|   | |     `-ImplicitCastExpr 0x1e002c920e0 <col:9> 'const SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x1e002c920c0 <col:9> 'const SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x1e002c90f68 'extra' 'const SSL_TEST_EXTRA_CONF *'
|   | `-CompoundStmt 0x1e002c92190 <col:46, line:375:5>
|   |-IfStmt 0x1e002c92720 <line:377:5, line:383:5>
|   | |-BinaryOperator 0x1e002c92308 <line:377:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x1e002c922d8 <.//openssl//file_jk/before\test\handshake_helper.c:377:9, col:23> 'char *' <LValueToRValue>
|   | | | `-MemberExpr 0x1e002c92220 <col:9, col:23> 'char *const' lvalue .npn_protocols 0x1e002ce1b20
|   | | |   `-MemberExpr 0x1e002c921f0 <col:9, col:16> 'const SSL_TEST_SERVER_CONF':'const SSL_TEST_SERVER_CONF' lvalue ->server 0x1e002ce1f30
|   | | |     `-ImplicitCastExpr 0x1e002c921d8 <col:9> 'const SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x1e002c921b8 <col:9> 'const SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x1e002c90f68 'extra' 'const SSL_TEST_EXTRA_CONF *'
|   | | `-ImplicitCastExpr 0x1e002c922f0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x1e002c922b8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1e002c92290 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1e002c92250 <col:26> 'int' 0
|   | `-CompoundStmt 0x1e002c92708 <.//openssl//file_jk/before\test\handshake_helper.c:377:46, line:383:5>
|   |   `-CallExpr 0x1e002c92570 <line:378:9, line:380:57> 'void'
|   |     |-ImplicitCastExpr 0x1e002c92558 <line:378:9> 'void (*)(const char *, unsigned char **, size_t *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1e002c92328 <col:9> 'void (const char *, unsigned char **, size_t *)' Function 0x1e002c8cf38 'parse_protos' 'void (const char *, unsigned char **, size_t *)'
|   |     |-ImplicitCastExpr 0x1e002c925c0 <col:22, col:36> 'const char *' <NoOp>
|   |     | `-ImplicitCastExpr 0x1e002c925a8 <col:22, col:36> 'char *' <LValueToRValue>
|   |     |   `-MemberExpr 0x1e002c923b0 <col:22, col:36> 'char *const' lvalue .npn_protocols 0x1e002ce1b20
|   |     |     `-MemberExpr 0x1e002c92380 <col:22, col:29> 'const SSL_TEST_SERVER_CONF':'const SSL_TEST_SERVER_CONF' lvalue ->server 0x1e002ce1f30
|   |     |       `-ImplicitCastExpr 0x1e002c92368 <col:22> 'const SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   |     |         `-DeclRefExpr 0x1e002c92348 <col:22> 'const SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x1e002c90f68 'extra' 'const SSL_TEST_EXTRA_CONF *'
|   |     |-UnaryOperator 0x1e002c92460 <line:379:22, col:40> 'unsigned char **' prefix '&' cannot overflow
|   |     | `-MemberExpr 0x1e002c92430 <col:23, col:40> 'unsigned char *' lvalue ->npn_protocols 0x1e002c89630
|   |     |   `-ImplicitCastExpr 0x1e002c92418 <col:23> 'CTX_DATA *' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x1e002c923e0 <col:23> 'CTX_DATA *' lvalue ParmVar 0x1e002c90fe0 'server_ctx_data' 'CTX_DATA *'
|   |     `-UnaryOperator 0x1e002c924e0 <line:380:22, col:40> 'size_t *' prefix '&' cannot overflow
|   |       `-MemberExpr 0x1e002c924b0 <col:23, col:40> 'size_t':'unsigned long long' lvalue ->npn_protocols_len 0x1e002c89698
|   |         `-ImplicitCastExpr 0x1e002c92498 <col:23> 'CTX_DATA *' <LValueToRValue>
|   |           `-DeclRefExpr 0x1e002c92478 <col:23> 'CTX_DATA *' lvalue ParmVar 0x1e002c90fe0 'server_ctx_data' 'CTX_DATA *'
|   |-IfStmt 0x1e002c93dd8 <line:384:5, line:391:5>
|   | |-BinaryOperator 0x1e002c92888 <line:384:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x1e002c92858 <.//openssl//file_jk/before\test\handshake_helper.c:384:9, col:24> 'char *' <LValueToRValue>
|   | | | `-MemberExpr 0x1e002c927a0 <col:9, col:24> 'char *const' lvalue .npn_protocols 0x1e002ce1b20
|   | | |   `-MemberExpr 0x1e002c92770 <col:9, col:16> 'const SSL_TEST_SERVER_CONF':'const SSL_TEST_SERVER_CONF' lvalue ->server2 0x1e002ce1f98
|   | | |     `-ImplicitCastExpr 0x1e002c92758 <col:9> 'const SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x1e002c92738 <col:9> 'const SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x1e002c90f68 'extra' 'const SSL_TEST_EXTRA_CONF *'
|   | | `-ImplicitCastExpr 0x1e002c92870 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x1e002c92838 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1e002c92810 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1e002c927d0 <col:26> 'int' 0
|   | `-CompoundStmt 0x1e002c93db0 <.//openssl//file_jk/before\test\handshake_helper.c:384:47, line:391:5>
|   |   |-CallExpr 0x1e002c92a90 <line:385:9, line:387:58> 'void'
|   |   | |-ImplicitCastExpr 0x1e002c92a78 <line:385:9> 'void (*)(const char *, unsigned char **, size_t *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1e002c928a8 <col:9> 'void (const char *, unsigned char **, size_t *)' Function 0x1e002c8cf38 'parse_protos' 'void (const char *, unsigned char **, size_t *)'
|   |   | |-ImplicitCastExpr 0x1e002c92ae0 <col:22, col:37> 'const char *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x1e002c92ac8 <col:22, col:37> 'char *' <LValueToRValue>
|   |   | |   `-MemberExpr 0x1e002c92930 <col:22, col:37> 'char *const' lvalue .npn_protocols 0x1e002ce1b20
|   |   | |     `-MemberExpr 0x1e002c92900 <col:22, col:29> 'const SSL_TEST_SERVER_CONF':'const SSL_TEST_SERVER_CONF' lvalue ->server2 0x1e002ce1f98
|   |   | |       `-ImplicitCastExpr 0x1e002c928e8 <col:22> 'const SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   |   | |         `-DeclRefExpr 0x1e002c928c8 <col:22> 'const SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x1e002c90f68 'extra' 'const SSL_TEST_EXTRA_CONF *'
|   |   | |-UnaryOperator 0x1e002c929e0 <line:386:22, col:41> 'unsigned char **' prefix '&' cannot overflow
|   |   | | `-MemberExpr 0x1e002c929b0 <col:23, col:41> 'unsigned char *' lvalue ->npn_protocols 0x1e002c89630
|   |   | |   `-ImplicitCastExpr 0x1e002c92998 <col:23> 'CTX_DATA *' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x1e002c92960 <col:23> 'CTX_DATA *' lvalue ParmVar 0x1e002c91058 'server2_ctx_data' 'CTX_DATA *'
|   |   | `-UnaryOperator 0x1e002c92a60 <line:387:22, col:41> 'size_t *' prefix '&' cannot overflow
|   |   |   `-MemberExpr 0x1e002c92a30 <col:23, col:41> 'size_t':'unsigned long long' lvalue ->npn_protocols_len 0x1e002c89698
|   |   |     `-ImplicitCastExpr 0x1e002c92a18 <col:23> 'CTX_DATA *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x1e002c929f8 <col:23> 'CTX_DATA *' lvalue ParmVar 0x1e002c91058 'server2_ctx_data' 'CTX_DATA *'
|   |   |-DoStmt 0x1e002c93d48 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   |   | |-CompoundStmt 0x1e002c93d08 <line:106:8, line:111:5>
|   |   | | `-IfStmt 0x1e002c93cf0 <line:107:9, line:110:9>
|   |   | |   |-OpaqueValueExpr 0x1e002c93cd8 <<invalid sloc>> '_Bool'
|   |   | |   `-CompoundStmt 0x1e002c93cc0 <line:107:27, line:110:9>
|   |   | |     `-CallExpr 0x1e002c93c98 <line:109:13, col:39> 'int'
|   |   | |       |-ImplicitCastExpr 0x1e002c93c80 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   | |       | `-DeclRefExpr 0x1e002c92ba0 <col:13> 'int ()' Function 0x1e002c83670 'OPENSSL_assert' 'int ()'
|   |   | |       `-UnaryOperator 0x1e002c93c68 <col:28, <scratch space>:4:1> 'int' prefix '!' cannot overflow
|   |   | |         `-ImplicitCastExpr 0x1e002c93c50 <col:1> 'char *' <ArrayToPointerDecay>
|   |   | |           `-StringLiteral 0x1e002c92bf8 <col:1> 'char [20]' lvalue "server2_ctx != NULL"
|   |   | `-IntegerLiteral 0x1e002c93d20 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |   `-NullStmt 0x1e002c93d68 <.//openssl//file_jk/before\test\handshake_helper.c:388:40>
|   |-IfStmt 0x1e002c942f8 <line:392:5, line:398:5>
|   | |-BinaryOperator 0x1e002c93f40 <line:392:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x1e002c93f10 <.//openssl//file_jk/before\test\handshake_helper.c:392:9, col:23> 'char *' <LValueToRValue>
|   | | | `-MemberExpr 0x1e002c93e58 <col:9, col:23> 'char *const' lvalue .npn_protocols 0x1e002ce1730
|   | | |   `-MemberExpr 0x1e002c93e28 <col:9, col:16> 'const SSL_TEST_CLIENT_CONF':'const SSL_TEST_CLIENT_CONF' lvalue ->client 0x1e002ce1ea0
|   | | |     `-ImplicitCastExpr 0x1e002c93e10 <col:9> 'const SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x1e002c93df0 <col:9> 'const SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x1e002c90f68 'extra' 'const SSL_TEST_EXTRA_CONF *'
|   | | `-ImplicitCastExpr 0x1e002c93f28 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x1e002c93ef0 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1e002c93ec8 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1e002c93e88 <col:26> 'int' 0
|   | `-CompoundStmt 0x1e002c942e0 <.//openssl//file_jk/before\test\handshake_helper.c:392:46, line:398:5>
|   |   `-CallExpr 0x1e002c94148 <line:393:9, line:395:57> 'void'
|   |     |-ImplicitCastExpr 0x1e002c94130 <line:393:9> 'void (*)(const char *, unsigned char **, size_t *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1e002c93f60 <col:9> 'void (const char *, unsigned char **, size_t *)' Function 0x1e002c8cf38 'parse_protos' 'void (const char *, unsigned char **, size_t *)'
|   |     |-ImplicitCastExpr 0x1e002c94198 <col:22, col:36> 'const char *' <NoOp>
|   |     | `-ImplicitCastExpr 0x1e002c94180 <col:22, col:36> 'char *' <LValueToRValue>
|   |     |   `-MemberExpr 0x1e002c93fe8 <col:22, col:36> 'char *const' lvalue .npn_protocols 0x1e002ce1730
|   |     |     `-MemberExpr 0x1e002c93fb8 <col:22, col:29> 'const SSL_TEST_CLIENT_CONF':'const SSL_TEST_CLIENT_CONF' lvalue ->client 0x1e002ce1ea0
|   |     |       `-ImplicitCastExpr 0x1e002c93fa0 <col:22> 'const SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   |     |         `-DeclRefExpr 0x1e002c93f80 <col:22> 'const SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x1e002c90f68 'extra' 'const SSL_TEST_EXTRA_CONF *'
|   |     |-UnaryOperator 0x1e002c94098 <line:394:22, col:40> 'unsigned char **' prefix '&' cannot overflow
|   |     | `-MemberExpr 0x1e002c94068 <col:23, col:40> 'unsigned char *' lvalue ->npn_protocols 0x1e002c89630
|   |     |   `-ImplicitCastExpr 0x1e002c94050 <col:23> 'CTX_DATA *' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x1e002c94018 <col:23> 'CTX_DATA *' lvalue ParmVar 0x1e002c910d0 'client_ctx_data' 'CTX_DATA *'
|   |     `-UnaryOperator 0x1e002c94118 <line:395:22, col:40> 'size_t *' prefix '&' cannot overflow
|   |       `-MemberExpr 0x1e002c940e8 <col:23, col:40> 'size_t':'unsigned long long' lvalue ->npn_protocols_len 0x1e002c89698
|   |         `-ImplicitCastExpr 0x1e002c940d0 <col:23> 'CTX_DATA *' <LValueToRValue>
|   |           `-DeclRefExpr 0x1e002c940b0 <col:23> 'CTX_DATA *' lvalue ParmVar 0x1e002c910d0 'client_ctx_data' 'CTX_DATA *'
|   |-IfStmt 0x1e002c94800 <line:400:5, line:405:5>
|   | |-BinaryOperator 0x1e002c94460 <line:400:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x1e002c94430 <.//openssl//file_jk/before\test\handshake_helper.c:400:9, col:23> 'char *' <LValueToRValue>
|   | | | `-MemberExpr 0x1e002c94378 <col:9, col:23> 'char *const' lvalue .alpn_protocols 0x1e002ce1b90
|   | | |   `-MemberExpr 0x1e002c94348 <col:9, col:16> 'const SSL_TEST_SERVER_CONF':'const SSL_TEST_SERVER_CONF' lvalue ->server 0x1e002ce1f30
|   | | |     `-ImplicitCastExpr 0x1e002c94330 <col:9> 'const SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x1e002c94310 <col:9> 'const SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x1e002c90f68 'extra' 'const SSL_TEST_EXTRA_CONF *'
|   | | `-ImplicitCastExpr 0x1e002c94448 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x1e002c94410 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1e002c943e8 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1e002c943a8 <col:26> 'int' 0
|   | `-CompoundStmt 0x1e002c947e8 <.//openssl//file_jk/before\test\handshake_helper.c:400:47, line:405:5>
|   |   `-CallExpr 0x1e002c94650 <line:401:9, line:403:58> 'void'
|   |     |-ImplicitCastExpr 0x1e002c94638 <line:401:9> 'void (*)(const char *, unsigned char **, size_t *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1e002c94480 <col:9> 'void (const char *, unsigned char **, size_t *)' Function 0x1e002c8cf38 'parse_protos' 'void (const char *, unsigned char **, size_t *)'
|   |     |-ImplicitCastExpr 0x1e002c946a0 <col:22, col:36> 'const char *' <NoOp>
|   |     | `-ImplicitCastExpr 0x1e002c94688 <col:22, col:36> 'char *' <LValueToRValue>
|   |     |   `-MemberExpr 0x1e002c94508 <col:22, col:36> 'char *const' lvalue .alpn_protocols 0x1e002ce1b90
|   |     |     `-MemberExpr 0x1e002c944d8 <col:22, col:29> 'const SSL_TEST_SERVER_CONF':'const SSL_TEST_SERVER_CONF' lvalue ->server 0x1e002ce1f30
|   |     |       `-ImplicitCastExpr 0x1e002c944c0 <col:22> 'const SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   |     |         `-DeclRefExpr 0x1e002c944a0 <col:22> 'const SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x1e002c90f68 'extra' 'const SSL_TEST_EXTRA_CONF *'
|   |     |-UnaryOperator 0x1e002c945a0 <line:402:22, col:40> 'unsigned char **' prefix '&' cannot overflow
|   |     | `-MemberExpr 0x1e002c94570 <col:23, col:40> 'unsigned char *' lvalue ->alpn_protocols 0x1e002c89708
|   |     |   `-ImplicitCastExpr 0x1e002c94558 <col:23> 'CTX_DATA *' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x1e002c94538 <col:23> 'CTX_DATA *' lvalue ParmVar 0x1e002c90fe0 'server_ctx_data' 'CTX_DATA *'
|   |     `-UnaryOperator 0x1e002c94620 <line:403:22, col:40> 'size_t *' prefix '&' cannot overflow
|   |       `-MemberExpr 0x1e002c945f0 <col:23, col:40> 'size_t':'unsigned long long' lvalue ->alpn_protocols_len 0x1e002c89770
|   |         `-ImplicitCastExpr 0x1e002c945d8 <col:23> 'CTX_DATA *' <LValueToRValue>
|   |           `-DeclRefExpr 0x1e002c945b8 <col:23> 'CTX_DATA *' lvalue ParmVar 0x1e002c90fe0 'server_ctx_data' 'CTX_DATA *'
|   |-IfStmt 0x1e002c94e78 <line:406:5, line:412:5>
|   | |-BinaryOperator 0x1e002c94968 <line:406:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x1e002c94938 <.//openssl//file_jk/before\test\handshake_helper.c:406:9, col:24> 'char *' <LValueToRValue>
|   | | | `-MemberExpr 0x1e002c94880 <col:9, col:24> 'char *const' lvalue .alpn_protocols 0x1e002ce1b90
|   | | |   `-MemberExpr 0x1e002c94850 <col:9, col:16> 'const SSL_TEST_SERVER_CONF':'const SSL_TEST_SERVER_CONF' lvalue ->server2 0x1e002ce1f98
|   | | |     `-ImplicitCastExpr 0x1e002c94838 <col:9> 'const SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x1e002c94818 <col:9> 'const SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x1e002c90f68 'extra' 'const SSL_TEST_EXTRA_CONF *'
|   | | `-ImplicitCastExpr 0x1e002c94950 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x1e002c94918 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1e002c948f0 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1e002c948b0 <col:26> 'int' 0
|   | `-CompoundStmt 0x1e002c94e50 <.//openssl//file_jk/before\test\handshake_helper.c:406:48, line:412:5>
|   |   |-DoStmt 0x1e002c94b78 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   |   | |-CompoundStmt 0x1e002c94b38 <line:106:8, line:111:5>
|   |   | | `-IfStmt 0x1e002c94b20 <line:107:9, line:110:9>
|   |   | |   |-OpaqueValueExpr 0x1e002c94b08 <<invalid sloc>> '_Bool'
|   |   | |   `-CompoundStmt 0x1e002c94af0 <line:107:27, line:110:9>
|   |   | |     `-CallExpr 0x1e002c94ac8 <line:109:13, col:39> 'int'
|   |   | |       |-ImplicitCastExpr 0x1e002c94ab0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   | |       | `-DeclRefExpr 0x1e002c94a30 <col:13> 'int ()' Function 0x1e002c83670 'OPENSSL_assert' 'int ()'
|   |   | |       `-UnaryOperator 0x1e002c94a98 <col:28, <scratch space>:5:1> 'int' prefix '!' cannot overflow
|   |   | |         `-ImplicitCastExpr 0x1e002c94a80 <col:1> 'char *' <ArrayToPointerDecay>
|   |   | |           `-StringLiteral 0x1e002c94a50 <col:1> 'char [20]' lvalue "server2_ctx != NULL"
|   |   | `-IntegerLiteral 0x1e002c94b50 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |   |-NullStmt 0x1e002c94b98 <.//openssl//file_jk/before\test\handshake_helper.c:407:40>
|   |   `-CallExpr 0x1e002c94da8 <line:408:9, line:410:59> 'void'
|   |     |-ImplicitCastExpr 0x1e002c94d90 <line:408:9> 'void (*)(const char *, unsigned char **, size_t *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1e002c94ba0 <col:9> 'void (const char *, unsigned char **, size_t *)' Function 0x1e002c8cf38 'parse_protos' 'void (const char *, unsigned char **, size_t *)'
|   |     |-ImplicitCastExpr 0x1e002c94df8 <col:22, col:37> 'const char *' <NoOp>
|   |     | `-ImplicitCastExpr 0x1e002c94de0 <col:22, col:37> 'char *' <LValueToRValue>
|   |     |   `-MemberExpr 0x1e002c94c60 <col:22, col:37> 'char *const' lvalue .alpn_protocols 0x1e002ce1b90
|   |     |     `-MemberExpr 0x1e002c94bf8 <col:22, col:29> 'const SSL_TEST_SERVER_CONF':'const SSL_TEST_SERVER_CONF' lvalue ->server2 0x1e002ce1f98
|   |     |       `-ImplicitCastExpr 0x1e002c94be0 <col:22> 'const SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   |     |         `-DeclRefExpr 0x1e002c94bc0 <col:22> 'const SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x1e002c90f68 'extra' 'const SSL_TEST_EXTRA_CONF *'
|   |     |-UnaryOperator 0x1e002c94cf8 <line:409:22, col:41> 'unsigned char **' prefix '&' cannot overflow
|   |     | `-MemberExpr 0x1e002c94cc8 <col:23, col:41> 'unsigned char *' lvalue ->alpn_protocols 0x1e002c89708
|   |     |   `-ImplicitCastExpr 0x1e002c94cb0 <col:23> 'CTX_DATA *' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x1e002c94c90 <col:23> 'CTX_DATA *' lvalue ParmVar 0x1e002c91058 'server2_ctx_data' 'CTX_DATA *'
|   |     `-UnaryOperator 0x1e002c94d78 <line:410:22, col:41> 'size_t *' prefix '&' cannot overflow
|   |       `-MemberExpr 0x1e002c94d48 <col:23, col:41> 'size_t':'unsigned long long' lvalue ->alpn_protocols_len 0x1e002c89770
|   |         `-ImplicitCastExpr 0x1e002c94d30 <col:23> 'CTX_DATA *' <LValueToRValue>
|   |           `-DeclRefExpr 0x1e002c94d10 <col:23> 'CTX_DATA *' lvalue ParmVar 0x1e002c91058 'server2_ctx_data' 'CTX_DATA *'
|   |-IfStmt 0x1e002c957f0 <line:413:5, line:422:5>
|   | |-BinaryOperator 0x1e002c94fe0 <line:413:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x1e002c94fb0 <.//openssl//file_jk/before\test\handshake_helper.c:413:9, col:23> 'char *' <LValueToRValue>
|   | | | `-MemberExpr 0x1e002c94ef8 <col:9, col:23> 'char *const' lvalue .alpn_protocols 0x1e002ce17a0
|   | | |   `-MemberExpr 0x1e002c94ec8 <col:9, col:16> 'const SSL_TEST_CLIENT_CONF':'const SSL_TEST_CLIENT_CONF' lvalue ->client 0x1e002ce1ea0
|   | | |     `-ImplicitCastExpr 0x1e002c94eb0 <col:9> 'const SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x1e002c94e90 <col:9> 'const SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x1e002c90f68 'extra' 'const SSL_TEST_EXTRA_CONF *'
|   | | `-ImplicitCastExpr 0x1e002c94fc8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x1e002c94f90 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1e002c94f68 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1e002c94f28 <col:26> 'int' 0
|   | `-CompoundStmt 0x1e002c957b0 <.//openssl//file_jk/before\test\handshake_helper.c:413:47, line:422:5>
|   |   |-DeclStmt 0x1e002c95120 <line:414:9, col:42>
|   |   | `-VarDecl 0x1e002c95018 <col:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/before\test\handshake_helper.c:414:24 used alpn_protos 'unsigned char *' cinit
|   |   |   `-ImplicitCastExpr 0x1e002c95108 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'unsigned char *' <NullToPointer>
|   |   |     `-ParenExpr 0x1e002c950e8 <col:17, col:27> 'void *'
|   |   |       `-CStyleCastExpr 0x1e002c950c0 <col:18, col:26> 'void *' <NullToPointer>
|   |   |         `-IntegerLiteral 0x1e002c95080 <col:26> 'int' 0
|   |   |-DeclStmt 0x1e002c951b0 <.//openssl//file_jk/before\test\handshake_helper.c:415:9, col:31>
|   |   | `-VarDecl 0x1e002c95148 <col:9, col:16> col:16 used alpn_protos_len 'size_t':'unsigned long long'
|   |   |-CallExpr 0x1e002c95338 <line:416:9, line:417:52> 'void'
|   |   | |-ImplicitCastExpr 0x1e002c95320 <line:416:9> 'void (*)(const char *, unsigned char **, size_t *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1e002c951c8 <col:9> 'void (const char *, unsigned char **, size_t *)' Function 0x1e002c8cf38 'parse_protos' 'void (const char *, unsigned char **, size_t *)'
|   |   | |-ImplicitCastExpr 0x1e002c95388 <col:22, col:36> 'const char *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x1e002c95370 <col:22, col:36> 'char *' <LValueToRValue>
|   |   | |   `-MemberExpr 0x1e002c95250 <col:22, col:36> 'char *const' lvalue .alpn_protocols 0x1e002ce17a0
|   |   | |     `-MemberExpr 0x1e002c95220 <col:22, col:29> 'const SSL_TEST_CLIENT_CONF':'const SSL_TEST_CLIENT_CONF' lvalue ->client 0x1e002ce1ea0
|   |   | |       `-ImplicitCastExpr 0x1e002c95208 <col:22> 'const SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   |   | |         `-DeclRefExpr 0x1e002c951e8 <col:22> 'const SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x1e002c90f68 'extra' 'const SSL_TEST_EXTRA_CONF *'
|   |   | |-UnaryOperator 0x1e002c952b8 <line:417:22, col:23> 'unsigned char **' prefix '&' cannot overflow
|   |   | | `-DeclRefExpr 0x1e002c95280 <col:23> 'unsigned char *' lvalue Var 0x1e002c95018 'alpn_protos' 'unsigned char *'
|   |   | `-UnaryOperator 0x1e002c95308 <col:36, col:37> 'size_t *' prefix '&' cannot overflow
|   |   |   `-DeclRefExpr 0x1e002c952d0 <col:37> 'size_t':'unsigned long long' lvalue Var 0x1e002c95148 'alpn_protos_len' 'size_t':'unsigned long long'
|   |   |-DoStmt 0x1e002c956f0 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   |   | |-CompoundStmt 0x1e002c956b0 <line:106:8, line:111:5>
|   |   | | `-IfStmt 0x1e002c95698 <line:107:9, line:110:9>
|   |   | |   |-OpaqueValueExpr 0x1e002c95680 <<invalid sloc>> '_Bool'
|   |   | |   `-CompoundStmt 0x1e002c95668 <line:107:27, line:110:9>
|   |   | |     `-CallExpr 0x1e002c95640 <line:109:13, col:39> 'int'
|   |   | |       |-ImplicitCastExpr 0x1e002c95628 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   | |       | `-DeclRefExpr 0x1e002c95538 <col:13> 'int ()' Function 0x1e002c83670 'OPENSSL_assert' 'int ()'
|   |   | |       `-UnaryOperator 0x1e002c95610 <col:28, <scratch space>:6:1> 'int' prefix '!' cannot overflow
|   |   | |         `-ImplicitCastExpr 0x1e002c955f8 <col:1> 'char *' <ArrayToPointerDecay>
|   |   | |           `-StringLiteral 0x1e002c95598 <col:1> 'char [71]' lvalue "SSL_CTX_set_alpn_protos(client_ctx, alpn_protos, alpn_protos_len) == 0"
|   |   | `-IntegerLiteral 0x1e002c956c8 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |   |-NullStmt 0x1e002c95710 <.//openssl//file_jk/before\test\handshake_helper.c:420:66>
|   |   `-CallExpr 0x1e002c95770 <line:421:9, col:33> 'int'
|   |     |-ImplicitCastExpr 0x1e002c95758 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1e002c95718 <col:9> 'int ()' Function 0x1e002c88c60 'OPENSSL_free' 'int ()'
|   |     `-ImplicitCastExpr 0x1e002c95798 <col:22> 'unsigned char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1e002c95738 <col:22> 'unsigned char *' lvalue Var 0x1e002c95018 'alpn_protos' 'unsigned char *'
|   |-BinaryOperator 0x1e002c95ae8 <line:429:5, col:48> 'unsigned char *' '='
|   | |-DeclRefExpr 0x1e002c95a00 <col:5> 'unsigned char *' lvalue Var 0x1e002c91388 'ticket_keys' 'unsigned char *'
|   | `-ImplicitCastExpr 0x1e002c95ad0 <col:19, col:48> 'unsigned char *' <IntegralToPointer>
|   |   `-CallExpr 0x1e002c95a90 <col:19, col:48> 'int'
|   |     |-ImplicitCastExpr 0x1e002c95a78 <col:19> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1e002c95a38 <col:19> 'int ()' Function 0x1e002c83208 'OPENSSL_zalloc' 'int ()'
|   |     `-ImplicitCastExpr 0x1e002c95ab8 <col:34> 'size_t':'unsigned long long' <LValueToRValue>
|   |       `-DeclRefExpr 0x1e002c95a58 <col:34> 'size_t':'unsigned long long' lvalue Var 0x1e002c91418 'ticket_key_len' 'size_t':'unsigned long long'
|   |-DoStmt 0x1e002c8ed30 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x1e002c8ecf0 <line:106:8, line:111:5>
|   | | `-IfStmt 0x1e002c8ecd8 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x1e002c95c20 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x1e002c95c00 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x1e002c95be0 <.//openssl//file_jk/before\test\handshake_helper.c:430:16, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | |   |     |-ImplicitCastExpr 0x1e002c95bb0 <.//openssl//file_jk/before\test\handshake_helper.c:430:16> 'unsigned char *' <LValueToRValue>
|   | |   |     | `-DeclRefExpr 0x1e002c95b08 <col:16> 'unsigned char *' lvalue Var 0x1e002c91388 'ticket_keys' 'unsigned char *'
|   | |   |     `-ImplicitCastExpr 0x1e002c95bc8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'unsigned char *' <BitCast>
|   | |   |       `-ParenExpr 0x1e002c95b90 <col:17, col:27> 'void *'
|   | |   |         `-CStyleCastExpr 0x1e002c95b68 <col:18, col:26> 'void *' <NullToPointer>
|   | |   |           `-IntegerLiteral 0x1e002c95b28 <col:26> 'int' 0
|   | |   `-CompoundStmt 0x1e002c8ecc0 <.//openssl//file_jk/before\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x1e002c8ec98 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x1e002c8ec80 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x1e002c8ec00 <col:13> 'int ()' Function 0x1e002c83670 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x1e002c8ec68 <col:28, <scratch space>:7:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x1e002c8ec50 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x1e002c8ec20 <col:1> 'char [20]' lvalue "ticket_keys != NULL"
|   | `-IntegerLiteral 0x1e002c8ed08 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x1e002c8ed50 <.//openssl//file_jk/before\test\handshake_helper.c:430:36>
|   |-DoStmt 0x1e002c8efb8 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x1e002c8ef78 <line:106:8, line:111:5>
|   | | `-IfStmt 0x1e002c8ef60 <line:107:9, line:110:9>
|   | |   |-OpaqueValueExpr 0x1e002c8ef48 <<invalid sloc>> '_Bool'
|   | |   `-CompoundStmt 0x1e002c8ef30 <line:107:27, line:110:9>
|   | |     `-CallExpr 0x1e002c8ef08 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x1e002c8eef0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x1e002c8ee00 <col:13> 'int ()' Function 0x1e002c83670 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x1e002c8eed8 <col:28, <scratch space>:8:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x1e002c8eec0 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x1e002c8ee58 <col:1> 'char [77]' lvalue "SSL_CTX_set_tlsext_ticket_keys(server_ctx, ticket_keys, ticket_key_len) == 1"
|   | `-IntegerLiteral 0x1e002c8ef90 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x1e002c8efd8 <.//openssl//file_jk/before\test\handshake_helper.c:432:68>
|   |-CallExpr 0x1e002c8f038 <line:433:5, col:29> 'int'
|   | |-ImplicitCastExpr 0x1e002c8f020 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1e002c8efe0 <col:5> 'int ()' Function 0x1e002c88c60 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x1e002c8f060 <col:18> 'unsigned char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1e002c8f000 <col:18> 'unsigned char *' lvalue Var 0x1e002c91388 'ticket_keys' 'unsigned char *'
|   |-DoStmt 0x1e002c8f348 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x1e002c8f308 <line:106:8, line:111:5>
|   | | `-IfStmt 0x1e002c8f2f0 <line:107:9, line:110:9>
|   | |   |-OpaqueValueExpr 0x1e002c8f2d8 <<invalid sloc>> '_Bool'
|   | |   `-CompoundStmt 0x1e002c8f2c0 <line:107:27, line:110:9>
|   | |     `-CallExpr 0x1e002c8f298 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x1e002c8f280 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x1e002c8f1a8 <col:13> 'int ()' Function 0x1e002c83670 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x1e002c8f268 <col:28, <scratch space>:9:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x1e002c8f250 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x1e002c8f208 <col:1> 'char [48]' lvalue "SSL_CTX_set_default_ctlog_list_file(client_ctx)"
|   | `-IntegerLiteral 0x1e002c8f320 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x1e002c8f368 <.//openssl//file_jk/before\test\handshake_helper.c:437:64>
|   `-SwitchStmt 0x1e002c8f438 <line:438:5, line:447:5>
|     |-ImplicitCastExpr 0x1e002c8f420 <line:438:13, col:27> 'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x1e002c8f408 <col:13, col:27> 'ssl_ct_validation_t':'ssl_ct_validation_t' <LValueToRValue>
|     |   `-MemberExpr 0x1e002c8f3d8 <col:13, col:27> 'const ssl_ct_validation_t':'const ssl_ct_validation_t' lvalue .ct_validation 0x1e002ce1830
|     |     `-MemberExpr 0x1e002c8f3a8 <col:13, col:20> 'const SSL_TEST_CLIENT_CONF':'const SSL_TEST_CLIENT_CONF' lvalue ->client 0x1e002ce1ea0
|     |       `-ImplicitCastExpr 0x1e002c8f390 <col:13> 'const SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|     |         `-DeclRefExpr 0x1e002c8f370 <col:13> 'const SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x1e002c90f68 'extra' 'const SSL_TEST_EXTRA_CONF *'
|     `-CompoundStmt 0x1e002c8faa8 <col:42, line:447:5>
|       |-CaseStmt 0x1e002c8f490 <line:439:5, .//openssl//file_jk/before\test/testutil.h:111:15>
|       | |-ConstantExpr 0x1e002c8f478 <.//openssl//file_jk/before\test\handshake_helper.c:439:10> 'int'
|       | | `-DeclRefExpr 0x1e002c8f458 <col:10> 'int' EnumConstant 0x1e002cd5008 'SSL_TEST_CT_VALIDATION_PERMISSIVE' 'int'
|       | `-DoStmt 0x1e002c8f798 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|       |   |-CompoundStmt 0x1e002c8f758 <line:106:8, line:111:5>
|       |   | `-IfStmt 0x1e002c8f740 <line:107:9, line:110:9>
|       |   |   |-OpaqueValueExpr 0x1e002c8f728 <<invalid sloc>> '_Bool'
|       |   |   `-CompoundStmt 0x1e002c8f710 <line:107:27, line:110:9>
|       |   |     `-CallExpr 0x1e002c8f6e8 <line:109:13, col:39> 'int'
|       |   |       |-ImplicitCastExpr 0x1e002c8f6d0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|       |   |       | `-DeclRefExpr 0x1e002c8f5e8 <col:13> 'int ()' Function 0x1e002c83670 'OPENSSL_assert' 'int ()'
|       |   |       `-UnaryOperator 0x1e002c8f6b8 <col:28, <scratch space>:10:1> 'int' prefix '!' cannot overflow
|       |   |         `-ImplicitCastExpr 0x1e002c8f6a0 <col:1> 'char *' <ArrayToPointerDecay>
|       |   |           `-StringLiteral 0x1e002c8f648 <col:1> 'char [60]' lvalue "SSL_CTX_enable_ct(client_ctx, SSL_CT_VALIDATION_PERMISSIVE)"
|       |   `-IntegerLiteral 0x1e002c8f770 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|       |-NullStmt 0x1e002c8f7b8 <.//openssl//file_jk/before\test\handshake_helper.c:440:80>
|       |-BreakStmt 0x1e002c8f7c0 <line:441:9>
|       |-CaseStmt 0x1e002c8f800 <line:442:5, .//openssl//file_jk/before\test/testutil.h:111:15>
|       | |-ConstantExpr 0x1e002c8f7e8 <.//openssl//file_jk/before\test\handshake_helper.c:442:10> 'int'
|       | | `-DeclRefExpr 0x1e002c8f7c8 <col:10> 'int' EnumConstant 0x1e002cd5060 'SSL_TEST_CT_VALIDATION_STRICT' 'int'
|       | `-DoStmt 0x1e002c8fa10 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|       |   |-CompoundStmt 0x1e002c8f9d0 <line:106:8, line:111:5>
|       |   | `-IfStmt 0x1e002c8f9b8 <line:107:9, line:110:9>
|       |   |   |-OpaqueValueExpr 0x1e002c8f9a0 <<invalid sloc>> '_Bool'
|       |   |   `-CompoundStmt 0x1e002c8f988 <line:107:27, line:110:9>
|       |   |     `-CallExpr 0x1e002c8f960 <line:109:13, col:39> 'int'
|       |   |       |-ImplicitCastExpr 0x1e002c8f948 <col:13> 'int (*)()' <FunctionToPointerDecay>
|       |   |       | `-DeclRefExpr 0x1e002c8f868 <col:13> 'int ()' Function 0x1e002c83670 'OPENSSL_assert' 'int ()'
|       |   |       `-UnaryOperator 0x1e002c8f930 <col:28, <scratch space>:11:1> 'int' prefix '!' cannot overflow
|       |   |         `-ImplicitCastExpr 0x1e002c8f918 <col:1> 'char *' <ArrayToPointerDecay>
|       |   |           `-StringLiteral 0x1e002c8f8c8 <col:1> 'char [56]' lvalue "SSL_CTX_enable_ct(client_ctx, SSL_CT_VALIDATION_STRICT)"
|       |   `-IntegerLiteral 0x1e002c8f9e8 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|       |-NullStmt 0x1e002c8fa30 <.//openssl//file_jk/before\test\handshake_helper.c:443:76>
|       |-BreakStmt 0x1e002c8fa38 <line:444:9>
|       `-CaseStmt 0x1e002c8fa78 <line:445:5, line:446:9>
|         |-ConstantExpr 0x1e002c8fa60 <line:445:10> 'int'
|         | `-DeclRefExpr 0x1e002c8fa40 <col:10> 'int' EnumConstant 0x1e002cd4fb0 'SSL_TEST_CT_VALIDATION_NONE' 'int'
|         `-BreakStmt 0x1e002c8faa0 <line:446:9>
|-FunctionDecl 0x1e002c9aed8 <line:452:1, line:458:1> line:452:13 invalid configure_handshake_ssl 'void (int *, int *, const SSL_TEST_EXTRA_CONF *)' static
| |-ParmVarDecl 0x1e002c9acc0 <col:37, col:42> col:42 invalid server 'int *'
| |-ParmVarDecl 0x1e002c9ad40 <col:50, col:55> col:55 invalid client 'int *'
| |-ParmVarDecl 0x1e002c9adb8 <line:453:37, col:64> col:64 used extra 'const SSL_TEST_EXTRA_CONF *'
| `-CompoundStmt 0x1e002c9b340 <line:454:1, line:458:1>
|-EnumDecl 0x1e002c9b350 <line:461:9, line:465:1> line:461:9
| |-EnumConstantDecl 0x1e002c9b430 <line:462:5> col:5 referenced PEER_SUCCESS 'int'
| |-EnumConstantDecl 0x1e002c9b488 <line:463:5> col:5 referenced PEER_RETRY 'int'
| `-EnumConstantDecl 0x1e002c9b4e0 <line:464:5> col:5 referenced PEER_ERROR 'int'
|-TypedefDecl 0x1e002c9b598 <line:461:1, line:465:3> col:3 referenced peer_status_t 'enum peer_status_t':'peer_status_t'
| `-ElaboratedType 0x1e002c9b540 'enum peer_status_t' sugar
|   `-EnumType 0x1e002c9b410 'peer_status_t'
|     `-Enum 0x1e002c9b350 ''
|-RecordDecl 0x1e002c9b608 <line:468:9, line:478:1> line:468:16 invalid struct peer_st definition
| |-FieldDecl 0x1e002c9b6d8 <line:469:5, col:10> col:10 invalid ssl 'int *'
| |-FieldDecl 0x1e002c9b748 <line:471:5, col:20> col:20 referenced write_buf 'unsigned char *'
| |-FieldDecl 0x1e002c9b7b8 <line:472:5, col:9> col:9 referenced write_buf_len 'int'
| |-FieldDecl 0x1e002c9b828 <line:473:5, col:20> col:20 referenced read_buf 'unsigned char *'
| |-FieldDecl 0x1e002c9b898 <line:474:5, col:9> col:9 referenced read_buf_len 'int'
| |-FieldDecl 0x1e002c9b908 <line:475:5, col:9> col:9 referenced bytes_to_write 'int'
| |-FieldDecl 0x1e002c9b978 <line:476:5, col:9> col:9 referenced bytes_to_read 'int'
| `-FieldDecl 0x1e002c9ba00 <line:477:5, col:19> col:19 referenced status 'peer_status_t':'peer_status_t'
|-TypedefDecl 0x1e002c9bab8 <line:468:1, line:478:3> col:3 referenced PEER 'struct peer_st':'struct peer_st'
| `-ElaboratedType 0x1e002c9ba60 'struct peer_st' sugar
|   `-RecordType 0x1e002c9b6a0 'struct peer_st'
|     `-Record 0x1e002c9b608 'peer_st'
|-FunctionDecl 0x1e002c97d38 <line:480:1, line:491:1> line:480:13 invalid create_peer 'void (PEER *, int *)' static
| |-ParmVarDecl 0x1e002c9bbb8 <col:25, col:31> col:31 used peer 'PEER *'
| |-ParmVarDecl 0x1e002c9bc38 <col:37, col:46> col:46 invalid ctx 'int *'
| `-CompoundStmt 0x1e002c99da0 <line:481:1, line:491:1>
|   |-DeclStmt 0x1e002c97ef0 <line:482:5, col:50>
|   | `-VarDecl 0x1e002c97e18 <col:5, col:46> col:22 used peer_buffer_size 'const int' static cinit
|   |   `-BinaryOperator 0x1e002c97ed0 <col:41, col:46> 'int' '*'
|   |     |-IntegerLiteral 0x1e002c97e80 <col:41> 'int' 64
|   |     `-IntegerLiteral 0x1e002c97ea8 <col:46> 'int' 1024
|   |-DoStmt 0x1e002c982d0 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x1e002c98290 <line:106:8, line:111:5>
|   | | `-IfStmt 0x1e002c98278 <line:107:9, line:110:9>
|   | |   |-OpaqueValueExpr 0x1e002c98260 <<invalid sloc>> '_Bool'
|   | |   `-CompoundStmt 0x1e002c98248 <line:107:27, line:110:9>
|   | |     `-CallExpr 0x1e002c98220 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x1e002c98208 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x1e002c98148 <col:13> 'int ()' Function 0x1e002c83670 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x1e002c981f0 <col:28, <scratch space>:12:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x1e002c981d8 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x1e002c981a8 <col:1> 'char [18]' lvalue "peer->ssl != NULL"
|   | `-IntegerLiteral 0x1e002c982a8 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x1e002c982f0 <.//openssl//file_jk/before\test\handshake_helper.c:485:34>
|   |-BinaryOperator 0x1e002c98428 <line:486:5, col:54> 'unsigned char *' '='
|   | |-MemberExpr 0x1e002c98330 <col:5, col:11> 'unsigned char *' lvalue ->write_buf 0x1e002c9b748
|   | | `-ImplicitCastExpr 0x1e002c98318 <col:5> 'PEER *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1e002c982f8 <col:5> 'PEER *' lvalue ParmVar 0x1e002c9bbb8 'peer' 'PEER *'
|   | `-ImplicitCastExpr 0x1e002c98410 <col:23, col:54> 'unsigned char *' <IntegralToPointer>
|   |   `-CallExpr 0x1e002c983d0 <col:23, col:54> 'int'
|   |     |-ImplicitCastExpr 0x1e002c983b8 <col:23> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1e002c98360 <col:23> 'int ()' Function 0x1e002c83208 'OPENSSL_zalloc' 'int ()'
|   |     `-ImplicitCastExpr 0x1e002c983f8 <col:38> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x1e002c98380 <col:38> 'const int' lvalue Var 0x1e002c97e18 'peer_buffer_size' 'const int'
|   |-DoStmt 0x1e002c98748 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x1e002c98708 <line:106:8, line:111:5>
|   | | `-IfStmt 0x1e002c986f0 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x1e002c985a8 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x1e002c98588 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x1e002c98568 <.//openssl//file_jk/before\test\handshake_helper.c:487:16, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | |   |     |-ImplicitCastExpr 0x1e002c98538 <.//openssl//file_jk/before\test\handshake_helper.c:487:16, col:22> 'unsigned char *' <LValueToRValue>
|   | |   |     | `-MemberExpr 0x1e002c98480 <col:16, col:22> 'unsigned char *' lvalue ->write_buf 0x1e002c9b748
|   | |   |     |   `-ImplicitCastExpr 0x1e002c98468 <col:16> 'PEER *' <LValueToRValue>
|   | |   |     |     `-DeclRefExpr 0x1e002c98448 <col:16> 'PEER *' lvalue ParmVar 0x1e002c9bbb8 'peer' 'PEER *'
|   | |   |     `-ImplicitCastExpr 0x1e002c98550 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'unsigned char *' <BitCast>
|   | |   |       `-ParenExpr 0x1e002c98518 <col:17, col:27> 'void *'
|   | |   |         `-CStyleCastExpr 0x1e002c984f0 <col:18, col:26> 'void *' <NullToPointer>
|   | |   |           `-IntegerLiteral 0x1e002c984b0 <col:26> 'int' 0
|   | |   `-CompoundStmt 0x1e002c986d8 <.//openssl//file_jk/before\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x1e002c986b0 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x1e002c98698 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x1e002c985e0 <col:13> 'int ()' Function 0x1e002c83670 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x1e002c98680 <col:28, <scratch space>:13:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x1e002c98668 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x1e002c98638 <col:1> 'char [24]' lvalue "peer->write_buf != NULL"
|   | `-IntegerLiteral 0x1e002c98720 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x1e002c98768 <.//openssl//file_jk/before\test\handshake_helper.c:487:40>
|   |-BinaryOperator 0x1e002c98888 <line:488:5, col:53> 'unsigned char *' '='
|   | |-MemberExpr 0x1e002c987a8 <col:5, col:11> 'unsigned char *' lvalue ->read_buf 0x1e002c9b828
|   | | `-ImplicitCastExpr 0x1e002c98790 <col:5> 'PEER *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1e002c98770 <col:5> 'PEER *' lvalue ParmVar 0x1e002c9bbb8 'peer' 'PEER *'
|   | `-ImplicitCastExpr 0x1e002c98870 <col:22, col:53> 'unsigned char *' <IntegralToPointer>
|   |   `-CallExpr 0x1e002c98830 <col:22, col:53> 'int'
|   |     |-ImplicitCastExpr 0x1e002c98818 <col:22> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1e002c987d8 <col:22> 'int ()' Function 0x1e002c83208 'OPENSSL_zalloc' 'int ()'
|   |     `-ImplicitCastExpr 0x1e002c98858 <col:37> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x1e002c987f8 <col:37> 'const int' lvalue Var 0x1e002c97e18 'peer_buffer_size' 'const int'
|   |-DoStmt 0x1e002c98ba8 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x1e002c98b68 <line:106:8, line:111:5>
|   | | `-IfStmt 0x1e002c98b50 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x1e002c98a08 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x1e002c989e8 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x1e002c989c8 <.//openssl//file_jk/before\test\handshake_helper.c:489:16, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | |   |     |-ImplicitCastExpr 0x1e002c98998 <.//openssl//file_jk/before\test\handshake_helper.c:489:16, col:22> 'unsigned char *' <LValueToRValue>
|   | |   |     | `-MemberExpr 0x1e002c988e0 <col:16, col:22> 'unsigned char *' lvalue ->read_buf 0x1e002c9b828
|   | |   |     |   `-ImplicitCastExpr 0x1e002c988c8 <col:16> 'PEER *' <LValueToRValue>
|   | |   |     |     `-DeclRefExpr 0x1e002c988a8 <col:16> 'PEER *' lvalue ParmVar 0x1e002c9bbb8 'peer' 'PEER *'
|   | |   |     `-ImplicitCastExpr 0x1e002c989b0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'unsigned char *' <BitCast>
|   | |   |       `-ParenExpr 0x1e002c98978 <col:17, col:27> 'void *'
|   | |   |         `-CStyleCastExpr 0x1e002c98950 <col:18, col:26> 'void *' <NullToPointer>
|   | |   |           `-IntegerLiteral 0x1e002c98910 <col:26> 'int' 0
|   | |   `-CompoundStmt 0x1e002c98b38 <.//openssl//file_jk/before\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x1e002c98b10 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x1e002c98af8 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x1e002c98a40 <col:13> 'int ()' Function 0x1e002c83670 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x1e002c98ae0 <col:28, <scratch space>:14:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x1e002c98ac8 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x1e002c98a98 <col:1> 'char [23]' lvalue "peer->read_buf != NULL"
|   | `-IntegerLiteral 0x1e002c98b80 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x1e002c98bc8 <.//openssl//file_jk/before\test\handshake_helper.c:489:39>
|   `-BinaryOperator 0x1e002c99d38 <line:490:5, col:48> 'int' '='
|     |-MemberExpr 0x1e002c98c08 <col:5, col:11> 'int' lvalue ->write_buf_len 0x1e002c9b7b8
|     | `-ImplicitCastExpr 0x1e002c98bf0 <col:5> 'PEER *' <LValueToRValue>
|     |   `-DeclRefExpr 0x1e002c98bd0 <col:5> 'PEER *' lvalue ParmVar 0x1e002c9bbb8 'peer' 'PEER *'
|     `-BinaryOperator 0x1e002c99d18 <col:27, col:48> 'int' '='
|       |-MemberExpr 0x1e002c99cb0 <col:27, col:33> 'int' lvalue ->read_buf_len 0x1e002c9b898
|       | `-ImplicitCastExpr 0x1e002c98c58 <col:27> 'PEER *' <LValueToRValue>
|       |   `-DeclRefExpr 0x1e002c98c38 <col:27> 'PEER *' lvalue ParmVar 0x1e002c9bbb8 'peer' 'PEER *'
|       `-ImplicitCastExpr 0x1e002c99d00 <col:48> 'int' <LValueToRValue>
|         `-DeclRefExpr 0x1e002c99ce0 <col:48> 'const int' lvalue Var 0x1e002c97e18 'peer_buffer_size' 'const int'
|-FunctionDecl 0x1e002c99f18 <line:493:1, line:498:1> line:493:13 used peer_free_data 'void (PEER *)' static
| |-ParmVarDecl 0x1e002c99e10 <col:28, col:34> col:34 used peer 'PEER *'
| `-CompoundStmt 0x1e002c9a2e0 <line:494:1, line:498:1>
|   |-CallExpr 0x1e002c9a1c0 <line:496:5, col:33> 'int'
|   | |-ImplicitCastExpr 0x1e002c9a1a8 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1e002c9a120 <col:5> 'int ()' Function 0x1e002c88c60 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x1e002c9a1e8 <col:18, col:24> 'unsigned char *' <LValueToRValue>
|   |   `-MemberExpr 0x1e002c9a178 <col:18, col:24> 'unsigned char *' lvalue ->write_buf 0x1e002c9b748
|   |     `-ImplicitCastExpr 0x1e002c9a160 <col:18> 'PEER *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1e002c9a140 <col:18> 'PEER *' lvalue ParmVar 0x1e002c99e10 'peer' 'PEER *'
|   `-CallExpr 0x1e002c9a2a0 <line:497:5, col:32> 'int'
|     |-ImplicitCastExpr 0x1e002c9a288 <col:5> 'int (*)()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x1e002c9a200 <col:5> 'int ()' Function 0x1e002c88c60 'OPENSSL_free' 'int ()'
|     `-ImplicitCastExpr 0x1e002c9a2c8 <col:18, col:24> 'unsigned char *' <LValueToRValue>
|       `-MemberExpr 0x1e002c9a258 <col:18, col:24> 'unsigned char *' lvalue ->read_buf 0x1e002c9b828
|         `-ImplicitCastExpr 0x1e002c9a240 <col:18> 'PEER *' <LValueToRValue>
|           `-DeclRefExpr 0x1e002c9a220 <col:18> 'PEER *' lvalue ParmVar 0x1e002c99e10 'peer' 'PEER *'
|-FunctionDecl 0x1e002c9a3b8 <line:504:1, line:525:1> line:504:13 used do_handshake_step 'void (PEER *)' static
| |-ParmVarDecl 0x1e002c9a310 <col:31, col:37> col:37 used peer 'PEER *'
| `-CompoundStmt 0x1e002c9bed8 <line:505:1, line:525:1>
|   |-DeclStmt 0x1e002c9a4f8 <line:506:5, col:12>
|   | `-VarDecl 0x1e002c9a490 <col:5, col:9> col:9 used ret 'int'
|   |-IfStmt 0x1e002c9a6d8 <line:508:5, line:511:5>
|   | |-BinaryOperator 0x1e002c9a5c8 <line:508:9, col:25> 'int' '!='
|   | | |-ImplicitCastExpr 0x1e002c9a5b0 <col:9, col:15> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x1e002c9a598 <col:9, col:15> 'peer_status_t':'peer_status_t' <LValueToRValue>
|   | | |   `-MemberExpr 0x1e002c9a548 <col:9, col:15> 'peer_status_t':'peer_status_t' lvalue ->status 0x1e002c9ba00
|   | | |     `-ImplicitCastExpr 0x1e002c9a530 <col:9> 'PEER *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x1e002c9a510 <col:9> 'PEER *' lvalue ParmVar 0x1e002c9a310 'peer' 'PEER *'
|   | | `-DeclRefExpr 0x1e002c9a578 <col:25> 'int' EnumConstant 0x1e002c9b488 'PEER_RETRY' 'int'
|   | `-CompoundStmt 0x1e002c9a6b8 <col:37, line:511:5>
|   |   |-BinaryOperator 0x1e002c9a688 <line:509:9, col:24> 'peer_status_t':'peer_status_t' '='
|   |   | |-MemberExpr 0x1e002c9a620 <col:9, col:15> 'peer_status_t':'peer_status_t' lvalue ->status 0x1e002c9ba00
|   |   | | `-ImplicitCastExpr 0x1e002c9a608 <col:9> 'PEER *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1e002c9a5e8 <col:9> 'PEER *' lvalue ParmVar 0x1e002c9a310 'peer' 'PEER *'
|   |   | `-ImplicitCastExpr 0x1e002c9a670 <col:24> 'peer_status_t':'peer_status_t' <IntegralCast>
|   |   |   `-DeclRefExpr 0x1e002c9a650 <col:24> 'int' EnumConstant 0x1e002c9b4e0 'PEER_ERROR' 'int'
|   |   `-ReturnStmt 0x1e002c9a6a8 <line:510:9>
|   `-IfStmt 0x1e002c9beb0 <line:515:5, line:524:5> has_else
|     |-BinaryOperator 0x1e002c9a8d0 <line:515:9, col:16> 'int' '=='
|     | |-ImplicitCastExpr 0x1e002c9a8b8 <col:9> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x1e002c9a870 <col:9> 'int' lvalue Var 0x1e002c9a490 'ret' 'int'
|     | `-IntegerLiteral 0x1e002c9a890 <col:16> 'int' 1
|     |-CompoundStmt 0x1e002c9a9b0 <col:19, line:517:5>
|     | `-BinaryOperator 0x1e002c9a990 <line:516:9, col:24> 'peer_status_t':'peer_status_t' '='
|     |   |-MemberExpr 0x1e002c9a928 <col:9, col:15> 'peer_status_t':'peer_status_t' lvalue ->status 0x1e002c9ba00
|     |   | `-ImplicitCastExpr 0x1e002c9a910 <col:9> 'PEER *' <LValueToRValue>
|     |   |   `-DeclRefExpr 0x1e002c9a8f0 <col:9> 'PEER *' lvalue ParmVar 0x1e002c9a310 'peer' 'PEER *'
|     |   `-ImplicitCastExpr 0x1e002c9a978 <col:24> 'peer_status_t':'peer_status_t' <IntegralCast>
|     |     `-DeclRefExpr 0x1e002c9a958 <col:24> 'int' EnumConstant 0x1e002c9b430 'PEER_SUCCESS' 'int'
|     `-IfStmt 0x1e002c9be88 <line:517:12, line:524:5> has_else
|       |-BinaryOperator 0x1e002c9aa28 <line:517:16, col:23> 'int' '=='
|       | |-ImplicitCastExpr 0x1e002c9aa10 <col:16> 'int' <LValueToRValue>
|       | | `-DeclRefExpr 0x1e002c9a9c8 <col:16> 'int' lvalue Var 0x1e002c9a490 'ret' 'int'
|       | `-IntegerLiteral 0x1e002c9a9e8 <col:23> 'int' 0
|       |-CompoundStmt 0x1e002c9ab08 <col:26, line:519:5>
|       | `-BinaryOperator 0x1e002c9aae8 <line:518:9, col:24> 'peer_status_t':'peer_status_t' '='
|       |   |-MemberExpr 0x1e002c9aa80 <col:9, col:15> 'peer_status_t':'peer_status_t' lvalue ->status 0x1e002c9ba00
|       |   | `-ImplicitCastExpr 0x1e002c9aa68 <col:9> 'PEER *' <LValueToRValue>
|       |   |   `-DeclRefExpr 0x1e002c9aa48 <col:9> 'PEER *' lvalue ParmVar 0x1e002c9a310 'peer' 'PEER *'
|       |   `-ImplicitCastExpr 0x1e002c9aad0 <col:24> 'peer_status_t':'peer_status_t' <IntegralCast>
|       |     `-DeclRefExpr 0x1e002c9aab0 <col:24> 'int' EnumConstant 0x1e002c9b4e0 'PEER_ERROR' 'int'
|       `-CompoundStmt 0x1e002c9be68 <line:519:12, line:524:5>
|         |-DeclStmt 0x1e002c9bd28 <line:520:9, col:50>
|         | `-VarDecl 0x1e002c9ab38 <col:9, col:13> col:13 used error 'int'
|         `-IfStmt 0x1e002c9be50 <line:522:9, line:523:28>
|           |-OpaqueValueExpr 0x1e002c9be38 <<invalid sloc>> '_Bool'
|           `-BinaryOperator 0x1e002c9be18 <col:13, col:28> 'peer_status_t':'peer_status_t' '='
|             |-MemberExpr 0x1e002c9bdb0 <col:13, col:19> 'peer_status_t':'peer_status_t' lvalue ->status 0x1e002c9ba00
|             | `-ImplicitCastExpr 0x1e002c9bd98 <col:13> 'PEER *' <LValueToRValue>
|             |   `-DeclRefExpr 0x1e002c9bd78 <col:13> 'PEER *' lvalue ParmVar 0x1e002c9a310 'peer' 'PEER *'
|             `-ImplicitCastExpr 0x1e002c9be00 <col:28> 'peer_status_t':'peer_status_t' <IntegralCast>
|               `-DeclRefExpr 0x1e002c9bde0 <col:28> 'int' EnumConstant 0x1e002c9b4e0 'PEER_ERROR' 'int'
|-FunctionDecl 0x1e002c9bfb8 <line:536:1, line:588:1> line:536:13 used do_app_data_step 'void (PEER *)' static
| |-ParmVarDecl 0x1e002c9bf10 <col:30, col:36> col:36 used peer 'PEER *'
| `-CompoundStmt 0x1e002c9dcf0 <line:537:1, line:588:1>
|   |-DeclStmt 0x1e002c9c1b8 <line:538:5, col:29>
|   | |-VarDecl 0x1e002c9c090 <col:5, col:15> col:9 used ret 'int' cinit
|   | | `-IntegerLiteral 0x1e002c9c0f8 <col:15> 'int' 1
|   | `-VarDecl 0x1e002c9c138 <col:5, col:18> col:18 used write_bytes 'int'
|   |-DoStmt 0x1e002c9c470 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x1e002c9c430 <line:106:8, line:111:5>
|   | | `-IfStmt 0x1e002c9c418 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x1e002c9c2c8 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x1e002c9c2a8 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x1e002c9c288 <.//openssl//file_jk/before\test\handshake_helper.c:540:16, col:32> 'int' '=='
|   | |   |     |-ImplicitCastExpr 0x1e002c9c270 <col:16, col:22> 'int' <IntegralCast>
|   | |   |     | `-ImplicitCastExpr 0x1e002c9c258 <col:16, col:22> 'peer_status_t':'peer_status_t' <LValueToRValue>
|   | |   |     |   `-MemberExpr 0x1e002c9c208 <col:16, col:22> 'peer_status_t':'peer_status_t' lvalue ->status 0x1e002c9ba00
|   | |   |     |     `-ImplicitCastExpr 0x1e002c9c1f0 <col:16> 'PEER *' <LValueToRValue>
|   | |   |     |       `-DeclRefExpr 0x1e002c9c1d0 <col:16> 'PEER *' lvalue ParmVar 0x1e002c9bf10 'peer' 'PEER *'
|   | |   |     `-DeclRefExpr 0x1e002c9c238 <col:32> 'int' EnumConstant 0x1e002c9b488 'PEER_RETRY' 'int'
|   | |   `-CompoundStmt 0x1e002c9c400 <.//openssl//file_jk/before\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x1e002c9c3d8 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x1e002c9c3c0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x1e002c9c300 <col:13> 'int ()' Function 0x1e002c83670 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x1e002c9c3a8 <col:28, <scratch space>:15:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x1e002c9c390 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x1e002c9c358 <col:1> 'char [27]' lvalue "peer->status == PEER_RETRY"
|   | `-IntegerLiteral 0x1e002c9c448 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x1e002c9c490 <.//openssl//file_jk/before\test\handshake_helper.c:540:43>
|   |-WhileStmt 0x1e002c9d088 <line:543:5, line:558:5>
|   | |-BinaryOperator 0x1e002c9c5b0 <line:543:12, col:29> 'int' '&&'
|   | | |-BinaryOperator 0x1e002c9c510 <col:12, col:18> 'int' '>'
|   | | | |-ImplicitCastExpr 0x1e002c9c4f8 <col:12> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1e002c9c498 <col:12> 'int' lvalue Var 0x1e002c9c090 'ret' 'int'
|   | | | `-IntegerLiteral 0x1e002c9c4d0 <col:18> 'int' 0
|   | | `-ImplicitCastExpr 0x1e002c9c598 <col:23, col:29> 'int' <LValueToRValue>
|   | |   `-MemberExpr 0x1e002c9c568 <col:23, col:29> 'int' lvalue ->bytes_to_read 0x1e002c9b978
|   | |     `-ImplicitCastExpr 0x1e002c9c550 <col:23> 'PEER *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x1e002c9c530 <col:23> 'PEER *' lvalue ParmVar 0x1e002c9bf10 'peer' 'PEER *'
|   | `-CompoundStmt 0x1e002c9d070 <col:44, line:558:5>
|   |   `-IfStmt 0x1e002c9d048 <line:545:9, line:557:9> has_else
|   |     |-BinaryOperator 0x1e002c9c868 <line:545:13, col:19> 'int' '>'
|   |     | |-ImplicitCastExpr 0x1e002c9c850 <col:13> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1e002c9c808 <col:13> 'int' lvalue Var 0x1e002c9c090 'ret' 'int'
|   |     | `-IntegerLiteral 0x1e002c9c828 <col:19> 'int' 0
|   |     |-CompoundStmt 0x1e002c9cbe8 <col:22, line:548:9>
|   |     | |-DoStmt 0x1e002c9caf0 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   |     | | |-CompoundStmt 0x1e002c9cab0 <line:106:8, line:111:5>
|   |     | | | `-IfStmt 0x1e002c9ca98 <line:107:9, line:110:9>
|   |     | | |   |-UnaryOperator 0x1e002c9c980 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   |     | | |   | `-ParenExpr 0x1e002c9c960 <col:14, col:24> 'int'
|   |     | | |   |   `-BinaryOperator 0x1e002c9c940 <.//openssl//file_jk/before\test\handshake_helper.c:546:24, col:37> 'int' '<='
|   |     | | |   |     |-ImplicitCastExpr 0x1e002c9c910 <col:24> 'int' <LValueToRValue>
|   |     | | |   |     | `-DeclRefExpr 0x1e002c9c888 <col:24> 'int' lvalue Var 0x1e002c9c090 'ret' 'int'
|   |     | | |   |     `-ImplicitCastExpr 0x1e002c9c928 <col:31, col:37> 'int' <LValueToRValue>
|   |     | | |   |       `-MemberExpr 0x1e002c9c8e0 <col:31, col:37> 'int' lvalue ->bytes_to_read 0x1e002c9b978
|   |     | | |   |         `-ImplicitCastExpr 0x1e002c9c8c8 <col:31> 'PEER *' <LValueToRValue>
|   |     | | |   |           `-DeclRefExpr 0x1e002c9c8a8 <col:31> 'PEER *' lvalue ParmVar 0x1e002c9bf10 'peer' 'PEER *'
|   |     | | |   `-CompoundStmt 0x1e002c9ca80 <.//openssl//file_jk/before\test/testutil.h:107:27, line:110:9>
|   |     | | |     `-CallExpr 0x1e002c9ca58 <line:109:13, col:39> 'int'
|   |     | | |       |-ImplicitCastExpr 0x1e002c9ca40 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |     | | |       | `-DeclRefExpr 0x1e002c9c9b8 <col:13> 'int ()' Function 0x1e002c83670 'OPENSSL_assert' 'int ()'
|   |     | | |       `-UnaryOperator 0x1e002c9ca28 <col:28, <scratch space>:16:1> 'int' prefix '!' cannot overflow
|   |     | | |         `-ImplicitCastExpr 0x1e002c9ca10 <col:1> 'char *' <ArrayToPointerDecay>
|   |     | | |           `-StringLiteral 0x1e002c9c9d8 <col:1> 'char [27]' lvalue "ret <= peer->bytes_to_read"
|   |     | | `-IntegerLiteral 0x1e002c9cac8 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |     | |-NullStmt 0x1e002c9cb10 <.//openssl//file_jk/before\test\handshake_helper.c:546:51>
|   |     | `-CompoundAssignOperator 0x1e002c9cbb8 <line:547:13, col:36> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     |   |-MemberExpr 0x1e002c9cb50 <col:13, col:19> 'int' lvalue ->bytes_to_read 0x1e002c9b978
|   |     |   | `-ImplicitCastExpr 0x1e002c9cb38 <col:13> 'PEER *' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x1e002c9cb18 <col:13> 'PEER *' lvalue ParmVar 0x1e002c9bf10 'peer' 'PEER *'
|   |     |   `-ImplicitCastExpr 0x1e002c9cba0 <col:36> 'int' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x1e002c9cb80 <col:36> 'int' lvalue Var 0x1e002c9c090 'ret' 'int'
|   |     `-IfStmt 0x1e002c9d020 <line:548:16, line:557:9> has_else
|   |       |-BinaryOperator 0x1e002c9cc70 <line:548:20, col:27> 'int' '=='
|   |       | |-ImplicitCastExpr 0x1e002c9cc58 <col:20> 'int' <LValueToRValue>
|   |       | | `-DeclRefExpr 0x1e002c9cc10 <col:20> 'int' lvalue Var 0x1e002c9c090 'ret' 'int'
|   |       | `-IntegerLiteral 0x1e002c9cc30 <col:27> 'int' 0
|   |       |-CompoundStmt 0x1e002c9cd78 <col:30, line:551:9>
|   |       | |-BinaryOperator 0x1e002c9cd48 <line:549:13, col:28> 'peer_status_t':'peer_status_t' '='
|   |       | | |-MemberExpr 0x1e002c9cce0 <col:13, col:19> 'peer_status_t':'peer_status_t' lvalue ->status 0x1e002c9ba00
|   |       | | | `-ImplicitCastExpr 0x1e002c9ccb0 <col:13> 'PEER *' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x1e002c9cc90 <col:13> 'PEER *' lvalue ParmVar 0x1e002c9bf10 'peer' 'PEER *'
|   |       | | `-ImplicitCastExpr 0x1e002c9cd30 <col:28> 'peer_status_t':'peer_status_t' <IntegralCast>
|   |       | |   `-DeclRefExpr 0x1e002c9cd10 <col:28> 'int' EnumConstant 0x1e002c9b4e0 'PEER_ERROR' 'int'
|   |       | `-ReturnStmt 0x1e002c9cd68 <line:550:13>
|   |       `-CompoundStmt 0x1e002c9d000 <line:551:16, line:557:9>
|   |         |-DeclStmt 0x1e002c9ce90 <line:552:13, col:54>
|   |         | `-VarDecl 0x1e002c9cdb0 <col:13, col:17> col:17 used error 'int'
|   |         `-IfStmt 0x1e002c9cfe8 <line:553:13, line:556:13>
|   |           |-OpaqueValueExpr 0x1e002c9cfd0 <<invalid sloc>> '_Bool'
|   |           `-CompoundStmt 0x1e002c9cfb0 <line:553:47, line:556:13>
|   |             |-BinaryOperator 0x1e002c9cf80 <line:554:17, col:32> 'peer_status_t':'peer_status_t' '='
|   |             | |-MemberExpr 0x1e002c9cf18 <col:17, col:23> 'peer_status_t':'peer_status_t' lvalue ->status 0x1e002c9ba00
|   |             | | `-ImplicitCastExpr 0x1e002c9cf00 <col:17> 'PEER *' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x1e002c9cee0 <col:17> 'PEER *' lvalue ParmVar 0x1e002c9bf10 'peer' 'PEER *'
|   |             | `-ImplicitCastExpr 0x1e002c9cf68 <col:32> 'peer_status_t':'peer_status_t' <IntegralCast>
|   |             |   `-DeclRefExpr 0x1e002c9cf48 <col:32> 'int' EnumConstant 0x1e002c9b4e0 'PEER_ERROR' 'int'
|   |             `-ReturnStmt 0x1e002c9cfa0 <line:555:17>
|   |-BinaryOperator 0x1e002c9d328 <line:561:5, line:562:15> 'int' '='
|   | |-DeclRefExpr 0x1e002c9d0a0 <line:561:5> 'int' lvalue Var 0x1e002c9c138 'write_bytes' 'int'
|   | `-ConditionalOperator 0x1e002c9d2f8 <col:19, line:562:15> 'int'
|   |   |-BinaryOperator 0x1e002c9d1d8 <line:561:19, col:48> 'int' '<'
|   |   | |-ImplicitCastExpr 0x1e002c9d1a8 <col:19, col:25> 'int' <LValueToRValue>
|   |   | | `-MemberExpr 0x1e002c9d110 <col:19, col:25> 'int' lvalue ->bytes_to_write 0x1e002c9b908
|   |   | |   `-ImplicitCastExpr 0x1e002c9d0f8 <col:19> 'PEER *' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x1e002c9d0d8 <col:19> 'PEER *' lvalue ParmVar 0x1e002c9bf10 'peer' 'PEER *'
|   |   | `-ImplicitCastExpr 0x1e002c9d1c0 <col:42, col:48> 'int' <LValueToRValue>
|   |   |   `-MemberExpr 0x1e002c9d178 <col:42, col:48> 'int' lvalue ->write_buf_len 0x1e002c9b7b8
|   |   |     `-ImplicitCastExpr 0x1e002c9d160 <col:42> 'PEER *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x1e002c9d140 <col:42> 'PEER *' lvalue ParmVar 0x1e002c9bf10 'peer' 'PEER *'
|   |   |-ImplicitCastExpr 0x1e002c9d2c8 <col:64, col:70> 'int' <LValueToRValue>
|   |   | `-MemberExpr 0x1e002c9d230 <col:64, col:70> 'int' lvalue ->bytes_to_write 0x1e002c9b908
|   |   |   `-ImplicitCastExpr 0x1e002c9d218 <col:64> 'PEER *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1e002c9d1f8 <col:64> 'PEER *' lvalue ParmVar 0x1e002c9bf10 'peer' 'PEER *'
|   |   `-ImplicitCastExpr 0x1e002c9d2e0 <line:562:9, col:15> 'int' <LValueToRValue>
|   |     `-MemberExpr 0x1e002c9d298 <col:9, col:15> 'int' lvalue ->write_buf_len 0x1e002c9b7b8
|   |       `-ImplicitCastExpr 0x1e002c9d280 <col:9> 'PEER *' <LValueToRValue>
|   |         `-DeclRefExpr 0x1e002c9d260 <col:9> 'PEER *' lvalue ParmVar 0x1e002c9bf10 'peer' 'PEER *'
|   |-IfStmt 0x1e002c9da58 <line:563:5, line:577:5>
|   | |-ImplicitCastExpr 0x1e002c9d368 <line:563:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1e002c9d348 <col:9> 'int' lvalue Var 0x1e002c9c138 'write_bytes' 'int'
|   | `-CompoundStmt 0x1e002c9da40 <col:22, line:577:5>
|   |   `-IfStmt 0x1e002c9da18 <line:565:9, line:576:9> has_else
|   |     |-BinaryOperator 0x1e002c9d5d0 <line:565:13, col:19> 'int' '>'
|   |     | |-ImplicitCastExpr 0x1e002c9d5b8 <col:13> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1e002c9d570 <col:13> 'int' lvalue Var 0x1e002c9c090 'ret' 'int'
|   |     | `-IntegerLiteral 0x1e002c9d590 <col:19> 'int' 0
|   |     |-CompoundStmt 0x1e002c9d900 <col:22, line:569:9>
|   |     | |-DoStmt 0x1e002c9d808 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   |     | | |-CompoundStmt 0x1e002c9d7c8 <line:106:8, line:111:5>
|   |     | | | `-IfStmt 0x1e002c9d7b0 <line:107:9, line:110:9>
|   |     | | |   |-UnaryOperator 0x1e002c9d6a0 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   |     | | |   | `-ParenExpr 0x1e002c9d680 <col:14, col:24> 'int'
|   |     | | |   |   `-BinaryOperator 0x1e002c9d660 <.//openssl//file_jk/before\test\handshake_helper.c:567:24, col:31> 'int' '=='
|   |     | | |   |     |-ImplicitCastExpr 0x1e002c9d630 <col:24> 'int' <LValueToRValue>
|   |     | | |   |     | `-DeclRefExpr 0x1e002c9d5f0 <col:24> 'int' lvalue Var 0x1e002c9c090 'ret' 'int'
|   |     | | |   |     `-ImplicitCastExpr 0x1e002c9d648 <col:31> 'int' <LValueToRValue>
|   |     | | |   |       `-DeclRefExpr 0x1e002c9d610 <col:31> 'int' lvalue Var 0x1e002c9c138 'write_bytes' 'int'
|   |     | | |   `-CompoundStmt 0x1e002c9d798 <.//openssl//file_jk/before\test/testutil.h:107:27, line:110:9>
|   |     | | |     `-CallExpr 0x1e002c9d770 <line:109:13, col:39> 'int'
|   |     | | |       |-ImplicitCastExpr 0x1e002c9d758 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |     | | |       | `-DeclRefExpr 0x1e002c9d6d8 <col:13> 'int ()' Function 0x1e002c83670 'OPENSSL_assert' 'int ()'
|   |     | | |       `-UnaryOperator 0x1e002c9d740 <col:28, <scratch space>:17:1> 'int' prefix '!' cannot overflow
|   |     | | |         `-ImplicitCastExpr 0x1e002c9d728 <col:1> 'char *' <ArrayToPointerDecay>
|   |     | | |           `-StringLiteral 0x1e002c9d6f8 <col:1> 'char [19]' lvalue "ret == write_bytes"
|   |     | | `-IntegerLiteral 0x1e002c9d7e0 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |     | |-NullStmt 0x1e002c9d828 <.//openssl//file_jk/before\test\handshake_helper.c:567:43>
|   |     | `-CompoundAssignOperator 0x1e002c9d8d0 <line:568:13, col:37> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     |   |-MemberExpr 0x1e002c9d868 <col:13, col:19> 'int' lvalue ->bytes_to_write 0x1e002c9b908
|   |     |   | `-ImplicitCastExpr 0x1e002c9d850 <col:13> 'PEER *' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x1e002c9d830 <col:13> 'PEER *' lvalue ParmVar 0x1e002c9bf10 'peer' 'PEER *'
|   |     |   `-ImplicitCastExpr 0x1e002c9d8b8 <col:37> 'int' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x1e002c9d898 <col:37> 'int' lvalue Var 0x1e002c9c090 'ret' 'int'
|   |     `-CompoundStmt 0x1e002c9d9f8 <line:569:16, line:576:9>
|   |       |-BinaryOperator 0x1e002c9d9c8 <line:574:13, col:28> 'peer_status_t':'peer_status_t' '='
|   |       | |-MemberExpr 0x1e002c9d960 <col:13, col:19> 'peer_status_t':'peer_status_t' lvalue ->status 0x1e002c9ba00
|   |       | | `-ImplicitCastExpr 0x1e002c9d948 <col:13> 'PEER *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x1e002c9d928 <col:13> 'PEER *' lvalue ParmVar 0x1e002c9bf10 'peer' 'PEER *'
|   |       | `-ImplicitCastExpr 0x1e002c9d9b0 <col:28> 'peer_status_t':'peer_status_t' <IntegralCast>
|   |       |   `-DeclRefExpr 0x1e002c9d990 <col:28> 'int' EnumConstant 0x1e002c9b4e0 'PEER_ERROR' 'int'
|   |       `-ReturnStmt 0x1e002c9d9e8 <line:575:13>
|   `-IfStmt 0x1e002c9dc98 <line:585:5, line:587:5>
|     |-BinaryOperator 0x1e002c9dba0 <line:585:9, col:41> 'int' '&&'
|     | |-UnaryOperator 0x1e002c9daf0 <col:9, col:16> 'int' prefix '!' cannot overflow
|     | | `-ImplicitCastExpr 0x1e002c9dad8 <col:10, col:16> 'int' <LValueToRValue>
|     | |   `-MemberExpr 0x1e002c9daa8 <col:10, col:16> 'int' lvalue ->bytes_to_write 0x1e002c9b908
|     | |     `-ImplicitCastExpr 0x1e002c9da90 <col:10> 'PEER *' <LValueToRValue>
|     | |       `-DeclRefExpr 0x1e002c9da70 <col:10> 'PEER *' lvalue ParmVar 0x1e002c9bf10 'peer' 'PEER *'
|     | `-UnaryOperator 0x1e002c9db88 <col:34, col:41> 'int' prefix '!' cannot overflow
|     |   `-ImplicitCastExpr 0x1e002c9db70 <col:35, col:41> 'int' <LValueToRValue>
|     |     `-MemberExpr 0x1e002c9db40 <col:35, col:41> 'int' lvalue ->bytes_to_read 0x1e002c9b978
|     |       `-ImplicitCastExpr 0x1e002c9db28 <col:35> 'PEER *' <LValueToRValue>
|     |         `-DeclRefExpr 0x1e002c9db08 <col:35> 'PEER *' lvalue ParmVar 0x1e002c9bf10 'peer' 'PEER *'
|     `-CompoundStmt 0x1e002c9dc80 <col:56, line:587:5>
|       `-BinaryOperator 0x1e002c9dc60 <line:586:9, col:24> 'peer_status_t':'peer_status_t' '='
|         |-MemberExpr 0x1e002c9dbf8 <col:9, col:15> 'peer_status_t':'peer_status_t' lvalue ->status 0x1e002c9ba00
|         | `-ImplicitCastExpr 0x1e002c9dbe0 <col:9> 'PEER *' <LValueToRValue>
|         |   `-DeclRefExpr 0x1e002c9dbc0 <col:9> 'PEER *' lvalue ParmVar 0x1e002c9bf10 'peer' 'PEER *'
|         `-ImplicitCastExpr 0x1e002c9dc48 <col:24> 'peer_status_t':'peer_status_t' <IntegralCast>
|           `-DeclRefExpr 0x1e002c9dc28 <col:24> 'int' EnumConstant 0x1e002c9b430 'PEER_SUCCESS' 'int'
|-FunctionDecl 0x1e002c9df08 <line:590:1, line:687:1> line:590:13 used do_reneg_setup_step 'void (const SSL_TEST_CTX *, PEER *)' static
| |-ParmVarDecl 0x1e002c9dd48 <col:33, col:53> col:53 used test_ctx 'const SSL_TEST_CTX *'
| |-ParmVarDecl 0x1e002c9ddc0 <col:63, col:69> col:69 used peer 'PEER *'
| `-CompoundStmt 0x1e002c9f638 <line:591:1, line:687:1>
|   |-DeclStmt 0x1e002c9e050 <line:592:5, col:12>
|   | `-VarDecl 0x1e002c9dfe8 <col:5, col:9> col:9 used ret 'int'
|   |-DeclStmt 0x1e002c9e0e0 <line:593:5, col:13>
|   | `-VarDecl 0x1e002c9e078 <col:5, col:10> col:10 used buf 'char'
|   |-IfStmt 0x1e002c9e3b8 <line:595:5, line:604:5>
|   | |-BinaryOperator 0x1e002c9e1b0 <line:595:9, col:25> 'int' '=='
|   | | |-ImplicitCastExpr 0x1e002c9e198 <col:9, col:15> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x1e002c9e180 <col:9, col:15> 'peer_status_t':'peer_status_t' <LValueToRValue>
|   | | |   `-MemberExpr 0x1e002c9e130 <col:9, col:15> 'peer_status_t':'peer_status_t' lvalue ->status 0x1e002c9ba00
|   | | |     `-ImplicitCastExpr 0x1e002c9e118 <col:9> 'PEER *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x1e002c9e0f8 <col:9> 'PEER *' lvalue ParmVar 0x1e002c9ddc0 'peer' 'PEER *'
|   | | `-DeclRefExpr 0x1e002c9e160 <col:25> 'int' EnumConstant 0x1e002c9b430 'PEER_SUCCESS' 'int'
|   | `-CompoundStmt 0x1e002c9e390 <col:39, line:604:5>
|   |   |-BinaryOperator 0x1e002c9e270 <line:601:9, col:24> 'peer_status_t':'peer_status_t' '='
|   |   | |-MemberExpr 0x1e002c9e208 <col:9, col:15> 'peer_status_t':'peer_status_t' lvalue ->status 0x1e002c9ba00
|   |   | | `-ImplicitCastExpr 0x1e002c9e1f0 <col:9> 'PEER *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1e002c9e1d0 <col:9> 'PEER *' lvalue ParmVar 0x1e002c9ddc0 'peer' 'PEER *'
|   |   | `-ImplicitCastExpr 0x1e002c9e258 <col:24> 'peer_status_t':'peer_status_t' <IntegralCast>
|   |   |   `-DeclRefExpr 0x1e002c9e238 <col:24> 'int' EnumConstant 0x1e002c9b488 'PEER_RETRY' 'int'
|   |   |-CallExpr 0x1e002c9e340 <line:602:9, col:31> 'void'
|   |   | |-ImplicitCastExpr 0x1e002c9e328 <col:9> 'void (*)(PEER *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1e002c9e290 <col:9> 'void (PEER *)' Function 0x1e002c9a3b8 'do_handshake_step' 'void (PEER *)'
|   |   | `-ImplicitCastExpr 0x1e002c9e368 <col:27> 'PEER *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1e002c9e2b0 <col:27> 'PEER *' lvalue ParmVar 0x1e002c9ddc0 'peer' 'PEER *'
|   |   `-ReturnStmt 0x1e002c9e380 <line:603:9>
|   |-DoStmt 0x1e002c9e638 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x1e002c9e5f8 <line:106:8, line:111:5>
|   | | `-IfStmt 0x1e002c9e5e0 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x1e002c9e4c8 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x1e002c9e4a8 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x1e002c9e488 <.//openssl//file_jk/before\test\handshake_helper.c:606:16, col:32> 'int' '=='
|   | |   |     |-ImplicitCastExpr 0x1e002c9e470 <col:16, col:22> 'int' <IntegralCast>
|   | |   |     | `-ImplicitCastExpr 0x1e002c9e458 <col:16, col:22> 'peer_status_t':'peer_status_t' <LValueToRValue>
|   | |   |     |   `-MemberExpr 0x1e002c9e408 <col:16, col:22> 'peer_status_t':'peer_status_t' lvalue ->status 0x1e002c9ba00
|   | |   |     |     `-ImplicitCastExpr 0x1e002c9e3f0 <col:16> 'PEER *' <LValueToRValue>
|   | |   |     |       `-DeclRefExpr 0x1e002c9e3d0 <col:16> 'PEER *' lvalue ParmVar 0x1e002c9ddc0 'peer' 'PEER *'
|   | |   |     `-DeclRefExpr 0x1e002c9e438 <col:32> 'int' EnumConstant 0x1e002c9b488 'PEER_RETRY' 'int'
|   | |   `-CompoundStmt 0x1e002c9e5c8 <.//openssl//file_jk/before\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x1e002c9e5a0 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x1e002c9e588 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x1e002c9e500 <col:13> 'int ()' Function 0x1e002c83670 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x1e002c9e570 <col:28, <scratch space>:18:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x1e002c9e558 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x1e002c9e520 <col:1> 'char [27]' lvalue "peer->status == PEER_RETRY"
|   | `-IntegerLiteral 0x1e002c9e610 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x1e002c9e658 <.//openssl//file_jk/before\test\handshake_helper.c:606:43>
|   |-DoStmt 0x1e002c9ea60 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x1e002c9ea20 <line:106:8, line:111:5>
|   | | `-IfStmt 0x1e002c9ea08 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x1e002c9e850 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x1e002c9e830 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x1e002c9e810 <.//openssl//file_jk/before\test\handshake_helper.c:607:16, line:608:48> 'int' '||'
|   | |   |     |-BinaryOperator 0x1e002c9e718 <line:607:16, col:44> 'int' '=='
|   | |   |     | |-ImplicitCastExpr 0x1e002c9e700 <col:16, col:26> 'int' <IntegralCast>
|   | |   |     | | `-ImplicitCastExpr 0x1e002c9e6e8 <col:16, col:26> 'ssl_handshake_mode_t':'ssl_handshake_mode_t' <LValueToRValue>
|   | |   |     | |   `-MemberExpr 0x1e002c9e698 <col:16, col:26> 'const ssl_handshake_mode_t':'const ssl_handshake_mode_t' lvalue ->handshake_mode 0x1e002cdc2c0
|   | |   |     | |     `-ImplicitCastExpr 0x1e002c9e680 <col:16> 'const SSL_TEST_CTX *' <LValueToRValue>
|   | |   |     | |       `-DeclRefExpr 0x1e002c9e660 <col:16> 'const SSL_TEST_CTX *' lvalue ParmVar 0x1e002c9dd48 'test_ctx' 'const SSL_TEST_CTX *'
|   | |   |     | `-DeclRefExpr 0x1e002c9e6c8 <col:44> 'int' EnumConstant 0x1e002cd4d20 'SSL_TEST_HANDSHAKE_RENEG_SERVER' 'int'
|   | |   |     `-BinaryOperator 0x1e002c9e7f0 <line:608:20, col:48> 'int' '=='
|   | |   |       |-ImplicitCastExpr 0x1e002c9e7d8 <col:20, col:30> 'int' <IntegralCast>
|   | |   |       | `-ImplicitCastExpr 0x1e002c9e7c0 <col:20, col:30> 'ssl_handshake_mode_t':'ssl_handshake_mode_t' <LValueToRValue>
|   | |   |       |   `-MemberExpr 0x1e002c9e770 <col:20, col:30> 'const ssl_handshake_mode_t':'const ssl_handshake_mode_t' lvalue ->handshake_mode 0x1e002cdc2c0
|   | |   |       |     `-ImplicitCastExpr 0x1e002c9e758 <col:20> 'const SSL_TEST_CTX *' <LValueToRValue>
|   | |   |       |       `-DeclRefExpr 0x1e002c9e738 <col:20> 'const SSL_TEST_CTX *' lvalue ParmVar 0x1e002c9dd48 'test_ctx' 'const SSL_TEST_CTX *'
|   | |   |       `-DeclRefExpr 0x1e002c9e7a0 <col:48> 'int' EnumConstant 0x1e002cd4d78 'SSL_TEST_HANDSHAKE_RENEG_CLIENT' 'int'
|   | |   `-CompoundStmt 0x1e002c9e9f0 <.//openssl//file_jk/before\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x1e002c9e9c8 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x1e002c9e9b0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x1e002c9e888 <col:13> 'int ()' Function 0x1e002c83670 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x1e002c9e998 <col:28, <scratch space>:19:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x1e002c9e980 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x1e002c9e8e8 <col:1> 'char [123]' lvalue "test_ctx->handshake_mode == SSL_TEST_HANDSHAKE_RENEG_SERVER || test_ctx->handshake_mode == SSL_TEST_HANDSHAKE_RENEG_CLIENT"
|   | `-IntegerLiteral 0x1e002c9ea38 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x1e002c9ea80 <.//openssl//file_jk/before\test\handshake_helper.c:608:80>
|   |-IfStmt 0x1e002c9ee88 <line:611:5, line:660:5>
|   | |-OpaqueValueExpr 0x1e002c9ee70 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1e002c9ee58 <line:614:48, line:660:5>
|   |   `-IfStmt 0x1e002c9ee40 <line:619:9, line:659:9>
|   |     |-OpaqueValueExpr 0x1e002c9ee28 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x1e002c9edf0 <line:619:50, line:659:9>
|   |       |-IfStmt 0x1e002c977d8 <line:625:13, line:638:13> has_else
|   |       | |-OpaqueValueExpr 0x1e002c977c0 <<invalid sloc>> '_Bool'
|   |       | |-CompoundStmt 0x1e002c97098 <line:625:43, line:627:13>
|   |       | `-CompoundStmt 0x1e002c977a8 <col:20, line:638:13>
|   |       |   `-IfStmt 0x1e002c97780 <line:628:17, line:637:17> has_else
|   |       |     |-BinaryOperator 0x1e002c97228 <line:628:21, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   |       |     | |-ImplicitCastExpr 0x1e002c971f8 <.//openssl//file_jk/before\test\handshake_helper.c:628:21, col:44> 'char *' <LValueToRValue>
|   |       |     | | `-MemberExpr 0x1e002c97140 <col:21, col:44> 'char *const' lvalue .reneg_ciphers 0x1e002ce18a0
|   |       |     | |   `-MemberExpr 0x1e002c97110 <col:21, col:37> 'const SSL_TEST_CLIENT_CONF':'const SSL_TEST_CLIENT_CONF' lvalue .client 0x1e002ce1ea0
|   |       |     | |     `-MemberExpr 0x1e002c970e0 <col:21, col:31> 'const SSL_TEST_EXTRA_CONF':'const SSL_TEST_EXTRA_CONF' lvalue ->extra 0x1e002cdc430
|   |       |     | |       `-ImplicitCastExpr 0x1e002c970c8 <col:21> 'const SSL_TEST_CTX *' <LValueToRValue>
|   |       |     | |         `-DeclRefExpr 0x1e002c970a8 <col:21> 'const SSL_TEST_CTX *' lvalue ParmVar 0x1e002c9dd48 'test_ctx' 'const SSL_TEST_CTX *'
|   |       |     | `-ImplicitCastExpr 0x1e002c97210 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   |       |     |   `-ParenExpr 0x1e002c971d8 <col:17, col:27> 'void *'
|   |       |     |     `-CStyleCastExpr 0x1e002c971b0 <col:18, col:26> 'void *' <NullToPointer>
|   |       |     |       `-IntegerLiteral 0x1e002c97170 <col:26> 'int' 0
|   |       |     |-CompoundStmt 0x1e002c975f0 <.//openssl//file_jk/before\test\handshake_helper.c:628:67, line:635:17>
|   |       |     | `-IfStmt 0x1e002c97560 <line:629:21, line:633:21>
|   |       |     |   |-OpaqueValueExpr 0x1e002c97548 <<invalid sloc>> '_Bool'
|   |       |     |   `-CompoundStmt 0x1e002c97528 <line:630:72, line:633:21>
|   |       |     |     |-BinaryOperator 0x1e002c974f8 <line:631:25, col:40> 'peer_status_t':'peer_status_t' '='
|   |       |     |     | |-MemberExpr 0x1e002c97490 <col:25, col:31> 'peer_status_t':'peer_status_t' lvalue ->status 0x1e002c9ba00
|   |       |     |     | | `-ImplicitCastExpr 0x1e002c97478 <col:25> 'PEER *' <LValueToRValue>
|   |       |     |     | |   `-DeclRefExpr 0x1e002c97458 <col:25> 'PEER *' lvalue ParmVar 0x1e002c9ddc0 'peer' 'PEER *'
|   |       |     |     | `-ImplicitCastExpr 0x1e002c974e0 <col:40> 'peer_status_t':'peer_status_t' <IntegralCast>
|   |       |     |     |   `-DeclRefExpr 0x1e002c974c0 <col:40> 'int' EnumConstant 0x1e002c9b4e0 'PEER_ERROR' 'int'
|   |       |     |     `-ReturnStmt 0x1e002c97518 <line:632:25>
|   |       |     `-CompoundStmt 0x1e002c97770 <line:635:24, line:637:17>
|   |       |-IfStmt 0x1e002c97940 <line:639:13, line:642:13>
|   |       | |-UnaryOperator 0x1e002c97838 <line:639:17, col:18> 'int' prefix '!' cannot overflow
|   |       | | `-ImplicitCastExpr 0x1e002c97820 <col:18> 'int' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x1e002c97800 <col:18> 'int' lvalue Var 0x1e002c9dfe8 'ret' 'int'
|   |       | `-CompoundStmt 0x1e002c97920 <col:23, line:642:13>
|   |       |   |-BinaryOperator 0x1e002c978f0 <line:640:17, col:32> 'peer_status_t':'peer_status_t' '='
|   |       |   | |-MemberExpr 0x1e002c97888 <col:17, col:23> 'peer_status_t':'peer_status_t' lvalue ->status 0x1e002c9ba00
|   |       |   | | `-ImplicitCastExpr 0x1e002c97870 <col:17> 'PEER *' <LValueToRValue>
|   |       |   | |   `-DeclRefExpr 0x1e002c97850 <col:17> 'PEER *' lvalue ParmVar 0x1e002c9ddc0 'peer' 'PEER *'
|   |       |   | `-ImplicitCastExpr 0x1e002c978d8 <col:32> 'peer_status_t':'peer_status_t' <IntegralCast>
|   |       |   |   `-DeclRefExpr 0x1e002c978b8 <col:32> 'int' EnumConstant 0x1e002c9b4e0 'PEER_ERROR' 'int'
|   |       |   `-ReturnStmt 0x1e002c97910 <line:641:17>
|   |       |-CallExpr 0x1e002c979b0 <line:643:13, col:35> 'void'
|   |       | |-ImplicitCastExpr 0x1e002c97998 <col:13> 'void (*)(PEER *)' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x1e002c97958 <col:13> 'void (PEER *)' Function 0x1e002c9a3b8 'do_handshake_step' 'void (PEER *)'
|   |       | `-ImplicitCastExpr 0x1e002c979d8 <col:31> 'PEER *' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x1e002c97978 <col:31> 'PEER *' lvalue ParmVar 0x1e002c9ddc0 'peer' 'PEER *'
|   |       |-IfStmt 0x1e002c9edb8 <line:654:13, line:657:32> has_else
|   |       | |-BinaryOperator 0x1e002c97aa8 <line:654:17, col:33> 'int' '=='
|   |       | | |-ImplicitCastExpr 0x1e002c97a90 <col:17, col:23> 'int' <IntegralCast>
|   |       | | | `-ImplicitCastExpr 0x1e002c97a78 <col:17, col:23> 'peer_status_t':'peer_status_t' <LValueToRValue>
|   |       | | |   `-MemberExpr 0x1e002c97a28 <col:17, col:23> 'peer_status_t':'peer_status_t' lvalue ->status 0x1e002c9ba00
|   |       | | |     `-ImplicitCastExpr 0x1e002c97a10 <col:17> 'PEER *' <LValueToRValue>
|   |       | | |       `-DeclRefExpr 0x1e002c979f0 <col:17> 'PEER *' lvalue ParmVar 0x1e002c9ddc0 'peer' 'PEER *'
|   |       | | `-DeclRefExpr 0x1e002c97a58 <col:33> 'int' EnumConstant 0x1e002c9b488 'PEER_RETRY' 'int'
|   |       | |-BinaryOperator 0x1e002c97b68 <line:655:17, col:32> 'peer_status_t':'peer_status_t' '='
|   |       | | |-MemberExpr 0x1e002c97b00 <col:17, col:23> 'peer_status_t':'peer_status_t' lvalue ->status 0x1e002c9ba00
|   |       | | | `-ImplicitCastExpr 0x1e002c97ae8 <col:17> 'PEER *' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x1e002c97ac8 <col:17> 'PEER *' lvalue ParmVar 0x1e002c9ddc0 'peer' 'PEER *'
|   |       | | `-ImplicitCastExpr 0x1e002c97b50 <col:32> 'peer_status_t':'peer_status_t' <IntegralCast>
|   |       | |   `-DeclRefExpr 0x1e002c97b30 <col:32> 'int' EnumConstant 0x1e002c9b430 'PEER_SUCCESS' 'int'
|   |       | `-IfStmt 0x1e002c9eda0 <line:656:18, line:657:32>
|   |       |   |-BinaryOperator 0x1e002c97c40 <line:656:22, col:38> 'int' '=='
|   |       |   | |-ImplicitCastExpr 0x1e002c97c28 <col:22, col:28> 'int' <IntegralCast>
|   |       |   | | `-ImplicitCastExpr 0x1e002c97c10 <col:22, col:28> 'peer_status_t':'peer_status_t' <LValueToRValue>
|   |       |   | |   `-MemberExpr 0x1e002c97bc0 <col:22, col:28> 'peer_status_t':'peer_status_t' lvalue ->status 0x1e002c9ba00
|   |       |   | |     `-ImplicitCastExpr 0x1e002c97ba8 <col:22> 'PEER *' <LValueToRValue>
|   |       |   | |       `-DeclRefExpr 0x1e002c97b88 <col:22> 'PEER *' lvalue ParmVar 0x1e002c9ddc0 'peer' 'PEER *'
|   |       |   | `-DeclRefExpr 0x1e002c97bf0 <col:38> 'int' EnumConstant 0x1e002c9b430 'PEER_SUCCESS' 'int'
|   |       |   `-BinaryOperator 0x1e002c9ed80 <line:657:17, col:32> 'peer_status_t':'peer_status_t' '='
|   |       |     |-MemberExpr 0x1e002c9ed18 <col:17, col:23> 'peer_status_t':'peer_status_t' lvalue ->status 0x1e002c9ba00
|   |       |     | `-ImplicitCastExpr 0x1e002c9ed00 <col:17> 'PEER *' <LValueToRValue>
|   |       |     |   `-DeclRefExpr 0x1e002c97c60 <col:17> 'PEER *' lvalue ParmVar 0x1e002c9ddc0 'peer' 'PEER *'
|   |       |     `-ImplicitCastExpr 0x1e002c9ed68 <col:32> 'peer_status_t':'peer_status_t' <IntegralCast>
|   |       |       `-DeclRefExpr 0x1e002c9ed48 <col:32> 'int' EnumConstant 0x1e002c9b488 'PEER_RETRY' 'int'
|   |       `-ReturnStmt 0x1e002c9ede0 <line:658:13>
|   |-IfStmt 0x1e002c9f550 <line:668:5, line:684:5> has_else
|   | |-BinaryOperator 0x1e002c9f028 <line:668:9, col:16> 'int' '>='
|   | | |-ImplicitCastExpr 0x1e002c9f010 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1e002c9efc8 <col:9> 'int' lvalue Var 0x1e002c9dfe8 'ret' 'int'
|   | | `-IntegerLiteral 0x1e002c9efe8 <col:16> 'int' 0
|   | |-CompoundStmt 0x1e002c9f118 <col:19, line:675:5>
|   | | |-BinaryOperator 0x1e002c9f0e8 <line:673:9, col:24> 'peer_status_t':'peer_status_t' '='
|   | | | |-MemberExpr 0x1e002c9f080 <col:9, col:15> 'peer_status_t':'peer_status_t' lvalue ->status 0x1e002c9ba00
|   | | | | `-ImplicitCastExpr 0x1e002c9f068 <col:9> 'PEER *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x1e002c9f048 <col:9> 'PEER *' lvalue ParmVar 0x1e002c9ddc0 'peer' 'PEER *'
|   | | | `-ImplicitCastExpr 0x1e002c9f0d0 <col:24> 'peer_status_t':'peer_status_t' <IntegralCast>
|   | | |   `-DeclRefExpr 0x1e002c9f0b0 <col:24> 'int' EnumConstant 0x1e002c9b4e0 'PEER_ERROR' 'int'
|   | | `-ReturnStmt 0x1e002c9f108 <line:674:9>
|   | `-CompoundStmt 0x1e002c9f528 <line:675:12, line:684:5>
|   |   |-DeclStmt 0x1e002c9f230 <line:676:9, col:50>
|   |   | `-VarDecl 0x1e002c9f150 <col:9, col:13> col:13 used error 'int'
|   |   |-IfStmt 0x1e002c9f388 <line:677:9, line:680:9>
|   |   | |-OpaqueValueExpr 0x1e002c9f370 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x1e002c9f350 <line:677:43, line:680:9>
|   |   |   |-BinaryOperator 0x1e002c9f320 <line:678:13, col:28> 'peer_status_t':'peer_status_t' '='
|   |   |   | |-MemberExpr 0x1e002c9f2b8 <col:13, col:19> 'peer_status_t':'peer_status_t' lvalue ->status 0x1e002c9ba00
|   |   |   | | `-ImplicitCastExpr 0x1e002c9f2a0 <col:13> 'PEER *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x1e002c9f280 <col:13> 'PEER *' lvalue ParmVar 0x1e002c9ddc0 'peer' 'PEER *'
|   |   |   | `-ImplicitCastExpr 0x1e002c9f308 <col:28> 'peer_status_t':'peer_status_t' <IntegralCast>
|   |   |   |   `-DeclRefExpr 0x1e002c9f2e8 <col:28> 'int' EnumConstant 0x1e002c9b4e0 'PEER_ERROR' 'int'
|   |   |   `-ReturnStmt 0x1e002c9f340 <line:679:13>
|   |   `-IfStmt 0x1e002c9f510 <line:682:9, line:683:13>
|   |     |-OpaqueValueExpr 0x1e002c9f4f8 <<invalid sloc>> '_Bool'
|   |     `-ReturnStmt 0x1e002c9f4e8 <col:13>
|   `-BinaryOperator 0x1e002c9f618 <line:686:5, col:20> 'peer_status_t':'peer_status_t' '='
|     |-MemberExpr 0x1e002c9f5b0 <col:5, col:11> 'peer_status_t':'peer_status_t' lvalue ->status 0x1e002c9ba00
|     | `-ImplicitCastExpr 0x1e002c9f598 <col:5> 'PEER *' <LValueToRValue>
|     |   `-DeclRefExpr 0x1e002c9f578 <col:5> 'PEER *' lvalue ParmVar 0x1e002c9ddc0 'peer' 'PEER *'
|     `-ImplicitCastExpr 0x1e002c9f600 <col:20> 'peer_status_t':'peer_status_t' <IntegralCast>
|       `-DeclRefExpr 0x1e002c9f5e0 <col:20> 'int' EnumConstant 0x1e002c9b430 'PEER_SUCCESS' 'int'
|-FunctionDecl 0x1e002c9f750 <line:705:1, line:720:1> line:705:13 used do_shutdown_step 'void (PEER *)' static
| |-ParmVarDecl 0x1e002c9f6a8 <col:30, col:36> col:36 used peer 'PEER *'
| `-CompoundStmt 0x1e002c990c8 <line:706:1, line:720:1>
|   |-DeclStmt 0x1e002c9f890 <line:707:5, col:12>
|   | `-VarDecl 0x1e002c9f828 <col:5, col:9> col:9 used ret 'int'
|   |-DoStmt 0x1e002c9fb10 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x1e002c9fad0 <line:106:8, line:111:5>
|   | | `-IfStmt 0x1e002c9fab8 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x1e002c9f9a0 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x1e002c9f980 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x1e002c9f960 <.//openssl//file_jk/before\test\handshake_helper.c:709:16, col:32> 'int' '=='
|   | |   |     |-ImplicitCastExpr 0x1e002c9f948 <col:16, col:22> 'int' <IntegralCast>
|   | |   |     | `-ImplicitCastExpr 0x1e002c9f930 <col:16, col:22> 'peer_status_t':'peer_status_t' <LValueToRValue>
|   | |   |     |   `-MemberExpr 0x1e002c9f8e0 <col:16, col:22> 'peer_status_t':'peer_status_t' lvalue ->status 0x1e002c9ba00
|   | |   |     |     `-ImplicitCastExpr 0x1e002c9f8c8 <col:16> 'PEER *' <LValueToRValue>
|   | |   |     |       `-DeclRefExpr 0x1e002c9f8a8 <col:16> 'PEER *' lvalue ParmVar 0x1e002c9f6a8 'peer' 'PEER *'
|   | |   |     `-DeclRefExpr 0x1e002c9f910 <col:32> 'int' EnumConstant 0x1e002c9b488 'PEER_RETRY' 'int'
|   | |   `-CompoundStmt 0x1e002c9faa0 <.//openssl//file_jk/before\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x1e002c9fa78 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x1e002c9fa60 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x1e002c9f9d8 <col:13> 'int ()' Function 0x1e002c83670 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x1e002c9fa48 <col:28, <scratch space>:20:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x1e002c9fa30 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x1e002c9f9f8 <col:1> 'char [27]' lvalue "peer->status == PEER_RETRY"
|   | `-IntegerLiteral 0x1e002c9fae8 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x1e002c9fb30 <.//openssl//file_jk/before\test\handshake_helper.c:709:43>
|   `-IfStmt 0x1e002c990a0 <line:712:5, line:719:5> has_else
|     |-BinaryOperator 0x1e002c98cb8 <line:712:9, col:16> 'int' '=='
|     | |-ImplicitCastExpr 0x1e002c98ca0 <col:9> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x1e002c9fcb8 <col:9> 'int' lvalue Var 0x1e002c9f828 'ret' 'int'
|     | `-IntegerLiteral 0x1e002c9fcd8 <col:16> 'int' 1
|     |-CompoundStmt 0x1e002c98d98 <col:19, line:714:5>
|     | `-BinaryOperator 0x1e002c98d78 <line:713:9, col:24> 'peer_status_t':'peer_status_t' '='
|     |   |-MemberExpr 0x1e002c98d10 <col:9, col:15> 'peer_status_t':'peer_status_t' lvalue ->status 0x1e002c9ba00
|     |   | `-ImplicitCastExpr 0x1e002c98cf8 <col:9> 'PEER *' <LValueToRValue>
|     |   |   `-DeclRefExpr 0x1e002c98cd8 <col:9> 'PEER *' lvalue ParmVar 0x1e002c9f6a8 'peer' 'PEER *'
|     |   `-ImplicitCastExpr 0x1e002c98d60 <col:24> 'peer_status_t':'peer_status_t' <IntegralCast>
|     |     `-DeclRefExpr 0x1e002c98d40 <col:24> 'int' EnumConstant 0x1e002c9b430 'PEER_SUCCESS' 'int'
|     `-IfStmt 0x1e002c99088 <line:714:12, line:719:5>
|       |-BinaryOperator 0x1e002c98e10 <line:714:16, col:22> 'int' '<'
|       | |-ImplicitCastExpr 0x1e002c98df8 <col:16> 'int' <LValueToRValue>
|       | | `-DeclRefExpr 0x1e002c98db0 <col:16> 'int' lvalue Var 0x1e002c9f828 'ret' 'int'
|       | `-IntegerLiteral 0x1e002c98dd0 <col:22> 'int' 0
|       `-CompoundStmt 0x1e002c99068 <col:25, line:719:5>
|         |-DeclStmt 0x1e002c98f28 <line:715:9, col:50>
|         | `-VarDecl 0x1e002c98e48 <col:9, col:13> col:13 used error 'int'
|         `-IfStmt 0x1e002c99050 <line:717:9, line:718:28>
|           |-OpaqueValueExpr 0x1e002c99038 <<invalid sloc>> '_Bool'
|           `-BinaryOperator 0x1e002c99018 <col:13, col:28> 'peer_status_t':'peer_status_t' '='
|             |-MemberExpr 0x1e002c98fb0 <col:13, col:19> 'peer_status_t':'peer_status_t' lvalue ->status 0x1e002c9ba00
|             | `-ImplicitCastExpr 0x1e002c98f98 <col:13> 'PEER *' <LValueToRValue>
|             |   `-DeclRefExpr 0x1e002c98f78 <col:13> 'PEER *' lvalue ParmVar 0x1e002c9f6a8 'peer' 'PEER *'
|             `-ImplicitCastExpr 0x1e002c99000 <col:28> 'peer_status_t':'peer_status_t' <IntegralCast>
|               `-DeclRefExpr 0x1e002c98fe0 <col:28> 'int' EnumConstant 0x1e002c9b4e0 'PEER_ERROR' 'int'
|-EnumDecl 0x1e002c990f8 <line:722:9, line:730:1> line:722:9
| |-EnumConstantDecl 0x1e002c991d0 <line:723:5> col:5 referenced HANDSHAKE 'int'
| |-EnumConstantDecl 0x1e002c99228 <line:724:5> col:5 referenced RENEG_APPLICATION_DATA 'int'
| |-EnumConstantDecl 0x1e002c99280 <line:725:5> col:5 referenced RENEG_SETUP 'int'
| |-EnumConstantDecl 0x1e002c992d8 <line:726:5> col:5 referenced RENEG_HANDSHAKE 'int'
| |-EnumConstantDecl 0x1e002c99330 <line:727:5> col:5 referenced APPLICATION_DATA 'int'
| |-EnumConstantDecl 0x1e002c99388 <line:728:5> col:5 referenced SHUTDOWN 'int'
| `-EnumConstantDecl 0x1e002c993e0 <line:729:5> col:5 referenced CONNECTION_DONE 'int'
|-TypedefDecl 0x1e002c99498 <line:722:1, line:730:3> col:3 referenced connect_phase_t 'enum connect_phase_t':'connect_phase_t'
| `-ElaboratedType 0x1e002c99440 'enum connect_phase_t' sugar
|   `-EnumType 0x1e002c991b0 'connect_phase_t'
|     `-Enum 0x1e002c990f8 ''
|-FunctionDecl 0x1e002c996f8 <line:732:1, line:754:1> line:732:24 used next_phase 'connect_phase_t (const SSL_TEST_CTX *, connect_phase_t)' static
| |-ParmVarDecl 0x1e002c99540 <col:35, col:55> col:55 used test_ctx 'const SSL_TEST_CTX *'
| |-ParmVarDecl 0x1e002c995b8 <line:733:35, col:51> col:51 used phase 'connect_phase_t':'connect_phase_t'
| `-CompoundStmt 0x1e002ca1120 <line:734:1, line:754:1>
|   `-SwitchStmt 0x1e002c99810 <line:735:5, line:753:5>
|     |-ImplicitCastExpr 0x1e002c997f8 <line:735:13> 'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x1e002c997e0 <col:13> 'connect_phase_t':'connect_phase_t' <LValueToRValue>
|     |   `-DeclRefExpr 0x1e002c997c0 <col:13> 'connect_phase_t':'connect_phase_t' lvalue ParmVar 0x1e002c995b8 'phase' 'connect_phase_t':'connect_phase_t'
|     `-CompoundStmt 0x1e002ca10c8 <col:20, line:753:5>
|       |-CaseStmt 0x1e002c99868 <line:736:5, line:739:20>
|       | |-ConstantExpr 0x1e002c99850 <line:736:10> 'int'
|       | | `-DeclRefExpr 0x1e002c99830 <col:10> 'int' EnumConstant 0x1e002c991d0 'HANDSHAKE' 'int'
|       | `-IfStmt 0x1e002c99aa8 <line:737:9, line:739:20>
|       |   |-BinaryOperator 0x1e002c99a40 <line:737:13, line:738:48> 'int' '||'
|       |   | |-BinaryOperator 0x1e002c99948 <line:737:13, col:41> 'int' '=='
|       |   | | |-ImplicitCastExpr 0x1e002c99930 <col:13, col:23> 'int' <IntegralCast>
|       |   | | | `-ImplicitCastExpr 0x1e002c99918 <col:13, col:23> 'ssl_handshake_mode_t':'ssl_handshake_mode_t' <LValueToRValue>
|       |   | | |   `-MemberExpr 0x1e002c998c8 <col:13, col:23> 'const ssl_handshake_mode_t':'const ssl_handshake_mode_t' lvalue ->handshake_mode 0x1e002cdc2c0
|       |   | | |     `-ImplicitCastExpr 0x1e002c998b0 <col:13> 'const SSL_TEST_CTX *' <LValueToRValue>
|       |   | | |       `-DeclRefExpr 0x1e002c99890 <col:13> 'const SSL_TEST_CTX *' lvalue ParmVar 0x1e002c99540 'test_ctx' 'const SSL_TEST_CTX *'
|       |   | | `-DeclRefExpr 0x1e002c998f8 <col:41> 'int' EnumConstant 0x1e002cd4d20 'SSL_TEST_HANDSHAKE_RENEG_SERVER' 'int'
|       |   | `-BinaryOperator 0x1e002c99a20 <line:738:20, col:48> 'int' '=='
|       |   |   |-ImplicitCastExpr 0x1e002c99a08 <col:20, col:30> 'int' <IntegralCast>
|       |   |   | `-ImplicitCastExpr 0x1e002c999f0 <col:20, col:30> 'ssl_handshake_mode_t':'ssl_handshake_mode_t' <LValueToRValue>
|       |   |   |   `-MemberExpr 0x1e002c999a0 <col:20, col:30> 'const ssl_handshake_mode_t':'const ssl_handshake_mode_t' lvalue ->handshake_mode 0x1e002cdc2c0
|       |   |   |     `-ImplicitCastExpr 0x1e002c99988 <col:20> 'const SSL_TEST_CTX *' <LValueToRValue>
|       |   |   |       `-DeclRefExpr 0x1e002c99968 <col:20> 'const SSL_TEST_CTX *' lvalue ParmVar 0x1e002c99540 'test_ctx' 'const SSL_TEST_CTX *'
|       |   |   `-DeclRefExpr 0x1e002c999d0 <col:48> 'int' EnumConstant 0x1e002cd4d78 'SSL_TEST_HANDSHAKE_RENEG_CLIENT' 'int'
|       |   `-ReturnStmt 0x1e002c99a98 <line:739:13, col:20>
|       |     `-ImplicitCastExpr 0x1e002c99a80 <col:20> 'connect_phase_t':'connect_phase_t' <IntegralCast>
|       |       `-DeclRefExpr 0x1e002c99a60 <col:20> 'int' EnumConstant 0x1e002c99228 'RENEG_APPLICATION_DATA' 'int'
|       |-ReturnStmt 0x1e002c99af8 <line:740:9, col:16>
|       | `-ImplicitCastExpr 0x1e002c99ae0 <col:16> 'connect_phase_t':'connect_phase_t' <IntegralCast>
|       |   `-DeclRefExpr 0x1e002c99ac0 <col:16> 'int' EnumConstant 0x1e002c99330 'APPLICATION_DATA' 'int'
|       |-CaseStmt 0x1e002c99b40 <line:741:5, line:742:16>
|       | |-ConstantExpr 0x1e002c99b28 <line:741:10> 'int'
|       | | `-DeclRefExpr 0x1e002c99b08 <col:10> 'int' EnumConstant 0x1e002c99228 'RENEG_APPLICATION_DATA' 'int'
|       | `-ReturnStmt 0x1e002c99ba0 <line:742:9, col:16>
|       |   `-ImplicitCastExpr 0x1e002c99b88 <col:16> 'connect_phase_t':'connect_phase_t' <IntegralCast>
|       |     `-DeclRefExpr 0x1e002c99b68 <col:16> 'int' EnumConstant 0x1e002c99280 'RENEG_SETUP' 'int'
|       |-CaseStmt 0x1e002c99be8 <line:743:5, line:744:16>
|       | |-ConstantExpr 0x1e002c99bd0 <line:743:10> 'int'
|       | | `-DeclRefExpr 0x1e002c99bb0 <col:10> 'int' EnumConstant 0x1e002c99280 'RENEG_SETUP' 'int'
|       | `-ReturnStmt 0x1e002c99c48 <line:744:9, col:16>
|       |   `-ImplicitCastExpr 0x1e002c99c30 <col:16> 'connect_phase_t':'connect_phase_t' <IntegralCast>
|       |     `-DeclRefExpr 0x1e002c99c10 <col:16> 'int' EnumConstant 0x1e002c992d8 'RENEG_HANDSHAKE' 'int'
|       |-CaseStmt 0x1e002ca0d20 <line:745:5, line:746:16>
|       | |-ConstantExpr 0x1e002c99c78 <line:745:10> 'int'
|       | | `-DeclRefExpr 0x1e002c99c58 <col:10> 'int' EnumConstant 0x1e002c992d8 'RENEG_HANDSHAKE' 'int'
|       | `-ReturnStmt 0x1e002ca0d80 <line:746:9, col:16>
|       |   `-ImplicitCastExpr 0x1e002ca0d68 <col:16> 'connect_phase_t':'connect_phase_t' <IntegralCast>
|       |     `-DeclRefExpr 0x1e002ca0d48 <col:16> 'int' EnumConstant 0x1e002c99330 'APPLICATION_DATA' 'int'
|       |-CaseStmt 0x1e002ca0dc8 <line:747:5, line:748:16>
|       | |-ConstantExpr 0x1e002ca0db0 <line:747:10> 'int'
|       | | `-DeclRefExpr 0x1e002ca0d90 <col:10> 'int' EnumConstant 0x1e002c99330 'APPLICATION_DATA' 'int'
|       | `-ReturnStmt 0x1e002ca0e28 <line:748:9, col:16>
|       |   `-ImplicitCastExpr 0x1e002ca0e10 <col:16> 'connect_phase_t':'connect_phase_t' <IntegralCast>
|       |     `-DeclRefExpr 0x1e002ca0df0 <col:16> 'int' EnumConstant 0x1e002c99388 'SHUTDOWN' 'int'
|       |-CaseStmt 0x1e002ca0e70 <line:749:5, line:750:16>
|       | |-ConstantExpr 0x1e002ca0e58 <line:749:10> 'int'
|       | | `-DeclRefExpr 0x1e002ca0e38 <col:10> 'int' EnumConstant 0x1e002c99388 'SHUTDOWN' 'int'
|       | `-ReturnStmt 0x1e002ca0ed0 <line:750:9, col:16>
|       |   `-ImplicitCastExpr 0x1e002ca0eb8 <col:16> 'connect_phase_t':'connect_phase_t' <IntegralCast>
|       |     `-DeclRefExpr 0x1e002ca0e98 <col:16> 'int' EnumConstant 0x1e002c993e0 'CONNECTION_DONE' 'int'
|       |-DefaultStmt 0x1e002ca10a0 <line:751:5, .//openssl//file_jk/before\test/testutil.h:111:15>
|       | `-DoStmt 0x1e002ca1080 <line:106:5, line:111:15>
|       |   |-CompoundStmt 0x1e002ca1040 <line:106:8, line:111:5>
|       |   | `-IfStmt 0x1e002ca1028 <line:107:9, line:110:9>
|       |   |   |-UnaryOperator 0x1e002ca0f28 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|       |   |   | `-ParenExpr 0x1e002ca0f08 <col:14, col:24> 'int'
|       |   |   |   `-IntegerLiteral 0x1e002ca0ee0 <.//openssl//file_jk/before\test\handshake_helper.c:752:20> 'int' 0
|       |   |   `-CompoundStmt 0x1e002ca1010 <.//openssl//file_jk/before\test/testutil.h:107:27, line:110:9>
|       |   |     `-CallExpr 0x1e002ca0fe8 <line:109:13, col:39> 'int'
|       |   |       |-ImplicitCastExpr 0x1e002ca0fd0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|       |   |       | `-DeclRefExpr 0x1e002ca0f60 <col:13> 'int ()' Function 0x1e002c83670 'OPENSSL_assert' 'int ()'
|       |   |       `-UnaryOperator 0x1e002ca0fb8 <col:28, <scratch space>:21:1> 'int' prefix '!' cannot overflow
|       |   |         `-ImplicitCastExpr 0x1e002ca0fa0 <col:1> 'char *' <ArrayToPointerDecay>
|       |   |           `-StringLiteral 0x1e002ca0f80 <col:1> 'char [2]' lvalue "0"
|       |   `-IntegerLiteral 0x1e002ca1058 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|       `-NullStmt 0x1e002ca10c0 <.//openssl//file_jk/before\test\handshake_helper.c:752:22>
|-FunctionDecl 0x1e002ca13a8 <line:756:1, line:781:1> line:756:13 used do_connect_step 'void (const SSL_TEST_CTX *, PEER *, connect_phase_t)' static
| |-ParmVarDecl 0x1e002ca1148 <col:29, col:49> col:49 used test_ctx 'const SSL_TEST_CTX *'
| |-ParmVarDecl 0x1e002ca11c0 <col:59, col:65> col:65 used peer 'PEER *'
| |-ParmVarDecl 0x1e002ca1238 <line:757:29, col:45> col:45 used phase 'connect_phase_t':'connect_phase_t'
| `-CompoundStmt 0x1e002d3a0d0 <line:758:1, line:781:1>
|   `-SwitchStmt 0x1e002ca14c8 <line:759:5, line:780:5>
|     |-ImplicitCastExpr 0x1e002ca14b0 <line:759:13> 'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x1e002ca1498 <col:13> 'connect_phase_t':'connect_phase_t' <LValueToRValue>
|     |   `-DeclRefExpr 0x1e002ca1478 <col:13> 'connect_phase_t':'connect_phase_t' lvalue ParmVar 0x1e002ca1238 'phase' 'connect_phase_t':'connect_phase_t'
|     `-CompoundStmt 0x1e002d3a050 <col:20, line:780:5>
|       |-CaseStmt 0x1e002ca1520 <line:760:5, line:761:31>
|       | |-ConstantExpr 0x1e002ca1508 <line:760:10> 'int'
|       | | `-DeclRefExpr 0x1e002ca14e8 <col:10> 'int' EnumConstant 0x1e002c991d0 'HANDSHAKE' 'int'
|       | `-CallExpr 0x1e002ca15a0 <line:761:9, col:31> 'void'
|       |   |-ImplicitCastExpr 0x1e002ca1588 <col:9> 'void (*)(PEER *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x1e002ca1548 <col:9> 'void (PEER *)' Function 0x1e002c9a3b8 'do_handshake_step' 'void (PEER *)'
|       |   `-ImplicitCastExpr 0x1e002ca15c8 <col:27> 'PEER *' <LValueToRValue>
|       |     `-DeclRefExpr 0x1e002ca1568 <col:27> 'PEER *' lvalue ParmVar 0x1e002ca11c0 'peer' 'PEER *'
|       |-BreakStmt 0x1e002ca15e0 <line:762:9>
|       |-CaseStmt 0x1e002ca1620 <line:763:5, line:764:30>
|       | |-ConstantExpr 0x1e002ca1608 <line:763:10> 'int'
|       | | `-DeclRefExpr 0x1e002ca15e8 <col:10> 'int' EnumConstant 0x1e002c99228 'RENEG_APPLICATION_DATA' 'int'
|       | `-CallExpr 0x1e002ca16a0 <line:764:9, col:30> 'void'
|       |   |-ImplicitCastExpr 0x1e002ca1688 <col:9> 'void (*)(PEER *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x1e002ca1648 <col:9> 'void (PEER *)' Function 0x1e002c9bfb8 'do_app_data_step' 'void (PEER *)'
|       |   `-ImplicitCastExpr 0x1e002ca16c8 <col:26> 'PEER *' <LValueToRValue>
|       |     `-DeclRefExpr 0x1e002ca1668 <col:26> 'PEER *' lvalue ParmVar 0x1e002ca11c0 'peer' 'PEER *'
|       |-BreakStmt 0x1e002ca16e0 <line:765:9>
|       |-CaseStmt 0x1e002ca1720 <line:766:5, line:767:43>
|       | |-ConstantExpr 0x1e002ca1708 <line:766:10> 'int'
|       | | `-DeclRefExpr 0x1e002ca16e8 <col:10> 'int' EnumConstant 0x1e002c99280 'RENEG_SETUP' 'int'
|       | `-CallExpr 0x1e002ca1820 <line:767:9, col:43> 'void'
|       |   |-ImplicitCastExpr 0x1e002ca1808 <col:9> 'void (*)(const SSL_TEST_CTX *, PEER *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x1e002ca1748 <col:9> 'void (const SSL_TEST_CTX *, PEER *)' Function 0x1e002c9df08 'do_reneg_setup_step' 'void (const SSL_TEST_CTX *, PEER *)'
|       |   |-ImplicitCastExpr 0x1e002ca1850 <col:29> 'const SSL_TEST_CTX *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x1e002ca1768 <col:29> 'const SSL_TEST_CTX *' lvalue ParmVar 0x1e002ca1148 'test_ctx' 'const SSL_TEST_CTX *'
|       |   `-ImplicitCastExpr 0x1e002ca1868 <col:39> 'PEER *' <LValueToRValue>
|       |     `-DeclRefExpr 0x1e002ca1788 <col:39> 'PEER *' lvalue ParmVar 0x1e002ca11c0 'peer' 'PEER *'
|       |-BreakStmt 0x1e002ca1880 <line:768:9>
|       |-CaseStmt 0x1e002ca18c0 <line:769:5, line:770:31>
|       | |-ConstantExpr 0x1e002ca18a8 <line:769:10> 'int'
|       | | `-DeclRefExpr 0x1e002ca1888 <col:10> 'int' EnumConstant 0x1e002c992d8 'RENEG_HANDSHAKE' 'int'
|       | `-CallExpr 0x1e002ca1940 <line:770:9, col:31> 'void'
|       |   |-ImplicitCastExpr 0x1e002ca1928 <col:9> 'void (*)(PEER *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x1e002ca18e8 <col:9> 'void (PEER *)' Function 0x1e002c9a3b8 'do_handshake_step' 'void (PEER *)'
|       |   `-ImplicitCastExpr 0x1e002ca1968 <col:27> 'PEER *' <LValueToRValue>
|       |     `-DeclRefExpr 0x1e002ca1908 <col:27> 'PEER *' lvalue ParmVar 0x1e002ca11c0 'peer' 'PEER *'
|       |-BreakStmt 0x1e002ca1980 <line:771:9>
|       |-CaseStmt 0x1e002ca19c0 <line:772:5, line:773:30>
|       | |-ConstantExpr 0x1e002ca19a8 <line:772:10> 'int'
|       | | `-DeclRefExpr 0x1e002ca1988 <col:10> 'int' EnumConstant 0x1e002c99330 'APPLICATION_DATA' 'int'
|       | `-CallExpr 0x1e002ca1a40 <line:773:9, col:30> 'void'
|       |   |-ImplicitCastExpr 0x1e002ca1a28 <col:9> 'void (*)(PEER *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x1e002ca19e8 <col:9> 'void (PEER *)' Function 0x1e002c9bfb8 'do_app_data_step' 'void (PEER *)'
|       |   `-ImplicitCastExpr 0x1e002ca1a68 <col:26> 'PEER *' <LValueToRValue>
|       |     `-DeclRefExpr 0x1e002ca1a08 <col:26> 'PEER *' lvalue ParmVar 0x1e002ca11c0 'peer' 'PEER *'
|       |-BreakStmt 0x1e002ca1a80 <line:774:9>
|       |-CaseStmt 0x1e002ca1ac0 <line:775:5, line:776:30>
|       | |-ConstantExpr 0x1e002ca1aa8 <line:775:10> 'int'
|       | | `-DeclRefExpr 0x1e002ca1a88 <col:10> 'int' EnumConstant 0x1e002c99388 'SHUTDOWN' 'int'
|       | `-CallExpr 0x1e002ca1b40 <line:776:9, col:30> 'void'
|       |   |-ImplicitCastExpr 0x1e002ca1b28 <col:9> 'void (*)(PEER *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x1e002ca1ae8 <col:9> 'void (PEER *)' Function 0x1e002c9f750 'do_shutdown_step' 'void (PEER *)'
|       |   `-ImplicitCastExpr 0x1e002ca1b68 <col:26> 'PEER *' <LValueToRValue>
|       |     `-DeclRefExpr 0x1e002ca1b08 <col:26> 'PEER *' lvalue ParmVar 0x1e002ca11c0 'peer' 'PEER *'
|       |-BreakStmt 0x1e002ca1b80 <line:777:9>
|       |-DefaultStmt 0x1e002d3a028 <line:778:5, .//openssl//file_jk/before\test/testutil.h:111:15>
|       | `-DoStmt 0x1e002d3a008 <line:106:5, line:111:15>
|       |   |-CompoundStmt 0x1e002ca1ce8 <line:106:8, line:111:5>
|       |   | `-IfStmt 0x1e002ca1cd0 <line:107:9, line:110:9>
|       |   |   |-UnaryOperator 0x1e002ca1bd0 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|       |   |   | `-ParenExpr 0x1e002ca1bb0 <col:14, col:24> 'int'
|       |   |   |   `-IntegerLiteral 0x1e002ca1b88 <.//openssl//file_jk/before\test\handshake_helper.c:779:20> 'int' 0
|       |   |   `-CompoundStmt 0x1e002ca1cb8 <.//openssl//file_jk/before\test/testutil.h:107:27, line:110:9>
|       |   |     `-CallExpr 0x1e002ca1c90 <line:109:13, col:39> 'int'
|       |   |       |-ImplicitCastExpr 0x1e002ca1c78 <col:13> 'int (*)()' <FunctionToPointerDecay>
|       |   |       | `-DeclRefExpr 0x1e002ca1c08 <col:13> 'int ()' Function 0x1e002c83670 'OPENSSL_assert' 'int ()'
|       |   |       `-UnaryOperator 0x1e002ca1c60 <col:28, <scratch space>:22:1> 'int' prefix '!' cannot overflow
|       |   |         `-ImplicitCastExpr 0x1e002ca1c48 <col:1> 'char *' <ArrayToPointerDecay>
|       |   |           `-StringLiteral 0x1e002ca1c28 <col:1> 'char [2]' lvalue "0"
|       |   `-IntegerLiteral 0x1e002d39fe0 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|       `-NullStmt 0x1e002d3a048 <.//openssl//file_jk/before\test\handshake_helper.c:779:22>
|-EnumDecl 0x1e002d3a0e8 <line:783:9, line:794:1> line:783:9
| |-EnumConstantDecl 0x1e002d3a1c0 <line:785:5> col:5 referenced HANDSHAKE_SUCCESS 'int'
| |-EnumConstantDecl 0x1e002d3a218 <line:787:5> col:5 referenced CLIENT_ERROR 'int'
| |-EnumConstantDecl 0x1e002d3a270 <line:789:5> col:5 referenced SERVER_ERROR 'int'
| |-EnumConstantDecl 0x1e002d3a2c8 <line:791:5> col:5 referenced INTERNAL_ERROR 'int'
| `-EnumConstantDecl 0x1e002d3a320 <line:793:5> col:5 referenced HANDSHAKE_RETRY 'int'
|-TypedefDecl 0x1e002d3a3d8 <line:783:1, line:794:3> col:3 referenced handshake_status_t 'enum handshake_status_t':'handshake_status_t'
| `-ElaboratedType 0x1e002d3a380 'enum handshake_status_t' sugar
|   `-EnumType 0x1e002d3a1a0 'handshake_status_t'
|     `-Enum 0x1e002d3a0e8 ''
|-FunctionDecl 0x1e002d3a6e8 <line:802:1, line:848:1> line:802:27 used handshake_status 'handshake_status_t (peer_status_t, peer_status_t, int)' static
| |-ParmVarDecl 0x1e002d3a480 <col:44, col:58> col:58 used last_status 'peer_status_t':'peer_status_t'
| |-ParmVarDecl 0x1e002d3a4f8 <line:803:44, col:58> col:58 used previous_status 'peer_status_t':'peer_status_t'
| |-ParmVarDecl 0x1e002d3a578 <line:804:44, col:48> col:48 used client_spoke_last 'int'
| `-CompoundStmt 0x1e002d37028 <line:805:1, line:848:1>
|   |-SwitchStmt 0x1e002d3a808 <line:806:5, line:845:5>
|   | |-ImplicitCastExpr 0x1e002d3a7f0 <line:806:13> 'int' <IntegralCast>
|   | | `-ImplicitCastExpr 0x1e002d3a7d8 <col:13> 'peer_status_t':'peer_status_t' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1e002d3a7b8 <col:13> 'peer_status_t':'peer_status_t' lvalue ParmVar 0x1e002d3a480 'last_status' 'peer_status_t':'peer_status_t'
|   | `-CompoundStmt 0x1e002d36fb0 <col:26, line:845:5>
|   |   |-CaseStmt 0x1e002d3a860 <line:807:5, line:821:9>
|   |   | |-ConstantExpr 0x1e002d3a848 <line:807:10> 'int'
|   |   | | `-DeclRefExpr 0x1e002d3a828 <col:10> 'int' EnumConstant 0x1e002c9b430 'PEER_SUCCESS' 'int'
|   |   | `-SwitchStmt 0x1e002d3a8d8 <line:808:9, line:821:9>
|   |   |   |-ImplicitCastExpr 0x1e002d3a8c0 <line:808:17> 'int' <IntegralCast>
|   |   |   | `-ImplicitCastExpr 0x1e002d3a8a8 <col:17> 'peer_status_t':'peer_status_t' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x1e002d3a888 <col:17> 'peer_status_t':'peer_status_t' lvalue ParmVar 0x1e002d3a4f8 'previous_status' 'peer_status_t':'peer_status_t'
|   |   |   `-CompoundStmt 0x1e002d3aaf0 <col:34, line:821:9>
|   |   |     |-CaseStmt 0x1e002d3a930 <line:809:9, line:811:20>
|   |   |     | |-ConstantExpr 0x1e002d3a918 <line:809:14> 'int'
|   |   |     | | `-DeclRefExpr 0x1e002d3a8f8 <col:14> 'int' EnumConstant 0x1e002c9b430 'PEER_SUCCESS' 'int'
|   |   |     | `-ReturnStmt 0x1e002d3a990 <line:811:13, col:20>
|   |   |     |   `-ImplicitCastExpr 0x1e002d3a978 <col:20> 'handshake_status_t':'handshake_status_t' <IntegralCast>
|   |   |     |     `-DeclRefExpr 0x1e002d3a958 <col:20> 'int' EnumConstant 0x1e002d3a1c0 'HANDSHAKE_SUCCESS' 'int'
|   |   |     |-CaseStmt 0x1e002d3a9d8 <line:812:9, line:814:20>
|   |   |     | |-ConstantExpr 0x1e002d3a9c0 <line:812:14> 'int'
|   |   |     | | `-DeclRefExpr 0x1e002d3a9a0 <col:14> 'int' EnumConstant 0x1e002c9b488 'PEER_RETRY' 'int'
|   |   |     | `-ReturnStmt 0x1e002d3aa38 <line:814:13, col:20>
|   |   |     |   `-ImplicitCastExpr 0x1e002d3aa20 <col:20> 'handshake_status_t':'handshake_status_t' <IntegralCast>
|   |   |     |     `-DeclRefExpr 0x1e002d3aa00 <col:20> 'int' EnumConstant 0x1e002d3a320 'HANDSHAKE_RETRY' 'int'
|   |   |     `-CaseStmt 0x1e002d3aa80 <line:815:9, line:820:20>
|   |   |       |-ConstantExpr 0x1e002d3aa68 <line:815:14> 'int'
|   |   |       | `-DeclRefExpr 0x1e002d3aa48 <col:14> 'int' EnumConstant 0x1e002c9b4e0 'PEER_ERROR' 'int'
|   |   |       `-ReturnStmt 0x1e002d3aae0 <line:820:13, col:20>
|   |   |         `-ImplicitCastExpr 0x1e002d3aac8 <col:20> 'handshake_status_t':'handshake_status_t' <IntegralCast>
|   |   |           `-DeclRefExpr 0x1e002d3aaa8 <col:20> 'int' EnumConstant 0x1e002d3a2c8 'INTERNAL_ERROR' 'int'
|   |   |-BreakStmt 0x1e002d3ab18 <line:822:9>
|   |   |-CaseStmt 0x1e002d3ab58 <line:824:5, line:825:16>
|   |   | |-ConstantExpr 0x1e002d3ab40 <line:824:10> 'int'
|   |   | | `-DeclRefExpr 0x1e002d3ab20 <col:10> 'int' EnumConstant 0x1e002c9b488 'PEER_RETRY' 'int'
|   |   | `-ReturnStmt 0x1e002d3abb8 <line:825:9, col:16>
|   |   |   `-ImplicitCastExpr 0x1e002d3aba0 <col:16> 'handshake_status_t':'handshake_status_t' <IntegralCast>
|   |   |     `-DeclRefExpr 0x1e002d3ab80 <col:16> 'int' EnumConstant 0x1e002d3a320 'HANDSHAKE_RETRY' 'int'
|   |   `-CaseStmt 0x1e002d3ac00 <line:827:5, line:844:9>
|   |     |-ConstantExpr 0x1e002d3abe8 <line:827:10> 'int'
|   |     | `-DeclRefExpr 0x1e002d3abc8 <col:10> 'int' EnumConstant 0x1e002c9b4e0 'PEER_ERROR' 'int'
|   |     `-SwitchStmt 0x1e002d3ac78 <line:828:9, line:844:9>
|   |       |-ImplicitCastExpr 0x1e002d3ac60 <line:828:17> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x1e002d3ac48 <col:17> 'peer_status_t':'peer_status_t' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x1e002d3ac28 <col:17> 'peer_status_t':'peer_status_t' lvalue ParmVar 0x1e002d3a4f8 'previous_status' 'peer_status_t':'peer_status_t'
|   |       `-CompoundStmt 0x1e002d3afa0 <col:34, line:844:9>
|   |         |-CaseStmt 0x1e002d3acd0 <line:829:9, line:837:55>
|   |         | |-ConstantExpr 0x1e002d3acb8 <line:829:14> 'int'
|   |         | | `-DeclRefExpr 0x1e002d3ac98 <col:14> 'int' EnumConstant 0x1e002c9b430 'PEER_SUCCESS' 'int'
|   |         | `-ReturnStmt 0x1e002d3adb8 <line:837:13, col:55>
|   |         |   `-ImplicitCastExpr 0x1e002d3ada0 <col:20, col:55> 'handshake_status_t':'handshake_status_t' <IntegralCast>
|   |         |     `-ConditionalOperator 0x1e002d3ad70 <col:20, col:55> 'int'
|   |         |       |-ImplicitCastExpr 0x1e002d3ad58 <col:20> 'int' <LValueToRValue>
|   |         |       | `-DeclRefExpr 0x1e002d3acf8 <col:20> 'int' lvalue ParmVar 0x1e002d3a578 'client_spoke_last' 'int'
|   |         |       |-DeclRefExpr 0x1e002d3ad18 <col:40> 'int' EnumConstant 0x1e002d3a218 'CLIENT_ERROR' 'int'
|   |         |       `-DeclRefExpr 0x1e002d3ad38 <col:55> 'int' EnumConstant 0x1e002d3a270 'SERVER_ERROR' 'int'
|   |         |-CaseStmt 0x1e002d3ae00 <line:838:9, line:840:20>
|   |         | |-ConstantExpr 0x1e002d3ade8 <line:838:14> 'int'
|   |         | | `-DeclRefExpr 0x1e002d3adc8 <col:14> 'int' EnumConstant 0x1e002c9b488 'PEER_RETRY' 'int'
|   |         | `-ReturnStmt 0x1e002d3ae60 <line:840:13, col:20>
|   |         |   `-ImplicitCastExpr 0x1e002d3ae48 <col:20> 'handshake_status_t':'handshake_status_t' <IntegralCast>
|   |         |     `-DeclRefExpr 0x1e002d3ae28 <col:20> 'int' EnumConstant 0x1e002d3a320 'HANDSHAKE_RETRY' 'int'
|   |         `-CaseStmt 0x1e002d3aea8 <line:841:9, line:843:55>
|   |           |-ConstantExpr 0x1e002d3ae90 <line:841:14> 'int'
|   |           | `-DeclRefExpr 0x1e002d3ae70 <col:14> 'int' EnumConstant 0x1e002c9b4e0 'PEER_ERROR' 'int'
|   |           `-ReturnStmt 0x1e002d3af90 <line:843:13, col:55>
|   |             `-ImplicitCastExpr 0x1e002d3af78 <col:20, col:55> 'handshake_status_t':'handshake_status_t' <IntegralCast>
|   |               `-ConditionalOperator 0x1e002d3af48 <col:20, col:55> 'int'
|   |                 |-ImplicitCastExpr 0x1e002d3af30 <col:20> 'int' <LValueToRValue>
|   |                 | `-DeclRefExpr 0x1e002d3aed0 <col:20> 'int' lvalue ParmVar 0x1e002d3a578 'client_spoke_last' 'int'
|   |                 |-DeclRefExpr 0x1e002d3aef0 <col:40> 'int' EnumConstant 0x1e002d3a270 'SERVER_ERROR' 'int'
|   |                 `-DeclRefExpr 0x1e002d3af10 <col:55> 'int' EnumConstant 0x1e002d3a218 'CLIENT_ERROR' 'int'
|   `-ReturnStmt 0x1e002d37018 <line:847:5, col:12>
|     `-ImplicitCastExpr 0x1e002d37000 <col:12> 'handshake_status_t':'handshake_status_t' <IntegralCast>
|       `-DeclRefExpr 0x1e002d36fe0 <col:12> 'int' EnumConstant 0x1e002d3a2c8 'INTERNAL_ERROR' 'int'
|-FunctionDecl 0x1e002d37220 <line:851:1, line:863:1> line:851:14 used dup_str 'char *(const unsigned char *, size_t)' static
| |-ParmVarDecl 0x1e002d37060 <col:22, col:43> col:43 used in 'const unsigned char *'
| |-ParmVarDecl 0x1e002d370d8 <col:47, col:54> col:54 used len 'size_t':'unsigned long long'
| `-CompoundStmt 0x1e002d37f38 <line:852:1, line:863:1>
|   |-DeclStmt 0x1e002d37368 <line:853:5, col:14>
|   | `-VarDecl 0x1e002d37300 <col:5, col:11> col:11 used ret 'char *'
|   |-IfStmt 0x1e002d374c8 <line:855:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|   | |-BinaryOperator 0x1e002d373f8 <.//openssl//file_jk/before\test\handshake_helper.c:855:8, col:15> 'int' '=='
|   | | |-ImplicitCastExpr 0x1e002d373c8 <col:8> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1e002d37380 <col:8> 'size_t':'unsigned long long' lvalue ParmVar 0x1e002d370d8 'len' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x1e002d373e0 <col:15> 'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x1e002d373a0 <col:15> 'int' 0
|   | `-ReturnStmt 0x1e002d374b8 <line:856:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|   |   `-ImplicitCastExpr 0x1e002d374a0 <col:17, col:27> 'char *' <NullToPointer>
|   |     `-ParenExpr 0x1e002d37480 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1e002d37458 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1e002d37418 <col:26> 'int' 0
|   |-DoStmt 0x1e002d37970 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x1e002d37930 <line:106:8, line:111:5>
|   | | `-IfStmt 0x1e002d37918 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x1e002d377b8 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x1e002d37798 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x1e002d37778 <.//openssl//file_jk/before\test\handshake_helper.c:859:16, col:59> 'int' '=='
|   | |   |     |-ImplicitCastExpr 0x1e002d37760 <col:16, col:54> 'unsigned long long' <IntegralCast>
|   | |   |     | `-CallExpr 0x1e002d376e0 <col:16, col:54> 'int'
|   | |   |     |   |-ImplicitCastExpr 0x1e002d376c8 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   | |   |     |   | `-DeclRefExpr 0x1e002d375d0 <col:16> 'int ()' Function 0x1e002d37508 'OPENSSL_strnlen' 'int ()'
|   | |   |     |   |-CStyleCastExpr 0x1e002d37680 <col:32, col:48> 'const char *' <BitCast>
|   | |   |     |   | `-ImplicitCastExpr 0x1e002d37668 <col:45, col:48> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
|   | |   |     |   |   `-ParenExpr 0x1e002d37648 <col:45, col:48> 'const unsigned char *' lvalue
|   | |   |     |   |     `-DeclRefExpr 0x1e002d375f0 <col:46> 'const unsigned char *' lvalue ParmVar 0x1e002d37060 'in' 'const unsigned char *'
|   | |   |     |   `-ImplicitCastExpr 0x1e002d37710 <col:51> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   |     |     `-DeclRefExpr 0x1e002d376a8 <col:51> 'size_t':'unsigned long long' lvalue ParmVar 0x1e002d370d8 'len' 'size_t':'unsigned long long'
|   | |   |     `-ImplicitCastExpr 0x1e002d37748 <col:59> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   |       `-DeclRefExpr 0x1e002d37728 <col:59> 'size_t':'unsigned long long' lvalue ParmVar 0x1e002d370d8 'len' 'size_t':'unsigned long long'
|   | |   `-CompoundStmt 0x1e002d37900 <.//openssl//file_jk/before\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x1e002d378d8 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x1e002d378c0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x1e002d377f0 <col:13> 'int ()' Function 0x1e002c83670 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x1e002d378a8 <col:28, <scratch space>:23:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x1e002d37890 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x1e002d37848 <col:1> 'char [47]' lvalue "OPENSSL_strnlen((const char*)(in), len) == len"
|   | `-IntegerLiteral 0x1e002d37948 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x1e002d37990 <.//openssl//file_jk/before\test\handshake_helper.c:859:63>
|   |-BinaryOperator 0x1e002d37c30 <line:860:5, col:49> 'char *' '='
|   | |-DeclRefExpr 0x1e002d37998 <col:5> 'char *' lvalue Var 0x1e002d37300 'ret' 'char *'
|   | `-ImplicitCastExpr 0x1e002d37c18 <col:11, col:49> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x1e002d37bd0 <col:11, col:49> 'int'
|   |     |-ImplicitCastExpr 0x1e002d37bb8 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1e002d37ac0 <col:11> 'int ()' Function 0x1e002d379f8 'OPENSSL_strndup' 'int ()'
|   |     |-CStyleCastExpr 0x1e002d37b70 <col:27, col:43> 'const char *' <BitCast>
|   |     | `-ImplicitCastExpr 0x1e002d37b58 <col:40, col:43> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
|   |     |   `-ParenExpr 0x1e002d37b38 <col:40, col:43> 'const unsigned char *' lvalue
|   |     |     `-DeclRefExpr 0x1e002d37ae0 <col:41> 'const unsigned char *' lvalue ParmVar 0x1e002d37060 'in' 'const unsigned char *'
|   |     `-ImplicitCastExpr 0x1e002d37c00 <col:46> 'size_t':'unsigned long long' <LValueToRValue>
|   |       `-DeclRefExpr 0x1e002d37b98 <col:46> 'size_t':'unsigned long long' lvalue ParmVar 0x1e002d370d8 'len' 'size_t':'unsigned long long'
|   |-DoStmt 0x1e002d37ec8 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x1e002d37e88 <line:106:8, line:111:5>
|   | | `-IfStmt 0x1e002d37e70 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x1e002d37d68 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x1e002d37d48 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x1e002d37d28 <.//openssl//file_jk/before\test\handshake_helper.c:861:16, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | |   |     |-ImplicitCastExpr 0x1e002d37cf8 <.//openssl//file_jk/before\test\handshake_helper.c:861:16> 'char *' <LValueToRValue>
|   | |   |     | `-DeclRefExpr 0x1e002d37c50 <col:16> 'char *' lvalue Var 0x1e002d37300 'ret' 'char *'
|   | |   |     `-ImplicitCastExpr 0x1e002d37d10 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   | |   |       `-ParenExpr 0x1e002d37cd8 <col:17, col:27> 'void *'
|   | |   |         `-CStyleCastExpr 0x1e002d37cb0 <col:18, col:26> 'void *' <NullToPointer>
|   | |   |           `-IntegerLiteral 0x1e002d37c70 <col:26> 'int' 0
|   | |   `-CompoundStmt 0x1e002d37e58 <.//openssl//file_jk/before\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x1e002d37e30 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x1e002d37e18 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x1e002d37da0 <col:13> 'int ()' Function 0x1e002c83670 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x1e002d37e00 <col:28, <scratch space>:24:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x1e002d37de8 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x1e002d37dc0 <col:1> 'char [12]' lvalue "ret != NULL"
|   | `-IntegerLiteral 0x1e002d37ea0 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x1e002d37ee8 <.//openssl//file_jk/before\test\handshake_helper.c:861:28>
|   `-ReturnStmt 0x1e002d37f28 <line:862:5, col:12>
|     `-ImplicitCastExpr 0x1e002d37f10 <col:12> 'char *' <LValueToRValue>
|       `-DeclRefExpr 0x1e002d37ef0 <col:12> 'char *' lvalue Var 0x1e002d37300 'ret' 'char *'
|-FunctionDecl 0x1e002d3b498 <line:878:1, line:1077:1> line:878:26 invalid do_handshake_internal 'HANDSHAKE_RESULT *(int *, int *, int *, const SSL_TEST_CTX *, const SSL_TEST_EXTRA_CONF *, int *, int **)' static
| |-ParmVarDecl 0x1e002d3aff0 <line:879:5, col:14> col:14 invalid server_ctx 'int *'
| |-ParmVarDecl 0x1e002d3b070 <col:26, col:35> col:35 invalid server2_ctx 'int *'
| |-ParmVarDecl 0x1e002d3b0f0 <col:48, col:57> col:57 invalid client_ctx 'int *'
| |-ParmVarDecl 0x1e002d3b168 <line:880:5, col:25> col:25 used test_ctx 'const SSL_TEST_CTX *'
| |-ParmVarDecl 0x1e002d3b1e0 <col:35, col:62> col:62 used extra 'const SSL_TEST_EXTRA_CONF *'
| |-ParmVarDecl 0x1e002d3b260 <line:881:5, col:18> col:18 invalid session_in 'int *'
| |-ParmVarDecl 0x1e002d3b318 <col:30, col:44> col:44 invalid session_out 'int **'
| `-CompoundStmt 0x1e002d40ad0 <line:882:1, line:1077:1>
|   |-DeclStmt 0x1e002d3b690 <line:883:5, col:24>
|   | |-VarDecl 0x1e002d3b598 <col:5, col:10> col:10 used server 'PEER':'struct peer_st'
|   | `-VarDecl 0x1e002d3b610 <col:5, col:18> col:18 used client 'PEER':'struct peer_st'
|   |-DeclStmt 0x1e002d3b7b0 <line:885:5, col:53>
|   | |-VarDecl 0x1e002d3b6b8 <col:5, col:23> col:23 used server_ex_data 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st'
|   | `-VarDecl 0x1e002d3b730 <col:5, col:39> col:39 used client_ex_data 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st'
|   |-DeclStmt 0x1e002d3b950 <line:886:5, col:64>
|   | |-VarDecl 0x1e002d3b7d8 <col:5, col:14> col:14 used client_ctx_data 'CTX_DATA':'struct ctx_data_st'
|   | |-VarDecl 0x1e002d3b850 <col:5, col:31> col:31 used server_ctx_data 'CTX_DATA':'struct ctx_data_st'
|   | `-VarDecl 0x1e002d3b8c8 <col:5, col:48> col:48 used server2_ctx_data 'CTX_DATA':'struct ctx_data_st'
|   |-DeclStmt 0x1e002d3ba90 <line:887:5, col:51>
|   | `-VarDecl 0x1e002d3b978 <col:5, col:50> col:23 used ret 'HANDSHAKE_RESULT *' cinit
|   |   `-CallExpr 0x1e002d3ba70 <col:29, col:50> 'HANDSHAKE_RESULT *'
|   |     `-ImplicitCastExpr 0x1e002d3ba58 <col:29> 'HANDSHAKE_RESULT *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x1e002d3b9e0 <col:29> 'HANDSHAKE_RESULT *(void)' Function 0x1e002c830c8 'HANDSHAKE_RESULT_new' 'HANDSHAKE_RESULT *(void)'
|   |-DeclStmt 0x1e002d3bc10 <line:888:5, col:47>
|   | |-VarDecl 0x1e002d3bac0 <col:5, col:23> col:9 used client_turn 'int' cinit
|   | | `-IntegerLiteral 0x1e002d3bb28 <col:23> 'int' 1
|   | `-VarDecl 0x1e002d3bb68 <col:5, col:46> col:26 used client_turn_count 'int' cinit
|   |   `-IntegerLiteral 0x1e002d3bbd0 <col:46> 'int' 0
|   |-DeclStmt 0x1e002d3bcd8 <line:889:5, col:38>
|   | `-VarDecl 0x1e002d3bc38 <col:5, col:29> col:21 used phase 'connect_phase_t':'connect_phase_t' cinit
|   |   `-ImplicitCastExpr 0x1e002d3bcc0 <col:29> 'connect_phase_t':'connect_phase_t' <IntegralCast>
|   |     `-DeclRefExpr 0x1e002d3bca0 <col:29> 'int' EnumConstant 0x1e002c991d0 'HANDSHAKE' 'int'
|   |-DeclStmt 0x1e002d3bda0 <line:890:5, col:48>
|   | `-VarDecl 0x1e002d3bd00 <col:5, col:33> col:24 used status 'handshake_status_t':'handshake_status_t' cinit
|   |   `-ImplicitCastExpr 0x1e002d3bd88 <col:33> 'handshake_status_t':'handshake_status_t' <IntegralCast>
|   |     `-DeclRefExpr 0x1e002d3bd68 <col:33> 'int' EnumConstant 0x1e002d3a320 'HANDSHAKE_RETRY' 'int'
|   |-DeclStmt 0x1e002d3bed8 <line:891:5, col:37>
|   | `-VarDecl 0x1e002d3bdd0 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/before\test\handshake_helper.c:891:26 used tick 'const unsigned char *' cinit
|   |   `-ImplicitCastExpr 0x1e002d3bec0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const unsigned char *' <NullToPointer>
|   |     `-ParenExpr 0x1e002d3bea0 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1e002d3be78 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1e002d3be38 <col:26> 'int' 0
|   |-DeclStmt 0x1e002d3bfa8 <.//openssl//file_jk/before\test\handshake_helper.c:892:5, col:24>
|   | `-VarDecl 0x1e002d3bf00 <col:5, col:23> col:12 used tick_len 'size_t':'unsigned long long' cinit
|   |   `-ImplicitCastExpr 0x1e002d3bf90 <col:23> 'size_t':'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x1e002d3bf68 <col:23> 'int' 0
|   |-DeclStmt 0x1e002d39150 <line:894:5, col:38>
|   | `-VarDecl 0x1e002d39048 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/before\test\handshake_helper.c:894:26 used proto 'const unsigned char *' cinit
|   |   `-ImplicitCastExpr 0x1e002d39138 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const unsigned char *' <NullToPointer>
|   |     `-ParenExpr 0x1e002d39118 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1e002d390f0 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1e002d390b0 <col:26> 'int' 0
|   |-DeclStmt 0x1e002d39228 <.//openssl//file_jk/before\test\handshake_helper.c:896:5, col:31>
|   | `-VarDecl 0x1e002d39180 <col:5, col:30> col:18 used proto_len 'unsigned int' cinit
|   |   `-ImplicitCastExpr 0x1e002d39210 <col:30> 'unsigned int' <IntegralCast>
|   |     `-IntegerLiteral 0x1e002d391e8 <col:30> 'int' 0
|   |-CallExpr 0x1e002d39380 <line:899:5, col:56> 'void *'
|   | |-ImplicitCastExpr 0x1e002d39368 <col:5> 'void *(*)(void *, int, unsigned long long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1e002d39240 <col:5> 'void *(void *, int, unsigned long long)' Function 0x1e002c3ce88 'memset' 'void *(void *, int, unsigned long long)'
|   | |-ImplicitCastExpr 0x1e002d393b8 <col:12, col:13> 'void *' <BitCast>
|   | | `-UnaryOperator 0x1e002d39298 <col:12, col:13> 'CTX_DATA *' prefix '&' cannot overflow
|   | |   `-DeclRefExpr 0x1e002d39260 <col:13> 'CTX_DATA':'struct ctx_data_st' lvalue Var 0x1e002d3b850 'server_ctx_data' 'CTX_DATA':'struct ctx_data_st'
|   | |-IntegerLiteral 0x1e002d392b0 <col:30> 'int' 0
|   | `-UnaryExprOrTypeTraitExpr 0x1e002d39318 <col:33, col:55> 'unsigned long long' sizeof
|   |   `-ParenExpr 0x1e002d392f8 <col:39, col:55> 'CTX_DATA':'struct ctx_data_st' lvalue
|   |     `-DeclRefExpr 0x1e002d392d8 <col:40> 'CTX_DATA':'struct ctx_data_st' lvalue Var 0x1e002d3b850 'server_ctx_data' 'CTX_DATA':'struct ctx_data_st' non_odr_use_unevaluated
|   |-CallExpr 0x1e002d39548 <line:900:5, col:58> 'void *'
|   | |-ImplicitCastExpr 0x1e002d39530 <col:5> 'void *(*)(void *, int, unsigned long long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1e002d39438 <col:5> 'void *(void *, int, unsigned long long)' Function 0x1e002c3ce88 'memset' 'void *(void *, int, unsigned long long)'
|   | |-ImplicitCastExpr 0x1e002d39580 <col:12, col:13> 'void *' <BitCast>
|   | | `-UnaryOperator 0x1e002d39490 <col:12, col:13> 'CTX_DATA *' prefix '&' cannot overflow
|   | |   `-DeclRefExpr 0x1e002d39458 <col:13> 'CTX_DATA':'struct ctx_data_st' lvalue Var 0x1e002d3b8c8 'server2_ctx_data' 'CTX_DATA':'struct ctx_data_st'
|   | |-IntegerLiteral 0x1e002d394a8 <col:31> 'int' 0
|   | `-UnaryExprOrTypeTraitExpr 0x1e002d39510 <col:34, col:57> 'unsigned long long' sizeof
|   |   `-ParenExpr 0x1e002d394f0 <col:40, col:57> 'CTX_DATA':'struct ctx_data_st' lvalue
|   |     `-DeclRefExpr 0x1e002d394d0 <col:41> 'CTX_DATA':'struct ctx_data_st' lvalue Var 0x1e002d3b8c8 'server2_ctx_data' 'CTX_DATA':'struct ctx_data_st' non_odr_use_unevaluated
|   |-CallExpr 0x1e002d396a8 <line:901:5, col:56> 'void *'
|   | |-ImplicitCastExpr 0x1e002d39690 <col:5> 'void *(*)(void *, int, unsigned long long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1e002d39598 <col:5> 'void *(void *, int, unsigned long long)' Function 0x1e002c3ce88 'memset' 'void *(void *, int, unsigned long long)'
|   | |-ImplicitCastExpr 0x1e002d396e0 <col:12, col:13> 'void *' <BitCast>
|   | | `-UnaryOperator 0x1e002d395f0 <col:12, col:13> 'CTX_DATA *' prefix '&' cannot overflow
|   | |   `-DeclRefExpr 0x1e002d395b8 <col:13> 'CTX_DATA':'struct ctx_data_st' lvalue Var 0x1e002d3b7d8 'client_ctx_data' 'CTX_DATA':'struct ctx_data_st'
|   | |-IntegerLiteral 0x1e002d39608 <col:30> 'int' 0
|   | `-UnaryExprOrTypeTraitExpr 0x1e002d39670 <col:33, col:55> 'unsigned long long' sizeof
|   |   `-ParenExpr 0x1e002d39650 <col:39, col:55> 'CTX_DATA':'struct ctx_data_st' lvalue
|   |     `-DeclRefExpr 0x1e002d39630 <col:40> 'CTX_DATA':'struct ctx_data_st' lvalue Var 0x1e002d3b7d8 'client_ctx_data' 'CTX_DATA':'struct ctx_data_st' non_odr_use_unevaluated
|   |-CallExpr 0x1e002d39808 <line:902:5, col:38> 'void *'
|   | |-ImplicitCastExpr 0x1e002d397f0 <col:5> 'void *(*)(void *, int, unsigned long long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1e002d396f8 <col:5> 'void *(void *, int, unsigned long long)' Function 0x1e002c3ce88 'memset' 'void *(void *, int, unsigned long long)'
|   | |-ImplicitCastExpr 0x1e002d39840 <col:12, col:13> 'void *' <BitCast>
|   | | `-UnaryOperator 0x1e002d39750 <col:12, col:13> 'PEER *' prefix '&' cannot overflow
|   | |   `-DeclRefExpr 0x1e002d39718 <col:13> 'PEER':'struct peer_st' lvalue Var 0x1e002d3b598 'server' 'PEER':'struct peer_st'
|   | |-IntegerLiteral 0x1e002d39768 <col:21> 'int' 0
|   | `-UnaryExprOrTypeTraitExpr 0x1e002d397d0 <col:24, col:37> 'unsigned long long' sizeof
|   |   `-ParenExpr 0x1e002d397b0 <col:30, col:37> 'PEER':'struct peer_st' lvalue
|   |     `-DeclRefExpr 0x1e002d39790 <col:31> 'PEER':'struct peer_st' lvalue Var 0x1e002d3b598 'server' 'PEER':'struct peer_st' non_odr_use_unevaluated
|   |-CallExpr 0x1e002d39968 <line:903:5, col:38> 'void *'
|   | |-ImplicitCastExpr 0x1e002d39950 <col:5> 'void *(*)(void *, int, unsigned long long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1e002d39858 <col:5> 'void *(void *, int, unsigned long long)' Function 0x1e002c3ce88 'memset' 'void *(void *, int, unsigned long long)'
|   | |-ImplicitCastExpr 0x1e002d399a0 <col:12, col:13> 'void *' <BitCast>
|   | | `-UnaryOperator 0x1e002d398b0 <col:12, col:13> 'PEER *' prefix '&' cannot overflow
|   | |   `-DeclRefExpr 0x1e002d39878 <col:13> 'PEER':'struct peer_st' lvalue Var 0x1e002d3b610 'client' 'PEER':'struct peer_st'
|   | |-IntegerLiteral 0x1e002d398c8 <col:21> 'int' 0
|   | `-UnaryExprOrTypeTraitExpr 0x1e002d39930 <col:24, col:37> 'unsigned long long' sizeof
|   |   `-ParenExpr 0x1e002d39910 <col:30, col:37> 'PEER':'struct peer_st' lvalue
|   |     `-DeclRefExpr 0x1e002d398f0 <col:31> 'PEER':'struct peer_st' lvalue Var 0x1e002d3b610 'client' 'PEER':'struct peer_st' non_odr_use_unevaluated
|   |-BinaryOperator 0x1e002d39c80 <line:912:5, col:62> 'int' '='
|   | |-MemberExpr 0x1e002d39b60 <col:5, col:12> 'int' lvalue .bytes_to_write 0x1e002c9b908
|   | | `-DeclRefExpr 0x1e002d39b40 <col:5> 'PEER':'struct peer_st' lvalue Var 0x1e002d3b598 'server' 'PEER':'struct peer_st'
|   | `-BinaryOperator 0x1e002d39c60 <col:29, col:62> 'int' '='
|   |   |-MemberExpr 0x1e002d39bb0 <col:29, col:36> 'int' lvalue .bytes_to_read 0x1e002c9b978
|   |   | `-DeclRefExpr 0x1e002d39b90 <col:29> 'PEER':'struct peer_st' lvalue Var 0x1e002d3b610 'client' 'PEER':'struct peer_st'
|   |   `-ImplicitCastExpr 0x1e002d39c48 <col:52, col:62> 'int' <LValueToRValue>
|   |     `-MemberExpr 0x1e002d39c18 <col:52, col:62> 'const int' lvalue ->app_data_size 0x1e002cdc330
|   |       `-ImplicitCastExpr 0x1e002d39c00 <col:52> 'const SSL_TEST_CTX *' <LValueToRValue>
|   |         `-DeclRefExpr 0x1e002d39be0 <col:52> 'const SSL_TEST_CTX *' lvalue ParmVar 0x1e002d3b168 'test_ctx' 'const SSL_TEST_CTX *'
|   |-BinaryOperator 0x1e002d39de0 <line:913:5, col:62> 'int' '='
|   | |-MemberExpr 0x1e002d39cc0 <col:5, col:12> 'int' lvalue .bytes_to_write 0x1e002c9b908
|   | | `-DeclRefExpr 0x1e002d39ca0 <col:5> 'PEER':'struct peer_st' lvalue Var 0x1e002d3b610 'client' 'PEER':'struct peer_st'
|   | `-BinaryOperator 0x1e002d39dc0 <col:29, col:62> 'int' '='
|   |   |-MemberExpr 0x1e002d39d10 <col:29, col:36> 'int' lvalue .bytes_to_read 0x1e002c9b978
|   |   | `-DeclRefExpr 0x1e002d39cf0 <col:29> 'PEER':'struct peer_st' lvalue Var 0x1e002d3b598 'server' 'PEER':'struct peer_st'
|   |   `-ImplicitCastExpr 0x1e002d39da8 <col:52, col:62> 'int' <LValueToRValue>
|   |     `-MemberExpr 0x1e002d39d78 <col:52, col:62> 'const int' lvalue ->app_data_size 0x1e002cdc330
|   |       `-ImplicitCastExpr 0x1e002d39d60 <col:52> 'const SSL_TEST_CTX *' <LValueToRValue>
|   |         `-DeclRefExpr 0x1e002d39d40 <col:52> 'const SSL_TEST_CTX *' lvalue ParmVar 0x1e002d3b168 'test_ctx' 'const SSL_TEST_CTX *'
|   |-IfStmt 0x1e002d3c570 <line:916:5, line:920:5>
|   | |-OpaqueValueExpr 0x1e002d3c558 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1e002d3c528 <line:916:29, line:920:5>
|   |   |-DoStmt 0x1e002d3c1f8 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   |   | |-CompoundStmt 0x1e002d3c1b8 <line:106:8, line:111:5>
|   |   | | `-IfStmt 0x1e002d3c1a0 <line:107:9, line:110:9>
|   |   | |   |-OpaqueValueExpr 0x1e002d3c188 <<invalid sloc>> '_Bool'
|   |   | |   `-CompoundStmt 0x1e002d3c170 <line:107:27, line:110:9>
|   |   | |     `-CallExpr 0x1e002d3c148 <line:109:13, col:39> 'int'
|   |   | |       |-ImplicitCastExpr 0x1e002d3c130 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   | |       | `-DeclRefExpr 0x1e002d3c058 <col:13> 'int ()' Function 0x1e002c83670 'OPENSSL_assert' 'int ()'
|   |   | |       `-UnaryOperator 0x1e002d3c118 <col:28, <scratch space>:25:1> 'int' prefix '!' cannot overflow
|   |   | |         `-ImplicitCastExpr 0x1e002d3c100 <col:1> 'char *' <ArrayToPointerDecay>
|   |   | |           `-StringLiteral 0x1e002d3c0b8 <col:1> 'char [44]' lvalue "SSL_CTX_add_session(server_ctx, session_in)"
|   |   | `-IntegerLiteral 0x1e002d3c1d0 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |   |-NullStmt 0x1e002d3c218 <.//openssl//file_jk/before\test\handshake_helper.c:918:64>
|   |   |-DoStmt 0x1e002d3c500 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   |   | |-CompoundStmt 0x1e002d3c4c0 <line:106:8, line:111:5>
|   |   | | `-IfStmt 0x1e002d3c4a8 <line:107:9, line:110:9>
|   |   | |   |-OpaqueValueExpr 0x1e002d3c490 <<invalid sloc>> '_Bool'
|   |   | |   `-CompoundStmt 0x1e002d3c478 <line:107:27, line:110:9>
|   |   | |     `-CallExpr 0x1e002d3c450 <line:109:13, col:39> 'int'
|   |   | |       |-ImplicitCastExpr 0x1e002d3c438 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   | |       | `-DeclRefExpr 0x1e002d3c370 <col:13> 'int ()' Function 0x1e002c83670 'OPENSSL_assert' 'int ()'
|   |   | |       `-UnaryOperator 0x1e002d3c420 <col:28, <scratch space>:26:1> 'int' prefix '!' cannot overflow
|   |   | |         `-ImplicitCastExpr 0x1e002d3c408 <col:1> 'char *' <ArrayToPointerDecay>
|   |   | |           `-StringLiteral 0x1e002d3c3c8 <col:1> 'char [40]' lvalue "SSL_set_session(client.ssl, session_in)"
|   |   | `-IntegerLiteral 0x1e002d3c4d8 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |   `-NullStmt 0x1e002d3c520 <.//openssl//file_jk/before\test\handshake_helper.c:919:60>
|   |-CallExpr 0x1e002d3c698 <line:922:5, col:54> 'void *'
|   | |-ImplicitCastExpr 0x1e002d3c680 <col:5> 'void *(*)(void *, int, unsigned long long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1e002d3c588 <col:5> 'void *(void *, int, unsigned long long)' Function 0x1e002c3ce88 'memset' 'void *(void *, int, unsigned long long)'
|   | |-ImplicitCastExpr 0x1e002d3c6d0 <col:12, col:13> 'void *' <BitCast>
|   | | `-UnaryOperator 0x1e002d3c5e0 <col:12, col:13> 'HANDSHAKE_EX_DATA *' prefix '&' cannot overflow
|   | |   `-DeclRefExpr 0x1e002d3c5a8 <col:13> 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st' lvalue Var 0x1e002d3b6b8 'server_ex_data' 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st'
|   | |-IntegerLiteral 0x1e002d3c5f8 <col:29> 'int' 0
|   | `-UnaryExprOrTypeTraitExpr 0x1e002d3c660 <col:32, col:53> 'unsigned long long' sizeof
|   |   `-ParenExpr 0x1e002d3c640 <col:38, col:53> 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st' lvalue
|   |     `-DeclRefExpr 0x1e002d3c620 <col:39> 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st' lvalue Var 0x1e002d3b6b8 'server_ex_data' 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st' non_odr_use_unevaluated
|   |-CallExpr 0x1e002d3c868 <line:923:5, col:54> 'void *'
|   | |-ImplicitCastExpr 0x1e002d3c850 <col:5> 'void *(*)(void *, int, unsigned long long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1e002d3c758 <col:5> 'void *(void *, int, unsigned long long)' Function 0x1e002c3ce88 'memset' 'void *(void *, int, unsigned long long)'
|   | |-ImplicitCastExpr 0x1e002d3c8a0 <col:12, col:13> 'void *' <BitCast>
|   | | `-UnaryOperator 0x1e002d3c7b0 <col:12, col:13> 'HANDSHAKE_EX_DATA *' prefix '&' cannot overflow
|   | |   `-DeclRefExpr 0x1e002d3c778 <col:13> 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st' lvalue Var 0x1e002d3b730 'client_ex_data' 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st'
|   | |-IntegerLiteral 0x1e002d3c7c8 <col:29> 'int' 0
|   | `-UnaryExprOrTypeTraitExpr 0x1e002d3c830 <col:32, col:53> 'unsigned long long' sizeof
|   |   `-ParenExpr 0x1e002d3c810 <col:38, col:53> 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st' lvalue
|   |     `-DeclRefExpr 0x1e002d3c7f0 <col:39> 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st' lvalue Var 0x1e002d3b730 'client_ex_data' 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st' non_odr_use_unevaluated
|   |-BinaryOperator 0x1e002d3c970 <line:925:5, col:19> 'ssl_test_result_t':'ssl_test_result_t' '='
|   | |-MemberExpr 0x1e002d3c908 <col:5, col:10> 'ssl_test_result_t':'ssl_test_result_t' lvalue ->result 0x1e002cde660
|   | | `-ImplicitCastExpr 0x1e002d3c8f0 <col:5> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1e002d3c8b8 <col:5> 'HANDSHAKE_RESULT *' lvalue Var 0x1e002d3b978 'ret' 'HANDSHAKE_RESULT *'
|   | `-ImplicitCastExpr 0x1e002d3c958 <col:19> 'ssl_test_result_t':'ssl_test_result_t' <IntegralCast>
|   |   `-DeclRefExpr 0x1e002d3c938 <col:19> 'int' EnumConstant 0x1e002cd3ac8 'SSL_TEST_INTERNAL_ERROR' 'int'
|   |-DoStmt 0x1e002d3cf10 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x1e002d3ced0 <line:106:8, line:111:5>
|   | | `-IfStmt 0x1e002d3ceb8 <line:107:9, line:110:9>
|   | |   |-OpaqueValueExpr 0x1e002d3cea0 <<invalid sloc>> '_Bool'
|   | |   `-CompoundStmt 0x1e002d3ce88 <line:107:27, line:110:9>
|   | |     `-CallExpr 0x1e002d3ce60 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x1e002d3ce48 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x1e002d3cd88 <col:13> 'int ()' Function 0x1e002c83670 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x1e002d3ce30 <col:28, <scratch space>:27:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x1e002d3ce18 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x1e002d3cde8 <col:1> 'char [25]' lvalue "client_to_server != NULL"
|   | `-IntegerLiteral 0x1e002d3cee8 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x1e002d3cf30 <.//openssl//file_jk/before\test\handshake_helper.c:930:41>
|   |-DoStmt 0x1e002d380e8 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x1e002d380a8 <line:106:8, line:111:5>
|   | | `-IfStmt 0x1e002d38090 <line:107:9, line:110:9>
|   | |   |-OpaqueValueExpr 0x1e002d38078 <<invalid sloc>> '_Bool'
|   | |   `-CompoundStmt 0x1e002d38060 <line:107:27, line:110:9>
|   | |     `-CallExpr 0x1e002d38038 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x1e002d38020 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x1e002d3cfe0 <col:13> 'int ()' Function 0x1e002c83670 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x1e002d38008 <col:28, <scratch space>:28:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x1e002d37ff0 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x1e002d37fc0 <col:1> 'char [25]' lvalue "server_to_client != NULL"
|   | `-IntegerLiteral 0x1e002d380c0 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x1e002d38108 <.//openssl//file_jk/before\test\handshake_helper.c:931:41>
|   |-DoStmt 0x1e002d38908 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x1e002d388c8 <line:106:8, line:111:5>
|   | | `-IfStmt 0x1e002d388b0 <line:107:9, line:110:9>
|   | |   |-OpaqueValueExpr 0x1e002d38898 <<invalid sloc>> '_Bool'
|   | |   `-CompoundStmt 0x1e002d38880 <line:107:27, line:110:9>
|   | |     `-CallExpr 0x1e002d38858 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x1e002d38840 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x1e002d38778 <col:13> 'int ()' Function 0x1e002c83670 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x1e002d38828 <col:28, <scratch space>:29:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x1e002d38810 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x1e002d387d8 <col:1> 'char [33]' lvalue "BIO_up_ref(server_to_client) > 0"
|   | `-IntegerLiteral 0x1e002d388e0 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x1e002d38928 <.//openssl//file_jk/before\test\handshake_helper.c:942:49>
|   |-DoStmt 0x1e002d38ae8 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x1e002d38aa8 <line:106:8, line:111:5>
|   | | `-IfStmt 0x1e002d38a90 <line:107:9, line:110:9>
|   | |   |-OpaqueValueExpr 0x1e002d38a78 <<invalid sloc>> '_Bool'
|   | |   `-CompoundStmt 0x1e002d38a60 <line:107:27, line:110:9>
|   | |     `-CallExpr 0x1e002d38a38 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x1e002d38a20 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x1e002d38998 <col:13> 'int ()' Function 0x1e002c83670 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x1e002d38a08 <col:28, <scratch space>:30:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x1e002d389f0 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x1e002d389b8 <col:1> 'char [33]' lvalue "BIO_up_ref(client_to_server) > 0"
|   | `-IntegerLiteral 0x1e002d38ac0 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x1e002d38b08 <.//openssl//file_jk/before\test\handshake_helper.c:943:49>
|   |-BinaryOperator 0x1e002d38ed8 <line:946:5, col:70> 'int' '='
|   | |-DeclRefExpr 0x1e002d38b50 <col:5> 'int' lvalue Var 0x1e002c8af78 'ex_data_idx' 'int'
|   | `-CallExpr 0x1e002d38e78 <col:19, col:70> 'int'
|   |   |-ImplicitCastExpr 0x1e002d38e60 <col:19> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1e002d38c60 <col:19> 'int ()' Function 0x1e002d38b98 'SSL_get_ex_new_index' 'int ()'
|   |   |-IntegerLiteral 0x1e002d38c80 <col:40> 'int' 0
|   |   |-ImplicitCastExpr 0x1e002d38ec0 <col:43> 'char *' <ArrayToPointerDecay>
|   |   | `-StringLiteral 0x1e002d38ca8 <col:43> 'char [8]' lvalue "ex data"
|   |   |-ParenExpr 0x1e002d38d30 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'void *'
|   |   | `-CStyleCastExpr 0x1e002d38d08 <col:18, col:26> 'void *' <NullToPointer>
|   |   |   `-IntegerLiteral 0x1e002d38cc8 <col:26> 'int' 0
|   |   |-ParenExpr 0x1e002d38db8 <col:17, col:27> 'void *'
|   |   | `-CStyleCastExpr 0x1e002d38d90 <col:18, col:26> 'void *' <NullToPointer>
|   |   |   `-IntegerLiteral 0x1e002d38d50 <col:26> 'int' 0
|   |   `-ParenExpr 0x1e002d38e40 <col:17, col:27> 'void *'
|   |     `-CStyleCastExpr 0x1e002d38e18 <col:18, col:26> 'void *' <NullToPointer>
|   |       `-IntegerLiteral 0x1e002d38dd8 <col:26> 'int' 0
|   |-DoStmt 0x1e002d350d8 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x1e002d35098 <line:106:8, line:111:5>
|   | | `-IfStmt 0x1e002d35080 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x1e002d38f98 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x1e002d38f78 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x1e002d38f58 <.//openssl//file_jk/before\test\handshake_helper.c:947:16, col:31> 'int' '>='
|   | |   |     |-ImplicitCastExpr 0x1e002d38f40 <col:16> 'int' <LValueToRValue>
|   | |   |     | `-DeclRefExpr 0x1e002d38ef8 <col:16> 'int' lvalue Var 0x1e002c8af78 'ex_data_idx' 'int'
|   | |   |     `-IntegerLiteral 0x1e002d38f18 <col:31> 'int' 0
|   | |   `-CompoundStmt 0x1e002d35068 <.//openssl//file_jk/before\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x1e002d35040 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x1e002d35028 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x1e002d34fb0 <col:13> 'int ()' Function 0x1e002c83670 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x1e002d35010 <col:28, <scratch space>:31:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x1e002d34ff8 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x1e002d34fd0 <col:1> 'char [17]' lvalue "ex_data_idx >= 0"
|   | `-IntegerLiteral 0x1e002d350b0 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x1e002d350f8 <.//openssl//file_jk/before\test\handshake_helper.c:947:33>
|   |-DoStmt 0x1e002d35440 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x1e002d35400 <line:106:8, line:111:5>
|   | | `-IfStmt 0x1e002d353e8 <line:107:9, line:110:9>
|   | |   |-OpaqueValueExpr 0x1e002d353d0 <<invalid sloc>> '_Bool'
|   | |   `-CompoundStmt 0x1e002d353b8 <line:107:27, line:110:9>
|   | |     `-CallExpr 0x1e002d35390 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x1e002d35378 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x1e002d352d0 <col:13> 'int ()' Function 0x1e002c83670 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x1e002d35360 <col:28, <scratch space>:32:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x1e002d35348 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x1e002d352f0 <col:1> 'char [63]' lvalue "SSL_set_ex_data(server.ssl, ex_data_idx, &server_ex_data) == 1"
|   | `-IntegerLiteral 0x1e002d35418 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x1e002d35460 <.//openssl//file_jk/before\test\handshake_helper.c:949:79>
|   |-DoStmt 0x1e002d356b8 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x1e002d35678 <line:106:8, line:111:5>
|   | | `-IfStmt 0x1e002d35660 <line:107:9, line:110:9>
|   | |   |-OpaqueValueExpr 0x1e002d35648 <<invalid sloc>> '_Bool'
|   | |   `-CompoundStmt 0x1e002d35630 <line:107:27, line:110:9>
|   | |     `-CallExpr 0x1e002d35608 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x1e002d355f0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x1e002d35548 <col:13> 'int ()' Function 0x1e002c83670 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x1e002d355d8 <col:28, <scratch space>:33:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x1e002d355c0 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x1e002d35568 <col:1> 'char [63]' lvalue "SSL_set_ex_data(client.ssl, ex_data_idx, &client_ex_data) == 1"
|   | `-IntegerLiteral 0x1e002d35690 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x1e002d356d8 <.//openssl//file_jk/before\test\handshake_helper.c:950:79>
|   |-BinaryOperator 0x1e002d35948 <line:955:5, col:37> 'peer_status_t':'peer_status_t' '='
|   | |-MemberExpr 0x1e002d35870 <col:5, col:12> 'peer_status_t':'peer_status_t' lvalue .status 0x1e002c9ba00
|   | | `-DeclRefExpr 0x1e002d35850 <col:5> 'PEER':'struct peer_st' lvalue Var 0x1e002d3b610 'client' 'PEER':'struct peer_st'
|   | `-BinaryOperator 0x1e002d35928 <col:21, col:37> 'peer_status_t':'peer_status_t' '='
|   |   |-MemberExpr 0x1e002d358c0 <col:21, col:28> 'peer_status_t':'peer_status_t' lvalue .status 0x1e002c9ba00
|   |   | `-DeclRefExpr 0x1e002d358a0 <col:21> 'PEER':'struct peer_st' lvalue Var 0x1e002d3b598 'server' 'PEER':'struct peer_st'
|   |   `-ImplicitCastExpr 0x1e002d35910 <col:37> 'peer_status_t':'peer_status_t' <IntegralCast>
|   |     `-DeclRefExpr 0x1e002d358f0 <col:37> 'int' EnumConstant 0x1e002c9b488 'PEER_RETRY' 'int'
|   |-ForStmt 0x1e002d3de38 <line:965:5, line:1018:5>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | `-CompoundStmt 0x1e002d3de18 <line:965:13, line:1018:5>
|   |   |-IfStmt 0x1e002d3d0f8 <line:966:9, line:974:9> has_else
|   |   | |-ImplicitCastExpr 0x1e002d359a0 <line:966:13> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1e002d35968 <col:13> 'int' lvalue Var 0x1e002d3bac0 'client_turn' 'int'
|   |   | |-CompoundStmt 0x1e002d35d68 <col:26, line:970:9>
|   |   | | |-CallExpr 0x1e002d35ae0 <line:967:13, col:53> 'void'
|   |   | | | |-ImplicitCastExpr 0x1e002d35ac8 <col:13> 'void (*)(const SSL_TEST_CTX *, PEER *, connect_phase_t)' <FunctionToPointerDecay>
|   |   | | | | `-DeclRefExpr 0x1e002d359b8 <col:13> 'void (const SSL_TEST_CTX *, PEER *, connect_phase_t)' Function 0x1e002ca13a8 'do_connect_step' 'void (const SSL_TEST_CTX *, PEER *, connect_phase_t)'
|   |   | | | |-ImplicitCastExpr 0x1e002d35b18 <col:29> 'const SSL_TEST_CTX *' <LValueToRValue>
|   |   | | | | `-DeclRefExpr 0x1e002d359d8 <col:29> 'const SSL_TEST_CTX *' lvalue ParmVar 0x1e002d3b168 'test_ctx' 'const SSL_TEST_CTX *'
|   |   | | | |-UnaryOperator 0x1e002d35a18 <col:39, col:40> 'PEER *' prefix '&' cannot overflow
|   |   | | | | `-DeclRefExpr 0x1e002d359f8 <col:40> 'PEER':'struct peer_st' lvalue Var 0x1e002d3b610 'client' 'PEER':'struct peer_st'
|   |   | | | `-ImplicitCastExpr 0x1e002d35b30 <col:48> 'connect_phase_t':'connect_phase_t' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x1e002d35a30 <col:48> 'connect_phase_t':'connect_phase_t' lvalue Var 0x1e002d3bc38 'phase' 'connect_phase_t':'connect_phase_t'
|   |   | | `-BinaryOperator 0x1e002d35d48 <line:968:13, line:969:63> 'handshake_status_t':'handshake_status_t' '='
|   |   | |   |-DeclRefExpr 0x1e002d35b48 <line:968:13> 'handshake_status_t':'handshake_status_t' lvalue Var 0x1e002d3bd00 'status' 'handshake_status_t':'handshake_status_t'
|   |   | |   `-CallExpr 0x1e002d35ce0 <col:22, line:969:63> 'handshake_status_t':'handshake_status_t'
|   |   | |     |-ImplicitCastExpr 0x1e002d35cc8 <line:968:22> 'handshake_status_t (*)(peer_status_t, peer_status_t, int)' <FunctionToPointerDecay>
|   |   | |     | `-DeclRefExpr 0x1e002d35b80 <col:22> 'handshake_status_t (peer_status_t, peer_status_t, int)' Function 0x1e002d3a6e8 'handshake_status' 'handshake_status_t (peer_status_t, peer_status_t, int)'
|   |   | |     |-ImplicitCastExpr 0x1e002d35d18 <col:39, col:46> 'peer_status_t':'peer_status_t' <LValueToRValue>
|   |   | |     | `-MemberExpr 0x1e002d35bc0 <col:39, col:46> 'peer_status_t':'peer_status_t' lvalue .status 0x1e002c9ba00
|   |   | |     |   `-DeclRefExpr 0x1e002d35ba0 <col:39> 'PEER':'struct peer_st' lvalue Var 0x1e002d3b610 'client' 'PEER':'struct peer_st'
|   |   | |     |-ImplicitCastExpr 0x1e002d35d30 <col:54, col:61> 'peer_status_t':'peer_status_t' <LValueToRValue>
|   |   | |     | `-MemberExpr 0x1e002d35c10 <col:54, col:61> 'peer_status_t':'peer_status_t' lvalue .status 0x1e002c9ba00
|   |   | |     |   `-DeclRefExpr 0x1e002d35bf0 <col:54> 'PEER':'struct peer_st' lvalue Var 0x1e002d3b598 'server' 'PEER':'struct peer_st'
|   |   | |     `-IntegerLiteral 0x1e002d35c40 <line:969:39> 'int' 1
|   |   | `-CompoundStmt 0x1e002d3d0d8 <line:970:16, line:974:9>
|   |   |   |-CallExpr 0x1e002d35e38 <line:971:13, col:53> 'void'
|   |   |   | |-ImplicitCastExpr 0x1e002d35e20 <col:13> 'void (*)(const SSL_TEST_CTX *, PEER *, connect_phase_t)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x1e002d35d88 <col:13> 'void (const SSL_TEST_CTX *, PEER *, connect_phase_t)' Function 0x1e002ca13a8 'do_connect_step' 'void (const SSL_TEST_CTX *, PEER *, connect_phase_t)'
|   |   |   | |-ImplicitCastExpr 0x1e002d35e70 <col:29> 'const SSL_TEST_CTX *' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x1e002d35da8 <col:29> 'const SSL_TEST_CTX *' lvalue ParmVar 0x1e002d3b168 'test_ctx' 'const SSL_TEST_CTX *'
|   |   |   | |-UnaryOperator 0x1e002d35de8 <col:39, col:40> 'PEER *' prefix '&' cannot overflow
|   |   |   | | `-DeclRefExpr 0x1e002d35dc8 <col:40> 'PEER':'struct peer_st' lvalue Var 0x1e002d3b598 'server' 'PEER':'struct peer_st'
|   |   |   | `-ImplicitCastExpr 0x1e002d35e88 <col:48> 'connect_phase_t':'connect_phase_t' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x1e002d35e00 <col:48> 'connect_phase_t':'connect_phase_t' lvalue Var 0x1e002d3bc38 'phase' 'connect_phase_t':'connect_phase_t'
|   |   |   `-BinaryOperator 0x1e002d3d0b8 <line:972:13, line:973:63> 'handshake_status_t':'handshake_status_t' '='
|   |   |     |-DeclRefExpr 0x1e002d35ea0 <line:972:13> 'handshake_status_t':'handshake_status_t' lvalue Var 0x1e002d3bd00 'status' 'handshake_status_t':'handshake_status_t'
|   |   |     `-CallExpr 0x1e002d3d050 <col:22, line:973:63> 'handshake_status_t':'handshake_status_t'
|   |   |       |-ImplicitCastExpr 0x1e002d3d038 <line:972:22> 'handshake_status_t (*)(peer_status_t, peer_status_t, int)' <FunctionToPointerDecay>
|   |   |       | `-DeclRefExpr 0x1e002d35ec0 <col:22> 'handshake_status_t (peer_status_t, peer_status_t, int)' Function 0x1e002d3a6e8 'handshake_status' 'handshake_status_t (peer_status_t, peer_status_t, int)'
|   |   |       |-ImplicitCastExpr 0x1e002d3d088 <col:39, col:46> 'peer_status_t':'peer_status_t' <LValueToRValue>
|   |   |       | `-MemberExpr 0x1e002d35f00 <col:39, col:46> 'peer_status_t':'peer_status_t' lvalue .status 0x1e002c9ba00
|   |   |       |   `-DeclRefExpr 0x1e002d35ee0 <col:39> 'PEER':'struct peer_st' lvalue Var 0x1e002d3b598 'server' 'PEER':'struct peer_st'
|   |   |       |-ImplicitCastExpr 0x1e002d3d0a0 <col:54, col:61> 'peer_status_t':'peer_status_t' <LValueToRValue>
|   |   |       | `-MemberExpr 0x1e002d35f50 <col:54, col:61> 'peer_status_t':'peer_status_t' lvalue .status 0x1e002c9ba00
|   |   |       |   `-DeclRefExpr 0x1e002d35f30 <col:54> 'PEER':'struct peer_st' lvalue Var 0x1e002d3b610 'client' 'PEER':'struct peer_st'
|   |   |       `-IntegerLiteral 0x1e002d3d010 <line:973:39> 'int' 0
|   |   `-SwitchStmt 0x1e002d3d170 <line:976:9, line:1017:9>
|   |     |-ImplicitCastExpr 0x1e002d3d158 <line:976:17> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x1e002d3d140 <col:17> 'handshake_status_t':'handshake_status_t' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x1e002d3d120 <col:17> 'handshake_status_t':'handshake_status_t' lvalue Var 0x1e002d3bd00 'status' 'handshake_status_t':'handshake_status_t'
|   |     `-CompoundStmt 0x1e002d3dda8 <col:25, line:1017:9>
|   |       |-CaseStmt 0x1e002d3d1c8 <line:977:9, line:978:33>
|   |       | |-ConstantExpr 0x1e002d3d1b0 <line:977:14> 'int'
|   |       | | `-DeclRefExpr 0x1e002d3d190 <col:14> 'int' EnumConstant 0x1e002d3a1c0 'HANDSHAKE_SUCCESS' 'int'
|   |       | `-BinaryOperator 0x1e002d3d250 <line:978:13, col:33> 'int' '='
|   |       |   |-DeclRefExpr 0x1e002d3d1f0 <col:13> 'int' lvalue Var 0x1e002d3bb68 'client_turn_count' 'int'
|   |       |   `-IntegerLiteral 0x1e002d3d228 <col:33> 'int' 0
|   |       |-BinaryOperator 0x1e002d3d3c0 <line:979:13, col:47> 'connect_phase_t':'connect_phase_t' '='
|   |       | |-DeclRefExpr 0x1e002d3d270 <col:13> 'connect_phase_t':'connect_phase_t' lvalue Var 0x1e002d3bc38 'phase' 'connect_phase_t':'connect_phase_t'
|   |       | `-CallExpr 0x1e002d3d360 <col:21, col:47> 'connect_phase_t':'connect_phase_t'
|   |       |   |-ImplicitCastExpr 0x1e002d3d348 <col:21> 'connect_phase_t (*)(const SSL_TEST_CTX *, connect_phase_t)' <FunctionToPointerDecay>
|   |       |   | `-DeclRefExpr 0x1e002d3d290 <col:21> 'connect_phase_t (const SSL_TEST_CTX *, connect_phase_t)' Function 0x1e002c996f8 'next_phase' 'connect_phase_t (const SSL_TEST_CTX *, connect_phase_t)'
|   |       |   |-ImplicitCastExpr 0x1e002d3d390 <col:32> 'const SSL_TEST_CTX *' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x1e002d3d2b0 <col:32> 'const SSL_TEST_CTX *' lvalue ParmVar 0x1e002d3b168 'test_ctx' 'const SSL_TEST_CTX *'
|   |       |   `-ImplicitCastExpr 0x1e002d3d3a8 <col:42> 'connect_phase_t':'connect_phase_t' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x1e002d3d2d0 <col:42> 'connect_phase_t':'connect_phase_t' lvalue Var 0x1e002d3bc38 'phase' 'connect_phase_t':'connect_phase_t'
|   |       |-IfStmt 0x1e002d3d768 <line:980:13, line:993:13> has_else
|   |       | |-BinaryOperator 0x1e002d3d450 <line:980:17, col:26> 'int' '=='
|   |       | | |-ImplicitCastExpr 0x1e002d3d438 <col:17> 'int' <IntegralCast>
|   |       | | | `-ImplicitCastExpr 0x1e002d3d420 <col:17> 'connect_phase_t':'connect_phase_t' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x1e002d3d3e0 <col:17> 'connect_phase_t':'connect_phase_t' lvalue Var 0x1e002d3bc38 'phase' 'connect_phase_t':'connect_phase_t'
|   |       | | `-DeclRefExpr 0x1e002d3d400 <col:26> 'int' EnumConstant 0x1e002c993e0 'CONNECTION_DONE' 'int'
|   |       | |-CompoundStmt 0x1e002d3d598 <col:43, line:983:13>
|   |       | | |-BinaryOperator 0x1e002d3d510 <line:981:17, col:31> 'ssl_test_result_t':'ssl_test_result_t' '='
|   |       | | | |-MemberExpr 0x1e002d3d4a8 <col:17, col:22> 'ssl_test_result_t':'ssl_test_result_t' lvalue ->result 0x1e002cde660
|   |       | | | | `-ImplicitCastExpr 0x1e002d3d490 <col:17> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   |       | | | |   `-DeclRefExpr 0x1e002d3d470 <col:17> 'HANDSHAKE_RESULT *' lvalue Var 0x1e002d3b978 'ret' 'HANDSHAKE_RESULT *'
|   |       | | | `-ImplicitCastExpr 0x1e002d3d4f8 <col:31> 'ssl_test_result_t':'ssl_test_result_t' <IntegralCast>
|   |       | | |   `-DeclRefExpr 0x1e002d3d4d8 <col:31> 'int' EnumConstant 0x1e002cd39c0 'SSL_TEST_SUCCESS' 'int'
|   |       | | `-GotoStmt 0x1e002d3d580 <line:982:17, col:22> 'err' 0x1e002d3d530
|   |       | `-CompoundStmt 0x1e002d3d740 <line:983:20, line:993:13>
|   |       |   |-BinaryOperator 0x1e002d3d6b0 <line:984:17, col:49> 'peer_status_t':'peer_status_t' '='
|   |       |   | |-MemberExpr 0x1e002d3d5d8 <col:17, col:24> 'peer_status_t':'peer_status_t' lvalue .status 0x1e002c9ba00
|   |       |   | | `-DeclRefExpr 0x1e002d3d5b8 <col:17> 'PEER':'struct peer_st' lvalue Var 0x1e002d3b610 'client' 'PEER':'struct peer_st'
|   |       |   | `-BinaryOperator 0x1e002d3d690 <col:33, col:49> 'peer_status_t':'peer_status_t' '='
|   |       |   |   |-MemberExpr 0x1e002d3d628 <col:33, col:40> 'peer_status_t':'peer_status_t' lvalue .status 0x1e002c9ba00
|   |       |   |   | `-DeclRefExpr 0x1e002d3d608 <col:33> 'PEER':'struct peer_st' lvalue Var 0x1e002d3b598 'server' 'PEER':'struct peer_st'
|   |       |   |   `-ImplicitCastExpr 0x1e002d3d678 <col:49> 'peer_status_t':'peer_status_t' <IntegralCast>
|   |       |   |     `-DeclRefExpr 0x1e002d3d658 <col:49> 'int' EnumConstant 0x1e002c9b488 'PEER_RETRY' 'int'
|   |       |   |-BinaryOperator 0x1e002d3d718 <line:991:17, col:31> 'int' '='
|   |       |   | |-DeclRefExpr 0x1e002d3d6d0 <col:17> 'int' lvalue Var 0x1e002d3bac0 'client_turn' 'int'
|   |       |   | `-IntegerLiteral 0x1e002d3d6f0 <col:31> 'int' 1
|   |       |   `-BreakStmt 0x1e002d3d738 <line:992:17>
|   |       |-CaseStmt 0x1e002d3d7c8 <line:994:9, line:995:27>
|   |       | |-ConstantExpr 0x1e002d3d7b0 <line:994:14> 'int'
|   |       | | `-DeclRefExpr 0x1e002d3d790 <col:14> 'int' EnumConstant 0x1e002d3a218 'CLIENT_ERROR' 'int'
|   |       | `-BinaryOperator 0x1e002d3d890 <line:995:13, col:27> 'ssl_test_result_t':'ssl_test_result_t' '='
|   |       |   |-MemberExpr 0x1e002d3d828 <col:13, col:18> 'ssl_test_result_t':'ssl_test_result_t' lvalue ->result 0x1e002cde660
|   |       |   | `-ImplicitCastExpr 0x1e002d3d810 <col:13> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x1e002d3d7f0 <col:13> 'HANDSHAKE_RESULT *' lvalue Var 0x1e002d3b978 'ret' 'HANDSHAKE_RESULT *'
|   |       |   `-ImplicitCastExpr 0x1e002d3d878 <col:27> 'ssl_test_result_t':'ssl_test_result_t' <IntegralCast>
|   |       |     `-DeclRefExpr 0x1e002d3d858 <col:27> 'int' EnumConstant 0x1e002cd3a70 'SSL_TEST_CLIENT_FAIL' 'int'
|   |       |-GotoStmt 0x1e002d3d8b0 <line:996:13, col:18> 'err' 0x1e002d3d530
|   |       |-CaseStmt 0x1e002d3d900 <line:997:9, line:998:27>
|   |       | |-ConstantExpr 0x1e002d3d8e8 <line:997:14> 'int'
|   |       | | `-DeclRefExpr 0x1e002d3d8c8 <col:14> 'int' EnumConstant 0x1e002d3a270 'SERVER_ERROR' 'int'
|   |       | `-BinaryOperator 0x1e002d3d9c8 <line:998:13, col:27> 'ssl_test_result_t':'ssl_test_result_t' '='
|   |       |   |-MemberExpr 0x1e002d3d960 <col:13, col:18> 'ssl_test_result_t':'ssl_test_result_t' lvalue ->result 0x1e002cde660
|   |       |   | `-ImplicitCastExpr 0x1e002d3d948 <col:13> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x1e002d3d928 <col:13> 'HANDSHAKE_RESULT *' lvalue Var 0x1e002d3b978 'ret' 'HANDSHAKE_RESULT *'
|   |       |   `-ImplicitCastExpr 0x1e002d3d9b0 <col:27> 'ssl_test_result_t':'ssl_test_result_t' <IntegralCast>
|   |       |     `-DeclRefExpr 0x1e002d3d990 <col:27> 'int' EnumConstant 0x1e002cd3a18 'SSL_TEST_SERVER_FAIL' 'int'
|   |       |-GotoStmt 0x1e002d3d9e8 <line:999:13, col:18> 'err' 0x1e002d3d530
|   |       |-CaseStmt 0x1e002d3da38 <line:1000:9, line:1001:27>
|   |       | |-ConstantExpr 0x1e002d3da20 <line:1000:14> 'int'
|   |       | | `-DeclRefExpr 0x1e002d3da00 <col:14> 'int' EnumConstant 0x1e002d3a2c8 'INTERNAL_ERROR' 'int'
|   |       | `-BinaryOperator 0x1e002d3db00 <line:1001:13, col:27> 'ssl_test_result_t':'ssl_test_result_t' '='
|   |       |   |-MemberExpr 0x1e002d3da98 <col:13, col:18> 'ssl_test_result_t':'ssl_test_result_t' lvalue ->result 0x1e002cde660
|   |       |   | `-ImplicitCastExpr 0x1e002d3da80 <col:13> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x1e002d3da60 <col:13> 'HANDSHAKE_RESULT *' lvalue Var 0x1e002d3b978 'ret' 'HANDSHAKE_RESULT *'
|   |       |   `-ImplicitCastExpr 0x1e002d3dae8 <col:27> 'ssl_test_result_t':'ssl_test_result_t' <IntegralCast>
|   |       |     `-DeclRefExpr 0x1e002d3dac8 <col:27> 'int' EnumConstant 0x1e002cd3ac8 'SSL_TEST_INTERNAL_ERROR' 'int'
|   |       |-GotoStmt 0x1e002d3db20 <line:1002:13, col:18> 'err' 0x1e002d3d530
|   |       |-CaseStmt 0x1e002d3db70 <line:1003:9, line:1012:13>
|   |       | |-ConstantExpr 0x1e002d3db58 <line:1003:14> 'int'
|   |       | | `-DeclRefExpr 0x1e002d3db38 <col:14> 'int' EnumConstant 0x1e002d3a320 'HANDSHAKE_RETRY' 'int'
|   |       | `-IfStmt 0x1e002d3dd10 <line:1004:13, line:1012:13>
|   |       |   |-BinaryOperator 0x1e002d3dbf8 <line:1004:17, col:40> 'int' '>='
|   |       |   | |-UnaryOperator 0x1e002d3dbb8 <col:17, col:34> 'int' postfix '++'
|   |       |   | | `-DeclRefExpr 0x1e002d3db98 <col:17> 'int' lvalue Var 0x1e002d3bb68 'client_turn_count' 'int'
|   |       |   | `-IntegerLiteral 0x1e002d3dbd0 <col:40> 'int' 2000
|   |       |   `-CompoundStmt 0x1e002d3dcf0 <col:46, line:1012:13>
|   |       |     |-BinaryOperator 0x1e002d3dcb8 <line:1010:17, col:31> 'ssl_test_result_t':'ssl_test_result_t' '='
|   |       |     | |-MemberExpr 0x1e002d3dc50 <col:17, col:22> 'ssl_test_result_t':'ssl_test_result_t' lvalue ->result 0x1e002cde660
|   |       |     | | `-ImplicitCastExpr 0x1e002d3dc38 <col:17> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   |       |     | |   `-DeclRefExpr 0x1e002d3dc18 <col:17> 'HANDSHAKE_RESULT *' lvalue Var 0x1e002d3b978 'ret' 'HANDSHAKE_RESULT *'
|   |       |     | `-ImplicitCastExpr 0x1e002d3dca0 <col:31> 'ssl_test_result_t':'ssl_test_result_t' <IntegralCast>
|   |       |     |   `-DeclRefExpr 0x1e002d3dc80 <col:31> 'int' EnumConstant 0x1e002cd3ac8 'SSL_TEST_INTERNAL_ERROR' 'int'
|   |       |     `-GotoStmt 0x1e002d3dcd8 <line:1011:17, col:22> 'err' 0x1e002d3d530
|   |       |-CompoundAssignOperator 0x1e002d3dd70 <line:1015:13, col:28> 'int' '^=' ComputeLHSTy='int' ComputeResultTy='int'
|   |       | |-DeclRefExpr 0x1e002d3dd28 <col:13> 'int' lvalue Var 0x1e002d3bac0 'client_turn' 'int'
|   |       | `-IntegerLiteral 0x1e002d3dd48 <col:28> 'int' 1
|   |       `-BreakStmt 0x1e002d3dda0 <line:1016:13>
|   |-LabelStmt 0x1e002d3df60 <line:1019:2, line:1020:45> 'err'
|   | `-BinaryOperator 0x1e002d3df40 <col:5, col:45> 'int' '='
|   |   |-MemberExpr 0x1e002d3dea8 <col:5, col:10> 'int' lvalue ->server_alert_sent 0x1e002cde820
|   |   | `-ImplicitCastExpr 0x1e002d3de90 <col:5> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1e002d3de70 <col:5> 'HANDSHAKE_RESULT *' lvalue Var 0x1e002d3b978 'ret' 'HANDSHAKE_RESULT *'
|   |   `-ImplicitCastExpr 0x1e002d3df28 <col:30, col:45> 'int' <LValueToRValue>
|   |     `-MemberExpr 0x1e002d3def8 <col:30, col:45> 'int' lvalue .alert_sent 0x1e002c89258
|   |       `-DeclRefExpr 0x1e002d3ded8 <col:30> 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st' lvalue Var 0x1e002d3b6b8 'server_ex_data' 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st'
|   |-BinaryOperator 0x1e002d35fe8 <line:1021:5, col:56> 'int' '='
|   | |-MemberExpr 0x1e002d3dfb0 <col:5, col:10> 'int' lvalue ->server_num_fatal_alerts_sent 0x1e002cde890
|   | | `-ImplicitCastExpr 0x1e002d3df98 <col:5> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1e002d3df78 <col:5> 'HANDSHAKE_RESULT *' lvalue Var 0x1e002d3b978 'ret' 'HANDSHAKE_RESULT *'
|   | `-ImplicitCastExpr 0x1e002d35fd0 <col:41, col:56> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x1e002d35fa0 <col:41, col:56> 'int' lvalue .num_fatal_alerts_sent 0x1e002c892c8
|   |     `-DeclRefExpr 0x1e002d3dfe0 <col:41> 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st' lvalue Var 0x1e002d3b6b8 'server_ex_data' 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st'
|   |-BinaryOperator 0x1e002d360d8 <line:1022:5, col:49> 'int' '='
|   | |-MemberExpr 0x1e002d36040 <col:5, col:10> 'int' lvalue ->server_alert_received 0x1e002cde900
|   | | `-ImplicitCastExpr 0x1e002d36028 <col:5> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1e002d36008 <col:5> 'HANDSHAKE_RESULT *' lvalue Var 0x1e002d3b978 'ret' 'HANDSHAKE_RESULT *'
|   | `-ImplicitCastExpr 0x1e002d360c0 <col:34, col:49> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x1e002d36090 <col:34, col:49> 'int' lvalue .alert_received 0x1e002c89338
|   |     `-DeclRefExpr 0x1e002d36070 <col:34> 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st' lvalue Var 0x1e002d3b730 'client_ex_data' 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st'
|   |-BinaryOperator 0x1e002d361c8 <line:1023:5, col:45> 'int' '='
|   | |-MemberExpr 0x1e002d36130 <col:5, col:10> 'int' lvalue ->client_alert_sent 0x1e002cde6d0
|   | | `-ImplicitCastExpr 0x1e002d36118 <col:5> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1e002d360f8 <col:5> 'HANDSHAKE_RESULT *' lvalue Var 0x1e002d3b978 'ret' 'HANDSHAKE_RESULT *'
|   | `-ImplicitCastExpr 0x1e002d361b0 <col:30, col:45> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x1e002d36180 <col:30, col:45> 'int' lvalue .alert_sent 0x1e002c89258
|   |     `-DeclRefExpr 0x1e002d36160 <col:30> 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st' lvalue Var 0x1e002d3b730 'client_ex_data' 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st'
|   |-BinaryOperator 0x1e002d362b8 <line:1024:5, col:56> 'int' '='
|   | |-MemberExpr 0x1e002d36220 <col:5, col:10> 'int' lvalue ->client_num_fatal_alerts_sent 0x1e002cde740
|   | | `-ImplicitCastExpr 0x1e002d36208 <col:5> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1e002d361e8 <col:5> 'HANDSHAKE_RESULT *' lvalue Var 0x1e002d3b978 'ret' 'HANDSHAKE_RESULT *'
|   | `-ImplicitCastExpr 0x1e002d362a0 <col:41, col:56> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x1e002d36270 <col:41, col:56> 'int' lvalue .num_fatal_alerts_sent 0x1e002c892c8
|   |     `-DeclRefExpr 0x1e002d36250 <col:41> 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st' lvalue Var 0x1e002d3b730 'client_ex_data' 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st'
|   |-BinaryOperator 0x1e002d363a8 <line:1025:5, col:49> 'int' '='
|   | |-MemberExpr 0x1e002d36310 <col:5, col:10> 'int' lvalue ->client_alert_received 0x1e002cde7b0
|   | | `-ImplicitCastExpr 0x1e002d362f8 <col:5> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1e002d362d8 <col:5> 'HANDSHAKE_RESULT *' lvalue Var 0x1e002d3b978 'ret' 'HANDSHAKE_RESULT *'
|   | `-ImplicitCastExpr 0x1e002d36390 <col:34, col:49> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x1e002d36360 <col:34, col:49> 'int' lvalue .alert_received 0x1e002c89338
|   |     `-DeclRefExpr 0x1e002d36340 <col:34> 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st' lvalue Var 0x1e002d3b6b8 'server_ex_data' 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st'
|   |-BinaryOperator 0x1e002d366d8 <line:1028:5, col:38> 'ssl_servername_t':'ssl_servername_t' '='
|   | |-MemberExpr 0x1e002d36640 <col:5, col:10> 'ssl_servername_t':'ssl_servername_t' lvalue ->servername 0x1e002cdea48
|   | | `-ImplicitCastExpr 0x1e002d36628 <col:5> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1e002d36608 <col:5> 'HANDSHAKE_RESULT *' lvalue Var 0x1e002d3b978 'ret' 'HANDSHAKE_RESULT *'
|   | `-ImplicitCastExpr 0x1e002d366c0 <col:23, col:38> 'ssl_servername_t':'ssl_servername_t' <LValueToRValue>
|   |   `-MemberExpr 0x1e002d36690 <col:23, col:38> 'ssl_servername_t':'ssl_servername_t' lvalue .servername 0x1e002c89410
|   |     `-DeclRefExpr 0x1e002d36670 <col:23> 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st' lvalue Var 0x1e002d3b6b8 'server_ex_data' 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st'
|   |-IfStmt 0x1e002d36d90 <line:1031:5, line:1034:31> has_else
|   | |-BinaryOperator 0x1e002d36bf0 <line:1031:9, col:37> 'int' '||'
|   | | |-BinaryOperator 0x1e002d36b38 <col:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | | |-ImplicitCastExpr 0x1e002d36b08 <.//openssl//file_jk/before\test\handshake_helper.c:1031:9> 'const unsigned char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1e002d36a60 <col:9> 'const unsigned char *' lvalue Var 0x1e002d3bdd0 'tick' 'const unsigned char *'
|   | | | `-ImplicitCastExpr 0x1e002d36b20 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const unsigned char *' <BitCast>
|   | | |   `-ParenExpr 0x1e002d36ae8 <col:17, col:27> 'void *'
|   | | |     `-CStyleCastExpr 0x1e002d36ac0 <col:18, col:26> 'void *' <NullToPointer>
|   | | |       `-IntegerLiteral 0x1e002d36a80 <col:26> 'int' 0
|   | | `-BinaryOperator 0x1e002d36bd0 <.//openssl//file_jk/before\test\handshake_helper.c:1031:25, col:37> 'int' '=='
|   | |   |-ImplicitCastExpr 0x1e002d36ba0 <col:25> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x1e002d36b58 <col:25> 'size_t':'unsigned long long' lvalue Var 0x1e002d3bf00 'tick_len' 'size_t':'unsigned long long'
|   | |   `-ImplicitCastExpr 0x1e002d36bb8 <col:37> 'unsigned long long' <IntegralCast>
|   | |     `-IntegerLiteral 0x1e002d36b78 <col:37> 'int' 0
|   | |-BinaryOperator 0x1e002d36cb0 <line:1032:9, col:31> 'ssl_session_ticket_t':'ssl_session_ticket_t' '='
|   | | |-MemberExpr 0x1e002d36c48 <col:9, col:14> 'ssl_session_ticket_t':'ssl_session_ticket_t' lvalue ->session_ticket 0x1e002cdeab0
|   | | | `-ImplicitCastExpr 0x1e002d36c30 <col:9> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1e002d36c10 <col:9> 'HANDSHAKE_RESULT *' lvalue Var 0x1e002d3b978 'ret' 'HANDSHAKE_RESULT *'
|   | | `-ImplicitCastExpr 0x1e002d36c98 <col:31> 'ssl_session_ticket_t':'ssl_session_ticket_t' <IntegralCast>
|   | |   `-DeclRefExpr 0x1e002d36c78 <col:31> 'int' EnumConstant 0x1e002cd4750 'SSL_TEST_SESSION_TICKET_NO' 'int'
|   | `-BinaryOperator 0x1e002d36d70 <line:1034:9, col:31> 'ssl_session_ticket_t':'ssl_session_ticket_t' '='
|   |   |-MemberExpr 0x1e002d36d08 <col:9, col:14> 'ssl_session_ticket_t':'ssl_session_ticket_t' lvalue ->session_ticket 0x1e002cdeab0
|   |   | `-ImplicitCastExpr 0x1e002d36cf0 <col:9> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1e002d36cd0 <col:9> 'HANDSHAKE_RESULT *' lvalue Var 0x1e002d3b978 'ret' 'HANDSHAKE_RESULT *'
|   |   `-ImplicitCastExpr 0x1e002d36d58 <col:31> 'ssl_session_ticket_t':'ssl_session_ticket_t' <IntegralCast>
|   |     `-DeclRefExpr 0x1e002d36d38 <col:31> 'int' EnumConstant 0x1e002cd46f8 'SSL_TEST_SESSION_TICKET_YES' 'int'
|   |-BinaryOperator 0x1e002d36e88 <line:1035:5, col:54> 'int' '='
|   | |-MemberExpr 0x1e002d36df0 <col:5, col:10> 'int' lvalue ->session_ticket_do_not_call 0x1e002cdeb20
|   | | `-ImplicitCastExpr 0x1e002d36dd8 <col:5> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1e002d36db8 <col:5> 'HANDSHAKE_RESULT *' lvalue Var 0x1e002d3b978 'ret' 'HANDSHAKE_RESULT *'
|   | `-ImplicitCastExpr 0x1e002d36e70 <col:39, col:54> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x1e002d36e40 <col:39, col:54> 'int' lvalue .session_ticket_do_not_call 0x1e002c893a8
|   |     `-DeclRefExpr 0x1e002d36e20 <col:39> 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st' lvalue Var 0x1e002d3b6b8 'server_ex_data' 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st'
|   |-BinaryOperator 0x1e002d412e8 <line:1039:5, col:58> 'char *' '='
|   | |-MemberExpr 0x1e002d41168 <col:5, col:10> 'char *' lvalue ->client_npn_negotiated 0x1e002cdeb90
|   | | `-ImplicitCastExpr 0x1e002d41150 <col:5> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1e002d41130 <col:5> 'HANDSHAKE_RESULT *' lvalue Var 0x1e002d3b978 'ret' 'HANDSHAKE_RESULT *'
|   | `-CallExpr 0x1e002d41270 <col:34, col:58> 'char *'
|   |   |-ImplicitCastExpr 0x1e002d41258 <col:34> 'char *(*)(const unsigned char *, size_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1e002d41198 <col:34> 'char *(const unsigned char *, size_t)' Function 0x1e002d37220 'dup_str' 'char *(const unsigned char *, size_t)'
|   |   |-ImplicitCastExpr 0x1e002d412a0 <col:42> 'const unsigned char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1e002d411b8 <col:42> 'const unsigned char *' lvalue Var 0x1e002d39048 'proto' 'const unsigned char *'
|   |   `-ImplicitCastExpr 0x1e002d412d0 <col:49> 'size_t':'unsigned long long' <IntegralCast>
|   |     `-ImplicitCastExpr 0x1e002d412b8 <col:49> 'unsigned int' <LValueToRValue>
|   |       `-DeclRefExpr 0x1e002d411d8 <col:49> 'unsigned int' lvalue Var 0x1e002d39180 'proto_len' 'unsigned int'
|   |-BinaryOperator 0x1e002d41510 <line:1042:5, col:58> 'char *' '='
|   | |-MemberExpr 0x1e002d413f0 <col:5, col:10> 'char *' lvalue ->server_npn_negotiated 0x1e002cdec00
|   | | `-ImplicitCastExpr 0x1e002d413d8 <col:5> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1e002d413b8 <col:5> 'HANDSHAKE_RESULT *' lvalue Var 0x1e002d3b978 'ret' 'HANDSHAKE_RESULT *'
|   | `-CallExpr 0x1e002d41498 <col:34, col:58> 'char *'
|   |   |-ImplicitCastExpr 0x1e002d41480 <col:34> 'char *(*)(const unsigned char *, size_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1e002d41420 <col:34> 'char *(const unsigned char *, size_t)' Function 0x1e002d37220 'dup_str' 'char *(const unsigned char *, size_t)'
|   |   |-ImplicitCastExpr 0x1e002d414c8 <col:42> 'const unsigned char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1e002d41440 <col:42> 'const unsigned char *' lvalue Var 0x1e002d39048 'proto' 'const unsigned char *'
|   |   `-ImplicitCastExpr 0x1e002d414f8 <col:49> 'size_t':'unsigned long long' <IntegralCast>
|   |     `-ImplicitCastExpr 0x1e002d414e0 <col:49> 'unsigned int' <LValueToRValue>
|   |       `-DeclRefExpr 0x1e002d41460 <col:49> 'unsigned int' lvalue Var 0x1e002d39180 'proto_len' 'unsigned int'
|   |-BinaryOperator 0x1e002d41828 <line:1046:5, col:59> 'char *' '='
|   | |-MemberExpr 0x1e002d41708 <col:5, col:10> 'char *' lvalue ->client_alpn_negotiated 0x1e002cdec70
|   | | `-ImplicitCastExpr 0x1e002d416f0 <col:5> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1e002d416d0 <col:5> 'HANDSHAKE_RESULT *' lvalue Var 0x1e002d3b978 'ret' 'HANDSHAKE_RESULT *'
|   | `-CallExpr 0x1e002d417b0 <col:35, col:59> 'char *'
|   |   |-ImplicitCastExpr 0x1e002d41798 <col:35> 'char *(*)(const unsigned char *, size_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1e002d41738 <col:35> 'char *(const unsigned char *, size_t)' Function 0x1e002d37220 'dup_str' 'char *(const unsigned char *, size_t)'
|   |   |-ImplicitCastExpr 0x1e002d417e0 <col:43> 'const unsigned char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1e002d41758 <col:43> 'const unsigned char *' lvalue Var 0x1e002d39048 'proto' 'const unsigned char *'
|   |   `-ImplicitCastExpr 0x1e002d41810 <col:50> 'size_t':'unsigned long long' <IntegralCast>
|   |     `-ImplicitCastExpr 0x1e002d417f8 <col:50> 'unsigned int' <LValueToRValue>
|   |       `-DeclRefExpr 0x1e002d41778 <col:50> 'unsigned int' lvalue Var 0x1e002d39180 'proto_len' 'unsigned int'
|   |-BinaryOperator 0x1e002d41a50 <line:1049:5, col:59> 'char *' '='
|   | |-MemberExpr 0x1e002d41930 <col:5, col:10> 'char *' lvalue ->server_alpn_negotiated 0x1e002cdece0
|   | | `-ImplicitCastExpr 0x1e002d41918 <col:5> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1e002d418f8 <col:5> 'HANDSHAKE_RESULT *' lvalue Var 0x1e002d3b978 'ret' 'HANDSHAKE_RESULT *'
|   | `-CallExpr 0x1e002d419d8 <col:35, col:59> 'char *'
|   |   |-ImplicitCastExpr 0x1e002d419c0 <col:35> 'char *(*)(const unsigned char *, size_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1e002d41960 <col:35> 'char *(const unsigned char *, size_t)' Function 0x1e002d37220 'dup_str' 'char *(const unsigned char *, size_t)'
|   |   |-ImplicitCastExpr 0x1e002d41a08 <col:43> 'const unsigned char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1e002d41980 <col:43> 'const unsigned char *' lvalue Var 0x1e002d39048 'proto' 'const unsigned char *'
|   |   `-ImplicitCastExpr 0x1e002d41a38 <col:50> 'size_t':'unsigned long long' <IntegralCast>
|   |     `-ImplicitCastExpr 0x1e002d41a20 <col:50> 'unsigned int' <LValueToRValue>
|   |       `-DeclRefExpr 0x1e002d419a0 <col:50> 'unsigned int' lvalue Var 0x1e002d39180 'proto_len' 'unsigned int'
|   |-IfStmt 0x1e002d40718 <line:1057:5, line:1068:5>
|   | |-OpaqueValueExpr 0x1e002d40700 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1e002d406d8 <line:1057:55, line:1068:5>
|   |   |-DeclStmt 0x1e002d40128 <line:1058:9, col:39>
|   |   | `-VarDecl 0x1e002d41fb0 <col:9, col:13> col:13 used nid 'int'
|   |   |-IfStmt 0x1e002d404f0 <line:1061:9, line:1064:9>
|   |   | |-OpaqueValueExpr 0x1e002d404d8 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x1e002d404c8 <line:1061:33, line:1064:9>
|   |   `-BinaryOperator 0x1e002d406b8 <line:1067:9, col:29> 'int' '='
|   |     |-MemberExpr 0x1e002d40650 <col:9, col:14> 'int' lvalue ->tmp_key_type 0x1e002cdee30
|   |     | `-ImplicitCastExpr 0x1e002d40638 <col:9> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x1e002d40618 <col:9> 'HANDSHAKE_RESULT *' lvalue Var 0x1e002d3b978 'ret' 'HANDSHAKE_RESULT *'
|   |     `-ImplicitCastExpr 0x1e002d406a0 <col:29> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x1e002d40680 <col:29> 'int' lvalue Var 0x1e002d41fb0 'nid' 'int'
|   |-CallExpr 0x1e002d40800 <line:1070:5, col:40> 'void'
|   | |-ImplicitCastExpr 0x1e002d407e8 <col:5> 'void (*)(CTX_DATA *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1e002d40730 <col:5> 'void (CTX_DATA *)' Function 0x1e002c89a38 'ctx_data_free_data' 'void (CTX_DATA *)'
|   | `-UnaryOperator 0x1e002d40770 <col:24, col:25> 'CTX_DATA *' prefix '&' cannot overflow
|   |   `-DeclRefExpr 0x1e002d40750 <col:25> 'CTX_DATA':'struct ctx_data_st' lvalue Var 0x1e002d3b850 'server_ctx_data' 'CTX_DATA':'struct ctx_data_st'
|   |-CallExpr 0x1e002d40898 <line:1071:5, col:41> 'void'
|   | |-ImplicitCastExpr 0x1e002d40880 <col:5> 'void (*)(CTX_DATA *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1e002d40828 <col:5> 'void (CTX_DATA *)' Function 0x1e002c89a38 'ctx_data_free_data' 'void (CTX_DATA *)'
|   | `-UnaryOperator 0x1e002d40868 <col:24, col:25> 'CTX_DATA *' prefix '&' cannot overflow
|   |   `-DeclRefExpr 0x1e002d40848 <col:25> 'CTX_DATA':'struct ctx_data_st' lvalue Var 0x1e002d3b8c8 'server2_ctx_data' 'CTX_DATA':'struct ctx_data_st'
|   |-CallExpr 0x1e002d40930 <line:1072:5, col:40> 'void'
|   | |-ImplicitCastExpr 0x1e002d40918 <col:5> 'void (*)(CTX_DATA *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1e002d408c0 <col:5> 'void (CTX_DATA *)' Function 0x1e002c89a38 'ctx_data_free_data' 'void (CTX_DATA *)'
|   | `-UnaryOperator 0x1e002d40900 <col:24, col:25> 'CTX_DATA *' prefix '&' cannot overflow
|   |   `-DeclRefExpr 0x1e002d408e0 <col:25> 'CTX_DATA':'struct ctx_data_st' lvalue Var 0x1e002d3b7d8 'client_ctx_data' 'CTX_DATA':'struct ctx_data_st'
|   |-CallExpr 0x1e002d409c8 <line:1074:5, col:27> 'void'
|   | |-ImplicitCastExpr 0x1e002d409b0 <col:5> 'void (*)(PEER *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1e002d40958 <col:5> 'void (PEER *)' Function 0x1e002c99f18 'peer_free_data' 'void (PEER *)'
|   | `-UnaryOperator 0x1e002d40998 <col:20, col:21> 'PEER *' prefix '&' cannot overflow
|   |   `-DeclRefExpr 0x1e002d40978 <col:21> 'PEER':'struct peer_st' lvalue Var 0x1e002d3b598 'server' 'PEER':'struct peer_st'
|   |-CallExpr 0x1e002d40a60 <line:1075:5, col:27> 'void'
|   | |-ImplicitCastExpr 0x1e002d40a48 <col:5> 'void (*)(PEER *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1e002d409f0 <col:5> 'void (PEER *)' Function 0x1e002c99f18 'peer_free_data' 'void (PEER *)'
|   | `-UnaryOperator 0x1e002d40a30 <col:20, col:21> 'PEER *' prefix '&' cannot overflow
|   |   `-DeclRefExpr 0x1e002d40a10 <col:21> 'PEER':'struct peer_st' lvalue Var 0x1e002d3b610 'client' 'PEER':'struct peer_st'
|   `-ReturnStmt 0x1e002d40ac0 <line:1076:5, col:12>
|     `-ImplicitCastExpr 0x1e002d40aa8 <col:12> 'HANDSHAKE_RESULT *' <LValueToRValue>
|       `-DeclRefExpr 0x1e002d40a88 <col:12> 'HANDSHAKE_RESULT *' lvalue Var 0x1e002d3b978 'ret' 'HANDSHAKE_RESULT *'
`-FunctionDecl 0x1e002d42060 <line:1079:1, line:1106:1> line:1079:19 invalid do_handshake 'HANDSHAKE_RESULT *(int *, int *, int *, int *, int *, const SSL_TEST_CTX *)'
  |-ParmVarDecl 0x1e002d40cd0 <col:32, col:41> col:41 invalid server_ctx 'int *'
  |-ParmVarDecl 0x1e002d40d50 <col:53, col:62> col:62 invalid server2_ctx 'int *'
  |-ParmVarDecl 0x1e002d40dd0 <line:1080:32, col:41> col:41 invalid client_ctx 'int *'
  |-ParmVarDecl 0x1e002d40e50 <col:53, col:62> col:62 invalid resume_server_ctx 'int *'
  |-ParmVarDecl 0x1e002d40ed0 <line:1081:32, col:41> col:41 invalid resume_client_ctx 'int *'
  |-ParmVarDecl 0x1e002d40f48 <line:1082:32, col:52> col:52 used test_ctx 'const SSL_TEST_CTX *'
  `-CompoundStmt 0x1e002d42b58 <line:1083:1, line:1106:1>
    |-DeclStmt 0x1e002d421c0 <line:1084:5, col:29>
    | `-VarDecl 0x1e002d42158 <col:5, col:23> col:23 used result 'HANDSHAKE_RESULT *'
    |-IfStmt 0x1e002d42518 <line:1090:5, line:1091:14>
    | |-BinaryOperator 0x1e002d42490 <line:1090:9, col:37> 'int' '!='
    | | |-ImplicitCastExpr 0x1e002d42478 <col:9, col:19> 'int' <IntegralCast>
    | | | `-ImplicitCastExpr 0x1e002d42460 <col:9, col:19> 'ssl_handshake_mode_t':'ssl_handshake_mode_t' <LValueToRValue>
    | | |   `-MemberExpr 0x1e002d42410 <col:9, col:19> 'const ssl_handshake_mode_t':'const ssl_handshake_mode_t' lvalue ->handshake_mode 0x1e002cdc2c0
    | | |     `-ImplicitCastExpr 0x1e002d423f8 <col:9> 'const SSL_TEST_CTX *' <LValueToRValue>
    | | |       `-DeclRefExpr 0x1e002d423d8 <col:9> 'const SSL_TEST_CTX *' lvalue ParmVar 0x1e002d40f48 'test_ctx' 'const SSL_TEST_CTX *'
    | | `-DeclRefExpr 0x1e002d42440 <col:37> 'int' EnumConstant 0x1e002cd4cc8 'SSL_TEST_HANDSHAKE_RESUME' 'int'
    | `-GotoStmt 0x1e002d42500 <line:1091:9, col:14> 'end' 0x1e002d424b0
    |-IfStmt 0x1e002d42700 <line:1093:5, line:1096:5>
    | |-BinaryOperator 0x1e002d425e8 <line:1093:9, col:27> 'int' '!='
    | | |-ImplicitCastExpr 0x1e002d425d0 <col:9, col:17> 'int' <IntegralCast>
    | | | `-ImplicitCastExpr 0x1e002d425b8 <col:9, col:17> 'ssl_test_result_t':'ssl_test_result_t' <LValueToRValue>
    | | |   `-MemberExpr 0x1e002d42568 <col:9, col:17> 'ssl_test_result_t':'ssl_test_result_t' lvalue ->result 0x1e002cde660
    | | |     `-ImplicitCastExpr 0x1e002d42550 <col:9> 'HANDSHAKE_RESULT *' <LValueToRValue>
    | | |       `-DeclRefExpr 0x1e002d42530 <col:9> 'HANDSHAKE_RESULT *' lvalue Var 0x1e002d42158 'result' 'HANDSHAKE_RESULT *'
    | | `-DeclRefExpr 0x1e002d42598 <col:27> 'int' EnumConstant 0x1e002cd39c0 'SSL_TEST_SUCCESS' 'int'
    | `-CompoundStmt 0x1e002d426e0 <col:45, line:1096:5>
    |   |-BinaryOperator 0x1e002d426a8 <line:1094:9, col:26> 'ssl_test_result_t':'ssl_test_result_t' '='
    |   | |-MemberExpr 0x1e002d42640 <col:9, col:17> 'ssl_test_result_t':'ssl_test_result_t' lvalue ->result 0x1e002cde660
    |   | | `-ImplicitCastExpr 0x1e002d42628 <col:9> 'HANDSHAKE_RESULT *' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x1e002d42608 <col:9> 'HANDSHAKE_RESULT *' lvalue Var 0x1e002d42158 'result' 'HANDSHAKE_RESULT *'
    |   | `-ImplicitCastExpr 0x1e002d42690 <col:26> 'ssl_test_result_t':'ssl_test_result_t' <IntegralCast>
    |   |   `-DeclRefExpr 0x1e002d42670 <col:26> 'int' EnumConstant 0x1e002cd3b20 'SSL_TEST_FIRST_HANDSHAKE_FAILED' 'int'
    |   `-GotoStmt 0x1e002d426c8 <line:1095:9, col:14> 'end' 0x1e002d424b0
    |-CallExpr 0x1e002d427d0 <line:1098:5, col:33> 'void'
    | |-ImplicitCastExpr 0x1e002d427b8 <col:5> 'void (*)(HANDSHAKE_RESULT *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x1e002d42718 <col:5> 'void (HANDSHAKE_RESULT *)' Function 0x1e002c839f8 'HANDSHAKE_RESULT_free' 'void (HANDSHAKE_RESULT *)'
    | `-ImplicitCastExpr 0x1e002d427f8 <col:27> 'HANDSHAKE_RESULT *' <LValueToRValue>
    |   `-DeclRefExpr 0x1e002d42738 <col:27> 'HANDSHAKE_RESULT *' lvalue Var 0x1e002d42158 'result' 'HANDSHAKE_RESULT *'
    |-LabelStmt 0x1e002d42af8 <line:1103:2, col:5> 'end'
    | `-NullStmt 0x1e002d42af0 <col:5>
    `-ReturnStmt 0x1e002d42b48 <line:1105:5, col:12>
      `-ImplicitCastExpr 0x1e002d42b30 <col:12> 'HANDSHAKE_RESULT *' <LValueToRValue>
        `-DeclRefExpr 0x1e002d42b10 <col:12> 'HANDSHAKE_RESULT *' lvalue Var 0x1e002d42158 'result' 'HANDSHAKE_RESULT *'
