TranslationUnitDecl 0x229cd2248b8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x229cd225150 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x229cd224e50 '__int128'
|-TypedefDecl 0x229cd2251c0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x229cd224e70 'unsigned __int128'
|-TypedefDecl 0x229cd2254f8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x229cd2252b0 'struct __NSConstantString_tag'
|   `-Record 0x229cd225218 '__NSConstantString_tag'
|-TypedefDecl 0x229cd225568 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x229cd224a90 'unsigned long long'
|-TypedefDecl 0x229cd225600 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x229cd2255c0 'char *'
|   `-BuiltinType 0x229cd224950 'char'
|-TypedefDecl 0x229cd225670 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x229cd2255c0 'char *'
|   `-BuiltinType 0x229cd224950 'char'
|-TypedefDecl 0x229cd225730 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x229cd224a90 'unsigned long long'
|-TypedefDecl 0x229cd2257a0 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x229cd2255c0 'char *'
|   `-BuiltinType 0x229cd224950 'char'
|-FunctionDecl 0x229cece73a0 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x229cece7440 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x229cece74b0 <col:21> Implicit
|-FunctionDecl 0x229cece7508 prev 0x229cece73a0 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x229cece7230 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x229cece75f8 <col:21> Inherited Implicit
|-TypedefDecl 0x229cece7638 prev 0x229cd225568 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x229cd224a90 'unsigned long long'
|-TypedefDecl 0x229cece76e0 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x229cece76b0 'size_t' sugar
|   |-Typedef 0x229cece7638 'size_t'
|   `-BuiltinType 0x229cd224a90 'unsigned long long'
|-TypedefDecl 0x229cece7750 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x229cd2249f0 'long long'
|-TypedefDecl 0x229cece77c0 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x229cd2249f0 'long long'
|-TypedefDecl 0x229cece7830 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x229cd224a30 'unsigned short'
|-TypedefDecl 0x229cece78a0 <line:541:1, col:24> col:24 wint_t 'unsigned short'
| `-BuiltinType 0x229cd224a30 'unsigned short'
|-TypedefDecl 0x229cece7910 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x229cd224a30 'unsigned short'
|-TypedefDecl 0x229cece7980 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x229cd2249b0 'int'
|-TypedefDecl 0x229cece79f0 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x229cd2249d0 'long'
|-TypedefDecl 0x229cece7a60 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x229cd2249f0 'long long'
|-TypedefDecl 0x229cece7af0 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x229cece7ac0 '__time64_t' sugar
|   |-Typedef 0x229cece7a60 '__time64_t'
|   `-BuiltinType 0x229cd2249f0 'long long'
|-FunctionDecl 0x229cece7c68 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x229cece7e88 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x229ced2be10 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x229cece7fc8 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x229cece8040 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x229cece80b8 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x229cece8138 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x229ced2bbb0 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x229ced2bef0 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x229ced2bfb0 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x229ced2c120 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x229ced2c0d0 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x229ced2c070 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x229ced2bf90 'struct threadlocaleinfostruct'
|       `-Record 0x229ced34c40 'threadlocaleinfostruct'
|-TypedefDecl 0x229ced2c230 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x229ced2c1e0 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x229ced2c180 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x229ced2c050 'struct threadmbcinfostruct'
|       `-Record 0x229ced2bfb0 'threadmbcinfostruct'
|-RecordDecl 0x229ced2c288 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x229ced2c340 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x229ced2c400 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x229ced2c490 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x229ced2c520 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x229ced2c5d8 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x229ced2c580 'struct localeinfo_struct' sugar
|   `-RecordType 0x229ced2c3e0 'struct localeinfo_struct'
|     `-Record 0x229ced2c340 'localeinfo_struct'
|-TypedefDecl 0x229ced2c6b0 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x229ced2c660 'struct localeinfo_struct *'
|   `-ElaboratedType 0x229ced2c580 'struct localeinfo_struct' sugar
|     `-RecordType 0x229ced2c3e0 'struct localeinfo_struct'
|       `-Record 0x229ced2c340 'localeinfo_struct'
|-RecordDecl 0x229ced2c728 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x229ced2c7e0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x229ced2c858 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x229ced2c918 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x229ced2c9b0 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x229ced2ca20 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x229ced2cad8 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x229ced2ca80 'struct localerefcount' sugar
|   `-RecordType 0x229ced2c7c0 'struct localerefcount'
|     `-Record 0x229ced2c728 'localerefcount'
|-RecordDecl 0x229ced34c40 prev 0x229ced2bef0 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x229ced34cc0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x229ced34d38 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x229ced34da8 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x229ced34e18 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x229ced34e88 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x229ced35048 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x229ced350b8 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x229ced35128 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x229ced35198 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x229ced35208 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x229ced35278 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x229ced352d0 parent 0x229cd2248b8 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x229ced35460 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x229ced354d0 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x229ced35540 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x229ced355b0 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x229ced35650 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x229ced356c0 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x229ced357d0 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x229ced35908 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x229ced359b8 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x229ced35960 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x229ced2bf90 'struct threadlocaleinfostruct'
|     `-Record 0x229ced34c40 'threadlocaleinfostruct'
|-FunctionDecl 0x229ced30e10 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:47:9, col:142> col:25 _memccpy 'void *(void *, const void *, int, size_t) __attribute__((cdecl))':'void *(void *, const void *, int, size_t)'
| |-ParmVarDecl 0x229ced35a40 <col:69, col:76> col:76 _Dst 'void *'
| |-ParmVarDecl 0x229ced35af0 <col:87, col:100> col:100 _Src 'const void *'
| |-ParmVarDecl 0x229ced35b70 <col:111, col:115> col:115 _Val 'int'
| `-ParmVarDecl 0x229ced30c00 <col:126, col:133> col:133 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x229ced311d8 <line:48:54> col:54 implicit memchr 'void *(const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x229ced31278 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x229ced312e0 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x229ced31348 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x229ced313c8 prev 0x229ced311d8 <col:38, col:150> col:54 memchr 'void *(const void *, int, unsigned long long)'
| |-ParmVarDecl 0x229ced30f00 <col:94, col:107> col:107 _Buf 'const void *'
| |-ParmVarDecl 0x229ced30f80 <col:119, col:123> col:123 _Val 'int'
| `-ParmVarDecl 0x229ced30ff8 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x229ced31788 <line:49:24, col:162> col:40 _memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x229ced314b0 <col:77, col:90> col:90 _Buf1 'const void *'
| |-ParmVarDecl 0x229ced31530 <col:125, col:138> col:138 _Buf2 'const void *'
| `-ParmVarDecl 0x229ced315a8 <col:150, col:157> col:157 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x229ced32c70 <line:50:24, col:192> col:40 _memicmp_l 'int (const void *, const void *, size_t, _locale_t) __attribute__((cdecl))':'int (const void *, const void *, size_t, _locale_t)'
| |-ParmVarDecl 0x229ced31870 <col:79, col:92> col:92 _Buf1 'const void *'
| |-ParmVarDecl 0x229ced318f0 <col:127, col:140> col:140 _Buf2 'const void *'
| |-ParmVarDecl 0x229ced31968 <col:152, col:159> col:159 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x229ced31a00 <col:175, col:185> col:185 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x229ced32f78 <line:51:32> col:32 implicit memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x229ced33018 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x229ced33080 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x229ced330e8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x229ced33168 prev 0x229ced32f78 <col:16, col:144> col:32 memcmp 'int (const void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x229ced32d60 <col:63, col:76> col:76 _Buf1 'const void *'
| |-ParmVarDecl 0x229ced32de0 <col:107, col:120> col:120 _Buf2 'const void *'
| `-ParmVarDecl 0x229ced32e58 <col:132, col:139> col:139 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x229ced33528 <line:55:17> col:17 implicit memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x229ced335c8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x229ced33630 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x229ced33698 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x229ced33718 prev 0x229ced33528 <col:1, col:127> col:17 memcpy 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x229ced33250 <col:54, col:61> col:61 _Dst 'void *'
| |-ParmVarDecl 0x229ced332d0 <col:91, col:104> col:104 _Src 'const void *'
| `-ParmVarDecl 0x229ced33348 <col:115, col:122> col:122 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x229ced37c70 <line:57:9, col:191> col:26 memcpy_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x229ced33828 <col:82, col:89> col:89 _Dst 'void *'
| |-ParmVarDecl 0x229ced338c0 <col:100, col:108> col:108 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x229ced33940 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x229ced339b8 <col:174, col:182> col:182 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x229ced38038 <line:94:25> col:25 implicit memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x229ced380d8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x229ced38140 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x229ced381a8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x229ced38228 prev 0x229ced38038 <col:9, col:107> col:25 memset 'void *(void *, int, unsigned long long)'
| |-ParmVarDecl 0x229ced37d60 <col:62, col:69> col:69 _Dst 'void *'
| |-ParmVarDecl 0x229ced37de0 <col:80, col:84> col:84 _Val 'int'
| `-ParmVarDecl 0x229ced37e58 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x229ced386a8 <line:98:57> col:57 implicit memccpy 'void *(void *, const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x229ced38748 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x229ced387b0 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x229ced38818 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x229ced38880 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x229ced38908 prev 0x229ced386a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:98:187> col:57 memccpy 'void *(void *, const void *, int, unsigned long long)'
| |-ParmVarDecl 0x229ced383f0 <col:95, col:102> col:102 _Dst 'void *'
| |-ParmVarDecl 0x229ced38470 <col:136, col:149> col:149 _Src 'const void *'
| |-ParmVarDecl 0x229ced384f0 <col:160, col:164> col:164 _Val 'int'
| |-ParmVarDecl 0x229ced38568 <col:175, col:182> col:182 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x229ced389c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memccpy. See online help for details." ""
|-FunctionDecl 0x229ced38e18 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:99:190> col:69 memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x229ced38b90 <col:105, col:118> col:118 _Buf1 'const void *'
| |-ParmVarDecl 0x229ced38c80 <col:153, col:166> col:166 _Buf2 'const void *'
| |-ParmVarDecl 0x229ced38cf8 <col:178, col:185> col:185 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x229ced38ed0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memicmp. See online help for details." ""
|-FunctionDecl 0x229ced392c0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:105:40, col:144> col:56 _strset_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x229ced38ff8 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x229ced39070 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| `-ParmVarDecl 0x229ced390f0 <col:134, col:138> col:138 _Value 'int'
|-FunctionDecl 0x229ced39690 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:107:88 _strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x229ced394a0 <col:108, col:114> col:114 _Dest 'char *'
| |-ParmVarDecl 0x229ced39520 <col:126, col:131> col:131 _Value 'int'
| `-DeprecatedAttr 0x229ced39740 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x229ced39b50 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:109:40, col:158> col:56 strcpy_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x229ced39888 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x229ced39900 <col:112, col:120> col:120 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x229ced39980 <col:141, col:154> col:154 _Src 'const char *'
|-FunctionDecl 0x229ced31ed0 <line:112:88> col:88 implicit strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x229ced31f70 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x229ced31fd8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x229ced32050 prev 0x229ced31ed0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:112:88 strcpy 'char *(char *, const char *)'
| |-ParmVarDecl 0x229ced31ce8 <col:142, col:148> col:148 _Dest 'char *'
| |-ParmVarDecl 0x229ced31d68 <col:162, col:176> col:176 _Source 'const char *'
| `-DeprecatedAttr 0x229ced32100 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x229ced32458 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:114:40, col:161> col:56 strcat_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x229ced32248 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x229ced322c0 <col:115, col:123> col:123 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x229ced32340 <col:144, col:157> col:157 _Src 'const char *'
|-FunctionDecl 0x229ced32780 <line:118:88> col:88 implicit strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x229ced32820 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x229ced32888 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x229ced32900 prev 0x229ced32780 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:118:88 strcat 'char *(char *, const char *)'
| |-ParmVarDecl 0x229ced32600 <col:170, col:176> col:176 _Dest 'char *'
| |-ParmVarDecl 0x229ced32680 <col:190, col:204> col:204 _Source 'const char *'
| `-DeprecatedAttr 0x229ced329b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x229ced3ad70 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:120:32> col:32 implicit used strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x229ced3ae10 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x229ced3ae78 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x229ced3aef0 prev 0x229ced3ad70 <col:16, col:91> col:32 used strcmp 'int (const char *, const char *)'
| |-ParmVarDecl 0x229ced32af8 <col:46, col:59> col:59 _Str1 'const char *'
| `-ParmVarDecl 0x229ced32b78 <col:73, col:86> col:86 _Str2 'const char *'
|-FunctionDecl 0x229ced3b140 <line:121:32> col:32 implicit strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x229ced3b1e0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x229ced3b250 prev 0x229ced3b140 <col:16, col:63> col:32 strlen 'unsigned long long (const char *)'
| `-ParmVarDecl 0x229ced3afd0 <col:46, col:59> col:59 _Str 'const char *'
|-FunctionDecl 0x229ced3b548 <line:125:1, col:92> col:17 used strnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x229ced3b328 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x229ced3b3a0 <col:76, col:83> col:83 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x229ced3b798 <line:127:16, line:133:1> line:130:19 strnlen_s 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' static inline
| |-ParmVarDecl 0x229ced3b628 <col:56, col:69> col:69 used _Str 'const char *'
| |-ParmVarDecl 0x229ced3b6a0 <col:80, col:87> col:87 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x229ced3bac8 <line:131:1, line:133:1>
|   `-ReturnStmt 0x229ced3bab8 <line:132:5, col:51>
|     `-ConditionalOperator 0x229ced3ba88 <col:12, col:51> 'unsigned long long'
|       |-ParenExpr 0x229ced3b8f8 <col:12, col:20> 'int'
|       | `-BinaryOperator 0x229ced3b8d8 <col:13, col:19> 'int' '=='
|       |   |-ImplicitCastExpr 0x229ced3b8a8 <col:13> 'const char *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x229ced3b860 <col:13> 'const char *' lvalue ParmVar 0x229ced3b628 '_Str' 'const char *'
|       |   `-ImplicitCastExpr 0x229ced3b8c0 <col:19> 'const char *' <NullToPointer>
|       |     `-IntegerLiteral 0x229ced3b880 <col:19> 'int' 0
|       |-ImplicitCastExpr 0x229ced3ba70 <col:24> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x229ced3b918 <col:24> 'int' 0
|       `-CallExpr 0x229ced3ba10 <col:28, col:51> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x229ced3b9f8 <col:28> 'size_t (*)(const char *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x229ced3b940 <col:28> 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' Function 0x229ced3b548 'strnlen' 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
|         |-ImplicitCastExpr 0x229ced3ba40 <col:36> 'const char *' <LValueToRValue>
|         | `-DeclRefExpr 0x229ced3b960 <col:36> 'const char *' lvalue ParmVar 0x229ced3b628 '_Str' 'const char *'
|         `-ImplicitCastExpr 0x229ced3ba58 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x229ced3b980 <col:42> 'size_t':'unsigned long long' lvalue ParmVar 0x229ced3b6a0 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x229ced3bde8 <line:136:28, col:209> col:44 memmove_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x229ced3baf8 <col:100, col:107> col:107 _Dst 'void *'
| |-ParmVarDecl 0x229ced3bb70 <col:118, col:126> col:126 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x229ced3bbf0 <col:168, col:181> col:181 _Src 'const void *'
| `-ParmVarDecl 0x229ced3bcb0 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x229ced3c0f0 <line:139:67> col:67 implicit memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x229ced3c190 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x229ced3c1f8 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x229ced3c260 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x229ced3c2e0 prev 0x229ced3c0f0 <col:51, col:186> col:67 memmove 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x229ced3bed8 <col:109, col:116> col:116 _Dst 'void *'
| |-ParmVarDecl 0x229ced3bf58 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x229ced3bfd0 <col:174, col:181> col:181 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x229ced3c518 <line:146:24, col:76> col:40 _strdup 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| `-ParmVarDecl 0x229ced3c3c8 <col:59, col:72> col:72 _Src 'const char *'
|-FunctionDecl 0x229ced3c7e0 <line:152:54> col:54 implicit strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x229ced3c880 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x229ced3c8e8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x229ced3c960 prev 0x229ced3c7e0 <col:38, col:100> col:54 strchr 'char *(const char *, int)'
| |-ParmVarDecl 0x229ced3c5f0 <col:68, col:81> col:81 _Str 'const char *'
| `-ParmVarDecl 0x229ced3c670 <col:92, col:96> col:96 _Val 'int'
|-FunctionDecl 0x229ced3cbc0 <line:153:24, col:103> col:40 _stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x229ced3ca40 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x229ced3cac0 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x229ced3ce40 <line:154:24, col:103> col:40 _strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x229ced3ccc0 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x229ced3cd40 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x229ced3d1f8 <line:155:24, col:133> col:40 _stricmp_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x229ced3cf20 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x229ced3cfa0 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x229ced3d018 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x229ced3d460 <line:156:24, col:103> col:40 strcoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x229ced3d2e0 <col:56, col:69> col:69 _Str1 'const char *'
| `-ParmVarDecl 0x229ced3d360 <col:84, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x229ced3d758 <line:157:24, col:133> col:40 _strcoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x229ced3d540 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x229ced3d5c0 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x229ced3d638 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x229ced3d9c0 <line:158:24, col:104> col:40 _stricoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x229ced3d840 <col:58, col:71> col:71 _Str1 'const char *'
| `-ParmVarDecl 0x229ced3d8c0 <col:86, col:99> col:99 _Str2 'const char *'
|-FunctionDecl 0x229ced3ece0 <line:159:24, col:134> col:40 _stricoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x229ced3daa0 <col:60, col:73> col:73 _Str1 'const char *'
| |-ParmVarDecl 0x229ced3db20 <col:88, col:101> col:101 _Str2 'const char *'
| `-ParmVarDecl 0x229ced3db98 <col:117, col:127> col:127 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x229ced3f098 <line:160:24, col:167> col:40 _strncoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x229ced3edc8 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x229ced3ee48 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x229ced3eec0 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x229ced3f500 <line:161:24, col:195> col:40 _strncoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x229ced3f180 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x229ced3f200 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x229ced3f278 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x229ced3f2f0 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x229ced3f808 <line:162:24, col:167> col:40 _strnicoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x229ced3f5f0 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x229ced3f670 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x229ced3f6e8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x229ced3fba0 <line:163:24, col:196> col:40 _strnicoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x229ced3f8f0 <col:80, col:93> col:93 _Str1 'const char *'
| |-ParmVarDecl 0x229ced3f970 <col:127, col:140> col:140 _Str2 'const char *'
| |-ParmVarDecl 0x229ced3f9e8 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x229ced3fa60 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x229ced3ff18 <line:164:40> col:40 implicit strcspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x229ced3ffb8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x229ced40020 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x229ced40098 prev 0x229ced3ff18 <col:24, col:104> col:40 strcspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x229ced3fcf0 <col:56, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x229ced3fd70 <col:83, col:96> col:96 _Control 'const char *'
|-FunctionDecl 0x229ced40350 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:165:118> col:77 _strerror 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x229ced40270 <col:98, col:111> col:111 _ErrMsg 'const char *'
| `-DeprecatedAttr 0x229ced403f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x229ced407d0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:166:28, col:155> col:44 _strerror_s 'errno_t (char *, size_t, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *)'
| |-ParmVarDecl 0x229ced40540 <col:85, col:92> col:92 _Buf 'char *'
| |-ParmVarDecl 0x229ced405b8 <col:103, col:110> col:110 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x229ced40638 <col:135, col:148> col:148 _ErrMsg 'const char *'
|-FunctionDecl 0x229ced40ae8 <line:168:76> col:76 implicit strerror 'char *(int)' extern
| `-ParmVarDecl 0x229ced40b88 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x229ced40bf8 prev 0x229ced40ae8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:168:93> col:76 strerror 'char *(int)'
| |-ParmVarDecl 0x229ced409b0 <col:90> col:93 'int'
| `-DeprecatedAttr 0x229ced40ca0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x229ced41010 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:170:28, col:139> col:44 strerror_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x229ced40e00 <col:84, col:91> col:91 _Buf 'char *'
| |-ParmVarDecl 0x229ced40e78 <col:102, col:109> col:109 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x229ced40ef8 <col:128, col:132> col:132 _ErrNum 'int'
|-FunctionDecl 0x229ced41318 <line:173:28, col:109> col:44 _strlwr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x229ced410f8 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x229ced41170 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x229ced41608 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:175:79 _strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x229ced414b8 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x229ced416b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x229ced41ac0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:176:28, col:139> col:44 _strlwr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x229ced417f8 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x229ced41870 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x229ced418e8 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x229ced39e40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:178:82 _strlwr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x229ced41c68 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x229ced39c90 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x229ced39ef0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x229ced3a3a8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:180:40, col:206> col:56 strncat_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x229ced3a038 <col:98, col:105> col:105 _Dst 'char *'
| |-ParmVarDecl 0x229ced3a0b0 <col:116, col:124> col:124 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x229ced3a130 <col:165, col:178> col:178 _Src 'const char *'
| `-ParmVarDecl 0x229ced3a1a8 <col:189, col:197> col:197 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x229ced3a828 <line:186:83> col:83 implicit strncat 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x229ced3a8c8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x229ced3a930 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x229ced3a998 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x229ced3aa18 prev 0x229ced3a828 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:186:83 strncat 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x229ced3a558 <col:161, col:167> col:167 _Dest 'char *'
| |-ParmVarDecl 0x229ced3a5d8 <col:198, col:212> col:212 _Source 'const char *'
| |-ParmVarDecl 0x229ced3a650 <col:226, col:234> col:234 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x229ced3aad0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x229ced43ee0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:188:40> col:40 implicit strncmp 'int (const char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x229ced43f80 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x229ced43fe8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x229ced44050 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x229ced440d0 prev 0x229ced43ee0 <col:24, col:163> col:40 strncmp 'int (const char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x229ced3ac18 <col:75, col:88> col:88 _Str1 'const char *'
| |-ParmVarDecl 0x229ced43d48 <col:122, col:135> col:135 _Str2 'const char *'
| `-ParmVarDecl 0x229ced43dc0 <col:147, col:154> col:154 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x229ced443d0 <line:189:24, col:165> col:40 _strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x229ced441b8 <col:77, col:90> col:90 _Str1 'const char *'
| |-ParmVarDecl 0x229ced44238 <col:124, col:137> col:137 _Str2 'const char *'
| `-ParmVarDecl 0x229ced442b0 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x229ced44768 <line:190:24, col:195> col:40 _strnicmp_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x229ced444b8 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x229ced44538 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x229ced445b0 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x229ced44628 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x229ced44b00 <line:192:40, col:203> col:56 strncpy_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x229ced44858 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x229ced448d0 <col:113, col:121> col:121 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x229ced44950 <col:162, col:175> col:175 _Src 'const char *'
| `-ParmVarDecl 0x229ced449c8 <col:186, col:194> col:194 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x229ced41ea8 <line:195:83> col:83 implicit strncpy 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x229ced41f48 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x229ced41fb0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x229ced42018 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x229ced42098 prev 0x229ced41ea8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:195:83 strncpy 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x229ced44cb0 <col:167, col:173> col:173 _Dest 'char *'
| |-ParmVarDecl 0x229ced41d10 <col:204, col:218> col:218 _Source 'const char *'
| |-ParmVarDecl 0x229ced41d88 <col:232, col:240> col:240 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x229ced42150 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x229ced42608 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:196:40, col:174> col:56 _strnset_s 'errno_t (char *, size_t, int, size_t) __attribute__((cdecl))':'errno_t (char *, size_t, int, size_t)'
| |-ParmVarDecl 0x229ced42298 <col:99, col:106> col:106 _Str 'char *'
| |-ParmVarDecl 0x229ced42310 <col:117, col:124> col:124 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x229ced42390 <col:143, col:147> col:147 _Val 'int'
| `-ParmVarDecl 0x229ced42408 <col:158, col:165> col:165 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x229ced42a88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:198:83 _strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x229ced427b8 <col:163, col:169> col:169 _Dest 'char *'
| |-ParmVarDecl 0x229ced42838 <col:181, col:186> col:186 _Val 'int'
| |-ParmVarDecl 0x229ced428b0 <col:197, col:205> col:205 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x229ced42b40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x229ced42e90 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:199:54> col:54 implicit strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x229ced42f30 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x229ced42f98 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x229ced43010 prev 0x229ced42e90 <col:38, col:116> col:54 strpbrk 'char *(const char *, const char *)'
| |-ParmVarDecl 0x229ced42c88 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x229ced42d20 <col:95, col:108> col:108 _Control 'const char *'
|-FunctionDecl 0x229ced43270 <line:200:54> col:54 implicit strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x229ced43310 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x229ced43378 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x229ced433f0 prev 0x229ced43270 <col:38, col:100> col:54 strrchr 'char *(const char *, int)'
| |-ParmVarDecl 0x229ced430f0 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x229ced43170 <col:93, col:97> col:97 _Ch 'int'
|-FunctionDecl 0x229ced435b0 <line:201:9, col:54> col:25 _strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| `-ParmVarDecl 0x229ced434d0 <col:43, col:50> col:50 _Str 'char *'
|-FunctionDecl 0x229ced43800 <line:202:40> col:40 implicit strspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x229ced438a0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x229ced43908 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x229ced43980 prev 0x229ced43800 <col:24, col:101> col:40 strspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x229ced43688 <col:54, col:67> col:67 _Str 'const char *'
| `-ParmVarDecl 0x229ced43708 <col:80, col:93> col:93 _Control 'const char *'
|-FunctionDecl 0x229ced43be0 <line:203:70> col:70 implicit strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x229ced43c80 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x229cedba040 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x229cedba0b8 prev 0x229ced43be0 <col:54, col:130> col:70 strstr 'char *(const char *, const char *)'
| |-ParmVarDecl 0x229ced43a60 <col:84, col:97> col:97 _Str 'const char *'
| `-ParmVarDecl 0x229ced43ae0 <col:110, col:123> col:123 _SubStr 'const char *'
|-FunctionDecl 0x229cedba3d8 <line:204:74> col:74 implicit strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x229cedba478 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x229cedba4e0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x229cedba558 prev 0x229cedba3d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:204:134> col:74 strtok 'char *(char *, const char *)'
| |-ParmVarDecl 0x229cedba258 <col:95, col:102> col:102 _Str 'char *'
| |-ParmVarDecl 0x229cedba2d8 <col:115, col:128> col:128 _Delim 'const char *'
| `-DeprecatedAttr 0x229cedba608 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x229cedba9e8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:206:36, col:162> col:52 strtok_s 'char *(char *, const char *, char **) __attribute__((cdecl))':'char *(char *, const char *, char **)'
| |-ParmVarDecl 0x229cedba750 <col:75, col:82> col:82 _Str 'char *'
| |-ParmVarDecl 0x229cedba7d0 <col:95, col:108> col:108 _Delim 'const char *'
| `-ParmVarDecl 0x229cedba850 <col:146, col:154> col:154 _Context 'char **'
|-FunctionDecl 0x229cedbac40 <line:208:28, col:109> col:44 _strupr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x229cedbaad0 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x229cedbab48 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x229cedbaec0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:210:79 _strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x229cedbade0 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x229cedbaf68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x229cedb9338 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:211:28, col:130> col:44 _strupr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x229cedb9130 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x229cedb91a8 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x229cedb9220 <col:113, col:123> col:123 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x229cedb9658 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:213:82 _strupr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x229cedb94e0 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x229cedb9558 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x229cedb9708 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x229cedb9b20 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:214:44> col:44 implicit strxfrm 'unsigned long long (char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x229cedb9bc0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x229cedb9c28 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x229cedb9c90 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x229cedb9d10 prev 0x229cedb9b20 <col:28, col:155> col:44 strxfrm 'unsigned long long (char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x229cedb9850 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x229cedb98d0 <col:115, col:128> col:128 _Src 'const char *'
| `-ParmVarDecl 0x229cedb9948 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x229cedbb188 <line:215:28, col:185> col:44 _strxfrm_l 'size_t (char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x229cedb9df8 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x229cedb9e78 <col:117, col:130> col:130 _Src 'const char *'
| |-ParmVarDecl 0x229cedb9ef0 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x229cedb9f68 <col:168, col:178> col:178 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x229cedbb430 <line:245:71> col:71 implicit strdup 'char *(const char *)' extern
| `-ParmVarDecl 0x229cedbb4d0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x229cedbb540 prev 0x229cedbb430 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:245:106> col:71 strdup 'char *(const char *)'
| |-ParmVarDecl 0x229cedbb350 <col:89, col:102> col:102 _Src 'const char *'
| `-DeprecatedAttr 0x229cedbb5e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strdup. See online help for details." ""
|-FunctionDecl 0x229cedbb930 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:252:129> col:69 strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x229cedbb7b0 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x229cedbb830 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x229cedbb9e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strcmpi. See online help for details." ""
|-FunctionDecl 0x229cedbbd28 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:253:129> col:69 stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x229cedbbba8 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x229cedbbc28 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x229cedbbdd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details." ""
|-FunctionDecl 0x229cedbe0b8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:254:84> col:56 strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x229cedbbfa0 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x229cedbe160 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strlwr. See online help for details." ""
|-FunctionDecl 0x229cedbe578 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:255:193> col:70 strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x229cedbe360 <col:106, col:119> col:119 _Str1 'const char *'
| |-ParmVarDecl 0x229cedbe3e0 <col:153, col:166> col:166 _Str 'const char *'
| |-ParmVarDecl 0x229cedbe458 <col:177, col:184> col:184 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x229cedbe630 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnicmp. See online help for details." ""
|-FunctionDecl 0x229cedbea10 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:256:143> col:57 strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x229cedbe7f8 <col:94, col:101> col:101 _Str 'char *'
| |-ParmVarDecl 0x229cedbe878 <col:112, col:116> col:116 _Val 'int'
| |-ParmVarDecl 0x229cedbe8f0 <col:127, col:134> col:134 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x229cedbeac8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnset. See online help for details." ""
|-FunctionDecl 0x229cedbed70 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:257:84> col:56 strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x229cedbec90 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x229cedbee18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strrev. See online help for details." ""
|-FunctionDecl 0x229cedbc160 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:258:99> col:56 strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x229cedbefe0 <col:73, col:80> col:80 _Str 'char *'
| |-ParmVarDecl 0x229cedbc060 <col:91, col:95> col:95 _Val 'int'
| `-DeprecatedAttr 0x229cedbc210 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strset. See online help for details." ""
|-FunctionDecl 0x229cedbc4b8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:259:84> col:56 strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x229cedbc3d8 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x229cedbc560 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strupr. See online help for details." ""
|-FunctionDecl 0x229cedbc7f0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:273:24, col:77> col:42 _wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| `-ParmVarDecl 0x229cedbc680 <col:57, col:73> col:73 _Str 'const wchar_t *'
|-FunctionDecl 0x229cedbcb80 <line:280:40, col:167> col:56 wcscat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x229cedbc8c0 <col:97, col:107> col:107 _Dst 'wchar_t *'
| |-ParmVarDecl 0x229cedbc938 <col:118, col:126> col:126 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x229cedbc9b0 <col:147, col:163> col:163 _Src 'const wchar_t *'
|-FunctionDecl 0x229cedbcf38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:284:82 wcscat 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x229cedbcd20 <col:164, col:173> col:173 _Dest 'wchar_t *'
| |-ParmVarDecl 0x229cedbcd98 <col:187, col:204> col:204 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x229cedbcfe8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x229cedbd388 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:288:41> col:41 implicit wcschr 'unsigned short *(const unsigned short *, unsigned short)' extern
| |-ParmVarDecl 0x229cedbd428 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x229cedbd490 <<invalid sloc>> <invalid sloc> 'unsigned short'
|-FunctionDecl 0x229cedbd508 prev 0x229cedbd388 <col:23, col:88> col:41 wcschr 'unsigned short *(const unsigned short *, unsigned short)'
| |-ParmVarDecl 0x229cedbd168 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x229cedbd1e0 <col:77, col:85> col:85 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x229cedbd800 <line:289:36> col:36 implicit wcscmp 'int (const unsigned short *, const unsigned short *)' extern
| |-ParmVarDecl 0x229cedbd8a0 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x229cedbd908 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x229cedbd980 prev 0x229cedbd800 <col:24, col:101> col:36 wcscmp 'int (const unsigned short *, const unsigned short *)'
| |-ParmVarDecl 0x229cedbd5e0 <col:50, col:66> col:66 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x229cedbd658 <col:80, col:96> col:96 _Str2 'const wchar_t *'
|-FunctionDecl 0x229cedbdc60 <line:291:40, col:164> col:56 wcscpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x229cedbda58 <col:94, col:104> col:104 _Dst 'wchar_t *'
| |-ParmVarDecl 0x229cedbdad0 <col:115, col:123> col:123 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x229cedbdb48 <col:144, col:160> col:160 _Src 'const wchar_t *'
|-FunctionDecl 0x229cedbdf70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:294:82 wcscpy 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x229cedbde00 <col:136, col:145> col:145 _Dest 'wchar_t *'
| |-ParmVarDecl 0x229cedbde78 <col:159, col:176> col:176 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x229cedbe020 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x229cedbf3a8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:295:24, col:107> col:39 wcscspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x229cedbf188 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x229cedbf200 <col:83, col:99> col:99 _Control 'const wchar_t *'
|-FunctionDecl 0x229cedbf5f0 <line:296:39> col:39 implicit wcslen 'unsigned long long (const unsigned short *)' extern
| `-ParmVarDecl 0x229cedbf690 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x229cedbf700 prev 0x229cedbf5f0 <col:24, col:73> col:39 wcslen 'unsigned long long (const unsigned short *)'
| `-ParmVarDecl 0x229cedbf480 <col:53, col:69> col:69 _Str 'const wchar_t *'
|-FunctionDecl 0x229cedbf9e8 <line:300:1, col:94> col:16 used wcsnlen 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
| |-ParmVarDecl 0x229cedbf7d0 <col:51, col:67> col:67 _Src 'const wchar_t *'
| `-ParmVarDecl 0x229cedbf848 <col:78, col:85> col:85 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x229cedbfc30 <line:302:16, line:308:1> line:305:18 wcsnlen_s 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' static inline
| |-ParmVarDecl 0x229cedbfac0 <col:55, col:71> col:71 used _Src 'const wchar_t *'
| |-ParmVarDecl 0x229cedbfb38 <col:82, col:89> col:89 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x229cedbffc8 <line:306:1, line:308:1>
|   `-ReturnStmt 0x229cedbffb8 <line:307:5, col:56>
|     `-ConditionalOperator 0x229cedbff88 <col:12, col:56> 'unsigned long long'
|       |-ParenExpr 0x229cedbfdf0 <col:12, col:25> 'int'
|       | `-BinaryOperator 0x229cedbfdd0 <col:13, line:36:27> 'int' '=='
|       |   |-ImplicitCastExpr 0x229cedbfda0 <line:307:13> 'const wchar_t *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x229cedbfcf8 <col:13> 'const wchar_t *' lvalue ParmVar 0x229cedbfac0 '_Src' 'const wchar_t *'
|       |   `-ImplicitCastExpr 0x229cedbfdb8 <line:36:17, col:27> 'const wchar_t *' <BitCast>
|       |     `-ParenExpr 0x229cedbfd80 <col:17, col:27> 'void *'
|       |       `-CStyleCastExpr 0x229cedbfd58 <col:18, col:26> 'void *' <NullToPointer>
|       |         `-IntegerLiteral 0x229cedbfd18 <col:26> 'int' 0
|       |-ImplicitCastExpr 0x229cedbff70 <line:307:29> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x229cedbfe10 <col:29> 'int' 0
|       `-CallExpr 0x229cedbff10 <col:33, col:56> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x229cedbfef8 <col:33> 'size_t (*)(const wchar_t *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x229cedbfe38 <col:33> 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' Function 0x229cedbf9e8 'wcsnlen' 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
|         |-ImplicitCastExpr 0x229cedbff40 <col:41> 'const wchar_t *' <LValueToRValue>
|         | `-DeclRefExpr 0x229cedbfe58 <col:41> 'const wchar_t *' lvalue ParmVar 0x229cedbfac0 '_Src' 'const wchar_t *'
|         `-ImplicitCastExpr 0x229cedbff58 <col:47> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x229cedbfe78 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x229cedbfb38 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x229cedc23b8 <line:311:40, col:212> col:56 wcsncat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x229cedbfff0 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x229cedc20c0 <col:119, col:127> col:127 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x229cedc2138 <col:168, col:184> col:184 _Src 'const wchar_t *'
| `-ParmVarDecl 0x229cedc21b0 <col:195, col:203> col:203 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x229cedc2820 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:316:86 wcsncat 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x229cedc2560 <col:167, col:176> col:176 _Dest 'wchar_t *'
| |-ParmVarDecl 0x229cedc25d8 <col:207, col:224> col:224 _Source 'const wchar_t *'
| |-ParmVarDecl 0x229cedc2650 <col:238, col:246> col:246 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x229cedc28d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x229cedc2ce8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:318:36> col:36 implicit wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)' extern
| |-ParmVarDecl 0x229cedc2d88 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| |-ParmVarDecl 0x229cedc2df0 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x229cedc2e58 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x229cedc2ed8 prev 0x229cedc2ce8 <col:24, col:165> col:36 wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)'
| |-ParmVarDecl 0x229cedc2a18 <col:71, col:87> col:87 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x229cedc2a90 <col:121, col:137> col:137 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x229cedc2b08 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x229cedc52a0 <line:320:40, col:209> col:56 wcsncpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x229cedc2fb8 <col:95, col:105> col:105 _Dst 'wchar_t *'
| |-ParmVarDecl 0x229cedc3030 <col:116, col:124> col:124 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x229cedc50f0 <col:165, col:181> col:181 _Src 'const wchar_t *'
| `-ParmVarDecl 0x229cedc5168 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x229cedc5650 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:323:86 wcsncpy 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x229cedc5448 <col:179, col:188> col:188 _Dest 'wchar_t *'
| |-ParmVarDecl 0x229cedc54c0 <col:219, col:236> col:236 _Source 'const wchar_t *'
| |-ParmVarDecl 0x229cedc5538 <col:250, col:258> col:258 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x229cedc5708 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x229cedc5a68 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:324:38, col:124> col:56 wcspbrk 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x229cedc5848 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x229cedc58c0 <col:100, col:116> col:116 _Control 'const wchar_t *'
|-FunctionDecl 0x229cedc5cb0 <line:325:38, col:109> col:56 wcsrchr 'wchar_t *(const wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(const wchar_t *, wchar_t)'
| |-ParmVarDecl 0x229cedc5b40 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x229cedc5bb8 <col:98, col:106> col:106 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x229cedc5ef8 <line:326:24, col:106> col:39 wcsspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x229cedc5d88 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x229cedc5e00 <col:82, col:98> col:98 _Control 'const wchar_t *'
|-FunctionDecl 0x229cedc4140 <line:329:23, col:107> col:41 wcsstr 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x229cedc5fd0 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x229cedc6048 <col:84, col:100> col:100 _SubStr 'const wchar_t *'
|-FunctionDecl 0x229cedc4448 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:330:142> col:76 wcstok 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x229cedc42d8 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x229cedc4350 <col:120, col:136> col:136 _Delim 'const wchar_t *'
| `-DeprecatedAttr 0x229cedc44f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x229cedc4960 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:332:36, col:173> col:54 wcstok_s 'wchar_t *(wchar_t *, const wchar_t *, wchar_t **) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x229cedc4638 <col:77, col:87> col:87 _Str 'wchar_t *'
| |-ParmVarDecl 0x229cedc46b0 <col:100, col:116> col:116 _Delim 'const wchar_t *'
| `-ParmVarDecl 0x229cedc4790 <col:154, col:165> col:165 _Context 'wchar_t **'
|-FunctionDecl 0x229cedc4c80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:334:105> col:79 _wcserror 'wchar_t *(int) __attribute__((cdecl))':'wchar_t *(int)'
| |-ParmVarDecl 0x229cedc4b08 <col:94, col:98> col:98 _ErrNum 'int'
| `-DeprecatedAttr 0x229cedc4d28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x229cedc7180 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:335:28, col:147> col:44 _wcserror_s 'errno_t (wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, int)'
| |-ParmVarDecl 0x229cedc4e68 <col:89, col:99> col:99 _Buf 'wchar_t *'
| |-ParmVarDecl 0x229cedc4ee0 <col:110, col:117> col:117 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x229cedc4f60 <col:136, col:140> col:140 _ErrNum 'int'
|-FunctionDecl 0x229cedc7430 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:337:122> col:80 __wcserror 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x229cedc7358 <col:102, col:118> col:118 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x229cedc74d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x229cedc78a0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:338:28, col:165> col:44 __wcserror_s 'errno_t (wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x229cedc7618 <col:90, col:100> col:100 _Buffer 'wchar_t *'
| |-ParmVarDecl 0x229cedc7690 <col:114, col:121> col:121 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x229cedc7708 <col:142, col:158> col:158 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x229cedc7af8 <line:341:24, col:103> col:36 _wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x229cedc7980 <col:52, col:68> col:68 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x229cedc79f8 <col:82, col:98> col:98 _Str2 'const wchar_t *'
|-FunctionDecl 0x229cedc7e98 <line:342:24, col:133> col:36 _wcsicmp_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x229cedc7bd0 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x229cedc7c48 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x229cedc7cc0 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x229cedc0128 <line:343:24, col:167> col:36 _wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x229cedc7f78 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x229cedc7ff0 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x229cedc8068 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x229cedc0580 <line:344:24, col:197> col:36 _wcsnicmp_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x229cedc0208 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x229cedc0280 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x229cedc02f8 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x229cedc0370 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x229cedc09d8 <line:345:40, col:181> col:56 _wcsnset_s 'errno_t (wchar_t *, size_t, wchar_t, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t, size_t)'
| |-ParmVarDecl 0x229cedc0668 <col:99, col:109> col:109 _Dst 'wchar_t *'
| |-ParmVarDecl 0x229cedc06e0 <col:120, col:127> col:127 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x229cedc0758 <col:146, col:154> col:154 _Val 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x229cedc07d0 <col:165, col:172> col:172 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x229cedc0e40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:347:86 _wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x229cedc0b80 <col:172, col:181> col:181 _Str 'wchar_t *'
| |-ParmVarDecl 0x229cedc0bf8 <col:187, col:196> col:196 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x229cedc0c70 <col:207, col:215> col:215 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x229cedc0ef8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x229cedc6210 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:348:9, col:59> col:27 _wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| `-ParmVarDecl 0x229cedc1038 <col:45, col:55> col:55 _Str 'wchar_t *'
|-FunctionDecl 0x229cedc65a0 <line:349:40, col:159> col:56 _wcsset_s 'errno_t (wchar_t *, size_t, wchar_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t)'
| |-ParmVarDecl 0x229cedc62e0 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x229cedc6358 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x229cedc63d0 <col:145, col:153> col:153 _Value 'wchar_t':'unsigned short'
|-FunctionDecl 0x229cedc6958 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:351:85 _wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x229cedc6740 <col:150, col:159> col:159 _Str 'wchar_t *'
| |-ParmVarDecl 0x229cedc67b8 <col:165, col:174> col:174 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x229cedc6a08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x229cedc6d68 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:353:28, col:126> col:44 _wcslwr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x229cedc6b48 <col:86, col:96> col:96 _Str 'wchar_t *'
| `-ParmVarDecl 0x229cedc6bc0 <col:107, col:114> col:114 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x229cedc6fd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:355:82 _wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x229cedc6f00 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x229cedc7080 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x229cedc84e0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:356:28, col:156> col:44 _wcslwr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x229cedc8218 <col:88, col:98> col:98 _Str 'wchar_t *'
| |-ParmVarDecl 0x229cedc8290 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x229cedc8308 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x229cedc8898 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:358:85 _wcslwr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x229cedc8680 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x229cedc86f8 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x229cedc8948 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x229cedc8bf8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:359:28, col:112> col:44 _wcsupr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x229cedc8a88 <col:79, col:89> col:89 _Str 'wchar_t *'
| `-ParmVarDecl 0x229cedc8b00 <col:100, col:107> col:107 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x229cedc8e68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:361:82 _wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x229cedc8d90 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x229cedc8f10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x229cedc1240 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:362:28, col:142> col:44 _wcsupr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x229cedc9050 <col:81, col:91> col:91 _Str 'wchar_t *'
| |-ParmVarDecl 0x229cedc10b0 <col:102, col:109> col:109 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x229cedc1128 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x229cedc1550 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:364:85 _wcsupr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x229cedc13e0 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x229cedc1458 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x229cedc1600 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x229cedc1a00 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:365:28, col:159> col:43 wcsxfrm 'size_t (wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x229cedc1740 <col:93, col:103> col:103 _Dst 'wchar_t *'
| |-ParmVarDecl 0x229cedc17b8 <col:116, col:132> col:132 _Src 'const wchar_t *'
| `-ParmVarDecl 0x229cedc1830 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x229cedc1e48 <line:366:28, col:189> col:43 _wcsxfrm_l 'size_t (wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x229cedc1ae0 <col:96, col:106> col:106 _Dst 'wchar_t *'
| |-ParmVarDecl 0x229cedc1b58 <col:119, col:134> col:134 _Src 'const wchar_t *'
| |-ParmVarDecl 0x229cedc1bd0 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x229cedc1c48 <col:172, col:182> col:182 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x229cedcb150 <line:367:24, col:102> col:36 wcscoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x229cedc1f30 <col:51, col:67> col:67 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x229cedc1fa8 <col:81, col:97> col:97 _Str2 'const wchar_t *'
|-FunctionDecl 0x229cedcb438 <line:368:24, col:133> col:36 _wcscoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x229cedcb228 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x229cedcb2a0 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x229cedcb318 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x229cedcb690 <line:369:24, col:104> col:36 _wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x229cedcb518 <col:53, col:69> col:69 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x229cedcb590 <col:83, col:99> col:99 _Str2 'const wchar_t *'
|-FunctionDecl 0x229cedcb978 <line:370:24, col:133> col:36 _wcsicoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x229cedcb768 <col:55, col:71> col:71 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x229cedcb7e0 <col:85, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x229cedcb858 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x229cedcbc68 <line:371:24, col:167> col:36 _wcsncoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x229cedcba58 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x229cedcbad0 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x229cedcbb48 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x229cedcbff0 <line:372:24, col:197> col:36 _wcsncoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x229cedcbd48 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x229cedcbdc0 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x229cedcbe38 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x229cedcbeb0 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x229cedc92c8 <line:373:24, col:168> col:36 _wcsnicoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x229cedcc0d8 <col:74, col:90> col:90 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x229cedc9130 <col:124, col:140> col:140 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x229cedc91a8 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x229cedc9650 <line:374:24, col:198> col:36 _wcsnicoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x229cedc93a8 <col:76, col:92> col:92 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x229cedc9420 <col:126, col:142> col:142 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x229cedc9498 <col:154, col:161> col:161 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x229cedc9510 <col:181, col:191> col:191 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x229cedc98b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:403:108> col:74 wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x229cedc97d8 <col:88, col:104> col:104 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x229cedc9958 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsdup. See online help for details." ""
|-FunctionDecl 0x229cedc9c90 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:413:135> col:69 wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x229cedc9b18 <col:84, col:100> col:100 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x229cedc9b90 <col:114, col:130> col:130 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x229cedc9d40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicmp. See online help for details." ""
|-FunctionDecl 0x229cedcc160 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:414:200> col:70 wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x229cedc9f00 <col:106, col:122> col:122 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x229cedc9f78 <col:156, col:172> col:172 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x229cedc9ff0 <col:184, col:191> col:191 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x229cedcc218 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnicmp. See online help for details." ""
|-FunctionDecl 0x229cedcc5e0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:415:153> col:60 wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x229cedcc3d8 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x229cedcc450 <col:118, col:126> col:126 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x229cedcc4c8 <col:137, col:144> col:144 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x229cedcc698 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnset. See online help for details." ""
|-FunctionDecl 0x229cedcc930 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:416:90> col:59 wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x229cedcc858 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x229cedcc9d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsrev. See online help for details." ""
|-FunctionDecl 0x229cedccd08 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:417:104> col:59 wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x229cedccb98 <col:76, col:86> col:86 _Str 'wchar_t *'
| |-ParmVarDecl 0x229cedccc10 <col:92, col:100> col:100 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x229cedccdb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsset. See online help for details." ""
|-FunctionDecl 0x229cedcd050 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:418:90> col:59 wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x229cedccf78 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x229cedcd0f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcslwr. See online help for details." ""
|-FunctionDecl 0x229cedcd3c0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:419:90> col:59 wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x229cedcd2e8 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x229cedcd468 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsupr. See online help for details." ""
|-FunctionDecl 0x229cedcd7a0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:420:137> col:70 wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x229cedcd628 <col:86, col:102> col:102 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x229cedcd6a0 <col:116, col:132> col:132 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x229cedcd850 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicoll. See online help for details." ""
|-EnumDecl 0x229cedcd960 <.//openssl//file_jk/before\test/ssl_test_ctx.h:16:9, line:23:1> line:16:9
| |-EnumConstantDecl 0x229cedcda80 <line:17:5, col:24> col:5 referenced SSL_TEST_SUCCESS 'int'
| | `-ConstantExpr 0x229cedcda68 <col:24> 'int'
| |   `-IntegerLiteral 0x229cedcda40 <col:24> 'int' 0
| |-EnumConstantDecl 0x229cedcdad8 <line:18:5> col:5 referenced SSL_TEST_SERVER_FAIL 'int'
| |-EnumConstantDecl 0x229cedcdb30 <line:19:5> col:5 referenced SSL_TEST_CLIENT_FAIL 'int'
| |-EnumConstantDecl 0x229cedcdb88 <line:20:5> col:5 referenced SSL_TEST_INTERNAL_ERROR 'int'
| `-EnumConstantDecl 0x229cedcdbe0 <line:22:5> col:5 SSL_TEST_FIRST_HANDSHAKE_FAILED 'int'
|-TypedefDecl 0x229cedcdc98 <line:16:1, line:23:3> col:3 referenced ssl_test_result_t 'enum ssl_test_result_t':'ssl_test_result_t'
| `-ElaboratedType 0x229cedcdc40 'enum ssl_test_result_t' sugar
|   `-EnumType 0x229cedcda20 'ssl_test_result_t'
|     `-Enum 0x229cedcd960 ''
|-EnumDecl 0x229cedcdd08 <line:25:9, line:29:1> line:25:9
| |-EnumConstantDecl 0x229cedcde20 <line:26:5, col:28> col:5 referenced SSL_TEST_VERIFY_NONE 'int'
| | `-ConstantExpr 0x229cedcde08 <col:28> 'int'
| |   `-IntegerLiteral 0x229cedcdde0 <col:28> 'int' 0
| |-EnumConstantDecl 0x229cedcde78 <line:27:5> col:5 referenced SSL_TEST_VERIFY_ACCEPT_ALL 'int'
| `-EnumConstantDecl 0x229cedcded0 <line:28:5> col:5 referenced SSL_TEST_VERIFY_REJECT_ALL 'int'
|-TypedefDecl 0x229cedcdf88 <line:25:1, line:29:3> col:3 referenced ssl_verify_callback_t 'enum ssl_verify_callback_t':'ssl_verify_callback_t'
| `-ElaboratedType 0x229cedcdf30 'enum ssl_verify_callback_t' sugar
|   `-EnumType 0x229cedcddc0 'ssl_verify_callback_t'
|     `-Enum 0x229cedcdd08 ''
|-EnumDecl 0x229cedcdff8 <line:31:9, line:36:1> line:31:9
| |-EnumConstantDecl 0x229cedce110 <line:32:5, col:32> col:5 referenced SSL_TEST_SERVERNAME_NONE 'int'
| | `-ConstantExpr 0x229cedce0f8 <col:32> 'int'
| |   `-IntegerLiteral 0x229cedce0d0 <col:32> 'int' 0
| |-EnumConstantDecl 0x229cedd11b0 <line:33:5> col:5 referenced SSL_TEST_SERVERNAME_SERVER1 'int'
| |-EnumConstantDecl 0x229cedd1208 <line:34:5> col:5 referenced SSL_TEST_SERVERNAME_SERVER2 'int'
| `-EnumConstantDecl 0x229cedd1260 <line:35:5> col:5 referenced SSL_TEST_SERVERNAME_INVALID 'int'
|-TypedefDecl 0x229cedd1318 <line:31:1, line:36:3> col:3 referenced ssl_servername_t 'enum ssl_servername_t':'ssl_servername_t'
| `-ElaboratedType 0x229cedd12c0 'enum ssl_servername_t' sugar
|   `-EnumType 0x229cedce0b0 'ssl_servername_t'
|     `-Enum 0x229cedcdff8 ''
|-EnumDecl 0x229cedd1388 <line:38:9, line:42:1> line:38:9
| |-EnumConstantDecl 0x229cedd14a0 <line:39:5, col:35> col:5 referenced SSL_TEST_SERVERNAME_CB_NONE 'int'
| | `-ConstantExpr 0x229cedd1488 <col:35> 'int'
| |   `-IntegerLiteral 0x229cedd1460 <col:35> 'int' 0
| |-EnumConstantDecl 0x229cedd14f8 <line:40:5> col:5 referenced SSL_TEST_SERVERNAME_IGNORE_MISMATCH 'int'
| `-EnumConstantDecl 0x229cedd1550 <line:41:5> col:5 referenced SSL_TEST_SERVERNAME_REJECT_MISMATCH 'int'
|-TypedefDecl 0x229cedd1608 <line:38:1, line:42:3> col:3 referenced ssl_servername_callback_t 'enum ssl_servername_callback_t':'ssl_servername_callback_t'
| `-ElaboratedType 0x229cedd15b0 'enum ssl_servername_callback_t' sugar
|   `-EnumType 0x229cedd1440 'ssl_servername_callback_t'
|     `-Enum 0x229cedd1388 ''
|-EnumDecl 0x229cedd1678 <line:44:9, line:49:1> line:44:9
| |-EnumConstantDecl 0x229cedd1790 <line:45:5, col:38> col:5 referenced SSL_TEST_SESSION_TICKET_IGNORE 'int'
| | `-ConstantExpr 0x229cedd1778 <col:38> 'int'
| |   `-IntegerLiteral 0x229cedd1750 <col:38> 'int' 0
| |-EnumConstantDecl 0x229cedd17e8 <line:46:5> col:5 referenced SSL_TEST_SESSION_TICKET_YES 'int'
| |-EnumConstantDecl 0x229cedd1840 <line:47:5> col:5 referenced SSL_TEST_SESSION_TICKET_NO 'int'
| `-EnumConstantDecl 0x229cedd1898 <line:48:5> col:5 SSL_TEST_SESSION_TICKET_BROKEN 'int'
|-TypedefDecl 0x229cedd1948 <line:44:1, line:49:3> col:3 referenced ssl_session_ticket_t 'enum ssl_session_ticket_t':'ssl_session_ticket_t'
| `-ElaboratedType 0x229cedd18f0 'enum ssl_session_ticket_t' sugar
|   `-EnumType 0x229cedd1730 'ssl_session_ticket_t'
|     `-Enum 0x229cedd1678 ''
|-EnumDecl 0x229cedd19b8 <line:51:9, line:54:1> line:51:9
| |-EnumConstantDecl 0x229cedd1ad0 <line:52:5, col:27> col:5 referenced SSL_TEST_METHOD_TLS 'int'
| | `-ConstantExpr 0x229cedd1ab8 <col:27> 'int'
| |   `-IntegerLiteral 0x229cedd1a90 <col:27> 'int' 0
| `-EnumConstantDecl 0x229cedd1b28 <line:53:5> col:5 referenced SSL_TEST_METHOD_DTLS 'int'
|-TypedefDecl 0x229cedd1bd8 <line:51:1, line:54:3> col:3 referenced ssl_test_method_t 'enum ssl_test_method_t':'ssl_test_method_t'
| `-ElaboratedType 0x229cedd1b80 'enum ssl_test_method_t' sugar
|   `-EnumType 0x229cedd1a70 'ssl_test_method_t'
|     `-Enum 0x229cedd19b8 ''
|-EnumDecl 0x229cedd1c48 <line:56:9, line:61:1> line:56:9
| |-EnumConstantDecl 0x229cedd1d60 <line:57:5, col:33> col:5 referenced SSL_TEST_HANDSHAKE_SIMPLE 'int'
| | `-ConstantExpr 0x229cedd1d48 <col:33> 'int'
| |   `-IntegerLiteral 0x229cedd1d20 <col:33> 'int' 0
| |-EnumConstantDecl 0x229cedd1db8 <line:58:5> col:5 referenced SSL_TEST_HANDSHAKE_RESUME 'int'
| |-EnumConstantDecl 0x229cedd1e10 <line:59:5> col:5 referenced SSL_TEST_HANDSHAKE_RENEG_SERVER 'int'
| `-EnumConstantDecl 0x229cedd1e68 <line:60:5> col:5 referenced SSL_TEST_HANDSHAKE_RENEG_CLIENT 'int'
|-TypedefDecl 0x229cedd1f18 <line:56:1, line:61:3> col:3 referenced ssl_handshake_mode_t 'enum ssl_handshake_mode_t':'ssl_handshake_mode_t'
| `-ElaboratedType 0x229cedd1ec0 'enum ssl_handshake_mode_t' sugar
|   `-EnumType 0x229cedd1d00 'ssl_handshake_mode_t'
|     `-Enum 0x229cedd1c48 ''
|-EnumDecl 0x229cedd1f88 <line:63:9, line:67:1> line:63:9
| |-EnumConstantDecl 0x229cedd20a0 <line:64:5, col:35> col:5 referenced SSL_TEST_CT_VALIDATION_NONE 'int'
| | `-ConstantExpr 0x229cedd2088 <col:35> 'int'
| |   `-IntegerLiteral 0x229cedd2060 <col:35> 'int' 0
| |-EnumConstantDecl 0x229cedd20f8 <line:65:5> col:5 referenced SSL_TEST_CT_VALIDATION_PERMISSIVE 'int'
| `-EnumConstantDecl 0x229cedd2150 <line:66:5> col:5 referenced SSL_TEST_CT_VALIDATION_STRICT 'int'
|-TypedefDecl 0x229cedd6258 <line:63:1, line:67:3> col:3 referenced ssl_ct_validation_t 'enum ssl_ct_validation_t':'ssl_ct_validation_t'
| `-ElaboratedType 0x229cedd6200 'enum ssl_ct_validation_t' sugar
|   `-EnumType 0x229cedd2040 'ssl_ct_validation_t'
|     `-Enum 0x229cedd1f88 ''
|-EnumDecl 0x229cedd62c8 <line:69:9, line:73:1> line:69:9
| |-EnumConstantDecl 0x229cedd63e0 <line:70:5, col:33> col:5 referenced SSL_TEST_CERT_STATUS_NONE 'int'
| | `-ConstantExpr 0x229cedd63c8 <col:33> 'int'
| |   `-IntegerLiteral 0x229cedd63a0 <col:33> 'int' 0
| |-EnumConstantDecl 0x229cedd6438 <line:71:5> col:5 referenced SSL_TEST_CERT_STATUS_GOOD_RESPONSE 'int'
| `-EnumConstantDecl 0x229cedd6490 <line:72:5> col:5 referenced SSL_TEST_CERT_STATUS_BAD_RESPONSE 'int'
|-TypedefDecl 0x229cedd6548 <line:69:1, line:73:3> col:3 referenced ssl_cert_status_t 'enum ssl_cert_status_t':'ssl_cert_status_t'
| `-ElaboratedType 0x229cedd64f0 'enum ssl_cert_status_t' sugar
|   `-EnumType 0x229cedd6380 'ssl_cert_status_t'
|     `-Enum 0x229cedd62c8 ''
|-RecordDecl 0x229cedd65b8 <line:78:9, line:89:1> line:78:9 struct definition
| |-FieldDecl 0x229cedd66a0 <line:80:5, col:27> col:27 referenced verify_callback 'ssl_verify_callback_t':'ssl_verify_callback_t'
| |-FieldDecl 0x229cedd6730 <line:82:5, col:22> col:22 referenced servername 'ssl_servername_t':'ssl_servername_t'
| |-FieldDecl 0x229cedd67a0 <line:84:5, col:11> col:11 referenced npn_protocols 'char *'
| |-FieldDecl 0x229cedd6810 <line:85:5, col:11> col:11 referenced alpn_protocols 'char *'
| |-FieldDecl 0x229cedd68a0 <line:86:5, col:25> col:25 referenced ct_validation 'ssl_ct_validation_t':'ssl_ct_validation_t'
| `-FieldDecl 0x229cedd6910 <line:88:5, col:11> col:11 referenced reneg_ciphers 'char *'
|-TypedefDecl 0x229cedd69c8 <line:78:1, line:89:3> col:3 referenced SSL_TEST_CLIENT_CONF 'struct SSL_TEST_CLIENT_CONF':'SSL_TEST_CLIENT_CONF'
| `-ElaboratedType 0x229cedd6970 'struct SSL_TEST_CLIENT_CONF' sugar
|   `-RecordType 0x229cedd6650 'SSL_TEST_CLIENT_CONF'
|     `-Record 0x229cedd65b8 ''
|-RecordDecl 0x229cedd6a38 <line:91:9, line:101:1> line:91:9 struct definition
| |-FieldDecl 0x229cedd6b20 <line:93:5, col:31> col:31 referenced servername_callback 'ssl_servername_callback_t':'ssl_servername_callback_t'
| |-FieldDecl 0x229cedd6b90 <line:95:5, col:11> col:11 referenced npn_protocols 'char *'
| |-FieldDecl 0x229cedd6c00 <line:96:5, col:11> col:11 referenced alpn_protocols 'char *'
| |-FieldDecl 0x229cedd6c70 <line:98:5, col:9> col:9 referenced broken_session_ticket 'int'
| `-FieldDecl 0x229cedd6d00 <line:100:5, col:23> col:23 referenced cert_status 'ssl_cert_status_t':'ssl_cert_status_t'
|-TypedefDecl 0x229cedd6db8 <line:91:1, line:101:3> col:3 referenced SSL_TEST_SERVER_CONF 'struct SSL_TEST_SERVER_CONF':'SSL_TEST_SERVER_CONF'
| `-ElaboratedType 0x229cedd6d60 'struct SSL_TEST_SERVER_CONF' sugar
|   `-RecordType 0x229cedd6ad0 'SSL_TEST_SERVER_CONF'
|     `-Record 0x229cedd6a38 ''
|-RecordDecl 0x229cedd6e28 <line:103:9, line:107:1> line:103:9 struct definition
| |-FieldDecl 0x229cedd6f10 <line:104:5, col:26> col:26 referenced client 'SSL_TEST_CLIENT_CONF':'SSL_TEST_CLIENT_CONF'
| |-FieldDecl 0x229cedd6fa0 <line:105:5, col:26> col:26 referenced server 'SSL_TEST_SERVER_CONF':'SSL_TEST_SERVER_CONF'
| `-FieldDecl 0x229cedd7008 <line:106:5, col:26> col:26 referenced server2 'SSL_TEST_SERVER_CONF':'SSL_TEST_SERVER_CONF'
|-TypedefDecl 0x229cedd7138 <line:103:1, line:107:3> col:3 referenced SSL_TEST_EXTRA_CONF 'struct SSL_TEST_EXTRA_CONF':'SSL_TEST_EXTRA_CONF'
| `-ElaboratedType 0x229cedd70e0 'struct SSL_TEST_EXTRA_CONF' sugar
|   `-RecordType 0x229cedd6ec0 'SSL_TEST_EXTRA_CONF'
|     `-Record 0x229cedd6e28 ''
|-RecordDecl 0x229cedd51f0 <line:109:9, line:166:1> line:109:9 struct definition
| |-FieldDecl 0x229cedd52e0 <line:114:5, col:23> col:23 referenced method 'ssl_test_method_t':'ssl_test_method_t'
| |-FieldDecl 0x229cedd5370 <line:116:5, col:26> col:26 referenced handshake_mode 'ssl_handshake_mode_t':'ssl_handshake_mode_t'
| |-FieldDecl 0x229cedd53e0 <line:121:5, col:9> col:9 referenced app_data_size 'int'
| |-FieldDecl 0x229cedd5450 <line:123:5, col:9> col:9 referenced max_fragment_size 'int'
| |-FieldDecl 0x229cedd54e0 <line:129:5, col:25> col:25 referenced extra 'SSL_TEST_EXTRA_CONF':'SSL_TEST_EXTRA_CONF'
| |-FieldDecl 0x229cedd5548 <line:131:5, col:25> col:25 referenced resume_extra 'SSL_TEST_EXTRA_CONF':'SSL_TEST_EXTRA_CONF'
| |-FieldDecl 0x229cedd55d0 <line:137:5, col:23> col:23 referenced expected_result 'ssl_test_result_t':'ssl_test_result_t'
| |-FieldDecl 0x229cedd5640 <line:141:5, col:9> col:9 referenced expected_client_alert 'int'
| |-FieldDecl 0x229cedd56b0 <line:143:5, col:9> col:9 referenced expected_server_alert 'int'
| |-FieldDecl 0x229cedd5720 <line:146:5, col:9> col:9 referenced expected_protocol 'int'
| |-FieldDecl 0x229cedd5788 <line:157:5, col:22> col:22 referenced expected_servername 'ssl_servername_t':'ssl_servername_t'
| |-FieldDecl 0x229cedd5810 <line:158:5, col:26> col:26 referenced session_ticket_expected 'ssl_session_ticket_t':'ssl_session_ticket_t'
| |-FieldDecl 0x229cedd5880 <line:160:5, col:11> col:11 referenced expected_npn_protocol 'char *'
| |-FieldDecl 0x229cedd58f0 <line:161:5, col:11> col:11 referenced expected_alpn_protocol 'char *'
| |-FieldDecl 0x229cedd5960 <line:163:5, col:9> col:9 referenced resumption_expected 'int'
| `-FieldDecl 0x229cedd59d0 <line:165:5, col:9> col:9 referenced expected_tmp_key_type 'int'
|-TypedefDecl 0x229cedd5a88 <line:109:1, line:166:3> col:3 referenced SSL_TEST_CTX 'struct SSL_TEST_CTX':'SSL_TEST_CTX'
| `-ElaboratedType 0x229cedd5a30 'struct SSL_TEST_CTX' sugar
|   `-RecordType 0x229cedd5290 'SSL_TEST_CTX'
|     `-Record 0x229cedd51f0 ''
|-FunctionDecl 0x229cedd5c20 <line:168:1, col:58> col:13 ssl_test_result_name 'const char *(ssl_test_result_t)'
| `-ParmVarDecl 0x229cedd5b08 <col:34, col:52> col:52 result 'ssl_test_result_t':'ssl_test_result_t'
|-FunctionDecl 0x229cedd5de0 <line:169:1, col:37> col:13 ssl_alert_name 'const char *(int)'
| `-ParmVarDecl 0x229cedd5cf8 <col:28, col:32> col:32 alert 'int'
|-FunctionDecl 0x229cedd5f68 <line:170:1, col:43> col:13 ssl_protocol_name 'const char *(int)'
| `-ParmVarDecl 0x229cedd5eb8 <col:31, col:35> col:35 protocol 'int'
|-FunctionDecl 0x229cedd6150 <line:171:1, col:75> col:13 ssl_verify_callback_name 'const char *(ssl_verify_callback_t)'
| `-ParmVarDecl 0x229cedd6038 <col:38, col:60> col:60 verify_callback 'ssl_verify_callback_t':'ssl_verify_callback_t'
|-FunctionDecl 0x229cedd3310 <line:172:1, col:56> col:13 ssl_servername_name 'const char *(ssl_servername_t)'
| `-ParmVarDecl 0x229cedd3200 <col:33, col:50> col:50 server 'ssl_servername_t':'ssl_servername_t'
|-FunctionDecl 0x229cedd34f0 <line:173:1, line:174:61> line:173:13 ssl_servername_callback_name 'const char *(ssl_servername_callback_t)'
| `-ParmVarDecl 0x229cedd33e0 <col:42, line:174:42> col:42 servername_callback 'ssl_servername_callback_t':'ssl_servername_callback_t'
|-FunctionDecl 0x229cedd36d0 <line:175:1, col:64> col:13 ssl_session_ticket_name 'const char *(ssl_session_ticket_t)'
| `-ParmVarDecl 0x229cedd35c0 <col:37, col:58> col:58 server 'ssl_session_ticket_t':'ssl_session_ticket_t'
|-FunctionDecl 0x229cedd38b0 <line:176:1, col:58> col:13 ssl_test_method_name 'const char *(ssl_test_method_t)'
| `-ParmVarDecl 0x229cedd37a0 <col:34, col:52> col:52 method 'ssl_test_method_t':'ssl_test_method_t'
|-FunctionDecl 0x229cedd3a90 <line:177:1, col:62> col:13 ssl_handshake_mode_name 'const char *(ssl_handshake_mode_t)'
| `-ParmVarDecl 0x229cedd3980 <col:37, col:58> col:58 mode 'ssl_handshake_mode_t':'ssl_handshake_mode_t'
|-FunctionDecl 0x229cedd3c70 <line:178:1, col:60> col:13 ssl_ct_validation_name 'const char *(ssl_ct_validation_t)'
| `-ParmVarDecl 0x229cedd3b60 <col:36, col:56> col:56 mode 'ssl_ct_validation_t':'ssl_ct_validation_t'
|-FunctionDecl 0x229cedd3e50 <line:179:1, col:62> col:13 ssl_certstatus_name 'const char *(ssl_cert_status_t)'
| `-ParmVarDecl 0x229cedd3d40 <col:33, col:51> col:51 cert_status 'ssl_cert_status_t':'ssl_cert_status_t'
|-FunctionDecl 0x229cedd21c0 <line:185:1, col:77> col:15 invalid SSL_TEST_CTX_create 'SSL_TEST_CTX *(const int *, const char *)'
| |-ParmVarDecl 0x229cedd3f48 <col:35, col:47> col:47 invalid conf 'const int *'
| `-ParmVarDecl 0x229cedd3fc8 <col:53, col:65> col:65 test_section 'const char *'
|-FunctionDecl 0x229cedd2368 <line:187:1, col:36> col:15 used SSL_TEST_CTX_new 'SSL_TEST_CTX *(void)'
|-FunctionDecl 0x229cedd2538 <line:189:1, col:41> col:6 used SSL_TEST_CTX_free 'void (SSL_TEST_CTX *)'
| `-ParmVarDecl 0x229cedd2430 <col:24, col:38> col:38 ctx 'SSL_TEST_CTX *'
|-FunctionDecl 0x229cedd28b8 <.//openssl//file_jk/before\test/testutil.h:85:1, col:60> col:6 add_test 'void (const char *, int (*)())'
| |-ParmVarDecl 0x229cedd2610 <col:15, col:27> col:27 test_case_name 'const char *'
| `-ParmVarDecl 0x229cedd2770 <col:43, col:59> col:49 test_fn 'int (*)()'
|-FunctionDecl 0x229cedd2d88 <line:86:1, col:80> col:6 add_all_tests 'void (const char *, int (*)(int), int)'
| |-ParmVarDecl 0x229cedd2998 <col:20, col:32> col:32 test_case_name 'const char *'
| |-ParmVarDecl 0x229cedd2b98 <col:48, col:70> col:54 test_fn 'int (*)(int)'
| `-ParmVarDecl 0x229cedd2c18 <col:73, col:77> col:77 num 'int'
|-FunctionDecl 0x229cedd2f50 <line:87:1, col:41> col:5 run_tests 'int (const char *)'
| `-ParmVarDecl 0x229cedd2e70 <col:15, col:27> col:27 test_prog_name 'const char *'
|-FunctionDecl 0x229ced72bf0 <line:97:1, col:67> col:5 strings_equal 'int (const char *, const char *, const char *)'
| |-ParmVarDecl 0x229cedd3028 <col:19, col:31> col:31 desc 'const char *'
| |-ParmVarDecl 0x229cedd30a8 <col:37, col:49> col:49 s1 'const char *'
| `-ParmVarDecl 0x229cedd3128 <col:53, col:65> col:65 s2 'const char *'
|-VarDecl 0x229ced72cd8 <.//openssl//file_jk/before\test\ssl_test_ctx.c:19:1, col:42> col:18 used default_app_data_size 'const int' static cinit
| `-IntegerLiteral 0x229ced72d40 <col:42> 'int' 256
|-VarDecl 0x229ced72d98 <line:21:1, col:46> col:18 used default_max_fragment_size 'const int' static cinit
| `-IntegerLiteral 0x229ced72e00 <col:46> 'int' 512
|-FunctionDecl 0x229ced72fe0 <line:23:1, line:34:1> line:23:12 used parse_boolean 'int (const char *, int *)' static
| |-ParmVarDecl 0x229ced72e58 <col:26, col:38> col:38 used value 'const char *'
| |-ParmVarDecl 0x229ced72ed8 <col:45, col:50> col:50 used result 'int *'
| `-CompoundStmt 0x229ced73808 <line:24:1, line:34:1>
|   |-IfStmt 0x229ced737a8 <line:25:5, line:32:5> has_else
|   | |-BinaryOperator 0x229ced733f0 <line:25:9, col:37> 'int' '=='
|   | | |-CallExpr 0x229ced73350 <col:9, col:32> 'int'
|   | | | |-ImplicitCastExpr 0x229ced73338 <col:9> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x229ced73228 <col:9> 'int (const char *, const char *)' Function 0x229ced730a8 'strcasecmp' 'int (const char *, const char *)'
|   | | | |-ImplicitCastExpr 0x229ced73380 <col:20> 'const char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x229ced73260 <col:20> 'const char *' lvalue ParmVar 0x229ced72e58 'value' 'const char *'
|   | | | `-ImplicitCastExpr 0x229ced733b0 <col:27> 'const char *' <NoOp>
|   | | |   `-ImplicitCastExpr 0x229ced73398 <col:27> 'char *' <ArrayToPointerDecay>
|   | | |     `-StringLiteral 0x229ced732b8 <col:27> 'char [4]' lvalue "Yes"
|   | | `-IntegerLiteral 0x229ced733c8 <col:37> 'int' 0
|   | |-CompoundStmt 0x229ced734e0 <col:40, line:28:5>
|   | | |-BinaryOperator 0x229ced73488 <line:26:9, col:19> 'int' '='
|   | | | |-UnaryOperator 0x229ced73448 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
|   | | | | `-ImplicitCastExpr 0x229ced73430 <col:10> 'int *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x229ced73410 <col:10> 'int *' lvalue ParmVar 0x229ced72ed8 'result' 'int *'
|   | | | `-IntegerLiteral 0x229ced73460 <col:19> 'int' 1
|   | | `-ReturnStmt 0x229ced734d0 <line:27:9, col:16>
|   | |   `-IntegerLiteral 0x229ced734a8 <col:16> 'int' 1
|   | `-IfStmt 0x229ced73790 <line:29:10, line:32:5>
|   |   |-BinaryOperator 0x229ced73680 <line:29:14, col:41> 'int' '=='
|   |   | |-CallExpr 0x229ced735e0 <col:14, col:36> 'int'
|   |   | | |-ImplicitCastExpr 0x229ced735c8 <col:14> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   | | | `-DeclRefExpr 0x229ced73500 <col:14> 'int (const char *, const char *)' Function 0x229ced730a8 'strcasecmp' 'int (const char *, const char *)'
|   |   | | |-ImplicitCastExpr 0x229ced73610 <col:25> 'const char *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x229ced73520 <col:25> 'const char *' lvalue ParmVar 0x229ced72e58 'value' 'const char *'
|   |   | | `-ImplicitCastExpr 0x229ced73640 <col:32> 'const char *' <NoOp>
|   |   | |   `-ImplicitCastExpr 0x229ced73628 <col:32> 'char *' <ArrayToPointerDecay>
|   |   | |     `-StringLiteral 0x229ced73578 <col:32> 'char [3]' lvalue "No"
|   |   | `-IntegerLiteral 0x229ced73658 <col:41> 'int' 0
|   |   `-CompoundStmt 0x229ced73770 <col:44, line:32:5>
|   |     |-BinaryOperator 0x229ced73718 <line:30:9, col:19> 'int' '='
|   |     | |-UnaryOperator 0x229ced736d8 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
|   |     | | `-ImplicitCastExpr 0x229ced736c0 <col:10> 'int *' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x229ced736a0 <col:10> 'int *' lvalue ParmVar 0x229ced72ed8 'result' 'int *'
|   |     | `-IntegerLiteral 0x229ced736f0 <col:19> 'int' 0
|   |     `-ReturnStmt 0x229ced73760 <line:31:9, col:16>
|   |       `-IntegerLiteral 0x229ced73738 <col:16> 'int' 1
|   `-ReturnStmt 0x229ced737f8 <line:33:5, col:12>
|     `-IntegerLiteral 0x229ced737d0 <col:12> 'int' 0
|-FunctionDecl 0x229ced730a8 <line:25:9> col:9 implicit used strcasecmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x229ced73148 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x229ced731b0 <<invalid sloc>> <invalid sloc> 'const char *'
|-RecordDecl 0x229ced73828 <line:59:9, line:62:1> line:59:9 struct definition
| |-FieldDecl 0x229ced738f8 <line:60:5, col:17> col:17 referenced name 'const char *'
| `-FieldDecl 0x229ced73968 <line:61:5, col:9> col:9 referenced value 'int'
|-TypedefDecl 0x229ced73a18 <line:59:1, line:62:3> col:3 referenced test_enum 'struct test_enum':'test_enum'
| `-ElaboratedType 0x229ced739c0 'struct test_enum' sugar
|   `-RecordType 0x229ced738c0 'test_enum'
|     `-Record 0x229ced73828 ''
|-FunctionDecl 0x229ced73e80 <line:65:1, line:76:1> line:65:19 invalid parse_enum 'int (const test_enum *, size_t, int *, const char *)' static
| |-ParmVarDecl 0x229ced73b60 <col:30, col:47> col:47 used enums 'const test_enum *'
| |-ParmVarDecl 0x229ced73bd8 <col:54, col:61> col:61 used num_enums 'size_t':'unsigned long long'
| |-ParmVarDecl 0x229ced73c58 <line:66:30, col:35> col:35 used value 'int *'
| |-ParmVarDecl 0x229ced73cd8 <col:42, col:54> col:54 used name 'const char *'
| `-CompoundStmt 0x229ced74578 <line:67:1, line:76:1>
|   |-DeclStmt 0x229ced73fd0 <line:68:5, col:13>
|   | `-VarDecl 0x229ced73f68 <col:5, col:12> col:12 used i 'size_t':'unsigned long long'
|   |-ForStmt 0x229ced74508 <line:69:5, line:74:5>
|   | |-BinaryOperator 0x229ced74060 <line:69:10, col:14> 'size_t':'unsigned long long' '='
|   | | |-DeclRefExpr 0x229ced73fe8 <col:10> 'size_t':'unsigned long long' lvalue Var 0x229ced73f68 'i' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x229ced74048 <col:14> 'size_t':'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x229ced74020 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x229ced740f0 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x229ced740c0 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x229ced74080 <col:17> 'size_t':'unsigned long long' lvalue Var 0x229ced73f68 'i' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x229ced740d8 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x229ced740a0 <col:21> 'size_t':'unsigned long long' lvalue ParmVar 0x229ced73bd8 'num_enums' 'size_t':'unsigned long long'
|   | |-UnaryOperator 0x229ced74130 <col:32, col:33> 'size_t':'unsigned long long' postfix '++'
|   | | `-DeclRefExpr 0x229ced74110 <col:32> 'size_t':'unsigned long long' lvalue Var 0x229ced73f68 'i' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x229ced744f0 <col:37, line:74:5>
|   |   `-IfStmt 0x229ced744d8 <line:70:9, line:73:9>
|   |     |-BinaryOperator 0x229ced74318 <line:70:13, col:44> 'int' '=='
|   |     | |-CallExpr 0x229ced74290 <col:13, col:39> 'int'
|   |     | | |-ImplicitCastExpr 0x229ced74278 <col:13> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |     | | | `-DeclRefExpr 0x229ced74148 <col:13> 'int (const char *, const char *)' Function 0x229ced3aef0 'strcmp' 'int (const char *, const char *)'
|   |     | | |-ImplicitCastExpr 0x229ced742c0 <col:20, col:29> 'const char *' <LValueToRValue>
|   |     | | | `-MemberExpr 0x229ced741f8 <col:20, col:29> 'const char *const' lvalue .name 0x229ced738f8
|   |     | | |   `-ArraySubscriptExpr 0x229ced741d8 <col:20, col:27> 'const test_enum':'const test_enum' lvalue
|   |     | | |     |-ImplicitCastExpr 0x229ced741a8 <col:20> 'const test_enum *' <LValueToRValue>
|   |     | | |     | `-DeclRefExpr 0x229ced74168 <col:20> 'const test_enum *' lvalue ParmVar 0x229ced73b60 'enums' 'const test_enum *'
|   |     | | |     `-ImplicitCastExpr 0x229ced741c0 <col:26> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | | |       `-DeclRefExpr 0x229ced74188 <col:26> 'size_t':'unsigned long long' lvalue Var 0x229ced73f68 'i' 'size_t':'unsigned long long'
|   |     | | `-ImplicitCastExpr 0x229ced742d8 <col:35> 'const char *' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x229ced74228 <col:35> 'const char *' lvalue ParmVar 0x229ced73cd8 'name' 'const char *'
|   |     | `-IntegerLiteral 0x229ced742f0 <col:44> 'int' 0
|   |     `-CompoundStmt 0x229ced744b8 <col:47, line:73:9>
|   |       |-BinaryOperator 0x229ced74460 <line:71:13, col:31> 'int' '='
|   |       | |-UnaryOperator 0x229ced74370 <col:13, col:14> 'int' lvalue prefix '*' cannot overflow
|   |       | | `-ImplicitCastExpr 0x229ced74358 <col:14> 'int *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x229ced74338 <col:14> 'int *' lvalue ParmVar 0x229ced73c58 'value' 'int *'
|   |       | `-ImplicitCastExpr 0x229ced74448 <col:22, col:31> 'int' <LValueToRValue>
|   |       |   `-MemberExpr 0x229ced74418 <col:22, col:31> 'const int' lvalue .value 0x229ced73968
|   |       |     `-ArraySubscriptExpr 0x229ced743f8 <col:22, col:29> 'const test_enum':'const test_enum' lvalue
|   |       |       |-ImplicitCastExpr 0x229ced743c8 <col:22> 'const test_enum *' <LValueToRValue>
|   |       |       | `-DeclRefExpr 0x229ced74388 <col:22> 'const test_enum *' lvalue ParmVar 0x229ced73b60 'enums' 'const test_enum *'
|   |       |       `-ImplicitCastExpr 0x229ced743e0 <col:28> 'size_t':'unsigned long long' <LValueToRValue>
|   |       |         `-DeclRefExpr 0x229ced743a8 <col:28> 'size_t':'unsigned long long' lvalue Var 0x229ced73f68 'i' 'size_t':'unsigned long long'
|   |       `-ReturnStmt 0x229ced744a8 <line:72:13, col:20>
|   |         `-IntegerLiteral 0x229ced74480 <col:20> 'int' 1
|   `-ReturnStmt 0x229ced74568 <line:75:5, col:12>
|     `-IntegerLiteral 0x229ced74540 <col:12> 'int' 0
|-FunctionDecl 0x229ced74820 <line:78:1, line:88:1> line:78:20 used enum_name 'const char *(const test_enum *, size_t, int)' static
| |-ParmVarDecl 0x229ced745b0 <col:30, col:47> col:47 used enums 'const test_enum *'
| |-ParmVarDecl 0x229ced74628 <col:54, col:61> col:61 used num_enums 'size_t':'unsigned long long'
| |-ParmVarDecl 0x229ced746a8 <line:79:30, col:34> col:34 used value 'int'
| `-CompoundStmt 0x229ced76e60 <line:80:1, line:88:1>
|   |-DeclStmt 0x229ced74968 <line:81:5, col:13>
|   | `-VarDecl 0x229ced74900 <col:5, col:12> col:12 used i 'size_t':'unsigned long long'
|   |-ForStmt 0x229ced76d80 <line:82:5, line:86:5>
|   | |-BinaryOperator 0x229ced749f8 <line:82:10, col:14> 'size_t':'unsigned long long' '='
|   | | |-DeclRefExpr 0x229ced74980 <col:10> 'size_t':'unsigned long long' lvalue Var 0x229ced74900 'i' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x229ced749e0 <col:14> 'size_t':'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x229ced749b8 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x229ced74a88 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x229ced74a58 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x229ced74a18 <col:17> 'size_t':'unsigned long long' lvalue Var 0x229ced74900 'i' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x229ced74a70 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x229ced74a38 <col:21> 'size_t':'unsigned long long' lvalue ParmVar 0x229ced74628 'num_enums' 'size_t':'unsigned long long'
|   | |-UnaryOperator 0x229ced74ac8 <col:32, col:33> 'size_t':'unsigned long long' postfix '++'
|   | | `-DeclRefExpr 0x229ced74aa8 <col:32> 'size_t':'unsigned long long' lvalue Var 0x229ced74900 'i' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x229ced76d68 <col:37, line:86:5>
|   |   `-IfStmt 0x229ced76d50 <line:83:9, line:85:9>
|   |     |-BinaryOperator 0x229ced76c30 <line:83:13, col:31> 'int' '=='
|   |     | |-ImplicitCastExpr 0x229ced76c00 <col:13, col:22> 'int' <LValueToRValue>
|   |     | | `-MemberExpr 0x229ced76bb0 <col:13, col:22> 'const int' lvalue .value 0x229ced73968
|   |     | |   `-ArraySubscriptExpr 0x229ced76b90 <col:13, col:20> 'const test_enum':'const test_enum' lvalue
|   |     | |     |-ImplicitCastExpr 0x229ced74b20 <col:13> 'const test_enum *' <LValueToRValue>
|   |     | |     | `-DeclRefExpr 0x229ced74ae0 <col:13> 'const test_enum *' lvalue ParmVar 0x229ced745b0 'enums' 'const test_enum *'
|   |     | |     `-ImplicitCastExpr 0x229ced74b38 <col:19> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | |       `-DeclRefExpr 0x229ced74b00 <col:19> 'size_t':'unsigned long long' lvalue Var 0x229ced74900 'i' 'size_t':'unsigned long long'
|   |     | `-ImplicitCastExpr 0x229ced76c18 <col:31> 'int' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x229ced76be0 <col:31> 'int' lvalue ParmVar 0x229ced746a8 'value' 'int'
|   |     `-CompoundStmt 0x229ced76d38 <col:38, line:85:9>
|   |       `-ReturnStmt 0x229ced76d28 <line:84:13, col:29>
|   |         `-ImplicitCastExpr 0x229ced76d10 <col:20, col:29> 'const char *' <LValueToRValue>
|   |           `-MemberExpr 0x229ced76ce0 <col:20, col:29> 'const char *const' lvalue .name 0x229ced738f8
|   |             `-ArraySubscriptExpr 0x229ced76cc0 <col:20, col:27> 'const test_enum':'const test_enum' lvalue
|   |               |-ImplicitCastExpr 0x229ced76c90 <col:20> 'const test_enum *' <LValueToRValue>
|   |               | `-DeclRefExpr 0x229ced76c50 <col:20> 'const test_enum *' lvalue ParmVar 0x229ced745b0 'enums' 'const test_enum *'
|   |               `-ImplicitCastExpr 0x229ced76ca8 <col:26> 'size_t':'unsigned long long' <LValueToRValue>
|   |                 `-DeclRefExpr 0x229ced76c70 <col:26> 'size_t':'unsigned long long' lvalue Var 0x229ced74900 'i' 'size_t':'unsigned long long'
|   `-ReturnStmt 0x229ced76e50 <line:87:5, col:12>
|     `-ImplicitCastExpr 0x229ced76e38 <col:12> 'const char *' <NoOp>
|       `-ImplicitCastExpr 0x229ced76e20 <col:12> 'char *' <ArrayToPointerDecay>
|         `-StringLiteral 0x229ced76df8 <col:12> 'char [13]' lvalue "InvalidValue"
|-VarDecl 0x229ced76f08 <line:93:1, line:98:1> line:93:24 used ssl_test_results 'const test_enum [4]' static cinit
| `-InitListExpr 0x229ced77338 <col:45, line:98:1> 'const test_enum [4]'
|   |-InitListExpr 0x229ced77388 <line:94:5, col:33> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x229ced773f0 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x229ced773d8 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x229ced76fa8 <col:6> 'char [8]' lvalue "Success"
|   | `-DeclRefExpr 0x229ced76fc8 <col:17> 'int' EnumConstant 0x229cedcda80 'SSL_TEST_SUCCESS' 'int'
|   |-InitListExpr 0x229ced77420 <line:95:5, col:40> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x229ced77488 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x229ced77470 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x229ced77078 <col:6> 'char [11]' lvalue "ServerFail"
|   | `-DeclRefExpr 0x229ced770a0 <col:20> 'int' EnumConstant 0x229cedcdad8 'SSL_TEST_SERVER_FAIL' 'int'
|   |-InitListExpr 0x229ced774c0 <line:96:5, col:40> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x229ced77528 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x229ced77510 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x229ced77110 <col:6> 'char [11]' lvalue "ClientFail"
|   | `-DeclRefExpr 0x229ced77138 <col:20> 'int' EnumConstant 0x229cedcdb30 'SSL_TEST_CLIENT_FAIL' 'int'
|   `-InitListExpr 0x229ced77570 <line:97:5, col:46> 'test_enum':'test_enum'
|     |-ImplicitCastExpr 0x229ced775d8 <col:6> 'const char *' <NoOp>
|     | `-ImplicitCastExpr 0x229ced775c0 <col:6> 'char *' <ArrayToPointerDecay>
|     |   `-StringLiteral 0x229ced771e8 <col:6> 'char [14]' lvalue "InternalError"
|     `-DeclRefExpr 0x229ced77210 <col:23> 'int' EnumConstant 0x229cedcdb88 'SSL_TEST_INTERNAL_ERROR' 'int'
|-FunctionDecl 0x229ced77840 <line:100:1, line:109:1> line:100:19 invalid parse_expected_result 'int (SSL_TEST_CTX *, const char *)' static
| |-ParmVarDecl 0x229ced77678 <col:41, col:55> col:55 used test_ctx 'SSL_TEST_CTX *'
| |-ParmVarDecl 0x229ced776f8 <col:65, col:77> col:77 used value 'const char *'
| `-CompoundStmt 0x229ced7ad98 <line:101:1, line:109:1>
|   |-DeclStmt 0x229ced77988 <line:102:5, col:18>
|   | `-VarDecl 0x229ced77920 <col:5, col:9> col:9 used ret_value 'int'
|   |-IfStmt 0x229ced7ac70 <line:103:5, line:106:5>
|   | |-OpaqueValueExpr 0x229ced7ac58 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x229ced7ac40 <line:104:41, line:106:5>
|   |   `-ReturnStmt 0x229ced7ac30 <line:105:9, col:16>
|   |     `-IntegerLiteral 0x229ced7ac08 <col:16> 'int' 0
|   |-BinaryOperator 0x229ced7ad40 <line:107:5, col:33> 'ssl_test_result_t':'ssl_test_result_t' '='
|   | |-MemberExpr 0x229ced7acc0 <col:5, col:15> 'ssl_test_result_t':'ssl_test_result_t' lvalue ->expected_result 0x229cedd55d0
|   | | `-ImplicitCastExpr 0x229ced7aca8 <col:5> 'SSL_TEST_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x229ced7ac88 <col:5> 'SSL_TEST_CTX *' lvalue ParmVar 0x229ced77678 'test_ctx' 'SSL_TEST_CTX *'
|   | `-ImplicitCastExpr 0x229ced7ad28 <col:33> 'ssl_test_result_t':'ssl_test_result_t' <IntegralCast>
|   |   `-ImplicitCastExpr 0x229ced7ad10 <col:33> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x229ced7acf0 <col:33> 'int' lvalue Var 0x229ced77920 'ret_value' 'int'
|   `-ReturnStmt 0x229ced7ad88 <line:108:5, col:12>
|     `-IntegerLiteral 0x229ced7ad60 <col:12> 'int' 1
|-FunctionDecl 0x229ced7ae88 prev 0x229cedd5c20 <line:111:1, line:114:1> line:111:13 ssl_test_result_name 'const char *(ssl_test_result_t)'
| |-ParmVarDecl 0x229ced7add8 <col:34, col:52> col:52 used result 'ssl_test_result_t':'ssl_test_result_t'
| `-CompoundStmt 0x229ced7b148 <line:112:1, line:114:1>
|   `-ReturnStmt 0x229ced7b138 <line:113:5, col:76>
|     `-CallExpr 0x229ced7b0a0 <col:12, col:76> 'const char *'
|       |-ImplicitCastExpr 0x229ced7b088 <col:12> 'const char *(*)(const test_enum *, size_t, int)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x229ced7af30 <col:12> 'const char *(const test_enum *, size_t, int)' Function 0x229ced74820 'enum_name' 'const char *(const test_enum *, size_t, int)'
|       |-ImplicitCastExpr 0x229ced7b0d8 <col:22> 'const test_enum *' <ArrayToPointerDecay>
|       | `-DeclRefExpr 0x229ced7af50 <col:22> 'const test_enum [4]' lvalue Var 0x229ced76f08 'ssl_test_results' 'const test_enum [4]'
|       |-ImplicitCastExpr 0x229ced7b0f0 <col:40, col:67> 'size_t':'unsigned long long' <IntegralCast>
|       | `-CallExpr 0x229ced7afc8 <col:40, col:67> 'int'
|       |   |-ImplicitCastExpr 0x229ced7afb0 <col:40> 'int (*)()' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x229ced7af70 <col:40> 'int ()' Function 0x229ced779e8 'OSSL_NELEM' 'int ()'
|       |   `-ImplicitCastExpr 0x229ced7aff0 <col:51> 'const test_enum *' <ArrayToPointerDecay>
|       |     `-DeclRefExpr 0x229ced7af90 <col:51> 'const test_enum [4]' lvalue Var 0x229ced76f08 'ssl_test_results' 'const test_enum [4]'
|       `-ImplicitCastExpr 0x229ced7b120 <col:70> 'int' <IntegralCast>
|         `-ImplicitCastExpr 0x229ced7b108 <col:70> 'ssl_test_result_t':'ssl_test_result_t' <LValueToRValue>
|           `-DeclRefExpr 0x229ced7b008 <col:70> 'ssl_test_result_t':'ssl_test_result_t' lvalue ParmVar 0x229ced7add8 'result' 'ssl_test_result_t':'ssl_test_result_t'
|-VarDecl 0x229ced7b180 <line:118:1, col:35> col:24 used ssl_alerts 'const test_enum []' static
|-FunctionDecl 0x229ced7b560 <line:126:1, line:129:1> line:126:19 invalid parse_alert 'int (int *, const char *)' static
| |-ParmVarDecl 0x229ced7b3d8 <col:31, col:36> col:36 used alert 'int *'
| |-ParmVarDecl 0x229ced7b458 <col:43, col:55> col:55 used value 'const char *'
| `-CompoundStmt 0x229ced7b720 <line:127:1, line:129:1>
|-FunctionDecl 0x229ced7b890 <line:131:1, line:134:1> line:131:19 invalid parse_client_alert 'int (SSL_TEST_CTX *, const char *)' static
| |-ParmVarDecl 0x229ced7b740 <col:38, col:52> col:52 used test_ctx 'SSL_TEST_CTX *'
| |-ParmVarDecl 0x229ced7b7c0 <col:62, col:74> col:74 used value 'const char *'
| `-CompoundStmt 0x229ced7b9f8 <line:132:1, line:134:1>
|-FunctionDecl 0x229ced77ba0 <line:136:1, line:139:1> line:136:19 invalid parse_server_alert 'int (SSL_TEST_CTX *, const char *)' static
| |-ParmVarDecl 0x229ced7ba18 <col:38, col:52> col:52 used test_ctx 'SSL_TEST_CTX *'
| |-ParmVarDecl 0x229ced7ba98 <col:62, col:74> col:74 used value 'const char *'
| `-CompoundStmt 0x229ced77d08 <line:137:1, line:139:1>
|-FunctionDecl 0x229ced77de0 prev 0x229cedd5de0 <line:141:1, line:144:1> line:141:13 ssl_alert_name 'const char *(int)'
| |-ParmVarDecl 0x229ced77d30 <col:28, col:32> col:32 used alert 'int'
| `-CompoundStmt 0x229ced78028 <line:142:1, line:144:1>
|   `-ReturnStmt 0x229ced78018 <line:143:5, col:63>
|     `-CallExpr 0x229ced77f98 <col:12, col:63> 'const char *'
|       |-ImplicitCastExpr 0x229ced77f80 <col:12> 'const char *(*)(const test_enum *, size_t, int)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x229ced77e88 <col:12> 'const char *(const test_enum *, size_t, int)' Function 0x229ced74820 'enum_name' 'const char *(const test_enum *, size_t, int)'
|       |-ImplicitCastExpr 0x229ced77fd0 <col:22> 'const test_enum *' <ArrayToPointerDecay>
|       | `-DeclRefExpr 0x229ced77ea8 <col:22> 'const test_enum []' lvalue Var 0x229ced7b180 'ssl_alerts' 'const test_enum []'
|       |-ImplicitCastExpr 0x229ced77fe8 <col:34, col:55> 'size_t':'unsigned long long' <IntegralCast>
|       | `-CallExpr 0x229ced77f20 <col:34, col:55> 'int'
|       |   |-ImplicitCastExpr 0x229ced77f08 <col:34> 'int (*)()' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x229ced77ec8 <col:34> 'int ()' Function 0x229ced779e8 'OSSL_NELEM' 'int ()'
|       |   `-ImplicitCastExpr 0x229ced77f48 <col:45> 'const test_enum *' <ArrayToPointerDecay>
|       |     `-DeclRefExpr 0x229ced77ee8 <col:45> 'const test_enum []' lvalue Var 0x229ced7b180 'ssl_alerts' 'const test_enum []'
|       `-ImplicitCastExpr 0x229ced78000 <col:58> 'int' <LValueToRValue>
|         `-DeclRefExpr 0x229ced77f60 <col:58> 'int' lvalue ParmVar 0x229ced77d30 'alert' 'int'
|-VarDecl 0x229ced78060 <line:148:1, col:38> col:24 used ssl_protocols 'const test_enum []' static
|-FunctionDecl 0x229ced783c0 <line:157:1, line:161:1> line:157:19 invalid parse_protocol 'int (SSL_TEST_CTX *, const char *)' static
| |-ParmVarDecl 0x229ced78270 <col:34, col:48> col:48 used test_ctx 'SSL_TEST_CTX *'
| |-ParmVarDecl 0x229ced782f0 <col:58, col:70> col:70 used value 'const char *'
| `-CompoundStmt 0x229ced785e0 <line:158:1, line:161:1>
|-FunctionDecl 0x229ced786b8 prev 0x229cedd5f68 <line:163:1, line:166:1> line:163:13 ssl_protocol_name 'const char *(int)'
| |-ParmVarDecl 0x229ced78608 <col:31, col:35> col:35 used protocol 'int'
| `-CompoundStmt 0x229ced78900 <line:164:1, line:166:1>
|   `-ReturnStmt 0x229ced788f0 <line:165:5, col:72>
|     `-CallExpr 0x229ced78870 <col:12, col:72> 'const char *'
|       |-ImplicitCastExpr 0x229ced78858 <col:12> 'const char *(*)(const test_enum *, size_t, int)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x229ced78760 <col:12> 'const char *(const test_enum *, size_t, int)' Function 0x229ced74820 'enum_name' 'const char *(const test_enum *, size_t, int)'
|       |-ImplicitCastExpr 0x229ced788a8 <col:22> 'const test_enum *' <ArrayToPointerDecay>
|       | `-DeclRefExpr 0x229ced78780 <col:22> 'const test_enum []' lvalue Var 0x229ced78060 'ssl_protocols' 'const test_enum []'
|       |-ImplicitCastExpr 0x229ced788c0 <col:37, col:61> 'size_t':'unsigned long long' <IntegralCast>
|       | `-CallExpr 0x229ced787f8 <col:37, col:61> 'int'
|       |   |-ImplicitCastExpr 0x229ced787e0 <col:37> 'int (*)()' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x229ced787a0 <col:37> 'int ()' Function 0x229ced779e8 'OSSL_NELEM' 'int ()'
|       |   `-ImplicitCastExpr 0x229ced78820 <col:48> 'const test_enum *' <ArrayToPointerDecay>
|       |     `-DeclRefExpr 0x229ced787c0 <col:48> 'const test_enum []' lvalue Var 0x229ced78060 'ssl_protocols' 'const test_enum []'
|       `-ImplicitCastExpr 0x229ced788d8 <col:64> 'int' <LValueToRValue>
|         `-DeclRefExpr 0x229ced78838 <col:64> 'int' lvalue ParmVar 0x229ced78608 'protocol' 'int'
|-VarDecl 0x229ced78938 <line:170:1, line:174:1> line:170:24 used ssl_verify_callbacks 'const test_enum [3]' static cinit
| `-InitListExpr 0x229ced74c10 <col:49, line:174:1> 'const test_enum [3]'
|   |-InitListExpr 0x229ced74c60 <line:171:5, col:34> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x229ced74cc8 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x229ced74cb0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x229ced789d8 <col:6> 'char [5]' lvalue "None"
|   | `-DeclRefExpr 0x229ced789f8 <col:14> 'int' EnumConstant 0x229cedcde20 'SSL_TEST_VERIFY_NONE' 'int'
|   |-InitListExpr 0x229ced74cf8 <line:172:5, col:45> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x229ced74d60 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x229ced74d48 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x229ced78a68 <col:6> 'char [10]' lvalue "AcceptAll"
|   | `-DeclRefExpr 0x229ced78a90 <col:19> 'int' EnumConstant 0x229cedcde78 'SSL_TEST_VERIFY_ACCEPT_ALL' 'int'
|   `-InitListExpr 0x229ced74d98 <line:173:5, col:45> 'test_enum':'test_enum'
|     |-ImplicitCastExpr 0x229ced74e00 <col:6> 'const char *' <NoOp>
|     | `-ImplicitCastExpr 0x229ced74de8 <col:6> 'char *' <ArrayToPointerDecay>
|     |   `-StringLiteral 0x229ced78b00 <col:6> 'char [10]' lvalue "RejectAll"
|     `-DeclRefExpr 0x229ced78b28 <col:19> 'int' EnumConstant 0x229cedcded0 'SSL_TEST_VERIFY_REJECT_ALL' 'int'
|-FunctionDecl 0x229ced750f0 <line:176:1, line:186:1> line:176:19 invalid parse_client_verify_callback 'int (SSL_TEST_CLIENT_CONF *, const char *)' static
| |-ParmVarDecl 0x229ced74f28 <col:48, col:70> col:70 used client_conf 'SSL_TEST_CLIENT_CONF *'
| |-ParmVarDecl 0x229ced74fa8 <line:177:48, col:60> col:60 used value 'const char *'
| `-CompoundStmt 0x229ced75508 <line:178:1, line:186:1>
|   |-DeclStmt 0x229ced75238 <line:179:5, col:18>
|   | `-VarDecl 0x229ced751d0 <col:5, col:9> col:9 used ret_value 'int'
|   |-IfStmt 0x229ced753e0 <line:180:5, line:183:5>
|   | |-OpaqueValueExpr 0x229ced753c8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x229ced753b0 <line:181:41, line:183:5>
|   |   `-ReturnStmt 0x229ced753a0 <line:182:9, col:16>
|   |     `-IntegerLiteral 0x229ced75378 <col:16> 'int' 0
|   |-BinaryOperator 0x229ced754b0 <line:184:5, col:36> 'ssl_verify_callback_t':'ssl_verify_callback_t' '='
|   | |-MemberExpr 0x229ced75430 <col:5, col:18> 'ssl_verify_callback_t':'ssl_verify_callback_t' lvalue ->verify_callback 0x229cedd66a0
|   | | `-ImplicitCastExpr 0x229ced75418 <col:5> 'SSL_TEST_CLIENT_CONF *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x229ced753f8 <col:5> 'SSL_TEST_CLIENT_CONF *' lvalue ParmVar 0x229ced74f28 'client_conf' 'SSL_TEST_CLIENT_CONF *'
|   | `-ImplicitCastExpr 0x229ced75498 <col:36> 'ssl_verify_callback_t':'ssl_verify_callback_t' <IntegralCast>
|   |   `-ImplicitCastExpr 0x229ced75480 <col:36> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x229ced75460 <col:36> 'int' lvalue Var 0x229ced751d0 'ret_value' 'int'
|   `-ReturnStmt 0x229ced754f8 <line:185:5, col:12>
|     `-IntegerLiteral 0x229ced754d0 <col:12> 'int' 1
|-FunctionDecl 0x229ced755f8 prev 0x229cedd6150 <line:188:1, line:192:1> line:188:13 ssl_verify_callback_name 'const char *(ssl_verify_callback_t)'
| |-ParmVarDecl 0x229ced75548 <col:38, col:60> col:60 used callback 'ssl_verify_callback_t':'ssl_verify_callback_t'
| `-CompoundStmt 0x229ced75858 <line:189:1, line:192:1>
|   `-ReturnStmt 0x229ced75848 <line:190:5, line:191:30>
|     `-CallExpr 0x229ced757b0 <line:190:12, line:191:30> 'const char *'
|       |-ImplicitCastExpr 0x229ced75798 <line:190:12> 'const char *(*)(const test_enum *, size_t, int)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x229ced756a0 <col:12> 'const char *(const test_enum *, size_t, int)' Function 0x229ced74820 'enum_name' 'const char *(const test_enum *, size_t, int)'
|       |-ImplicitCastExpr 0x229ced757e8 <col:22> 'const test_enum *' <ArrayToPointerDecay>
|       | `-DeclRefExpr 0x229ced756c0 <col:22> 'const test_enum [3]' lvalue Var 0x229ced78938 'ssl_verify_callbacks' 'const test_enum [3]'
|       |-ImplicitCastExpr 0x229ced75800 <col:44, col:75> 'size_t':'unsigned long long' <IntegralCast>
|       | `-CallExpr 0x229ced75738 <col:44, col:75> 'int'
|       |   |-ImplicitCastExpr 0x229ced75720 <col:44> 'int (*)()' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x229ced756e0 <col:44> 'int ()' Function 0x229ced779e8 'OSSL_NELEM' 'int ()'
|       |   `-ImplicitCastExpr 0x229ced75760 <col:55> 'const test_enum *' <ArrayToPointerDecay>
|       |     `-DeclRefExpr 0x229ced75700 <col:55> 'const test_enum [3]' lvalue Var 0x229ced78938 'ssl_verify_callbacks' 'const test_enum [3]'
|       `-ImplicitCastExpr 0x229ced75830 <line:191:22> 'int' <IntegralCast>
|         `-ImplicitCastExpr 0x229ced75818 <col:22> 'ssl_verify_callback_t':'ssl_verify_callback_t' <LValueToRValue>
|           `-DeclRefExpr 0x229ced75778 <col:22> 'ssl_verify_callback_t':'ssl_verify_callback_t' lvalue ParmVar 0x229ced75548 'callback' 'ssl_verify_callback_t':'ssl_verify_callback_t'
|-VarDecl 0x229ced75890 <line:196:1, line:201:1> line:196:24 used ssl_servername 'const test_enum [4]' static cinit
| `-InitListExpr 0x229ced7cca8 <col:43, line:201:1> 'const test_enum [4]'
|   |-InitListExpr 0x229ced7ccf8 <line:197:5, col:38> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x229ced7cd60 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x229ced7cd48 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x229ced758f8 <col:6> 'char [5]' lvalue "None"
|   | `-DeclRefExpr 0x229ced75918 <col:14> 'int' EnumConstant 0x229cedce110 'SSL_TEST_SERVERNAME_NONE' 'int'
|   |-InitListExpr 0x229ced7cd90 <line:198:5, col:44> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x229ced7cdf8 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x229ced7cde0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x229ced75988 <col:6> 'char [8]' lvalue "server1"
|   | `-DeclRefExpr 0x229ced759a8 <col:17> 'int' EnumConstant 0x229cedd11b0 'SSL_TEST_SERVERNAME_SERVER1' 'int'
|   |-InitListExpr 0x229ced7ce30 <line:199:5, col:44> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x229ced7ce98 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x229ced7ce80 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x229ced75a18 <col:6> 'char [8]' lvalue "server2"
|   | `-DeclRefExpr 0x229ced75a38 <col:17> 'int' EnumConstant 0x229cedd1208 'SSL_TEST_SERVERNAME_SERVER2' 'int'
|   `-InitListExpr 0x229ced7cee0 <line:200:5, col:44> 'test_enum':'test_enum'
|     |-ImplicitCastExpr 0x229ced7cf48 <col:6> 'const char *' <NoOp>
|     | `-ImplicitCastExpr 0x229ced7cf30 <col:6> 'char *' <ArrayToPointerDecay>
|     |   `-StringLiteral 0x229ced75aa8 <col:6> 'char [8]' lvalue "invalid"
|     `-DeclRefExpr 0x229ced75ac8 <col:17> 'int' EnumConstant 0x229cedd1260 'SSL_TEST_SERVERNAME_INVALID' 'int'
|-FunctionDecl 0x229ced7d0c0 <line:203:1, line:213:1> line:203:19 invalid parse_servername 'int (SSL_TEST_CLIENT_CONF *, const char *)' static
| |-ParmVarDecl 0x229ced7cf70 <col:36, col:58> col:58 used client_conf 'SSL_TEST_CLIENT_CONF *'
| |-ParmVarDecl 0x229ced7cff0 <line:204:36, col:48> col:48 used value 'const char *'
| `-CompoundStmt 0x229ced7d4d8 <line:205:1, line:213:1>
|   |-DeclStmt 0x229ced7d208 <line:206:5, col:18>
|   | `-VarDecl 0x229ced7d1a0 <col:5, col:9> col:9 used ret_value 'int'
|   |-IfStmt 0x229ced7d3b0 <line:207:5, line:210:5>
|   | |-OpaqueValueExpr 0x229ced7d398 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x229ced7d380 <line:208:41, line:210:5>
|   |   `-ReturnStmt 0x229ced7d370 <line:209:9, col:16>
|   |     `-IntegerLiteral 0x229ced7d348 <col:16> 'int' 0
|   |-BinaryOperator 0x229ced7d480 <line:211:5, col:31> 'ssl_servername_t':'ssl_servername_t' '='
|   | |-MemberExpr 0x229ced7d400 <col:5, col:18> 'ssl_servername_t':'ssl_servername_t' lvalue ->servername 0x229cedd6730
|   | | `-ImplicitCastExpr 0x229ced7d3e8 <col:5> 'SSL_TEST_CLIENT_CONF *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x229ced7d3c8 <col:5> 'SSL_TEST_CLIENT_CONF *' lvalue ParmVar 0x229ced7cf70 'client_conf' 'SSL_TEST_CLIENT_CONF *'
|   | `-ImplicitCastExpr 0x229ced7d468 <col:31> 'ssl_servername_t':'ssl_servername_t' <IntegralCast>
|   |   `-ImplicitCastExpr 0x229ced7d450 <col:31> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x229ced7d430 <col:31> 'int' lvalue Var 0x229ced7d1a0 'ret_value' 'int'
|   `-ReturnStmt 0x229ced7d4c8 <line:212:5, col:12>
|     `-IntegerLiteral 0x229ced7d4a0 <col:12> 'int' 1
|-FunctionDecl 0x229ced7d668 <line:215:1, line:225:1> line:215:19 invalid parse_expected_servername 'int (SSL_TEST_CTX *, const char *)' static
| |-ParmVarDecl 0x229ced7d518 <col:45, col:59> col:59 used test_ctx 'SSL_TEST_CTX *'
| |-ParmVarDecl 0x229ced7d598 <line:216:45, col:57> col:57 used value 'const char *'
| `-CompoundStmt 0x229ced7da80 <line:217:1, line:225:1>
|   |-DeclStmt 0x229ced7d7b0 <line:218:5, col:18>
|   | `-VarDecl 0x229ced7d748 <col:5, col:9> col:9 used ret_value 'int'
|   |-IfStmt 0x229ced7d958 <line:219:5, line:222:5>
|   | |-OpaqueValueExpr 0x229ced7d940 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x229ced7d928 <line:220:41, line:222:5>
|   |   `-ReturnStmt 0x229ced7d918 <line:221:9, col:16>
|   |     `-IntegerLiteral 0x229ced7d8f0 <col:16> 'int' 0
|   |-BinaryOperator 0x229ced7da28 <line:223:5, col:37> 'ssl_servername_t':'ssl_servername_t' '='
|   | |-MemberExpr 0x229ced7d9a8 <col:5, col:15> 'ssl_servername_t':'ssl_servername_t' lvalue ->expected_servername 0x229cedd5788
|   | | `-ImplicitCastExpr 0x229ced7d990 <col:5> 'SSL_TEST_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x229ced7d970 <col:5> 'SSL_TEST_CTX *' lvalue ParmVar 0x229ced7d518 'test_ctx' 'SSL_TEST_CTX *'
|   | `-ImplicitCastExpr 0x229ced7da10 <col:37> 'ssl_servername_t':'ssl_servername_t' <IntegralCast>
|   |   `-ImplicitCastExpr 0x229ced7d9f8 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x229ced7d9d8 <col:37> 'int' lvalue Var 0x229ced7d748 'ret_value' 'int'
|   `-ReturnStmt 0x229ced7da70 <line:224:5, col:12>
|     `-IntegerLiteral 0x229ced7da48 <col:12> 'int' 1
|-FunctionDecl 0x229ced75b80 prev 0x229cedd3310 <line:227:1, line:231:1> line:227:13 ssl_servername_name 'const char *(ssl_servername_t)'
| |-ParmVarDecl 0x229ced7dac0 <col:33, col:50> col:50 used server 'ssl_servername_t':'ssl_servername_t'
| `-CompoundStmt 0x229ced75de0 <line:228:1, line:231:1>
|   `-ReturnStmt 0x229ced75dd0 <line:229:5, line:230:28>
|     `-CallExpr 0x229ced75d38 <line:229:12, line:230:28> 'const char *'
|       |-ImplicitCastExpr 0x229ced75d20 <line:229:12> 'const char *(*)(const test_enum *, size_t, int)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x229ced75c28 <col:12> 'const char *(const test_enum *, size_t, int)' Function 0x229ced74820 'enum_name' 'const char *(const test_enum *, size_t, int)'
|       |-ImplicitCastExpr 0x229ced75d70 <col:22> 'const test_enum *' <ArrayToPointerDecay>
|       | `-DeclRefExpr 0x229ced75c48 <col:22> 'const test_enum [4]' lvalue Var 0x229ced75890 'ssl_servername' 'const test_enum [4]'
|       |-ImplicitCastExpr 0x229ced75d88 <col:38, col:63> 'size_t':'unsigned long long' <IntegralCast>
|       | `-CallExpr 0x229ced75cc0 <col:38, col:63> 'int'
|       |   |-ImplicitCastExpr 0x229ced75ca8 <col:38> 'int (*)()' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x229ced75c68 <col:38> 'int ()' Function 0x229ced779e8 'OSSL_NELEM' 'int ()'
|       |   `-ImplicitCastExpr 0x229ced75ce8 <col:49> 'const test_enum *' <ArrayToPointerDecay>
|       |     `-DeclRefExpr 0x229ced75c88 <col:49> 'const test_enum [4]' lvalue Var 0x229ced75890 'ssl_servername' 'const test_enum [4]'
|       `-ImplicitCastExpr 0x229ced75db8 <line:230:22> 'int' <IntegralCast>
|         `-ImplicitCastExpr 0x229ced75da0 <col:22> 'ssl_servername_t':'ssl_servername_t' <LValueToRValue>
|           `-DeclRefExpr 0x229ced75d00 <col:22> 'ssl_servername_t':'ssl_servername_t' lvalue ParmVar 0x229ced7dac0 'server' 'ssl_servername_t':'ssl_servername_t'
|-VarDecl 0x229ced75e18 <line:235:1, line:239:1> line:235:24 used ssl_servername_callbacks 'const test_enum [3]' static cinit
| `-InitListExpr 0x229ced760e0 <col:53, line:239:1> 'const test_enum [3]'
|   |-InitListExpr 0x229ced76130 <line:236:5, col:41> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x229ced76198 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x229ced76180 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x229ced75e80 <col:6> 'char [5]' lvalue "None"
|   | `-DeclRefExpr 0x229ced75ea0 <col:14> 'int' EnumConstant 0x229cedd14a0 'SSL_TEST_SERVERNAME_CB_NONE' 'int'
|   |-InitListExpr 0x229ced761c8 <line:237:5, col:59> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x229ced76230 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x229ced76218 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x229ced75f10 <col:6> 'char [15]' lvalue "IgnoreMismatch"
|   | `-DeclRefExpr 0x229ced75f38 <col:24> 'int' EnumConstant 0x229cedd14f8 'SSL_TEST_SERVERNAME_IGNORE_MISMATCH' 'int'
|   `-InitListExpr 0x229ced76268 <line:238:5, col:59> 'test_enum':'test_enum'
|     |-ImplicitCastExpr 0x229ced762d0 <col:6> 'const char *' <NoOp>
|     | `-ImplicitCastExpr 0x229ced762b8 <col:6> 'char *' <ArrayToPointerDecay>
|     |   `-StringLiteral 0x229ced75fa8 <col:6> 'char [15]' lvalue "RejectMismatch"
|     `-DeclRefExpr 0x229ced75fd0 <col:24> 'int' EnumConstant 0x229cedd1550 'SSL_TEST_SERVERNAME_REJECT_MISMATCH' 'int'
|-FunctionDecl 0x229ced76540 <line:241:1, line:251:1> line:241:19 invalid parse_servername_callback 'int (SSL_TEST_SERVER_CONF *, const char *)' static
| |-ParmVarDecl 0x229ced76378 <col:45, col:67> col:67 used server_conf 'SSL_TEST_SERVER_CONF *'
| |-ParmVarDecl 0x229ced763f8 <line:242:45, col:57> col:57 used value 'const char *'
| `-CompoundStmt 0x229ced76958 <line:243:1, line:251:1>
|   |-DeclStmt 0x229ced76688 <line:244:5, col:18>
|   | `-VarDecl 0x229ced76620 <col:5, col:9> col:9 used ret_value 'int'
|   |-IfStmt 0x229ced76830 <line:245:5, line:248:5>
|   | |-OpaqueValueExpr 0x229ced76818 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x229ced76800 <line:246:79, line:248:5>
|   |   `-ReturnStmt 0x229ced767f0 <line:247:9, col:16>
|   |     `-IntegerLiteral 0x229ced767c8 <col:16> 'int' 0
|   |-BinaryOperator 0x229ced76900 <line:249:5, col:40> 'ssl_servername_callback_t':'ssl_servername_callback_t' '='
|   | |-MemberExpr 0x229ced76880 <col:5, col:18> 'ssl_servername_callback_t':'ssl_servername_callback_t' lvalue ->servername_callback 0x229cedd6b20
|   | | `-ImplicitCastExpr 0x229ced76868 <col:5> 'SSL_TEST_SERVER_CONF *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x229ced76848 <col:5> 'SSL_TEST_SERVER_CONF *' lvalue ParmVar 0x229ced76378 'server_conf' 'SSL_TEST_SERVER_CONF *'
|   | `-ImplicitCastExpr 0x229ced768e8 <col:40> 'ssl_servername_callback_t':'ssl_servername_callback_t' <IntegralCast>
|   |   `-ImplicitCastExpr 0x229ced768d0 <col:40> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x229ced768b0 <col:40> 'int' lvalue Var 0x229ced76620 'ret_value' 'int'
|   `-ReturnStmt 0x229ced76948 <line:250:5, col:12>
|     `-IntegerLiteral 0x229ced76920 <col:12> 'int' 1
|-FunctionDecl 0x229ced76a48 prev 0x229cedd34f0 <line:253:1, line:257:1> line:253:13 ssl_servername_callback_name 'const char *(ssl_servername_callback_t)'
| |-ParmVarDecl 0x229ced76998 <col:42, col:68> col:68 used callback 'ssl_servername_callback_t':'ssl_servername_callback_t'
| `-CompoundStmt 0x229ced7dd38 <line:254:1, line:257:1>
|   `-ReturnStmt 0x229ced7dd28 <line:255:5, line:256:68>
|     `-CallExpr 0x229ced7dc90 <line:255:12, line:256:68> 'const char *'
|       |-ImplicitCastExpr 0x229ced7dc78 <line:255:12> 'const char *(*)(const test_enum *, size_t, int)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x229ced76af0 <col:12> 'const char *(const test_enum *, size_t, int)' Function 0x229ced74820 'enum_name' 'const char *(const test_enum *, size_t, int)'
|       |-ImplicitCastExpr 0x229ced7dcc8 <col:22> 'const test_enum *' <ArrayToPointerDecay>
|       | `-DeclRefExpr 0x229ced76b10 <col:22> 'const test_enum [3]' lvalue Var 0x229ced75e18 'ssl_servername_callbacks' 'const test_enum [3]'
|       |-ImplicitCastExpr 0x229ced7dce0 <line:256:22, col:57> 'size_t':'unsigned long long' <IntegralCast>
|       | `-CallExpr 0x229ced7dc18 <col:22, col:57> 'int'
|       |   |-ImplicitCastExpr 0x229ced7dc00 <col:22> 'int (*)()' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x229ced76b30 <col:22> 'int ()' Function 0x229ced779e8 'OSSL_NELEM' 'int ()'
|       |   `-ImplicitCastExpr 0x229ced7dc40 <col:33> 'const test_enum *' <ArrayToPointerDecay>
|       |     `-DeclRefExpr 0x229ced76b50 <col:33> 'const test_enum [3]' lvalue Var 0x229ced75e18 'ssl_servername_callbacks' 'const test_enum [3]'
|       `-ImplicitCastExpr 0x229ced7dd10 <col:60> 'int' <IntegralCast>
|         `-ImplicitCastExpr 0x229ced7dcf8 <col:60> 'ssl_servername_callback_t':'ssl_servername_callback_t' <LValueToRValue>
|           `-DeclRefExpr 0x229ced7dc58 <col:60> 'ssl_servername_callback_t':'ssl_servername_callback_t' lvalue ParmVar 0x229ced76998 'callback' 'ssl_servername_callback_t':'ssl_servername_callback_t'
|-VarDecl 0x229ced7dd70 <line:261:1, line:265:1> line:261:24 used ssl_session_ticket 'const test_enum [3]' static cinit
| `-InitListExpr 0x229ced7e028 <col:47, line:265:1> 'const test_enum [3]'
|   |-InitListExpr 0x229ced7e078 <line:262:5, col:46> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x229ced7e0e0 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x229ced7e0c8 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x229ced7ddd8 <col:6> 'char [7]' lvalue "Ignore"
|   | `-DeclRefExpr 0x229ced7ddf8 <col:16> 'int' EnumConstant 0x229cedd1790 'SSL_TEST_SESSION_TICKET_IGNORE' 'int'
|   |-InitListExpr 0x229ced7e110 <line:263:5, col:40> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x229ced7e178 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x229ced7e160 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x229ced7de68 <col:6> 'char [4]' lvalue "Yes"
|   | `-DeclRefExpr 0x229ced7de88 <col:13> 'int' EnumConstant 0x229cedd17e8 'SSL_TEST_SESSION_TICKET_YES' 'int'
|   `-InitListExpr 0x229ced7e1b0 <line:264:5, col:38> 'test_enum':'test_enum'
|     |-ImplicitCastExpr 0x229ced7e218 <col:6> 'const char *' <NoOp>
|     | `-ImplicitCastExpr 0x229ced7e200 <col:6> 'char *' <ArrayToPointerDecay>
|     |   `-StringLiteral 0x229ced7def8 <col:6> 'char [3]' lvalue "No"
|     `-DeclRefExpr 0x229ced7df18 <col:12> 'int' EnumConstant 0x229cedd1840 'SSL_TEST_SESSION_TICKET_NO' 'int'
|-FunctionDecl 0x229ced7e3b0 <line:267:1, line:276:1> line:267:19 invalid parse_session_ticket 'int (SSL_TEST_CTX *, const char *)' static
| |-ParmVarDecl 0x229ced7e260 <col:40, col:54> col:54 used test_ctx 'SSL_TEST_CTX *'
| |-ParmVarDecl 0x229ced7e2e0 <col:64, col:76> col:76 used value 'const char *'
| `-CompoundStmt 0x229ced7e7c8 <line:268:1, line:276:1>
|   |-DeclStmt 0x229ced7e4f8 <line:269:5, col:18>
|   | `-VarDecl 0x229ced7e490 <col:5, col:9> col:9 used ret_value 'int'
|   |-IfStmt 0x229ced7e6a0 <line:270:5, line:273:5>
|   | |-OpaqueValueExpr 0x229ced7e688 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x229ced7e670 <line:271:41, line:273:5>
|   |   `-ReturnStmt 0x229ced7e660 <line:272:9, col:16>
|   |     `-IntegerLiteral 0x229ced7e638 <col:16> 'int' 0
|   |-BinaryOperator 0x229ced7e770 <line:274:5, col:41> 'ssl_session_ticket_t':'ssl_session_ticket_t' '='
|   | |-MemberExpr 0x229ced7e6f0 <col:5, col:15> 'ssl_session_ticket_t':'ssl_session_ticket_t' lvalue ->session_ticket_expected 0x229cedd5810
|   | | `-ImplicitCastExpr 0x229ced7e6d8 <col:5> 'SSL_TEST_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x229ced7e6b8 <col:5> 'SSL_TEST_CTX *' lvalue ParmVar 0x229ced7e260 'test_ctx' 'SSL_TEST_CTX *'
|   | `-ImplicitCastExpr 0x229ced7e758 <col:41> 'ssl_session_ticket_t':'ssl_session_ticket_t' <IntegralCast>
|   |   `-ImplicitCastExpr 0x229ced7e740 <col:41> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x229ced7e720 <col:41> 'int' lvalue Var 0x229ced7e490 'ret_value' 'int'
|   `-ReturnStmt 0x229ced7e7b8 <line:275:5, col:12>
|     `-IntegerLiteral 0x229ced7e790 <col:12> 'int' 1
|-FunctionDecl 0x229ced7e8b8 prev 0x229cedd36d0 <line:278:1, line:283:1> line:278:13 ssl_session_ticket_name 'const char *(ssl_session_ticket_t)'
| |-ParmVarDecl 0x229ced7e808 <col:37, col:58> col:58 used server 'ssl_session_ticket_t':'ssl_session_ticket_t'
| `-CompoundStmt 0x229ced7eb18 <line:279:1, line:283:1>
|   `-ReturnStmt 0x229ced7eb08 <line:280:5, line:282:28>
|     `-CallExpr 0x229ced7ea70 <line:280:12, line:282:28> 'const char *'
|       |-ImplicitCastExpr 0x229ced7ea58 <line:280:12> 'const char *(*)(const test_enum *, size_t, int)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x229ced7e960 <col:12> 'const char *(const test_enum *, size_t, int)' Function 0x229ced74820 'enum_name' 'const char *(const test_enum *, size_t, int)'
|       |-ImplicitCastExpr 0x229ced7eaa8 <col:22> 'const test_enum *' <ArrayToPointerDecay>
|       | `-DeclRefExpr 0x229ced7e980 <col:22> 'const test_enum [3]' lvalue Var 0x229ced7dd70 'ssl_session_ticket' 'const test_enum [3]'
|       |-ImplicitCastExpr 0x229ced7eac0 <line:281:22, col:51> 'size_t':'unsigned long long' <IntegralCast>
|       | `-CallExpr 0x229ced7e9f8 <col:22, col:51> 'int'
|       |   |-ImplicitCastExpr 0x229ced7e9e0 <col:22> 'int (*)()' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x229ced7e9a0 <col:22> 'int ()' Function 0x229ced779e8 'OSSL_NELEM' 'int ()'
|       |   `-ImplicitCastExpr 0x229ced7ea20 <col:33> 'const test_enum *' <ArrayToPointerDecay>
|       |     `-DeclRefExpr 0x229ced7e9c0 <col:33> 'const test_enum [3]' lvalue Var 0x229ced7dd70 'ssl_session_ticket' 'const test_enum [3]'
|       `-ImplicitCastExpr 0x229ced7eaf0 <line:282:22> 'int' <IntegralCast>
|         `-ImplicitCastExpr 0x229ced7ead8 <col:22> 'ssl_session_ticket_t':'ssl_session_ticket_t' <LValueToRValue>
|           `-DeclRefExpr 0x229ced7ea38 <col:22> 'ssl_session_ticket_t':'ssl_session_ticket_t' lvalue ParmVar 0x229ced7e808 'server' 'ssl_session_ticket_t':'ssl_session_ticket_t'
|-VarDecl 0x229ced7eb50 <line:287:1, line:290:1> line:287:24 used ssl_test_methods 'const test_enum [2]' static cinit
| `-InitListExpr 0x229ced7ed78 <col:45, line:290:1> 'const test_enum [2]'
|   |-InitListExpr 0x229ced7edc8 <line:288:5, col:32> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x229ced7ee30 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x229ced7ee18 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x229ced7ebb8 <col:6> 'char [4]' lvalue "TLS"
|   | `-DeclRefExpr 0x229ced7ebd8 <col:13> 'int' EnumConstant 0x229cedd1ad0 'SSL_TEST_METHOD_TLS' 'int'
|   `-InitListExpr 0x229ced7ee60 <line:289:5, col:34> 'test_enum':'test_enum'
|     |-ImplicitCastExpr 0x229ced7eec8 <col:6> 'const char *' <NoOp>
|     | `-ImplicitCastExpr 0x229ced7eeb0 <col:6> 'char *' <ArrayToPointerDecay>
|     |   `-StringLiteral 0x229ced7ec60 <col:6> 'char [5]' lvalue "DTLS"
|     `-DeclRefExpr 0x229ced7ec80 <col:14> 'int' EnumConstant 0x229cedd1b28 'SSL_TEST_METHOD_DTLS' 'int'
|-FunctionDecl 0x229ced7f0c8 <line:292:1, line:301:1> line:292:19 invalid parse_test_method 'int (SSL_TEST_CTX *, const char *)' static
| |-ParmVarDecl 0x229ced7ef78 <col:37, col:51> col:51 used test_ctx 'SSL_TEST_CTX *'
| |-ParmVarDecl 0x229ced7eff8 <col:61, col:73> col:73 used value 'const char *'
| `-CompoundStmt 0x229ced7f4e0 <line:293:1, line:301:1>
|   |-DeclStmt 0x229ced7f210 <line:294:5, col:18>
|   | `-VarDecl 0x229ced7f1a8 <col:5, col:9> col:9 used ret_value 'int'
|   |-IfStmt 0x229ced7f3b8 <line:295:5, line:298:5>
|   | |-OpaqueValueExpr 0x229ced7f3a0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x229ced7f388 <line:296:41, line:298:5>
|   |   `-ReturnStmt 0x229ced7f378 <line:297:9, col:16>
|   |     `-IntegerLiteral 0x229ced7f350 <col:16> 'int' 0
|   |-BinaryOperator 0x229ced7f488 <line:299:5, col:24> 'ssl_test_method_t':'ssl_test_method_t' '='
|   | |-MemberExpr 0x229ced7f408 <col:5, col:15> 'ssl_test_method_t':'ssl_test_method_t' lvalue ->method 0x229cedd52e0
|   | | `-ImplicitCastExpr 0x229ced7f3f0 <col:5> 'SSL_TEST_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x229ced7f3d0 <col:5> 'SSL_TEST_CTX *' lvalue ParmVar 0x229ced7ef78 'test_ctx' 'SSL_TEST_CTX *'
|   | `-ImplicitCastExpr 0x229ced7f470 <col:24> 'ssl_test_method_t':'ssl_test_method_t' <IntegralCast>
|   |   `-ImplicitCastExpr 0x229ced7f458 <col:24> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x229ced7f438 <col:24> 'int' lvalue Var 0x229ced7f1a8 'ret_value' 'int'
|   `-ReturnStmt 0x229ced7f4d0 <line:300:5, col:12>
|     `-IntegerLiteral 0x229ced7f4a8 <col:12> 'int' 1
|-FunctionDecl 0x229ced7f5d0 prev 0x229cedd38b0 <line:303:1, line:306:1> line:303:13 ssl_test_method_name 'const char *(ssl_test_method_t)'
| |-ParmVarDecl 0x229ced7f520 <col:34, col:52> col:52 used method 'ssl_test_method_t':'ssl_test_method_t'
| `-CompoundStmt 0x229ced7f830 <line:304:1, line:306:1>
|   `-ReturnStmt 0x229ced7f820 <line:305:5, col:76>
|     `-CallExpr 0x229ced7f788 <col:12, col:76> 'const char *'
|       |-ImplicitCastExpr 0x229ced7f770 <col:12> 'const char *(*)(const test_enum *, size_t, int)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x229ced7f678 <col:12> 'const char *(const test_enum *, size_t, int)' Function 0x229ced74820 'enum_name' 'const char *(const test_enum *, size_t, int)'
|       |-ImplicitCastExpr 0x229ced7f7c0 <col:22> 'const test_enum *' <ArrayToPointerDecay>
|       | `-DeclRefExpr 0x229ced7f698 <col:22> 'const test_enum [2]' lvalue Var 0x229ced7eb50 'ssl_test_methods' 'const test_enum [2]'
|       |-ImplicitCastExpr 0x229ced7f7d8 <col:40, col:67> 'size_t':'unsigned long long' <IntegralCast>
|       | `-CallExpr 0x229ced7f710 <col:40, col:67> 'int'
|       |   |-ImplicitCastExpr 0x229ced7f6f8 <col:40> 'int (*)()' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x229ced7f6b8 <col:40> 'int ()' Function 0x229ced779e8 'OSSL_NELEM' 'int ()'
|       |   `-ImplicitCastExpr 0x229ced7f738 <col:51> 'const test_enum *' <ArrayToPointerDecay>
|       |     `-DeclRefExpr 0x229ced7f6d8 <col:51> 'const test_enum [2]' lvalue Var 0x229ced7eb50 'ssl_test_methods' 'const test_enum [2]'
|       `-ImplicitCastExpr 0x229ced7f808 <col:70> 'int' <IntegralCast>
|         `-ImplicitCastExpr 0x229ced7f7f0 <col:70> 'ssl_test_method_t':'ssl_test_method_t' <LValueToRValue>
|           `-DeclRefExpr 0x229ced7f750 <col:70> 'ssl_test_method_t':'ssl_test_method_t' lvalue ParmVar 0x229ced7f520 'method' 'ssl_test_method_t':'ssl_test_method_t'
|-FunctionDecl 0x229ced7f9a8 <line:43:5, line:49:5> <scratch space>:296:1 used parse_client_npn_protocols 'int (SSL_TEST_CLIENT_CONF *, const char *)' static
| |-ParmVarDecl 0x229ced7f858 <.//openssl//file_jk/before\test\ssl_test_ctx.c:310:34, line:43:52> col:52 used ctx 'SSL_TEST_CLIENT_CONF *'
| |-ParmVarDecl 0x229ced7f8d8 <col:57, col:69> col:69 used value 'const char *'
| `-CompoundStmt 0x229ced803d0 <line:44:5, line:49:5>
|   |-CallExpr 0x229ced7fc20 <line:45:9, col:32> 'int'
|   | |-ImplicitCastExpr 0x229ced7fbe8 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x229ced7fb60 <col:9> 'int ()' Function 0x229ced7fa98 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x229ced7fc48 <col:22, line:310:64> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x229ced7fbb8 <line:45:22, line:310:64> 'char *' lvalue ->npn_protocols 0x229cedd67a0
|   |     `-ImplicitCastExpr 0x229ced7fba0 <line:45:22> 'SSL_TEST_CLIENT_CONF *' <LValueToRValue>
|   |       `-DeclRefExpr 0x229ced7fb80 <col:22> 'SSL_TEST_CLIENT_CONF *' lvalue ParmVar 0x229ced7f858 'ctx' 'SSL_TEST_CLIENT_CONF *'
|   |-BinaryOperator 0x229ced7fe68 <line:46:9, col:42> 'char *' '='
|   | |-MemberExpr 0x229ced7fc98 <col:9, line:310:64> 'char *' lvalue ->npn_protocols 0x229cedd67a0
|   | | `-ImplicitCastExpr 0x229ced7fc80 <line:46:9> 'SSL_TEST_CLIENT_CONF *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x229ced7fc60 <col:9> 'SSL_TEST_CLIENT_CONF *' lvalue ParmVar 0x229ced7f858 'ctx' 'SSL_TEST_CLIENT_CONF *'
|   | `-ImplicitCastExpr 0x229ced7fe50 <col:22, col:42> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x229ced7fe10 <col:22, col:42> 'int'
|   |     |-ImplicitCastExpr 0x229ced7fdf8 <col:22> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x229ced7fdb8 <col:22> 'int ()' Function 0x229ced7fcf0 'OPENSSL_strdup' 'int ()'
|   |     `-ImplicitCastExpr 0x229ced7fe38 <col:37> 'const char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x229ced7fdd8 <col:37> 'const char *' lvalue ParmVar 0x229ced7f8d8 'value' 'const char *'
|   |-DoStmt 0x229ced80370 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x229ced80330 <line:106:8, line:111:5>
|   | | `-IfStmt 0x229ced80318 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x229ced7ffe8 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x229ced7ffc8 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x229ced7ffa8 <.//openssl//file_jk/before\test\ssl_test_ctx.c:47:20, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | |   |     |-ImplicitCastExpr 0x229ced7ff78 <.//openssl//file_jk/before\test\ssl_test_ctx.c:47:20, line:310:64> 'char *' <LValueToRValue>
|   | |   |     | `-MemberExpr 0x229ced7fec0 <line:47:20, line:310:64> 'char *' lvalue ->npn_protocols 0x229cedd67a0
|   | |   |     |   `-ImplicitCastExpr 0x229ced7fea8 <line:47:20> 'SSL_TEST_CLIENT_CONF *' <LValueToRValue>
|   | |   |     |     `-DeclRefExpr 0x229ced7fe88 <col:20> 'SSL_TEST_CLIENT_CONF *' lvalue ParmVar 0x229ced7f858 'ctx' 'SSL_TEST_CLIENT_CONF *'
|   | |   |     `-ImplicitCastExpr 0x229ced7ff90 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   | |   |       `-ParenExpr 0x229ced7ff58 <col:17, col:27> 'void *'
|   | |   |         `-CStyleCastExpr 0x229ced7ff30 <col:18, col:26> 'void *' <NullToPointer>
|   | |   |           `-IntegerLiteral 0x229ced7fef0 <col:26> 'int' 0
|   | |   `-CompoundStmt 0x229ced80300 <.//openssl//file_jk/before\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x229ced802d8 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x229ced802c0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x229ced80200 <col:13> 'int ()' Function 0x229ced80138 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x229ced802a8 <col:28, <scratch space>:297:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x229ced80290 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x229ced80258 <col:1> 'char [27]' lvalue "ctx->npn_protocols != NULL"
|   | `-IntegerLiteral 0x229ced80348 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x229ced80390 <.//openssl//file_jk/before\test\ssl_test_ctx.c:47:39>
|   `-ReturnStmt 0x229ced803c0 <line:48:9, col:16>
|     `-IntegerLiteral 0x229ced80398 <col:16> 'int' 1
|-FunctionDecl 0x229ced80568 <line:43:5, line:49:5> <scratch space>:300:1 used parse_server_npn_protocols 'int (SSL_TEST_SERVER_CONF *, const char *)' static
| |-ParmVarDecl 0x229ced80418 <.//openssl//file_jk/before\test\ssl_test_ctx.c:311:34, line:43:52> col:52 used ctx 'SSL_TEST_SERVER_CONF *'
| |-ParmVarDecl 0x229ced80498 <col:57, col:69> col:69 used value 'const char *'
| `-CompoundStmt 0x229ced80b78 <line:44:5, line:49:5>
|   |-CallExpr 0x229ced806d0 <line:45:9, col:32> 'int'
|   | |-ImplicitCastExpr 0x229ced806b8 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x229ced80630 <col:9> 'int ()' Function 0x229ced7fa98 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x229ced806f8 <col:22, line:311:64> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x229ced80688 <line:45:22, line:311:64> 'char *' lvalue ->npn_protocols 0x229cedd6b90
|   |     `-ImplicitCastExpr 0x229ced80670 <line:45:22> 'SSL_TEST_SERVER_CONF *' <LValueToRValue>
|   |       `-DeclRefExpr 0x229ced80650 <col:22> 'SSL_TEST_SERVER_CONF *' lvalue ParmVar 0x229ced80418 'ctx' 'SSL_TEST_SERVER_CONF *'
|   |-BinaryOperator 0x229ced80828 <line:46:9, col:42> 'char *' '='
|   | |-MemberExpr 0x229ced80748 <col:9, line:311:64> 'char *' lvalue ->npn_protocols 0x229cedd6b90
|   | | `-ImplicitCastExpr 0x229ced80730 <line:46:9> 'SSL_TEST_SERVER_CONF *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x229ced80710 <col:9> 'SSL_TEST_SERVER_CONF *' lvalue ParmVar 0x229ced80418 'ctx' 'SSL_TEST_SERVER_CONF *'
|   | `-ImplicitCastExpr 0x229ced80810 <col:22, col:42> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x229ced807d0 <col:22, col:42> 'int'
|   |     |-ImplicitCastExpr 0x229ced807b8 <col:22> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x229ced80778 <col:22> 'int ()' Function 0x229ced7fcf0 'OPENSSL_strdup' 'int ()'
|   |     `-ImplicitCastExpr 0x229ced807f8 <col:37> 'const char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x229ced80798 <col:37> 'const char *' lvalue ParmVar 0x229ced80498 'value' 'const char *'
|   |-DoStmt 0x229ced80b18 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x229ced80ad8 <line:106:8, line:111:5>
|   | | `-IfStmt 0x229ced80ac0 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x229ced809a8 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x229ced80988 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x229ced80968 <.//openssl//file_jk/before\test\ssl_test_ctx.c:47:20, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | |   |     |-ImplicitCastExpr 0x229ced80938 <.//openssl//file_jk/before\test\ssl_test_ctx.c:47:20, line:311:64> 'char *' <LValueToRValue>
|   | |   |     | `-MemberExpr 0x229ced80880 <line:47:20, line:311:64> 'char *' lvalue ->npn_protocols 0x229cedd6b90
|   | |   |     |   `-ImplicitCastExpr 0x229ced80868 <line:47:20> 'SSL_TEST_SERVER_CONF *' <LValueToRValue>
|   | |   |     |     `-DeclRefExpr 0x229ced80848 <col:20> 'SSL_TEST_SERVER_CONF *' lvalue ParmVar 0x229ced80418 'ctx' 'SSL_TEST_SERVER_CONF *'
|   | |   |     `-ImplicitCastExpr 0x229ced80950 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   | |   |       `-ParenExpr 0x229ced80918 <col:17, col:27> 'void *'
|   | |   |         `-CStyleCastExpr 0x229ced808f0 <col:18, col:26> 'void *' <NullToPointer>
|   | |   |           `-IntegerLiteral 0x229ced808b0 <col:26> 'int' 0
|   | |   `-CompoundStmt 0x229ced80aa8 <.//openssl//file_jk/before\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x229ced80a80 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x229ced80a68 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x229ced809e0 <col:13> 'int ()' Function 0x229ced80138 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x229ced80a50 <col:28, <scratch space>:301:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x229ced80a38 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x229ced80a00 <col:1> 'char [27]' lvalue "ctx->npn_protocols != NULL"
|   | `-IntegerLiteral 0x229ced80af0 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x229ced80b38 <.//openssl//file_jk/before\test\ssl_test_ctx.c:47:39>
|   `-ReturnStmt 0x229ced80b68 <line:48:9, col:16>
|     `-IntegerLiteral 0x229ced80b40 <col:16> 'int' 1
|-FunctionDecl 0x229ced78d00 <line:43:5, line:49:5> <scratch space>:304:1 used parse_test_expected_npn_protocol 'int (SSL_TEST_CTX *, const char *)' static
| |-ParmVarDecl 0x229ced78bb0 <.//openssl//file_jk/before\test\ssl_test_ctx.c:312:34, line:43:52> col:52 used ctx 'SSL_TEST_CTX *'
| |-ParmVarDecl 0x229ced78c30 <col:57, col:69> col:69 used value 'const char *'
| `-CompoundStmt 0x229ced79358 <line:44:5, line:49:5>
|   |-CallExpr 0x229ced78e68 <line:45:9, col:32> 'int'
|   | |-ImplicitCastExpr 0x229ced78e50 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x229ced78dc8 <col:9> 'int ()' Function 0x229ced7fa98 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x229ced78e90 <col:22, line:312:54> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x229ced78e20 <line:45:22, line:312:54> 'char *' lvalue ->expected_npn_protocol 0x229cedd5880
|   |     `-ImplicitCastExpr 0x229ced78e08 <line:45:22> 'SSL_TEST_CTX *' <LValueToRValue>
|   |       `-DeclRefExpr 0x229ced78de8 <col:22> 'SSL_TEST_CTX *' lvalue ParmVar 0x229ced78bb0 'ctx' 'SSL_TEST_CTX *'
|   |-BinaryOperator 0x229ced78fc0 <line:46:9, col:42> 'char *' '='
|   | |-MemberExpr 0x229ced78ee0 <col:9, line:312:54> 'char *' lvalue ->expected_npn_protocol 0x229cedd5880
|   | | `-ImplicitCastExpr 0x229ced78ec8 <line:46:9> 'SSL_TEST_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x229ced78ea8 <col:9> 'SSL_TEST_CTX *' lvalue ParmVar 0x229ced78bb0 'ctx' 'SSL_TEST_CTX *'
|   | `-ImplicitCastExpr 0x229ced78fa8 <col:22, col:42> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x229ced78f68 <col:22, col:42> 'int'
|   |     |-ImplicitCastExpr 0x229ced78f50 <col:22> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x229ced78f10 <col:22> 'int ()' Function 0x229ced7fcf0 'OPENSSL_strdup' 'int ()'
|   |     `-ImplicitCastExpr 0x229ced78f90 <col:37> 'const char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x229ced78f30 <col:37> 'const char *' lvalue ParmVar 0x229ced78c30 'value' 'const char *'
|   |-DoStmt 0x229ced792f8 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x229ced792b8 <line:106:8, line:111:5>
|   | | `-IfStmt 0x229ced792a0 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x229ced79140 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x229ced79120 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x229ced79100 <.//openssl//file_jk/before\test\ssl_test_ctx.c:47:20, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | |   |     |-ImplicitCastExpr 0x229ced790d0 <.//openssl//file_jk/before\test\ssl_test_ctx.c:47:20, line:312:54> 'char *' <LValueToRValue>
|   | |   |     | `-MemberExpr 0x229ced79018 <line:47:20, line:312:54> 'char *' lvalue ->expected_npn_protocol 0x229cedd5880
|   | |   |     |   `-ImplicitCastExpr 0x229ced79000 <line:47:20> 'SSL_TEST_CTX *' <LValueToRValue>
|   | |   |     |     `-DeclRefExpr 0x229ced78fe0 <col:20> 'SSL_TEST_CTX *' lvalue ParmVar 0x229ced78bb0 'ctx' 'SSL_TEST_CTX *'
|   | |   |     `-ImplicitCastExpr 0x229ced790e8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   | |   |       `-ParenExpr 0x229ced790b0 <col:17, col:27> 'void *'
|   | |   |         `-CStyleCastExpr 0x229ced79088 <col:18, col:26> 'void *' <NullToPointer>
|   | |   |           `-IntegerLiteral 0x229ced79048 <col:26> 'int' 0
|   | |   `-CompoundStmt 0x229ced79288 <.//openssl//file_jk/before\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x229ced79260 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x229ced79248 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x229ced79178 <col:13> 'int ()' Function 0x229ced80138 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x229ced79230 <col:28, <scratch space>:2:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x229ced79218 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x229ced791d8 <col:1> 'char [35]' lvalue "ctx->expected_npn_protocol != NULL"
|   | `-IntegerLiteral 0x229ced792d0 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x229ced79318 <.//openssl//file_jk/before\test\ssl_test_ctx.c:47:39>
|   `-ReturnStmt 0x229ced79348 <line:48:9, col:16>
|     `-IntegerLiteral 0x229ced79320 <col:16> 'int' 1
|-FunctionDecl 0x229ced794f0 <line:43:5, line:49:5> <scratch space>:5:1 used parse_client_alpn_protocols 'int (SSL_TEST_CLIENT_CONF *, const char *)' static
| |-ParmVarDecl 0x229ced793a0 <.//openssl//file_jk/before\test\ssl_test_ctx.c:313:34, line:43:52> col:52 used ctx 'SSL_TEST_CLIENT_CONF *'
| |-ParmVarDecl 0x229ced79420 <col:57, col:69> col:69 used value 'const char *'
| `-CompoundStmt 0x229ced79b40 <line:44:5, line:49:5>
|   |-CallExpr 0x229ced79658 <line:45:9, col:32> 'int'
|   | |-ImplicitCastExpr 0x229ced79640 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x229ced795b8 <col:9> 'int ()' Function 0x229ced7fa98 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x229ced79680 <col:22, line:313:64> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x229ced79610 <line:45:22, line:313:64> 'char *' lvalue ->alpn_protocols 0x229cedd6810
|   |     `-ImplicitCastExpr 0x229ced795f8 <line:45:22> 'SSL_TEST_CLIENT_CONF *' <LValueToRValue>
|   |       `-DeclRefExpr 0x229ced795d8 <col:22> 'SSL_TEST_CLIENT_CONF *' lvalue ParmVar 0x229ced793a0 'ctx' 'SSL_TEST_CLIENT_CONF *'
|   |-BinaryOperator 0x229ced797b0 <line:46:9, col:42> 'char *' '='
|   | |-MemberExpr 0x229ced796d0 <col:9, line:313:64> 'char *' lvalue ->alpn_protocols 0x229cedd6810
|   | | `-ImplicitCastExpr 0x229ced796b8 <line:46:9> 'SSL_TEST_CLIENT_CONF *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x229ced79698 <col:9> 'SSL_TEST_CLIENT_CONF *' lvalue ParmVar 0x229ced793a0 'ctx' 'SSL_TEST_CLIENT_CONF *'
|   | `-ImplicitCastExpr 0x229ced79798 <col:22, col:42> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x229ced79758 <col:22, col:42> 'int'
|   |     |-ImplicitCastExpr 0x229ced79740 <col:22> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x229ced79700 <col:22> 'int ()' Function 0x229ced7fcf0 'OPENSSL_strdup' 'int ()'
|   |     `-ImplicitCastExpr 0x229ced79780 <col:37> 'const char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x229ced79720 <col:37> 'const char *' lvalue ParmVar 0x229ced79420 'value' 'const char *'
|   |-DoStmt 0x229ced79ae0 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x229ced79aa0 <line:106:8, line:111:5>
|   | | `-IfStmt 0x229ced79a88 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x229ced79930 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x229ced79910 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x229ced798f0 <.//openssl//file_jk/before\test\ssl_test_ctx.c:47:20, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | |   |     |-ImplicitCastExpr 0x229ced798c0 <.//openssl//file_jk/before\test\ssl_test_ctx.c:47:20, line:313:64> 'char *' <LValueToRValue>
|   | |   |     | `-MemberExpr 0x229ced79808 <line:47:20, line:313:64> 'char *' lvalue ->alpn_protocols 0x229cedd6810
|   | |   |     |   `-ImplicitCastExpr 0x229ced797f0 <line:47:20> 'SSL_TEST_CLIENT_CONF *' <LValueToRValue>
|   | |   |     |     `-DeclRefExpr 0x229ced797d0 <col:20> 'SSL_TEST_CLIENT_CONF *' lvalue ParmVar 0x229ced793a0 'ctx' 'SSL_TEST_CLIENT_CONF *'
|   | |   |     `-ImplicitCastExpr 0x229ced798d8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   | |   |       `-ParenExpr 0x229ced798a0 <col:17, col:27> 'void *'
|   | |   |         `-CStyleCastExpr 0x229ced79878 <col:18, col:26> 'void *' <NullToPointer>
|   | |   |           `-IntegerLiteral 0x229ced79838 <col:26> 'int' 0
|   | |   `-CompoundStmt 0x229ced79a70 <.//openssl//file_jk/before\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x229ced79a48 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x229ced79a30 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x229ced79968 <col:13> 'int ()' Function 0x229ced80138 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x229ced79a18 <col:28, <scratch space>:6:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x229ced79a00 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x229ced799c8 <col:1> 'char [28]' lvalue "ctx->alpn_protocols != NULL"
|   | `-IntegerLiteral 0x229ced79ab8 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x229ced79b00 <.//openssl//file_jk/before\test\ssl_test_ctx.c:47:39>
|   `-ReturnStmt 0x229ced79b30 <line:48:9, col:16>
|     `-IntegerLiteral 0x229ced79b08 <col:16> 'int' 1
|-FunctionDecl 0x229ced83db0 <line:43:5, line:49:5> <scratch space>:9:1 used parse_server_alpn_protocols 'int (SSL_TEST_SERVER_CONF *, const char *)' static
| |-ParmVarDecl 0x229ced83c60 <.//openssl//file_jk/before\test\ssl_test_ctx.c:314:34, line:43:52> col:52 used ctx 'SSL_TEST_SERVER_CONF *'
| |-ParmVarDecl 0x229ced83ce0 <col:57, col:69> col:69 used value 'const char *'
| `-CompoundStmt 0x229ced843c0 <line:44:5, line:49:5>
|   |-CallExpr 0x229ced83f18 <line:45:9, col:32> 'int'
|   | |-ImplicitCastExpr 0x229ced83f00 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x229ced83e78 <col:9> 'int ()' Function 0x229ced7fa98 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x229ced83f40 <col:22, line:314:64> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x229ced83ed0 <line:45:22, line:314:64> 'char *' lvalue ->alpn_protocols 0x229cedd6c00
|   |     `-ImplicitCastExpr 0x229ced83eb8 <line:45:22> 'SSL_TEST_SERVER_CONF *' <LValueToRValue>
|   |       `-DeclRefExpr 0x229ced83e98 <col:22> 'SSL_TEST_SERVER_CONF *' lvalue ParmVar 0x229ced83c60 'ctx' 'SSL_TEST_SERVER_CONF *'
|   |-BinaryOperator 0x229ced84070 <line:46:9, col:42> 'char *' '='
|   | |-MemberExpr 0x229ced83f90 <col:9, line:314:64> 'char *' lvalue ->alpn_protocols 0x229cedd6c00
|   | | `-ImplicitCastExpr 0x229ced83f78 <line:46:9> 'SSL_TEST_SERVER_CONF *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x229ced83f58 <col:9> 'SSL_TEST_SERVER_CONF *' lvalue ParmVar 0x229ced83c60 'ctx' 'SSL_TEST_SERVER_CONF *'
|   | `-ImplicitCastExpr 0x229ced84058 <col:22, col:42> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x229ced84018 <col:22, col:42> 'int'
|   |     |-ImplicitCastExpr 0x229ced84000 <col:22> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x229ced83fc0 <col:22> 'int ()' Function 0x229ced7fcf0 'OPENSSL_strdup' 'int ()'
|   |     `-ImplicitCastExpr 0x229ced84040 <col:37> 'const char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x229ced83fe0 <col:37> 'const char *' lvalue ParmVar 0x229ced83ce0 'value' 'const char *'
|   |-DoStmt 0x229ced84360 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x229ced84320 <line:106:8, line:111:5>
|   | | `-IfStmt 0x229ced84308 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x229ced841f0 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x229ced841d0 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x229ced841b0 <.//openssl//file_jk/before\test\ssl_test_ctx.c:47:20, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | |   |     |-ImplicitCastExpr 0x229ced84180 <.//openssl//file_jk/before\test\ssl_test_ctx.c:47:20, line:314:64> 'char *' <LValueToRValue>
|   | |   |     | `-MemberExpr 0x229ced840c8 <line:47:20, line:314:64> 'char *' lvalue ->alpn_protocols 0x229cedd6c00
|   | |   |     |   `-ImplicitCastExpr 0x229ced840b0 <line:47:20> 'SSL_TEST_SERVER_CONF *' <LValueToRValue>
|   | |   |     |     `-DeclRefExpr 0x229ced84090 <col:20> 'SSL_TEST_SERVER_CONF *' lvalue ParmVar 0x229ced83c60 'ctx' 'SSL_TEST_SERVER_CONF *'
|   | |   |     `-ImplicitCastExpr 0x229ced84198 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   | |   |       `-ParenExpr 0x229ced84160 <col:17, col:27> 'void *'
|   | |   |         `-CStyleCastExpr 0x229ced84138 <col:18, col:26> 'void *' <NullToPointer>
|   | |   |           `-IntegerLiteral 0x229ced840f8 <col:26> 'int' 0
|   | |   `-CompoundStmt 0x229ced842f0 <.//openssl//file_jk/before\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x229ced842c8 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x229ced842b0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x229ced84228 <col:13> 'int ()' Function 0x229ced80138 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x229ced84298 <col:28, <scratch space>:10:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x229ced84280 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x229ced84248 <col:1> 'char [28]' lvalue "ctx->alpn_protocols != NULL"
|   | `-IntegerLiteral 0x229ced84338 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x229ced84380 <.//openssl//file_jk/before\test\ssl_test_ctx.c:47:39>
|   `-ReturnStmt 0x229ced843b0 <line:48:9, col:16>
|     `-IntegerLiteral 0x229ced84388 <col:16> 'int' 1
|-FunctionDecl 0x229ced84558 <line:43:5, line:49:5> <scratch space>:13:1 used parse_test_expected_alpn_protocol 'int (SSL_TEST_CTX *, const char *)' static
| |-ParmVarDecl 0x229ced84408 <.//openssl//file_jk/before\test\ssl_test_ctx.c:315:34, line:43:52> col:52 used ctx 'SSL_TEST_CTX *'
| |-ParmVarDecl 0x229ced84488 <col:57, col:69> col:69 used value 'const char *'
| `-CompoundStmt 0x229ced84ba8 <line:44:5, line:49:5>
|   |-CallExpr 0x229ced846c0 <line:45:9, col:32> 'int'
|   | |-ImplicitCastExpr 0x229ced846a8 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x229ced84620 <col:9> 'int ()' Function 0x229ced7fa98 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x229ced846e8 <col:22, line:315:54> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x229ced84678 <line:45:22, line:315:54> 'char *' lvalue ->expected_alpn_protocol 0x229cedd58f0
|   |     `-ImplicitCastExpr 0x229ced84660 <line:45:22> 'SSL_TEST_CTX *' <LValueToRValue>
|   |       `-DeclRefExpr 0x229ced84640 <col:22> 'SSL_TEST_CTX *' lvalue ParmVar 0x229ced84408 'ctx' 'SSL_TEST_CTX *'
|   |-BinaryOperator 0x229ced84818 <line:46:9, col:42> 'char *' '='
|   | |-MemberExpr 0x229ced84738 <col:9, line:315:54> 'char *' lvalue ->expected_alpn_protocol 0x229cedd58f0
|   | | `-ImplicitCastExpr 0x229ced84720 <line:46:9> 'SSL_TEST_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x229ced84700 <col:9> 'SSL_TEST_CTX *' lvalue ParmVar 0x229ced84408 'ctx' 'SSL_TEST_CTX *'
|   | `-ImplicitCastExpr 0x229ced84800 <col:22, col:42> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x229ced847c0 <col:22, col:42> 'int'
|   |     |-ImplicitCastExpr 0x229ced847a8 <col:22> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x229ced84768 <col:22> 'int ()' Function 0x229ced7fcf0 'OPENSSL_strdup' 'int ()'
|   |     `-ImplicitCastExpr 0x229ced847e8 <col:37> 'const char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x229ced84788 <col:37> 'const char *' lvalue ParmVar 0x229ced84488 'value' 'const char *'
|   |-DoStmt 0x229ced84b48 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x229ced84b08 <line:106:8, line:111:5>
|   | | `-IfStmt 0x229ced84af0 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x229ced84998 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x229ced84978 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x229ced84958 <.//openssl//file_jk/before\test\ssl_test_ctx.c:47:20, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | |   |     |-ImplicitCastExpr 0x229ced84928 <.//openssl//file_jk/before\test\ssl_test_ctx.c:47:20, line:315:54> 'char *' <LValueToRValue>
|   | |   |     | `-MemberExpr 0x229ced84870 <line:47:20, line:315:54> 'char *' lvalue ->expected_alpn_protocol 0x229cedd58f0
|   | |   |     |   `-ImplicitCastExpr 0x229ced84858 <line:47:20> 'SSL_TEST_CTX *' <LValueToRValue>
|   | |   |     |     `-DeclRefExpr 0x229ced84838 <col:20> 'SSL_TEST_CTX *' lvalue ParmVar 0x229ced84408 'ctx' 'SSL_TEST_CTX *'
|   | |   |     `-ImplicitCastExpr 0x229ced84940 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   | |   |       `-ParenExpr 0x229ced84908 <col:17, col:27> 'void *'
|   | |   |         `-CStyleCastExpr 0x229ced848e0 <col:18, col:26> 'void *' <NullToPointer>
|   | |   |           `-IntegerLiteral 0x229ced848a0 <col:26> 'int' 0
|   | |   `-CompoundStmt 0x229ced84ad8 <.//openssl//file_jk/before\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x229ced84ab0 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x229ced84a98 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x229ced849d0 <col:13> 'int ()' Function 0x229ced80138 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x229ced84a80 <col:28, <scratch space>:14:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x229ced84a68 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x229ced84a28 <col:1> 'char [36]' lvalue "ctx->expected_alpn_protocol != NULL"
|   | `-IntegerLiteral 0x229ced84b20 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x229ced84b68 <.//openssl//file_jk/before\test\ssl_test_ctx.c:47:39>
|   `-ReturnStmt 0x229ced84b98 <line:48:9, col:16>
|     `-IntegerLiteral 0x229ced84b70 <col:16> 'int' 1
|-VarDecl 0x229ced81c40 <line:319:1, line:324:1> line:319:24 used ssl_handshake_modes 'const test_enum [4]' static cinit
| `-InitListExpr 0x229ced82000 <col:48, line:324:1> 'const test_enum [4]'
|   |-InitListExpr 0x229ced82050 <line:320:5, col:41> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x229ced820b8 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x229ced820a0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x229ced81ca8 <col:6> 'char [7]' lvalue "Simple"
|   | `-DeclRefExpr 0x229ced81cc8 <col:16> 'int' EnumConstant 0x229cedd1d60 'SSL_TEST_HANDSHAKE_SIMPLE' 'int'
|   |-InitListExpr 0x229ced820e8 <line:321:5, col:41> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x229ced82150 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x229ced82138 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x229ced81d38 <col:6> 'char [7]' lvalue "Resume"
|   | `-DeclRefExpr 0x229ced81d58 <col:16> 'int' EnumConstant 0x229cedd1db8 'SSL_TEST_HANDSHAKE_RESUME' 'int'
|   |-InitListExpr 0x229ced82188 <line:322:5, col:58> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x229ced821f0 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x229ced821d8 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x229ced81e08 <col:6> 'char [18]' lvalue "RenegotiateServer"
|   | `-DeclRefExpr 0x229ced81e38 <col:27> 'int' EnumConstant 0x229cedd1e10 'SSL_TEST_HANDSHAKE_RENEG_SERVER' 'int'
|   `-InitListExpr 0x229ced82238 <line:323:5, col:58> 'test_enum':'test_enum'
|     |-ImplicitCastExpr 0x229ced822a0 <col:6> 'const char *' <NoOp>
|     | `-ImplicitCastExpr 0x229ced82288 <col:6> 'char *' <ArrayToPointerDecay>
|     |   `-StringLiteral 0x229ced81ea8 <col:6> 'char [18]' lvalue "RenegotiateClient"
|     `-DeclRefExpr 0x229ced81ed8 <col:27> 'int' EnumConstant 0x229cedd1e68 'SSL_TEST_HANDSHAKE_RENEG_CLIENT' 'int'
|-FunctionDecl 0x229ced82418 <line:326:1, line:335:1> line:326:19 invalid parse_handshake_mode 'int (SSL_TEST_CTX *, const char *)' static
| |-ParmVarDecl 0x229ced822c8 <col:40, col:54> col:54 used test_ctx 'SSL_TEST_CTX *'
| |-ParmVarDecl 0x229ced82348 <col:64, col:76> col:76 used value 'const char *'
| `-CompoundStmt 0x229ced82830 <line:327:1, line:335:1>
|   |-DeclStmt 0x229ced82560 <line:328:5, col:18>
|   | `-VarDecl 0x229ced824f8 <col:5, col:9> col:9 used ret_value 'int'
|   |-IfStmt 0x229ced82708 <line:329:5, line:332:5>
|   | |-OpaqueValueExpr 0x229ced826f0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x229ced826d8 <line:330:41, line:332:5>
|   |   `-ReturnStmt 0x229ced826c8 <line:331:9, col:16>
|   |     `-IntegerLiteral 0x229ced826a0 <col:16> 'int' 0
|   |-BinaryOperator 0x229ced827d8 <line:333:5, col:32> 'ssl_handshake_mode_t':'ssl_handshake_mode_t' '='
|   | |-MemberExpr 0x229ced82758 <col:5, col:15> 'ssl_handshake_mode_t':'ssl_handshake_mode_t' lvalue ->handshake_mode 0x229cedd5370
|   | | `-ImplicitCastExpr 0x229ced82740 <col:5> 'SSL_TEST_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x229ced82720 <col:5> 'SSL_TEST_CTX *' lvalue ParmVar 0x229ced822c8 'test_ctx' 'SSL_TEST_CTX *'
|   | `-ImplicitCastExpr 0x229ced827c0 <col:32> 'ssl_handshake_mode_t':'ssl_handshake_mode_t' <IntegralCast>
|   |   `-ImplicitCastExpr 0x229ced827a8 <col:32> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x229ced82788 <col:32> 'int' lvalue Var 0x229ced824f8 'ret_value' 'int'
|   `-ReturnStmt 0x229ced82820 <line:334:5, col:12>
|     `-IntegerLiteral 0x229ced827f8 <col:12> 'int' 1
|-FunctionDecl 0x229ced82920 prev 0x229cedd3a90 <line:337:1, line:341:1> line:337:13 ssl_handshake_mode_name 'const char *(ssl_handshake_mode_t)'
| |-ParmVarDecl 0x229ced82870 <col:37, col:58> col:58 used mode 'ssl_handshake_mode_t':'ssl_handshake_mode_t'
| `-CompoundStmt 0x229ced82b80 <line:338:1, line:341:1>
|   `-ReturnStmt 0x229ced82b70 <line:339:5, line:340:26>
|     `-CallExpr 0x229ced82ad8 <line:339:12, line:340:26> 'const char *'
|       |-ImplicitCastExpr 0x229ced82ac0 <line:339:12> 'const char *(*)(const test_enum *, size_t, int)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x229ced829c8 <col:12> 'const char *(const test_enum *, size_t, int)' Function 0x229ced74820 'enum_name' 'const char *(const test_enum *, size_t, int)'
|       |-ImplicitCastExpr 0x229ced82b10 <col:22> 'const test_enum *' <ArrayToPointerDecay>
|       | `-DeclRefExpr 0x229ced829e8 <col:22> 'const test_enum [4]' lvalue Var 0x229ced81c40 'ssl_handshake_modes' 'const test_enum [4]'
|       |-ImplicitCastExpr 0x229ced82b28 <col:43, col:73> 'size_t':'unsigned long long' <IntegralCast>
|       | `-CallExpr 0x229ced82a60 <col:43, col:73> 'int'
|       |   |-ImplicitCastExpr 0x229ced82a48 <col:43> 'int (*)()' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x229ced82a08 <col:43> 'int ()' Function 0x229ced779e8 'OSSL_NELEM' 'int ()'
|       |   `-ImplicitCastExpr 0x229ced82a88 <col:54> 'const test_enum *' <ArrayToPointerDecay>
|       |     `-DeclRefExpr 0x229ced82a28 <col:54> 'const test_enum [4]' lvalue Var 0x229ced81c40 'ssl_handshake_modes' 'const test_enum [4]'
|       `-ImplicitCastExpr 0x229ced82b58 <line:340:22> 'int' <IntegralCast>
|         `-ImplicitCastExpr 0x229ced82b40 <col:22> 'ssl_handshake_mode_t':'ssl_handshake_mode_t' <LValueToRValue>
|           `-DeclRefExpr 0x229ced82aa0 <col:22> 'ssl_handshake_mode_t':'ssl_handshake_mode_t' lvalue ParmVar 0x229ced82870 'mode' 'ssl_handshake_mode_t':'ssl_handshake_mode_t'
|-FunctionDecl 0x229ced82d20 <line:43:5, line:49:5> <scratch space>:17:1 used parse_client_reneg_ciphers 'int (SSL_TEST_CLIENT_CONF *, const char *)' static
| |-ParmVarDecl 0x229ced82ba8 <.//openssl//file_jk/before\test\ssl_test_ctx.c:345:34, line:43:52> col:52 used ctx 'SSL_TEST_CLIENT_CONF *'
| |-ParmVarDecl 0x229ced82c50 <col:57, col:69> col:69 used value 'const char *'
| `-CompoundStmt 0x229ced83330 <line:44:5, line:49:5>
|   |-CallExpr 0x229ced82e88 <line:45:9, col:32> 'int'
|   | |-ImplicitCastExpr 0x229ced82e70 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x229ced82de8 <col:9> 'int ()' Function 0x229ced7fa98 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x229ced82eb0 <col:22, line:345:64> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x229ced82e40 <line:45:22, line:345:64> 'char *' lvalue ->reneg_ciphers 0x229cedd6910
|   |     `-ImplicitCastExpr 0x229ced82e28 <line:45:22> 'SSL_TEST_CLIENT_CONF *' <LValueToRValue>
|   |       `-DeclRefExpr 0x229ced82e08 <col:22> 'SSL_TEST_CLIENT_CONF *' lvalue ParmVar 0x229ced82ba8 'ctx' 'SSL_TEST_CLIENT_CONF *'
|   |-BinaryOperator 0x229ced82fe0 <line:46:9, col:42> 'char *' '='
|   | |-MemberExpr 0x229ced82f00 <col:9, line:345:64> 'char *' lvalue ->reneg_ciphers 0x229cedd6910
|   | | `-ImplicitCastExpr 0x229ced82ee8 <line:46:9> 'SSL_TEST_CLIENT_CONF *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x229ced82ec8 <col:9> 'SSL_TEST_CLIENT_CONF *' lvalue ParmVar 0x229ced82ba8 'ctx' 'SSL_TEST_CLIENT_CONF *'
|   | `-ImplicitCastExpr 0x229ced82fc8 <col:22, col:42> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x229ced82f88 <col:22, col:42> 'int'
|   |     |-ImplicitCastExpr 0x229ced82f70 <col:22> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x229ced82f30 <col:22> 'int ()' Function 0x229ced7fcf0 'OPENSSL_strdup' 'int ()'
|   |     `-ImplicitCastExpr 0x229ced82fb0 <col:37> 'const char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x229ced82f50 <col:37> 'const char *' lvalue ParmVar 0x229ced82c50 'value' 'const char *'
|   |-DoStmt 0x229ced832d0 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x229ced83290 <line:106:8, line:111:5>
|   | | `-IfStmt 0x229ced83278 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x229ced83160 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x229ced83140 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x229ced83120 <.//openssl//file_jk/before\test\ssl_test_ctx.c:47:20, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | |   |     |-ImplicitCastExpr 0x229ced830f0 <.//openssl//file_jk/before\test\ssl_test_ctx.c:47:20, line:345:64> 'char *' <LValueToRValue>
|   | |   |     | `-MemberExpr 0x229ced83038 <line:47:20, line:345:64> 'char *' lvalue ->reneg_ciphers 0x229cedd6910
|   | |   |     |   `-ImplicitCastExpr 0x229ced83020 <line:47:20> 'SSL_TEST_CLIENT_CONF *' <LValueToRValue>
|   | |   |     |     `-DeclRefExpr 0x229ced83000 <col:20> 'SSL_TEST_CLIENT_CONF *' lvalue ParmVar 0x229ced82ba8 'ctx' 'SSL_TEST_CLIENT_CONF *'
|   | |   |     `-ImplicitCastExpr 0x229ced83108 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   | |   |       `-ParenExpr 0x229ced830d0 <col:17, col:27> 'void *'
|   | |   |         `-CStyleCastExpr 0x229ced830a8 <col:18, col:26> 'void *' <NullToPointer>
|   | |   |           `-IntegerLiteral 0x229ced83068 <col:26> 'int' 0
|   | |   `-CompoundStmt 0x229ced83260 <.//openssl//file_jk/before\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x229ced83238 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x229ced83220 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x229ced83198 <col:13> 'int ()' Function 0x229ced80138 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x229ced83208 <col:28, <scratch space>:18:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x229ced831f0 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x229ced831b8 <col:1> 'char [27]' lvalue "ctx->reneg_ciphers != NULL"
|   | `-IntegerLiteral 0x229ced832a8 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x229ced832f0 <.//openssl//file_jk/before\test\ssl_test_ctx.c:47:39>
|   `-ReturnStmt 0x229ced83320 <line:48:9, col:16>
|     `-IntegerLiteral 0x229ced832f8 <col:16> 'int' 1
|-VarDecl 0x229ced83388 <line:349:1, line:353:1> line:349:24 used ssl_ct_validation_modes 'const test_enum [3]' static cinit
| `-InitListExpr 0x229ced83648 <col:52, line:353:1> 'const test_enum [3]'
|   |-InitListExpr 0x229ced83698 <line:350:5, col:41> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x229ced83700 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x229ced836e8 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x229ced833f0 <col:6> 'char [5]' lvalue "None"
|   | `-DeclRefExpr 0x229ced83410 <col:14> 'int' EnumConstant 0x229cedd20a0 'SSL_TEST_CT_VALIDATION_NONE' 'int'
|   |-InitListExpr 0x229ced83730 <line:351:5, col:53> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x229ced83798 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x229ced83780 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x229ced83480 <col:6> 'char [11]' lvalue "Permissive"
|   | `-DeclRefExpr 0x229ced834a8 <col:20> 'int' EnumConstant 0x229cedd20f8 'SSL_TEST_CT_VALIDATION_PERMISSIVE' 'int'
|   `-InitListExpr 0x229ced837d0 <line:352:5, col:45> 'test_enum':'test_enum'
|     |-ImplicitCastExpr 0x229ced83838 <col:6> 'const char *' <NoOp>
|     | `-ImplicitCastExpr 0x229ced83820 <col:6> 'char *' <ArrayToPointerDecay>
|     |   `-StringLiteral 0x229ced83518 <col:6> 'char [7]' lvalue "Strict"
|     `-DeclRefExpr 0x229ced83538 <col:16> 'int' EnumConstant 0x229cedd2150 'SSL_TEST_CT_VALIDATION_STRICT' 'int'
|-FunctionDecl 0x229ced839d0 <line:355:1, line:365:1> line:355:19 invalid parse_ct_validation 'int (SSL_TEST_CLIENT_CONF *, const char *)' static
| |-ParmVarDecl 0x229ced83880 <col:39, col:61> col:61 used client_conf 'SSL_TEST_CLIENT_CONF *'
| |-ParmVarDecl 0x229ced83900 <line:356:39, col:51> col:51 used value 'const char *'
| `-CompoundStmt 0x229ced84e20 <line:357:1, line:365:1>
|   |-DeclStmt 0x229ced83b18 <line:358:5, col:18>
|   | `-VarDecl 0x229ced83ab0 <col:5, col:9> col:9 used ret_value 'int'
|   |-IfStmt 0x229ced84cf8 <line:359:5, line:362:5>
|   | |-OpaqueValueExpr 0x229ced84ce0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x229ced84cc8 <line:360:41, line:362:5>
|   |   `-ReturnStmt 0x229ced84cb8 <line:361:9, col:16>
|   |     `-IntegerLiteral 0x229ced84c90 <col:16> 'int' 0
|   |-BinaryOperator 0x229ced84dc8 <line:363:5, col:34> 'ssl_ct_validation_t':'ssl_ct_validation_t' '='
|   | |-MemberExpr 0x229ced84d48 <col:5, col:18> 'ssl_ct_validation_t':'ssl_ct_validation_t' lvalue ->ct_validation 0x229cedd68a0
|   | | `-ImplicitCastExpr 0x229ced84d30 <col:5> 'SSL_TEST_CLIENT_CONF *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x229ced84d10 <col:5> 'SSL_TEST_CLIENT_CONF *' lvalue ParmVar 0x229ced83880 'client_conf' 'SSL_TEST_CLIENT_CONF *'
|   | `-ImplicitCastExpr 0x229ced84db0 <col:34> 'ssl_ct_validation_t':'ssl_ct_validation_t' <IntegralCast>
|   |   `-ImplicitCastExpr 0x229ced84d98 <col:34> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x229ced84d78 <col:34> 'int' lvalue Var 0x229ced83ab0 'ret_value' 'int'
|   `-ReturnStmt 0x229ced84e10 <line:364:5, col:12>
|     `-IntegerLiteral 0x229ced84de8 <col:12> 'int' 1
|-FunctionDecl 0x229ced84f10 prev 0x229cedd3c70 <line:367:1, line:371:1> line:367:13 ssl_ct_validation_name 'const char *(ssl_ct_validation_t)'
| |-ParmVarDecl 0x229ced84e60 <col:36, col:56> col:56 used mode 'ssl_ct_validation_t':'ssl_ct_validation_t'
| `-CompoundStmt 0x229ced85170 <line:368:1, line:371:1>
|   `-ReturnStmt 0x229ced85160 <line:369:5, line:370:26>
|     `-CallExpr 0x229ced850c8 <line:369:12, line:370:26> 'const char *'
|       |-ImplicitCastExpr 0x229ced850b0 <line:369:12> 'const char *(*)(const test_enum *, size_t, int)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x229ced84fb8 <col:12> 'const char *(const test_enum *, size_t, int)' Function 0x229ced74820 'enum_name' 'const char *(const test_enum *, size_t, int)'
|       |-ImplicitCastExpr 0x229ced85100 <col:22> 'const test_enum *' <ArrayToPointerDecay>
|       | `-DeclRefExpr 0x229ced84fd8 <col:22> 'const test_enum [3]' lvalue Var 0x229ced83388 'ssl_ct_validation_modes' 'const test_enum [3]'
|       |-ImplicitCastExpr 0x229ced85118 <col:47, col:81> 'size_t':'unsigned long long' <IntegralCast>
|       | `-CallExpr 0x229ced85050 <col:47, col:81> 'int'
|       |   |-ImplicitCastExpr 0x229ced85038 <col:47> 'int (*)()' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x229ced84ff8 <col:47> 'int ()' Function 0x229ced779e8 'OSSL_NELEM' 'int ()'
|       |   `-ImplicitCastExpr 0x229ced85078 <col:58> 'const test_enum *' <ArrayToPointerDecay>
|       |     `-DeclRefExpr 0x229ced85018 <col:58> 'const test_enum [3]' lvalue Var 0x229ced83388 'ssl_ct_validation_modes' 'const test_enum [3]'
|       `-ImplicitCastExpr 0x229ced85148 <line:370:22> 'int' <IntegralCast>
|         `-ImplicitCastExpr 0x229ced85130 <col:22> 'ssl_ct_validation_t':'ssl_ct_validation_t' <LValueToRValue>
|           `-DeclRefExpr 0x229ced85090 <col:22> 'ssl_ct_validation_t':'ssl_ct_validation_t' lvalue ParmVar 0x229ced84e60 'mode' 'ssl_ct_validation_t':'ssl_ct_validation_t'
|-FunctionDecl 0x229ced852e8 <line:37:5, line:40:5> <scratch space>:21:1 used parse_test_resumption_expected 'int (SSL_TEST_CTX *, const char *)' static
| |-ParmVarDecl 0x229ced85198 <.//openssl//file_jk/before\test\ssl_test_ctx.c:373:32, line:37:52> col:52 used ctx 'SSL_TEST_CTX *'
| |-ParmVarDecl 0x229ced85218 <col:57, col:69> col:69 used value 'const char *'
| `-CompoundStmt 0x229ced85508 <line:38:5, line:40:5>
|   `-ReturnStmt 0x229ced854f8 <line:39:9, col:48>
|     `-CallExpr 0x229ced854b0 <col:16, col:48> 'int'
|       |-ImplicitCastExpr 0x229ced85498 <col:16> 'int (*)(const char *, int *)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x229ced853b0 <col:16> 'int (const char *, int *)' Function 0x229ced72fe0 'parse_boolean' 'int (const char *, int *)'
|       |-ImplicitCastExpr 0x229ced854e0 <col:30> 'const char *' <LValueToRValue>
|       | `-DeclRefExpr 0x229ced853d0 <col:30> 'const char *' lvalue ParmVar 0x229ced85218 'value' 'const char *'
|       `-UnaryOperator 0x229ced85458 <col:37, line:373:52> 'int *' prefix '&' cannot overflow
|         `-MemberExpr 0x229ced85428 <line:39:38, line:373:52> 'int' lvalue ->resumption_expected 0x229cedd5960
|           `-ImplicitCastExpr 0x229ced85410 <line:39:38> 'SSL_TEST_CTX *' <LValueToRValue>
|             `-DeclRefExpr 0x229ced853f0 <col:38> 'SSL_TEST_CTX *' lvalue ParmVar 0x229ced85198 'ctx' 'SSL_TEST_CTX *'
|-FunctionDecl 0x229ced85680 <line:37:5, line:40:5> <scratch space>:24:1 used parse_server_broken_session_ticket 'int (SSL_TEST_SERVER_CONF *, const char *)' static
| |-ParmVarDecl 0x229ced85530 <.//openssl//file_jk/before\test\ssl_test_ctx.c:374:32, line:37:52> col:52 used ctx 'SSL_TEST_SERVER_CONF *'
| |-ParmVarDecl 0x229ced855b0 <col:57, col:69> col:69 used value 'const char *'
| `-CompoundStmt 0x229ced85878 <line:38:5, line:40:5>
|   `-ReturnStmt 0x229ced85868 <line:39:9, col:48>
|     `-CallExpr 0x229ced85820 <col:16, col:48> 'int'
|       |-ImplicitCastExpr 0x229ced85808 <col:16> 'int (*)(const char *, int *)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x229ced85748 <col:16> 'int (const char *, int *)' Function 0x229ced72fe0 'parse_boolean' 'int (const char *, int *)'
|       |-ImplicitCastExpr 0x229ced85850 <col:30> 'const char *' <LValueToRValue>
|       | `-DeclRefExpr 0x229ced85768 <col:30> 'const char *' lvalue ParmVar 0x229ced855b0 'value' 'const char *'
|       `-UnaryOperator 0x229ced857f0 <col:37, line:374:62> 'int *' prefix '&' cannot overflow
|         `-MemberExpr 0x229ced857c0 <line:39:38, line:374:62> 'int' lvalue ->broken_session_ticket 0x229cedd6c70
|           `-ImplicitCastExpr 0x229ced857a8 <line:39:38> 'SSL_TEST_SERVER_CONF *' <LValueToRValue>
|             `-DeclRefExpr 0x229ced85788 <col:38> 'SSL_TEST_SERVER_CONF *' lvalue ParmVar 0x229ced85530 'ctx' 'SSL_TEST_SERVER_CONF *'
|-VarDecl 0x229ced858b0 <line:378:1, line:382:1> line:378:24 used ssl_certstatus 'const test_enum [3]' static cinit
| `-InitListExpr 0x229ced85bb0 <col:43, line:382:1> 'const test_enum [3]'
|   |-InitListExpr 0x229ced85c00 <line:379:5, col:39> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x229ced87ca0 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x229ced85c50 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x229ced85918 <col:6> 'char [5]' lvalue "None"
|   | `-DeclRefExpr 0x229ced85938 <col:14> 'int' EnumConstant 0x229cedd63e0 'SSL_TEST_CERT_STATUS_NONE' 'int'
|   |-InitListExpr 0x229ced87cd0 <line:380:5, col:56> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x229ced87d38 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x229ced87d20 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x229ced859a8 <col:6> 'char [13]' lvalue "GoodResponse"
|   | `-DeclRefExpr 0x229ced859d0 <col:22> 'int' EnumConstant 0x229cedd6438 'SSL_TEST_CERT_STATUS_GOOD_RESPONSE' 'int'
|   `-InitListExpr 0x229ced87d70 <line:381:5, col:54> 'test_enum':'test_enum'
|     |-ImplicitCastExpr 0x229ced87dd8 <col:6> 'const char *' <NoOp>
|     | `-ImplicitCastExpr 0x229ced87dc0 <col:6> 'char *' <ArrayToPointerDecay>
|     |   `-StringLiteral 0x229ced85a78 <col:6> 'char [12]' lvalue "BadResponse"
|     `-DeclRefExpr 0x229ced85aa0 <col:21> 'int' EnumConstant 0x229cedd6490 'SSL_TEST_CERT_STATUS_BAD_RESPONSE' 'int'
|-FunctionDecl 0x229ced87f70 <line:384:1, line:394:1> line:384:19 invalid parse_certstatus 'int (SSL_TEST_SERVER_CONF *, const char *)' static
| |-ParmVarDecl 0x229ced87e20 <col:36, col:58> col:58 used server_conf 'SSL_TEST_SERVER_CONF *'
| |-ParmVarDecl 0x229ced87ea0 <line:385:45, col:57> col:57 used value 'const char *'
| `-CompoundStmt 0x229ced88388 <line:386:1, line:394:1>
|   |-DeclStmt 0x229ced880b8 <line:387:5, col:18>
|   | `-VarDecl 0x229ced88050 <col:5, col:9> col:9 used ret_value 'int'
|   |-IfStmt 0x229ced88260 <line:388:5, line:391:5>
|   | |-OpaqueValueExpr 0x229ced88248 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x229ced88230 <line:389:29, line:391:5>
|   |   `-ReturnStmt 0x229ced88220 <line:390:9, col:16>
|   |     `-IntegerLiteral 0x229ced881f8 <col:16> 'int' 0
|   |-BinaryOperator 0x229ced88330 <line:392:5, col:32> 'ssl_cert_status_t':'ssl_cert_status_t' '='
|   | |-MemberExpr 0x229ced882b0 <col:5, col:18> 'ssl_cert_status_t':'ssl_cert_status_t' lvalue ->cert_status 0x229cedd6d00
|   | | `-ImplicitCastExpr 0x229ced88298 <col:5> 'SSL_TEST_SERVER_CONF *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x229ced88278 <col:5> 'SSL_TEST_SERVER_CONF *' lvalue ParmVar 0x229ced87e20 'server_conf' 'SSL_TEST_SERVER_CONF *'
|   | `-ImplicitCastExpr 0x229ced88318 <col:32> 'ssl_cert_status_t':'ssl_cert_status_t' <IntegralCast>
|   |   `-ImplicitCastExpr 0x229ced88300 <col:32> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x229ced882e0 <col:32> 'int' lvalue Var 0x229ced88050 'ret_value' 'int'
|   `-ReturnStmt 0x229ced88378 <line:393:5, col:12>
|     `-IntegerLiteral 0x229ced88350 <col:12> 'int' 1
|-FunctionDecl 0x229ced88478 prev 0x229cedd3e50 <line:396:1, line:400:1> line:396:13 ssl_certstatus_name 'const char *(ssl_cert_status_t)'
| |-ParmVarDecl 0x229ced883c8 <col:33, col:51> col:51 used cert_status 'ssl_cert_status_t':'ssl_cert_status_t'
| `-CompoundStmt 0x229ced886d8 <line:397:1, line:400:1>
|   `-ReturnStmt 0x229ced886c8 <line:398:5, line:399:61>
|     `-CallExpr 0x229ced88630 <line:398:12, line:399:61> 'const char *'
|       |-ImplicitCastExpr 0x229ced88618 <line:398:12> 'const char *(*)(const test_enum *, size_t, int)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x229ced88520 <col:12> 'const char *(const test_enum *, size_t, int)' Function 0x229ced74820 'enum_name' 'const char *(const test_enum *, size_t, int)'
|       |-ImplicitCastExpr 0x229ced88668 <col:22> 'const test_enum *' <ArrayToPointerDecay>
|       | `-DeclRefExpr 0x229ced88540 <col:22> 'const test_enum [3]' lvalue Var 0x229ced858b0 'ssl_certstatus' 'const test_enum [3]'
|       |-ImplicitCastExpr 0x229ced88680 <line:399:22, col:47> 'size_t':'unsigned long long' <IntegralCast>
|       | `-CallExpr 0x229ced885b8 <col:22, col:47> 'int'
|       |   |-ImplicitCastExpr 0x229ced885a0 <col:22> 'int (*)()' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x229ced88560 <col:22> 'int ()' Function 0x229ced779e8 'OSSL_NELEM' 'int ()'
|       |   `-ImplicitCastExpr 0x229ced885e0 <col:33> 'const test_enum *' <ArrayToPointerDecay>
|       |     `-DeclRefExpr 0x229ced88580 <col:33> 'const test_enum [3]' lvalue Var 0x229ced858b0 'ssl_certstatus' 'const test_enum [3]'
|       `-ImplicitCastExpr 0x229ced886b0 <col:50> 'int' <IntegralCast>
|         `-ImplicitCastExpr 0x229ced88698 <col:50> 'ssl_cert_status_t':'ssl_cert_status_t' <LValueToRValue>
|           `-DeclRefExpr 0x229ced885f8 <col:50> 'ssl_cert_status_t':'ssl_cert_status_t' lvalue ParmVar 0x229ced883c8 'cert_status' 'ssl_cert_status_t':'ssl_cert_status_t'
|-FunctionDecl 0x229ced88850 <line:52:5, line:56:5> <scratch space>:27:1 used parse_test_app_data_size 'int (SSL_TEST_CTX *, const char *)' static
| |-ParmVarDecl 0x229ced88700 <.//openssl//file_jk/before\test\ssl_test_ctx.c:404:31, line:52:52> col:52 used ctx 'SSL_TEST_CTX *'
| |-ParmVarDecl 0x229ced88780 <col:57, col:69> col:69 used value 'const char *'
| `-CompoundStmt 0x229ced88b60 <line:53:5, line:56:5>
|   |-BinaryOperator 0x229ced88b08 <line:54:9, col:32> 'int' '='
|   | |-MemberExpr 0x229ced88950 <col:9, line:404:51> 'int' lvalue ->app_data_size 0x229cedd53e0
|   | | `-ImplicitCastExpr 0x229ced88938 <line:54:9> 'SSL_TEST_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x229ced88918 <col:9> 'SSL_TEST_CTX *' lvalue ParmVar 0x229ced88700 'ctx' 'SSL_TEST_CTX *'
|   | `-CallExpr 0x229ced88ac8 <col:22, col:32> 'int'
|   |   |-ImplicitCastExpr 0x229ced88ab0 <col:22> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x229ced88a70 <col:22> 'int ()' Function 0x229ced889a8 'atoi' 'int ()'
|   |   `-ImplicitCastExpr 0x229ced88af0 <col:27> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x229ced88a90 <col:27> 'const char *' lvalue ParmVar 0x229ced88780 'value' 'const char *'
|   `-ReturnStmt 0x229ced88b50 <line:55:9, col:16>
|     `-IntegerLiteral 0x229ced88b28 <col:16> 'int' 1
|-FunctionDecl 0x229ced80c80 <line:52:5, line:56:5> <scratch space>:30:1 used parse_test_max_fragment_size 'int (SSL_TEST_CTX *, const char *)' static
| |-ParmVarDecl 0x229ced88b90 <.//openssl//file_jk/before\test\ssl_test_ctx.c:409:31, line:52:52> col:52 used ctx 'SSL_TEST_CTX *'
| |-ParmVarDecl 0x229ced88c10 <col:57, col:69> col:69 used value 'const char *'
| `-CompoundStmt 0x229ced80ea0 <line:53:5, line:56:5>
|   |-BinaryOperator 0x229ced80e48 <line:54:9, col:32> 'int' '='
|   | |-MemberExpr 0x229ced80d80 <col:9, line:409:51> 'int' lvalue ->max_fragment_size 0x229cedd5450
|   | | `-ImplicitCastExpr 0x229ced80d68 <line:54:9> 'SSL_TEST_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x229ced80d48 <col:9> 'SSL_TEST_CTX *' lvalue ParmVar 0x229ced88b90 'ctx' 'SSL_TEST_CTX *'
|   | `-CallExpr 0x229ced80e08 <col:22, col:32> 'int'
|   |   |-ImplicitCastExpr 0x229ced80df0 <col:22> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x229ced80db0 <col:22> 'int ()' Function 0x229ced889a8 'atoi' 'int ()'
|   |   `-ImplicitCastExpr 0x229ced80e30 <col:27> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x229ced80dd0 <col:27> 'const char *' lvalue ParmVar 0x229ced88c10 'value' 'const char *'
|   `-ReturnStmt 0x229ced80e90 <line:55:9, col:16>
|     `-IntegerLiteral 0x229ced80e68 <col:16> 'int' 1
|-FunctionDecl 0x229ced81020 <line:414:1, line:432:1> line:414:19 invalid parse_expected_tmp_key_type 'int (SSL_TEST_CTX *, const char *)' static
| |-ParmVarDecl 0x229ced80ed0 <col:47, col:61> col:61 used test_ctx 'SSL_TEST_CTX *'
| |-ParmVarDecl 0x229ced80f50 <line:415:47, col:59> col:59 used value 'const char *'
| `-CompoundStmt 0x229ced81a58 <line:416:1, line:432:1>
|   |-DeclStmt 0x229ced81168 <line:417:5, col:12>
|   | `-VarDecl 0x229ced81100 <col:5, col:9> col:9 used nid 'int'
|   |-IfStmt 0x229ced812b0 <line:419:5, line:420:16>
|   | |-BinaryOperator 0x229ced81258 <line:419:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x229ced81228 <.//openssl//file_jk/before\test\ssl_test_ctx.c:419:9> 'const char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x229ced81180 <col:9> 'const char *' lvalue ParmVar 0x229ced80f50 'value' 'const char *'
|   | | `-ImplicitCastExpr 0x229ced81240 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const char *' <BitCast>
|   | |   `-ParenExpr 0x229ced81208 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x229ced811e0 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x229ced811a0 <col:26> 'int' 0
|   | `-ReturnStmt 0x229ced812a0 <.//openssl//file_jk/before\test\ssl_test_ctx.c:420:9, col:16>
|   |   `-IntegerLiteral 0x229ced81278 <col:16> 'int' 0
|   |-BinaryOperator 0x229ced81488 <line:421:5, col:27> 'int' '='
|   | |-DeclRefExpr 0x229ced812c8 <col:5> 'int' lvalue Var 0x229ced81100 'nid' 'int'
|   | `-CallExpr 0x229ced81448 <col:11, col:27> 'int'
|   |   |-ImplicitCastExpr 0x229ced81430 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x229ced813f0 <col:11> 'int ()' Function 0x229ced81328 'OBJ_sn2nid' 'int ()'
|   |   `-ImplicitCastExpr 0x229ced81470 <col:22> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x229ced81410 <col:22> 'const char *' lvalue ParmVar 0x229ced80f50 'value' 'const char *'
|   |-IfStmt 0x229ced816a8 <line:422:5, line:423:31>
|   | |-OpaqueValueExpr 0x229ced81690 <<invalid sloc>> '_Bool'
|   | `-BinaryOperator 0x229ced81670 <col:9, col:31> 'int' '='
|   |   |-DeclRefExpr 0x229ced814c8 <col:9> 'int' lvalue Var 0x229ced81100 'nid' 'int'
|   |   `-CallExpr 0x229ced81630 <col:15, col:31> 'int'
|   |     |-ImplicitCastExpr 0x229ced81618 <col:15> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x229ced815d8 <col:15> 'int ()' Function 0x229ced81510 'OBJ_ln2nid' 'int ()'
|   |     `-ImplicitCastExpr 0x229ced81658 <col:26> 'const char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x229ced815f8 <col:26> 'const char *' lvalue ParmVar 0x229ced80f50 'value' 'const char *'
|   |-IfStmt 0x229ced818c0 <line:425:5, line:426:38>
|   | |-OpaqueValueExpr 0x229ced818a8 <<invalid sloc>> '_Bool'
|   | `-BinaryOperator 0x229ced81888 <col:9, col:38> 'int' '='
|   |   |-DeclRefExpr 0x229ced816e0 <col:9> 'int' lvalue Var 0x229ced81100 'nid' 'int'
|   |   `-CallExpr 0x229ced81848 <col:15, col:38> 'int'
|   |     |-ImplicitCastExpr 0x229ced81830 <col:15> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x229ced817f0 <col:15> 'int ()' Function 0x229ced81728 'EC_curve_nist2nid' 'int ()'
|   |     `-ImplicitCastExpr 0x229ced81870 <col:33> 'const char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x229ced81810 <col:33> 'const char *' lvalue ParmVar 0x229ced80f50 'value' 'const char *'
|   |-IfStmt 0x229ced81948 <line:428:5, line:429:16>
|   | |-OpaqueValueExpr 0x229ced81930 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x229ced81920 <col:9, col:16>
|   |   `-IntegerLiteral 0x229ced818f8 <col:16> 'int' 0
|   |-BinaryOperator 0x229ced81a00 <line:430:5, col:39> 'int' '='
|   | |-MemberExpr 0x229ced81998 <col:5, col:15> 'int' lvalue ->expected_tmp_key_type 0x229cedd59d0
|   | | `-ImplicitCastExpr 0x229ced81980 <col:5> 'SSL_TEST_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x229ced81960 <col:5> 'SSL_TEST_CTX *' lvalue ParmVar 0x229ced80ed0 'test_ctx' 'SSL_TEST_CTX *'
|   | `-ImplicitCastExpr 0x229ced819e8 <col:39> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x229ced819c8 <col:39> 'int' lvalue Var 0x229ced81100 'nid' 'int'
|   `-ReturnStmt 0x229ced81a48 <line:431:5, col:12>
|     `-IntegerLiteral 0x229ced81a20 <col:12> 'int' 1
|-RecordDecl 0x229ced81aa8 <line:437:9, line:440:1> line:437:9 struct definition
| |-FieldDecl 0x229ced81b78 <line:438:5, col:17> col:17 referenced name 'const char *'
| `-FieldDecl 0x229ced89eb0 <line:439:5, col:59> col:11 referenced parse 'int (*)(SSL_TEST_CTX *, const char *)'
|-TypedefDecl 0x229ced89f68 <line:437:1, line:440:3> col:3 referenced ssl_test_ctx_option 'struct ssl_test_ctx_option':'ssl_test_ctx_option'
| `-ElaboratedType 0x229ced89f10 'struct ssl_test_ctx_option' sugar
|   `-RecordType 0x229ced81b40 'ssl_test_ctx_option'
|     `-Record 0x229ced81aa8 ''
|-VarDecl 0x229ced8a078 <line:442:1, col:55> col:34 used ssl_test_ctx_options 'const ssl_test_ctx_option []' static
|-RecordDecl 0x229ced8a720 <line:460:9, line:463:1> line:460:9 struct definition
| |-FieldDecl 0x229ced8a7f8 <line:461:5, col:17> col:17 referenced name 'const char *'
| `-FieldDecl 0x229ced8aa50 <line:462:5, col:63> col:11 referenced parse 'int (*)(SSL_TEST_CLIENT_CONF *, const char *)'
|-TypedefDecl 0x229ced8ab08 <line:460:1, line:463:3> col:3 referenced ssl_test_client_option 'struct ssl_test_client_option':'ssl_test_client_option'
| `-ElaboratedType 0x229ced8aab0 'struct ssl_test_client_option' sugar
|   `-RecordType 0x229ced8a7c0 'ssl_test_client_option'
|     `-Record 0x229ced8a720 ''
|-VarDecl 0x229ced8ac18 <line:465:1, col:61> col:37 used ssl_test_client_options 'const ssl_test_client_option []' static
|-RecordDecl 0x229ced8af78 <line:475:9, line:478:1> line:475:9 struct definition
| |-FieldDecl 0x229ced8b048 <line:476:5, col:17> col:17 referenced name 'const char *'
| `-FieldDecl 0x229ced8b2a0 <line:477:5, col:63> col:11 referenced parse 'int (*)(SSL_TEST_SERVER_CONF *, const char *)'
|-TypedefDecl 0x229ced8b358 <line:475:1, line:478:3> col:3 referenced ssl_test_server_option 'struct ssl_test_server_option':'ssl_test_server_option'
| `-ElaboratedType 0x229ced8b300 'struct ssl_test_server_option' sugar
|   `-RecordType 0x229ced8b010 'ssl_test_server_option'
|     `-Record 0x229ced8af78 ''
|-VarDecl 0x229ced8b468 <line:480:1, col:61> col:37 used ssl_test_server_options 'const ssl_test_server_option []' static
|-FunctionDecl 0x229ced8b808 prev 0x229cedd2368 <line:492:1, line:500:1> line:492:15 used SSL_TEST_CTX_new 'SSL_TEST_CTX *(void)'
| `-CompoundStmt 0x229ced87058 <line:493:1, line:500:1>
|   |-DeclStmt 0x229ced8b920 <line:494:5, col:22>
|   | `-VarDecl 0x229ced8b8b8 <col:5, col:19> col:19 used ret 'SSL_TEST_CTX *'
|   |-BinaryOperator 0x229ced8bb68 <line:495:5, col:38> 'SSL_TEST_CTX *' '='
|   | |-DeclRefExpr 0x229ced8b938 <col:5> 'SSL_TEST_CTX *' lvalue Var 0x229ced8b8b8 'ret' 'SSL_TEST_CTX *'
|   | `-ImplicitCastExpr 0x229ced8bb50 <col:11, col:38> 'SSL_TEST_CTX *' <IntegralToPointer>
|   |   `-CallExpr 0x229ced8bb28 <col:11, col:38> 'int'
|   |     |-ImplicitCastExpr 0x229ced8bb10 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x229ced8ba60 <col:11> 'int ()' Function 0x229ced8b998 'OPENSSL_zalloc' 'int ()'
|   |     `-UnaryExprOrTypeTraitExpr 0x229ced8baf0 <col:26, col:37> 'unsigned long long' sizeof
|   |       `-ParenExpr 0x229ced8bad0 <col:32, col:37> 'SSL_TEST_CTX':'SSL_TEST_CTX' lvalue
|   |         `-UnaryOperator 0x229ced8bab8 <col:33, col:34> 'SSL_TEST_CTX':'SSL_TEST_CTX' lvalue prefix '*' cannot overflow
|   |           `-ImplicitCastExpr 0x229ced8baa0 <col:34> 'SSL_TEST_CTX *' <LValueToRValue>
|   |             `-DeclRefExpr 0x229ced8ba80 <col:34> 'SSL_TEST_CTX *' lvalue Var 0x229ced8b8b8 'ret' 'SSL_TEST_CTX *' non_odr_use_unevaluated
|   |-DoStmt 0x229ced86dd8 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x229ced86d98 <line:106:8, line:111:5>
|   | | `-IfStmt 0x229ced86d80 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x229ced8bca0 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x229ced8bc80 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x229ced8bc60 <.//openssl//file_jk/before\test\ssl_test_ctx.c:496:16, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | |   |     |-ImplicitCastExpr 0x229ced8bc30 <.//openssl//file_jk/before\test\ssl_test_ctx.c:496:16> 'SSL_TEST_CTX *' <LValueToRValue>
|   | |   |     | `-DeclRefExpr 0x229ced8bb88 <col:16> 'SSL_TEST_CTX *' lvalue Var 0x229ced8b8b8 'ret' 'SSL_TEST_CTX *'
|   | |   |     `-ImplicitCastExpr 0x229ced8bc48 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'SSL_TEST_CTX *' <BitCast>
|   | |   |       `-ParenExpr 0x229ced8bc10 <col:17, col:27> 'void *'
|   | |   |         `-CStyleCastExpr 0x229ced8bbe8 <col:18, col:26> 'void *' <NullToPointer>
|   | |   |           `-IntegerLiteral 0x229ced8bba8 <col:26> 'int' 0
|   | |   `-CompoundStmt 0x229ced86d68 <.//openssl//file_jk/before\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x229ced86d40 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x229ced86d28 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x229ced86cb0 <col:13> 'int ()' Function 0x229ced80138 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x229ced86d10 <col:28, <scratch space>:31:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x229ced86cf8 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x229ced86cd0 <col:1> 'char [12]' lvalue "ret != NULL"
|   | `-IntegerLiteral 0x229ced86db0 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x229ced86df8 <.//openssl//file_jk/before\test\ssl_test_ctx.c:496:28>
|   |-BinaryOperator 0x229ced86ea0 <line:497:5, col:26> 'int' '='
|   | |-MemberExpr 0x229ced86e38 <col:5, col:10> 'int' lvalue ->app_data_size 0x229cedd53e0
|   | | `-ImplicitCastExpr 0x229ced86e20 <col:5> 'SSL_TEST_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x229ced86e00 <col:5> 'SSL_TEST_CTX *' lvalue Var 0x229ced8b8b8 'ret' 'SSL_TEST_CTX *'
|   | `-ImplicitCastExpr 0x229ced86e88 <col:26> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x229ced86e68 <col:26> 'const int' lvalue Var 0x229ced72cd8 'default_app_data_size' 'const int'
|   |-BinaryOperator 0x229ced86fa8 <line:498:5, col:30> 'int' '='
|   | |-MemberExpr 0x229ced86f40 <col:5, col:10> 'int' lvalue ->max_fragment_size 0x229cedd5450
|   | | `-ImplicitCastExpr 0x229ced86f28 <col:5> 'SSL_TEST_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x229ced86f08 <col:5> 'SSL_TEST_CTX *' lvalue Var 0x229ced8b8b8 'ret' 'SSL_TEST_CTX *'
|   | `-ImplicitCastExpr 0x229ced86f90 <col:30> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x229ced86f70 <col:30> 'const int' lvalue Var 0x229ced72d98 'default_max_fragment_size' 'const int'
|   `-ReturnStmt 0x229ced87048 <line:499:5, col:12>
|     `-ImplicitCastExpr 0x229ced87030 <col:12> 'SSL_TEST_CTX *' <LValueToRValue>
|       `-DeclRefExpr 0x229ced87010 <col:12> 'SSL_TEST_CTX *' lvalue Var 0x229ced8b8b8 'ret' 'SSL_TEST_CTX *'
|-FunctionDecl 0x229ced87218 <line:502:1, line:511:1> line:502:13 used ssl_test_extra_conf_free_data 'void (SSL_TEST_EXTRA_CONF *)' static
| |-ParmVarDecl 0x229ced87108 <col:43, col:64> col:64 used conf 'SSL_TEST_EXTRA_CONF *'
| `-CompoundStmt 0x229ced87a48 <line:503:1, line:511:1>
|   |-CallExpr 0x229ced873a8 <line:504:5, col:44> 'int'
|   | |-ImplicitCastExpr 0x229ced87390 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x229ced872d8 <col:5> 'int ()' Function 0x229ced7fa98 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x229ced873d0 <col:18, col:31> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x229ced87360 <col:18, col:31> 'char *' lvalue .npn_protocols 0x229cedd67a0
|   |     `-MemberExpr 0x229ced87330 <col:18, col:24> 'SSL_TEST_CLIENT_CONF':'SSL_TEST_CLIENT_CONF' lvalue ->client 0x229cedd6f10
|   |       `-ImplicitCastExpr 0x229ced87318 <col:18> 'SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   |         `-DeclRefExpr 0x229ced872f8 <col:18> 'SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x229ced87108 'conf' 'SSL_TEST_EXTRA_CONF *'
|   |-CallExpr 0x229ced874b8 <line:505:5, col:44> 'int'
|   | |-ImplicitCastExpr 0x229ced874a0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x229ced873e8 <col:5> 'int ()' Function 0x229ced7fa98 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x229ced874e0 <col:18, col:31> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x229ced87470 <col:18, col:31> 'char *' lvalue .npn_protocols 0x229cedd6b90
|   |     `-MemberExpr 0x229ced87440 <col:18, col:24> 'SSL_TEST_SERVER_CONF':'SSL_TEST_SERVER_CONF' lvalue ->server 0x229cedd6fa0
|   |       `-ImplicitCastExpr 0x229ced87428 <col:18> 'SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   |         `-DeclRefExpr 0x229ced87408 <col:18> 'SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x229ced87108 'conf' 'SSL_TEST_EXTRA_CONF *'
|   |-CallExpr 0x229ced875c8 <line:506:5, col:45> 'int'
|   | |-ImplicitCastExpr 0x229ced875b0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x229ced874f8 <col:5> 'int ()' Function 0x229ced7fa98 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x229ced875f0 <col:18, col:32> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x229ced87580 <col:18, col:32> 'char *' lvalue .npn_protocols 0x229cedd6b90
|   |     `-MemberExpr 0x229ced87550 <col:18, col:24> 'SSL_TEST_SERVER_CONF':'SSL_TEST_SERVER_CONF' lvalue ->server2 0x229cedd7008
|   |       `-ImplicitCastExpr 0x229ced87538 <col:18> 'SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   |         `-DeclRefExpr 0x229ced87518 <col:18> 'SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x229ced87108 'conf' 'SSL_TEST_EXTRA_CONF *'
|   |-CallExpr 0x229ced876d8 <line:507:5, col:45> 'int'
|   | |-ImplicitCastExpr 0x229ced876c0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x229ced87608 <col:5> 'int ()' Function 0x229ced7fa98 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x229ced87700 <col:18, col:31> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x229ced87690 <col:18, col:31> 'char *' lvalue .alpn_protocols 0x229cedd6810
|   |     `-MemberExpr 0x229ced87660 <col:18, col:24> 'SSL_TEST_CLIENT_CONF':'SSL_TEST_CLIENT_CONF' lvalue ->client 0x229cedd6f10
|   |       `-ImplicitCastExpr 0x229ced87648 <col:18> 'SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   |         `-DeclRefExpr 0x229ced87628 <col:18> 'SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x229ced87108 'conf' 'SSL_TEST_EXTRA_CONF *'
|   |-CallExpr 0x229ced877e8 <line:508:5, col:45> 'int'
|   | |-ImplicitCastExpr 0x229ced877d0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x229ced87718 <col:5> 'int ()' Function 0x229ced7fa98 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x229ced87810 <col:18, col:31> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x229ced877a0 <col:18, col:31> 'char *' lvalue .alpn_protocols 0x229cedd6c00
|   |     `-MemberExpr 0x229ced87770 <col:18, col:24> 'SSL_TEST_SERVER_CONF':'SSL_TEST_SERVER_CONF' lvalue ->server 0x229cedd6fa0
|   |       `-ImplicitCastExpr 0x229ced87758 <col:18> 'SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   |         `-DeclRefExpr 0x229ced87738 <col:18> 'SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x229ced87108 'conf' 'SSL_TEST_EXTRA_CONF *'
|   |-CallExpr 0x229ced878f8 <line:509:5, col:46> 'int'
|   | |-ImplicitCastExpr 0x229ced878e0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x229ced87828 <col:5> 'int ()' Function 0x229ced7fa98 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x229ced87920 <col:18, col:32> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x229ced878b0 <col:18, col:32> 'char *' lvalue .alpn_protocols 0x229cedd6c00
|   |     `-MemberExpr 0x229ced87880 <col:18, col:24> 'SSL_TEST_SERVER_CONF':'SSL_TEST_SERVER_CONF' lvalue ->server2 0x229cedd7008
|   |       `-ImplicitCastExpr 0x229ced87868 <col:18> 'SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   |         `-DeclRefExpr 0x229ced87848 <col:18> 'SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x229ced87108 'conf' 'SSL_TEST_EXTRA_CONF *'
|   `-CallExpr 0x229ced87a08 <line:510:5, col:44> 'int'
|     |-ImplicitCastExpr 0x229ced879f0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x229ced87938 <col:5> 'int ()' Function 0x229ced7fa98 'OPENSSL_free' 'int ()'
|     `-ImplicitCastExpr 0x229ced87a30 <col:18, col:31> 'char *' <LValueToRValue>
|       `-MemberExpr 0x229ced879c0 <col:18, col:31> 'char *' lvalue .reneg_ciphers 0x229cedd6910
|         `-MemberExpr 0x229ced87990 <col:18, col:24> 'SSL_TEST_CLIENT_CONF':'SSL_TEST_CLIENT_CONF' lvalue ->client 0x229cedd6f10
|           `-ImplicitCastExpr 0x229ced87978 <col:18> 'SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|             `-DeclRefExpr 0x229ced87958 <col:18> 'SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x229ced87108 'conf' 'SSL_TEST_EXTRA_CONF *'
|-FunctionDecl 0x229ced87b48 <line:513:1, line:517:1> line:513:13 used ssl_test_ctx_free_extra_data 'void (SSL_TEST_CTX *)' static
| |-ParmVarDecl 0x229ced87aa0 <col:42, col:56> col:56 used ctx 'SSL_TEST_CTX *'
| `-CompoundStmt 0x229ced85e18 <line:514:1, line:517:1>
|   |-CallExpr 0x229ced85d10 <line:515:5, col:46> 'void'
|   | |-ImplicitCastExpr 0x229ced85cf8 <col:5> 'void (*)(SSL_TEST_EXTRA_CONF *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x229ced87c08 <col:5> 'void (SSL_TEST_EXTRA_CONF *)' Function 0x229ced87218 'ssl_test_extra_conf_free_data' 'void (SSL_TEST_EXTRA_CONF *)'
|   | `-UnaryOperator 0x229ced85c80 <col:35, col:41> 'SSL_TEST_EXTRA_CONF *' prefix '&' cannot overflow
|   |   `-MemberExpr 0x229ced87c60 <col:36, col:41> 'SSL_TEST_EXTRA_CONF':'SSL_TEST_EXTRA_CONF' lvalue ->extra 0x229cedd54e0
|   |     `-ImplicitCastExpr 0x229ced87c48 <col:36> 'SSL_TEST_CTX *' <LValueToRValue>
|   |       `-DeclRefExpr 0x229ced87c28 <col:36> 'SSL_TEST_CTX *' lvalue ParmVar 0x229ced87aa0 'ctx' 'SSL_TEST_CTX *'
|   `-CallExpr 0x229ced85df0 <line:516:5, col:53> 'void'
|     |-ImplicitCastExpr 0x229ced85dd8 <col:5> 'void (*)(SSL_TEST_EXTRA_CONF *)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x229ced85d38 <col:5> 'void (SSL_TEST_EXTRA_CONF *)' Function 0x229ced87218 'ssl_test_extra_conf_free_data' 'void (SSL_TEST_EXTRA_CONF *)'
|     `-UnaryOperator 0x229ced85dc0 <col:35, col:41> 'SSL_TEST_EXTRA_CONF *' prefix '&' cannot overflow
|       `-MemberExpr 0x229ced85d90 <col:36, col:41> 'SSL_TEST_EXTRA_CONF':'SSL_TEST_EXTRA_CONF' lvalue ->resume_extra 0x229cedd5548
|         `-ImplicitCastExpr 0x229ced85d78 <col:36> 'SSL_TEST_CTX *' <LValueToRValue>
|           `-DeclRefExpr 0x229ced85d58 <col:36> 'SSL_TEST_CTX *' lvalue ParmVar 0x229ced87aa0 'ctx' 'SSL_TEST_CTX *'
|-FunctionDecl 0x229ced85ef0 prev 0x229cedd2538 <line:519:1, line:525:1> line:519:6 used SSL_TEST_CTX_free 'void (SSL_TEST_CTX *)'
| |-ParmVarDecl 0x229ced85e48 <col:24, col:38> col:38 used ctx 'SSL_TEST_CTX *'
| `-CompoundStmt 0x229ced862e8 <line:520:1, line:525:1>
|   |-CallExpr 0x229ced86050 <line:521:5, col:37> 'void'
|   | |-ImplicitCastExpr 0x229ced86038 <col:5> 'void (*)(SSL_TEST_CTX *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x229ced85f98 <col:5> 'void (SSL_TEST_CTX *)' Function 0x229ced87b48 'ssl_test_ctx_free_extra_data' 'void (SSL_TEST_CTX *)'
|   | `-ImplicitCastExpr 0x229ced86078 <col:34> 'SSL_TEST_CTX *' <LValueToRValue>
|   |   `-DeclRefExpr 0x229ced85fb8 <col:34> 'SSL_TEST_CTX *' lvalue ParmVar 0x229ced85e48 'ctx' 'SSL_TEST_CTX *'
|   |-CallExpr 0x229ced86130 <line:522:5, col:44> 'int'
|   | |-ImplicitCastExpr 0x229ced86118 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x229ced86090 <col:5> 'int ()' Function 0x229ced7fa98 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x229ced86158 <col:18, col:23> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x229ced860e8 <col:18, col:23> 'char *' lvalue ->expected_npn_protocol 0x229cedd5880
|   |     `-ImplicitCastExpr 0x229ced860d0 <col:18> 'SSL_TEST_CTX *' <LValueToRValue>
|   |       `-DeclRefExpr 0x229ced860b0 <col:18> 'SSL_TEST_CTX *' lvalue ParmVar 0x229ced85e48 'ctx' 'SSL_TEST_CTX *'
|   |-CallExpr 0x229ced86210 <line:523:5, col:45> 'int'
|   | |-ImplicitCastExpr 0x229ced861f8 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x229ced86170 <col:5> 'int ()' Function 0x229ced7fa98 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x229ced86238 <col:18, col:23> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x229ced861c8 <col:18, col:23> 'char *' lvalue ->expected_alpn_protocol 0x229cedd58f0
|   |     `-ImplicitCastExpr 0x229ced861b0 <col:18> 'SSL_TEST_CTX *' <LValueToRValue>
|   |       `-DeclRefExpr 0x229ced86190 <col:18> 'SSL_TEST_CTX *' lvalue ParmVar 0x229ced85e48 'ctx' 'SSL_TEST_CTX *'
|   `-CallExpr 0x229ced862a8 <line:524:5, col:21> 'int'
|     |-ImplicitCastExpr 0x229ced86290 <col:5> 'int (*)()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x229ced86250 <col:5> 'int ()' Function 0x229ced7fa98 'OPENSSL_free' 'int ()'
|     `-ImplicitCastExpr 0x229ced862d0 <col:18> 'SSL_TEST_CTX *' <LValueToRValue>
|       `-DeclRefExpr 0x229ced86270 <col:18> 'SSL_TEST_CTX *' lvalue ParmVar 0x229ced85e48 'ctx' 'SSL_TEST_CTX *'
|-FunctionDecl 0x229ced86550 <line:527:1, line:558:1> line:527:12 invalid parse_client_options 'int (SSL_TEST_CLIENT_CONF *, const int *, const char *)' static
| |-ParmVarDecl 0x229ced86328 <col:33, col:55> col:55 used client 'SSL_TEST_CLIENT_CONF *'
| |-ParmVarDecl 0x229ced863a8 <col:63, col:75> col:75 invalid conf 'const int *'
| |-ParmVarDecl 0x229ced86428 <line:528:33, col:45> col:45 used client_section 'const char *'
| `-CompoundStmt 0x229ced8c9c8 <line:529:1, line:558:1>
|   |-DeclStmt 0x229ced867b0 <line:531:5, col:10>
|   | `-VarDecl 0x229ced86748 <col:5, col:9> col:9 used i 'int'
|   |-DeclStmt 0x229ced86840 <line:532:5, col:13>
|   | `-VarDecl 0x229ced867d8 <col:5, col:12> col:12 used j 'size_t':'unsigned long long'
|   |-DoStmt 0x229ced86b88 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x229ced86b48 <line:106:8, line:111:5>
|   | | `-IfStmt 0x229ced86b30 <line:107:9, line:110:9>
|   | |   |-OpaqueValueExpr 0x229ced86b18 <<invalid sloc>> '_Bool'
|   | |   `-CompoundStmt 0x229ced86b00 <line:107:27, line:110:9>
|   | |     `-CallExpr 0x229ced86ad8 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x229ced86ac0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x229ced86a48 <col:13> 'int ()' Function 0x229ced80138 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x229ced86aa8 <col:28, <scratch space>:32:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x229ced86a90 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x229ced86a68 <col:1> 'char [16]' lvalue "sk_conf != NULL"
|   | `-IntegerLiteral 0x229ced86b60 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x229ced86ba8 <.//openssl//file_jk/before\test\ssl_test_ctx.c:535:32>
|   `-ReturnStmt 0x229ced8c9b8 <line:557:5, col:12>
|     `-IntegerLiteral 0x229ced8c990 <col:12> 'int' 1
|-FunctionDecl 0x229ced8cc40 <line:560:1, line:591:1> line:560:12 invalid parse_server_options 'int (SSL_TEST_SERVER_CONF *, const int *, const char *)' static
| |-ParmVarDecl 0x229ced8ca10 <col:33, col:55> col:55 used server 'SSL_TEST_SERVER_CONF *'
| |-ParmVarDecl 0x229ced8ca90 <col:63, col:75> col:75 invalid conf 'const int *'
| |-ParmVarDecl 0x229ced8cb10 <line:561:33, col:45> col:45 used server_section 'const char *'
| `-CompoundStmt 0x229ced8db10 <line:562:1, line:591:1>
|   |-DeclStmt 0x229ced8cdc0 <line:564:5, col:10>
|   | `-VarDecl 0x229ced8cd58 <col:5, col:9> col:9 used i 'int'
|   |-DeclStmt 0x229ced8ce50 <line:565:5, col:13>
|   | `-VarDecl 0x229ced8cde8 <col:5, col:12> col:12 used j 'size_t':'unsigned long long'
|   |-DoStmt 0x229ced8d0a8 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x229ced8d068 <line:106:8, line:111:5>
|   | | `-IfStmt 0x229ced8d050 <line:107:9, line:110:9>
|   | |   |-OpaqueValueExpr 0x229ced8d038 <<invalid sloc>> '_Bool'
|   | |   `-CompoundStmt 0x229ced8d020 <line:107:27, line:110:9>
|   | |     `-CallExpr 0x229ced8cff8 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x229ced8cfe0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x229ced8cf68 <col:13> 'int ()' Function 0x229ced80138 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x229ced8cfc8 <col:28, <scratch space>:33:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x229ced8cfb0 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x229ced8cf88 <col:1> 'char [16]' lvalue "sk_conf != NULL"
|   | `-IntegerLiteral 0x229ced8d080 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x229ced8d0c8 <.//openssl//file_jk/before\test\ssl_test_ctx.c:568:32>
|   `-ReturnStmt 0x229ced8db00 <line:590:5, col:12>
|     `-IntegerLiteral 0x229ced8dad8 <col:12> 'int' 1
`-FunctionDecl 0x229ced88cb0 <line:593:1, line:662:1> line:593:15 invalid SSL_TEST_CTX_create 'SSL_TEST_CTX *(const int *, const char *)'
  |-ParmVarDecl 0x229ced8db60 <col:35, col:47> col:47 invalid conf 'const int *'
  |-ParmVarDecl 0x229ced8dbe0 <col:53, col:65> col:65 used test_section 'const char *'
  `-CompoundStmt 0x229ced8fca0 <line:594:1, line:662:1>
    |-DeclStmt 0x229ced88e10 <line:596:5, col:22>
    | `-VarDecl 0x229ced88da8 <col:5, col:19> col:19 used ctx 'SSL_TEST_CTX *'
    |-DeclStmt 0x229ced88ea8 <line:597:5, col:10>
    | `-VarDecl 0x229ced88e40 <col:5, col:9> col:9 used i 'int'
    |-DeclStmt 0x229ced88f38 <line:598:5, col:13>
    | `-VarDecl 0x229ced88ed0 <col:5, col:12> col:12 used j 'size_t':'unsigned long long'
    |-DoStmt 0x229ced89190 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
    | |-CompoundStmt 0x229ced89150 <line:106:8, line:111:5>
    | | `-IfStmt 0x229ced89138 <line:107:9, line:110:9>
    | |   |-OpaqueValueExpr 0x229ced89120 <<invalid sloc>> '_Bool'
    | |   `-CompoundStmt 0x229ced89108 <line:107:27, line:110:9>
    | |     `-CallExpr 0x229ced890e0 <line:109:13, col:39> 'int'
    | |       |-ImplicitCastExpr 0x229ced890c8 <col:13> 'int (*)()' <FunctionToPointerDecay>
    | |       | `-DeclRefExpr 0x229ced89050 <col:13> 'int ()' Function 0x229ced80138 'OPENSSL_assert' 'int ()'
    | |       `-UnaryOperator 0x229ced890b0 <col:28, <scratch space>:34:1> 'int' prefix '!' cannot overflow
    | |         `-ImplicitCastExpr 0x229ced89098 <col:1> 'char *' <ArrayToPointerDecay>
    | |           `-StringLiteral 0x229ced89070 <col:1> 'char [16]' lvalue "sk_conf != NULL"
    | `-IntegerLiteral 0x229ced89168 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
    |-NullStmt 0x229ced891b0 <.//openssl//file_jk/before\test\ssl_test_ctx.c:601:32>
    |-BinaryOperator 0x229ced892a0 <line:603:5, col:28> 'SSL_TEST_CTX *' '='
    | |-DeclRefExpr 0x229ced891b8 <col:5> 'SSL_TEST_CTX *' lvalue Var 0x229ced88da8 'ctx' 'SSL_TEST_CTX *'
    | `-CallExpr 0x229ced89280 <col:11, col:28> 'SSL_TEST_CTX *'
    |   `-ImplicitCastExpr 0x229ced89268 <col:11> 'SSL_TEST_CTX *(*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x229ced891f0 <col:11> 'SSL_TEST_CTX *(void)' Function 0x229ced8b808 'SSL_TEST_CTX_new' 'SSL_TEST_CTX *(void)'
    |-DoStmt 0x229ced89538 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
    | |-CompoundStmt 0x229ced894f8 <line:106:8, line:111:5>
    | | `-IfStmt 0x229ced894e0 <line:107:9, line:110:9>
    | |   |-UnaryOperator 0x229ced893d8 <line:107:13, col:24> 'int' prefix '!' cannot overflow
    | |   | `-ParenExpr 0x229ced893b8 <col:14, col:24> 'int'
    | |   |   `-BinaryOperator 0x229ced89398 <.//openssl//file_jk/before\test\ssl_test_ctx.c:604:16, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
    | |   |     |-ImplicitCastExpr 0x229ced89368 <.//openssl//file_jk/before\test\ssl_test_ctx.c:604:16> 'SSL_TEST_CTX *' <LValueToRValue>
    | |   |     | `-DeclRefExpr 0x229ced892c0 <col:16> 'SSL_TEST_CTX *' lvalue Var 0x229ced88da8 'ctx' 'SSL_TEST_CTX *'
    | |   |     `-ImplicitCastExpr 0x229ced89380 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'SSL_TEST_CTX *' <BitCast>
    | |   |       `-ParenExpr 0x229ced89348 <col:17, col:27> 'void *'
    | |   |         `-CStyleCastExpr 0x229ced89320 <col:18, col:26> 'void *' <NullToPointer>
    | |   |           `-IntegerLiteral 0x229ced892e0 <col:26> 'int' 0
    | |   `-CompoundStmt 0x229ced894c8 <.//openssl//file_jk/before\test/testutil.h:107:27, line:110:9>
    | |     `-CallExpr 0x229ced894a0 <line:109:13, col:39> 'int'
    | |       |-ImplicitCastExpr 0x229ced89488 <col:13> 'int (*)()' <FunctionToPointerDecay>
    | |       | `-DeclRefExpr 0x229ced89410 <col:13> 'int ()' Function 0x229ced80138 'OPENSSL_assert' 'int ()'
    | |       `-UnaryOperator 0x229ced89470 <col:28, <scratch space>:35:1> 'int' prefix '!' cannot overflow
    | |         `-ImplicitCastExpr 0x229ced89458 <col:1> 'char *' <ArrayToPointerDecay>
    | |           `-StringLiteral 0x229ced89430 <col:1> 'char [12]' lvalue "ctx != NULL"
    | `-IntegerLiteral 0x229ced89510 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
    |-NullStmt 0x229ced89558 <.//openssl//file_jk/before\test\ssl_test_ctx.c:604:28>
    |-GotoStmt 0x229ced8fa98 <line:655:5, col:10> 'done' 0x229ced8fa48
    |-LabelStmt 0x229ced8fb48 <line:657:2, line:658:26> 'err'
    | `-CallExpr 0x229ced8fb08 <col:5, col:26> 'void'
    |   |-ImplicitCastExpr 0x229ced8faf0 <col:5> 'void (*)(SSL_TEST_CTX *)' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x229ced8fab0 <col:5> 'void (SSL_TEST_CTX *)' Function 0x229ced85ef0 'SSL_TEST_CTX_free' 'void (SSL_TEST_CTX *)'
    |   `-ImplicitCastExpr 0x229ced8fb30 <col:23> 'SSL_TEST_CTX *' <LValueToRValue>
    |     `-DeclRefExpr 0x229ced8fad0 <col:23> 'SSL_TEST_CTX *' lvalue Var 0x229ced88da8 'ctx' 'SSL_TEST_CTX *'
    |-BinaryOperator 0x229ced8fc20 <line:659:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'SSL_TEST_CTX *' '='
    | |-DeclRefExpr 0x229ced8fb60 <.//openssl//file_jk/before\test\ssl_test_ctx.c:659:5> 'SSL_TEST_CTX *' lvalue Var 0x229ced88da8 'ctx' 'SSL_TEST_CTX *'
    | `-ImplicitCastExpr 0x229ced8fc08 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'SSL_TEST_CTX *' <NullToPointer>
    |   `-ParenExpr 0x229ced8fbe8 <col:17, col:27> 'void *'
    |     `-CStyleCastExpr 0x229ced8fbc0 <col:18, col:26> 'void *' <NullToPointer>
    |       `-IntegerLiteral 0x229ced8fb80 <col:26> 'int' 0
    `-LabelStmt 0x229ced8fc88 <.//openssl//file_jk/before\test\ssl_test_ctx.c:660:2, line:661:12> 'done'
      `-ReturnStmt 0x229ced8fc78 <col:5, col:12>
        `-ImplicitCastExpr 0x229ced8fc60 <col:12> 'SSL_TEST_CTX *' <LValueToRValue>
          `-DeclRefExpr 0x229ced8fc40 <col:12> 'SSL_TEST_CTX *' lvalue Var 0x229ced88da8 'ctx' 'SSL_TEST_CTX *'
