TranslationUnitDecl 0x22e87c9ee38 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x22e87c9f6d0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x22e87c9f3d0 '__int128'
|-TypedefDecl 0x22e87c9f740 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x22e87c9f3f0 'unsigned __int128'
|-TypedefDecl 0x22e87c9fa78 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x22e87c9f830 'struct __NSConstantString_tag'
|   `-Record 0x22e87c9f798 '__NSConstantString_tag'
|-TypedefDecl 0x22e87c9fae8 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x22e87c9f010 'unsigned long long'
|-TypedefDecl 0x22e87c9fb80 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x22e87c9fb40 'char *'
|   `-BuiltinType 0x22e87c9eed0 'char'
|-TypedefDecl 0x22e87c9fbf0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x22e87c9fb40 'char *'
|   `-BuiltinType 0x22e87c9eed0 'char'
|-TypedefDecl 0x22e87c9fcb0 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x22e87c9f010 'unsigned long long'
|-TypedefDecl 0x22e87c9fd20 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x22e87c9fb40 'char *'
|   `-BuiltinType 0x22e87c9eed0 'char'
|-FunctionDecl 0x22e897ec420 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x22e897ec4c0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x22e897ec530 <col:21> Implicit
|-FunctionDecl 0x22e897ec588 prev 0x22e897ec420 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x22e897ec2b0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x22e897ec678 <col:21> Inherited Implicit
|-TypedefDecl 0x22e897ec6b8 prev 0x22e87c9fae8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x22e87c9f010 'unsigned long long'
|-TypedefDecl 0x22e897ec760 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x22e897ec730 'size_t' sugar
|   |-Typedef 0x22e897ec6b8 'size_t'
|   `-BuiltinType 0x22e87c9f010 'unsigned long long'
|-TypedefDecl 0x22e897ec7d0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x22e87c9ef70 'long long'
|-TypedefDecl 0x22e897ec840 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x22e87c9ef70 'long long'
|-TypedefDecl 0x22e897ec8b0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x22e87c9efb0 'unsigned short'
|-TypedefDecl 0x22e897ec920 <line:541:1, col:24> col:24 wint_t 'unsigned short'
| `-BuiltinType 0x22e87c9efb0 'unsigned short'
|-TypedefDecl 0x22e897ec990 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x22e87c9efb0 'unsigned short'
|-TypedefDecl 0x22e897eca00 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x22e87c9ef30 'int'
|-TypedefDecl 0x22e897eca70 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x22e87c9ef50 'long'
|-TypedefDecl 0x22e897ecae0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x22e87c9ef70 'long long'
|-TypedefDecl 0x22e897ecb70 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x22e897ecb40 '__time64_t' sugar
|   |-Typedef 0x22e897ecae0 '__time64_t'
|   `-BuiltinType 0x22e87c9ef70 'long long'
|-FunctionDecl 0x22e897ecce8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x22e897ecf08 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x22e89828060 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x22e897ed048 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x22e897ed0c0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x22e897ed138 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x22e897ed1b8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x22e89827e00 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x22e89828140 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x22e89828200 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x22e89828370 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x22e89828320 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x22e898282c0 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x22e898281e0 'struct threadlocaleinfostruct'
|       `-Record 0x22e89831ea0 'threadlocaleinfostruct'
|-TypedefDecl 0x22e89828480 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x22e89828430 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x22e898283d0 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x22e898282a0 'struct threadmbcinfostruct'
|       `-Record 0x22e89828200 'threadmbcinfostruct'
|-RecordDecl 0x22e898284d8 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x22e89828590 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x22e89828650 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x22e898286e0 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x22e89828770 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x22e89828828 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x22e898287d0 'struct localeinfo_struct' sugar
|   `-RecordType 0x22e89828630 'struct localeinfo_struct'
|     `-Record 0x22e89828590 'localeinfo_struct'
|-TypedefDecl 0x22e89828900 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x22e898288b0 'struct localeinfo_struct *'
|   `-ElaboratedType 0x22e898287d0 'struct localeinfo_struct' sugar
|     `-RecordType 0x22e89828630 'struct localeinfo_struct'
|       `-Record 0x22e89828590 'localeinfo_struct'
|-RecordDecl 0x22e89828978 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x22e89828a30 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x22e89828aa8 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x22e89828b68 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x22e89828c00 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x22e89828c70 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x22e89828d28 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x22e89828cd0 'struct localerefcount' sugar
|   `-RecordType 0x22e89828a10 'struct localerefcount'
|     `-Record 0x22e89828978 'localerefcount'
|-RecordDecl 0x22e89831ea0 prev 0x22e89828140 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x22e89831f20 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x22e89831f98 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x22e89832008 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x22e89832078 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x22e898320e8 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x22e898322a8 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x22e89832318 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x22e89832388 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x22e898323f8 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x22e89832468 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x22e898324d8 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x22e89832530 parent 0x22e87c9ee38 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x22e898326c0 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x22e89832730 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x22e898327a0 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x22e89832810 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x22e898328b0 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x22e89832920 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x22e89832a30 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x22e89832b68 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x22e89832c18 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x22e89832bc0 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x22e898281e0 'struct threadlocaleinfostruct'
|     `-Record 0x22e89831ea0 'threadlocaleinfostruct'
|-FunctionDecl 0x22e8982f080 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:47:9, col:142> col:25 _memccpy 'void *(void *, const void *, int, size_t) __attribute__((cdecl))':'void *(void *, const void *, int, size_t)'
| |-ParmVarDecl 0x22e89832ca0 <col:69, col:76> col:76 _Dst 'void *'
| |-ParmVarDecl 0x22e89832d50 <col:87, col:100> col:100 _Src 'const void *'
| |-ParmVarDecl 0x22e89832dd0 <col:111, col:115> col:115 _Val 'int'
| `-ParmVarDecl 0x22e8982ee70 <col:126, col:133> col:133 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x22e8982f448 <line:48:54> col:54 implicit memchr 'void *(const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x22e8982f4e8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x22e8982f550 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x22e8982f5b8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x22e8982f638 prev 0x22e8982f448 <col:38, col:150> col:54 memchr 'void *(const void *, int, unsigned long long)'
| |-ParmVarDecl 0x22e8982f170 <col:94, col:107> col:107 _Buf 'const void *'
| |-ParmVarDecl 0x22e8982f1f0 <col:119, col:123> col:123 _Val 'int'
| `-ParmVarDecl 0x22e8982f268 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x22e8982f9f8 <line:49:24, col:162> col:40 _memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x22e8982f720 <col:77, col:90> col:90 _Buf1 'const void *'
| |-ParmVarDecl 0x22e8982f7a0 <col:125, col:138> col:138 _Buf2 'const void *'
| `-ParmVarDecl 0x22e8982f818 <col:150, col:157> col:157 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x22e8982cea0 <line:50:24, col:192> col:40 _memicmp_l 'int (const void *, const void *, size_t, _locale_t) __attribute__((cdecl))':'int (const void *, const void *, size_t, _locale_t)'
| |-ParmVarDecl 0x22e8982fae0 <col:79, col:92> col:92 _Buf1 'const void *'
| |-ParmVarDecl 0x22e8982fb60 <col:127, col:140> col:140 _Buf2 'const void *'
| |-ParmVarDecl 0x22e8982fbd8 <col:152, col:159> col:159 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x22e8982fc70 <col:175, col:185> col:185 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x22e8982d1a8 <line:51:32> col:32 implicit memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x22e8982d248 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x22e8982d2b0 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x22e8982d318 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x22e8982d398 prev 0x22e8982d1a8 <col:16, col:144> col:32 memcmp 'int (const void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x22e8982cf90 <col:63, col:76> col:76 _Buf1 'const void *'
| |-ParmVarDecl 0x22e8982d010 <col:107, col:120> col:120 _Buf2 'const void *'
| `-ParmVarDecl 0x22e8982d088 <col:132, col:139> col:139 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x22e8982d758 <line:55:17> col:17 implicit memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x22e8982d7f8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x22e8982d860 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x22e8982d8c8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x22e8982d948 prev 0x22e8982d758 <col:1, col:127> col:17 memcpy 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x22e8982d480 <col:54, col:61> col:61 _Dst 'void *'
| |-ParmVarDecl 0x22e8982d500 <col:91, col:104> col:104 _Src 'const void *'
| `-ParmVarDecl 0x22e8982d578 <col:115, col:122> col:122 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x22e89832eb0 <line:57:9, col:191> col:26 memcpy_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x22e8982da58 <col:82, col:89> col:89 _Dst 'void *'
| |-ParmVarDecl 0x22e8982daf0 <col:100, col:108> col:108 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x22e8982db70 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x22e8982dbe8 <col:174, col:182> col:182 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x22e89833278 <line:94:25> col:25 implicit memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x22e89833318 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x22e89833380 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x22e898333e8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x22e89833468 prev 0x22e89833278 <col:9, col:107> col:25 memset 'void *(void *, int, unsigned long long)'
| |-ParmVarDecl 0x22e89832fa0 <col:62, col:69> col:69 _Dst 'void *'
| |-ParmVarDecl 0x22e89833020 <col:80, col:84> col:84 _Val 'int'
| `-ParmVarDecl 0x22e89833098 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x22e898338e8 <line:98:57> col:57 implicit memccpy 'void *(void *, const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x22e89833988 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x22e898339f0 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x22e89833a58 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x22e89833ac0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x22e89833b48 prev 0x22e898338e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:98:187> col:57 memccpy 'void *(void *, const void *, int, unsigned long long)'
| |-ParmVarDecl 0x22e89833630 <col:95, col:102> col:102 _Dst 'void *'
| |-ParmVarDecl 0x22e898336b0 <col:136, col:149> col:149 _Src 'const void *'
| |-ParmVarDecl 0x22e89833730 <col:160, col:164> col:164 _Val 'int'
| |-ParmVarDecl 0x22e898337a8 <col:175, col:182> col:182 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x22e89833c08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memccpy. See online help for details." ""
|-FunctionDecl 0x22e89834058 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:99:190> col:69 memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x22e89833dd0 <col:105, col:118> col:118 _Buf1 'const void *'
| |-ParmVarDecl 0x22e89833ec0 <col:153, col:166> col:166 _Buf2 'const void *'
| |-ParmVarDecl 0x22e89833f38 <col:178, col:185> col:185 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x22e89834110 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memicmp. See online help for details." ""
|-FunctionDecl 0x22e89834500 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:105:40, col:144> col:56 _strset_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x22e89834238 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x22e898342b0 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| `-ParmVarDecl 0x22e89834330 <col:134, col:138> col:138 _Value 'int'
|-FunctionDecl 0x22e898348d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:107:88 _strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x22e898346e0 <col:108, col:114> col:114 _Dest 'char *'
| |-ParmVarDecl 0x22e89834760 <col:126, col:131> col:131 _Value 'int'
| `-DeprecatedAttr 0x22e89834980 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x22e89834d90 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:109:40, col:158> col:56 strcpy_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x22e89834ac8 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x22e89834b40 <col:112, col:120> col:120 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x22e89834bc0 <col:141, col:154> col:154 _Src 'const char *'
|-FunctionDecl 0x22e89835190 <line:112:88> col:88 implicit strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x22e89835230 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x22e89835298 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x22e89835310 prev 0x22e89835190 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:112:88 strcpy 'char *(char *, const char *)'
| |-ParmVarDecl 0x22e89834fa8 <col:142, col:148> col:148 _Dest 'char *'
| |-ParmVarDecl 0x22e89835028 <col:162, col:176> col:176 _Source 'const char *'
| `-DeprecatedAttr 0x22e898353c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x22e89835718 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:114:40, col:161> col:56 strcat_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x22e89835508 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x22e89835580 <col:115, col:123> col:123 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x22e89835600 <col:144, col:157> col:157 _Src 'const char *'
|-FunctionDecl 0x22e89835a40 <line:118:88> col:88 implicit strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x22e89835ae0 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x22e89835b48 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x22e89835bc0 prev 0x22e89835a40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:118:88 strcat 'char *(char *, const char *)'
| |-ParmVarDecl 0x22e898358c0 <col:170, col:176> col:176 _Dest 'char *'
| |-ParmVarDecl 0x22e89835940 <col:190, col:204> col:204 _Source 'const char *'
| `-DeprecatedAttr 0x22e89835c70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x22e89839ff0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:120:32> col:32 implicit used strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x22e8983a090 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x22e8983a0f8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x22e8983a170 prev 0x22e89839ff0 <col:16, col:91> col:32 used strcmp 'int (const char *, const char *)'
| |-ParmVarDecl 0x22e89835db8 <col:46, col:59> col:59 _Str1 'const char *'
| `-ParmVarDecl 0x22e89835e38 <col:73, col:86> col:86 _Str2 'const char *'
|-FunctionDecl 0x22e8983a3c0 <line:121:32> col:32 implicit strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x22e8983a460 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x22e8983a4d0 prev 0x22e8983a3c0 <col:16, col:63> col:32 strlen 'unsigned long long (const char *)'
| `-ParmVarDecl 0x22e8983a250 <col:46, col:59> col:59 _Str 'const char *'
|-FunctionDecl 0x22e8983a7c8 <line:125:1, col:92> col:17 used strnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x22e8983a5a8 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x22e8983a620 <col:76, col:83> col:83 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x22e8983aa18 <line:127:16, line:133:1> line:130:19 strnlen_s 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' static inline
| |-ParmVarDecl 0x22e8983a8a8 <col:56, col:69> col:69 used _Str 'const char *'
| |-ParmVarDecl 0x22e8983a920 <col:80, col:87> col:87 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x22e8983ad48 <line:131:1, line:133:1>
|   `-ReturnStmt 0x22e8983ad38 <line:132:5, col:51>
|     `-ConditionalOperator 0x22e8983ad08 <col:12, col:51> 'unsigned long long'
|       |-ParenExpr 0x22e8983ab78 <col:12, col:20> 'int'
|       | `-BinaryOperator 0x22e8983ab58 <col:13, col:19> 'int' '=='
|       |   |-ImplicitCastExpr 0x22e8983ab28 <col:13> 'const char *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x22e8983aae0 <col:13> 'const char *' lvalue ParmVar 0x22e8983a8a8 '_Str' 'const char *'
|       |   `-ImplicitCastExpr 0x22e8983ab40 <col:19> 'const char *' <NullToPointer>
|       |     `-IntegerLiteral 0x22e8983ab00 <col:19> 'int' 0
|       |-ImplicitCastExpr 0x22e8983acf0 <col:24> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x22e8983ab98 <col:24> 'int' 0
|       `-CallExpr 0x22e8983ac90 <col:28, col:51> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x22e8983ac78 <col:28> 'size_t (*)(const char *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x22e8983abc0 <col:28> 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' Function 0x22e8983a7c8 'strnlen' 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
|         |-ImplicitCastExpr 0x22e8983acc0 <col:36> 'const char *' <LValueToRValue>
|         | `-DeclRefExpr 0x22e8983abe0 <col:36> 'const char *' lvalue ParmVar 0x22e8983a8a8 '_Str' 'const char *'
|         `-ImplicitCastExpr 0x22e8983acd8 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x22e8983ac00 <col:42> 'size_t':'unsigned long long' lvalue ParmVar 0x22e8983a920 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x22e89836018 <line:136:28, col:209> col:44 memmove_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x22e8983ad78 <col:100, col:107> col:107 _Dst 'void *'
| |-ParmVarDecl 0x22e8983adf0 <col:118, col:126> col:126 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x22e8983ae70 <col:168, col:181> col:181 _Src 'const void *'
| `-ParmVarDecl 0x22e89835ee0 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x22e89836320 <line:139:67> col:67 implicit memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x22e898363c0 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x22e89836428 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x22e89836490 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x22e89836510 prev 0x22e89836320 <col:51, col:186> col:67 memmove 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x22e89836108 <col:109, col:116> col:116 _Dst 'void *'
| |-ParmVarDecl 0x22e89836188 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x22e89836200 <col:174, col:181> col:181 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x22e89836748 <line:146:24, col:76> col:40 _strdup 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| `-ParmVarDecl 0x22e898365f8 <col:59, col:72> col:72 _Src 'const char *'
|-FunctionDecl 0x22e89836a10 <line:152:54> col:54 implicit strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x22e89836ab0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x22e89836b18 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x22e89836b90 prev 0x22e89836a10 <col:38, col:100> col:54 strchr 'char *(const char *, int)'
| |-ParmVarDecl 0x22e89836820 <col:68, col:81> col:81 _Str 'const char *'
| `-ParmVarDecl 0x22e898368a0 <col:92, col:96> col:96 _Val 'int'
|-FunctionDecl 0x22e89836df0 <line:153:24, col:103> col:40 _stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x22e89836c70 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x22e89836cf0 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x22e89837070 <line:154:24, col:103> col:40 _strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x22e89836ef0 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x22e89836f70 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x22e89837428 <line:155:24, col:133> col:40 _stricmp_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x22e89837150 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x22e898371d0 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x22e89837248 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x22e89837690 <line:156:24, col:103> col:40 strcoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x22e89837510 <col:56, col:69> col:69 _Str1 'const char *'
| `-ParmVarDecl 0x22e89837590 <col:84, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x22e89837988 <line:157:24, col:133> col:40 _strcoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x22e89837770 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x22e898377f0 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x22e89837868 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x22e89837bf0 <line:158:24, col:104> col:40 _stricoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x22e89837a70 <col:58, col:71> col:71 _Str1 'const char *'
| `-ParmVarDecl 0x22e89837af0 <col:86, col:99> col:99 _Str2 'const char *'
|-FunctionDecl 0x22e8983df60 <line:159:24, col:134> col:40 _stricoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x22e89837cd0 <col:60, col:73> col:73 _Str1 'const char *'
| |-ParmVarDecl 0x22e89837d50 <col:88, col:101> col:101 _Str2 'const char *'
| `-ParmVarDecl 0x22e89837dc8 <col:117, col:127> col:127 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x22e8983e318 <line:160:24, col:167> col:40 _strncoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x22e8983e048 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x22e8983e0c8 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x22e8983e140 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x22e8983e780 <line:161:24, col:195> col:40 _strncoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x22e8983e400 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x22e8983e480 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x22e8983e4f8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x22e8983e570 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x22e8983ea88 <line:162:24, col:167> col:40 _strnicoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x22e8983e870 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x22e8983e8f0 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x22e8983e968 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x22e8983ee20 <line:163:24, col:196> col:40 _strnicoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x22e8983eb70 <col:80, col:93> col:93 _Str1 'const char *'
| |-ParmVarDecl 0x22e8983ebf0 <col:127, col:140> col:140 _Str2 'const char *'
| |-ParmVarDecl 0x22e8983ec68 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x22e8983ece0 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x22e89839138 <line:164:40> col:40 implicit strcspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x22e898391d8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x22e89839240 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x22e898392b8 prev 0x22e89839138 <col:24, col:104> col:40 strcspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x22e89838f10 <col:56, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x22e89838f90 <col:83, col:96> col:96 _Control 'const char *'
|-FunctionDecl 0x22e89839570 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:165:118> col:77 _strerror 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x22e89839490 <col:98, col:111> col:111 _ErrMsg 'const char *'
| `-DeprecatedAttr 0x22e89839618 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x22e898399f0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:166:28, col:155> col:44 _strerror_s 'errno_t (char *, size_t, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *)'
| |-ParmVarDecl 0x22e89839760 <col:85, col:92> col:92 _Buf 'char *'
| |-ParmVarDecl 0x22e898397d8 <col:103, col:110> col:110 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x22e89839858 <col:135, col:148> col:148 _ErrMsg 'const char *'
|-FunctionDecl 0x22e89839d08 <line:168:76> col:76 implicit strerror 'char *(int)' extern
| `-ParmVarDecl 0x22e89839da8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x22e89839e18 prev 0x22e89839d08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:168:93> col:76 strerror 'char *(int)'
| |-ParmVarDecl 0x22e89839bd0 <col:90> col:93 'int'
| `-DeprecatedAttr 0x22e89839ec0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x22e8983b240 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:170:28, col:139> col:44 strerror_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x22e8983b030 <col:84, col:91> col:91 _Buf 'char *'
| |-ParmVarDecl 0x22e8983b0a8 <col:102, col:109> col:109 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x22e8983b128 <col:128, col:132> col:132 _ErrNum 'int'
|-FunctionDecl 0x22e8983b548 <line:173:28, col:109> col:44 _strlwr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x22e8983b328 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x22e8983b3a0 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x22e8983b838 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:175:79 _strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x22e8983b6e8 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x22e8983b8e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x22e8983bcf0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:176:28, col:139> col:44 _strlwr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x22e8983ba28 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x22e8983baa0 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x22e8983bb18 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x22e8983c0f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:178:82 _strlwr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x22e8983be98 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x22e8983bf40 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x22e8983c1a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x22e8983c658 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:180:40, col:206> col:56 strncat_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x22e8983c2e8 <col:98, col:105> col:105 _Dst 'char *'
| |-ParmVarDecl 0x22e8983c360 <col:116, col:124> col:124 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x22e8983c3e0 <col:165, col:178> col:178 _Src 'const char *'
| `-ParmVarDecl 0x22e8983c458 <col:189, col:197> col:197 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x22e8983cad8 <line:186:83> col:83 implicit strncat 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x22e8983cb78 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x22e8983cbe0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x22e8983cc48 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x22e8983ccc8 prev 0x22e8983cad8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:186:83 strncat 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x22e8983c808 <col:161, col:167> col:167 _Dest 'char *'
| |-ParmVarDecl 0x22e8983c888 <col:198, col:212> col:212 _Source 'const char *'
| |-ParmVarDecl 0x22e8983c900 <col:226, col:234> col:234 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x22e8983cd80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x22e8983f120 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:188:40> col:40 implicit strncmp 'int (const char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x22e8983f1c0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x22e8983f228 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x22e8983f290 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x22e8983f310 prev 0x22e8983f120 <col:24, col:163> col:40 strncmp 'int (const char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x22e8983cec8 <col:75, col:88> col:88 _Str1 'const char *'
| |-ParmVarDecl 0x22e8983ef88 <col:122, col:135> col:135 _Str2 'const char *'
| `-ParmVarDecl 0x22e8983f000 <col:147, col:154> col:154 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x22e8983f610 <line:189:24, col:165> col:40 _strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x22e8983f3f8 <col:77, col:90> col:90 _Str1 'const char *'
| |-ParmVarDecl 0x22e8983f478 <col:124, col:137> col:137 _Str2 'const char *'
| `-ParmVarDecl 0x22e8983f4f0 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x22e8983f9a8 <line:190:24, col:195> col:40 _strnicmp_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x22e8983f6f8 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x22e8983f778 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x22e8983f7f0 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x22e8983f868 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x22e8983fd40 <line:192:40, col:203> col:56 strncpy_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x22e8983fa98 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x22e8983fb10 <col:113, col:121> col:121 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x22e8983fb90 <col:162, col:175> col:175 _Src 'const char *'
| `-ParmVarDecl 0x22e8983fc08 <col:186, col:194> col:194 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x22e89838098 <line:195:83> col:83 implicit strncpy 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x22e89838138 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x22e898381a0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x22e89838208 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x22e89838288 prev 0x22e89838098 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:195:83 strncpy 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x22e8983fef0 <col:167, col:173> col:173 _Dest 'char *'
| |-ParmVarDecl 0x22e89837f00 <col:204, col:218> col:218 _Source 'const char *'
| |-ParmVarDecl 0x22e89837f78 <col:232, col:240> col:240 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x22e89838340 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x22e898387f8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:196:40, col:174> col:56 _strnset_s 'errno_t (char *, size_t, int, size_t) __attribute__((cdecl))':'errno_t (char *, size_t, int, size_t)'
| |-ParmVarDecl 0x22e89838488 <col:99, col:106> col:106 _Str 'char *'
| |-ParmVarDecl 0x22e89838500 <col:117, col:124> col:124 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x22e89838580 <col:143, col:147> col:147 _Val 'int'
| `-ParmVarDecl 0x22e898385f8 <col:158, col:165> col:165 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x22e89838c78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:198:83 _strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x22e898389a8 <col:163, col:169> col:169 _Dest 'char *'
| |-ParmVarDecl 0x22e89838a28 <col:181, col:186> col:186 _Val 'int'
| |-ParmVarDecl 0x22e89838aa0 <col:197, col:205> col:205 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x22e89838d30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x22e8983d0c0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:199:54> col:54 implicit strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x22e8983d160 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x22e8983d1c8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x22e8983d240 prev 0x22e8983d0c0 <col:38, col:116> col:54 strpbrk 'char *(const char *, const char *)'
| |-ParmVarDecl 0x22e89838e78 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x22e8983cf50 <col:95, col:108> col:108 _Control 'const char *'
|-FunctionDecl 0x22e8983d4a0 <line:200:54> col:54 implicit strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x22e8983d540 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x22e8983d5a8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x22e8983d620 prev 0x22e8983d4a0 <col:38, col:100> col:54 strrchr 'char *(const char *, int)'
| |-ParmVarDecl 0x22e8983d320 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x22e8983d3a0 <col:93, col:97> col:97 _Ch 'int'
|-FunctionDecl 0x22e8983d7e0 <line:201:9, col:54> col:25 _strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| `-ParmVarDecl 0x22e8983d700 <col:43, col:50> col:50 _Str 'char *'
|-FunctionDecl 0x22e8983da30 <line:202:40> col:40 implicit strspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x22e8983dad0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x22e8983db38 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x22e8983dbb0 prev 0x22e8983da30 <col:24, col:101> col:40 strspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x22e8983d8b8 <col:54, col:67> col:67 _Str 'const char *'
| `-ParmVarDecl 0x22e8983d938 <col:80, col:93> col:93 _Control 'const char *'
|-FunctionDecl 0x22e8983de10 <line:203:70> col:70 implicit strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x22e8983deb0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x22e898b8f90 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x22e898b9008 prev 0x22e8983de10 <col:54, col:130> col:70 strstr 'char *(const char *, const char *)'
| |-ParmVarDecl 0x22e8983dc90 <col:84, col:97> col:97 _Str 'const char *'
| `-ParmVarDecl 0x22e8983dd10 <col:110, col:123> col:123 _SubStr 'const char *'
|-FunctionDecl 0x22e898b9328 <line:204:74> col:74 implicit strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x22e898b93c8 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x22e898b9430 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x22e898b94a8 prev 0x22e898b9328 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:204:134> col:74 strtok 'char *(char *, const char *)'
| |-ParmVarDecl 0x22e898b91a8 <col:95, col:102> col:102 _Str 'char *'
| |-ParmVarDecl 0x22e898b9228 <col:115, col:128> col:128 _Delim 'const char *'
| `-DeprecatedAttr 0x22e898b9558 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x22e898b9938 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:206:36, col:162> col:52 strtok_s 'char *(char *, const char *, char **) __attribute__((cdecl))':'char *(char *, const char *, char **)'
| |-ParmVarDecl 0x22e898b96a0 <col:75, col:82> col:82 _Str 'char *'
| |-ParmVarDecl 0x22e898b9720 <col:95, col:108> col:108 _Delim 'const char *'
| `-ParmVarDecl 0x22e898b97a0 <col:146, col:154> col:154 _Context 'char **'
|-FunctionDecl 0x22e898b9b90 <line:208:28, col:109> col:44 _strupr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x22e898b9a20 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x22e898b9a98 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x22e898b9e10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:210:79 _strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x22e898b9d30 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x22e898b9eb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x22e898b7278 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:211:28, col:130> col:44 _strupr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x22e898b7070 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x22e898b70e8 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x22e898b7160 <col:113, col:123> col:123 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x22e898b7598 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:213:82 _strupr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x22e898b7420 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x22e898b7498 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x22e898b7648 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x22e898b7a60 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:214:44> col:44 implicit strxfrm 'unsigned long long (char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x22e898b7b00 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x22e898b7b68 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x22e898b7bd0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x22e898b7c50 prev 0x22e898b7a60 <col:28, col:155> col:44 strxfrm 'unsigned long long (char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x22e898b7790 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x22e898b7810 <col:115, col:128> col:128 _Src 'const char *'
| `-ParmVarDecl 0x22e898b7888 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x22e898b6098 <line:215:28, col:185> col:44 _strxfrm_l 'size_t (char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x22e898b7d38 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x22e898b7db8 <col:117, col:130> col:130 _Src 'const char *'
| |-ParmVarDecl 0x22e898b7e30 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x22e898b7ea8 <col:168, col:178> col:178 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x22e898b6340 <line:245:71> col:71 implicit strdup 'char *(const char *)' extern
| `-ParmVarDecl 0x22e898b63e0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x22e898b6450 prev 0x22e898b6340 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:245:106> col:71 strdup 'char *(const char *)'
| |-ParmVarDecl 0x22e898b6260 <col:89, col:102> col:102 _Src 'const char *'
| `-DeprecatedAttr 0x22e898b64f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strdup. See online help for details." ""
|-FunctionDecl 0x22e898b6840 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:252:129> col:69 strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x22e898b66c0 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x22e898b6740 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x22e898b68f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strcmpi. See online help for details." ""
|-FunctionDecl 0x22e898b6c38 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:253:129> col:69 stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x22e898b6ab8 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x22e898b6b38 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x22e898b6ce8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details." ""
|-FunctionDecl 0x22e898b7fb8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:254:84> col:56 strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x22e898b6eb0 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x22e898b8060 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strlwr. See online help for details." ""
|-FunctionDecl 0x22e898b8478 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:255:193> col:70 strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x22e898b8260 <col:106, col:119> col:119 _Str1 'const char *'
| |-ParmVarDecl 0x22e898b82e0 <col:153, col:166> col:166 _Str 'const char *'
| |-ParmVarDecl 0x22e898b8358 <col:177, col:184> col:184 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x22e898b8530 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnicmp. See online help for details." ""
|-FunctionDecl 0x22e898b8910 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:256:143> col:57 strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x22e898b86f8 <col:94, col:101> col:101 _Str 'char *'
| |-ParmVarDecl 0x22e898b8778 <col:112, col:116> col:116 _Val 'int'
| |-ParmVarDecl 0x22e898b87f0 <col:127, col:134> col:134 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x22e898b89c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnset. See online help for details." ""
|-FunctionDecl 0x22e898b8c70 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:257:84> col:56 strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x22e898b8b90 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x22e898b8d18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strrev. See online help for details." ""
|-FunctionDecl 0x22e898b3030 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:258:99> col:56 strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x22e898b8ee0 <col:73, col:80> col:80 _Str 'char *'
| |-ParmVarDecl 0x22e898b2f30 <col:91, col:95> col:95 _Val 'int'
| `-DeprecatedAttr 0x22e898b30e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strset. See online help for details." ""
|-FunctionDecl 0x22e898b3388 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:259:84> col:56 strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x22e898b32a8 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x22e898b3430 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strupr. See online help for details." ""
|-FunctionDecl 0x22e898b36c0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:273:24, col:77> col:42 _wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| `-ParmVarDecl 0x22e898b3550 <col:57, col:73> col:73 _Str 'const wchar_t *'
|-FunctionDecl 0x22e898b3a50 <line:280:40, col:167> col:56 wcscat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x22e898b3790 <col:97, col:107> col:107 _Dst 'wchar_t *'
| |-ParmVarDecl 0x22e898b3808 <col:118, col:126> col:126 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x22e898b3880 <col:147, col:163> col:163 _Src 'const wchar_t *'
|-FunctionDecl 0x22e898b3e08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:284:82 wcscat 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x22e898b3bf0 <col:164, col:173> col:173 _Dest 'wchar_t *'
| |-ParmVarDecl 0x22e898b3c68 <col:187, col:204> col:204 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x22e898b3eb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x22e898ba2b8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:288:41> col:41 implicit wcschr 'unsigned short *(const unsigned short *, unsigned short)' extern
| |-ParmVarDecl 0x22e898ba358 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x22e898ba3c0 <<invalid sloc>> <invalid sloc> 'unsigned short'
|-FunctionDecl 0x22e898ba438 prev 0x22e898ba2b8 <col:23, col:88> col:41 wcschr 'unsigned short *(const unsigned short *, unsigned short)'
| |-ParmVarDecl 0x22e898ba098 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x22e898ba110 <col:77, col:85> col:85 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x22e898ba730 <line:289:36> col:36 implicit wcscmp 'int (const unsigned short *, const unsigned short *)' extern
| |-ParmVarDecl 0x22e898ba7d0 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x22e898ba838 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x22e898ba8b0 prev 0x22e898ba730 <col:24, col:101> col:36 wcscmp 'int (const unsigned short *, const unsigned short *)'
| |-ParmVarDecl 0x22e898ba510 <col:50, col:66> col:66 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x22e898ba588 <col:80, col:96> col:96 _Str2 'const wchar_t *'
|-FunctionDecl 0x22e898bab90 <line:291:40, col:164> col:56 wcscpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x22e898ba988 <col:94, col:104> col:104 _Dst 'wchar_t *'
| |-ParmVarDecl 0x22e898baa00 <col:115, col:123> col:123 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x22e898baa78 <col:144, col:160> col:160 _Src 'const wchar_t *'
|-FunctionDecl 0x22e898baea0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:294:82 wcscpy 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x22e898bad30 <col:136, col:145> col:145 _Dest 'wchar_t *'
| |-ParmVarDecl 0x22e898bada8 <col:159, col:176> col:176 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x22e898baf50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x22e898bb2c8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:295:24, col:107> col:39 wcscspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x22e898bb0a8 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x22e898bb120 <col:83, col:99> col:99 _Control 'const wchar_t *'
|-FunctionDecl 0x22e898bb510 <line:296:39> col:39 implicit wcslen 'unsigned long long (const unsigned short *)' extern
| `-ParmVarDecl 0x22e898bb5b0 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x22e898bb620 prev 0x22e898bb510 <col:24, col:73> col:39 wcslen 'unsigned long long (const unsigned short *)'
| `-ParmVarDecl 0x22e898bb3a0 <col:53, col:69> col:69 _Str 'const wchar_t *'
|-FunctionDecl 0x22e898bb908 <line:300:1, col:94> col:16 used wcsnlen 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
| |-ParmVarDecl 0x22e898bb6f0 <col:51, col:67> col:67 _Src 'const wchar_t *'
| `-ParmVarDecl 0x22e898bb768 <col:78, col:85> col:85 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x22e898bbb50 <line:302:16, line:308:1> line:305:18 wcsnlen_s 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' static inline
| |-ParmVarDecl 0x22e898bb9e0 <col:55, col:71> col:71 used _Src 'const wchar_t *'
| |-ParmVarDecl 0x22e898bba58 <col:82, col:89> col:89 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x22e898bbee8 <line:306:1, line:308:1>
|   `-ReturnStmt 0x22e898bbed8 <line:307:5, col:56>
|     `-ConditionalOperator 0x22e898bbea8 <col:12, col:56> 'unsigned long long'
|       |-ParenExpr 0x22e898bbd10 <col:12, col:25> 'int'
|       | `-BinaryOperator 0x22e898bbcf0 <col:13, line:36:27> 'int' '=='
|       |   |-ImplicitCastExpr 0x22e898bbcc0 <line:307:13> 'const wchar_t *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x22e898bbc18 <col:13> 'const wchar_t *' lvalue ParmVar 0x22e898bb9e0 '_Src' 'const wchar_t *'
|       |   `-ImplicitCastExpr 0x22e898bbcd8 <line:36:17, col:27> 'const wchar_t *' <BitCast>
|       |     `-ParenExpr 0x22e898bbca0 <col:17, col:27> 'void *'
|       |       `-CStyleCastExpr 0x22e898bbc78 <col:18, col:26> 'void *' <NullToPointer>
|       |         `-IntegerLiteral 0x22e898bbc38 <col:26> 'int' 0
|       |-ImplicitCastExpr 0x22e898bbe90 <line:307:29> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x22e898bbd30 <col:29> 'int' 0
|       `-CallExpr 0x22e898bbe30 <col:33, col:56> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x22e898bbe18 <col:33> 'size_t (*)(const wchar_t *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x22e898bbd58 <col:33> 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' Function 0x22e898bb908 'wcsnlen' 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
|         |-ImplicitCastExpr 0x22e898bbe60 <col:41> 'const wchar_t *' <LValueToRValue>
|         | `-DeclRefExpr 0x22e898bbd78 <col:41> 'const wchar_t *' lvalue ParmVar 0x22e898bb9e0 '_Src' 'const wchar_t *'
|         `-ImplicitCastExpr 0x22e898bbe78 <col:47> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x22e898bbd98 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x22e898bba58 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x22e898bc2b8 <line:311:40, col:212> col:56 wcsncat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x22e898bbf10 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x22e898bbfc0 <col:119, col:127> col:127 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x22e898bc038 <col:168, col:184> col:184 _Src 'const wchar_t *'
| `-ParmVarDecl 0x22e898bc0b0 <col:195, col:203> col:203 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x22e898bc720 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:316:86 wcsncat 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x22e898bc460 <col:167, col:176> col:176 _Dest 'wchar_t *'
| |-ParmVarDecl 0x22e898bc4d8 <col:207, col:224> col:224 _Source 'const wchar_t *'
| |-ParmVarDecl 0x22e898bc550 <col:238, col:246> col:246 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x22e898bc7d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x22e898bcbe8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:318:36> col:36 implicit wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)' extern
| |-ParmVarDecl 0x22e898bcc88 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| |-ParmVarDecl 0x22e898bccf0 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x22e898bcd58 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x22e898bcdd8 prev 0x22e898bcbe8 <col:24, col:165> col:36 wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)'
| |-ParmVarDecl 0x22e898bc918 <col:71, col:87> col:87 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x22e898bc990 <col:121, col:137> col:137 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x22e898bca08 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x22e898b5100 <line:320:40, col:209> col:56 wcsncpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x22e898bceb8 <col:95, col:105> col:105 _Dst 'wchar_t *'
| |-ParmVarDecl 0x22e898bcf30 <col:116, col:124> col:124 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x22e898b4f50 <col:165, col:181> col:181 _Src 'const wchar_t *'
| `-ParmVarDecl 0x22e898b4fc8 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x22e898b54b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:323:86 wcsncpy 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x22e898b52a8 <col:179, col:188> col:188 _Dest 'wchar_t *'
| |-ParmVarDecl 0x22e898b5320 <col:219, col:236> col:236 _Source 'const wchar_t *'
| |-ParmVarDecl 0x22e898b5398 <col:250, col:258> col:258 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x22e898b5568 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x22e898b58c8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:324:38, col:124> col:56 wcspbrk 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x22e898b56a8 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x22e898b5720 <col:100, col:116> col:116 _Control 'const wchar_t *'
|-FunctionDecl 0x22e898b5b10 <line:325:38, col:109> col:56 wcsrchr 'wchar_t *(const wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(const wchar_t *, wchar_t)'
| |-ParmVarDecl 0x22e898b59a0 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x22e898b5a18 <col:98, col:106> col:106 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x22e898b5d58 <line:326:24, col:106> col:39 wcsspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x22e898b5be8 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x22e898b5c60 <col:82, col:98> col:98 _Control 'const wchar_t *'
|-FunctionDecl 0x22e898c3090 <line:329:23, col:107> col:41 wcsstr 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x22e898b5e30 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x22e898b5ea8 <col:84, col:100> col:100 _SubStr 'const wchar_t *'
|-FunctionDecl 0x22e898c3398 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:330:142> col:76 wcstok 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x22e898c3228 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x22e898c32a0 <col:120, col:136> col:136 _Delim 'const wchar_t *'
| `-DeprecatedAttr 0x22e898c3448 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x22e898c38b0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:332:36, col:173> col:54 wcstok_s 'wchar_t *(wchar_t *, const wchar_t *, wchar_t **) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x22e898c3588 <col:77, col:87> col:87 _Str 'wchar_t *'
| |-ParmVarDecl 0x22e898c3600 <col:100, col:116> col:116 _Delim 'const wchar_t *'
| `-ParmVarDecl 0x22e898c36e0 <col:154, col:165> col:165 _Context 'wchar_t **'
|-FunctionDecl 0x22e898c3bd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:334:105> col:79 _wcserror 'wchar_t *(int) __attribute__((cdecl))':'wchar_t *(int)'
| |-ParmVarDecl 0x22e898c3a58 <col:94, col:98> col:98 _ErrNum 'int'
| `-DeprecatedAttr 0x22e898c3c78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x22e898c1080 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:335:28, col:147> col:44 _wcserror_s 'errno_t (wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, int)'
| |-ParmVarDecl 0x22e898c3db8 <col:89, col:99> col:99 _Buf 'wchar_t *'
| |-ParmVarDecl 0x22e898c3e30 <col:110, col:117> col:117 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x22e898c3eb0 <col:136, col:140> col:140 _ErrNum 'int'
|-FunctionDecl 0x22e898c1330 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:337:122> col:80 __wcserror 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x22e898c1258 <col:102, col:118> col:118 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x22e898c13d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x22e898c17a0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:338:28, col:165> col:44 __wcserror_s 'errno_t (wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x22e898c1518 <col:90, col:100> col:100 _Buffer 'wchar_t *'
| |-ParmVarDecl 0x22e898c1590 <col:114, col:121> col:121 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x22e898c1608 <col:142, col:158> col:158 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x22e898c19f8 <line:341:24, col:103> col:36 _wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x22e898c1880 <col:52, col:68> col:68 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x22e898c18f8 <col:82, col:98> col:98 _Str2 'const wchar_t *'
|-FunctionDecl 0x22e898c1d98 <line:342:24, col:133> col:36 _wcsicmp_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x22e898c1ad0 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x22e898c1b48 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x22e898c1bc0 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x22e898bd058 <line:343:24, col:167> col:36 _wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x22e898c1e78 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x22e898c1ef0 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x22e898c1f68 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x22e898bd4b0 <line:344:24, col:197> col:36 _wcsnicmp_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x22e898bd138 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x22e898bd1b0 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x22e898bd228 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x22e898bd2a0 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x22e898bd908 <line:345:40, col:181> col:56 _wcsnset_s 'errno_t (wchar_t *, size_t, wchar_t, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t, size_t)'
| |-ParmVarDecl 0x22e898bd598 <col:99, col:109> col:109 _Dst 'wchar_t *'
| |-ParmVarDecl 0x22e898bd610 <col:120, col:127> col:127 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x22e898bd688 <col:146, col:154> col:154 _Val 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x22e898bd700 <col:165, col:172> col:172 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x22e898bdd70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:347:86 _wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x22e898bdab0 <col:172, col:181> col:181 _Str 'wchar_t *'
| |-ParmVarDecl 0x22e898bdb28 <col:187, col:196> col:196 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x22e898bdba0 <col:207, col:215> col:215 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x22e898bde28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x22e898be0f0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:348:9, col:59> col:27 _wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| `-ParmVarDecl 0x22e898bdf68 <col:45, col:55> col:55 _Str 'wchar_t *'
|-FunctionDecl 0x22e898be480 <line:349:40, col:159> col:56 _wcsset_s 'errno_t (wchar_t *, size_t, wchar_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t)'
| |-ParmVarDecl 0x22e898be1c0 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x22e898be238 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x22e898be2b0 <col:145, col:153> col:153 _Value 'wchar_t':'unsigned short'
|-FunctionDecl 0x22e898be838 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:351:85 _wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x22e898be620 <col:150, col:159> col:159 _Str 'wchar_t *'
| |-ParmVarDecl 0x22e898be698 <col:165, col:174> col:174 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x22e898be8e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x22e898bec48 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:353:28, col:126> col:44 _wcslwr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x22e898bea28 <col:86, col:96> col:96 _Str 'wchar_t *'
| `-ParmVarDecl 0x22e898beaa0 <col:107, col:114> col:114 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x22e898beeb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:355:82 _wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x22e898bede0 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x22e898bef60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x22e898c23e0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:356:28, col:156> col:44 _wcslwr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x22e898c2118 <col:88, col:98> col:98 _Str 'wchar_t *'
| |-ParmVarDecl 0x22e898c2190 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x22e898c2208 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x22e898c2798 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:358:85 _wcslwr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x22e898c2580 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x22e898c25f8 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x22e898c2848 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x22e898c2af8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:359:28, col:112> col:44 _wcsupr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x22e898c2988 <col:79, col:89> col:89 _Str 'wchar_t *'
| `-ParmVarDecl 0x22e898c2a00 <col:100, col:107> col:107 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x22e898c2d68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:361:82 _wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x22e898c2c90 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x22e898c2e10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x22e898c51e0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:362:28, col:142> col:44 _wcsupr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x22e898c2f50 <col:81, col:91> col:91 _Str 'wchar_t *'
| |-ParmVarDecl 0x22e898c5050 <col:102, col:109> col:109 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x22e898c50c8 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x22e898c54f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:364:85 _wcsupr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x22e898c5380 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x22e898c53f8 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x22e898c55a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x22e898c59a0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:365:28, col:159> col:43 wcsxfrm 'size_t (wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x22e898c56e0 <col:93, col:103> col:103 _Dst 'wchar_t *'
| |-ParmVarDecl 0x22e898c5758 <col:116, col:132> col:132 _Src 'const wchar_t *'
| `-ParmVarDecl 0x22e898c57d0 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x22e898c5de8 <line:366:28, col:189> col:43 _wcsxfrm_l 'size_t (wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x22e898c5a80 <col:96, col:106> col:106 _Dst 'wchar_t *'
| |-ParmVarDecl 0x22e898c5af8 <col:119, col:134> col:134 _Src 'const wchar_t *'
| |-ParmVarDecl 0x22e898c5b70 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x22e898c5be8 <col:172, col:182> col:182 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x22e898c6060 <line:367:24, col:102> col:36 wcscoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x22e898c5ed0 <col:51, col:67> col:67 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x22e898c5f48 <col:81, col:97> col:97 _Str2 'const wchar_t *'
|-FunctionDecl 0x22e898c6348 <line:368:24, col:133> col:36 _wcscoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x22e898c6138 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x22e898c61b0 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x22e898c6228 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x22e898c65a0 <line:369:24, col:104> col:36 _wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x22e898c6428 <col:53, col:69> col:69 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x22e898c64a0 <col:83, col:99> col:99 _Str2 'const wchar_t *'
|-FunctionDecl 0x22e898c6888 <line:370:24, col:133> col:36 _wcsicoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x22e898c6678 <col:55, col:71> col:71 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x22e898c66f0 <col:85, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x22e898c6768 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x22e898c6b78 <line:371:24, col:167> col:36 _wcsncoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x22e898c6968 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x22e898c69e0 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x22e898c6a58 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x22e898c6f00 <line:372:24, col:197> col:36 _wcsncoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x22e898c6c58 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x22e898c6cd0 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x22e898c6d48 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x22e898c6dc0 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x22e898bf188 <line:373:24, col:168> col:36 _wcsnicoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x22e898c6fe8 <col:74, col:90> col:90 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x22e898beff0 <col:124, col:140> col:140 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x22e898bf068 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x22e898bf510 <line:374:24, col:198> col:36 _wcsnicoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x22e898bf268 <col:76, col:92> col:92 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x22e898bf2e0 <col:126, col:142> col:142 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x22e898bf358 <col:154, col:161> col:161 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x22e898bf3d0 <col:181, col:191> col:191 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x22e898bf770 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:403:108> col:74 wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x22e898bf698 <col:88, col:104> col:104 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x22e898bf818 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsdup. See online help for details." ""
|-FunctionDecl 0x22e898bfb50 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:413:135> col:69 wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x22e898bf9d8 <col:84, col:100> col:100 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x22e898bfa50 <col:114, col:130> col:130 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x22e898bfc00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicmp. See online help for details." ""
|-FunctionDecl 0x22e898c0000 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:414:200> col:70 wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x22e898bfdc0 <col:106, col:122> col:122 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x22e898bfe38 <col:156, col:172> col:172 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x22e898bfeb0 <col:184, col:191> col:191 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x22e898c00b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnicmp. See online help for details." ""
|-FunctionDecl 0x22e898c0480 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:415:153> col:60 wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x22e898c0278 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x22e898c02f0 <col:118, col:126> col:126 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x22e898c0368 <col:137, col:144> col:144 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x22e898c0538 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnset. See online help for details." ""
|-FunctionDecl 0x22e898c07d0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:416:90> col:59 wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x22e898c06f8 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x22e898c0878 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsrev. See online help for details." ""
|-FunctionDecl 0x22e898c0ba8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:417:104> col:59 wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x22e898c0a38 <col:76, col:86> col:86 _Str 'wchar_t *'
| |-ParmVarDecl 0x22e898c0ab0 <col:92, col:100> col:100 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x22e898c0c58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsset. See online help for details." ""
|-FunctionDecl 0x22e898c0ef0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:418:90> col:59 wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x22e898c0e18 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x22e898c0f98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcslwr. See online help for details." ""
|-FunctionDecl 0x22e898cc310 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:419:90> col:59 wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x22e898cc238 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x22e898cc3b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsupr. See online help for details." ""
|-FunctionDecl 0x22e898cc6f0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:420:137> col:70 wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x22e898cc578 <col:86, col:102> col:102 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x22e898cc5f0 <col:116, col:132> col:132 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x22e898cc7a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicoll. See online help for details." ""
|-EnumDecl 0x22e898cc8b0 <.//openssl//file_jk/before\test/ssl_test_ctx.h:16:9, line:23:1> line:16:9
| |-EnumConstantDecl 0x22e898cc9d0 <line:17:5, col:24> col:5 referenced SSL_TEST_SUCCESS 'int'
| | `-ConstantExpr 0x22e898cc9b8 <col:24> 'int'
| |   `-IntegerLiteral 0x22e898cc990 <col:24> 'int' 0
| |-EnumConstantDecl 0x22e898cca28 <line:18:5> col:5 referenced SSL_TEST_SERVER_FAIL 'int'
| |-EnumConstantDecl 0x22e898cca80 <line:19:5> col:5 referenced SSL_TEST_CLIENT_FAIL 'int'
| |-EnumConstantDecl 0x22e898ccad8 <line:20:5> col:5 referenced SSL_TEST_INTERNAL_ERROR 'int'
| `-EnumConstantDecl 0x22e898ccb30 <line:22:5> col:5 SSL_TEST_FIRST_HANDSHAKE_FAILED 'int'
|-TypedefDecl 0x22e898ccbe8 <line:16:1, line:23:3> col:3 referenced ssl_test_result_t 'enum ssl_test_result_t':'ssl_test_result_t'
| `-ElaboratedType 0x22e898ccb90 'enum ssl_test_result_t' sugar
|   `-EnumType 0x22e898cc970 'ssl_test_result_t'
|     `-Enum 0x22e898cc8b0 ''
|-EnumDecl 0x22e898ccc58 <line:25:9, line:29:1> line:25:9
| |-EnumConstantDecl 0x22e898ccd70 <line:26:5, col:28> col:5 referenced SSL_TEST_VERIFY_NONE 'int'
| | `-ConstantExpr 0x22e898ccd58 <col:28> 'int'
| |   `-IntegerLiteral 0x22e898ccd30 <col:28> 'int' 0
| |-EnumConstantDecl 0x22e898ccdc8 <line:27:5> col:5 referenced SSL_TEST_VERIFY_ACCEPT_ALL 'int'
| `-EnumConstantDecl 0x22e898cce20 <line:28:5> col:5 referenced SSL_TEST_VERIFY_REJECT_ALL 'int'
|-TypedefDecl 0x22e898cced8 <line:25:1, line:29:3> col:3 referenced ssl_verify_callback_t 'enum ssl_verify_callback_t':'ssl_verify_callback_t'
| `-ElaboratedType 0x22e898cce80 'enum ssl_verify_callback_t' sugar
|   `-EnumType 0x22e898ccd10 'ssl_verify_callback_t'
|     `-Enum 0x22e898ccc58 ''
|-EnumDecl 0x22e898ccf48 <line:31:9, line:36:1> line:31:9
| |-EnumConstantDecl 0x22e898cd060 <line:32:5, col:32> col:5 referenced SSL_TEST_SERVERNAME_NONE 'int'
| | `-ConstantExpr 0x22e898cd048 <col:32> 'int'
| |   `-IntegerLiteral 0x22e898cd020 <col:32> 'int' 0
| |-EnumConstantDecl 0x22e898cb0b0 <line:33:5> col:5 referenced SSL_TEST_SERVERNAME_SERVER1 'int'
| |-EnumConstantDecl 0x22e898cb108 <line:34:5> col:5 referenced SSL_TEST_SERVERNAME_SERVER2 'int'
| `-EnumConstantDecl 0x22e898cb160 <line:35:5> col:5 referenced SSL_TEST_SERVERNAME_INVALID 'int'
|-TypedefDecl 0x22e898cb218 <line:31:1, line:36:3> col:3 referenced ssl_servername_t 'enum ssl_servername_t':'ssl_servername_t'
| `-ElaboratedType 0x22e898cb1c0 'enum ssl_servername_t' sugar
|   `-EnumType 0x22e898cd000 'ssl_servername_t'
|     `-Enum 0x22e898ccf48 ''
|-EnumDecl 0x22e898cb288 <line:38:9, line:42:1> line:38:9
| |-EnumConstantDecl 0x22e898cb3a0 <line:39:5, col:35> col:5 referenced SSL_TEST_SERVERNAME_CB_NONE 'int'
| | `-ConstantExpr 0x22e898cb388 <col:35> 'int'
| |   `-IntegerLiteral 0x22e898cb360 <col:35> 'int' 0
| |-EnumConstantDecl 0x22e898cb3f8 <line:40:5> col:5 referenced SSL_TEST_SERVERNAME_IGNORE_MISMATCH 'int'
| `-EnumConstantDecl 0x22e898cb450 <line:41:5> col:5 referenced SSL_TEST_SERVERNAME_REJECT_MISMATCH 'int'
|-TypedefDecl 0x22e898cb508 <line:38:1, line:42:3> col:3 referenced ssl_servername_callback_t 'enum ssl_servername_callback_t':'ssl_servername_callback_t'
| `-ElaboratedType 0x22e898cb4b0 'enum ssl_servername_callback_t' sugar
|   `-EnumType 0x22e898cb340 'ssl_servername_callback_t'
|     `-Enum 0x22e898cb288 ''
|-EnumDecl 0x22e898cb578 <line:44:9, line:49:1> line:44:9
| |-EnumConstantDecl 0x22e898cb690 <line:45:5, col:38> col:5 referenced SSL_TEST_SESSION_TICKET_IGNORE 'int'
| | `-ConstantExpr 0x22e898cb678 <col:38> 'int'
| |   `-IntegerLiteral 0x22e898cb650 <col:38> 'int' 0
| |-EnumConstantDecl 0x22e898cb6e8 <line:46:5> col:5 referenced SSL_TEST_SESSION_TICKET_YES 'int'
| |-EnumConstantDecl 0x22e898cb740 <line:47:5> col:5 referenced SSL_TEST_SESSION_TICKET_NO 'int'
| `-EnumConstantDecl 0x22e898cb798 <line:48:5> col:5 SSL_TEST_SESSION_TICKET_BROKEN 'int'
|-TypedefDecl 0x22e898cb848 <line:44:1, line:49:3> col:3 referenced ssl_session_ticket_t 'enum ssl_session_ticket_t':'ssl_session_ticket_t'
| `-ElaboratedType 0x22e898cb7f0 'enum ssl_session_ticket_t' sugar
|   `-EnumType 0x22e898cb630 'ssl_session_ticket_t'
|     `-Enum 0x22e898cb578 ''
|-EnumDecl 0x22e898cb8b8 <line:51:9, line:54:1> line:51:9
| |-EnumConstantDecl 0x22e898cb9d0 <line:52:5, col:27> col:5 referenced SSL_TEST_METHOD_TLS 'int'
| | `-ConstantExpr 0x22e898cb9b8 <col:27> 'int'
| |   `-IntegerLiteral 0x22e898cb990 <col:27> 'int' 0
| `-EnumConstantDecl 0x22e898cba28 <line:53:5> col:5 referenced SSL_TEST_METHOD_DTLS 'int'
|-TypedefDecl 0x22e898cbad8 <line:51:1, line:54:3> col:3 referenced ssl_test_method_t 'enum ssl_test_method_t':'ssl_test_method_t'
| `-ElaboratedType 0x22e898cba80 'enum ssl_test_method_t' sugar
|   `-EnumType 0x22e898cb970 'ssl_test_method_t'
|     `-Enum 0x22e898cb8b8 ''
|-EnumDecl 0x22e898cbb48 <line:56:9, line:61:1> line:56:9
| |-EnumConstantDecl 0x22e898cbc60 <line:57:5, col:33> col:5 referenced SSL_TEST_HANDSHAKE_SIMPLE 'int'
| | `-ConstantExpr 0x22e898cbc48 <col:33> 'int'
| |   `-IntegerLiteral 0x22e898cbc20 <col:33> 'int' 0
| |-EnumConstantDecl 0x22e898cbcb8 <line:58:5> col:5 referenced SSL_TEST_HANDSHAKE_RESUME 'int'
| |-EnumConstantDecl 0x22e898cbd10 <line:59:5> col:5 referenced SSL_TEST_HANDSHAKE_RENEG_SERVER 'int'
| `-EnumConstantDecl 0x22e898cbd68 <line:60:5> col:5 referenced SSL_TEST_HANDSHAKE_RENEG_CLIENT 'int'
|-TypedefDecl 0x22e898cbe18 <line:56:1, line:61:3> col:3 referenced ssl_handshake_mode_t 'enum ssl_handshake_mode_t':'ssl_handshake_mode_t'
| `-ElaboratedType 0x22e898cbdc0 'enum ssl_handshake_mode_t' sugar
|   `-EnumType 0x22e898cbc00 'ssl_handshake_mode_t'
|     `-Enum 0x22e898cbb48 ''
|-EnumDecl 0x22e898cbe88 <line:63:9, line:67:1> line:63:9
| |-EnumConstantDecl 0x22e898cbfa0 <line:64:5, col:35> col:5 referenced SSL_TEST_CT_VALIDATION_NONE 'int'
| | `-ConstantExpr 0x22e898cbf88 <col:35> 'int'
| |   `-IntegerLiteral 0x22e898cbf60 <col:35> 'int' 0
| |-EnumConstantDecl 0x22e898cbff8 <line:65:5> col:5 referenced SSL_TEST_CT_VALIDATION_PERMISSIVE 'int'
| `-EnumConstantDecl 0x22e898cc050 <line:66:5> col:5 referenced SSL_TEST_CT_VALIDATION_STRICT 'int'
|-TypedefDecl 0x22e898cf148 <line:63:1, line:67:3> col:3 referenced ssl_ct_validation_t 'enum ssl_ct_validation_t':'ssl_ct_validation_t'
| `-ElaboratedType 0x22e898cf0f0 'enum ssl_ct_validation_t' sugar
|   `-EnumType 0x22e898cbf40 'ssl_ct_validation_t'
|     `-Enum 0x22e898cbe88 ''
|-EnumDecl 0x22e898cf1b8 <line:69:9, line:73:1> line:69:9
| |-EnumConstantDecl 0x22e898cf2d0 <line:70:5, col:33> col:5 referenced SSL_TEST_CERT_STATUS_NONE 'int'
| | `-ConstantExpr 0x22e898cf2b8 <col:33> 'int'
| |   `-IntegerLiteral 0x22e898cf290 <col:33> 'int' 0
| |-EnumConstantDecl 0x22e898cf328 <line:71:5> col:5 referenced SSL_TEST_CERT_STATUS_GOOD_RESPONSE 'int'
| `-EnumConstantDecl 0x22e898cf380 <line:72:5> col:5 referenced SSL_TEST_CERT_STATUS_BAD_RESPONSE 'int'
|-TypedefDecl 0x22e898cf438 <line:69:1, line:73:3> col:3 referenced ssl_cert_status_t 'enum ssl_cert_status_t':'ssl_cert_status_t'
| `-ElaboratedType 0x22e898cf3e0 'enum ssl_cert_status_t' sugar
|   `-EnumType 0x22e898cf270 'ssl_cert_status_t'
|     `-Enum 0x22e898cf1b8 ''
|-RecordDecl 0x22e898cf4a8 <line:78:9, line:89:1> line:78:9 struct definition
| |-FieldDecl 0x22e898cf590 <line:80:5, col:27> col:27 referenced verify_callback 'ssl_verify_callback_t':'ssl_verify_callback_t'
| |-FieldDecl 0x22e898cf620 <line:82:5, col:22> col:22 referenced servername 'ssl_servername_t':'ssl_servername_t'
| |-FieldDecl 0x22e898cf690 <line:84:5, col:11> col:11 referenced npn_protocols 'char *'
| |-FieldDecl 0x22e898cf700 <line:85:5, col:11> col:11 referenced alpn_protocols 'char *'
| |-FieldDecl 0x22e898cf790 <line:86:5, col:25> col:25 referenced ct_validation 'ssl_ct_validation_t':'ssl_ct_validation_t'
| `-FieldDecl 0x22e898cf800 <line:88:5, col:11> col:11 referenced reneg_ciphers 'char *'
|-TypedefDecl 0x22e898cf8b8 <line:78:1, line:89:3> col:3 referenced SSL_TEST_CLIENT_CONF 'struct SSL_TEST_CLIENT_CONF':'SSL_TEST_CLIENT_CONF'
| `-ElaboratedType 0x22e898cf860 'struct SSL_TEST_CLIENT_CONF' sugar
|   `-RecordType 0x22e898cf540 'SSL_TEST_CLIENT_CONF'
|     `-Record 0x22e898cf4a8 ''
|-RecordDecl 0x22e898cf928 <line:91:9, line:101:1> line:91:9 struct definition
| |-FieldDecl 0x22e898cfa10 <line:93:5, col:31> col:31 referenced servername_callback 'ssl_servername_callback_t':'ssl_servername_callback_t'
| |-FieldDecl 0x22e898cfa80 <line:95:5, col:11> col:11 referenced npn_protocols 'char *'
| |-FieldDecl 0x22e898cfaf0 <line:96:5, col:11> col:11 referenced alpn_protocols 'char *'
| |-FieldDecl 0x22e898cfb60 <line:98:5, col:9> col:9 referenced broken_session_ticket 'int'
| `-FieldDecl 0x22e898cfbf0 <line:100:5, col:23> col:23 referenced cert_status 'ssl_cert_status_t':'ssl_cert_status_t'
|-TypedefDecl 0x22e898cfca8 <line:91:1, line:101:3> col:3 referenced SSL_TEST_SERVER_CONF 'struct SSL_TEST_SERVER_CONF':'SSL_TEST_SERVER_CONF'
| `-ElaboratedType 0x22e898cfc50 'struct SSL_TEST_SERVER_CONF' sugar
|   `-RecordType 0x22e898cf9c0 'SSL_TEST_SERVER_CONF'
|     `-Record 0x22e898cf928 ''
|-RecordDecl 0x22e898cfd18 <line:103:9, line:107:1> line:103:9 struct definition
| |-FieldDecl 0x22e898cfe00 <line:104:5, col:26> col:26 referenced client 'SSL_TEST_CLIENT_CONF':'SSL_TEST_CLIENT_CONF'
| |-FieldDecl 0x22e898cfe90 <line:105:5, col:26> col:26 referenced server 'SSL_TEST_SERVER_CONF':'SSL_TEST_SERVER_CONF'
| `-FieldDecl 0x22e898cfef8 <line:106:5, col:26> col:26 referenced server2 'SSL_TEST_SERVER_CONF':'SSL_TEST_SERVER_CONF'
|-TypedefDecl 0x22e898d0028 <line:103:1, line:107:3> col:3 referenced SSL_TEST_EXTRA_CONF 'struct SSL_TEST_EXTRA_CONF':'SSL_TEST_EXTRA_CONF'
| `-ElaboratedType 0x22e898cffd0 'struct SSL_TEST_EXTRA_CONF' sugar
|   `-RecordType 0x22e898cfdb0 'SSL_TEST_EXTRA_CONF'
|     `-Record 0x22e898cfd18 ''
|-RecordDecl 0x22e898c8080 <line:109:9, line:166:1> line:109:9 struct definition
| |-FieldDecl 0x22e898c8170 <line:114:5, col:23> col:23 referenced method 'ssl_test_method_t':'ssl_test_method_t'
| |-FieldDecl 0x22e898c8200 <line:116:5, col:26> col:26 referenced handshake_mode 'ssl_handshake_mode_t':'ssl_handshake_mode_t'
| |-FieldDecl 0x22e898c8270 <line:121:5, col:9> col:9 referenced app_data_size 'int'
| |-FieldDecl 0x22e898c82e0 <line:123:5, col:9> col:9 referenced max_fragment_size 'int'
| |-FieldDecl 0x22e898c8370 <line:129:5, col:25> col:25 referenced extra 'SSL_TEST_EXTRA_CONF':'SSL_TEST_EXTRA_CONF'
| |-FieldDecl 0x22e898c83d8 <line:131:5, col:25> col:25 referenced resume_extra 'SSL_TEST_EXTRA_CONF':'SSL_TEST_EXTRA_CONF'
| |-FieldDecl 0x22e898c8460 <line:137:5, col:23> col:23 referenced expected_result 'ssl_test_result_t':'ssl_test_result_t'
| |-FieldDecl 0x22e898c84d0 <line:141:5, col:9> col:9 referenced expected_client_alert 'int'
| |-FieldDecl 0x22e898c8540 <line:143:5, col:9> col:9 referenced expected_server_alert 'int'
| |-FieldDecl 0x22e898c85b0 <line:146:5, col:9> col:9 referenced expected_protocol 'int'
| |-FieldDecl 0x22e898c8618 <line:157:5, col:22> col:22 referenced expected_servername 'ssl_servername_t':'ssl_servername_t'
| |-FieldDecl 0x22e898c86a0 <line:158:5, col:26> col:26 referenced session_ticket_expected 'ssl_session_ticket_t':'ssl_session_ticket_t'
| |-FieldDecl 0x22e898c8710 <line:160:5, col:11> col:11 referenced expected_npn_protocol 'char *'
| |-FieldDecl 0x22e898c8780 <line:161:5, col:11> col:11 referenced expected_alpn_protocol 'char *'
| |-FieldDecl 0x22e898c87f0 <line:163:5, col:9> col:9 referenced resumption_expected 'int'
| `-FieldDecl 0x22e898c8860 <line:165:5, col:9> col:9 referenced expected_tmp_key_type 'int'
|-TypedefDecl 0x22e898c8918 <line:109:1, line:166:3> col:3 referenced SSL_TEST_CTX 'struct SSL_TEST_CTX':'SSL_TEST_CTX'
| `-ElaboratedType 0x22e898c88c0 'struct SSL_TEST_CTX' sugar
|   `-RecordType 0x22e898c8120 'SSL_TEST_CTX'
|     `-Record 0x22e898c8080 ''
|-FunctionDecl 0x22e898c8ab0 <line:168:1, col:58> col:13 ssl_test_result_name 'const char *(ssl_test_result_t)'
| `-ParmVarDecl 0x22e898c8998 <col:34, col:52> col:52 result 'ssl_test_result_t':'ssl_test_result_t'
|-FunctionDecl 0x22e898c8c70 <line:169:1, col:37> col:13 ssl_alert_name 'const char *(int)'
| `-ParmVarDecl 0x22e898c8b88 <col:28, col:32> col:32 alert 'int'
|-FunctionDecl 0x22e898c8df8 <line:170:1, col:43> col:13 ssl_protocol_name 'const char *(int)'
| `-ParmVarDecl 0x22e898c8d48 <col:31, col:35> col:35 protocol 'int'
|-FunctionDecl 0x22e898c8fe0 <line:171:1, col:75> col:13 ssl_verify_callback_name 'const char *(ssl_verify_callback_t)'
| `-ParmVarDecl 0x22e898c8ec8 <col:38, col:60> col:60 verify_callback 'ssl_verify_callback_t':'ssl_verify_callback_t'
|-FunctionDecl 0x22e898d0240 <line:172:1, col:56> col:13 ssl_servername_name 'const char *(ssl_servername_t)'
| `-ParmVarDecl 0x22e898d0130 <col:33, col:50> col:50 server 'ssl_servername_t':'ssl_servername_t'
|-FunctionDecl 0x22e898d0420 <line:173:1, line:174:61> line:173:13 ssl_servername_callback_name 'const char *(ssl_servername_callback_t)'
| `-ParmVarDecl 0x22e898d0310 <col:42, line:174:42> col:42 servername_callback 'ssl_servername_callback_t':'ssl_servername_callback_t'
|-FunctionDecl 0x22e898d0600 <line:175:1, col:64> col:13 ssl_session_ticket_name 'const char *(ssl_session_ticket_t)'
| `-ParmVarDecl 0x22e898d04f0 <col:37, col:58> col:58 server 'ssl_session_ticket_t':'ssl_session_ticket_t'
|-FunctionDecl 0x22e898d07e0 <line:176:1, col:58> col:13 ssl_test_method_name 'const char *(ssl_test_method_t)'
| `-ParmVarDecl 0x22e898d06d0 <col:34, col:52> col:52 method 'ssl_test_method_t':'ssl_test_method_t'
|-FunctionDecl 0x22e898d09c0 <line:177:1, col:62> col:13 ssl_handshake_mode_name 'const char *(ssl_handshake_mode_t)'
| `-ParmVarDecl 0x22e898d08b0 <col:37, col:58> col:58 mode 'ssl_handshake_mode_t':'ssl_handshake_mode_t'
|-FunctionDecl 0x22e898d0ba0 <line:178:1, col:60> col:13 ssl_ct_validation_name 'const char *(ssl_ct_validation_t)'
| `-ParmVarDecl 0x22e898d0a90 <col:36, col:56> col:56 mode 'ssl_ct_validation_t':'ssl_ct_validation_t'
|-FunctionDecl 0x22e898d0d80 <line:179:1, col:62> col:13 ssl_certstatus_name 'const char *(ssl_cert_status_t)'
| `-ParmVarDecl 0x22e898d0c70 <col:33, col:51> col:51 cert_status 'ssl_cert_status_t':'ssl_cert_status_t'
|-FunctionDecl 0x22e898d1110 <line:185:1, col:77> col:15 invalid SSL_TEST_CTX_create 'SSL_TEST_CTX *(const int *, const char *)'
| |-ParmVarDecl 0x22e898d0e78 <col:35, col:47> col:47 invalid conf 'const int *'
| `-ParmVarDecl 0x22e898d0ef8 <col:53, col:65> col:65 test_section 'const char *'
|-FunctionDecl 0x22e898d12b8 <line:187:1, col:36> col:15 used SSL_TEST_CTX_new 'SSL_TEST_CTX *(void)'
|-FunctionDecl 0x22e898d1488 <line:189:1, col:41> col:6 used SSL_TEST_CTX_free 'void (SSL_TEST_CTX *)'
| `-ParmVarDecl 0x22e898d1380 <col:24, col:38> col:38 ctx 'SSL_TEST_CTX *'
|-FunctionDecl 0x22e898d1808 <.//openssl//file_jk/before\test/testutil.h:85:1, col:60> col:6 add_test 'void (const char *, int (*)())'
| |-ParmVarDecl 0x22e898d1560 <col:15, col:27> col:27 test_case_name 'const char *'
| `-ParmVarDecl 0x22e898d16c0 <col:43, col:59> col:49 test_fn 'int (*)()'
|-FunctionDecl 0x22e898d1cd8 <line:86:1, col:80> col:6 add_all_tests 'void (const char *, int (*)(int), int)'
| |-ParmVarDecl 0x22e898d18e8 <col:20, col:32> col:32 test_case_name 'const char *'
| |-ParmVarDecl 0x22e898d1ae8 <col:48, col:70> col:54 test_fn 'int (*)(int)'
| `-ParmVarDecl 0x22e898d1b68 <col:73, col:77> col:77 num 'int'
|-FunctionDecl 0x22e898d1ea0 <line:87:1, col:41> col:5 run_tests 'int (const char *)'
| `-ParmVarDecl 0x22e898d1dc0 <col:15, col:27> col:27 test_prog_name 'const char *'
|-FunctionDecl 0x22e8987e080 <line:97:1, col:67> col:5 strings_equal 'int (const char *, const char *, const char *)'
| |-ParmVarDecl 0x22e898d1f78 <col:19, col:31> col:31 desc 'const char *'
| |-ParmVarDecl 0x22e898d1ff8 <col:37, col:49> col:49 s1 'const char *'
| `-ParmVarDecl 0x22e898d2078 <col:53, col:65> col:65 s2 'const char *'
|-VarDecl 0x22e8987e168 <.//openssl//file_jk/before\test\ssl_test_ctx.c:19:1, col:42> col:18 used default_app_data_size 'const int' static cinit
| `-IntegerLiteral 0x22e8987e1d0 <col:42> 'int' 256
|-VarDecl 0x22e8987e228 <line:21:1, col:46> col:18 used default_max_fragment_size 'const int' static cinit
| `-IntegerLiteral 0x22e8987e290 <col:46> 'int' 512
|-FunctionDecl 0x22e8987e470 <line:23:1, line:34:1> line:23:12 used parse_boolean 'int (const char *, int *)' static
| |-ParmVarDecl 0x22e8987e2e8 <col:26, col:38> col:38 used value 'const char *'
| |-ParmVarDecl 0x22e8987e368 <col:45, col:50> col:50 used result 'int *'
| `-CompoundStmt 0x22e8987ec98 <line:24:1, line:34:1>
|   |-IfStmt 0x22e8987ec38 <line:25:5, line:32:5> has_else
|   | |-BinaryOperator 0x22e8987e880 <line:25:9, col:37> 'int' '=='
|   | | |-CallExpr 0x22e8987e7e0 <col:9, col:32> 'int'
|   | | | |-ImplicitCastExpr 0x22e8987e7c8 <col:9> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x22e8987e6b8 <col:9> 'int (const char *, const char *)' Function 0x22e8987e538 'strcasecmp' 'int (const char *, const char *)'
|   | | | |-ImplicitCastExpr 0x22e8987e810 <col:20> 'const char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x22e8987e6f0 <col:20> 'const char *' lvalue ParmVar 0x22e8987e2e8 'value' 'const char *'
|   | | | `-ImplicitCastExpr 0x22e8987e840 <col:27> 'const char *' <NoOp>
|   | | |   `-ImplicitCastExpr 0x22e8987e828 <col:27> 'char *' <ArrayToPointerDecay>
|   | | |     `-StringLiteral 0x22e8987e748 <col:27> 'char [4]' lvalue "Yes"
|   | | `-IntegerLiteral 0x22e8987e858 <col:37> 'int' 0
|   | |-CompoundStmt 0x22e8987e970 <col:40, line:28:5>
|   | | |-BinaryOperator 0x22e8987e918 <line:26:9, col:19> 'int' '='
|   | | | |-UnaryOperator 0x22e8987e8d8 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
|   | | | | `-ImplicitCastExpr 0x22e8987e8c0 <col:10> 'int *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x22e8987e8a0 <col:10> 'int *' lvalue ParmVar 0x22e8987e368 'result' 'int *'
|   | | | `-IntegerLiteral 0x22e8987e8f0 <col:19> 'int' 1
|   | | `-ReturnStmt 0x22e8987e960 <line:27:9, col:16>
|   | |   `-IntegerLiteral 0x22e8987e938 <col:16> 'int' 1
|   | `-IfStmt 0x22e8987ec20 <line:29:10, line:32:5>
|   |   |-BinaryOperator 0x22e8987eb10 <line:29:14, col:41> 'int' '=='
|   |   | |-CallExpr 0x22e8987ea70 <col:14, col:36> 'int'
|   |   | | |-ImplicitCastExpr 0x22e8987ea58 <col:14> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   | | | `-DeclRefExpr 0x22e8987e990 <col:14> 'int (const char *, const char *)' Function 0x22e8987e538 'strcasecmp' 'int (const char *, const char *)'
|   |   | | |-ImplicitCastExpr 0x22e8987eaa0 <col:25> 'const char *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x22e8987e9b0 <col:25> 'const char *' lvalue ParmVar 0x22e8987e2e8 'value' 'const char *'
|   |   | | `-ImplicitCastExpr 0x22e8987ead0 <col:32> 'const char *' <NoOp>
|   |   | |   `-ImplicitCastExpr 0x22e8987eab8 <col:32> 'char *' <ArrayToPointerDecay>
|   |   | |     `-StringLiteral 0x22e8987ea08 <col:32> 'char [3]' lvalue "No"
|   |   | `-IntegerLiteral 0x22e8987eae8 <col:41> 'int' 0
|   |   `-CompoundStmt 0x22e8987ec00 <col:44, line:32:5>
|   |     |-BinaryOperator 0x22e8987eba8 <line:30:9, col:19> 'int' '='
|   |     | |-UnaryOperator 0x22e8987eb68 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
|   |     | | `-ImplicitCastExpr 0x22e8987eb50 <col:10> 'int *' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x22e8987eb30 <col:10> 'int *' lvalue ParmVar 0x22e8987e368 'result' 'int *'
|   |     | `-IntegerLiteral 0x22e8987eb80 <col:19> 'int' 0
|   |     `-ReturnStmt 0x22e8987ebf0 <line:31:9, col:16>
|   |       `-IntegerLiteral 0x22e8987ebc8 <col:16> 'int' 1
|   `-ReturnStmt 0x22e8987ec88 <line:33:5, col:12>
|     `-IntegerLiteral 0x22e8987ec60 <col:12> 'int' 0
|-FunctionDecl 0x22e8987e538 <line:25:9> col:9 implicit used strcasecmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x22e8987e5d8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x22e8987e640 <<invalid sloc>> <invalid sloc> 'const char *'
|-RecordDecl 0x22e8987ecb8 <line:59:9, line:62:1> line:59:9 struct definition
| |-FieldDecl 0x22e8987ed88 <line:60:5, col:17> col:17 referenced name 'const char *'
| `-FieldDecl 0x22e8987edf8 <line:61:5, col:9> col:9 referenced value 'int'
|-TypedefDecl 0x22e8987eea8 <line:59:1, line:62:3> col:3 referenced test_enum 'struct test_enum':'test_enum'
| `-ElaboratedType 0x22e8987ee50 'struct test_enum' sugar
|   `-RecordType 0x22e8987ed50 'test_enum'
|     `-Record 0x22e8987ecb8 ''
|-FunctionDecl 0x22e8987b2d0 <line:65:1, line:76:1> line:65:19 invalid parse_enum 'int (const test_enum *, size_t, int *, const char *)' static
| |-ParmVarDecl 0x22e8987afb0 <col:30, col:47> col:47 used enums 'const test_enum *'
| |-ParmVarDecl 0x22e8987b028 <col:54, col:61> col:61 used num_enums 'size_t':'unsigned long long'
| |-ParmVarDecl 0x22e8987b0a8 <line:66:30, col:35> col:35 used value 'int *'
| |-ParmVarDecl 0x22e8987b128 <col:42, col:54> col:54 used name 'const char *'
| `-CompoundStmt 0x22e8987b9c8 <line:67:1, line:76:1>
|   |-DeclStmt 0x22e8987b420 <line:68:5, col:13>
|   | `-VarDecl 0x22e8987b3b8 <col:5, col:12> col:12 used i 'size_t':'unsigned long long'
|   |-ForStmt 0x22e8987b958 <line:69:5, line:74:5>
|   | |-BinaryOperator 0x22e8987b4b0 <line:69:10, col:14> 'size_t':'unsigned long long' '='
|   | | |-DeclRefExpr 0x22e8987b438 <col:10> 'size_t':'unsigned long long' lvalue Var 0x22e8987b3b8 'i' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x22e8987b498 <col:14> 'size_t':'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x22e8987b470 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x22e8987b540 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x22e8987b510 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x22e8987b4d0 <col:17> 'size_t':'unsigned long long' lvalue Var 0x22e8987b3b8 'i' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x22e8987b528 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x22e8987b4f0 <col:21> 'size_t':'unsigned long long' lvalue ParmVar 0x22e8987b028 'num_enums' 'size_t':'unsigned long long'
|   | |-UnaryOperator 0x22e8987b580 <col:32, col:33> 'size_t':'unsigned long long' postfix '++'
|   | | `-DeclRefExpr 0x22e8987b560 <col:32> 'size_t':'unsigned long long' lvalue Var 0x22e8987b3b8 'i' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x22e8987b940 <col:37, line:74:5>
|   |   `-IfStmt 0x22e8987b928 <line:70:9, line:73:9>
|   |     |-BinaryOperator 0x22e8987b768 <line:70:13, col:44> 'int' '=='
|   |     | |-CallExpr 0x22e8987b6e0 <col:13, col:39> 'int'
|   |     | | |-ImplicitCastExpr 0x22e8987b6c8 <col:13> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |     | | | `-DeclRefExpr 0x22e8987b598 <col:13> 'int (const char *, const char *)' Function 0x22e8983a170 'strcmp' 'int (const char *, const char *)'
|   |     | | |-ImplicitCastExpr 0x22e8987b710 <col:20, col:29> 'const char *' <LValueToRValue>
|   |     | | | `-MemberExpr 0x22e8987b648 <col:20, col:29> 'const char *const' lvalue .name 0x22e8987ed88
|   |     | | |   `-ArraySubscriptExpr 0x22e8987b628 <col:20, col:27> 'const test_enum':'const test_enum' lvalue
|   |     | | |     |-ImplicitCastExpr 0x22e8987b5f8 <col:20> 'const test_enum *' <LValueToRValue>
|   |     | | |     | `-DeclRefExpr 0x22e8987b5b8 <col:20> 'const test_enum *' lvalue ParmVar 0x22e8987afb0 'enums' 'const test_enum *'
|   |     | | |     `-ImplicitCastExpr 0x22e8987b610 <col:26> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | | |       `-DeclRefExpr 0x22e8987b5d8 <col:26> 'size_t':'unsigned long long' lvalue Var 0x22e8987b3b8 'i' 'size_t':'unsigned long long'
|   |     | | `-ImplicitCastExpr 0x22e8987b728 <col:35> 'const char *' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x22e8987b678 <col:35> 'const char *' lvalue ParmVar 0x22e8987b128 'name' 'const char *'
|   |     | `-IntegerLiteral 0x22e8987b740 <col:44> 'int' 0
|   |     `-CompoundStmt 0x22e8987b908 <col:47, line:73:9>
|   |       |-BinaryOperator 0x22e8987b8b0 <line:71:13, col:31> 'int' '='
|   |       | |-UnaryOperator 0x22e8987b7c0 <col:13, col:14> 'int' lvalue prefix '*' cannot overflow
|   |       | | `-ImplicitCastExpr 0x22e8987b7a8 <col:14> 'int *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x22e8987b788 <col:14> 'int *' lvalue ParmVar 0x22e8987b0a8 'value' 'int *'
|   |       | `-ImplicitCastExpr 0x22e8987b898 <col:22, col:31> 'int' <LValueToRValue>
|   |       |   `-MemberExpr 0x22e8987b868 <col:22, col:31> 'const int' lvalue .value 0x22e8987edf8
|   |       |     `-ArraySubscriptExpr 0x22e8987b848 <col:22, col:29> 'const test_enum':'const test_enum' lvalue
|   |       |       |-ImplicitCastExpr 0x22e8987b818 <col:22> 'const test_enum *' <LValueToRValue>
|   |       |       | `-DeclRefExpr 0x22e8987b7d8 <col:22> 'const test_enum *' lvalue ParmVar 0x22e8987afb0 'enums' 'const test_enum *'
|   |       |       `-ImplicitCastExpr 0x22e8987b830 <col:28> 'size_t':'unsigned long long' <LValueToRValue>
|   |       |         `-DeclRefExpr 0x22e8987b7f8 <col:28> 'size_t':'unsigned long long' lvalue Var 0x22e8987b3b8 'i' 'size_t':'unsigned long long'
|   |       `-ReturnStmt 0x22e8987b8f8 <line:72:13, col:20>
|   |         `-IntegerLiteral 0x22e8987b8d0 <col:20> 'int' 1
|   `-ReturnStmt 0x22e8987b9b8 <line:75:5, col:12>
|     `-IntegerLiteral 0x22e8987b990 <col:12> 'int' 0
|-FunctionDecl 0x22e8987bc70 <line:78:1, line:88:1> line:78:20 used enum_name 'const char *(const test_enum *, size_t, int)' static
| |-ParmVarDecl 0x22e8987ba00 <col:30, col:47> col:47 used enums 'const test_enum *'
| |-ParmVarDecl 0x22e8987ba78 <col:54, col:61> col:61 used num_enums 'size_t':'unsigned long long'
| |-ParmVarDecl 0x22e8987baf8 <line:79:30, col:34> col:34 used value 'int'
| `-CompoundStmt 0x22e89877240 <line:80:1, line:88:1>
|   |-DeclStmt 0x22e8987bdb8 <line:81:5, col:13>
|   | `-VarDecl 0x22e8987bd50 <col:5, col:12> col:12 used i 'size_t':'unsigned long long'
|   |-ForStmt 0x22e89877160 <line:82:5, line:86:5>
|   | |-BinaryOperator 0x22e8987be48 <line:82:10, col:14> 'size_t':'unsigned long long' '='
|   | | |-DeclRefExpr 0x22e8987bdd0 <col:10> 'size_t':'unsigned long long' lvalue Var 0x22e8987bd50 'i' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x22e8987be30 <col:14> 'size_t':'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x22e8987be08 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x22e8987bed8 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x22e8987bea8 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x22e8987be68 <col:17> 'size_t':'unsigned long long' lvalue Var 0x22e8987bd50 'i' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x22e8987bec0 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x22e8987be88 <col:21> 'size_t':'unsigned long long' lvalue ParmVar 0x22e8987ba78 'num_enums' 'size_t':'unsigned long long'
|   | |-UnaryOperator 0x22e8987bf18 <col:32, col:33> 'size_t':'unsigned long long' postfix '++'
|   | | `-DeclRefExpr 0x22e8987bef8 <col:32> 'size_t':'unsigned long long' lvalue Var 0x22e8987bd50 'i' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x22e89877148 <col:37, line:86:5>
|   |   `-IfStmt 0x22e89877130 <line:83:9, line:85:9>
|   |     |-BinaryOperator 0x22e89877010 <line:83:13, col:31> 'int' '=='
|   |     | |-ImplicitCastExpr 0x22e89876fe0 <col:13, col:22> 'int' <LValueToRValue>
|   |     | | `-MemberExpr 0x22e89876f90 <col:13, col:22> 'const int' lvalue .value 0x22e8987edf8
|   |     | |   `-ArraySubscriptExpr 0x22e89876f70 <col:13, col:20> 'const test_enum':'const test_enum' lvalue
|   |     | |     |-ImplicitCastExpr 0x22e8987bf70 <col:13> 'const test_enum *' <LValueToRValue>
|   |     | |     | `-DeclRefExpr 0x22e8987bf30 <col:13> 'const test_enum *' lvalue ParmVar 0x22e8987ba00 'enums' 'const test_enum *'
|   |     | |     `-ImplicitCastExpr 0x22e8987bf88 <col:19> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | |       `-DeclRefExpr 0x22e8987bf50 <col:19> 'size_t':'unsigned long long' lvalue Var 0x22e8987bd50 'i' 'size_t':'unsigned long long'
|   |     | `-ImplicitCastExpr 0x22e89876ff8 <col:31> 'int' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x22e89876fc0 <col:31> 'int' lvalue ParmVar 0x22e8987baf8 'value' 'int'
|   |     `-CompoundStmt 0x22e89877118 <col:38, line:85:9>
|   |       `-ReturnStmt 0x22e89877108 <line:84:13, col:29>
|   |         `-ImplicitCastExpr 0x22e898770f0 <col:20, col:29> 'const char *' <LValueToRValue>
|   |           `-MemberExpr 0x22e898770c0 <col:20, col:29> 'const char *const' lvalue .name 0x22e8987ed88
|   |             `-ArraySubscriptExpr 0x22e898770a0 <col:20, col:27> 'const test_enum':'const test_enum' lvalue
|   |               |-ImplicitCastExpr 0x22e89877070 <col:20> 'const test_enum *' <LValueToRValue>
|   |               | `-DeclRefExpr 0x22e89877030 <col:20> 'const test_enum *' lvalue ParmVar 0x22e8987ba00 'enums' 'const test_enum *'
|   |               `-ImplicitCastExpr 0x22e89877088 <col:26> 'size_t':'unsigned long long' <LValueToRValue>
|   |                 `-DeclRefExpr 0x22e89877050 <col:26> 'size_t':'unsigned long long' lvalue Var 0x22e8987bd50 'i' 'size_t':'unsigned long long'
|   `-ReturnStmt 0x22e89877230 <line:87:5, col:12>
|     `-ImplicitCastExpr 0x22e89877218 <col:12> 'const char *' <NoOp>
|       `-ImplicitCastExpr 0x22e89877200 <col:12> 'char *' <ArrayToPointerDecay>
|         `-StringLiteral 0x22e898771d8 <col:12> 'char [13]' lvalue "InvalidValue"
|-VarDecl 0x22e898772e8 <line:93:1, line:98:1> line:93:24 used ssl_test_results 'const test_enum [4]' static cinit
| `-InitListExpr 0x22e89877718 <col:45, line:98:1> 'const test_enum [4]'
|   |-InitListExpr 0x22e89877768 <line:94:5, col:33> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x22e898777d0 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x22e898777b8 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x22e89877388 <col:6> 'char [8]' lvalue "Success"
|   | `-DeclRefExpr 0x22e898773a8 <col:17> 'int' EnumConstant 0x22e898cc9d0 'SSL_TEST_SUCCESS' 'int'
|   |-InitListExpr 0x22e89877800 <line:95:5, col:40> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x22e89877868 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x22e89877850 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x22e89877458 <col:6> 'char [11]' lvalue "ServerFail"
|   | `-DeclRefExpr 0x22e89877480 <col:20> 'int' EnumConstant 0x22e898cca28 'SSL_TEST_SERVER_FAIL' 'int'
|   |-InitListExpr 0x22e898778a0 <line:96:5, col:40> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x22e89877908 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x22e898778f0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x22e898774f0 <col:6> 'char [11]' lvalue "ClientFail"
|   | `-DeclRefExpr 0x22e89877518 <col:20> 'int' EnumConstant 0x22e898cca80 'SSL_TEST_CLIENT_FAIL' 'int'
|   `-InitListExpr 0x22e89877950 <line:97:5, col:46> 'test_enum':'test_enum'
|     |-ImplicitCastExpr 0x22e898779b8 <col:6> 'const char *' <NoOp>
|     | `-ImplicitCastExpr 0x22e898779a0 <col:6> 'char *' <ArrayToPointerDecay>
|     |   `-StringLiteral 0x22e898775c8 <col:6> 'char [14]' lvalue "InternalError"
|     `-DeclRefExpr 0x22e898775f0 <col:23> 'int' EnumConstant 0x22e898ccad8 'SSL_TEST_INTERNAL_ERROR' 'int'
|-FunctionDecl 0x22e89877c20 <line:100:1, line:109:1> line:100:19 invalid parse_expected_result 'int (SSL_TEST_CTX *, const char *)' static
| |-ParmVarDecl 0x22e89877a58 <col:41, col:55> col:55 used test_ctx 'SSL_TEST_CTX *'
| |-ParmVarDecl 0x22e89877ad8 <col:65, col:77> col:77 used value 'const char *'
| `-CompoundStmt 0x22e89878148 <line:101:1, line:109:1>
|   |-DeclStmt 0x22e89877d68 <line:102:5, col:18>
|   | `-VarDecl 0x22e89877d00 <col:5, col:9> col:9 used ret_value 'int'
|   |-IfStmt 0x22e89878020 <line:103:5, line:106:5>
|   | |-OpaqueValueExpr 0x22e89878008 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x22e89877ff0 <line:104:41, line:106:5>
|   |   `-ReturnStmt 0x22e89877fe0 <line:105:9, col:16>
|   |     `-IntegerLiteral 0x22e89877fb8 <col:16> 'int' 0
|   |-BinaryOperator 0x22e898780f0 <line:107:5, col:33> 'ssl_test_result_t':'ssl_test_result_t' '='
|   | |-MemberExpr 0x22e89878070 <col:5, col:15> 'ssl_test_result_t':'ssl_test_result_t' lvalue ->expected_result 0x22e898c8460
|   | | `-ImplicitCastExpr 0x22e89878058 <col:5> 'SSL_TEST_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x22e89878038 <col:5> 'SSL_TEST_CTX *' lvalue ParmVar 0x22e89877a58 'test_ctx' 'SSL_TEST_CTX *'
|   | `-ImplicitCastExpr 0x22e898780d8 <col:33> 'ssl_test_result_t':'ssl_test_result_t' <IntegralCast>
|   |   `-ImplicitCastExpr 0x22e898780c0 <col:33> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x22e898780a0 <col:33> 'int' lvalue Var 0x22e89877d00 'ret_value' 'int'
|   `-ReturnStmt 0x22e89878138 <line:108:5, col:12>
|     `-IntegerLiteral 0x22e89878110 <col:12> 'int' 1
|-FunctionDecl 0x22e89878238 prev 0x22e898c8ab0 <line:111:1, line:114:1> line:111:13 ssl_test_result_name 'const char *(ssl_test_result_t)'
| |-ParmVarDecl 0x22e89878188 <col:34, col:52> col:52 used result 'ssl_test_result_t':'ssl_test_result_t'
| `-CompoundStmt 0x22e898784f8 <line:112:1, line:114:1>
|   `-ReturnStmt 0x22e898784e8 <line:113:5, col:76>
|     `-CallExpr 0x22e89878450 <col:12, col:76> 'const char *'
|       |-ImplicitCastExpr 0x22e89878438 <col:12> 'const char *(*)(const test_enum *, size_t, int)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x22e898782e0 <col:12> 'const char *(const test_enum *, size_t, int)' Function 0x22e8987bc70 'enum_name' 'const char *(const test_enum *, size_t, int)'
|       |-ImplicitCastExpr 0x22e89878488 <col:22> 'const test_enum *' <ArrayToPointerDecay>
|       | `-DeclRefExpr 0x22e89878300 <col:22> 'const test_enum [4]' lvalue Var 0x22e898772e8 'ssl_test_results' 'const test_enum [4]'
|       |-ImplicitCastExpr 0x22e898784a0 <col:40, col:67> 'size_t':'unsigned long long' <IntegralCast>
|       | `-CallExpr 0x22e89878378 <col:40, col:67> 'int'
|       |   |-ImplicitCastExpr 0x22e89878360 <col:40> 'int (*)()' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x22e89878320 <col:40> 'int ()' Function 0x22e89877dc8 'OSSL_NELEM' 'int ()'
|       |   `-ImplicitCastExpr 0x22e898783a0 <col:51> 'const test_enum *' <ArrayToPointerDecay>
|       |     `-DeclRefExpr 0x22e89878340 <col:51> 'const test_enum [4]' lvalue Var 0x22e898772e8 'ssl_test_results' 'const test_enum [4]'
|       `-ImplicitCastExpr 0x22e898784d0 <col:70> 'int' <IntegralCast>
|         `-ImplicitCastExpr 0x22e898784b8 <col:70> 'ssl_test_result_t':'ssl_test_result_t' <LValueToRValue>
|           `-DeclRefExpr 0x22e898783b8 <col:70> 'ssl_test_result_t':'ssl_test_result_t' lvalue ParmVar 0x22e89878188 'result' 'ssl_test_result_t':'ssl_test_result_t'
|-VarDecl 0x22e89878530 <line:118:1, col:35> col:24 used ssl_alerts 'const test_enum []' static
|-FunctionDecl 0x22e89878910 <line:126:1, line:129:1> line:126:19 invalid parse_alert 'int (int *, const char *)' static
| |-ParmVarDecl 0x22e89878788 <col:31, col:36> col:36 used alert 'int *'
| |-ParmVarDecl 0x22e89878808 <col:43, col:55> col:55 used value 'const char *'
| `-CompoundStmt 0x22e89878ad0 <line:127:1, line:129:1>
|-FunctionDecl 0x22e89878c40 <line:131:1, line:134:1> line:131:19 invalid parse_client_alert 'int (SSL_TEST_CTX *, const char *)' static
| |-ParmVarDecl 0x22e89878af0 <col:38, col:52> col:52 used test_ctx 'SSL_TEST_CTX *'
| |-ParmVarDecl 0x22e89878b70 <col:62, col:74> col:74 used value 'const char *'
| `-CompoundStmt 0x22e89878da8 <line:132:1, line:134:1>
|-FunctionDecl 0x22e89880000 <line:136:1, line:139:1> line:136:19 invalid parse_server_alert 'int (SSL_TEST_CTX *, const char *)' static
| |-ParmVarDecl 0x22e89878dc8 <col:38, col:52> col:52 used test_ctx 'SSL_TEST_CTX *'
| |-ParmVarDecl 0x22e89878e48 <col:62, col:74> col:74 used value 'const char *'
| `-CompoundStmt 0x22e89880168 <line:137:1, line:139:1>
|-FunctionDecl 0x22e89880240 prev 0x22e898c8c70 <line:141:1, line:144:1> line:141:13 ssl_alert_name 'const char *(int)'
| |-ParmVarDecl 0x22e89880190 <col:28, col:32> col:32 used alert 'int'
| `-CompoundStmt 0x22e89880488 <line:142:1, line:144:1>
|   `-ReturnStmt 0x22e89880478 <line:143:5, col:63>
|     `-CallExpr 0x22e898803f8 <col:12, col:63> 'const char *'
|       |-ImplicitCastExpr 0x22e898803e0 <col:12> 'const char *(*)(const test_enum *, size_t, int)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x22e898802e8 <col:12> 'const char *(const test_enum *, size_t, int)' Function 0x22e8987bc70 'enum_name' 'const char *(const test_enum *, size_t, int)'
|       |-ImplicitCastExpr 0x22e89880430 <col:22> 'const test_enum *' <ArrayToPointerDecay>
|       | `-DeclRefExpr 0x22e89880308 <col:22> 'const test_enum []' lvalue Var 0x22e89878530 'ssl_alerts' 'const test_enum []'
|       |-ImplicitCastExpr 0x22e89880448 <col:34, col:55> 'size_t':'unsigned long long' <IntegralCast>
|       | `-CallExpr 0x22e89880380 <col:34, col:55> 'int'
|       |   |-ImplicitCastExpr 0x22e89880368 <col:34> 'int (*)()' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x22e89880328 <col:34> 'int ()' Function 0x22e89877dc8 'OSSL_NELEM' 'int ()'
|       |   `-ImplicitCastExpr 0x22e898803a8 <col:45> 'const test_enum *' <ArrayToPointerDecay>
|       |     `-DeclRefExpr 0x22e89880348 <col:45> 'const test_enum []' lvalue Var 0x22e89878530 'ssl_alerts' 'const test_enum []'
|       `-ImplicitCastExpr 0x22e89880460 <col:58> 'int' <LValueToRValue>
|         `-DeclRefExpr 0x22e898803c0 <col:58> 'int' lvalue ParmVar 0x22e89880190 'alert' 'int'
|-VarDecl 0x22e898804c0 <line:148:1, col:38> col:24 used ssl_protocols 'const test_enum []' static
|-FunctionDecl 0x22e89880820 <line:157:1, line:161:1> line:157:19 invalid parse_protocol 'int (SSL_TEST_CTX *, const char *)' static
| |-ParmVarDecl 0x22e898806d0 <col:34, col:48> col:48 used test_ctx 'SSL_TEST_CTX *'
| |-ParmVarDecl 0x22e89880750 <col:58, col:70> col:70 used value 'const char *'
| `-CompoundStmt 0x22e89880a40 <line:158:1, line:161:1>
|-FunctionDecl 0x22e89880b18 prev 0x22e898c8df8 <line:163:1, line:166:1> line:163:13 ssl_protocol_name 'const char *(int)'
| |-ParmVarDecl 0x22e89880a68 <col:31, col:35> col:35 used protocol 'int'
| `-CompoundStmt 0x22e89880d60 <line:164:1, line:166:1>
|   `-ReturnStmt 0x22e89880d50 <line:165:5, col:72>
|     `-CallExpr 0x22e89880cd0 <col:12, col:72> 'const char *'
|       |-ImplicitCastExpr 0x22e89880cb8 <col:12> 'const char *(*)(const test_enum *, size_t, int)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x22e89880bc0 <col:12> 'const char *(const test_enum *, size_t, int)' Function 0x22e8987bc70 'enum_name' 'const char *(const test_enum *, size_t, int)'
|       |-ImplicitCastExpr 0x22e89880d08 <col:22> 'const test_enum *' <ArrayToPointerDecay>
|       | `-DeclRefExpr 0x22e89880be0 <col:22> 'const test_enum []' lvalue Var 0x22e898804c0 'ssl_protocols' 'const test_enum []'
|       |-ImplicitCastExpr 0x22e89880d20 <col:37, col:61> 'size_t':'unsigned long long' <IntegralCast>
|       | `-CallExpr 0x22e89880c58 <col:37, col:61> 'int'
|       |   |-ImplicitCastExpr 0x22e89880c40 <col:37> 'int (*)()' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x22e89880c00 <col:37> 'int ()' Function 0x22e89877dc8 'OSSL_NELEM' 'int ()'
|       |   `-ImplicitCastExpr 0x22e89880c80 <col:48> 'const test_enum *' <ArrayToPointerDecay>
|       |     `-DeclRefExpr 0x22e89880c20 <col:48> 'const test_enum []' lvalue Var 0x22e898804c0 'ssl_protocols' 'const test_enum []'
|       `-ImplicitCastExpr 0x22e89880d38 <col:64> 'int' <LValueToRValue>
|         `-DeclRefExpr 0x22e89880c98 <col:64> 'int' lvalue ParmVar 0x22e89880a68 'protocol' 'int'
|-VarDecl 0x22e89880d98 <line:170:1, line:174:1> line:170:24 used ssl_verify_callbacks 'const test_enum [3]' static cinit
| `-InitListExpr 0x22e8987f090 <col:49, line:174:1> 'const test_enum [3]'
|   |-InitListExpr 0x22e8987f0e0 <line:171:5, col:34> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x22e8987f148 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x22e8987f130 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x22e89880e38 <col:6> 'char [5]' lvalue "None"
|   | `-DeclRefExpr 0x22e89880e58 <col:14> 'int' EnumConstant 0x22e898ccd70 'SSL_TEST_VERIFY_NONE' 'int'
|   |-InitListExpr 0x22e8987f178 <line:172:5, col:45> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x22e8987f1e0 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x22e8987f1c8 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x22e89880ec8 <col:6> 'char [10]' lvalue "AcceptAll"
|   | `-DeclRefExpr 0x22e89880ef0 <col:19> 'int' EnumConstant 0x22e898ccdc8 'SSL_TEST_VERIFY_ACCEPT_ALL' 'int'
|   `-InitListExpr 0x22e8987f218 <line:173:5, col:45> 'test_enum':'test_enum'
|     |-ImplicitCastExpr 0x22e8987f280 <col:6> 'const char *' <NoOp>
|     | `-ImplicitCastExpr 0x22e8987f268 <col:6> 'char *' <ArrayToPointerDecay>
|     |   `-StringLiteral 0x22e89880f60 <col:6> 'char [10]' lvalue "RejectAll"
|     `-DeclRefExpr 0x22e89880f88 <col:19> 'int' EnumConstant 0x22e898cce20 'SSL_TEST_VERIFY_REJECT_ALL' 'int'
|-FunctionDecl 0x22e8987f570 <line:176:1, line:186:1> line:176:19 invalid parse_client_verify_callback 'int (SSL_TEST_CLIENT_CONF *, const char *)' static
| |-ParmVarDecl 0x22e8987f3a8 <col:48, col:70> col:70 used client_conf 'SSL_TEST_CLIENT_CONF *'
| |-ParmVarDecl 0x22e8987f428 <line:177:48, col:60> col:60 used value 'const char *'
| `-CompoundStmt 0x22e8987f988 <line:178:1, line:186:1>
|   |-DeclStmt 0x22e8987f6b8 <line:179:5, col:18>
|   | `-VarDecl 0x22e8987f650 <col:5, col:9> col:9 used ret_value 'int'
|   |-IfStmt 0x22e8987f860 <line:180:5, line:183:5>
|   | |-OpaqueValueExpr 0x22e8987f848 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x22e8987f830 <line:181:41, line:183:5>
|   |   `-ReturnStmt 0x22e8987f820 <line:182:9, col:16>
|   |     `-IntegerLiteral 0x22e8987f7f8 <col:16> 'int' 0
|   |-BinaryOperator 0x22e8987f930 <line:184:5, col:36> 'ssl_verify_callback_t':'ssl_verify_callback_t' '='
|   | |-MemberExpr 0x22e8987f8b0 <col:5, col:18> 'ssl_verify_callback_t':'ssl_verify_callback_t' lvalue ->verify_callback 0x22e898cf590
|   | | `-ImplicitCastExpr 0x22e8987f898 <col:5> 'SSL_TEST_CLIENT_CONF *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x22e8987f878 <col:5> 'SSL_TEST_CLIENT_CONF *' lvalue ParmVar 0x22e8987f3a8 'client_conf' 'SSL_TEST_CLIENT_CONF *'
|   | `-ImplicitCastExpr 0x22e8987f918 <col:36> 'ssl_verify_callback_t':'ssl_verify_callback_t' <IntegralCast>
|   |   `-ImplicitCastExpr 0x22e8987f900 <col:36> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x22e8987f8e0 <col:36> 'int' lvalue Var 0x22e8987f650 'ret_value' 'int'
|   `-ReturnStmt 0x22e8987f978 <line:185:5, col:12>
|     `-IntegerLiteral 0x22e8987f950 <col:12> 'int' 1
|-FunctionDecl 0x22e8987fa78 prev 0x22e898c8fe0 <line:188:1, line:192:1> line:188:13 ssl_verify_callback_name 'const char *(ssl_verify_callback_t)'
| |-ParmVarDecl 0x22e8987f9c8 <col:38, col:60> col:60 used callback 'ssl_verify_callback_t':'ssl_verify_callback_t'
| `-CompoundStmt 0x22e8987fcd8 <line:189:1, line:192:1>
|   `-ReturnStmt 0x22e8987fcc8 <line:190:5, line:191:30>
|     `-CallExpr 0x22e8987fc30 <line:190:12, line:191:30> 'const char *'
|       |-ImplicitCastExpr 0x22e8987fc18 <line:190:12> 'const char *(*)(const test_enum *, size_t, int)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x22e8987fb20 <col:12> 'const char *(const test_enum *, size_t, int)' Function 0x22e8987bc70 'enum_name' 'const char *(const test_enum *, size_t, int)'
|       |-ImplicitCastExpr 0x22e8987fc68 <col:22> 'const test_enum *' <ArrayToPointerDecay>
|       | `-DeclRefExpr 0x22e8987fb40 <col:22> 'const test_enum [3]' lvalue Var 0x22e89880d98 'ssl_verify_callbacks' 'const test_enum [3]'
|       |-ImplicitCastExpr 0x22e8987fc80 <col:44, col:75> 'size_t':'unsigned long long' <IntegralCast>
|       | `-CallExpr 0x22e8987fbb8 <col:44, col:75> 'int'
|       |   |-ImplicitCastExpr 0x22e8987fba0 <col:44> 'int (*)()' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x22e8987fb60 <col:44> 'int ()' Function 0x22e89877dc8 'OSSL_NELEM' 'int ()'
|       |   `-ImplicitCastExpr 0x22e8987fbe0 <col:55> 'const test_enum *' <ArrayToPointerDecay>
|       |     `-DeclRefExpr 0x22e8987fb80 <col:55> 'const test_enum [3]' lvalue Var 0x22e89880d98 'ssl_verify_callbacks' 'const test_enum [3]'
|       `-ImplicitCastExpr 0x22e8987fcb0 <line:191:22> 'int' <IntegralCast>
|         `-ImplicitCastExpr 0x22e8987fc98 <col:22> 'ssl_verify_callback_t':'ssl_verify_callback_t' <LValueToRValue>
|           `-DeclRefExpr 0x22e8987fbf8 <col:22> 'ssl_verify_callback_t':'ssl_verify_callback_t' lvalue ParmVar 0x22e8987f9c8 'callback' 'ssl_verify_callback_t':'ssl_verify_callback_t'
|-VarDecl 0x22e8987fd10 <line:196:1, line:201:1> line:196:24 used ssl_servername 'const test_enum [4]' static cinit
| `-InitListExpr 0x22e89879048 <col:43, line:201:1> 'const test_enum [4]'
|   |-InitListExpr 0x22e89879098 <line:197:5, col:38> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x22e89879100 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x22e898790e8 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x22e8987fd78 <col:6> 'char [5]' lvalue "None"
|   | `-DeclRefExpr 0x22e8987fd98 <col:14> 'int' EnumConstant 0x22e898cd060 'SSL_TEST_SERVERNAME_NONE' 'int'
|   |-InitListExpr 0x22e89879130 <line:198:5, col:44> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x22e89879198 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x22e89879180 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x22e8987fe08 <col:6> 'char [8]' lvalue "server1"
|   | `-DeclRefExpr 0x22e8987fe28 <col:17> 'int' EnumConstant 0x22e898cb0b0 'SSL_TEST_SERVERNAME_SERVER1' 'int'
|   |-InitListExpr 0x22e898791d0 <line:199:5, col:44> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x22e89879238 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x22e89879220 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x22e8987fe98 <col:6> 'char [8]' lvalue "server2"
|   | `-DeclRefExpr 0x22e8987feb8 <col:17> 'int' EnumConstant 0x22e898cb108 'SSL_TEST_SERVERNAME_SERVER2' 'int'
|   `-InitListExpr 0x22e89879280 <line:200:5, col:44> 'test_enum':'test_enum'
|     |-ImplicitCastExpr 0x22e898792e8 <col:6> 'const char *' <NoOp>
|     | `-ImplicitCastExpr 0x22e898792d0 <col:6> 'char *' <ArrayToPointerDecay>
|     |   `-StringLiteral 0x22e8987ff28 <col:6> 'char [8]' lvalue "invalid"
|     `-DeclRefExpr 0x22e8987ff48 <col:17> 'int' EnumConstant 0x22e898cb160 'SSL_TEST_SERVERNAME_INVALID' 'int'
|-FunctionDecl 0x22e89879460 <line:203:1, line:213:1> line:203:19 invalid parse_servername 'int (SSL_TEST_CLIENT_CONF *, const char *)' static
| |-ParmVarDecl 0x22e89879310 <col:36, col:58> col:58 used client_conf 'SSL_TEST_CLIENT_CONF *'
| |-ParmVarDecl 0x22e89879390 <line:204:36, col:48> col:48 used value 'const char *'
| `-CompoundStmt 0x22e89879878 <line:205:1, line:213:1>
|   |-DeclStmt 0x22e898795a8 <line:206:5, col:18>
|   | `-VarDecl 0x22e89879540 <col:5, col:9> col:9 used ret_value 'int'
|   |-IfStmt 0x22e89879750 <line:207:5, line:210:5>
|   | |-OpaqueValueExpr 0x22e89879738 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x22e89879720 <line:208:41, line:210:5>
|   |   `-ReturnStmt 0x22e89879710 <line:209:9, col:16>
|   |     `-IntegerLiteral 0x22e898796e8 <col:16> 'int' 0
|   |-BinaryOperator 0x22e89879820 <line:211:5, col:31> 'ssl_servername_t':'ssl_servername_t' '='
|   | |-MemberExpr 0x22e898797a0 <col:5, col:18> 'ssl_servername_t':'ssl_servername_t' lvalue ->servername 0x22e898cf620
|   | | `-ImplicitCastExpr 0x22e89879788 <col:5> 'SSL_TEST_CLIENT_CONF *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x22e89879768 <col:5> 'SSL_TEST_CLIENT_CONF *' lvalue ParmVar 0x22e89879310 'client_conf' 'SSL_TEST_CLIENT_CONF *'
|   | `-ImplicitCastExpr 0x22e89879808 <col:31> 'ssl_servername_t':'ssl_servername_t' <IntegralCast>
|   |   `-ImplicitCastExpr 0x22e898797f0 <col:31> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x22e898797d0 <col:31> 'int' lvalue Var 0x22e89879540 'ret_value' 'int'
|   `-ReturnStmt 0x22e89879868 <line:212:5, col:12>
|     `-IntegerLiteral 0x22e89879840 <col:12> 'int' 1
|-FunctionDecl 0x22e89879a08 <line:215:1, line:225:1> line:215:19 invalid parse_expected_servername 'int (SSL_TEST_CTX *, const char *)' static
| |-ParmVarDecl 0x22e898798b8 <col:45, col:59> col:59 used test_ctx 'SSL_TEST_CTX *'
| |-ParmVarDecl 0x22e89879938 <line:216:45, col:57> col:57 used value 'const char *'
| `-CompoundStmt 0x22e89879e20 <line:217:1, line:225:1>
|   |-DeclStmt 0x22e89879b50 <line:218:5, col:18>
|   | `-VarDecl 0x22e89879ae8 <col:5, col:9> col:9 used ret_value 'int'
|   |-IfStmt 0x22e89879cf8 <line:219:5, line:222:5>
|   | |-OpaqueValueExpr 0x22e89879ce0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x22e89879cc8 <line:220:41, line:222:5>
|   |   `-ReturnStmt 0x22e89879cb8 <line:221:9, col:16>
|   |     `-IntegerLiteral 0x22e89879c90 <col:16> 'int' 0
|   |-BinaryOperator 0x22e89879dc8 <line:223:5, col:37> 'ssl_servername_t':'ssl_servername_t' '='
|   | |-MemberExpr 0x22e89879d48 <col:5, col:15> 'ssl_servername_t':'ssl_servername_t' lvalue ->expected_servername 0x22e898c8618
|   | | `-ImplicitCastExpr 0x22e89879d30 <col:5> 'SSL_TEST_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x22e89879d10 <col:5> 'SSL_TEST_CTX *' lvalue ParmVar 0x22e898798b8 'test_ctx' 'SSL_TEST_CTX *'
|   | `-ImplicitCastExpr 0x22e89879db0 <col:37> 'ssl_servername_t':'ssl_servername_t' <IntegralCast>
|   |   `-ImplicitCastExpr 0x22e89879d98 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x22e89879d78 <col:37> 'int' lvalue Var 0x22e89879ae8 'ret_value' 'int'
|   `-ReturnStmt 0x22e89879e10 <line:224:5, col:12>
|     `-IntegerLiteral 0x22e89879de8 <col:12> 'int' 1
|-FunctionDecl 0x22e89881010 prev 0x22e898d0240 <line:227:1, line:231:1> line:227:13 ssl_servername_name 'const char *(ssl_servername_t)'
| |-ParmVarDecl 0x22e89879e60 <col:33, col:50> col:50 used server 'ssl_servername_t':'ssl_servername_t'
| `-CompoundStmt 0x22e89881270 <line:228:1, line:231:1>
|   `-ReturnStmt 0x22e89881260 <line:229:5, line:230:28>
|     `-CallExpr 0x22e898811c8 <line:229:12, line:230:28> 'const char *'
|       |-ImplicitCastExpr 0x22e898811b0 <line:229:12> 'const char *(*)(const test_enum *, size_t, int)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x22e898810b8 <col:12> 'const char *(const test_enum *, size_t, int)' Function 0x22e8987bc70 'enum_name' 'const char *(const test_enum *, size_t, int)'
|       |-ImplicitCastExpr 0x22e89881200 <col:22> 'const test_enum *' <ArrayToPointerDecay>
|       | `-DeclRefExpr 0x22e898810d8 <col:22> 'const test_enum [4]' lvalue Var 0x22e8987fd10 'ssl_servername' 'const test_enum [4]'
|       |-ImplicitCastExpr 0x22e89881218 <col:38, col:63> 'size_t':'unsigned long long' <IntegralCast>
|       | `-CallExpr 0x22e89881150 <col:38, col:63> 'int'
|       |   |-ImplicitCastExpr 0x22e89881138 <col:38> 'int (*)()' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x22e898810f8 <col:38> 'int ()' Function 0x22e89877dc8 'OSSL_NELEM' 'int ()'
|       |   `-ImplicitCastExpr 0x22e89881178 <col:49> 'const test_enum *' <ArrayToPointerDecay>
|       |     `-DeclRefExpr 0x22e89881118 <col:49> 'const test_enum [4]' lvalue Var 0x22e8987fd10 'ssl_servername' 'const test_enum [4]'
|       `-ImplicitCastExpr 0x22e89881248 <line:230:22> 'int' <IntegralCast>
|         `-ImplicitCastExpr 0x22e89881230 <col:22> 'ssl_servername_t':'ssl_servername_t' <LValueToRValue>
|           `-DeclRefExpr 0x22e89881190 <col:22> 'ssl_servername_t':'ssl_servername_t' lvalue ParmVar 0x22e89879e60 'server' 'ssl_servername_t':'ssl_servername_t'
|-VarDecl 0x22e898812a8 <line:235:1, line:239:1> line:235:24 used ssl_servername_callbacks 'const test_enum [3]' static cinit
| `-InitListExpr 0x22e89881570 <col:53, line:239:1> 'const test_enum [3]'
|   |-InitListExpr 0x22e898815c0 <line:236:5, col:41> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x22e89881628 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x22e89881610 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x22e89881310 <col:6> 'char [5]' lvalue "None"
|   | `-DeclRefExpr 0x22e89881330 <col:14> 'int' EnumConstant 0x22e898cb3a0 'SSL_TEST_SERVERNAME_CB_NONE' 'int'
|   |-InitListExpr 0x22e89881658 <line:237:5, col:59> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x22e898816c0 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x22e898816a8 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x22e898813a0 <col:6> 'char [15]' lvalue "IgnoreMismatch"
|   | `-DeclRefExpr 0x22e898813c8 <col:24> 'int' EnumConstant 0x22e898cb3f8 'SSL_TEST_SERVERNAME_IGNORE_MISMATCH' 'int'
|   `-InitListExpr 0x22e898816f8 <line:238:5, col:59> 'test_enum':'test_enum'
|     |-ImplicitCastExpr 0x22e89881760 <col:6> 'const char *' <NoOp>
|     | `-ImplicitCastExpr 0x22e89881748 <col:6> 'char *' <ArrayToPointerDecay>
|     |   `-StringLiteral 0x22e89881438 <col:6> 'char [15]' lvalue "RejectMismatch"
|     `-DeclRefExpr 0x22e89881460 <col:24> 'int' EnumConstant 0x22e898cb450 'SSL_TEST_SERVERNAME_REJECT_MISMATCH' 'int'
|-FunctionDecl 0x22e898819d0 <line:241:1, line:251:1> line:241:19 invalid parse_servername_callback 'int (SSL_TEST_SERVER_CONF *, const char *)' static
| |-ParmVarDecl 0x22e89881808 <col:45, col:67> col:67 used server_conf 'SSL_TEST_SERVER_CONF *'
| |-ParmVarDecl 0x22e89881888 <line:242:45, col:57> col:57 used value 'const char *'
| `-CompoundStmt 0x22e89881de8 <line:243:1, line:251:1>
|   |-DeclStmt 0x22e89881b18 <line:244:5, col:18>
|   | `-VarDecl 0x22e89881ab0 <col:5, col:9> col:9 used ret_value 'int'
|   |-IfStmt 0x22e89881cc0 <line:245:5, line:248:5>
|   | |-OpaqueValueExpr 0x22e89881ca8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x22e89881c90 <line:246:79, line:248:5>
|   |   `-ReturnStmt 0x22e89881c80 <line:247:9, col:16>
|   |     `-IntegerLiteral 0x22e89881c58 <col:16> 'int' 0
|   |-BinaryOperator 0x22e89881d90 <line:249:5, col:40> 'ssl_servername_callback_t':'ssl_servername_callback_t' '='
|   | |-MemberExpr 0x22e89881d10 <col:5, col:18> 'ssl_servername_callback_t':'ssl_servername_callback_t' lvalue ->servername_callback 0x22e898cfa10
|   | | `-ImplicitCastExpr 0x22e89881cf8 <col:5> 'SSL_TEST_SERVER_CONF *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x22e89881cd8 <col:5> 'SSL_TEST_SERVER_CONF *' lvalue ParmVar 0x22e89881808 'server_conf' 'SSL_TEST_SERVER_CONF *'
|   | `-ImplicitCastExpr 0x22e89881d78 <col:40> 'ssl_servername_callback_t':'ssl_servername_callback_t' <IntegralCast>
|   |   `-ImplicitCastExpr 0x22e89881d60 <col:40> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x22e89881d40 <col:40> 'int' lvalue Var 0x22e89881ab0 'ret_value' 'int'
|   `-ReturnStmt 0x22e89881dd8 <line:250:5, col:12>
|     `-IntegerLiteral 0x22e89881db0 <col:12> 'int' 1
|-FunctionDecl 0x22e89881ed8 prev 0x22e898d0420 <line:253:1, line:257:1> line:253:13 ssl_servername_callback_name 'const char *(ssl_servername_callback_t)'
| |-ParmVarDecl 0x22e89881e28 <col:42, col:68> col:68 used callback 'ssl_servername_callback_t':'ssl_servername_callback_t'
| `-CompoundStmt 0x22e8987a0d8 <line:254:1, line:257:1>
|   `-ReturnStmt 0x22e8987a0c8 <line:255:5, line:256:68>
|     `-CallExpr 0x22e8987a030 <line:255:12, line:256:68> 'const char *'
|       |-ImplicitCastExpr 0x22e8987a018 <line:255:12> 'const char *(*)(const test_enum *, size_t, int)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x22e89881f80 <col:12> 'const char *(const test_enum *, size_t, int)' Function 0x22e8987bc70 'enum_name' 'const char *(const test_enum *, size_t, int)'
|       |-ImplicitCastExpr 0x22e8987a068 <col:22> 'const test_enum *' <ArrayToPointerDecay>
|       | `-DeclRefExpr 0x22e89881fa0 <col:22> 'const test_enum [3]' lvalue Var 0x22e898812a8 'ssl_servername_callbacks' 'const test_enum [3]'
|       |-ImplicitCastExpr 0x22e8987a080 <line:256:22, col:57> 'size_t':'unsigned long long' <IntegralCast>
|       | `-CallExpr 0x22e89879fb8 <col:22, col:57> 'int'
|       |   |-ImplicitCastExpr 0x22e89879fa0 <col:22> 'int (*)()' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x22e89881fc0 <col:22> 'int ()' Function 0x22e89877dc8 'OSSL_NELEM' 'int ()'
|       |   `-ImplicitCastExpr 0x22e89879fe0 <col:33> 'const test_enum *' <ArrayToPointerDecay>
|       |     `-DeclRefExpr 0x22e89881fe0 <col:33> 'const test_enum [3]' lvalue Var 0x22e898812a8 'ssl_servername_callbacks' 'const test_enum [3]'
|       `-ImplicitCastExpr 0x22e8987a0b0 <col:60> 'int' <IntegralCast>
|         `-ImplicitCastExpr 0x22e8987a098 <col:60> 'ssl_servername_callback_t':'ssl_servername_callback_t' <LValueToRValue>
|           `-DeclRefExpr 0x22e89879ff8 <col:60> 'ssl_servername_callback_t':'ssl_servername_callback_t' lvalue ParmVar 0x22e89881e28 'callback' 'ssl_servername_callback_t':'ssl_servername_callback_t'
|-VarDecl 0x22e8987a110 <line:261:1, line:265:1> line:261:24 used ssl_session_ticket 'const test_enum [3]' static cinit
| `-InitListExpr 0x22e8987a3c8 <col:47, line:265:1> 'const test_enum [3]'
|   |-InitListExpr 0x22e8987a418 <line:262:5, col:46> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x22e8987a480 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x22e8987a468 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x22e8987a178 <col:6> 'char [7]' lvalue "Ignore"
|   | `-DeclRefExpr 0x22e8987a198 <col:16> 'int' EnumConstant 0x22e898cb690 'SSL_TEST_SESSION_TICKET_IGNORE' 'int'
|   |-InitListExpr 0x22e8987a4b0 <line:263:5, col:40> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x22e8987a518 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x22e8987a500 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x22e8987a208 <col:6> 'char [4]' lvalue "Yes"
|   | `-DeclRefExpr 0x22e8987a228 <col:13> 'int' EnumConstant 0x22e898cb6e8 'SSL_TEST_SESSION_TICKET_YES' 'int'
|   `-InitListExpr 0x22e8987a550 <line:264:5, col:38> 'test_enum':'test_enum'
|     |-ImplicitCastExpr 0x22e8987a5b8 <col:6> 'const char *' <NoOp>
|     | `-ImplicitCastExpr 0x22e8987a5a0 <col:6> 'char *' <ArrayToPointerDecay>
|     |   `-StringLiteral 0x22e8987a298 <col:6> 'char [3]' lvalue "No"
|     `-DeclRefExpr 0x22e8987a2b8 <col:12> 'int' EnumConstant 0x22e898cb740 'SSL_TEST_SESSION_TICKET_NO' 'int'
|-FunctionDecl 0x22e8987a750 <line:267:1, line:276:1> line:267:19 invalid parse_session_ticket 'int (SSL_TEST_CTX *, const char *)' static
| |-ParmVarDecl 0x22e8987a600 <col:40, col:54> col:54 used test_ctx 'SSL_TEST_CTX *'
| |-ParmVarDecl 0x22e8987a680 <col:64, col:76> col:76 used value 'const char *'
| `-CompoundStmt 0x22e8987ab68 <line:268:1, line:276:1>
|   |-DeclStmt 0x22e8987a898 <line:269:5, col:18>
|   | `-VarDecl 0x22e8987a830 <col:5, col:9> col:9 used ret_value 'int'
|   |-IfStmt 0x22e8987aa40 <line:270:5, line:273:5>
|   | |-OpaqueValueExpr 0x22e8987aa28 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x22e8987aa10 <line:271:41, line:273:5>
|   |   `-ReturnStmt 0x22e8987aa00 <line:272:9, col:16>
|   |     `-IntegerLiteral 0x22e8987a9d8 <col:16> 'int' 0
|   |-BinaryOperator 0x22e8987ab10 <line:274:5, col:41> 'ssl_session_ticket_t':'ssl_session_ticket_t' '='
|   | |-MemberExpr 0x22e8987aa90 <col:5, col:15> 'ssl_session_ticket_t':'ssl_session_ticket_t' lvalue ->session_ticket_expected 0x22e898c86a0
|   | | `-ImplicitCastExpr 0x22e8987aa78 <col:5> 'SSL_TEST_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x22e8987aa58 <col:5> 'SSL_TEST_CTX *' lvalue ParmVar 0x22e8987a600 'test_ctx' 'SSL_TEST_CTX *'
|   | `-ImplicitCastExpr 0x22e8987aaf8 <col:41> 'ssl_session_ticket_t':'ssl_session_ticket_t' <IntegralCast>
|   |   `-ImplicitCastExpr 0x22e8987aae0 <col:41> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x22e8987aac0 <col:41> 'int' lvalue Var 0x22e8987a830 'ret_value' 'int'
|   `-ReturnStmt 0x22e8987ab58 <line:275:5, col:12>
|     `-IntegerLiteral 0x22e8987ab30 <col:12> 'int' 1
|-FunctionDecl 0x22e8987ac58 prev 0x22e898d0600 <line:278:1, line:283:1> line:278:13 ssl_session_ticket_name 'const char *(ssl_session_ticket_t)'
| |-ParmVarDecl 0x22e8987aba8 <col:37, col:58> col:58 used server 'ssl_session_ticket_t':'ssl_session_ticket_t'
| `-CompoundStmt 0x22e8987aeb8 <line:279:1, line:283:1>
|   `-ReturnStmt 0x22e8987aea8 <line:280:5, line:282:28>
|     `-CallExpr 0x22e8987ae10 <line:280:12, line:282:28> 'const char *'
|       |-ImplicitCastExpr 0x22e8987adf8 <line:280:12> 'const char *(*)(const test_enum *, size_t, int)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x22e8987ad00 <col:12> 'const char *(const test_enum *, size_t, int)' Function 0x22e8987bc70 'enum_name' 'const char *(const test_enum *, size_t, int)'
|       |-ImplicitCastExpr 0x22e8987ae48 <col:22> 'const test_enum *' <ArrayToPointerDecay>
|       | `-DeclRefExpr 0x22e8987ad20 <col:22> 'const test_enum [3]' lvalue Var 0x22e8987a110 'ssl_session_ticket' 'const test_enum [3]'
|       |-ImplicitCastExpr 0x22e8987ae60 <line:281:22, col:51> 'size_t':'unsigned long long' <IntegralCast>
|       | `-CallExpr 0x22e8987ad98 <col:22, col:51> 'int'
|       |   |-ImplicitCastExpr 0x22e8987ad80 <col:22> 'int (*)()' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x22e8987ad40 <col:22> 'int ()' Function 0x22e89877dc8 'OSSL_NELEM' 'int ()'
|       |   `-ImplicitCastExpr 0x22e8987adc0 <col:33> 'const test_enum *' <ArrayToPointerDecay>
|       |     `-DeclRefExpr 0x22e8987ad60 <col:33> 'const test_enum [3]' lvalue Var 0x22e8987a110 'ssl_session_ticket' 'const test_enum [3]'
|       `-ImplicitCastExpr 0x22e8987ae90 <line:282:22> 'int' <IntegralCast>
|         `-ImplicitCastExpr 0x22e8987ae78 <col:22> 'ssl_session_ticket_t':'ssl_session_ticket_t' <LValueToRValue>
|           `-DeclRefExpr 0x22e8987add8 <col:22> 'ssl_session_ticket_t':'ssl_session_ticket_t' lvalue ParmVar 0x22e8987aba8 'server' 'ssl_session_ticket_t':'ssl_session_ticket_t'
|-VarDecl 0x22e8987aef0 <line:287:1, line:290:1> line:287:24 used ssl_test_methods 'const test_enum [2]' static cinit
| `-InitListExpr 0x22e898891f8 <col:45, line:290:1> 'const test_enum [2]'
|   |-InitListExpr 0x22e89889248 <line:288:5, col:32> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x22e898892b0 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x22e89889298 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x22e8987af58 <col:6> 'char [4]' lvalue "TLS"
|   | `-DeclRefExpr 0x22e8987af78 <col:13> 'int' EnumConstant 0x22e898cb9d0 'SSL_TEST_METHOD_TLS' 'int'
|   `-InitListExpr 0x22e898892e0 <line:289:5, col:34> 'test_enum':'test_enum'
|     |-ImplicitCastExpr 0x22e89889348 <col:6> 'const char *' <NoOp>
|     | `-ImplicitCastExpr 0x22e89889330 <col:6> 'char *' <ArrayToPointerDecay>
|     |   `-StringLiteral 0x22e898890e0 <col:6> 'char [5]' lvalue "DTLS"
|     `-DeclRefExpr 0x22e89889100 <col:14> 'int' EnumConstant 0x22e898cba28 'SSL_TEST_METHOD_DTLS' 'int'
|-FunctionDecl 0x22e89889548 <line:292:1, line:301:1> line:292:19 invalid parse_test_method 'int (SSL_TEST_CTX *, const char *)' static
| |-ParmVarDecl 0x22e898893f8 <col:37, col:51> col:51 used test_ctx 'SSL_TEST_CTX *'
| |-ParmVarDecl 0x22e89889478 <col:61, col:73> col:73 used value 'const char *'
| `-CompoundStmt 0x22e89889960 <line:293:1, line:301:1>
|   |-DeclStmt 0x22e89889690 <line:294:5, col:18>
|   | `-VarDecl 0x22e89889628 <col:5, col:9> col:9 used ret_value 'int'
|   |-IfStmt 0x22e89889838 <line:295:5, line:298:5>
|   | |-OpaqueValueExpr 0x22e89889820 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x22e89889808 <line:296:41, line:298:5>
|   |   `-ReturnStmt 0x22e898897f8 <line:297:9, col:16>
|   |     `-IntegerLiteral 0x22e898897d0 <col:16> 'int' 0
|   |-BinaryOperator 0x22e89889908 <line:299:5, col:24> 'ssl_test_method_t':'ssl_test_method_t' '='
|   | |-MemberExpr 0x22e89889888 <col:5, col:15> 'ssl_test_method_t':'ssl_test_method_t' lvalue ->method 0x22e898c8170
|   | | `-ImplicitCastExpr 0x22e89889870 <col:5> 'SSL_TEST_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x22e89889850 <col:5> 'SSL_TEST_CTX *' lvalue ParmVar 0x22e898893f8 'test_ctx' 'SSL_TEST_CTX *'
|   | `-ImplicitCastExpr 0x22e898898f0 <col:24> 'ssl_test_method_t':'ssl_test_method_t' <IntegralCast>
|   |   `-ImplicitCastExpr 0x22e898898d8 <col:24> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x22e898898b8 <col:24> 'int' lvalue Var 0x22e89889628 'ret_value' 'int'
|   `-ReturnStmt 0x22e89889950 <line:300:5, col:12>
|     `-IntegerLiteral 0x22e89889928 <col:12> 'int' 1
|-FunctionDecl 0x22e89889a50 prev 0x22e898d07e0 <line:303:1, line:306:1> line:303:13 ssl_test_method_name 'const char *(ssl_test_method_t)'
| |-ParmVarDecl 0x22e898899a0 <col:34, col:52> col:52 used method 'ssl_test_method_t':'ssl_test_method_t'
| `-CompoundStmt 0x22e89889cb0 <line:304:1, line:306:1>
|   `-ReturnStmt 0x22e89889ca0 <line:305:5, col:76>
|     `-CallExpr 0x22e89889c08 <col:12, col:76> 'const char *'
|       |-ImplicitCastExpr 0x22e89889bf0 <col:12> 'const char *(*)(const test_enum *, size_t, int)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x22e89889af8 <col:12> 'const char *(const test_enum *, size_t, int)' Function 0x22e8987bc70 'enum_name' 'const char *(const test_enum *, size_t, int)'
|       |-ImplicitCastExpr 0x22e89889c40 <col:22> 'const test_enum *' <ArrayToPointerDecay>
|       | `-DeclRefExpr 0x22e89889b18 <col:22> 'const test_enum [2]' lvalue Var 0x22e8987aef0 'ssl_test_methods' 'const test_enum [2]'
|       |-ImplicitCastExpr 0x22e89889c58 <col:40, col:67> 'size_t':'unsigned long long' <IntegralCast>
|       | `-CallExpr 0x22e89889b90 <col:40, col:67> 'int'
|       |   |-ImplicitCastExpr 0x22e89889b78 <col:40> 'int (*)()' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x22e89889b38 <col:40> 'int ()' Function 0x22e89877dc8 'OSSL_NELEM' 'int ()'
|       |   `-ImplicitCastExpr 0x22e89889bb8 <col:51> 'const test_enum *' <ArrayToPointerDecay>
|       |     `-DeclRefExpr 0x22e89889b58 <col:51> 'const test_enum [2]' lvalue Var 0x22e8987aef0 'ssl_test_methods' 'const test_enum [2]'
|       `-ImplicitCastExpr 0x22e89889c88 <col:70> 'int' <IntegralCast>
|         `-ImplicitCastExpr 0x22e89889c70 <col:70> 'ssl_test_method_t':'ssl_test_method_t' <LValueToRValue>
|           `-DeclRefExpr 0x22e89889bd0 <col:70> 'ssl_test_method_t':'ssl_test_method_t' lvalue ParmVar 0x22e898899a0 'method' 'ssl_test_method_t':'ssl_test_method_t'
|-FunctionDecl 0x22e89889e28 <line:43:5, line:49:5> <scratch space>:296:1 used parse_client_npn_protocols 'int (SSL_TEST_CLIENT_CONF *, const char *)' static
| |-ParmVarDecl 0x22e89889cd8 <.//openssl//file_jk/before\test\ssl_test_ctx.c:310:34, line:43:52> col:52 used ctx 'SSL_TEST_CLIENT_CONF *'
| |-ParmVarDecl 0x22e89889d58 <col:57, col:69> col:69 used value 'const char *'
| `-CompoundStmt 0x22e89885800 <line:44:5, line:49:5>
|   |-CallExpr 0x22e89885050 <line:45:9, col:32> 'int'
|   | |-ImplicitCastExpr 0x22e8988a068 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x22e89889fe0 <col:9> 'int ()' Function 0x22e89889f18 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x22e89885078 <col:22, line:310:64> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x22e8988a038 <line:45:22, line:310:64> 'char *' lvalue ->npn_protocols 0x22e898cf690
|   |     `-ImplicitCastExpr 0x22e8988a020 <line:45:22> 'SSL_TEST_CLIENT_CONF *' <LValueToRValue>
|   |       `-DeclRefExpr 0x22e8988a000 <col:22> 'SSL_TEST_CLIENT_CONF *' lvalue ParmVar 0x22e89889cd8 'ctx' 'SSL_TEST_CLIENT_CONF *'
|   |-BinaryOperator 0x22e89885298 <line:46:9, col:42> 'char *' '='
|   | |-MemberExpr 0x22e898850c8 <col:9, line:310:64> 'char *' lvalue ->npn_protocols 0x22e898cf690
|   | | `-ImplicitCastExpr 0x22e898850b0 <line:46:9> 'SSL_TEST_CLIENT_CONF *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x22e89885090 <col:9> 'SSL_TEST_CLIENT_CONF *' lvalue ParmVar 0x22e89889cd8 'ctx' 'SSL_TEST_CLIENT_CONF *'
|   | `-ImplicitCastExpr 0x22e89885280 <col:22, col:42> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x22e89885240 <col:22, col:42> 'int'
|   |     |-ImplicitCastExpr 0x22e89885228 <col:22> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x22e898851e8 <col:22> 'int ()' Function 0x22e89885120 'OPENSSL_strdup' 'int ()'
|   |     `-ImplicitCastExpr 0x22e89885268 <col:37> 'const char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x22e89885208 <col:37> 'const char *' lvalue ParmVar 0x22e89889d58 'value' 'const char *'
|   |-DoStmt 0x22e898857a0 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x22e89885760 <line:106:8, line:111:5>
|   | | `-IfStmt 0x22e89885748 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x22e89885418 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x22e898853f8 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x22e898853d8 <.//openssl//file_jk/before\test\ssl_test_ctx.c:47:20, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | |   |     |-ImplicitCastExpr 0x22e898853a8 <.//openssl//file_jk/before\test\ssl_test_ctx.c:47:20, line:310:64> 'char *' <LValueToRValue>
|   | |   |     | `-MemberExpr 0x22e898852f0 <line:47:20, line:310:64> 'char *' lvalue ->npn_protocols 0x22e898cf690
|   | |   |     |   `-ImplicitCastExpr 0x22e898852d8 <line:47:20> 'SSL_TEST_CLIENT_CONF *' <LValueToRValue>
|   | |   |     |     `-DeclRefExpr 0x22e898852b8 <col:20> 'SSL_TEST_CLIENT_CONF *' lvalue ParmVar 0x22e89889cd8 'ctx' 'SSL_TEST_CLIENT_CONF *'
|   | |   |     `-ImplicitCastExpr 0x22e898853c0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   | |   |       `-ParenExpr 0x22e89885388 <col:17, col:27> 'void *'
|   | |   |         `-CStyleCastExpr 0x22e89885360 <col:18, col:26> 'void *' <NullToPointer>
|   | |   |           `-IntegerLiteral 0x22e89885320 <col:26> 'int' 0
|   | |   `-CompoundStmt 0x22e89885730 <.//openssl//file_jk/before\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x22e89885708 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x22e898856f0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x22e89885630 <col:13> 'int ()' Function 0x22e89885568 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x22e898856d8 <col:28, <scratch space>:297:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x22e898856c0 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x22e89885688 <col:1> 'char [27]' lvalue "ctx->npn_protocols != NULL"
|   | `-IntegerLiteral 0x22e89885778 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x22e898857c0 <.//openssl//file_jk/before\test\ssl_test_ctx.c:47:39>
|   `-ReturnStmt 0x22e898857f0 <line:48:9, col:16>
|     `-IntegerLiteral 0x22e898857c8 <col:16> 'int' 1
|-FunctionDecl 0x22e89885998 <line:43:5, line:49:5> <scratch space>:300:1 used parse_server_npn_protocols 'int (SSL_TEST_SERVER_CONF *, const char *)' static
| |-ParmVarDecl 0x22e89885848 <.//openssl//file_jk/before\test\ssl_test_ctx.c:311:34, line:43:52> col:52 used ctx 'SSL_TEST_SERVER_CONF *'
| |-ParmVarDecl 0x22e898858c8 <col:57, col:69> col:69 used value 'const char *'
| `-CompoundStmt 0x22e89885fa8 <line:44:5, line:49:5>
|   |-CallExpr 0x22e89885b00 <line:45:9, col:32> 'int'
|   | |-ImplicitCastExpr 0x22e89885ae8 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x22e89885a60 <col:9> 'int ()' Function 0x22e89889f18 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x22e89885b28 <col:22, line:311:64> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x22e89885ab8 <line:45:22, line:311:64> 'char *' lvalue ->npn_protocols 0x22e898cfa80
|   |     `-ImplicitCastExpr 0x22e89885aa0 <line:45:22> 'SSL_TEST_SERVER_CONF *' <LValueToRValue>
|   |       `-DeclRefExpr 0x22e89885a80 <col:22> 'SSL_TEST_SERVER_CONF *' lvalue ParmVar 0x22e89885848 'ctx' 'SSL_TEST_SERVER_CONF *'
|   |-BinaryOperator 0x22e89885c58 <line:46:9, col:42> 'char *' '='
|   | |-MemberExpr 0x22e89885b78 <col:9, line:311:64> 'char *' lvalue ->npn_protocols 0x22e898cfa80
|   | | `-ImplicitCastExpr 0x22e89885b60 <line:46:9> 'SSL_TEST_SERVER_CONF *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x22e89885b40 <col:9> 'SSL_TEST_SERVER_CONF *' lvalue ParmVar 0x22e89885848 'ctx' 'SSL_TEST_SERVER_CONF *'
|   | `-ImplicitCastExpr 0x22e89885c40 <col:22, col:42> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x22e89885c00 <col:22, col:42> 'int'
|   |     |-ImplicitCastExpr 0x22e89885be8 <col:22> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x22e89885ba8 <col:22> 'int ()' Function 0x22e89885120 'OPENSSL_strdup' 'int ()'
|   |     `-ImplicitCastExpr 0x22e89885c28 <col:37> 'const char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x22e89885bc8 <col:37> 'const char *' lvalue ParmVar 0x22e898858c8 'value' 'const char *'
|   |-DoStmt 0x22e89885f48 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x22e89885f08 <line:106:8, line:111:5>
|   | | `-IfStmt 0x22e89885ef0 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x22e89885dd8 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x22e89885db8 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x22e89885d98 <.//openssl//file_jk/before\test\ssl_test_ctx.c:47:20, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | |   |     |-ImplicitCastExpr 0x22e89885d68 <.//openssl//file_jk/before\test\ssl_test_ctx.c:47:20, line:311:64> 'char *' <LValueToRValue>
|   | |   |     | `-MemberExpr 0x22e89885cb0 <line:47:20, line:311:64> 'char *' lvalue ->npn_protocols 0x22e898cfa80
|   | |   |     |   `-ImplicitCastExpr 0x22e89885c98 <line:47:20> 'SSL_TEST_SERVER_CONF *' <LValueToRValue>
|   | |   |     |     `-DeclRefExpr 0x22e89885c78 <col:20> 'SSL_TEST_SERVER_CONF *' lvalue ParmVar 0x22e89885848 'ctx' 'SSL_TEST_SERVER_CONF *'
|   | |   |     `-ImplicitCastExpr 0x22e89885d80 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   | |   |       `-ParenExpr 0x22e89885d48 <col:17, col:27> 'void *'
|   | |   |         `-CStyleCastExpr 0x22e89885d20 <col:18, col:26> 'void *' <NullToPointer>
|   | |   |           `-IntegerLiteral 0x22e89885ce0 <col:26> 'int' 0
|   | |   `-CompoundStmt 0x22e89885ed8 <.//openssl//file_jk/before\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x22e89885eb0 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x22e89885e98 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x22e89885e10 <col:13> 'int ()' Function 0x22e89885568 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x22e89885e80 <col:28, <scratch space>:301:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x22e89885e68 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x22e89885e30 <col:1> 'char [27]' lvalue "ctx->npn_protocols != NULL"
|   | `-IntegerLiteral 0x22e89885f20 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x22e89885f68 <.//openssl//file_jk/before\test\ssl_test_ctx.c:47:39>
|   `-ReturnStmt 0x22e89885f98 <line:48:9, col:16>
|     `-IntegerLiteral 0x22e89885f70 <col:16> 'int' 1
|-FunctionDecl 0x22e89883180 <line:43:5, line:49:5> <scratch space>:304:1 used parse_test_expected_npn_protocol 'int (SSL_TEST_CTX *, const char *)' static
| |-ParmVarDecl 0x22e89883030 <.//openssl//file_jk/before\test\ssl_test_ctx.c:312:34, line:43:52> col:52 used ctx 'SSL_TEST_CTX *'
| |-ParmVarDecl 0x22e898830b0 <col:57, col:69> col:69 used value 'const char *'
| `-CompoundStmt 0x22e898837d8 <line:44:5, line:49:5>
|   |-CallExpr 0x22e898832e8 <line:45:9, col:32> 'int'
|   | |-ImplicitCastExpr 0x22e898832d0 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x22e89883248 <col:9> 'int ()' Function 0x22e89889f18 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x22e89883310 <col:22, line:312:54> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x22e898832a0 <line:45:22, line:312:54> 'char *' lvalue ->expected_npn_protocol 0x22e898c8710
|   |     `-ImplicitCastExpr 0x22e89883288 <line:45:22> 'SSL_TEST_CTX *' <LValueToRValue>
|   |       `-DeclRefExpr 0x22e89883268 <col:22> 'SSL_TEST_CTX *' lvalue ParmVar 0x22e89883030 'ctx' 'SSL_TEST_CTX *'
|   |-BinaryOperator 0x22e89883440 <line:46:9, col:42> 'char *' '='
|   | |-MemberExpr 0x22e89883360 <col:9, line:312:54> 'char *' lvalue ->expected_npn_protocol 0x22e898c8710
|   | | `-ImplicitCastExpr 0x22e89883348 <line:46:9> 'SSL_TEST_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x22e89883328 <col:9> 'SSL_TEST_CTX *' lvalue ParmVar 0x22e89883030 'ctx' 'SSL_TEST_CTX *'
|   | `-ImplicitCastExpr 0x22e89883428 <col:22, col:42> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x22e898833e8 <col:22, col:42> 'int'
|   |     |-ImplicitCastExpr 0x22e898833d0 <col:22> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x22e89883390 <col:22> 'int ()' Function 0x22e89885120 'OPENSSL_strdup' 'int ()'
|   |     `-ImplicitCastExpr 0x22e89883410 <col:37> 'const char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x22e898833b0 <col:37> 'const char *' lvalue ParmVar 0x22e898830b0 'value' 'const char *'
|   |-DoStmt 0x22e89883778 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x22e89883738 <line:106:8, line:111:5>
|   | | `-IfStmt 0x22e89883720 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x22e898835c0 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x22e898835a0 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x22e89883580 <.//openssl//file_jk/before\test\ssl_test_ctx.c:47:20, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | |   |     |-ImplicitCastExpr 0x22e89883550 <.//openssl//file_jk/before\test\ssl_test_ctx.c:47:20, line:312:54> 'char *' <LValueToRValue>
|   | |   |     | `-MemberExpr 0x22e89883498 <line:47:20, line:312:54> 'char *' lvalue ->expected_npn_protocol 0x22e898c8710
|   | |   |     |   `-ImplicitCastExpr 0x22e89883480 <line:47:20> 'SSL_TEST_CTX *' <LValueToRValue>
|   | |   |     |     `-DeclRefExpr 0x22e89883460 <col:20> 'SSL_TEST_CTX *' lvalue ParmVar 0x22e89883030 'ctx' 'SSL_TEST_CTX *'
|   | |   |     `-ImplicitCastExpr 0x22e89883568 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   | |   |       `-ParenExpr 0x22e89883530 <col:17, col:27> 'void *'
|   | |   |         `-CStyleCastExpr 0x22e89883508 <col:18, col:26> 'void *' <NullToPointer>
|   | |   |           `-IntegerLiteral 0x22e898834c8 <col:26> 'int' 0
|   | |   `-CompoundStmt 0x22e89883708 <.//openssl//file_jk/before\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x22e898836e0 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x22e898836c8 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x22e898835f8 <col:13> 'int ()' Function 0x22e89885568 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x22e898836b0 <col:28, <scratch space>:2:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x22e89883698 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x22e89883658 <col:1> 'char [35]' lvalue "ctx->expected_npn_protocol != NULL"
|   | `-IntegerLiteral 0x22e89883750 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x22e89883798 <.//openssl//file_jk/before\test\ssl_test_ctx.c:47:39>
|   `-ReturnStmt 0x22e898837c8 <line:48:9, col:16>
|     `-IntegerLiteral 0x22e898837a0 <col:16> 'int' 1
|-FunctionDecl 0x22e89883970 <line:43:5, line:49:5> <scratch space>:5:1 used parse_client_alpn_protocols 'int (SSL_TEST_CLIENT_CONF *, const char *)' static
| |-ParmVarDecl 0x22e89883820 <.//openssl//file_jk/before\test\ssl_test_ctx.c:313:34, line:43:52> col:52 used ctx 'SSL_TEST_CLIENT_CONF *'
| |-ParmVarDecl 0x22e898838a0 <col:57, col:69> col:69 used value 'const char *'
| `-CompoundStmt 0x22e89883fc0 <line:44:5, line:49:5>
|   |-CallExpr 0x22e89883ad8 <line:45:9, col:32> 'int'
|   | |-ImplicitCastExpr 0x22e89883ac0 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x22e89883a38 <col:9> 'int ()' Function 0x22e89889f18 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x22e89883b00 <col:22, line:313:64> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x22e89883a90 <line:45:22, line:313:64> 'char *' lvalue ->alpn_protocols 0x22e898cf700
|   |     `-ImplicitCastExpr 0x22e89883a78 <line:45:22> 'SSL_TEST_CLIENT_CONF *' <LValueToRValue>
|   |       `-DeclRefExpr 0x22e89883a58 <col:22> 'SSL_TEST_CLIENT_CONF *' lvalue ParmVar 0x22e89883820 'ctx' 'SSL_TEST_CLIENT_CONF *'
|   |-BinaryOperator 0x22e89883c30 <line:46:9, col:42> 'char *' '='
|   | |-MemberExpr 0x22e89883b50 <col:9, line:313:64> 'char *' lvalue ->alpn_protocols 0x22e898cf700
|   | | `-ImplicitCastExpr 0x22e89883b38 <line:46:9> 'SSL_TEST_CLIENT_CONF *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x22e89883b18 <col:9> 'SSL_TEST_CLIENT_CONF *' lvalue ParmVar 0x22e89883820 'ctx' 'SSL_TEST_CLIENT_CONF *'
|   | `-ImplicitCastExpr 0x22e89883c18 <col:22, col:42> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x22e89883bd8 <col:22, col:42> 'int'
|   |     |-ImplicitCastExpr 0x22e89883bc0 <col:22> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x22e89883b80 <col:22> 'int ()' Function 0x22e89885120 'OPENSSL_strdup' 'int ()'
|   |     `-ImplicitCastExpr 0x22e89883c00 <col:37> 'const char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x22e89883ba0 <col:37> 'const char *' lvalue ParmVar 0x22e898838a0 'value' 'const char *'
|   |-DoStmt 0x22e89883f60 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x22e89883f20 <line:106:8, line:111:5>
|   | | `-IfStmt 0x22e89883f08 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x22e89883db0 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x22e89883d90 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x22e89883d70 <.//openssl//file_jk/before\test\ssl_test_ctx.c:47:20, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | |   |     |-ImplicitCastExpr 0x22e89883d40 <.//openssl//file_jk/before\test\ssl_test_ctx.c:47:20, line:313:64> 'char *' <LValueToRValue>
|   | |   |     | `-MemberExpr 0x22e89883c88 <line:47:20, line:313:64> 'char *' lvalue ->alpn_protocols 0x22e898cf700
|   | |   |     |   `-ImplicitCastExpr 0x22e89883c70 <line:47:20> 'SSL_TEST_CLIENT_CONF *' <LValueToRValue>
|   | |   |     |     `-DeclRefExpr 0x22e89883c50 <col:20> 'SSL_TEST_CLIENT_CONF *' lvalue ParmVar 0x22e89883820 'ctx' 'SSL_TEST_CLIENT_CONF *'
|   | |   |     `-ImplicitCastExpr 0x22e89883d58 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   | |   |       `-ParenExpr 0x22e89883d20 <col:17, col:27> 'void *'
|   | |   |         `-CStyleCastExpr 0x22e89883cf8 <col:18, col:26> 'void *' <NullToPointer>
|   | |   |           `-IntegerLiteral 0x22e89883cb8 <col:26> 'int' 0
|   | |   `-CompoundStmt 0x22e89883ef0 <.//openssl//file_jk/before\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x22e89883ec8 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x22e89883eb0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x22e89883de8 <col:13> 'int ()' Function 0x22e89885568 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x22e89883e98 <col:28, <scratch space>:6:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x22e89883e80 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x22e89883e48 <col:1> 'char [28]' lvalue "ctx->alpn_protocols != NULL"
|   | `-IntegerLiteral 0x22e89883f38 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x22e89883f80 <.//openssl//file_jk/before\test\ssl_test_ctx.c:47:39>
|   `-ReturnStmt 0x22e89883fb0 <line:48:9, col:16>
|     `-IntegerLiteral 0x22e89883f88 <col:16> 'int' 1
|-FunctionDecl 0x22e898871c0 <line:43:5, line:49:5> <scratch space>:9:1 used parse_server_alpn_protocols 'int (SSL_TEST_SERVER_CONF *, const char *)' static
| |-ParmVarDecl 0x22e89887070 <.//openssl//file_jk/before\test\ssl_test_ctx.c:314:34, line:43:52> col:52 used ctx 'SSL_TEST_SERVER_CONF *'
| |-ParmVarDecl 0x22e898870f0 <col:57, col:69> col:69 used value 'const char *'
| `-CompoundStmt 0x22e898877d0 <line:44:5, line:49:5>
|   |-CallExpr 0x22e89887328 <line:45:9, col:32> 'int'
|   | |-ImplicitCastExpr 0x22e89887310 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x22e89887288 <col:9> 'int ()' Function 0x22e89889f18 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x22e89887350 <col:22, line:314:64> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x22e898872e0 <line:45:22, line:314:64> 'char *' lvalue ->alpn_protocols 0x22e898cfaf0
|   |     `-ImplicitCastExpr 0x22e898872c8 <line:45:22> 'SSL_TEST_SERVER_CONF *' <LValueToRValue>
|   |       `-DeclRefExpr 0x22e898872a8 <col:22> 'SSL_TEST_SERVER_CONF *' lvalue ParmVar 0x22e89887070 'ctx' 'SSL_TEST_SERVER_CONF *'
|   |-BinaryOperator 0x22e89887480 <line:46:9, col:42> 'char *' '='
|   | |-MemberExpr 0x22e898873a0 <col:9, line:314:64> 'char *' lvalue ->alpn_protocols 0x22e898cfaf0
|   | | `-ImplicitCastExpr 0x22e89887388 <line:46:9> 'SSL_TEST_SERVER_CONF *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x22e89887368 <col:9> 'SSL_TEST_SERVER_CONF *' lvalue ParmVar 0x22e89887070 'ctx' 'SSL_TEST_SERVER_CONF *'
|   | `-ImplicitCastExpr 0x22e89887468 <col:22, col:42> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x22e89887428 <col:22, col:42> 'int'
|   |     |-ImplicitCastExpr 0x22e89887410 <col:22> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x22e898873d0 <col:22> 'int ()' Function 0x22e89885120 'OPENSSL_strdup' 'int ()'
|   |     `-ImplicitCastExpr 0x22e89887450 <col:37> 'const char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x22e898873f0 <col:37> 'const char *' lvalue ParmVar 0x22e898870f0 'value' 'const char *'
|   |-DoStmt 0x22e89887770 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x22e89887730 <line:106:8, line:111:5>
|   | | `-IfStmt 0x22e89887718 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x22e89887600 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x22e898875e0 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x22e898875c0 <.//openssl//file_jk/before\test\ssl_test_ctx.c:47:20, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | |   |     |-ImplicitCastExpr 0x22e89887590 <.//openssl//file_jk/before\test\ssl_test_ctx.c:47:20, line:314:64> 'char *' <LValueToRValue>
|   | |   |     | `-MemberExpr 0x22e898874d8 <line:47:20, line:314:64> 'char *' lvalue ->alpn_protocols 0x22e898cfaf0
|   | |   |     |   `-ImplicitCastExpr 0x22e898874c0 <line:47:20> 'SSL_TEST_SERVER_CONF *' <LValueToRValue>
|   | |   |     |     `-DeclRefExpr 0x22e898874a0 <col:20> 'SSL_TEST_SERVER_CONF *' lvalue ParmVar 0x22e89887070 'ctx' 'SSL_TEST_SERVER_CONF *'
|   | |   |     `-ImplicitCastExpr 0x22e898875a8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   | |   |       `-ParenExpr 0x22e89887570 <col:17, col:27> 'void *'
|   | |   |         `-CStyleCastExpr 0x22e89887548 <col:18, col:26> 'void *' <NullToPointer>
|   | |   |           `-IntegerLiteral 0x22e89887508 <col:26> 'int' 0
|   | |   `-CompoundStmt 0x22e89887700 <.//openssl//file_jk/before\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x22e898876d8 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x22e898876c0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x22e89887638 <col:13> 'int ()' Function 0x22e89885568 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x22e898876a8 <col:28, <scratch space>:10:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x22e89887690 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x22e89887658 <col:1> 'char [28]' lvalue "ctx->alpn_protocols != NULL"
|   | `-IntegerLiteral 0x22e89887748 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x22e89887790 <.//openssl//file_jk/before\test\ssl_test_ctx.c:47:39>
|   `-ReturnStmt 0x22e898877c0 <line:48:9, col:16>
|     `-IntegerLiteral 0x22e89887798 <col:16> 'int' 1
|-FunctionDecl 0x22e89887968 <line:43:5, line:49:5> <scratch space>:13:1 used parse_test_expected_alpn_protocol 'int (SSL_TEST_CTX *, const char *)' static
| |-ParmVarDecl 0x22e89887818 <.//openssl//file_jk/before\test\ssl_test_ctx.c:315:34, line:43:52> col:52 used ctx 'SSL_TEST_CTX *'
| |-ParmVarDecl 0x22e89887898 <col:57, col:69> col:69 used value 'const char *'
| `-CompoundStmt 0x22e89887fb8 <line:44:5, line:49:5>
|   |-CallExpr 0x22e89887ad0 <line:45:9, col:32> 'int'
|   | |-ImplicitCastExpr 0x22e89887ab8 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x22e89887a30 <col:9> 'int ()' Function 0x22e89889f18 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x22e89887af8 <col:22, line:315:54> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x22e89887a88 <line:45:22, line:315:54> 'char *' lvalue ->expected_alpn_protocol 0x22e898c8780
|   |     `-ImplicitCastExpr 0x22e89887a70 <line:45:22> 'SSL_TEST_CTX *' <LValueToRValue>
|   |       `-DeclRefExpr 0x22e89887a50 <col:22> 'SSL_TEST_CTX *' lvalue ParmVar 0x22e89887818 'ctx' 'SSL_TEST_CTX *'
|   |-BinaryOperator 0x22e89887c28 <line:46:9, col:42> 'char *' '='
|   | |-MemberExpr 0x22e89887b48 <col:9, line:315:54> 'char *' lvalue ->expected_alpn_protocol 0x22e898c8780
|   | | `-ImplicitCastExpr 0x22e89887b30 <line:46:9> 'SSL_TEST_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x22e89887b10 <col:9> 'SSL_TEST_CTX *' lvalue ParmVar 0x22e89887818 'ctx' 'SSL_TEST_CTX *'
|   | `-ImplicitCastExpr 0x22e89887c10 <col:22, col:42> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x22e89887bd0 <col:22, col:42> 'int'
|   |     |-ImplicitCastExpr 0x22e89887bb8 <col:22> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x22e89887b78 <col:22> 'int ()' Function 0x22e89885120 'OPENSSL_strdup' 'int ()'
|   |     `-ImplicitCastExpr 0x22e89887bf8 <col:37> 'const char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x22e89887b98 <col:37> 'const char *' lvalue ParmVar 0x22e89887898 'value' 'const char *'
|   |-DoStmt 0x22e89887f58 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x22e89887f18 <line:106:8, line:111:5>
|   | | `-IfStmt 0x22e89887f00 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x22e89887da8 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x22e89887d88 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x22e89887d68 <.//openssl//file_jk/before\test\ssl_test_ctx.c:47:20, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | |   |     |-ImplicitCastExpr 0x22e89887d38 <.//openssl//file_jk/before\test\ssl_test_ctx.c:47:20, line:315:54> 'char *' <LValueToRValue>
|   | |   |     | `-MemberExpr 0x22e89887c80 <line:47:20, line:315:54> 'char *' lvalue ->expected_alpn_protocol 0x22e898c8780
|   | |   |     |   `-ImplicitCastExpr 0x22e89887c68 <line:47:20> 'SSL_TEST_CTX *' <LValueToRValue>
|   | |   |     |     `-DeclRefExpr 0x22e89887c48 <col:20> 'SSL_TEST_CTX *' lvalue ParmVar 0x22e89887818 'ctx' 'SSL_TEST_CTX *'
|   | |   |     `-ImplicitCastExpr 0x22e89887d50 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   | |   |       `-ParenExpr 0x22e89887d18 <col:17, col:27> 'void *'
|   | |   |         `-CStyleCastExpr 0x22e89887cf0 <col:18, col:26> 'void *' <NullToPointer>
|   | |   |           `-IntegerLiteral 0x22e89887cb0 <col:26> 'int' 0
|   | |   `-CompoundStmt 0x22e89887ee8 <.//openssl//file_jk/before\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x22e89887ec0 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x22e89887ea8 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x22e89887de0 <col:13> 'int ()' Function 0x22e89885568 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x22e89887e90 <col:28, <scratch space>:14:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x22e89887e78 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x22e89887e38 <col:1> 'char [36]' lvalue "ctx->expected_alpn_protocol != NULL"
|   | `-IntegerLiteral 0x22e89887f30 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x22e89887f78 <.//openssl//file_jk/before\test\ssl_test_ctx.c:47:39>
|   `-ReturnStmt 0x22e89887fa8 <line:48:9, col:16>
|     `-IntegerLiteral 0x22e89887f80 <col:16> 'int' 1
|-VarDecl 0x22e89884040 <line:319:1, line:324:1> line:319:24 used ssl_handshake_modes 'const test_enum [4]' static cinit
| `-InitListExpr 0x22e89884400 <col:48, line:324:1> 'const test_enum [4]'
|   |-InitListExpr 0x22e89884450 <line:320:5, col:41> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x22e898844b8 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x22e898844a0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x22e898840a8 <col:6> 'char [7]' lvalue "Simple"
|   | `-DeclRefExpr 0x22e898840c8 <col:16> 'int' EnumConstant 0x22e898cbc60 'SSL_TEST_HANDSHAKE_SIMPLE' 'int'
|   |-InitListExpr 0x22e898844e8 <line:321:5, col:41> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x22e89884550 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x22e89884538 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x22e89884138 <col:6> 'char [7]' lvalue "Resume"
|   | `-DeclRefExpr 0x22e89884158 <col:16> 'int' EnumConstant 0x22e898cbcb8 'SSL_TEST_HANDSHAKE_RESUME' 'int'
|   |-InitListExpr 0x22e89884588 <line:322:5, col:58> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x22e898845f0 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x22e898845d8 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x22e89884208 <col:6> 'char [18]' lvalue "RenegotiateServer"
|   | `-DeclRefExpr 0x22e89884238 <col:27> 'int' EnumConstant 0x22e898cbd10 'SSL_TEST_HANDSHAKE_RENEG_SERVER' 'int'
|   `-InitListExpr 0x22e89884638 <line:323:5, col:58> 'test_enum':'test_enum'
|     |-ImplicitCastExpr 0x22e898846a0 <col:6> 'const char *' <NoOp>
|     | `-ImplicitCastExpr 0x22e89884688 <col:6> 'char *' <ArrayToPointerDecay>
|     |   `-StringLiteral 0x22e898842a8 <col:6> 'char [18]' lvalue "RenegotiateClient"
|     `-DeclRefExpr 0x22e898842d8 <col:27> 'int' EnumConstant 0x22e898cbd68 'SSL_TEST_HANDSHAKE_RENEG_CLIENT' 'int'
|-FunctionDecl 0x22e89884818 <line:326:1, line:335:1> line:326:19 invalid parse_handshake_mode 'int (SSL_TEST_CTX *, const char *)' static
| |-ParmVarDecl 0x22e898846c8 <col:40, col:54> col:54 used test_ctx 'SSL_TEST_CTX *'
| |-ParmVarDecl 0x22e89884748 <col:64, col:76> col:76 used value 'const char *'
| `-CompoundStmt 0x22e89884c30 <line:327:1, line:335:1>
|   |-DeclStmt 0x22e89884960 <line:328:5, col:18>
|   | `-VarDecl 0x22e898848f8 <col:5, col:9> col:9 used ret_value 'int'
|   |-IfStmt 0x22e89884b08 <line:329:5, line:332:5>
|   | |-OpaqueValueExpr 0x22e89884af0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x22e89884ad8 <line:330:41, line:332:5>
|   |   `-ReturnStmt 0x22e89884ac8 <line:331:9, col:16>
|   |     `-IntegerLiteral 0x22e89884aa0 <col:16> 'int' 0
|   |-BinaryOperator 0x22e89884bd8 <line:333:5, col:32> 'ssl_handshake_mode_t':'ssl_handshake_mode_t' '='
|   | |-MemberExpr 0x22e89884b58 <col:5, col:15> 'ssl_handshake_mode_t':'ssl_handshake_mode_t' lvalue ->handshake_mode 0x22e898c8200
|   | | `-ImplicitCastExpr 0x22e89884b40 <col:5> 'SSL_TEST_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x22e89884b20 <col:5> 'SSL_TEST_CTX *' lvalue ParmVar 0x22e898846c8 'test_ctx' 'SSL_TEST_CTX *'
|   | `-ImplicitCastExpr 0x22e89884bc0 <col:32> 'ssl_handshake_mode_t':'ssl_handshake_mode_t' <IntegralCast>
|   |   `-ImplicitCastExpr 0x22e89884ba8 <col:32> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x22e89884b88 <col:32> 'int' lvalue Var 0x22e898848f8 'ret_value' 'int'
|   `-ReturnStmt 0x22e89884c20 <line:334:5, col:12>
|     `-IntegerLiteral 0x22e89884bf8 <col:12> 'int' 1
|-FunctionDecl 0x22e89884d20 prev 0x22e898d09c0 <line:337:1, line:341:1> line:337:13 ssl_handshake_mode_name 'const char *(ssl_handshake_mode_t)'
| |-ParmVarDecl 0x22e89884c70 <col:37, col:58> col:58 used mode 'ssl_handshake_mode_t':'ssl_handshake_mode_t'
| `-CompoundStmt 0x22e89884f80 <line:338:1, line:341:1>
|   `-ReturnStmt 0x22e89884f70 <line:339:5, line:340:26>
|     `-CallExpr 0x22e89884ed8 <line:339:12, line:340:26> 'const char *'
|       |-ImplicitCastExpr 0x22e89884ec0 <line:339:12> 'const char *(*)(const test_enum *, size_t, int)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x22e89884dc8 <col:12> 'const char *(const test_enum *, size_t, int)' Function 0x22e8987bc70 'enum_name' 'const char *(const test_enum *, size_t, int)'
|       |-ImplicitCastExpr 0x22e89884f10 <col:22> 'const test_enum *' <ArrayToPointerDecay>
|       | `-DeclRefExpr 0x22e89884de8 <col:22> 'const test_enum [4]' lvalue Var 0x22e89884040 'ssl_handshake_modes' 'const test_enum [4]'
|       |-ImplicitCastExpr 0x22e89884f28 <col:43, col:73> 'size_t':'unsigned long long' <IntegralCast>
|       | `-CallExpr 0x22e89884e60 <col:43, col:73> 'int'
|       |   |-ImplicitCastExpr 0x22e89884e48 <col:43> 'int (*)()' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x22e89884e08 <col:43> 'int ()' Function 0x22e89877dc8 'OSSL_NELEM' 'int ()'
|       |   `-ImplicitCastExpr 0x22e89884e88 <col:54> 'const test_enum *' <ArrayToPointerDecay>
|       |     `-DeclRefExpr 0x22e89884e28 <col:54> 'const test_enum [4]' lvalue Var 0x22e89884040 'ssl_handshake_modes' 'const test_enum [4]'
|       `-ImplicitCastExpr 0x22e89884f58 <line:340:22> 'int' <IntegralCast>
|         `-ImplicitCastExpr 0x22e89884f40 <col:22> 'ssl_handshake_mode_t':'ssl_handshake_mode_t' <LValueToRValue>
|           `-DeclRefExpr 0x22e89884ea0 <col:22> 'ssl_handshake_mode_t':'ssl_handshake_mode_t' lvalue ParmVar 0x22e89884c70 'mode' 'ssl_handshake_mode_t':'ssl_handshake_mode_t'
|-FunctionDecl 0x22e89886130 <line:43:5, line:49:5> <scratch space>:17:1 used parse_client_reneg_ciphers 'int (SSL_TEST_CLIENT_CONF *, const char *)' static
| |-ParmVarDecl 0x22e89884fa8 <.//openssl//file_jk/before\test\ssl_test_ctx.c:345:34, line:43:52> col:52 used ctx 'SSL_TEST_CLIENT_CONF *'
| |-ParmVarDecl 0x22e89886060 <col:57, col:69> col:69 used value 'const char *'
| `-CompoundStmt 0x22e89886740 <line:44:5, line:49:5>
|   |-CallExpr 0x22e89886298 <line:45:9, col:32> 'int'
|   | |-ImplicitCastExpr 0x22e89886280 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x22e898861f8 <col:9> 'int ()' Function 0x22e89889f18 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x22e898862c0 <col:22, line:345:64> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x22e89886250 <line:45:22, line:345:64> 'char *' lvalue ->reneg_ciphers 0x22e898cf800
|   |     `-ImplicitCastExpr 0x22e89886238 <line:45:22> 'SSL_TEST_CLIENT_CONF *' <LValueToRValue>
|   |       `-DeclRefExpr 0x22e89886218 <col:22> 'SSL_TEST_CLIENT_CONF *' lvalue ParmVar 0x22e89884fa8 'ctx' 'SSL_TEST_CLIENT_CONF *'
|   |-BinaryOperator 0x22e898863f0 <line:46:9, col:42> 'char *' '='
|   | |-MemberExpr 0x22e89886310 <col:9, line:345:64> 'char *' lvalue ->reneg_ciphers 0x22e898cf800
|   | | `-ImplicitCastExpr 0x22e898862f8 <line:46:9> 'SSL_TEST_CLIENT_CONF *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x22e898862d8 <col:9> 'SSL_TEST_CLIENT_CONF *' lvalue ParmVar 0x22e89884fa8 'ctx' 'SSL_TEST_CLIENT_CONF *'
|   | `-ImplicitCastExpr 0x22e898863d8 <col:22, col:42> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x22e89886398 <col:22, col:42> 'int'
|   |     |-ImplicitCastExpr 0x22e89886380 <col:22> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x22e89886340 <col:22> 'int ()' Function 0x22e89885120 'OPENSSL_strdup' 'int ()'
|   |     `-ImplicitCastExpr 0x22e898863c0 <col:37> 'const char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x22e89886360 <col:37> 'const char *' lvalue ParmVar 0x22e89886060 'value' 'const char *'
|   |-DoStmt 0x22e898866e0 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x22e898866a0 <line:106:8, line:111:5>
|   | | `-IfStmt 0x22e89886688 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x22e89886570 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x22e89886550 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x22e89886530 <.//openssl//file_jk/before\test\ssl_test_ctx.c:47:20, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | |   |     |-ImplicitCastExpr 0x22e89886500 <.//openssl//file_jk/before\test\ssl_test_ctx.c:47:20, line:345:64> 'char *' <LValueToRValue>
|   | |   |     | `-MemberExpr 0x22e89886448 <line:47:20, line:345:64> 'char *' lvalue ->reneg_ciphers 0x22e898cf800
|   | |   |     |   `-ImplicitCastExpr 0x22e89886430 <line:47:20> 'SSL_TEST_CLIENT_CONF *' <LValueToRValue>
|   | |   |     |     `-DeclRefExpr 0x22e89886410 <col:20> 'SSL_TEST_CLIENT_CONF *' lvalue ParmVar 0x22e89884fa8 'ctx' 'SSL_TEST_CLIENT_CONF *'
|   | |   |     `-ImplicitCastExpr 0x22e89886518 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   | |   |       `-ParenExpr 0x22e898864e0 <col:17, col:27> 'void *'
|   | |   |         `-CStyleCastExpr 0x22e898864b8 <col:18, col:26> 'void *' <NullToPointer>
|   | |   |           `-IntegerLiteral 0x22e89886478 <col:26> 'int' 0
|   | |   `-CompoundStmt 0x22e89886670 <.//openssl//file_jk/before\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x22e89886648 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x22e89886630 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x22e898865a8 <col:13> 'int ()' Function 0x22e89885568 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x22e89886618 <col:28, <scratch space>:18:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x22e89886600 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x22e898865c8 <col:1> 'char [27]' lvalue "ctx->reneg_ciphers != NULL"
|   | `-IntegerLiteral 0x22e898866b8 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x22e89886700 <.//openssl//file_jk/before\test\ssl_test_ctx.c:47:39>
|   `-ReturnStmt 0x22e89886730 <line:48:9, col:16>
|     `-IntegerLiteral 0x22e89886708 <col:16> 'int' 1
|-VarDecl 0x22e89886798 <line:349:1, line:353:1> line:349:24 used ssl_ct_validation_modes 'const test_enum [3]' static cinit
| `-InitListExpr 0x22e89886a58 <col:52, line:353:1> 'const test_enum [3]'
|   |-InitListExpr 0x22e89886aa8 <line:350:5, col:41> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x22e89886b10 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x22e89886af8 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x22e89886800 <col:6> 'char [5]' lvalue "None"
|   | `-DeclRefExpr 0x22e89886820 <col:14> 'int' EnumConstant 0x22e898cbfa0 'SSL_TEST_CT_VALIDATION_NONE' 'int'
|   |-InitListExpr 0x22e89886b40 <line:351:5, col:53> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x22e89886ba8 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x22e89886b90 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x22e89886890 <col:6> 'char [11]' lvalue "Permissive"
|   | `-DeclRefExpr 0x22e898868b8 <col:20> 'int' EnumConstant 0x22e898cbff8 'SSL_TEST_CT_VALIDATION_PERMISSIVE' 'int'
|   `-InitListExpr 0x22e89886be0 <line:352:5, col:45> 'test_enum':'test_enum'
|     |-ImplicitCastExpr 0x22e89886c48 <col:6> 'const char *' <NoOp>
|     | `-ImplicitCastExpr 0x22e89886c30 <col:6> 'char *' <ArrayToPointerDecay>
|     |   `-StringLiteral 0x22e89886928 <col:6> 'char [7]' lvalue "Strict"
|     `-DeclRefExpr 0x22e89886948 <col:16> 'int' EnumConstant 0x22e898cc050 'SSL_TEST_CT_VALIDATION_STRICT' 'int'
|-FunctionDecl 0x22e89886de0 <line:355:1, line:365:1> line:355:19 invalid parse_ct_validation 'int (SSL_TEST_CLIENT_CONF *, const char *)' static
| |-ParmVarDecl 0x22e89886c90 <col:39, col:61> col:61 used client_conf 'SSL_TEST_CLIENT_CONF *'
| |-ParmVarDecl 0x22e89886d10 <line:356:39, col:51> col:51 used value 'const char *'
| `-CompoundStmt 0x22e898821d0 <line:357:1, line:365:1>
|   |-DeclStmt 0x22e89886f28 <line:358:5, col:18>
|   | `-VarDecl 0x22e89886ec0 <col:5, col:9> col:9 used ret_value 'int'
|   |-IfStmt 0x22e898820a8 <line:359:5, line:362:5>
|   | |-OpaqueValueExpr 0x22e89882090 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x22e89882078 <line:360:41, line:362:5>
|   |   `-ReturnStmt 0x22e89882068 <line:361:9, col:16>
|   |     `-IntegerLiteral 0x22e89882040 <col:16> 'int' 0
|   |-BinaryOperator 0x22e89882178 <line:363:5, col:34> 'ssl_ct_validation_t':'ssl_ct_validation_t' '='
|   | |-MemberExpr 0x22e898820f8 <col:5, col:18> 'ssl_ct_validation_t':'ssl_ct_validation_t' lvalue ->ct_validation 0x22e898cf790
|   | | `-ImplicitCastExpr 0x22e898820e0 <col:5> 'SSL_TEST_CLIENT_CONF *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x22e898820c0 <col:5> 'SSL_TEST_CLIENT_CONF *' lvalue ParmVar 0x22e89886c90 'client_conf' 'SSL_TEST_CLIENT_CONF *'
|   | `-ImplicitCastExpr 0x22e89882160 <col:34> 'ssl_ct_validation_t':'ssl_ct_validation_t' <IntegralCast>
|   |   `-ImplicitCastExpr 0x22e89882148 <col:34> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x22e89882128 <col:34> 'int' lvalue Var 0x22e89886ec0 'ret_value' 'int'
|   `-ReturnStmt 0x22e898821c0 <line:364:5, col:12>
|     `-IntegerLiteral 0x22e89882198 <col:12> 'int' 1
|-FunctionDecl 0x22e898822c0 prev 0x22e898d0ba0 <line:367:1, line:371:1> line:367:13 ssl_ct_validation_name 'const char *(ssl_ct_validation_t)'
| |-ParmVarDecl 0x22e89882210 <col:36, col:56> col:56 used mode 'ssl_ct_validation_t':'ssl_ct_validation_t'
| `-CompoundStmt 0x22e89882520 <line:368:1, line:371:1>
|   `-ReturnStmt 0x22e89882510 <line:369:5, line:370:26>
|     `-CallExpr 0x22e89882478 <line:369:12, line:370:26> 'const char *'
|       |-ImplicitCastExpr 0x22e89882460 <line:369:12> 'const char *(*)(const test_enum *, size_t, int)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x22e89882368 <col:12> 'const char *(const test_enum *, size_t, int)' Function 0x22e8987bc70 'enum_name' 'const char *(const test_enum *, size_t, int)'
|       |-ImplicitCastExpr 0x22e898824b0 <col:22> 'const test_enum *' <ArrayToPointerDecay>
|       | `-DeclRefExpr 0x22e89882388 <col:22> 'const test_enum [3]' lvalue Var 0x22e89886798 'ssl_ct_validation_modes' 'const test_enum [3]'
|       |-ImplicitCastExpr 0x22e898824c8 <col:47, col:81> 'size_t':'unsigned long long' <IntegralCast>
|       | `-CallExpr 0x22e89882400 <col:47, col:81> 'int'
|       |   |-ImplicitCastExpr 0x22e898823e8 <col:47> 'int (*)()' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x22e898823a8 <col:47> 'int ()' Function 0x22e89877dc8 'OSSL_NELEM' 'int ()'
|       |   `-ImplicitCastExpr 0x22e89882428 <col:58> 'const test_enum *' <ArrayToPointerDecay>
|       |     `-DeclRefExpr 0x22e898823c8 <col:58> 'const test_enum [3]' lvalue Var 0x22e89886798 'ssl_ct_validation_modes' 'const test_enum [3]'
|       `-ImplicitCastExpr 0x22e898824f8 <line:370:22> 'int' <IntegralCast>
|         `-ImplicitCastExpr 0x22e898824e0 <col:22> 'ssl_ct_validation_t':'ssl_ct_validation_t' <LValueToRValue>
|           `-DeclRefExpr 0x22e89882440 <col:22> 'ssl_ct_validation_t':'ssl_ct_validation_t' lvalue ParmVar 0x22e89882210 'mode' 'ssl_ct_validation_t':'ssl_ct_validation_t'
|-FunctionDecl 0x22e89882698 <line:37:5, line:40:5> <scratch space>:21:1 used parse_test_resumption_expected 'int (SSL_TEST_CTX *, const char *)' static
| |-ParmVarDecl 0x22e89882548 <.//openssl//file_jk/before\test\ssl_test_ctx.c:373:32, line:37:52> col:52 used ctx 'SSL_TEST_CTX *'
| |-ParmVarDecl 0x22e898825c8 <col:57, col:69> col:69 used value 'const char *'
| `-CompoundStmt 0x22e898828b8 <line:38:5, line:40:5>
|   `-ReturnStmt 0x22e898828a8 <line:39:9, col:48>
|     `-CallExpr 0x22e89882860 <col:16, col:48> 'int'
|       |-ImplicitCastExpr 0x22e89882848 <col:16> 'int (*)(const char *, int *)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x22e89882760 <col:16> 'int (const char *, int *)' Function 0x22e8987e470 'parse_boolean' 'int (const char *, int *)'
|       |-ImplicitCastExpr 0x22e89882890 <col:30> 'const char *' <LValueToRValue>
|       | `-DeclRefExpr 0x22e89882780 <col:30> 'const char *' lvalue ParmVar 0x22e898825c8 'value' 'const char *'
|       `-UnaryOperator 0x22e89882808 <col:37, line:373:52> 'int *' prefix '&' cannot overflow
|         `-MemberExpr 0x22e898827d8 <line:39:38, line:373:52> 'int' lvalue ->resumption_expected 0x22e898c87f0
|           `-ImplicitCastExpr 0x22e898827c0 <line:39:38> 'SSL_TEST_CTX *' <LValueToRValue>
|             `-DeclRefExpr 0x22e898827a0 <col:38> 'SSL_TEST_CTX *' lvalue ParmVar 0x22e89882548 'ctx' 'SSL_TEST_CTX *'
|-FunctionDecl 0x22e89882a30 <line:37:5, line:40:5> <scratch space>:24:1 used parse_server_broken_session_ticket 'int (SSL_TEST_SERVER_CONF *, const char *)' static
| |-ParmVarDecl 0x22e898828e0 <.//openssl//file_jk/before\test\ssl_test_ctx.c:374:32, line:37:52> col:52 used ctx 'SSL_TEST_SERVER_CONF *'
| |-ParmVarDecl 0x22e89882960 <col:57, col:69> col:69 used value 'const char *'
| `-CompoundStmt 0x22e89882c28 <line:38:5, line:40:5>
|   `-ReturnStmt 0x22e89882c18 <line:39:9, col:48>
|     `-CallExpr 0x22e89882bd0 <col:16, col:48> 'int'
|       |-ImplicitCastExpr 0x22e89882bb8 <col:16> 'int (*)(const char *, int *)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x22e89882af8 <col:16> 'int (const char *, int *)' Function 0x22e8987e470 'parse_boolean' 'int (const char *, int *)'
|       |-ImplicitCastExpr 0x22e89882c00 <col:30> 'const char *' <LValueToRValue>
|       | `-DeclRefExpr 0x22e89882b18 <col:30> 'const char *' lvalue ParmVar 0x22e89882960 'value' 'const char *'
|       `-UnaryOperator 0x22e89882ba0 <col:37, line:374:62> 'int *' prefix '&' cannot overflow
|         `-MemberExpr 0x22e89882b70 <line:39:38, line:374:62> 'int' lvalue ->broken_session_ticket 0x22e898cfb60
|           `-ImplicitCastExpr 0x22e89882b58 <line:39:38> 'SSL_TEST_SERVER_CONF *' <LValueToRValue>
|             `-DeclRefExpr 0x22e89882b38 <col:38> 'SSL_TEST_SERVER_CONF *' lvalue ParmVar 0x22e898828e0 'ctx' 'SSL_TEST_SERVER_CONF *'
|-VarDecl 0x22e89882c60 <line:378:1, line:382:1> line:378:24 used ssl_certstatus 'const test_enum [3]' static cinit
| `-InitListExpr 0x22e89882f60 <col:43, line:382:1> 'const test_enum [3]'
|   |-InitListExpr 0x22e89882fb0 <line:379:5, col:39> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x22e8988a0a0 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x22e89883000 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x22e89882cc8 <col:6> 'char [5]' lvalue "None"
|   | `-DeclRefExpr 0x22e89882ce8 <col:14> 'int' EnumConstant 0x22e898cf2d0 'SSL_TEST_CERT_STATUS_NONE' 'int'
|   |-InitListExpr 0x22e8988a0d0 <line:380:5, col:56> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x22e8988a138 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x22e8988a120 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x22e89882d58 <col:6> 'char [13]' lvalue "GoodResponse"
|   | `-DeclRefExpr 0x22e89882d80 <col:22> 'int' EnumConstant 0x22e898cf328 'SSL_TEST_CERT_STATUS_GOOD_RESPONSE' 'int'
|   `-InitListExpr 0x22e8988a170 <line:381:5, col:54> 'test_enum':'test_enum'
|     |-ImplicitCastExpr 0x22e8988a1d8 <col:6> 'const char *' <NoOp>
|     | `-ImplicitCastExpr 0x22e8988a1c0 <col:6> 'char *' <ArrayToPointerDecay>
|     |   `-StringLiteral 0x22e89882e28 <col:6> 'char [12]' lvalue "BadResponse"
|     `-DeclRefExpr 0x22e89882e50 <col:21> 'int' EnumConstant 0x22e898cf380 'SSL_TEST_CERT_STATUS_BAD_RESPONSE' 'int'
|-FunctionDecl 0x22e8988a370 <line:384:1, line:394:1> line:384:19 invalid parse_certstatus 'int (SSL_TEST_SERVER_CONF *, const char *)' static
| |-ParmVarDecl 0x22e8988a220 <col:36, col:58> col:58 used server_conf 'SSL_TEST_SERVER_CONF *'
| |-ParmVarDecl 0x22e8988a2a0 <line:385:45, col:57> col:57 used value 'const char *'
| `-CompoundStmt 0x22e8988a788 <line:386:1, line:394:1>
|   |-DeclStmt 0x22e8988a4b8 <line:387:5, col:18>
|   | `-VarDecl 0x22e8988a450 <col:5, col:9> col:9 used ret_value 'int'
|   |-IfStmt 0x22e8988a660 <line:388:5, line:391:5>
|   | |-OpaqueValueExpr 0x22e8988a648 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x22e8988a630 <line:389:29, line:391:5>
|   |   `-ReturnStmt 0x22e8988a620 <line:390:9, col:16>
|   |     `-IntegerLiteral 0x22e8988a5f8 <col:16> 'int' 0
|   |-BinaryOperator 0x22e8988a730 <line:392:5, col:32> 'ssl_cert_status_t':'ssl_cert_status_t' '='
|   | |-MemberExpr 0x22e8988a6b0 <col:5, col:18> 'ssl_cert_status_t':'ssl_cert_status_t' lvalue ->cert_status 0x22e898cfbf0
|   | | `-ImplicitCastExpr 0x22e8988a698 <col:5> 'SSL_TEST_SERVER_CONF *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x22e8988a678 <col:5> 'SSL_TEST_SERVER_CONF *' lvalue ParmVar 0x22e8988a220 'server_conf' 'SSL_TEST_SERVER_CONF *'
|   | `-ImplicitCastExpr 0x22e8988a718 <col:32> 'ssl_cert_status_t':'ssl_cert_status_t' <IntegralCast>
|   |   `-ImplicitCastExpr 0x22e8988a700 <col:32> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x22e8988a6e0 <col:32> 'int' lvalue Var 0x22e8988a450 'ret_value' 'int'
|   `-ReturnStmt 0x22e8988a778 <line:393:5, col:12>
|     `-IntegerLiteral 0x22e8988a750 <col:12> 'int' 1
|-FunctionDecl 0x22e8988a878 prev 0x22e898d0d80 <line:396:1, line:400:1> line:396:13 ssl_certstatus_name 'const char *(ssl_cert_status_t)'
| |-ParmVarDecl 0x22e8988a7c8 <col:33, col:51> col:51 used cert_status 'ssl_cert_status_t':'ssl_cert_status_t'
| `-CompoundStmt 0x22e8988aad8 <line:397:1, line:400:1>
|   `-ReturnStmt 0x22e8988aac8 <line:398:5, line:399:61>
|     `-CallExpr 0x22e8988aa30 <line:398:12, line:399:61> 'const char *'
|       |-ImplicitCastExpr 0x22e8988aa18 <line:398:12> 'const char *(*)(const test_enum *, size_t, int)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x22e8988a920 <col:12> 'const char *(const test_enum *, size_t, int)' Function 0x22e8987bc70 'enum_name' 'const char *(const test_enum *, size_t, int)'
|       |-ImplicitCastExpr 0x22e8988aa68 <col:22> 'const test_enum *' <ArrayToPointerDecay>
|       | `-DeclRefExpr 0x22e8988a940 <col:22> 'const test_enum [3]' lvalue Var 0x22e89882c60 'ssl_certstatus' 'const test_enum [3]'
|       |-ImplicitCastExpr 0x22e8988aa80 <line:399:22, col:47> 'size_t':'unsigned long long' <IntegralCast>
|       | `-CallExpr 0x22e8988a9b8 <col:22, col:47> 'int'
|       |   |-ImplicitCastExpr 0x22e8988a9a0 <col:22> 'int (*)()' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x22e8988a960 <col:22> 'int ()' Function 0x22e89877dc8 'OSSL_NELEM' 'int ()'
|       |   `-ImplicitCastExpr 0x22e8988a9e0 <col:33> 'const test_enum *' <ArrayToPointerDecay>
|       |     `-DeclRefExpr 0x22e8988a980 <col:33> 'const test_enum [3]' lvalue Var 0x22e89882c60 'ssl_certstatus' 'const test_enum [3]'
|       `-ImplicitCastExpr 0x22e8988aab0 <col:50> 'int' <IntegralCast>
|         `-ImplicitCastExpr 0x22e8988aa98 <col:50> 'ssl_cert_status_t':'ssl_cert_status_t' <LValueToRValue>
|           `-DeclRefExpr 0x22e8988a9f8 <col:50> 'ssl_cert_status_t':'ssl_cert_status_t' lvalue ParmVar 0x22e8988a7c8 'cert_status' 'ssl_cert_status_t':'ssl_cert_status_t'
|-FunctionDecl 0x22e8988ac50 <line:52:5, line:56:5> <scratch space>:27:1 used parse_test_app_data_size 'int (SSL_TEST_CTX *, const char *)' static
| |-ParmVarDecl 0x22e8988ab00 <.//openssl//file_jk/before\test\ssl_test_ctx.c:404:31, line:52:52> col:52 used ctx 'SSL_TEST_CTX *'
| |-ParmVarDecl 0x22e8988ab80 <col:57, col:69> col:69 used value 'const char *'
| `-CompoundStmt 0x22e8988af60 <line:53:5, line:56:5>
|   |-BinaryOperator 0x22e8988af08 <line:54:9, col:32> 'int' '='
|   | |-MemberExpr 0x22e8988ad50 <col:9, line:404:51> 'int' lvalue ->app_data_size 0x22e898c8270
|   | | `-ImplicitCastExpr 0x22e8988ad38 <line:54:9> 'SSL_TEST_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x22e8988ad18 <col:9> 'SSL_TEST_CTX *' lvalue ParmVar 0x22e8988ab00 'ctx' 'SSL_TEST_CTX *'
|   | `-CallExpr 0x22e8988aec8 <col:22, col:32> 'int'
|   |   |-ImplicitCastExpr 0x22e8988aeb0 <col:22> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x22e8988ae70 <col:22> 'int ()' Function 0x22e8988ada8 'atoi' 'int ()'
|   |   `-ImplicitCastExpr 0x22e8988aef0 <col:27> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x22e8988ae90 <col:27> 'const char *' lvalue ParmVar 0x22e8988ab80 'value' 'const char *'
|   `-ReturnStmt 0x22e8988af50 <line:55:9, col:16>
|     `-IntegerLiteral 0x22e8988af28 <col:16> 'int' 1
|-FunctionDecl 0x22e8988f140 <line:52:5, line:56:5> <scratch space>:30:1 used parse_test_max_fragment_size 'int (SSL_TEST_CTX *, const char *)' static
| |-ParmVarDecl 0x22e8988af90 <.//openssl//file_jk/before\test\ssl_test_ctx.c:409:31, line:52:52> col:52 used ctx 'SSL_TEST_CTX *'
| |-ParmVarDecl 0x22e8988b010 <col:57, col:69> col:69 used value 'const char *'
| `-CompoundStmt 0x22e8988f360 <line:53:5, line:56:5>
|   |-BinaryOperator 0x22e8988f308 <line:54:9, col:32> 'int' '='
|   | |-MemberExpr 0x22e8988f240 <col:9, line:409:51> 'int' lvalue ->max_fragment_size 0x22e898c82e0
|   | | `-ImplicitCastExpr 0x22e8988f228 <line:54:9> 'SSL_TEST_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x22e8988f208 <col:9> 'SSL_TEST_CTX *' lvalue ParmVar 0x22e8988af90 'ctx' 'SSL_TEST_CTX *'
|   | `-CallExpr 0x22e8988f2c8 <col:22, col:32> 'int'
|   |   |-ImplicitCastExpr 0x22e8988f2b0 <col:22> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x22e8988f270 <col:22> 'int ()' Function 0x22e8988ada8 'atoi' 'int ()'
|   |   `-ImplicitCastExpr 0x22e8988f2f0 <col:27> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x22e8988f290 <col:27> 'const char *' lvalue ParmVar 0x22e8988b010 'value' 'const char *'
|   `-ReturnStmt 0x22e8988f350 <line:55:9, col:16>
|     `-IntegerLiteral 0x22e8988f328 <col:16> 'int' 1
|-FunctionDecl 0x22e8988f4e0 <line:414:1, line:432:1> line:414:19 invalid parse_expected_tmp_key_type 'int (SSL_TEST_CTX *, const char *)' static
| |-ParmVarDecl 0x22e8988f390 <col:47, col:61> col:61 used test_ctx 'SSL_TEST_CTX *'
| |-ParmVarDecl 0x22e8988f410 <line:415:47, col:59> col:59 used value 'const char *'
| `-CompoundStmt 0x22e8988ff18 <line:416:1, line:432:1>
|   |-DeclStmt 0x22e8988f628 <line:417:5, col:12>
|   | `-VarDecl 0x22e8988f5c0 <col:5, col:9> col:9 used nid 'int'
|   |-IfStmt 0x22e8988f770 <line:419:5, line:420:16>
|   | |-BinaryOperator 0x22e8988f718 <line:419:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x22e8988f6e8 <.//openssl//file_jk/before\test\ssl_test_ctx.c:419:9> 'const char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x22e8988f640 <col:9> 'const char *' lvalue ParmVar 0x22e8988f410 'value' 'const char *'
|   | | `-ImplicitCastExpr 0x22e8988f700 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const char *' <BitCast>
|   | |   `-ParenExpr 0x22e8988f6c8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x22e8988f6a0 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x22e8988f660 <col:26> 'int' 0
|   | `-ReturnStmt 0x22e8988f760 <.//openssl//file_jk/before\test\ssl_test_ctx.c:420:9, col:16>
|   |   `-IntegerLiteral 0x22e8988f738 <col:16> 'int' 0
|   |-BinaryOperator 0x22e8988f948 <line:421:5, col:27> 'int' '='
|   | |-DeclRefExpr 0x22e8988f788 <col:5> 'int' lvalue Var 0x22e8988f5c0 'nid' 'int'
|   | `-CallExpr 0x22e8988f908 <col:11, col:27> 'int'
|   |   |-ImplicitCastExpr 0x22e8988f8f0 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x22e8988f8b0 <col:11> 'int ()' Function 0x22e8988f7e8 'OBJ_sn2nid' 'int ()'
|   |   `-ImplicitCastExpr 0x22e8988f930 <col:22> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x22e8988f8d0 <col:22> 'const char *' lvalue ParmVar 0x22e8988f410 'value' 'const char *'
|   |-IfStmt 0x22e8988fb68 <line:422:5, line:423:31>
|   | |-OpaqueValueExpr 0x22e8988fb50 <<invalid sloc>> '_Bool'
|   | `-BinaryOperator 0x22e8988fb30 <col:9, col:31> 'int' '='
|   |   |-DeclRefExpr 0x22e8988f988 <col:9> 'int' lvalue Var 0x22e8988f5c0 'nid' 'int'
|   |   `-CallExpr 0x22e8988faf0 <col:15, col:31> 'int'
|   |     |-ImplicitCastExpr 0x22e8988fad8 <col:15> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x22e8988fa98 <col:15> 'int ()' Function 0x22e8988f9d0 'OBJ_ln2nid' 'int ()'
|   |     `-ImplicitCastExpr 0x22e8988fb18 <col:26> 'const char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x22e8988fab8 <col:26> 'const char *' lvalue ParmVar 0x22e8988f410 'value' 'const char *'
|   |-IfStmt 0x22e8988fd80 <line:425:5, line:426:38>
|   | |-OpaqueValueExpr 0x22e8988fd68 <<invalid sloc>> '_Bool'
|   | `-BinaryOperator 0x22e8988fd48 <col:9, col:38> 'int' '='
|   |   |-DeclRefExpr 0x22e8988fba0 <col:9> 'int' lvalue Var 0x22e8988f5c0 'nid' 'int'
|   |   `-CallExpr 0x22e8988fd08 <col:15, col:38> 'int'
|   |     |-ImplicitCastExpr 0x22e8988fcf0 <col:15> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x22e8988fcb0 <col:15> 'int ()' Function 0x22e8988fbe8 'EC_curve_nist2nid' 'int ()'
|   |     `-ImplicitCastExpr 0x22e8988fd30 <col:33> 'const char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x22e8988fcd0 <col:33> 'const char *' lvalue ParmVar 0x22e8988f410 'value' 'const char *'
|   |-IfStmt 0x22e8988fe08 <line:428:5, line:429:16>
|   | |-OpaqueValueExpr 0x22e8988fdf0 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x22e8988fde0 <col:9, col:16>
|   |   `-IntegerLiteral 0x22e8988fdb8 <col:16> 'int' 0
|   |-BinaryOperator 0x22e8988fec0 <line:430:5, col:39> 'int' '='
|   | |-MemberExpr 0x22e8988fe58 <col:5, col:15> 'int' lvalue ->expected_tmp_key_type 0x22e898c8860
|   | | `-ImplicitCastExpr 0x22e8988fe40 <col:5> 'SSL_TEST_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x22e8988fe20 <col:5> 'SSL_TEST_CTX *' lvalue ParmVar 0x22e8988f390 'test_ctx' 'SSL_TEST_CTX *'
|   | `-ImplicitCastExpr 0x22e8988fea8 <col:39> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x22e8988fe88 <col:39> 'int' lvalue Var 0x22e8988f5c0 'nid' 'int'
|   `-ReturnStmt 0x22e8988ff08 <line:431:5, col:12>
|     `-IntegerLiteral 0x22e8988fee0 <col:12> 'int' 1
|-RecordDecl 0x22e8988ff68 <line:437:9, line:440:1> line:437:9 struct definition
| |-FieldDecl 0x22e89890038 <line:438:5, col:17> col:17 referenced name 'const char *'
| `-FieldDecl 0x22e8988b2a0 <line:439:5, col:59> col:11 referenced parse 'int (*)(SSL_TEST_CTX *, const char *)'
|-TypedefDecl 0x22e8988b358 <line:437:1, line:440:3> col:3 referenced ssl_test_ctx_option 'struct ssl_test_ctx_option':'ssl_test_ctx_option'
| `-ElaboratedType 0x22e8988b300 'struct ssl_test_ctx_option' sugar
|   `-RecordType 0x22e89890000 'ssl_test_ctx_option'
|     `-Record 0x22e8988ff68 ''
|-VarDecl 0x22e8988b468 <line:442:1, col:55> col:34 used ssl_test_ctx_options 'const ssl_test_ctx_option []' static
|-RecordDecl 0x22e8988bb10 <line:460:9, line:463:1> line:460:9 struct definition
| |-FieldDecl 0x22e8988bbe8 <line:461:5, col:17> col:17 referenced name 'const char *'
| `-FieldDecl 0x22e8988be40 <line:462:5, col:63> col:11 referenced parse 'int (*)(SSL_TEST_CLIENT_CONF *, const char *)'
|-TypedefDecl 0x22e8988bef8 <line:460:1, line:463:3> col:3 referenced ssl_test_client_option 'struct ssl_test_client_option':'ssl_test_client_option'
| `-ElaboratedType 0x22e8988bea0 'struct ssl_test_client_option' sugar
|   `-RecordType 0x22e8988bbb0 'ssl_test_client_option'
|     `-Record 0x22e8988bb10 ''
|-VarDecl 0x22e8988c008 <line:465:1, col:61> col:37 used ssl_test_client_options 'const ssl_test_client_option []' static
|-RecordDecl 0x22e8988c368 <line:475:9, line:478:1> line:475:9 struct definition
| |-FieldDecl 0x22e8988c438 <line:476:5, col:17> col:17 referenced name 'const char *'
| `-FieldDecl 0x22e8988c690 <line:477:5, col:63> col:11 referenced parse 'int (*)(SSL_TEST_SERVER_CONF *, const char *)'
|-TypedefDecl 0x22e8988c748 <line:475:1, line:478:3> col:3 referenced ssl_test_server_option 'struct ssl_test_server_option':'ssl_test_server_option'
| `-ElaboratedType 0x22e8988c6f0 'struct ssl_test_server_option' sugar
|   `-RecordType 0x22e8988c400 'ssl_test_server_option'
|     `-Record 0x22e8988c368 ''
|-VarDecl 0x22e8988c858 <line:480:1, col:61> col:37 used ssl_test_server_options 'const ssl_test_server_option []' static
|-FunctionDecl 0x22e8988cbf8 prev 0x22e898d12b8 <line:492:1, line:500:1> line:492:15 used SSL_TEST_CTX_new 'SSL_TEST_CTX *(void)'
| `-CompoundStmt 0x22e8988d498 <line:493:1, line:500:1>
|   |-DeclStmt 0x22e8988cd10 <line:494:5, col:22>
|   | `-VarDecl 0x22e8988cca8 <col:5, col:19> col:19 used ret 'SSL_TEST_CTX *'
|   |-BinaryOperator 0x22e8988cf58 <line:495:5, col:38> 'SSL_TEST_CTX *' '='
|   | |-DeclRefExpr 0x22e8988cd28 <col:5> 'SSL_TEST_CTX *' lvalue Var 0x22e8988cca8 'ret' 'SSL_TEST_CTX *'
|   | `-ImplicitCastExpr 0x22e8988cf40 <col:11, col:38> 'SSL_TEST_CTX *' <IntegralToPointer>
|   |   `-CallExpr 0x22e8988cf18 <col:11, col:38> 'int'
|   |     |-ImplicitCastExpr 0x22e8988cf00 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x22e8988ce50 <col:11> 'int ()' Function 0x22e8988cd88 'OPENSSL_zalloc' 'int ()'
|   |     `-UnaryExprOrTypeTraitExpr 0x22e8988cee0 <col:26, col:37> 'unsigned long long' sizeof
|   |       `-ParenExpr 0x22e8988cec0 <col:32, col:37> 'SSL_TEST_CTX':'SSL_TEST_CTX' lvalue
|   |         `-UnaryOperator 0x22e8988cea8 <col:33, col:34> 'SSL_TEST_CTX':'SSL_TEST_CTX' lvalue prefix '*' cannot overflow
|   |           `-ImplicitCastExpr 0x22e8988ce90 <col:34> 'SSL_TEST_CTX *' <LValueToRValue>
|   |             `-DeclRefExpr 0x22e8988ce70 <col:34> 'SSL_TEST_CTX *' lvalue Var 0x22e8988cca8 'ret' 'SSL_TEST_CTX *' non_odr_use_unevaluated
|   |-DoStmt 0x22e8988d218 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x22e8988d1d8 <line:106:8, line:111:5>
|   | | `-IfStmt 0x22e8988d1c0 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x22e8988d090 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x22e8988d070 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x22e8988d050 <.//openssl//file_jk/before\test\ssl_test_ctx.c:496:16, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | |   |     |-ImplicitCastExpr 0x22e8988d020 <.//openssl//file_jk/before\test\ssl_test_ctx.c:496:16> 'SSL_TEST_CTX *' <LValueToRValue>
|   | |   |     | `-DeclRefExpr 0x22e8988cf78 <col:16> 'SSL_TEST_CTX *' lvalue Var 0x22e8988cca8 'ret' 'SSL_TEST_CTX *'
|   | |   |     `-ImplicitCastExpr 0x22e8988d038 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'SSL_TEST_CTX *' <BitCast>
|   | |   |       `-ParenExpr 0x22e8988d000 <col:17, col:27> 'void *'
|   | |   |         `-CStyleCastExpr 0x22e8988cfd8 <col:18, col:26> 'void *' <NullToPointer>
|   | |   |           `-IntegerLiteral 0x22e8988cf98 <col:26> 'int' 0
|   | |   `-CompoundStmt 0x22e8988d1a8 <.//openssl//file_jk/before\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x22e8988d180 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x22e8988d168 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x22e8988d0f0 <col:13> 'int ()' Function 0x22e89885568 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x22e8988d150 <col:28, <scratch space>:31:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x22e8988d138 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x22e8988d110 <col:1> 'char [12]' lvalue "ret != NULL"
|   | `-IntegerLiteral 0x22e8988d1f0 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x22e8988d238 <.//openssl//file_jk/before\test\ssl_test_ctx.c:496:28>
|   |-BinaryOperator 0x22e8988d2e0 <line:497:5, col:26> 'int' '='
|   | |-MemberExpr 0x22e8988d278 <col:5, col:10> 'int' lvalue ->app_data_size 0x22e898c8270
|   | | `-ImplicitCastExpr 0x22e8988d260 <col:5> 'SSL_TEST_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x22e8988d240 <col:5> 'SSL_TEST_CTX *' lvalue Var 0x22e8988cca8 'ret' 'SSL_TEST_CTX *'
|   | `-ImplicitCastExpr 0x22e8988d2c8 <col:26> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x22e8988d2a8 <col:26> 'const int' lvalue Var 0x22e8987e168 'default_app_data_size' 'const int'
|   |-BinaryOperator 0x22e8988d3e8 <line:498:5, col:30> 'int' '='
|   | |-MemberExpr 0x22e8988d380 <col:5, col:10> 'int' lvalue ->max_fragment_size 0x22e898c82e0
|   | | `-ImplicitCastExpr 0x22e8988d368 <col:5> 'SSL_TEST_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x22e8988d348 <col:5> 'SSL_TEST_CTX *' lvalue Var 0x22e8988cca8 'ret' 'SSL_TEST_CTX *'
|   | `-ImplicitCastExpr 0x22e8988d3d0 <col:30> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x22e8988d3b0 <col:30> 'const int' lvalue Var 0x22e8987e228 'default_max_fragment_size' 'const int'
|   `-ReturnStmt 0x22e8988d488 <line:499:5, col:12>
|     `-ImplicitCastExpr 0x22e8988d470 <col:12> 'SSL_TEST_CTX *' <LValueToRValue>
|       `-DeclRefExpr 0x22e8988d450 <col:12> 'SSL_TEST_CTX *' lvalue Var 0x22e8988cca8 'ret' 'SSL_TEST_CTX *'
|-FunctionDecl 0x22e8988d658 <line:502:1, line:511:1> line:502:13 used ssl_test_extra_conf_free_data 'void (SSL_TEST_EXTRA_CONF *)' static
| |-ParmVarDecl 0x22e8988d548 <col:43, col:64> col:64 used conf 'SSL_TEST_EXTRA_CONF *'
| `-CompoundStmt 0x22e8988de88 <line:503:1, line:511:1>
|   |-CallExpr 0x22e8988d7e8 <line:504:5, col:44> 'int'
|   | |-ImplicitCastExpr 0x22e8988d7d0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x22e8988d718 <col:5> 'int ()' Function 0x22e89889f18 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x22e8988d810 <col:18, col:31> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x22e8988d7a0 <col:18, col:31> 'char *' lvalue .npn_protocols 0x22e898cf690
|   |     `-MemberExpr 0x22e8988d770 <col:18, col:24> 'SSL_TEST_CLIENT_CONF':'SSL_TEST_CLIENT_CONF' lvalue ->client 0x22e898cfe00
|   |       `-ImplicitCastExpr 0x22e8988d758 <col:18> 'SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   |         `-DeclRefExpr 0x22e8988d738 <col:18> 'SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x22e8988d548 'conf' 'SSL_TEST_EXTRA_CONF *'
|   |-CallExpr 0x22e8988d8f8 <line:505:5, col:44> 'int'
|   | |-ImplicitCastExpr 0x22e8988d8e0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x22e8988d828 <col:5> 'int ()' Function 0x22e89889f18 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x22e8988d920 <col:18, col:31> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x22e8988d8b0 <col:18, col:31> 'char *' lvalue .npn_protocols 0x22e898cfa80
|   |     `-MemberExpr 0x22e8988d880 <col:18, col:24> 'SSL_TEST_SERVER_CONF':'SSL_TEST_SERVER_CONF' lvalue ->server 0x22e898cfe90
|   |       `-ImplicitCastExpr 0x22e8988d868 <col:18> 'SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   |         `-DeclRefExpr 0x22e8988d848 <col:18> 'SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x22e8988d548 'conf' 'SSL_TEST_EXTRA_CONF *'
|   |-CallExpr 0x22e8988da08 <line:506:5, col:45> 'int'
|   | |-ImplicitCastExpr 0x22e8988d9f0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x22e8988d938 <col:5> 'int ()' Function 0x22e89889f18 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x22e8988da30 <col:18, col:32> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x22e8988d9c0 <col:18, col:32> 'char *' lvalue .npn_protocols 0x22e898cfa80
|   |     `-MemberExpr 0x22e8988d990 <col:18, col:24> 'SSL_TEST_SERVER_CONF':'SSL_TEST_SERVER_CONF' lvalue ->server2 0x22e898cfef8
|   |       `-ImplicitCastExpr 0x22e8988d978 <col:18> 'SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   |         `-DeclRefExpr 0x22e8988d958 <col:18> 'SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x22e8988d548 'conf' 'SSL_TEST_EXTRA_CONF *'
|   |-CallExpr 0x22e8988db18 <line:507:5, col:45> 'int'
|   | |-ImplicitCastExpr 0x22e8988db00 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x22e8988da48 <col:5> 'int ()' Function 0x22e89889f18 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x22e8988db40 <col:18, col:31> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x22e8988dad0 <col:18, col:31> 'char *' lvalue .alpn_protocols 0x22e898cf700
|   |     `-MemberExpr 0x22e8988daa0 <col:18, col:24> 'SSL_TEST_CLIENT_CONF':'SSL_TEST_CLIENT_CONF' lvalue ->client 0x22e898cfe00
|   |       `-ImplicitCastExpr 0x22e8988da88 <col:18> 'SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   |         `-DeclRefExpr 0x22e8988da68 <col:18> 'SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x22e8988d548 'conf' 'SSL_TEST_EXTRA_CONF *'
|   |-CallExpr 0x22e8988dc28 <line:508:5, col:45> 'int'
|   | |-ImplicitCastExpr 0x22e8988dc10 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x22e8988db58 <col:5> 'int ()' Function 0x22e89889f18 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x22e8988dc50 <col:18, col:31> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x22e8988dbe0 <col:18, col:31> 'char *' lvalue .alpn_protocols 0x22e898cfaf0
|   |     `-MemberExpr 0x22e8988dbb0 <col:18, col:24> 'SSL_TEST_SERVER_CONF':'SSL_TEST_SERVER_CONF' lvalue ->server 0x22e898cfe90
|   |       `-ImplicitCastExpr 0x22e8988db98 <col:18> 'SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   |         `-DeclRefExpr 0x22e8988db78 <col:18> 'SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x22e8988d548 'conf' 'SSL_TEST_EXTRA_CONF *'
|   |-CallExpr 0x22e8988dd38 <line:509:5, col:46> 'int'
|   | |-ImplicitCastExpr 0x22e8988dd20 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x22e8988dc68 <col:5> 'int ()' Function 0x22e89889f18 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x22e8988dd60 <col:18, col:32> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x22e8988dcf0 <col:18, col:32> 'char *' lvalue .alpn_protocols 0x22e898cfaf0
|   |     `-MemberExpr 0x22e8988dcc0 <col:18, col:24> 'SSL_TEST_SERVER_CONF':'SSL_TEST_SERVER_CONF' lvalue ->server2 0x22e898cfef8
|   |       `-ImplicitCastExpr 0x22e8988dca8 <col:18> 'SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   |         `-DeclRefExpr 0x22e8988dc88 <col:18> 'SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x22e8988d548 'conf' 'SSL_TEST_EXTRA_CONF *'
|   `-CallExpr 0x22e8988de48 <line:510:5, col:44> 'int'
|     |-ImplicitCastExpr 0x22e8988de30 <col:5> 'int (*)()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x22e8988dd78 <col:5> 'int ()' Function 0x22e89889f18 'OPENSSL_free' 'int ()'
|     `-ImplicitCastExpr 0x22e8988de70 <col:18, col:31> 'char *' <LValueToRValue>
|       `-MemberExpr 0x22e8988de00 <col:18, col:31> 'char *' lvalue .reneg_ciphers 0x22e898cf800
|         `-MemberExpr 0x22e8988ddd0 <col:18, col:24> 'SSL_TEST_CLIENT_CONF':'SSL_TEST_CLIENT_CONF' lvalue ->client 0x22e898cfe00
|           `-ImplicitCastExpr 0x22e8988ddb8 <col:18> 'SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|             `-DeclRefExpr 0x22e8988dd98 <col:18> 'SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x22e8988d548 'conf' 'SSL_TEST_EXTRA_CONF *'
|-FunctionDecl 0x22e8988df88 <line:513:1, line:517:1> line:513:13 used ssl_test_ctx_free_extra_data 'void (SSL_TEST_CTX *)' static
| |-ParmVarDecl 0x22e8988dee0 <col:42, col:56> col:56 used ctx 'SSL_TEST_CTX *'
| `-CompoundStmt 0x22e8988e278 <line:514:1, line:517:1>
|   |-CallExpr 0x22e8988e170 <line:515:5, col:46> 'void'
|   | |-ImplicitCastExpr 0x22e8988e158 <col:5> 'void (*)(SSL_TEST_EXTRA_CONF *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x22e8988e048 <col:5> 'void (SSL_TEST_EXTRA_CONF *)' Function 0x22e8988d658 'ssl_test_extra_conf_free_data' 'void (SSL_TEST_EXTRA_CONF *)'
|   | `-UnaryOperator 0x22e8988e0e0 <col:35, col:41> 'SSL_TEST_EXTRA_CONF *' prefix '&' cannot overflow
|   |   `-MemberExpr 0x22e8988e0a0 <col:36, col:41> 'SSL_TEST_EXTRA_CONF':'SSL_TEST_EXTRA_CONF' lvalue ->extra 0x22e898c8370
|   |     `-ImplicitCastExpr 0x22e8988e088 <col:36> 'SSL_TEST_CTX *' <LValueToRValue>
|   |       `-DeclRefExpr 0x22e8988e068 <col:36> 'SSL_TEST_CTX *' lvalue ParmVar 0x22e8988dee0 'ctx' 'SSL_TEST_CTX *'
|   `-CallExpr 0x22e8988e250 <line:516:5, col:53> 'void'
|     |-ImplicitCastExpr 0x22e8988e238 <col:5> 'void (*)(SSL_TEST_EXTRA_CONF *)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x22e8988e198 <col:5> 'void (SSL_TEST_EXTRA_CONF *)' Function 0x22e8988d658 'ssl_test_extra_conf_free_data' 'void (SSL_TEST_EXTRA_CONF *)'
|     `-UnaryOperator 0x22e8988e220 <col:35, col:41> 'SSL_TEST_EXTRA_CONF *' prefix '&' cannot overflow
|       `-MemberExpr 0x22e8988e1f0 <col:36, col:41> 'SSL_TEST_EXTRA_CONF':'SSL_TEST_EXTRA_CONF' lvalue ->resume_extra 0x22e898c83d8
|         `-ImplicitCastExpr 0x22e8988e1d8 <col:36> 'SSL_TEST_CTX *' <LValueToRValue>
|           `-DeclRefExpr 0x22e8988e1b8 <col:36> 'SSL_TEST_CTX *' lvalue ParmVar 0x22e8988dee0 'ctx' 'SSL_TEST_CTX *'
|-FunctionDecl 0x22e8988e350 prev 0x22e898d1488 <line:519:1, line:525:1> line:519:6 used SSL_TEST_CTX_free 'void (SSL_TEST_CTX *)'
| |-ParmVarDecl 0x22e8988e2a8 <col:24, col:38> col:38 used ctx 'SSL_TEST_CTX *'
| `-CompoundStmt 0x22e8988e748 <line:520:1, line:525:1>
|   |-CallExpr 0x22e8988e4b0 <line:521:5, col:37> 'void'
|   | |-ImplicitCastExpr 0x22e8988e498 <col:5> 'void (*)(SSL_TEST_CTX *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x22e8988e3f8 <col:5> 'void (SSL_TEST_CTX *)' Function 0x22e8988df88 'ssl_test_ctx_free_extra_data' 'void (SSL_TEST_CTX *)'
|   | `-ImplicitCastExpr 0x22e8988e4d8 <col:34> 'SSL_TEST_CTX *' <LValueToRValue>
|   |   `-DeclRefExpr 0x22e8988e418 <col:34> 'SSL_TEST_CTX *' lvalue ParmVar 0x22e8988e2a8 'ctx' 'SSL_TEST_CTX *'
|   |-CallExpr 0x22e8988e590 <line:522:5, col:44> 'int'
|   | |-ImplicitCastExpr 0x22e8988e578 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x22e8988e4f0 <col:5> 'int ()' Function 0x22e89889f18 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x22e8988e5b8 <col:18, col:23> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x22e8988e548 <col:18, col:23> 'char *' lvalue ->expected_npn_protocol 0x22e898c8710
|   |     `-ImplicitCastExpr 0x22e8988e530 <col:18> 'SSL_TEST_CTX *' <LValueToRValue>
|   |       `-DeclRefExpr 0x22e8988e510 <col:18> 'SSL_TEST_CTX *' lvalue ParmVar 0x22e8988e2a8 'ctx' 'SSL_TEST_CTX *'
|   |-CallExpr 0x22e8988e670 <line:523:5, col:45> 'int'
|   | |-ImplicitCastExpr 0x22e8988e658 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x22e8988e5d0 <col:5> 'int ()' Function 0x22e89889f18 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x22e8988e698 <col:18, col:23> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x22e8988e628 <col:18, col:23> 'char *' lvalue ->expected_alpn_protocol 0x22e898c8780
|   |     `-ImplicitCastExpr 0x22e8988e610 <col:18> 'SSL_TEST_CTX *' <LValueToRValue>
|   |       `-DeclRefExpr 0x22e8988e5f0 <col:18> 'SSL_TEST_CTX *' lvalue ParmVar 0x22e8988e2a8 'ctx' 'SSL_TEST_CTX *'
|   `-CallExpr 0x22e8988e708 <line:524:5, col:21> 'int'
|     |-ImplicitCastExpr 0x22e8988e6f0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x22e8988e6b0 <col:5> 'int ()' Function 0x22e89889f18 'OPENSSL_free' 'int ()'
|     `-ImplicitCastExpr 0x22e8988e730 <col:18> 'SSL_TEST_CTX *' <LValueToRValue>
|       `-DeclRefExpr 0x22e8988e6d0 <col:18> 'SSL_TEST_CTX *' lvalue ParmVar 0x22e8988e2a8 'ctx' 'SSL_TEST_CTX *'
|-FunctionDecl 0x22e8988e9b0 <line:527:1, line:558:1> line:527:12 invalid parse_client_options 'int (SSL_TEST_CLIENT_CONF *, const int *, const char *)' static
| |-ParmVarDecl 0x22e8988e788 <col:33, col:55> col:55 used client 'SSL_TEST_CLIENT_CONF *'
| |-ParmVarDecl 0x22e8988e808 <col:63, col:75> col:75 invalid conf 'const int *'
| |-ParmVarDecl 0x22e8988e888 <line:528:33, col:45> col:45 used client_section 'const char *'
| `-CompoundStmt 0x22e89888d68 <line:529:1, line:558:1>
|   |-DeclStmt 0x22e8988ec10 <line:531:5, col:10>
|   | `-VarDecl 0x22e8988eba8 <col:5, col:9> col:9 used i 'int'
|   |-DeclStmt 0x22e8988eca0 <line:532:5, col:13>
|   | `-VarDecl 0x22e8988ec38 <col:5, col:12> col:12 used j 'size_t':'unsigned long long'
|   |-DoStmt 0x22e8988efe8 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x22e8988efa8 <line:106:8, line:111:5>
|   | | `-IfStmt 0x22e8988ef90 <line:107:9, line:110:9>
|   | |   |-OpaqueValueExpr 0x22e8988ef78 <<invalid sloc>> '_Bool'
|   | |   `-CompoundStmt 0x22e8988ef60 <line:107:27, line:110:9>
|   | |     `-CallExpr 0x22e8988ef38 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x22e8988ef20 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x22e8988eea8 <col:13> 'int ()' Function 0x22e89885568 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x22e8988ef08 <col:28, <scratch space>:32:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x22e8988eef0 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x22e8988eec8 <col:1> 'char [16]' lvalue "sk_conf != NULL"
|   | `-IntegerLiteral 0x22e8988efc0 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x22e8988f008 <.//openssl//file_jk/before\test\ssl_test_ctx.c:535:32>
|   `-ReturnStmt 0x22e89888d58 <line:557:5, col:12>
|     `-IntegerLiteral 0x22e89888d30 <col:12> 'int' 1
|-FunctionDecl 0x22e89888fe0 <line:560:1, line:591:1> line:560:12 invalid parse_server_options 'int (SSL_TEST_SERVER_CONF *, const int *, const char *)' static
| |-ParmVarDecl 0x22e89888db0 <col:33, col:55> col:55 used server 'SSL_TEST_SERVER_CONF *'
| |-ParmVarDecl 0x22e89888e30 <col:63, col:75> col:75 invalid conf 'const int *'
| |-ParmVarDecl 0x22e89888eb0 <line:561:33, col:45> col:45 used server_section 'const char *'
| `-CompoundStmt 0x22e89890f20 <line:562:1, line:591:1>
|   |-DeclStmt 0x22e898901d0 <line:564:5, col:10>
|   | `-VarDecl 0x22e89890168 <col:5, col:9> col:9 used i 'int'
|   |-DeclStmt 0x22e89890260 <line:565:5, col:13>
|   | `-VarDecl 0x22e898901f8 <col:5, col:12> col:12 used j 'size_t':'unsigned long long'
|   |-DoStmt 0x22e898904b8 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x22e89890478 <line:106:8, line:111:5>
|   | | `-IfStmt 0x22e89890460 <line:107:9, line:110:9>
|   | |   |-OpaqueValueExpr 0x22e89890448 <<invalid sloc>> '_Bool'
|   | |   `-CompoundStmt 0x22e89890430 <line:107:27, line:110:9>
|   | |     `-CallExpr 0x22e89890408 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x22e898903f0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x22e89890378 <col:13> 'int ()' Function 0x22e89885568 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x22e898903d8 <col:28, <scratch space>:33:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x22e898903c0 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x22e89890398 <col:1> 'char [16]' lvalue "sk_conf != NULL"
|   | `-IntegerLiteral 0x22e89890490 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x22e898904d8 <.//openssl//file_jk/before\test\ssl_test_ctx.c:568:32>
|   `-ReturnStmt 0x22e89890f10 <line:590:5, col:12>
|     `-IntegerLiteral 0x22e89890ee8 <col:12> 'int' 1
`-FunctionDecl 0x22e89892120 <line:593:1, line:662:1> line:593:15 invalid SSL_TEST_CTX_create 'SSL_TEST_CTX *(const int *, const char *)'
  |-ParmVarDecl 0x22e89890f70 <col:35, col:47> col:47 invalid conf 'const int *'
  |-ParmVarDecl 0x22e89890ff0 <col:53, col:65> col:65 used test_section 'const char *'
  `-CompoundStmt 0x22e898920a0 <line:594:1, line:662:1>
    |-DeclStmt 0x22e89892280 <line:596:5, col:22>
    | `-VarDecl 0x22e89892218 <col:5, col:19> col:19 used ctx 'SSL_TEST_CTX *'
    |-DeclStmt 0x22e89892318 <line:597:5, col:10>
    | `-VarDecl 0x22e898922b0 <col:5, col:9> col:9 used i 'int'
    |-DeclStmt 0x22e898923a8 <line:598:5, col:13>
    | `-VarDecl 0x22e89892340 <col:5, col:12> col:12 used j 'size_t':'unsigned long long'
    |-DoStmt 0x22e89892600 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
    | |-CompoundStmt 0x22e898925c0 <line:106:8, line:111:5>
    | | `-IfStmt 0x22e898925a8 <line:107:9, line:110:9>
    | |   |-OpaqueValueExpr 0x22e89892590 <<invalid sloc>> '_Bool'
    | |   `-CompoundStmt 0x22e89892578 <line:107:27, line:110:9>
    | |     `-CallExpr 0x22e89892550 <line:109:13, col:39> 'int'
    | |       |-ImplicitCastExpr 0x22e89892538 <col:13> 'int (*)()' <FunctionToPointerDecay>
    | |       | `-DeclRefExpr 0x22e898924c0 <col:13> 'int ()' Function 0x22e89885568 'OPENSSL_assert' 'int ()'
    | |       `-UnaryOperator 0x22e89892520 <col:28, <scratch space>:34:1> 'int' prefix '!' cannot overflow
    | |         `-ImplicitCastExpr 0x22e89892508 <col:1> 'char *' <ArrayToPointerDecay>
    | |           `-StringLiteral 0x22e898924e0 <col:1> 'char [16]' lvalue "sk_conf != NULL"
    | `-IntegerLiteral 0x22e898925d8 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
    |-NullStmt 0x22e89892620 <.//openssl//file_jk/before\test\ssl_test_ctx.c:601:32>
    |-BinaryOperator 0x22e89892710 <line:603:5, col:28> 'SSL_TEST_CTX *' '='
    | |-DeclRefExpr 0x22e89892628 <col:5> 'SSL_TEST_CTX *' lvalue Var 0x22e89892218 'ctx' 'SSL_TEST_CTX *'
    | `-CallExpr 0x22e898926f0 <col:11, col:28> 'SSL_TEST_CTX *'
    |   `-ImplicitCastExpr 0x22e898926d8 <col:11> 'SSL_TEST_CTX *(*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x22e89892660 <col:11> 'SSL_TEST_CTX *(void)' Function 0x22e8988cbf8 'SSL_TEST_CTX_new' 'SSL_TEST_CTX *(void)'
    |-DoStmt 0x22e898929a8 <.//openssl//file_jk/before\test/testutil.h:106:5, line:111:15>
    | |-CompoundStmt 0x22e89892968 <line:106:8, line:111:5>
    | | `-IfStmt 0x22e89892950 <line:107:9, line:110:9>
    | |   |-UnaryOperator 0x22e89892848 <line:107:13, col:24> 'int' prefix '!' cannot overflow
    | |   | `-ParenExpr 0x22e89892828 <col:14, col:24> 'int'
    | |   |   `-BinaryOperator 0x22e89892808 <.//openssl//file_jk/before\test\ssl_test_ctx.c:604:16, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
    | |   |     |-ImplicitCastExpr 0x22e898927d8 <.//openssl//file_jk/before\test\ssl_test_ctx.c:604:16> 'SSL_TEST_CTX *' <LValueToRValue>
    | |   |     | `-DeclRefExpr 0x22e89892730 <col:16> 'SSL_TEST_CTX *' lvalue Var 0x22e89892218 'ctx' 'SSL_TEST_CTX *'
    | |   |     `-ImplicitCastExpr 0x22e898927f0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'SSL_TEST_CTX *' <BitCast>
    | |   |       `-ParenExpr 0x22e898927b8 <col:17, col:27> 'void *'
    | |   |         `-CStyleCastExpr 0x22e89892790 <col:18, col:26> 'void *' <NullToPointer>
    | |   |           `-IntegerLiteral 0x22e89892750 <col:26> 'int' 0
    | |   `-CompoundStmt 0x22e89892938 <.//openssl//file_jk/before\test/testutil.h:107:27, line:110:9>
    | |     `-CallExpr 0x22e89892910 <line:109:13, col:39> 'int'
    | |       |-ImplicitCastExpr 0x22e898928f8 <col:13> 'int (*)()' <FunctionToPointerDecay>
    | |       | `-DeclRefExpr 0x22e89892880 <col:13> 'int ()' Function 0x22e89885568 'OPENSSL_assert' 'int ()'
    | |       `-UnaryOperator 0x22e898928e0 <col:28, <scratch space>:35:1> 'int' prefix '!' cannot overflow
    | |         `-ImplicitCastExpr 0x22e898928c8 <col:1> 'char *' <ArrayToPointerDecay>
    | |           `-StringLiteral 0x22e898928a0 <col:1> 'char [12]' lvalue "ctx != NULL"
    | `-IntegerLiteral 0x22e89892980 <.//openssl//file_jk/before\test/testutil.h:111:14> 'int' 0
    |-NullStmt 0x22e898929c8 <.//openssl//file_jk/before\test\ssl_test_ctx.c:604:28>
    |-GotoStmt 0x22e89891e98 <line:655:5, col:10> 'done' 0x22e89891e48
    |-LabelStmt 0x22e89891f48 <line:657:2, line:658:26> 'err'
    | `-CallExpr 0x22e89891f08 <col:5, col:26> 'void'
    |   |-ImplicitCastExpr 0x22e89891ef0 <col:5> 'void (*)(SSL_TEST_CTX *)' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x22e89891eb0 <col:5> 'void (SSL_TEST_CTX *)' Function 0x22e8988e350 'SSL_TEST_CTX_free' 'void (SSL_TEST_CTX *)'
    |   `-ImplicitCastExpr 0x22e89891f30 <col:23> 'SSL_TEST_CTX *' <LValueToRValue>
    |     `-DeclRefExpr 0x22e89891ed0 <col:23> 'SSL_TEST_CTX *' lvalue Var 0x22e89892218 'ctx' 'SSL_TEST_CTX *'
    |-BinaryOperator 0x22e89892020 <line:659:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'SSL_TEST_CTX *' '='
    | |-DeclRefExpr 0x22e89891f60 <.//openssl//file_jk/before\test\ssl_test_ctx.c:659:5> 'SSL_TEST_CTX *' lvalue Var 0x22e89892218 'ctx' 'SSL_TEST_CTX *'
    | `-ImplicitCastExpr 0x22e89892008 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'SSL_TEST_CTX *' <NullToPointer>
    |   `-ParenExpr 0x22e89891fe8 <col:17, col:27> 'void *'
    |     `-CStyleCastExpr 0x22e89891fc0 <col:18, col:26> 'void *' <NullToPointer>
    |       `-IntegerLiteral 0x22e89891f80 <col:26> 'int' 0
    `-LabelStmt 0x22e89892088 <.//openssl//file_jk/before\test\ssl_test_ctx.c:660:2, line:661:12> 'done'
      `-ReturnStmt 0x22e89892078 <col:5, col:12>
        `-ImplicitCastExpr 0x22e89892060 <col:12> 'SSL_TEST_CTX *' <LValueToRValue>
          `-DeclRefExpr 0x22e89892040 <col:12> 'SSL_TEST_CTX *' lvalue Var 0x22e89892218 'ctx' 'SSL_TEST_CTX *'
