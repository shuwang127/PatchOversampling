TranslationUnitDecl 0x21d7fc37c18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x21d7fc384b0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x21d7fc381b0 '__int128'
|-TypedefDecl 0x21d7fc38520 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x21d7fc381d0 'unsigned __int128'
|-TypedefDecl 0x21d7fc38858 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x21d7fc38610 'struct __NSConstantString_tag'
|   `-Record 0x21d7fc38578 '__NSConstantString_tag'
|-TypedefDecl 0x21d7fc388c8 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x21d7fc37df0 'unsigned long long'
|-TypedefDecl 0x21d7fc38960 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x21d7fc38920 'char *'
|   `-BuiltinType 0x21d7fc37cb0 'char'
|-TypedefDecl 0x21d7fc389d0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x21d7fc38920 'char *'
|   `-BuiltinType 0x21d7fc37cb0 'char'
|-TypedefDecl 0x21d7fc38a90 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x21d7fc37df0 'unsigned long long'
|-TypedefDecl 0x21d7fc38b00 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x21d7fc38920 'char *'
|   `-BuiltinType 0x21d7fc37cb0 'char'
|-FunctionDecl 0x21d017c4440 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x21d017c44e0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x21d017c4550 <col:21> Implicit
|-FunctionDecl 0x21d017c45a8 prev 0x21d017c4440 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x21d017c42d0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x21d017c4698 <col:21> Inherited Implicit
|-TypedefDecl 0x21d017c46d8 prev 0x21d7fc388c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x21d7fc37df0 'unsigned long long'
|-TypedefDecl 0x21d017c4780 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x21d017c4750 'size_t' sugar
|   |-Typedef 0x21d017c46d8 'size_t'
|   `-BuiltinType 0x21d7fc37df0 'unsigned long long'
|-TypedefDecl 0x21d017c47f0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x21d7fc37d50 'long long'
|-TypedefDecl 0x21d017c4860 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x21d7fc37d50 'long long'
|-TypedefDecl 0x21d017c48d0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x21d7fc37d90 'unsigned short'
|-TypedefDecl 0x21d017c4940 <line:541:1, col:24> col:24 wint_t 'unsigned short'
| `-BuiltinType 0x21d7fc37d90 'unsigned short'
|-TypedefDecl 0x21d017c49b0 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x21d7fc37d90 'unsigned short'
|-TypedefDecl 0x21d017c4a20 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x21d7fc37d10 'int'
|-TypedefDecl 0x21d017c4a90 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x21d7fc37d30 'long'
|-TypedefDecl 0x21d017c4b00 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x21d7fc37d50 'long long'
|-TypedefDecl 0x21d017c4b90 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x21d017c4b60 '__time64_t' sugar
|   |-Typedef 0x21d017c4b00 '__time64_t'
|   `-BuiltinType 0x21d7fc37d50 'long long'
|-FunctionDecl 0x21d017c4d08 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x21d017c4f28 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x21d017f6520 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x21d017c5068 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x21d017c50e0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x21d017c5158 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x21d017c51d8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x21d017f62c0 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x21d017f6600 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x21d017f66c0 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x21d017f6830 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x21d017f67e0 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x21d017f6780 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x21d017f66a0 'struct threadlocaleinfostruct'
|       `-Record 0x21d01800360 'threadlocaleinfostruct'
|-TypedefDecl 0x21d017f6940 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x21d017f68f0 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x21d017f6890 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x21d017f6760 'struct threadmbcinfostruct'
|       `-Record 0x21d017f66c0 'threadmbcinfostruct'
|-RecordDecl 0x21d017f6998 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x21d017f6a50 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x21d017f6b10 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x21d017f6ba0 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x21d017f6c30 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x21d017f6ce8 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x21d017f6c90 'struct localeinfo_struct' sugar
|   `-RecordType 0x21d017f6af0 'struct localeinfo_struct'
|     `-Record 0x21d017f6a50 'localeinfo_struct'
|-TypedefDecl 0x21d017f6dc0 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x21d017f6d70 'struct localeinfo_struct *'
|   `-ElaboratedType 0x21d017f6c90 'struct localeinfo_struct' sugar
|     `-RecordType 0x21d017f6af0 'struct localeinfo_struct'
|       `-Record 0x21d017f6a50 'localeinfo_struct'
|-RecordDecl 0x21d017f6e38 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x21d017f6ef0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x21d017f6f68 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x21d017f7028 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x21d017f70c0 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x21d017f7130 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x21d017f71e8 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x21d017f7190 'struct localerefcount' sugar
|   `-RecordType 0x21d017f6ed0 'struct localerefcount'
|     `-Record 0x21d017f6e38 'localerefcount'
|-RecordDecl 0x21d01800360 prev 0x21d017f6600 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x21d018003e0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x21d01800458 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x21d018004c8 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x21d01800538 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x21d018005a8 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x21d01800768 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x21d018007d8 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x21d01800848 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x21d018008b8 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x21d01800928 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x21d01800998 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x21d018009f0 parent 0x21d7fc37c18 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x21d01800b80 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x21d01800bf0 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x21d01800c60 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x21d01800cd0 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x21d01800d70 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x21d01800de0 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x21d01800ef0 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x21d01801028 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x21d018010d8 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x21d01801080 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x21d017f66a0 'struct threadlocaleinfostruct'
|     `-Record 0x21d01800360 'threadlocaleinfostruct'
|-FunctionDecl 0x21d018045b0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:47:9, col:142> col:25 _memccpy 'void *(void *, const void *, int, size_t) __attribute__((cdecl))':'void *(void *, const void *, int, size_t)'
| |-ParmVarDecl 0x21d01801160 <col:69, col:76> col:76 _Dst 'void *'
| |-ParmVarDecl 0x21d01801210 <col:87, col:100> col:100 _Src 'const void *'
| |-ParmVarDecl 0x21d01801290 <col:111, col:115> col:115 _Val 'int'
| `-ParmVarDecl 0x21d018043a0 <col:126, col:133> col:133 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x21d01804978 <line:48:54> col:54 implicit memchr 'void *(const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x21d01804a18 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x21d01804a80 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x21d01804ae8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x21d01804b68 prev 0x21d01804978 <col:38, col:150> col:54 memchr 'void *(const void *, int, unsigned long long)'
| |-ParmVarDecl 0x21d018046a0 <col:94, col:107> col:107 _Buf 'const void *'
| |-ParmVarDecl 0x21d01804720 <col:119, col:123> col:123 _Val 'int'
| `-ParmVarDecl 0x21d01804798 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x21d01804f28 <line:49:24, col:162> col:40 _memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x21d01804c50 <col:77, col:90> col:90 _Buf1 'const void *'
| |-ParmVarDecl 0x21d01804cd0 <col:125, col:138> col:138 _Buf2 'const void *'
| `-ParmVarDecl 0x21d01804d48 <col:150, col:157> col:157 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x21d0180a450 <line:50:24, col:192> col:40 _memicmp_l 'int (const void *, const void *, size_t, _locale_t) __attribute__((cdecl))':'int (const void *, const void *, size_t, _locale_t)'
| |-ParmVarDecl 0x21d01805010 <col:79, col:92> col:92 _Buf1 'const void *'
| |-ParmVarDecl 0x21d01805090 <col:127, col:140> col:140 _Buf2 'const void *'
| |-ParmVarDecl 0x21d01805108 <col:152, col:159> col:159 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x21d018051a0 <col:175, col:185> col:185 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21d0180a758 <line:51:32> col:32 implicit used memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x21d0180a7f8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x21d0180a860 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x21d0180a8c8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x21d0180a948 prev 0x21d0180a758 <col:16, col:144> col:32 used memcmp 'int (const void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x21d0180a540 <col:63, col:76> col:76 _Buf1 'const void *'
| |-ParmVarDecl 0x21d0180a5c0 <col:107, col:120> col:120 _Buf2 'const void *'
| `-ParmVarDecl 0x21d0180a638 <col:132, col:139> col:139 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x21d0180ad08 <line:55:17> col:17 implicit memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x21d0180ada8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x21d0180ae10 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x21d0180ae78 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x21d0180aef8 prev 0x21d0180ad08 <col:1, col:127> col:17 memcpy 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x21d0180aa30 <col:54, col:61> col:61 _Dst 'void *'
| |-ParmVarDecl 0x21d0180aab0 <col:91, col:104> col:104 _Src 'const void *'
| `-ParmVarDecl 0x21d0180ab28 <col:115, col:122> col:122 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x21d018083e0 <line:57:9, col:191> col:26 memcpy_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x21d0180b008 <col:82, col:89> col:89 _Dst 'void *'
| |-ParmVarDecl 0x21d0180b0a0 <col:100, col:108> col:108 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x21d0180b120 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x21d0180b198 <col:174, col:182> col:182 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x21d018087a8 <line:94:25> col:25 implicit memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x21d01808848 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x21d018088b0 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x21d01808918 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x21d01808998 prev 0x21d018087a8 <col:9, col:107> col:25 memset 'void *(void *, int, unsigned long long)'
| |-ParmVarDecl 0x21d018084d0 <col:62, col:69> col:69 _Dst 'void *'
| |-ParmVarDecl 0x21d01808550 <col:80, col:84> col:84 _Val 'int'
| `-ParmVarDecl 0x21d018085c8 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x21d01808e18 <line:98:57> col:57 implicit memccpy 'void *(void *, const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x21d01808eb8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x21d01808f20 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x21d01808f88 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x21d01808ff0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x21d01809078 prev 0x21d01808e18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:98:187> col:57 memccpy 'void *(void *, const void *, int, unsigned long long)'
| |-ParmVarDecl 0x21d01808b60 <col:95, col:102> col:102 _Dst 'void *'
| |-ParmVarDecl 0x21d01808be0 <col:136, col:149> col:149 _Src 'const void *'
| |-ParmVarDecl 0x21d01808c60 <col:160, col:164> col:164 _Val 'int'
| |-ParmVarDecl 0x21d01808cd8 <col:175, col:182> col:182 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x21d01809138 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memccpy. See online help for details." ""
|-FunctionDecl 0x21d01805548 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:99:190> col:69 memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x21d01809300 <col:105, col:118> col:118 _Buf1 'const void *'
| |-ParmVarDecl 0x21d018053b0 <col:153, col:166> col:166 _Buf2 'const void *'
| |-ParmVarDecl 0x21d01805428 <col:178, col:185> col:185 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x21d01805600 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memicmp. See online help for details." ""
|-FunctionDecl 0x21d018059f0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:105:40, col:144> col:56 _strset_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x21d01805728 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x21d018057a0 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| `-ParmVarDecl 0x21d01805820 <col:134, col:138> col:138 _Value 'int'
|-FunctionDecl 0x21d01805dc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:107:88 _strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x21d01805bd0 <col:108, col:114> col:114 _Dest 'char *'
| |-ParmVarDecl 0x21d01805c50 <col:126, col:131> col:131 _Value 'int'
| `-DeprecatedAttr 0x21d01805e70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21d01806280 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:109:40, col:158> col:56 strcpy_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x21d01805fb8 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x21d01806030 <col:112, col:120> col:120 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x21d018060b0 <col:141, col:154> col:154 _Src 'const char *'
|-FunctionDecl 0x21d018096b0 <line:112:88> col:88 implicit strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x21d01809750 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x21d018097b8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x21d01809830 prev 0x21d018096b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:112:88 strcpy 'char *(char *, const char *)'
| |-ParmVarDecl 0x21d018094c8 <col:142, col:148> col:148 _Dest 'char *'
| |-ParmVarDecl 0x21d01809548 <col:162, col:176> col:176 _Source 'const char *'
| `-DeprecatedAttr 0x21d018098e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21d01809c38 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:114:40, col:161> col:56 strcat_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x21d01809a28 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x21d01809aa0 <col:115, col:123> col:123 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x21d01809b20 <col:144, col:157> col:157 _Src 'const char *'
|-FunctionDecl 0x21d01809f60 <line:118:88> col:88 implicit strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x21d0180a000 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x21d0180a068 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x21d0180a0e0 prev 0x21d01809f60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:118:88 strcat 'char *(char *, const char *)'
| |-ParmVarDecl 0x21d01809de0 <col:170, col:176> col:176 _Dest 'char *'
| |-ParmVarDecl 0x21d01809e60 <col:190, col:204> col:204 _Source 'const char *'
| `-DeprecatedAttr 0x21d0180a190 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21d0180d500 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:120:32> col:32 implicit strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x21d0180d5a0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x21d0180d608 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x21d0180d680 prev 0x21d0180d500 <col:16, col:91> col:32 strcmp 'int (const char *, const char *)'
| |-ParmVarDecl 0x21d0180a2d8 <col:46, col:59> col:59 _Str1 'const char *'
| `-ParmVarDecl 0x21d0180a358 <col:73, col:86> col:86 _Str2 'const char *'
|-FunctionDecl 0x21d0180d8d0 <line:121:32> col:32 implicit strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x21d0180d970 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x21d0180d9e0 prev 0x21d0180d8d0 <col:16, col:63> col:32 strlen 'unsigned long long (const char *)'
| `-ParmVarDecl 0x21d0180d760 <col:46, col:59> col:59 _Str 'const char *'
|-FunctionDecl 0x21d0180dcd8 <line:125:1, col:92> col:17 used strnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x21d0180dab8 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x21d0180db30 <col:76, col:83> col:83 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x21d0180df28 <line:127:16, line:133:1> line:130:19 strnlen_s 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' static inline
| |-ParmVarDecl 0x21d0180ddb8 <col:56, col:69> col:69 used _Str 'const char *'
| |-ParmVarDecl 0x21d0180de30 <col:80, col:87> col:87 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x21d0180e258 <line:131:1, line:133:1>
|   `-ReturnStmt 0x21d0180e248 <line:132:5, col:51>
|     `-ConditionalOperator 0x21d0180e218 <col:12, col:51> 'unsigned long long'
|       |-ParenExpr 0x21d0180e088 <col:12, col:20> 'int'
|       | `-BinaryOperator 0x21d0180e068 <col:13, col:19> 'int' '=='
|       |   |-ImplicitCastExpr 0x21d0180e038 <col:13> 'const char *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x21d0180dff0 <col:13> 'const char *' lvalue ParmVar 0x21d0180ddb8 '_Str' 'const char *'
|       |   `-ImplicitCastExpr 0x21d0180e050 <col:19> 'const char *' <NullToPointer>
|       |     `-IntegerLiteral 0x21d0180e010 <col:19> 'int' 0
|       |-ImplicitCastExpr 0x21d0180e200 <col:24> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x21d0180e0a8 <col:24> 'int' 0
|       `-CallExpr 0x21d0180e1a0 <col:28, col:51> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x21d0180e188 <col:28> 'size_t (*)(const char *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x21d0180e0d0 <col:28> 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' Function 0x21d0180dcd8 'strnlen' 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
|         |-ImplicitCastExpr 0x21d0180e1d0 <col:36> 'const char *' <LValueToRValue>
|         | `-DeclRefExpr 0x21d0180e0f0 <col:36> 'const char *' lvalue ParmVar 0x21d0180ddb8 '_Str' 'const char *'
|         `-ImplicitCastExpr 0x21d0180e1e8 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x21d0180e110 <col:42> 'size_t':'unsigned long long' lvalue ParmVar 0x21d0180de30 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x21d018125b8 <line:136:28, col:209> col:44 memmove_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x21d0180e288 <col:100, col:107> col:107 _Dst 'void *'
| |-ParmVarDecl 0x21d0180e300 <col:118, col:126> col:126 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x21d0180e380 <col:168, col:181> col:181 _Src 'const void *'
| `-ParmVarDecl 0x21d01812480 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x21d018128c0 <line:139:67> col:67 implicit memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x21d01812960 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x21d018129c8 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x21d01812a30 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x21d01812ab0 prev 0x21d018128c0 <col:51, col:186> col:67 memmove 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x21d018126a8 <col:109, col:116> col:116 _Dst 'void *'
| |-ParmVarDecl 0x21d01812728 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x21d018127a0 <col:174, col:181> col:181 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x21d01812ce8 <line:146:24, col:76> col:40 _strdup 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| `-ParmVarDecl 0x21d01812b98 <col:59, col:72> col:72 _Src 'const char *'
|-FunctionDecl 0x21d01812fb0 <line:152:54> col:54 implicit strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x21d01813050 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x21d018130b8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x21d01813130 prev 0x21d01812fb0 <col:38, col:100> col:54 strchr 'char *(const char *, int)'
| |-ParmVarDecl 0x21d01812dc0 <col:68, col:81> col:81 _Str 'const char *'
| `-ParmVarDecl 0x21d01812e40 <col:92, col:96> col:96 _Val 'int'
|-FunctionDecl 0x21d01813390 <line:153:24, col:103> col:40 _stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x21d01813210 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x21d01813290 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x21d0180c5a0 <line:154:24, col:103> col:40 _strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x21d0180c420 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x21d0180c4a0 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x21d0180c958 <line:155:24, col:133> col:40 _stricmp_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x21d0180c680 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x21d0180c700 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x21d0180c778 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21d0180cbc0 <line:156:24, col:103> col:40 strcoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x21d0180ca40 <col:56, col:69> col:69 _Str1 'const char *'
| `-ParmVarDecl 0x21d0180cac0 <col:84, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x21d0180ceb8 <line:157:24, col:133> col:40 _strcoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x21d0180cca0 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x21d0180cd20 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x21d0180cd98 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21d0180d120 <line:158:24, col:104> col:40 _stricoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x21d0180cfa0 <col:58, col:71> col:71 _Str1 'const char *'
| `-ParmVarDecl 0x21d0180d020 <col:86, col:99> col:99 _Str2 'const char *'
|-FunctionDecl 0x21d0180e440 <line:159:24, col:134> col:40 _stricoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x21d0180d200 <col:60, col:73> col:73 _Str1 'const char *'
| |-ParmVarDecl 0x21d0180d280 <col:88, col:101> col:101 _Str2 'const char *'
| `-ParmVarDecl 0x21d0180d2f8 <col:117, col:127> col:127 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21d0180e7f8 <line:160:24, col:167> col:40 _strncoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x21d0180e528 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x21d0180e5a8 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x21d0180e620 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x21d0180ec60 <line:161:24, col:195> col:40 _strncoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x21d0180e8e0 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x21d0180e960 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x21d0180e9d8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x21d0180ea50 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21d0180ef68 <line:162:24, col:167> col:40 _strnicoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x21d0180ed50 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x21d0180edd0 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x21d0180ee48 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x21d0180f300 <line:163:24, col:196> col:40 _strnicoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x21d0180f050 <col:80, col:93> col:93 _Str1 'const char *'
| |-ParmVarDecl 0x21d0180f0d0 <col:127, col:140> col:140 _Str2 'const char *'
| |-ParmVarDecl 0x21d0180f148 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x21d0180f1c0 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21d0180f678 <line:164:40> col:40 implicit strcspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x21d0180f718 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x21d0180f780 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x21d0180f7f8 prev 0x21d0180f678 <col:24, col:104> col:40 strcspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x21d0180f450 <col:56, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x21d0180f4d0 <col:83, col:96> col:96 _Control 'const char *'
|-FunctionDecl 0x21d0180fab0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:165:118> col:77 _strerror 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x21d0180f9d0 <col:98, col:111> col:111 _ErrMsg 'const char *'
| `-DeprecatedAttr 0x21d0180fb58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21d0180ff30 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:166:28, col:155> col:44 _strerror_s 'errno_t (char *, size_t, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *)'
| |-ParmVarDecl 0x21d0180fca0 <col:85, col:92> col:92 _Buf 'char *'
| |-ParmVarDecl 0x21d0180fd18 <col:103, col:110> col:110 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x21d0180fd98 <col:135, col:148> col:148 _ErrMsg 'const char *'
|-FunctionDecl 0x21d01810248 <line:168:76> col:76 implicit strerror 'char *(int)' extern
| `-ParmVarDecl 0x21d018102e8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x21d01810358 prev 0x21d01810248 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:168:93> col:76 strerror 'char *(int)'
| |-ParmVarDecl 0x21d01810110 <col:90> col:93 'int'
| `-DeprecatedAttr 0x21d01810400 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21d01810770 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:170:28, col:139> col:44 strerror_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x21d01810560 <col:84, col:91> col:91 _Buf 'char *'
| |-ParmVarDecl 0x21d018105d8 <col:102, col:109> col:109 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x21d01810658 <col:128, col:132> col:132 _ErrNum 'int'
|-FunctionDecl 0x21d01810a78 <line:173:28, col:109> col:44 _strlwr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x21d01810858 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x21d018108d0 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x21d01810d68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:175:79 _strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x21d01810c18 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x21d01810e10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21d01811220 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:176:28, col:139> col:44 _strlwr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x21d01810f58 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x21d01810fd0 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x21d01811048 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21d01811620 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:178:82 _strlwr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x21d018113c8 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x21d01811470 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x21d018116d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21d01811b88 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:180:40, col:206> col:56 strncat_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x21d01811818 <col:98, col:105> col:105 _Dst 'char *'
| |-ParmVarDecl 0x21d01811890 <col:116, col:124> col:124 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x21d01811910 <col:165, col:178> col:178 _Src 'const char *'
| `-ParmVarDecl 0x21d01811988 <col:189, col:197> col:197 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x21d01812008 <line:186:83> col:83 implicit strncat 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x21d018120a8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x21d01812110 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x21d01812178 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x21d018121f8 prev 0x21d01812008 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:186:83 strncat 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x21d01811d38 <col:161, col:167> col:167 _Dest 'char *'
| |-ParmVarDecl 0x21d01811db8 <col:198, col:212> col:212 _Source 'const char *'
| |-ParmVarDecl 0x21d01811e30 <col:226, col:234> col:234 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x21d018122b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21d0180b5c0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:188:40> col:40 implicit strncmp 'int (const char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x21d0180b660 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x21d0180b6c8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x21d0180b730 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x21d0180b7b0 prev 0x21d0180b5c0 <col:24, col:163> col:40 strncmp 'int (const char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x21d018123f8 <col:75, col:88> col:88 _Str1 'const char *'
| |-ParmVarDecl 0x21d0180b428 <col:122, col:135> col:135 _Str2 'const char *'
| `-ParmVarDecl 0x21d0180b4a0 <col:147, col:154> col:154 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x21d0180bab0 <line:189:24, col:165> col:40 _strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x21d0180b898 <col:77, col:90> col:90 _Str1 'const char *'
| |-ParmVarDecl 0x21d0180b918 <col:124, col:137> col:137 _Str2 'const char *'
| `-ParmVarDecl 0x21d0180b990 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x21d0180be48 <line:190:24, col:195> col:40 _strnicmp_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x21d0180bb98 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x21d0180bc18 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x21d0180bc90 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x21d0180bd08 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21d0180c1e0 <line:192:40, col:203> col:56 strncpy_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x21d0180bf38 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x21d0180bfb0 <col:113, col:121> col:121 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x21d0180c030 <col:162, col:175> col:175 _Src 'const char *'
| `-ParmVarDecl 0x21d0180c0a8 <col:186, col:194> col:194 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x21d01813628 <line:195:83> col:83 implicit strncpy 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x21d018136c8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x21d01813730 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x21d01813798 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x21d01813818 prev 0x21d01813628 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:195:83 strncpy 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x21d0180c390 <col:167, col:173> col:173 _Dest 'char *'
| |-ParmVarDecl 0x21d01813490 <col:204, col:218> col:218 _Source 'const char *'
| |-ParmVarDecl 0x21d01813508 <col:232, col:240> col:240 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x21d018138d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21d01813d88 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:196:40, col:174> col:56 _strnset_s 'errno_t (char *, size_t, int, size_t) __attribute__((cdecl))':'errno_t (char *, size_t, int, size_t)'
| |-ParmVarDecl 0x21d01813a18 <col:99, col:106> col:106 _Str 'char *'
| |-ParmVarDecl 0x21d01813a90 <col:117, col:124> col:124 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x21d01813b10 <col:143, col:147> col:147 _Val 'int'
| `-ParmVarDecl 0x21d01813b88 <col:158, col:165> col:165 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x21d01814208 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:198:83 _strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x21d01813f38 <col:163, col:169> col:169 _Dest 'char *'
| |-ParmVarDecl 0x21d01813fb8 <col:181, col:186> col:186 _Val 'int'
| |-ParmVarDecl 0x21d01814030 <col:197, col:205> col:205 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x21d018142c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21d01814610 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:199:54> col:54 implicit strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x21d018146b0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x21d01814718 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x21d01814790 prev 0x21d01814610 <col:38, col:116> col:54 strpbrk 'char *(const char *, const char *)'
| |-ParmVarDecl 0x21d01814408 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x21d018144a0 <col:95, col:108> col:108 _Control 'const char *'
|-FunctionDecl 0x21d018149f0 <line:200:54> col:54 implicit strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x21d01814a90 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x21d01814af8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x21d01814b70 prev 0x21d018149f0 <col:38, col:100> col:54 strrchr 'char *(const char *, int)'
| |-ParmVarDecl 0x21d01814870 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x21d018148f0 <col:93, col:97> col:97 _Ch 'int'
|-FunctionDecl 0x21d01814d30 <line:201:9, col:54> col:25 _strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| `-ParmVarDecl 0x21d01814c50 <col:43, col:50> col:50 _Str 'char *'
|-FunctionDecl 0x21d01814f80 <line:202:40> col:40 implicit strspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x21d01815020 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x21d01815088 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x21d01815100 prev 0x21d01814f80 <col:24, col:101> col:40 strspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x21d01814e08 <col:54, col:67> col:67 _Str 'const char *'
| `-ParmVarDecl 0x21d01814e88 <col:80, col:93> col:93 _Control 'const char *'
|-FunctionDecl 0x21d01815360 <line:203:70> col:70 implicit strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x21d01815400 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x21d0188eff0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x21d0188f068 prev 0x21d01815360 <col:54, col:130> col:70 strstr 'char *(const char *, const char *)'
| |-ParmVarDecl 0x21d018151e0 <col:84, col:97> col:97 _Str 'const char *'
| `-ParmVarDecl 0x21d01815260 <col:110, col:123> col:123 _SubStr 'const char *'
|-FunctionDecl 0x21d0188f388 <line:204:74> col:74 implicit strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x21d0188f428 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x21d0188f490 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x21d0188f508 prev 0x21d0188f388 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:204:134> col:74 strtok 'char *(char *, const char *)'
| |-ParmVarDecl 0x21d0188f208 <col:95, col:102> col:102 _Str 'char *'
| |-ParmVarDecl 0x21d0188f288 <col:115, col:128> col:128 _Delim 'const char *'
| `-DeprecatedAttr 0x21d0188f5b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21d0188f998 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:206:36, col:162> col:52 strtok_s 'char *(char *, const char *, char **) __attribute__((cdecl))':'char *(char *, const char *, char **)'
| |-ParmVarDecl 0x21d0188f700 <col:75, col:82> col:82 _Str 'char *'
| |-ParmVarDecl 0x21d0188f780 <col:95, col:108> col:108 _Delim 'const char *'
| `-ParmVarDecl 0x21d0188f800 <col:146, col:154> col:154 _Context 'char **'
|-FunctionDecl 0x21d0188fbf0 <line:208:28, col:109> col:44 _strupr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x21d0188fa80 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x21d0188faf8 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x21d0188fe70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:210:79 _strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x21d0188fd90 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x21d0188ff18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21d0188b2b8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:211:28, col:130> col:44 _strupr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x21d0188b0b0 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x21d0188b128 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x21d0188b1a0 <col:113, col:123> col:123 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21d0188b5d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:213:82 _strupr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x21d0188b460 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x21d0188b4d8 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x21d0188b688 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21d0188baa0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:214:44> col:44 implicit strxfrm 'unsigned long long (char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x21d0188bb40 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x21d0188bba8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x21d0188bc10 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x21d0188bc90 prev 0x21d0188baa0 <col:28, col:155> col:44 strxfrm 'unsigned long long (char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x21d0188b7d0 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x21d0188b850 <col:115, col:128> col:128 _Src 'const char *'
| `-ParmVarDecl 0x21d0188b8c8 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x21d0188d108 <line:215:28, col:185> col:44 _strxfrm_l 'size_t (char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x21d0188bd78 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x21d0188bdf8 <col:117, col:130> col:130 _Src 'const char *'
| |-ParmVarDecl 0x21d0188be70 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x21d0188bee8 <col:168, col:178> col:178 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21d0188d3b0 <line:245:71> col:71 implicit strdup 'char *(const char *)' extern
| `-ParmVarDecl 0x21d0188d450 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x21d0188d4c0 prev 0x21d0188d3b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:245:106> col:71 strdup 'char *(const char *)'
| |-ParmVarDecl 0x21d0188d2d0 <col:89, col:102> col:102 _Src 'const char *'
| `-DeprecatedAttr 0x21d0188d568 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strdup. See online help for details." ""
|-FunctionDecl 0x21d0188d8b0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:252:129> col:69 strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x21d0188d730 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x21d0188d7b0 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x21d0188d960 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strcmpi. See online help for details." ""
|-FunctionDecl 0x21d0188dca8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:253:129> col:69 stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x21d0188db28 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x21d0188dba8 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x21d0188dd58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details." ""
|-FunctionDecl 0x21d01887fb8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:254:84> col:56 strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x21d0188df20 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x21d01888060 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strlwr. See online help for details." ""
|-FunctionDecl 0x21d01888478 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:255:193> col:70 strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x21d01888260 <col:106, col:119> col:119 _Str1 'const char *'
| |-ParmVarDecl 0x21d018882e0 <col:153, col:166> col:166 _Str 'const char *'
| |-ParmVarDecl 0x21d01888358 <col:177, col:184> col:184 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x21d01888530 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnicmp. See online help for details." ""
|-FunctionDecl 0x21d01888910 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:256:143> col:57 strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x21d018886f8 <col:94, col:101> col:101 _Str 'char *'
| |-ParmVarDecl 0x21d01888778 <col:112, col:116> col:116 _Val 'int'
| |-ParmVarDecl 0x21d018887f0 <col:127, col:134> col:134 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x21d018889c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnset. See online help for details." ""
|-FunctionDecl 0x21d01888c70 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:257:84> col:56 strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x21d01888b90 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x21d01888d18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strrev. See online help for details." ""
|-FunctionDecl 0x21d0188e0e0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:258:99> col:56 strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x21d01888ee0 <col:73, col:80> col:80 _Str 'char *'
| |-ParmVarDecl 0x21d0188dfe0 <col:91, col:95> col:95 _Val 'int'
| `-DeprecatedAttr 0x21d0188e190 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strset. See online help for details." ""
|-FunctionDecl 0x21d0188e438 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:259:84> col:56 strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x21d0188e358 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x21d0188e4e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strupr. See online help for details." ""
|-FunctionDecl 0x21d0188e770 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:273:24, col:77> col:42 _wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| `-ParmVarDecl 0x21d0188e600 <col:57, col:73> col:73 _Str 'const wchar_t *'
|-FunctionDecl 0x21d0188eb00 <line:280:40, col:167> col:56 wcscat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x21d0188e840 <col:97, col:107> col:107 _Dst 'wchar_t *'
| |-ParmVarDecl 0x21d0188e8b8 <col:118, col:126> col:126 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x21d0188e930 <col:147, col:163> col:163 _Src 'const wchar_t *'
|-FunctionDecl 0x21d0188eeb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:284:82 wcscat 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x21d0188eca0 <col:164, col:173> col:173 _Dest 'wchar_t *'
| |-ParmVarDecl 0x21d0188ed18 <col:187, col:204> col:204 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x21d0188ef68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21d018892a8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:288:41> col:41 implicit wcschr 'unsigned short *(const unsigned short *, unsigned short)' extern
| |-ParmVarDecl 0x21d01889348 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x21d018893b0 <<invalid sloc>> <invalid sloc> 'unsigned short'
|-FunctionDecl 0x21d01889428 prev 0x21d018892a8 <col:23, col:88> col:41 wcschr 'unsigned short *(const unsigned short *, unsigned short)'
| |-ParmVarDecl 0x21d01889088 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x21d01889100 <col:77, col:85> col:85 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x21d01889720 <line:289:36> col:36 implicit wcscmp 'int (const unsigned short *, const unsigned short *)' extern
| |-ParmVarDecl 0x21d018897c0 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x21d01889828 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x21d018898a0 prev 0x21d01889720 <col:24, col:101> col:36 wcscmp 'int (const unsigned short *, const unsigned short *)'
| |-ParmVarDecl 0x21d01889500 <col:50, col:66> col:66 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x21d01889578 <col:80, col:96> col:96 _Str2 'const wchar_t *'
|-FunctionDecl 0x21d01889b80 <line:291:40, col:164> col:56 wcscpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x21d01889978 <col:94, col:104> col:104 _Dst 'wchar_t *'
| |-ParmVarDecl 0x21d018899f0 <col:115, col:123> col:123 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x21d01889a68 <col:144, col:160> col:160 _Src 'const wchar_t *'
|-FunctionDecl 0x21d01889e90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:294:82 wcscpy 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x21d01889d20 <col:136, col:145> col:145 _Dest 'wchar_t *'
| |-ParmVarDecl 0x21d01889d98 <col:159, col:176> col:176 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x21d01889f40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21d01891328 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:295:24, col:107> col:39 wcscspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x21d01891108 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x21d01891180 <col:83, col:99> col:99 _Control 'const wchar_t *'
|-FunctionDecl 0x21d01891570 <line:296:39> col:39 implicit wcslen 'unsigned long long (const unsigned short *)' extern
| `-ParmVarDecl 0x21d01891610 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x21d01891680 prev 0x21d01891570 <col:24, col:73> col:39 wcslen 'unsigned long long (const unsigned short *)'
| `-ParmVarDecl 0x21d01891400 <col:53, col:69> col:69 _Str 'const wchar_t *'
|-FunctionDecl 0x21d01891968 <line:300:1, col:94> col:16 used wcsnlen 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
| |-ParmVarDecl 0x21d01891750 <col:51, col:67> col:67 _Src 'const wchar_t *'
| `-ParmVarDecl 0x21d018917c8 <col:78, col:85> col:85 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x21d01891bb0 <line:302:16, line:308:1> line:305:18 wcsnlen_s 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' static inline
| |-ParmVarDecl 0x21d01891a40 <col:55, col:71> col:71 used _Src 'const wchar_t *'
| |-ParmVarDecl 0x21d01891ab8 <col:82, col:89> col:89 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x21d01891f48 <line:306:1, line:308:1>
|   `-ReturnStmt 0x21d01891f38 <line:307:5, col:56>
|     `-ConditionalOperator 0x21d01891f08 <col:12, col:56> 'unsigned long long'
|       |-ParenExpr 0x21d01891d70 <col:12, col:25> 'int'
|       | `-BinaryOperator 0x21d01891d50 <col:13, line:36:27> 'int' '=='
|       |   |-ImplicitCastExpr 0x21d01891d20 <line:307:13> 'const wchar_t *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x21d01891c78 <col:13> 'const wchar_t *' lvalue ParmVar 0x21d01891a40 '_Src' 'const wchar_t *'
|       |   `-ImplicitCastExpr 0x21d01891d38 <line:36:17, col:27> 'const wchar_t *' <BitCast>
|       |     `-ParenExpr 0x21d01891d00 <col:17, col:27> 'void *'
|       |       `-CStyleCastExpr 0x21d01891cd8 <col:18, col:26> 'void *' <NullToPointer>
|       |         `-IntegerLiteral 0x21d01891c98 <col:26> 'int' 0
|       |-ImplicitCastExpr 0x21d01891ef0 <line:307:29> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x21d01891d90 <col:29> 'int' 0
|       `-CallExpr 0x21d01891e90 <col:33, col:56> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x21d01891e78 <col:33> 'size_t (*)(const wchar_t *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x21d01891db8 <col:33> 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' Function 0x21d01891968 'wcsnlen' 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
|         |-ImplicitCastExpr 0x21d01891ec0 <col:41> 'const wchar_t *' <LValueToRValue>
|         | `-DeclRefExpr 0x21d01891dd8 <col:41> 'const wchar_t *' lvalue ParmVar 0x21d01891a40 '_Src' 'const wchar_t *'
|         `-ImplicitCastExpr 0x21d01891ed8 <col:47> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x21d01891df8 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x21d01891ab8 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x21d018902f8 <line:311:40, col:212> col:56 wcsncat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x21d01891f70 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x21d01890000 <col:119, col:127> col:127 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x21d01890078 <col:168, col:184> col:184 _Src 'const wchar_t *'
| `-ParmVarDecl 0x21d018900f0 <col:195, col:203> col:203 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x21d01890760 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:316:86 wcsncat 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x21d018904a0 <col:167, col:176> col:176 _Dest 'wchar_t *'
| |-ParmVarDecl 0x21d01890518 <col:207, col:224> col:224 _Source 'const wchar_t *'
| |-ParmVarDecl 0x21d01890590 <col:238, col:246> col:246 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x21d01890818 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21d01890c28 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:318:36> col:36 implicit wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)' extern
| |-ParmVarDecl 0x21d01890cc8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| |-ParmVarDecl 0x21d01890d30 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x21d01890d98 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x21d01890e18 prev 0x21d01890c28 <col:24, col:165> col:36 wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)'
| |-ParmVarDecl 0x21d01890958 <col:71, col:87> col:87 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x21d018909d0 <col:121, col:137> col:137 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x21d01890a48 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x21d018921d0 <line:320:40, col:209> col:56 wcsncpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x21d01890ef8 <col:95, col:105> col:105 _Dst 'wchar_t *'
| |-ParmVarDecl 0x21d01890f70 <col:116, col:124> col:124 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x21d01892020 <col:165, col:181> col:181 _Src 'const wchar_t *'
| `-ParmVarDecl 0x21d01892098 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x21d01892580 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:323:86 wcsncpy 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x21d01892378 <col:179, col:188> col:188 _Dest 'wchar_t *'
| |-ParmVarDecl 0x21d018923f0 <col:219, col:236> col:236 _Source 'const wchar_t *'
| |-ParmVarDecl 0x21d01892468 <col:250, col:258> col:258 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x21d01892638 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21d01892998 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:324:38, col:124> col:56 wcspbrk 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x21d01892778 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x21d018927f0 <col:100, col:116> col:116 _Control 'const wchar_t *'
|-FunctionDecl 0x21d01892be0 <line:325:38, col:109> col:56 wcsrchr 'wchar_t *(const wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(const wchar_t *, wchar_t)'
| |-ParmVarDecl 0x21d01892a70 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x21d01892ae8 <col:98, col:106> col:106 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x21d01892e28 <line:326:24, col:106> col:39 wcsspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x21d01892cb8 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x21d01892d30 <col:82, col:98> col:98 _Control 'const wchar_t *'
|-FunctionDecl 0x21d01893090 <line:329:23, col:107> col:41 wcsstr 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x21d01892f00 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x21d01892f78 <col:84, col:100> col:100 _SubStr 'const wchar_t *'
|-FunctionDecl 0x21d01893398 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:330:142> col:76 wcstok 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x21d01893228 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x21d018932a0 <col:120, col:136> col:136 _Delim 'const wchar_t *'
| `-DeprecatedAttr 0x21d01893448 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21d018938b0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:332:36, col:173> col:54 wcstok_s 'wchar_t *(wchar_t *, const wchar_t *, wchar_t **) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x21d01893588 <col:77, col:87> col:87 _Str 'wchar_t *'
| |-ParmVarDecl 0x21d01893600 <col:100, col:116> col:116 _Delim 'const wchar_t *'
| `-ParmVarDecl 0x21d018936e0 <col:154, col:165> col:165 _Context 'wchar_t **'
|-FunctionDecl 0x21d01893bd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:334:105> col:79 _wcserror 'wchar_t *(int) __attribute__((cdecl))':'wchar_t *(int)'
| |-ParmVarDecl 0x21d01893a58 <col:94, col:98> col:98 _ErrNum 'int'
| `-DeprecatedAttr 0x21d01893c78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21d018970e0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:335:28, col:147> col:44 _wcserror_s 'errno_t (wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, int)'
| |-ParmVarDecl 0x21d01893db8 <col:89, col:99> col:99 _Buf 'wchar_t *'
| |-ParmVarDecl 0x21d01893e30 <col:110, col:117> col:117 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x21d01893eb0 <col:136, col:140> col:140 _ErrNum 'int'
|-FunctionDecl 0x21d01897390 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:337:122> col:80 __wcserror 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x21d018972b8 <col:102, col:118> col:118 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x21d01897438 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21d01897800 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:338:28, col:165> col:44 __wcserror_s 'errno_t (wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x21d01897578 <col:90, col:100> col:100 _Buffer 'wchar_t *'
| |-ParmVarDecl 0x21d018975f0 <col:114, col:121> col:121 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x21d01897668 <col:142, col:158> col:158 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x21d01897a58 <line:341:24, col:103> col:36 _wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x21d018978e0 <col:52, col:68> col:68 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x21d01897958 <col:82, col:98> col:98 _Str2 'const wchar_t *'
|-FunctionDecl 0x21d01897df8 <line:342:24, col:133> col:36 _wcsicmp_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x21d01897b30 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x21d01897ba8 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x21d01897c20 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21d01898108 <line:343:24, col:167> col:36 _wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x21d01897ed8 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x21d01897f50 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x21d01897fc8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x21d01898560 <line:344:24, col:197> col:36 _wcsnicmp_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x21d018981e8 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x21d01898260 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x21d018982d8 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x21d01898350 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21d018989b8 <line:345:40, col:181> col:56 _wcsnset_s 'errno_t (wchar_t *, size_t, wchar_t, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t, size_t)'
| |-ParmVarDecl 0x21d01898648 <col:99, col:109> col:109 _Dst 'wchar_t *'
| |-ParmVarDecl 0x21d018986c0 <col:120, col:127> col:127 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x21d01898738 <col:146, col:154> col:154 _Val 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x21d018987b0 <col:165, col:172> col:172 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x21d01898e20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:347:86 _wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x21d01898b60 <col:172, col:181> col:181 _Str 'wchar_t *'
| |-ParmVarDecl 0x21d01898bd8 <col:187, col:196> col:196 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x21d01898c50 <col:207, col:215> col:215 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x21d01898ed8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21d01896170 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:348:9, col:59> col:27 _wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| `-ParmVarDecl 0x21d01899018 <col:45, col:55> col:55 _Str 'wchar_t *'
|-FunctionDecl 0x21d01896500 <line:349:40, col:159> col:56 _wcsset_s 'errno_t (wchar_t *, size_t, wchar_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t)'
| |-ParmVarDecl 0x21d01896240 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x21d018962b8 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x21d01896330 <col:145, col:153> col:153 _Value 'wchar_t':'unsigned short'
|-FunctionDecl 0x21d018968b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:351:85 _wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x21d018966a0 <col:150, col:159> col:159 _Str 'wchar_t *'
| |-ParmVarDecl 0x21d01896718 <col:165, col:174> col:174 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x21d01896968 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21d01896cc8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:353:28, col:126> col:44 _wcslwr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x21d01896aa8 <col:86, col:96> col:96 _Str 'wchar_t *'
| `-ParmVarDecl 0x21d01896b20 <col:107, col:114> col:114 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x21d01896f38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:355:82 _wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x21d01896e60 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x21d01896fe0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21d01899450 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:356:28, col:156> col:44 _wcslwr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x21d01899188 <col:88, col:98> col:98 _Str 'wchar_t *'
| |-ParmVarDecl 0x21d01899200 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x21d01899278 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21d01899808 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:358:85 _wcslwr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x21d018995f0 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x21d01899668 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x21d018998b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21d01899b68 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:359:28, col:112> col:44 _wcsupr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x21d018999f8 <col:79, col:89> col:89 _Str 'wchar_t *'
| `-ParmVarDecl 0x21d01899a70 <col:100, col:107> col:107 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x21d01899dd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:361:82 _wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x21d01899d00 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x21d01899e80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21d0189a230 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:362:28, col:142> col:44 _wcsupr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x21d01899fc0 <col:81, col:91> col:91 _Str 'wchar_t *'
| |-ParmVarDecl 0x21d0189a0a0 <col:102, col:109> col:109 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x21d0189a118 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21d0189a540 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:364:85 _wcsupr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x21d0189a3d0 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x21d0189a448 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x21d0189a5f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21d0189a9f0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:365:28, col:159> col:43 wcsxfrm 'size_t (wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x21d0189a730 <col:93, col:103> col:103 _Dst 'wchar_t *'
| |-ParmVarDecl 0x21d0189a7a8 <col:116, col:132> col:132 _Src 'const wchar_t *'
| `-ParmVarDecl 0x21d0189a820 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x21d0189ae38 <line:366:28, col:189> col:43 _wcsxfrm_l 'size_t (wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x21d0189aad0 <col:96, col:106> col:106 _Dst 'wchar_t *'
| |-ParmVarDecl 0x21d0189ab48 <col:119, col:134> col:134 _Src 'const wchar_t *'
| |-ParmVarDecl 0x21d0189abc0 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x21d0189ac38 <col:172, col:182> col:182 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21d01895050 <line:367:24, col:102> col:36 wcscoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x21d0189af20 <col:51, col:67> col:67 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x21d0189af98 <col:81, col:97> col:97 _Str2 'const wchar_t *'
|-FunctionDecl 0x21d01895338 <line:368:24, col:133> col:36 _wcscoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x21d01895128 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x21d018951a0 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x21d01895218 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21d01895590 <line:369:24, col:104> col:36 _wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x21d01895418 <col:53, col:69> col:69 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x21d01895490 <col:83, col:99> col:99 _Str2 'const wchar_t *'
|-FunctionDecl 0x21d01895878 <line:370:24, col:133> col:36 _wcsicoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x21d01895668 <col:55, col:71> col:71 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x21d018956e0 <col:85, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x21d01895758 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21d01895b68 <line:371:24, col:167> col:36 _wcsncoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x21d01895958 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x21d018959d0 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x21d01895a48 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x21d01895ef0 <line:372:24, col:197> col:36 _wcsncoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x21d01895c48 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x21d01895cc0 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x21d01895d38 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x21d01895db0 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21d0189b248 <line:373:24, col:168> col:36 _wcsnicoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x21d01895fd8 <col:74, col:90> col:90 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x21d0189b0b0 <col:124, col:140> col:140 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x21d0189b128 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x21d0189b5d0 <line:374:24, col:198> col:36 _wcsnicoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x21d0189b328 <col:76, col:92> col:92 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x21d0189b3a0 <col:126, col:142> col:142 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x21d0189b418 <col:154, col:161> col:161 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x21d0189b490 <col:181, col:191> col:191 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21d0189b830 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:403:108> col:74 wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x21d0189b758 <col:88, col:104> col:104 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x21d0189b8d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsdup. See online help for details." ""
|-FunctionDecl 0x21d0189bc10 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:413:135> col:69 wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x21d0189ba98 <col:84, col:100> col:100 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x21d0189bb10 <col:114, col:130> col:130 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x21d0189bcc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicmp. See online help for details." ""
|-FunctionDecl 0x21d0189f0f0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:414:200> col:70 wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x21d0189be80 <col:106, col:122> col:122 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x21d0189bef8 <col:156, col:172> col:172 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x21d0189bf70 <col:184, col:191> col:191 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x21d0189f1a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnicmp. See online help for details." ""
|-FunctionDecl 0x21d0189f570 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:415:153> col:60 wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x21d0189f368 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x21d0189f3e0 <col:118, col:126> col:126 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x21d0189f458 <col:137, col:144> col:144 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x21d0189f628 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnset. See online help for details." ""
|-FunctionDecl 0x21d0189f8c0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:416:90> col:59 wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x21d0189f7e8 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x21d0189f968 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsrev. See online help for details." ""
|-FunctionDecl 0x21d0189fc98 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:417:104> col:59 wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x21d0189fb28 <col:76, col:86> col:86 _Str 'wchar_t *'
| |-ParmVarDecl 0x21d0189fba0 <col:92, col:100> col:100 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x21d0189fd48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsset. See online help for details." ""
|-FunctionDecl 0x21d0189ffe0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:418:90> col:59 wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x21d0189ff08 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x21d018a0088 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcslwr. See online help for details." ""
|-FunctionDecl 0x21d018a2370 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:419:90> col:59 wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x21d018a2298 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x21d018a2418 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsupr. See online help for details." ""
|-FunctionDecl 0x21d018a2750 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:420:137> col:70 wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x21d018a25d8 <col:86, col:102> col:102 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x21d018a2650 <col:116, col:132> col:132 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x21d018a2800 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicoll. See online help for details." ""
|-FunctionDecl 0x21d018a2e20 <.//openssl//file_jk/before\test/ssltestlib.h:15:1, line:18:42> line:15:5 invalid create_ssl_ctx_pair 'int (const int *, const int *, int, int, int **, int **, char *, char *)'
| |-ParmVarDecl 0x21d018a2928 <col:25, col:43> col:43 invalid sm 'const int *'
| |-ParmVarDecl 0x21d018a29a8 <col:47, col:65> col:65 invalid cm 'const int *'
| |-ParmVarDecl 0x21d018a2a28 <line:16:25, col:29> col:29 min_proto_version 'int'
| |-ParmVarDecl 0x21d018a2aa8 <col:48, col:52> col:52 max_proto_version 'int'
| |-ParmVarDecl 0x21d018a2b58 <line:17:25, col:35> col:35 invalid sctx 'int **'
| |-ParmVarDecl 0x21d018a2be0 <col:41, col:51> col:51 invalid cctx 'int **'
| |-ParmVarDecl 0x21d018a2c60 <col:57, col:63> col:63 certfile 'char *'
| `-ParmVarDecl 0x21d018a2ce0 <line:18:25, col:31> col:31 privkeyfile 'char *'
|-FunctionDecl 0x21d018a32e0 <line:19:1, line:20:70> line:19:5 invalid create_ssl_objects 'int (int *, int *, int **, int **, int *, int *)'
| |-ParmVarDecl 0x21d018a2f18 <col:24, col:33> col:33 invalid serverctx 'int *'
| |-ParmVarDecl 0x21d018a2f98 <col:44, col:53> col:53 invalid clientctx 'int *'
| |-ParmVarDecl 0x21d018a3020 <col:64, col:70> col:70 invalid sssl 'int **'
| |-ParmVarDecl 0x21d018a30a8 <line:20:24, col:30> col:30 invalid cssl 'int **'
| |-ParmVarDecl 0x21d018a3148 <col:36, col:41> col:41 invalid s_to_c_fbio 'int *'
| `-ParmVarDecl 0x21d018a31c8 <col:54, col:59> col:59 invalid c_to_s_fbio 'int *'
|-FunctionDecl 0x21d018a3520 <line:21:1, col:57> col:5 invalid create_ssl_connection 'int (int *, int *)'
| |-ParmVarDecl 0x21d018a33c8 <col:27, col:32> col:32 invalid serverssl 'int *'
| `-ParmVarDecl 0x21d018a3448 <col:43, col:48> col:48 invalid clientssl 'int *'
|-FunctionDecl 0x21d018a36a0 <line:24:1, col:45> col:19 invalid bio_f_tls_dump_filter 'const int *(void)'
|-FunctionDecl 0x21d018a37d8 <line:25:1, col:37> col:6 bio_f_tls_dump_filter_free 'void (void)'
|-FunctionDecl 0x21d018a3930 <line:27:1, col:44> col:19 invalid bio_s_mempacket_test 'const int *(void)'
|-FunctionDecl 0x21d018a3a68 <line:28:1, col:36> col:6 used bio_s_mempacket_test_free 'void (void)'
|-FunctionDecl 0x21d018a3e40 <line:34:1, line:35:35> line:34:5 invalid mempacket_test_inject 'int (int *, const char *, int, int, int)'
| |-ParmVarDecl 0x21d018a3b38 <col:27, col:32> col:32 invalid bio 'int *'
| |-ParmVarDecl 0x21d018a3bb8 <col:37, col:49> col:49 in 'const char *'
| |-ParmVarDecl 0x21d018a3c38 <col:53, col:57> col:57 inl 'int'
| |-ParmVarDecl 0x21d018a3cb8 <col:62, col:66> col:66 pktnum 'int'
| `-ParmVarDecl 0x21d018a3d38 <line:35:27, col:31> col:31 type 'int'
|-RecordDecl 0x21d018a3f08 <line:37:9, col:16> col:16 struct mempacket_st
|-TypedefDecl 0x21d018a4018 <col:1, col:29> col:29 referenced MEMPACKET 'struct mempacket_st':'struct mempacket_st'
| `-ElaboratedType 0x21d018a3fc0 'struct mempacket_st' sugar
|   `-RecordType 0x21d018a3fa0 'struct mempacket_st'
|     `-Record 0x21d018a3f08 'mempacket_st'
|-FunctionDecl 0x21d018a41d0 <line:39:1, col:26> col:1 DEFINE_STACK_OF 'int (MEMPACKET)'
| `-ParmVarDecl 0x21d018a40c0 <col:17> col:26 'MEMPACKET':'struct mempacket_st'
|-FunctionDecl 0x21d018a4548 <.//openssl//file_jk/before\test/testutil.h:85:1, col:60> col:6 used add_test 'void (const char *, int (*)())'
| |-ParmVarDecl 0x21d018a42a8 <col:15, col:27> col:27 test_case_name 'const char *'
| `-ParmVarDecl 0x21d018a4400 <col:43, col:59> col:49 test_fn 'int (*)()'
|-FunctionDecl 0x21d018a4a18 <line:86:1, col:80> col:6 used add_all_tests 'void (const char *, int (*)(int), int)'
| |-ParmVarDecl 0x21d018a4628 <col:20, col:32> col:32 test_case_name 'const char *'
| |-ParmVarDecl 0x21d018a4828 <col:48, col:70> col:54 test_fn 'int (*)(int)'
| `-ParmVarDecl 0x21d018a48a8 <col:73, col:77> col:77 num 'int'
|-FunctionDecl 0x21d018a4be0 <line:87:1, col:41> col:5 used run_tests 'int (const char *)'
| `-ParmVarDecl 0x21d018a4b00 <col:15, col:27> col:27 test_prog_name 'const char *'
|-FunctionDecl 0x21d018a4ef0 <line:97:1, col:67> col:5 strings_equal 'int (const char *, const char *, const char *)'
| |-ParmVarDecl 0x21d018a4cb8 <col:19, col:31> col:31 desc 'const char *'
| |-ParmVarDecl 0x21d018a4d38 <col:37, col:49> col:49 s1 'const char *'
| `-ParmVarDecl 0x21d018a4db8 <col:53, col:65> col:65 s2 'const char *'
|-VarDecl 0x21d018a4fd8 <.//openssl//file_jk/before\test\sslapitest.c:22:1, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/before\test\sslapitest.c:22:14 used cert 'char *' static cinit
| `-ImplicitCastExpr 0x21d018a50e0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <NullToPointer>
|   `-ParenExpr 0x21d018a50a8 <col:17, col:27> 'void *'
|     `-CStyleCastExpr 0x21d018a5080 <col:18, col:26> 'void *' <NullToPointer>
|       `-IntegerLiteral 0x21d018a5040 <col:26> 'int' 0
|-VarDecl 0x21d018a0100 <.//openssl//file_jk/before\test\sslapitest.c:23:1, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/before\test\sslapitest.c:23:14 used privkey 'char *' static cinit
| `-ImplicitCastExpr 0x21d018a0208 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <NullToPointer>
|   `-ParenExpr 0x21d018a01d0 <col:17, col:27> 'void *'
|     `-CStyleCastExpr 0x21d018a01a8 <col:18, col:26> 'void *' <NullToPointer>
|       `-IntegerLiteral 0x21d018a0168 <col:26> 'int' 0
|-VarDecl 0x21d018a02a0 <.//openssl//file_jk/before\test\sslapitest.c:26:1, col:41> col:28 used orespder 'const unsigned char [20]' static cinit
| `-StringLiteral 0x21d018a0348 <col:41> 'const unsigned char [20]' "Dummy OCSP Response"
|-VarDecl 0x21d018a0420 <line:27:1, col:33> col:12 used ocsp_server_called 'int' static cinit
| `-IntegerLiteral 0x21d018a0488 <col:33> 'int' 0
|-VarDecl 0x21d018a04e0 <line:28:1, col:33> col:12 used ocsp_client_called 'int' static cinit
| `-IntegerLiteral 0x21d018a0548 <col:33> 'int' 0
|-VarDecl 0x21d018a05a0 <line:30:1, col:24> col:12 used cdummyarg 'int' static cinit
| `-IntegerLiteral 0x21d018a0608 <col:24> 'int' 1
|-VarDecl 0x21d018a0660 <line:31:1, col:14> col:14 invalid ocspcert 'int *' static
|-FunctionDecl 0x21d018a0a70 <line:36:1, line:125:1> line:36:12 invalid execute_test_large_message 'int (const int *, const int *, int, int, int)' static
| |-ParmVarDecl 0x21d018a0768 <col:39, col:57> col:57 invalid smeth 'const int *'
| |-ParmVarDecl 0x21d018a07e8 <line:37:39, col:57> col:57 invalid cmeth 'const int *'
| |-ParmVarDecl 0x21d018a0868 <line:38:39, col:43> col:43 used min_version 'int'
| |-ParmVarDecl 0x21d018a08e8 <col:56, col:60> col:60 used max_version 'int'
| |-ParmVarDecl 0x21d018a0968 <line:39:39, col:43> col:43 used read_ahead 'int'
| `-CompoundStmt 0x21d018a6740 <line:40:1, line:125:1>
|   |-DeclStmt 0x21d018a0e18 <line:43:5, col:23>
|   | `-VarDecl 0x21d018a0d88 <col:5, col:22> col:9 used testresult 'int' cinit
|   |   `-IntegerLiteral 0x21d018a0df0 <col:22> 'int' 0
|   |-DeclStmt 0x21d018a0eb0 <line:44:5, col:10>
|   | `-VarDecl 0x21d018a0e48 <col:5, col:9> col:9 used i 'int'
|   |-DeclStmt 0x21d0189d1b0 <line:47:5, col:16>
|   | `-VarDecl 0x21d0189d148 <col:5, col:9> col:9 used certlen 'int'
|   |-IfStmt 0x21d0189d608 <line:49:5, line:52:5>
|   | |-OpaqueValueExpr 0x21d0189d5f0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x21d0189d5d0 <line:49:26, line:52:5>
|   |   |-CallExpr 0x21d0189d510 <line:50:9, col:51> 'int'
|   |   | |-ImplicitCastExpr 0x21d0189d4f8 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x21d0189d400 <col:9> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x21d0189d550 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x21d0189d538 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x21d0189d478 <col:16> 'char [33]' lvalue "Can't load the certificate file\n"
|   |   `-GotoStmt 0x21d0189d5b8 <line:51:9, col:14> 'end' 0x21d0189d568
|   |-IfStmt 0x21d0189dc60 <line:56:5, line:59:5>
|   | |-OpaqueValueExpr 0x21d0189dc48 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x21d0189dc28 <line:56:28, line:59:5>
|   |   |-CallExpr 0x21d0189dbb8 <line:57:9, col:56> 'int'
|   |   | |-ImplicitCastExpr 0x21d0189dba0 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x21d0189dae8 <col:9> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x21d0189dbf8 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x21d0189dbe0 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x21d0189db48 <col:16> 'char [38]' lvalue "Unable to load certificate for chain\n"
|   |   `-GotoStmt 0x21d0189dc10 <line:58:9, col:14> 'end' 0x21d0189d568
|   |-IfStmt 0x21d0189de98 <line:61:5, line:65:5>
|   | |-OpaqueValueExpr 0x21d0189de80 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x21d0189de60 <line:62:53, line:65:5>
|   |   |-CallExpr 0x21d0189ddf0 <line:63:9, col:49> 'int'
|   |   | |-ImplicitCastExpr 0x21d0189ddd8 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x21d0189dd28 <col:9> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x21d0189de30 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x21d0189de18 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x21d0189dd88 <col:16> 'char [31]' lvalue "Unable to create SSL_CTX pair\n"
|   |   `-GotoStmt 0x21d0189de48 <line:64:9, col:14> 'end' 0x21d0189d568
|   |-IfStmt 0x21d0189e048 <line:67:5, line:73:5>
|   | |-ImplicitCastExpr 0x21d0189dee8 <line:67:8> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x21d0189deb0 <col:8> 'int' lvalue ParmVar 0x21d018a0968 'read_ahead' 'int'
|   | `-CompoundStmt 0x21d0189e038 <col:20, line:73:5>
|   |-ForStmt 0x21d018a5c98 <line:85:5, line:95:5>
|   | |-BinaryOperator 0x21d018a5520 <line:85:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x21d018a54c0 <col:10> 'int' lvalue Var 0x21d018a0e48 'i' 'int'
|   | | `-IntegerLiteral 0x21d018a54f8 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x21d018a55a0 <col:17, line:34:25> 'int' '<'
|   | | |-ImplicitCastExpr 0x21d018a5588 <line:85:17> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x21d018a5540 <col:17> 'int' lvalue Var 0x21d018a0e48 'i' 'int'
|   | | `-IntegerLiteral 0x21d018a5560 <line:34:25> 'int' 40
|   | |-UnaryOperator 0x21d018a55e0 <line:85:38, col:39> 'int' postfix '++'
|   | | `-DeclRefExpr 0x21d018a55c0 <col:38> 'int' lvalue Var 0x21d018a0e48 'i' 'int'
|   | `-CompoundStmt 0x21d018a5c78 <col:43, line:95:5>
|   |   |-IfStmt 0x21d018a5870 <line:86:9, line:89:9>
|   |   | |-OpaqueValueExpr 0x21d018a5858 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x21d018a5838 <line:86:38, line:89:9>
|   |   |   |-CallExpr 0x21d018a57c8 <line:87:13, col:45> 'int'
|   |   |   | |-ImplicitCastExpr 0x21d018a57b0 <col:13> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x21d018a5708 <col:13> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |   |   | `-ImplicitCastExpr 0x21d018a5808 <col:20> 'const char *' <NoOp>
|   |   |   |   `-ImplicitCastExpr 0x21d018a57f0 <col:20> 'char *' <ArrayToPointerDecay>
|   |   |   |     `-StringLiteral 0x21d018a5768 <col:20> 'char [23]' lvalue "Unable to up ref cert\n"
|   |   |   `-GotoStmt 0x21d018a5820 <line:88:13, col:18> 'end' 0x21d0189d568
|   |   `-IfStmt 0x21d018a5c60 <line:90:9, line:94:9>
|   |     |-OpaqueValueExpr 0x21d018a5c48 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x21d018a5c28 <line:90:61, line:94:9>
|   |       |-CallExpr 0x21d018a5a88 <line:91:13, col:60> 'int'
|   |       | |-ImplicitCastExpr 0x21d018a5a70 <col:13> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x21d018a5998 <col:13> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |       | |-ImplicitCastExpr 0x21d018a5ad0 <col:20> 'const char *' <NoOp>
|   |       | | `-ImplicitCastExpr 0x21d018a5ab8 <col:20> 'char *' <ArrayToPointerDecay>
|   |       | |   `-StringLiteral 0x21d018a59f8 <col:20> 'char [35]' lvalue "Unable to add extra chain cert %d\n"
|   |       | `-ImplicitCastExpr 0x21d018a5ae8 <col:59> 'int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x21d018a5a38 <col:59> 'int' lvalue Var 0x21d018a0e48 'i' 'int'
|   |       `-GotoStmt 0x21d018a5c10 <line:93:13, col:18> 'end' 0x21d0189d568
|   |-IfStmt 0x21d018a5f48 <line:97:5, line:100:5>
|   | |-OpaqueValueExpr 0x21d018a5f30 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x21d018a5f10 <line:97:78, line:100:5>
|   |   |-CallExpr 0x21d018a5ea0 <line:98:9, col:48> 'int'
|   |   | |-ImplicitCastExpr 0x21d018a5e88 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x21d018a5de0 <col:9> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x21d018a5ee0 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x21d018a5ec8 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x21d018a5e38 <col:16> 'char [30]' lvalue "Unable to create SSL objects\n"
|   |   `-GotoStmt 0x21d018a5ef8 <line:99:9, col:14> 'end' 0x21d0189d568
|   |-IfStmt 0x21d018a6090 <line:102:5, line:105:5>
|   | |-OpaqueValueExpr 0x21d018a6078 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x21d018a6058 <line:102:55, line:105:5>
|   |   |-CallExpr 0x21d018a5fe8 <line:103:9, col:51> 'int'
|   |   | |-ImplicitCastExpr 0x21d018a5fd0 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x21d018a5f60 <col:9> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x21d018a6028 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x21d018a6010 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x21d018a5f80 <col:16> 'char [33]' lvalue "Unable to create SSL connection\n"
|   |   `-GotoStmt 0x21d018a6040 <line:104:9, col:14> 'end' 0x21d0189d568
|   |-IfStmt 0x21d018a63c0 <line:111:5, line:114:5>
|   | |-OpaqueValueExpr 0x21d018a63a8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x21d018a6388 <line:111:32, line:114:5>
|   |   |-CallExpr 0x21d018a6318 <line:112:9, col:55> 'int'
|   |   | |-ImplicitCastExpr 0x21d018a6300 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x21d018a6248 <col:9> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x21d018a6358 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x21d018a6340 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x21d018a62a8 <col:16> 'char [37]' lvalue "Unexpected failure from SSL_clear()\n"
|   |   `-GotoStmt 0x21d018a6370 <line:113:9, col:14> 'end' 0x21d0189d568
|   |-BinaryOperator 0x21d018a6438 <line:116:5, col:18> 'int' '='
|   | |-DeclRefExpr 0x21d018a63d8 <col:5> 'int' lvalue Var 0x21d018a0d88 'testresult' 'int'
|   | `-IntegerLiteral 0x21d018a6410 <col:18> 'int' 1
|   |-LabelStmt 0x21d018a6480 <line:117:2, col:5> 'end'
|   | `-NullStmt 0x21d018a6478 <col:5>
|   `-ReturnStmt 0x21d018a6730 <line:124:5, col:12>
|     `-ImplicitCastExpr 0x21d018a6718 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x21d018a66f8 <col:12> 'int' lvalue Var 0x21d018a0d88 'testresult' 'int'
|-FunctionDecl 0x21d0189d288 <line:50:9> col:9 implicit used printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x21d0189d328 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x21d0189d398 <col:9> Implicit printf 1 2
|-FunctionDecl 0x21d018a6890 <line:127:1, line:132:1> line:127:12 used test_large_message_tls 'int (void)' static
| `-CompoundStmt 0x21d018a6c00 <line:128:1, line:132:1>
|-FunctionDecl 0x21d018a6cb0 <line:134:1, line:139:1> line:134:12 used test_large_message_tls_read_ahead 'int (void)' static
| `-CompoundStmt 0x21d018a6e40 <line:135:1, line:139:1>
|-FunctionDecl 0x21d018a6ef0 <line:142:1, line:152:1> line:142:12 used test_large_message_dtls 'int (void)' static
| `-CompoundStmt 0x21d01852168 <line:143:1, line:152:1>
|-FunctionDecl 0x21d018522f0 <line:156:1, line:186:1> line:156:12 invalid ocsp_server_cb 'int (int *, void *)' static
| |-ParmVarDecl 0x21d01852190 <col:27, col:32> col:32 invalid s 'int *'
| |-ParmVarDecl 0x21d01852210 <col:35, col:41> col:41 used arg 'void *'
| `-CompoundStmt 0x21d01850518 <line:157:1, line:186:1>
|   |-DeclStmt 0x21d018524c8 <line:158:5, col:27>
|   | `-VarDecl 0x21d018523d0 <col:5, col:24> col:10 used argi 'int *' cinit
|   |   `-CStyleCastExpr 0x21d018524a0 <col:17, col:24> 'int *' <BitCast>
|   |     `-ImplicitCastExpr 0x21d01852488 <col:24> 'void *' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0x21d01852438 <col:24> 'void *' lvalue ParmVar 0x21d01852210 'arg' 'void *'
|   |-DeclStmt 0x21d01852628 <line:159:5, col:39>
|   | `-VarDecl 0x21d01852520 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/before\test\sslapitest.c:159:20 used orespdercopy 'unsigned char *' cinit
|   |   `-ImplicitCastExpr 0x21d01852610 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'unsigned char *' <NullToPointer>
|   |     `-ParenExpr 0x21d018525f0 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x21d018525c8 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x21d01852588 <col:26> 'int' 0
|   |-IfStmt 0x21d01852fb0 <.//openssl//file_jk/before\test\sslapitest.c:163:5, line:174:5> has_else
|   | |-BinaryOperator 0x21d01852908 <line:163:9, col:18> 'int' '=='
|   | | |-ImplicitCastExpr 0x21d018528f0 <col:9, col:10> 'int' <LValueToRValue>
|   | | | `-UnaryOperator 0x21d018528b0 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
|   | | |   `-ImplicitCastExpr 0x21d01852898 <col:10> 'int *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x21d01852860 <col:10> 'int *' lvalue Var 0x21d018523d0 'argi' 'int *'
|   | | `-IntegerLiteral 0x21d018528c8 <col:18> 'int' 2
|   | |-CompoundStmt 0x21d01852ec8 <col:21, line:172:5>
|   | `-IfStmt 0x21d01852f98 <col:12, line:174:5>
|   |   |-BinaryOperator 0x21d01852f68 <line:172:16, col:25> 'int' '!='
|   |   | |-ImplicitCastExpr 0x21d01852f50 <col:16, col:17> 'int' <LValueToRValue>
|   |   | | `-UnaryOperator 0x21d01852f10 <col:16, col:17> 'int' lvalue prefix '*' cannot overflow
|   |   | |   `-ImplicitCastExpr 0x21d01852ef8 <col:17> 'int *' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x21d01852ed8 <col:17> 'int *' lvalue Var 0x21d018523d0 'argi' 'int *'
|   |   | `-IntegerLiteral 0x21d01852f28 <col:25> 'int' 1
|   |   `-CompoundStmt 0x21d01852f88 <col:28, line:174:5>
|   |-BinaryOperator 0x21d01850208 <line:177:5, col:61> 'unsigned char *' '='
|   | |-DeclRefExpr 0x21d01852fd8 <col:5> 'unsigned char *' lvalue Var 0x21d01852520 'orespdercopy' 'unsigned char *'
|   | `-ImplicitCastExpr 0x21d018501f0 <col:20, col:61> 'unsigned char *' <IntegralToPointer>
|   |   `-CallExpr 0x21d018501a8 <col:20, col:61> 'int'
|   |     |-ImplicitCastExpr 0x21d01850190 <col:20> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x21d018500f0 <col:20> 'int ()' Function 0x21d01850028 'OPENSSL_memdup' 'int ()'
|   |     |-ImplicitCastExpr 0x21d018501d8 <col:35> 'const unsigned char *' <ArrayToPointerDecay>
|   |     | `-DeclRefExpr 0x21d01850110 <col:35> 'const unsigned char [20]' lvalue Var 0x21d018a02a0 'orespder' 'const unsigned char [20]'
|   |     `-UnaryExprOrTypeTraitExpr 0x21d01850170 <col:45, col:60> 'unsigned long long' sizeof
|   |       `-ParenExpr 0x21d01850150 <col:51, col:60> 'const unsigned char [20]' lvalue
|   |         `-DeclRefExpr 0x21d01850130 <col:52> 'const unsigned char [20]' lvalue Var 0x21d018a02a0 'orespder' 'const unsigned char [20]' non_odr_use_unevaluated
|   `-BinaryOperator 0x21d018504f8 <line:183:5, col:26> 'int' '='
|     |-DeclRefExpr 0x21d018504b0 <col:5> 'int' lvalue Var 0x21d018a0420 'ocsp_server_called' 'int'
|     `-IntegerLiteral 0x21d018504d0 <col:26> 'int' 1
|-FunctionDecl 0x21d01850688 <line:188:1, line:205:1> line:188:12 invalid ocsp_client_cb 'int (int *, void *)' static
| |-ParmVarDecl 0x21d01850568 <col:27, col:32> col:32 invalid s 'int *'
| |-ParmVarDecl 0x21d018505e8 <col:35, col:41> col:41 used arg 'void *'
| `-CompoundStmt 0x21d0184f070 <line:189:1, line:205:1>
|   |-DeclStmt 0x21d01850860 <line:190:5, col:27>
|   | `-VarDecl 0x21d01850768 <col:5, col:24> col:10 used argi 'int *' cinit
|   |   `-CStyleCastExpr 0x21d01850838 <col:17, col:24> 'int *' <BitCast>
|   |     `-ImplicitCastExpr 0x21d01850820 <col:24> 'void *' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0x21d018507d0 <col:24> 'void *' lvalue ParmVar 0x21d018505e8 'arg' 'void *'
|   |-DeclStmt 0x21d018508f8 <line:191:5, col:35>
|   | `-VarDecl 0x21d01850890 <col:5, col:26> col:26 used respderin 'const unsigned char *'
|   |-DeclStmt 0x21d01850988 <line:192:5, col:15>
|   | `-VarDecl 0x21d01850920 <col:5, col:12> col:12 used len 'size_t':'unsigned long long'
|   |-IfStmt 0x21d01850ba0 <line:194:5, line:195:16>
|   | |-BinaryOperator 0x21d01850b48 <line:194:9, col:32> 'int' '&&'
|   | | |-BinaryOperator 0x21d01850a48 <col:9, col:18> 'int' '!='
|   | | | |-ImplicitCastExpr 0x21d01850a30 <col:9, col:10> 'int' <LValueToRValue>
|   | | | | `-UnaryOperator 0x21d018509f0 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
|   | | | |   `-ImplicitCastExpr 0x21d018509d8 <col:10> 'int *' <LValueToRValue>
|   | | | |     `-DeclRefExpr 0x21d018509a0 <col:10> 'int *' lvalue Var 0x21d01850768 'argi' 'int *'
|   | | | `-IntegerLiteral 0x21d01850a08 <col:18> 'int' 1
|   | | `-BinaryOperator 0x21d01850b28 <col:23, col:32> 'int' '!='
|   | |   |-ImplicitCastExpr 0x21d01850b10 <col:23, col:24> 'int' <LValueToRValue>
|   | |   | `-UnaryOperator 0x21d01850ad0 <col:23, col:24> 'int' lvalue prefix '*' cannot overflow
|   | |   |   `-ImplicitCastExpr 0x21d01850ab8 <col:24> 'int *' <LValueToRValue>
|   | |   |     `-DeclRefExpr 0x21d01850a98 <col:24> 'int *' lvalue Var 0x21d01850768 'argi' 'int *'
|   | |   `-IntegerLiteral 0x21d01850ae8 <col:32> 'int' 2
|   | `-ReturnStmt 0x21d01850b90 <line:195:9, col:16>
|   |   `-IntegerLiteral 0x21d01850b68 <col:16> 'int' 0
|   |-IfStmt 0x21d01850fc0 <line:199:5, line:200:16>
|   | |-BinaryOperator 0x21d01850f68 <line:199:9, col:45> 'int' '!='
|   | | |-CallExpr 0x21d01850e90 <col:9, col:40> 'int'
|   | | | |-ImplicitCastExpr 0x21d01850e78 <col:9> 'int (*)(const void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x21d01850d80 <col:9> 'int (const void *, const void *, unsigned long long)' Function 0x21d0180a948 'memcmp' 'int (const void *, const void *, unsigned long long)'
|   | | | |-ImplicitCastExpr 0x21d01850ee0 <col:16> 'const void *' <BitCast>
|   | | | | `-ImplicitCastExpr 0x21d01850ec8 <col:16> 'const unsigned char *' <ArrayToPointerDecay>
|   | | | |   `-DeclRefExpr 0x21d01850da0 <col:16> 'const unsigned char [20]' lvalue Var 0x21d018a02a0 'orespder' 'const unsigned char [20]'
|   | | | |-ImplicitCastExpr 0x21d01850f10 <col:26> 'const void *' <BitCast>
|   | | | | `-ImplicitCastExpr 0x21d01850ef8 <col:26> 'const unsigned char *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x21d01850dc0 <col:26> 'const unsigned char *' lvalue Var 0x21d01850890 'respderin' 'const unsigned char *'
|   | | | `-ImplicitCastExpr 0x21d01850f28 <col:37> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x21d01850de0 <col:37> 'size_t':'unsigned long long' lvalue Var 0x21d01850920 'len' 'size_t':'unsigned long long'
|   | | `-IntegerLiteral 0x21d01850f40 <col:45> 'int' 0
|   | `-ReturnStmt 0x21d01850fb0 <line:200:9, col:16>
|   |   `-IntegerLiteral 0x21d01850f88 <col:16> 'int' 0
|   |-BinaryOperator 0x21d0184f018 <line:202:5, col:26> 'int' '='
|   | |-DeclRefExpr 0x21d01850fd8 <col:5> 'int' lvalue Var 0x21d018a04e0 'ocsp_client_called' 'int'
|   | `-IntegerLiteral 0x21d0184eff0 <col:26> 'int' 1
|   `-ReturnStmt 0x21d0184f060 <line:204:5, col:12>
|     `-IntegerLiteral 0x21d0184f038 <col:12> 'int' 1
|-FunctionDecl 0x21d0184f158 <line:207:1, line:389:1> line:207:12 used test_tlsext_status_type 'int (void)' static
| `-CompoundStmt 0x21d01854930 <line:208:1, line:389:1>
|   |-DeclStmt 0x21d0184f4d8 <line:211:5, col:23>
|   | `-VarDecl 0x21d0184f448 <col:5, col:22> col:9 used testresult 'int' cinit
|   |   `-IntegerLiteral 0x21d0184f4b0 <col:22> 'int' 0
|   |-IfStmt 0x21d0184f8e8 <line:216:5, line:221:5>
|   | |-OpaqueValueExpr 0x21d0184f8d0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x21d0184f8b0 <line:218:46, line:221:5>
|   |   |-CallExpr 0x21d0184f820 <line:219:9, col:49> 'int'
|   |   | |-ImplicitCastExpr 0x21d0184f808 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x21d0184f798 <col:9> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x21d0184f860 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x21d0184f848 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x21d0184f7b8 <col:16> 'char [31]' lvalue "Unable to create SSL_CTX pair\n"
|   |   `-ReturnStmt 0x21d0184f8a0 <line:220:9, col:16>
|   |     `-IntegerLiteral 0x21d0184f878 <col:16> 'int' 0
|   |-IfStmt 0x21d0184fc30 <line:223:5, line:227:5>
|   | |-OpaqueValueExpr 0x21d0184fc18 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x21d0184fbf8 <line:223:53, line:227:5>
|   |   |-CallExpr 0x21d0184fb38 <line:224:9, line:225:52> 'int'
|   |   | |-ImplicitCastExpr 0x21d0184fb20 <line:224:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x21d0184fa50 <col:9> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x21d0184fb78 <col:16, line:225:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x21d0184fb60 <line:224:16, line:225:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x21d0184faa8 <line:224:16, line:225:16> 'char [63]' lvalue "Unexpected initial value for SSL_CTX_get_tlsext_status_type()\n"
|   |   `-GotoStmt 0x21d0184fbe0 <line:226:9, col:14> 'end' 0x21d0184fb90
|   |-IfStmt 0x21d01851060 <line:232:5, line:235:5>
|   | |-OpaqueValueExpr 0x21d01851048 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x21d01851028 <line:232:54, line:235:5>
|   |   |-CallExpr 0x21d0184ff90 <line:233:9, col:77> 'int'
|   |   | |-ImplicitCastExpr 0x21d0184ff78 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x21d0184fea8 <col:9> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x21d0184ffd0 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x21d0184ffb8 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x21d0184ff08 <col:16> 'char [59]' lvalue "Unexpected initial value for SSL_get_tlsext_status_type()\n"
|   |   `-GotoStmt 0x21d01851010 <line:234:9, col:14> 'end' 0x21d0184fb90
|   |-IfStmt 0x21d01851310 <line:237:5, line:240:5>
|   | |-OpaqueValueExpr 0x21d018512f8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x21d018512d8 <line:237:73, line:240:5>
|   |   |-CallExpr 0x21d01851268 <line:238:9, col:68> 'int'
|   |   | |-ImplicitCastExpr 0x21d01851250 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x21d01851188 <col:9> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x21d018512a8 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x21d01851290 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x21d018511e8 <col:16> 'char [50]' lvalue "Unexpected fail for SSL_set_tlsext_status_type()\n"
|   |   `-GotoStmt 0x21d018512c0 <line:239:9, col:14> 'end' 0x21d0184fb90
|   |-IfStmt 0x21d018514d0 <line:242:5, line:245:5>
|   | |-OpaqueValueExpr 0x21d018514b8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x21d01851498 <line:242:74, line:245:5>
|   |   |-CallExpr 0x21d01851428 <line:243:9, col:70> 'int'
|   |   | |-ImplicitCastExpr 0x21d01851410 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x21d01851348 <col:9> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x21d01851468 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x21d01851450 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x21d018513a8 <col:16> 'char [52]' lvalue "Unexpected result for SSL_get_tlsext_status_type()\n"
|   |   `-GotoStmt 0x21d01851480 <line:244:9, col:14> 'end' 0x21d0184fb90
|   |-IfStmt 0x21d01851820 <line:250:5, line:253:5>
|   | |-OpaqueValueExpr 0x21d01851808 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x21d018517e8 <line:250:72, line:253:5>
|   |   |-CallExpr 0x21d01851778 <line:251:9, col:72> 'int'
|   |   | |-ImplicitCastExpr 0x21d01851760 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x21d018516a0 <col:9> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x21d018517b8 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x21d018517a0 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x21d018516f8 <col:16> 'char [54]' lvalue "Unexpected fail for SSL_CTX_set_tlsext_status_type()\n"
|   |   `-GotoStmt 0x21d018517d0 <line:252:9, col:14> 'end' 0x21d0184fb90
|   |-IfStmt 0x21d018519e0 <line:255:5, line:258:5>
|   | |-OpaqueValueExpr 0x21d018519c8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x21d018519a8 <line:255:73, line:258:5>
|   |   |-CallExpr 0x21d01851938 <line:256:9, col:74> 'int'
|   |   | |-ImplicitCastExpr 0x21d01851920 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x21d01851858 <col:9> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x21d01851978 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x21d01851960 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x21d018518b8 <col:16> 'char [56]' lvalue "Unexpected result for SSL_CTX_get_tlsext_status_type()\n"
|   |   `-GotoStmt 0x21d01851990 <line:257:9, col:14> 'end' 0x21d0184fb90
|   |-IfStmt 0x21d01851bc8 <line:262:5, line:265:5>
|   | |-OpaqueValueExpr 0x21d01851bb0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x21d01851b90 <line:262:74, line:265:5>
|   |   |-CallExpr 0x21d01851b20 <line:263:9, col:79> 'int'
|   |   | |-ImplicitCastExpr 0x21d01851b08 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x21d01851a38 <col:9> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x21d01851b60 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x21d01851b48 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x21d01851a98 <col:16> 'char [61]' lvalue "Unexpected result for SSL_get_tlsext_status_type() (test 2)\n"
|   |   `-GotoStmt 0x21d01851b78 <line:264:9, col:14> 'end' 0x21d0184fb90
|   |-IfStmt 0x21d018531c0 <line:280:5, line:283:5>
|   | |-OpaqueValueExpr 0x21d018531a8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x21d01853188 <line:280:78, line:283:5>
|   |   |-CallExpr 0x21d01853118 <line:281:9, col:48> 'int'
|   |   | |-ImplicitCastExpr 0x21d01853100 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x21d01853090 <col:9> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x21d01853158 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x21d01853140 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x21d018530b0 <col:16> 'char [30]' lvalue "Unable to create SSL objects\n"
|   |   `-GotoStmt 0x21d01853170 <line:282:9, col:14> 'end' 0x21d0184fb90
|   |-IfStmt 0x21d01853308 <line:285:5, line:288:5>
|   | |-OpaqueValueExpr 0x21d018532f0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x21d018532d0 <line:285:55, line:288:5>
|   |   |-CallExpr 0x21d01853260 <line:286:9, col:51> 'int'
|   |   | |-ImplicitCastExpr 0x21d01853248 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x21d018531d8 <col:9> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x21d018532a0 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x21d01853288 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x21d018531f8 <col:16> 'char [33]' lvalue "Unable to create SSL connection\n"
|   |   `-GotoStmt 0x21d018532b8 <line:287:9, col:14> 'end' 0x21d0184fb90
|   |-IfStmt 0x21d01853530 <line:290:5, line:293:5>
|   | |-BinaryOperator 0x21d018533c0 <line:290:9, col:33> 'int' '||'
|   | | |-UnaryOperator 0x21d01853358 <col:9, col:10> 'int' prefix '!' cannot overflow
|   | | | `-ImplicitCastExpr 0x21d01853340 <col:10> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x21d01853320 <col:10> 'int' lvalue Var 0x21d018a04e0 'ocsp_client_called' 'int'
|   | | `-UnaryOperator 0x21d018533a8 <col:32, col:33> 'int' prefix '!' cannot overflow
|   | |   `-ImplicitCastExpr 0x21d01853390 <col:33> 'int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x21d01853370 <col:33> 'int' lvalue Var 0x21d018a0420 'ocsp_server_called' 'int'
|   | `-CompoundStmt 0x21d01853510 <col:53, line:293:5>
|   |   |-CallExpr 0x21d018534a0 <line:291:9, col:45> 'int'
|   |   | |-ImplicitCastExpr 0x21d01853488 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x21d018533e0 <col:9> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x21d018534e0 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x21d018534c8 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x21d01853438 <col:16> 'char [27]' lvalue "OCSP callbacks not called\n"
|   |   `-GotoStmt 0x21d018534f8 <line:292:9, col:14> 'end' 0x21d0184fb90
|   |-BinaryOperator 0x21d018536e0 <line:301:5, col:26> 'int' '='
|   | |-DeclRefExpr 0x21d01853698 <col:5> 'int' lvalue Var 0x21d018a04e0 'ocsp_client_called' 'int'
|   | `-IntegerLiteral 0x21d018536b8 <col:26> 'int' 0
|   |-BinaryOperator 0x21d01853748 <line:302:5, col:26> 'int' '='
|   | |-DeclRefExpr 0x21d01853700 <col:5> 'int' lvalue Var 0x21d018a0420 'ocsp_server_called' 'int'
|   | `-IntegerLiteral 0x21d01853720 <col:26> 'int' 0
|   |-BinaryOperator 0x21d018537b0 <line:303:5, col:17> 'int' '='
|   | |-DeclRefExpr 0x21d01853768 <col:5> 'int' lvalue Var 0x21d018a05a0 'cdummyarg' 'int'
|   | `-IntegerLiteral 0x21d01853788 <col:17> 'int' 0
|   |-IfStmt 0x21d01853a10 <line:305:5, line:308:5>
|   | |-OpaqueValueExpr 0x21d018539f8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x21d018539d8 <line:305:78, line:308:5>
|   |   |-CallExpr 0x21d01853968 <line:306:9, col:48> 'int'
|   |   | |-ImplicitCastExpr 0x21d01853950 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x21d018538e0 <col:9> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x21d018539a8 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x21d01853990 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x21d01853900 <col:16> 'char [30]' lvalue "Unable to create SSL objects\n"
|   |   `-GotoStmt 0x21d018539c0 <line:307:9, col:14> 'end' 0x21d0184fb90
|   |-IfStmt 0x21d01853ba8 <line:311:5, line:314:5>
|   | |-OpaqueValueExpr 0x21d01853b90 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x21d01853b70 <line:311:54, line:314:5>
|   |   |-CallExpr 0x21d01853b00 <line:312:9, col:62> 'int'
|   |   | |-ImplicitCastExpr 0x21d01853ae8 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x21d01853a28 <col:9> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x21d01853b40 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x21d01853b28 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x21d01853a88 <col:16> 'char [44]' lvalue "Unexpected success creating the connection\n"
|   |   `-GotoStmt 0x21d01853b58 <line:313:9, col:14> 'end' 0x21d0184fb90
|   |-IfStmt 0x21d01853db0 <line:316:5, line:319:5>
|   | |-BinaryOperator 0x21d01853c30 <line:316:9, col:31> 'int' '||'
|   | | |-ImplicitCastExpr 0x21d01853c00 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x21d01853bc0 <col:9> 'int' lvalue Var 0x21d018a04e0 'ocsp_client_called' 'int'
|   | | `-ImplicitCastExpr 0x21d01853c18 <col:31> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x21d01853be0 <col:31> 'int' lvalue Var 0x21d018a0420 'ocsp_server_called' 'int'
|   | `-CompoundStmt 0x21d01853d90 <col:51, line:319:5>
|   |   |-CallExpr 0x21d01853d20 <line:317:9, col:67> 'int'
|   |   | |-ImplicitCastExpr 0x21d01853d08 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x21d01853c50 <col:9> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x21d01853d60 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x21d01853d48 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x21d01853ca8 <col:16> 'char [49]' lvalue "OCSP callbacks successfully called unexpectedly\n"
|   |   `-GotoStmt 0x21d01853d78 <line:318:9, col:14> 'end' 0x21d0184fb90
|   |-BinaryOperator 0x21d01853f60 <line:330:5, col:26> 'int' '='
|   | |-DeclRefExpr 0x21d01853f18 <col:5> 'int' lvalue Var 0x21d018a04e0 'ocsp_client_called' 'int'
|   | `-IntegerLiteral 0x21d01853f38 <col:26> 'int' 0
|   |-BinaryOperator 0x21d01853fc8 <line:331:5, col:26> 'int' '='
|   | |-DeclRefExpr 0x21d01853f80 <col:5> 'int' lvalue Var 0x21d018a0420 'ocsp_server_called' 'int'
|   | `-IntegerLiteral 0x21d01853fa0 <col:26> 'int' 0
|   |-BinaryOperator 0x21d0184bfc0 <line:332:5, col:17> 'int' '='
|   | |-DeclRefExpr 0x21d01853fe8 <col:5> 'int' lvalue Var 0x21d018a05a0 'cdummyarg' 'int'
|   | `-IntegerLiteral 0x21d01854008 <col:17> 'int' 2
|   |-IfStmt 0x21d0184c220 <line:334:5, line:337:5>
|   | |-OpaqueValueExpr 0x21d0184c208 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x21d0184c1e8 <line:334:78, line:337:5>
|   |   |-CallExpr 0x21d0184c178 <line:335:9, col:48> 'int'
|   |   | |-ImplicitCastExpr 0x21d0184c160 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x21d0184c0f0 <col:9> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x21d0184c1b8 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x21d0184c1a0 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x21d0184c110 <col:16> 'char [30]' lvalue "Unable to create SSL objects\n"
|   |   `-GotoStmt 0x21d0184c1d0 <line:336:9, col:14> 'end' 0x21d0184fb90
|   |-IfStmt 0x21d0184c4c8 <line:344:5, line:347:5>
|   | |-OpaqueValueExpr 0x21d0184c4b0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x21d0184c490 <line:344:26, line:347:5>
|   |   |-CallExpr 0x21d0184c420 <line:345:9, col:51> 'int'
|   |   | |-ImplicitCastExpr 0x21d0184c408 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x21d0184c398 <col:9> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x21d0184c460 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x21d0184c448 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x21d0184c3b8 <col:16> 'char [33]' lvalue "Can't load the certificate file\n"
|   |   `-GotoStmt 0x21d0184c478 <line:346:9, col:14> 'end' 0x21d0184fb90
|   |-IfStmt 0x21d0184ce48 <line:351:5, line:356:5>
|   | |-OpaqueValueExpr 0x21d0184ce30 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x21d0184ce10 <line:353:47, line:356:5>
|   |   |-CallExpr 0x21d0184cda0 <line:354:9, col:46> 'int'
|   |   | |-ImplicitCastExpr 0x21d0184cd88 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x21d0184cce0 <col:9> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x21d0184cde0 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x21d0184cdc8 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x21d0184cd38 <col:16> 'char [28]' lvalue "Unable to set OCSP_RESPIDs\n"
|   |   `-GotoStmt 0x21d0184cdf8 <line:355:9, col:14> 'end' 0x21d0184fb90
|   |-IfStmt 0x21d018542d8 <line:365:5, line:368:5>
|   | |-OpaqueValueExpr 0x21d018542c0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x21d018542a0 <line:365:55, line:368:5>
|   |   |-CallExpr 0x21d01854230 <line:366:9, col:51> 'int'
|   |   | |-ImplicitCastExpr 0x21d01854218 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x21d018541a8 <col:9> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x21d01854270 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x21d01854258 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x21d018541c8 <col:16> 'char [33]' lvalue "Unable to create SSL connection\n"
|   |   `-GotoStmt 0x21d01854288 <line:367:9, col:14> 'end' 0x21d0184fb90
|   |-IfStmt 0x21d018544c8 <line:370:5, line:373:5>
|   | |-BinaryOperator 0x21d01854390 <line:370:9, col:33> 'int' '||'
|   | | |-UnaryOperator 0x21d01854328 <col:9, col:10> 'int' prefix '!' cannot overflow
|   | | | `-ImplicitCastExpr 0x21d01854310 <col:10> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x21d018542f0 <col:10> 'int' lvalue Var 0x21d018a04e0 'ocsp_client_called' 'int'
|   | | `-UnaryOperator 0x21d01854378 <col:32, col:33> 'int' prefix '!' cannot overflow
|   | |   `-ImplicitCastExpr 0x21d01854360 <col:33> 'int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x21d01854340 <col:33> 'int' lvalue Var 0x21d018a0420 'ocsp_server_called' 'int'
|   | `-CompoundStmt 0x21d018544a8 <col:53, line:373:5>
|   |   |-CallExpr 0x21d01854438 <line:371:9, col:45> 'int'
|   |   | |-ImplicitCastExpr 0x21d01854420 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x21d018543b0 <col:9> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x21d01854478 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x21d01854460 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x21d018543d0 <col:16> 'char [27]' lvalue "OCSP callbacks not called\n"
|   |   `-GotoStmt 0x21d01854490 <line:372:9, col:14> 'end' 0x21d0184fb90
|   |-BinaryOperator 0x21d01854540 <line:375:5, col:18> 'int' '='
|   | |-DeclRefExpr 0x21d018544e0 <col:5> 'int' lvalue Var 0x21d0184f448 'testresult' 'int'
|   | `-IntegerLiteral 0x21d01854518 <col:18> 'int' 1
|   |-LabelStmt 0x21d01854588 <line:377:2, col:5> 'end'
|   | `-NullStmt 0x21d01854580 <col:5>
|   `-ReturnStmt 0x21d01854920 <line:388:5, col:12>
|     `-ImplicitCastExpr 0x21d01854908 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x21d018548e8 <col:12> 'int' lvalue Var 0x21d0184f448 'testresult' 'int'
|-RecordDecl 0x21d01854a28 <line:392:9, line:396:1> line:392:16 struct ssl_session_test_fixture definition
| |-FieldDecl 0x21d01854af8 <line:393:5, col:17> col:17 referenced test_case_name 'const char *'
| |-FieldDecl 0x21d01854b68 <line:394:5, col:9> col:9 referenced use_ext_cache 'int'
| `-FieldDecl 0x21d01854bd8 <line:395:5, col:9> col:9 referenced use_int_cache 'int'
|-TypedefDecl 0x21d01854c88 <line:392:1, line:396:3> col:3 referenced SSL_SESSION_TEST_FIXTURE 'struct ssl_session_test_fixture':'struct ssl_session_test_fixture'
| `-ElaboratedType 0x21d01854c30 'struct ssl_session_test_fixture' sugar
|   `-RecordType 0x21d01854ac0 'struct ssl_session_test_fixture'
|     `-Record 0x21d01854a28 'ssl_session_test_fixture'
|-VarDecl 0x21d01854d10 <line:398:1, col:25> col:12 used new_called 'int' static cinit
| `-IntegerLiteral 0x21d01854d78 <col:25> 'int' 0
|-VarDecl 0x21d01854dd0 <col:1, col:44> col:28 used remove_called 'int' static cinit
| `-IntegerLiteral 0x21d01854e38 <col:44> 'int' 0
|-FunctionDecl 0x21d0184cfd0 <line:400:1, line:412:1> line:401:1 used ssl_session_set_up 'SSL_SESSION_TEST_FIXTURE (const char *const)' static
| |-ParmVarDecl 0x21d01854ec8 <col:20, col:38> col:38 used test_case_name 'const char *const'
| `-CompoundStmt 0x21d0184d468 <line:402:1, line:412:1>
|   |-DeclStmt 0x21d0184d108 <line:403:5, col:37>
|   | `-VarDecl 0x21d0184d0a0 <col:5, col:30> col:30 used fixture 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture' nrvo
|   |-BinaryOperator 0x21d0184d1c0 <line:405:5, col:30> 'const char *' '='
|   | |-MemberExpr 0x21d0184d158 <col:5, col:13> 'const char *' lvalue .test_case_name 0x21d01854af8
|   | | `-DeclRefExpr 0x21d0184d120 <col:5> 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture' lvalue Var 0x21d0184d0a0 'fixture' 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture'
|   | `-ImplicitCastExpr 0x21d0184d1a8 <col:30> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x21d0184d188 <col:30> 'const char *const' lvalue ParmVar 0x21d01854ec8 'test_case_name' 'const char *const'
|   |-BinaryOperator 0x21d0184d258 <line:406:5, col:29> 'int' '='
|   | |-MemberExpr 0x21d0184d200 <col:5, col:13> 'int' lvalue .use_ext_cache 0x21d01854b68
|   | | `-DeclRefExpr 0x21d0184d1e0 <col:5> 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture' lvalue Var 0x21d0184d0a0 'fixture' 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture'
|   | `-IntegerLiteral 0x21d0184d230 <col:29> 'int' 1
|   |-BinaryOperator 0x21d0184d350 <line:407:5, col:29> 'int' '='
|   | |-MemberExpr 0x21d0184d2f8 <col:5, col:13> 'int' lvalue .use_int_cache 0x21d01854bd8
|   | | `-DeclRefExpr 0x21d0184d2d8 <col:5> 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture' lvalue Var 0x21d0184d0a0 'fixture' 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture'
|   | `-IntegerLiteral 0x21d0184d328 <col:29> 'int' 1
|   |-BinaryOperator 0x21d0184d3f8 <line:409:5, col:34> 'int' '='
|   | |-DeclRefExpr 0x21d0184d370 <col:5> 'int' lvalue Var 0x21d01854d10 'new_called' 'int'
|   | `-BinaryOperator 0x21d0184d3d8 <col:18, col:34> 'int' '='
|   |   |-DeclRefExpr 0x21d0184d390 <col:18> 'int' lvalue Var 0x21d01854dd0 'remove_called' 'int'
|   |   `-IntegerLiteral 0x21d0184d3b0 <col:34> 'int' 0
|   `-ReturnStmt 0x21d0184d450 <line:411:5, col:12>
|     `-ImplicitCastExpr 0x21d0184d438 <col:12> 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture' <LValueToRValue>
|       `-DeclRefExpr 0x21d0184d418 <col:12> 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture' lvalue Var 0x21d0184d0a0 'fixture' 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture'
|-FunctionDecl 0x21d0184d5c8 <line:414:1, line:416:1> line:414:13 used ssl_session_tear_down 'void (SSL_SESSION_TEST_FIXTURE)' static
| |-ParmVarDecl 0x21d0184d4b8 <col:35, col:60> col:60 fixture 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture'
| `-CompoundStmt 0x21d0184d688 <line:415:1, line:416:1>
|-FunctionDecl 0x21d0184d7d0 <line:418:1, line:423:1> line:418:12 invalid new_session_cb 'int (int *, int *)' static
| |-ParmVarDecl 0x21d0184d6b0 <col:27, col:32> col:32 invalid ssl 'int *'
| |-ParmVarDecl 0x21d0184d730 <col:37, col:50> col:50 invalid sess 'int *'
| `-CompoundStmt 0x21d0184d908 <line:419:1, line:423:1>
|   |-UnaryOperator 0x21d0184d8b8 <line:420:5, col:15> 'int' postfix '++'
|   | `-DeclRefExpr 0x21d0184d898 <col:5> 'int' lvalue Var 0x21d01854d10 'new_called' 'int'
|   `-ReturnStmt 0x21d0184d8f8 <line:422:5, col:12>
|     `-IntegerLiteral 0x21d0184d8d0 <col:12> 'int' 1
|-FunctionDecl 0x21d0184da98 <line:425:1, line:428:1> line:425:13 invalid remove_session_cb 'void (int *, int *)' static
| |-ParmVarDecl 0x21d0184d940 <col:31, col:40> col:40 invalid ctx 'int *'
| |-ParmVarDecl 0x21d0184d9c0 <col:45, col:58> col:58 invalid sess 'int *'
| `-CompoundStmt 0x21d0184db98 <line:426:1, line:428:1>
|   `-UnaryOperator 0x21d0184db80 <line:427:5, col:18> 'int' postfix '++'
|     `-DeclRefExpr 0x21d0184db60 <col:5> 'int' lvalue Var 0x21d01854dd0 'remove_called' 'int'
|-FunctionDecl 0x21d0184dcd0 <line:430:1, line:627:1> line:430:12 used execute_test_session 'int (SSL_SESSION_TEST_FIXTURE)' static
| |-ParmVarDecl 0x21d0184dbc0 <col:33, col:58> col:58 used fix 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture'
| `-CompoundStmt 0x21d01858528 <line:431:1, line:627:1>
|   |-DeclStmt 0x21d01859468 <line:439:5, col:23>
|   | `-VarDecl 0x21d018593d8 <col:5, col:22> col:9 used testresult 'int' cinit
|   |   `-IntegerLiteral 0x21d01859440 <col:22> 'int' 0
|   |-IfStmt 0x21d018596c0 <line:441:5, line:446:5>
|   | |-OpaqueValueExpr 0x21d018596a8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x21d01859688 <line:443:46, line:446:5>
|   |   |-CallExpr 0x21d018595f8 <line:444:9, col:49> 'int'
|   |   | |-ImplicitCastExpr 0x21d018595e0 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x21d01859570 <col:9> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x21d01859638 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x21d01859620 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x21d01859590 <col:16> 'char [31]' lvalue "Unable to create SSL_CTX pair\n"
|   |   `-ReturnStmt 0x21d01859678 <line:445:9, col:16>
|   |     `-IntegerLiteral 0x21d01859650 <col:16> 'int' 0
|   |-IfStmt 0x21d01859a80 <line:454:5, line:457:5>
|   | |-ImplicitCastExpr 0x21d01859838 <line:454:9, col:13> 'int' <LValueToRValue>
|   | | `-MemberExpr 0x21d01859808 <col:9, col:13> 'int' lvalue .use_ext_cache 0x21d01854b68
|   | |   `-DeclRefExpr 0x21d018597e8 <col:9> 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture' lvalue ParmVar 0x21d0184dbc0 'fix' 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture'
|   | `-CompoundStmt 0x21d01859a70 <col:28, line:457:5>
|   |-IfStmt 0x21d01859c50 <line:458:5, line:465:5> has_else
|   | |-ImplicitCastExpr 0x21d01859ae8 <line:458:9, col:13> 'int' <LValueToRValue>
|   | | `-MemberExpr 0x21d01859ab8 <col:9, col:13> 'int' lvalue .use_int_cache 0x21d01854bd8
|   | |   `-DeclRefExpr 0x21d01859a98 <col:9> 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture' lvalue ParmVar 0x21d0184dbc0 'fix' 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture'
|   | |-CompoundStmt 0x21d01859c10 <col:28, line:461:5>
|   | `-CompoundStmt 0x21d01859c40 <col:12, line:465:5>
|   |-IfStmt 0x21d01859f08 <line:467:5, line:471:5>
|   | |-OpaqueValueExpr 0x21d01859ef0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x21d01859ed0 <line:468:39, line:471:5>
|   |   |-CallExpr 0x21d01859e10 <line:469:9, col:48> 'int'
|   |   | |-ImplicitCastExpr 0x21d01859df8 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x21d01859d88 <col:9> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x21d01859e50 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x21d01859e38 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x21d01859da8 <col:16> 'char [30]' lvalue "Unable to create SSL objects\n"
|   |   `-GotoStmt 0x21d01859eb8 <line:470:9, col:14> 'end' 0x21d01859e68
|   |-IfStmt 0x21d0185a050 <line:473:5, line:476:5>
|   | |-OpaqueValueExpr 0x21d0185a038 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x21d0185a018 <line:473:57, line:476:5>
|   |   |-CallExpr 0x21d01859fa8 <line:474:9, col:51> 'int'
|   |   | |-ImplicitCastExpr 0x21d01859f90 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x21d01859f20 <col:9> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x21d01859fe8 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x21d01859fd0 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x21d01859f40 <col:16> 'char [33]' lvalue "Unable to create SSL connection\n"
|   |   `-GotoStmt 0x21d0185a000 <line:475:9, col:14> 'end' 0x21d01859e68
|   |-IfStmt 0x21d01856330 <line:478:5, line:481:5>
|   | |-OpaqueValueExpr 0x21d01856318 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x21d018562f8 <line:478:24, line:481:5>
|   |   |-CallExpr 0x21d01856288 <line:479:9, col:43> 'int'
|   |   | |-ImplicitCastExpr 0x21d01856270 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x21d018561d0 <col:9> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x21d018562c8 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x21d018562b0 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x21d01856228 <col:16> 'char [25]' lvalue "Unexpected NULL session\n"
|   |   `-GotoStmt 0x21d018562e0 <line:480:9, col:14> 'end' 0x21d01859e68
|   |-IfStmt 0x21d018565e8 <line:483:5, line:487:5>
|   | |-OpaqueValueExpr 0x21d018565d0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x21d018565b0 <line:483:64, line:487:5>
|   |   |-CallExpr 0x21d01856540 <line:485:9, col:62> 'int'
|   |   | |-ImplicitCastExpr 0x21d01856528 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x21d018564a8 <col:9> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x21d01856580 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x21d01856568 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x21d018564c8 <col:16> 'char [44]' lvalue "Unexpected success adding session to cache\n"
|   |   `-GotoStmt 0x21d01856598 <line:486:9, col:14> 'end' 0x21d01859e68
|   |-IfStmt 0x21d018568e0 <line:489:5, line:492:5>
|   | |-BinaryOperator 0x21d018567a8 <line:489:9, col:68> 'int' '&&'
|   | | |-ImplicitCastExpr 0x21d01856790 <col:9, col:13> 'int' <LValueToRValue>
|   | | | `-MemberExpr 0x21d01856620 <col:9, col:13> 'int' lvalue .use_ext_cache 0x21d01854b68
|   | | |   `-DeclRefExpr 0x21d01856600 <col:9> 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture' lvalue ParmVar 0x21d0184dbc0 'fix' 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture'
|   | | `-ParenExpr 0x21d01856770 <col:30, col:68> 'int'
|   | |   `-BinaryOperator 0x21d01856750 <col:31, col:67> 'int' '||'
|   | |     |-BinaryOperator 0x21d018566b0 <col:31, col:45> 'int' '!='
|   | |     | |-ImplicitCastExpr 0x21d01856698 <col:31> 'int' <LValueToRValue>
|   | |     | | `-DeclRefExpr 0x21d01856650 <col:31> 'int' lvalue Var 0x21d01854d10 'new_called' 'int'
|   | |     | `-IntegerLiteral 0x21d01856670 <col:45> 'int' 1
|   | |     `-BinaryOperator 0x21d01856730 <col:50, col:67> 'int' '!='
|   | |       |-ImplicitCastExpr 0x21d01856718 <col:50> 'int' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x21d018566d0 <col:50> 'int' lvalue Var 0x21d01854dd0 'remove_called' 'int'
|   | |       `-IntegerLiteral 0x21d018566f0 <col:67> 'int' 0
|   | `-CompoundStmt 0x21d018568c0 <col:71, line:492:5>
|   |   |-CallExpr 0x21d01856850 <line:490:9, col:46> 'int'
|   |   | |-ImplicitCastExpr 0x21d01856838 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x21d018567c8 <col:9> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x21d01856890 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x21d01856878 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x21d018567e8 <col:16> 'char [28]' lvalue "Session not added to cache\n"
|   |   `-GotoStmt 0x21d018568a8 <line:491:9, col:14> 'end' 0x21d01859e68
|   |-IfStmt 0x21d01856b40 <line:494:5, line:497:5>
|   | |-OpaqueValueExpr 0x21d01856b28 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x21d01856b08 <line:494:80, line:497:5>
|   |   |-CallExpr 0x21d01856a98 <line:495:9, col:55> 'int'
|   |   | |-ImplicitCastExpr 0x21d01856a80 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x21d01856a08 <col:9> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x21d01856ad8 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x21d01856ac0 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x21d01856a28 <col:16> 'char [37]' lvalue "Unable to create second SSL objects\n"
|   |   `-GotoStmt 0x21d01856af0 <line:496:9, col:14> 'end' 0x21d01859e68
|   |-IfStmt 0x21d01856cd0 <line:499:5, line:502:5>
|   | |-OpaqueValueExpr 0x21d01856cb8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x21d01856c98 <line:499:57, line:502:5>
|   |   |-CallExpr 0x21d01856c28 <line:500:9, col:58> 'int'
|   |   | |-ImplicitCastExpr 0x21d01856c10 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x21d01856b58 <col:9> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x21d01856c68 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x21d01856c50 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x21d01856bb8 <col:16> 'char [40]' lvalue "Unable to create second SSL connection\n"
|   |   `-GotoStmt 0x21d01856c80 <line:501:9, col:14> 'end' 0x21d01859e68
|   |-IfStmt 0x21d01856f00 <line:505:5, line:508:5>
|   | |-OpaqueValueExpr 0x21d01856ee8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x21d01856ec8 <line:505:24, line:508:5>
|   |   |-CallExpr 0x21d01856e58 <line:506:9, col:59> 'int'
|   |   | |-ImplicitCastExpr 0x21d01856e40 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x21d01856d90 <col:9> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x21d01856e98 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x21d01856e80 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x21d01856de8 <col:16> 'char [41]' lvalue "Unexpected NULL session from clientssl2\n"
|   |   `-GotoStmt 0x21d01856eb0 <line:507:9, col:14> 'end' 0x21d01859e68
|   |-IfStmt 0x21d0185c2c0 <line:510:5, line:513:5>
|   | |-BinaryOperator 0x21d0185c138 <line:510:9, col:68> 'int' '&&'
|   | | |-ImplicitCastExpr 0x21d0185c120 <col:9, col:13> 'int' <LValueToRValue>
|   | | | `-MemberExpr 0x21d01856f38 <col:9, col:13> 'int' lvalue .use_ext_cache 0x21d01854b68
|   | | |   `-DeclRefExpr 0x21d01856f18 <col:9> 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture' lvalue ParmVar 0x21d0184dbc0 'fix' 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture'
|   | | `-ParenExpr 0x21d0185c100 <col:30, col:68> 'int'
|   | |   `-BinaryOperator 0x21d0185c0e0 <col:31, col:67> 'int' '||'
|   | |     |-BinaryOperator 0x21d01856fc8 <col:31, col:45> 'int' '!='
|   | |     | |-ImplicitCastExpr 0x21d01856fb0 <col:31> 'int' <LValueToRValue>
|   | |     | | `-DeclRefExpr 0x21d01856f68 <col:31> 'int' lvalue Var 0x21d01854d10 'new_called' 'int'
|   | |     | `-IntegerLiteral 0x21d01856f88 <col:45> 'int' 2
|   | |     `-BinaryOperator 0x21d0185c0c0 <col:50, col:67> 'int' '!='
|   | |       |-ImplicitCastExpr 0x21d01857030 <col:50> 'int' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x21d01856fe8 <col:50> 'int' lvalue Var 0x21d01854dd0 'remove_called' 'int'
|   | |       `-IntegerLiteral 0x21d01857008 <col:67> 'int' 0
|   | `-CompoundStmt 0x21d0185c2a0 <col:71, line:513:5>
|   |   |-CallExpr 0x21d0185c230 <line:511:9, col:63> 'int'
|   |   | |-ImplicitCastExpr 0x21d0185c218 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x21d0185c158 <col:9> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x21d0185c270 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x21d0185c258 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x21d0185c1b8 <col:16> 'char [45]' lvalue "Remove session callback unexpectedly called\n"
|   |   `-GotoStmt 0x21d0185c288 <line:512:9, col:14> 'end' 0x21d01859e68
|   |-IfStmt 0x21d0185c560 <line:519:5, line:522:5>
|   | |-OpaqueValueExpr 0x21d0185c548 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x21d0185c528 <line:519:46, line:522:5>
|   |   |-CallExpr 0x21d0185c4b8 <line:520:9, col:54> 'int'
|   |   | |-ImplicitCastExpr 0x21d0185c4a0 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x21d0185c3e8 <col:9> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x21d0185c4f8 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x21d0185c4e0 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x21d0185c448 <col:16> 'char [36]' lvalue "Unexpected failure setting session\n"
|   |   `-GotoStmt 0x21d0185c510 <line:521:9, col:14> 'end' 0x21d01859e68
|   |-IfStmt 0x21d0185c8a0 <line:524:5, line:527:5>
|   | |-BinaryOperator 0x21d0185c720 <line:524:9, col:68> 'int' '&&'
|   | | |-ImplicitCastExpr 0x21d0185c708 <col:9, col:13> 'int' <LValueToRValue>
|   | | | `-MemberExpr 0x21d0185c598 <col:9, col:13> 'int' lvalue .use_ext_cache 0x21d01854b68
|   | | |   `-DeclRefExpr 0x21d0185c578 <col:9> 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture' lvalue ParmVar 0x21d0184dbc0 'fix' 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture'
|   | | `-ParenExpr 0x21d0185c6e8 <col:30, col:68> 'int'
|   | |   `-BinaryOperator 0x21d0185c6c8 <col:31, col:67> 'int' '||'
|   | |     |-BinaryOperator 0x21d0185c628 <col:31, col:45> 'int' '!='
|   | |     | |-ImplicitCastExpr 0x21d0185c610 <col:31> 'int' <LValueToRValue>
|   | |     | | `-DeclRefExpr 0x21d0185c5c8 <col:31> 'int' lvalue Var 0x21d01854d10 'new_called' 'int'
|   | |     | `-IntegerLiteral 0x21d0185c5e8 <col:45> 'int' 2
|   | |     `-BinaryOperator 0x21d0185c6a8 <col:50, col:67> 'int' '!='
|   | |       |-ImplicitCastExpr 0x21d0185c690 <col:50> 'int' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x21d0185c648 <col:50> 'int' lvalue Var 0x21d01854dd0 'remove_called' 'int'
|   | |       `-IntegerLiteral 0x21d0185c668 <col:67> 'int' 1
|   | `-CompoundStmt 0x21d0185c880 <col:71, line:527:5>
|   |   |-CallExpr 0x21d0185c810 <line:525:9, col:61> 'int'
|   |   | |-ImplicitCastExpr 0x21d0185c7f8 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x21d0185c740 <col:9> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x21d0185c850 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x21d0185c838 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x21d0185c798 <col:16> 'char [43]' lvalue "Failed to call callback to remove session\n"
|   |   `-GotoStmt 0x21d0185c868 <line:526:9, col:14> 'end' 0x21d01859e68
|   |-IfStmt 0x21d0185cb38 <line:530:5, line:533:5>
|   | |-OpaqueValueExpr 0x21d0185cb20 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x21d0185cb00 <line:530:47, line:533:5>
|   |   |-CallExpr 0x21d0185ca90 <line:531:9, col:44> 'int'
|   |   | |-ImplicitCastExpr 0x21d0185ca78 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x21d0185c9c8 <col:9> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x21d0185cad0 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x21d0185cab8 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x21d0185ca28 <col:16> 'char [26]' lvalue "Unexpected session found\n"
|   |   `-GotoStmt 0x21d0185cae8 <line:532:9, col:14> 'end' 0x21d01859e68
|   |-IfStmt 0x21d01857070 <line:535:5, line:554:5>
|   | |-ImplicitCastExpr 0x21d0185cba0 <line:535:9, col:13> 'int' <LValueToRValue>
|   | | `-MemberExpr 0x21d0185cb70 <col:9, col:13> 'int' lvalue .use_int_cache 0x21d01854bd8
|   | |   `-DeclRefExpr 0x21d0185cb50 <col:9> 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture' lvalue ParmVar 0x21d0184dbc0 'fix' 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture'
|   | `-CompoundStmt 0x21d0185d088 <col:28, line:554:5>
|   |   |-IfStmt 0x21d0185cd18 <line:536:9, line:542:9>
|   |   | |-OpaqueValueExpr 0x21d0185cd00 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x21d0185cce0 <line:536:48, line:542:9>
|   |   |   |-CallExpr 0x21d0185cc70 <line:540:13, col:66> 'int'
|   |   |   | |-ImplicitCastExpr 0x21d0185cc58 <col:13> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x21d0185cbd8 <col:13> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |   |   | `-ImplicitCastExpr 0x21d0185ccb0 <col:20> 'const char *' <NoOp>
|   |   |   |   `-ImplicitCastExpr 0x21d0185cc98 <col:20> 'char *' <ArrayToPointerDecay>
|   |   |   |     `-StringLiteral 0x21d0185cbf8 <col:20> 'char [44]' lvalue "Unexpected failure adding session to cache\n"
|   |   |   `-GotoStmt 0x21d0185ccc8 <line:541:13, col:18> 'end' 0x21d01859e68
|   |   |-IfStmt 0x21d0185cfb8 <line:544:9, line:547:9>
|   |   | |-OpaqueValueExpr 0x21d0185cfa0 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x21d0185cf80 <line:544:51, line:547:9>
|   |   |   |-CallExpr 0x21d0185cf10 <line:545:13, col:70> 'int'
|   |   |   | |-ImplicitCastExpr 0x21d0185cef8 <col:13> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x21d0185ce40 <col:13> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |   |   | `-ImplicitCastExpr 0x21d0185cf50 <col:20> 'const char *' <NoOp>
|   |   |   |   `-ImplicitCastExpr 0x21d0185cf38 <col:20> 'char *' <ArrayToPointerDecay>
|   |   |   |     `-StringLiteral 0x21d0185ce98 <col:20> 'char [48]' lvalue "Unexpected failure removing session from cache\n"
|   |   |   `-GotoStmt 0x21d0185cf68 <line:546:13, col:18> 'end' 0x21d01859e68
|   |   `-IfStmt 0x21d0185d070 <line:552:9, line:553:26>
|   |     |-ImplicitCastExpr 0x21d0185d020 <line:552:13, col:17> 'int' <LValueToRValue>
|   |     | `-MemberExpr 0x21d0185cff0 <col:13, col:17> 'int' lvalue .use_ext_cache 0x21d01854b68
|   |     |   `-DeclRefExpr 0x21d0185cfd0 <col:13> 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture' lvalue ParmVar 0x21d0184dbc0 'fix' 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture'
|   |     `-UnaryOperator 0x21d0185d058 <line:553:13, col:26> 'int' postfix '--'
|   |       `-DeclRefExpr 0x21d0185d038 <col:13> 'int' lvalue Var 0x21d01854dd0 'remove_called' 'int'
|   |-IfStmt 0x21d018571e8 <line:557:5, line:560:5>
|   | |-OpaqueValueExpr 0x21d018571d0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x21d018571b0 <line:557:46, line:560:5>
|   |   |-CallExpr 0x21d01857140 <line:558:9, col:66> 'int'
|   |   | |-ImplicitCastExpr 0x21d01857128 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x21d018570a8 <col:9> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x21d01857180 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x21d01857168 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x21d018570c8 <col:16> 'char [48]' lvalue "Unexpected success removing session from cache\n"
|   |   `-GotoStmt 0x21d01857198 <line:559:9, col:14> 'end' 0x21d01859e68
|   |-IfStmt 0x21d01857530 <line:562:5, line:565:5>
|   | |-BinaryOperator 0x21d018573a8 <line:562:9, col:68> 'int' '&&'
|   | | |-ImplicitCastExpr 0x21d01857390 <col:9, col:13> 'int' <LValueToRValue>
|   | | | `-MemberExpr 0x21d01857220 <col:9, col:13> 'int' lvalue .use_ext_cache 0x21d01854b68
|   | | |   `-DeclRefExpr 0x21d01857200 <col:9> 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture' lvalue ParmVar 0x21d0184dbc0 'fix' 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture'
|   | | `-ParenExpr 0x21d01857370 <col:30, col:68> 'int'
|   | |   `-BinaryOperator 0x21d01857350 <col:31, col:67> 'int' '||'
|   | |     |-BinaryOperator 0x21d018572b0 <col:31, col:45> 'int' '!='
|   | |     | |-ImplicitCastExpr 0x21d01857298 <col:31> 'int' <LValueToRValue>
|   | |     | | `-DeclRefExpr 0x21d01857250 <col:31> 'int' lvalue Var 0x21d01854d10 'new_called' 'int'
|   | |     | `-IntegerLiteral 0x21d01857270 <col:45> 'int' 2
|   | |     `-BinaryOperator 0x21d01857330 <col:50, col:67> 'int' '!='
|   | |       |-ImplicitCastExpr 0x21d01857318 <col:50> 'int' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x21d018572d0 <col:50> 'int' lvalue Var 0x21d01854dd0 'remove_called' 'int'
|   | |       `-IntegerLiteral 0x21d018572f0 <col:67> 'int' 2
|   | `-CompoundStmt 0x21d01857510 <col:71, line:565:5>
|   |   |-CallExpr 0x21d018574a0 <line:563:9, col:64> 'int'
|   |   | |-ImplicitCastExpr 0x21d01857488 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x21d018573c8 <col:9> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x21d018574e0 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x21d018574c8 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x21d01857428 <col:16> 'char [46]' lvalue "Failed to call callback to remove session #2\n"
|   |   `-GotoStmt 0x21d018574f8 <line:564:9, col:14> 'end' 0x21d01859e68
|   |-IfStmt 0x21d018578a0 <line:571:5, line:574:5>
|   | |-OpaqueValueExpr 0x21d01857888 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x21d01857868 <line:571:80, line:574:5>
|   |   |-CallExpr 0x21d018577f8 <line:572:9, col:54> 'int'
|   |   | |-ImplicitCastExpr 0x21d018577e0 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x21d01857768 <col:9> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x21d01857838 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x21d01857820 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x21d01857788 <col:16> 'char [36]' lvalue "Unable to create third SSL objects\n"
|   |   `-GotoStmt 0x21d01857850 <line:573:9, col:14> 'end' 0x21d01859e68
|   |-IfStmt 0x21d01857a18 <line:576:5, line:579:5>
|   | |-OpaqueValueExpr 0x21d01857a00 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x21d018579e0 <line:576:46, line:579:5>
|   |   |-CallExpr 0x21d01857970 <line:577:9, col:62> 'int'
|   |   | |-ImplicitCastExpr 0x21d01857958 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x21d018578d8 <col:9> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x21d018579b0 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x21d01857998 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x21d018578f8 <col:16> 'char [44]' lvalue "Unable to set session for third connection\n"
|   |   `-GotoStmt 0x21d018579c8 <line:578:9, col:14> 'end' 0x21d01859e68
|   |-IfStmt 0x21d01857ba0 <line:582:5, line:585:5>
|   | |-OpaqueValueExpr 0x21d01857b88 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x21d01857b68 <line:582:56, line:585:5>
|   |   |-CallExpr 0x21d01857af8 <line:583:9, col:57> 'int'
|   |   | |-ImplicitCastExpr 0x21d01857ae0 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x21d01857a30 <col:9> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x21d01857b38 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x21d01857b20 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x21d01857a88 <col:16> 'char [39]' lvalue "Unable to create third SSL connection\n"
|   |   `-GotoStmt 0x21d01857b50 <line:584:9, col:14> 'end' 0x21d01859e68
|   |-IfStmt 0x21d01857ea8 <line:589:5, line:592:5>
|   | |-BinaryOperator 0x21d01857d60 <line:589:9, col:68> 'int' '&&'
|   | | |-ImplicitCastExpr 0x21d01857d48 <col:9, col:13> 'int' <LValueToRValue>
|   | | | `-MemberExpr 0x21d01857bd8 <col:9, col:13> 'int' lvalue .use_ext_cache 0x21d01854b68
|   | | |   `-DeclRefExpr 0x21d01857bb8 <col:9> 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture' lvalue ParmVar 0x21d0184dbc0 'fix' 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture'
|   | | `-ParenExpr 0x21d01857d28 <col:30, col:68> 'int'
|   | |   `-BinaryOperator 0x21d01857d08 <col:31, col:67> 'int' '||'
|   | |     |-BinaryOperator 0x21d01857c68 <col:31, col:45> 'int' '!='
|   | |     | |-ImplicitCastExpr 0x21d01857c50 <col:31> 'int' <LValueToRValue>
|   | |     | | `-DeclRefExpr 0x21d01857c08 <col:31> 'int' lvalue Var 0x21d01854d10 'new_called' 'int'
|   | |     | `-IntegerLiteral 0x21d01857c28 <col:45> 'int' 2
|   | |     `-BinaryOperator 0x21d01857ce8 <col:50, col:67> 'int' '!='
|   | |       |-ImplicitCastExpr 0x21d01857cd0 <col:50> 'int' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x21d01857c88 <col:50> 'int' lvalue Var 0x21d01854dd0 'remove_called' 'int'
|   | |       `-IntegerLiteral 0x21d01857ca8 <col:67> 'int' 3
|   | `-CompoundStmt 0x21d01857e88 <col:71, line:592:5>
|   |   |-CallExpr 0x21d01857e18 <line:590:9, col:64> 'int'
|   |   | |-ImplicitCastExpr 0x21d01857e00 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x21d01857d80 <col:9> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x21d01857e58 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x21d01857e40 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x21d01857da0 <col:16> 'char [46]' lvalue "Failed to call callback to remove session #2\n"
|   |   `-GotoStmt 0x21d01857e70 <line:591:9, col:14> 'end' 0x21d01859e68
|   |-IfStmt 0x21d018580b8 <line:594:5, line:600:5>
|   | |-OpaqueValueExpr 0x21d018580a0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x21d01858080 <line:594:65, line:600:5>
|   |   |-CallExpr 0x21d01858000 <line:598:9, col:65> 'int'
|   |   | |-ImplicitCastExpr 0x21d01857fe8 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x21d01857f30 <col:9> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x21d01858040 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x21d01858028 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x21d01857f88 <col:16> 'char [47]' lvalue "Unexpected failure adding session to cache #2\n"
|   |   `-GotoStmt 0x21d01858058 <line:599:9, col:14> 'end' 0x21d01859e68
|   |-BinaryOperator 0x21d01858130 <line:603:5, col:18> 'int' '='
|   | |-DeclRefExpr 0x21d018580d0 <col:5> 'int' lvalue Var 0x21d018593d8 'testresult' 'int'
|   | `-IntegerLiteral 0x21d01858108 <col:18> 'int' 1
|   |-LabelStmt 0x21d01858178 <line:605:2, col:5> 'end'
|   | `-NullStmt 0x21d01858170 <col:5>
|   `-ReturnStmt 0x21d01858518 <line:626:5, col:12>
|     `-ImplicitCastExpr 0x21d01858500 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x21d018584e0 <col:12> 'int' lvalue Var 0x21d018593d8 'testresult' 'int'
|-FunctionDecl 0x21d018586b0 <line:629:1, line:636:1> line:629:12 used test_session_with_only_int_cache 'int (void)' static
| `-CompoundStmt 0x21d01858d48 <line:630:1, line:636:1>
|   |-DeclStmt 0x21d01858940 <line:631:24, .//openssl//file_jk/before\test/testutil.h:47:55>
|   | `-VarDecl 0x21d01858778 <.//openssl//file_jk/before\test\sslapitest.c:631:24, .//openssl//file_jk/before\test/testutil.h:47:54> col:23 used fixture 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture' cinit
|   |   `-CallExpr 0x21d01858900 <.//openssl//file_jk/before\test\sslapitest.c:631:50, .//openssl//file_jk/before\test/testutil.h:47:54> 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture'
|   |     |-ImplicitCastExpr 0x21d018588e8 <.//openssl//file_jk/before\test\sslapitest.c:631:50> 'SSL_SESSION_TEST_FIXTURE (*)(const char *const)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x21d018587e0 <col:50> 'SSL_SESSION_TEST_FIXTURE (const char *const)' Function 0x21d0184cfd0 'ssl_session_set_up' 'SSL_SESSION_TEST_FIXTURE (const char *const)'
|   |     `-ImplicitCastExpr 0x21d01858928 <.//openssl//file_jk/before\test/testutil.h:68:26> 'const char *' <ArrayToPointerDecay>
|   |       `-PredefinedExpr 0x21d01858870 <col:26> 'const char [33]' lvalue __func__
|   |         `-StringLiteral 0x21d01858838 <col:26> 'const char [33]' lvalue "test_session_with_only_int_cache"
|   |-DeclStmt 0x21d01858a00 <line:48:5, .//openssl//file_jk/before\test\sslapitest.c:631:69>
|   | `-VarDecl 0x21d01858970 <.//openssl//file_jk/before\test/testutil.h:48:5, col:18> col:9 used result 'int' cinit
|   |   `-IntegerLiteral 0x21d018589d8 <col:18> 'int' 0
|   |-BinaryOperator 0x21d01858aa8 <.//openssl//file_jk/before\test\sslapitest.c:633:5, col:29> 'int' '='
|   | |-MemberExpr 0x21d01858a50 <col:5, col:13> 'int' lvalue .use_ext_cache 0x21d01854b68
|   | | `-DeclRefExpr 0x21d01858a18 <col:5> 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture' lvalue Var 0x21d01858778 'fixture' 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture'
|   | `-IntegerLiteral 0x21d01858a80 <col:29> 'int' 0
|   |-BinaryOperator 0x21d01858bf0 <.//openssl//file_jk/before\test/testutil.h:51:9, col:38> 'int' '='
|   | |-DeclRefExpr 0x21d01858ac8 <col:9> 'int' lvalue Var 0x21d01858970 'result' 'int'
|   | `-CallExpr 0x21d01858bb0 <.//openssl//file_jk/before\test\sslapitest.c:635:18, .//openssl//file_jk/before\test/testutil.h:51:38> 'int'
|   |   |-ImplicitCastExpr 0x21d01858b98 <.//openssl//file_jk/before\test\sslapitest.c:635:18> 'int (*)(SSL_SESSION_TEST_FIXTURE)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x21d01858b00 <col:18> 'int (SSL_SESSION_TEST_FIXTURE)' Function 0x21d0184dcd0 'execute_test_session' 'int (SSL_SESSION_TEST_FIXTURE)'
|   |   `-ImplicitCastExpr 0x21d01858bd8 <.//openssl//file_jk/before\test/testutil.h:51:31> 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture' <LValueToRValue>
|   |     `-DeclRefExpr 0x21d01858b20 <col:31> 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture' lvalue Var 0x21d01858778 'fixture' 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture'
|   |-CallExpr 0x21d01858cc0 <.//openssl//file_jk/before\test\sslapitest.c:635:40, .//openssl//file_jk/before\test/testutil.h:52:26> 'void'
|   | |-ImplicitCastExpr 0x21d01858ca8 <.//openssl//file_jk/before\test\sslapitest.c:635:40> 'void (*)(SSL_SESSION_TEST_FIXTURE)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x21d01858c10 <col:40> 'void (SSL_SESSION_TEST_FIXTURE)' Function 0x21d0184d5c8 'ssl_session_tear_down' 'void (SSL_SESSION_TEST_FIXTURE)'
|   | `-ImplicitCastExpr 0x21d01858ce8 <.//openssl//file_jk/before\test/testutil.h:52:19> 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture' <LValueToRValue>
|   |   `-DeclRefExpr 0x21d01858c30 <col:19> 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture' lvalue Var 0x21d01858778 'fixture' 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture'
|   `-ReturnStmt 0x21d01858d38 <line:53:9, col:16>
|     `-ImplicitCastExpr 0x21d01858d20 <col:16> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x21d01858d00 <col:16> 'int' lvalue Var 0x21d01858970 'result' 'int'
|-FunctionDecl 0x21d01858e28 <.//openssl//file_jk/before\test\sslapitest.c:638:1, line:645:1> line:638:12 used test_session_with_only_ext_cache 'int (void)' static
| `-CompoundStmt 0x21d0185a3c8 <line:639:1, line:645:1>
|   |-DeclStmt 0x21d01859020 <line:640:24, .//openssl//file_jk/before\test/testutil.h:47:55>
|   | `-VarDecl 0x21d01858ef0 <.//openssl//file_jk/before\test\sslapitest.c:640:24, .//openssl//file_jk/before\test/testutil.h:47:54> col:23 used fixture 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture' cinit
|   |   `-CallExpr 0x21d01858fe0 <.//openssl//file_jk/before\test\sslapitest.c:640:50, .//openssl//file_jk/before\test/testutil.h:47:54> 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture'
|   |     |-ImplicitCastExpr 0x21d01858fc8 <.//openssl//file_jk/before\test\sslapitest.c:640:50> 'SSL_SESSION_TEST_FIXTURE (*)(const char *const)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x21d01858f58 <col:50> 'SSL_SESSION_TEST_FIXTURE (const char *const)' Function 0x21d0184cfd0 'ssl_session_set_up' 'SSL_SESSION_TEST_FIXTURE (const char *const)'
|   |     `-ImplicitCastExpr 0x21d01859008 <.//openssl//file_jk/before\test/testutil.h:68:26> 'const char *' <ArrayToPointerDecay>
|   |       `-PredefinedExpr 0x21d01858fb0 <col:26> 'const char [33]' lvalue __func__
|   |         `-StringLiteral 0x21d01858f78 <col:26> 'const char [33]' lvalue "test_session_with_only_ext_cache"
|   |-DeclStmt 0x21d0185a130 <line:48:5, .//openssl//file_jk/before\test\sslapitest.c:640:69>
|   | `-VarDecl 0x21d0185a0a0 <.//openssl//file_jk/before\test/testutil.h:48:5, col:18> col:9 used result 'int' cinit
|   |   `-IntegerLiteral 0x21d0185a108 <col:18> 'int' 0
|   |-BinaryOperator 0x21d0185a1d8 <.//openssl//file_jk/before\test\sslapitest.c:642:5, col:29> 'int' '='
|   | |-MemberExpr 0x21d0185a180 <col:5, col:13> 'int' lvalue .use_int_cache 0x21d01854bd8
|   | | `-DeclRefExpr 0x21d0185a148 <col:5> 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture' lvalue Var 0x21d01858ef0 'fixture' 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture'
|   | `-IntegerLiteral 0x21d0185a1b0 <col:29> 'int' 0
|   |-BinaryOperator 0x21d0185a2c8 <.//openssl//file_jk/before\test/testutil.h:51:9, col:38> 'int' '='
|   | |-DeclRefExpr 0x21d0185a1f8 <col:9> 'int' lvalue Var 0x21d0185a0a0 'result' 'int'
|   | `-CallExpr 0x21d0185a288 <.//openssl//file_jk/before\test\sslapitest.c:644:18, .//openssl//file_jk/before\test/testutil.h:51:38> 'int'
|   |   |-ImplicitCastExpr 0x21d0185a270 <.//openssl//file_jk/before\test\sslapitest.c:644:18> 'int (*)(SSL_SESSION_TEST_FIXTURE)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x21d0185a230 <col:18> 'int (SSL_SESSION_TEST_FIXTURE)' Function 0x21d0184dcd0 'execute_test_session' 'int (SSL_SESSION_TEST_FIXTURE)'
|   |   `-ImplicitCastExpr 0x21d0185a2b0 <.//openssl//file_jk/before\test/testutil.h:51:31> 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture' <LValueToRValue>
|   |     `-DeclRefExpr 0x21d0185a250 <col:31> 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture' lvalue Var 0x21d01858ef0 'fixture' 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture'
|   |-CallExpr 0x21d0185a340 <.//openssl//file_jk/before\test\sslapitest.c:644:40, .//openssl//file_jk/before\test/testutil.h:52:26> 'void'
|   | |-ImplicitCastExpr 0x21d0185a328 <.//openssl//file_jk/before\test\sslapitest.c:644:40> 'void (*)(SSL_SESSION_TEST_FIXTURE)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x21d0185a2e8 <col:40> 'void (SSL_SESSION_TEST_FIXTURE)' Function 0x21d0184d5c8 'ssl_session_tear_down' 'void (SSL_SESSION_TEST_FIXTURE)'
|   | `-ImplicitCastExpr 0x21d0185a368 <.//openssl//file_jk/before\test/testutil.h:52:19> 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture' <LValueToRValue>
|   |   `-DeclRefExpr 0x21d0185a308 <col:19> 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture' lvalue Var 0x21d01858ef0 'fixture' 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture'
|   `-ReturnStmt 0x21d0185a3b8 <line:53:9, col:16>
|     `-ImplicitCastExpr 0x21d0185a3a0 <col:16> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x21d0185a380 <col:16> 'int' lvalue Var 0x21d0185a0a0 'result' 'int'
|-FunctionDecl 0x21d0185a4a8 <.//openssl//file_jk/before\test\sslapitest.c:647:1, line:652:1> line:647:12 used test_session_with_both_cache 'int (void)' static
| `-CompoundStmt 0x21d0185a9e0 <line:648:1, line:652:1>
|   |-DeclStmt 0x21d0185a720 <line:649:24, .//openssl//file_jk/before\test/testutil.h:47:55>
|   | `-VarDecl 0x21d0185a570 <.//openssl//file_jk/before\test\sslapitest.c:649:24, .//openssl//file_jk/before\test/testutil.h:47:54> col:23 used fixture 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture' cinit
|   |   `-CallExpr 0x21d0185a6e0 <.//openssl//file_jk/before\test\sslapitest.c:649:50, .//openssl//file_jk/before\test/testutil.h:47:54> 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture'
|   |     |-ImplicitCastExpr 0x21d0185a6c8 <.//openssl//file_jk/before\test\sslapitest.c:649:50> 'SSL_SESSION_TEST_FIXTURE (*)(const char *const)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x21d0185a5d8 <col:50> 'SSL_SESSION_TEST_FIXTURE (const char *const)' Function 0x21d0184cfd0 'ssl_session_set_up' 'SSL_SESSION_TEST_FIXTURE (const char *const)'
|   |     `-ImplicitCastExpr 0x21d0185a708 <.//openssl//file_jk/before\test/testutil.h:68:26> 'const char *' <ArrayToPointerDecay>
|   |       `-PredefinedExpr 0x21d0185a6b0 <col:26> 'const char [29]' lvalue __func__
|   |         `-StringLiteral 0x21d0185a678 <col:26> 'const char [29]' lvalue "test_session_with_both_cache"
|   |-DeclStmt 0x21d0185a7e0 <line:48:5, .//openssl//file_jk/before\test\sslapitest.c:649:69>
|   | `-VarDecl 0x21d0185a750 <.//openssl//file_jk/before\test/testutil.h:48:5, col:18> col:9 used result 'int' cinit
|   |   `-IntegerLiteral 0x21d0185a7b8 <col:18> 'int' 0
|   |-BinaryOperator 0x21d0185a8e0 <line:51:9, col:38> 'int' '='
|   | |-DeclRefExpr 0x21d0185a7f8 <col:9> 'int' lvalue Var 0x21d0185a750 'result' 'int'
|   | `-CallExpr 0x21d0185a8a0 <.//openssl//file_jk/before\test\sslapitest.c:651:18, .//openssl//file_jk/before\test/testutil.h:51:38> 'int'
|   |   |-ImplicitCastExpr 0x21d0185a888 <.//openssl//file_jk/before\test\sslapitest.c:651:18> 'int (*)(SSL_SESSION_TEST_FIXTURE)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x21d0185a830 <col:18> 'int (SSL_SESSION_TEST_FIXTURE)' Function 0x21d0184dcd0 'execute_test_session' 'int (SSL_SESSION_TEST_FIXTURE)'
|   |   `-ImplicitCastExpr 0x21d0185a8c8 <.//openssl//file_jk/before\test/testutil.h:51:31> 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture' <LValueToRValue>
|   |     `-DeclRefExpr 0x21d0185a850 <col:31> 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture' lvalue Var 0x21d0185a570 'fixture' 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture'
|   |-CallExpr 0x21d0185a958 <.//openssl//file_jk/before\test\sslapitest.c:651:40, .//openssl//file_jk/before\test/testutil.h:52:26> 'void'
|   | |-ImplicitCastExpr 0x21d0185a940 <.//openssl//file_jk/before\test\sslapitest.c:651:40> 'void (*)(SSL_SESSION_TEST_FIXTURE)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x21d0185a900 <col:40> 'void (SSL_SESSION_TEST_FIXTURE)' Function 0x21d0184d5c8 'ssl_session_tear_down' 'void (SSL_SESSION_TEST_FIXTURE)'
|   | `-ImplicitCastExpr 0x21d0185a980 <.//openssl//file_jk/before\test/testutil.h:52:19> 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture' <LValueToRValue>
|   |   `-DeclRefExpr 0x21d0185a920 <col:19> 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture' lvalue Var 0x21d0185a570 'fixture' 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture'
|   `-ReturnStmt 0x21d0185a9d0 <line:53:9, col:16>
|     `-ImplicitCastExpr 0x21d0185a9b8 <col:16> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x21d0185a998 <col:16> 'int' lvalue Var 0x21d0185a750 'result' 'int'
|-FunctionDecl 0x21d0185aca8 <.//openssl//file_jk/before\test\sslapitest.c:660:1, line:673:1> line:660:13 invalid setupbio 'void (int **, int *, int *, int)' static
| |-ParmVarDecl 0x21d0185aa38 <col:22, col:28> col:28 invalid res 'int **'
| |-ParmVarDecl 0x21d0185aab8 <col:33, col:38> col:38 invalid bio1 'int *'
| |-ParmVarDecl 0x21d0185ab38 <col:44, col:49> col:49 invalid bio2 'int *'
| |-ParmVarDecl 0x21d0185abb8 <col:55, col:59> col:59 used type 'int'
| `-CompoundStmt 0x21d0185b020 <line:661:1, line:673:1>
|   `-SwitchStmt 0x21d0185add0 <line:662:5, line:672:5>
|     |-ImplicitCastExpr 0x21d0185adb8 <line:662:13> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x21d0185ad80 <col:13> 'int' lvalue ParmVar 0x21d0185abb8 'type' 'int'
|     `-CompoundStmt 0x21d0185afe0 <col:19, line:672:5>
|       |-CaseStmt 0x21d0185ae30 <line:663:5, <invalid sloc>>
|       | |-ConstantExpr 0x21d0185ae18 <line:654:21> 'int'
|       | | `-IntegerLiteral 0x21d0185adf0 <col:21> 'int' 0
|       | `-NullStmt 0x21d0185aee0 <<invalid sloc>>
|       |-BreakStmt 0x21d0185aee8 <line:665:9>
|       |-CaseStmt 0x21d0185af30 <line:666:5, <invalid sloc>>
|       | |-ConstantExpr 0x21d0185af18 <line:655:21> 'int'
|       | | `-IntegerLiteral 0x21d0185aef0 <col:21> 'int' 1
|       | `-NullStmt 0x21d0185af58 <<invalid sloc>>
|       |-BreakStmt 0x21d0185af60 <line:668:9>
|       |-CaseStmt 0x21d0185afa8 <line:669:5, <invalid sloc>>
|       | |-ConstantExpr 0x21d0185af90 <line:656:21> 'int'
|       | | `-IntegerLiteral 0x21d0185af68 <col:21> 'int' 2
|       | `-NullStmt 0x21d0185afd0 <<invalid sloc>>
|       `-BreakStmt 0x21d0185afd8 <line:671:9>
|-FunctionDecl 0x21d0185e190 <line:675:1, line:767:1> line:675:12 used test_ssl_set_bio 'int (int)' static
| |-ParmVarDecl 0x21d0185e0e0 <col:29, col:33> col:33 used idx 'int'
| `-CompoundStmt 0x21d01862810 <line:676:1, line:767:1>
|   |-DeclStmt 0x21d0185eac8 <line:682:5, col:45>
|   | |-VarDecl 0x21d0185e8b8 <col:5, col:9> col:9 used initrbio 'int'
|   | |-VarDecl 0x21d0185e938 <col:5, col:19> col:19 used initwbio 'int'
|   | |-VarDecl 0x21d0185e9b8 <col:5, col:29> col:29 used newrbio 'int'
|   | `-VarDecl 0x21d0185ea38 <col:5, col:38> col:38 used newwbio 'int'
|   |-DeclStmt 0x21d0185eb88 <line:683:5, col:23>
|   | `-VarDecl 0x21d0185eaf8 <col:5, col:22> col:9 used testresult 'int' cinit
|   |   `-IntegerLiteral 0x21d0185eb60 <col:22> 'int' 0
|   |-IfStmt 0x21d0185eda8 <line:685:5, line:688:5>
|   | |-OpaqueValueExpr 0x21d0185ed90 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x21d0185ed70 <line:685:22, line:688:5>
|   |   |-CallExpr 0x21d0185ecb0 <line:686:9, col:46> 'int'
|   |   | |-ImplicitCastExpr 0x21d0185ec98 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x21d0185ec28 <col:9> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x21d0185ecf0 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x21d0185ecd8 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x21d0185ec48 <col:16> 'char [28]' lvalue "Failed to allocate SSL_CTX\n"
|   |   `-GotoStmt 0x21d0185ed58 <line:687:9, col:14> 'end' 0x21d0185ed08
|   |-IfStmt 0x21d0185ef98 <line:691:5, line:694:5>
|   | |-OpaqueValueExpr 0x21d0185ef80 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x21d0185ef60 <line:691:22, line:694:5>
|   |   |-CallExpr 0x21d0185eef0 <line:692:9, col:49> 'int'
|   |   | |-ImplicitCastExpr 0x21d0185eed8 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x21d0185ee68 <col:9> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x21d0185ef30 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x21d0185ef18 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x21d0185ee88 <col:16> 'char [31]' lvalue "Failed to allocate SSL object\n"
|   |   `-GotoStmt 0x21d0185ef48 <line:693:9, col:14> 'end' 0x21d0185ed08
|   |-BinaryOperator 0x21d0185f068 <line:696:5, col:22> 'int' '='
|   | |-DeclRefExpr 0x21d0185efb0 <col:5> 'int' lvalue Var 0x21d0185e8b8 'initrbio' 'int'
|   | `-BinaryOperator 0x21d0185f048 <col:16, col:22> 'int' '%'
|   |   |-ImplicitCastExpr 0x21d0185f030 <col:16> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x21d0185efe8 <col:16> 'int' lvalue ParmVar 0x21d0185e0e0 'idx' 'int'
|   |   `-IntegerLiteral 0x21d0185f008 <col:22> 'int' 3
|   |-CompoundAssignOperator 0x21d0185d0d0 <line:697:5, col:12> 'int' '/=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-DeclRefExpr 0x21d0185f088 <col:5> 'int' lvalue ParmVar 0x21d0185e0e0 'idx' 'int'
|   | `-IntegerLiteral 0x21d0185f0a8 <col:12> 'int' 3
|   |-BinaryOperator 0x21d0185d1b8 <line:698:5, col:22> 'int' '='
|   | |-DeclRefExpr 0x21d0185d100 <col:5> 'int' lvalue Var 0x21d0185e938 'initwbio' 'int'
|   | `-BinaryOperator 0x21d0185d198 <col:16, col:22> 'int' '%'
|   |   |-ImplicitCastExpr 0x21d0185d180 <col:16> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x21d0185d138 <col:16> 'int' lvalue ParmVar 0x21d0185e0e0 'idx' 'int'
|   |   `-IntegerLiteral 0x21d0185d158 <col:22> 'int' 3
|   |-CompoundAssignOperator 0x21d0185d220 <line:699:5, col:12> 'int' '/=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-DeclRefExpr 0x21d0185d1d8 <col:5> 'int' lvalue ParmVar 0x21d0185e0e0 'idx' 'int'
|   | `-IntegerLiteral 0x21d0185d1f8 <col:12> 'int' 3
|   |-BinaryOperator 0x21d0185d308 <line:700:5, col:21> 'int' '='
|   | |-DeclRefExpr 0x21d0185d250 <col:5> 'int' lvalue Var 0x21d0185e9b8 'newrbio' 'int'
|   | `-BinaryOperator 0x21d0185d2e8 <col:15, col:21> 'int' '%'
|   |   |-ImplicitCastExpr 0x21d0185d2d0 <col:15> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x21d0185d288 <col:15> 'int' lvalue ParmVar 0x21d0185e0e0 'idx' 'int'
|   |   `-IntegerLiteral 0x21d0185d2a8 <col:21> 'int' 3
|   |-CompoundAssignOperator 0x21d0185d370 <line:701:5, col:12> 'int' '/=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-DeclRefExpr 0x21d0185d328 <col:5> 'int' lvalue ParmVar 0x21d0185e0e0 'idx' 'int'
|   | `-IntegerLiteral 0x21d0185d348 <col:12> 'int' 3
|   |-BinaryOperator 0x21d0185d410 <line:702:5, col:15> 'int' '='
|   | |-DeclRefExpr 0x21d0185d3a0 <col:5> 'int' lvalue Var 0x21d0185ea38 'newwbio' 'int'
|   | `-ImplicitCastExpr 0x21d0185d3f8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x21d0185d3d8 <col:15> 'int' lvalue ParmVar 0x21d0185e0e0 'idx' 'int'
|   |-CallExpr 0x21d0185d4e8 <line:703:5, col:32> 'int'
|   | |-ImplicitCastExpr 0x21d0185d4d0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x21d0185d430 <col:5> 'int ()' Function 0x21d018a52e8 'OPENSSL_assert' 'int ()'
|   | `-BinaryOperator 0x21d0185d4b0 <col:20, col:31> 'int' '<='
|   |   |-ImplicitCastExpr 0x21d0185d498 <col:20> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x21d0185d450 <col:20> 'int' lvalue Var 0x21d0185ea38 'newwbio' 'int'
|   |   `-IntegerLiteral 0x21d0185d470 <col:31> 'int' 2
|   |-IfStmt 0x21d0185dbe8 <line:705:5, line:712:5>
|   | |-BinaryOperator 0x21d0185d750 <line:705:9, line:655:21> 'int' '||'
|   | | |-BinaryOperator 0x21d0185d6b0 <line:705:9, line:655:21> 'int' '||'
|   | | | |-BinaryOperator 0x21d0185d610 <line:705:9, line:655:21> 'int' '||'
|   | | | | |-BinaryOperator 0x21d0185d570 <line:705:9, line:655:21> 'int' '=='
|   | | | | | |-ImplicitCastExpr 0x21d0185d558 <line:705:9> 'int' <LValueToRValue>
|   | | | | | | `-DeclRefExpr 0x21d0185d510 <col:9> 'int' lvalue Var 0x21d0185e8b8 'initrbio' 'int'
|   | | | | | `-IntegerLiteral 0x21d0185d530 <line:655:21> 'int' 1
|   | | | | `-BinaryOperator 0x21d0185d5f0 <line:705:34, line:655:21> 'int' '=='
|   | | | |   |-ImplicitCastExpr 0x21d0185d5d8 <line:705:34> 'int' <LValueToRValue>
|   | | | |   | `-DeclRefExpr 0x21d0185d590 <col:34> 'int' lvalue Var 0x21d0185e938 'initwbio' 'int'
|   | | | |   `-IntegerLiteral 0x21d0185d5b0 <line:655:21> 'int' 1
|   | | | `-BinaryOperator 0x21d0185d690 <line:705:59, line:655:21> 'int' '=='
|   | | |   |-ImplicitCastExpr 0x21d0185d678 <line:705:59> 'int' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x21d0185d630 <col:59> 'int' lvalue Var 0x21d0185e9b8 'newrbio' 'int'
|   | | |   `-IntegerLiteral 0x21d0185d650 <line:655:21> 'int' 1
|   | | `-BinaryOperator 0x21d0185d730 <line:706:16, line:655:21> 'int' '=='
|   | |   |-ImplicitCastExpr 0x21d0185d718 <line:706:16> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x21d0185d6d0 <col:16> 'int' lvalue Var 0x21d0185ea38 'newwbio' 'int'
|   | |   `-IntegerLiteral 0x21d0185d6f0 <line:655:21> 'int' 1
|   | `-CompoundStmt 0x21d0185dbd0 <line:706:38, line:712:5>
|   |   `-IfStmt 0x21d0185dbb8 <line:708:9, line:711:9>
|   |     |-OpaqueValueExpr 0x21d0185dba0 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x21d0185db80 <line:708:27, line:711:9>
|   |       |-CallExpr 0x21d0185db10 <line:709:13, col:47> 'int'
|   |       | |-ImplicitCastExpr 0x21d0185daf8 <col:13> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x21d0185da90 <col:13> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |       | `-ImplicitCastExpr 0x21d0185db50 <col:20> 'const char *' <NoOp>
|   |       |   `-ImplicitCastExpr 0x21d0185db38 <col:20> 'char *' <ArrayToPointerDecay>
|   |       |     `-StringLiteral 0x21d0185dab0 <col:20> 'char [25]' lvalue "Failed to allocate bio1\n"
|   |       `-GotoStmt 0x21d0185db68 <line:710:13, col:18> 'end' 0x21d0185ed08
|   |-IfStmt 0x21d01862150 <line:714:5, line:721:5>
|   | |-BinaryOperator 0x21d0185de40 <line:714:9, line:656:21> 'int' '||'
|   | | |-BinaryOperator 0x21d0185dda0 <line:714:9, line:656:21> 'int' '||'
|   | | | |-BinaryOperator 0x21d0185dd00 <line:714:9, line:656:21> 'int' '||'
|   | | | | |-BinaryOperator 0x21d0185dc60 <line:714:9, line:656:21> 'int' '=='
|   | | | | | |-ImplicitCastExpr 0x21d0185dc48 <line:714:9> 'int' <LValueToRValue>
|   | | | | | | `-DeclRefExpr 0x21d0185dc00 <col:9> 'int' lvalue Var 0x21d0185e8b8 'initrbio' 'int'
|   | | | | | `-IntegerLiteral 0x21d0185dc20 <line:656:21> 'int' 2
|   | | | | `-BinaryOperator 0x21d0185dce0 <line:714:34, line:656:21> 'int' '=='
|   | | | |   |-ImplicitCastExpr 0x21d0185dcc8 <line:714:34> 'int' <LValueToRValue>
|   | | | |   | `-DeclRefExpr 0x21d0185dc80 <col:34> 'int' lvalue Var 0x21d0185e938 'initwbio' 'int'
|   | | | |   `-IntegerLiteral 0x21d0185dca0 <line:656:21> 'int' 2
|   | | | `-BinaryOperator 0x21d0185dd80 <line:714:59, line:656:21> 'int' '=='
|   | | |   |-ImplicitCastExpr 0x21d0185dd68 <line:714:59> 'int' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x21d0185dd20 <col:59> 'int' lvalue Var 0x21d0185e9b8 'newrbio' 'int'
|   | | |   `-IntegerLiteral 0x21d0185dd40 <line:656:21> 'int' 2
|   | | `-BinaryOperator 0x21d0185de20 <line:715:16, line:656:21> 'int' '=='
|   | |   |-ImplicitCastExpr 0x21d0185de08 <line:715:16> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x21d0185ddc0 <col:16> 'int' lvalue Var 0x21d0185ea38 'newwbio' 'int'
|   | |   `-IntegerLiteral 0x21d0185dde0 <line:656:21> 'int' 2
|   | `-CompoundStmt 0x21d01862138 <line:715:38, line:721:5>
|   |   `-IfStmt 0x21d01862120 <line:717:9, line:720:9>
|   |     |-OpaqueValueExpr 0x21d0185e0b0 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x21d0185e090 <line:717:27, line:720:9>
|   |       |-CallExpr 0x21d0185e020 <line:718:13, col:47> 'int'
|   |       | |-ImplicitCastExpr 0x21d0185e008 <col:13> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x21d0185dfa0 <col:13> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |       | `-ImplicitCastExpr 0x21d0185e060 <col:20> 'const char *' <NoOp>
|   |       |   `-ImplicitCastExpr 0x21d0185e048 <col:20> 'char *' <ArrayToPointerDecay>
|   |       |     `-StringLiteral 0x21d0185dfc0 <col:20> 'char [25]' lvalue "Failed to allocate bio2\n"
|   |       `-GotoStmt 0x21d0185e078 <line:719:13, col:18> 'end' 0x21d0185ed08
|   |-BinaryOperator 0x21d01862708 <line:752:5, col:18> 'int' '='
|   | |-DeclRefExpr 0x21d018626a8 <col:5> 'int' lvalue Var 0x21d0185eaf8 'testresult' 'int'
|   | `-IntegerLiteral 0x21d018626e0 <col:18> 'int' 1
|   |-LabelStmt 0x21d01862750 <line:754:2, col:5> 'end'
|   | `-NullStmt 0x21d01862748 <col:5>
|   `-ReturnStmt 0x21d01862800 <line:766:5, col:12>
|     `-ImplicitCastExpr 0x21d018627e8 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x21d018627c8 <col:12> 'int' lvalue Var 0x21d0185eaf8 'testresult' 'int'
|-RecordDecl 0x21d018628a8 <line:769:9, line:773:1> line:769:16 struct ssl_bio_test_fixture definition
| |-FieldDecl 0x21d01862978 <line:770:5, col:17> col:17 referenced test_case_name 'const char *'
| |-FieldDecl 0x21d018629e8 <line:771:5, col:9> col:9 referenced pop_ssl 'int'
| |-EnumDecl 0x21d01862a40 <line:772:5, col:52> col:5
| | |-EnumConstantDecl 0x21d01862b20 <col:12> col:12 referenced NO_BIO_CHANGE 'int'
| | |-EnumConstantDecl 0x21d01862b78 <col:27> col:27 referenced CHANGE_RBIO 'int'
| | `-EnumConstantDecl 0x21d01862bd0 <col:40> col:40 referenced CHANGE_WBIO 'int'
| `-FieldDecl 0x21d01862c88 <col:5, col:54> col:54 referenced change_bio 'enum (anonymous enum at .//openssl//file_jk/before\test\sslapitest.c:772:5)':'enum ssl_bio_test_fixture::(anonymous at .//openssl//file_jk/before\test\sslapitest.c:772:5)'
|-TypedefDecl 0x21d01862d38 <line:769:1, line:773:3> col:3 referenced SSL_BIO_TEST_FIXTURE 'struct ssl_bio_test_fixture':'struct ssl_bio_test_fixture'
| `-ElaboratedType 0x21d01862ce0 'struct ssl_bio_test_fixture' sugar
|   `-RecordType 0x21d01862940 'struct ssl_bio_test_fixture'
|     `-Record 0x21d018628a8 'ssl_bio_test_fixture'
|-FunctionDecl 0x21d01862ef8 <line:775:1, line:784:1> line:775:29 used ssl_bio_set_up 'SSL_BIO_TEST_FIXTURE (const char *const)' static
| |-ParmVarDecl 0x21d01862de8 <col:44, col:62> col:62 used test_case_name 'const char *const'
| `-CompoundStmt 0x21d01863320 <line:776:1, line:784:1>
|   |-DeclStmt 0x21d01863030 <line:777:5, col:33>
|   | `-VarDecl 0x21d01862fc8 <col:5, col:26> col:26 used fixture 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture' nrvo
|   |-BinaryOperator 0x21d018630e8 <line:779:5, col:30> 'const char *' '='
|   | |-MemberExpr 0x21d01863080 <col:5, col:13> 'const char *' lvalue .test_case_name 0x21d01862978
|   | | `-DeclRefExpr 0x21d01863048 <col:5> 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture' lvalue Var 0x21d01862fc8 'fixture' 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture'
|   | `-ImplicitCastExpr 0x21d018630d0 <col:30> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x21d018630b0 <col:30> 'const char *const' lvalue ParmVar 0x21d01862de8 'test_case_name' 'const char *const'
|   |-BinaryOperator 0x21d018631a8 <line:780:5, col:23> 'int' '='
|   | |-MemberExpr 0x21d01863150 <col:5, col:13> 'int' lvalue .pop_ssl 0x21d018629e8
|   | | `-DeclRefExpr 0x21d01863130 <col:5> 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture' lvalue Var 0x21d01862fc8 'fixture' 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture'
|   | `-IntegerLiteral 0x21d01863180 <col:23> 'int' 0
|   |-BinaryOperator 0x21d018632b0 <line:781:5, col:26> 'enum (anonymous enum at .//openssl//file_jk/before\test\sslapitest.c:772:5)':'enum ssl_bio_test_fixture::(anonymous at .//openssl//file_jk/before\test\sslapitest.c:772:5)' '='
|   | |-MemberExpr 0x21d01863248 <col:5, col:13> 'enum (anonymous enum at .//openssl//file_jk/before\test\sslapitest.c:772:5)':'enum ssl_bio_test_fixture::(anonymous at .//openssl//file_jk/before\test\sslapitest.c:772:5)' lvalue .change_bio 0x21d01862c88
|   | | `-DeclRefExpr 0x21d01863228 <col:5> 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture' lvalue Var 0x21d01862fc8 'fixture' 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture'
|   | `-ImplicitCastExpr 0x21d01863298 <col:26> 'enum (anonymous enum at .//openssl//file_jk/before\test\sslapitest.c:772:5)':'enum ssl_bio_test_fixture::(anonymous at .//openssl//file_jk/before\test\sslapitest.c:772:5)' <IntegralCast>
|   |   `-DeclRefExpr 0x21d01863278 <col:26> 'int' EnumConstant 0x21d01862b20 'NO_BIO_CHANGE' 'int'
|   `-ReturnStmt 0x21d01863308 <line:783:5, col:12>
|     `-ImplicitCastExpr 0x21d018632f0 <col:12> 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture' <LValueToRValue>
|       `-DeclRefExpr 0x21d018632d0 <col:12> 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture' lvalue Var 0x21d01862fc8 'fixture' 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture'
|-FunctionDecl 0x21d01863478 <line:786:1, line:788:1> line:786:13 used ssl_bio_tear_down 'void (SSL_BIO_TEST_FIXTURE)' static
| |-ParmVarDecl 0x21d01863368 <col:31, col:52> col:52 fixture 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture'
| `-CompoundStmt 0x21d01863538 <line:787:1, line:788:1>
|-FunctionDecl 0x21d01863670 <line:790:1, line:851:1> line:790:12 used execute_test_ssl_bio 'int (SSL_BIO_TEST_FIXTURE)' static
| |-ParmVarDecl 0x21d01863558 <col:33, col:54> col:54 used fix 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture'
| `-CompoundStmt 0x21d0185ff70 <line:791:1, line:851:1>
|   |-DeclStmt 0x21d01863ab0 <line:795:5, col:23>
|   | `-VarDecl 0x21d01863a20 <col:5, col:22> col:9 used testresult 'int' cinit
|   |   `-IntegerLiteral 0x21d01863a88 <col:22> 'int' 0
|   |-IfStmt 0x21d01863ca0 <line:797:5, line:800:5>
|   | |-OpaqueValueExpr 0x21d01863c88 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x21d01863c68 <line:797:22, line:800:5>
|   |   |-CallExpr 0x21d01863bd8 <line:798:9, col:46> 'int'
|   |   | |-ImplicitCastExpr 0x21d01863bc0 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x21d01863b50 <col:9> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x21d01863c18 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x21d01863c00 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x21d01863b70 <col:16> 'char [28]' lvalue "Failed to allocate SSL_CTX\n"
|   |   `-ReturnStmt 0x21d01863c58 <line:799:9, col:16>
|   |     `-IntegerLiteral 0x21d01863c30 <col:16> 'int' 0
|   |-IfStmt 0x21d01863ee0 <line:803:5, line:806:5>
|   | |-OpaqueValueExpr 0x21d01863ec8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x21d01863ea8 <line:803:22, line:806:5>
|   |   |-CallExpr 0x21d01863de8 <line:804:9, col:49> 'int'
|   |   | |-ImplicitCastExpr 0x21d01863dd0 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x21d01863d60 <col:9> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x21d01863e28 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x21d01863e10 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x21d01863d80 <col:16> 'char [31]' lvalue "Failed to allocate SSL object\n"
|   |   `-GotoStmt 0x21d01863e90 <line:805:9, col:14> 'end' 0x21d01863e40
|   |-IfStmt 0x21d0185f358 <line:811:5, line:814:5>
|   | |-OpaqueValueExpr 0x21d0185f340 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x21d0185f320 <line:811:44, line:814:5>
|   |   |-CallExpr 0x21d0185f2b0 <line:812:9, col:48> 'int'
|   |   | |-ImplicitCastExpr 0x21d0185f298 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x21d0185f228 <col:9> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x21d0185f2f0 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x21d0185f2d8 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x21d0185f248 <col:16> 'char [30]' lvalue "Malloc failure creating BIOs\n"
|   |   `-GotoStmt 0x21d0185f308 <line:813:9, col:14> 'end' 0x21d01863e40
|   |-IfStmt 0x21d0185fbd0 <line:825:5, line:835:5>
|   | |-BinaryOperator 0x21d0185f630 <line:825:9, col:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x21d0185f618 <col:9, col:13> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x21d0185f600 <col:9, col:13> 'enum (anonymous enum at .//openssl//file_jk/before\test\sslapitest.c:772:5)':'enum ssl_bio_test_fixture::(anonymous at .//openssl//file_jk/before\test\sslapitest.c:772:5)' <LValueToRValue>
|   | | |   `-MemberExpr 0x21d0185f5b0 <col:9, col:13> 'enum (anonymous enum at .//openssl//file_jk/before\test\sslapitest.c:772:5)':'enum ssl_bio_test_fixture::(anonymous at .//openssl//file_jk/before\test\sslapitest.c:772:5)' lvalue .change_bio 0x21d01862c88
|   | | |     `-DeclRefExpr 0x21d0185f590 <col:9> 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture' lvalue ParmVar 0x21d01863558 'fix' 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture'
|   | | `-DeclRefExpr 0x21d0185f5e0 <col:27> 'int' EnumConstant 0x21d01862b20 'NO_BIO_CHANGE' 'int'
|   | `-CompoundStmt 0x21d0185fbb8 <col:42, line:835:5>
|   |   `-IfStmt 0x21d0185f8c0 <line:827:9, line:830:9>
|   |     |-OpaqueValueExpr 0x21d0185f8a8 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x21d0185f888 <line:827:30, line:830:9>
|   |       |-CallExpr 0x21d0185f818 <line:828:13, col:55> 'int'
|   |       | |-ImplicitCastExpr 0x21d0185f800 <col:13> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x21d0185f790 <col:13> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |       | `-ImplicitCastExpr 0x21d0185f858 <col:20> 'const char *' <NoOp>
|   |       |   `-ImplicitCastExpr 0x21d0185f840 <col:20> 'char *' <ArrayToPointerDecay>
|   |       |     `-StringLiteral 0x21d0185f7b0 <col:20> 'char [33]' lvalue "Malloc failure creating membio2\n"
|   |       `-GotoStmt 0x21d0185f870 <line:829:13, col:18> 'end' 0x21d01863e40
|   |-BinaryOperator 0x21d0185fe68 <line:843:5, col:18> 'int' '='
|   | |-DeclRefExpr 0x21d0185fe08 <col:5> 'int' lvalue Var 0x21d01863a20 'testresult' 'int'
|   | `-IntegerLiteral 0x21d0185fe40 <col:18> 'int' 1
|   |-LabelStmt 0x21d0185feb0 <line:844:2, col:5> 'end'
|   | `-NullStmt 0x21d0185fea8 <col:5>
|   `-ReturnStmt 0x21d0185ff60 <line:850:5, col:12>
|     `-ImplicitCastExpr 0x21d0185ff48 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x21d0185ff28 <col:12> 'int' lvalue Var 0x21d01863a20 'testresult' 'int'
|-FunctionDecl 0x21d01864140 <line:853:1, line:858:1> line:853:12 used test_ssl_bio_pop_next_bio 'int (void)' static
| `-CompoundStmt 0x21d01864748 <line:854:1, line:858:1>
|   |-DeclStmt 0x21d018643d0 <line:855:24, .//openssl//file_jk/before\test/testutil.h:47:55>
|   | `-VarDecl 0x21d01864208 <.//openssl//file_jk/before\test\sslapitest.c:855:24, .//openssl//file_jk/before\test/testutil.h:47:54> col:23 used fixture 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture' cinit
|   |   `-CallExpr 0x21d01864390 <.//openssl//file_jk/before\test\sslapitest.c:855:46, .//openssl//file_jk/before\test/testutil.h:47:54> 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture'
|   |     |-ImplicitCastExpr 0x21d01864378 <.//openssl//file_jk/before\test\sslapitest.c:855:46> 'SSL_BIO_TEST_FIXTURE (*)(const char *const)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x21d01864270 <col:46> 'SSL_BIO_TEST_FIXTURE (const char *const)' Function 0x21d01862ef8 'ssl_bio_set_up' 'SSL_BIO_TEST_FIXTURE (const char *const)'
|   |     `-ImplicitCastExpr 0x21d018643b8 <.//openssl//file_jk/before\test/testutil.h:68:26> 'const char *' <ArrayToPointerDecay>
|   |       `-PredefinedExpr 0x21d01864300 <col:26> 'const char [26]' lvalue __func__
|   |         `-StringLiteral 0x21d018642c8 <col:26> 'const char [26]' lvalue "test_ssl_bio_pop_next_bio"
|   |-DeclStmt 0x21d01864490 <line:48:5, .//openssl//file_jk/before\test\sslapitest.c:855:61>
|   | `-VarDecl 0x21d01864400 <.//openssl//file_jk/before\test/testutil.h:48:5, col:18> col:9 used result 'int' cinit
|   |   `-IntegerLiteral 0x21d01864468 <col:18> 'int' 0
|   |-BinaryOperator 0x21d018645f0 <line:51:9, col:38> 'int' '='
|   | |-DeclRefExpr 0x21d018644a8 <col:9> 'int' lvalue Var 0x21d01864400 'result' 'int'
|   | `-CallExpr 0x21d018645b0 <.//openssl//file_jk/before\test\sslapitest.c:857:18, .//openssl//file_jk/before\test/testutil.h:51:38> 'int'
|   |   |-ImplicitCastExpr 0x21d01864598 <.//openssl//file_jk/before\test\sslapitest.c:857:18> 'int (*)(SSL_BIO_TEST_FIXTURE)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x21d018644e0 <col:18> 'int (SSL_BIO_TEST_FIXTURE)' Function 0x21d01863670 'execute_test_ssl_bio' 'int (SSL_BIO_TEST_FIXTURE)'
|   |   `-ImplicitCastExpr 0x21d018645d8 <.//openssl//file_jk/before\test/testutil.h:51:31> 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture' <LValueToRValue>
|   |     `-DeclRefExpr 0x21d01864500 <col:31> 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture' lvalue Var 0x21d01864208 'fixture' 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture'
|   |-CallExpr 0x21d018646c0 <.//openssl//file_jk/before\test\sslapitest.c:857:40, .//openssl//file_jk/before\test/testutil.h:52:26> 'void'
|   | |-ImplicitCastExpr 0x21d018646a8 <.//openssl//file_jk/before\test\sslapitest.c:857:40> 'void (*)(SSL_BIO_TEST_FIXTURE)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x21d01864610 <col:40> 'void (SSL_BIO_TEST_FIXTURE)' Function 0x21d01863478 'ssl_bio_tear_down' 'void (SSL_BIO_TEST_FIXTURE)'
|   | `-ImplicitCastExpr 0x21d018646e8 <.//openssl//file_jk/before\test/testutil.h:52:19> 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture' <LValueToRValue>
|   |   `-DeclRefExpr 0x21d01864630 <col:19> 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture' lvalue Var 0x21d01864208 'fixture' 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture'
|   `-ReturnStmt 0x21d01864738 <line:53:9, col:16>
|     `-ImplicitCastExpr 0x21d01864720 <col:16> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x21d01864700 <col:16> 'int' lvalue Var 0x21d01864400 'result' 'int'
|-FunctionDecl 0x21d01864820 <.//openssl//file_jk/before\test\sslapitest.c:860:1, line:867:1> line:860:12 used test_ssl_bio_pop_ssl_bio 'int (void)' static
| `-CompoundStmt 0x21d01864da0 <line:861:1, line:867:1>
|   |-DeclStmt 0x21d01864a48 <line:862:24, .//openssl//file_jk/before\test/testutil.h:47:55>
|   | `-VarDecl 0x21d018648e8 <.//openssl//file_jk/before\test\sslapitest.c:862:24, .//openssl//file_jk/before\test/testutil.h:47:54> col:23 used fixture 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture' cinit
|   |   `-CallExpr 0x21d01864a08 <.//openssl//file_jk/before\test\sslapitest.c:862:46, .//openssl//file_jk/before\test/testutil.h:47:54> 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture'
|   |     |-ImplicitCastExpr 0x21d018649f0 <.//openssl//file_jk/before\test\sslapitest.c:862:46> 'SSL_BIO_TEST_FIXTURE (*)(const char *const)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x21d01864950 <col:46> 'SSL_BIO_TEST_FIXTURE (const char *const)' Function 0x21d01862ef8 'ssl_bio_set_up' 'SSL_BIO_TEST_FIXTURE (const char *const)'
|   |     `-ImplicitCastExpr 0x21d01864a30 <.//openssl//file_jk/before\test/testutil.h:68:26> 'const char *' <ArrayToPointerDecay>
|   |       `-PredefinedExpr 0x21d018649d8 <col:26> 'const char [25]' lvalue __func__
|   |         `-StringLiteral 0x21d018649a8 <col:26> 'const char [25]' lvalue "test_ssl_bio_pop_ssl_bio"
|   |-DeclStmt 0x21d01864b08 <line:48:5, .//openssl//file_jk/before\test\sslapitest.c:862:61>
|   | `-VarDecl 0x21d01864a78 <.//openssl//file_jk/before\test/testutil.h:48:5, col:18> col:9 used result 'int' cinit
|   |   `-IntegerLiteral 0x21d01864ae0 <col:18> 'int' 0
|   |-BinaryOperator 0x21d01864bb0 <.//openssl//file_jk/before\test\sslapitest.c:864:5, col:23> 'int' '='
|   | |-MemberExpr 0x21d01864b58 <col:5, col:13> 'int' lvalue .pop_ssl 0x21d018629e8
|   | | `-DeclRefExpr 0x21d01864b20 <col:5> 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture' lvalue Var 0x21d018648e8 'fixture' 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture'
|   | `-IntegerLiteral 0x21d01864b88 <col:23> 'int' 1
|   |-BinaryOperator 0x21d01864ca0 <.//openssl//file_jk/before\test/testutil.h:51:9, col:38> 'int' '='
|   | |-DeclRefExpr 0x21d01864bd0 <col:9> 'int' lvalue Var 0x21d01864a78 'result' 'int'
|   | `-CallExpr 0x21d01864c60 <.//openssl//file_jk/before\test\sslapitest.c:866:18, .//openssl//file_jk/before\test/testutil.h:51:38> 'int'
|   |   |-ImplicitCastExpr 0x21d01864c48 <.//openssl//file_jk/before\test\sslapitest.c:866:18> 'int (*)(SSL_BIO_TEST_FIXTURE)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x21d01864c08 <col:18> 'int (SSL_BIO_TEST_FIXTURE)' Function 0x21d01863670 'execute_test_ssl_bio' 'int (SSL_BIO_TEST_FIXTURE)'
|   |   `-ImplicitCastExpr 0x21d01864c88 <.//openssl//file_jk/before\test/testutil.h:51:31> 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture' <LValueToRValue>
|   |     `-DeclRefExpr 0x21d01864c28 <col:31> 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture' lvalue Var 0x21d018648e8 'fixture' 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture'
|   |-CallExpr 0x21d01864d18 <.//openssl//file_jk/before\test\sslapitest.c:866:40, .//openssl//file_jk/before\test/testutil.h:52:26> 'void'
|   | |-ImplicitCastExpr 0x21d01864d00 <.//openssl//file_jk/before\test\sslapitest.c:866:40> 'void (*)(SSL_BIO_TEST_FIXTURE)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x21d01864cc0 <col:40> 'void (SSL_BIO_TEST_FIXTURE)' Function 0x21d01863478 'ssl_bio_tear_down' 'void (SSL_BIO_TEST_FIXTURE)'
|   | `-ImplicitCastExpr 0x21d01864d40 <.//openssl//file_jk/before\test/testutil.h:52:19> 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture' <LValueToRValue>
|   |   `-DeclRefExpr 0x21d01864ce0 <col:19> 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture' lvalue Var 0x21d018648e8 'fixture' 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture'
|   `-ReturnStmt 0x21d01864d90 <line:53:9, col:16>
|     `-ImplicitCastExpr 0x21d01864d78 <col:16> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x21d01864d58 <col:16> 'int' lvalue Var 0x21d01864a78 'result' 'int'
|-FunctionDecl 0x21d01864e80 <.//openssl//file_jk/before\test\sslapitest.c:869:1, line:876:1> line:869:12 used test_ssl_bio_change_rbio 'int (void)' static
| `-CompoundStmt 0x21d01866408 <line:870:1, line:876:1>
|   |-DeclStmt 0x21d01865070 <line:871:24, .//openssl//file_jk/before\test/testutil.h:47:55>
|   | `-VarDecl 0x21d01864f48 <.//openssl//file_jk/before\test\sslapitest.c:871:24, .//openssl//file_jk/before\test/testutil.h:47:54> col:23 used fixture 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture' cinit
|   |   `-CallExpr 0x21d01865030 <.//openssl//file_jk/before\test\sslapitest.c:871:46, .//openssl//file_jk/before\test/testutil.h:47:54> 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture'
|   |     |-ImplicitCastExpr 0x21d01865018 <.//openssl//file_jk/before\test\sslapitest.c:871:46> 'SSL_BIO_TEST_FIXTURE (*)(const char *const)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x21d01864fb0 <col:46> 'SSL_BIO_TEST_FIXTURE (const char *const)' Function 0x21d01862ef8 'ssl_bio_set_up' 'SSL_BIO_TEST_FIXTURE (const char *const)'
|   |     `-ImplicitCastExpr 0x21d01865058 <.//openssl//file_jk/before\test/testutil.h:68:26> 'const char *' <ArrayToPointerDecay>
|   |       `-PredefinedExpr 0x21d01865000 <col:26> 'const char [25]' lvalue __func__
|   |         `-StringLiteral 0x21d01864fd0 <col:26> 'const char [25]' lvalue "test_ssl_bio_change_rbio"
|   |-DeclStmt 0x21d01866160 <line:48:5, .//openssl//file_jk/before\test\sslapitest.c:871:61>
|   | `-VarDecl 0x21d018650a0 <.//openssl//file_jk/before\test/testutil.h:48:5, col:18> col:9 used result 'int' cinit
|   |   `-IntegerLiteral 0x21d01865108 <col:18> 'int' 0
|   |-BinaryOperator 0x21d01866218 <.//openssl//file_jk/before\test\sslapitest.c:873:5, col:26> 'enum (anonymous enum at .//openssl//file_jk/before\test\sslapitest.c:772:5)':'enum ssl_bio_test_fixture::(anonymous at .//openssl//file_jk/before\test\sslapitest.c:772:5)' '='
|   | |-MemberExpr 0x21d018661b0 <col:5, col:13> 'enum (anonymous enum at .//openssl//file_jk/before\test\sslapitest.c:772:5)':'enum ssl_bio_test_fixture::(anonymous at .//openssl//file_jk/before\test\sslapitest.c:772:5)' lvalue .change_bio 0x21d01862c88
|   | | `-DeclRefExpr 0x21d01866178 <col:5> 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture' lvalue Var 0x21d01864f48 'fixture' 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture'
|   | `-ImplicitCastExpr 0x21d01866200 <col:26> 'enum (anonymous enum at .//openssl//file_jk/before\test\sslapitest.c:772:5)':'enum ssl_bio_test_fixture::(anonymous at .//openssl//file_jk/before\test\sslapitest.c:772:5)' <IntegralCast>
|   |   `-DeclRefExpr 0x21d018661e0 <col:26> 'int' EnumConstant 0x21d01862b78 'CHANGE_RBIO' 'int'
|   |-BinaryOperator 0x21d01866308 <.//openssl//file_jk/before\test/testutil.h:51:9, col:38> 'int' '='
|   | |-DeclRefExpr 0x21d01866238 <col:9> 'int' lvalue Var 0x21d018650a0 'result' 'int'
|   | `-CallExpr 0x21d018662c8 <.//openssl//file_jk/before\test\sslapitest.c:875:18, .//openssl//file_jk/before\test/testutil.h:51:38> 'int'
|   |   |-ImplicitCastExpr 0x21d018662b0 <.//openssl//file_jk/before\test\sslapitest.c:875:18> 'int (*)(SSL_BIO_TEST_FIXTURE)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x21d01866270 <col:18> 'int (SSL_BIO_TEST_FIXTURE)' Function 0x21d01863670 'execute_test_ssl_bio' 'int (SSL_BIO_TEST_FIXTURE)'
|   |   `-ImplicitCastExpr 0x21d018662f0 <.//openssl//file_jk/before\test/testutil.h:51:31> 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture' <LValueToRValue>
|   |     `-DeclRefExpr 0x21d01866290 <col:31> 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture' lvalue Var 0x21d01864f48 'fixture' 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture'
|   |-CallExpr 0x21d01866380 <.//openssl//file_jk/before\test\sslapitest.c:875:40, .//openssl//file_jk/before\test/testutil.h:52:26> 'void'
|   | |-ImplicitCastExpr 0x21d01866368 <.//openssl//file_jk/before\test\sslapitest.c:875:40> 'void (*)(SSL_BIO_TEST_FIXTURE)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x21d01866328 <col:40> 'void (SSL_BIO_TEST_FIXTURE)' Function 0x21d01863478 'ssl_bio_tear_down' 'void (SSL_BIO_TEST_FIXTURE)'
|   | `-ImplicitCastExpr 0x21d018663a8 <.//openssl//file_jk/before\test/testutil.h:52:19> 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture' <LValueToRValue>
|   |   `-DeclRefExpr 0x21d01866348 <col:19> 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture' lvalue Var 0x21d01864f48 'fixture' 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture'
|   `-ReturnStmt 0x21d018663f8 <line:53:9, col:16>
|     `-ImplicitCastExpr 0x21d018663e0 <col:16> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x21d018663c0 <col:16> 'int' lvalue Var 0x21d018650a0 'result' 'int'
|-FunctionDecl 0x21d018664e8 <.//openssl//file_jk/before\test\sslapitest.c:878:1, line:885:1> line:878:12 used test_ssl_bio_change_wbio 'int (void)' static
| `-CompoundStmt 0x21d01866a40 <line:879:1, line:885:1>
|   |-DeclStmt 0x21d018666d8 <line:880:24, .//openssl//file_jk/before\test/testutil.h:47:55>
|   | `-VarDecl 0x21d018665b0 <.//openssl//file_jk/before\test\sslapitest.c:880:24, .//openssl//file_jk/before\test/testutil.h:47:54> col:23 used fixture 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture' cinit
|   |   `-CallExpr 0x21d01866698 <.//openssl//file_jk/before\test\sslapitest.c:880:46, .//openssl//file_jk/before\test/testutil.h:47:54> 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture'
|   |     |-ImplicitCastExpr 0x21d01866680 <.//openssl//file_jk/before\test\sslapitest.c:880:46> 'SSL_BIO_TEST_FIXTURE (*)(const char *const)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x21d01866618 <col:46> 'SSL_BIO_TEST_FIXTURE (const char *const)' Function 0x21d01862ef8 'ssl_bio_set_up' 'SSL_BIO_TEST_FIXTURE (const char *const)'
|   |     `-ImplicitCastExpr 0x21d018666c0 <.//openssl//file_jk/before\test/testutil.h:68:26> 'const char *' <ArrayToPointerDecay>
|   |       `-PredefinedExpr 0x21d01866668 <col:26> 'const char [25]' lvalue __func__
|   |         `-StringLiteral 0x21d01866638 <col:26> 'const char [25]' lvalue "test_ssl_bio_change_wbio"
|   |-DeclStmt 0x21d01866798 <line:48:5, .//openssl//file_jk/before\test\sslapitest.c:880:61>
|   | `-VarDecl 0x21d01866708 <.//openssl//file_jk/before\test/testutil.h:48:5, col:18> col:9 used result 'int' cinit
|   |   `-IntegerLiteral 0x21d01866770 <col:18> 'int' 0
|   |-BinaryOperator 0x21d01866850 <.//openssl//file_jk/before\test\sslapitest.c:882:5, col:26> 'enum (anonymous enum at .//openssl//file_jk/before\test\sslapitest.c:772:5)':'enum ssl_bio_test_fixture::(anonymous at .//openssl//file_jk/before\test\sslapitest.c:772:5)' '='
|   | |-MemberExpr 0x21d018667e8 <col:5, col:13> 'enum (anonymous enum at .//openssl//file_jk/before\test\sslapitest.c:772:5)':'enum ssl_bio_test_fixture::(anonymous at .//openssl//file_jk/before\test\sslapitest.c:772:5)' lvalue .change_bio 0x21d01862c88
|   | | `-DeclRefExpr 0x21d018667b0 <col:5> 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture' lvalue Var 0x21d018665b0 'fixture' 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture'
|   | `-ImplicitCastExpr 0x21d01866838 <col:26> 'enum (anonymous enum at .//openssl//file_jk/before\test\sslapitest.c:772:5)':'enum ssl_bio_test_fixture::(anonymous at .//openssl//file_jk/before\test\sslapitest.c:772:5)' <IntegralCast>
|   |   `-DeclRefExpr 0x21d01866818 <col:26> 'int' EnumConstant 0x21d01862bd0 'CHANGE_WBIO' 'int'
|   |-BinaryOperator 0x21d01866940 <.//openssl//file_jk/before\test/testutil.h:51:9, col:38> 'int' '='
|   | |-DeclRefExpr 0x21d01866870 <col:9> 'int' lvalue Var 0x21d01866708 'result' 'int'
|   | `-CallExpr 0x21d01866900 <.//openssl//file_jk/before\test\sslapitest.c:884:18, .//openssl//file_jk/before\test/testutil.h:51:38> 'int'
|   |   |-ImplicitCastExpr 0x21d018668e8 <.//openssl//file_jk/before\test\sslapitest.c:884:18> 'int (*)(SSL_BIO_TEST_FIXTURE)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x21d018668a8 <col:18> 'int (SSL_BIO_TEST_FIXTURE)' Function 0x21d01863670 'execute_test_ssl_bio' 'int (SSL_BIO_TEST_FIXTURE)'
|   |   `-ImplicitCastExpr 0x21d01866928 <.//openssl//file_jk/before\test/testutil.h:51:31> 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture' <LValueToRValue>
|   |     `-DeclRefExpr 0x21d018668c8 <col:31> 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture' lvalue Var 0x21d018665b0 'fixture' 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture'
|   |-CallExpr 0x21d018669b8 <.//openssl//file_jk/before\test\sslapitest.c:884:40, .//openssl//file_jk/before\test/testutil.h:52:26> 'void'
|   | |-ImplicitCastExpr 0x21d018669a0 <.//openssl//file_jk/before\test\sslapitest.c:884:40> 'void (*)(SSL_BIO_TEST_FIXTURE)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x21d01866960 <col:40> 'void (SSL_BIO_TEST_FIXTURE)' Function 0x21d01863478 'ssl_bio_tear_down' 'void (SSL_BIO_TEST_FIXTURE)'
|   | `-ImplicitCastExpr 0x21d018669e0 <.//openssl//file_jk/before\test/testutil.h:52:19> 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture' <LValueToRValue>
|   |   `-DeclRefExpr 0x21d01866980 <col:19> 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture' lvalue Var 0x21d018665b0 'fixture' 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture'
|   `-ReturnStmt 0x21d01866a30 <line:53:9, col:16>
|     `-ImplicitCastExpr 0x21d01866a18 <col:16> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x21d018669f8 <col:16> 'int' lvalue Var 0x21d01866708 'result' 'int'
|-RecordDecl 0x21d01866a80 <.//openssl//file_jk/before\test\sslapitest.c:887:9, line:898:1> line:887:9 struct definition
| |-FieldDecl 0x21d01866b58 <line:889:5, col:16> col:16 referenced list 'const int *'
| |-FieldDecl 0x21d01866bc0 <line:891:5, col:12> col:12 referenced listlen 'size_t':'unsigned long long'
| |-FieldDecl 0x21d01866c30 <line:893:5, col:17> col:17 referenced liststr 'const char *'
| |-FieldDecl 0x21d01866ca0 <line:895:5, col:9> col:9 referenced valid 'int'
| `-FieldDecl 0x21d01866d10 <line:897:5, col:9> col:9 referenced connsuccess 'int'
|-TypedefDecl 0x21d01866dc8 <line:887:1, line:898:3> col:3 referenced sigalgs_list 'struct sigalgs_list':'sigalgs_list'
| `-ElaboratedType 0x21d01866d70 'struct sigalgs_list' sugar
|   `-RecordType 0x21d01866b20 'sigalgs_list'
|     `-Record 0x21d01866a80 ''
|-VarDecl 0x21d01866ec0 <line:900:1, col:29> col:18 used validlist1 'const int []' static
|-VarDecl 0x21d01866f68 <line:901:1, col:29> col:18 used validlist2 'const int []' static
|-VarDecl 0x21d01867010 <line:902:1, col:29> col:18 used validlist3 'const int []' static
|-VarDecl 0x21d018670b8 <line:903:1, col:31> col:18 used invalidlist1 'const int []' static
|-VarDecl 0x21d01867170 <line:904:1, col:31> col:18 used invalidlist2 'const int []' static
|-VarDecl 0x21d01867218 <line:905:1, col:31> col:18 used invalidlist3 'const int []' static
|-VarDecl 0x21d018672c0 <line:906:1, col:31> col:18 used invalidlist4 'const int []' static
|-VarDecl 0x21d018673d8 <line:907:1, line:921:31> line:907:27 used testsigalgs 'const sigalgs_list [14]' static cinit
| `-InitListExpr 0x21d018610a8 <col:43, line:921:31> 'const sigalgs_list [14]'
|   |-InitListExpr 0x21d01868180 <line:908:5, col:52> 'sigalgs_list':'sigalgs_list'
|   | |-ImplicitCastExpr 0x21d018681e8 <col:6> 'const int *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x21d01867440 <col:6> 'const int []' lvalue Var 0x21d01866ec0 'validlist1' 'const int []'
|   | |-ImplicitCastExpr 0x21d01868200 <col:18, col:39> 'size_t':'unsigned long long' <IntegralCast>
|   | | `-CallExpr 0x21d01867598 <col:18, col:39> 'int'
|   | |   |-ImplicitCastExpr 0x21d01867580 <col:18> 'int (*)()' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x21d01867540 <col:18> 'int ()' Function 0x21d01867488 'OSSL_NELEM' 'int ()'
|   | |   `-ImplicitCastExpr 0x21d018675c0 <col:29> 'const int *' <ArrayToPointerDecay>
|   | |     `-DeclRefExpr 0x21d01867560 <col:29> 'const int []' lvalue Var 0x21d01866ec0 'validlist1' 'const int []'
|   | |-ImplicitCastExpr 0x21d01868218 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const char *' <NullToPointer>
|   | | `-ParenExpr 0x21d01867640 <col:17, col:27> 'void *'
|   | |   `-CStyleCastExpr 0x21d01867618 <col:18, col:26> 'void *' <NullToPointer>
|   | |     `-IntegerLiteral 0x21d018675d8 <col:26> 'int' 0
|   | |-IntegerLiteral 0x21d01867660 <.//openssl//file_jk/before\test\sslapitest.c:908:48> 'int' 1
|   | `-IntegerLiteral 0x21d01867688 <col:51> 'int' 1
|   |-InitListExpr 0x21d01868248 <line:909:5, col:52> 'sigalgs_list':'sigalgs_list'
|   | |-ImplicitCastExpr 0x21d018682b0 <col:6> 'const int *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x21d01867718 <col:6> 'const int []' lvalue Var 0x21d01866f68 'validlist2' 'const int []'
|   | |-ImplicitCastExpr 0x21d018682c8 <col:18, col:39> 'size_t':'unsigned long long' <IntegralCast>
|   | | `-CallExpr 0x21d01867790 <col:18, col:39> 'int'
|   | |   |-ImplicitCastExpr 0x21d01867778 <col:18> 'int (*)()' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x21d01867738 <col:18> 'int ()' Function 0x21d01867488 'OSSL_NELEM' 'int ()'
|   | |   `-ImplicitCastExpr 0x21d018677b8 <col:29> 'const int *' <ArrayToPointerDecay>
|   | |     `-DeclRefExpr 0x21d01867758 <col:29> 'const int []' lvalue Var 0x21d01866f68 'validlist2' 'const int []'
|   | |-ImplicitCastExpr 0x21d018682e0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const char *' <NullToPointer>
|   | | `-ParenExpr 0x21d01867838 <col:17, col:27> 'void *'
|   | |   `-CStyleCastExpr 0x21d01867810 <col:18, col:26> 'void *' <NullToPointer>
|   | |     `-IntegerLiteral 0x21d018677d0 <col:26> 'int' 0
|   | |-IntegerLiteral 0x21d01867858 <.//openssl//file_jk/before\test\sslapitest.c:909:48> 'int' 1
|   | `-IntegerLiteral 0x21d01867880 <col:51> 'int' 1
|   |-InitListExpr 0x21d01868318 <line:910:5, col:52> 'sigalgs_list':'sigalgs_list'
|   | |-ImplicitCastExpr 0x21d01868380 <col:6> 'const int *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x21d01867910 <col:6> 'const int []' lvalue Var 0x21d01867010 'validlist3' 'const int []'
|   | |-ImplicitCastExpr 0x21d01868398 <col:18, col:39> 'size_t':'unsigned long long' <IntegralCast>
|   | | `-CallExpr 0x21d01867988 <col:18, col:39> 'int'
|   | |   |-ImplicitCastExpr 0x21d01867970 <col:18> 'int (*)()' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x21d01867930 <col:18> 'int ()' Function 0x21d01867488 'OSSL_NELEM' 'int ()'
|   | |   `-ImplicitCastExpr 0x21d018679b0 <col:29> 'const int *' <ArrayToPointerDecay>
|   | |     `-DeclRefExpr 0x21d01867950 <col:29> 'const int []' lvalue Var 0x21d01867010 'validlist3' 'const int []'
|   | |-ImplicitCastExpr 0x21d018683b0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const char *' <NullToPointer>
|   | | `-ParenExpr 0x21d01867a30 <col:17, col:27> 'void *'
|   | |   `-CStyleCastExpr 0x21d01867a08 <col:18, col:26> 'void *' <NullToPointer>
|   | |     `-IntegerLiteral 0x21d018679c8 <col:26> 'int' 0
|   | |-IntegerLiteral 0x21d01867a50 <.//openssl//file_jk/before\test\sslapitest.c:910:48> 'int' 1
|   | `-IntegerLiteral 0x21d01867a78 <col:51> 'int' 0
|   |-InitListExpr 0x21d018683f8 <line:911:5, col:33> 'sigalgs_list':'sigalgs_list'
|   | |-ImplicitCastExpr 0x21d01868460 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const int *' <NullToPointer>
|   | | `-ParenExpr 0x21d01867b70 <col:17, col:27> 'void *'
|   | |   `-CStyleCastExpr 0x21d01867b48 <col:18, col:26> 'void *' <NullToPointer>
|   | |     `-IntegerLiteral 0x21d01867b08 <col:26> 'int' 0
|   | |-ImplicitCastExpr 0x21d01868478 <.//openssl//file_jk/before\test\sslapitest.c:911:12> 'size_t':'unsigned long long' <IntegralCast>
|   | | `-IntegerLiteral 0x21d01867b90 <col:12> 'int' 0
|   | |-ImplicitCastExpr 0x21d018684a8 <col:15> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x21d01868490 <col:15> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x21d01867bf8 <col:15> 'char [11]' lvalue "RSA+SHA256"
|   | |-IntegerLiteral 0x21d01867c20 <col:29> 'int' 1
|   | `-IntegerLiteral 0x21d01867c48 <col:32> 'int' 1
|   |-InitListExpr 0x21d018684d0 <line:912:5, col:46> 'sigalgs_list':'sigalgs_list'
|   | |-ImplicitCastExpr 0x21d01868538 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const int *' <NullToPointer>
|   | | `-ParenExpr 0x21d01867d40 <col:17, col:27> 'void *'
|   | |   `-CStyleCastExpr 0x21d01867d18 <col:18, col:26> 'void *' <NullToPointer>
|   | |     `-IntegerLiteral 0x21d01867cd8 <col:26> 'int' 0
|   | |-ImplicitCastExpr 0x21d01868550 <.//openssl//file_jk/before\test\sslapitest.c:912:12> 'size_t':'unsigned long long' <IntegralCast>
|   | | `-IntegerLiteral 0x21d01867d60 <col:12> 'int' 0
|   | |-ImplicitCastExpr 0x21d01868580 <col:15> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x21d01868568 <col:15> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x21d01867dc8 <col:15> 'char [24]' lvalue "RSA+SHA256:ECDSA+SHA512"
|   | |-IntegerLiteral 0x21d01867df8 <col:42> 'int' 1
|   | `-IntegerLiteral 0x21d01867e20 <col:45> 'int' 1
|   |-InitListExpr 0x21d018685e8 <line:913:5, col:35> 'sigalgs_list':'sigalgs_list'
|   | |-ImplicitCastExpr 0x21d01868650 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const int *' <NullToPointer>
|   | | `-ParenExpr 0x21d01867f18 <col:17, col:27> 'void *'
|   | |   `-CStyleCastExpr 0x21d01867ef0 <col:18, col:26> 'void *' <NullToPointer>
|   | |     `-IntegerLiteral 0x21d01867eb0 <col:26> 'int' 0
|   | |-ImplicitCastExpr 0x21d01868668 <.//openssl//file_jk/before\test\sslapitest.c:913:12> 'size_t':'unsigned long long' <IntegralCast>
|   | | `-IntegerLiteral 0x21d01867f38 <col:12> 'int' 0
|   | |-ImplicitCastExpr 0x21d01868698 <col:15> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x21d01868680 <col:15> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x21d01867f98 <col:15> 'char [13]' lvalue "ECDSA+SHA512"
|   | |-IntegerLiteral 0x21d01867fc0 <col:31> 'int' 1
|   | `-IntegerLiteral 0x21d01867fe8 <col:34> 'int' 0
|   |-InitListExpr 0x21d018686c0 <line:914:5, col:56> 'sigalgs_list':'sigalgs_list'
|   | |-ImplicitCastExpr 0x21d01868728 <col:6> 'const int *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x21d01868078 <col:6> 'const int []' lvalue Var 0x21d018670b8 'invalidlist1' 'const int []'
|   | |-ImplicitCastExpr 0x21d01868740 <col:20, col:43> 'size_t':'unsigned long long' <IntegralCast>
|   | | `-CallExpr 0x21d018680f0 <col:20, col:43> 'int'
|   | |   |-ImplicitCastExpr 0x21d018680d8 <col:20> 'int (*)()' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x21d01868098 <col:20> 'int ()' Function 0x21d01867488 'OSSL_NELEM' 'int ()'
|   | |   `-ImplicitCastExpr 0x21d01868118 <col:31> 'const int *' <ArrayToPointerDecay>
|   | |     `-DeclRefExpr 0x21d018680b8 <col:31> 'const int []' lvalue Var 0x21d018670b8 'invalidlist1' 'const int []'
|   | |-ImplicitCastExpr 0x21d01868758 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const char *' <NullToPointer>
|   | | `-ParenExpr 0x21d01860128 <col:17, col:27> 'void *'
|   | |   `-CStyleCastExpr 0x21d01860100 <col:18, col:26> 'void *' <NullToPointer>
|   | |     `-IntegerLiteral 0x21d01868130 <col:26> 'int' 0
|   | |-IntegerLiteral 0x21d01860148 <.//openssl//file_jk/before\test\sslapitest.c:914:52> 'int' 0
|   | `-IntegerLiteral 0x21d01860170 <col:55> 'int' 0
|   |-InitListExpr 0x21d01868780 <line:915:5, col:56> 'sigalgs_list':'sigalgs_list'
|   | |-ImplicitCastExpr 0x21d018687e8 <col:6> 'const int *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x21d01860200 <col:6> 'const int []' lvalue Var 0x21d01867170 'invalidlist2' 'const int []'
|   | |-ImplicitCastExpr 0x21d01868800 <col:20, col:43> 'size_t':'unsigned long long' <IntegralCast>
|   | | `-CallExpr 0x21d01860278 <col:20, col:43> 'int'
|   | |   |-ImplicitCastExpr 0x21d01860260 <col:20> 'int (*)()' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x21d01860220 <col:20> 'int ()' Function 0x21d01867488 'OSSL_NELEM' 'int ()'
|   | |   `-ImplicitCastExpr 0x21d018602a0 <col:31> 'const int *' <ArrayToPointerDecay>
|   | |     `-DeclRefExpr 0x21d01860240 <col:31> 'const int []' lvalue Var 0x21d01867170 'invalidlist2' 'const int []'
|   | |-ImplicitCastExpr 0x21d01868818 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const char *' <NullToPointer>
|   | | `-ParenExpr 0x21d01860320 <col:17, col:27> 'void *'
|   | |   `-CStyleCastExpr 0x21d018602f8 <col:18, col:26> 'void *' <NullToPointer>
|   | |     `-IntegerLiteral 0x21d018602b8 <col:26> 'int' 0
|   | |-IntegerLiteral 0x21d01860340 <.//openssl//file_jk/before\test\sslapitest.c:915:52> 'int' 0
|   | `-IntegerLiteral 0x21d01860368 <col:55> 'int' 0
|   |-InitListExpr 0x21d01868840 <line:916:5, col:56> 'sigalgs_list':'sigalgs_list'
|   | |-ImplicitCastExpr 0x21d018688a8 <col:6> 'const int *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x21d018603f8 <col:6> 'const int []' lvalue Var 0x21d01867218 'invalidlist3' 'const int []'
|   | |-ImplicitCastExpr 0x21d018688c0 <col:20, col:43> 'size_t':'unsigned long long' <IntegralCast>
|   | | `-CallExpr 0x21d01860470 <col:20, col:43> 'int'
|   | |   |-ImplicitCastExpr 0x21d01860458 <col:20> 'int (*)()' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x21d01860418 <col:20> 'int ()' Function 0x21d01867488 'OSSL_NELEM' 'int ()'
|   | |   `-ImplicitCastExpr 0x21d01860498 <col:31> 'const int *' <ArrayToPointerDecay>
|   | |     `-DeclRefExpr 0x21d01860438 <col:31> 'const int []' lvalue Var 0x21d01867218 'invalidlist3' 'const int []'
|   | |-ImplicitCastExpr 0x21d018688d8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const char *' <NullToPointer>
|   | | `-ParenExpr 0x21d01860518 <col:17, col:27> 'void *'
|   | |   `-CStyleCastExpr 0x21d018604f0 <col:18, col:26> 'void *' <NullToPointer>
|   | |     `-IntegerLiteral 0x21d018604b0 <col:26> 'int' 0
|   | |-IntegerLiteral 0x21d01860538 <.//openssl//file_jk/before\test\sslapitest.c:916:52> 'int' 0
|   | `-IntegerLiteral 0x21d01860560 <col:55> 'int' 0
|   |-InitListExpr 0x21d01868980 <line:917:5, col:56> 'sigalgs_list':'sigalgs_list'
|   | |-ImplicitCastExpr 0x21d018689e8 <col:6> 'const int *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x21d018605f0 <col:6> 'const int []' lvalue Var 0x21d018672c0 'invalidlist4' 'const int []'
|   | |-ImplicitCastExpr 0x21d01868a00 <col:20, col:43> 'size_t':'unsigned long long' <IntegralCast>
|   | | `-CallExpr 0x21d01860668 <col:20, col:43> 'int'
|   | |   |-ImplicitCastExpr 0x21d01860650 <col:20> 'int (*)()' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x21d01860610 <col:20> 'int ()' Function 0x21d01867488 'OSSL_NELEM' 'int ()'
|   | |   `-ImplicitCastExpr 0x21d01860690 <col:31> 'const int *' <ArrayToPointerDecay>
|   | |     `-DeclRefExpr 0x21d01860630 <col:31> 'const int []' lvalue Var 0x21d018672c0 'invalidlist4' 'const int []'
|   | |-ImplicitCastExpr 0x21d01868a18 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const char *' <NullToPointer>
|   | | `-ParenExpr 0x21d01860710 <col:17, col:27> 'void *'
|   | |   `-CStyleCastExpr 0x21d018606e8 <col:18, col:26> 'void *' <NullToPointer>
|   | |     `-IntegerLiteral 0x21d018606a8 <col:26> 'int' 0
|   | |-IntegerLiteral 0x21d01860730 <.//openssl//file_jk/before\test\sslapitest.c:917:52> 'int' 0
|   | `-IntegerLiteral 0x21d01860758 <col:55> 'int' 0
|   |-InitListExpr 0x21d01868a40 <line:918:5, col:26> 'sigalgs_list':'sigalgs_list'
|   | |-ImplicitCastExpr 0x21d01868aa8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const int *' <NullToPointer>
|   | | `-ParenExpr 0x21d01860850 <col:17, col:27> 'void *'
|   | |   `-CStyleCastExpr 0x21d01860828 <col:18, col:26> 'void *' <NullToPointer>
|   | |     `-IntegerLiteral 0x21d018607e8 <col:26> 'int' 0
|   | |-ImplicitCastExpr 0x21d01868ac0 <.//openssl//file_jk/before\test\sslapitest.c:918:12> 'size_t':'unsigned long long' <IntegralCast>
|   | | `-IntegerLiteral 0x21d01860870 <col:12> 'int' 0
|   | |-ImplicitCastExpr 0x21d01868af0 <col:15> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x21d01868ad8 <col:15> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x21d018608d8 <col:15> 'char [4]' lvalue "RSA"
|   | |-IntegerLiteral 0x21d018608f8 <col:22> 'int' 0
|   | `-IntegerLiteral 0x21d01860920 <col:25> 'int' 0
|   |-InitListExpr 0x21d01868b18 <line:919:5, col:29> 'sigalgs_list':'sigalgs_list'
|   | |-ImplicitCastExpr 0x21d01868b80 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const int *' <NullToPointer>
|   | | `-ParenExpr 0x21d01860a18 <col:17, col:27> 'void *'
|   | |   `-CStyleCastExpr 0x21d018609f0 <col:18, col:26> 'void *' <NullToPointer>
|   | |     `-IntegerLiteral 0x21d018609b0 <col:26> 'int' 0
|   | |-ImplicitCastExpr 0x21d01868b98 <.//openssl//file_jk/before\test\sslapitest.c:919:12> 'size_t':'unsigned long long' <IntegralCast>
|   | | `-IntegerLiteral 0x21d01860a38 <col:12> 'int' 0
|   | |-ImplicitCastExpr 0x21d01868bc8 <col:15> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x21d01868bb0 <col:15> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x21d01860a98 <col:15> 'char [7]' lvalue "SHA256"
|   | |-IntegerLiteral 0x21d01860ab8 <col:25> 'int' 0
|   | `-IntegerLiteral 0x21d01860ae0 <col:28> 'int' 0
|   |-InitListExpr 0x21d01868bf0 <line:920:5, col:40> 'sigalgs_list':'sigalgs_list'
|   | |-ImplicitCastExpr 0x21d01868c58 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const int *' <NullToPointer>
|   | | `-ParenExpr 0x21d01860bd8 <col:17, col:27> 'void *'
|   | |   `-CStyleCastExpr 0x21d01860bb0 <col:18, col:26> 'void *' <NullToPointer>
|   | |     `-IntegerLiteral 0x21d01860b70 <col:26> 'int' 0
|   | |-ImplicitCastExpr 0x21d01868c70 <.//openssl//file_jk/before\test\sslapitest.c:920:12> 'size_t':'unsigned long long' <IntegralCast>
|   | | `-IntegerLiteral 0x21d01860bf8 <col:12> 'int' 0
|   | |-ImplicitCastExpr 0x21d01868ca0 <col:15> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x21d01868c88 <col:15> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x21d01860c58 <col:15> 'char [18]' lvalue "RSA+SHA256:SHA256"
|   | |-IntegerLiteral 0x21d01860c88 <col:36> 'int' 0
|   | `-IntegerLiteral 0x21d01860cb0 <col:39> 'int' 0
|   `-InitListExpr 0x21d01868cc8 <line:921:5, col:30> 'sigalgs_list':'sigalgs_list'
|     |-ImplicitCastExpr 0x21d01868d30 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const int *' <NullToPointer>
|     | `-ParenExpr 0x21d01860da8 <col:17, col:27> 'void *'
|     |   `-CStyleCastExpr 0x21d01860d80 <col:18, col:26> 'void *' <NullToPointer>
|     |     `-IntegerLiteral 0x21d01860d40 <col:26> 'int' 0
|     |-ImplicitCastExpr 0x21d01868d48 <.//openssl//file_jk/before\test\sslapitest.c:921:12> 'size_t':'unsigned long long' <IntegralCast>
|     | `-IntegerLiteral 0x21d01860dc8 <col:12> 'int' 0
|     |-ImplicitCastExpr 0x21d01868d78 <col:15> 'const char *' <NoOp>
|     | `-ImplicitCastExpr 0x21d01868d60 <col:15> 'char *' <ArrayToPointerDecay>
|     |   `-StringLiteral 0x21d01860e28 <col:15> 'char [8]' lvalue "Invalid"
|     |-IntegerLiteral 0x21d01860e48 <col:26> 'int' 0
|     `-IntegerLiteral 0x21d01860e70 <col:29> 'int' 0
|-FunctionDecl 0x21d01867488 <<invalid sloc>> line:908:18 implicit used OSSL_NELEM 'int ()'
|-FunctionDecl 0x21d01868f18 <line:923:1, line:1006:1> line:923:12 used test_set_sigalgs 'int (int)' static
| |-ParmVarDecl 0x21d01868e68 <col:29, col:33> col:33 used idx 'int'
| `-CompoundStmt 0x21d0186aa60 <line:924:1, line:1006:1>
|   |-DeclStmt 0x21d01861240 <line:927:5, col:23>
|   | `-VarDecl 0x21d018611b0 <col:5, col:22> col:9 used testresult 'int' cinit
|   |   `-IntegerLiteral 0x21d01861218 <col:22> 'int' 0
|   |-DeclStmt 0x21d01861330 <line:928:5, col:29>
|   | `-VarDecl 0x21d018612c8 <col:5, col:25> col:25 used curr 'const sigalgs_list *'
|   |-DeclStmt 0x21d018613c8 <line:929:5, col:16>
|   | `-VarDecl 0x21d01861360 <col:5, col:9> col:9 used testctx 'int'
|   |-IfStmt 0x21d018615a0 <line:932:5, line:933:16>
|   | |-BinaryOperator 0x21d01861548 <line:932:9, col:50> 'int' '>='
|   | | |-CStyleCastExpr 0x21d01861428 <col:9, col:17> 'size_t':'unsigned long long' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x21d01861410 <col:17> 'int' <LValueToRValue> part_of_explicit_cast
|   | | |   `-DeclRefExpr 0x21d018613e0 <col:17> 'int' lvalue ParmVar 0x21d01868e68 'idx' 'int'
|   | | `-ImplicitCastExpr 0x21d01861530 <col:24, col:50> 'unsigned long long' <IntegralCast>
|   | |   `-BinaryOperator 0x21d01861510 <col:24, col:50> 'int' '*'
|   | |     |-CallExpr 0x21d018614a8 <col:24, col:46> 'int'
|   | |     | |-ImplicitCastExpr 0x21d01861490 <col:24> 'int (*)()' <FunctionToPointerDecay>
|   | |     | | `-DeclRefExpr 0x21d01861450 <col:24> 'int ()' Function 0x21d01867488 'OSSL_NELEM' 'int ()'
|   | |     | `-ImplicitCastExpr 0x21d018614d0 <col:35> 'const sigalgs_list *' <ArrayToPointerDecay>
|   | |     |   `-DeclRefExpr 0x21d01861470 <col:35> 'const sigalgs_list [14]' lvalue Var 0x21d018673d8 'testsigalgs' 'const sigalgs_list [14]'
|   | |     `-IntegerLiteral 0x21d018614e8 <col:50> 'int' 2
|   | `-ReturnStmt 0x21d01861590 <line:933:9, col:16>
|   |   `-IntegerLiteral 0x21d01861568 <col:16> 'int' 0
|   |-BinaryOperator 0x21d01861750 <line:935:5, col:53> 'int' '='
|   | |-DeclRefExpr 0x21d018615b8 <col:5> 'int' lvalue Var 0x21d01861360 'testctx' 'int'
|   | `-ParenExpr 0x21d01861730 <col:15, col:53> 'int'
|   |   `-BinaryOperator 0x21d01861710 <col:16, col:52> 'int' '<'
|   |     |-CStyleCastExpr 0x21d01861638 <col:16, col:24> 'size_t':'unsigned long long' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x21d01861620 <col:24> 'int' <LValueToRValue> part_of_explicit_cast
|   |     |   `-DeclRefExpr 0x21d018615f0 <col:24> 'int' lvalue ParmVar 0x21d01868e68 'idx' 'int'
|   |     `-ImplicitCastExpr 0x21d018616f8 <col:30, col:52> 'unsigned long long' <IntegralCast>
|   |       `-CallExpr 0x21d018616b8 <col:30, col:52> 'int'
|   |         |-ImplicitCastExpr 0x21d018616a0 <col:30> 'int (*)()' <FunctionToPointerDecay>
|   |         | `-DeclRefExpr 0x21d01861660 <col:30> 'int ()' Function 0x21d01867488 'OSSL_NELEM' 'int ()'
|   |         `-ImplicitCastExpr 0x21d018616e0 <col:41> 'const sigalgs_list *' <ArrayToPointerDecay>
|   |           `-DeclRefExpr 0x21d01861680 <col:41> 'const sigalgs_list [14]' lvalue Var 0x21d018673d8 'testsigalgs' 'const sigalgs_list [14]'
|   |-BinaryOperator 0x21d01861ae0 <line:936:5, line:937:64> 'const sigalgs_list *' '='
|   | |-DeclRefExpr 0x21d01861770 <line:936:5> 'const sigalgs_list *' lvalue Var 0x21d018612c8 'curr' 'const sigalgs_list *'
|   | `-ConditionalOperator 0x21d01861ab0 <col:12, line:937:64> 'const sigalgs_list *'
|   |   |-ImplicitCastExpr 0x21d018619d0 <line:936:12> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x21d018617a8 <col:12> 'int' lvalue Var 0x21d01861360 'testctx' 'int'
|   |   |-UnaryOperator 0x21d01861858 <col:22, col:38> 'const sigalgs_list *' prefix '&' cannot overflow
|   |   | `-ArraySubscriptExpr 0x21d01861838 <col:23, col:38> 'const sigalgs_list':'const sigalgs_list' lvalue
|   |   |   |-ImplicitCastExpr 0x21d01861808 <col:23> 'const sigalgs_list *' <ArrayToPointerDecay>
|   |   |   | `-DeclRefExpr 0x21d018617c8 <col:23> 'const sigalgs_list [14]' lvalue Var 0x21d018673d8 'testsigalgs' 'const sigalgs_list [14]'
|   |   |   `-ImplicitCastExpr 0x21d01861820 <col:35> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x21d018617e8 <col:35> 'int' lvalue ParmVar 0x21d01868e68 'idx' 'int'
|   |   `-UnaryOperator 0x21d018619b8 <line:937:22, col:64> 'const sigalgs_list *' prefix '&' cannot overflow
|   |     `-ArraySubscriptExpr 0x21d01861998 <col:23, col:64> 'const sigalgs_list':'const sigalgs_list' lvalue
|   |       |-ImplicitCastExpr 0x21d01861980 <col:23> 'const sigalgs_list *' <ArrayToPointerDecay>
|   |       | `-DeclRefExpr 0x21d01861870 <col:23> 'const sigalgs_list [14]' lvalue Var 0x21d018673d8 'testsigalgs' 'const sigalgs_list [14]'
|   |       `-BinaryOperator 0x21d01861960 <col:35, col:63> 'int' '-'
|   |         |-ImplicitCastExpr 0x21d01861948 <col:35> 'int' <LValueToRValue>
|   |         | `-DeclRefExpr 0x21d01861890 <col:35> 'int' lvalue ParmVar 0x21d01868e68 'idx' 'int'
|   |         `-CallExpr 0x21d01861908 <col:41, col:63> 'int'
|   |           |-ImplicitCastExpr 0x21d018618f0 <col:41> 'int (*)()' <FunctionToPointerDecay>
|   |           | `-DeclRefExpr 0x21d018618b0 <col:41> 'int ()' Function 0x21d01867488 'OSSL_NELEM' 'int ()'
|   |           `-ImplicitCastExpr 0x21d01861930 <col:52> 'const sigalgs_list *' <ArrayToPointerDecay>
|   |             `-DeclRefExpr 0x21d018618d0 <col:52> 'const sigalgs_list [14]' lvalue Var 0x21d018673d8 'testsigalgs' 'const sigalgs_list [14]'
|   |-IfStmt 0x21d01861d40 <line:939:5, line:944:5>
|   | |-OpaqueValueExpr 0x21d01861d28 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x21d01861d08 <line:941:46, line:944:5>
|   |   |-CallExpr 0x21d01861c78 <line:942:9, col:49> 'int'
|   |   | |-ImplicitCastExpr 0x21d01861c60 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x21d01861bf0 <col:9> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x21d01861cb8 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x21d01861ca0 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x21d01861c10 <col:16> 'char [31]' lvalue "Unable to create SSL_CTX pair\n"
|   |   `-ReturnStmt 0x21d01861cf8 <line:943:9, col:16>
|   |     `-IntegerLiteral 0x21d01861cd0 <col:16> 'int' 0
|   |-IfStmt 0x21d01869958 <line:946:5, line:965:5>
|   | |-ImplicitCastExpr 0x21d01861d78 <line:946:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x21d01861d58 <col:9> 'int' lvalue Var 0x21d01861360 'testctx' 'int'
|   | `-CompoundStmt 0x21d01869930 <col:18, line:965:5>
|   |   |-DeclStmt 0x21d01861e10 <line:947:9, col:16>
|   |   | `-VarDecl 0x21d01861da8 <col:9, col:13> col:13 used ret 'int'
|   |   |-IfStmt 0x21d018696f8 <line:953:9, line:960:9>
|   |   | |-UnaryOperator 0x21d018693f8 <line:953:13, col:14> 'int' prefix '!' cannot overflow
|   |   | | `-ImplicitCastExpr 0x21d018693e0 <col:14> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x21d018693c0 <col:14> 'int' lvalue Var 0x21d01861da8 'ret' 'int'
|   |   | `-CompoundStmt 0x21d018696d8 <col:19, line:960:9>
|   |   |   |-IfStmt 0x21d01869648 <line:954:13, line:958:30> has_else
|   |   |   | |-ImplicitCastExpr 0x21d01869478 <line:954:17, col:23> 'int' <LValueToRValue>
|   |   |   | | `-MemberExpr 0x21d01869448 <col:17, col:23> 'const int' lvalue ->valid 0x21d01866ca0
|   |   |   | |   `-ImplicitCastExpr 0x21d01869430 <col:17> 'const sigalgs_list *' <LValueToRValue>
|   |   |   | |     `-DeclRefExpr 0x21d01869410 <col:17> 'const sigalgs_list *' lvalue Var 0x21d018612c8 'curr' 'const sigalgs_list *'
|   |   |   | |-CallExpr 0x21d01869550 <line:955:17, line:956:27> 'int'
|   |   |   | | |-ImplicitCastExpr 0x21d01869538 <line:955:17> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |   | | | `-DeclRefExpr 0x21d01869490 <col:17> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |   |   | | |-ImplicitCastExpr 0x21d01869598 <col:24> 'const char *' <NoOp>
|   |   |   | | | `-ImplicitCastExpr 0x21d01869580 <col:24> 'char *' <ArrayToPointerDecay>
|   |   |   | | |   `-StringLiteral 0x21d018694b0 <col:24> 'char [52]' lvalue "Unexpected failure setting sigalgs in SSL_CTX (%d)\n"
|   |   |   | | `-ImplicitCastExpr 0x21d018695b0 <line:956:24> 'int' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x21d01869500 <col:24> 'int' lvalue ParmVar 0x21d01868e68 'idx' 'int'
|   |   |   | `-BinaryOperator 0x21d01869628 <line:958:17, col:30> 'int' '='
|   |   |   |   |-DeclRefExpr 0x21d018695c8 <col:17> 'int' lvalue Var 0x21d018611b0 'testresult' 'int'
|   |   |   |   `-IntegerLiteral 0x21d01869600 <col:30> 'int' 1
|   |   |   `-GotoStmt 0x21d018696c0 <line:959:13, col:18> 'end' 0x21d01869670
|   |   `-IfStmt 0x21d01869918 <line:961:9, line:964:9>
|   |     |-UnaryOperator 0x21d01869790 <line:961:13, col:20> 'int' prefix '!' cannot overflow
|   |     | `-ImplicitCastExpr 0x21d01869778 <col:14, col:20> 'int' <LValueToRValue>
|   |     |   `-MemberExpr 0x21d01869748 <col:14, col:20> 'const int' lvalue ->valid 0x21d01866ca0
|   |     |     `-ImplicitCastExpr 0x21d01869730 <col:14> 'const sigalgs_list *' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x21d01869710 <col:14> 'const sigalgs_list *' lvalue Var 0x21d018612c8 'curr' 'const sigalgs_list *'
|   |     `-CompoundStmt 0x21d018698f8 <col:27, line:964:9>
|   |       |-CallExpr 0x21d01869868 <line:962:13, col:79> 'int'
|   |       | |-ImplicitCastExpr 0x21d01869850 <col:13> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x21d018697a8 <col:13> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |       | |-ImplicitCastExpr 0x21d018698b0 <col:20> 'const char *' <NoOp>
|   |       | | `-ImplicitCastExpr 0x21d01869898 <col:20> 'char *' <ArrayToPointerDecay>
|   |       | |   `-StringLiteral 0x21d018697c8 <col:20> 'char [52]' lvalue "Unexpected success setting sigalgs in SSL_CTX (%d)\n"
|   |       | `-ImplicitCastExpr 0x21d018698c8 <col:76> 'int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x21d01869818 <col:76> 'int' lvalue ParmVar 0x21d01868e68 'idx' 'int'
|   |       `-GotoStmt 0x21d018698e0 <line:963:13, col:18> 'end' 0x21d01869670
|   |-IfStmt 0x21d01869bb0 <line:967:5, line:970:5>
|   | |-OpaqueValueExpr 0x21d01869b98 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x21d01869b78 <line:967:78, line:970:5>
|   |   |-CallExpr 0x21d01869b08 <line:968:9, col:48> 'int'
|   |   | |-ImplicitCastExpr 0x21d01869af0 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x21d01869a80 <col:9> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x21d01869b48 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x21d01869b30 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x21d01869aa0 <col:16> 'char [30]' lvalue "Unable to create SSL objects\n"
|   |   `-GotoStmt 0x21d01869b60 <line:969:9, col:14> 'end' 0x21d01869670
|   |-IfStmt 0x21d0186a6f0 <line:972:5, line:990:5>
|   | |-UnaryOperator 0x21d01869c00 <line:972:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x21d01869be8 <col:10> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x21d01869bc8 <col:10> 'int' lvalue Var 0x21d01861360 'testctx' 'int'
|   | `-CompoundStmt 0x21d0186a6c8 <col:19, line:990:5>
|   |   |-DeclStmt 0x21d01869c98 <line:973:9, col:16>
|   |   | `-VarDecl 0x21d01869c30 <col:9, col:13> col:13 used ret 'int'
|   |   |-IfStmt 0x21d0186a498 <line:979:9, line:985:9>
|   |   | |-UnaryOperator 0x21d0186a208 <line:979:13, col:14> 'int' prefix '!' cannot overflow
|   |   | | `-ImplicitCastExpr 0x21d0186a1f0 <col:14> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x21d0186a1d0 <col:14> 'int' lvalue Var 0x21d01869c30 'ret' 'int'
|   |   | `-CompoundStmt 0x21d0186a478 <col:19, line:985:9>
|   |   |   |-IfStmt 0x21d0186a438 <line:980:13, line:983:30> has_else
|   |   |   | |-ImplicitCastExpr 0x21d0186a288 <line:980:17, col:23> 'int' <LValueToRValue>
|   |   |   | | `-MemberExpr 0x21d0186a258 <col:17, col:23> 'const int' lvalue ->valid 0x21d01866ca0
|   |   |   | |   `-ImplicitCastExpr 0x21d0186a240 <col:17> 'const sigalgs_list *' <LValueToRValue>
|   |   |   | |     `-DeclRefExpr 0x21d0186a220 <col:17> 'const sigalgs_list *' lvalue Var 0x21d018612c8 'curr' 'const sigalgs_list *'
|   |   |   | |-CallExpr 0x21d0186a358 <line:981:17, col:79> 'int'
|   |   |   | | |-ImplicitCastExpr 0x21d0186a340 <col:17> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |   | | | `-DeclRefExpr 0x21d0186a2a0 <col:17> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |   |   | | |-ImplicitCastExpr 0x21d0186a3a0 <col:24> 'const char *' <NoOp>
|   |   |   | | | `-ImplicitCastExpr 0x21d0186a388 <col:24> 'char *' <ArrayToPointerDecay>
|   |   |   | | |   `-StringLiteral 0x21d0186a2c0 <col:24> 'char [48]' lvalue "Unexpected failure setting sigalgs in SSL (%d)\n"
|   |   |   | | `-ImplicitCastExpr 0x21d0186a3b8 <col:76> 'int' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x21d0186a308 <col:76> 'int' lvalue ParmVar 0x21d01868e68 'idx' 'int'
|   |   |   | `-BinaryOperator 0x21d0186a418 <line:983:17, col:30> 'int' '='
|   |   |   |   |-DeclRefExpr 0x21d0186a3d0 <col:17> 'int' lvalue Var 0x21d018611b0 'testresult' 'int'
|   |   |   |   `-IntegerLiteral 0x21d0186a3f0 <col:30> 'int' 1
|   |   |   `-GotoStmt 0x21d0186a460 <line:984:13, col:18> 'end' 0x21d01869670
|   |   `-IfStmt 0x21d0186a6b0 <line:986:9, line:989:9>
|   |     |-UnaryOperator 0x21d0186a530 <line:986:13, col:20> 'int' prefix '!' cannot overflow
|   |     | `-ImplicitCastExpr 0x21d0186a518 <col:14, col:20> 'int' <LValueToRValue>
|   |     |   `-MemberExpr 0x21d0186a4e8 <col:14, col:20> 'const int' lvalue ->valid 0x21d01866ca0
|   |     |     `-ImplicitCastExpr 0x21d0186a4d0 <col:14> 'const sigalgs_list *' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x21d0186a4b0 <col:14> 'const sigalgs_list *' lvalue Var 0x21d018612c8 'curr' 'const sigalgs_list *'
|   |     `-CompoundStmt 0x21d0186a690 <col:27, line:989:9>
|   |       |-CallExpr 0x21d0186a600 <line:987:13, col:75> 'int'
|   |       | |-ImplicitCastExpr 0x21d0186a5e8 <col:13> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x21d0186a548 <col:13> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |       | |-ImplicitCastExpr 0x21d0186a648 <col:20> 'const char *' <NoOp>
|   |       | | `-ImplicitCastExpr 0x21d0186a630 <col:20> 'char *' <ArrayToPointerDecay>
|   |       | |   `-StringLiteral 0x21d0186a568 <col:20> 'char [48]' lvalue "Unexpected success setting sigalgs in SSL (%d)\n"
|   |       | `-ImplicitCastExpr 0x21d0186a660 <col:72> 'int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x21d0186a5b0 <col:72> 'int' lvalue ParmVar 0x21d01868e68 'idx' 'int'
|   |       `-GotoStmt 0x21d0186a678 <line:988:13, col:18> 'end' 0x21d01869670
|   |-IfStmt 0x21d0186a8f8 <line:992:5, line:995:5>
|   | |-OpaqueValueExpr 0x21d0186a8e0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x21d0186a8c0 <line:992:75, line:995:5>
|   |   |-CallExpr 0x21d0186a830 <line:993:9, col:77> 'int'
|   |   | |-ImplicitCastExpr 0x21d0186a818 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x21d0186a770 <col:9> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |   | |-ImplicitCastExpr 0x21d0186a878 <col:16> 'const char *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x21d0186a860 <col:16> 'char *' <ArrayToPointerDecay>
|   |   | |   `-StringLiteral 0x21d0186a790 <col:16> 'char [54]' lvalue "Unexpected return value creating SSL connection (%d)\n"
|   |   | `-ImplicitCastExpr 0x21d0186a890 <col:74> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x21d0186a7e0 <col:74> 'int' lvalue ParmVar 0x21d01868e68 'idx' 'int'
|   |   `-GotoStmt 0x21d0186a8a8 <line:994:9, col:14> 'end' 0x21d01869670
|   |-BinaryOperator 0x21d0186a958 <line:997:5, col:18> 'int' '='
|   | |-DeclRefExpr 0x21d0186a910 <col:5> 'int' lvalue Var 0x21d018611b0 'testresult' 'int'
|   | `-IntegerLiteral 0x21d0186a930 <col:18> 'int' 1
|   |-LabelStmt 0x21d0186a9a0 <line:999:2, col:5> 'end'
|   | `-NullStmt 0x21d0186a998 <col:5>
|   `-ReturnStmt 0x21d0186aa50 <line:1005:5, col:12>
|     `-ImplicitCastExpr 0x21d0186aa38 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x21d0186aa18 <col:12> 'int' lvalue Var 0x21d018611b0 'testresult' 'int'
|-VarDecl 0x21d0186aaf8 <line:1008:1, col:24> col:12 used clntaddcb 'int' static cinit
| `-IntegerLiteral 0x21d0186ab60 <col:24> 'int' 0
|-VarDecl 0x21d0186abb8 <line:1009:1, col:26> col:12 used clntparsecb 'int' static cinit
| `-IntegerLiteral 0x21d0186ac20 <col:26> 'int' 0
|-VarDecl 0x21d0186ac78 <line:1010:1, col:23> col:12 used srvaddcb 'int' static cinit
| `-IntegerLiteral 0x21d0186ace0 <col:23> 'int' 0
|-VarDecl 0x21d0186ad38 <line:1011:1, col:25> col:12 used srvparsecb 'int' static cinit
| `-IntegerLiteral 0x21d0186ada0 <col:25> 'int' 0
|-VarDecl 0x21d0186adf8 <line:1012:1, col:20> col:12 used snicb 'int' static cinit
| `-IntegerLiteral 0x21d0186ae60 <col:20> 'int' 0
|-FunctionDecl 0x21d018ff130 <line:1016:1, line:1035:1> line:1016:12 invalid add_cb 'int (int *, unsigned int, const unsigned char **, size_t *, int *, void *)' static
| |-ParmVarDecl 0x21d0186aeb8 <col:19, col:24> col:24 invalid s 'int *'
| |-ParmVarDecl 0x21d0186af38 <col:27, col:40> col:40 ext_type 'unsigned int'
| |-ParmVarDecl 0x21d0186afc0 <col:50, col:72> col:72 used out 'const unsigned char **'
| |-ParmVarDecl 0x21d0186b098 <line:1017:19, col:27> col:27 used outlen 'size_t *'
| |-ParmVarDecl 0x21d0186b118 <col:35, col:40> col:40 al 'int *'
| |-ParmVarDecl 0x21d018fefb0 <col:44, col:50> col:50 used add_arg 'void *'
| `-CompoundStmt 0x21d018ffc48 <line:1018:1, line:1035:1>
|   |-DeclStmt 0x21d018ff328 <line:1019:5, col:33>
|   | `-VarDecl 0x21d018ff230 <col:5, col:26> col:10 used server 'int *' cinit
|   |   `-CStyleCastExpr 0x21d018ff300 <col:19, col:26> 'int *' <BitCast>
|   |     `-ImplicitCastExpr 0x21d018ff2e8 <col:26> 'void *' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0x21d018ff298 <col:26> 'void *' lvalue ParmVar 0x21d018fefb0 'add_arg' 'void *'
|   |-DeclStmt 0x21d018ff3c0 <line:1020:5, col:24>
|   | `-VarDecl 0x21d018ff358 <col:5, col:20> col:20 used data 'unsigned char *'
|   |-IfStmt 0x21d018ff570 <line:1022:5, line:1025:18> has_else
|   | |-OpaqueValueExpr 0x21d018ff558 <<invalid sloc>> '_Bool'
|   | |-UnaryOperator 0x21d018ff508 <line:1023:9, col:17> 'int' postfix '++'
|   | | `-DeclRefExpr 0x21d018ff4e8 <col:9> 'int' lvalue Var 0x21d0186ac78 'srvaddcb' 'int'
|   | `-UnaryOperator 0x21d018ff540 <line:1025:9, col:18> 'int' postfix '++'
|   |   `-DeclRefExpr 0x21d018ff520 <col:9> 'int' lvalue Var 0x21d0186aaf8 'clntaddcb' 'int'
|   |-IfStmt 0x21d018ff9b8 <line:1027:5, line:1029:17>
|   | |-OpaqueValueExpr 0x21d018ff9a0 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x21d018ff990 <col:9, col:17>
|   |   `-UnaryOperator 0x21d018ff978 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x21d018ff950 <col:17> 'int' 1
|   |-BinaryOperator 0x21d018ffa60 <line:1031:5, col:13> 'unsigned char' '='
|   | |-UnaryOperator 0x21d018ffa08 <col:5, col:6> 'unsigned char' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x21d018ff9f0 <col:6> 'unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x21d018ff9d0 <col:6> 'unsigned char *' lvalue Var 0x21d018ff358 'data' 'unsigned char *'
|   | `-ImplicitCastExpr 0x21d018ffa48 <col:13> 'unsigned char' <IntegralCast>
|   |   `-IntegerLiteral 0x21d018ffa20 <col:13> 'int' 1
|   |-BinaryOperator 0x21d018ffb38 <line:1032:5, col:12> 'const unsigned char *' '='
|   | |-UnaryOperator 0x21d018ffad0 <col:5, col:6> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x21d018ffab8 <col:6> 'const unsigned char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x21d018ffa80 <col:6> 'const unsigned char **' lvalue ParmVar 0x21d0186afc0 'out' 'const unsigned char **'
|   | `-ImplicitCastExpr 0x21d018ffb20 <col:12> 'const unsigned char *' <NoOp>
|   |   `-ImplicitCastExpr 0x21d018ffb08 <col:12> 'unsigned char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x21d018ffae8 <col:12> 'unsigned char *' lvalue Var 0x21d018ff358 'data' 'unsigned char *'
|   |-BinaryOperator 0x21d018ffbf0 <line:1033:5, col:26> 'size_t':'unsigned long long' '='
|   | |-UnaryOperator 0x21d018ffba8 <col:5, col:6> 'size_t':'unsigned long long' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x21d018ffb90 <col:6> 'size_t *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x21d018ffb58 <col:6> 'size_t *' lvalue ParmVar 0x21d0186b098 'outlen' 'size_t *'
|   | `-UnaryExprOrTypeTraitExpr 0x21d018ffbd0 <col:15, col:26> 'unsigned long long' sizeof 'char'
|   `-ReturnStmt 0x21d018ffc38 <line:1034:5, col:12>
|     `-IntegerLiteral 0x21d018ffc10 <col:12> 'int' 1
|-FunctionDecl 0x21d018fbf80 <line:1037:1, line:1041:1> line:1037:13 invalid free_cb 'void (int *, unsigned int, const unsigned char *, void *)' static
| |-ParmVarDecl 0x21d018ffce0 <col:21, col:26> col:26 invalid s 'int *'
| |-ParmVarDecl 0x21d018ffd60 <col:29, col:42> col:42 ext_type 'unsigned int'
| |-ParmVarDecl 0x21d018ffde0 <col:52, col:73> col:73 used out 'const unsigned char *'
| |-ParmVarDecl 0x21d018ffe60 <line:1038:21, col:27> col:27 add_arg 'void *'
| `-CompoundStmt 0x21d018fc238 <line:1039:1, line:1041:1>
|   `-CallExpr 0x21d018fc210 <line:1040:5, col:38> 'int'
|     |-ImplicitCastExpr 0x21d018fc1f8 <col:5> 'int (*)()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x21d018fc148 <col:5> 'int ()' Function 0x21d018fc080 'OPENSSL_free' 'int ()'
|     `-CStyleCastExpr 0x21d018fc1d0 <col:18, col:35> 'unsigned char *' <NoOp>
|       `-ImplicitCastExpr 0x21d018fc1b8 <col:35> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x21d018fc168 <col:35> 'const unsigned char *' lvalue ParmVar 0x21d018ffde0 'out' 'const unsigned char *'
|-FunctionDecl 0x21d018fc690 <line:1043:1, line:1059:1> line:1043:12 invalid parse_cb 'int (int *, unsigned int, const unsigned char *, size_t, int *, void *)' static
| |-ParmVarDecl 0x21d018fc298 <col:21, col:26> col:26 invalid s 'int *'
| |-ParmVarDecl 0x21d018fc318 <col:29, col:42> col:42 ext_type 'unsigned int'
| |-ParmVarDecl 0x21d018fc398 <col:52, col:73> col:73 used in 'const unsigned char *'
| |-ParmVarDecl 0x21d018fc410 <line:1044:21, col:28> col:28 used inlen 'size_t':'unsigned long long'
| |-ParmVarDecl 0x21d018fc490 <col:35, col:40> col:40 al 'int *'
| |-ParmVarDecl 0x21d018fc510 <col:44, col:50> col:50 used parse_arg 'void *'
| `-CompoundStmt 0x21d018fcc30 <line:1045:1, line:1059:1>
|   |-DeclStmt 0x21d018fc888 <line:1046:5, col:35>
|   | `-VarDecl 0x21d018fc790 <col:5, col:26> col:10 used server 'int *' cinit
|   |   `-CStyleCastExpr 0x21d018fc860 <col:19, col:26> 'int *' <BitCast>
|   |     `-ImplicitCastExpr 0x21d018fc848 <col:26> 'void *' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0x21d018fc7f8 <col:26> 'void *' lvalue ParmVar 0x21d018fc510 'parse_arg' 'void *'
|   |-IfStmt 0x21d018fc948 <line:1048:5, line:1051:20> has_else
|   | |-OpaqueValueExpr 0x21d018fc930 <<invalid sloc>> '_Bool'
|   | |-UnaryOperator 0x21d018fc8e0 <line:1049:9, col:19> 'int' postfix '++'
|   | | `-DeclRefExpr 0x21d018fc8c0 <col:9> 'int' lvalue Var 0x21d0186ad38 'srvparsecb' 'int'
|   | `-UnaryOperator 0x21d018fc918 <line:1051:9, col:20> 'int' postfix '++'
|   |   `-DeclRefExpr 0x21d018fc8f8 <col:9> 'int' lvalue Var 0x21d0186abb8 'clntparsecb' 'int'
|   |-IfStmt 0x21d018fcbe0 <line:1053:5, line:1056:17>
|   | |-OpaqueValueExpr 0x21d018fcbc8 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x21d018fcbb8 <col:9, col:17>
|   |   `-UnaryOperator 0x21d018fcba0 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x21d018fcb78 <col:17> 'int' 1
|   `-ReturnStmt 0x21d018fcc20 <line:1058:5, col:12>
|     `-IntegerLiteral 0x21d018fcbf8 <col:12> 'int' 1
|-FunctionDecl 0x21d018fce90 <line:1061:1, line:1071:1> line:1061:12 invalid sni_cb 'int (int *, int *, void *)' static
| |-ParmVarDecl 0x21d018fcca8 <col:19, col:24> col:24 invalid s 'int *'
| |-ParmVarDecl 0x21d018fcd28 <col:27, col:32> col:32 used al 'int *'
| |-ParmVarDecl 0x21d018fcda8 <col:36, col:42> col:42 arg 'void *'
| `-CompoundStmt 0x21d018fe218 <line:1062:1, line:1071:1>
|   |-IfStmt 0x21d018fe1c8 <line:1065:5, line:1068:5>
|   | |-OpaqueValueExpr 0x21d018fe1b0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x21d018fe1a0 <line:1065:42, line:1068:5>
|   `-UnaryOperator 0x21d018fe200 <line:1069:5, col:10> 'int' postfix '++'
|     `-DeclRefExpr 0x21d018fe1e0 <col:5> 'int' lvalue Var 0x21d0186adf8 'snicb' 'int'
|-FunctionDecl 0x21d018fe300 <line:1078:1, line:1209:1> line:1078:12 used test_custom_exts 'int (int)' static
| |-ParmVarDecl 0x21d018fe250 <col:29, col:33> col:33 used tst 'int'
| `-CompoundStmt 0x21d018f9568 <line:1079:1, line:1209:1>
|   |-DeclStmt 0x21d018fe710 <line:1082:5, col:23>
|   | `-VarDecl 0x21d018fe680 <col:5, col:22> col:9 used testresult 'int' cinit
|   |   `-IntegerLiteral 0x21d018fe6e8 <col:22> 'int' 0
|   |-DeclStmt 0x21d018fe7d0 <line:1083:5, col:26>
|   | `-VarDecl 0x21d018fe740 <col:5, col:25> col:16 used server 'int' static cinit
|   |   `-IntegerLiteral 0x21d018fe7a8 <col:25> 'int' 1
|   |-DeclStmt 0x21d018fe890 <line:1084:5, col:26>
|   | `-VarDecl 0x21d018fe800 <col:5, col:25> col:16 used client 'int' static cinit
|   |   `-IntegerLiteral 0x21d018fe868 <col:25> 'int' 0
|   |-BinaryOperator 0x21d018fea38 <line:1088:5, col:55> 'int' '='
|   | |-DeclRefExpr 0x21d018fe930 <col:5> 'int' lvalue Var 0x21d0186aaf8 'clntaddcb' 'int'
|   | `-BinaryOperator 0x21d018fea18 <col:17, col:55> 'int' '='
|   |   |-DeclRefExpr 0x21d018fe950 <col:17> 'int' lvalue Var 0x21d0186abb8 'clntparsecb' 'int'
|   |   `-BinaryOperator 0x21d018fe9f8 <col:31, col:55> 'int' '='
|   |     |-DeclRefExpr 0x21d018fe970 <col:31> 'int' lvalue Var 0x21d0186ac78 'srvaddcb' 'int'
|   |     `-BinaryOperator 0x21d018fe9d8 <col:42, col:55> 'int' '='
|   |       |-DeclRefExpr 0x21d018fe990 <col:42> 'int' lvalue Var 0x21d0186ad38 'srvparsecb' 'int'
|   |       `-IntegerLiteral 0x21d018fe9b0 <col:55> 'int' 0
|   |-BinaryOperator 0x21d018feaa0 <line:1089:5, col:13> 'int' '='
|   | |-DeclRefExpr 0x21d018fea58 <col:5> 'int' lvalue Var 0x21d0186adf8 'snicb' 'int'
|   | `-IntegerLiteral 0x21d018fea78 <col:13> 'int' 0
|   |-IfStmt 0x21d018fed30 <line:1091:5, line:1096:5>
|   | |-OpaqueValueExpr 0x21d018fed18 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x21d018fecf8 <line:1093:46, line:1096:5>
|   |   |-CallExpr 0x21d018fec38 <line:1094:9, col:49> 'int'
|   |   | |-ImplicitCastExpr 0x21d018fec20 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x21d018febb0 <col:9> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x21d018fec78 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x21d018fec60 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x21d018febd0 <col:16> 'char [31]' lvalue "Unable to create SSL_CTX pair\n"
|   |   `-GotoStmt 0x21d018fece0 <line:1095:9, col:14> 'end' 0x21d018fec90
|   |-IfStmt 0x21d018fa078 <line:1098:5, line:1104:5>
|   | |-OpaqueValueExpr 0x21d018fa060 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x21d018fa040 <line:1101:53, line:1104:5>
|   |   |-CallExpr 0x21d018f9fd0 <line:1102:9, col:53> 'int'
|   |   | |-ImplicitCastExpr 0x21d018f9fb8 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x21d018fef70 <col:9> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x21d018fa010 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x21d018f9ff8 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x21d018f9f60 <col:16> 'char [35]' lvalue "Unable to create SSL_CTX pair (2)\n"
|   |   `-GotoStmt 0x21d018fa028 <line:1103:9, col:14> 'end' 0x21d018fec90
|   |-IfStmt 0x21d018fa388 <line:1107:5, line:1111:5>
|   | |-OpaqueValueExpr 0x21d018fa370 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x21d018fa350 <line:1108:69, line:1111:5>
|   |   |-CallExpr 0x21d018fa2e0 <line:1109:9, col:57> 'int'
|   |   | |-ImplicitCastExpr 0x21d018fa2c8 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x21d018fa250 <col:9> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x21d018fa320 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x21d018fa308 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x21d018fa270 <col:16> 'char [39]' lvalue "Unable to add client custom extension\n"
|   |   `-GotoStmt 0x21d018fa338 <line:1110:9, col:14> 'end' 0x21d018fec90
|   |-IfStmt 0x21d018fa598 <line:1114:5, line:1118:5>
|   | |-OpaqueValueExpr 0x21d018fa580 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x21d018fa560 <line:1115:68, line:1118:5>
|   |   |-CallExpr 0x21d018fa4f0 <line:1116:9, col:65> 'int'
|   |   | |-ImplicitCastExpr 0x21d018fa4d8 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x21d018fa458 <col:9> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x21d018fa530 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x21d018fa518 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x21d018fa478 <col:16> 'char [47]' lvalue "Unexpected success adding duplicate extension\n"
|   |   `-GotoStmt 0x21d018fa548 <line:1117:9, col:14> 'end' 0x21d018fec90
|   |-IfStmt 0x21d018fa8a8 <line:1121:5, line:1125:5>
|   | |-OpaqueValueExpr 0x21d018fa890 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x21d018fa870 <line:1122:69, line:1125:5>
|   |   |-CallExpr 0x21d018fa800 <line:1123:9, col:57> 'int'
|   |   | |-ImplicitCastExpr 0x21d018fa7e8 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x21d018fa770 <col:9> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x21d018fa840 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x21d018fa828 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x21d018fa790 <col:16> 'char [39]' lvalue "Unable to add server custom extension\n"
|   |   `-GotoStmt 0x21d018fa858 <line:1124:9, col:14> 'end' 0x21d018fec90
|   |-IfStmt 0x21d018fab40 <line:1126:5, line:1133:5>
|   | |-OpaqueValueExpr 0x21d018fab28 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x21d018fab08 <line:1130:67, line:1133:5>
|   |   |-CallExpr 0x21d018faa98 <line:1131:9, col:65> 'int'
|   |   | |-ImplicitCastExpr 0x21d018faa80 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x21d018faa00 <col:9> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x21d018faad8 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x21d018faac0 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x21d018faa20 <col:16> 'char [47]' lvalue "Unable to add server custom extension for SNI\n"
|   |   `-GotoStmt 0x21d018faaf0 <line:1132:9, col:14> 'end' 0x21d018fec90
|   |-IfStmt 0x21d018fad90 <line:1136:5, line:1140:5>
|   | |-OpaqueValueExpr 0x21d018fad78 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x21d018fad58 <line:1137:68, line:1140:5>
|   |   |-CallExpr 0x21d018face8 <line:1138:9, col:69> 'int'
|   |   | |-ImplicitCastExpr 0x21d018facd0 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x21d018fac10 <col:9> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x21d018fad28 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x21d018fad10 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x21d018fac68 <col:16> 'char [51]' lvalue "Unexpected success adding duplicate extension (2)\n"
|   |   `-GotoStmt 0x21d018fad40 <line:1139:9, col:14> 'end' 0x21d018fec90
|   |-IfStmt 0x21d01900208 <line:1142:5, line:1149:5>
|   | |-BinaryOperator 0x21d018fae08 <line:1142:9, col:16> 'int' '=='
|   | | |-ImplicitCastExpr 0x21d018fadf0 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x21d018fada8 <col:9> 'int' lvalue ParmVar 0x21d018fe250 'tst' 'int'
|   | | `-IntegerLiteral 0x21d018fadc8 <col:16> 'int' 1
|   | `-CompoundStmt 0x21d019001f0 <col:19, line:1149:5>
|   |   `-IfStmt 0x21d019001d8 <line:1144:9, line:1148:9>
|   |     |-OpaqueValueExpr 0x21d019001c0 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x21d019001a0 <line:1145:69, line:1148:9>
|   |       |-CallExpr 0x21d01900130 <line:1146:13, col:48> 'int'
|   |       | |-ImplicitCastExpr 0x21d01900118 <col:13> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x21d019000a8 <col:13> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |       | `-ImplicitCastExpr 0x21d01900170 <col:20> 'const char *' <NoOp>
|   |       |   `-ImplicitCastExpr 0x21d01900158 <col:20> 'char *' <ArrayToPointerDecay>
|   |       |     `-StringLiteral 0x21d019000c8 <col:20> 'char [26]' lvalue "Cannot set SNI callbacks\n"
|   |       `-GotoStmt 0x21d01900188 <line:1147:13, col:18> 'end' 0x21d018fec90
|   |-IfStmt 0x21d01900460 <line:1151:5, line:1155:5>
|   | |-OpaqueValueExpr 0x21d01900448 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x21d01900428 <line:1152:62, line:1155:5>
|   |   |-CallExpr 0x21d019003b8 <line:1153:9, col:48> 'int'
|   |   | |-ImplicitCastExpr 0x21d019003a0 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x21d01900330 <col:9> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x21d019003f8 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x21d019003e0 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x21d01900350 <col:16> 'char [30]' lvalue "Cannot create SSL connection\n"
|   |   `-GotoStmt 0x21d01900410 <line:1154:9, col:14> 'end' 0x21d018fec90
|   |-IfStmt 0x21d01900ab0 <line:1157:5, line:1165:5>
|   | |-BinaryOperator 0x21d01900978 <line:1157:9, line:1162:39> 'int' '||'
|   | | |-BinaryOperator 0x21d01900818 <line:1157:9, line:1161:39> 'int' '||'
|   | | | |-BinaryOperator 0x21d019006b8 <line:1157:9, line:1160:30> 'int' '||'
|   | | | | |-BinaryOperator 0x21d01900618 <line:1157:9, line:1159:28> 'int' '||'
|   | | | | | |-BinaryOperator 0x21d01900578 <line:1157:9, line:1158:31> 'int' '||'
|   | | | | | | |-BinaryOperator 0x21d019004d8 <line:1157:9, col:22> 'int' '!='
|   | | | | | | | |-ImplicitCastExpr 0x21d019004c0 <col:9> 'int' <LValueToRValue>
|   | | | | | | | | `-DeclRefExpr 0x21d01900478 <col:9> 'int' lvalue Var 0x21d0186aaf8 'clntaddcb' 'int'
|   | | | | | | | `-IntegerLiteral 0x21d01900498 <col:22> 'int' 1
|   | | | | | | `-BinaryOperator 0x21d01900558 <line:1158:16, col:31> 'int' '!='
|   | | | | | |   |-ImplicitCastExpr 0x21d01900540 <col:16> 'int' <LValueToRValue>
|   | | | | | |   | `-DeclRefExpr 0x21d019004f8 <col:16> 'int' lvalue Var 0x21d0186abb8 'clntparsecb' 'int'
|   | | | | | |   `-IntegerLiteral 0x21d01900518 <col:31> 'int' 1
|   | | | | | `-BinaryOperator 0x21d019005f8 <line:1159:16, col:28> 'int' '!='
|   | | | | |   |-ImplicitCastExpr 0x21d019005e0 <col:16> 'int' <LValueToRValue>
|   | | | | |   | `-DeclRefExpr 0x21d01900598 <col:16> 'int' lvalue Var 0x21d0186ac78 'srvaddcb' 'int'
|   | | | | |   `-IntegerLiteral 0x21d019005b8 <col:28> 'int' 1
|   | | | | `-BinaryOperator 0x21d01900698 <line:1160:16, col:30> 'int' '!='
|   | | | |   |-ImplicitCastExpr 0x21d01900680 <col:16> 'int' <LValueToRValue>
|   | | | |   | `-DeclRefExpr 0x21d01900638 <col:16> 'int' lvalue Var 0x21d0186ad38 'srvparsecb' 'int'
|   | | | |   `-IntegerLiteral 0x21d01900658 <col:30> 'int' 1
|   | | | `-ParenExpr 0x21d019007f8 <line:1161:16, col:39> 'int'
|   | | |   `-BinaryOperator 0x21d019007d8 <col:17, col:38> 'int' '&&'
|   | | |     |-BinaryOperator 0x21d01900738 <col:17, col:24> 'int' '!='
|   | | |     | |-ImplicitCastExpr 0x21d01900720 <col:17> 'int' <LValueToRValue>
|   | | |     | | `-DeclRefExpr 0x21d019006d8 <col:17> 'int' lvalue ParmVar 0x21d018fe250 'tst' 'int'
|   | | |     | `-IntegerLiteral 0x21d019006f8 <col:24> 'int' 1
|   | | |     `-BinaryOperator 0x21d019007b8 <col:29, col:38> 'int' '!='
|   | | |       |-ImplicitCastExpr 0x21d019007a0 <col:29> 'int' <LValueToRValue>
|   | | |       | `-DeclRefExpr 0x21d01900758 <col:29> 'int' lvalue Var 0x21d0186adf8 'snicb' 'int'
|   | | |       `-IntegerLiteral 0x21d01900778 <col:38> 'int' 0
|   | | `-ParenExpr 0x21d01900958 <line:1162:16, col:39> 'int'
|   | |   `-BinaryOperator 0x21d01900938 <col:17, col:38> 'int' '&&'
|   | |     |-BinaryOperator 0x21d01900898 <col:17, col:24> 'int' '=='
|   | |     | |-ImplicitCastExpr 0x21d01900880 <col:17> 'int' <LValueToRValue>
|   | |     | | `-DeclRefExpr 0x21d01900838 <col:17> 'int' lvalue ParmVar 0x21d018fe250 'tst' 'int'
|   | |     | `-IntegerLiteral 0x21d01900858 <col:24> 'int' 1
|   | |     `-BinaryOperator 0x21d01900918 <col:29, col:38> 'int' '!='
|   | |       |-ImplicitCastExpr 0x21d01900900 <col:29> 'int' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x21d019008b8 <col:29> 'int' lvalue Var 0x21d0186adf8 'snicb' 'int'
|   | |       `-IntegerLiteral 0x21d019008d8 <col:38> 'int' 1
|   | `-CompoundStmt 0x21d01900a90 <col:42, line:1165:5>
|   |   |-CallExpr 0x21d01900a20 <line:1163:9, col:45> 'int'
|   |   | |-ImplicitCastExpr 0x21d01900a08 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x21d01900998 <col:9> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x21d01900a60 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x21d01900a48 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x21d019009b8 <col:16> 'char [27]' lvalue "Incorrect callback counts\n"
|   |   `-GotoStmt 0x21d01900a78 <line:1164:9, col:14> 'end' 0x21d018fec90
|   |-IfStmt 0x21d01900e18 <line:1174:5, line:1178:5>
|   | |-BinaryOperator 0x21d01900d40 <line:1174:9, col:16> 'int' '=='
|   | | |-ImplicitCastExpr 0x21d01900d28 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x21d01900ce0 <col:9> 'int' lvalue ParmVar 0x21d018fe250 'tst' 'int'
|   | | `-IntegerLiteral 0x21d01900d00 <col:16> 'int' 1
|   | `-CompoundStmt 0x21d01900df8 <col:19, line:1178:5>
|   |   |-BinaryOperator 0x21d01900dc0 <line:1176:9, col:22> 'int' '='
|   |   | |-DeclRefExpr 0x21d01900d60 <col:9> 'int' lvalue Var 0x21d018fe680 'testresult' 'int'
|   |   | `-IntegerLiteral 0x21d01900d98 <col:22> 'int' 1
|   |   `-GotoStmt 0x21d01900de0 <line:1177:9, col:14> 'end' 0x21d018fec90
|   |-IfStmt 0x21d018f9028 <line:1180:5, line:1185:5>
|   | |-OpaqueValueExpr 0x21d018f9010 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x21d018f8ff0 <line:1182:62, line:1185:5>
|   |   |-CallExpr 0x21d018f8f80 <line:1183:9, col:55> 'int'
|   |   | |-ImplicitCastExpr 0x21d018f8f68 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x21d01900f60 <col:9> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x21d018f8fc0 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x21d018f8fa8 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x21d01900f80 <col:16> 'char [37]' lvalue "Cannot create resumption connection\n"
|   |   `-GotoStmt 0x21d018f8fd8 <line:1184:9, col:14> 'end' 0x21d018fec90
|   |-IfStmt 0x21d018f93c0 <line:1191:5, line:1197:5>
|   | |-BinaryOperator 0x21d018f9280 <line:1191:9, line:1194:30> 'int' '||'
|   | | |-BinaryOperator 0x21d018f91e0 <line:1191:9, line:1193:28> 'int' '||'
|   | | | |-BinaryOperator 0x21d018f9140 <line:1191:9, line:1192:31> 'int' '||'
|   | | | | |-BinaryOperator 0x21d018f90a0 <line:1191:9, col:22> 'int' '!='
|   | | | | | |-ImplicitCastExpr 0x21d018f9088 <col:9> 'int' <LValueToRValue>
|   | | | | | | `-DeclRefExpr 0x21d018f9040 <col:9> 'int' lvalue Var 0x21d0186aaf8 'clntaddcb' 'int'
|   | | | | | `-IntegerLiteral 0x21d018f9060 <col:22> 'int' 2
|   | | | | `-BinaryOperator 0x21d018f9120 <line:1192:16, col:31> 'int' '!='
|   | | | |   |-ImplicitCastExpr 0x21d018f9108 <col:16> 'int' <LValueToRValue>
|   | | | |   | `-DeclRefExpr 0x21d018f90c0 <col:16> 'int' lvalue Var 0x21d0186abb8 'clntparsecb' 'int'
|   | | | |   `-IntegerLiteral 0x21d018f90e0 <col:31> 'int' 1
|   | | | `-BinaryOperator 0x21d018f91c0 <line:1193:16, col:28> 'int' '!='
|   | | |   |-ImplicitCastExpr 0x21d018f91a8 <col:16> 'int' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x21d018f9160 <col:16> 'int' lvalue Var 0x21d0186ac78 'srvaddcb' 'int'
|   | | |   `-IntegerLiteral 0x21d018f9180 <col:28> 'int' 1
|   | | `-BinaryOperator 0x21d018f9260 <line:1194:16, col:30> 'int' '!='
|   | |   |-ImplicitCastExpr 0x21d018f9248 <col:16> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x21d018f9200 <col:16> 'int' lvalue Var 0x21d0186ad38 'srvparsecb' 'int'
|   | |   `-IntegerLiteral 0x21d018f9220 <col:30> 'int' 1
|   | `-CompoundStmt 0x21d018f93a0 <col:33, line:1197:5>
|   |   |-CallExpr 0x21d018f9330 <line:1195:9, col:56> 'int'
|   |   | |-ImplicitCastExpr 0x21d018f9318 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x21d018f92a0 <col:9> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x21d018f9370 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x21d018f9358 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x21d018f92c0 <col:16> 'char [38]' lvalue "Incorrect resumption callback counts\n"
|   |   `-GotoStmt 0x21d018f9388 <line:1196:9, col:14> 'end' 0x21d018fec90
|   |-BinaryOperator 0x21d018f9420 <line:1199:5, col:18> 'int' '='
|   | |-DeclRefExpr 0x21d018f93d8 <col:5> 'int' lvalue Var 0x21d018fe680 'testresult' 'int'
|   | `-IntegerLiteral 0x21d018f93f8 <col:18> 'int' 1
|   |-LabelStmt 0x21d018f9468 <line:1201:1, col:4> 'end'
|   | `-NullStmt 0x21d018f9460 <col:4>
|   `-ReturnStmt 0x21d018f9558 <line:1208:5, col:12>
|     `-ImplicitCastExpr 0x21d018f9540 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x21d018f9520 <col:12> 'int' lvalue Var 0x21d018fe680 'testresult' 'int'
|-FunctionDecl 0x21d018f96e8 <line:1211:1, line:1263:1> line:1211:12 used test_ssl_pending 'int (int)' static
| |-ParmVarDecl 0x21d018f9638 <col:29, col:33> col:33 used tst 'int'
| `-CompoundStmt 0x21d01901fe0 <line:1212:1, line:1263:1>
|   |-DeclStmt 0x21d018f9a70 <line:1215:5, col:23>
|   | `-VarDecl 0x21d018f99e0 <col:5, col:22> col:9 used testresult 'int' cinit
|   |   `-IntegerLiteral 0x21d018f9a48 <col:22> 'int' 0
|   |-DeclStmt 0x21d018f9ba0 <line:1216:5, col:34>
|   | `-VarDecl 0x21d018f9ad8 <col:5, col:18> col:10 used msg 'char [15]' cinit
|   |   `-StringLiteral 0x21d018f9b78 <col:18> 'char [15]' "A test message"
|   |-DeclStmt 0x21d018f9cc0 <line:1217:5, col:16>
|   | `-VarDecl 0x21d018f9c58 <col:5, col:15> col:10 used buf 'char [5]'
|   |-DeclStmt 0x21d018f9d50 <line:1218:5, col:19>
|   | `-VarDecl 0x21d018f9ce8 <col:5, col:12> col:12 used written 'size_t':'unsigned long long'
|   |-IfStmt 0x21d01901360 <line:1220:5, line:1238:5> has_else
|   | |-BinaryOperator 0x21d018f9dc8 <line:1220:9, col:16> 'int' '=='
|   | | |-ImplicitCastExpr 0x21d018f9db0 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x21d018f9d68 <col:9> 'int' lvalue ParmVar 0x21d018f9638 'tst' 'int'
|   | | `-IntegerLiteral 0x21d018f9d88 <col:16> 'int' 0
|   | |-CompoundStmt 0x21d019010f8 <col:19, line:1227:5>
|   | | `-IfStmt 0x21d019010e0 <line:1221:9, line:1226:9>
|   | |   |-OpaqueValueExpr 0x21d019010c8 <<invalid sloc>> '_Bool'
|   | |   `-CompoundStmt 0x21d019010a8 <line:1223:64, line:1226:9>
|   | |     |-CallExpr 0x21d01900fe8 <line:1224:13, col:52> 'int'
|   | |     | |-ImplicitCastExpr 0x21d01900fd0 <col:13> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   | |     | | `-DeclRefExpr 0x21d018f9ed8 <col:13> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   | |     | `-ImplicitCastExpr 0x21d01901028 <col:20> 'const char *' <NoOp>
|   | |     |   `-ImplicitCastExpr 0x21d01901010 <col:20> 'char *' <ArrayToPointerDecay>
|   | |     |     `-StringLiteral 0x21d018f9ef8 <col:20> 'char [30]' lvalue "Failed creating SSL_CTX pair\n"
|   | |     `-GotoStmt 0x21d01901090 <line:1225:13, col:18> 'end' 0x21d01901040
|   | `-CompoundStmt 0x21d01901348 <line:1227:12, line:1238:5>
|   |   `-IfStmt 0x21d01901330 <line:1229:9, line:1234:9>
|   |     |-OpaqueValueExpr 0x21d01901318 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x21d019012f8 <line:1231:64, line:1234:9>
|   |       |-CallExpr 0x21d01901288 <line:1232:13, col:52> 'int'
|   |       | |-ImplicitCastExpr 0x21d01901270 <col:13> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x21d01901200 <col:13> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |       | `-ImplicitCastExpr 0x21d019012c8 <col:20> 'const char *' <NoOp>
|   |       |   `-ImplicitCastExpr 0x21d019012b0 <col:20> 'char *' <ArrayToPointerDecay>
|   |       |     `-StringLiteral 0x21d01901220 <col:20> 'char [30]' lvalue "Failed creating SSL_CTX pair\n"
|   |       `-GotoStmt 0x21d019012e0 <line:1233:13, col:18> 'end' 0x21d01901040
|   |-IfStmt 0x21d019015c8 <line:1240:5, line:1244:5>
|   | |-OpaqueValueExpr 0x21d019015b0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x21d01901590 <line:1241:62, line:1244:5>
|   |   |-CallExpr 0x21d01901520 <line:1242:13, col:50> 'int'
|   |   | |-ImplicitCastExpr 0x21d01901508 <col:13> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x21d01901498 <col:13> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x21d01901560 <col:20> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x21d01901548 <col:20> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x21d019014b8 <col:20> 'char [28]' lvalue "Failed creating connection\n"
|   |   `-GotoStmt 0x21d01901578 <line:1243:9, col:14> 'end' 0x21d01901040
|   |-IfStmt 0x21d01901df8 <line:1247:5, line:1252:5>
|   | |-OpaqueValueExpr 0x21d01901de0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x21d01901dc0 <line:1249:72, line:1252:5>
|   |   |-CallExpr 0x21d01901d50 <line:1250:9, col:47> 'int'
|   |   | |-ImplicitCastExpr 0x21d01901d38 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x21d01901cc8 <col:9> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x21d01901d90 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x21d01901d78 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x21d01901ce8 <col:16> 'char [29]' lvalue "Failed checking SSL_pending\n"
|   |   `-GotoStmt 0x21d01901da8 <line:1251:9, col:14> 'end' 0x21d01901040
|   |-BinaryOperator 0x21d01901e70 <line:1254:5, col:18> 'int' '='
|   | |-DeclRefExpr 0x21d01901e10 <col:5> 'int' lvalue Var 0x21d018f99e0 'testresult' 'int'
|   | `-IntegerLiteral 0x21d01901e48 <col:18> 'int' 1
|   |-LabelStmt 0x21d01901eb8 <line:1256:2, col:5> 'end'
|   | `-NullStmt 0x21d01901eb0 <col:5>
|   `-ReturnStmt 0x21d01901f68 <line:1262:5, col:12>
|     `-ImplicitCastExpr 0x21d01901f50 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x21d01901f30 <col:12> 'int' lvalue Var 0x21d018f99e0 'testresult' 'int'
`-FunctionDecl 0x21d01902290 <line:1266:1, line:1318:1> line:1266:5 main 'int (int, char **)'
  |-ParmVarDecl 0x21d01902058 <col:10, col:14> col:14 used argc 'int'
  |-ParmVarDecl 0x21d01902140 <col:20, col:31> col:26 used argv 'char **':'char **'
  `-CompoundStmt 0x21d01904580 <line:1267:1, line:1318:1>
    |-DeclStmt 0x21d01902488 <line:1269:5, col:23>
    | `-VarDecl 0x21d019023f8 <col:5, col:22> col:9 used testresult 'int' cinit
    |   `-IntegerLiteral 0x21d01902460 <col:22> 'int' 1
    |-IfStmt 0x21d01902650 <line:1271:5, line:1274:5>
    | |-BinaryOperator 0x21d01902500 <line:1271:9, col:17> 'int' '!='
    | | |-ImplicitCastExpr 0x21d019024e8 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x21d019024a0 <col:9> 'int' lvalue ParmVar 0x21d01902058 'argc' 'int'
    | | `-IntegerLiteral 0x21d019024c0 <col:17> 'int' 3
    | `-CompoundStmt 0x21d01902630 <col:20, line:1274:5>
    |   |-CallExpr 0x21d019025a0 <line:1272:9, col:42> 'int'
    |   | |-ImplicitCastExpr 0x21d01902588 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x21d01902520 <col:9> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
    |   | `-ImplicitCastExpr 0x21d019025e0 <col:16> 'const char *' <NoOp>
    |   |   `-ImplicitCastExpr 0x21d019025c8 <col:16> 'char *' <ArrayToPointerDecay>
    |   |     `-StringLiteral 0x21d01902540 <col:16> 'char [24]' lvalue "Invalid argument count\n"
    |   `-ReturnStmt 0x21d01902620 <line:1273:9, col:16>
    |     `-IntegerLiteral 0x21d019025f8 <col:16> 'int' 1
    |-BinaryOperator 0x21d01902720 <line:1276:5, col:18> 'char *' '='
    | |-DeclRefExpr 0x21d01902668 <col:5> 'char *' lvalue Var 0x21d018a4fd8 'cert' 'char *'
    | `-ImplicitCastExpr 0x21d01902708 <col:12, col:18> 'char *' <LValueToRValue>
    |   `-ArraySubscriptExpr 0x21d019026e8 <col:12, col:18> 'char *' lvalue
    |     |-ImplicitCastExpr 0x21d019026d0 <col:12> 'char **':'char **' <LValueToRValue>
    |     | `-DeclRefExpr 0x21d01902688 <col:12> 'char **':'char **' lvalue ParmVar 0x21d01902140 'argv' 'char **':'char **'
    |     `-IntegerLiteral 0x21d019026a8 <col:17> 'int' 1
    |-BinaryOperator 0x21d019027f8 <line:1277:5, col:21> 'char *' '='
    | |-DeclRefExpr 0x21d01902740 <col:5> 'char *' lvalue Var 0x21d018a0100 'privkey' 'char *'
    | `-ImplicitCastExpr 0x21d019027e0 <col:15, col:21> 'char *' <LValueToRValue>
    |   `-ArraySubscriptExpr 0x21d019027c0 <col:15, col:21> 'char *' lvalue
    |     |-ImplicitCastExpr 0x21d019027a8 <col:15> 'char **':'char **' <LValueToRValue>
    |     | `-DeclRefExpr 0x21d01902760 <col:15> 'char **':'char **' lvalue ParmVar 0x21d01902140 'argv' 'char **':'char **'
    |     `-IntegerLiteral 0x21d01902780 <col:20> 'int' 2
    |-CallExpr 0x21d01902a78 <line:1281:5, col:27> 'int'
    | |-ImplicitCastExpr 0x21d01902a60 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x21d01902a18 <col:5> 'int ()' Function 0x21d01902950 'CRYPTO_set_mem_debug' 'int ()'
    | `-IntegerLiteral 0x21d01902a38 <col:26> 'int' 1
    |-CallExpr 0x21d01902c90 <.//openssl//file_jk/before\test/testutil.h:76:34, col:72> 'void'
    | |-ImplicitCastExpr 0x21d01902c78 <col:34> 'void (*)(const char *, int (*)())' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x21d01902bb0 <col:34> 'void (const char *, int (*)())' Function 0x21d018a4548 'add_test' 'void (const char *, int (*)())'
    | |-ImplicitCastExpr 0x21d01902cd8 <<scratch space>:294:1> 'const char *' <NoOp>
    | | `-ImplicitCastExpr 0x21d01902cc0 <col:1> 'char *' <ArrayToPointerDecay>
    | |   `-StringLiteral 0x21d01902bd0 <col:1> 'char [23]' lvalue "test_large_message_tls"
    | `-ImplicitCastExpr 0x21d01902d30 <.//openssl//file_jk/before\test\sslapitest.c:1284:14> 'int (*)()' <BitCast>
    |   `-ImplicitCastExpr 0x21d01902d18 <col:14> 'int (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x21d01902c00 <col:14> 'int (void)' Function 0x21d018a6890 'test_large_message_tls' 'int (void)'
    |-CallExpr 0x21d01902e20 <.//openssl//file_jk/before\test/testutil.h:76:34, col:72> 'void'
    | |-ImplicitCastExpr 0x21d01902e08 <col:34> 'void (*)(const char *, int (*)())' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x21d01902d48 <col:34> 'void (const char *, int (*)())' Function 0x21d018a4548 'add_test' 'void (const char *, int (*)())'
    | |-ImplicitCastExpr 0x21d01902e68 <<scratch space>:295:1> 'const char *' <NoOp>
    | | `-ImplicitCastExpr 0x21d01902e50 <col:1> 'char *' <ArrayToPointerDecay>
    | |   `-StringLiteral 0x21d01902da8 <col:1> 'char [34]' lvalue "test_large_message_tls_read_ahead"
    | `-ImplicitCastExpr 0x21d01902e98 <.//openssl//file_jk/before\test\sslapitest.c:1285:14> 'int (*)()' <BitCast>
    |   `-ImplicitCastExpr 0x21d01902e80 <col:14> 'int (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x21d01902de8 <col:14> 'int (void)' Function 0x21d018a6cb0 'test_large_message_tls_read_ahead' 'int (void)'
    |-CallExpr 0x21d01902f38 <.//openssl//file_jk/before\test/testutil.h:76:34, col:72> 'void'
    | |-ImplicitCastExpr 0x21d01902f20 <col:34> 'void (*)(const char *, int (*)())' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x21d01902eb0 <col:34> 'void (const char *, int (*)())' Function 0x21d018a4548 'add_test' 'void (const char *, int (*)())'
    | |-ImplicitCastExpr 0x21d01902f80 <<scratch space>:296:1> 'const char *' <NoOp>
    | | `-ImplicitCastExpr 0x21d01902f68 <col:1> 'char *' <ArrayToPointerDecay>
    | |   `-StringLiteral 0x21d01902ed0 <col:1> 'char [24]' lvalue "test_large_message_dtls"
    | `-ImplicitCastExpr 0x21d01902fb0 <.//openssl//file_jk/before\test\sslapitest.c:1287:14> 'int (*)()' <BitCast>
    |   `-ImplicitCastExpr 0x21d01902f98 <col:14> 'int (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x21d01902f00 <col:14> 'int (void)' Function 0x21d018a6ef0 'test_large_message_dtls' 'int (void)'
    |-CallExpr 0x21d019070b8 <.//openssl//file_jk/before\test/testutil.h:76:34, col:72> 'void'
    | |-ImplicitCastExpr 0x21d019070a0 <col:34> 'void (*)(const char *, int (*)())' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x21d01907030 <col:34> 'void (const char *, int (*)())' Function 0x21d018a4548 'add_test' 'void (const char *, int (*)())'
    | |-ImplicitCastExpr 0x21d01907100 <<scratch space>:297:1> 'const char *' <NoOp>
    | | `-ImplicitCastExpr 0x21d019070e8 <col:1> 'char *' <ArrayToPointerDecay>
    | |   `-StringLiteral 0x21d01907050 <col:1> 'char [24]' lvalue "test_tlsext_status_type"
    | `-ImplicitCastExpr 0x21d01907130 <.//openssl//file_jk/before\test\sslapitest.c:1290:14> 'int (*)()' <BitCast>
    |   `-ImplicitCastExpr 0x21d01907118 <col:14> 'int (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x21d01907080 <col:14> 'int (void)' Function 0x21d0184f158 'test_tlsext_status_type' 'int (void)'
    |-CallExpr 0x21d019071d8 <.//openssl//file_jk/before\test/testutil.h:76:34, col:72> 'void'
    | |-ImplicitCastExpr 0x21d019071c0 <col:34> 'void (*)(const char *, int (*)())' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x21d01907148 <col:34> 'void (const char *, int (*)())' Function 0x21d018a4548 'add_test' 'void (const char *, int (*)())'
    | |-ImplicitCastExpr 0x21d01907220 <<scratch space>:298:1> 'const char *' <NoOp>
    | | `-ImplicitCastExpr 0x21d01907208 <col:1> 'char *' <ArrayToPointerDecay>
    | |   `-StringLiteral 0x21d01907168 <col:1> 'char [33]' lvalue "test_session_with_only_int_cache"
    | `-ImplicitCastExpr 0x21d01907250 <.//openssl//file_jk/before\test\sslapitest.c:1292:14> 'int (*)()' <BitCast>
    |   `-ImplicitCastExpr 0x21d01907238 <col:14> 'int (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x21d019071a0 <col:14> 'int (void)' Function 0x21d018586b0 'test_session_with_only_int_cache' 'int (void)'
    |-CallExpr 0x21d019072f8 <.//openssl//file_jk/before\test/testutil.h:76:34, col:72> 'void'
    | |-ImplicitCastExpr 0x21d019072e0 <col:34> 'void (*)(const char *, int (*)())' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x21d01907268 <col:34> 'void (const char *, int (*)())' Function 0x21d018a4548 'add_test' 'void (const char *, int (*)())'
    | |-ImplicitCastExpr 0x21d01907340 <<scratch space>:299:1> 'const char *' <NoOp>
    | | `-ImplicitCastExpr 0x21d01907328 <col:1> 'char *' <ArrayToPointerDecay>
    | |   `-StringLiteral 0x21d01907288 <col:1> 'char [33]' lvalue "test_session_with_only_ext_cache"
    | `-ImplicitCastExpr 0x21d01907370 <.//openssl//file_jk/before\test\sslapitest.c:1293:14> 'int (*)()' <BitCast>
    |   `-ImplicitCastExpr 0x21d01907358 <col:14> 'int (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x21d019072c0 <col:14> 'int (void)' Function 0x21d01858e28 'test_session_with_only_ext_cache' 'int (void)'
    |-CallExpr 0x21d01907418 <.//openssl//file_jk/before\test/testutil.h:76:34, col:72> 'void'
    | |-ImplicitCastExpr 0x21d01907400 <col:34> 'void (*)(const char *, int (*)())' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x21d01907388 <col:34> 'void (const char *, int (*)())' Function 0x21d018a4548 'add_test' 'void (const char *, int (*)())'
    | |-ImplicitCastExpr 0x21d01907460 <<scratch space>:300:1> 'const char *' <NoOp>
    | | `-ImplicitCastExpr 0x21d01907448 <col:1> 'char *' <ArrayToPointerDecay>
    | |   `-StringLiteral 0x21d019073a8 <col:1> 'char [29]' lvalue "test_session_with_both_cache"
    | `-ImplicitCastExpr 0x21d01907490 <.//openssl//file_jk/before\test\sslapitest.c:1294:14> 'int (*)()' <BitCast>
    |   `-ImplicitCastExpr 0x21d01907478 <col:14> 'int (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x21d019073e0 <col:14> 'int (void)' Function 0x21d0185a4a8 'test_session_with_both_cache' 'int (void)'
    |-CallExpr 0x21d019076e0 <.//openssl//file_jk/before\test/testutil.h:83:3, col:51> 'void'
    | |-ImplicitCastExpr 0x21d019076c8 <col:3> 'void (*)(const char *, int (*)(int), int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x21d019074a8 <col:3> 'void (const char *, int (*)(int), int)' Function 0x21d018a4a18 'add_all_tests' 'void (const char *, int (*)(int), int)'
    | |-ImplicitCastExpr 0x21d01907730 <<scratch space>:2:1> 'const char *' <NoOp>
    | | `-ImplicitCastExpr 0x21d01907718 <col:1> 'char *' <ArrayToPointerDecay>
    | |   `-StringLiteral 0x21d01907508 <col:1> 'char [17]' lvalue "test_ssl_set_bio"
    | |-ImplicitCastExpr 0x21d01907748 <.//openssl//file_jk/before\test\sslapitest.c:1295:19> 'int (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x21d01907530 <col:19> 'int (int)' Function 0x21d0185e190 'test_ssl_set_bio' 'int (int)'
    | `-ParenExpr 0x21d01907650 <line:658:33, col:47> 'int'
    |   `-BinaryOperator 0x21d01907630 <col:34, col:46> 'int' '*'
    |     |-BinaryOperator 0x21d019075e8 <col:34, col:42> 'int' '*'
    |     | |-BinaryOperator 0x21d019075a0 <col:34, col:38> 'int' '*'
    |     | | |-IntegerLiteral 0x21d01907550 <col:34> 'int' 3
    |     | | `-IntegerLiteral 0x21d01907578 <col:38> 'int' 3
    |     | `-IntegerLiteral 0x21d019075c0 <col:42> 'int' 3
    |     `-IntegerLiteral 0x21d01907608 <col:46> 'int' 3
    |-CallExpr 0x21d019077f0 <.//openssl//file_jk/before\test/testutil.h:76:34, col:72> 'void'
    | |-ImplicitCastExpr 0x21d019077d8 <col:34> 'void (*)(const char *, int (*)())' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x21d01907760 <col:34> 'void (const char *, int (*)())' Function 0x21d018a4548 'add_test' 'void (const char *, int (*)())'
    | |-ImplicitCastExpr 0x21d01907838 <<scratch space>:3:1> 'const char *' <NoOp>
    | | `-ImplicitCastExpr 0x21d01907820 <col:1> 'char *' <ArrayToPointerDecay>
    | |   `-StringLiteral 0x21d01907780 <col:1> 'char [26]' lvalue "test_ssl_bio_pop_next_bio"
    | `-ImplicitCastExpr 0x21d01907868 <.//openssl//file_jk/before\test\sslapitest.c:1296:14> 'int (*)()' <BitCast>
    |   `-ImplicitCastExpr 0x21d01907850 <col:14> 'int (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x21d019077b8 <col:14> 'int (void)' Function 0x21d01864140 'test_ssl_bio_pop_next_bio' 'int (void)'
    |-CallExpr 0x21d01907908 <.//openssl//file_jk/before\test/testutil.h:76:34, col:72> 'void'
    | |-ImplicitCastExpr 0x21d019078f0 <col:34> 'void (*)(const char *, int (*)())' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x21d01907880 <col:34> 'void (const char *, int (*)())' Function 0x21d018a4548 'add_test' 'void (const char *, int (*)())'
    | |-ImplicitCastExpr 0x21d01907950 <<scratch space>:4:1> 'const char *' <NoOp>
    | | `-ImplicitCastExpr 0x21d01907938 <col:1> 'char *' <ArrayToPointerDecay>
    | |   `-StringLiteral 0x21d019078a0 <col:1> 'char [25]' lvalue "test_ssl_bio_pop_ssl_bio"
    | `-ImplicitCastExpr 0x21d01907980 <.//openssl//file_jk/before\test\sslapitest.c:1297:14> 'int (*)()' <BitCast>
    |   `-ImplicitCastExpr 0x21d01907968 <col:14> 'int (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x21d019078d0 <col:14> 'int (void)' Function 0x21d01864820 'test_ssl_bio_pop_ssl_bio' 'int (void)'
    |-CallExpr 0x21d01907a20 <.//openssl//file_jk/before\test/testutil.h:76:34, col:72> 'void'
    | |-ImplicitCastExpr 0x21d01907a08 <col:34> 'void (*)(const char *, int (*)())' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x21d01907998 <col:34> 'void (const char *, int (*)())' Function 0x21d018a4548 'add_test' 'void (const char *, int (*)())'
    | |-ImplicitCastExpr 0x21d01907a68 <<scratch space>:5:1> 'const char *' <NoOp>
    | | `-ImplicitCastExpr 0x21d01907a50 <col:1> 'char *' <ArrayToPointerDecay>
    | |   `-StringLiteral 0x21d019079b8 <col:1> 'char [25]' lvalue "test_ssl_bio_change_rbio"
    | `-ImplicitCastExpr 0x21d01907a98 <.//openssl//file_jk/before\test\sslapitest.c:1298:14> 'int (*)()' <BitCast>
    |   `-ImplicitCastExpr 0x21d01907a80 <col:14> 'int (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x21d019079e8 <col:14> 'int (void)' Function 0x21d01864e80 'test_ssl_bio_change_rbio' 'int (void)'
    |-CallExpr 0x21d01907b38 <.//openssl//file_jk/before\test/testutil.h:76:34, col:72> 'void'
    | |-ImplicitCastExpr 0x21d01907b20 <col:34> 'void (*)(const char *, int (*)())' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x21d01907ab0 <col:34> 'void (const char *, int (*)())' Function 0x21d018a4548 'add_test' 'void (const char *, int (*)())'
    | |-ImplicitCastExpr 0x21d01907b80 <<scratch space>:6:1> 'const char *' <NoOp>
    | | `-ImplicitCastExpr 0x21d01907b68 <col:1> 'char *' <ArrayToPointerDecay>
    | |   `-StringLiteral 0x21d01907ad0 <col:1> 'char [25]' lvalue "test_ssl_bio_change_wbio"
    | `-ImplicitCastExpr 0x21d01907bb0 <.//openssl//file_jk/before\test\sslapitest.c:1299:14> 'int (*)()' <BitCast>
    |   `-ImplicitCastExpr 0x21d01907b98 <col:14> 'int (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x21d01907b00 <col:14> 'int (void)' Function 0x21d018664e8 'test_ssl_bio_change_wbio' 'int (void)'
    |-CallExpr 0x21d01907d28 <.//openssl//file_jk/before\test/testutil.h:83:3, col:51> 'void'
    | |-ImplicitCastExpr 0x21d01907d10 <col:3> 'void (*)(const char *, int (*)(int), int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x21d01907bc8 <col:3> 'void (const char *, int (*)(int), int)' Function 0x21d018a4a18 'add_all_tests' 'void (const char *, int (*)(int), int)'
    | |-ImplicitCastExpr 0x21d01907d78 <<scratch space>:7:1> 'const char *' <NoOp>
    | | `-ImplicitCastExpr 0x21d01907d60 <col:1> 'char *' <ArrayToPointerDecay>
    | |   `-StringLiteral 0x21d01907be8 <col:1> 'char [17]' lvalue "test_set_sigalgs"
    | |-ImplicitCastExpr 0x21d01907d90 <.//openssl//file_jk/before\test\sslapitest.c:1300:19> 'int (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x21d01907c10 <col:19> 'int (int)' Function 0x21d01868f18 'test_set_sigalgs' 'int (int)'
    | `-BinaryOperator 0x21d01907cf0 <col:37, col:63> 'int' '*'
    |   |-CallExpr 0x21d01907c88 <col:37, col:59> 'int'
    |   | |-ImplicitCastExpr 0x21d01907c70 <col:37> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x21d01907c30 <col:37> 'int ()' Function 0x21d01867488 'OSSL_NELEM' 'int ()'
    |   | `-ImplicitCastExpr 0x21d01907cb0 <col:48> 'const sigalgs_list *' <ArrayToPointerDecay>
    |   |   `-DeclRefExpr 0x21d01907c50 <col:48> 'const sigalgs_list [14]' lvalue Var 0x21d018673d8 'testsigalgs' 'const sigalgs_list [14]'
    |   `-IntegerLiteral 0x21d01907cc8 <col:63> 'int' 2
    |-CallExpr 0x21d01907e50 <.//openssl//file_jk/before\test/testutil.h:83:3, col:51> 'void'
    | |-ImplicitCastExpr 0x21d01907e38 <col:3> 'void (*)(const char *, int (*)(int), int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x21d01907da8 <col:3> 'void (const char *, int (*)(int), int)' Function 0x21d018a4a18 'add_all_tests' 'void (const char *, int (*)(int), int)'
    | |-ImplicitCastExpr 0x21d01907ea0 <<scratch space>:8:1> 'const char *' <NoOp>
    | | `-ImplicitCastExpr 0x21d01907e88 <col:1> 'char *' <ArrayToPointerDecay>
    | |   `-StringLiteral 0x21d01907dc8 <col:1> 'char [17]' lvalue "test_custom_exts"
    | |-ImplicitCastExpr 0x21d01907eb8 <.//openssl//file_jk/before\test\sslapitest.c:1301:19> 'int (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x21d01907df0 <col:19> 'int (int)' Function 0x21d018fe300 'test_custom_exts' 'int (int)'
    | `-IntegerLiteral 0x21d01907e10 <col:37> 'int' 2
    |-CallExpr 0x21d01907f78 <.//openssl//file_jk/before\test/testutil.h:83:3, col:51> 'void'
    | |-ImplicitCastExpr 0x21d01907f60 <col:3> 'void (*)(const char *, int (*)(int), int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x21d01907ed0 <col:3> 'void (const char *, int (*)(int), int)' Function 0x21d018a4a18 'add_all_tests' 'void (const char *, int (*)(int), int)'
    | |-ImplicitCastExpr 0x21d01907fc8 <<scratch space>:9:1> 'const char *' <NoOp>
    | | `-ImplicitCastExpr 0x21d01907fb0 <col:1> 'char *' <ArrayToPointerDecay>
    | |   `-StringLiteral 0x21d01907ef0 <col:1> 'char [17]' lvalue "test_ssl_pending"
    | |-ImplicitCastExpr 0x21d01907fe0 <.//openssl//file_jk/before\test\sslapitest.c:1302:19> 'int (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x21d01907f18 <col:19> 'int (int)' Function 0x21d018f96e8 'test_ssl_pending' 'int (int)'
    | `-IntegerLiteral 0x21d01907f38 <col:37> 'int' 2
    |-BinaryOperator 0x21d01904138 <line:1304:5, col:35> 'int' '='
    | |-DeclRefExpr 0x21d01907ff8 <col:5> 'int' lvalue Var 0x21d019023f8 'testresult' 'int'
    | `-CallExpr 0x21d019040e0 <col:18, col:35> 'int'
    |   |-ImplicitCastExpr 0x21d019040c8 <col:18> 'int (*)(const char *)' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x21d01904000 <col:18> 'int (const char *)' Function 0x21d018a4be0 'run_tests' 'int (const char *)'
    |   `-ImplicitCastExpr 0x21d01904120 <col:28, col:34> 'const char *' <NoOp>
    |     `-ImplicitCastExpr 0x21d01904108 <col:28, col:34> 'char *' <LValueToRValue>
    |       `-ArraySubscriptExpr 0x21d01904080 <col:28, col:34> 'char *' lvalue
    |         |-ImplicitCastExpr 0x21d01904068 <col:28> 'char **':'char **' <LValueToRValue>
    |         | `-DeclRefExpr 0x21d01904020 <col:28> 'char **':'char **' lvalue ParmVar 0x21d01902140 'argv' 'char **':'char **'
    |         `-IntegerLiteral 0x21d01904040 <col:33> 'int' 0
    |-CallExpr 0x21d019041c0 <line:1306:5, col:31> 'void'
    | `-ImplicitCastExpr 0x21d019041a8 <col:5> 'void (*)(void)' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x21d01904158 <col:5> 'void (void)' Function 0x21d018a3a68 'bio_s_mempacket_test_free' 'void (void)'
    |-IfStmt 0x21d01904398 <line:1309:5, line:1310:22>
    | |-OpaqueValueExpr 0x21d01904380 <<invalid sloc>> '_Bool'
    | `-BinaryOperator 0x21d01904360 <col:9, col:22> 'int' '='
    |   |-DeclRefExpr 0x21d01904318 <col:9> 'int' lvalue Var 0x21d019023f8 'testresult' 'int'
    |   `-IntegerLiteral 0x21d01904338 <col:22> 'int' 1
    |-IfStmt 0x21d01904520 <line:1314:5, line:1315:24>
    | |-UnaryOperator 0x21d01904408 <line:1314:9, col:10> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x21d019043f0 <col:10> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x21d019043d0 <col:10> 'int' lvalue Var 0x21d019023f8 'testresult' 'int'
    | `-CallExpr 0x21d019044c8 <line:1315:9, col:24> 'int'
    |   |-ImplicitCastExpr 0x21d019044b0 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x21d01904420 <col:9> 'int (const char *, ...)' Function 0x21d0189d288 'printf' 'int (const char *, ...)'
    |   `-ImplicitCastExpr 0x21d01904508 <col:16> 'const char *' <NoOp>
    |     `-ImplicitCastExpr 0x21d019044f0 <col:16> 'char *' <ArrayToPointerDecay>
    |       `-StringLiteral 0x21d01904478 <col:16> 'char [6]' lvalue "PASS\n"
    `-ReturnStmt 0x21d01904570 <line:1317:5, col:12>
      `-ImplicitCastExpr 0x21d01904558 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x21d01904538 <col:12> 'int' lvalue Var 0x21d019023f8 'testresult' 'int'
